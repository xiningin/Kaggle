{"cell_type":{"cc547a3d":"code","5e012a48":"code","715e6494":"code","f90a943e":"code","df2bf70b":"code","59ccb220":"code","4aec620b":"code","dd7f6849":"code","f3fd492a":"code","c1abe57a":"code","22c128a6":"code","3e2e2882":"code","acfb4121":"code","a53e277b":"code","b396b0ce":"code","25670651":"code","1eda29e8":"code","d0882599":"code","80cc6f14":"code","e8c7f144":"code","95c1695a":"code","f5097466":"code","97833e0a":"code","5086e07d":"code","327c0c9f":"code","eb862c3f":"code","89dfd19c":"code","d2efb4a1":"code","3402ed36":"code","fc12dd24":"code","8683ff8f":"code","2ce86096":"code","d7f1f1de":"code","11d012e0":"code","69069d54":"code","13b58783":"code","233df6b4":"code","68e6048c":"code","d922d672":"code","87c62f0f":"code","3ebab5ae":"code","d00eb117":"code","a0ff2dfc":"code","f0c1c6fa":"code","8a3d8311":"code","5d2d3107":"code","b33500c8":"code","880c2fcb":"code","091e895f":"code","d2e37d0a":"code","998a9938":"code","485a5185":"code","d90666ab":"code","26c712ea":"code","23cd89d7":"code","31415f5c":"code","77e369c2":"code","3c7d5763":"code","49cf77b2":"code","36e3c496":"code","4c12e2d4":"code","cd8e44b9":"code","f5b2e17d":"code","39b414c7":"code","096a8ec4":"code","61aedf23":"code","f8840975":"code","b9d04ee5":"code","ef29b12d":"code","1154aa43":"code","a6ae1327":"code","beff5979":"code","325bfcb9":"code","460aa086":"code","fe55bfde":"code","1bfad42b":"code","78de43e9":"code","3089f89e":"code","bcefa3f9":"code","29342784":"code","8b989b3a":"code","d7dbcfb8":"code","1dc9d433":"code","428fffce":"code","ad9cf25b":"code","dc1d4121":"code","cc2f0683":"code","4a846646":"code","3e93dd68":"code","2a532055":"code","85bd9909":"code","85ced307":"code","5fb14e6c":"code","abe0e252":"code","f1aee06a":"code","a41fadfc":"code","1169bfee":"code","c93fc579":"code","4260cfe1":"code","eddfb0f3":"code","86dfaad9":"code","466c382d":"code","5e93f037":"code","469c0fe3":"code","805062c2":"code","7a7e17e7":"code","1041a5a2":"code","62cba9ef":"code","f8d9d54a":"code","9df49594":"code","2f4bc3f4":"code","33add2b9":"code","89df48de":"code","3ec17618":"code","62358e16":"code","958282b9":"code","6374f8ff":"code","7cdd0154":"code","d46fe0c4":"code","168b684b":"code","f65fe159":"code","9f26357b":"code","bc354b9b":"code","cedee05c":"code","857b2089":"code","b903e55e":"code","24d2538b":"code","94ee7507":"code","3ad62d74":"code","5fa1a101":"code","2229f99b":"code","406901c0":"code","4a7263f6":"code","7e61b489":"code","f9b99d55":"code","01292211":"code","5f99e04e":"code","ae07cb6c":"code","65d959f8":"markdown","761a9988":"markdown","6403500b":"markdown","392a084c":"markdown","8ae6ef89":"markdown","c828df1f":"markdown","3fb1f2c2":"markdown","abc1a12c":"markdown","467d24b3":"markdown"},"source":{"cc547a3d":"from fbprophet import Prophet\nimport glob\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport datetime as dt\n\nplt.style.use('fivethirtyeight')","5e012a48":"#Gabungin CSV - Pakai Glob\npath = r'..\/input\/data-donasi\/Project-Machine-Learning-Forecasting-main\/Online Donation\/Guest\/Donasi'\nall_files_guest_donasi = glob.glob(path + \"\/*guest.csv\")\nprint(all_files_guest_donasi)\nprint(len(all_files_guest_donasi))","715e6494":"#Gabungin CSV - Pakai Glob\npath = r'..\/input\/data-donasi\/Project-Machine-Learning-Forecasting-main\/Online Donation\/Users\/Donasi'\nall_files_users_donasi = glob.glob(path + \"\/*users.csv\")\nprint(all_files_users_donasi)\nprint(len(all_files_users_donasi))","f90a943e":"#Gabungin CSV - Pakai Glob\npath = r'..\/input\/data-donasi\/Project-Machine-Learning-Forecasting-main\/Online Donation\/Users\/Zakat'\nall_files_users_zakat = glob.glob(path + \"\/*users.csv\")\nprint(all_files_users_zakat)\nprint(len(all_files_users_zakat))","df2bf70b":"df_guest_zakat = pd.read_csv('..\/input\/data-donasi\/Project-Machine-Learning-Forecasting-main\/Online Donation\/Guest\/Zakat\/Januari-sampai-desember-zakat-guest.csv')\ndf_guest_zakat","59ccb220":"df_guest_donasi = pd.concat((pd.read_csv(f, index_col=None, header=0) for f in all_files_guest_donasi), \n               axis = 0, ignore_index=True)","4aec620b":"df_guest_donasi","dd7f6849":"df_users_donasi = pd.concat((pd.read_csv(f, index_col=None, header=0) for f in all_files_users_donasi), \n               axis = 0, ignore_index=True)","f3fd492a":"df_users_donasi ","c1abe57a":"df_users_zakat = pd.concat((pd.read_csv(f, index_col=None, header=0) for f in all_files_users_zakat), \n               axis = 0, ignore_index=True)","22c128a6":"df_users_zakat","3e2e2882":"df_users_zakat.to_csv(\".\/users_zakat.csv\")\ndf_users_donasi.to_csv(\".\/users_donasi.csv\")\ndf_guest_zakat.to_csv(\".\/guest_zakat.csv\")\ndf_guest_donasi.to_csv(\".\/guest_donasi.csv\")","acfb4121":"print(df_users_zakat.tanggal.dtype)\nprint(df_users_donasi.tanggal.dtype)\nprint(df_guest_zakat.tanggal.dtype)\nprint(df_guest_donasi.tanggal.dtype)","a53e277b":"df_users_zakat.tanggal = pd.to_datetime(df_users_zakat.tanggal, format=\"%Y-%m-%d %H:%M:%S\")\ndf_users_donasi.tanggal = pd.to_datetime(df_users_donasi.tanggal, format=\"%Y-%m-%d %H:%M:%S\")\ndf_guest_zakat.tanggal = pd.to_datetime(df_guest_zakat.tanggal, format=\"%Y-%m-%d %H:%M:%S\")\ndf_guest_donasi.tanggal = pd.to_datetime(df_guest_donasi.tanggal, format=\"%Y-%m-%d %H:%M:%S\")","b396b0ce":"print(df_users_zakat.tanggal.dtype)\nprint(df_users_donasi.tanggal.dtype)\nprint(df_guest_zakat.tanggal.dtype)\nprint(df_guest_donasi.tanggal.dtype)","25670651":"df_users_zakat.tanggal","1eda29e8":"df_users_zakat.sort_values(by=['tanggal'], inplace = True,  ignore_index=True)\ndf_users_donasi.sort_values(by=['tanggal'], inplace = True,  ignore_index=True)\ndf_guest_zakat.sort_values(by=['tanggal'], inplace = True,  ignore_index=True)\ndf_guest_donasi.sort_values(by=['tanggal'], inplace = True,  ignore_index=True)\n","d0882599":"df_guest_donasi","80cc6f14":"df_users_zakat.describe()","e8c7f144":"df_users_donasi.describe()","95c1695a":"df_guest_zakat.describe()","f5097466":"df_guest_donasi.describe()","97833e0a":"missing_values_count = df_guest_donasi.isnull().sum()\nmissing_values_count[0:]","5086e07d":"missing_values_count = df_guest_zakat.isnull().sum()\nmissing_values_count[0:]","327c0c9f":"missing_values_count = df_users_donasi.isnull().sum()\nmissing_values_count[0:]","eb862c3f":"missing_values_count = df_users_zakat.isnull().sum()\nmissing_values_count[0:]","89dfd19c":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_donasi', data=df_guest_donasi)","d2efb4a1":"df_guest_donasi.total_donasi.max()","3402ed36":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=df_guest_zakat)","fc12dd24":"df_guest_zakat.total_zakat.max()","8683ff8f":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_donasi', data=df_users_donasi)","2ce86096":"df_users_donasi.total_donasi.max()","d7f1f1de":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=df_users_zakat)","11d012e0":"df_users_zakat.total_zakat.max()","69069d54":"users_zakat = df_users_zakat[['tanggal','total_zakat']]\nusers_donasi = df_users_donasi[['tanggal','total_donasi']]\nguest_zakat = df_guest_zakat[['tanggal','total_zakat']]\nguest_donasi = df_guest_donasi[['tanggal','total_donasi']]","13b58783":"users_zakat['tanggal'] = pd.to_datetime(users_zakat.tanggal, format='%Y-%m-%d')\nusers_donasi['tanggal'] = pd.to_datetime(users_donasi.tanggal, format='%Y-%m-%d')\nguest_zakat['tanggal'] = pd.to_datetime(guest_zakat.tanggal, format='%Y-%m-%d')\nguest_donasi['tanggal'] = pd.to_datetime(guest_donasi.tanggal, format='%Y-%m-%d')","233df6b4":"users_zakat['tanggal'] = users_zakat['tanggal'].dt.strftime('%Y-%m-%d')\nusers_donasi['tanggal'] = users_donasi['tanggal'].dt.strftime('%Y-%m-%d')\nguest_zakat['tanggal'] = guest_zakat['tanggal'].dt.strftime('%Y-%m-%d')\nguest_donasi['tanggal'] = guest_donasi['tanggal'].dt.strftime('%Y-%m-%d')","68e6048c":"users_zakat = users_zakat.groupby('tanggal').sum()\nusers_donasi = users_donasi.groupby('tanggal').sum()\nguest_zakat = guest_zakat.groupby('tanggal').sum()\nguest_donasi = guest_donasi.groupby('tanggal').sum()","d922d672":"\"\"\"users_zakat.set_index('tanggal', inplace = True)\nusers_donasi.set_index('tanggal', inplace = True)\nguest_zakat.set_index('tanggal', inplace = True)\nguest_donasi.set_index('tanggal', inplace = True)\"\"\"","87c62f0f":"users_zakat.index  = pd.to_datetime(users_zakat.index)\nusers_donasi.index = pd.to_datetime(users_donasi.index)\nguest_zakat.index  = pd.to_datetime(guest_zakat.index)\nguest_donasi.index = pd.to_datetime(guest_donasi.index)","3ebab5ae":"# Color pallete for plotting\ncolor_pal = [\"#F8766D\", \"#D39200\", \"#93AA00\",\n             \"#00BA38\", \"#00C19F\", \"#00B9E3\",\n             \"#619CFF\", \"#DB72FB\"]\nusers_zakat.plot(style='.', figsize=(20,20), color=color_pal[0], title=\"All Users Zakat in 2021\")\nplt.show()","d00eb117":"# Color pallete for plotting\ncolor_pal = [\"#F8766D\", \"#D39200\", \"#93AA00\",\n             \"#00BA38\", \"#00C19F\", \"#00B9E3\",\n             \"#619CFF\", \"#DB72FB\"]\nusers_donasi.plot(style='.', figsize=(20,20), color=color_pal[0], title=\"All Users Donasi in 2021\")\nplt.show()","a0ff2dfc":"# Color pallete for plotting\ncolor_pal = [\"#F8766D\", \"#D39200\", \"#93AA00\",\n             \"#00BA38\", \"#00C19F\", \"#00B9E3\",\n             \"#619CFF\", \"#DB72FB\"]\nguest_zakat.plot(style='.', figsize=(20,20), color=color_pal[0], title=\"All Guest Zakat in 2021\")\nplt.show()","f0c1c6fa":"# Color pallete for plotting\ncolor_pal = [\"#F8766D\", \"#D39200\", \"#93AA00\",\n             \"#00BA38\", \"#00C19F\", \"#00B9E3\",\n             \"#619CFF\", \"#DB72FB\"]\nguest_donasi.plot(style='.', figsize=(20,20), color=color_pal[0], title=\"All Guest Donasi in 2021\")\nplt.show()","8a3d8311":"def create_features(df, label=None):\n    \"\"\"\n    Creates time series features from datetime index.\n    \"\"\"\n    df = df.copy()\n    df['date'] = df.index\n    df['dayofweek'] = df['date'].dt.dayofweek\n    df['quarter'] = df['date'].dt.quarter\n    df['month'] = df['date'].dt.month\n    df['year'] = df['date'].dt.year\n    df['dayofyear'] = df['date'].dt.dayofyear\n    df['dayofmonth'] = df['date'].dt.day\n    df['weekofyear'] = df['date'].dt.isocalendar().week\n    \n    X = df[['dayofweek','quarter','month','year',\n           'dayofyear','dayofmonth','weekofyear']]\n    if label:\n        y = df[label]\n        return X, y\n    return X","5d2d3107":"type(guest_donasi)","b33500c8":"guest_donasi","880c2fcb":"list_of_online_sumbangan = [guest_donasi, guest_zakat, users_donasi, users_zakat]\nlist_of_name = ['Guest Donasi', 'Guest Zakat', 'Users Donasi', 'Users Zakat']","091e895f":"list_of_online_sumbangan[0].columns[0]","d2e37d0a":"list_of_features = [None]*4","998a9938":"list_of_features","485a5185":"for idx, sumbangan in enumerate(list_of_online_sumbangan):\n    list_of_features[idx] = create_features(sumbangan)\n    list_of_features[idx][sumbangan.columns[0]] = sumbangan[sumbangan.columns[0]]","d90666ab":"list_of_features[0].head()","26c712ea":"list_of_features[0]","23cd89d7":"for sumbangan in list_of_online_sumbangan:\n    sumbangan['hari'] = sumbangan.index.strftime(\"%A\")","31415f5c":"for i in range(len(list_of_online_sumbangan)):\n    print(list_of_online_sumbangan[i].groupby('hari').hari.count())","77e369c2":"list_of_features[0]","3c7d5763":"sns.pairplot(list_of_features[0],\n             hue='quarter',\n             x_vars=['dayofweek','month','dayofyear'],\n             y_vars=list_of_features[0].columns[-1],\n             height=5,\n             plot_kws={'alpha':0.15, 'linewidth':0}\n            )\nplt.suptitle(list_of_name[0])\nplt.show()","49cf77b2":"sns.pairplot(list_of_features[1],\n             hue='quarter',\n             x_vars=['dayofweek','year','weekofyear'],\n             y_vars=list_of_features[1].columns[-1],\n             height=5,\n             plot_kws={'alpha':0.15, 'linewidth':0}\n            )\nplt.suptitle(list_of_name[1])\nplt.show()","36e3c496":"for sumbangan in list_of_online_sumbangan:\n    sumbangan.drop(columns='hari', inplace = True)","4c12e2d4":"list_of_online_sumbangan[0]","cd8e44b9":"for i in range(4):\n    list_of_online_sumbangan[i]= list_of_online_sumbangan[i].resample('D').sum()\n    list_of_online_sumbangan[i]","f5b2e17d":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=list_of_online_sumbangan[3])","39b414c7":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Categorya\nsns.lineplot(x='tanggal',y='total_donasi', data=list_of_online_sumbangan[2])","096a8ec4":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=list_of_online_sumbangan[1])","61aedf23":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_donasi', data=list_of_online_sumbangan[0])","f8840975":"for i in range(4):\n    nama_column = list_of_online_sumbangan[i].columns[0]\n    list_of_online_sumbangan[i] = list_of_online_sumbangan[i][list_of_online_sumbangan[i][nama_column] != 0]\n    list_of_online_sumbangan[i]","b9d04ee5":"list_of_online_sumbangan[0].min()","ef29b12d":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=list_of_online_sumbangan[3])","1154aa43":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Users Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Categorya\nsns.lineplot(x='tanggal',y='total_donasi', data=list_of_online_sumbangan[2])","a6ae1327":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Zakat in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_zakat', data=list_of_online_sumbangan[1])","beff5979":"# Set the width and height of the figure\nplt.figure(figsize=(10,10))\n\n# Add title\nplt.title(\"All Guest Donasi in 2021\")\n\n# Line chart showing Sales over Date mapped by Category\nsns.lineplot(x='tanggal',y='total_donasi', data=list_of_online_sumbangan[0])","325bfcb9":"from scipy.stats import zscore","460aa086":"list_of_new_df = []","fe55bfde":"for sumbangan in list_of_online_sumbangan:\n    z_scores = zscore(sumbangan)\n    abs_z_scores = np.abs(z_scores)\n    filtered_entries = (abs_z_scores < 3).all(axis=1)\n    list_of_new_df.append(sumbangan[filtered_entries])","1bfad42b":"list_of_new_df[1].max()","78de43e9":"list_of_online_sumbangan[1].max()","3089f89e":"list_of_new_df[2]","bcefa3f9":"list_of_new_df[0] = list_of_online_sumbangan[0].loc[list_of_online_sumbangan[0].total_donasi <= 1000000]","29342784":"test_ratio = 0.2\nfor idx,sumbangan in enumerate(list_of_new_df):\n    number = idx+1\n    \n    test_set_size = int(len(sumbangan) * test_ratio)\n    \n    globals()['donation%s' % number+'_train'] = sumbangan[0:-test_set_size].copy()\n    globals()['donation%s' % number+'_test'] = sumbangan[-test_set_size:].copy()","8b989b3a":"# Plot train and test so you can see where we have split\ndonation1_test \\\n    .rename(columns={donation1_test.columns[0]: 'TEST SET'}) \\\n    .join(donation1_train.rename(columns={donation1_train.columns[0]: 'TRAINING SET'}),\n          how='outer') \\\n    .plot.line(figsize=(15,5), title=list_of_name[0], style='.')\nplt.show()","d7dbcfb8":"# Format data for prophet model using ds and y\ndonation1_train.reset_index() \\\n    .rename(columns={'tanggal':'ds',\n                     donation1_train.columns[0]:'y'}).head()","1dc9d433":"for idx in range(4):\n    number = idx+1\n    globals()['donation%s' % number+'_train'].reset_index(inplace=True)\n    globals()['donation%s' % number+'_train'].rename(columns={\n        globals()['donation%s' % number+'_train'].columns[0]:'ds',\n        globals()['donation%s' % number+'_train'].columns[1]:'y'},inplace=True)\n    \n    missing_values_count = globals()['donation%s' % number+'_train'].isnull().sum()\n    print(number)\n    print(missing_values_count[0:2])","428fffce":"donation3_test","ad9cf25b":"# Setup and train model and fit\nfor idx in range(4):\n    number = idx+1\n    print(number)\n    globals()['model%s' % number] = Prophet()\n    globals()['model%s' % number].fit(globals()['donation%s' % number+'_train'])","dc1d4121":"for idx in range(4):\n    number = idx+1\n    globals()['donation%s' % number+'_test'].reset_index(inplace=True)\n    globals()['donation%s' % number+'_test'].rename(columns={\n        globals()['donation%s' % number+'_test'].columns[0]:'ds',\n        globals()['donation%s' % number+'_test'].columns[1]:'y'},inplace=True)\n    \n    missing_values_count = globals()['donation%s' % number+'_test'].isnull().sum()\n    print(number)\n    print(missing_values_count[0:2])","cc2f0683":"donation1_test","4a846646":"for idx in range(4):\n    number = idx+1\n    globals()['donation%s' % number+'_new_test'] = pd.DataFrame()\n    globals()['donation%s' % number+'_new_test']['ds'] = globals()['donation%s' % number+'_test']['ds']","3e93dd68":"donation1_new_test","2a532055":"# Predict on training set with model\nfor idx in range(4):\n    number = idx+1\n    globals()['donation%s' % number+'_test_fcst'] = globals()['model%s' % number].predict(globals()['donation%s' % number+'_new_test'])\n    print(number)","85bd9909":"donation1_test_fcst.head()","85ced307":"donation1_test.head()","5fb14e6c":"help(model1.plot)","abe0e252":"# Plot the forecast\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation1_train['ds'], donation1_train['y'], color='black')\nfig = model1.plot(donation1_test_fcst,\n                 ax=ax)\nplt.show()","f1aee06a":"donation1_test","a41fadfc":"# Plot the forecast with the actuals\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation1_train['ds'], donation1_train['y'], color='black')\nax.plot(donation1_test['ds'], donation1_test['y'], color='red')\nfig = model1.plot(donation1_test_fcst, ax=ax)","1169bfee":"((len(donation1_new_test) - 9)\/ len(donation1_new_test)) * 100","c93fc579":"# Plot the forecast with the actuals\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation2_train['ds'], donation2_train['y'], color='black')\nax.plot(donation2_test['ds'], donation2_test['y'], color='red')\nfig = model2.plot(donation2_test_fcst, ax=ax)","4260cfe1":"# Plot the forecast with the actuals\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation3_train['ds'], donation3_train['y'], color='black')\nax.plot(donation3_test['ds'], donation3_test['y'], color='red')\nfig = model3.plot(donation3_test_fcst, ax=ax)","eddfb0f3":"# Plot the forecast with the actuals\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation4_train['ds'], donation4_train['y'], color='black')\nax.plot(donation4_test['ds'], donation4_test['y'], color='red')\nfig = model4.plot(donation4_test_fcst, ax=ax)","86dfaad9":"list_of_new_df[0]","466c382d":"for i in range(4):\n    number = i + 1\n    globals()['df%s' % number+'_test'] = pd.DataFrame(columns = ['ds'])\n    globals()['df%s' % number+'_test']['ds'] = pd.date_range(start=list_of_new_df[0].index.max() + dt.timedelta(days=1) , periods = 30, freq='D')","5e93f037":"list_of_new_df[0].index.max() + dt.timedelta(days=1)","469c0fe3":"list_of_name[0]","805062c2":"df1_test","7a7e17e7":"# Predict on training set with model\nfor idx in range(4):\n    number = idx+1\n    globals()['donation%s' % number+'_after_last_day'] = globals()['model%s' % number].predict(globals()['df%s' % number+'_test'])\n    print(number)","1041a5a2":"donation1_after_last_day","62cba9ef":"# Plot the forecast\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation1_train['ds'], donation1_train['y'], color='black')\nax.plot(donation1_test['ds'], donation1_test['y'], color='r')\nfig = model1.plot(donation1_after_last_day,\n                 ax=ax)\nplt.show()","f8d9d54a":"list_of_name[3]","9df49594":"# Plot the forecast\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation2_train['ds'], donation2_train['y'], color='black')\nax.plot(donation2_test['ds'], donation2_test['y'], color='r')\nfig = model2.plot(donation2_after_last_day,\n                 ax=ax)\nplt.show()","2f4bc3f4":"# Plot the forecast\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation3_train['ds'], donation3_train['y'], color='black')\nax.plot(donation3_test['ds'], donation3_test['y'], color='r')\nfig = model3.plot(donation3_after_last_day,\n                 ax=ax)\nplt.show()","33add2b9":"# Plot the forecast\nf, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nax.plot(donation4_train['ds'], donation4_train['y'], color='black')\nax.plot(donation4_test['ds'], donation4_test['y'], color='r')\nfig = model4.plot(donation4_after_last_day,\n                 ax=ax)\nplt.show()","89df48de":"from sklearn.metrics import mean_squared_error, mean_absolute_error\nplt.style.use('fivethirtyeight')","3ec17618":"donation1_test","62358e16":"def mean_absolute_percentage_error(y_true, y_pred): \n    \"\"\"Calculates MAPE given y_true and y_pred\"\"\"\n    \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","958282b9":"mse_li = []\nfor idx in range (4):\n    number = idx+1\n    nilai_mse = mean_squared_error(y_true=globals()['donation%s' % number+'_test']['y'],\n                   y_pred=globals()['donation%s' % number+'_test_fcst']['yhat'])\n    mse_li.append(nilai_mse)\n    print(\"{}, MSE = {}\".format(list_of_name[idx], nilai_mse))\n\nprint(\"Total rata rata MSE dari 4 Model {}\".format(sum(mse_li)\/len(mse_li)))","6374f8ff":"mape_li = []\nfor idx in range(4):\n    number = idx+1\n    nilai_mape = mean_absolute_percentage_error(y_true=globals()['donation%s' % number+'_test']['y'],\n                   y_pred=globals()['donation%s' % number+'_test_fcst']['yhat'])\n    mape_li.append(nilai_mape)\n    print(\"{}, MAPE = {}\".format(list_of_name[idx], nilai_mape))\n\nprint(\"Total rata rata MAPE dari 4 Model {}\".format(sum(mape_li)\/len(mape_li)))","7cdd0154":"import xgboost as xgb\nfrom xgboost import plot_importance, plot_tree","d46fe0c4":"def create_features1(df, label=None):\n    \"\"\"\n    Creates time series features from datetime index\n    \"\"\"\n    df['date'] = df.index\n    df['hour'] = df['date'].dt.hour\n    df['dayofweek'] = df['date'].dt.dayofweek\n    df['quarter'] = df['date'].dt.quarter\n    df['month'] = df['date'].dt.month\n    df['year'] = df['date'].dt.year\n    df['dayofyear'] = df['date'].dt.dayofyear\n    df['dayofmonth'] = df['date'].dt.day\n    df['weekofyear'] = df['date'].dt.weekofyear\n    \n    X = df[['hour','dayofweek','quarter','month','year',\n           'dayofyear','dayofmonth','weekofyear']]\n    if label:\n        y = df[label]\n        return X, y\n    return X","168b684b":"donation1_train.set_index('ds',inplace=True)\ndonation2_train.set_index('ds',inplace=True)\ndonation3_train.set_index('ds',inplace=True)\ndonation4_train.set_index('ds',inplace=True)","f65fe159":"donation1_test.set_index('ds',inplace=True)\ndonation2_test.set_index('ds',inplace=True)\ndonation3_test.set_index('ds',inplace=True)\ndonation4_test.set_index('ds',inplace=True)","9f26357b":"donation1_train","bc354b9b":"for i in range(4):\n    number = i + 1\n    globals()['X%s' % number+'_train'], globals()['y%s' % number+'_train'] = create_features1(globals()['donation%s' % number+'_train'], label='y')\n    globals()['X%s' % number+'_test'], globals()['y%s' % number+'_test'] = create_features1(globals()['donation%s' % number+'_test'], label='y')","cedee05c":"donation1_train","857b2089":"X1_train","b903e55e":"for i in range(4):\n    number = i + 1\n    globals()['reg%s' % number] = xgb.XGBRegressor(n_estimators=1000)\n    globals()['reg%s' % number].fit(globals()['X%s' % number+'_train'], globals()['y%s' % number+'_train'],\n            eval_set=[(globals()['X%s' % number+'_train'], globals()['y%s' % number+'_train']), (globals()['X%s' % number+'_test'], globals()['y%s' % number+'_test'])],\n            early_stopping_rounds=50,\n           verbose=False)","24d2538b":"_ = plot_importance(reg1, height=0.9)","94ee7507":"_ = plot_importance(reg2, height=0.9)","3ad62d74":"_ = plot_importance(reg3, height=0.9)","5fa1a101":"_ = plot_importance(reg4, height=0.9)","2229f99b":"for i in range(4):\n    number = i + 1\n    globals()['donation%s' % number + '_test']['Hasil_Prediksi'] = globals()['reg%s' % number].predict(globals()['X%s' % number + '_test'])\n    globals()['all_data%s' % number] = pd.concat([globals()['donation%s' % number + '_test'], globals()['donation%s' % number + '_train']], sort=False)","406901c0":"all_data1","4a7263f6":"_ = all_data1[['y','Hasil_Prediksi']].plot(figsize=(15, 5))","7e61b489":"_ = all_data2[['y','Hasil_Prediksi']].plot(figsize=(15, 5))","f9b99d55":"_ = all_data3[['y','Hasil_Prediksi']].plot(figsize=(15, 5))","01292211":"_ = all_data4[['y','Hasil_Prediksi']].plot(figsize=(15, 5))","5f99e04e":"mse_li = []\nfor idx in range (4):\n    number = idx+1\n    nilai_mse = mean_squared_error(y_true=globals()['donation%s' % number+'_test']['y'],\n                   y_pred=globals()['donation%s' % number+'_test']['Hasil_Prediksi'])\n    mse_li.append(nilai_mse)\n    print(\"{}, MSE = {}\".format(list_of_name[idx], nilai_mse))\n\nprint(\"Total rata rata MSE dari 4 Model {}\".format(sum(mse_li)\/len(mse_li)))","ae07cb6c":"mape_li = []\nfor idx in range(4):\n    number = idx+1\n    nilai_mape = mean_absolute_percentage_error(y_true=globals()['donation%s' % number+'_test']['y'],\n                   y_pred=globals()['donation%s' % number+'_test']['Hasil_Prediksi'])\n    mape_li.append(nilai_mape)\n    print(\"{}, MAPE = {}\".format(list_of_name[idx], nilai_mape))\n\nprint(\"Total rata rata MAPE dari 4 Model {}\".format(sum(mape_li)\/len(mape_li)))","65d959f8":"# SAVE CSV","761a9988":"# READ CSV","6403500b":"## Split data, data test 20% dari total data","392a084c":"# MODELLING","8ae6ef89":"# (Kalau ada) Buang outlier","c828df1f":"### Membuat total donasi per\/hari","3fb1f2c2":"# (Kalau masih ada outlier) buang pakai cara manual tadi","abc1a12c":"# Modelling XGBoost\n","467d24b3":"# PRE-PROCESSING"}}