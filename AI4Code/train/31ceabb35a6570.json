{"cell_type":{"72116927":"code","02a3afe5":"code","a74b59fc":"code","8ace5e9e":"code","71a46cfb":"code","d6979b86":"code","9aeb2911":"code","8dce9ec8":"code","d5262dfc":"code","da274511":"code","d51fc7bb":"code","cc75c993":"code","f3e7d88c":"code","68ff122f":"code","c8c959cf":"code","4541ea6e":"code","3b7c9f7c":"code","a7275138":"code","28b2d80f":"code","e6748c2a":"code","7483534c":"code","7c813435":"code","a1e8169f":"code","6d3b5187":"markdown","c74ee823":"markdown","df277304":"markdown","a2c978dd":"markdown","f6db6fd3":"markdown","0b23cb02":"markdown"},"source":{"72116927":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\u3057\u307e\u3059\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\n\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tqdm.notebook import tqdm\nimport librosa \nimport librosa.display\nimport IPython","02a3afe5":"INPUT_DIR = '\/kaggle\/input\/hah-data-science-challenge'","a74b59fc":"# FFT\u7279\u5fb4\u91cf\u306e\u6761\u4ef6\nST_F = 1000 # \u4f7f\u7528\u3059\u308b\u5468\u6ce2\u6570\u4e0b\u9650\nED_F = 22000 # \u4f7f\u7528\u3059\u308b\u5468\u6ce2\u6570\u4e0a\u9650\nWINDOW = 500 # \u30d3\u30f3\u5206\u3051\u306ewindow\u30b5\u30a4\u30ba\nn_features = (ED_F - ST_F) \/\/ WINDOW","8ace5e9e":"def display_audio(file_stem):\n    if 'train' in file_stem: \n        display(IPython.display.Audio(f'\/kaggle\/input\/hah-data-science-challenge\/train\/train\/{file_stem}.wav'))\n    elif 'test' in file_stem:\n        display(IPython.display.Audio(f'\/kaggle\/input\/hah-data-science-challenge\/test\/test\/{file_stem}.wav'))\n        \ndef display_meta(file_stem):\n    if 'train' in file_stem: \n        df = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/train.csv', index_col=False)\n    elif 'test' in file_stem:\n        df = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/test.csv', index_col=False)\n    df = df[df['\u30d5\u30a1\u30a4\u30eb']==file_stem + '.wav']\n    display(df)","71a46cfb":"# \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\ndf_train = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/train.csv', index_col=False)\ndf_test = pd.read_csv('\/kaggle\/input\/hah-data-science-challenge\/test.csv', index_col=False)","d6979b86":"# meta_data\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\ndf_train['filepath'] = INPUT_DIR + '\/train\/train\/' + df_train['\u30d5\u30a1\u30a4\u30eb']\ndf_test['filepath'] = INPUT_DIR + '\/test\/test\/' + df_test['\u30d5\u30a1\u30a4\u30eb']","9aeb2911":"df = pd.concat([df_train, df_test]).reset_index(drop=True)","8dce9ec8":"# \u540d\u5bc4\u305b\nrecording_map = {\n    'PC\u5185\u81d3': 'PC\u5185\u8535', \n    'PC\u5185\u8535': 'PC\u5185\u8535', \n    'USB1': 'USB1', \n    'USB2': 'USB2', \n    'USB3': 'USB3', \n    'USB4': 'USB4', \n    '\u30b9\u30de\u30db': '\u30b9\u30de\u30db', \n    '\u30b9\u30de\u30db\u306e\u30dc\u30a4\u30b9\u30ec\u30b3\u30fc\u30c0': '\u30b9\u30de\u30db', \n    '\u5185\u8535\u30de\u30a4\u30af': 'PC\u5185\u8535'\n}\n\ndistance_map = {\n    '10cm': '10cm',\n    '10\u339d': '10cm',\n    '1M': '1m',\n    '20cm': '20cm',\n    '20\u339d': '20cm',\n    '2M': '2m',\n    '2m': '2m',\n    '30cm': '30cm',\n    '30cn': '30cm',\n    '30\u339d': '30cm',\n    '3m': '3m',\n    '40cm': '40cm',\n    '40\u339d': '40cm',\n    '50cm': '50cm',\n    '50\u339d': '50cm',\n    '5cm': '5cm',\n    '8cm': '8cm',\n    '\uff11\uff2d': '1m'\n}\n\ndf['\u9332\u97f3\u65b9\u6cd5'] = df['\u9332\u97f3\u65b9\u6cd5'].replace(recording_map)\ndf['\u30de\u30a4\u30af\u8ddd\u96e2'] = df['\u30de\u30a4\u30af\u8ddd\u96e2'].replace(distance_map)","d5262dfc":"# metadata\u306e\u4ed8\u4e0e\nfilelist = df['filepath'].to_list()\nfor i, filename in enumerate(tqdm(filelist)):\n    y, sr = librosa.core.load(filename,sr=None)\n    onset_envelope = librosa.onset.onset_strength(y, sr)\n    onsets = librosa.onset.onset_detect(onset_envelope=onset_envelope)\n    \n    df.at[i, 'data_size'] = y.size\n    df.at[i, 'data_min'] = y.min()\n    df.at[i, 'data_max'] = y.max()\n    df.at[i, 'sr'] = sr\n    df.at[i, 'play_time'] = y.size \/ sr\n    df.at[i, 'impact_cnt'] = len(onsets)","da274511":"# \u6253\u97f3\u56de\u6570\u3068\u6700\u5927\u97f3\u91cf\u3092\u5143\u306bno_call\u3092\u5224\u5b9a\ndf['no_call'] = 0\ndf.loc[df['data_max']<0.2, 'no_call'] = 1\ndf.loc[df['impact_cnt']>15, 'no_call'] = 1","d51fc7bb":"def calc_fft_features(signal, sample_rate, st_f, ed_f, window):\n    # fft\n    fft = np.fft.fft(signal)\n    spectrum = np.abs(fft)\n    spectrum = spectrum \/ spectrum.max()\n    f = np.linspace(0, sample_rate, int(len(spectrum)\/2))\n    left_spectrum = spectrum[:int(len(spectrum)\/2)]\n    left_f = f[:int(len(spectrum)\/2)]\n    \n    # window\u3054\u3068\u96c6\u8a08\n    features = []\n    for st in np.arange(st_f, ed_f, window):\n        ed = st + window\n        features.append(left_spectrum[(st<=left_f)&(left_f<ed)].max())\n    return features","cc75c993":"# \u6b63\u5e38\ni = 1510\ndisplay(df.loc[i])\ny, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\nplt.plot(calc_fft_features(y, sr, ST_F, ED_F, WINDOW))","f3e7d88c":"# \u7570\u5e38\ni = 785\ndisplay(df.loc[i])\ny, sr = librosa.core.load(df.at[i, 'filepath'], sr=None)\nplt.plot(calc_fft_features(y, sr, ST_F, ED_F, WINDOW))","68ff122f":"# librosa\u3067.wav\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u7279\u5fb4\u62bd\u51fa\u3057\u307e\u3059\u3002\nfilelist = df['filepath'].to_list()\n\nfeatures = np.zeros((len(df), n_features))\nfor i, filename in enumerate(tqdm(filelist)):\n    y, sr = librosa.core.load(filename,sr=None)\n    features[i] = calc_fft_features(y, sr, ST_F, ED_F, WINDOW)","c8c959cf":"def outlier_scoring(train_data, pred_data):\n    # \u6559\u5e2b\u306a\u3057\u7570\u5e38\u691c\u77e5\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u7570\u5e38\u30b9\u30b3\u30a2\u3092\u4ed8\u4e0e\u3057\u307e\u3059\n    model = LocalOutlierFactor(novelty=True, n_neighbors=15) # \u3053\u3053\u3067\u306fk-\u8fd1\u508d\u6cd5\u306e\u6d41\u308c\u3092\u304f\u3080LocalOutlierFactor\u3092\u7528\u3044\u307e\u3059\n    model.fit(train_data) # \u6b63\u5e38\u30c7\u30fc\u30bf\u306e\u307f\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3057\u307e\u3059\n    pred = model.score_samples(pred_data) \n    # \u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u7570\u5e38\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3001\u7b26\u53f7\u3092\u3072\u3063\u304f\u308a\u8fd4\u3057\u30660\u304b\u30891\u306b\u304a\u3055\u3081\u308b\n    scaler = MinMaxScaler()\n    pred = scaler.fit_transform(-pred.reshape(-1,1))\n    return pred","4541ea6e":"# \u5f8c\u3005\u306e\u51e6\u7406\u306e\u305f\u3081\u306b\u305d\u308c\u305e\u308c\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308bid\u3092\u53d6\u5f97\u3057\u3066\u304a\u304f\n# \u306d\u3058\u00d7\u30d7\u30ec\u30fc\u30c8\u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3092\u884c\u3046\n# 0:\u306d\u3058\u5927\u30d7\u30ec\u30fc\u30c8\u5927 1:\u306d\u3058\u5927\u30d7\u30ec\u30fc\u30c8\u5c0f 2:\u306d\u3058\u5c0f\u30d7\u30ec\u30fc\u30c8\u5927\nnorm0_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==0) & (df['no_call']==0)].index)\nanorm0_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==1)].index)\n\nnorm1_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5c0f') & (df['Target']==0) & (df['no_call']==0)].index)\n# anorm1_idx  \u2190\u8a72\u5f53\u306a\u3057\n\nnorm2_idx = list(df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==0) & (df['no_call']==0)].index)\nanorm2_idx = list(df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==1)].index)\n\nno_call_idx = list(df[df['no_call']==1].index)","3b7c9f7c":"# \u5404\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u5b66\u7fd2\u3068\u8a55\u4fa1\u306b\u30c7\u30fc\u30bf\u3092\u5206\u5272\ntr0_idx = norm0_idx[:int(len(norm0_idx)\/2)]\nval0_idx = norm0_idx[int(len(norm0_idx)\/2):] + anorm0_idx\ntr0 = features[tr0_idx]\nval0 = features[val0_idx]\n\ntr1_idx = norm1_idx[:int(len(norm1_idx)\/2)]\nval1_idx = norm1_idx[int(len(norm1_idx)\/2):]\ntr1 = features[tr1_idx]\nval1 = features[val1_idx]\n\ntr2_idx = norm2_idx[:int(len(norm2_idx)\/2)]\nval2_idx = norm2_idx[int(len(norm2_idx)\/2):] + anorm2_idx\ntr2 = features[tr2_idx]\nval2 = features[val2_idx]","a7275138":"# valid score\u7b97\u51fa\ndf_valid = df.copy()\ndf_valid.loc[val0_idx, 'pred'] = outlier_scoring(tr0, val0)\ndf_valid.loc[val1_idx, 'pred'] = outlier_scoring(tr1, val1)\ndf_valid.loc[val2_idx, 'pred'] = outlier_scoring(tr2, val2)\ndf_valid = df_valid.dropna(subset=['Target', 'pred'])","28b2d80f":"roc_auc_score(df_valid['Target'], df_valid['pred'])","e6748c2a":"norm0_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==0) & (df['no_call']==0)].index)\nnorm1_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5c0f') & (df['Target']==0) & (df['no_call']==0)].index)\nnorm2_idx = list(df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['Target']==0) & (df['no_call']==0)].index)\n\npred0_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['\u30d5\u30a1\u30a4\u30eb'].str.contains('test')) & (df['no_call']==0)].index)\npred1_idx = list(df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5c0f') & (df['\u30d5\u30a1\u30a4\u30eb'].str.contains('test')) & (df['no_call']==0)].index)\npred2_idx = list(df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927') & (df['\u30d5\u30a1\u30a4\u30eb'].str.contains('test')) & (df['no_call']==0)].index)\n\nno_call_idx = list(df[df['no_call']==1].index)","7483534c":"tr0 = features[norm0_idx]\npred0 = features[pred0_idx]\ntr1 = features[norm1_idx]\npred1 = features[pred1_idx]\ntr2 = features[norm2_idx]\npred2 = features[pred2_idx]","7c813435":"df_pred = df.copy()\ndf_pred.loc[pred0_idx, 'Target'] = outlier_scoring(tr0, pred0)\ndf_pred.loc[pred1_idx, 'Target'] = outlier_scoring(tr1, pred1)\ndf_pred.loc[pred2_idx, 'Target'] = outlier_scoring(tr2, pred2)\ndf_pred.loc[no_call_idx, 'Target'] = 0.5 # \u6253\u97f3\u304c\u3057\u306a\u3044\u30c7\u30fc\u30bf\u306f0.5\u3067\u4e88\u6e2c\u3059\u308b","a1e8169f":"df_sub = df_pred[df_pred['\u30d5\u30a1\u30a4\u30eb'].str.contains('test')][['ID', 'Target']].set_index('ID')\ndf_sub.to_csv('submission.csv')","6d3b5187":"# \u7279\u5fb4\u91cf\u62bd\u51fa","c74ee823":"\uff1cFFT\u7279\u5fb4\u91cf\uff1e  \n\u7551\u3055\u3093\u306enotebook\uff08https:\/\/www.kaggle.com\/hattan0523\/target-0-0-1-0\uff09 \u3067  \n\u6b63\u5e38 \/ \u7570\u5e38\u3067FFT\u306e\u5206\u5e03\u306b\u5dee\u7570\u304c\u898b\u3089\u308c\u305f\u306e\u3067\u3001FFT\u306e\u7279\u5fb4\u91cf\u5316\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002  \n\u305d\u306e\u307e\u307e\u7a81\u3063\u8fbc\u3080\u3068\u6b21\u5143\u304c\u591a\u3059\u304e\u308b\u306e\u3067\u3001500Hz\u5358\u4f4d\u3067\u96c6\u8a08\u3057\u3066\u3044\u307e\u3059\u3002  \n\n\n\uff1c\u306d\u3058\u00d7\u30d7\u30ec\u30fc\u30c8\u3067\u30b0\u30eb\u30fc\u30d7\u5316\uff1e  \n\u306d\u3058\u3068\u30d7\u30ec\u30fc\u30c8\u306e\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u97f3\u306b\u5927\u304d\u306a\u9055\u3044\u304c\u3042\u308a\u305d\u3046\u306a\u306e\u3067\u3001  \n\u3053\u308c\u3089\u306e\u7d44\u307f\u5408\u308f\u305b\u3054\u3068\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3001\u5b66\u7fd2\u30fb\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002  \n\n\uff1c\u6253\u97f3\u306a\u3057\u306e\u5224\u5b9a\uff1e  \n\u6253\u97f3\u306a\u3057\u3092signal\u306e\u6700\u5927\u5024\u3068\u6253\u97f3\u56de\u6570\u3092\u5143\u306b\u691c\u51fa\u3057\u3001  \n\u6253\u97f3\u306a\u3057\u306f\u6b63\u5e38\u30c7\u30fc\u30bf\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u306a\u3044\u3002\u4e88\u6e2c\u5024\u3092\u56fa\u5b9a\u50240.5\u306b\u3057\u3066\u3044\u307e\u3059\u3002  ","df277304":"# sub\u4f5c\u6210","a2c978dd":"# \u30e2\u30c7\u30eb\u4f5c\u6210\u30fb\u8a55\u4fa1","f6db6fd3":"# utils","0b23cb02":"# \u30c7\u30fc\u30bf\u524d\u51e6\u7406"}}