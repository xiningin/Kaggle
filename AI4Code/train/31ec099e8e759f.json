{"cell_type":{"4fd81de5":"code","4e9da61f":"code","8085f742":"code","41bd7a17":"code","8b744d34":"code","ac7abaf9":"code","73accfef":"code","27091d62":"code","74bcc7ce":"code","712387be":"code","fcec3006":"code","9016f484":"code","25cd6200":"code","0ab72851":"code","32e06d5a":"code","549eb0ba":"code","91694e56":"code","c59fd8a3":"code","d32a2b96":"code","561d71c8":"code","17962f30":"code","35cbe1d8":"markdown"},"source":{"4fd81de5":"import pandas as pd\nimport numpy as np\n\ndados = pd.read_csv('..\/input\/inauguracao-de-estacoes-do-metrosp-e-da-cptm\/inauguracoes.csv')\n\ndados","4e9da61f":"#desmembrando a data de inaugura\u00e7\u00e3o em tr\u00eas colunas\n\ndados['Dia'] = pd.to_datetime(dados.Inaugura\u00e7\u00e3o).dt.day\ndados['M\u00eas'] = pd.to_datetime(dados.Inaugura\u00e7\u00e3o).dt.month\ndados['Ano'] = pd.to_datetime(dados.Inaugura\u00e7\u00e3o).dt.year\n\ndados.head()","8085f742":"dados[dados.Linha == 7].sort_values(by = ['Ano', 'M\u00eas', 'Dia', 'Nome'], ascending = True)","41bd7a17":"dados.groupby('Linha').agg({'Idade' : np.average}).sort_values(by = ['Idade'], ascending = False)","8b744d34":"dados.groupby('Constru\u00e7\u00e3o').agg({'Idade' : np.average}).sort_values(by = ['Idade'], ascending = False)","ac7abaf9":"dados.groupby('Ano')['Nome'].count()","73accfef":"import matplotlib.pyplot as plt\nimport random\n\nfig = plt.figure(figsize = (20,12))\nax = fig.add_subplot(1, 1, 1) \nax.set_xlabel('Ano', fontsize = 15)\nax.set_ylabel('Linha', fontsize = 15)\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es da CPTM e do Metr\u00f4', fontsize = 20)\n\nlegenda = dados.Linha.sort_values().apply(lambda l: 'Linha ' + str(l)).unique().tolist()\nlinhas = dados.Linha.sort_values().unique().tolist()\n\nn_cores = 13\n\ncores = [\"#\" + ''.join([random.choice('0123456789ABCDEF') for j in range(6)]) for i in range(n_cores)]\n\nanos = pd.to_datetime(dados.loc[:, 'Inaugura\u00e7\u00e3o']).dt.year\n\nplt.xticks(np.arange(min(anos), max(anos) + 5, 5.0))\nplt.yticks(np.arange(1, 16, 1.0))\n\nax.legend(legenda)\nax.grid()\n\nfor l, cor in zip(linhas, cores):\n    indices = dados['Linha'] == l\n    ax.scatter(pd.to_datetime(dados.loc[indices, 'Inaugura\u00e7\u00e3o']).dt.year,\n               dados.loc[indices, 'Linha'],\n               c = cor,\n               s = 40)","27091d62":"fig = plt.figure(figsize = (20,6))\n\nax = fig.add_subplot(1, 1, 1) \n\nax.set_xlabel('Ano', fontsize = 15)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es da CPTM e do Metr\u00f4', fontsize = 20)\n\nax.grid()\n\nanos = dados.Ano.unique()\ninauguracoes = dados.groupby('Ano')['Nome'].count().tolist()\n\nplt.xticks(np.arange(min(anos), max(anos) + 4, 4.0))\nplt.yticks(np.arange(min(inauguracoes), max(inauguracoes) + 1, 1.0))\n\nax.plot(anos, inauguracoes)","74bcc7ce":"fig = plt.figure(figsize = (20,6))\n\nax = fig.add_subplot(1, 1, 1) \n\nax.set_xlabel('Ano', fontsize = 15)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es da CPTM e do Metr\u00f4', fontsize = 20)\n\nanos = dados.Ano.unique()\ninauguracoes = dados.groupby('Ano')['Nome'].count().tolist()\n\nplt.xticks(np.arange(min(anos), max(anos) + 4, 4.0))\nplt.yticks(np.arange(min(inauguracoes), max(inauguracoes) + 1, 1.0))\n\nax.grid()\n\nplt.bar(anos, inauguracoes, color = cores)","712387be":"fig = plt.figure(figsize = (20,6))\n\nax = fig.add_subplot(1, 1, 1) \n\nax.set_xlabel('Ano', fontsize = 15)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es da CPTM', fontsize = 20)\n\nanos = dados[dados.Constru\u00e7\u00e3o == 'CPTM'].Ano.unique()\ninauguracoes = dados[dados.Constru\u00e7\u00e3o == 'CPTM'].groupby('Ano')['Nome'].count().tolist()\n\nplt.xticks(np.arange(min(anos), max(anos) + 4, 4.0))\nplt.yticks(np.arange(min(inauguracoes), max(inauguracoes) + 1, 1.0))\n\nax.grid()\n\nplt.bar(anos, inauguracoes, color = cores)","fcec3006":"fig = plt.figure(figsize = (20,6))\n\nax = fig.add_subplot(1, 1, 1) \n\nax.grid()\nax.set_xlabel('Ano', fontsize = 15)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es do Metr\u00f4', fontsize = 20)\n\nanos = dados[dados.Constru\u00e7\u00e3o == 'Metr\u00f4'].Ano.unique()\ninauguracoes = dados[dados.Constru\u00e7\u00e3o == 'Metr\u00f4'].groupby('Ano')['Nome'].count().tolist()\n\nplt.xticks(np.arange(min(anos), max(anos) + 2, 2.0))\nplt.yticks(np.arange(min(inauguracoes), max(inauguracoes) + 1, 1.0))\n\nplt.bar(anos, inauguracoes, color = cores)","9016f484":"inauguracoes = dados.loc[dados.Constru\u00e7\u00e3o == 'Metr\u00f4', 'Ano']\nbins = dados[dados.Constru\u00e7\u00e3o == 'Metr\u00f4'].Ano.unique()\n\nplt.hist(inauguracoes, bins)","25cd6200":"#inaugura\u00e7\u00f5es em anos eleitorais (p\u00f3s-ditadura, todos os anos pares)\n\nanos_eleitorais = list(range(1988, 2020, 2))\n\nanos_eleitorais","0ab72851":"dados['AnoEleitoral'] = dados.apply(lambda row: 'Sim' if row.Ano in anos_eleitorais else 'N\u00e3o', 1)\ndados","32e06d5a":"estacoes_eleitorais = dados[dados.AnoEleitoral == 'Sim'].groupby('Constru\u00e7\u00e3o').agg({'Constru\u00e7\u00e3o' : 'count'})\nestacoes_eleitorais.columns = ['Esta\u00e7\u00f5es']\n\nestacoes_eleitorais = estacoes_eleitorais.reset_index()\nestacoes_eleitorais","549eb0ba":"plt.bar(estacoes_eleitorais.Constru\u00e7\u00e3o, estacoes_eleitorais.Esta\u00e7\u00f5es, label = 'Inaugura\u00e7\u00f5es', color = 'rb')\nplt.title('Esta\u00e7\u00f5es inauguradas em ano eleitoral desde 1988')\nplt.ylabel('Esta\u00e7\u00f5es inauguradas')","91694e56":"estacoes_eleitorais = dados[dados.Ano >= 1988].groupby(['Constru\u00e7\u00e3o', 'AnoEleitoral']).agg({'AnoEleitoral' : 'count'})\nestacoes_eleitorais.columns = ['Esta\u00e7\u00f5es']\n\nestacoes_eleitorais = estacoes_eleitorais.reset_index()\nestacoes_eleitorais","c59fd8a3":"labels = ['Ano Comum', 'Ano Eleitoral']\n\ndados_cptm = list(estacoes_eleitorais.loc[estacoes_eleitorais.Constru\u00e7\u00e3o == 'CPTM', 'Esta\u00e7\u00f5es'])\ndados_metro = list(estacoes_eleitorais.loc[estacoes_eleitorais.Constru\u00e7\u00e3o == 'Metr\u00f4', 'Esta\u00e7\u00f5es'])\n\nx = np.arange(len(labels))\nwidth = 0.35\n\nfig, ax = plt.subplots()\n\nbar_cptm = plt.bar(x - (width \/ 2), dados_cptm, width, label = 'CPTM', color = 'r')\nbar_metro = plt.bar(x + (width \/ 2), dados_metro, width, label = 'Metr\u00f4', color = 'b')\n\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es a partir de 1988')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas')\nax.legend()","d32a2b96":"anos = dados[(dados.AnoEleitoral == 'Sim') & (dados.Constru\u00e7\u00e3o == 'Metr\u00f4')].Ano.unique()\ninauguracoes = dados[(dados.AnoEleitoral == 'Sim') & (dados.Constru\u00e7\u00e3o == 'Metr\u00f4')].groupby('Ano')['Nome'].count().tolist()\n\nplt.figure(figsize = (20,6))\n\nplt.bar(anos, inauguracoes)\n\nplt.title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es do Metr\u00f4 em anos eleitorais', fontsize = 20)\nplt.xlabel('Ano', fontsize = 15)\nplt.ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nplt.xticks(np.arange(min(anos), max(anos) + 2, 2.0))\nplt.yticks(np.arange(0, max(inauguracoes) + 1, 1.0))\nplt.grid()","561d71c8":"anos = dados[(dados.AnoEleitoral == 'Sim') & (dados.Constru\u00e7\u00e3o == 'CPTM')].Ano.unique()\ninauguracoes = dados[(dados.AnoEleitoral == 'Sim') & (dados.Constru\u00e7\u00e3o == 'CPTM')].groupby('Ano')['Nome'].count().tolist()\n\nplt.figure(figsize = (20, 6))\n\nplt.bar(anos, inauguracoes, color = 'r')\n\nplt.title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es da CPTM em anos eleitorais', fontsize = 20)\nplt.xlabel('Ano', fontsize = 15)\nplt.ylabel('Esta\u00e7\u00f5es inauguradas', fontsize = 15)\nplt.xticks(np.arange(min(anos), max(anos) + 2, 2.0))\nplt.yticks(np.arange(0, max(inauguracoes) + 1, 1.0))\nplt.grid()","17962f30":"dados_cptm = []\ndados_metro = []\n\nfor a in anos_eleitorais:\n    dados_cptm.append(len(dados[(dados.Constru\u00e7\u00e3o == 'CPTM') & (dados.Ano == a)]))\n    dados_metro.append(len(dados[(dados.Constru\u00e7\u00e3o == 'Metr\u00f4') & (dados.Ano == a)]))\n\nx = np.arange(len(anos_eleitorais))\nwidth = 0.25\n\nfig, ax = plt.subplots(figsize = (15, 5))\n\nbar_cptm = plt.bar(x - (width \/ 2), dados_cptm, width, label = 'CPTM', color = 'r')\nbar_metro = plt.bar(x + (width \/ 2), dados_metro, width, label = 'Metr\u00f4', color = 'b')\n\nax.set_title('Inaugura\u00e7\u00f5es de esta\u00e7\u00f5es em anos eleitorais')\nax.set_xticks(x)\nax.set_xticklabels(anos_eleitorais)\nax.set_ylabel('Esta\u00e7\u00f5es inauguradas')\nax.set_yticks(np.arange(min(dados_metro), max(dados_metro) + 1, 1.0))\nax.legend()\nax.grid()","35cbe1d8":"## Inaugura\u00e7\u00f5es de Esta\u00e7\u00f5es da CPTM e do Metr\u00f4\n\n### Pr\u00e9-processamento e an\u00e1lise dos dados"}}