{"cell_type":{"c6a61024":"code","0c09b037":"code","0a7dc29a":"code","983c6dc6":"code","a983995b":"code","069fa951":"code","3b93e016":"code","bb1fd49d":"code","b3d70de0":"code","aa04ed38":"code","f12c4b6a":"code","ab09a4f6":"code","72a8bb2d":"code","a0b323aa":"code","7734de77":"code","0ad8e129":"code","6776327f":"code","e907eb34":"code","d1bd2d5d":"code","36947aed":"code","c5cd6efb":"code","a2d23379":"code","536bf7c1":"code","88c3262a":"code","83bc07fd":"code","c703d795":"code","ad77447e":"code","a2522767":"code","189338e2":"code","41b5f076":"code","4929b818":"code","3b7272a9":"code","c49377a2":"code","25846b5e":"code","776f3488":"code","a0b44149":"code","0e5cf853":"code","cc16f2fa":"code","78ed1794":"code","60b37741":"code","395df013":"code","98d8904d":"code","d5aafc2f":"code","359c8648":"code","a7e066be":"code","1075a202":"code","3d98a5b8":"code","b58bd150":"code","db479588":"code","e77392ff":"code","f4d6ad0c":"code","f66bf275":"code","8c9db9d2":"code","fb25ae43":"code","a3e65656":"code","e5ae2c65":"markdown","3a6a7ff4":"markdown","a9c8abec":"markdown","f3f8ee3b":"markdown","af824852":"markdown","56674476":"markdown","b4cf80a7":"markdown","8058c257":"markdown","e6ab254b":"markdown","dffb7a30":"markdown","7906b427":"markdown","1d4a764c":"markdown","94a4430b":"markdown","a46fc5da":"markdown","8a261e15":"markdown","e2ad4f16":"markdown","69ec6bae":"markdown","a0fd989f":"markdown","a5114b38":"markdown","7a2195cc":"markdown","56d8ba2e":"markdown","1168a53e":"markdown","84cb2853":"markdown","2527a3d7":"markdown","49a90da3":"markdown","52ea5c4a":"markdown","c620cc80":"markdown","6f6e344d":"markdown","021c3886":"markdown","726c47fa":"markdown","f4cd015d":"markdown","1a1ff781":"markdown","b825a325":"markdown","0c505660":"markdown","1c739083":"markdown","e805b498":"markdown","69635105":"markdown","cf945398":"markdown","cd95d9af":"markdown","3baa61f5":"markdown","2ee406fb":"markdown","c21a2ae0":"markdown","8eb72300":"markdown","b5c0170e":"markdown","c0a8b7f6":"markdown","a5ed6321":"markdown","212d2144":"markdown","37df0744":"markdown","a8ef4e6d":"markdown","27a5b4e3":"markdown","c1982735":"markdown"},"source":{"c6a61024":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n        \nplt.style.use('fivethirtyeight')","0c09b037":"df=pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\nquestion_list=df.loc[0]\ndf_1=df[1:]\ndf_1.drop(['Time from Start to Finish (seconds)'],axis=1,inplace=True)","0a7dc29a":"question_list_2={'Q1':'What is your age (# years)?',\n              'Q2':'What is your gender?',\n              'Q3':'In which country do you currently reside?',\n              'Q4':'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?',\n               'Q5':'Select the title most similar to your current role (or most recent title if retired)',\n               'Q6':'For how many years have you been writing code and\/or programming?',\n               'Q7':'What programming languages do you use on a regular basis?',\n               'Q8':'What programming language would you recommend an aspiring data scientist to learn first?',\n               'Q9':'Which of the following integrated development environments do you use on a regular basis?',\n               'Q10':'Which of the following hosted notebook products do you use on a regular basis?',\n               'Q11':'What type of computing platform do you use most often for your data science projects?',\n               'Q12':'Which types of specialized hardware do you use on a regular basis?',\n               'Q13':'Approximately how many times have you used a TPU (tensor processing unit)?',\n               'Q14':'What data visualization libraries or tools do you use on a regular basis?',\n               'Q15':'For how many years have you used machine learning methods?',\n               'Q16':'Which of the following machine learning frameworks do you use on a regular basis?',\n               'Q17':'Which of the following ML algorithms do you use on a regular basis?',\n               'Q18':'Which categories of computer vision methods do you use on a regular basis?',\n               'Q19':'Which of the following natural language processing (NLP) methods do you use on a regular basis?',\n               'Q20':'In what industry is your current employer\/contract (or your most recent employer if retired)?',\n               'Q21':'What is the size of the company where you are employed?',\n               'Q22':'Approximately how many individuals are responsible for data science workloads at your place of business?',\n               'Q23':'Does your current employer incorporate machine learning methods into their business?',\n               'Q24':'Select any activities that make up an important part of your role at work',\n               'Q25':'What is your current yearly compensation (approximate $USD)?',\n               'Q26':'Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?',\n               'Q27_A':'Which of the following cloud computing platforms do you use on a regular basis?',\n               'Q28':'Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)?',\n               'Q29_A':'Do you use any of the following cloud computing products on a regular basis?',\n               'Q30_A':'Do you use any of the following data storage products on a regular basis?',\n               'Q31_A':'Do you use any of the following managed machine learning products on a regular basis?',\n               'Q32_A':'Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?',\n               'Q33':'Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often?',\n               'Q34_A':'Which of the following business intelligence tools do you use on a regular basis?',\n               'Q35':'Which of the following business intelligence tools do you use most often?',\n               'Q36_A':'Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?',\n               'Q37_A':'Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?',\n               'Q38_A':'Do you use any tools to help manage machine learning experiments?',\n               'Q39':'Where all that\u3000do you publicly share or deploy your data analysis or machine learning applications?',\n               'Q40':'On which platforms have you begun or completed data science courses?',\n               'Q41':'What is the primary tool that you use at work or school to analyze data?',\n               'Q42':'Who\/what are your favorite media sources that report on data science topics?',\n               'Q27_B':'Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?',\n               'Q29_B':'In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?',\n               'Q30_B':'In the next 2 years, do you hope to become more familiar with any of these specific data storage products?',\n               'Q31_B':'In the next 2 years, do you hope to become more familiar with any of these managed machine learning products?',\n               'Q32_B':'Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years? ',\n               'Q34_B':'Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?',\n               'Q36_B':'Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?',\n               'Q37_B':'Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?',\n               'Q38_B':'In the next 2 years,do you hope to become more familier with any of these tools for managing ML experiments?'\n}","983c6dc6":"label_list={'Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10','Q10','Q11','Q12','Q13','Q14','Q15','Q16','Q17'\n           ,'Q18','Q19','Q20','Q21','Q22','Q23','Q24','Q25','Q26','Q27_A','Q27_B','Q28','Q29_A','Q29_B','Q30_A','Q30_B',\n            'Q31_A','Q31_B','Q32_A','Q32_B','Q33','Q34_A','Q34_B','Q35','Q36_A','Q36_B','Q37_A','Q37_B','Q38_A','Q38_B'}","a983995b":"#Q1\nfor col in df_1.columns:\n    if 'Q1' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(10,6))\n        plt.bar(data_a.index, np.array(data_a),color='#eaf175',edgecolor='#ea9f75')\n        plt.title('Q1'+'__'+question_list_2['Q1'])\n        plt.show()","069fa951":"#Q2\nfor col in df_1.columns:\n    if 'Q2' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(10,6))\n        plt.bar(data_a.index, np.array(data_a),color='#eaf175',edgecolor='#ea9f75')\n        plt.title('Q2'+'__'+question_list_2['Q2'])\n        plt.show()","3b93e016":"for col in df_1.columns:\n    if 'Q3' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(15,5))\n        plt.bar(data_a.index, np.array(data_a),color='#eaf175',edgecolor='#ea9f75')\n        plt.xticks(rotation=90)\n        plt.title('Q3'+'__'+question_list_2['Q3'])\n        plt.show()","bb1fd49d":"for col in df_1.columns:\n    if 'Q4' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(15,5))\n        plt.bar(data_a.index, np.array(data_a),color='#eaf175',edgecolor='#ea9f75')\n        plt.xticks(rotation=90)\n        plt.title('Q4'+'__'+question_list_2['Q4'])\n        plt.show()","b3d70de0":"for col in df_1.columns:\n    if 'Q5' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(15,5))\n        plt.bar(data_a.index, np.array(data_a),color='#eaf175',edgecolor='#ea9f75')\n        plt.xticks(rotation=90)\n        plt.title('Q5'+'__'+question_list_2['Q5'])\n        plt.show()","aa04ed38":"for col in df_1.columns:\n    if 'Q6' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(15,5))\n        plt.bar(data_a.index, np.array(data_a),color='#9ac09a',edgecolor='#00a140')\n        plt.xticks(rotation=90)\n        plt.title('Q6'+'__'+question_list_2['Q6'])\n        plt.show()","f12c4b6a":"data_list=[]\nfor col in df_1.columns:\n    if 'Q7' in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title('Q7'+'__'+question_list_2['Q7'])\nplt.show()","ab09a4f6":"for col in df_1.columns:\n    if 'Q8' == col:\n        #df_1[col].hist(color='pink')\n        data_a=df_1[col].value_counts()\n        data_a=data_a.sort_values(ascending=False)\n        plt.figure(figsize=(15,5))\n        plt.bar(data_a.index, np.array(data_a),color='#9ac09a',edgecolor='#00a140')\n        plt.xticks(rotation=90)\n        plt.title('Q8'+'__'+question_list_2['Q8'])\n        plt.show()","72a8bb2d":"data_list=[]\nfor col in df_1.columns:\n    if 'Q9' in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title('Q9'+'__'+question_list_2['Q9'])\nplt.show()","a0b323aa":"label='Q10'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","7734de77":"label='Q11'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()\n","0ad8e129":"data_list=[]\nfor col in df_1.columns:\n    if 'Q12' in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n            \n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title('Q12'+'__'+question_list[col])\nplt.show()","6776327f":"label='Q13'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()\n","e907eb34":"label='Q14'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","d1bd2d5d":"label='Q15'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()\n","36947aed":"label='Q16'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","c5cd6efb":"label='Q17'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","a2d23379":"label='Q18'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","536bf7c1":"label='Q19'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","88c3262a":"label='Q20'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","83bc07fd":"label='Q21'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","c703d795":"label='Q22'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","ad77447e":"label='Q23'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","a2522767":"label='Q24'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","189338e2":"label='Q25'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","41b5f076":"label='Q26'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","4929b818":"label='Q27_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2['Q27_A'])\nplt.show()","3b7272a9":"label='Q27_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2['Q27_B'])\nplt.show()","c49377a2":"label='Q28'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","25846b5e":"label='Q29_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","776f3488":"label='Q29_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","a0b44149":"label='Q30_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","0e5cf853":"#Q30_B has all null.\nQ30_col=[i for i in df_1.columns if 'Q30_B' in i]\ndf_1[Q30_col].isnull().sum()","cc16f2fa":"label='Q31_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","78ed1794":"label='Q31_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","60b37741":"label='Q32_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","395df013":"label='Q32_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","98d8904d":"label='Q33'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","d5aafc2f":"label='Q34_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","359c8648":"label='Q34_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","a7e066be":"label='Q35'\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","1075a202":"label='Q36_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","3d98a5b8":"label='Q36_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","b58bd150":"label='Q37_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","db479588":"label='Q37_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","e77392ff":"label='Q38_A'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","f4d6ad0c":"label='Q38_B'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","f66bf275":"label='Q39'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","8c9db9d2":"label='Q40'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","fb25ae43":"label='Q41'\n\nfor col in df_1.columns:\n            if label == col:\n                data_a=df_1[col].value_counts()\n                data_a=data_a.sort_values(ascending=False)\n                plt.figure(figsize=(10,6))\n                plt.bar(data_a.index, np.array(data_a),color='pink',edgecolor='r')\n                plt.title(label+'__'+question_list_2[label])\n                plt.xticks(rotation=90)\n                plt.show()","a3e65656":"label='Q42'\ndata_list=[]\nfor col in df_1.columns:\n    if label in col:\n        try:\n            df_=df_1[col].dropna()\n            length=len(df_)\n            d={'index':df_.value_counts().index[0],'count':df_.value_counts()[0]}\n            data_list.append(d)\n        except:print(label,'is none')\n\n            \ndata_a=pd.DataFrame(data_list)\ndata_a=data_a.sort_values('count',ascending=False)\nplt.figure(figsize=(15,10))\nplt.bar(data_a['index'], data_a['count'],color='#9ac09a',edgecolor='#00a140')\nplt.xticks(rotation=90)\nplt.title(label+'__'+question_list_2[label])\nplt.show()","e5ae2c65":"# Q32-A:\u6b21\u306e\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u88fd\u54c1\uff08\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001\u30c7\u30fc\u30bf\u30a6\u30a7\u30a2\u30cf\u30a6\u30b9\u3001\u30c7\u30fc\u30bf\u30ec\u30a4\u30af\u306a\u3069\uff09\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","3a6a7ff4":"# Q17:\u6b21\u306eML\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","a9c8abec":"# Q7:\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306f\u4f55\u3067\u3059\u304b?","f3f8ee3b":"# Q23:\u73fe\u5728\u306e\u96c7\u7528\u4e3b\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u624b\u6cd5\u3092\u30d3\u30b8\u30cd\u30b9\u306b\u53d6\u308a\u5165\u308c\u3066\u3044\u307e\u3059\u304b\uff1f","af824852":"# Q39:\u30c7\u30fc\u30bf\u5206\u6790\u307e\u305f\u306f\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3069\u3053\u3067\u516c\u306b\u5171\u6709\u307e\u305f\u306f\u5c55\u958b\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","56674476":"# Q15:\u6a5f\u68b0\u5b66\u7fd2\u624b\u6cd5\u3092\u4f55\u5e74\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","b4cf80a7":"# Q5:\u73fe\u5728\u306e\u5f79\u5272\u306b\u6700\u3082\u985e\u4f3c\u3057\u305f\u30bf\u30a4\u30c8\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044","8058c257":"# Q40:\u3069\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u30b3\u30fc\u30b9\u3092\u958b\u59cb\u307e\u305f\u306f\u5b8c\u4e86\u3057\u307e\u3057\u305f\u304b\uff1f","e6ab254b":"# Q24:\u8077\u5834\u3067\u306e\u3042\u306a\u305f\u306e\u5f79\u5272\u306e\u91cd\u8981\u306a\u90e8\u5206\u3092\u69cb\u6210\u3059\u308b\u6d3b\u52d5\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044","dffb7a30":"# Q31-B:\u4eca\u5f8c2\u5e74\u9593\u3067\u3001\u3053\u308c\u3089\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u6a5f\u68b0\u5b66\u7fd2\u88fd\u54c1\u306e\u3044\u305a\u308c\u304b\u306b\u6163\u308c\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u304b\uff1f","7906b427":"# Q38-B:\u4eca\u5f8c2\u5e74\u9593\u3067\u3001ML\u5b9f\u9a13\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u3053\u308c\u3089\u306e\u30c4\u30fc\u30eb\u306e\u3044\u305a\u308c\u304b\u306b\u6163\u308c\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u304b\uff1f","1d4a764c":"# Q37-B:\u4eca\u5f8c2\u5e74\u9593\u3067\u3001\u3069\u306e\u7279\u5b9a\u306e\u81ea\u52d5\u6a5f\u68b0\u5b66\u7fd2\u30c4\u30fc\u30eb\uff08\u307e\u305f\u306f\u90e8\u5206\u7684\u306aAutoML\u30c4\u30fc\u30eb\uff09\u306b\u6163\u308c\u305f\u3044\u3067\u3059\u304b\uff1f","94a4430b":"# Q1:\u3042\u306a\u305f\u306e\u5e74\u9f62\u306f\u4f55\u6b73\u3067\u3059\u304b\uff1f","a46fc5da":"# Q36-B:\u4eca\u5f8c2\u5e74\u9593\u3067\u3001\u81ea\u52d5\u6a5f\u68b0\u5b66\u7fd2\u30c4\u30fc\u30eb\uff08\u307e\u305f\u306f\u90e8\u5206\u7684\u306aAutoML\u30c4\u30fc\u30eb\uff09\u306e\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u6163\u308c\u305f\u3044\u3067\u3059\u304b\uff1f","8a261e15":"# Q31-A:\u6b21\u306e\u6a5f\u68b0\u5b66\u7fd2\u88fd\u54c1\u306e\u3044\u305a\u308c\u304b\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","e2ad4f16":"# Q32-B:\u6b21\u306e\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u88fd\u54c1\uff08\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001\u30c7\u30fc\u30bf\u30a6\u30a7\u30a2\u30cf\u30a6\u30b9\u3001\u30c7\u30fc\u30bf\u30ec\u30a4\u30af\u306a\u3069\uff09\u306e\u3046\u3061\u3001\u4eca\u5f8c2\u5e74\u9593\u3067\u3088\u308a\u89aa\u3057\u307f\u3084\u3059\u304f\u306a\u308a\u305f\u3044\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\u3002","69ec6bae":"# Q25:\u73fe\u5728\u306e\u5e74\u9593\u5831\u916c\u306f\u3044\u304f\u3089\u3067\u3059\u304b\uff08USD)","a0fd989f":"# Q12:\u3069\u306e\u30bf\u30a4\u30d7\u306e\u5c02\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","a5114b38":"# Q6:\u30b3\u30fc\u30c9\u3084\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u4f55\u5e74\u66f8\u3044\u3066\u3044\u307e\u3059\u304b?","7a2195cc":"# Q33:\u6b21\u306e\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u88fd\u54c1\uff08\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001\u30c7\u30fc\u30bf\u30a6\u30a7\u30a2\u30cf\u30a6\u30b9\u3001\u30c7\u30fc\u30bf\u30ec\u30a4\u30af\u306a\u3069\uff09\u306e\u3046\u3061\u3001\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","56d8ba2e":"# Q19:\u6b21\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\uff08NLP\uff09\u30e1\u30bd\u30c3\u30c9\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","1168a53e":"# Q8:\u610f\u6b32\u7684\u306a\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306b\u6700\u521d\u306b\u5b66\u3076\u3053\u3068\u3092\u304a\u52e7\u3081\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306f\u4f55\u3067\u3059\u304b?","84cb2853":"# Q2:\u3042\u306a\u305f\u306e\u6027\u5225\u306f\uff1f","2527a3d7":"# Q35:\u6b21\u306e\u30d3\u30b8\u30cd\u30b9\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9\u30c4\u30fc\u30eb\u306e\u3046\u3061\u3001\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","49a90da3":"# Q34-A:\u6b21\u306e\u30d3\u30b8\u30cd\u30b9\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9\u30c4\u30fc\u30eb\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","52ea5c4a":"# Q36-A:\u81ea\u52d5\u5316\u3055\u308c\u305f\u6a5f\u68b0\u5b66\u7fd2\u30c4\u30fc\u30eb\uff08\u307e\u305f\u306f\u90e8\u5206\u7684\u306aAutoML\u30c4\u30fc\u30eb\uff09\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b?","c620cc80":"# Q42:\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u5831\u544a\u3057\u3066\u3044\u308b\u304a\u6c17\u306b\u5165\u308a\u306e\u30e1\u30c7\u30a3\u30a2\u30bd\u30fc\u30b9\u306f\u8ab0\/\u4f55\u3067\u3059\u304b\uff1f","6f6e344d":"# Q14:\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u8996\u899a\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u307e\u305f\u306f\u30c4\u30fc\u30eb\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","021c3886":"# Q26:\u904e\u53bb5\u5e74\u9593\u306b\u3001\u81ea\u5b85\uff08\u307e\u305f\u306f\u8077\u5834\uff09\u3067\u6a5f\u68b0\u5b66\u7fd2\u3084\u30af\u30e9\u30a6\u30c9\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u306b\u8cbb\u3084\u3057\u305f\u304a\u304a\u3088\u305d\u306e\u91d1\u984d\uff08USD\uff09","726c47fa":"# Q9:\u6b21\u306e\u7d71\u5408\u958b\u767a\u74b0\u5883\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","f4cd015d":"# Q11:\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3059\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30bf\u30a4\u30d7\u306f\u4f55\u3067\u3059\u304b","1a1ff781":"# Q4:\u4eca\u5f8c2\u5e74\u4ee5\u5185\u306b\u9054\u6210\u3057\u305f\u3001\u307e\u305f\u306f\u9054\u6210\u3059\u308b\u4e88\u5b9a\u306e\u6b63\u5f0f\u306a\u6559\u80b2\u306e\u6700\u9ad8\u30ec\u30d9\u30eb\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","b825a325":"# Q21:\u3042\u306a\u305f\u304c\u96c7\u7528\u3055\u308c\u3066\u3044\u308b\u4f1a\u793e\u306e\u898f\u6a21\u306f\u3069\u306e\u304f\u3089\u3044\u3067\u3059\u304b\uff1f","0c505660":"# Q18:\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u624b\u6cd5\u306e\u30ab\u30c6\u30b4\u30ea\u306f\u3069\u308c\u3067\u3059\u304b\u3002","1c739083":"# Q38-A:\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u9a13\u306e\u7ba1\u7406\u306b\u5f79\u7acb\u3064\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","e805b498":"# Q28:\u3042\u306a\u305f\u304c\u7cbe\u901a\u3057\u3066\u3044\u308b\u30af\u30e9\u30a6\u30c9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u4e2d\u3067\u3001\u6700\u3082\u4f7f\u3044\u3084\u3059\u3044\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b?","69635105":"# Q27-B:\u6b21\u306e\u30af\u30e9\u30a6\u30c9\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u3046\u3061\u3001\u4eca\u5f8c2\u5e74\u9593\u3067\u3088\u308a\u6163\u308c\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u308b\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","cf945398":"# Q10:\u6b21\u306e\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u88fd\u54c1\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b","cd95d9af":"# Q30-A:\u6b21\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u88fd\u54c1\u306e\u3044\u305a\u308c\u304b\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","3baa61f5":"# Q29-A:\u6b21\u306e\u30af\u30e9\u30a6\u30c9\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u88fd\u54c1\u306e\u3044\u305a\u308c\u304b\u3092\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304b\uff1f","2ee406fb":"# Q34-B:\u6b21\u306e\u30d3\u30b8\u30cd\u30b9\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9\u30c4\u30fc\u30eb\u306e\u3046\u3061\u3001\u4eca\u5f8c2\u5e74\u9593\u3067\u3088\u308a\u4f7f\u3044\u6163\u308c\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\u3002","c21a2ae0":"# Q13:TPU\uff08\u30c6\u30f3\u30bd\u30eb\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\uff09\u3092\u7d04\u4f55\u56de\u4f7f\u7528\u3057\u307e\u3057\u305f\u304b\uff1f","8eb72300":"# Q29-B:\u4eca\u5f8c2\u5e74\u9593\u3067\u3001\u3053\u308c\u3089\u306e\u7279\u5b9a\u306e\u30af\u30e9\u30a6\u30c9\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u88fd\u54c1\u306e\u3044\u305a\u308c\u304b\u306b\u6163\u308c\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u304b\uff1f","b5c0170e":"# Q16:\u6b21\u306e\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","c0a8b7f6":"# \u300cKaggle survey\u300d\u306e2021\u306e\u30c7\u30fc\u30bf\u306e\u65e5\u672c\u8a9e\u306eEDA\u3067\u3059\u3002\n>  \u30b7\u30f3\u30d7\u30eb\u306b\u8cea\u554f\u3092\u65e5\u672c\u8a9e\u306b\u3057\u3066\u30b0\u30e9\u30d5\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u3082\u3057\u5f79\u306b\u7acb\u3063\u305f\u3068\u601d\u308f\u308c\u307e\u3057\u305f\u3089\u3001upvote\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002","a5ed6321":"# Q22:\u3042\u306a\u305f\u306e\u4e8b\u696d\u6240\u3067\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u62c5\u5f53\u3057\u3066\u3044\u308b\u306e\u306f\u304a\u3088\u305d\u4f55\u4eba\u3067\u3059\u304b\uff1f","212d2144":"# Q41:\u8077\u5834\u3084\u5b66\u6821\u3067\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u4e3b\u8981\u306a\u30c4\u30fc\u30eb\u306f\u4f55\u3067\u3059\u304b\uff1f","37df0744":"# Q27-A:\u6b21\u306e\u30af\u30e9\u30a6\u30c9\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f","a8ef4e6d":"# Q20:\u73fe\u5728\u306e\u96c7\u7528\u4e3b\/\u5951\u7d04\uff08\u307e\u305f\u306f\u9000\u8077\u3057\u305f\u5834\u5408\u306f\u6700\u8fd1\u306e\u96c7\u7528\u4e3b\uff09\u306f\u3069\u306e\u696d\u754c\u306b\u3042\u308a\u307e\u3059\u304b\uff1f","27a5b4e3":"# Q3:\u4eca\u3069\u306e\u56fd\u306b\u4f4f\u3093\u3067\u3044\u3059\u304b\uff1f","c1982735":"# Q37-A:\u6b21\u306e\u81ea\u52d5\u6a5f\u68b0\u5b66\u7fd2\u30c4\u30fc\u30eb\uff08\u307e\u305f\u306f\u90e8\u5206\u7684\u306aAutoML\u30c4\u30fc\u30eb\uff09\u306e\u3046\u3061\u3001\u5b9a\u671f\u7684\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u3069\u308c\u3067\u3059\u304b\uff1f"}}