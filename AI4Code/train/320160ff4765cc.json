{"cell_type":{"97e75070":"code","774274bd":"code","ef18f9fd":"code","b95cdd95":"code","a11ddb04":"code","77866d9f":"code","5f4d2bf8":"code","c103b331":"code","e0f95ffe":"code","7b0ea2cd":"code","a872dd6d":"code","5fdcf277":"code","6595e6b6":"code","bb60e3ac":"code","4037605e":"markdown"},"source":{"97e75070":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","774274bd":"import tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Conv2D,MaxPool2D,Dropout,Flatten,Dense,BatchNormalization\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import EarlyStopping","ef18f9fd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","b95cdd95":"import cv2\n","a11ddb04":"upic='..\/input\/cell-images-for-detecting-malaria\/cell_images\/Uninfected\/C100P61ThinF_IMG_20150918_144104_cell_131.png'\napic='..\/input\/cell-images-for-detecting-malaria\/cell_images\/Parasitized\/C100P61ThinF_IMG_20150918_144104_cell_164.png'\nplt.figure(1, figsize = (15 , 7))\nplt.subplot(1 , 2 , 1)\nplt.imshow(cv2.imread(upic))\nplt.title('Enfekte Olmayan H\u00fccre Cell')\nplt.xticks([]) , plt.yticks([])\n\nplt.subplot(1 , 2 , 2)\nplt.imshow(cv2.imread(apic))\nplt.title('Enfekte Cell')\nplt.xticks([]) , plt.yticks([])\n\nplt.show()","77866d9f":"width =128\nheight=128","5f4d2bf8":"datagen=ImageDataGenerator(rescale=1\/255.0,validation_split=0.2)","c103b331":"train_datagen=datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/',\n                                target_size=(width,height),\n                                         class_mode='binary',\n                                         batch_size=16,\n                                         subset='training')","e0f95ffe":"val_datagen=datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/',\n                                        target_size=(width,height),\n                                        class_mode='binary',\n                                        batch_size=16,\n                                        subset='validation')","7b0ea2cd":"model=Sequential()\nmodel.add(Conv2D(16,(3,3),activation='relu',input_shape=(128,128,3)))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.2))\nmodel.add(Conv2D(32,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.1))\n\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.2))\n\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1,activation='sigmoid'))\n\n","a872dd6d":"model.summary()","5fdcf277":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","6595e6b6":"earyl_stop=EarlyStopping(monitor='val_loss',patience=2)","bb60e3ac":"history=model.fit_generator(generator=train_datagen,steps_per_epoch=len(train_datagen),\n                           epochs=15,\n                           validation_data=val_datagen,\n                           validation_steps=len(val_datagen),\n                           callbacks=[earyl_stop])","4037605e":"model"}}