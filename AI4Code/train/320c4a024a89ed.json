{"cell_type":{"7b3c85cd":"code","9854ea48":"code","7b45f330":"code","8314c318":"code","728fa803":"code","31a7dec5":"code","f494ee3c":"code","0fdaece3":"code","c5b28d2e":"code","00b68e41":"code","665c234d":"code","65c00ca9":"code","ef049774":"code","70b41a81":"code","ff0e2d0e":"code","53a43468":"code","ad8810ce":"code","0fa7e1f6":"code","371a7c90":"code","edf8dd02":"code","b95985e1":"code","69b1eed1":"code","d760cd61":"code","c7ba0e65":"code","ccaf6f5d":"code","6c361320":"code","49927fc2":"code","fe29ada6":"code","38767b3c":"code","385f96e6":"code","1feb13e4":"code","a5178a55":"code","37a49062":"code","ebd6f426":"code","8749b4f0":"code","546fafcd":"code","12abf5ee":"code","46ae863b":"code","bbf8e357":"code","9642461f":"code","6971c900":"code","a4cfadd6":"code","038db764":"code","f6e10c82":"code","0f9b4598":"code","9e3c2b9f":"code","f39b94b5":"code","59ebedd6":"code","6ce057c9":"code","e23396c4":"code","a2486c2f":"code","130f1014":"code","36f88da5":"code","462dde15":"code","1fa8106a":"code","a288fe80":"code","9762f0ab":"code","594b371a":"code","63739794":"markdown","e5e5152e":"markdown","90f42f7f":"markdown","2085f0c6":"markdown","16217892":"markdown","0f6061ec":"markdown","55a035ac":"markdown","40e8f470":"markdown","00db702c":"markdown","ddee69ed":"markdown","69fabb43":"markdown","217b768e":"markdown","11d860d2":"markdown","7955b89e":"markdown","276df461":"markdown","a642badc":"markdown","1f4a37d0":"markdown","733bf48d":"markdown","8a2879be":"markdown","d023a6dd":"markdown","32dd800d":"markdown","8a90ce3f":"markdown","6b9d70e4":"markdown","6efd0872":"markdown","2945ce66":"markdown","1a6a83cf":"markdown","6f273014":"markdown","78e5c75f":"markdown","bc2a670c":"markdown","1c442e95":"markdown","5d120504":"markdown"},"source":{"7b3c85cd":"import pandas as pd \nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\nnp.random.seed(10)","9854ea48":"churn_df = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')","7b45f330":"churn_df.head()","8314c318":"churn_df.info()","728fa803":"churn_df.duplicated().sum()","31a7dec5":"sns.boxplot(x=\"CreditScore\", data=churn_df);","f494ee3c":"scoreless580 = churn_df[\"CreditScore\"] < 580\nscoreless669 = (churn_df[\"CreditScore\"] >= 580) & (churn_df[\"CreditScore\"] <= 669)\nscoremore670 = churn_df[\"CreditScore\"] >= 670\n\nchurn_df[\"score_cat\"] = 0\nchurn_df.loc[scoreless669, \"score_cat\"] = 1\nchurn_df.loc[scoremore670, \"score_cat\"] = 2","0fdaece3":"churn_df.loc[scoreless669, \"score_cat\"] = 1\nchurn_df.loc[scoremore670, \"score_cat\"] = 2","c5b28d2e":"churn_df[\"score_cat\"].value_counts()","00b68e41":"sns.countplot(x=\"score_cat\", hue=\"Exited\", data=churn_df);","665c234d":"sns.countplot(x=\"Geography\", hue=\"Exited\", data=churn_df);","65c00ca9":"churn_df[[\"Geography\", \"Exited\"]].value_counts(normalize=True)","ef049774":"churn_df[\"Geography\"].value_counts(normalize=True)","70b41a81":"churn_df[\"Exited\"].value_counts(normalize=True)","ff0e2d0e":"sns.countplot(x=\"Gender\", hue=\"Exited\", data=churn_df);","53a43468":"churn_df[\"Gender\"].value_counts(normalize=True)","ad8810ce":"churn_df[[\"Gender\", \"Exited\"]].value_counts(normalize=True)","0fa7e1f6":"sns.boxplot(x=\"Age\", data=churn_df);","371a7c90":"churn_df[\"Age\"].describe()","edf8dd02":"churn_df[\"cat_age\"] = pd.qcut(churn_df[\"Age\"], q=3, labels=False )","b95985e1":"print(\"-----Age Intervals-----\")\nchurn_df.groupby(\"cat_age\")[\"Age\"].agg(['min','max','count'])","69b1eed1":"sns.countplot(x=\"cat_age\", hue=\"Exited\", data=churn_df);","d760cd61":"sns.countplot(x=\"Tenure\", hue=\"Exited\", data=churn_df);","c7ba0e65":"churn_df[\"Balance\"].describe()","ccaf6f5d":"sns.boxplot(x=\"Balance\", data=churn_df);","6c361320":"churn_df[\"cat_balance\"] = 0","49927fc2":"churn_df.loc[((churn_df.Balance > 0) & (churn_df.Balance <= 100000)),\"cat_balance\"] = 1\nchurn_df.loc[((churn_df.Balance > 100000) & (churn_df.Balance <= 150000)),\"cat_balance\"] = 2\nchurn_df.loc[(churn_df.Balance > 150000),\"cat_balance\"] = 3","fe29ada6":"sns.countplot(x=\"cat_balance\", hue=\"Exited\", data=churn_df);","38767b3c":"sns.countplot(x=\"NumOfProducts\", hue=\"Exited\", data=churn_df);","385f96e6":"churn_df[\"NumOfProducts\"].value_counts()","1feb13e4":"churn_df[\"have_products\"] = 0\nchurn_df.loc[churn_df[\"NumOfProducts\"]>1, \"have_products\"] = 1","a5178a55":"churn_df[\"have_products\"].value_counts(normalize=True)","37a49062":"churn_df[[\"have_products\", \"Exited\"]].value_counts(normalize=True)","ebd6f426":"sns.countplot(x=\"have_products\", hue=\"Exited\", data=churn_df);","8749b4f0":"churn_df[[\"HasCrCard\", \"Exited\"]].value_counts(normalize=True)","546fafcd":"sns.countplot(x=\"HasCrCard\", hue=\"Exited\", data=churn_df);","12abf5ee":"churn_df[[\"IsActiveMember\", \"Exited\"]].value_counts(normalize=True)","46ae863b":"sns.countplot(x=\"IsActiveMember\", hue=\"Exited\", data=churn_df);","bbf8e357":"churn_df[\"EstimatedSalary\"].describe()","9642461f":"churn_df[\"salary_cat\"] = pd.qcut(churn_df[\"EstimatedSalary\"], q=3, labels=False )","6971c900":"churn_df[[\"salary_cat\", \"Exited\"]].value_counts(normalize=True)","a4cfadd6":"sns.countplot(x=\"salary_cat\", hue=\"Exited\", data=churn_df);","038db764":"churn_df.columns","f6e10c82":"features1 = [\"Geography\", \"Gender\", \"cat_balance\", \"have_products\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"cat_age\"]\nfeatures2 = [\"Geography\", \"Gender\", \"cat_balance\", \"have_products\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"salary_cat\"]\nfeatures3 = [\"Geography\", \"Gender\", \"cat_balance\", \"have_products\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"EstimatedSalary\"]\nfeatures4 = [\"Geography\", \"Gender\", \"cat_balance\", \"have_products\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"cat_age\", \"salary_cat\"]\nfeatures5 = [\"Geography\", \"Gender\", \"Balance\", \"have_products\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"cat_age\"]\nfeatures6 = [\"Geography\", \"Gender\", \"Balance\", \"NumOfProducts\", \"HasCrCard\", \"IsActiveMember\", \"score_cat\", \"cat_age\"]\nfeatures7 = [\"Geography\", \"Gender\", \"Balance\", \"NumOfProducts\", \"HasCrCard\", \"IsActiveMember\", \"Tenure\", \"cat_age\", \"EstimatedSalary\"]\nfeatures8 = [\"Geography\", \"Gender\", \"cat_balance\", \"Balance\", \"have_products\", \"NumOfProducts\", \"HasCrCard\", \"IsActiveMember\", \"cat_age\", \"EstimatedSalary\"]","0f9b4598":"X = churn_df.drop([\"Exited\"], axis=1)\ny = churn_df[\"Exited\"]","9e3c2b9f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","f39b94b5":"X_train = X_train[features6]\nX_test = X_test[features6]","59ebedd6":"# Geography, Gender --> labeled_Encoding \ncat_features = [\"Geography\", \"Gender\"]\nle = LabelEncoder()\nfor i in cat_features:\n    le.fit(X_train[i])\n    X_train[i] = le.transform(X_train[i])\n    X_test[i] = le.transform(X_test[i])","6ce057c9":"# One hot encoder for \"Geography\", \"Gender\"\ndef onehotencoder(df, columns):\n    for col in columns:\n        cats = df[col].unique()\n        for i in range(len(cats)):\n            name = col +\"_\"+ cats[i]\n            df[name] = df[col].map({cats[i]: 1})\n            df[name].fillna(0, inplace=True)\n    return df","e23396c4":"\"\"\"cat_features = [\"Geography\", \"Gender\"]\nX_train = onehotencoder(X_train, cat_features)\nX_test = onehotencoder(X_test, cat_features)\n\nX_train.drop([\"Geography\", \"Gender\"], axis=1, inplace=True)\nX_test.drop([\"Geography\", \"Gender\"], axis=1, inplace=True)\n\"\"\"","a2486c2f":"display(X_train.head(2))\ndisplay(X_test.head(2))\n","130f1014":"# Standarize data\nsc = StandardScaler()\nsc.fit(X_train)\nX_train = sc.transform(X_train)\nX_test = sc.transform(X_test)","36f88da5":"model = keras.models.Sequential()\n#model.add(layers.Flatten(input_shape=X_train.shape, name='input'))\n#model.add(layers.Dense(100, activation='relu', name='hidden_1'))\n#model.add(layers.Dense(50, activation='relu', name='hidden_2'))\n#model.add(layers.Dense(10, activation='sigmoid', name='output'))\n\nmodel.add(layers.Dense(units = 300, activation='relu',input_shape=X_train.shape))\nmodel.add(layers.Dense(units = 200, activation='relu'))\nmodel.add(layers.Dense(units = 150, activation='relu'))\nmodel.add(layers.Dense(units = 10, activation = 'sigmoid'))","462dde15":"model.compile(loss='sparse_categorical_crossentropy', optimizer='Adamax', metrics=['accuracy'])","1fa8106a":"model.summary()","a288fe80":"# Creat checkpoint to save model at the end of each epoch:\ncheckpoint_cb = keras.callbacks.ModelCheckpoint(\"my_keras_model.h5\", save_best_only=True)\n\n# Creat EarlyStopping checkpoint:\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=10, restore_best_weights=True)\n\nhistory = model.fit(X_train, y_train, validation_split=0.33, batch_size = 100, epochs = 100)","9762f0ab":"learning_data = pd.DataFrame(history.history)\nlearning_data.plot(figsize=(10,5))\nplt.grid(True)\nplt.show()","594b371a":"model.evaluate(X_test, y_test)","63739794":"### Explore Tenure Column <br>\n","e5e5152e":"Create a new column have_products that have 1 for clients with more than one product and 0 who is not  ","90f42f7f":"## ANN Model","2085f0c6":"### Explore HasCrCard Column <br>\n","16217892":"Conclusion clients with credit-card seem to stay more with the bank ","0f6061ec":"There's no obvious trend or relationship between salary_cat and Excited, so we can discard this column from training","55a035ac":"### Explore Geography Column <br>\n","40e8f470":"Higher score more clint stay with bank ","00db702c":"People who are age > 41 are more likely to leave the bank and vice versa! ","ddee69ed":"1- Most of data were collected from France banks so it's not balanced <br>\n2- \"Excited\" data is not balanced too","69fabb43":"There're no null values <br>\nWe can drop RowNumber, Surname columns <br>","217b768e":"NumOfProducts column has unbalanced categories for categories 3, and 4  <br>\nBut from categories 1 and 2, it seems that clients who have more products with the bank aim to stay with the bank <br>","11d860d2":"Males are more likely to stay @ the bank than Females","7955b89e":"### Explore Balance Column <br>\n","276df461":"It seems that people in France are more like to stay in the bank than others <br>\ncheck if this true \n","a642badc":"The assumption seems true, but might it because \"Excited\" data is not balanced <br>\nCheck if Exited data is balanced ","1f4a37d0":"### Explore Age Column <br>\n","733bf48d":"Conclusion Active clients  seem to stay more with the bank ","8a2879be":"### Explore NumOfProducts Column <br>\n","d023a6dd":"### Explore Gender Column <br>\n","32dd800d":"### Explore IsActiveMember Column <br>\n","8a90ce3f":"### Split data to train, validate, test","6b9d70e4":"### Explore EstimatedSalary Column <br>\n","6efd0872":"split \"Balance\" column to 4 category <br>\n0 -->     Balance == 0 <br>\n1 --> 0 < Balance <= 100,000 <br>\n2 --> 100,000 < Balance <= 150,000 <br>\n3 --> 150,000 < Balance  <br>","2945ce66":"Conclusion clients with more products with the bank seem to stay more with the bank ","1a6a83cf":"## Prepare data for training","6f273014":"There's no obvious trend or relationship between Tenure and Excited, so we can discard this column from training","78e5c75f":"# EDA ","bc2a670c":"Split EstimatedSalary column to 3 categories  <br>\n","1c442e95":"Split Age column To find if there's a relationship between Exited and age ","5d120504":"### Explore CreditScore Column <br>\nHigher credit scores mean you have demonstrated responsible credit behavior in the past, which may make potential lenders & <br> creditors more confident when evaluating a request for credit <br>\nunder 580  are considered bad  <br>\n580 to 669 are considered fair; <br>\n670 and up are considered good; <br>"}}