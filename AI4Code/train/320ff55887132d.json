{"cell_type":{"3b7b3c94":"code","a00609a4":"code","acac416c":"code","f9dda00d":"code","693dc371":"code","1e77f12e":"code","9b88e615":"code","cb7b6ae1":"code","9889fbc7":"code","b7bc350c":"code","4181eef7":"code","2eaba922":"code","ddb01208":"code","8a4f61a4":"markdown","8db78877":"markdown"},"source":{"3b7b3c94":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport cv2\nfrom sklearn.metrics import classification_report, log_loss, accuracy_score","a00609a4":"!pip install PyQRCode\n!pip install pypng","acac416c":"import pyqrcode","f9dda00d":"paths=[]\nfor dirname, _, filenames in os.walk('..\/input\/qr-codes\/qr_dataset\/'):\n    for filename in filenames:\n        paths+=[os.path.join(dirname, filename)]\nprint(len(paths))        ","693dc371":"title=['0123456789','Happy_New_Year','Tokyo_2020_Olympics','Pandemic']","1e77f12e":"# creating method 1\nfor item in title:\n    code2 = pyqrcode.QRCode(item,error='M')\n    code2.png('.\/'+item+'.png',scale=6)","9b88e615":"# creating method 2\n#for item in title:\n#    code = pyqrcode.create(item, error='L', version=3, mode='binary')   \n#    code.png('.\/'+item+'.png', scale=5, module_color=[0,0,0,128], background=[255,255,255])","cb7b6ae1":"fig,axs = plt.subplots(2,2,figsize=(8,8))\nfor i in range(4):\n    image1=cv2.imread('.\/'+title[i]+'.png')\n    r=i\/\/2\n    c=i%2\n    axs[r][c].set_xticks([])\n    axs[r][c].set_yticks([])\n    axs[r][c].set_title(title[i])\n    ax=axs[r][c].imshow(image1)\nplt.show()","9889fbc7":"# Reading method\ndef qrdec2_cv2(image_bgr):\n    qrd = cv2.QRCodeDetector()\n    retval, decoded_info, points, straight_qrcode = qrd.detectAndDecodeMulti(image_bgr)\n    result=[retval, decoded_info, points, straight_qrcode]\n    if retval==True:\n        return result[1][0]\n    else:\n        return 'False'","b7bc350c":"for i in range(4):\n    image1=cv2.imread('.\/'+title[i]+'.png')\n    dc=qrdec2_cv2(image1)\n    print(dc)","4181eef7":"ANS=[]\nfor item in paths:\n    ANS+=[item.split('\/')[4][0:-7]]\nprint(ANS[0:10])","2eaba922":"DC=[]\nfor i in range(10000):\n    image1=cv2.imread(paths[i])\n    DC+=[qrdec2_cv2(image1)]\nprint(DC[0:10])","ddb01208":"accuracy_score(ANS,DC)","8a4f61a4":"# Dataset readability ","8db78877":"# Create and Read QR cords"}}