{"cell_type":{"9c9cf0a4":"code","39fb11a5":"code","a9446c56":"code","1be3682f":"code","b7976623":"code","677d350e":"code","ab0805a2":"code","7cdc10b0":"code","4a321636":"code","47e01a17":"code","0c1dc904":"code","1b80a252":"code","d0c559f2":"code","cfe1f0ea":"markdown","c339c269":"markdown","3d815e2f":"markdown","2da872a7":"markdown"},"source":{"9c9cf0a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","39fb11a5":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest= pd.read_csv(\"..\/input\/test.csv\")\ntrain.shape, test.shape","a9446c56":"Y_train = train[\"label\"]\nX_train = train.drop(labels = [\"label\"],axis = 1) ","1be3682f":"X_train.isnull().any().describe()","b7976623":"\ntest.isnull().any().describe()","677d350e":"import seaborn as sns\ng = sns.countplot(Y_train)","ab0805a2":"X_train = X_train \/ 255.0\ntest = test \/ 255.0","7cdc10b0":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\n\ngrid_params = {\n    \"n_neighbors\": [1, 2, 3, 4, 5]\n}\ngs = GridSearchCV(KNeighborsClassifier(), grid_params, n_jobs=-1, cv=3, verbose=10)\ngs_result = gs.fit(X_train, Y_train)","4a321636":"gs_result.best_score_","47e01a17":"gs_result.best_estimator_","0c1dc904":"gs_result.best_params_","1b80a252":"preds = gs_result.best_estimator_.predict(test)","d0c559f2":"np.savetxt('submission.csv', \n           np.c_[range(1,len(test)+1),preds], \n           delimiter=',', \n           header = 'ImageId,Label', \n           comments = '', \n           fmt='%d')","cfe1f0ea":"### Classification using knn model","c339c269":"### Check for null and missing values","3d815e2f":"### Check if we have similar number of examples for each class","2da872a7":"### Normalization"}}