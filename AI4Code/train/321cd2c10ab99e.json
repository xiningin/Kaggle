{"cell_type":{"db180ccb":"code","7578cdfe":"code","a25704a4":"code","30828f90":"code","be0edccd":"code","5f7a4b7b":"code","3a12c91c":"code","88ef39db":"code","71768243":"code","5a2c12ea":"code","2ef71136":"code","72ea8ab9":"code","b4d1a8f9":"code","c774f122":"code","22bae39e":"markdown","63b8ab18":"markdown","6e6e471f":"markdown","7802c292":"markdown"},"source":{"db180ccb":"#Import Lib files\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","7578cdfe":"cancer = pd.read_csv('\/kaggle\/input\/breast-cancer-prediction-dataset\/Breast_cancer_data.csv')\ncancer.head()","a25704a4":"cancer.duplicated().sum()","30828f90":"cancer.isna().sum()","be0edccd":"#Check corrrelations\nimport seaborn as sns\nplt.figure(figsize=(20,10))\n\nsns.heatmap(cancer.corr(),annot=True)","5f7a4b7b":"cancer.shape","3a12c91c":"from sklearn.model_selection import train_test_split\n\nX = cancer.iloc[:,0:4].values\ny= cancer.iloc[:,-1].values\n\nfrom sklearn.preprocessing import LabelEncoder\nleb = LabelEncoder()\ny = leb.fit_transform(y)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=0)","88ef39db":"from sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\n\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","71768243":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n\n\n#add first input and hidden layer\n\nclassifier = Sequential()\nclassifier.add(Dense(3, activation='relu'))\n                    \n                        \n#add second hidden layer\nclassifier.add(Dense(3, activation='relu'))\n\n#adding output layer\nclassifier.add(Dense(1, activation='sigmoid'))","5a2c12ea":"classifier.compile(optimizer='Adam', loss='binary_crossentropy', metrics=['accuracy'])","2ef71136":"classifier.fit(X_train, y_train, batch_size=100, epochs=100)","72ea8ab9":"#Predict test result\ny_pred = classifier.predict(X_test)\ny_pred = (y_pred > 0.5)","b4d1a8f9":"#Make Confusion metrix\n\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)","c774f122":"plt.figure(figsize=(10,10))\nsns.heatmap(cm,annot=True)","22bae39e":"Feature scaling","63b8ab18":"EDA Part","6e6e471f":"Train data","7802c292":"Model Building"}}