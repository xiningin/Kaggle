{"cell_type":{"6415fe9b":"code","2b99eed6":"code","feb584ea":"code","6a56b4b2":"code","fe9fd19d":"code","8c266be0":"code","c413822e":"code","2837df3d":"code","ebd8b6bc":"code","1a2cdd6b":"code","3b0900a5":"code","6b057e2d":"code","2dc48614":"code","5a977fa2":"code","02a528e0":"code","3c79dc93":"code","32dcd382":"code","7ac7376e":"markdown","ecfca95d":"markdown","def60d64":"markdown","5a877aa5":"markdown","1d72e121":"markdown","83a64eb9":"markdown","9660d53f":"markdown","5de100ec":"markdown","d4b91cc7":"markdown"},"source":{"6415fe9b":"import numpy as np\nimport pandas as pd\nimport os\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly.graph_objs as go\nimport plotly as py","2b99eed6":"df = pd.read_csv(\"\/kaggle\/input\/us-reported-worker-fatalitiese\/worker_fatalities_main.csv\")\ndf.head(5)","feb584ea":"df.shape","6a56b4b2":"df.info()","fe9fd19d":"df.describe()","8c266be0":"df.drop(df.loc[df.Latitude=='Unknown'].index, inplace=True)\ndf.drop(df.loc[df.Longitude=='Unknown'].index, inplace=True)","c413822e":"df.isnull().any()","2837df3d":"df.dropna(inplace=True)\ndf.shape","ebd8b6bc":"df[\"Latitude\"] = df.Latitude.astype(float)\ndf[\"Longitude\"] = df.Longitude.astype(float)","1a2cdd6b":"s = df.Type.value_counts()\nvalue_cnt_df = pd.DataFrame({'Type':s.index, 'Count':s.values})\ntrace1 = {\n  'x': value_cnt_df['Type'],\n  'y': value_cnt_df['Count'],\n  'name': 'Number of Type',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality Type'},\n  'barmode': 'relative',\n  'title': 'US Fatality Type'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","3b0900a5":"s = df.Description.value_counts()[:15]\nvalue_cnt_df = pd.DataFrame({'Cause':s.index, 'Count':s.values})\ntrace1 = {\n  'x': value_cnt_df['Cause'],\n  'y': value_cnt_df['Count'],\n  'name': 'Number of Causes',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality Cause'},\n  'barmode': 'relative',\n  'title': 'US Fatality Cause with maximum number'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6b057e2d":"s = df.Date.value_counts()[:15]\nvalue_cnt_df = pd.DataFrame({'Date':s.index, 'Count':s.values})\ntrace1 = {\n  'x': value_cnt_df['Date'],\n  'y': value_cnt_df['Count'],\n  'name': 'Number of Dates',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality Dates'},\n  'barmode': 'relative',\n  'title': 'US Fatality Dates with maximum number'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","2dc48614":"df['year'] = pd.DatetimeIndex(df['Date']).year\ny = df.year.value_counts()\nprint(y)\nvalue_cnt_df_y = pd.DataFrame({'Year':y.index, 'Count':y.values})\ntrace1 = {\n  'x': value_cnt_df_y['Year'],\n  'y': value_cnt_df_y['Count'],\n  'name': 'Year',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality Year'},\n  'title': 'US Fatality states with maximum Year'\n};\nfig = go.Figure(data = data, layout = layout)\nfig.update_yaxes(type=\"log\")\niplot(fig)","5a977fa2":"df['Month'] = pd.DatetimeIndex(df['Date']).month\nm = df.Month.value_counts()\nprint(m)\nvalue_cnt_df_m = pd.DataFrame({'Month':m.index, 'Count':m.values})\ntrace1 = {\n  'x': value_cnt_df_m['Month'],\n  'y': value_cnt_df_m['Count'],\n  'name': 'Month',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality Month'},\n  'title': 'US Fatality states with maximum Month'\n};\nfig = go.Figure(data = data, layout = layout)\n# fig.update_yaxes(type=\"log\")\niplot(fig)","02a528e0":"s = df.State.value_counts()\nvalue_cnt_df = pd.DataFrame({'State':s.index, 'Count':s.values})\ntrace1 = {\n  'x': value_cnt_df['State'],\n  'y': value_cnt_df['Count'],\n  'name': 'Number of States',\n  'type': 'bar'\n};\n\ndata = [trace1];\nlayout = {\n  'xaxis': {'title': 'Fatality States'},\n  'barmode': 'relative',\n  'title': 'US Fatality states with maximum number'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","3c79dc93":"fig.update_yaxes(type=\"log\")\niplot(fig)","32dcd382":"!pip install opencage\nfrom opencage.geocoder import OpenCageGeocode\nimport folium\nkey = \"ec38974f44884f42bfa871dc36b8a090\"\ngeocoder = OpenCageGeocode(key)\nUS = geocoder.geocode(\"US\")\nlat = US[0]['geometry']['lat']\nlng = US[0]['geometry']['lng']\nmap = folium.Map(location=[lat, lng], zoom_start=3)\nfor idx, row in df.iterrows():\n    pop = row[\"Date\"]\n    folium.Marker((row[\"Latitude\"], row[\"Longitude\"]), popup=pop).add_to(map)\nmap","7ac7376e":"### Most of the casuality is unknown","ecfca95d":"# US Reported Workers Fatality\n### Simple map which shows locations of fatality\n\n### Topics\n* 1. Simple Data Analysis and preparation\n* 2. Visualization\n    1. Fatality types\n    2. Fatality causes\n    3. Fatality dates\n    4. Fatality States\n* 3. Map with folium","def60d64":"## Simple Data Analysis","5a877aa5":"## Plot Locations on Map need to zoom and see\n### Its taking too much of memory and slows down the notebook","1d72e121":"### Use log to transform visualization","83a64eb9":"### Top 15 dates of fatality","9660d53f":"### Month with highest number of fatalities","5de100ec":"### Top causes of fatality","d4b91cc7":"### Year with highest number of fatalities"}}