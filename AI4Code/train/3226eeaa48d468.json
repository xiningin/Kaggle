{"cell_type":{"da6cbc4a":"code","bdedeee4":"code","e4c30a85":"code","eb190316":"code","66f14341":"code","ff139056":"code","abd04405":"code","34176327":"code","ecc93f34":"code","419aaadd":"code","52ecb793":"code","61f64ce9":"code","98f3648b":"markdown","2e1f02d9":"markdown","5236eb64":"markdown","bc824fe5":"markdown","03d22451":"markdown","97d267c6":"markdown","a9d8dd70":"markdown","750b785e":"markdown"},"source":{"da6cbc4a":"import numpy as np\nimport pandas as pd","bdedeee4":"input_dir = \"..\/input\/tabular-playground-series-jun-2021\/\"\ntrain_df = pd.read_csv(input_dir + \"train.csv\")","e4c30a85":"train_df.head()","eb190316":"train_df.nunique().sort_values(ascending=False)[:20]","66f14341":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ny = le.fit_transform(train_df[\"target\"])\n\nX = train_df.iloc[:, 1:-1].values","ff139056":"from sklearn.feature_extraction.text import TfidfTransformer\n\ntf_idf = TfidfTransformer()\nX = tf_idf.fit_transform(X)","abd04405":"from sklearn.model_selection import train_test_split\n\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, stratify=y,\n                                                      test_size=0.1, random_state=42)","34176327":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=300, max_depth=15, n_jobs=-1)\nrf.fit(X_train, y_train)","ecc93f34":"def log_loss(pred_probs, y_valid):\n    pred_probs = pred_probs + 1e-15 # numerical stability\n    y_valid = y_valid.reshape(-1, 1) \n    \n    # get probs for each class\n    preds_class = np.take_along_axis(pred_probs, y_valid, axis=1)\n    return -1 * np.log(preds_class).mean()","419aaadd":"preds = rf.predict_proba(X_valid)\nlog_loss(preds, y_valid)","52ecb793":"test_df = pd.read_csv(input_dir + \"test.csv\")\nX_test = tf_idf.transform(test_df.iloc[:, 1:].values)\ntest_preds = rf.predict_proba(X_test)","61f64ce9":"sub = pd.read_csv(input_dir + \"sample_submission.csv\")\nsub.iloc[:, 1:] = test_preds\nsub.to_csv(\"submission.csv\", index=False)","98f3648b":"# Train a Random Forest","2e1f02d9":"# Make predictions and submit","5236eb64":"train a random forest without further tuning","bc824fe5":"# Preprocessing for modeling","03d22451":"stratified split the data into training set and validation set","97d267c6":"# Import and Take a look at the data","a9d8dd70":"Performance on validation set","750b785e":"get features and transform target"}}