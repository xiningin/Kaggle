{"cell_type":{"bd36ea55":"code","56f58ddc":"code","fc0ac053":"code","88408b5e":"code","21cd5de7":"code","407e4d10":"code","74ba61e6":"code","b05eb5d1":"code","5a2aa7d9":"code","f85ab855":"code","f6ff2323":"code","76e3f4b7":"code","31706556":"code","0a15e899":"code","25f9eea0":"code","28c011d7":"code","e2f8656c":"code","11050e49":"code","0a237ce8":"code","ebadcfa8":"code","32633106":"code","f47c3566":"code","c66fbaba":"code","37294c5d":"code","d2f3a897":"code","30d76984":"code","b0a772ed":"code","e3757f01":"code","4422f27a":"code","e4c69c7f":"code","080d36d4":"code","546d6a2b":"code","888419e9":"code","96af0c7a":"code","e87785bb":"markdown","25d798a9":"markdown","d581ea11":"markdown","cee12e59":"markdown","ee945391":"markdown","6f89e1d0":"markdown","cc6c8a09":"markdown","99055437":"markdown","f61ba772":"markdown","9017991e":"markdown"},"source":{"bd36ea55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv), Will be used for visualization as well\n\n# Visualization libraries\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56f58ddc":"!pip install dexplot\n!pip install chart_studio\n\nimport chart_studio.plotly as py\nimport dexplot as dxp ","fc0ac053":"df_China = pd.read_excel(open('..\/input\/population-growth-of-top-25-countries\/World Population.xlsx','rb'),sheet_name='China')\ndf_India = pd.read_excel(open('..\/input\/population-growth-of-top-25-countries\/World Population.xlsx','rb'),sheet_name='India')\ndf_USA = pd.read_excel(open('..\/input\/population-growth-of-top-25-countries\/World Population.xlsx','rb'),sheet_name='USA')\ndf_Indonasia = pd.read_excel(open('..\/input\/population-growth-of-top-25-countries\/World Population.xlsx','rb'),sheet_name='Indonasia')\ndf_Pakistan = pd.read_excel(open('..\/input\/population-growth-of-top-25-countries\/World Population.xlsx','rb'),sheet_name='Pakistan')\n","88408b5e":"df_China.head()","21cd5de7":"\n\ndf_China.columns = df_China.columns.str.replace(' ', '_')\ndf_China=df_China.rename(columns={'Yearly_%\\nChange':'Yearly_%_Change','Yearly\\nChange':'Yearly_Change',\n                        \"Country's_Share_of\\nWorld_Pop\":\"Country's_Share_of_World_Pop\",\n                        'Urban\\nPop_%':'Urban_Pop_%','\\nGlobal_Rank':'Global_Rank'})\n\ndf_India.columns = df_India.columns.str.replace(' ', '_')\ndf_India=df_India.rename(columns={'Yearly_%\\nChange':'Yearly_%_Change','Yearly\\nChange':'Yearly_Change',\n                        \"Country's_Share_of\\nWorld_Pop\":\"Country's_Share_of_World_Pop\",\n                        'Urban\\nPop_%':'Urban_Pop_%','\\nGlobal_Rank':'Global_Rank'})\n\ndf_USA.columns = df_USA.columns.str.replace(' ', '_')\ndf_USA=df_USA.rename(columns={'Yearly_%\\nChange':'Yearly_%_Change','Yearly\\nChange':'Yearly_Change',\n                        \"Country's_Share_of\\nWorld_Pop\":\"Country's_Share_of_World_Pop\",\n                        'Urban\\nPop_%':'Urban_Pop_%','\\nGlobal_Rank':'Global_Rank'})\n\ndf_Indonasia.columns = df_Indonasia.columns.str.replace(' ', '_')\ndf_Indonasia=df_Indonasia.rename(columns={'Yearly_%\\nChange':'Yearly_%_Change','Yearly\\nChange':'Yearly_Change',\n                        \"Country's_Share_of\\nWorld_Pop\":\"Country's_Share_of_World_Pop\",\n                        'Urban\\nPop_%':'Urban_Pop_%','\\nGlobal_Rank':'Global_Rank'})\n\ndf_Pakistan.columns = df_Pakistan.columns.str.replace(' ', '_')\ndf_Pakistan=df_Pakistan.rename(columns={'Yearly_%\\nChange':'Yearly_%_Change','Yearly\\nChange':'Yearly_Change',\n                        \"Country's_Share_of\\nWorld_Pop\":\"Country's_Share_of_World_Pop\",\n                        'Urban\\nPop_%':'Urban_Pop_%','\\nGlobal_Rank':'Global_Rank'})\n","407e4d10":"df_China.head()","74ba61e6":"\nframes = [df_China, df_India, df_USA, df_Indonasia, df_Pakistan]\ndf_concat= pd.concat(frames)","b05eb5d1":"df_concat['above1300m'] = ['above1300m'if i >=1300000000 else 'below1300m'for i in df_concat.Population]\n","5a2aa7d9":"arr = df_concat['Median_Age'].unique()\nprint(\"Median of Age: \",np.median(arr))\n\n","f85ab855":"df_concat['Median_of_Age'] = ['higher_24.9'if i >=24.9 else 'below_24.9'for i in df_concat['Median_Age']]","f6ff2323":"arr = df_concat['Urban_Population'].unique()\nprint(\"Median of Urban Population: \",np.median(arr))\n","76e3f4b7":"df_concat['Median_of_Urban_Population'] = ['higher_145948933.5'if i >=145948933.5 else 'below_145948933.5'for i in df_concat['Urban_Population']]","31706556":"df_concat.info()","0a15e899":"df_concat.head()","25f9eea0":"fig = plt.figure()\nspec = gridspec.GridSpec(ncols=2, nrows=3,\n                         width_ratios=[4,4])\n\n\n\nax0 = fig.add_subplot(spec[0])\nax0.set_ylabel('Yearly_change')\nax0.plot('Year','Yearly_Change', data = df_China)\n\nax1 = fig.add_subplot(spec[1])\nax1.plot('Year','Yearly_Change', data = df_India)\n\nax2 = fig.add_subplot(spec[2])\nax2.plot('Year','Yearly_Change', data = df_USA)\n\nax3 = fig.add_subplot(spec[3])\nax3.plot('Year','Yearly_Change', data = df_Indonasia)\n\nax4 = fig.add_subplot(spec[4])\nax4.set_xlabel('Year')\nax4.plot('Year','Yearly_Change', data = df_Pakistan)\n\n\n\n\nplt.show()\n\n","28c011d7":"def drawAnyAmount(a,i):\n    sns.countplot(x=df_concat[a],  palette=\"Set2\",ax=axs[i])\n    axs[i].set_title(a, color='blue', fontsize=15)\n    \n\na=['Median_of_Age','above1300m', 'Median_of_Urban_Population']\niterr= 0\n\nnumToPlot = len(a)\nfig, axs =plt.subplots(ncols=numToPlot)\nplt.subplots_adjust(right=2, wspace = 0.5)\nfor i in a:\n    drawAnyAmount(i,iterr)\n    iterr +=1","e2f8656c":"fig, ax = plt.subplots(figsize=(10,10))\n\nsns.swarmplot(x='above1300m',y='Population',hue='Median_of_Age',data=df_concat, ax=ax)\nplt.show()","11050e49":"fig, ax = plt.subplots(figsize=(10,10))\nsns.swarmplot(x='Median_of_Urban_Population',y='Population',hue='Median_of_Age',data=df_concat, ax=ax)\nplt.show()","0a237ce8":"plt.style.use(\"classic\")\nsns.distplot(df_concat['Fertility_Rate'], color='blue')\nplt.xlabel(\"Fertility_Rate\")\nplt.ylabel(\"Count\")\nplt.show()","ebadcfa8":"df_China[['Population', 'Urban_Population']].plot.box(figsize=(10,10), colormap =  'autumn')","32633106":"df_USA[['Population', 'Urban_Population']].plot.box(figsize=(10,10), colormap =  'RdYlGn')","f47c3566":"df_India[['Population', 'Urban_Population']].plot.box(figsize=(10,10), colormap =  'BrBG')","c66fbaba":"df_Indonasia[['Population', 'Urban_Population']].plot.box(figsize=(10,10), colormap =  'PRGn')","37294c5d":"df_Pakistan[['Population', 'Urban_Population']].plot.box(figsize=(10,10), colormap =  'winter_r')","d2f3a897":"dxp.count('Migrants_(net)',df_USA, split='Fertility_Rate',normalize=True,figsize=(8,6),size=0.9,stacked=True)","30d76984":"dxp.count('Median_Age',df_USA, split='Fertility_Rate',normalize=True,figsize=(8,6),size=0.9,stacked=True)","b0a772ed":"dxp.bar(x='Urban_Population', y='Density_(P\/Km\u00b2)', data=df_USA, figsize=(10,4), aggfunc='median')","e3757f01":"dxp.bar(x='Urban_Population', y='Yearly_Change', data=df_USA, figsize=(10,4),  aggfunc='median')","4422f27a":"dxp.line(x='Fertility_Rate', y='Yearly_Change', data=df_USA, figsize = (10,4), aggfunc='median')","e4c69c7f":"dxp.line(x='Fertility_Rate', y='Density_(P\/Km\u00b2)', data=df_USA, figsize = (10,4), aggfunc='median')","080d36d4":"dxp.line(x='Urban_Population', y='Density_(P\/Km\u00b2)', data=df_USA, figsize=(10,4), aggfunc='median', orientation='h')","546d6a2b":"dxp.box(x='Year', y='Urban_Pop_%', data=df_USA,  figsize=(10,4))","888419e9":"dxp.box(x='Migrants_(net)', y='Year', data=df_USA,orientation='v',figsize = (12,4),\n        split='Global_Rank', split_order='top 2')","96af0c7a":"dxp.kde(x='Year', y='Population', data=df_USA, figsize=(4,4))","e87785bb":"**Lets visualize Medians through seaborn.**","25d798a9":"# **Data Preprocessing**","d581ea11":"**Using Pandas visualization functions, we'll see mean box plots of all 5 countries.**","cee12e59":"# **EDA**","ee945391":"**No nulls found!**","6f89e1d0":"**Using Dexplot, we'll see relationship between a lot of our columns and we are focusing on USA!**","cc6c8a09":"**Finding ,edians and adding into cleaned dataset which will help us in our visualization.**","99055437":"**Lets see the growth of top 5 most populated countries through matplotlib.pyplot.**","f61ba772":"**Concatinating all into one frame.**","9017991e":"**Cleaning Data!**"}}