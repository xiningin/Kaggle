{"cell_type":{"9d7738fa":"code","384e1aba":"code","477d8edc":"code","8bf68bbc":"code","9135dc83":"code","ebf662d6":"code","4a97b970":"code","e4529bd0":"code","9b079eff":"code","4cf130b8":"code","139c3d82":"code","fec4b17c":"code","1f6c154a":"code","0ac374f3":"code","a5c6fd03":"code","3807287e":"code","2be165fa":"code","ac76691f":"code","06d8b2f5":"code","a7674a62":"code","7496fb7f":"code","bef8fe2e":"code","9541e397":"code","21d91202":"code","7d4c12c3":"code","eb5aeefe":"code","1cf86a68":"markdown","cfda1d87":"markdown","1a5ae417":"markdown","b77f3d66":"markdown","1e699971":"markdown","76233769":"markdown","254323fe":"markdown","29e1c857":"markdown","180ef8c2":"markdown","2939b1cc":"markdown","6d31da34":"markdown","7f8001c6":"markdown","2130e633":"markdown","b385bfe9":"markdown","a6a3dbfe":"markdown","2642c590":"markdown","5abc05bf":"markdown","74629de7":"markdown","e6f7a3a9":"markdown"},"source":{"9d7738fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/tareapandas\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","384e1aba":"#Se importa la libreria que se va a emplear en la resolucion del algoritmo\nimport pandas as pd\n#Archivo CSV\n#Estas son las maneras en las que se puede abrir y mostrar los datos del archivo de tipo JSON \n#El archivo se encuentra en la raiz general de Kaggle\/GitHub, es por eso que solo basta poner el nombre \"\"\"\ndf = pd.read_csv('\/kaggle\/input\/archiv\/pokemon.csv')\nprint (df)","477d8edc":"#Se muestran solo algunas columnas del archivo CSV, hay dos maneras\n#Primera forma:\nprint (df.head(3))","8bf68bbc":"#Segunda Forma\nprint (df.tail(3))","9135dc83":"#Nota: Se tuvieron que instalar algunas extensiones para poder abrir y leer los archivos de tipo xlsx (xlrd>=1.0.0 y openpyxl)\n!pip install xlrd>=1.0.0\n!pip install openpyxl","ebf662d6":"#De igual manera se muestran algunas columnas del archivo tipo XLSX\n#Nota: Se tuvieron que instalar algunas extensiones para poder abrir y leer los archivos de tipo xlsx (xlrd>=1.0.0 y openpyxl)\ndf_xlsx = pd.read_excel('\/kaggle\/input\/archiv\/pokemon_data.xlsx')\nprint (df_xlsx.head(3))","4a97b970":"#Se muestra tal como esta en el archivo txt\ndf_t = pd.read_csv('\/kaggle\/input\/tareapandas\/pokemon.txt')\nprint (df_t.head(3))","e4529bd0":"#A diferencia de las lineas anteriores, se muestra de manera ordenada con ayuda de un tabulador\ndf_txt = pd.read_csv('\/kaggle\/input\/tareapandas\/pokemon.txt', delimiter='\\t')\nprint (df_txt.head(3))","9b079eff":"#Se muestran todas las columnas que conforman el archivo\nprint(df.columns)","4cf130b8":"     ## Leer cada columna, para leer cada columna hay distintas maneras\n# Forma 1, muestra todas las filas de la columna seleccionada\nprint(df['Name'])","139c3d82":"# Forma 2, muestra solo un rango de todas las filas a mostrar de la columnda seleccionada\nprint(df['Name'][0:5])","fec4b17c":"# Forma 3, es el mismo resultado la 1, pero la sintaxis es diferente\nprint(df.Name)","1f6c154a":"# Forma 4, se seleccionan las columnas del archivo a mostrar\nprint(df[['Name', 'Type 1', 'HP']])","0ac374f3":"## Leer cada Fila, en un rango determinado\nprint(df.iloc[0:4])","a5c6fd03":"#Se muestra en un ciclo\nfor index, row in df.iterrows():\n     print(index, row['Name'])","3807287e":" ## Leer una ubicacion especifica (Fila,Columna), en este caso se piden los datos a encontrar\nprint(df.loc[df['Type 1'] == 'Fire'])","2be165fa":"## Se selecciona una columna y si sera de forma ascendente o descendente\nprint(df.sort_values('Name', ascending=False))","ac76691f":"##Agregar una nueva columna (En este caso agrega una suma de las diferentes categorias a la nueva columna)\ndf['Total'] = df['HP'] + df['Attack'] + df['Defense'] + df['Sp. Atk'] + df['Sp. Def'] + df['Speed']\nprint(df.head(5))","06d8b2f5":"##Se elimina la columna agregada 'Total'\ndf = df.drop(columns = ['Total'])","a7674a62":"df['Total'] = df.iloc[:, 4:10].sum(axis=1)\nprint(df.head(5))  ","7496fb7f":"cols = list(df.columns)\ndf = df[cols[0:4] + [cols [-1]] + cols[4:12]] \nprint(df.head(5))","bef8fe2e":"df.to_csv('modificado.csv')","9541e397":"#FILTERING DATA\n    \n##Creacion de nuevo dataframe con los pokemon que sean de tipo1 Grass, tipo2 Poison y que tengan HP mayor a 70 \nnew_df = df.loc[(df['Type 1'] == 'Grass') & (df['Type 2'] == 'Poison') & (df['HP'] > 70)]\n\n##Reinicia el numero del index, elimina el anterior y se guarda en el mismo dataframe\nnew_df.reset_index(drop=True, inplace=True)\n\n##imprimir el dataframe con la informacion almacenada\nnew_df\n\n##almacena la informacion en el archivo filtrado.csv\nnew_df.to_csv('filtrado.csv')\n","21d91202":"#CONDITIONAL CHANGES\n\n##Cambia el valor de los campos Genration y Legendary por Test 1 para Generation y Test 2 para Legendary de todos aquellos pokemon que tengan un Total mayor a 500 \ndf.loc[df['Total'] > 500, ['Generation','Legendary']] = ['Test 1', 'Test 2']\n\n##Imprime el dataframe\ndf\n\n##Lee el archivo para recuperar los anteriores valores\ndf = pd.read_csv('\/kaggle\/input\/archiv\/modificado.csv')\n\n##Imprime el dataframe\ndf","7d4c12c3":"#df.groupby(['Type 1']).mean()\n#df.groupby(['Type 1']).mean().sort_values('Defense', ascending = False)\n\n##Sum, count\ndf['count'] = 1\ndf.groupby(['Type 1', 'Type 2']).count()['count']","eb5aeefe":"## Partir el archivo en pedazos\n#for df in pd.read_csv('modificado.csv', chunksize = 5):\n #   print('Chunksize:')\n  #  print(df)\n\nnew_df = pd.DataFrame(columns=df.columns)\n\nfor df in pd.read_csv('\/kaggle\/input\/archiv\/modificado.csv', chunksize=5):\n    results = df.groupby(['Type 1']).count()\n    \n    new_df = pd.concat([new_df, results])\n    print(new_df)","1cf86a68":"# ***LOADING DATA INTO PANDAS***","cfda1d87":"###### ***POR FILA*** ","1a5ae417":"##### ***AGREGAR COLUMNA (OTRA FORMA)***","b77f3d66":"##### ***REALIZAR CAMBIOS EN LOS DATOS**","1e699971":"# ***SORTING\/DESCRIBING DATA***","76233769":"##### **Archivo TXT** ","254323fe":"##### **Archivo CSV** ","29e1c857":"# **Tarea acerca de la introducci\u00f3n de PANDAS en Python** \n###      ***SALA 7, integrantes:***\n* ####                    Huerta Hernandez Yusdivia - 201843995   \n* ####                    Huerta Hernandez Jorge Luis - 201852774  \n* ####                    Juan Carlos Tzompantzi Nahuatlato - 20185450  \n* ####                    Guillermo Ju\u00e1rez Mart\u00ednez - 201873517","180ef8c2":"##### **Leer encabezados**","2939b1cc":"###### ***POR COLUMNA*** ","6d31da34":"##### ***CELDA ESPECIFICA***","7f8001c6":"##### ***ELIMINAR UNA COLUMNA***","2130e633":"##### ***GUARDAR ACTUALIZADO EN .csv***","b385bfe9":"##### **Archivo XLSX** ","a6a3dbfe":"##### ***ORDENAR DE FORMA ALFABETICA***","2642c590":"# ***READING DATA INTO PANDAS***","5abc05bf":"# ***Trabajar Con Grandes Cantidades de Datos***","74629de7":"##### ***ORDENAR COLUMNAS***","e6f7a3a9":"# ***Estad\u00edsticas agregadas (Groupby)***"}}