{"cell_type":{"bce2b0a4":"code","6426b6e2":"code","da81caf9":"code","36684e8a":"code","414c08b8":"code","f3cd4234":"code","b17d2d95":"code","f7f145ed":"code","c6828f91":"code","848510c1":"code","e5f8ceb1":"code","126b6ca0":"code","93d4bf24":"code","f119cb1a":"code","8585fb8f":"code","48b5dff5":"code","6b854d90":"code","527041f8":"code","747549f8":"code","a147dd6b":"code","b6f4b105":"code","664f4c3d":"code","6743dba8":"code","2c8da3fc":"code","bc208ba1":"code","ecd96810":"markdown","3e0dbae6":"markdown","0d5557dc":"markdown","576fd2a7":"markdown","18e6868e":"markdown","0a3eb480":"markdown","d1e00bbe":"markdown","d5a73985":"markdown","aaa9f68d":"markdown","df13a51e":"markdown"},"source":{"bce2b0a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6426b6e2":"df=pd.read_csv('..\/input\/predict-test-scores-of-students\/test_scores.csv')","da81caf9":"df.head()","36684e8a":"df.describe","414c08b8":"df.value_counts()","f3cd4234":"df.dtypes","b17d2d95":"df.isnull().sum()","f7f145ed":"df.columns","c6828f91":"objects=pd.get_dummies(df[['school_setting', 'school_type', 'classroom', 'teaching_method', 'student_id', 'gender', 'lunch']])","848510c1":"objects.head()","e5f8ceb1":"df=pd.concat([df[['n_student','pretest', 'posttest']],objects],axis=1)","126b6ca0":"df.head()","93d4bf24":"df.shape","f119cb1a":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler","8585fb8f":"x=df.drop('posttest',axis=1)\ny=df['posttest']","48b5dff5":"scaler=StandardScaler()\nx=scaler.fit_transform(x)\nxtr,xte,ytr,yte=train_test_split(x,y,random_state=42,test_size=0.3)","6b854d90":"from sklearn.ensemble import RandomForestRegressor\nreg=RandomForestRegressor(n_jobs=-1,verbose=2)","527041f8":"param_grid={'n_estimators':[10,30,60,100,150,170,200],'criterion':['mse','mae'],'max_depth':[1,2,3,4,5,6,7,8],'min_samples_split':[2,3,4],'max_features':['auto','sqrt','log2',2,3,4,5]}","747549f8":"from sklearn.model_selection import GridSearchCV\ngs=GridSearchCV(reg,param_grid=param_grid,cv=3,n_jobs=-1,verbose=1)\ngs.fit(xtr,ytr)","a147dd6b":"gs.best_params_","b6f4b105":"gs.best_score_","664f4c3d":"predicted_y=gs.predict(xte)","6743dba8":"from sklearn.metrics import mean_squared_error,r2_score","2c8da3fc":"mean_squared_error(yte,predicted_y)","bc208ba1":"r2_score(yte,predicted_y)","ecd96810":"# Exploring the dataset","3e0dbae6":"# We have no missing data.\n## Changing the objects to numerical data types","0d5557dc":"95% Accuracy Achieved!","576fd2a7":"<div class='tableauPlaceholder' id='viz1629134224160' style='position: relative'><noscript><a href='#'><img alt='Dashboard 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Sc&#47;Schooltestscores&#47;Dashboard1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Schooltestscores&#47;Dashboard1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Sc&#47;Schooltestscores&#47;Dashboard1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-US' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1629134224160');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='1366px';vizElement.style.height='1051px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1366px';vizElement.style.height='1051px';} else { vizElement.style.width='100%';vizElement.style.height='1927px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","18e6868e":"Testing the accuracy of model","0a3eb480":"# Vertical Bar Chart: No. of students in schools.\n# Horizontal Bar Chart: Marks obtained in PreTest V\/S PostTest on basis of class.\n# Pie Chart: Percentage of PreTest vs PostTest marks obtained on basis of School Type.\n# Packed Bubbles: Percentage of PreTest vs PostTest marks obtained on basis of School Setting.","d1e00bbe":"# HyperTuning parameters","d5a73985":"## Scaling the Dataset","aaa9f68d":"# Building the model","df13a51e":"## R2 score"}}