{"cell_type":{"3093fda3":"code","2cdf0563":"code","40712005":"code","f711bca7":"code","51737ab1":"code","1212e32f":"code","77f3e7b4":"code","e70b8d34":"code","91bc493c":"code","2906b274":"code","7af71d8c":"code","eeaa028f":"markdown"},"source":{"3093fda3":"# - Libraries -\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport re\nimport datetime","2cdf0563":"# - Data -\nurl = '..\/input\/netflix-stock-prices\/netflix-stocks-data.csv'\ndata = pd.read_csv(url, header='infer')","40712005":"# - Shape -\nprint(\"Total Records: \", data.shape[0])","f711bca7":"#Check for missing\/null values\ndata.isna().sum()","51737ab1":"#Rename Close\/Last Column\ndata.rename(columns={' Close\/Last':'Close'}, inplace=True)","1212e32f":"#Stripping Whitespace from the other Column Names\ncols = data.columns\nnew_cols= []\n\n#Strip White Space\nfor i in cols:\n    new_cols.append(i.strip(' '))\n\n#Rename Columns\nfor i, j in zip(cols, new_cols):\n    data.rename(columns={i:j}, inplace=True)","77f3e7b4":"#Remove the $ symbol\ndef extract(x):\n    res = ''.join(re.findall(r\"[0-9.0-9]\",x))\n    return res\n\ncol_flt = ['Close','Open','High', 'Low']  #Columns from which $ has to be removed\n\nfor i in col_flt:\n    data[i] = data[i].apply(lambda x : extract(x))","e70b8d34":"#Inspect\ndata.head()","91bc493c":"#Change Data Type\ndata.Date = data.Date.astype('datetime64[ns]')\ndata.Close = data.Close.astype('float')\ndata.Open = data.Open.astype('float')\ndata.High = data.High.astype('float')\ndata.Low = data.Low.astype('float')\n","2906b274":"# Candle Stick Charting\nfig = go.Figure(data=[go.Candlestick(\n    x=data['Date'],\n    open=data['Open'], high=data['High'],\n    low=data['Low'], close=data['Close'],\n    increasing_line_color= 'cyan', decreasing_line_color= 'magenta'\n)])\n\nfig.update_layout(xaxis_rangeslider_visible=False)\n\nfig.update_layout(\n    title='Netflix Stock Prices (2010-2020)',\n    yaxis_title='Stocks',\n    shapes = [dict(\n        x0='2018-01-21', x1='2018-01-21', y0=0, y1=1, xref='x', yref='paper',\n        line_width=2),\n              dict(\n        x0='2013-01-23', x1='2013-01-21', y0=0, y1=1, xref='x', yref='paper',\n        line_width=2)\n             ],\n    annotations=[dict(\n        x='2018-01-21', y=0.04, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='Drastic'),\n                dict(\n        x='2013-01-23', y=0.15, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='Gradual')\n                \n                ]\n)\n\nfig.show()","7af71d8c":"#Creating a seperate dataframe with specific dates\nmask = (data['Date'] >= '2020-01-01') & (data['Date'] <= '2020-07-17')\ndf = data.loc[mask]\n\nfig = go.Figure(data=[go.Candlestick(\n    x=df['Date'],\n    open=df['Open'], high=df['High'],\n    low=df['Low'], close=df['Close'],\n    increasing_line_color= 'cyan', decreasing_line_color= 'gray'\n)])\n\nfig.update_layout(xaxis_rangeslider_visible=False)\n\nfig.update_layout(\n    title='Netflix Stock Prices (during Covid)',\n    yaxis_title='Stocks',\n    shapes = [dict(\n        x0='2020-03-16', x1='2020-03-19', y0=0, y1=1, xref='x', yref='paper',\n        line_width=2),\n              dict(\n        x0='2020-07-09', x1='2020-07-14', y0=0, y1=1, xref='x', yref='paper',\n        line_width=2)],\n    \n    annotations=[dict(\n        x='2020-03-20', y=0.5, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='Lowest'),\n                dict(\n        x='2020-07-07', y=0.85, xref='x', yref='paper',\n        showarrow=False, xanchor='right', text='Highest')                 \n                \n                ]\n)\n\nfig.show()","eeaa028f":"# Netflix Stock Prices Charting (2010 - 2020)\n\nIn this notebook I shall attempt to chart (candlestick) the stock prices of Netflix from 2010 - 2020. In order to achieve this I will use the Plotly library & use the [Netflix Stock Prices](https:\/\/www.kaggle.com\/prestonfan\/netflix-stock-prices) dataset.\n\nPlease do consider it to UPVOTE if you find it useful.\n"}}