{"cell_type":{"b722f920":"code","0a0bc5fb":"code","15bf5162":"code","d03cc6ab":"code","ad6f5ca2":"code","f95581cc":"code","6bda98b6":"code","4e203010":"code","2d014c36":"code","bfa44f98":"code","239c06da":"code","ca464e86":"code","b8de1c4a":"code","862e9d6c":"code","e98c1b56":"code","b93a6644":"code","0038589b":"code","e161fe94":"markdown","31ceef43":"markdown","25c25444":"markdown","d0ad62f2":"markdown","f8189ef4":"markdown","1d850b89":"markdown","d5cef496":"markdown","f0627fb1":"markdown","c8aeaf21":"markdown","3c9ff3ff":"markdown","95298055":"markdown","3dd13149":"markdown","7aac5a04":"markdown","e758f4c2":"markdown","8bc40e60":"markdown","9e8fbdcb":"markdown","9582af7d":"markdown"},"source":{"b722f920":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\ncolor = sns.color_palette()\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nimport plotly.tools as tls\n\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0a0bc5fb":"df1=pd.read_csv('..\/input\/SurveySchema.csv')\ndf1.head()","15bf5162":"df2=pd.read_csv('..\/input\/multipleChoiceResponses.csv')\ndf2.head()","d03cc6ab":"df3=pd.read_csv('..\/input\/freeFormResponses.csv')\ndf3.head()","ad6f5ca2":"country=df2[1:]['Q3'].value_counts()\ncountry.sort_index(inplace=True)\n\npy.offline.init_notebook_mode(connected=True)\n\ncountry=pd.DataFrame(country)\ncountry['country']=country.index\ncount = [ dict(\n        type = 'choropleth',\n        locations = country['country'],\n        locationmode='country names',\n        z = country['Q3'],\n        text = country['country'],\n        colorscale = 'Viridis',\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick =False,\n            title = 'Number of Respondents(In Thousands)'),\n      ) ]\nlayout = dict(\n    title = 'Number of Respondent from across the Globe',\n    geo = dict(\n        showframe = True,\n        showcoastlines = True,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\nfig = dict( data=count, layout=layout )\npy.offline.iplot( fig, validate=False, filename='d3-world-map' )\n#reference taken from subham lekhwar's kernel","f95581cc":"cnt_srs = df2['Q4'][1:].value_counts()\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Picnic',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Highest Qualification of Data Scientists'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"ds1\")\n","6bda98b6":"print(\"We see that\",round((df2['Q4'].value_counts()[0]\/df2['Q4'][1:].dropna().shape[0])*100,2),\"% Data Scientists have a master's degree,\\\n\",round((df2['Q4'].value_counts()[1]\/df2['Q4'][1:].dropna().shape[0])*100,2),\"% have bachelors degree and\",round((df2['Q4'].value_counts()[2]\/df2['Q4'][1:].dropna().shape[0])*100,2)\\\n    ,\"% having a doctorate degree\" )","4e203010":"cnt_srs = df2['Q2'][1:].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1]\n    ),\n)\n\nlayout = dict(\n    title='Age distribution of Data Scientists',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"ds2\")","2d014c36":"\ntrace2 = go.Bar(\n    x=df2['Q3'][1:],\n    y=df2['Q3'][1:].value_counts(),\n    name='Countries',\n    marker=dict(\n        color='rgb(26, 118, 255)'\n    )\n)\ndata = [trace2]\nlayout = go.Layout(\n    title='Top Countries where Data Science is a trend!',\n    xaxis=dict(\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='No. of people',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='style-bar')","bfa44f98":"ax=pd.DataFrame(df2['Q5'][1:].value_counts()).plot.bar(figsize=(12,8))\nax.set_ylabel('No. of people')\nax.set_title('Undergraduate Courses')\nax.tick_params(axis = 'both', which = 'major', labelsize = 12)\nax.tick_params(axis = 'both', which = 'minor', labelsize = 12)","239c06da":"col1 = 'Q4'   \ncol2 = 'Q3' \ndata = []\nfor i in df2[1:][col1].unique():\n    country = df2.loc[df2[col1] == i, col2].value_counts().sort_index().index\n    valu_country = df2.loc[df2[col1] == i, col2].value_counts().sort_index().values\n    size = []  \n    for j in country :\n        size.append(df2.loc[df2[col2] == j, col1].dropna().size)\n    z = (valu_country\/size)*100\n    trace = go.Bar(\n            x=country,\n            y=z,\n            name=i,            \n            )\n    data.append(trace)\n    layout = go.Layout(width=900, height=600, \n                       barmode='stack',\n                       legend=dict(x=0,y=2))\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","ca464e86":"y = df2['Q6'][1:].value_counts()\nx=y.index\n\ntrace0 = go.Bar(\n    x=x,\n    y=y,\n    text=x,\n    marker=dict(\n        color='rgb(210,118,118)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5,\n        )\n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Current Occupation of Respondants',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='occ')","b8de1c4a":"import re\nfrom matplotlib.ticker import FuncFormatter\n\ndf2=df2[1:]\ndf2 = df2[pd.notnull(df2['Q9'])]\ndf2 = df2[~df2.Q9.isin(['I do not wish to disclose my approximate yearly compensation','500,000+'])]\ndf2 = df2[df2.Q6 != 'Student']\ndf2 = df2[df2.Q7 != 'I am a student']\ndf2['Q3'] = df2['Q3'].str.replace('(\\(|,| or | and | of ).+$','', regex=True)\ndf2['Q4'] = df2['Q4'].str.replace('(\/).+$','', regex=True)\ndf2['Q5'] = df2['Q5'].str.replace('(\\(|,| or | and | of ).+$','', regex=True)\n\ndef extract_avg_pay(compensation):\n    result = re.split('-|,',compensation)\n    return 1000*(int(result[0]) + int(result[1]))\/2\n    \ndf2['pay'] = df2['Q9'].apply(extract_avg_pay)\nmycolor=['#34495e','#9b59b6']\nsns.set()\nsns.color_palette(mycolor)\nsns.set(font_scale=1)\npx = df2[df2.Q1.isin(['Male','Female'])].groupby(['Q4','Q1'])['pay'].mean().unstack().plot(kind=\"bar\", figsize=(16,7))\npx.set(xlabel='Educational Degree', ylabel='Average Annual Income (USD)')\npx.legend().set_title('Gender')\npx.set_xticklabels(px.get_xticklabels(), rotation=30)\ncomma_fmt = FuncFormatter(lambda x, p: format(int(x), ','))\npx.yaxis.set_major_formatter(comma_fmt)\n\n## I have taken reference for this graph from Doha's kernel","862e9d6c":"fig = {\n  \"data\": [\n    {\n      \"values\": df2['Q26'].value_counts(),\n      \"labels\": df2['Q26'].unique(),\n        'marker': {'colors': ['rgb(58, 21, 56)',\n                                  'rgb(33, 180, 150)']},\n      \"name\": \"Confident Data Scientists\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .5,\n      \"type\": \"pie\"\n    }],\n     \"layout\": {\n        \"title\":\"How many respondants consider themseleves as Data Scientists?\"\n     }\n}\npy.iplot(fig, filename='donut')","e98c1b56":"plt.figure(figsize=(10,8))\nax=sns.countplot(df2['Q12_MULTIPLE_CHOICE'].dropna())\nax.set_xticklabels(labels=df2['Q12_MULTIPLE_CHOICE'].dropna().unique(),rotation=90)\nax.set_ylabel(ylabel='No. of Users',fontsize=17)\nax.axes.set_title('Most used primary tool at work',fontsize=17)\nax.tick_params(labelsize=13)","b93a6644":"df2.fillna('',inplace=True)\ndf2['important_roles']=df2['Q11_Part_1']+df2['Q11_Part_2']+df2['Q11_Part_3']+df2['Q11_Part_4']+df2['Q11_Part_5']+df2['Q11_Part_6']+df2['Q11_Part_7']\nfrom wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        max_font_size=40, \n        scale=3,\n        random_state=1 # chosen at random by flipping a coin; it was heads\n).generate(str(data))\n\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()\n\nshow_wordcloud(df2['important_roles'].dropna())","0038589b":"df2=pd.read_csv('..\/input\/multipleChoiceResponses.csv')\ndf2 = df2[1:]\n\ndf2 = df2[~pd.isnull(df2['Q35_Part_1'])]\n\ncount_dict = {\n    'Self-taught & Online Courses' : (df2['Q35_Part_1'].astype(float)>0).sum()+(df2['Q35_Part_2'].astype(float)>0).sum(), #considering online courses as self-taught\n    'Work' : (df2['Q35_Part_3'].astype(float)>0).sum(),\n    'University' : (df2['Q35_Part_4'].astype(float)>0).sum(),\n    'Kaggle competitions' : (df2['Q35_Part_5'].astype(float)>0).sum(),\n    'Other' : (df2['Q35_Part_6'].astype(float)>0).sum()\n}\n\ncnt_srs = pd.Series(count_dict)\n\ntrace = go.Pie(labels=np.array(cnt_srs.index),values=np.array(cnt_srs.values))\n\nlayout = go.Layout(\n    title='How the respondants learnt Data Science?',\n    height=750,\n    width=750\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"learningcategory\")\n\n\ncount_dict = {\n    'Coursera' : (df2['Q36_Part_2'].count()),\n    'Udemy' : (df2['Q36_Part_9'].count()),\n    'DataCamp' : (df2['Q36_Part_4'].count()),\n    'Kaggle Learn' : (df2['Q36_Part_6'].count()),\n    'Udacity' : (df2['Q36_Part_1'].count()),\n    'edX' : (df2['Q36_Part_3'].count()),\n    'Online University Courses' : (df2['Q36_Part_11'].count()),\n    'Fast.AI' : (df2['Q36_Part_7'].count()),\n    'Developers.google.com' : (df2['Q36_Part_8'].count()),\n    'DataQuest' : (df2['Q36_Part_5'].count()),\n    'The School of AI' : (df2['Q36_Part_10'].count())\n}\n\n\ncnt_srs = pd.Series(count_dict)\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color='gray',\n    ),\n)\n\nlayout = go.Layout(\n    title='Online Platforms with max. users'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"platform\")","e161fe94":"## Top countries where Data Science is a trend!","31ceef43":"So we see that 60% of the people who are Data Scientist or aspiring to be have a  Masters or a PhD Degree.","25c25444":"## How has the degree affected Data Scientists' income?","d0ad62f2":"### Lets see what is the majority of the undergraduate courses","f8189ef4":"## But how many of the respondants confidently consider themselves as Data Scientists?","1d850b89":"### How have the respondants learnt Data Science and what are the most used online platforms?","d5cef496":"Hmm, Jupyter Lab clearly dominates as a primary tool.","f0627fb1":"### Let's have a look at the highest qualifications of the Data Scientists.","c8aeaf21":"### I belong to the age group of 18-21 :P","3c9ff3ff":"I was surprised to see Indonesia at the 2nd postion, and is way beyond other countries.","95298055":"This graph just represents the education qualification of the respondents, country-wise. I've plotted this graph taking reference from **Sachin Shelar's** kernel.","3dd13149":"So, is a degree really needed to become a Data Scientist?","7aac5a04":"## What makes up the important part of the role at work for most people?","e758f4c2":"## The most used primary tool at work","8bc40e60":"### Lets have a look at the Age Distribution Graph","9e8fbdcb":"Analyze, understand, influence! Nice.","9582af7d":"## Importing the Files\n\n### 1) SurveySchema.csv\n### 2) multipleChoiceResponses.csv\n### 3) freeFormResponses.csv"}}