{"cell_type":{"26003b56":"code","154b51cc":"code","0f3288af":"code","5979da04":"code","36b62d1c":"code","8a11f84f":"code","96082d0a":"code","cec4894d":"code","5115b406":"code","63e7aa80":"code","20f27488":"code","53fb9fc8":"code","06e1c3e1":"code","da2353e1":"code","2ba26bb3":"code","bb4ccf91":"code","68d4f64b":"code","b75c95d7":"code","b55fb19d":"code","61850629":"code","a5541bdf":"markdown","907803f1":"markdown","6d809358":"markdown","7a81b810":"markdown","0f925f34":"markdown","3526de29":"markdown"},"source":{"26003b56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport nltk\nfrom nltk.corpus import stopwords\nfrom gensim.models import word2vec\nfrom sklearn import preprocessing, decomposition, model_selection, metrics, pipeline\nfrom sklearn.model_selection import train_test_split\nimport string\nfrom sklearn.naive_bayes import MultinomialNB\nimport xgboost as xgb\nfrom sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\nfrom sklearn.decomposition import TruncatedSVD\nfrom sklearn import ensemble, metrics, model_selection, naive_bayes\ncolor = sns.color_palette()\n\n%matplotlib inline\n\neng_stopwords = set(stopwords.words(\"english\"))\npd.options.mode.chained_assignment = None\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","154b51cc":"train_df = pd.read_csv(\"..\/input\/spooky-author-identification\/train.zip\")\ntest_df = pd.read_csv(\"..\/input\/spooky-author-identification\/test.zip\")\nprint(\"Number of rows in train dataset : \",train_df.shape[0])\nprint(\"Number of rows in test dataset : \",test_df.shape[0])","0f3288af":"train_df.head()","5979da04":"train_df.author.value_counts(normalize=True)*100","36b62d1c":"cnt_srs = train_df['author'].value_counts()\n\nplt.figure(figsize=(8,4))\nsns.barplot(cnt_srs.index, cnt_srs.values, alpha=0.8)\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Author Name', fontsize=12)\nplt.show()","8a11f84f":"for i in train_df[train_df['author']=='EAP']['text'][:5].values:\n    print(i)\n    print('****************')","96082d0a":"for i in train_df[train_df['author']=='MWS']['text'][:5].values:\n    print(i)\n    print('****************')","cec4894d":"for i in train_df[train_df['author']=='HPL']['text'][:5].values:\n    print(i)\n    print('****************')","5115b406":"corpus=[]\nfor i in train_df['text'].values:\n    corpus.append(str(i).split(\" \"))\ncorpus[:1]","63e7aa80":"model = word2vec.Word2Vec(corpus, size=100, workers=4)\n","20f27488":"print(model.wv.most_similar('kill'))\n","53fb9fc8":"def multiclass_logloss(actual, predicted, eps=1e-15):\n    \"\"\"Multi class version of Logarithmic Loss metric.\n    :param actual: Array containing the actual target classes\n    :param predicted: Matrix with class predictions, one probability per class\n    \"\"\"\n    # Convert 'actual' to a binary array if it's not already:\n    if len(actual.shape) == 1:\n        actual2 = np.zeros((actual.shape[0], predicted.shape[1]))\n        for i, val in enumerate(actual):\n            actual2[i, val] = 1\n        actual = actual2\n\n    clip = np.clip(predicted, eps, 1 - eps)\n    rows = actual.shape[0]\n    vsota = np.sum(actual * np.log(clip))\n    return -1.0 \/ rows * vsota","06e1c3e1":"train_df.author\n","da2353e1":"lbl_enc = preprocessing.LabelEncoder()\ny = lbl_enc.fit_transform(train_df.author.values)\ny","2ba26bb3":"xtrain, xvalid, ytrain, yvalid = train_test_split(train_df.text.values, y, \n                                                  stratify=y, \n                                                  random_state=42, \n                                                  test_size=0.1, shuffle=True)","bb4ccf91":"print (xtrain.shape)\nprint (xvalid.shape)","68d4f64b":"tfidf_model = TfidfVectorizer(min_df=3,  max_features=None, \n            strip_accents='unicode', analyzer='word',token_pattern=r'\\w{1,}',\n            ngram_range=(1, 3), use_idf=1,smooth_idf=1,sublinear_tf=1,\n            stop_words = 'english')\n\n# Fitting TF-IDF to both training and test sets (semi-supervised learning)\ntfidf_model.fit(list(xtrain) + list(xvalid))\nxtrain_tfidf_model =  tfidf_model.transform(xtrain) \nxvalid_tfidf_model = tfidf_model.transform(xvalid)","b75c95d7":"ct_vec_model = CountVectorizer(analyzer='word',token_pattern=r'\\w{1,}',\n            ngram_range=(1, 3), stop_words = 'english')\n\n# Fitting Count Vectorizer to both training and test sets (semi-supervised learning)\nct_vec_model.fit(list(xtrain) + list(xvalid))\nxtrain_ct_vec_model =  ct_vec_model.transform(xtrain) \nxvalid_ct_vec_model = ct_vec_model.transform(xvalid)","b55fb19d":"# Fitting a simple Naive Bayes on Counts\nclf = MultinomialNB()\nclf.fit(xtrain_ct_vec_model, ytrain)\npredictions = clf.predict_proba(xvalid_ct_vec_model)\n\nprint (\"logloss: %0.3f \" % multiclass_logloss(yvalid, predictions))","61850629":"predictions = clf.predict_proba(ct_vec_model.transform(['As soon as I opened the door , I gasped..',]))\npredictions","a5541bdf":"* looks like this one may be written by HP Lovecraft...","907803f1":"\nMeaning of author short forms :-\nEdgar Allan Poe (EAP)\nHP Lovecraft (HPL)\nMary Wollstonecraft Shelley (MWS)\nThe objective is to accurately identify the author of the sentences in the test set.","6d809358":"references:-\nhttps:\/\/www.kaggle.com\/abhishek\/approaching-almost-any-nlp-problem-on-kaggle\nhttps:\/\/www.kaggle.com\/sudalairajkumar\/simple-feature-engg-notebook-spooky-author","7a81b810":"let's test writing styles of these amazing authors by checking out first 5 of their sentences..","0f925f34":"let's try for some sample spooky sentence..","3526de29":"let's try word2vec for exploration and tfidf for classfier building part.."}}