{"cell_type":{"bf394af5":"code","b349fe3d":"code","9257c494":"code","ec71fea0":"code","83230e04":"code","c7223202":"code","d58005e0":"code","bee8d060":"code","7736c3e7":"code","18d4d1d7":"markdown","eb7efd44":"markdown","a49ae584":"markdown","dc1d3721":"markdown","3a3ec951":"markdown","37a1d5d7":"markdown","88c05189":"markdown","80c54be9":"markdown","40a26d1c":"markdown","fd244cde":"markdown","73cea274":"markdown","10158600":"markdown","347338e7":"markdown","941078d1":"markdown"},"source":{"bf394af5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport plotly.io as pio\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom plotly.validators.scatter.marker import SymbolValidator\n\nimport missingno as msno\n\nimport plotly.offline as pyo\npyo.init_notebook_mode()\n\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\ndf = pd.read_csv(\"..\/input\/telecom-users-dataset\/telecom_users.csv\")\npd.options.display.max_columns = 30\ndf.drop([\"Unnamed: 0\", \"customerID\"],axis=True, inplace=True) # these columns not used to analysis","b349fe3d":"# Visualization object type columns\ndf['Churn'] = df['Churn'].apply(lambda x: 0 if x == 'No' else 1) # if 1 is churn: yes\ndf['SeniorCitizen'] = df['SeniorCitizen'].apply(lambda x: 'No' if x == 0 else 'Yes')\ndf['TotalCharges'] =pd.to_numeric(df['TotalCharges'],errors='coerce')\ndf = df.dropna()\n\nstr_col = []\nfor i in df.columns:\n    if df[i].dtype =='O':\n        str_col.append(i)\nj=0\nk=0\nfig, axes = plt.subplots(4,4, figsize=(20,15))\nfor i in str_col:\n    sns.barplot(ax=axes[j,k], data=df,x=list(df[i].unique()),y=list(df.groupby(i)['Churn'].mean()))\n    axes[j][k].set_title(i)\n    plt.xticks(rotation = 20)\n    k+=1\n    if k==4:\n        k=0\n        j+=1","9257c494":"value = []\nfor i in str_col:\n    value.append(max(df.groupby(i)['Churn'].mean()) - min(df.groupby(i)['Churn'].mean()))\n\nfeatures_value = pd.concat([pd.Series(str_col),pd.Series(value)],axis=1)\n\nfeatures_value.columns = ['feature', 'value']\nfeatures_value['value'] = features_value['value'].apply(lambda x : round(x,2))\nfig = ff.create_table(features_value, height_constant=30)\nfig.add_traces(go.Bar(x=features_value['feature'], y=features_value['value'],\n                    marker=dict(color='#0099ff'),\n                    xaxis='x2', yaxis='y2',text=features_value['value']))\n\nfig['layout']['xaxis2'] = {}\nfig['layout']['yaxis2'] = {}\n# Edit layout for subplots\nfig.layout.xaxis.update({'domain': [0, .35]})\nfig.layout.xaxis2.update({'domain': [0.4, 1.]})\n# The graph's yaxis MUST BE anchored to the graph's xaxis\nfig.layout.yaxis2.update({'anchor': 'x2'})\n\n# Update the margins to add a title and see graph x-labels.\nfig.layout.margin.update({'t':50, 'b':100})\nfig.layout.update({'title': 'Features value : Max - Min difference'})\n\nfig.show()","ec71fea0":"fig = make_subplots(rows=1, cols=3, shared_yaxes=True,subplot_titles=(\"Tenure\", \"MonthlyCharges\",\"TotalCharges\"))\n\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==0]['tenure'], nbinsx=50),1,1)\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==1]['tenure'], nbinsx=50),1,1)\n\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==0]['MonthlyCharges'], nbinsx=50),1,2)\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==1]['MonthlyCharges'], nbinsx=50),1,2)\n\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==0]['TotalCharges'], nbinsx=50),1,3)\nfig.add_trace(go.Histogram(x = df[df['Churn'] ==1]['TotalCharges'], nbinsx=50),1,3)\n\nfig.update_traces(marker_line_color='red')\nfig.update_layout(font_family=\"Rockwell\", showlegend=False)\nfig.update_layout(barmode=\"overlay\")\nfig.update_layout(paper_bgcolor=px.colors.qualitative.Pastel2[2])\nfig.update_layout(paper_bgcolor='white')\nfig.show()","83230e04":"df = pd.get_dummies(df, columns =str_col, drop_first = True) # The object type to unit8 type. \ndf.head()","c7223202":"X = df.drop(\"Churn\",axis=1)\ny = df['Churn']\n\nrob = RobustScaler().fit(X)\nX = pd.DataFrame(rob.transform(X),columns = X.columns)","d58005e0":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=.3, random_state=100) # split the train data and test data\n\naccuracy_list= []\nfor i in range(1,101):\n    knn = KNeighborsClassifier( n_neighbors=i,)\n    knn.fit(X_train, y_train)\n    pred = knn.predict(X_test)\n    accuracy_list.append(accuracy_score(y_test,pred))\n\nfig = px.scatter(x= range(1,101), y=accuracy_list,text=range(0,100))\nfig.update_traces(textposition=\"top center\")\nfig.show()","bee8d060":"knn = KNeighborsClassifier( n_neighbors=accuracy_list.index(max(accuracy_list)))\nknn.fit(X_train, y_train)\npred = knn.predict(X_test)\nprint(\"accuracy_score : \" ,accuracy_score(y_test,pred))","7736c3e7":"confusion_matrix(pred,y_test)","18d4d1d7":"![](https:\/\/www.idp.com\/medias\/Thank-you-01.jpg?context=bWFzdGVyfGltYWdlc3wzMTkzMjZ8aW1hZ2UvanBlZ3xpbWFnZXMvaDNlL2hjNS85OTU1Nzk4MDI0MjIyLmpwZ3w0ZDQ5OTU0MjkyMjdkYTI2YTVkMmY1NmJiMzUyOWE3OTYzYTU0OTExYzM5NWU2MzE5ZWU0ZTc4ZTJkOTQwNTY0)","eb7efd44":"# Visualization","a49ae584":"## Features\n* customerID - customer id\n* gender - client gender (male \/ female)\n* SeniorCitizen - is the client retired (1, 0)\n* Partner - is the client married (Yes, No)\n* tenure - how many months a person has been a client of the company\n* PhoneService - is the telephone service connected (Yes, No)\n* MultipleLines - are multiple phone lines connected (Yes, No, No phone service)\n* InternetService - client's Internet service provider (DSL, Fiber optic, No)\n* OnlineSecurity - is the online security service connected (Yes, No, No internet service)\n* OnlineBackup - is the online backup service activated (Yes, No, No internet service)\n* DeviceProtection - does the client have equipment insurance (Yes, No, No internet service)\n* TechSupport - is the technical support service connected (Yes, No, No internet service)\n* StreamingTV - is the streaming TV service connected (Yes, No, No internet service)\n* StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service)\n* Contract - type of customer contract (Month-to-month, One year, Two year)\n* PaperlessBilling - whether the client uses paperless billing (Yes, No)\n* PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))\n* MonthlyCharges - current monthly payment\n* TotalCharges - the total amount that the client paid for the services for the entire time\n* Churn - whether there was a churn (Yes or No)","dc1d3721":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\n\n\nMake KNN models\n<\/h1>\n<\/div>","3a3ec951":"# Modify the dataset","37a1d5d7":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\n\n\nPredicting Customer Churn! - Telecom users analysis\n<\/h1>\n<\/div>\n\n![](https:\/\/www.einfochips.com\/blog\/wp-content\/uploads\/2019\/04\/top-3-applications-of-artificial-intelligence-and-machine-learning-in-the-telecom-industry-featured-1200x900.jpg)","88c05189":"### Numeric type columns'conclusion\n* Tenure, TotalCharges have some meaningful values","80c54be9":"# Modeling","40a26d1c":"## Description\n\nAny business wants to maximize the number of customers. To achieve this goal, it is important not only to try to attract new ones, but also to retain existing ones. Retaining a client will cost the company less than attracting a new one. In addition, a new client may be weakly interested in business services and it will be difficult to work with him, while old clients already have the necessary data on interaction with the service.\n\nAccordingly, predicting the churn, we can react in time and try to keep the client who wants to leave. Based on the data about the services that the client uses, we can make him a special offer, trying to change his decision to leave the operator. This will make the task of retention easier to implement than the task of attracting new users, about which we do not know anything yet.\n\nYou are provided with a dataset from a telecommunications company. The data contains information about almost six thousand users, their demographic characteristics, the services they use, the duration of using the operator's services, the method of payment, and the amount of payment.\n\nThe task is to analyze the data and predict the churn of users (to identify people who will and will not renew their contract). The work should include the following mandatory items:","fd244cde":"### compare with Max() - Min() value, we can know that Contract have most difference. and others without gender, PhoneService, MultipleLines, they have more than 10percents difference.","73cea274":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\n\n\nModify the dataset to make models\n<\/h1>\n<\/div>\n\n![](http:\/\/www.allaccesstelecom.com\/wp-content\/uploads\/2020\/01\/Telecom-small.jpg)","10158600":"# Import libaries and load dataset","347338e7":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\n\nWhat feature effect to churn?\n<\/h1>\n<\/div>","941078d1":"### Object type columns'conclusion\n* Some features like gender, phone service, multipleline are have only some difference.\n* Other features have difference more than 10percents"}}