{"cell_type":{"7a87fb50":"code","f2f6a003":"code","fe02f576":"code","5bdee2ff":"code","1985c3a8":"code","11f3e342":"code","202abad1":"code","db69ade7":"code","06826fd6":"code","a1965425":"code","d1072905":"code","71ca9423":"code","c2fcb342":"code","4324a820":"markdown","2b7a755c":"markdown","57d026b4":"markdown","983f02b2":"markdown","97f663bb":"markdown","b1b31834":"markdown","33a93e79":"markdown","a9b6b4a0":"markdown","0810a38a":"markdown","e845245f":"markdown"},"source":{"7a87fb50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nprint(\"Setup Complete!\")\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2f6a003":"# Load Students Performance data\nfile_path = \"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\"\nmy_data = pd.read_csv(file_path)","fe02f576":"# Checking first five rows of data\nmy_data.head()","5bdee2ff":"# Number of columns present in data-set\nmy_data.columns","1985c3a8":"# Data types of each column\nmy_data.dtypes","11f3e342":"# checking missing values\n\nfor col in my_data.columns:\n    print(col + \"-> \" + pd.isnull(my_data[col]).sum().astype(str))","202abad1":"categorical_feature_cols = [col for col in my_data.columns if my_data[col].dtype == 'object']\n\nfor col in categorical_feature_cols:\n    print(\"Unique col in \" + col + \":\", end=\" \")\n    print(np.sort(my_data[col].unique()), end=\"\\n\\n\")","db69ade7":"my_data[categorical_feature_cols].describe()","06826fd6":"%matplotlib inline\nfor col in categorical_feature_cols:\n    plt.figure(figsize=(12,6))\n    sns.countplot(x=col, data=my_data)\n    plt.show()","a1965425":"fig = plt.figure(figsize=(12,6))\nsns.displot(my_data['math score'], color='y')\nsns.displot(my_data['reading score'], color='r')\nsns.displot(my_data['writing score'],)\n","d1072905":"plt.figure(figsize=(8,8))\nsns.scatterplot(y=my_data['reading score'], x=my_data['math score'], hue=my_data['gender'])","71ca9423":"plt.figure(figsize=(8,8))\nsns.lmplot(data=my_data, y='reading score', x='math score', hue='gender')","c2fcb342":"sns.distplot(a=my_data['reading score'], kde=True)","4324a820":"There are total 8 columns in the dataset as given by columns name. First five rows of data suggests that there are 5 independent columns ('gender', 'race\/ethnicity', 'parental level of education', 'lunch', 'test preparation course') and 3 dependent columns ('math score', 'reading score', 'writing score'). ","2b7a755c":"All the 5 independent variables are seems like categorical variables and 3 denpendent variables are continuous in nature. Verifying the categorical variables by checking number of unique values and count.","57d026b4":"For categorical feature values we use swarm plots for seeing distribution of occurence b\/w each unique values. ","983f02b2":"Above code snippet displays categorical features summary like how many unique values are there for each column, column value which has occurred for most number of times and their respective count in given dataset.","97f663bb":"**Distribution plot**","b1b31834":"There are no missing values for any column in the given dataset.","33a93e79":"\n\n**Thank You!**\n\n**If you like the above data analysis, please hit a upvote button and shed your support.**","a9b6b4a0":"**Scatter Plot**","0810a38a":"**Distribution of tests scoring**","e845245f":"Above code snippet displays unique values for all the categorical feture columns."}}