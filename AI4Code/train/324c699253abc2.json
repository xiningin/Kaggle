{"cell_type":{"dc80ff29":"code","c195000d":"code","dbdd2e16":"code","7695be85":"code","bed4536b":"code","c63e498e":"code","ea9e60b5":"code","c3b69547":"code","b286edbc":"markdown","4221b460":"markdown","7950f52e":"markdown","d1c17f9d":"markdown","de982bce":"markdown","af97276c":"markdown"},"source":{"dc80ff29":"import numpy as np                # linear algebra\nimport pandas as pd               # data frames\nimport seaborn as sns             # visualizations\nimport matplotlib.pyplot as plt   # visualizations\nfrom sklearn.decomposition import PCA\n\nimport os\nprint(os.listdir(\"..\/input\"))","c195000d":"df = pd.read_csv(\"..\/input\/hfi_cc_2018.csv\")\n\n# Print the head of df\nprint(df.head())\n\n# Print the info of df\nprint(df.info())\n\n# Print the shape of df\nprint(df.shape)\n\nprint(np.min(df.year))","dbdd2e16":"df.head()","7695be85":"countries = df.dropna(axis=1, how='all')\ncountries = countries.fillna(countries.mean())\ncountries.iloc[:,4:110].head()","bed4536b":"# Compute the correlation matrix\ncorr=countries.iloc[:,4:110].corr()\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","c63e498e":"# Create a PCA instance: pca\npca = PCA(n_components=5)\n\n# Fit the pipeline to 'samples'\npca.fit(countries.iloc[:,4:110])\n\npca_features = pca.transform(countries.iloc[:,4:110])\n\n# Plot the explained variances\nfeatures = range(pca.n_components_)\nplt.bar(features, pca.explained_variance_)\nplt.xlabel('PCA feature')\nplt.ylabel('variance')\nplt.xticks(features)\nplt.show()","ea9e60b5":"pd.DataFrame(pca.components_)","c3b69547":"# Assign 0th column of pca_features: xs\nxs = pca_features[:,0]\n\n# Assign 1st column of pca_features: ys\nys = countries['hf_score']\n\n# Scatter plot xs vs ys\nplt.scatter(xs, ys)\nplt.axis('equal')\nplt.show()","b286edbc":"It looks like the first component describe pretty well most of the variables.","4221b460":"Doing PCA we can identify one feature that describe very well all the variables that we have from a country. The Human Freedom Index was reverse engineered with this approach and now we are able to replicate the index with new data.","7950f52e":"Identifying the correlation between those variables","d1c17f9d":"Principal component analysis the goal is to find a lower dimensionality representation of the variables maintaining most of the variance with a linear combination of them to create principal components which are not correlated.","de982bce":"## Objective:\n\nThe Human Freedom Index is a measure of how good a country is ranked amongst others countries in terms of freedom across government, society and economics variables. The idea is to implement principal component analysis in order to understand if a single indicator describe all these variables.\n","af97276c":"Preprocessing the database in order to fill the missing values."}}