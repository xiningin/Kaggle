{"cell_type":{"ffbc81b5":"code","05de7989":"code","15786243":"code","59f2dd41":"code","af50cd09":"code","5051a167":"code","a531729c":"code","d3b3d8ca":"code","9c27bf58":"code","7a7467a3":"markdown","5be7e919":"markdown","6239c988":"markdown","1af92fae":"markdown","90cf5838":"markdown","a26bcc24":"markdown","17e0826a":"markdown","435bf0fd":"markdown","03e1f091":"markdown"},"source":{"ffbc81b5":"import pandas as pd\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn","05de7989":"# Preparatory part of the code\ntest = pd.read_csv('..\/input\/titanic\/test.csv') # load test dataset\ntest['Boy'] = (test.Name.str.split().str[1] == 'Master.').astype('int')\ntest['Family'] = test['SibSp'] + test['Parch']\nsubmission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': pd.Series(dtype='int32')})\n\n# Three lines of code for LB = 0.79425 (not less 85% teams - Titanic Top 15%) \n# Reasoning the statements see below (EDA)\n# Statement 1\ntest['Survived'] = [1 if (x == 'female') else 0 for x in test['Sex']]\n# Statement 2\ntest.loc[(test.Boy == 1), 'Survived'] = 1\n# Statements 3,4\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S') & ~((test.Boy == 1) & (test.Family > 0) & (test.Family < 4))), 'Survived'] = 0\n\n# Saving the result\nsubmission.Survived = test.Survived\nsubmission.to_csv('submission_S_Boy_Sex_Family.csv', index=False)","15786243":"# Reasoning for Statement 1 \n# Thanks for the idea to: https:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555 \n# Thanks for the idea of plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\nimport matplotlib.pyplot as plt\n\ndef highlight(value):\n    if value >= 0.5:\n        style = 'background-color: palegreen'\n    else:\n        style = 'background-color: pink'\n    return style\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv') # load train dataset\npd.pivot_table(train, values='Survived', index=['Sex']).style.applymap(highlight)","59f2dd41":"# Reasoning for Statement 2\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\ntrain['Boy'] = (train.Name.str.split().str[1] == 'Master.').astype('int')\npd.pivot_table(train, values='Survived', index='Pclass', columns='Boy').style.applymap(highlight)","af50cd09":"# Reasoning for Statement 3\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\npd.pivot_table(train, values='Survived', index=['Cabin', 'Embarked'], columns='Sex').style.applymap(highlight)","5051a167":"# Reasoning for Statement 4\ntrain['Family'] = train['SibSp'] + train['Parch']\npd.pivot_table(train, values='Survived', index=['Pclass','Embarked','Boy','Family']).style.applymap(highlight)","a531729c":"# Statements 1,2,3,4 in 4 lines of code:\ntest['Survived'] = [1 if (x == 'female') else 0 for x in test['Sex']]\ntest.loc[(test.Boy == 1), 'Survived'] = 1\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S')), 'Survived'] = 0\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S') & (test.Boy == 1) & (test.Family > 0) & (test.Family < 4)), 'Survived'] = 1","d3b3d8ca":"# Statements 1,2,3,4 in 3 lines of code (see above):\ntest['Survived'] = [1 if (x == 'female') else 0 for x in test['Sex']]\ntest.loc[(test.Boy == 1), 'Survived'] = 1\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S') & ~((test.Boy == 1) & (test.Family > 0) & (test.Family < 8))), 'Survived'] = 0","9c27bf58":"train ","7a7467a3":"# Titanic : three lines of code for LB = 0.79425","5be7e919":"Before making predictions with complex algorithms, I tried to make it simple. Early I developed a kernel (https:\/\/www.kaggle.com\/vbmokin\/three-lines-of-code-for-titanic-top-20) that had three lines of code based on three statements and provides a LB of at least 80% of teams - Titanic Top 20%. Now I have figured out how to improve it. I added fourth statement and created 4 lines of code and then optimized this kernel again to 3 lines of main code.This provides a LB of at least 86% of teams - Titanic Top 14%, but the leaderboard is constantly changing - Titanic Top 15% will be more reliable. After the code I have justified in the form of graphs (EDA), from which the statements are obvious.","6239c988":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/6e\/St%C3%B6wer_Titanic.jpg)","1af92fae":"### Statement 1. Women all survived and men all died","90cf5838":"Thanks to:\n\n* [Three lines of code for Titanic Top 20%](https:\/\/www.kaggle.com\/vbmokin\/three-lines-of-code-for-titanic-top-20)\n* [Titanic (0.83253) - Comparison 20 popular models](https:\/\/www.kaggle.com\/vbmokin\/titanic-0-83253-comparison-20-popular-models)\n* [Titanic Top 3% : cluster analysis](https:\/\/www.kaggle.com\/vbmokin\/titanic-top-3-cluster-analysis)\n* [Feature importance - xgb, lgbm, logreg, linreg](https:\/\/www.kaggle.com\/vbmokin\/feature-importance-xgb-lgbm-logreg-linreg)\n* [Tutorial 1: Gender Based Model (0.76555)](https:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555)\n* [Simplest Top 10% Titanic [0.80861]](https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861)\n* https:\/\/nbviewer.jupyter.org\/github\/agconti\/kaggle-titanic\/blob\/master\/Titanic.ipynb","a26bcc24":"### Statement 2. All boys ('Master') from the 1-2 classes survived","17e0826a":"# Reasoning (EDA)","435bf0fd":"### Statement 3. Everybody from the class 3 cabins that were sat in Southampton ('S') were died","03e1f091":"### Statement 4. The boys from the small families ('Family' = 1,2,3) of the third class cabins who were sitting in Southampton all survived"}}