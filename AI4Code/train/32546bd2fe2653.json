{"cell_type":{"e7e46493":"code","479aff2e":"code","0e7aeca9":"code","499c6981":"code","5d8f278e":"code","21b206ea":"code","31e3f366":"code","da80cce9":"code","c57586dd":"code","1ad9982d":"code","8eb0cb2e":"code","d5c62789":"code","ae87edfc":"code","9c1ab33e":"code","1a9d995e":"code","adf355f6":"code","111ecb9d":"code","dd3daa3f":"code","67b7e13c":"code","2a7ca2cb":"code","676ee617":"code","118aa7be":"code","3b029e78":"code","c991dbaa":"code","ae64fb38":"markdown","b2a8a588":"markdown","3129dd02":"markdown","fc43eb9e":"markdown","29383735":"markdown","644b95e7":"markdown","616ee64f":"markdown","6b75635b":"markdown","4babc9fb":"markdown","982cab58":"markdown","223a9635":"markdown","c7d94578":"markdown","c5de5707":"markdown","4aa4e947":"markdown","ba3573f4":"markdown","8c8c8dd5":"markdown"},"source":{"e7e46493":"#import files\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","479aff2e":"#import libraries\nfrom sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nimport lightgbm as lgb\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import r2_score\nimport warnings\nwarnings.simplefilter('ignore')","0e7aeca9":"#read two CSV files\ndf=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_data=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","499c6981":"df","5d8f278e":"#Lebel Encoding\nle=LabelEncoder()\ndf[\"MSZoning\"]=le.fit_transform(df[\"MSZoning\"])\ndf[\"Street\"]=le.fit_transform(df[\"Street\"])\ndf[\"LotShape\"]=le.fit_transform(df[\"LotShape\"])\ndf[\"LandContour\"]=le.fit_transform(df[\"LandContour\"])\ndf[\"Utilities\"]=le.fit_transform(df[\"Utilities\"])\ndf[\"PoolQC\"]=le.fit_transform(df[\"PoolQC\"])\ndf[\"Fence\"]=le.fit_transform(df[\"Fence\"])\ndf[\"MiscFeature\"]=le.fit_transform(df[\"MiscFeature\"])\ndf[\"SaleType\"]=le.fit_transform(df[\"SaleType\"])\ndf[\"SaleCondition\"]=le.fit_transform(df[\"SaleCondition\"])\ndf[\"MSZoning\"]=le.fit_transform(df[\"MSZoning\"])\ndf[\"Street\"]=le.fit_transform(df[\"Street\"])\ndf[\"Alley\"]=le.fit_transform(df[\"Alley\"])\ndf[\"LotShape\"]=le.fit_transform(df[\"LotShape\"])\ndf[\"LotConfig\"]=le.fit_transform(df[\"LotConfig\"])\ndf[\"LandSlope\"]=le.fit_transform(df[\"LandSlope\"])\ndf[\"Neighborhood\"]=le.fit_transform(df[\"Neighborhood\"])\ndf[\"Condition1\"]=le.fit_transform(df[\"Condition1\"])\ndf[\"Condition2\"]=le.fit_transform(df[\"Condition2\"])\ndf[\"BldgType\"]=le.fit_transform(df[\"BldgType\"])\ndf[\"HouseStyle\"]=le.fit_transform(df[\"HouseStyle\"])\ndf[\"OverallQual\"]=le.fit_transform(df[\"OverallQual\"])\ndf[\"RoofStyle\"]=le.fit_transform(df[\"RoofStyle\"])\ndf[\"RoofMatl\"]=le.fit_transform(df[\"RoofMatl\"])\ndf[\"Exterior1st\"]=le.fit_transform(df[\"Exterior1st\"])\ndf[\"Exterior2nd\"]=le.fit_transform(df[\"Exterior2nd\"])\ndf[[\"MasVnrType\"]].astype(str)\ndf[\"MasVnrType\"]=le.fit_transform(df[\"MasVnrType\"])\ndf[\"ExterQual\"]=le.fit_transform(df[\"ExterQual\"])\ndf[\"ExterCond\"]=le.fit_transform(df[\"ExterCond\"])\ndf[\"Foundation\"]=le.fit_transform(df[\"Foundation\"])\ndf[\"BsmtQual\"]=le.fit_transform(df[\"BsmtQual\"])\ndf[\"BsmtCond\"]=le.fit_transform(df[\"BsmtCond\"])\ndf[\"BsmtExposure\"]=le.fit_transform(df[\"BsmtExposure\"])\ndf[\"PavedDrive\"]=le.fit_transform(df[\"PavedDrive\"])\ndf[\"BsmtFinType1\"]=le.fit_transform(df[\"BsmtFinType1\"])\ndf[\"GarageFinish\"]=le.fit_transform(df[\"GarageFinish\"])\ndf[\"Functional\"]=le.fit_transform(df[\"Functional\"])\ndf[\"KitchenQual\"]=le.fit_transform(df[\"KitchenQual\"])\ndf[\"GarageQual\"]=le.fit_transform(df[\"GarageQual\"])\ndf[\"GarageCond\"]=le.fit_transform(df[\"GarageCond\"])\ndf[\"BsmtCond\"]=le.fit_transform(df[\"BsmtCond\"])\ndf[\"BsmtFinType1\"]=le.fit_transform(df[\"BsmtFinType1\"])\ndf[\"BsmtFinType2\"]=le.fit_transform(df[\"BsmtFinType2\"])\ndf[\"Heating\"]=le.fit_transform(df[\"Heating\"])\ndf[\"BsmtQual\"]=le.fit_transform(df[\"BsmtQual\"])\ndf[\"Electrical\"]=le.fit_transform(df[\"Electrical\"])\ndf[\"HeatingQC\"]=le.fit_transform(df[\"HeatingQC\"])\ndf[\"GarageFinish\"]=le.fit_transform(df[\"GarageFinish\"])\ndf[\"GarageType\"]=le.fit_transform(df[\"GarageType\"])\ndf[\"CentralAir\"]=le.fit_transform(df[\"CentralAir\"])\ndf[\"FireplaceQu\"]=le.fit_transform(df[\"FireplaceQu\"])\n#Lebel Encoding for test data\ntest_data[\"MSZoning\"]=le.fit_transform(test_data[\"MSZoning\"])\ntest_data[\"Street\"]=le.fit_transform(test_data[\"Street\"])\ntest_data[\"LotShape\"]=le.fit_transform(test_data[\"LotShape\"])\ntest_data[\"LandContour\"]=le.fit_transform(test_data[\"LandContour\"])\ntest_data[\"Utilities\"]=le.fit_transform(test_data[\"Utilities\"])\ntest_data[\"PoolQC\"]=le.fit_transform(test_data[\"PoolQC\"])\ntest_data[\"Fence\"]=le.fit_transform(test_data[\"Fence\"])\ntest_data[\"MiscFeature\"]=le.fit_transform(test_data[\"MiscFeature\"])\ntest_data[\"SaleType\"]=le.fit_transform(test_data[\"SaleType\"])\ntest_data[\"SaleCondition\"]=le.fit_transform(test_data[\"SaleCondition\"])\ntest_data[\"MSZoning\"]=le.fit_transform(test_data[\"MSZoning\"])\ntest_data[\"Street\"]=le.fit_transform(test_data[\"Street\"])\ntest_data[\"Alley\"]=le.fit_transform(test_data[\"Alley\"])\ntest_data[\"LotShape\"]=le.fit_transform(test_data[\"LotShape\"])\ntest_data[\"LotConfig\"]=le.fit_transform(test_data[\"LotConfig\"])\ntest_data[\"LandSlope\"]=le.fit_transform(test_data[\"LandSlope\"])\ntest_data[\"Neighborhood\"]=le.fit_transform(test_data[\"Neighborhood\"])\ntest_data[\"Condition1\"]=le.fit_transform(test_data[\"Condition1\"])\ntest_data[\"Condition2\"]=le.fit_transform(test_data[\"Condition2\"])\ntest_data[\"BldgType\"]=le.fit_transform(test_data[\"BldgType\"])\ntest_data[\"HouseStyle\"]=le.fit_transform(test_data[\"HouseStyle\"])\ntest_data[\"OverallQual\"]=le.fit_transform(test_data[\"OverallQual\"])\ntest_data[\"RoofStyle\"]=le.fit_transform(test_data[\"RoofStyle\"])\ntest_data[\"RoofMatl\"]=le.fit_transform(test_data[\"RoofMatl\"])\ntest_data[\"Exterior1st\"]=le.fit_transform(test_data[\"Exterior1st\"])\ntest_data[\"Exterior2nd\"]=le.fit_transform(test_data[\"Exterior2nd\"])\ntest_data[[\"MasVnrType\"]].astype(str)\ntest_data[\"MasVnrType\"]=le.fit_transform(test_data[\"MasVnrType\"])\ntest_data[\"ExterQual\"]=le.fit_transform(test_data[\"ExterQual\"])\ntest_data[\"ExterCond\"]=le.fit_transform(test_data[\"ExterCond\"])\ntest_data[\"Foundation\"]=le.fit_transform(test_data[\"Foundation\"])\ntest_data[\"BsmtQual\"]=le.fit_transform(test_data[\"BsmtQual\"])\ntest_data[\"BsmtCond\"]=le.fit_transform(test_data[\"BsmtCond\"])\ntest_data[\"BsmtExposure\"]=le.fit_transform(test_data[\"BsmtExposure\"])\ntest_data[\"PavedDrive\"]=le.fit_transform(test_data[\"PavedDrive\"])\ntest_data[\"BsmtFinType1\"]=le.fit_transform(test_data[\"BsmtFinType1\"])\ntest_data[\"GarageFinish\"]=le.fit_transform(test_data[\"GarageFinish\"])\ntest_data[\"Functional\"]=le.fit_transform(test_data[\"Functional\"])\ntest_data[\"KitchenQual\"]=le.fit_transform(test_data[\"KitchenQual\"])\ntest_data[\"GarageQual\"]=le.fit_transform(test_data[\"GarageQual\"])\ntest_data[\"GarageCond\"]=le.fit_transform(test_data[\"GarageCond\"])\ntest_data[\"BsmtCond\"]=le.fit_transform(test_data[\"BsmtCond\"])\ntest_data[\"BsmtFinType1\"]=le.fit_transform(test_data[\"BsmtFinType1\"])\ntest_data[\"BsmtFinType2\"]=le.fit_transform(test_data[\"BsmtFinType2\"])\ntest_data[\"Heating\"]=le.fit_transform(test_data[\"Heating\"])\ntest_data[\"BsmtQual\"]=le.fit_transform(test_data[\"BsmtQual\"])\ntest_data[\"Electrical\"]=le.fit_transform(test_data[\"Electrical\"])\ntest_data[\"HeatingQC\"]=le.fit_transform(test_data[\"HeatingQC\"])\ntest_data[\"GarageFinish\"]=le.fit_transform(test_data[\"GarageFinish\"])\ntest_data[\"GarageType\"]=le.fit_transform(test_data[\"GarageType\"])\ntest_data[\"CentralAir\"]=le.fit_transform(test_data[\"CentralAir\"])\ntest_data[\"FireplaceQu\"]=le.fit_transform(test_data[\"FireplaceQu\"])","21b206ea":"#fill NaN data with mean\ndf=df.fillna(df.mean()) ","31e3f366":"df","da80cce9":"df.corr()","c57586dd":"#make train data\nx_train_p=df.iloc[0:,1:80]\ny_train_p=df.iloc[0:,-1]\nx_train=x_train_p.to_numpy()\ny_train=y_train_p.to_numpy()\n#make test data\nx_test_p=test_data.iloc[0:,1:]\nx_test=x_test_p.to_numpy()","1ad9982d":"x_train_p","8eb0cb2e":"#Model1 XGBoost Regressor\nxgbm = xgb.XGBRegressor(max_depth=10)\nxgbm.fit(x_train, y_train)\ny_test=xgbm.predict(x_train)","d5c62789":"model_score1=xgbm.score(x_train, y_train)\nprint(\"The score on traing data of this machine learning model1 is \",model_score1,\"!\")","ae87edfc":"#Model2 RandomForestRegressor\nforest= RandomForestRegressor(n_estimators=10, random_state=2, max_depth=500)\nforest.fit(x_train, y_train)\nmodel_score=forest.score(x_train, y_train)","9c1ab33e":"model_score2=forest.score(x_train, y_train)\nprint(\"The score on traing data of this machine learning model2 is \",model_score2,\"!\")","1a9d995e":"#make train data\nx_train_p=df.iloc[0:1160,1:80]\ny_train_p=df.iloc[0:1160,-1]\nx_train=x_train_p.to_numpy()\ny_train=y_train_p.to_numpy()\n#make train evaluation data\nx_train_eval_p=df.iloc[1160:,1:80]\ny_train_eval_p=df.iloc[1160:,-1]\nx_train_eval=x_train_p.to_numpy()\ny_train_eval=y_train_p.to_numpy()\n#make test data\nx_test_p=test_data.iloc[0:,1:]\nx_test=x_test_p.to_numpy()","adf355f6":"#Model3 lightgbm\nlgb_train = lgb.Dataset(x_train, y_train)\nlgb_eval = lgb.Dataset(x_train_eval, y_train_eval, reference=lgb_train) \n#parameters\nparams = {'task': 'train','boosting_type': 'gbdt','objective': 'regression','metric': {'rmse'}}\n#Start training\nmodel3 = lgb.train(params,train_set=lgb_train,valid_sets=lgb_eval)\n#Check the model performance\ny_pred=model3.predict(x_train_eval)\nr2 = r2_score(y_train_eval,y_pred)\nprint(\"The score on traing data of this machine learning model3 is \",r2,\"!\")","111ecb9d":"#test_predction\ny_pred=model3.predict(x_test)","dd3daa3f":"#check predict data and make the data into Pandas DataFrame\ny_pred2= pd.DataFrame(y_pred)\ny_pred2[\"SalePrice\"]= y_pred2[0]\ny_pred2=y_pred2.iloc[:,[1]]\ny_pred2","67b7e13c":"ID=test_data.iloc[:,[0]]\nID=ID.astype(\"int32\")\nSalePrice=y_pred2.iloc[:,:]\nSalePrice=SalePrice.astype(\"int32\")","2a7ca2cb":"ID","676ee617":"SalePrice","118aa7be":"result=pd.concat([ID, SalePrice],axis=1)","3b029e78":"result.tail()","c991dbaa":"#make an output csv file as submission.csv\noutput = result\noutput.to_csv('submission_xgbm_final5.csv', index=False)\nprint('csv was saved!')","ae64fb38":"## 7.Make train data and test data.","b2a8a588":"### <i>Which is better XGB boost or LightGBM? LightGBM?!<\/i>","3129dd02":"#### 1)Preparation for LightGBM","fc43eb9e":"###  <i>Ummmm. Anyway read whole columns<\/i>","29383735":"## 11. Let's make submission data!","644b95e7":"## 6.Check the dataset by using Panda's \"Corr\"","616ee64f":"## 8. XGBOOST MODEL","6b75635b":"## 2.Import libraries","4babc9fb":"## 5. fill missing values","982cab58":"## 9. RandomForestRegressor model","223a9635":"## 1. Import Files","c7d94578":"### 2)Let's do it. ","c5de5707":"## Let's get started with House Prices Competition by using <font color=\"Green\">XGBoost<\/font>,<font color=\"Gold\">Random Forest Classifier<\/font>,<font color=\"Blue\">LightGBM<\/font>","4aa4e947":"## 4. Label Encoding","ba3573f4":"## 3.Read two CSV files by using pd.read_csv function","8c8c8dd5":"## 10. LightGBM Model"}}