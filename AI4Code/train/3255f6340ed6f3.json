{"cell_type":{"1d31c8b2":"code","f996c59c":"code","411ba519":"code","8a1157f0":"code","13da8684":"code","d0619e76":"code","c85b79a1":"code","45c1ab90":"code","7aa96a3b":"code","adc3196d":"code","15860b83":"code","2879c1d9":"code","7ae9d28e":"code","eb9a55fd":"code","8766adf3":"code","c18a0f6d":"code","740d17c9":"code","c98ea38e":"code","a58332e6":"markdown","ab117f15":"markdown","c4de068a":"markdown","63ec398a":"markdown","6ab4f2a5":"markdown"},"source":{"1d31c8b2":"# Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib\nimport seaborn as sns\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","f996c59c":"df = pd.read_csv('..\/input\/autompg-dataset\/auto-mpg.csv')\ndf.head()","411ba519":"df.dtypes","8a1157f0":"df.isnull().sum()","13da8684":"df[df['horsepower']=='?']","d0619e76":"df['horsepower'] = df[\"horsepower\"].replace('?', 0)\ndf['horsepower'] = df[\"horsepower\"].astype(int)\ndf['horsepower'] = df[\"horsepower\"].replace(0, df[\"horsepower\"].mean())","c85b79a1":"df.drop([\"car name\"], axis = 1, inplace =True)","45c1ab90":"# heatmap\nplt.figure(figsize=(12,10))\ncor = df.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show()","7aa96a3b":"cor","adc3196d":"cor_target = abs(cor['mpg'])\ncor_target[cor_target > 0.5]","15860b83":"df.shape","2879c1d9":"def create_result(model_name, normalization, train_test_split_size, accuracy, MSE, RMSE, MAE):\n  return {'Model_Name': model_name, 'StandardScaler':normalization, 'Train_test_split_size': train_test_split_size, 'Accuracy': accuracy, 'MSE': MSE, 'RMSE': RMSE, 'MAE': MAE}","7ae9d28e":"results = pd.DataFrame({'Model_Name': [], 'StandardScaler':[],'Train_test_split_size':[], 'Accuracy':[],'MSE':[],'RMSE':[],'MAE':[]})","eb9a55fd":"col = df.columns\nfrom sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nsc_X = sc_X.fit_transform(df)\ns_df = pd.DataFrame(sc_X, columns = col)","8766adf3":"X = s_df[['cylinders', 'displacement','horsepower','weight', 'model year', 'origin']]\ny = s_df['mpg']","c18a0f6d":"norm = 'Yes'\n\nfor test_split in [0.2, 0.3]:\n  X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_split, random_state=42)\n  model = LinearRegression()\n  model.fit(X_train, y_train)\n  MSE = mean_squared_error(y_test, model.predict(X_test))\n  results = results.append(create_result('Linear Regression', norm, test_split, model.score(X_test, y_test), MSE, None, None), ignore_index=True)\n  # polynomial Model\n  for x in range(2, 5):\n    poly = PolynomialFeatures(degree = x)\n    X_poly = poly.fit_transform(X_train)\n    model = LinearRegression()\n    model.fit(X_poly, y_train)\n    MSE = mean_squared_error(y_test, model.predict(poly.fit_transform(X_test)))\n    results = results.append(create_result(f'Poly{x}d', norm, test_split, model.score(poly.fit_transform(X_test), y_test), MSE, None, None), ignore_index=True)\n","740d17c9":"results","c98ea38e":"results[(results['MSE']<1)]","a58332e6":"# **Preprocessing**","ab117f15":"> Some column is object dtype, we should have to change with corresponding inside entries dtypes or either have to drop it","c4de068a":"# **Features Selection**","63ec398a":"> I found there is something ambiguous entries that stoping us from convert to another dtype","6ab4f2a5":"# **Models**"}}