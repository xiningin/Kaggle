{"cell_type":{"3ae52ad0":"code","a977c14c":"code","c591d2a4":"code","315e48d2":"code","550ce68b":"code","e5dab1af":"code","204b8eae":"code","8a6ebe3d":"code","f4acdf19":"code","fa0f2388":"code","984d62bc":"code","32bcaa70":"code","3b414977":"code","27e20964":"code","0a68cf1b":"code","fa71a0f5":"code","917b0284":"code","8665ab63":"code","9eb7d82d":"markdown","7061c8b2":"markdown","0ee20ebb":"markdown","fad41c13":"markdown","1a2d5c6a":"markdown","0e83fd95":"markdown","2db24827":"markdown","0d3afaf4":"markdown","4770bf38":"markdown"},"source":{"3ae52ad0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a977c14c":"calls_for_service = pd.read_csv('..\/input\/police-department-calls-for-service.csv')\nincidents = pd.read_csv('..\/input\/police-department-incidents.csv')","c591d2a4":"print(f'The Calls For Service dataset contains {len(calls_for_service):,} rows.')\nprint(f'The Police Incidents dataset contains {len(incidents):,} rows.')","315e48d2":"print(f'Calls for Service: {list(calls_for_service.columns)}\\n')\nprint(f'Police Incidents: {list(incidents.columns)}')","550ce68b":"# What are the data types of the columns?\ncalls_for_service.info()","e5dab1af":"incidents.info()","204b8eae":"calls_for_service.isnull().sum().sort_values(ascending=False)","8a6ebe3d":"incidents.isnull().sum().sort_values(ascending=False)","f4acdf19":"print(\nf\"\"\"Calls for Service:\nMin Report Date: {pd.to_datetime(calls_for_service['Report Date']).min().strftime('%Y-%m-%d')}\nMax Report Date: {pd.to_datetime(calls_for_service['Report Date']).max().strftime('%Y-%m-%d')}\nMin Call Date: {pd.to_datetime(calls_for_service['Call Date']).min().strftime('%Y-%m-%d')}\nMax Call Date: {pd.to_datetime(calls_for_service['Call Date']).max().strftime('%Y-%m-%d')}\n\"\"\"\n)","fa0f2388":"print(\nf\"\"\"Incidents:\nMin Date: {pd.to_datetime(incidents['Date']).min().strftime('%Y-%m-%d')}\nMax Date: {pd.to_datetime(incidents['Date']).max().strftime('%Y-%m-%d')}\n\"\"\"\n)","984d62bc":"calls_for_service.groupby(['Original Crime Type Name']).count().loc[:, 'Crime Id'].sort_values(ascending=False).head(10)","32bcaa70":"incidents.groupby(['Category']).count().loc[:, 'IncidntNum'].sort_values(ascending=False).head(10)","3b414977":"# Convert Call Date Time column to Datetime object\ncalls_for_service['Call Date Time'] = pd.to_datetime(calls_for_service['Call Date Time'])","27e20964":"# Derive Call Date and Day of Week Columns\ncalls_for_service.loc[:, 'Call Date'] = calls_for_service['Call Date Time'].apply(lambda x: x.strftime('%Y-%m-%d'))\ncalls_for_service.loc[:, 'Day of Week'] = calls_for_service['Call Date Time'].apply(lambda x: x.strftime('%A'))\n\n# Isolate July data\ncfs_jul18 = calls_for_service[(calls_for_service['Call Date'] >= '2018-07-01') &\n                              (calls_for_service['Call Date'] <= '2018-07-31')]","0a68cf1b":"crimes_by_day_of_week = pd.DataFrame(cfs_jul18.groupby('Day of Week').nunique().loc[:, ['Crime Id', 'Call Date']])\ncrimes_by_day_of_week.loc[:, 'AVG Crimes'] = crimes_by_day_of_week['Crime Id'] \/ crimes_by_day_of_week['Call Date']\ncrimes_by_day_of_week.sort_values('AVG Crimes', ascending=False)","fa71a0f5":"incidents['Date'] = pd.to_datetime(incidents.Date)\n\n# Isolate 2016, 2017\nincidents_1617 = incidents[(incidents['Date'] >= '2016-01-01') &\n                           (incidents['Date'] <= '2017-12-31')]\n\n# Isolate DRUG\/NARCOTIC incidents\nincidents_1617 = incidents_1617[incidents_1617['Category'] == 'DRUG\/NARCOTIC']","917b0284":"from datetime import datetime\nincident_time = incidents_1617.set_index('Date').loc[:, ['IncidntNum', 'Time']]\nincident_time['Hour'] = incident_time.Time.apply(lambda x: datetime.strptime(x, '%H:%M').strftime('%H'))\n#incident_time.groupby(['Hour']).nunique().loc[:, 'IncidntNum'].sort_values(ascending=False)","8665ab63":"# Not finished ... ","9eb7d82d":"### What day of week had the most average daily calls in July 2018 (Calls for Service dataset)? ","7061c8b2":"### What was the most common time of day for a DRUG\/NARCOTIC incident to occur in 2016? 2017?","0ee20ebb":"### How many missing values are in each column? Which columns have the most missing values? ","fad41c13":"### What are the columns in each dataset? How many are numerical? ","1a2d5c6a":"## Data Import","0e83fd95":"## Data Analysis\n\n### How many rows does each dataset contain? ","2db24827":"### What is the min\/max dates available in each dataset?","0d3afaf4":"### What are the top 10 most common crimes in the Calls for Service dataset?  What are the most common incident categories in the Incidents dataset?","4770bf38":"### What are the columns in each dataset?"}}