{"cell_type":{"6a88bfee":"code","22dfcf9c":"code","414dcd21":"code","8ebc419f":"code","1ceb0f62":"code","afde033b":"code","b497aabb":"code","28abb3dc":"code","202f2bda":"code","ebf2f706":"code","59cb5d04":"code","713fd4cb":"code","cd91699f":"markdown","24bb3f41":"markdown","00fb3840":"markdown","89ec2104":"markdown","5a2bf561":"markdown","52fd439e":"markdown","3f1fe72f":"markdown","17f783af":"markdown"},"source":{"6a88bfee":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nfrom fastai import *\nfrom fastai.text import *\nimport os","22dfcf9c":"\npath = '\/kaggle\/input\/hindi-poetry-dataset'; path = Path(path)\nfile = 'sample_naaraz_22.txt'; file = Path(file)\nfilename = path\/file\nf = open(filename, 'r')\ntext = f.read()\nprint(text[:1000])","414dcd21":"poems = []\nfor file in os.listdir(path):\n    filename = path\/file\n    f = open(filename, 'r')\n    text = f.read()\n    poems.append(text)\n\npoems_df = pd.DataFrame(poems)\npoems_df.head()","8ebc419f":"data_lm = (TextList.from_df(poems_df)\n                  .split_by_rand_pct(0.2)\n                  .label_for_lm()\n                  .databunch(bs=128))","1ceb0f62":"data_lm.show_batch(rows=6)","afde033b":"learn = language_model_learner(data_lm, AWD_LSTM, metrics=[accuracy,Perplexity()], drop_mult=0.5)","b497aabb":"learn.lr_find()","28abb3dc":"learn.recorder.plot()","202f2bda":"learn.fit_one_cycle(3, 1e-01, moms=(0.8,0.7))","ebf2f706":"predict = learn.predict('\u0924\u0941\u092e\u094d\u0939\u0947\u0902', n_words = 50)","59cb5d04":"print(predict)","713fd4cb":"predict = learn.predict('\u092e\u0948\u0902', n_words = 150)\nprint(predict)","cd91699f":"Now that preprocessing is done, lets build a language model. For the uninitiated, a language model is nothing but an autocomplete. It predicts the next words based on the sequence of previous words.","24bb3f41":"I was browsing Kaggle the other day and came across this dataset: a dataset that is scraped from a website that contains Gulzar's *Pukhraj*, and Rahat Indauri's *Dhoop Bahut Hai* and *Naaraz*. So I thought, why not make an AI that produces and mimics the beautiful Hindustani poetry that the two poets have to author. In Hindi\/Urdu, short poems are often referred to as *shayaris* (correct me if I am wrong) and so, since I am very creative, I gave this project the name ShayarAI. You're welcome.","00fb3840":"Well, of course these aren't the best poems, but pretentious enough for people to think again if this is written by a human or an AI.","89ec2104":"There is a smooth decrease in the learning rate during it's later half. But keeping it closer to 1 might be bad. So I am going to put the maximum learning rate to be 0.1. The model is trained for 3 generations using one cycle cyclical annealing of the learning rate (proposed by Leslie Smith).","5a2bf561":"Let's take a look at what we are getting into. The following is a sample from *Naraz*.","52fd439e":"I then create a datastructure (pandas dataframe) to store all this text in a systematic and meticulous way.","3f1fe72f":"Now let's take a look at some of the results.","17f783af":"Now let's train the language model. I train it using an AWD LSTM from fastai."}}