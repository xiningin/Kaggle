{"cell_type":{"572ee49e":"code","a51a5e95":"code","e079071c":"code","ec95a660":"code","30af0eee":"code","626315c3":"code","4201fc3b":"code","75381740":"code","32742b5a":"code","5b49ab26":"code","a46b3e98":"code","e7ebddec":"code","b3ab1da6":"code","abdfd00a":"code","cfa48267":"code","996f0a92":"code","06ceb9e2":"code","f8c02c15":"code","38cdba1f":"code","38705ca5":"code","be333b13":"code","2eb2f66c":"code","ed1895ef":"code","6aea8aaa":"code","5d3df508":"code","f4b19979":"code","2457b330":"code","ade05895":"code","862b5a66":"markdown","5def38e8":"markdown","a0524182":"markdown","8d6fead3":"markdown","27c2828e":"markdown","f50c1c69":"markdown","2e0f2a9d":"markdown","b0410891":"markdown","94f8039a":"markdown"},"source":{"572ee49e":"import pandas as pd\nLife_Expectancy_Data = pd.read_csv(\"..\/input\/life-expectancy\/Life Expectancy Data.csv\")\nLife_Expectancy_Data","a51a5e95":"Life_Expectancy_Data.info()","e079071c":"Life_Expectancy_Data.columns","ec95a660":"Life_Expectancy_Data.columns = Life_Expectancy_Data.columns.str.strip()\nLife_Expectancy_Data.columns","30af0eee":"Life_Expectancy_Data.columns = Life_Expectancy_Data.columns.str.replace (\" \", \"_\")\nLife_Expectancy_Data.columns","626315c3":"Life_Expectancy_Data.rename(columns = {'HIV\/AIDS': 'HIV'}, inplace = True)\nLife_Expectancy_Data.columns","4201fc3b":"Life_Expectancy_Data.replace(regex=[\"C\u00c3\u00b4te d'Ivoire\"], value='Ivory Coast')","75381740":"# Displaying the count of Null values in each column\nLife_Expectancy_Data.isnull().sum()","32742b5a":"# Creating multiple dataframes based upon Country column\ndata1=Life_Expectancy_Data[['Country','GDP']]\ndata2=Life_Expectancy_Data[['Country','Population']]\ndata3=Life_Expectancy_Data[['Country','Schooling']]\ndata4=Life_Expectancy_Data[['Country','Alcohol']]\ndata5=Life_Expectancy_Data[['Country','BMI']]\ndata6=Life_Expectancy_Data[['Country','Total_expenditure']]\ndata7=Life_Expectancy_Data[['Country','thinness__1-19_years']]\ndata8=Life_Expectancy_Data[['Country','Adult_Mortality']]\ndata9=Life_Expectancy_Data[['Country','Polio']]\ndata10=Life_Expectancy_Data[['Country','Diphtheria']]\ndata11=Life_Expectancy_Data[['Country','Hepatitis_B']]","5b49ab26":"# Grouping and displaying the dataframe with the mean values of the specific country column\ngrouped1 = data1.groupby('Country').mean()\ngrouped2 = data2.groupby('Country').mean()\n\nprint(grouped1)\nprint(grouped2)","a46b3e98":"# Grouping by country and replacing NULL values with country specific mean values\n\ndata1[\"GDP\"] = data1.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata2[\"Population\"] = data2.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata3[\"Schooling\"] = data3.groupby(\"Country\").transform(lambda x: x.fillna(0))\ndata4[\"Alcohol\"] = data4.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata5[\"BMI\"] = data5.groupby(\"Country\").transform(lambda x: x.fillna(0))\ndata6[\"Total expenditure\"] = data6.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata7[\"thinness__1-19_years\"] = data7.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata8[\"Adult Mortality\"] = data8.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata9[\"Polio\"] = data9.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata10[\"Diphtheria\"] = data10.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\ndata11[\"Hepatitis_B\"] = data10.groupby(\"Country\").transform(lambda x: x.fillna(x.mean()))\n\nprint(data1.loc[data1['Country'] == 'Somalia'])\nprint(data2.loc[data2['Country'] == 'Iraq'])\nprint(data3.loc[data3['Country'] == 'Cook Islands'])\nprint(data4.loc[data4['Country'] == 'Iraq'])\nprint(data5.loc[data5['Country'] == 'South Sudan'])\nprint(data6.loc[data6['Country'] == 'Algeria'])\nprint(data7.loc[data7['Country'] == 'Algeria'])\nprint(data8.loc[data8['Country'] == 'Iraq'])\nprint(data9.loc[data9['Country'] == 'Iraq'])\nprint(data10.loc[data10['Country'] == 'Iraq'])\nprint(data11.loc[data11['Country'] == 'Switzerland'])","e7ebddec":"# Merging the pre-processed dataset\nmerged_data_frame = pd.concat([data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11],axis=1)\nprocessed_data=merged_data_frame[['Country', 'GDP', 'Population', 'Schooling','Alcohol','BMI','Total_expenditure','thinness__1-19_years','Adult_Mortality','Polio','Diphtheria','Hepatitis_B']]\npre_processed_data=processed_data.iloc[:,10:24] \nprint(pre_processed_data)","b3ab1da6":"# Replacing the null values in the data dataframe with zero\npre_processed_data.fillna(0,inplace=True)","abdfd00a":"# Re-checking for NULL values\npre_processed_data.isnull().sum()","cfa48267":"dataframe=Life_Expectancy_Data[['Country','Year', 'Status', 'Life_expectancy','infant_deaths','percentage_expenditure', 'Measles','under-five_deaths','HIV','thinness_5-9_years','Income_composition_of_resources']]\nprint(dataframe)","996f0a92":"# Merging the two dataframes into single dataset\ncombined_data = pd.merge(pre_processed_data, dataframe, on='Country')\ncombined_data","06ceb9e2":"# Checking for null values in the final dataset\ncombined_data.isnull().sum()","f8c02c15":"# Replacing the NULL values with the Zero value\ncombined_data.fillna(0,inplace=True)","38cdba1f":"# Re-checking the final dataset for NULL values\ncombined_data.isnull().sum()","38705ca5":"# Drop \"Income_composition_of_resources\" column and \"thinness_5-9_years\"\ncombined_data = combined_data.drop(columns=[\"Income_composition_of_resources\", \"thinness_5-9_years\"])","be333b13":"# Renaming the thinness__1-19_years column\ncombined_data = combined_data.rename(columns={'thinness__1-19_years': 'thinness_1_to_19_years'})","2eb2f66c":"# Displaying the final dataset columns\ncombined_data.columns","ed1895ef":"# Displaying the count of number of different values present in the \"Status\" column\ncombined_data[\"Status\"].value_counts()","6aea8aaa":"# Categorizing the \"Status\" column using the dictionary country_status\ncountry_status = {\"Status\":     {\"Developed\": 1, \"Developing\": 2}}","5d3df508":"# Replacing the \"Status\" column values in the original dataset with the categorized dictionary values\ncombined_data.replace(country_status, inplace=True)\ncombined_data.head()","f4b19979":"# Loading the external dataset\ndf = pd.read_excel('https:\/\/query.data.world\/s\/5ilfdggga4cv3psg2os532gesrtfzd')\ndf","2457b330":"df.columns","ade05895":"# Renaming the columns in the external dataset\ndf = df.rename(columns={'Country Name': 'Country', 'Country Code': 'Country_Code'})","862b5a66":"**Listing the dataset information which contains number of rows and columns, data types count and memory usage by the dataset.**","5def38e8":"In the dataset, the column \"Income_composition_of_resources\" can be dropped because its value doesn't create much impact in the predictive model. And the column \"thinness_5-9_years\" can be dropped since it is the subset of thinness__1-19_years.","a0524182":"**External dataset**\nImporting the external dataset inorder to group the 193 countries in our dataset into 7 different regions namely,\n\nEurope & Central Asia\nSub-Saharan Africa\nLatin America & Caribbean\nEast Asia & Pacific\nMiddle East & North Africa\nSouth Asia\nNorth America\nso that we can categorize the country column effectively. In the imported dataset, we will be using the required columns such as \"Country Name\", \"Country Code\" and \"Region\".","8d6fead3":"**Listing the columns in the dataset**","27c2828e":"**From the above output it is clearly known that few column names have extra spaces and some special characters. We have to clean them inorder to make it appropriate for future use. \nI have used strip () method to remove the beginning and trailing spaces in the column names.**","f50c1c69":"**To remove the space inbetween the column names and replace it with _ (underscore), I use replace() method.**","2e0f2a9d":"**Since the column 'HIV\/AIDS' have special charcter \/ , I rename it to HIV by using rename() method**","b0410891":"**Code for importing the dataset**","94f8039a":"**# Replacing the country name in French to English name**"}}