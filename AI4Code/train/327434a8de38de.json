{"cell_type":{"53e0ba8c":"code","c395f4b5":"code","14895992":"code","747dbc07":"code","395cf6ab":"code","3d041656":"code","1aa9116f":"code","127e050d":"code","5c7507ac":"code","f65bf7c7":"code","e4eb42f6":"code","f8339409":"code","91d64b1e":"code","db43f423":"code","d50a0b8b":"code","505b6372":"code","a925396c":"code","77cec84f":"code","bcda77fd":"code","f2a8f669":"code","78c98a69":"code","fd6a61ad":"code","8e9c172a":"code","0fe78903":"code","74a6cde9":"code","66e36b33":"code","795c7d35":"code","9587ff17":"code","5240ecc4":"markdown","af82cfd9":"markdown"},"source":{"53e0ba8c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","c395f4b5":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","14895992":"train.describe()","747dbc07":"train.head()","395cf6ab":"print(train.columns)","3d041656":"print(pd.isnull(train).sum())","1aa9116f":"print('train shape:',train.shape)\nprint('test shape:',test.shape)","127e050d":"# Change type of 'Sex' feature to numeric\nsex_num = {\"male\": 1, \"female\": 0}\ntrain['Sex'] = train['Sex'].map(sex_num)\ntest['Sex'] = test['Sex'].map(sex_num)","5c7507ac":"train.head()","f65bf7c7":"train = train.drop(['Name','Cabin','Ticket','Age'], axis = 1)","e4eb42f6":"train.head()","f8339409":"print(pd.isnull(train).sum())\n","91d64b1e":"train = train.fillna({\"Embarked\": \"S\"})","db43f423":"train.head()","d50a0b8b":"test.head()","505b6372":"print(test.isnull().sum())","a925396c":"test = test.drop(['Name'], axis = 1)","77cec84f":"test = test.drop(['Cabin','Ticket','Age'], axis = 1)","bcda77fd":"test.head()","f2a8f669":"train['Embarked'] = train['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\ntest['Embarked'] = test['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","78c98a69":"train.head()","fd6a61ad":"print(train.isnull().sum())","8e9c172a":"median_fare = test.groupby(['Pclass','SibSp','Parch'])['Fare'].median()[3][0][0]\ntest['Fare'] = test['Fare'].fillna(median_fare)","0fe78903":"print(test.isnull().sum())","74a6cde9":"data=[train,test]\nfor df in data:\n    data_correlation = df.corr().abs()\n    plt.figure(figsize=(10, 10))\n    sns.heatmap(data_correlation, annot=True,cmap='YlGnBu')\n    plt.show()","66e36b33":"predictors = train.drop(['Survived', 'PassengerId'], axis=1)\ntarget = train[\"Survived\"]\nx_train, x_val, y_train, y_val = train_test_split(predictors, target, test_size = 0.469, random_state = 0)","795c7d35":"gb = GradientBoostingClassifier()\ngb.fit(x_train, y_train)\ny_pred = gb.predict(x_val)\nacc_gb = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint('The accuracy value',acc_gb)","9587ff17":"submit = pd.DataFrame({'PassengerId':test[\"PassengerId\"],'Survived':y_pred})\nx=submit.to_csv('submission.csv')","5240ecc4":"Data shape","af82cfd9":"# Read data"}}