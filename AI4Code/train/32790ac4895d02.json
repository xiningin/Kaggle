{"cell_type":{"7fc06ce0":"code","30771d2c":"code","7c92c3ad":"code","0c658ae8":"code","25e7ddfe":"code","918f9fa4":"code","4a1fae73":"code","72873a55":"code","cc4a1465":"code","f98d60d3":"code","63102290":"code","9089d434":"code","4be3b112":"code","f6a7c32d":"code","05e64716":"code","8316c673":"code","ced1e083":"code","ca7285bb":"code","53cfafc3":"code","c8f2dfb2":"code","6723a4cc":"code","4f3ff3fd":"code","f1aa2049":"code","21016ce3":"code","1b79ae3b":"code","49d2d561":"code","bdd84922":"code","5bc5f8b9":"code","53ac6329":"code","29a1f27f":"code","57374f8d":"code","cc5ef4b9":"markdown"},"source":{"7fc06ce0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","30771d2c":"df = pd.read_csv('..\/input\/logistic-regression\/Social_Network_Ads.csv')","7c92c3ad":"df.head()","0c658ae8":"sns.distplot(df.Age, kde=False)","25e7ddfe":"sns.distplot(df.EstimatedSalary)","918f9fa4":"sns.countplot(df.Gender)","4a1fae73":"sns.countplot(df.Purchased)","72873a55":"sns.boxplot(df.Age)","cc4a1465":"from sklearn.preprocessing import LabelEncoder","f98d60d3":"le =LabelEncoder()","63102290":"df.Gender = le.fit_transform(df.Gender)","9089d434":"df.head()","4be3b112":"X = df.drop(['User ID','Purchased'], axis=1)\ny = df['Purchased']","f6a7c32d":"from sklearn.model_selection import train_test_split","05e64716":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) ","8316c673":"from sklearn.linear_model import LogisticRegression","ced1e083":"log = LogisticRegression()","ca7285bb":"log.fit(X_train, y_train)","53cfafc3":"pred = log.predict(X_test)","c8f2dfb2":"from sklearn.metrics import accuracy_score, confusion_matrix","6723a4cc":"accuracy_score(y_test, pred)","4f3ff3fd":"confusion_matrix(y_test, pred)","f1aa2049":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn import metrics","21016ce3":"probs = log.predict_proba(X_test)\npreds = probs[:,1]\nfpr, tpr, threshold = metrics.roc_curve(y_test, preds)\nlogit_roc_auc = metrics.auc(fpr, tpr)\n\nplt.plot(fpr, tpr, label = 'Logistic Regression Base (area = %0.2f)'%logit_roc_auc)\nplt.plot([0,1], [0,1], 'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc='lower right')\nplt.show()","1b79ae3b":"from sklearn.model_selection import GridSearchCV","49d2d561":"model = LogisticRegression(solver='liblinear')\nparams = {'penalty':['l1', 'l2'],\n         'C':[0.001, 0.009, 0.01, 0.9, 1, 5, 10, 25]}\ngridmodel = GridSearchCV(model, param_grid=params, scoring='recall', cv=10)\ngridmodel.fit(X_train, y_train)","bdd84922":"gridmodel.best_estimator_","5bc5f8b9":"gridmodel.best_params_","53ac6329":"gridmodel.scorer_","29a1f27f":"y_predi = gridmodel.predict(X_test)","57374f8d":"accuracy_score(y_test, y_predi)","cc5ef4b9":"# Hyperparameter Tuning"}}