{"cell_type":{"db99faca":"code","0a444368":"code","6944daff":"code","83646537":"code","7dd9298b":"code","ced25dba":"code","4b509db1":"code","9405c77f":"code","979fd6f4":"code","d31845c3":"code","66c437b7":"code","d5e5e89a":"code","02931431":"code","58277d2f":"code","2be89c1e":"code","82b318b1":"code","86c35021":"code","0f8c3602":"code","11fd3129":"code","a407d009":"code","bd2028ad":"code","551e8151":"code","a3e5f301":"code","4cd3fdca":"code","a21a1d26":"code","3db087be":"code","c934bb29":"markdown","a2dad56e":"markdown","096e2d81":"markdown","6e3147fa":"markdown","7273c671":"markdown","4e535699":"markdown","fc48f9eb":"markdown","d2f6a46c":"markdown","560a66bd":"markdown"},"source":{"db99faca":"# Sqlite is a library that implements a SQL database engine. \nimport sqlite3\nimport numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","0a444368":"#connection\nconn = sqlite3.connect('..\/input\/world-development-indicators\/database.sqlite')","6944daff":"#sqlite_master is a table with database schema\npd.read_sql(\"\"\" SELECT *\n                FROM sqlite_master\n                WHERE type='table';\"\"\",\n           conn)","83646537":"# check the head\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               LIMIT 3;\"\"\",\n           conn)","7dd9298b":"# how many rows?\npd.read_sql(\"\"\"SELECT COUNT(*)\n               FROM Indicators;\"\"\",\n           conn)","ced25dba":"# checking for missing values in one column\npd.read_sql(\"\"\"SELECT COUNT(*)\n               FROM Indicators\n               WHERE IndicatorName IS NULL;\"\"\",\n           conn)","4b509db1":"# if I need filter not null\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName IS NOT NULL;\"\"\",\n           conn)","9405c77f":"# checking for missing values in all columns\npd.read_sql(\"\"\"SELECT COUNT(*) - COUNT(CountryName) AS missing_CountryName,\n                      COUNT(*) - COUNT(CountryCode) AS missing_CountryCode,\n                      COUNT(*) - COUNT(IndicatorName) AS missing_IndicatorName,\n                      COUNT(*) - COUNT(IndicatorCode) AS missing_IndicatorCode, \n                      COUNT(*) - COUNT(Year) AS missing_Year, \n                      COUNT(*) - COUNT(Value) AS missing_Value\n                FROM Indicators;\"\"\",\n           conn)","979fd6f4":"# how many indicators?\npd.read_sql(\"\"\"SELECT COUNT (DISTINCT IndicatorName)\n                FROM Indicators;\"\"\",\n           conn)","d31845c3":"# selecting distinct indicators\npd.read_sql(\"\"\"SELECT DISTINCT IndicatorName\n                FROM Indicators;\"\"\",\n           conn)","66c437b7":"# I wanna search for some indicator about GDP\npd.read_sql(\"\"\"SELECT DISTINCT IndicatorName\n               FROM Indicators\n               WHERE IndicatorName LIKE 'GDP%';\"\"\",\n           conn)","d5e5e89a":"# how about GDP per capita of Brazil in last years ?\npd.read_sql(\"\"\" SELECT *\n                FROM Indicators\n                WHERE IndicatorName ='GDP per capita (current US$)'\n                AND CountryName = \"Brazil\"\n                AND Year>=2010;\"\"\",\n           conn)","02931431":"# let's  compare with China\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND (CountryName= 'Brazil' OR CountryName= 'China')\n               AND Year>=2010;\"\"\",\n           conn)","58277d2f":"# let's check the 90's in Brazil\npd.read_sql(\"\"\"SELECT * \n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND CountryName='Brazil'\n               AND Year BETWEEN 1990 AND 1999;\"\"\",\n           conn)","2be89c1e":"# let's check other countries in 2014\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND CountryName IN (\"Brazil\", \"China\", \"India\")\n               AND Year=2014;\"\"\",\n            conn)","82b318b1":"# let's search for the highest GDP per capita in 2014\npd.read_sql(\"\"\"SELECT CountryName, MAX (Value)\n               FROM Indicators\n               WHERE IndicatorName = 'GDP per capita (current US$)'\n               AND Year = 2014;\"\"\",\n            conn)","86c35021":"#Let's order (and reafirm the highest GDP per capita)\npd.read_sql(\"\"\"SELECT * \n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND Year= 2014\n               ORDER BY Value DESC\n               LIMIT 3;\"\"\",\n           conn)","0f8c3602":"# Let's compare the averages\npd.read_sql(\"\"\" SELECT CountryName, AVG(Value)\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName IN ('Brazil', 'China', 'India', 'Angola')\n                AND Year>2010\n                GROUP BY CountryName;\"\"\",\n           conn)","11fd3129":"#how many measures during this time?\npd.read_sql(\"\"\" SELECT CountryName, count (*) AS n_measures\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName IN ('Brazil', 'China', 'India', 'Angola')\n                AND Year>2010\n                GROUP BY CountryName\n                ORDER BY n_measures\n                LIMIT 10;\"\"\",\n           conn)","a407d009":"# important to know that Angola has less measures during this time\npd.read_sql(\"\"\" SELECT *\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName = 'Angola'\n                AND Year>2010;\"\"\",\n           conn)","bd2028ad":"# let's make a join to get the information about indicators GDP related measured in 2014 in Brazil\npd.read_sql(\"\"\" SELECT Indicators.*, Series.LongDefinition\n                FROM Indicators\n                LEFT JOIN Series \n                ON Indicators.IndicatorName  = Series.IndicatorName\n                WHERE Indicators.IndicatorName LIKE 'GDP%'\n                AND CountryName ='Brazil'\n                AND Year=2014;\"\"\",\n            conn)","551e8151":"# I'm using arbitrary values, this is an exercise with didactic purposes: cuts on 10000 and 80000\ndf=pd.read_sql(\"\"\" SELECT *,\n                   CASE WHEN Value < 10000 THEN 'Low'\n                   WHEN Value > 80000 THEN 'High'\n                   ELSE 'Medium' END AS Category\n                   FROM Indicators\n                   WHERE IndicatorName='GDP per capita (current US$)'\n                   AND Year=2014;\"\"\",\n              conn)","a3e5f301":"fig, axes= plt.subplots(1,2, figsize=(8,4),sharey=True)\n\nax1= sns.distplot(df.Value, bins=40, hist_kws={'edgecolor':'k'}, color='mediumseagreen',kde=False,ax=axes[0])\nax1.set_title('Histogram')\nax1.set(xlabel=\"GDP per capita (current US$) - Value\")\nax1= sns.despine()\n\nax2= sns.countplot(x='Category', data=df, palette=\"Greens\", ax=axes[1])\nax2.set_title('Frequency Count')\nax2.set(xlabel=\"GDP per capita (current US$) - Category\")\nax2= sns.despine();","4cd3fdca":"fig.savefig('eda_sql.png', transparent=True)","a21a1d26":"# adding the mean of last 3 years using window function\n\npd.read_sql(\"\"\" SELECT *,\n                ROUND(AVG(Value) OVER (PARTITION BY CountryCode),0) AS AVG_3Y\n                FROM Indicators\n                WHERE IndicatorName='GDP per capita (current US$)'\n                AND Year IN (2012,2013,2014);\"\"\",\n           conn)","3db087be":"# the first place from each year\npd.read_sql(\"\"\" WITH GDP_3 AS \n                (SELECT *,\n                RANK () OVER (PARTITION BY Year ORDER BY Value DESC) AS myrank\n                FROM Indicators\n                WHERE IndicatorName='GDP per capita (current US$)'\n                AND Year IN (2012,2013,2014))\n                \n                SELECT *\n                FROM GDP_3\n                WHERE myrank = 1;\"\"\",\n           conn)","c934bb29":"# 6 - Window Function\nWith a window function, we can make calculations across rows \"in a window\" and return a value for each row.\nThis window can be, for example, grouped sets based on another column or even an ordered set.","a2dad56e":"# 4- JOINs","096e2d81":"# 5- Using CASE WHEN\n\nCASE statements are like \"IF this THEN that\".  \nHere I'm going to use CASE statements for a custom discretization.","6e3147fa":"# 7 - Common Table Expression (CTE)\nA CTE will save results of a query temporary. It can help simplifying some queries and, for example, can also help filtering based on ranking results. ","7273c671":"## <span style='color:DarkGoldenrod'> Let's explore the Indicators table.  <\/span>","4e535699":"# 1- Selecting","fc48f9eb":"# 2- Filtering","d2f6a46c":"# Exploratory Data Analysis with SQL\n\nThe purpose here is to use some queries to explore the data.\n","560a66bd":"# 3- Aggregating and Summarizing"}}