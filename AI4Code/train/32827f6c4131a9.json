{"cell_type":{"c903f05a":"code","f126c5a1":"code","3b090408":"code","3a06e780":"code","c04540ce":"code","4dd37288":"code","d4d64c1e":"code","cdf0c1f7":"code","f12ec097":"code","2957d075":"code","c9fdf6de":"code","dfc8614e":"code","e69a42de":"code","69d84d35":"code","1338ef3f":"code","f3003ec9":"code","aeb44ba3":"code","e4859c44":"code","a215f395":"code","659651c1":"code","57ba91af":"code","ba16ad3c":"code","06008e03":"code","5c1a587c":"code","674c667f":"code","17b42d30":"code","5cae5d90":"code","5267723f":"code","c098f2c2":"markdown","8e52cf62":"markdown","5c6daaf5":"markdown","a810fb6c":"markdown","7c603ba2":"markdown","2aa06051":"markdown","7bc6c115":"markdown","4f14053e":"markdown"},"source":{"c903f05a":"from collections import Counter\nimport csv\nimport gc\nimport json\nimport os\n\nimport matplotlib.pyplot as plt\nimport networkx as nx\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom tqdm import tqdm","f126c5a1":"MIN_STATEMENTS = 1 # 2 # was 5","3b090408":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3a06e780":"items = pd.read_csv(\"\/kaggle\/input\/kensho-derived-wikimedia-data\/item.csv\", nrows = 212345) # first 800k rows - may be enough?\nitems","c04540ce":"# items = items.loc[(~items.en_label.isna() & ~items.en_description.isna())]\nitems = items.loc[~items.en_label.isna()]\nitems","4dd37288":"items.loc[items[\"en_label\"].str.contains(\"book\",case=True)]","d4d64c1e":"items.loc[items[\"en_label\"].str.contains(\"film\",case=True)]","cdf0c1f7":"items.loc[items[\"en_label\"].str.contains(\"company\",case=True)]","f12ec097":"items.loc[items[\"en_label\"].str.contains(\"organization\",case=True)]","2957d075":"del (items)","c9fdf6de":"file_path = \"\/kaggle\/input\/kensho-derived-wikimedia-data\/property.csv\"\np_df = pd.read_csv(file_path)\np_df","dfc8614e":"# p_df.loc[p_df[\"property_id\"]==(31 or 279 or 5 or 2221906 or 43229 or 7275)]","e69a42de":"p_df.loc[(p_df[\"property_id\"]==31)|(p_df[\"property_id\"]==279)|(p_df[\"property_id\"]==5)]\n### |(p_df[\"property_id\"]==2221906)|(p_df[\"property_id\"]==43229)|(p_df[\"property_id\"]==7275)","69d84d35":"file_path = \"\/kaggle\/input\/kensho-derived-wikimedia-data\/statements.csv\"\nqpq_df = pd.read_csv(file_path, dtype=np.int) # , nrows=3234567\nqpq_df","1338ef3f":"## keep cases were it's an instance of \/ is a\n\n\nqpq_df= qpq_df.loc[(qpq_df[\"edge_property_id\"]==31)|(qpq_df[\"edge_property_id\"]==279)].drop_duplicates()\n### |(qpq_df[\"edge_property_id\"]==5)|(qpq_df[\"edge_property_id\"]==2221906)|(qpq_df[\"edge_property_id\"]==43229)|(qpq_df[\"edge_property_id\"]==7275)\nprint(qpq_df.shape[0])","f3003ec9":"qpq_df.nunique()","aeb44ba3":"qpq_source_counts = qpq_df.groupby('source_item_id').size().sort_values(ascending=False)\n\nkeep_source_item_ids = set(qpq_source_counts[qpq_source_counts >= MIN_STATEMENTS].index)\n\nqpq_source_counts","e4859c44":"# qpq_source_counts[qpq_source_counts >= MIN_STATEMENTS]","a215f395":"qpq_df = qpq_df[qpq_df['source_item_id'].isin(keep_source_item_ids)]\n# print(qpq_df.shape[0])","659651c1":"%%time\np279g = nx.DiGraph()\n## 279  =~ \"is instance of\"\n# p279g.add_edges_from(qpq_df[qpq_df['edge_property_id']==279][['source_item_id', 'target_item_id']].values) ## orig\n\np279g.add_edges_from(qpq_df[qpq_df['edge_property_id']==279].drop_duplicates()[['source_item_id', 'target_item_id']].values) ## orig\n# p279g.add_edges_from(qpq_df[['source_item_id', 'target_item_id']].drop_duplicates().values) ## alt","57ba91af":"root_qids = {\n    'per': 5,        # https:\/\/www.wikidata.org\/wiki\/Q5  human\n    'loc': 2221906,  # https:\/\/www.wikidata.org\/wiki\/Q2221906  geographic location\n    'org': 43229,    # https:\/\/www.wikidata.org\/wiki\/Q43229  organization # \tsocial entity (not necessarily commercial) uni..\n    'state': 7275,   # https:\/\/www.wikidata.org\/wiki\/Q7275  state\n\n    \"book\":571, \n\"film\":11424,#sequence of images that give the impression of movement\n\"television_program\":15416, #  - segment of audiovisual content intended for broadcast on television\n# \"company\":783794 , ### subclass of organization:  (Q)\n    \n#     \"website\":35127, \n \n}","ba16ad3c":"subclass_qids = {\n    lbl: set(nx.ancestors(p279g, qid)).union(set([qid]))\n    for lbl, qid in root_qids.items()\n}","06008e03":"df = pd.DataFrame(index=keep_source_item_ids) ## orig\n# df = pd.DataFrame(index=set(qpq_df.index))\ndf.index.name = 'qid'","5c1a587c":"qpq_signature_dfs = {}\nmask1 = qpq_df['edge_property_id']==31 ### orig\n# mask1 = qpq_df['edge_property_id']==(31 or 279) ## alt \n\n### P31 : that class of which this subject is a particular example and member - is a\nfor lbl, qid in root_qids.items():\n    mask2 = qpq_df['target_item_id'].isin(subclass_qids[lbl])\n    qpq_signature_dfs[lbl] = qpq_df[mask1 & mask2][['source_item_id', 'target_item_id']]\n    \n    qpq_signature_dfs[lbl].set_index('source_item_id', drop=True, inplace=True)\n    qpq_signature_dfs[lbl].index.name = 'qid'\n    \n    # de-duplicate index \n    qpq_signature_dfs[lbl] = qpq_signature_dfs[lbl][~qpq_signature_dfs[lbl].index.duplicated()]\n    \n    # add to dataframe\n    df[lbl] = qpq_signature_dfs[lbl]['target_item_id']","674c667f":"df = df.fillna(0).astype(np.int)\ndf","17b42d30":"print(df.shape)\nprint(\"old filtering would have given:\", df.loc[(df['org'] > 0) |(df['state'] > 0) |(df['loc'] > 0) |(df['per'] > 0)  ].shape[0])","5cae5d90":"df = df.loc[(df>0).any(1)]  ## is any value over 0 \nprint(df.shape)","5267723f":"df.to_csv(\"wikidata_ner_entities_v2.csv.gz\",index=True,compression=\"gzip\")","c098f2c2":"# Statements","8e52cf62":"###### more possible candidates\n* may be too broad (i.e if any term used : what about books about metallurgy? etc' \n\n\nQ571 - book\n\n11424\tfilm\tsequence of images that give the impression of movement\n\n15416 television program - segment of audiovisual content intended for broadcast on television\n\n43229\torganization\tsocial entity (not necessarily commercial) uni...\n\n subclass of organization: company (Q783794) - association or collection of individuals, whether natural persons, juridic persons, or a mixture of both\n\n\n4364\tCategory:Educational organizations by country\tWikimedia category\n43229\torganization\tsocial entity (not necessarily commercial) uni...\n79913\tnon-governmental organization\torganization that is neither a part of a gover...\n163740\tnonprofit organization\torganization that uses its income to achieve i...\n240625\t501(c) organization\ttax-exempt nonprofit organization in the Unite...","5c6daaf5":"# Properties\n\n","a810fb6c":"## output","7c603ba2":"# Kensho Dervied Wikimedia Dataset (KDWD) - Wikidata Small Ontology\n\nLet's try and create a small number of classes for Wikidata items that are person, place, state, orghanization (or company?) , so we can filter wikidata items by it ","2aa06051":"# Subclass Graphs","7bc6c115":"# Filter out items with few statements\nCount how many statements we have about each item.","4f14053e":"# Subclass Signatures"}}