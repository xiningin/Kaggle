{"cell_type":{"b8fb6370":"code","c0f9ae7a":"code","d381b00b":"code","97fec122":"code","f47db058":"code","6471e3ce":"code","a7c85c26":"code","737d170a":"code","c7e50082":"code","324d1a01":"code","bbdf08a8":"code","03f72fe5":"code","72642226":"code","ab676045":"code","b6b703f6":"code","2d8fe2c2":"code","0de80b7a":"code","fb1ba0fc":"code","bb70b413":"code","e23759bd":"code","adb7d74c":"code","70569506":"code","a1c09ef4":"code","5ac36e92":"code","3b2a6e74":"code","13509ea0":"code","bfbb1a93":"code","ea0001e4":"code","31bc0f2d":"code","a139b2cf":"code","45c13532":"code","b65a3c7d":"code","f30be96f":"code","856cb972":"markdown","30824af3":"markdown","1c5b1572":"markdown","df1ab5ea":"markdown","d6f8d460":"markdown","682679cc":"markdown","1763361a":"markdown","559ad991":"markdown","7add4aa5":"markdown","af5c7a35":"markdown","8f540d97":"markdown","19dca674":"markdown","5cde6420":"markdown"},"source":{"b8fb6370":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","c0f9ae7a":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","d381b00b":"df_train.head()","97fec122":"def missing_percent(df):\n    nan_percent = 100* (df.isnull().sum() \/ len(df))\n    nan_percent = nan_percent[nan_percent>0].sort_values()\n    return nan_percent\n\ndf_train = df_train.dropna(axis=0,subset=['Embarked'])\ndf_train['Age'] = df_train.groupby('Sex')['Age'].transform(lambda x: x.fillna(x.mean()))\ndf_train = df_train.drop(['Cabin'],axis=1)\n\ndf_Sex_train = pd.get_dummies(df_train['Sex'])\ndf_train = df_train.drop('Sex',axis=1)\ndf_train = pd.concat([df_train,df_Sex_train], axis=1)\n\n\ndf_test = df_test.dropna(axis=0,subset=['Embarked','Fare'])\n\ndf_test['Age'] = df_test.groupby('Sex')['Age'].transform(lambda x: x.fillna(x.mean()))\ndf_test = df_test.drop(['Cabin'],axis=1)\n\ndf_Sex_test = pd.get_dummies(df_test['Sex'])\ndf_test = df_test.drop('Sex',axis=1)\ndf_test = pd.concat([df_test,df_Sex_test], axis=1)","f47db058":"df_train['Survived'].value_counts()","6471e3ce":"X = df_train.drop(['Survived','Name','Ticket','Embarked'],axis=1)\ny = df_train['Survived']","a7c85c26":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=42)","737d170a":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","c7e50082":"scaler.fit(X_train)\nscaled_X_train = scaler.transform(X_train)\nscaled_X_test  = scaler.transform(X_test)","324d1a01":"from sklearn.neighbors import KNeighborsClassifier\nknn_model = KNeighborsClassifier(n_neighbors=1)\nknn_model.fit(scaled_X_train,y_train)","bbdf08a8":"y_pred = knn_model.predict(scaled_X_test)","03f72fe5":"plt.figure(figsize = (12,8))\nsns.heatmap(pd.DataFrame({'Y_test':y_test,'Y_pred':y_pred}))","72642226":"from sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(knn_model, scaled_X_test, y_test)","ab676045":"from sklearn.metrics import accuracy_score,classification_report, confusion_matrix,plot_roc_curve","b6b703f6":"accuracy_score(y_test,y_pred)","2d8fe2c2":"confusion_matrix(y_test,y_pred)","0de80b7a":"print(classification_report(y_test,y_pred))","fb1ba0fc":"test_error_rate = []\n\nfor k in range(1,30):\n    knn_model = KNeighborsClassifier(n_neighbors=k)\n    knn_model.fit(scaled_X_train, y_train)\n    \n    y_pred_test = knn_model.predict(scaled_X_test)\n    \n    test_error = 1 - accuracy_score(y_test, y_pred_test)\n    test_error_rate.append(test_error)\ntest_error_rate","bb70b413":"plt.figure(figsize=(14,10))\nplt.plot(range(1,30), test_error_rate, label = 'Test Error')\n\n\nplt.legend()\nplt.ylabel('Error Rate')\nplt.xlabel('K Value')","e23759bd":"scaler = StandardScaler()\nknn = KNeighborsClassifier()\noperation = [('scaler',scaler),('knn',knn)]\n\nfrom sklearn.pipeline import Pipeline\n\npipe = Pipeline(operation)\n\nfrom sklearn.model_selection import GridSearchCV\n\nk_values = list(range(1,20))\n\nparam_grid = {'knn__n_neighbors': k_values}\n\nfull_cv_classifier = GridSearchCV(pipe, param_grid , cv=5, scoring='accuracy')","adb7d74c":"full_cv_classifier.fit(X_train, y_train)","70569506":"full_cv_classifier.best_estimator_.get_params()","a1c09ef4":"scaler = StandardScaler()\nknn10 = KNeighborsClassifier(n_neighbors=10)\noperations = [('scaler',scaler),('knn10',knn10)]","5ac36e92":"pipe = Pipeline(operations)\npipe.fit(X_train,y_train)","3b2a6e74":"pipe_pred = pipe.predict(X_test)","13509ea0":"print(classification_report(y_test, pipe_pred))","bfbb1a93":"plt.figure(figsize = (12,8))\nsns.heatmap(pd.DataFrame({'Y_test':y_test,'pipe_pred':pipe_pred}))","ea0001e4":"plot_roc_curve(knn10, X_test, pipe_pred) ","31bc0f2d":"X_test  = df_test.drop(['Name','Ticket','Embarked'],axis=1)\nscaled_X_test = scaler.transform(X_test)\npipe_pred = pipe.predict(scaled_X_test)","a139b2cf":"pipe_pred = pd.Series(pipe_pred)\ndf_test = pd.concat([df_test,pipe_pred], axis=0)\ndf_test = df_test.rename(columns={0: \"Survived\"})","45c13532":"df_test.info()","b65a3c7d":"df_test.Survived = df_test.Survived.fillna(0)\ndf_test.Survived = df_test.Survived.astype(int)","f30be96f":"df_test","856cb972":"# Spliting The Data to Train and Test","30824af3":"# The Accuracy","1c5b1572":"# Pip line\n### we want use pipe line to do these tasks automatically","df1ab5ea":"#### Now this time we must predict the test data set\n#### before we was training and test the train data set\n#### to be sure about the accuracy of our model\n#### now we must test the test dataset.","d6f8d460":"# Final Model","682679cc":"## this time we want to see our clusters","1763361a":"### according to this [Notebook](https:\/\/www.kaggle.com\/mohsenpg\/logisticregression-on-titanic) i'll do cleaning data ","559ad991":"# Predect Test Data","7add4aa5":"# Cleaning Data","af5c7a35":"# Train The Model","8f540d97":"# Determine The Features and Target Value(Label)","19dca674":"# Feature Scaling: Scaling The Features","5cde6420":"#### we have two groups:\n#### - first is 0 that means capacity of 549 haven't survived\n#### - second is 1 that means capacity of 549 have survived"}}