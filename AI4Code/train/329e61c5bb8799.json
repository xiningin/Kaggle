{"cell_type":{"219034e3":"code","805f3c0f":"code","14b0ad05":"code","0050b513":"code","65306fe9":"code","5f755c85":"code","707640d8":"code","93b547a8":"code","d1a91cd1":"code","c97d5f6a":"code","b4622d72":"code","7db4197d":"code","9b511899":"code","c853c54b":"code","707d1e2d":"code","cfe97bc4":"code","4bb156f5":"markdown"},"source":{"219034e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","805f3c0f":"df = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')","14b0ad05":"df.head() # to see 5 records by default","0050b513":"df.head(10)","65306fe9":"df.tail() # last 5 records","5f755c85":"# data set info \n\ndf.info()","707640d8":"df.describe()","93b547a8":"# If you just want columns name  \n\ndf.columns","d1a91cd1":"df.to_excel('IRIS_with_index.xls' ) # writing as excel with index ","c97d5f6a":"df.to_excel('IRIS_with_no_index.xls', index = False ) # # writing as excel without index ","b4622d72":"# Lets us see the difference \n\ndf_1 = pd.read_excel('IRIS_with_index.xls')\ndf_1.head()","7db4197d":"# Lets us see the difference \n\ndf_2 = pd.read_excel('IRIS_with_no_index.xls')\ndf_2.head()","9b511899":"# to ways to solve this problem \n\n\n\ndf_3 = pd.read_excel('IRIS_with_index.xls' , index_col = [0])\ndf_3.head()","c853c54b":"x = list(range(1,101,2))\nprint(x)\n\nseries_x = pd.Series(x)  # Series is 1 dimension \nprint(series_x)","707d1e2d":"x =np.arange(0,100,2)\nprint(x)\n\nseries_x = pd.Series(x)  # Series is 1 dimension \nprint(series_x)","cfe97bc4":"\n# dictionary with list object in values \ndetails = { \n'Name' : ['Ankit', 'Aishwarya', 'Shaurya', 'Shivangi'], \n'Age' : [23, 21, 22, 21], \n'University' : ['BHU', 'JNU', 'DU', 'BHU'], \n} \n\n# creating a Dataframe object \ndf = pd.DataFrame(details) \n\ndf \n","4bb156f5":"# PANDAS Series #"}}