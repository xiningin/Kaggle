{"cell_type":{"ef56467c":"code","144b2098":"code","4cbe6fe2":"code","1187bbcc":"code","50629987":"code","ae346abc":"code","bc14cf02":"code","a1702bcf":"code","54bd7c86":"code","9a60506d":"code","be86e1c5":"code","6034bbc4":"code","ac41498b":"code","2789c7dc":"code","8fd692db":"code","4161b318":"code","16ac0a0d":"code","17bc37a6":"code","bdd00bf8":"code","ee82de8b":"code","90dfb491":"code","4fd3782c":"code","294d500d":"code","46498d80":"code","08d98424":"code","b9690454":"code","a49d9c3f":"code","0f6e5b68":"code","f3a0a0b3":"code","eaf0b54d":"code","7cf6da8c":"code","e3de6165":"code","0ffd606b":"code","b80b58a9":"code","5fd0c11a":"code","f03bd2e2":"code","2b3ebdbe":"code","565a7232":"code","472c846c":"code","87b043fa":"code","9b5a99b1":"code","8c31d8d1":"code","98629af9":"code","16ce6101":"code","4d4beb37":"code","752ecb8a":"code","8352b2d8":"code","5e11794f":"code","86cd1bed":"code","0d4f9b45":"code","51944d75":"code","44e4683e":"code","eb183cf5":"code","e63a7556":"code","b73a7413":"code","67fa66c6":"code","3cfe66d9":"code","41bcf052":"code","b28150b1":"code","fe1a049b":"code","00085396":"code","38a05a50":"code","47937407":"code","9f291ddb":"code","4ca9ee18":"code","a43d77a5":"code","28388737":"code","ed62c00a":"code","e850e0e6":"code","93cd553d":"code","86d5ab16":"code","d92a2de0":"code","b7e3951e":"code","aebd9a07":"code","292d8997":"code","f81463d1":"code","a2576860":"code","ac02fbfd":"code","cd316bf6":"code","96c07a37":"code","1ada5e4a":"code","0c9d4a2d":"code","17c2cf0d":"code","a1da9c23":"code","7e435cc6":"code","b657be15":"code","0f7d244c":"code","988d6519":"code","e612a07c":"code","587227eb":"code","b43a8b7a":"code","484edd6a":"markdown","0e5b3ee8":"markdown","53434a50":"markdown","378c3503":"markdown","30eea011":"markdown","51fefaeb":"markdown","ceaed23e":"markdown","4ff00bb3":"markdown","3e2933e8":"markdown","1d14c4bc":"markdown","267b33cb":"markdown","8cf1a57b":"markdown","7d91a15b":"markdown","67eb14da":"markdown","193f6890":"markdown","c4340949":"markdown","5acf572a":"markdown","7589d9f7":"markdown","94593cc9":"markdown","e8e77a56":"markdown","8a5530a9":"markdown","32ea4e08":"markdown","c8ca6c66":"markdown","e57381b7":"markdown","25d0a459":"markdown","3bbde767":"markdown","90cc5296":"markdown","0726675f":"markdown","5f269436":"markdown","e498b98b":"markdown","353d484e":"markdown","6cc67159":"markdown","e539d936":"markdown","01397896":"markdown","4d1dc5b7":"markdown","9de11a49":"markdown","ef92a84f":"markdown","d751552a":"markdown"},"source":{"ef56467c":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt \nimport seaborn as sns","144b2098":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndf.head()","4cbe6fe2":"df.describe()","1187bbcc":"df.dtypes","50629987":"plt.hist(df['age'], bins = [20,30,40,50,60,70,80], edgecolor = 'black')\nplt.title('Age')","ae346abc":"plt.hist(df['trestbps'], bins = [90,100,110,120,130,140,150,160,170,180,190,200], edgecolor = 'black')\nplt.title('Resting Blood Pressure')","bc14cf02":"plt.hist(df['chol'], bins = 7, edgecolor = 'black')\nplt.title('Cholesterol')","a1702bcf":"plt.hist(df['thalach'], bins = [70,80,90,100,110,120,130,140,150,160,170,180,190,200], edgecolor = 'black')\nplt.title('Max Heart Rate')","54bd7c86":"plt.hist(df['oldpeak'], bins = 5, edgecolor = 'black')\nplt.title('ST Depression')","9a60506d":"plt.scatter(df['age'],df['trestbps'], s=30, c = '#b6eb7a', edgecolor = 'green', linewidth = 1, alpha = 0.8)\nplt.xlabel('Age')\nplt.ylabel('Resting Blood Pressure')\nplt.title('Age vs RBP')","be86e1c5":"plt.scatter(df['age'],df['chol'], s=30, c = '#9bdeac', edgecolor = 'green', linewidth = 1, alpha = 0.8)\nplt.xlabel('Age')\nplt.ylabel('Cholesterol')\nplt.title('Age vs Cholesterol')","6034bbc4":"plt.scatter(df['age'],df['thalach'], s=30, c = '#b6eb7a', edgecolor = 'green', linewidth = 1, alpha = 0.8)\nplt.xlabel('Age')\nplt.ylabel('Max Heart Rate')\nplt.title('Age vs Max Heart Rate')","ac41498b":"plt.scatter(df['age'],df['oldpeak'], s=30, c = '#a8df65', edgecolor = 'green', linewidth = 1, alpha = 0.8)\nplt.xlabel('Age')\nplt.ylabel('ST depression')\nplt.title('Age vs ST depsression')","2789c7dc":"sns.jointplot(x=df['chol'], y=df['trestbps'], data=df, kind=\"kde\")","8fd692db":"sns.jointplot(x=df['thalach'], y=df['chol'], data=df)","4161b318":"f, ax = plt.subplots(figsize=(6, 6))\nsns.kdeplot(df['chol'], df['oldpeak'], ax=ax)\nsns.rugplot(df['chol'], color=\"g\", ax=ax)\nsns.rugplot(df['oldpeak'], vertical=True, ax=ax);","16ac0a0d":"plt.scatter(df['trestbps'],df['thalach'], s=30, c = '#e2979c', edgecolor = 'red', linewidth = 1, alpha = 0.9)\nplt.xlabel('Resting Blood Pressure')\nplt.ylabel('Max Heart Rate')\nplt.title('RBP vs Max Heart Rate')","17bc37a6":"plt.scatter(df['trestbps'],df['oldpeak'], s=30, c = '#c70039', edgecolor = 'red', linewidth = 1, alpha = 0.8)\nplt.xlabel('Resting Blood Pressure')\nplt.ylabel('ST Depression')\nplt.title('RBP vs ST Depression')","bdd00bf8":"plt.scatter(df['thalach'],df['oldpeak'], s=40, c = '#ffbd69', edgecolor = 'orange', linewidth = 1, alpha = 1)\nplt.xlabel('Max Heart Rate')\nplt.ylabel('ST Depression')\nplt.title('Max Heart Rate vs ST Depression')","ee82de8b":"X = df[['age','trestbps','chol','thalach','oldpeak']]\ny = df['target']","90dfb491":"sns.countplot(y)\nyes, no = y.value_counts()\nprint('Number of Patients not diagnosed with Heart Disease:', no)\nprint('Number of Patients diagnosed with Heart Disease:', yes)","4fd3782c":"data = X\ndata_std = (data - data.mean()) \/ data.std()\ndata = pd.concat([y, data_std.iloc[:,:]], axis=1)\ndata = pd.melt(data, id_vars = 'target', var_name = 'features',\n                value_name = 'value')\ndata.head()","294d500d":"plt.figure(figsize = (8,8))\nsns.violinplot(x = 'features', y = 'value', hue = 'target', data = data, split = True, inner = 'quart', color='g')","46498d80":"plt.figure(figsize=(8,8))\nsns.boxplot(x = 'features' , y='value', hue='target', data = data, color = 'r')","08d98424":"plt.figure(figsize = (8,8))\nsns.swarmplot(x = 'features', y = 'value', hue = 'target', data = data)","b9690454":"sns.countplot(x=\"sex\", data=df,hue='target')\nmale, fm = df['sex'].value_counts()\nprint('Number of Female Patients:', fm)\nprint('Number of Male Patients:', male)","a49d9c3f":"sns.countplot(x=\"fbs\", data=df,hue='target')\nfbsno, fbsyes = df['fbs'].value_counts()\nprint('Fasting Blood Sugar > 120 :', fbsyes)\nprint('Fasting Blood Sugar < 120: ', fbsno)","0f6e5b68":"sns.countplot(x=\"exang\", data=df,hue='target')\nno, yes = df['exang'].value_counts()\nprint('Exercise Induced Angina Yes: ', yes)\nprint('Exercise Induced Angina No:', no)","f3a0a0b3":"sns.catplot(x='exang',y='target',data=df,kind='point', hue = 'sex', color = '#e7305b')","eaf0b54d":"sns.catplot(x='fbs',y='target',data=df,kind='point', hue = 'sex', color = '#436f8a')","7cf6da8c":"sns.catplot(x='fbs',y='target',data=df,kind='point', hue = 'exang', color = '#79d70f')","e3de6165":"sns.catplot(x = 'target',y='oldpeak',data=df,kind='violin',hue='sex', palette=sns.color_palette(['#ffdcb4', '#c060a1']))","0ffd606b":"sns.catplot(x = 'target',y='thalach',data=df,kind='box',hue='exang', palette=sns.color_palette(['#162447', '#74d4c0']))","b80b58a9":"sns.countplot(x=\"cp\", data=df,hue='target')","5fd0c11a":"sns.countplot(x=\"restecg\", data=df,hue='target')","f03bd2e2":"sns.countplot(x=\"slope\", data=df,hue='target')","2b3ebdbe":"sns.countplot(x=\"ca\", data=df,hue='target')","565a7232":"sns.countplot(x=\"thal\", data=df,hue='target')","472c846c":"sns.catplot(x='cp',y='target',data=df,kind='point', color = 'g')","87b043fa":"sns.catplot(x='restecg',y='target',data=df,kind='point', color = 'm' )","9b5a99b1":"sns.catplot(x='slope',y='target',data=df,kind='point', color = '#ffa5b0')","8c31d8d1":"sns.catplot(x='ca',y='target',data=df,kind='point',  color = '#1b6ca8')","98629af9":"plt.figure( figsize = (10,10))\nsns.heatmap(df.corr(), annot = True)","16ce6101":"a = pd.get_dummies(df['cp'], prefix = \"cp\")\nb = pd.get_dummies(df['thal'], prefix = \"thal\")\nc = pd.get_dummies(df['slope'], prefix = \"slope\")","4d4beb37":"df = pd.concat([df, a, b, c], axis = 1)\ndf = df.drop(columns = ['cp', 'thal', 'slope'])\ndf.head()","752ecb8a":"X = df.drop(columns = ['chol','fbs','age','sex','trestbps','restecg','target'], axis = 1)\ny = df['target']","8352b2d8":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)\nprint('Training set shape: ', X_train.shape, y_train.shape)\nprint('Testing set shape: ', X_test.shape, y_test.shape)","5e11794f":"# Function definition for fitting data\ndef model_fit(model,X, y,test):\n    model.fit(X,y)\n    y_pred = model.predict(test)\n    return y_pred","86cd1bed":"# Function for calculating accuracy\nfrom sklearn.metrics import accuracy_score\ndef accuracy(Y, y):\n    return accuracy_score(Y,y)","0d4f9b45":"from sklearn.preprocessing import StandardScaler\nX_train = StandardScaler().fit(X_train).transform(X_train.astype(float))\nX_test = StandardScaler().fit(X_test).transform(X_test.astype(float))","51944d75":"model_accuracy = {}","44e4683e":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\nknn","eb183cf5":"y_knn = model_fit(knn, X_train, y_train, X_test)\nknn_acc = accuracy(y_test, y_knn)","e63a7556":"print('Test accuracy: ', knn_acc)","b73a7413":"x = [0]\nmean_acc = np.zeros(20)\nmean_acc_train = np.zeros(20)\nfor i in range(1,21):\n    #Train Model and Predict  \n    knn = KNeighborsClassifier(n_neighbors = i).fit(X_train,y_train)\n    yhat= knn.predict(X_test)\n    yhat2 = knn.predict(X_train)\n    mean_acc[i-1] = accuracy_score(y_test, yhat)\n    mean_acc_train[i-1] = accuracy_score(y_train, yhat2)\n    x.append(i)","67fa66c6":"plt.figure(figsize = (8,6))\nplt.plot(np.arange(1,21), mean_acc, label = 'Test')\nplt.plot(np.arange(1,21), mean_acc_train, label = 'Train')\nplt.title('Test vs Train')\nplt.xticks(np.arange(min(x), max(x)+1, 1.0))\nplt.legend()","3cfe66d9":"y_knn = model_fit(KNeighborsClassifier(n_neighbors = 13), X_train, y_train, X_test)\nmodel_accuracy['KNN'] = accuracy(y_test, y_knn)","41bcf052":"X = StandardScaler().fit(X).transform(X.astype(float))","b28150b1":"from sklearn.model_selection import cross_val_score\nscores = cross_val_score(knn, X , y, cv = 5)\nscores","fe1a049b":"scores.mean()","00085396":"from sklearn import svm\nclf2 = svm.SVC(C=1, kernel = 'rbf', gamma = 'auto')\nclf2","38a05a50":"y_svm = model_fit(clf2, X_train, y_train, X_test)\ny2 = model_fit(clf2, X_train, y_train, X_train)\nsvm_acc = accuracy(y_test, y_svm)\nsvm2 = accuracy(y_train, y2)\nmodel_accuracy['SVM'] = svm_acc\nprint('Train accuracy: ', svm2)\nprint('Test accuracy: ', svm_acc)","47937407":"from sklearn.model_selection import cross_val_score\nscores = cross_val_score(clf2, X , y, cv = 5)\nscores","9f291ddb":"scores.mean()","4ca9ee18":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nclf3 = DecisionTreeClassifier(random_state=42,criterion = 'entropy', max_depth = 3)\nclf3","a43d77a5":"y_tree = model_fit(clf3,X_train,y_train, X_test)\ny_tree2 = model_fit(clf3,X_train,y_train, X_train)","28388737":"print(\"Train score: \", accuracy(y_train,y_tree2),\" Test score: \",accuracy(y_test,y_tree))","ed62c00a":"scores = cross_val_score(clf3, X , y, cv = 5)\nscores","e850e0e6":"scores.mean()","93cd553d":"model_accuracy['Decision Tree'] = accuracy(y_test,y_tree)","86d5ab16":"from sklearn.ensemble import RandomForestClassifier\nclf4 = RandomForestClassifier(random_state = 42, max_depth = 4, criterion = 'entropy')\nclf4","d92a2de0":"y_rf = model_fit(clf4,X_train,y_train, X_test)\ny_rf2 = model_fit(clf4,X_train,y_train, X_train)\nprint(\"Train score: \", accuracy(y_train,y_rf2),\" Test score: \",accuracy(y_test,y_rf))","b7e3951e":"scores = cross_val_score(clf4, X , y, cv = 5)\nscores","aebd9a07":"scores.mean()","292d8997":"model_accuracy['Random Forest'] = accuracy(y_test,y_rf)","f81463d1":"from sklearn.linear_model import LogisticRegression\nclf5 = LogisticRegression(C = 0.1, solver = 'newton-cg')\nclf5","a2576860":"y_lr = model_fit(clf5,X_train,y_train, X_test)\ny_lr2 = model_fit(clf5,X_train,y_train, X_train)\nprint(\"Train score: \", accuracy(y_train,y_lr2),\" Test score: \",accuracy(y_test,y_lr))","ac02fbfd":"scores = cross_val_score(clf5, X , y, cv = 5)\nscores","cd316bf6":"scores.mean()","96c07a37":"model_accuracy['Logistic Regression'] = accuracy(y_test,y_lr)","1ada5e4a":"from sklearn.naive_bayes import GaussianNB\nclf6 = GaussianNB()\nclf6","0c9d4a2d":"y_nb = model_fit(clf6,X_train,y_train, X_test)\ny_nb2 = model_fit(clf6,X_train,y_train, X_train)\nprint(\"Train score: \", accuracy(y_train,y_nb2),\" Test score: \",accuracy(y_test,y_nb))","17c2cf0d":"scores = cross_val_score(clf6, X , y, cv = 5)\nscores","a1da9c23":"scores.mean()","7e435cc6":"model_accuracy['Naive Bayes'] = accuracy(y_test,y_nb)","b657be15":"from xgboost import XGBClassifier\nclf7 = XGBClassifier(random_state=42, max_depth = 3, learning_rate = 0.01, n_estimators = 200)\nclf7","0f7d244c":"y_xg = model_fit(clf7,X_train,y_train, X_test)\ny_xg2 = model_fit(clf7,X_train,y_train, X_train)\nprint(\"Train score: \", accuracy(y_train,y_xg2),\" Test score: \",accuracy(y_test,y_xg))","988d6519":"scores = cross_val_score(clf7, X , y, cv = 5)\nscores","e612a07c":"scores.mean()","587227eb":"model_accuracy['XGBoost'] = accuracy(y_test,y_xg)","b43a8b7a":"plt.figure(figsize=(15,8))\nplt.bar(model_accuracy.keys(),model_accuracy.values(), color = ['#87dfd6','#a6dcef','#ddf3f5','#111d5e','#111d5e','#a6dcef','#40bad5'])\nplt.ylabel(\"Accuracy\")\nplt.xlabel(\"Classification Algorithm\")\nplt.show()","484edd6a":"### SVMs","0e5b3ee8":"Our data has 3 types of data:\n1. Continuous (#): which is quantitative data that can be measured- age, trestbps, chol, thalach, oldpeak\n2. Ordinal Data: Categorical data that has a order to it (0,1,2,3, etc)- cp, restecg,  slope, ca, thal\n3. Binary Data: data whose unit can take on only two possible states ( 0 &1 )- sex, fbs, exang","53434a50":"### Decision Tree","378c3503":"### Relationship between different numerical features","30eea011":"<p>\nThere is a moderate positive correlation between the target variable and 'cp','thalach' and 'slope'. As a person's chest pain, max. heart rate or peak exercise ST deprssion increases, his chances of getting a heart disease also increase.\n<\/p>\n<p>\nOn the other hand, there is a moderate negative correaltion between the target variable and 'exang'(Exercise Induced Angia),'oldpeak'(ST depression induced by exercise relative to rest),'ca'( number of major vessels ) and 'thal'(max. heart rate achieved).\n<\/p>","51fefaeb":"### RFs","ceaed23e":"### KDE Plots","4ff00bb3":"## Feature Selection and Data Preparation","3e2933e8":"We can see that the overall shape & distribution for negative & positive patients differ vastly. <br>Positive patients exhibit a lower median for ST depression level & thus a great distribution of their data is between 0 & 2, while negative patients are between 1 & 3. In addition, we don\u2019t see many differences between male & female target outcomes.","1d14c4bc":"Majority of people with heart disease had FBS > 120 and no Exercised Induced Angina.","267b33cb":"We have a good balance between our output.<br>\nNow, let's transform our dataset such that our columns work as identifiers and our target variable is used as value.","8cf1a57b":"Females had higher number of patients with heart disease","7d91a15b":"## Numerical Features","67eb14da":"We see that relatively all models perform well but we get the highest accuracy with <strong><em>Random Forest<\/em><\/strong> and <strong><em>Logistic Regression<\/em><\/strong> of around <strong>85.5%<\/strong>","193f6890":"Thalach and oldpeak and, to some extent even age, are good indicators of the target variable","c4340949":"As previously seen, there are more diseased people with no Exercise Induced Angina plus this also provides a confirmation that Females suffered more from the disease","5acf572a":"There are more disease-free females with FBS < 120 as compared to males in that category","7589d9f7":"Positive patients exhibit a heightened median for Max Heart Rate, while negative patients have lower levels","94593cc9":"### Analysing numerical features w.r.t Target","e8e77a56":"## Categorical Features","8a5530a9":"### XGBoost","32ea4e08":"People with High Resting ECG(~2) show a lesser chance of having the disease.","c8ca6c66":"Overall, all the features are not similar which is good for our model.","e57381b7":"## Comparing Models","25d0a459":"### K-Nearest Neighbors","3bbde767":"### Logistic Regression","90cc5296":"More number of positive patients had peak exercise ST segment equal to 2","0726675f":"I'm a beginner in ML and have recently started analysing different datasets, so I would very much appreciate any sort of feedback on this notebook. Thanks! ","5f269436":"### Naive Bayes","e498b98b":"Here we see that patients with no or low chest pain(0) very rarely show a tendency to have a disease which makes sense since a greater amount of chest pain will lead to a greater chance of having heart disease.","353d484e":"### Correlation","6cc67159":"### Distribution","e539d936":"There doesn't seem to be much relationship between Age and other numerical features","01397896":"People with no exercise induced angina have more people with the disease","4d1dc5b7":"## Classification Models","9de11a49":"### Apply categorical encoding","ef92a84f":"## Predicting Heart Disease with Classification Machine Learning Algorithms","d751552a":"Let's look at the descriptions of different features:\n1. age (#)\n2. sex : 1= Male, 0= Female (Binary)\n3. (cp)chest pain type (4 values -Ordinal):Value 1: typical angina ,Value 2: atypical angina, Value 3: non-anginal pain , Value 4: asymptomatic\n4. (trestbps) resting blood pressure (#)\n5. (chol) serum cholesterol in mg\/dl (#)\n6. (fbs)fasting blood sugar > 120 mg\/dl(Binary)(1 = true; 0 = false)\n7. (restecg) resting electrocardiography results(values 0,1,2)\n8. (thalach) maximum heart rate achieved (#)\n9. (exang) exercise induced angina (binary) (1 = yes; 0 = no)\n10. (oldpeak) = ST depression induced by exercise relative to rest (#)\n11. (slope) of the peak exercise ST segment (Ordinal) (Value 1: up sloping , Value 2: flat , Value 3: down sloping )\n12. (ca) number of major vessels (0\u20133, Ordinal) colored by fluoroscopy\n13. (thal) maximum heart rate achieved \u2014 (Ordinal): 3 = normal; 6 = fixed defect; 7 = reversible defect"}}