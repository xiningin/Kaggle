{"cell_type":{"531ff579":"code","468fd86f":"code","84aa20f9":"code","24e96d53":"code","b9099c86":"code","acaa89ff":"code","e62fca0a":"code","7f7aba8e":"code","01c97eee":"code","067ce780":"code","377e8ecb":"code","6d19e0e5":"code","86dc34ca":"code","f2757951":"code","ebd71c71":"code","b2bb1c8a":"code","b96e3aab":"code","0d9d4d12":"code","15e5a5e5":"code","229faf07":"code","0654f985":"code","171f9a79":"code","94c7f328":"code","5bbc6543":"code","c1d617be":"code","e2bdf7d6":"code","45df7bff":"code","daa3b829":"code","a8e8c685":"code","67bccf9e":"code","20aea10f":"markdown","ca84c586":"markdown","93a6c60b":"markdown","7a0ef730":"markdown","e67c7c52":"markdown","2e97ad95":"markdown","7ed702a1":"markdown","4b9e49ec":"markdown","39b28f54":"markdown","b3ed9a09":"markdown","590ccabb":"markdown","cb085282":"markdown","d3ecdd9c":"markdown","fdbce944":"markdown","6a904496":"markdown","fa9d988b":"markdown","395340ba":"markdown","616ca901":"markdown","b4992345":"markdown","2ce97686":"markdown","2f0fc377":"markdown"},"source":{"531ff579":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re\nimport nltk\nfrom nltk.stem import PorterStemmer, WordNetLemmatizer\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom nltk.corpus import stopwords, wordnet","468fd86f":"df = pd.read_csv('..\/input\/iba-ml1-final-project\/train.csv')\ndftest = pd.read_csv('..\/input\/iba-ml1-final-project\/test.csv')","84aa20f9":"df.head()","24e96d53":"df.info()","b9099c86":"# Number of nulls in Review and Review_title column\nprint(df['Review'].isnull().sum())\nprint(df['Review_Title'].isnull().sum())","acaa89ff":"df.describe()","e62fca0a":"#plt.figure(figsize= (15,8))\nf, ax = plt.subplots(nrows=1, figsize=(15,6))\nax = sns.countplot(x = 'Rating', data = df)\nplt.title('Frequency Distribution of Rating')\nfor rect in ax.patches:\n    ax.text(rect.get_x() + rect.get_width()  \/ 2,\\\n             rect.get_height()+ 2,rect.get_height(),horizontalalignment='center', fontsize = 15)\nplt.show()","7f7aba8e":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.countplot(x = 'Recommended', data = df)\nplt.title('Frequency Distribution of Recommended')\nfor rect in ax.patches:\n    ax.text(rect.get_x() + rect.get_width()  \/ 2,\\\n             rect.get_height()+ 2,rect.get_height(),horizontalalignment='center', fontsize = 15)\nplt.show()","01c97eee":"f,ax=plt.subplots(ncols=1,figsize=(15,6))\nsns.countplot(x=df.Rating,hue=df['Recommended'],ax=ax, palette = 'YlOrRd')\nfor rect in ax.patches:\n    ax.text(rect.get_x() + rect.get_width()  \/ 2,\\\n             rect.get_height()+ 2,rect.get_height(),horizontalalignment='center', fontsize = 15)           \nplt.show()","067ce780":"#f, ax = plt.subplots(nrows=1, figsize=(15,6))\nplt.figure(figsize = (15,10))\nsns.displot(df['Age'],kde = True,  color= 'red')\nplt.show()","377e8ecb":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.boxplot(x = 'Rating', y = 'Age', data = df)\nplt.title('Rating Distribution per Age')\nplt.show()","6d19e0e5":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.boxplot(x = 'Recommended', y = 'Age', data = df)\nplt.title('Recommendation Distribution per Age')\nplt.show()","86dc34ca":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\ndf.groupby(['Rating',pd.cut(df['Age'], np.arange(15,100,5))]).size().\\\nunstack(0).plot.bar(stacked=True, ax=ax)\nax.set_title('Rating by age groups',fontsize=15)\nplt.show()","f2757951":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\ndf.groupby(['Recommended',pd.cut(df['Age'], np.arange(15,100,5))]).size().unstack(0).plot.bar(stacked=True, ax=ax)\nax.set_title('Recommended by age groups',fontsize=15)\nplt.show()","ebd71c71":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.set_style('whitegrid')\nsns.countplot(x='Rating',hue='Division',data=df, palette='CMRmap')\nax.set_title('Rating per division',fontsize=15)            \nplt.show()","b2bb1c8a":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.set_style('whitegrid')\nsns.countplot(x='Rating',hue='Department',data=df,palette='viridis')\nax.set_title('Rating per department',fontsize=15)  \nplt.show()","b96e3aab":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.set_style('whitegrid')\nsns.countplot(x='Recommended',hue='Division',data=df,palette='cubehelix')\nax.set_title('Recommended per division',fontsize=15)   \nplt.show()","0d9d4d12":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.set_style('whitegrid')\nsns.countplot(x='Recommended',hue='Department',data=df,palette = 'gnuplot')\nax.set_title('Recommended per department',fontsize=15)   \nplt.show()","15e5a5e5":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.countplot(x = 'Department', data = df, order=df['Department'].value_counts().index)\nplt.title('Shopping by department')\nplt.show()","229faf07":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\ndf.groupby(['Department',pd.cut(df['Age'], np.arange(15,100,5))]).size().unstack(0).plot.bar(stacked=True, ax=ax)\nax.set_title('Shopping in Department by age groups',fontsize=15)\nplt.show()","0654f985":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.countplot(x = 'Product_Category', data = df, order=df['Product_Category'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50, ha=\"right\")\nplt.title('Shopping by product_category')\nplt.show()","171f9a79":"recommended = df[df['Recommended'] == 1]\nnot_recommended = df[df['Recommended'] == 0]","94c7f328":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.countplot(x = 'Product_Category', data = recommended, \\\n              order= recommended['Product_Category'].value_counts().index, palette = 'Set2')\nax.set_xticklabels(ax.get_xticklabels(), rotation=50, ha=\"right\")\nplt.title('Recommended by product_category')\nplt.show()","5bbc6543":"f, ax = plt.subplots(nrows=1, figsize=(15,6))\nsns.countplot(x = 'Product_Category', data = not_recommended, \\\n              order= not_recommended['Product_Category'].value_counts().index, palette = 'cividis')\nax.set_xticklabels(ax.get_xticklabels(), rotation=50, ha=\"right\")\nplt.title('Not_Recommended by product_category')\nplt.show()","c1d617be":"lem = WordNetLemmatizer()\nstop_words = stopwords.words('english')\ndf['Review_not_null'] = df['Review'].fillna('')\ndf['Review_cl'] = df['Review_not_null'].apply(lambda x: \" \".\\\n                                       join([lem.lemmatize(i) for i in re.sub(\"[^a-zA-Z]\", \" \", x).\\\n                                             split() if i not in stop_words]).lower())","e2bdf7d6":"# Recommended = 1\na=nltk.FreqDist((recommended['Review_Title']))\nd=pd.DataFrame({'Review_Title':list(a.keys()),'Count':list(a.values())})\nd=d.nlargest(columns='Count',n=11)\nplt.figure(figsize=(15,10))\nax=sns.barplot(data=d,x='Review_Title',y='Count')\nax.set(ylabel='Count')\nplt.title('Top words used in Review_Title per positive recommendation')\nplt.show()","45df7bff":"# Recommended = 0\na=nltk.FreqDist((not_recommended['Review_Title']))\nd=pd.DataFrame({'Review_Title':list(a.keys()),'Count':list(a.values())})\nd=d.nlargest(columns='Count',n=11)\nplt.figure(figsize=(15,10))\nax=sns.barplot(data=d,x='Review_Title',y='Count')\nax.set(ylabel='Count')\nplt.title('Top words used in Review_Title per negative recommendation')\nplt.show()","daa3b829":"positive_rec = df[df['Recommended'] == 1]\nnegative_rec = df[df['Recommended'] == 0]","a8e8c685":"# Most used words in positive recommendation\ndef word_cloud(df, bgcolor, title):\n    plt.figure(figsize = (15,10))\n    word_cloud = WordCloud(background_color = bgcolor, max_words = 1000, max_font_size = 50)\n    word_cloud.generate(' '.join(df))\n    plt.imshow(word_cloud)\n    plt.axis('off')\n\nword_cloud(positive_rec['Review_cl'], 'black', 'Most Used Words')","67bccf9e":"# Most used words in negative recommendation\ndef word_cloud(df, bgcolor, title):\n    plt.figure(figsize = (15,10))\n    word_cloud = WordCloud(background_color = bgcolor, max_words = 1000, max_font_size = 50)\n    word_cloud.generate(' '.join(df))\n    plt.imshow(word_cloud)\n    plt.axis('off')\n\nword_cloud(negative_rec['Review_cl'], 'black', 'Most Used Words')","20aea10f":"## Shopping by product category","ca84c586":"## Shopping by department and age","93a6c60b":"Most bought products are clothes. Less bought products are chemises and casual bottoms.","7a0ef730":"## Recommended and not recommended products in each category","e67c7c52":"Leader in both recommended and not recommended category is clothes.","2e97ad95":"Out of 14091 ratings, most ratings are 5 (7907) and least ratings are in 1(502) ","7ed702a1":"## Lemmatization","4b9e49ec":"Most customers who gave ratings and recommendations are between 35 and 40. Customers who are more than 75 years old gave only positive recommendations. ","39b28f54":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b3ed9a09":"## Distribution of Ratings and Recommendation","590ccabb":"Interestingly, some of reviewers who gave ratings 4 and 5, did not recommend the products, and vice versa - some of reviewers who gave lower ratings of 1 and 2, recommended the products. ","cb085282":"## Age distribution","d3ecdd9c":"## Mostly used words in Review_Title per recommendation","fdbce944":"Most shoppings are made in Tops department. Except from few outliers, order of purchases across departments by age groups are almost the same. Less shoppings are made in trend department.","6a904496":"## Rating and Recommendation bar chart","fa9d988b":"There are 503 and 2359 values in Review and Review_Title columns respectively","395340ba":"11590 are positive and 2501 are negative recommendations.","616ca901":"## WordCloud","b4992345":"## Rating and Recommendation boxplot by age","2ce97686":"## Rating and Recommendation by division and departments","2f0fc377":"## Rating and recommendation by age groups"}}