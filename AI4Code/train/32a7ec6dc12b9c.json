{"cell_type":{"cdccfde6":"code","5477b43e":"code","333556cc":"code","f177f744":"code","24ae35a9":"code","214a2b6c":"code","84dd0ecb":"code","65dfb71f":"code","73ea1975":"code","604ca9b7":"code","3e5e0b12":"code","82aecbd8":"code","c9ad553e":"code","bdafa25e":"code","f688005e":"code","047d88b0":"code","7de03c56":"code","9e800fd8":"code","2c5693ff":"code","62ba045e":"code","e465a779":"code","18e3500f":"code","619625a0":"code","8304c6af":"code","6654cb9a":"code","570c3315":"code","c9f7277d":"code","c41c1439":"code","99e8dcab":"code","bdfa2b72":"code","9dc60da0":"code","64244c5c":"code","27024b91":"code","ab40a8f6":"code","26153813":"code","e12ee9eb":"code","acab6c19":"code","ba130360":"code","d5426b81":"code","a5cca917":"code","1f351708":"code","17c74c83":"code","0d65f06f":"code","886ba5ac":"code","538760fa":"code","6d503587":"code","5d5dd47f":"markdown","fa16fd3d":"markdown","1419b493":"markdown","67d82ff6":"markdown","3d200717":"markdown","ca87c14b":"markdown","f2d1b0ec":"markdown","60413b29":"markdown"},"source":{"cdccfde6":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom kerastuner.tuners import RandomSearch","5477b43e":"df_train=pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/Future sales prediction\/sales_train.csv')\ndf_train.tail()","333556cc":"df_train.shape","f177f744":"df_test=pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/Future sales prediction\/test.csv')\ndf_test.head()","24ae35a9":"df_test.shape","214a2b6c":"items=pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/Future sales prediction\/items.csv')\nitems.head(3)","84dd0ecb":"item_categories=pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/Future sales prediction\/item_categories.csv')\nitem_categories.head()","65dfb71f":"df_train['date']=pd.to_datetime(df_train['date'],dayfirst=True)","73ea1975":"df_train.head(2)","604ca9b7":"# totals items per day of different shops\n\ndf_train.groupby(['date','shop_id'])[['item_cnt_day']].sum()","3e5e0b12":"# Merging all the different columns \n\ndf_item=pd.merge(df_train,items,on='item_id')\ndf_final=pd.merge(df_item,item_categories,on='item_category_id')","82aecbd8":"df_final=df_final.reset_index()","c9ad553e":"df_final.head(3)","bdafa25e":"df_final.isnull().sum()","f688005e":"df_visu=df_final.set_index('date')","047d88b0":"df_visu.item_cnt_day.resample('W').mean().plot()","7de03c56":"df_visu.item_cnt_day.resample('M').mean().plot()","9e800fd8":"df_month=df_final['date'].dt.month\ndf_year=df_final['date'].dt.year\ndf_final['date']=df_month.astype(str)+'\/'+df_year.astype(str)\ndf_final","2c5693ff":"df_grouped=df_final.groupby(['date','shop_id','item_id']).sum()\n","62ba045e":"#Creating a pivot table with shopid as index and date as columns with item per day as values\n\ndf=df_grouped.pivot_table(index=['shop_id','item_id'],columns='date',values='item_cnt_day')\ndf=df.fillna(0)","e465a779":"df.reset_index(inplace=True)","18e3500f":"df","619625a0":"X_test=pd.merge(df,df_test,on=['shop_id','item_id'],how='right')","8304c6af":"X_test.shape","6654cb9a":"X_test.isnull().sum()","570c3315":"X_test=X_test.fillna(0)","c9f7277d":"X_test","c41c1439":"X_test_new=X_test.drop(columns=['ID','1\/2013','shop_id','item_id'])","99e8dcab":"X_test_new.shape","bdfa2b72":"X_test_new","9dc60da0":"X=df.drop(columns=['10\/2015','shop_id','item_id'])\ny=df['10\/2015'].values.reshape(-1,1)\nX_train,X_val,y_train,y_val=train_test_split(X,y,test_size=0.2,random_state=42)","64244c5c":"print(X.shape)\nprint(y.shape)","27024b91":"scaled=StandardScaler()\nX_train_scaled=scaled.fit_transform(X_train)\ny_scaled=scaled.fit_transform(y_train)\nX_val_scaled=scaled.fit_transform(X_val)\ny_val_scaled=scaled.fit_transform(y_val)\nX_test_scaled=scaled.fit_transform(X_test_new)","ab40a8f6":"#Plotting training loss and validation loss\n\ndef loss_plot(epochs,train_loss,val_loss):\n  itr=np.arange(1,epochs+1)\n  plt.plot(itr,train_loss,color='red',label='Training loss')\n  plt.plot(itr,val_loss,color='green',label='Validation loss')\n  plt.legend()\n  plt.show()","26153813":"#Training a ANN model\n\nmodel=keras.Sequential()\nmodel.add(keras.layers.Dense(units=150,activation='relu',input_dim=33))\nmodel.add(keras.layers.Dense(units=200,activation='relu'))\nmodel.add(keras.layers.Dense(units=200,activation='relu'))\nmodel.add(keras.layers.Dense(units=1,activation='sigmoid'))\nmodel.compile(optimizer='adam',loss='mean_squared_error')\ncallback=[tf.keras.callbacks.EarlyStopping(patience=10, restore_best_weights=True)]\nmodel.summary()","e12ee9eb":"model_fitting=model.fit(x=X_train_scaled,y=y_scaled,epochs=30,validation_data=(X_val_scaled,y_val_scaled),callbacks=[callback])\n","acab6c19":"#Plot of training loss anad validation loss\n\ntrain_loss=model_fitting.history['loss']\nval_loss=model_fitting.history['val_loss']\nloss_plot(len(train_loss),train_loss,val_loss)","ba130360":"def build_model(hp):\n  model=keras.Sequential()\n  model.add(keras.layers.Dense(units=hp.Int('units',min_value=50,max_value=300,step=50),activation='relu',input_dim=33))\n  for i in range(hp.Int('hidden_layers',1,4)):\n    model.add(keras.layers.Dense(units=hp.Int('hidden_units',min_value=50,max_value=300,step=50),activation='relu'))\n  model.add(keras.layers.Dense(units=1,activation='sigmoid'))\n  model.compile(optimizer='adam',loss='mean_squared_error')\n  return model","d5426b81":"tuner=RandomSearch(\n    hypermodel=build_model,\n    objective='val_loss',\n    max_trials=3,\n    executions_per_trial=1,\n    directory='new_test',\n    project_name='test'\n)","a5cca917":"tuner.search_space_summary()","1f351708":"tuner.search(x=X_train_scaled,y=y_scaled,epochs=15,validation_data=(X_val_scaled,y_val_scaled))","17c74c83":"tuner.results_summary()","0d65f06f":"predictions=model.predict(X_test_scaled).round(1)","886ba5ac":"item=pd.DataFrame(predictions,columns=['item_cnt_month'])","538760fa":"data={\n    'item_cnt_month':item['item_cnt_month']\n}\ndf_sub=pd.DataFrame(data=data,index=X_test['ID'])\ndf_sub","6d503587":"df_sub.to_csv('sample_sub_final.csv')","5d5dd47f":"**EDA with training data**","fa16fd3d":"**Creating X_test for kaggle prediction**","1419b493":"**Train test split**","67d82ff6":"**Converting the data to monthly basis and creating a pivot table**","3d200717":"**Hyper tuning the model**","ca87c14b":"**ANN**","f2d1b0ec":"**Visualizations**","60413b29":"**Predictions**"}}