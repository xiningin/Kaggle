{"cell_type":{"4aff8889":"code","54e02bf2":"code","c11d755a":"code","fd5b08dd":"code","6aea7bc0":"code","398dd9df":"code","2f0ae324":"code","26578823":"code","38e9dd9f":"code","f29058ac":"markdown","d48b3e83":"markdown","8d9cf053":"markdown","e6eeb4b1":"markdown","531a8723":"markdown","2b0a2857":"markdown"},"source":{"4aff8889":"#Import the necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nprint(\"Done!\")","54e02bf2":"file =  'https:\/\/cocl.us\/datascience_survey_data'\ndf = pd.read_csv(file)\ndf","c11d755a":"%matplotlib inline\ndf.sort_values(by=['Very interested'], inplace=True, ascending=False)\ndf.rename(columns={'Unnamed: 0':'Topic'},inplace=True)\ndf_perc = df[['Topic']]\ndf_perc = df_perc.join((df[['Very interested','Somewhat interested','Not interested']]\/2233)*100)\ndf_perc.set_index('Topic', inplace=True)\ndf_perc.round(2)","fd5b08dd":"import matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels =['Data Analysis \/ Statistics','Machine Learning','Data Visualization','Big Data (Spark \/ Hadoop)','Deep Learning','Data Journalism']\nvery_int = df_perc['Very interested']\nsome_int = df_perc['Somewhat interested']\nnot_int = df_perc['Not interested']\n\nind = np.arange(len(very_int))  \nwidth = 0.3\n\nfig, ax = plt.subplots(figsize=(20,8))\nrects1 = ax.bar(ind - width, very_int, width, label='Very interested', color='#5cb85c')\nrects2 = ax.bar(ind, some_int, width, label='Somewhat interested', color='#5bc0de')\nrects3 = ax.bar(ind + width, not_int, width, label='Notr interested', color='#d9534f')\n\nax.set_title(\"Percentage of Respondents' Interest In Data Science Areas\", fontsize=16)\nax.set_xticks(ind)\nax.set_xticklabels((labels))\nax.get_yaxis().set_visible(False)\nax.spines['top'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.legend(fontsize=14)\n\n\ndef autolabel(rects, xpos='center'):\n    \"\"\"\n    Attach a text label above each bar in *rects*, displaying its height.\n\n    *xpos* indicates which side to place the text w.r.t. the center of\n    the bar. It can be one of the following {'center', 'right', 'left'}.\n    \"\"\"\n\n    ha = {'center': 'center', 'right': 'left', 'left': 'right'}\n    offset = {'center': 0, 'right': 1, 'left': -1}\n\n    for rect in rects:\n        height = rect.get_height().round(2)\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(offset[xpos]*3, 3),  # use 3 points offset\n                    textcoords=\"offset points\",  # in both directions\n                    ha=ha[xpos], va='bottom', fontsize=14)\n\n\nautolabel(rects1, \"center\")\nautolabel(rects2, \"center\")\nautolabel(rects3, \"center\")\n\nfig.tight_layout()\n\nplt.show()","6aea7bc0":"file =  'https:\/\/cocl.us\/sanfran_crime_dataset'\ndf_sf = pd.read_csv(file)\ndf_sf.head()","398dd9df":"df_sf_neigh = df_sf.groupby([\"PdDistrict\"]).count().reset_index()\ndf_sf_neigh.drop(df_sf_neigh.columns.difference(['PdDistrict','IncidntNum']), 1, inplace=True)\ndf_sf_neigh.rename(columns={'PdDistrict':'Neighborhood','IncidntNum':'Count'}, inplace=True)\ndf_sf_neigh","2f0ae324":"!wget --quiet https:\/\/cocl.us\/sanfran_geojson\n!conda install -c conda-forge folium=0.5.0 --yes\nimport folium\n\nprint('Folium installed and imported!')\nprint('GeoJSON file downloaded!')","26578823":"sf_geo = 'https:\/\/cocl.us\/sanfran_geojson'\n\nsf_latitude = 37.77\nsf_longitude = -122.42\nsf_map = folium.Map(location=[sf_latitude,sf_longitude], zoom_start=12)","38e9dd9f":"sf_map.choropleth(\n    geo_data=sf_geo,\n    data=df_sf_neigh,\n    columns=['Neighborhood', 'Count'],\n    key_on='feature.properties.DISTRICT',\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Crime Rate per District in San Francisco')\n\nsf_map","f29058ac":"# First Task\nA survey was conducted to gauge an audience interest in different data science topics, namely:\n\nBig Data (Spark \/ Hadoop)\nData Analysis \/ Statistics\nData Journalism\nData Visualization\nDeep Learning\nMachine Learning\nThe participants had three options for each topic: Very Interested, Somewhat interested, and Not interested. 2,233 respondents completed the survey.\n\nThe survey results have been saved in a csv file and can be accessed through this link: https:\/\/cocl.us\/datascience_survey_data.\n\nIf you examine the csv file, you will find that the first column represents the data science topics and the first row represents the choices for each topic.\n\nUse the pandas read_csv method to read the csv file into a pandas dataframe, that looks like the following:\n\n\nIn order to read the data into a dataframe like the above, one way to do that is to use the index_col parameter in order to load the first column as the index of the dataframe. Here is the documentation on the pandas read_csv method: https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.read_csv.html\n\nOnce you have succeeded in creating the above dataframe, please upload a screenshot of your dataframe with the actual numbers. (5 marks)","d48b3e83":"### Short description: this assignment was a part of the final assessment for the course \"Data Visualization with Python\" as part of the professional certificate in Data Science provided by IBM in partnership with Coursera","8d9cf053":"# Final Assignment - Data Visualization with Python ","e6eeb4b1":"# Third Task\n\nIn the final lab, we created a map with markers to explore crime rate in San Francisco, California. In this question, you are required to create a Choropleth map to visualize crime in San Francisco.\n\nBefore you are ready to start building the map, let's restructure the data so that it is in the right format for the Choropleth map. Essentially, you will need to create a dataframe that lists each neighborhood in San Francisco along with the corresponding total number of crimes.\n\nBased on the San Francisco crime dataset, you will find that San Francisco consists of 10 main neighborhoods, namely:\n\n- Central,\n- Southern,\n- Bayview,\n- Mission,\n- Park,\n- Richmond,\n- Ingleside,\n- Taraval,\n- Northern, and,\n- Tenderloin.\n\nConvert the San Francisco dataset, which you can also find here, https:\/\/cocl.us\/sanfran_crime_dataset, into a pandas dataframe, like the one shown below, that represents the total number of crimes in each neighborhood.\n\n\nOnce you are happy with your dataframe, upload a screenshot of your pandas dataframe. (5 marks)","531a8723":"# Second Task\n\nUse the artist layer of Matplotlib to replicate the bar chart below to visualize the percentage of the respondents' interest in the different data science topics surveyed.\n\nTo create this bar chart, you can follow the following steps:\n\n- Sort the dataframe in descending order of Very interested.\n- Convert the numbers into percentages of the total number of respondents. Recall that 2,233 respondents completed the survey. Round percentages to 2 decimal places.\nAs for the chart:\n- use a figure size of (20, 8),\n- bar width of 0.8,\n- use color #5cb85c for the Very interested bars, color #5bc0de for the Somewhat interested bars, and color #d9534f for the Not interested bars,\n- use font size 14 for the bar labels, percentages, and legend,\n- use font size 16 for the title, and,\n- display the percentages above the bars as shown above, and remove the left, top, and right borders.\nOnce you are satisfied with your chart, please upload a screenshot of your plot. (5 marks)","2b0a2857":"# Fourth Task\n\nNow you should be ready to proceed with creating the Choropleth map.\n\nAs you learned in the Choropleth maps lab, you will need a GeoJSON file that marks the boundaries of the different neighborhoods in San Francisco. In order to save you the hassle of looking for the right file, I already downloaded it for you and I am making it available via this link: https:\/\/cocl.us\/sanfran_geojson.\n\nFor the map, make sure that:\n\n- it is centred around San Francisco,\n- you use a zoom level of 12,\n- you use fill_color = 'YlOrRd',\n- you define fill_opacity = 0.7,\n- you define line_opacity=0.2, and,\n- you define a legend and use the default threshold scale.\n\nOnce you are ready to submit your map, please upload a screenshot of your Choropleth map. (5 marks)"}}