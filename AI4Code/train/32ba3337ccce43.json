{"cell_type":{"19d3e969":"code","071b391b":"code","f6c20619":"code","ff5f72da":"code","51d0ac7e":"code","945609b3":"code","ce2f751a":"code","d9846299":"code","826037b0":"code","6e2f33f3":"code","44f81c51":"code","334e91b2":"markdown","8b27c73c":"markdown","e676ae49":"markdown","4c911ab4":"markdown"},"source":{"19d3e969":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom glob import glob\nfrom tqdm.notebook import tqdm","071b391b":"def getpath(x):\n    return '..\/input\/seti-breakthrough-listen\/train\/'+x[0]+f'\/{x}.npy'\n\ndef get_testpath(x):\n    return '..\/input\/seti-breakthrough-listen\/test\/'+x[0]+f'\/{x}.npy'","f6c20619":"train = pd.read_csv('..\/input\/seti-breakthrough-listen\/train_labels.csv')\ntrain['filepath'] = train.id.apply(getpath)\n\ntest = pd.read_csv('..\/input\/seti-breakthrough-listen\/sample_submission.csv')\ntest['filepath'] = test.id.apply(get_testpath)\ntrain.head(2)","ff5f72da":"class SetiDataset():\n    def __init__(self, df):\n        self.df = df\n    \n    def __len__(self):\n        return len(self.df)\n    \n    def __getitem__(self,idx):\n        filepath = self.df.filepath.iloc[idx]\n        file_id = self.df.id.iloc[idx]\n        target = self.df.target.iloc[idx]\n        arr = np.load(filepath).astype('float')\n        return arr, target, file_id","51d0ac7e":"SD = SetiDataset(train)\nfile_ids = []\ntargets = []\nmeans = []\nfor i in tqdm(range(len(SD))):\n    arr, target, file_id = SD[i]\n    means.append(arr.mean())\n    targets.append(target)\n    file_ids.append(file_id)","945609b3":"df = pd.DataFrame()\ndf['id'] = file_ids\ndf['means'] = means\ndf['target'] = targets","ce2f751a":"fig = plt.figure(figsize=(12,6))\nplt.title('training data. npy_array global mean values', fontsize=20)\nsns.histplot(data=df, x='means', hue='target', stat=\"density\", common_norm=False)\nplt.show()","d9846299":"a0, b0 = -3.3525338394155724e-08, 8.796053804628716e-06\na1, b1 = 5.061294421808332e-06, 9.360717422307713e-06\n\nxlines = np.linspace(-0.0001, 0.0001, 1000)\n\nfig = plt.figure(figsize=(12,6))\nax = plt.subplot(1,1,1)\nplt.title('laplace distribution', fontsize=20)\nsns.histplot(data=df, x='means', hue='target', stat=\"density\", common_norm=False, ax=ax)\nplt.plot(xlines, laplace.pdf(xlines, a0, b0), c ='darkblue')\nplt.plot(xlines, laplace.pdf(xlines, a1, b1), c='darkorange')\nplt.show()","826037b0":"from scipy.stats import laplace\ndef expect_label(x):\n    x = np.array(x)\n    p1 = 0.1\n    a0 = -3.3525338394155724e-08\n    b0 = 8.796053804628716e-06\n    a1 = 5.061294421808332e-06\n    b1 = 9.360717422307713e-06\n    d = 0.000003\n    px0 = laplace.pdf(x-d, a0, b0)+laplace.pdf(x+d, a0, b0)+4*laplace.pdf(x,a0,b0)\n    px1 = laplace.pdf(x-d, a1, b1)+laplace.pdf(x+d, a1, b1)+4*laplace.pdf(x,a1,b1)\n    return px1*p1\/(px1*p1+px0*(1-p1))","6e2f33f3":"vals = expect_label(df.means.to_numpy())\ndf['vals']=vals\nfig = plt.figure(figsize=(12,8))\nplt.subplot(2,2,1)\nplt.title('training data. expected values', fontsize=12)\nsns.histplot(data=df, x='vals', hue='target', stat=\"density\", common_norm=True)\nplt.subplot(2,2,2)\nplt.title('training data. expected values density', fontsize=12)\nsns.histplot(data=df, x='vals', hue='target', stat=\"density\", common_norm=False)\nplt.show()\ndf","44f81c51":"df.to_csv('means.csv', index=None)","334e91b2":"The two distributions differ slightly in mean. \n\nBelow code describes the expected label using the Laplace distribution.","8b27c73c":"Conclusion: In this notebook, we checked the mean value of the training data.","e676ae49":"Simple visualization of the data mean values.\n\nIn this notebook, I calculated and visualized the mean of the SETI training data.","4c911ab4":"The laplace distribution can not distinguished data exactly, \nbut I'll try to calculate following.\n\n\n"}}