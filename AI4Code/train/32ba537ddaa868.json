{"cell_type":{"686a12ab":"code","4ffb50b3":"code","52a7fdf8":"code","cd5e88f2":"code","2c16145f":"code","615bd970":"code","5027079f":"code","3e21f21f":"code","579230ef":"code","215cab3a":"code","9077b5d1":"code","aa8d5350":"code","eaf03ed9":"code","e7a1f585":"code","96219643":"code","583bc61f":"code","2e34298e":"code","ec517f25":"code","f6e097a2":"code","3b92f778":"code","dfec579b":"code","7f365e70":"code","f0e0bf19":"code","c5eff574":"code","68d5e8b1":"code","f4b774b5":"code","e40fc3c9":"code","0b7d42fc":"markdown"},"source":{"686a12ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4ffb50b3":"# Reading Train and Test Datasets\ntraindata = pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/train.csv')\ntestdata = pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/test.csv')","52a7fdf8":"#To analyse the top five rows\ntraindata.head()","cd5e88f2":"#To analyse the top five rows\ntestdata.head()","2c16145f":"#To find the count shape of the data\ntraindata.shape","615bd970":"#To find the bottom five rows\ntraindata.tail()","5027079f":"#To find the number of missing values\ntraindata.isnull().sum()","3e21f21f":"traindata[~traindata['Province_State'].isnull()]['Country_Region'].value_counts()","579230ef":"#Deleting the Id, since there is no use of it\ndf=traindata.drop(['Id'], axis=1)\ndf","215cab3a":"#Finding the importing insights\n\nprint (\"How many Province on train set ==> \" +str(len(df[\"Province_State\"].unique())))\nprint (\"How many country on train set ==> \" +str(len(df[\"Country_Region\"].unique())))\nprint (\"Date period for train set ==> \" +df[\"Date\"].unique()[0]+\" to \"+df[\"Date\"].unique()[-1])","9077b5d1":"#Finding the different different types countries in the data\ndf['Country_Region'].value_counts()\n","aa8d5350":"#Finding the highly affected areas\n\ndf1=df.loc[(df['ConfirmedCases']>=1000) & (df['Date']>=\"2020-03-01\")].sort_values('Date')","eaf03ed9":"#printing the highly affected areas\n\ndf1","e7a1f585":"#Finding the importing insights\nimport datetime\nprint (\"How many Province on train set ==> \" +str(len(df1[\"Province_State\"].unique())))\nprint (\"How many country on train set ==> \" +str(len(df1[\"Country_Region\"].unique())))\nprint (\"Date period for train set ==> \" +df1[\"Date\"].unique()[0]+\" to \"+df1[\"Date\"].unique()[-1])","96219643":"#Find whether is there any null values for States in India country\n\ntraindata[traindata['Country_Region'] == 'India']['Province_State'].isnull().sum()","583bc61f":"#Find whether is there any null values for States in Dubai country\n\ntraindata[traindata['Country_Region'] == 'Dubai']['Province_State'].isnull().sum()","2e34298e":"#Finding the name of the Province in Dubai\n\ntraindata[traindata['Country_Region'] == 'Dubai']['Province_State'].unique()","ec517f25":"#Find whether is there any null values for States in Bahrain country\n\ntraindata[traindata['Country_Region'] == 'Bahrain']['Province_State'].isnull().sum()","f6e097a2":"#Find whether is there any null values for States in US country\n\ntraindata[traindata['Country_Region'] == 'US']['Province_State'].isnull().sum()","3b92f778":"#Finding the name of the Province in US\n\ntraindata[traindata['Country_Region'] == 'US']['Province_State'].unique()","dfec579b":"cases=traindata.groupby(by='Country_Region')[['ConfirmedCases','Fatalities']].sum()\ncases","7f365e70":"#Finding the maximum number of Confirmed cases\n\ncases[\"ConfirmedCases\"].max()","f0e0bf19":"#Finding which country hold this highest number\n\ncases.loc[cases[\"ConfirmedCases\"] == 3776300]","c5eff574":"#Finding the maximum number of Deaths cases\n\ncases[\"Fatalities\"].max()","68d5e8b1":"#Finding which country hold this highest number\n\ncases.loc[cases[\"Fatalities\"] == 129278.0]","f4b774b5":"#Finding the Top 10 Countries having highest deaths cases\n\ncases.nlargest(10, 'Fatalities')['Fatalities']","e40fc3c9":"#Finding the Top 10 Countries having highest deaths cases\n\ncases.nlargest(10, 'ConfirmedCases')['ConfirmedCases']","0b7d42fc":"CHINA is in the first position having confirmed cases of 37,76,300"}}