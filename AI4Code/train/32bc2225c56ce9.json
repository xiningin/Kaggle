{"cell_type":{"1fc03db2":"code","c6cfdf5a":"code","d3d9f51b":"code","f97b3d14":"code","7b6c091b":"code","01874684":"code","7ffed91e":"code","ab0a4932":"code","abcd2e96":"code","40681fed":"code","4dfedaee":"code","7da169aa":"code","6e964485":"code","4b77769c":"code","85e4c78c":"markdown","b0b889a7":"markdown","02b12899":"markdown","a2d9aa06":"markdown","2d604918":"markdown","35ea9dde":"markdown"},"source":{"1fc03db2":"#importing all of the neccesary libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom statsmodels.tsa.arima_model import ARIMA\nimport pandas_datareader\nimport datetime\n\nimport pandas_datareader.data as web","c6cfdf5a":"#creating a start and an end dates:\nstart = datetime.datetime(2016,1,1)\nend = datetime.datetime.today()","d3d9f51b":"#Alibaba\nalibaba = web.DataReader('BABA', 'yahoo', start, end)\nalibaba.head()","f97b3d14":"\nalibaba['Open'].plot(label = 'Alibaba')\nplt.legend(loc = 'best');","7b6c091b":"\nalibaba['Volume'].plot(label = 'Alibaba')\nplt.legend();","01874684":"\nalibaba['Total Traded'] = alibaba['Open']*alibaba['Volume']\nalibaba['Total Traded'].plot(figsize = (16,8), label = 'Alibaba')\nplt.legend(loc = 'best');","7ffed91e":"\nalibaba['Avg'] = alibaba[['High', 'Low']].mean(axis=1)\nalibaba['Total Traded New'] = alibaba['Avg']*alibaba['Volume']\nalibaba['Total Traded New'].plot(figsize = (16,8), label = 'Alibaba')\nplt.legend(loc = 'best');","ab0a4932":"\n\nalibaba['MA50'] = alibaba['Open'].rolling(50).mean()\nalibaba['MA200'] = alibaba['Open'].rolling(200).mean()","abcd2e96":"alibaba['Returns'] = alibaba['Close'].pct_change(1)","40681fed":"alibaba['Returns'].hist(bins = 50);","4dfedaee":"\nalibaba['Returns'].hist(bins = 100, figsize=(16,8), label = 'Alibaba', alpha=0.4)\nplt.legend();","7da169aa":"\nalibaba['Returns'].plot(kind='kde', label = 'Alibaba', figsize=(10,8))\nplt.legend();","6e964485":"box_df = pd.concat([ alibaba['Returns']], axis = 1)\nbox_df.columns = [ 'Alibaba Ret']\nbox_df.plot(kind='box', figsize = (8,10));","4b77769c":"model = ARIMA(alibaba['Total Traded New'], order=(2,0,0)).fit()\ny2 = model.predict(100)\n\ny2.plot()","85e4c78c":"# \u0410\u043d\u0430\u043b\u0456\u0437 \u0434\u0430\u043d\u0438\u0445 \u0447\u0430\u0441\u043e\u0432\u0438\u0445 \u0440\u044f\u0434\u0456\u0432","b0b889a7":"References to:\n1. [vbmokin](http:\/\/www.kaggle.com\/vbmokin)\n2. https:\/\/www.kaggle.com\/thebrownviking20\/everything-you-can-do-with-a-time-series\n3. https:\/\/towardsdatascience.com\/an-end-to-end-project-on-time-series-analysis-and-forecasting-with-python-4835e6bf050b\n4. https:\/\/habr.com\/ru\/post\/436294\/\n5. https:\/\/www.kaggle.com\/yurazdit\/time-series-v1\/notebook","02b12899":"my upgrade: Arima tuning","a2d9aa06":"### **Moving Average**","2d604918":"# Boxplots on the returns","35ea9dde":"***\u0412\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0434\u0430\u043d\u0438\u0445 \u043f\u0440\u043e \u0444\u043e\u043d\u0434\u043e\u0432\u0438\u0439 \u0440\u0438\u043d\u043e\u043a***"}}