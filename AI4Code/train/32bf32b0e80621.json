{"cell_type":{"91dfec78":"code","5c228a33":"code","9b040e70":"code","4dcc35a6":"code","8fc2ea22":"code","7f7e2e04":"code","ba4f25b2":"code","f6e19336":"code","e7649d43":"code","05902fc1":"code","85275ebf":"code","770a570f":"code","23700eb2":"code","1356f3ea":"code","e640a838":"code","df3aa360":"code","8865d5ac":"code","7addeab3":"code","4ed06f36":"code","d792a585":"code","512e6b6d":"code","9ce5e864":"code","91a6957e":"code","2ae0887b":"code","b8c6644a":"code","c784913a":"code","1a246478":"code","5aa49a32":"code","9ff67383":"code","657e6dff":"code","a4601497":"code","45f7681b":"code","7c05a941":"code","cd178154":"code","f1644609":"code","3ad8b41c":"code","c0b0120e":"code","31dc6d2c":"code","afb96db5":"code","0a34e91d":"code","03baff09":"markdown","0fba493b":"markdown","71a26fcb":"markdown","1228344f":"markdown","88df5a05":"markdown","61ae8c75":"markdown","1d1b230f":"markdown","48ad29cb":"markdown","b796d744":"markdown","dc2a6f81":"markdown","217a5b8e":"markdown","cfe9d7aa":"markdown","11071609":"markdown","3afcc76f":"markdown","73052a1e":"markdown","ff4d071b":"markdown","a2509529":"markdown","7bb23eb6":"markdown","f1eda4d8":"markdown","4a4ddc6a":"markdown","ff5f5456":"markdown"},"source":{"91dfec78":"!pip3 install seaborn==0.11.0\n!pip install seaborn==0.11.0","5c228a33":"import torch\nimport torchvision\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torchvision.transforms import ToTensor\nfrom torchvision.utils import make_grid\nfrom torch.utils.data import random_split\nimport pandas as pd\nimport seaborn as sns\nimport datatable as dt\nfrom sklearn.preprocessing import StandardScaler\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\n\nfrom colorama import Fore, Back, Style\nred = Fore.RED\ngrn = Fore.GREEN\nblu = Fore.BLUE\nylw = Fore.YELLOW\nwht = Fore.WHITE\n\nimport plotly.express as ex\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff","9b040e70":"print(sns.__version__) \n'''We use seaborn version 0.11.0 to use histplot in PairPlot'''","4dcc35a6":"path = '..\/input\/tabular-playground-series-jan-2021\/'\ntrain = pd.read_csv(path + 'train.csv')\ntest = pd.read_csv(path + 'test.csv')\nsample = pd.read_csv(path + 'sample_submission.csv')","8fc2ea22":"print(f'{train.shape}\\n{test.shape}\\n{sample.shape}')","7f7e2e04":"train.head()","ba4f25b2":"test.head()","f6e19336":"sample.head()","e7649d43":"print('number of null columns in train set :- ',np.sum(train.isnull().sum() > 0))\nprint('number of null columns in test set :-',np.sum(test.isnull().sum() > 0 ))","05902fc1":"features = [f'cont{x}'for x in range(1,15)]\ntarget = ['target']","85275ebf":"all_data = train[features+['id']].append(test)","770a570f":"all_data.head()","23700eb2":"def plot_distribution(ds,feature,color):\n    plt.figure(dpi=125)\n    sns.distplot(ds[feature],color=color);\n    print(\"{}Max value of {} is {}\\n{}Min value of {} is {}\\n{}Mean value of {} is {}\\n{}Std value of {} is {}\\n{}Median value of {} is {}\".format(red,feature,ds[feature].max(),blu,feature,ds[feature].min(),grn,feature,ds[feature].mean(),ylw,feature,ds[feature].std(),wht,feature,ds[feature].median()));","1356f3ea":"def plot_grid(ds,c1,c2,c3):\n    f = sns.PairGrid(ds[:100]);\n    plt.figure(figsize=(10,10));\n    f.map_upper(plt.scatter,color = c1);\n    f.map_lower(sns.kdeplot,color = c2);\n    #f.map_diag(sns.histplot,color = c3 );\n    f.map_diag(sns.kdeplot, lw=3, legend=False,color = c3);","e640a838":"plot_grid(all_data[features],'lightgreen','magenta','red');","df3aa360":"plot_grid(test,'limegreen','darkmagenta','seagreen');","8865d5ac":"corr1,corr2,corr3 = train[features].corr(),train[features].corr(method='pearson'),train[features].corr(method='spearman');\nplt.figure(figsize=(12,9));\nfig = ex.imshow(corr1);\nfig.show();","7addeab3":"plt.figure(figsize=(12,9))\nfig2 = sns.heatmap(corr2, annot=True, cmap=\"mako\")\nplt.show()","4ed06f36":"plt.figure(figsize=(12,9))\nfig2 = sns.heatmap(corr3, annot=True, cmap=\"rocket_r\")\nplt.show()","d792a585":"plt.figure(figsize=(30,15))\nplt.subplot(3,5,1)\nsns.kdeplot(train['cont1'],color='#4285F4',shade=True,alpha=0.8);\nplt.subplot(3,5,2)\nsns.kdeplot(train['cont2'],color='#7D0552',shade=True,alpha=0.8);\nplt.subplot(3,5,3)\nsns.kdeplot(train['cont3'],color='#7FFFD4',shade=True,alpha=0.8);\nplt.subplot(3,5,4)\nsns.kdeplot(train['cont4'],color='#C04000',shade=True,alpha=0.8);\nplt.subplot(3,5,5)\nsns.kdeplot(train['cont5'],color='#4285F4',shade=True,alpha=0.8);\nplt.subplot(3,5,6)\nsns.kdeplot(train['cont6'],color='#F88017',shade=True,alpha=0.8);\nplt.subplot(3,5,7)\nsns.kdeplot(train['cont7'],color='#4285F4',shade=True,alpha=0.8);\nplt.subplot(3,5,8)\nsns.kdeplot(train['cont8'],color='#78C7C7',shade=True,alpha=0.8);\nplt.subplot(3,5,9)\nsns.kdeplot(train['cont9'],color='#728C00',shade=True,alpha=0.8);\nplt.subplot(3,5,10)\nsns.kdeplot(train['cont10'],color='#254117',shade=True,alpha=0.8);\nplt.subplot(3,5,11)\nsns.kdeplot(train['cont11'],color='#6CC417',shade=True,alpha=0.8);\nplt.subplot(3,5,12)\nsns.kdeplot(train['cont12'],color='#CCFB5D',shade=True,alpha=0.8);\nplt.subplot(3,5,13)\nsns.kdeplot(train['cont13'],color='#6A287E',shade=True,alpha=0.8);\nplt.subplot(3,5,14)\nsns.kdeplot(train['cont14'],color='#E3319D',shade=True,alpha=0.8);\nplt.subplot(3,5,15)\nsns.kdeplot(train['target'],color='#E3319D',shade=True,alpha=0.8);","512e6b6d":"plot_distribution(train,'target','blue')","9ce5e864":"lesser,greater = train[train['target'] <= train['target'].median()],train[train['target'] >= train['target'].median()] ","91a6957e":"plt.figure(figsize=(30.8,15))\nplt.subplot(3,5,1)\nsns.kdeplot(lesser['cont1'],color='#4285F4',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont1'],color='#4F2083',shade=True,alpha=0.8);\nplt.subplot(3,5,2)\nsns.kdeplot(lesser['cont2'],color='#7D0852',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont2'],color='#43A45F',shade=True,alpha=0.8);\nplt.subplot(3,5,3)\nsns.kdeplot(lesser['cont3'],color='#350836',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont3'],color='#7FFFD4',shade=True,alpha=0.8);\nplt.subplot(3,5,4)\nsns.kdeplot(lesser['cont4'],color='#C08408',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont4'],color='#DA6DBD',shade=True,alpha=0.8);\nplt.subplot(3,5,5)\nsns.kdeplot(lesser['cont5'],color='#4285F4',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont5'],color='#FD376A',shade=True,alpha=0.8);\nplt.subplot(3,5,6)\nsns.kdeplot(lesser['cont6'],color='#F88017',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont6'],color='#508352',shade=True,alpha=0.8);\nplt.subplot(3,5,7)\nsns.kdeplot(lesser['cont7'],color='#4285F4',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont7'],color='#1FCDCB',shade=True,alpha=0.8);\nplt.subplot(3,5,8)\nsns.kdeplot(lesser['cont8'],color='#A3FC08',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont8'],color='#78C7C7',shade=True,alpha=0.8);\nplt.subplot(3,5,9)\nsns.kdeplot(lesser['cont9'],color='#EDEE2C',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont9'],color='#728C08',shade=True,alpha=0.8);\nplt.subplot(3,5,10.8)\nsns.kdeplot(lesser['cont10'],color='#254117',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont10'],color='#9717A9',shade=True,alpha=0.8);\nplt.subplot(3,5,11)\nsns.kdeplot(lesser['cont11'],color='#6CC417',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont11'],color='#872B93',shade=True,alpha=0.8);\nplt.subplot(3,5,12)\nsns.kdeplot(lesser['cont12'],color='#C13408',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont12'],color='#CCFB5D',shade=True,alpha=0.8);\nplt.subplot(3,5,13)\nsns.kdeplot(lesser['cont13'],color='#6A287E',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont13'],color='#CCFB5D',shade=True,alpha=0.8);\nplt.subplot(3,5,14)\nsns.kdeplot(lesser['cont14'],color='#E3319D',shade=True,alpha=0.2);\nsns.kdeplot(greater['cont14'],color='#203E8B',shade=True,alpha=0.8);\nplt.subplot(3,5,15)\nsns.kdeplot(lesser['target'],color='#D8AB59',shade=True,alpha=0.2);\nsns.kdeplot(greater['target'],color='#C61923',shade=True,alpha=0.8);","2ae0887b":"def rmse_score(yreal, yhat):\n    return sqrt(mean_squared_error(yreal, yhat))","b8c6644a":"from mlens.ensemble import SuperLearner\nfrom sklearn.datasets import make_regression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error,make_scorer\nfrom catboost import CatBoostRegressor\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom math import sqrt","c784913a":"train_ds = train.loc[:,features].values\ny_train = train.loc[:,target].values\n\nval_ds = test.loc[:,features].values","1a246478":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ntrain_ds = sc.fit_transform(train_ds)\nval_ds = sc.transform(val_ds)","5aa49a32":"X, X_val, y, y_val = train_test_split(train_ds, y_train, test_size=0.30)\nprint('Train', X.shape, y.shape, 'Test', X_val.shape, y_val.shape)","9ff67383":"from sklearn.model_selection import train_test_split,cross_val_score,RandomizedSearchCV,GridSearchCV\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report","657e6dff":"cbr = CatBoostRegressor(random_state=777)\n\nparams = {'iterations':[250,100,500,1000],\n          'learning_rate':[0.03,0.001,0.01,0.1,0.2], \n          'border_count':[32,5,10,20,50,100,200],\n          'use_best_model':[True],\n          'depth':[3,1,2,6,4,5,7,8,9,10],\n          'l2_leaf_reg': [1, 3, 5, 7, 9],\n          }\nscore_rmse = make_scorer(mean_squared_error,squared=True,greater_is_better=False)\ncbr_cv = RandomizedSearchCV(cbr, params,cv = 20, n_jobs=-1,scoring = score_rmse, verbose=2).fit(X, y,eval_set =(X_val,y_val))","a4601497":"cbr_cv.best_params_\nbest_model = cbr_cv.best_estimator_\n\nprint(best_model)\nprint(cbr_cv.best_params_)\nprint(cbr_cv.best_score_)","45f7681b":"cbr_pred = best_model.predict(X_val)\n\nprint(\"RMSE: \", rmse_score(y_val, cbr_pred))","7c05a941":"train_preds = best_model.predict(train_ds)","cd178154":"train['t_preds'] = train_preds","f1644609":"sns.jointplot(x = 'target', y = 't_preds',data = train,joint_kws={'alpha' : 0.3},color = 'goldenrod');\nplt.show()","3ad8b41c":"preds = best_model.predict(val_ds)","c0b0120e":"preds","31dc6d2c":"sub = pd.DataFrame({'id':test.id, 'target':preds})\nsub.to_csv('submission.csv',index=False)","afb96db5":"sub.head()","0a34e91d":"x = pd.read_csv('.\/submission.csv')\nx.head()","03baff09":"We can see some similarities between some of the features\ud83e\udd14\ud83e\udd14","0fba493b":"## Metrics \ud83d\udcd0","71a26fcb":"The performance of XGBoost and LGBM was the best of all.. so we use those two and adding catboost","1228344f":"# Importing libraries\ud83d\udcda","88df5a05":"# EDA \ud83d\udcca\ud83d\udcca","61ae8c75":"Refer to notebook version 2 and 5 for superlearner","1d1b230f":"We see 2 spikes from the median of the distribution. We can split the dataset from the medain. Suggested by [maunish](https:\/\/www.kaggle.com\/maunish).","48ad29cb":"## Pair Grid","b796d744":"cont 6 to cont 13 are somewhat related.. not much though","dc2a6f81":"### Test Data","217a5b8e":"## Feature Distibutions \ud83d\udcc8\ud83d\udcc8","cfe9d7aa":"### Train Data","11071609":"We see that there are no null values in train and test set","3afcc76f":"Upgarding to grid search for hyperparameter tuning","73052a1e":"# My Submission \ud83d\ude4b\u200d\u2642\ufe0f","ff4d071b":"# Work in Progress\ud83d\udea7\ud83d\udea7","a2509529":"# Super Learner and Grid Search \u2764\ufe0f\u200d\ud83d\udd25","7bb23eb6":"![rmse.JPG](attachment:rmse.JPG)","f1eda4d8":"##  Correlation Matrix \ud83c\udfb5\ud83c\udfb5","4a4ddc6a":"## Next up:- LGBM + Optuna","ff5f5456":"# Getting data \ud83d\udcbd"}}