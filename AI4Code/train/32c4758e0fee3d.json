{"cell_type":{"b820898b":"code","a4ef48e6":"code","84a16199":"code","903f3caa":"code","5aad113d":"code","0ef09b13":"code","953d0936":"code","f6330cee":"code","7dbb06b4":"code","09020fd1":"code","c3205876":"code","fef945c1":"code","ddba2da5":"code","85388133":"code","f3a0191e":"code","e71bff76":"code","50606229":"code","477d03b5":"code","bdd2e400":"code","98c058c9":"code","77568baf":"code","2d51d0f5":"code","4ee603ef":"code","704740e7":"code","15243d11":"code","99860fdc":"markdown","a03b08c9":"markdown","3f6ff5ae":"markdown","9a49deb4":"markdown"},"source":{"b820898b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\nplt.rcParams[\"figure.figsize\"] = (20,15)\nimport matplotlib.pylab as pl\nimport xgboost","a4ef48e6":"df = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv',index_col='id')\ntest = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv',index_col = 'id')","84a16199":"!pip install dabl","903f3caa":"import dabl\ndabl.plot(df,target_col='target')","5aad113d":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['target'] = le.fit_transform(df['target'])","0ef09b13":"X = df.drop(columns=['target'])\ny = df['target']","953d0936":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)\nd_train = xgboost.DMatrix(X_train, label=y_train)\nd_test = xgboost.DMatrix(X_test, label=y_test)","f6330cee":"import xgboost\nparams = {\n    \"eta\": 0.01,\n    \"subsample\": 0.5,\n     \"eval_metric\": \"logloss\"\n}\nmodel = xgboost.train(params, d_train, 5000, evals = [(d_test, \"test\")], verbose_eval=100, early_stopping_rounds=20)","7dbb06b4":"xgboost.plot_importance(model)\npl.title(\"xgboost.plot_importance(model)\")\npl.show()","09020fd1":"xgboost.plot_importance(model, importance_type=\"cover\")\npl.title('xgboost.plot_importance(model, importance_type=\"cover\")')\npl.show()","c3205876":"xgboost.plot_importance(model, importance_type=\"gain\")\npl.title('xgboost.plot_importance(model, importance_type=\"gain\")')\npl.show()","fef945c1":"import shap\nexplainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(X)","ddba2da5":"shap.initjs()\n\nshap.force_plot(explainer.expected_value, shap_values[0,:], X.iloc[0,:])\n","85388133":"shap.force_plot(explainer.expected_value, shap_values[:1000,:], X.iloc[:1000,:])\n","f3a0191e":"shap.summary_plot(shap_values, X, plot_type=\"bar\")\n","e71bff76":"shap.summary_plot(shap_values, X)\n","50606229":"import eli5\neli5.show_weights(model) # clf is the model fitted \n","477d03b5":"eli5.explain_prediction(model, X_train.iloc[1], feature_names = list(X.columns)) \n","bdd2e400":"import lightgbm as lgb\nd_train = lgb.Dataset(X_train, label=y_train)\nd_test = lgb.Dataset(X_test, label=y_test)","98c058c9":"params = {\n    \"max_bin\": 512,\n    \"learning_rate\": 0.05,\n    \"boosting_type\": \"gbdt\",\n    \"objective\": \"binary\",\n    \"metric\": \"binary_logloss\",\n    \"num_leaves\": 10,\n    \"verbose\": -1,\n    \"min_data\": 100,\n    \"boost_from_average\": True\n}\n\nmodel = lgb.train(params,d_train, 10000, valid_sets=[d_test], early_stopping_rounds=50, verbose_eval=1000)\n","77568baf":"explainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(X)","2d51d0f5":"shap.force_plot(explainer.expected_value[1], shap_values[1][0,:], X_train.iloc[0,:])\n","4ee603ef":"shap.force_plot(explainer.expected_value[1], shap_values[1][:1000,:], X_train.iloc[:1000,:])\n","704740e7":"shap.summary_plot(shap_values, X)\n","15243d11":"for name in X_train.columns:\n    shap.dependence_plot(name, shap_values[1], X, display_features=X)","99860fdc":"# EDA using DABL","a03b08c9":"#  ELI5 - \u2018Explain like I am a 5-year old\u2019","3f6ff5ae":"# LightGBM and SHAP","9a49deb4":"# XGBoost and SHAP"}}