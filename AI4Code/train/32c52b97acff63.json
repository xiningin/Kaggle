{"cell_type":{"a9d9acfe":"code","db9d88fd":"code","8977960a":"code","4d34c4f1":"code","c9323347":"code","62d9b5a1":"code","6160ff29":"code","fceb25e9":"code","2e4a97b9":"code","45634c20":"code","96aefe42":"code","d434a22f":"code","ea51fc3a":"code","64f0a10b":"code","108eb0c5":"code","d630b10d":"code","b9407f08":"code","114abf25":"code","bed2417d":"code","9b10f6b2":"code","f96424a9":"markdown","3c19678e":"markdown","eb474e5b":"markdown","0ffed0d5":"markdown","5fa96e71":"markdown","086a2f09":"markdown","ad856858":"markdown","4dcf7f59":"markdown","5278f892":"markdown","3a40f6d0":"markdown"},"source":{"a9d9acfe":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","db9d88fd":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","8977960a":"train.head(5)","4d34c4f1":"y_train = train['label'].values","c9323347":"x_train = train.iloc[:,1:].values","62d9b5a1":"x_train.shape","6160ff29":"test.head(5)","fceb25e9":"x_test = test.iloc[:,:].values","2e4a97b9":"x_test.shape","45634c20":"import numpy as np\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","96aefe42":"# Model \/ data parameters\nnum_classes = 10\ninput_shape = (28, 28, 1)\n\n\n# Scale images to the [0, 1] range\nx_train = x_train.astype(\"float32\") \/ 255\nx_test = x_test.astype(\"float32\") \/ 255\n# Make sure images have shape (28, 28, 1)\nx_train = x_train.reshape(-1,28,28,1)\nx_test = x_test.reshape(-1,28,28,1)\nprint(\"x_train shape:\", x_train.shape)\nprint(\"x_test shape:\", x_test.shape)\nprint(x_train.shape[0], \"train samples\")\nprint(x_test.shape[0], \"test samples\")\n\n\n# convert class vectors to binary class matrices\ny_train = keras.utils.to_categorical(y_train, num_classes)","d434a22f":"model = keras.Sequential(\n    [\n        keras.Input(shape=input_shape),\n        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Flatten(),\n        layers.Dropout(0.5),\n        layers.Dense(num_classes, activation=\"softmax\"),\n    ]\n)\n\nmodel.summary()","ea51fc3a":"batch_size = 128\nepochs = 30\n\nmodel.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n\nmodel.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)","64f0a10b":"y_test = model.predict(x_test)","108eb0c5":"y = [np.argmax(i) for i in y_test]","d630b10d":"y = np.array(y)","b9407f08":"data = {'ImageId':[i+1 for i in range(len(y))],'Label':y}","114abf25":"submission = pd.DataFrame(data)","bed2417d":"submission.head(5)","9b10f6b2":"submission.to_csv(\"submission.csv\", index = False)","f96424a9":"# Write to csv for submission","3c19678e":"# Write data to pandas dataframe","eb474e5b":"# Read train and test data","0ffed0d5":"# Create traing and testing data for keras","5fa96e71":"# Import Libraries","086a2f09":"# Build model","ad856858":"# Import keras ","4dcf7f59":"# Make predictions","5278f892":"# Train the model","3a40f6d0":"# Reshape images"}}