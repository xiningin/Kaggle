{"cell_type":{"2ec8afcd":"code","5051ae3b":"code","503ad04a":"code","ac90513c":"code","1ab3c2c0":"code","a9189841":"code","69ab31eb":"code","27966c1a":"code","cf15dadf":"code","97e02a32":"code","d8142f6d":"code","1b1f1e35":"code","2c09fbb3":"code","a25bdb5a":"code","cb347848":"code","7d59f961":"code","d02fe70c":"code","7b03ec0e":"markdown","99c85119":"markdown","c6f504a3":"markdown","d57a1b3e":"markdown","7fdffc9c":"markdown","617d3fff":"markdown","8292bc42":"markdown","6ce9bb5c":"markdown","149f4242":"markdown","7af0e445":"markdown","8a2e8bf6":"markdown","0576566c":"markdown","617acfed":"markdown","a2aef5d1":"markdown","f2d53213":"markdown","7392cdb9":"markdown","ab17a65c":"markdown","cf5724ef":"markdown","73d6c840":"markdown","a18f39c3":"markdown","572c6cb0":"markdown","b9143d14":"markdown","ed90e9a0":"markdown","4a00ce17":"markdown","236cb51d":"markdown","99bbc57c":"markdown","d7db175e":"markdown","ff8e1ddd":"markdown","72d74854":"markdown","82f95852":"markdown","1ac657cb":"markdown","f4f03bdc":"markdown","a995facb":"markdown","cf99c785":"markdown","c6db72e0":"markdown","2c0b430f":"markdown","3807ab85":"markdown","a92331dd":"markdown"},"source":{"2ec8afcd":"!pip install -U pandas-profiling==2.9.0","5051ae3b":"import numpy as np\nimport pandas as pd\nimport pandas_profiling as pp\nfrom pandas_profiling import ProfileReport","503ad04a":"pp.__version__","ac90513c":"traindf = pd.read_csv('..\/input\/titanic\/train.csv').set_index('PassengerId')\ntestdf = pd.read_csv('..\/input\/titanic\/test.csv').set_index('PassengerId')","1ab3c2c0":"traindf.head(3)","a9189841":"testdf.head(3)","69ab31eb":"# Thanks to: \n# https:\/\/www.kaggle.com\/mauricef\/titanic\n# https:\/\/www.kaggle.com\/vbmokin\/titanic-top-3-one-line-of-the-prediction-code\n\ndf = pd.concat([traindf, testdf], axis=0, sort=False)\ndf['Title'] = df.Name.str.split(',').str[1].str.split('.').str[0].str.strip()\ndf['IsWomanOrBoy'] = ((df.Title == 'Master') | (df.Sex == 'female'))\ndf['LastName'] = df.Name.str.split(',').str[0]\nfamily = df.groupby(df.LastName).Survived\ndf['WomanOrBoyCount'] = family.transform(lambda s: s[df.IsWomanOrBoy].fillna(0).count())\ndf['WomanOrBoyCount'] = df.mask(df.IsWomanOrBoy, df.WomanOrBoyCount - 1, axis=0)\ndf['FamilySurvivedCount'] = family.transform(lambda s: s[df.IsWomanOrBoy].fillna(0).sum())\ndf['FamilySurvivedCount'] = df.mask(df.IsWomanOrBoy, df.FamilySurvivedCount - \\\n                                    df.Survived.fillna(0), axis=0)\ndf['WomanOrBoySurvived'] = df.FamilySurvivedCount \/ df.WomanOrBoyCount.replace(0, np.nan)\ndf.WomanOrBoyCount = df.WomanOrBoyCount.replace(np.nan, 0)\ndf['Alone'] = (df.WomanOrBoyCount == 0)\n\n#Thanks to: https:\/\/www.kaggle.com\/kpacocha\/top-6-titanic-machine-learning-from-disaster\n#\"Title\" improvement\ndf['Title'] = df['Title'].replace('Ms','Miss')\ndf['Title'] = df['Title'].replace('Mlle','Miss')\ndf['Title'] = df['Title'].replace('Mme','Mrs')\n# Embarked\ndf['Embarked'] = df['Embarked'].fillna('S')\n\n# Thanks to https:\/\/www.kaggle.com\/erinsweet\/simpledetect\n# Fare\nmed_fare = df.groupby(['Pclass', 'Parch', 'SibSp']).Fare.median()[3][0][0]\ndf['Fare'] = df['Fare'].fillna(med_fare)\n#Age\ndf['Age'] = df.groupby(['Sex', 'Pclass', 'Title'])['Age'].apply(lambda x: x.fillna(x.median()))\n# Family_Size\ndf['Family_Size'] = df['SibSp'] + df['Parch'] + 1\n\n#Thanks to https:\/\/www.kaggle.com\/kpacocha\/top-6-titanic-machine-learning-from-disaster\n# Cabin, Deck\n#df['Deck'] = df['Cabin'].apply(lambda s: s[0] if pd.notnull(s) else 'M')\n#df.loc[(df['Deck'] == 'T'), 'Deck'] = 'A'\n\ndf.WomanOrBoySurvived = df.WomanOrBoySurvived.fillna(0)\ndf.WomanOrBoyCount = df.WomanOrBoyCount.fillna(0)\ndf.FamilySurvivedCount = df.FamilySurvivedCount.fillna(0)\ndf.Alone = df.Alone.fillna(0)","27966c1a":"train_x, test_x = df.loc[traindf.index], df.loc[testdf.index]\ntest_x = test_x.drop('Survived', axis=1)","cf15dadf":"train_x.head(3)","97e02a32":"test_x.head(3)","d8142f6d":"train_x.describe()","1b1f1e35":"test_x.describe()","2c09fbb3":"ProfileReport(train_x, title='Pandas Profiling Report for training dataset', html={'style':{'full_width':True}})","a25bdb5a":"# %%time\n# profile = train_x.profile_report(title='Pandas Profiling Report for training dataset')\n# profile.to_file(output_file=\"train_profile.html\")","cb347848":"%%time\nprofile = ProfileReport(train_x, title='Pandas Profiling Report for training dataset', minimal=True)\nprofile.to_file(output_file=\"train_short_profile.html\")","7d59f961":"ProfileReport(test_x, title='Pandas Profiling Report for test dataset')","d02fe70c":"# The one line of the code for prediction : LB = 0.80382 (Titanic Top 6%) \ntest_x = pd.concat([test_x.WomanOrBoySurvived.fillna(0), test_x.Alone, \\\n                    test_x.Sex.replace({'male': 0, 'female': 1})], axis=1)\npd.DataFrame({'Survived': (((test_x.WomanOrBoySurvived <= 0.2381) & (test_x.Sex > 0.5) & (test_x.Alone > 0.5)) | \\\n                        ((test_x.WomanOrBoySurvived > 0.2381) & \\\n                       ~((test_x.WomanOrBoySurvived > 0.55) & (test_x.WomanOrBoySurvived <= 0.633)))).astype(int)}, index=testdf.index).reset_index().to_csv('submission.csv', index=False)","7b03ec0e":"### 1.1 General information <a class=\"anchor\" id=\"1.1\"><\/a>","99c85119":"* df : DataFrame\n        Data to be analyzed\n* bins : int\n        Number of bins in histogram.\n        The default is 10.\n* check_correlation : boolean\n        Whether or not to check correlation.\n        It's `True` by default.\n* vars:\n    num:\n        quantiles:\n              - 0.05\n              - 0.25\n              - 0.5\n              - 0.75\n              - 0.95\n        skewness_threshold: 20\n        low_categorical_threshold: 5\n* Set to zero to disable\n        chi_squared_threshold: 0.999\n    cat:\n        check_composition: True\n        cardinality_threshold: 50\n        n_obs: 5\n* Set to zero to disable\n        chi_squared_threshold: 0.999\n    bool:\n        n_obs: 3","c6f504a3":"Your votes, comments and feedback are most welcome.","d57a1b3e":"Amazing Automatic Exploratory Data Analysis (EDA) with **Pandas Profiling**\n\nThis notebook shows the main Pandas Profiling capabilities on the example of the \"[Titanic: Machine Learning from Disaster](https:\/\/www.kaggle.com\/c\/titanic)\" competition.\n\nThe analysis is carried out taking into account the result of features engineering (FE).\n\nAt the end is given a simple example of a solution from other my notebook.","7fdffc9c":"More settings can be found in the configuration files:\n* default configuration file, \n* minimal configuration file,\n* dark themed configuration file.","617d3fff":"## 3. Download datasets <a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","8292bc42":"[Go to Top](#0)","6ce9bb5c":"## 1. Introduction to Pandas Profiling <a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","149f4242":"## A new mode for Big data (large dataset)","7af0e445":"* get_description\n        Return the description (a raw statistical summary) of the dataset.\n* get_rejected_variables\n        Return the list of rejected variable or an empty list \n        if there is no rejected variables.\n* to_file\n        Write the report to a file.\n* to_html\n        Return the report as an HTML string.","8a2e8bf6":"## 2. Import libraries <a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","0576566c":"## 7. Conclusion and prediction <a class=\"anchor\" id=\"7\"><\/a>\n\n[Back to Table of Contents](#0.1)\n\n\n- We can see that `Pandas Profiling` is a nice tool which summarizes the dataset information in a concise way.\n\n- It generates a nice html file which gives us the `overview` of `variables` alongwith their `coorelations` and `missing values` and `sample`.","617acfed":"I hope you find this kernel useful and enjoyable.","a2aef5d1":"![image.png](attachment:image.png)","f2d53213":"### 6.1 EDA of training dataset <a class=\"anchor\" id=\"6.1\"><\/a>\n\n[Back to Table of Contents](#0.1)","7392cdb9":"### 6.2 EDA of test dataset <a class=\"anchor\" id=\"6.2\"><\/a>\n\n[Back to Table of Contents](#0.1)","ab17a65c":"Thanks to:\n* https:\/\/www.kaggle.com\/prashant111\/eda-is-fun \n* https:\/\/www.kaggle.com\/vbmokin\/three-lines-of-code-for-titanic-top-15\n* https:\/\/www.kaggle.com\/vbmokin\/three-lines-of-code-for-titanic-top-20\n* https:\/\/www.kaggle.com\/mauricef\/titanic\n* https:\/\/www.kaggle.com\/kpacocha\/top-6-titanic-machine-learning-from-disaster\n* https:\/\/www.kaggle.com\/erinsweet\/simpledetect\n* https:\/\/www.kaggle.com\/tunguz\/covid-19-eda-week-5\n* [Titanic - Top score : one line of the prediction](https:\/\/www.kaggle.com\/vbmokin\/titanic-top-score-one-line-of-the-prediction)","cf5724ef":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/6e\/St%C3%B6wer_Titanic.jpg)","73d6c840":"#### Based on the EDA results, you can form a solution, for example, you can apply the following rule, derived from the Decision Tree Classifier in the notebook [Titanic - Top score : one line of the prediction](https:\/\/www.kaggle.com\/vbmokin\/titanic-top-score-one-line-of-the-prediction):","a18f39c3":"Version 2.x introduces **minimal mode**. This is a default configuration that disables expensive computations (such as correlations and dynamic binning). Use the following syntax:\n\n      profile = ProfileReport(large_dataset, minimal=True)\n      profile.to_file(output_file=\"output.html\")","572c6cb0":"#### Large datasets","b9143d14":"### 1.3 Methods <a class=\"anchor\" id=\"1.3\"><\/a>\n\n[Back to Table of Contents](#0.1)\n\nSource: **pandas_profiling\/__init__.py**   ","ed90e9a0":"**The results of this tool have recently been updated.**","4a00ce17":"### 1.2 Attributes <a class=\"anchor\" id=\"1.2\"><\/a>\n\n[Back to Table of Contents](#0.1)\n\nSource: **pandas_profiling\/__init__.py**   ","236cb51d":"## 6. EDA with Pandas Profiling <a class=\"anchor\" id=\"6\"><\/a>\n\n[Back to Table of Contents](#0.1)","99bbc57c":"Example:\n\n**profile = df.profile_report(title='Pandas Profiling Report', plot={'histogram': {'bins': 8}})**","d7db175e":"<a class=\"anchor\" id=\"0\"><\/a>\n\n# Automatic EDA with Pandas Profiling","ff8e1ddd":"### 1.4 Chengelog 2.9.0 <a class=\"anchor\" id=\"1.4\"><\/a>\n\n[Back to Table of Contents](#0.1)\n\nSource: **https:\/\/pandas-profiling.github.io\/pandas-profiling\/docs\/master\/rtd\/pages\/changelog.html#changelog-v2-9-0**","72d74854":"## This notebook used version of the library Pandas-profiling 2.9.0 (Sep 2020)\nhttps:\/\/github.com\/pandas-profiling\/pandas-profiling\/releases","82f95852":"The first thing we do after importing a dataset is to get an insight about the dataset. This is called exploratory data analysis or EDA in short. We use Pandas for EDA purposes.\n\n\nPandas is the most widely used Python library which is used to get insights about the data. It is used for loading and processing data in Python. It has great set of tools to perform various statistical operations on the data. I have listed below some basic and common commands along with their description which are used to get insights about the data.\n\n- **head() method** - view the top 5 rows of the dataset.\n\n- **tail() method** - view the bottom 5 rows of the dataset.\n\n- **info() method** - view concise summary of dataset.\n\n- **describe() method** - view statistical properties of dataset.\n\n\nThere are some basic dataframe attributes which are as follows -\n\n\n- **df.shape** - gives the dimensions of the dataset.\n\n- **df.dtypes** - gives the data types of the columns.\n\n- **df.columns** - view the column names of the dataset.\n\n\nBut these methods and attributes are very basic for EDA purposes.\n\n\nThere is an alternative, called **Pandas profiling**. This library generates a complete report for your dataset, which includes:\n\n- Basic data type information (which columns contain what).\n\n- Descriptive statistics (mean, average, etc.)\n\n- Quantile statistics (tells you about how your data is distributed)\n\n- Histograms for your data (again, for visualizing distributions)\n\n- Correlations (Let's you see what's related)\n\n\nThis tool outputs a bunch of HTML file, containing all the information mentioned above. Instead of just giving us a single output, pandas-profiling tool provides a broadly structured HTML file containing all the relevant information that a typical EDA of all the basic commands and attributes provide. So, it saves a lot of time. Now we can perform EDA with just one line of code (as explained below).\n\n\nThis Pandas Profiling tool can be download here: -\n\nhttps:\/\/github.com\/pandas-profiling\/pandas-profiling\n\n\nWe will apply pandas-profiling to the Titanic data set because it has variety of data types and it contains missing values. This tool is particularly useful when the dataset is not cleaned and it requires individual exploration of the variables. ","1ac657cb":"# [Titanic: Machine Learning from Disaster](https:\/\/www.kaggle.com\/c\/titanic)","f4f03bdc":"## 4. Features engineering (FE) <a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","a995facb":"See change log of **Pandas Profiling** in https:\/\/pandas-profiling.github.io\/pandas-profiling\/docs\/master\/rtd\/pages\/changelog.html","cf99c785":"## In Kaggle switch \"Environment\" to \"Always use latest environment\"","c6db72e0":"## 5. EDA with describe <a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","2c0b430f":"Different options","3807ab85":"<a class=\"anchor\" id=\"0.1\"><\/a>\n\n## Table of Contents\n\n1. [Introduction to Pandas Profiling](#1)\n    -  [General information](#1.1)\n    -  [Attributes](#1.2)\n    -  [Methods](#1.3)\n    -  [Chengelog 2.9.0](#1.4)\n1. [Import libraries](#2)\n1. [Download datasets](#3)\n1. [Features engineering (FE)](#4)\n1. [EDA with describe](#5)\n1. [EDA with Pandas Profiling](#6)\n    -  [EDA of training dataset](#6.1)\n    -  [EDA of test dataset](#6.2)\n1. [Conclusion and prediction](#7)\n","a92331dd":"* Description per variable now possible (see the metadata page) or the Census example.\n* Fixed bug for small DataFrames with unused categories.\n* Fixed bug where parallelization would have side effects.\n* Removed warning where colormap was modified in place.\n* Distinguish between unique and distinct correctly."}}