{"cell_type":{"194d7c95":"code","20f15419":"code","17bd1417":"code","0a289365":"code","9bdd54ff":"code","a2a7cfd9":"code","5e802b47":"code","8882b2f5":"code","b4615c5b":"code","f16985c2":"code","51716949":"code","0c98ef2a":"code","091af787":"code","1778b10d":"code","929991be":"code","b8cfa083":"code","0d26db4c":"code","d4f82f10":"code","b27bf56b":"code","1af3ec2b":"code","feaa42bf":"code","07460490":"code","af51bbb6":"code","547d653c":"code","cbda697f":"code","fddaacff":"code","c547b163":"code","d06672f9":"code","6262d4dd":"code","d76bd108":"code","0a0c7979":"code","9a099103":"code","512aa34b":"code","09634a5f":"code","017bfb58":"code","201955ef":"code","ee2673b6":"code","8e1307de":"code","958df519":"code","26f8161f":"code","c5398aaa":"markdown","23b75274":"markdown","a5710d7d":"markdown","5b6f5e26":"markdown","ca5b6908":"markdown","11286a0c":"markdown","065f9114":"markdown","1959f507":"markdown"},"source":{"194d7c95":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","20f15419":"my_data = pd.read_csv('..\/input\/diabetes-data-set\/diabetes.csv')","17bd1417":"my_frame = pd.DataFrame(my_data)\nmy_frame.head()","0a289365":"my_frame.shape","9bdd54ff":"my_frame.info()","a2a7cfd9":"my_frame.describe()","5e802b47":"my_frame.isnull().sum()","8882b2f5":"my_frame.dtypes","b4615c5b":"my_frame.columns.unique()","f16985c2":"fig = plt.figure(figsize = (12, 8))\nsns.heatmap(my_frame.isnull())","51716949":"fig = plt.figure(figsize = (12, 8))\nplt.hist(my_frame['Pregnancies'], bins = 5, color = 'green')\nplt.show()","0c98ef2a":"fig = plt.figure(figsize = (12, 8))\nplt.hist(my_frame['Glucose'], bins = 5, color = 'green')\nplt.show()","091af787":"fig = plt.figure(figsize = (12, 8))\nplt.hist(my_frame['BloodPressure'], bins = 5, color = 'green')\nplt.show()","1778b10d":"fig = plt.figure(figsize = (12, 8))\nplt.hist(my_frame['Age'], bins = 5, color = 'green')\nplt.show()","929991be":"fig = plt.figure(figsize = (12, 8))\nplt.hist(my_frame['Outcome'], bins = 5, color = 'green')\nplt.show()","b8cfa083":"fig = plt.figure(figsize = (12, 8))\nplt.scatter(my_frame['Pregnancies'], my_frame['Age'], color = 'purple')\nplt.xlabel('Pregnent Woman')\nplt.ylabel('Age')\nplt.show()","0d26db4c":"fig = plt.figure(figsize = (12, 8))\nplt.scatter(my_frame['SkinThickness'], my_frame['Age'], color = 'purple')\nplt.xlabel('Skin Thickness')\nplt.ylabel('Age')\nplt.show()","d4f82f10":"fig = plt.figure(figsize = (12, 8))\nplt.scatter(my_frame['Glucose'], my_frame['Age'], color = 'purple')\nplt.xlabel('Glucose')\nplt.ylabel('Age')\nplt.show()","b27bf56b":"fig = plt.figure(figsize = (12, 8))\nplt.scatter(my_frame['BloodPressure'], my_frame['Age'], color = 'purple')\nplt.xlabel('Blood Pressure')\nplt.ylabel('Age')\nplt.show()","1af3ec2b":"x = my_frame.drop('Outcome', axis = 1)\ny = my_frame['Outcome']","feaa42bf":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 35)","07460490":"from sklearn.linear_model import LinearRegression","af51bbb6":"linear_reg = LinearRegression()","547d653c":"linear_reg.fit(x_train, y_train)","cbda697f":"lin_y_pred = linear_reg.predict(x_test)","fddaacff":"lr_data = pd.DataFrame({'Actual' : y_test, 'Predicted' : lin_y_pred})\nlr_data","c547b163":"lin_accuracy = linear_reg.score(x_test, y_test)\nprint('Linear Regression Model:', lin_accuracy * 100)","d06672f9":"from sklearn.neighbors import KNeighborsClassifier","6262d4dd":"knn_model = KNeighborsClassifier(n_neighbors = 7)","d76bd108":"knn_model.fit(x_train, y_train)","0a0c7979":"knn_y_pred = knn_model.predict(x_test)","9a099103":"knn_data = pd.DataFrame({'Actual' : y_test, 'Predicted' : knn_y_pred})\nknn_data","512aa34b":"knn_accuracy = knn_model.score(x_test, y_test)\nprint('KNN Model:', knn_accuracy * 100)","09634a5f":"from sklearn.tree import DecisionTreeClassifier","017bfb58":"tree_model = DecisionTreeClassifier()","201955ef":"tree_model.fit(x_train, y_train)","ee2673b6":"tree_y_pred = tree_model.predict(x_test)","8e1307de":"tree_data = pd.DataFrame({'Actual' : y_test, 'Predicted' : tree_y_pred})\ntree_data","958df519":"tree_accuracy = tree_model.score(x_test, y_test)\nprint('Decision Tree Accuracy:', tree_accuracy * 100)","26f8161f":"fig = plt.figure(figsize = (12, 8))\nplt.scatter(y_test, lin_y_pred, color = 'red')\nplt.scatter(y_test, knn_y_pred, color = 'green')\nplt.scatter(y_test, tree_y_pred, color = 'blue')\n\nplt.show()","c5398aaa":"## Apply Linear Regression on \u201cOutcome\u201d column of the dataset. Select the appropriate features","23b75274":"## Import Libraries","a5710d7d":"## Apply KNN classification on \u201cOutcome\u201d column of the dataset. Select the appropriate features","5b6f5e26":"## Split the dataset using \u201ctrain-test-split\u201d function","ca5b6908":"## Exploratory Data Analysis","11286a0c":"## Apply Decision Tree Classifier on \u201cOutcome\u201d column of the dataset. Select the appropriate features","065f9114":"# THE END..!!","1959f507":"## Read dataset from csv file"}}