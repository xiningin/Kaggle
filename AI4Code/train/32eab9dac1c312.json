{"cell_type":{"9c3f9045":"code","d45b8d32":"code","42f88d99":"code","efa080df":"code","4d4fe727":"code","7be40521":"code","6fbf6e72":"code","16dcb952":"code","1b9357bd":"code","fd712424":"code","08a3f7e0":"code","e663dfc7":"code","9108561b":"code","7317840b":"code","fbd5f669":"code","edeb561c":"code","09a3a8a2":"code","c6f043d6":"code","6710a7cd":"code","7d642ef1":"code","63088b1b":"code","5ad9b83e":"code","1956eb86":"code","8b42695a":"code","fa290384":"code","e712b0e2":"code","8733962c":"code","2dbc6803":"code","6b62bfb8":"code","5a685026":"code","6f72763b":"markdown","a73ad140":"markdown","240f0848":"markdown","918f15bb":"markdown","1caafd5b":"markdown","c55cc744":"markdown","9b5fb032":"markdown","afcea07b":"markdown","7161e1bc":"markdown","c062c6f2":"markdown","340d737a":"markdown","8f392023":"markdown","50d667f6":"markdown","2246aaeb":"markdown","527bf2df":"markdown","e8077d6e":"markdown","206aa2e5":"markdown","a2e439d0":"markdown","773f87bd":"markdown","c094fb73":"markdown","cf73322a":"markdown","e46c7e2d":"markdown","12b3d687":"markdown","49f34077":"markdown","be576b63":"markdown","a39146cc":"markdown","c08b6e64":"markdown","5a2b1c18":"markdown","bbcadf75":"markdown","56b891af":"markdown","3663d646":"markdown"},"source":{"9c3f9045":"import numpy  as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rcParams.update({'font.size': 18})\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","d45b8d32":"train_data = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv',index_col=0)\ntest_data  = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv', index_col=0)\nsample     = pd.read_csv('..\/input\/ventilator-pressure-prediction\/sample_submission.csv')","42f88d99":"train_data","efa080df":"train_data.nunique().to_frame()","4d4fe727":"train_data.groupby(\"breath_id\")[\"time_step\"].count().unique().item()","7be40521":"test_data.groupby(\"breath_id\")[\"time_step\"].count().unique().item()   ","6fbf6e72":"train_data.isnull().sum(axis = 0).to_frame()","16dcb952":"train_data.time_step.max()","1b9357bd":"train_data.query('u_out == 0').time_step.max()","fd712424":"breath_one = train_data.query('breath_id == 1').reset_index(drop = True)\nbreath_one","08a3f7e0":"breath_one.nunique().to_frame()","e663dfc7":"breath_one.plot(x=\"time_step\", y=\"u_in\", kind='line',figsize=(12,3), lw=2, title=\"u_in\");\nbreath_one.plot(x=\"time_step\", y=\"u_out\", kind='line',figsize=(12,3), lw=2, title=\"u_out\");\nbreath_one.plot(x=\"time_step\", y=\"pressure\", kind='line',figsize=(12,3), lw=2, title=\"pressure\");","9108561b":"train_data.R.value_counts().to_frame()","7317840b":"train_data.C.value_counts().to_frame()","fbd5f669":"train_data.u_out.value_counts().to_frame()","edeb561c":"train_data.pressure.max()","09a3a8a2":"plt.figure(figsize = (12,5))\nax = sns.distplot(train_data['pressure'], \n             bins=120, \n             kde_kws={\"clip\":(0,40)}, \n             hist_kws={\"range\":(0,40)},\n             color='darkcyan', \n             kde=False);\nvalues = np.array([rec.get_height() for rec in ax.patches])\nnorm = plt.Normalize(values.min(), values.max())\ncolors = plt.cm.jet(norm(values))\nfor rec, col in zip(ax.patches, colors):\n    rec.set_color(col)\nplt.xlabel(\"Histogram of pressures\", size=14)\nax.set(yticklabels=[])\nplt.show();","c6f043d6":"train_data.pressure.median()","6710a7cd":"u_out_is_zero = train_data.query(\"u_out == 0\").reset_index(drop = True)\nplt.figure(figsize = (12,5))\nax = sns.distplot(u_out_is_zero['pressure'], \n             bins=120, \n             kde_kws={\"clip\":(0,50)}, \n             hist_kws={\"range\":(0,50)},\n             color='darkcyan', \n             kde=False);\nvalues = np.array([rec.get_height() for rec in ax.patches])\nnorm = plt.Normalize(values.min(), values.max())\ncolors = plt.cm.jet(norm(values))\nfor rec, col in zip(ax.patches, colors):\n    rec.set_color(col)\nplt.xlabel(\"Histogram of pressures (u_out=0)\", size=14)\nax.set(yticklabels=[])\nplt.show();","7d642ef1":"u_out_is_zero.pressure.median()","63088b1b":"breath_2 = train_data.query('breath_id == 2').reset_index(drop = True)\nbreath_3 = train_data.query('breath_id == 3').reset_index(drop = True)\nbreath_4 = train_data.query('breath_id == 4').reset_index(drop = True)\nbreath_5 = train_data.query('breath_id == 5').reset_index(drop = True)\nbreath_17 = train_data.query('breath_id == 17').reset_index(drop = True)\nbreath_18 = train_data.query('breath_id == 18').reset_index(drop = True)\nbreath_21 = train_data.query('breath_id == 21').reset_index(drop = True)\nbreath_39 = train_data.query('breath_id == 39').reset_index(drop = True)\n\nfig, axes = plt.subplots(3,3,figsize=(15,15))\nsns.lineplot(data=breath_39, x=\"time_step\", y=\"pressure\", lw=2, ax=axes[0,0])\naxes[0,0].set_title (\"R=5, C=10\", fontsize=18)\naxes[0,0].set(xlabel='')\n#axes[0,0].set(ylim=(0, None))\nsns.lineplot(data=breath_21, x=\"time_step\", y=\"pressure\",  lw=2, ax=axes[0,1])\naxes[0,1].set_title (\"R=20, C=10\", fontsize=18)\naxes[0,1].set(xlabel='')\naxes[0,1].set(ylabel='')\n#axes[0,1].set(ylim=(0, None))\nsns.lineplot(data=breath_18, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[0,2])\naxes[0,2].set_title (\"R=50, C=10\", fontsize=18)\naxes[0,2].set(xlabel='')\naxes[0,2].set(ylabel='')\n#axes[0,2].set(ylim=(0, None))\nsns.lineplot(data=breath_17, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[1,0])\naxes[1,0].set_title (\"R=5, C=20\", fontsize=18)\naxes[1,0].set(xlabel='')\n#axes[1,0].set(ylim=(0, None))\nsns.lineplot(data=breath_2, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[1,1])\naxes[1,1].set_title (\"R=20, C=20\", fontsize=18)\naxes[1,1].set(xlabel='')\naxes[1,1].set(ylabel='')\n#axes[1,1].set(ylim=(0, None))\nsns.lineplot(data=breath_3, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[1,2])\naxes[1,2].set_title (\"R=50, C=20\", fontsize=18)\naxes[1,2].set(xlabel='')\naxes[1,2].set(ylabel='')\n#axes[1,2].set(ylim=(0, None))\nsns.lineplot(data=breath_5, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[2,0])\naxes[2,0].set_title (\"R=5, C=50\", fontsize=18)\n#axes[2,0].set(ylim=(0, None))\nsns.lineplot(data=breath_one, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[2,1])\naxes[2,1].set_title (\"R=20, C=50\", fontsize=18)\naxes[2,1].set(ylabel='')\n#axes[2,1].set(ylim=(0, None))\nsns.lineplot(data=breath_4, x=\"time_step\", y=\"pressure\",  lw=2,ax=axes[2,2])\naxes[2,2].set_title (\"R=50, C=50\", fontsize=18)\naxes[2,2].set(ylabel='')\n#axes[2,2].set(ylim=(0, None))\n\nplt.show();","5ad9b83e":"zero_time = train_data.query(\"time_step < 0.000001 & u_in < 0.000001\").reset_index(drop = True)\nzero_time_5_10  = zero_time.query(\"R ==  5 & C == 10\").reset_index(drop = True)\nzero_time_5_20  = zero_time.query(\"R ==  5 & C == 20\").reset_index(drop = True)\nzero_time_5_50  = zero_time.query(\"R ==  5 & C == 50\").reset_index(drop = True)\nzero_time_20_10 = zero_time.query(\"R == 20 & C == 10\").reset_index(drop = True)\nzero_time_20_20 = zero_time.query(\"R == 20 & C == 20\").reset_index(drop = True)\nzero_time_20_50 = zero_time.query(\"R == 20 & C == 50\").reset_index(drop = True)\nzero_time_50_10 = zero_time.query(\"R == 50 & C == 10\").reset_index(drop = True)\nzero_time_50_20 = zero_time.query(\"R == 50 & C == 20\").reset_index(drop = True)\nzero_time_50_50 = zero_time.query(\"R == 50 & C == 50\").reset_index(drop = True)\n\nfig, axes = plt.subplots(9,1,figsize=(12,15))\nsns.violinplot(x=zero_time_5_10[\"pressure\"], linewidth=2, ax=axes[0], color=\"indianred\")\naxes[0].set_title (\"R=5, C=10\", fontsize=14)\naxes[0].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_5_20[\"pressure\"], linewidth=2, ax=axes[1], color=\"firebrick\")\naxes[1].set_title (\"R=5, C=20\", fontsize=14)\naxes[1].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_5_50[\"pressure\"], linewidth=2, ax=axes[2], color=\"darkred\" )\naxes[2].set_title (\"R=5, C=50\", fontsize=14)\naxes[2].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_20_10[\"pressure\"], linewidth=2, ax=axes[3], color=\"greenyellow\")\naxes[3].set_title (\"R=20, C=10\", fontsize=14)\naxes[3].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_20_20[\"pressure\"], linewidth=2, ax=axes[4], color=\"olivedrab\")\naxes[4].set_title (\"R=20, C=20\", fontsize=14)\naxes[4].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_20_50[\"pressure\"], linewidth=2, ax=axes[5], color=\"olive\" )\naxes[5].set_title (\"R=20, C=50\", fontsize=14)\naxes[5].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_50_10[\"pressure\"], linewidth=2, ax=axes[6], color=\"steelblue\")\naxes[6].set_title (\"R=50, C=10\", fontsize=14)\naxes[6].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_50_20[\"pressure\"], linewidth=2, ax=axes[7], color=\"cornflowerblue\")\naxes[7].set_title (\"R=50, C=20\", fontsize=14)\naxes[7].set(xlim=(3, 8))\nsns.violinplot(x=zero_time_50_50[\"pressure\"], linewidth=2, ax=axes[8], color=\"midnightblue\" )\naxes[8].set_title (\"R=50, C=50\", fontsize=14)\naxes[8].set(xlim=(3, 8));","1956eb86":"zero_time[\"pressure\"].mean()","8b42695a":"zero_time[zero_time['pressure']==zero_time['pressure'].min()]","fa290384":"breath_542 = train_data.query('breath_id == 542').reset_index(drop = True)\nfig, ax = plt.subplots(1, 1, figsize=(12, 4))\nax.plot(breath_542[\"time_step\"],breath_542[\"u_in\"], lw=2, label='u_in')\nax.plot(breath_542[\"time_step\"],breath_542[\"pressure\"], lw=2, label='pressure')\n#ax.set(xlim=(0,1))\nax.legend(loc=\"upper right\")\nax.set_xlabel(\"time_id\", fontsize=14)\nax.set_title(\"breath_id = 542\", fontsize=14)\nplt.show();\n\nbreath_119582 = train_data.query('breath_id == 119582').reset_index(drop = True)\nfig, ax = plt.subplots(1, 1, figsize=(12, 4))\nax.plot(breath_119582[\"time_step\"],breath_119582[\"u_in\"], lw=2, label='u_in')\nax.plot(breath_119582[\"time_step\"],breath_119582[\"pressure\"], lw=2, label='pressure')\n#ax.set(xlim=(0,1))\nax.legend(loc=\"upper right\")\nax.set_xlabel(\"time_id\", fontsize=14)\nax.set_title(\"breath_id = 119582\", fontsize=14)\nplt.show();","e712b0e2":"train_data['u_in_cumsum'] = (train_data['u_in']).groupby(train_data['breath_id']).cumsum()\ntest_data['u_in_cumsum']  = (test_data['u_in']).groupby(test_data['breath_id']).cumsum()","8733962c":"breath_928 = train_data.query('breath_id == 928').reset_index(drop = True)\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nax.plot(breath_928[\"time_step\"],breath_928[\"u_in\"], lw=2, label='u_in')\nax.plot(breath_928[\"time_step\"],breath_928[\"pressure\"], lw=2, label='pressure')\nax.set(xlim=(0,1))\nax.legend(loc=\"upper right\")\nax.set_xlabel(\"time_id\", fontsize=14)\nplt.show();","2dbc6803":"train_data['u_in_shifted'] = train_data.groupby('breath_id')['u_in'].shift(2).fillna(method=\"backfill\")\ntest_data['u_in_shifted']  = test_data.groupby('breath_id')['u_in'].shift(2).fillna(method=\"backfill\")","6b62bfb8":"for df in (train_data, test_data):\n    df['u_in_first']  = df.groupby('breath_id')['u_in'].transform('first')\n    df['u_in_mean']   = df.groupby('breath_id')['u_in'].transform('mean')\n    df['u_in_median'] = df.groupby('breath_id')['u_in'].transform('median')\n    df['u_in_last']   = df.groupby('breath_id')['u_in'].transform('last')\n    df['u_in_min']    = df.groupby('breath_id')['u_in'].transform('min')\n    df['u_in_max']    = df.groupby('breath_id')['u_in'].transform('max')","5a685026":"X_train = train_data.drop(['pressure'], axis=1)\ny_train = train_data['pressure']\nfrom sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble     import HistGradientBoostingRegressor\nregressor  =  HistGradientBoostingRegressor(loss=\"least_absolute_deviation\",max_iter=300)\nregressor.fit(X_train, y_train)\nsample[\"pressure\"] = regressor.predict(test_data)\nsample.to_csv('submission.csv',index=False)","6f72763b":"We have nine combinations of experiments; `C` can be 10, 20 or 50, and `R` can be 5, 20 or 50. Lets take a quick look at an example of each\n\n`C`\u306f10\u300120\u300150\u306e\u3044\u305a\u308c\u304b\u3001`R`\u306f5\u300120\u300150\u306e\u3044\u305a\u308c\u304b\u3067\u3001\u5b9f\u9a13\u306e\u7d44\u307f\u5408\u308f\u305b\u306f9\u901a\u308a\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u4f8b\u3092\u7c21\u5358\u306b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","a73ad140":"How many unique values do we have for each feature?\n\n\u7279\u5fb4\u5024\u306e\u30e6\u30cb\u30fc\u30af\u306a\u5024\u306f\u3044\u304f\u3064\u3042\u308b\u306e\u304b\uff1f","240f0848":"# Pressure\nAnd now we shall look at the `pressure`. The pressure is measured in cmH<sub>2<\/sub>0, where 1 cmH<sub>2<\/sub>0 is roughly equal to 98 Pascals. The maximum value of the pressure is\n\n\u305d\u3057\u3066\u3001\u6b21\u306b`pressure`\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5727\u529b\u306e\u5358\u4f4d\u306fcmH<sub>2<\/sub>0\u3067\u30011cmH<sub>2<\/sub>0\u306f98\u30d1\u30b9\u30ab\u30eb\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3002\u5727\u529b\u306e\u6700\u5927\u5024\u306f","918f15bb":"Note that not all cycles start with `u_in=0`, and a cycle can even start with the inspiratory solenoid valve set to the maximum value of 100.\n\n\u306a\u304a\u3001\u3059\u3079\u3066\u306e\u30b5\u30a4\u30af\u30eb\u304c`u_in=0`\u3067\u30b9\u30bf\u30fc\u30c8\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u5438\u6c17\u96fb\u78c1\u5f01\u3092\u6700\u5927\u5024\u306e100\u306b\u8a2d\u5b9a\u3057\u3066\u3082\u30b5\u30a4\u30af\u30eb\u304c\u30b9\u30bf\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n# Negative pressure\nThe minimum value for the pressure where `u_in=0` at `time_step=0` is\n\n`time_step=0`\u3067`u_in=0`\u3068\u306a\u308b\u5727\u529b\u306e\u6700\u5c0f\u5024\u306f","1caafd5b":"The next question is whether we have any missing data or not?\n\n\u6b21\u306f\u6b20\u843d\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u304b\u306a\u3044\u304b\u3067\u3059\u3002","c55cc744":"with a median value of \n\n\u4e2d\u592e\u5024\u306f\u3001","9b5fb032":"The thinking behind this feature is that it is reasonable to assume the pressure in the lungs is approximately proportional to how much air has actually been pumped into them. It goes almost without saying that this feature is not useful when breathing out, but given that the expiratory phase is not scored in this competition this should not be too much of a problem.\n\n\u3053\u306e\u7279\u5fb4\u91cf\u306e\u80cc\u666f\u306b\u3042\u308b\u8003\u3048\u65b9\u306f\u3001\u80ba\u306e\u4e2d\u306e\u5727\u529b\u306f\u3001\u5b9f\u969b\u306b\u80ba\u306b\u9001\u308a\u8fbc\u307e\u308c\u305f\u7a7a\u6c17\u306e\u91cf\u306b\u307b\u307c\u6bd4\u4f8b\u3059\u308b\u3068\u8003\u3048\u308b\u306e\u304c\u59a5\u5f53\u3060\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u8a00\u3046\u307e\u3067\u3082\u306a\u304f\u3001\u3053\u306e\u6a5f\u80fd\u306f\u606f\u3092\u5410\u304f\u3068\u304d\u306b\u306f\u5f79\u306b\u7acb\u3061\u307e\u305b\u3093\u304c\u3001\u672c\u5927\u4f1a\u3067\u306f\u547c\u6c17\u6bb5\u968e\u304c\u63a1\u70b9\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u305d\u308c\u307b\u3069\u554f\u984c\u306b\u306f\u306a\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n### Shifting `u_in`\nLet us take a look at the first second of `breath_id=928`, which is an excellent example of an oscillatory experiment\n\n\u305d\u308c\u3067\u306f\u3001\u632f\u52d5\u5b9f\u9a13\u306e\u512a\u308c\u305f\u4f8b\u3067\u3042\u308b`breath_id=928`\u306e\u6700\u521d\u306e1\u79d2\u9593\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","afcea07b":"# [Ventilator Pressure Prediction](https:\/\/www.kaggle.com\/c\/ventilator-pressure-prediction): EDA and a simple submission\n\n### Summary\nIn this competition we are provided with 75,450 non-contiguous cycles (each cycle labelled as `breath_id`) of the [PVP1 automated ventilator](https:\/\/www.peoplesvent.org\/en\/latest\/) connected to a high-grade test lung ([Quicklung, Ingmar Medical](https:\/\/www.ingmarmed.com\/product\/quicklung\/))  Three different values of the compliance (C) were tested [10,20,50] mL cm H<sub>2<\/sub>O in conjunction with three different values of resistance (R) [5,20,50] cm H<sub>2<\/sub>O\/L\/s, resulting in a total of 9 different lung settings.\n\nA typical breath cycle has the following aspect \n\n![](https:\/\/raw.githubusercontent.com\/Carl-McBride-Ellis\/images_for_kaggle\/main\/PVP1_typical_cycle.png)\n\nA cycle lasts for up to 3 seconds. It is the inspiratory section (from 0-1 seconds) that we model in this competition.\n\n75,450\u56de\u306e\u975e\u9023\u7d9a\u30b5\u30a4\u30af\u30eb(\u5404\u30b5\u30a4\u30af\u30eb\u306f`breath_id`\u3067\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u3066\u3044\u308b)\ncompliance(C)\u304c\u4e09\u3064\u306e\u7570\u306a\u308b\u5024[10,20,50]\u3067\u3001resistance(R)\u3082\u4e09\u3064\u306e\u7570\u306a\u308b\u5024[5,20,50]\u3042\u308a\u3001\u5408\u8a089\u3064\u306e\u7570\u306a\u308b\u80ba\u306e\u8a2d\u5b9a\u304c\u884c\u308f\u308c\u305f\u3002\n\n\u5178\u578b\u7684\u306a\u547c\u5438\u30b5\u30a4\u30af\u30eb\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u753b\u50cf\n\n1\u30b5\u30a4\u30af\u30eb\u306f\u6700\u5927\u30673\u79d2\u9593\u3067\u3059\u3002\u672c\u5927\u4f1a\u3067\u30e2\u30c7\u30eb\u306b\u3059\u308b\u306e\u306f\u3001\u5438\u6c17\u533a\u9593\uff080\u301c1\u79d2\uff09\u3067\u3059\u3002\n\n### Read in the data","7161e1bc":"Wonderful, it seems not!\n\n\u3059\u3070\u3089\u3057\u3044\u3000\u306a\u3055\u305d\u3046\u3067\u3059\uff01\n# Time\nIn this data the unit of time is seconds. How long does longest breath last?\n\n\u3053\u306e\u30c7\u30fc\u30bf\u3067\u306f\u3001\u6642\u9593\u306e\u5358\u4f4d\u3092\u300c\u79d2\u300d\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u4e00\u756a\u606f\u304c\u9577\u3044\u306e\u306f\u4f55\u79d2\uff1f","c062c6f2":"# Related reading\n* [The People's Ventilator Project](https:\/\/www.peoplesvent.org\/en\/latest\/)\n* [Julienne LaChance, Tom J. Zajdel, Manuel Schottdorf, Jonny L. Saunders, Sophie Dvali, Chase Marshall, Lorenzo Seirup, Daniel A. Notterman, and Daniel J. Cohen \"*PVP1\u2013The People\u2019s Ventilator Project: A fully open, low-cost, pressure-controlled ventilator*\", medRxiv doi:10.1101\/2020.10.02.20206037 October 5 (2020)](https:\/\/www.medrxiv.org\/content\/10.1101\/2020.10.02.20206037v1.full.pdf)\n* [QuickLung ventilator](https:\/\/www.ingmarmed.com\/product\/quicklung\/)","340d737a":"The valve seems to be activated after 1 seccond.\n\n1\u79d2\u5f8c\u306b\u30d0\u30eb\u30d6\u304c\u4f5c\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n# The first breath\n\nLet us select `breath_id=1` and take a look at the features\n\n\u305d\u308c\u3067\u306f\u3001\u300cbreath_id=1\u300d\u3092\u9078\u629e\u3057\u3066\u3001\u305d\u306e\u7279\u5fb4\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","8f392023":"What is the maximum time that the exploratory solenoid valve is set to 0?\n\n\u63a2\u7d22\u7528\u96fb\u78c1\u5f01\u304c0\u306b\u306a\u308b\u6642\u9593\u306e\u6700\u5927\u5024\u306f\uff1f","50d667f6":"It can be observed that there is a lag between `u_in` and the resulting `pressure` of around 0.1 seconds. I am sure it is with this in mind that [Chun Fu](https:\/\/www.kaggle.com\/patrick0302) wrote his excellent notebook [\"Add lag u_in as new feat\"](https:\/\/www.kaggle.com\/patrick0302\/add-lag-u-in-as-new-feat\/notebook), which introduces a new *shifted* `u_in` feature. Here we shall use a shift of 2 rather than his original shift of 1, which is now more in line with the delay seen:\n\n`u_in`\u3068\u305d\u306e\u7d50\u679c\u3067\u3042\u308b`pressure`\u3068\u306e\u9593\u306b\u306f\u3001\u7d040.1\u79d2\u306e\u30e9\u30b0\u304c\u3042\u308b\u3053\u3068\u304c\u89b3\u5bdf\u3067\u304d\u307e\u3059\u3002[Chun Fu](https:\/\/www.kaggle.com\/patrick0302)\u304c\u5f7c\u306e\u7d20\u6674\u3089\u3057\u3044\u30ce\u30fc\u30c8[\"Add lag u_in as new feat\"](https:\/\/www.kaggle.com\/patrick0302\/add-lag-u-in-as-new-feat\/notebook)\u3092\u66f8\u3044\u305f\u306e\u306f\u3001\u304d\u3063\u3068\u3053\u306e\u3053\u3068\u3092\u5ff5\u982d\u306b\u7f6e\u3044\u3066\u306e\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u30ce\u30fc\u30c8\u3067\u306f\u3001\u65b0\u3057\u3044*\u30b7\u30d5\u30c8*\u3057\u305f`u_in`\u6a5f\u80fd\u3092\u5c0e\u5165\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u5f7c\u306e\u6700\u521d\u306e\u30b7\u30d5\u30c8\u3067\u3042\u308b1\u3067\u306f\u306a\u304f\u30012\u306e\u30b7\u30d5\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002","2246aaeb":"Let us see how many unique values there are in each of these columns\n\n\u305d\u308c\u305e\u308c\u306e\u5217\u306b\u30e6\u30cb\u30fc\u30af\u306a\u5024\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","527bf2df":"with a median value of \n\n\u4e2d\u592e\u5024\u306f\u3001","e8077d6e":"Note that all of the instances of negative pressure occur only in the `R=50` (high restriction) with `C=10` (thick latex) systems.\n\n\u306a\u304a\u3001\u8ca0\u5727\u304c\u767a\u751f\u3059\u308b\u306e\u306f\u3001\u3059\u3079\u3066`R=50`\uff08\u9ad8\u5236\u9650\uff09\u3068`C=10`\uff08\u539a\u624b\u306e\u30e9\u30c6\u30c3\u30af\u30b9\uff09\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u9650\u3089\u308c\u307e\u3059\u3002\n\n# Simple feature engineering\n# \u7c21\u5358\u306a\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\nWe shall add a new feature, which is the [cumulative sum](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.cumsum.html) of the `u_in` feature:\n\n\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3068\u3057\u3066\u3001`u_in` \u7279\u5fb4\u91cf\u306e [cumulative sum](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.cumsum.html)\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002","206aa2e5":"there is only one value for `R`, one value for `C` for the `breath_id`. \n\n`R`\u306b\u306f1\u3064\u306e\u5024\u3001`C`\u306b\u306f1\u3064\u306e\u5024\u3001`breath_id`\u306b\u306f1\u3064\u306e\u5024\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\n\nLet us visualize `u_in`, `u_out` and `pressure` with respect to the `time_step`:\n\n`u_in`, `u_out`, `pressure` \u3092 `time_step` \u306b\u5bfe\u3057\u3066\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","a2e439d0":"which corresponds to around 6,350 Pa.\n\nThe pressures in the training data have the following distribution\n\n\u3053\u308c\u306f\u7d046,350Pa\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5727\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5206\u5e03\u3092\u3057\u3066\u3044\u307e\u3059\u3002","773f87bd":"Again inspired by the work of Chun Fu, this time in his notebook \"Add last u_in as new feat\" it is found, at least with gradient boosting type models, that providing the estimator with some descriptive statistics regarding u_in for the cycle in question seems to help in improving the model. Here are a number of examples, some of which may (or may not) be useful:\n\nChun Fu\u6c0f\u306e\u7814\u7a76\u306b\u518d\u3073\u89e6\u767a\u3055\u308c\u3001\u4eca\u56de\u306f\u5f7c\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u300cAdd last u_in as new feat\u300d\u3067\u3001\u5c11\u306a\u304f\u3068\u3082\u52fe\u914d\u30d6\u30fc\u30b9\u30c8\u578b\u30e2\u30c7\u30eb\u3067\u306f\u3001\u63a8\u5b9a\u91cf\u306b\u554f\u984c\u306e\u30b5\u30a4\u30af\u30eb\u306eu_in\u306b\u95a2\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u8a18\u8ff0\u7684\u7d71\u8a08\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u304c\u3001\u30e2\u30c7\u30eb\u306e\u6539\u5584\u306b\u5f79\u7acb\u3064\u3088\u3046\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u3046\u3061\u306e\u3044\u304f\u3064\u304b\u306f\u5f79\u306b\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff08\u3042\u308b\u3044\u306f\u5f79\u306b\u7acb\u305f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09\u3002\n\n","c094fb73":"The average value of PEEP at the beginning of each cycle is\n\n\u5404\u30b5\u30a4\u30af\u30eb\u306e\u958b\u59cb\u6642\u306ePEEP\u306e\u5e73\u5747\u5024\u306f","cf73322a":"and for `u_out`, the control input for the exploratory solenoid valve. Either 0 or 1.\n\n\u3067\u3001`u_out`\u306b\u306f\u3001\u63a2\u7d22\u7528\u96fb\u78c1\u5f01\u306e\u5236\u5fa1\u5165\u529b\u30020\u307e\u305f\u306f1\u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002","e46c7e2d":"Note however that in this competition the expiratory phase is not scored, so for practical purposes we are only really interested in the pressure for `u_out=0`, *i.e.* the first second of the experiments:\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u7af6\u6280\u3067\u306f\u547c\u6c17\u30d5\u30a7\u30fc\u30ba\u306f\u30b9\u30b3\u30a2\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u5b9f\u969b\u306b\u306f\u300cu_out=0\u300d\u3001\u3064\u307e\u308a\u5b9f\u9a13\u306e\u6700\u521d\u306e1\u79d2\u9593\u306e\u5727\u529b\u306b\u306e\u307f\u95a2\u5fc3\u304c\u3042\u308b\u3053\u3068\u306b\u7559\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","12b3d687":"# Positive end-expiratory pressure (PEEP)\n\n# \u547c\u6c17\u7d42\u672b\u5727(PEEP)\n\nIt is worth noting that even before the experiments start (*i.e.* the `time_step=0` and `u_in=0`) there is a positive pressure in the airway. The system is maintained above atmospheric pressure to promote gas exchange to the lungs.\n\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\u3001\u5b9f\u9a13\u958b\u59cb\u524d\uff08\u203b\u3059\u306a\u308f\u3061\u3001`time_step=0`\u3001`u_in=0`\uff09\u3067\u3082\u3001\u6c17\u9053\u306b\u306f\u967d\u5727\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\u80ba\u3078\u306e\u30ac\u30b9\u4ea4\u63db\u3092\u4fc3\u9032\u3059\u308b\u305f\u3081\u306b\u5927\u6c17\u5727\u4ee5\u4e0a\u306b\u4fdd\u305f\u308c\u3066\u3044\u307e\u3059\u3002","49f34077":"# A simple submission","be576b63":"We can see that we have over 6 million rows of data, corresponding to 75450 breaths. On average we have 80 time steps of data per breath. Let us check this for the training data\n\n600\u4e07\u884c\u4ee5\u4e0a\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308a\u300175450\u56de\u306e\u547c\u5438\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u5e73\u5747\u3059\u308b\u3068\u30011\u56de\u306e\u547c\u5438\u306b\u3064\u304d80\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","a39146cc":"The longest breath is just under 3 seconds.\n\n\u6700\u9577\u306e\u547c\u5438\u306f3\u79d2\u5f31\u3002","c08b6e64":"Both of these breaths have a somewhat unusual aspect\n\n\u3053\u306e2\u3064\u306e\u547c\u5438\u306b\u306f\u3001\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u305f\u5074\u9762\u304c\u3042\u308a\u307e\u3059\u3002","5a2b1c18":"# All breaths\nWhat values do we have for `R`, which represents how restricted the airway is (in cmH<sub>2<\/sub>O\/L\/S).\n\n\u6c17\u9053\u304c\u3069\u308c\u3060\u3051\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8868\u3059`R`\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u5024\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u304b\uff08\u5358\u4f4d\uff1acmH<sub>2<\/sub>O\/L\/S\uff09\u3002","bbcadf75":"Let us take a quick look at the training data\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","56b891af":"now for the values of `C`, the lung attribute indicating how compliant the lung is (in mL\/cmH<sub>2<\/sub>O)\n\n`C`\u306e\u5024\u306b\u3064\u3044\u3066\u306f\u3001\u80ba\u306e\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u3092\u793a\u3059\u80ba\u5c5e\u6027\uff08\u5358\u4f4d\uff1amL\/cmH<sub>2<\/sub>O","3663d646":"and the test data\n\n\u304a\u3088\u3073\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf"}}