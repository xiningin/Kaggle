{"cell_type":{"c06a3dcf":"code","c5fcdb93":"code","fc7ce319":"code","451b4026":"code","a022cd83":"markdown","57f7ed47":"markdown","b588bec8":"markdown","6d169303":"markdown"},"source":{"c06a3dcf":"import gc\nimport numpy as np\nimport pandas as pd\nimport datatable as dt\nfrom category_encoders import *\n\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.linear_model import LogisticRegression, LinearRegression\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c5fcdb93":"%%time\nl1_train = dt.fread('..\/input\/spp-base-models-collection\/l1_train.csv').to_pandas()\nl1_test  = dt.fread('..\/input\/spp-base-models-collection\/l1_test.csv').to_pandas()","fc7ce319":"n_folds = 10\nrandom_state = 42\nk_fold = StratifiedKFold(n_splits=n_folds, shuffle=True, random_state=random_state)\n\ntrain_preds = np.zeros(len(l1_train.index))\ntest_preds = np.zeros(len(l1_test.index))\n\ntarget = l1_train['song_popularity']\n\nfeatures = ['CB_OPT_BASE', 'HGB_OPT_BASE', 'LGB_OPT_BASE', 'LGB_OPT_ALL_FE_PRE', 'HGB_OPT_ALL_FE',\n            'LGB_OPT_ALL_FE_2', 'XGB_OPT_ALL_IMP_FE', 'LOGREG_ALL_IMP_FE', 'GRN_base', 'GRN_fe']\n\nprint(f'Number of features: {len(features)}')\n\nfor fold, (train_index, test_index) in enumerate(k_fold.split(l1_train, target)):\n    print(\"--> Fold {}\".format(fold + 1))\n    y_train = target.iloc[train_index]\n    y_valid = target.iloc[test_index]\n\n    x_train = pd.DataFrame(l1_train[features].iloc[train_index])\n    x_valid = pd.DataFrame(l1_train[features].iloc[test_index])\n\n    model = LinearRegression()\n\n    model.fit(\n        x_train,\n        y_train,\n    )\n\n    train_oof_preds = model.predict(x_valid)\n    test_oof_preds = model.predict(l1_test[features])\n    train_preds[test_index] = train_oof_preds\n    test_preds += test_oof_preds \/ n_folds\n    print(\": AUC = {}\".format(roc_auc_score(y_valid, train_oof_preds)))\n    print(\"\")\n    \nprint(\"--> Overall metrics\")\nprint(\": AUC = {}\".format(roc_auc_score(target, train_preds)))","451b4026":"submission  = dt.fread('..\/input\/song-popularity-prediction\/sample_submission.csv').to_pandas()\nsubmission['song_popularity'] = test_preds\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head()","a022cd83":"## Meta model","57f7ed47":"## Create submission","b588bec8":"## Import libraries","6d169303":"## Load data with predictions of base models"}}