{"cell_type":{"75f0f4f2":"code","199b6930":"code","7bffcafb":"code","2343d59e":"code","90fd933e":"code","c950e0b3":"code","80c602b2":"code","84529a97":"code","e5102dd9":"code","e68bf8c1":"code","3a82fc4f":"code","8ace3487":"code","8983a59b":"code","0cab8a40":"code","0465925f":"code","7a9c88ea":"code","2d84189c":"code","b5f12855":"code","4ddb136f":"code","bebd85c5":"code","44d8b6e6":"code","e687bb8f":"code","dca93353":"code","b82b16f8":"code","89951e64":"code","70e96a30":"code","d9a50d9f":"code","86eba589":"code","74411fab":"code","0e57956f":"code","df88d6b8":"code","6723cb55":"code","cc97406d":"code","2a58ec03":"code","ea04a8cf":"code","45ac1319":"code","ea92bc8e":"code","949ddc0b":"code","cecc16e4":"code","a863f934":"code","66817eef":"code","39cf18ef":"code","ecddc850":"markdown","a301a9d7":"markdown","bcbbf7e4":"markdown","30db8627":"markdown","a5e8ae9e":"markdown","1c72e85e":"markdown","81c6da02":"markdown","b0641e5d":"markdown","7ed4a343":"markdown","ea87d9e4":"markdown","7b655c8e":"markdown","02a2933f":"markdown","b957e47d":"markdown","52a66ab3":"markdown","313598d0":"markdown"},"source":{"75f0f4f2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom keras.models import Sequential\nfrom keras.layers import Dense , Dropout\nfrom sklearn.metrics import confusion_matrix , roc_auc_score, roc_curve\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","199b6930":"two_label_dataset=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")","7bffcafb":"two_label_dataset.head()","2343d59e":"two_label_dataset[\"class\"] = [1 if i == \"Abnormal\" else 0 for i in two_label_dataset[\"class\"]","90fd933e":"two_label_dataset.head()","c950e0b3":"sns.countplot(two_label_dataset[\"class\"])\nplt.xlabel(\"class\")\nplt.ylabel(\"count\")\nplt.show()","80c602b2":"x=two_label_dataset.iloc[:,:-1].values\ny=two_label_dataset.iloc[:,-1:].values\nprint(\"x shape :\",x.shape)\nprint(\"y shape :\",y.shape)","84529a97":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)\nprint(\"x train shape :\",x_train.shape)\nprint(\"x test shape :\",x_test.shape)\nprint(\"y train shape :\",y_train.shape)\nprint(\"y test shape :\",y_test.shape)","e5102dd9":"sc=StandardScaler()\nx_train=sc.fit_transform(x_train)\nx_test=sc.transform(x_test)","e68bf8c1":"model=Sequential()\n\nmodel.add(Dense(26,activation=\"relu\",input_dim=6))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(52,activation=\"relu\"))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(104,activation=\"relu\"))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1,activation=\"sigmoid\"))","3a82fc4f":"model.compile(optimizer=\"adam\",loss=\"binary_crossentropy\",metrics=[\"accuracy\"])","8ace3487":"epochs=200\nbatch_size=250","8983a59b":"hist=model.fit(x_train,y_train,batch_size=batch_size,epochs=epochs,\n              validation_data=(x_test,y_test))","0cab8a40":"print(hist.history.keys())","0465925f":"plt.plot(hist.history[\"loss\"],color=\"red\",label=\"Train Loss\")\nplt.plot(hist.history[\"val_loss\"],color=\"green\",label=\"Test Loss\")\nplt.legend()\nplt.title(\"Loss Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Values\")\nplt.show()","7a9c88ea":"plt.plot(hist.history[\"accuracy\"],color=\"red\",label=\"Train Accuracy\")\nplt.plot(hist.history[\"val_accuracy\"],color=\"green\",label=\"Test Accuracy\")\nplt.legend()\nplt.title(\"Acuracy Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Values\")\nplt.show()","2d84189c":"y_predict=model.predict(x_test)\nfor i in range(y_predict.shape[0]):\n    if y_predict[i]>0.5:\n        y_predict[i] = 1\n    else:\n        y_predict[i] = 0\n","b5f12855":"cfm=confusion_matrix(y_test,y_predict)\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(cfm,annot=True,cmap=\"coolwarm\",linewidths=1,linecolor=\"black\",fmt=\".1f\",ax=ax)\nplt.xlabel(\"True Labels\")\nplt.ylabel(\"Predict Labels\")\nplt.show()","4ddb136f":"fpr,tpr,threshold=roc_curve(y_test,model.predict(x_test),pos_label=1)","bebd85c5":"print(\"fpr shape :\",fpr.shape)\nprint(\"tpr shape :\",tpr.shape)\nprint(\"threshold :\",threshold.shape)","44d8b6e6":"plt.figure(figsize=(10,8))\nplt.plot(fpr,color=\"red\",label=\"FPR\")\nplt.plot(tpr,color=\"green\",label=\"TPR\")\nplt.legend()\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.grid()\nplt.show()","e687bb8f":"score=roc_auc_score(y_test,model.predict(x_test))\nscore","dca93353":"three_label_dataset=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\")","b82b16f8":"three_label_dataset.head()","89951e64":"three_label_dataset[\"class\"].unique()","70e96a30":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nthree_label_dataset[\"class\"]=le.fit_transform(three_label_dataset[\"class\"])\n\"\"\"\nhernia = 0\nspondylolisthesis = 1\nnormal = 2\n\"\"\"","d9a50d9f":"three_label_dataset.head()","86eba589":"x=three_label_dataset.iloc[:,:-1].values\ny=three_label_dataset.iloc[:,-1:].values\nprint(\"x shape :\",x.shape)\nprint(\"y shape :\",y.shape)","74411fab":"from keras.utils import to_categorical\ny = to_categorical(y,num_classes=3)\nprint(\"New y shape :\",y.shape)","0e57956f":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)\nprint(\"x train shape :\",x_train.shape)\nprint(\"x test shape :\",x_test.shape)\nprint(\"y train shape :\",y_train.shape)\nprint(\"y test shape :\",y_test.shape)","df88d6b8":"x_train=sc.fit_transform(x_train)\nx_test=sc.transform(x_test)","6723cb55":"model = Sequential()\n\nmodel.add(Dense(26,activation=\"relu\",input_dim=6))\nmodel.add(Dropout(0.4))\n\nmodel.add(Dense(52,activation=\"relu\"))\nmodel.add(Dropout(0.4))\n\nmodel.add(Dense(104,activation=\"relu\"))\nmodel.add(Dropout(0.4))\n\nmodel.add(Dense(3,activation=\"softmax\"))","cc97406d":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","2a58ec03":"hist1=model.fit(x_train,y_train,batch_size=batch_size,epochs=epochs,validation_data=(x_test,y_test))","ea04a8cf":"plt.plot(hist1.history[\"loss\"],color=\"red\",label=\"Train Loss\")\nplt.plot(hist1.history[\"val_loss\"],color=\"green\",label=\"Test Loss\")\nplt.legend()\nplt.title(\"Loss Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Values\")\nplt.show()","45ac1319":"plt.plot(hist.history[\"accuracy\"],color=\"red\",label=\"Train Accuracy\")\nplt.plot(hist.history[\"val_accuracy\"],color=\"green\",label=\"Test Accuracy\")\nplt.legend()\nplt.title(\"Acuracy Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Values\")\nplt.show()","ea92bc8e":"y_predict=model.predict(x_test)\ny_predict_classes=np.argmax(y_predict,axis=1)\ny_true=np.argmax(y_test,axis=1)\nprint(\"y predict classes shape :\",y_predict_classes.shape)\nprint(\"y true shape :\",y_true.shape)","949ddc0b":"from sklearn.metrics import confusion_matrix\ncfm=confusion_matrix(y_true,y_predict_classes)\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(cfm,annot=True,cmap=\"coolwarm\",linewidths=1,linecolor=\"black\",fmt=\".1f\",ax=ax)\nplt.xlabel(\"True Labels\")\nplt.ylabel(\"Predict Labels\")\nplt.show()","cecc16e4":"fpr,tpr,threshold=roc_curve(y_test.reshape(y_test.shape[0]*y_test.shape[1]),y_predict.reshape(y_predict.shape[0]*y_predict.shape[1]))","a863f934":"print(\"fpr shape :\",fpr.shape)\nprint(\"tpr shape :\",tpr.shape)\nprint(\"threshold :\",threshold.shape)","66817eef":"plt.figure(figsize=(10,8))\nplt.plot(fpr,color=\"red\",label=\"FPR\")\nplt.plot(tpr,color=\"green\",label=\"TPR\")\nplt.legend()\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.grid()\nplt.show()","39cf18ef":"score=roc_auc_score(y_test,model.predict(x_test))\nscore","ecddc850":"### I determined the some parameters","a301a9d7":"### I created my model","bcbbf7e4":"### I observed the data","30db8627":"### I divided the data as train and test","a5e8ae9e":"### I had knowledge about the count of class","1c72e85e":"### I converted the class features to number because the machine can learn by numbers","81c6da02":"# I applied same things","b0641e5d":"### I installed the data that has two different labels","7ed4a343":"#                             Artificial Neural Network","ea87d9e4":"### The formula : The standard score of a sample x is calculated as:\n\nz = (x - u) \/ s\n\nwhere u is the mean of the training samples or zero if with_mean=False, and s is the standard deviation of the training samples or one if with_std=False.","7b655c8e":"### I started to work my model","02a2933f":"### I imported the necessary libraries","b957e47d":"### I observed the data againly","52a66ab3":"# Model Analyzing and Evaluation Error","313598d0":"### I divided the data as dependent variable and independent varieables"}}