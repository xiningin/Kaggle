{"cell_type":{"6f9b2e11":"code","c0e12125":"code","318bf7e4":"code","549c4504":"code","de0ca403":"code","d3379390":"code","49b8457b":"code","b753dedc":"code","16f59fd5":"code","b900f34a":"code","525649d9":"code","7a395678":"code","c8ca6867":"code","5eaa4ae2":"code","938de8c2":"code","c1b4c5f3":"code","951ac4ad":"code","b9173f46":"code","f029661f":"code","229825cc":"code","115e9f81":"code","6d320f6b":"code","8e19e0be":"code","daebd479":"code","2532fe02":"code","231fd65c":"code","f3499ab5":"code","b49885a0":"code","af8c19dc":"code","31fb5175":"code","ca040e75":"code","db445e38":"code","ab8f4ecd":"code","c0a068e3":"code","5207602d":"code","23f4345f":"code","9f5e7dab":"code","2ae62b4b":"code","c52a596d":"markdown","58d9bae1":"markdown","89838096":"markdown","5cd470b5":"markdown","225f1a4f":"markdown","a6cc64d1":"markdown","2d32a8e3":"markdown","ea1ed6c3":"markdown"},"source":{"6f9b2e11":"import numpy as np\nimport pandas as pd\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c0e12125":"np.random.seed(3)","318bf7e4":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","549c4504":"df.head()","de0ca403":"import seaborn as sns\ncorr = df.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values);","d3379390":"x = df[['Pclass']]","49b8457b":"y = df['Survived']","b753dedc":"x[y == 1].hist()","16f59fd5":"x[y == 0].hist()","b900f34a":"import sklearn\nfrom sklearn.tree import DecisionTreeClassifier\n\ndt_clf = DecisionTreeClassifier()","525649d9":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, shuffle=True, test_size=0.3)","7a395678":"dt_clf.fit(x_train, y_train);","c8ca6867":"dt_clf.score(x_test, y_test)","5eaa4ae2":"from sklearn.metrics import classification_report\n\nprint(classification_report(dt_clf.predict(x_test), y_test))","938de8c2":"assert df['Sex'].isnull().sum() == 0","c1b4c5f3":"df['is_male'] = df['Sex'] == 'male'","951ac4ad":"df.drop(['Sex'], axis=1, inplace=True)","b9173f46":"df.isnull().sum()","f029661f":"df['Age'].hist()","229825cc":"df['age_is_null'] = df['Age'].isnull()\ndf.fillna({'Age': df['Age'].median()}, inplace=True)","115e9f81":"x = df.drop(['Survived', 'Name', 'Ticket', 'Cabin', 'Embarked', 'PassengerId'], axis=1)\nx.head()","6d320f6b":"y = df['Survived']","8e19e0be":"x_test, x_train, y_test, y_train = train_test_split(x, y, shuffle=True, test_size=0.3)","daebd479":"dt_clf_more_col = DecisionTreeClassifier()","2532fe02":"dt_clf_more_col.fit(x_train, y_train)","231fd65c":"print(classification_report(dt_clf_more_col.predict(x_test), y_test))","f3499ab5":"df_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv', index_col=0)","b49885a0":"df_test","af8c19dc":"df_test['is_male'] = df_test['Sex'] == 'male'\ndf_test.drop(['Sex'], axis=1, inplace=True)","31fb5175":"df_test['age_is_null'] = df_test['Age'].isnull()","ca040e75":"df_test['Age'].median()","db445e38":"df_test.fillna({'Age': df_test['Age'].median()}, inplace=True)","ab8f4ecd":"# TODO: fill NA in Fare","c0a068e3":"df_test.fillna({'Fare': df_test['Fare'].mean()}, inplace=True)","5207602d":"x = df_test.drop(['Name', 'Ticket', 'Cabin', 'Embarked'], axis=1)","23f4345f":"y_pred = dt_clf_more_col.predict(x)","9f5e7dab":"out_df = pd.DataFrame({'PassengerId': x.index, 'Survived': y_pred})\nout_df.head()","2ae62b4b":"out_df.to_csv('\/kaggle\/working\/result_basic.csv', index=False)","c52a596d":"Accuracy of 0.67 looks too low, we skip this solution.","58d9bae1":"# 1 Predict only by 'Pclass'","89838096":"We can see that 'fare' column correlates with 'pclass'. For now we just keep it in mind and don't drop any of the columns.","5cd470b5":"'Embarked' dropped here to not bother with label encoding. Also this column does not look important. Probably, we should consider add it  in future.","225f1a4f":"# 2 Predict by all columns (except 'Name')","a6cc64d1":"0.76 looks better. Consider to find optimal parameters for decision tree classifier in future.","2d32a8e3":"We fill nulls in age with median age, but we also add extra bool column 'age_is_null'.","ea1ed6c3":"# Output"}}