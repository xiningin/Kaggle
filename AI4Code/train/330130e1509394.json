{"cell_type":{"ea383244":"code","1cf7153a":"code","cc5b9c92":"code","9b188ed4":"code","8229042e":"code","47748a0a":"code","0f7e5749":"code","4402c4fa":"code","34751075":"code","03caf323":"code","4578f5d5":"code","f1bd25ac":"code","bcbbdc75":"code","ea38a0eb":"code","ca1be07b":"code","319cc30f":"code","6dbc9833":"code","55c8008f":"code","e8745836":"code","42f14858":"code","3b9df7b5":"code","d76c42b2":"code","63b23733":"code","96e0fb5a":"code","634c17eb":"code","2f2378ca":"code","a639fb5c":"code","d59f5e32":"code","c335307e":"code","7bf77c69":"code","e400b4fb":"code","db56e0e5":"code","e22a8d4c":"code","f3820d58":"code","0a61752e":"code","d869656b":"code","84cadf87":"code","242804a0":"code","8a69ca19":"code","4ac1a5d0":"code","9591f59b":"code","03a366b0":"code","83c66b52":"markdown","8bc32016":"markdown","cf483504":"markdown","dd3510de":"markdown","fa43d9f8":"markdown","0fae13ac":"markdown","b7ee912f":"markdown","d776b441":"markdown","5775719d":"markdown","e731dd61":"markdown","f18fac91":"markdown","43e79e65":"markdown","0c31ad55":"markdown","bed4f80a":"markdown","4d84d015":"markdown","ecb4e782":"markdown","6ef53eac":"markdown","e107f5c1":"markdown","72cef390":"markdown","1161f7a5":"markdown","34aec8fa":"markdown","03aa1166":"markdown","1a973364":"markdown","7f0046b3":"markdown","cf512d64":"markdown","a3dc4222":"markdown","3d26b243":"markdown","6c95a699":"markdown","a0576470":"markdown","dc4d446e":"markdown","801f7cb7":"markdown","dc1a3af4":"markdown","7a972a80":"markdown","8e17b159":"markdown","7013ad9c":"markdown","b0443786":"markdown","c9f819b5":"markdown","432dc175":"markdown","5fb7eaa4":"markdown","01306197":"markdown","8376b1cb":"markdown"},"source":{"ea383244":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1cf7153a":"# csv dosyam\u0131z\u0131 okuyoruz.\ndata = pd.read_csv(\"..\/input\/zomato.csv\", encoding ='iso-8859-9')\n","cc5b9c92":"# ka\u00e7 sat\u0131r, ka\u00e7 s\u00fctun \ndata.shape","9b188ed4":"# S\u00fctun isimleri\ndata.columns","8229042e":"# datan\u0131n ilk 5 sat\u0131r\u0131\ndata.head()","47748a0a":"# data n\u0131n son 5 sat\u0131r\u0131\ndata.tail()","0f7e5749":"# data hakk\u0131nda genel bilgiler \ndata.info()","4402c4fa":"# data da bo\u015f alan var m\u0131?\ndata.isnull().sum()","34751075":"print(\"Dataset i\u00e7erisindeki bulunan \u00fclke kodlar\u0131:\\n\".upper())\nprint(len(data['Country Code'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['Country Code'].unique())\nprint(\"\\nDataset i\u00e7erisindeki bulunan \u015fehirler:\\n\".upper())\nprint(len(data['City'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['City'].unique())\nprint(\"\\nDataset i\u00e7erisindeki bulunan Mutfak T\u00fcrleri:\\n\".upper())\nprint(len(data['Cuisines'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['Cuisines'].unique())\nprint(\"\\nDataset i\u00e7erisindeki bulunan Restoranda \u00f6denen para birimleri:\\n\".upper())\nprint(len(data['Currency'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['Currency'].unique())\nprint(\"\\nDataset i\u00e7erisindeki bulunan Derecelendirme renkleri:\\n\".upper())\nprint(len(data['Rating color'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['Rating color'].unique())\nprint(\"\\nDataset i\u00e7erisindeki bulunan Derecelendirme metni:\\n\".upper())\nprint(len(data['Rating text'].unique()), \"farkl\u0131 de\u011fer var\")\nprint(data['Rating text'].unique())","03caf323":"data['City'].value_counts(dropna = False)","4578f5d5":"data.describe()","f1bd25ac":"data.boxplot(column = 'Aggregate rating')","bcbbdc75":"data_new = data.head()\nmelted = pd.melt(frame = data_new, id_vars = 'Restaurant Name', value_vars = ['Aggregate rating','Rating color','Rating text'])\nmelted","ea38a0eb":"melted.pivot(index = 'Restaurant Name', columns = 'variable', values = 'value')","ca1be07b":"data1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1, data2], axis = 0, ignore_index = True)\nconc_data_row","319cc30f":"data1 = data['Restaurant Name'].head()\ndata2 = data['Votes'].head()\nconc_data_col = pd.concat([data1, data2], axis =1)\nconc_data_col","6dbc9833":"assert data['Cuisines'].notnull().all() ","55c8008f":"# data['Cuisines'].dropna(inplace = True) # missing datalar\u0131 silmek i\u00e7in \ndata['Cuisines'].fillna('Unknown', inplace = True)\nassert data['Cuisines'].notnull().all()","e8745836":"print(\"Mutfak tipi bilinmeyen veriler\".upper())\nprint(\"Say\u0131s\u0131: \", len(data[data['Cuisines'] == 'Unknown']))\ndata[data['Cuisines'] == 'Unknown']","42f14858":"name = list(data['Restaurant Name'].head()) # Restoran isimler\u0131n\u0131n ilk 5 \u00f6\u011fesin al\u0131p listeye d\u00f6n\u00fc\u015ft\u00fcrd\u00fck\naddress = list(data['Address'].head()) # Restoran adreslerinin ilk 5 \u00f6\u011fesin al\u0131p listeye d\u00f6n\u00fc\u015ft\u00fcrd\u00fck\nlist_label = ['name','address'] # s\u00fctun isimlerimiz\nlist_col = [name, address] # i\u00e7erisine alaca\u011f\u0131m\u0131z de\u011ferler \nzipped = list(zip(list_label, list_col)) # s\u00fctun isimleri ve de\u011ferleri birle\u015ftirdik\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf","3b9df7b5":"df['number_of_employees']= 5\ndf","d76c42b2":"average_cost_for_two = list(data['Average Cost for two'].head())\nvotes = list(data['Votes'].head())\ndf['average_cost_for_two'] = average_cost_for_two\ndf['votes'] = votes\ndf","63b23733":"data.plot()\nplt.show()","96e0fb5a":"data.plot(subplots = True)\nplt.show()","634c17eb":"data.plot(kind = \"hist\", y = 'Votes',bins = 20, range = (200,600), normed = True)\nplt.show()","2f2378ca":"# histogram ile cumulative olmayan ve cumulative olan \nfix, axes = plt.subplots(nrows = 2, ncols = 1)\ndata.plot(kind = 'hist', y = 'Votes',bins = 50, range = (200,600), normed = True , ax = axes[0])\ndata.plot(kind = 'hist', y = 'Votes',bins = 50, range = (200,600), normed = True , ax = axes[1], cumulative = True)\nplt.savefig('graph.png')\nplt.show()","a639fb5c":"year_of_establishment_list = [\"1998-03-10\", \"1999-03-05\", \"1999-04-21\", \"1998-11-30\", \"1999-04-01\"]\ndatetime_object = pd.to_datetime(year_of_establishment_list) # datetime yapt\u0131k.\nprint(type(datetime_object))\ndf['year_of_establishment_list'] = datetime_object\ndf","d59f5e32":"df = df.set_index(\"year_of_establishment_list\")\ndf","c335307e":"df.resample(\"A\").mean()","7bf77c69":"df.resample(\"M\").mean()","e400b4fb":"df.resample(\"M\").first().interpolate(\"linear\")","db56e0e5":"df.resample(\"M\").mean().interpolate(\"linear\")","e22a8d4c":"df['index']=[1,2,3,4,5]\ndf = df.set_index(\"index\")\ndf","f3820d58":"df.loc[1:3,\"name\":\"number_of_employees\"]","0a61752e":"df.loc[3:1:-1,\"name\":\"number_of_employees\"]","d869656b":"df.loc[1:3,\"number_of_employees\":]","84cadf87":"boolean = df.votes > 300\ndf[boolean]","242804a0":"filtre1 = df.votes < 400\nfiltre2 = df.average_cost_for_two > 1200\ndf[filtre1 & filtre2]","8a69ca19":"df.average_cost_for_two[df.votes >350]","4ac1a5d0":"def div(f):\n    return f+2\ndf.number_of_employees.apply(div)","9591f59b":"df.number_of_employees.apply(lambda x : x+2)","03a366b0":"df['new'] = df.average_cost_for_two \/ df.number_of_employees\ndf","83c66b52":"A\u015fa\u011f\u0131daki kodda 1-3 index ve \"number_of_employees\" feature'\u0131ndan sonraki t\u00fcm de\u011ferleri yazd\u0131r\u0131yoruz.","8bc32016":"**Building Data Frames From Scratch**\n\nA\u015fa\u011f\u0131da datam\u0131zdaki name ve addres s\u00fctunlar\u0131nda ki ilk be\u015f \u00f6\u011feyi liste haline getirdik, daha sonra zip() methodu ile birle\u015ftirip dictionary haline getirdik, en son olarakta DataFrame' e d\u00f6n\u00fc\u015ft\u00fcrd\u00fck.","cf483504":"**Assert Methodu ile missing datalar\u0131 kontrol ediyoruz.**\n\nA\u015fa\u011f\u0131da ['Cuisines'] s\u00fctunundaki bo\u015f alanlar\u0131 kontrol ediyoruz  ve hata al\u0131rsak  bo\u015f alanlar\u0131m\u0131z var demektir.\n\nHata ald\u0131\u011f\u0131m\u0131za g\u00f6re bo\u015f alanlar var demektir :)","dd3510de":"A\u015fa\u011f\u0131daki kod blogu Dataframemizdeki t\u00fcm de\u011ferleri aylara g\u00f6re gruplay\u0131p ortalamas\u0131n\u0131 al\u0131r.","fa43d9f8":"**Indexing Pandas Time Series**\n\nSonradan olu\u015fturdu\u011fumuz data frame'imize (df) restoran kurulu\u015f y\u0131llar\u0131n\u0131 ekleyelim.","0fae13ac":"Olmayan aylar\u0131 linear \u015fekilde ortalama doldurur.","b7ee912f":"**Visual Exploratory Data Analaysis**\n\nilk olarak plot ile genel bir g\u00f6rselle\u015ftirme yapal\u0131m.","d776b441":"**Datasetimiz hakk\u0131nda genel bir bilgi edinmemiz gerek.**\n\nA\u015fa\u011f\u0131da datasetimizin ka\u00e7 sat\u0131r ve s\u00fctundan olu\u015ftu\u011fu, i\u00e7erisinde\u011fi feature' lar\u0131n tipleri ve ka\u00e7 tane de\u011fer bulundu\u011funu g\u00f6r\u00fcyoruz. 'Cuisines'  s\u00fctununda  eksik de\u011ferler var gibi duruyor.","5775719d":"**A\u015fa\u011f\u0131da datasetimiz i\u00e7erisindeki ilk be\u015f veriyi listeliyoruz**","e731dd61":"A\u015fa\u011f\u0131daki kodda 1-3 index ve \"name\" -\"number_of_employees\" feature lar\u0131 aras\u0131daki de\u011ferleri yazd\u0131r\u0131yoruz.","f18fac91":" Histogram ile cumulative olmayan ve cumulative olan g\u00f6rselle\u015ftirme.","43e79e65":"Data frame imizi time series yapal\u0131m.","0c31ad55":"Ayn\u0131 i\u015flemi lambda fonksiyon ile de yapal\u0131m .","bed4f80a":"**Dataset i\u00e7erisindeki feature'larda e\u015fsiz olan kelimeleri g\u00f6rmek istiyoruz.**\n\nA\u015fa\u011f\u0131da dataset i\u00e7erisinde;\n* ka\u00e7 fakl\u0131 \u00fclke kodu oldu\u011fu ve \u00fclke kodlar\u0131\n* ka\u00e7 fakl\u0131 \u015fehir oldu\u011fu ve bunlar\u0131n isimleri\n* ka\u00e7 farkl\u0131 mutfak t\u00fcr\u00fc oldu\u011fu ve bunalar\u0131n isimleri\n* ka\u00e7 farkl\u0131 para birimi oldu\u011fu ve bunlar\u0131n isimleri\n* ka\u00e7 farkl\u0131 derecelendirme rengi oldu\u011fu ve bunlar\u0131n isimleri\n* ka\u00e7 farkl\u0131 derecelendirme metni oldu\u011fu ve bu metinleri \n\ng\u00f6r\u00fcyoruz.","4d84d015":"**Datasetimizim i\u00e7erisindeki s\u00fctun isimlerine bakal\u0131m.**\n\nDatasetimizdeki s\u00fctun isimlerine bakt\u0131\u011f\u0131m\u0131zda b\u00fcy\u00fck - k\u00fc\u00e7\u00fck harf uyumuna dikkat etmediklerini ve kelimeler aras\u0131nda bo\u015fluk b\u0131rakt\u0131klar\u0131n\u0131 g\u00f6r\u00fcyoruz.","ecb4e782":"**Feture'lardaki eksik de\u011ferleri kontrol ediyoruz.**\n\nYukar\u0131da  'Cuisines'  s\u00fctununda  eksik de\u011ferler var diye d\u00fc\u015f\u00fcnm\u00fc\u015ft\u00fck, a\u015fa\u011f\u0131da da genel olarak  hangi s\u00fctunlarda eksik de\u011fer var g\u00f6rece\u011fiz.\n\nTahmin etti\u011fimiz gibi  'Cuisines'  s\u00fctununda  eksik de\u011ferler var.","6ef53eac":"**Datasetimiz  i\u00e7erisinde ka\u00e7 sat\u0131r, ka\u00e7 s\u00fctun oldu\u011funa bak\u0131yoruz.**\n\nDatasetimiz 9551 sat\u0131r ve 21 s\u00fctundan olu\u015fuyor.","e107f5c1":"\u015eimdide birden fazla filtre kullanarak yazd\u0131rmaya \u00e7al\u0131\u015fal\u0131m.","72cef390":"Di\u011fer s\u00fctunlar\u0131 kullanarak yeni bir s\u00fctun ekleyelim.","1161f7a5":"**Concatenating Data**\n\nA\u015fa\u011f\u0131da datam\u0131z\u0131n ilk ve son 5 \u00f6\u011fesini concat() methodu ile birle\u015ftirdik.","34aec8fa":"# Data Science \u00c7al\u0131\u015fma Notlar\u0131 \n**[Kaan Can Y\u0131lmaz](https:\/\/www.kaggle.com\/kanncaa1)**'\u0131n haz\u0131rlam\u0131\u015f oldu\u011fu  [Data Science S\u0131f\u0131rdan Uzmanl\u011fa Veri Bilimi](https:\/\/www.udemy.com\/data-science-sfrdan-uzmanlga-veri-bilimi-2\/learn\/v4\/overview) kursuna devam ederken kurstaki ***Cleaning Data***, ***Pandas Foundation***  ve ***Manipulating Data Frames with Pandas*** konular\u0131ndaki  \u00f6devlerimi yapm\u0131\u015f oldu\u011fum \u00e7al\u0131\u015fma notlar\u0131m.\n\n\n**Dataset Hakk\u0131nda**\n\nZomato Restaurants Data; B\u00fcy\u00fck \u015fehirlerin en iyi restoranlar\u0131n\u0131 analiz etmek i\u00e7in olu\u015fturulmu\u015f bir datasettir.\n\n\u0130\u00e7erisindekiler;\n\n* Restaurant ID Country Code :\n* Restaurant Name : Restoran\u0131n Ad\u0131\n* Country Code : \u00dclke kodu\n* City : Restoran\u0131n bulundu\u011fu \u015fehir\n* Address :Restoran\u0131n Adresi\n* Locality : Restoran\u0131n Shot Adresi\n* Locality Verbose : Restoran\u0131n Uzun Adresi\n* Longitude : Boylam\n* Latitude : Enlem \n* Cuisines : Sunulan Mutfak T\u00fcrleri\n* Average Cost for two : \u0130ki ki\u015fi Restoran'\u0131 ziyaret ederse ortalama maliyet\n* Currency : Restoranda \u00f6denen para birimi cinsi\n* Has Table booking : Restoranlarda Masa rezervasyonu var m\u0131? Evet\/Hay\u0131r\n* Has Online delivery : Online teslimat\u0131m\u0131z var m\u0131? Evet\/Hay\u0131r\n* Is delivering now : Restoran \u015fimdi yemek veriyor mu? Evet\/Hay\u0131r\n* Switch to order menu : Sipari\u015f men\u00fcs\u00fc var m\u0131?  Evet\/Hay\u0131r\n* Price range : 1 - 4 aras\u0131 kategorize fiyat\n* Aggregate rating :  1 - 5 aras\u0131nda derecelendirme\n* Rating color : Derecelendirme rengi\n* Rating text : Derecelendirme metni (M\u00fckemmel, \u00c7ok \u0130yi, \u0130yi, Ortalama, Zay\u0131f  gibi farkl\u0131 Puanlama)\n* Votes : M\u00fc\u015fterilerden restoran taraf\u0131ndan al\u0131nan toplam oylar.","03aa1166":"melt() methodu ile farkl\u0131 bir yap\u0131ya d\u00f6n\u00fc\u015ft\u00fcrd\u00fc\u011f\u00fcm\u00fcz feature'lar\u0131m\u0131z\u0131 pivot() methodu ile eski haline \u00e7evirdik.","1a973364":"**\u00d6ncelikle csv dosyam\u0131z\u0131 okuyoruz.**","7f0046b3":"**Fidy and Pivoting Data**\n\nDatasetimiz i\u00e7erisindeki ilk be\u015f eleman\u0131n\u0131n ['Aggregate rating','Rating color','Rating text'] feature'lar\u0131n\u0131 \u00f6\u011frenmek i\u00e7in melt() methodu ile farkl\u0131 bir yap\u0131ya d\u00f6n\u00fc\u015ft\u00fcrd\u00fck.","cf512d64":"**Resampling Pandas Time Series**\n\nA\u015fa\u011f\u0131daki kod blogu dataframemizdeki t\u00fcm de\u011ferleri y\u0131llara g\u00f6re gruplay\u0131p ortalamas\u0131n\u0131 al\u0131r.","a3dc4222":"**Transforming Data**\n\nA\u015fa\u011f\u0131da t\u00fcm \u00e7al\u0131\u015fan say\u0131lar\u0131n\u0131 2 daha artt\u0131raca\u011f\u0131z","3d26b243":"Histogram ile verilen toplam oylar\u0131n frenkans\u0131na bakal\u0131m.","6c95a699":"Olmayan aylar\u0131 linear \u015fekilde doldurur.","a0576470":"A\u015fa\u011f\u0131daki kodda 1-3 index ve \"name\" -\"number_of_employees\" feature lar\u0131 aras\u0131daki de\u011ferleri ters \u00e7evirerek yazd\u0131r\u0131yoruz.","dc4d446e":"**Datasetimizdeki int tipindeki de\u011ferler hakk\u0131nda bilgi edinelim.**\n\nA\u015fa\u011f\u0131da genel olarak int tipindeki t\u00fcm feature'lar\u0131n\n* ne kadar veri i\u00e7erdi\u011fini\n* ortalama olarak ne olduklar\u0131n\u0131\n*maksimum - minimum de\u011ferlerini\n*  median, upper ve  lower quantile de\u011ferlerini\n\ng\u00f6r\u00fcyoruz.","801f7cb7":"A\u015fa\u011f\u0131da datam\u0131z\u0131n ['Restaurant Name'] ve ['Votes'] feature'lar\u0131n\u0131n  5 \u00f6\u011fesini concat() methodu ile birle\u015ftirdik.","dc1a3af4":"**A\u015fa\u011f\u0131da datasetimiz i\u00e7erisindeki son be\u015f veriyi listeliyoruz**\n\n","7a972a80":"**Feature'lar\u0131  veri say\u0131lar\u0131na g\u00f6re grupluyoruz**\n\nDatasetimiz en \u00e7ok hangi \u015fehirden restoran i\u00e7eriyor ya da hangi \u015fehirde ne kadar restoran var bakmak i\u00e7in grupluyoruz.\n\nSonu\u00e7lara bakt\u0131\u011f\u0131m\u0131zda en y\u00fcksek restoran say\u0131s\u0131n\u0131n New Delhi, Gurgaon, Noida ve Faridabad \u015fehirlerinde oldu\u011funu g\u00f6r\u00fcyoruz.\n\n","8e17b159":"**Broadcasting**\n\nA\u015fa\u011f\u0131da t\u00fcm restoralar\u0131m\u0131z\u0131n \u00e7al\u0131\u015fan say\u0131s\u0131n\u0131 5 olarak kabul edip yeni bir feature  ekledik.","7013ad9c":"**Indexing Data Frames**\n\nA\u015fa\u011f\u0131da data frame'imizde index adl\u0131 feture'u ekliyoruz ve onu df'imizim indexi yap\u0131yoruz.","b0443786":"\u015eimdide Mutfak tipine 'Unknown' yazd\u0131\u011f\u0131m\u0131z verileri g\u00f6relim :)","c9f819b5":"**Filtering Data Frames**\n\nA\u015fag\u0131da al\u0131nan toplam oyu 300 den b\u00fcy\u00fck olan de\u011ferleri yazd\u0131r\u0131yoruz.","432dc175":"Missing datalar\u0131 dataframe'imizden \u00e7\u0131kartabilir ya da bo\u015f alanlara 'empty' gibi de\u011ferler yaz\u0131rabiliriz.\n\nBizde a\u015fa\u011f\u0131daki kod blogunda mutfak tipi bo\u015f olan alanlara 'Unknown' yazd\u0131raca\u011f\u0131z ve tekrar bo\u015f alan olup olmad\u0131\u011f\u0131n\u0131 kontrol edece\u011fiz.\n\nHata almad\u0131\u011f\u0131m\u0131za g\u00f6re bo\u015f alanlar 'Unknown' olarak doldurulmu\u015f.\n","5fb7eaa4":"A\u015fa\u011f\u0131da al\u0131nan toplam oyu 350den b\u00fcy\u00fck olanlar\u0131n iki  ki\u015filik yemek fiyat\u0131n\u0131 listeledik.","01306197":"**Visual Exploratory Data Analaysis**\n\nA\u015fa\u011f\u0131da restoranlar\u0131n derecelendirmelerini incelemek i\u00e7in box plot ile g\u00f6rselle\u015ftirdik.\n\nGenel olarak derecelendirmelerinin median\u0131 : 3.2, upper quantile : 3.7, lower quantile : 2.5 gibi ve outliers yan\u0131 ayr\u0131k de\u011fer olarak 0 '\u0131 g\u00f6r\u00fcyoruz.\n","8376b1cb":"Subplot ile ayr\u0131 iki grafik olarak bakal\u0131m."}}