{"cell_type":{"d85b1d17":"code","54f01151":"code","33ea1728":"code","b36e5db2":"code","0439c388":"code","54885c3f":"code","ee6da2ca":"code","b254832f":"code","3dfc4059":"code","ebd10966":"code","7dcde2b3":"code","d4089bcf":"code","6ed5e7e9":"code","5355f4c1":"code","a579b699":"code","7bd078f1":"code","f4bd968a":"code","81f4091a":"code","04b9ae3f":"code","031491d8":"code","8c03ee38":"code","42e52e54":"code","5d8e1de1":"code","6480a823":"code","110e1cf5":"code","13652cf1":"code","7bbd909b":"code","be9af516":"code","d66a22cf":"code","c290b0af":"code","7a5ecc9e":"markdown","4a6bc0db":"markdown","4b8197ad":"markdown","65737e00":"markdown","3f446f36":"markdown","1cf2f6e3":"markdown","26c7e51b":"markdown","84fe0b5f":"markdown","008fed56":"markdown","4a191287":"markdown","51ca97a6":"markdown","4f3746a9":"markdown","99fa07c6":"markdown","3d53313c":"markdown","b7433087":"markdown"},"source":{"d85b1d17":"pip install plotly==3.10.0","54f01151":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport matplotlib.pyplot as plt\n\nfrom wordcloud import WordCloud\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","33ea1728":"timesData=pd.read_csv('\/kaggle\/input\/world-university-rankings\/timesData.csv')","b36e5db2":"timesData.info()","0439c388":"timesData.iloc[1000:1010]","54885c3f":"#DATAI TEAM\n# prepare data frame\ndf = timesData.iloc[:100,:]\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n# Creating trace1\ntrace1 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.citations,\n                    mode = \"lines\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= df.university_name)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= df.university_name)\ndata = [trace1, trace2]\nlayout = dict(title = 'Citation and Teaching vs World Rank of Top 100 Universities',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","ee6da2ca":"#BENIM YAZDIGIM 2\ndf=timesData.iloc[0:100]\nimport plotly.graph_objs as go\n\n#trace1\ntrace1=go.Scatter(\n    x=df.world_rank,\n    y=df.citations,\n    mode='lines',\n    name='Citations',\n    marker=dict(color='rgba(16,112,2,0.8)'),\n    text=df.university_name\n)\n#trace2\ntrace2=go.Scatter(\n    x=df.world_rank,\n    y=df.teaching,\n    mode='lines+markers',\n    name='Teaching',\n    marker=dict(color='rgba(80,26,80,0.8)', size=10),\n    text=df.university_name\n)\n\ndata=[trace1,trace2]\nlayout=dict(\n    title=\"Citations and Teaching vs World Rank of Top 100 Universities\",\n    xaxis=dict(title='World Rank', ticklen=5, zeroline=False)\n)\n\nfig=dict(data=data, layout=layout)\niplot(fig)","b254832f":"timesData[\"year\"].describe","3dfc4059":"timesData.info()","ebd10966":"df2014=timesData[timesData.year==2014].iloc[0:100]\ndf2015=timesData[timesData.year==2015].iloc[0:100]\ndf2016=timesData[timesData.year==2016].iloc[0:100]","7dcde2b3":"#traces\ntrace1=go.Scatter(\n    x=df2014.world_rank,\n    y=df2014.citations,\n    name='2014',\n    mode='markers',\n    marker=dict(color='rgba(100,120,200,0.7)', size=9),\n    text=df2014.university_name\n)\ntrace2=go.Scatter(\n    x=df2015.world_rank,\n    y=df2015.citations,\n    name='2015',\n    mode='markers',\n    marker=dict(color='rgba(20,150,180,0.7)', size=8),\n    text=df2015.university_name\n)\ntrace3=go.Scatter(\n    x=df2016.world_rank,\n    y=df2016.citations,\n    name='2016',\n    mode='markers',\n    marker=dict(color='rgba(240,10,10,0.7)', size=7),\n    text=df2016.university_name\n)\n\ndata=[trace1,trace2,trace3]\nlayout=dict(\n    title='Comparison of Citations of Top 100 Universities of Years 2014, 2015, 2016',\n    xaxis=dict(title='World Rank', ticklen=9, zeroline=False),\n    yaxis=dict(title='Citations', ticklen=9, zeroline=False)\n)\n\nfig=dict(data=data, layout=layout)\niplot(fig)","d4089bcf":"df2014=timesData[timesData.year==2014].iloc[0:3]\ndf2014","6ed5e7e9":"trace1=go.Bar(\n    x=df2014.university_name,\n    y=df2014.citations,\n    name=\"Citations\",\n    marker=dict(color='rgba(100,255,255,0.8)', line=dict(color='rgba(0,0,0,1)', width=1.5)),\n    text=df2014.country\n)\ntrace2=go.Bar(\n    x=df2014.university_name,\n    y=df2014.teaching,\n    name='Teachings',\n    marker=dict(color='rgba(255,255,128,0.8)', line=dict(color='rgba(0,0,0,1)', width=1.5)),\n    text=df2014.country\n)\ndata=[trace1,trace2]\nlayout=go.Layout(barmode='group')\nfig=go.Figure(data=data, layout=layout)\niplot(fig)","5355f4c1":"import plotly.graph_objs as go\n\ntrace1={\n    'x':df2014.university_name,\n    'y':df2014.citations,\n    'name':'Citations',\n    'type':'bar',\n    'marker':{'color':'rgba(255,100,255,0.8)', 'line':{'color':'rgba(0,0,0,1)', 'width':1.5}},\n    'text':df2014.university_name\n}\ntrace2={\n    'x':df2014.university_name,\n    'y':df2014.teaching,\n    'name':'Teachings',\n    'type':'bar',\n    'marker':{'color':'rgba(100,255,255,0.8)'},\n    'text':df2014.university_name\n}\ndata=[trace1,trace2]\nlayout={\n    'title':'Citations and Teachings of Top3 Universities of 2014',\n    'barmode':'relative',\n    'xaxis':{'title':'Top 3 Universities'}\n}\nfig={'data':data, 'layout':layout}\niplot(fig)","a579b699":"df7=timesData[timesData.year==2016].iloc[:7]\ndf7","7bd078f1":"import plotly.graph_objs as go\n\nnumber_list=[int(each.replace(',','')) for each in df7.num_students]\n\ntrace=go.Pie(\n    values=number_list,\n    labels=df7.university_name,\n    hoverinfo='label+percent+value',\n    marker=dict(colors=['yellow','green','blue','cyan','brown','orange','black']),\n    hole=0.3,\n    type='pie',\n    domain=dict(x=[0,0.5])\n)\ndata=[trace]\nlayout=go.Layout(\n    title='Number of Students of Top 7 Universities in 2016',\n    annotations=[\n        dict(\n            text='Number of Students', x=0.15, y=1.1, showarrow=False, font_size=20\n        )\n    ]\n)\nfig=go.Figure(data, layout)\niplot(fig)\n\n","f4bd968a":"import plotly.graph_objs as go\n\ndf2016pie=df2016.iloc[0:7,:]\npie_list=[int(each.replace(',',''))  for each in df2016pie.num_students]\n\nfig={\n    'data':[\n        {\n            'values':pie_list,\n            'labels':df2016pie.university_name,\n            'domain':{'x':[0,.5]},\n            'name':'number of students',\n            'hoverinfo':'label+percent+name',\n            'hole':0.3,\n            'type':'pie'\n        }\n    ],\n    'layout':{\n        'title':'Number of Students of Top 7 Universities in 2016',\n        'annotations':[\n            {\n                'font':{'size':20},\n                'showarrow':False,\n                'text':'Number of Students',\n                'x':0.15,\n                'y':1.1\n            }\n        ]\n    }\n}\niplot(fig)\n","81f4091a":"df2016_bubble=timesData[timesData.year==2016].iloc[:20]\ndf2016_bubble","04b9ae3f":"import plotly.graph_objs as go\n\nnum_of_students=[float(each.replace(',','.')) for each in df2016_bubble.num_students]\ncolor_international=[float(each) for each in df2016_bubble.international]\n\ndata=[\n    {\n        'x':df2016_bubble.world_rank,\n        'y':df2016_bubble.teaching,\n        'mode':'markers',\n        'marker':{\n            'color':color_international,\n            'size':num_of_students,\n            'showscale':True\n        },\n        'text':df2016_bubble.university_name\n    }\n]\niplot(data)","031491d8":"x2011=timesData.student_staff_ratio[timesData.year==2011]\nx2012=timesData.student_staff_ratio[timesData.year==2012]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Histogram(\n    x=x2011,\n    name='2011',\n    opacity=0.75,\n    marker=dict(color='rgb(255,100,255)')\n)\ntrace2=go.Histogram(\n    x=x2012,\n    name='2012',\n    opacity=0.75,\n    marker=dict(color='rgb(100,255,255)')\n)\ndata=[trace1,trace2]\nlayout=go.Layout(\n    title='Student-Staff Ratio of 2011 and 2012',\n    barmode='overlay',\n    xaxis=dict(title='Student-Staff Ratio'),\n    yaxis=dict(title='Count')\n)\nfig=go.Figure(data,layout)\niplot(fig)","8c03ee38":"repeat_2011=timesData.country[timesData.year==2011]\n\nplt.subplots(figsize=(8,8))\n\nwordcloud=WordCloud(\n    background_color='white',\n    width=512,\n    height=384\n).generate(\" \".join(repeat_2011))\n\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","42e52e54":"x2015=timesData[timesData.year==2015].iloc[:100]\n\ntrace0=go.Box(\n    y=x2015.total_score,\n    name='Total Score',\n    marker_color='blue'\n)\ntrace1=go.Box(\n    y=x2015.research,\n    name='Research',\n    marker_color='green'\n)\ndata=[trace0,trace1]\niplot(data)","5d8e1de1":"timesData.columns","6480a823":"x2015=timesData[timesData.year==2015]\nscatter_2015=x2015.loc[:,[\"international\",\"research\",\"total_score\"]]\nscatter_2015[\"index\"]=np.arange(1,len(scatter_2015)+1)\n\nimport plotly.figure_factory as ff\n\nfig=ff.create_scatterplotmatrix(\n    df=scatter_2015,\n    diag='box',\n    width=600,\n    height=600,\n    colormap='Portland',\n    colormap_type='cat',\n    index=\"index\"\n)\niplot(fig)","110e1cf5":"dataframe=timesData[timesData.year==2015]","13652cf1":"dataframe=timesData[timesData.year==2015]\ntrace1=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.teaching,\n    name='Teaching',\n    marker_color='blue',\n    text=dataframe.university_name\n)\ntrace2=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    name='Income',\n    marker_color='red',\n    xaxis='x2',\n    yaxis='y2',\n    text=dataframe.university_name\n)\ndata=[trace1,trace2]\nlayout=go.Layout(\n    xaxis2=dict(domain=[0.6,0.95], anchor='y2'),\n    yaxis2=dict(domain=[0.6,0.95], anchor='x2'),\n    title='Income and Teaching vs World Rank of Universities'\n)\nfig=dict(data=data,layout=layout)\niplot(fig)","7bbd909b":"dataframe=dataframe.iloc[:200]\ntrace=go.Scatter3d(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    z=dataframe.citations,\n    mode='markers',\n    marker=dict(\n        color=[int(each) for each in dataframe.world_rank],\n        colorscale='Viridis',\n        size=10        # We can add 5th dimension by using size.\n    )\n)\ndata=[trace]\nlayout=go.Layout(margin=dict(l=0, r=0, b=0, t=0))\nfig=dict(data=data,layout=layout)\niplot(fig)","be9af516":"# Helix equation\nt = np.linspace(0, 20, 100)\nx, y, z = np.cos(t), np.sin(t), t\n\nfig = go.Figure(data=[go.Scatter3d(\n    x=x,\n    y=y,\n    z=z,\n    mode='markers',\n    marker=dict(\n        size=12,\n        color=z,                # set color to an array\/list of desired values\n        colorscale='Viridis',   # choose a colorscale\n        opacity=0.8\n    )\n)],\nlayout=go.Layout(margin=dict(l=0, r=0, b=0, t=0))   # tight layout\n)\n\nfig.show()","d66a22cf":"research, citations, income, total_score","c290b0af":"trace1=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    name='Research',\n    marker_color='blue',\n    text=dataframe.university_name\n)\ntrace2=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.citations,\n    name='Citations',\n    marker_color='red',\n    text=dataframe.university_name,\n    xaxis='x2',\n    yaxis='y2'\n)\ntrace3=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    name='Income',\n    marker_color='yellow',\n    text=dataframe.university_name,\n    xaxis='x3',\n    yaxis='y3'\n)\ntrace4=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\n    name='Total_score',\n    marker_color='green',\n    text=dataframe.university_name,\n    xaxis='x4',\n    yaxis='y4'\n)\ndata=[trace1,trace2,trace3,trace4]\nlayout=go.Layout(\n    xaxis=dict(domain=[0.05,0.50]),\n    yaxis=dict(domain=[0.05,0.50]),\n    xaxis2=dict(domain=[0.55,1], anchor='y2'),\n    yaxis2=dict(domain=[0.05,0.50], anchor='x2'),\n    xaxis3=dict(domain=[0.05,0.50], anchor='y3'),\n    yaxis3=dict(domain=[0.55,1], anchor='x3'),\n    xaxis4=dict(domain=[0.55,1], anchor='y4'),\n    yaxis4=dict(domain=[0.55,1], anchor='x4'),\n)\nfig=dict(data=data,layout=layout)\niplot(fig)","7a5ecc9e":"<a id='5' ><\/a>\n# 5. Pie Chart\n\nStudents rate of top 7 universities in 2016","4a6bc0db":"Content:\n\n1. [Loading Data and Explanation of Features](#1)\n2. [Line Charts](#2)\n3. [Scatter Charts](#3)\n4. [Bar Chart](#4)\n5. [Pie Chart](#5)\n6. [Bubble Chart](#6)\n7. [Histogram](#7)\n8. [Word Cloud](#8)\n9. [Box Plot](#9)\n10. [Scatter Plot Matrix](#10)\n11. [Inset Plots](#11)\n12. [3D Scatter Plot with Colorscaling](#12)\n13. [Multiple Subplots](#13)","4b8197ad":"<a id='11' ><\/a>\n# 11. Inset Plots","65737e00":"<a id='6' ><\/a>\n# 6. Bubble Chart\n\nBubble Charts Example: University world rank (first 20) vs teaching score with number of students(size) and international score (color) in 2016","3f446f36":"<a id='3' ><\/a>\n# 3. Scatter Charts","1cf2f6e3":"<a id='8' ><\/a>\n# 8. Word Cloud\n\nMost repeated countries in top 100 universities data of 2011","26c7e51b":"Line Charts Example: Citation and Teaching vs World Rank of Top 100 Universities\n* Import graph_objs as go\n* Creating traces\n  * x = x axis\n  * y = y axis\n  * mode = type of plot like marker, line or line + markers\n  * name = name of the plots\n  * marker = marker is used with dictionary.\n    * color = color of lines. It takes RGB (red, green, blue) and opacity (alpha)\n  * text = The hover text (hover is curser)\n* data = is a list that we add traces into it\n* layout = it is dictionary.\n  * title = title of layout\n  * x axis = it is dictionary\n    * title = label of x axis\n    * ticklen = length of x axis ticks\n    * zeroline = showing zero line or not\n* fig = it includes data and layout\n* iplot() = plots the figure(fig) that is created by data and layout","84fe0b5f":"<a id='7' ><\/a>\n# 7. Histogram\n\nStudent-Staff ratio of 2011 and 2012","008fed56":"<a id='12' ><\/a>\n# 12. 3D Scatter Plot with Colorscaling","4a191287":"<a id='9' ><\/a>\n# 9. Box Plot\n\nTotal Score and Research points of the universities in 2015","51ca97a6":"<a id='4' ><\/a>\n# 4. Bar Chart\n\nFirst Bar Charts Example: citations and teaching of top 3 universities in 2014 (style1)","4f3746a9":"<a id='1' ><\/a>\n# 1. Loading Data and Explanation of Features","99fa07c6":"<a id='10' ><\/a>\n# 10. Scatter Plot Matrix","3d53313c":"<a id='13' ><\/a>\n# 13. Multiple Subplots","b7433087":"<a id='2' ><\/a>\n# 2. Line Charts"}}