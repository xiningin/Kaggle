{"cell_type":{"1e210dc8":"code","72e8cb05":"markdown","02355333":"markdown","d31f5b0f":"markdown","5f7cd0e6":"markdown","f29ebba6":"markdown","80af5155":"markdown","2e6fc6eb":"markdown","9f4f02e7":"markdown","e9826912":"markdown","a1b609f0":"markdown"},"source":{"1e210dc8":"#This gives the user the option to give the recipe a name, I also made it loop if they typed something other than yes or no.\nwhile True:\n  optional_name_question = input(\"Would you like to name this recipe? \")\n  '''\n  SF: Consider using a list (once we talk about them) and the .upper method\n  to make the input validation cleaner. \n  '''\n  if optional_name_question == 'yes' or optional_name_question == 'Yes' or optional_name_question == 'yea' or optional_name_question == 'Yea' or optional_name_question == 'yeah' or optional_name_question == 'Yeah' or optional_name_question == 'ya' or optional_name_question == 'Ya' or optional_name_question == 'YES' or optional_name_question == 'YEA' or optional_name_question == 'YEAH':\n    recipe_name = input(\"What would you like to name this recipe? \")\n    '''\n    SF: Why don't you use \/n instead of printing a blank? That will save you a line.\n    '''\n    print(' ')\n    break\n  elif optional_name_question == 'no' or optional_name_question == 'No' or optional_name_question == 'na' or optional_name_question == 'Na' or optional_name_question == 'nah' or optional_name_question == 'Nah' or optional_name_question == 'NO' or optional_name_question == 'NA' or optional_name_question == 'NAH':\n    print(\"Okay\")\n    recipe_name = 'none'\n    print(' ')\n    break\n  else:\n    print(\"It's a yes or no question... Try again \")\n    print(' ')\n\n#I learned how to use the 'try', 'except', and 'continue' from stackoverflow. I didn't copy any specific lines. https:\/\/stackoverflow.com\/questions\/23294658\/asking-the-user-for-input-until-they-give-a-valid-response\n'''\nSF: Fantastic! When we learn about functions (or when you learn about functions),\nyou will want to make one function for these three blocks. \nAlso, add a comment here about what you are doing.\n'''\ningredient_1 = input('Enter first ingredient: ')\nwhile True:\n    try:\n        oz_ingredient_1 = float(input('Enter amount of Ounces for ' + ingredient_1 + ': '))\n    except ValueError:\n        print(' ')\n        print(\"Sorry, I didn't understand that\")\n        continue\n\n    if oz_ingredient_1 < 0.1:\n        print(' ')\n        print(\"Sorry, your response must not be negative\")\n        continue\n\n    else:\n        break\nprint(' ')\ningredient_2 = input('Enter second ingredient: ')\nwhile True:\n    try:\n        oz_ingredient_2 = float(input('Enter amount of Ounces for ' + ingredient_2 + ': '))\n    except ValueError:\n        print(' ')\n        print(\"Sorry, I didn't understand that\")\n        continue\n\n    if oz_ingredient_2 < 0.1:\n        print(' ')\n        print(\"Sorry, your response must not be negative\")\n        continue\n\n    else:\n        break\nprint(' ')\ningredient_3 = input('Enter third ingredient: ')\nwhile True:\n    try:\n        oz_ingredient_3 = float(input('Enter amount of Ounces for ' + ingredient_3 + ': '))\n    except ValueError:\n        print(' ')\n        print(\"Sorry, I didn't understand that\")\n        continue\n\n    if oz_ingredient_3 < 0.1:\n        print(' ')\n        print(\"Sorry, your response must not be negative\")\n        continue\n\n    else:\n        break\nprint(' ')\n'''\nSF: I would consider putting another comment here.\n'''\nwhile True:\n    try:\n        servings = int(input('Enter amount of servings: '))\n    except ValueError:\n        print(' ')\n        print(\"Sorry, I didn't understand that\")\n        continue\n\n    if servings < 1:\n      '''\n      SF: Can it be half of a serving?\n      '''\n        print(' ')\n        print(\"Sorry, your response must not be negative\")\n        continue\n\n    else:\n        break\n\n#These take the input amount of oz per ingredient and multiplies it by the inputted serving amount to get the total\nTotal_1 = oz_ingredient_1 * servings\nTotal_2 = oz_ingredient_2 * servings\nTotal_3 = oz_ingredient_3 * servings\n\nprint(' ')\n\n#This makes it so if the user inputted a recipe name it would display, or if they didn't, nothing would display\nif True:\n  if recipe_name == 'none':\n    print(' ')\n  else:\n    print(servings, ' serving(s) of', recipe_name, 'is equal to:')\n    print(' ')\n\nprint(Total_1, 'Ounces total of:', ingredient_1)\nprint(Total_2, 'Ounces total of:', ingredient_2)\nprint(Total_3, 'Ounces total of:', ingredient_3)\n\nprint(' ')\n\nFinal_Total = Total_1 + Total_2 + Total_3\n\nprint(f\"That's a total of {Final_Total} Ounces\")\n#I watched a video on F strings and wanted to try it out here, I might go back and change all of the print strings to f strings just because the spacing is a lot nicer\n'''\nSF: Cool!\n'''","72e8cb05":"#Reflection","02355333":"Here, write a 1 paragraph reflection answering the following questions:\n\n*   What was the hardest part of this project?\n*   What was the easiesy part of this project?\n*   How did you utilize your peer feedback?\n* What was different between your plan and the final project?\n* How well did you plan? Was your idea too easy? Too hard? Just right?\n* If you had unlimited time, what would you add to this project?","d31f5b0f":"The hardest part was problem solving, figuring out why code wasn't compiling, and resolving it. The print\/input functions were very easy. My peer feedback was to clean up my code, so I made it look a lot nicer with spacing\/comments and such. I planned out the basic idea\/coding i wanted, i just needed to fix some minor details. I also added some qol stuff like spaces. I added muletiple things, I added an optional input for a recipe name, that will either display, or not display at the end depending on your input. I also added input validation for the ounces. My planning was decent. It gave me a basic idea of what I wanted, and laid down the foundation for the final code. My idea was simple and easy. If I had unlimited time I would add input validation for the ingredients.","5f7cd0e6":"\nIn this space, write what you plan to do to complete this project.\n","f29ebba6":"## Project Instructions\nWrite a program that asks the user for the following things:\n\n* The names of three ingredients for a recipe.\n* The number of ounces of each ingredient required for one serving (these should just be floats, like 2.5).\n* The number of servings desired (this should be an integer). You should only ask for the number of servings once.\n* The program should then output the total number of ounces of each ingredient required to make the desired number of servings.\n\nAn example run of your program might look like this:\n\n```\nEnter ingredient 1: mixed greens\nOunces of mixed greens: 1.7\nEnter ingredient 2: blueberries\nOunces of blueberries: 2.0\nEnter ingredient 3: walnuts\nOunces of walnuts: 0.2\nNumber of servings: 3\n\nTotal ounces of mixed greens: 5.1\nTotal ounces of blueberries: 6.0\nTotal ounces of walnuts: 0.6\n```\n\nWant to make it better? Implement input validation so that your program requires the user enter a word for the ingredients and a number for the number of ounces.","80af5155":"ask for 3 ingredients and amount in oz float input, then ask for number of servings, input int, then multiply and display each total\n```\ningredient_1 = input('Enter first ingredient ')\noz_ingredient_1 = float(input('Enter amount of Ounces for ' + ingredient_1))\ningredient_2 = input('Enter second ingredient ')\noz_ingredient_2 = float(input('Enter amount of Ounces for ' + ingredient_2))\ningredient_3 = input('Enter third ingredient ')\noz_ingredient_3 = float(input('Enter amount of Ounces for ' + ingredient_3))\nservings = input('Enter amount of servings ')\n\nTotal_1 = oz_ingredient_1 * servings\nTotal_2 = oz_ingredient_2 * servings\nTotal_3 = oz_ingredient_3 * servings\n\nprint('Total Ounces of ', ingredient_1 + Total_1)\nprint('Total Ounces of ', ingredient_2 + Total_2)\nprint('Total Ounces of ', ingredient_3 + Total_3)\n```","2e6fc6eb":"# Make a Plan","9f4f02e7":"# Code\nThis section is for coding :) ","e9826912":"## Rubric\n\n<table>\n  <tr>\n    <th>Requirement<\/th>\n    <th>Description<\/th>\n    <th>Points<\/th>\n    <th> Earned <\/th>\n  <\/tr>\n  <tr>\n    <td> Originality <\/td>\n    <td> All code is your own. Any code snippets that are not your own are properly cited. <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n  <tr>\n    <td> Planning & Reflection <\/td>\n    <td> The \"make a plan\" section includes a detailed description of how you plan to complete the project, possibly including pseudocode <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n  <tr>\n    <td> Compiles <\/td>\n    <td> Code Compiles <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n    <tr>\n    <td> Comments <\/td>\n    <td> Code is properly commented <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n      <tr>\n    <td> Conventions <\/td>\n    <td> Naming and Style conventions are appropriate <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n    <tr>\n    <td>  <\/td>\n    <td>  <\/td>\n    <td>  <\/td>\n    <td><\/td>\n  <\/tr>\n  <tr>\n    <td> Ingredients <\/td>\n    <td> Your recipe takes at least 3 ingredients, the amounts for each ingredient, and the number of servings<\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>  \n  <\/tr>\n    <tr>\n    <td> Strings <\/td>\n    <td> When the user inputs an ingredient, the program asks for the amount of that ingredient (if the user enters \"walnuts\" your program must respond \"Ounces of Walnuts\" <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n  <tr>\n    <td> Math <\/td>\n    <td> The program properly calculates and prints the amount of each ingredient that is needed to make the given number of servings. <\/td>\n    <td> 30 points <\/td>\n    <td> 30 <\/td>\n  <\/tr>\n\n<\/table>\n\n---\n\nI put a bunch of comments throughout the code :) \n\n\"Final\" Score: 100 \/ 100\n\n---","a1b609f0":"#Mini Project: Recipe\nType your name here"}}