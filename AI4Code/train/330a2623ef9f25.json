{"cell_type":{"49c027ec":"code","a89e33da":"code","61fb464e":"code","06df920c":"code","d8145ab4":"code","49dfeb30":"code","9937bac0":"code","33b82e17":"code","9417e0a7":"code","99d359e8":"code","3196ba4f":"code","8787ab3b":"code","8a436e54":"code","9c57a345":"code","b20066a0":"code","80adbad7":"code","47cb8b47":"code","97477d03":"code","03e9cb65":"code","36e0031a":"code","f6ab54fb":"code","372b0417":"code","4f3ea259":"code","de130575":"code","9ddb6700":"code","891a2f55":"code","ddebc084":"code","811d9f04":"code","2e544814":"code","e661355e":"code","d5f4eb39":"code","dedb1016":"code","09049763":"code","f109d59b":"code","3c7ace4f":"code","d83a7428":"code","2ddd7dd1":"code","f4673cc0":"code","45403c2d":"code","7b2d40eb":"code","3fbdf910":"code","a1fd9622":"code","af51223a":"code","6a6cdb98":"code","eab81da8":"code","933534e6":"markdown","718e0412":"markdown"},"source":{"49c027ec":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a89e33da":"data=pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","61fb464e":"data.head()","06df920c":"data.tail()","d8145ab4":"data.info()","49dfeb30":"data.shape","9937bac0":"data.columns=[\"pregnancies\",\"glucose\",\"blood_pressure\",\"skin_thickness\",\"insulin\",\"bmi\",\"diabetes_predigree_function\",\"age\",\"class\"]","33b82e17":"data.isnull().sum()","9417e0a7":"data = data.sort_values(by=[\"age\",\"glucose\"], ascending=False)\ndata['rank']=tuple(zip(data.age,data.glucose))\ndata['rank']=data.groupby('age',sort=False)['rank'].apply(lambda x : pd.Series(pd.factorize(x)[0])).values\ndata.head()","99d359e8":"data.reset_index(inplace=True,drop=True)\ndata.head()","3196ba4f":"data['age']=data['age']\nbins=[21,37,51,65,81]\nlabels=['Young Adult','Early Adult','Adult','Senior']\ndata['age_grp']=pd.cut(data['age'],bins,labels=labels)","8787ab3b":"data.describe()","8a436e54":"data.corr()","9c57a345":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True,linewidths=5,fmt='.0%',ax=ax)\nplt.show()","b20066a0":"sns.pairplot(data)","80adbad7":"fig = plt.figure(figsize = (10,10))\nax = fig.gca()\ndata.hist(ax = ax)\nplt.show()","47cb8b47":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data = data,notch = True,linewidth = 2.5, width = 0.50)\nplt.show()","97477d03":"fig,axes=plt.subplots(nrows=2,ncols=1)\n\ndata.plot(kind='hist',y='age',bins=50,range=(0,100),density=True,ax=axes[0])\ndata.plot(kind='hist',y='age',bins=50,range=(0,100),density=True,ax=axes[1],cumulative=True)\nplt.show()","03e9cb65":"labels = data.age_grp.value_counts().index\ncolors = ['green','yellow','orange','red']\nexplode = [0,0,0,0]\nsizes = data.age_grp.value_counts().values\n\nplt.figure(0,figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Target According to Age Group',color = 'blue',fontsize = 15)\nplt.show()","36e0031a":"plt.figure(figsize=(18,5))\nsns.barplot(data.age_grp,data.glucose)\nplt.show()","f6ab54fb":"#age_grp - blood_pressure\nresult = data.groupby([\"age_grp\"])['blood_pressure'].aggregate(np.median).reset_index().sort_values('blood_pressure')\nsns.barplot(x='age_grp', y=\"blood_pressure\", data=data, order=result['age_grp']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","372b0417":"#age_grp - skin_thickness\nresult = data.groupby([\"age_grp\"])['skin_thickness'].aggregate(np.median).reset_index().sort_values('skin_thickness')\nsns.barplot(x='age_grp', y=\"skin_thickness\", data=data, order=result['age_grp'])\nplt.show()","4f3ea259":"#age_grp - insulin\nresult = data.groupby([\"age_grp\"])['insulin'].aggregate(np.median).reset_index().sort_values('insulin')\nsns.barplot(x='age_grp', y=\"insulin\", data=data, order=result['age_grp'])\nplt.show()","de130575":"#age_grp - bmi\nresult = data.groupby([\"age_grp\"])['bmi'].aggregate(np.median).reset_index().sort_values('bmi')\nsns.barplot(x='age_grp', y=\"bmi\", data=data, order=result['age_grp'])\nplt.show()","9ddb6700":"#age_grp - diabetes_predigree_function\nresult = data.groupby([\"age_grp\"])['diabetes_predigree_function'].aggregate(np.median).reset_index().sort_values('diabetes_predigree_function')\nsns.barplot(x='age_grp', y=\"diabetes_predigree_function\", data=data, order=result['age_grp'])\nplt.show()","891a2f55":"#age_grp - diabetes_predigree_function\nresult = data.groupby([\"age_grp\"])['class'].aggregate(np.median).reset_index().sort_values('class')\nsns.barplot(x='age_grp', y=\"class\", data=data, order=result['age_grp'])\nplt.show()","ddebc084":"sns.barplot(x='pregnancies',y='age',data=data)\nplt.show()","811d9f04":"grp =data.groupby(\"age\")\nx= grp[\"glucose\"].agg(np.mean)\ny=grp[\"insulin\"].agg(np.mean)\nz=grp[\"blood_pressure\"].agg(np.mean)","2e544814":"plt.figure(figsize=(16,5))\nplt.plot(x,'ro',color='r')\nplt.xticks(rotation=90)\nplt.title('age wise glucose')\nplt.xlabel('age')\nplt.ylabel('glucose')\nplt.show()","e661355e":"plt.figure(figsize=(16,5))\nplt.plot(y,'r--',color='b')\nplt.xticks(rotation=90)\nplt.title('Age wise insulin')\nplt.xlabel('age')\nplt.ylabel('insulin')\nplt.show()","d5f4eb39":"plt.figure(figsize=(16,5))\nplt.plot(z,\"g^\",color='g')\nplt.xticks(rotation=90)\nplt.xlabel('age')\nplt.ylabel('blood_pressure')\nplt.show()","dedb1016":"ax=data.glucose.plot.kde()\nax=data.insulin.plot.kde()\nax=data.blood_pressure.plot.kde()\nplt.legend()\nplt.show()","09049763":"f,ax1 = plt.subplots(figsize =(20,5))\nsns.pointplot(x='age',y='glucose',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='age',y='blood_pressure',data=data,color='red',alpha=0.8)\nsns.pointplot(x='age',y='insulin',data=data,color='blue',alpha=0.8)\nplt.text(5,1,'age-glucose',color='lime',fontsize = 12,style = 'italic')\nplt.text(12,1,'age-blood_pressure',color='red',fontsize = 12,style = 'italic')\nplt.text(35,1,'age-insulin',color='blue',fontsize = 12,style = 'italic')\nplt.xlabel('age',fontsize = 15,color='blue')\nplt.ylabel('values',fontsize = 15,color='blue')\nplt.title('glucose  -  blood_pressure - insulin',fontsize = 20,color='blue')\n\nplt.grid()\n","f109d59b":"\nplt.scatter(data['age'],data['glucose'])\nplt.xlabel('age')\nplt.ylabel('glucose')\nplt.show()","3c7ace4f":"# KMeans Clustering\ndata2 = data.loc[:,['age','glucose']]\nfrom sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters = 2)\nkmeans.fit(data2)\nlabels = kmeans.predict(data2)\nplt.scatter(data['age'],data['glucose'],c = labels)\nplt.xlabel('age')\nplt.xlabel('glucose')\nplt.show()","d83a7428":"# cross tabulation table\ndf = pd.DataFrame({'labels':labels,\"class\":data['class']})\nct = pd.crosstab(df['labels'],df['class'])\nprint(ct)","2ddd7dd1":"# inertia\ninertia_list = np.empty(8)\nfor i in range(1,8):\n    kmeans = KMeans(n_clusters=i)\n    kmeans.fit(data2)\n    inertia_list[i] = kmeans.inertia_\nplt.plot(range(0,8),inertia_list,'-o')\nplt.xlabel('Number of cluster')\nplt.ylabel('Inertia')\nplt.show()","f4673cc0":"data3 = data.drop('class',axis = 1)\ndata3 = pd.get_dummies(data3)","45403c2d":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nscalar = StandardScaler()\nkmeans = KMeans(n_clusters = 2)\npipe = make_pipeline(scalar,kmeans)\npipe.fit(data3)\nlabels = pipe.predict(data3)\ndf = pd.DataFrame({'labels':labels,\"class\":data['class']})\nct = pd.crosstab(df['labels'],df['class'])\nprint(ct)","7b2d40eb":"from scipy.cluster.hierarchy import linkage,dendrogram\n\nmerg = linkage(data3.iloc[200:220,:],method = 'single')\ndendrogram(merg, leaf_rotation = 90, leaf_font_size = 6)\nplt.show()","3fbdf910":"color_list = ['red' if i==1 else 'green' for i in data.loc[:,'class']]","a1fd9622":"from sklearn.manifold import TSNE\nmodel = TSNE(learning_rate=100)\ntransformed = model.fit_transform(data2)\nx = transformed[:,0]\ny = transformed[:,1]\nplt.scatter(x,y,c = color_list )\nplt.xlabel('age')\nplt.xlabel('glucose')\nplt.show()","af51223a":"# PCA\nfrom sklearn.decomposition import PCA\nmodel = PCA()\nmodel.fit(data3)\ntransformed = model.transform(data3)\nprint('Principle components: ',model.components_)","6a6cdb98":"# PCA variance\nscaler = StandardScaler()\npca = PCA()\npipeline = make_pipeline(scaler,pca)\npipeline.fit(data3)\n\nplt.bar(range(pca.n_components_), pca.explained_variance_)\nplt.xlabel('PCA feature')\nplt.ylabel('variance')\nplt.show()","eab81da8":"# apply PCA\npca = PCA(n_components = 2)\npca.fit(data3)\ntransformed = pca.transform(data3)\nx = transformed[:,0]\ny = transformed[:,1]\nplt.scatter(x,y,c = color_list)\nplt.show()","933534e6":"<h1>Prediction<\/h1>","718e0412":"references: https:\/\/www.kaggle.com\/kanncaa1\/machine-learning-tutorial-for-beginners"}}