{"cell_type":{"ed6cec33":"code","378777be":"code","ce4cafb0":"code","8e7ce22c":"code","eac9aab5":"code","78508cf6":"code","b978570c":"code","64f320c9":"code","f807eb0e":"code","442b4958":"code","cc3dcb79":"code","016f379c":"code","19fbba07":"code","49d937ad":"code","cc1e288c":"code","6e864eab":"code","3609fb4d":"code","de50a129":"markdown","20f88040":"markdown"},"source":{"ed6cec33":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D","378777be":"#Lets Take our Critics Data!\ndf=pd.read_csv('..\/input\/animal-crossing\/critic.csv')\ndf.head()","ce4cafb0":"df.shape","8e7ce22c":"plt.hist(df['date'],bins=10)\nplt.xticks(rotation=70)","eac9aab5":"df['text'][6]","78508cf6":"plt.hist(df['grade'],bins=10)","b978570c":"#This will be our preprocessing or Data-Cleaning State, \n#Where we'll import the PorterStemmer for Stemming, and StopWords to avoid the words like (he, a, the, or..etc).\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nps=PorterStemmer()\ntext=[]","64f320c9":"len(df)","f807eb0e":"for i in range(0,len(df)):\n    review=re.sub('[^a-zA-Z]',' ',df['text'][i]) #Here Except a-z and A-Z, we'll replace all the punctuations,etc, with a ''.\n    review=review.lower() #Here we lower the Uppercase characters to Lower one!.\n    review=review.split()\n    review=[ps.stem(word) for word in review if not word in stopwords.words('english')] #We'll Stem all the words, except those which are StopWords!\n    review=' '.join(review)\n    text.append(review)","442b4958":"text","cc3dcb79":"#Creating a TF-IDF Model\nfrom sklearn.feature_extraction.text import TfidfVectorizer\ntfidf=TfidfVectorizer(ngram_range=(1,2))","016f379c":"#Converting our text to array!\nX=tfidf.fit_transform(text).toarray()\nX.shape","19fbba07":"y=df['grade']\ny","49d937ad":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)","cc1e288c":"tfidf.get_feature_names()[:20]","6e864eab":"from sklearn.ensemble import RandomForestRegressor\nRR = RandomForestRegressor(random_state=0)\nRR.fit(X_train,y_train)","3609fb4d":"rslt = RR.predict(X_test)\nrslt","de50a129":"So, This is our data, which is purified and Stemmed!\n","20f88040":"I selected Tf-Idf, over bag-of-words, for the semantation sake!"}}