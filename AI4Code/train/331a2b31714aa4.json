{"cell_type":{"a14ff535":"code","dbeb6b79":"code","7d3b4b6d":"code","e9402d69":"code","d6caa7a6":"code","10d3032e":"code","b89d884d":"code","4cf62f68":"code","d8349ee2":"code","5bc4da14":"code","6ce1fbc2":"code","61facf68":"code","bf943ca9":"code","79fe2d12":"code","875ba37d":"code","b19101c9":"code","bf98fe12":"code","f38311be":"code","e2189fde":"code","c67c18fc":"code","a3dbe7fb":"code","02c83a9a":"code","2b69a221":"code","6d068566":"code","b337f4d5":"code","6925c218":"markdown","85a3ee2d":"markdown","519d405c":"markdown","d82a5539":"markdown","0ec567ca":"markdown","c2ecff4d":"markdown","8809888a":"markdown","d0191914":"markdown","9f326129":"markdown","87d6119e":"markdown","d4278cde":"markdown","4eab1a1d":"markdown","55dd9f9c":"markdown","37ae4815":"markdown"},"source":{"a14ff535":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","dbeb6b79":"data_raw = pd.read_csv('..\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018\/data-final.csv', sep='\\t')\ndata = data_raw.copy()\npd.options.display.max_columns = 150\n\ndata.drop(data.columns[50:107], axis=1, inplace=True)\ndata.drop(data.columns[51:], axis=1, inplace=True)\n\nprint('Number of participants: ', len(data))\ndata.head()","7d3b4b6d":"print('Is there any missing value? ', data.isnull().values.any())\nprint('How many missing values? ', data.isnull().values.sum())\ndata.dropna(inplace=True)\nprint('Number of participants after eliminating missing values: ', len(data))","e9402d69":"def cap_data(df):\n    for col in df.columns:\n        print(\"capping the \",col)\n        if (((df[col].dtype)=='float64') | ((df[col].dtype)=='int64')):\n            percentiles = df[col].quantile([0.01,0.99]).values\n            df[col][df[col] <= percentiles[0]] = percentiles[0]\n            df[col][df[col] >= percentiles[1]] = percentiles[1]\n        else:\n            df[col]=df[col]\n    return df\n\nfinal_df=cap_data(data)","d6caa7a6":"data.shape","10d3032e":"# Participants' nationality distriution\ncountries = pd.DataFrame(data['country'].value_counts())\ncountries_5000 = countries[countries['country'] >= 5000]\nplt.figure(figsize=(15,5))\nsns.barplot(data=countries_5000, x=countries_5000.index, y='country')\nplt.title('Countries With More Than 5000 Participants')\nplt.ylabel('Participants');","b89d884d":"# Groups and Questions\next_questions = {'EXT1' : 'I am the life of the party',\n                 'EXT2' : 'I dont talk a lot',\n                 'EXT3' : 'I feel comfortable around people',\n                 'EXT4' : 'I keep in the background',\n                 'EXT5' : 'I start conversations',\n                 'EXT6' : 'I have little to say',\n                 'EXT7' : 'I talk to a lot of different people at parties',\n                 'EXT8' : 'I dont like to draw attention to myself',\n                 'EXT9' : 'I dont mind being the center of attention',\n                 'EXT10': 'I am quiet around strangers'}\n\nest_questions = {'EST1' : 'I get stressed out easily',\n                 'EST2' : 'I am relaxed most of the time',\n                 'EST3' : 'I worry about things',\n                 'EST4' : 'I seldom feel blue',\n                 'EST5' : 'I am easily disturbed',\n                 'EST6' : 'I get upset easily',\n                 'EST7' : 'I change my mood a lot',\n                 'EST8' : 'I have frequent mood swings',\n                 'EST9' : 'I get irritated easily',\n                 'EST10': 'I often feel blue'}\n\nagr_questions = {'AGR1' : 'I feel little concern for others',\n                 'AGR2' : 'I am interested in people',\n                 'AGR3' : 'I insult people',\n                 'AGR4' : 'I sympathize with others feelings',\n                 'AGR5' : 'I am not interested in other peoples problems',\n                 'AGR6' : 'I have a soft heart',\n                 'AGR7' : 'I am not really interested in others',\n                 'AGR8' : 'I take time out for others',\n                 'AGR9' : 'I feel others emotions',\n                 'AGR10': 'I make people feel at ease'}\n\ncsn_questions = {'CSN1' : 'I am always prepared',\n                 'CSN2' : 'I leave my belongings around',\n                 'CSN3' : 'I pay attention to details',\n                 'CSN4' : 'I make a mess of things',\n                 'CSN5' : 'I get chores done right away',\n                 'CSN6' : 'I often forget to put things back in their proper place',\n                 'CSN7' : 'I like order',\n                 'CSN8' : 'I shirk my duties',\n                 'CSN9' : 'I follow a schedule',\n                 'CSN10' : 'I am exacting in my work'}\n\nopn_questions = {'OPN1' : 'I have a rich vocabulary',\n                 'OPN2' : 'I have difficulty understanding abstract ideas',\n                 'OPN3' : 'I have a vivid imagination',\n                 'OPN4' : 'I am not interested in abstract ideas',\n                 'OPN5' : 'I have excellent ideas',\n                 'OPN6' : 'I do not have a good imagination',\n                 'OPN7' : 'I am quick to understand things',\n                 'OPN8' : 'I use difficult words',\n                 'OPN9' : 'I spend time reflecting on things',\n                 'OPN10': 'I am full of ideas'}\n\n# Group Names and Columns\nEXT = [column for column in data if column.startswith('EXT')]\nEST = [column for column in data if column.startswith('EST')]\nAGR = [column for column in data if column.startswith('AGR')]\nCSN = [column for column in data if column.startswith('CSN')]\nOPN = [column for column in data if column.startswith('OPN')]","4cf62f68":"# Defining a function to visualize the questions and answers distribution\ndef vis_questions(groupname, questions, color):\n    plt.figure(figsize=(40,60))\n    for i in range(0,10):\n        plt.subplot(10,3,i+1)\n        plt.hist(data[groupname[i]], bins=14, color= color, alpha=.5)\n        plt.title(questions[groupname[i]], fontsize=38)","d8349ee2":"print('Q&As Related to Extroversion Personality')\nvis_questions(EXT, ext_questions, 'orange')","5bc4da14":"print('Q&As Related to Neuroticism Personality')\nvis_questions(EST, est_questions, 'pink')","6ce1fbc2":"print('Q&As Related to Agreeable Personality')\nvis_questions(AGR, agr_questions, 'red')","61facf68":"print('Q&As Related to Conscientious Personality')\nvis_questions(CSN, csn_questions, 'purple')","bf943ca9":"print('Q&As Related to Open Personality')\nvis_questions(OPN, opn_questions, 'blue')","79fe2d12":"# For ease of calculation lets scale all the values between 0-1 and take a sample of 5000 \nfrom sklearn.preprocessing import MinMaxScaler\n\ndf = data.drop('country', axis=1)\ncolumns = list(df.columns)\n\nscaler = MinMaxScaler(feature_range=(0,1))\ndf = scaler.fit_transform(df)\ndf = pd.DataFrame(df, columns=columns)\n# This (scaler ) is created just for sake of ease of calculation for clustering \ndf_sample = df[:5000]","875ba37d":"# Visualize the elbow\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer\n\nkmeans = KMeans()\nvisualizer = KElbowVisualizer(kmeans, k=(2,15))\nvisualizer.fit(df_sample)\nvisualizer.poof()","b19101c9":"# Creating K-means Cluster Model\nfrom sklearn.cluster import KMeans\n\n# I use the unscaled data but without the country column\ndf_model = data.drop('country', axis=1)\n\n# I define 5 clusters and fit my model\nkmeans = KMeans(n_clusters=5)\nk_fit = kmeans.fit(df_model)","bf98fe12":"# Predicting the Clusters\npd.options.display.max_columns = 10\n\n#labels_ is used to identify Labels of each point\npredictions = k_fit.labels_\ndf_model['Clusters'] = predictions\ndf_model.head(10)","f38311be":"df_model.Clusters.value_counts()","e2189fde":"pd.options.display.max_columns = 150\ndf_model.groupby('Clusters').mean()","c67c18fc":"# Summing up the different questions groups\ncol_list = list(df_model)\next = col_list[0:10]\nest = col_list[10:20]\nagr = col_list[20:30]\ncsn = col_list[30:40]\nopn = col_list[40:50]\n\ndata_sums = pd.DataFrame()\ndata_sums['extroversion'] = df_model[ext].sum(axis=1)\/10\ndata_sums['neurotic'] = df_model[est].sum(axis=1)\/10\ndata_sums['agreeable'] = df_model[agr].sum(axis=1)\/10\ndata_sums['conscientious'] = df_model[csn].sum(axis=1)\/10\ndata_sums['open'] = df_model[opn].sum(axis=1)\/10\ndata_sums['clusters'] = predictions\ndata_sums.groupby('clusters').mean()\n\nprint(data_sums)","a3dbe7fb":"# Visualizing the means for each cluster\ndataclusters = data_sums.groupby('clusters').mean()\nplt.figure(figsize=(22,3))\nfor i in range(0, 5):\n    plt.subplot(1,5,i+1)\n    plt.bar(dataclusters.columns, dataclusters.iloc[:, i], color='green', alpha=0.2)\n    plt.plot(dataclusters.columns, dataclusters.iloc[:, i], color='red')\n    plt.title('Cluster ' + str(i))\n    plt.xticks(rotation=45)\n    plt.ylim(0,4);","02c83a9a":"# In order to visualize in 2D graph I will use PCA\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\npca_fit = pca.fit_transform(df_model)\n\ndf_pca = pd.DataFrame(data=pca_fit, columns=['PCA1', 'PCA2'])\ndf_pca['Clusters'] = predictions\ndf_pca.head()","2b69a221":"plt.figure(figsize=(10,10))\nsns.scatterplot(data=df_pca, x='PCA1', y='PCA2', hue='Clusters', palette='Set2', alpha=0.9)\nplt.title('Personality Clusters after PCA');","6d068566":"# Summing up the my question groups\ncol_list = list(my_data)\next = col_list[0:10]\nest = col_list[10:20]\nagr = col_list[20:30]\ncsn = col_list[30:40]\nopn = col_list[40:50]\n\nmy_sums = pd.DataFrame()\nmy_sums['extroversion'] = my_data[ext].sum(axis=1)\/10\nmy_sums['neurotic'] = my_data[est].sum(axis=1)\/10\nmy_sums['agreeable'] = my_data[agr].sum(axis=1)\/10\nmy_sums['conscientious'] = my_data[csn].sum(axis=1)\/10\nmy_sums['open'] = my_data[opn].sum(axis=1)\/10\nmy_sums['cluster'] = my_personality\nprint('Sum of my question groups')\nmy_sums","b337f4d5":"my_sum = my_sums.drop('cluster', axis=1)\nplt.bar(my_sum.columns, my_sum.iloc[0,:], color='green', alpha=0.2)\nplt.plot(my_sum.columns, my_sum.iloc[0,:], color='red')\nplt.title('Cluster 2')\nplt.xticks(rotation=45)\nplt.ylim(0,4);","6925c218":"How many individual do we have for each cluster?","85a3ee2d":"Let's group the results acording to clusters. That way we can investigate the average answer to the each question for each cluster.\n\nThat way we can have an intuition about how our model classifies people.","519d405c":"## How many clusters should we define?","d82a5539":"As you can see 5 clusters looks optimum for the data set and we already know this researh is to identify 5 different personalities.","0ec567ca":"You can fork my notebook and put your answers in order to see your personality too. \n\nDon't forget to upvote if you liked my work.","c2ecff4d":"## Analysing the Model and Predictions","8809888a":"## Loading the Data Set","d0191914":"## Implementing the Model to See My Personality\n\nI answered the questions in an Microsoft Excel spread sheet. \nThen I added that data into this notebook and put my answers to the model to see in which category I will be.","9f326129":"## Understanding the Data Set","87d6119e":"## Clustering Participants into 5 Personality Groups","d4278cde":"Let's sum up the each question groups (EXT, EST ..) and see if we can see a pattern.","4eab1a1d":"**OUTLIERS**","55dd9f9c":"# Five Personality Traits (OCEAN)\n\nBig Five personality traits, also known as the five-factor model (FFM) and the OCEAN model, is for grouping different personality traits.\n\nThis theory uses descriptors of common language and suggests five broad dimensions commonly used to describe the human personality and psyche. The theory identifies five factors:\n\n* Openness to experience (inventive\/curious vs. consistent\/cautious)\n* Conscientiousness (efficient\/organized vs. easy-going\/careless)\n* Extroversion (outgoing\/energetic vs. solitary\/reserved)\n* Agreeableness (friendly\/compassionate vs. challenging\/detached)\n* Neuroticism (sensitive\/nervous vs. secure\/confident)\n\n1280px-Wiki-grafik_peats-de_big_five_ENG.png![image.png](attachment:image.png)\n\nThis data set was collected (2016-2018) through an interactive on-line personality test. The personality test was constructed from the IPIP. \n\nThe scale was labeled between 1=Disagree, 3=Neutral, 5=Agree.\n\nYou can find more info about each question in the data set link.\n\nIn this study I will analyse the data set and use unsupervised learning algorithm K-Means Clustering for clustering the participants.\n\nResources:\nhttps:\/\/en.wikipedia.org\/wiki\/Big_Five_personality_traits\nhttps:\/\/ipip.ori.org\/newBigFive5broadKey.htm\nhttps:\/\/www.kaggle.com\/tunguz\/big-five-personality-test","37ae4815":"## Visualizing the Cluster Predictions"}}