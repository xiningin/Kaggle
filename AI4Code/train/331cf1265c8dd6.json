{"cell_type":{"92168a92":"code","0855977e":"code","7ee7fa14":"code","dc5c7931":"code","6780fc12":"code","fec6dbe3":"code","d322b833":"code","bd769d46":"code","b69b2b34":"code","82507bc3":"code","c44ac01b":"code","4fa4065d":"code","d1325e77":"code","f4a0d0d8":"code","8f4435be":"code","251be23f":"code","97754a64":"code","563a56fc":"code","5a48a6c6":"code","af43a1c2":"code","aa0f1ce7":"markdown","9a5f47f6":"markdown","67eb3727":"markdown","3b7f147a":"markdown","57f5798b":"markdown","3d581934":"markdown","9c73a488":"markdown","6a241290":"markdown","fcccbe89":"markdown","1adf3a70":"markdown","1a106436":"markdown","8feecd1e":"markdown","26e75ae5":"markdown","89dfd731":"markdown","68a3344c":"markdown","1fb4fa90":"markdown","ae44a3b5":"markdown","3557911b":"markdown","17a49cf4":"markdown","9dc962e1":"markdown","5c2c9b3c":"markdown","97125474":"markdown"},"source":{"92168a92":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0855977e":"adv = pd.read_csv('\/kaggle\/input\/my-datasets\/advertising.csv')","7ee7fa14":"adv.head()","dc5c7931":"adv.describe().transpose()","6780fc12":"adv.info()","fec6dbe3":"sns.heatmap(adv.corr(),annot=True,cmap='Blues')","d322b833":"sns.jointplot(x='Age',y='Area Income',data=adv)","bd769d46":"sns.jointplot(x='Age',y='Daily Time Spent on Site',data=adv,kind='hex')","b69b2b34":"sns.jointplot(x='Daily Time Spent on Site',y='Daily Internet Usage',data=adv)","82507bc3":"sns.pairplot(data=adv,hue='Clicked on Ad')","c44ac01b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","4fa4065d":"adv.columns","d1325e77":"X = adv[['Daily Time Spent on Site','Age','Area Income',\n         'Daily Internet Usage','Male']]\ny = adv['Clicked on Ad']","f4a0d0d8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","8f4435be":"lr = LogisticRegression()","251be23f":"lr.fit(X_train,y_train)","97754a64":"pred = lr.predict(X_test)","563a56fc":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","5a48a6c6":"print(classification_report(y_test,pred))","af43a1c2":"print(confusion_matrix(y_test,pred))","aa0f1ce7":"#### Import train test split and model needed from sklearn","9a5f47f6":"#### Take a look at the datatypes and null values","67eb3727":"#### Describing the data","3b7f147a":"#### Create variable which contains the predictions","57f5798b":"#### Print classification report and the confusion matrix","3d581934":"#### Fit the data to the model","9c73a488":"#### Create X and y based on the features and label needed","6a241290":"#### Heatmap for all correlations","fcccbe89":"#### Jointplot for the Age and Area Income attributes","1adf3a70":"#### Pairplot based on Clicked on Ad","1a106436":"### Thank you. Feel free to add any comments or questions","8feecd1e":"#### Create a variable lr of LogisticRegression","26e75ae5":"#### Imported multiple evaluation methods from sklearn.metrics","89dfd731":"#### Jointplot for the Age and Daily Internet Usage attributes","68a3344c":"#### Use train_test_split with 30% proportion of the dataset to include in the test split","1fb4fa90":"# Predictions and Evaluations","ae44a3b5":"#### Jointplot for the Age and Daily Time Spent on Site attributes","3557911b":"# Train Test Split and Model Training","17a49cf4":"# EDA","9dc962e1":"# Getting Data","5c2c9b3c":"#### Checking the head of the dataframe","97125474":"#### Check all the column names"}}