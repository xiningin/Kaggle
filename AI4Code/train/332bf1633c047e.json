{"cell_type":{"c740c6cf":"code","045d0f14":"code","8767da49":"code","7a4de138":"code","dd59a389":"code","ece85860":"code","613f02f1":"code","66844902":"code","f0adcf3a":"code","66f3a47c":"code","d9cd0682":"code","e600a004":"code","a24b922d":"markdown","433d9aaa":"markdown","ff732bba":"markdown","193ea875":"markdown","40eee443":"markdown","57b559a6":"markdown","7182c411":"markdown"},"source":{"c740c6cf":"#Importing the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","045d0f14":"#Importing the dataset\ndataset=pd.read_csv(\"..\/input\/logistic-regression\/Social_Network_Ads.csv\")\nprint (\"Data shape {}\".format(dataset.shape))","8767da49":"# Sample data\ndataset.head()","7a4de138":"# Data type of each feature \ndataset.dtypes","dd59a389":"x = dataset.iloc[:, [2, 3]].values\ny = dataset.iloc[:, 4].values\n\nprint(x)\nprint(x.shape)\nprint(\"\\n\")\nprint(y)\nprint(y.shape)","ece85860":"#splitting the data into Training set and Test set \nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)\nprint(\"X_train shape {}, y_train shape {}\".format(x_train.shape, y_train.shape))\nprint(\"\\n\")\nprint(\"X_test shape {}, y_test shape {}\".format(x_test.shape, y_test.shape))","613f02f1":"# Feature Scaling\nsc_x = StandardScaler()\nx_train = sc_x.fit_transform(x_train)\nx_test = sc_x.transform(x_test)\nprint(x_train)\nprint(\"\\n\")\nprint(x_test)","66844902":"# Fitting Logistic Regression to the Training set\nclassifier = LogisticRegression()\nclassifier.fit(x_train, y_train)","f0adcf3a":"# Predicting the Test set results\ny_pred = classifier.predict(x_test)\nprint(y_pred)","66f3a47c":"# Making the Confusion Matrix\nprint(\"Confusion matrix\\n {}\".format(confusion_matrix(y_test, y_pred)))\nprint (\"Accuracy score on Test data {}\".format(accuracy_score(y_test, y_pred)))","d9cd0682":"# Visualising the Training set results\nfrom matplotlib.colors import ListedColormap\n\nx_set, y_set = x_train, y_train\nx1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min() - 1, stop = x_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = x_set[:, 1].min() - 1, stop = x_set[:, 1].max() + 1, step = 0.01))\n\nplt.figure(figsize = (12, 8))\nplt.contourf(x1, x2, classifier.predict(np.array([x1.ravel(), x2.ravel()]).T).reshape(x1.shape),\n             alpha = 0.2, cmap = ListedColormap(('blue', 'green')))\nplt.xlim(x1.min(), x1.max())\nplt.ylim(x2.min(), x2.max())\n\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1],\n                c = ListedColormap(('blue', 'green'))(i), label = j, lw = 0.1)\n    \nplt.title('Logistic Regression (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()","e600a004":"# Visualising the Test set results\nfrom matplotlib.colors import ListedColormap\n\nx_set, y_set = x_test, y_test\nx1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min() - 1, stop = x_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = x_set[:, 1].min() - 1, stop = x_set[:, 1].max() + 1, step = 0.01))\n\nplt.figure(figsize = (12, 8))\nplt.contourf(x1, x2, classifier.predict(np.array([x1.ravel(), x2.ravel()]).T).reshape(x1.shape),\n             alpha = 0.2, cmap = ListedColormap(('blue', 'green')))\nplt.xlim(x1.min(), x1.max())\nplt.ylim(x2.min(), x2.max())\n\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1],\n                c = ListedColormap(('blue', 'green'))(i), label = j, lw = 0.1)\n    \nplt.title('Logistic Regression (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()","a24b922d":"### Conclusion:\nWe have implemented Logistic Regression to find the wheather a user purchase a product based on the ad shown and achieved 0.89 accuracy on test data","433d9aaa":"### Logistic Regression Introduction:\n\nLogistic Regression is a classification algorithm, which outputs probabilities. It will minimze cross entropy loss.","ff732bba":"We will implement a classification model which predicts whether a use will purchased a product shown in the Ad. We use Logistic Regreesion to solve this problem.","193ea875":"### Confusion Matrix:\n\nA Confusion matrix is an N x N matrix used for evaluating the performance of a classification model, where N is the number of target classes. The matrix compares the actual target values with those predicted by the machine learning model. This gives us a holistic view of how well our classification model is performing and what kinds of errors it is making.","40eee443":"### Data Preprocessing:\n\nWe will look for duplicate records and drop them. We can see below there are no duplicate records in the data.\nWe wil find any null values in the data and drop them if any found. There are no null values found in the dataset.","57b559a6":"### Split the data into Trian and Test:\n\nThe training data is used to make sure the machine recognizes patterns in the data.\n\nThe test data is used to see how well the machine can predict new answers based on its training.\n\n","7182c411":"### Results Analysis:\n\nBased on the above analysis we visualize the Training set results and Test set results."}}