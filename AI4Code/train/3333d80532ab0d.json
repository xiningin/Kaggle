{"cell_type":{"3a5d2c94":"code","049a756b":"code","cc998ee0":"code","f91d894b":"code","75e2314e":"code","fb179714":"code","5f04dd4a":"markdown","e7562bf3":"markdown","483f1aaf":"markdown","c8ca5fa2":"markdown"},"source":{"3a5d2c94":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.callbacks import EarlyStopping","049a756b":"# Read Brazilian ecommerce data\ndataPath = \"\/kaggle\/input\/brazilian-ecommerce\"\ncustomers = pd.read_csv(dataPath + \"\/olist_customers_dataset.csv\")           \ngeolocation = pd.read_csv(dataPath + \"\/olist_geolocation_dataset.csv\")         \norderItems = pd.read_csv(dataPath + \"\/olist_order_items_dataset.csv\")         \norderPayments = pd.read_csv(dataPath + \"\/olist_order_payments_dataset.csv\")      \norderReviews = pd.read_csv(dataPath + \"\/olist_order_reviews_dataset.csv\")\norders = pd.read_csv(dataPath + \"\/olist_orders_dataset.csv\")\nproducts = pd.read_csv(dataPath + \"\/olist_products_dataset.csv\")\nsellers = pd.read_csv(dataPath + \"\/olist_sellers_dataset.csv\")\nproductCategory = pd.read_csv(dataPath + \"\/product_category_name_translation.csv\")","cc998ee0":"# Select certain features and output for model training and evaluating\ninputData = pd.merge(customers, orders, on=\"customer_id\")\ninputData = pd.merge(inputData, orderItems, on=\"order_id\")\ninputData = pd.merge(inputData, products, on=\"product_id\")\ninputData = pd.merge(inputData, sellers, on=\"seller_id\")\n# Keep only delivered orders\ninputData = inputData[inputData[\"order_status\"] == \"delivered\"]\ninputData = inputData.dropna()\ninputData['shipping_time_days'] = pd.to_datetime(inputData['order_delivered_customer_date']) - pd.to_datetime(inputData['order_delivered_carrier_date'])\nx = inputData[[\"customer_zip_code_prefix\", \"seller_zip_code_prefix\", \"product_weight_g\", \"product_length_cm\", \"product_height_cm\",\n               \"product_width_cm\", \"order_item_id\"]]\ny = inputData[[\"shipping_time_days\"]] \/ np.timedelta64(1,'D')","f91d894b":"# split the input data into train and test set\nx, x_test, y, y_test = train_test_split(x,y,test_size=0.1,train_size=0.9)","75e2314e":"# define keras model\nmodel = Sequential()\nmodel.add(Dense(64, activation='relu', input_dim=7))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dense(1, activation='linear'))\n\n# compile keras model\nmodel.compile(loss='mean_squared_error', optimizer='adam', metrics=[\"mean_squared_error\"])\n\n# set early stopping monitor to stop the training when the model won't improve anymore\nearly_stopping_monitor = EarlyStopping(patience=5)\n\n# train model\nmodel.fit(x.to_numpy(), y.to_numpy(), validation_split=0.2, epochs=25, callbacks=[early_stopping_monitor])","fb179714":"# Predict on unseen data\nmodel.predict(x_test)","5f04dd4a":"As we aim to calculate the shipping time, we select features that can impact the shipping time.\n\nSelected features: customer location (customer zip code), seller location (seller zip code), product weight, product size (length, height and width), number of items per order.\n\nRequired output: Shipping time (days between an order getting shipped and delivered)","e7562bf3":"Build a simple MLP neural networks","483f1aaf":"This is a Brazilian ecommerce public dataset of orders made at Olist Store. The dataset has information of 100k orders from 2016 to 2018 made at multiple marketplaces in Brazil. Its features allows viewing an order from multiple dimensions: from order status, price, payment and freight performance to customer location, product attributes and finally reviews written by customers. We also released a geolocation dataset that relates Brazilian zip codes to lat\/lng coordinates.\n\n\n![](http:\/\/i.imgur.com\/HRhd2Y0.png)","c8ca5fa2":"# The task is to predict the shipment time in days, i.e. days between an order getting shipped and delivered."}}