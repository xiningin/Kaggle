{"cell_type":{"ed7fd611":"code","1ea7c344":"code","85646131":"code","f103636a":"code","efb915d4":"code","4f5143ec":"markdown","7111d6a2":"markdown","f6864faf":"markdown","d441a056":"markdown","45b73ebc":"markdown","1c98d76d":"markdown","b567f60c":"markdown","fb43a135":"markdown","3517e0d3":"markdown","8e7691bc":"markdown","5b7b3ee5":"markdown","183f4ee6":"markdown","98643179":"markdown","2e70eaeb":"markdown","71cf3a8c":"markdown"},"source":{"ed7fd611":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ea7c344":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats","85646131":"nb_bandits = 4  \np_bandits = [0.40, 0.50, 0.60,0.78]\n\n\ndef pull(i):\n    if np.random.rand() < p_bandits[i]:\n        return 1\n    else:\n        return 0","f103636a":"plots = [1, 2, 5, 10, 25, 50, 100, 200, 500, 1000]\n\n\ndef plot(priors, step, ax):\n    plot_x = np.linspace(0.001, .999, 100)\n    for prior in priors:\n        y = prior.pdf(plot_x)\n        p = ax.plot(plot_x, y)\n        ax.fill_between(plot_x, y, 0, alpha=0.2)\n    ax.set_xlim([0, 1])\n    ax.set_ylim(bottom=0)\n    ax.set_title(f'Priors at step {step:d}')","efb915d4":"fig, axs = plt.subplots(5, 2, figsize=(8, 10))\naxs = axs.flat\n\n# The number of trials and wins will represent the prior for each\n#  bandit with the help of the Beta distribution.\ntrials = [0, 0, 0,0]  # Number of times we tried each bandit\nwins = [0, 0, 0,0]  # Number of wins for each bandit\n\nn = 1000\n# Run the trail for `n` steps\n\nfor step in range(1, n+1):\n    # Define the prior based on current observations\n    \n    bandit_priors = [\n        stats.beta(a=1+w, b=1+t-w) for t, w in zip(trials, wins)]\n    # plot prior \n    \n    if step in plots:\n        plot(bandit_priors, step, next(axs))\n        \n    # Sample a probability theta for each bandit\n    theta_samples = [\n        d.rvs(1) for d in bandit_priors\n    ]\n    # choose a bandit\n    \n    chosen_bandit = np.argmax(theta_samples)\n    \n    # Pull the bandit\n    x = pull(chosen_bandit)\n    \n    \n    # Update trials and wins (defines the posterior)\n    trials[chosen_bandit] += 1\n    wins[chosen_bandit] += x\n\nplt.tight_layout()\nplt.show()","4f5143ec":"Code explainability:\n\n**1. Describe the Number of bandits**\n\n**2. Then we do have the success probabilties for the each bandit.**\n\n**3. The number of trials and wins will represent the prior for each probabilitytaken here as 0.**\n\n**4. Number trials taken are 1000.**\n\n**5. Using the beta distribution comparing the prior probabilites with the input something like in the pic below is achieved.****\n\n![](https:\/\/valelab4.ucsf.edu\/svn\/3rdpartypublic\/boost\/libs\/math\/doc\/sf_and_dist\/graphs\/beta_pdf.png)\n\n**6. After choosing and comparing the bandits update the trials and wins . **","7111d6a2":"Below is the code on Thompson Sampling .","f6864faf":"# Multi Armed Bandit Made Easy with Thompson Sampling.","d441a056":"![](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUSEhMVFhUXFxoaGBgYGBceGhsaHxoYHhobHxgdHSggGB8lHRoXIjEhJSkrLy4uGB8zODMtNygtLisBCgoKDg0OGxAQGy0lICYtLy8vLy0vLS8tKy0tLTArLS0tLS8tLS8vLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIALcBEwMBIgACEQEDEQH\/xAAcAAACAwEBAQEAAAAAAAAAAAAFBgMEBwACAQj\/xABMEAACAQIDBQUEBgcECAUFAAABAgMAEQQSIQUGMUFREyJhcZEygaGxBxRCUsHRI2JygpLh8BUkM6JTc5Oys8LS8RYlY4PENENktMP\/xAAaAQADAQEBAQAAAAAAAAAAAAACAwQBAAUG\/8QAMxEAAgIBAwMCAwYGAwEAAAAAAQIAEQMSITEEQVETImHB8DJCcYGx4QVSkaHR8RQjUzP\/2gAMAwEAAhEDEQA\/AGbHYIKSKHSJaicm+UGYgwq4+8ul\/cRevo3iwLe1Ew8v+9TKzCUMFMEE+ddCpZso59aPQT4CQ2XNe1+deMuBJ7s1j7\/yoxlPiLOIeZTbYrWvfxvVjEbKDoojQhlHeYXOY\/hVlHhFrYjMLjSrMbAXCzLboCOPrTxlGmzJzhbVQgLB7GLSKM2mYE+QNz8Kc8Q8QcC9xmvbWx7vH+ulA4AwOkyA8PHX30cbZxUqQ5LXsCeltacrAnaT5MZoExXxuy5DKWVhqcwNzpYDnbwqMQOb9oM2mnh4+PnR9jLG+UOtgCL2uQDYmoZUlYhiVyXyhjb5etC2RbJuHjwMFAA7CCYA6xNGUDA8Cfs+X9daoNmU2bj401S4cm2WVcvuvVOTY6k3aVfh+dTZcig1KcOJjvBEScLc6q7U2SjzRTE2eO9rc79aYMdh440zCRWbgACDQmCJ5GyqLsf6uamfIalmJADc4XJCqLk8AKbNh7DEf6SSxf4LXvZGzFgF21fmfwFdjtpchU9jkw2Yt7V4lzGbQC8KXMbiyxrxPiCaqM1YSSbMJMYXie81fc9Q5q+g10dUnBr0KgVq9mQAXJAHjRQqktdJOqKXY2A1Jpe2hvVGl1iHaN4ez60tY\/HSzn9K9hyVdBTFxkwWYQftScSSOEHtMTb7oJ59KkWOwtUsUAUWUWqTJVANRdEyBY6jMiaXZdeGo1oxsVf7xCQL\/pE0694ae\/h76e9qbwSSQugw+HyMjA2xF2Xjrk7EBrcePGnY1DCLcP8AdFzMOyohs7Y5fvsckfXmfBRz8+Hyq9srZgI7ST2eS\/etzPRfnUe1t68LEbNKGbhlTvHysNB5VMzkmlhUBuYRTKgyxLkHM8WPm34CwoVitqxqSLlj+qL\/AB4UFn2ljMX3cPhmRPvSG1\/d\/wB6tbN3FeTXFTm33U7q+vOmL0WQ7tt+MU\/V412G\/wCEq47eiNenle59Bw9aHHbOJl0hhIB+0wsKdMPujh4ASsa6C+Y6\/E1P28awMxGl7DKL1UnR4l+1vJW6rI3G0Rv7Fxx1MwBPIV1F33gcE2XTzrqqHTL\/AOckPUH+eROSNeFfY7GJpO1S4IAS\/ePiB08ak35QYdgwJKyAnL0PP50nRYoA25HhXiaGE9oFWr4x02RtGJGJmV2FtMp58+Ypk3aweGxX1lgjAKVyAsdFIPQ9QaziE34Eacacfoy2iq4mSJmA7SOwueLA6AeNi3pXZMjenpH7wfRVcmr\/AF\/SMmwcAY5wY1uFJOouBw1oxjdmAyl5ZMhOvc4X5XNqtCDLdb2Zr28ulL+O2fIx1Jb3\/hwqrC1Yhe8hyjVlNbQhLBgxYgsz6XJPjpTQ8bkBwrBh46ajpSRh8HLGinTK9h46GnnG47L3bHiNRw4CqkN7CR5BQswS2EQlj3g1wG4cba\/C3pVObd2LUCViqm+Uk2ueJ6da+sG7dzfukg+Wg1r3jspaNEkNtc+UXsOQvQM9tQ87wsaVjBbbYVFnebZ7w99FIXLe\/Hh4VV3dkixBc4lnzC1rXC2\/d99Nu0cQI4X7VhksbE8QBw\/Csfjx5LNkLIpJ4EjS+g9Kn6gkcSzpV1Xce9kqJJGSI3Baym99OprQMBg0w6cO8eJ5msa2NvCmHkUrc2PAVqB26mIjR47gW1v1qRgTvLGXgDiTY3Hkk0NkkryzV4NBoqED2E8sa8GpLVVxmMSIXdgo8aGNUSWo8RiFQZnYKBzJpX2jvYTpAv7zfgKX8Q7yHNIxY+PD3CiCw7jPj97VFxAuY\/eOi\/zoBisfJKbyOT4cF9KsYbd\/EOoZYjY8LkD4E3rxLsqZD3o2PXLZreeUm1GKEzmWYNi4goHSCRkIBBVSQQeYtxqbZOyJJjpZVHtMeA8Lcz4U17F2qURIO1ZGjjjZlsmi26tGeZF+8OduFB8RvThkPZREysOEcCl7e8aeZJvVDgADTzEBmv3VCEewMOo72Zz4sVHotj8a9ybLwpBLQqABckM4PqGBobH\/AGjP\/hQJh1+9Kcz+5BoD4GpU3GEmuNxEs\/6pOSP+BfzoBjYzGzKItgZzHJs9nzGYIEkYMt7Ahs3tJqQPa42oTtPH4gMiBZU7M6gOzxE\/aKjJdQSNRmbpTPvRBBh0aPDoiWilbugAgiGSxvxve2vHSkbY+8cvZrmCEAZeGptpc+PO9V4wQukcxfqA96Bl\/wCkXEN9XwahiAyvexIB9niOepNH\/o+2fAMMJRGuc6Xt3r+fGlLfrGdrHhTa3db42p2+jmNRhFNxmsSb8gDx1p\/THTiY9\/3Mnyprygdv2hnHTmGMtl4nTUXH5\/zoXHthpQEICgcxx9\/WiLoMTIka3y37xN72PUcqq4\/YZw8hPFGPd8tBVOPSy+\/kyTqbVvZwIwbOxHaoLjjcHxI\/OoDggo7OOw428uPzr7sSB1hbMpBD5h4jr86nkNpibX7psPcCfnUXUHTsPM3pAz5TfYXFufZqsxaw14+fOuovHs\/OM2ovravtavUuABUqfpsZY7zNN6toSYkKWUKATlAv9rXifKgOFwnfGe9hTLhJZLEYiJ3UHQGNvdwXWpZMIy5LxkXAYacjUOrSouNrU2x4gXFYZQ6hHNiDc\/hV7ZMMURDEOXBB00AN\/OnrcbGIBJC0ALNds7WAtYDKefU6eNC4sF9XxSK4zKrKSQDbKdL+6\/woBkFHaGQ2uyZdbaQlkhBlZCWHezE2B68teFOb45FVA0i6E62tcDqaDph0OKayixtbT30X2hAjLlkbuqRYc+HOqOmyWxAWhI+pSlFneVcPtVJSz9nYDUWt1\/r1p3xBBDc9R8hS1h2wzARpGTl1uOY5luH40Q2hBdrBmFyAQCbEWHGrQLMhdtI+vBgPH7ajjnYdmXK20PA34cjerexsYkwyEZZLmyAEWHUmvO0niWQgCxBB14X9agaBZGMiPZyOmnpXMN9pmInSLNxL+kM5pVihLuy3zLe63FgPC+hpPxefMI8oDDQjp\/WlOm3NlTxyBlb3ga6nX50F2Jg7zs7G5Dc+ZsKgzKPtHmer070Qo8QGmBcS8OVabubCwwwDam5pd2yO+bD0FF9gbUWHD\/pLg5jYW1NTKSxlTEXGBlqrjMfHELuwHhz9KA7Q2xO6lkRkj+9Yn48BUmxd3RPG0ssrKxPcGW+YdSSeF6P02MzWq7mVcfvG7d2Jco6nj7hVKbd\/FMbvFIWPNh+fCijbBEDCWeROxXUtcrc8hr1PjRSTeEyEmOOSXo1sqfxNYW8r1yICIRyEGhE\/EbIkjGZ43UdSDb14Voq4zJh41fKgVFuWsALKLanS\/O9JO39r4lLMZOzID5lja472bs73XLJa3AjnQ3ZCrPtLF9uvbCNjkEhLKmotlQnKKYqlVuA51kCo0zb0QsSsAkxT\/wDoqWW\/jIbIPWl7eRJ5UVsQgiKyZ1UsGZY+4CudbZTc8r8jTXiZyIdCF1IsunC+gA8qTt6Gm7IiQWKQhhrc5TNENeh11FGEqmilyBiV8QJtCbPhcYTIz9yO2ckkL28WUFjxsKefo9ZRh4dANBYAcgq3Pjc8\/EVmuGkzYbEjrEpPkJEb5gVo25iquFjIFiYwSRz0txp7ULgajew3qOsuOA4UIxuNdtF08f61rpEJBCjW2l\/M8z7q9uev63yFCMgG4EScBY0zRI3pwj5pQ5uww8rc+UUunoTWabNk7lvE1sW8igzS9Pqk9\/8AYzVjGB9n31uNixuNZAgCiF94TeDDHwam7dwFMFm4cLa8LkC\/ypV26n90wp\/ap33V2O2IwkaKyqCpJI8xcm\/hx8at6OtLX5+cm6knWtfW00jZezUhXuHMdLnzOvxvUmGjVkDSC9hbXpZbmhmM2gMMt5NCALa8bC2nXkaCwb1o5EYzEtdVHXXh4cKEYnbeLJ07Q0drlsSsQXudldj010HjpU2BxSkm4GjMAfC3CoYoiFbETWCxhhYaA6j4XAoNtnbMaossSEmTUoBfKeZvS8mIMNhxGKzrdd4bedQSAdBXVn523iQSOxfifnXUsYXriZ6uT+Waz9Vh8fh+VfHwUH3j6D8qHjEj7w9a+mYHmPWllW8xupfE+4jBxD2W+H8q8jARN7Unw\/lUb261C2nOs0HzN1r4l0bOjBzCU366VfAVu7YOxoA0tWdlY5Ue5BNxYZeNcqMDuZjshHEujsiLMSlrLYdL60Xw2EFtHfjfUH3Ut\/2dNISVQgHUX6edNPaSDLawvbTy41SCfMjcLttcET4KAsWlc5je4tz5V7wiwKo7mvjpUe0NnymQyADUjS\/OqO8GNhgUGV7SC+ceHgo4+7rQvfabhAoWJZxcCublh4CosNs2O+tqUTv5h1BDxyC5sG0svjYEk1e2HvdhXJUShsov3rrf+K19amN8FpeFHIWN6bLhqDG4TC5HMgXKq5iSy2t+FKO199MMGkSOU58jBQoYgGxt3rWqDeTXA3U6tF3tdTdeZ86wKTwZxIB4jFhsemQQyXGGItwyp1ABIub+FL+ycZNiu0yExJFI0aqgBJCmwJZtB5WortNL4LN0jB9FoRuExy4oDliHo3u4CkaYB3ywxSJgQSxyasbmwlj5+ZPDrTJsiN2UWBNhzNU\/pEa6f+3\/AP3gpj2UmVV6ZPwoW22EYPdzEvfuMrh2Y2uZ410\/1UpoJutjDHjMSQCczEXAvry053tamX6UxbDgf\/kx\/wDBlpb3OS+OnHLOb+7Wgr2m52R2QWscZsNLIsN9SJQ5vbXX2e7poLgnna9VPpCWyzkka4X\/AORHRpMSYyuZLLmA466npzoF9JhGWWxuDhR\/+1AKxAK2MzGX++N5nGDJ7Cb\/AFaj1YVrm5GFLYONhYgIv+7f8RWRQaYaXyj+dahuVDmwyFySuRbLdhchRqSDrwt5eVPYXtcNDpN12jMJQrAaceovx1Hwq3Phh2JkP3Trrw9wofGoU3SKJSOBtc+uho7jpyuHvcL3RwAt7r01MdfX+4rPmBIImd7ekzNiGF7fU5yNCDbsZBwPDjWQ4D2ffWubefXFkkk\/Upyb9SoBt4Xf41k+AHc95oUABoQ3a94b3gH9zwv73\/L+daFucxXZBYEqzWQEngC3G\/Ks93nNoMIv\/pA+oWtF3Hh7bZRiGpzX+J+RFU9NsD+Pzicwth9doZx2zY51j7Vy2RVVQNLjj6kA1FJgIAEUR5cmfKTxGpN\/h1olh9mEhmNgrBQc\/dUW4kX118qr46NkV3XJIqj7BzEC1vZ05X18acG7XFMma9qlSYM0E8RBytLp+ydT8jVjCxocyqoF8qW6akBveLVFHi3OFkkIK5iciHQ8Lk24gGgkm8LEWVbaKL89Px8awqTsI1RzZjFMpLG8fPpXUqS7wSEkkfE11d6DwvZ5lfdOIyxXbU3b+VKW0dpuk0iRu5sxFgTpT19Gy2hJY3JZr0m7z7XnlxBSOJB2DOoZRqQTfW5t6V5hHs3MYrU52mjbB2Er4eGVzIWKBmBZuJ5WvRpsJGB\/hDTpa\/yqLdKVnwUTP7RjF+HHnwopFbNTwisosSYuQxoxd\/tFRdfqMpC6E90fAm9Me7gjZe2jjCNp3TxBqhtLEKhkZpFC6G1xwsL+tCxtlhGzxyRqRqubz0vr5VIiMjE\/PtKsrKyAfhvXeN820pFvmRjx4Wo1GF1BHIHWgOIx8kaROypfLdteJ0PDpTJL7R6WqtRW\/mQM90Ntv8TMt8N55VlMeHfKoGrW7wa5uBfQaAa+NKBgabM7szNZyWYkk6dT5Ua3kh\/vEv7T\/wC8ah2eVVLaE3PoQ1aAXsxyqMaipDvfsuJMIzAWbIpHwrM1kB0rSN7MYWwhB5RrWaA1MxJNGViqBElww74rS9oT\/wBxI6Jp\/CaznZEXaTCMEAkHVjYDTrT7Nhn+rmIvGWPdBuMo7p58qJdgYLbmOe0D\/wCXi3OIfIUr7n7RCDGcz25sOpuRb4UXx20YxgUiDqXARWAP6wHHnSzsXALGZGldLtK7CzjgWJHzrjRPMTpNbDvLu\/uLvFmOn6Nf808X\/TTlsyW4iNtCLfAVn29BMw7KMrbsomUsbDKJWJsedyvwpz2VvFh40Ad9QtuXGuOnvGAGAvpS1jQdcUnwhb\/rFLG40n\/mL3vYzPf0e3xAotvztNZfq7R96NsU+vVlSBStvDr+tVHc+H6tiJJZspDNmGVgTxbiNOtCKqjNYHt5mm4vDxyWzqDbhfT8aSPpFhIinkNgGRFA6Dt4G\/A00tvbhgLDN\/CPzpO+kDaYlwpdPYaSOO5JDAgTNa1rHVON+QpaCto1r019cxLSA\/VpWA0BiBPic1vkfSte+j\/Zyvg0JNj2S2+NZjho2kwUqJYXnhuSxHspLply2PtXvf8AGzruxvJFh4UjfPcKFbLYg24m9waZk52P1UFbHaaOuz4hfQVT2liA8TRjTle1LEm++FLE5JbeQ\/OqS76wqT3H1\/VH5US5qYmC+IuBYlDeqPImMbUWwjLbxaTCD86y\/BD9GD5\/M097z7UWXBYmSO4U9ipz+0Q0zEcOGsR91qQoZAIwDppTMZ+vzmPzC29r\/wCAv3YVHwH5VoH0c45o4hk79luVHHW2lqz\/AHow7s6Hu\/4agjhb1JvRPdneM4VcuQ\/uED3k2uTVXS5MYVlY8\/5icwfUGUfVTTsScZjLhRkVeV7HWo9nbExCDP2l7BrgseWhF7c\/Ok6L6RXS9kbWx1N+HuryfpKkClcra36c\/dW58p06cTL\/AEh413t7jriNj4qWzFkCsBpxNjYW6fCqU26DqpJddL\/ClAfSVMAFymwqOX6TJSLZDa1uJ4UXr1ww+vymBF5IMMtsSTw9a6lP\/wAat\/o\/ia+U7\/kr\/P8A2itDeJXbbrK7GMlQWY6HqdNKhTH94nO1ybnxNef\/AA\/IzFVtcHmfP8qjg2S1yDxB5chzrw2AMp3B\/CEot75o1yo7KvIA6UV2RtibEZz2j5QpvyuOdR7M3QUYZsTMSQASoHMcvfRDd7YWXCzMR3lvr4Fb0YXgTtQAOSAtqbRjVuZBFxfj4Xq\/uziY5ZMkzsAbX5C1BMTgQwBB1trVvZOyGzI4YGxBIoQAGhMrFAe02LE7cw+GhJCNJ2YCqSb3GmgJNU8J9JUEs0cae07lSHBUAWNjmtY34W6ml7aO1MI1lxSsLLlXLfLc6ggDS9xz5aUUT6PoWw8mKRHSRXBRHuBlGW4KkX1uxHuqxXFbTzXwbjUTzKO8mJQzvnANyTpw41Ugw+EaO+V1N76Np8\/wodvLgpkmYsvcsLEcKHJnK+HT0ApC6p6JAhDeHDquHk7G\/Zhb97jqaQVIpz3jYxQvHcnOBe\/KkuHDsx7oJt0rsoAIHeaty\/s1SGLqBmFgPMkCnXeKEYfs40OZmCk3+8xA+AvStuqmaeNDw7QE+S6\/O1NmIf6xtZFt3Q4NugUfzrkS6gu5UEwhtTYX1dIizZjI6kjoFBYihGwdjT4yITR2Cnkxo99J2Ns4sf8ADglb3kZR\/vUe3NwvY4CIcyl\/eRpWPjHEWMr3zEHesCKVIxe6x4eEAW9rI7\/84qP\/AMPYvj2ZI8CPzqTGkYjaemo7eZvdEqRL8VNaTDNlTVRoPGluo7yrEfbMt2xhco2bCdDmmkfzMiKfjE1C8PiGcXjuwtqRfjz5UU3txN8aD\/ocECR0Z1eX5zCi\/wBGUAXDnT2jxtw4fhRabG8nbKVIA7mK3aNrmuNDbVePIG5GlWt4u7s\/DJe5eYufMBm5dBiFFapFh42sSFNr6EDjfp4WrLfpDnDSwKOB7WWw6M+QfCAUKj3Rpa1sypgyRhF5Z8TJrYnurHDrYAnQseVVGxTDr6GvOMizx4OLmS7fxyAfJK1LZu62FK6wJw5C3v0qj0CwLxJ6gK4Su0yw449a+vPYK2ZTfkDqPAjiPlWrS7l4RlvkI01s7j5NQ3E7i4UBmzSCwJFnJHxvSgouow5KANHeI22bpsoA+088Kt\/7cUj\/ADmHrS12dwFHE6Uxb7NbDYSMfbknkPmOyhH\/AAmoNstc08K9ZU9MwJ+ANMXi4J5h3bzN9ZZFBJuAANSdBwFC5nKkqwII4gixHu5V82ziWbGOqjUuADcg3sBVgbBxDk2AY8+8b\/EUeLpcuQWq2Jz5kU0TKTS1A8tFZN1sUDbJ8f5VGd1cXyiJ8rUZ6XKPumL9fH5EENJXhieNjarc+w8QvGJvSvDR4gLkKsV6FeHl0oDgyD7phDKh7iVM9dXw4V\/uN6GurPSfwZmtfM\/QI3AiJLFNSbm7HnViHcOBeEaDrqfyq2u1B98eor020Bp3h6ike74TqX4yRdhoiCPu5BwHKrGG2QgBAKgN7QsNeXWqLY1fvD1rkx6\/eHrXU0614oy0+6+HNrqungKmXYcA4FR7hVT+0l+8PUV9GPU8\/lXb+ZwrxMp39iEUzKuuSUFTyI4\/jatlwm8OHxGHFy+WRBmsrcxryrOfpF2G8q9pELm2ouNSOnuqLdbFYnE4ZYlngijVQgUAiZtL5vaF+nDrXYyU2MZlRcqgw3PtKMSPFL3osxCyNbUcdeFqGba2HEiiVJVVdDZiBfmLV4fAGKONJNXIIYXBuLm7A9bUs7x7uMZO3ibMlsxH3QDYU47+5YKKVOk8SjvhjSxtmOttKp4FGgHak2VgQbUP2riCzWPKvWxoGmkjj4oGBYcsoOt\/Dl76VlYu1xy0oqNO5eypDN2pBCZSQ3iT8Daj\/wBH6iXHzTfcBF\/Ek6+lqvY7tVPZwiGKOSyooeyBmsBbTQWuTpprpU+EwsWHLtGqxHKCyowIIBylr8wbE3FMFgRLgExY3\/xIlxMkS6l2hi+Odvhlp5fFrFEpbRI1uf2UUsf92kXZezZMRiRirFlu0hy6kE+wCOOiAUS3s2gfq7R3N5SsQuLEZ2Gf\/Ir12qZo2sQPuLAzSyOxGZUS5P3nYyP63FP8zy5CttWGUHxbQfE0qfR\/hi8csot+kkJH7I0X4Cmva+K7GPtCP8JWk\/2aM6j3uEHvrGevbpBjMY9uq5km8mKzz7RmHAyiFP2Q1h\/kiFaLuEUTCoCbE68D7uVuFZIwP1aFOLSSPJ52ARfiXrd9l7HRYkW2oUAkHnbX40ePR96\/yiHWyPgJZnmAiZwQSqk6EdD\/ACrEt75r4sqeEUMa+RKK7\/5neta29s0BQuY\/pHWMXH3ja96xWecYnFSuOE85t5O+noG+FYwUN7TcYOIf2Thc2NgT\/RxrfzC3+bVr+FACm\/AAX4a3\/o1mm44EmNnlNrZ8o8rk\/ICtNbFKnFbi99COPvt86o0sUCrJVGrI7eKHz+csEIL2+zp+HChm3GVYZLfdt66D51alx8TcTlvr3lOvvFxS9vfiGMJCEMzsFUAg6m9r28QtL9NlBJEJmOpRv+31cy7fqQGbCxjguGRiOjSl5j\/xBVTdlc2Li\/VDMf4Wt8bV63ymD7RxJX2Ucxr5RgRj4LXrdA2knl+5EfU2\/BTSu0p7zzsodrjWfkGd\/ibfhWn\/AEfa5ppFsGvkuOXAfDnWY7smyzN9rKFHDrrx48q1pMEcqQjMDFCtrXtm5g6npXqK2jCq3V2flI2ouzHtUOYWNAXZgOGgNEdmwBY7kcRSiGcRdqXa6cdTROXES9iJM5zaAgeXSgyaiKvvUWhW56l2eryAEaamh8WyUZythYk\/CvGM2jMq58oC8L9T+NQJtl0USGIi1rnkb00NkraBoUyxiNhxKxFuFdUU2CklYydqUza5bHSupf8AyvLTfQEQkwS2sQwP7Rq5Hs+MAf4mvPM1WsKupNr+J4VKmI0N1v0vXz2oz6f018St9UQaAvb9o1dw2BXln\/ib868wtqNPxolhr6Wtr041tzdIkX1VCbEsp\/aNSHDKAO+wHW5r7JibNaRT77fOq2JxK5S1rgcr1wM7TL6YfMPacjXmbUr7PxyYSZJMK2eWMyBu0TuXuQAB7Q7ra68RpRWHancYKp0BsAfx5UvbAiviHVlDFySBe5DEdeunxphIC2JMbOTSRtDG3N6FxH1dWwQaRwmQpK4N3JXKAR1NtW50dwW7BwsGI+ssXZhYIhdjHfUZjop8SNPGs122SsagghoiR4jK1xUm2tuYsOFGInYZiFUyOw1sQACT14UeNr377xLrW3badsvduXFYt4FKgp3nY8Alx3gOJ0INq1TY+464ZQsTBwXQyu4AJW+uUjgLcqzDaONnw80OMizoWiXvWIGbUMpPDkNK0rcLeQ46NzMwaRXt2OgAWwKuFFjJqCCDfypmkXXeKYsvu7T3jVTEYwPEEMeqIthlaws7EdDwB6C9Ut8sEsZXDRL+nnAi43CRcSVPIAcCaYtpJhsM8eImsrBu4E9tz0Ea6sdeApWxGNdp5MTikKSv3FQqf0cSm+W\/DMeJsfzrNZUW3M0Y9ZpOKkW0totB2phgkgQBVeNmvwsC6311HC2mlC9uTriMTDnGRRAHtf7\/AHY\/ENlzMb9aeMXE8EMeMaTMhUsVIUhe6WBSQezyBBvelLYS4lYnlw5iebEH9PEwBcRn\/DVQwsSE1sNe9TWAXYnf9Py8wV95B7fXeMG62z\/q2HZleMxqQO81n16cQwubX0oH9Jm1wMK0YJDSlEA\/UzZ3Nxp\/9tB+\/QebEyAwmPvgMUYWOj3A7y6AW4EHhflpUe8x7baEEBFliUO\/H7QznidP0YT3mg99Bm4Pymsqg0JU2PswyY2OMLmWBIw3QEEM3+dmHurX\/r6LoxK+fA\/vcKTtk7MVJjJhHCNIwDq5BW5a9zfVeN9DRrabTwNklHteNwR+ydfTWhbKCBXaN9MHYypvztPJGzBvYhkcW17zDsoyPJ5FPurJN3xaRW\/0aPKfcCF+JFNf0iY68WRT\/iyqtrW7sagtoeALSR++OlbCnLBO\/wB5liXyHeb5L61qjaJb7VeI\/fRrgMkfaH7alv8ANlFxzFr6+Bp9GFUmxA5cNLX4cKE7oYHs8OmnBVQ+mvxPCmEw63PM8vDlThlawQZOcQW+eYNm2UpJALA+QPx0oFtqHssTh1Yiy3ma1\/ZiBk1059nanmFLZjxvYAdP6v8ACsz3+2h\/9fKD7MK4dR4yMAT\/AApPT36nIU0k7fRg4k91mZMJSxeRj3mJJPidT8TRrYgyYHFSfeKp8h\/zmgTiyDxpgxw7PZ8EY4yMXP8AX7y+lS+JQJb3NwQdow1wufMSACbKCTa+h4WsetaeuKQyMySoA3J1ZSNNOAy+6kzcDDq7MpzKqQtchSQCSpvbhqARfxpobZSsoeOeJgdLE5TfoRy9a99MfTt7MjUQAPh58eZC2quNjL+JRzCUjAfNYdxgdL6nQ3r7iJhkAe4JIIWxFrXuT8aGf2fPESTDmFumYe4qdKhfa7qth2it+0Sv8LXpg6HV\/wDIhhd39E\/pFD2\/CX9ubRR4VEbGzEBUAGtjYk1b2vZMPkYG1l49Qf5Glo7WJN3jiY9ctj6rap\/7XSRRG6yWJsLPfU\/tfnQZ\/wCG5gBpXjfkftDRquVH36jUlQjWGntGupG22ginljU5grEA18rx6xyrSfEbjNZtQByIIJ\/GvTSre6qBbmCfjerUmz5AM4aEnjbOCT62r5FhuFxl63K8fceFeICJ9EROwxLDuqDryOtWizfbBsBpcj52r7FAoPAsOqW\/Gr2HMhN44yyjlIVt62rbmVKEc6se81h04k++quJhUk91gvXSxq7jIEz5WUK\/LJrY+6qjwNH+te4ux\/5aEtCCSiBH9gAdczaW91DppkjlBUjTWyjTQ6m9XoMKxN1j7QdLXFesVs52svciQ+0uXW3neiGRRsYrJiJIKiLG9MzGacOxbv6Em\/dKi3wrUNzMLh4cNFLdBiyoM+dlWVFCjSPMRZSMpJU3OovyGa744fLOQGzAxp3utrqT8BXTStNhczsWZbC7Ek2yqOJ8QfSqFNAESN8eokfW0cNsqsjnO6zK3nwv05W8OFJGNh7Ke8TdmttLHQ21sa7dydzNGouxZggUanvaAAedq1nam7CyKUyRhlRe0IHdDW1AIGpuDwFOIKgE7\/OLBU7CAvot21ERKshUYpWNpHOrxMBZA7aKQQdNAb044vDx5HedkSIjvGSwFveb+l\/A1hO2cGcLiNGPUEX1F7fhwpn+jTaGHfHLDjlV1KkRZx3FkBuCwPdNxfUggVy71FuKs3Grbm1BiliGUpgYdVXKbzMPZ7o1EQ0zMb\/HSpu8BiZvq6nWSQsxWwNgL3W\/DQC1aRtbCWBDEagANbuMBwDKNFI5H\/tQDAbJwyzjElQjBbtlK5eXeIHAnqLX86MIWyW5mLmXQVA3gfbkH1BpB2zFRGXJ1zWNxZrHUm1tdDcaUm7l9srPj+zWWR3NlcZsy8XOS934ZRbhr0o1vxtp9rYtcJhiRCou72OXKurORxIGtgdSSOdq87OwkLOwVSIlASPXUDjmPidDfqSKF8m5YQ0UtVyLY20O2dpmjSJHucqAqAwGqgXJ5HT3cBX3Ye3UmvG4Oc5mJOUgKCxUW0NgvO\/PhwohPHNJHG8kbBG1WVdGkXo7XsWtfobEUPK4aBZMXkJcKc3eBRgWBy2K9y5VV4\/at4nhi2L5Qd+Pib+rhtkJI0VQ5ifvjib4kre4gUof2yzM\/ho7svkgq7hNgzNDhhGocgdo0d7M2Yg6X0JygDjel\/AwNiJ0VzczSXc9Rcs5+ZrQdr4TF4U\/WCiNCxuhUq1r6qCR7JtYXII6XrWViPaOIrEATR7x23Z2\/BkEZBhcE5kcFbE30udDy53pkfKe96UnwYpZI4mxSRhZFDK+uYXAOUEaj3H0qOSMxqBhp73LdzNppluMtiC3e4i1+VSo3eObHv57RtnxwVCToACdenyvWJ\/SBij9XiS9zNPJKfJLRr\/nM9PGO2\/IYnV49SDdluOGpGXXiBa1+dZpvvNmx3ZXuMOiQk9WQXkP+1ZzVStq3kxTRF3Erdgi68AB40w71W7WKBeEUaiw6n+QWhm7cHa4uPTQNnP7uvzsK9bQxHaYiR78WIHkNB8BTsI1ZAIDGlJmgblR5MJiJdMzlUXQX8rcb6+RtTU+zlfERxWsqRLcgWzEAX18zx86BbrOyYeNTmtmDrbgGOlNWBxuV2aTW4A0FrDy586uc5VLOve\/78RQKCg09bTwIM0MaMUJzXYE3CqL9aX\/AO0sRIzAIsoBN8yAiw8eVMmIxqPM0ubLaPKNORGp8+Aofuti1XtkuAoJYFuGU6UGDOyYiStkAf3P+pmRFd9jVwJs6fD4iRkaAxm2hQn4gg2r7iMDh4W7QykKjXs6kXtrp14U17A2eneZFFnYkHmRy8qVPpLgYxMwFlQ2J534fjRv\/FMgcrjJArgm\/wBYwdIAoJO8zDFSZ3dz9pi3qSa6ojfkD6GuryyL3jY+ySozDIpF+Ra\/9CvcADsFDgefD1ItUSN9pcyg8Ccq38r8fcKsJh1PFdfBmHyW1eZtPfl9IpEuUcIv7YsfK1SNLmjyySEnNw\/nVbCO0WZhmIFs4WQg+HFdePKiWEWLE3BOJj0J1CldPG1YTOkOzp4IzfLIzX4Cx1HOvW0NpyOwyxFl5gqb+R4ihuLwQU3jkY25sMv43r1FtmTPYO9ybZR3lPlwNCRcISxitozqf0Loi8kK5SPPrQlcKxLNIMzsdGuDb3GiW1CFdQDrlBINyVJ4jNz99D5MRrqfg1YAa2hwbtnY0k7xLFlLBHBBYC9ip0J0vrwNUNk4RxFOjI3cAzdFOdgLnhr+FHEi7RkSG+YsdADfVTfj+yKHfW5cP28AsokADhlubI2lumhaqsdkaZFlUK2qB93MYcNjIZgA2SRWseYzFT5aXrc8HtvDzljBIpLatExCyA8+6faHiDX5+x3dlt6e8D8qJ7bsQHHMA+ov+NUu\/HgyJMX2q5H6R+3x3VSUFvZIBsHBHHo3Osm2lh5YJRyZeBBB4eI41LPtKWw\/SSWXgCzWHuvXvCQnEAxhhm9pST04i48CfSiVT9onaKdrGmt42bE+kjFYbumXNEyDKrrmCtzHHNbjwPTSi+zWx22C0vbLHhUbKwVNAcoJ\/Rrq7ag971rNtp4IxrlJuR04eNNH0SbxHDTSo4ZoXTM6jiMumcC4uQGNxzF6IFTuOID6l4Avz3jVPsJFQwws8aEqxY2DSuDdTIx1sp1VFXKDzJqltHAyYZGa+fN3c+tyx0UEfYAXkfDyp1xfYyKJIWWSOS\/A3QnmrA6qwHM2J58Lirh42F0YPdh3VKNIbW4F1JQLys7EC+p1FDot\/duPhOx5iE22\/GMuAhaXAnKgVjCVIuStwhCgHS4F72PA292Jb+4kIRg0YMb5pSvDQd0X5\/et\/qzT7vlv0IIjHEc0rLY63Av1INntY6+OhPFcr2BsmXG4nID3mJaSQ27q3uzHlfkBzJAp+ZlZrHG8FF0ih3qWt3oFRWld8naAwxta9hb9IbdPsXHU1NPgZ48qsS0BFlZXYx668iMvoKMbQKpjYsqgRQr+jUa2Aui3P2iSGYnyNFDkkmRcMpRmzNKo9gooJY5DpmJsBbiTzqfU2rbvK0pBv23g3ZOEzRxo7l1uzBb5rAtYqBYC4VVOg60S2rvCkONaPIkipljYK1i2UHPlYcCJWk88tvGquB2cElMkbGPMe9Hr2bdCALFGHhfoKpTbqxzFvrGKaCUklCY8yPxNgwN83E6X8bGqelxpZGUUDv4v8IjPq5WMWL2klhIwYLGv1hlNswVGzKpPBs14geA79Y685btJGN2ckk9STdjTvvPjxFgDHc9piCigG91ij77XPVmMWn6lIc2gC9BrSwAPs8Rbkk7xi3OgYJiJ1UllTKgHNjqfkvrQjBkqwU3Vr210+dN2xJRhcPDm1Mt3YdL2y+PC3Wicww+IHeVW8+I9\/EUKZjifUBD9LWlRp2Hgonij\/ShZNBkHz\/nV07LkVspkUBhdSeJ1tYikKPANFrC7C3AX\/oVNitr4hrNLncKLZgOH4fGvSw9Wjmi1fiJLl6dwbqNU2HkQke1bpVVpFbuuv4GhWA3jY6Zs3g3H86YsKgxSMxOUpw8zVjUBqaiPIiURgdoTwu1jCqgrZRoDSZ9Iu1kaFY1N2eTM2nLU8fSmPG7FlMKkOH0vl6eXWs13jieTEJCAQ7ZUAP3mbKPia8jLjRbZeSZUjE8mat9Hu6sLbOw7yqCzqXuejuzL\/lK11L28++bYTEvhYR+jhCRrbh3UUEeoNdSvVraF6JO9wAscllEjQHKAAS3eAHAXTXSrzOoAKNmf7RLAL\/mbMaXjMdMliLa93QfvC1\/OrEU3Z5WjdVe+tjcW0t11415ZW59BGEbYxCro0aL4AfMA1JDgcXKQ5lK9CzEegNvlQmLa2IY6Sk+UY\/6RVraUErspbMpyi5awLHrlDafyoSK8ToSl2o8JyNPnI0IspH+6TVd5Q1zA8cdxcjKQx66n8K+bI2QNS8i8iSsiBh046j31e2ttiOMDMrOOAbLAw9Val99p0DBuGYNe2t78eoPTwqPMWOURv+6rX\/71OuPw\/ZtMsPaOht2fAAHXMVBOg8Kji38cjJkjW+nd0A8eFGqseBCO28vphXAHZmRdQc0iKGFuQ1oVvlhwOylZpGd3yuzBQCCMosFFudFZtkqEWRneZmF7r7Jv49BQLbuHdkWIkJdhlUDS\/Ed7m2ltaemNsbAmRZOox5FOmJ+2b5kfyv7x\/wB6JzPngTwXL6XHytVbeGGyMOasfUMfwb4U6R7EjxOy4J8IgDxrbELfi3DOSTYXI8tbU1z7fwMWhrIb7iZsgGYBvZzC\/lfX4Vve2cJGhiZETItrWUWtbQ1gWKXU1qG7u96Lhoknu0eQDNbVTzHiKfrpakhxEvY7SHfXZSyLIwA0Usvu1I94vSFsPa4w7q4BzI2YEc1OjodDoQeYNaxLEHUmF1kQ8r60i7a3RQktEezY\/ZYd33dKLFm9Nrg5MeoQTsTb5wkzPEzLG4OgN9NQubk9iNffpRLH754mWNoY5gqk94JGiFhYWFwARz0FAsbsGdFF1vYn2TfTS3xv60OwsLGRU4MWAF9BckAX8KygxsTi5XYiN+wtgS4oBiSqAd6WQHQdQvGQ9LceoovtDZ4QDDxWhjQiQmRgJZnHBntfQG+WMDTU8aL4XHv9VZZo2+sYbJHPHmIbItgsqkHhkKAsOFg3Bqnnw2ULnUx5gGWTRSb+zndmN+PEaG1BkJXaoa77xK2wZFcSyKUBChQM1iMo1JbUtzsdfSmzcjExh17VlWTEHKhYd0RxsM2vItJa17C8RuRe9SMc3cmAudA5\/wAOU9GdzfS+hA6Vc3d2KpxKEsoRECAZSVXKOAJ9sE3Jbq2o1p3QhXyDWa5hZ8n\/AFkDv+kecVu+kqZZx3rayXAYDItrm1peDnMR4C1Zjs2dzIbMSh4qdQb6KATw1rbMNPEgVXax4LcAg5tBY21vflWO\/SPtmPBCSLD\/AOJI7kE+0C1wzeGVTlHib8Vp\/Uuz4wjE0Dt84jEPTcmZ1vbjxPi2yG8cfcU9cp7zfvNc+VulCcHhjNMsY+01vdzPoDUa6LTLubCsSvi5BoLInU3Pet\/XI1MxoTFGpt4+bHw+zMTiHgxTsjqqRx2bKl7XJDcCbkrZtLKKCb7bupgpQIcQHFyOIDqRYkMBw4jXS+vSheJ2QsuaXCyhzzRiAw066X99vfS9CXBaKRWDdGuDTRnQoVr68+flKlx04ttowx7VdB3rMPDj6cD8KftgbxYNYRhp0yP7RkGt82ozjiLCw91ZZgcOySDPfINSD4a19xMjSOz2N2OluXT4WqQoDNY6amo7ybtYIYaTFCaPQd3Ibkk8OH5UgYDbEsd+zkJB4j+taP7wCPC7Ow8bC8k7GRrcSBot\/ADX30Cj2KsozQtm0ubcvC3GnEnAALPyit3N1Duy9+GQZXvbx\/Oq26DritrjEMAI4s+Ib9mNe6f4ihoAmzZc+QjMPl+NGN3k7DZ+OnOjSlMMl+Nj3pLfukD3UZy+p4\/KJbGFi9j8cZZZJW4u7Mf3iT+NdVCWexNfKCdDeExjCQOzXI4ZhmHpTBs+dJpLLDGZSDY2Kp5lbi3ur7XVBkUVc94S\/NsvEn2oorA6ZGAFuljc\/I0MxrsndcLqObE6fw11dSVNmau8ozYlWyh2bKtwMq3t72a5opBsAyKvZuqxuAdQcx8+Irq6jye0CpsrSbNhicCOYma9gFVxr+0SotVeN1dmLiJyoux7K1h+0CCfSvtdWdr+E2X4I0UkLHlIF+6xHpVjH7JaRAxiEiNYjNIQb+Q0uPOvtdT8CawSSdpF1WT0yKA3ijt6HIHj0+ybgk2OU3FyATwHpVfBzscAyhiMrm4BIuOIB66m9fK6nJ\/j9JO\/N\/A\/rBM+tE9mSXw5X7rGurqx\/szcR\/7PylYY2SJs0bsp8D+FFcNv5iB3ZVSUeIsfWurqNVBG8TmYq20j2jvSsvsw5Dz1qnh2V27\/AD5jiOhHiDr7q+V1OxKFYVElyym417c3gdVw+KRgsqq0MoXNY9mRlJUjKQwd7gX4DSmPdneKPHwHDKCJUUsqHgv3gpOhj\/VJuOHerq6m\/wARxqmZq+B\/qAZvTGwB+Mr4Ys5aIFQ6ggh1LkA39hy1gDfmCR40W2eysyxwpPLiEtYSOmRDzuxOl7k3UH46dXVDrK8RxQHmfd9d42wgVG0dcrMEJKh2F+6WA1462tzN+FYvtTHviJWmkJJJ63sOQuenx419rqcHZ\/c0U4C0BPWxtmPip48OhALta55AasfGwvpThvdiIYv7phxZYu6QRqWAGt\/P8a6uoT9qo3ABRP1xPWG2IpjjyEq4GjDS5514GLXMqYxQyg2Ei+0Px9PSurqFhvNQ7S1vbu0IYVxOHkMyMO8rDKVHncXpf3bQ4rERQKxGeRVYHiFuL2PA2F6+V1bh93MHOa\/pDn0tbRV8Y4iW0capCnuGZyBy5D3UoYLGgG6lkYcxeurq9nE1UhAIbm955ysSNU0XYcDT4cSSm7Ekqw4gCgu\/OMkTscJcWSMStoBeRwbm446fOurq8oqFy5ABwa\/uZ6DG0W\/ERWYnW1dXV1bFVP\/Z)","45b73ebc":"**> The main difference from Epsilon greedy is that in Thompson sampling we will for each bandit sample the probability from the prior and pull the bandit to generate the reward. The differences of Thompson Sampling algorithm from the E-Greedy algorithm are that it\u2019s a Bayesian approach and it doesn\u2019t take the shortest route to fetch us the reward.**\n* Steps for Thompson Sampling:\n* a)\tWe need to set a prior distribution between 0 and 1 for each variant k\u2019s payout rate.\n* b)\tA parameter Theta is selected from each k\u2019s posterior distribution.\n* c)\tSelect the variant k that is associated with the highest parameter theta.\n* d)\tObserve the reward and update the distribution parameters.\n","1c98d76d":"> The greedy algorithm wastes the resources by failing to write off actions regardless of how unlikely they are to be optimal.\nTo overcome the cons of the Epsilon-Greedy algorithm Thompson Sampling comes to rescue.\n","b567f60c":"**The Thompson Sampling algorithm is the most effective and dates back to 1933 given by W.R Thompson. The algorithm is related to Bayesian setting where there is known prior probabilities and the reward distribution is randomized such that the arm selected has the maximum probability.**","fb43a135":"# > What is a Multi armed Bandit Problem?","3517e0d3":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQOcCq2b1AQ-wf2_qYD2YwaEhbIRUgm5YWwIA&usqp=CAU)","8e7691bc":"**Uses of the MultiArmed bandit**\n* Used at the place of A\/B testing used in Market reserach or website Optimization.\n* Thompson sampling can be used in areas like market revenue generation and is currently being used in top e commerce sites to increase revenue.\n","5b7b3ee5":"**Consider that we have to figure out a way to allocate the limited resources (such as time, money, turns etc.) in a set of competing options in such a way that we can maximize our expected ways. In these scenarios Multi-Armed Bandit problem occurs.**\n\n\n\n**Multi Armed bandit is a type of reinforcement learning problem which is based on exploitation and exploration trade-off in sequential decision problems. The gambler pulls the arm of the bandit machine there are several probabilities of rewards associated with that trial. So the gambler has provided input to K- arms of bandit machines in the hope of winning huge amounts, our aim here becomes to maximize the winning .If we know the probability of what amount we will receive after pulling an arm our goal can be easily achieved.**","183f4ee6":"***Multi Bandit problems can be solved using the simplest algorithm which is the greedy algorithm. Its name justifies what it does it takes the shortest distance to compute the problem. ***\n> The Epsilon greedy algorithm follows the below mentioned steps:\n*  **a) Compute the expected reward.***\n*  **b) Pick the arm with 1-\u03b5 with the highest expectations**\n*  **c) Apply the arm and observe reward.**\n*  **d) Update distribution.**","98643179":"# Why Thompson Sampling?","2e70eaeb":"# How does the Thompson Sampling works?","71cf3a8c":"# HISTORY"}}