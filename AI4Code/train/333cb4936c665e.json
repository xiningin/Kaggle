{"cell_type":{"70d5c208":"code","d92005bb":"code","6cef0d8d":"code","dbda6909":"code","96bd3201":"code","a076f6c9":"code","94e0c51e":"code","80881b1c":"code","b67314fc":"code","f7f8ac1b":"code","f9edb19d":"code","ece587c6":"code","6c1fa920":"code","db0a5902":"code","7390f42a":"code","7aed688f":"code","c5c98846":"markdown","98d915b4":"markdown","b4e18dcc":"markdown","e9b00f97":"markdown","c0c5a479":"markdown"},"source":{"70d5c208":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom PIL import Image\nfrom matplotlib import pyplot as plt\nimport os\nimport fnmatch\nimport os, cv2, random\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d92005bb":"img_liv=Image.open(\"..\/input\/carlos-livinho\/images\/Livinho\/55.livinho.jpg\")\nimg_car=Image.open(\"..\/input\/carlos-livinho\/images\/Carlos\/IMG_20200224_094615.jpg\")\n\nfig, ax = plt.subplots(1,2)\nax[0].imshow(img_liv);\nax[1].imshow(img_car);","6cef0d8d":"def read_image2(file_path):\n    img = cv2.imread(file_path, cv2.IMREAD_COLOR) #cv2.IMREAD_GRAYSCALE\n    b,g,r = cv2.split(img)\n    img2 = cv2.merge([r,g,b])\n    return cv2.resize(img2, (256, 256), interpolation=cv2.INTER_CUBIC)","dbda6909":"train_dir = '..\/input\/carlos-livinho\/images\/Livinho\/'\ntrain_car =   [train_dir+i for i in os.listdir(train_dir) if 'Livinho' in i]\ntest_dir = '..\/input\/carlos-livinho\/images\/Livinho\/'\ntest_liv =   [test_dir+i for i in os.listdir(test_dir) if 'Livinho' in i]","96bd3201":"#train_carlos =   [train_dir+i for i in os.listdir(train_dir) if 'Carlos' in i]","a076f6c9":"test_livs[0:3]","94e0c51e":"train_car[4:7]","80881b1c":"def show_cars_and_livs(idx):\n    car = read_image2(train_car[idx])\n    liv = read_image2(test_livs[idx])\n    pair = np.concatenate((car, liv), axis=1)\n    plt.figure(figsize=(10,5))\n    plt.imshow(pair)\n    plt.show()\n    \nfor idx in range(3,3):\n    show_cars_and_livs(idx)","b67314fc":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\nimport fastai","f7f8ac1b":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","f9edb19d":"path = Path(\"\/kaggle\/input\/carlos-livinho\/images\/Livinho\")\npath.ls()","ece587c6":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","6c1fa920":"data.show_batch(nrows=3, figsize=(7,8))","db0a5902":"path2 = Path(\"\/kaggle\/input\/carlos-livinho\/images\/Carlos\")\npath2.ls()","7390f42a":"np.random.seed(42)\ndata2 = ImageDataLoaders.from_folder(path2, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","7aed688f":"data2.show_batch(nrows=3, figsize=(7,8))","c5c98846":"#Codes by Rohit Verma https:\/\/www.kaggle.com\/deadskull7\/cats-vs-dogs-images\/notebook","98d915b4":"#It didn't work with Carlos e Livinho. Then I wrote only Livinho.  ","b4e18dcc":"#Codes by \u00dcmit https:\/\/www.kaggle.com\/zayon5\/image-classification-dog-and-cat-images\/data","e9b00f97":"#Finally, we have Carlos!","c0c5a479":"#It didn't work. No concatenated images from Livinho and Livinho. "}}