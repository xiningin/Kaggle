{"cell_type":{"1f54a3ad":"code","62d5982c":"code","21c19932":"code","2358c5f0":"code","d02c7121":"code","e0604f26":"code","da561216":"code","e385e243":"code","52aa6ec2":"code","328cb6b9":"code","af6b372a":"code","82222560":"code","002d3a36":"code","cc4ecb3e":"code","cf09873b":"code","553234c8":"code","9e24c4f5":"code","78cc77d1":"code","010efe12":"code","fc3ad5a2":"code","5ec3e8dc":"code","65e736d6":"code","835abfe1":"code","04ad97bd":"code","d68bccd4":"code","91cc4471":"code","85e583d9":"code","d608052c":"code","350e4780":"code","dac67a64":"code","fe12d71a":"code","7db56d1d":"code","aa9e0ee5":"code","00b22668":"code","b9f485d6":"code","bae0c893":"code","a4591e02":"code","bf59dfb8":"code","a13ec2c6":"code","30a875d6":"code","54ab5ba6":"code","f734e94a":"code","c87e4599":"code","9f860a1e":"code","ea181ea0":"code","6a363b63":"code","4be676e2":"code","b4821117":"code","c9b752a9":"code","20c90ea6":"code","b0632214":"code","7cb57f4c":"code","87a1ce6a":"code","4bb1b9bd":"code","5fb49645":"code","1ff1dcd0":"code","bb12f0d0":"code","88fd4172":"code","3168fbdc":"code","ee475ca2":"code","346af2fd":"code","ab36cb98":"code","e59703f0":"code","8d356fe5":"code","da95399c":"markdown","0a1085e5":"markdown","d02e2089":"markdown","d4c3b46e":"markdown","f243e2ec":"markdown","48271427":"markdown","035de463":"markdown","aad6ab72":"markdown","4a3fe228":"markdown","6f2c5b26":"markdown","d72beb75":"markdown"},"source":{"1f54a3ad":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \n\nfrom xgboost import  XGBRegressor","62d5982c":"%matplotlib inline","21c19932":"train_data = pd.read_csv(\"..\/input\/train.csv\",low_memory= False)\ntest_data = pd.read_csv(\"..\/input\/test.csv\",low_memory= False)\nstore_data = pd.read_csv(\"..\/input\/store.csv\",low_memory= False)\ntest_copy = test_data","2358c5f0":"print(\"Shape of Train data :\", train_data.shape)\nprint(\"Shape of Test data :\", test_data.shape)\nprint(\"Shape of Store data :\", store_data.shape)","d02c7121":"train_data.head()","e0604f26":"test_data.head()","da561216":"store_data.head(100)","e385e243":"train_data.isnull().sum()","52aa6ec2":"test_data.isnull().sum()","328cb6b9":"store_data.isnull().sum().sort_values(ascending = False)","af6b372a":"store_data['Promo2SinceWeek'].unique()","82222560":"train_data['Store'].unique()","002d3a36":"train_data['DayOfWeek'].unique()","cc4ecb3e":"train_data['Open'].unique()","cf09873b":"train_data['StateHoliday'].unique()","553234c8":"train_data['Promo'].unique()","9e24c4f5":"train_data['Store'].unique()","78cc77d1":"store_data['CompetitionOpenSinceMonth'].unique()","010efe12":"print(sum(train_data[\"Open\"] == 0))\nprint(sum(train_data[\"Open\"] == 1))","fc3ad5a2":"print(sum(test_data[\"Open\"] == 0))\nprint(sum(test_data[\"Open\"] == 1))","5ec3e8dc":"print(sum(train_data[\"StateHoliday\"] == 'a'))\nprint(sum(train_data[\"StateHoliday\"] == 'b'))\nprint(sum(train_data[\"StateHoliday\"] == 'c'))\nprint(sum(train_data[\"StateHoliday\"] == 0))","65e736d6":"plt.plot(train_data['DayOfWeek'],train_data['Customers'])","835abfe1":"train_data[['Sales','Customers','Promo','SchoolHoliday']].corr(method='pearson')","04ad97bd":"train_data['Mon'] = train_data[\"Date\"].apply(lambda x : int(x[5:7]))\ntrain_data['Yr'] = train_data[\"Date\"].apply(lambda x : int(x[:4]))\ntrain_data[\"HolidayBin\"] = train_data.StateHoliday.map({\"0\": 0, \"a\": 1, \"b\": 1, \"c\": 1})","d68bccd4":"test_data['Mon'] = test_data[\"Date\"].apply(lambda x : int(x[5:7]))\ntest_data['Yr'] = test_data[\"Date\"].apply(lambda x : int(x[:4]))\ntest_data[\"HolidayBin\"] = test_data.StateHoliday.map({\"0\": 0, \"a\": 1, \"b\": 1, \"c\": 1})","91cc4471":"train_data = train_data.merge(store_data)\ntest_data =test_data.merge(store_data)","85e583d9":"train_data.head()","d608052c":"test_data.head()","350e4780":"train_data.isnull().sum().sort_values(ascending= False)","dac67a64":"test_data.isnull().sum().sort_values(ascending= False)","fe12d71a":"test_data[test_data['Open'].isnull()]","7db56d1d":"for i in train_data['Promo2SinceWeek'].unique() :\n    print(i ,':', sum(train_data['Promo2SinceWeek'] == i ))\n","aa9e0ee5":"for i in train_data['CompetitionOpenSinceMonth'].unique() :\n    print(i ,':', sum(train_data['CompetitionOpenSinceMonth'] == i ))","00b22668":"for i in train_data['Promo2SinceYear'].unique() :\n    print(i ,':', sum(train_data['Promo2SinceYear'] == i ))","b9f485d6":"for i in train_data['CompetitionOpenSinceYear'].unique() :\n    print(i ,':', sum(train_data['CompetitionOpenSinceYear'] == i ))","bae0c893":"train_data = train_data.drop(['Customers', 'Store','Date','StateHoliday'],axis= 1 )\ntest_data = test_data.drop(['Date','StateHoliday','Store','Id'],axis= 1 )","a4591e02":"train_data.head()","bf59dfb8":"test_data.head()","a13ec2c6":"sum(train_data['Open'] == 0)","30a875d6":"train_data = train_data.drop(train_data[train_data['Open'] == 0].index.tolist())","54ab5ba6":"sum(train_data['Open'] == 0)","f734e94a":"train_data.shape","c87e4599":"train_data[train_data['HolidayBin'].isnull()]","9f860a1e":"train_data['CompetitionOpenSinceMonth'] = train_data['CompetitionOpenSinceMonth'].fillna(9.0)\ntrain_data['HolidayBin'] = train_data['HolidayBin'].fillna(0)\ntrain_data['Promo2SinceWeek'] = train_data['Promo2SinceWeek'].fillna(40.0)\ntrain_data['Promo2SinceYear'] = train_data['Promo2SinceYear'].fillna(2012.0)\ntrain_data['CompetitionOpenSinceYear'] = train_data['CompetitionOpenSinceYear'].fillna(2012.0)\ntrain_data['CompetitionDistance'] = train_data['CompetitionDistance'].fillna(train_data['CompetitionDistance'].mean())\n\ntrain_data.isnull().sum().sort_values(ascending = False)","ea181ea0":"test_data['Open'] = test_data['Open'].fillna(1)\ntest_data['CompetitionOpenSinceMonth'] = test_data['CompetitionOpenSinceMonth'].fillna(9.0)\ntest_data['CompetitionDistance'] = test_data['CompetitionDistance'].fillna(train_data['CompetitionDistance'].mean())\ntest_data['CompetitionOpenSinceYear'] = test_data['CompetitionOpenSinceYear'].fillna(2012.0)\ntest_data['Promo2SinceWeek'] = test_data['Promo2SinceWeek'].fillna(40.0)\ntest_data['Promo2SinceYear'] = test_data['Promo2SinceYear'].fillna(2012.0)\n\ntest_data.isnull().sum().sort_values(ascending = False)","6a363b63":"train_data.shape","4be676e2":"sum(train_data['Sales'] < 0 )","b4821117":"test_data.shape","c9b752a9":"train_data.head(100)","20c90ea6":"categorical_train = train_data.columns.tolist()\nprint(categorical_train)\ntrain_data[categorical_train].corr(method='pearson')","b0632214":"train_features = train_data.drop(['Open'],axis = 1)\ncategorical_train = train_features.columns.tolist()\nprint(categorical_train)\ntrain_data[categorical_train].corr(method='pearson')\ntrain_features = train_data.drop(['Sales'],axis = 1)\nfull_features = pd.concat([train_features,test_data],ignore_index= True)\nprint(train_features.shape)\nprint(test_data.shape)","7cb57f4c":"full_features.head()","87a1ce6a":"full_features.shape","4bb1b9bd":"full_features = pd.get_dummies(full_features,columns= ['HolidayBin','Assortment','StoreType'])","5fb49645":"full_features.shape","1ff1dcd0":"full_features = full_features.drop('PromoInterval',axis = 1)","bb12f0d0":"train_features = full_features.iloc[:844392,:].values\ntest_data = full_features.iloc[844392:,:].values\ntrain_sales = train_data['Sales'].values","88fd4172":"print(train_features.shape)\nprint(train_sales.shape)\nprint(test_data.shape)","3168fbdc":"#train_sales = np.log(train_sales)","ee475ca2":"xgboost = XGBRegressor(learning_rate=0.009, n_estimators=500,\n                                     max_depth=10, min_child_weight=0,\n                                     gamma=0, subsample=0.7,\n                                     colsample_bytree=0.7,\n                                     objective='reg:linear', nthread=-1,\n                                     scale_pos_weight=1, seed=27,\n                                     reg_alpha=0.00006, random_state=42)","346af2fd":"xgboost.fit(train_features,train_sales)\n","ab36cb98":"predictions = xgboost.predict(test_data)","e59703f0":"#preds = np.exp(predictions)","8d356fe5":"pred_df = pd.DataFrame({\"Id\": test_copy[\"Id\"], 'Sales': predictions})\npred_df.to_csv(\"xgboost_4_submission.csv\", index=False)","da95399c":"# Missing Values Cleaning ","0a1085e5":"# Machine Learning Model","d02e2089":"# Submission File","d4c3b46e":"# Importing The Tools ","f243e2ec":"### Concatenate train and test data to be the same number of categorical labels ","48271427":"# Get the exp of predections","035de463":"# Importing The Data and take a tour in the data ","aad6ab72":"### Split the train features and test features from full features data frame","4a3fe228":"# Get the log of Sales","6f2c5b26":"# Categorcal Data","d72beb75":"# Drop Some Data"}}