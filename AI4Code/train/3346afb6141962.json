{"cell_type":{"05e5c1f2":"code","ac4a33fd":"code","38a0263c":"code","507445c5":"code","4406d5d2":"code","80ffbd2b":"code","d868c572":"code","f7338924":"code","dfe75750":"code","fdc9d2ae":"code","46e83a58":"code","5f81abd0":"code","dc3f1500":"code","5d463eb2":"code","9bd1d0cf":"code","8b809a8e":"code","a8be74ad":"code","a2804d59":"code","32b6ebb0":"code","0c401b2e":"code","28eb094c":"code","d96ac529":"code","59bb6cfc":"code","4599b5d1":"code","46e550de":"code","9251850d":"code","f229aa8f":"code","4886cf55":"code","bf1e04df":"code","daf6d47f":"code","94e501f4":"code","a8465524":"code","3aa04fb0":"code","1a959cd5":"code","b6e10360":"code","e6a9f988":"code","eac50053":"code","ea5ca496":"code","7951e96f":"code","5042c698":"code","c8b6fecf":"code","fa03c60d":"code","9b37107e":"code","73483da6":"code","c7055249":"code","5effc8a5":"code","b78fc6be":"code","9b270d2d":"code","43f6d169":"code","ba1a53f8":"markdown","1b70aa5d":"markdown","7c4394bd":"markdown","74bea8d8":"markdown","8a0cc425":"markdown","f3354534":"markdown","3e8bfa8b":"markdown","47da149a":"markdown","bec39e10":"markdown","f7867b97":"markdown","0e9f8cec":"markdown","c22bc5c5":"markdown","739a1f95":"markdown","28e3d5f9":"markdown","87c117e1":"markdown","dc69cb80":"markdown","2474d233":"markdown","d685dbd8":"markdown","1f541ea5":"markdown","71ded1b8":"markdown","c35c1085":"markdown","a4349b0f":"markdown","9aac0268":"markdown","6c9c9d8f":"markdown"},"source":{"05e5c1f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ac4a33fd":"#importing necessery libraries for future analysis of the dataset\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\n#%matplotlib notebook\nimport seaborn as sns\nimport pandas_profiling \n\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom wordcloud import WordCloud","38a0263c":"data_dir = '\/kaggle\/input\/new-york-city-airbnb-open-data\/'\nfina_name = 'AB_NYC_2019.csv'","507445c5":"airbnb_df=pd.read_csv(os.path.join(data_dir,fina_name))","4406d5d2":"airbnb_df.head(10)","80ffbd2b":"airbnb_df.shape","d868c572":"airbnb_df.info()","f7338924":"airbnb_df.head(4).T","dfe75750":"airbnb_df.isnull().sum()","fdc9d2ae":"airbnb_df.describe().T","46e83a58":"airbnb_df.select_dtypes(include=['object']).nunique()","5f81abd0":"airbnb_df.room_type.value_counts()                 ","dc3f1500":"distinct_room_type = airbnb_df.room_type.value_counts()\ndistinct_room_type.plot(kind='bar')","5d463eb2":"distinct_neighbourhood_group = airbnb_df.neighbourhood_group.value_counts()\ndistinct_neighbourhood_group.plot(kind='bar')","9bd1d0cf":"distinct_neighbourhood_group","8b809a8e":"plt.figure(figsize=(10,10))\na = sns.scatterplot(data=airbnb_df, x='longitude', y='latitude', hue='neighbourhood_group')\nplt.title('Map of airbnb neighbourhood distribution', fontsize=15)\nplt.xlabel('Latitude')\nplt.ylabel(\"Longitude\")\nplt.legend(frameon=False, fontsize=13)","a8be74ad":"plt.figure(figsize=(10,10))\na = sns.scatterplot(data=airbnb_df, x='longitude', y='latitude', hue='availability_365')\nplt.title('Map of airbnb Based on Availability', fontsize=15)\nplt.xlabel('Latitude')\nplt.ylabel(\"Longitude\")\nplt.legend(frameon=False, fontsize=13)","a2804d59":"airbnb_df.availability_365.value_counts()","32b6ebb0":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(airbnb_df.name.apply(lambda x: str(x))))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('airbnb_df_prop_name.png')\nplt.show()","0c401b2e":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(airbnb_df.neighbourhood))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('neighbourhood.png')\nplt.show()","28eb094c":"airbnb_df.neighbourhood.value_counts().head(10)","d96ac529":"top_host=airbnb_df.host_id.value_counts().head(10)\ntop_host","59bb6cfc":"top_host.plot(kind='bar')","4599b5d1":"top_host.index","46e550de":"index = top_host.index\nindex[0]","9251850d":"airbnb_df_top_host = airbnb_df[airbnb_df.host_id.isin(index)]","f229aa8f":"airbnb_df_top_host['neighbourhood_group'].value_counts()","4886cf55":"#airbnb_df_top_host.sort_values(by='id',ascending=False)\nairbnb_df_top_host_table = pd.pivot_table(airbnb_df_top_host, index=['host_id','neighbourhood_group'])\nairbnb_df_top_host_table.sort_values(by='calculated_host_listings_count',ascending=False)","bf1e04df":"airbnb_df.groupby(airbnb_df['neighbourhood_group']).count()","daf6d47f":"neighbourhood_groups=[]\n\nfor neighbourhood in airbnb_df['neighbourhood_group'].unique():\n    sub_neighbourhood =airbnb_df.loc[airbnb_df['neighbourhood_group'] == neighbourhood]\n    price_sub_neighbourhood=sub_neighbourhood[['price']]\n    #neighbourhood_groups.append(price_sub_neighbourhood.describe())\n    i=price_sub_neighbourhood.describe(percentiles=[.25, .50, .75])\n    #i=i.iloc[3:]\n    i.reset_index(inplace=True)\n    i.rename(columns={'index':'Stats'}, inplace=True)\n    i.rename(columns={'price':neighbourhood}, inplace=True)\n    neighbourhood_groups.append(i)\n    ","94e501f4":"neighbourhood_groups_stat_df=[df.set_index('Stats') for df in neighbourhood_groups]\nneighbourhood_groups_stat_df=neighbourhood_groups_stat_df[0].join(neighbourhood_groups_stat_df[1:])\nneighbourhood_groups_stat_df.T","a8465524":"## Above code can be simplified by \nairbnb_df.groupby('neighbourhood_group').price.describe()","3aa04fb0":"airbnb_df.groupby('neighbourhood_group').room_type.describe()","1a959cd5":"airbnb_df.drop(['name', 'host_name', 'last_review', 'id'], inplace=True, axis=1)","b6e10360":"airbnb_df['reviews_per_month'].fillna(value=0, inplace=True)","e6a9f988":"airbnb_df.sample(2).T","eac50053":"plt.figure(figsize=(15,8))\nsns.heatmap(airbnb_df.corr(), annot=True, linewidths=0.1)","ea5ca496":"labelEncoder_nbhgp = preprocessing.LabelEncoder()\nlabelEncoder_nbh = preprocessing.LabelEncoder()\nlabelEncoder_rm_type = preprocessing.LabelEncoder()\n\nairbnb_df['neighbourhood_group']=labelEncoder_nbhgp.fit_transform(airbnb_df['neighbourhood_group'])\nairbnb_df['neighbourhood']=labelEncoder_nbh.fit_transform(airbnb_df['neighbourhood'])\nairbnb_df['room_type']=labelEncoder_rm_type.fit_transform(airbnb_df['room_type'])\n","7951e96f":"labelEncoder_rm_type.classes_","5042c698":"airbnb_df.sample(2)","c8b6fecf":"X = airbnb_df.drop(['price'], inplace=False, axis=1)\ny = airbnb_df['price']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","fa03c60d":"regression_model = LinearRegression()\nregression_model.fit(X_train, y_train)","9b37107e":"# The coefficients for each of the independent attributes    \n    \nfor idx, column in enumerate(X.columns) :\n    print(\"The coefficient for {} is {}\".format(column,regression_model.coef_[idx]))","73483da6":"accuracy = regression_model.score(X_test, y_test)\nprint(\"The accuracy for our model is {}\".format(accuracy))","c7055249":"plt.figure(figsize=(15,8))\nsns.heatmap(airbnb_df.corr(), annot=True, linewidths=0.1)","5effc8a5":"airbnb_df.corr()['price']","b78fc6be":"import lightgbm as lgb\ndef create_lgb_model(x_train, x_val, y_train, y_val):\n    params = {\n            \"objective\" : \"regression\",\n            \"metric\" : \"rmse\",\n            \"num_leaves\" : 30,\n            \"learning_rate\" : 0.1,\n            \"bagging_fraction\" : 0.7,\n            \"feature_fraction\" : 0.7,\n            \"bagging_frequency\" : 5,\n            \"bagging_seed\" : 2018,\n            \"verbosity\" : -1\n        }\n    lgtrain = lgb.Dataset(x_train, label=y_train)\n    lgval = lgb.Dataset(x_val, label=y_val)\n    evals_result = {}\n    model = lgb.train(params, lgtrain, 1000, valid_sets=[lgval], early_stopping_rounds=100, verbose_eval=20, evals_result=evals_result)\n    return model,evals_result\n    \n\n","9b270d2d":"model,evals_result = create_lgb_model(X_train, X_test, y_train, y_test)\npred_test = model.predict(X_test, num_iteration=model.best_iteration)","43f6d169":"fig, ax = plt.subplots(figsize=(12,18))\nlgb.plot_importance(model, max_num_features=50, height=0.8, ax=ax)\nax.grid(False)\nplt.title(\"LightGBM - Feature Importance\", fontsize=15)\nplt.show()","ba1a53f8":"### Our Initial Model performed extremely poor ","1b70aa5d":"It Can be inferred that our top Host are in 3 neighbourhood","7c4394bd":"### Checking shape of our loaded data","74bea8d8":"### Longitude , host and latitude seems the most imorttant features","8a0cc425":"## Observations from the data\n1. There are null in name , host name last_review and reviews_per_month.                       \n2. last_review is date column , We have to change data type from object to Date\n3. Minimum price is 0 , That could be of complimantery stay\n4. availability_365 is 0 for some records, We have to Analyse ","f3354534":"import matplotlib.image as mpimg\nfilename = \"\/kaggle\/input\/new-york-city-airbnb-open-data\/New_York_City_.png\"\nNew_York_City_img=mpimg.imread(filename,0)\nax = airbnb_df.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", figsize=(10,7),\n                       label=\"Area\",\n                       c=\"neighbourhood_group\", cmap=plt.get_cmap(\"jet\"),\n                       colorbar=False, alpha=0.4,\n                      )\nplt.imshow(New_York_City_img, extent=[-124.55, -113.80, 32.45, 42.05], alpha=0.5,\n           cmap=plt.get_cmap(\"jet\"))\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\n\ncbar = plt.colorbar()\ncbar.ax.set_yticklabels([\"$%dk\"%(round(v\/1000)) for v in tick_values], fontsize=14)\ncbar.set_label('Median House Value', fontsize=16)\n\nplt.legend(fontsize=16)\nsave_fig(\"california_housing_prices_plot\")\nplt.show()","3e8bfa8b":"Finding the top hosts","47da149a":"### We can drop columns which will not impact or analysis. We can drop 'name', 'host_name', 'last_review', 'id'columns","bec39e10":" There are 3 types of room, of which Majority of them are **Entite Home\/Appartment** and **private Room**, While few are **Share Room**","f7867b97":"Feature Importance :\n\nNow let us look at the top features from the model","0e9f8cec":"### Analyzing Categorical Variables","c22bc5c5":"Different type of room types","739a1f95":"It can be inferred that Most of the people preferred Manhattan and Brooklyn, As these are one of the most famous areas in New York             ","28e3d5f9":"### Neighbourhood Group","87c117e1":"## Word cloud shows us the most frequently used words\n\nPhrases such as \"in the heart of\" ,\"Private\", \"Brooklyn\"","dc69cb80":"from sklearn.preprocessing import OneHotEncoder\nonehotencoder = OneHotEncoder(categorical_features = [0])\nx = onehotencoder.fit_transform(x)","2474d233":"### Availability of Room","d685dbd8":"1. It can be seen that in Manhattan **Entire home\/apt** are more common","1f541ea5":"## We can see that 75 Percentile of property have Price less than 220.\n* There are some Posch properties which cost around $10000","71ded1b8":"### EDA - Analysing each fields","c35c1085":"Analysing neighbourhood ","a4349b0f":"### Some of the host have property in multiple neighbourhood group","9aac0268":"## Building regression Model to predict the price","6c9c9d8f":"Neither of our independent variables have good correlation with our dependent variable \"Price\""}}