{"cell_type":{"5aa4e563":"code","3e9671a8":"code","87ba2254":"code","dc941458":"code","7d34b5ee":"code","a0a9a577":"code","6c2e486b":"code","8d1790ef":"code","62b72f9f":"code","13aeb5cc":"code","0d1b45f6":"code","651f6ce8":"code","a3c1f428":"code","e3535bdb":"code","7d9d362b":"code","0adae0d8":"code","b333a8bb":"code","50d1a947":"code","36eec90c":"code","18b64f39":"code","649679fe":"code","f600bffd":"code","b3e530a7":"code","8ae66535":"code","c891be3a":"code","199263b7":"code","29a2a112":"code","d6ef397b":"markdown","7d09b84c":"markdown","dccf062e":"markdown","31f14ce9":"markdown","b6a10542":"markdown","6e2afdd0":"markdown","9281d572":"markdown","00a2b3c5":"markdown"},"source":{"5aa4e563":"import numpy as np \nimport pandas as pd ","3e9671a8":"df_18 = pd.read_csv(\"\/kaggle\/input\/player-comps\/2018.csv\")\ndf_19 = pd.read_csv(\"\/kaggle\/input\/player-comps\/2019.csv\")\ndf_20 = pd.read_csv(\"\/kaggle\/input\/player-comps\/2020.csv\")\ndf_col = pd.read_csv(\"\/kaggle\/input\/player-comps\/college.csv\")","87ba2254":"df_18['Player'] = df_18['Player'].str.split('.')\ndf_18['Player'] = df_18['Player'].str[1]","dc941458":"df_19['Player'] = df_19['Player'].str.split('.')\ndf_19['Player'] = df_19['Player'].str[1]\n\ndf_20['Player'] = df_20['Player'].str.split('.')\ndf_20['Player'] = df_20['Player'].str[1]","7d34b5ee":"df_col.Player=df_col.Player.str.split(\"*\")\ndf_col.Player=df_col.Player.str[0]","a0a9a577":"df_col['int\/A'] = df_col['Int']\/df_col['Att']\ndf_col['td\/A'] = df_col['TD']\/df_col['Att']\ndf_col['tdr\/A'] = df_col['TDR']\/df_col['AttR']","6c2e486b":"df_col = df_col[['Player', 'G', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'AvgR']]","8d1790ef":"df_18.columns = ['Player', 'Team', 'G', 'Comp', 'Att', 'Yard', 'TD',\n       'INT', 'AttR', 'YardR', 'TDR', 'FPts', 'FPts\/G']\ndf_19.columns = ['Player', 'Team', 'G', 'Comp', 'Att', 'Yard', 'TD',\n       'INT', 'AttR', 'YardR', 'TDR', 'FPts', 'FPts\/G']\ndf_20.columns = ['Player', 'Team', 'G', 'Comp', 'Att', 'Yard', 'TD',\n       'INT', 'AttR', 'YardR', 'TDR', 'FPts', 'FPts\/G']","62b72f9f":"df_18['Pct'] = (df_18['Comp']\/df_18['Att'])*100\ndf_19['Pct'] = (df_19['Comp']\/df_19['Att'])*100\ndf_20['Pct'] = (df_20['Comp']\/df_20['Att'])*100","13aeb5cc":"df_18['int\/A'] = df_18['INT']\/df_18['Att']\ndf_18['td\/A'] = df_18['TD']\/df_18['Att']\ndf_18['tdr\/A'] = df_18['TDR']\/df_18['AttR']\n\ndf_19['int\/A'] = df_19['INT']\/df_19['Att']\ndf_19['td\/A'] = df_19['TD']\/df_19['Att']\ndf_19['tdr\/A'] = df_19['TDR']\/df_19['AttR']\n\ndf_20['int\/A'] = df_20['INT']\/df_20['Att']\ndf_20['td\/A'] = df_20['TD']\/df_20['Att']\ndf_20['tdr\/A'] = df_20['TDR']\/df_20['AttR']","0d1b45f6":"df_18.Yard = df_18.Yard.str.replace(',', '')\ndf_18.Yard = df_18.Yard.astype(int)\n\ndf_19.Yard = df_19.Yard.str.replace(',', '')\ndf_19.Yard = df_19.Yard.astype(int)\n\ndf_20.Yard = df_20.Yard.str.replace(',', '')\ndf_20 = df_20.dropna()\ndf_20.Yard = df_20.Yard.astype(int)","651f6ce8":"df_18['Y\/A'] = (df_18['Yard']\/df_18['Att'])\ndf_19['Y\/A'] = (df_19['Yard']\/df_19['Att'])\ndf_20['Y\/A'] = (df_20['Yard']\/df_20['Att'])","a3c1f428":"# df_18.YardR = df_18.YardR.str.replace(',', '')\n# df_18.YardR = df_18.YardR.astype(int)\n\ndf_19.YardR = df_19.YardR.str.replace(',', '')\ndf_19.YardR = df_19.YardR.astype(int)\n\ndf_20.YardR = df_20.YardR.str.replace(',', '')\ndf_20.YardR = df_20.YardR.astype(int)","e3535bdb":"df_18['avgR'] = (df_18['YardR']\/df_18['AttR'])\ndf_19['avgR'] = (df_19['YardR']\/df_19['AttR'])\ndf_20['avgR'] = (df_20['YardR']\/df_20['AttR'])","7d9d362b":"df_18 = df_18[['Player', 'G', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'avgR']]\ndf_19 = df_19[['Player', 'G', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'avgR']]\ndf_20 = df_20[['Player', 'G', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'avgR']]","0adae0d8":"df_18['Player'] = df_18['Player'] + '-18'\ndf_19['Player'] = df_19['Player'] + '-19'\ndf_20['Player'] = df_20['Player'] + '-20'","b333a8bb":"df_19 = df_19[df_19.G > 12]\ndf_18 = df_18[df_18.G > 12]\ndf_20 = df_20[df_20.G > 12]","50d1a947":"df_col = df_col[df_col.G > 7]","36eec90c":"df_col.columns = ['Player', 'G', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'avgR']","18b64f39":"df = pd.concat([df_18, df_19, df_20, df_col], axis=0)","649679fe":"df = df[['Player', 'Pct', 'Y\/A', 'td\/A', 'int\/A', 'tdr\/A', 'avgR']]","f600bffd":"df = df.dropna()","b3e530a7":"df = df.set_index(\"Player\").T\nplayer_dict = df.to_dict('list')","8ae66535":"df_col = df_col.set_index(\"Player\").T\nplayer_dict_col = df_col.to_dict('list')","c891be3a":"from scipy import spatial\n\ndef ComputeDistance(a, b):\n    playerA = np.sqrt(a[1]**2 + a[2]**2 + a[3]**2+ a[4]**2+ a[5]**2+ a[0]**2)\n    playerB = np.sqrt(b[1]**2 + b[2]**2 + b[3]**2+ b[4]**2+ b[5]**2+ b[0]**2)\n    dist = ((playerA - playerB)**2)\/abs(playerA - playerB)\n    return dist","199263b7":"import operator\nplayerID = df.T.index\nplayerID_col = df_col.T.index\n\ndef getNeighbors(playerID, K):\n    distances = []\n    for player in player_dict:\n        if (player != playerID) and (player not in player_dict_col.keys()):\n            distance = ComputeDistance(player_dict[playerID], player_dict[player])\n            distances.append((player, distance))\n    distances.sort(key=operator.itemgetter(1))\n    neighbors = []\n    for x in range(K):\n        neighbors.append(distances[x][0])\n    return neighbors\n","29a2a112":"K = 3\nmeasured_dist = 0\nprint('Comps for Mac Jones: ' +str(getNeighbors('Mac Jones', K)))\nprint('Comps for Justin Fields: '+ str(getNeighbors('Justin Fields', K)))\nprint('Comps for Trevor Lawrence: '+ str(getNeighbors('Trevor Lawrence', K)))\nprint('Comps for Kyle Trask: '+ str(getNeighbors('Kyle Trask', K)))\nprint('Comps for Zach Wilson: '+ str(getNeighbors('Zach Wilson', K)))\nprint('Comps for Kellen Mond: '+ str(getNeighbors('Kellen Mond', K)))","d6ef397b":"Added a condition in the for loop so that no college players show up in the player comps. ","7d09b84c":"Instead of using TDs or Ints in my distance function, I normalized the values by dividing by the number of passing attempts by the QB. This allowed me to compare QBs would did not play the same number of games. ","dccf062e":"The goal of this notebook is to use K Nearest Neigbour clustering techniques to determine player comps (comparisions) for College players who are about to be drafted to the NFL. I used data from the past 3 NFL seasons. Data collected from https:\/\/www.sports-reference.com\/cfb\/years\/2020-passing.html and https:\/\/fftoday.com\/stats\/playerstats.php.","31f14ce9":"The results:","b6a10542":"Standard Euclidean distance function","6e2afdd0":"Convert my dataframe to a dictionary where the keys are the player names.","9281d572":"I took NFL QBs who had played more than 12 games in a particular season, and college QBs who played more than 7 games this year.","00a2b3c5":"The features I used: completion percentage, yards per attempt, touchdown per attempt, interceptions per attempt, rushing touchdowns per attempt, average yards per rushing attempt. "}}