{"cell_type":{"80eca055":"code","b60321ff":"code","bcc768e0":"code","ab6a7fe0":"code","917ac600":"code","bd317bb1":"code","38c45d2a":"code","2b03b43d":"code","fb6470eb":"code","f612b853":"code","06ae42f9":"code","944ce25f":"code","5396fef4":"code","c296b461":"code","c917e929":"code","2153329d":"code","3fd6994e":"code","ed8cb8aa":"code","aed885e6":"code","6f3e5ad4":"code","11caee63":"code","e6815309":"code","141f74ff":"code","112e7537":"code","24976082":"code","e1f39d58":"code","74f18ab8":"code","569ad9ad":"code","9044c50e":"code","8dc0f9a0":"code","e899c7ec":"code","4210d983":"code","70419fff":"code","65a5756f":"code","6f30ded8":"code","d48edbb7":"code","1b130980":"code","dbc87252":"code","c8528609":"markdown","365944a5":"markdown","b94c391f":"markdown","46d7a3f6":"markdown","2cc8b208":"markdown","3bb29e7c":"markdown","21d1b779":"markdown","36a9532e":"markdown","e62a88f0":"markdown","7f566d47":"markdown","1b5354f7":"markdown","5127b335":"markdown","905f6487":"markdown","980810e0":"markdown"},"source":{"80eca055":"import pandas as pd","b60321ff":"df=pd.read_csv(\"..\/input\/fitness-analysis\/fitness analysis.csv\")","bcc768e0":"df.info()\n","ab6a7fe0":"df.head()","917ac600":"df.columns","bd317bb1":"new_cols=['Timestamp','Name','Gender','Age','Exercise_importance','Fitness_level','Regularity','Barriers','Exercises','Do_you','Time','Time_spent','Balanced_diet','prevents_balanced','Health_level','Recommend_fitness','Equipment','Motivation']","38c45d2a":"column_reference=pd.DataFrame(new_cols,df.columns)\ncolumn_reference","2b03b43d":"df.columns=new_cols","fb6470eb":"df.drop(columns=['Timestamp','Name'],inplace=True)","f612b853":"df.head()","06ae42f9":"import seaborn as sns\nimport matplotlib.pyplot as plt","944ce25f":"age_vals=df[\"Age\"].unique()\ngrid = sns.FacetGrid(df, col='Age',col_order=age_vals[[1,0,4,3,2]])\ngrid.map(sns.distplot,'Exercise_importance')\ngrid.add_legend()\ngrid.set(xlim=(0,5))\ngrid.set(ylim=(0,1))\ngrid.set(xlabel=\"Importance of Exercise\")\ngrid.despine()\nplt.show()","5396fef4":"exercises_list={}\nfor selected_options in df['Exercises']:\n    for exercise in selected_options.split(\";\"):\n        if exercise in exercises_list:\n            exercises_list[exercise]+=1\n        else:\n            exercises_list[exercise]=1\n\n            \n        ","c296b461":"sorted_list={}\nfor i in sorted(exercises_list,key=exercises_list.get,reverse=True):\n    sorted_list[i]=exercises_list[i]\n     ","c917e929":"count=sum(sorted_list.values())\nfor i in sorted_list:\n    sorted_list[i]=(sorted_list[i]\/count)*100","2153329d":"sorted_list","3fd6994e":"plt.bar(sorted_list.keys(),sorted_list.values())\nplt.xticks(rotation=90)\nplt.title(\"Exercise preferred by Participants\")\nplt.ylabel(\"Percentage\")\nplt.ylim(0,100)\nplt.show()","ed8cb8aa":"times=df[\"Time\"].value_counts(normalize=True)*100\nplt.pie(times,labels=times.index,explode=(0.05,0.05,0.1),shadow=True,autopct='%.1f%%',startangle=90)\nplt.title(\"Preferred Time to exercise\")\nplt.show()","aed885e6":"df[\"Time_spent\"].unique()","6f3e5ad4":"times=df[\"Time_spent\"].str.split(\" \",n=1,expand=True)","11caee63":"df[\"Time_spent_minutes\"]=times[0]","e6815309":"def convertor(val):\n    if val==\"I\":\n        return 0\n    else:\n        return int(val)","141f74ff":"df[\"Time_spent_minutes\"]=df[\"Time_spent_minutes\"].apply(convertor)","112e7537":"df[\"Time_spent_minutes\"]=df[\"Time_spent_minutes\"].apply(lambda x:x*60 if x!=30 else x)","24976082":"df[\"Time_spent_minutes\"].value_counts()","e1f39d58":"df.groupby(\"Gender\").mean()[\"Time_spent_minutes\"].plot.barh()\nfor i,v in enumerate(df.groupby(\"Gender\").mean()[\"Time_spent_minutes\"]):\n    plt.text(v,i,(str(round(v,2))+\" mins\"))\nplt.title(\"Average time spent daily on Exercise by Gender\")\nplt.xlabel(\"Time (Minutes)\")\nplt.xlim(0,70)\nplt.show()","74f18ab8":"groups=df.groupby(\"Age\").mean()[\"Time_spent_minutes\"]\nax=sns.barplot(groups.index,groups)\nax.text(0,48,\"Total Average=45.6 minutes\",c=\"purple\")\nplt.title(\"Average time spent on Exercise daily by Age\")\nplt.ylim(10,60)\nplt.axhline(df[\"Time_spent_minutes\"].mean(),color=\"purple\")\nplt.show()","569ad9ad":"motivation_list={}\nfor selected_options in df['Motivation']:\n    for motivation in selected_options.split(\";\"):\n        if motivation in motivation_list:\n            motivation_list[motivation]+=1\n        else:\n            motivation_list[motivation]=1","9044c50e":"motivation_list","8dc0f9a0":"top_5_motivation=pd.DataFrame.from_dict(motivation_list.items()).sort_values(by=1,ascending=False)[:5]","e899c7ec":"top_5_motivation[0]=top_5_motivation[0].apply(lambda x:x.replace(\"I want to \",\"\"))","4210d983":"sns.barplot(x=0,y=1,data=top_5_motivation)\nplt.xticks(rotation=45)\nplt.ylabel(\"Number of responses\")\nplt.title(\"Top five reasons to exercise\")\nplt.xlabel(\"\")\nplt.show()","70419fff":"barrier_list={}\nfor selected_options in df['Barriers']:\n    for barrier in selected_options.split(\";\"):\n        if barrier in barrier_list:\n            barrier_list[barrier]+=1\n        else:\n            barrier_list[barrier]=1","65a5756f":"barrier_list","6f30ded8":"top_5_barrier=pd.DataFrame.from_dict(barrier_list.items()).sort_values(by=1,ascending=False)[:6].drop(3,axis=0)","d48edbb7":"top_5_barrier[\"Percentage\"]=(top_5_barrier[1]\/top_5_barrier[1].sum())*100","1b130980":"top_5_barrier","dbc87252":"plt.pie(top_5_barrier[\"Percentage\"],labels=top_5_barrier[0],autopct=\"%.1f%%\",shadow=True)\ncentre_circle = plt.Circle((0,0),0.8,color='yellow', fc='white',linewidth=1.5)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.title(\"Top 5 barriers to daily exercise\")\nplt.show()","c8528609":"### 1. Importance of Exercise for different age groups","365944a5":"### 4. Average time spent per day for Exercise?","b94c391f":"### 5. Top motivation factors for daily excersice?","46d7a3f6":"#### Since we do not need the timestamp and names of participants for our analysis, lets drop these columns","2cc8b208":"#### Looks like the dataset doesnt have any missing values. However, the column names are too long, so lets shorten them by using abbreviations.","3bb29e7c":" # <center> Analyzing Fitness Survey Data <\/center>","21d1b779":"### 2. Types of Exercises preferred by participants\n#### Since participants could select multiple options for this question,lets create a dictionary to find the top preferred exercise.","36a9532e":"### 3. At what time do people prefer to exercise?","e62a88f0":"### 6. Top Barriers from performing daily excercise?","7f566d47":"#### In this notebook, I will be visualizing some of the key features of this fitness survey data. Lets start by reading in the data and cleaning it for further analysis","1b5354f7":"#### We'll save the old column names as a dataframe for reference","5127b335":"#### Now, lets convert the sorted dictionary into percentages and plot it on a bar graph.","905f6487":"#### We'll drop the fouth row as it just mentions there arent any barriers","980810e0":"#### To find out approximately, the average time spent by an induvidual on exercise daily, lets convert the 'Time_spent' column into numerical values (minutes). "}}