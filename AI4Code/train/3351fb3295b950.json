{"cell_type":{"adf85f6e":"code","ae41f7c9":"code","d6f275f2":"code","709575de":"code","f69130fa":"code","f1e66401":"code","a4e20207":"code","cb442ca1":"markdown","95389798":"markdown","13a85b55":"markdown","6fb13942":"markdown","8377aec8":"markdown","b2c42c12":"markdown"},"source":{"adf85f6e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ae41f7c9":"from sklearn.model_selection import train_test_split\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import losses","d6f275f2":"dataset = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\ntest = test_df.values\ny = dataset[\"label\"]\nM = len(y.unique())\nX = dataset.drop(\"label\", axis=1)\nX = X\/255.0","709575de":"def build_model():\n    model = keras.Sequential()\n    model.add(layers.Dense(256, input_shape=(784,), activation=\"relu\"))\n    model.add(layers.Dropout(0.2))\n    model.add(layers.Flatten())\n    model.add(layers.Dense(100, activation=\"relu\"))\n    model.add(layers.Dropout(0.2))\n    model.add(layers.Dense(10, activation=\"softmax\"))\n\n    optimizer = keras.optimizers.Adam(learning_rate=0.01)\n    model.compile(optimizer = optimizer, loss=losses.sparse_categorical_crossentropy , metrics=['accuracy'])\n    \n    return model","f69130fa":"model = build_model()\nmodel.summary()\nmodel.fit(X, y, batch_size=256, epochs=80, shuffle=True)","f1e66401":"predict = model.predict(test)\npredicted_class = np.argmax(predict, axis=1)\npredicted_class","a4e20207":"submission = pd.DataFrame(predicted_class, columns = [\"Label\"])\nsubmission.index += 1\nsubmission.to_csv(\"submission.csv\", index_label = [\"ImageId\"])","cb442ca1":"# Imports","95389798":"# Export outcome","13a85b55":"# Prediction","6fb13942":"# Read data","8377aec8":"# Build model","b2c42c12":"# Train model"}}