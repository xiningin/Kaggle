{"cell_type":{"9ce1cedd":"code","a796ee2a":"code","5fc951a3":"code","fe63479d":"code","882130bb":"code","95525961":"code","c441282e":"code","1348d862":"code","940eade0":"code","b6df3dc3":"code","4ca56288":"code","9657e023":"code","bc4dd560":"code","ddcbb463":"code","50fee0f0":"code","7628bbc7":"code","fc7ceda7":"code","37e1954b":"code","2e62b7d7":"code","71b44617":"code","a08f12b2":"code","6d373334":"code","cab5ffc3":"code","c7e080b5":"code","246c7596":"code","416247c7":"code","ffd5ae21":"code","72bb74be":"code","7a864b64":"code","8d090878":"code","c8b0c8ad":"code","4518a92e":"code","39d1c7bb":"markdown","1df8ff36":"markdown","c05d23e7":"markdown","d32abc79":"markdown","54f257f3":"markdown","b772c426":"markdown","7fb3e320":"markdown","f4054b40":"markdown","e5930abf":"markdown","449e5800":"markdown","9b542538":"markdown","bd07052e":"markdown","be3cd183":"markdown","1a1c5d41":"markdown","cfec2daf":"markdown","93ea0a2f":"markdown","b33c7c77":"markdown","2a5370d6":"markdown","3938d4d5":"markdown"},"source":{"9ce1cedd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a796ee2a":"df = pd.read_csv('..\/input\/matches.csv')","5fc951a3":"df.head()","fe63479d":"df.shape","882130bb":"#unique values for result\nprint(df.result.unique())","95525961":"#List of teams played in IPL\nprint(df.team1.unique())","c441282e":"#Match results\nprint(\"No. of Tie matches: \"+str(df[df.result=='tie'].id.count()))\nprint(\"No. of no result matches: \"+str(df[df.result=='no result'].id.count()))","1348d862":"df.describe()","940eade0":"#matches per season\ndf.groupby('season')['season'].count()","b6df3dc3":"#no of matches where toss winner is the match winner\nprint(\"No of matches where toss winner is match winner: \"+str(df[(df.result == 'normal') & (df.toss_winner == df.winner)].id.count()))\nprint(\"No of matches where toss winner is not match winner: \"+str(df[(df.result == 'normal') & (df.toss_winner != df.winner)].id.count()))","4ca56288":"fig = plt.figure() \nax = fig.add_subplot(111) # Create matplotlib axes\nax2 = ax.twinx() # Create another axes that shares the same x-axis as ax.\n\nwidth = 0.3\n\ndf[(df.result == 'normal') & (df.toss_winner == df.winner)].groupby('venue')['venue'].count().plot(figsize=(20,10),kind='bar', color='blue', ax=ax, width=width, position=1,yticks=[0,5,10,15,20,25,30,35])\ndf[(df.result == 'normal') & (df.toss_winner != df.winner)].groupby('venue')['venue'].count().plot(figsize=(20,10),kind='bar', color='red', ax=ax2, width=width, position=0,yticks=[0,5,10,15,20,25,30,35])\n\nplt.show()","9657e023":"df.groupby(\"winner\")['winner'].count().plot(figsize=(12,12),kind='pie',autopct='%1.1f%%',shadow=True)","bc4dd560":"#Top 10 man of the match graph\ndf1 = pd.DataFrame({\"count\":df.groupby('player_of_match')['player_of_match'].count()}).reset_index()\ndf1 = df1.sort_values('count',ascending=False)\ndf1[0:10].plot.barh(figsize=(20,10),x='player_of_match',y='count',xticks=[2,4,6,8,10,12,14,16,18,20])\n","ddcbb463":"df_runs = pd.read_csv('..\/input\/deliveries.csv')","50fee0f0":"df_runs.head()","7628bbc7":"df_runs.shape","fc7ceda7":"df_bats = df_runs[df_runs.batsman == 'CH Gayle']\ndf_bats.head()","37e1954b":"df1 = pd.DataFrame({\"count\":df_bats.groupby(['batting_team','match_id'])['batting_team'].count()}).reset_index()\ndf1.head()","2e62b7d7":"df1.groupby('batting_team')['batting_team'].count()","71b44617":"df_bats.groupby('match_id')['batsman_runs'].sum().plot(figsize=(20,10),kind = 'line')","a08f12b2":"df_runs[df_runs.player_dismissed == 'CH Gayle'].groupby('dismissal_kind')['dismissal_kind'].count().plot(kind='bar')","6d373334":"df_runs[df_runs.player_dismissed == 'CH Gayle'].groupby('bowler')['bowler'].count().plot(figsize=(20,10),kind='bar')","cab5ffc3":"fig, ax = plt.subplots(figsize=(25,10))\ndfgrp = df_runs[df_runs.batsman.isin(['MS Dhoni','CH Gayle','Yuvraj Singh','G Gambhir'])].groupby(['batsman','batsman_runs']).agg({'batsman_runs': 'count'})\ndfgrp.groupby(level=0).apply(lambda x:100 * x \/ float(x.sum())).unstack().plot(ax=ax,kind='bar')","c7e080b5":"df1 = pd.DataFrame({'wickets':df_runs[df_runs.player_dismissed.notna()].groupby('bowler')['bowler'].count()}).reset_index()\ndf1= df1.sort_values('wickets',ascending=False)\nprint(df1[0:10])\ndf1[0:10].groupby('bowler')['wickets'].sum().plot(kind='barh',figsize=(20,10))","246c7596":"df_runs[df_runs.bowler == 'SL Malinga'].groupby('dismissal_kind')['dismissal_kind'].count().plot(kind='bar')","416247c7":"df_all = df_runs.join(df,on='match_id')\ndf_all.head()","ffd5ae21":"df_all.shape","72bb74be":"df_all.venue.unique()","7a864b64":"fig, ax = plt.subplots(figsize=(20,10))\n# use unstack()\ndf_all[df_all.bowler.isin( ['SL Malinga','Harbhajan Singh', 'Z Khan','R Ashwin'])].groupby(['bowler','dismissal_kind']).count()['match_id'].unstack().plot(ax=ax,kind='bar')","8d090878":"fig, ax = plt.subplots(figsize=(20,10))\n# use unstack()\ndf_all[df_all.venue.isin( ['M Chinnaswamy Stadium','Rajiv Gandhi International Stadium, Uppal', 'Wankhede Stadium','Eden Gardens'])].groupby(['venue','dismissal_kind']).count()['match_id'].unstack().plot(ax=ax,kind='bar')","c8b0c8ad":"fig, ax = plt.subplots(figsize=(25,10))\n# use unstack()\ndfgrp = df_all[df_all.venue.isin( ['OUTsurance Oval','Rajiv Gandhi International Stadium, Uppal', 'Barabati Stadium','Eden Gardens'])].groupby(['venue','batsman_runs']).agg({'batsman_runs': 'count'})\ndfgrp.groupby(level=0).apply(lambda x:100 * x \/ float(x.sum())).unstack().plot(ax=ax,kind='bar')","4518a92e":"fig, ax = plt.subplots(figsize=(25,10))\n# use unstack()\ndfgrp = df_all[df_all.venue.isin( ['OUTsurance Oval','Rajiv Gandhi International Stadium, Uppal', 'Barabati Stadium','Eden Gardens'])].groupby(['venue','dismissal_kind']).agg({'dismissal_kind': 'count'})\ndfgrp.groupby(level=0).apply(lambda x:100 * x \/ float(x.sum())).unstack().plot(ax=ax,kind='bar')","39d1c7bb":"**Camparison of dismissals in % form for better understanding**","1df8ff36":"**Comparison of dismissals in some selected venues**","c05d23e7":"**Graph of runs scored in each match by individual player**","d32abc79":"**No of matches played in each season of IPL**","54f257f3":"**Camparison of runs scroed for each ball in % form for better understanding**","b772c426":"**Percentage of match wins by team**","7fb3e320":"**Calculate the top ten wickets takers **","f4054b40":"**Toss Based analysis of match winner**","e5930abf":"**Analysis of ball by ball data**","449e5800":"**Data frame with data of single player**","9b542538":"**Camparison of batting styles of  different batsman**\n\nwe calculate the no. of singles,doubles, threes,fours and sixes for each batsman. Then calculate the percentage of each.","bd07052e":"**For how many team did a single batsman played and for how many times**","be3cd183":"**Comparison of different types of dismissals of a single batsman**","1a1c5d41":"**Joining two dataframes to get master table with all details for each ball**","cfec2daf":"**How many times did each bowler acquire an individual batsman**","93ea0a2f":"**Comparison of different dismissal types  by a individual bowler**","b33c7c77":"**Comparision of toss winner is match winner vs toss winner is not match winner for each venue played**","2a5370d6":"**Top ten players who won man of the match most no. of times**","3938d4d5":"**Camparison of the dismissals of various bowlers**"}}