{"cell_type":{"1b7616bd":"code","f5ef7ea8":"code","ef656aba":"code","a109c9a3":"code","0881793f":"code","3a034029":"code","fa83bd6d":"code","8189be95":"code","d26c912e":"code","1136d2a2":"code","cac2b099":"markdown","6bf792c8":"markdown","09cbd088":"markdown","2b8650bb":"markdown"},"source":{"1b7616bd":"import numpy as np","f5ef7ea8":"np.zeros((9, 9))\nnp.ones((10, 10))\nnp.full((10, 5), 7)\nnp.array([1,2,3])\nnp.arange(11)\nnp.linspace(0, 1, 20)","ef656aba":"a = np.array([\n    [1,2,3],\n    [4,5,6],\n    [12,8,9]\n])\na[0,1]","a109c9a3":"np.random.seed(10)\nnp.random.rand(5, 2)","0881793f":"u = np.array([1,2,3,4,5])\nv = np.array([6,7,8,9,0])","3a034029":"u * v # dot product","fa83bd6d":"def vector_vector_multiply(u, v):\n    assert u.shape[0] == v.shape[0]\n    res = 0.0\n    n = u.shape[0]\n    for i in range(n):\n        res = res + u[i] * v[i]\n    return res","8189be95":"print('Function result', vector_vector_multiply(u, v))\nprint(\"numpy.dot() = \", u.dot(v))","d26c912e":"np.linalg.inv(a)","1136d2a2":"aS = a[[0, 1, 2]]\naS","cac2b099":"# **Numpy basic functions**\n* np.zeros() => returns array of zeros with mentioned dimensions(tuple)\n* np.ones() => returns array of ones with mentioned dimensions(tuple)\n* np.full() => returns array of the number mentioned second with dimensions passed(tuple)\n* np.array() => returns array of passed list or set of values\n* np.arange() => similar to range()\n* np.linspace() => array of size mentioned within the values mentioned\n* np.eye() => identity matrix of order n","6bf792c8":"# Multiplication(cross and dot)\n","09cbd088":"# **Multi Dimensional array**\nNested list to be passed to array() function","2b8650bb":"# **Randomly generated arrays**\n* np.random.rand(r, c)\n* np.random.randint(*low*, *high*, *size*)"}}