{"cell_type":{"361e0585":"code","6cdbc9c0":"code","a7cf2dbd":"code","4caae30a":"code","2ab76022":"code","b0f0b2a9":"code","ea850a98":"code","20fbccca":"code","cddf70d0":"code","0754dcb5":"code","8d80cb1d":"code","52ad5013":"code","7fa2437a":"code","6f74d1c1":"code","38246981":"code","60de083d":"code","1c6fa10e":"code","342c57a1":"code","648b631e":"code","56aadbee":"code","760b13cc":"code","b6cfe2e8":"code","b911f32c":"code","03a9a226":"code","47bf6401":"code","d1b8af69":"code","134c091b":"code","2a9eaae5":"code","5bc15060":"code","6e1be789":"code","7d4454ea":"code","fe58a5c4":"code","6e7e6a78":"code","cee0296a":"code","d9569da4":"code","1b5cf90e":"code","13184b24":"code","412489de":"code","6a21011b":"markdown","2f48a250":"markdown","df87481d":"markdown","528c6749":"markdown","8e708241":"markdown","23d58fc1":"markdown","49db136e":"markdown","0829cd7d":"markdown","98d86566":"markdown"},"source":{"361e0585":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#core imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6cdbc9c0":"vehicle=pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv')\nvehicle.head()","a7cf2dbd":"## check how many records and features are in the dataset\nvehicle.shape","4caae30a":"vehicle.info()","2ab76022":"## check missing values\nvehicle.isnull().sum()","b0f0b2a9":"# see unique values of categorical features\nprint(vehicle['Fuel_Type'].unique())\nprint(vehicle['Seller_Type'].unique())\nprint(vehicle['Transmission'].unique())\nprint(vehicle['Owner'].unique())","ea850a98":"car_dataset = vehicle.drop(['Car_Name'],axis=1)","20fbccca":"car_dataset.head()","cddf70d0":"car_dataset.columns","0754dcb5":"car_dataset['Current_Year']=2021","8d80cb1d":"car_dataset.head()","52ad5013":"car_dataset['Total_Years']= car_dataset['Current_Year']-car_dataset['Year']","7fa2437a":"car_dataset.head()","6f74d1c1":"car_dataset.drop(['Year','Current_Year'],axis=1,inplace=True)","38246981":"car_dataset.head()","60de083d":"car_dataset=pd.get_dummies(car_dataset,drop_first=True)","1c6fa10e":"car_dataset.head()","342c57a1":"## By visualizing the data in pairplot, we didnt get that much information.\nsns.pairplot(car_dataset)","648b631e":"## Here, we are storing the dataset co-related features index values in a variable 'cor_mat' so as to use that values in heatmap.\n## Index values like Selling_price,present_price,kms_driven.....etc,etc\ncor_mat=car_dataset.corr().index","56aadbee":"# Plotting the heatmap \nsns.heatmap(car_dataset[cor_mat].corr(),annot=True,cmap='RdYlGn')","760b13cc":"car_dataset.head()","b6cfe2e8":"## Independent features and dependent features\nX=car_dataset.iloc[:,1:]\ny=car_dataset.iloc[:,0]","b911f32c":"X.head()","03a9a226":"y.head()","47bf6401":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","d1b8af69":"X_train.shape","134c091b":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()","2a9eaae5":"## Hyperparameters\nn_estimators=[int(x) for x in np.linspace(start=100,stop=1200,num=12)]\nprint(n_estimators)","5bc15060":"from sklearn.model_selection import RandomizedSearchCV","6e1be789":"#Randomized Search CV\n\n# Number of trees in random forest\nn_estimators = [int(x) for x in np.linspace(start = 100, stop = 1200, num = 12)]\n# Number of features to consider at every split\nmax_features = ['auto', 'sqrt']\n# Maximum number of levels in tree\nmax_depth = [int(x) for x in np.linspace(5, 30, num = 6)]\n# max_depth.append(None)\n# Minimum number of samples required to split a node\nmin_samples_split = [2, 5, 10, 15, 100]\n# Minimum number of samples required at each leaf node\nmin_samples_leaf = [1, 2, 5, 10]","7d4454ea":"# Create the random grid\nrandom_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf}\n\nprint(random_grid)","fe58a5c4":"# Random search of parameters, using 3 fold cross validation, \n# search across 100 different combinations\nrf_random = RandomizedSearchCV(estimator = rf, param_distributions = random_grid,scoring='neg_mean_squared_error', n_iter = 10, cv = 5, verbose=2, random_state=42, n_jobs = 1)","6e7e6a78":"rf_random.fit(X_train,y_train)","cee0296a":"rf_random.best_params_","d9569da4":"rf_random.best_score_","1b5cf90e":"predictions=rf_random.predict(X_test)","13184b24":"sns.histplot(y_test-predictions,kde=True)","412489de":"plt.scatter(y_test,predictions)","6a21011b":"#### Here, Fuel_type_Petrol and Fuel_Type_diesel is -vely co-related(red color box)","2f48a250":"#### Here, we will drop 'Car_Name' column from our dataset as it is not required to predict the selling price of a car.","df87481d":"#### We have to create a new feature 'Current_Year' as 2021 and find 'Total_years' so that we can see how much old is our vehicle. ","528c6749":"#### We have to convert categorical features to one hot encoded values because we have less number of features and dropping the first feature to avoid dummy variable trap.","8e708241":"### Read the data and explore it","23d58fc1":"#### As the vehicle is getting older, the selling price is also decreased.","49db136e":"####  We have to drop 'Year' and 'Current_Year' . Year is basically the purchased year and we dont need it. The selling price prediction didnt need year and current year but it needs total years which we have already calculated.","0829cd7d":"### As there are no missing values, it's good to progress to next steps","98d86566":"#### Let's see the co-related features info with the help of HEATMAP"}}