{"cell_type":{"e6356064":"code","30ac5c3d":"code","4102dc0d":"code","ac65a96a":"code","abe0c851":"code","0b9da814":"code","e9211eed":"code","327f4673":"code","829ee4a9":"code","eac54cd2":"code","1275dbb7":"code","98637f39":"code","07e45d9a":"code","d3c7d0f4":"code","814113af":"code","a92137c6":"code","0e4d2e42":"code","d945963c":"code","0be9f66a":"code","055a15f4":"code","2060c1b2":"code","cedebf57":"code","0fb25782":"code","53774f39":"markdown","4798a680":"markdown","b80218f8":"markdown"},"source":{"e6356064":"import re\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom glob import glob","30ac5c3d":"you_ds = pd.read_csv('..\/input\/youtube-ds\/ml-youtube.csv')","4102dc0d":"you_ds.head(10)","ac65a96a":"you_ds[you_ds['movieId'] == 1678]\n\nGoldenEye = you_ds.loc[you_ds['title'].str.contains(\"Four Rooms \\(1995\\)\", case=False)]\nGoldenEye\n# you_ds[you_ds['title'] == 'GoldenEye']","abe0c851":"movie_title_df = pd.read_csv('..\/input\/youtube-ds\/Movie_Id_Titles.csv')\nmovie_title_df","0b9da814":"movie_title_df_tmp = pd.merge(movie_title_df , you_ds,on = 'title')\nmovie_title_df_tmp","e9211eed":"movie_rating_df = pd.read_csv('..\/input\/youtube-ds\/Movie_Recommender_Dataset.csv')\nmovie_rating_df","327f4673":"movie_rating_df = pd.merge(movie_rating_df ,movie_title_df_tmp,on = 'item_id')\nmovie_rating_df","829ee4a9":"%pip install youtube_dl\n!pip install ffmpeg-python","eac54cd2":"import youtube_dl\nimport ffmpeg","1275dbb7":"def download_video(video_id=None):\n    ydl = youtube_dl.YoutubeDL({'outtmpl': '%(id)s.%(ext)s', 'format': 'worst'})\n\n    with ydl:\n        result = ydl.extract_info(f'http:\/\/www.youtube.com\/watch?v={video_id}', download=True)\n\n    if 'entries' in result:\n        video_metadata = result['entries'][0]\n    else:\n        video_metadata = result\n\n    return video_metadata, result","98637f39":"movie_list = list(movie_rating_df['youtubeId'].unique())","07e45d9a":"movie_list","d3c7d0f4":"meta_file_old = '..\/input\/youtube-video-trailer\/movie_metadata_dict.pickle'\nwith open(meta_file_old, 'rb') as file:  \n    movie_metadata_dict_old = pickle.load(file)\n    \nmeta_file_new = '..\/input\/youtube-video-trailer\/movie_metadata_dict_new.pickle'\nwith open(meta_file_new, 'rb') as file:  \n    movie_metadata_dict_new = pickle.load(file)    ","814113af":"movie_metadata_dict = {**movie_metadata_dict_new, **movie_metadata_dict_old}\nlen(movie_metadata_dict)","a92137c6":"movie_metadata_dict = {}\nbad_movies = []\ngood_movies = []","0e4d2e42":"file_list = glob('..\/input\/youtube-video-trailer\/*')\n\nvideo_db_list = []\n\ndef is_video_in_dbase():\n    for file_name in file_list:\n        #get the file key\n        file_key_res = re.search('\/([\\w_-]+).mp4', file_name)\n\n        if file_key_res:\n            file_key = file_key_res.group(1)\n            video_db_list.append(file_key)\n\nis_video_in_dbase()","d945963c":"movie_set = set(movie_list)\nvideo_db_set = set(video_db_list)\n\ndiff_video_set = movie_set - video_db_set\ndiff_video_list = list(diff_video_set)\nlen(diff_video_list)","0be9f66a":"def save_metadata_to_dict(source_meta_dict):\n    key_list = ['id', 'title', 'height', 'width', 'quality', 'duration', 'average_rating', 'age_limit', 'categories', 'description']\n    for key in key_list:\n        if key == 'id':\n            vid_id = source_meta_dict[key]\n            movie_metadata_dict[vid_id] = []\n        else:\n            vid_id = source_meta_dict['id']\n            m_data = source_meta_dict[key]\n            movie_metadata_dict[vid_id].append(m_data)\n\n            \ncount = 0            \nfor movie_str in diff_video_list[:1]:\n    try:\n        video_metadata, res = download_video(movie_str)\n        save_metadata_to_dict(res)\n        good_movies.append(movie_str)\n\n        count += 1\n        if count % 10 == 0:\n            with open('movie_metadata_dict.pickle', 'wb') as handle:\n                pickle.dump(movie_metadata_dict, handle, protocol=pickle.HIGHEST_PROTOCOL)            \n    except:\n        print(f\"Video {movie_str} is unavailable!\")\n        bad_movies.append(movie_str)","055a15f4":"print('Hello')","2060c1b2":"import pickle","cedebf57":"movie_metadata_dict.keys()","0fb25782":"with open('movie_metadata_dict.pickle', 'wb') as handle:\n    pickle.dump(movie_metadata_dict, handle, protocol=pickle.HIGHEST_PROTOCOL)\n    \n","53774f39":"# Video Processing","4798a680":"### movie_metadata_dict - dict with film metadata\nmovie_metadata_dict[id] = {'id', 'title', 'height', 'width', 'quality', 'duration', 'average_rating', 'age_limit', ['categories'], 'description'}","b80218f8":"## download video trailers"}}