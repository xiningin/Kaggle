{"cell_type":{"36a69d4f":"code","6c6c455e":"code","e082125c":"code","7c200075":"code","f39ffb46":"code","0ef7ace8":"code","4f179c00":"code","ae7c2291":"code","664fd75a":"code","9e06fa3c":"code","d9448288":"code","d39092ee":"code","ba81cb9f":"code","46680581":"code","31174fbc":"code","ec15b5b8":"code","c383bc53":"code","af7c4134":"code","7ec5e3ff":"code","e7ca38a7":"code","7f0b0112":"code","996b800c":"code","e74d748b":"code","23752db6":"code","e7ce4304":"code","b31f54c7":"code","5078e084":"code","db94db06":"code","c905548e":"code","1085af6a":"code","93f02ba8":"code","7927885e":"code","6f635505":"code","e24c1df9":"code","d4b3ef7d":"code","c3ae620d":"code","f7d3da1d":"code","60df3e55":"code","22241c3f":"code","b21d1463":"code","ce18ad32":"code","3f76f79c":"code","4b3f5290":"code","ed3e86f8":"code","cd6cde7b":"code","db2391cb":"code","2487876c":"code","1253211e":"code","ac208958":"code","1a041393":"code","3299d867":"code","b8133bb9":"code","8a88d18b":"code","8b2e7a58":"code","8babd842":"code","4d5bb86a":"markdown","f63f4093":"markdown","48e77b62":"markdown","ac44a8d4":"markdown"},"source":{"36a69d4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c6c455e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n%matplotlib inline","e082125c":"purchase=pd.read_csv('..\/input\/customer-analytics\/Train.csv')","7c200075":"purchase.head()","f39ffb46":"purchase.info()","0ef7ace8":"purchase.describe()","4f179c00":"purchase['Mode_of_Shipment'].nunique()","ae7c2291":"purchase['Warehouse_block'].nunique()","664fd75a":"purchase['Product_importance'].nunique()","9e06fa3c":"purchase[purchase['Customer_rating']==5].count()","d9448288":"purchase['Customer_rating'].value_counts()","d39092ee":"purchase['Warehouse_block'].value_counts()","ba81cb9f":"purchase['Mode_of_Shipment'].value_counts()","46680581":"purchase['Gender'].value_counts()","31174fbc":"purchase['Reached.on.Time_Y.N'].value_counts()","ec15b5b8":"purchase[purchase['Product_importance']=='low'].count()","c383bc53":"purchase[(purchase['Product_importance']=='low')&(purchase['Reached.on.Time_Y.N']==0)].count()","af7c4134":"purchase[(purchase['Mode_of_Shipment']=='Flight')&(purchase['Reached.on.Time_Y.N']==0)].count()","7ec5e3ff":"purchase[(purchase['Gender']=='F')&(purchase['Reached.on.Time_Y.N']==0)].count()\n","e7ca38a7":"purchase[(purchase['Gender']=='M')&(purchase['Reached.on.Time_Y.N']==0)].count()","7f0b0112":"purchase[(purchase['Warehouse_block']=='A')&(purchase['Reached.on.Time_Y.N']==0)].count()","996b800c":"purchase[(purchase['Warehouse_block']=='B')&(purchase['Reached.on.Time_Y.N']==0)].count()","e74d748b":"purchase[(purchase['Warehouse_block']=='C')&(purchase['Reached.on.Time_Y.N']==0)].count()","23752db6":"purchase[(purchase['Warehouse_block']=='D')&(purchase['Reached.on.Time_Y.N']==0)].count()","e7ce4304":"purchase[(purchase['Warehouse_block']=='F')&(purchase['Reached.on.Time_Y.N']==0)].count()","b31f54c7":"sns.heatmap(purchase.corr(),annot=True,cmap='Pastel1')","5078e084":"sns.barplot(x='Customer_rating',y='Cost_of_the_Product',palette='viridis',data=purchase,hue='Gender')","db94db06":"sns.barplot(x='Product_importance',y='Weight_in_gms',palette='icefire',data=purchase)","c905548e":"sns.barplot(x='Mode_of_Shipment',y='Reached.on.Time_Y.N',data=purchase,hue='Product_importance',palette='ch:s=-.2,r=.6')","1085af6a":"sns.barplot(x='Gender',y='Cost_of_the_Product',data=purchase,palette='rocket')","93f02ba8":"sns.barplot(x='Warehouse_block',y='Reached.on.Time_Y.N',data=purchase,palette='Spectral')","7927885e":"sns.barplot(x='Warehouse_block',y='Weight_in_gms',data=purchase,palette='coolwarm')","6f635505":"sns.barplot(x='Customer_rating',y='Prior_purchases',data=purchase,palette='PiYG')","e24c1df9":"sns.jointplot(x='Weight_in_gms',y='Cost_of_the_Product',data=purchase,kind='hex')","d4b3ef7d":"sns.jointplot(x='Cost_of_the_Product',y='Discount_offered',data=purchase,kind='kde',color='red',fill=True)","c3ae620d":"sns.boxplot(x='Mode_of_Shipment',y='Cost_of_the_Product',data=purchase,hue='Gender')","f7d3da1d":"sns.clustermap(purchase.corr(),annot=True,cmap='cividis')","60df3e55":"plt.figure(figsize=(10,6))\npurchase[purchase['Mode_of_Shipment']=='Flight']['Cost_of_the_Product'].hist(alpha=0.5,color='blue',bins=30,label='Flight')\npurchase[purchase['Mode_of_Shipment']=='Road']['Cost_of_the_Product'].hist(alpha=0.5,color='red',bins=30,label='Road')\nplt.xlabel('COST')\nplt.legend()\n         ","22241c3f":"from sklearn.linear_model import LogisticRegression","b21d1463":"X=purchase.drop(['Reached.on.Time_Y.N','Warehouse_block','Mode_of_Shipment','Product_importance','Gender'],axis=1)\ny=purchase['Reached.on.Time_Y.N']","ce18ad32":"from sklearn.model_selection import train_test_split","3f76f79c":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=101)","4b3f5290":"lm=LogisticRegression()","ed3e86f8":"lml=lm.fit(X_train,y_train)","cd6cde7b":"predictions = lml.predict(X_test)","db2391cb":"from sklearn.metrics import classification_report","2487876c":"print(classification_report(y_test,predictions))","1253211e":"A=pd.get_dummies(purchase['Mode_of_Shipment'],drop_first=True)\nB=pd.get_dummies(purchase['Warehouse_block'],drop_first=True)\nC=pd.get_dummies(purchase['Product_importance'],drop_first=True)\nD=pd.get_dummies(purchase['Gender'],drop_first=True)","ac208958":"newp=pd.concat([A,B,C,D,purchase],axis=1)","1a041393":"X1=newp.drop(['Reached.on.Time_Y.N','Warehouse_block','Mode_of_Shipment','Product_importance','Gender'],axis=1)\ny1=newp['Reached.on.Time_Y.N']","3299d867":"X1_train, X1_test, y1_train, y1_test =train_test_split(X1,y1,test_size=0.30,random_state=101)","b8133bb9":"logmodel=LogisticRegression()","8a88d18b":"logmodel.fit(X1_train,y1_train)","8b2e7a58":"pred = logmodel.predict(X1_test)","8babd842":"print(classification_report(y1_test,predictions))","4d5bb86a":"proportion of females who got their parcels late=2249\/5545=0.405\nproportion of males who got their parcels late=2187\/5454=0.4009","f63f4093":"The accuracy results show no change even with K nearest neighbors technique","48e77b62":"#proportions of delay caused by respective warehouses--\nA=758\/1833=0.413\nB=729\/1833=0.397\nC=739\/1833=0.403\nD=738\/1834=0.402\nF=1472\/3666=0.401\n\nthis tells that just by looking at the highest number of late parcels from F one cannot conclude about its efficiency! ","ac44a8d4":"creating of dummies so as to extract information from the categorical variable doesnt change the accuracy results in my case. "}}