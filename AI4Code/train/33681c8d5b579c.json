{"cell_type":{"8d905855":"code","9114b471":"code","598cefb1":"code","97e55d63":"code","c2e0ecbc":"code","f3f802c1":"code","f606ec27":"code","d98a3c49":"code","06e688b1":"code","c2228fee":"code","9a0c7559":"code","68a631d3":"code","a408ef97":"code","ee723764":"code","3333f21b":"code","1f51452a":"code","4a9c1eea":"markdown","dd1dd4fe":"markdown","18a4b5ed":"markdown","e5aab898":"markdown","6a69c15a":"markdown","84d26845":"markdown","28118983":"markdown","02b627f6":"markdown","9ca0ea02":"markdown","ebf60109":"markdown","7507cdfd":"markdown","3caf0b43":"markdown"},"source":{"8d905855":"import pandas as pd\nimport glob\nimport path\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport plotly\nimport numpy as np\n%matplotlib inline\nimport plotly.graph_objects as go\nimport datetime\ndatetime.datetime.strptime\nimport plotly.io as pio\n\n","9114b471":"df = pd.read_csv('..\/input\/all-uk-police-street-crime-102018-to-092021\/UK_Police_Street_Crime_2018-10-01_to_2021_09_31.csv')","598cefb1":"df.head()","97e55d63":"# fixing column headers to make them more friendly\ndf.columns = ['to_delete','crime_id', 'month','reported_by', 'falls_within', 'Long',\n       'lat', 'location', 'LSOA_code', 'LSOA_name', 'crime_type',\n       'last_outcome', 'context']\n\n# dropping the original crime id as it means nothing and takes up a lot of memory]\ndf.reset_index()\ndf = df.drop(['to_delete','crime_id'], axis = 1)\ndf.head()\n\n","c2e0ecbc":"df = df.drop(['context', 'LSOA_code', 'LSOA_name'], axis =1)","f3f802c1":"df.month = pd.to_datetime(df.month)","f606ec27":"# checking NaN's\ndf.isna().sum()","d98a3c49":"\nnp.random.seed(7)\n\nremove_n = 15000000\ndrop_indices = np.random.choice(df.index, remove_n, replace=False)\ndf = df.drop(drop_indices)\n","06e688b1":"df.reset_index(inplace = True)","c2228fee":"# plot charts\ndef plot_counts(df, col):\n\n    plt.figure(figsize=(9,9))\n    sns.countplot(data=df, y=col,\n    order=df[col].value_counts().index[:50])\n    Title = f'{col}'\n    plt.title(Title, fontsize=15)\n    \n    plt.show()\n","9a0c7559":"# Having a look at all the contents of each columns\n\ncols = ['reported_by', 'location','crime_type', 'last_outcome']\n\nfor col in cols:\n    plot_counts(df, col)","68a631d3":"# Function to plot charts based on certain location search terms.\n\ndef location_crime(df,search_field, search_term, Y):\n\n    subset = df[df[search_field].str.contains(search_term)]\n\n    plt.figure(figsize=(9,9))\n    sns.countplot(data=subset, y=Y,\n    order=subset[Y].value_counts().index[:100])\n    Title = 'Crimes Most Committed at ' + search_term\n    plt.title(Title, fontsize=15)\n    plt.show()\n\n","a408ef97":"df.location.value_counts()","ee723764":"search_terms = ['Supermarket', 'Parking', 'Shopping', 'Petrol Station', 'Recreation', 'Nightclub', 'Street', 'Hospital', 'Prison', 'Road', 'Avenue']\n\nfor search_term in search_terms:\n    location_crime(df,'location', search_term, 'crime_type')","3333f21b":"# i could have used the other function to plot this as well...\n\ndef crime_location(df, search_field, search_term, Y):\n\n    subset = df[df[search_field].str.contains(search_term)]\n    plt.figure(figsize=(9,9))\n    \n    sns.countplot(data=subset, y=Y, order=subset[Y].value_counts().index[:20])\n    Title = 'Top Locations of ' + search_term + ' Crimes'\n    plt.title(Title, fontsize=15)\n    plt.show()","1f51452a":"search_terms = ['theft', 'weapons', 'Burglary', 'Drugs', 'Bicycle','Robbery','Shoplifting', 'Public order','Vehicle']\n\n\ncrime_location(df, 'crime_type', 'weapons', 'location')\n\nfor search_term in search_terms:\n    crime_location(df, 'crime_type', search_term, 'location')\n    \n    #location_crime(df,'location', search_term, 'crime_type')","4a9c1eea":"# Question ideas\n\nNow let\u2019s look at which are the most common crimes at the most common locations. After that maybe we flip it over and look at the most common locations for certain crimes\n\n- supermarket\n- parking area\n- shopping area \n- petrol station\n- nightclub\n- hospital\n\nFirst let\u2019s look at the top crimes of each location\n","dd1dd4fe":"Ensuring correct formats","18a4b5ed":"Making the columns more friendly","e5aab898":"## Lets have a look at the values we end up with after dropping random rows","6a69c15a":"Files are split up by force and month, so I wrote this to go and find the csv's and combine them.","84d26845":"Now we flip it and look at where the top crimes happen","28118983":"Function to plot the value counts of specified columns","02b627f6":"Data set is too big and making the computer slow, so i will ask numpy to find a random number of rows and remove them, removing 15m. lol","9ca0ea02":"search terms and running above func","ebf60109":"plotting function","7507cdfd":"# Crime Type vs Location (not geo location, location type) visualistions\n\nMain visualisations explore the relationship between a crime type and a location type (e.g near school, supermarket etc)","3caf0b43":"Getting rid of columns we dont need"}}