{"cell_type":{"b5caa575":"code","03b95a4f":"code","1aee739a":"code","0d638f72":"code","f9a4769f":"code","67d4e0b3":"markdown","2f45aa8f":"markdown","e7747f9e":"markdown","61a6fe4e":"markdown","942bdf98":"markdown","7ed69448":"markdown","e9781d9f":"markdown","d80cd63c":"markdown"},"source":{"b5caa575":"import pandas as pd\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn","03b95a4f":"# Preparatory part of the code\ntest = pd.read_csv('..\/input\/titanic\/test.csv') # load test dataset\ntest['Boy'] = (test.Name.str.split().str[1] == 'Master.').astype('int')\nsubmission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': pd.Series(dtype='int32')})\n\n# Three lines of code for LB = 0.78947 (not less 80% teams - Titanic Top 20%) \n# Reasoning the statements see below (EDA)\ntest['Survived'] = [1 if (x == 'female') else 0 for x in test['Sex']]     # Statement 1\ntest.loc[(test.Boy == 1), 'Survived'] = 1                                 # Statement 2\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S')), 'Survived'] = 0   # Statement 3\n\n# Saving the result\nsubmission.Survived = test.Survived\nsubmission.to_csv('submission_S_Boy_Sex.csv', index=False)","1aee739a":"# Reasoning for Statement 1 \n# Thanks for the idea to: https:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555 \n# Thanks for the idea of plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\nimport matplotlib.pyplot as plt\n\ndef highlight(value):\n    if value >= 0.5:\n        style = 'background-color: palegreen'\n    else:\n        style = 'background-color: pink'\n    return style\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv') # load train dataset\npd.pivot_table(train, values='Survived', index=['Sex']).style.applymap(highlight)","0d638f72":"# Reasoning for Statement 2\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\ntrain['Boy'] = (train.Name.str.split().str[1] == 'Master.').astype('int')\npd.pivot_table(train, values='Survived', index='Pclass', columns='Boy').style.applymap(highlight)","f9a4769f":"# Reasoning for Statement 3\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\npd.pivot_table(train, values='Survived', index=['Pclass', 'Embarked'], columns='Sex').style.applymap(highlight)","67d4e0b3":"# [Titanic: Machine Learning from Disaster](https:\/\/www.kaggle.com\/c\/titanic)","2f45aa8f":"### Statement 1. Women all survived and men all died","e7747f9e":"Thanks to:\n\n* https:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555\n* https:\/\/nbviewer.jupyter.org\/github\/agconti\/kaggle-titanic\/blob\/master\/Titanic.ipynb\n* https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\n","61a6fe4e":"### Statement 2. All boys ('Master') from the 1-2 classes survived","942bdf98":"# Reasoning (EDA)","7ed69448":"### Statement 3. Everybody from the class 3 cabins that were sat in Southampton ('S') were died","e9781d9f":"Before making predictions with complex algorithms, I tried to make it simple. \nImmediate prediction - three lines of code based on three statements. Early this provided a LB of at least 80% of teams - Titanic Top 20%.\nAfter the code I have justified in the form of graphs (EDA), from which the statements are obvious.","d80cd63c":"## Titanic : three lines of code for LB = 0.78468 - Top 18% (early - LB = 0.78947)"}}