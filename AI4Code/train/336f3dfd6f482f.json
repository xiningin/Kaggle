{"cell_type":{"0580e58d":"code","57e43e68":"code","53424e1a":"code","48ed3480":"code","d4fb0490":"code","e8cd7d6d":"code","362e0fe2":"code","6f1571bc":"code","0ba27e9d":"code","002cda43":"code","fb6100ab":"code","d0795a13":"code","52069b77":"code","3693391e":"code","cc82a874":"code","886746a1":"code","cb1aa83d":"code","d2a8d9a4":"code","887b2896":"code","de23c73f":"code","eccd759e":"code","05870f20":"code","d4c1868f":"code","d7e92895":"code","ef9672c7":"code","c5b7758e":"code","f7213870":"code","4dea8335":"code","f28904d0":"code","8495cf71":"code","e02829f7":"code","ef0acbf9":"code","75ea8dcd":"code","62cc4a91":"code","e6550efb":"code","01ac6496":"code","935cd613":"code","0fa884c3":"markdown","dac3cc27":"markdown","a8ee60e9":"markdown","e9af93ae":"markdown","3a4513bf":"markdown","cfcb2ddd":"markdown","6e994f53":"markdown","e149cbb4":"markdown","01c4b4a6":"markdown","6989c576":"markdown","305d4a31":"markdown","f42610bf":"markdown","0a3d0dd2":"markdown","fb828a81":"markdown","1b8dedfa":"markdown","15063f4e":"markdown"},"source":{"0580e58d":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","57e43e68":"#Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","53424e1a":"#Loading Data\n\ndf = pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent.csv\")\ndf.head()","48ed3480":"df = df.drop([\"Unnamed: 0\",\"floor\"], axis = 1)\ndf.head()","d4fb0490":"#Checking for missing values\n\ndf.isnull().sum()","e8cd7d6d":"def remove_dollor(x):\n    a =  x[2:] #removes first two chr\n    result = \"\"\n    for i in a:\n        if i.isdigit() is True:\n            result = result + i\n    return result #returns only digits (excludes special character)","362e0fe2":"df[\"hoa\"] = pd.to_numeric(df[\"hoa\"].apply(remove_dollor), errors= \"ignore\")\ndf[\"rent amount\"] = pd.to_numeric(df[\"rent amount\"].apply(remove_dollor), errors= \"ignore\")\ndf[\"property tax\"] = pd.to_numeric(df[\"property tax\"].apply(remove_dollor), errors= \"ignore\")\ndf[\"fire insurance\"] = pd.to_numeric(df[\"fire insurance\"].apply(remove_dollor), errors= \"ignore\")\ndf[\"total\"] = pd.to_numeric(df[\"total\"].apply(remove_dollor), errors= \"ignore\")","6f1571bc":"df.dtypes","0ba27e9d":"df.head()","002cda43":"plt.figure(figsize = (5,5))\nsns.boxplot(df[\"total\"])","fb6100ab":"#Since we found many outlliers, let's try to remove.\n\nq1 = df[\"total\"].quantile(0.25)\nq3 = df[\"total\"].quantile(0.75)\n\nIQR = q3 - q1\nIF = q1 - (1.5 * IQR)\nOF = q3 + (1.5 * IQR)","d0795a13":"data = df[~((df[\"total\"] < IF) | (df[\"total\"] > OF))]\ndata.shape","52069b77":"data.head()","3693391e":"print(\"Before Outlier Removal\")\nprint(\"No. of rows : \", df.shape[0])\nprint(\"No. of columns : \", df.shape[1])\nprint(\"=======================\")\nprint(\"After Outlier Removal\")\nprint(\"No. of rows : \", data.shape[0])\nprint(\"No. of columns : \", data.shape[1])","cc82a874":"#Before Removing Outliers\nplt.figure(figsize = (7,7))\nsns.set(style = \"whitegrid\")\nf = sns.barplot(x = \"rooms\", y = \"total\", data = df)\nf.set_title(\"Before Removing Outliers\")\nf.set_xlabel(\"No. of Rooms\")\nf.set_ylabel(\"Total Cost\")","886746a1":"#After Removing Outliers\nplt.figure(figsize = (7,7))\nsns.set(style = \"whitegrid\")\nf = sns.barplot(x = \"rooms\", y = \"total\", data = data)\nf.set_title(\"After Removing Outliers\")\nf.set_xlabel(\"No. of Rooms\")\nf.set_ylabel(\"Total Cost\")","cb1aa83d":"df.columns","d2a8d9a4":"columns = [\"city\",\"rooms\",\"bathroom\",\"parking spaces\", \"animal\", \"furniture\"]\nplt.figure(figsize = (30,30))\nfor i,var in enumerate(columns,1):\n    plt.subplot(2,4,i)\n    f = sns.barplot(x = data[var], y = data[\"total\"])\n    f.set_xlabel(var.upper())\n    f.set_ylabel(\"Total Cost\")","887b2896":"plt.figure(figsize=(12,12))\nsns.heatmap(data.corr(), annot=True)","de23c73f":"plt.figure(figsize = (7,7))\nsns.set(style = \"whitegrid\")\nf = sns.distplot(data[\"total\"])","eccd759e":"data[\"animal\"].value_counts()","05870f20":"animal_dict = {\"acept\": 1,\"not acept\":0}\ndata[\"animal_en\"] = data[\"animal\"].map(animal_dict)\ndata.head()","d4c1868f":"data[\"furniture\"].value_counts()","d7e92895":"furniture_dict = {\"furnished\":1, \"not furnished\":0}\ndata[\"furniture_en\"] = data[\"furniture\"].map(furniture_dict)","ef9672c7":"data = data.drop([\"animal\",\"furniture\"], axis = 1)","c5b7758e":"data.head()","f7213870":"data[\"hoa\"] = df[\"hoa\"].fillna(data[\"hoa\"].median())\ndata[\"property tax\"] = data[\"property tax\"].fillna(data[\"property tax\"].median())","4dea8335":"x = data.drop(\"total\", axis = 1)\ny = data[\"total\"]","f28904d0":"#Spliting train and test\n\nfrom sklearn.model_selection import train_test_split\nx_train, x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3)","8495cf71":"#Standardization train data\nfrom sklearn.preprocessing import StandardScaler\nstd = StandardScaler()\nstd.fit(x_train)\nstd_data = std.transform(x_train)","e02829f7":"#Box-Cox transformation for train response variable\nfrom scipy import stats\nbx, lam = stats.boxcox(y_train)\ny_total = bx","ef0acbf9":"from sklearn.ensemble import RandomForestRegressor\n#Training the model\nrf = RandomForestRegressor(n_estimators = 1500)\nrf.fit(std_data, y_total)","75ea8dcd":"#Standardization test data\nfrom sklearn.preprocessing import StandardScaler\nstd = StandardScaler()\nstd.fit(x_test)\nstd_test = std.transform(x_test)","62cc4a91":"#Prediction\npred = rf.predict(std_test)","e6550efb":"#Box-Cox transformation for Test Response variable\nbx, lam = stats.boxcox(y_test)\ny_total_test = bx","01ac6496":"def rmse_test(ytest, pred,xtest):\n    err = ytest - pred\n    mse = sum(err**2)\/(xtest.shape[0]-xtest.shape[1]-1)\n    rmse = np.sqrt(mse)\n    print(\"RMSE OF TEST DATA IS : \", rmse)","935cd613":"rmse_test(y_total_test,pred,x_test)","0fa884c3":"**Thanks** for reading my notebook. I'm new to Data Science, your one upvote will be my motivation :)","dac3cc27":"Now, **standardizing** the data","a8ee60e9":"Standardizing after splitting the data is always the good practice","e9af93ae":"**INSIGHTS:**\n1. Cost is more for houses present in *city*\n2. Cost is more for houses which is *furnished* and *accepts pets*\n3. Increasing in room, parkking spaces and bathrooms house cost is also increases","3a4513bf":"*It is right skewed, hence there will be no normality in the response variable*","cfcb2ddd":"**ENCODING**","6e994f53":"**Checking Outliers**","e149cbb4":"**Hello Friends, I would like to share this notebook with kaggle users.**","01c4b4a6":"Removing the dollor symbol and making the variables as numeric","6989c576":"Let's take more information from the dataset","305d4a31":"1. Dropping \"Unnamed: 0\" column, since it's not useful\n2. Dropping \"Floor\" column, since it has 26% of missing values and it's not usefull even after imputation","f42610bf":"**Box-Cox Transformation**: It is the way to transform non-normal dependent variables into a normal shape.","0a3d0dd2":"**Checking Normality**","fb828a81":"**CLEANING THE DATA**","1b8dedfa":"**RANDOM FOREST REGRESSOR**","15063f4e":"Check how Outliers are influencing the dataset"}}