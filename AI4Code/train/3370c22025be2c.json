{"cell_type":{"80616a58":"code","20e52777":"code","6da00022":"code","9db195e4":"code","d0816cbf":"code","29e8eaf9":"code","a0fada2a":"code","fb0c9eeb":"code","e2cc3a65":"code","6cf55aa6":"code","2cef01d3":"code","137a1077":"code","45aa7206":"code","05fae1f7":"code","be103d38":"code","5bfd1f5e":"code","97342875":"code","869f35bc":"code","02230270":"code","7f0e074a":"code","8148396a":"code","bca100ed":"markdown","851e9adf":"markdown","c7e21d41":"markdown","74fb490c":"markdown","de35298f":"markdown","2994f369":"markdown","7dcc32be":"markdown","75482f02":"markdown","7a02a8e7":"markdown"},"source":{"80616a58":"import matplotlib.pyplot as plt\nimport lightgbm as lgb\nfrom tsfresh import extract_features, extract_relevant_features, select_features\nfrom tsfresh.utilities.dataframe_functions import impute\nimport numpy as np\nimport pandas as pd\nfrom tsfresh.feature_extraction import MinimalFCParameters, EfficientFCParameters ,ComprehensiveFCParameters\nfrom sklearn.model_selection import KFold, cross_validate, cross_val_predict\nimport timeit\nimport seaborn as sns\nimport sys\nimport time\nfrom tqdm import tqdm\nimport warnings\n\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.kernel_ridge import KernelRidge\n\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler,QuantileTransformer\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.pipeline import Pipeline\nfrom matplotlib import pyplot\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nwarnings.filterwarnings(\"ignore\")\nnp.seterr(divide='ignore', invalid='ignore')\nnp.seterr(divide='ignore')\n# data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))","20e52777":"def progressbar(it, prefix=\"\", size=60, file=sys.stdout):\n    count = len(it)\n    def show(j):\n        x = int(size*j\/count)\n        file.write(\"%s[%s%s] %i\/%i\\r\" % (prefix, \"#\"*x, \".\"*(size-x), j, count))\n        file.flush()        \n    show(0)\n    for i, item in enumerate(it):\n        yield item\n        show(i+1)\n    file.write(\"\\n\")\n    file.flush()","6da00022":"%matplotlib inline\nstart = time.time()\ntrain = pd.read_csv('..\/input\/train.csv',dtype={'acoustic_data': np.int16, 'time_to_failure': np.float32})\nend = time.time()\nprint(end - start)","9db195e4":"settings={'variance_larger_than_standard_deviation': None,\n 'has_duplicate_max': None,\n 'has_duplicate_min': None,\n 'has_duplicate': None,\n 'sum_values': None,\n 'abs_energy': None,\n 'mean_abs_change': None,\n 'mean_change': None,\n 'mean_second_derivative_central': None,\n 'median': None,\n 'mean': None,\n 'length': None,\n 'standard_deviation': None,\n 'variance': None,\n 'skewness': None,\n 'kurtosis': None,\n 'absolute_sum_of_changes': None,\n 'longest_strike_below_mean': None,\n 'longest_strike_above_mean': None,\n 'count_above_mean': None,\n 'count_below_mean': None,\n 'last_location_of_maximum': None,\n 'first_location_of_maximum': None,\n 'last_location_of_minimum': None,\n 'first_location_of_minimum': None,\n 'percentage_of_reoccurring_datapoints_to_all_datapoints': None,\n 'percentage_of_reoccurring_values_to_all_values': None,\n 'sum_of_reoccurring_values': None,\n 'sum_of_reoccurring_data_points': None,\n 'ratio_value_number_to_time_series_length': None,\n 'sample_entropy': None,\n 'maximum': None,\n 'minimum': None,\n 'time_reversal_asymmetry_statistic': [{'lag': 1}, {'lag': 2}, {'lag': 3}],\n 'c3': [{'lag': 1}, {'lag': 2}, {'lag': 3}],\n 'cid_ce': [{'normalize': True}, {'normalize': False}],\n 'symmetry_looking': [{'r': 0.0},\n  {'r': 0.05},\n  {'r': 0.1},\n  {'r': 0.15000000000000002},\n  {'r': 0.2},\n  {'r': 0.25},\n  {'r': 0.30000000000000004},\n  {'r': 0.35000000000000003},\n  {'r': 0.4},\n  {'r': 0.45},\n  {'r': 0.5},\n  {'r': 0.55},\n  {'r': 0.6000000000000001},\n  {'r': 0.65},\n  {'r': 0.7000000000000001},\n  {'r': 0.75},\n  {'r': 0.8},\n  {'r': 0.8500000000000001},\n  {'r': 0.9},\n  {'r': 0.9500000000000001}],\n 'large_standard_deviation': [{'r': 0.05},\n  {'r': 0.1},\n  {'r': 0.15000000000000002},\n  {'r': 0.2},\n  {'r': 0.25},\n  {'r': 0.30000000000000004},\n  {'r': 0.35000000000000003},\n  {'r': 0.4},\n  {'r': 0.45},\n  {'r': 0.5},\n  {'r': 0.55},\n  {'r': 0.6000000000000001},\n  {'r': 0.65},\n  {'r': 0.7000000000000001},\n  {'r': 0.75},\n  {'r': 0.8},\n  {'r': 0.8500000000000001},\n  {'r': 0.9},\n  {'r': 0.9500000000000001}],\n 'quantile': [{'q': 0.1},\n  {'q': 0.2},\n  {'q': 0.3},\n  {'q': 0.4},\n  {'q': 0.6},\n  {'q': 0.7},\n  {'q': 0.8},\n  {'q': 0.9}],\n 'autocorrelation': [{'lag': 0},\n  {'lag': 1},\n  {'lag': 2},\n  {'lag': 3},\n  {'lag': 4},\n  {'lag': 5},\n  {'lag': 6},\n  {'lag': 7},\n  {'lag': 8},\n  {'lag': 9}],\n 'agg_autocorrelation': [{'f_agg': 'mean', 'maxlag': 40},\n  {'f_agg': 'median', 'maxlag': 40},\n  {'f_agg': 'var', 'maxlag': 40}],\n 'partial_autocorrelation': [{'lag': 0},\n  {'lag': 1},\n  {'lag': 2},\n  {'lag': 3},\n  {'lag': 4},\n  {'lag': 5},\n  {'lag': 6},\n  {'lag': 7},\n  {'lag': 8},\n  {'lag': 9}],\n 'number_cwt_peaks': [{'n': 1}, {'n': 5}],\n 'number_peaks': [{'n': 1}, {'n': 3}, {'n': 5}, {'n': 10}, {'n': 50}],\n 'binned_entropy': [{'max_bins': 10}],\n 'index_mass_quantile': [{'q': 0.1},\n  {'q': 0.2},\n  {'q': 0.3},\n  {'q': 0.4},\n  {'q': 0.6},\n  {'q': 0.7},\n  {'q': 0.8},\n  {'q': 0.9}],\n 'cwt_coefficients': [{'widths': (2, 5, 10, 20), 'coeff': 0, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 0, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 0, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 0, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 1, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 1, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 1, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 1, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 2, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 2, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 2, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 2, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 3, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 3, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 3, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 3, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 4, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 4, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 4, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 4, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 5, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 5, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 5, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 5, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 6, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 6, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 6, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 6, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 7, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 7, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 7, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 7, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 8, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 8, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 8, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 8, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 9, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 9, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 9, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 9, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 10, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 10, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 10, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 10, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 11, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 11, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 11, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 11, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 12, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 12, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 12, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 12, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 13, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 13, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 13, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 13, 'w': 20},\n  {'widths': (2, 5, 10, 20), 'coeff': 14, 'w': 2},\n  {'widths': (2, 5, 10, 20), 'coeff': 14, 'w': 5},\n  {'widths': (2, 5, 10, 20), 'coeff': 14, 'w': 10},\n  {'widths': (2, 5, 10, 20), 'coeff': 14, 'w': 20}],\n 'spkt_welch_density': [{'coeff': 2}, {'coeff': 5}, {'coeff': 8}],\n 'ar_coefficient': [{'coeff': 0, 'k': 10},\n  {'coeff': 1, 'k': 10},\n  {'coeff': 2, 'k': 10},\n  {'coeff': 3, 'k': 10},\n  {'coeff': 4, 'k': 10}],\n 'change_quantiles': [{'ql': 0.0, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 1.0, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 1.0, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 1.0, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 1.0, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.2, 'qh': 1.0, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.2, 'qh': 1.0, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 1.0, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.4, 'qh': 1.0, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.4, 'qh': 1.0, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 1.0, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.6, 'qh': 1.0, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.6, 'qh': 1.0, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 1.0, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.8, 'qh': 1.0, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.8, 'qh': 1.0, 'isabs': True, 'f_agg': 'var'}],\n 'fft_coefficient': [{'coeff': 0, 'attr': 'real'},\n  {'coeff': 1, 'attr': 'real'},\n  {'coeff': 2, 'attr': 'real'},\n  {'coeff': 3, 'attr': 'real'},\n  {'coeff': 4, 'attr': 'real'},\n  {'coeff': 5, 'attr': 'real'},\n  {'coeff': 6, 'attr': 'real'},\n  {'coeff': 7, 'attr': 'real'},\n  {'coeff': 8, 'attr': 'real'},\n  {'coeff': 9, 'attr': 'real'},\n  {'coeff': 10, 'attr': 'real'},\n  {'coeff': 11, 'attr': 'real'},\n  {'coeff': 12, 'attr': 'real'},\n  {'coeff': 13, 'attr': 'real'},\n  {'coeff': 14, 'attr': 'real'},\n  {'coeff': 15, 'attr': 'real'},\n  {'coeff': 16, 'attr': 'real'},\n  {'coeff': 17, 'attr': 'real'},\n  {'coeff': 18, 'attr': 'real'},\n  {'coeff': 19, 'attr': 'real'},\n  {'coeff': 20, 'attr': 'real'},\n  {'coeff': 21, 'attr': 'real'},\n  {'coeff': 22, 'attr': 'real'},\n  {'coeff': 23, 'attr': 'real'},\n  {'coeff': 24, 'attr': 'real'},\n  {'coeff': 25, 'attr': 'real'},\n  {'coeff': 26, 'attr': 'real'},\n  {'coeff': 27, 'attr': 'real'},\n  {'coeff': 28, 'attr': 'real'},\n  {'coeff': 29, 'attr': 'real'},\n  {'coeff': 30, 'attr': 'real'},\n  {'coeff': 31, 'attr': 'real'},\n  {'coeff': 32, 'attr': 'real'},\n  {'coeff': 33, 'attr': 'real'},\n  {'coeff': 34, 'attr': 'real'},\n  {'coeff': 35, 'attr': 'real'},\n  {'coeff': 36, 'attr': 'real'},\n  {'coeff': 37, 'attr': 'real'},\n  {'coeff': 38, 'attr': 'real'},\n  {'coeff': 39, 'attr': 'real'},\n  {'coeff': 40, 'attr': 'real'},\n  {'coeff': 41, 'attr': 'real'},\n  {'coeff': 42, 'attr': 'real'},\n  {'coeff': 43, 'attr': 'real'},\n  {'coeff': 44, 'attr': 'real'},\n  {'coeff': 45, 'attr': 'real'},\n  {'coeff': 46, 'attr': 'real'},\n  {'coeff': 47, 'attr': 'real'},\n  {'coeff': 48, 'attr': 'real'},\n  {'coeff': 49, 'attr': 'real'},\n  {'coeff': 50, 'attr': 'real'},\n  {'coeff': 51, 'attr': 'real'},\n  {'coeff': 52, 'attr': 'real'},\n  {'coeff': 53, 'attr': 'real'},\n  {'coeff': 54, 'attr': 'real'},\n  {'coeff': 55, 'attr': 'real'},\n  {'coeff': 56, 'attr': 'real'},\n  {'coeff': 57, 'attr': 'real'},\n  {'coeff': 58, 'attr': 'real'},\n  {'coeff': 59, 'attr': 'real'},\n  {'coeff': 60, 'attr': 'real'},\n  {'coeff': 61, 'attr': 'real'},\n  {'coeff': 62, 'attr': 'real'},\n  {'coeff': 63, 'attr': 'real'},\n  {'coeff': 64, 'attr': 'real'},\n  {'coeff': 65, 'attr': 'real'},\n  {'coeff': 66, 'attr': 'real'},\n  {'coeff': 67, 'attr': 'real'},\n  {'coeff': 68, 'attr': 'real'},\n  {'coeff': 69, 'attr': 'real'},\n  {'coeff': 70, 'attr': 'real'},\n  {'coeff': 71, 'attr': 'real'},\n  {'coeff': 72, 'attr': 'real'},\n  {'coeff': 73, 'attr': 'real'},\n  {'coeff': 74, 'attr': 'real'},\n  {'coeff': 75, 'attr': 'real'},\n  {'coeff': 76, 'attr': 'real'},\n  {'coeff': 77, 'attr': 'real'},\n  {'coeff': 78, 'attr': 'real'},\n  {'coeff': 79, 'attr': 'real'},\n  {'coeff': 80, 'attr': 'real'},\n  {'coeff': 81, 'attr': 'real'},\n  {'coeff': 82, 'attr': 'real'},\n  {'coeff': 83, 'attr': 'real'},\n  {'coeff': 84, 'attr': 'real'},\n  {'coeff': 85, 'attr': 'real'},\n  {'coeff': 86, 'attr': 'real'},\n  {'coeff': 87, 'attr': 'real'},\n  {'coeff': 88, 'attr': 'real'},\n  {'coeff': 89, 'attr': 'real'},\n  {'coeff': 90, 'attr': 'real'},\n  {'coeff': 91, 'attr': 'real'},\n  {'coeff': 92, 'attr': 'real'},\n  {'coeff': 93, 'attr': 'real'},\n  {'coeff': 94, 'attr': 'real'},\n  {'coeff': 95, 'attr': 'real'},\n  {'coeff': 96, 'attr': 'real'},\n  {'coeff': 97, 'attr': 'real'},\n  {'coeff': 98, 'attr': 'real'},\n  {'coeff': 99, 'attr': 'real'},\n  {'coeff': 0, 'attr': 'imag'},\n  {'coeff': 1, 'attr': 'imag'},\n  {'coeff': 2, 'attr': 'imag'},\n  {'coeff': 3, 'attr': 'imag'},\n  {'coeff': 4, 'attr': 'imag'},\n  {'coeff': 5, 'attr': 'imag'},\n  {'coeff': 6, 'attr': 'imag'},\n  {'coeff': 7, 'attr': 'imag'},\n  {'coeff': 8, 'attr': 'imag'},\n  {'coeff': 9, 'attr': 'imag'},\n  {'coeff': 10, 'attr': 'imag'},\n  {'coeff': 11, 'attr': 'imag'},\n  {'coeff': 12, 'attr': 'imag'},\n  {'coeff': 13, 'attr': 'imag'},\n  {'coeff': 14, 'attr': 'imag'},\n  {'coeff': 15, 'attr': 'imag'},\n  {'coeff': 16, 'attr': 'imag'},\n  {'coeff': 17, 'attr': 'imag'},\n  {'coeff': 18, 'attr': 'imag'},\n  {'coeff': 19, 'attr': 'imag'},\n  {'coeff': 20, 'attr': 'imag'},\n  {'coeff': 21, 'attr': 'imag'},\n  {'coeff': 22, 'attr': 'imag'},\n  {'coeff': 23, 'attr': 'imag'},\n  {'coeff': 24, 'attr': 'imag'},\n  {'coeff': 25, 'attr': 'imag'},\n  {'coeff': 26, 'attr': 'imag'},\n  {'coeff': 27, 'attr': 'imag'},\n  {'coeff': 28, 'attr': 'imag'},\n  {'coeff': 29, 'attr': 'imag'},\n  {'coeff': 30, 'attr': 'imag'},\n  {'coeff': 31, 'attr': 'imag'},\n  {'coeff': 32, 'attr': 'imag'},\n  {'coeff': 33, 'attr': 'imag'},\n  {'coeff': 34, 'attr': 'imag'},\n  {'coeff': 35, 'attr': 'imag'},\n  {'coeff': 36, 'attr': 'imag'},\n  {'coeff': 37, 'attr': 'imag'},\n  {'coeff': 38, 'attr': 'imag'},\n  {'coeff': 39, 'attr': 'imag'},\n  {'coeff': 40, 'attr': 'imag'},\n  {'coeff': 41, 'attr': 'imag'},\n  {'coeff': 42, 'attr': 'imag'},\n  {'coeff': 43, 'attr': 'imag'},\n  {'coeff': 44, 'attr': 'imag'},\n  {'coeff': 45, 'attr': 'imag'},\n  {'coeff': 46, 'attr': 'imag'},\n  {'coeff': 47, 'attr': 'imag'},\n  {'coeff': 48, 'attr': 'imag'},\n  {'coeff': 49, 'attr': 'imag'},\n  {'coeff': 50, 'attr': 'imag'},\n  {'coeff': 51, 'attr': 'imag'},\n  {'coeff': 52, 'attr': 'imag'},\n  {'coeff': 53, 'attr': 'imag'},\n  {'coeff': 54, 'attr': 'imag'},\n  {'coeff': 55, 'attr': 'imag'},\n  {'coeff': 56, 'attr': 'imag'},\n  {'coeff': 57, 'attr': 'imag'},\n  {'coeff': 58, 'attr': 'imag'},\n  {'coeff': 59, 'attr': 'imag'},\n  {'coeff': 60, 'attr': 'imag'},\n  {'coeff': 61, 'attr': 'imag'},\n  {'coeff': 62, 'attr': 'imag'},\n  {'coeff': 63, 'attr': 'imag'},\n  {'coeff': 64, 'attr': 'imag'},\n  {'coeff': 65, 'attr': 'imag'},\n  {'coeff': 66, 'attr': 'imag'},\n  {'coeff': 67, 'attr': 'imag'},\n  {'coeff': 68, 'attr': 'imag'},\n  {'coeff': 69, 'attr': 'imag'},\n  {'coeff': 70, 'attr': 'imag'},\n  {'coeff': 71, 'attr': 'imag'},\n  {'coeff': 72, 'attr': 'imag'},\n  {'coeff': 73, 'attr': 'imag'},\n  {'coeff': 74, 'attr': 'imag'},\n  {'coeff': 75, 'attr': 'imag'},\n  {'coeff': 76, 'attr': 'imag'},\n  {'coeff': 77, 'attr': 'imag'},\n  {'coeff': 78, 'attr': 'imag'},\n  {'coeff': 79, 'attr': 'imag'},\n  {'coeff': 80, 'attr': 'imag'},\n  {'coeff': 81, 'attr': 'imag'},\n  {'coeff': 82, 'attr': 'imag'},\n  {'coeff': 83, 'attr': 'imag'},\n  {'coeff': 84, 'attr': 'imag'},\n  {'coeff': 85, 'attr': 'imag'},\n  {'coeff': 86, 'attr': 'imag'},\n  {'coeff': 87, 'attr': 'imag'},\n  {'coeff': 88, 'attr': 'imag'},\n  {'coeff': 89, 'attr': 'imag'},\n  {'coeff': 90, 'attr': 'imag'},\n  {'coeff': 91, 'attr': 'imag'},\n  {'coeff': 92, 'attr': 'imag'},\n  {'coeff': 93, 'attr': 'imag'},\n  {'coeff': 94, 'attr': 'imag'},\n  {'coeff': 95, 'attr': 'imag'},\n  {'coeff': 96, 'attr': 'imag'},\n  {'coeff': 97, 'attr': 'imag'},\n  {'coeff': 98, 'attr': 'imag'},\n  {'coeff': 99, 'attr': 'imag'},\n  {'coeff': 0, 'attr': 'abs'},\n  {'coeff': 1, 'attr': 'abs'},\n  {'coeff': 2, 'attr': 'abs'},\n  {'coeff': 3, 'attr': 'abs'},\n  {'coeff': 4, 'attr': 'abs'},\n  {'coeff': 5, 'attr': 'abs'},\n  {'coeff': 6, 'attr': 'abs'},\n  {'coeff': 7, 'attr': 'abs'},\n  {'coeff': 8, 'attr': 'abs'},\n  {'coeff': 9, 'attr': 'abs'},\n  {'coeff': 10, 'attr': 'abs'},\n  {'coeff': 11, 'attr': 'abs'},\n  {'coeff': 12, 'attr': 'abs'},\n  {'coeff': 13, 'attr': 'abs'},\n  {'coeff': 14, 'attr': 'abs'},\n  {'coeff': 15, 'attr': 'abs'},\n  {'coeff': 16, 'attr': 'abs'},\n  {'coeff': 17, 'attr': 'abs'},\n  {'coeff': 18, 'attr': 'abs'},\n  {'coeff': 19, 'attr': 'abs'},\n  {'coeff': 20, 'attr': 'abs'},\n  {'coeff': 21, 'attr': 'abs'},\n  {'coeff': 22, 'attr': 'abs'},\n  {'coeff': 23, 'attr': 'abs'},\n  {'coeff': 24, 'attr': 'abs'},\n  {'coeff': 25, 'attr': 'abs'},\n  {'coeff': 26, 'attr': 'abs'},\n  {'coeff': 27, 'attr': 'abs'},\n  {'coeff': 28, 'attr': 'abs'},\n  {'coeff': 29, 'attr': 'abs'},\n  {'coeff': 30, 'attr': 'abs'},\n  {'coeff': 31, 'attr': 'abs'},\n  {'coeff': 32, 'attr': 'abs'},\n  {'coeff': 33, 'attr': 'abs'},\n  {'coeff': 34, 'attr': 'abs'},\n  {'coeff': 35, 'attr': 'abs'},\n  {'coeff': 36, 'attr': 'abs'},\n  {'coeff': 37, 'attr': 'abs'},\n  {'coeff': 38, 'attr': 'abs'},\n  {'coeff': 39, 'attr': 'abs'},\n  {'coeff': 40, 'attr': 'abs'},\n  {'coeff': 41, 'attr': 'abs'},\n  {'coeff': 42, 'attr': 'abs'},\n  {'coeff': 43, 'attr': 'abs'},\n  {'coeff': 44, 'attr': 'abs'},\n  {'coeff': 45, 'attr': 'abs'},\n  {'coeff': 46, 'attr': 'abs'},\n  {'coeff': 47, 'attr': 'abs'},\n  {'coeff': 48, 'attr': 'abs'},\n  {'coeff': 49, 'attr': 'abs'},\n  {'coeff': 50, 'attr': 'abs'},\n  {'coeff': 51, 'attr': 'abs'},\n  {'coeff': 52, 'attr': 'abs'},\n  {'coeff': 53, 'attr': 'abs'},\n  {'coeff': 54, 'attr': 'abs'},\n  {'coeff': 55, 'attr': 'abs'},\n  {'coeff': 56, 'attr': 'abs'},\n  {'coeff': 57, 'attr': 'abs'},\n  {'coeff': 58, 'attr': 'abs'},\n  {'coeff': 59, 'attr': 'abs'},\n  {'coeff': 60, 'attr': 'abs'},\n  {'coeff': 61, 'attr': 'abs'},\n  {'coeff': 62, 'attr': 'abs'},\n  {'coeff': 63, 'attr': 'abs'},\n  {'coeff': 64, 'attr': 'abs'},\n  {'coeff': 65, 'attr': 'abs'},\n  {'coeff': 66, 'attr': 'abs'},\n  {'coeff': 67, 'attr': 'abs'},\n  {'coeff': 68, 'attr': 'abs'},\n  {'coeff': 69, 'attr': 'abs'},\n  {'coeff': 70, 'attr': 'abs'},\n  {'coeff': 71, 'attr': 'abs'},\n  {'coeff': 72, 'attr': 'abs'},\n  {'coeff': 73, 'attr': 'abs'},\n  {'coeff': 74, 'attr': 'abs'},\n  {'coeff': 75, 'attr': 'abs'},\n  {'coeff': 76, 'attr': 'abs'},\n  {'coeff': 77, 'attr': 'abs'},\n  {'coeff': 78, 'attr': 'abs'},\n  {'coeff': 79, 'attr': 'abs'},\n  {'coeff': 80, 'attr': 'abs'},\n  {'coeff': 81, 'attr': 'abs'},\n  {'coeff': 82, 'attr': 'abs'},\n  {'coeff': 83, 'attr': 'abs'},\n  {'coeff': 84, 'attr': 'abs'},\n  {'coeff': 85, 'attr': 'abs'},\n  {'coeff': 86, 'attr': 'abs'},\n  {'coeff': 87, 'attr': 'abs'},\n  {'coeff': 88, 'attr': 'abs'},\n  {'coeff': 89, 'attr': 'abs'},\n  {'coeff': 90, 'attr': 'abs'},\n  {'coeff': 91, 'attr': 'abs'},\n  {'coeff': 92, 'attr': 'abs'},\n  {'coeff': 93, 'attr': 'abs'},\n  {'coeff': 94, 'attr': 'abs'},\n  {'coeff': 95, 'attr': 'abs'},\n  {'coeff': 96, 'attr': 'abs'},\n  {'coeff': 97, 'attr': 'abs'},\n  {'coeff': 98, 'attr': 'abs'},\n  {'coeff': 99, 'attr': 'abs'},\n  {'coeff': 0, 'attr': 'angle'},\n  {'coeff': 1, 'attr': 'angle'},\n  {'coeff': 2, 'attr': 'angle'},\n  {'coeff': 3, 'attr': 'angle'},\n  {'coeff': 4, 'attr': 'angle'},\n  {'coeff': 5, 'attr': 'angle'},\n  {'coeff': 6, 'attr': 'angle'},\n  {'coeff': 7, 'attr': 'angle'},\n  {'coeff': 8, 'attr': 'angle'},\n  {'coeff': 9, 'attr': 'angle'},\n  {'coeff': 10, 'attr': 'angle'},\n  {'coeff': 11, 'attr': 'angle'},\n  {'coeff': 12, 'attr': 'angle'},\n  {'coeff': 13, 'attr': 'angle'},\n  {'coeff': 14, 'attr': 'angle'},\n  {'coeff': 15, 'attr': 'angle'},\n  {'coeff': 16, 'attr': 'angle'},\n  {'coeff': 17, 'attr': 'angle'},\n  {'coeff': 18, 'attr': 'angle'},\n  {'coeff': 19, 'attr': 'angle'},\n  {'coeff': 20, 'attr': 'angle'},\n  {'coeff': 21, 'attr': 'angle'},\n  {'coeff': 22, 'attr': 'angle'},\n  {'coeff': 23, 'attr': 'angle'},\n  {'coeff': 24, 'attr': 'angle'},\n  {'coeff': 25, 'attr': 'angle'},\n  {'coeff': 26, 'attr': 'angle'},\n  {'coeff': 27, 'attr': 'angle'},\n  {'coeff': 28, 'attr': 'angle'},\n  {'coeff': 29, 'attr': 'angle'},\n  {'coeff': 30, 'attr': 'angle'},\n  {'coeff': 31, 'attr': 'angle'},\n  {'coeff': 32, 'attr': 'angle'},\n  {'coeff': 33, 'attr': 'angle'},\n  {'coeff': 34, 'attr': 'angle'},\n  {'coeff': 35, 'attr': 'angle'},\n  {'coeff': 36, 'attr': 'angle'},\n  {'coeff': 37, 'attr': 'angle'},\n  {'coeff': 38, 'attr': 'angle'},\n  {'coeff': 39, 'attr': 'angle'},\n  {'coeff': 40, 'attr': 'angle'},\n  {'coeff': 41, 'attr': 'angle'},\n  {'coeff': 42, 'attr': 'angle'},\n  {'coeff': 43, 'attr': 'angle'},\n  {'coeff': 44, 'attr': 'angle'},\n  {'coeff': 45, 'attr': 'angle'},\n  {'coeff': 46, 'attr': 'angle'},\n  {'coeff': 47, 'attr': 'angle'},\n  {'coeff': 48, 'attr': 'angle'},\n  {'coeff': 49, 'attr': 'angle'},\n  {'coeff': 50, 'attr': 'angle'},\n  {'coeff': 51, 'attr': 'angle'},\n  {'coeff': 52, 'attr': 'angle'},\n  {'coeff': 53, 'attr': 'angle'},\n  {'coeff': 54, 'attr': 'angle'},\n  {'coeff': 55, 'attr': 'angle'},\n  {'coeff': 56, 'attr': 'angle'},\n  {'coeff': 57, 'attr': 'angle'},\n  {'coeff': 58, 'attr': 'angle'},\n  {'coeff': 59, 'attr': 'angle'},\n  {'coeff': 60, 'attr': 'angle'},\n  {'coeff': 61, 'attr': 'angle'},\n  {'coeff': 62, 'attr': 'angle'},\n  {'coeff': 63, 'attr': 'angle'},\n  {'coeff': 64, 'attr': 'angle'},\n  {'coeff': 65, 'attr': 'angle'},\n  {'coeff': 66, 'attr': 'angle'},\n  {'coeff': 67, 'attr': 'angle'},\n  {'coeff': 68, 'attr': 'angle'},\n  {'coeff': 69, 'attr': 'angle'},\n  {'coeff': 70, 'attr': 'angle'},\n  {'coeff': 71, 'attr': 'angle'},\n  {'coeff': 72, 'attr': 'angle'},\n  {'coeff': 73, 'attr': 'angle'},\n  {'coeff': 74, 'attr': 'angle'},\n  {'coeff': 75, 'attr': 'angle'},\n  {'coeff': 76, 'attr': 'angle'},\n  {'coeff': 77, 'attr': 'angle'},\n  {'coeff': 78, 'attr': 'angle'},\n  {'coeff': 79, 'attr': 'angle'},\n  {'coeff': 80, 'attr': 'angle'},\n  {'coeff': 81, 'attr': 'angle'},\n  {'coeff': 82, 'attr': 'angle'},\n  {'coeff': 83, 'attr': 'angle'},\n  {'coeff': 84, 'attr': 'angle'},\n  {'coeff': 85, 'attr': 'angle'},\n  {'coeff': 86, 'attr': 'angle'},\n  {'coeff': 87, 'attr': 'angle'},\n  {'coeff': 88, 'attr': 'angle'},\n  {'coeff': 89, 'attr': 'angle'},\n  {'coeff': 90, 'attr': 'angle'},\n  {'coeff': 91, 'attr': 'angle'},\n  {'coeff': 92, 'attr': 'angle'},\n  {'coeff': 93, 'attr': 'angle'},\n  {'coeff': 94, 'attr': 'angle'},\n  {'coeff': 95, 'attr': 'angle'},\n  {'coeff': 96, 'attr': 'angle'},\n  {'coeff': 97, 'attr': 'angle'},\n  {'coeff': 98, 'attr': 'angle'},\n  {'coeff': 99, 'attr': 'angle'}],\n 'fft_aggregated': [{'aggtype': 'centroid'},\n  {'aggtype': 'variance'},\n  {'aggtype': 'skew'},\n  {'aggtype': 'kurtosis'}],\n 'value_count': [{'value': 0}, {'value': 1}, {'value': -1}],\n 'range_count': [{'min': -1, 'max': 1},\n  {'min': 1000000000000.0, 'max': 0},\n  {'min': 0, 'max': 1000000000000.0}],\n 'approximate_entropy': [{'m': 2, 'r': 0.1},\n  {'m': 2, 'r': 0.3},\n  {'m': 2, 'r': 0.5},\n  {'m': 2, 'r': 0.7},\n  {'m': 2, 'r': 0.9}],\n 'friedrich_coefficients': [{'coeff': 0, 'm': 3, 'r': 30},\n  {'coeff': 1, 'm': 3, 'r': 30},\n  {'coeff': 2, 'm': 3, 'r': 30},\n  {'coeff': 3, 'm': 3, 'r': 30}],\n 'max_langevin_fixed_point': [{'m': 3, 'r': 30}],\n 'linear_trend': [{'attr': 'pvalue'},\n  {'attr': 'rvalue'},\n  {'attr': 'intercept'},\n  {'attr': 'slope'},\n  {'attr': 'stderr'}],\n 'agg_linear_trend': [{'attr': 'rvalue', 'chunk_len': 5, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 5, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 5, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 5, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 10, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 10, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 10, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 10, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 50, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 50, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 50, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 50, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 5, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 5, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 5, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 5, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 10, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 10, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 10, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 10, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 50, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 50, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 50, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 50, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 5, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 5, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 5, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 5, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 10, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 10, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 10, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 10, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 50, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 50, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 50, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 50, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 5, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 5, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 5, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 5, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 10, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 10, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 10, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 10, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 50, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 50, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 50, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 50, 'f_agg': 'var'}],\n 'augmented_dickey_fuller': [{'attr': 'teststat'},\n  {'attr': 'pvalue'},\n  {'attr': 'usedlag'}],\n 'number_crossing_m': [{'m': 0}, {'m': -1}, {'m': 1}],\n 'energy_ratio_by_chunks': [{'num_segments': 10, 'segment_focus': 0},\n  {'num_segments': 10, 'segment_focus': 1},\n  {'num_segments': 10, 'segment_focus': 2},\n  {'num_segments': 10, 'segment_focus': 3},\n  {'num_segments': 10, 'segment_focus': 4},\n  {'num_segments': 10, 'segment_focus': 5},\n  {'num_segments': 10, 'segment_focus': 6},\n  {'num_segments': 10, 'segment_focus': 7},\n  {'num_segments': 10, 'segment_focus': 8},\n  {'num_segments': 10, 'segment_focus': 9}],\n 'ratio_beyond_r_sigma': [{'r': 0.5},\n  {'r': 1},\n  {'r': 1.5},\n  {'r': 2},\n  {'r': 2.5},\n  {'r': 3},\n  {'r': 5},\n  {'r': 6},\n  {'r': 7},\n  {'r': 10}]}","d0816cbf":"settings={\n'standard_deviation': None,\n 'variance': None,\n 'skewness': None,\n 'kurtosis': None,\n 'absolute_sum_of_changes': None,\n\n'last_location_of_maximum': None,\n 'first_location_of_maximum': None,\n 'last_location_of_minimum': None,\n'first_location_of_minimum': None,\n'count_above_mean': None,\n 'count_below_mean': None,\n 'maximum': None,\n 'minimum': None,\n\n    \n 'c3': [{'lag': 100}, {'lag': 2000}, {'lag': 3000},{'lag': 10000}],\n\n'number_peaks': [{'n': 1}, {'n': 5},{'n': 100},{'n': 1000}],\n'fft_coefficient': \n [{'coeff': 0, 'attr': 'real'},\n  {'coeff': 1, 'attr': 'real'},\n  {'coeff': 2, 'attr': 'real'},\n  {'coeff': 3, 'attr': 'real'},\n  {'coeff': 4, 'attr': 'real'},\n\n  {'coeff': 0, 'attr': 'imag'},\n  {'coeff': 1, 'attr': 'imag'},\n  {'coeff': 2, 'attr': 'imag'},\n  {'coeff': 3, 'attr': 'imag'},\n  {'coeff': 4, 'attr': 'imag'},\n  {'coeff': 5, 'attr': 'imag'},\n\n  {'coeff': 0, 'attr': 'abs'},\n  {'coeff': 1, 'attr': 'abs'},\n  {'coeff': 2, 'attr': 'abs'},\n  {'coeff': 3, 'attr': 'abs'},\n  {'coeff': 4, 'attr': 'abs'},\n  {'coeff': 5, 'attr': 'abs'},\n\n  {'coeff': 0, 'attr': 'angle'},\n  {'coeff': 1, 'attr': 'angle'},\n  {'coeff': 2, 'attr': 'angle'},\n  {'coeff': 3, 'attr': 'angle'},\n  {'coeff': 4, 'attr': 'angle'},\n  {'coeff': 5, 'attr': 'angle'},\n],\n 'agg_linear_trend': [\n     {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'var'}],\n 'index_mass_quantile': [{'q': 0.1},\n  {'q': 0.2},\n  {'q': 0.3},\n  {'q': 0.4},\n  {'q': 0.6},\n  {'q': 0.7},\n  {'q': 0.8},\n  {'q': 0.9}],\n\n 'spkt_welch_density': [{'coeff': 2}, {'coeff': 5}, {'coeff': 8}],\n 'ar_coefficient': [{'coeff': 0, 'k': 10},\n  {'coeff': 1, 'k': 10},\n  {'coeff': 2, 'k': 10},\n  {'coeff': 3, 'k': 10},\n  {'coeff': 4, 'k': 10}],\n\n 'energy_ratio_by_chunks': [{'num_segments': 10, 'segment_focus': 0},\n  {'num_segments': 10, 'segment_focus': 1},\n  {'num_segments': 10, 'segment_focus': 2},\n  {'num_segments': 10, 'segment_focus': 3},\n  {'num_segments': 10, 'segment_focus': 4},\n  {'num_segments': 10, 'segment_focus': 5},\n  {'num_segments': 10, 'segment_focus': 6},\n  {'num_segments': 10, 'segment_focus': 7},\n  {'num_segments': 10, 'segment_focus': 8},\n  {'num_segments': 10, 'segment_focus': 9}],\n 'ratio_beyond_r_sigma': [{'r': 0.5},\n  {'r': 1},\n  {'r': 1.5},\n  {'r': 2},\n  {'r': 2.5},\n  {'r': 3},\n  {'r': 5},\n  {'r': 6},\n  {'r': 7},\n  {'r': 10}],\n'max_langevin_fixed_point': [{'m': 3, 'r': 30}],\n    'change_quantiles': [{'ql': 0.0, 'qh': 0.2, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.2, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.4, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.6, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': False, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': False, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': True, 'f_agg': 'mean'},\n  {'ql': 0.0, 'qh': 0.8, 'isabs': True, 'f_agg': 'var'},\n  {'ql': 0.0, 'qh': 1.0, 'isabs': False, 'f_agg': 'mean'}]\n\n}","29e8eaf9":"\ntrain_t=train[:150000]\ntrain_t=pd.concat([pd.DataFrame({'id': np.ones(train_t.shape[0])}, dtype=np.int16),\n                   pd.DataFrame({'time': range(train_t.shape[0])}, dtype=np.int32),\n                   train_t.iloc[:,0]],axis=1)\n\nprint(train_t.shape)\nprint(train_t.head())","a0fada2a":"res  = pd.DataFrame()\nn_ts = 20\nl_ts = 1000\nn_ti = 3\n\ndef tsfresh_time(sett):\n    for f, param in tqdm(sett.items()):\n        res.loc[f, \"feature\"] = f\n        res.loc[f, \"n_samp\"] = n_ts\n        res.loc[f, \"length\"] = l_ts\n\n        fc_dict = {f:param}\n\n        t = timeit.timeit(lambda : extract_features(train_t, \n                         column_id='id',\n                         column_sort='time',\n                         column_value=\"acoustic_data\",\n                         n_jobs=1, \n                         default_fc_parameters=fc_dict, \n                         disable_progressbar=True), \n                          number=n_ti)\n        n_fs = 1\n        res.loc[f, \"n_fs\"] = n_fs\n        res.loc[f, \"t_abs\"] = t * 1.0\/n_fs\n        res.loc[f, \"t_1ts\"] = t*1.0\/(n_ts*n_fs)\n    return res\n","fb0c9eeb":"res=pd.DataFrame()\nres=tsfresh_time(settings)\nres[\"feature\"] = res.feature.astype(str)\nres = res.sort_values(by=\"feature\")\n\nplt.figure(figsize=(6, 20))\nsns.barplot(y=\"feature\", x=\"t_abs\", data=res)\nplt.title(\"Runtime of 1 apply features for 1 time series of length 15000\")\nplt.show()","e2cc3a65":"settings={\n'standard_deviation': None,\n 'variance': None,\n 'skewness': None,\n 'kurtosis': None,\n\n 'count_above_mean': None,\n 'count_below_mean': None,\n'last_location_of_maximum': None,\n 'first_location_of_maximum': None,\n 'last_location_of_minimum': None,\n'first_location_of_minimum': None,\n\n 'maximum': None,\n 'minimum': None,\n\n 'c3': [{'lag': 100}, {'lag': 2000}, {'lag': 3000},{'lag': 10000}],\n\n'number_peaks': [{'n': 1}, \n                  {'n': 3}, \n                  {'n': 5},{'n': 100},{'n': 5000}],\n'fft_coefficient': \n [{'coeff': 0, 'attr': 'real'},\n  {'coeff': 1, 'attr': 'real'},\n  {'coeff': 2, 'attr': 'real'},\n  {'coeff': 3, 'attr': 'real'},\n  {'coeff': 4, 'attr': 'real'},\n\n  {'coeff': 0, 'attr': 'imag'},\n  {'coeff': 1, 'attr': 'imag'},\n  {'coeff': 2, 'attr': 'imag'},\n  {'coeff': 3, 'attr': 'imag'},\n  {'coeff': 4, 'attr': 'imag'},\n  {'coeff': 5, 'attr': 'imag'},\n\n  {'coeff': 0, 'attr': 'abs'},\n  {'coeff': 1, 'attr': 'abs'},\n  {'coeff': 2, 'attr': 'abs'},\n  {'coeff': 3, 'attr': 'abs'},\n  {'coeff': 4, 'attr': 'abs'},\n  {'coeff': 5, 'attr': 'abs'},\n\n  {'coeff': 0, 'attr': 'angle'},\n  {'coeff': 1, 'attr': 'angle'},\n  {'coeff': 2, 'attr': 'angle'},\n  {'coeff': 3, 'attr': 'angle'},\n  {'coeff': 4, 'attr': 'angle'},\n  {'coeff': 5, 'attr': 'angle'},\n],\n 'agg_linear_trend': [\n     {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'rvalue', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'intercept', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'slope', 'chunk_len': 5000, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 500, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 1000, 'f_agg': 'var'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'max'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'min'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'mean'},\n  {'attr': 'stderr', 'chunk_len': 5000, 'f_agg': 'var'}],\n 'index_mass_quantile': [{'q': 0.1},\n  {'q': 0.2},\n  {'q': 0.3},\n  {'q': 0.4},\n  {'q': 0.6},\n  {'q': 0.7},\n  {'q': 0.8},\n  {'q': 0.9}],\n\n 'spkt_welch_density': [{'coeff': 2}, {'coeff': 5}, {'coeff': 8}],\n 'ar_coefficient': [{'coeff': 0, 'k': 10},\n  {'coeff': 1, 'k': 10},\n  {'coeff': 2, 'k': 10},\n  {'coeff': 3, 'k': 10},\n  {'coeff': 4, 'k': 10}],\n\n 'energy_ratio_by_chunks': [{'num_segments': 10, 'segment_focus': 0},\n  {'num_segments': 10, 'segment_focus': 1},\n  {'num_segments': 10, 'segment_focus': 2},\n  {'num_segments': 10, 'segment_focus': 3},\n  {'num_segments': 10, 'segment_focus': 4},\n  {'num_segments': 10, 'segment_focus': 5},\n  {'num_segments': 10, 'segment_focus': 6},\n  {'num_segments': 10, 'segment_focus': 7},\n  {'num_segments': 10, 'segment_focus': 8},\n  {'num_segments': 10, 'segment_focus': 9}],\n 'ratio_beyond_r_sigma': [{'r': 0.5},\n  {'r': 1},\n  {'r': 1.5},\n  {'r': 2},\n  {'r': 2.5},\n  {'r': 3},\n  {'r': 5},\n  {'r': 6},\n  {'r': 7},\n  {'r': 10}],\n'max_langevin_fixed_point': [{'m': 3, 'r': 30}],\n\n}\npeak={\n'number_peaks': [{'n': 1}, \n                  {'n': 3}, \n                  {'n': 5}, \n                  {'n': 10}]}\n","6cf55aa6":"res=pd.DataFrame()\nres=tsfresh_time(settings)\nres[\"feature\"] = res.feature.astype(str)\nres = res.sort_values(by=\"feature\")\n\nplt.figure(figsize=(6, 20))\nsns.barplot(y=\"feature\", x=\"t_abs\", data=res)\nplt.title(\"Runtime of 1 apply features for 1 time series of length 15000\")\nplt.show()","2cef01d3":"start = time.time()\n\n# Create a training file with simple derived features\nn = 150000\nparts=37500\nsegments = ((len(train) + n - 1)\/\/n)-1\nids = pd.DataFrame({'id': np.ones(n)}, dtype=np.int16)\ntimes = pd.DataFrame({'time': range(n)}, dtype=np.int32)\nX_filtered = pd.DataFrame()\ny_tr = pd.DataFrame(index=range(segments), dtype=np.float64, \n                    columns=['time_to_failure'])\n\n\ndef ts_features(train1,settings):\n    X=extract_features(train1, \n                     column_id='id',\n                     column_sort='time',\n                     column_value=\"acoustic_data\",\n                     default_fc_parameters=settings,\n                     #impute_function= impute,\n                     disable_progressbar=True,\n                     show_warnings=True)\n    return X\n\nfor i in progressbar(range(segments), \"Computing: \", 40):  \n    X1 = pd.DataFrame()\n    train1=pd.concat([ids,times,train[i * n:(i + 1) *n].reset_index(drop=True)],axis=1)\n    seg = train[i*n:(i + 1)*n]\n    y = seg['time_to_failure'].values[-1]\n    y_tr.loc[i, 'time_to_failure'] = y\n    \n    #Features in whole segment\n    X2=ts_features(train1,peak)\n    #Features per section 4x37500\n    for j in range(4):\n        \n        X=ts_features(train1[j * parts:(j + 1) *parts],settings).add_prefix('q_' +str(j))\n        X1=pd.concat([X1,X], axis=1)\n   \n    #print(X1.shape)\n    X_filtered=X_filtered.append(pd.concat([X1,X2], axis=1))\n    \n\nX_filtered=X_filtered.reset_index().drop(['id'], axis=1)\nprint(X_filtered.shape)\nprint(y_tr.shape)\ndel train\n\nend = time.time()\nprint(\"Time\",end - start)\n","137a1077":"submission = pd.read_csv('..\/input\/sample_submission.csv', index_col='seg_id')\nstart = time.time()\nX_testfresh = pd.DataFrame()\n# Load each test data, create the feature matrix, get numeric prediction\nfor i in progressbar(range(len(submission)), \"Computing: \", 40):\n  #  print(i)\n    X1 = pd.DataFrame()\n    ids = pd.DataFrame({'id': [submission.index[i] for number in range(n)]}, dtype=np.int16)\n    seg = pd.read_csv('..\/input\/test\/' + submission.index[i] + '.csv' )\n    x = seg['acoustic_data']\n    test=pd.concat([ids,times,x],axis=1)\n    \n    #Features in whole segment\n    X2=ts_features(test,peak)\n    #Features per section 5x30000\n    for j in range(4):\n        X=ts_features(test[j * parts:(j + 1) *parts],settings).add_prefix('q_' +str(j))\n        X1=pd.concat([X1,X], axis=1)\n    #print(X1.shape)\n    X_testfresh=X_testfresh.append(pd.concat([X1,X2], axis=1))\nend = time.time()\nprint(\"Time\",end - start)\n","45aa7206":"dfb=X_filtered.reset_index(drop=True).append(X_testfresh)\ndfb.to_csv('unfiltered.csv',index=False)\nprint(dfb.shape)\ndfb=dfb.dropna(axis='columns')\ndfb=dfb.loc[:, (dfb != dfb.iloc[0]).any()] \nprint(dfb.shape)\ndfb.head()","05fae1f7":"df=pd.concat([y_tr,dfb[:X_filtered.shape[0]]], axis=1)\ndf.to_csv('tsfreshFeaturestrain.csv',index=False)\ntest=dfb[-X_testfresh.shape[0]:]\ntest.to_csv('tsfreshFeaturestest.csv',index=False)\n\nX=df[df.columns.difference(['time_to_failure'])]\ny=df['time_to_failure']\n\n#Scaling train and test features at the same time\nscaler=MinMaxScaler(feature_range=(0, 1))\nscaled=scaler.fit_transform(X.append(test))\n\ntrain=pd.DataFrame(scaled[:X.shape[0]], columns=X.columns.values)\ntest=pd.DataFrame(scaled[-test.shape[0]:], columns=X.columns.values)\ntrainX, testX, trainy, testy = train_test_split(train, y, test_size=0.0,shuffle=True)\n","be103d38":"\n\nmodel = GradientBoostingRegressor(learning_rate=0.009, loss='huber',max_depth=5,max_features=150,n_estimators=650)\nnum_folds = 5\ncross_validate_results = cross_validate(model, trainX, trainy, n_jobs=-1, return_estimator= True, return_train_score=True, cv=num_folds,  scoring=\"neg_mean_absolute_error\" )\n\nfor i in range(num_folds):\n    print(\"Fold: {} Training MAE: {}\".format(i,-cross_validate_results['train_score'][i]))\n    print(\"Fold: {} Validation MAE: {}\".format(i,-cross_validate_results['test_score'][i]))\nprint(-cross_validate_results['train_score'].mean(), cross_validate_results['train_score'].std())\nprint(-cross_validate_results['test_score'].mean(), cross_validate_results['test_score'].std())\n\nmodel.fit(trainX, trainy)\ndata=pd.concat([pd.DataFrame(X.columns.values,columns={'Features'}),\n           pd.DataFrame(model.feature_importances_,columns={'Importance'})*100],\n               axis=1).sort_values(by='Importance', ascending=False)\n\ndata.to_csv('FeaturesImportance.csv',index=False)\n\nplt.figure(figsize=(6, 20))\nsns.barplot(y=\"Features\", x=\"Importance\", data=data[:150])\nplt.title(\"Features\")\nplt.show()","5bfd1f5e":"from sklearn.metrics import mean_absolute_error\nmae = np.array([])\npredictions1 = np.zeros(len(test))\nfeature_importance_df = pd.DataFrame()\n#run model\n\nn_fold = 5\nfolds = KFold(n_splits=n_fold, shuffle=True, random_state=42)\ntrain_columns = trainX.columns.values\n\nfor fold_, (trn_idx, val_idx) in enumerate(folds.split(trainX,trainy.values)):\n    strLog = \"fold {}\".format(fold_)\n    \n    X_tr, X_val = trainX.iloc[trn_idx], trainX.iloc[val_idx]\n    y_tr, y_val = trainy.iloc[trn_idx], trainy.iloc[val_idx]\n\n    \n    model.fit(X_tr, y_tr)\n    \n    mae = np.append(mae, mean_absolute_error(y_val, model.predict(X_val)))\n    print(\"Fold: {} Validation MAE: {}\".format(strLog,mae[fold_]))\n  \n    #predictions\n    predictions1 += model.predict(test) \/ folds.n_splits\nnp.mean(mae)","97342875":"submission.time_to_failure = predictions1\nsubmission.to_csv('submissiongbm.csv',index=True)\nsubmission.head()","869f35bc":"\n\nparams={'bagging_fraction': 0.72,\n'boosting': 'gbdt',\n'feature_fraction' : 0.55,\n'lambda_l1': 4.2030167201177235,\n'lambda_l2': 2.8818379730100174,\n'learning_rate': 0.04197920600013021,\n'max_bin': 182,\n'max_depth': 13,\n'metric': 'RMSE',\n'min_data_in_bin': 106,\n'min_data_in_leaf': 83,\n'num_leaves': 1415,\n'objective': 'fair',\n'subsample': 0.5807414994404817}\n\n","02230270":"\npredictions2 = np.zeros(len(test))\nfeature_importance_df = pd.DataFrame()\n#run model\n\nn_fold = 5\nfolds = KFold(n_splits=n_fold, shuffle=True, random_state=42)\ntrain_columns = trainX.columns.values\n\nfor fold_, (trn_idx, val_idx) in enumerate(folds.split(trainX,trainy.values)):\n    strLog = \"fold {}\".format(fold_)\n    \n    X_tr, X_val = trainX.iloc[trn_idx], trainX.iloc[val_idx]\n    y_tr, y_val = trainy.iloc[trn_idx], trainy.iloc[val_idx]\n\n    print(strLog)\n    \n    model = lgb.LGBMRegressor(**params, n_estimators = 20000, n_jobs = -1)\n    model.fit(X_tr, \n              y_tr, \n              eval_set=[(X_tr, y_tr), (X_val, y_val)], \n              eval_metric='mae',\n              verbose=1000, \n              early_stopping_rounds=1000)\n    mae = np.append(mae, mean_absolute_error(y_val, model.predict(X_val)))\n    print(\"Fold: {} Validation MAE: {}\".format(strLog,mae[fold_]))\n    #predictions\n    predictions2 += model.predict(test, num_iteration=model.best_iteration_) \/ folds.n_splits\nnp.mean(mae)","7f0e074a":"submission.time_to_failure = predictions2\nsubmission.to_csv('submissionlgbm.csv',index=True)\nsubmission.head()","8148396a":"blending = predictions1*0.5 + predictions2*0.5 \nsubmission['time_to_failure']=blending\nsubmission.to_csv('submissionblend.csv',index=True)\nsubmission.head()","bca100ed":"**Regression with GBM and LightGBM**","851e9adf":"**Choose some features from the list above.\n(Remove features which take an unreasonable amount of time to calculate)**","c7e21d41":"Import the data ","74fb490c":"**Define features which are going to be used for the final feature extraction.**","de35298f":"**This contains the features from the tsfresh library ComprehensiveFCParameters**","2994f369":"**Feature Extraction for submission**","7dcc32be":"**Feature Extraction for segments of length 150,000. Also each segment is divided into 4 sections of 37500 in length where the ts_features(train1,settings)function is used.**","75482f02":"**Filtering Data to remove repeating values as well as N\/A values.**","7a02a8e7":"**Calculate relative time spent for every feature**"}}