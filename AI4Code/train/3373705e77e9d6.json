{"cell_type":{"91f71517":"code","99f5cb11":"code","9beda854":"code","8bfb6e05":"code","f80b5260":"code","9cdcf76b":"code","2654dfec":"code","edbdf602":"code","caf66870":"code","9f6fdf58":"code","1eded04c":"code","bd5a637c":"code","ff85cdf3":"code","e3e46fe4":"code","e9b3e2aa":"markdown","86bfc9e8":"markdown","ed45f04e":"markdown","a35e6c28":"markdown","0fee5abf":"markdown","f566afd2":"markdown","28d29ca9":"markdown","0cadc5a1":"markdown","5d165267":"markdown","2279a07b":"markdown","eb95e1ad":"markdown","e4539c72":"markdown","2af93164":"markdown"},"source":{"91f71517":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import mean_squared_error","99f5cb11":"data_set = pd.read_csv('..\/input\/insurance\/insurance.csv')\nprint(data_set.head(10))\nprint(data_set.shape)","9beda854":"sns.countplot(x = 'region', hue = 'sex' , data = data_set)","8bfb6e05":"sns.countplot(x = 'smoker', hue = 'sex' , data = data_set)","f80b5260":"data_set['bmi'].plot.hist(bins=50,figsize=(15,5))","9cdcf76b":"data_set.sex.replace(['male', 'female'], [1, 0], inplace=True) # if male , replace value to 1 else to 0.\ndata_set.smoker.replace(['yes', 'no'], [1,0], inplace=True) # if smoker, replace value to 1 else to 0.\ndata_set.drop(['region'], axis=1, inplace=True)","2654dfec":"data_set.isnull().sum()","edbdf602":"X = data_set.drop('charges', axis=1) # input column\ny = data_set['charges'] # output column\nprint(X.head(5))\nprint()\nprint(y.head(5))","caf66870":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state = 1)","9f6fdf58":"linear_model = LinearRegression()","1eded04c":"linear_model.fit(X_train,y_train)\npredictions = linear_model.predict(X_test)","bd5a637c":"print(mean_squared_error(y_test, predictions))","ff85cdf3":"linear_model.score(X_test, predictions)","e3e46fe4":"val = input('Do you want to predict a value : ( \"Y\" for yes \"N\" for no ) : ')\ntemp_val = []\nif val == 'Y' or 'y':\n    age = int(input('Enter the age of candidate : '))\n    temp_val.append(age)\n    sex = int(input('Enter the sex of the candidates : '))\n    temp_val.append(sex)\n    bmi = float(input('Enter the BMI of the candidate : '))\n    temp_val.append(bmi)\n    children = int(input('Enter the value of the children : '))\n    temp_val.append(children)\n    smoker = int(input('Enter the value for smoking : '))\n    temp_val.append(smoker)\nelse :\n    print('Have fun !!')\nnew_val = [temp_val]\npredict = linear_model.predict(new_val)\nprint()\nprint(\"Input Data : %s, Predicted Amount : $ %s \" % (new_val[0], predict[0]))\n#print(data_set.head(10))","e9b3e2aa":"If the user want to enter any custom input and check for the most probable output, the next column can be executed","86bfc9e8":"First we import all the necessary libraries and functions.","ed45f04e":"Here, I try to see the total number of people in each region according to the sex.","a35e6c28":"Here, I try to see the total number of smokers in each category of 'sex'.","0fee5abf":"Now we fit our training data into the model and predict the output using the testing data.","f566afd2":"Now, to see the BMI graph.","28d29ca9":"Now we need to make the data into our standard Linear Regression data set, i.e. splitthe data into 'input' and 'output'.","0cadc5a1":"Here we introduce our Linear Regression Model.","5d165267":"We now need to check if there are any 'NaN' values in our data.","2279a07b":"Now we split the data into traingset and testing set.","eb95e1ad":"# Linear Regressional Prediction on Health Insurance","e4539c72":"As we need numberic values instead of 'str', therefore we replace all the 'str' value columns to binary inputs '1' or '0'.","2af93164":"Here we load the data from the Google Data Library."}}