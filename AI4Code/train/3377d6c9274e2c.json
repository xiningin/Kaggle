{"cell_type":{"800c8586":"code","af87e20b":"code","3aa7feba":"code","5c08bac2":"code","7c350f00":"code","25a6b9c7":"code","2940f0a8":"code","30023480":"code","ab815b03":"code","e4041a3c":"code","050f3f0b":"code","8a78a208":"code","95f3f0f6":"code","4fb43d4f":"code","9d55cb82":"code","f90915df":"code","30463e4e":"code","635a130f":"code","63761916":"code","38be2b41":"code","982a1ed5":"code","61d2598a":"code","495dc32c":"code","2f827c10":"code","c3b7e53c":"code","4765793d":"code","6d1179ff":"code","552a2044":"code","423f6a22":"code","f9400aa9":"code","3f1934e5":"code","a87f0655":"code","584655eb":"code","a0c3f71f":"code","4b97f403":"code","a2af6b7e":"code","daa574aa":"code","b54b450a":"code","13158cc2":"code","f7894fc5":"code","5f545a99":"code","c039560f":"code","6004b04f":"code","928312c3":"code","befbaffd":"code","f23ded7f":"code","a717ae43":"code","723a76ba":"code","cc5c91c3":"code","9112f5ab":"code","475f2464":"code","fdb58a5b":"code","d87d6d8c":"code","1a92fdb0":"code","31703e4a":"code","c3b4ac6b":"code","b6077f1d":"code","1363f743":"code","3d4a1a3f":"code","c0e7b28d":"code","60a73c37":"code","0e42b65c":"code","69148dbc":"code","b3a03243":"code","fe1c9a91":"code","eea62b7e":"code","9c21ea66":"code","47177762":"code","ae579094":"code","e87df4ac":"code","630e09f7":"code","c07f2460":"code","1e4f52b2":"code","435c7b72":"code","26c6cea0":"code","61a43331":"code","df50171a":"code","9882525a":"code","54a1f3ea":"code","28ea5baf":"code","4ad1cb9c":"code","67b20c84":"code","3a2bf054":"code","47d8dd01":"code","c13af29f":"code","88d90a49":"code","782e185a":"code","8a0ef7d6":"code","0b4b1048":"code","53b4ba59":"code","9f376889":"code","1594adbe":"code","d071deba":"code","089b2365":"code","dec390ca":"code","4ab0612c":"code","b02c79ad":"code","6feaadf7":"code","57f631ef":"code","c88811ba":"code","0c7842cc":"code","5c5be8bf":"code","ca45fafd":"code","6e5f532e":"code","9ce6d6ee":"code","0125415a":"code","0bff02ef":"code","691b2416":"code","63cf4ea4":"code","1c7aea2c":"code","fb136ce5":"code","e03545b9":"code","df7131c7":"code","341171bc":"code","51a97404":"code","dac2420d":"code","579f5096":"code","d816b408":"code","11fdd127":"code","79713c7d":"code","f277ad03":"code","2b0a58f9":"code","d30b5c18":"code","5e96ed9f":"code","2a0a3e06":"markdown","8b1f798d":"markdown","114720f7":"markdown","d3186dc4":"markdown","b7485913":"markdown","5196bcf0":"markdown","b7402eb0":"markdown","ce58aa1a":"markdown","435418fe":"markdown","945fe98a":"markdown","dbbc51af":"markdown","c9ebc579":"markdown","609d15bd":"markdown","093d096a":"markdown","9365d1a3":"markdown","773b48ef":"markdown","cb5f5b05":"markdown","e1f1eadc":"markdown","f7636f3b":"markdown","c7cbcb99":"markdown","b7b272a6":"markdown","ac879986":"markdown","bd607c9e":"markdown","4bed03ca":"markdown","90322d62":"markdown","8e5643b7":"markdown","b67da2c8":"markdown","f965ee43":"markdown","b1cfd4a9":"markdown","a8f9b28a":"markdown","ec009820":"markdown","5e8cf5eb":"markdown","b4377af3":"markdown","274f5d4e":"markdown","49ed215f":"markdown","e1feeff0":"markdown","e3fbe77a":"markdown","9b3f1888":"markdown","23dda451":"markdown","5415d8f4":"markdown","b7004223":"markdown","2214fd97":"markdown","3a00347b":"markdown","f62487e1":"markdown","e4950cf3":"markdown"},"source":{"800c8586":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nsns.set()\n\nplt.rc('figure', figsize=(20,10))\nplt.rc('axes', titlesize=18)     \nplt.rc('axes', labelsize=18)    \nplt.rc('xtick', labelsize=14)    \nplt.rc('ytick', labelsize=14)    \nplt.rc('figure', titlesize=20)  ","af87e20b":"dataset = pd.read_csv(\"..\/input\/nlp-getting-started\/train.csv\")","3aa7feba":"#Dimension del DataFrame\n\ndataset.shape","5c08bac2":"dataset.shape[0]","7c350f00":"#Tama\u00f1o del DataFrame (n\u00b0 filas x n\u00b0columnas)\n\ndataset.size","25a6b9c7":"#Columnas del DataFrame\n\ndataset.columns","2940f0a8":"#Indice del DataFrame\n\ndataset.index","30023480":"#Observo las 5 primeras filas\n\ndataset.head()","ab815b03":"#Observo las 5 ultimas filas\n\ndataset.tail()","e4041a3c":"#Resumen del DataFrame\n\ndataset.info()","050f3f0b":"#Observo el tipo de datos por columna\n\ntipos = dataset.dtypes\npd.DataFrame({'Columna':tipos.index,'Tipo de dato':tipos.values})","8a78a208":"#Verifico si alguna de las filas esta duplicada\n\ndataset.duplicated().sum()","95f3f0f6":"#Cuento la cantidad de elementos NO NULOS de cada columna\n\ncantidad_datos = dataset.count()\ncantidad_datos","4fb43d4f":"#Evaluo por columna la existencia o no de NaN\n\ntiene_nulos = dataset.isnull().any()","9d55cb82":"#Cuento la cantidad de NaN por columna\n\nnulos = dataset.isnull().sum()\npd.DataFrame({'Columna':nulos.index,'\u00bfTiene NaN?':tiene_nulos.values,'Cantidad de NaN':nulos.values,'% de NaN':((nulos.values*100\/dataset.shape[0])).round(1)})","f90915df":"#Realizo la lectura de los valores de la columna\n\ncol_1 = dataset[\"id\"]","30463e4e":"#5 primeros valores de la columna\n\ncol_1.head()","635a130f":"#Observo si existen valores duplicados\n#Si la suma da 0 significa que no existen valores duplicadas\n\ncol_1.duplicated().sum()","63761916":"col_1.dtype","38be2b41":"#Valores de la columna\n\ncol_2 = dataset[\"keyword\"]","982a1ed5":"#Como realize previamiente cuento la cantidad de NaN que tiene esta columna\n\ncol_2.isnull().sum()","61d2598a":"#Cuento la cantidad de 'Keywords' que son unicas\n\ncol_2.nunique()","495dc32c":"#Creo una nueva variable donde almaceno los valores de la columna que no son NaN\n#Visualizo un ejemplo de 5 elementos\n\ncol_2_new = col_2[col_2.notnull()]\ncol_2_new.sample(10)","2f827c10":"#Una vez que realizado el reemplazo anterior cuento la cantidad de veces que aparece una misma keyword. \n\ntop_conteo = col_2_new.value_counts().reset_index()\ntop_conteo.columns = ['Keyword', 'Cantidad']\ntop_conteo.head()","c3b7e53c":"#Grafico de Barras Verticales\n\nfig, ax = plt.subplots(figsize=(20,10))\n\ntop_conteo.nlargest(20,'Cantidad').plot(kind='bar', x = 'Keyword', ax = ax)\n\nplt.xlabel(\"Keyword\",fontsize=18)\nplt.ylabel('Cantidad',fontsize=18)\nplt.xticks(fontsize=16,rotation = 60) \nplt.title('An\u00e1lisis de las keywords m\u00e1s frecuentes',fontsize=22,fontweight='bold', pad = 15)\nplt.show()","4765793d":"porcentaje_20 = col_2_new[col_2_new.str.contains('%20')]\ntop_conteo_20 = porcentaje_20.value_counts().reset_index()\ntop_conteo_20.columns = ['Keyword con %20', 'Cantidad']\ntop_conteo_20.head()","6d1179ff":"#Grafico de Barras Horizontales\n\nfig, ax = plt.subplots(figsize=(20,12))\n\ntop_conteo_20.nlargest(20,'Cantidad').plot(kind='barh', x = 'Keyword con %20', ax = ax)\n\nplt.xlabel(\"Cantidad\",fontsize=18)\nplt.ylabel('Keyword',fontsize=18)\nplt.yticks(fontsize=16,rotation = 0)\nplt.xticks(fontsize=16) \nplt.title('An\u00e1lisis de las keywords con %20 m\u00e1s frecuentes',fontsize=20,fontweight='bold', pad = 15)","552a2044":"#Calculo la longitud de cada Keyword\n\ncol_2_largo_caracteres = col_2_new.str.len()","423f6a22":"#Obtengo los estadisticos principales de la longitus de los Keyword\n\ncol_2_estadisticos = col_2_largo_caracteres.describe()\npd.DataFrame({'Estadistico':col_2_estadisticos.index,'Valor':(col_2_estadisticos.values).round(1)})","f9400aa9":"#Grafico las distribuciones del largo de Keyword - KDE\n\nfig,ax1 = plt.subplots(1,figsize=(12,8))\n\nax1 = sns.kdeplot(col_2_largo_caracteres,color='red',label='Cantidad de Caracteres')\nax1.set_title('Distribucion - Caracteres de las Keywords',fontsize=20)\nax1.set_xlim(0,22)\nax1.set_xlabel('Cantidad de Caracteres',fontsize=14)\nax1.set_ylabel('Density',fontsize=14)\nplt.show()","3f1934e5":"#Grafico las distribuciones del largo de Keyword - Boxplot - Opcion N\u00b01\n\nfig,ax1 = plt.subplots(1,figsize=(10,4))\n\nax1 = sns.boxplot(col_2_largo_caracteres.values,color='coral',meanline=True,showmeans=True)\nax1.set_title('Keywords - Cantidad de Caracteres ', fontsize=20)\nax1.set_xlabel(\"Cantidad de Caracteres (n)\", fontsize=14)\nplt.show()","a87f0655":"#Grafico las distribuciones del largo de Keyword - Boxplot - Opcion N\u00b01\n\nfig,ax1 = plt.subplots(1,figsize=(10,4))\nax1 = sns.boxplot(col_2_largo_caracteres.values,palette=\"hls\",meanline=True,showmeans=True,showfliers=True)\nax1.set_title('Keywords - Cantidad de Caracteres', fontsize=20)\nax1.set_xlabel(\"Cantidad de Caracteres (n)\", fontsize=14)\nplt.show()","584655eb":"from matplotlib.gridspec import GridSpec","a0c3f71f":"#Grafico las distribuciones del largo de Keyword - Opcion Final\n\nx_lim = col_2_largo_caracteres.max()+2\nfig = plt.figure(figsize=(10,8))\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(col_2_largo_caracteres, hist = False, kde = True, ax = ax, color = 'coral', kde_kws = {'shade': True, 'linewidth': 2}, label = \"Cantidad de Caracteres (n)\")\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Keywords - Cantidad de Caracteres',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel(\"Cantidad de Caracteres (n)\",fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\nsns.boxplot(col_2_largo_caracteres, color='coral', ax=ax1, orient='h',meanline=True,showmeans=True)\nplt.xlim(-1, x_lim)\nplt.xlabel(\"Cantidad de Caracteres (n)\",fontsize=16)","4b97f403":"#Me quedo con aquellos keywords que NO tienen el simbolo %20\n\nnotiene_porcentaje20 = col_2_new.drop(col_2_new[col_2_new.str.contains('%20')].index)","a2af6b7e":"#Calculo el largo de aquellas keywords que NO tienen el simbolo %20\n\nlargo_notiene_porcentaje20 = notiene_porcentaje20.str.len()","daa574aa":"#Me quedo con aquellos keywords que tienen el simbolo %20\n\ntiene_porcentaje20 = col_2_new[col_2_new.str.contains('%20')]","b54b450a":"#Calculo el largo de aquellas keywords que tienen el simbolo %20\n\nlargo_tiene_porcentaje20 = tiene_porcentaje20.str.len()","13158cc2":"pd.DataFrame({'Estadisticos':largo_notiene_porcentaje20.describe().index,'Keyword que NO tiene %20':(largo_notiene_porcentaje20.describe().values).round(1),'Keyword que tiene %20':(largo_tiene_porcentaje20.describe().values).round(1)})","f7894fc5":"#Grafico los boxplot's de las keywords que poseen %20 y las que no lo poseen - Opcion N\u00b01\n\ndatos = pd.DataFrame({'No contiene %20':largo_notiene_porcentaje20,'Contiene %20':largo_tiene_porcentaje20})\noutliers = dict(marker='o', markerfacecolor='red', markersize=4,\n                  linestyle='none')\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\nax1.set_title('Keyword - Longitud en funcion de la presencia del simbolo %20',fontsize=18)\nax1.set_ylabel('Longitud(n)')\ndatos.plot.box(ax=ax1,notch=True,flierprops=outliers, whis=0.75,meanline=True,showmeans=True,showfliers=True)\nplt.show()","5f545a99":"#Grafico los boxplot's de las keywords que poseen %20 y las que no lo poseen - Opcion N\u00b02\n\ndatos = pd.DataFrame({'No contiene %20':largo_notiene_porcentaje20,'Contiene %20':largo_tiene_porcentaje20})\n\nfig,(ax1) = plt.subplots(figsize=(10,10))\nax1.set_title('Keyword - Longitud en funcion de la presencia del simbolo %20',fontsize=18)\nax1.set_ylabel('Longitud(n)',fontsize=14)\nax1.set_xlabel('Tipo',fontsize=14)\nsns.boxplot(data=datos,palette=\"hls\",meanline=True,showmeans=True,ax=ax1)\nplt.show()","c039560f":"#Grafico las distribuciones para Target 0 y 1 - Opcion Final\n\ndatos = pd.DataFrame({'No contiene %20':largo_notiene_porcentaje20,'Contiene %20':largo_tiene_porcentaje20})\n\nx_lim = datos['Contiene %20'].max()+2\nfig = plt.figure(figsize=(10,8))\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(datos['No contiene %20'], hist = False, kde = True, ax = ax, color = '#1f77b4', kde_kws = {'shade': True, 'linewidth': 2}, label = 'No contiene %20')\nsns.distplot(datos['Contiene %20'], hist = False, kde = True, ax = ax, color = 'coral', kde_kws = {'shade': True, 'linewidth': 2}, label = 'Contiene %20')\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Keyword - Longitud en funcion de la presencia del simbolo %20',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel('Cantidad de caracteres(n)',fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\n\ndata = datos.loc[:,['No contiene %20','Contiene %20']]\ncolors = ('#1f77b4' , 'coral')\nsns.boxplot(data=data, palette=colors, ax=ax1, orient='h',meanline=True,showmeans=True)\nplt.xlim(-1, x_lim)\nplt.xlabel('Cantidad de caracteres(n)',fontsize=16)","6004b04f":"#Para cada tweet cuento la cantidad de palabras\n\ncol_2_largo_palabras = col_2_new.str.split().map(lambda x: len(x))\ncol_2_largo_palabras.head()","928312c3":"col_2_largo_palabras.describe()","befbaffd":"#Valores de la columna\n\ncol_3 = dataset[\"location\"]","f23ded7f":"col_3.sample(20)","a717ae43":"#Como realize previamiente cuento la cantidad de NaN que tiene esta columna\n\ncol_3.isnull().sum()","723a76ba":"#Cuento la cantidad de valores que NO son NaN\n\ncol_3.notnull().sum()","cc5c91c3":"#Creo un DataFrame con los valores anteriores NaN y NO NaN\n\ncol_3_df = pd.DataFrame({'Tipo':['Nulo', 'No Nulo'], 'Cantidad':[col_3.isnull().sum(), col_3.notnull().sum()]})\ncol_3_df","9112f5ab":"#Realizo un grafico comparativo entre los valores\n\nfig,ax1 = plt.subplots(figsize=(7,6))\n\nax1 = sns.barplot(x = col_3_df['Tipo'], y = col_3_df['Cantidad'])\nax1.set_title(\"Tipo -  Nulos \/ No Nulos\", fontsize=20)\nax1.set_xlabel(\"Tipo\", fontsize=16)\nax1.set_ylabel(\"Cantidad\", fontsize=16)\nplt.show()","475f2464":"#Cantidad de lugares unicos\n\ncol_3.nunique()","fdb58a5b":"#Cuento la cantidad de veces que aparece una mismo locacion\n#Observo a modo de ejemplo los 20 primeros\n\ncol_3_sumas = col_3.value_counts()\ncol_3_sumas.head(20)","d87d6d8c":"#Grafico los lugares con mayor aparicion\n\nfig,ax1 = plt.subplots(figsize=(16,10))\nax1 = sns.barplot(x = col_3_sumas.head(20).values, y =col_3_sumas.head(20).index, color='coral')\nax1.set_title(\"Cantidad de apariciones de 'lugares'\", fontsize=20)\nax1.set_xlabel(\"Numero de apariciones\", fontsize=16)\nax1.set_ylabel(\"Lugares\", fontsize=16)\nplt.show()","1a92fdb0":"def conteo(n):\n    lista_1 = []\n    lista_2 = []\n    for i in col_3.value_counts().head(n).index:\n        suma = col_3.str.contains(i).sum()\n        lista_1.append(i)\n        lista_2.append(suma)\n    df = pd.DataFrame({'Lugar':lista_1,'Cantidad de Apariciones':lista_2})\n    return df","31703e4a":"c = conteo(20)\nc","c3b4ac6b":"#Grafico los valores de mayor aparicion multiple\n\nfig,ax1 = plt.subplots(figsize=(16,10))\nax1 = sns.barplot(x = c['Cantidad de Apariciones'], y =c['Lugar'], color='coral')\nax1.set_title(\"Cantidad de apariciones de 'lugares'\", fontsize=20)\nax1.set_xlabel(\"Numero de apariciones\", fontsize=16)\nax1.set_ylabel(\"Lugares\", fontsize=16)\nplt.show()","b6077f1d":"#Realizo un Barplot acoplado\n\nlabels = c['Lugar']\nrepeticion_unica = col_3_sumas.head(20).values\nrepeticion_en_frase = c['Cantidad de Apariciones']\n\nx = np.arange(len(labels)) \nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(16,12))\nrep1 = ax.bar(x - width\/2, repeticion_unica, width, label='Repeticion Unica')\nrep2 = ax.bar(x + width\/2, repeticion_en_frase, width, label='Repeciones dentro de una Frase')\n\nax.set_ylabel('Cantidad de Apariciones',fontsize=18)\nax.set_xlabel('Ubicacion',fontsize=18)\nax.set_title('Ubicaciones - Repeticiones Unicas y Repeticiones dentro de una Frase',fontsize=20)\nax.set_xticks(x)\nax.set_xticklabels(labels,fontsize=14,rotation = 70)\n\n\ndef etiquetado(rep):\n    for i in rep:\n        height = i.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(i.get_x() + i.get_width() \/ 2, height),\n                    xytext=(0, 3),\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\netiquetado(rep1)\netiquetado(rep2)\n\nfig.tight_layout()\n\nplt.show()","1363f743":"#Realizo el mismo grafico pero \"stacked\"\n\nlabels = c['Lugar']\nrepeticion_unica = col_3_sumas.head(20).values\nrepeticion_en_frase = c['Cantidad de Apariciones']\n\nx = np.arange(len(labels)) \n\n\nwidth = 0.35       # the width of the bars: can also be len(x) sequence\n\nfig, ax = plt.subplots(figsize=(20,12))\n\nax.bar(labels, repeticion_unica , width, label='Repeticion Unica')\nax.bar(labels, repeticion_en_frase, width, repeticion_unica,\n       label='Repeciones dentro de una Frase')\n\nax.set_ylabel('Cantidad de Apariciones',fontsize=18)\nax.set_xlabel('Ubicacion',fontsize=18)\nax.set_title('Ubicaciones - Repeticiones Unicas y Repeticiones dentro de una Frase',fontsize=22)\nax.set_xticks(x)\nax.set_xticklabels(labels,fontsize=14,rotation = 70)\n\nax.legend()\n\nplt.show()","3d4a1a3f":"#Si quiereo analizar las repeticiones de un lugar en particular puedo utilizar lo siguiente:\n\npd.DataFrame({'Keyword que contiene USA':col_3[col_3.str.contains('USA') == True].value_counts().head(10).index,'Cantidad':col_3[col_3.str.contains('USA') == True].value_counts().head(10).values})\n","c0e7b28d":"col_4 = dataset[\"text\"]\ncol_4.head()","60a73c37":"#Para cada tweet cuento la cantidad de Caracteres\n\nlargo_caracteres = col_4.str.len()\nlargo_caracteres.head()","0e42b65c":"pd.DataFrame({'Estadistico':largo_caracteres.describe().index,'Valor':(largo_caracteres.describe().values).round(1)})","69148dbc":"#Grafico la Distribucion - Opcion N\u00b01\n\nfig,ax1 = plt.subplots(figsize=(12,8))\n\nax1.set_title('Texto del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Cantidad de Caracteres(n)',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nax1.set_xlim(0,160)\nsns.distplot(largo_caracteres.values)\nplt.show()","b3a03243":"#Grafico la Distribucion - Opcion N\u00b02\n\nfig,ax1 = plt.subplots(figsize=(12,8))\n\nmin_len = largo_caracteres.min()\nmean_len = largo_caracteres.mean()\nmedian_len = largo_caracteres.median()\nmax_len = largo_caracteres.max()\n\nax1.axvline(mean_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(median_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(min_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(max_len, color='grey', linestyle='--', linewidth=1)\n\nplt.text(min_len - 5 , ax1.get_ylim()[1]\/30, 'm\u00ednimo = %d' %min_len, rotation = 90, fontsize = 12)\nplt.text(mean_len - 5 , ax1.get_ylim()[1]\/30, 'media = %d' %mean_len, rotation = 90, fontsize = 12)\nplt.text(median_len + 3 , ax1.get_ylim()[1]\/30, 'mediana = %d' %median_len, rotation = 90, fontsize = 12)\nplt.text(max_len - 5 , ax1.get_ylim()[1]\/30, 'm\u00e1ximo = %d' %max_len, rotation = 90, fontsize = 12)\n\nax1.set_title('Caracteres del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Cantidad de Caracteres(n)',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nax1.set_xlim(0,160)\nsns.distplot(largo_caracteres.values)\nplt.show()","fe1c9a91":"#Grafico la Distribucion - Opcion Final\n\nx_lim = largo_caracteres.max()+2\n\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(largo_caracteres, hist = False, kde = True, ax = ax, color = 'coral',\n                 kde_kws = {'shade': True, 'linewidth': 2}, label = \"Cantidad de Caracteres (n)\")\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Caracteres del Tweet - Distribucion',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel(\"Cantidad de Caracteres (n)\",fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\nsns.boxplot(largo_caracteres, color='coral', ax=ax1, orient='h',meanline=True,showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel(\"Cantidad de Caracteres (n)\",fontsize=16)","eea62b7e":"#Para cada tweet cuento la cantidad de palabras\n\nlargo_palabras = col_4.str.split().map(lambda x: len(x))\nlargo_palabras.head()","9c21ea66":"pd.DataFrame({'Estadistico':largo_palabras.describe().index,'Valor':(largo_palabras.describe().values).round(1)})","47177762":"#Grafico la distribucion - Opcion N\u00b01\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\n\nax1.set_title('Longitud del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Longitud',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nsns.distplot(largo_palabras)\nplt.show()","ae579094":"#Grafico la Distribucion - Opcion N\u00b02\n\nfig,ax1 = plt.subplots(figsize=(12,8))\n\nmin_len = largo_palabras.min()\nmean_len = largo_palabras.mean()\nmedian_len = largo_palabras.median()\nmax_len = largo_palabras.max()\n\nax1.axvline(mean_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(median_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(min_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(max_len, color='grey', linestyle='--', linewidth=1)\n\nplt.text(min_len + 0.5 , ax1.get_ylim()[1]\/20, 'm\u00ednimo = %d' %min_len, rotation = 90, fontsize = 12)\nplt.text(mean_len - 0.5 , ax1.get_ylim()[1]\/20, 'media = %d' %mean_len, rotation = 90, fontsize = 12)\nplt.text(median_len + 0.5 , ax1.get_ylim()[1]\/20, 'mediana = %d' %median_len, rotation = 90, fontsize = 12)\nplt.text(max_len - 0.5 , ax1.get_ylim()[1]\/20, 'm\u00e1ximo = %d' %max_len, rotation = 90, fontsize = 12)\n\nax1.set_title('Palabras del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Cantidad de Palabras(n)',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nax1.set_xlim(0,35)\nsns.distplot(largo_palabras.values)\nplt.show()","e87df4ac":"#Grafico la Distribucion - Opcion N\u00b03\n\nx_lim = largo_palabras.max()+2\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(largo_palabras, hist = False, kde = True, ax = ax, color = 'coral',kde_kws = {'shade': True, 'linewidth': 2}, label = \"Cantidad de Palabras (n)\")\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Palabras del Tweet - Distribucion',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel(\"Cantidad de Palabras (n)\",fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\nsns.boxplot(largo_palabras, color='coral', ax=ax1, orient='h',meanline=True,showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel(\"Cantidad de Palabras (n)\",fontsize=16)","630e09f7":"largo_palabras_unicas = dataset['text'].apply(lambda x: len(set(str(x).split())))\nlargo_palabras_unicas.head()","c07f2460":"pd.DataFrame({'Estadistico':largo_palabras_unicas.describe().index,'Valor':(largo_palabras_unicas.describe().values).round(1)})","1e4f52b2":"#Grafico la Distribucion - Opcion N\u00b01\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\n\nax1.set_title('Longitud del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Longitud',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nsns.distplot(largo_palabras_unicas)\nplt.show()","435c7b72":"#Grafico la Distribucion - Opcion N\u00b02\n\nfig,ax1 = plt.subplots(figsize=(12,8))\n\nmin_len = largo_palabras_unicas.min()\nmean_len = largo_palabras_unicas.mean()\nmedian_len = largo_palabras_unicas.median()\nmax_len = largo_palabras_unicas.max()\n\nax1.axvline(mean_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(median_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(min_len, color='grey', linestyle='--', linewidth=1)\nax1.axvline(max_len, color='grey', linestyle='--', linewidth=1)\n\nplt.text(min_len + 0.5 , ax1.get_ylim()[1]\/20, 'm\u00ednimo = %d' %min_len, rotation = 90, fontsize = 12)\nplt.text(mean_len - 1 , ax1.get_ylim()[1]\/20, 'media = %d' %mean_len, rotation = 90, fontsize = 12)\nplt.text(median_len + 0.5 , ax1.get_ylim()[1]\/20, 'mediana = %d' %median_len, rotation = 90, fontsize = 12)\nplt.text(max_len - 0.5 , ax1.get_ylim()[1]\/20, 'm\u00e1ximo = %d' %max_len, rotation = 90, fontsize = 12)\n\nax1.set_title('Palabras Unicas del Tweet - Distribucion',fontsize=20)\nax1.set_ylabel('Densidad',fontsize=14)\nax1.set_xlim(0,30)\nsns.distplot(largo_palabras_unicas.values)\nplt.show()","26c6cea0":"#Grafico la Distribucion - Opcion N\u00b03\n\nx_lim = largo_palabras_unicas.max()+2\n\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(largo_palabras_unicas, hist = False, kde = True, ax = ax, color = 'coral',\n                 kde_kws = {'shade': True, 'linewidth': 2}, label = \"Cantidad de Palabras (n)\")\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Palabras Unicas del Tweet - Distribucion',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel(\"Cantidad de Palabras (n)\",fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\n\nsns.boxplot(largo_palabras_unicas, color='coral', ax=ax1, orient='h',meanline=True,showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel(\"Cantidad de Palabras (n)\",fontsize=16)","61a43331":"estadisticos_df_1 = pd.DataFrame({'Cantidad de Palabras': largo_palabras.describe().round(1),'Cantidad de Palabras Unicas':largo_palabras_unicas.describe().round(1)})\nestadisticos_df_1","df50171a":"#Grafico la distribucion - Opcion N\u00b01\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\n\nax1.set_title('Longitud del Tweet - Distribucion',fontsize=20)\nax1.set_xlabel('Longitud',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nsns.distplot(largo_palabras,hist=False)\nsns.distplot(largo_palabras_unicas,hist=False)\nplt.show()","9882525a":"import re","54a1f3ea":"#Todo el texto de los tweets los llevo a minuscula\n#Se observa en alguno de los tweet\u00b4s la presencia del simbolo # que representa el hashtag\n\ncol_4_new = dataset['text'].str.lower()\ncol_4_new.head()","28ea5baf":"#De cada tweet me quedo con aquellas palabras que son hashtag\n\nhashtags = col_4_new.map(lambda text: re.findall(r\"#(\\w+)\", text))\nhashtags.head()","4ad1cb9c":"#De cada tweet remuevo el simbolo # que representa a un hashtag\n\ncol_4_new = col_4_new.map(lambda text: text.replace('#', ''))","67b20c84":"hashtags = pd.Series([tag for hashtags in hashtags for tag in hashtags])","3a2bf054":"#Cuento la cantidad de hashtags por tipo\n\nhashtags.value_counts().head()","47d8dd01":"menciones = dataset['text'].map(lambda text: re.findall(r\"@(\\w+)\", text))\nmenciones.head()","c13af29f":"menciones = pd.Series([mention for mentionslist in menciones for mention in mentionslist]).value_counts()\nmenciones","88d90a49":"menciones_df = pd.DataFrame({'Mencion':menciones.index,'Cantidad':menciones.values})\nmenciones_df.head()","782e185a":"#Grafico las 20 primeras menciones\n\nfig, ax = plt.subplots(figsize=(20,12))\n\nmenciones_df.nlargest(20,'Cantidad').plot(kind='bar', x = 'Mencion', ax = ax)\n\nplt.xlabel(\"Mencion\",fontsize=20)\nplt.ylabel('Cantidad',fontsize=20)\nplt.xticks(fontsize=16,rotation = 60) \nplt.title('An\u00e1lisis de Menciones m\u00e1s frecuentes',fontsize=24,fontweight='bold', pad = 15)","8a0ef7d6":"#Valores de la columna\n\ncol_5 = dataset[\"target\"]","0b4b1048":"#Cuento la cantidad\n\nval_5 = col_5.value_counts()\nval_5","53b4ba59":"#Bar Plot orientativo de los datos disponibles\n\nplt.title(\"Cantidad - Target o y 1\")\nplt.xlabel(\"Target\")\nplt.ylabel(\"Cantidad\")\nval_5.plot(kind='bar', figsize=(6,4),color=\"blue\")\nplt.show()","9f376889":"booleano_1 = col_3.str.contains('USA') == True","1594adbe":"dataset[booleano_1]['keyword'].value_counts()","d071deba":"#Keywords mas frecuentes para location USA\n\nfig, ax = plt.subplots(figsize=(20,12))\n\ndataset[booleano_1]['keyword'].value_counts().head(20).plot(kind='bar',ax = ax)\n\nplt.xlabel(\"Keyword\",fontsize=20)\nplt.ylabel('Cantidad',fontsize=20)\nplt.xticks(fontsize=16,rotation = 75)\nplt.title('Keywords m\u00e1s frecuentes para \u00b4location\u00b4 USA',fontsize=24,fontweight='bold', pad = 15)","089b2365":"booleano_2 = col_3.str.contains('New York') == True","dec390ca":"dataset[booleano_2]['keyword'].value_counts()","4ab0612c":"#Keywords mas frecuentes para location New York\n\nfig, ax = plt.subplots(figsize=(20,12))\n\ndataset[booleano_2]['keyword'].value_counts().head(20).plot(kind='bar',ax = ax)\n\nplt.xlabel(\"Keyword\",fontsize=20)\nplt.ylabel('Cantidad',fontsize=20)\nplt.xticks(fontsize=16,rotation = 75)\nplt.title('Keywords m\u00e1s frecuentes para \u00b4location\u00b4 New York',fontsize=24,fontweight='bold', pad = 15)","b02c79ad":"booleano_3 = col_3.str.contains('United States') == True","6feaadf7":"dataset[booleano_3]['keyword'].value_counts()","57f631ef":"#Keywords mas frecuentes para location United States\n\nfig, ax = plt.subplots(figsize=(20,12))\n\ndataset[booleano_3]['keyword'].value_counts().head(20).plot(kind='bar',ax = ax)\n\nplt.xlabel(\"Keyword\",fontsize=20)\nplt.ylabel('Cantidad',fontsize=20)\nplt.xticks(fontsize=16,rotation = 75)\nplt.title('Keywords m\u00e1s frecuentes para \u00b4location\u00b4 United States',fontsize=24,fontweight='bold', pad = 15)","c88811ba":"#Para Target 0 cuento las 'keyword' que mayor cantidad de veces aparecen\n\nfalso = dataset[dataset['target'] == 0]['keyword'].value_counts()\nfalso.head(20)","0c7842cc":"#Para Target 1 cuento las 'keyword' que mayor cantidad de veces aparecen\n\nverdadero = dataset[dataset['target'] == 1]['keyword'].value_counts()\nverdadero.head(20)","5c5be8bf":"#Creo un DataFrame donde coloco los valores calculados anteriormente y la suma de ambos\n#Ordeno por cantidad total en forma descendente\n\npd_new = pd.concat([falso,verdadero],axis=1)\npd_new.columns=['Falso','Verdadero']\npd_new = pd_new.fillna(value=0)\npd_new['Total'] = pd_new['Falso'] + pd_new['Verdadero']\npd_new = pd_new.sort_values(by='Total',ascending=False)\npd_new.head(20)","ca45fafd":"#Grafico los valores del DataFrame anterior\n\nlabels = pd_new.head(20).index\na = pd_new['Falso'].head(20)\nb = pd_new['Verdadero'].head(20)\n\nx = np.arange(len(labels)) \nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(20,12))\nrep1 = ax.bar(x - width\/2, a, width, label='Falso')\nrep2 = ax.bar(x + width\/2, b, width, label='Verdadero')\n\nax.set_ylabel('Cantidad de Apariciones',fontsize=18)\nax.set_xlabel('Ubicacion',fontsize=18)\nax.set_title('Analisis de Repeticiones -  Keyword y Target',fontsize=22)\nax.set_xticks(x)\nax.set_xticklabels(labels,fontsize=16,rotation = 60)\nax.legend()\n\n\ndef etiquetado(rep):\n    for i in rep:\n        height = i.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(i.get_x() + i.get_width() \/ 2, height),\n                    xytext=(0, 3),\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\netiquetado(rep1)\netiquetado(rep2)\n\nfig.tight_layout()\n\nplt.show()","6e5f532e":"#Igual grafico anterior pero \"stacked\"\n\nlabels = pd_new.head(20).index\na = pd_new['Falso'].head(20)\nb = pd_new['Verdadero'].head(20)\n#repeticion_unica = col_3_sumas.head(20).values\n#repeticion_en_frase = c['Cantidad de Apariciones']\n\nx = np.arange(len(labels)) \n\n\nwidth = 0.35       # the width of the bars: can also be len(x) sequence\n\nfig, ax = plt.subplots(figsize=(20,12))\n\nax.bar(labels, a , width, label='Falso')\nax.bar(labels, b, width, a,label='Verdadero')\n\nax.set_ylabel('Cantidad',fontsize=18)\nax.set_xlabel('Keyword',fontsize=18)\nax.set_title('Analisis de Repeticiones -  Keyword y Target',fontsize=22)\nax.set_xticks(x)\nax.set_xticklabels(labels,fontsize=14,rotation = 70)\n\nax.legend()\n\nplt.show()","9ce6d6ee":"#Creo una nueva columna en el DataFrame donde agrego la longitud del tuit\n\ndataset['longitud'] = dataset[\"text\"].str.len()","0125415a":"#Me quedo con la porcion del DataFrame donde el Target es igual a 0\n\nsub_df_0 = dataset[dataset['target'] == 0]\nsub_df_0.head()","0bff02ef":"#Me quedo con la porcion del DataFrame donde el Target es igual a 1\n\nsub_df_1 = dataset[dataset['target'] == 1]\nsub_df_1.head()","691b2416":"#Genero un nuevo DataFrame que contenga los dos resumenes estadisticos para Target o y 1\n\nestadisticos_1 = pd.DataFrame({'Target 0': sub_df_0['longitud'].describe(),'Target 1':sub_df_1['longitud'].describe()})\nestadisticos_1","63cf4ea4":"#Grafico las distribuciones para Target 0 y 1 - Grafico KDE\n\ndatos = pd.DataFrame({'Target = 0':sub_df_0['longitud'],'Target = 1':sub_df_1['longitud']})\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\nax1.set_title('Analisis Target 0 y Target 1 - Distribucion',fontsize=20)\nax1.set_xlabel('Longitud (caracteres)',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nsns.kdeplot(datos['Target = 0'])\nsns.kdeplot(datos['Target = 1'])\nplt.show()","1c7aea2c":"#Grafico las barplot para Target 0 y 1\n\ndatos = pd.DataFrame({'Falso':sub_df_0['longitud'],'Verdadero':sub_df_1['longitud']})\n\nfig,(ax1) = plt.subplots(figsize=(10,10))\nax1.set_title('Analisis largo del Tweet y veracidad',fontsize=18)\nax1.set_ylabel('Longitud (n)',fontsize=14)\nax1.set_xlabel('Tipo',fontsize=14)\nsns.boxplot(data=datos,palette=\"hls\",whis=1.5)\nplt.show()","fb136ce5":"#Grafico las distribuciones para Target 0 y 1 - Opcion Final\n\nx_lim = datos['Falso'].max()+2\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\ndatos = pd.DataFrame({'Falso':sub_df_0['longitud'],'Verdadero':sub_df_1['longitud']})\n\nax = plt.subplot(gs[0])\n\nsns.distplot(datos['Falso'], hist = False, kde = True, ax = ax, color = '#1f77b4',kde_kws = {'shade': True, 'linewidth': 2}, label = 'Falso')\nsns.distplot(datos['Verdadero'], hist = False, kde = True, ax = ax, color = 'coral', kde_kws = {'shade': True, 'linewidth': 2}, label = 'Verdadero')\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Analisis largo de caracteres y veracidad del tweet',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel('Cantidad de caracteres(n)',fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\n\ndata = datos.loc[:,['Falso','Verdadero']]\n\ncolors = ('#1f77b4' , 'coral')\nsns.boxplot(data=data, palette=colors, ax=ax1, orient='h',meanline=True, showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel('Cantidad de caracteres(n)',fontsize=16)","e03545b9":"#Visualizo los 5 primeros tweets que tienen Target 0\n\ndataset[dataset['target']==0]['text'].head()","df7131c7":"#Para cada tweet que tiene Target 0 cuento la cantidad de palabras\n\nlargo_palabras_0 = dataset[dataset['target']==0]['text'].str.split().map(lambda x: len(x))\nlargo_palabras_0.head()","341171bc":"#Visualizo los 5 primeros tweets que tienen Target 1\n\ndataset[dataset['target']==1]['text'].head()","51a97404":"#Para cada tweet que tiene Target 1 cuento la cantidad de palabras\n\nlargo_palabras_1 = dataset[dataset['target']==1]['text'].str.split().map(lambda x: len(x))\nlargo_palabras_1.head()","dac2420d":"#Genero un nuevo DataFrame que contenga los dos resumenes estadisticos para Target o y 1\n\nestadisticos_2 = pd.DataFrame({'Target 0': largo_palabras_0.describe(),'Target 1':largo_palabras_1.describe()})\nestadisticos_2","579f5096":"#Grafico las distribuciones para Target 0 y 1 - Opcion N\u00b01\n\nfig,(ax1) = plt.subplots(figsize=(12,8))\n\nax1.set_title('Analsis largo de palabras y veracidad del tweet',fontsize=20)\nax1.set_xlabel('Cantidad de palabras(n)',fontsize=14)\nax1.set_ylabel('Densidad',fontsize=14)\nsns.kdeplot(largo_palabras_0,shade=True,label = 'Falso')\nsns.kdeplot(largo_palabras_1,shade=True,label = 'Verdadero')\nplt.show()","d816b408":"#Grafico las distribuciones para Target 0 y 1 - Opcion Final\n\nx_lim = largo_palabras_1.max()+2\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(largo_palabras_0, hist = False, kde = True, ax = ax, color = '#1f77b4',kde_kws = {'shade': True, 'linewidth': 2}, label = 'Falso')\nsns.distplot(largo_palabras_1, hist = False, kde = True, ax = ax, color = 'coral',kde_kws = {'shade': True, 'linewidth': 2}, label = 'Verdadero')\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Analisis largo de palabras y veracidad del tweet',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel('Cantidad de palabras(n)',fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\ndatos=pd.DataFrame({'Falso':largo_palabras_0,'Verdadero':largo_palabras_1})\ndata = datos.loc[:,['Falso','Verdadero']]\n\ncolors = ('#1f77b4' , 'coral')\nsns.boxplot(data=data, palette=colors, ax=ax1, orient='h',meanline=True, showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel('Cantidad de palabras(n)',fontsize=16)","11fdd127":"dataset['text'].head()","79713c7d":"palabras_2=dataset[dataset['target']==1]['text'].str.split().apply(lambda x : [len(i) for i in x])\npalabras_2.head()","f277ad03":"palabras_3=dataset[dataset['target']==0]['text'].str.split().apply(lambda x : [len(i) for i in x])\npalabras_3.head()","2b0a58f9":"verdadero = palabras_2.map(lambda x: np.mean(x))\nverdadero.head()","d30b5c18":"falso = palabras_3.map(lambda x: np.mean(x))\nfalso.head()","5e96ed9f":"#Grafico las distribuciones para Target 0 y 1 - Opcion Final\n\nx_lim = falso.max()+2\n\nfig = plt.figure(figsize=(10,8))\n\ngs = GridSpec(2, 1, height_ratios=[6,4], hspace=0.6)\n\n\nax = plt.subplot(gs[0])\n\nsns.distplot(falso, hist = False, kde = True, ax = ax, color = '#1f77b4',kde_kws = {'shade': True, 'linewidth': 2}, label = 'Falso')\nsns.distplot(verdadero, hist = False, kde = True, ax = ax, color = 'coral',kde_kws = {'shade': True, 'linewidth': 2}, label = 'Verdadero')\n\nplt.xlim(-1, x_lim)\nplt.ylabel('Densidad',fontsize=16)\nplt.title('Largo promedio  de caracteres en las palabras de cada tweet ',fontsize=16,fontweight='bold', pad = 15)\nplt.xlabel('Promedio de caracteres por palabra(n)',fontsize=16)\nplt.legend()\n\n\nax1 = plt.subplot(gs[1])\n\ndatos=pd.DataFrame({'Falso':falso,'Verdadero':verdadero})\ndata = datos.loc[:,['Falso','Verdadero']]\n\ncolors = ('#1f77b4' , 'coral')\nsns.boxplot(data=data, palette=colors, ax=ax1, orient='h',meanline=True, showmeans=True)\n\n\nplt.xlim(-1, x_lim)\nplt.xlabel('Promedio de caracteres por palabra(n)',fontsize=16)","2a0a3e06":"# 3. Caracteristicas Generales","8b1f798d":"Segun se observa esta columna corresponde a valores enteros consecutivos comenzando desde 1\n\nCon respecto a esta columna no tenemos otro analisis de interes para realizar","114720f7":"### 4.4.5 Menciones en los Tweet\u00b4s ","d3186dc4":"### 5.2.2 Analisis del largo del tweet (palabras) para Target 0 y 1 ","b7485913":"## 4.3 Analisis de Columna N\u00b03 `location`\n\nLa columna `location` corresponde a *the location the tweet was sent from (may be blank)*","5196bcf0":"Como se identifico previamente en las columnas \"keyword\" y \"location\" existen valores NaN","b7402eb0":"### 4.4.3 Analisis cantidad de Palabras unicas","ce58aa1a":"### 4.3.1 Analisis de NaN","435418fe":"# 2. Importo el Dataset\n\nImporto los Dataset\u00b4s de los .csv individuales en DataFrames individuales","945fe98a":"Los lugares no son generados en forma automatica, son entradas generadas por el Usuario que redacta el tweet. Por este motivo se observa que estos textos se encuentran 'sucios' (algunos tienen doble lugar) y la cantidad de unicos es muy grande","dbbc51af":"### 4.4.1 Analisis de cantidad de Caracteres","c9ebc579":"### 5.2.1 Analisis del largo del tweet (caracteres) para Target 0 y 1","609d15bd":"A modo de ejemplo construyo una funcion `conteo (n)` que toma como parametro un entero n (n primeros strings con mayores apariciones)  y cuenta la cantidad de veces que ese texto especifico aparece dentro de un string en una ubicacion cualquiera","093d096a":"## 4.2 Analisis de Columna N\u00b02 `keyword`\n\nLa columna `keyword` corresponde a '*a particular keyword from the tweet (may be blank)*'","9365d1a3":"# 4. Analsis de caracteristicas de Columnas en forma Individual","773b48ef":"A continuacion los 2 graficos anteriores los grafico en una sola figura para ver si existen diferencias","cb5f5b05":"Para observar en forma grafica las diferencias encontradas realizo un grafico de Barras acompladas de los dos anteriores","e1f1eadc":"Como era de esperarse la cantidad de palabras por keyword corresponde a 1 ya que es la caracteristica que debe cumplir","f7636f3b":"### 4.2.1 keyword\u00b4s que mayor se repiten ","c7cbcb99":"Segun se observa no existen filas duplicadas en su totalidad","b7b272a6":"Segun se observa la cantidad de 'keywords' unicas es baja. Veremos mas adelante si se puede considerar como un feature relevante para otro tipo de analisis","ac879986":"## 4.4 Analisis de Columna N\u00b04 `text`\n\nLa columna `text` corresponde a *the text of the tweet* ","bd607c9e":"### 4.4.4 Reconocimiento de Hashtags","4bed03ca":"### 4.2.3 Largo de  keyword\u00b4s - Cantidad de Palabras","90322d62":"## 5.0 Analisis columna 'keyword' y 'location'\n\nPara este caso pretendo analizar alguna 'location' de las mas frecuentes identificadas en el item 4.3.2 Analisis de Lugares con mayor aparicion","8e5643b7":"## 3.1 Analisis de NaN ","b67da2c8":"Se observa que alguna de las Keywords contiene caracteres del tipo %20 el cual corresponde a una referencia codificada de un espacio en blanco. Por el momento no realizaremos la limpieza","f965ee43":"Segun se observa la Cantidad de NaN en esta columna es bajo","b1cfd4a9":"### \u00bfLos outliers del Boxpot son debido a keywords que incluyen el simbolo %20? ","a8f9b28a":"## 4.1 Analisis de Columna N\u00b01 `id`\n\nLa columna `id` corresponde a '*a unique identifier for each tweet*'","ec009820":"Segun se observa se tienen 2 columnas con tipo de dato 'int64' y 3 columnas 'object'","5e8cf5eb":"## 5.1 Analisis columna 'keyword' y 'target'","b4377af3":"# 5. Analisis de Columnas en Conjunto ","274f5d4e":"## 5.2 Analisis columna 'text' con columna 'target'","49ed215f":"Segun se observa tengo una cantidad importante de NaN en la columna \"location\"","e1feeff0":"Realizando una comparacion con respecto al tama\u00f1o del DataFrame (7613 filas) se observa una diferencia en la cantidad de datos en las columnas \"keyword\" y \"location\", por lo tanto se analiza la existencia de NaN","e3fbe77a":"Segun se observa la cantidad de nulos que tiene esta columna es considerable","9b3f1888":"\u00bfQue pasaria con la longitud de palabras para aquellas keywords del tipo `body%20bags` que pareciera tener mas de 1 palabra cuando retiramos el %20?","23dda451":"## 4.5 Analisis de Columna N\u00b05 `target`\n\nLa columna `target` corresponde a *in train.csv only, this denotes whether a tweet is about a real disaster (1) or not (0)* ","5415d8f4":"### 4.3.2 Analisis de Lugares con mayor aparicion","b7004223":"### 4.4.2 Analisis cantidad de Palabras ","2214fd97":"### 4.2.2 Largo de  keyword\u00b4s - Cantidad de caracteres","3a00347b":"A simple vista se observa que tenemos registros del tipo `USA`, `New York`, `United States` y otros tantos que hacen pensar que los lugares no se encuentran univocamente identificados.","f62487e1":"# 1. Librerias\n\nImporto las librerias que voy a utilizar para el Analisis Exploratorio","e4950cf3":"### 5.2.3 Analisis del largo promedio  de caractsteres en las palabras de cada tweet para Target 0 y 1 "}}