{"cell_type":{"ccfcdd31":"code","782ea6d3":"code","14ec3d3b":"code","951c2564":"code","91c406b5":"code","4a8d2c15":"code","a45476d9":"code","9b530bc3":"code","09e2cdeb":"code","07161fe8":"code","837f9b78":"code","b90b5fcb":"code","1cb5e33a":"code","8621a72a":"code","75edb320":"code","f2505c47":"code","4e8dfdf8":"code","2c10f65a":"code","0db763d2":"code","eb9d8157":"code","86ab40d1":"code","6387d2ce":"code","db6fa4e7":"code","3994a51e":"code","76285f88":"code","ae3e8aa5":"markdown","2c05c078":"markdown","e7aa4357":"markdown","b0c3c28c":"markdown","17d70166":"markdown","64baeedc":"markdown","1e060a03":"markdown","7cf2d38f":"markdown","92b6b807":"markdown","4a8893b7":"markdown","d743bc62":"markdown","ec180440":"markdown","a08c52f5":"markdown","6ba2b640":"markdown"},"source":{"ccfcdd31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","782ea6d3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score,precision_recall_curve,confusion_matrix\nimport matplotlib","14ec3d3b":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","951c2564":"# let us get inside on various statistical measures on the dataframe\ndf.info()","91c406b5":"# seeing what are the unique values under each column\nfor col in df.columns:\n    print(col,df[col].unique(),'\\n')","4a8d2c15":"sns.countplot(df.gender)","a45476d9":"sns.countplot(df['race\/ethnicity'])","9b530bc3":"plt.figure(figsize=(31,30))\np = sns.countplot(x=\"math score\", data = df, palette=\"muted\")\n_ = plt.setp(p.get_xticklabels(), rotation=90) ","09e2cdeb":"plt.figure(figsize=(11,8))\np = sns.countplot(x='parental level of education', data = df, palette='dark')","07161fe8":"plt.figure(figsize=(30,30))\np = sns.countplot(x=\"writing score\", data = df, palette=\"pastel\")","837f9b78":"df['is_passed_math'] = np.where(df['math score']<50, 'F', 'P')\ndf['is_passed_reading'] = np.where(df['reading score']<40, 'F', 'P')\ndf['is_passed_writing'] = np.where(df['writing score']<60, 'F', 'P')","b90b5fcb":"df['is_passed'] = df.apply(lambda x : 'F' if x['is_passed_math'] == 'F' or \n                                    x['is_passed_reading'] == 'F' or x['is_passed_writing'] == 'F' else 'P', axis =1)\n\ndf.is_passed.value_counts()","1cb5e33a":"df['total_score'] = df['math score'] + df['reading score'] + df['writing score']\ndf['total_score'].head()","8621a72a":"sns.swarmplot(df['race\/ethnicity'],df['total_score'])","75edb320":"plt.figure(figsize=(20,8))\nplt.subplot(1, 3, 1)\nsns.barplot(x='test preparation course',y='math score',data=df,hue='gender',palette='summer')\nplt.title('MATH SCORES')\nplt.subplot(1, 3, 2)\nsns.barplot(x='test preparation course',y='reading score',data=df,hue='gender',palette='summer')\nplt.title('READING SCORES')\nplt.subplot(1, 3, 3)\nsns.barplot(x='test preparation course',y='writing score',data=df,hue='gender',palette='summer')\nplt.title('WRITING SCORES')\nplt.show()","f2505c47":"sns.pairplot(data=df,hue='gender',palette='cubehelix')","4e8dfdf8":"fig,ax=plt.subplots()\nsns.barplot(x=df['parental level of education'],y='total_score',data=df,palette='Wistia')\nfig.autofmt_xdate()","2c10f65a":"plt.bar(df['race\/ethnicity'].unique(),df['race\/ethnicity'].value_counts())\nplt.xlabel('Race\/Ethnicity Chart')\nplt.show()","0db763d2":"\nplt.title('Test Preparation course Vs Gender',fontsize = 15)\nsns.countplot(hue=\"test preparation course\", x=\"gender\", data=df)\nplt.show()\n","eb9d8157":"\nplt.title('Test Preparation course Vs Parental Level Of Education',fontsize = 15)\nsns.countplot(hue=\"test preparation course\", y=\"parental level of education\", data=df)\n\n\nplt.show()","86ab40d1":"\nplt.title('Test Preparation course Vs Lunch',fontsize = 15)\nsns.countplot(hue=\"test preparation course\", x=\"lunch\", data=df)\nplt.show()\n\n","6387d2ce":"\nplt.title('Test Preparation course Vs Ethnicity',fontsize = 15)\nsns.countplot(hue=\"test preparation course\", y=\"race\/ethnicity\", data=df)\nplt.show()","db6fa4e7":"df['percentage']=df['total_score']\/300*100","3994a51e":"#Assigning the grades\n\ndef determine_grade(scores):\n    if scores >= 85 and scores <= 100:\n        return 'Grade A'\n    elif scores >= 70 and scores < 85:\n        return 'Grade B'\n    elif scores >= 55 and scores < 70:\n        return 'Grade C'\n    elif scores >= 35 and scores < 55:\n        return 'Grade D'\n    elif scores >= 0 and scores < 35:\n        return 'Grade E'\n    \ndf['grades']=df['percentage'].apply(determine_grade)","76285f88":"plt.figure(figsize=(13,12))\ndf['grades'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","ae3e8aa5":"\n*   Girls have higher chance of scoring high in math irrespective of their preparation. (This is racial discrimination by the teachers. They are lenient)\n*   Boys perform better than girls in other two categories. (Probably because they parents started hitting them after maths performance or denied them of **ps4**)\n\n\n","2c05c078":"## Visualisations","e7aa4357":"## Reading dataset and displaying columns","b0c3c28c":"Many of parents have done some college degree or associate degree. This shows majority of students have a good educational background.","17d70166":"# Importing Required libraries","64baeedc":"Lets have a look at data","1e060a03":"The marks and gender is linear correlated. Highly correalted.","7cf2d38f":"**As there 1000 entries at total and each of column has 1000 non-null features we can safely conclude that none of the rows have a null value. We saved ourselves from dealing with null values ![image.png](attachment:image.png)","92b6b807":"The Math score is roughly normalised in nature","4a8893b7":"This is my attempt at kaggle. Please suggest any improvements or suggestions to help me improve.","d743bc62":"We can have many people in many people in group C followed by D,B,E,A respectively","ec180440":"An upvote would mean a lot. Especially for the first kernel. ( Thanks for reviewing my notebook)","a08c52f5":"The ratio of female to male students is nearly equal. There is no big difference in the sex ratio of the participants.","6ba2b640":"The teaching in writing skills is good. Cause it is right skewed. This implies there is a good writing instructor in the school."}}