{"cell_type":{"c925c6b0":"code","fb235185":"code","33c727c7":"code","1235bf19":"code","87ecd276":"code","bda28a6c":"code","06539870":"code","a2815d72":"code","7cedde45":"code","34b89c69":"code","ad954b1f":"code","60dcf77a":"code","0a312982":"markdown","43c6d5fd":"markdown","9e79d08a":"markdown","c252080d":"markdown"},"source":{"c925c6b0":"\n!pip install face_recognition","fb235185":"import PIL.Image\nimport PIL.ImageDraw\nimport face_recognition\n","33c727c7":"#loading the image\nimage = face_recognition.load_image_file('..\/input\/filesface-recognition\/Ex_Files_Deep_Learning_Face_Recog\/Exercise Files\/Windows Exercise Files\/Ch03\/people.jpg')","1235bf19":"image","87ecd276":"#Finding all the faces in the library\nface_locations = face_recognition.face_locations(image)\nnumber_of_faces = len(face_locations)\nprint(\"the no. of faces are \" + str(number_of_faces))","bda28a6c":"#Loading the image into a python image library\npil_image = PIL.Image.fromarray(image)","06539870":"for face_location in face_locations:\n    #printing the location of each object in the image\n    \n    top,right,bottom,left = face_location\n    print(\"A face is located at pixel location Top: {}, Left: {}, Bottom: {}, Right: {}\".format(top, left, bottom, right))\n\n    # Let's draw a box around the face\n    draw = PIL.ImageDraw.Draw(pil_image)\n    draw.rectangle([left, top, right, bottom], outline=\"red\")\n\n    \n    ","a2815d72":"# Display the image on screen\npil_image.show()\n","7cedde45":"face_landmarks_list = face_recognition.face_landmarks(image)\nprint(face_landmarks_list)","34b89c69":"# Create a PIL drawing object to be able to draw lines later\ndraw = PIL.ImageDraw.Draw(pil_image)\n\n# Loop over each face\nfor face_landmarks in face_landmarks_list:\n\n    # Loop over each facial feature (eye, nose, mouth, lips, etc)\n    for name, list_of_points in face_landmarks.items():\n\n        # Print the location of each facial feature in this image\n        print(\"The {} in this face has the following points: {}\".format(name, list_of_points))\n\n        # Let's trace out each facial feature in the image with a line!\n        draw.line(list_of_points, fill=\"red\", width=2)\n\npil_image.show()","ad954b1f":"# Generate the face encodings\nface_encodings = face_recognition.face_encodings(image)\n\nif len(face_encodings) == 0:\n    # No faces found in the image.\n    print(\"No faces were found.\")\n\nelse:\n    # Grab the first face encoding\n    first_face_encoding = face_encodings[0]\n\n    # Print the results\n    print(first_face_encoding)","60dcf77a":"# Load the known images\nimage_of_person_1 = face_recognition.load_image_file(\"..\/input\/filesface-recognition\/Ex_Files_Deep_Learning_Face_Recog\/Exercise Files\/Windows Exercise Files\/Ch06\/person_1.jpg\")\nimage_of_person_2 = face_recognition.load_image_file(\"..\/input\/filesface-recognition\/Ex_Files_Deep_Learning_Face_Recog\/Exercise Files\/Windows Exercise Files\/Ch06\/person_2.jpg\")\nimage_of_person_3 = face_recognition.load_image_file(\"..\/input\/filesface-recognition\/Ex_Files_Deep_Learning_Face_Recog\/Exercise Files\/Windows Exercise Files\/Ch06\/person_3.jpg\")\n\n# Get the face encoding of each person. This can fail if no one is found in the photo.\nperson_1_face_encoding = face_recognition.face_encodings(image_of_person_1)[0]\nperson_2_face_encoding = face_recognition.face_encodings(image_of_person_2)[0]\nperson_3_face_encoding = face_recognition.face_encodings(image_of_person_3)[0]\n\n# Create a list of all known face encodings\nknown_face_encodings = [\n    person_1_face_encoding,\n    person_2_face_encoding,\n    person_3_face_encoding\n]\n\n# Load the image we want to check\nunknown_image = face_recognition.load_image_file(\"..\/input\/filesface-recognition\/Ex_Files_Deep_Learning_Face_Recog\/Exercise Files\/Windows Exercise Files\/Ch06\/unknown_8.jpg\")\n\n# Get face encodings for any people in the picture\nunknown_face_encodings = face_recognition.face_encodings(unknown_image)\n\n# There might be more than one person in the photo, so we need to loop over each face we found\nfor unknown_face_encoding in unknown_face_encodings:\n\n    # Test if this unknown face encoding matches any of the three people we know\n    results = face_recognition.compare_faces(known_face_encodings, unknown_face_encoding, tolerance=0.6)\n\n    name = \"Unknown\"\n\n    if results[0]:\n        name = \"Person 1\"\n    elif results[1]:\n        name = \"Person 2\"\n    elif results[2]:\n        name = \"Person 3\"\n\n    print(f\"Found {name} in the photo!\")","0a312982":"# Step2 - Face Landmark Detection","43c6d5fd":"# Step3 - Face Encodings","9e79d08a":"# Importing Libraries\n","c252080d":"#  Step1 - Face Detection"}}