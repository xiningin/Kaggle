{"cell_type":{"293edabb":"code","a68c1270":"code","26660675":"code","fc17b28b":"code","1960f467":"code","d44b2d28":"code","d27342fd":"code","7198e8cf":"code","1600ca9f":"code","51349615":"code","5efe6311":"code","7e0ed6b1":"code","c9063eb5":"code","1ff4e2f5":"code","87ec1445":"code","93270942":"code","d6c891d3":"code","9cf45621":"code","00429bd8":"code","afa2b500":"code","12865f86":"code","ffeb8d78":"code","6e125171":"code","f1a3b3c7":"code","356591fb":"code","44e31f80":"code","897adfad":"code","32351d9a":"code","27b6c077":"code","f12670db":"code","34279ec3":"code","12bf3c01":"code","c80e7f6e":"code","ead3561b":"code","7ead21ef":"code","b65378e2":"code","331e6901":"code","4a60e08c":"code","602c3fa5":"code","bee4d0b3":"code","0306ca33":"code","e370deea":"code","27db48e2":"code","cd28929d":"code","dcb6e02a":"code","328d3282":"code","6882b427":"code","e0f4c281":"code","646458cb":"code","4ecc38d3":"code","7ba3d827":"code","1a11d3e5":"code","845a0f6e":"code","e40c4192":"code","130bfc44":"code","12712105":"code","12c9de02":"code","eca66985":"code","3eff5862":"code","0f3ff948":"code","04578cc7":"code","a7ae6b3a":"code","9278517b":"code","edeba04b":"code","9a247fff":"code","b9c084b6":"code","2e210639":"code","cb64b50d":"code","adaedbda":"code","0c1c5961":"code","b1958858":"code","c2ebbdbe":"code","98b36ae5":"code","7fdd2307":"code","9e774917":"code","e3854470":"markdown","7931435f":"markdown","5a4737b8":"markdown","e9bf7876":"markdown","f3e39a51":"markdown","ded3bc34":"markdown","5352486b":"markdown","1229f88f":"markdown","7c362c20":"markdown","fe61a623":"markdown","65ecbe61":"markdown","49aea52f":"markdown","9c65b7b1":"markdown","09579fe9":"markdown","d8f8f3fc":"markdown","3f0f3d20":"markdown","fc98a507":"markdown","1df9894e":"markdown","e025d7e9":"markdown","08816bf4":"markdown","5bc6abad":"markdown","5707719f":"markdown","b4a24dee":"markdown","db31dbb2":"markdown"},"source":{"293edabb":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a68c1270":"cd \/kaggle\/input\/","26660675":"import pandas as pd \nimport numpy as np\nfrom datetime import datetime\nimport requests\nfrom time import sleep\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import r2_score,mean_squared_error","fc17b28b":"data=pd.read_csv('bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv')","1960f467":"data.info()","d44b2d28":"data","d27342fd":"for col in data.columns:                \n    print(\"Number of null values in col \",col,\" is: \",data[col].isnull().sum()) ## checking total null values in each col","7198e8cf":"m1=data.Open.isnull() #bool value for null value for Open col\nfor col in data.columns[2:]: # iterate over the col and find mask \n    m2=data[col].isnull()\n    m1=m1&m2        # take 'and' operator for bool mask columns\n\nprint(m1.sum())","1600ca9f":"nn_df=data[data.Open.isnull()] ##getting the null rows","51349615":"index=nn_df.index   ##getting the index value of null rows ","5efe6311":"nn_df['dates'] = nn_df['Timestamp'].apply(lambda d: datetime.fromtimestamp(int(d)).strftime('%Y-%m-%d'))","7e0ed6b1":"nn_df","c9063eb5":"uniq_dates=list(nn_df['dates'].unique()) ##getting list of dates for null rows","1ff4e2f5":"data.iloc[index[-1]]","87ec1445":"scrapdata=pd.read_csv('bitcoinscrap\/bitcoinunix.csv',index_col=[0]) ## reading scrapped data.","93270942":"scrapdata","d6c891d3":"scrapdata.isna().sum()    #checking wheather their is any null value or not","9cf45621":"df=data.append(scrapdata,ignore_index=True)  ## appending the scrapped data with the previous data","00429bd8":"df.dropna(inplace=True) #dropping null values that comes with previous data","afa2b500":"df.sort_values('Timestamp',ignore_index=True,inplace=True)","12865f86":"df['timestamp'] = pd.to_datetime(df['Timestamp'],unit='s') #converting the unix time to readable format","ffeb8d78":"#abstracting year and month from the readable time format\ndf['year'] = df['timestamp'].dt.year\n# df['day'] = df['timestamp'].dt.day\ndf['month'] = df['timestamp'].dt.month\n# df['minute'] = df['timestamp'].dt.strftime('%M')\n# df['hours'] = df['timestamp'].dt.strftime('%H')\ndf['date'] = df['timestamp'].dt.strftime('%Y-%m-%d')\n# df['seconds']=df['timestamp'].dt.strftime('%S')","6e125171":"df.index = df.timestamp  ## changing the index values according to timestamp","f1a3b3c7":"df_month = df.resample('M').mean()","356591fb":"# PLOTS\nfig = plt.figure(figsize=[20, 20])\nplt.suptitle('Bitcoin price and volume mean in USD', fontsize=22)\n##plot for mean volume vs months\nplt.subplot(311) ## position of plot \nplt.plot(df['Volume_(BTC)'], '-', label='By Months')  ## plot for volume \nplt.xlabel(\"Year\")\nplt.ylabel(\"volume of bitcoin\")\nplt.title(\"Volume mean according to months\")\n\n##plot for mean Pricee vs months\nplt.subplot(312)\nplt.plot(df_month.Weighted_Price, '-', label='By Months',color='c')    ## plot for the prices\nplt.title(\"Price mean according to months\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Price of bitcoin\")\n\n##plot for mean currency volume vs months\nplt.subplot(313)\nplt.plot(df_month['Volume_(Currency)'], '-', label='By Months',color='g')\nplt.title(\"currency vol mean according to months\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"volume of Currency flow\")\n\nplt.show()","44e31f80":"price_diff = df[\"Weighted_Price\"].diff()        ##finding the difference of price for each row\nax=price_diff.plot(figsize=(20,6),title='Variation in bitcoin price')\nax.set_ylabel(\"prices difference\")","897adfad":"df.boxplot(column='Volume_(BTC)',by = 'year', figsize=(10,10))","32351d9a":"df.boxplot(column='Volume_(Currency)',by = 'year', figsize=(10,10))","27b6c077":"yeardata=df[df.year>=2020]","f12670db":"##plot for price variation in year 2020-21\nplt.figure(figsize=(20,15))\nax=yeardata[yeardata.year==2020].plot(kind='scatter', x='month', y='High',color = 'cyan',label='2020')\nyeardata[yeardata.year==2021].plot(kind='scatter', x='month', y='High',color = 'violet',ax=ax,label='2021')\nplt.xlabel('Month')              \nplt.legend()\nplt.ylabel('Hihest Prices of days in months')\n\nplt.title('Month - Highest Price of day Scatter Plot(2020-2021)') ","34279ec3":"dat=df.resample('D').mean()","12bf3c01":"plt.figure(figsize=(200,20))\nplt.plot(dat['Open'],'-',color='g')\nplt.plot(dat['Close'],'+',color='k')\nplt.show()","c80e7f6e":"dfdate=df.groupby(['date']).max() #taking the max values for unique dates\nax=dfdate.plot(kind=\"scatter\", y=\"Low\",x='timestamp', alpha=0.3, color= \"red\",figsize=(100,10),label='Low')\ndfdate.plot(kind=\"line\", y=\"High\",x='timestamp', alpha=0.3, color= \"blue\",ax=ax,label='high')\nplt.xlabel(\"Open price\")\nplt.ylabel(\"High price\")\nplt.legend()\nplt.title(\"Scatter \")\nplt.show()","ead3561b":"colors=['b','g','r','c','m','y','k','brown']\nj=1\nplt.figure(figsize=(30,25))\nfor col in df.columns[1:5]:\n  for _ in range(3):\n    if j%3==1:\n      cmp='Volume_(BTC)'\n    elif j%3==2:\n      cmp='Volume_(Currency)'\n    else:\n      cmp='Weighted_Price'\n    plt.subplot(4,3,j)\n    plt.plot(df[col],df[cmp], color=colors[j%8])\n    plt.xlabel(col+\" values\")\n    plt.ylabel(cmp+\" of Bitcoins\")\n    plt.title( cmp+\" values  vs  \"+col+\" of BTC\")\n    j+=1\n\n","7ead21ef":"import seaborn as sns","b65378e2":"ax=sns.distplot(df.Close,kde=False,bins=40) #ploting histogram \nax.set_title('Frequencie of different Closing prices')\nax.set(xlabel='Close price range', ylabel='Frequency of Close price')\nplt.show()\n","331e6901":"ax=sns.distplot(df.High,kde=True,bins=40)\nax.set_title('Frequencie of different Highest prices')\nax.set(xlabel='High price range', ylabel='Frequency of Highest price')\nplt.show()\n","4a60e08c":"df.boxplot(column=['High', 'Volume_(BTC)', 'Weighted_Price'])","602c3fa5":"X = np.arange(12)\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(X + 0.00, df.groupby('month').mean()['Open'], color = 'b', width = 0.25,label='Open Price')\nax.bar(X + 0.25, df.groupby('month').mean()['Close'], color = 'g', width = 0.25,label='Close price')\nax.set_xticks(df.groupby('month').mean().index)\nax.set_title(\"Avg Open and close price according to months\")\nax.set_xlabel(\"Months\")\nax.legend()\nax.set_ylabel(\"Avg price month wise\")","bee4d0b3":"mn=df[df.year<2021]","0306ca33":"X = np.arange(12)\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(X + 0.00, mn.groupby('month').mean()['Open'], color = 'b', width = 0.25,label='Open Price')\nax.bar(X + 0.25, mn.groupby('month').mean()['Close'], color = 'g', width = 0.25,label='Close price')\nax.set_xticks(mn.groupby('month').mean().index)\nax.set_title(\"Avg Open and close price according to months\")\nax.set_xlabel(\"Months\")\nax.legend()\nax.set_ylabel(\"Avg price month wise\")","e370deea":"plt.figure(figsize = (20,10))\nax=sns.heatmap(df.corr(), annot = True,square=True,linewidths=.5,vmin=-1, vmax=1, center= 0)","27db48e2":"df","cd28929d":"from keras.models import Sequential\nfrom keras.layers import Dense, SimpleRNN,Dropout,Flatten,LSTM\nfrom sklearn.preprocessing import StandardScaler\nfrom keras.callbacks import ModelCheckpoint","dcb6e02a":"df.head()","328d3282":"df['Date']=pd.to_datetime(df['Timestamp'],unit='s').dt.date\n","6882b427":"X=df.groupby('Date')['Weighted_Price'].max()","e0f4c281":"X.shape","646458cb":"train_size = int(len(X)*0.85)\n\ntrain_data = X[0:train_size]\ntest_data = X[train_size:]","4ecc38d3":"train_data=np.array(train_data)\ntrain_data=train_data.reshape(train_data.shape[0],1)","7ba3d827":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\ntrain_data=scaler.fit_transform(train_data)","1a11d3e5":"timestep=30\nx_train=[]\ny_train=[]\n\nfor i in range(timestep,train_data.shape[0]):\n    x_train.append(train_data[i-timestep:i,0])\n    y_train.append(train_data[i,0])\n\nx_train,y_train=np.array(x_train),np.array(y_train)\nx_train=x_train.reshape(x_train.shape[0],x_train.shape[1],1) #reshaped for RNN\nprint(\"x_train shape= \",x_train.shape)\nprint(\"y_train shape= \",y_train.shape)","845a0f6e":"reg=Sequential()\n\nreg.add(SimpleRNN(128,activation='relu',return_sequences=True,input_shape=(x_train.shape[1],1)))\nreg.add(Dropout(0.3))\nreg.add(SimpleRNN(256,return_sequences=True,activation='relu'))\nreg.add(Dropout(0.3))\nreg.add(SimpleRNN(64,return_sequences=True,activation='relu'))\nreg.add(Dropout(0.3))\nreg.add(Flatten())\nreg.add(Dense(1))\n\n\nreg.compile(optimizer='adam',loss='mean_squared_error')\n","e40c4192":"\nval=reg.fit(x_train,y_train,epochs=100,batch_size=32,validation_split=0.1)","130bfc44":"reg.save('\/kaggle\/working\/timestamp_priceRNN.h5')","12712105":"training_loss = val.history['loss']\nval_loss = val.history['val_loss']\n\nplt.plot(training_loss,label='training_loss')\nplt.plot(val_loss,label='val_loss')\nplt.legend()\nplt.title('Visualising loss for RNN',fontsize=18)\nplt.xlabel('Epochs',fontsize=15)\nplt.ylabel('Loss',fontsize=15)\nplt.show()","12c9de02":"inputs=X[len(X)-len(test_data)-timestep:]\ninputs=inputs.values.reshape(-1,1)\ninputs=scaler.transform(inputs)","eca66985":"x_test=[]\ny_test=[]\nfor i in range(timestep,inputs.shape[0]):\n    x_test.append(inputs[i-timestep:i,0])\n    y_test.append(inputs[i,0])\nx_test=np.array(x_test)\ny_test=np.array(y_test)\nx_test=x_test.reshape(x_test.shape[0],x_test.shape[1],1)","3eff5862":"pred = reg.predict(x_test)\nrnn_pred=scaler.inverse_transform(pred)","0f3ff948":"data_test=np.array(test_data)\ndata_test=data_test.reshape(len(data_test),1)","04578cc7":"plt.figure(figsize = (20,7))\nplt.plot(data_test,'-')\nplt.plot(rnn_pred,'-')\nplt.xlabel('Time(days)')\nplt.ylabel('Price')\nplt.title('Price vs Time (using SimpleRNN)')\nplt.legend(['Actual price', 'Predicted price'])\nplt.show()","a7ae6b3a":"lstm=Sequential()\n\nlstm.add(LSTM(64,input_shape=(x_train.shape[1],1),activation=\"relu\"))\n\n\nlstm.add(Dense(1))\n\nlstm.compile(loss=\"mean_squared_error\",optimizer=\"adam\")\n\nhist=lstm.fit(x_train,y_train,epochs=100,batch_size=32,validation_split=0.1)","9278517b":"lstm.save('\/kaggle\/working\/timeseries_price_LSTM.h5')","edeba04b":"training_loss = hist.history['loss']\nval_loss = hist.history['val_loss']\n\nplt.plot(training_loss,label='training_loss')\nplt.plot(val_loss,label='val_loss')\nplt.legend()\nplt.title('Visualising loss for LSTM',fontsize=18)\nplt.xlabel('Epochs',fontsize=15)\nplt.ylabel('Loss',fontsize=15)\nplt.show()","9a247fff":"# inputs=X[len(X)-len(test_data)-timestep:]\n# inputs=inputs.values.reshape(-1,1)\n# inputs=scaler.transform(inputs)","b9c084b6":"# x_test=[]\n# y_test=[]\n# for i in range(timestep,inputs.shape[0]):\n#     x_test.append(inputs[i-timestep:i,0])\n#     y_test.append(inputs[i,0])\n# x_test=np.array(x_test)\n# y_test=np.array(y_test)\n# x_test=x_test.reshape(x_test.shape[0],x_test.shape[1],1)","2e210639":"pred = lstm.predict(x_test)\nlstm_pred=scaler.inverse_transform(pred)","cb64b50d":"# data_test=np.array(test_data)\n# data_test=data_test.reshape(len(data_test),1)","adaedbda":"print('MSE : ' + str(mean_squared_error(y_test, pred)))\nrnn_score = r2_score(y_test,pred)\nprint(\"R2 Score of LSTM model = \",rnn_score)","0c1c5961":"plt.figure(figsize = (20,7))\nplt.plot(data_test,'-')\nplt.plot(lstm_pred,'-')\nplt.xlabel('Time')\nplt.ylabel('Price')\nplt.title(' Price vs Time (using LSTM)')\nplt.legend(['Actual price', 'Predicted price'])\nplt.show()","b1958858":"plt.figure(figsize = (20,7))\nplt.plot(data_test,'-',label='Actual price')\nplt.plot(rnn_pred,'-',label='RNN Predicted price')\nplt.plot(lstm_pred,'-',label='LSTM Predicted price')\nplt.xlabel('Time')\nplt.ylabel('Price')\nplt.title(' Price vs Time (using LSTM)')\nplt.legend()\nplt.show()","c2ebbdbe":"prediction=x_test[-1]","98b36ae5":"for i in range(30):\n    kl=prediction[i:timestep+i].reshape(1,timestep,1)\n    prediction=np.append(prediction,lstm.predict(kl),axis=0)","7fdd2307":"prediction=scaler.inverse_transform(prediction)","9e774917":"plt.figure(figsize = (20,7))\nplt.plot(prediction[30:],'-',label='Predicted price ')\n\nplt.xlabel('Days')\nplt.ylabel('Price')\nplt.title(' Predicted price of next 30 days ')\nplt.legend()\nplt.show()","e3854470":"The avg price was more during winter season that is between DEC-MAR, but the price for bitcoin increases in 2021, so the avg might comes different ,hence we need to look for year before 2021 before concluding best investing period.","7931435f":"# Bitcoin Analysis\n\nBitcoin is a digital currency that was created in January 2009. Bitcoin is a type of cryptocurrency. There are no physical bitcoins, only balances kept on a public ledger that everyone has transparent access to. All bitcoin transactions are verified by a massive amount of computing power. Bitcoins are not issued or backed by any banks or governments, nor are individual bitcoins.<br>\n<t>The bitcoin system is a collection of computers (also referred to as \"nodes\" or \"miners\") that all run bitcoin's code and store its blockchain. Metaphorically, a blockchain can be thought of as a collection of blocks. In each block is a collection of transactions. Because all the computers running the blockchain has the same list of blocks and transactions, and can transparently see these new blocks being filled with new bitcoin transactions, no one can cheat the system.\n<br>\nAnyone, whether they run a bitcoin \"node\" or not, can see these transactions occurring live. In order to achieve a nefarious act, a bad actor would need to operate 51% of the computing power that makes up bitcoin. Bitcoin has around 12,000 nodes, as of January 2021, and this number is growing.\n\nSo we will view the market trends and wheather its still worth it to invest in it?","5a4737b8":"The total null values in each column is 1243608. <br>\nIt might be the case that each col have null values at different indexes , i.e. we need to check that whether whole row is null or these null values are from different cells. <br>\n\nI am using concept of masking , which generate a bool value for the index places that are null.\nEx. : \n\n|Open|High|\n|---|---|\n|4.39|4.39|\n|nan|nan|\n|nan|nan|\n|58714.31|58714.31|\n|...|...|\n\nThe masking for each col would be like:\n* Open: [false,true,true,false,...]\n* High: [false,true,true,false,...]\n\nThen we will take `and` operation of all these col values , after masking all of them we would get the the bool mask which contains `true` value which shows row having all col value `null`.\n\n=> Open & High : [false,true,true,false,...]\n","e9bf7876":"We need to do the timeseries analysis and their are many values , we will use the resample the given datapoints on the basis of `month`. For more details check [here](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.resample.html)","f3e39a51":"The highest volume trades were made in 2021, avg. currency volume is still very less , this shows that many of the invetors were average investors who wants to do safe trading or they might have the fear of losses, and highest trade volume is very high ,they might be big investor who have the market knowledge or well experience with cypto trading.  ","ded3bc34":"We will look at the trend that how the `volume` and `price` of bitcoin has been varied from year 2011 onwards.","5352486b":"Their are many null values :\n- if we fill those with 0 then we cannot find proper trend for those missing values.\n- if we fill them with mean values, then it might be the case that their are many high values and less values so we might see the drastic change while seeing trend among them because those are 1\/4th of the total values.\n\nSo , we need to find from where the data has been collected from . While searching for it i found this [link](https:\/\/stackoverflow.com\/questions\/29425894\/scraping-data-from-bitcoincharts), but if one used to find the data from that link for the dates we get for null rows , then you get no values for those particular dates , this might shows that data for those values has not been recorded or available.<br>\nI tried to find from the dataset has been collected from ,then i found in the description of kaggle dataset that data has been collected from [bitcoincharts](\nhttps:\/\/bitcoincharts.com\/charts).\n\nI have write another `extract.ipynb` notebook to extract data from the above site using Selenium. ","1229f88f":"From above plot we can view that before 2021 the price of Bitcoin increases after the 7-8 month and again get decreases in starting period of year, this was similar case in 2021 also the price decreases after March 2021, so we can say that for long term trading or safe trading one can invest in the summer and should square off the starting period of new year.\n\nNow we make bitcoin price prediction ,so before that let's see the correlation among atributes.","7c362c20":"- From above we can say that in the starting years till 2015-16 the volume of the bitcoin in the market has been increases but it goes down after it.<br>\nBitcoin is decentralised and as more people come into mining, the price would be increased. Bitcoin releases a block in every 4 years which contains details regarding all the transactions, but volume of bitcoin would be decreases in the future, for more details look after the blockchain.\n- From 2nd graph we can clearly say that prices are increases year by year, and we have some peak values in 2018 and 2021, the last block was released 2020 , it might be the case that more people have found this for better investing as its continuosly increasing year by year , thus more money flow hence more inflation. One can look more details for by looking demand and supply trend. And this is same for 3rd plot also.\n\nAs the price is increasing very often in recent years so can we say is it still safe for trading ?","fe61a623":"As their is drastic change in recent year, let's see changes over it....","65ecbe61":"If we compare the above plot and previous price trend plot ,then we can say that as the market price for the bitcoin has been increased ,then similarly the variation between the prices also increases i.e. as the price is increasing frequently then the falling of price is also their in the same proportion.","49aea52f":"The Weigted_price col has direct correlation with closing,high,low prices . And have other good correlation with timestamp , and little less with the volume of BTC . We should not use the attrbibute `High`,`Close`,`Open` and `Close` prices as they are directly correlated with `Weighted_Price`(target feature).\n\n\nSince this is the time series data ,so we will perform time series price prediction for it.","9c65b7b1":"- The volume of BTC i.e. col 1  charts represents the same trend that majority of trades or when the prices where low then large amount of Bitcoins were traded ,but as the Volume get decreases then the price of the bitcoin increases.\n<br>i.e. $Volume\\_BTC  \\quad  \\alpha \\quad \\frac{1}{Prices}$\n- The Volume of Currency varies with the prices \n- The Trading price has linear relation with the closing ,open,high and low prices.","09579fe9":"The price change trend for Low and high prices are almost same ,their is linear or direct proportion relation between them .This shows that their is not much variation of price for dates before end of 2020 , but in 2021 a significant difference between can be observed. <br>Let's try to see some more relationships among prices and volumes","d8f8f3fc":"From the above scrapped notebook , the data has been stored in `bitcoinunix.csv` .","3f0f3d20":"X = np.arange(12)\nfig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(X + 0.00, mn.groupby('month').mean()['Open'], color = 'b', width = 0.25,label='Open Price')\nax.bar(X + 0.25, mn.groupby('month').mean()['Close'], color = 'pink', width = 0.25,label='Close price')\nax.set_xticks(mn.groupby('month').mean().index)\nax.set_title(\"Avg Open and close price according to months\")\nax.set_xlabel(\"Months\")\nax.legend()\nax.set_ylabel(\"Avg price month wise\")","fc98a507":"## Conclusion:\n- If someone wants to trade in bitcoin then need to watch the prices on daily basis ,because the variation in price for down and up trend are in same proportion , so one need to look for square off for the price trades in order to make profit.\n- The miner or the investor who had trade bitcoin during the year around 2014 or before 2014 would have more wealth now , because the volume was more and the prices were less,so they have make more profit percentage as compare to 2021.\n- Highest price trades are made in 2021 ,but the avg. prices was still very less which shows most of the investors are not aggressive trader or who has fear of loss or less domain knowledge.\n- The Avg. price volume was highest for 2021 and that is for the data of 3 months only ,which represents that even in quarter time we huge trade was occur this year and it may increases by the end of the year.\n- The growth in prices in starting of 2021 is almost kind of exponential and some of the reports mentioned that it might hit 100K USD by end of year ,so if one wants to trade then he good profit could be made by end of the year.\n- For a particular day the highest price and lowest price difference is almost negligible as compared to overall change in year or month,which shows those values have significant changes in prices after 24 hours.\n- The best season to make profit from BTC is winter season , as price for bitcoin get increases for those period in the year. ","1df9894e":"The total null rows is 1243608 and if we observe from above the total null values in each col is also 1243608 , this shows that these are the null rows only . And total null values are 4857377, so the missing rows are just 1\/4th of total values. ","e025d7e9":"From above we can see their was variation between the prices and their corresponding number of trades, as the price increases the number of trades also decreases as we have seen that their is large difference in prices on daily basis, means as the prices goes up , it also went down in same way , so it might become quite difficult for less experience traders to trade for higer price range. ","08816bf4":"After appending the scrapped data, we need to sort the data according to `unix` time.","5bc6abad":"This shows that year 2014 has the highest volume for bitcoins in the market and after that the volume has been continously decreasing,althoug the avg volume was very less. One need to look at the market cap for future if wants to trade this in future because the price is definitely increasing but the volume is continuously decreasing ,investor needs to think whether he would be able to trade in this in future or not......","5707719f":"From above we can see that their are many null values, so let's check how many null values are their:","b4a24dee":"From above we can see that their is drastic increase in the price value of bitcoin and according to some of the prediction [reports](https:\/\/investorplace.com\/2021\/06\/bitcoin-price-prediction-2021-why-btc-could-hit-100k-by-year-end\/) also mentions that the prices might hit 100K USD by the end of the year.","db31dbb2":"We have the kaggle dataset ,can be found [here](https:\/\/www.kaggle.com\/mczielinski\/bitcoin-historical-data)."}}