{"cell_type":{"10e81776":"code","1315e89f":"code","2913fa36":"code","3cca8063":"code","ada3e5e2":"code","29174f31":"code","691d1853":"code","53a1da3d":"code","daa9ed64":"code","1f370390":"code","75da99a7":"code","e1327798":"code","e328c4e4":"markdown","92bd5158":"markdown","4b1d4608":"markdown","d24551f6":"markdown","6015d15f":"markdown","0067b1be":"markdown"},"source":{"10e81776":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1315e89f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split \nfrom sklearn import metrics\nfrom sklearn.ensemble import RandomForestRegressor","2913fa36":"data = pd.read_csv('\/kaggle\/input\/insurance-prediction\/insurance.csv')\ndata","3cca8063":"data.isnull().sum()","ada3e5e2":"data.info()","29174f31":"data.describe()","691d1853":"correlation = data.corr()\ncorrelation","53a1da3d":"X = data[['age','sex','bmi','children','smoker','region']].values\ny = data['charges'].values","daa9ed64":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","1f370390":"RandomForest = RandomForestRegressor()\nRandomForest.fit(X_train,y_train)\ny_pred=RandomForest.predict(X_test)\naccuracy = RandomForest.score(X_test, y_test)\nprint(accuracy*100, \"%\")","75da99a7":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","e1327798":"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf1 = df.head(25)\ndf1.plot(kind='bar',figsize=(10,8))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","e328c4e4":"# **Error Measurement**","92bd5158":"# **Implement Model**","4b1d4608":"# **Loading DataSet**","d24551f6":"# **Importing Libary**","6015d15f":"# **Correlation Measurement**","0067b1be":"# **Actual VS Prediction Graph**"}}