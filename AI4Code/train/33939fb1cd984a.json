{"cell_type":{"bbc4f495":"code","0bb6be3d":"code","ac831378":"code","e5046706":"code","4b0c43fb":"code","6f6babce":"code","4376e338":"code","15a5b6ce":"code","9f2a3f05":"code","a4f194d7":"code","52eff740":"code","a4d0d236":"code","7f23e4ec":"code","64b3fc0f":"code","1c12f20d":"code","f1bbd2ad":"code","5b44f2e6":"code","f427f9c4":"code","f5bdfcff":"markdown","889b4521":"markdown","ceeffcd9":"markdown","0faa955c":"markdown","81eb4a55":"markdown","4c2e9858":"markdown","2bd322f2":"markdown","9cda02ec":"markdown","b583dd34":"markdown","ccc93b2f":"markdown","196afeb4":"markdown","01734120":"markdown","c0170312":"markdown","f844c96d":"markdown","b2cbc960":"markdown","93f8cbce":"markdown","149a8be0":"markdown"},"source":{"bbc4f495":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bb6be3d":"import tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport random\nfrom random import shuffle\n\nimport keras\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler , LabelEncoder\nfrom keras.models import Model, Sequential\nfrom keras.layers import Dense, Activation, Flatten, BatchNormalization, Conv2D, MaxPooling2D, Dropout\nfrom sklearn.metrics import accuracy_score, confusion_matrix","ac831378":"print(tf.__version__)","e5046706":"df = pd.read_csv('\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')","4b0c43fb":"df.head()","6f6babce":"df.info()","4376e338":"df = np.take(df,np.random.permutation(df.shape[0]),axis=0);","15a5b6ce":"df.head()","9f2a3f05":"plt.figure(figsize=(20,10))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm')","a4f194d7":"x = df.iloc[:,:13].values\ny = df.iloc[:,13].values","52eff740":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25,random_state = 0)","a4d0d236":"sc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.fit_transform(x_test)","7f23e4ec":"model = Sequential()\n\nmodel.add(Dense(6))\nmodel.add(Activation('relu'))\n\nmodel.add(Dense(8))\nmodel.add(Activation('relu'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(1))\nmodel.add(Activation('sigmoid'))\n\nmodel.compile(loss = 'binary_crossentropy',optimizer = 'adam',metrics = ['accuracy'])\n\nprint('<< Compiling Model >>')\n\nhistory_1 = model.fit(x_train,y_train ,batch_size = 32 ,epochs = 200)\n\nplt.plot(history_1.history['accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train'], loc='upper left')\nplt.show()\n\ny_pred_1 = model.predict(x_test)\ny_pred_1 = (y_pred_1 > 0.5)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred_1)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_1))\n\npred_1 = 100*accuracy_score(y_test,y_pred_1)\nprint('percentage Accuracy : ',pred_1)","64b3fc0f":"lr = LogisticRegression()\nhistory_2 = lr.fit(x_train,y_train) \n\n\ny_pred_2 = lr.predict(x_test)\ny_pred_2 = (y_pred_2 > 0.5)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred_2)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_2))\n\n\npred_2 = 100*accuracy_score(y_test,y_pred_2)\n\nprint('percentage Accuracy : ',pred_2)","1c12f20d":"rnf = RandomForestClassifier(n_estimators=100,random_state=0,max_depth=5)\nhistory_3 = rnf.fit(x_train,y_train)\n\n\ny_pred_3 = rnf.predict(x_test)\ny_pred_3 = (y_pred_3 > 0.5)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred_3)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_3))\n\npred_3 = 100*accuracy_score(y_test,y_pred_3)\n\nprint('percentage Accuracy : ',pred_3)","f1bbd2ad":"dt = DecisionTreeClassifier()\nhistory_4 = dt.fit(x_train, y_train)\n\n\ny_pred_4 = dt.predict(x_test)\ny_pred_4 = (y_pred_4 > 0.5)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred_4)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_4))\n\npred_4 = 100*accuracy_score(y_test,y_pred_4)\n\nprint('percentage Accuracy : ',pred_4)","5b44f2e6":"height = [pred_1,pred_2,pred_3,pred_4]\nbars = ('ANN','Logistic Reg.','Random Forest',' Decision Tree')\ny_pos = np.arange(len(bars))\n\nplt.bar(y_pos, height, color=['green', 'blue', 'cyan','red'])\nplt.xticks(y_pos, bars)\nplt.show()","f427f9c4":"print(max(height))","f5bdfcff":"4. ***Decision Tree***","889b4521":"signs of a heart attack.\n* > Chest Pain, Pressure, Fullness, or Discomfort. ...\n* > Discomfort in other areas of your body. ...\n* > Difficulty breathing and dizziness. ...\n* > Nausea and cold sweats. ...","ceeffcd9":"# *Hallo Freunde!!!*\n\n**Today, we will be predcting Heart Attacks with the help of various diffrent models under some given factors**\n\nDo upvote if you find the the NoteBook helpful.","0faa955c":"![gene-therapy-heart-attacks-1440x1080.jpg](attachment:gene-therapy-heart-attacks-1440x1080.jpg)","81eb4a55":"# 4. Training of the dataset","4c2e9858":"# 3. Processing the data","2bd322f2":"3. ***Random Forest***","9cda02ec":"Thus, we can conclude that Random Forest has work best in this case with accuracy being ***86.84%***\n\nHope you enjoyed the Notebook!!!\n\n***Thank you***","b583dd34":"# 2. Visualizing the data","ccc93b2f":"# This Notebook is divided in 5 sections\n1. Importing the Dataset and all the necessary libraries.\n2. visualization of the data\n3. Preprocessing the data\n4. Training of the data\n5. Conclusion.","196afeb4":"![SecondHeartAttackFINAL_resizedforSC.jpg](attachment:SecondHeartAttackFINAL_resizedforSC.jpg)","01734120":"***Shuffling the data for a better training***","c0170312":"# 5. Conclusion","f844c96d":"2. ***Logistic Regression***","b2cbc960":"A heart attack is the death of a segment of heart muscle caused by a loss of blood supply. The blood is usually cut off when an artery supplying the heart muscle is blocked by a blood clot. If some of the heart muscle dies, a person experiences chest pain and electrical instability of the heart muscle tissue.","93f8cbce":"1. ***ANN***","149a8be0":"# 1. Importing the Dataset and libraries."}}