{"cell_type":{"a507c22b":"code","5f6488c4":"code","a15aef31":"code","d9679d15":"code","79206eec":"code","ddc246b8":"code","a92c93fe":"code","75df642f":"code","7d0c4cff":"code","c3466b76":"code","874247d5":"code","514d8f3e":"code","bbfff3ac":"code","c21c40de":"code","96167f31":"code","efad6314":"code","806f2b06":"code","e2d6235a":"code","e94f27b4":"code","c99e07d7":"code","fd3dbf58":"code","4ed551b5":"code","95d2c79c":"markdown"},"source":{"a507c22b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f6488c4":"train=pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/train.csv\")\ntrain.head()","a15aef31":"train.info()","d9679d15":"train.describe()","79206eec":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nplt.figure(figsize=(15,15))\nstyle.use('classic')\nsns.heatmap(train.corr(),annot=True,cmap=\"rainbow\")","ddc246b8":"sns.countplot(train[\"price_range\"])","a92c93fe":"sns.pairplot(train)","75df642f":"x=train.drop(\"price_range\",axis=1)\ny=train[\"price_range\"]","7d0c4cff":"from sklearn.model_selection import train_test_split,KFold,cross_val_score\nxr,xt,yr,yt=train_test_split(x,y,test_size=0.1)","c3466b76":"from sklearn.ensemble import GradientBoostingClassifier,RandomForestClassifier,RandomForestRegressor,GradientBoostingRegressor\nfrom xgboost import XGBClassifier,XGBRFRegressor,XGBRegressor\nfrom sklearn.tree import DecisionTreeClassifier,DecisionTreeRegressor\nfrom sklearn.linear_model import LogisticRegression,LinearRegression,SGDRegressor\nfrom sklearn.svm import SVC,SVR\nfrom sklearn.neighbors import KNeighborsClassifier,KNeighborsRegressor\nfrom sklearn.naive_bayes import GaussianNB\nfrom lightgbm import LGBMRegressor,LGBMClassifier","874247d5":"from imblearn.over_sampling import SMOTE \nsm = SMOTE(random_state=42) \nx1,y1= sm.fit_sample(x,y) ","514d8f3e":"model=LGBMClassifier(n_estimators=1000)\nmodel.fit(x1,y1)\nkfold=KFold(n_splits=10)\nprint(model)\nres=cross_val_score(model,x,y,cv=kfold)\nprint(res.mean()*100)","bbfff3ac":"yp=model.predict(xt)","c21c40de":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nprint(accuracy_score(yt,yp))\nprint(classification_report(yt,yp))","96167f31":"sns.heatmap(confusion_matrix(yt,yp),annot=True,cmap='summer')","efad6314":"test=pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/test.csv\")\ntest.head()","806f2b06":"pred=test.drop('id',axis=1)","e2d6235a":"pred.head()","e94f27b4":"yp=model.predict(pred)\ny1=pd.DataFrame(yp)","c99e07d7":"test=pd.concat([test,y1],axis=1)","fd3dbf58":"test.columns=[           'id', 'battery_power',          'blue',   'clock_speed',\n            'dual_sim',            'fc',        'four_g',    'int_memory',\n               'm_dep',     'mobile_wt',       'n_cores',            'pc',\n           'px_height',      'px_width',           'ram',          'sc_h',\n                'sc_w',     'talk_time',       'three_g',  'touch_screen',\n                'wifi',               'price_range']","4ed551b5":"test.to_csv('sub1.csv',columns=[\"id\",\"price_range\"],index=False)","95d2c79c":"# TEST"}}