{"cell_type":{"471dd59c":"code","ca97b4d0":"code","9abfd298":"code","4aa2eb7a":"code","b273dbb4":"code","0b316994":"code","8d1f2935":"code","7d7be49b":"code","1e8d073d":"code","794aa132":"code","7468868a":"code","89e2b8f7":"code","7637cd96":"code","e507b81a":"code","0d3d2e3b":"code","3a3e2d64":"code","96d4e09d":"code","1ed28db2":"code","f294ae57":"code","dc8cd8c6":"code","dc8f7162":"code","3245c30e":"code","c04c9931":"code","663a732d":"code","18a55faf":"code","cd4ca113":"code","7f552feb":"code","9467d531":"code","4e4ec7cf":"code","387d4efa":"code","22b8666e":"code","8af314c8":"code","8928b76f":"code","c26726a5":"code","b9ec7077":"code","90510eec":"code","a95b326a":"code","471b0960":"code","2694f3dc":"code","56ec903d":"code","3f57707e":"code","f0436320":"code","f1acaef7":"code","73c7316a":"code","77577a3e":"code","1fe1fb05":"code","110d298e":"code","a1988b57":"code","9ea208fa":"markdown","713bfa55":"markdown","8a831acf":"markdown","5481f1df":"markdown","33d732ef":"markdown","1e8fa193":"markdown","92f4c0bb":"markdown","620c3af8":"markdown","5bf24d42":"markdown","16f937ff":"markdown","3de38b78":"markdown","0d7c3e44":"markdown","70ad228d":"markdown","cd1f17ed":"markdown","6b5ea8a0":"markdown","3debd81b":"markdown","648ab219":"markdown","7be9f9fe":"markdown","cbbedb10":"markdown"},"source":{"471dd59c":"## \u57fa\u672c\u30e9\u30a4\u30d6\u30e9\u30ea\nimport os\n\nimport numpy as np\nimport pandas as pd\npd.options.mode.chained_assignment = None  # default='warn'\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\n\nimport plotly.express as px","ca97b4d0":"os.listdir(\"..\/input\/nlp-getting-started\")","9abfd298":"train_df = pd.read_csv(\"..\/input\/nlp-getting-started\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/nlp-getting-started\/test.csv\")\nsample_df = pd.read_csv(\"..\/input\/nlp-getting-started\/sample_submission.csv\")","4aa2eb7a":"train_df[\"class\"] = train_df[\"target\"].map({0:\"Not Disaster\", 1:\"Disaster\"})\ntrain_df.sample(5)","b273dbb4":"## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u78ba\u8a8d\ntest_df.head()","0b316994":"##\u3000\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5f62\u72b6\nprint(train_df.shape,test_df.shape)","8d1f2935":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u6b20\u640d\u5024\u78ba\u8a8d\ntrain_df.isnull().sum().plot(kind = \"barh\");","7d7be49b":"targets = train_df[\"target\"].value_counts()\n\nfig = px.pie(values = targets,names = [\"\u975e\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\",\"\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\"], width=530,height=500, \n             title= \"\u30c4\u30a4\u30fc\u30c8\u306e\u5206\u5e03\",hover_name=[\"\u975e\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\",\"\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\"],\n            )\nfig.show()","1e8d073d":"##\u3000\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u30c4\u30a4\u30fc\u30c8\u9577\u306e\u6b04\u3092\u8ffd\u52a0\ntrain_df[\"length\"] = train_df.text.str.split().apply(len)\ntrain_df.sample(4)","794aa132":"fig = px.histogram(train_df, x = \"keyword\", y = \"length\", \n                   color = \"class\", opacity=0.8, title=\"\u30ad\u30fc\u30ef\u30fc\u30c9\u5225\u30c4\u30a4\u30fc\u30c8\u306e\u9577\u3055\")\nfig.show()","7468868a":"d_locations =  train_df[train_df[\"class\"]==\"Disaster\"].location.value_counts()\nnd_locations =  train_df[train_df[\"class\"]==\"Not Disaster\"].location.value_counts()","89e2b8f7":"plt.figure(figsize = [30,8])\n\nplt.subplot(121)\nd_locations[:10].plot(kind = \"barh\", color = \"Red\")\nplt.title(\"Disaster tweets from locations(Top-10)\")\n\nplt.subplot(122)\nnd_locations[:10].plot(kind = \"barh\", color = \"Green\")\nplt.title(\"Non Disaster tweets from locations(Top-10)\");","7637cd96":"train_df","e507b81a":"## \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30c6\u30ad\u30b9\u30c8\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3001\u30af\u30e9\u30b9\u3092\u9078\u51fa\ndf_train = train_df[[\"text\",\"target\",\"class\"]]","0d3d2e3b":"df_train","3a3e2d64":"## \u8a13\u7df4\u30c7\u30fc\u30bf\u78ba\u8a8d\ndf_train.text[:5]","96d4e09d":"## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u78ba\u8a8d\ntest_df.text[:5]","1ed28db2":"## \u6a5f\u68b0\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\nimport re\nimport string","f294ae57":"def processTextR1(text):\n    '''Make text lowercase, remove text in square brackets, remove punctuation and remove words containing numbers.'''\n    text = text.lower()\n    text = re.sub('\\[.*?\\]', '', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    return text\n\nround1 = lambda x: processTextR1(x)","dc8cd8c6":"## Clean text\u3092\u8ffd\u52a0\ndf_train[\"clean_text\"] = df_train[\"text\"].apply(round1)\ntest_df[\"clean_text\"] = test_df[\"text\"].apply(round1)","dc8f7162":"df_train","3245c30e":"test_df","c04c9931":"df_train.clean_text[0]","663a732d":"test_df.clean_text[1]","18a55faf":"## nltk\u3088\u308astopword\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom nltk.corpus import stopwords\n## nltk\u3088\u308aSnowballstemmer\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom nltk.stem import SnowballStemmer","cd4ca113":"stop_words = stopwords.words(\"english\")\nstemmer = SnowballStemmer(\"english\")","7f552feb":"def processTextR2(text, stem = False):\n    text = re.sub(\"@\\S+|https?:\\S+|http?:\\S|[^A-Za-z0-9]+\",\" \",str(text).lower().strip())\n    tokens = []\n    for token in text.split():\n        if token not in stop_words:\n            if stem:\n                tokens.append(stemmer.stem(token))\n            else:\n                tokens.append(token)\n    return \" \".join(tokens)\n\nround2 = lambda x: processTextR2(x)","9467d531":"## \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3092round2\u306b\u4ee3\u5165\ndf_train[\"clean_text\"] = df_train[\"clean_text\"].apply(round2)\n## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3092round2\u306b\u4ee3\u5165\ntest_df[\"clean_text\"] = test_df[\"clean_text\"].apply(round2)","4e4ec7cf":"df_train","387d4efa":"test_df","22b8666e":"## sklearn\u3088\u308aCountVectorizer\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom sklearn.feature_extraction.text import CountVectorizer\n## CountVectorizer\u5b9f\u884c\ncv = CountVectorizer(max_features = 3000)","8af314c8":"## \u8a13\u7df4\u30c7\u30fc\u30bfclean_text\u6a19\u6e96\u5316\u51e6\u7406\nX = cv.fit_transform(df_train['clean_text']).toarray()\n## Y\u306f\u8a13\u7df4\u30c7\u30fc\u30bftarget\nY = df_train[\"target\"]","8928b76f":"Y","c26726a5":"##\u914d\u5217\u306b\u5909\u63db\nX_test = cv.transform(test_df[\"clean_text\"]).toarray()","b9ec7077":"##\u30c7\u30fc\u30bf\u306e\u5f62\u72b6\u3092\u78ba\u8a8d\nprint(X.shape, X_test.shape)","90510eec":"## sklearn\u3088\u308apipeline\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom sklearn.pipeline import make_pipeline\n## sklearn\u3088\u308a\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u5206\u985e\u5668\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split","a95b326a":"x_train,x_test,y_train,y_test = train_test_split(X,Y, random_state = 21, test_size = 0.2)","471b0960":"models  = {\n    \"RandomForestClassifier\" : make_pipeline(RandomForestClassifier()),\n}","2694f3dc":"%%time\n\nfit_models = {}\nfor algo,pipeline in models.items():\n    model = pipeline.fit(x_train,y_train)\n    fit_models[algo] = model","56ec903d":"fit_models","3f57707e":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u5206\u6790\nfor model in fit_models:\n    print(f\" {model} : {fit_models[model].score(x_train,y_train)*100}%\")","f0436320":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u5206\u6790\nscores = {}\nfor model in fit_models:\n    print(f\" {model} : {fit_models[model].score(x_test,y_test)*100:.2f}%\")\n    scores[model] = fit_models[model].score(x_test,y_test)","f1acaef7":"##\u3000\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u78ba\u8a8d\nsample_df.head()","73c7316a":"#\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306b\u3088\u308b\u5206\u985e\npredictions = fit_models[\"RandomForestClassifier\"].predict(X_test)\npredictions[:10]","77577a3e":"##\u4e88\u6e2c\u7d50\u679c\u3092\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306b\u8ffd\u52a0\nsample_df[\"target\"] = predictions","1fe1fb05":"##\u3000\u30bf\u30fc\u30b2\u30c3\u30c8\u30920\uff1a\u975e\u707d\u5bb3\u30c4\u30a4\u30fc\u30c81:\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\u3067\u30ab\u30a6\u30f3\u30c8\nsample_df.target.value_counts()","110d298e":"##\u3000\u30c7\u30fc\u30bf\u63d0\u51fa\nsample_df.to_csv(\"Submission.csv\",index=False)","a1988b57":"sample_df","9ea208fa":"max_features:\u6574\u6570\uff0c\u5c0f\u6570\uff0c\u6587\u5b57\u5217\u307e\u305f\u306f None \u3092\u6307\u5b9a\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f None\uff0e\u6700\u9069\u306a\u5206\u5272\u3092\u3059\u308b\u305f\u3081\u306b\u8003\u616e\u3059\u308b\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u306e\u6570\u3092\u6307\u5b9a\uff0e\u6574\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff0c\u305d\u306e\u500b\u6570\uff0c\u5c0f\u6570\u306e\u5834\u5408\u5168\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u306b\u5bfe\u3059\u308b\u5272\u5408\u500b\uff0cauto \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff0c\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u6570\u306e\u30eb\u30fc\u30c8\u500b\uff0clog2 \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff0clog2(\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u6570) \u500b\uff0e\u57fa\u672c\u306f None \u3092\u4f7f\u3046\u3079\u304d\uff0e","713bfa55":"## **\u30e2\u30c7\u30eb**","8a831acf":"> **\u30c4\u30a4\u30fc\u30c8\u306e\u9577\u3055**","5481f1df":"# # **\u30c6\u30ad\u30b9\u30c8\u30af\u30ea\u30fc\u30cb\u30f3\u30b0**","33d732ef":"## **Natural Language Processing with Disaster Tweets**","1e8fa193":"## **\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u89e3\u6790**","92f4c0bb":"## **\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u51e6\u7406**","620c3af8":"**\u5834\u6240**\n> \u30c4\u30a4\u30fc\u30c8\u3092\u5831\u544a\u3057\u3066\u3044\u308b\u5834\u6240","5bf24d42":"> **\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8\/\u975e\u707d\u5bb3\u30c4\u30a4\u30fc\u30c8**","16f937ff":"**\u8a13\u7df4\u30c7\u30fc\u30bf\u30b9\u30b3\u30a2**","3de38b78":"\u6587\u7ae0\u3092\u500b\u3005\u306e\u5358\u8a9e\u306b\u5206\u5272\u3057\u3066\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3002\u307e\u305f\u306f\u3058\u3081\u306b\u4e00\u822c\u7684\u306a\u5358\u8a9e\uff08\u300cthe\u300d\u3001\u300ca\u300d\u306a\u3069\uff09\u3082\u524a\u9664\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001nltk\u3092\u5229\u7528\u3059\u308b\u3002 nltk\u306f\u30c6\u30ad\u30b9\u30c8\u51e6\u7406\u3059\u308b\u305f\u3081\u306ePython\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308a\u3001\u591a\u304f\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u57fa\u672c\u7684\u306a\u4e00\u90e8\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3002","0d7c3e44":"\u6b20\u640d\u5024\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3067\u7f6e\u63db\u3057\u3001\u68d2\u30b0\u30e9\u30d5\u3067\u8868\u793a","70ad228d":"**Training**","cd1f17ed":"## **\u4e88\u6e2c\u3068\u63d0\u51fa**","6b5ea8a0":"\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6570\u3048\u3066\u3044\u308b\u3002\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3068\u306f\u6587\u7ae0\u4e2d\u306b\u51fa\u3066\u304f\u308b\u5358\u8a9e\u306b\u3064\u3044\u3066\u4f55\u56de\u4f7f\u7528\u3055\u308c\u305f\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3082\u306e\u3067\u3001sklearn\u306eCountVectorizer\u3092\u7528\u3044\u3066\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u51fa\u73fe\u983b\u5ea6\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u306f\u7279\u5fb4\u91cf\u62bd\u51fa\u3068\u3044\u3046\u624b\u6cd5\u3092\u7528\u3044\u308b\u3002\u7279\u5fb4\u91cf\u62bd\u51fa\u3068\u306f\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308b\u304b\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3057\u305f\u3082\u306e\u3067\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u304c\u30d9\u30af\u30c8\u30eb\uff08\u6570\u5024\uff09\u306b\u3042\u305f\u308b\u3002","3debd81b":"**\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30b9\u30b3\u30a2**","648ab219":"# \u30c8\u30fc\u30af\u30f3\u5316","7be9f9fe":"# \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9(\u4e00\u822c\u7684\u306a\u5358\u8a9e\u3067\u3042\u308b\u300cthe\u300d\u300ca\u300d\u300cfor\u300d\u7b49)\u3068\u30b9\u30c6\u30df\u30f3\u30b0(\u8a9e\u5e79)\u51e6\u7406","cbbedb10":"# CountVectorizer"}}