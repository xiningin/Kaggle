{"cell_type":{"82fe88f5":"code","9759463d":"code","52671fb3":"code","50c20f00":"code","50db5d4b":"code","e2b192e0":"code","615f0941":"code","d71d2afc":"code","f68321e6":"code","7707e50a":"code","adc579fa":"code","fd914c2d":"code","059ce72f":"code","b5208404":"code","9c56d88e":"code","84117415":"code","b6f907f4":"code","5cc56631":"code","4172cef4":"code","4f48c667":"code","87031e11":"code","5ea4f0ac":"code","0d902825":"code","f94a6b23":"code","ead0ef1b":"code","66415eb5":"code","4f597cd2":"code","2493dc23":"code","4f65a3c2":"code","d6ac6726":"code","35a80350":"code","2c642979":"code","d8df8da0":"code","cdf45cc0":"code","1ad6931b":"code","d3614abd":"code","1919ceee":"code","be8081a1":"code","ffe46f1f":"code","c7522d0b":"code","5f9b55e6":"code","be591347":"code","8cddb9d8":"code","524adb77":"code","92737f2e":"code","e13ddb63":"markdown","0ca58002":"markdown","5a858526":"markdown","acdae49c":"markdown","c4236348":"markdown","652a5918":"markdown","1d923c0c":"markdown","b51bb172":"markdown","627fb8fb":"markdown","eaebd3fb":"markdown","df267d31":"markdown","05716b2e":"markdown","5eb6dd0f":"markdown","00e82506":"markdown","c1a2b276":"markdown","218ecf5e":"markdown","5769e17e":"markdown","edf9c629":"markdown","49fb2bef":"markdown","35184752":"markdown","e09d2b95":"markdown","7d8892da":"markdown","4a731ac8":"markdown","5a99e434":"markdown"},"source":{"82fe88f5":"# data manipulation\nimport pandas as pd \nimport numpy as np\nimport os\n\n# data vizualisation \nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# dataprep\n!pip install dataprep\nfrom dataprep.eda import *\nfrom dataprep.datasets import load_dataset\nfrom dataprep.eda import create_report\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda.missing import plot_missing\n\n#default theme\nsns.set(context='notebook', style='darkgrid', palette='colorblind', font='sans-serif', font_scale=1, rc=None)\nmatplotlib.rcParams['figure.figsize'] =[15,10]\nmatplotlib.rcParams.update({'font.size': 15})\n\n\n","9759463d":"import warnings\nwarnings.filterwarnings(\"ignore\")","52671fb3":"df = pd.read_csv('..\/input\/videogamesales\/vgsales.csv',index_col='Rank')\ndf","50c20f00":"print('numebr of rows is :',df.shape[0],' and number of columns is : ',df.shape[1])","50db5d4b":"df.columns","e2b192e0":"df.info()","615f0941":"fig, axarr = plt.subplots(1, 2, figsize=(20, 8))\n\ndf.dtypes.value_counts().plot.pie(explode=[0.1,0.1],autopct='%1.1f%%',shadow=True,ax=axarr[1])\nplt.title('type of our data')\n\ndf.dtypes.value_counts().plot(kind='bar',ax=axarr[0])\nplt.title('type of our data');","d71d2afc":"plot(df.dtypes.value_counts())","f68321e6":"df.describe(include='all')","7707e50a":"plt.figure(figsize=(13,10))\nsns.heatmap(df.corr(), cmap = \"Blues\", annot=True, linewidth=3)","adc579fa":"matplotlib.rcParams['figure.figsize'] =[15,10]\ndf.Name.value_counts().head(100).plot(kind='bar')\nplt.title('top 100 game sales')","fd914c2d":"sns.pairplot(df, hue='Platform')","059ce72f":"df.Platform.unique()","b5208404":"fig, axarr = plt.subplots(1, 2, figsize=(20, 8))\n\ndf.Platform.value_counts().plot.pie(shadow=True,ax=axarr[1])\n\n\ndf.Platform.value_counts().plot(kind='bar',ax=axarr[0])\nplt.title('all the platforms');","9c56d88e":"data_NA_Sales = df.groupby(by=['Platform'])['NA_Sales'].sum()\ndata_NA_Sales = data_NA_Sales.reset_index()\ndata_NA_Sales = data_NA_Sales.sort_values(by=['NA_Sales'], ascending=False)\n\ndata_EU_Sales = df.groupby(by=['Platform'])['EU_Sales'].sum()\ndata_EU_Sales = data_EU_Sales.reset_index()\ndata_EU_Sales = data_EU_Sales.sort_values(by=['EU_Sales'], ascending=False)\n\ndata_JP_Sales = df.groupby(by=['Platform'])['JP_Sales'].sum()\ndata_JP_Sales = data_JP_Sales.reset_index()\ndata_JP_Sales = data_JP_Sales.sort_values(by=['JP_Sales'], ascending=False)\n\ndata_platform = df.groupby(by=['Platform'])['Global_Sales'].sum()\ndata_platform = data_platform.reset_index()\ndata_platform = data_platform.sort_values(by=['Global_Sales'], ascending=False)\n","84117415":"fig, axarr = plt.subplots(2, 2, figsize=(30, 15))\n\nsns.barplot(x=\"Platform\", y=\"Global_Sales\", data=data_platform,\n    ax=axarr[0][0])\naxarr[0][0].set_title(\"platfrom have the highest Global_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Platform\", y=\"NA_Sales\", data=data_NA_Sales,\n    ax=axarr[1][0])\naxarr[1][0].set_title(\"platfrom have the highest NA_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Platform\", y=\"EU_Sales\", data=data_EU_Sales,\n    ax=axarr[0][1])\naxarr[0][1].set_title(\"platfrom have the highest EU_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Platform\", y=\"JP_Sales\", data=data_JP_Sales,\n    ax=axarr[1][1])\naxarr[1][1].set_title(\"platfrom have the highest JP_Sales price\", fontsize=18)\n\n\nplt.subplots_adjust(hspace=.3)\n\nimport seaborn as sns\nsns.despine()","b6f907f4":"comp_platform = df[['Platform', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\ncomp_platform.head()","5cc56631":"comp_table = pd.melt(comp_platform, id_vars=['Platform'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Price')\ncomp_table.head()","4172cef4":"plt.figure(figsize=(30, 15))\nsns.barplot(x='Platform', y='Sale_Price', hue='Sale_Area', data=comp_table)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","4f48c667":"sns.pairplot(df, hue='Genre')","87031e11":"df.Genre.unique()","5ea4f0ac":"fig, axarr = plt.subplots(1, 2, figsize=(20, 8))\n\ndf.Genre.value_counts().plot.pie(shadow=True,ax=axarr[1])\n\n\ndf.Genre.value_counts().plot(kind='bar',ax=axarr[0])\nplt.title('all the games Genre');","0d902825":"data_NA_Sales = df.groupby(by=['Genre'])['NA_Sales'].sum()\ndata_NA_Sales = data_NA_Sales.reset_index()\ndata_NA_Sales = data_NA_Sales.sort_values(by=['NA_Sales'], ascending=False)\n\ndata_EU_Sales = df.groupby(by=['Genre'])['EU_Sales'].sum()\ndata_EU_Sales = data_EU_Sales.reset_index()\ndata_EU_Sales = data_EU_Sales.sort_values(by=['EU_Sales'], ascending=False)\n\ndata_JP_Sales = df.groupby(by=['Genre'])['JP_Sales'].sum()\ndata_JP_Sales = data_JP_Sales.reset_index()\ndata_JP_Sales = data_JP_Sales.sort_values(by=['JP_Sales'], ascending=False)\n\ndata_platform = df.groupby(by=['Genre'])['Global_Sales'].sum()\ndata_platform = data_platform.reset_index()\ndata_platform = data_platform.sort_values(by=['Global_Sales'], ascending=False)","f94a6b23":"fig, axarr = plt.subplots(2, 2, figsize=(30, 15))\n\nsns.barplot(x=\"Genre\", y=\"Global_Sales\", data=data_platform,\n    ax=axarr[0][0])\naxarr[0][0].set_title(\"game Genre who have the highest Global_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Genre\", y=\"NA_Sales\", data=data_NA_Sales,\n    ax=axarr[1][0])\naxarr[1][0].set_title(\"game Genre who have the highest NA_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Genre\", y=\"EU_Sales\", data=data_EU_Sales,\n    ax=axarr[0][1])\naxarr[0][1].set_title(\"game Genre who have the highest EU_Sales price\", fontsize=18)\n\n\nsns.barplot(x=\"Genre\", y=\"JP_Sales\", data=data_JP_Sales,\n    ax=axarr[1][1])\naxarr[1][1].set_title(\"game Genre who have the highest JP_Sales price\", fontsize=18)\n\n\nplt.subplots_adjust(hspace=.3)\n\nsns.despine()","ead0ef1b":"comp_genre = df[['Genre', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\ncomp_genre\n","66415eb5":"comp_map = comp_genre.groupby(by=['Genre']).sum()\ncomp_map","4f597cd2":"plt.figure(figsize=(15, 10))\nsns.set(font_scale=1)\nsns.heatmap(comp_map, annot=True, fmt = '.1f')\n\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","2493dc23":"comp_table = comp_map.reset_index()\ncomp_table = pd.melt(comp_table, id_vars=['Genre'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Price')\ncomp_table.head(20)","4f65a3c2":"plt.figure(figsize=(20, 10))\nsns.barplot(x='Genre', y='Sale_Price', hue='Sale_Area', data=comp_table)","d6ac6726":"df.Publisher.unique()","35a80350":"fig, axarr = plt.subplots(1, 2, figsize=(20, 8))\n\ndf.Publisher.value_counts().head(30).plot.pie(shadow=True,ax=axarr[1])\n\n\ndf.Publisher.value_counts().head(30).plot(kind='bar',ax=axarr[0])\nplt.title('all the Publisher');","2c642979":"# PS : we had arround 203 rows with Publisher is \"Unknown\"\ndf.loc[df.Publisher ==\"Unknown\"]","d8df8da0":"comp_publisher = df[['Publisher', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales', 'Global_Sales']]\ncomp_publisher.head()","cdf45cc0":"comp_publisher = comp_publisher.groupby(by=['Publisher']).sum().reset_index().sort_values(by=['Global_Sales'], ascending=False)\ncomp_publisher = comp_publisher.head(20)\n\ncomp_publisher = pd.melt(comp_publisher, id_vars=['Publisher'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Area', value_name='Sale_Price')\n","1ad6931b":"plt.figure(figsize=(30, 15))\nsns.barplot(x='Publisher', y='Sale_Price', hue='Sale_Area', data=comp_publisher)\nplt.xticks(fontsize=14, rotation=90)\nplt.yticks(fontsize=14)\nplt.show()","d3614abd":"top_publisher =  df[['Year', 'Publisher']]\ntop_publisher_df = top_publisher.groupby(by=['Year', 'Publisher']).size().reset_index(name='Count')\ntop_publisher_idx =  top_publisher_df.groupby(by=['Year'])['Count'].transform(max) == top_publisher_df['Count']\ntop_publisher_count = top_publisher_df[top_publisher_idx].reset_index(drop=True)\ntop_publisher_count  = top_publisher_count.drop_duplicates(subset=[\"Year\", \"Count\"], keep='last').reset_index(drop=True)\n\npublisher= top_publisher_count['Publisher']","1919ceee":"plt.figure(figsize=(30, 15))\ng = sns.barplot(x='Year', y='Count', data=top_publisher_count)\nindex = 0\nfor value in top_publisher_count['Count'].values:\n    g.text(index, value + 5, str(publisher[index] + '----' +str(value)), color='#000', size=14, rotation= 90, ha=\"center\")\n    index += 1\nplt.xticks(rotation=90)\nplt.show()","be8081a1":"fig, axarr = plt.subplots(3, 2, figsize=(20,15))\n\nsns.distplot(df['NA_Sales'],  kde=False, color='mediumvioletred',\n    ax=axarr[0][0]\n)\n\n\nsns.distplot(df['EU_Sales'],  kde=False,color='mediumvioletred',\n    ax=axarr[1][0]\n)\n\n\nsns.distplot(df['JP_Sales'],  kde=False,color='mediumvioletred',\n    ax=axarr[0][1]\n)\n\n\nsns.distplot(df['Other_Sales'],  kde=False,color='mediumvioletred',\n    ax=axarr[1][1]\n)\n\n\nsns.distplot(df['Global_Sales'],  kde=False,color='mediumvioletred',\n    ax=axarr[2][0]\n)\n\n\nplt.subplots_adjust(hspace=.5)\n\nsns.despine()","ffe46f1f":"from scipy import stats","c7522d0b":"data_hist_log = df.copy()","5f9b55e6":"data_hist_log = data_hist_log[data_hist_log.NA_Sales != 0]\ndata_hist_log = data_hist_log[data_hist_log.EU_Sales != 0]\ndata_hist_log = data_hist_log[data_hist_log.Other_Sales != 0]\ndata_hist_log = data_hist_log[data_hist_log.JP_Sales != 0]\ndata_hist_log = data_hist_log[data_hist_log.Global_Sales != 0]\n\nplt.figure(figsize=(25,30))\nsales_columns = ['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales', 'Global_Sales']\nfor i, column in enumerate(sales_columns):\n    plt.subplot(3,2,i+1)\n    sns.distplot(np.log(data_hist_log[column]), bins=20, kde=False, fit=stats.gamma,color='mediumvioletred')\n","be591347":"create_report(df)","8cddb9d8":"missing_values=df.isnull().sum() # missing values\n\npercent_missing = df.isnull().sum()\/df.shape[0]*100 # missing value %\n\nvalue = {\n    'missing_values ':missing_values,\n    'percent_missing %':percent_missing  \n}\nframe=pd.DataFrame(value)\nframe\n","524adb77":"plot_missing(df)","92737f2e":"null_data = df[df.isnull().any(axis=1)]\nnull_data","e13ddb63":"# C. Genre","0ca58002":"# data corrolation","5a858526":"### Top publisher by Count each year !!","acdae49c":"# E. Sales","c4236348":"### Sales compearison by genre","652a5918":"## If you like this note book please give me an up vote\n#### Thank You ..............","1d923c0c":"### action and sports games are the moste famous game gender in our data","b51bb172":"### Which platfrom have the highest sale price ?\n","627fb8fb":"i change the index column to \"Rank\" to reduce the number of columns in our data","eaebd3fb":"## finding missing values","df267d31":"# A. Games Names","05716b2e":"## import packages and themes","5eb6dd0f":"### Action Sports and Shooter have much sales compare with others. and North America (NA_sales) have heights sales all the time. Its look like they love video games most","00e82506":"from describe methode we can cee a lot of things :\n    * our periode is between \t1980 and 2020\n    * the famaous platform is DS (2163 time)\n    * the top genre of games are Action\n    * the top Publisher is Electronic Arts ","c1a2b276":"# Data visualization","218ecf5e":"### lets try to chech the Publisher missing rows ","5769e17e":"### the famous platforms are DS and PS2 with more then 2000 time","edf9c629":"# B. platforms","49fb2bef":"PS : we take just the first 30 Publisher because we had more then 578 and that will make hard to visualate \n\nlike we see the moste 5 famous Publisher are :\n\n    * Electronic Arts                 1351\n    * Activision                       975\n    * Namco Bandai Games               932\n    * Ubisoft                          921\n    * Konami Digital Entertainment     832","35184752":"### Which Game Genre have the highest sale price ?","e09d2b95":"## Description\n\nThis dataset contains a list of video games with sales greater than 100,000 copies. It was generated by a scrape of vgchartz.com.\n\nFields include\n\n    * Name - The games name\n\n    * Platform - Platform of the games release (i.e. PC,PS4, etc.)\n\n    * Year - Year of the game's release\n\n    * Genre - Genre of the game\n\n    * Publisher - Publisher of the game\n\n    * NA_Sales - Sales in North America (in millions)\n\n    * EU_Sales - Sales in Europe (in millions)\n\n    * JP_Sales - Sales in Japan (in millions)\n\n    * Other_Sales - Sales in the rest of the world (in millions)\n\n    * Global_Sales - Total worldwide sales.","7d8892da":"like we see 307 rows had at least 1 missing values","4a731ac8":"# D. Publisher","5a99e434":"# 1. data analysis"}}