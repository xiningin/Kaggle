{"cell_type":{"53a4a5ee":"code","d186af39":"code","1a0d1036":"code","4cc2c032":"code","ee4a9483":"code","bf15652e":"code","efb0f873":"code","abb8d8fa":"code","4bb640bc":"code","4fadf48e":"code","a0935e46":"code","7afe5cdf":"code","0c92d8f7":"code","a81352ee":"code","cea5cd9b":"markdown","81e67a6c":"markdown","c148803a":"markdown","f7dde932":"markdown","60c67038":"markdown","5c527e1c":"markdown","d69b5a3e":"markdown","8ba8b5b7":"markdown"},"source":{"53a4a5ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d186af39":"df=pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')","1a0d1036":"df.head()","4cc2c032":"df['Size']=df['Size'].apply(lambda x:str(x).replace('M',''))\ndf['Size']=df['Size'].apply(lambda x:str(x).replace('K',''))\ndf['Size']=df['Size'].apply(lambda x:str(x).replace('B',''))\ndf['Size']=df['Size'].apply(lambda x:str(x).replace('G',''))","ee4a9483":"df.Size = pd.to_numeric(df.Size, errors='coerce')","bf15652e":"df['Size']","efb0f873":"df['Size'].max()","abb8d8fa":"df[df['Size']==100.0]","4bb640bc":"df['Size'].isnull().sum()","4fadf48e":"df['Size'].fillna(df['Size'].mean(),inplace=True)","a0935e46":"df['Size']","7afe5cdf":"df['Size'].isnull().sum()","0c92d8f7":"ans=df[['Size','App']][df['Size']==df['Size'].max()]","a81352ee":"ans","cea5cd9b":"# Convert size column datatype into numeric,and make NAN which have string value inside","81e67a6c":"# Handling null value with mean","c148803a":"# Check null Value","f7dde932":"# Check maximum of size column","60c67038":"# All data with size 100.0","5c527e1c":"# Check total null value in Size column","d69b5a3e":"# All Apps list which have maximum size","8ba8b5b7":"# Remove initials like 'M','K','B','G' from Size column"}}