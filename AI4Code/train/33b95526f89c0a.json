{"cell_type":{"9b8b3391":"code","d19272c3":"code","d724836a":"code","e56ef1e4":"code","8012fddd":"code","c5ab69e5":"code","429fbe9a":"code","008dbfe1":"code","7c07dceb":"code","773c53d7":"code","391b6d7a":"code","f84de982":"code","48be56b7":"code","9de87cfe":"code","97c41377":"code","82ce23fd":"code","2328ac65":"code","d0404d6d":"code","ee8bdff2":"code","f10e2333":"code","5c72fc48":"markdown","717e170e":"markdown"},"source":{"9b8b3391":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndefault_path = '..\/input\/'","d19272c3":"!ls ..\/input","d724836a":"train_df = pd.read_csv(default_path+'sales_train.csv')\nitems_df = pd.read_csv(default_path+'items.csv')\ntest_df = pd.read_csv(default_path+'test.csv')\n# id\u5c0d\u7167\u8868..\u597d\u50cf\u7528\u4e0d\u592a\u5230\n# item_categories_df = pd.read_csv(default_path+'item_categories.csv')\n# shops_df = pd.read_csv(default_path+'shops.csv')","e56ef1e4":"# items_df.drop('item_name', axis=1, inplace=True)","8012fddd":"print(train_df.shape, test_df.shape)","c5ab69e5":"train_df.head()","429fbe9a":"train_df['date'] = pd.to_datetime(train_df['date'], format='%d.%m.%Y')","008dbfe1":"# test set\u4e2d\u6709\u8cc7\u6599\u662f\u4e0d\u5728train set\u7684\uff0c\u731c\u6e2ctest set\u8cc7\u6599\u5ba4\u7528generator\u7522\u751f\u7684\n# \u6240\u4ee5\u90a3\u4e9b\u6c92\u51fa\u73fe\u904e\u7684input\u5c31\u88dc0\u5c31\u597d\ndataset = train_df.pivot_table(index=['item_id', 'shop_id'],values=['item_cnt_day'], columns='date_block_num', fill_value=0)","7c07dceb":"dataset = dataset.reset_index()\ndataset.head()","773c53d7":"dataset = pd.merge(test_df, dataset, on=['item_id', 'shop_id'], how='left')\ndataset = dataset.fillna(0)\ndataset.head()","391b6d7a":"dataset = dataset.drop(['shop_id', 'item_id', 'ID'], axis=1)\ndataset.head()","f84de982":"X_train = np.expand_dims(dataset.values[:, :-1], axis=2)\ny_train = dataset.values[:, -1:]\n\nX_test = np.expand_dims(dataset.values[:, 1:], axis=2)\nprint(X_train.shape, y_train.shape, X_test.shape)","48be56b7":"from keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout","9de87cfe":"model = Sequential()\nmodel.add(LSTM(units=64, input_shape=(33, 1)))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1))\n\nmodel.compile(loss='mse',\n              optimizer='adam',\n              metrics=['mean_squared_error'])\nmodel.summary()","97c41377":"history = model.fit(X_train, y_train, batch_size=4096, epochs=10)","82ce23fd":"plt.plot(history.history['loss'], label= 'loss(mse)')\nplt.plot(np.sqrt(history.history['mean_squared_error']), label= 'rmse')\nplt.legend(loc=1)","2328ac65":"LSTM_prediction = model.predict(X_test)","d0404d6d":"LSTM_prediction = LSTM_prediction.clip(0, 20)","ee8bdff2":"submission = pd.DataFrame({'ID': test_df['ID'], 'item_cnt_month': LSTM_prediction.ravel()})\nsubmission.to_csv('submission.csv',index=False)","f10e2333":"'''\n# check first data in test.csv\ncheck_df = dataset_df[(dataset_df['shop_id']==5) & (dataset_df['item_id']==5037)]\n# check_df.plot('date_block_num', 'item_cnt_month')\nfig, [ax1, ax2] = plt.subplots(1, 2)\nfig.set_size_inches(12, 4)\ng = sns.factorplot(x='date_block_num', y='item_cnt_month', data=check_df, ax=ax1)\nplt.close(g.fig)\ng = sns.factorplot(x='date_block_num', y='item_price_month', data=check_df, ax=ax2)\nplt.close(g.fig)\n'''","5c72fc48":"## LSTM","717e170e":"reference: https:\/\/www.kaggle.com\/kcbighuge\/predicting-sales-with-a-nested-lstm"}}