{"cell_type":{"945ef651":"code","2bde0203":"code","07edb061":"code","c5baa2d9":"code","c5de12c9":"code","f8ba0810":"code","2890a602":"code","466b1f54":"code","d5d57d5f":"code","d205d811":"code","87d7f8f0":"code","97533329":"code","569b43d4":"code","3fe8e048":"code","d544b4f2":"code","37314aa2":"code","138fbe1b":"code","0727dfb4":"code","b066ce48":"code","45fab84c":"code","b74ae219":"code","9fd434d8":"code","d60624fa":"code","7af18815":"code","2c1ace7c":"code","d5f61d11":"code","baa72607":"code","778fdb38":"code","5d8b7dcb":"code","b180917c":"code","a6944733":"code","6fdb0abb":"code","bf9bc01a":"code","6aff449f":"code","7d05cb04":"code","06673beb":"code","816dbd3d":"code","08f9980f":"code","d6e47b69":"code","37cfeaac":"code","76d191f6":"code","a4a83e60":"code","1f24bf3d":"code","f1fa864f":"code","1afcaf39":"code","09a789e7":"code","151168c2":"code","0d52e089":"code","4d81c5d0":"code","508e8bd5":"code","a44fb77f":"code","bfc97dab":"code","beb16cdd":"code","b8f22998":"code","cc135211":"code","d234ec50":"code","3ce2720e":"code","f879f185":"code","9649ce0e":"code","d1d49bdf":"code","613f517e":"code","c649aa69":"code","b2e9d7ac":"code","31b2331e":"code","9ba79abd":"code","bb0d9536":"code","790d9a4b":"code","a24677a7":"code","458dde10":"code","a3f40dc8":"code","13b0ee5a":"code","b5f4cd0e":"code","10390a5a":"code","9311fe9b":"code","70a8fd0d":"code","b6d2c02a":"code","4f271393":"code","73a1a4bf":"markdown","592939df":"markdown","c87ae2d7":"markdown","38f0a006":"markdown"},"source":{"945ef651":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","2bde0203":"movies_frame = pd.read_csv('..\/input\/the-movies-dataset\/movies_metadata.csv', header = 0, low_memory = False)","07edb061":"pd.set_option('display.max_columns', None)\nmovies_frame.head()","c5baa2d9":"columns = ['budget', 'genres', 'id', 'popularity', 'production_companies', 'release_date', 'revenue', 'runtime',\n          'title']","c5de12c9":"movies_frame = movies_frame[columns]","f8ba0810":"movies_frame.head()","2890a602":"movies_frame.info()","466b1f54":"#Handle missing values in all columns |\n## Handle data types (this is new task) |\n#Round popularity with 2 points |\n#Extract production name from col |\n#Rename 'id' col to 'movieId'\n#Keep only ralease year or better add new col with only realease year |\n#Divide reveune to mln |\n#Divide budget to mln |\n#Check all column values |\n#Extract generes","d5d57d5f":"#for the sake of convenience\ndf = movies_frame.copy()","d205d811":"del movies_frame","87d7f8f0":"#Handle missing values in all columns","97533329":"df.info()","569b43d4":"df.dropna(inplace = True)","3fe8e048":"df.info()","d544b4f2":"#Budget should be int of float","37314aa2":"df.loc[df['budget'].str.contains(r'\\D') == True]\n#checking if there is any row containing non digit","138fbe1b":"df['budget'] = pd.to_numeric(df['budget'])","0727dfb4":"df['budget'].dtype","b066ce48":"#'Id' should be numeric int\ndf.loc[df['id'].str.contains(r'\\D') == True]","45fab84c":"df['id'] = pd.to_numeric(df['id'])","b74ae219":"df['id'].dtype","9fd434d8":"#'popularity' too\ndf.loc[df['popularity'].str.contains(r'\\d') == False]","d60624fa":"df['popularity'] = pd.to_numeric(df['popularity'])","7af18815":"df.popularity.dtype","2c1ace7c":"#And I'll round it\ndf['popularity'] = df['popularity'].round()","d5f61d11":"df['popularity'].iloc[:5]","baa72607":"#I'll check 'revenue' and 'runtime' for some strange values","778fdb38":"df.loc[df['revenue'].apply(lambda x: True if r'D' in str(x) else False) == True]","5d8b7dcb":"df.loc[df['runtime'].apply(lambda x: True if r'D' in str(x) else False) == True]","b180917c":"df.info()","a6944733":"#I have finished with numeric features","6fdb0abb":"#As 'title' is the only col I'll not work with later, I'll change only it`s type\n#Other object cols I'll manage later","bf9bc01a":"df['title'] = df['title'].apply(str)","6aff449f":"df.loc[df['title'].apply(lambda x: True if x.isdigit() else False) == True]","7d05cb04":"#As we can see there is some titles which contains only digits, that is a little bit strange, but it can be. So I`ll keep them\n#for further EDA\n#I noticed another interesting detail, there are some films with 0 budget and 0 revenue. I'll keep this in my mind during EDA","06673beb":"#Extract production name from col","816dbd3d":"#Definitly there are a lot of companies in the world, so I'll make from this col something like categorical feature\n#with some most popular studios","08f9980f":"df['production_companies'].value_counts(ascending = False).iloc[:20]","d6e47b69":"#Most popular studios\nstudios = ['Metro-Goldwyn-Mayer (MGM)', 'Warner Bros.', 'Paramount Pictures', 'Twentieth Century Fox Film Corporation',\n          'Universal Pictures']","37cfeaac":"for studio in studios:\n    df['production_companies'] = df['production_companies'].apply(lambda x: studio\n                                                              if studio in x else x)","76d191f6":"df['production_companies'] = df['production_companies'].apply(lambda x: 'other' if x not in studios else x) ","a4a83e60":"df['production_companies'].value_counts()","1f24bf3d":"#Rename 'id' col to 'movieId'","f1fa864f":"df.rename(columns = {'id': 'movieId'}, inplace = True)","1afcaf39":"#Keep only release year or better add new col with only realease year","09a789e7":"df['release_year'] = df['release_date'].apply(lambda x: str(x)[:4])","151168c2":"df['release_year'].iloc[:5]","0d52e089":"#Change release date to datetime","4d81c5d0":"df['release_date'] = pd.to_datetime(df['release_date'], format = '%Y-%m-%d')","508e8bd5":"df.dtypes","a44fb77f":"#Divide revenue to mln\n#Divide budget to mln","bfc97dab":"df['revenue'] = df['revenue'].div(1000000)","beb16cdd":"df['budget'] = df['budget'].div(1000000)","b8f22998":"#Check all column values","cc135211":"#I think this is more like an EDA task so I'll leave this for later","d234ec50":"df.info()","3ce2720e":"#Extract generes","f879f185":"df.head()","9649ce0e":"test_df = df.copy()","d1d49bdf":"test_df['genres'] = test_df['genres'].str.replace(\"'id'\", '')\ntest_df['genres'] = test_df['genres'].str.replace(\"'name'\", '')\ntest_df['genres'] = test_df['genres'].str.replace(\":\", '')\ntest_df['genres'] = test_df['genres'].str.replace(\"\\d\", '')\ntest_df['genres'] = test_df['genres'].str.replace(pat = ',', repl = '')\ntest_df['genres'] = test_df['genres'].str.replace(pat = '{', repl = '')\ntest_df['genres'] = test_df['genres'].str.replace(pat = '}', repl = '')","613f517e":"genres_df = test_df['genres'].str.split(pat = \"'\", expand = True)\ngenres_df.head()","c649aa69":"genres = genres_df[1].value_counts().index.copy()","b2e9d7ac":"#My final goal was to find out most popular genres","31b2331e":"del test_df\ndel genres_df","9ba79abd":"for genre in genres:\n    df[genre] = df['genres'].apply(lambda x: 1 if genre in x else 0)","bb0d9536":"#df.head()","790d9a4b":"df.drop(columns = ['genres'], inplace = True)","a24677a7":"df.head()","458dde10":"df.info()","a3f40dc8":"df['release_year'] = pd.to_numeric(df['release_year'])\n#Will be more easy to work with int rather than with datetime\n#*Surely I understand that datetime will work faster, but in this dataset it is not significant","13b0ee5a":"df['release_year'].dtype","b5f4cd0e":"#There are two things I forgot\n#1) Check duplicates\n#2) Round 'revenue' and 'budget'","10390a5a":"#2) Round 'revenue' and 'budget'\ndf['revenue'] = df['revenue'].round(2)","9311fe9b":"df['budget'] = df['budget'].round(2)","70a8fd0d":"#1) Check duplicates","b6d2c02a":"df.drop_duplicates(keep = 'first', inplace = True)","4f271393":"#df.to_csv(r'C:\\Users\\Gev\\Desktop\\Data science\\Movies\\EDA\\EDA_data.csv')","73a1a4bf":"### This is ETL of the movies dataset which I want to use in EDA for my resume\n\n#### Original data:\nhttps:\/\/www.kaggle.com\/rounakbanik\/the-movies-dataset","592939df":"### Lets start with tO_Do list:","c87ae2d7":"### Actually, this is all I wanted to do with this data in ETL phase. In case I forgot something I'll add that below","38f0a006":"#### As we can see there are also missing values in almost all colums so I'll just drop this rows \n##### *This part of code I seccessfuly deleted :\/ "}}