{"cell_type":{"6b791ed2":"code","4568c868":"code","bb48c23e":"code","2f50c3d4":"code","733a3e5e":"code","c80399c7":"code","ce2e03a2":"code","c97ba1c6":"code","8110c427":"code","618efe03":"code","da398f38":"code","f5d8b289":"code","5c613944":"code","3b54f818":"code","2c74f8e3":"code","cd386c3a":"code","cd037718":"code","d7c39a31":"code","8d7961cc":"code","29cccfe9":"code","222b0e27":"code","06cd6a3c":"code","342715b9":"code","5e406d76":"code","a552c513":"code","7238b1b9":"code","63a62aaa":"code","7cf46b89":"code","34896aa4":"code","2a1cea7a":"code","a4e5fd71":"code","8e34fd9c":"code","fde62dd4":"code","1bf70492":"code","0c358d17":"code","534049a4":"code","46ae87a5":"code","5e98a82d":"code","cb5a6966":"code","dddfc7c1":"code","460e0836":"code","cadc0c93":"code","d99e9f61":"code","2839d08b":"code","cbdda809":"code","8edead6c":"code","a2736284":"code","e4a42d54":"code","355bba6a":"code","13a031ab":"markdown","39653af5":"markdown","5460b59f":"markdown","daa7e5f2":"markdown","5696e1fa":"markdown","6745fbdf":"markdown","ef54e9ef":"markdown"},"source":{"6b791ed2":"#Importing libraries for data cleaning and analysis\nimport pandas as pd\nimport numpy as np\nimport math\nimport scipy.stats as stats\n\n#Libraries for data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n#Libraries for plotting geographic data\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport folium","4568c868":"#Reading in the demographic data of each public school in New York City into a pandas DataFrame\ndemo = pd.read_csv('..\/input\/2013_-_2018_Demographic_Snapshot_School.csv')\ndemo.info()","bb48c23e":"#Dropping the columns specifying the enrollment per grade since enrollment and the percentage of students absent will be aggregated by school\ndemo.drop(labels=['Grade PK (Half Day & Full Day)','Grade K', 'Grade 1', 'Grade 2',\n       'Grade 3', 'Grade 4', 'Grade 5', 'Grade 6', 'Grade 7', 'Grade 8',\n       'Grade 9', 'Grade 10', 'Grade 11', 'Grade 12'], axis=1, inplace=True)\ndemo.columns","2f50c3d4":"demo.head(5)","733a3e5e":"#Parsing the first two digits of the DBN to find the school district of each school\ndemo['School District'] = demo['DBN'].str.slice(0, 2)","c80399c7":"#Getting rid of the leading 0 for each school district number to better match how school districts are labeled in a later GeoJSON file\ndef leadingZero(row):\n    if row[0] == '0':\n        return row[1:]\n    else:\n        return row\n\ndemo['School District'] = demo['School District'].apply(leadingZero)\ndemo['School District'].value_counts().sort_values()","ce2e03a2":"#Deleting the rows from the 2013-2014 school year because they do not contain data for Economic Need Index\ndemo = demo[demo['Year']!= '2013-14']\ndemo.shape","c97ba1c6":"#Converting the string values of the Economic Need Index into a float64 object\ndemo['Economic Need Index'] = demo['Economic Need Index'].str.rstrip('%').astype('float') \/ 100.0","8110c427":"#Average Economic Need Index of all NYC schools from 2014-2018\ndemo['Economic Need Index'].describe()","618efe03":"demo['DBN'] = demo['DBN'].astype(str)","da398f38":"#Importing json overlay of geographic boundaries of NYC school districts\nimport json\ngeo_json_data = json.load(open('..\/input\/School Districts.geojson'))","f5d8b289":"#Creating a folium map object to overlay the NYC School District GeoJSON file\nsdENI = folium.Map(location=[40.652922, -73.984353], \n                    zoom_start=9.5, tiles='Cartodb Positron')\n\n#Creating a choropleth folium map\nfolium.Choropleth(geo_data = geo_json_data,  \n              data = demo.groupby('School District').mean().reset_index(),\n              columns = ['School District', 'Economic Need Index'],\n              key_on = 'feature.properties.school_dist',\n              fill_color = 'YlOrRd', \n              fill_opacity = 0.6, \n              line_opacity = 0.2,\n              legend_name = 'Economic Need Index').add_to(sdENI)\nsdENI.save(outfile='sdENI.html')\nfrom IPython.display import IFrame\nIFrame('sdENI.html', width=500, height=550)","5c613944":"#Creating a dataframe with the aggregated demographic information for each school\ndemoGrouped = demo.groupby('DBN').sum().loc(axis=1)['Total Enrollment', '# Female', '# Male', '# Asian', '# Black', '# Hispanic',\n       '# Multiple Race Categories Not Represented',\n       '# White',\n       '# Students with Disabilities',\n       '# English Language Learners',\n       '# Poverty']\n\n#Finding out what proportion of each school's enrollment\ndemoList = ['# Female', '# Male', '# Asian', '# Black', '# Hispanic',\n       '# Multiple Race Categories Not Represented',\n       '# White',\n       '# Students with Disabilities',\n       '# English Language Learners',\n       '# Poverty']\n\ndemoProportion  = pd.DataFrame()\n\n#Making a dataframe of the proportion for each statistic rather than the \nfor demoColumn in demoList:\n    demoProportion['%'+ demoColumn.lstrip('#')] = demoGrouped[demoColumn]\/demoGrouped['Total Enrollment']\n\n#Creating an additional column summarizing the percentage of black and hispanic students for each school    \ndemoProportion['% Black\/Hispanic'] = demoProportion['% Black'] + demoProportion['% Hispanic']\ndemoProportion.head(5)\n\ndemoProportion","3b54f818":"#The New York Department of Educaiton defines a racially representative school as one where Black and Hispanic Students make up >50% of students\n\n#Creating a function to identify racially representative schools in the dataframe\ndef racially_diverse(row):\n    if row['% Black\/Hispanic'] >= 0.50:\n        return'Yes'\n    else:\n       return'No'\n\ndemoProportion['Racially Representative?'] = demoProportion.apply(racially_diverse, axis=1)\ndemoProportion.head(5)","2c74f8e3":"demoProportion['Racially Representative?'].value_counts()","cd386c3a":"demo.set_index('DBN', inplace=True)","cd037718":"#Aggregating the demographic information by school district\ndemoDistricts = demoProportion.join(demo.loc(axis=1)['School District'])\ndemoDistricts.groupby('School District').mean().reset_index()","d7c39a31":"#Creating a folium map object to overlay the NYC School District GeoJSON file\nsdRace = folium.Map(location=[40.652922, -73.984353], \n                    zoom_start=9.5, tiles='Cartodb Positron')\n\n#Creating a choropleth folium map\nfolium.Choropleth(geo_data = geo_json_data,  \n              data = demoDistricts.groupby('School District').mean().reset_index(),\n              columns = ['School District', '% Black\/Hispanic'],\n              key_on = 'feature.properties.school_dist',\n              fill_color = 'YlOrRd', \n              fill_opacity = 0.6, \n              line_opacity = 0.2,\n              legend_name = '% Black\/Hispanic').add_to(sdRace)\nsdRace.save(outfile='sdRace.html')\nIFrame('sdRace.html', width=500, height=550)","8d7961cc":"#Creating seperate dataframes by year for hypothesis testing and plotting\n\n#'2014-15'\ndemo2014 = demo[demo['Year'] == '2014-15']\n\n#'2015-16'\ndemo2015 = demo[demo['Year'] == '2015-16']\n\n#'2016-17'\ndemo2016 = demo[demo['Year'] == '2016-17']\n\n#'2017-18'\ndemo2017 = demo[demo['Year'] == '2017-18']","29cccfe9":"#Plotting the distribution of Economic Need Index by school year\nfig4, ax10 = plt.subplots()\n\n#Making a list of the dataframes\ndataframes = [demo2014, demo2015, demo2016, demo2017]\n\nplt.rcParams['patch.edgecolor'] = 'black'\nfor dataframe in dataframes:\n    sns.distplot(dataframe['Economic Need Index'], kde = False, ax = ax10, label = dataframe['Year'])\nax10.legend()\n","222b0e27":"#Graph of ENI over time with confidence intervals\nimport math\nimport scipy.stats as stats\n\n#Making a list of the school years\nschoolYears = ['2014-15','2015-16','2016-17','2017-18']\n\n#Previously defined list of demographic dataframes\ndataframes = [demo2014, demo2015, demo2016, demo2017]\n\nsample_means = []\nintervals = []\n\nfor dataframe in dataframes:\n    sample_size = len(dataframe['Economic Need Index'])\n    sample_mean = dataframe['Economic Need Index'].mean()\n    sample_means.append(sample_mean)\n\n    z_critical = stats.norm.ppf(q = 0.975)  # Get the z-critical value*         \n\n    pop_stdev = dataframe['Economic Need Index'].std()  # Get the population standard deviation\n\n\n    margin_of_error = z_critical * (pop_stdev\/math.sqrt(sample_size))\n\n    confidence_interval = (sample_mean - margin_of_error,\n                           sample_mean + margin_of_error)  \n    \n    intervals.append(confidence_interval)","06cd6a3c":"#Plotting the 95% confidence interval for each school year's ENI\nfig3 , ax3 = plt.subplots(figsize=(4,4))\nplt.style.use('ggplot')\nplt.errorbar(x=schoolYears, \n             y=sample_means, \n             yerr=[(top-bot)\/2 for top,bot in intervals],\n             capsize=15)\n\nax3.set_xlabel('School Year', fontsize=13)\nax3.set_ylabel('Mean', fontsize=13)","342715b9":"demo2016.reset_index(inplace=True)\ndemo2017.reset_index(inplace=True)","5e406d76":"demo2017['DBN'] = demo2017['DBN'].astype(str)\ndemo2016['DBN'] = demo2016['DBN'].astype(str)","a552c513":"#Inner join on 2016 and 2017 dataframes to allow for a pairwise difference of means testing\ndemoTest = pd.merge(demo2016, demo2017, how='inner', on='DBN', suffixes=('_2016', '_2017'))\ndemoTest.info()","7238b1b9":"demoTest['Economic Need Index_2016'].describe()","63a62aaa":"demoTest['Economic Need Index_2017'].describe()","7cf46b89":"#Hypothesis Testing of mean ENI recent year vs last year\nstats.ttest_rel(a = demoTest['Economic Need Index_2016'],\n                b = demoTest['Economic Need Index_2017'])","34896aa4":"#Plotting the distribution of the proportion of students in poverty for those schools that are racially representative and those that aren't\nfig4, ax7 = plt.subplots()\ndemoProportion[demoProportion['Racially Representative?']=='Yes']['% Poverty'].hist(label='Diverse', ax=ax7, edgecolor='black')\ndemoProportion[demoProportion['Racially Representative?']=='No']['% Poverty'].hist(label='Not Diverse', ax=ax7, edgecolor='black')\n\nplt.legend()","2a1cea7a":"#Boxplot of the '% Poverty'  between Racially Representative vs Non Racially Representative Schools\nsns.boxplot(x='Racially Representative?', y='% Poverty', data=demoProportion)","a4e5fd71":"#Reading in 2017 Attendance Data\natt2017 = pd.read_csv('..\/input\/2017-2018_Monthly_Attendance.csv')\nattFinal = att2017.groupby('School').sum()\nattFinal['Total']= attFinal['Absent'] + attFinal['Present']\nattFinal['Percentage Absent'] = attFinal['Absent']\/attFinal['Total']\nattFinal","8e34fd9c":"#Distirbution of Absent Rate\nattFinal['Percentage Absent'].hist(bins=50, edgecolor='black')","fde62dd4":"#Joining the dataframe with attendance records with the dataframe of the demographics of each school\ndemoAbsent = demo.reset_index().rename(columns={'DBN':'School'}).join(attFinal['Percentage Absent'], on='School').groupby('School').mean()\ndemoAbsent","1bf70492":"demoAbsent['Percentage Absent'].describe()","0c358d17":"#Economically Stratified is an ENI over .774657\ndemoStratified = demoAbsent[demoAbsent['Economic Need Index'] >= 0.774657]\ndemoNorm = demoAbsent[demoAbsent['Economic Need Index'] < 0.774657]\ndemoNorm.head(5)","534049a4":"demoNorm = demoNorm[demoNorm['Percentage Absent'].notnull()]\ndemoNorm['Percentage Absent'].describe()","46ae87a5":"demoStratified = demoStratified[demoStratified['Percentage Absent'].notnull()]\ndemoStratified['Percentage Absent'].describe()","5e98a82d":"demoNorm['Percentage Absent'].hist(bins=50, edgecolor='black', label='Norm', alpha=0.6)\ndemoStratified['Percentage Absent'].hist(bins=50, edgecolor='black', label='Strat',alpha=0.6)\nplt.legend()","cb5a6966":"stats.ttest_ind(a= demoNorm['Percentage Absent'],\n                b= demoStratified['Percentage Absent'],\n                equal_var=False)    # Assume samples have equal variance?","dddfc7c1":"#Attendance of racially diverse schools (Hypothesis Test)\n#Do schools with >50% hispanic and latino students have the same attendance as population\n\ndemoProportion = demoProportion.join(demoAbsent['Percentage Absent'])\ndemoProportion","460e0836":"demoDiverse = demoProportion[demoProportion['% Black\/Hispanic'] >= 0.50]\ndemoNotDiverse = demoProportion[demoProportion['% Black\/Hispanic'] < 0.50]","cadc0c93":"demoDiverse['Percentage Absent'].describe()","d99e9f61":"demoNotDiverse['Percentage Absent'].describe()","2839d08b":"demoNotDiverse['Percentage Absent'].hist(bins=30, edgecolor='black', label='Not Diverse',alpha=0.9)\ndemoDiverse['Percentage Absent'].hist(bins=30, edgecolor='black', label='Diverse',alpha=0.3)\nplt.legend()","cbdda809":"#Confidence Intervals\nimport math\n\ndataframes = [demoNotDiverse, demoDiverse]\ncategoryList = ['Not Diverse', 'Diverse']\nsample_means2 = []\nintervals2 = []\n\nfor dataframe in dataframes:\n    sample_size = len(dataframe['Percentage Absent'])\n    sample_mean = dataframe['Percentage Absent'].mean()\n    sample_means2.append(sample_mean)\n\n    z_critical = stats.norm.ppf(q = 0.975)  # Get the z-critical value*         \n\n    pop_stdev = dataframe['Percentage Absent'].std()  # Get the population standard deviation\n\n\n    margin_of_error = z_critical * (pop_stdev\/math.sqrt(sample_size))\n\n    confidence_interval = (sample_mean - margin_of_error,\n                           sample_mean + margin_of_error)  \n    \n    intervals2.append(confidence_interval)","8edead6c":"#Plotting the 95% confidence for each school year's ENI\nfig5 , ax11 = plt.subplots(figsize=(4,8))\nplt.style.use('ggplot')\nplt.errorbar(x=categoryList, \n             y=sample_means2, \n             yerr=[(top-bot)\/2 for top, bot in intervals2],\n             capsize=30)\n\nax11.set_xlabel('Diverse?', fontsize=13)\nax11.set_ylabel('Mean', fontsize=13)","a2736284":"stats.ttest_ind(a= demoNotDiverse['Percentage Absent'],\n                b= demoDiverse['Percentage Absent'],\n                equal_var=False,\n               nan_policy = 'omit')    # Assume samples have equal variance?","e4a42d54":"sdAttDf = demoAbsent.join(demo['School District']).groupby('School District').mean().reset_index()\nsdAttDf.head(5)","355bba6a":"#Creating a folium map object to overlay the NYC School District GeoJSON file\nsdAtt = folium.Map(location=[40.652922, -73.984353], \n                    zoom_start=9.5, tiles='Cartodb Positron')\n\n#Creating a choropleth folium map\nfolium.Choropleth(geo_data = geo_json_data,  \n              data = sdAttDf,\n              columns = ['School District', 'Percentage Absent'],\n              key_on = 'feature.properties.school_dist',\n              fill_color = 'YlOrRd', \n              fill_opacity = 0.6, \n              line_opacity = 0.2,\n              legend_name = 'Percentage Absent').add_to(sdAtt)\nsdAtt.save(outfile='sdAtt.html')\nIFrame('sdAtt.html', width=500, height=550)","13a031ab":"Interpretation of T-Test","39653af5":"Interpretation of the Paired T-Test:\n\nThe p value is extremely small. At a 95% confidence interval, the null hypothesis is rejected. We accept the     alternative hypothesis that there is a statistically significant difference between the Economic Need Index for the 2016-17 school year and the 2017-18 school year.\n\nThe mean ENI for 2017-18 was 10% higher than the ENI for 2016-17. Students in NYC public schools are 10% more likely to be in poverty than in 2016. Over 100,000 students.","5460b59f":"Interpretation of T-Test\n\nThe p-value is signficantly lower than 0.05 and the null hypothesis that the percentage of absent students were the same for schools with <50% black and hispanic students and those with > 50% black and hispanic students.\n\nAttendance is 6% lower for schools with a racially representative student body.","daa7e5f2":"Conducting an a paired t-test to see if the 'Economic Need Index' differs between 2016-2017\n\nA one tailed t-test will be used\n\nHo = The mean of Economic Need Index is the same across each year.\n\nHa: At least one mean is different.","5696e1fa":"Defining Economic Need Index\n\nA school\u2019s 'Economic Need Index' (ENI) determines the likelihood that students at the school are in poverty.\n\nThe ENI is calculated as follows:\n\n- If the student is HRA-eligible or living in temporary housing, the student\u2019s Economic Need Value is 1.0. \n- For high school students, if the student has a home language other than English and entered the NYC DOE for the first time within the last four years, the student\u2019s ENI value is 1.0. \n    - Otherwise, the student\u2019s Economic Need Value is based on the percentage of families (with school-age children) in the student\u2019s census tract whose income is below the poverty level, as estimated by the American Community Survey 5-Year Estimate.\nThe student\u2019s Economic Need Value equals the decimal value of this percentage (e.g., if 62% of families in the census tract have income below the poverty line,the student\u2019s Economic Need Value is 0.62). The school\u2019s Economic Need Index is the average of its students\u2019 Economic Need Values\n\nSOURCE: https:\/\/www.schools.nyc.gov\/docs\/default-source\/default-document-library\/diversity-in-new-york-city-public-schools-english","6745fbdf":"The following is an exploratory data analysis with descriptive statistics of open source data posted by the New York City Department of Education.\n\n\n\n**Data Sources:**\n\nEnrollment and Demographics by School: https:\/\/data.cityofnewyork.us\/Education\/2013-2018-Demographic-Snapshot-School\/s52a-8aq6\nAttendance Data by School: https:\/\/data.cityofnewyork.us\/Education\/2017-2018-Current-Year-Monthly-Attendance\/7u63-ib3x\nSchool District GeoJson File: https:\/\/data.cityofnewyork.us\/Education\/School-Districts\/r8nu-ymqj","ef54e9ef":"ECONOMICALLY STRATIFIED \nHow do we define economically stratified? We consider a school to be economically stratified if its economic need as measured by the Economic Need Index1 is more than 10 percentage points from the citywide average. A school can be stratified in either direction \u2013 by serving more low-income or more high-income children. 70.6% of schools are economically stratified today."}}