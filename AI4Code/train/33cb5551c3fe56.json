{"cell_type":{"261e512e":"code","0a5658bb":"code","f515177a":"code","99167ad0":"code","cc924e25":"code","a87c42c2":"code","7fb95d03":"code","79cbb102":"code","f129c517":"markdown","2c2461b2":"markdown","e6358d95":"markdown","0a103f8b":"markdown","0f472992":"markdown","e538683b":"markdown"},"source":{"261e512e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n","0a5658bb":"data = pd.read_csv(\"http:\/\/www-bcf.usc.edu\/~gareth\/ISL\/Advertising.csv\", index_col = 0)","f515177a":"data.head()","99167ad0":"data.shape","cc924e25":"#visualize the relationship between the features and the response using scatterplots\nsns.pairplot(data,x_vars = ['TV', 'radio','newspaper'], y_vars = 'sales', size = 7,\n            aspect = 0.7)","a87c42c2":"### SCIKIT-LEARN ###\n\n# create X and y\nfeature_cols = ['TV']\nX = data[feature_cols]\ny = data.sales\n\n# instantiate and fit\nlm2 = LinearRegression()\nlm2.fit(X, y)\n\n# print the coefficients\nprint(lm2.intercept_)\nprint(lm2.coef_)","7fb95d03":"# There was a spendation of $50.000 in a market what would the expected sales.\n\nlm2.predict([[50]])","79cbb102":"sns.pairplot(data, x_vars=['TV','radio','newspaper'],\n             y_vars='sales',\n             size=7, aspect=0.7, kind='reg')","f129c517":"* Low variance \/ high bias\n* Under repeated sampling, the line will stay roughly in the same place (low variance).\n    * But the average of those models won't do a great job capturing the true relationship\n    (high bias).\n* Note that low variance is a useful characteristics when you don't have a lot of training data.\n\nA closely related concept is **confidence intervals**\n* Statsmodels calculates 95% confidence intervals for our model coefficients , which are interpreted as follows:\n    * if the population from which this sample was drawn was **sampled 100 times**\n    * Approximately **95 of those confidence intervals** would contain \"true\" coefficients","2c2461b2":"##### STATSMODELS ###\n\n##### create a fitted model\nlm1 = smf.ols(formula='Sales ~ TV', data=data).fit()\n\n##### print the coefficients\nlm1.params","e6358d95":"# Simple Linear Regression\n\n* It is an approach for predicting a quantitative response using a single feature (or\"predictor\" or \"input variable\")\n\n* $y = \\beta_{0} + \\beta_{1}x$\n\n* y is the respose\n* x is the feature\n* $\\beta_{0}$ is the intercept\n* $\\beta_{1}$ is the coefficient for x\n* $\\beta_{0}$ and $\\beta_{1}$  are the **model coefficients**","0a103f8b":"Regression problems are supervised learning problems in which the response is continuous.","0f472992":"A \"unit\" increase in TV ad spending is **associated with** a 0.047537 \"unit\" increase in Sales.\n\nOr, An additional $1,000 spent on TV ads is **associated with** an increase in sales of 47.537 widgets.","e538683b":"# Linear Regression"}}