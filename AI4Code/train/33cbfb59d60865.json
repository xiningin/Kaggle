{"cell_type":{"ed37f35f":"code","2d5630a7":"code","c20c882e":"code","57a1ac68":"code","3beadc87":"code","5eb75760":"code","cda4b7bf":"code","4b7d4b28":"code","2a60f00a":"code","3adfe064":"code","24ac8640":"code","115347f4":"code","60b8b821":"code","f61c626f":"code","ae99f465":"code","6620c2ad":"code","feb4d2f1":"code","a7fd42bc":"code","086caff4":"markdown","319f3bb3":"markdown","0302966b":"markdown","b8b2a9ba":"markdown","54056112":"markdown","b807d75c":"markdown","4ccb1632":"markdown","6faee4fe":"markdown"},"source":{"ed37f35f":"import pandas as pd\nimport numpy as np","2d5630a7":"import matplotlib.pyplot as plt\nimport seaborn as sns","c20c882e":"student = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\nstudent.head()","57a1ac68":"columns1={'gender':'gender','race\/ethnicity':'race','parental level of education':'parent_ed_level'\n          ,'lunch':'lunch_type','test preparation course':'test_prep','math score':'math'\n          ,'reading score':'reading','writing score':'writing'}\nstudent.rename(columns=columns1,inplace=True)\nstudent","3beadc87":"sns.heatmap(student.isnull())\nplt.show()\nprint(student.shape, \"\\n\")\n\nplt.show()","5eb75760":"print('row :', student.shape[0])\nprint('column :', student.shape[1])\nprint(student.info(),'\\n')","cda4b7bf":"student['total']=student['math']+student['reading']+student['writing']\nstudent['avg']= (student['math']+student['reading']+student['writing'])\/3\nstudent","4b7d4b28":"student['parent_ed_level']=student['parent_ed_level'].replace(['some high school'],'high school')","2a60f00a":"fig, ax = plt.subplots(1,3, figsize=(15,5))\nbasic_list=['gender','lunch_type','test_prep']\ntitle = ['Gender','Launch Type', 'Test Preparation']\nx = 0\nfor col in basic_list:\n    sns.set_style(\"dark\")\n    ax[x].set_title(title[x])\n    sns.color_palette(\"bright\")\n    sns.countplot(x=col,data=student, ax=ax[x])\n    x = x+1","3adfe064":"fig, ax = plt.subplots(2,1, figsize=(10,16))\nbasic1_list=['parent_ed_level','race']\ntitle = ['Parent Education', 'Race']\nx = 0\nfor col in basic1_list:\n    sns.set_style(\"dark\")\n    ax[x].set_title(title[x])\n    sns.countplot(x=col,data=student, ax=ax[x], hue=student['gender'], \n                  order = student[basic1_list[x]].value_counts().index)\n    x = x+1","24ac8640":"student","115347f4":"racescore = student.groupby('race').mean().sort_values(by='avg', ascending=False)\nracescore = racescore.drop(columns ='total')\nfig, ax = plt.subplots(1,2, figsize=(15,5))\nsns.heatmap(racescore, ax=ax[0])\n# diverging_colors = sns.color_palette(\"hls\", 8)\n# sns.set_palette(diverging_colors)\nsns.barplot(x=racescore['avg'], y=racescore.index, ax=ax[1])","60b8b821":"genderscore = student.groupby('gender').mean().sort_values(by='avg', ascending=False)\ngenderscore = genderscore.drop(columns ='total')\ngenderscore\n\nfig, ax = plt.subplots(2,2, figsize=(10,10))\nsns.barplot(x=genderscore.index, y=genderscore['avg'], ax=ax[0,0])\nax[0,0].set_title('Average')\nsns.barplot(x=genderscore.index, y=genderscore['math'], ax=ax[0,1])\nsns.barplot(x=genderscore.index, y=genderscore['writing'], ax=ax[1,0])\nsns.barplot(x=genderscore.index, y=genderscore['reading'], ax=ax[1,1])","f61c626f":"genderscore = student.groupby('gender').mean().sort_values(by='avg', ascending=False)\ngenderscore = genderscore.drop(columns ='total')\ngenderscore\n\nfig, ax = plt.subplots(2,2, figsize=(10,10))\nsns.barplot(x=genderscore.index, y=genderscore['avg'], ax=ax[0,0])\nax[0,0].set_title('Average Score')\nsns.barplot(x=genderscore.index, y=genderscore['math'], ax=ax[0,1])\nax[0,1].set_title('Math Score')\nsns.barplot(x=genderscore.index, y=genderscore['writing'], ax=ax[1,0])\nax[1,0].set_title('Writing Score')\nsns.barplot(x=genderscore.index, y=genderscore['reading'], ax=ax[1,1])\nax[1,1].set_title('Reading Score')","ae99f465":"rank = student.sort_values(by='avg', ascending=False).head(100)\nrank","6620c2ad":"fig, ax = plt.subplots(1,3, figsize=(15,5))\nbasic_list=['gender','lunch_type','test_prep']\ntitle = ['Gender','Launch Type', 'Test Preparation']\nx = 0\nfor col in basic_list:\n    sns.set_style(\"dark\")\n    ax[x].set_title(title[x])\n    sns.color_palette(\"bright\")\n    sns.countplot(x=col,data=rank, ax=ax[x])\n    x = x+1","feb4d2f1":"fig, ax = plt.subplots(1,2, figsize=(15,5))\nsns.countplot(x=rank['race'],data=rank, order=rank['race'].value_counts().index, ax=ax[0])\nax[0].set_title('Group Count for 100 top student')\nsns.countplot(x=rank['race'],data=rank, hue='gender' ,order=rank['race'].value_counts().index, ax=ax[1])\nax[1].set_title('Group Count for 100 top student (Gender)')","a7fd42bc":"plt.figure(figsize=(30,20))\nplt.subplots_adjust(left=0.125, bottom=0.1, right=0.9, top=0.9,\n                      wspace=0.5, hspace=0.2)\n\nplt.subplot(142)\nplt.title('Race',fontsize = 20)\nstudent['race'].value_counts().plot.pie(autopct=\"%1.1f%%\")","086caff4":"we want to know distribution of top 100 student","319f3bb3":"for these information we can know about data distribution for every table with gender as bonus variable","0302966b":"we can see female student have better average score","b8b2a9ba":"# basic information","54056112":"# top 100 student information","b807d75c":"# ADVANCE INFORMATION","4ccb1632":"after get some basic information. next we can go ahead to advanced information we can get. avg score from math,\nwriting and reading based on every variable(tables)","6faee4fe":"this because parent education level 'high school'and 'some high school' represent same level education. So we can make thats\nvalue as same value"}}