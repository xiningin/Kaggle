{"cell_type":{"d634aeef":"code","691c7982":"code","ee1f0ba2":"code","a1439e1d":"code","59d4160a":"markdown"},"source":{"d634aeef":"# importing the libraries.\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom sklearn.preprocessing import StandardScaler\nfrom math import sqrt\nimport itertools\n\nimport warnings\nwarnings.filterwarnings('ignore')","691c7982":"!pip install pmdarima","ee1f0ba2":"def predict_arima_model(train, period, order, maxlags=8, ic='aic'):\n    # Feature Scaling\n    stdsc = StandardScaler()\n    train_std = stdsc.fit_transform(train.values.reshape(-1, 1))\n    # fit model\n    model = ARIMA(train_std, order=order)\n    model_fit = model.fit(maxlags=maxlags, ic=ic, disp=0)\n    # make prediction\n    yhat = model_fit.predict(len(train), len(train) + period -1, typ='levels')\n    # inverse transform\n    yhat = stdsc.inverse_transform(np.array(yhat).flatten())\n    return yhat\n    \ndef make_future_dates(last_date, period):\n    prediction_dates=pd.date_range(last_date, periods=period+1, freq='B')\n    return prediction_dates[1:]\n\nimport pmdarima\ndef evaluate_arima(df):\n    best_model = pmdarima.auto_arima(df,                                    \n                                     seasonal=False, stationary=False, \n                                     m=7, information_criterion='aic', \n                                     max_order=20,                                     \n                                     max_p=10, max_d=2, max_q=10,                                     \n                                     max_P=10, max_D=2, max_Q=10,                                   \n                                     error_action='ignore')\n    print(\"best model --> (p, d, q):\", best_model.order)","a1439e1d":"# prepare dataset\ndata_org = pd.read_csv('..\/input\/ntt-data-global-ai-challenge-06-2020\/COVID-19_and_Price_dataset.csv',header=0,parse_dates=[0])\ndata=data_org[[\"Date\",\"Price\"]].tail(101)\ndata.set_index('Date',drop=True,inplace=True)\n\n# make diff\ndata['Price'] = data['Price'].diff()\ndata=data[1:]\n\n#evaluate_arima(data)\n\n# predict future period with best parameter\nforecast_out = 34\nfuture_dates = make_future_dates(data.index[-1], forecast_out)\npredictions = predict_arima_model(data,len(future_dates),(2, 1, 1))\nsubmission = pd.DataFrame({'Price':predictions},index=future_dates)\n\n# invert diff\nbase = data_org.tail(1)[\"Price\"]\nfor index, row in submission.iterrows():\n    base = base + row[\"Price\"]\n    submission.at[index, 'Price'] = base\n\n# submission file\nsubmission.index.name = \"Date\"\nsubmission.to_csv(\"submission.csv\", index=True)\n\nsubmission","59d4160a":"Thank you for your reading!"}}