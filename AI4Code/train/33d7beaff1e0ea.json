{"cell_type":{"65cc85eb":"code","73fe91f3":"code","0411bd99":"code","629062a7":"code","96d11af3":"code","1915700f":"code","40347dd7":"code","98ae6337":"code","31da7b04":"code","8d54b481":"code","7dae460f":"code","f20f7ae6":"code","e577df3e":"code","ba880ddf":"code","a8f56875":"code","ac529894":"code","0817c019":"code","b42816e3":"code","30e9ab0a":"code","38b247c8":"code","71e594fc":"code","29e9b2d5":"code","75c07534":"code","05dbd1f3":"code","f1bd3427":"code","d2009d28":"code","2d490195":"code","ef6d2397":"code","90dadbd6":"code","0efe453e":"code","1774e426":"code","c5bf1d3a":"code","41b94a22":"code","ff9329d2":"code","70fca34a":"code","ed8b038b":"code","8c965115":"code","74b06296":"code","a3e84e18":"code","d6ff6f9d":"code","502486a4":"code","0a7c939c":"markdown","6dfca666":"markdown","f178a7e3":"markdown","1dafeedb":"markdown","bdf6a643":"markdown","c06f4b53":"markdown","3d39b416":"markdown","bc99ad0c":"markdown","f53d336a":"markdown","c2e9ecde":"markdown","a41d5fc7":"markdown","ba91765e":"markdown","60cbc241":"markdown","449a98b1":"markdown","d6dd28bf":"markdown","73a681f5":"markdown","824fdb80":"markdown","82fe0786":"markdown","4ddda6db":"markdown","9bd6f1fd":"markdown","1751e8f0":"markdown","eeb8887a":"markdown","fc8f9f9c":"markdown","97792f11":"markdown","d1840b73":"markdown","28c6e99f":"markdown","4876f519":"markdown","93afd2d0":"markdown","0ede1ace":"markdown","8a5992b6":"markdown","c4ce093f":"markdown","0fd5a5fc":"markdown","3064dfe9":"markdown","24f70dcb":"markdown","877bfebe":"markdown","a99440a4":"markdown","af922b22":"markdown"},"source":{"65cc85eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","73fe91f3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.utils import shuffle","0411bd99":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain_copy = train.copy()\n\ntrain.head(10)","629062a7":"train.tail(10)","96d11af3":"#veri k\u00fcmesinden rastgele 10 verinin getirilmesi.\ntrain_sample = train.sample(10)\ntrain_sample","1915700f":"train.info()","40347dd7":"# NaN de\u011ferler hari\u00e7 bir veri k\u00fcmesinin da\u011f\u0131l\u0131m\u0131n\u0131n merkezi e\u011filimi, da\u011f\u0131l\u0131m\u0131, minimum ve maksimum ald\u0131\u011f\u0131 de\u011fer.  \ntrain_desc = train.describe().T\ntrain_desc","98ae6337":"#konut fiyatlar\u0131n\u0131n istatiksel \u00f6zeti\n\nsalePrice_desc = train['SalePrice'].describe().T\nsalePrice_desc ","31da7b04":"sns.distplot(train['SalePrice'])\nplt.ylabel('Frekans')\nplt.title('SalePrice Da\u011f\u0131l\u0131m\u0131')","8d54b481":"#\u00c7arp\u0131kl\u0131k ve bas\u0131kl\u0131k\n\nprint(\"\u00c7arp\u0131kl\u0131k: %f\" % train['SalePrice'].skew())\nprint(\"Bas\u0131kl\u0131k: %f\" % train['SalePrice'].kurt())","7dae460f":"# korelasyon matrisi\n\ncorrmat = train.corr()\ncorrmat","f20f7ae6":"# korelasyon matrisinin g\u00f6rselle\u015ftirilmesi\n\nplt.subplots(figsize=(15,12))\nsns.heatmap(corrmat, vmax=1, cmap=\"Blues\", square=True)","e577df3e":"#\"SalePrice\" ve di\u011fer konut \u00f6zelliklerinin korelasyon matrisinin olu\u015fturulmas\u0131\n\nsalePrice = train[\"SalePrice\"]\ncorr_salePrice = train.corrwith(salePrice, axis=0)\ncorr_salePrice = pd.DataFrame(corr_salePrice)\ncorr_salePrice.rename (columns = {0: 'SalePrice'}, inplace = True)\n\n#Olu\u015fturulan korelasyon matrisinin g\u00f6rselle\u015ftirilmesi\nplt.subplots(figsize=(15,12))\nsns.set(font_scale=1.1)\nsns.heatmap(corr_salePrice, vmax=1, cmap=\"Blues\",fmt='.4f',annot=True)","ba880ddf":"k = 10 # heatmap i\u00e7in de\u011fi\u015fken say\u0131s\u0131\ncols = corrmat.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values, cmap=\"Blues\")\nplt.show()","a8f56875":"#box plot overallqual\/saleprice\ndata = pd.concat([train['SalePrice'], train['OverallQual']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='OverallQual', y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000)","ac529894":"# YearBuild ve SalePrice boxlot\nplt.figure(figsize=(40,20))\nsns.set(font_scale=1.5)\nsns.boxplot(x='YearBuilt', y=\"SalePrice\", data=train)\nsns.swarmplot(x='YearBuilt', y=\"SalePrice\", data=train, color=\".25\")\nplt.xticks(weight='bold',rotation=90)","0817c019":"# TotalBsmtSF\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['TotalBsmtSF']], axis=1)\ndata.plot.scatter(x='TotalBsmtSF', y='SalePrice', ylim=(0,800000));","b42816e3":"#1stFlrSF\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['1stFlrSF']], axis=1)\ndata.plot.scatter(x='1stFlrSF', y='SalePrice', ylim=(0,800000));","30e9ab0a":"#GrLivArea\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['GrLivArea']], axis=1)\ndata.plot.scatter(x='GrLivArea', y='SalePrice', ylim=(0,800000));","38b247c8":"#FullBath\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['FullBath']], axis=1)\ndata.plot.scatter(x='FullBath', y='SalePrice', ylim=(0,800000));","71e594fc":"#TotRmsAbvGrd\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['TotRmsAbvGrd']], axis=1)\ndata.plot.scatter(x='TotRmsAbvGrd', y='SalePrice', ylim=(0,800000));","29e9b2d5":"#GarageCars\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['GarageCars']], axis=1)\ndata.plot.scatter(x='GarageCars', y='SalePrice', ylim=(0,800000));","75c07534":"#GarageArea\/salePrice Da\u011f\u0131l\u0131m Grafi\u011fi \n\ndata = pd.concat([train['SalePrice'], train['GarageArea']], axis=1)\ndata.plot.scatter(x='GarageArea', y='SalePrice', ylim=(0,800000));","05dbd1f3":"#scatterplot\nsns.set()\ncols = ['SalePrice', 'OverallQual', 'YearBuilt','1stFlrSF', 'TotalBsmtSF','GrLivArea' , 'TotRmsAbvGrd', 'FullBath',  'GarageCars', 'GarageArea']\nsns.pairplot(train[cols], height = 6.5)\nplt.show();","f1bd3427":"#scatterplot\nsns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(train[cols], size = 3.5)\nplt.show();","d2009d28":"total = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Toplam', 'Y\u00fczde'])\nmissing_data = missing_data\nmissing_data","2d490195":"# Eksik verilerin g\u00f6rselle\u015ftirilmesi\n\nf,ax = plt.subplots(figsize=(8, 7))\nmissing = round(train.isnull().mean(),2)\nmissing = missing[missing > 0]\nmissing.sort_values(inplace=True)\nmissing.plot.bar(color=\"b\")\n\nax.set(ylabel=\"Eksik de\u011ferlerin y\u00fczdesi\")\nax.set(xlabel=\"\u00d6zellikler\")\nax.set(title= \"\u00d6zelli\u011fe g\u00f6re eksik veri y\u00fczdesi\")\nsns.despine(trim=True, left=True)","ef6d2397":"missing_categorical_cols = [\"BsmtFinType2\",\"BsmtQual\",\"BsmtCond\",\"BsmtExposure\",\n                            \"BsmtFinType2\",\"GarageCond\", \"GarageQual\", \"GarageFinish\",\n                            \"GarageType\",\"LotFrontage\",\"FireplaceQu\",\"Fence\",\n                            \"Alley\", \"MiscFeature\", \"PoolQC\"]\n\nfor col in missing_categorical_cols:\n    col = train[col]\n    for index in range(col.size):\n        if col[index] is np.nan:\n           col[index]= \"None\"\n        else:\n            continue","90dadbd6":"garageYrBlt = train[\"GarageYrBlt\"]\nfor index in range(garageYrBlt.size):\n    if np.isnan(garageYrBlt[index]):\n        garageYrBlt[index] = 0.0\n    else:\n        continue\n        ","0efe453e":"mean_f = SimpleImputer(missing_values = np.nan, strategy=\"most_frequent\")\ntrain['BsmtFinType1'] = mean_f.fit_transform(train[['BsmtFinType1']])","1774e426":"mean_f = SimpleImputer(missing_values = np.nan, strategy=\"most_frequent\")\ntrain['Electrical'] = mean_f.fit_transform(train[['Electrical']])","c5bf1d3a":"#Duvar kaplama tipi\ntrain['MasVnrType'] = train['MasVnrType'].fillna('None')\n\n#Kaplamal\u0131 duvar metrekaresi\ntrain['MasVnrArea'] = train['MasVnrArea'].fillna(0)","41b94a22":"total = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Toplam', 'Y\u00fczde'])\n\nmissing_data\n","ff9329d2":"train = train.drop(\"Id\", axis='columns')\n\nnumeric_dtypes = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\ncategorial_cols = []\n\nfor col in train.columns:\n    if train[col].dtype not in numeric_dtypes:\n       categorial_cols.append(col)\n    else:\n        continue\n\ntrain_dummy = pd.get_dummies(train[categorial_cols])\ntrain = train.drop(categorial_cols, axis='columns')\ntrain  = pd.concat([train,train_dummy], axis=1)\n\ntrain.head()","70fca34a":"!pip install ycimpute","ed8b038b":"from ycimpute.imputer import knnimput","8c965115":"var_names = list(train)\narray_train = np.array(train)\ntrain_ = knnimput.KNN(k = 4).complete(array_train)\ntrain_= pd.DataFrame(train_, columns = var_names)\ntrain = train_","74b06296":"total = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Toplam', 'Y\u00fczde'])\n\nmissing_data","a3e84e18":"y = train_copy[\"SalePrice\"]\nX = train.drop(columns = [\"SalePrice\"])\n\nX, y = shuffle(X, y, random_state = 7)","d6ff6f9d":"satir_sayisi = train.shape[0]  \noffset = int(satir_sayisi * 0.7) \n\nX_train = X[:offset]  # X_train verisinin olu\u015fturulmas\u0131\nX_test = X[offset:]   #X_test verisinin olu\u015fturulmas\u0131\n\n\ny_train = y[:offset]  # y_train verisinin olu\u015fturulmas\u0131\ny_test = y[offset:]  # y_test verisinin olu\u015fturulmas\u0131","502486a4":"model_rf = RandomForestRegressor(n_estimators=1500, max_features=None,oob_score=True)\n\n# modelin ba\u011flant\u0131lar\u0131 olu\u015fturmas\u0131\nmodel_rf.fit(X_train, y_train)\n\ny_pred = model_rf.predict(X_test)\n\n# from sklearn import metrics\nscore_rf = metrics.r2_score(y_test, y_pred)\n\nscore_rf","0a7c939c":"Sat\u0131\u015f fiyat\u0131 ve konutun zemin \u00fczerindeki toplam ya\u015fam alan\u0131(GrLivArea) aras\u0131ndaki ili\u015fki;","6dfca666":"Sat\u0131\u015f fiyat\u0131 ve konutun garaj\u0131n\u0131n ara\u00e7 kapasitesi(GarageCars) aras\u0131ndaki ili\u015fki;\n","f178a7e3":"Kutu grafikleri, ara\u015ft\u0131rmac\u0131lar\u0131n ortalama de\u011ferleri, veri k\u00fcmesinin da\u011f\u0131l\u0131m\u0131n\u0131 ve de\u011fi\u015fkenlik belirtilerini h\u0131zl\u0131 bir \u015fekilde tan\u0131mlamas\u0131n\u0131, verilerin g\u00f6rsel bir \u00f6zeti sa\u011flayan grafiklerdir. Yukar\u0131daki grafikte ayk\u0131r\u0131 de\u011ferler var gibi g\u00f6r\u00fcnse de bu ak\u0131r\u0131l\u0131k konutun sahip oldu\u011fu di\u011fer \u00f6zellikler ile ba\u011flant\u0131l\u0131d\u0131r.\n\nBir di\u011fer \u00f6nemli \u00f6zelli\u011fimiz de 'YearBuilt' yani konutun yap\u0131m y\u0131l\u0131. Bu \u00f6zelli\u011fin kutu grafi\u011fi ise \u015fu \u015fekilde;","1dafeedb":"Bu \u00e7al\u0131\u015fmada \u00f6nemli olan nokta konutlar\u0131n sat\u0131\u015f fiyat\u0131(SalePrice) oldu\u011fu i\u00e7in bir de sat\u0131\u015f fiyat\u0131n\u0131n di\u011fer \u00f6zelliklerle olan korelasyonuna bakal\u0131m.","bdf6a643":"Eksik verileri g\u00f6rselle\u015ftirerek daha iyi g\u00f6zlem yapabiliriz.","c06f4b53":"Yap\u0131lan eksik veri tamamlama i\u015flemlerinden sonra sadece konuta ba\u011fl\u0131 caddenin uzunlu\u011fu (LotFrontage) \u00f6zelli\u011finde eksik veriler bulunmaktad\u0131r. Bu \u00f6zellikteki eksik verilerin say\u0131s\u0131 fazla oldu\u011fu i\u00e7in tahmine dayal\u0131 de\u011fer atama y\u00f6ntemi kullanal\u0131m. \n\nDe\u011fer atama i\u015flemi i\u00e7in uygulamas\u0131 kolay g\u00f6zetimli \u00f6\u011frenme algoritmalar\u0131ndan K-En Yak\u0131n Kom\u015fu (KNN) algoritmas\u0131ndan faydalanaca\u011f\u0131z ancak bundan \u00f6nce kategorik \u00f6zelliklerimizi say\u0131sal \u00f6zelliklere d\u00f6n\u00fc\u015ft\u00fcrmemiz gerekmekte. Bunun i\u00e7in get_dummies() metodunu  kullanaca\u011f\u0131z. ","3d39b416":"\n**MODEL\u0130N OLU\u015eTURULMASI**\n\n\u015eimdiye kadar yapt\u0131\u011f\u0131m\u0131z i\u015flemlerle veri k\u00fcmemizdeki eksik verileri tamamlad\u0131k. \u00d6zellik se\u00e7imi yapmadan \u00f6nce bir model olu\u015fturarak verimizi test edelim. Elimizdeki verinin %70'ini e\u011fitim %30'unu da test i\u00e7in kullanal\u0131m.****","bc99ad0c":"info( ) metodu ile \u00e7al\u0131\u015f\u0131lan veri k\u00fcmesi i\u00e7erisindeki dtype olarak bilinen veri tipleri ve kullan\u0131lan bellek hakk\u0131nda bize bilgi vermektedir. B\u00f6ylece veri k\u00fcmesinin kolon say\u0131s\u0131n\u0131 ve veri tiplerini \u00f6\u011frenebiliriz.","f53d336a":"Eksik verinin 10 taneden az oldu\u011fu \u00f6zellikleri Scikit-learn k\u00fct\u00fcphanesinin SimpleImputer mod\u00fcl\u00fcn\u00fc kullanarak en s\u0131k kullan\u0131lan de\u011fer ile tamamlayal\u0131m.\n\nScikit-learn, Python programlama dilinde yaz\u0131lm\u0131\u015f bir makine \u00f6\u011frenme k\u00fct\u00fcphanesidir. SimpleImputer eksik de\u011ferlerin d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011flayan sklearn k\u00fct\u00fcphanesinden kulland\u0131\u011f\u0131m\u0131z bir d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc mod\u00fcld\u00fcr.\n\nmissing_values parametresi ile d\u00f6n\u00fc\u015ft\u00fcr\u00fclmek istenen veriler belirlenmektedir.Daha sonraki parametre olan strategy parametresi s\u0131ras\u0131nda ise 4 adet yer alan strateji t\u00fcr\u00fcnden birisini se\u00e7erek hangi y\u00f6nteme g\u00f6re d\u00f6n\u00fc\u015ft\u00fcr\u00fclece\u011fine karar verilmektedir. A\u015fa\u011f\u0131da bu stratejilere yer verilmektedir:\n\n* \u201cmean\u201d  stratejisi, her s\u00fctun boyunca ortalama kullan\u0131larak eksik de\u011ferlerin de\u011fi\u015ftirilmesini sa\u011flar. Yaln\u0131zca say\u0131sal verilerle kullan\u0131labilir.\n\n* \u201cmedian\u201d stratejisi, her s\u00fctun boyunca medyan kullan\u0131larak eksik de\u011ferlerin de\u011fi\u015ftirilmesini sa\u011flar. Yaln\u0131zca say\u0131sal verilerle kullan\u0131labilir.\n\n* \u201cmost_frequent\u201d stratejisi , her s\u00fctun boyunca en s\u0131k kullan\u0131lan de\u011feri kullan\u0131larak eksik de\u011ferlerin de\u011fi\u015ftirilmesini sa\u011flar. String veya say\u0131sal verilerle kullan\u0131labilir.\n\n* \u201cconstant\u201d stratejisi, eksik de\u011ferleri fill_value ile de\u011fi\u015ftirin. String veya say\u0131sal verilerle kullan\u0131labilir.","c2e9ecde":"Sat\u0131\u015f fiyat\u0131 ile giri\u015f kat\u0131n\u0131n toplam metrekaresi(TotalBsmtSF), konutun 1. kat\u0131n\u0131n metrekasi(1stFlrSF) ve konutun zemin \u00fczerindeki toplam ya\u015fam alan\u0131(GrLivArea) aras\u0131nda do\u011frusal bir ili\u015fki bulundu\u011fu da\u011f\u0131l\u0131m grafiklerinde g\u00f6r\u00fclmektedir.","a41d5fc7":"Veri k\u00fcmesinin\u00f6zellikleri incelendi\u011fi zaman, veri k\u00fcmesinde yer alan kategorik de\u011ferler alan \u00f6zelliklerde bulunan NaN de\u011ferler asl\u0131nda eksik veri olmad\u0131\u011f\u0131 ve bir anlam ifade etti\u011fi,'NA' yani yok anlam\u0131na geldi\u011fi g\u00f6r\u00fclmektedir. \n\n\u00d6ncelikle veri k\u00fcmesinde bu duruma sahip olan \u00f6zelliklerideki eksik de\u011ferleri \u2018None\u2019 ifadesi ile tamamlamaya ba\u015flayal\u0131m. ","ba91765e":"Sat\u0131\u015f fiyat\u0131 ve konutta yer alan toplam oda say\u0131s\u0131 (TotRmsAbvGrd) aras\u0131ndaki ili\u015fki;","60cbc241":"\ndescribe( ) metodu ile say\u0131sal verilere sahip olan s\u00fctunlar\u0131n istatistiksel sonu\u00e7lar\u0131n hesaplanmas\u0131 sa\u011flan\u0131r.","449a98b1":"Bu grafiklerin baz\u0131lar\u0131n\u0131 zaten daha \u00f6nce incelemi\u015ftik ancak bu mega da\u011f\u0131l\u0131m grafi\u011fi bize de\u011fi\u015fken ili\u015fkileri hakk\u0131nda daha makul bir fikir vermektedir.\n\n'TotalBsmtSF' ve 'GrLiveArea' aras\u0131nda ki ili\u015fkide, neredeyse bir s\u0131n\u0131r g\u00f6revi g\u00f6ren noktalar\u0131n do\u011frusal bir \u00e7izgi \u00e7izdi\u011fini g\u00f6rebiliryoruz. Noktalar\u0131n \u00e7o\u011funun bu \u00e7izginin alt\u0131nda kalmas\u0131 tamamen mant\u0131kl\u0131d\u0131r \u00e7\u00fcnk\u00fc bodrum alanlar\u0131, yer \u00fcst\u00fc ya\u015fam alan\u0131na e\u015fit olabilir,fakat yer \u00fcst\u00fc ya\u015fam alan\u0131ndan daha b\u00fcy\u00fck bir bodrum beklenemez.\n","d6dd28bf":"Bu eksik verilerimizi tamamlad\u0131ktan sonra hangi \u00f6zelliklerde eksik verimizin kald\u0131\u011f\u0131n\u0131 kontrol edelim;","73a681f5":"Yukar\u0131da yer alan korelasyon grafi\u011finde sat\u0131\u015f fiyat\u0131n\u0131n ve di\u011fer konut \u00f6zelliklerinin korelasyonu g\u00f6r\u00fclmektedir. Buradan yola \u00e7\u0131karak bir konutun sat\u0131\u015f fiyat\u0131n\u0131 0.5'ten b\u00fcy\u00fck bir korelasyonu olan \u00f6zelliklerin  \u2018OverallQual\u2019, 'YearBuilt', \u2018TotalBsmtSF\u2019, \u20181stFlrSF\u2019, 'GrLiArea', 'FullBath','TotRmsAbvGrd', \u2018GarageCars\u2019 ve \u2018GarageArea\u2019 oldu\u011fu g\u00f6r\u00fclmektedir.\n\nBu \u00f6zelliklerin korelasyonuna bakacak olursak;","824fdb80":"Veri k\u00fcmemizdeki kategorik \u00f6zelliklerimizi say\u0131sal \u00f6zelliklere d\u00f6n\u00fc\u015ft\u00fcrd\u00fck. \u015eimdi kalan eksik verilerimizi de tamamlayal\u0131m.\nBunun i\u00e7in Ycimpute k\u00fct\u00fcphanesinin Knnimpute mod\u00fcl\u00fcn\u00fc kullanaca\u011f\u0131m. Ama bu mod\u00fcl\u00fc kullanabilmek i\u00e7in \u00f6nce install edip sonra import etmemiz gerekmekte.\n","82fe0786":"skew() metodu veri k\u00fcmesinin \u00e7arp\u0131kl\u0131\u011f\u0131n\u0131 hesaplamaktad\u0131r. \u00c7arp\u0131kl\u0131k; \n\n![](http:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/skewness.jpg)\n\nformul\u00fc ile hesaplan\u0131r. \n\n* \u00e7arp\u0131kl\u0131k = 0: normal da\u011f\u0131l\u0131m\n* \u00e7arp\u0131kl\u0131k > 0: da\u011f\u0131l\u0131m\u0131n sol kuyru\u011funda daha fazla a\u011f\u0131rl\u0131k\n* \u00e7arp\u0131kl\u0131k < 0: da\u011f\u0131l\u0131m\u0131n sa\u011f kuyru\u011funda daha fazla a\u011f\u0131rl\u0131k \n\nBas\u0131kl\u0131k kavram\u0131 bir reel de\u011ferli rassal de\u011fi\u015fken i\u00e7in olas\u0131l\u0131k da\u011f\u0131l\u0131m\u0131n\u0131n, grafik g\u00f6steriminden tan\u0131mlanarak ortaya \u00e7\u0131kar\u0131lan bir kavram olan, sivrili\u011fi veya bas\u0131kl\u0131\u011f\u0131 \u00f6zelli\u011finin \u00f6l\u00e7\u00fcm\u00fcd\u00fcr.\n\n\n\n\n","4ddda6db":"**EKS\u0130K VER\u0130LER\u0130N \u0130NCELENMES\u0130**\n\nEksik veri incelenen veri k\u00fcmesindeki g\u00f6zlemlerde eksiklik olmas\u0131 durumunu ifade etmektedir.  Veri \u00f6n i\u015fleme i\u015flemlerinde kar\u015f\u0131m\u0131za \u00e7\u0131kan ciddi problemlerden biridir.\n\n\u00d6ncelikle konut \u00f6zelliklerini temsil eden kolonlar\u0131n hangisinde, ne kadar eksik veri oldu\u011funu inceleyelim. Toplamda her s\u00fctun (\u00f6zellik) i\u00e7in ne kadar NaN de\u011fer yer ald\u0131\u011f\u0131n\u0131 g\u00f6rmek istiyor iseniz sum() metodu ile sonucu ekranda g\u00f6rebilmeniz m\u00fcmk\u00fcnd\u00fcr.","9bd6f1fd":"tail() metodu ile veri k\u00fcmemizin son 10 verisini g\u00f6r\u00fcnt\u00fcleyim.\n","1751e8f0":"Sat\u0131\u015f fiyat\u0131 ve konutun tamamlanm\u0131\u015f banyo say\u0131s\u0131 (FullBath) aras\u0131ndaki ili\u015fki;","eeb8887a":"**SATI\u015e F\u0130YATININ \u0130NCELENMES\u0130**\n\nBu \u00e7al\u0131\u015fmadaki as\u0131l \u00f6nemli nokta konutlar\u0131n sat\u0131\u015f fiyat\u0131 yani \"SalePrice\" kolonudur. Sat\u0131\u015f fiyat\u0131n\u0131n ve di\u011fer konut \u00f6zelliklerinin birbiri ile olan korelasyonlar\u0131n\u0131 yani birbirleriyle olan ba\u011fl\u0131l\u0131klar\u0131n\u0131 incelemek bize \u00f6zellik se\u00e7iminde yard\u0131mc\u0131 olacakt\u0131r.\n\n\"SalePrice\" kolonunu biraz inceleyelim.\n","fc8f9f9c":"Veri k\u00fcmelerindeki baz\u0131 \u00f6zelliklerdeki  eksiklikler ba\u015fka bir de\u011fi\u015fkenle ba\u011flant\u0131l\u0131 olup yap\u0131sal bir durumdan dolay\u0131 eksik olabilmektedir. \n\nKonutun garaj\u0131n\u0131n yap\u0131m y\u0131l\u0131(GarageYrBlt) \u00f6zelli\u011findeki eksik veriler de yap\u0131sal durumdan dolay\u0131 ortaya \u00e7\u0131km\u0131\u015ft\u0131r. Bu \u00f6zellik \u2018None\u2019 ifadesi ile doldurulan eksik verilerde ba\u011flant\u0131l\u0131 olup garaj\u0131 olmayan konutlar\u0131n garaj yap\u0131m y\u0131l\u0131 da bulunmamaktad\u0131r.","97792f11":"\u0130lk ad\u0131m olarak projede kullanaca\u011f\u0131m\u0131z Python\u2019a ait olan k\u00fct\u00fcphanelerini import edelim.","d1840b73":"Da\u011f\u0131l\u0131m (scatter) diyagram\u0131, iki farkl\u0131 de\u011fi\u015fkenin aras\u0131ndaki ili\u015fkiyi belirlemek i\u00e7in kullan\u0131lan grafiklerden biridir. \n\nSat\u0131\u015f fiyat\u0131 ve giri\u015f kat\u0131n\u0131n toplam metrekaresi(TotalBsmtSF) aras\u0131ndaki ili\u015fki \u015fu \u015fekildedir;","28c6e99f":"Konutun elektrik sisteminde(Electrical) de baz\u0131 eksik veriler yer almaktad\u0131r. Bu eksik verileri de en s\u0131k kullan\u0131lan de\u011fer ile tamamlayal\u0131m\n","4876f519":"corr() metodu veri k\u00fcmesinde yer alan \u00f6zeliklerin korelasyon matrisini olu\u015fturur(Sadece say\u0131lsal de\u011fer alan \u00f6zellikler i\u00e7in). Korelasyon iki rassal de\u011fi\u015fken aras\u0131ndaki do\u011frusal ili\u015fkinin y\u00f6n\u00fcn\u00fc ve g\u00fcc\u00fcn\u00fc belirtir.","93afd2d0":"Konutun bodrum kat\u0131n\u0131n de\u011ferlendirmesinde(BsmtFinType1) de baz\u0131 eksik veriler yer almaktad\u0131r. Bu eksik verileri en s\u0131k kullan\u0131lan de\u011fer ile tamamlayal\u0131m.","0ede1ace":"Pandas k\u00fct\u00fcphanesini import ederken pd k\u0131saltmas\u0131 ile tan\u0131mlad\u0131\u011f\u0131m\u0131z i\u00e7in kodun her alan\u0131nda art\u0131k pd ile \u00e7a\u011f\u0131rabilmemiz m\u00fcmk\u00fcnd\u00fcr. \u00dczerinde \u00e7al\u0131\u015faca\u011f\u0131m veri k\u00fcmesi bir CSV dosyas\u0131 oldu\u011fu i\u00e7in read_csv( ) metodu ile verimizi okuyarak head() metodu ile veri k\u00fcmemizin ilk 10 verisini g\u00f6r\u00fcnt\u00fcleyelim.","8a5992b6":"Sat\u0131\u015f fiyat\u0131 ve konutun 1. kat\u0131n\u0131n metrekasi(1stFlrSF) aras\u0131ndaki ili\u015fki;","c4ce093f":"**KONUT F\u0130YATLARININ TAHM\u0130N\u0130**\n\nKonut fiyat tahmini olduk\u00e7a karma\u015f\u0131k ve \u00e7ok say\u0131da parametrenin dikkate al\u0131nmas\u0131n\u0131 gerektiren bir tahmin i\u015flemidir.\n\nVeri k\u00fcmesinde 1460 konutun 81 adet kolon bulunmaktad\u0131r. Bu kolonlar\u0131n 79 tanesi konut \u00f6zelliklerini temsil etmektedir. Konut \u00f6zelliklerini temsil eden 79 kolonun 43 tanesi kategorik, 36 tanesi say\u0131sal de\u011fer almaktad\u0131r. Konut \u00f6zelliklerini temsil eden kolonlarda eksik veriler bulunmaktad\u0131r.\n\nBu \u00e7al\u0131\u015fman\u0131n amac\u0131 bu \u00f6zellikler dikkate al\u0131narak konut sat\u0131\u015f fiyat\u0131n\u0131n(SalePrice) tahmin edilmesidir.","0fd5a5fc":"Veri k\u00fcmemizin ilk ve son 10 verisini g\u00f6r\u00fcnt\u00fcledikten sonra verimizi daha iyi inceleyebilmek i\u00e7in sample() metodu ile verimizde yer alan rastgele 10 veriyi g\u00f6r\u00fcnt\u00fcleyelim.","3064dfe9":"Konutun duvar kaplamas\u0131 kolonun bir adet eksik veri yer almaktad\u0131r. Onu veri k\u00fcmesinde s\u0131k\u00e7a yer alan 'None' ifadesi ile tamamlayal\u0131m. Ayn\u0131 konutun kaplamal\u0131 duvar metrekaresi verisi de eksikti, duvar kaplama tipini 'None' olarak tamalad\u0131\u011f\u0131m\u0131z i\u00e7in o eksik veriyi de 0 olarak tamamlayal\u0131m.\n","24f70dcb":"knnimput() metodu bizden bir Numpy array'i bekledi\u011fi i\u00e7in veri k\u00fcmemizdeki \u00f6zellikleri bir yerde saklay\u0131p veri k\u00fcmemizi  bir Numpy array'e d\u00f6n\u00fc\u015ft\u00fcr\u00fcp eksik de\u011ferleri tamamlad\u0131ktan sonra tekrar isimlendirme i\u015fleminin ger\u00e7ekle\u015ftirece\u011fiz;","877bfebe":"Sat\u0131\u015f fiyat\u0131 ve konutun garaj\u0131n\u0131n  metrekaresi (GarageArea) aras\u0131ndaki ili\u015fki;","a99440a4":"\u015eimdi gelin konut fiyatlar\u0131n\u0131n belirlenmesinde \u00f6nemli olan bu \u00f6zellikleri biraz yak\u0131ndan inceleyelim.\n\nOverallQual kolonu konutun malzeme kalitesini ifade etmektedir. 1-10 aras\u0131nda say\u0131sal de\u011fer almaktad\u0131r.","af922b22":"\u015eimdide bu \u00f6zelliklerin birbirleriyile olan ili\u015fkilerini da\u011f\u0131l\u0131m grafi\u011finde g\u00f6relim;"}}