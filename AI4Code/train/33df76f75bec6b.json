{"cell_type":{"809d1dc4":"code","b171cf8e":"code","042f9642":"code","7d232776":"code","9623813f":"code","2249af0b":"code","5640db0a":"code","7ae40700":"code","535c243b":"code","8c1d5aca":"code","2ea4d927":"code","badafa33":"code","1311b5de":"code","524034cb":"code","423186ec":"code","b5009fef":"code","9854a226":"code","c26e29a4":"code","f660497c":"code","cb5d9eb6":"code","b9ae9e2c":"code","165e08ac":"code","86e13663":"code","949b9812":"code","5b31d566":"code","bc3a5426":"code","8017f676":"code","c7e62f80":"code","8eba0313":"code","c94d20f0":"markdown","1ddafc3a":"markdown","5560d8bf":"markdown","3e04dccd":"markdown","13437f5e":"markdown","f6137a82":"markdown","72a86eeb":"markdown","df58087e":"markdown","d2d347e2":"markdown","8473d0cc":"markdown","340c48c6":"markdown","01552eb8":"markdown","ab081f2c":"markdown","140dab9e":"markdown","93526d29":"markdown","a05bf20e":"markdown"},"source":{"809d1dc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%precision 2\n# Any results you write to the current directory are saved as output.","b171cf8e":"df_fifa = pd.read_csv('..\/input\/data.csv')","042f9642":"df_fifa.head()","7d232776":"df_fifa.describe()","9623813f":"#Count of unique values\ndf_fifa.nunique()","2249af0b":"#data missing in any column ?\ndf_fifa.isnull().any()","5640db0a":"df_fifa.columns","7ae40700":"chosen_cols = ['Name', 'Age', 'Nationality',\n       'Overall', 'Potential', 'Club', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Position',\n       'Jersey Number',\n       'Height', 'Weight' , 'Crossing',\n       'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling',\n       'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration',\n       'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression',\n       'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling',\n       'GKKicking', 'GKPositioning', 'GKReflexes', 'Release Clause']","535c243b":"df = pd.DataFrame(df_fifa , columns = chosen_cols)","8c1d5aca":"df.head(7)","2ea4d927":"plt.figure(figsize=(25 , 16))\nhm = sns.heatmap(df[['Name', 'Age', 'Nationality',\n       'Overall', 'Potential', 'Club', 'Value', 'Wage',\n       'Preferred Foot', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Position',\n       'Height', 'Weight' , 'Crossing',\n       'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling',\n       'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration',\n       'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression',\n       'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle', 'SlidingTackle', 'Release Clause']].corr() , cmap= 'coolwarm' , annot = True , linewidth = .5)\n\n\n\n","badafa33":"import pandas as pd\nfrom sklearn import datasets, linear_model\nfrom sklearn.model_selection import train_test_split\nfrom matplotlib import pyplot as plt\n\ndfTest = df[['Overall' , 'Reactions' , 'Composure' , 'Potential']]\ndfTest = dfTest.dropna()\ny = dfTest['Overall']\nX = dfTest[['Potential' , 'Reactions' , 'Composure']]\nX = X.reset_index()\n","1311b5de":"X.drop('index' , axis = 1)","524034cb":"def make_scatter(df) :\n    feats = ('ShortPassing' , 'Volleys' , 'Dribbling' , 'SprintSpeed')\n    for index , feat in enumerate(feats):\n        plt.subplot( 2 , 2 , index + 1)\n        sns.regplot(y = 'BallControl' , x = feat , data = df )\n\nplt.figure(figsize=(10 , 10))\nmake_scatter(df)","423186ec":"    sns.set(style = 'dark' , palette = 'coolwarm' , color_codes = True )\n    ax = sns.distplot(df['Overall'] , bins = 42  , kde = False)","b5009fef":"eldest = df.sort_values('Age' , ascending = False)[['Name' , 'Club' , 'Age' , 'Overall']].head(20)\neldest","9854a226":"best_player = df.sort_values('Overall' , ascending = 0)[['Overall' , 'Name' , 'Value' , 'Club' , 'Position']].head(100)\nbest_player.set_index('Name' , inplace = True)\nbest_player","c26e29a4":"best_clubs = []\nfor club in best_player['Club'] :\n    if club not in best_clubs :\n        best_clubs.append(club)\npd.DataFrame(best_clubs)        ","f660497c":"some_clubs = ['FC Barcelona',\n 'Juventus',\n 'Paris Saint-Germain',\n 'Manchester United',\n 'Manchester City',\n 'Real Madrid',\n 'FC Bayern M\u00fcnchen',\n 'Liverpool',\n 'Borussia Dortmund',\n ]\n","cb5d9eb6":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly as py\nimport plotly.graph_objs as go\nimport seaborn as sns\nsns.set(style = 'dark')\nimport random\nfrom collections import Counter as counter\nfrom IPython.display import HTML\nimport os\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\npy.offline.init_notebook_mode(connected = True)\n","b9ae9e2c":"teams = {}\n#plots = (fast_plot())\nfor club in df['Club'].unique() :\n    pl = int(11)\n    overall = df['Overall'][ df['Club'] == club].sort_values( ascending = False).head(pl).sum()\n    overall \/= (pl*1.0)\n    teams[club] = overall\n    \n\n","165e08ac":"df_teams = pd.DataFrame.from_dict(teams , orient = 'index' , columns = ['overall'])\ndf_teams = df_teams.sort_values(by = 'overall' , ascending = 0).head(20)\ndf_teams['club'] = df_teams.index\nplt.figure(1 , figsize = (15 , 6))\nplt.barh(y = 'club' , width = 'overall' , data = df_teams )\nplt.xlim(70 , 93)\nplt.xlabel(\"Average Player OVR for \" + str(pl) + \" players\")\nplt.show()","86e13663":"teams = {}\n#plots = (fast_plot())\nfor club in df['Club'].unique() :\n    pl = int(11)\n    overall = df['Overall'][ df['Club'] == club].sort_values( ascending = False).head(pl).sum()\n    overall \/= (pl*1.0)\n    teams[club] = overall\n    \n\n","949b9812":"df_teams = pd.DataFrame.from_dict(teams , orient = 'index' , columns = ['overall'])\ndf_teams = df_teams.sort_values(by = 'overall' , ascending = 0).head(20)\ndf_teams['club'] = df_teams.index\nplt.figure(1 , figsize = (15 , 6))\nplt.barh(y = 'club' , width = 'overall' , data = df_teams )\nplt.xlim(70 , 93)\nplt.xlabel(\"Average Player OVR for \" + str(pl) + \" players\")\nplt.show()","5b31d566":"plt.figure(figsize = (20 , 10))\n\nsns.set_palette(\"bright\")\nax = sns.barplot(y = 'club' , x = 'overall' , data = df_teams )\nplt.xlim(70 , 93)\n#sns.set_palette(\"bright\")\n#plt.figure(figsize = ())\nplt.show()","bc3a5426":"print(df.groupby(\"Preferred Foot\")[\"Overall\"].count())","8017f676":"df.groupby(\"Preferred Foot\")[\"Overall\"].mean()","c7e62f80":"df.groupby(\"Preferred Foot\")[\"BallControl\"].mean()","8eba0313":"df_foot = pd.get_dummies(df , columns = ['Preferred Foot'])\ndf_foot[['Preferred Foot_Left', 'Preferred Foot_Right' , 'BallControl']].corr()\n#df['left'] = df[[\"Preferred Foot\"]].apply(lambda x : 1 if x == 'Left' else 0)","c94d20f0":"## Same Plot , with better formatting :","1ddafc3a":"## Left - Footed players tend to have better ball control : ","5560d8bf":"## Distribution of left and right footed players","3e04dccd":"## Best Clubs ranked :\n* Good Clubs have the best average for their starting 11*","13437f5e":"### There is only 0.72 difference in OVERALL . So , we cannot say that left-footed players are better as the difference is too small to come to a conclusion  ","f6137a82":"## Are left footed players better ?","72a86eeb":"### Viewing the useful feature columns ","df58087e":"# Showing correlation between different features\n#### (Darker Color : higher correlation)","d2d347e2":"## Eldest players in Fifa","8473d0cc":"## *Distribution of Overall across complete player data* :","340c48c6":"## *Clubs that have players in top 100 : * \n>  (Ranked by THE best player in the club)","01552eb8":"## Left footed-ness and ball control are directly related ","ab081f2c":"## *Best players 100 ranked by OVERALL*","140dab9e":"# Predicting overall from Co related features :","93526d29":"## Clubs ranked by top 16 players \n* Substitutes are needed to win long competitions, when 1st choice players tend to get injured","a05bf20e":"## >  Relation between Ball control and other features : "}}