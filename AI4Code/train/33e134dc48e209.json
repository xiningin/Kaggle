{"cell_type":{"314f2006":"code","be24399f":"code","6b5bd463":"code","da5a6cb4":"code","9aa08f72":"code","4eadfe73":"code","5c432662":"code","bf2833a7":"code","38898db5":"code","fc94571f":"code","d0d8f1dd":"code","f6c20815":"code","0a87a2ca":"code","78e2a779":"code","453ad690":"code","26f4a48a":"code","572375cc":"code","b0564a62":"code","014056f7":"code","b1a798d9":"code","fb42c71a":"code","5f055bac":"code","9411b313":"code","1e381d20":"code","a94f1fd7":"code","e6f3b595":"code","a4a6868e":"code","3deec0a6":"code","d4e94ae9":"code","02fb2036":"code","44ef77f2":"code","4e3d97b4":"code","fd9343e9":"code","59d46bd8":"code","ae4afec9":"code","ca4213cf":"code","1f29a034":"code","0ca199a4":"code","fe1d4f73":"code","9fd9239c":"code","dc62cd93":"code","168a5a18":"code","1a03cf7b":"code","29aeee55":"code","e6b9ef20":"code","d473751f":"code","e553589d":"code","dfbc0159":"code","5802c092":"code","3ed47dcf":"code","63ac93ec":"code","7164aadd":"code","7cd77e45":"code","d64da12a":"code","957d0f2c":"code","29f0f35c":"code","f70fdb9c":"code","d43988d6":"code","1a772c8f":"code","c9161925":"code","5223ff44":"code","52a501b4":"code","4a07f8ed":"code","73d48f77":"code","b43216cd":"code","0aec5037":"code","6ed9799c":"code","7e207e05":"code","70c2f6b5":"markdown"},"source":{"314f2006":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\n","be24399f":"df=pd.read_csv(\"..\/input\/boston-linearregression\/boston_train.csv\")\ntest=pd.read_csv(\"..\/input\/boston-linearregression\/boston_test.csv\")","6b5bd463":"df.head()","da5a6cb4":"df[\"Price\"]=df[\"medv\"]\ndf.index=df.ID\ntest.index=test.ID\n","9aa08f72":"df.drop(columns=[\"ID\"],inplace=True)","4eadfe73":"df.drop(columns=[\"medv\"],inplace=True)","5c432662":"test.drop(columns=[\"ID\"],inplace=True)","bf2833a7":"df.head()","38898db5":"df.rad.max()","fc94571f":"df.chas.max()","d0d8f1dd":"df.info()","f6c20815":"df.age.max()","0a87a2ca":"df.age.min()","78e2a779":"df[df[\"age\"]==100]","453ad690":"df.corr()","26f4a48a":"plt.subplots(figsize=(20,15))\nsns.heatmap(df.corr(),annot=True)","572375cc":"pip install statsmodels","b0564a62":"import statsmodels.formula.api as smf\nimport statsmodels.api as sm","014056f7":"model=smf.glm(\"Price~ crim+zn+indus+C(chas)+nox+rm+age+dis+rad+tax+ptratio+black+lstat\", data=df)","b1a798d9":"res=model.fit()","fb42c71a":"res.summary()","5f055bac":"df.drop(columns=[\"age\",\"dis\",\"indus\",\"crim\",],inplace=True)","9411b313":"test.drop(columns=[\"age\",\"dis\",\"indus\",\"crim\",\"zn\",\"nox\"],inplace=True)","1e381d20":"df.drop(columns=[\"zn\",\"nox\"],inplace=True)","a94f1fd7":"model2=smf.glm(\"Price~ C(chas)+rm+rad+tax+ptratio+black+lstat\", data=df)\nres2=model2.fit()","e6f3b595":"res2.summary()","a4a6868e":"sns.distplot(df[\"Price\"])","3deec0a6":"px.bar(df,\"chas\")","d4e94ae9":"px.histogram(df,\"rm\")","02fb2036":"px.scatter(df,x=\"lstat\",y=\"Price\")","44ef77f2":"px.scatter(df,x=\"tax\",y=\"Price\")","4e3d97b4":"px.scatter(df,x=\"rm\",y=\"Price\", trendline='ols',trendline_color_override=\"red\")","fd9343e9":"df.head()","59d46bd8":"df.iloc[1:3,1:4]","ae4afec9":"import sklearn","ca4213cf":"from sklearn.model_selection import train_test_split","1f29a034":"y=df[\"Price\"]","0ca199a4":"X=df.iloc[:,0:7]","fe1d4f73":"X.head()","9fd9239c":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=1)","dc62cd93":"X_train.shape","168a5a18":"X_test.shape","1a03cf7b":"from sklearn.linear_model import LinearRegression","29aeee55":"import sklearn.metrics as metrics","e6b9ef20":"lreg=LinearRegression()","d473751f":"lreg.fit(X_train,y_train)","e553589d":"pred=lreg.predict(X_train)","dfbc0159":"pred1=lreg.predict(X_test)","5802c092":"pred","3ed47dcf":"from sklearn.metrics import r2_score","63ac93ec":"score=r2_score(y_train,pred)","7164aadd":"score","7cd77e45":"score2=r2_score(y_test,pred1)","d64da12a":"score2","957d0f2c":"mse = sklearn.metrics.mean_squared_error(y_test, pred1)","29f0f35c":"mse","f70fdb9c":"rmse= (np.sqrt(mse))","d43988d6":"from sklearn.metrics import mean_squared_error\nmse = mean_squared_error(y_test, pred1)\nprint(\"Mean Square Error : \", mse)\nprint(\"rmse:\",rmse)","1a772c8f":"from sklearn.ensemble import RandomForestRegressor","c9161925":"rf_regressor = RandomForestRegressor(n_estimators = 300 ,  random_state = 0)\nrf_regressor.fit(X_train,y_train)\n#Predicting the SalePrices using test set \ny_pred = rf_regressor.predict(X_test)\nmae=sklearn.metrics.mean_absolute_error(y_test, y_pred)\nmse=sklearn.metrics.mean_squared_error(y_test, y_pred)\n# Printing the metrics\nprint('Suppport Vector Regression Accuracy: ', rf_regressor.score(X_test,y_test))\nprint('R2 square:',sklearn.metrics.r2_score(y_test, pred1))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, pred1)))\nprint('MAE: ', mae)\nprint('MSE: ', mse)","5223ff44":"print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, pred1)))","52a501b4":"predictions=lreg.predict(test)","4a07f8ed":"predictions","73d48f77":"submission = pd.DataFrame()","b43216cd":"test1=pd.read_csv(\"..\/input\/boston-linearregression\/boston_test.csv\")","0aec5037":"test1['Price'] = predictions","6ed9799c":"test1[\"Price\"].shape","7e207e05":"test1.to_csv('submission.csv', header=True, index=False)","70c2f6b5":"age,crim,indus"}}