{"cell_type":{"ec0af2fb":"code","bfea6a5c":"code","7f30c7fd":"code","fcbf31fb":"code","7e00c74c":"code","fc1207b9":"code","9178463b":"code","30d6d02b":"code","b078c4aa":"code","aea1bfce":"code","03d449ca":"code","ac2191c4":"code","29b7b06e":"code","b4f37d02":"code","82add60f":"code","0689c0a2":"code","05973693":"code","2be2a371":"code","23e29220":"code","5c0e92fb":"code","d3538038":"code","8a21ba0e":"code","befa6a58":"code","29d97b2c":"code","9a253b52":"code","5de303da":"code","4bac22a9":"code","708e0c56":"code","93f75585":"code","988c96b6":"code","08d06eec":"code","37b992b9":"code","9defbc29":"code","960e53e1":"code","25ec9452":"code","15bf67c5":"code","ca2e75a6":"code","1e6347b2":"code","0b5d4dc8":"code","bd0c0d78":"code","a3ce5e50":"code","578dd5dc":"code","33590140":"code","39c98543":"code","061106c7":"code","cacf3f9a":"code","b30f3b91":"code","477bdcee":"code","d8ebc6f8":"code","cec01a60":"code","e03a2343":"code","66b72bc1":"code","df1880e9":"code","856d1cfe":"code","6f469bd1":"code","30e59327":"code","17a4d2a0":"code","d2c21201":"code","208c00a6":"code","91931103":"code","158e3a8f":"code","ada4f83b":"code","a04b96d7":"code","6d7af397":"code","a0f6e529":"code","5357e39e":"code","3542a3d9":"code","7ba64094":"code","f97fbce3":"code","038c33de":"code","a27326c0":"code","ad87249b":"code","ea6088ff":"code","56ae7997":"code","8d6634b5":"code","7bc5c0ab":"code","c925b357":"code","f84158f7":"code","84e19e53":"code","58037d62":"code","a6327cb9":"code","6553ef6e":"code","da8a8d29":"code","80d715de":"markdown","cf3802a0":"markdown","e5fd0d62":"markdown","fb48b05b":"markdown","28ed62b6":"markdown","86293f92":"markdown","793932be":"markdown","41984c2f":"markdown","95f126df":"markdown","420d6794":"markdown","9df1b40d":"markdown","5476c2f9":"markdown","a1576b44":"markdown","42a10f67":"markdown","d7ed1fa8":"markdown","b39f702b":"markdown","5430942b":"markdown","8e90c71f":"markdown","710360b5":"markdown","b1f242bd":"markdown"},"source":{"ec0af2fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bfea6a5c":"from bq_helper import BigQueryHelper\n\ndataset = BigQueryHelper(\"bigquery-public-data\", \"google_analytics_sample\")\ndataset.list_tables()","7f30c7fd":"dataset.head(\"ga_sessions_20160801\", 7)\n","fcbf31fb":"dataset.table_schema(\"ga_sessions_20160801\")","7e00c74c":"import requests\nimport geopandas as gpd\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly\nimport matplotlib.pyplot as plt","fc1207b9":"query1 = \"\"\" SELECT geoNetwork.country AS country , COUNT(DISTINCT fullvisitorId) AS users , COUNT(DISTINCT CASE WHEN visitNumber = 1 THEN fullvisitorId END) AS new_users ,\n                                (COUNT(DISTINCT CASE WHEN visitNumber = 1 THEN fullvisitorId END) * 100 \/ COUNT(DISTINCT fullvisitorId))  AS new_users_percentage\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                                GROUP BY country\n                                ORDER BY users DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query1)","9178463b":"df0 = dataset.query_to_pandas_safe(query1)","30d6d02b":"df0.head(10)","b078c4aa":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df0['country'],\n                    y=df0['users'],\n                    name='Users',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df0['country'],\n                    y=df0['new_users'],\n                    name='New Users',\n                    marker_color='blue'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Total Users and New Users By Country BarChart\")","aea1bfce":"fig = go.Figure()\nfig = px.pie(df0,\n                        values=df0['users'],\n                        names=df0['country']\n                        )\nfig.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig.update_layout( width = 1100 , height = 500  , title = \"Total Users By Country PieChart\")","03d449ca":"fig2 = go.Figure(data= go.Choropleth(\n            locations= df0['country'],\n            z = df0['new_users_percentage'].astype(float),\n            locationmode = 'country names',\n            colorscale = 'Reds',\n            colorbar_title = \"New Users Percentage By Country\",\n            ))\nfig2.update_layout( width = 1100 , height = 500 )","ac2191c4":"query2 = \"\"\"SELECT  geoNetwork.continent , SUM ( totals.pageviews ) AS total_pageviews\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                                GROUP BY  geoNetwork.continent\n                                ORDER BY total_pageviews DESC ; \"\"\"\n\ndataset.estimate_query_size(query2)","29b7b06e":"df1 = dataset.query_to_pandas_safe(query2)","b4f37d02":"df1['total_pageviews'][0] = df1['total_pageviews'][0] \/ 2\ndf1 = df1[df1['total_pageviews'] > 4000]\ndt = { \"continent\" : 'South America' , 'total_pageviews' :  df1['total_pageviews'][0]  }\ndf1 = df1.append(dt , ignore_index = True)\n\ndf1['continent'] = [ 'Asia' , 'North America' , 'Europe' , 'Africa' ,'South America' , 'Oceania']\ndf1['total_pageviews'] = [df1['total_pageviews'][1] , df1['total_pageviews'][0] , df1['total_pageviews'][2] ,\n                                  df1['total_pageviews'][4] , df1['total_pageviews'][5] , df1['total_pageviews'][3] ]\ndf1.head(10)","82add60f":"fig = go.Figure()\nfig = px.bar(\n                df1,\n                x='continent',\n                y='total_pageviews',\n                color='continent',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Continent's Total Pageviews BarChart\")","0689c0a2":"fig1 = go.Figure()\nfig1 = px.pie(df1,\n                        values=df1['total_pageviews'],\n                        names=df1['continent']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500  , title = \"Continent's Total Pageviews PieChart\")","05973693":"cont = requests.get(\"https:\/\/gist.githubusercontent.com\/hrbrmstr\/91ea5cc9474286c72838\/raw\/59421ff9b268ff0929b051ddafafbeb94a4c1910\/continents.json\")\ngdf = gpd.GeoDataFrame.from_features(cont.json())\ngdf = gdf.assign(total_pageviews=df1['total_pageviews']).set_index(\"CONTINENT\")\nfig1 = px.choropleth_mapbox(\n                gdf,\n                geojson=gdf.geometry,\n                locations=gdf.index,\n                color=\"total_pageviews\",\n                mapbox_style=\"carto-positron\",\n                color_continuous_scale=\"Reds\",\n                opacity=0.5,\n                zoom=1,\n                ).update_layout(margin={\"l\": 0, \"r\": 0, \"b\": 0, \"t\": 0} , width = 1100 , height = 500 , title = \"Continent's Total Pageviews Choropleth Map\")","2be2a371":"query3 = \"\"\" SELECT marketing_channel , users , pageviews , sessions , ROUND(pageviews\/sessions,2) AS pageviews_per_session\n                    FROM ( SELECT channelGrouping AS marketing_channel, COUNT(DISTINCT fullvisitorId) AS users,COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n                    COUNT(DISTINCT CASE WHEN hits.type = \"PAGE\" THEN CONCAT(fullvisitorID, cast(visitId as STRING), date, hits.hitNumber) END) AS pageviews\n                    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) hits\n                    WHERE totals.visits = 1\n                    GROUP BY marketing_channel)\n                    ORDER BY pageviews_per_session DESC \"\"\"\n\ndataset.estimate_query_size(query3)","23e29220":"df2 = dataset.query_to_pandas_safe(query3)","5c0e92fb":"df2.head(10)","d3538038":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df2['marketing_channel'],\n                    y=df2['users'],\n                    name='Users',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df2['marketing_channel'],\n                    y=df2['pageviews'],\n                    name='PageViews',\n                    marker_color='lightsalmon'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df2['marketing_channel'],\n                    y=df2['sessions'],\n                    name='Session',\n                    marker_color='blue'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Customer Engagement Stats By Marketing Channel BarChart\")","8a21ba0e":"fig1 = px.pie(df2,\n                        values=df2['pageviews_per_session'],\n                        names=df2['marketing_channel']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500  , title = \"Pageviews per Session By Marketing Channel PieChart\")","befa6a58":"query4 = \"\"\" SELECT source , COUNT (source) AS total_visits , COUNT(DISTINCT transactions) AS transactions , SUM(total_revenue\/1000000) AS total_revenue\n                                FROM ( SELECT  trafficSource.source AS source, hits.transaction.transactionId AS transactions, hits.transaction.transactionRevenue AS total_revenue\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) AS hits\n                                WHERE totals.visits = 1)\n                                GROUP BY source\n                                ORDER BY total_revenue DESC\n                                LIMIT 10\"\"\"\n\ndataset.estimate_query_size(query4)","29d97b2c":"df3 = dataset.query_to_pandas_safe(query4)","9a253b52":"df3.head(10)","5de303da":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df3['source'],\n                    y=df3['transactions'],\n                    name='Transactions',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df3['source'],\n                    y=df3['total_visits'],\n                    name='Visits',\n                    marker_color='blue'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Total Transactions and Visits  By Webpages BarChart\")","4bac22a9":"fig = go.Figure()\nfig = px.pie(df3,\n                        values=df3['total_revenue'],\n                        names=df3['source']\n                        )\nfig.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig.update_layout( width = 1100 , height = 500  , title = \"Total Revenue By Webpages PieChart\")","708e0c56":"query5 = \"\"\"SELECT channelGrouping AS marketing_channel , COUNT(DISTINCT hits.transaction.transactionId) as transactions , SUM(hits.transaction.transactionRevenue\/1000000) AS total_revenue\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) hits\n                                WHERE totals.visits = 1\n                                GROUP BY marketing_channel\n                                ORDER BY total_revenue DESC \"\"\"\n\ndataset.estimate_query_size(query5)","93f75585":"df4 = dataset.query_to_pandas_safe(query5)","988c96b6":"df4.head(10)","08d06eec":"fig = px.bar(\n                df4,\n                x='marketing_channel',\n                y='transactions',\n                color='marketing_channel',\n            )\nfig.update_layout(width = 1300 , height = 700 , title = \"Total Transactions By Marketing Channel BarChart\")","37b992b9":"fig = px.pie(df4,\n                        values=df4['total_revenue'],\n                        names=df4['marketing_channel']\n                        )\nfig.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig.update_layout( width = 1100 , height = 500  , title = \"Total Revenue By Marketing Channel PieChart\")","9defbc29":"query6 = \"\"\" SELECT marketing_channel , transactions , sessions , ROUND(transactions\/sessions*100,2) AS conversion_rate\n                                FROM (SELECT channelGrouping AS marketing_channel , COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n                                COUNT(DISTINCT hits.transaction.transactionId) AS transactions\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) hits\n                                WHERE totals.visits = 1\n                                GROUP BY marketing_channel)\n                                ORDER BY conversion_rate DESC  \"\"\"\n\ndataset.estimate_query_size(query6)","960e53e1":"df5 = dataset.query_to_pandas_safe(query6)","25ec9452":"df5.head(10)","15bf67c5":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df5['marketing_channel'],\n                    y=df5['transactions'],\n                    name='Transactions',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df5['marketing_channel'],\n                    y=df5['sessions'],\n                    name='Sessions',\n                    marker_color='blue'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Total Transactions and Sessions By Marketing Channels BarChart\")","ca2e75a6":"fig1 = px.pie(df5,\n                        values=df5['conversion_rate'],\n                        names=df5['marketing_channel']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Conversion Rate By Marketing Channel PieChart\" )","1e6347b2":"query7 = \"\"\"SELECT marketing_channel , registration_goal , sessions , ROUND(registration_goal\/sessions*100,2) AS registration_conversion_rate\n                            FROM (SELECT channelGrouping AS marketing_channel ,\n                            COUNT(DISTINCT CASE WHEN hits.page.pagePath = \"\/registersuccess.html\" THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) end) AS registration_goal,\n                            COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions\n                            FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) hits\n                            WHERE totals.visits = 1\n                            GROUP BY marketing_channel)\n                            ORDER BY registration_conversion_rate DESC \"\"\"\n\ndataset.estimate_query_size(query7)","0b5d4dc8":"df6 = dataset.query_to_pandas_safe(query7)","bd0c0d78":"df6.head(10)","a3ce5e50":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df6['marketing_channel'],\n                    y=df6['registration_goal'],\n                    name='Registration Goal',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df6['marketing_channel'],\n                    y=df6['sessions'],\n                    name='Sessions',\n                    marker_color='blue'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Registration Goal and Sessions By Marketing Channel BarChart\")","578dd5dc":"fig1 = px.pie(df6,\n                        values=df6['registration_conversion_rate'],\n                        names=df6['marketing_channel']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Conversion Rate By Marketing Channel PieChart\")","33590140":"query8 = \"\"\" SELECT landing_page , new_users , bounces , sessions,\n                                CASE WHEN sessions = 0 THEN 0 ELSE bounces \/ sessions END AS bounce_rate\n                                FROM (SELECT landing_page , COUNT(DISTINCT CASE WHEN visitNumber = 1 THEN fullvisitorId END) AS new_users , SUM(bounces) AS bounces , SUM(sessions) AS sessions\n                                FROM (SELECT fullVisitorId , visitStartTime , visitNumber , pagePath AS landing_page,\n                                CASE WHEN hitNumber = first_interaction THEN bounces ELSE 0 END AS bounces,\n                                CASE WHEN hitNumber = first_hit THEN visits ELSE 0 END AS sessions\n                                FROM (SELECT visitNumber , fullVisitorId , visitStartTime , hits.page.pagePath , totals.bounces , totals.visits , hits.hitNumber, MIN(IF(hits.isInteraction IS NOT NULL,\n                                hits.hitNumber,0)) OVER (PARTITION BY fullVisitorId, visitStartTime) AS first_interaction,MIN(hits.hitNumber) OVER (PARTITION BY fullVisitorId, visitStartTime) AS first_hit\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) AS hits ))\n                                GROUP BY landing_page)\n                                ORDER BY sessions DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query8)","39c98543":"df7 = dataset.query_to_pandas_safe(query8)","061106c7":"df7.head(10)","cacf3f9a":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df7['landing_page'],\n                    y=df7['bounces'],\n                    name='Bounce',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df7['landing_page'],\n                    y=df7['sessions'],\n                    name='Session',\n                    marker_color='lightsalmon'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Landing Page Stats By Users BarChart\")","b30f3b91":"fig1 = px.pie(df7,\n                        values=df7['new_users'],\n                        names=df7['landing_page']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Landing Pages New Users PieChart\" )","477bdcee":"query9 = \"\"\"SELECT landing_page , pageviews , exits, CASE WHEN pageviews = 0 THEN 0 ELSE exits \/ pageviews END AS exit_rate\n                                FROM (SELECT pagepath AS landing_page , COUNT(*) AS pageviews , SUM(exits) AS exits\n                                FROM (SELECT hits.page.pagePath , CASE WHEN hits.isExit IS NOT NULL THEN 1 ELSE 0 END AS exits\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) AS hits\n                                WHERE hits.type = 'PAGE')\n                                GROUP BY pagePath)\n                                ORDER BY pageviews DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query9)","d8ebc6f8":"df8 = dataset.query_to_pandas_safe(query9)","cec01a60":"df8.head(10)","e03a2343":"fig = px.bar(\n                df8,\n                x='landing_page',\n                y='pageviews',\n                color='landing_page',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Total Pageviews By Landing Page BarChart\")","66b72bc1":"fig1 = px.pie(df8,\n                        values=df8['exits'],\n                        names=df8['landing_page']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500  , title = \"Total Exists By Landing Page PieChart\")","df1880e9":"query10 = \"\"\"SELECT deviceCategory AS device_category , COUNT(hit_number) AS hit_number , ROUND(SUM(bounces)\/SUM(sessions)*100,2) AS bounce_rate\n                                FROM ( SELECT device.deviceCategory , hits.hitNumber AS hit_number, COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n                                       COUNT(DISTINCT CASE WHEN totals.bounces = 1 THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) END) AS bounces\n                                       FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) AS hits\n                                       GROUP BY deviceCategory , hitNumber , fullvisitorid , visitid , date)\n                                       GROUP BY device_category\n                                       ORDER BY bounce_rate DESC\n                                       LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query10)","856d1cfe":"df9 = dataset.query_to_pandas_safe(query10)","6f469bd1":"df9.head(10)","30e59327":"fig = px.bar(\n                df9,\n                x='device_category',\n                y='bounce_rate',\n                color='device_category',\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Bounce Rate By Landing Pages Device Category BarChart\" )","17a4d2a0":"fig1 = px.pie(df9,\n                        values=df9['hit_number'],\n                        names=df9['device_category']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Total Hit Number By Landing Pages Device Category PieChart\")","d2c21201":"query11 = \"\"\"SELECT product.v2ProductCategory AS product_category, COUNT(DISTINCT hits.transaction.transactionId) as transactions, SUM(hits.transaction.transactionRevenue\/1000000) AS total_revenue\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`,  UNNEST (hits) AS hits, UNNEST(hits.product) AS product\n                                WHERE totals.visits = 1\n                                GROUP BY product_category\n                                ORDER BY total_revenue DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query11)","208c00a6":"df10 = dataset.query_to_pandas_safe(query11)","91931103":"df10['product_category'][1] = 'Collections'\ndf10.head(10)","158e3a8f":"fig = px.bar(\n                df10,\n                x='product_category',\n                y='transactions',\n                color='product_category',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Total Transactions By Product Category BarChart\")","ada4f83b":"fig1 = px.pie(df10,\n                        values=df10['total_revenue'],\n                        names=df10['product_category']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Total Revenue By Product Category PieChart\" )","a04b96d7":"query12 = \"\"\" SELECT product.v2ProductName AS product_name,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"1\" THEN 1 END) AS productListView,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"2\" THEN 1 END) AS productDetailView,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"3\" THEN 1 END) AS addToCart,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"4\" THEN 1 END) AS removeToCart,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"5\" THEN 1 END) AS checkout,\n                                SUM(CASE WHEN hits.eCommerceAction.action_type = \"6\" THEN 1 END) AS transaction,\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` , UNNEST (hits) hits, UNNEST (hits.product) product\n                                GROUP BY product_name\n                                ORDER BY transaction DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query12)","6d7af397":"df11 = dataset.query_to_pandas_safe(query12)","a0f6e529":"df11.head(10)","5357e39e":"fig = go.Figure()\nfig.add_trace(go.Bar(\n                    x=df11['product_name'],\n                    y=df11['productListView'],\n                    name='ProductListView',\n                    marker_color='indianred'\n                    ))\nfig.add_trace(go.Bar(\n                    x=df11['product_name'],\n                    y=df11['productDetailView'],\n                    name='ProductDetailView',\n                    marker_color='lightsalmon'\n                    ))\nfig.update_layout(width = 1300 , height = 700 , title = \"Product Views By Product Category BarChart\")","3542a3d9":"fig1 = px.pie(df11,\n                        values=df11['transaction'],\n                        names=df11['product_name']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Total Transactions By Product Group PieChart\")","7ba64094":"query13 = \"\"\"SELECT geoNetwork.country AS country , SUM(hits.transaction.transactionRevenue\/1000000000) AS total_revenue_b\n                                FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`, UNNEST (hits) AS hits\n                                GROUP BY country\n                                ORDER BY total_revenue_b desc\n                                LIMIT 9 ; \"\"\"\n\ndataset.estimate_query_size(query13)","f97fbce3":"df12 = dataset.query_to_pandas_safe(query13)","038c33de":"df12.columns = ['Country' , 'Total_revenue_b']\ndf12.head(10)","a27326c0":"fig = px.bar(\n                df12,\n                x='Country',\n                y='Total_revenue_b',\n                color='Country',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Total Revenue By Country BarChart\")","ad87249b":"fig1 = px.pie(df12,\n                        values=df12['Total_revenue_b'],\n                        names=df12['Country']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500  , title = \"Total Revenue By Country PieChart\")","ea6088ff":"fig2 = go.Figure(data= go.Choropleth(\n            locations= df12['Country'],\n            z = df12['Total_revenue_b'].astype(float),\n            locationmode = 'country names',\n            colorscale = 'Reds',\n            colorbar_title = \"Total Revenue in Billion Dollars\",\n            ))\nfig2.update_layout( width = 1100 , height = 500 , title = \"Total Revenue By Country Choropleth Map\" )","56ae7997":"query14 = \"\"\" SELECT browser, bounces, sessions, ROUND(bounces\/sessions*100,2) AS bounce_rate\n                                FROM ( SELECT device.Browser AS browser, COUNT(DISTINCT CONCAT(fullvisitorId, CAST(visitId AS string), date)) AS sessions,\n                                COUNT(DISTINCT CASE WHEN totals.bounces = 1 THEN CONCAT(fullvisitorId, CAST(visitId AS string), date) END) AS bounces\n                                FROM  `bigquery-public-data.google_analytics_sample.ga_sessions_*`, UNNEST (hits) AS hits\n                                WHERE totals.visits = 1\n                                GROUP BY browser)\n                                ORDER BY sessions DESC\n                                LIMIT 10 \"\"\"\n\ndataset.estimate_query_size(query14)","8d6634b5":"df13 = dataset.query_to_pandas_safe(query14)","7bc5c0ab":"df13.head(10)","c925b357":"fig = px.bar(\n                df13,\n                x='browser',\n                y='bounces',\n                color='browser',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Browser's Bounces BarChart\")","f84158f7":"fig1 = px.pie(df13,\n                        values=df13['sessions'],\n                        names=df13['browser']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Browser's Sessions PieChart\")","84e19e53":"query15 = \"\"\"SELECT  device.browser, SUM ( totals.transactions ) AS total_transactions\n                                    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`\n                                    GROUP BY  device.browser\n                                    ORDER BY total_transactions DESC ; \"\"\"\n\ndataset.estimate_query_size(query15)","58037d62":"df14 = dataset.query_to_pandas_safe(query15)","a6327cb9":"df14 = df14[~(df14['total_transactions'].isnull())]\ndf14['total_transactions'] = df14['total_transactions'].astype(int)\ndf14.head(10)","6553ef6e":"fig = px.bar(\n                df14,\n                x='browser',\n                y='total_transactions',\n                color='browser',\n\n            )\nfig.update_layout(width = 1100 , height = 500 , title = \"Browser's Total Transactions BarChart\")","da8a8d29":"fig1 = px.pie(df14,\n                        values=df14['total_transactions'],\n                        names=df14['browser']\n                        )\nfig1.update_traces(\n                        textposition='inside',\n                        textinfo='percent+label'\n                        )\nfig1.update_layout( width = 1100 , height = 500 , title = \"Browser's Total Transactions PieChart\")","80d715de":"# 2. Channel Acquisition\n\nIn this section , The web page's general marketing strategy analyzed and visualized with channel acquisition , customer engagement and etc.","cf3802a0":"### iiiii. Goal Conversion Rate By Channels","e5fd0d62":"# 3. Landing Pages\n\nIn this section , The web page's general characteristic and performance analyzed and visualized with device category , bounce and exit rates.","fb48b05b":"### i. Customer Engagement","28ed62b6":"### i. Total Revenue By Countries","86293f92":"### iii. Total Transactions of Browsers","793932be":"### iii. Total Revenue By Channels","41984c2f":"# 5. Basic Metrics\n\nIn this section , The total transactions and performance of product and performance analyzed and visualized with browser choices and bounce rates.","95f126df":"### i. New User Percent By Country","420d6794":"### ii. Bounce Rates of Browsers","9df1b40d":"### iii. Device Category Bounce Rates","5476c2f9":"### iiii. Conversion Rate By Channels","a1576b44":"### ii. Landing Page Exit Rates","42a10f67":"# 1. Customer Overview\n\nIn this section , The total user's general characteristic analyzed and visualized with demographic features.","d7ed1fa8":"### ii. PageViews Stats By Continent","b39f702b":"# 4. Product Performance\n\nIn this section , The products general characteristic and performance analyzed and visualized with property categories and customer choices.","5430942b":"### i. Landing Page Bounce Rates","8e90c71f":"### ii. Customer Shopping Behaviour","710360b5":"### ii. Total Revenue By Webpages","b1f242bd":"### i. Total Revenue By Category"}}