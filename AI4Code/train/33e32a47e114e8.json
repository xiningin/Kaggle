{"cell_type":{"64c2c05f":"code","ee286c70":"code","4f331d6b":"code","835947a6":"code","cd1147ee":"code","73c72308":"code","3761a6e8":"code","05a6427b":"code","288c519a":"code","e0754806":"code","ee910268":"code","1f9fc673":"code","94ed3876":"code","6f65e6f7":"code","1e0da625":"code","9a376bf0":"code","10786816":"code","7049e582":"code","e8f74072":"code","19c079d4":"code","87bc4f00":"code","47318ae6":"code","2151db07":"code","590939da":"code","875aa27c":"code","b6fccea5":"code","42b41adc":"code","2deff945":"code","ee64c01f":"markdown","6838ea1d":"markdown","a7f4cf76":"markdown","ac5fae6d":"markdown","3b539fc2":"markdown","26c70bc2":"markdown","660b2e74":"markdown","2dd130cf":"markdown","d993dd8f":"markdown","f884769a":"markdown","0df6c543":"markdown","c94bd345":"markdown","94884ae5":"markdown","d63e9d6c":"markdown","ca42fb57":"markdown","b3b6a157":"markdown","5c7b4cb8":"markdown","8acd996d":"markdown","9da652f3":"markdown","57de8983":"markdown","e2f74c8e":"markdown","3ca9d988":"markdown","82d55941":"markdown","ffe9bdda":"markdown","33cf25e6":"markdown","c0fcf6da":"markdown","40fb54ab":"markdown","7ffa6d2f":"markdown"},"source":{"64c2c05f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Import library and dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style=\"whitegrid\", font_scale=1.75)\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\nimport math\n\nimport matplotlib.pyplot as plt\n\n# prettify plots\\n\nplt.rcParams['figure.figsize'] = [20.0, 5.0]\n    \n%matplotlib inline\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee286c70":"def calculate_percentage(dataframe: pd.DataFrame):\n    column_names = list(dataframe.columns)\n    new_dataframe = dataframe.copy()\n    total_values = {}\n    valid_values_count = {}\n    for index, each_row in new_dataframe.iterrows():\n        total_values[index] = 0\n        valid_values_count[index] = 0\n        for each_column in column_names:\n            if (not np.isnan(each_row[each_column])) and (each_row[each_column] > 0.0):\n                total_values[index] = total_values[index] + each_row[each_column]\n                valid_values_count[index] = valid_values_count[index] + 1\n\n    for index, each_row in new_dataframe.iterrows():\n        for target_column in column_names:\n            if np.isnan(each_row[target_column]) or (each_row[target_column] == 0.0):\n                each_row[target_column] = 0\n            else:\n                each_row[target_column] = each_row[target_column] \/ total_values[index] if total_values[index] > 0 else 0\n            each_row[target_column] = each_row[target_column] * 100\n\n    return new_dataframe","4f331d6b":"apps_dataframe = pd.read_csv('\/kaggle\/input\/google-play-store-apps-extended\/extended_googleplaystore.csv')\nprint('extended_googleplaystore dataset')\nprint(\"Column count:\", len(apps_dataframe.columns))\napps_dataframe.dtypes\n","835947a6":"reviews_dataframe = pd.read_csv('\/kaggle\/input\/google-play-store-apps-extended\/extended_googleplaystore_user_reviews.csv')\ncolumns=['sentiment_polarity','sentiment_polarity_summarised','sentiment_subjectivity','sentiment_subjectivity_summarised','spelling_quality','spelling_quality_summarised']\nreviews_dataframe[columns] = reviews_dataframe[columns].fillna('N\/A')\n\nprint('extended_googleplaystore_user_reviews dataset')\nprint(\"Column count:\", len(reviews_dataframe.columns))\nreviews_dataframe.dtypes\n","cd1147ee":"apps_rated_0_to_2_5_filter = (apps_dataframe.Rating >= 0) & (apps_dataframe.Rating < 2.5)\nselected_columns = ['App', 'Rating', 'Reviews', 'No_reviews_count', 'Reviews_present_count']\napps_rated_0_to_2_5_dataframe = apps_dataframe[apps_rated_0_to_2_5_filter][selected_columns]\napps_rated_0_to_2_5_dataframe","73c72308":"selected_columns = ['App', 'Translated_Review', 'sentiment_polarity_summarised']\nreviews_dataframe[selected_columns]","3761a6e8":"reviews_rated_0_to_2_5_dataframe = apps_rated_0_to_2_5_dataframe.merge(reviews_dataframe[selected_columns], on='App')\nreviews_rated_0_to_2_5_dataframe","05a6427b":"apps_rated_2_5_to_3_5_filter = (apps_dataframe.Rating >= 2.5) & (apps_dataframe.Rating <= 3.5)\nselected_columns = ['App', 'Rating', 'Reviews', 'No_reviews_count', 'Reviews_present_count']\napps_rated_2_5_to_3_5_dataframe = apps_dataframe[apps_rated_2_5_to_3_5_filter][selected_columns]\napps_rated_2_5_to_3_5_dataframe","288c519a":"selected_columns = ['App', 'Translated_Review', 'sentiment_polarity_summarised']\nreviews_dataframe[selected_columns]","e0754806":"reviews_rated_2_5_to_3_5_dataframe = apps_rated_2_5_to_3_5_dataframe.merge(reviews_dataframe[selected_columns], on='App')\nreviews_rated_2_5_to_3_5_dataframe_pivot = reviews_rated_2_5_to_3_5_dataframe.pivot_table('Rating', \n                                                                                          columns='sentiment_polarity_summarised', index='App', aggfunc='count')\nselected_columns = ['Positive', 'Neutral', 'Negative']\nreviews_rated_2_5_to_3_5_dataframe_pivot = reviews_rated_2_5_to_3_5_dataframe_pivot[selected_columns]\nreviews_rated_2_5_to_3_5_dataframe_pivot = calculate_percentage(reviews_rated_2_5_to_3_5_dataframe_pivot)\nreviews_rated_2_5_to_3_5_dataframe_pivot = reviews_rated_2_5_to_3_5_dataframe_pivot.sort_values(by=['Neutral', 'Positive', 'Negative'], ascending=False)\nzero_counts_filter = (reviews_rated_2_5_to_3_5_dataframe_pivot.Positive != 0.0) & (reviews_rated_2_5_to_3_5_dataframe_pivot.Neutral != 0.0) & (reviews_rated_2_5_to_3_5_dataframe_pivot.Negative != 0.0)\nreviews_rated_2_5_to_3_5_dataframe_pivot = reviews_rated_2_5_to_3_5_dataframe_pivot[zero_counts_filter]\nreviews_rated_2_5_to_3_5_dataframe_pivot","ee910268":"plt.rcParams['figure.figsize'] = [20.0, 15.0]\nreviews_rated_2_5_to_3_5_dataframe_pivot.plot(kind='barh', stacked=True)","1f9fc673":"print(f'{len(reviews_rated_2_5_to_3_5_dataframe_pivot)} Apps with rating between 2.5 and 3.5, many without reviews')\nprint(f'Positive sentiments: {round(reviews_rated_2_5_to_3_5_dataframe_pivot[\"Positive\"].mean(), 3)}%')\nprint(f'Neutral sentiments: {round(reviews_rated_2_5_to_3_5_dataframe_pivot[\"Neutral\"].mean(), 3)}%')\nprint(f'Negative sentiments: {round(reviews_rated_2_5_to_3_5_dataframe_pivot[\"Negative\"].mean(), 3)}%')","94ed3876":"apps_rated_3_5_to_5_filter = (apps_dataframe.Rating >= 3.5)\nselected_columns = ['App', 'Rating', 'Reviews', 'No_reviews_count', 'Reviews_present_count']\napps_rated_3_5_to_5_dataframe = apps_dataframe[apps_rated_3_5_to_5_filter][selected_columns]\napps_rated_3_5_to_5_dataframe","6f65e6f7":"selected_columns = ['App', 'Translated_Review', 'sentiment_polarity_summarised']\nreviews_rated_3_5_to_5_dataframe = apps_rated_3_5_to_5_dataframe.merge(reviews_dataframe[selected_columns], on='App')\nreviews_rated_3_5_to_5_dataframe_pivot = reviews_rated_3_5_to_5_dataframe.pivot_table('Rating', \n                                                                                          columns='sentiment_polarity_summarised', index='App', aggfunc='count')\nselected_columns = ['Positive', 'Neutral', 'Negative']\nreviews_rated_3_5_to_5_dataframe_pivot = reviews_rated_3_5_to_5_dataframe_pivot[selected_columns]\nreviews_rated_3_5_to_5_dataframe_pivot = calculate_percentage(reviews_rated_3_5_to_5_dataframe_pivot)\nzero_counts_filter = (reviews_rated_3_5_to_5_dataframe_pivot.Positive != 0.0) & (reviews_rated_3_5_to_5_dataframe_pivot.Neutral != 0.0) & (reviews_rated_3_5_to_5_dataframe_pivot.Negative != 0.0)\nreviews_rated_3_5_to_5_dataframe_pivot = reviews_rated_3_5_to_5_dataframe_pivot[zero_counts_filter].sort_values(by=['Positive', 'Neutral'], ascending=False)\nreviews_rated_3_5_to_5_dataframe_pivot","1e0da625":"plt.rcParams['figure.figsize'] = [20.0, 20.0]\nreviews_rated_3_5_to_5_dataframe_pivot[0:50].plot(kind='barh', stacked=True)","9a376bf0":"print(f'{len(reviews_rated_3_5_to_5_dataframe_pivot)} Apps with rating between 3.5 and 5, many without reviews')\nprint(f'Positive sentiments: {round(reviews_rated_3_5_to_5_dataframe_pivot[\"Positive\"].mean(), 3)}%')\nprint(f'Neutral sentiments: {round(reviews_rated_3_5_to_5_dataframe_pivot[\"Neutral\"].mean(), 3)}%')\nprint(f'Negative sentiments: {round(reviews_rated_3_5_to_5_dataframe_pivot[\"Negative\"].mean(), 3)}%')","10786816":"selected_columns = ['App', 'Rating']\napps_with_ratings_dataframe = apps_dataframe[selected_columns]\napps_with_ratings_dataframe","7049e582":"selected_columns = ['App', 'Translated_Review', 'sentiment_polarity_score_adjusted']\n\nreviews_dataframe['sentiment_polarity_score_adjusted'] = reviews_dataframe['sentiment_polarity_score'] + reviews_dataframe['sentiment_polarity_score'].min()\n\nreviews_with_sentiment_score_dataframe = reviews_dataframe[selected_columns].pivot_table('sentiment_polarity_score_adjusted', index='App', aggfunc='mean')\nreviews_with_sentiment_score_dataframe","e8f74072":"def min_max_normalise(data):\n    return (data - data.min())\/ (data.max() - data.min())\n\napps_with_ratings_and_sentiment_score_df = pd.merge(apps_with_ratings_dataframe, reviews_with_sentiment_score_dataframe, on='App')\napps_with_ratings_and_sentiment_score_df['Rating'] = min_max_normalise(apps_with_ratings_and_sentiment_score_df['Rating'])\napps_with_ratings_and_sentiment_score_df['sentiment_polarity_score_adjusted'] = min_max_normalise(apps_with_ratings_and_sentiment_score_df['sentiment_polarity_score_adjusted'])\napps_with_ratings_and_sentiment_score_df","19c079d4":"plt.rcParams['figure.figsize'] = [25.0, 10.0]\napps_with_ratings_and_sentiment_score_df[['Rating', 'sentiment_polarity_score_adjusted']].plot()","87bc4f00":"apps_with_ratings_and_sentiment_score_df['rating_review_diff'] = apps_with_ratings_and_sentiment_score_df['Rating'] - \\\n                                                                 apps_with_ratings_and_sentiment_score_df['sentiment_polarity_score_adjusted']\nprint(f\"Mean difference of {round(apps_with_ratings_and_sentiment_score_df['rating_review_diff'].mean() * 100, 3)}% \"\\\n       \"between the Rating and Review intent\/meaning\/sentiment\")","47318ae6":"apps_with_ratings_and_sentiment_score_df['rating_review_diff'].hist()","2151db07":"selected_columns = ['grammar_check_score_scaled', 'spelling_quality_score_scaled']\nreviews_dataframe['grammar_check_score_scaled'] = 1 - min_max_normalise(reviews_dataframe['grammar_check_score'])\nreviews_dataframe['spelling_quality_score_scaled'] = min_max_normalise(reviews_dataframe['spelling_quality_score'])\nspelling_grammar_check_reviews_dataframe = reviews_dataframe[selected_columns].dropna()\nspelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'] = spelling_grammar_check_reviews_dataframe['grammar_check_score_scaled'] - spelling_grammar_check_reviews_dataframe['spelling_quality_score_scaled']\nspelling_grammar_check_reviews_dataframe","590939da":"spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'].hist(bins=10)","875aa27c":"spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'].describe(\n    percentiles=[0.05, 0.1, 0.2, 0.25, 0.3, 0.4, 0.5, 0.6, 0.7, 0.75, 0.8, 0.9]\n)","b6fccea5":"near_zero_filter = spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'] <= 0.2\ntotal_reviews = spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'].shape[0]\nprint(f'All reviews: {total_reviews}')\nnear_zero_reviews = spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'][near_zero_filter].shape[0]\nprint(f'Reviews near 0.0 (meaning aligned with each other): {near_zero_reviews} ({round(near_zero_reviews \/ total_reviews * 100, 2)}%)')\nfar_from_zero_reviews = spelling_grammar_check_reviews_dataframe['spelling_grammar_scaled_diff'][~near_zero_filter].shape[0]\nprint(f'Reviews further away from 0.0 (meaning less and less aligned with each other): {far_from_zero_reviews} ({round(far_from_zero_reviews \/ total_reviews * 100, 2)}%)')\n","42b41adc":"import math\ndef apply_summarised(value):\n    if value == 'No issues':\n        return value\n    return 'One or more issues'\n\nplt.rcParams['figure.figsize'] = [5.0, 10.0]\nreviews_dataframe['grammar_check_summarised'] = reviews_dataframe['grammar_check'].apply(apply_summarised)","2deff945":"plt.rcParams['figure.figsize'] = [20.0, 8.0]\nplt.subplot(1, 2, 1)\nplt.title('Spelling quality checks')\nreviews_dataframe['spelling_quality_summarised'].hist(stacked=True)\nplt.subplot(1, 2, 2)\nplt.title('Grammar checks')\nreviews_dataframe['grammar_check_summarised'].hist(stacked=True)","ee64c01f":"<a id='hypothesis-4'><\/a>\n\n----------\n\n### Ratings v\/s Review sentiments: Ratings will be reflected by the Review sentiment and vice-versa","6838ea1d":"<a id='hypothesis-3'><\/a>\n\n----------\n### Hypothesis 3: Apps with Ratings 3.5 to 5 would have more positive sentiment Reviews","a7f4cf76":"<a id='Conclusions'><\/a>\n\n----------\n\n## Conclusions","ac5fae6d":"### Commonly used variables and functions","3b539fc2":"<i><p style=\"font-size:22px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\"> All the assumptions and conclusions made so far should be taken with a grain of salt, and reconsidered for further investigations. We may be basing our conclusions and ideas on top of data\/values\/results that might need further investigations or might be only partially correct or valid. For e.g. the Sentiment Polarity score is calculated on Reviews that may contain spelling errors and\/or grammatical errors, which can dampen the score fully or partially. Since our Spellings and Grammar scores indicate that there are issues all across the texts. Although our tools are not perfect and it's important to know their short-comings and be transparent about it (we know that the Spellings analysis results can only be **70%** reliable.","26c70bc2":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","660b2e74":"### Prequels\/sequels\n- ChaiEDA sessions: [ChaiEDA: Google Play Store Apps (data-prep)](https:\/\/www.kaggle.com\/neomatrix369\/chaieda-google-play-store-apps-data-prep\/) | [Dataset](https:\/\/www.kaggle.com\/neomatrix369\/google-play-store-apps-extended)\n- **ChaiEDA sessions: ChaiEDA: Google Play Store Apps - review analysis**","2dd130cf":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","d993dd8f":"<a id='ToC'><\/a>\n\n----------\n\n# Table of contents\n\n- [Summary](#summary)\n- [Import libraries\/packages](#import-libraries)\n- [Loading datasets](#datasets)\n- Hypothesis\n  - [Hypothesis 1 - Apps with Ratings 1 to 2.5 would have more negative sentiment Reviews](#hypothesis-1)\n  - [Hypothesis 2 - Apps with Ratings 2.5 to 3.5 would have more neutral sentiment Reviews](#hypothesis-2)\n  - [Hypothesis 3 - Apps with Ratings 3.5 to 5 would have more positive sentiment Reviews](#hypothesis-3)\n  - [Hypothesis 4 - Ratings v\/s Review sentiments: Ratings will be reflected by the Review sentiment and vice-versa](#hypothesis-4)\n  - [Hypothesis 5 - Spelling and Grammar checks are directly co-related](#hypothesis-5)\n- [Conclusions](#Conclusions)","f884769a":"<i><p style=\"font-size:18px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\">Of the 747 apps that have ratings between 2.5 to 3.5, only 24 Apps have reviews in the reviews dataset. Many do not have any reviews about them, just a rating. Although we were expecting most of them to have **Neutral** review sentiment but there are relatively less number of Apps with **Neutral** review sentiments (only ~24%) and more **Positive** and **Negative** sentiments (they add up to 47.5% + 28.3% = 75.8%). This imbalance could be due to the behaviours from the users or the reviews did not get translated (or it's a data issue).","0df6c543":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","c94bd345":"<i><p style=\"font-size:18px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\">From the above we can see that there isn't a close alignment with the Rating and sentinment of the Reviews made by the user of the App. And from the above it seems that there are instances when they are opposite in meaning. Overall they are not in sync and out-of-step by about 0.264 units of each other. In order words, the intent or meaning or sentiment expressed via Rating and Review are far apart from each other by _~26.455%_. Clearly only a very small portion of the time they are in sync, see from the frequency around 0.0 in the above histogram. The leaning towards the right and positive side of the number line also may indicate that the Rating is a bit exaggerated as compared to the sentiment expressed in the Reviews of the app or vice-versa.","94884ae5":"<i><p style=\"font-size:18px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\">Of the 7478 apps with ratings between 3.5 to 5 in the reviews dataset, only 676 Apps have reviews for the ratings. Many do not have any reviews about them, just a rating. Although we were expecting most of them to have a **Positive** sentiment and it appears that of the top 50 Apps with Ratings between 3.5 and 5, almost 62% have a **Positive** sentiment, which is more of less expected although the remaining ~38% are split between **Neutral** and **Negative** sentiments.","d63e9d6c":"<a id='hypothesis-2'><\/a>\n\n----------\n### Hypothesis 2: Apps with Ratings 2.5 to 3.5 would have more neutral sentiment Reviews","ca42fb57":"<a id='datasets'><\/a>\n\n----------\n\n\n# Loading datasets","b3b6a157":"### Prequels\/sequels\n- ChaiEDA sessions: [ChaiEDA: Google Play Store Apps (data-prep)](https:\/\/www.kaggle.com\/neomatrix369\/chaieda-google-play-store-apps-data-prep\/) | [Dataset](https:\/\/www.kaggle.com\/neomatrix369\/google-play-store-apps-extended)\n- **ChaiEDA sessions: ChaiEDA: Google Play Store Apps - review analysis**","5c7b4cb8":"<a id='hypothesis-5'><\/a>\n\n----------\n\n### Hypothesis 5 - Spelling and Grammar checks are directly co-related","8acd996d":"<a id='import-libraries'><\/a>\n\n----------\n\n# Import libraries\/packages","9da652f3":"<a id='hypothesis-1'><\/a>\n\n----------\n### Hypothesis 1: Apps with Ratings 1 to 2.5 would have more negative sentiment Reviews","57de8983":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","e2f74c8e":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","3ca9d988":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","82d55941":"<i><p style=\"font-size:18px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\">We could not find any reviews for apps rated  in the reviews dataset.\nOf the 197 apps that have ratings between 0 to 2.5, no (zero) Apps have reviews in the reviews dataset, just a rating. Although we were expecting most of them to have **Negative** review sentiment (and maybe some **Neutral** ones) but now it's hard to tell if no review has been left for the reason they were unhappy with the App or did they not get translated (or it's a data issue).","ffe9bdda":"<a id='summary'><\/a>\n\n----------\n\n> # Summary\n\n> As there are a number of angles to look at when just analysing the Reviews, here are a few to start with:\n\n> The dataset from data quality point of view has some missing data, to the extent they do impact the analysis, as we will see in the sections to follow. There are also discrepancies between the Review counts across the two tables (.csv files: googleplaystore.csv and googleplaystore_user_reviews.csv). These can be explored further but won't be discussed till later on. Althought when we look at them statistically, we only have a small portion of valid data to work on from a large corpus provided, most or many of the entries are laden with missing values or cross-wires between Ratings and Review sentiments.\n\n> From the hypothesis we can conclude that\n> - ### The Ratings do not always reflect the sentiments expressed in the reviews \n> - ### Especially, those apps with ratings between 2.5 and 3.5\n> - ### It's also unclear why there are not reviews at all for apps with ratings less then 2.5\n> - ### Many a times users give ratings but do not justify or throw light on them with their views by providing a review.\n> - ### We have instances when they are opposite in meaning or intent (contradictory)\n> - ### Ratings given to apps could be a bit exaggerated when compared to the sentiments expressed or vice-versa\n> - ### Spelling mistakes and\/or Grammatical errors can dampen the various scores (in this case the Sentiment Polarity Score) calculated on the Review text\n> \n> **Note: not all of the above points may hold ground due to the fact we are using estimated and aggregated results. Specifically speaking we only have an aggregated _Rating_ value per App (and not the distribution across all it's users) while we have Sentiment Polarity score per _Review_, so they cannot be easily equated. We all know 'mean' and 'mathematical average' functions can hide the true distribution. Also the Sentiment Polarity score is calculated on Reviews that may contain spelling errors and\/or grammatical errors, which can devalue or invalidate the score itself fully or partially. Our tools are not perfect and it's important to know their short-comings and be transparent about it.** \n ","33cf25e6":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>","c0fcf6da":"## Hypothesis","40fb54ab":"\n<i><p style=\"font-size:18px; background-color: #FFF1D7; border: 2px solid black; margin: 20px; padding: 20px;\">From the above histogram, we can see that to a big extent there is a direct corelation between the quality of the Spellings and Grammar scores, which means that when one is wrong the other is also wrong. Although this may not be 100% of the time times, the co-relations of the form **~90%** of times we are correlated while the rest of the **~10%** of times the Spelling\/Grammar scores \"may not be aligned enough\". Which overall makes sense and our hypothesis is more correct than wrong.","7ffa6d2f":"<a href='#ToC'><span class=\"label label-info\" style=\"font-size: 125%\">Back to Table of Contents<\/span><\/a>"}}