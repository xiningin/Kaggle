{"cell_type":{"8f1ddf3b":"code","c7ad1807":"code","8f5fb65b":"code","0765aa94":"code","360757b9":"code","0afc4307":"code","6c751c6b":"code","0c465934":"code","8b704cde":"code","009b754c":"code","c27a99d9":"code","a91a4500":"code","36e4b6dd":"code","7aa76868":"code","4f8f6296":"code","78b0befa":"code","4c5c866a":"code","2149578f":"code","0c1dcc6d":"code","3192ef2f":"code","2007d294":"code","22fb88f5":"code","bc337d85":"code","2d1ca8ac":"code","c3ac9c28":"code","8a6bc8d2":"code","286b218e":"code","6399d9f3":"code","80d08921":"code","3e6dea85":"code","74722981":"code","45d46387":"markdown","70ead803":"markdown","c808ee27":"markdown","dc3cee0d":"markdown","377b9301":"markdown","6bc7ec24":"markdown","f204c416":"markdown","a12b6098":"markdown","86c5de78":"markdown","a1fe3014":"markdown","303cc88b":"markdown","86c15065":"markdown","3c8daebe":"markdown","efdb99f9":"markdown","3005ef03":"markdown","e0c10e16":"markdown","3b95a79f":"markdown","624acc08":"markdown","b0b93515":"markdown","e29e192a":"markdown","de59a966":"markdown","a2a3e976":"markdown","a393be91":"markdown","e730a467":"markdown","8b476ae0":"markdown","14c5e163":"markdown","d8287f2e":"markdown","7bc05b73":"markdown","3c5849cc":"markdown","c22cf9a9":"markdown","6816e281":"markdown","0afebc27":"markdown","69156290":"markdown","5607e6c6":"markdown","e9c2a362":"markdown"},"source":{"8f1ddf3b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport warnings\nfrom IPython.core.display import display, HTML\n\nwarnings.filterwarnings('ignore')\ndisplay(HTML(\"<style>div.output_scroll { height: 44em; }<\/style>\"))\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n%matplotlib inline","c7ad1807":"airbnb = pd.read_csv(\"..\/input\/sep_madrid_airbnb.csv\")","8f5fb65b":"#Select all relevant columns\n\ndf_airbnb = airbnb[['listing_url', 'name', 'host_id','calculated_host_listings_count_entire_homes', 'neighbourhood_cleansed', 'neighbourhood_group_cleansed', 'zipcode',  'latitude', 'longitude', 'property_type', 'room_type', 'price', 'minimum_nights','number_of_reviews','availability_365', 'reviews_per_month']]","0765aa94":"# We take a peek at the dataset\n\ndf_airbnb.head(3)","360757b9":"#Checking the amount of rows of the given dataset.\n\nlen(df_airbnb)","0afc4307":"#Checking dtypes\n\ndf_airbnb.dtypes","6c751c6b":"#remove $ sign , commas, and leading and trailing white spaces. After that, convert it to float\n\ndf_airbnb['price'] = df_airbnb['price'].str.replace('[$,]','').str.strip().astype(np.float64)\n","0c465934":"df_airbnb.isnull().sum()","8b704cde":"df_airbnb.loc[df_airbnb.reviews_per_month.isnull()].head(5)","009b754c":"df_airbnb.fillna(value = {'reviews_per_month': 0}, inplace = True)","c27a99d9":"df_airbnb.fillna(value = {'zipcode': 'unknown'}, inplace = True)","a91a4500":"#setting figure size for future visualizations\n\nsns.set(rc={'figure.figsize':(10,8)})","36e4b6dd":"top_host = df_airbnb.host_id.value_counts().head(10)","7aa76868":"host_counts_plot = top_host.plot(kind='barh', title = 'Hosts with the most accommodations')\nhost_counts_plot.set_ylabel('Host ID')\nhost_counts_plot.set_xlabel('Accommodation count')","4f8f6296":"# We are going check some statistic about the distribution of acommodations per host id\n\ndf_airbnb.groupby('host_id').size().describe()","78b0befa":"# First of all, let's check the neighbourhoods in Madrid\n\ndf_airbnb[['neighbourhood_group_cleansed']].drop_duplicates().rename(columns = {'neighbourhood_group_cleansed': 'neighbourhood'})","4c5c866a":"# We'll use describe method to ouput all statistics grouped per neighbourhood\n\nneighbour_stats = df_airbnb.groupby(\"neighbourhood_group_cleansed\")[\"price\"].describe().T\nneighbour_stats","2149578f":"def extract_top_n(series, n = 1):\n    '''\n    Return top n values inside a series\n    '''\n    series_sort = series.sort_values(ascending = False)\n    return series_sort[0:n]","0c1dcc6d":"# Now we compute the two top n values from our stats table\n\nneighbour_stats.apply(extract_top_n, axis = 1,  n = 2)","3192ef2f":"pic_1=sns.boxplot(data=df_airbnb, y='neighbourhood_group_cleansed', x='price')\nax = pic_1.axes.set_xlim(0,800)","2007d294":"number_reviews_plot = df_airbnb.groupby('neighbourhood_group_cleansed')['number_of_reviews'].sum().sort_values(ascending = False).plot(kind = 'barh')\nnumber_reviews_plot.set_title('Number of reviews by district')\nnumber_reviews_plot.axes.set_xlim(0,50000)","22fb88f5":"# Now let's compute accommodations with zero or one reviews\n\nzero_reviews = df_airbnb.groupby('neighbourhood_group_cleansed')['number_of_reviews'].apply(lambda x: ((x <= 1).sum())\/len(x)).sort_values(ascending = False).plot(kind = 'barh')\nzero_reviews.set_title(\"Percentage of accommodations with 1 or 0 reviews\")","bc337d85":"#WFirst of all, we'll  filter out our two neighbourhoods: Vic\u00e1lvaro and San Blas - Canillejas \n\ndf_event = df_airbnb[df_airbnb.neighbourhood_group_cleansed.isin(['Vic\u00e1lvaro', 'San Blas - Canillejas'])]\n\n_names_ = []\n\n# Looping the names in each accommodation\n\nfor name in df_event.name:\n    _names_.append(name)\n    \n# Funtion for spliting words\n\ndef split_name(name):\n    '''\n    Return a list of words given a sentence\n    '''\n    splits = str(name).split()\n    return splits\n\n#Empty list for counting words.\n\n_names_for_count_ = []\n\n#getting name string from our list and using split function, later appending to list above\n\nfor x in _names_:\n    for word in split_name(x):\n        word = word.lower()\n        _names_for_count_.append(word)","2d1ca8ac":"#For counting word, wells use Counter class from collections package\n\nfrom collections import Counter\n\n#let's see top 10 used words by host to name their listing\n\n_top_w = Counter(_names_for_count_).most_common()\n_top_10_w = _top_w[0:10]\n_top_10_w","c3ac9c28":"#Let's see what we can do with our given longitude and latitude columns\n\n#We'll picture lat and long of the accommodations that contained words referencing the football match that took \n#place on June 1st\n\n\ndf_champions = df_airbnb.loc[df_airbnb.name.str.contains('junio |champion|wanda|estadio (?!Bernabeu)|(?<!Bernabeu) stadium|league|LIVERPOOL|TOTTENHAM|final|metropolitano', case=False, regex=True, na = False)]\n\npic_2=df_champions.plot(kind='scatter', x='longitude', y='latitude', label='availability_365', c='price',\n                  cmap=plt.get_cmap('jet'), colorbar=True, alpha=0.3, figsize=(10,8))\npic_2.legend()","8a6bc8d2":"import folium","286b218e":"m = folium.Map(\n    location = [40.4168, -3.7038],\n    tiles = 'Stamen Terrain',\n    zoom_start = 12             \n              )\ndf_champions.apply(lambda x: folium.Circle([x.latitude, x.longitude], 50, fill=True).add_to(m).add_to(m),axis = 1)\nfolium.Marker([40.4362, -3.5995], 'Wanda').add_to(m)\n\nm","6399d9f3":"df_airbnb_clean = df_airbnb[~df_airbnb.neighbourhood_group_cleansed.isin(['San Blas - Canillejas', 'Vic\u00e1lvaro'])]\ndf_airbnb_clean = df_airbnb_clean[~df_airbnb_clean.name.str.contains('junio |champion|wanda|estadio (?!Bernabeu)|(?<!Bernabeu) stadium|league|LIVERPOOL|TOTTENHAM|final|metropolitano', case=False, regex=True, na = False)]","80d08921":"pic_3=df_airbnb_clean.loc[df_airbnb_clean.price > 500].plot(kind='scatter', x='longitude', y='latitude', label='availability_365', c='price',\n                  cmap=plt.get_cmap('jet'), colorbar=True, alpha=0.3, figsize=(10,8))\npic_3.legend()","3e6dea85":"pic_4=sns.boxplot(data=df_airbnb_clean, y='neighbourhood_group_cleansed', x='price')\nax = pic_4.axes.set_xlim(0,800)","74722981":"neighbour_stats = df_airbnb_clean.groupby(\"neighbourhood_group_cleansed\")[\"price\"].describe().T.apply(extract_top_n, axis = 1,  n = 2)\nneighbour_stats ","45d46387":"Now we'll use Folium library to visualize it on an interactive map. For people who don't know, Folium is a wrapper for leaflet library that allows us to plot points, geojson and topojson files, etc. on an interactive map.","70ead803":"***Analysing statistcs grouped by neighbourhood***","c808ee27":"***Filling NA values for variable reviews_per_month***","dc3cee0d":"Because we have latitude and longitude, we can apply some geospatial EDA.","377b9301":"A good measure to find if there's been an event in a city is obtaining some metrics about the reviews. In the prospect of a huge event that brings tourism, people may take advantage of it to rent rooms or complete aparments at a higher price than in a normal situation. So it seems fair to suppose that accommodation with zero or one reviews will increase.","6bc7ec24":"## Importing data","f204c416":"## GEOSPATIAL EDA","a12b6098":"There are some NA values, some may be more relevant than others. We have:\n\n<ul>\n    <li>reviews_per_month: 4654 seems relevant, so we should analyze if we can infer this value.<\/li>    \n    <li>zipcode: it represents 2% of the total: if we want to calculate some statistics over this one, we can fill this value with \"other\" for example<\/li>\n    <li>name: this accommodation post just simply doesn't have a name <\/li>\n    \n<\/ul>\n\n\n\nLet's check each NA in order to decide what to do with them","86c5de78":"A interesting analysis would be to check hown many accommodations top hosts have and explore some statistics grouped by hosts. ","a1fe3014":"In order to complement our former table so we can extract more insights, we'll boxplot price grouped by neighbourhood.","303cc88b":"## SO ON 1JUNE <sup>st<\/sup> , IT TOOK PLACE ON WANDA METROPOLITANO  CHAMPIONS LEAGUE  FINAL","86c15065":"<p>This notebook will analize a scraped airbnb dataset from Madrid county (Spain). It's downloaded from <a> http:\/\/insideairbnb.com\/get-the-data.html <\/a> <\/p>","3c8daebe":"----------------","efdb99f9":"***Top host***","3005ef03":"<p> The former table and the boxplot gives ous some key information: <\/p>\n\n<ul>\n    <li>The two neighbourhoods with most accommodations are Centro (as expected) and Barrio de Salamanca. Barrio Salamanca is near the city centre and a quiet neighbourhood with many services and nice apartments, so it seems fair that people want to stay there for visiting. <\/li>   \n    <li>There are plenty of outliers with high prices in Centro, Salamanca, Chamber\u00ed and Retiro. It seems that these are neighbourhoods with luxury rentals.<\/li>  \n    <li>It seems that there is a high gap between 50 and 70 percentile in Vic\u00e1lvaro and San Blas - Canillejas. This may be some <b> signal of speculation <\/b> responding to some event. We'll investigate deeper to find the cause. <\/li>  \n    \n<\/ul>\n","e0c10e16":"The former table is difficult to analyse, so we will write a function to extract the top n metrics","3b95a79f":"***Let's find why Vic\u00e1lvaro and San Blas - Canillejas have this unusual distribution***","624acc08":"From the dtypes, we see that ***price*** is of type object. This is because it's written with the currency symbol and separated with commas. Let's deal with it:","b0b93515":"# WHAT HAPPENED ON JUNE 1<sup>st<\/sup> ?: the power of speculation","e29e192a":"The former dataset has a lot of columns. More insights could be arisen from it, but for this EDA we'll select the most relevant ones.","de59a966":"From the former df we see that reviews_per_month is NaN when there aren't reviews at all in the accommodation post. So the logic step would be filling these values with 0.","a2a3e976":"First of all, we import the libraries that we are going to need.","a393be91":"From the former statistics we appreciate as expected that mosts of the hosts have only 1 accomodations on rental, although, as well soon see, there's is a standar distribution that is affected by the outliers","e730a467":"In our data exploration, we'll make our analysis from left to the right. This isn't a rule of thumb, but it's better to have a roadmap so we don't skip any insights. We'll skip name column at first, so our first one is host_id","8b476ae0":"## Exploring data","14c5e163":"From the csv downloaded from the former url, we load the data into memory.","d8287f2e":"##\u00a0Understanding, tidying and transforming data","7bc05b73":"One thing we should always do, is counting the number of missing values.","3c5849cc":"***Filling NA values for variable Zipcode***","c22cf9a9":"![](https:\/\/i.imgur.com\/8zMFtTW.png)","6816e281":"## CONCLUSION","0afebc27":"<ol>\n    <li>As a result of Champions League final in Wanda Metropolitano Stadium, accommodations prices were exaggeratedly up. Most of them on neighbourhoods near Wanda stadium like San Blas - Canillejas and Vic\u00e1lvaro.<\/li>\n    <li>Neihbourhoods with the highest number of accommodations are Centro and Barrio de Salamanca.<\/li>\n    <li>Luxury aparments rentals are concentrated in Centro, Salamanca, Chamber\u00ed and Retiro. <\/li>        \n    <li>Top ten hosts have over 50 apartments or rooms on rental.<\/li>       \n<\/ol>\n\nAnd so on... This data set can reveal more interesting insights. To be continued...","69156290":"![](http:\/\/)","5607e6c6":"**There it is!**. Our hypothesis about the reviews was right. Vic\u00e1lvaro and San Blas - Canillejas increased a lot accommodations with zero or one reviews. So it seems that in the prospect of an event near this place, people took advantage to rent their accomodations.\n\nBecause we have the name attribute of our accommodation, we can check if there's information about the event. A good way would be counting words. ","e9c2a362":"***Cleaning data***\n\nIn order to plot accommodation rentals on a normal situation, we'll erase from the dataset the neighbourhoods San Blas-Canillejas and Vic\u00e1lvaro, as they are clearly affected by the event. Also, we'll delete accommodations with names referencing the event."}}