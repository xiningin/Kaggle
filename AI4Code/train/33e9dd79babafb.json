{"cell_type":{"d49149b5":"code","e2c10c41":"code","0a0c3437":"code","4c1a1f43":"code","f384eac0":"code","f60b1bad":"code","a2986328":"code","f7347365":"code","97361cfc":"code","24caac32":"code","424d3246":"code","4319caab":"code","aa1bab3d":"code","a57c6928":"code","11faf65e":"code","d8b59b16":"code","0232e857":"code","060efcf6":"markdown","2ec507b6":"markdown","879a5c99":"markdown","6dcf7080":"markdown","99d7fc1f":"markdown","90973210":"markdown","0ba54007":"markdown","32893155":"markdown"},"source":{"d49149b5":"import numpy as np\nimport pandas as pd\nfrom sklearn import tree\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import NullFormatter\nimport pylab as py\nimport matplotlib.ticker as ticker\nfrom sklearn import preprocessing\nimport collections\nimport matplotlib.image as mpimg\n%matplotlib inline","e2c10c41":"!pip install pydotplus","0a0c3437":"import pydotplus","4c1a1f43":"my_data=pd.read_csv('..\/input\/drug-classification\/drug200.csv',delimiter=',')\nmy_data[0:5]","f384eac0":"X=my_data[['Age', 'Sex', 'BP', 'Cholesterol','Na_to_K']].values\nX[0:5]","f60b1bad":"from sklearn.preprocessing import LabelEncoder\nle_sex = LabelEncoder()\nle_sex.fit([\"M\",\"F\"])\nX[:,1] = le_sex.transform(X[:,1])","a2986328":"le_BP = LabelEncoder()\nle_BP.fit([\"LOW\",\"NORMAL\",\"HIGH\"])\nX[:,2] = le_BP.transform(X[:,2])","f7347365":"le_chol = LabelEncoder()\nle_chol.fit([\"HIGH\",\"NORMAL\"])\nX[:,3] = le_chol.transform(X[:,3])","97361cfc":"y = my_data[\"Drug\"].values\ny[0:5]","24caac32":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.4, random_state = 2, stratify = y)","424d3246":"from sklearn.tree import DecisionTreeClassifier\ndrugTree = DecisionTreeClassifier(criterion = \"entropy\",max_depth = 4)\ndrugTree","4319caab":"print(\"Training Set: \", X_train.shape, y_train.shape)\nprint(\"Testing Set: \", X_test.shape, y_test.shape)","aa1bab3d":"drugTree.fit(X_train,y_train)","a57c6928":"predTree = drugTree.predict(X_test)\nprint(predTree[0:5])\nprint(y_test[0:5])","11faf65e":"from sklearn import metrics\nprint(\"The Accuracy Score is:\", metrics.accuracy_score(y_test,predTree))","d8b59b16":"data_feature_names = ['Age', 'Sex', 'BP', 'Cholesterol','Na_to_K']","0232e857":"\ndot_data = tree.export_graphviz(drugTree,\n                                feature_names=data_feature_names,\n                                out_file=None,\n                                filled=True,\n                                rounded=True)\ngraph = pydotplus.graph_from_dot_data(dot_data)\n\ncolors = ('turquoise', 'orange')\nedges = collections.defaultdict(list)\n\nfor edge in graph.get_edge_list():\n    edges[edge.get_source()].append(int(edge.get_destination()))\n\nfor edge in edges:\n    edges[edge].sort()    \n    for i in range(2):\n        dest = graph.get_node(str(edges[edge][i]))[0]\n        dest.set_fillcolor(colors[i])\nfilename = \"tree.png\"\ngraph.write_png(filename)\nimg = mpimg.imread(filename)\nplt.figure(figsize=(100,200))\nplt.imshow(img,interpolation = 'nearest')\nplt.show()","060efcf6":"# Evaluation","2ec507b6":"# Importing DecisionTreeClassifier","879a5c99":"# Converting Drug Types to Numerical Values ","6dcf7080":"# Preprocessing the data into X: Feature Matrix and y:Target Matrix","99d7fc1f":"# Visualization of Decision Tree","90973210":"# Import Libraries","0ba54007":"# Predicting Values using the model","32893155":"# Training The Model"}}