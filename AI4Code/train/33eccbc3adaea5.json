{"cell_type":{"fb93ee46":"code","141a88cf":"code","0d66350d":"code","b910bbab":"code","4a0e61f0":"code","788836b0":"code","47e8b95e":"code","ad4ddf2a":"code","df282997":"code","e47646b2":"code","19b7e335":"code","7730d7a1":"code","33eccef1":"code","8d4d144f":"code","1e7f36b5":"code","91e9100c":"code","9d424fe7":"code","7399d824":"code","14fcc797":"code","7230a016":"code","40d03cd6":"code","2c6409d5":"code","d3d4bd4a":"code","0f2a4eed":"code","53f811e7":"code","d66746fd":"code","e4c104ad":"code","92ed95fe":"code","2cb6db76":"code","198dc1c0":"code","9e514d6c":"code","5d9d3688":"code","4061bdd9":"code","f9620c8d":"code","0bd427de":"code","763b167b":"code","a01c0b7d":"code","4a30d0bd":"code","233c6143":"code","6fe68c77":"code","d20128fa":"code","256acb20":"code","dbcea6df":"code","caddcfbe":"code","8c45fec8":"code","1097ddc3":"code","61fd0207":"code","ded61657":"code","5047da0e":"code","c505c06c":"code","a6f39c5b":"code","d8768d33":"code","192d3209":"code","f60f8f2e":"code","1addae72":"code","ad37a66c":"code","d962427d":"code","702eb0f7":"code","1aee309f":"code","918cf346":"code","dc07c5ea":"code","c7bad23a":"code","f75f7e5a":"code","b16e9794":"code","a15083ad":"code","16469f8b":"markdown"},"source":{"fb93ee46":"import pandas as pd\nbank=pd.read_csv(\"..\/input\/cusersmarildownloadsgermancsv\/german.csv\",sep=';' )\nbank.head()","141a88cf":"bank.info()","0d66350d":"bank.Account_Balance.value_counts()*100 \/ len(bank)","b910bbab":"bank=bank.replace({'Account_Balance' : { 1 : 'No Account', 2 : 'None',3: 'Below 200 DM',4:'200 DM or Above'}})\nbank.Account_Balance.value_counts()*100 \/ len(bank)","4a0e61f0":"bank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","788836b0":"bank=bank.replace({'Payment_Status_of_Previous_Credit' : {0:'Delayed',1 : 'Other Credits', 2 : 'Paid Up',\n                                                          3: 'No Problem with Current Credits',4:'Previous Credits Paid'}})\nbank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","47e8b95e":"bank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","ad4ddf2a":"bank=bank.replace({'Value_Savings_Stocks' : {1 : 'None', 2 : 'Below 100 DM',\n                                                          3: '[100, 500)',4:'[500, 1000)',5:'Above 1000'}})\nbank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","df282997":"bank.Length_of_current_employment.value_counts()*100 \/ len(bank)","e47646b2":"bank=bank.replace({'Length_of_current_employment' : {1 : 'Unemployed', 2 : '<1 Year',\n                                                          3: '[1, 4)',4:'[4, 7)',5:'Above 7'}})\nbank.Length_of_current_employment.value_counts()*100 \/ len(bank)","19b7e335":"bank.Instalment_per_cent.value_counts()*100 \/ len(bank)","7730d7a1":"bank=bank.replace({'Instalment_per_cent' : {1 : 'Above 35%', 2 : '(25%, 35%)',\n                                                          3: '[20%, 25%)',4:'Below 20%'}})\nbank.Instalment_per_cent.value_counts()*100 \/ len(bank)","33eccef1":"bank.Occupation.value_counts()*100 \/ len(bank)","8d4d144f":"bank=bank.replace({'Occupation' : {1 : 'Unemployed, unskilled', 2 : 'Unskilled Permanent Resident',\n                                                          3: 'Skilled',4:'Executive'}})\nbank.Occupation.value_counts()*100 \/ len(bank)","1e7f36b5":"bank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","91e9100c":"bank=bank.replace({'Sex_Marital_Status' : {1 : 'Male, Divorced', 2 : 'Male, Single',\n                                                          3: 'Male, Married\/Widowed',4:'Female'}})\nbank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","9d424fe7":"bank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","7399d824":"bank=bank.replace({'Duration_in_Current_address' : {1 : '<1 Year', 2 : '[1, 4)',\n                                                          3: '[4, 7)',4:'Above 7'}})\nbank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","14fcc797":"bank.Type_of_apartment.value_counts()*100 \/ len(bank)","7230a016":"bank=bank.replace({'Type_of_apartment' : {1 : 'Free', 2 : 'Rented',\n                                                          3: 'Owned'}})\nbank.Type_of_apartment.value_counts()*100 \/ len(bank)","40d03cd6":"bank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","2c6409d5":"bank=bank.replace({'Most_valuable_available_asset' : {1 : 'None', 2 : 'Car',\n                                                          3: 'Life Insurance',4:'Real Estate'}})\nbank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","d3d4bd4a":"bank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","0f2a4eed":"bank=bank.replace({'No_of_Credits_at_this_Bank' : {1 : '1', 2 : '2 or 3',\n                                                          3: '4 or 5',4:'Above 6'}})\nbank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","53f811e7":"bank.Guarantors.value_counts()*100 \/ len(bank)","d66746fd":"bank=bank.replace({'Guarantors' : {1 : 'None', 2 : 'Co-applicant',\n                                                          3: 'Guarantor'}})\nbank.Guarantors.value_counts()*100 \/ len(bank)","e4c104ad":"bank.Concurrent_Credits.value_counts()*100 \/ len(bank)","92ed95fe":"bank=bank.replace({'Concurrent_Credits' : {1 : 'Other Banks', 2 : 'Dept. Store',\n                                                          3: 'None'}})\nbank.Concurrent_Credits.value_counts()*100 \/ len(bank)","2cb6db76":"bank.No_of_dependents.value_counts()*100 \/ len(bank)","198dc1c0":"bank=bank.replace({'No_of_dependents' : {1 : '3 or More', 2 : 'Less than 3'}})\nbank.No_of_dependents.value_counts()*100 \/ len(bank)","9e514d6c":"bank.Telephone.value_counts()*100 \/ len(bank)","5d9d3688":"bank=bank.replace({'Telephone' : {1 : 'No', 2 : 'Yes'}})\nbank.Telephone.value_counts()*100 \/ len(bank)","4061bdd9":"bank.Foreign_Worker.value_counts()*100 \/ len(bank)","f9620c8d":"bank=bank.replace({'Foreign_Worker' : {1 : 'No', 2 : 'Yes'}})\nbank.Foreign_Worker.value_counts()*100 \/ len(bank)","0bd427de":"bank.Purpose.value_counts()*100 \/ len(bank)","763b167b":"bank=bank.replace({'Purpose' : {0:'Other',1 : 'New Car', 2 : 'Used Car',\n                               3:'Furniture',4:'Radio\/TV',5:'Appliances',\n                               6:'Repair',8:'Vacation',9:'Retraining',10:'Business'}})\nbank.Purpose.value_counts()*100 \/ len(bank)","a01c0b7d":"bank.info()","4a30d0bd":"bank.nunique()","233c6143":"!pip install pandas-profiling","6fe68c77":"from pandas_profiling import ProfileReport\nProfileReport(bank, title=\"EDA Report\")","d20128fa":"data = bank.sample(frac=0.95, random_state=42)\ndata_unseen = bank.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","256acb20":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","dbcea6df":"!pip install pycaret","caddcfbe":"from pycaret.classification import *","8c45fec8":"data.head()","1097ddc3":"def extract_cat_num(data):\n    cat_col=[col for col in data.columns if data[col].dtype=='object']\n    num_col=[col for col in data.columns if data[col].dtype!='object']\n    return cat_col,num_col\ncat_col,num_col=extract_cat_num(data)","61fd0207":"for i in cat_col:\n    print(i)\n    print(data[i].value_counts()*100\/len(data))\n    print(\" \")","ded61657":"data[cat_col].nunique().sort_values(ascending=False)","5047da0e":"data.Creditability.value_counts()*100\/len(data)","c505c06c":"data[num_col].nunique()","a6f39c5b":"num_col.remove('Creditability')\nnum_col","d8768d33":"bank = setup(data = data, target = 'Creditability', \n                  normalize = True, \n                  transformation = True,\n               train_size = 0.8, # training over 80% of available data\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n            ordinal_features = {'Account_Balance':['No Account','None','Below 200 DM','200 DM or Above'],\n                               'Value_Savings_Stocks':['None','Below 100 DM','[100, 500)','[500, 1000)','Above 1000'],\n                               'Length_of_current_employment':['Unemployed','<1 Year','[1, 4)','[4, 7)','Above 7'],\n                               'Instalment_per_cent':['Below 20%','[20%, 25%)','(25%, 35%)','Above 35%'],\n                               'Occupation':['Unemployed, unskilled','Unskilled Permanent Resident','Skilled','Executive'],\n                                'No_of_Credits_at_this_Bank':['1','2 or 3','4 or 5','Above 6'],\n                                'No_of_dependents':['Less than 3','3 or More']\n                               },\n            fix_imbalance = True,\n            numeric_features=num_col,\n             session_id=1,)","192d3209":"best = compare_models()","f60f8f2e":"gbc = create_model('gbc')","1addae72":"print(gbc)","ad37a66c":"tuned_gbc = tune_model(gbc,optimize = 'Kappa')","d962427d":"plot_model(tuned_gbc, plot = 'auc')","702eb0f7":"plot_model(tuned_gbc, plot = 'pr')","1aee309f":"plot_model(tuned_gbc, plot='feature')","918cf346":"plot_model(tuned_gbc, plot = 'confusion_matrix')","dc07c5ea":"evaluate_model(tuned_gbc)","c7bad23a":"predict_model(tuned_gbc)","f75f7e5a":"unseen_predictions = predict_model(tuned_gbc, data=data_unseen)\nunseen_predictions.head()","b16e9794":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","a15083ad":"from pycaret.utils import check_metric\ncheck_metric(unseen_predictions['Creditability'], unseen_predictions['Label'], metric = 'Kappa')","16469f8b":"# Mapping of values"}}