{"cell_type":{"38ceb22d":"code","3e85f14d":"code","d22983b6":"code","860767c2":"code","b45b53a4":"code","ac391ab4":"code","67cff95b":"code","32965277":"code","dac4138b":"code","ea09be22":"code","98959003":"code","f1c9a434":"code","9be9cf7d":"code","1d707465":"code","01e4d55d":"code","126523f2":"code","42fa546c":"markdown","ef47a952":"markdown","aa3680d0":"markdown","1219dfb4":"markdown","270ceeae":"markdown","6029310d":"markdown","20441618":"markdown","769339e5":"markdown"},"source":{"38ceb22d":"!pip install -q gdown","3e85f14d":"!gdown --id 1hHUvINGICvOGcaDgA5zMbzAIUv7ewDd3","d22983b6":"# extract the tar file\n!tar -xf .\/hand_over_face_corrected.tar.gz","860767c2":"!tree -d .\/hand_over_face","b45b53a4":"!pip install imutils","ac391ab4":"import os\nfrom imutils import paths\nimport shutil\n\nIMGS_PATH = \".\/hand_over_face\/images_resized\"\nMASKS_PATH = \".\/hand_over_face\/masks\"\n\nNEW_IMGS_PATH = \".\/imgs\"\nNEW_MASKS_PATH = \".\/masks\"","67cff95b":"# folders to store the final images\nos.makedirs(NEW_IMGS_PATH, exist_ok = True)\nos.makedirs(NEW_MASKS_PATH, exist_ok = True)","32965277":"def process_images(img_loc, out_loc, use_subfolder_name = False, process = None):\n    for img_path in paths.list_images(img_loc):\n        # TODO: add process step here\n        folder, fname = img_path.split('\/')[-2:]\n        if use_subfolder_name:\n            new_fname = folder + \"_\" + fname\n        else:\n            new_fname = fname\n\n        if process is None:\n            # move the file to appropriate folder\n            shutil.copy(img_path, os.path.join(out_loc, new_fname))\n        else:\n            ret_img = process_mask(img_path)\n            ret_img.save(os.path.join(out_loc, new_fname))","dac4138b":"process_images(IMGS_PATH, NEW_IMGS_PATH)\nprocess_images(MASKS_PATH, NEW_MASKS_PATH)","ea09be22":"!find .\/masks -type f | wc -l\n!find .\/imgs -type f | wc -l","98959003":"import numpy as np","f1c9a434":"# generate a list of all filepaths\nIMG_PATH_LIST = list(paths.list_images(NEW_IMGS_PATH))\n# randomly select 8 filepaths\nselected_imagepaths = list(np.random.choice(IMG_PATH_LIST, size = 8))\n# get corresponding maskpaths\nselected_maskpaths = list(map(lambda x: os.path.join(NEW_MASKS_PATH, os.path.basename(x)[:-3] + \"png\"), selected_imagepaths))","9be9cf7d":"selected_imagepaths, selected_maskpaths","1d707465":"import matplotlib.pyplot as plt\nfrom PIL import Image\n\nf, axs = plt.subplots(4, 4, figsize=(16, 11))\nfor num, (img_p, mask_p) in enumerate(zip(selected_imagepaths, selected_maskpaths)):\n    row = num \/\/ 2\n    col = (num % 2) * 2\n    \n    imgr = Image.open(img_p)\n    axs[row, col].imshow(imgr)\n    axs[row, col].set_xlabel(imgr.size)\n    \n    maskr = Image.open(mask_p)\n    axs[row, col + 1].imshow(maskr)\n    axs[row, col + 1].set_xlabel(maskr.size)\nf.show()","01e4d55d":"!zip -qr HOF_dataset_processed .\/imgs .\/masks","126523f2":"# clean up residue files\n!find .\/ -mindepth 1 -not -name 'HOF_dataset_processed.zip' -delete","42fa546c":"Using `find` to check the number of files in each folder. The counts should be equal.","ef47a952":"Here is the [drive link](https:\/\/drive.google.com\/open?id=1hHUvINGICvOGcaDgA5zMbzAIUv7ewDd3). \n\nCredit: [aukhan](https:\/\/github.com\/aurooj\/Hand-Segmentation-in-the-Wild)","aa3680d0":"## first download the dataset\nThe HOF dataset is hosted on google drive so I will install the `gdown` tool using pip. I will then use it to download the dataset.","1219dfb4":"The conclusion is that both the images and the masks have a standard size of 384x216. We have successfully merged the dataset so that the mask filenames match the image filenames.","270ceeae":"## Examine dataset\nFor now I want to explore how the images look, if the mask filenames match the original images, and the dimensions.","6029310d":"## zip the dataset and save","20441618":"## merge files into a two folders \n\nnamely (imgs and masks)","769339e5":"We only require the contents of the `images_resized` and `masks` folder.\n\nFor this dataset, we can simply move the two folders to the root dir and call it a day but I am writing some extra code (to maintain compatibility with other notebooks) and to keep the option of able being to apply augmentations open."}}