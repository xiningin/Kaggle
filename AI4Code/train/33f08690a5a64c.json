{"cell_type":{"db45ada0":"code","49d9e7f9":"code","0abef202":"code","f309fa9d":"code","a325fc11":"code","7c8b9d3c":"code","4a9cb562":"code","0e65c87d":"code","fb55877f":"code","d224b7e7":"code","f5a31d6e":"code","d377863c":"code","753ad98b":"code","b17b536a":"code","4d3f83cd":"code","160a12f0":"code","bfdd1de5":"code","d0733018":"code","354b3121":"code","d3ce4d18":"code","d4be5009":"code","4c3e857a":"code","24c1078d":"markdown","b3045b9a":"markdown","d3a81117":"markdown","c6faa819":"markdown","118b069b":"markdown"},"source":{"db45ada0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49d9e7f9":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0abef202":"df = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","f309fa9d":"df.info()","a325fc11":"df.head()","7c8b9d3c":"sns.set_style(\"darkgrid\")","4a9cb562":"fig, ax = plt.subplots(figsize = (15,10))\n\nsns.heatmap(df.corr(),\n            annot = True,\n            cmap = \"GnBu\",\n            vmin = -1,\n            vmax = 1,\n            linewidths = 0.5,\n            ax = ax)","0e65c87d":"df[['sex','cp','fbs','restecg','exang','slope','ca','thal','target']].hist(figsize = (13,10))\nplt.show()","fb55877f":"pd.crosstab(df.age, df.target).plot(figsize=(13,5), fontsize = 12)\nplt.legend([\"Not disiease\", \"Disease\"])\nplt.title(\"Age vs Presence of Disease\", fontsize = 15)\nplt.show()","d224b7e7":"df[['sex','cp','fbs','restecg','exang','slope','ca','thal','target']].describe()","f5a31d6e":"df.age.hist(figsize=(13,5), bins =max(df.age)-min(df.age))","d377863c":"df[[\"trestbps\",\"chol\",\"thalach\",\"oldpeak\"]].hist(figsize=(13,8), bins = 20)\nplt.show()","753ad98b":"df[[\"trestbps\",\"chol\",\"thalach\",\"oldpeak\"]].describe()","b17b536a":"df.isnull().sum()","4d3f83cd":"cp_target = df[[\"cp\",\"target\"]].groupby(\"cp\").mean()\nrestecg_target = df[[\"restecg\",\"target\"]].groupby(\"restecg\").mean()\nage_target = df[[\"age\",\"target\"]].groupby(\"age\").mean()","160a12f0":"fig, ax = plt.subplots(1,3, figsize = (13,5))\n\ncp_target.plot(kind = 'bar', ax = ax[0])\nrestecg_target.plot(kind = 'bar', ax = ax[1])\nage_target.plot(kind = 'line', ax = ax[2])\n\nax[0].set_title(\"Chest Pain Type vs Target\")\nax[0].set_xlabel(\"Chest Pain Type\")\nax[0].set_ylabel(\"Target\")\n\nax[1].set_title(\"Resting Electrocardiographic Result vs Target\")\nax[1].set_xlabel(\"Resting Rlectrocardiographic Result\")\nax[1].set_ylabel(\"Target\")\n\nax[2].set_title(\"Age vs Target\")\nax[2].set_xlabel(\"Age\")\nax[2].set_ylabel(\"Target\")\n\nfig.suptitle(\"Important Variables Analysis\", fontsize=20)\n\nplt.show()","bfdd1de5":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","d0733018":"X = df.iloc[:, 0:13]\ny = df.iloc[:, 13]","354b3121":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25,random_state = 100)","d3ce4d18":"model = RandomForestClassifier(n_estimators = 10000, random_state = 1)\nmodel.fit(X_train, y_train)","d4be5009":"y_pred = model.predict(X_test)\ny_pred","4c3e857a":"accuracy_score(y_test,y_pred)","24c1078d":"## Categorical Variables","b3045b9a":"# Random Forest Model","d3a81117":"## Data Analysis","c6faa819":"# Exploratory Data Analysis","118b069b":"## Numerical Variables"}}