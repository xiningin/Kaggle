{"cell_type":{"0327cbac":"code","6c5811ac":"code","ac2bdb52":"code","a1f852a5":"code","a94ed195":"code","26553ad8":"code","d095ad13":"code","90cce478":"code","6e4d698d":"code","aec851dc":"code","46d6f094":"code","06d382f3":"code","b67dc1e0":"code","a7b7ff35":"code","2f256ead":"code","e53cf631":"code","b152df3a":"code","2a7f1193":"code","9aa25201":"code","6b6ee98d":"markdown"},"source":{"0327cbac":"# importing train and test data into train_df and test_df dataframes\nimport pandas as pd\ntrain_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')","6c5811ac":"# train and test dataframes column names\nprint(train_df.columns.values)\nprint('=' * 40)\nprint(test_df.columns.values)","ac2bdb52":"# preview the train data\ntrain_df.head(n=4)\ntrain_df.tail(n=7)","a1f852a5":"# preview the test data\ntest_df.head()\ntrain_df.tail()","a94ed195":"# train and test features data types\ntrain_df.info()\nprint('_'*40)\ntest_df.info()","26553ad8":"# numerical features distribution\nprint(train_df.describe())\nprint('_'*40)\nprint(test_df.describe())","d095ad13":"# categorical features distribution\nprint(train_df.describe(include=['O']))\nprint('_'*80)\nprint(test_df.describe(include=['O']))","90cce478":"# preparing training data\ntrain_cols = ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare','Survived']\ntrain_data = train_df[train_cols]","6e4d698d":"# retrieving 7 first rows from data frame\ntrain_data.head(n=7)                            ","aec851dc":"# retrieving 7 last rows from data frame\ntrain_data.tail(n=7)                            ","46d6f094":"# get amount of missing data\ntrain_data.isnull().sum()","06d382f3":"# massaging training data\ntrain_data_m = train_data.copy(deep = True)     # dataframe deep copy\ntrain_data_m = train_data_m.dropna()            # train data frame missing values imputation\nx_train_data_m =  train_data_m.drop('Survived', axis = 1)                  # removing column from dataframe\ny_train_data_m = train_data_m['Survived']       ","b67dc1e0":"# majority rule model\nfrom sklearn.dummy import DummyClassifier\ndummy_model = DummyClassifier(strategy='most_frequent')\ndummy_model.fit(x_train_data_m, y_train_data_m)\ndummy_model_train_prediction = dummy_model.predict(x_train_data_m) ","a7b7ff35":"# estimating model accuracy on training data\nfrom sklearn.metrics import accuracy_score\ndummy_model_train_prediction_accuracy = round(accuracy_score(y_train_data_m, dummy_model_train_prediction)*100,2)\nprint(dummy_model_train_prediction_accuracy,'%')                              ","2f256ead":"# preparing testing data\ntest_cols = ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']\ntest_data = test_df[test_cols]\ntest_data.info()","e53cf631":"# massaging testing data\ntest_data_m = test_data.copy(deep = True)\ntest_data_m['Age'].fillna((test_data_m['Age'].mean()), inplace=True)\ntest_data_m['Fare'].fillna((test_data_m['Fare'].mean()), inplace=True)\ntest_data_m.info()","b152df3a":"# preparing submission data\nID = test_df['PassengerId']\nP = dummy_model.predict(test_data_m)","2a7f1193":"# preparing submission file\nsubmission = pd.DataFrame( { 'PassengerId': ID , 'Survived': P } )\nsubmission.to_csv('dummy_model_v1.csv' , index = False )","9aa25201":"import pandas as pd\ntest = pd.read_csv(\"..\/input\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/train.csv\")","6b6ee98d":"Dummy Classification Model"}}