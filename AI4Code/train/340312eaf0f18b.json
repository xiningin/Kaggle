{"cell_type":{"eab83fc2":"code","7f1659ad":"code","b313579a":"code","4e9abee1":"code","5105d5c8":"code","edcb3403":"code","eea860a9":"code","aaefb212":"code","fad0ab8e":"code","8f30fbc0":"code","5cf46079":"code","e342becf":"code","885954fc":"code","8cf1d976":"code","6ad716a7":"code","d5665625":"code","fde77ecf":"code","11dbf871":"code","9f20786e":"code","9dc9f8cf":"code","7a13d45d":"code","3e284b21":"code","6a06ad68":"code","12ee8881":"code","01f0bde1":"markdown","fd6cf60d":"markdown","75f43041":"markdown","13577699":"markdown","4f28dbfd":"markdown","2e39d3ed":"markdown","edace410":"markdown","0d417b8c":"markdown","2a8d2258":"markdown","260198df":"markdown","6c910488":"markdown","068334c6":"markdown","3a74a8a4":"markdown","fc273062":"markdown","9f3529d4":"markdown","eab5c774":"markdown","f799435f":"markdown","411f2eca":"markdown","5181dad0":"markdown","e0e5e38f":"markdown","71303ccf":"markdown","1f218528":"markdown","4776f538":"markdown","424d471f":"markdown","8fa1c8e7":"markdown","3b37fb57":"markdown","86ac1dc0":"markdown","f5978278":"markdown","afe7b7af":"markdown","144e177c":"markdown","4b8917b1":"markdown","de96d4ed":"markdown"},"source":{"eab83fc2":"#data links \n'''\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/minuteSleep_merged.csv\n..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/weightLogInfo_merged.csv\n'''\nimport numpy as np\nimport pandas as pd\n#Detecting Missing Values\n#Check for unstandard missing Values\nmissing_values = [\"n\/a\", \"na\",\"NA\",\"NaN\",\"--\", \"-\"]\ndaily_activity_merged_raw =  pd.read_csv('dailyActivity_merged.csv',na_values = missing_values, parse_dates=['ActivityDate'])\n\nhourly_activity_raw = pd.read_csv('hourlyIntensities_merged.csv',na_values = missing_values, parse_dates=['ActivityHour'])\n\nweight__log_info_merged_raw = pd.read_csv('weightLogInfo_merged.csv',na_values = missing_values, parse_dates=['Date'])\nweight__log_info_merged = weight__log_info_merged_raw.copy()\n\nsleep_day_merged_raw = pd.read_csv('sleepDay_merged.csv',na_values = missing_values, parse_dates=['SleepDay'])\nsleep_day_merged = sleep_day_merged_raw.copy().dropna()\n\n#Make a copy of data in case of modyfing it\ndaily_activity_merged = daily_activity_merged_raw.copy()\nhourly_activity = hourly_activity_raw.copy()\ndaily_activity_merged.head()\ntype(daily_activity_merged)","7f1659ad":"#Check for standard missing Values\ndaily_activity_merged.isnull().sum()\nweight__log_info_merged.isnull().sum()\nsleep_day_merged.isnull().sum()\nhourly_activity.isnull().sum()\n\n#Check for duplicants\ndaily_activity_merged.duplicated().sum()\nweight__log_info_merged.duplicated().sum()\nsleep_day_merged.duplicated().sum()\nhourly_activity.duplicated().sum()\n#double check\nsleep_day_merged_dup = sleep_day_merged[sleep_day_merged.duplicated()]\nsleep_day_merged_dup\nsleep_day_merged.dropna( how='any', inplace=True)\n\n#Check column names\nprint(daily_activity_merged.columns)\nprint(weight__log_info_merged.columns)\nprint(sleep_day_merged.columns)\nprint(hourly_activity.columns)\n\n#Check data types\nprint(daily_activity_merged.dtypes)\nprint(weight__log_info_merged.dtypes)\nprint(sleep_day_merged.dtypes)\nprint(hourly_activity.dtypes)\n#Create a new column\ndaily_activity_merged['Year'] = pd.DatetimeIndex(daily_activity_merged['ActivityDate']).year\n\n#merge check sleeping data\nmerged_check = daily_activity_merged.merge(sleep_day_merged, left_on=['Id'], right_on=['Id'], how = 'inner')\nprint(merged_check.groupby('Id').Id.nunique().sum())","b313579a":"print(daily_activity_merged.groupby('Id').Id.nunique().sum())\nprint(weight__log_info_merged.groupby('Id').Id.nunique().sum())\nprint(sleep_day_merged.groupby('Id').Id.nunique().sum())\nprint(hourly_activity.groupby('Id').Id.nunique().sum())","4e9abee1":"print(list(daily_activity_merged.columns.values))\ndaily_activity_merged['Total_Active_Minutes'] = daily_activity_merged['VeryActiveMinutes'] + daily_activity_merged['FairlyActiveMinutes']+ daily_activity_merged['LightlyActiveMinutes'] + daily_activity_merged['SedentaryMinutes']\ndaily_activity = daily_activity_merged.drop(columns=['VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes','SedentaryMinutes', 'LoggedActivitiesDistance', 'VeryActiveDistance', 'ModeratelyActiveDistance', 'LightActiveDistance'])","5105d5c8":"print(daily_activity_merged['YEAR'].value_counts())","edcb3403":"print(list(daily_activity.columns.values))\n     \n#Create daily_activity_two_months - general table \ndaily_activity_two_months = daily_activity.drop(columns=['TrackerDistance', 'SedentaryActiveDistance', 'Calories', 'Year'])\ndaily_activity_two_months.to_csv('daily_activity_two_months.csv')","eea860a9":"month = daily_activity['ActivityDate'].dt.month\nseason = []\ni = len(month)\nfor i in month:\n    if i in range(3,6):\n        season.append('Spring') # 3\n    elif i in range(6,9):\n        season.append('Summer') # 2\n    elif i in range(9,12):\n        season.append('Fall') # 4\n    else:\n        season.append('Winter') #1\n    \n#convert list to series \nseasons = pd.Series( (v[0] for v in season) )   \n\nprint(type(seasons))\nmonth.value_counts()\n\n#I need to convert the second column into string to see season names. But I haven't found the solution.\n\n#add to data\ndaily_activity['Season'] = seasons\ndaily_activity.head()\n\ndaily_activity['WeekDay'] = pd.to_datetime(daily_activity['ActivityDate'], format='%y\/%m\/%d').dt.day_name()\n\n#print data to visually analyze\nprint(daily_activity.groupby(['Id','WeekDay'])['Total_Active_Minutes'].describe())\nprint(daily_activity.groupby(['WeekDay'])['Total_Active_Minutes'].describe())\n\nprint(daily_activity.groupby(['Id'])['TotalSteps'].describe())","aaefb212":"# convert the timestamp column to datetime\nhourly_activity['ActivityHour'] = pd.to_datetime(hourly_activity['ActivityHour'])\n\n# extract hour from the timestamp column to create an time_hour column\nhourly_activity['Hour'] = hourly_activity['ActivityHour'].dt.hour\nprint(hourly_activity.head())\n\n#Create activity_by_hours\nactivity_by_hours = pd.DataFrame(hourly_activity.groupby(['Hour']).mean())\nactivity_by_hours","fad0ab8e":"merged_activity_sleep = daily_activity_merged.merge(sleep_day_merged, left_on=['Id'], right_on=['Id'], how = 'inner')\nmerged_activity_sleep.head()\nprint(list(merged_activity_sleep.columns.values))\nmerged_activity_sleep = merged_activity_sleep.drop(columns=['TrackerDistance','LoggedActivitiesDistance', 'VeryActiveDistance', 'ModeratelyActiveDistance', 'LightActiveDistance', 'SedentaryActiveDistance', 'VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes', 'SedentaryMinutes', 'Year'])\nmerged_activity_sleep\n\nprint(list(merged_activity_sleep.columns.values))\nprint(merged_activity_sleep.groupby(['Id'])['Total_Active_Minutes'].describe())\n\n#Create activity_sleeping\nactivity_sleeping = merged_activity_sleep\nactivity_sleeping.to_csv('activity_sleeping.csv')\n\nactive_min_by_date = pd.DataFrame(daily_activity_two_months.resample('D', on='ActivityDate')['Total_Active_Minutes'].sum())\nactive_min_by_date.head()","8f30fbc0":"%pylab inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5cf46079":"def min_aver_max(x,name):\n    x_min = round(x.min())\n    x_mean = round(x.mean())\n    x_max = round(x.max())\n    df = pd.DataFrame({'lab':['MIN', 'MEAN', 'MAX'], 'val':[x_min, x_mean, x_max ]})\n    ax = df.plot.bar(x='lab', y='val', rot=70, width = 0.6, color=[\"lightskyblue\", \"lightgreen\", \"tomato\"] , edgecolor = \"black\", legend=False, grid = True)\n    plt.xlabel(\"Min, Mean, Max\")\n    plt.ylabel(\"Ammount\")\n    plt.title(name)\n    a = ['MIN', 'MEAN', 'MAX']\n    b = [x_min, x_mean, x_max ]\n    #add labels\n    def addlabels(a,b):\n        for i in range(len(a)):\n            plt.text(i,b[i],b[i])\n    # calling the function to add value labels\n    addlabels(a, b)\n    return(ax)\n\nmin_aver_max(daily_activity['TotalSteps'],'TotalSteps')","e342becf":"min_aver_max(daily_activity['TotalDistance'],'TotalDistance')","885954fc":"min_aver_max(daily_activity['Total_Active_Minutes'],'Total_Active_Minutes')","8cf1d976":"min_aver_max(daily_activity['Calories'],'Calories')","6ad716a7":"def min_aver_max_2(x,namex,z,namez):\n    x_min = round(x.min())\n    x_mean = round(x.mean())\n    x_max = round(x.max())\n    z_min = round(z.min())\n    z_mean = round(z.mean())\n    z_max = round(z.max())\n    x = [round(x.min()),round(x.mean()),round(x.max())]\n    z = [round(z.min()),round(z.mean()),round(z.max())]\n    index = ['MIN', 'MEAN', 'MAX']\n    df = pd.DataFrame({'x': x, 'z': z}, index=index)\n    ax = df.plot.bar(rot=70, width = 0.6, color={\"x\": \"lightgreen\", \"z\": \"lightblue\"}, edgecolor = \"black\", legend=False, grid = True)\n   \n    plt.xlabel(\"Min, Mean, Max\")\n    plt.ylabel(\"Ammount\")\n    plt.title(\"{} & {}\".format(namex,namez))\n    a = ['MIN', 'MEAN', 'MAX']\n    b = [x_min, x_mean, x_max ]\n    c = [z_min, z_mean, z_max ]\n    #add labels\n    def addlabels_3(a,b,c):\n        for i in range(len(a)):\n            plt.text(i,b[i],b[i]),\n            plt.text(i,c[i],c[i])\n    # calling the function to add value labels\n    addlabels_3(a, b, c)\n    return(ax)\n\nmin_aver_max_2(activity_sleeping['TotalTimeInBed'],'TotalTimeInBed',activity_sleeping['TotalMinutesAsleep'],'TotalMinutesAsleep')  ","d5665625":"active_min_by_date['ActivityDate'] = active_min_by_date.index\nplt.ylim([0,45000])\n\n# giving a title to plot\nplt.title('Total Users Activity') \n#naming the axes\nplt.xlabel('Date')\nplt.ylabel('Total Active Minutes')\n\nactive_min_by_date.set_index('ActivityDate')['Total_Active_Minutes'].plot()","fde77ecf":"#Create activity_by_weeks \nactivity_by_weeks_1 = daily_activity.drop(columns=['TrackerDistance', 'SedentaryActiveDistance', 'Year'])\n\nactivity_by_weeks = pd.DataFrame(activity_by_weeks_1.groupby(['WeekDay']).mean())\nactivity_by_weeks['WeekDay'] = activity_by_weeks.index\nactivity_by_weeks.index.names = ['0']\nactivity_by_weeks\n\n#order by day\nday_name = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nactivity_by_weeks['WeekDay'] = pd.Categorical(activity_by_weeks['WeekDay'], categories=day_name, ordered=True)\nactivity_by_weeks = activity_by_weeks.sort_values('WeekDay')\nactivity_by_weeks\n\n#create a plot\nplt.ylim([0,1300])\nactivity_by_weeks.set_index('WeekDay')['Total_Active_Minutes'].plot()","11dbf871":"# plotting histogram\nplt.style.use(\"default\")\n\n# specify the chart\nactivity_by_weeks.plot.bar(x=\"WeekDay\", y=\"Total_Active_Minutes\", rot=70, width = 0.6, color = \"lightskyblue\", edgecolor = \"black\", legend=False, grid = True)\n\n# adding annotations and visuals\nplt.xlabel(\"Day of the week\")\nplt.ylabel(\"Average active minutes\")\nplt.title(\"Average users activity by weekday\")\nplt.show()","9f20786e":"#Create activity_by_hours\nactivity_by_hours = pd.DataFrame(hourly_activity.resample('H', on='ActivityHour')['TotalIntensity'].mean())\nactivity_by_hours['ActivityHour'] = activity_by_hours.index\nactivity_by_hours.index.names = ['0']\nactivity_by_hours['Hour']  = activity_by_hours.index.hour\nactivity_by_hours = pd.DataFrame(activity_by_hours.groupby(['Hour']).mean())\nactivity_by_hours.index.names = ['0']\nactivity_by_hours['Hour']  = activity_by_hours.index\nactivity_by_hours\n\n# plotting the histogram\nplt.style.use(\"default\")\n\n# specify the chart\nactivity_by_hours.plot.bar(x=\"Hour\", y=\"TotalIntensity\", rot=70, width = 0.6, color = \"lightskyblue\", edgecolor = \"black\", legend=False, grid = True)\n\n# adding annotations and visuals\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Average intensity\")\nplt.title(\"Average users activity by hour\")\nplt.show()","9dc9f8cf":"# plotting scatter plot\nplt.style.use(\"default\")\n# specify size of the chart\nplt.figure(figsize=(8,6)) \nplt.scatter(daily_activity.TotalSteps, daily_activity.Calories, alpha = 0.8, c = daily_activity.Calories, cmap = \"rainbow\")\n\n# add annotations and visuals\nmedian_calories = daily_activity['Calories'].median()\nmedian_steps = daily_activity['TotalSteps'].median()\n\nplt.colorbar(orientation = \"vertical\")\nplt.axvline(median_steps, color = \"Blue\", label = \"Median steps\")\nplt.axhline(median_calories, color = \"Red\", label = \"Median calories burned\")\nplt.xlabel(\"Steps taken\")\nplt.ylabel(\"Calories burned\")\nplt.title(\"Calories burned for every step taken\")\nplt.grid(True)\nplt.legend()\nplt.show()","7a13d45d":"# plotting scatter plot\nplt.style.use(\"default\")\n# specify size of the chart\nplt.figure(figsize=(8,6)) \nplt.scatter(daily_activity.Total_Active_Minutes, daily_activity.Calories, alpha = 0.8, c = daily_activity.Calories, cmap = \"rainbow\")\n\n# add annotations and visuals\nmedian_calories = daily_activity['Calories'].median()\nmedian_activities = daily_activity['Total_Active_Minutes'].median()\n\nplt.colorbar(orientation = \"vertical\")\nplt.axvline(median_activities, color = \"Blue\", label = \"Median active minutes\")\nplt.axhline(median_calories, color = \"Red\", label = \"Median calories burned\")\nplt.xlabel(\"Total_Active_Minutes\")\nplt.ylabel(\"Calories\")\nplt.title(\"Total active minutes compared to calories burned\")\nplt.grid(True)\nplt.legend()\nplt.show()","3e284b21":"sns.lmplot(x='TotalSteps', y='Calories', data = daily_activity)\nsns.lmplot(x='Total_Active_Minutes', y='Calories', data = daily_activity)","6a06ad68":"activity_sleeping['MonthDay'] = activity_sleeping['SleepDay'].apply(lambda x: x.strftime(\"%m %d\") if pd.notnull(x) else '')\nactivity_sleeping\nactivity_sleeping_by_days = pd.DataFrame(activity_sleeping.groupby(['Id']).mean())\nactivity_sleeping_by_days\nactivity_sleeping_by_days_1 = pd.DataFrame(activity_sleeping.resample('D', on='SleepDay')['TotalMinutesAsleep'].mean())\nactivity_sleeping_by_days_1\nactivity_sleeping_by_days = pd.DataFrame(activity_sleeping.groupby(['Id']).mean())\nactivity_sleeping_by_days\n\nactivity_sleeping_mean = pd.DataFrame(activity_sleeping.groupby(['Id']).mean())\n# plotting scatter plot\nplt.style.use(\"default\")\n# specify size of the chart\nplt.figure(figsize=(8,6)) \nplt.scatter(activity_sleeping_mean.Total_Active_Minutes, activity_sleeping_mean.TotalTimeInBed, alpha = 0.8, c = activity_sleeping_mean.TotalTimeInBed, cmap = \"rainbow\")\n\n# add annotations and visuals\nmedian_calories = activity_sleeping_mean['TotalTimeInBed'].median()\nmedian_activies = activity_sleeping_mean['Total_Active_Minutes'].median()\n\nplt.colorbar(orientation = \"vertical\")\nplt.axvline(median_steps, color = \"Blue\", label = \"Total time in bed\")\nplt.axhline(median_calories, color = \"Red\", label = \"Median active minutes\")\nplt.xlabel(\"TotalTimeInBed\")\nplt.ylabel(\"Total active minutes\")\nplt.title(\"Total active minutes compared to calories burned\")\nplt.grid(True)\nplot(legend=False) \nplt.show()","12ee8881":"\n# plotting scatter plot\nplt.style.use(\"default\")\n# specify size of the chart\nplt.figure(figsize=(8,6)) \nplt.scatter(activity_sleeping.Total_Active_Minutes, activity_sleeping.TotalTimeInBed, alpha = 0.8, c = activity_sleeping.TotalTimeInBed, cmap = \"rainbow\")\n\n# add annotations and visuals\nmedian_calories = activity_sleeping['TotalTimeInBed'].median()\nmedian_activies = activity_sleeping['Total_Active_Minutes'].median()\n\nplt.colorbar(orientation = \"vertical\")\nplt.axvline(median_steps, color = \"Blue\", label = \"Median steps\")\nplt.axhline(median_calories, color = \"Red\", label = \"Median calories burned\")\nplt.xlabel(\"TotalTimeInBed\")\nplt.ylabel(\"Total active minutes\")\nplt.title(\"Total active minutes compared to calories burned\")\nplt.grid(True)\nplot(legend=False) \nplt.show()","01f0bde1":"# Scenario & Data \n![image.png](attachment:157a95f3-e926-44b4-9bce-ab069177dfa1.png)","fd6cf60d":"## Process\n\n**Choosing the tool**\n\nTo analyze this data I'm going to use Python to sharpen my skills. I will also need NumPy, pandas, matplotlib, and probably ggplot. I'm intended to create some charts, but probably I will use Tableau for better visualization. \n\n**CLEANING THE DATA**\n\nFirst I need to clean my data.\nTo make sure the data is clean I had to check and correct:\n* nulls - I defined some missing_values and used **na_values **parameter** then, by adding 0 to missing_values I've checked 0-values in case they appear in columns with non-numerical values.\n* misspelled words - There aren't any string values in data, next I've checked column names **.columns**\n* mistyped numbers - I haven't detected yet\n* extra spaces - none\n* duplicants - I used **.duplicated().sum()**\n* data format - I used **.dtypes** to check and decided to change DateActivity type object - to datetime64 by adding parse_dates parameter.\n\nAt this moment I decided to add a year column so it will be easier for me to choose a specific year for analysis\nThe data was pretty clean.","75f43041":"It revealed that SleeDay data has 3 duplicated values, and WeightLog has 65 missing values on Fat. I decided not to include fat parameters in this analysis and leave these values.\nI've checked duplicates rows and it turned out they weren't duplicates so I just left them.\nThen I was checking matching values (by Id) and I've discovered that ActivityData has 33 unique Ids while WeightLog and SleepDay have only 8 and 24. I decided not to include WeightLog data. I'm going to perform the analysis on ActivityData and as long as I'm interested in the correlation between Activity and Sleep time, I will use merged data to compare them","13577699":"Even though weekends aren't the busiest days users don't tend to increase their activity. The activity rate tends to decline till Thursday. \nAs it was said earlier, the information on Light and High active minutes would give more information. \n\n**Are there Peak Hours when users tend to be active more?**","4f28dbfd":"This plot is grouped by Id, as we can see there is no correlation.","2e39d3ed":"![](http:\/\/sun9-54.userapi.com\/impg\/FAUWBya7_5eVakct7GJPqSOyXt4lfIS3cTrrsQ\/qKrGrxu9NYM.jpg?size=755x591&quality=96&sign=33703464e3b822c21b1c7882f09347bf&type=album)\n\nThe scatter plot shows that there is a strong correlation between these parameters. ","edace410":"![](http:\/\/sun9-38.userapi.com\/impg\/wS8z_Ey-H8GWuABsvkR-QRgMyen5rUV-WeIzIQ\/SlHL7ViEVB0.jpg?size=683x547&quality=96&sign=e593d8211230be2d8b716bff68a29b4b&type=album)","0d417b8c":"![](http:\/\/sun9-32.userapi.com\/impg\/-hnFEP9OauiHSGQtSw0D2fwSEVFAVyrMO761AQ\/YWZPPwvevrw.jpg?size=450x336&quality=96&sign=5c1bd3cf5d855057d67e1b1a48f0e11a&type=album)","2a8d2258":"![](http:\/\/sun9-85.userapi.com\/impg\/YQIr_XDTxtPJWQuVqHBwaufIlAAS5mIrbdNXGw\/8nWZ-_Y7AAY.jpg?size=639x504&quality=96&sign=3dce97f0af15e1c498e2050e4d3b33dc&type=album)\n\nThe graph shows that most users tend to be more active(work out) from 17.00 till 19.00 supposenly after work.\n\n\n**How number of steps correlates with calories?**","260198df":"![image.png](attachment:8cfd9a22-1c39-4365-8a21-d19a5a634144.png)","6c910488":"# Prepare\n\n\u25cf This is public Kaggle data FitBit Fitness Tracker Data\n\u25cf The files are .csv mostly long-format but have some wide-format data\n\u25cf It is organized by tables contain data about physical activity, heart rate, sleep time, steps \n\u25cf How did you verify the data\u2019s integrity?\n\u25cf I haven't noticed any problems with the data so far.\n\n**Guiding questions**\nWhen I first looked at data I highlighted several questions that will help me to define patterns in device usage. \n1. Who are our users? What can we say about their age, daily calories, weight, daily activity, and health?\n* what is the average of these parameters\n* are there any extreme parameters? min max\n* can we compare an average woman to our average user? (find average women parameters)\n2. Does ammount of activiteis affect sleep?\n* higher activity less or more sleep?\n3. Are there any other correlations \n* activities - calories\/weight\n* sleep - weight\n4. What is an optimal daily activity?\n* for weight loss\n* for better sleep\n5. Time of activity\n* seasons \n* weekdays\n* daytime\n\n> Then I took a step back and looked at my task again and if those questions support solving this task. I looked carefully at the data I have, particularly on columns in tables. Maybe there is not enough data to answer the questions or they aren't related to the task or some of them will be useful in further analysis. \n> I defined a few columns and tables that will be useful in my analysis, they contain information on the date, steps, distance, activities, calories gained, heart rate, sleep records, time in bed, weight, fat %, BMI, and some of the information that isn't clear to me such as is the manual report, log id, METs. As long as I don't have any team members or detailed data descriptions to clarify those, I'm going to drop them.\n> \n> With this data I can't figure out the age, average women parameters for comparing are also couldn't be identified because of missing age data. At the same time defining average, min, max parameters look reasonable.\n> I will also drop the Optimal daily activity part and include it in further analysis related to recommendations for our clients. \n> My third and final set of guiding questions:\n\n**1. Find average steps-distance, activities, calories gained, heart rate, sleep time, time in bed, weight, fat %, BMI**\n* check for any extremes max, min\n\n**2. How have these parameters changed during the year? Find patterns in:**\n* seasons\n* weekdays\n* day time (evening, night, morning, afternoon)\n* peak hours\n\n**3. Find correlations**\n* activities - weight\n* activities - sleep time \/ time in bed\n* sleep - weight","068334c6":"This graph shows that users' activity tends to decline. Time borders are -March-May. So whether it depends on seasons (May is almost the beginning of summer) or the reason that users lose their motivation, we need to support their motivation in any case.","3a74a8a4":"I wanted to group my data by seasons but I discovered that the date covers only 4th and 5th months. So it might mean that we have data of last months only. It's not enough for the detailed analysis, however I can still analyze activity by weekdays and hours.","fc273062":"# Act\n\n**Conclusion:**\n\nLet's get back to the business task: \n\n*** What are some most significant trends in smart device usage during the last year that can help improve marketing strategy.***\nAt first, we need to correct this task and specify 2 months instead of one year, it's not that much information, but it's all the data we have.\n\n*** What are some most significant trends in smart device usage during the last two months that can help improve marketing strategy.***\n- **Steps** per day average 7638 which is good (norm is 3500-7500 per day). But there are many records below 3500. Maximum is 36019 which is 28 km and the average distance per day is 5 km (2.5 - 5 km norm)\n- **Total active minutes**  min 2 average 1219 max 1440 per day. (recommended 21-42 minutes of average activity and 10-21 of high activity) A lot of active minutes numbers are among 30-100 min, however, there are plenty of 0 values. \n- **Calories minumum** - 0 average - 2304 maximum - 4900 (norm - 1800-2200)\n- **User activity** tends to decline over time, starting from the point they began tracking. Maximum activity on Monday declining to Thursday remains average on Weekend. Activity is minimum from 22.00 till 6.00 due to natural reasons. Peak hours from 17.00 till 19.00 and 12.00, people probably used to exercise after work.\n- **Time asleep\/in bed ** minimum-68\/68 average-419\/458 maximum - 796\/961. It's recommended from 7.5-8.5 hrs depending on age. A lot of records are above 9 hrs. Many below 7.5. \n- **Calories** have a high positive correlation with steps taken per day. \n- **Number of Active Minutes** have a minimum positive correlation with calories.\n- No correlation between active minutes and time spend in bed\/sleep time.\n\n\n**Top 3 recommendations to improve marketing strategy**\n\n**1. Set optimal goals(consumed calories, activity amount, sleeping time, number of steps) in the app for each user depending on their parameters(age, weight, BIM, daily activity, goals) based on highly authoritative sources such as World Health Organization. Make it in a gaming format, where they can get an achievement and check their progress. Make commercial company on that**\n\n**2. Create a motivation strategy to maintain our users' motivation and help them to stay on track to their goals**\n\n**3. Create a warning-notification system to inform or users that they are causing harm to their health, and politely remind them what they should and shouldn't do to reach their goals**\n\n**Further analysis**\n1. Widen the time period and make a year analysis, taking into account seasons, and habits of users who were successful on the way to their goals, and who weren't. \n2. Collect more data on weight, age, BIM, etc.\n\n\n**Recommendations to correct my analysis**\n1. Choose authoritative sources to define norms for further comparison and recommendation.\n2. Divide active minutes into Very Active, Fairly ActiveMinutes, Lightly Active, Sedentary Minutes and make calculations considering those.\n3. Compare users' data with norms. Count percent of users whose average steps number is below 3500. Sleeping time below 7.5 or above 9 hrs. and so on","9f3529d4":"# Intro\nHello and Hi. This is my second case study. At this moment I've finished Udacity Data Analytics program. That was challenging. I couldn't think in that new language. So many times I tried to write a code in a such complicated way, just because I was using my logic and wasn't thinking in that 'Python logic'. The answer was simple and clear. By the end of the course, it's become easier for me. However, it is completely different from R and SQL and more difficult. Anyway, I'm intended to manage Python and use it for Data Analysis. That's what I'm going to apply here. I feel excited, yet worried that it will be too difficult.\n\n![image.png](attachment:60d381c8-237b-40cd-970a-89807bd64118.png)","eab5c774":"![](http:\/\/sun9-4.userapi.com\/impg\/2vt7Fj-Q9hiD5ojKTFCufln1M3xn6Wt2KyH5jw\/Z0jdUn-Txyw.jpg?size=771x610&quality=96&sign=9b7b6edea1cdad2e6ca216628e6d8728&type=album)\n\nCalories\/Active minutes has some positive correlation too. To see it clearly I'm going to create two more plots. ","f799435f":"![](http:\/\/sun9-46.userapi.com\/impg\/1khlf8jelBT7_jxVtUYWdqRd09gb0q25rOjDhw\/3mNw-etfCtY.jpg?size=756x602&quality=96&sign=1da2b7f64fe201ad32d382cdaa412f9b&type=album)\n\nThis is ungrouped plot shows the same result\n\nI've checked the correlation between steps and it shown same result\n\n![](http:\/\/sun9-41.userapi.com\/impg\/lFmv16oaXad5mprEvvw70o7f2NkpWXUWiAGLRw\/A5Ilc3ym3pM.jpg?size=748x608&quality=96&sign=ec609ae9f1d9ce09bc3a210c979119fc&type=album)","411f2eca":"Here I calculated total activity and dropped extra columns I printed the final table to check that everything is right.","5181dad0":"![](http:\/\/sun9-81.userapi.com\/impg\/tN5TH-PkpF3DMufV1d8yA1Pw-gjeGqXzmWpPYA\/1sxrtFY3kJ4.jpg?size=487x340&quality=96&sign=37bbec4fbb7f8915c2fb0ec1470cb65e&type=album)","e0e5e38f":"1. **Steps per day.** Based on World Health Organization recommendations @it has to be a link for the article here and below, but I don't want to search@ for a healthy lifestyle a woman should make 5000-7500 per day. Our user's average is 7638 which is good, but there are also records with 0 steps during a day. \n2. **Active time** It is recommended at least 150-300 minutes of average activity and 70-150 of high activity like sport per week. Our users' average activity is 1291 per day. At this moment I realized that I should've left Lightly Active minutes and Highly active minutes to calculate these parameters. I was counting total active minutes. I'm not going to redo my work because the purpose of it is to learn, including learning by seeing your mistakes. I've should've thought of this research ahead, before Analyze phase, when I asked questions as well as I should've asked the manager to clarify the specific of this division in active minutes. Anyway, I took a quick look at the data and noticed that, although a lot of active minutes amount is quite good among 30-100 min, there are plenty of 0 values, and since the lightly active minutes is presented that wasn't caused by non-tracking. That should be a red flag for users\n3. **Calories** It is recommended for a woman to consume 1800-2200 depending on physical activity. Our user's average is 2304 which is a little above this. There are also a lot of records more than 3000 up to 4900 which is hard to imagine, it could be caused by high activity. Thus this norm should be calculated individually.\n4. **Total Time in Bed\/ Sleep Time** Average norm for healthy sleep is 7.5-9 hrs depending on age, sleeping more or less than that can cause serious health issues in a long perspective. Stay in bed for a long time is not healthy as well. Our user's average is 419 min asleep which is 6.98 hrs which is below recommended. There are also a lot of records of minutes asleep that are way above 9hrs which is a red flag\n\n\n**What are trends in users' activity during the whole time?**","71303ccf":"# Share and further analysis","1f218528":"\n**Scenario**\nI'm a junior data analyst working on the marketing analyst team at Bellabeat, a high-tech manufacturer of health-focused products for women. \n\n**Company:** Bellabeat, a high-tech company that manufactures health-focused smart products. Collecting data on activity, sleep, stress, and reproductive health has allowed Bellabeat to empower women with knowledge about their health and habits. The company has invested in traditional advertising media, such as radio, out-of-home billboards, print, and television, but focuses on digital marketing extensively. Bellabeat invests year-round in Google Search, maintaining active Facebook and Instagram pages, and consistently engages consumers on Twitter. Additionally, Bellabeat runs video ads on Youtube and display ads on the Google\nDisplay Network to support campaigns around key marketing dates.\n\n**Stakeholders** : Bellabeat\u2019s co-founder and Chief Creative Officer, Mathematician and Bellabeat\u2019s cofounder key member of the Bellabeat executive team, marketing analytics team, executive team. \nI assume that they expect to understand some patterns in using the company's devices and based on that make some improvements. As one of the main stakeholders is a mathematician I will include more numbers that support my findings as well as use some graphics with numerical labels.\n\n**Products**\n* Bellabeat app: The Bellabeat app provides users with health data related to their activity, sleep, stress, menstrual cycle, and mindfulness habits. This data can help users better understand their current habits and make healthy decisions. The Bellabeat app connects to their line of smart wellness products.\n* Leaf: Bellabeat\u2019s classic wellness tracker can be worn as a bracelet, necklace, or clip. The Leaf tracker connects to the Bellabeat app to track activity, sleep, and stress.\n* Time: This wellness watch combines the timeless look of a classic timepiece with smart technology to track user activity, sleep, and stress. The Time watch connects to the Bellabeat app to provide you with insights into your daily wellness.\n* Spring: This is a water bottle that tracks daily water intake using smart technology to ensure that you are appropriately hydrated throughout the day. The Spring bottle connects to the Bellabeat app to track your hydration levels.\n* Bellabeat membership: Bellabeat also offers a subscription-based membership program for users. Membership gives users 24\/7 access to fully personalized guidance on nutrition, activity, sleep, health, and beauty, and mindfulness-based on their lifestyle and goals\n\nMy approach will be based on a 6-phase analysis presented by Google.\n\n* Ask\n* Prepare\n* Process\n* Analyze\n* Share\n* Act\n\n# Ask\n\nI was asked to analyze smart device usage data to gain insight into how consumers use non-Bellabeat smart devices. I need to select one Bellabeat product to apply these insights to in the presentation. \n1. What are some trends in smart device usage?\n2. How could these trends apply to Bellabeat customers?\n3. How could these trends help influence Bellabeat marketing strategy?\n\nFirst I define the business task\n\n**Business task:**  What are some most significant trends in smart device usage during the last year that can help improve marketing strategy. ","4776f538":"![](http:\/\/sun9-57.userapi.com\/impg\/j04pwbt3gtd5r4g0FoaeXi78fTdt7Vj6Wzrpug\/eCYhOJ1MyvI.jpg?size=442x330&quality=96&sign=c928fe6a0853c0a02f0b514210d0ea8b&type=album)","424d471f":"> At this point I was creating tables to make visualisation with Tableau. I deleted this part of the code because my 14-days trail has expired and I can't use web-version because it's too slow, so I will make Python visualisation.","8fa1c8e7":"![](http:\/\/sun9-73.userapi.com\/impg\/VjWuRZ5dQS_gLPJC_2I-d5A-xjJFp-8uW6vxPA\/Bg2klkvg84c.jpg?size=442x331&quality=96&sign=78a48627122ef3a044e71e09b20f51ef&type=album)","3b37fb57":"![](http:\/\/sun9-56.userapi.com\/impg\/xJ_hQKYIUWqI9htStNvfb3m2my9ceyhkCRNgHA\/_L7hl4Ndo40.jpg?size=690x573&quality=96&sign=6d3ff077e48e6be35ff9fadaeda90f70&type=album)","86ac1dc0":"![](http:\/\/sun9-71.userapi.com\/impg\/y34Ksf5nl0uxCnb3i9nX55yAbkvffO0nkwTE6Q\/Hfuxeqm5860.jpg?size=754x605&quality=96&sign=616dedc8fb69144e141caf905cec8e8c&type=album)","f5978278":"**What are the average, minimun and maximum parameters in using?**\n\nI created a function to calculate these parameters.","afe7b7af":"**Do user activity change by weekdays?**","144e177c":"![](http:\/\/sun9-75.userapi.com\/impg\/vUg94ybG357BTAT9QS-CiK_H-uXxUJJ7Jk5I-g\/wGoWlhTNinU.jpg?size=449x312&quality=96&sign=171944abae7dd0d1431cbeda1ba3ede4&type=album)\n\nBy looking at this graph we don't really see what data tells us, so I'll use a bar graph to see clearly.","4b8917b1":"# Analyze\n\nTo start th\u0443 analysis I've checked the data to calculate how many distinct year values were there. It occured that only data on 2016 is presented\n","de96d4ed":"![](http:\/\/sun9-88.userapi.com\/impg\/EOX6mDBBMhE3IRWNelE2YNSPasto-yCNk3Orig\/gTIAHHl7Vs8.jpg?size=590x557&quality=96&sign=b17c39f2682ff5f6462f367028df1a7c&type=album)\n![](http:\/\/sun9-77.userapi.com\/impg\/BwyHgP9dpRpDpaFUoFFIikCUt5isOL5hughOdg\/JTBlJ78wquY.jpg?size=604x570&quality=96&sign=8491efc2a94fba621284b3f55ba2c765&type=album)\n\nAs I said earlier, some bias is there. Not all active minutes should've been taking into account, I should've used High active minutes\n\n**Do the those who exersice or walk more sleep less or more time?**"}}