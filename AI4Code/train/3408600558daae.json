{"cell_type":{"fdb2052b":"code","93725389":"code","07bccceb":"code","9872a70b":"code","9832a2af":"code","a474e707":"code","dbe08090":"code","e24bd2a0":"code","ae13316c":"code","bf5dfd02":"code","64b67464":"code","2b1f54dc":"code","94336964":"code","00747d3a":"code","78acb36d":"markdown"},"source":{"fdb2052b":"%matplotlib inline\nimport cv2\nfrom skimage.measure import compare_ssim\nfrom skimage import data, img_as_float\nimport matplotlib.pyplot as plt\nimport numpy as np","93725389":"compare_ssim(img_as_float(data.camera()), img_as_float(data.camera()))","07bccceb":"compare_ssim(img_as_float(data.camera()), img_as_float(data.grass()))","9872a70b":"from skimage.io import imread\nimport os\n\nshampoo1 = cv2.cvtColor(imread(\"..\/input\/imgsample2\/1.jpg\"), cv2.COLOR_BGR2GRAY)\nshampoo2 = cv2.cvtColor(imread(\"..\/input\/imgsample2\/2.jpg\"), cv2.COLOR_BGR2GRAY)\nbefore = cv2.cvtColor(imread(\"..\/input\/imgsample2\/1.jpg\"), cv2.IMREAD_COLOR)\nafter = cv2.cvtColor(imread(\"..\/input\/imgsample2\/2.jpg\"), cv2.IMREAD_COLOR)","9832a2af":"plt.imshow(shampoo2, cmap = plt.cm.gray)\n","a474e707":"(H, W) = shampoo1.shape\n\nshampoo2 = cv2.resize(shampoo2, (W, H))\n","dbe08090":"shampoo2.shape","e24bd2a0":"shampoo1.shape","ae13316c":"(score, diff) = compare_ssim(shampoo1, shampoo2, full=True)","bf5dfd02":"print(\"Image similarity\", score)","64b67464":"diff = (diff * 255).astype(\"uint8\")","2b1f54dc":"thresh = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]\ncontours = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\ncontours = contours[0] if len(contours) == 2 else contours[1]\nmask = np.zeros(before.shape, dtype='uint8')\nfilled_after = after.copy()\n\nfor c in contours:\n    area = cv2.contourArea(c)\n    if area > 40:\n        x,y,w,h = cv2.boundingRect(c)\n        cv2.rectangle(before, (x, y), (x + w, y + h), (36,255,12), 2)\n        cv2.rectangle(after, (x, y), (x + w, y + h), (36,255,12), 2)\n        cv2.drawContours(mask, [c], 0, (0,255,0), -1)\n        cv2.drawContours(filled_after, [c], 0, (0,255,0), -1)\n","94336964":"plt.imshow(filled_after)","00747d3a":"f, axarr = plt.subplots(2,2)\naxarr[0,0].imshow(before)\naxarr[0,1].imshow(after)\naxarr[1,0].imshow(mask)\naxarr[1,1].imshow(filled_after)","78acb36d":"\n# Structural similarity index\n\n\nWhen comparing images, the mean squared error (MSE)--while simple to\nimplement--is not highly indicative of perceived similarity.  Structural\nsimilarity aims to address this shortcoming by taking texture into account\n\n"}}