{"cell_type":{"9bc28b3d":"code","443bacdd":"code","b6e97446":"code","abe558c2":"code","b596cc94":"code","b789b66a":"code","26700757":"code","74e1f3b4":"code","0cffc847":"code","6f74901a":"code","876bdefd":"code","1df2747f":"code","0bf43f9e":"code","00e11f01":"code","851bc6ff":"code","243b8272":"code","c5584ea6":"markdown","64f679f4":"markdown","aa72777b":"markdown","d52f1ce3":"markdown","fb471596":"markdown","bd29e81a":"markdown","9988db7b":"markdown","84e5ff55":"markdown","d95b6c44":"markdown","6808d8ab":"markdown","b4586f87":"markdown","b5d9bd6d":"markdown"},"source":{"9bc28b3d":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error","443bacdd":"df = pd.read_csv('..\/input\/melbourne-housing-snapshot\/melb_data.csv')\ndf.head()","b6e97446":"df.info()","abe558c2":"df.describe()","b596cc94":"df.columns","b789b66a":"df = df[[\"Rooms\", \n         \"Distance\", \n         \"Bedroom2\", \n         \"Bathroom\", \n         \"Car\", \n         \"Landsize\", \n         \"BuildingArea\", \n         \"YearBuilt\",\n         \"Lattitude\",\n         \"Longtitude\",\n         \"Price\"]]","26700757":"df = df.dropna()\ndf.info()","74e1f3b4":"# Features\nX = df[df.columns.drop(\"Price\")]\n\n# Target\ny = df[\"Price\"]","0cffc847":"dtr = DecisionTreeRegressor(random_state = 6830)\n\ndtr.fit(X, y)\n\npred_dtr = dtr.predict(X)\n\npd.DataFrame({\"Actual\": y,\n              \"Peredicted\": pred_dtr}).sample(10)","6f74901a":"mae = mean_absolute_error(y, pred_dtr)\nmae","876bdefd":"X_train, X_test, y_train, y_test = train_test_split(X,\n                                                    y,\n                                                    test_size = 0.2,\n                                                    random_state = 600)","1df2747f":"dtr.fit(X_train, y_train)\n\npred_dtr_t = dtr.predict(X_test)\n\npd.DataFrame({\"Actual\": y_test,\n             \"Predicted\": pred_dtr_t}).sample(10)","0bf43f9e":"mae_t = mean_absolute_error(y_test, pred_dtr_t)\nmae_t","00e11f01":"mln = []\n\nfor x in [5, 25, 50, 100, 250, 500]:\n    dt = DecisionTreeRegressor(max_leaf_nodes = x, random_state = 420)\n    dt.fit(X_train, y_train)\n    pred_dt = dt.predict(X_test)\n    mae_ = mean_absolute_error(y_test, pred_dt)\n    mln.append(mae_)    \nmln","851bc6ff":"rf = RandomForestRegressor(random_state = 313)\n\nrf.fit(X_train, y_train)\n\npred_rf = rf.predict(X_test)\n\npd.DataFrame({\"Actual\": y_test,\n              \"Predicted\": pred_rf}).sample(10)\n","243b8272":"mae_rf = mean_absolute_error(y_test, pred_rf)\nmae_rf","c5584ea6":"### Random Forest","64f679f4":"### Underfitting and Overfitting","aa72777b":"### Model Validation","d52f1ce3":"**mean absolute error (random forest)**","fb471596":"**Mean Absolute Error**","bd29e81a":"### Import Dataset","9988db7b":"**Features and Target**","84e5ff55":"### Decision Tree Regression","d95b6c44":"**Data Information**","6808d8ab":"**Data Statistics**","b4586f87":"**Mean Absolute Error (Validation)**","b5d9bd6d":"**Mean absolute error by using DECISION TREE is above 20 thousand but by using RANDOM FOREST is approximately 16 tousand**"}}