{"cell_type":{"8405c7a3":"code","2135ee71":"code","6bdaf7bf":"code","fb117fd8":"code","dd86169f":"code","a77ae64c":"code","884f0447":"code","013d25ff":"code","0a9d509b":"markdown","1b69650d":"markdown"},"source":{"8405c7a3":"import tensorflow as tf\n\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.utils import to_categorical \n\nimport pandas as pd\nimport numpy as np\nimport re\nimport matplotlib.pyplot as plt\n\nimport sklearn\nimport catboost as ctb\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom tqdm.notebook import tqdm_notebook\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\npd.set_option('max_columns', 100)\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 1000)\npd.set_option('max_colwidth', 300)","2135ee71":"tr_mcc_codes = pd.read_csv('\/kaggle\/input\/python-and-analyze-data-final-project\/tr_mcc_codes.csv', sep=';', index_col='mcc_code')\ntr_types = pd.read_csv('\/kaggle\/input\/python-and-analyze-data-final-project\/tr_types.csv', sep=';', index_col='tr_type')\n\ntransactions = pd.read_csv('\/kaggle\/input\/python-and-analyze-data-final-project\/transactions.csv', index_col='customer_id')\ngender_train = pd.read_csv('\/kaggle\/input\/python-and-analyze-data-final-project\/gender_train.csv', index_col='customer_id')\ngender_test = pd.read_csv('\/kaggle\/input\/python-and-analyze-data-final-project\/gender_test_kaggle_sample_submission.csv', index_col='customer_id')\ntransactions_train = transactions.join(gender_train, how='inner')\ntransactions_test = transactions.join(gender_test, how='inner')","6bdaf7bf":"for df in [transactions_train, transactions_test]:\n    df['day'] = df['tr_datetime'].str.split().apply(lambda x: int(x[0]) % 7)\n    df['hour'] = df['tr_datetime'].apply(lambda x: re.search(' \\d*', x).group(0)).astype(int)\n    df['night'] = ~df['hour'].between(6, 22).astype(int)\n\ntransactions_train.head()","fb117fd8":"tqdm_notebook.pandas(desc=\"Progress:\")\n\ndef features_creation_advanced(x): \n    features = []\n    features.append(pd.Series(x['day'].value_counts(normalize=True).add_prefix('day_')))\n    features.append(pd.Series(x['hour'].value_counts(normalize=True).add_prefix('hour_')))\n    features.append(pd.Series(x['night'].value_counts(normalize=True).add_prefix('night_')))\n    \n    features.append(pd.Series(x[x['amount']>0]['amount'].agg(['min', 'max', 'mean', 'median', 'std', 'count', 'sum'])\\\n                                                        .add_prefix('positive_transactions_')))\n    features.append(pd.Series(x[x['amount']<0]['amount'].agg(['min', 'max', 'mean', 'median', 'std', 'count', 'sum'])\\\n                                                        .add_prefix('negative_transactions_')))\n\n    features.append(pd.Series(x['mcc_code'].value_counts(normalize=True).add_prefix('mcc_')))\n    \n    return pd.concat(features)","dd86169f":"data_train = transactions_train.groupby(transactions_train.index)\\\n                               .progress_apply(features_creation_advanced).unstack(-1)\ndata_test = transactions_test.groupby(transactions_test.index)\\\n                             .progress_apply(features_creation_advanced).unstack(-1)\n\ntarget = data_train.join(gender_train, how='inner')['gender']\ntarget.value_counts()","a77ae64c":"X = data_train.copy()\ny = target\ntest_df = data_test.copy()\n\nX.fillna(-1, inplace=True)\ntest_df.fillna(-1, inplace=True)\n\nscaler = MinMaxScaler()\nX = scaler.fit_transform(X)\ntest_df = scaler.fit_transform(test_df)\n\nX.shape, test_df.shape","884f0447":"model_keras = Sequential()\nmodel_keras.add(Dense(256, activation='sigmoid', input_dim=231))\nmodel_keras.add(Dense(1024, activation='sigmoid'))\nmodel_keras.add(Dense(128, activation='sigmoid'))\nmodel_keras.add(Dense(1, activation='sigmoid'))\n\n# Compile the model_keras\nmodel_keras.compile(optimizer='adam', \n              loss='binary_crossentropy', \n              metrics=[tf.keras.metrics.AUC()])","013d25ff":"model_keras.fit(X, y, epochs=20)\n\ny_pred = model_keras.predict(test_df)\n\nsubmission = pd.DataFrame(index=data_test.index)\nsubmission['probability'] = y_pred\nsubmission.to_csv('submission_kears.csv')\nsubmission.head()","0a9d509b":"\/kaggle\/input\/python-and-analyze-data-final-project\/gender_train.csv\n\/kaggle\/input\/python-and-analyze-data-final-project\/gender_test_kaggle_sample_submission.csv\n\/kaggle\/input\/python-and-analyze-data-final-project\/tr_types.csv\n\/kaggle\/input\/python-and-analyze-data-final-project\/tr_mcc_codes.csv\n\/kaggle\/input\/python-and-analyze-data-final-project\/transactions.csv","1b69650d":"## <center> \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c<\/center>\n\n## \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \n### \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u044f\u0441\u044c \u043d\u0430 \u0435\u0433\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n### [Kaggle](https:\/\/www.kaggle.com\/t\/e8a939488d274dab9051cce14d5ca952) \u0412 \u0440\u043e\u043b\u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 [ROC AUC](https:\/\/dyakonov.org\/2017\/07\/28\/auc-roc-%D0%BF%D0%BB%D0%BE%D1%89%D0%B0%D0%B4%D1%8C-%D0%BF%D0%BE%D0%B4-%D0%BA%D1%80%D0%B8%D0%B2%D0%BE%D0%B9-%D0%BE%D1%88%D0%B8%D0%B1%D0%BE%D0%BA\/)"}}