{"cell_type":{"19e2a9e5":"code","4e917034":"code","ac73096a":"code","f9d3cbaa":"code","3753fea2":"code","aeba346c":"code","60d3de2e":"code","17eab712":"code","0da55c52":"code","08ca8635":"code","3143094a":"code","2de71103":"code","26d6df5e":"code","e6362b13":"code","5eb71ade":"code","3047262a":"code","5b2ae284":"code","5b8ce640":"code","9c3bdb36":"code","42b40ed4":"code","24ed24d5":"code","1112bb72":"code","826dabb9":"code","32626e73":"code","a4cefc4c":"code","866685d1":"code","8f6a5f2a":"code","f1eadea8":"code","6e065ab4":"code","db53bc01":"code","9bd4bc61":"code","7d64a47e":"code","b3673a74":"code","54c0ea9d":"code","85e7dbab":"code","8e56dc9f":"code","44c785d4":"markdown","e66e1191":"markdown","03cdb7f8":"markdown","92c35d78":"markdown","9ddd1c37":"markdown","2f25ddec":"markdown","646753b4":"markdown","805ae88f":"markdown","9647a0ea":"markdown","39865e90":"markdown","94cb5d96":"markdown","885509c2":"markdown","04ef487a":"markdown","0db59845":"markdown","edff455c":"markdown","bdecfe55":"markdown","b4d11eab":"markdown","0016ab46":"markdown","ce6ab2b5":"markdown","79876c21":"markdown","cea55656":"markdown","4789767e":"markdown","94781f05":"markdown","18190c61":"markdown","eab9f797":"markdown"},"source":{"19e2a9e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4e917034":"#Import required libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","ac73096a":"#Read dataset from the kaggle\n\ndf= pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')\ndf.head()","f9d3cbaa":"#Shape of the dataset\ndf.shape","3753fea2":"#Data description\ndf.describe()","aeba346c":"#Features and Data-types\ndf.info()","60d3de2e":"#Data description of numerical column\ndf.describe()","17eab712":"#Data description of categorical column\ndf.select_dtypes(exclude='number').describe()","0da55c52":"#Checking for Null values \n\ndf.isnull().sum()\n#There are no null values","08ca8635":"#Checking for Duplicate records \n\ndf.duplicated().value_counts()","3143094a":"plt.figure(figsize=(16,7))\n\nplt.subplot(1,2,1)\nplt.title('Count of Responses')\nsns.countplot(df['Response'])\n\nplt.subplot(1,2,2)\nplt.pie(df['Response'].value_counts(), explode=[0.05,0] , colors=[ 'lightskyblue', 'orange'] ,autopct='%.1f%%', labels=['No', 'Yes'], labeldistance=1.1)\nplt.title('Percentage of Response class')\n\nplt.show()","2de71103":"plt.figure(figsize=(16,7))\n\nplt.subplot(1,3,1)\nplt.title('Count of Male and Female')\nsns.countplot(df['Gender'])\n\nplt.subplot(1,3,2)\nplt.pie(df['Gender'].value_counts(), explode=[0.025,0] ,autopct='%.1f%%', labels=['Male', 'Female'], labeldistance=1.1)\nplt.title('Percentage of Male and Female')\n\nplt.subplot(1,3 ,3)\nsns.countplot(df['Gender'], hue=df['Response'], palette='Paired')\nplt.title('Gender with respect to Response')\n\nplt.show()","26d6df5e":"#Splitting Male & Female customers and analysing based on overall customers\n\nmale = df[df['Gender']=='Male']\nfemale = df[df['Gender']=='Female']\n\n\ncount_response = []\n\n#Count of customers who have not purchased\/responded to vehicle insurance\ncount_response.append(df[df['Response'] == 0]['Response'].count())\n\n#Count of customers who have purchased\/responded to vehicle insurance and those who are Male customers\ncount_response.append(male[male['Response']==1]['Response'].count())\n\n#Count of customers who have purchased\/responded to vehicle insurance and those who are Female customers\ncount_response.append(female[female['Response']==1]['Response'].count())\n\ncount_response","e6362b13":"plt.figure(figsize=(16,7))\n\nplt.subplot(1,3,1)\nplt.pie(male['Response'].value_counts(), explode=[0.025,0] ,autopct='%.1f%%', labels=['No', 'Yes'], labeldistance=1.1)\nplt.title('Percentage of Males interested')\n\nplt.subplot(1,3,2)\nplt.pie(female['Response'].value_counts(), explode=[0.025,0] ,autopct='%.1f%%', labels=['No', 'Yes'], labeldistance=1.1)\nplt.title('Percentage of Females interested')\n\nplt.subplot(1,3,3)\nplt.pie(count_response, explode=[0.025,0.05, 0] ,colors=[ 'blue', 'green', 'orange'], autopct='%.1f%%', labels=['No', 'Male_Yes', 'Female_Yes'], labeldistance=1.1)\nplt.title('Overall Percentage of Males and Females interested')\n\nplt.show()","5eb71ade":"#Splitting the data based on customers who have responded\nres_yes = df[df['Response']==1]\nres_no = df[df['Response']==0]\n\nplt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.distplot(df['Age'])\nplt.title('Distribution of Age variable')\n\nplt.subplot(1,2,2)\nsns.distplot(res_yes['Age'], label='Interested')\nsns.distplot(res_no['Age'], label='Not-Interested')\nplt.title('Distribution of Age variable w.r.t Response')\nplt.legend()\n\nplt.show()","3047262a":"plt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.histplot(df['Age'],bins=10, binwidth=5 )\nplt.title('Count of Age group')\n\nplt.subplot(1,2,2)\nsns.histplot(data=df, x='Age', hue='Response' ,bins=10, binwidth=5 )\nplt.title('Count of Age group w.r.t Response')\n\nplt.show()","5b2ae284":"plt.figure(figsize=(10,8))\n\nplt.subplot(2,1,1)\nsns.boxplot(df['Age'], color='m')\nplt.title('Box-Plot and Violin-Plot ')\n\nplt.subplot(2,1,2)\nsns.violinplot(df['Age'], color='m')\n\nplt.show()","5b8ce640":"plt.figure(figsize=(14,7))\n\nplt.subplot(1,2,1)\nplt.pie(df['Driving_License'].value_counts(), explode=[0.025,0] ,autopct='%.1f%%', labels=['Yes', 'No'], labeldistance=1.1)\nplt.title('Percentage of customers with Driving License')\n\nplt.subplot(1,2 ,2)\nsns.countplot(df['Driving_License'], hue=df['Response'], palette='Paired')\nplt.title('Customers having Driving License w.r.t Response')\n\nplt.show()","9c3bdb36":"plt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.distplot(df['Region_Code'])\nplt.title('Distribution of Region Code variable')\n\nplt.subplot(1,2,2)\nsns.boxplot(df['Region_Code'], color='c')\nplt.title('Box-Plot of Region Code')\n\nplt.show()","42b40ed4":"plt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.histplot(df['Region_Code'], binwidth=5 )\nplt.title('Count of Region Code group')\n\nplt.subplot(1,2,2)\nsns.histplot(data=df, x='Region_Code', hue='Response' , binwidth=5 )\nplt.title('Count of Region Code group w.r.t Response')\n\nplt.show()","24ed24d5":"plt.figure(figsize=(14,7))\n\nplt.subplot(1,2,1)\nplt.pie(df['Previously_Insured'].value_counts(), explode=[0.025,0] ,autopct='%.1f%%', labels=['Yes', 'No'], labeldistance=1.1)\nplt.title('Percentage of customers who were Previously Insured')\n\nplt.subplot(1,2 ,2)\nsns.countplot(df['Previously_Insured'], hue=df['Response'], palette='Paired')\nplt.title('Customers who were Previously Insured w.r.t Response')\n\nplt.show()","1112bb72":"plt.figure(figsize=(14,7))\n\nplt.subplots_adjust(wspace=0.3)\n\nplt.subplot(1,2,1)\nplt.pie(df['Vehicle_Age'].value_counts(), explode=[0.025,0.05, 0] ,colors=[ 'blue', 'green', 'orange'], autopct='%.1f%%', \n        labels=list(df['Vehicle_Age'].value_counts().index), labeldistance=1.1)\nplt.title('Overall Percentage of Vehicle age')\n\nplt.subplot(1,2 ,2)\nsns.countplot(df['Vehicle_Age'], hue=df['Response'], palette='Paired')\nplt.title('Vehicle age w.r.t Response')\n\n\nplt.show()","826dabb9":"plt.figure(figsize=(16,7))\n\nplt.subplots_adjust(wspace=0.35)\n\nplt.subplot(1,2,1)\nplt.title('Count of Vehicles which are damaged')\nsns.countplot(df['Vehicle_Damage'])\n\nplt.subplot(1,2 ,2)\nsns.countplot(df['Vehicle_Damage'], hue=df['Response'], palette='Paired')\nplt.title('Total count of vehicles damaged w.r.t Response')\n\nplt.show()","32626e73":"plt.figure(figsize=(15,4))\n\nsns.distplot(df['Annual_Premium'])\nplt.title('Distribution of Age variable')\n\nplt.show()\n\nplt.figure(figsize=(14,10))\n\nplt.subplot(2,1,1)\nsns.boxplot(df['Annual_Premium'], color='m')\nplt.title('Box-Plot and Violin-Plot ')\n\nplt.subplot(2,1,2)\nsns.violinplot(df['Annual_Premium'], color='m')\n\nplt.show()","a4cefc4c":"plt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.distplot(df['Policy_Sales_Channel'])\nplt.title('Distribution of Policy Sales Channel variable')\n\nplt.subplot(1,2,2)\nsns.boxplot(df['Policy_Sales_Channel'], color='c')\nplt.title('Box-Plot of Policy Sales Channel')\n\nplt.show()","866685d1":"plt.figure(figsize=(15,4))\n\nplt.subplot(1,2,1)\nsns.histplot(df['Policy_Sales_Channel'], binwidth=5 )\nplt.title('Count of Policy Sales Channel')\n\nplt.subplot(1,2,2)\nsns.histplot(data=df, x='Policy_Sales_Channel', hue='Response' , binwidth=5 )\nplt.title('Count of Policy Sales Channel w.r.t Response')\n\nplt.show()","8f6a5f2a":"plt.figure(figsize=(14,10))\n\nplt.subplot(2,1,1)\nsns.distplot(df['Vintage'])\nplt.title('Distribution of Age variable')\n\nplt.subplot(2,1,2)\nsns.boxplot(df['Vintage'], color='m')\nplt.title('Box-Plot')\n\nplt.show()","f1eadea8":"plt.figure(figsize=(12,6))\nplt.subplots_adjust(wspace=0.5)\n\nplt.subplot(1,2,1)\nsns.histplot(data=res_yes, x='Age', hue='Gender', binwidth=5)\nplt.title('Count of Male and Female who have responded')\n\nplt.subplot(1,2,2)\nsns.histplot(data=res_no, x='Age', hue='Gender', binwidth=5)\nplt.title('Count of Male and Female who have not responded')\nplt.show()","6e065ab4":"plt.figure(figsize=(12,6))\nplt.subplots_adjust(wspace=0.5)\n\nplt.subplot(1,2,1)\nsns.histplot(data=res_yes, x='Region_Code', hue='Gender', binwidth=5)\nplt.title('Count of Male and Female who have responded')\n\nplt.subplot(1,2,2)\nsns.histplot(data=res_no, x='Region_Code', hue='Gender', binwidth=5)\nplt.title('Count of Male and Female who have not responded')\nplt.show()","db53bc01":"pd.crosstab(index=df['Gender'], columns=df['Previously_Insured']).plot(kind='bar')\nplt.title('Male and Female who have previously insured')\nplt.show()","9bd4bc61":"pd.crosstab(index=df['Gender'], columns=df['Vehicle_Age']).sort_values(by='Female', axis=1, ascending=False).plot(kind='bar')\nplt.legend(loc=2)\nplt.title('Male and Female customers with Vehicle Age')\nplt.show()","7d64a47e":"# Id is in-significant, we will remove that column\n\ndf.drop('id', axis=1, inplace=True)\ndf.head(2)","b3673a74":"# Check for duplicates\ndf.duplicated(keep='first').value_counts()\n\n#269 records are duplicated, We are keeping the first record and deleting the rest of duplicate records\n#We found out there are duplicate values only after we removed insignificant variable ==> 'id'\n\n#deleting the duplicate records\ndf = df[~df.duplicated()]\ndf.head()\n\n#Shape of the dataset after duplicate deletion\ndf.shape","54c0ea9d":"#Null value\ndf.isnull().sum()\n\n#There are no null values\n\n#There cannot be any 'blank' or '?' in the numerical column\n#We are checking the unique values in categorical columns to check whether any 'blank' or '?' are there\n\ncol = df.select_dtypes(exclude='number')\n\nfor i in col:\n    print(f'\\nUnique values in {i} feature :')\n    print(df[i].unique())\n\n#There are no null values","85e7dbab":"#As seen in eda, only Annual Premium had outliers and age had negligible outliers\n\n# checking outliers in Annual Premium\nq1 = df['Annual_Premium'].quantile(0.25)\nq3 = df['Annual_Premium'].quantile(0.75)\n\niqr = q3-q1\n\nlower_limit = q1 - 1.5*iqr\nupper_limit = q3 + 1.5*iqr\n\noutlier_ap = df[(df['Annual_Premium']<lower_limit) | (df['Annual_Premium']>upper_limit)].shape\nprint('The shape of outliers in Annual Premium:', outlier_ap)\n\n#There are 10331 outliers \npercent = round(outlier_ap[0]\/len(df) * 100,2)\nprint(f'Percentage of outliers : {percent}%')\n\n#There are 2.71% outliers of overall records, so we will remove that","8e56dc9f":"#Checking whether any outliers in 'Age' feature\nsns.boxplot(df['Age'])\nplt.title('Box-plot of AGE')\nplt.show()\n\n#There is no significant outliers in Age, so we are not considering AGE for outlier treatment","44c785d4":"   # ----------------------------Thank You-------------------------------","e66e1191":"### Response feature","03cdb7f8":"### Null checking and imputation","92c35d78":"cor = df.iloc[:, 1:].corr()\n\nplt.figure(figsize=(10,8))\nsns.heatmap(cor,linewidths=2,square=True, annot=True, cmap='YlGnBu')\nplt.title('Corelation Heatmap')\nplt.show()","9ddd1c37":"### Vehicle Damage feature","2f25ddec":"### Annual Premium feature","646753b4":"### Age vs Gender with respect to Response","805ae88f":"### Region Code vs Gender with respect to Response","9647a0ea":"# Data Pre-processing","39865e90":"### Outlier Analysis (IQR Method)","94cb5d96":"### Removing in-significant variables which are not useful ","885509c2":"### Vintage feature","04ef487a":"### Age feature","0db59845":"### Corelation plot","edff455c":"### Previously Insured Feature","bdecfe55":"## Further Scope\n>#### Data processing\n>#### Transformation\n>#### Modelling\n>#### Hyper-parameter tuning\n>#### Recomendation","b4d11eab":"# Exploratory Data Analysis\n### Unvariate and MultiVariate Analysis","0016ab46":"# I will upload one more notebook with all the ML models","ce6ab2b5":"### Count of Vehicle Age vs Gender with respect to Response","79876c21":"### Gender feature","cea55656":"### Duplicate records","4789767e":"### Policy Sales Channel feature","94781f05":"### Count of Previously Insured vs Gender with respect to Response","18190c61":"### Driving License feature","eab9f797":"### Region_Code feature"}}