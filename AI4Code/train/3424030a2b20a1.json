{"cell_type":{"98b2fb3c":"code","c51c0b68":"code","2ce5ea7e":"code","5e87258c":"code","6f0db721":"code","9e9257b1":"code","efa3d4e2":"code","95df1606":"code","d21f6946":"code","67fc6594":"code","d50f18af":"markdown","4f1856ac":"markdown","68889adf":"markdown","e958e68c":"markdown","396a1c20":"markdown","53badf23":"markdown","02a520a9":"markdown","d3347e32":"markdown"},"source":{"98b2fb3c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c51c0b68":"import matplotlib.pyplot as plt\nimport seaborn as sns","2ce5ea7e":"datafm = pd.read_csv('..\/input\/football-manager-2020\/datafm20.csv')\ndatafm","5e87258c":"ageFilter = datafm[(datafm.Age<=21)]\npaFilter = ageFilter[ageFilter.PA >= 150]\nwonderkid = paFilter.sort_values(by = \"PA\", ascending = False)\nwonderkid","6f0db721":"wdkbynat = wonderkid[\"Nation\"].value_counts().head(10)\nwdkbynat = wdkbynat.to_frame()\nwdkbynat['Nationality'] = wdkbynat.T.columns\n\nchart = sns.barplot(x = wdkbynat['Nation'], y = wdkbynat['Nationality'],palette = 'tab20c')\nchart.set_xlabel(xlabel = \"Nationality\")\nchart.set_ylabel(ylabel = \"Frequncy\")\nchart.set_title(\"Number of Wonderkids by Nationality\",fontsize = 18)\nsns.set(rc={'figure.figsize':(15,12)})","9e9257b1":"wdkbylig = wonderkid[\"Division\"].value_counts().head(10)\nwdkbylig = wdkbylig.to_frame()\nwdkbylig.plot.barh(figsize=(12,10), fontsize = 14, legend=False)\nplt.title('Number of Wonderkids by League', fontsize=20)\nplt.show","efa3d4e2":"wdkbypos = wonderkid['Best Pos'].value_counts()\nwdkbypos = wdkbypos.to_frame()\nwdkbypos.plot.bar(figsize=(12,10),fontsize = 14, legend = False, title = \"Number of Wonderkids by Position\")","95df1606":"wdkbyrol = wonderkid['Best Role'].value_counts().head(10)\nwdkbyrol = wdkbyrol.to_frame()\nwdkbyrol.plot.bar(figsize=(12,10),fontsize = 14, legend = False, title = \"Number of Wonderkids by Role\")","d21f6946":"wdkbyfut = wonderkid['Preferred Foot'].value_counts()\nlabel = wonderkid['Preferred Foot'].unique()\n\nexplodes = [0.1,0.1,0.1,0.1,0.1]\nplt.style.use(\"seaborn-pastel\")\nwedge_dict = {\n    'edgecolor': 'black',\n    'linewidth': 1.5}\n\nplt.pie(wdkbyfut, labels = label, startangle = 90, \n        autopct = '%1.0f%%', explode = explodes, pctdistance = 0.75,\n        shadow = True, wedgeprops = wedge_dict)\nplt.title(\"Wonderkid by Preffered Foot\")","67fc6594":"divfilter = wonderkid[wonderkid.Division == \"English Premier Division\" ].sort_values(by=['Wage'], ascending = False)\ndivfilter['Wage'].plot.hist(title = \"English Premier League's Wonderkids Wage Distribution\")","d50f18af":"Wonderkids by Preffered Foot","4f1856ac":"Filter Wonderkid\n\nAge <= 21\nPA >= 150","68889adf":"Wonderkids Wage Distribution in Premier League","e958e68c":"Number of Wonderkids by Nationality","396a1c20":"Read CSV Data","53badf23":"Number of Wonderkids by Role","02a520a9":"Number of Wonderkids by Best Position","d3347e32":"Number of Wonderkids by League"}}