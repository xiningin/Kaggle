{"cell_type":{"bcef8bf3":"code","0ee45b6f":"code","ac5f4775":"code","a1b6c362":"code","9e5b70fc":"code","11e85fec":"code","bdd748cb":"code","a3281732":"code","47968865":"code","beb8787f":"code","c65dff7f":"code","55d656d3":"code","099eba31":"code","ca92cd66":"code","1f5653ba":"code","b6f26734":"code","b258d34f":"code","c8f313c6":"code","406a57a9":"code","ff54e56c":"code","aa7550ee":"code","5ca1d648":"code","544a1f34":"code","77cfeeb0":"code","1c45a03a":"code","3734129a":"code","4f1b8f80":"code","0713d2ce":"code","41c0e177":"code","891d3684":"code","5677fc74":"code","9c0b2749":"code","17e69c99":"code","baefc4a3":"code","6bc3577b":"code","65f6d160":"code","86a8b954":"code","a7db0d5a":"code","d2101ac2":"markdown","c76d563d":"markdown","b427d0ce":"markdown","e3a3686a":"markdown","438a35e9":"markdown","839eb0e3":"markdown","e4d54eba":"markdown","989149c9":"markdown"},"source":{"bcef8bf3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ee45b6f":"Trainhp = pd.read_json(\"\/kaggle\/input\/hotpotqa-question-answering-dataset\/hotpot_train_v1.1.json\")","ac5f4775":"Trainhp.head()","a1b6c362":"TrainQuac = pd.read_csv(\"..\/input\/quaccoqa\/dataquest\/Quac_train.csv\")","9e5b70fc":"TrainQuac.head()","11e85fec":"len(TrainQuac)","bdd748cb":"TrainQuac[\"context\"][0]","a3281732":"TrainCoqa = pd.read_csv(\"..\/input\/quaccoqa\/dataquest\/CoQA_train.csv\")","47968865":"TrainCoqa.head()","beb8787f":"TrainSquad = pd.read_csv(\"..\/input\/squad-20-csv-file\/squad_csv\/train-squad.csv\")","c65dff7f":"TrainSquad.head()","55d656d3":"len(TrainSquad)","099eba31":"TrainSquad[\"context\"][0]","ca92cd66":"TrainQasc = pd.read_json(\"..\/input\/question-answering-via-sentence-composition-qasc\/QASC_Dataset\/train.jsonl\",lines = True)","1f5653ba":"TrainQasc.head()","b6f26734":"len(TrainQasc)","b258d34f":"TrainBoolq = pd.read_json(\"..\/input\/boolq-dataset\/train.jsonl\",lines = True)","c8f313c6":"len(TrainBoolq)","406a57a9":"TrainMultirc = pd.read_json(\"..\/input\/multirc-dataset\/splitv2\/train_456-fixedIds.json\")","ff54e56c":"TrainMultirc[\"data\"][0]","aa7550ee":"TrainDrop = pd.read_json(\"..\/input\/dropdataset\/drop_dataset\/drop_dataset_train.json\").T","5ca1d648":"TrainDrop","544a1f34":"TrainDrop[\"qa_pairs\"][100][0][\"answer\"][\"date\"]","77cfeeb0":"TrainDropping = pd.DataFrame(columns=['passage', 'question', 'number','date'])\n","1c45a03a":"TrainDrop[\"qa_pairs\"][35][1][\"answer\"][\"date\"]","3734129a":"TrainDropping","4f1b8f80":"for i in range(len(TrainDrop)):\n    print(i)\n    for j in range(len(TrainDrop[\"qa_pairs\"][i])):\n        TrainDropping = TrainDropping.append({\"passage\": TrainDrop[\"passage\"][i], \"question\": TrainDrop[\"qa_pairs\"][i][j][\"question\"], \n                              \"number\": TrainDrop[\"qa_pairs\"][i][j][\"answer\"][\"number\"],\"date\" : TrainDrop[\"qa_pairs\"][i][j][\"answer\"][\"date\"] }, ignore_index=True)\n       \n    \n    ","0713d2ce":"TrainDropping.to_csv(\"train-drop.csv\",index = False)","41c0e177":"TrainDropping[\"question\"][5]","891d3684":"TrainDropping[\"number\"].value_counts()","5677fc74":"TestDrop = pd.read_json(\"..\/input\/dropdataset\/drop_dataset\/drop_dataset_dev.json\").T\nTestDropping = pd.DataFrame(columns=['passage', 'question', 'number','date'])\n","9c0b2749":"for i in range(len(TestDrop)):\n    print(i)\n    for j in range(len(TestDrop[\"qa_pairs\"][i])):\n        TestDropping = TestDropping.append({\"passage\": TestDrop[\"passage\"][i], \"question\": TestDrop[\"qa_pairs\"][i][j][\"question\"], \n                              \"number\": TestDrop[\"qa_pairs\"][i][j][\"answer\"][\"number\"],\"date\" : TestDrop[\"qa_pairs\"][i][j][\"answer\"][\"date\"] }, ignore_index=True)\n       \n    \n    ","17e69c99":"TestDropping.head()","baefc4a3":"TestDropping[\"number\"][0]","6bc3577b":"TrainDropping = TrainDropping[TrainDropping.number != '']\nTestDropping = TestDropping[TestDropping.number != '']\n","65f6d160":"TrainDropping.shape\n\n","86a8b954":"TestDropping.shape","a7db0d5a":"TrainDropping.to_csv(\"droptrain.csv\",index = False)\nTestDropping.to_csv(\"droptest.csv\",index = False)","d2101ac2":"# Quac Dataset","c76d563d":"# QASC","b427d0ce":"# MultiRc Dataset","e3a3686a":"# HotPot QA","438a35e9":"# Drop Dataset","839eb0e3":"# CoQA Dataset","e4d54eba":"# Squad","989149c9":"# BoolQ"}}