{"cell_type":{"7ce908cc":"code","7a236980":"code","d856ee1c":"code","64b54251":"code","baafb50a":"code","a63de755":"code","56bd16cd":"code","5b7d7a4f":"code","9fe06c4f":"code","7e5e4a43":"code","16f60d54":"markdown","86886348":"markdown","d708bcf1":"markdown","fc628a57":"markdown","3b7b72f6":"markdown","735f6dd5":"markdown"},"source":{"7ce908cc":"import numpy as np \nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split,validation_curve","7a236980":"df = pd.read_csv('https:\/\/archive.ics.uci.edu\/ml\/'\n                 'machine-learning-databases'\n                 '\/breast-cancer-wisconsin\/wdbc.data', header=None)","d856ee1c":"df.shape","64b54251":"X = df.loc[:, 2:].values\ny = df.loc[:, 1].values\nle = LabelEncoder()\ny = le.fit_transform(y)\nprint(\"class = \",le.classes_)\nnp.unique(y)","baafb50a":"print( \"[y == 0] => \" , len(X[y==0]) )\nprint( \"[y == 1] => \", len(X[y==1]) )","a63de755":"X_imb = np.vstack((X[y == 0], X[y == 1][:40]))\ny_imb = np.hstack((y[y == 0], y[y == 1][:40]))\n\nprint( \"[y == 0] => \" , len(X_imb[y_imb==0]) )\nprint( \"[y == 1] => \", len(X_imb[y_imb==1]) )","56bd16cd":"y_pred = np.zeros(y_imb.shape[0])\nnp.mean(y_pred == y_imb) * 100","5b7d7a4f":"from sklearn.utils import resample\n\nprint('label 1 sample num before resamping:', X_imb[y_imb == 1].shape[0])\n\nX_upsampled, y_upsampled = resample(X_imb[y_imb == 1],\n                                    y_imb[y_imb == 1],\n                                    replace=True,\n                                    n_samples=X_imb[y_imb == 0].shape[0],\n                                    random_state=123)\n\nprint('label 1 sample num after resamping:', X_upsampled.shape[0])","9fe06c4f":"X_bal = np.vstack((X[y == 0], X_upsampled))\ny_bal = np.hstack((y[y == 0], y_upsampled))","7e5e4a43":"y_pred = np.zeros(y_bal.shape[0])\nnp.mean(y_pred == y_bal) * 100","16f60d54":"# get label 0 percentage ","86886348":"# label 0 count == label 1 count","d708bcf1":"# resample  => make label count same ","fc628a57":"# make new data (label 0 count and label 1 count is same)","3b7b72f6":"# [label 0] all + [label 1] 40","735f6dd5":"# get label count"}}