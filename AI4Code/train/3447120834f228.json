{"cell_type":{"bac82b66":"code","1c9dafa8":"code","8ef3db8a":"code","c0117eb2":"code","d11c25fa":"code","60282828":"code","5fe2cabb":"code","8805e783":"code","ffc89e26":"code","63034942":"code","411eb7aa":"code","12755be5":"code","6f68853e":"code","47a65ba7":"code","2d38d4e2":"code","8b1b0add":"code","f3444c23":"code","85de290d":"code","e3f56764":"code","c07e4056":"markdown","e0ea69f6":"markdown","cd125ba8":"markdown","4f529709":"markdown","44b398be":"markdown","255a36db":"markdown","46681f61":"markdown","7ab5c0b9":"markdown","9449d54d":"markdown","74216880":"markdown","d4187231":"markdown","d7c82638":"markdown","55e35d1c":"markdown","8db617cf":"markdown","ac34b781":"markdown","fd1c54d7":"markdown"},"source":{"bac82b66":"import pandas as pd\nimport time\nimport numpy as np\nimport xgboost as xgb\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_squared_error\n\nimport optuna\nfrom optuna import Trial, visualization","1c9dafa8":"train = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv')\nsample = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv')","8ef3db8a":"train.head()","c0117eb2":"feature_cols = [col for col in train.columns.tolist() if col not in ['id', 'target']]\ntarget_cols = ['target']","d11c25fa":"kf = KFold(n_splits=5, random_state=2021, shuffle=True)\n\nfor i, (trn, val) in enumerate(kf.split(train)):\n    train.loc[val, 'kfold'] = i\ntrain['kfold'] = train['kfold'].astype(int)","60282828":"def fit_xgb(trial, xtr, ytr, xval, yval):\n    params = {\n        \"n_estimators\": trial.suggest_categorical(\"n_estimators\", [150, 200, 250, 300]),\n        \"subsample\": trial.suggest_discrete_uniform(\"subsample\", 0.6,1,0.1),\n        \"colsample_bytree\": trial.suggest_discrete_uniform(\"colsample_bytree\", 0.6,1,0.1),\n        \"eta\": trial.suggest_loguniform(\"eta\",1e-2,0.1),\n        # \"gamma\": trial.suggest_loguniform(\"gamma\",0.05,1),\n        \"max_depth\": trial.suggest_categorical(\"max_depth\",[5,7,9,11,13]),\n        \"min_child_weight\": trial.suggest_int(\"min_child_weight\",5,11),\n        \"random_state\": 2021\n    }\n    \n    model = xgb.XGBRegressor(**params)\n    model.fit(xtr, ytr.reshape(-1,))\n    \n    y_val_pred = model.predict(xval)\n    \n    log = {\n        \"train rmse\": mean_squared_error(ytr, model.predict(xtr), squared=False), # setting squared=False returns root_mean_squared_error\n        \"valid rmse\": mean_squared_error(yval, y_val_pred, squared=False)  # setting squared=False returns root_mean_squared_error\n    }\n    \n    return model, log","5fe2cabb":"def objective(trial):\n    rmse = 0\n    for fold in range(5):\n        trn_idx = train['kfold'] != fold\n        val_idx = train['kfold'] == fold\n        trn = train.loc[trn_idx, :]\n        val = train.loc[val_idx, :]\n\n        xtr, ytr = trn[feature_cols].values, trn[target_cols].values\n        xval, yval = val[feature_cols].values, val[target_cols].values\n        \n        model, log = fit_xgb(trial, xtr, ytr, xval, yval)\n        rmse += log['valid rmse']\/5\n        \n    return rmse","8805e783":"study = optuna.create_study(direction=\"minimize\", study_name='Xgboost optimization')\nstudy.optimize(objective, n_trials=20)","ffc89e26":"history = study.trials_dataframe()\nhistory.sort_values(by=\"value\", ascending=True)","63034942":"study.best_params","411eb7aa":"visualization.plot_optimization_history(study)","12755be5":"visualization.plot_parallel_coordinate(study)","6f68853e":"visualization.plot_param_importances(study)","47a65ba7":"clf = xgb.XGBRegressor(**(study.best_params))","2d38d4e2":"clf.fit(train[feature_cols], train[target_cols])","8b1b0add":"preds = pd.Series(clf.predict(test[feature_cols]), name='target')","f3444c23":"preds = pd.concat([test['id'], preds], axis=1)","85de290d":"preds.head()","e3f56764":"preds.to_csv(\"submission.csv\", index=False)","c07e4056":"## Objective Function","e0ea69f6":"[Visit this site to learn more](https:\/\/optuna.readthedocs.io\/en\/stable\/reference\/generated\/optuna.trial.Trial.html#optuna.trial.Trial)","cd125ba8":"1. trial.suggest_categorical : Suggest a value for the categorical parameter. The value is sampled from the `choices`\n2. trial.suggest_discrete_uniform: Suggest a value for the discrete parameter. The value is sampled uniformely from the range `[low,high]`, with some step of discretization\n3. trial.suggest_logunifrom: Suggest a value for the continuous parameter. The value is sampled from the range `[low,high)` in the log domain.\n4. trial.suggest_int: Suggest a value for the integer parameter. The value is sampled from the integers in `[low,high]`","4f529709":"## Visualization","44b398be":"## Creating Submission File","255a36db":"## Training Function","46681f61":"### **NOTE** : The Objective Function should return the metric to be minimized or maximized ","7ab5c0b9":"## If you learnt something new, Consider upvoting my kernel :)","9449d54d":"## CREATE STUDY\n### Specify whether to maximize or minimize your metric (which is returned by the Objective Function)","74216880":"![](https:\/\/raw.githubusercontent.com\/optuna\/optuna\/master\/docs\/image\/optuna-logo.png)","d4187231":"<link rel=\"preconnect\" href=\"https:\/\/fonts.gstatic.com\">\n<link href=\"https:\/\/fonts.googleapis.com\/css2?family=Lato&family=Open+Sans&display=swap\" rel=\"stylesheet\">\n<h2 style=\"font-family: 'Lato', sans-serif; text-align:center\">Let's Begin!<\/h2>","d7c82638":"<link rel=\"preconnect\" href=\"https:\/\/fonts.gstatic.com\">\n<link href=\"https:\/\/fonts.googleapis.com\/css2?family=Open+Sans&display=swap\" rel=\"stylesheet\">\n<h1 style=\"text-align: center; font-family: 'Open Sans', sans-serif;\"> A SIMPLE GUIDE TO PERFORM HYPERPARAMETER OPTIMIZATION WITH OPTUNA <\/h1>","55e35d1c":"Public Score: 0.69986","8db617cf":"### The `visualization` module provides utility functions for plotting the optimization process using plotly and matplotlib\n[https:\/\/optuna.readthedocs.io\/en\/stable\/reference\/visualization\/index.html](https:\/\/optuna.readthedocs.io\/en\/stable\/reference\/visualization\/index.html)","ac34b781":"## Retraining on the Entire Data","fd1c54d7":"## Create Folds"}}