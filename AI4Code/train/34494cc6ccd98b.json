{"cell_type":{"f2221818":"code","6c55c3f4":"code","7584457a":"code","d65d2d54":"code","af35b1a8":"code","eab3d942":"code","edb275e4":"code","0b7c2e97":"code","10c95591":"code","49063951":"code","efe92120":"code","40bc8844":"code","85c6004f":"code","4def7d6b":"code","0bf75b64":"code","95a15c8f":"code","2f78cce7":"code","56e562e4":"code","87fd09fb":"code","047af184":"code","8ea5f2e1":"code","7f0a9122":"code","160792df":"code","da3fa9ea":"code","fe2241d1":"code","bb1cc3fa":"code","5589a07b":"code","554b704c":"code","02a75fc0":"code","4739a68d":"code","0f2f0e11":"code","0e705eea":"code","895dc241":"code","35264b23":"code","6ad00370":"code","e3c82219":"code","956f0648":"code","ad69f7e6":"code","83348ec3":"code","1b9a619b":"code","be6be2ca":"code","dd715963":"code","abee6fd8":"code","b29a864d":"code","0a74377b":"code","e0d655ef":"code","8db0d705":"code","fa760122":"code","dbff1e96":"code","6dec2cb0":"code","a4e1298f":"markdown","cea09b63":"markdown","53cc1d33":"markdown","d3b0e87f":"markdown","5bcee52e":"markdown","411c9d1f":"markdown","4c8fe2e8":"markdown","981b6b0d":"markdown","04615a4d":"markdown","ef428410":"markdown","a0539e42":"markdown","66adb20d":"markdown","a4e9ae91":"markdown","3e86c383":"markdown","2e7ee009":"markdown"},"source":{"f2221818":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6c55c3f4":"data = pd.read_csv('\/kaggle\/input\/the-movies-dataset\/movies_metadata.csv')\n","7584457a":"# print the full summary \ndata.info()","d65d2d54":"#preview the first 5 rows of DataFrame\ndata.head()","af35b1a8":"#preview the last 10 rows of DataFrame\ndata.tail(10)","eab3d942":"#Correlation is used to understand the relationship between features\n#If the result is close to 1, then they are proportional to each other\n#If the result is close to -1, there is an inversely proportional relationship\n#If the result is 0, there is no relationship.\ndata.corr()\n","edb275e4":"data.describe()","0b7c2e97":"#correlation map\nf,ax = plt.subplots(figsize=(4, 4))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n","10c95591":"data.columns.values","49063951":"# Line Plot\ndata.revenue.plot(kind = 'line', color = 'b',label = 'Revenue',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.vote_count.plot(color = 'r',label = 'Vote Count',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n","efe92120":"# Scatter Plot \ndata.plot(kind='scatter', x='revenue', y='vote_count',alpha = 0.5,color = 'g')\nplt.xlabel('Revenue') \nplt.ylabel('Vote Count')\nplt.title('Revenue- Vote Count on Scatter Plot')# title","40bc8844":"# Histogram\n# bins = number of bar in figure\ndata.vote_count.plot(kind = 'hist',bins = 50,figsize = (8,8),grid= True)\nplt.show()","85c6004f":"# Histogram\n# bins = number of bar in figure\ndata.revenue.plot(kind = 'hist',bins = 50,figsize = (8,8),grid= True)\nplt.show()","4def7d6b":"data.columns.values","0bf75b64":"#create dictionary\ndictionary = data.set_index(['original_title','original_language','production_countries'])['vote_count'].to_dict()\ndictionary","95a15c8f":"x = data['vote_average'] > 9.8\ndata[x]","2f78cce7":"#user definition function\ndef avg_number(x, y):\n    print(\"Average of \",x,\" and \",y, \" is \",(x+y)\/2)\navg_number(3, 4)","56e562e4":"#scope\nx = 35\ny = 23\ndef sF(x,y):\n    return x+y\nprint(sF(4,5))\nprint(x+y)\n    ","87fd09fb":"#how can we learn what is built in scope\nimport builtins\ndir(builtins)","047af184":"#nested function\n#a function which is defined inside another function\ndef subFunc(num1):\n    def sub(num2):\n        return num1 - num2\n    return sub\nres = subFunc(15)\nprint(res(20))\n","8ea5f2e1":"def defArg(name, inst='Come here!'):\n    print (name,inst)\ndefArg('Beyza')","7f0a9122":"def mult(*args):\n    r = 1\n    for num in args:\n        r = r * num\n    print('result:',r)\n   \nmult(2,4)\nmult(3,5,6,80)\n","160792df":"def cDetails(**state_info):   \n   for k,v in state_info.items():\n      print(\"{} is {}\".format(k,v))\n\ncDetails(StateName=\"Minnesota\", Elevation = 795)\nprint('\\n')\ncDetails(StateName=\"Wisconsin\", Elevation= 873, Population= 255214)\n","da3fa9ea":"#lambda function\n#lambda argument: manipulate(argument)\nadd = lambda x, y: x + y\nprint(add(4, 6))\n\n#anonymoun function\nli = [5, 7, 22, 77, 23, 73, 61] \ny = map(lambda x: x if (x!= 22 and x!=23) else 40 ,li)\nprint(list(y))\n","fe2241d1":"name = \"BEYZANUR\"\nit = iter(name)\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(next(it))","bb1cc3fa":"#zip \nlist1 = [1,3,4,5]\nlist2 = ['a','c','d','f']\nz = zip(list1,list2)\nprint(z)\nz_list =list(z)\nprint(z_list)\n\nun_zip = zip(*z_list)\nun_list1,un_list2 = list(un_zip) # unzip returns tuble\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))","5589a07b":"lst1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nlst2 = [x**2 if x<5 else 5 if x<7 else x*2 for x in lst1]\nprint(lst1)\nprint(lst2)","554b704c":"threshold = sum(data.revenue)\/len(data.revenue)\ndata[\"vote_level\"] = [\"high\" if i > threshold else \"low\" for i in data.revenue]\ndata.loc[180:200,[\"vote_level\",\"revenue\"]] \n","02a75fc0":"data.head()  # head shows first 5 rows","4739a68d":"data.tail()","0f2f0e11":"data.columns","0e705eea":"data.shape","895dc241":"data.info()","35264b23":"data2 = data['original_language'].value_counts(dropna =False)\ndata2","6ad00370":"data2.shape","e3c82219":"data.describe()#ignore null entries","956f0648":"data.boxplot(column='vote_average',fontsize=  14, widths = 0.6)","ad69f7e6":"data.boxplot(column='vote_average',by ='adult', fontsize=  8, rot=45)","83348ec3":"data_new = data.head()    # I only take 5 rows into new data\nmelted=pd.melt(frame=data_new,id_vars = 'original_title', value_vars= ['vote_average','revenue','vote_count'])\nmelted","1b9a619b":"melted.pivot(index = 'original_title', columns = 'variable',values='value')\n","be6be2ca":"data1 = data.head()\ndata2= data.tail()\nconc_data = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_datavote_average\t","dd715963":"data1 = data['vote_average'].head()\ndata2= data['vote_count'].head()\ndata3= data['revenue'].head()\nconc_data_col = pd.concat([data1,data2,data3],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","abee6fd8":"data.dtypes","b29a864d":"data['popularity'] = data['popularity'].astype('category')\ndata.dtypes","0a74377b":"data.info()","e0d655ef":"data[\"original_language\"].value_counts(dropna =False)","8db0d705":"data1=data   # also we will use data to fill missing value so I assign it to data1 variable\ndata1[\"original_language\"].dropna(inplace = True)\nassert  data['original_language'].notnull().all()\n","fa760122":"data[\"original_language\"].fillna('empty',inplace = True)\n","dbff1e96":"data[\"original_language\"].value_counts(dropna =False)","6dec2cb0":"'vote_average','revenue','vote_count'])\nmelted","a4e1298f":"**Pandas**","cea09b63":"**EXPLORATORY DATA ANALYSIS\u00b6\n**\n\nvalue_counts(): Frequency counts\n","53cc1d33":"****ITERATORS****","d3b0e87f":"**VISUAL EXPLORATORY DATA ANALYSIS**","5bcee52e":"**DICTIONARY**","411c9d1f":"**CLEANING DATA**","4c8fe2e8":"There are 4 float features.\nThey are 'revenue', 'runtime', 'vote_avarage', 'vote_count'.\nMost likely the correlation betweeen 'revenue' and 'vote_count' is  proportional \n","981b6b0d":"**MATPLOTLIB**\u00b6\n\nMatplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.","04615a4d":"**DEFAULT AND FLEXIBLE ARGUMENTS**\n\ndef f(a,b=1)\ndef f(*arg)\ndef f(**kwargs)","ef428410":"**TIDY DATA\u00b6\n**","a0539e42":"**MISSING DATA and TESTING WITH ASSERT\u00b6\n**\n\nIf we encounter with missing data, what we can do:\n","66adb20d":"**CONCATENATING DATA\u00b6\n**","a4e9ae91":"**DATA TYPES\u00b6\n**\n\n5 basic data types: object(string),booleab, integer, float and categorical","3e86c383":"**CORRELATION**","2e7ee009":"**LIST COMPREHENSION**"}}