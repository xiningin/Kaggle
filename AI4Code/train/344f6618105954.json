{"cell_type":{"368501c4":"code","b1f9f300":"code","7792ecb5":"code","5556cf31":"code","96bc0340":"code","61b1528c":"code","3d0dfe0d":"code","6e04c417":"code","7cdb9350":"code","6caf3672":"code","ad10aca4":"code","29ad0427":"code","c974d7d3":"code","4f63547a":"code","56e4dcee":"code","a73f55be":"code","e479df41":"code","14b0bbec":"code","5250a520":"code","a586461b":"markdown","150f7c27":"markdown","24fa027b":"markdown","1b1413a3":"markdown","91855706":"markdown","eea7380b":"markdown","1b0c3787":"markdown","d52641b6":"markdown","b852c7b4":"markdown","4d108d57":"markdown","af9ae8d5":"markdown","ef419044":"markdown","8c042b70":"markdown","fb88b1e6":"markdown"},"source":{"368501c4":"import pandas as pd\nfrom scipy.stats import shapiro\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import shapiro\nimport pandas as pd\nimport itertools\nimport statsmodels.stats.api as sms\nfrom scipy.stats import shapiro\nimport scipy.stats as stats\ndf = pd.read_csv(\"..\/input\/pricing\/pricing kopyas 2.csv\" , sep = \";\")\n\n","b1f9f300":"#Visualization (Observation of outliers)\nsns.boxplot(x = \"category_id\" , y = \"price\" , data = df)\nsns.barplot(x = \"category_id\" , y = \"price\" , data = df)","7792ecb5":"#Total number of observations\nlen(df)","5556cf31":"#Detection of lower and upper values of outliers.\ndef outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.05)\n    quartile3 = dataframe[variable].quantile(0.95)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\n\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\n\nreplace_with_thresholds(df, \"price\")","96bc0340":"#Calculation of confidence intervals\nsms.DescrStatsW(df.price).tconfint_mean()","61b1528c":"#Showing the first two observations.\ndf.head(2)","3d0dfe0d":"#Difference in value between categories.\ndf.category_id.value_counts()","6e04c417":"#Better A \/ B test results, I equalized all categories.\ndf_a = df.loc[df.category_id == 489756 , \"price\"][0:97].reset_index()\ndf_b = df.loc[df.category_id == 874521 , \"price\"][0:97].reset_index()\ndf_c = df.loc[df.category_id == 361254 , \"price\"][0:97].reset_index()\ndf_d = df.loc[df.category_id == 326584 , \"price\"][0:97].reset_index()\ndf_e = df.loc[df.category_id == 675201 , \"price\"][0:97].reset_index()\ndf_f = df.loc[df.category_id == 201436 , \"price\"][0:97].reset_index()","7cdb9350":"#Collation of categories on a column basis. (Preparation for A \/ B test.)\ndff = pd.concat([df_a, df_b, df_c , df_d , df_e , df_f] ,axis = 1)\ndff = dff.iloc[:,[1,3,5,7,9,11]]\n\ndff.columns = [\"489756\",\"874521\",\"361254\",\"326584\",\"675201\",\"201436\"]\ndff.head(2)","6caf3672":"#Searching for missing values\ndff.isnull().sum()","ad10aca4":"#The conjecture of normality. H0 is rejected because the pvalue value is less than 0.05 in all crossings. That is, the normal distribution assumption is not provided.\nitems = [\"489756\",\"874521\",\"361254\",\"326584\",\"675201\",\"201436\"]\na = [(items[i],items[j]) for i in range(len(items)) for j in range(i+1, len(items))]\n\nfor i in range(0,15):\n    print(a[i][0] , \"ve\" , a[i][1])\n    df_a = dff[a[i][0]]\n    #df_a = df_a.reset_index()\n    df_a.columns = [\"A\"]\n    df_b = dff[a[i][1]]\n    #df_b = df_b.reset_index()\n    df_b.columns = [\"B\"]\n    print('Test Statistics = %.4f, p-value = %.4f' % shapiro(df_a))\n    print('Test Statistics = %.4f, p-value = %.4f' % shapiro(df_b))","29ad0427":"#Variance homogeneity (all variances are distributed homogeneously.)\n\nitems = [\"489756\",\"874521\",\"361254\",\"326584\",\"675201\",\"201436\"]\na = [(items[i],items[j]) for i in range(len(items)) for j in range(i+1, len(items))]\n\nfor i in range(0,15):\n    print(a[i][0] , \"ve\" , a[i][1] )\n    print('Test Statistics = %.4f, p-value = %.4f' % stats.levene(dff[a[i][0]], dff[a[i][1]]))\n    \n    p = stats.levene(dff[a[i][0]], dff[a[i][1]])\n    if p[1] < 0.05:\n        print(a[i][0] , \"and\" , a[i][1] , \" h0 is rejected because the p value is less than 0.05. In other words, variances are not distributed homogeneously.\")\n    else:\n        print(a[i][0] , \"and\" , a[i][1] , \" h0 cannot be rejected because the p value is greater than 0.05. That is, variances are distributed homogeneously.\")","c974d7d3":"#Since there is no normality in all crossings, we will do the nonparametric test (Mann-Whitney U test).\n\nitems = [\"489756\",\"874521\",\"361254\",\"326584\",\"675201\",\"201436\"]\na = [(items[i],items[j]) for i in range(len(items)) for j in range(i+1, len(items))]\n\n\nfor i in range(0,15):\n    print(a[i][0] , \"and\" , a[i][1] )\n    p = stats.stats.mannwhitneyu(dff[a[i][0]] , dff[a[i][1]])\n    \n    if p[1] < 0.05:\n        print(\"-\"*100)\n        print(a[i][0] , \"and\" , a[i][1] , \"Since the p-value is less than 0.05, H0 is rejected.\")\n        \n        \n        print(\"-\"*100)\n    else:\n        print(\"H0 cannot be rejected because the p value is greater than 0.05. \")\n        \n ","4f63547a":"#Taking averages.\n\ndff.mean().mean()","56e4dcee":"#Looking at descriptive statistics.\n\ndff.describe().T","a73f55be":"#Creating a movable gap.\n\nsms.DescrStatsW(df.price).tconfint_mean()","e479df41":"#one. step: calculating the income to be obtained from those who want to buy under 42 units.\nfrekans = len(df.loc[df.price < 42])\ngelir = frekans * 42\ngelir\n","14b0bbec":"\n#2nd step: calculate the income from those who want to buy between 42 and 44 units\n\nfrekans_2 = len(df.loc[(df.price >= 42) & (df.price < 44)])\ngelir = frekans_2 * 43\ngelir","5250a520":"#3- step: calculating the income from those who want to buy more than 44 units\nfrekans_3 = len(df.loc[(df.price >= 44)])\ngelir = frekans_3 * 44\ngelir","a586461b":"\n- The revenue to be obtained is 32384 units.","150f7c27":"\n- The revenue to be obtained is 4257 units.","24fa027b":"# Depending on the first question, what should the item cost? Explain why?\n- As seen below, this can be chosen since the average amount of all categories is 36. Because there was statistical difference in the average of only two pairs in the crossings we made. So even if we take the average of these groups, it will not represent all groups. Therefore, I took the average of all amounts. However, since this did not help me predict events that could be by chance, I decided to look at the confidence intervals.","1b1413a3":"# Performing Two Independent Samples T Test (A \/ B TESTING)","91855706":"***PRICING***\n\nA game company gave gift coins to its users for purchasing items in a game.\nUsing these virtual coins, users buy various vehicles for their characters.\nThe game company did not specify a price for an item and provided users to buy this item at the price they wanted.\nFor example, for the item named shield, users will buy this shield by paying the amounts they see fit.\nFor example, a user can pay with 30 units of virtual money given to him, while the other user can pay with 45 units.\nTherefore, users can buy this item with the amounts they can afford to pay.\n\n\nProblem to be solved:\n1. Does the price of the item differ by category ? Express statistically.\n2. What should be the price of the item depending on the first question? Explain why?\n3. It is desirable to be \"mobile\" about the price. Create a decision support system for the price strategy and  simulate their purchases and income for the possible price.","eea7380b":"\n- The revenue to be obtained is 109746 units.","1b0c3787":"# Hypotheses of A \/ B testing\n- H0: There is no statistically significant difference between the average purchase amount of the two groups.\n- H1: There is a statistically significant difference between the average purchase amount of the two groups.\n\n***Pairs with statistically significant differences:***\n- 489756 and 874521\n- 489756 and 361254\n- 489756 and 326584\n- 489756 and 675201\n- 489756 and 201436\n- 874521 and 326584\n- 361254 and 326584\n- 326584 and 675201\n- 326584 and 201436\n\nH0 is rejected because the pvalue values of the above cross-categories are less than 0.05. That is, there is a statistically significant difference between the average purchase amount of the two groups.","d52641b6":"# Income Simulation\n\nIf we take into account the confidence intervals, we need to make 3 types of price strategies. We can start calculating the income we will get as a result of these strategies.\n","b852c7b4":"# It is desirable to be \"mobile\" on the price. Create a decision support system for price strategy and simulate item purchases and revenues for possible price changes.","4d108d57":"**2- Variance Homogeneity Assumption**\n\n***The hypothesis established on the assumption of variance homogeneity:***\n\n- H0: Variances are Homogeneous.\n- H1: Variances Are Not Homogeneous.\n\n***Evaluation of variance homogeneity:***\n\n\nH0 cannot be rejected as all pvalue values are greater than 0.05 as a result of cross over between groups. So Variances are homogeneous. As an exception, it was determined that 489756 and 201436 groups did not provide variance homogeneity in crossing.","af9ae8d5":"# Does the price of the item differ by category? Express it statistically.\n\n- The value given to item varies between categories. When we cross the categories among themselves and put them in an independent sample T test; H0 hypothesis is rejected because the pvalue value of the following binary groups is less than 0.05. In other words, when we compare the mean of the groups (the two pairs below), it is seen that they are different from each other in a way that is not by chance.\n\n\n- 489756 and 874521\n- 489756 and 361254\n- 489756 and 326584\n- 489756 and 675201\n- 489756 and 201436\n- 874521 and 326584\n- 361254 and 326584\n- 326584 and 675201\n- 326584 and 201436\n\nAs a result of the AB test, it is observed that there is a difference in the averages of the above binary groups.","ef419044":"Two assumptions must be met in order to perform A \/ B testing.\n\n- 1-Normality Assumption\n- 2-Variance Homogeneity\n\nLet's test this by crossing the categories to check if it meets the assumptions.\n\nNote :\n*** Interpretation of the hypotheses according to the pvalue value: ***\n- H0 cannot be rejected if the pvalue value is greater than 0.05.\n- If the pvalue value is less than 0.05, H0 is rejected.\n\n\n**1st Assumption of Abnormality**\n- H0: Normal distribution assumption is provided.\n- H1: Normal distribution assumption is not provided.\n\n\n***Evaluation of normality assumption results***\n- In all crossings, H0 is rejected because the pvalue value is less than 0.05. That is, the normal distribution assumption is not provided. Therefore, we will do the nonparametric test (Mann-Whitney U test).","8c042b70":"\n\n\nFinding confidence intervals (42.74026448657552, 44.62467838760549)","fb88b1e6":"#KEND\u0130ME NOT\n\n\n\"bes\",\"alti\",\"yedi\",\"sekiz\"]\nimport numpy as np\ndf_2 = pd.cut(range(0,3448), 8,\n       labels=[\"bir\",\"iki\",\"uc\",\"dort\",\"bes\",\"alti\",\"yedi\",\"sekiz\"], ordered=False)\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns = [\"category_1\"]\ntype(df_2)"}}