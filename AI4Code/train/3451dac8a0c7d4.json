{"cell_type":{"3bb86eab":"code","fa9b7291":"code","59c77eaa":"code","37d54fd3":"code","6a1e8f7c":"code","296a7737":"code","2127447f":"code","1c8a6cd6":"code","fd3040d0":"code","e2e31fa7":"code","d008fb26":"code","e333c60e":"code","a452527a":"code","b4e04e85":"code","709c50b4":"code","12e5c3c0":"code","067c491b":"code","8ca72a5f":"code","099005be":"code","15f08a1d":"code","aa4e18f6":"code","a041b53a":"code","3a075afe":"code","32a863ff":"code","1088aa06":"code","5b5df9da":"code","fb9a1187":"code","e36fa1d6":"code","422b532b":"code","c2807313":"code","26fb76f9":"code","b370503e":"code","8b507ba9":"code","9a283358":"code","b3e3ee75":"code","4f7f195b":"code","889fc244":"code","b96fe654":"code","3151454d":"code","048ddb38":"code","e961762b":"code","0654b773":"code","fc7fa911":"code","6cb4f990":"code","a79b4999":"code","994ac084":"code","a77b7ceb":"code","a7fc357d":"code","933fa8bc":"code","870cd72f":"code","270dfffc":"code","61c2e4e4":"code","adb342df":"code","096f1700":"code","3afe2005":"code","f66af4a9":"code","79681900":"code","c6b79090":"code","eeab4ed6":"code","e5c029dc":"code","796c02c2":"code","14876e28":"code","66d8b783":"code","f74f9e3e":"code","72e9440d":"code","27c9f918":"code","082280ad":"code","c6199c3f":"code","3779c017":"code","1ddaeab3":"code","d7e42b48":"code","aa28f3ff":"code","f7b518fc":"code","5096c49e":"code","45e53b6a":"code","a52ca448":"code","b31194ca":"code","53563118":"code","5a6c960f":"code","231f6841":"code","d9237a2e":"code","c179688f":"code","71b85594":"code","6f4cbeed":"code","c108e40e":"code","5c2cf52b":"code","0e89df0a":"code","6789793c":"code","d1881ee7":"code","924314e8":"code","db4dd529":"code","f4a26c10":"code","a830b822":"code","bfb5ce67":"code","1dd2fad1":"code","3cc3fad4":"code","41b63487":"code","3c66c9cd":"code","cf64051c":"code","e96d1f3b":"code","0fd8aac5":"code","2fc01c24":"code","81d028a0":"code","925bd357":"code","bb1f2721":"code","e37a3e6d":"code","dce6ee30":"code","b7d44738":"code","251ec361":"code","41b3b52f":"code","773cf76b":"code","7ad9f94d":"code","80fe68b3":"code","f340d224":"code","3a3d2e5f":"code","f9b63699":"code","54aa36dc":"code","3300f034":"code","23c9e5d2":"code","f87f9ba1":"code","6819c7ca":"code","3e8dc268":"code","8e7af878":"code","e54cd81f":"code","daaf5f38":"code","07d36781":"code","45932d54":"code","3647a3c3":"code","64f54ac8":"code","bf0bc611":"code","a135e645":"code","d225920e":"markdown","4acc5091":"markdown","469547fc":"markdown","ce0c3de9":"markdown","0bef1123":"markdown","afc8c6b2":"markdown","80b8ec0d":"markdown","733b80d1":"markdown","60676c19":"markdown","dd5b2341":"markdown","7c5c1ecf":"markdown","c9d9ed91":"markdown","ef55b4a5":"markdown","ca5940ed":"markdown","0c42a2c5":"markdown","5dc15b84":"markdown","24d9be2d":"markdown","ce15e9b8":"markdown","618749e8":"markdown","d7d84b74":"markdown","5d1badcd":"markdown","2352733b":"markdown","5d890e40":"markdown","253438a5":"markdown","e609bcbd":"markdown","54d1b888":"markdown","b0266f74":"markdown","30f13597":"markdown","f42065fe":"markdown","43ab3f30":"markdown","6abd0724":"markdown","e4c8c9be":"markdown","76adbb00":"markdown","0d4a4e30":"markdown","e547831c":"markdown","9e7637c1":"markdown","16944c06":"markdown","f96dcca7":"markdown","b3583207":"markdown","d0a20618":"markdown","a482d534":"markdown","ec8481e9":"markdown","da98a579":"markdown","4beb6a31":"markdown","528fca41":"markdown","1530493c":"markdown","f6eea44d":"markdown","76180e40":"markdown","ba15c47a":"markdown","576aeb59":"markdown","a8ba1827":"markdown","74f75786":"markdown","2b45ceda":"markdown","e2de2d8c":"markdown","7b9266ca":"markdown","adcee51d":"markdown","fd8cb7c5":"markdown","255239c3":"markdown","31fa4906":"markdown","a640a299":"markdown","6a871d33":"markdown","c34bb599":"markdown","19524a4e":"markdown","f3c17f9f":"markdown","9762635d":"markdown","ecc8c7f2":"markdown","be0271ff":"markdown","1b81ec79":"markdown","f82e9895":"markdown","de46517f":"markdown","1fda05d7":"markdown","751667e2":"markdown","4eb7f258":"markdown","ce5b7879":"markdown","cff3eec3":"markdown","f796e29d":"markdown","ed19eb73":"markdown","573f6bcc":"markdown","85dbb133":"markdown","80dceeff":"markdown","a4d804fd":"markdown","f11e1275":"markdown","423f95e1":"markdown","8e9d273b":"markdown","22d3daab":"markdown","e7d55494":"markdown","1cd94f80":"markdown","12bb6f9d":"markdown","1a2511df":"markdown","9045de08":"markdown","595ee903":"markdown","e1529f91":"markdown","2ca17037":"markdown","6de0aec0":"markdown","e825556d":"markdown","1a7ccc26":"markdown","85202bb0":"markdown","69c07b67":"markdown","bde55661":"markdown","08b2a3a7":"markdown","5da68293":"markdown","2502b188":"markdown","c69666ac":"markdown","7f77f974":"markdown","624960bd":"markdown","34f1a790":"markdown","ae886fec":"markdown","ef24db59":"markdown","3835621a":"markdown","18ae2d27":"markdown","3a353350":"markdown","51d8b0a5":"markdown","963284a4":"markdown","891fd474":"markdown","21d025cf":"markdown","c6005959":"markdown","abd4d0bb":"markdown"},"source":{"3bb86eab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa9b7291":"import warnings\nwarnings.filterwarnings('ignore')","59c77eaa":"# This will help us in truncating the longer array\nnp.set_printoptions(threshold = 100)","37d54fd3":"# 0. Numpy version\n\nnp.__version__","6a1e8f7c":"# 1. Create an empty array\n\nempty_array = np.empty([2, 2], int)\n\nprint(empty_array)\n\nprint(empty_array.shape)\n\nprint(empty_array.size)","296a7737":"# 2. Check whether the array is empty\n\na = np.array([])\nb = np.array([1, 2])\n\ndef check_empty(a):\n    if a.size == 0:\n        print(a, ' : Empty')\n    else:\n        print(b, ' : Non Empty')\n        \ncheck_empty(a)\ncheck_empty(b)","2127447f":"# 3. Check elements count\n\nc = np.array([])\nd = np.array([1, 2])\n\ndef get_elements(c_array):\n    return c_array.ndim and c_array.size\n        \nprint(c, ', elements_count : ', get_elements(c))\nprint(d, ', elements_count : ', get_elements(d))","1c8a6cd6":"# 4. Arrange numpy between numbers\n\na = np.arange(4, 12)\n\nprint(a)\nprint(a, '.shape : ', a.shape)","fd3040d0":"# 5. Arrange numpy between numbers with intervals\n\nc = np.arange(12, 30, 3)\n\nprint(c)\nprint(c, '.shape : ', c.shape)","e2e31fa7":"# 6. Array reshape\n\nc = np.arange(12, 30, 3)\nd = c.reshape(2, 3)\n\nprint(c)\nprint(c, '.shape : ', c.shape)\nprint('\\nAfter reshaping : ')\nprint(d)\nprint(d, '.shape : ', d.shape)","d008fb26":"# 7. Create a numpy with random integers\n\na = np.random.randint(10, size = 5)\n\nprint(a)","e333c60e":"# 8. Create a numpy with random integers and size\n\na = np.random.randint(10, size = (2, 3))\n\nprint(a)\nprint(a, '.shape : ', a.shape)\nprint('datatype : ', a.dtype)","a452527a":"# 9. Array of strings\n\na = np.array(('Toronto','Montreal','New York'))\nprint(a)\nprint(a.dtype)","b4e04e85":"# 10. Numpy array with strings and explicit dtype\n\nx = np.array(['Toronto', 'Montreal'], dtype=str)\n\nprint(x)\nprint(x.dtype)","709c50b4":"# 11. Numpy array with strings and explicit dtype\n\nx = np.array(['To'], dtype=str)\ny = x.view('S1').reshape(x.size, -1)\n\nprint(y)","12e5c3c0":"# 12. Print without truncation\n\nx = np.arange(10000)\n\nprint('Before setting print options : ')\nprint(x) # this will print with the truncation\n\n# set\nimport sys\n# np.set_printoptions(threshold = sys.maxsize)\n\n# print('\\nAfter setting print options : ')\n# print(a) # this will print everything without truncation","067c491b":"# 13. Save Numpy to CSV\n\na = np.asarray([ [1,2,3], [4,5,6]])\nprint(a)\n# numpy.savetxt(\"abc.csv\", a, delimiter=\",\") # this will save the numpy to csv file","8ca72a5f":"# 14. Dataframe to Numpy\n\ndf = pd.DataFrame({'a1': [1, 2, 3], 'a2': [4, 5, 6]}, index = ['X', 'Y', 'Z'])\n\nprint('Dataframe:')\nprint(df)\n\nx = df.to_numpy()\n\nprint('\\nDataframe to Numpy:')\nprint(x)\n\ny = df.index.to_numpy()\nprint('\\nDataframe Indices to Numpy:')\nprint(y)\n\nz = df['a1'].to_numpy()\nprint('\\nDataframe Series to Numpy:')\nprint(z)","099005be":"# 15. Get the nth column of an array\n\nx = np.array([[1, 2], [3, 4], [5, 6]])\n\nprint('Numpy array:')\nprint(x)\n\ny = x[:,0]\nprint('\\nx[:,0]:')\nprint(y)\n\nz = x[:, 1]\nprint('\\nx[:, 1]:')\nprint(z)\n\na = x[1,:]\nprint('\\nx[1,:]:')\nprint(a)","15f08a1d":"# 16. Reshape with -1 (lazy option)\n\na = np.matrix([[1, 2, 3, 4], [5, 6, 7, 8], [10, 11, 12, 21]])\nprint('Original Numpy Array:')\nprint(a)\nprint('original shape: ', a.shape)\n\nc = np.reshape(a, -1)\nprint('\\nnp.reshape(a, -1):')\nprint(c)\nprint('new shape: ', c.shape)\n\nd = np.reshape(a, (1, -1))\nprint('\\nnp.reshape(a, (1, -1)):')\nprint(d)\nprint('new shape: ', d.shape)\n\ne = np.reshape(a, (2, -1))\nprint('\\nnp.reshape(a, (2, -1)):')\nprint(e)\nprint('new shape: ', e.shape)\n\nf = np.reshape(a, (3, -1))\nprint('\\nnp.reshape(a, (3, -1)):')\nprint(f)\nprint('new shape: ', f.shape)\n\ng = np.reshape(a, (4, -1))\nprint('\\nnp.reshape(a, (4, -1)):')\nprint(g)\nprint('new shape: ', g.shape)","aa4e18f6":"# 17. Numpy with precision\n\nx = np.random.random(10)\n\nprint('Original Array:')\nprint(x)\n\nprint('\\nAfter setting presicion:')\nnp.set_printoptions(precision = 2)\nprint(x)\n\n# resetting precision to default (8)\nnp.set_printoptions(precision = 8)","a041b53a":"# 18. Argsort on Numpy array\n\na = np.random.randint(0, 10, (3,3))\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = a[a[: ,2].argsort()]\nprint(b)","3a075afe":"# 19. Numpy view\n\nx = np.array([(1, 2)], dtype=[('a', np.int8), ('b', np.int8)])\nprint(x)\nprint(x.dtype)\n\ny = x.view(dtype=np.int16, type=np.matrix)\nprint(y)\nprint(y.dtype)","32a863ff":"# 20. Using Flipud\n\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport matplotlib.image as mp_img\n\nimage_a = mp_img.imread('\/kaggle\/input\/numpy-cheatsheet\/cn_tower.jpg')\n\nimage_b = np.flipud(image_a)\nplt.imshow(image_b)\n\n# plt.savefig(\"\/kaggle\/input\/numpy-cheatsheet\/cn_tower_ver.jpg\", dpi=200)\nplt.show()","1088aa06":"# 21. Numpy inverse\n\nb = np.array([[2,3],[4,5]])\nprint('Before Inverse : ')\nprint(b)\n\nc = np.linalg.inv(b)\nprint('After Inverse : ')\nprint(c)","5b5df9da":"# 22. Numpy Inverse\n\nx = np.matrix([[10, 20], [60, 70]])\nprint('Before Inverse : ')\nprint(x)\n\nprint('After Inverse : ')\nprint(x.I)","fb9a1187":"# 23. Numpy compare\n\na = np.arange(12).reshape((3, 4))\nprint(a)\n\na_bool = a < 6\nprint(a_bool)","e36fa1d6":"# 24. Numpy compare with nonzero count\n\na = np.arange(12).reshape((3, 4))\nprint('Before : ')\nprint(a)\n\nprint(np.count_nonzero(a > 5))\n\nprint(a % 3 == 1)\nprint(np.count_nonzero(a % 3 == 1))","422b532b":"# 25. Flip a numpy array by using flipud\n# flipup = flip ud = up \/ down\n\na = np.arange(4).reshape(2, 2)\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.flipud(a)\nprint(b)\n\n# Note: b returns a view \nprint('Shared memory? :', np.shares_memory(a, b))","c2807313":"# 26. Flip a numpy array by using flipud without sharing the memory\n\na = np.arange(4).reshape(2, 2)\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.flipud(a).copy()\nprint(b)\n\n# Note: b returns a view \nprint('Shared memory? :', np.shares_memory(a, b))","26fb76f9":"# 27. Flip a numpy array by using fliplr (horizontally)\n\na = np.arange(10).reshape(2, 5)\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.fliplr(a)\nprint(b)","b370503e":"# 28. Flip a numpy array by using flip (both horizontally and vertically)\n\na = np.arange(10).reshape(2, 5)\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.flip(a)\nprint(b)","8b507ba9":"# 29. Flipping the numpy array using slices\n\na = np.arange(10).reshape(2, 5)\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = a[::-1, ::-1]\nprint(b)","9a283358":"# 30. Convert numpy array to list\n\na = np.arange(10).reshape(2, 5)\nprint('Before : ')\nprint(a)\n# print(d.dtype)\nprint(type(a))\nprint(type(a[0]))\nprint(type(a[0][0]))\n\nb = a.tolist()\nprint('\\nAfter : ')\nprint(b)\nprint(type(b))\nprint(type(b[0]))\nprint(type(b[0][0]))","b3e3ee75":"# 31. Numpy Where\n\na = np.arange(8).reshape((2, 4))\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.where(a < 4, 0, 20)\nprint(b)\n\n# Note: it matches, replace with 0, if not replace with 20","4f7f195b":"# 32. Numpy where with multiple conditions\n\na = np.arange(8).reshape((2, 4))\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.where((a > 3) & (a < 7), 0, 20)\nprint(b)","889fc244":"# 33. Numpy where with multiple conditions - apply only on matching conditions\n\na = np.arange(10).reshape((2, 5))\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.where((a > 3) & (a < 7), 0, a)\nprint(b)","b96fe654":"# 34. Process with where\n\na = np.arange(10).reshape((2, 5))\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.where((a > 3) & (a < 7),  a * 3, 0)\nprint(b)","3151454d":"# 35. List to numpy array\n\na = [0, 1, 2]\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.array(a)\nprint(b)\nprint(b.dtype)","048ddb38":"# 36. List to numpy array with explicit dtype\n\na = [0, 1, 2]\nprint('Before : ')\nprint(a)\n\nprint('\\nAfter : ')\nb = np.array(a, dtype = float)\nprint(b)\nprint(b.dtype)","e961762b":"# 37. 2D list to numpy array\n\na = [[0, 1, 2], [21, 22, 23]]\nprint('Before : ')\nprint(a)\nprint(type(a))\n\nprint('\\nAfter : ')\nb = np.array(a)\nprint(b)\nprint(type(b))\nprint(b.dtype)\nprint(b.shape)","0654b773":"# 38. Convert list to float numpy array\n\nx = [1, 2]\nprint('Before : ')\nprint(x)\nprint(type(x))\n\nprint('\\nAfter : ')\nb = np.asfarray(x)\nprint(b)\nprint(type(b))\nprint(b.dtype)\n\nprint('\\nAfter : ')\nc = np.asarray(x, float)\nprint(c)\nprint(type(c))\nprint(c.dtype)","fc7fa911":"# 39. Convert list to numpy array with explicit datatype\n\nx = [1, 2]\nprint('Before : ')\nprint(x)\nprint(type(x))\n\nprint('\\nAfter : ')\nc = np.asarray(x, float)\nprint(c)\nprint(type(c))\nprint(c.dtype)","6cb4f990":"# 40. Find common values between two numpy array\n\na = np.random.randint(0, 10, 10)\nb = np.random.randint(0, 10, 10)\nprint(a)\nprint(b)\nprint('common values between a and b : ', np.intersect1d(a,b))","a79b4999":"# 41. Get today in numpy and deltas\n\ntoday = np.datetime64('today', 'D')\nprint('today          : ', today)\n\nafter2days = np.datetime64('today', 'D') + np.timedelta64(2, 'D')\nprint('after 2 days   : ', after2days)\n\nbefore3days = np.datetime64('today', 'D') - np.timedelta64(3, 'D')\nprint('before 3 days  : ', before3days)\n\nafter1week = np.datetime64('today', 'D') + np.timedelta64(1, 'W')\nprint('after 1 week   : ', after1week)\n\nafter10weeks = np.datetime64('today', 'D') + np.timedelta64(10, 'W')\nprint('after 10 weeks : ', after10weeks)","994ac084":"# 42. Between two Dates\n\na = np.arange('2020-09-15', '2020-09-25', dtype='datetime64[D]')\nprint('Between two dates : 2020-09-15 and 2020-09-25')\nprint(a)\n\na = np.arange('2020-09', '2020-10', dtype='datetime64[D]')\nprint('\\nBetween 2 months : 2020-09 and 2020-10')\nprint(a)","a77b7ceb":"# 43. Random array and sorting\n\na = np.random.random(5)\n\nprint('Before : ')\nprint(a)\n\na.sort()\nprint('\\nAfter : ')\nprint(a)","a7fc357d":"# 44. Random int array and sorting\n\na = np.random.randint(50, 100, 5)\n\nprint('Before : ')\nprint(a)\n\na.sort()\nprint('\\nAfter : ')\nprint(a)","933fa8bc":"# 45. String to nump,y array\n\nfrom io import StringIO\n\ncontent = StringIO('''\n1, 2, 3\n6, ,  8\n20, , 20\n''')\na = np.genfromtxt(content, delimiter=\",\", dtype=np.int)\nprint(a)","870cd72f":"# 46. Find the nearest element in the array\n\na = np.arange(10, 60, 7)\nprint(a)\n\nb = 23\nc = a.flat[np.abs(a - b).argmin()]\nprint(f'Elemenet near by {b} : {c}')","270dfffc":"# 47. Swap rows\n\na = np.arange(9).reshape(3, 3)\nprint('Before : ')\nprint(a)\n\na[[0,1]] = a[[1, 0]]\n\nprint('\\nAfter : ')\nprint(a)","61c2e4e4":"# 48. Shuffle\n\na = np.arange(20)\nprint('Before : ')\nprint(a)\n\nnp.random.shuffle(a)\n\nprint('\\nAfter : ')\nprint(a)","adb342df":"# 49. Get specific element\n\na = np.arange(27).reshape(3, 3, 3)\nprint(a)\n\nprint(a[0, 1, 1])","096f1700":"# 50. Repeat an array\n\na = np.array([[1, 2, 3]])\nprint('Before : ')\nprint(a)\n\nb = np.repeat(a, 3, axis=0)\nprint('\\nAfter : ')\nprint(b)","3afe2005":"# 51. Min, Max, Sum\n\na = np.arange(6).reshape(2, 3)\na += 1\nprint(a)\n\na_mean = np.min(a)\nprint('Mean : ', a_mean)\n\na_max = np.max(a)\nprint('Max : ', a_max)\n\na_sum = np.sum(a)\nprint('Sum : ', a_sum)","f66af4a9":"# 52. Get min of axis = 1\n\nx = np.arange(10).reshape((2, 5))\n\nprint('x:')\nprint(x)\n\nprint('\\nx.min(axis = 1) : ')\nprint(x.min(axis = 1))","79681900":"# 53. Using amin function\n\nx = np.arange(10).reshape((2, 5))\nprint('x:')\nprint(x)\n\nprint('\\nnp.amin(x, 1) : ')\nprint(np.amin(x, 1))","c6b79090":"# 54. Using amax function\n\nx = np.arange(10).reshape((2, 5))\nprint('x:')\nprint(x)\n\nprint('\\nnp.amax(x, 1) : ')\nprint(np.amax(x, 1))","eeab4ed6":"# 55. Get min of axis = 0\n\nx = np.arange(6).reshape((2, 3))\nprint('x:')\nprint(x)\n\nprint('\\nx.min(axis = 0) : ')\nprint(x.min(axis = 0))","e5c029dc":"# 56. Calculate 90th percentile of an axis\n\nx = np.arange(6).reshape((2, 3))\nprint('x:')\nprint(x)\n\nprint('\\nnp.percentile(x, 90, 0): ')\nprint(np.percentile(x, 90, 0))","796c02c2":"# 57. Find median\n\nx = np.arange(6).reshape((2, 3))\nprint('x:')\nprint(x)\n\nprint('\\nnp.median(x): ')\nprint(np.median(x))","14876e28":"# 58. Covariance matrix\n\nx = np.array([0, 1, 2])\ny = np.array([7, 8, 9])\n\nprint('x:')\nprint(x)\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.cov(x, y): ')\nprint(np.cov(x, y))\n\n# note: -1 means perfectly in opposite directions","66d8b783":"# 59. Pearson product-moment correlation\n\nx = np.array([0, 1, 3])\ny = np.array([2, 4, 5])\nprint('x:')\nprint(x)\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.corrcoef(x, y): ')\nprint(np.corrcoef(x, y))","f74f9e3e":"# 60. Cross correlation\n\nx = np.array([0, 1, 3])\ny = np.array([2, 4, 5])\nprint('x:')\nprint(x)\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.correlate(x, y): ')\nprint(np.correlate(x, y))","72e9440d":"# 61. Count the number of occurrences\n\nx = np.array([1, 2, 2, 1, 1, 1, 5, 5])\n\nprint('x:')\nprint(x)\n\nprint('\\nnp.bincount(x): ')\nprint(np.bincount(x))\n\n# how to interpret\n\n#    starts from 0\n#    ends with 5\n    \n#    0 appears 0 times\n#    1 appears 4 times\n#    ...","27c9f918":"# 62. Create random int numpy array with specific shape\n\nx = np.random.randint(10, 20, (4, 2))\n\nprint('np.random.randint(10, 20, (4, 2)):\\n')\nprint(x)","082280ad":"# 63. Create 4 different integers from 0, 40. \n\nx = np.random.choice(40, 4, replace = False)\n\nprint('np.random.choice(40, 4, replace = False):\\n')\nprint(x)","c6199c3f":"# 64. Create 4 different integers from 0, 4. (It will throw error as we can't get 5 unique integers from 4)\n\ntry:\n    x = np.random.choice(4, 5, replace = False)\n    \n    print('np.random.choice(4, 5, replace = False):\\n')\n    print(x)\nexcept Exception as err:\n    print('Error : ', err)\n\n# It is expected to throw an error","3779c017":"# 65. Shuffle\n\nx = np.arange(10)\n\nprint('x Before shuffling:')\nprint(x)\n\nprint('\\nx After shuffling:')\nnp.random.shuffle(x)\nprint(x)","1ddaeab3":"# 66. Shuffling by permutation\n\nx = np.arange(10)\n\nprint('x Before shuffling (using permutation):')\nprint(x)\n\nprint('\\nx After shuffling (using permutation):')\nprint(np.random.permutation(10))","d7e42b48":"# 67. Seed for random\nnp.random.seed(12)\n\na = np.random.rand(4)\nprint('Random array after first seed:')\nprint(a)\n\nnp.random.seed(12)\nb = np.random.rand(4)\nprint('\\nRandom array after second seed:')\nprint(b)\n\nc = np.random.rand(4)\nprint('\\nRandom array after no seed:')\nprint(c)","aa28f3ff":"# 68. Get unique elements\n\nx = np.array([1, 2, 6, 4, 2, 3, 2])\n\nprint('x:')\nprint(x)\n\nout, indices = np.unique(x, return_inverse=True)\n\nprint('\\nunique elements of x:')\nprint(out)\n\nunique, counts = np.unique(x, return_counts=True)\nunique_dict = dict(zip(unique, counts))\n\nprint('\\nunique elements and count:')\nprint(unique_dict)\n\nimport collections\ncol_counter = collections.Counter(x)\nprint('\\nunique elements and count by collections.counter:')\nprint(col_counter)","f7b518fc":"# 69. Create a boolean array with a shape of x\n\nx = np.array([0, 1, 2, 5, 0])\ny = np.array([0, 1])\n\nprint('x:')\nprint(x)\n\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.in1d(x, y):')\nprint(np.in1d(x, y))","5096c49e":"# 70. Find unique intersection\n\nx = np.array([0, 1, 2, 5, 0])\ny = np.array([0, 1, 4])\n\nprint('x:')\nprint(x)\n\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.intersect1d(x, y):')\nprint(np.intersect1d(x, y))","45e53b6a":"# 71. Find the diff\n\nx = np.array([0, 1, 2, 5, 0])\ny = np.array([0, 1, 4])\n\nprint('x:')\nprint(x)\n\nprint('\\ny:')\nprint(y)\n\nprint('\\nnp.setdiff1d(x, y):')\nprint(np.setdiff1d(x, y))","a52ca448":"# 72. Trying to inverse a singular matrix\n\nb = np.array([[2,3],[4,6]])\n\ntry:\n    np.linalg.inv(b)\nexcept Exception as err:\n    print('Error : ', err)\n    \n# Note: Singular Matrix can't be inversed","b31194ca":"# 73. Find the union\n\nx = np.array([0, 1, 2, 5, 0])\ny = np.array([0, 1, 4])\n\nprint('x:')\nprint(x)\n\nprint('\\ny:')\nprint(y)\n\nz = np.union1d(x, y)\nprint('\\nnp.union1d(x, y):')\nprint(z)","53563118":"# 74. Element Sum\n\nx = np.array([0, 0, 1, 2, 1, 1, 0, 0, 0])\nprint('Original Array:')\nprint(x)\n\nnum_zeros = (x == 0).sum()\nnum_ones = (x == 1).sum()\n\nprint('\\nzeros sum:')\nprint(num_zeros)\n\nprint('\\nones sum:')\nprint(num_ones)\n\nprint('\\nones sum by using list:')\nx_list = list(x)\nprint(x_list.count(1))","5a6c960f":"# 75. Pretty print - suppress the scientific notation\n\nx = np.array([1.2e-10, 2.1, 23])\nprint('Before:')\nprint(x)\n\nnp.set_printoptions(suppress = True)\nprint('\\nAfter suppressing the scientific notation:')\nprint(x)\n\n# reset\nnp.set_printoptions(suppress = False)","231f6841":"# 76. Print with decimal format\n\nx = np.array([1.24500, 1.0000])\nprint('Before:')\nprint(x)\n\nnp.set_printoptions(formatter={'float': '{: 0.2f}'.format})\nprint('\\nAfter formattting the float:')\nprint(x)\n\n# Not sure how to reset it","d9237a2e":"# 77. Convert flot array to int array\n\nx = np.array([[2.0, 8.8], [2.3, 1.9]])\nprint('Before:')\nprint(x)\n\ny = x.astype(int)\nprint('\\nAfter changing the datatype:')\nprint(y)\n\nz = np.int_(x)\nprint('\\nAfter changing the datatype by using int_:')\nprint(z)","c179688f":"# 78. array vs asarray\n\nx = np.matrix(np.ones((3,3)))\nprint('Before:')\nprint(x)\n\n\nnp.array(x)[2] = 2\nprint('\\nAfter changing elements by array:')\nprint(x)\n\nnp.asarray(x)[2] = 2\nprint('\\nAfter changing elements by asarray:')\nprint(x)","71b85594":"# 79. Numpy Datetime\n\nx = np.datetime64('2020-09-30')\nprint('Sample numpy datetime:')\nprint(x)\n# print(type(x))\n\nx1 = np.datetime64('2020-09', 'D')\nprint('\\nNumpy Datetime with forcing D option:')\nprint(x1)\n# print(type(x1))","6f4cbeed":"# 80. Numpy Datetime with arange\n\nx = np.arange('2020-02', '2020-06', dtype = 'datetime64[M]')\nprint('\\nNumpy Datetime range with forcing month:')\nprint(x)\n\n\ny = np.arange('2020-02', '2020-06', dtype = 'datetime64[D]')\nprint('\\nNumpy Datetime range with forcing date:')\nprint(y)","c108e40e":"# 81. Compare Numpy datetime\n\nprint(\"np.datetime64('2020') == np.datetime64('2020-01-01'):\")\nprint(np.datetime64('2020') == np.datetime64('2020-01-01'))\n\nprint(\"\\nnp.datetime64('2020-01') == np.datetime64('2020-01-02'):\")\nprint(np.datetime64('2020-01') == np.datetime64('2020-01-02'))","5c2cf52b":"# 82. Numpy 2D array flat list\n\nimport numpy as np\nfrom itertools import chain\n\na = np.arange(12).reshape(2, 3, 2)\nprint('Before:')\nprint(a)\n\nb = a.tolist()\nprint('\\nAfter tolist:')\nprint(b)\n\nc = list(chain.from_iterable(a))\nprint('\\nAfter flattening the array to list:')\nprint(c)","0e89df0a":"# 83. Numpy 2D array to flat list\n\na = np.arange(6).reshape(2, 3)\nprint('Before:')\nprint(a)\n\nb = list(a.flatten())\nprint('\\nAfter flattening the array to list:')\nprint(b)","6789793c":"# 84. Numpy array to Pandas Dataframe\n\nx = np.array([[90, 98], [92, 99]])\nprint('Numpy Array:')\nprint(x)\n\ndf = pd.DataFrame({'Maths': x[:, 0], 'Science': x[:, 1]})\nprint('\\nDataframe from Numpy Array:')\nprint(df)","d1881ee7":"# 85. Numpy to Dataframe by using from_records\n\nx = np.arange(6).reshape(2, -1) # -1 is used for lazy option\nprint('Numpy Array:')\nprint(x)\n\ndf = pd.DataFrame.from_records(x)\nprint('\\nDataframe from Numpy Array by using from_records:')\nprint(df)","924314e8":"# 86. Append with hstack\n\na = np.arange(6).reshape(2, -1)\nprint('Numpy Array:')\nprint(a)\n\nb = np.hstack((a, np.zeros((a.shape[0], 1), dtype = a.dtype)))\nprint('\\nAfter appending with hstack:')\nprint(b)","db4dd529":"# 87. Ravel vs. Flatten\n\na = np.array([[1,2],[3,4]])\nprint('Original numpy array:')\nprint(a)\n\nravel_a = np.ravel(a)\nflatten_a = np.ndarray.flatten(a)  \n\nprint('\\nravel a:')\nprint(ravel_a)\n\nprint('\\nflatten a:')\nprint(flatten_a)\n\nprint('\\nravel a base:')\nprint(ravel_a.base)\n\nprint('\\nflatten a base:')\nprint(flatten_a.base) # since it is a copy, you would see None as base\n\n# Note: if view, you will see the original array in .base\n# If is a copy, you will see None in .base","f4a26c10":"# 88. Ravel and Flatten with assignment\n\na = np.array([[1,2],[3,4]])\nprint('Original numpy array, a:')\nprint(a)\n\nravel_a = np.ravel(a)\nflatten_a = np.ndarray.flatten(a)  \n\nprint('\\nravel a:')\nprint(ravel_a)\n\nprint('\\nflatten a:')\nprint(flatten_a)\n\nravel_a[0] = 100\nprint('\\nAfter changing ravel, a:')\nprint(a)\n\nflatten_a[1] = 200\nprint('\\nAfter changing flatten, a:')\nprint(a)\n\nprint('\\nravel a base:')\nprint(ravel_a.base)\n\nprint('\\nflatten a base:')\nprint(flatten_a.base) # since it is a copy, you would see None as base\n\n# Note: if view, you will see the original array in .base\n# If is a copy, you will see None in .base","a830b822":"# 89. Numpy Concatenate\n\na = np.arange(4).reshape(2, -1)\nb = np.array([[5, 6]])\n\nprint('a:')\nprint(a)\n\nprint('\\nb:')\nprint(b)\n\n# appending as a row\nc = np.concatenate((a, b), axis = 0)\nprint('\\nAfter appending as a row:')\nprint(c)\n\n\n# appending as a colum\nd = np.concatenate((a, b.T), axis = 1)\nprint('\\nAfter appending as a colum:')\nprint(d)\n\n\ne = np.concatenate((a, b), axis = None)\nprint('\\nAfter flatteeing and appending:')\nprint(e)","bfb5ce67":"# 90. Reverse 1D array\n\nx = np.arange(4)\nprint('Before:')\nprint(x)\n\ny = x[::-1]\nprint('\\nAfter reversing:')\nprint(y)","1dd2fad1":"# 91. Reverse 2D Array\n\nx = np.arange(8).reshape(2, -1)\nprint('Before:')\nprint(x)\n\ny = x[::-1]\nprint('\\nAfter reversing:')\nprint(y)","3cc3fad4":"# 92. Reverse 2D array with elements\n\nx = np.arange(8).reshape(2, -1)\nprint('Before:')\nprint(x)\n\ny = np.flip(x)\nprint('\\nAfter reversing with flip:')\nprint(y)\n\ny = np.flipud(x)\nprint('\\nAfter reversing with flipud:')\nprint(y)\n\ny = np.fliplr(x)\nprint('\\nAfter reversing with fliplr:')\nprint(y)","41b63487":"# 93. Image as an array\nfrom PIL import Image\n\nimage_np = np.asarray(Image.open('\/kaggle\/input\/numpy-cheatsheet\/cn_tower.jpg'))\nprint(type(image_np))","3c66c9cd":"# 94. Array with prefilled values\n\na = np.full((2, 4), 23)\nprint('Array with prefilled values:')\nprint(a)\n\nb = np.empty((2, 4), dtype = int)\nb.fill(23)\nprint('\\nArray with prefilled values by using empty and fill:')\nprint(b)","cf64051c":"# 95. Delete specific indices\n\na = np.array([1, 3, 5, 4, 7])\nprint('Before:')\nprint(a)\n\nindices = [2, 3]\nb = np.delete(a, indices)\n\nprint('\\nAfter Deleting specific indices:')\nprint(b)","e96d1f3b":"# 96. Deleting specific elements\n\na = np.array([1, 4, 5, 4])\nprint('Before:')\nprint(a)\n\nb = np.array([3, 4])\nc = np.setdiff1d(a, b)\n\nprint('\\nAfter Deleting specific elements:')\nprint(c)","0fd8aac5":"# 97. Boolean Numpy Array\n\na = np.ones((2, 2), dtype = bool)\nprint('True Boolean Array:')\nprint(a)\n\nb = np.zeros((2, 3), dtype = bool)\nprint('\\nFalse Boolean Array:')\nprint(b)\n\nc = np.full((2, 4), True)\nprint('\\nTrue Boolean Array by using .full:')\nprint(c)","2fc01c24":"# 98. Array of NaN\n\na = np.empty((3, 2,))\na[:] = np.nan\nprint('nan using empty:')\nprint(a)\n\nb = np.full([3, 2], np.nan)\nprint('\\nnan using full:')\nprint(b)","81d028a0":"# 99. Replace values with specific condition\n\nimport numpy as np\na = np.random.rand(2, 4)\nprint('Before:')\nprint(a)\n\na[a > 0.5] = 0.5\nprint('\\nAfter updating a[a > 0.5] = 0.5:')\nprint(a)","925bd357":"# 100. Selecting specific columns\n\nx = np.arange(12).reshape(3, 4)\nprint('Before:')\nprint(x)\n\ny = x[:, [1, 3]]\nprint('\\nAfter selecting specific columns:')\nprint(y)","bb1f2721":"# 101. Vectorize\n\naa = np.array([[1,2,3,4], [2,3,4,5], [5,6,7,8], [9,10,11,12]])\nbb = np.array([[100,200,300,400], [100,200,300,400], [100,200,300,400], [100,200,300,400]])\n\ndef vec2(a, b):\n    return a + b\n\nfunc2 = np.vectorize(vec2)\nprint(func2(bb[:,1], aa[:,1]))","e37a3e6d":"# 102. If condition on Numpy array on the fly\n\na = np.arange(6).view([('b', np.int),('c', np.int)])\n\nprint(a)\n\nprint(a['b'] < 4)\n\nprint((a['b'] < 4).sum())","dce6ee30":"# 103. If condition and sum on Numpy colum\n\na = np.random.randint(0, 10, 20).reshape(4, 5)\n\nprint('Original Array:')\nprint(a)\n\n# How many elements in column 3 are greater than 2?\nb = a[:, 1] > 2\n\nprint('\\nPrinting elements in colmns which are greater than 2: ')\nprint(b)\n\nprint('\\nPrinting elements\\' sum in colmns which are greater than 2: ')\nprint(b.sum())","b7d44738":"# 104. Using Vectorize function on Numpy\n\ndef get_max(a, b):\n    \n    if (a > b): \n        return a\n    \n    return b\n    \nb_vectfunc = np.vectorize(get_max)\nx = [[1, 2, 3], [4, 7, 2]]\ny = [7, 4, 5]\n\nresult = b_vectfunc(x, y)\n\nprint(result)\n\n# Note: It will compare the array element wise and get the max value","251ec361":"# 105. Apply Along Axis on Numpy Matrix\n\ndef get_avg(a):\n    return (a[0] + a[-1]) \/ 2\n\na = np.random.randint(1, 10, 9).reshape(3, 3)\n\nprint('Original array:')\nprint(a)\n\nb = np.apply_along_axis(get_avg, 0, a)\n\nprint('\\nAfter averaging the first and last element:')\nprint(b)","41b3b52f":"# 106. Sort the arry by using \n\na = np.random.randint(1, 10, 9).reshape(3, 3)\n\nprint('Original Array :')\nprint(a)\n\nb = np.apply_along_axis(sorted, 0, a)\n\nprint('\\nAfter sorting :')\nprint(b)","773cf76b":"# 107. Numpy Roll\n\nimport numpy as np\n\nx = np.arange(1, 7).reshape(2, 3)\n\nprint(x)\n\ny = np.roll(x, 1, axis = 1)\n\nprint('\\nAfter:')\nprint(y)","7ad9f94d":"# 108. Roll elements\n\nx = np.arange(10)\ny = np.roll(x, 2)\n\nprint(x)\n\nprint(y)","80fe68b3":"# 109. Array Append on Axis 0 and Axis 1\n\na = np.array([1, 2])\nb = np.array([3, 4])\n\nprint('Array a:')\nprint(a)\n\nprint('\\nArray b:')\nprint(b)\n\nc = np.append([a], [b], axis = 0)\nprint('\\nArray c : append a and b on axis 0:')\nprint(c)\n\nd = np.append([a], [b], axis = 1)\nprint('\\nArray d : append a and b on axis 1:')\nprint(d)","f340d224":"# 110. Rearrange array with specified index\n\na = np.array([11, 22, 33, 44, 55])\nprint('Before:')\nprint(a)\n\nidx = [4, 2, 0, 1, 3]\n\nb = a[idx]\n\nprint('\\nAfter:')\nprint(b)","3a3d2e5f":"# 111. Serialize array with pickle\n\na = np.array([10, 20])\nprint('Before:')\nprint(a)\n\nimport pickle\n\nb = pickle.dumps(a, protocol = 4)\n\nprint('\\nSerialized Numpy Array:')\nprint(b)\n\nc = pickle.loads(b)\n\nprint('\\nDe-serialized Numpy Array:')\nprint(c)\n\n# Check protocols here: https:\/\/docs.python.org\/3\/library\/pickle.html","f9b63699":"# 112. Transpose\n\na = np.arange(6).reshape(2, -1) \n\nprint('Before:')\nprint(a)\n\nb = np.transpose(a)\nprint('\\nAfter:')\nprint(b)","54aa36dc":"# 113. Continguous Array\n\na = np.ascontiguousarray(np.random.randint(0, 10, 5))\nprint(a)\nprint(a.flags)\n\nb = np.array(np.random.randint(0, 10, 5))\nprint(b)\nprint(b.flags)\n\n# Note: Not sure where we can use this option. I will do some research and update things here","3300f034":"# 114. \n\nimport numpy as np\n\nX = np.arange(12).reshape(6, 2)\nprint('Original:')\nprint(X)\n\nY = X.reshape(3, 2, 2, order = 'F')\nprint('\\nReshape with Order F:')\nprint(Y)\n\n# Options: \n# 'C' - # C-like index ordering\n# 'F' - # Fortran-like index ordering\n# 'A' - # Mixed Fortran or C (check docucmnetation for more)\n# 'K' - ?","23c9e5d2":"# 115. Element-wise math\n\na = np.arange(6).reshape(3, 2)\nprint('Before:')\nprint(a)\n\n# b = x^2 + y^2\nb = (np.array(a) ** 2).sum(-1)\nprint('\\nAfter:')\nprint(b)","f87f9ba1":"# 116. Where with multiple condition\n\ndt = 1.0\na = np.arange(0.0, 5.0, dt)\nprint('Original:')\nprint(a)\n\n# if a is less than 3 and greater than 0, multiply by 2 or else multiply by 4\nb = np.where((a >= 0) & (a < 3), 2 * t, 4 * t)\nprint('\\nAfter:')\nprint(b)","6819c7ca":"# 117. Subtract Outer\n\na, b = [2,7,8], [1,9]\n\nc = np.abs(np.subtract.outer(l3, l4))\nprint('Original:')\nprint(c)\n\nd = c.ravel()\nprint('\\nAfter ravel:')\nprint(d)","3e8dc268":"# 118. Multiply Outer\n\na = np.array([1, 2, 3])\nb = np.array([4, 5, 6])\n\nc = np.multiply.outer(a, b)\n\nprint(c)\n\nd = c.ravel()\nprint(d)","8e7af878":"# 119. Immutable Array\n\na = np.arange(6)\na.flags.writeable = False\n\nprint('Before:')\nprint(a)\n\na[0] = 1 # this will throw ValueError: assignment destination is read-only","e54cd81f":"# 120. Float anomalies in Numpy Arange\n\nfor i in np.arange(0.0, 2.1, 0.1):\n    print(i)\n    \n# source: \n# https:\/\/docs.python.org\/3\/tutorial\/floatingpoint.html\n# https:\/\/stackoverflow.com\/questions\/63824157\/while-using-np-arange-it-was-incrementing-with-wrong-step-size","daaf5f38":"# 121. Complex number and absolute value\n\nx = np.array(1.1 - 0.2j)\nprint('Original:')\nprint(x)\n\nprint('\\nDatatype:')\nprint(x.dtype)\n\ny = np.abs(x)\nprint('\\nAbsolute Value:')\nprint(y)","07d36781":"# 122. Set Error in Numpy\n\nnp.seterr(all = \"ignore\")\na = np.mean([])  # this will be okay as we set the `ignore` option\nprint('Mean of empty array:')\nprint(a)\n\nprint('\\nAfter setting error:')\nnp.seterr(all = \"raise\")\ntry:\n    a = np.mean([])\nexcept FloatingPointError as err:\n    print('FloatingPointError: ', err)\n    \n# other options: 'ignore\u2019, \u2018warn\u2019, \u2018raise\u2019, \u2018call\u2019, \u2018print\u2019, \u2018log\u2019","45932d54":"# 123. Convert List of List String to Numpy Array\n\nimport re\n\na_list = '''\n[[25  3  2]\n [ 1 21  0]\n [ 1  0  0]]\n'''\n\nprint('Original String:')\nprint(a_list)\n\nrows = []\n\nfor line in filter(len, map(str.strip, a_list.split(\"\\n\"))):\n    rows.append([ int(v) for v in re.findall(r\"\\b[0-9]+\\b\", line) ])\n\nnp_rows = np.array(rows)\nprint('\\nAfter converting string to Numpy Array:')\nprint(np_rows)\n\n# do this opeartion just to verify\nnp_rows += 2\n\nprint('\\nAfter converting string to Numpy Array and add 2 in all elements:')\nprint(np_rows)\n\nprint('\\nDatatype:')\nprint(type(np_rows))","3647a3c3":"# 124. Resize a list with rounds\n\na_list = [10, 20, 30]\nresult = np.resize(a_list, 12)\n\nprint(result)","64f54ac8":"# 125. Print columns by index\n\nx = np.array([[1,10,11],[12,0,3]])\nprint('Original:')\nprint(x)\n\nprint('\\nPrinting Cols with Index:')\nfor i in range(3):\n    print(i, x[:,i])","bf0bc611":"# 126. Initalize array with tuples\n\na = np.full((3,2), np.nan, dtype='f,f')\nprint('Original:')\nprint(a)\n\n\na[0] = (12, 2)\nprint('\\nAfter setting up a tuple:')\nprint(a)","a135e645":"# 127. Rearrange with permutation\n\na = np.array([[10, 20, 30],\n                  [100, 200, 300]])\n\nprint('Original:')\nprint(a)\n\npermutation = [1, 0]\nb = a[permutation]\nprint('\\nAfer:')\nprint(b)","d225920e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"23\"><\/a>\n        <font><b>Task 23:<\/b><\/font>\n        <br><br>\n        Numpy compare\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","4acc5091":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"81\"><\/a>\n        <font><b>Task 81:<\/b><\/font>\n        <br><br>\n        Compare Numpy datetime\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","469547fc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"13\"><\/a>\n        <font><b>Task 13:<\/b><\/font>\n        <br><br>\n        Save Numpy to CSV\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ce0c3de9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"72\"><\/a>\n        <font><b>Task 72:<\/b><\/font>\n        <br><br>\n        Trying to inverse a singular matrix\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0bef1123":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"103\"><\/a>\n        <font><b>Task 103:<\/b><\/font>\n        <br><br>\n        If condition and sum on Numpy colum\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","afc8c6b2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"32\"><\/a>\n        <font><b>Task 32:<\/b><\/font>\n        <br><br>\n        Numpy where with multiple conditions\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","80b8ec0d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"57\"><\/a>\n        <font><b>Task 57:<\/b><\/font>\n        <br><br>\n        Find median\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","733b80d1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"21\"><\/a>\n        <font><b>Task 21:<\/b><\/font>\n        <br><br>\n        Numpy inverse\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","60676c19":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"40\"><\/a>\n        <font><b>Task 40:<\/b><\/font>\n        <br><br>\n        Find common values between two numpy array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","dd5b2341":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"24\"><\/a>\n        <font><b>Task 24:<\/b><\/font>\n        <br><br>\n        Numpy compare with nonzero count\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","7c5c1ecf":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"69\"><\/a>\n        <font><b>Task 69:<\/b><\/font>\n        <br><br>\n        Create a boolean array with a shape of x\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c9d9ed91":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"16\"><\/a>\n        <font><b>Task 16:<\/b><\/font>\n        <br><br>\n        Reshape with -1 (lazy option)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ef55b4a5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"50\"><\/a>\n        <font><b>Task 50:<\/b><\/font>\n        <br><br>\n        Repeat an array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ca5940ed":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"31\"><\/a>\n        <font><b>Task 31:<\/b><\/font>\n        <br><br>\n        Numpy Where\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","0c42a2c5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"56\"><\/a>\n        <font><b>Task 56:<\/b><\/font>\n        <br><br>\n        Calculate 90th percentile of an axis\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5dc15b84":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"47\"><\/a>\n        <font><b>Task 47:<\/b><\/font>\n        <br><br>\n        Swap rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","24d9be2d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"60\"><\/a>\n        <font><b>Task 60:<\/b><\/font>\n        <br><br>\n        Cross correlation\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ce15e9b8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"105\"><\/a>\n        <font><b>Task 105:<\/b><\/font>\n        <br><br>\n        Apply Along Axis on Numpy Matrix\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","618749e8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"91\"><\/a>\n        <font><b>Task 91:<\/b><\/font>\n        <br><br>\n        Reverse 2D Array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","d7d84b74":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"64\"><\/a>\n        <font><b>Task 64:<\/b><\/font>\n        <br><br>\n        Create 4 different integers from 0, 4. (It will throw error as we can't get 5 unique integers from 4)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5d1badcd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"36\"><\/a>\n        <font><b>Task 36:<\/b><\/font>\n        <br><br>\n        List to numpy array with explicit dtype\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2352733b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"73\"><\/a>\n        <font><b>Task 73:<\/b><\/font>\n        <br><br>\n        Find the union\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5d890e40":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"35\"><\/a>\n        <font><b>Task 35:<\/b><\/font>\n        <br><br>\n        List to numpy array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","253438a5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"112\"><\/a>\n        <font><b>Task 112:<\/b><\/font>\n        <br><br>\n        Transpose\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e609bcbd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"92\"><\/a>\n        <font><b>Task 92:<\/b><\/font>\n        <br><br>\n        Reverse 2D array with elements\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","54d1b888":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"68\"><\/a>\n        <font><b>Task 68:<\/b><\/font>\n        <br><br>\n        Get unique elements\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b0266f74":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"55\"><\/a>\n        <font><b>Task 55:<\/b><\/font>\n        <br><br>\n        Get min of axis = 0\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","30f13597":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n\n<font color=\"teal\" size=+1><b>Content List<\/b><\/font>\n    \n* [0. Numpy version](#00)\n* [1. Create an empty array](#01)\n* [2. Check whether the array is empty](#02)\n* [3. Check elements count](#03)\n* [4. Arrange numpy between numbers](#04)\n* [5. Arrange numpy between numbers with intervals](#05)\n* [6. Array reshape](#06)\n* [7. Create a numpy with random integers](#07)\n* [8. Create a numpy with random integers and size](#08)\n* [9. Array of strings](#09)\n* [10. Numpy array with strings and explicit dtype](#10)\n* [11. Numpy array with strings and explicit dtype](#11)\n* [12. Print without truncation](#12)\n* [13. Save Numpy to CSV](#13)\n* [14. Dataframe to Numpy](#14)\n* [15. Get the nth column of an array](#15)\n* [16. Reshape with -1 (lazy option)](#16)\n* [17. Numpy with precision](#17)\n* [18. Argsort on Numpy array](#18)\n* [19. Numpy view](#19)\n* [20. Using Flipud](#20)\n* [21. Numpy inverse](#21)\n* [22. Numpy Inverse](#22)\n* [23. Numpy compare](#23)\n* [24. Numpy compare with nonzero count](#24)\n* [25. Flip a numpy array by using flipud](#25)\n* [26. Flip a numpy array by using flipud without sharing the memory](#26)\n* [27. Flip a numpy array by using fliplr (horizontally)](#27)\n* [28. Flip a numpy array by using flip (both horizontally and vertically)](#28)\n* [29. Flipping the numpy array using slices](#29)\n* [30. Convert numpy array to list](#30)\n* [31. Numpy Where](#31)\n* [32. Numpy where with multiple conditions](#32)\n* [33. Numpy where with multiple conditions - apply only on matching conditions](#33)\n* [34. Process with where](#34)\n* [35. List to numpy array](#35)\n* [36. List to numpy array with explicit dtype](#36)\n* [37. 2D list to numpy array](#37)\n* [38. Convert list to float numpy array](#38)\n* [39. Convert list to numpy array with explicit datatype](#39)\n* [40. Find common values between two numpy array](#40)\n* [41. Get today in numpy and deltas](#41)\n* [42. Between two Dates](#42)\n* [43. Random array and sorting](#43)\n* [44. Random int array and sorting](#44)\n* [45. String to nump,y array](#45)\n* [46. Find the nearest element in the array](#46)\n* [47. Swap rows](#47)\n* [48. Shuffle](#48)\n* [49. Get specific element](#49)\n* [50. Repeat an array](#50)\n* [51. Min, Max, Sum](#51)\n* [52. Get min of axis = 1](#52)\n* [53. Using amin function](#53)\n* [54. Using amax function](#54)\n* [55. Get min of axis = 0](#55)\n* [56. Calculate 90th percentile of an axis](#56)\n* [57. Find median](#57)\n* [58. Covariance matrix](#58)\n* [59. Pearson product-moment correlation](#59)\n* [60. Cross correlation](#60)\n* [61. Count the number of occurrences](#61)\n* [62. Create random int numpy array with specific shape](#62)\n* [63. Create 4 different integers from 0, 40. ](#63)\n* [64. Create 4 different integers from 0, 4. ](#64)\n* [65. Shuffle](#65)\n* [66. Shuffling by permutation](#66)\n* [67. Seed for random](#67)\n* [68. Get unique elements](#68)\n* [69. Create a boolean array with a shape of x](#69)\n* [70. Find unique intersection](#70)\n* [71. Find the diff](#71)\n* [72. Trying to inverse a singular matrix](#72)\n* [73. Find the union](#73)\n* [74. Element Sum](#74)\n* [75. Pretty print - suppress the scientific notation](#75)\n* [76. Print with decimal format](#76)\n* [77. Convert flot array to int array](#77)\n* [78. array vs asarray](#78)\n* [79. Numpy Datetime](#79)\n* [80. Numpy Datetime with arange](#80)\n* [81. Compare Numpy datetime](#81)\n* [82. Numpy 2D array flat list](#82)\n* [83. Numpy 2D array to flat list](#83)\n* [84. Numpy array to Pandas Dataframe](#84)\n* [85. Numpy to Dataframe by using from_records](#85)\n* [86. Append with hstack](#86)\n* [87. Ravel vs. Flatten](#87)\n* [88. Ravel and Flatten with assignment](#88)\n* [89. Numpy Concatenate](#89)\n* [90. Reverse 1D array](#90)\n* [91. Reverse 2D Array](#91)\n* [92. Reverse 2D array with elements](#92)\n* [93. Image as an array](#93)\n* [94. Array with prefilled values](#94)\n* [95. Delete specific indices](#95)\n* [96. Deleting specific elements](#96)\n* [97. Boolean Numpy Array](#97)\n* [98. Array of NaN](#98)\n* [99. Replace values with specific condition](#99)\n* [100. Selecting specific columns](#100)  \n* [101. Vectorize](#101)\n* [102. If condition on Numpy array on the fly](#102)\n* [103. If condition and sum on Numpy colum](#103)\n* [104. Using Vectorize function on Numpy](#104)\n* [105. Apply Along Axis on Numpy Matrix](#105)\n* [106. Sort the arry by using](#106)\n* [107. Numpy Roll](#107)\n* [108. Roll elements](#108)\n* [109. Array Append on Axis 0 and Axis 1](#109)\n* [110. Rearrange array with specified index](#110)\n* [111. Serialize array with pickle](#111)\n* [112. Transpose](#112)\n* [113. Continguous Array](#113)    \n","f42065fe":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"98\"><\/a>\n        <font><b>Task 98:<\/b><\/font>\n        <br><br>\n        Array of NaN\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","43ab3f30":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"42\"><\/a>\n        <font><b>Task 42:<\/b><\/font>\n        <br><br>\n        Between two Dates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","6abd0724":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"93\"><\/a>\n        <font><b>Task 93:<\/b><\/font>\n        <br><br>\n        Image as an array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e4c8c9be":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"45\"><\/a>\n        <font><b>Task 45:<\/b><\/font>\n        <br><br>\n        String to nump,y array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","76adbb00":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"61\"><\/a>\n        <font><b>Task 61:<\/b><\/font>\n        <br><br>\n        Count the number of occurrences\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0d4a4e30":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"77\"><\/a>\n        <font><b>Task 77:<\/b><\/font>\n        <br><br>\n        Convert flot array to int array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e547831c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"89\"><\/a>\n        <font><b>Task 89:<\/b><\/font>\n        <br><br>\n        Numpy Concatenate\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","9e7637c1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"25\"><\/a>\n        <font><b>Task 25:<\/b><\/font>\n        <br><br>\n        Flip a numpy array by using flipud\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","16944c06":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"99\"><\/a>\n        <font><b>Task 99**:<\/b><\/font>\n        <br><br>\n        Replace values with specific condition\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f96dcca7":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"03\"><\/a>\n        <font><b>Task 03:<\/b><\/font>\n        <br><br>\n        Check elements count\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","b3583207":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"80\"><\/a>\n        <font><b>Task 80:<\/b><\/font>\n        <br><br>\n        Numpy Datetime with arange\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","d0a20618":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"02\"><\/a>\n        <font><b>Task 02:<\/b><\/font>\n        <br><br>\n        Check whether the array is empty\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","a482d534":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"70\"><\/a>\n        <font><b>Task 70:<\/b><\/font>\n        <br><br>\n        Find unique intersection\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ec8481e9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"08\"><\/a>\n        <font><b>Task 08:<\/b><\/font>\n        <br><br>\n        Create a numpy with random integers and size\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","da98a579":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"10\"><\/a>\n        <font><b>Task 10:<\/b><\/font>\n        <br><br>\n        Numpy array with strings and explicit dtype\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","4beb6a31":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"94\"><\/a>\n        <font><b>Task 94:<\/b><\/font>\n        <br><br>\n        Array with prefilled values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","528fca41":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"110\"><\/a>\n        <font><b>Task 110:<\/b><\/font>\n        <br><br>\n        Rearrange array with specified index\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1530493c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"75\"><\/a>\n        <font><b>Task 75:<\/b><\/font>\n        <br><br>\n        Pretty print - suppress the scientific notation\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f6eea44d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"78\"><\/a>\n        <font><b>Task 78:<\/b><\/font>\n        <br><br>\n        array vs asarray\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","76180e40":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"11\"><\/a>\n        <font><b>Task 11:<\/b><\/font>\n        <br><br>\n        Numpy array with strings and explicit dtype\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","ba15c47a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"26\"><\/a>\n        <font><b>Task 26:<\/b><\/font>\n        <br><br>\n        Flip a numpy array by using flipud without sharing the memory\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","576aeb59":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"87\"><\/a>\n        <font><b>Task 87:<\/b><\/font>\n        <br><br>\n        Ravel vs. Flatten\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a8ba1827":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"65\"><\/a>\n        <font><b>Task 65:<\/b><\/font>\n        <br><br>\n        Shuffle\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","74f75786":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"28\"><\/a>\n        <font><b>Task 28:<\/b><\/font>\n        <br><br>\n        Flip a numpy array by using flip (both horizontally and vertically)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","2b45ceda":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"104\"><\/a>\n        <font><b>Task 104:<\/b><\/font>\n        <br><br>\n        Using Vectorize function on Numpy\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e2de2d8c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"41\"><\/a>\n        <font><b>Task 41:<\/b><\/font>\n        <br><br>\n        Get today in numpy and deltas\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","7b9266ca":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"09\"><\/a>\n        <font><b>Task 09:<\/b><\/font>\n        <br><br>\n        Array of strings\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","adcee51d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"82\"><\/a>\n        <font><b>Task 82:<\/b><\/font>\n        <br><br>\n        Numpy 2D array flat list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fd8cb7c5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"38\"><\/a>\n        <font><b>Task 38:<\/b><\/font>\n        <br><br>\n        Convert list to float numpy array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","255239c3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"108\"><\/a>\n        <font><b>Task 108:<\/b><\/font>\n        <br><br>\n        Roll elements\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","31fa4906":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"84\"><\/a>\n        <font><b>Task 84:<\/b><\/font>\n        <br><br>\n        Numpy array to Pandas Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a640a299":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"30\"><\/a>\n        <font><b>Task 30:<\/b><\/font>\n        <br><br>\n        Convert numpy array to list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6a871d33":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"111\"><\/a>\n        <font><b>Task 111:<\/b><\/font>\n        <br><br>\n        Serialize array with pickle\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c34bb599":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"59\"><\/a>\n        <font><b>Task 59:<\/b><\/font>\n        <br><br>\n        Pearson product-moment correlation\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","19524a4e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"27\"><\/a>\n        <font><b>Task 27:<\/b><\/font>\n        <br><br>\n        Flip a numpy array by using fliplr (horizontally)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","f3c17f9f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"49\"><\/a>\n        <font><b>Task 49:<\/b><\/font>\n        <br><br>\n        Get specific element\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","9762635d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"34\"><\/a>\n        <font><b>Task 34:<\/b><\/font>\n        <br><br>\n        Process with where\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ecc8c7f2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"107\"><\/a>\n        <font><b>Task 107:<\/b><\/font>\n        <br><br>\n        Numpy Roll\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","be0271ff":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"62\"><\/a>\n        <font><b>Task 62:<\/b><\/font>\n        <br><br>\n        Create random int numpy array with specific shape\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1b81ec79":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"86\"><\/a>\n        <font><b>Task 86:<\/b><\/font>\n        <br><br>\n        Append with hstack\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f82e9895":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"96\"><\/a>\n        <font><b>Task 96:<\/b><\/font>\n        <br><br>\n        Deleting specific elements\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","de46517f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"07\"><\/a>\n        <font><b>Task 07:<\/b><\/font>\n        <br><br>\n        Create a numpy with random integers\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1fda05d7":"\n##### **To Do:**\n\n* Add more exercises (targetting 150+ exercieses. You can come back and check after a while)\n* Add documentation for each exercise\n* Add more aesthetics","751667e2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"51\"><\/a>\n        <font><b>Task 51:<\/b><\/font>\n        <br><br>\n        Min, Max, Sum\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4eb7f258":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"67\"><\/a>\n        <font><b>Task 67:<\/b><\/font>\n        <br><br>\n        Seed for random\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ce5b7879":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"85\"><\/a>\n        <font><b>Task 85:<\/b><\/font>\n        <br><br>\n        Numpy to Dataframe by using from_records\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","cff3eec3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"44\"><\/a>\n        <font><b>Task 44:<\/b><\/font>\n        <br><br>\n        Random int array and sorting\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f796e29d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"74\"><\/a>\n        <font><b>Task 74:<\/b><\/font>\n        <br><br>\n        Element Sum\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ed19eb73":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"66\"><\/a>\n        <font><b>Task 66:<\/b><\/font>\n        <br><br>\n        Shuffling by permutation\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","573f6bcc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"100\"><\/a>\n        <font><b>Task 100:<\/b><\/font>\n        <br><br>\n        Selecting specific columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","85dbb133":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"53\"><\/a>\n        <font><b>Task 53:<\/b><\/font>\n        <br><br>\n        Using amin function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","80dceeff":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"97\"><\/a>\n        <font><b>Task 97:<\/b><\/font>\n        <br><br>\n        Boolean Numpy Array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a4d804fd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"88\"><\/a>\n        <font><b>Task 88:<\/b><\/font>\n        <br><br>\n        Ravel and Flatten with assignment\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f11e1275":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"102\"><\/a>\n        <font><b>Task 102:<\/b><\/font>\n        <br><br>\n        If condition on Numpy array on the fly\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","423f95e1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"19\"><\/a>\n        <font><b>Task 19:<\/b><\/font>\n        <br><br>\n        Numpy view\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","8e9d273b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"22\"><\/a>\n        <font><b>Task 22:<\/b><\/font>\n        <br><br>\n        Numpy Inverse\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","22d3daab":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"83\"><\/a>\n        <font><b>Task 83:<\/b><\/font>\n        <br><br>\n        Numpy 2D array to flat list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e7d55494":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"54\"><\/a>\n        <font><b>Task 54:<\/b><\/font>\n        <br><br>\n        Using amax function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1cd94f80":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"06\"><\/a>\n        <font><b>Task 06:<\/b><\/font>\n        <br><br>\n        Array reshape\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","12bb6f9d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"01\"><\/a>\n        <font><b>Task 01:<\/b><\/font>\n        <br><br>\n        Create an empty array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1a2511df":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"15\"><\/a>\n        <font><b>Task 15:<\/b><\/font>\n        <br><br>\n        Get the nth column of an array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","9045de08":"**Final Notes:**\n\nI am adding things still. You can come back and check for more information.\n\nAlso, if you **like my notebook**, <font style=\"color:blue;size:14px;\">please upvote it<\/font> as it will motivate me to come up with better approach in the upcoming notebooks.","595ee903":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"106\"><\/a>\n        <font><b>Task 106:<\/b><\/font>\n        <br><br>\n        Sort the arry by using \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e1529f91":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"58\"><\/a>\n        <font><b>Task 58:<\/b><\/font>\n        <br><br>\n        Covariance matrix\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2ca17037":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"71\"><\/a>\n        <font><b>Task 71:<\/b><\/font>\n        <br><br>\n        Find the diff\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","6de0aec0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"76\"><\/a>\n        <font><b>Task 76:<\/b><\/font>\n        <br><br>\n        Print with decimal format\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e825556d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"52\"><\/a>\n        <font><b>Task 52:<\/b><\/font>\n        <br><br>\n        Get min of axis = 1\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1a7ccc26":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"95\"><\/a>\n        <font><b>Task 95:<\/b><\/font>\n        <br><br>\n        Delete specific indices\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","85202bb0":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"14\"><\/a>\n        <font><b>Task 14:<\/b><\/font>\n        <br><br>\n        Dataframe to Numpy\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","69c07b67":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"90\"><\/a>\n        <font><b>Task 90:<\/b><\/font>\n        <br><br>\n        Reverse 1D array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","bde55661":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"33\"><\/a>\n        <font><b>Task 33:<\/b><\/font>\n        <br><br>\n        Numpy where with multiple conditions - apply only on matching conditions\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","08b2a3a7":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"18\"><\/a>\n        <font><b>Task 18:<\/b><\/font>\n        <br><br>\n        Argsort on Numpy array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","5da68293":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"48\"><\/a>\n        <font><b>Task 48:<\/b><\/font>\n        <br><br>\n        Shuffle\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2502b188":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"05\"><\/a>\n        <font><b>Task 05:<\/b><\/font>\n        <br><br>\n        Arrange numpy between numbers with intervals\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c69666ac":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"12\"><\/a>\n        <font><b>Task 12:<\/b><\/font>\n        <br><br>\n        Print without truncation\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","7f77f974":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"17\"><\/a>\n        <font><b>Task 17:<\/b><\/font>\n        <br><br>\n        Numpy with precision\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","624960bd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"20\"><\/a>\n        <font><b>Task 20:<\/b><\/font>\n        <br><br>\n        Using Flipud\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","34f1a790":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"00\"><\/a>\n        <font><b>Task 00:<\/b><\/font>\n        <br><br>\n        Numpy version\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","ae886fec":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"79\"><\/a>\n        <font><b>Task 79:<\/b><\/font>\n        <br><br>\n        Numpy Datetime\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ef24db59":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"109\"><\/a>\n        <font><b>Task 109:<\/b><\/font>\n        <br><br>\n        Array Append on Axis 0 and Axis 1\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3835621a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"04\"><\/a>\n        <font><b>Task 04:<\/b><\/font>\n        <br><br>\n        Arrange numpy between numbers\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","18ae2d27":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"63\"><\/a>\n        <font><b>Task 63:<\/b><\/font>\n        <br><br>\n        Create 4 different integers from 0, 40.\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3a353350":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"46\"><\/a>\n        <font><b>Task 46:<\/b><\/font>\n        <br><br>\n        Find the nearest element in the array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","51d8b0a5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"29\"><\/a>\n        <font><b>Task 29:<\/b><\/font>\n        <br><br>\n        Flipping the numpy array using slices\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","963284a4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"37\"><\/a>\n        <font><b>Task 37:<\/b><\/font>\n        <br><br>\n        2D list to numpy array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","891fd474":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"43\"><\/a>\n        <font><b>Task 43:<\/b><\/font>\n        <br><br>\n        Random array and sorting\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","21d025cf":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"113\"><\/a>\n        <font><b>Task 113:<\/b><\/font>\n        <br><br>\n        Continguous Array\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c6005959":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"39\"><\/a>\n        <font><b>Task 39:<\/b><\/font>\n        <br><br>\n        Convert list to numpy array with explicit datatype\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","abd4d0bb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"101\"><\/a>\n        <font><b>Task 101:<\/b><\/font>\n        <br><br>\n        Vectorize\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>"}}