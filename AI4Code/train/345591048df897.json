{"cell_type":{"b6c4c382":"code","04563ff8":"code","65f826e5":"code","6d5849d8":"code","a987b5ae":"code","63b21087":"code","15ea8411":"code","a8ce5027":"code","32f53f68":"code","490eabc4":"code","3b96da19":"code","e2f1fde5":"code","03e4c624":"code","f87eaa85":"code","6db6d413":"code","861117a4":"code","406dddb4":"code","02a96277":"code","af8608c2":"code","49816f3d":"code","5bd2d700":"code","cd4d7bbd":"code","ccc796db":"code","7f1240ba":"code","b30d5d2c":"code","d52a82d3":"code","a66db3d0":"code","8792f79b":"code","9c3c762c":"code","e4660397":"code","aa4995e0":"code","8f7d2957":"code","6618f1db":"code","b1215971":"code","36e34f38":"code","6a23e726":"code","82e31348":"code","b5f45f11":"code","190ad8c5":"code","06d6e732":"code","5906115a":"code","0cf76c59":"markdown","90d16b90":"markdown","d7868d77":"markdown","a5d76611":"markdown","40072a3b":"markdown","052c1629":"markdown","95e8d6e5":"markdown","bc527a3b":"markdown","1231c333":"markdown"},"source":{"b6c4c382":"import numpy as np\nimport sklearn\nimport pandas as pd\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","04563ff8":"# Import sklearn modules\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import roc_auc_score","65f826e5":"import matplotlib.pyplot as plt\n%matplotlib inline","6d5849d8":"df = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","a987b5ae":"df.shape","63b21087":"df.info()","15ea8411":"df.head()","a8ce5027":"# Use sex as one metric, because being female has significant higher survival rate\nsns.catplot(x='Sex', y='Survived', data=df, kind='bar')","32f53f68":"df['Sex'] = df['Sex'].apply(lambda x: 0 if x=='male' else 1)","490eabc4":"df.loc[df['Age'].isnull(), 'Age'] = df['Age'].median()","3b96da19":"# Define function that divide age into three group: <18 juniors; 18-56 Adults; >56 seniors\nage_to_category = lambda x: 1 if x<18 else 2 if x<56 else 3","e2f1fde5":"df['Age'] = df['Age'].apply(age_to_category)","03e4c624":"# Juniors have higher survival rate than adult and seniors, and this could be included into the metrics\nsns.catplot(x='Age', y='Survived', data=df, kind='bar')","f87eaa85":"# Fare price has been heavily right skewed, with mean>median\nplt.figure(figsize=(20,10))\nsns.distplot(df['Fare'], kde=False)\nplt.show()","6db6d413":"# Define three category of fares\nfare_to_category = lambda x: 1 if x<20 else 2 if x<100 else 3","861117a4":"df['Fare'] = df['Fare'].apply(fare_to_category)","406dddb4":"# Higher fare class has much higher survival rate than lower fare class\nsns.catplot(x='Fare', y='Survived', data=df, kind='bar')","02a96277":"sns.catplot(x='Embarked', y='Survived', data=df, kind='bar')","af8608c2":"df['Embarked'].fillna(np.random.choice(df.dropna(subset=['Embarked'])['Embarked']), inplace=True)","49816f3d":"df['Embarked'] = df['Embarked'].apply(lambda x: 0 if x=='S' else 1 if x=='C' else 2)","5bd2d700":"df[['Pclass', 'Age', 'SibSp','Parch', 'Fare']].corr()","cd4d7bbd":"# parent and children (Parch) and SibSp(siblings and spouse) are positive correlated, higher parch means higher sibsp\n# Fare and pclass are negatively correlated. Upper class (1) means higher fare price\nsns.heatmap(df[['Pclass', 'Age', 'SibSp','Parch', 'Fare']].corr())","ccc796db":"sns.catplot(x='Pclass', y='Survived', data=df, kind='bar')","7f1240ba":"df['FamilyMember'] = df['Parch'] + df['SibSp']","b30d5d2c":"# 3 Family members reached the highest survival rate\nsns.catplot(x='FamilyMember', y='Survived', data=df, kind='bar')","d52a82d3":"df = df[['Pclass', 'Sex', 'Age', 'FamilyMember', 'Fare', 'Embarked', 'Survived']]\ndf.head()","a66db3d0":"# Seperate train and test data using stratified method\nx_train, x_test, y_train, y_test = train_test_split(df.drop('Survived', axis=1), \n                                                    df['Survived'], \n                                                    test_size=0.3, \n                                                    random_state=1,\n                                                    stratify=df['Survived'])","8792f79b":"# Prediction accuracy using sex as the only feature\n(x_test['Sex']==y_test).mean()","9c3c762c":"# Generate benchmark submission using sex as the only feature\ndf_test['Survived'] = df_test['Sex']\ndf_test[['PassengerId', 'Survived']].to_csv('submission_sex.csv', encoding='utf8', index=False)","e4660397":"# Use random forest as classifier, and optimize n_estimators\nrf = RandomForestClassifier(random_state=1)\nparameters = {'n_estimators':[10, 20, 50, 100]}","aa4995e0":"# Grid search for the best number of estimators\nclf = GridSearchCV(rf, parameters, cv=5)","8f7d2957":"clf.fit(x_train, y_train)","6618f1db":"clf.best_score_","b1215971":"clf.best_params_","36e34f38":"(clf.predict(x_test)==y_test).mean()","6a23e726":"confusion_matrix(y_test, clf.predict(x_test))","82e31348":"roc_auc_score(y_test, clf.predict(x_test))","b5f45f11":"# Processing test data for submission\ndf_test['FamilyMember'] = df_test['SibSp']+df_test['Parch']\n\ndf_test.loc[df_test['Age'].isnull(), 'Age'] = df_test['Age'].median()\n\ndf_test['Age'] = df_test['Age'].apply(age_to_category)\n\ndf_test['Fare'].fillna(df_test['Fare'].median(), inplace=True)\n\ndf_test['Fare'] = df_test['Fare'].apply(fare_to_category)\n\ndf_test['Embarked'] = df_test['Embarked'].apply(lambda x: 0 if x=='S' else 1 if x=='C' else 2)\n\ndf_test['Sex'] = df_test['Sex'].apply(lambda x: 0 if x=='male' else 1)","190ad8c5":"df_test = df_test[['PassengerId', 'Pclass', 'Sex', 'Age', 'FamilyMember', 'Fare', 'Embarked']]","06d6e732":"df_test['Survived'] = clf.predict(df_test.drop('PassengerId', axis=1))","5906115a":"# Generate submission file\ndf_test[['PassengerId', 'Survived']].to_csv('submission_cv.csv', encoding='utf8', index=False)","0cf76c59":"### 4. Embarked cargo (C>Q>S in terms of survival rate) ","90d16b90":"## 6. Family members to survival rate ","d7868d77":"# Benchmark prediction using sex as the only feature","a5d76611":"## 1. Sex influences survival rate (female>male)","40072a3b":"## 3. Fare price influenced survival rate(higher fare price, higher survival rate)","052c1629":"# EDA","95e8d6e5":"# Random Forest Prediction","bc527a3b":"## 2. Age influences survival rate (lower age, higher survival rate)","1231c333":"## 5. Pclass influenced survival rate (lower pclass higher survival rate) "}}