{"cell_type":{"93b9527d":"code","6d5bda7e":"code","9145faa6":"code","6536e7fa":"code","e7975662":"code","ca8692f0":"code","81b4e406":"code","d36ed90f":"code","299212d9":"code","2d706a39":"code","ce7509b9":"code","e88799d1":"code","d21b72fb":"code","807f31af":"code","ce61bec3":"code","38e69eea":"code","be9a5d8c":"code","fcee7621":"code","f2278c25":"code","0f39bd9c":"code","de5f9c75":"code","3352ca2b":"code","d9cfa263":"code","76353424":"code","e4aef210":"code","73e65d95":"code","fea7853b":"code","0b726121":"markdown","839080b8":"markdown","05934407":"markdown","f76b42fb":"markdown","8920fe67":"markdown","e1679581":"markdown","5129e3c1":"markdown","4b527d00":"markdown"},"source":{"93b9527d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6d5bda7e":"df = pd.read_csv(\"..\/input\/pantheon-project\/database.csv\")\ndf.head(7)","9145faa6":"df.info()","6536e7fa":"print('Missing Value in Each Column:')\nprint(df.isna().sum())","e7975662":"df.describe()","ca8692f0":"df.drop(columns=['article_id','full_name','state','latitude','longitude','city'],inplace=True)\ndf = df.dropna().reset_index(drop=True)","81b4e406":"df.info()","d36ed90f":"df.head()","299212d9":"df.info()","2d706a39":"from sklearn.preprocessing import LabelEncoder, OrdinalEncoder","ce7509b9":"encode = OrdinalEncoder()\nencode.fit(df[['sex','country','continent','occupation','industry','domain']])\ndf[['sex','country','continent','occupation','industry','domain']] = encode.transform(df[['sex','country','continent','occupation','industry','domain']])","e88799d1":"df.loc[df[\"birth_year\"] == \"530s\", \"birth_year\"] = 530\ndf.loc[df[\"birth_year\"] == \"1237?\", \"birth_year\"] = 1237\ndf = df.drop(df.index[df.loc[:,\"birth_year\"] == \"Unknown\"])\ndf.loc[:, \"birth_year\"] = pd.to_numeric(df.loc[:,\"birth_year\"])","d21b72fb":"df.head()","807f31af":"df.info()","ce61bec3":"from sklearn.model_selection import train_test_split","38e69eea":"X = df.drop(columns=['historical_popularity_index'])\ny = df['historical_popularity_index']\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)\nX_train.shape,X_test.shape,y_train.shape,y_test.shape","be9a5d8c":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV","fcee7621":"param_rf = {\n    'n_estimators':[100,150,200],\n    'max_depth':[20,50,80],\n    'max_features':[0.3,0.6,0.8],\n    'min_samples_leaf':[1,5,10],\n}","f2278c25":"rf = RandomForestRegressor(n_jobs=-1,random_state=42)","0f39bd9c":"model_rf = GridSearchCV(rf,param_rf,cv=3,n_jobs=-1,verbose=1)\nmodel_rf.fit(X_train,y_train)\n\nprint(model_rf.best_params_)\nprint(\"Train data R squared score: \", model_rf.score(X_train,y_train))\nprint(\"Test data R squared score: \", model_rf.score(X_test,y_test))","de5f9c75":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score","3352ca2b":"y_pred = model_rf.predict(X_test)","d9cfa263":"mae = mean_absolute_error(y_test,y_pred)\nmse = mean_squared_error(y_test,y_pred)\nr2 = r2_score(y_test,y_pred)","76353424":"print(\"The model performance for testing set\")\nprint(\"--------------------------------------\")\nprint('MAE is {}'.format(mae))\nprint('MSE is {}'.format(mse))\nprint('R2 score is {}'.format(r2))","e4aef210":"rf_selected = RandomForestRegressor(max_depth=50, max_features=0.6, min_samples_leaf=1, \n                                    n_estimators=200,n_jobs=-1,random_state=42) ","73e65d95":"# Random Forest Built In\n\nrf_selected.fit(X_train, y_train)\n\nsorted_idx = rf_selected.feature_importances_.argsort()\n\nfig = plt.subplots(figsize=(10,5))\nplt.barh(X_train.columns[sorted_idx], rf_selected.feature_importances_[sorted_idx])\nplt.xlabel(\"Feature Importance Score\")\nplt.ylabel(\"Feature\")\nplt.title(\"Feature Importances with Built In\")\n\nplt.show()","fea7853b":"# Permutation\n\nfrom sklearn.inspection import  permutation_importance\n\nperm_importance = permutation_importance(rf_selected, X_test, y_test)\n\nsorted_idx = perm_importance.importances_mean.argsort()\n\nfig = plt.subplots(figsize=(10,5))\nplt.barh(X_train.columns[sorted_idx], perm_importance.importances_mean[sorted_idx])\nplt.xlabel(\"Permutation Importance\")\nplt.xlabel(\"Feature Importance Score\")\nplt.ylabel(\"Feature\")\nplt.title(\"Feature Importances with Permutation\")\n\nplt.show()","0b726121":"# Quick Feature Selection","839080b8":"# Import Data","05934407":"## Dataset Splitting","f76b42fb":"# Modeling","8920fe67":"# Feature Importances Based on Model","e1679581":"# Data Understanding","5129e3c1":"# Evaluation","4b527d00":"## Learning "}}