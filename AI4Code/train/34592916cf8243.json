{"cell_type":{"0a3f0074":"code","a591f726":"code","dfdb5708":"code","58197099":"code","8bfbfc3c":"code","96c18940":"code","793dd344":"code","cc3ee234":"code","fc911dc4":"code","22ac5721":"code","194ad7b2":"code","0e94cedf":"code","81338186":"code","57d2078c":"code","24b03168":"markdown","15f3bc40":"markdown","a89a4e6f":"markdown","6657d08f":"markdown","f999dd4a":"markdown","8b8ecf9d":"markdown","96a90151":"markdown","0222698e":"markdown","dacb74dc":"markdown","d1ce50f1":"markdown","31a7c7b3":"markdown","9a0646df":"markdown","a224ebd7":"markdown","1de1ce56":"markdown","6eeb8f04":"markdown","dd027ad0":"markdown","b61a31ac":"markdown","8a114a08":"markdown","71ee78a4":"markdown"},"source":{"0a3f0074":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a591f726":"df = pd.read_csv('\/kaggle\/input\/heart-disease-health-indicators-dataset\/heart_disease_health_indicators_BRFSS2015.csv')\ndf.head()\n#need to figure out how to expand all columns","dfdb5708":"print(df.shape)","58197099":"df.columns.values","8bfbfc3c":"df.info()","96c18940":"df.describe()","793dd344":"df.HeartDiseaseorAttack.unique()","cc3ee234":"df.HeartDiseaseorAttack.value_counts()","fc911dc4":"sns.heatmap(df.isnull(),cbar=False,yticklabels=False,cmap = 'viridis')\n","22ac5721":"plt.figure(figsize=(6,4))\nsns.heatmap(df.corr(),cmap='Blues',annot=False) ","194ad7b2":"#Quality correlation matrix\nk = 22 #number of variables for heatmap\ncols = df.corr().nlargest(k, 'Smoker')['Smoker'].index\ncm = df[cols].corr()\nplt.figure(figsize=(20,12))\nsns.heatmap(cm, annot=True, cmap = 'viridis')","0e94cedf":"l = df.columns.values\nlen(l)","81338186":"l = df.columns.values\nnumber_of_columns=22\nnumber_of_rows = len(l)-1\/number_of_columns\nplt.figure(figsize=(number_of_columns,5*number_of_rows))\nfor i in range(0,len(l)):\n    plt.subplot(number_of_rows + 1,number_of_columns,i+1)\n    sns.set_style('whitegrid')\n    sns.boxplot(y=df[l[i]],color='green')\n    plt.tight_layout()","57d2078c":"plt.figure(figsize=(2*number_of_columns,10*number_of_rows))\nfor i in range(0,len(l)):\n    plt.subplot(number_of_rows + 1,number_of_columns,i+1)\n    sns.distplot(df[l[i]],kde=True) ","24b03168":"# Loading Data Set","15f3bc40":"* This tells us how many people have heart disease\/attack and how many do not.\n* Many people do not have heart disease\/attack compared to who have.","a89a4e6f":"# Data Visualisation","6657d08f":"# To check correlation","f999dd4a":"* Dataset has no missing values.\n* If there were any, we would've noticed in figure represented by different colour shade on purple background.","8b8ecf9d":"Except \"HighBP\", \"HighChol\", \"Smoker\", \"Fruits\", \"Sex\", \"Age\", \"Education\", \"Incomes\", all others show outliers","96a90151":"# To check Outliers","0222698e":"# Understanding Target Variables","dacb74dc":"\" %matplotlib inline \" makes life easy by returning output plots without needing to write plt.show() code everytime after each plot!\n","d1ce50f1":"* Here we can infer that \"PhysHlth\" has strong positive correlation with \"GenHlth\" whereas it has strong negative correlation with \"income\".\n* \"AnyHlthCare\" and \"NoDocBcCost\" has almost no correlation with \"HeartDiseaseorAttack\"\n* Since correlation is zero we can infer there is no linear relationship between these two predictors.However it is safe to drop these features in case you're applying Linear Regression model to the dataset.","31a7c7b3":"\" .head() \" returns first five observations of the dataset","9a0646df":"# Summary Statistics","a224ebd7":"* Dataset comprises of 253680 observations and 22 characteristic\n* Out of which one is dependent variable (HeartDiseaseOrAttack) and rest 21 are independent variables","1de1ce56":"* Target variable\/Dependent variable is discrete and categorical in nature.\n* \"HeartDiseaseorAttack\" score is between 0 or 1;where 1 having a heart disease\/attack and 0 not having a heart disease\/attack.","6eeb8f04":"* Dark shades represents positive correlation while lighter shades represents negative correlation.\n* If we set annot=True, we'll get values by which features are correlated to each other in grid-cells","dd027ad0":"Label of each column","b61a31ac":"# Key Observations\n\n* Mean value is less than median value of each column represented by 50%(50th percentile) in index column.\n* Notably large differnece in 75th %tile and max values of predictors \"Stroke\",\"Diabetes\",\"MentHlth\", \"PhysHlth\",\n* Thus observations 1 and 2 suggests that there are extreme values-Outliers in our dataset","8a114a08":"* Data has only float values\n* No variable column has null\/missing values","71ee78a4":"\"Age\" column appears to be normally distributed\nremaining all independent variables are right skewed\/positively skewed."}}