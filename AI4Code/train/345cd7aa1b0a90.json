{"cell_type":{"77194013":"code","083400e4":"code","bde500dd":"code","fe8fabee":"code","f192e398":"code","11155dde":"code","2511ff3d":"code","6367f784":"code","4b83bdaa":"code","d39be215":"code","b4f33637":"code","830a7559":"code","f9022b9c":"code","ab917ec7":"code","e0ae811c":"code","17030bea":"code","cca69c29":"code","0cf49c77":"code","a8aa168e":"code","f3f10c00":"code","7df7868d":"code","559420fa":"code","9ecf64f2":"code","6ce2a982":"code","ee2135b0":"code","3a7d77aa":"code","c54f8b74":"code","0658980e":"code","1bcc5262":"code","95046d7a":"code","121dd79f":"code","a13b6b4d":"code","a0c95439":"code","f43bf059":"code","da5ccba3":"code","883bd7cc":"code","d9571ae7":"code","f8175b13":"code","b5b96a46":"code","6f786050":"code","44e90e9d":"code","4728108a":"code","ddba4864":"code","b6f07a72":"code","c4eee1da":"code","acee489a":"code","832c7115":"code","96f266e5":"code","6257acf0":"code","197b4601":"code","8648705b":"code","d304010c":"code","bcb7764a":"code","4b121e53":"code","24edfc94":"code","c3ac4666":"code","8e2079a5":"code","77d67114":"code","f657ac1a":"code","fec0df86":"code","bcfb8643":"code","9628f9c3":"code","335c6667":"code","be4a54dc":"code","4d45b8c9":"code","67a7e54e":"code","bf1a5c75":"code","30cd6908":"code","e292411b":"code","609447ad":"code","a470bd8a":"code","577d8ac4":"code","e2004063":"code","7bf7f917":"code","622981e0":"code","4db0b2ac":"code","a7577d7b":"code","49780942":"code","3c85d705":"code","cb2e9b0b":"code","843cf60d":"code","c5e0c71f":"code","4cd9bbc4":"code","8de7d7b2":"code","6346c6a1":"markdown","f5d82924":"markdown","47b62399":"markdown","e92b56b3":"markdown","7cc1ae1c":"markdown","301413b4":"markdown","085438dd":"markdown","7e014a12":"markdown","74cbbec0":"markdown","b02129c7":"markdown","59aeb325":"markdown","bfc82453":"markdown","0763587d":"markdown","8017dd16":"markdown","8f169903":"markdown","bfe6e067":"markdown","a1005ebe":"markdown","98d790d0":"markdown","a95aa5bd":"markdown","6f3b32a5":"markdown","dcb4f6b7":"markdown","2d00d9e4":"markdown","2837bc54":"markdown","e27feb4e":"markdown","e458b8ea":"markdown","cfa1edfb":"markdown","304c4e8c":"markdown","9a5d0390":"markdown","8d9482c6":"markdown","bbf8b6b7":"markdown"},"source":{"77194013":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport os,warnings\nfrom scipy.stats import skew\nimport seaborn as sns\nimport pandas_profiling as pp\nfrom statistics import mode\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import average_precision_score\nfrom sklearn.metrics import roc_auc_score\nfrom xgboost import plot_importance","083400e4":"df_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')","bde500dd":"df_train['TARGET'].value_counts(normalize = True)*100","fe8fabee":"df_train.head(10)","f192e398":"df0 = df_train[df_train.TARGET == 0]\ndf0.shape","11155dde":"def missing(df):\n    value = df.isnull().sum()\n    value_per = 100*df.isnull().sum()\/len(df)\n    missing_values = pd.concat([value,value_per], axis = 1)\n    missing_values = missing_values.rename(columns = {0 : 'Missing Values', 1 : '% of Total Values'}).sort_values('% of Total Values',ascending = False)\n    missing_values = missing_values[missing_values.iloc[:,1] !=0].round(1)\n    return missing_values","2511ff3d":"x_missing =missing(df0)\nx_missing = x_missing[x_missing['% of Total Values']> 45]\nx_missing","6367f784":"df0 = df0.drop(df0[df0['OWN_CAR_AGE'].isnull()].index)","4b83bdaa":"df1 = df_train[df_train['TARGET'] == 1]","d39be215":"df_train = pd.concat([df0,df1])","b4f33637":"df_train.shape","830a7559":"Report = pp.ProfileReport(df_train,minimal = True)","f9022b9c":"df_train = df_train.drop(df_train[df_train['CODE_GENDER'] == 'XNA'].index)\ndf_train = df_train.drop(df_train[df_train['CNT_CHILDREN']>3].index)\ndf_train = df_train.drop(df_train[df_train['AMT_INCOME_TOTAL']>1145000].index)\ndf_train = df_train.drop(df_train[df_train['CNT_FAM_MEMBERS']>6].index)\ndf_train = df_train.drop(df_train[df_train['CNT_FAM_MEMBERS'].isnull()].index)","ab917ec7":"df_train = df_train.drop(df_train[df_train['NAME_TYPE_SUITE'].isnull()].index)\ndf_train = df_train.drop(df_train[df_train['NAME_FAMILY_STATUS'] == 'Unknown'].index)\ndf_train = df_train.drop(df_train[df_train['REGION_POPULATION_RELATIVE']>0.0623].index)","e0ae811c":"df_train = df_train.drop(df_train[df_train['DAYS_EMPLOYED'] == 365243].index)\ndf_train['OCCUPATION_TYPE'].fillna('U', inplace = True)\ndf_train[\"OWN_CAR_AGE\"] = np.where(df_train['OWN_CAR_AGE']>40,40,df_train['OWN_CAR_AGE'])","17030bea":"df_train = df_train.drop(df_train[df_train['EXT_SOURCE_2'].isnull()].index)\ndf_train = df_train.drop(df_train[df_train['DAYS_LAST_PHONE_CHANGE'].isnull()].index)","cca69c29":"df_train[\"DAYS_BIRTH\"] = abs(df_train[\"DAYS_BIRTH\"])\ndf_train['DAYS_EMPLOYED'] = abs(df_train['DAYS_EMPLOYED'])","0cf49c77":"df_train = df_train.drop(df_train[df_train['DEF_30_CNT_SOCIAL_CIRCLE'].isnull()].index)\ndf_train = df_train.drop(df_train[df_train['DEF_60_CNT_SOCIAL_CIRCLE'].isnull()].index)\ndf_train = df_train.drop(df_train[df_train['OBS_30_CNT_SOCIAL_CIRCLE'].isnull()].index)\ndf_train = df_train.drop(df_train[df_train['OBS_60_CNT_SOCIAL_CIRCLE'].isnull()].index)","a8aa168e":"df_train.shape","f3f10c00":"def missing(df):\n    value = df.isnull().sum()\n    value_per = 100*df.isnull().sum()\/len(df)\n    missing_values = pd.concat([value,value_per], axis = 1)\n    missing_values = missing_values.rename(columns = {0 : 'Missing Values', 1 : '% of Total Values',2:'Skewness'}).sort_values('% of Total Values',ascending = False)\n    missing_values = missing_values[missing_values.iloc[:,1] !=0].round(1)\n    return missing_values","7df7868d":"x_missing =missing(df_train)\nx_missing = x_missing[x_missing['% of Total Values']> 45]\nx_missing","559420fa":"x_missing.index","9ecf64f2":"df_train = df_train.drop(columns=['COMMONAREA_AVG', 'COMMONAREA_MODE', 'COMMONAREA_MEDI',\n       'NONLIVINGAPARTMENTS_AVG', 'NONLIVINGAPARTMENTS_MODE',\n       'NONLIVINGAPARTMENTS_MEDI', 'LIVINGAPARTMENTS_AVG',\n       'LIVINGAPARTMENTS_MEDI', 'LIVINGAPARTMENTS_MODE', 'FONDKAPREMONT_MODE',\n       'FLOORSMIN_AVG', 'FLOORSMIN_MODE', 'FLOORSMIN_MEDI', 'YEARS_BUILD_AVG',\n       'YEARS_BUILD_MEDI', 'YEARS_BUILD_MODE', 'LANDAREA_MEDI', 'LANDAREA_AVG',\n       'LANDAREA_MODE', 'BASEMENTAREA_MEDI', 'BASEMENTAREA_AVG',\n       'BASEMENTAREA_MODE', 'NONLIVINGAREA_AVG', 'NONLIVINGAREA_MODE',\n       'NONLIVINGAREA_MEDI', 'ELEVATORS_MODE', 'ELEVATORS_AVG',\n       'ELEVATORS_MEDI', 'WALLSMATERIAL_MODE', 'APARTMENTS_AVG',\n       'APARTMENTS_MODE', 'APARTMENTS_MEDI', 'ENTRANCES_MODE', 'ENTRANCES_AVG',\n       'ENTRANCES_MEDI', 'HOUSETYPE_MODE', 'LIVINGAREA_MODE', 'LIVINGAREA_AVG',\n       'LIVINGAREA_MEDI', 'FLOORSMAX_MODE', 'FLOORSMAX_MEDI', 'FLOORSMAX_AVG',\n       'YEARS_BEGINEXPLUATATION_AVG', 'YEARS_BEGINEXPLUATATION_MEDI',\n       'YEARS_BEGINEXPLUATATION_MODE', 'TOTALAREA_MODE',\n       'EMERGENCYSTATE_MODE'],axis=1)\ndf_train.shape","6ce2a982":"df_int = df_train.select_dtypes('int64')\ndf_int.shape","ee2135b0":"df_flo = df_train.select_dtypes('float')\ndf_flo.columns","3a7d77aa":"df_flo['SK_ID_CURR'] = df_train['SK_ID_CURR']","c54f8b74":"df_obj = df_train.select_dtypes('object')\ndf_obj.shape","0658980e":"df_flo.isnull().sum().sort_values(ascending = False)","1bcc5262":"df_flo.columns","95046d7a":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\nimputer.fit(df_flo)\ndf_flow = imputer.transform(df_flo)\n","121dd79f":"df_flow = pd.DataFrame(df_flow,columns=['AMT_INCOME_TOTAL', 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE',\n       'REGION_POPULATION_RELATIVE', 'DAYS_REGISTRATION', 'OWN_CAR_AGE',\n       'CNT_FAM_MEMBERS', 'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3',\n       'OBS_30_CNT_SOCIAL_CIRCLE', 'DEF_30_CNT_SOCIAL_CIRCLE',\n       'OBS_60_CNT_SOCIAL_CIRCLE', 'DEF_60_CNT_SOCIAL_CIRCLE',\n       'DAYS_LAST_PHONE_CHANGE', 'AMT_REQ_CREDIT_BUREAU_HOUR',\n       'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_WEEK',\n       'AMT_REQ_CREDIT_BUREAU_MON', 'AMT_REQ_CREDIT_BUREAU_QRT',\n       'AMT_REQ_CREDIT_BUREAU_YEAR', 'SK_ID_CURR'])","a13b6b4d":"df_flow.isnull().sum().sort_values(ascending = False)","a0c95439":"df_intflow = pd.merge(df_flow,df_int,how = 'inner',on = 'SK_ID_CURR')\ndf_intflow.shape","f43bf059":"df_obj['SK_ID_CURR'] = df_train['SK_ID_CURR']","da5ccba3":"df_obj.shape","883bd7cc":"df_final = pd.merge(df_obj,df_intflow)","d9571ae7":"df_final.isnull().sum()","f8175b13":"df_final.columns","b5b96a46":"df_final = df_final.reindex(columns=['SK_ID_CURR','NAME_CONTRACT_TYPE', 'CODE_GENDER', 'FLAG_OWN_CAR', 'FLAG_OWN_REALTY',\n       'NAME_TYPE_SUITE', 'NAME_INCOME_TYPE', 'NAME_EDUCATION_TYPE',\n       'NAME_FAMILY_STATUS', 'NAME_HOUSING_TYPE', 'OCCUPATION_TYPE',\n       'WEEKDAY_APPR_PROCESS_START', 'ORGANIZATION_TYPE', \n       'AMT_INCOME_TOTAL', 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE',\n       'REGION_POPULATION_RELATIVE', 'DAYS_REGISTRATION', 'CNT_FAM_MEMBERS',\n       'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3',\n       'OBS_30_CNT_SOCIAL_CIRCLE', 'DEF_30_CNT_SOCIAL_CIRCLE',\n       'OBS_60_CNT_SOCIAL_CIRCLE', 'DEF_60_CNT_SOCIAL_CIRCLE',\n       'DAYS_LAST_PHONE_CHANGE', 'AMT_REQ_CREDIT_BUREAU_HOUR',\n       'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_WEEK',\n       'AMT_REQ_CREDIT_BUREAU_MON', 'AMT_REQ_CREDIT_BUREAU_QRT',\n       'AMT_REQ_CREDIT_BUREAU_YEAR',  'CNT_CHILDREN', 'DAYS_BIRTH',\n       'DAYS_EMPLOYED', 'DAYS_ID_PUBLISH', 'FLAG_MOBIL', 'FLAG_EMP_PHONE',\n       'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE', 'FLAG_PHONE', 'FLAG_EMAIL',\n       'REGION_RATING_CLIENT', 'REGION_RATING_CLIENT_W_CITY',\n       'HOUR_APPR_PROCESS_START', 'REG_REGION_NOT_LIVE_REGION',\n       'REG_REGION_NOT_WORK_REGION', 'LIVE_REGION_NOT_WORK_REGION',\n       'REG_CITY_NOT_LIVE_CITY', 'REG_CITY_NOT_WORK_CITY',\n       'LIVE_CITY_NOT_WORK_CITY', 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3',\n       'FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6',\n       'FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9',\n       'FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12',\n       'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15',\n       'FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18',\n       'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21','TARGET'])","6f786050":"df_final.shape","44e90e9d":"df_final['TARGET'].value_counts()","4728108a":"X = df_final.iloc[:,:-1]\ny = df_final.iloc[:,-1]","ddba4864":"X = pd.DataFrame(X,columns=['SK_ID_CURR','NAME_CONTRACT_TYPE', 'CODE_GENDER', 'FLAG_OWN_CAR', 'FLAG_OWN_REALTY',\n       'NAME_TYPE_SUITE', 'NAME_INCOME_TYPE', 'NAME_EDUCATION_TYPE',\n       'NAME_FAMILY_STATUS', 'NAME_HOUSING_TYPE', 'OCCUPATION_TYPE',\n       'WEEKDAY_APPR_PROCESS_START', 'ORGANIZATION_TYPE', \n       'AMT_INCOME_TOTAL', 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE',\n       'REGION_POPULATION_RELATIVE', 'DAYS_REGISTRATION', 'CNT_FAM_MEMBERS',\n       'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3',\n       'OBS_30_CNT_SOCIAL_CIRCLE', 'DEF_30_CNT_SOCIAL_CIRCLE',\n       'OBS_60_CNT_SOCIAL_CIRCLE', 'DEF_60_CNT_SOCIAL_CIRCLE',\n       'DAYS_LAST_PHONE_CHANGE', 'AMT_REQ_CREDIT_BUREAU_HOUR',\n       'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_WEEK',\n       'AMT_REQ_CREDIT_BUREAU_MON', 'AMT_REQ_CREDIT_BUREAU_QRT',\n       'AMT_REQ_CREDIT_BUREAU_YEAR',  'CNT_CHILDREN', 'DAYS_BIRTH',\n       'DAYS_EMPLOYED', 'DAYS_ID_PUBLISH', 'FLAG_MOBIL', 'FLAG_EMP_PHONE',\n       'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE', 'FLAG_PHONE', 'FLAG_EMAIL',\n       'REGION_RATING_CLIENT', 'REGION_RATING_CLIENT_W_CITY',\n       'HOUR_APPR_PROCESS_START', 'REG_REGION_NOT_LIVE_REGION',\n       'REG_REGION_NOT_WORK_REGION', 'LIVE_REGION_NOT_WORK_REGION',\n       'REG_CITY_NOT_LIVE_CITY', 'REG_CITY_NOT_WORK_CITY',\n       'LIVE_CITY_NOT_WORK_CITY', 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3',\n       'FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6',\n       'FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9',\n       'FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12',\n       'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15',\n       'FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18',\n       'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21'])\n","b6f07a72":"fig, ax = plt.subplots(figsize=(20,10))         \ncorr = X.corr()\nsns.heatmap(corr, cmap='YlGnBu', annot_kws={'size':30}, ax=ax)\nax.set_title(\"Correlation Matrix\", fontsize=14)\nplt.show()","c4eee1da":"X = X.drop(columns = ['CNT_CHILDREN','SK_ID_CURR'])","acee489a":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","832c7115":"for col in X:\n    if X[col].dtype == 'object':\n        # If 2 or fewer unique categories\n        if len(list(X[col].unique())) <= 2:\n            # Train on the training data\n            le.fit(X[col])\n            # Transform both training and testing data\n            X[col] = le.transform(X[col])\n            ","96f266e5":"X=pd.get_dummies(X,drop_first=True)","6257acf0":"list(X.columns)","197b4601":"X = X.drop(columns=['NAME_TYPE_SUITE_Other_A','NAME_INCOME_TYPE_Working','NAME_EDUCATION_TYPE_Secondary \/ secondary special','NAME_FAMILY_STATUS_Widow','NAME_HOUSING_TYPE_With parents','OCCUPATION_TYPE_Waiters\/barmen staff','WEEKDAY_APPR_PROCESS_START_WEDNESDAY','ORGANIZATION_TYPE_University'])","8648705b":"from sklearn.model_selection import train_test_split","d304010c":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.3, random_state = 123)","bcb7764a":"X_train.shape","4b121e53":"y_train.value_counts()","24edfc94":"y_test.value_counts()","c3ac4666":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0,solver='liblinear')\nclassifier.fit(X_train,y_train)\n","8e2079a5":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","77d67114":"print(classification_report(y_test,y_pred))","f657ac1a":"print('AUPRC = {}'.format(roc_auc_score(y_test, y_pred)))","fec0df86":"from sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(y_test, y_pred)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","bcfb8643":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)","9628f9c3":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","335c6667":"print(classification_report(y_test,y_pred))","be4a54dc":"print('AUPRC = {}'.format(roc_auc_score(y_test, y_pred)))","4d45b8c9":"from sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(y_test, y_pred)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","67a7e54e":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","bf1a5c75":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","30cd6908":"print(classification_report(y_test,y_pred))","e292411b":"print('AUPRC = {}'.format(roc_auc_score(y_test, y_pred)))","609447ad":"from sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(y_test, y_pred)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","a470bd8a":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","577d8ac4":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","e2004063":"print(classification_report(y_test,y_pred))","7bf7f917":"print('AUPRC = {}'.format(roc_auc_score(y_test, y_pred)))","622981e0":"from sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(y_test, y_pred)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","4db0b2ac":"\nfrom xgboost.sklearn import XGBClassifier\nclassifier = XGBClassifier(n_estimators=35,\n max_depth= 3,\n max_delta_step = 26,\n learning_rate = 0.15,\n gamma = 0.1,\nmin_child_weight = 3)\nclassifier.fit(X_train, y_train)","a7577d7b":"from sklearn.model_selection import RandomizedSearchCV \nimport xgboost as xgb\nparam_grid = {'n_estimators': [ 30, 35, 25],\n                    'learning_rate': [ 0.1, 0.15,0.2],\n                    'gamma':  [0.20,0.10, 0.15],\n                    'max_delta_step': [24, 26, 22],\n                    'max_depth':[4, 3, 5],\n             'min_child_weight': [1, 2, 3, 4]}       \n\nransearch = RandomizedSearchCV(classifier, n_iter = 10, param_distributions=param_grid, cv=3, n_jobs=-1, verbose=2)\nransearch = ransearch.fit(X_train,y_train)\nbest_accuracy = ransearch.best_score_\nbest_parameter = ransearch.best_params_\nprint('Accuracy: {:.2f}%'.format(best_accuracy*100))\nprint('parameter:',best_parameter)","49780942":"\nclassifier = XGBClassifier(n_estimators=35,\n max_depth= 4,\n max_delta_step = 24,\n learning_rate = 0.2,\n gamma = 0.15,\nmin_child_weight = 2)\nclassifier.fit(X_train, y_train)","3c85d705":"# Classification Report: -from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n","cb2e9b0b":"print(classification_report(y_test,y_pred))","843cf60d":"print('AUPRC = {}'.format(roc_auc_score(y_test, y_pred)))","c5e0c71f":"from sklearn.metrics import average_precision_score\naverage_precision = average_precision_score(y_test, y_pred)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","4cd9bbc4":"from sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import plot_precision_recall_curve\nimport matplotlib.pyplot as plt\n\ndisp = plot_precision_recall_curve(classifier, X_test, y_test)\ndisp.ax_.set_title('2-class Precision-Recall curve: '\n                   'AP={0:0.2f}'.format(average_precision))","8de7d7b2":"fig = plt.figure(figsize = (14, 9))\nax = fig.add_subplot(111)\n\ncolours = plt.cm.Set1(np.linspace(0, 1, 9))\n\nax = plot_importance(classifier, height = 1, color = colours, grid = False, \\\n                     show_values = False, importance_type = 'cover', ax = ax);\nfor axis in ['top','bottom','left','right']:\n            ax.spines[axis].set_linewidth(2)\n        \nax.set_xlabel('importance score', size = 16);\nax.set_ylabel('features', size = 16);\nax.set_yticklabels(ax.get_yticklabels(), size = 12);\nax.set_title('Ordering of features by importance to the model learnt', size = 20);","6346c6a1":"# Checking the Precision-Recall value:-","f5d82924":"# Logistic Regression","47b62399":"# Creating X & y :-","e92b56b3":"# Under Sampling of Data: - ","7cc1ae1c":"# Classification Report: -","301413b4":"# Checking AUC value:-","085438dd":"# Checking AUC value:-","7e014a12":"# Importing the required libraries:-","74cbbec0":"# Missing value detection & treatment :-","b02129c7":"# 4)  Random Forest :-","59aeb325":"# Feature Importance :-","bfc82453":"# Checking AUC value:-","0763587d":"# Classification Report: -","8017dd16":"# Classification Report: -","8f169903":"# Checking the Precision-Recall value:-","bfe6e067":"# Classification Report: -","a1005ebe":"# Importing the Dataset:-","98d790d0":"# Checking AUC value:-","a95aa5bd":"# 1) Naive Bayes :-","6f3b32a5":"# Checking the Precision-Recall value:-","dcb4f6b7":"# 2) Decision Tree Classification :-","2d00d9e4":"# Checking AUC value:-","2837bc54":"# 5) XGBoost:-","e27feb4e":"# Exploratory Data Analysis:-","e458b8ea":"# Classification Report: -","cfa1edfb":"# Checking the Precision-Recall value:-","304c4e8c":"# Creating the Dummy Variables:-","9a5d0390":"# Detection & Treatment of outliers :-","8d9482c6":"# Checking the Precision-Recall value:-","bbf8b6b7":"# Splitting the Dataset into Training & Testing"}}