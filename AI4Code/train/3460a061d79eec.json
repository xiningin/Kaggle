{"cell_type":{"92a6eb78":"code","f5910e47":"code","e7c70d6f":"code","805a4d77":"code","93b95c80":"code","3efefb49":"code","3e0520a8":"code","5ecc2b6c":"code","d2e38ebb":"markdown","f89f1716":"markdown","97fe390a":"markdown","3bdec40e":"markdown","793d8850":"markdown"},"source":{"92a6eb78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f5910e47":"import matplotlib.pyplot as plt\n%matplotlib inline","e7c70d6f":"file_path = \"\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv\"\n\ndf = \\\n(pd\n .read_csv(file_path, parse_dates = [['date', 'hour']])\n# .set_index('date_hour')\n)","805a4d77":"from __future__ import print_function\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nimport ipywidgets as widgets","93b95c80":"ALL = 'ALL'\ndef unique_sorted_values_plus_ALL(array):\n    unique = array.unique().tolist()\n    unique.sort()\n    unique.insert(0, ALL)\n    return unique","3efefb49":"output = widgets.Output()\nplot_output = widgets.Output()\n\ndd_state = widgets.Dropdown(options=unique_sorted_values_plus_ALL(df.state), description='State')\ndd_cases = widgets.Dropdown(options=unique_sorted_values_plus_ALL(df.cases), description='Cases')\nbounded_num = widgets.BoundedFloatText(min=0, max=10e5, value=5, step=1, description='Numbers')\n\ndef colour_ge_value(value, comparison):\n    if value >= comparison:\n        return 'color: red'\n    else:\n        return 'color: black'\n\ndef common_filtering(state, cases, num):\n    output.clear_output()\n    plot_output.clear_output()\n\n    if (state == ALL) & (cases == ALL):\n        common_filter = df\n    elif (state == ALL):\n        common_filter = df[df['cases']>=cases]\n    elif (cases == ALL):\n        common_filter = df[df['state']==\"%s\" %state]\n    else:\n        common_filter = df[(df['cases']>=cases) & (df['state']==\"%s\" %state)]\n        \n    with output:\n        display(common_filter.style.applymap(lambda x: colour_ge_value(x, num),subset=['suspects']))\n        \n    with plot_output:\n        common_filter.set_index(['date_hour']).plot(style='o')\n        \n        plt.semilogy()\n        plt.xlabel('Date')\n        plt.ylabel('Log Number of People')\n        plt.title('COVID-19 evolution over time in the state of %s' %dd_state.value)\n        \n        plt.show()\n        \ndef dd_state_eventhandler(change):\n    common_filtering(change.new, dd_cases.value, bounded_num.value)\n    \ndef dd_cases_eventhandler(change):\n    common_filtering(dd_state.value, change.new, bounded_num.value)\n    \ndef bounded_num_eventhandler(change):\n    common_filtering(dd_state.value, dd_cases.value, change.new)\n    \ndd_state.observe(dd_state_eventhandler, names='value')\ndd_cases.observe(dd_cases_eventhandler, names='value')\nbounded_num.observe(bounded_num_eventhandler, names='value')\n\n#display(input_widgets)","3e0520a8":"item_layout = widgets.Layout(margin='0 0 50px 0')\n\ninput_widgets = widgets.HBox([dd_state, dd_cases, bounded_num], layout = item_layout)\n\ntab = widgets.Tab([output, plot_output], layout = item_layout)\ntab.set_title(0, 'Dataset Exploration')\ntab.set_title(1, 'Plot Data')\n\n# display(tab)","5ecc2b6c":"dashboard = widgets.VBox([input_widgets, tab])\ndisplay(dashboard)","d2e38ebb":"Define Layout:","f89f1716":"Step-by-step of the design of the simple dashboard.\nCredits: https:\/\/towardsdatascience.com\/bring-your-jupyter-notebook-to-life-with-interactive-widgets-bc12e03f0916 ","97fe390a":"Bring it all toghether:","3bdec40e":"Define Callbacks:","793d8850":"## Plotting Data"}}