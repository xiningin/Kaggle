{"cell_type":{"52e66259":"code","ac46bd50":"code","9ed263cd":"code","349a0e7d":"code","43ce9551":"code","4a4e6656":"code","d20ef21b":"code","454734c6":"code","f368c4c4":"code","38128ba0":"code","2f69f619":"code","bc7c3549":"code","cbbc2b5d":"code","a64b2d77":"code","cd73d377":"code","64ea142c":"code","542ba297":"code","f810af2d":"code","066cb6e9":"code","1de88054":"code","84c54513":"markdown","587beb1d":"markdown","0fd53295":"markdown","3003cba5":"markdown","37113b9b":"markdown","2922c6aa":"markdown","ca0cb13c":"markdown","85636ba1":"markdown","a4ef2519":"markdown","5a84f277":"markdown","50f6bd76":"markdown","5af823a2":"markdown","d7941126":"markdown","44bf08a8":"markdown","2feb00f1":"markdown","5f273922":"markdown","275c50e2":"markdown","8cec974f":"markdown","a7afd3dc":"markdown","d0e34b5b":"markdown"},"source":{"52e66259":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf","ac46bd50":"tf.__version__","9ed263cd":"dataset = pd.read_csv('..\/input\/churn-predictions-personal\/Churn_Predictions.csv')\nX = dataset.iloc[:, 3:-1].values\ny = dataset.iloc[:, -1].values","349a0e7d":"print(X)","43ce9551":"print(y)","4a4e6656":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:, 2] = le.fit_transform(X[:, 2])","d20ef21b":"print(X)","454734c6":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","f368c4c4":"print(X)","38128ba0":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)","2f69f619":"print(X)","bc7c3549":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","cbbc2b5d":"ann = tf.keras.models.Sequential()","a64b2d77":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","cd73d377":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","64ea142c":"ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","542ba297":"ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","f810af2d":"ann.fit(X_train, y_train, batch_size = 32, epochs = 100)","066cb6e9":"y_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","1de88054":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","84c54513":"### Splitting the dataset into the Training set and Test set","587beb1d":"### Compiling the ANN","0fd53295":"One Hot Encoding the \"Geography\" column","3003cba5":"### Initializing the ANN","37113b9b":"### Adding the second hidden layer","2922c6aa":"Label Encoding the \"Gender\" column","ca0cb13c":"## Part 3 - Training the ANN","85636ba1":"### Adding the output layer","a4ef2519":"## Part 4 - Making the predictions and evaluating the model","5a84f277":"### Importing the dataset","50f6bd76":"## Part 2 - Building the ANN","5af823a2":"### Training the ANN on the Training set","d7941126":"### Importing the libraries","44bf08a8":"# Artificial Neural Network","2feb00f1":"### Encoding categorical data","5f273922":"### Feature Scaling","275c50e2":"### Predicting the Test set results","8cec974f":"### Adding the input layer and the first hidden layer","a7afd3dc":"### Making the Confusion Matrix","d0e34b5b":"## Part 1 - Data Preprocessing"}}