{"cell_type":{"ac237846":"code","652ad38c":"code","ea50ecc5":"code","3b7c7c79":"code","e1c77ba6":"code","bf2883d1":"code","51d026ec":"code","983594a4":"code","5ca1164f":"code","8fead5db":"code","e0645580":"code","3171f787":"code","dcf13cc1":"code","3979ebae":"code","342c0923":"markdown","310a039d":"markdown","fb576388":"markdown","73bc7006":"markdown","7ffafe7f":"markdown"},"source":{"ac237846":"!pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html > \/dev\/null\n!pip install rudalle==0.0.1rc7 > \/dev\/null","652ad38c":"from rudalle.pipelines import generate_images, show, super_resolution, cherry_pick_by_clip\nfrom rudalle import get_rudalle_model, get_tokenizer, get_vae, get_realesrgan, get_ruclip\nfrom rudalle.utils import seed_everything","ea50ecc5":"device = 'cuda'\ndalle = get_rudalle_model('Malevich', pretrained=True, fp16=True, device=device)","3b7c7c79":"realesrgan = get_realesrgan('x2', device=device)\ntokenizer = get_tokenizer()\nvae = get_vae(dwt=True).to(device)\nruclip, ruclip_processor = get_ruclip('ruclip-vit-base-patch32-v5')\nruclip = ruclip.to(device)","e1c77ba6":"text = '\u043a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u0442\u044f\u043d \u0438\u0437 \u0430\u043d\u0438\u043c\u0435' # eq: beautiful girl from anime\npil_images = []\nscores = []\n\nseed_everything(6955)\n\nfor top_k, top_p, images_num in [\n    (2048, 0.995, 3),\n    (1536, 0.99, 3),\n    (1024, 0.99, 3),\n    (1024, 0.98, 3),\n    (512, 0.97, 3),\n    (384, 0.96, 3),\n    (256, 0.95, 3),\n    (128, 0.95, 3), \n]:\n    _pil_images, _scores = generate_images(text, tokenizer, dalle, vae, top_k=top_k, images_num=images_num, top_p=top_p)\n    pil_images += _pil_images\n    scores += _scores","bf2883d1":"show(pil_images, 6)","51d026ec":"top_images, clip_scores = cherry_pick_by_clip(pil_images, text, ruclip, ruclip_processor, device=device, count=6)\nshow(top_images, 3)","983594a4":"sr_images = super_resolution(top_images, realesrgan)\nshow(sr_images, 3)","5ca1164f":"text = '\u0441\u0438\u0433\u0430\u0440\u0435\u0442\u0430' # eq: cigarette\npil_images = []\nscores = []\n\nseed_everything(50000)\n\nfor top_k, top_p, images_num in [\n    (2048, 0.995, 3),\n    (1536, 0.99, 3),\n    (1024, 0.99, 3),\n    (1024, 0.98, 3),\n    (512, 0.97, 3),\n    (384, 0.96, 3),\n    (256, 0.95, 3),\n    (128, 0.95, 3), \n]:\n    _pil_images, _scores = generate_images(text, tokenizer, dalle, vae, top_k=top_k, images_num=images_num, top_p=top_p)\n    pil_images += _pil_images\n    scores += _scores\nshow(pil_images, 6)","8fead5db":"top_images, clip_scores = cherry_pick_by_clip(pil_images, text, ruclip, ruclip_processor, device=device, count=6)\nshow(top_images, 3)","e0645580":"sr_images = super_resolution(top_images, realesrgan)\nshow(sr_images, 3)","3171f787":"text = '\u0441\u0438\u0433\u0430\u0440\u0435\u0442\u043d\u044b\u0439 \u043e\u043a\u0443\u0440\u043e\u043a' # eq: cigarette butt\npil_images = []\nscores = []\n\nseed_everything(6955)\n\nfor top_k, top_p, images_num in [\n    (2048, 0.995, 3),\n    (1536, 0.99, 3),\n    (1024, 0.99, 3),\n    (1024, 0.98, 3),\n    (512, 0.97, 3),\n    (384, 0.96, 3),\n    (256, 0.95, 3),\n    (128, 0.95, 3), \n]:\n    _pil_images, _scores = generate_images(text, tokenizer, dalle, vae, top_k=top_k, images_num=images_num, top_p=top_p)\n    pil_images += _pil_images\n    scores += _scores\nshow(pil_images, 6)","dcf13cc1":"top_images, clip_scores = cherry_pick_by_clip(pil_images, text, ruclip, ruclip_processor, device=device, count=6)\nshow(top_images, 3)","3979ebae":"sr_images = super_resolution(top_images, realesrgan)\nshow(sr_images, 3)","342c0923":"### Notebook author: [@shonenkov](https:\/\/www.kaggle.com\/shonenkov)","310a039d":"# ruDALL-E Malevich (XL)\n## Generate images from text\n\n<img style=\"text-align:center; display:block;\" src=\"https:\/\/huggingface.co\/sberbank-ai\/rudalle-Malevich\/resolve\/main\/dalle-malevich.jpg\" width=\"200\">\n\"Avocado painting in the style of Malevich\"\n\n* [Technical Report (Russian)](https:\/\/habr.com\/ru\/company\/sberbank\/blog\/586926\/)\n* [Demo (Russian)](https:\/\/rudalle.ru)\n\nModel was trained by [SberAI](https:\/\/github.com\/sberbank-ai) and [SberDevices](https:\/\/sberdevices.ru\/) teams.  \n* Task: `text2image generation`\n* Num Parameters: `1.3B`\n* Training Data Volume: `120 million text-image pairs`\n\n### Model Description\nThis is a 1.3 billion parameter model for Russian, recreating OpenAI's [DALL\u00b7E](https:\/\/openai.com\/blog\/dall-e\/), a model capable of generating arbitrary images from a text prompt that describes the desired result. \n\nThe generation pipeline includes ruDALL-E, ruCLIP for ranging results, and a superresolution model. \nYou can use automatic translation into Russian to create desired images with ruDALL-E.\n\n### How to Use\nThe easiest way to get familiar with the code and the models is to follow the inference notebook we provide in our [github repo](https:\/\/github.com\/sberbank-ai\/ru-dalle). ","fb576388":"### auto cherry-pick by ruCLIP:","73bc7006":"### generation by ruDALLE:","7ffafe7f":"### super resolution:"}}