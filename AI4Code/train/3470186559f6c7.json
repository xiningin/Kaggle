{"cell_type":{"ee8e4e94":"code","0649acfa":"code","22ad07ca":"code","3f0c54cd":"code","a939af11":"code","5e0fd4c3":"code","65a848e4":"code","497f6c42":"code","8e075121":"code","a61ca90d":"code","754a2b6e":"code","7d507126":"markdown","1597a2bb":"markdown","687b5008":"markdown","66d8b269":"markdown","57cc28c9":"markdown","f3aac3e5":"markdown","343ff90a":"markdown","7448cd98":"markdown","2f7c9d40":"markdown","9c8157a9":"markdown"},"source":{"ee8e4e94":"pip install rich","0649acfa":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\nimport pandas as pd\nimport seaborn as sns\nfrom plotly.colors import n_colors\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom rich import print\nfrom rich.table import Table\n\nnp.random.seed(1)","22ad07ca":"df = pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\n\nfig = go.Figure(data=[go.Table(\n     header=dict(values=df.columns.T,\n                fill_color='paleturquoise',\n                align='left'),\n    cells=dict(values=[df.iloc[:,0], df.iloc[:,1], df.iloc[:,2], df.iloc[:,3], df.iloc[:,4],df.iloc[:,5] ,df.iloc[:,6],\n                       df.iloc[:,7],df.iloc[:,8],df.iloc[:,9],df.iloc[:,10],df.iloc[:,11],df.iloc[:,12],df.iloc[:,13]],\n               fill_color='lavender',\n               align='left'),columnwidth = [400,400])                    \n])\nfig.update_layout( title={'text': \"Data Frame\"}, width=1000, height=500)\nfig.show()","3f0c54cd":"fig = go.Figure(data=[go.Table(\n    cells=dict(values=[df.columns, df.isna().sum()],\n               fill_color='lavender',\n               align='left'))\n])\nfig.update_layout( title={\n        'text': \"Missing Values\"}, width=500, height=500)\nfig.show()","a939af11":"df.corr()[['output']].multiply(100).T.applymap('{:.2f}%'.format)","5e0fd4c3":"df.drop(['chol', 'fbs'], axis=1, inplace=True)\ndf.head(2)","65a848e4":"X_train, X_test, y_train, y_test = train_test_split(df.iloc[:,:-1], df.iloc[:, -1], test_size=0.20, random_state=42)","497f6c42":"from sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\nclf = VotingClassifier(estimators=[('Logistic Regression', LogisticRegression(max_iter=1000, random_state=12)), ('Random Forest Classifier', RandomForestClassifier(max_depth=2, random_state=12)), ('GaussianNB', GaussianNB())], voting='hard')\nclf.fit(X_train, y_train)\nprint('[black]The SCORE of Classifier : [\/black][underline][red][bold]{:.1f}[\/red][\/bold]'.format(clf.score(X_test, y_test)*100))","8e075121":"table = Table(show_header=True, header_style=\"bold magenta\", show_lines=True, )\ntable.add_column(\"MODEL\", style=\"dim\", width=30)\ntable.add_column(\"SCORE\")\ntable.add_row(\n    list(clf.named_estimators_.keys())[0], '[black]{:.3}[\/black]'.format(clf.estimators_[0].score(X_test, y_test)*100)\n)\ntable.add_row(\n    list(clf.named_estimators_.keys())[1],'[black]{:.3}[\/black]'.format(clf.estimators_[1].score(X_test, y_test)*100)\n)\ntable.add_row(\n    list(clf.named_estimators_.keys())[2],'[black]{:.3}[\/black]'.format(clf.estimators_[2].score(X_test, y_test)*100)\n)\ntable.add_row(\n    '[red][bold]Voting Classifer[\/bold][\/red]','[red][bold]{:.3}[\/bold][\/red]'.format(clf.score(X_test, y_test)*100)\n)\nprint(table)","a61ca90d":"from sklearn.metrics import confusion_matrix\nplt.figure()\nax = sns.heatmap(confusion_matrix(y_test, clf.predict(X_test)),annot=True, cbar=False)\nax.set_title(\"CONFUSION MATRIX\")\nplt.show()","754a2b6e":"from yellowbrick.classifier import ClassificationReport\n\nvisualizer = ClassificationReport(clf,classes=['< diameter narrowing', '> 50% diameter narrowing'],support=True, output_dict=True)\nvisualizer.fit(X_train, y_train)\nvisualizer.score(X_test, y_test)\nvisualizer.show()\nplt.show()","7d507126":"# Data Wrangling:\n\n* age - age in years\n* sex - sex (1 = male; 0 = female)\n* cp - chest pain type (1 = typical angina; 2 = atypical angina; 3 = non-anginal pain; 4 = asymptomatic)\n* trestbps - resting blood pressure (in mm Hg on admission to the hospital)\n* chol - serum cholestoral in mg\/dl\n* fbs - fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\n* restecg - resting electrocardiographic results (0 = normal; 1 = having ST-T; 2 = hypertrophy)\n* thalach - maximum heart rate achieved\n* exang - exercise induced angina (1 = yes; 0 = no)\n* oldpeak - ST depression induced by exercise relative to rest\n* slope - the slope of the peak exercise ST segment (1 = upsloping; 2 = flat; 3 = downsloping)\n* ca - number of major vessels (0-3) colored by flourosopy\n* thal - 3 = normal; 6 = fixed defect; 7 = reversable defect\n* output- the predicted attribute - diagnosis of heart disease (angiographic disease status) (Value 0 = < diameter narrowing; Value 1 = > 50% diameter narrowing)","1597a2bb":"# MODEL","687b5008":"<img src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAXwAAACFCAMAAABv07OdAAABGlBMVEX\/\/\/8AjNv4mjYxms4AAAAAh9oAitoAiNoAhNnX7Pmn0\/E5o+Kdzu8Ajtz4mTP+njf0+\/7m9fz4liv959H4lCP\/ozn3kBb\/+\/bD4\/b+7+D+8ubp9vzM5\/fg8fsklszr6+v7z6Sv1uv95MmHxOz5okr83L0OlN75rWH++PD6u30Ai8dHqOTsljRntejYiS\/09PRdOxNra2vKysqAwesnm+D6tnP5qlr6w5H7xpT4pE70njdtRhf82LRmstkuHQihaSRCKg0+Pj4UFBSzs7MeEwV8fHySXR+lpaVbW1t7ThpKSkrPhi4bGxuIVx1JLg4yMjIoGQdMptS5dijMfx\/Ss5HS0tI6OjmxcSb\/rDyIiIiCYD0XFxetra2FhYUBXApLAAAOFklEQVR4nO2dCVfiShbHBZOwJzEkyC6bIM3StuACauvrZy80ra3OOE7P9Hz\/rzG1JKwJqUAlgF3\/c54myGnq\/epy69atW5WdHSYmJiYmJiYmJiYmJiYmJiYmJiYmpq1VJpSMdlqNbrda7TZa5XAym5PX3aY\/QnK23KgKQT4g6ArwfDAQqzY6SdYBrioUbcSCvCD4ZgU6gQ\/6GmHG3yXlol3BDPxED\/DVcmbdzXyLkjsxfgF4gz9fDa+7pW9PySoBeoQ\/GMmtu7FvTNmYjp6gBwJdRp+m5K6AnYqA\/rOlzxw\/RZV5xL4azWVy4aotfb617gZTUzp+WKjXziqVSq9WLxzG971vAjJ8QXcnua4t\/WDW+zbSV+rqtOJXE6qiiFCKAq4rp4dpb1uxhwJMPqnfZm09P9\/xtoEuKFU4E1VA3T8tUVH9pyUv7T8URE5nNINq2MEXuts929o\/PFXUWe4T\/Gsl79qC4UdG952AHfzYNg+5R4V+QrEgr\/NP1FJetQbD747uW7aWL4S8aht17Rf6lkY\/lqJceNQeDN9nhO+yfbwT2NoR97BCgB4av1o78qRBCP54FC3beR3QU1sKP1UjQ4+M3x\/3okkYvi9QRsNolLdlv63wC+JiX78O+jp8Hx8pJ8ONAEGKYSvhp2sJYrPHrkfxgL4B3yfwQbL82jbCP\/Q7MXtM3+9+0DOCT6wthF8g9\/ZjKWeuz7f+BPh11Tl6IPXc7Ya9ffj7p8uxB\/Tdnuzmgry5LP3\/lsHfry3L3q\/03G5cMYwUnVHZMsmzXfD3e0uzB6ZfWFezrbLLWwV\/v+Y4zJmQWFlDjh8p8hbgLznWGkocrqndCy1\/L6kru9E5zqvV2PvFGuUGydlk2F5Ry\/QmzGrK1dE4Heh2NjbNmVomvp+SQnOmJYdRQSCBrKMdwHovNv6zwPs6m7m+sprDR6I55BarwUV1aUSahQ\/xdzfS+AuJVdn7FWp+R24RVkc5hA\/XITewniftX9XpwAwPrTX1BkHCeDn4PmED63lWjHSwaM1yO3TYm8LfwHqe1MoOH8EvUGlMkQp7n+AzhT+uPtkUUTF8v1Kn0ZaMfT3USvAnKiA2Qum5upzl4J\/RaAwdp2MN38dvVgF5gYrh+8UKhbZkTHDRhb9Zpr9foWL4frFPoTFlSobvE2I5c\/iblfSJrx7jY\/j+1XNrGft6HGL4GQv43lVxynIGatG8+pxKrAPgi6s3N0zL8HFdZ86snnai7s1N7RXLT\/l3QPnd66jVNsn9HqnXEfWpmMX7RXF1y7etfyWH3wD\/XMi0tkrwYJqbvc7n87u6wGX+2pR\/itjr9MQz\/NtvWtgj+ldusqmbWE58FPx7IdMvEl9cuaF2\/x\/XY\/KjDngy+VjSWEc8KyXiZ8D6eyWxd2pCn0K0k7SvAiSGD4fVpOmyu+tOv7g7ix7zf5qb4JlxnCCq+hUF\/lRFUVRTuFpfOS2ZfF3E1ddxqcU62OtYTBoEl1MMRVP0yPqvp1NLFi5fMlzJYSleUyrxUrxSKSRSZ+rFRb9QKR3V57tMOV252fRcfgAZmfkSo8uRviV7iH93Ks5Nm7CXpPYQ01curtQ6cDfnYqFUKSVSlYuS0isp9bjJpFhduVycoPCbUDh\/FjJfFJjY4OKCsgvYQ\/zRiffG51y+1Lw55rghhn+eOvWr\/rgq+ms90AmHRxUI\/7RkMlCoV6u2O7PyCorBPoLwtsyHECG2t2pLF+hpMfzdfHn83rnxtjngoL5g01frV2ngZoDbT0D4V1eHCSv4q9fL5iglNPkWYm8a5fv0zINbitqwB\/SvR2+edd7SF0D+ssnda8jn1ysJJe1PK2oPuZ2emKpVSqYDLoXikazjmkBT9D7dtqzrqdyDn7FDP2X7s4u3TWj27T53L+lup16IJwrxeuoCwj9T6ylg+bX02ZzPp7CMSDK\/FRYqwAeqLd2pWOdHefeyO2Fbw4f0jYh\/JtjBhq81Dbej1K8uQGxZvwLfkJpSg4wrAHyhPgefwlqKXaQJ2AqxajdiqUarPJpILshNB91bUHkiYA+Ev3qzKc0+NPyh1Oae9WBTAYE9+mmkF0QY6Kjzkaa6+haJxfAFvtoKkx7mlVm0EOwe\/D0Swx+5\/aPpTI30Ctg\/QPtvztFdLLG3emZnIfxAlfwQqUy0umiu7B58mzhzTB85vplVLAkEmXCsffjokD2VEv0F8EEEQ1Z3IMuhcMvmZJ6ga8mdRROsedNPT\/kP4G7gcAt+3UgO4ScoFKxZb\/AUeGNuImejrYa11+9WA6YnsG0Y\/N089PrThQvaPWD\/2NQGoANGHTLdDaNbaeoXlQVc62gnoEdnuU5VGJ8qaKrF3DF819wOOXy4kjxTNXKLYp02d2mg1ZrDYVMb905\/+DyEt1obTYG15nMTvfUf\/zQ+\/+UA\/jw4eXHedMs4P4DSZDtyh+CcIwK5Vz5CDH\/3aWcWPvI6N9ol19bZPz+AF+4GhrE3B3ewdwD6Aeof6eaOu2uiAPUr\/OyXz3\/9\/ATgH3z+xHF\/O2661QwXrceCUCJCBb2bkyxy+PncDHwU5HPNZ+4LtvU+8EI396Ncg\/QK0F8OL7l7wJx7lfzSEA0RIhwqoL2\/\/xe4\/bazc\/ITvv7zvdOmZyzyATxyOnKXUrZf70s35AB+cRY+9DqPbe62j9kfc3dtTYPGjwLPAfpaSNpHlPzp67ER15Sat9wH+NF\/w9sT\/IvD\/eFIFllNAa\/7tagVNriX1XQAPzoTaiKvc3ysj7bSJTbvYwxfguxh0kFDyI81\/f1gOgz67Df86A\/g9sf739z3zxy6ctx282o1vDCSpLzQ4oqS5PCvpydZ0jO22FfdyYBLQLgJDP0Y9MEN9P7wG4Dhw1gUeZ1L6Jc4CPoAXnw7Ad+CE3j1wXnbzVNh2OtY7b1yLj5q146llSOGv7srT6UXsMs3sjrNR44bSH7tBuUb8AwAjQXaI\/L08C13uoPhPsNP\/orgQ+jI8r86b7t5Ah4FJ\/QM3828mkyY24GmL08l1rBJDzB7ZOk3kga\/Dc+S4d5Rr8CrW\/Se4SP38RKOviiy+YD6AQy4738s5fKtAn1UYkZxedfNhaxrYtN\/l5lOKd\/qAynqCXjz2gQ+5RhG8rp7N3oFfz2k5t1t899gaPiEvA5C\/n1HH3i\/LdH0nNkcSYjByJCe1wm4uX5O7vTf5aYWU6Cj4e50+MilAHc\/aEviFHHcRWiNt\/8Axmb41fgFP\/cFjbLQ3r\/DK+dh\/ujY2Fn4GZrLu76Am2U7MrHbeReaWkZsQ96PGD4O4R\/A\/FUceySYZsajMhp5QTgE\/NKDAfq34fwPRrGOY89jloQXYrL1FMC53F0+J1hGnIA\/USY7AR+G7no8idgjw0chaB\/94SNmP9BEOAJ8gqkEHN3Dbvhq9MLLT6dND5lavkxtedfneslUxgn8idIRBJ\/rQy8zxBMpHPFLehjEvYIZ1j30RdytJDUv4diM\/dGLwR5e4VjnBA4CPxy33cS1I\/jOj3yxkIvTW6wyIf13e1NFU8jng3BS00CI\/4pubsEMVwOYj5HbuR22B9zrJbT15+EDmnFJ\/0Eh\/cn\/uJ\/fjBDnO4b\/8gP2gEOZxDt04bteK0iyhI7gQ+83HnHhlBbGNF9uucchyi5Dt38MnPpl\/9WI6O+NP6DhV736rN\/9PPilw3+PMzvfsDdyqnnTpwpfqLq+F5QwxQDj\/MlDF9oGYRhdYq+PMfelpu6HBhp2NDDLg4rUvuK7Dwc7Bnw93ue+LxHog1htLtqkCt+LHVlksf4ThJ8ej7gStu\/HV2085kJnoxnRDyLeR+MyfDFRB3b+X+iF4GwWdMOnvyBwlFzgfjlP7SDN5c9owg96sQ2XKNzU19BrE3Pc9s3gy7OG57ii9nwzuH8d4lsJ\/OmmjXvly+C1D15MoOLMg18ffiPOL19PdN4vv\/7395LoTTLHFOF7tAWaZBldr9mcLBiUoKbvjFsRXIqj1+Ex1gV3mp6bqTygBl\/wbPs5gdvXC6fSS22IU0TXTjeaWbGiA1\/w9BFO9vTzesRrUmtvJ1F19fT2cmyiAsEGvmB9Fk8ggH+BC6HaKnp52o4t\/Sf9jSnF6UZcRSy4e6TaXrkbMxAGu4vgC63xUYOW51EVkyGvTxvJmm8NmvE6O45P21HUugdPTMmEjPPRIDcr+B7t61xCmflNcZMaG8O5Se2lpcNR6p49L2IsS\/gbtZl\/WsknK\/z5\/GRm9bCXIPE9oqIqF2tAv42WD5W93p3nDzflztSuxOt9+DSmReAV1V9f1wGORD5\/UuHNOFdHLnae8lPavY6a7Eraj1\/U+ip6HtYMdshd9dfO1\/FwMl2Oo52gF\/vMiSRnQsVo+RqoDExiQY37Uerqol6rKGpiJFXpn52eF1LePBvFSm\/\/FHFDR+lUKm4olT5an8GP9OfA30Ax+GsUGfzJB6ps8UPKNk0k8IVAJFqMRnBaztXNtn+YCOALAs7S6k\/OZfCpiQB+wCjBxEWHzO1Qkz388TNYc+jIJDbgUpN93c5EFWCEwacq+4q1wLgmBMEPbEZ+4U3I9pTf8ZYHXPHJLJ+eLM7OmYA\/ol2Eb93uJ0FvmLK2O2yNs\/FzqKDZxb0\/f6Ds98MJ3XBG3otiBxV0b+\/PHyiCs92FoK+qP8JmHHgy0VCOYB+u4ZuEGBtu6WqvESTbIbGpjwXabkVj9gcACAIf29AHYm25cp3qwgNdAHkhEmVBpkvKRCMCGFTnewC8xPO+SJk5HFeVSXYaXXja3ejknQDsjmqjnGQ274XkTCgZjrYa3Wq12m20ygvLAphcksyYMzExMTExMTExMTExMTExMTExbaj+D+3bjfCvEL8JAAAAAElFTkSuQmCC\" width=\"1000\">","66d8b269":"Taking __Threshold as 10%__ dropping not so correlated features.\n<br>\n- __CHOL__\n<br>\n- __FBS__","57cc28c9":"<font color=red>Precision<\/font>\n> Precision can be seen as a measure of a classifier\u2019s exactness. For each class, it is defined as the ratio of true positives to the sum of true and false positives. Said another way, \u201cfor all instances classified positive, what percent was correct?\u201d\n\n<font color=red>Recall<\/font>\n> Recall is a measure of the classifier\u2019s completeness; the ability of a classifier to correctly find all positive instances. For each class, it is defined as the ratio of true positives to the sum of true positives and false negatives. Said another way, \u201cfor all instances that were actually positive, what percent was classified correctly?\u201d\n\n<font color=red>F1 score<\/font>\n> The F1 score is a weighted harmonic mean of precision and recall such that the best score is 1.0 and the worst is 0.0. Generally speaking, F1 scores are lower than accuracy measures as they embed precision and recall into their computation. As a rule of thumb, the weighted average of F1 should be used to compare classifier models, not global accuracy.\n\n<font color=red>Support<\/font>\n> Support is the number of actual occurrences of the class in the specified dataset. Imbalanced support in the training data may indicate structural weaknesses in the reported scores of the classifier and could indicate the need for stratified sampling or rebalancing. Support doesn\u2019t change between models but instead diagnoses the evaluation process.","f3aac3e5":"> The idea behind the __VotingClassifier__ is to combine conceptually different machine learning classifiers and use a majority vote or the average predicted probabilities (soft vote) to predict the class labels. Such a classifier can be useful for a set of equally well performing model in order to balance out their individual weaknesses.","343ff90a":"# Train Test Split","7448cd98":"# Reading DataFrame","2f7c9d40":"# Imports","9c8157a9":"# Feature Selection"}}