{"cell_type":{"b09aa17a":"code","05377340":"code","c7d523bc":"code","1889f224":"code","7042687b":"code","bf90b344":"code","0960da70":"code","893d9996":"markdown","afa673ab":"markdown","74577218":"markdown","9fff82f0":"markdown","d1bffc5a":"markdown"},"source":{"b09aa17a":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\npd.set_option('max_columns', 100)\n\ntrain = pd.read_csv('..\/input\/nfl-big-data-bowl-2020\/train.csv', low_memory=False)\ntrain2021 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/plays.csv')","05377340":"def create_football_field(linenumbers=True,\n                          endzones=True,\n                          highlight_line=False,\n                          highlight_line_number=50,\n                          highlighted_name='Line of Scrimmage',\n                          fifty_is_los=False,\n                          figsize=(12, 6.33)):\n    \"\"\"\n    Function that plots the football field for viewing plays.\n    Allows for showing or hiding endzones.\n    \"\"\"\n    rect = patches.Rectangle((0, 0), 120, 53.3, linewidth=0.1,\n                             edgecolor='r', facecolor='darkgreen', zorder=0)\n\n    fig, ax = plt.subplots(1, figsize=figsize)\n    ax.add_patch(rect)\n\n    plt.plot([10, 10, 10, 20, 20, 30, 30, 40, 40, 50, 50, 60, 60, 70, 70, 80,\n              80, 90, 90, 100, 100, 110, 110, 120, 0, 0, 120, 120],\n             [0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3,\n              53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 53.3, 0, 0, 53.3],\n             color='white')\n    if fifty_is_los:\n        plt.plot([60, 60], [0, 53.3], color='gold')\n        plt.text(62, 50, '<- Player Yardline at Snap', color='gold')\n    # Endzones\n    if endzones:\n        ez1 = patches.Rectangle((0, 0), 10, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ez2 = patches.Rectangle((110, 0), 120, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ax.add_patch(ez1)\n        ax.add_patch(ez2)\n    plt.xlim(0, 120)\n    plt.ylim(-5, 58.3)\n    plt.axis('off')\n    if linenumbers:\n        for x in range(20, 110, 10):\n            numb = x\n            if x > 50:\n                numb = 120 - x\n            plt.text(x, 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white')\n            plt.text(x - 0.95, 53.3 - 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white', rotation=180)\n    if endzones:\n        hash_range = range(11, 110)\n    else:\n        hash_range = range(1, 120)\n\n    for x in hash_range:\n        ax.plot([x, x], [0.4, 0.7], color='white')\n        ax.plot([x, x], [53.0, 52.5], color='white')\n        ax.plot([x, x], [22.91, 23.57], color='white')\n        ax.plot([x, x], [29.73, 30.39], color='white')\n\n    if highlight_line:\n        hl = highlight_line_number + 10\n        plt.plot([hl, hl], [0, 53.3], color='yellow')\n        plt.text(hl + 2, 50, '<- {}'.format(highlighted_name),\n                 color='yellow')\n    return fig, ax\n\ncreate_football_field()\nplt.show()","c7d523bc":"fig, ax = create_football_field()\ntrain.query(\"PlayId == 20170907000118 and Team == 'away'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='orange', s=30, legend='Away')\ntrain.query(\"PlayId == 20170907000118 and Team == 'home'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='blue', s=30, legend='Home')\nplt.title('Play # 20170907000118')\nplt.legend()\nplt.show()","1889f224":"playid = 20181230154157\ntrain.query(\"PlayId == @playid\").head()","7042687b":"yl = train.query(\"PlayId == @playid\")['YardLine'].tolist()[0]\nfig, ax = create_football_field(highlight_line=True,\n                                highlight_line_number=yl+54)\ntrain.query(\"PlayId == @playid and Team == 'away'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='orange', s=30, legend='Away')\ntrain.query(\"PlayId == @playid and Team == 'home'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='blue', s=30, legend='Home')\nplt.title(f'Play # {playid}')\nplt.legend()\nplt.show()","bf90b344":"train2021 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week11.csv')\n\nexample_play_home = train2021.query('gameId == 2018111900 and playId == 5577 and team == \"home\"')\nexample_play_away = train2021.query('gameId == 2018111900 and playId == 5577 and team == \"away\"')\n\nfig, ax = create_football_field()\nexample_play_home.query('event == \"ball_snap\"').plot(x='x', y='y', kind='scatter', ax=ax, color='orange', s=30, legend='Away')\nexample_play_away.query('event == \"ball_snap\"').plot(x='x', y='y', kind='scatter', ax=ax, color='blue', s=30, legend='Home')\nplt.title('Game #2018111900 Play #5577 at Ball Snap')\nplt.legend()\nplt.show()","0960da70":"fig, ax = create_football_field()\nexample_play_home.plot(x='x', y='y', kind='scatter', ax=ax, color='orange', s=30, legend='Away')\nexample_play_away.plot(x='x', y='y', kind='scatter', ax=ax, color='blue', s=30, legend='Home')\nplt.title('Game #2018111900 Play #5577 at Ball Snap')\nplt.legend()\nplt.show()","893d9996":"# NFL Big Data Bowl\n## Plotting the field\n\nUsing some code that I developed for last year's NFL challenege, this notebook shows how to plot player positions during a play on the football field.\n\nUsing matplotlib we can call the `create_football_field` function to create a figure with the football field drawn out. You can then overlay any information from the training data to help visualize how players positions look on the field.\n\nThe design is loosely based off of the 1991 video game [Techo Super Bowl](https:\/\/en.wikipedia.org\/wiki\/Tecmo_Super_Bowl). A game which I spent many hours playing in my next door neighbor's basement growing up (I wasn't allowed to own a video game console so we had to play at his house).\n![](https:\/\/upload.wikimedia.org\/wikipedia\/en\/d\/d7\/Tecmosuperbowl.png)\n","afa673ab":"# On 2021 Datset\n- Note in the 2021 dataset some things have changed.\n    - The `X` and `Y` columns are now lowercase `x` and `y`\n    - Data is provided for the entire play, not just one time within a play.\n    - PlayId is not unique across games, only within the game. So for unique ids you need to use a combination of gameId and playId","74577218":"## Function to Create The Football Field","9fff82f0":"# Adding Players For a Play","d1bffc5a":"# Highlight the line of scrimmage"}}