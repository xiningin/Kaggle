{"cell_type":{"d25d637a":"code","e4510e6f":"code","a47c4e17":"code","eab6cfbd":"code","d672fad2":"code","5b5d0d46":"code","715b081c":"code","c959e82c":"code","71a3bd12":"code","f10c54ca":"code","3c9a1408":"code","346321d7":"code","249eb143":"markdown","fedbe5a0":"markdown","4c7219b3":"markdown","0a4695ff":"markdown","1b5cf036":"markdown","7a97aaec":"markdown"},"source":{"d25d637a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4510e6f":"df=pd.read_csv('\/kaggle\/input\/us-accidents\/US_Accidents_Dec20_Updated.csv')\ndf.isnull().sum()","a47c4e17":"df.columns","eab6cfbd":"State_grp_df=df.groupby(['State'])\nState_grp_df.ID.count().to_list()","d672fad2":"states=[]\nfor x in State_grp_df.groups:\n    states.append(x)","5b5d0d46":"plt.figure(figsize=(25,15))\nplt.title('State Wise Accident Plot',fontsize=30)\nplt.xlabel('States',fontsize=20)\nplt.ylabel('Number of Accidents',fontsize=20)\nplt.bar(states,State_grp_df.ID.count().to_list(),)\nplt.yticks(np.arange(0,750000,15000))\nplt.grid()\nplt.show()","715b081c":"dff=pd.DataFrame(State_grp_df.ID.count())\nx=dff.nlargest(10,'ID').sort_values(by='ID')\nplt.figure(figsize=(15,7))\nplt.title('Top 10 States Having Most number of Accidents',fontsize=25)\nplt.ylabel('States',fontsize=15)\nplt.xlabel('Number of Accidents',fontsize=15)\nplt.barh(x.index.to_list(),x.ID.to_list(),color='red')\nplt.grid(color='#95a5a6', linestyle='--', linewidth=2, axis='x', alpha=0.7)\nplt.show()","c959e82c":"State_Sunrise_Sunset_df=State_grp_df.get_group('AZ').groupby(['Sunrise_Sunset'])\nState_Sunrise_Sunset_df.describe()","71a3bd12":"def get_dn_analysis(state):\n    print('Accidents in '+state+' in Day\/Night : ')\n    State_Civil_twilight_df=State_grp_df.get_group(state).groupby(['Civil_Twilight'])\n    State_Nautical_twilight_df=State_grp_df.get_group(state).groupby(['Nautical_Twilight'])\n    State_Sunrise_Sunset_df=State_grp_df.get_group(state).groupby(['Sunrise_Sunset'])\n    explode=(0.08,0)\n    plt.figure(figsize=(15,15))\n    plt.subplot(1, 3, 1)\n    plt.title('Acc. to Civil Twilight',fontsize=20)\n    plt.pie(State_Civil_twilight_df.ID.count().to_list(),labels=['Accidents in Day','Accidents in Night'],startangle=180,shadow = True,explode = explode)\n    plt.subplot(1, 3, 2)\n    plt.title('Acc. to Sunset\/Sunrise',fontsize=20)\n    plt.pie(State_Sunrise_Sunset_df.ID.count().to_list(),labels=['Accidents in Day','Accidents in Night'],startangle=180,shadow = True,explode = explode)\n    plt.subplot(1, 3, 3)\n    plt.title('Acc. to Nautical Twilight',fontsize=20)\n    plt.pie(State_Nautical_twilight_df.ID.count().to_list(),labels=['Accidents in Day','Accidents in Night'],startangle=180,shadow = True,explode = explode)\n    plt.show()","f10c54ca":"get_dn_analysis('AZ')\nget_dn_analysis('CA')\nget_dn_analysis('FL')","3c9a1408":"def causes_plot(state):\n    dff=State_grp_df.get_group(state)\n    values=[]\n    xticks=['Amenity','Roundabout','Bump','Crossing','Give_Way','Junction','No_Exit','Railway','Station','Stop','Traffic_Calming','Traffic_Signal','Turning_Loop']\n    values.append(dff[dff['Amenity']==True].Amenity.count())\n    values.append(dff[dff['Roundabout']==True].Roundabout.count())\n    values.append(dff[dff['Bump']==True].Bump.count())\n    values.append(dff[dff['Crossing']==True].Crossing.count())\n    values.append(dff[dff['Give_Way']==True].Give_Way.count())\n    values.append(dff[dff['Junction']==True].Junction.count())\n    values.append(dff[dff['No_Exit']==True].No_Exit.count())\n    values.append(dff[dff['Railway']==True].Railway.count())\n    values.append(dff[dff['Station']==True].Station.count())\n    values.append(dff[dff['Stop']==True].Stop.count())\n    values.append(dff[dff['Traffic_Calming']==True].Traffic_Calming.count())\n    values.append(dff[dff['Traffic_Signal']==True].Traffic_Signal.count())\n    values.append(dff[dff['Turning_Loop']==True].Turning_Loop.count())\n    s=pd.Series(values,index=xticks).sort_values()\n    plt.figure(figsize=(15,5))\n    plt.title(label='Accidents in '+state+' Happens Beacuse of',fontsize=20)\n    plt.ylabel('Causes',fontsize=15)\n    plt.xlabel('Deaths',fontsize=15)\n    plt.barh(s.index,s,color='Yellow')\n    plt.show()","346321d7":"causes_plot('CA')\ncauses_plot('FL')\ncauses_plot('AL')","249eb143":"# State-Wise Accident Cause Analysis ","fedbe5a0":"# State-Wise Day\/Night Analysis","4c7219b3":"# Top 10 States Having Most Accidents","0a4695ff":"# The Overall States Analysis","1b5cf036":"# CONTENTS:\n* Data Preprocessing\n* The Overall States Analysis\n* Top 10 States Having Most Accidents\n* State-Wise Day\/Night Analysis\n* State-Wise Accident Cause Analysis ","7a97aaec":"# Data Preprocessing"}}