{"cell_type":{"c3b3d0d3":"code","b826fd26":"code","51e89f5f":"code","088afc42":"code","a68438af":"code","eab66286":"code","67f492d0":"code","4d159216":"code","d7168b09":"code","0e6fd825":"code","24876b2d":"code","74652b26":"code","f0b2897a":"code","a793dedf":"code","6f1cd4f0":"code","bf8ece91":"code","93c59bcb":"code","639b714c":"code","c96eb262":"code","5d3b4b45":"code","a05fbd07":"code","ad6f6e58":"code","78149f07":"code","91c68fe8":"code","9e59ae0b":"code","e76bc836":"code","c9f600a2":"code","2cc5e2d5":"code","ec048e90":"code","26406238":"code","5649e0cc":"code","c269110d":"code","489fb348":"code","52298283":"code","4d83b0c1":"code","5fe6156c":"code","3b2cbd8a":"code","8648f3ae":"code","eea784a9":"code","91486fc0":"code","b38d700a":"code","59913c7d":"code","b05df954":"code","bd089fc5":"code","67b2b56a":"code","7b4a8dcd":"code","2056aae7":"code","7bf93004":"code","ce83d2c2":"code","8c0f2486":"code","95692889":"code","22dfc935":"code","9d771091":"code","cb88447a":"code","240628de":"code","aa1269d7":"code","8ff43683":"code","a4136283":"code","896a331b":"code","5f671a52":"markdown","90086c69":"markdown"},"source":{"c3b3d0d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b826fd26":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","51e89f5f":"india = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","088afc42":"india.head()","a68438af":"india.count()","eab66286":"india.Age.value_counts()","67f492d0":"india.Pregnancies.value_counts()","4d159216":"HighPreg = (india.Pregnancies>=5)","d7168b09":"india[HighPreg].head()","0e6fd825":"india[HighPreg].count()","24876b2d":"india[HighPreg].Outcome.value_counts()","74652b26":"LowPreg = (india.Pregnancies<5)\nAge30 = (india.Age<30)\nAge60 = (india.Age>=30) & (india.Age<60)\nAge85 = (india.Age>=60)\nDiab = india.Outcome == 1\nNoDiab = ~ Diab","f0b2897a":"Ayana = Age30 & HighPreg\nAponi = Age60 & LowPreg","a793dedf":"p_Ayana = india[Ayana & Diab].Age.count()\/india[Ayana].Age.count()\nprint(p_Ayana)","6f1cd4f0":"p_Aponi = india[Aponi & Diab].Age.count()\/india[Aponi].Age.count()\nprint(p_Aponi)","bf8ece91":"sns.violinplot(x=\"Outcome\", y=\"Age\", data=india)","93c59bcb":"fig = sns.FacetGrid(india, hue=\"Outcome\", aspect=4, palette=\"Set1\")\nfig.map(sns.kdeplot, \"Age\", shade=True)\nfig.add_legend()","639b714c":"india.columns","c96eb262":"india.count()","5d3b4b45":"plt.hist(india.BloodPressure, bins=80)","a05fbd07":"def replace_0(india,col) :\n    india1 = india.copy()\n    n = india.shape[0]\n    m = india[col].mean()\n    s = india[col].std()\n    for i in range(n) :\n        if india.loc[i,col]==0 :\n            india1.loc[i,col] = np.random.normal(m,s)\n    return india1\n","ad6f6e58":"india = replace_0(india,'BloodPressure')\nindia = replace_0(india,\"SkinThickness\")\nindia = replace_0(india,\"Insulin\")\nindia = replace_0(india,'BMI')","78149f07":"plt.hist(india.BloodPressure, bins=80)","91c68fe8":"sns.distplot(india.Pregnancies, color='blue')","9e59ae0b":"sns.kdeplot(india.Pregnancies, color='blue')","e76bc836":"india[['Age','Pregnancies']].describe()","c9f600a2":"sns.kdeplot(india.Age, color='blue')\nsns.kdeplot(india.Pregnancies, color='red')","2cc5e2d5":"india.info()","ec048e90":"X = india.drop(['Outcome'], axis=1)\ny = india.Outcome","26406238":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","5649e0cc":"print(X_train.shape)\nprint(X_test.shape)","c269110d":"from sklearn.linear_model import LogisticRegression","489fb348":"lr = LogisticRegression()\nlr.fit(X_train,y_train)","52298283":"y_lr = lr.predict(X_test)","4d83b0c1":"from sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","5fe6156c":"print(confusion_matrix(y_test,y_lr))","3b2cbd8a":"print(accuracy_score(y_test,y_lr))","8648f3ae":"print(classification_report(y_test, y_lr))","eea784a9":"probas = lr.predict_proba(X_test)","91486fc0":"print(probas)","b38d700a":"dfprobas = pd.DataFrame(probas,columns=['proba_0','proba_1'])\ndfprobas['y'] = np.array(y_test)","59913c7d":"dfprobas","b05df954":"plt.figure(figsize=(10,10))\nsns.distplot(1-dfprobas.proba_0[dfprobas.y==0], bins=50)\nsns.distplot(dfprobas.proba_1[dfprobas.y==1], bins=50)","bd089fc5":"false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test,probas[:, 1])\nroc_auc = auc(false_positive_rate, true_positive_rate)\nprint (roc_auc)","67b2b56a":"plt.figure(figsize=(12,12))\nplt.title('Receiver Operating Characteristic')\nplt.plot(false_positive_rate, true_positive_rate, 'b', label='AUC = %0.2f'% roc_auc)\nplt.legend(loc='lower right')\nplt.plot([0,1],[0,1],'r--')        \nplt.plot([0,0,1],[0,1,1],'g:')     \nplt.xlim([-0.1,1.2])\nplt.ylim([-0.1,1.2])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')","7b4a8dcd":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","2056aae7":"print(classification_report(y_test, y_rf))","7bf93004":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","ce83d2c2":"rf1 = ensemble.RandomForestClassifier(n_estimators=10, min_samples_leaf=10, max_features=3)\nrf1.fit(X_train, y_train)\ny_rf1 = rf.predict(X_test)\nprint(classification_report(y_test, y_rf1))","8c0f2486":"from sklearn.model_selection import validation_curve\nparams = np.arange(1, 300,step=30)\ntrain_score, val_score = validation_curve(rf, X, y, 'n_estimators', params, cv=7)\nplt.figure(figsize=(12,12))\nplt.plot(params, np.median(train_score, 1), color='blue', label='training score')\nplt.plot(params, np.median(val_score, 1), color='red', label='validation score')\nplt.legend(loc='best')\nplt.ylim(0, 1)\nplt.xlabel('n_estimators')\nplt.ylabel('score');","95692889":"from sklearn import model_selection","22dfc935":"param_grid = {\n              'n_estimators': [10, 100, 500],\n              'min_samples_leaf': [1, 20, 50]\n             }\nestimator = ensemble.RandomForestClassifier()\nrf_gs = model_selection.GridSearchCV(estimator, param_grid)","9d771091":"rf_gs.fit(X_train, y_train)","cb88447a":"print(rf_gs.best_params_)","240628de":"rf2 = rf_gs.best_estimator_","aa1269d7":"y_rf2 = rf2.predict(X_test)","8ff43683":"print(classification_report(y_test, y_rf2))","a4136283":"importances = rf2.feature_importances_\nindices = np.argsort(importances)","896a331b":"plt.figure(figsize=(8,5))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), X_train.columns[indices])\nplt.title('Importance des caracteristiques')","5f671a52":"Ayana est une femme de 26 ans, et \u00e0 eu 6 grossesses,\n\nAponi est une femme de 46 ans, et \u00e0 eu 1 grossesses,","90086c69":"Permet de remplacer les NaN (les 0) par la moyenne"}}