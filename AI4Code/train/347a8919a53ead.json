{"cell_type":{"5e84ca3c":"code","de8f1e5a":"code","f290da2e":"code","49cc9f8b":"code","0f3c1555":"code","57a4da96":"code","5a81965a":"code","720071d2":"code","6f94da24":"code","b58eed6d":"code","503d97a7":"code","afae4b8d":"markdown","7ecd5668":"markdown","40f026d2":"markdown","4f2379c4":"markdown","8b8f5877":"markdown","36ba2de5":"markdown","c8875299":"markdown","119f68d8":"markdown","bfd6d623":"markdown","ed139fa2":"markdown","4275e364":"markdown","62f2914d":"markdown","6285a2a9":"markdown","7efe0409":"markdown","9e071c5e":"markdown","1ba823c6":"markdown"},"source":{"5e84ca3c":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nfrom statsmodels.tsa.stattools import adfuller, kpss, acf, grangercausalitytests\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf,month_plot,quarter_plot\nfrom scipy import signal\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline \nsns.set_style(\"whitegrid\")\nplt.rc('xtick', labelsize=15) \nplt.rc('ytick', labelsize=15) ","de8f1e5a":"d = pd.read_csv('..\/input\/m5-data-for-tsa\/data_for_tsa.csv')\nd.head()","f290da2e":"fig, ax = plt.subplots(figsize=(15, 6))\nax.set_title('Demand over Time', fontsize = 20, loc='center', fontdict=dict(weight='bold'))\nax.set_xlabel('Time', fontsize = 16, fontdict=dict(weight='bold'))\nax.set_ylabel('Demand', fontsize = 16, fontdict=dict(weight='bold'))\nplt.tick_params(axis='y', which='major', labelsize=16);plt.tick_params(axis='x', which='major', labelsize=16)\nd.plot(x='date',y='demand',figsize=(15,5),ax=ax);","49cc9f8b":"variable = 'demand'\nfig, ax = plt.subplots(figsize=(15, 6))\n\npalette = sns.color_palette(\"colorblind\", 6)\nsns.lineplot(d['month'], d[variable], hue=d['year'], palette=palette)\nax.set_title('Seasonal plot of demand', fontsize = 20, loc='center', fontdict=dict(weight='bold'))\nax.set_xlabel('Month', fontsize = 16, fontdict=dict(weight='bold'));ax.set_ylabel('Demand', fontsize = 16, fontdict=dict(weight='bold'))\n\nfig, ax = plt.subplots(nrows=1, ncols=2, figsize=(15, 6))\n\nsns.boxplot(d['year'], d[variable], ax=ax[0])\nax[0].set_title('Year-wise Box Plot\\n(The Trend)', fontsize = 20, loc='center', fontdict=dict(weight='bold'))\nax[0].set_xlabel('Year', fontsize = 16, fontdict=dict(weight='bold'));ax[0].set_ylabel('Demand', fontsize = 16, fontdict=dict(weight='bold'))\n\nsns.boxplot(d['month'], d[variable], ax=ax[1])\nax[1].set_title('Month-wise Box Plot\\n(The Seasonality)', fontsize = 20, loc='center', fontdict=dict(weight='bold'))\nax[1].set_xlabel('Month', fontsize = 16, fontdict=dict(weight='bold'));ax[1].set_ylabel('Demand', fontsize = 16, fontdict=dict(weight='bold'));","0f3c1555":"from pylab import rcParams\nrcParams['figure.figsize'] = 15, 12\nrcParams['axes.labelsize'] = 20\nrcParams['ytick.labelsize'] = 16\nrcParams['xtick.labelsize'] = 16\n\ny = d[['date','demand']].set_index('date')\ny = y.asfreq('d')\ndecomposition = sm.tsa.seasonal_decompose(y, model='additive')\ndecomp = decomposition.plot()\ndecomp.suptitle('Demand Decomposition', fontsize=22);","57a4da96":"from statsmodels.tsa.stattools import adfuller\n# check for stationarity\ndef adf_test(series,title=''):\n    \"\"\"\n    Pass in a time series and an optional title, returns an ADF report\n    \"\"\"\n    print('Augmented Dickey-Fuller Test: {}'.format(title))\n    result = adfuller(series.dropna(),autolag='AIC') # .dropna() handles differenced data\n    \n    labels = ['ADF test statistic','p-value','# lags used','# observations']\n    out = pd.Series(result[0:4],index=labels)\n\n    for key,val in result[4].items():\n        out['critical value ({})'.format(key)]=val\n        \n    print(out.to_string())          # .to_string() removes the line \"dtype: float64\"\n    \n    if result[1] <= 0.05:\n        print(\"Strong evidence against the null hypothesis\")\n        print(\"Reject the null hypothesis\")\n        print(\"Data has no unit root and is stationary\")\n    else:\n        print(\"Weak evidence against the null hypothesis\")\n        print(\"Fail to reject the null hypothesis\")\n        print(\"Data has a unit root and is non-stationary\")","5a81965a":"adf_test(d[['date','demand']]['demand'],title='Demand')","720071d2":"from statsmodels.tsa.statespace.tools import diff\n\nfig, ax = plt.subplots(nrows=2, ncols=2,figsize=(15, 11))\n\nd['demand_Diff1'] = diff(d['demand'],k_diff=1)\nd['demand_Diff2'] = diff(d['demand'],k_diff=2)\nd['demand_Diff3'] = diff(d['demand'],k_diff=3)\n\nd['demand'].plot(title=\"Initial Data\",ax=ax[0][0]).autoscale(axis='x',tight=True);\nd['demand_Diff1'].plot(title=\"First Difference Data\",ax=ax[0][1]).autoscale(axis='x',tight=True);\nd['demand_Diff2'].plot(title=\"Second Difference Data\",ax=ax[1][0]).autoscale(axis='x',tight=True);\nd['demand_Diff3'].plot(title=\"Third Difference Data\",ax=ax[1][1]).autoscale(axis='x',tight=True);","6f94da24":"adf_test(d[['date','demand_Diff1']]['demand_Diff1'],title='demand_Diff1')","b58eed6d":"from pandas.plotting import lag_plot\nlag_plot(d['demand']);","503d97a7":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(15, 6))\nautocorr = acf(d['demand'], nlags=30, fft=False) # just the numbers\nplot_acf(d['demand'].tolist(), lags=30, ax=ax[0]); # just the plot\nplot_pacf(d['demand'].tolist(), lags=30, ax=ax[1]); # just the plot","afae4b8d":"## Lag Scatter Plot","7ecd5668":"## Decomposition\nTime series data can exhibit a variety of patterns, and it is often helpful to split a time series into several components, each representing an underlying pattern category. When we decompose a time series into components, we usually combine the trend and cycle into a single trend-cycle component (sometimes called the trend for simplicity). Thus we think of a time series comprising three components: a trend-cycle component, a seasonal component, and a remainder component (containing anything else in the time series).","40f026d2":"As year pass by, the demand is decreasing. There is some seasonality of the product with months 2, 8 and 12 being the local maximums.","4f2379c4":"## Import libraries and data","8b8f5877":"A plot to observe the relationship between each observation and its lag. There is a positive correlation, but it is not very strong as the diagonial line is not very tight.","36ba2de5":"I prepared the data for just one product of the M5 competition, the 'FOODS_3_586_TX_2_validation'","c8875299":"In the ADF test, the null hypothesis is the time series possesses a unit root and is non-stationary. So because the P-Value is <0.05 we reject the null hypothesis.\n\nThe series is not stationary. In order to make a time series stationary we can difference the series once or more times (subtracting the next value by the current value)","119f68d8":"## Seasonal Plot and Box Plots\nA seasonal plot is similar to a time plot except that the data are plotted against the individual \u201cseasons\u201d in which the data were observed.","bfd6d623":"This product is being sold every day in the timespan. It is a very popular product.","ed139fa2":"One difference was enough to make the series stationary.","4275e364":"## Time Plot\nFor time series data, the obvious graph to start with is a time plot. That is, the observations are plotted against the time of observation, with consecutive observations joined by straight lines.\nIn these plots we can see:\n- Strange values, like outliers and values which need to be explained because they differ from the seasonality or trend.\n- Periods of missing observations.\n- Fluctuations of the data. For example in salinity, there is a fluctuation which increases in 2008.\n- The trend, seasonality and cyclic behavior. For example, the temperature had strong seasonality and no trend or cyclic behavior.","62f2914d":"There is correlation between a value and the value 7 days earlier.","6285a2a9":"In the seasonal plot we can instantly see:\n- More clearly the seasonal pattern if it exists.\n- Identify the years in which the pattern changes.\n- Identify large jumps or drops.\n\nIn the trend and seasonality plots we can see:\n- More clearly the trend and the seasonality.\n- Years or months with outliers.\n- Compare years or months easier.","7efe0409":"## Autocorrelation","9e071c5e":"Thank you for reading my kernel!\n\nWant to learn more about Time Series Analysis?\nCheck my towardsdatascience posts:\n- [Time Series Analysis with Theory, Plots, and Code Part 1](https:\/\/towardsdatascience.com\/time-series-analysis-with-theory-plots-and-code-part-1-dd3ea417d8c4)\n- [Time Series Analysis with Theory, Plots, and Code Part 2](https:\/\/towardsdatascience.com\/time-series-analysis-with-theory-plots-and-code-part-2-c72b447da634)","1ba823c6":"## Stationarity\nA stationary time series is one whose properties do not depend on the time at which the series is observed. Thus, time series with trends, or with seasonality, are not stationary\u200a-\u200athe trend and seasonality will affect the value of the time series at different times. On the other hand, a white noise series is stationary\u200a-\u200ait does not matter when you observe it, it should look much the same at any point in time."}}