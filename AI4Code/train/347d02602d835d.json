{"cell_type":{"eeabff85":"code","f676ed4d":"code","07564d9a":"code","afd8943a":"code","38d81e7c":"code","ca2cae1f":"code","50190706":"code","2fea0e86":"code","8a5cd5ac":"code","90c312dd":"code","15d54fd6":"code","d99eba0d":"code","3652ee15":"code","a482a172":"code","2046f9ae":"code","0e19bff6":"code","52881165":"code","2593c7b7":"code","59604633":"code","7c27fee1":"code","d799ba27":"code","6d014a74":"code","b5285523":"code","8667a5ba":"code","5e0465df":"code","1b7dde71":"code","a74ca049":"code","2beb04b9":"code","d40ba6cc":"code","4357877b":"code","99b73260":"code","952ff600":"code","f488f286":"code","9ed081dc":"code","33590323":"markdown","6ef58199":"markdown","2db84115":"markdown","2c6ff372":"markdown","f51f4954":"markdown","add10913":"markdown","c415fa60":"markdown","e912304f":"markdown","a7bff039":"markdown","f0e5d481":"markdown","2b927204":"markdown","576bacf3":"markdown","446f99a8":"markdown","f097da3f":"markdown","d3ad7225":"markdown","23a49fc4":"markdown","35fd6219":"markdown","d4382022":"markdown","98a1c394":"markdown","0836ca38":"markdown","eeb31c1d":"markdown","4e1e4277":"markdown","12c353a9":"markdown","44aaa5c9":"markdown","3451dd05":"markdown","5946f356":"markdown","6b3130ea":"markdown","c48a89f7":"markdown","ca41fe1f":"markdown","cb4c55a5":"markdown","7d4ea10f":"markdown","752c6d2f":"markdown","00dda378":"markdown","bf10907f":"markdown","5240e35d":"markdown","186d5c8c":"markdown","b7fbc624":"markdown","24c1f373":"markdown","fa66860f":"markdown","d3e20c1e":"markdown","ba279f25":"markdown","24afea53":"markdown","37288575":"markdown"},"source":{"eeabff85":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#core imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n","f676ed4d":"vehicles=pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","07564d9a":"#use the 'head' method to show the first five rows of the table as well as their names. \nvehicles.head() ","afd8943a":"vehicles.info()","38d81e7c":"vehicles.isnull().sum()","ca2cae1f":"vehicles.describe()","50190706":"sns.barplot(x='Owner',y='Selling_Price',data=vehicles,palette='spring')","2fea0e86":"sns.barplot(x='Transmission',y='Selling_Price',data=vehicles,palette='spring')","8a5cd5ac":"sns.barplot(x='Fuel_Type',y='Selling_Price',data=vehicles,palette='spring')","90c312dd":"sns.barplot(x='Seller_Type',y='Selling_Price',data=vehicles,palette='spring')","15d54fd6":"plt.figure(figsize=(10,10))\nsns.lmplot(x='Kms_Driven',y='Selling_Price',data=vehicles)","d99eba0d":"plt.figure(figsize=(10,10))\nsns.lmplot(x='Present_Price',y='Selling_Price',data=vehicles)","3652ee15":"#creating a new column 'Vehicle_Age' and storing the age of the vehicles to establish a direct relationship between the age and selling price\nvehicles['Vehicle_Age']=2020- vehicles['Year']\n\n#check out the newly added column\nvehicles.head(10)","a482a172":"plt.figure(figsize=(10,10))\nsns.regplot(x='Vehicle_Age',y='Selling_Price',data=vehicles)","2046f9ae":"#using Pandas' built in function 'get_dummies()' to swiftly map the categorical values to integers like (0\/1\/2\/3....)\nvehicles=pd.get_dummies(vehicles,columns=['Fuel_Type','Transmission','Seller_Type'],drop_first=True)\n\n#dropping the Year column since it becomes redundant and irrelevant after Vehicle_Age column\nvehicles.drop(columns=['Year'],inplace=True)\n\n#check out the dataset with new changes\nvehicles.head()","0e19bff6":"sns.pairplot(vehicles)","52881165":"correlations = vehicles.corr()\n\nindx=correlations.index\nplt.figure(figsize=(26,22))\nsns.heatmap(vehicles[indx].corr(),annot=True,cmap=\"YlGnBu\")\n","2593c7b7":"vehicles.Selling_Price.hist()","59604633":"from scipy.stats.mstats import normaltest\nnormaltest(vehicles.Selling_Price.values)","7c27fee1":"from scipy.stats import boxcox\nbc_result=boxcox(vehicles.Selling_Price)\nboxcox_selling_price = bc_result[0]\nlam = bc_result[1]","d799ba27":"vehicles.Selling_Price.hist()","6d014a74":"vehicles['Selling_Price']=boxcox_selling_price\nvehicles.Selling_Price.hist()","b5285523":"normaltest(vehicles.Selling_Price.values)","8667a5ba":"Y=vehicles[['Selling_Price']]\nY.head()","5e0465df":"X=vehicles.drop(['Selling_Price','Car_Name'],axis=1)\nX.head()","1b7dde71":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3, random_state=42)","a74ca049":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\n\ns=StandardScaler()\n\nX_train_S = s.fit_transform(X_train)\n\nlinearRegression = LinearRegression().fit(X_train_S, Y_train)\n\nX_test_S=s.transform(X_test)\n","2beb04b9":"from sklearn.metrics import r2_score\ny_pred=linearRegression.predict(X_test_S)","d40ba6cc":"from sklearn.metrics import mean_squared_error\n\n\ndef rmse(ytrue, ypredicted):\n    return np.sqrt(mean_squared_error(ytrue, ypredicted))","4357877b":"rmse(Y_test,y_pred)","99b73260":"from sklearn.preprocessing import PolynomialFeatures\ndegree = 4\npf = PolynomialFeatures(degree)\nX_poly=pf.fit_transform(X)\n\n\n\nX_train,X_test,Y_train,Y_test = train_test_split(X_poly,Y,test_size=0.3,random_state=42)\n\n\n\ns=StandardScaler()\n\nX_train_S = s.fit_transform(X_train)\n\nlr=LinearRegression()\n\nlr.fit(X_train_S,Y_train)\n\nX_test_S=s.transform(X_test)\n\n\ny_pred=lr.predict(X_test_S)\n\n","952ff600":"rmse(Y_test,y_pred)","f488f286":"from sklearn.linear_model import RidgeCV\n\nalphas = [0.005, 0.05, 0.1, 0.3, 1, 3, 5, 10, 15, 30, 80]\n\nridgeCV = RidgeCV(alphas=alphas, \n                  cv=4).fit(X_train_S, Y_train)\n\nridgeCV_rmse = rmse(Y_test, ridgeCV.predict(X_test_S))\n\nprint(ridgeCV.alpha_, ridgeCV_rmse)","9ed081dc":"from sklearn.linear_model import LassoCV\n\nalphas2 = np.array([1e-5, 5e-5, 0.0001, 0.0005])\n\nlassoCV = LassoCV(alphas=alphas2,\n                  max_iter=5e4,\n                  cv=3).fit(X_train_S, Y_train)\n\nlassoCV_rmse = rmse(Y_test, lassoCV.predict(X_test_S))\n\nprint(lassoCV.alpha_, lassoCV_rmse)  # Lasso is slower","33590323":"**Rmse of Linear regression with polynomial features = 12290935863 JEEZ!**","6ef58199":"# Conclusions\n1. Present price of a car directly influences Selling Price prediction. Both are highly correlated and here directly   proportional to each other.\n2. Resale value of Automatic vehicle is more than that of a Manual vehicle.\n3. Car age is effecting negatively as the Selling Price decreases for an older car.\n4. Resale value of cars with Fuel type Diesel is higher.\n\n**Lasso Regression (lamba=0.0005) performs better than Ridge Regression (lambda=1.0) which inturn performs better than a plain ol Simple linear Regression model**\n**Adding Too many polynomial features to this model was a mistake which was corrected by reguralization**\n","2db84115":"### Adding Polynomial Features","2c6ff372":"**Diesel Engine Vehicles are found to have the highest selling price amongst Petrol and CNG engine vehicles**","f51f4954":"## Understanding and Visualizing Correlations amongst the features","add10913":"**We get a significantly better p - value using boxcox and a better distributed target variable**","c415fa60":"**Whoops ! I guess we added too many polynomial features and made the model too complex . Let's try regularisation and try to find a bias-variance trade off**","e912304f":"### Fitting a simple Linear regression model","a7bff039":"## Seperating the independant and dependant features","f0e5d481":"**Dealers can sell vehicles at a higher selling price than a general individual. No surprises at all !**","2b927204":"## Exploratory Data Analysis(EDA)\nLet's create some simple plots to check out the data!","576bacf3":"**Above is a concise summary of our dataframe printing columns' data-type,index data-type, shape of the dataset (301,9) and number of non-null values !**","446f99a8":"**This model is working quite fine ! with a root mean square error of just 0.38!**","f097da3f":"## Fetching the Data\n","d3ad7225":"**The selling price is found to be higher for vehicles with less kms covered under the belt!**","23a49fc4":"### Train test Split The data ","35fd6219":"**Whoa Lasso really outdid it with a rmse of just 0.209**","d4382022":"# Vehicle-Price-Predictor On CarDekho\n\n## Introduction\n**The objective of this kernel is to use an example of vehicles and help reach a good r2 score using basic regression model upon various Data.viz techniques.**\n\n**Hence,for instance, we get data from the car website CarDekho.com, filled with information on a wide variety of cars, including their selling price and present price. We realize that we can use this data to make sure we get a good deal on a new car. In particular, we can figure out exactly how much one should pay for a specific type of car. \nTherefore, it is a prediction problem.**\n\n\n\n\n## About the dataset\n**This dataset contains information about used cars listed on www.cardekho.com\nThis data can be used for a lot of purposes such as price prediction to exemplify the use of linear regression in Machine Learning.\nThe columns in the given dataset is as follows:**\n* Car_Name - This column should be filled with the name of the car.\n* Year -This column should be filled with the year in which the car was bought.\n* Selling_Price - This column should be filled with the price the owner wants to sell the car at.\n* Present_Price - This is the current ex-showroom price of the car.\n* Kms_Driven - This is the distance completed by the car in km.\n* Fuel_Type - Fuel type of the car.\n* Seller_Type - Defines whether the seller is a dealer or an individual.\n* Transmission - Defines whether the car is manual or automatic.\n* Owner - Defines the number of owners the car has previously had.","98a1c394":"**We have a beautiful analysis of our numerical columns which gives us the count,mean,std and other such values to have a clear idea of the values in our dataset. Helps in scaling!**","0836ca38":"* The pair plot technique allows us to visualize distributions of individual numerical features, as well as correlations\/relationships between numerical features. \n* Selling price seems to be considerably correlated with the Present Price feature.","eeb31c1d":"## Trying regularization now !","4e1e4277":"## 3. Vehicle Age","12c353a9":"## 2. Transmission Type\nLet's examine the selling price for manual and automatic vehicles! ","44aaa5c9":"## Feature Engineering\nWe shall convert categorical features to numeric type!","3451dd05":"**It seems the selling price decreases overall for older\/ageing vehicles!**","5946f356":"## Checking Distribution of target variable","6b3130ea":"## Check out the Data - Initial Exploration Dtrategy\n**We will run some exploratory analysis on our cardekho dataset now that it is loaded in the vehicles variable.We would check for the shape of the dataset, any missing or null values and will try to find out the correlation amongst the dataset features.\nWe will also try to determine visually how all the features are related to the selling price.**","c48a89f7":"## 3. Fuel Type\nLet's examine the selling price based on different types of engine fuel!","ca41fe1f":"## Correlation HeatMap","cb4c55a5":"**Ridge regression really helped us bring the rmse back to normal** ","7d4ea10f":"**p-value extremely low. Our y variable we've been dealing with this whole time was not normally distributed!**","752c6d2f":"**Visualizing the relationship between Target Variable[Selling price] against Kms Driven,Present_Price and Vehicle age :**\n## 1. Kms Driven","00dda378":"* Fuel attribute is now divided into two new attributes where '01' denotes Petrol, '10' denotes Diesel and '00' denotes CNG.\n* Transmission attribute is mapped to Transmission_Manual where '1' denotes Manual and '0' Automatic.\n* Seller_Type attribute is mapped to Seller_Type_Individual where '1' denotes Seller_Type_Dealer  and '0' Seller_Type_Individual.\n","bf10907f":"**Selling Price tends to increase gradually with an increase in the Present Price of the vehicle.**","5240e35d":"**Looking at the above 5 rows of data we need to develop an understanding of every column to efficiently continue exploring the dataset further.\nWe need to have a clear understanding of every feature defined in the data-set and what it is trying to convey!**","186d5c8c":"## 4. Seller Type\nLet's get an idea of the selling price for a vehicle sold by a Dealer vs Individual!","b7fbc624":"**It seems that the vehicles belonging to owner 0 have the highest selling price**","24c1f373":"## Fitting and comparing 3 different regression models \n\n**1. Linear Regression**\n**2. RIdge Regression**\n**3. Lasso regression**","fa66860f":"## 2. Present Price","d3e20c1e":"**Looking at the result of the above query it seems clear we have no missing\/null values in our dataset!**","ba279f25":"# Suggestions\n**My Suggestions to you to further increase the accuracy of the prediction is to find more features for the same cars from any cars data like their horsepower, Max-Rpm , Torque , Turning Radius , How many seater car it is , Colour of the car etc . Adding these features and then creating polynomial features and using regularization might increase the accuracy of prediction even more**","24afea53":"**We can see tha automatic vehicles are found to have a large resale value in the market compared to manual transmission.**","37288575":"**Visualizing the categorical data :**\n## 1. Owner Type\nLet's examine the selling price based on the type of owner"}}