{"cell_type":{"f07ffdbf":"code","bfe40482":"code","f5ed5516":"code","543422a6":"code","95733642":"code","e75cb545":"code","29d277bf":"code","c684fc64":"code","87966d55":"code","21535ca6":"code","3efccdfb":"code","9cf051bc":"code","a580cf39":"code","8daf3398":"code","aa04facf":"code","67ea8770":"code","6ca8faaf":"code","61226286":"code","2b640cda":"code","7b41e7db":"code","ff3984a9":"code","4be81fe0":"code","aeb1665d":"code","a429185a":"code","16b31b6f":"code","f53b0e91":"code","0d3b3537":"code","13fb9dd6":"code","fff13986":"code","d041a6e9":"markdown","2d856209":"markdown","42426fdc":"markdown","2e1f3f14":"markdown","46b5861c":"markdown","39ffe5ff":"markdown","eef73d82":"markdown","7607866e":"markdown","d80ffd91":"markdown"},"source":{"f07ffdbf":"\nimport numpy as np\nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","bfe40482":"df = pd.read_csv(\"\/kaggle\/input\/tipping\/tips.csv\")","f5ed5516":"df = pd.concat([df, pd.get_dummies(df[\"sex\"],prefix=\"sex\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"day\"],prefix=\"day\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"time\"],prefix=\"time\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"smoker\"],prefix=\"smoker\")], axis=1)\ndf.head()","543422a6":"columns_to_scale = ['tip', 'size', 'total_bill']","95733642":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaled_columns = pd.DataFrame(scaler.fit_transform(df[columns_to_scale]),columns=columns_to_scale)\nscaled_columns.describe()","e75cb545":"df.drop([\"total_bill\", \"tip\", \"size\", \"smoker\", \"sex\",\"day\", \"time\"], axis = 1, inplace = True)\ndf = pd.concat([df, scaled_columns], axis = 1)","29d277bf":"df.head()","c684fc64":"df.drop([\"sex_Female\",\"time_Dinner\", \"smoker_No\"], axis=1, inplace=True)","87966d55":"Y = df.tip\nX = df.loc[:,df.columns!=\"tip\"]","21535ca6":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.1)","3efccdfb":"from sklearn.svm import SVR\nsvregressor = SVR()\nsvregressor.fit(X_train, y_train)\npredsvr = svregressor.predict(X_test)","9cf051bc":"from sklearn.metrics import r2_score\nprint(r2_score(y_test, predsvr))","a580cf39":"from sklearn.metrics import mean_squared_error\nprint(mean_squared_error(y_test, predsvr))","8daf3398":"from sklearn.metrics import mean_absolute_error\nprint(mean_absolute_error(y_test, predsvr))","aa04facf":"from sklearn.model_selection import cross_val_score\ncross_val_score(svregressor, X, Y, cv=10).mean()","67ea8770":"import sklearn\nfrom sklearn import metrics\nsklearn.metrics.SCORERS.keys()","6ca8faaf":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import r2_score\nparam_grid = [ {\"C\":[0.0001, 0.01, 0.1, 1, 10], \"kernel\":[\"poly\", \"linear\", \"rbf\"], \"gamma\":[0.0001, 0.01, 0.1, 1, 10]}]\ngrid_search = GridSearchCV(svregressor, param_grid, cv=5)\ngrid_search.fit(X, Y)\ngrid_search.best_estimator_","61226286":"grid_search.best_score_","2b640cda":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform\ndistributions = dict(C = uniform(loc = 0, scale = 4), kernel=[\"poly\",\"rbf\",\"linear\"])\nrandom = RandomizedSearchCV(svregressor, distributions, random_state=0)\nsearch = random.fit(X, Y)\nsearch.best_params_","7b41e7db":"df.head()","ff3984a9":"Y = df.sex_Male\nX = df.loc[:,df.columns!=\"sex_Male\"]","4be81fe0":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.1, stratify = Y)","aeb1665d":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train, y_train)\npredsvc = svc.predict(X_test)","a429185a":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, predsvc))","16b31b6f":"from sklearn.model_selection import cross_val_score\ncross_val_score(svc, X, Y, cv=10).mean()","f53b0e91":"from sklearn.model_selection import StratifiedKFold\nskf = StratifiedKFold(n_splits=10)\nscores = cross_val_score(svc, X, Y, cv=skf)\nprint(\"skorlar:\\n{}\".format(scores))\nprint(\"skorlar\u0131n ortalamas\u0131:\\n{}\".format(scores.mean()))","0d3b3537":"from sklearn.model_selection import GridSearchCV\nparam_grid = [ {\"C\":[0.0001, 0.01, 0.1, 1, 10], \"kernel\":[\"poly\", \"linear\", \"rbf\"], \"gamma\":[0.0001, 0.01, 0.1, 1, 10]}]\ngrid_search_c = GridSearchCV(svc, param_grid, cv = 5, scoring = \"accuracy\")\ngrid_search_c.fit(X, Y)\ngrid_search_c.best_estimator_","13fb9dd6":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform\ndistributions = dict(C = uniform(loc = 0, scale = 4), kernel=[\"poly\",\"rbf\",\"linear\"])\nrandom_c = RandomizedSearchCV(svc, distributions, random_state=0)\nsearch_c = random_c.fit(X, Y)\nsearch_c.best_params_","fff13986":"search_c.best_score_","d041a6e9":"# Do\u011frulama ","2d856209":"# Regresyon i\u00e7in \u00d6ni\u015fleme","42426fdc":"# **Model E\u011fitme**","2e1f3f14":"# # Random Search Cross Validation\nBurada 0'la d\u00f6rt aras\u0131 bir uniform distribution i\u00e7inde C de\u011ferlerini ar\u0131yoruz.\nuniform[loc, loc+scale]","46b5861c":"Grid Search Cross Validation","39ffe5ff":"## De\u011ferlendirme","eef73d82":"# S\u0131n\u0131fland\u0131rma","7607866e":"# Tuning","d80ffd91":"Stratified K Fold"}}