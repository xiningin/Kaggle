{"cell_type":{"8a12be8a":"code","450642f1":"code","4c74b885":"code","a8e91d0c":"code","84a91132":"code","c52b46f1":"code","51837525":"code","b4bba3c2":"code","b7cd93af":"code","d17a7cfd":"code","c795eaff":"code","3bd5ba5e":"code","04484637":"code","cdeff14d":"code","4c0bfa06":"code","b4524e61":"code","f2e228fe":"code","cd5c4d07":"code","4d35937c":"code","4560c464":"code","374b4d32":"code","68d9f6a3":"code","722a2868":"code","4adeb581":"markdown","3f6c5a56":"markdown"},"source":{"8a12be8a":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.model_selection import train_test_split\n\n\n","450642f1":"data=pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\n","4c74b885":"data","a8e91d0c":"data.describe(include=\"all\")","84a91132":"data.info()","c52b46f1":"data.isnull().sum()","51837525":"data.nunique()","b4bba3c2":"print(\"children : \",data['children'].unique())\nprint(\"sex : \",data['sex'].unique())\nprint(\"smoker : \",data['smoker'].unique())\nprint(\"region : \",data['region'].unique())\n","b7cd93af":"data['sex'].replace({'female':0,'male':1},inplace=True)\ndata['smoker'].replace({'no':0,'yes':1},inplace=True)\ndata['region'].replace({'southwest': 0,'southeast':1, 'northwest':2, 'northeast':3},inplace=True)","d17a7cfd":"data","c795eaff":"X=data.drop('charges',axis =1)\ny=data['charges']","3bd5ba5e":"from sklearn.model_selection import train_test_split","04484637":"X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7,random_state=56)","cdeff14d":"X_train","4c0bfa06":"\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor,AdaBoostRegressor","b4524e61":"from sklearn.linear_model import LinearRegression,Ridge,Lasso,ElasticNet,RidgeCV,LassoCV,ElasticNetCV\n\nmodel_1=SVR()\nmodel_1.fit(X_train,y_train)\nmodel_1.score(X_test,y_test)*100","f2e228fe":"def MLmodel(model,X_train,y_train,X_test,y_test):\n    model_1=model()\n    model_1.fit(X_train,y_train)\n    print(model_1,'train score is :',model_1.score(X_train,y_train)*100)\n    print(model_1,'test score is  :',model_1.score(X_test,y_test)*100)\n    ","cd5c4d07":"MLmodel(LinearRegression,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(Ridge,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(Lasso,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(ElasticNet,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(RidgeCV,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(LassoCV,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(SVR,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(DecisionTreeRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(ElasticNetCV,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(KNeighborsRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(RandomForestRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')","4d35937c":"MLmodel(LinearRegression,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(Ridge,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(Lasso,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(SVR,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(DecisionTreeRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(KNeighborsRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(RandomForestRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\n\nMLmodel(GradientBoostingRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')\nMLmodel(AdaBoostRegressor,X_train,y_train,X_test,y_test)\nprint('---------------------------------------------------------------------')","4560c464":"model=MLmodel(LinearRegression,X_train,y_train,X_test,y_test)","374b4d32":"from sklearn.linear_model import LinearRegression,Ridge,Lasso,ElasticNet,RidgeCV,LassoCV,ElasticNetCV\n\nmodel_1=LinearRegression()\nmodel_1.fit(X_train,y_train)\nmodel_1.score(X_test,y_test)*100","68d9f6a3":"y_pred=model_1.predict(X_test)","722a2868":"from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\nprint(\"MSE :\", mean_squared_error(y_test,y_pred))\nprint(\"MAE :\", mean_absolute_error(y_test,y_pred))\nprint(\"r2:\", r2_score(y_test,y_pred)*100)","4adeb581":"### Medical  Cost Prediction","3f6c5a56":"### Preprocesssing Step"}}