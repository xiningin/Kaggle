{"cell_type":{"3f5b7b93":"code","f5256088":"code","9af83532":"code","bbbd3435":"code","cbc4e020":"code","de15bf43":"code","633cf9ba":"code","1ed32d50":"code","41d811ae":"code","0ee93012":"code","6f4184a7":"code","02755d01":"code","e5447095":"code","e31f04d6":"code","5060e00f":"code","ffc6b161":"code","4711d622":"markdown","a4f3c02f":"markdown","6a6f6cee":"markdown"},"source":{"3f5b7b93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5256088":"df= pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndf.head()","9af83532":"df.shape","bbbd3435":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cbc4e020":"sns.heatmap(df.isnull(), yticklabels=False, cbar=False,cmap = 'viridis')","de15bf43":"df.dropna(subset=[\"total_vaccinations\", \"people_vaccinated\"], inplace=True)\ndf.head()","633cf9ba":"sns.heatmap(df.isnull(), yticklabels=False, cbar=False,cmap = 'viridis')","1ed32d50":"vic_df = df[['country','iso_code', 'vaccines']]\nvic_df.head()","41d811ae":"countrygroupdf = pd.DataFrame(vic_df.groupby('country').max())\ncountrygroupdf","0ee93012":"total_vaccinations = pd.DataFrame(df.groupby('country').sum())\ntotal_vaccinations.sort_values('total_vaccinations', ascending = False).head()","6f4184a7":"total_vacc_sorted = total_vaccinations[107:].sort_values(by=\"total_vaccinations\", ascending = False)\ntotal_vacc_sorted","02755d01":"top_countries = sns.barplot(y = total_vacc_sorted.index, x= total_vacc_sorted['people_vaccinated'])\n#top_countries.set_xticklabels(top_countries.get_xticklabels(), \n                          #rotation=90, \n                          #horizontalalignment='right')\ntop_countries","e5447095":"people_vacc_df = df[['country', 'total_vaccinations_per_hundred']]\npeople_vacc_df.head()","e31f04d6":"people_vacc_grouped = people_vacc_df.groupby(\"country\").mean()\npeople_vacc_grouped.head()","5060e00f":"pvg = pd.DataFrame(people_vacc_grouped.sort_values(by=\"total_vaccinations_per_hundred\", ascending=False))\npvg.head()\n","ffc6b161":"sns.barplot(y = pvg.index[:25], x=people_vacc_grouped['total_vaccinations_per_hundred'][:25])","4711d622":"Task 2 - Which Country Vaccinated most people","a4f3c02f":" Task 1 Vaccine used in countries","6a6f6cee":"Task3 - Highest % of vaccinations"}}