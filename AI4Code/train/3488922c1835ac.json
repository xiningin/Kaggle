{"cell_type":{"6ac569f1":"code","c914748c":"code","e7c26f65":"code","813922fc":"code","6a625932":"code","ec1bfc57":"code","47accc40":"code","aa44d63d":"code","987f32a5":"code","3754015c":"code","ec6f85b3":"code","c3bf2e5b":"markdown"},"source":{"6ac569f1":"# Objectives of this Notebook is to Analyse India Covid 19 Data,\n#  Present notebook is Analysed India position in Corona Virus Epedimic.\n#  How Datewise cases increases in India.\n#  Discover which states are affected more which are less.\n#  How Total Samples versus Positive cases behaves in India.\n#  Statewise total sampling position in India\n#  What is a position of Testing labs in India.\n#  What is a position of Hospitals in India and How prepare we are.\n\n# 1.0 Call libraries\n\n# 1.1 For data manipulations\nimport numpy as np\nimport pandas as pd\n# 1.2 For plotting\nimport matplotlib.pyplot as p\n#import matplotlib\n#import matplotlib as mpl     # For creating colormaps\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# 1.3 For data processing\nfrom sklearn.preprocessing import StandardScaler\n# 1.4 OS related\nimport os\n\n# 1.5 Go to folder containing data file\nos.chdir(\"..\/input\")","c914748c":"# 1.6 Read file Covid 19 India\n\ndf_agegroup = pd.read_csv(\"AgeGroupDetails.csv\")\ndf_coviddata = pd.read_csv(\"covid_19_india.csv\")\ndf_Hospitalbeds =pd.read_csv(\"HospitalBedsIndia.csv\")\ndf_Testingdetails = pd.read_csv(\"ICMRTestingDetails.csv\")\ndf_Testinglabs = pd.read_csv(\"ICMRTestingLabs.csv\")\ndf_Individualdetails = pd.read_csv(\"IndividualDetails.csv\")\ndf_Population_master= pd.read_csv(\"population_india_census2011.csv\")\ndf_statewise_testing = pd.read_csv(\"StatewiseTestingDetails.csv\")\n\n#1.7 Cleaning of Covid Data Death field i.e. removal of # character and change to intger datatype\ndf_coviddata['Deaths'] = df_coviddata['Deaths'].str.strip('#')\ndf_coviddata['Deaths'] = df_coviddata['Deaths'].astype(int)","e7c26f65":"#1.8 How the Date Wise Positive cases behave\ngrp_datewise = df_statewise_testing.groupby(['Date'],as_index =False)\ngrp_datewise.groups\ngp = grp_datewise.agg({'Negative':np.sum,'Positive':np.sum,'TotalSamples':np.sum})\ngrpgraph =sns.barplot(x = \"Date\",y=\"Positive\",data = gp)\ngrpgraph.set_xticklabels(grpgraph.get_xticklabels(), rotation=90,horizontalalignment='center')\n","813922fc":"# How datewise Confirmed Cases data behave.\n\nsns.distplot(gp.Positive)\n","6a625932":"#2.0 How Total Samples vs Positive Sample data behave using point plot\n\ngraph_sample_positive =sns.pointplot(x=\"TotalSamples\",y=\"Positive\",data =gp)\ngraph_sample_positive.set_xticklabels(graph_sample_positive.get_xticklabels(), rotation=90,horizontalalignment='center')\n\n\n","ec1bfc57":"#2.1 What is a sample position of different states on a particular date\ndf_statewise_testing['StateSubStr']= df_statewise_testing.State.str.slice(0,20)\ndf_datedata = df_statewise_testing.loc[df_statewise_testing['Date'] == '2020-04-27'] \n\nsamplevspositive=sns.barplot(x=\"StateSubStr\",y=\"TotalSamples\",data=df_datedata) \nsamplevspositive.set_xticklabels(samplevspositive.get_xticklabels(), rotation=90,horizontalalignment='center')\n","47accc40":"#2.2 How the Behaviour of Confirmed cases versus Death cases\ndf_grpcoviddata= df_coviddata.groupby(['State\/UnionTerritory'],as_index =False)\ndf_grpcoviddata.groups\ndf_grpcoviddata = df_grpcoviddata.agg({'Confirmed':np.sum,\n                                          'Cured':np.sum,\n                                          'Deaths':np.sum\n                                          })\n\nsns.jointplot(x=\"Confirmed\",y=\"Deaths\",data = df_grpcoviddata)\n","aa44d63d":"#2.2 Bar Plot of Statewise Confirmed Cases\nstatewisegraph =sns.barplot(x=\"State\/UnionTerritory\",y=\"Confirmed\",data =df_grpcoviddata)\nstatewisegraph.set_xticklabels(statewisegraph.get_xticklabels(), rotation=90,horizontalalignment='right')\n","987f32a5":"#2.3 How every state prepared with Testing labs\ngrp_testing_details = df_Testinglabs.groupby(['state'],as_index =False)\ngrp_testing_details = grp_testing_details.count()\n\nlabwisegraph= sns.barplot(x=\"state\",y=\"lab\",data = grp_testing_details)\nlabwisegraph.set_xticklabels(labwisegraph.get_xticklabels(), rotation=90,horizontalalignment='center')\n\n","3754015c":"#2.4 Statewise Confirmed versus position of Public Beds statewise\ndf_merge =pd.merge(df_grpcoviddata,\n         df_Hospitalbeds, \n         left_on='State\/UnionTerritory', \n         right_on='State\/UT')\n\n#Inserting an exta Column of ratio of Confirm Vs Bed state wise.\ndf_merge['Confirm_vs_Bed']=df_merge.Confirmed\/df_merge.NumPublicBeds_HMIS\n\nGraph_Confirm_vs_Bed =sns.barplot(x='State\/UnionTerritory',y='Confirm_vs_Bed',data=df_merge)\nGraph_Confirm_vs_Bed.set_xticklabels(Graph_Confirm_vs_Bed.get_xticklabels(), rotation=90,horizontalalignment='center')\n","ec6f85b3":"#2.5 Covid Data Comparison with respect to Population Density in India\ndf_Merge_Pop_Hos =pd.merge(df_Population_master,\n         df_Hospitalbeds, \n         left_on='State \/ Union Territory', \n         right_on='State\/UT')\n\ndf_output=  df_Merge_Pop_Hos.loc[:,['State \/ Union Territory','Population','NumPublicBeds_HMIS']]\ndf_output['StatePopulationVsBeds']= df_output.NumPublicBeds_HMIS\/df_output.Population\n\nGraph_StatePopulationVsBeds =sns.barplot(x='State \/ Union Territory',y='StatePopulationVsBeds',data=df_output)\nGraph_StatePopulationVsBeds.set_xticklabels(Graph_StatePopulationVsBeds.get_xticklabels(), rotation=90,horizontalalignment='center')\n","c3bf2e5b":"Shows the Figure of Deaths in comparison of Confirmed Cases."}}