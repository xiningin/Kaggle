{"cell_type":{"9602324e":"code","9ca91c64":"code","5d6a9563":"code","f8ad8418":"code","1a8e2832":"code","052e371d":"code","dd78b55a":"code","af6e3cdb":"code","d75b9d65":"code","dd67ca3c":"code","01ddf9bf":"code","edd9e119":"code","f7fd7405":"code","687f503c":"code","83ce5752":"code","b81fd9d8":"code","3986fc35":"code","04542ccd":"code","829d39b4":"code","c8887862":"code","e3004db2":"code","750d55e6":"code","a18c653f":"code","bb5af5f2":"code","1a2f44c6":"code","acba8905":"code","7c5b1350":"code","8bd94214":"code","2e6a3801":"code","0953183e":"code","c8b8d71f":"code","3d26ba96":"code","8b3c554f":"code","919e423a":"code","573175ae":"code","60e1bcd5":"code","752a1cfd":"code","bd1b7abc":"code","ff077c17":"code","238835b2":"code","0d1e0e52":"code","03296180":"code","65150361":"code","5c0fc181":"code","ff8b6c75":"code","698e8fd8":"code","4553a009":"code","36825b9c":"code","f5f66ea5":"code","2f605b5c":"code","f2a7894a":"code","c04c5e1e":"code","cb757268":"code","0d3ba0fd":"code","9896d2f1":"code","4d60fbca":"code","0173c33d":"code","46cdf479":"code","2dfc4d49":"markdown"},"source":{"9602324e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ca91c64":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"darkgrid\")","5d6a9563":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","f8ad8418":"data=pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")","1a8e2832":"data.head()","052e371d":"data.shape","dd78b55a":"data.describe()","af6e3cdb":"data.info()","d75b9d65":"data.isnull().sum()","dd67ca3c":"data.age.value_counts()","01ddf9bf":"data.sex.value_counts()","edd9e119":"sns.violinplot(x=data.sex,y=data.age)","f7fd7405":"sns.barplot(x=data.sex,y=data.age)","687f503c":"sns.countplot(x=data.sex,hue=data.age)","83ce5752":"data.groupby(\"sex\").age.value_counts()","b81fd9d8":"data.sex=le.fit_transform(data.sex)","3986fc35":"data.bmi.value_counts()","04542ccd":"sns.scatterplot(x=data.bmi,y=data.charges)","829d39b4":"sns.violinplot(x=data.sex,y=data.bmi)","c8887862":"data.children.value_counts()","e3004db2":"sns.barplot(x=data.children,y=data.charges)\nsns.pointplot(x=data.children,y=data.charges)","750d55e6":"sns.countplot(x=data.sex,hue=data.children)","a18c653f":"data.smoker.value_counts()","bb5af5f2":"sns.barplot(x=data.smoker,y=data.charges)","1a2f44c6":"sns.countplot(x=data.sex,hue=data.smoker)","acba8905":"data.smoker=le.fit_transform(data.smoker)","7c5b1350":"data.region.value_counts()","8bd94214":"sns.barplot(x=data.region,y=data.charges)","2e6a3801":"sns.countplot(x=data.region,hue=data.sex)","0953183e":"data.region=le.fit_transform(data.region)","c8b8d71f":"from sklearn.tree import ExtraTreeRegressor","3d26ba96":"re=ExtraTreeRegressor()","8b3c554f":"data.shape","919e423a":"x=data.iloc[:700,:]\ny=data.iloc[700:,:]","573175ae":"x.shape,y.shape","60e1bcd5":"x.tail()","752a1cfd":"y.head()","bd1b7abc":"x_train=x.drop(columns=\"charges\",axis=1)\ny_train=x.charges\nx_test=y.drop(columns=\"charges\",axis=1)","ff077c17":"x_train.shape,y_train.shape,x_test.shape","238835b2":"re.fit(x_train,y_train)","0d1e0e52":"imp=re.feature_importances_","03296180":"features=pd.DataFrame({\"columns\":x_train.columns,\"importance\":imp})","65150361":"features","5c0fc181":"from sklearn.ensemble import RandomForestRegressor\nre=RandomForestRegressor()\nre.fit(x_train,y_train)\nacc=re.score(x_train,y_train)\nprint(acc)","ff8b6c75":"from sklearn.linear_model import LinearRegression\nle=LinearRegression()\nle.fit(x_train,y_train)\nacc=le.score(x_train,y_train)\nprint(acc)","698e8fd8":"from sklearn.tree import DecisionTreeRegressor\nde=DecisionTreeRegressor()\nde.fit(x_train,y_train)\nacc=de.score(x_train,y_train)\nprint(acc)","4553a009":"re_predict=re.predict(x_train)\nde_predict=de.predict(x_train)\nle_predict=le.predict(x_train)","36825b9c":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\n","f5f66ea5":"import math","2f605b5c":"\nprint(math.sqrt(mean_squared_error(y_train, re_predict)))\nprint((mean_absolute_error(y_train, re_predict)))","f2a7894a":"print(math.sqrt(mean_squared_error(y_train, de_predict)))\nprint((mean_absolute_error(y_train, de_predict)))","c04c5e1e":"print(math.sqrt(mean_squared_error(y_train, le_predict)))\nprint((mean_absolute_error(y_train, le_predict)))","cb757268":"final_de=de.predict(x_test)\nfinal_re=re.predict(x_test)\nfinal_le=le.predict(x_test)","0d3ba0fd":"final_de","9896d2f1":"model=re.fit(x_train,y_train)","4d60fbca":"print(math.sqrt(mean_squared_error(y.charges, final_de)))\nprint((mean_absolute_error(y.charges, final_de)))","0173c33d":"print(math.sqrt(mean_squared_error(y.charges, final_re)))\nprint((mean_absolute_error(y.charges, final_re)))","46cdf479":"print(math.sqrt(mean_squared_error(y.charges, final_le)))\nprint((mean_absolute_error(y.charges, final_le)))","2dfc4d49":"decision tree regressor is performing better"}}