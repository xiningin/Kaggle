{"cell_type":{"200c4625":"code","37ddde0d":"code","a4871bf2":"code","d2784b82":"code","ae857c53":"code","baf48f12":"code","816142a3":"code","a9f564a5":"code","48dd588a":"code","4e8a0e8a":"code","55d82cce":"code","d6daf692":"code","7af97a7e":"code","9aee5a25":"code","c677cebb":"code","097ea214":"code","f653e8d6":"code","99f8d276":"code","2b2a4f49":"code","d787afcd":"code","3008ed8c":"code","55bde459":"code","859cad4f":"code","83adfefc":"code","54882689":"code","584798f6":"code","55e80af9":"code","d855022c":"code","246e1fe2":"code","51d32b4b":"code","07a3956e":"code","73ae2c36":"code","eecca58d":"code","828a1fa0":"code","b6a9089e":"code","355ae365":"markdown","cb0c2d90":"markdown","d81d91d5":"markdown","e889f0f5":"markdown"},"source":{"200c4625":"#import libreries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline ","37ddde0d":"#import dataset\ndf= pd.read_csv(\"..\/input\/titanic\/train.csv\")","a4871bf2":"#Data overview\ndf.head()","d2784b82":"df.info()","ae857c53":"df.describe()","baf48f12":"#Remove useless columns\ndf= df.drop([\"PassengerId\",\"Name\",\"Ticket\"],axis=1)","816142a3":"#Missing Data\ndf.isnull().sum().sort_values()","a9f564a5":"#Calculate the percent of missing data in each column\ndef missing_percent(df):\n    nan_percent= 100*(df.isnull().sum()\/len(df))\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","48dd588a":"nan_percent= missing_percent(df)\nnan_percent","4e8a0e8a":"plt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index , y=nan_percent)\nplt.xticks(rotation=90)","55d82cce":"#Droping rows with missing values\ndf = df.dropna(subset = [\"Embarked\"])","d6daf692":"# Droping the cabin feature because of having high missing data\ndf = df.drop(['Cabin'],axis=1)","7af97a7e":"# Impute missing data based on other columns:\n\ndf['Age'] = df.groupby(['Sex'])['Age'].apply(lambda x: x.fillna(x.mean()))","9aee5a25":"df.isnull().sum()","c677cebb":"df['Survived'].value_counts()","097ea214":"sns.countplot(data=df, x='Survived')","f653e8d6":"sns.scatterplot(data=df , x=\"Survived\" , y=\"Age\" , hue=\"Sex\")","99f8d276":"sns.countplot(data= df , x=\"Pclass\" ,hue=\"Sex\")","2b2a4f49":"sns.boxplot(data=df, x='Survived', y='Pclass')    ","d787afcd":"sns.barplot(data=df , x=\"Pclass\" , y=\"Survived\" , hue=\"Sex\")","3008ed8c":"sns.heatmap(df.corr(), annot=True)","55bde459":"\ndf_num= df.select_dtypes(exclude='object')\ndf_obj= df.select_dtypes(include='object')","859cad4f":"#Determine the Features & Label\nX= df_num.drop('Survived', axis=1)\ny= df_num['Survived']","83adfefc":"#Split the Dataset to Tain & Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)","54882689":"#Scaling the Features\nfrom sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\nscaler.fit(X_train)\nscaled_X_train= scaler.transform(X_train)\nscaled_X_test= scaler.transform(X_test)","584798f6":"#Train the Model\nfrom sklearn.linear_model import LogisticRegression\nlog_model= LogisticRegression()\nlog_model.fit(scaled_X_train, y_train)","55e80af9":"#Model Coeficient:\nlog_model.coef_","d855022c":"# Predicting Test Data\ny_pred= log_model.predict(scaled_X_test)","246e1fe2":"#Evaluating the Model\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report, plot_confusion_matrix","51d32b4b":"accuracy_score(y_test, y_pred)","07a3956e":"confusion_matrix(y_test, y_pred)","73ae2c36":"plot_confusion_matrix(log_model, scaled_X_test, y_test)","eecca58d":"print(classification_report(y_test, y_pred))","828a1fa0":"# Evaluating Curves and AUC\nfrom sklearn.metrics import precision_recall_curve, plot_precision_recall_curve, plot_roc_curve\nplot_precision_recall_curve(log_model, scaled_X_test, y_test)","b6a9089e":"plot_roc_curve(log_model, scaled_X_test, y_test)","355ae365":"**The most of survivers were in class 1 and class 2 .**","cb0c2d90":"**We don't have any Missing Data**","d81d91d5":"**About Titanic Dataset:**\nThe titanic data frames describe the survival status of individual passengers on the Titanic. The titanic data frame does not contain information from the crew, but it does contain actual ages of half of the passengers.\n\n\n\npclass: A proxy for socio-economic status (SES)(Ticket class) 1 = 1st, 2 = 2nd, 3 = 3rd\n\n1st = Upper\n\n2nd = Middle\n\n3rd = Lower\n\nage:Age in years\n\nSibsp: The dataset defines family relations in this way...(number of siblings \/ spouses aboard the Titanic)\n\nSibling = brother, sister, stepbrother, stepsister\n\nSpouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n\nParch: The dataset defines family relations in this way...(number of parents \/ children aboard the Tit\nParent = mother, father\n\nChild = daughter, son, stepdaughter, stepson\n\nSome children travelled only with a nanny, therefore parch=0 for them.\n\nSurvival:0 = No, 1 = Yes\n\nSex:Sex\n\nTicket:Ticket number\n\nFare:Passenger fare\n\nCabin:Cabin number\n\nEmbarked:Port of Embarkation(C = Cherbourg, Q = Queenstown, S = Southampton)","e889f0f5":"  **We can observe that most of survivers were women. probably the women disembarked earlier**"}}