{"cell_type":{"b8bd9231":"code","0e66b66b":"code","e8852eab":"code","aa6a6823":"code","755abd72":"code","40d7dee3":"code","56856139":"code","88d40e94":"code","ae443666":"code","3be0b74d":"code","91c41102":"code","168d5235":"code","46632d2c":"code","20cd8926":"code","6124ca3e":"code","f9c27f80":"code","d27d0082":"markdown","8264b880":"markdown","057268fb":"markdown","e525c87a":"markdown","ae212a35":"markdown","6f936569":"markdown","c4aef78d":"markdown","f4861c71":"markdown","d331ef8c":"markdown"},"source":{"b8bd9231":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0e66b66b":"import pandas as pd\nimport numpy as np\nfrom datetime import date, datetime, timedelta\nimport time\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# for interactive visualizations\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected = True)\nimport plotly.figure_factory as ff","e8852eab":"from IPython.core.display import Image, display\ndisplay(Image('https:\/\/i.imgur.com\/0N9ktSe.png', width=700, unconfined=True))","aa6a6823":"df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\",)\n\ndf.rename(columns={'Last Update': 'LastUpdate',\n                   'Province\/State': 'PS'},\n         inplace=True)\ndf['Date'] = pd.to_datetime(df['Date']).dt.date\n\nvirus_cols=['Confirmed', 'Deaths', 'Recovered']\n\ndf = df[df[virus_cols].sum(axis=1)!=0]\n\ndf['Country'] = np.where(df['Country']=='Mainland China', 'China', df['Country'])\ndf.dropna(inplace=True)\n\nusecols=['Province\/State', 'Country\/Region', 'Lat', 'Long']\npath= '\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_2019_ncov_'\ncsvs=['confirmed.csv', 'deaths.csv', 'recovered.csv']\ncoords_df = pd.concat([pd.read_csv(path + csv, usecols=usecols) for csv in csvs])\ncoords_df.rename(columns={'Country\/Region': 'Country',\n                          'Province\/State': 'PS'}, \n                inplace=True)\ncoords_df['Country'] = np.where(coords_df['Country']=='Mainland China', 'China', coords_df['Country'])\ncoords_df = coords_df.drop_duplicates()\ndf = pd.merge(df, coords_df, on=['Country', 'PS'], how='left')","755abd72":"df = df.groupby(['PS', 'Country', 'Date']).agg({'Confirmed': 'sum',\n                                                'Deaths': 'sum',\n                                                'Recovered': 'sum',\n                                                'Lat': 'max',\n                                                'Long': 'max'}).reset_index()","40d7dee3":"df['Date'] = df['Date'].apply(lambda x: str(x))\n# adjusting sizes so that they become visible\ndf['New_Confirmed'] = df['Confirmed']**(1\/2.7)+3","56856139":"import plotly.express as px\n\npx.set_mapbox_access_token('pk.eyJ1IjoiMWFkaXR5YTEiLCJhIjoiY2s2NWZmYTRzMGFmdzNrbzRrMnB4eGt5YiJ9._nTBIf6oi7v22jqg5XT9Xw')\n\nfig = px.scatter_geo(df, lat=\"Lat\", lon=\"Long\", size = 'New_Confirmed',color = 'Confirmed',projection = 'natural earth',\n                        opacity=1, size_max=15, text = 'PS', range_color = [0, 30000],\n                       animation_frame = 'Date'\n                        )\nfig.show()","88d40e94":"fig = px.scatter_mapbox(df, lat=\"Lat\", lon=\"Long\", size = 'New_Confirmed',color = 'Confirmed',\n                        opacity=1, size_max=15, text = 'PS', range_color = [0, 30000],\n                       animation_frame = 'Date', center = {'lat' : 30, 'lon' : 112}, zoom = 2\n                        )\nfig.show()","ae443666":"data = df.groupby(['PS','Date']).agg({'Confirmed': 'sum',\n                                                'Deaths': 'sum',\n                                                'Recovered': 'sum',\n                                                }).reset_index()\n","3be0b74d":"fig = px.bar(data[data['PS']!='Hubei'].sort_values('Confirmed'), y = 'PS', x = 'Confirmed', \n             orientation = 'h', animation_frame='Date', width = 800, height = 900, )\nfig.show()","91c41102":"fig = px.scatter(df[df['PS']!='Hubei'], x = 'Confirmed', y = 'Deaths', size = 'New_Confirmed', color = 'PS',\n                animation_frame = 'Date', range_y = [0,8], range_x = [0, 1500])\n\nfig.show()","168d5235":"data = df.groupby(['PS']).agg({'Confirmed': 'sum',\n                                                'Deaths': 'sum',\n                                                'Recovered': 'sum',\n                                                }).reset_index()","46632d2c":"fig = px.bar(data[data['PS']!='Hubei'].sort_values('Confirmed',).tail(30), y = 'PS', x = 'Confirmed', \n             orientation = 'h', width = 800, height = 600, )\nfig.show()","20cd8926":"fig = px.bar(data[data['PS']!='Hubei'].sort_values('Deaths',).tail(30), y = 'PS', x = 'Deaths', \n             orientation = 'h', width = 800, height = 600, )\nfig.show()","6124ca3e":"fig = px.bar(data[data['PS']!='Hubei'].sort_values('Recovered').tail(30), y = 'PS', x = 'Recovered', \n             orientation = 'h', width = 800, height = 600, )\nfig.show()","f9c27f80":"from IPython.core.display import Image, display\ndisplay(Image('https:\/\/i.imgur.com\/Tj7wc0f.jpg', width=700, unconfined=True))","d27d0082":"## Hubei having exceptionally higher cases, lets seperate it for a moment and analyze others","8264b880":"# Spread of Crona Virus across world","057268fb":"> # <font color=\"red\">Please upvote it gives me medals ---  \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d<\/font>","e525c87a":"# Most cases is in China, having a closer look at it \ud83d\udd0d","ae212a35":"# Lets hope good and pray for patients \ud83c\udf40 ","6f936569":"# Till Now\n# Total Confirmed cases = 44888\n#       Recovered cases = 4737\n#       Death cases     = 1114","c4aef78d":"# But don't worry because","f4861c71":"## Similar pattern is observed for Deaths and Recovered, lets confirm by bubble scatter chart","d331ef8c":"# Now the final condition is - \n## Only showing top 30 cities"}}