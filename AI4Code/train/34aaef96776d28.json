{"cell_type":{"1203d77f":"code","6c2e98ca":"code","4786e17e":"code","1e1ba2a8":"code","4fdaef7d":"code","360598f7":"code","5c640f8a":"code","0e9dd4d2":"code","08907ff9":"code","bd4c0bc9":"code","a8033bb9":"code","905d1888":"code","412140d7":"code","ff6b539a":"code","303f269b":"code","8b17a3c9":"code","0ddb81c9":"code","d3b692a1":"code","0fcf6e5d":"code","85901597":"code","28d4db15":"code","620216ac":"code","321d7f82":"code","ca336b49":"code","64924615":"code","9e5e81f7":"code","e110a2a5":"code","79406353":"code","6aed11be":"code","4af848f3":"code","e361a3fc":"code","f65f23f7":"code","91ebd89a":"code","e66ee48a":"code","5741299e":"code","14f4c5f4":"code","cdc20a93":"code","87e8f50e":"code","8d04246f":"code","65540fd0":"code","fc923555":"code","dc57692e":"code","d1db0f55":"code","134b805c":"code","a42aabd1":"code","63ae04b6":"code","43cf5aca":"code","67ba901d":"code","cd97bccf":"code","d580fd7c":"code","b244b6a4":"code","c232a9c1":"code","63a1efc5":"code","7e9cf3f0":"code","b044586c":"code","a21535ca":"code","87f45482":"code","f6cdf698":"code","16a78c02":"code","cda701f7":"code","0f87d5c2":"code","1143efad":"code","998098d3":"code","2c1e8352":"code","c323f378":"code","3a4e259e":"code","0496578a":"code","ec5b9669":"code","11c2a21a":"code","864579db":"code","2a96497e":"code","124421a6":"code","213a491c":"code","37d10f1e":"code","8c3d09db":"code","c6e377af":"code","9fb0b317":"markdown","26bb4f66":"markdown","99f3f289":"markdown","4e78449d":"markdown","65b45d79":"markdown","c5362288":"markdown","08d1b453":"markdown","efe9d678":"markdown","f7f7d1c6":"markdown","2f72bd33":"markdown"},"source":{"1203d77f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport os\nprint(os.listdir(\"..\/input\"))\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n\n# Any results you write to the current directory are saved as output.","6c2e98ca":"data=pd.read_csv(\"..\/input\/Iris.csv\")","4786e17e":"data.info()","1e1ba2a8":"del data[\"Id\"]","4fdaef7d":"data.corr()","360598f7":"data.columns","5c640f8a":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","0e9dd4d2":"data.head()","08907ff9":"data.tail()","bd4c0bc9":"data.SepalLengthCm.plot(kind = 'line', color = 'g',label = 'SepalLength',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.SepalWidthCm.plot(color = 'r',label = 'SepalWidth',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","a8033bb9":"# Scatter Plot \n# x = petallength, y = petalwidth\ndata.plot(kind='scatter', x='PetalLengthCm', y='PetalWidthCm',alpha = 0.5,color = 'red')\nplt.xlabel('PetalLengthCm')              # label = name of label\nplt.ylabel('PetalWidthCm')\nplt.title('Petal Length and Width Scatter Plot')            # title = title of plot","905d1888":"# Histogram\n# bins = number of bar in figure\ndata['Species'].value_counts().plot(kind='bar')\nplt.show()","412140d7":"# Histogram\n# bins = number of bar in figure\ndata.PetalWidthCm.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","ff6b539a":"x = data['PetalWidthCm']>1  \ny= data[\"PetalLengthCm\"]>5\ndata[x]","303f269b":"#data[x&y] #same\ndata[(data['PetalWidthCm']>1) & (data['PetalLengthCm']>5)]","8b17a3c9":"for index,value in data[['SepalLengthCm']][0:1].iterrows():\n    print(index,\" : \",value)","0ddb81c9":"#ortalama=data.PetalLengthCm.mean()\n#print(ortalama)\n##type(ortalama)\nortalama=sum(data.PetalLengthCm)\/len(data.PetalLengthCm)\ndata[\"buyukluk\"]=[\"buyuk\" if i>ortalama else \"kucuk\" for i in data.PetalLengthCm]\ndata.loc[70:120,[\"buyukluk\",\"PetalLengthCm\"]]","d3b692a1":"data= pd.read_csv(\"..\/input\/Iris.csv\")\ndata.head()\n","0fcf6e5d":"data.info()","85901597":"data.SepalLengthCm[1]","28d4db15":"\ndata.describe()","620216ac":"data.boxplot(column=\"SepalWidthCm\",by=\"Species\")","321d7f82":"data.SepalWidthCm[1]=\"NaN\" #made a null cell","ca336b49":"data.info() #now we can use dropna","64924615":"data.head()","9e5e81f7":"data[\"SepalWidthCm\"].dropna(inplace = True)    #not working\ndata.head()       ","e110a2a5":"data.dropna(subset=[\"SepalWidthCm\"],inplace=True) #it is working\ndata.head()","79406353":"data.shape","6aed11be":"\nliste=[i for i in range(150)]\nliste.remove(0)\nprint(liste)\n","4af848f3":"data[\"index\"]=liste\ndata.head()","e361a3fc":"del data[\"Id\"]\n","f65f23f7":"data.head()","91ebd89a":"data=data.set_index(\"index\") #setting index","e66ee48a":"data.head()","5741299e":"data=pd.read_csv(\"..\/input\/Iris.csv\")\ndata1=data.copy()\ndata1.head()","14f4c5f4":"data1 = data.loc[:,[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalWidthCm\"]]\ndata1.plot()","cdc20a93":"data1.plot(subplots = True) #better\nplt.show()","87e8f50e":"data.head()","8d04246f":"data1.plot(kind = \"scatter\",x=\"SepalWidthCm\",y = \"PetalWidthCm\")\nplt.show()","65540fd0":"#fig, axes = plt.subplots(nrows=2,ncols=1)\n#data1.plot(kind = \"hist\",y = \"PetalWidthCm\",bins = 50,range= (0,250),normed = True,ax = axes[0])\n#data1.plot(kind = \"hist\",y = \"PetalWidthCm\",bins = 50,range= (0,250),normed = True,ax = axes[1],cumulative = True)\n","fc923555":"data2=data1.head()\ndata2","dc57692e":"time_list=[\"2012-10-20\",\"2012-10-25\",\"2015-08-20\",\"2015-08-25\",\"2015-11-26\"]\ntype(time_list)","d1db0f55":"date_object=pd.to_datetime(time_list)\ndata2[\"date\"]=date_object\ndata2\ntype(date_object)","134b805c":"data2=data2.set_index(\"date\")\ndata2","a42aabd1":"print(data2.loc[\"2012-10-25\"])\nprint(data2.loc[\"2012-10-25\":\"2015-08-25\"])","63ae04b6":"\ndata2.resample(\"A\").mean()\n#data2.resample(\"M\").mean()","43cf5aca":"data2.resample(\"M\").mean()","67ba901d":"data2.resample(\"M\").first().interpolate(\"linear\")","cd97bccf":"data2.resample(\"M\").mean().interpolate(\"linear\")","d580fd7c":"data = pd.read_csv('..\/input\/Iris.csv')\ndata= data.set_index(\"Id\")\ndata.head()","b244b6a4":"data.SepalLengthCm[1]","c232a9c1":"data[\"SepalLengthCm\"][1]","63a1efc5":"data.loc[1,[\"SepalLengthCm\"]]","7e9cf3f0":"data[[\"SepalLengthCm\",\"PetalLengthCm\"]]","b044586c":"data.loc[1:10,\"SepalLengthCm\":\"PetalLengthCm\"]","a21535ca":"data.loc[10:1:-1,\"SepalLengthCm\":\"PetalLengthCm\"]","87f45482":"data.loc[1:10,\"SepalWidthCm\":] #to the end","f6cdf698":"data.head()","16a78c02":"filtre1=data.SepalWidthCm>3.5\nfiltre2=data.PetalLengthCm>3\ndata[filtre1&filtre2]","cda701f7":"#column based\ndata.SepalLengthCm[data.PetalWidthCm>2]","0f87d5c2":"def bol(n):\n    return n\/2\n\ndata.SepalLengthCm.apply(bol)","1143efad":"data.PetalLengthCm.apply(lambda n: n\/2)","998098d3":"data.index.name = \"sira\"\ndata.head()","2c1e8352":"data.index=range(50,200,1)\ndata.head()","c323f378":"dic={\"tedavi\":[\"A\",\"A\",\"B\",\"B\"],\"cinsiyet\":[\"K\",\"E\",\"K\",\"E\"],\"cevap\":[40,15,50,30],\"yas\":[20,15,35,60]}\ndf=pd.DataFrame(dic)\ndf","3a4e259e":"df.pivot(index=\"tedavi\",columns=\"cinsiyet\",values=\"cevap\")","0496578a":"df1=df.set_index([\"tedavi\",\"cinsiyet\"])\ndf1","ec5b9669":"df1.unstack(level=0)","11c2a21a":"df1.unstack(level=1)","864579db":"df","2a96497e":"pd.melt(df,id_vars=\"tedavi\",value_vars=[\"yas\",\"cevap\"])","124421a6":"df","213a491c":"df.groupby(\"tedavi\").mean()","37d10f1e":"df.groupby(\"tedavi\").yas.max() ","8c3d09db":"df.groupby(\"tedavi\")[[\"yas\",\"cevap\"]].min() ","c6e377af":"df.info()","9fb0b317":"Indexing dataframes","26bb4f66":"**Manupulating with pandas**","99f3f289":"Transforming","4e78449d":"Filtering DataFrames","65b45d79":"comprehension example","c5362288":"INDEX OBJECTS AND LABELED DATA","08d1b453":"**Pivoting,Melting,Stacking, unstacking,  Categoricals and groupby**","efe9d678":"\"A\" year  ,\"M\" month","f7f7d1c6":"Slicing DataFrame","2f72bd33":"Time Series"}}