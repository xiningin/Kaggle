{"cell_type":{"c8402f2f":"code","0b40077f":"code","fd73af40":"code","bf75bcce":"code","ea369fb3":"code","3a7168e7":"code","923f0bce":"code","1c5f8715":"code","4e358db0":"code","22c903b0":"code","351c6e34":"markdown","164db475":"markdown","e6311360":"markdown","5d8cd889":"markdown","f630c854":"markdown","bba6a785":"markdown","1e1ea082":"markdown","2e566a5f":"markdown","8564890b":"markdown","97cdafff":"markdown","c88637c9":"markdown","98a25949":"markdown","a30834c1":"markdown","7840caf2":"markdown","38b4c6dd":"markdown","80c029a3":"markdown","ca45f7b4":"markdown","adb85348":"markdown"},"source":{"c8402f2f":"import numpy as np","0b40077f":"input = np.array([[0, 1], [0, 0], [1, 0], [1, 1]])\noutput = np.array([[1, 0, 1, 1]])\noutput = output.reshape(4,1)","fd73af40":"weights = np.array([[0.1], [0.2]])\nbias = 0.3\nlr = 0.05","bf75bcce":"def sigmoid(x):\n    return 1\/(1+np.exp(-x))","ea369fb3":"def derivative_of_sigmoid(x):\n    return sigmoid(x)*(1-sigmoid(x))","3a7168e7":"for _ in range(10000):\n    final_input = np.dot(input, weights) + bias\n    \n    predict_output = sigmoid(final_input)\n    \n    der_error = (predict_output - output)\n    der_out = derivative_of_sigmoid(predict_output)\n    der_error_and_der_out = der_error * der_out\n    final_error = np.dot(input.T, der_error_and_der_out)\n    \n    weights -= lr*final_error\n    \n    for i in der_error_and_der_out:\n        bias -= lr*i","923f0bce":"def predict(x):\n    input_demo = np.dot(x, weights) + bias\n    output_demo = sigmoid(input_demo)\n    return output_demo","1c5f8715":"predict([[0, 0]])","4e358db0":"predict([[1, 0]])","22c903b0":"my_output = predict([[1,1]])\nif my_output >= 0.5:\n    print('1')\nelse:\n    print('0')","351c6e34":"6. Implement for loop and perform the gradient descent to update weight and bias","164db475":"8. Conclude the prediction.","e6311360":"I will explain the weight concept here. Weight means simply priority. Which input attribute has how many priority to get correct output. I will give one example to understand this. If you have only some minutes of time to reach to the bus station. Then which items you will pick with you. Of corse, you will take lot many things such as mobile, headphones, bag, cloths, etc. But you have only few minutes, so you can take all the things. Then first of all, you will pick up mobile, wallet, headphone, and so on. Here you will decide the priority for each object. The same criteria you have to apply here. For each attribute you have to calculate a weight so that you will get the correct output.","5d8cd889":"2. Store input values and target output","f630c854":"<p style=\"color:purple; font-weight:bolder; font-size:50px; text-align:center;\">Neural Networks<\/p>","bba6a785":"<span style=\"color:red; font-weight:bolder; font-size:25px;\">2. What is Percepron? : <\/span> Perceptron is the basic unit of neural netwoks. It does not have a hidden layer. So we can say that the neural network without hidden layer is called Perceptron.\n<br>\n![](https:\/\/www.allaboutcircuits.com\/uploads\/thumbnails\/how-to-perform-classification-using-a-neural-network-a-simple-perceptron-example_rk_aac_image1.jpg)\n<br>\nPerceptron is generally used for simple decision making. It can be used in the complex problem also.","1e1ea082":"1. import some libraries of python","2e566a5f":"<span style=\"color:green;\">I hope you have knowledge of gradient descent.<\/span>\nIf you want information on it, you can check out [here.](https:\/\/en.wikipedia.org\/wiki\/Backpropagation)","8564890b":"<span style=\"color:red; font-weight:bolder; font-size:25px;\"> 6. Limitations of perceptron :  <\/span> It works only on the linearly separable data. If the data is not linearly separable then this will not work.","97cdafff":"7. Weights are assigned. Now let's predict.","c88637c9":"3. Initialize values for weight, bias and learning rate. We have two attributes, so weights should be two.","98a25949":"<span style=\"color:red; font-weight:bolder; font-size:25px;\">4. Feed Forward & Back Propagation : <\/span> Feed Forward means perform above steps till 4. i.e. predict the output by taking weight and input values.\n<br>\nBack propagation means if the error is more then we have to update values of weights and again we have to predict the output based on updates values of weights.","a30834c1":"4. Implement sigmoid function for classification","7840caf2":"<span style=\"color:red; font-weight:bolder; font-size:25px;\"> 5. Let's do code to implement neural network : <\/span>\n<br>\nWe will go step by step:","38b4c6dd":"5. Implement derivative of the sigmoid function","80c029a3":"<span style=\"color:red; font-weight:bolder; font-size:25px;\">3. Steps to implement neural network : <\/span> \n1. Read the input and the target output. Also give some default values for weight and bias.\n2. implement a function to predict output. e.g. sigmoid function for classification\n3. calculate the output from the above function.\n4. Calculate the error between target output and predicted output.\n5. If error is large, then update the weight and bias and again perform above steps from 3.\n6. Update the weights by using Gradient Descent algorithm\n7. If we will get very small error or no error then we can say that our model is trained.","ca45f7b4":"<span style=\"color:red; font-weight:bolder; font-size:25px;\">1. What is neural networks? : <\/span> We know that the deep learning is the subfield of Machine Learning. The base of the deep learning is Neural Networks. Basically, neural networks helps to solve complex data structures. Acually this terminolody came from the human brain. It came from the idea of Neurons in the human body. \n<br>\nAs we know that the human body contains around 10 billions of neurons or may be more than that. The each neuron does thier small work but together thay perform a lot amount of work. Thay also can perform complex work together. Let's check some more information about biological neurons.\n<br>\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/b\/bd\/Neuron.jpg)\n<br>\nThe above figure show a structure of a single neuron. As we know that the dendrite of a neuron can sence the particular activity and send that information to nucleus then toward the axon. That axon can be the new input for the another neuron. In this way they perform the work. If you want more information about biological neuron, you can check it out [here.](https:\/\/en.wikipedia.org\/wiki\/Neuron)\n<br> Our artificial neural network also has a structure. It is similar to the biological neuron. The followong figure shows the structure of the artificial neural network.\n![](https:\/\/miro.medium.com\/max\/3000\/1*WRG_Re8vGVuHDYigtq2IBA.jpeg)\n![](https:\/\/data-flair.training\/blogs\/wp-content\/uploads\/sites\/2\/2019\/07\/Introduction-to-Artificial-Neural-Networks-1200x900.jpg)\nThe above figures shows ther are three lavels in the structure. There are two terminologies Feed forward and back propagation. I will explain that later in this notebook.","adb85348":"<span style=\"color:Green; font-weight:bolder; font-size:25px;\">Conclusion : <\/span> I have buid a model of classification by using Perceptron that is the basic unit of neural network.\n<br><br><br><br><br>\n<center>Thank you<\/center>"}}