{"cell_type":{"f665853a":"code","e6c21223":"code","2f82cd03":"code","fb379928":"code","336c1017":"code","a1077f42":"code","80db5bee":"code","e4dd8350":"code","378bde10":"code","9e8a491b":"code","4600b051":"code","f6c15fcd":"code","9292fe89":"code","22ae6451":"code","6f27a8a6":"code","f0e93608":"code","d6d7fdb9":"code","cfd5ec8c":"code","851bfe48":"code","16673833":"code","e516d7f4":"code","4e0a4f60":"code","c108e7d6":"code","3c4b476f":"code","653499cf":"code","83695a90":"code","e6225554":"code","28b12bef":"code","a817860f":"markdown","f35ee204":"markdown","47441e56":"markdown","c9db25b3":"markdown","8e4e364b":"markdown","0942e60b":"markdown","463d3e6e":"markdown","c8dcc1d4":"markdown","30e9f1ea":"markdown","2b8eff33":"markdown","cd497084":"markdown","9e6eeb9c":"markdown","17ec0640":"markdown","ed411c87":"markdown","7fedf815":"markdown","cc1926ff":"markdown","041e4708":"markdown","7c610dee":"markdown","09597abd":"markdown","8393d6d1":"markdown","ca39ff71":"markdown","5e198564":"markdown","75579784":"markdown","7e2a8443":"markdown","4394befc":"markdown","7ec8b4e2":"markdown","8aef3c06":"markdown","da9a075a":"markdown","45e36af7":"markdown","4df88934":"markdown"},"source":{"f665853a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\"))\n","e6c21223":"data = pd.read_csv(\"..\/input\/pokemon.csv\")","2f82cd03":"data.info()","fb379928":"data.head()","336c1017":"top_type1 = data['Type 1'].value_counts()\n\nf,ax = plt.subplots(figsize=(9,15))\nsns.barplot(y=top_type1.index,x=top_type1.values,alpha=0.6,label='Type 1 Counts')\nplt.xlabel('Values')\nplt.ylabel('Type 1')\nplt.title('Type 1 Counts')\nplt.show()","a1077f42":"labels = data['Type 1'].value_counts().index\nsizes = data['Type 1'].value_counts().values\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nplt.figure(figsize=(10,10))\nplt.pie(sizes,explode=explode,labels=labels,autopct='%1.2f%%')\nplt.title('Count of Type 1',color='red',fontsize=18)\nplt.show()","80db5bee":"top_type2 = data['Type 2'].value_counts()\n\nf,ax = plt.subplots(figsize=(9,15))\nsns.barplot(y=top_type2.index,x=top_type2.values,alpha=0.6,label='Type 2 Counts')\nplt.yticks(rotation=15)\nplt.xlabel('Values')\nplt.ylabel('Type 2')\nplt.title('Type 2 Counts')","e4dd8350":"f,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.corr(),annot=True,linewidths=.7,linecolor='b',fmt='.2f',ax=ax)\nplt.title('Correlation Map',fontsize=18,color='red')\nplt.show()\n","378bde10":"type1_list = list(data['Type 1'].unique()) \ntype1_hp_ratio = []\nfor i in type1_list:\n    x = data[data['Type 1']==i]\n    type1_hp_rate = sum(x.HP)\/len(x)\n    type1_hp_ratio.append(type1_hp_rate)\ndf = pd.DataFrame({'Type1':type1_list,'Hp_Ratio':type1_hp_ratio})\nnew_index = (df.Hp_Ratio.sort_values(ascending=False)).index.values\nsorted_data = df.reindex(new_index)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"Type1\",y=\"Hp_Ratio\",data=sorted_data)\nplt.xticks(rotation=90)\nplt.xlabel('Types')\nplt.ylabel('Hp')\nplt.title('Hp rate given Type 1',fontsize=18,color='red')\nplt.show()","9e8a491b":"type1_speed_ratio = []\nfor j in type1_list:\n    y = data[data['Type 1']==j]\n    type1_speed_rate = sum(y.Speed)\/len(y)\n    type1_speed_ratio.append(type1_speed_rate)\ndf1 = pd.DataFrame({'Type 1':type1_list,'Speed_Ratio':type1_speed_ratio})\nnew_index1 = (df1.Speed_Ratio.sort_values(ascending=False)).index.values\nsorted_data1 = df1.reindex(new_index1)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"Type 1\",y=\"Speed_Ratio\",data=sorted_data1)\nplt.xlabel('Types')\nplt.ylabel('Speed')\nplt.title('Speed rate given Type1')\nplt.show()","4600b051":"type1_attack_ratio = []\nfor k in type1_list:\n    z = data[data['Type 1']==k]\n    type1_attack_rate = sum(z.Attack)\/len(z)\n    type1_attack_ratio.append(type1_attack_rate)\ndf2 = pd.DataFrame({'Type 1':type1_list,'Attack_Ratio':type1_attack_ratio})\nnew_index2 = (df2.Attack_Ratio.sort_values(ascending=False)).index.values\nsorted_data2 = df2.reindex(new_index2)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"Type 1\",y=\"Attack_Ratio\",data=sorted_data2)\nplt.xlabel('Types')\nplt.ylabel('Attack')\nplt.title('Attack rate given Type1')\nplt.show()","f6c15fcd":"type1_defense_ratio = []\nfor m in type1_list:\n    n = data[data['Type 1']==m]\n    type1_defense_rate = sum(n.Defense)\/len(n)\n    type1_defense_ratio.append(type1_defense_rate)\ndf3 = pd.DataFrame({'Type 1':type1_list,'Defense_Ratio':type1_defense_ratio})\nnew_index3 = (df3.Defense_Ratio.sort_values(ascending=False)).index.values\nsorted_data3 = df3.reindex(new_index3)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"Type 1\",y=\"Defense_Ratio\",data=sorted_data3)\nplt.xlabel('Types')\nplt.ylabel('Defense')\nplt.title('Defense rate given Type1')\nplt.show()","9292fe89":"sorted_data2['Attack_Ratio'] = sorted_data2['Attack_Ratio']\/max(sorted_data2['Attack_Ratio'])\nsorted_data3['Defense_Ratio'] = sorted_data3['Defense_Ratio']\/max(sorted_data3['Defense_Ratio'])\n\nconcat = pd.concat([sorted_data2,sorted_data3['Defense_Ratio']],axis=1)\nconcat.sort_values('Attack_Ratio',inplace=True)\n\nf,ax1=plt.subplots(figsize=(20,10))\nsns.pointplot(x='Type 1',y='Attack_Ratio',data=concat,color='blue',alpha=0.7)\nsns.pointplot(x='Type 1',y='Defense_Ratio',data=concat,color='red',alpha=0.6)\nplt.text(0,1,'Defense',color='red',fontsize=12,style='italic')\nplt.text(0,0.95,'Attack',color='blue',fontsize=12,style='italic')\nplt.xlabel('Type')\nplt.ylabel('Values')\nplt.title('Attack Rate vs Defense Rate')\nplt.grid()\nplt.show()","22ae6451":"sns.jointplot(data=concat,x='Attack_Ratio',y='Defense_Ratio',kind='kde',size=7,color='g')\nplt.show()","6f27a8a6":"sns.jointplot(data=concat,x='Attack_Ratio',y='Defense_Ratio',size=7,color='b')\nplt.show()","f0e93608":"sorted_data1['Speed_Ratio'] = sorted_data1['Speed_Ratio']\/max(sorted_data1['Speed_Ratio'])\n\nconcat1 = pd.concat([sorted_data2,sorted_data1['Speed_Ratio']],axis=1)\nconcat1.sort_values('Speed_Ratio',inplace=True)\n\nsns.lmplot(data=concat1,x='Attack_Ratio',y='Speed_Ratio',size=8)\nplt.xlabel('Attack')\nplt.ylabel('Speed')\nplt.grid()\nplt.show()","d6d7fdb9":"concat2=pd.concat([sorted_data1,sorted_data3.Defense_Ratio],axis=1)\nconcat2.sort_values('Defense_Ratio',inplace=True)\n\n\nsns.lmplot(data=concat2,x='Defense_Ratio',y='Speed_Ratio',size=8)\nplt.xlabel('Defense')\nplt.ylabel('Speed')\nplt.grid()\nplt.show()\n","cfd5ec8c":"f,ax=plt.subplots(figsize=(8,7))\npal=sns.color_palette(\"RdBu_r\", 7)\nsns.violinplot(data=concat,palette=pal,inner=\"stick\",ax=ax)\nplt.show()","851bfe48":"f,ax = plt.subplots(figsize=(10,8))\nsns.countplot(data.Legendary,ax=ax)\nplt.show()","16673833":"sns.lmplot(x='Defense',y='Speed',col='Legendary',data=data,palette=\"Set1\")\nplt.show()","e516d7f4":"sns.lmplot(x='Attack',y='Speed',col='Legendary',data=data)\nplt.show()","4e0a4f60":"f,ax = plt.subplots(figsize=(10,6))\nsns.swarmplot(x=\"Type 1\",y=\"HP\",hue=\"Legendary\",data=data,ax=ax)\nplt.xticks(rotation=90)\nplt.show()","c108e7d6":"sns.pairplot(concat,size=4.5)\nplt.show()","3c4b476f":"f,ax = plt.subplots(figsize=(10,8))\nsns.countplot(data['Generation'],ax=ax)\nplt.show()","653499cf":"f,ax = plt.subplots(figsize=(10,7))\nsns.boxplot(x='Generation',y='Sp. Atk',data=data,hue='Legendary',ax=ax)\nplt.show()","83695a90":"f,ax = plt.subplots(figsize=(7,7))\nsns.heatmap(concat.corr(),annot=True,linewidths=0.7,linecolor='b',fmt='.2f',ax=ax)\nplt.show()","e6225554":"f,ax = plt.subplots(figsize=(7,7))\nsns.heatmap(concat1.corr(),annot=True,linewidths=0.7,linecolor='r',fmt='.2f',ax=ax)\nplt.show()","28b12bef":"f,ax = plt.subplots(figsize=(7,7))\nsns.heatmap(concat2.corr(),annot=True,linewidths=0.7,linecolor='g',fmt='.2f',ax=ax)\nplt.show()\n","a817860f":"*Attack Rate vs Speed Rate   (Type 1)  with Lmplot  :*","f35ee204":"*Attack Rate vs Defense Rate   (Type 1)  with Pointplot  :*","47441e56":"*Count of Type1 (with Pie Plot):*","c9db25b3":"*Attack Rate vs Defense Rate   (Type 1)  with Jointplot  :*","8e4e364b":"*Attack rate of each Type1:*","0942e60b":"**Correlation Map(Defense Ratio vs Speed Ratio):**","463d3e6e":"**Generation count:**","c8dcc1d4":"*The count of legends:*","30e9f1ea":"*We import some modules:*","2b8eff33":"*The attack values of the generations according to their legend status:*","cd497084":"*Some information about data:*","9e6eeb9c":"*Attack Rate vs Defense Rate   (Type 1)  with Violinplot  :*","17ec0640":"*Attack Rate vs Defense Rate   (Type 1)  with Jointplot(Scatter)  :*","ed411c87":"*Speed rate of each type1*","7fedf815":"*Defense and speed ratios according to legends types1 (with Lmplot):*","cc1926ff":"*We include the file:*","041e4708":"*Defense Rate vs Speed Rate   (Type 1)  with Lmplot  :*","7c610dee":"*Attack and speed ratios according to legends types1 (with Lmplot):*","09597abd":"**CONCLUSION:**\n*I wait to your comments and suggestions.\nThank you.\n*","8393d6d1":"*Attacks and defense ratios of types1 (with Pairplot):*","ca39ff71":"*Let's look at the hp rate of Types 1:*","5e198564":"**Correlation of data:**","75579784":"**ABOUT POKEMON**\n\nPok\u00e9mon  is a media franchise managed by The Pok\u00e9mon Company, a Japanese consortium between Nintendo, Game Freak, and Creatures.The franchise copyright is shared by all three companies, but Nintendo is the sole owner of the trademark. The franchise was created by Satoshi Tajiri in 1995,and is centered on fictional creatures called \"Pok\u00e9mon\", which humans, known as Pok\u00e9mon Trainers, catch and train to battle each other for sport. The English slogan for the franchise is \"Gotta Catch 'Em All\".\n\n![](http:\/\/images6.fanpop.com\/image\/photos\/38800000\/pokemon-hd-wallpapers-3-AMB-kittygirldragon-38860768-2560-1600.jpg)\n\n\nLet's look at statistics about Pokemon","7e2a8443":"Top 5 Data","4394befc":"**Count of Type1:**","7ec8b4e2":"**Correlation Map(Attack Ratio vs Defense Ratio):**","8aef3c06":"***According to legends hp averages and types1(with swarmplot):***","da9a075a":"**Count of Type2:**","45e36af7":"*Defense rate of each Type 1:*","4df88934":"**Correlation Map(Speed Ratio vs Attack Ratio):**"}}