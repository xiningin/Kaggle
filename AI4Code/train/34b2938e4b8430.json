{"cell_type":{"8d985530":"code","6bb9a957":"code","6786a477":"code","82379b19":"code","15af8b77":"code","27804d37":"code","da28336f":"code","e2c54cfa":"code","1dbc1925":"code","00dcacd1":"code","ef41fe72":"code","308f8aca":"code","082378be":"code","c9f5a867":"code","06e59c42":"code","b68c2496":"code","2b501913":"code","be241380":"code","f3259db0":"code","0f3c1938":"code","2ee8dee6":"code","7addbe61":"code","2eeeed5e":"code","fb9f2b69":"code","475dd880":"code","b0677894":"code","5b0adf1d":"code","f14e00dc":"code","59c6a651":"code","733fbf79":"code","44f46d63":"code","9062ee2a":"code","d369f57b":"markdown","e7ecb830":"markdown","89fef549":"markdown","75523184":"markdown","d91e75e7":"markdown","43607bc6":"markdown","43c71436":"markdown","02e1254b":"markdown","a882dddd":"markdown","09286ce4":"markdown","f63b332a":"markdown","147e0128":"markdown","661d7232":"markdown","33098f3a":"markdown","8c58d66f":"markdown","369f07d2":"markdown"},"source":{"8d985530":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6bb9a957":"df = pd.read_csv('..\/input\/matches.csv')","6786a477":"#Selecting top 3 rows from the dataframe\ndf.head(3)","82379b19":"# Fetching number of rows in the dataframe\ndf.shape[0]","15af8b77":"df['winner'].sort_values().value_counts()","27804d37":"df.loc[df['winner'] == 'Rising Pune Supergiants', 'winner'] = 'Rising Pune Supergiant'\n#But we have to replace in other series as well like 'team1', 'team2',etc.\ndf[['team1','team2','toss_winner','winner']] = df[['team1','team2','toss_winner','winner']].apply(lambda val : val.str.replace('Rising Pune Supergiants','Rising Pune Supergiant') )","da28336f":"df['winner'].sort_values().value_counts()","e2c54cfa":"# Grouping the number of matched won by teams and sorting it based on the count of the matches.\nwinners_df = df.groupby('winner', sort = False).count().id.sort_values(ascending = False)\nwinners_df","1dbc1925":"# A simple plot for the winners.\nwinners_df.plot(kind = 'bar', title = 'Number of matches won in IPL', label = 'Number of wins' )","00dcacd1":"# case where team won the toss and also won the match\nwinning_toss_winning_match = df[(df['toss_winner'] == df['winner'])]","ef41fe72":"# cases where team won the toss but lost the match\nwinning_toss_losing_match = df[(df['toss_winner'] != df['winner'])]","308f8aca":"new_df = pd.DataFrame({\"Team won the toss\":[ winning_toss_winning_match.shape[0],winning_toss_losing_match.shape[0]  ]}, index = ['Won match', 'Lost match']  )","082378be":"#Let's plot the above obervations\nnew_df.plot( kind = 'bar' , legend = False , title = \"Number of time a team won the toss and the match result of that match\")","c9f5a867":"# Same as above, now we will check how many times team winning the toss and  batting first won and how many times team bowling first won\n# For this we have to check if the team won the toss and toss_decision is bat\/field and winning team is toss_winner\n# NOTE : in this type of analysis we are considering that the team has won the toss and its their decision to select to bat or bowl\nteam_batting_first_won = df.loc[(df['toss_winner'] == df['winner']) & (df['toss_decision'] == 'bat'), ['id', 'winner']]\nteam_fielding_first_won = df.loc[(df['toss_winner'] == df['winner']) & (df['toss_decision'] == 'field'),  ['id', 'winner']]","06e59c42":"team_fielding_first_won_df= team_fielding_first_won['winner'].value_counts()\nteam_batting_first_won_df = team_batting_first_won['winner'].value_counts()","b68c2496":"team_batting_first_won_df.plot(kind = 'bar', title = 'Team winning toss, batting first and winning the match.')","2b501913":"team_fielding_first_won_df.plot(kind = 'bar', title = 'Team winning toss, fielding first won the match. ')","be241380":"df['city'].value_counts()","f3259db0":"#Two ways to do the same\ndf.loc[df['city'] == 'Bangalore', 'city'] = 'Bengaluru'\n#Another way \n#Changing city name from Bangalore to Bengaluru\ndf['city'] = df['city'].str.replace('Bangalore','Bengaluru')","0f3c1938":"#Creating a dataframe, which holds the records where the match result is decided by \"Duckworth-Lewis method\".\nnew_df = df.loc[ df['dl_applied'] != 0 ,['id','team1','team2','toss_winner','toss_decision','dl_applied','winner']]","2ee8dee6":"# Now we have to create a new column to decide which team has batted first for each match. I am gonna create a function for it and apply \n# that function to the dataframe ***\n\ndef set_batting_first(team1, team2, toss_winner, toss_decision):\n    if toss_decision == 'bat':\n        return toss_winner\n    else:\n        if team1 == toss_winner:\n            return team2\n        else:\n            return team1  ","7addbe61":"for items in new_df.loc[: , ['team1','team2','toss_winner','toss_decision','bat_first']].itertuples():\n    new_df.loc[items[0] , 'bat_first'] = set_batting_first(items[1], items[2], items[3], items[4])","2eeeed5e":"#Now we are gonna create 1 more column named \"is_bat_first_win\" which will have 1 if the team batting first won and 0 if team batting 1 lost.\nnew_df['is_bat_first_win'] = 0\nnew_df.loc[new_df['bat_first'] == new_df['winner'],'is_bat_first_win'] = 1","fb9f2b69":"#Lets create a new dataframe with just two results as below.\ndl_bat_first_win = pd.DataFrame(new_df['is_bat_first_win'].value_counts())\ndl_bat_first_win.index = ['field_first_wins','bat_first_wins']","475dd880":"dl_bat_first_win.plot(kind = 'bar')","b0677894":"# New dataframe where DL method is not applied and win margin is 100 or more runs or more than 8 wickets.\nnew_df = df.loc[ (df['dl_applied'] == 0) & ((df['win_by_runs'] > 99) | (df['win_by_wickets'] > 8)) , ['id','team1','team2','winner','win_by_runs','win_by_wickets']]","5b0adf1d":"#creating a new column to track the losing team \nnew_df['losing_team'] = np.nan","f14e00dc":"# I will create a method to fetch the losing team from the dataframe\ndef check_losing_team(row):\n    if row['team1'] == row['winner']:\n        row['losing_team'] = row['team2']\n        return row['team2']\n    else:\n        row['losing_team'] = row['team1']\n        return row['team1']","59c6a651":"new_df['losing_team'] = new_df.apply(check_losing_team, axis = 1)","733fbf79":"new_df.losing_team.value_counts().plot(kind = 'bar', title = 'Number of times team losing with big margin')","44f46d63":"# number of times the playes got Man of the match\nmom_players = df.player_of_match.value_counts()","9062ee2a":"# we want to analyse only those players who got the award atleast 10 times\nmom_players[mom_players >= 10 ].plot(kind = 'bar', title = 'Number of times a player got Man of the Match')","d369f57b":"**Let's plot a simple bar graph for the above data.**","e7ecb830":"# **IPL Data Analysis Using Python Pandas**","89fef549":"**Let's analyse how \"Duckworth\u2013Lewis method\" affects result of match based on team batting first or bowling first.**","75523184":"**Let's do analysis on Number of times a player got the Man of the Match till 2017 edition of IPL.**","d91e75e7":"**A win margin of more than 100 runs or more than 8 wickets in T20 is considered huge. Let's do an analysis on how many occassion, a team has lost the match with more than 100 run or more than 8 tickets. NOTE : we are gonna ignore the matches in which \"Duckworth\u2013Lewis method\" is applied.**","43607bc6":"**Let's now find the numbers of wins for each team.**","43c71436":"**Below figure shows the number of times \"Duckworth\u2013Lewis method\" is applied and the team fielding first(or team batting second) won the match. This provided a direct connection between how \"Duckworth\u2013Lewis method\" favours team batting second, though the topic is still argued the most.**","02e1254b":"**Let's do another analysis**","a882dddd":"**Let's check then number of observations in the data.**","09286ce4":"**Little detail about IPL (Indian Premier League).\nThe Indian Premier League (IPL), officially Vivo Indian Premier League for sponsorship reasons, is a professional Twenty20 cricket league in India contested during April and May of every year by teams representing Indian cities and some states. The league was founded by the Board of Control for Cricket in India (BCCI) in 2008, and is regarded as the brainchild of Lalit Modi, the founder and former commissioner of the league. IPL has an exclusive window in ICC Future Tours Programme.\nThe IPL is the most-attended cricket league in the world and in 2014 ranked sixth by average attendance among all sports leagues. In 2010, the IPL became the first sporting event in the world to be broadcast live on YouTube. The brand value of IPL in 2018 was US Dollar 6.3 billion, according to Duff & Phelps. According to BCCI, the 2015 IPL season contributed \u20b911.5 billion (US Dollar 182 million) to the GDP of the Indian economy.\nThere have been eleven seasons of the IPL tournament. The current IPL title holders are the Chennai Super Kings, who won the 2018 season. The most successful franchises in the tournament are the Chennai Super Kings and Mumbai Indians with 3 tournament wins each.**","f63b332a":"**Let's check the number of matches each team won till now in the IPL history.**","147e0128":"**Did you notice that we have \"Rising Pune Supergiant\" 2 times in the above list. One with the name as \"Rising Pune Supergiant\" and other as \"Rising Pune Supergiants\". Let's cleanse the data by modifying the \"Rising Pune Supergiants\" to \"Rising Pune Supergiant\". Also, it can be present in other columns as well like 'team1', 'team2' , 'toss_winner'. Lets replace in all the columns at once. Though, it can be done in many ways, we will use the apply() function to do so.**","661d7232":"**Let's do some analysis on relation between winning the toss and the match. Let's find total number of times\/matches where a team won the toss and also won the match. Also, we will find the opposite as well. Number of times team won the toss and lost the match.**","33098f3a":"**Another way of doing the same as above, because we have id as primary key (meaning we have different id for each match).**","8c58d66f":"**From above analysis, we can say that there is no significant impact of toss on the match result.**\n\n**Now, there are discussion on team winning the toss and choosing to bat and bowl first. We will analyse which had more success with winning the toss and batting first and which team had more success when they choose to bowl first.**","369f07d2":"**If you see above data, we have Bangalore and Bengaluru which refers to the same city.So we will replace \"Banglaore\" which is the old name of the city \"Bengaluru\".**"}}