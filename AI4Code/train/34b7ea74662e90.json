{"cell_type":{"a8d59d4b":"code","2ee9e364":"code","d6c12e26":"code","30786c6b":"code","0cdeebc6":"code","91b947ad":"code","4491ce0b":"code","43bd2714":"code","831d848e":"code","4d3c6254":"code","0f4ed8d4":"code","e07f1810":"code","37b3b2bd":"code","e913a741":"code","438fbbbd":"code","e4cb13d7":"code","a066de0b":"code","48e25f46":"code","82575942":"code","23ffca0c":"code","cf2b12cf":"code","9e968b04":"markdown","64928fff":"markdown","362b97f2":"markdown","ed3773ad":"markdown","ae8afc39":"markdown","bbf776c5":"markdown","4ec8e1db":"markdown","26e24b06":"markdown","8ea13222":"markdown","de46e3ad":"markdown","3c018d72":"markdown","313cdcd1":"markdown","24bd54ec":"markdown"},"source":{"a8d59d4b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2ee9e364":"df=pd.read_csv('..\/input\/weatherww2\/Summary of Weather.csv')","d6c12e26":"df.head()","30786c6b":"df.info()","0cdeebc6":"df.shape","91b947ad":"sns.displot(data=df ,x='MinTemp',kde=True , bins=15)","4491ce0b":"sns.displot(data=df ,x='MaxTemp',kde=True , bins=15)","43bd2714":"X=df[['MinTemp']]\n\ny=df[['MaxTemp']]\n\nplt.scatter(X,y)","831d848e":"from sklearn.preprocessing import PolynomialFeatures\npolynomial_convert=PolynomialFeatures(degree=2,include_bias=False)\npoly_features=polynomial_convert.fit_transform(X)","4d3c6254":"X.shape","0f4ed8d4":"poly_features.shape","e07f1810":"from sklearn.model_selection import train_test_split\nX_train ,X_test ,y_train ,y_test =train_test_split(poly_features,y,test_size=0.3,random_state=101)","37b3b2bd":"from sklearn.linear_model import LinearRegression\npoly_model=LinearRegression()\npoly_model.fit(X_train, y_train)","e913a741":"y_pred=poly_model.predict(X_test)","438fbbbd":"from sklearn import metrics\nMAE_Poly = metrics.mean_absolute_error(y_test,y_pred)\nMSE_Poly = metrics.mean_squared_error(y_test,y_pred)\nRMSE_Poly = np.sqrt(MSE_Poly)\n\npd.DataFrame([MAE_Poly, MSE_Poly, RMSE_Poly], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","e4cb13d7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nmodel=LinearRegression()\nmodel.fit(X_train , y_train)\ny_pred=model.predict(X_test)\nfrom sklearn import metrics\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","a066de0b":"train_RMSE_list=[]\ntest_RMSE_list=[]\nfor d in range(1,10):\n    \n    polynomial_converter= PolynomialFeatures(degree=d, include_bias=False)\n    poly_features= polynomial_converter.fit_transform(X)\n    \n    \n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n\n    polymodel=LinearRegression()\n    polymodel.fit(X_train, y_train)\n\n    y_train_pred=polymodel.predict(X_train)\n    y_test_pred=polymodel.predict(X_test)\n    \n   \n    train_RMSE=np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))\n    \n\n    test_RMSE=np.sqrt(metrics.mean_squared_error(y_test, y_test_pred))\n    \n  \n    train_RMSE_list.append(train_RMSE)\n    test_RMSE_list.append(test_RMSE)","48e25f46":"train_RMSE_list","82575942":" test_RMSE_list","23ffca0c":"plt.plot(range(1,10), train_RMSE_list, label='Train RMSE')\nplt.plot(range(1,10), test_RMSE_list, label='Test RMSE')\nplt.legend()","cf2b12cf":"Final_polynomial_converter= PolynomialFeatures(degree=9, include_bias=False)\n\nFinal_poly_features= Final_polynomial_converter.fit_transform(X)\n\nX_train, X_test, y_train, y_test = train_test_split(Final_poly_features, y, test_size=0.3, random_state=101)\n\nFinal_PolyModel=LinearRegression()\nFinal_PolyModel.fit(X_train, y_train)","9e968b04":"Compare to the simple linear regression:","64928fff":"Step7: Split the Data to Train & Test","362b97f2":"Step10: Evaluating the Model","ed3773ad":"Step2: Import the Dataset","ae8afc39":"Step8: Train the Model","bbf776c5":"Step9: Predicting Test Data","4ec8e1db":"Step11: Adjusting Model Parameters","26e24b06":"Step4: EDA","8ea13222":"Step3: Data Overview","de46e3ad":"Step1: Import all necessary Libraries","3c018d72":"Step5: Determine the Features & Target Variable","313cdcd1":"Step6: Preprocessing","24bd54ec":"#polynomial regression"}}