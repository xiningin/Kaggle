{"cell_type":{"bf2d6c33":"code","1274346c":"code","06bfdd76":"code","11b41eaf":"code","2262ced8":"code","48fb998a":"code","f66243f1":"code","86e152bd":"markdown","dbb2b960":"markdown","8a23e91c":"markdown","8872e814":"markdown","db6de6c9":"markdown","e3a2177d":"markdown"},"source":{"bf2d6c33":"import pandas as pd","1274346c":"df = pd.read_csv(\"..\/input\/seoul-bike-trip-duration-prediction\/For_modeling.csv\")\ndf.head()","06bfdd76":"pd.set_option('display.max_columns', None)\n\n# Shuffling dataframe rows\ndf = df.sample(frac = 1)\n\n# Dropping irrelevant columns\ndf = df.drop([\"Unnamed: 0\"], axis = 1)\n\ndf.head()","11b41eaf":"scores = []\n\nfor i in range(0, 5):\n    # Columns used as predictors\n    X = df.drop([\"Duration\"], axis = 1).values\n    # Column used as output\/ prediction\n    y = df[\"Duration\"].values\n    \n    # Train Test Split\n    from sklearn.model_selection import train_test_split\n    \n    X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0, test_size = 0.2)\n    \n    # Multiple Linear Regression\n    from sklearn.linear_model import LinearRegression\n    \n    model = LinearRegression()\n    model.fit(X_train, y_train)\n    \n    scores.append(model.score(X_test, y_test)) # Calculating R2 score\n\nprint(sum(scores) \/ len(scores))","2262ced8":"y_hat = model.predict(X_test)\n\ncomparison = pd.DataFrame({'y' : y_test, 'y_hat' : y_hat})\n\ncomparison","48fb998a":"from sklearn.preprocessing import PolynomialFeatures\n\npf = PolynomialFeatures(degree = 2, include_bias = False)\n\npf.fit(X_train)\n#print(pf.powers_)\n\nX_train_transformed = pf.transform(X_train)\nX_test_transformed = pf.transform(X_test)\n\nfrom sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()\nmodel.fit(X_train_transformed, y_train)\n\nprint(model.score(X_test_transformed, y_test)) # Printing R2 score","f66243f1":"y_hat_poly = model.predict(X_test)\n\ncomparison_poly = pd.DataFrame({'y' : y_test, 'y_hat' : y_hat_poly})\n\ncomparison_poly","86e152bd":"#### Applying Multiple Linear Regression","dbb2b960":"#### Applying Polynomial Regression","8a23e91c":"# Bike Trip Duration Prediction","8872e814":"#### Comparing y to y_hat","db6de6c9":"#### Loading and Displaying data","e3a2177d":"#### Pre-Cleaning data"}}