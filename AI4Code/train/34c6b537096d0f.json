{"cell_type":{"33f91495":"code","0e72f47b":"code","00d69a36":"code","1e499867":"code","3bc5c7a3":"code","2f39bbec":"code","ccca71c9":"code","7b483f94":"code","885de965":"code","aefcede4":"code","8de8381a":"markdown","6d2f0d7b":"markdown","d8898604":"markdown","87fc565d":"markdown"},"source":{"33f91495":"### This is a fork of https:\/\/www.kaggle.com\/david1013\/tunable-baseline-bot\n\n\n##  Any upvotes below to his original notebook.","0e72f47b":"%%writefile submission.py\n\n## TUNABLE BASELINE BOT\n\n# Tune Here:\nSPRINT_RANGE = 0.6\n\nSHOT_RANGE_X = 0.7  \nSHOT_RANGE_Y = 0.2\n\nGOALIE_OUT = 0.2\nLONG_SHOT_X = 0.4\nLONG_SHOT_Y = 0.2\n","00d69a36":"# Install:\n# Kaggle environments.\n!git clone --quiet https:\/\/github.com\/Kaggle\/kaggle-environments.git\n!cd kaggle-environments && pip install -q .\n\n# GFootball environment.\n!apt-get -qq update -y\n!apt-get -qq install -y libsdl2-gfx-dev libsdl2-ttf-dev\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone --quiet -b v2.3 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget -q https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install -q .\n","1e499867":"%%writefile -a submission.py\n\nfrom kaggle_environments.envs.football.helpers import *\nfrom math import sqrt\n\ndirections = [\n[Action.TopLeft, Action.Top, Action.TopRight],\n[Action.Left, Action.Idle, Action.Right],\n[Action.BottomLeft, Action.Bottom, Action.BottomRight]]\n\ndirsign = lambda x: 1 if abs(x) < 0.01 else (0 if x < 0 else 2)\n\nenemyGoal = [1, 0]\nGOALKEEPER = 0\n","3bc5c7a3":"%%writefile -a submission.py\n\nshot_range = [[SHOT_RANGE_X, 1], [-SHOT_RANGE_Y, SHOT_RANGE_Y]]\n","2f39bbec":"%%writefile -a submission.py\n\ndef inside(pos, area):\n    return area[0][0] <= pos[0] <= area[0][1] and area[1][0] <= pos[1] <= area[1][1]","ccca71c9":"%%writefile -a submission.py\n\n@human_readable_agent\ndef agent(obs):\n    controlled_player_pos = obs['left_team'][obs['active']]\n    \n    if obs[\"game_mode\"] == GameMode.Penalty:\n        return Action.Shot\n    if obs[\"game_mode\"] == GameMode.Corner:\n        if controlled_player_pos[0] > 0:\n            return Action.Shot\n    if obs[\"game_mode\"] == GameMode.FreeKick:\n        return Action.Shot\n    \n    # Make sure player is running down the field.\n    if  0 < controlled_player_pos[0] < SPRINT_RANGE and Action.Sprint not in obs['sticky_actions']:\n        return Action.Sprint\n    elif SPRINT_RANGE < controlled_player_pos[0] and Action.Sprint in obs['sticky_actions']:\n        return Action.ReleaseSprint\n\n    # If our player controls the ball:\n    if obs['ball_owned_player'] == obs['active'] and obs['ball_owned_team'] == 0:\n        \n        if inside(controlled_player_pos, shot_range) and controlled_player_pos[0] < obs['ball'][0]:\n            return Action.Shot\n        \n        elif ( abs(obs['right_team'][GOALKEEPER][0] - 1) > GOALIE_OUT   \n                and controlled_player_pos[0] > LONG_SHOT_X and abs(controlled_player_pos[1]) < LONG_SHOT_Y ):\n            return Action.Shot\n        \n        else:\n            xdir = dirsign(enemyGoal[0] - controlled_player_pos[0])\n            ydir = dirsign(enemyGoal[1] - controlled_player_pos[1])\n            return directions[ydir][xdir]\n        \n    # if we we do not have the ball:\n    else:\n        # Run towards the ball.\n        xdir = dirsign(obs['ball'][0] - controlled_player_pos[0])\n        ydir = dirsign(obs['ball'][1] - controlled_player_pos[1])\n        return directions[ydir][xdir]","7b483f94":"#Test the agent","885de965":"import os\nimport sys \nsys.path.append(os.path.abspath(\"\/kaggle_simulations\/agent\/\"))\nimport submission","aefcede4":"from kaggle_environments import make\nenv = make(\"football\", \n           debug=True,\n           configuration={\"save_video\": True, \n                          \"scenario_name\": \"11_vs_11_kaggle\", \n                          \"running_in_notebook\": True,\n                          #\"actTimeout\": 30,\n                         })  \noutput = env.run([submission.agent, \"\/kaggle_simulations\/agent\/submission.py\"])[-1]\nprint('Left player: reward = %s, status = %s, info = %s' % (output[0]['reward'], output[0]['status'], output[0]['info']))\nprint('Right player: reward = %s, status = %s, info = %s' % (output[1]['reward'], output[1]['status'], output[1]['info']))\nenv.render(mode=\"human\", width=800, height=600)","8de8381a":"### Agent","6d2f0d7b":"### Tunable Parameters","d8898604":"# Tunable Baseline Bot","87fc565d":"### Install"}}