{"cell_type":{"753a3e93":"code","ad83145a":"code","87ca41a5":"code","0409057e":"code","3249945d":"code","e2f4dced":"code","f81f5211":"code","bfcca1cd":"code","b608b697":"code","1131e604":"code","0ae2a162":"code","bc993185":"code","f9e252a3":"code","6f49e3dc":"code","7977fecc":"code","afbfac87":"markdown","97a21575":"markdown","0ce755f0":"markdown","ab544036":"markdown","d432ed6f":"markdown","a16dd187":"markdown"},"source":{"753a3e93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad83145a":"import seaborn as sns #data visalization\n%matplotlib inline ","87ca41a5":"# we load our tips dataset from seaborn\ntips = sns.load_dataset('tips')\n# we can check the first 5 values of our dataset\ntips.head()","0409057e":"# we do the same for flights dataset\nflights = sns.load_dataset('flights')\nflights.head()","3249945d":"## first we can convert the tips dataset into matrix form with data correlation\ntc = tips.corr()","e2f4dced":"# we can have our first matrix plot for tips correlation\nsns.heatmap(tc)","f81f5211":"## you can aslo add the annotations\n## it annotates the actual numerical values that belong to the cell\nsns.heatmap(tc, annot=True)","bfcca1cd":"## you can also change the colormap\nsns.heatmap(tc, annot=True, cmap='viridis')","b608b697":"# since the data is currently not in matrix form we can convert it into a matrix form by making a pivot table\nfp = flights.pivot_table(index='month',columns='year',values='passengers')","1131e604":"fp.head()","0ae2a162":"# we can have our heatmap\nsns.heatmap(fp)","bc993185":"# we can change the color map again\nsns.heatmap(fp, cmap='viridis')","f9e252a3":"# we can add line colors and linewidth to make our separate our cells and make distinguishable\nsns.heatmap(fp, linecolor='white', linewidths=3)","6f49e3dc":"sns.clustermap(fp)","7977fecc":"## We can also normalize the scale by passing the standard_scale argument\nsns.clustermap(fp, cmap='viridis', standard_scale=1)","afbfac87":"Yo can also have some cluster plots. we get our data with small hierarchal clusters. This basically tries to cluster rows and columns together based off their similarity.","97a21575":"# **Thank you!\n## Hope you enjoyed going through my code**","0ce755f0":"We can have our second matrix plot example using the flights dataset","ab544036":"we look at heat maps which are primarily our matrices. In order for our heat maps to work properly our data should be in a matrix form.","d432ed6f":"## **Distribtion plots**","a16dd187":"distribution plots are plots that are used to help in plotting the distribution of data"}}