{"cell_type":{"1d4b278d":"code","2b3056ec":"code","055e356e":"code","b2d87def":"code","f6f4c828":"code","f6163284":"code","81a9cbc0":"code","1659afcb":"code","44495e90":"code","dfad3488":"code","414fad15":"code","b04514e5":"code","21b4fa51":"code","7804ffe3":"code","6bd8a170":"code","c97bd235":"code","e4e275eb":"code","de82d90a":"code","54cb0acf":"code","e322879e":"code","766c72f1":"code","7bdb3376":"code","7491f795":"code","343e804b":"code","88d2766d":"markdown","dae0cf18":"markdown","9cfa5f99":"markdown","f29a6d99":"markdown","40684d0a":"markdown","7889cd44":"markdown","197ccbbe":"markdown","68604c80":"markdown","58df95fb":"markdown","933d17cc":"markdown","ac074adb":"markdown","483b414f":"markdown","e8b2b217":"markdown","33c9404a":"markdown","4f9481af":"markdown","7f51c3fa":"markdown","b6fbd1d3":"markdown","1c7d2f47":"markdown","0693192a":"markdown","e8818d42":"markdown","26f930c5":"markdown","d68560a2":"markdown","bce3750f":"markdown","f7b3a687":"markdown"},"source":{"1d4b278d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b3056ec":"import pandas as pd #reading files, dealing with tabular representation of data\nimport numpy as np #dealing with numpy array functions\nimport seaborn as sns #visualisation\nimport matplotlib.pyplot as plt #visualisation\nimport missingno as msno # visualisation of missing values in the form of visual matrix\n%matplotlib inline \nsns.set(color_codes=True)\n\n# Manage warnings\nimport warnings\nwarnings.filterwarnings('ignore')","055e356e":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\n# To display the top 5 rows\ndf.head(5)","b2d87def":"# checking the datatypes\ndf.dtypes","f6f4c828":"print('-----------------------------------------------------------------------------------------------------------')\nprint(f'This dataset contains Bestselling Books from {df.Year.min()} to {df.Year.max()}.')\nprint('-----------------------------------------------------------------------------------------------------------\\n')\ndf.info()","f6163284":"print(df.isnull().sum()) #summing up all the rows having missing values corresponding to their columns\nmsno.matrix(df, figsize=(12,6))\nplt.show","81a9cbc0":"df.describe(include='O')","1659afcb":"# But a same book could be sold at a different price in the coming years. So we must keep the final values.\nprint(f'Before: {df.shape}')\ndf=df.drop_duplicates(subset='Name',keep='last')\nprint(f'After: {df.shape}')","44495e90":"sns.distplot(df['User Rating'])","dfad3488":"sns.distplot(df['Reviews'])","414fad15":"sns.distplot(df['Price'])","b04514e5":"# Splitting the data into Fiction and Non-Fiction\nFiction = df[df['Genre'] == 'Fiction']\nNon_Fiction = df[df['Genre'] == 'Non Fiction']","21b4fa51":"Top_Fiction = Fiction.groupby('Author')[['Name']].count().sort_values(by='Name', ascending=False).reset_index()\nTop_10_Fiction_Auth = Top_Fiction.head(10)\nTop_10_Fiction_Auth","7804ffe3":"Top_Non_Fiction = Non_Fiction.groupby('Author')[['Name']].count().sort_values(by='Name', ascending=False).reset_index()\nTop_10_Non_Fiction_Auth = Top_Non_Fiction.head(10)\nTop_10_Non_Fiction_Auth","6bd8a170":"plt.figure(figsize=(28,7))\nplt.subplot(1,2,1)\nplt.barh(Top_10_Fiction_Auth['Author'], Top_10_Fiction_Auth['Name'])\nplt.title('Top 10 books by # of best-sellers (Fiction)',fontweight='bold',fontsize=18)\nplt.xlabel('No. of Bestsellers',fontweight='bold')\nplt.ylabel('Authors',fontweight='bold')\nplt.subplot(1,2,2)\nplt.barh(Top_10_Non_Fiction_Auth['Author'], Top_10_Non_Fiction_Auth['Name'])\nplt.ylabel('Authors',fontweight='bold')\nplt.xlabel('No. of Bestsellers',fontweight='bold')\nplt.title('Top 10 books by # of best-sellers (Non-Fiction)',fontweight='bold',fontsize=18)\nplt.show","c97bd235":"Top_Review_Book_Fiction = Fiction.groupby('Name')[['Reviews']].agg(np.mean).sort_values(by='Reviews',ascending=False).reset_index()\nTop_10_Review_Book_Fiction = Top_Review_Book_Fiction.head(10)\nTop_10_Review_Book_Fiction","e4e275eb":"Top_Review_Book_Non_Fiction = Non_Fiction.groupby('Name')[['Reviews']].agg(np.mean).sort_values(by='Reviews',ascending=False).reset_index()\nTop_10_Review_Book_Non_Fiction = Top_Review_Book_Non_Fiction.head(10)\nTop_10_Review_Book_Non_Fiction","de82d90a":"plt.figure(figsize=(15,20))\nplt.subplot(2,1,1)\nplt.barh(Top_10_Review_Book_Fiction['Name'], Top_10_Review_Book_Fiction['Reviews'])\nplt.title('Top 10 books by # of best-sellers (Fiction)',fontweight='bold',fontsize=18)\nplt.xlabel('No. of Reviews',fontweight='bold')\nplt.ylabel('Book Name',fontweight='bold')\nplt.subplot(2,1,2)\nplt.barh(Top_10_Review_Book_Non_Fiction['Name'], Top_10_Review_Book_Non_Fiction['Reviews'])\nplt.ylabel('Book Name',fontweight='bold')\nplt.xlabel('No. of Reviews',fontweight='bold')\nplt.title('Top 10 books by # of best-sellers (Non-Fiction)',fontweight='bold',fontsize=18)\nplt.show","54cb0acf":"Top_Review_Book = df.groupby('Name')[['Reviews']].agg(np.mean).sort_values(by='Reviews',ascending=False).reset_index()\nTop_10_Review_Book = Top_Review_Book.head(10)\nTop_10_Review_Book","e322879e":"plt.barh(Top_10_Review_Book['Name'], Top_10_Review_Book['Reviews'])\nplt.title('Top 10 books by # of reviews (Overall)',fontweight='bold',fontsize=18)\nplt.xlabel('No. of Reviews',fontweight='bold')\nplt.ylabel('Authors',fontweight='bold')","766c72f1":"plt.pie(df['Genre'].value_counts(),labels=['Non Fiction','Fiction'],autopct='%.1f%%')","7bdb3376":"sns.boxplot(df['Year'],df['Reviews'])","7491f795":"# Kendall's Rank Correlation for User Rating and Reviews\nfrom scipy.stats import kendalltau\nstat, p = kendalltau(df['User Rating'],df['Reviews'])\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Probably User Rating and Reviews are independent')\nelse:\n    print('Probably User Rating and Reviews are dependent')","343e804b":"# Kendall's Rank Correlation for User Rating and Price\nfrom scipy.stats import kendalltau\nstat, p = kendalltau(df['User Rating'],df['Price'])\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Probably User Rating and Price are independent')\nelse:\n    print('Probably User Rating and Price are dependent')","88d2766d":"# ***Importing relevant libraries and data***","dae0cf18":"# ***Correlation Testing***","9cfa5f99":"**Source-** https:\/\/www.kaggle.com\/sootersaalu\/amazon-top-50-bestselling-books-2009-2019\n\n**Description-** Dataset on Amazon's Top 50 bestselling books from 2009 to 2019. Contains 550 books, data has been categorized into fiction and non-fiction using Goodreads\n\n**Columns- **\n1. Name\n2. Author\n3. User Rating\n4. Reviews\n5. Price\n6. Year\n7. Genre\n","f29a6d99":"# 5.) Which Year saw the most reviews?","40684d0a":"# 2.) Which book has the most reviews? (top 10 books, genre wise)","7889cd44":"# ***Data cleaning\/manipulation***","197ccbbe":"# Useful Links to visit.\n\n1. https:\/\/www.kaggle.com\/muladpham\/amazon-top-50-bestselling-books-moransbook\/notebook\n\n2. https:\/\/www.kaggle.com\/ivannatarov\/amazon-s-books-eda-plotly-hypothesis-test\/notebook\n\n3. https:\/\/www.python-graph-gallery.com\/\n\n4. https:\/\/machinelearningmastery.com\/statistical-hypothesis-tests-in-python-cheat-sheet\/","68604c80":"# Table of contents:\n    1. Data Insights\n    2. Questions to address            \n    3. Importing relevant libraries and data\n    4. Data cleaning\/manipulation\n    5. Exploratory Data Analytics\n    6. Correlation Testing\n    7. References","58df95fb":"***Non-Fiction*** genre sold the most books from 2009-2019 ***by 54.4%.***","933d17cc":"Checking the distribution of various parameters","ac074adb":"# 7.) Are user rating and price related?","483b414f":"# 6.) Are user rating and reviews related?","e8b2b217":"Year ***2014*** saw the ***most number of reviews.***","33c9404a":"# ***Dataset Insights***","4f9481af":"# 1. What are the Top 10 Bestselling Authors having highest bestselling books? (genre wise)","7f51c3fa":"# ***Exploratory Data Analytics***","b6fbd1d3":"So no data cleaning is required","1c7d2f47":"# 3.) Which book has the most reviews? (overall)","0693192a":"# ***References***","e8818d42":"# 4.) Which Genre sold the most between 2009-2019?","26f930c5":"# **Basic EDA: Amazon Top 50 Bestselling Books [Adi's Book]**","d68560a2":"Clearly the book ***\"Where the Crawdads Sing\"*** with ***87841 reviews*** has the highest number of reviews overall.","bce3750f":"# ***Questions to address***\n\n1.) What are the Top 20 Bestselling Authors having highest bestselling books? (genre wise)\n\n2.) Which book has the most reviews? (top 10 books, genre wise)\n\n3.) Which book has the most reviews? (overall)\n\n4.) Which Genre sold the most between 2009-2019?\n\n5.) Which Year saw the most reviews?\n\n(Correlation Testing)\n\n6.) Are user rating and reviews related?\n\n7.) Are user rating and price related?","f7b3a687":"![https:\/\/i.guim.co.uk\/img\/media\/c72db316049112ebb6c4997889a15c5b7706a861\/0_182_5472_3283\/master\/5472.jpg?width=620&quality=85&auto=format&fit=max&s=49220534c638eafbc34e5aa07de0a240](http:\/\/)"}}