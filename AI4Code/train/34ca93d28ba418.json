{"cell_type":{"9641ae8c":"code","649d3875":"code","abfdd5a0":"code","39cef017":"code","b524d691":"code","311ecfd3":"code","90db1cd6":"code","319d85c0":"code","0f15e568":"code","4b1143c7":"code","3b4d80f7":"code","2eb3d87c":"code","59b9db78":"markdown","97d939bb":"markdown","e6e24479":"markdown"},"source":{"9641ae8c":"import tensorflow as tf\nimport numpy as np\nfrom tensorflow import keras\nimport os\nimport cv2\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing import image","649d3875":"train = ImageDataGenerator(rescale=1\/255)#rescale the image such that their pixel values are normalized b\/w 0 and 1\/\ntest = ImageDataGenerator(rescale=1\/255)\n\n\ntrain_dataset= train.flow_from_directory('..\/input\/mountains-and-beaches-dataset\/places' , target_size=(150,150),batch_size=32, class_mode = 'binary')\n\ntest_dataset= train.flow_from_directory('..\/input\/mountains-and-beaches-dataset\/places' , target_size=(150,150),batch_size=32, class_mode = 'binary')","abfdd5a0":"test_dataset.class_indices","39cef017":"model = keras.Sequential()\n\n# convolutional layer and maxpool layer 1 \nmodel.add(keras.layers.Conv2D(32,(3,3), activation='relu', input_shape=(150,150,3)))\nmodel.add(keras.layers.MaxPool2D(2,2))\n\n# convolutional layer and maxpool layer 2\nmodel.add(keras.layers.Conv2D(64,(3,3), activation='relu'))\nmodel.add(keras.layers.MaxPool2D(2,2))\n\n# convolutional layer and maxpool layer 3\nmodel.add(keras.layers.Conv2D(128,(3,3), activation='relu'))\nmodel.add(keras.layers.MaxPool2D(2,2))\n\n\n# convolutional layer and maxpool layer 4\nmodel.add(keras.layers.Conv2D(128,(3,3), activation='relu'))\nmodel.add(keras.layers.MaxPool2D(2,2))\n\n\nmodel.add(keras.layers.Flatten())\n\n\nmodel.add(keras.layers.Dense(512, activation='relu'))\n\n\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))","b524d691":"model.compile(optimizer='adam',loss='binary_crossentropy', metrics=['accuracy'])","311ecfd3":"model.fit(train_dataset, steps_per_epoch=250,epochs=10,validation_data=test_dataset)","90db1cd6":"def predictImage(filename):\n    img1= image.load_img(filename,target_size=(150,150))\n    \n    plt.imshow(img1)\n    \n    Y=image.img_to_array(img1)\n    \n    X=np.expand_dims(Y,axis=0)\n    val= model.predict(X)\n    print(val)\n    if val==1:\n        \n        plt.xlabel(\"mountain\",fontsize=30)\n        \n    elif val ==0:\n        \n        plt.xlabel(\"beaches\",fontsize=30)","319d85c0":"predictImage(r\"..\/input\/mountains-and-beaches-dataset\/places\/mountain\/gsun_00451e42c8fcf22ceea3b36b8aaff5d0.jpg\")","0f15e568":"predictImage(\"..\/input\/mountains-and-beaches-dataset\/places\/beach\/gsun_00c45d46c9b3ae56d6f011a80788f13b.jpg\")","4b1143c7":"predictImage(\"..\/input\/mountains-and-beaches-dataset\/places\/mountain\/gsun_025d399c00647aafd0fefb82281ffe9a.jpg\")","3b4d80f7":"predictImage(\"..\/input\/mountains-and-beaches-dataset\/places\/beach\/gsun_01beea0012988ab25fe09fa2a0692219.jpg\")","2eb3d87c":"# Able to classify the image but not having any idea on how to differntiate class. Learning on that part. Soon upload the 2nd version of this code.","59b9db78":"# Importing the Libraries","97d939bb":"**Defining our CNN Model Layers**","e6e24479":"# Create the following objects"}}