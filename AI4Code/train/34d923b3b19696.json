{"cell_type":{"3087ff3e":"code","7a778d4a":"code","c1a06be9":"code","002aaace":"code","4ddad92c":"code","e269f761":"code","9117098c":"code","2cd95567":"code","917eca76":"code","930556d6":"code","4a6b5496":"code","b23ac899":"code","67b12e1b":"code","a803c762":"code","0a268fd3":"code","a5565498":"code","8c10f817":"code","fc0f1e24":"code","ce195e73":"markdown","a2bcf63a":"markdown","0e408b19":"markdown","f36202a5":"markdown","d70886bb":"markdown","608e2b30":"markdown","5e15ec0f":"markdown","865c1554":"markdown","a3b81374":"markdown","e348e6f8":"markdown","58dc982d":"markdown","dd54b6c5":"markdown","a7468164":"markdown","92f0614e":"markdown","f25d93d1":"markdown","e402c1a7":"markdown","5a5a9e10":"markdown","545a89a6":"markdown","802373ee":"markdown","41303e6a":"markdown"},"source":{"3087ff3e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7a778d4a":"df = pd.read_csv(\"..\/input\/winequality-red.csv\")\ndf.head(3)","c1a06be9":"quality = df[\"quality\"].values\ncategory = []\nfor num in quality:\n    if num<5:\n        category.append(\"Bad\")\n    elif num>6:\n        category.append(\"Good\")\n    else:\n        category.append(\"Mid\")","002aaace":"#Create new data\ncategory = pd.DataFrame(data=category, columns=[\"category\"])\ndata = pd.concat([df,category],axis=1)\ndata.drop(columns=\"quality\",axis=1,inplace=True)","4ddad92c":"data.head(3)","e269f761":"plt.figure(figsize=(10,6))\nsns.countplot(data[\"category\"],palette=\"muted\")\ndata[\"category\"].value_counts()","9117098c":"plt.figure(figsize=(12,6))\nsns.heatmap(df.corr(),annot=True)","2cd95567":"plt.figure(figsize=(12,6))\nsns.barplot(x=df[\"quality\"],y=df[\"alcohol\"],palette=\"Reds\")","917eca76":"plt.figure(figsize=(12,6))\nsns.jointplot(y=df[\"density\"],x=df[\"alcohol\"],kind=\"hex\")","930556d6":"X= data.iloc[:,:-1].values\ny=data.iloc[:,-1].values","4a6b5496":"from sklearn.preprocessing import LabelEncoder\nlabelencoder_y =LabelEncoder()\ny= labelencoder_y.fit_transform(y)","b23ac899":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2,random_state=0)","67b12e1b":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","a803c762":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train,y_train)\npred_svc =svc.predict(X_test)","0a268fd3":"from sklearn.metrics import classification_report,accuracy_score\nprint(classification_report(y_test,pred_svc))","a5565498":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=250)\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)\nprint(classification_report(y_test, pred_rfc))","8c10f817":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\nknn.fit(X_train,y_train)\npred_knn=knn.predict(X_test)\nprint(classification_report(y_test, pred_knn))","fc0f1e24":"conclusion = pd.DataFrame({'models': [\"SVC\",\"Random Forest\",\"KNN\"],\n                           'accuracies': [accuracy_score(y_test,pred_svc),accuracy_score(y_test,pred_rfc),accuracy_score(y_test,pred_knn)]})\nconclusion","ce195e73":"\n**\nHello kagglers!  Here is my first project. ** \n\n\n* **In this data, I classified wine qualities into 3 categories as good, mid and bad.  Then, I explored the new data with data visualization libraries.** \n\n* **For prediction I used K-Nearest Neighbors, Support Vector Machine and Random Forest models.** \n\n* **For conclusion, I matched accuracy scores according to model prediction ratios**\n","a2bcf63a":"**Scaling the data for optimise predictions**","0e408b19":"## Introduction","f36202a5":"> **Please leave me a comment and upvote the kernel if you liked at the end.**","d70886bb":"**Classify The Quality**","608e2b30":"## Conclusion\n\n**Time to match the results!**","5e15ec0f":"** Setting features, labels and\nEncoding the categorical data**\n\n**[](http:\/\/)(good=1, med=2, bad=3)**","865c1554":"## Exploratory Data Analysis\n\n**Let's explore the data!**\n\n___\n**Here I counted the number of each class and checked correlation of the columns**","a3b81374":"## CHEERS!","e348e6f8":"![](http:\/\/media-cdn.tripadvisor.com\/media\/photo-s\/10\/28\/86\/6f\/wine-cheers.jpg)","58dc982d":"## Training the Model and Predicting the Test Data \n\nNow its time to train our models on our training data and predict each of them!","dd54b6c5":"**Get The Data**","a7468164":"**As a result, we can see Random Forest model has the best accurary ratio for predicting our wine quality!**\n\n**On the other hand, we can evaluate the model. I will work on it as soon as possible too.**\n\n**Thank you for your time and attention! Please leave me a comment and upvote the kernel if you liked.**\n\n**Also I'm sorry for grammar mistakes.**","92f0614e":"**Basic Imports**","f25d93d1":"![](http:\/\/www.excelenciasgourmet.com\/sites\/default\/files\/styles\/slideshow_large\/public\/2017-12\/vinos_0.jpg?itok=id8HxL6E)","e402c1a7":"## K-Nearest Neighbors","5a5a9e10":"**According to heatmap, we can focus on alcohol-quality and density-alcohol relations to get meaningful exploration**","545a89a6":"## Training and Testing Data\n**Now that we've explored the data a bit, let's go ahead and split the data into training and testing sets.**","802373ee":"## Support Vector Machine","41303e6a":"## Random Forest"}}