{"cell_type":{"99e42800":"code","5e71ed9c":"code","52279c66":"code","76306e1c":"code","ec113fc7":"code","f28b9331":"code","d35cd049":"code","a540c8a1":"code","5b9c0c04":"code","2928a575":"code","50114a3a":"code","882586dc":"code","a13fc208":"code","635054b7":"code","9e045f4c":"code","163e5a86":"code","4e9d8b3b":"code","2e7251f5":"code","76e45043":"code","380f18b1":"code","65e5163d":"code","ef2e56d1":"code","0e75dd21":"code","16446943":"code","2739dbb5":"code","bef58847":"code","58021f76":"code","6c9ced95":"code","b8ae6fa6":"code","155701cf":"code","187b1445":"code","eb2866af":"code","1dd13e37":"code","9f01d07c":"code","84371866":"code","37c16ca1":"markdown","f88a45ca":"markdown","a93ff3d4":"markdown","3f891657":"markdown","db9a7b19":"markdown","ae9a5ce7":"markdown","6a0e6e21":"markdown","580da401":"markdown","c6d1bb71":"markdown","9e73215c":"markdown","9d4998ef":"markdown","d5ef79f8":"markdown","1c3a6e2a":"markdown","b29bc126":"markdown","a75ed04a":"markdown"},"source":{"99e42800":"import pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt \n%matplotlib inline ","5e71ed9c":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndata.head()","52279c66":"data.columns","76306e1c":"data.describe()","ec113fc7":"data.info()","f28b9331":"data.isnull().sum()","d35cd049":"data = data.set_index('id')\ndata.drop('Unnamed: 32', axis=1, inplace=True)","a540c8a1":"data.head()","5b9c0c04":"data.shape","2928a575":"sns.countplot(x='diagnosis',hue='diagnosis',data=data, palette='RdBu_r')\nM, B = data.diagnosis.value_counts()\nprint('Number of Benign: ',B)\nprint('Number of Malignant : ',M)\nprint('Percentage of Benign: ',B\/(B+M)*100)\nprint('Number of Malignant : ',M\/(B+M)*100)","50114a3a":"figsize = plt.figure(figsize=(20,14))\nsns.heatmap(data.corr(),annot=True,cmap='viridis')\n","882586dc":"from sklearn.preprocessing import LabelEncoder","a13fc208":"encoder = LabelEncoder()\ndata.diagnosis = encoder.fit_transform(data.diagnosis)","635054b7":"data.head()","9e045f4c":"from sklearn.model_selection import train_test_split","163e5a86":"X = data.drop('diagnosis',axis=1)\ny = data['diagnosis']","4e9d8b3b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","2e7251f5":"from sklearn.preprocessing import StandardScaler","76e45043":"scaler = StandardScaler()","380f18b1":"X_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)","65e5163d":"from sklearn.ensemble import RandomForestClassifier","ef2e56d1":"rfc = RandomForestClassifier(n_estimators = 200)","0e75dd21":"rfc.fit(X_train, y_train)\n","16446943":"rfc_prediction = rfc.predict(X_test)","2739dbb5":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score","bef58847":"print('Accuracuy Score:\\n')\nprint(accuracy_score(y_test, rfc_prediction))","58021f76":"print('Confusion Matrix:\\n')\nprint(confusion_matrix(y_test, rfc_prediction))","6c9ced95":"print('Classifition Report:\\n')\nprint(classification_report(y_test, rfc_prediction))","b8ae6fa6":"from sklearn.svm import SVC","155701cf":"svc = SVC()","187b1445":"svc.fit(X_train, y_train)","eb2866af":"svc_prediction = svc.predict(X_test)","1dd13e37":"print('Accuracuy Score:\\n')\nprint(accuracy_score(y_test, svc_prediction))","9f01d07c":"print('Confusion Matrix:\\n')\nprint(confusion_matrix(y_test, svc_prediction))","84371866":"print('Classifition Report:\\n')\nprint(classification_report(y_test, svc_prediction))","37c16ca1":"# Machine Learning Algorithm on Brest Cancer Dataset","f88a45ca":"In this Notebook, I'm going to use two types of Classification Models\n\n* Random Forest Classifier\n* Support Vector Classifier\n\nTo check which has the best Accuracy Scores","a93ff3d4":"**In this case Support Vector Classifier Random Forest Classifier achieve the best Accuracy with 98% with respect to Random Forest Classifier which has 96%**","3f891657":"## Train Test Split","db9a7b19":"# Data Visualization","ae9a5ce7":"## Predictions and Evaluations of RFC","6a0e6e21":"## Exploratory Data Analysis ","580da401":"**In this section we divide the data into train and test catagories.**","c6d1bb71":"# Creating Random Forest Classifier Model","9e73215c":"## Normalizing the Data","9d4998ef":"## Import Libraries","d5ef79f8":"# Train the Support Vector Classifier","1c3a6e2a":"**The fit() method takes the training data as arguments, which can be one array in the case of unsupervised learning, or two arrays in the case of supervised learning.**","b29bc126":"## Predictions and Evaluations of SVC","a75ed04a":" **Accuracy is the most intuitive performance measure and it is simply a ratio of correctly predicted observation to the total observations.**"}}