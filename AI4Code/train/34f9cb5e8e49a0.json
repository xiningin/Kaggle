{"cell_type":{"d8788e85":"code","72ce9105":"code","616e5959":"code","b38c0fed":"code","ab644868":"code","147b4bc9":"code","428d9641":"code","21aadc67":"code","2a0defe3":"code","4d940b6c":"code","9ab22c67":"code","b9dd33d0":"code","eb1d18bd":"code","ebb15bfd":"code","952b9bbc":"code","6389b714":"code","df8ccb5c":"code","5fa3c099":"code","39f59ac7":"code","596365f6":"code","61b1a890":"code","77ef0265":"code","5b8b16bd":"code","ae76e5f4":"code","0f7ce814":"code","3faddd9d":"code","0f497969":"code","8a59704e":"code","be10dcb4":"code","c47d89de":"code","9bdf8185":"code","8278c90d":"code","aacb9ff7":"code","8366013e":"code","d40bbb8e":"code","348ed5f5":"code","cbeb6fea":"code","51f424b5":"code","d81efc59":"code","f953d6fc":"code","92247b6a":"code","3a4a3b88":"code","369fb3b4":"code","953945b7":"code","16bdc6d1":"code","f5784d9c":"code","0ae7be95":"code","62a086c9":"code","835d92fe":"code","ae6edfc4":"markdown","da71f52b":"markdown","0535dc07":"markdown","41634c60":"markdown","25fdb2bd":"markdown","a513b6d9":"markdown","632ed9e1":"markdown","5222346d":"markdown","9a13f18a":"markdown","ae89eab6":"markdown","200561b7":"markdown","7f412edb":"markdown","9efbe978":"markdown","23401421":"markdown","c5807652":"markdown","998f6609":"markdown","0b4b6ba5":"markdown","29ba989b":"markdown","18c542a5":"markdown","079260f3":"markdown","0c4e26b7":"markdown","64e6e91d":"markdown","7883ec08":"markdown","2f4d2f43":"markdown","fe454a7a":"markdown","d563920a":"markdown","4bdcbed6":"markdown","474d500d":"markdown","3ef631fe":"markdown","385ec99f":"markdown","4a533d06":"markdown","1fc72964":"markdown","f822aca9":"markdown","3a37d636":"markdown","f1c9f18d":"markdown","ab682e8e":"markdown","cd399a8e":"markdown","8abd285f":"markdown","3bd6073b":"markdown"},"source":{"d8788e85":"# import all packages and set plots to be embedded inline\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport calendar\nimport scipy.stats as stats\n%matplotlib inline\nsns.set_style(\"whitegrid\")\n\n## Setting max displayed rows to 500, in order to display the full output of any command \npd.set_option('display.max_rows', 1000)\npd.set_option('display.max_columns', 1000)\npd.set_option('display.width', 1000)\n\n# suppress warnings \nimport warnings\nwarnings.simplefilter(\"ignore\")","72ce9105":"#Importing the joined dataset\nCTA=pd.read_csv('..\/input\/cta-wrangling\/CTA_wrangling.csv')","616e5959":"#checking data first rows\nCTA.head(2)","b38c0fed":"# Dropping unnamed column\nCTA.drop('Unnamed: 0',axis=1,inplace=True)","ab644868":"# Checking data general information\nCTA.info()","147b4bc9":"# ammending column data types\nCTA['transaction_id']=CTA['transaction_id'].astype(str)\nCTA['product_id']=CTA['product_id'].astype(str)\nCTA['customer_id']=CTA['customer_id'].astype(str)\nCTA['postcode']=CTA['postcode'].astype(str)\nCTA['Transaction_day']=CTA['Transaction_day'].astype(str)\nCTA['Transaction_year']=CTA['Transaction_year'].astype(str)\nCTA['transaction_date']=pd.to_datetime(CTA['transaction_date'])                          ","428d9641":"#checking for minimum date\nCTA['Age'].min()","21aadc67":"#checking for maximum date\nCTA['Age'].max()","2a0defe3":"# Divide age group\nAge_group = pd.cut(CTA.Age, bins = [18,30,50,70,90], labels= ['18-30','31-50','51-70','71-90'])\nCTA.insert(27, 'Age_Group', Age_group)\nCTA.head(1)","4d940b6c":"# numerical Data statistics\nCTA.describe()","9ab22c67":"# product distribution by prices\nplt.figure(figsize=(7,4),dpi=100)\nsns.histplot(data=CTA,x='list_price');\nplt.axvline(x=CTA['list_price'].mean(), color = \"red\");\nplt.title(\"product distribution by prices\")\nplt.xlabel('price by dollars')\nplt.ylabel('Count')\nplt.show()","b9dd33d0":"#Calculating list prices mean\nCTA['list_price'].mean()","eb1d18bd":"# product distribution by standard cost\nplt.figure(figsize=(7,4),dpi=100)\nsns.histplot(data=CTA,x='standard_cost');\nplt.axvline(x=CTA['standard_cost'].mean(), color = \"red\");\nplt.title(\"product distribution by standard cost\")\nplt.xlabel('standard cost by dollars')\nplt.ylabel('Count')\nplt.show()","ebb15bfd":"#Calculating standard cost mean\nCTA['standard_cost'].mean()","952b9bbc":"# Age distribution\nplt.figure(figsize=(7,4),dpi=100)\nsns.histplot(data=CTA,x='Age');\nplt.axvline(x=CTA['Age'].mean(), color = \"red\");\nplt.title(\"Age distribution\")\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()","6389b714":"#Calculating Age mean\nCTA['Age'].mean()","df8ccb5c":"# Distribution of past_3_years_bike_related_purchases\nplt.figure(figsize=(7,4),dpi=100)\nsns.histplot(data=CTA,x='past_3_years_bike_related_purchases');\nplt.axvline(x=CTA['past_3_years_bike_related_purchases'].mean(), color = \"red\");\nplt.title(\"Distribution of past_3_years_bike_related_purchases\")\nplt.xlabel('past_3_years_bike_related_purchases')\nplt.ylabel('Count')\nplt.show()","5fa3c099":"#Calculating past_3_years_bike_related_purchases mean\nCTA['past_3_years_bike_related_purchases'].mean()","39f59ac7":"#Orders distribution by Age groups\nplt.figure(figsize = (7,4), dpi = 100)\nbase_color = sns.color_palette()[0]\n\ncounts = CTA['Age_Group'].value_counts(normalize = True)\nsns.barplot(x = counts.index, y = counts.values, color=base_color)\nplt.xlabel('Age Group')\nplt.ylabel('Count')\nprint(counts * 100)\n\nplt.title(\"Orders distribution by Age group - percent\")\nplt.show()","596365f6":"#Orders distribution by month\nplt.figure(figsize=(7,4),dpi=100)\n\nweekday = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August','September','October','November','December']\nweekday_categ = pd.api.types.CategoricalDtype(ordered=True, categories=weekday)\nCTA['Transaction_month'] = CTA['Transaction_month'].astype(weekday_categ)\n\nsns.countplot(CTA['Transaction_month'],color=base_color)\nplt.title(\"orders distribution by month\")\nplt.xlabel('Months')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nplt.show()","61b1a890":"#Orders distribution by weekdays\nplt.figure(figsize = (8,4), dpi = 100)\n\nweekday = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nweekday_categ = pd.api.types.CategoricalDtype(ordered=True, categories=weekday)\nCTA['day_of_the_week'] = CTA['day_of_the_week'].astype(weekday_categ)\n\nsns.countplot(CTA['day_of_the_week'],color=base_color)\nplt.xlabel('Week day')\nplt.ylabel('Count')\nplt.title(\"orders distribution by weekdays\")\n\nplt.show()","77ef0265":"#Orders distribution by wealth segment\nplt.figure(figsize = (7,4), dpi = 100)\n\ncounts = CTA['wealth_segment'].value_counts(normalize = True)\nsns.barplot(x = counts.index, y = counts.values, color=base_color)\nplt.xlabel('Wealth segment')\nplt.ylabel('Count')\nprint(counts * 100)\n\nplt.title(\"Orders distribution by wealth segment - percent\")\nplt.show()","5b8b16bd":"#Orders distribution by state\nplt.figure(figsize = (8,4), dpi = 100)\ncounts = CTA['state'].value_counts(normalize = True)\nsns.barplot(x = counts.index, y = counts.values, color=base_color)\nplt.xlabel('state')\nplt.ylabel('Count')\nprint(counts * 100)\n\nplt.title(\"Orders distribution by state - percent\")\nplt.show()","ae76e5f4":"#Orders distribution by Gender\n\nplt.figure(figsize = (7,4), dpi = 100)\n\ncounts = CTA['gender'].value_counts(normalize = True)\nsns.barplot(x = counts.index, y = counts.values, color=base_color)\nplt.xlabel('Gender type')\nplt.ylabel('Count')\nprint(counts * 100)\n\nplt.title(\"Distribution of Customers Gender - percent\")\nplt.show()","0f7ce814":"# job_industry_category\nplt.figure(figsize = (7,4), dpi = 100)\n\ncounts = CTA['job_industry_category'].value_counts(normalize = True)\nsns.barplot(x = counts.index, y = counts.values, color=base_color)\nplt.xlabel('job industry category')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nprint(counts * 100)\n\nplt.title(\"Distribution of orders by job industry category\")\nplt.show()","3faddd9d":"#Removing outliers for Age column\n\nCTA = CTA[CTA[\"Age\"] <= 80]\nCTA=CTA[CTA['standard_cost']<=1750]","0f497969":"# Brand VS cost\n\nplt.figure(figsize = (7,4), dpi = 100)\n\nsns.barplot(data = CTA, x = \"brand\",y='standard_cost',color=base_color)\nplt.xlabel('Brand');\nplt.ylabel('standard cost')\n\nplt.title(\"Brand by Standard cost\")\n\nplt.show()","8a59704e":"#Gender vs owns a car\n\nplt.figure(figsize = (7,4), dpi = 100)\n\nsns.countplot(data = CTA, x = \"owns_car\",hue='gender')\nplt.xlabel('owns a car');\nplt.ylabel('count')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.title(\"Gender vs owns a car\")\n\nplt.show()","be10dcb4":"#State vs Gender\n\nplt.figure(figsize = (8,4), dpi = 100)\n\nsns.countplot(data = CTA, x = \"state\",hue='gender')\nplt.xlabel('State');\nplt.ylabel('Count')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.title(\"State VS Gender\")\n\nplt.show()","c47d89de":"#online_order vs Gender\n\nplt.figure(figsize = (8,4), dpi = 100)\n\nsns.countplot(data = CTA, x = \"online_order\",hue='gender')\nplt.xlabel('online_order');\nplt.ylabel('Count')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.title(\"online_order VS Gender\")\n\nplt.show()","9bdf8185":"wealth_segment_revenue=CTA.groupby(['wealth_segment','gender'],as_index=False)['list_price'].sum()\nwealth_segment_revenue","8278c90d":"#Wealth segment vs list price per gender\nplt.figure(figsize = (7,4), dpi = 100);\n\nsns.barplot(data=wealth_segment_revenue,x='wealth_segment',y='list_price',hue='gender');\nplt.xlabel('Wealth segment');\nplt.ylabel('list price');\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left');\nplt.title(\"Wealth segment VS sum of list price vs gender\");","aacb9ff7":"job_industry_category_revenue=CTA.groupby(['job_industry_category','gender'],as_index=False)['list_price'].sum()\njob_industry_category_revenue.head(5)","8366013e":"#job_industry_category vs list price vs gender\nplt.figure(figsize = (8,4), dpi = 100);\n\nsns.barplot(data=job_industry_category_revenue,x='job_industry_category',y='list_price',hue='gender');\nplt.xlabel('Job industry category');\nplt.ylabel('list price');\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left');\nplt.title(\"Job industry category VS sum of list price vs gender\");\nplt.xticks(rotation=45);","d40bbb8e":"#correlation matrix\nplt.figure(figsize = (7,4), dpi = 100);\n\nsns.heatmap(CTA.corr(), cmap = \"viridis\", annot = True);\nplt.title(\"Correlation Matrix\");\nplt.xticks(rotation = 90);\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left');\n\nplt.show();","348ed5f5":"# This is a quick code to calculate Recency , frequency , monetary for each customer\nend_date = max(CTA['transaction_date']) + dt.timedelta(days=1)\n\nCTA_rfm = CTA.groupby('customer_id').agg(\n    recency=('transaction_date', lambda x: (end_date - x.max()).days),\n    frequency=('transaction_id', 'count'),\n    monetary=('list_price', 'sum')\n).reset_index()\n\nCTA_rfm.head()","cbeb6fea":"#statitics of the RFM\nCTA_rfm.describe()","51f424b5":"# splitting customer into segments using quantiles\nquantiles=CTA_rfm.quantile(q=[0.25,0.5,0.75])","d81efc59":"# checking segments\nquantiles.to_dict()","f953d6fc":"# we will segment data into four groups using quantiles \n\n## for Recency \n\ndef RClass(x,p,d):\n    if x <= d[p][0.25]:\n        return 1\n    elif x <= d[p][0.50]:\n        return 2\n    elif x <= d[p][0.75]: \n        return 3\n    else:\n        return 4\n    \n## for Frequency and Monetary value \n\ndef FMClass(x,p,d):\n    if x <= d[p][0.25]:\n        return 4\n    elif x <= d[p][0.50]:\n        return 3\n    elif x <= d[p][0.75]:\n        return 2\n    else:\n        return 1  ","92247b6a":"# apply the function to each rfm column to create segment for each customer in each r,f,m column\nCTA_rfm['R'] = CTA_rfm['recency'].apply(RClass, args=('recency',quantiles))\nCTA_rfm['F'] = CTA_rfm['frequency'].apply(FMClass, args=('frequency',quantiles))\nCTA_rfm['M'] = CTA_rfm['monetary'].apply(FMClass, args=('monetary',quantiles))","3a4a3b88":"#calculating RFM class by concatenating the score of each r,f,m & calculating the RFM score by summing the r,f,m segments\nCTA_rfm['RFMClass'] = CTA_rfm['R'].map(str) + CTA_rfm['F'].map(str) + CTA_rfm['M'].map(str)\nCTA_rfm['RFMscore']= CTA_rfm[['R','F','M']].sum(axis=1)","369fb3b4":"#checking results\nCTA_rfm.head()","953945b7":"#checking for relation between Frequency and Monetary\nplt.figure(figsize=(8,4),dpi=100);\nsns.jointplot(x='frequency',y='monetary',data=CTA_rfm,kind='reg');","16bdc6d1":"#checking for relation between Recency and Monetary\nplt.figure(figsize=(8,4),dpi=100);\nsns.jointplot(x='recency',y='monetary',data=CTA_rfm,kind='reg');","f5784d9c":"# Assigning Loyality level to each customer using qcut method which segments data as per number of quantiles decided\nLoyality_level=['Platinum','Gold','Silver','Bronze']\nscore_cuts=pd.qcut(CTA_rfm['RFMscore'],q=4,labels=Loyality_level)\nCTA_rfm['RFM_loyalty_level']=score_cuts.values\nCTA_rfm.head()","0ae7be95":"# joinning dataset\nCTA_rfm_allinfo=CTA.merge(CTA_rfm,on='customer_id',how='inner')","62a086c9":"#checking the final result\nCTA_rfm_allinfo.head()","835d92fe":"# Exporting our CTA dataframe to use it in phase 3 from our project\nCTA_rfm_allinfo.to_csv('CTA_rfm_allinfo.csv')","ae6edfc4":"### RFM Anlaysis","da71f52b":"**Graph conclusion:**The most costing product is Giant bicycles","0535dc07":"Now let's start doing a RFM analysis which is segmenting customers throught thier Recency(Recent purchases),Frequency(How many purchases have they done) & Monetary (How much revenue have they given the company)","41634c60":"### Bivariate Exploration\n\nIn this section, we will investigate relationships between pairs of variables in our data","25fdb2bd":"**Graph conclusion**:Distribution of orders between men and women are almost the same , 51% of our orders are from women and 49% are from men","a513b6d9":"**Graphic conclusion:**Most of the revenue has been produced by mass customers by males","632ed9e1":"**Graph Conclusion**: althought the amount of bikes sold along the week is almost the same but we can identify a increaseof amount on wednesday ","5222346d":"Finally we have segmented customer into 4 different segments and we should prioritize our marketing strategy as per each segment,now we will shift to phase 3 from our project which is Machine learning modeling.","9a13f18a":"**Graph Conclusion:** We have a normally distributed data with no outliers,the mean of the purchases in the past three years is 48","ae89eab6":"### About the Dataset","200561b7":"**Graphic conclusion:** Visual shows a strong -ve relationship between Recency and Monetary","7f412edb":"### Univariate Exploration\n\nIn this section, we will investigate distributions of individual variables. If we see unusual points or outliers, we will take a deeper look to clean things up and prepare ourself to look at relationships between variables.","9efbe978":"The structure of the dataset:\nThe data set has 33 columns and 19327 rows. The features cover 3 main areas:\n\n1. Transaction information\n2. customer information\n3. customer demographics\n\nOur obejctive is to:\n\n1. What are the trends in the underlying data?\n2. Which customer segment has the highest customer value?\n\nFeatures that will help support our investigation:\n\n1. List price\n2. Standard cost\n3. past_3_years_bike_related_purchases\n4. Age\n5. Transaction_month\n6. day_of_the_week\n7. wealth segment\n8. state\n9. Gender","23401421":"**Graph conclusion**:Customers are segmented into three parts according to their financial position, \nfirst is the Average income customers(Mass customers) which represents 50% of the orders,second we have more than average income(Affluent customers) which represents 24% of the orders ,third we have high income customers(High net worth customers) which represents 25% of the orders","c5807652":"**Graph conclusion**:Most of our orders are done in NSW state in Ausrtalia since it has 50% of our orders","998f6609":"**Graph Conclusion:** Orders count among different groups state that people from Age 31-50 orders the most from us with 52% of total orders","0b4b6ba5":"### Multivariate Explortion","29ba989b":"General information states out to some observations:\n\n1. **transaction_id,product_id,customer_id,postcode,Transaction_day,Transaction_year** columns are stated as int where they should be str type\n2. **Transaction_date** column are stated as object where they should be datetime type\n3. we will construct an **Age group** column to specify the groups that are mostly interested in our product","18c542a5":"**Graphic Conclusions:** visual states that women order online more than men","079260f3":"**Graph conclusion:** We conclude from the visual that Women who owns a car buys more than women who don't and Men who do not own a car buy more than Men who do","0c4e26b7":"We will drop the unnamed column that since it is not from our dataset","64e6e91d":"**Graph Conclusion**: The amount of purchases along the year are almost the same but the highest time in the year is in the start and end of the summer in months July,August & October","7883ec08":"**Graphic conclusion:** Visual shows a strong +ve relationship between Frequency and Monetary","2f4d2f43":"**Graphic conclusion:** The visual indicates that most of our customers work at manufacturing industry ","fe454a7a":"Exploring relations between multiple variable ","d563920a":"**Graph Conclusion:** we notice that we have a normally distributed data with no outliers the average of the prices is 1106","4bdcbed6":"Assign a royality level to each customer","474d500d":"Joinning CTA_rfmdataset to original CTA dataset","3ef631fe":"## Sprocket Central Pty Ltd Company: Customers Recommendation project Module #2:Exploratory Data analysis","385ec99f":"Constructing an (Age group) column","4a533d06":"**Graphic conclusion:** In most of the states women buy more than men but in Victoria and new south wales men buy more","1fc72964":"**Graphic conclusion:** Visual states that there are no strong correlations among data ","f822aca9":"**Sprocket Central Pty Ltd**, a medium size bikes & cycling accessories organisation which has a large dataset relating to its customers, but their team is unsure how to effectively analyse it to help optimise its marketing strategy. \n\nThe client provided us with 3 datasets:\n\n* Customer Demographic\n* Customer Addresses\n* Transactions data in the past 3 months\n\n### Objective of the report\n\nIn Phase #1 i have conducted a data cleaning process on each dataset and joined them together.\n\nIn Phase #2 i will start data exploration to answer following questions.\n\n* What are the trends in the underlying data?\n* Which customer segment has the highest customer value?","3a37d636":"Some of the relationships observed in this part of the investigation:\n\n1. Most of the revenue has been produced by mass customers by males.\n2. Manufacturing industry produced more revenue than other industries by male customers.\n3. There are no strong correlations among numerical data.","f1c9f18d":"**Graph Conclusion:** We notice that we have a positively skewed (right-skewed) data with some outliers, the average of the cost in dollars is 555","ab682e8e":"The distribution(s) of variable(s) of interest:\n\n1. From the distribution of prices we notice that we have a normally distributed data with no outliers the average of the prices is 1106.\n2. For Standard cost We have a positively skewed (right-skewed) distribution with some outliers, the average of the cost in dollars is 555.\n3. Ages in the data are mostly distributed between 20s and 60s, the most demanding age of our customers range from 30 to mid 40s which makes sense since they are in the peak of their youth and trying to mantain their health and excercise more, the average age is 43.\n4. purchases related to bikes is the purchases made by our customer in the past three years related to bikes , we have a normally distributed data with no outliers,the mean of the purchases in the past three years is 48.\n5. The amount of orders along the year is almost the same but the highest time in the year is in the start and end of the summer in months July,August & October the reason for that could be that people are buying bikes to spend the summer vacation with.\n6.  althought the amount of bikes sold along the week is almost the same but we can identify a increase of amount on wednesday.\n7. (Mass customers) represents 50% of the orders,(Affluent customers) represents 24% of the orders,(High net worth customers) represents 25% of the orders.\n8. Most of our orders are done in NSW state in Ausrtalia since it has 50% of our orders.\n9. Distribution of orders between men and women are almost the same , 51% of our orders are from women and 49% are from men.\n10. Most of our customers work at manufacturing industry.\n\n\nUnusual distributions:\n\n1. The Age had some outliers that we removed.\n2. Standard cost had some outliers that we removed.","cd399a8e":"**Graphic conclusion:** Manufacturing industry produced more revenue than other industries by male customers.","8abd285f":"Some of the relationships observed in this part of the investigation:\n\n1. Women who owns a car buy more bikes than women who don't and Men who do not own a car buy more than Men who do.\n2. In most of the states women buy more than men but in Victoria and new south wales men buy more.\n3. women order bikes online more than men.\n4. Most profitable product from our products is WeareA2B brand","3bd6073b":"**Graph Conclusion:** We have a normaly distributed data with few outliers at ages 80 and 90 ,ages in the data are mostly distributed between 20s and 60s the visual indicates that most of our customer ages range from 30s to mid 40s which is the peak of their youth, the average Age is 43"}}