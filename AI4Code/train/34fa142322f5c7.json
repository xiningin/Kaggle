{"cell_type":{"96464948":"code","469d0acd":"code","d9afda02":"code","12d50dc3":"code","131afce6":"code","ca27b305":"markdown","8cd9c63d":"markdown","c152e77e":"markdown","c30925c7":"markdown"},"source":{"96464948":"import pandas as pd\nimport matplotlib.pyplot as plt","469d0acd":"#Let's do a very simple example before working with a dataset\n\nx = [1,2,3,4,5]\ny = [1,4,9,16,25]\nplt.plot(x,y)\nplt.title('Simple Example')\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.show()","d9afda02":"z = [1,3,9,27,81]\nplt.plot(x,y)\nplt.plot(x,z)\nplt.title('Multiple lines Example')\nplt.xlabel('X-axis')\nplt.ylabel('Y\/Z-axis')\nplt.legend(['Y line', 'Z line'])\nplt.show()","12d50dc3":"realEstTrans = pd.read_csv('..\/input\/Sacramentorealestatetransactions.csv')\n\nrealEstTrans.head()","131afce6":"plt.plot(realEstTrans.beds, realEstTrans.baths, 'o')\n#plt.scatter(realEstTrans.beds, realEstTrans.baths)\nplt.show()","ca27b305":"Hello !! \nSo in this very short kernal, we are going to explore some basic data visualization techniques using\nMatplotlib.","8cd9c63d":"As you can see the output is a graph for our respective x and y values. We have also used the .title(), .xlabel() and .ylabel() to label our graph. We can also plot multiple lines in a single graph","c152e77e":"Let's say we want to visualize the relationship between. I will not be joining the lines because there are duplicate values. To show only the points we will add the 'o' attribute to the plot() method. We also use the plt.scatter() method instead","c30925c7":"Now let's work with a dataset. I will be using a sample dataset for this."}}