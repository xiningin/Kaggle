{"cell_type":{"d0da8842":"code","36958dff":"code","4909616b":"code","fd708a62":"code","57daa836":"code","e2eb4de7":"code","acf80ada":"code","d6f70f40":"code","84f7b834":"code","38dff67f":"code","0f6dc50a":"code","90bd0027":"code","b90dddf4":"code","761785a3":"code","a70ba9bb":"code","c5fe0adf":"markdown","ada0a9dc":"markdown","a8b198f7":"markdown","622eb097":"markdown","d9d81b80":"markdown","af1437f4":"markdown","409c7a13":"markdown","cc480ae0":"markdown","775162c6":"markdown"},"source":{"d0da8842":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.pipeline import Pipeline,make_pipeline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn import model_selection\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings('ignore')","36958dff":"train_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain_df.head()","4909616b":"train_df.describe()","fd708a62":"train_df.isnull().sum()","57daa836":"train_df[\"Age\"].fillna(train_df.Age.mean(), inplace=True)\ntrain_df[\"Embarked\"].fillna(\"S\", inplace=True)\ntrain_df.isnull().sum()","e2eb4de7":"x_train = train_df[['Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'Parch', 'SibSp']]\nx_train = pd.get_dummies(x_train)\nx_train.head()","acf80ada":"y_train = train_df[['Survived']]\ny_train.head()","d6f70f40":"clf = RandomForestClassifier(random_state = 10, max_features='sqrt')\npipe = Pipeline([('classify', clf)])\nparam = {'classify__n_estimators':list(range(20, 30, 1)),\n         'classify__max_depth':list(range(3, 10, 1))}\ngrid = GridSearchCV(estimator = pipe, param_grid = param, scoring = 'accuracy', cv = 10)\ngrid.fit(x_train, y_train)\nprint(grid.best_params_)\nprint(grid.best_score_)","84f7b834":"test_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_df.head()","38dff67f":"test_df.isnull().sum()","0f6dc50a":"test_df[\"Age\"].fillna(test_df.Age.mean(), inplace=True)\ntest_df[\"Fare\"].fillna(test_df.Fare.mean(), inplace=True)\ntest_df.isnull().sum()","90bd0027":"x_test = test_df[['Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'Parch', 'SibSp']]\nx_test = pd.get_dummies(x_test)\nx_test.head()","b90dddf4":"y_test = grid.predict(x_test)","761785a3":"submission = pd.DataFrame({'PassengerId': test_df['PassengerId'].values, 'Survived': y_test.astype(np.int32)})\nsubmission.head()","a70ba9bb":"submission.to_csv('submission.csv', index=False)","c5fe0adf":"**Learn in a RandomForest**","ada0a9dc":"**Fill in missing values**","a8b198f7":"**Read dataset**","622eb097":"**Read dataset**","d9d81b80":"# **Titanic using RandomForest**","af1437f4":"**Predict the answer**","409c7a13":"**Format only the data you need**","cc480ae0":"**Fill in missing values**","775162c6":"**Format only the data you need**"}}