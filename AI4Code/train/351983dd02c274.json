{"cell_type":{"fed08a5f":"code","55decc2d":"code","0610a71c":"code","50f53e6b":"code","4983671a":"code","8dcedcb5":"code","c83ae7f1":"code","f16b78db":"markdown","d3ffcbb8":"markdown","cbbe3abb":"markdown","4f18fb19":"markdown","cb1f45fd":"markdown","0ecd05fd":"markdown"},"source":{"fed08a5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","55decc2d":"data = pd.read_csv('..\/input\/Clustering_gmm.csv')\ndata.head()","0610a71c":"import matplotlib.pyplot as plt\n%matplotlib inline","50f53e6b":"plt.figure(figsize=(7,7))\nplt.scatter(data['Weight'], data['Height'])\nplt.xlabel('Weight')\nplt.ylabel('Height')\nplt.title('data distribution')\nplt.show()","4983671a":"# training kmeans model\nfrom sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=4)\nkmeans.fit(data)\n\n# predictions from kmeans\npred = kmeans.predict(data)\nframe = pd.DataFrame(data)\nframe['cluster'] = pred\nframe.columns = ['Weight', 'Height', 'cluster']\n\n# plotting results\ncolor = ['red', 'blue', 'cyan', 'green']\nfor k in range(0,4):\n    data = frame [frame['cluster'] == k]\n    plt.scatter(data['Weight'], data['Height'], c=color[k])\nplt.show()","8dcedcb5":"data = pd.read_csv('..\/input\/Clustering_gmm.csv')\ndata.head()","c83ae7f1":"# training gaussian model \n\nfrom sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=4)\ngmm.fit(data)\n\n# prediction of gmm\n\nlabels = gmm.predict(data)\nframe = pd.DataFrame(data)\nframe['cluster'] = labels\nframe.columns = ['Weight','Height', 'cluster']\n\ncolor = ['orange', 'blue', 'pink', 'green']\n\nfor k in range (0,4):\n    data = frame[frame['cluster'] == k]\n    plt.scatter(data['Weight'], data['Height'], c=color[k])\nplt.show()","f16b78db":"# First we build the k means model","d3ffcbb8":"# Gaussian Mixture Models Tutorials\n* Gaussian Mixture Model is a distributed based model.\n* GMM assumes that there are a certain number of gaussian distribution and each of these distributions represent a cluster. Hence, a gaussian mixture model tends to group the data point's belonging to a single distribution together. It is a probablistic model. \n* Mean and variance value of each gaussian is assigned through a technique called Expectation - Maximization. \n* EM is a statistical algorithm for finding the right model parameter.\n* GMM takes into account the mean as well as the variance of the data.\n* On the othe hand K-means only considers the mean.","cbbe3abb":"* We can see that K means has failed to properly clasify the clusters. Kmeans has tried to build a circular cluster although the data distribution is elliptical. This is one of the major drawback's of Kmeans  ","4f18fb19":"# Gaussian Mixture Models ","cb1f45fd":"* Great, We have got the clusters as we wanted. ","0ecd05fd":"### Please do upvote if you liked the Kernel"}}