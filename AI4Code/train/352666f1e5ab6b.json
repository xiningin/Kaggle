{"cell_type":{"d04d562f":"code","78d86012":"code","25a92c4a":"code","af6cafe4":"code","4e9331e9":"code","4bd17439":"code","e3fe4dac":"code","f6fc962a":"code","e0d53c76":"code","61112e6f":"code","9a2554c8":"code","ae5de0e5":"code","6cb6db89":"code","b69be37a":"code","94b025ea":"code","624e9c5a":"code","6eabf949":"code","07e1ebec":"code","dd28439c":"code","87520557":"code","4160b4d4":"code","a352e4ac":"code","73117a1c":"code","778d26bb":"code","61d903f7":"code","3cca7521":"code","821621d3":"code","7aae5361":"code","c7fd41da":"code","6859f73c":"code","827c9ba2":"markdown","e51142fd":"markdown","adc6a3f7":"markdown","a8636cc8":"markdown"},"source":{"d04d562f":"import pandas as pd\nimport tensorflow as tf\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport random\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.callbacks import EarlyStopping\n\n%matplotlib inline","78d86012":"df = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")","25a92c4a":"df.describe()","af6cafe4":"df.head()","4e9331e9":"X_train,X_test,y_train,y_test = train_test_split(df.iloc[:,1:],df.iloc[:,0],test_size=0.1,random_state=11)","4bd17439":"X_train.shape","e3fe4dac":"X_test.shape","f6fc962a":"y_train.shape","e0d53c76":"y_test.shape","61112e6f":"y_train.unique()","9a2554c8":"rows=10 #rows in subplots\ncols=10 #columns in subplots\nsamp = random.sample(range(df.shape[0]),rows*cols) #selecting 100 random samples\ndf_samp = df.iloc[samp,:].copy()\n\nfig,ax = plt.subplots(rows,cols,figsize=(14,20))\nr = 0\nc = 0\nfor i in range(rows*cols):\n    arr=np.array(df_samp.iloc[i,1:]).astype(np.int16).reshape(28,28)\n    ax[r,c].axis(\"off\")\n    ax[r,c].imshow(arr,cmap=\"gray\")\n    ax[r,c].set_title(f\"Label: {df_samp.iloc[i,0]}\")\n    c+=1\n    if c == cols:\n        c=0\n        r+=1\nplt.show()","ae5de0e5":"X_train = X_train.values.reshape(len(X_train),28,28,1)","6cb6db89":"X_test = X_test.values.reshape(len(X_test),28,28,1)","b69be37a":"train_datagen = ImageDataGenerator(\n        rotation_range=20,\n        height_shift_range=0.1,\n        shear_range=0.2,\n        zoom_range=0.2,\n        rescale=1.\/255,\n        fill_mode='nearest')\n\ntest_datagen = ImageDataGenerator(rescale=1.\/255)","94b025ea":"fig,((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2)\nr = random.randint(0,len(X_train))\nax1.imshow(X_train[r].reshape(28,28),cmap=\"gray\");\nax1.axis(\"off\")\nax1.set_title(\"Original\")\nax2.imshow(train_datagen.random_transform(X_train[r]).reshape(28,28),cmap=\"gray\");\nax2.axis(\"off\")\nax2.set_title(\"Augmented\")\nr = random.randint(0,len(X_train))\nax3.imshow(X_train[r].reshape(28,28),cmap=\"gray\");\nax3.axis(\"off\")\nax4.imshow(train_datagen.random_transform(X_train[r]).reshape(28,28),cmap=\"gray\")\nax4.axis(\"off\");","624e9c5a":"random.seed(11)\ncnn = tf.keras.models.Sequential()\n\ncnn.add(tf.keras.layers.Conv2D(filters=128,kernel_size=3,strides=1,data_format='channels_last',activation='relu',input_shape=(28,28,1),padding=\"same\"))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=(2,2))) \ncnn.add(tf.keras.layers.Conv2D(filters=128,kernel_size=3,strides=1,data_format='channels_last',activation='relu',padding=\"same\"))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=(2,2)))\ncnn.add(tf.keras.layers.Flatten())\n\n\ncnn.add(tf.keras.layers.Dense(256,activation=\"relu\"))\ncnn.add(tf.keras.layers.Dropout(0.2))\ncnn.add(tf.keras.layers.Dense(256,activation=\"relu\"))\ncnn.add(tf.keras.layers.Dropout(0.2))\ncnn.add(tf.keras.layers.Dense(10,activation=\"softmax\"))","6eabf949":"random.seed(11)\ncnn.compile(optimizer=\"adam\",loss=\"sparse_categorical_crossentropy\",metrics=\"sparse_categorical_accuracy\")","07e1ebec":"early_stop = EarlyStopping(monitor='val_loss',patience=5)","dd28439c":"training_data = train_datagen.flow(X_train,y_train,batch_size=32,seed=11)\nvalidation_data = test_datagen.flow(X_test,y_test,batch_size=32,seed=11,shuffle=False)","87520557":"random.seed(11)\nfinal_model=cnn.fit_generator(training_data,epochs=500,callbacks=[early_stop],validation_data=validation_data)","4160b4d4":"loss_df = pd.DataFrame(final_model.history)\nloss_df.head()","a352e4ac":"fig,(ax1,ax2) = plt.subplots(1,2,figsize=(10,4))\nloss_df.iloc[:,[0,2]].plot(ax=ax1)\nax1.set_title(\"Train vs Validation Loss\")\nloss_df.iloc[:,[1,3]].plot(ax=ax2)\nax2.set_title(\"Train vs Validation Accuracy\")\nplt.show()","73117a1c":"final_test = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")","778d26bb":"final_test = final_test\/255.0","61d903f7":"final_test = final_test.values.reshape(len(final_test),28,28,1)","3cca7521":"pred = cnn.predict_classes(final_test)","821621d3":"pred","7aae5361":"final_submission = pd.DataFrame({\"ImageId\":range(1,len(pred)+1),\"Label\":pred})","c7fd41da":"final_submission","6859f73c":"final_submission.to_csv(\"final_submission.csv\",index=False)","827c9ba2":"Train data augmentation","e51142fd":"\nA look at how the augmentation is working","adc6a3f7":"Model Development","a8636cc8":"Visualizing the samples may help in data augmentation"}}