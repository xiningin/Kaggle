{"cell_type":{"f04330b6":"code","6759503c":"code","4d4b7999":"code","9f70d1c5":"code","83712fd6":"code","14e044b0":"code","ad08e72b":"code","9a0e3388":"code","6c67dad7":"code","b6d0bec7":"code","29fbf8b9":"code","93965e21":"code","c7826416":"code","d30d8ba1":"code","2ce40e94":"code","6ce14b86":"code","b20a5581":"code","7ecccc68":"code","c7c18271":"code","bdf186d7":"code","4bb3a34d":"code","6009effe":"code","67158cf4":"code","16a6342c":"code","91f2c5df":"code","195e2447":"code","72975717":"code","45e7ec78":"code","e32530c2":"code","40170ed1":"code","76283b5f":"code","91d35cf0":"code","b1ae35a5":"code","46b66fa8":"code","5acf1c10":"code","5b896530":"code","49f7cb79":"code","f391be6e":"code","5665a424":"code","5d73bf75":"markdown","449b2ce6":"markdown","d2928f66":"markdown","893798e0":"markdown","ae4c0feb":"markdown","c2cbf5e1":"markdown","ea942a74":"markdown","78c0e773":"markdown","8bff6a92":"markdown","5a303463":"markdown","598ab765":"markdown","233901bf":"markdown","66ac424a":"markdown","14b793f8":"markdown","1808365b":"markdown","32361a05":"markdown","f447a835":"markdown","274a6986":"markdown"},"source":{"f04330b6":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport gc\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.metrics import mean_squared_log_error\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold, GridSearchCV\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom tqdm import tqdm\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6759503c":"train = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/train.csv')\ntest = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/test.csv')\nsubmission = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/submission.csv')\n\nprint(train.shape, test.shape, submission.shape)","4d4b7999":"train.head(5)","9f70d1c5":"test.head(5)","83712fd6":"train.info()","14e044b0":"train['Date'] = pd.to_datetime(train['Date'])\ntest['Date'] = pd.to_datetime(test['Date'])","ad08e72b":"print(train.Country_Region.nunique())","9a0e3388":"countries = train.Country_Region.unique()\ncountries","6c67dad7":"countries_with_provinces = train[~train['Province_State'].isna()].Country_Region.unique()\ncountries_with_provinces","b6d0bec7":"countries_no_province = [i for i in countries if i not in countries_with_provinces]\nlen(countries_no_province)","29fbf8b9":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[:20])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')    \n#     ax[k].set(xlabel='Month')","93965e21":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[20:40])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')    \n    ax[k].set(xlabel='Month')","c7826416":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries[40:60])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')\n    ax[k].set(xlabel='Month')","d30d8ba1":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[60:80])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')    \n    ax[k].set(xlabel='Month')","2ce40e94":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[80:100])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')  \n    ax[k].set(xlabel='Month')","6ce14b86":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[100:120])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","b20a5581":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[120:140])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')    \n    ax[k].set(xlabel='Month')","7ecccc68":"_, ax = plt.subplots(10, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[140:160])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')    \n    ax[k].set(xlabel='Month')","c7c18271":"_, ax = plt.subplots(6, 2, figsize=(20, 80))\nax=ax.flatten()\nfor k,i in tqdm(enumerate(countries_no_province[160:172])):\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=train[train['Country_Region'] == i].Date, y=train[train['Country_Region'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","bdf186d7":"train['Province_State'] = train['Province_State'].fillna('unknown')\ntest['Province_State'] = test['Province_State'].fillna('unknown')","4bb3a34d":"train[train['Country_Region'].isin(countries_with_provinces)].groupby(['Country_Region']).agg({'Province_State':'nunique'})","6009effe":"_, ax = plt.subplots(4,2, figsize=(20, 32))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'Australia']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","67158cf4":"_, ax = plt.subplots(6,2, figsize=(20, 48))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'Canada']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","16a6342c":"_, ax = plt.subplots(17,2, figsize=(20, 136))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'China']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","91f2c5df":"_, ax = plt.subplots(2,2, figsize=(20, 16))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'Denmark']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","195e2447":"_, ax = plt.subplots(5,2, figsize=(20, 40))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'France']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","72975717":"_, ax = plt.subplots(2,2, figsize=(20, 16))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'Netherlands']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","45e7ec78":"_, ax = plt.subplots(5,2, figsize=(20, 40))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'United Kingdom']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","e32530c2":"_, ax = plt.subplots(27, 2, figsize=(20, 216))\nax = ax.flatten()\ntemp = train[train['Country_Region'] == 'US']\nfor k,i in tqdm(enumerate(temp.Province_State.unique())):\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].Fatalities, label='Fatalities', lw=2, ax=ax[k])\n    sns.lineplot(x=temp[temp['Province_State'] == i].Date, y=temp[temp['Province_State'] == i].ConfirmedCases, label='ConfirmedCases', lw=2, ax=ax[k])\n    ax[k].set_title(f'Cumulative Fatalies and Confirmed Cases vs Date ({i})')   \n    ax[k].set(xlabel='Month')","40170ed1":"most_fatalities = train[train['Country_Region'].isin(countries_no_province)].groupby(['Country_Region']).Fatalities.max().sort_values(ascending=False)\nplt.figure(figsize=(20,6))\nsns.barplot(most_fatalities[:20].index, most_fatalities[:20].values)","76283b5f":"most_confirmedCases = train[train['Country_Region'].isin(countries_no_province)].groupby(['Country_Region']).ConfirmedCases.max().sort_values(ascending=False)\nplt.figure(figsize=(20,6))\nsns.barplot(most_confirmedCases[:20].index, most_confirmedCases[:20].values)","91d35cf0":"train['ConfirmedCases_diff'] = train.groupby(['Country_Region', 'Province_State'])['ConfirmedCases'].diff()\ntrain['Fatalities_diff'] = train.groupby(['Country_Region', 'Province_State'])['Fatalities'].diff()\ntrain = train.fillna(0)","b1ae35a5":"plt.figure(figsize=(20,6))\nplt.title('No of New Confirmed Cases per day')\nsns.lineplot(x=train[train['Country_Region'] == 'India'].Date, y=train[train['Country_Region'] == 'India'].ConfirmedCases_diff, label='India')\nsns.lineplot(x=train[train['Country_Region'] == 'Spain'].Date, y=train[train['Country_Region'] == 'Spain'].ConfirmedCases_diff, label='Spain')\nsns.lineplot(x=train[train['Country_Region'] == 'Germany'].Date, y=train[train['Country_Region'] == 'Germany'].ConfirmedCases_diff, label='Germany')\nsns.lineplot(x=train[train['Country_Region'] == 'Italy'].Date, y=train[train['Country_Region'] == 'Italy'].ConfirmedCases_diff, label='Italy')\nsns.lineplot(x=train[train['Country_Region'] == 'Iran'].Date, y=train[train['Country_Region'] == 'Iran'].ConfirmedCases_diff, label='Iran')\nsns.lineplot(x=train[train['Country_Region'] == 'Russia'].Date, y=train[train['Country_Region'] == 'Russia'].ConfirmedCases_diff, label='Russia')","46b66fa8":"plt.figure(figsize=(20,6))\nplt.title('No of New Fatalities per day')\nsns.lineplot(x=train[train['Country_Region'] == 'India'].Date, y=train[train['Country_Region'] == 'India'].Fatalities_diff, label='India')\nsns.lineplot(x=train[train['Country_Region'] == 'Spain'].Date, y=train[train['Country_Region'] == 'Spain'].Fatalities_diff, label='Spain')\nsns.lineplot(x=train[train['Country_Region'] == 'Germany'].Date, y=train[train['Country_Region'] == 'Germany'].Fatalities_diff, label='Germany')\nsns.lineplot(x=train[train['Country_Region'] == 'Italy'].Date, y=train[train['Country_Region'] == 'Italy'].Fatalities_diff, label='Italy')\nsns.lineplot(x=train[train['Country_Region'] == 'Iran'].Date, y=train[train['Country_Region'] == 'Iran'].Fatalities_diff, label='Iran')\nsns.lineplot(x=train[train['Country_Region'] == 'Russia'].Date, y=train[train['Country_Region'] == 'Russia'].Fatalities_diff, label='Russia')","5acf1c10":"train['Date'] = train['Date'].dt.strftime(\"%m%d\")\ntrain['Date'] = train['Date'].astype(int) \n\ntest['Date'] = test['Date'].dt.strftime(\"%m%d\")\ntest['Date'] = test['Date'].astype(int) ","5b896530":"train['Province_State'] = train['Province_State'].fillna('unknown')\ntest['Province_State'] = test['Province_State'].fillna('unknown')","49f7cb79":"train['Province_State'] = train['Province_State'].astype('category')\ntrain['Country_Region'] = train['Country_Region'].astype('category')\n\ntest['Province_State'] = test['Province_State'].astype('category')\ntest['Country_Region'] = test['Country_Region'].astype('category')\ntrain","f391be6e":"FEATURES = ['Date']\nsubmission = pd.DataFrame(columns=['ForecastId', 'ConfirmedCases', 'Fatalities'])\n\nfor i in tqdm(train.Country_Region.unique()):\n    z_train = train[train['Country_Region'] == i]\n    z_test = test[test['Country_Region'] == i]\n    for k in z_train.Province_State.unique():\n        p_train = z_train[z_train['Province_State'] == k]\n        p_test = z_test[z_test['Province_State'] == k]\n        x_train = p_train[FEATURES]\n        y1 = p_train['ConfirmedCases']\n        y2 = p_train['Fatalities']\n        model = xgb.XGBRegressor(n_estimators=1000)\n        model.fit(x_train, y1)\n        ConfirmedCasesPreds = model.predict(p_test[FEATURES])\n        model.fit(x_train, y2)\n        FatalitiesPreds = model.predict(p_test[FEATURES])\n        \n        p_test['ConfirmedCases'] = ConfirmedCasesPreds\n        p_test['Fatalities'] = FatalitiesPreds\n        submission = pd.concat([submission, p_test[['ForecastId', 'ConfirmedCases', 'Fatalities']]], axis=0)\n","5665a424":"submission.to_csv('submission.csv', index=False)","5d73bf75":"Let's plot the cumulative Fatalities and ConfirmedCases vs Date for the countries with no Province_State data.","449b2ce6":"Denmark","d2928f66":"China","893798e0":"US","ae4c0feb":"We have nan values in Province_State column, rest all columns have no missing values. Let's see how many unique countries we have in train.","c2cbf5e1":"Let's start with Australia.","ea942a74":"## <a> Model <\/a>\n","78c0e773":"Now the countries for which we have Province_State data.","8bff6a92":"France","5a303463":"## <a>Loading libraries and data<\/a>\n\n","598ab765":"Our observations hold for countries and provinces except China. Let's see Top 20 countries with most fatalities till now.","233901bf":"## <a>Exploratory Data Analysis<\/a>","66ac424a":"United Kingdom","14b793f8":"Now, let's see the no of new Confirmed Cases and Fatalities per day for few countries. ","1808365b":"Canada","32361a05":"Surprisingly, in most of Chinese Provinces, cumulative ConfirmedCases have stopped increasing. Found a cure?","f447a835":"Italy and Spain have the most no. of fatalities till now. ","274a6986":"Here,\n1. Unfortunately, in all plots cumulative ConfirmedCases and Fatalities are increasing with time.\n2. For most countries, the rate of increase in ConfirmedCases(slope of line) also increased with time.\n3. For S.Korea and Diamond Princess, rate of increase of ConfirmedCases decreased with time.\n\nNow, Let's plot for countries with provinces."}}