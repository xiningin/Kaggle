{"cell_type":{"9481d61e":"code","2a18f361":"code","053e29e9":"code","cf904349":"code","675e33f0":"code","967961fd":"code","56779843":"code","2dd4fe2e":"code","1528df9e":"code","43ea25bd":"code","6ea827d3":"code","ccf3eb8e":"code","33833941":"code","811b3418":"code","1d9275c9":"code","76081dba":"code","c4fef24c":"code","fdaaca2f":"code","cbed894a":"code","7627d34a":"code","2f609750":"code","89d3e3a8":"code","b7dd6860":"code","45ca945a":"code","2c147ab7":"code","896eeada":"code","e42d9a48":"code","ecf5f4a3":"code","1ce0ec3c":"markdown","67b60cfc":"markdown","fa2f1e16":"markdown","684d73bf":"markdown","a5976e36":"markdown","6fac397c":"markdown","b2bbbbf9":"markdown","83450788":"markdown","ec079b0c":"markdown","341881b1":"markdown","75ac8063":"markdown","a73426c5":"markdown","51028da3":"markdown","fa7fbb7a":"markdown","5da1ed55":"markdown","7cd09993":"markdown","d5e32637":"markdown","7af6a9f9":"markdown","57e64228":"markdown","926562c0":"markdown","8ce2703f":"markdown","9e7d4ca7":"markdown","fde4290a":"markdown","06510cb2":"markdown","e98d3738":"markdown","c99b92ac":"markdown"},"source":{"9481d61e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a18f361":"data=pd.read_csv(\"\/kaggle\/input\/churn-modelling\/Churn_Modelling.csv\")","053e29e9":"data.head(10)","cf904349":"data.info()","675e33f0":"from sklearn.preprocessing import LabelEncoder\nle =LabelEncoder()\ndata['Gender']=le.fit_transform(data['Gender'])","967961fd":"data.head()","56779843":"data=pd.get_dummies(data,columns=['Geography'])","2dd4fe2e":"data.head()","1528df9e":"x=data[['CreditScore','Gender','Age','Tenure','Balance','NumOfProducts','HasCrCard','IsActiveMember','EstimatedSalary',\n       'Geography_France','Geography_Germany','Geography_Spain']]","43ea25bd":"y=data[['Exited']]","6ea827d3":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=7)","ccf3eb8e":"print(xtrain)","33833941":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nxtrain=ss.fit_transform(xtrain)\nxtest=ss.fit_transform(xtest)","811b3418":"from keras.models import Sequential\nfrom keras.layers import Dense ","1d9275c9":"model =Sequential()","76081dba":"xtrain.shape","c4fef24c":"model.add(Dense(10,activation='relu',input_dim=12)) #this the input layer and the first hidden layer of our network","fdaaca2f":"model.add(Dense(12,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))  #output layer","cbed894a":"model.summary()","7627d34a":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","2f609750":"model.fit(xtrain,ytrain,batch_size=32,epochs=100)","89d3e3a8":"# testing the model with test data \n\nypred =model.predict(xtest)\nypred=(ypred>0.5)","b7dd6860":"#Metrics for the above model \n\nfrom sklearn.metrics import  classification_report,confusion_matrix\nprint(classification_report(ypred,ytest))","45ca945a":"confusion_matrix(ypred,ytest)","2c147ab7":"data['Exited'].value_counts()","896eeada":"model.fit(xtrain,ytrain,batch_size=32,epochs=100,class_weight={0:1,1:2})","e42d9a48":"ypred1=model.predict(xtest)\nypred1=(ypred1>0.5)\nprint(classification_report(ypred1,ytest))","ecf5f4a3":"from sklearn.metrics import accuracy_score as acs\nprint(acs(ypred,ytest))\nprint(acs(ypred1,ytest))","1ce0ec3c":"Lets check the data once again ","67b60cfc":"Lets check the top 5 rows of the dataset","fa2f1e16":"# Model building ","684d73bf":"**Looking at the data we can see that there object types of data in the column Gender and Geography** so we have to convet them into numericals ","a5976e36":"Since Male and female are related we use label encoder but for geography we will be using one hot encoding as they are not related to each other ","6fac397c":"This shows that there are no null values in the dataset ","b2bbbbf9":"Sigmoid activation is due to binary classification ","83450788":"# Fitting the model","ec079b0c":"The dataset has 14 columns to work with . The last column is the dependent variable ['Exited'] . The **1's** in that column tells us that the customers has left the bank[churn]. Basically we have to help the bank in order to save their customers by showing the bank which type of customers are likely to leave, so that the bank management can add more features to their banking style to save its customers. \nWe can see that the bank operates in 3 countries [France,Spain and Germany]. \nNumOfProducts columns refer to number of services that the customer has availed by the bank ,for example loan,credit card, savings account etc. \nTenure refers to number of years the customer has stayed in the bank. \nBased on the other attributes the bank has tried to estimate the customers salary and has provided us with that feature too. \n","341881b1":"# Selecting independent and dependent variables ","75ac8063":"Look at the data again and check if the object types are converted to numeric ","a73426c5":"The value for france is [1,0,0] ,for Germany [0,1,0] and Spain [0,0,1]","51028da3":"Credit Score = 650\nGender = Male\nAge = 55 \nTenure = 10 \nBalance = 60000\nNum of Products = 2\nHas Cr card = 1 \nIsActiveMember = yes \nestimated salary = 70000\nGeography = Spain ","fa7fbb7a":"Adam is the best optimizer , for binary classification the loss function used is binary crossentropy","5da1ed55":"We can see that the object type is converted into numeric. The value 0 is assigned to female and 1 to male ","7cd09993":"12 columns are the input dimensions for the model ","d5e32637":"**Lets import the dataset using pandas library**","7af6a9f9":"85.53% is good to begin with the journey of Deep Learning \n","57e64228":"# Preprocessing ","926562c0":"# A simple work for all the viewers,please find if the customer attribute given below will churn or not ","8ce2703f":"# Splitting train and test data and feature scaling","9e7d4ca7":"Row Numbers do not effect to target variable so drop it.\n* Do customer id and surname effect the target variable ? Think about it and then proceed further.\n\n\n\n* Those do not effect the target variable so lets drop it ","fde4290a":"**Comment below if the customer churns or not**\n","06510cb2":"# NOTE","e98d3738":"> Lets check the other information such as if there are any null values in the dataset ","c99b92ac":"the data looks some what imbalanced "}}