{"cell_type":{"508d9fec":"code","7ef2aec1":"code","baa483e9":"code","977f822d":"code","27a0f750":"code","ee05d0b0":"code","54c41dcc":"code","d91fbd79":"code","c334fb6b":"code","869577d4":"code","62455681":"code","a3380dbb":"code","f7e8560a":"code","ab4928de":"code","7a21dc69":"code","070a7a45":"code","d91d05d8":"code","3b1ae3c8":"code","608c7a00":"code","5cea72ca":"markdown","ffdead5f":"markdown","5c11d206":"markdown","83eea173":"markdown","4492da88":"markdown","b89eef57":"markdown","cea0ba48":"markdown","695c302e":"markdown","91ad490b":"markdown","ba8dcec3":"markdown","6f4f2d0b":"markdown","ac7ac96a":"markdown","852000b4":"markdown","57daccce":"markdown","ab685fa6":"markdown","c4facc02":"markdown","6b73a8ee":"markdown","bdcd2a3c":"markdown","2028e310":"markdown","d9a583bf":"markdown","079cabda":"markdown","88095bf1":"markdown"},"source":{"508d9fec":"# Import required libraries\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go","7ef2aec1":"# Read the airline data into pandas dataframe\nurl = 'https:\/\/bit.ly\/3AVBLcJ'\ndata =  pd.read_csv(url,encoding = \"ISO-8859-1\",\n                    dtype={'Div1Airport': str, 'Div1TailNum': str, \n                    'Div2Airport': str, 'Div2TailNum': str}\n                    )","baa483e9":"# Print the first 5 lines of the loaded data \ndata.head()","977f822d":"# Shape of the data\ndata.shape","27a0f750":"# Randomly sample 500 data points.\ndata = data.sample(n=500, random_state=42)","ee05d0b0":"# Get the shape of the trimmed data\ndata.shape","54c41dcc":"# First we create a figure using go.Figure and adding trace to it through go.scatter\nfig = go.Figure(data=go.Scatter(x=data['Distance'],\n                                y=data['DepTime'],\n                                mode='markers',\n                                marker=dict(color='red')))\n\n# Updating layout through `update_layout`. \n# Here we are adding title to the plot and providing title to x and y axis.\nfig.update_layout(title='Distance vs Departure Time',\n                  xaxis_title='Distance',\n                  yaxis_title='DepTime')\n\n# Display the figure\nfig.show()","d91fbd79":"# Group the data by Month and compute average over arrival delay time.\nline_data = data.groupby('Month')['ArrDelay'].mean().reset_index()","c334fb6b":"# Display the data\nline_data","869577d4":"# Create line plot\nfig = go.Figure(data=go.Scatter(x=line_data['Month'],\n                                y=line_data['ArrDelay'],\n                                mode='lines',\n                                marker=dict(color='green')))\n\n# Updating layout\nfig.update_layout(title='Month vs Average Flight Delay Time',\n                  xaxis_title='Month',\n                  yaxis_title='ArrDelay')\n\n# Display the figure\nfig.show()","62455681":"# Compute total number of flights in each combination\nbar_data = data.groupby(['DestState'])['Flights'].sum().reset_index()","a3380dbb":"# Display the data\nbar_data","f7e8560a":"# Use plotly express bar chart function px.bar. Provide input data, x and y axis variable, and title of the chart.\n# This will give total number of flights to the destination state.\nfig = px.bar(bar_data,\n             x=\"DestState\",\n             y=\"Flights\",\n             title='Total number of flights to the destination state split by reporting airline') \n\n# Display the figure\nfig.show()","ab4928de":"# Group the data by reporting airline and get number of flights\nbubble_data = data.groupby('Reporting_Airline')['Flights'].sum().reset_index()\nbubble_data","7a21dc69":"# Creating bubble chart\nfig = px.scatter(bubble_data,\n                 x=\"Reporting_Airline\",\n                 y=\"Flights\",\n                 size=\"Flights\",\n                 hover_name=\"Reporting_Airline\",\n                 #color=\"Flights\",\n                 title='Reporting Airline vs Number of Flights',\n                 size_max=60)\n\n# Display the figure\nfig.show()","070a7a45":"# Set missing values to 0\ndata['ArrDelay'] = data['ArrDelay'].fillna(0)","d91d05d8":"# Creating histogram\nfig = px.histogram(data, x=\"ArrDelay\")\n\n# Display the figure\nfig.show()","3b1ae3c8":"# Using px.pie function to create the chart. Input dataset. \n# Values parameter will set values associated to the sector. 'Month' feature is passed to it.\n# labels for the sector are passed to the `names` parameter.\nfig = px.pie(data, values='Month', names='DistanceGroup', title='Distance group proportion by month')\n\n# Display the figure\nfig.show()","608c7a00":"# Creating sunburst chart\nfig = px.sunburst(data,\n                  path=['Month', 'DestStateName'],\n                  values='Flights')\n\n# Display the figure\nfig.show()","5cea72ca":"## 5. Sunburst Charts","ffdead5f":"## 2. Bubble Chart\n","5c11d206":"If you find this notebook useful, dont forget to **upvote**.<br>\nPlease leave you suggestions and feedback in the comments","83eea173":"# Read Data\n","4492da88":"## 4. Pie Chart\n","b89eef57":"### In this notebook,\n\n#### plotly.graph_objects\n\n1.  Create **scatter plot**\n\n    Theme: How departure time changes with respect to airport distance\n\n\n2.  Create **line plot**\n\n    Theme: Extract average monthly delay time and see how it changes over the year\n\n#### plotly.express\n\n1.  Create **bar chart**\n\n    Theme: Extract number of flights from a specific airline that goes to a destination\n    \n\n2.  Create **bubble chart**\n\n    Theme: Get number of flights as per reporting airline\n\n\n3.  Create **histogram**\n\n    Theme: Get distribution of arrival delay\n\n\n4.  Review **pie chart**\n\n    Theme: Proportion of distance group by month (month indicated by numbers)\n\n\n5.  Create **sunburst chart**\n\n    Theme: Hierarchical view in othe order of month and destination state holding value of number of flights\n","cea0ba48":"#### Get number of flights as per reporting airline","695c302e":"## 1. Scatter Plot\n","91ad490b":"## 2. Line Plot\n","ba8dcec3":"### Thank You","6f4f2d0b":"# plotly.express\u00b6\n","ac7ac96a":"#### Proportion of distance group by month (month indicated by numbers)\n","852000b4":"# Basic Plotly Charts","57daccce":"In this notebook, I will discuss about creating plotly charts using plotly.graph_objects and plotly.express.\n\n### Airline Reporting Carrier On-Time Performance Dataset\n\nThe Reporting Carrier On-Time Performance Dataset contains information on approximately 200 million domestic US flights reported to the United States Bureau of Transportation Statistics. The dataset contains basic information about each flight (such as date, time, departure airport, arrival airport) and, if applicable, the amount of time the flight was delayed and information about the reason for the delay. This dataset can be used to predict the likelihood of a flight arriving on time.","ab685fa6":"#### Extract number of flights from a specific airline that goes to a destination","c4facc02":"# plotly.graph_objects\u00b6\n","6b73a8ee":"#### Hierarchical view in othe order of month and destination state holding value of number of flights","bdcd2a3c":"## 1. Bar Chart\n","2028e310":"Learn more about line plot [here](https:\/\/plotly.com\/python\/line-charts\/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDV0101ENSkillsNetwork20297740-2021-01-01)\n\n#### Extract average monthly arrival delay time and see how it changes over the year.\n","d9a583bf":"Learn more about usage of scatter plot [here](https:\/\/plotly.com\/python\/line-and-scatter\/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDV0101ENSkillsNetwork20297740-2021-01-01)\n\n#### How departure time changes with respect to airport distance\n","079cabda":"#### Get distribution of arrival delay","88095bf1":"## 3. Histogram\n"}}