{"cell_type":{"5763232b":"code","d00606bc":"code","4d8b4dda":"code","0d5e7620":"code","d704321f":"code","8e6563a0":"code","aac28a92":"code","7de9a4d3":"code","2529b2bd":"code","d53b11c4":"code","1994373e":"code","5ffe0d63":"code","20ef8a5b":"code","314e2766":"code","ae8baa0a":"code","36fbc04d":"code","4e773187":"code","1f1ca410":"code","323fa0cd":"code","97b246f9":"code","653e648c":"code","ecd4486a":"code","04ec7cc5":"code","f72f02df":"code","78a311fb":"code","80c67076":"code","77f3cf8e":"code","5fa04298":"markdown","ff8d0335":"markdown","ee5ca480":"markdown","162d1662":"markdown","33a711cc":"markdown","2dfba6b0":"markdown","601e607d":"markdown","1c778436":"markdown","868d4f8a":"markdown","84f95eeb":"markdown","ab09cab8":"markdown","e82ae716":"markdown","d007b3ef":"markdown","9282bb95":"markdown","4c1ce068":"markdown","54578502":"markdown","883d7343":"markdown","7583123e":"markdown","b0783347":"markdown","12cf8000":"markdown","b6fd2607":"markdown","63c311f7":"markdown","b7652aca":"markdown","663397fa":"markdown","2255de77":"markdown","08d7f77d":"markdown","f5b9c8c4":"markdown","72695ed2":"markdown","f2da643b":"markdown","6b21b58d":"markdown","b3269008":"markdown","0e3e166a":"markdown"},"source":{"5763232b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d00606bc":"import pandas as pd\nimport numpy as np\n\n# Matplotlib for plotting\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n%matplotlib inline\n\nfrom statsmodels.formula.api import logit\nfrom numpy import polyfit\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport itertools\nfrom sklearn.preprocessing import MinMaxScaler\n\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom collections import Counter\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold,StratifiedKFold\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import learning_curve\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix, classification_report,accuracy_score,f1_score\nfrom sklearn.metrics import precision_score, recall_score,roc_auc_score,roc_curve, auc \n","4d8b4dda":"df = pd.read_csv('..\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')","0d5e7620":"print('African_crisis dataset has ' + str(df.shape[0]) + ' rows, and ' + str(df.shape[1]) + ' columns')\nprint(\"Columns names are \\n {}\".format(df.columns))","d704321f":"df.sample(5)","8e6563a0":"df.info()","aac28a92":"df.describe().T","7de9a4d3":"#Dropping case,cc3\ndf.drop(columns=['case','cc3'], axis=1, inplace=True)\n\n#Coding banking_crisis to 0 and 1\nlabels = {'no_crisis': 0, 'crisis': 1}\ndf['banking_crisis'] = df['banking_crisis'].map(labels)\n\n# Removing the label of 2 in currency crises as the variable should only have 2 lables 0 & 1\ndf['currency_crises'] = df['currency_crises'].replace(2,np.nan)\ndf = df.dropna()","2529b2bd":"fig, axes = plt.subplots(ncols=2, nrows=3, figsize=(15,15))\naxes = axes.flatten()\ncols = ['domestic_debt_in_default', 'sovereign_external_debt_default',\n        'systemic_crisis','currency_crises', 'inflation_crises', 'banking_crisis']\nfor i, ax in zip(cols, axes):\n  sns.countplot(y = 'country', ax = ax, data = df, hue = i, palette = 'Paired')\nplt.tight_layout()\ndisplay()","d53b11c4":"before_independence = df[df['independence']==0]\nfig, axes = plt.subplots(ncols=2, nrows=3, figsize=(15,15))\naxes = axes.flatten()\ncols = ['domestic_debt_in_default', 'sovereign_external_debt_default',\n        'systemic_crisis','currency_crises', 'inflation_crises', 'banking_crisis']\nfor i, ax in zip(cols, axes):\n  sns.countplot(y = 'country', ax = ax, data = before_independence, hue = i, palette = 'Paired')\nplt.tight_layout()\ndisplay()","1994373e":"after_independence = df[df['independence']==1]\nfig, axes = plt.subplots(ncols=2, nrows=3, figsize=(15,15))\naxes = axes.flatten()\ncols = ['domestic_debt_in_default', 'sovereign_external_debt_default',\n        'systemic_crisis','currency_crises', 'inflation_crises', 'banking_crisis']\nfor i, ax in zip(cols, axes):\n  sns.countplot(y = 'country', ax = ax, data = after_independence, hue = i, palette = 'Paired')\nplt.tight_layout()\ndisplay()","5ffe0d63":"#Correlation Matrix\nplt.figure(figsize=(8,6))\ncor = df.corr(method='spearman')#Correlation with output variable\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show()","20ef8a5b":"#Drop country since it is not numerical and systemic crisis because it has a strong positive correlation \n#with Banking Crisis hence might dominate.\ndf2 = df.drop(columns=['country','systemic_crisis'],axis = 1)\n# Logistic Regression\ncrisis = logit(\"banking_crisis ~ year + exch_usd + sovereign_external_debt_default\"\n                   \" + domestic_debt_in_default + currency_crises + gdp_weighted_default + independence\"\n                         \"+ inflation_crises + inflation_annual_cpi\", df2).fit()\nprint(crisis.summary())","314e2766":"colors = [\"r\", \"g\"]\nplt.figure(figsize=(6, 4))\nsns.set_style('whitegrid')\n\nx = df2.banking_crisis.replace(to_replace=[1, 0], value=['Crisis','No_Crisis'])\nsns.countplot(x,palette=colors)\nplt.title('Counts of Crisis & No Crisis')\nplt.show()","ae8baa0a":"no_crisis = df2[df2.banking_crisis == 0]\ncrisis = df2[df2.banking_crisis == 1]\nfrom sklearn.utils import resample\n# upsample minority\ncrisis_upsampled = resample(crisis,\n                          replace=True, \n                          n_samples=len(no_crisis), \n                          random_state=123)\n# combine majority and upsampled minority\nupsampled = pd.concat([no_crisis, crisis_upsampled])\n# check new class counts\nupsampled.banking_crisis.value_counts()\ny= upsampled.banking_crisis\nX = upsampled.drop('banking_crisis', axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\ny.value_counts()\n","36fbc04d":"#Building 5 classifiers to obtain and use the one that makes the best predictions\nclassifiers = {\n'LogisticRegression' : LogisticRegression(solver='liblinear'),\n'RandomForest': RandomForestClassifier(),\n'DecisionTreeClassifier': DecisionTreeClassifier(),\n'SVM': SVC(),\n'KNeighborsClassifier': KNeighborsClassifier(),\n'GradientBoosting': GradientBoostingClassifier(),\n}    \n\nmodels_report = pd.DataFrame(columns = ['Model', 'Precision_score', 'Recall_score','F1_score', 'Accuracy'])\nfor classifier, classifier_name in zip(classifiers.values(), classifiers.keys()):\n    classifier.fit(X_train,y_train)\n    y_pred = classifier.predict(X_test)\n    t = pd.Series({ \n                     'Model': classifier_name,\n                     'Precision_score': precision_score(y_test, y_pred,average='macro'),\n                     'Recall_score': recall_score(y_test, y_pred,average='macro'),\n                     'F1_score': f1_score(y_test, y_pred,average='macro'),\n                     'Accuracy': accuracy_score(y_test, y_pred)}\n                   )\n    models_report = models_report.append(t, ignore_index = True)\nmodels_report","4e773187":"#5-Fold Cross Validation\nfor key, classifier in classifiers.items():\n    classifier.fit(X_train, y_train)\n    training_score = cross_val_score(classifier, X_train, y_train, cv=5)\n    print(\"Classifiers: \", classifier.__class__.__name__, \"Has a training score of\", round(training_score.mean(), 2) * 100, \"% accuracy score\")\n    ","1f1ca410":"#Hyperparameter tuning using Gridsearch\n# Logistic Regression \nlog_reg_params = {\"penalty\": ['l1', 'l2'], 'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000],'solver' : ['lbfgs', 'liblinear'] }\ngrid_log_reg = GridSearchCV(LogisticRegression(), log_reg_params)\ngrid_log_reg.fit(X_train, y_train)\nlog_reg = grid_log_reg.best_estimator_\n# DecisionTree Classifier\ntree_params = {\"criterion\": [\"gini\", \"entropy\"], \"max_depth\": list(range(5,7,1)), \n              \"min_samples_leaf\": list(range(2,4,1))}\ngrid_tree = GridSearchCV(DecisionTreeClassifier(), tree_params)\ngrid_tree.fit(X_train, y_train)\n# DecisionTree best estimator\ntree_clf = grid_tree.best_estimator_\n#Random Forest\nn_estimators = [int(x) for x in np.linspace(start = 200, stop = 2000, num = 10)]\nmax_features = ['auto', 'sqrt']\nmax_depth = [int(x) for x in np.linspace(10, 110, num = 11)]\nmax_depth.append(None)\nmin_samples_split = [2, 5, 10]\nmin_samples_leaf = [1, 2, 4]\nbootstrap = [True, False]\nrandom_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,\n               'bootstrap': bootstrap}\ngrid_rf_random = RandomizedSearchCV(RandomForestClassifier(), param_distributions = random_grid, n_iter = 100,  verbose=2, random_state=42, n_jobs = -1)\ngrid_rf_random.fit(X_train, y_train)\n#Random Forest best estimator\nrf_clf=grid_rf_random.best_estimator_","323fa0cd":"def plot_confusion_matrix(cm, classes,\n                          normalize=False,\n                          title='Confusion matrix',\n                          cmap=plt.cm.Blues):\n    \"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n        print(\"Normalized confusion matrix\")\n    else:\n        print('Confusion matrix, without normalization')\n\n    print(cm)\n\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    fmt = '.2f' if normalize else 'd'\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, format(cm[i, j], fmt),\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')","97b246f9":"y_pred = log_reg.predict(X_test)\nlog_cnf_matrix = confusion_matrix(y_test,y_pred, labels=[1,0])\nnp.set_printoptions(precision=2)\nplt.figure(figsize=(7, 4))\nsns.set(font_scale=1.3)\nplot_confusion_matrix(log_cnf_matrix, \n                      classes=['Crisis=1','No_Crisis=0'],\n              normalize= False,  \n              title='Confusion Matrix for Logistic Regression')\nplt.show()","653e648c":"y_pred = tree_clf.predict(X_test)\nDtrees_cnf_matrix = confusion_matrix(y_test,y_pred, labels=[1,0])\nnp.set_printoptions(precision=2)\nplt.figure(figsize=(7, 4))\nsns.set(font_scale=1.3)\nplot_confusion_matrix(Dtrees_cnf_matrix, \n                      classes=['Crisis=1','No_Crisis=0'],\n              normalize= False,  \n              title='Confusion Matrix for Decision-Tree-Classifier')\nplt.show()","ecd4486a":"y_pred = rf_clf.predict(X_test)\nrf_cnf_matrix = confusion_matrix(y_test,y_pred, labels=[1,0])\nnp.set_printoptions(precision=2)\nplt.figure(figsize=(7, 4))\nsns.set(font_scale=1.3)\nplot_confusion_matrix(rf_cnf_matrix, \n                      classes=['Crisis=1','No_Crisis=0'],\n              normalize= False,  \n              title='Confusion Matrix for Random Forest Classifier')\nplt.show()","04ec7cc5":"sns.set_style(\"ticks\", {\"xtick.major.size\": 8, \"ytick.major.size\": 8})\nplt.style.use('fivethirtyeight')\nfig, axes = plt.subplots(ncols=4, nrows=4, figsize=(15,10))\naxes = axes.flatten()\nfor i, ax in zip(df['country'].unique(), axes):\n  sns.lineplot(x = 'year', y = 'exch_usd', hue = 'independence', \n               data = df[df['country'] == i], ax = ax)\n  ax.set_xlabel('Year')\n  ax.set_ylabel('Exchange Rate')\n  ax.set_title('{}'.format(i))\n  ax.get_legend().remove()\nhandles, labels = ax.get_legend_handles_labels()\nfig.legend(handles, labels, loc=1)\nfig.subplots_adjust(top=0.95)\nfor i in range(13,16):\n  fig.delaxes(axes[i])\nplt.tight_layout()","f72f02df":"# Quick Visualization of the usd exchange rate in all the countries combined.\nplt.style.use('fivethirtyeight')\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'\ndf1=df[['year','exch_usd']]\ndf2 = df1.groupby('year').mean()\nplt.plot(df2.index, df2['exch_usd'], 'r')\nplt.title('USD Exchange Rate')\nplt.ylabel('Exchange Rate');\nplt.xlabel('Years')\nplt.show();","78a311fb":"from statsmodels.tsa.seasonal import seasonal_decompose\nfrom datetime import datetime\ndecomposition = seasonal_decompose(df2.exch_usd, freq=30, model='additive')\ndf2 = pd.DataFrame(data=df2.exch_usd, index=pd.date_range(start=datetime(1860,1,1), \n                                                              end = datetime(2014,1,1), freq='D'), columns=['exch_usd'])\nseasonal_comp = decomposition.seasonal\nfig = seasonal_comp.plot()\nplt.show()\n\n","80c67076":"X = [i%365 for i in range(0, len(seasonal_comp))]\ny = seasonal_comp.values\ndegree = 5\ncoef = polyfit(X, y, degree)\nprint('Coefficients: %s' % coef)\n# create curve\ncurve = list()\nfor i in range(len(X)):\n    value = coef[-1]\n    for d in range(degree):\n        value += X[i]**(degree-d) * coef[d]\n    curve.append(value)\n# plot curve over original data\nplt.plot(seasonal_comp.values)\nplt.plot(curve, color='red', linewidth=3)\nplt.show()","77f3cf8e":"X = [i%365 for i in range(0, len(seasonal_comp))]\ny = seasonal_comp.values\ndegree = 4\ncoef = polyfit(X, y, degree)\nprint('Coefficients: %s' % coef)\n# create curve\ncurve = list()\nfor i in range(len(X)):\n    value = coef[-1]\n    for d in range(degree):\n        value += X[i]**(degree-d) * coef[d]\n    curve.append(value)\n# create seasonally adjusted\nvalues = seasonal_comp.values\ndiff = list()\nfor i in range(len(values)):\n    value = values[i] - curve[i]\n    diff.append(value)\nplt.plot(diff)\nplt.show()","5fa04298":"##### What was the debt defaults and crises situation in the African Countries Before and after Independence?","ff8d0335":"* References;\n\nhttps:\/\/www.investopedia.com\/","ee5ca480":"##### How were the 13 African countries affected by the debt defaults and various crises between 1860 to 2014?","162d1662":"**Dealing with the Class Imbalance & Train\/ Test Split**","33a711cc":"**Confusion Matrix**","2dfba6b0":"#### Result Interpretation\n\n###### Observation Before and After independence\n\n 1) After Independence was when most African countries started suffering Economic, Banking and Systemic Crises.\n \n 2) Inflation and Currency crisis were the major forms of crises affecting some African countries before the independence, Inflation being the most and majorly affected Morocco, Algeria, Tunisia and Angola. These countries in contrast, recorded lowest count of crises and debt defaults after independence except Angola.\n \n 3) Majority of the African Countries that had Banking crisis also had Systemic Crisis after independence. Most affected were Central Africa Republic,Zimbabwe,Kenya and Nigeria. \n \n 4) No country suffered either domestic or external debt defaults before independence but after independence, most countries suffered especially the external debt crisis most affected being Central Africa Republic, Ivory Coast, Zimbabwe, Zambia, Angola.\n \n 5) Zimbabwe is the country that has majorly been affected by all the crises and debt defaults after the independence. This country on the other hand, never experienced any form of crisis or debt default before independence. \n \n 6) Mauritius is the only country that recorded the least count of the economic and banking crises before and after independence.\n","601e607d":"##### Result Interpretation;\n\n* There is no missing value in the dataset","1c778436":"##### Result Interpretation\n * Exchange Rates: An exchange rate is the value of one country's currency versus the currency of another country or economic zone. \n \n###### From the visualization of the exchange rate of the country vis-a-vis the USD;\n \nThe USD Exchange Rates were constant before independence in all countries except Morocco and Tunisia which had an increasing rate. On the other hand after independence, there was an increase in the exchange rates in all the african countries except Tunisia where there was a fall and Ivory Coast where the rates increased from 1970 and later fall in 2000.","868d4f8a":"### context\nThis dataset is a derivative of Reinhart et. al's Global Financial Stability dataset which can be found online at: https:\/\/www.hbs.edu\/behavioral-finance-and-financial-stability\/data\/Pages\/global.aspx\n\nThe dataset will be valuable to those who seek to understand the dynamics of financial stability within the African context.","84f95eeb":"* The dataset shows a strong seasonality component","ab09cab8":"**Random Forest**","e82ae716":"###### Which factors are mostly associated with Banking Crises in Africa? \n* Test of association (using correlation test) and statistical Significance (using Logistic Regression Test)","d007b3ef":"##### Is there any missing value?","9282bb95":"###### Is the relationship between Banking crisis and the related covariates statistically sifnificant?\n* H0: The association between Banking Crisis and the other covariates is statistically significant\n    \n* H1: The association between Banking Crisis and the other covariates is not statistically significant","4c1ce068":"### Variables\ni) systemic_crisis : \"0\" means that no systemic crisis occurred in the year and \"1\" means that a systemic crisis occurred in the year.\n\nii) exch_usd : The exchange rate of the country vis-a-vis the USD.\n\niii) domestic_debt_in_default : \"0\" means that no sovereign domestic debt default occurred in the year and \"1\" means that a sovereign domestic debt default occurred in the year.\n\niv) sovereign_external_debt_default : \"0\" means that no sovereign external debt default occurred in the year and \"1\" means that a sovereign external debt default occurred in the year.\n\nv) gdp_weighted_default : The total debt in default vis-a-vis the GDP.\n\nvi) inflation_annual_cpi : The annual CPI Inflation rate.\n\nvii) independence : \"0\" means \"no independence\" and \"1\" means \"independence\".\n\nviii) currency_crises : \"0\" means that no currency crisis occurred in the year and \"1\" means that a currency crisis occurred in the year.\n\nix) inflation_crises : \"0\" means that no inflation crisis occurred in the year and \"1\" means that an inflation crisis occurred in the year.\n\nx) banking_crisis : \"no_crisis\" means that no banking crisis occurred in the year and \"crisis\" means that a banking crisis occurred in the year.","54578502":"**Decision Tree**","883d7343":"### Loading necessary libraries","7583123e":"#### Result Interpretation\n\n###### From the Visualization:\n\n**Independent Variables**\n\n1) Domestic Debt in Default: Domestic debt is a central government's debt. It is debt issued by the lenders within the country (eg.Financial Institutions within the country). \n* Only 2 countries; Angola and Zimbabwe were in the Domestic Debt in Default between the years 1860 and 2014\n\n2) Sovereign  External Debt Default: External debt is the portion of a country's debt that was borrowed from foreign lenders, including commercial banks, governments, or international financial institutions. These loans, including interest, must usually be paid in the currency in which the loan was made. To earn the needed currency, the borrowing country may sell and export goods to the lender's country. \n* All the countries except Mauritius suffered Sovereign  External Debt Default between the years 1860 and 2014. Countries that were affected the most include;Central African Republic, Ivory Coast and Zimbabwe.\n\n3) Systemic Crisis: Systemic crisis is a domino effect in which a financial trouble spreads. between institutions and markets until it affects the whole monetary. and financial system with dire global economic consequences. \n* Between 1860 and 2014, all countries except Angola, Mauritius and South Africa were affected by Systemic Crisis. Most affected countries being Central African Republic,Zimbabwe,Kenya and Nigeria.\n\n4) Currency Crisis: A currency crisis is a situation in which serious doubt exists as to whether a country's central bank has sufficient foreign exchange reserves to maintain the country's fixed exchange rate. The crisis is often accompanied by a speculative attack in the foreign exchange market. A currency crisis results from chronic balance of payments deficits, and thus is also called a balance of payments crisis. Often such a crisis culminates in a devaluation of the currency. \n* All countries were affected by Currency Crisis in that period and the most affected countries were Zimbabwe,Zambia,Angola,South Africa.\n\n5) Inflation Crisis: Inflation is a quantitative measure of the rate at which the average price level of a basket of selected goods and services in an economy increases over a period of time. It is the constant rise in the general level of prices where a unit of currency buys less than it did in prior periods.   \n* All the countries were affected by the Inflation crisis in that period; the most affected countries being Angola, Zambia, Zimbabwe, Algeria.\n\n**Dependent Variable**\n\n6) Banking Crisis: A banking crisis is often associated with financial crisis. It refers to a panic or a bank run during which investors sell off assets or withdraw money from savings accounts because they fear that the value of those assets will drop if they remain in a financial institution.\n* Between the periods 1860 to 2014, all the countries suffered Banking Crisis and the most affected countries were;Central African Republic, Zimbabwe, Nigeria, Egypt and Kenya.\n\n###### other observations;\n\n* All the countries that suffered systemic crisis also suffered banking crisis. Central African Republic, Zimbabwe,Kenya and Nigeria had the highest count in each case at that time.\n* Zimbabwe suffered all the debt defaults as well as crises in that period.","b0783347":"**Seasonal Adjustment with Modeling**","12cf8000":"# 1. Overview of the dataset","b6fd2607":"# 5. Time Series Additive Model\n#### Time series additve model to model the seasonal variation (seasonality or cycles that repeat regularly over time)in the exchange rate in USD between 1860 to 2014.\n###### How is the trend in USD Exchange Rates  in different countries before and after independence?","63c311f7":"### motivation\nMy inspiration stems from the following: \n\ni) How were the 13 African countries affected by the debt defaults and the crises from 1860 to 2014?\n\nii) What was the debt defaults and crises situation in the African Countries Before and after Independence?\n\niii) Which factors are most associated with Banking Crises in Africa? \n\niv) Model building to predict Banking Crisis in African countries.\n\nv) Time series additive model to model the seasonal variation (seasonality or cycles that repeat regularly over time) in the exchange rate in USD between 1860 to 2014.\n","b7652aca":"##### Is there seasonality component in the data","663397fa":"**Logistic Regression**","2255de77":"# 3. Data Exploration","08d7f77d":"### content\nThe dataset specifically focuses on the Banking, Debt, Financial, Inflation and Systemic Crises that occurred, from 1860 to 2014, in 13 African countries, including: Algeria, Angola, Central African Republic, Ivory Coast, Egypt, Kenya, Mauritius, Morocco, Nigeria, South Africa, Tunisia, Zambia and Zimbabwe.","f5b9c8c4":"* Using the model to create a seasonally adjusted version of the exchange rate data","72695ed2":"# 4. Model Building\n#####  Model building to predict Banking Crisis in African countries.\n###### Is there class imbalance?","f2da643b":"# 2. Dataset Loading & Description","6b21b58d":"#### Result Interpretation\n###### From the Visualization;\n\n* The data is highly imbalanced thus, the classifiers can be biased towards the majority class. \n* Changing the Classification threshhold is then needed. Upsampling method has been used to ensure a balanced class.","b3269008":"#### Result Interpretation\n\n###### From the correlation matrix;\n\n1) All the features show a positive correlation with Banking crisis.\n\n2) Banking crisis has a very strong Positive correlation with Systemic crisis.This explains why the African countries that were majorly affected by Banking crisis had suffered Systemic Crisis.\n\n3) Apart from Systemic Crisis, Banking Crisis also shows strong positive correlation with Sovereign External Debt Default, domestic_debt_in_default,year, inflation_annual_cpi and Inflation Crisis.\n\n###### Conclusion\n\n* Banking Crisis is mostly associated with Systemic Crisis,Sovereign External Debt Default,year and Inflation Crisis. ","0e3e166a":"#### Result Interpretation\n\n###### From the Logit Regression Results;\n\n* The association between banking crisis and year, USD exchange rate, Independence and Inflation crisis is statistically significant (P-Value < 0.05).\n\n* On the other hand,Sovereign external debt default, domestic debt in default, currency crises, gdp weighted default and inflation annual cpi have no significant association with banking crisis (P-Value > 0.05)."}}