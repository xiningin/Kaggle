{"cell_type":{"c9d6bbda":"code","1556c43b":"code","475aa751":"code","5c0b3679":"code","1ab91290":"code","dc5c6271":"code","4a94d317":"code","f1204118":"code","68a46e3f":"code","595e79dc":"code","b2f7c26d":"code","02c28865":"code","c7e78eed":"code","f0c4914f":"code","0b6912ba":"code","0055966d":"code","9c4a7c55":"code","72e42b3e":"code","83c0080d":"code","8508cddc":"code","39647ba3":"code","7c647608":"code","8b0b7814":"code","6787b52c":"code","f1f264dc":"code","6a08322c":"markdown","75e5aaa5":"markdown","cdc256a7":"markdown","d65fc82c":"markdown","8eadf090":"markdown","39fb2441":"markdown"},"source":{"c9d6bbda":"import matplotlib as plt\nimport sklearn as ski\nimport pandas as pd\nimport numpy as np\nimport seaborn as sea\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\npd.options.display.max_rows = None\n\ndf = pd.read_excel(\"..\/input\/statewisetestingdetails\/StatewiseTestingDetails.xlsx\")\ndf.drop(['Negative'], axis=1,inplace=True)\ndf.head(20)\n","1556c43b":"df.dtypes\n","475aa751":"df['Negative'] = df['TotalSamples'] - df['Positive']\ndf.head(20)","5c0b3679":"df['Positive'] = df['Positive'].replace(np.nan, 0)\ndf['Negative'] = df['Negative'].replace(np.nan, 0)\ndf.head(20)","1ab91290":"total_statewise_sample_captured= df.groupby(\"State\")[\"TotalSamples\"].sum().sort_values(ascending=False).to_frame()\ntotal_statewise_sample_captured","dc5c6271":"total_statewise_positive = df.groupby(\"State\")[\"Positive\"].sum().sort_values(ascending=False).to_frame()\ntotal_statewise_positive","4a94d317":"total_statewise_negative = df.groupby(\"State\")[\"Negative\"].sum().sort_values(ascending=False).to_frame()\ntotal_statewise_negative","f1204118":"plt.pyplot.figure(figsize=(20,10))\nx = df['TotalSamples']\ny = df['State']\nplt.pyplot.scatter(x,y)","68a46e3f":"plt.pyplot.figure(figsize=(20,10))\nx = df['TotalSamples']\ny = df['Positive']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between Total Samples and Positive Casses\")\nplt.pyplot.ylabel(\"Total Samples\")\nplt.pyplot.xlabel(\"Positive\")","595e79dc":"plt.pyplot.figure(figsize=(20,10))\ny = df['TotalSamples']\nx = df['Negative']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between Total Samples and Negative Casses\")\nplt.pyplot.ylabel(\"Total Samples\")\nplt.pyplot.xlabel(\"Negative\")","b2f7c26d":"plt.pyplot.figure(figsize=(20,10))\nx = df['Positive']\ny = df['Negative']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between Positive and Negative Casses\")\nplt.pyplot.xlabel(\"Positive\")\nplt.pyplot.ylabel(\"Negative\")","02c28865":"import seaborn as sea\nsea.regplot(x= \"Positive\",y=\"Negative\", data = df)\nplt.pyplot.ylim(0)","c7e78eed":"sea.regplot(x= \"TotalSamples\",y=\"Negative\", data = df)\nplt.pyplot.ylim(0)","f0c4914f":"sea.regplot(x= \"TotalSamples\",y=\"Positive\", data = df)\nplt.pyplot.ylim(0)","0b6912ba":"pearson_coefficeint = df.corr(method='pearson')\npearson_coefficeint","0055966d":"#plt.pyplot.figure(figsize=(5,5))\n\nsea.heatmap(pearson_coefficeint, cmap='RdBu_r',annot=True)\n","9c4a7c55":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nx = df[['Positive','Negative']]\ny = df['TotalSamples']\n\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.2)\n#plt.pyplot.scatter(x_train,y_train,label=\"Training Data\")\n\n","72e42b3e":"print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)","83c0080d":"x_train.head(20)","8508cddc":"y_train.head(20)","39647ba3":"x_test.head(20)\n\n\n","7c647608":"y_test.head(20)","8b0b7814":"LR=LinearRegression()\nLR.fit(x_train, y_train)\n\n\n","6787b52c":"LR.predict(x_test)","f1f264dc":"LR.score(x_test, y_test)","6a08322c":"**Now I am trying to find out if there ia any relation between Total sample and Positive and Negative **\n1. I am going to use Pearson Corelation ","75e5aaa5":"****My Data Visualization says that there is a strong co-relation between Negative and Total Samples Taken******\n\n**So my first Prediction will be to predict if total samples taken can predict the negative values**\n","cdc256a7":"# **Import all the necessary files**\n*  I would also like to mention that i have found the dataset is wrong as total samples collected - Positive should provide us the Negative but it was wrong so, i dropped the Negative from the DF\n\n**1.  I would like to say i am not so expert in it but i tried on my own please review my code and give feedback******","d65fc82c":"**Checking for the datatypes is always a good habbit**","8eadf090":"* Calculate Negative Casses*\n","39fb2441":"**Here sorting the data for Positive,Negative and Total Samples capture per states **"}}