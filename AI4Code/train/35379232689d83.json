{"cell_type":{"64b52ea2":"code","aed21f39":"code","b5bd129d":"code","0adb7730":"code","512461c4":"code","b6eed9c5":"code","42f51ba0":"code","ff9fdbfe":"code","ae4b0039":"code","1caf43f2":"code","7f2e90ed":"code","6847a4fb":"code","237f1051":"code","4c2401e3":"code","c15d3d20":"code","7656df5d":"code","e5967eb2":"code","d34c95fe":"code","12937a57":"code","03f85e5c":"code","608051a2":"code","794cf706":"code","1094ec3a":"code","9edd5442":"code","fa374c59":"code","e91f0d55":"code","f0ae29ba":"code","e448d914":"markdown","019fee9b":"markdown","b37e0969":"markdown","1a3fb6d2":"markdown","d38873db":"markdown","58fbda71":"markdown","da0b0b90":"markdown","052c79f6":"markdown","e160b486":"markdown","ec0339aa":"markdown","e791b8eb":"markdown","e3674712":"markdown","1648dcd6":"markdown","d0f1634f":"markdown","079be749":"markdown","4f128e6a":"markdown","fb876abf":"markdown"},"source":{"64b52ea2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aed21f39":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport seaborn as sns\nimport matplotlib.pyplot as plt","b5bd129d":"# Read dataset\ndf = pd.read_csv('\/kaggle\/input\/creditrisk\/CreditRisk.csv')\ndf.head()","0adb7730":"print(\"This dataset has {0} rows and {1} columns\".format(df.shape[0], df.shape[1]))","512461c4":"df.drop(columns=[\"Loan_ID\"], inplace=True)\ndf.head()","b6eed9c5":"df.isna().sum()","42f51ba0":"# Replacing NA values with mean\/mode values\ndf.Gender.fillna(\"Male\", inplace=True)\ndf.Married.fillna(\"No\", inplace=True)\ndf.Dependents.fillna(0, inplace=True)\ndf.Self_Employed.fillna(\"No\", inplace=True)\ndf.LoanAmount.fillna(df.LoanAmount.mean(), inplace=True)\ndf.Credit_History.fillna(1, inplace=True)\ndf.Loan_Amount_Term.fillna(df.Loan_Amount_Term.mean(), inplace=True)\n\ndf.isna().sum()","ff9fdbfe":"mean_income = int(round(df[\"ApplicantIncome\"].mean(), 0))\nmean_salary = int(round(df[\"LoanAmount\"].mean(), 0))\nmean_loan_tenure = int(round(df[\"Loan_Amount_Term\"].mean() \/ 12, 0))\n\nprint(\"A person having average Salary of ${0} takes an average Loan of amount: ${1}K with an average tenure of {2} years\".format(mean_income, mean_salary, mean_loan_tenure))","ae4b0039":"plt.figure(figsize=(10, 5))\nplt.title(\"There is no such variability in income of people for different property areas\")\nsns.barplot(y=df[\"ApplicantIncome\"], x=df[\"Property_Area\"], estimator=np.mean)\nplt.show()","1caf43f2":"plt.figure(figsize=(15, 7))\nplt.title(\"More semi-urban people have higher than average salaries\")\nsns.boxplot(x=df[\"ApplicantIncome\"], y=df[\"Property_Area\"])\nplt.show()","7f2e90ed":"plt.figure(figsize=(8, 5))\nplt.title(\"Urban & Semi-Urban population has more tendency to take loans\")\nsns.barplot(x=df[\"Property_Area\"], y=df[\"Credit_History\"], estimator=np.sum)\nplt.show()","6847a4fb":"plt.figure(figsize=(10, 5))\nplt.title(\"Graduate Degree pays big bucks\")\nsns.barplot(x=df[\"Education\"], y=df[\"ApplicantIncome\"], hue=df[\"Property_Area\"], estimator=np.mean)\nplt.show()","237f1051":"plt.figure(figsize=(10, 5))\nplt.title(\"Yes. Self Employed people need more Loans\")\nsns.violinplot(x=df[\"Self_Employed\"], y=df[\"ApplicantIncome\"], estimator=np.mean, palette=\"Set1\")\nplt.show()","4c2401e3":"temp_df = df[df['Loan_Status'] == \"Y\"]\ntemp_df.shape\n\n# Capture our Target Area based on highest no. of customers who have chances of loan repayment\narea_wise_loan_confidence = temp_df[\"Property_Area\"].value_counts().to_frame()\ntarget_area = area_wise_loan_confidence.index[0]\n\n# Check which gender person has more confidence in taking a loan\ntemp_df = temp_df[temp_df[\"Property_Area\"] == target_area]\ngender_wise_loan_confidence = temp_df[\"Gender\"].value_counts().to_frame()\ntarget_gender = gender_wise_loan_confidence.index[0]\n\n# Check which marital status has more confidence in taking a loan\ntemp_df = temp_df[temp_df[\"Gender\"] == target_gender]\nmarital_status_wise_loan_confidence = temp_df[\"Married\"].value_counts().to_frame()\nmarital_status_wise_loan_confidence.head()\ntarget_marital_status = marital_status_wise_loan_confidence.index[0]\n\n# Check whether self-employed people have more confidence in taking a loan\ntemp_df = temp_df[temp_df[\"Married\"] == target_marital_status]\nemployement_wise_loan_confidence = temp_df[\"Self_Employed\"].value_counts().to_frame()\ntarget_employment_status = employement_wise_loan_confidence.index[0]\n\n# Check whether these employed people are graduates\/non-graduates\ntemp_df = temp_df[temp_df[\"Self_Employed\"] == target_employment_status]\neducation_wise_loan_confidence = temp_df[\"Education\"].value_counts().to_frame()\ntarget_education_status = education_wise_loan_confidence.index[0]\n\nideal_candidate_df = pd.DataFrame({\n    \"Property_Area\": target_area,\n    \"Education\": target_education_status,\n    \"Self_Employed\": target_employment_status,\n    \"Marital_Status\": target_marital_status,\n    \"Gender\": target_gender\n}, index=[0])\n\nideal_candidate_df.head()","c15d3d20":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ndf[\"Gender\"] = le.fit_transform(df[\"Gender\"])\ndf[\"Married\"] = le.fit_transform(df[\"Married\"])\ndf[\"Education\"] = le.fit_transform(df[\"Education\"])\ndf[\"Self_Employed\"] = le.fit_transform(df[\"Self_Employed\"])\ndf[\"Property_Area\"] = le.fit_transform(df[\"Property_Area\"])\ndf[\"Loan_Status\"] = le.fit_transform(df[\"Loan_Status\"])\n\ndf.head()","7656df5d":"x = df.iloc[:, 0:11]  # Take all columns except Target variable in 'x' dataframe\ny = df.iloc[:, 11]    # Take only target variable in 'y'","e5967eb2":"x.head()","d34c95fe":"y.head()","12937a57":"# Perform train-test split\n# We will be splitting data as 80% in training & 20% in testing. Hence test_size = 0.2\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","03f85e5c":"print(\"-----------------------\")\nprint(X_train.shape)\nprint(y_train.shape)\nprint(\"-----------------------\")\nprint(X_test.shape)\nprint(y_test.shape)\nprint(\"-----------------------\")","608051a2":"# Initialize Sequential object\nann = tf.keras.models.Sequential()\n\n# Total no. of Neurons = 6\n# We will be adding 2 hidden layers in our Neural Network\nann.add(tf.keras.layers.Dense(units=6, activation='relu'))\nann.add(tf.keras.layers.Dense(units=6, activation='relu'))\n\n# Adding Output Later\nann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))\n\n# Initializing our Compiler\nann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","794cf706":"# Train our model\nann.fit(X_train, y_train, batch_size=32, epochs=100, verbose=1)","1094ec3a":"# 0.5 - Threshold to differentiate between 0 & 1 values\n# Predict sample data and see if it model predicts properly or not\n\npredicted_output = ann.predict([[1, 1, 1, 0, 2, 6000, 1000, 101, 360, 0, 2]])\npredicted_output = 1 if predicted_output > 0.5 else 0\n\nprint(predicted_output)  # True i.e. There is a Credit Risk","9edd5442":"y_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.5)   # This will predict output values as 'True' and 'False'","fa374c59":"# Convert np array to Series\nmy_list = map(lambda x: x[0], y_pred)\ny_pred = pd.Series(my_list)\n\n# Convert True\/False values back to 1 and 0s\ny_prediction = y_pred.astype(int)","e91f0d55":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_prediction)\nprint(cm)\naccuracy_score(y_test, y_prediction)","f0ae29ba":"sns.heatmap(cm, cmap=\"Blues\", annot=True, fmt='g')","e448d914":"### Step 3 - Identifying NULL Values (if any)\nWe will be replacing NA values with mean or mode values of the variable","019fee9b":"### Step 7 - Predicting test data","b37e0969":"### Step 6 - Model Development\nWe will be using tensorflow library for model development","1a3fb6d2":"#### Who is an ideal customer for the bank?\n\nMarried men, who are employed graduates, living in Semiurban areas, are the most ideal customers for the bank. They show the most confidence of repaying loans with minimal credit risk","d38873db":"### Step 4 - Performing Hot Encoding on Data\nThis helps in converting categorical values to numerical values","58fbda71":"### Step 4 - Exploratory Data Analysis","da0b0b90":"#### What is the average Loan Amount for an Average Salary person?","052c79f6":"#### What is the average salary of Employees Area wise - Urban\/Rural\/SemiUrban?","e160b486":"#### People from which area have more higher-than-average salaries?\nMore semi-urban people have higher than average salaries. Urban areas have less population having higher-than-average salaries as compared to semi-urban. One reason behind this might be, that semi-urban regions have higher possibilities of establishing new businesses, which in turn generates more income.","ec0339aa":"### Step 2 - Identifying Identifier columns\n'Loan_ID' is an identifier column. \nSo we will remove this column.","e791b8eb":"### Step 1- Importing Necessary Libraries","e3674712":"### Using tensorflow, I will be doing Neural Network Regression on Credit Risk dataset. This will help understand whether a speficic customer is a Credit Risk (defaulter) or not.","1648dcd6":"#### Which Area's population has a tendency to take more loans?\nUrban & Semi-Urban population has more tendency to take bank loans. \n<br> Possible reasons for this might be -\n<br>\n1) The cost of living in urban areas is higher than rural areas. Also, materialistic love is observed more in cities as compared to people living in rural areas. Naturally people tend to take loans to buy new stuff every time.\n<br>\n2) In rural areas, most of the people are illiterate. Hence, if not from banks, they take loans from Informal sectors, considering the amount of EMI they might have to pay on a monthly basis under stricter laws. Also, many Informal sectors provide loans based or property mortgage ignoring their loan eligibility like banks do.","d0f1634f":"#### Do Self-Employed people need more Loans than Employed people?\nYes. More self employed people take loans as compared to employed people. Employed people having income less than 20K, take  loans, but their count is not as much as self-employed people having similar income range. \n<br>\nSurprisingly, once self-employed people start earning more than 20K, their chances of taking bank loans, starts diminishing. This is where banks lose their customers. On the other hand, banks have higher chances to retain employed customers, as some of them tend to take loans, even after their salary extends 20K.","079be749":"### Step 8 - Measuring Accuracy of our Model","4f128e6a":"### Step 5 - Splitting Train Test data","fb876abf":"#### Is there a possibility that Graduates earn more than Non-Graduates? If so, in which region?\nIt is obvious from the graph below, that Graduates earn more than non-graduates. However, looking region-wise, if a person is non-graduate, then he\/she has higher possibilities of getting more income in rural areas. This visualization also in a way, supports our above claim i.e. Rural populations take less loans from Banks, since they are not so well educated. There is a potential market for new bank clients in rural areas, if the population gets decent education."}}