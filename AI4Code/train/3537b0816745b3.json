{"cell_type":{"8dad389c":"code","be999690":"code","dee4d79d":"code","8a908c5b":"code","8e2cdb40":"code","085ff9e1":"code","14111571":"code","2ebe99bb":"code","0fe7f41d":"code","dc337276":"code","d3553989":"code","4d27ddea":"code","abb0a564":"code","e43ccf2d":"code","2b61bc4f":"code","d81e46df":"code","aa1a99f9":"markdown"},"source":{"8dad389c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be999690":"df = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","dee4d79d":"df.head()","8a908c5b":"df.info()","8e2cdb40":"sns.heatmap(df.corr(), annot=True)","085ff9e1":"df_onehot = pd.get_dummies(df)","14111571":"df['gender'].replace(['Female','Male'],[0,1],inplace=True)\ndf['ever_married'].replace(['No', 'Yes'],[0,1], inplace=True)","2ebe99bb":"df_onehot.fillna(0, inplace=True)","0fe7f41d":"X = df_onehot.drop('stroke', axis=1)\ny = df_onehot['stroke']","dc337276":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","d3553989":"from sklearn.linear_model import LogisticRegression","4d27ddea":"lor = LogisticRegression()","abb0a564":"lor.fit(X_train, y_train)","e43ccf2d":"pred = lor.predict(X_test)","2b61bc4f":"from sklearn.metrics import classification_report","d81e46df":"print(classification_report(y_test, pred))","aa1a99f9":"Replace Male and Female with 1 and 0.\nSame with ever married column."}}