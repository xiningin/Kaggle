{"cell_type":{"fe193cec":"code","fffe5f4c":"code","c3ae7bf7":"code","9ec96365":"code","e9b93b65":"code","4afa328e":"code","0fb1d260":"code","32178ce5":"code","d94d89b6":"code","e60ea54d":"code","c08391a5":"code","9304c7a0":"code","dac2812f":"code","145f7ccc":"markdown","06762c39":"markdown","ff29653f":"markdown","da5f5d60":"markdown","cbd42376":"markdown","f2429a6f":"markdown","215b17e6":"markdown","51be0822":"markdown","3523ad75":"markdown","c6448226":"markdown","5df3e0f6":"markdown"},"source":{"fe193cec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fffe5f4c":"df = pd.read_csv('\/kaggle\/input\/firstdataframe\/firstdataframe.csv')\ndf","c3ae7bf7":"dic_sex = {'Hombre':0, 'Mujer':1}\ndf['Sexo'] =  df['Sexo'].map(dic_sex)","9ec96365":"dic_trab = {'No':0, 'S\u00ed':1}\ndf['Trabajo'] =  df['Trabajo'].map(dic_trab)\ndf","e9b93b65":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(df)\nscaled_features = scaler.transform(df)","4afa328e":"scaled_data = pd.DataFrame(scaled_features, columns = df.columns)\nscaled_data","0fb1d260":"fig, axs = plt.subplots(3, 2)\n\naxs[0][0].scatter(scaled_data['Ut_est'],scaled_data['Ag_est'], marker = \"x\")\naxs[0][0].set_xlabel('Utilidad\/Agrado', labelpad = 5)\n\naxs[0][1].scatter(scaled_data['Ag_est'],scaled_data['Promedio'], marker = \"x\")\naxs[0][1].set_xlabel('Agrado\/Promedio', labelpad = 5)\n\naxs[1][0].scatter(scaled_data['Ut_est'],scaled_data['Promedio'], marker = \"x\")\naxs[1][0].set_xlabel('Utilidad\/Promedio', labelpad = 5)\n\naxs[1][1].scatter(scaled_data['Hrs_est'],scaled_data['Promedio'], marker = \"x\")\naxs[1][1].set_xlabel('Horas de estudio\/Promedio', labelpad = 5)\n\naxs[2][0].scatter(scaled_data['Hrs_est'],scaled_data['Ut_est'], marker = \"x\")\naxs[2][0].set_xlabel('Horas de estudio\/Promedio', labelpad = 5)\n\naxs[2][1].scatter(scaled_data['Hrs_est'],scaled_data['Ag_est'], marker = \"x\")\naxs[2][1].set_xlabel('Horas de estudio\/Promedio', labelpad = 5)","32178ce5":"df = pd.DataFrame (scaled_data, columns = ['Promedio','Hrs_est','Ing_men'])\ndf","d94d89b6":"from sklearn.neighbors import NearestNeighbors\nneigh = NearestNeighbors()\nnbrs = neigh.fit(df)\ndistances, indices = nbrs.kneighbors(df)\ndistances = np.sort(distances, axis=0)\ndistances = distances[:,1]\nplt.plot(distances)","e60ea54d":"from sklearn.cluster import DBSCAN\nmodel = DBSCAN(eps = 0.85, min_samples = 2)","c08391a5":"clusters = model.fit_predict(df)\ndf['k'] = clusters\ndf","9304c7a0":"import plotly.express as px\nfig = px.scatter_3d(df, x=\"Hrs_est\", y=\"Promedio\", z=\"Ing_men\",color=\"k\")\nfig.update_layout(scene_zaxis_type=\"log\")\nfig.show()","dac2812f":"n_clusters_ = len(set(df['k'])) - (1 if -1 in df['k'] else 0)\nn_noise_ = list(df['k']).count(-1)\nprint('Estimated number of clusters: %d' % n_clusters_)\nprint('Estimated number of noise points: %d' % n_noise_)","145f7ccc":"Esta versi\u00f3n la inicio con el dataframe de la versi\u00f3n anterior ya con arreglos, en esta versi\u00f3n uso BDSCAN para observar los grupos posibles a formarse.","06762c39":"Convertimos los registros de las columnas categoricas Sexo y Trabajo a valores binarios. Aunque mas adelante no se trabajara con estas columnas, facilitar\u00e1 la estandarizaci\u00f3n de los datos para el DBSCAN","ff29653f":"Aplicamos la estandarizaci\u00f3n de los datos","da5f5d60":"Ahora visualizamos como se distribuyen los clusters de nuestro dataframe.","cbd42376":"Podemos observar que la relaci\u00f3n \"Hrs_est\" y \"Promedio\" presentan una distribuci\u00f3n mas dispersa, esas dos variables las vamos a analizar junto con la variables \"Ing_men\"(Ingresos mensuales totales por familia de cada alumno); Creamos un nuevo dataframe.","f2429a6f":"Ya tenemos el dataframe con el que vamos a trabajar el algor\u00edtmo DBSCAN, para iniciar buscamos el valor \u00f3ptimo de epsilon.","215b17e6":"Generamos un nuevo dataframe que contiene para cada observaci\u00f3n el cluster al cual pertenece.","51be0822":"convertimos la informaci\u00f3n generada por la estandarizaci\u00f3n en un dataframe","3523ad75":"El valor \u00f3ptimo se puede observar en .85 aproximadamente, aplicamos el algoritmo para obtener los clusters teniendo en cuenta que los grupos contengan como m\u00ednimo 2 observaciones por grupo.","c6448226":"Para poder trabajar con la visualizaci\u00f3n vamos a seleccionar 3 variables, para seleccionar cuales veamos cual es el comportamiento de distribuci\u00f3n de los datos en combinaciones de las variables:\n\n\"Promedio\" - Promedio por cada alumno\n\"Hrs_est\", - Horas que dedica cada alumno a estudiar despues del horario escolar.\n\"Ag_estudio\" - Valor que da cada alumno a su satisfacci\u00f3n por estudiar.\n\"Ut_est\"  - Valor que da cada alumno a el valor util de estudiar.","5df3e0f6":"Obtenemos que se generar\u00f3n 4 clusters, el quinto es representado por los outliers que en total son 8,se observa que existe un grupo dominante en la relaci\u00f3n de las 3 variables pero existe la presencia de tres grupos que pueden ser en parte evidencia de la existencia de otros segmentos al aumentar la cantidad de observaciones de la base de datos, podemos deducir que el cluster 3 esta conformado por aquellos alumnos que cuentan con ingresos suficientes para poder dedicar tiempo al estudio, pues no necesitan de dedicarse al trabajar, el cluster 2 observamos rasultados en los cuales el ingreso no se puede considerar relevante pero son aquellos que no dedican tiempo al estudio y ademas tienen un promedio m\u00ednimo (recordemos que se eliminaron a aquellos alumnos que tuvieran una calificaci\u00f3n minima a la aprobatoria, que es 70) y el cluster 1 esta conformado por aquellos que no tienen problemas en sus ingresos pero aun asi su dedicaci\u00f3n al estudio es poca y su promedio es promedio de 80 aproximadamente."}}