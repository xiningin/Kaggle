{"cell_type":{"c04cb75d":"code","ed6bbb2b":"code","a3f41f47":"code","a2fe9f2c":"code","fed3f202":"code","06e904fd":"code","d0a9b86b":"code","65d4675a":"code","0d3432e7":"code","8aae9697":"code","a7612e9f":"code","5c743712":"code","a7789a89":"code","f9754e00":"code","8801dace":"code","3a478174":"code","0494e9a2":"code","5c0fd616":"code","b59c9142":"code","42af073a":"code","3b6729a2":"code","2a60ed80":"code","f31dd04a":"code","80423522":"markdown","7c309c1c":"markdown","bc7931b6":"markdown","f6b10dfa":"markdown","2f188ae6":"markdown","d11e1c99":"markdown","c5c08fc6":"markdown","4973d755":"markdown","cb6dfd92":"markdown","2655b297":"markdown","fbaadb91":"markdown","1a84195c":"markdown","ca3e91cd":"markdown","373a5fc0":"markdown","3cac8918":"markdown","d78e7d08":"markdown","4aa3d010":"markdown","c74a2e13":"markdown","d232c26b":"markdown","2c8d7001":"markdown","5fad29c4":"markdown","be3ba78e":"markdown","5ef4dafc":"markdown","c181226c":"markdown","9366449b":"markdown","9954f6c6":"markdown"},"source":{"c04cb75d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport os\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport folium","ed6bbb2b":"cvRates = pd.read_csv('..\/input\/conversionRates.csv')\nfreeForm = pd.read_csv('..\/input\/freeformResponses.csv')\nmain = pd.read_csv('..\/input\/multipleChoiceResponses.csv', encoding=\"ISO-8859-1\")\nschema = pd.read_csv('..\/input\/schema.csv')","a3f41f47":"plt.figure(figsize=(8,8))\ngender=main['GenderSelect'].value_counts()\nplt.pie(gender,labels=gender.index,autopct='%.1f%%')\ncentre_circle = plt.Circle((0,0),0.75,color='black', fc='white',linewidth=1.25)\nplt.title('Gender Distribution')\n\nplt.show()\nprint('Proportion of women in this survey: {:0.2f}% '.format(100*len(main[main['GenderSelect']=='Female'])\/len(main['GenderSelect'].dropna())))\nprint('Proportion of men in this survey: {:0.2f}% '.format(100*len(main[main['GenderSelect']=='Male'])\/len(main['GenderSelect'].dropna())))","a2fe9f2c":"age=main[(main['Age']>=15) & (main['Age']<=65) ]\nage_series=main['Age'].value_counts()\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\nsns.boxplot( y=age['Age'],data=age)\nplt.title(\"Age boxplot\", fontsize=16)\nplt.ylabel(\"Age\", fontsize=16)\n\nplt.subplot(1,2,2)\nplt.title('Age Line Graph', fontsize=16)\nplt.xlabel('Age', fontsize=16)\nplt.ylabel('Value Count',fontsize=16)\nsns.lineplot(x=age_series.index, y=age_series.values)\n\n\nplt.show()","fed3f202":"country=main['Country'].value_counts().sort_values().tail(20)\nplt.figure(figsize=(10,10))\nsns.barplot(y=country.index, x=country.values,alpha=0.9)\nfor spine in plt.gca().spines.values():\n    spine.set_visible(False)\nplt.title('Nationality Distributions')\nplt.show();\ntop_5=0\nfor i in [1,2,4,5,6]:\n    top_5=top_5+country.sort_values(ascending=False)[i]\ntop_5=100*(top_5\/len(main))\nprint('{:0.2f}% of the instances are Americans'.format(100*len(main[main['Country']=='United States'])\/len(main)))\nprint('{:0.2f}% of the instances are Indians'.format(100*len(main[main['Country']=='India'])\/len(main)))\nprint('{:0.2f}% of the instances are contributed by top 5 countries'.format(top_5))","06e904fd":"education=main['FormalEducation'].value_counts().sort_values()[:6]\nplt.figure(figsize=(10,10))\nplt.pie(x=education,labels=education.index,autopct='%.1f%%')\ncentre_circle = plt.Circle((0,0),0.75,color='black', fc='white',linewidth=1.25)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.title('Highest Degree achieved by the participants')\nplt.show()","d0a9b86b":"major=main['MajorSelect'].value_counts().sort_values(ascending=True)\nmajor\nplt.figure(figsize=(10,10))\nsns.barplot(x=major.values,y=major.index)\nfor spine in plt.gca().spines.values():\n    spine.set_visible(False)\nplt.title('Degree Majored in')\nplt.show();","65d4675a":"informal=main['FirstTrainingSelect'].value_counts()\ninformal\nplt.figure(figsize=(10,10))\nplt.pie(x=informal.values,labels=informal.index,autopct='%1.1f%%')\ncentre_circle = plt.Circle((0,0),0.75,color='black', fc='white',linewidth=1.25)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.title('Market share of different learning platforms')\n\nplt.show()","0d3432e7":"employment=main['EmploymentStatus'].value_counts()\nemployment_df=pd.DataFrame(employment)\nn_employed= employment[0]+employment[2]+employment[4]\nn_unemployed=employment[1]+employment[3]\nx=[n_employed,n_unemployed]\n\n","8aae9697":"plt.figure(figsize=(10,10))\nplt.pie(x=x,labels=['employed','unemployed'],autopct='%1.1f%%')\nplt.title(\"Employed vs Unemployed\")\nplt.show();","a7612e9f":"title=main['CurrentJobTitleSelect'].value_counts().sort_values(ascending=True)\nplt.figure(figsize=(10,10))\nsns.barplot(x=title.values,y=title.index)\nfor spine in plt.gca().spines.values():\n    spine.set_visible(False)\nplt.title('Distributions based on the titles')\nplt.show();","5c743712":"change = main['CareerSwitcher'].value_counts()\nplt.figure(figsize=(10,10))\nplt.pie(change,labels=change.index,autopct='%1.2f%%')\nplt.title('Is Data Science appealing to you')\nplt.show();","a7789a89":"lang=main[[\"WorkToolsFrequencyR\",\"WorkToolsFrequencyPython\"]].fillna(0)\nlang.replace(to_replace=['Rarely','Sometimes','Often','Most of the time'], \n           value=[1,2,3,4], inplace=True)\nlang['PythonVsR'] = [ 'R' if (freq1 >2 and freq1 > freq2) else\n                    'Python' if (freq1<freq2 and freq2>2) else\n                    'Both' if (freq1==freq2 and freq1 >2) else\n                    'None' for (freq1,freq2) in zip(lang[\"WorkToolsFrequencyR\"],lang[\"WorkToolsFrequencyPython\"])]\nmain['PythonVsR']=lang['PythonVsR']\n\ndf = main[main['PythonVsR']!='None']\nprint(\"Python users: \",len(df[df['PythonVsR']=='Python']))\nprint(\"R users: \",len(df[df['PythonVsR']=='R']))\nprint(\"Python+R users: \",len(df[df['PythonVsR']=='Both']))\nprint('Out of the 16000 Participants, only 6167 participants have answered that question')\nlangg=lang['PythonVsR'].value_counts().drop('None')\nplt.figure(figsize=(10,10))\nplt.pie(x=langg,labels=langg.index,autopct='%1.2f%%')\ncentre_circle = plt.Circle((0,0),0.75,color='black', fc='white',linewidth=1.25)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.title('Eternal Battle of Python vs R')\nplt.show();","f9754e00":"d_task={}\ntasks=['TimeGatheringData','TimeModelBuilding','TimeProduction','TimeVisualizing','TimeFindingInsights']\nfor task in tasks : \n    d_task[task]={'Python':df[df['PythonVsR']=='Python'][task].mean(),\n                  'R':df[df['PythonVsR']=='R'][task].mean(),\n                  'Both':df[df['PythonVsR']=='Both'][task].mean()}\n    \n(pd.DataFrame(d_task)).transpose().plot(kind='barh',figsize=(12,8))\nplt.ylabel(\"Task\", fontsize=15)\nplt.xlabel(\"Percentage of time\", fontsize=13)\nplt.title(\"Percentage of time devoted to specific tasks \", fontsize=16)\nplt.show();","8801dace":"demographic_features = ['GenderSelect','Country','Age',\n                        'FormalEducation','MajorSelect','ParentsEducation',\n                        'EmploymentStatus', 'CurrentJobTitleSelect',\n                        'DataScienceIdentitySelect','CodeWriter',\n                        'CurrentEmployerType','JobFunctionSelect',\n                        'SalaryChange','RemoteWork','WorkMLTeamSeatSelect',\n                        'Tenure','EmployerIndustry','EmployerSize','PythonVsR',\n                        'CompensationAmount']\ndata_dem = main[demographic_features]\ndata_dem.head(5)","3a478174":"#Convert all salaries to floats\ndata_dem['CompensationAmount'] = data_dem['CompensationAmount'].fillna(0)\ndata_dem['CompensationAmount'] = data_dem.CompensationAmount.apply(lambda x: 0 if (pd.isnull(x) or (x=='-') or (x==0))\n                                                       else float(x.replace(',','')))","0494e9a2":"\ndata_dem = data_dem[(data_dem['CompensationAmount']>5000) & (data_dem['CompensationAmount']<1000000)]\ndata_dem = data_dem[data_dem['Country']=='United States']\n\nplt.subplots(figsize=(15,8))\nsns.distplot(data_dem['CompensationAmount'])\nplt.title('Income histograms and fitted distribtion',size=15)\nplt.show();\nprint('The median salary for US data scientist: {} USD'.format(data_dem['CompensationAmount'].median()\n))\nprint('The mean salary for US data scientist: {:0.2f} USD'.format(data_dem['CompensationAmount'].mean()\n))","5c0fd616":"temp=data_dem[data_dem.GenderSelect.isin(['Male','Female'])]\nplt.figure(figsize=(10,8))\nsns.violinplot( y='CompensationAmount', x='GenderSelect',data=temp)\nplt.title(\"Salary distribution Vs Gender\", fontsize=16)\nplt.ylabel(\"Annual Salary\", fontsize=16)\nplt.xlabel(\"Gender\", fontsize=16)\nplt.show();","b59c9142":"titles=list(data_dem['FormalEducation'].value_counts().index)\ntemp=data_dem[data_dem.FormalEducation.isin(titles)]\nplt.figure(figsize=(10,8))\nsns.boxplot( x='CompensationAmount', y='FormalEducation',data=temp)\nplt.title(\"Salary distribution VS Academic degrees\", fontsize=16)\nplt.xlabel(\"Annual Salary\", fontsize=16)\nplt.ylabel(\"Academic degree\", fontsize=16)\nplt.show();","42af073a":"titles=list(data_dem['CurrentJobTitleSelect'].value_counts().index)\ntemp=data_dem[data_dem.CurrentJobTitleSelect.isin(titles)]\nplt.figure(figsize=(10,8))\nsns.violinplot( x='CompensationAmount', y='CurrentJobTitleSelect',data=temp)\nplt.title(\"Salary distribution VS Job Titles\", fontsize=16)\nplt.xlabel(\"Annual Salary\", fontsize=16)\nplt.ylabel(\"Job Titles\", fontsize=16)\nplt.show();","3b6729a2":"from scipy import stats\n\nsalvage=data_dem[['Age','CompensationAmount']]\nplt.figure(figsize=(20,8))\n#plt.plot(salvage['Age'],salvage['CompensationAmount'])\nsns.lineplot(x=salvage['Age'],y=salvage['CompensationAmount'])\nplt.xlim(20,70)\n\nxage=data_dem['Age']\n\nplt.show();\n","2a60ed80":"temp=data_dem\n\ntarget = temp['CompensationAmount']\ntarget.replace(to_replace=[1,2], value=[0,1],inplace=True )\ntemp.drop('CompensationAmount',axis=1,inplace=True)\ntemp2=pd.get_dummies(data=temp,columns=list(temp))\n\nnp.random.seed(42)\nperm = np.random.permutation(temp2.shape[0])\nX_train , y_train = temp2.iloc[perm[0:round(0.8*temp2.shape[0])]] , target.iloc[perm[0:round(0.8*temp2.shape[0])]]\nX_test , y_test = temp2.iloc[perm[round(0.8*temp2.shape[0])::]] , target.iloc[perm[round(0.8*temp2.shape[0])::]]","f31dd04a":"print('Number of US kagglers with an income lower than 130k$ : {}'.format(len(target)-target.sum()))\nprint('Number of US kagglers with an income higher than 130k$ : {}'.format(target.sum()))\n","80423522":"**Degree Majored in**","7c309c1c":"**Highest Formal Education**","bc7931b6":"**Are the Participants looking for a change?**","f6b10dfa":"**2 D. EDUCATION**\n","2f188ae6":"**4. INCOME**\n","d11e1c99":"**Where do participants go to learn outside the college?\n**","c5c08fc6":"**4.C INCOME VS EDUCATION******","4973d755":"**4. A. INCOME DISTRIBUTION**","cb6dfd92":"**Emplyed vs Unemployed**","2655b297":"**2. DEMOGRAPHICS**","fbaadb91":"**4.E. INCOME DISTRIBUTION WITH RESPECT TO AGE**","1a84195c":"**1.  PREFACE**\n","ca3e91cd":"**4.D. INCOME VS JOB TITLE**","373a5fc0":"Employment status","3cac8918":"**4.B. INCOME VS GENDER**","d78e7d08":"**2. B AGE**","4aa3d010":"**3.A. PROGRAMMING LANGUAGE\n**","c74a2e13":"**6. CONCLUSION**","d232c26b":"**3. B TIME SPENT ON TASKS**","2c8d7001":"**TABLE OF CONTENTS**\n>  1.  PREFACE\n1.  > DATA SOURCE\n1.  > DATA STORY\n>  2. DEMOGRPHICS\n1. > GENDER\n1.  >AGE\n1.  >COUNTRY\n1.  >EDUCATION\n1.  >EMPLOYMENT\n>  3. TOOLS AND TECHNIQUES\n1. >PROGRAMMING LANGUAGE\n1. >TIME SPENT ON EACH TASK\n>  4. INCOME \n1. >INCOME DISTRIBUTION\n1. >INCOME VS GENDER\n1. >INCOME VS EDUCATION\n1. >INCOME VS JOB TITTLE\n1. >INCOME VS AGE\n>  5. INCOME PREDICTION\n>  6. CONCLUSION","5fad29c4":"**5. INCOME PREDICTION**","be3ba78e":"**2.A GENDER**","5ef4dafc":"**Which Job title is in demand**","c181226c":"**2.E. EMPLOYMENT**","9366449b":"**2. C. COUNTRY**\n\n","9954f6c6":"**3. TOOLS\/TECHNIQUES **\n"}}