{"cell_type":{"7061d390":"code","28936c34":"code","9509d88f":"code","abf54cf3":"code","8060b78d":"code","fcd2bb48":"code","85091f40":"code","a0ec2465":"code","576f62bb":"code","d1d7e234":"code","fc5a5860":"code","d276d93c":"code","fdf812de":"code","98cf6994":"code","6ac249be":"code","823273d7":"code","e703a9be":"code","7453e9d2":"code","34e3a0b2":"code","7a585e02":"markdown"},"source":{"7061d390":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import iplot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28936c34":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/what-to-do-in-paris\/que-faire-a-paris-.csv', delimiter=';', encoding = \"utf8\", nrows = nRowsRead)\ndf.dataframeName = 'que-faire-a-paris-.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\npd.set_option('display.max_columns', None)\ndf.head()","9509d88f":"df.isnull().sum()","abf54cf3":"#Code by Gabriel Preda\n\ndef plot_count(feature, title, df, size=1):\n    '''\n    Plot count of classes \/ feature\n    param: feature - the feature to analyze\n    param: title - title to add to the graph\n    param: df - dataframe from which we plot feature's classes distribution \n    param: size - default 1.\n    '''\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:30], palette='Set2')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","8060b78d":"plot_count(\"Type de prix\", \"Type de prix\", df,2)","fcd2bb48":"plot_count(\"Acc\u00e8s PMR\", \"Acc\u00e8s PMR\", df,2)","85091f40":"plot_count(\"Acc\u00e8s mal voyant\", \"Acc\u00e8s mal voyant\", df,2)","a0ec2465":"plot_count(\"Acc\u00e8s mal entendant\", \"Acc\u00e8s mal entendant\", df,2)","576f62bb":"#Code by Gabriel Preda https:\/\/www.kaggle.com\/gpreda\/explore-the-rainforest-soundscape\ndef plot_feature_distribution(df, feature, feature2, title, kde_mode=False, hist_mode=True):\n    f, ax = plt.subplots(1,1, figsize=(12,6))\n    for item in list(df[feature2].unique()):\n        d_df = df.loc[df[feature2]==item]\n        try:\n            sns.distplot(df[feature], kde=kde_mode, hist=hist_mode, label=item)\n        except:\n            pass\n    plt.legend(labels=list(df[feature2].unique()), bbox_to_anchor=(1, 1), loc='upper right', ncol=2)\n    plt.title(title)\n    plt.show()","d1d7e234":"plot_feature_distribution(df, 'Acc\u00e8s PMR','Transport', \"Acc\u00e8s PMR & Transport\")","fc5a5860":"joint_df=pd.merge(df,df,left_on='ID',right_on='ID',how='inner')","d276d93c":"df = df.rename(columns={'Type de prix': 'prix', \"Date de d\u00e9but\": 'debut', \"Nom du lieu\": 'lieu', \"URL de l'image\":'imageURL', \"Cr\u00e9dit de l'image\": 'credit', \"Texte alternatif de l'image\": 'text'})","fdf812de":"#Ascending order False\ntop_debut=df.sort_values('debut', ascending=False)\ntop10=top_debut.head(10)\nf=['lieu',\"imageURL\"]\ndispl=(top10[f])\ndispl.set_index('lieu', inplace=True)","98cf6994":"#Code from Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\nfrom IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    '''\n     This function essentially convert the image url to \n     '<img src=\"'+ path + '\"\/>' format. And one can put any\n     formatting adjustments to control the height, aspect ratio, size etc.\n     within as in the below example. \n    '''\n\n    return '<img src=\"'+ path + '\"\"\/width=\"200\" height=\"40\" alt=\"Computer Hope\">'\n\nHTML(displ.to_html(escape=False ,formatters=dict(imageURL=path_to_image_html),justify='center'))","6ac249be":"#Ascending order True\npop10=df.sort_values(by='debut', ascending=True)\nf=['lieu','imageURL']\npop10=pop10.head(10)\n\npop10=(pop10[f])\npop10=pop10.set_index('lieu')","823273d7":"HTML(pop10.to_html(escape=False ,formatters=dict(imageURL=path_to_image_html),justify='center'))","e703a9be":"#Codes by Pooja Jain https:\/\/www.kaggle.com\/jainpooja\/av-guided-hackathon-predict-youtube-likes\/notebook\n\ntext_cols = ['Chapeau', 'Cat\u00e9gorie', 'Mots cl\u00e9s', 'Titre']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')\n\n_ = f","7453e9d2":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Set2(np.linspace(0,1,20))\ndf[\"prix\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"lieu\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Type de prix au lieux parisiens\")\nplt.axis(\"off\")\nplt.show()","34e3a0b2":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Patientez, Mar\u00edlia Prata @mpwolke est ici' )","7a585e02":"#Thinking about what to do in Paris?\n\n![](https:\/\/static.toiimg.com\/thumb\/53336957\/Paris-Main.jpg?width=1200&height=900)timesofindia.indiatimes.com"}}