{"cell_type":{"35af5c0f":"code","4cd31180":"code","1d0435fa":"code","431d0e12":"code","f86dcf87":"code","f69d82f6":"code","ef27b950":"code","fa6bfb38":"code","bf5f549a":"code","8e8793cd":"code","c8c4a0fc":"markdown","b188ea5c":"markdown","11da3701":"markdown","f3a7e25a":"markdown","0dfd3a93":"markdown","7aba6706":"markdown","74b03f03":"markdown","12967e48":"markdown","e7eb505b":"markdown","d776cf60":"markdown","00d6e54c":"markdown","8b412b09":"markdown","bc575620":"markdown","754e8780":"markdown"},"source":{"35af5c0f":"import sys\nIN_COLAB = 'google.colab' in sys.modules","4cd31180":"COMPETE = \"lish-moa\"\nDATASETS = [\n    \"yasufuminakama\/iterative-stratification\",\n]\nKERNEL_OUTPUTS = []\nPACKAGES = [\n    \"optuna\"\n]","1d0435fa":"if IN_COLAB:\n    # Work around for python2 exception.\n    !python2 -m pip uninstall kaggle -y\n    !python3 -m pip uninstall kaggle -y\n    !python3 -m pip install -U -q kaggle\n\n    !pip install -q -U git+https:\/\/github.com\/IMOKURI\/kaggle_on_google_colab.git\n\n    from kaggle_on_google_colab import setup\n    kaggle = setup.Setup()\n    kaggle.dirs(COMPETE)\n\n    !kaggle competitions download -p \/content\/zip {COMPETE}\n    !unzip -q -n \/content\/zip\/{COMPETE}.zip -d \/content\/{COMPETE}\/input\/{COMPETE}\n    #for line in setup.exec_get_lines(cmd=f\"kaggle competitions files --csv {COMPETE} | egrep -v \\\"Warning: Looks like you're using an outdated API Version|name,size,creationDate\\\" | cut -d , -f 1\"):\n    #    !unzip -q -n \/content\/zip\/{line.decode().strip()}.zip -d \/content\/{COMPETE}\/input\/{COMPETE}\n\n    for dataset in DATASETS:\n        dataset_name = dataset.split(\"\/\")[-1]\n\n        !kaggle datasets download -p \/content\/zip {dataset}\n        !unzip -q -n \/content\/zip\/{dataset_name}.zip -d \/content\/{COMPETE}\/input\/{dataset_name}\n\n    for kernel in KERNEL_OUTPUTS:\n        kernel_name = kernel.split(\"\/\")[-1]\n\n        !kaggle kernels output -p \/content\/{COMPETE}\/input\/{kernel_name} {kernel}\n\n    for package in PACKAGES:\n        !pip install -q {package}\n\n    # Add notebook specific setup.\n    #!pip install -q -U tensorflow-addons\n    #!mv \/content\/zip\/train_drug.csv \/content\/{COMPETE}\/input\/{COMPETE}\/\n\n    %cd \/content\/{COMPETE}\/output","431d0e12":"import warnings\nwarnings.filterwarnings(\"ignore\")","f86dcf87":"import os\nimport random\n\nimport numpy as np\nimport pandas as pd\n\nimport tensorflow as tf\n\nimport torch","f69d82f6":"MIXED_PRECISION = False\nXLA_ACCELERATE = True\n\nif MIXED_PRECISION:\n    from tensorflow.keras.mixed_precision import experimental as mixed_precision\n\n    if tpu:\n        policy = tf.keras.mixed_precision.experimental.Policy(\"mixed_bfloat16\")\n    else:\n        policy = tf.keras.mixed_precision.experimental.Policy(\"mixed_float16\")\n    mixed_precision.set_policy(policy)\n    print(\"Mixed precision enabled\")\n\nif XLA_ACCELERATE:\n    tf.config.optimizer.set_jit(True)\n    print(\"Accelerated Linear Algebra enabled\")","ef27b950":"os.environ[\"CUDA_LAUNCH_BLOCKING\"] = \"1\"","fa6bfb38":"def fix_seed(seed=2020):\n    random.seed(seed)\n    os.environ[\"PYTHONHASHSEED\"] = str(seed)\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    torch.manual_seed(seed)\n\n    if torch.cuda.is_available():\n        torch.cuda.manual_seed(seed)\n        torch.cuda.manual_seed_all(seed)\n        torch.backends.cudnn.deterministic = True\n        torch.backends.cudnn.benchmark = False\n\n\nrandom_seed = 22\nfix_seed(random_seed)","bf5f549a":"#train_df = pd.read_csv(\"..\/input\/lish-moa\/train_features.csv\")\n#test_df = pd.read_csv(\"..\/input\/lish-moa\/test_features.csv\")\n#target_df = pd.read_csv(\"..\/input\/lish-moa\/train_targets_scored.csv\")\n#submit_df = pd.read_csv(\"..\/input\/lish-moa\/sample_submission.csv\")","8e8793cd":"#submit_df.to_csv(\"submission.csv\", index=False)","c8c4a0fc":"# Model","b188ea5c":"# Output","11da3701":"# How to use\n\nThis notebook is template for development on Google Colab.\n\n- [`kaggle-connect.ipynb` (link here, not this notebook)](https:\/\/github.com\/IMOKURI\/kaggle_on_google_colab\/blob\/master\/kaggle_connect.ipynb) upload to your Google **Drive**.\n- Your [kaggle api key file `kaggle.json`](https:\/\/www.kaggle.com\/imokuri\/account) also upload to Google **Drive**.\n- Update your `username` and `kernel id` on `kaggle-connect.ipynb` and `Run all` to download this notebook from Kaggle.\n\n","f3a7e25a":"# Training","0dfd3a93":"## Kaggle Env for Google Colab","7aba6706":"## Environment","74b03f03":"# Strategy\n\nThis notebook strategy\n\n- Preprocessing\n- Model\n- Training\n- Prediction","12967e48":"# Setup","e7eb505b":"## Load Data","d776cf60":"# Change Log\n\n- v1\n    - Create new notebook.","00d6e54c":"# Cross Validation","8b412b09":"# Postprocessing","bc575620":"# Preprocessing","754e8780":"## Libraries"}}