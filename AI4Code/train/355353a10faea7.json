{"cell_type":{"40bf6fa1":"code","f5c7e252":"code","4a7748f4":"code","21afdec7":"code","31ca4d35":"code","094c142b":"code","c2c3e06a":"code","b4d4d626":"code","16696233":"code","ae30b982":"code","2a16ee42":"code","00d814ce":"code","1781a85c":"code","4885cb48":"code","6bea7220":"code","c80701ed":"code","966f7c77":"code","9b82c815":"code","c0bdfa34":"code","d57031d7":"code","45226a03":"code","2e4fc768":"code","1b60781e":"code","c2fde423":"code","dbc37326":"code","a640bed6":"code","e4143922":"code","acd8a0d1":"code","c42dc669":"code","49762f8f":"code","22e28037":"code","b4bf3f0b":"code","44b718fc":"code","7308db6c":"code","802baf1e":"code","8ef81671":"code","1aa78529":"code","1ae9f2c4":"code","212b1ca6":"code","2928e4c0":"code","b2ed0ee2":"markdown","a15fc83a":"markdown","90211849":"markdown","fe9958e7":"markdown","f267461e":"markdown","4e2f0797":"markdown","5599f306":"markdown","eccd5241":"markdown","07733a60":"markdown","360345db":"markdown","59e556bd":"markdown","25665ec3":"markdown"},"source":{"40bf6fa1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.graph_objects as plotly\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" ","f5c7e252":"sns.set_style(\"whitegrid\")\nsns.set_palette(\"tab10\")","4a7748f4":"# set the figure size and font size of all plots using rcParams\nplt.rcParams[\"figure.figsize\"] = (10,8)\nplt.rcParams.update({'font.size': 17})","21afdec7":"# read in the data\niris=pd.read_csv(\"\/kaggle\/input\/iris-flower-dataset\/IRIS.csv\")","31ca4d35":"#Shape of data\nprint('The dataset has',iris.shape[0],'rows and',iris.shape[1],'columns.')","094c142b":"# column names in the dataset\nprint('Column Names:',iris.columns.tolist())","c2c3e06a":"#basic information about the dataset\niris.info()","b4d4d626":"#datatypes of the columns\niris.dtypes","16696233":"iris.head()","ae30b982":"#summary of the dataset\niris.describe().T","2a16ee42":"stats=iris.describe().T\n\n#range(max-min) of the values in the corresponding columns\nstats['range']=stats['max']-stats['min']\n\noutfields=['mean','25%','50%','75%','range']\nstats=stats[outfields]\nstats.rename(columns={'50%':'median'},inplace=True)\nstats","00d814ce":"iris['species']=iris.species.str.replace('Iris-','')\n#another way of doing the above is to use apply function: iris['species'].apply(lambda x: x.replace('Iris-',''))\niris.head()","1781a85c":"#count each species present\niris.species.value_counts()   ","4885cb48":"iris.groupby('species').mean()","6bea7220":"iris.groupby('species').median()","c80701ed":"iris.groupby('species').agg(['mean','median'])\niris.groupby('species').agg([np.mean,np.sum])","966f7c77":"#Count no. of species\nsns.countplot(data=iris,x='species',edgecolor = 'black')","9b82c815":"plt.plot(iris.sepal_length,iris.sepal_width,ls='',marker='o',label='sepal')\nplt.plot(iris.petal_length,iris.petal_width,ls='',marker='o',label='petal')\nplt.legend()\n","c0bdfa34":"ax=plt.axes()\nax.hist(iris.petal_length,bins=32,edgecolor = 'black')\nax.set(title='Distribution of petal length')","d57031d7":"ax=iris.plot.hist(bins=25,alpha=0.5)\nax.set(xlabel='Size (cm)')","45226a03":"axLst=iris.hist(bins=25,grid=False,edgecolor = 'black')\nfor i in axLst.flatten():\n    if i.is_last_row():\n        i.set_xlabel('Size (cm)')\n    if i.is_first_col():\n        i.set_ylabel('Frequency')","2e4fc768":"fig,ax=plt.subplots()\nax.barh(np.arange(10),iris.sepal_width.iloc[:10],edgecolor = 'black')\nax.set_yticks(np.arange(0.4,10.4,1))\nax.set_yticklabels(np.arange(1,11))\nax.set(xlabel='Width',ylabel='count',title='Bar plot (Sepal Width)')","1b60781e":"iris.groupby('species').mean()","c2fde423":"iris.groupby('species').mean().plot(color=['red','green','blue','black'],title='Mean Plot')","dbc37326":"sns.set(font_scale=1.3)\nsns.pairplot(iris,hue='species',corner=True)","a640bed6":"sns.set_theme(style=\"dark\")\ng = sns.PairGrid(iris,hue='species' ,diag_sharey=False)\ng.map_upper(sns.scatterplot, s=15)\ng.map_lower(sns.kdeplot)\ng.map_diag(sns.kdeplot, lw=2)","e4143922":"sns.set_style()\nsns.jointplot(y=iris['sepal_width'],x=iris['sepal_length'],kind='hex')","acd8a0d1":"sns.set_style('darkgrid')\nplot=sns.FacetGrid(iris,col='species',margin_titles=True)\nplot.map(plt.hist,'sepal_width',color='green')\nplot=sns.FacetGrid(iris,col='species',margin_titles=True)\nplot.map(plt.hist,'sepal_length',color='blue')","c42dc669":"iris.boxplot(by='species')","49762f8f":"fig,axes = plt.subplots(2, 2,figsize=(17,11))\nsns.boxplot(ax=axes[0,0],data=iris,x='species',y='petal_length')\nsns.boxplot(ax=axes[0,1],data=iris,x='species',y='petal_width')\nsns.boxplot(ax=axes[1,0],data=iris,x='species',y='sepal_length')\nsns.boxplot(ax=axes[1,1],data=iris,x='species',y='sepal_width')","22e28037":"#Converting dataset into long form to plot the boxplot in one graph.\niris_long=iris.set_index('species').stack().to_frame().reset_index().rename(columns={0:'size','level_1':'measurement'})","b4bf3f0b":"sns.boxplot(data=iris_long,hue='species',y='size',x='measurement')","44b718fc":"corr_mat=iris.corr().stack().reset_index(name='correlation')\ng = sns.relplot(\n    data=corr_mat,\n    x=\"level_0\", y=\"level_1\", hue=\"correlation\", size=\"correlation\",\n    palette=\"vlag\", hue_norm=(-1, 1),height=8,sizes=(35, 160)\n)\ng.set(xlabel=\"\", ylabel=\"\", aspect=\"equal\",title='Correlation Plot')","7308db6c":"sns.heatmap(iris.corr(), annot=True)","802baf1e":"fig,axes = plt.subplots(2, 2,figsize=(17,11))\nsns.violinplot(ax=axes[0,0],data=iris,x='species',y='petal_length')\nsns.violinplot(ax=axes[0,1],data=iris,x='species',y='petal_width')\nsns.violinplot(ax=axes[1,0],data=iris,x='species',y='sepal_length')\nsns.violinplot(ax=axes[1,1],data=iris,x='species',y='sepal_width')","8ef81671":"sns.violinplot(data=iris_long,hue='species',y='size',x='measurement')","1aa78529":"px.scatter(iris,x='sepal_width',y='sepal_length',color='species')","1ae9f2c4":"px.scatter(iris,x='petal_width',y='petal_length',color='species')","212b1ca6":"fig = px.scatter_3d(iris, x='sepal_length', y='sepal_width', z='petal_width',\n              color='species')\nfig.show()","2928e4c0":"iris['species'] = iris['species'].map({'setosa': 1, 'virginica': 2, 'versicolor': 3})\npx.parallel_coordinates(iris, color=\"species\")","b2ed0ee2":"# Boxplot","a15fc83a":"* ### 3D Scatter Plot","90211849":"* ### Parallel Coordinates","fe9958e7":"* ### Scatter Plots","f267461e":"# Exploratory Data Analysis on IRIS Dataset","4e2f0797":"# Plotly Express","5599f306":"### From the above plot we can conclude that petals can be used to distinguish the species.","eccd5241":"### This notebook explores the Iris Dataset using seaborn, matplotlib and plotly.\n\n![](https:\/\/s3.amazonaws.com\/assets.datacamp.com\/blog_assets\/Machine+Learning+R\/iris-machinelearning.png)\n\n**The Iris Dataset contains four features (length and width of sepals and petals) of 50 samples of three species of Iris (Iris setosa, Iris virginica and Iris versicolor).**\n\n\n### **Attribute Information:**\n\n1. sepal length in cm\n2. sepal width in cm\n3. petal length in cm\n4. petal width in cm\n5. class:\n * Iris Setosa\n * Iris Versicolour\n * Iris Virginica ","07733a60":"From the above pairplots we can conclude that the features of setosa are pretty different from the other two species.","360345db":"# PairPlot","59e556bd":"# Correlation Plot","25665ec3":"# Violin Plot"}}