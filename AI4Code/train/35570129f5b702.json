{"cell_type":{"30380da0":"code","937f6d0a":"code","80f88876":"code","1be53b3a":"code","ed52021c":"code","e42d66c8":"code","53ec4912":"code","35dfa9be":"code","4078c4ec":"code","10ec02e5":"code","d68ba7aa":"code","eb886f8d":"code","e3c0d216":"code","b09abcf9":"code","d0d7c730":"code","50872e71":"code","c19e7972":"code","fb338d42":"code","dfbf4e01":"code","614a1050":"markdown"},"source":{"30380da0":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\n","937f6d0a":"data = pd.read_csv('\/kaggle\/input\/Andhra_Health_Data.csv',engine='python')","80f88876":"data['SEX'] = data['SEX'].map({'Male':'M','Female':'F','Male(Child)':'M','Female(Child)':'F','FEMALE':'F','MALE':'M'})\ndata['SEX'].value_counts()","1be53b3a":"for cols in data.columns:\n    print(cols,len(data[cols].unique()))\n    print('-------------------------------------------------')","ed52021c":"sns.distplot(data['AGE'])","e42d66c8":"sns.distplot(data['PREAUTH_AMT'])","53ec4912":"sns.distplot(data['CLAIM_AMOUNT'])","35dfa9be":"%matplotlib inline\ndata['Mortality Y \/ N'].value_counts(normalize=True).plot.bar(title= 'Mortality')","4078c4ec":"data['Mortality Y \/ N'].value_counts()","10ec02e5":"fig = plt.gcf()\nfig.set_size_inches(15,10)\ndata['CATEGORY_NAME'].value_counts(normalize=True).plot.bar(title='Surgery Category')","d68ba7aa":"surg_cat = pd.crosstab(data['CATEGORY_NAME'],data['SEX'])\nsurgcat = surg_cat.sort_values(by=['M'],ascending=False)[:10]\nsurgcat.div(surgcat.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True, figsize=(15,10),color = ['b','y'])","eb886f8d":"fig = plt.gcf()\nfig.set_size_inches(15,10)\ndata['SURGERY'].value_counts(normalize=True)[:20].plot.bar(title= 'Surgery')","e3c0d216":"surgs = pd.crosstab(data['SURGERY'],data['SEX'])\nsort_surg = surgs.sort_values(by=['M'],ascending=False)[:10]\nsort_surg.div(sort_surg.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True, figsize=(15,10),color = ['b','y'])","b09abcf9":"fig = plt.gcf()\nfig.set_size_inches(15,10)\nfatalities = pd.crosstab(data['SURGERY'],data['Mortality Y \/ N'])\nfatalities.sort_values(by=['YES'],ascending=False)[:10]['YES'].plot.bar(title= 'Surgeries with Most Fatalities')","d0d7c730":"fig = plt.gcf()\nfig.set_size_inches(15,10)\nnorm_fatalities = fatalities\nnorm_fatalities['YES_scaled'] = norm_fatalities['YES']\/(norm_fatalities['YES']+norm_fatalities['NO'])*100\nnorm_fatalities.sort_values(by=['YES_scaled'],ascending=False)[:10]['YES_scaled'].plot.bar(title= 'Most fatal surgeries')","50872e71":"fig = plt.gcf()\nfig.set_size_inches(15,10)\ndata['HOSP_DISTRICT'].value_counts(normalize=True).plot.bar(title= 'District')","c19e7972":"dist_sex = pd.crosstab(data['HOSP_DISTRICT'],data['SEX'])\ndist = dist_sex.sort_values(by=['M'],ascending=False)[:10]\ndist.div(dist.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True, figsize=(15,10),color = ['b','y'])","fb338d42":"fig = plt.gcf()\nfig.set_size_inches(15,10)\ndata['HOSP_NAME'].value_counts(normalize=True)[:20].plot.bar(title= 'Hospitals')","dfbf4e01":"surg_caste = pd.crosstab(data['CATEGORY_NAME'],data['CASTE_NAME'])\nsurg_caste['total'] = surg_caste.sum(axis=1)\nsurgcaste = surg_caste.sort_values(by=['total'],ascending=False)[:10]\nsurgcaste.drop(columns=['total'],inplace=True)\nsurgcaste.div(surgcaste.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True, figsize=(15,10),color = ['b','y','r','g','c','m'])","614a1050":"## Exploratory Data Analysis"}}