{"cell_type":{"b08171da":"code","eb510a66":"code","bf9d0c0b":"code","e9703a27":"code","582163db":"code","193246ef":"code","a854111c":"code","24613f4a":"code","a9576a95":"markdown"},"source":{"b08171da":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","eb510a66":"# Decision Tree is a Flow Chart, that helps you make decisions based on previous experience.\n# In the example, a person will try to decide if he\/she should go to a comedy show or not.\n# Luckily our example person has registered every time there was a comedy show in town,\n# and registered some information about the comedian, and also registered if he\/she went or not.\nimport pandas\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nimport matplotlib.pyplot as plt\nimport matplotlib.image as pltimg\ndf = pandas.read_csv(\"..\/input\/comedy-shows\/shows.csv\")\ndf","bf9d0c0b":"# To make a decision tree, all data has to be numerical.\n# We have to convert the non numerical columns 'Nationality' and 'Go' into numerical values.\n# Pandas has a map() method that takes a dictionary with information on how to convert the values.\n# {'UK': 0, 'USA': 1, 'N': 2}\n# Means convert the values 'UK' to 0, 'USA' to 1, and 'N' to 2.\n# Example\n# Change string values into numerical values:\nd = {'UK': 0, 'USA': 1, 'N': 2}\ndf['Nationality'] = df['Nationality'].map(d)\nd = {'YES': 1, 'NO': 0}\ndf['Go'] = df['Go'].map(d)\ndf","e9703a27":"# Then we have to separate the feature columns from the target column.\n# The feature columns are the columns that we try to predict from,\n# and the target column is the column with the values we try to predict.\n# Example\n# X is the feature columns:\nfeatures = ['Age', 'Experience', 'Rank', 'Nationality']\nX = df[features]\nprint(X)","582163db":"# y is the target column:\ny = df['Go']\nprint(y)","193246ef":"# Now we can create the actual decision tree, fit it with our details, and save a .png file on the computer:\n# Example\n# Create a Decision Tree, save it as an image, and show the image:\nimport graphviz\ndtree = tree.DecisionTreeClassifier() # random_state = 1, max_depth = 7, min_samples_split=2\ndtree = dtree.fit(X, y)\ndata = tree.export_graphviz(dtree, feature_names=features, out_file=None)\ngraph = graphviz.Source(data)\ngraph","a854111c":"# Predict Values\n# We can use the Decision Tree to predict new values.\n# Example: Should I go see a show starring a 40 years old American comedian,\n# with 10 years of experience,\n# and a comedy ranking of 7?\nprint(dtree.predict([[40, 10, 7, 1]]))","24613f4a":"# What would the answer be if the comedy rank was 6?\nprint(dtree.predict([[40, 10, 6, 1]]))","a9576a95":"# Result Explained\n\nThe decision tree uses your earlier decisions to calculate the odds for you to wanting to go see a comedian or not.\n\nLet us read the different aspects of the decision tree:\n\n## Rank\n\nRank <= 6.5 means that every comedian with a rank of 6.5 or lower will follow the True arrow (to the left), and the rest will follow the False arrow (to the right).\n\ngini = 0.497 refers to the quality of the split, and is always a number between 0.0 and 0.5, where 0.0 would mean all of the samples got the same result, and 0.5 would mean that the split is done exactly in the middle.\n\nsamples = 13 means that there are 13 comedians left at this point in the decision, which is all of them since this is the first step.\n\nvalue = [6, 7] means that of these 13 comedians, 6 will get a \"NO\", and 7 will get a \"GO\".\n\n## Gini\n\nThere are many ways to split the samples, we use the GINI method in this tutorial.\n\nThe Gini method uses this formula:\n\nGini = 1 - (x\/n)2 - (y\/n)2\n\nWhere x is the number of positive answers(\"GO\"), n is the number of samples, and y is the number of negative answers (\"NO\"), which gives us this calculation:\n\n1 - (7 \/ 13)2 - (6 \/ 13)2 = 0.497\n\nThe next step contains two boxes, one box for the comedians with a 'Rank' of 6.5 or lower, and one box with the rest.\n\n### True - 5 Comedians End Here:\n\ngini = 0.0 means all of the samples got the same result.\n\nsamples = 5 means that there are 5 comedians left in this branch (5 comedian with a Rank of 6.5 or lower).\n\nvalue = [5, 0] means that 5 will get a \"NO\" and 0 will get a \"GO\".\n\n### False - 8 Comedians Continue:\n\n## Nationality\n\nNationality <= 0.5 means that the comedians with a nationality value of less than 0.5 will follow the arrow to the left (which means everyone from the UK, ), and the rest will follow the arrow to the right.\n\ngini = 0.219 means that about 22% of the samples would go in one direction.\n\nsamples = 8 means that there are 8 comedians left in this branch (8 comedian with a Rank higher than 6.5).\n\nvalue = [1, 7] means that of these 8 comedians, 1 will get a \"NO\" and 7 will get a \"GO\".\n\n### True - 4 Comedians Continue:\n\n## Age\n\nAge <= 35.5 means that comedians at the age of 35.5 or younger will follow the arrow to the left, and the rest will follow the arrow to the right.\n\ngini = 0.375 means that about 37,5% of the samples would go in one direction.\n\nsamples = 4 means that there are 4 comedians left in this branch (4 comedians from the UK).\n\nvalue = [1, 3] means that of these 4 comedians, 1 will get a \"NO\" and 3 will get a \"GO\".\n\n### False - 4 Comedians End Here:\n\ngini = 0.0 means all of the samples got the same result.\n\nsamples = 4 means that there are 4 comedians left in this branch (4 comedians not from the UK).\n\nvalue = [0, 4] means that of these 4 comedians, 0 will get a \"NO\" and 4 will get a \"GO\".\n\n### True - 2 Comedians End Here:\n\ngini = 0.0 means all of the samples got the same result.\n\nsamples = 2 means that there are 2 comedians left in this branch (2 comedians at the age 35.5 or younger).\n\nvalue = [0, 2] means that of these 2 comedians, 0 will get a \"NO\" and 2 will get a \"GO\".\n\n### False - 2 Comedians Continue:\n\n## Experience\n\nExperience <= 9.5 means that comedians with 9.5 years of experience, or more, will follow the arrow to the left, and the rest will follow the arrow to the right.\n\ngini = 0.5 means that 50% of the samples would go in one direction.\n\nsamples = 2 means that there are 2 comedians left in this branch (2 comedians older than 35.5).\n\nvalue = [1, 1] means that of these 2 comedians, 1 will get a \"NO\" and 1 will get a \"GO\".\n\n### True - 1 Comedian Ends Here:\n\ngini = 0.0 means all of the samples got the same result.\n\nsamples = 1 means that there is 1 comedian left in this branch (1 comedian with 9.5 years of experience or less).\n\nvalue = [0, 1] means that 0 will get a \"NO\" and 1 will get a \"GO\".\n\n### False - 1 Comedian Ends Here:\n\ngini = 0.0 means all of the samples got the same result.\n\nsamples = 1 means that there is 1 comedians left in this branch (1 comedian with more than 9.5 years of experience).\n\nvalue = [1, 0] means that 1 will get a \"NO\" and 0 will get a \"GO\".\n\n## Different Results\n\nYou will see that the Decision Tree gives you different results if you run it enough times, even if you feed it with the same data.\n\nThat is because the Decision Tree does not give us a 100% certain answer. It is based on the probability of an outcome, and the answer will vary."}}