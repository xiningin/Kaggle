{"cell_type":{"11d31923":"code","04f8baf5":"code","70af5550":"code","041fcf43":"code","26ea9596":"code","9f26e29e":"code","cb50e755":"code","15d438fc":"code","e38fd254":"code","29be75e2":"code","555bb277":"code","c11e75ab":"code","7933523e":"code","8093ba2f":"code","82eeecb5":"code","4b87ab75":"code","fa3ac426":"code","10b73c80":"code","a56c4fe6":"code","91ee76ee":"code","ff0c11dc":"code","f554b784":"markdown","c66c0a90":"markdown","54d441ea":"markdown","97a48de6":"markdown","eb6e2bde":"markdown","c19bff2c":"markdown","88c6baa2":"markdown","b9508a02":"markdown","3fedc710":"markdown","33fc1a92":"markdown","5614a388":"markdown","b13faa50":"markdown","90dfe244":"markdown","8e1a791d":"markdown"},"source":{"11d31923":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","04f8baf5":"data = pd.read_csv(\"\/kaggle\/input\/hr-analytics-case-study\/general_data.csv\")\ndata.head(5)","70af5550":"data.shape","041fcf43":"data.columns","26ea9596":"from sklearn.preprocessing import LabelEncoder\nlabelEncoder_X = LabelEncoder()\ndata['BusinessTravel'] = labelEncoder_X.fit_transform(data['BusinessTravel'])\ndata['Department'] = labelEncoder_X.fit_transform(data['Department'])\ndata['EducationField'] = labelEncoder_X.fit_transform(data['EducationField'])\ndata['Gender'] = labelEncoder_X.fit_transform(data['Gender'])\ndata['JobRole'] = labelEncoder_X.fit_transform(data['JobRole'])\ndata['MaritalStatus'] = labelEncoder_X.fit_transform(data['MaritalStatus'])\ndata['Over18'] = labelEncoder_X.fit_transform(data['Over18'])","9f26e29e":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder_y = LabelEncoder()\ndata['Attrition'] = label_encoder_y.fit_transform(data['Attrition'])","cb50e755":"data.head()","15d438fc":"data.isnull().any()","e38fd254":"import math\nmean_companies_worked = math.floor(data[\"NumCompaniesWorked\"].mean())\ndata[\"NumCompaniesWorked\"].fillna(mean_companies_worked, inplace = True)\nmean_working_years = math.floor(data[\"TotalWorkingYears\"].mean())\ndata[\"TotalWorkingYears\"].fillna(mean_working_years, inplace = True)","29be75e2":"data.isnull().any()","555bb277":"corr = data.corr()\nprint(corr)\n","c11e75ab":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize = (18, 9))\nsns.heatmap(corr, annot = True, linewidth = 0.05, cmap = 'BuPu')\nplt.show()","7933523e":"X = data[['Age', 'EducationField', 'Gender', 'JobLevel',\n          'JobRole', 'MaritalStatus', 'MonthlyIncome', 'NumCompaniesWorked',\n       'PercentSalaryHike', 'StockOptionLevel', 'TotalWorkingYears',\n       'TrainingTimesLastYear', 'YearsAtCompany', 'YearsSinceLastPromotion',\n       'YearsWithCurrManager']]\ny = data[\"Attrition\"]","8093ba2f":"X","82eeecb5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\n\nfrom sklearn.preprocessing import StandardScaler\nScaler_X = StandardScaler()\nX_train = Scaler_X.fit_transform(X_train)\nX_test = Scaler_X.transform(X_test)\n","4b87ab75":"len(y_test)","fa3ac426":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)","10b73c80":"model.predict(X_test)","a56c4fe6":"predicted_y = model.predict(X_test)","91ee76ee":"model.score(X_test, y_test)","ff0c11dc":"from sklearn.metrics import confusion_matrix \nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import classification_report \n\nresults = confusion_matrix(predicted_y, y_test) \n  \nprint('Confusion Matrix :')\nprint(results) \nprint(\"Accuracy Score: \", accuracy_score(y_test, predicted_y))\nprint(\"Classification Report: \\n\", classification_report(y_test, predicted_y))\n","f554b784":"Convert the categorical variable into numeric variables using Label Encoder","c66c0a90":"The dependent variable y is Attrition whether the employee will stay or not.","54d441ea":"The columns NumCompaniesWorked and TotalWorkingYears have null values. We'll replace it by mean.","97a48de6":"6. Model prediction and experiment","eb6e2bde":"Now, we've no more null values in any column","c19bff2c":"Check if there's any **Null value (NaN)** (Data Cleaning)","88c6baa2":"2. Data insights.","b9508a02":"3. Evaluation: Trying to find if there's **Correlation between the independent variables.** \n","3fedc710":"5. Building the model. I'll split the data using sklearn and then use Logistic regression for classification.","33fc1a92":"1. Problem: Given the following dataset, we've to predict whether the HR will stay or leave the company. So, it's a classification problem.","5614a388":"Using a heatmap to visualize better which variables have highest correlation","b13faa50":"Conclusion: The **accuracy score is average**. I've to look into other models for making better prediction.","90dfe244":"Find the shape of the dataframe","8e1a791d":"4. Features: After seeing the heatmap, I'm taking up the following independent variables. Some variables are omitted which have the least pairwise correlation between the independent variable and dependent variable \"Attrition\". There are no derived features used in this model."}}