{"cell_type":{"544fcd94":"code","06cf9518":"code","12cdc9cd":"code","eecc557e":"code","81a1a3be":"code","aeaf9163":"code","e024d71d":"code","ee54ac14":"code","87c2ca17":"code","83089f06":"code","016f041e":"code","baa4da2a":"code","f99e97f2":"code","75b76c40":"code","33cf5285":"code","33d2283a":"code","739c1971":"code","a019adfe":"code","4da03a31":"code","cfe74be4":"code","6003ab3a":"code","efc475a8":"code","f6b2471f":"code","4e88f340":"code","0c31ee6c":"code","1c3f0c64":"code","02bebc22":"code","0cbaa01c":"code","f80fb45a":"markdown","4f8ca8a1":"markdown","489ab057":"markdown","d03da8fd":"markdown","634be541":"markdown","b0ed6da5":"markdown","d362f440":"markdown","ea964fd6":"markdown","c6d2e544":"markdown","df99cdf1":"markdown","def7883e":"markdown","32950ab4":"markdown","3c1895e5":"markdown","8c3e2821":"markdown","5c1f6450":"markdown","f913cf6f":"markdown","053eec5e":"markdown","4d713b61":"markdown","d5e2e9c9":"markdown"},"source":{"544fcd94":"# loading necessary libraries\nimport pandas as pd\nimport itertools\nimport statsmodels.stats.api as sms\nfrom scipy.stats import shapiro\nimport scipy.stats as stats","06cf9518":"# reading the data\ndf = pd.read_csv(\"..\/input\/pricing-dataset\/pricing.csv\", sep=\";\")","12cdc9cd":"# Analyze the dataframes \ndef analyze_df (df):\n    print(\"Shape of dataframe: {0}\".format(df.shape), \"\\n\") # shape of dataframe\n    print(\"There are {0} observations and {1} features\".format(len(df),len(df.columns)),\"\\n\") # number of observations and features\n    print(df.head(),\"\\n\") # first 5 observation\n    print(\"Number of unique categories:{0}\".format(df[\"category_id\"].nunique()),\"\\n\")\n    print(\"Names of categories:{0}\".format(df[\"category_id\"].unique()),\"\\n\")\n    for col in df.columns:\n        print(\" Number of null value in the {0} column: {1}\".format(col,df[col].isnull().sum())) # is there a null value in any columns\n    print(df.describe().T,\"\\n\") # for observe the outliers","eecc557e":"analyze_df (df)","81a1a3be":"# When the average price by categories is analyzed, we can make comparisons for groups, but we need to prove this statistically.\ndf.groupby(\"category_id\").agg({\"price\":\"mean\"})","aeaf9163":"# We apply shapiro-wilks test to each group and test their normal distribution.\nprint(\" Shapiro-Wilks Test Result\")\nfor category in df[\"category_id\"].unique():\n    test_statistic , pvalue = shapiro(df.loc[df[\"category_id\"] ==  category,\"price\"])\n    if(pvalue<0.05):\n        print('\\n','{0} -> '.format(category),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue),\"H0 is rejected.\")\n    else:\n         print('Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue),\"H0 is not rejected.\")","e024d71d":"# To determine the threshold value for outliers\ndef outlier_thresholds(dataframe, variable, low_quantile=0.05, up_quantile=0.95):\n    quantile_one = dataframe[variable].quantile(low_quantile)\n    quantile_three = dataframe[variable].quantile(up_quantile)\n    interquantile_range = quantile_three - quantile_one\n    up_limit = quantile_three + 1.5 * interquantile_range\n    low_limit = quantile_one - 1.5 * interquantile_range\n    return low_limit, up_limit","ee54ac14":"# Threshold values are determined for the price variable.\nlow_limit,up_limit = outlier_thresholds(df, \"price\")\nprint(\"Low Limit : {0}  Up Limit : {1}\".format(low_limit,up_limit))","87c2ca17":"# Are there any outlier observations? if any, how many?\ndef has_outliers(dataframe, numeric_columns, plot=False):\n   # variable_names = []\n    for col in numeric_columns:\n        low_limit, up_limit = outlier_thresholds(dataframe, col)\n        if dataframe[(dataframe[col] > up_limit) | (dataframe[col] < low_limit)].any(axis=None):\n            number_of_outliers = dataframe[(dataframe[col] > up_limit) | (dataframe[col] < low_limit)].shape[0]\n            print(col, \" : \", number_of_outliers, \"outliers\")\n            #variable_names.append(col)\n            if plot:\n                sns.boxplot(x=dataframe[col])\n                plt.show()\n    #return variable_names","83089f06":"has_outliers(df, [\"price\"])","016f041e":"# removing outliers\ndef remove_outliers(dataframe, numeric_columns):\n    for variable in numeric_columns:\n        low_limit, up_limit = outlier_thresholds(dataframe, variable)\n        dataframe_without_outliers = dataframe[~((dataframe[variable] < low_limit) | (dataframe[variable] > up_limit))]\n    return dataframe_without_outliers","baa4da2a":"df = remove_outliers(df, [\"price\"])","f99e97f2":"# new shape of dataframe\ndf.shape","75b76c40":"# We apply shapiro-wilks test to each group and test their normal distribution.\nprint(\" Shapiro-Wilks Test Result\")\nfor category in df[\"category_id\"].unique():\n    test_statistic , pvalue = shapiro(df.loc[df[\"category_id\"] ==  category,\"price\"])\n    if(pvalue<0.05):\n        print('\\n','{0} -> '.format(category),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue),\"H0 is rejected.\")\n    else:\n         print('Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue),\"H0 is not rejected.\")","33cf5285":"# category pairs for hypothesis\npairs = []\nfor pair in itertools.combinations(df[\"category_id\"].unique(),2):\n    pairs.append(pair)\npairs","33d2283a":"print(\"  Levene Test Result\")\nfor pair in pairs:\n    test_statistic,pvalue = stats.levene(df.loc[df[\"category_id\"] ==  pair[0],\"price\"],df.loc[df[\"category_id\"] ==  pair[1],\"price\"] )\n    if(pvalue < 0.05):\n        print('\\n',\"({0} - {1}) -> \".format(pair[0],pair[1]),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue), \"  H0 is rejected\")\n    else:\n         print('\\n',\"({0} - {1}) -> \".format(pair[0],pair[1]),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue), \"  H0 is not rejected\")","739c1971":"listofResult = []\nprint(\" Mann-Whitney U test Result\")\nfor pair in pairs:\n    test_statistic,pvalue = stats.stats.mannwhitneyu(df.loc[df[\"category_id\"] ==  pair[0],\"price\"],df.loc[df[\"category_id\"] ==  pair[1],\"price\"] )\n    if(pvalue < 0.05):\n        listofResult.append((pair[0],pair[1], \"H0 is Rejected\"))\n        print('\\n',\"({0} - {1}) -> \".format(pair[0],pair[1]),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue), \"  H0 is rejected\")\n    else:\n        print('\\n',\"({0} - {1}) -> \".format(pair[0],pair[1]),'Test statistic = %.4f, p-Value = %.4f' % (test_statistic, pvalue), \"  H0 is not rejected\")\n        listofResult.append((pair[0],pair[1], \"H0 is not Rejected\"))","a019adfe":"result_df = pd.DataFrame()\nresult_df[\"Category 1\"] = [pair[0] for pair in listofResult]\nresult_df[\"Category 2\"] = [pair[1] for pair in listofResult]\nresult_df[\"H0\"] = [pair[2] for pair in listofResult]","4da03a31":"result_df","cfe74be4":"result_df[result_df[\"H0\"] == \"H0 is not Rejected\"]","6003ab3a":"df.groupby(\"category_id\").agg({\"price\":\"mean\"})","efc475a8":"signif_cat = [361254,874521,675201,201436]\nsum = 0 \nfor i in signif_cat:\n    sum += df.loc[df[\"category_id\"]== i,\"price\"].mean() \nPRICE = sum\/4","f6b2471f":"print(\"PRICE :{%.4f}\"%PRICE)","4e88f340":"# We list the prices of the 4 categories that selected for pricing\nprices = []\nfor category in signif_cat:\n    for i in df.loc[df[\"category_id\"]== category,\"price\"]:\n        prices.append(i)","0c31ee6c":"print(\"Felexible Price Range: \", sms.DescrStatsW(prices).tconfint_mean())","1c3f0c64":"#For minimum price in confidence interval\nfreq = len(df[df[\"price\"]>=36.7109597897918]) #number of sales equal to or greater than this price\nincome = freq * 36.71096 #income\nprint(\"Income: \", income)","02bebc22":"# For decided price\nfreq = len(df[df[\"price\"]>=37.09238177238653]) #number of sales equal to or greater than this price\nincome = freq * 37.09238177238653 #income\nprint(\"Income: \", income)","0cbaa01c":"# For maximum price in confidence interval\nfreq = len(df[df[\"price\"]>=38.17576299427283])\nincome = freq * 38.17576299427283\nprint(\"Income: \",income)","f80fb45a":"## Homogeneity of Variances\n\n**Levene\u2019s Test for Homogeneity of variances**\n\nLevene\u2019s test is an equal variance test. It can be used to check if our data sets fulfill the homogeneity of variance assumption before we perform the t-test or Analysis of Variance\n\n* H0: the compared categories have equal variance.\n* H1: the compared categories do not have equal variance.","4f8ca8a1":"When we look at the average of the categories, we can some observe. But this observations are not a statistically significant results.So,\nwe will test all hypotheses of categories  in pairs and obtain statistical results.\n\nThe users in each category are independent of each other, and the value we want to compare is the average price each group pays. Therefore, we will apply  **independent two sample t tests.**\n\n# Definition of the Hypothesis\n\n- **H0 :** There is no statistically significant difference between price average of two category\n\n- **H1 :** There is statistically significant difference between price average of two category\n\n## Assumptions of the Hypothesis\n\n1.  Normal Distribution \n1.  Homogeneity of Variances\n\n","489ab057":"*  489756 ->   H0 is rejected.\n*  361254 ->   H0 is rejected.\n*  874521 ->   H0 is rejected.\n*  326584 ->   H0 is rejected.\n*  675201 ->   H0 is rejected.\n*  201436 ->   H0 is rejected.\n\nNormal distribution was not achieved even after the outliers were removed.","d03da8fd":"Category 326584 is very close to the price average of the other 4 groups we are considering to make the same price. Category 489756 differs, but we will not set a separate price for it, and we will continue with a common price scenario for all categories.\n\nThe average of 4 statistically identical categories will be the price we will determine. Since the average price paid by the other two category is high or close, not including them will not affect the purchase negatively.","634be541":"Categorical groups with no statistically significant difference :  \n* 361254\n* 874512\n* 675201\n* 201436\n\nWe can make the prices of these groups which do not differ statistically, are the same. we may apply the same price to the remaining two groups, let's examine their averages.","b0ed6da5":"## Assumption 1 :  Price(36.71096) ","d362f440":"## Assumption 2: Price(37.0923) ","ea964fd6":"## SUMMARY\n\n- A statistical test was applied to see if prices varied categorically.\n   - the assumptions for the test were checked\n   - All Categories rejected the normal distribution hypothesis, so it was decided to apply  non-parametric independent two sample test.\n- It was observed whether there was a significant statistical difference between the categories and pricing has been made for the item.\n- Confidence interval was determined as flexibility was desired in terms of price.\n- Product purchases were simulated for possible price changes according to the confidence interval.","c6d2e544":"**Pairs that do not have equal variance (H0 is rejected):**\n*  (489756 - 361254) \n*  (489756 - 874521) \n*  (489756 - 326584) \n*  (489756 - 675201) \n*  (489756 - 201436) \n*  (361254 - 874521) \n*  (361254 - 326584) \n*  (361254 - 675201) \n\n**Pairs that have equal variance (H0 is not rejected):**\n*  (361254 - 201436) \n*  (874521 - 326584) \n*  (874521 - 675201) \n*  (874521 - 201436) \n*  (326584 - 675201) \n*  (326584 - 201436) \n*  (675201 - 201436) \n","df99cdf1":"*  489756 ->   H0 is rejected.\n*  361254 ->   H0 is rejected.\n*  874521 ->   H0 is rejected.\n*  326584 ->   H0 is rejected.\n*  675201 ->   H0 is rejected.\n*  201436 ->   H0 is rejected.\n\nNormal distribution is not provided so, we can analyze outliers.","def7883e":"# Simulation For Item Purchases\n\nWe will calculate the incomes that can be obtained from the minimum, maximum values of the confidence interval and the prices we set.","32950ab4":"## Does the price of the item differ by category? \nWhen we examine the table above, there is no statistically significant difference average price between 6 categorical pairs, while there is a statistically significant difference average price** between 12 categorical pairs.","3c1895e5":"## Data Analysis","8c3e2821":"## What should the item cost?\n","5c1f6450":"## Confidence Intervals: It is desirable to be \"flexible\" in terms of price. ","f913cf6f":"##\u00a0Assumption 3 : Price(38.17576)","053eec5e":"## PRICING: What should be price for the item ?\nA game company gave gift coins to its users for purchasing items in a game.Using these virtual coins, users buy various items for their characters.The game company did not specify a price for an item and provided users to buy this item at the price they wanted.For example, for the item named shield, users will buy this shield by paying the amounts they see fit.A user can pay with 30 units of virtual money given to his\/her, while the other user can pay with 45 units. Therefore, users can buy this item with the amounts they can afford to pay.\n\n## Problems to be solved:\n1. Does the price of the item differ by category? Express it statistically.\n1. Depending on the first question, what should the item cost? Explain why?\n1. It is desirable to be \"flexible\" in terms of price. Create a decision support system for the price strategy.\n1. Simulate item purchases and income for possible price changes.","4d713b61":"# Checking Assumptions\n\n## Normal Distribution\nNon-normal population distributions, especially those that are thick-tailed or heavily skewed, considerably reduce the power of the test\n\n**The Shapiro-Wilks Test for Normality**\n\n* H0: There is no statistically significant difference between sample distribution and theoretical normal distribution\n* H1: There is statistically significant difference between sample distribution and theoretical normal distribution","d5e2e9c9":"# Implementing Hypothesis Test\n\nWe decide which test to apply according to the assumptions of normality and variance.\nNormal distribution hypotheses of the groups were rejected. Therefore, we need to apply a non-parametric method.\n\n##\u00a0Non-Parametrik \u0130ndependet Two Sample Test\n**Mann-Whitney U test:** It is a non-parametric method used to compare the means of two independent groups in a distribution that does not show normal distribution.\n\n* H0 : There is no statistically significant difference between price average of two category\n\n* H1 : There is statistically significant difference between price average of two category"}}