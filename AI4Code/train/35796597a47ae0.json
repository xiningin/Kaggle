{"cell_type":{"406ac4fe":"code","9ba69bd0":"code","ab95966a":"code","d786d290":"code","5c33fdb7":"code","e5066ef3":"code","471da181":"code","71e1cb0a":"code","b7c0d166":"code","cf7422ef":"code","e8b33e69":"code","ce3e2ece":"code","c79a3d66":"code","225c7815":"code","1a7ccfbe":"code","600dfbf6":"code","a931c8a0":"code","fafd2a19":"code","17df55cc":"code","89b29f68":"code","370f7aec":"code","f586b330":"code","9e661fb0":"code","31aa5bce":"code","30ff7dc7":"code","06cae249":"code","0074030d":"code","da1593e5":"markdown","fdda2a01":"markdown","e9f00df7":"markdown","62c89d5b":"markdown","412342d9":"markdown"},"source":{"406ac4fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n#importing the libraries\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os","9ba69bd0":"#loading the dataset and obtaining info about columns\ndf_house=pd.read_csv(\"..\/input\/california-housing-prices\/housing.csv\")\ndf_house.head()","ab95966a":"df_house.shape","d786d290":"df_house.describe()","5c33fdb7":"df_house.isnull().sum()","e5066ef3":"df_house[df_house.isna().any(axis=1)]","471da181":"from sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\nimp = IterativeImputer(max_iter=10, random_state=0)\ndf_train=df_house.drop(['ocean_proximity'],axis=1)\nimp.fit(df_train.values) \nX_test = df_house\nresult=imp.transform(df_train.values)\ndf_house1=pd.DataFrame(result, columns=['longitude','latitude','housing_median_age','total_rooms',\n                                       'total_bedrooms','population','households','median_income',\n                                       'median_house_value']) \ndf_house1.head()","71e1cb0a":"df_house1['ocean_proximity']=df_house['ocean_proximity']\ndf_house1.head()","b7c0d166":"df_house1.isnull().sum()","cf7422ef":"df_house1.describe(include=['O'])","e8b33e69":"df_house1.ocean_proximity.unique()","ce3e2ece":"df_house1.ocean_proximity.value_counts().plot(kind=\"bar\")\nplt.title('Number of houses')\nplt.xlabel(\"Ocean proximity\")\nplt.ylabel('Count')\nplt.show()","c79a3d66":"df_house1.ocean_proximity.value_counts()","225c7815":"df_house1['median_house_value'].describe()","1a7ccfbe":"df_house1.boxplot(column='median_house_value',sym='k.')\nplt.show()","600dfbf6":"df_house1['log_median_house_value']=np.log(df_house1.median_house_value)\n#Now plot a boxplot again\ndf_house1.boxplot(column='log_median_house_value',sym='k.')\nplt.show()","a931c8a0":"#draw boxplot\ndf_house1.boxplot(column=\"median_house_value\", by='ocean_proximity', sym = 'k.', figsize=(18,6))\n#set title\nplt.title('Boxplot for Camparing price per living space for each city')\nplt.show()","fafd2a19":"plt.figure(figsize=(10,8))\ncorr = df_house1.corr()\n#use seaborn to draw the headmap\nsns.heatmap(corr, \n            xticklabels=corr.columns.values, #x label\n            yticklabels=corr.columns.values) #y label\nplt.show()","17df55cc":"#plot a price histgram\ndf_house1['median_house_value'].hist(bins=100)\nplt.show()","89b29f68":"plt.figure(figsize=(10,10))\nsns.jointplot(x=df_house1.latitude.values,y=df_house.longitude.values,size=10)\nplt.ylabel(\"longitude\")\nplt.xlabel(\"latitude\")\nplt.show()\nsns.despine","370f7aec":"plt.scatter(df_house1.median_house_value,df_house.median_income)\nplt.show()","f586b330":"from sklearn.linear_model import LinearRegression\nreg=LinearRegression()\nfrom sklearn.model_selection import train_test_split\nlabels=df_house1['median_house_value']\ntrain1=df_house1.drop(['median_house_value','log_median_house_value','ocean_proximity'],axis=1)\nx_train,x_test,y_train,y_test=train_test_split(train1, labels, test_size=0.10, random_state=2)\nreg.fit(x_train,y_train)","9e661fb0":"reg.score(x_test,y_test)","31aa5bce":"#Gradient descent boosting\nfrom sklearn.ensemble import GradientBoostingRegressor\nclf=GradientBoostingRegressor(n_estimators=400, max_depth=5, min_samples_split=2, learning_rate=0.1,loss=\"ls\")\nclf.fit(x_train,y_train)","30ff7dc7":"clf.score(x_test, y_test)","06cae249":"from mpl_toolkits.basemap import Basemap\n\nm = Basemap(projection='mill',llcrnrlat=25,urcrnrlat=49.5,\\\n            llcrnrlon=-140,urcrnrlon=-50,resolution='l')\n\nplt.figure(figsize=(25,17))\nm.drawcountries() \nm.drawstates()  \nm.drawcoastlines()\nx,y = m(-119.4179,36.7783)\nm.plot(x, y, 'ro', markersize=20, alpha=.8) \nm.bluemarble() \nm.drawmapboundary(color = '#FFFFFF')\nplt.show()","0074030d":"import folium\nfrom folium.plugins import HeatMap\nmap_hooray = folium.Map(location=[36.7783,-119.4179],\n                    zoom_start = 6, min_zoom=5) \n\ndf = df_house1[['latitude', 'longitude']]\ndata = [[row['latitude'],row['longitude']] for index, row in df.iterrows()]\nHeatMap(data, radius=10).add_to(map_hooray)\nmap_hooray","da1593e5":"## Finding outliers","fdda2a01":"## Imputation of missing values","e9f00df7":"## Housing prediction\n#### Linear Regression","62c89d5b":"## Mapping","412342d9":"#### Gradient descent boosting\n"}}