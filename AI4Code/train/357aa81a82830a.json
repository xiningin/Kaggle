{"cell_type":{"d746de5c":"code","b707e893":"code","004a8ace":"code","8c1f18ee":"code","54e35126":"code","009fd131":"code","7623f67d":"code","fbeabc5a":"code","67227e42":"code","06809c4b":"code","1c736b1c":"code","bd208890":"code","17f25a6e":"code","dd1530fd":"code","f2c6d132":"code","8ef1d256":"code","c44c766a":"code","b99a5939":"code","fc3db088":"code","678adf51":"code","2d4ef6c4":"code","36bb83fd":"code","5bda301d":"code","a98d67e2":"code","b8b341cc":"code","a22242e1":"code","4f08f4e0":"code","206a137d":"code","aa8f70c9":"code","3a87f08f":"code","2d4df8cc":"code","6f38d102":"code","b713120e":"code","c8586762":"code","c52f9de0":"markdown","16700e96":"markdown","b2d31262":"markdown","58dd98b0":"markdown","2dc624c2":"markdown","8f8b62d6":"markdown"},"source":{"d746de5c":"import numpy as np # numerik de\u011ferler k\u00fct\u00fcphanesi\nimport pandas as pd #string de\u011ferler k\u00fct\u00fcphanesi, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #data g\u00f6rselle\u015ftirme k\u00fct\u00fcphanesi\nimport seaborn as sns  # visualization tool","b707e893":"#Verilerimizi csv dosyas\u0131ndan al\u0131yoruz \ndata = pd.read_csv('..\/input\/countries of the world.csv')","004a8ace":"#\u0130nfo k\u0131sm\u0131 bize verimiz hakk\u0131nda genel(eksik verilerden data boyutuna kadar) bilgileri verir.\ndata.info()","8c1f18ee":"data = pd.read_csv('..\/input\/countries of the world.csv',decimal=',')\ndata.info()  #Eskiden object olan say\u0131sal de\u011ferlerimiz \u015fimdi float64 tipine d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc","54e35126":"data.shape #Datada toplam ne kadar sat\u0131r ve s\u00fctun say\u0131s\u0131 oldu\u011funu g\u00f6sterir","009fd131":"data.columns #datam\u0131z\u0131n s\u00fctun isimlerinde uygunsuz yaz\u0131lar,bo\u015fluklar,karakter tipinde de\u011ferler vs. \n                #var ise belirlenmesi i\u00e7in bilgi sahibi oluruz.","7623f67d":"data.isnull().sum() #Datam\u0131z i\u00e7erisinde tan\u0131mlanmam\u0131\u015f de\u011ferlerimizin say\u0131s\u0131n\u0131 g\u00f6rebiliyoruz","fbeabc5a":"data.isnull().sum().sum() #Datam\u0131zda toplamda ka\u00e7 tane eksik de\u011fer oldu\u011funu g\u00f6r\u00fcr\u00fcz","67227e42":"data.head() #Default olarak datan\u0131n ilk 5 sat\u0131r\u0131n\u0131 verir","06809c4b":"data.tail() # Datan\u0131n son 5 sat\u0131r\u0131n\u0131 verir","1c736b1c":"#Describe fonksiyonu bize tablomuzdaki say\u0131sal de\u011ferlerin mod,medyan,standart sapma,max min gibi de\u011ferlerine ula\u015fmam\u0131z\u0131 sa\u011flar\ndata.describe()","bd208890":"data['Region'].value_counts() #toplam 227 tane verimizden ayn\u0131 isimli ka\u00e7 tane oldu\u011fu bilgisini verir\n#Yani b\u00f6lgelerdeki toplam \u00fclke say\u0131lar\u0131na ve\/veya ayk\u0131r\u0131 isimde bir feature var olup olmad\u0131\u011f\u0131 bilgisine ula\u015ft\u0131k","17f25a6e":"'''Pie Chart'''\nexplode = (0, 0, 0, 0,0,0.1,0) \nsizes=[12.33,5.28,2.64,9.25,12.33,22.46,2.20]\nlabels=\"ASIA\",\"EASTERN EUROPE\",\"NORTHERN AFRICA\",\"OCEANIA\",\"WESTERN EUROPE\",\"SUB-SAHARAN AFRICA\",\"NORTHERN AMERICA\"\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels,explode=explode, autopct='%1.1f%%', shadow=True, startangle=90)\nax1.axis('equal')  # E\u015fit en boy oran\u0131 daire \u015feklinde \u00e7izilmesini sa\u011flar.\nplt.show()","dd1530fd":"region = data[\"Region\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=region.index,y=region.values)\nplt.xticks(rotation=90)\nplt.ylabel('\u00dclke Say\u0131s\u0131')\nplt.xlabel('B\u00f6lge')\nplt.title('B\u00f6lgelere Ait \u00dclkeler Grafi\u011fi',color = 'red',fontsize=20)\nplt.plot()","f2c6d132":"countries_grouped= data.groupby('Region')[['Country','Population','Area (sq. mi.)']].agg({'Country':'count', 'Population':'sum','Area (sq. mi.)':'sum'})\ncountries_grouped.sort_values('Country', axis = 0, ascending = False).head()\n#Datam\u0131z\u0131 b\u00f6lgelerdeki \u00fclke say\u0131lar\u0131na ve pop\u00fclasyona g\u00f6re grupland\u0131rd\u0131k","8ef1d256":"yogunluk=data[\"Pop. Density (per sq. mi.)\"].mean()\ndata[\"Yogunluk\"]=[\"Kalabal\u0131k\" if i>yogunluk else \"Sakin\" for i in data[\"Pop. Density (per sq. mi.)\"]]\nyogunlukData = data.loc[:,[\"Country\",\"Population\",\"Area (sq. mi.)\",\"Pop. Density (per sq. mi.)\",\"Yogunluk\"]]\nyogunlukData.head(20)","c44c766a":"data['Birthrate'] = data['Birthrate'].transform(lambda x: x.fillna(x.mean()))\ndata['Deathrate'] = data['Deathrate'].transform(lambda x: x.fillna(x.mean()))\ndata['Industry'] = data['Industry'].transform(lambda x: x.fillna(x.mean()))\ndata['Literacy (%)'] = data['Literacy (%)'].transform(lambda x: x.fillna(x.mean()))\ndata['Phones (per 1000)'] = data['Phones (per 1000)'].transform(lambda x: x.fillna(x.mean()))\ndata['GDP ($ per capita)'] = data['GDP ($ per capita)'].transform(lambda x: x.fillna(x.mean()))\ndata['Infant mortality (per 1000 births)'] = data['Infant mortality (per 1000 births)'].transform(lambda x: x.fillna(x.mean()))\n#Datam\u0131z\u0131n i\u00e7indeki eksik de\u011ferleri yok etmek yerine onlara ortalama de\u011ferler vererek korelasyonu bozmamaya \u00e7al\u0131\u015f\u0131yoruz","b99a5939":"data.isnull().sum()","fc3db088":"data.corr()\n#\u0130ki veya daha fazla de\u011fi\u015fken aras\u0131ndaki ili\u015fkinin varl\u0131\u011f\u0131,bu ili\u015fkinin y\u00f6n\u00fc ve \u015fiddeti korelasyon analizi ile belirlenir.\n#datam\u0131zda yanl\u0131\u015f type de\u011ferli verilerimiz var string de\u011ferler korelasyonda g\u00f6r\u00fcnmez","678adf51":"#correlation map\nf,ax = plt.subplots(figsize=(12, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\n#korelasyon tablosu,annot=i\u00e7indeki say\u0131lar\u0131n g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fc,linewidths=\u00e7er\u00e7eve\nplt.show()","2d4ef6c4":"arinmisData = data.loc[:,[\"Country\",\"Region\",\"Population\",\"GDP ($ per capita)\",\"Literacy (%)\",\"Phones (per 1000)\",\"Birthrate\",\"Deathrate\"]]\narinmisData.head()\n#Datadaki veriler \u00e7ok karma\u015f\u0131k oldu\u011fu i\u00e7in i\u015fe yarayanlar\u0131 bir araya toplad\u0131k","36bb83fd":"sns.jointplot(arinmisData.loc[:,'GDP ($ per capita)'], arinmisData.loc[:,'Phones (per 1000)'], kind=\"regg\", color=\"#ce1414\")\n#Seaborn grafi\u011fimizde en iyi sonucu para ve telefon kullan\u0131m\u0131 verdi,ikisinin aras\u0131ndaki uyumu grafi\u011fe d\u00f6kelim","5bda301d":"sns.jointplot(arinmisData[\"Literacy (%)\"], arinmisData[\"Birthrate\"], kind=\"kde\", size=8)","a98d67e2":"arinmisData.sort_values('GDP ($ per capita)', axis = 0, ascending = False).head()\n# Ki\u015filerin kazan\u00e7lar\u0131na g\u00f6re ilk be\u015f \u00fclke","b8b341cc":"#Veri Normalle\u015ftirme\nfrom sklearn import preprocessing\n\n#Maa\u015f \u00f6zniteli\u011fini normalle\u015ftirmek istiyoruz\nx = arinmisData[['GDP ($ per capita)']].values.astype(float)\n\n#Normalle\u015ftirme i\u00e7in MinMax normalle\u015ftirme y\u00f6ntemini kullan\u0131yoruz.\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\narinmisData['NormalizeMaas'] = pd.DataFrame(x_scaled)\narinmisData.head()\n","a22242e1":"#BoxPlot ile ayk\u0131r\u0131 de\u011ferleri kolayl\u0131kla g\u00f6rebiliyoruz\n#Ki\u015fi ba\u015f\u0131na d\u00fc\u015fen gelir bazen 50000$ lar\u0131n \u00fczerine \u00e7\u0131kt\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcyoruz bu datam\u0131z\u0131n genel rakamlar\u0131ndan olduk\u00e7a u\u00e7 bir de\u011fer oldu\u011funu bize g\u00f6serir\nsns.boxplot(y=arinmisData['NormalizeMaas'])\nplt.show()","4f08f4e0":"sns.distplot(arinmisData[\"NormalizeMaas\"],hist=False,bins=20,kde=True,color=\"g\",kde_kws={\"shade\":True})\nplt.tight_layout()#Increases the alignment of the drawn graph.\nplt.plot()","206a137d":"#Histogram\narinmisData[\"Deathrate\"].plot(kind=\"hist\",color=\"green\",bins=30,grid=True,alpha=0.4,label=\"Deathrate\",figsize=(18,8))\nplt.legend()\nplt.xlabel(\"Deathrate\")\nplt.ylabel(\"Rate\")\nplt.title(\"Mortality rates\")\nplt.show()","aa8f70c9":"X=arinmisData.iloc[:,3].values.reshape(-1,1)#NormalizeMaas s\u00fctunu\nY=arinmisData[\"Phones (per 1000)\"].values.reshape(-1,1) #telefon s\u00fctunu\nfrom sklearn.model_selection import train_test_split  \nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=7) \n\nplt.scatter(X,Y)\nplt.show()","3a87f08f":"from sklearn.linear_model import LinearRegression  \nmodel = LinearRegression()  \nmodel.fit(X_train,y_train)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolyReg = PolynomialFeatures(degree=2,interaction_only = False,include_bias=True)\nx_polyTrain = polyReg.fit_transform(X_train)\nx_polyTest = polyReg.fit_transform(X_test)\npolyReg.fit(x_polyTrain,y_train)\nPolyLineer = LinearRegression()\nPolyLineer.fit(x_polyTrain,y_train)","2d4df8cc":"print(\"Kesim noktas\u0131:\", model.intercept_) \nprint(\"E\u011fim:\", model.coef_)","6f38d102":"y_pred = model.predict(X_test) \ny_predPoly = PolyLineer.predict(x_polyTest)\ndf = pd.DataFrame({'Ger\u00e7ek': y_test[:,0], 'Tahmin Edilen': y_pred[:,0]})  \n#print(df)\n\n\nfrom sklearn.metrics import r2_score\nlbasarim=r2_score(y_test,y_pred)\npbasarim=r2_score(y_test,y_predPoly)\nprint(lbasarim)\nprint(pbasarim)\n\n\n","b713120e":"plt.scatter(X_train, y_train, color = 'red')\nmodelin_tahmin_ettigi_y = model.predict(X_train)\nplt.plot(X_train, modelin_tahmin_ettigi_y, color = 'blue')\nplt.title('Phones Per 1000 - Gdp Per Capita')\nplt.xlabel(\"Gdp Per Capita\")\nplt.ylabel(\"Phones Per 1000\")\nplt.show()","c8586762":"from sklearn import metrics   \nprint('Mean Squared Error (MSE):', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error (RMSE):', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","c52f9de0":"* Datam\u0131zda pop\u00fclasyonun alana b\u00f6l\u00fcnm\u00fc\u015f hali (pop.density) kolonumuz var\n* Bu kolonun ortalamas\u0131n\u0131 alarak alt\u0131nda kalan b\u00f6lgelere  \"sakin\" geri kalanlar\u0131na \"kalabal\u0131k\" niteli\u011finde bir kolon ekledik","16700e96":"***Cleaning Data***","b2d31262":"** Say\u0131sal bir\u00e7ok de\u011ferimiz object olarak girilmi\u015f bunlar\u0131 uzun uzun d\u00f6n\u00fc\u015ft\u00fcrmek yerine decimal=',' komutunu kullan\u0131r\u0131z.**","58dd98b0":"Bu grafikte di\u011ferinden farkl\u0131 olarak ters bir oran\u0131 ele ald\u0131k\n* Yani bir tarafta do\u011fum oranlar\u0131 bir tarafta okur yazarl\u0131k oranlar\u0131n\u0131 inceledik\n* Yorum yapmak gerekirse okuryazarl\u0131\u011f\u0131n y\u00fcksek oldu\u011fu yerlerde do\u011fumlar\u0131n az oldu\u011funu g\u00f6r\u00fcyoruz\n* Yani bu dataya g\u00f6re cahil \u00fclkelerin do\u011furganluk oranlar\u0131 daha y\u00fcksektir denebilir.","2dc624c2":"****TYPE UYU\u015eMAZLI\u011eI****","8f8b62d6":"* Is\u0131 haritas\u0131ndan kalitesi bire en yak\u0131n de\u011ferler ki\u015fi ba\u015f\u0131na d\u00fc\u015fen gelir ve telefon kullan\u0131m\u0131yd\u0131\n* \u0130kisinin ili\u015fkisini grafikte g\u00f6sterdik.\nGrafikten yorumlad\u0131\u011f\u0131m\u0131z kadar\u0131yla maa\u015f\u0131 0-10000 aras\u0131 ki\u015filerde 0-250 aras\u0131 telefon kullan\u0131m\u0131 olduk\u00e7a yo\u011fun \nKi\u015filerin maa\u015flar\u0131 artt\u0131k\u00e7a telefon kullan\u0131m oranlar\u0131 da (yo\u011funlu\u011fu azalsa dahi)  giderek artmaktad\u0131r."}}