{"cell_type":{"7c5e7cf0":"code","e030b5f6":"code","466a0db8":"code","c44b7818":"code","7c787874":"code","be622320":"code","aee3404d":"code","edcf0af3":"code","92dc66f7":"code","8e82b228":"code","e52dc0db":"code","9bbd8014":"code","b8ec3de6":"code","1bf215e6":"code","4804b914":"code","747df4bf":"code","dce37bc3":"code","40bf7bb5":"code","15d799d3":"code","0310d434":"code","a1dbed02":"code","8d78ec40":"code","281fc6e1":"code","17a86edb":"code","dcf6baf4":"code","24d8b703":"code","bfe30262":"code","2fd37a48":"markdown","8409ec49":"markdown","339bbb8a":"markdown","6c0272a6":"markdown","b06ee54d":"markdown","e8ecdfb5":"markdown","0361924f":"markdown","7864b064":"markdown","954fee7a":"markdown","15e39480":"markdown","e24bcc6e":"markdown","afb81e20":"markdown","5426cecc":"markdown","ff46a013":"markdown"},"source":{"7c5e7cf0":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxIQEhANExAQEA0NEBEbFxgPFg8YEhcQIBYiIhkdHx8YKDQsGBoxJxcVIjMiMTUrLjEuFx8zODMsNygtLisBCgoKDg0OGBAQGzYdHR0rLSswLS0tLS0vKy03Ny43MSsrMC4tLy0uKy0tNy0tNysuLSsxLzgtOC03Ly8tNzcuLf\/AABEIAQwAtgMBIgACEQEDEQH\/xAAcAAACAwEBAQEAAAAAAAAAAAAFBgMEBwIAAQj\/xABFEAACAQMCBAQDBQUECQMFAAABAgMABBESIQUGMUETIlFhBzJxFEKBkaEjUmKx0TNyweEVFiRTY4KSosI0Q3MIk7LS8f\/EABkBAAMBAQEAAAAAAAAAAAAAAAIDBAEABf\/EACoRAAICAgIBBAICAgMBAAAAAAABAhEDIRIxQQQTIlEyYXGhQoEUkdEF\/9oADAMBAAIRAxEAPwCK63ON6FcyQarSXHVADt6AjNM0lrkHIwRmq0lrhSoXIfIIxkFT12qSM62VNGX2t07AR\/sVVAd3VBsQO5GWOw9Tua8vEUYCOSCMJ\/vIQUlHv+630xv0zU\/MHL0tm51KWtyfK67qR2GezVQeZWDE4DDRo7AKM5H5V6CaatCWmiZ49BRS7NqddDJ8rJq7Z6NnO3Y1uiJkAkH5RWU8k8Ce8nEmlhYwPr83QydgK1\/GM7HYDpUueStI1ELDI04yMHrQ26gCnVgKvsNqvS3qqpJGWJwAu5JPSqV11iRjiQk4HY4G43qcKPdEttAFZT3waIxx79sUL4CSUPzFkd86znct29NqKPWnSTTotA4Hr1rlhIW6qI\/+6h8l0Io3diQqg\/U+1WY71ZIxIrDQx2PqfSivVgeaJkOcgjIFez0quhIIX7uD+e21WMdKWbRPGcZ2xnFdCdGBXOSp3rhDufwrzgHLADUR174z0rTCvPahmHXSB3P6CuLa2SMPjIEnZuw9M\/jUqZGRkGuG3GPShD5OqIkj0EIpJTfqfX61T4vahwzksCiHGjrtVq3LAnIGMHHrXF5k5GdJ9a422nZmnMUniFFHUoDuN8DPYVc4WcANvpHrV7ifDlmkBiKo33iBkN7D0qjco8I0aCSWHsv61RacUkHvyd3DHqoXzMeter5fk7V6gNHEXsDba8Z9Qf8ACug8Z6OP5fzpZPKN0O2fo1RtwG8XbTJ+BpNfTHccYw33DxMVZWBVQ2VJXDbbHB67\/jQ6z5JgklEskSjIPlGy6ydtqpNw67XvMPqpNe13a485z\/GjCiUpJUgfaj4kP6W3hAIAoRR0QYAqTRnfFZ7\/AKbvF2yD\/wAzCprfm+7H\/tBvxFZUgHg+mNN5DKHLiJWBxhjjy+p9aqPwslPKplLn5nKgI\/cgd1\/Whic8SdHtZD\/c\/wAhU459hGzxTIPdP61lM3hJdJBng8ZVAjBQVzvGfKd\/fvVkx5zQWDnWwbB16D7g\/wCAojBx+zk6XMQz+82KO\/sS8cwZx2OR0IjQt4ZbIP3srgEY64J6VBC5WKJANAAPUZzJ\/wCPTFErzjVvGZQAZTFGHYwMhypJ9T1GM461VXjdi4EbFtTqHyFIATOxBHutc5NxpBQxNO2ixauT4U7korBj1ypPT8ts0a6471StJ7W4X7OsiP4ag4fZgM4z5vcEVcSSIagssWIyA+HTyHsD+7WIyf8ABXuZ1DAFsH0G2a9NPpjdSxRUTIZhk6fXb3qxcWqtrOhXLLtk7E74\/Wlq8keTRb4Id8BgpICAgnq38vY1qi+wFx8h6AbBiSdQB3GPxwajvLhYkaZzpijUlj7Ab7DrVkvnAwRgDrQHm45tZFIIDYG3XSeoxWVujV+gS\/xCtDlYhKz4Oksqqn6nNCZuaTJkO\/X93AFKXA7FWnSPTqUvjfuKc5uXolyfs6frVTxwi6GpUVbLjhQ6gw1Dbzf1NXpOPa1Ct4ZB9Sv9agHD7aNAZIYyCR5i7LuTgD86lbgEJP8A6fqO5Nc0gj5JxKBwASqFfRh\/WvVPJyxCACYFUn1z\/WvtZxRnI0OZCFyAc7flmuLYsSyY2XTvnqSfT8Kvy4PlwVx7E59qjSNQxfOCagT2D42fHBqJ\/oDV3xoz3rnQh7\/o1GLBMkCHOUToeoXoOppX4hzTwqAlCRNJ3WBNX69KG873UtzPJaW5LRxjH7Pcu3cHHRRVCw+G00ZSZ2jOCCRToQgtyYxQlQ48KSzuxlIyjEZ0OdMoGfQGra8uwns4\/GssvUuY7kl4pIyzEo2SCD2II6VqfIvHft0bxvj7VbY1erxno3+FFPFx2gW2iOblCJiNyR\/EENV5eQoG7R\/ilOptSfY1F4BBzuQaVbQPORivGOFLbyyqEzbCZYj5yqmbSSSCD5QBQy8tZEZdMscrP5FCFs7AHuN\/nA6n5aM83vePPPbiN5LSCcPmOLOhtJ3LJ060G4hDJD4FwAzKVnxtjQcleuPN8tUwjY95VGNstQ2M4kAaWGLQj5Z21ICWBI8u+rPb2zUs6XkzM64nmhRUdQFVlw3T+PHrQmD9mLXI8sjyPIwGos2rAznuNz361sHBvDmea8iMclvP4YGlSHDAeYsGHc0M1x2Y81a8kPJYuWtz9rGliRoGfOqAdTii8lqG33BB6rpDH8amhfID4C7dBv3NSqNj2NK0TybbtlWd8ZfBJA+7Qfjf9mDggnsetHthkbF8fp61R4hASjNgHTWeTUZBy\/dR29yt3OdMMFydeBk41eg61R5k5purm4a4jkaCEMwjWPygR52J\/eb1Jq\/xKydzLDHEZZZZXwAM6QGOW9gKvWHIk06q5lgijVfMWJJH4Abj3quMl2xs0JF4biXzyyu+cfMzEflVm2ubuMFEuZURuoDtR3mDlq7t2VHiDW8jKqSxNrhck7DUPlPsag4zwGeykjW4jEYmQ6Arhhseu1O5poHigpynzebRTb3ZaaALmNh5nDE7qT6V6hnFODT2oQzxhRL8oJU7D6V9oHxOpH6eMfsK58EHsKnIr5SuKJysbVD90Ut8z8wQWeu3RNV20MjAINlwpxk+\/YU2rSPzHy\/ILiS4XLR3IYEjqraMYPttS5pJWkMxJOVSFPg5FigkYRtcXQ15lYgkEZxsKbOG8Uimj8bzRafmWT7p779xUN\/wqKeIRuMKEwdO2UBzjPYZAqpJArxiDAVLuRj5dsoP8M0lV2WdlTjdzBeK0EcsLkeh3X3oX8LrUfa3TxQ88fiK+nutTW3AbhZDqKiBXYqTsyDOwB77ZzVL4VJIOI3TICLRmlILjfw9RwQabFLaQOT8bNjFqRtkVFPbS\/dK\/wDNVu2nWRFlQ6o3GQfUVKa14kyLk0LKQeAJfNGZLhtR15wZDsR\/dxSbzLbBUliEZjSaF1VSM\/tS5JAxsNh6088WsmYFQGfUPwG+2\/agfFbRWitpnbL291pUjdfM4B+u1JxycWMmlJbEPlWRBLb2M8cciM3kLYOnPmYfnWj21j4AdR5FQgKvUEAdMfSk6Th0cMlhauTFKt1ekOmkFsuqgkjpsv4VotgmE3OoljvnORsAcn2FMnPloF4+L5lO2gAUYz759alI0jOdhVjRjO9clAcjNAdYBP8AbliGDKGx6EZOmu7u6CxOWOlFXOV3yTtjB75orJBkgb6RQzmWRLa3EhAJQlgr9C4B0j88VzdsOCXQrnjCQERi2eHxTkSMPKST1wffvUd9zSY\/DZf2krADznyg+uewohwHgi3KfbLgtJJPv5zt+XYe1EDydbHUNA0P7UacfI6UV5BtpzE8yEYjGhvndcQsewIPzLn8e4pV+JkfjG3u3fQrRmPSxBRJwfOARRjmjgP2SPXHl4wNw\/Ue4qty7GOIWd1akam0a0H\/ABVHlOT1JGRTItLaBcVFpi3zNx2G6S1Cys7W8WlxJp3k2yw09jXqjWBQPKoA9hXyj5oNY0fpuvjV9r4+wJ6CtIj5XMxGliSAuk5J6AVUbiC9EWSZv+GMr\/1Hyj86HcXSa7tbiJV8GdWIC5Vs4AbBPQE5rPBy2xb4jfGNWCBHKnGHJCMvrkA0C4CUWXPhXKuinRqcvAik9Bj5fxFD4eOtZyHWpeMk5U\/Mr9xg18vucopCBDATJIcADbJPQbVOoOtHpqkg5xK98d0tS7IkrhSyKWJbBJAA9gaKXHKV+4FvFNbWFjp0nw1d7sx9xk+UE+3TNWfh\/wAyWrRratot74MyujH5pAd8E9fpTvjv6U6OPj2RTz8tIg4daJBFHbpkRwoqrnc6QMVYauUOa+TPgFuworSQkohCFdXUuvYAdfakTizsJXRtSl7pSqAnAbSCox9RTcOIN5tLFmJ2wNX6CkfjF1rvY5MHKXS6sq4IZY8nbrjeoYO+imEfyX6PvG7l1ksYLhISPM7GXUCJTq7gjAwenenThd0ssSOoCpjAwMDA9u1IPMMJuZ7GSSRiXZxnS4wAvXB+bqKd+XBiLTq16Xff1OqiVaNyxXFNF8gDGSo1D7xUZ\/OuBCoywIyfesn5jklm4pcReLIUX5FzkKoUEhR2NTiO4MaftgFaNxura8Dr+NbK10ZDC326NR8M\/hSp8RkMkUCAErJIQ2n8MD2FL3KvC3g4gqo86WzkSCN3BR1aN9LaU2A26U9cURJLeVWJHhtnbqGBzW5FwkjIKpIUpeZHhZLSPUG8qgJFr0k9AWJ6nBo9NdzG3E6kh++Uycjr5e1WuETw3KRy6VLIo83tiqkPF3Zwgt5v7Vw2pfJo7H6VxQ+wLZ8ea98W2kibxY9QOqMqpx1IYH1qv8O7YWz3RyWbxWAHZFDbD6+am2\/nit43MaKGcHOO5oHye8EiiWPJk1sJDjrIGOR+dE5adANfDYoc08L8C5dUUmKXzroDHAJ6V6mjnS1MkEUgDa1lKnRudOGIzsa9Wxk6BUzS7yV8iGMhZCuSzDIVM4zjuT\/ga4gsFTzMzzSd2lOfyHRR9BSHw\/ncNxMhzptbsCJCfukE6CfTJJ\/OtEJwcU92Rn15Mb5AWq1uMPIysCsmDjuHAwT+QWgnFeJYcJpOpw++rSFUDbftk\/pmq3CY5kje4DppO5kkLDWB3AA+X0zkmlqTY32tWyPnjkyO9Vp0Kw3SjJLbIyjrq9DjvQb4ecrW0LS3RlgnurYf2cTo\/htjIJI7+lWue7GfiPDpn8R4FtgzNFFjEoUZYN+A2wazv4WW8b3vjwXDJ9ntpmKY0s2B8rDoyfjTYpNWY5zS4FfgnDZb43RjAYqzu2kjxFJclWVerYJ7djij3LXNl0WFt+1a9tm2VctrA6qQOqkdDSLwTj0trKt3CwSdNXXdWU9QR3FaRxHmW+ubSK94fPJLOG\/bxKgJDHui9cA07JJp0+hMMXK2PqcW8Ro7hdaTRkJPC3Vc7gkfh+tErq91RSMN9xpz3BNK\/LTyTCJ7yMxcRMW+BjC9ht17GjX2jwVKModdQyoCnI79a8+c+\/CK+FJeWfILxTLgHeJGbBXTpTTsM9DvS7x6CFXt7iMESSSSyOpZst+zI1YJ2O36U1cSsYmiYpGoLofkAUkaem1KCXSO32eUGaJ\/EWIt8yPowMYpV06Cgk9gXnDiP+12dwgICxqfN1KaiCM0\/cBcGAuPld5CPoWOKz7isambhkQJWUsI3DhCNGrc77dSfyrS7e28KMRAlgp6kAfoKO00mjJtpcTGedZJIeIyyQA+OXXTgdSVGdhQePjV9lcRMxGdOhXPXc9KbuKwiXi80JyDJG6rqH3zF1FGbWxj4WxiEV3MbiON828bSKuxGM9jT01W1YyUnGqB\/IfGby84gouIDFEsL7hCoyBscn+8adOYLEsFeMgAB\/Fz0aLSd\/qCAarcH4+kjkeBdRbHeeIotWLsySJPbADVMvlOdmQnzAGp8lWl0LTd2Z\/yLzGhWW2Y6ZomIX0KE+WiyHiJORPIV1Z\/sk8LT9etfJPh+8dqs6gtN4k7SoPm0sw0ke4Cig0ZvQ6wRPI6scCnNJPRTCakrDPM3GBHER1uAh2HQHsfYVa5LjEVvbqersaJ8N5FSO3uXuCWlmifPsMVQ4YNUIVHHjWwB\/vIcFTQz1GhUpKXXgNXJ0kjGQTn8a+0H5h4gfBR1wGLjP5NXqChXEy7icmrI6MvTFbH8N+aPt9oNbD7VaYSUnuvZ\/yFYMLlkwr7r2buB6Gp+G8UltXlMLYF1DJG\/oYmG\/4+lenKFqiQ0HhXxMtWjkS4SUTCR9DogZGi15T3BxSxbc2RWskr\/auJXsDIwjhmwiKfuknWcgfSlbRpBHTBqlcb1qwRXXkZ7rP0JecRmi5ea50g3E1qNuwMrY\/k9Ylap9mZ4EcibCl5ImIwQDlQR1GT17kV+kW4Slxw5bJlDRyWca49wg07j3ArCp5IbmG1hQCKKwjc3LaMSasjJ1f+4WOwFJUkv4AdtOuxZkgDexAp\/wDhJxFIGNsSwNxlsvsoYdQppJnnFxJnAhjYqqjskXQE+u25Pckmm7izEKGxHPK0kfhyoT4aYI86HqxYDGjsaZl+UEvIWF8Z0zWZHBcOCMRL+ftU\/ArhLq2FzgHx2YN7AMRgUncNmmuYjBkxMUK6\/uscYBzXXwoupYrefh8iO0tvJqwvUIy4qDiuErKctppIb5r0WwI0Fl7ID33GN6H3kSQqZ\/CWPUGfw12kDafNknp0oteReCEkchsuvUbKAp\/M0E5injeKULG4uJY5d8E7aTjJ6Ab1L1phRV7Qr8avfHv+Fy+AIImwy751Eyrk7AVoyTZjD7EMSR9CdqTNK3c\/D5gNLW0S407IxLLtg+1Mq3YTRb4yyoPz9PamSmkkdODuhR5h5Me6uHvftCwWoUMzeYSKqjzHNIqcVjhmaP8AaTWbMQkjvN4gPY4BrQviXxj7PaJZKQZbwnV7Qj+prIJhkFegq300LjbEZczboao+PeDIrBxpyucdWXUPz2rQ7e6TSFDEZ3053HqQP6VhmdQA747diO9OHLnOpjRLW6iWWEEYlTaRPTIHUe4rM\/p29xMxZElTNfteIPLFILeRZLlQVGtgQr42LYzWPJ8QOItmMsnjyOYlaCKISmbVgN03OatWfNIt+INcRNhsafMRouF7KWGynur\/AMRBoVy\/M9ndRcQkgBEDzMRO2hA7A7gnJYjPYGixxSVSAk2no2e741JaWCSXyob4qE0QHaaYjYL\/ADPYYNZ\/wziMc7iRDguMMYd2Rh2I6sncNSfzRzPNfSNIzlywK6gNKrH3SNT8qerHJahttph0yByZE+UJqGlvUk1ssPNWzYZODNZ4hwH7TEhhuoTht9RGOn869WYycwSqo8xZm\/PA\/n1r5Qf8Zhe+ykUzt2OevpUGyqAM41Dr161PdSAAjoKqv5kx97H61ahBHdPnvVnljgb8Ru4bJMjWwLsPuxD52obNPgZ71vfwc5ZWztPthKvdX4BJU5CxfdWunLijTQ0ITSgGFUAD2AFfnj4lcGmsJmh8IrYTzPIJF3V3ZsqGPbSDpArfyapcyWS3NldwOoZWt5cZ6htBwR71NF07Zp+YU3wdsE1JNxOaKPw43ZUDo2Oq6wcg4PQ5AqGPbSvZRXF6cA1YB5N05Pt4eJ2kd+s89sg1CWGFhoWUfNg41BTscZoBwriKJxKWAExoNUYLkkkKo05099jWWcH5hu7Ek21zJCGYEhd1LepB2NPXw34Y80h4nOSWVncZ++3VmNR54KMJNlCcpNJmlz2U4HjZDR+gaXc9jhj09+tCvCd7RRE\/hXd7LcKcylSwywAyPm7VZueNyyFGWbwW1DA0alYb+tH4E8RVmlVJ\/DYlHQYZT9BXmw10UyUklYlwcMu4zbhFCPaBvELAMrdMHf5lwDR+GaRpSHRVdVTofI2WNTyXIAKmRpUlcBcDzqxbpkfdqSeNftA2BRhF0+U+Y5FBk3FUapNyk5GX\/FTUL8ZKn\/Z4\/k+VKU2pl+I8gbiNwB8sYjX8lFLDV7GFVBI86b2QINzUtRJ1NS00A40ipreMSyRxySiONmALvllRPXA61DX0CuNGeHg9mJYhFMby3mV\/nPhGOYfKX6+Vuw2JzRHmjl63WEukaxGJfM2WBzg\/dJJxlSv\/ADAg7GlPhvEZLYl4mID41qfkdQehFXuOc0C5QQ+CUZsZw22R32GWP1JoKa\/Ydp3YBRdWW6L2xXqkWvUwEo3hLGoZZsd8YqSWYEa8ih+gyeyg1oyiRAX85JxkVunwnhJsVaJzb3ClyTgNHMuSASPasU0YwvvT1yB8R1stFncRZtEcgPHu66idROeo6H\/loJptaMNysLvxVGoKsuNwp2+oz2q9GuVdfUMPzFZpzDz7YWbFEke6nwpH2YLoXIyPOTijPKvxAtL0pEJSLlk1eGwYPqA3GfvEUji+zDAnTTLIn7rEfkaiuqtcQ\/8AUXXYeNJ\/+RqtMetWAFSxhEsiJg+Zu3pX6K5b4UEs0UgB5EDEAdE+4PpgZrCLPhcsBS5ZP2MsbFHUqVbPb2Ybj8K2235lRY3bI8qjT6aQowK8\/wBXK2kizFFtWgnb8HTKsR8nT6E0YhAhOoHCnqO1KnCeZJJiAI2YNnqNIx23NVLrm9oD4U5jjOvbCyySMOwwuwNSxg\/A6UX5CHNh+zn7TAA2khjGvcfvAeoopyfNa31sHiHkZjrBJ1LLSVxhJ5LWS9jlDqoDoCpTKD5h7bUD5d4rOXiSN5YtbE6UChi57Er1GPpRxxqrZ0k3GrBvO7aeI3iacaXXb6KKACRiflKL\/Fj\/AAo38RQ4vVmZShmhT6lhsT9aCJvvmvQx1wRBNVJ2QzZDDbOfSuhJmpWPUdq+kgdhRiysH\/Su\/Ex3rTvhXyZZ8QtZ57mEu63LIpDyoQgRT0U4+9Rpvhdw0s20xXUcZkalyyqPYyMHIxczD1qNTk5rV+avhzwuCEzmaSzXIAYuzqXPbS2SazK8tUhkeOKQzxocCQDSG9SB6ZooZFLo6UOJGcDqd69XxFx2Ir1EAFeaOXreK28eCKRGSRQxeRXBQ\/wgDG5FLkKYX8a0ni0brZ3EUqqV8NjlQ48wHl6j1ArOIPlH41N6ScnB8i31KSlo5m239KooTjocVeuBkY7n\/Gqznt2Xp\/WrErExWrPlscZFTH97JDKRuOoP1FU\/EAYb7j8qtLWPsFomt3JAJ6\/qTk7mu5DUNocgfj\/OrsMKt1z+FaLemEOXszQXUGSWhVJEH0YB8enzA028mWU08BmgeM3sLMo8YKyKOzAd2pMhdoctAWiZ0KtpYjXGeqn1XYbUX5UvpLYibWAJmxo9WHX9CKlzQ8oqwTvRpfDOFSW8ZurmV2kV1OZH6DO5PYf50XzZzSNExjeVSD5PcbZxQq+4pHNau0oLW7J5wM\/4UF4RzDpCJBw4x2j4XLFVf6+bqKlVvZVwYa5wvRHD4ceAMhQB6Urcf4XquIvsbwFbe1jDIGx+0JbqQdj0q7zVMFRnJJ0KTgdS3YUo8p3Dw2kUo0QxTTMjzkakWQ9A430+xo4LVoGb46O+c7G7aJJ5oiBbE7iVZAEOM7fMBkDelWKbPcYrVDwuVgUl4kJYp0OpYEyrREb7nGRis05w4JFZTrDDJI8Lwq+XABBLMANvZaoxSfTJMkU9oi8QDuKje7UbahQ203fGcZ+XO66uwIPamfl7jUFsSLvhyXRUncPpYf8AL0NNba6FqC8mgfDnnqz4bw4LOJhJLcTEBI2OrZeh6UD4h8TruQkRpHDHk6e76e2SdqM8\/wBzDxHglrxG3j8KOzn06O6KToI2+ifnWVCQetAoKW2dbWkWZ7t5CzSO8gkcsdTEjxD1OD3xXKJjofLUAkFfRMopgNFmvVEJB6ivVxg9c186xzWs9ui4aZQMlv4hWfR7AD0AqW\/IMrnsTtmos0rFjUI0ijLPkyOd8DHc1Uk7CrMm5HsGP6bfqRUCdV2LZYbDqd+lUxM6ib7w3kvh13w1beJoLrwQG8WER+KXAOVLDzAb9Kwue2MMklu27Quy\/UA7H8qOWHL\/ABBGE1vDNAR8ro5jk\/MEGhfEXuXuCLpW+1EDJZQGYDuT97+9SYvfdgcWlbIIxjNEIBj9P51zDCACvUt1\/pXSbAjuuP0NMFNllxRnlfhb3lleMqKz29zG8e+HwqkyfoARS67lkbfGvOPpWjfDdGXh07I0ZH2ifKHZtrdcnNJzuoWMw\/kUOAcfdLaKeaI\/ZroMMr01hip6\/SjUHMPDoFysReZh10kuv4t8tFPha9q\/CriK48M29tNKZfEwUVCA1JHD7ThtxNqS8mtuHmUKBcJl9zhcOCdCH1bBFIeNWVRz2qZc4C8nEeIRtpZbW3fXt2Vd8saX+XbWKWy4goJjJfUn+7MYYHDehx0rUue5IeFcOltLcLFJNEwz98r0LE1lXJmWhvrVMFp7ZjhujaRnAPZqNxqFoVz5SKPDOL3FptE4Mf7j+aPH\/jVLmW9e7kSXSECRquAc9Ccn8zXrPdQO6nFfLwYFU8VdiFJ9A4QYqYuWxqOcDG3WuUNdVxtk8F9cRxS2kdw62tycyRg+Vm26j8BVH7Kw71Opr6TXHWykbZqiIxRAmo3APauCUiqMnua9VmOD0r1abyRe4kMOD+8v6iqrHFXeJbqG7q36GhzHYn1pWP8AE2XYxcM5C4peRLd29p4lvMDobxbZcgNvs7A9VojwblO94bcLcXtq8MSKcPlHTWegLRkgGtE\/+nWQmwuQSSq3rgD0HhpXHwl4\/LxROKcOu3adUbymTc+E+oFfoNII+tDKTpo6MqaZNbcNvZEWeOAyRSKCul4AWB\/vMMUjc68D4sdd7c2XgWlsvUSWjFUyNzoYkmnr4VX09xwe+XxtEkU1zFC8jkCMCBNBz90Atmk7mvjb8PgvuAz3Fxetd2tm8ckj+IqykBpvMxz4ZIBWgxwUXaNyZHLTBVjyHxaVFmjsSY5ACpaS2UlTuDh2BoHzBw67s5Vgubd4JZPlzpKsM9Qykg7+9bLyy11c8sx+HdGO8eOULNLKyldNyw3k6r5V05+lCvjvdGHh1hZzZmvWZCZgMDXGgEjD0JLjb3pnNiuKE1vhtxrYfYNh\/wAey\/8A3ovypYXVvHfcNltnhvbyMCFXCrrfS4BD9CtPXC0vrvl+18C6aPiM0cRE00jg48XclsEny0P+NPMJtLe1hzIOIvlkliyqqwGHIP49KCbclRsVTFnlTlzidhKi3FgDZ8Q\/YTRmW2cPnzK2FbY\/PStzZyxc8LuPs5Q+Fduy25cxt4i5AKsFP8ajetY4Jdpxvh1lxKe6ltpOFyu9wYHkTOgHWG0kYyoR8jcZIFZdzVzFNxK4kvywS2BItzI\/khTbOlf98dIJrbo3jZd+Id4yxWnDZGMlzb28Hj41FvGCaYo\/c7s9Scm8pcWt5Uum4c\/2dwQQ5iD7juhOoflUvwcjF7xdppC0ht4ZZtUu7vOXVdZ\/68inC84nfT8YlFvLKUsXXVbrJiN4VwGJDHGolqyctUzYrdoza35H4nJLcxwWRY202l1MtsChI1KPM3m8rKajl5H4q8zWgs\/9qjiVyni220TEhWzqx1V61HlK5uf9Yb9ZY5LWK7s1lELsjBipSNZPKcA+V\/zpb4Pxe4PNTxG4maPxriPSWbSYVR2VMd1BJIo+bBpCdd\/DnjMCNK9i5RevhvbyN+CxsSaG8vcCvOItJHaQeM8KguNcSYBOOshGa\/R\/D7W6Xil9dNdCTh\/2eJVt1dndJdKnVo6R50v7tqrIeROK+Jx8TRM8EN7dXBaIErldDkB1G2xrlJnChx\/l284d4f2yDwPtGvw\/PE+dONXyE4+detfeB8vXt+JGtLZ50hxrIKBQfTLEam9hTb8c5y3FPDeTMUdtGVViSqseuB6mjvwhvYLzh11wDxmtrt2kYNHs5Rsbr6kacEVturO0Zbxjg91ZeGbq3ktxPqKeIME4xq27dV60NWbOAAST6U6fEq6vEksuF30aluGxOIpIy2J4m0gOdX\/xfnmloTkKdKKrepGf0NMjbVnHxIyhKts6kg4ORt9K9XVp5hknLV6jAJ7kalZe+P1FCM5H0FFyaF3PlY\/xHNIx\/Q+RtvwR4rZ2VgwmvraOWed3KSOiOnRdwT\/BmuOF3nDuX7S+lg4hFe397koIipyw1eGNKk4ALkkmsPiRW1H27\/WrdrCo3xRe2BLSNq+HEdnBweSwm4jaLJxRZXILxho\/EhVNJBPUaaG8WtbOz4RfxHidtxC\/migRSph1iNCqxogBJ2XNZpdcOBTxVxIp+bAwyN9PT3oVjSQMZJ6eta8Lj2DGXLo3iS2tI+Xm4QOJWjSiBm1a49z4vildIOe+mh\/xKW1k4LbWicQtJ7nhqwEaZELSBV0HAB9\/0rFpLQDPdhucdB7V6CEDDUKxhPRv3F7Wzfga8G\/0naa0jgGsNH2kDfKGohz\/AAQXnDGRbqCaS1gJDAxsXcR4232JNfn2K2XrjrRKy49JaZhUKYnRsjvkjAOaGeN1oyLV7NT+G9haQ8IuLY8TtVk4tE5Ot4laIvFoKkFtyKxa4tPBkkg1rJ4LuuuM5jbBO4PcVCYFO+K7XajUaOGv4V8TNnxOKbSzROkiy6QxKxEbsQOwIFazdcJ4f\/pBOMrxKJEJUskboxeTtupyFOxIxX5+SYrhgSG\/h2NG+H3s8MRZLcMvd2Qk4+tBkj5O+fUe\/wBm28ISAcXvuKNdQgGKOFQzjdNKEkEnplaUuGcPtY+Yp+INxK1ES6ply0eGMgdGTJOxX\/GlewtZZQJJZXOAGVWGlV98DrXPF+T5bsC7UJFIUAKFdmwT5sjufpSI5VypjvZUIbmnL6X\/AKaZwu9sI+M33E\/9J2vhXFpAunxI9OvODvnqPBH\/ANylThfDrG34814eJ232ZBJcBi0YQySM6mLVnGR1rLpuHtExikQq69j\/ADz3rxt1IxgVUoeUJdp0zb+MWPCbvisPGJOMWemHwisWuHBeM+Xzaumd+lLtxw\/h99FcyQ3tpZcVHGblo52coWj1sY8FT5UIIIb1Ssq8MZB0+UflUttbmQuVjZlRMnSGIABG+3QYJrnjRuzUPjpxu3uGsYIZY7iW28UySRlSNwvlyu2Tis3kOFY5wNNdtaExZDRgK69HQ9v4elcXVsFQsXJOnoq7fmabCkqBf7PROVGoDIb0r5Uljw+5K6o7e4ZT6RyMv5gV6uOOyaH3L5cH92rTvjJ7AVf5M4CbybWw\/wBniPm9Gb92kxqKbY+KbkkjvhPK5e2kuJMh3QmIfT7x9jQWCTNbfxm1SGEXDYCqMAdM+grEb9wJHxgBnOMdBk0OHI5NthZsaSVF61vTGwcEal6g9GHocVFxRFJ+0wAiNtmz1Rz64\/H8s194Hwt7ueO1QhS+csdwiAZY1tScq2Nhaqq2wnNzpV5JideME52\/kKZPO1UP6J4wr5GFwuo8mdz+pr7bQMMjQxVuhwcVv3MnBkk4fPAY4JF8EtG8USLIjBcjYe46isY4Xw64KpPHMuiROjDUFA7YPfahjnTVvQz2n0tlFfKBqBAA70Oa41ZYnc1d4srxhIpJzITvvr8gz8uG6b70U5Q5Rl4i4c+SxRxrkIO\/qq\/vNROaqwVjd15B\/CeC3V5k29vJKqnduiA\/3jtR+95BmgMELypJe3jkRxQ9lHzszt8qgVsfD40hRbZQEjRRpCbuFH8I+X60CugIeNQvLiOK44eyRM5AAdXLMvscVP70m9D1iS72LPBuU0s2xPEjXAbKya9aiPG5wcAdhnrTF9rOnVjOCAB6E43\/AFqtxa6Ek0kiOHjGlF0bgY3fcfh+VVJJDiHYadTk5xucenc5xU+RuT2T4sanPl5lNQ\/0u\/8AssmbypsMtK4\/L\/Ovkt2SA42YMyt\/eH09hQ7xMrbAnymSbGd++w+tccK43NHN4McQmhuJJMo2+sjsoPR9iR69KU4P\/HboqSjxUn17kl\/r6KHNtqJ4wwA8VFJQj9VzQjl3gUdzDK0qXkcoBMc0SBrYYB8rg4P4jP0rYbKS38N7iG3QtEpyCNRXcatm6fTqKCcVge6iCRkpFLghDqwrBhrA\/hzv7aqLF6x8dKv5Mjg18vGjHOX7Zbm4gt3JEUsmDpPTbrvWvx\/CK3wdF1KgcegNIw5WeyuoJnDDU4cJjI91Pod62PhN6ZsMIZ0cqMZQhVx2yOxqjJmUn8WYoTgjJucOR4+HYEcrTPKjdQo04IOdvYGhnKQK3lo2YyyP0coQcKexrSufeSb7iDwmIIAgcO0jADBGNgKocB+CTxlZLi\/UFM+W2T\/ybH8qfCa4UxMtysfIOco91ZogykghXTIPp1r7VIcmWEW7h5nbqZX3\/wCwAV6kNL7KIvBW7MFt+VOIXMfiRWVw8R7hMZ\/OtF5C4FxW3EcM3DR9k28yvCsi+5Ut56YeNfFextMqiSXE46KKBxfGmKXUs6XFt6eBoP8A3HentOSponU2to4+IiXV2zW1vbzSrbnDiNSQrVk3HuFTW7KJoZImYbeIjLn8T1re7T4ucHUBPFnXH3mif+Yq5Lz1wq7eLwrhJrlS3hgxTCQEjfTrUUMX7a6sJ5HPTEH4dcl3lndePdRqkRhJUq8TltxgAoTWqQrHcWwinAVtSllU4YZfyAgfgKA3t08jaRazCRARE5BU79RjYH6UF5b5wlW6CT26LcZ8PO4dvVfdvLkCpIqeScstWl\/Q2cHBKPk0O25fgjiMBUujschmckg9sjtSla8rQrLOEjU29jIQkeohJC+7A\/u6dRAFNPFONpHby3QIBijkKh9gXH+dZ1wrnS3tQ93c+LJM0JWNVVcqC5J69SSQc0dqa+OwYc9su8NfhbLKH4akzeM2FMYcooAG7Puu4NH+B8O4bLHMlvEYI4x+1RZLiLSCMk+Vtht1FZ7wfmeOJ575AxWcftVIJj8QAYICjbv7eaqPG+cpb3SoRoIo8ksCyAj0O+XG\/wAtZH3L\/RT7cZaWm\/NmqW3E+HIBAhdUUBQ2q404G3zE5P1pZ5z5Jiu2L25mZrZTrWa4ldWbsqeKWw\/4gUvpJM0Cp48ZjznAU9MdajsOfbi3WWIMpjTZYxGN3AALF27HFZhm5N2Z\/wDQ9K8PBwbafdEHBGRbeVWhaF4ZHCx5byEnAyCMk\/z61N4h1A5+RBsS35+3T9aoR8YkufGuJBGkuYtYQHwwurY4Y7nFTyknxAMnUoK477dPbetlF\/IThljx5sSl8VFSe\/s6m28BcMWUM33tO596G3fEHiCzocTW1yrqd9mB9D9a6muguliAAq4OwGNvTsMigt1xHwxqBBd2zjTkaO21NjB3f6ExnCXp4LzzbaNo4TexXM32iFCqXMLO69A6nGo47nzZotwe0gACAqkUTdCfUbEVgU3FTIBG8s6IcFTE7FRkfuE7fmKnsLW3bL\/a8hQM60fO52qZemcFsu4KWro\/T0EcZ3URkr+7pJFdu\/avy\/I9uuGW6lDZODAhDEg9ASRWsco86tDaRJMss5TXmSWRS5XVt1+Y02670T5PTtbi7NGU+xqGfWc6VzQWTmuJgjo4VWUHBGZc9xpHYVctOINIocPkN6aax5EJ9trsoTWU7OWeHUO2SuPwwwr1ExxcIxRjkgA+XqPavlDygdUvowTnnkZlc3VsQ6n50XX4uvO5xvmkNiMYOk49sN\/\/AGtqnIBEmJGkT5S5CgH1xvikrh\/NFjb3dxPdcOF5cmY4ZnHhjG39mVwTtnJqj08skYVPZZ6r0vtRUvsXLTioSPwRaWkmM+eVMyZIwdwRtg9Og69aM8M4bawC3v4755LuIxSeAkL6kIwX1OTjAwa9zPzMOIuEtuH29shYEmKNfFJz1Zx0HmqhNAbddDPl7lfNo3coOi4Hyrn88U+1q9foljBy6NKf4nGSIJFHmaZdtenERB3YkfNWb8S4nczyrceI0kkUrOrHb9pqHm\/7V\/ACoRC0h1MAgIA0r\/MnuaJ8P4dNM6QQIZJZCAAP8+g9+gpUYRg3x8lfDVvSGLgXMtxxApwuUaJJTsxAaM4GTq\/BaauAwWyrIlwlvJLDNMpyj52YjqOq7bVJw\/lBOFrb3cmZr4ygHQy6VBB2GcUbh4lMttBdxAm0YTNsuX1NMSuQe2KWoxj+KEzh7seKer\/vYo8z2rXHhxcPt0aQOSfDiVEVACCPEf5m3oZB8NOJSdYYU\/8Akm\/wTNaZw2S5kkE8pYQzIDGjbMrAeY47dRVX4keIbFmRyFjdTIgOGki7jP1INY3Z2OUsTWNGScR5du1k+xIVkEboTJAzGELjcZOMkVNZcIhnkKC6iDK7a4lWUyqobDb6dP60W4XxpAoXS0a+6Of1Gat20dlGWmjB8WTr4cUxYk\/QUt5nVUUxhxVX27KUXCoUkNsAvgz4BeQSgHzbat+3tipuIcgKkyCKWT7OVGoJu6v7fw0zf6oTzxhy6wagNKyDUw+oHT6Vzwflq\/syf2sVyM+UglH+mG2oKypWjJSj9iJxzkmWPLxq8qqdw27k9ioHWlS4g8MlXRkcdnUgj8DWtcxcclikj8QNHcB42XUNiwOR\/eG1Ef8AXAzKFubW3uIx+8uD+ucUzFmdfMBqX+KMMkA0ErkAtvjrjG9WbeSRdIwcuDldGQ5Pz5\/D8q0jmrkS2urd+JWCvBJEHaSFvl0jdtNZlaxnBGXCn0I3Pc59xtVLaaszG3NtItZdiygEBT0CqAo+7jPcrn69aeOXOabmyghWK08e0bJZk+dZC7DSfwWkhYZnISOOR2X5cHJHpsOtX4+QuIECaSJoI2bd5NaqPqBuB74pbSfYclSpj9y7zzw63CQO0guLdNBfREy5HzaWByFo9b8YsJGM0F0izORnWWCN7lQ25pR4V8F0kCvLdxhXG32bL\/qaYrD4S8Kh3Mc1wy\/752\/lHilSjj6RLKTvQTubywJ8SaSDxSANSMFyB0+\/vXq6g5S4UB5bOz99SoWB9N69S+MTOb+xTvdwd8Ug3l7YLceewllVQ6ykSsC0xPzqBT7d9DWeXEQM0h7+I3869GTo9v1sOcIr9nPD5nXxWiTw\/FJVWcDUsPpjoG9T2r5HAFyRkuepbdj+JqzbnG4O9WmQelJnNyk5Ptk2PCoKkVoo87kDNN3w245Hb3LQEIJZtlLjJKnsv9Op2pYCVT4lbrIMN9zOCOtDF7MzQ5Qo2jnDiAt0W8w01rC3n8IqzK2oHv7DptsaS+X+fhBAsQvnVYl2jFuhIGegY9fxpN4Rz7e2rGDWtxA4wVul15HuQQT+datZ8u2cqHVZ24dxq1xrokDexTGKKkuyGGTgmqsHcoc6pc30jvNM9vFavl7gqqiTUp2RfKuymrPOfGJpkcxIDb6D0OpyvpgVcg5egSOWPSSJG8JyQmtoz6kD5velzmHg6cOWDwHmPi5z4j57+2KXPuxkFGbsE8vThkCrKMbdeo\/CmnhRxdW6mQsjP32BIUkbfUUu2dvHNmR4ozJ+8Bhv0r13bJHLbyoul0dcEFqRwTnZWtm2nzZFQe3cVX4bcMyKT1wKuSLkZ7iqzz2uLK88KSALIiSKOzqrAfn0qovLlmTq8ABvZpMflmr1ciuaTOtrpk0dqgQwBB4TBgV6hlOdQOevWl7iHE+CWJMLiwjZeqRxxlh7EINq5+Il7JFw24aNzG7GNdS7MFZgGwe21Y9bcPjUDCj6nc13Q\/0\/p\/ct3RsXD+e+Dr5Y5Y4B7RFB+go0JbW+TEdxHMv\/AAZPMP8ApORWIiyQ9v5VXlslUiRC0ciEENGcMD9RS6i+x79CvDNrPLaKQ5nuSITqA1rsfqBqNWI+IwkkeIwb+Iuv86EcC4pJcWfD7yQ5mmwHxkKevYbZpb5n5rnt+JyWWIpbZtGFmTJXKjOllwR+dDkxuO0R+19jPxB49WwWUAfNIqOT+JFepa5o5rksNHgw258Xr4qyt\/Nq9SKn9m1H6P\/Z',width=400,height=400)","e030b5f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","466a0db8":"pd.read_csv('..\/input\/full-derry-girls-script-s12\/DERRY-GIRLS-SCRIPT.txt', sep='\\t', header =None, encoding='ISO-8859-2')","c44b7818":"df= pd.read_csv('..\/input\/full-derry-girls-script-s12\/DERRY-GIRLS-SCRIPT.txt', sep='\\t',encoding='ISO-8859-2')\ndf.head()","7c787874":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'pink',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"SEASON 1\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Derry Girls Season 1\")\nplt.show()","be622320":"import re # regular expression libary.\nimport nltk # Natural Language toolkit\nnltk.download(\"stopwords\")  #downloading stopwords\nnltk.download('punkt')\nfrom nltk import word_tokenize,sent_tokenize\nnltk.download('wordnet')\nimport nltk as nlp","aee3404d":"df = df.rename(columns={'SEASON 1':'season1'})","edcf0af3":"derry_list=[]\n\nfor derry in df.season1:\n    derry=re.sub(\"[^a-zA-z]\",\" \",derry) # if expression in the sentence is not a word then this code change them to space\n    derry=derry.lower() # turns all word in the sentence into lowercase.\n    derry=nltk.word_tokenize(derry) # splits the words that are in the sentence from each other.\n    lemma=nlp.WordNetLemmatizer()\n    derry=[lemma.lemmatize(word) for word in derry] # this code finds the root of the word for a word in the sentence and change them to their root form.\n    derry=\" \".join(derry)\n    derry_list.append(derry) # store sentences in list","92dc66f7":"from sklearn.feature_extraction.text import CountVectorizer #Bag of Words\n\nmax_features=500 # \"number\" most common(used) words in derry\n\ncount_vectorizer=CountVectorizer(max_features=max_features,stop_words=\"english\") # stop words will be dropped by stopwords command\n\nsparce_matrix=count_vectorizer.fit_transform(derry_list).toarray()# this code will create matrix that consist of 0 and 1.","8e82b228":"sparce_matrix.shape ","e52dc0db":"sparce_matrix","9bbd8014":"print(\"Top {} the most used word in Derry Girls Season 1: {}\".format(max_features,count_vectorizer.get_feature_names()))","b8ec3de6":"data=pd.DataFrame(count_vectorizer.get_feature_names(),columns=[\"Words\"])","1bf215e6":"data.head()","4804b914":"from wordcloud import WordCloud \nimport matplotlib.pyplot as plt\nplt.subplots(figsize=(12,12))\nwordcloud=WordCloud(background_color=\"black\",width=1024,height=768).generate(\" \".join(data.Words[100:]))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","747df4bf":"df.season1.value_counts()","dce37bc3":"X=sparce_matrix\ny=df.season1","40bf7bb5":"from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report,log_loss,precision_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.metrics import roc_auc_score,roc_curve\n\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)\nprint(\"x_train\",X_train.shape)\nprint(\"x_test\",X_test.shape)\nprint(\"y_train\",y_train.shape)\nprint(\"y_test\",y_test.shape)","15d799d3":"from sklearn.svm import SVC\n\nlgbm_model=LGBMClassifier()\n\nlgbm_model.fit(X_train,y_train)","0310d434":"y_pred=lgbm_model.predict(X_test)","a1dbed02":"print(\"Accuracy:\",accuracy_score(y_test, y_pred))\nprint(\"Precision:\",precision_score(y_test, y_pred,average=\"micro\"))","8d78ec40":"#The programm stopped with XGBM, therefore I commented it.\n\n#xgb=XGBClassifier()\n#xgb_model=xgb.fit(X_train,y_train)","281fc6e1":"#y_pred=xgb_model.predict(X_test)\n\n\n#print(\"Accuracy:\",accuracy_score(y_test, y_pred))\n#print(\"Precision:\",precision_score(y_test, y_pred,average=\"micro\"))","17a86edb":"from sklearn.naive_bayes import BernoulliNB\n\nnb=GaussianNB()\nnb2=BernoulliNB()\n\nnb_model=nb.fit(X_train,y_train)\nnb2_model=nb2.fit(X_train,y_train)\ny_pred=nb_model.predict(X_test)\ny_pred2=nb2_model.predict(X_test)\n\n\nprint(\"Accuracy:\",accuracy_score(y_test, y_pred))\nprint(\"Precision:\",precision_score(y_test, y_pred,average=\"micro\"))\nprint(\"**************************************************************\")\nprint(\"Accuracy_NB2:\",accuracy_score(y_test, y_pred2))\nprint(\"Precision_NB2:\",precision_score(y_test, y_pred2,average=\"micro\"))","dcf6baf4":"#from sklearn.ensemble import RandomForestClassifier\n\n\n#rf_model=RandomForestClassifier(random_state=42)\n#rf_model.fit(X_train,y_train)","24d8b703":"#y_pred=rf_model.predict(X_test)\n\n#print(\"Accuracy:\",accuracy_score(y_test, y_pred))\n#print(\"Precision:\",precision_score(y_test, y_pred,average=\"micro\"))","bfe30262":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#fc03a1','#fc03be','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Many Derry Girls talking and Null Accuracy, @mpwolke, was Here.' )","2fd37a48":"#That's your face when your Accuracy\/Precision is Zero!","8409ec49":"#Too Many words. They are girls and talk a lot! ","339bbb8a":"#Your notebook tried to allocate more memory than is available. It has restarted. ","6c0272a6":"#Data Preproccesing,cleaning.","b06ee54d":"#Codes by Erdal Nayir https:\/\/www.kaggle.com\/erdal002\/natural-language-processing\/comments","e8ecdfb5":"#LightGBM Classifier","0361924f":"![](https:\/\/i.ytimg.com\/vi\/6B3x3-uD1j8\/maxresdefault.jpg)youtube.com","7864b064":"#XGBM classifier","954fee7a":"#Bag of Words","15e39480":"#Remove header None, so that the column won't be zero, as above. Instead, it will be Season 1","e24bcc6e":"#RandomForest Classifier","afb81e20":"DERRY GIRLS\n\nDerry Girls is a British sitcom created and written by Lisa McGee. Produced by Hat Trick Productions, it is set in Derry, Northern Ireland, in the 1990s. The first series was broadcast in January and February 2018. The second series was shown in March and April 2019. A third series was commissioned for 2020, but postponed due to the COVID-19 pandemic.\nhttps:\/\/en.wikipedia.org\/wiki\/Derry_Girls","5426cecc":"#Naive Bayes","ff46a013":"#A lot of Accuracy and Precision. At least the programm didn't return an error."}}