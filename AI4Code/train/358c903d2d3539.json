{"cell_type":{"4af0120e":"code","63c8a112":"code","0cf884ce":"code","6208aeda":"code","fdcdfa8d":"code","c36dac1a":"code","1833b878":"code","a6c0801f":"code","283421b8":"code","767ea1dc":"code","6072b7cc":"code","a282d662":"code","c8efb746":"code","db134ed5":"code","5225dfed":"code","b3bc9ba2":"code","804f28d5":"code","7c698e64":"code","8ee3afa0":"code","baad73f2":"code","71b170b4":"code","d1a217fb":"code","384a801c":"code","68a727ff":"code","de13ed08":"code","b3452dd6":"code","2613d4a4":"code","ee57f0a4":"code","34019635":"code","15bacd47":"code","721b8b3c":"code","2954b952":"code","7d6c7729":"code","d701b38e":"code","348674a5":"code","b4447198":"code","3353dbcc":"code","d83af205":"markdown","ba17f7a1":"markdown","d5843019":"markdown","7c1450d7":"markdown","2bf5398e":"markdown","e22ab412":"markdown","f16703e7":"markdown","fd8d8bd5":"markdown","4395d641":"markdown","228e8473":"markdown","3c84acbc":"markdown","073e096b":"markdown","130b9feb":"markdown","569f8dd0":"markdown","3b6935cd":"markdown","4854a433":"markdown","82e71bf2":"markdown","fa084596":"markdown","b7f15b6d":"markdown","51dcfc4b":"markdown","72eafea9":"markdown"},"source":{"4af0120e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63c8a112":"import warnings  \nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score\nfrom hyperopt import STATUS_OK, Trials, fmin, hp, tpe","0cf884ce":"data = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\ndata.head()","6208aeda":"data.shape","fdcdfa8d":"corrmat=data.corr()\ntop_corr_features=corrmat.index\nplt.figure(figsize=(20,20))\nfig=sns.heatmap(data[top_corr_features].corr(),annot=True,\n                cmap=\"Accent\")","c36dac1a":"continuous_features = ['battery_power', 'fc', 'clock_speed', 'int_memory', 'm_dep', 'mobile_wt', 'n_cores', 'pc', 'px_height', 'ram', 'px_width', 'sc_h', 'sc_w', 'talk_time']\ncategorical_features = ['blue', 'dual_sim', 'four_g','three_g','touch_screen','wifi']","1833b878":"for i in continuous_features:\n    fig = plt.figure(figsize=(6,5))\n    sns.kdeplot(data=data, x=i, fill=True, common_norm=False, palette=\"crest\",\n   alpha=.5, color='red', linewidth=0)\n    plt.xlabel(i)\n    plt.show()","a6c0801f":"for i in categorical_features:\n    plt.figure(figsize=(6,5))\n    sns.countplot(data[i])\n    plt.xlabel(i)\n    plt.show()","283421b8":"data.isnull().sum()","767ea1dc":"data.dtypes","6072b7cc":"data.describe()","a282d662":"sns.countplot(data['price_range'])","c8efb746":"data.columns","db134ed5":"sns.catplot(x='blue', y='battery_power', hue='price_range', kind = 'box', data = data)","5225dfed":"sns.catplot(x='wifi', y='int_memory', hue='price_range', kind = 'box', data = data)","b3bc9ba2":"sns.catplot(x='dual_sim', y='talk_time', hue='price_range', kind = 'box', data = data)","804f28d5":"sns.catplot(x='four_g', y='int_memory', hue='price_range', kind = 'box', data = data)","7c698e64":"sns.catplot(x='three_g', y='int_memory', hue='price_range', kind = 'box', data = data)","8ee3afa0":"features = ['battery_power', 'fc', 'clock_speed', 'int_memory', 'm_dep', 'mobile_wt', 'n_cores', 'pc', 'px_height', 'ram', 'px_width', 'sc_h', 'sc_w', 'talk_time','blue', 'dual_sim', 'four_g','three_g','touch_screen','wifi']\nlabel = ['price_range']\nX=data[features]\ny=data[label]","baad73f2":"from sklearn.model_selection import train_test_split\nX_train,X_test, y_train,y_test= train_test_split(X,y,test_size=0.30, shuffle=True)","71b170b4":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","d1a217fb":"X_train=X_train_scaled\nX_test=X_test_scaled","384a801c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nlog_reg = LogisticRegression(penalty='l2', fit_intercept=True)\nlog_reg.fit(X_train,y_train)","68a727ff":"pred1 = log_reg.predict(X_test)","de13ed08":"classification_report = classification_report(y_test, pred1)\nprint(classification_report)","b3452dd6":"print(confusion_matrix(y_test, pred1))","2613d4a4":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)","ee57f0a4":"pred2 = rfc.predict(X_test)","34019635":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nreport = classification_report(y_test, pred2)\nprint(report)","15bacd47":"print(confusion_matrix(y_test, pred1))","721b8b3c":"import xgboost as xgb\nmodel = xgb.XGBClassifier()\nmodel.fit(X_train,y_train)\npred3 = model.predict(X_test)\n","2954b952":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nreport = classification_report(y_test, pred3)\nprint(report)","7d6c7729":"print(confusion_matrix(y_test, pred1))","d701b38e":"space={'max_depth': hp.quniform(\"max_depth\", 3, 18, 1),\n        'gamma': hp.uniform ('gamma', 1,9),\n        'reg_alpha' : hp.quniform('reg_alpha', 40,180,1),\n        'reg_lambda' : hp.uniform('reg_lambda', 0,1),\n        'colsample_bytree' : hp.uniform('colsample_bytree', 0.5,1),\n        'min_child_weight' : hp.quniform('min_child_weight', 0, 10, 1),\n        'n_estimators': 180,\n        'seed': 0\n    }","348674a5":"def objective(space):\n    clf=xgb.XGBClassifier(\n                    n_estimators =space['n_estimators'], max_depth = int(space['max_depth']), gamma = space['gamma'],\n                    reg_alpha = int(space['reg_alpha']),min_child_weight=int(space['min_child_weight']),\n                    colsample_bytree=int(space['colsample_bytree']))\n    \n    evaluation = [( X_train, y_train), ( X_test, y_test)]\n    \n    clf.fit(X_train, y_train,\n            eval_set=evaluation, eval_metric=\"auc\",\n            early_stopping_rounds=10,verbose=False)\n    \n\n    pred = clf.predict(X_test)\n    accuracy = accuracy_score(y_test, pred>0.5)\n    print (\"SCORE:\", accuracy)\n    return {'loss': accuracy, 'status': STATUS_OK }","b4447198":"trials = Trials()\n\nbest_hyperparams = fmin(fn = objective,\n                        space = space,\n                        algo = tpe.suggest,\n                        max_evals = 100,\n                        trials = trials)","3353dbcc":"print(\"The best hyperparameters are : \",\"\\n\")\nprint(best_hyperparams)","d83af205":"**Optimization Algorithm**","ba17f7a1":"**BASIC STATISTICAL DESCRIPTION OF DATA**","d5843019":"**Splitting the dataset into train and test**","7c1450d7":"**Dual sim and more talktime cause rise in price range**","2bf5398e":"**Mobile phones having bluetooth with high battery power costs high**","e22ab412":"# ANALYSIS OF CATEGORICAL VARIABLES","f16703e7":"**XGBoost Classifier**","fd8d8bd5":"**The above plot shows that data does not contain imbalanced class**","4395d641":"# LOADING OF LIBRARIES","228e8473":"# UNIVARIATE ANALYSIS","3c84acbc":"# CONTINUOUS VARIABLES","073e096b":"# CORRELATION MATRIX","130b9feb":"# RELATIONSHIP BETWEEN VARIABLES","569f8dd0":"# Hyperparameter tuning of XGB using Hyperopt","3b6935cd":"# BUILDING MODELS","4854a433":"**Printing results**","82e71bf2":"**Logistic Regression**","fa084596":"**Scaling of data is required as most of the variables are continuous and they lie in different ranges**","b7f15b6d":"**Defining Objective function**","51dcfc4b":"**Random Forest Classifier**","72eafea9":"# CHECKING NULL VALUES"}}