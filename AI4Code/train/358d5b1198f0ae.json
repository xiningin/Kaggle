{"cell_type":{"bdb06798":"code","a39c0b45":"code","231c672e":"code","3bd9fe5e":"code","be0b0907":"code","6d3304a7":"code","77708a5a":"code","591deb0f":"markdown","362a4a8e":"markdown","46cfc175":"markdown","56510c72":"markdown","532a24b4":"markdown"},"source":{"bdb06798":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a39c0b45":"\ntransfusion = pd.read_csv('..\/input\/blood-transfusion\/transfusion.data')\n\ntransfusion.head()","231c672e":"transfusion = transfusion.rename(columns={'whether he\/she donated blood in March 2007': 'target'})","3bd9fe5e":"# checking if the data is balanced by target incidence method\ntransfusion.target.value_counts(normalize=True).round(3)","be0b0907":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(transfusion.drop(columns='target'), transfusion.target, test_size=0.25,\n    random_state=7,\n    stratify=transfusion.target)","6d3304a7":"print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","77708a5a":"from tpot import TPOTClassifier\nfrom sklearn.metrics import roc_auc_score\n\ntpot = TPOTClassifier(\n    generations=10,\n    population_size=20,\n    verbosity=2,\n    scoring='roc_auc',\n    random_state=42,\n    disable_update_check=True,\n    config_dict='TPOT light'\n)\ntpot.fit(X_train, y_train)\n\n# AUC score for tpot model\ntpot_auc_score = roc_auc_score(y_test, tpot.predict_proba(X_test)[:, 1])\nprint(f'\\nAUC score: {tpot_auc_score:.4f}')\n\n# Print best pipeline steps\nprint('\\nBest pipeline steps:', end='\\n')\nfor idx, (name, transform) in enumerate(tpot.fitted_pipeline_.steps, start=1):\n    # Print idx and transform\n    print(f'{idx}. {transform}')","591deb0f":"Here 0 have target incidence of .76. Data is imbalanced so we would use stratify on target column while splitting ","362a4a8e":"# Predict whether the person donated blood or Not \n**This notebook gives simple steps to use TPOTClassifier**\n","46cfc175":"**According to data description**\n- R (Recency - months since the last donation)\n- F (Frequency - total number of donation)\n- M (Monetary - total blood donated in c.c.)\n- T (Time - months since the first donation)\n- a binary variable representing whether he\/she donated blood in March 2007 (1 stands for donating blood; 0 stands for not donating blood) basically the target column","56510c72":"TPOT is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming. TPOT will automatically explore hundreds of possible pipelines to find the best one for our dataset. Note, the outcome of this search will be a scikit-learn pipeline, meaning it will include any pre-processing steps as well as the model.\n\nreference : http:\/\/epistasislab.github.io\/tpot\/\n\n https:\/\/machinelearningmastery.com\/tpot-for-automated-machine-learning-in-python\/","532a24b4":"So `target` says\n- 0 - the donor will not give blood\n- 1 - the donor will give blood\n"}}