{"cell_type":{"2aa4d82c":"code","82d3e65d":"code","12691a5c":"code","11766316":"code","55b99166":"code","d6cffa8c":"code","90159472":"code","c676737c":"markdown","7429f5f7":"markdown","f56b86bf":"markdown","8ef3a575":"markdown","4a0113ae":"markdown"},"source":{"2aa4d82c":"import numpy as np","82d3e65d":"img=np.zeros((2,2),dtype=float) #initialize the image to be zeros\nno_cols=img.shape[1]\nno_rows=img.shape[0]\nprint(img)","12691a5c":"#saving the attenuation values\nhorizontal_projection=np.array([0.6,0.3]) #top to bottom\nvertical_projection=np.array([0.4,.5])    #left to right\ndiagonal_projection=np.array([0.3])      #top to bottom\nreverse_projection=np.array([0.6])        #top to bottom\nprint(horizontal_projection,vertical_projection,diagonal_projection,reverse_projection)","11766316":"#horizontal phase \n#a vectorized effecient code that doesn't use loops\nhorizontal=np.sum(img,axis=1) #sums over rows\nerror=(horizontal_projection-horizontal)\/no_cols\nimg+=error[:,np.newaxis] #broadcasting the addition to the rows\nprint(\"after horizontal phase:\\n\",img)","55b99166":"#vertical phase\n##a vectorized effecient code that doesn't use loops\nvertical=np.sum(img,axis=0) #sums over columns\nerror=(vertical_projection-vertical)\/no_rows\nimg+=error[np.newaxis,:] #broadcasting the addition to the columns\nprint(\"after vertical phase:\\n\",img)","d6cffa8c":"#main diagonals phase\n#to be vectorized\na=0\nfor a in range(img.shape[0]-1):\n    main=img[a,a]+img[a+1,a+1]\n    error=diagonal_projection[a]-main\n    img[a,a]=img[a,a]+(error\/2)\n    img[a+1,a+1]=img[a+1,a+1]+(error\/2)\nprint(\"after main diagonal phase:\\n\",img)","90159472":"#reverse diagonals phase\n#to be vectorized\nb=0\nfor b in range(img.shape[0]-1):\n    reverse=img[b,b+1]+img[b+1,b]\n    error=reverse_projection[b]-reverse\n    img[b+1,b]=img[b+1,b]+(error\/2)\n    img[b,b+1]=img[b,b+1]+(error\/2)\nprint(\"after reverse diagonal phase:\\n\",img)","c676737c":"<font size=3>here we are going to develop a simple algorithm to find the attenuation in only the 2x2 image below.<\/font>\n<img src=\"https:\/\/i.imgur.com\/NdkaMmg.png\" width=\"500px\">\n\n","7429f5f7":"## <font color=black>future modifications<\/font>:\n- complete code vectorization which will generalize the program to NxM images effeciently\n- making the code modular by using the concepts of oop\/functions","f56b86bf":"### thanks!","8ef3a575":"<font color=green, size=5>done!<\/font>","4a0113ae":"### <font color=black> Welcome to arithmetic Reconstruction technique (ART) notebook!<\/font>\n"}}