{"cell_type":{"761849e4":"code","2cba387d":"code","f38115c8":"code","663c5af2":"code","ec78c354":"code","94eefaaa":"code","637dcb93":"code","9db823a4":"code","ea53e659":"code","ac9d87f8":"code","43a98630":"code","e0fe1e9b":"code","30a9f9b5":"code","9691e40c":"code","323abf38":"code","ee7cb033":"code","5ed75c4f":"code","9e7269f9":"code","99d37d63":"code","c588a9be":"code","6dafdce6":"code","c1059dd9":"code","18c290f5":"code","8f3ccbe6":"code","fdb7fc1c":"code","7b4d48bf":"code","2a18e6b6":"code","56e01414":"code","d2e04e02":"code","550682cc":"code","d4f5386f":"code","9e3614f7":"code","672a0da0":"code","7104368e":"code","4fd41096":"code","6cc1a63a":"code","82a022d4":"code","24dd0329":"code","ad6e1d2b":"code","24307759":"code","a46d27bf":"code","667bf50a":"code","8f558ecc":"code","49ee2b5a":"code","190dd616":"code","9c00f9c8":"markdown","84e3e72e":"markdown","9ee5db36":"markdown","3ed37bc2":"markdown","77cc3a4b":"markdown","775c98eb":"markdown","a89c3ec6":"markdown","684a37e6":"markdown"},"source":{"761849e4":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","2cba387d":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\n","f38115c8":"df_train.head()","663c5af2":"df_train.describe()","ec78c354":"df_train.isnull().sum()","94eefaaa":"df_train['Embarked'].unique()","637dcb93":"df_train[df_train[\"Embarked\"] == \"S\"].shape[0],df_train[df_train[\"Embarked\"] == \"C\"].shape[0],df_train[df_train[\"Embarked\"] == \"Q\"].shape[0]","9db823a4":"df_train['Age'] = df_train['Age'].fillna(df_train['Age'].mean())\ndf_train['Embarked'] = df_train['Embarked'].fillna('S')","ea53e659":"df_train.drop(['Cabin','Name','PassengerId','Ticket'],axis = 1,inplace = True)","ac9d87f8":"df_train.head()","43a98630":"sex = {'male':0,'female':1}\ndf_train['Sex'] = df_train['Sex'].map(sex)","e0fe1e9b":"emb = {\"S\":0,\"C\":1,\"Q\":2}\ndf_train['Embarked'] = df_train['Embarked'].map(emb)","30a9f9b5":"df_train.head()","9691e40c":"df_train.isnull().sum()","323abf38":"sns.heatmap(df_train.corr(),annot=True)","ee7cb033":"sns.histplot(df_train.Age)","5ed75c4f":"sns.histplot(df_train.Fare)","9e7269f9":"#preparing test set\ndf_test.head()","99d37d63":"Ids = df_test.PassengerId","c588a9be":"df_test.isnull().sum()","6dafdce6":"df_test[df_test[\"Embarked\"] == \"S\"].shape[0],df_test[df_test[\"Embarked\"] == \"C\"].shape[0],df_test[df_test[\"Embarked\"] == \"Q\"].shape[0]","c1059dd9":"df_test['Age'] = df_test['Age'].fillna(df_test['Age'].mean())\ndf_test['Embarked'] = df_test['Embarked'].fillna('S')\ndf_test.drop(['Cabin','Name','PassengerId','Ticket'],axis = 1,inplace = True)\nsex = {'male':0,'female':1}\ndf_test['Sex'] = df_test['Sex'].map(sex)\nemb = {\"S\":0,\"C\":1,\"Q\":2}\ndf_test['Embarked'] = df_test['Embarked'].map(emb)","18c290f5":"df_test.head()","8f3ccbe6":"df_train.head()","fdb7fc1c":"X = df_train.iloc[:,1:].values\ny = df_train.iloc[:,0].values","7b4d48bf":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX = scaler.fit_transform(X)","2a18e6b6":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 42)","56e01414":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(x_train,y_train)","d2e04e02":"from sklearn.metrics import accuracy_score\ny_pred = classifier.predict(x_test)\nacc_gaussian = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_gaussian)","550682cc":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(x_train, y_train)\ny_pred = svc.predict(x_test)\nacc_svc = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_svc)","d4f5386f":"from sklearn.ensemble import RandomForestClassifier\n\nrandomforest = RandomForestClassifier()\nrandomforest.fit(x_train, y_train)\ny_pred = randomforest.predict(x_test)\nacc_randomforest = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_randomforest)","9e3614f7":"from sklearn.ensemble import GradientBoostingClassifier\n\ngbk = GradientBoostingClassifier()\ngbk.fit(x_train, y_train)\ny_pred = gbk.predict(x_test)\nacc_gbk = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_gbk)","672a0da0":"import tensorflow as tf\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Dense(7,activation = 'relu'),\n    tf.keras.layers.Dense(10,activation = 'relu'),\n    tf.keras.layers.Dense(1,activation = 'sigmoid')\n])\nmodel.compile(optimizer='adam',loss = 'binary_crossentropy',metrics=['accuracy'])","7104368e":"history = model.fit(x_train,y_train,epochs = 200)","4fd41096":"plt.plot(history.history['loss'])","6cc1a63a":"plt.plot(history.history['accuracy'])","82a022d4":"y_pred = model.predict(x_test)","24dd0329":"acc_model = round(accuracy_score(np.round(y_pred.squeeze()), y_test) * 100, 2)\nprint(acc_model)","ad6e1d2b":"df_test['Fare'] = df_test['Fare'].fillna(df_test['Fare'].mean())","24307759":"X_test = scaler.fit_transform(df_test)","a46d27bf":"res  = randomforest.predict(X_test)","667bf50a":"sub = pd.DataFrame(columns = ['PassengerId','Survived'])","8f558ecc":"sub['PassengerId'] = Ids\nsub['Survived'] = res","49ee2b5a":"sub.head()","190dd616":"sub.to_csv('submission.csv',index = False)","9c00f9c8":"# Using Random Forest we get 82.68","84e3e72e":"**First Look Up**","9ee5db36":"# Thanks for reading this notebook. Enjoy Machine Learing \ud83d\ude00","3ed37bc2":"Check For NullValues","77cc3a4b":"# Using Support Vector Machines We get 65.36","775c98eb":"**Thus  Random Forest and Neural Network gives some good result over the data**","a89c3ec6":"# Using Gaussian Naive Bayes we get 77.09","684a37e6":"# Using Gradient Boosting Classifier we get 81.56"}}