{"cell_type":{"4f294ff5":"code","f9cbbdbc":"code","cc5e15c4":"code","f10aca61":"code","a24493e4":"code","f1a41cec":"code","945f18d2":"code","55305a3f":"code","4825fa5f":"code","d7653dae":"code","9eb61caa":"code","7c4fe03e":"code","ec50687f":"code","f42cc5e2":"code","e7f3a485":"code","67ecf5b8":"code","603e0930":"code","879930db":"markdown"},"source":{"4f294ff5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f9cbbdbc":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nfrom pandas import DataFrame\nfrom PIL import Image\nimport json\nimport cv2\n%matplotlib inline","cc5e15c4":"print(os.listdir(\"..\/input\"))","f10aca61":"train = pd.read_csv('..\/input\/train\/train.csv')","a24493e4":"train.drop('Description',axis=1).head()","f1a41cec":"cat = train[train['Type']==2].drop(['Description','RescuerID','PetID'],axis=1)","945f18d2":"cat.head()","55305a3f":"cat['AdoptionSpeed'].value_counts().sort_index().plot('bar', color='teal')\nplt.title('Adoption speed classes counts')","4825fa5f":"dog = train[train['Type']==1].drop(['Description','RescuerID','PetID'],axis=1)","d7653dae":"dog.head()","9eb61caa":"dog['AdoptionSpeed'].value_counts().sort_index().plot('bar', color='teal')\nplt.title('Adoption speed classes counts')","7c4fe03e":"test = pd.read_csv('..\/input\/test\/test.csv')","ec50687f":"all_data = pd.concat([train, test])","f42cc5e2":"all_data.head()","e7f3a485":"def convert_image(all_data,Type):\n    images = [i.split('-')[0] for i in os.listdir('..\/input\/train_images\/')]\n    size_dict = {1: 'Small', 2: 'Medium', 3: 'Large', 4: 'Extra Large'}\n    for t in all_data['Type'].unique():\n        for m in all_data['MaturitySize'].unique():\n            df = all_data.loc[(all_data['Type'] == t) & (all_data['MaturitySize'] == m)]\n            top_breeds = list(df['Breed1'].value_counts().index)[:5]\n            m = size_dict[m]\n            print(f\"Most common Breeds of {m} {t}s:\")\n\n            fig = plt.figure(figsize=(25, 4))\n\n            for i, breed in enumerate(top_breeds):\n                # excluding pets without pictures\n                b_df = df.loc[(df['Breed1'] == breed) & (df['PetID'].isin(images)), 'PetID']\n                if len(b_df) > 1:\n                    pet_id = b_df.values[1]\n                else:\n                    pet_id = b_df.values[0]\n                ax = fig.add_subplot(1, 5, i+1, xticks=[], yticks=[])\n                #im = Image.open(\"..\/input\/train_images\/\" + pet_id + '-1.jpg')\n                im = cv2.imread(\"..\/input\/train_images\/\" + pet_id + '-1.jpg')\n                im = cv2.cvtColor(im,cv2.COLOR_BGR2RGB)\n                if(Type=='gray'):\n                    im = cv2.cvtColor(im,cv2.COLOR_RGB2GRAY)\n                    \n                if(Type=='threshold'):\n                    gray = cv2.cvtColor(im,cv2.COLOR_RGB2GRAY)\n                    ret,im=cv2.threshold(gray,50,255,cv2.THRESH_BINARY)\n                plt.imshow(im)\n                ax.set_title(f'Breed: {breed}')\n            plt.show();","67ecf5b8":"convert_image(all_data,'ori')","603e0930":"convert_image(all_data,'threshold')","879930db":"## Convert images to other type"}}