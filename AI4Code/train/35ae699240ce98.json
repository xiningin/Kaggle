{"cell_type":{"995bcb93":"code","543fc2eb":"code","70083889":"code","32f5b10b":"code","a94c0b9d":"code","3cfe8ccc":"code","1ddd2a39":"code","39e83cd6":"code","9875f422":"code","420c1235":"code","ce406b34":"code","1478d607":"code","d3511cc6":"code","6f998f45":"code","527b793e":"code","7e700bfa":"code","17a8dba4":"markdown","0dcede3c":"markdown","76144a98":"markdown","4c8ec9f1":"markdown"},"source":{"995bcb93":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt","543fc2eb":"original = pd.read_csv(\"Student_Marks.csv\")\ndf = original.copy()","70083889":"df","32f5b10b":"!pip install pandas-profiling\n!pip install pycaret","a94c0b9d":"from pandas_profiling import ProfileReport\n\nprofile = ProfileReport(df)\nprofile.to_notebook_iframe()","3cfe8ccc":"from pycaret.regression import *\n\nreg = setup(data=df,\n            target='Marks',\n            train_size=0.8,\n            numeric_features=[\"number_courses\"],\n            normalize=True,\n            session_id=123,\n            )","1ddd2a39":"# We lowers the cv_fold as the dataset size is small\nbest_3 = compare_models(n_select=3, fold=5)","39e83cd6":"best_3","9875f422":"# Blending performs worse\nblend = blend_models(estimator_list=best_3, fold=5)","420c1235":"# What if the number of courses is categorical?\nreg_2 = setup(data=df,\n            target='Marks',\n            train_size=0.8,\n            categorical_features=[\"number_courses\"],\n            normalize=True,\n            session_id=123,\n            )","ce406b34":"# It performs no better than the first workflow\nbest_3 = compare_models(n_select=3, fold=5)","1478d607":"# What if we don't do data normalization?\nreg_3 = setup(data=df,\n            target='Marks',\n            train_size=0.8,\n            numeric_features=[\"number_courses\"],\n            normalize=False,\n            session_id=123,\n            )","d3511cc6":"# Some models perform better than the first workflow.\n# But top model performs no better than the first workflow.\nbest_3 = compare_models(n_select=3, fold=5)","6f998f45":"# We use the first workflow\nreg = setup(data=df,\n            target='Marks',\n            train_size=0.8,\n            numeric_features=[\"number_courses\"],\n            normalize=True,\n            fold=5,\n            session_id=123,\n            )","527b793e":"et = create_model('et', fold=5)","7e700bfa":"plot_model(et)","17a8dba4":"### Model training","0dcede3c":"**Observations from the profile report**\n\n1. There is no missing value\n2. There is high positive correlation between marks and study time.\n3. Marks distribution is slightly skewed to the right, whereas time study distribution is fairly symmetric.\n4. All marks are within 1.5 IQR (which is 1.5 x 24.043)","76144a98":"### Overview","4c8ec9f1":"We will let PyCaret takes cares of train-test split and normalization."}}