{"cell_type":{"0061c9c8":"code","a818ec8b":"code","7f7badde":"code","f4577ef4":"code","6784cc96":"code","4a92b638":"code","131f2e1c":"code","0c013ab6":"code","d6185488":"code","52de4286":"code","48dbbd42":"code","92ce68ff":"markdown"},"source":{"0061c9c8":"import numpy as np\nimport pandas as pd\nfrom IPython.display import display\nfrom tqdm import tqdm\nfrom collections import Counter\nimport ast\n\nimport matplotlib.pyplot as plt\nimport matplotlib.mlab as mlab\nimport seaborn as sb\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom textblob import TextBlob\nimport scipy.stats as stats\n\nfrom sklearn.decomposition import TruncatedSVD\nfrom sklearn.decomposition import LatentDirichletAllocation\nfrom sklearn.manifold import TSNE\nfrom nltk import tokenize","a818ec8b":"data = \"The Indian National Committee for Space Research (INCOSPAR) was established by Government of India under the Department of Atomic Energy (DAE) in 1962, on the urging of scientist Vikram Sarabhai recognising the need in space research. INCOSPAR grew and became ISRO in 1969, within DAE.[9] In 1972, the Government of India had set up a Space Commission and the Department of Space (DOS), bringing ISRO under the DOS. The establishment of ISRO thus institutionalised space research activities in India.[10][11] It since then has been managed by the DOS, which governs various other institutions in India in domain of astronomy and space technology.[12]ISRO built India's first satellite, Aryabhata, which was launched by the Soviet Union on 19 April 1975.[13] In 1980, ISRO launched satellite RS-1 onboard its own SLV-3 making India the sixth country to be capable of undertaking orbital launches. SLV-3 was followed by ASLV which was subsequently succeeded by development of many medium-lift launch vehicles, rocket engines, satellite systems and networks enabling agency to launch hundreds of domestic and foreign satellites and various deep space missions for space exploration.ISRO was the world's first space agency to find water on the moon[14] and insert a probe in orbit of Mars in its maiden attempt. It has the world's largest constellation of remote-sensing satellites and operates two satellite navigation systems namely GAGAN and NAVIC. \"","7f7badde":"from nltk import tokenize\nl = tokenize.sent_tokenize(data)\nl = np.array(l)\n# l","f4577ef4":"small_count_vectorizer = CountVectorizer(stop_words='english', max_features=40000)\n# small_text_sample = reindexed_data.sample(n=10000, random_state=0).values\n# small_text_sample = data\nprint('Headline before vectorization: {}'.format(l[1]))\n# print('Headline before vectorization: {}'.format(small_text_sample[1]))\n\nsmall_document_term_matrix = small_count_vectorizer.fit_transform(l)\n\nprint('Headline after vectorization: \\n{}'.format(small_document_term_matrix[1]))","6784cc96":"n_topics = 8\nlsa_model = TruncatedSVD(n_components=n_topics)\nlsa_topic_matrix = lsa_model.fit_transform(small_document_term_matrix)","4a92b638":"# Define helper functions\ndef get_keys(topic_matrix):\n    '''\n    returns an integer list of predicted topic \n    categories for a given topic matrix\n    '''\n    keys = topic_matrix.argmax(axis=1).tolist()\n    return keys\n\ndef keys_to_counts(keys):\n    '''\n    returns a tuple of topic categories and their \n    accompanying magnitudes for a given list of keys\n    '''\n    count_pairs = Counter(keys).items()\n    categories = [pair[0] for pair in count_pairs]\n    counts = [pair[1] for pair in count_pairs]\n    return (categories, counts)","131f2e1c":"lsa_keys = get_keys(lsa_topic_matrix)\nlsa_categories, lsa_counts = keys_to_counts(lsa_keys)","0c013ab6":"# Define helper functions\ndef get_top_n_words(n, keys, document_term_matrix, count_vectorizer):\n    '''\n    returns a list of n_topic strings, where each string contains the n most common \n    words in a predicted category, in order\n    '''\n    top_word_indices = []\n    for topic in range(n_topics):\n        temp_vector_sum = 0\n        for i in range(len(keys)):\n            if keys[i] == topic:\n                temp_vector_sum += document_term_matrix[i]\n        temp_vector_sum = temp_vector_sum.toarray()\n        top_n_word_indices = np.flip(np.argsort(temp_vector_sum)[0][-n:],0)\n        top_word_indices.append(top_n_word_indices)   \n    top_words = []\n    for topic in top_word_indices:\n        topic_words = []\n        for index in topic:\n            temp_word_vector = np.zeros((1,document_term_matrix.shape[1]))\n            temp_word_vector[:,index] = 1\n            the_word = count_vectorizer.inverse_transform(temp_word_vector)[0][0]\n            topic_words.append(the_word.encode('ascii').decode('utf-8'))\n        top_words.append(\" \".join(topic_words))         \n    return top_words","d6185488":"top_n_words_lsa = get_top_n_words(10, lsa_keys, small_document_term_matrix, small_count_vectorizer)\n\nfor i in range(len(top_n_words_lsa)):\n    print(\"Topic {}: \".format(i+1), top_n_words_lsa[i])","52de4286":"top_3_words_lsa = get_top_n_words(10, lsa_keys, small_document_term_matrix, small_count_vectorizer)\ntop_3_words_lsa","48dbbd42":"def modelTopics(data):\n   \n    l = tokenize.sent_tokenize(data)\n    l = np.array(l)\n    small_count_vectorizer = CountVectorizer(stop_words='english', max_features=40000)\n    # small_text_sample = reindexed_data.sample(n=10000, random_state=0).values\n    # small_text_sample = data\n#     print('Headline before vectorization: {}'.format(l[1]))\n    # print('Headline before vectorization: {}'.format(small_text_sample[1]))\n\n    small_document_term_matrix = small_count_vectorizer.fit_transform(l)\n\n#     print('Headline after vectorization: \\n{}'.format(small_document_term_matrix[1]))\n    n_topics = 8\n    lsa_model = TruncatedSVD(n_components=n_topics)\n    lsa_topic_matrix = lsa_model.fit_transform(small_document_term_matrix)\n\n    # Define helper functions\n    def get_keys(topic_matrix):\n        '''\n        returns an integer list of predicted topic \n        categories for a given topic matrix\n        '''\n        keys = topic_matrix.argmax(axis=1).tolist()\n        return keys\n\n    def keys_to_counts(keys):\n        '''\n        returns a tuple of topic categories and their \n        accompanying magnitudes for a given list of keys\n        '''\n        count_pairs = Counter(keys).items()\n        categories = [pair[0] for pair in count_pairs]\n        counts = [pair[1] for pair in count_pairs]\n        return (categories, counts)\n\n    lsa_keys = get_keys(lsa_topic_matrix)\n    lsa_categories, lsa_counts = keys_to_counts(lsa_keys)\n\n    # Define helper functions\n    def get_top_n_words(n, keys, document_term_matrix, count_vectorizer):\n        '''\n        returns a list of n_topic strings, where each string contains the n most common \n        words in a predicted category, in order\n        '''\n        top_word_indices = []\n        for topic in range(n_topics):\n            temp_vector_sum = 0\n            for i in range(len(keys)):\n                if keys[i] == topic:\n                    temp_vector_sum += document_term_matrix[i]\n            temp_vector_sum = temp_vector_sum.toarray()\n            top_n_word_indices = np.flip(np.argsort(temp_vector_sum)[0][-n:],0)\n            top_word_indices.append(top_n_word_indices)   \n        top_words = []\n        for topic in top_word_indices:\n            topic_words = []\n            for index in topic:\n                temp_word_vector = np.zeros((1,document_term_matrix.shape[1]))\n                temp_word_vector[:,index] = 1\n                the_word = count_vectorizer.inverse_transform(temp_word_vector)[0][0]\n                topic_words.append(the_word.encode('ascii').decode('utf-8'))\n            top_words.append(\" \".join(topic_words))         \n        return top_words\n    \n    top_n_words_lsa = get_top_n_words(10, lsa_keys, small_document_term_matrix, small_count_vectorizer)\n\n    for i in range(len(top_n_words_lsa)):\n        print(\"Topic {}: \".format(i+1), top_n_words_lsa[i])\n        \n        \n        \n#input\ndata = \"The Indian National Committee for Space Research (INCOSPAR) was established by Government of India under the Department of Atomic Energy (DAE) in 1962, on the urging of scientist Vikram Sarabhai recognising the need in space research. INCOSPAR grew and became ISRO in 1969, within DAE.[9] In 1972, the Government of India had set up a Space Commission and the Department of Space (DOS), bringing ISRO under the DOS. The establishment of ISRO thus institutionalised space research activities in India.[10][11] It since then has been managed by the DOS, which governs various other institutions in India in domain of astronomy and space technology.[12]ISRO built India's first satellite, Aryabhata, which was launched by the Soviet Union on 19 April 1975.[13] In 1980, ISRO launched satellite RS-1 onboard its own SLV-3 making India the sixth country to be capable of undertaking orbital launches. SLV-3 was followed by ASLV which was subsequently succeeded by development of many medium-lift launch vehicles, rocket engines, satellite systems and networks enabling agency to launch hundreds of domestic and foreign satellites and various deep space missions for space exploration.ISRO was the world's first space agency to find water on the moon[14] and insert a probe in orbit of Mars in its maiden attempt. It has the world's largest constellation of remote-sensing satellites and operates two satellite navigation systems namely GAGAN and NAVIC. \"\n#calling function\nmodelTopics(data)","92ce68ff":"# Integration code"}}