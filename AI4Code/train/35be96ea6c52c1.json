{"cell_type":{"4d4fc950":"code","24e2e7d4":"code","4da14706":"code","057021be":"code","c8507ab8":"code","06de10c8":"code","ff04df39":"code","80c1f1fa":"code","ff38788a":"code","7d16a562":"code","1144cd7f":"code","319e7c0e":"markdown","2f63460b":"markdown","0c762931":"markdown","7448d89d":"markdown","b93e488b":"markdown","250c2f02":"markdown"},"source":{"4d4fc950":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","24e2e7d4":"def make_dataframe(csv_filename):\n    \"\"\"\n    given a CSV filename from the input folder\n    output a pandas dataframe\n    \"\"\"\n    return pd.read_csv(csv_filename)","4da14706":"CSV_FILENAME = \"\/kaggle\/input\/80-cereals\/cereal.csv\"\ndf = make_dataframe(CSV_FILENAME)","057021be":"def get_cool_cereals():\n    \"\"\"\n    return a dataframe with with just 10 cool cereals \n    \"\"\"\n    return pd.concat([df[df.name == \"Cocoa Puffs\"],\n                    df[df.name == \"Apple Jacks\" ],\n                    df[df.name == \"Count Chocula\"],\n                    df[df.name == \"Cheerios\"],\n                    df[df.name == \"Froot Loops\"],\n                    df[df.name == \"Frosted Flakes\"],\n                    df[df.name == \"Lucky Charms\"],\n                    df[df.name == \"Rice Krispies\"],\n                    df[df.name == \"Honey Nut Cheerios\"],\n                    df[df.name == \"Frosted Mini-Wheats\"]])","c8507ab8":"cereals = get_cool_cereals()\ncereals","06de10c8":"import matplotlib as mpl\n#this will be where the code goes for matplot lib\n\ndef makeScatterPlot(x, y):\n    mpl.pyplot.plot(x, y)\ndef makeHistogram(x, bins, colors = \"blue\"):\n    mpl.pyplot.hist(x, bins, color = colors)\ndef makeBar(x, y):\n    mpl.pyplot.bar(x, y)\ndef makeBarh(x, y):\n    mpl.pyplot.barh(x, y)\ndef makePie(x):\n    mpl.pyplot.pie(x)\n    ","ff04df39":"x = cereals[\"sugars\"].sort_values()\ny = cereals[\"rating\"]\ntitle = \"Amount of Sugars Vs. Rating\"\n\nmakeScatterPlot(x,y)","80c1f1fa":"x = cereals[\"sugars\"]\nbins = 10\n#colors = \"red\"\nmakeHistogram(x, bins)","ff38788a":"x = cereals[\"name\"]\ny = cereals[\"sodium\"]\n\nmakeBar(x, y)","7d16a562":"makeBarh(x,y)","1144cd7f":"#this is where the code goes for Machine learning","319e7c0e":"Machine Learning Code","2f63460b":"[Matplotlib documentation](https:\/\/matplotlib.org\/tutorials\/introductory\/sample_plots.html#sphx-glr-tutorials-introductory-sample-plots-py)\n","0c762931":"[ScatterPlot Documentation](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot)\n","7448d89d":"Visualization Section","b93e488b":"[Pie documentation](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.pie.html#matplotlib.pyplot.pie)","250c2f02":"[Histogram Documentation](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.hist.html#matplotlib.pyplot.hist)"}}