{"cell_type":{"64e3db4e":"code","8ae77e2e":"code","d5dab3d1":"code","ac9825da":"code","b1f878a4":"code","2f4a31b8":"code","2b1187b2":"code","3dd6861d":"code","a83d90aa":"code","c0e915b4":"code","60cd5cec":"code","ca9c83bc":"code","7f11b372":"code","d37324be":"code","638d81e9":"code","faf804cc":"code","6955b8d9":"code","3f41e537":"code","b1aeb52d":"code","93f4ab02":"code","365c8238":"code","f39c85e8":"code","5798a8b2":"code","a7f9a110":"code","ee0e8f07":"code","d8469120":"code","830263ab":"code","80f21954":"code","a2fa3534":"code","8f88a88f":"code","943494fd":"code","3945cc90":"code","b73a660f":"code","d51b1b76":"markdown","180d1153":"markdown","b80fc602":"markdown","5005aeb0":"markdown","7419b04f":"markdown","707fbe6a":"markdown","7de23f86":"markdown","a3a4afcc":"markdown","3f243d64":"markdown","b081acb1":"markdown","44583a94":"markdown","6d7d5fda":"markdown","360a01e4":"markdown","d0786843":"markdown","fa375631":"markdown","5becdf26":"markdown","5cf281be":"markdown"},"source":{"64e3db4e":"!pip install pywaffle","8ae77e2e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport missingno as msno\nfrom pywaffle import Waffle\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","d5dab3d1":"df = pd.read_csv(\"..\/input\/engineering-placements-prediction\/collegePlace.csv\")\ndf.head()","ac9825da":"df.describe().T","b1f878a4":"df.info()","2f4a31b8":"df.isnull().sum()","2b1187b2":"msno.bar(df,figsize=(12, 6), color = \"purple\")\nplt.show()","3dd6861d":"fig = px.histogram(df, \"Stream\", color = \"PlacedOrNot\",barmode = \"group\", \n                   title = \"Placement according to Stream\", \n                   template = \"plotly_dark\",width = 700)\nfig.show()","a83d90aa":"data = dict(df['Stream'].value_counts(normalize = True) * 100)\nstream = list(df[\"Stream\"].value_counts().index) \n            \n\nfig = plt.figure( \n    rows=10,\n    columns=11,\n    FigureClass = Waffle, \n    values = data, \n    title={'label': 'Proportion of Stream', 'loc': 'center',\n          'fontsize':15},\n    colors=(\"#FF7F0E\", \"#00B5F7\", \"#AB63FA\",\"#00CC96\",\"#E9967A\",\"#F08080\"),\n    labels=[f\"{k} ({v:.2f}%)\" for k, v in data.items()],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.2), 'ncol': 2, 'framealpha': 0},\n    figsize=(6, 8)\n)\n\nfig.show()","c0e915b4":"fig = px.pie(df, names = \"Gender\", title = \"Proportion of male and female\", \n             hole = 0.5, template = \"plotly_dark\",width=500)\nfig.update_traces(textposition = \"inside\",textinfo = \"percent+label\",\n                 marker = dict(line = dict(color = \"#000000\",width = 1.5)))\nfig.show()","60cd5cec":"fig = px.histogram(df, \"Gender\", color = \"PlacedOrNot\",barmode = \"group\", \n                   title = \"Number of Placement according to Gender\", \n                   template = \"plotly_dark\",width = 700)\nfig.show()","ca9c83bc":"baclog = dict(df[\"HistoryOfBacklogs\"].groupby(df[\"Gender\"]).sum())\nbaclog","7f11b372":"gendct = dict(df[\"Gender\"].value_counts())\ngendct","d37324be":"bacavg = dict()\ngen ={}\nfor key, value in baclog.items():\n    bacavg[key] = baclog[key]\/gendct[key]\nbacavg","638d81e9":"gen = [\"Male\",\"Female\"]\nbaclog = [0.19676767676767676, 0.1690427698574338]\nbaconavg = pd.DataFrame({'Gender': gen, 'BacLogOnAvg': baclog})\nbaconavg","faf804cc":"fig = px.bar(baconavg,x = \"Gender\", y = \"BacLogOnAvg\",color = \"Gender\",\n            title = \"BackLog history on Average\", width = 700,\n            template = \"plotly_dark\")\nfig.show()","6955b8d9":"placed = dict(df['PlacedOrNot'].groupby(df[\"Internships\"]).sum())\nparticipants = dict(df['PlacedOrNot'].groupby(df[\"Internships\"]).count()) \n\nplacedonavg = dict()\nfor key, val in placed.items():\n    placedonavg[key] = placed[key]\/participants[key]\nplacedonavg","3f41e537":"placement = dict()\nfor key, val in placedonavg.items():\n    placement[key] = [val]\nplacement","b1aeb52d":"intern = list(placedonavg.keys())\nPlacedAvg = list(placedonavg.values())\ndf_place = pd.DataFrame({\"Internships\": intern, \"PlacementOnAvg\": PlacedAvg})\ndf_place","93f4ab02":"fig = px.bar(df_place, x = \"Internships\", y = \"PlacementOnAvg\", color = \"Internships\", \n                   title = \"Placement on Average according to Internships\", \n                   template = \"plotly_dark\",width = 700)\nfig.show()","365c8238":"fig = px.histogram(df, \"CGPA\", color = \"PlacedOrNot\",barmode = \"group\", \n                   title = \"Number of Placement according to Gender\", \n                   template = \"plotly_dark\",width = 700)\nfig.show()","f39c85e8":"stream_analysis = df.groupby('Stream').agg({'Age': 'mean', \"CGPA\": 'mean', \n                                            \"Internships\": 'sum', \n                                            \"PlacedOrNot\": 'sum'})\n\nstream_analysis.style.highlight_max()","5798a8b2":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier","a7f9a110":"lb = LabelEncoder()\ndf[\"Gender\"] = lb.fit_transform(df['Gender'])\ndf.head()","ee0e8f07":"df_stream = pd.get_dummies(df[\"Stream\"],drop_first = True)\ndf = pd.concat([df,df_stream],axis = 1)\ndf.head()","d8469120":"df.drop(\"Stream\",axis = 1,inplace = True)\nx = df.drop(\"PlacedOrNot\", axis = 1)\ny = df[\"PlacedOrNot\"]\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)","830263ab":"xgb = XGBClassifier()\nxgb.fit(x_train,y_train)","80f21954":"from sklearn.metrics import accuracy_score\ny_pred = xgb.predict(x_test)\nxgb_acc = accuracy_score(y_test, y_pred)\nxgb_acc","a2fa3534":"lgb = LGBMClassifier()\nlgb.fit(x_train,y_train)\ny_pred_lgb = lgb.predict(x_test)\nlgbm_acc = accuracy_score(y_test, y_pred_lgb)\nlgbm_acc","8f88a88f":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\ndt.fit(x_train,y_train)\ny_pred_dt = dt.predict(x_test)\ndt_acc = accuracy_score(y_test, y_pred_dt)\ndt_acc","943494fd":"models = pd.DataFrame({\"Models\": [\"DecisionTree\",\"XGBoost\",\"LightGBM\"], \"Accuracy\": [dt_acc, xgb_acc, lgbm_acc]})\nmodels","3945cc90":"fig = px.bar(models, x = \"Models\", y = \"Accuracy\", color = \"Models\",\n            title = \"Accuracy of Models\",\n            template = \"plotly_dark\",\n            width = 700)\nfig.show()","b73a660f":"from mlxtend.plotting import plot_confusion_matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred_lgb)\nplot_confusion_matrix(cm,class_names = [\"Not Placed\", \"Placed\"],\n                      cmap = plt.cm.Purples,\n                     figsize=(7,5))\nplt.xticks(rotation = 0)\nplt.show()","d51b1b76":"><b>XGBClassifier:<\/b>","180d1153":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:100%; text-align:center; border-radius: 15px 50px; height:30px\">Model & Prediction<\/p>","b80fc602":"><b>LightGBM:<\/b>","5005aeb0":"><b><h3>History of Backlogs between genders, on Average:<\/h3><\/b>","7419b04f":"- With LightGBM we are getting the highest accuracy 90.5%","707fbe6a":"- Proportion of computer science students to get placed is highest which is 26.16%\n- In second is Information Technology students with 23.30% ","7de23f86":"- There is no null values","a3a4afcc":"- There is a higher imbalance in male and female placement","3f243d64":"- The number of male and female are not balanced. So we'll show backlog history on average","b081acb1":"> <b><h3>Placement according to Internships:<\/h3><\/b>","44583a94":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:100%; text-align:center; border-radius: 15px 50px; height:40px\"><b>Placement factors Prediction and analysis<\/b><\/p>\n---\n\n<center><img src=\"https:\/\/website-assets-fw.freshworks.com\/attachments\/ckttn6cgt1bw44vg0otzb4fzq-web-page-illustration-v-2-146.one-half.png\n\"width=\"500\" height=\"300\"><\/center>\n\n---","6d7d5fda":"- On average backlog history of male students are highest\n- Female students have less backlog than male students","360a01e4":"><b><h3>From which stream people get placed most?<\/h3><\/b>","d0786843":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:100%; text-align:center; border-radius: 15px 50px; height:30px\">Analysis & Visualization<\/p>","fa375631":"- The possibility of getting placed increases with the number of internships.\n- This is the result on average, because the number of people with a specefic internships is not balanced. So calculating the average of the specefic internships with the total number of people participate with that interships seems fair.","5becdf26":"- So, Computer Science Students gets the highest number of placement","5cf281be":"- With the increament of CGPA the number of students getting placed, increases except people with CGPA 9.\n- I think, people with CGPA 9 thinks, the job is not worth enough for them, that's why they didn't participate. That may be a reason. \ud83d\ude05"}}