{"cell_type":{"505cddba":"code","b921ce5c":"code","2e6c8046":"code","81e5009b":"code","24e05abf":"code","134aea9a":"code","91b56749":"code","ba135379":"code","22075a4e":"code","1829ce6b":"code","4b567d10":"code","6599ae11":"code","54f4580d":"code","ce2f92d8":"code","f3de3ef2":"code","de35e8bb":"code","a5e78e20":"code","72ee37aa":"code","407bae60":"code","1e894c88":"code","e73cba07":"code","d0074bf3":"code","f3c36f9d":"code","cbde716d":"code","b1eceab4":"markdown","35ddb0d4":"markdown","2b9c93a0":"markdown","b8aa9aa1":"markdown","b4223e49":"markdown","363813ed":"markdown","5919cfe8":"markdown","8e792c61":"markdown","28dee028":"markdown","a2b47bbf":"markdown","7c3d8bd6":"markdown","02d2dd9c":"markdown","29799745":"markdown","be46e978":"markdown","e4a955fd":"markdown","03fe98ea":"markdown","b823fbb1":"markdown","deee525b":"markdown","828c6a87":"markdown","73826dbb":"markdown","8ae0e054":"markdown","62532a1a":"markdown","ef742d86":"markdown","58d4326f":"markdown","7ac4cbe7":"markdown"},"source":{"505cddba":"print('What tables do I have?')\nimport pandas as pd\nfrom bq_helper import BigQueryHelper\nbq_assistant = BigQueryHelper(\"bigquery-public-data\", \"google_analytics_sample\")\nbq_assistant.list_tables()[:5]","b921ce5c":"QUERY = \"\"\"\n    SELECT \n        *  -- Warning, be careful when doing SELECT ALL\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20160801` \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","2e6c8046":"schema = bq_assistant.table_schema(\"ga_sessions_20160801\")\nschema","81e5009b":"schema[schema['name'].str.contains(\"page\")]","24e05abf":"schema[schema['name'].str.contains(\"visit\")]","134aea9a":"QUERY = \"\"\"\n    SELECT\n        SUM(totals.visits) as visits\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20160801` \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","91b56749":"QUERY = \"\"\"\n    SELECT\n        SUM(totals.visits) as visits\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","ba135379":"QUERY = \"\"\"\n    SELECT\n        date as date,\n        SUM(totals.visits) as visits\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    GROUP BY date\n    ORDER BY date ASC\n    LIMIT 31\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(31)","22075a4e":"QUERY = \"\"\"\n    SELECT\n        fullVisitorId\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","1829ce6b":"# This way doesnt work!\nQUERY = \"\"\"\n    SELECT\n        fullVisitorId,\n        COUNT(*) as the_count\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    GROUP BY fullVisitorId\n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(5)","4b567d10":"# This way doesnt work!\nQUERY = \"\"\"\n    SELECT\n        COUNT(fullVisitorId) as the_count\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(5)","6599ae11":"# This way works!\nQUERY = \"\"\"\n    SELECT\n        COUNT(DISTINCT fullVisitorId) as the_count\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(5)","54f4580d":"schema[schema['name'].str.contains(\"page\")]","ce2f92d8":"QUERY = \"\"\"\n    SELECT\n        date as date,\n        SUM(totals.pageviews) as pageviews\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    GROUP BY date\n    ORDER BY date ASC\n    LIMIT 31\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","f3de3ef2":"schema[schema['name'].str.contains(\"Revenue\")]","de35e8bb":"QUERY = \"\"\"\n    SELECT\n        date as date,\n        SUM(totals.transactionRevenue) as transactionRevenue\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    GROUP BY date\n    ORDER BY date ASC\n    LIMIT 31\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","a5e78e20":"QUERY = \"\"\"\n    SELECT\n        date as date,\n        SUM(totals.transactionRevenue)\/1e6 as transactionRevenue       ## 1e6 - means 10 to the power of 6 (or 1,000,000) AKA 10^6\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    GROUP BY date\n    ORDER BY date ASC\n    LIMIT 31\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(31)","72ee37aa":"schema[schema['name'].str.contains(\"custom\")]","407bae60":"QUERY = \"\"\"\n    SELECT\n        fullVisitorId,\n        customDimensions\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` \n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head(10)","1e894c88":"QUERY = \"\"\"\n    SELECT\n        fullVisitorid,\n        customDimensions,\n        cds.Value,\n        cds.Index\n    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`, \n        UNNEST(customDimensions) AS cds                                        #### this bit breaks out the bracket stuff\n    WHERE _TABLE_SUFFIX BETWEEN '20170101'AND '20170131' \n    AND index = 4\n    LIMIT 10\n\"\"\"\n\ndf = bq_assistant.query_to_pandas(QUERY)\ndf.head()","e73cba07":"## put your code for question 1 here","d0074bf3":"## put your code for question 2 here","f3c36f9d":"QUERY = \"\"\"\n  SELECT \n      fullVisitorId, \n      TIMESTAMP_SECONDS(visitStartTime) AS visitStartTime,\n      TIMESTAMP_ADD(TIMESTAMP_SECONDS(visitStartTime), INTERVAL hits.time MILLISECOND) AS hitTime,\n      hits.page.pagePath,\n      hits.type\n  FROM \n      `bigquery-public-data.google_analytics_sample.ga_sessions_*` AS ga, \n      unnest(hits) as hits\n  WHERE fullVisitorId = '0509972280802528263' AND\n      _TABLE_SUFFIX BETWEEN '20170801' AND '20170801'\n  ORDER BY hitTime \n  LIMIT 50\n  \"\"\"\ndf = bq_assistant.query_to_pandas(QUERY)\ndf","cbde716d":"QUERY = \"\"\"  \n  SELECT \n      fullVisitorId, \n      TIMESTAMP_SECONDS(visitStartTime) AS visitStartTime,\n      TIMESTAMP_ADD(TIMESTAMP_SECONDS(visitStartTime), INTERVAL hits.time MILLISECOND) AS hitTime,\n      hits.page.pagePath,\n      hits.type\n  FROM \n      `bigquery-public-data.google_analytics_sample.ga_sessions_*` AS ga, \n      unnest(hits) as hits\n  WHERE _TABLE_SUFFIX BETWEEN '20170801' AND '20170801'\n  ORDER BY fullVisitorId, hitTime \n  LIMIT 500\n  \"\"\"\ndf = bq_assistant.query_to_pandas(QUERY)\ndf","b1eceab4":" ## Get some useful data  ##","35ddb0d4":"### A right way to count visitors ###","2b9c93a0":"**Visits on a particular day**","b8aa9aa1":"**----------------------------------------------------------------------------------------------------------------------------------------------------------------**","b4223e49":"### Working with Pageviews ###","363813ed":"**The custom dimensions are all nested up in those square brackets. We will need to unnest them to be able to use them**","5919cfe8":"## Question 2: In June 2017, which traffic source has brought the maximum revenue?  ##","8e792c61":"## Get user journey for many users\n\n* To get user journey, for each user, we need user_id to identify the user, and then a series of activities in chronicle order.","28dee028":"### How do I count them? ###","a2b47bbf":"### The wrong way to count visitors ###","7c3d8bd6":"### What is going on with the high revenue numbers!!! ###\n\nThe Google Analytics Schema: (http:\/\/goo.gl\/3gPcJH)\n    \n","02d2dd9c":"### Working with Sessions (AKA visits) ###","29799745":"**Visits for a number of days**","be46e978":"**Visits by day for a number of days**","e4a955fd":"### what does the schema look like? ###","03fe98ea":"****----------------------------------------------------------------------------------------------------------------------------------------------------------------****","b823fbb1":"# YOUR TURN! #","deee525b":"### Working with custom dimensions ###","828c6a87":"# Getting insights from GA data #\n\n## What you will build ##\n\nIn this tutorial, you'll learn how to get GA data from Bigquery\n\nWe are going to use a public bigquery dataset, specifically  [google_analytics_sample](https:\/\/bigquery.cloud.google.com\/dataset\/bigquery-public-data:google_analytics_sample). \n\n## What you will learn ##\n\n* How to use python on ipython notebook to fetch GA data\n\n## Setup ##\n\n* There is no prerequites for running this notebook, as a small sample of dates will be extracted for demonstrating purposes\n* If you want to do serious analysis, would recommend datalab\/colab \n","73826dbb":"### Working with Revenue ###","8ae0e054":"# ADVANCED SECTION  #\n##  Get user journey for one user ##\n\n* To get user journey, for each user, we need user_id to identify the user, and then a series of activities in chronicle order.","62532a1a":"### Working with users ###","ef742d86":"## Question 1: How much revenue was there in June 2017 ##","58d4326f":"### Can I look for specific columns? ###","7ac4cbe7":"## Fetch data from Bigquery ##\n\nYou can also run these queries in [BigQuery](https:\/\/bigquery.cloud.google.com\/table\/bigquery-public-data:google_analytics_sample.ga_sessions_20170801).\nHere we examine the data structure for Bigquery to understand each columns.\n"}}