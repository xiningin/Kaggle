{"cell_type":{"0c3999ea":"code","fb2d31e7":"code","251d4b8b":"code","a94408d4":"code","f994dc02":"code","4cd9d28f":"code","af8d7ffe":"code","49302e0d":"code","dac412ef":"code","ea93d752":"code","051005a0":"code","d2b5bf7c":"code","fa698476":"code","a5602fc4":"code","7dc58fe4":"code","270f8cc8":"code","a3c6216a":"code","46de8a88":"code","03c2aa56":"code","3d28a1da":"code","0c19b754":"code","6e20240e":"code","cde38e7d":"code","b62adc56":"code","d77e0117":"code","2aa91e2f":"code","a5bc7d4d":"code","a81f8534":"code","07d952a1":"code","d440bd24":"code","18098ef0":"markdown","50a265c2":"markdown","36ace197":"markdown","81a7f167":"markdown","e2e69a3a":"markdown"},"source":{"0c3999ea":"import warnings \nwarnings.filterwarnings(\"ignore\")","fb2d31e7":"!pip install dataprep","251d4b8b":"import plotly.express as px  \nimport plotly.figure_factory  as ff\nimport pandas as pd \nimport dataprep\nfrom dataprep.eda import create_report\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda.missing import plot_missing  \nfrom matplotlib import pyplot as plt \nimport seaborn as sns","a94408d4":"df = pd.read_csv(r\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","f994dc02":"df","4cd9d28f":"print(\"Columns names===>\",df.columns.tolist())","af8d7ffe":"plot_missing(df)","49302e0d":"gender = df[\"gender\"].value_counts().reset_index() \ngender.columns = [\"Gender\",\"Value Counts\"] \npx.pie(gender,names=\"Gender\",values=\"Value Counts\",title=\"Male and Female Distribution ratio\",color_discrete_sequence=px.colors.sequential.Cividis_r)","dac412ef":"race = df[\"race\/ethnicity\"].value_counts().reset_index() \nrace.columns = [\"ethnicity\",\"Value Counts\"] \npx.bar(race,x=\"ethnicity\",y=\"Value Counts\",color=\"Value Counts\")","ea93d752":"education = df[\"parental level of education\"].value_counts().reset_index() \neducation.columns = [\"Education\",\"Parental level of education\"] \npx.treemap(education,names=\"Education\",values=\"Parental level of education\",path=[\"Education\",\"Parental level of education\"])","051005a0":"lunch = df[\"lunch\"].value_counts().reset_index() \nlunch.columns = [\"lunch\",\"Value_counts\"] \npx.pie(lunch,names=\"lunch\",values=\"Value_counts\",color_discrete_sequence=px.colors.sequential.Agsunset_r)","d2b5bf7c":"df","fa698476":"race1 = df.groupby([\"race\/ethnicity\",\"gender\"])[\"gender\"].agg([len])\nrace2 = race1.reset_index()","a5602fc4":"race2.columns = [\"Race\",\"Gender\",\"Length\"]\npx.bar(race2,x=\"Race\",y=\"Length\",color=\"Gender\",barmode=\"group\",color_discrete_sequence=px.colors.sequential.Darkmint_r)","7dc58fe4":"parental1 = df.groupby([\"race\/ethnicity\",\"parental level of education\"])[\"parental level of education\"].agg([len])\nparental2 = parental1.reset_index()","270f8cc8":"px.bar(parental2,x=\"race\/ethnicity\",y=\"len\",color=\"parental level of education\",barmode=\"group\",color_discrete_sequence=px.colors.sequential.matter_r)","a3c6216a":"read = df.groupby(\"race\/ethnicity\")[\"math score\"].mean().reset_index() \npx.pie(read,names=\"race\/ethnicity\",values=\"math score\",title=\"Average Maths score based on race\/ethnicity\",color_discrete_sequence=px.colors.sequential.Blugrn_r)","46de8a88":"read1 = df.groupby(\"race\/ethnicity\")[\"reading score\"].mean().reset_index() \npx.pie(read1,names=\"race\/ethnicity\",values=\"reading score\",title=\"Average Reading score based on race\/ethnicity\",color_discrete_sequence=px.colors.sequential.Blackbody)","03c2aa56":"write1 = df.groupby(\"race\/ethnicity\")[\"writing score\"].mean().reset_index() \npx.pie(write1,names=\"race\/ethnicity\",values=\"writing score\",title=\"Average Writing score based on race\/ethnicity\",color_discrete_sequence=px.colors.sequential.Brwnyl_r)","3d28a1da":"d  = df.nlargest(10,\"math score\") \nff.create_table(d)","0c19b754":"s  = df.nlargest(10,\"reading score\") \nff.create_table(s)","6e20240e":"w  = df.nlargest(10,\"writing score\") \nff.create_table(w)","cde38e7d":"plot(df,\"math score\")","b62adc56":"plot(df,\"writing score\")","d77e0117":"plot(df,\"reading score\")","2aa91e2f":"df['Percentage'] = (df['math score']+df['reading score']+df['writing score'])\/3","a5bc7d4d":"def Grade(Percentage):\n    if (Percentage >= 95): return 'O'\n    if (Percentage >= 81): return 'A'\n    if (Percentage >= 71): return 'B'\n    if (Percentage >= 61): return 'C'\n    if (Percentage >= 51): return 'D'\n    if (Percentage >= 41): return 'E'\n    else: return 'F'\n    \ndf[\"grade\"] = df.apply(lambda x : Grade(x[\"Percentage\"]), axis=1)","a81f8534":"b = df.groupby([\"race\/ethnicity\",\"grade\"])[\"grade\"].agg([len]) ","07d952a1":"v = b.reset_index() \npx.bar(v,x=\"race\/ethnicity\",y=\"len\",color=\"grade\",barmode=\"group\",title=\"percentage distribution over race\/ethnicity\",color_discrete_sequence=px.colors.sequential.Electric_r)","d440bd24":"plt.figure(figsize=(12,8))\ncorrelation = df.corr() \nsns.heatmap(df.corr(),annot=True,cmap=\"PuBuGn\")","18098ef0":"# Top 10  who well performed in writing score : ","50a265c2":"****You can Check out of different normal distributions here like histogram,KDE plot,Normal Q-Q Plot ****","36ace197":"# Top 10  who well performed in math score :","81a7f167":"# Distribution plots :  ","e2e69a3a":"# Top 10 who well performed in reading score :"}}