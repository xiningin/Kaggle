{"cell_type":{"d60b9072":"code","a53167fc":"code","4769c68c":"code","bac097a8":"code","8ddaac10":"code","714904d4":"code","192eb76e":"code","708f377e":"code","9509464a":"code","89a677c5":"code","5eb18965":"code","3f677e3d":"code","d71d7dd2":"code","6ca3a4e5":"code","5c92af9b":"code","00247c5e":"code","e1a3ea74":"code","7ae9dcf8":"code","065f9a61":"code","60b5cc36":"code","8cee5d04":"code","ebd7de28":"code","b8c702ea":"code","55561ad9":"code","6fec19a3":"code","0888d0bc":"code","4d717879":"code","ba6db3b0":"code","82f79bc4":"code","289ed40c":"code","bf203873":"code","40be7610":"code","936b1850":"code","c5847417":"code","3337594c":"code","8c23d22c":"code","1b0aee57":"code","93ed527b":"code","c9284ad6":"code","d848a175":"code","3a324f4b":"code","74de3c71":"code","6d20b848":"code","c58e0d1b":"code","549f1627":"code","600f1f8d":"code","34b1ecb7":"code","1c5db40c":"code","f1958b9a":"code","d14f4c25":"code","ceaec282":"code","41f260a2":"code","be5eff56":"markdown"},"source":{"d60b9072":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a53167fc":"from sklearn.model_selection import train_test_split, GridSearchCV,cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import scale \nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.metrics import accuracy_score\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","4769c68c":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_df.head()","bac097a8":"test_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_df.head()\n","8ddaac10":"test_df.shape\n","714904d4":"train_df.shape","192eb76e":"df1 = pd.concat([train_df,test_df])\n   \n","708f377e":"df=df1.drop([\"Survived\"],axis=1)","9509464a":"df.head(50)","89a677c5":"y_train = train_df[\"Survived\"].values\n\n","5eb18965":"last_df = df.drop([\"Cabin\", \"Name\", \"Ticket\"], axis=1)","3f677e3d":"last_df","d71d7dd2":"last_df[\"Embarked\"].value_counts()","6ca3a4e5":"last_df[\"Embarked\"].fillna(\"S\", inplace=True)\n\n","5c92af9b":"last_df[\"Age\"].fillna(last_df[\"Age\"].mean(), inplace=True)","00247c5e":"last_df.isna().sum()","e1a3ea74":"last_df[\"Fare\"].fillna(last_df[\"Fare\"].mean(), inplace=True)","7ae9dcf8":"last_df.isna().sum()","065f9a61":"last_df[\"Embarked\"] = last_df[\"Embarked\"].map({\"S\": 3, \"C\": 2, \"Q\": 1}).astype(int)","60b5cc36":"final_df1=pd.get_dummies(last_df[\"Sex\"])","8cee5d04":"final_df1","ebd7de28":"final_df2=final_df1.drop([\"male\"],axis=1)","b8c702ea":"final_df3 = last_df.drop([\"Sex\"],axis=1)","55561ad9":"final_df3\n","6fec19a3":"final_df=pd.concat([final_df3,final_df2],axis=1)","0888d0bc":"final_df","4d717879":"final_df.isna().sum()","ba6db3b0":"X_train = final_df[:y_train.shape[0]]","82f79bc4":"X_train","289ed40c":"X_test = final_df[y_train.shape[0]:]","bf203873":"import random","40be7610":"X_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size = 0.25, random_state=42)","936b1850":"final_df","c5847417":"import xgboost as xgb","3337594c":"from sklearn.ensemble import GradientBoostingClassifier","8c23d22c":"from xgboost import XGBClassifier","1b0aee57":"gbm_params = {\"n_estimators\": [5, 10, 15, 20, 25], \n    \"max_depth\": [3, 5, 7, 9, 11, 13]}","93ed527b":"def set_seed(seed_value):\n    random.seed(seed_value)\n    np.random.seed(seed_value)\n    os.environ[\"PYTHONHASHSEED\"] = str(seed_value)\n    \n\nSEED = 42\nset_seed(SEED)","c9284ad6":"model_xgb = xgb.XGBClassifier(\n    random_state=SEED,)","d848a175":"model_xgb = GridSearchCV(\n    model_xgb, \n    gbm_params, \n    cv=5,\n    scoring='accuracy',)","3a324f4b":"model_xgb.fit(X_train, y_train)","74de3c71":"model_xgb = GradientBoostingClassifier(n_estimators=25, \n    max_depth=11)","6d20b848":"model_xgb_tuned =  model_xgb.fit(X_train,y_train)","c58e0d1b":"y_pred = model_xgb_tuned.predict(X_test)\naccuracy_score(y_test, y_pred)","549f1627":"from xgboost import XGBClassifier","600f1f8d":"model = XGBClassifier(subsample = 0.7, max_depth = 4,booster='gbtree')","34b1ecb7":"model.fit(X_train, y_train)\n","1c5db40c":"y_pred = model.predict(X_test)","f1958b9a":"accuracy = accuracy_score(y_test, y_pred)","d14f4c25":"print(\"Accuracy:%.2f%%\" % (accuracy * 100.0))","ceaec282":"my_output = pd.DataFrame({'PassengerId': X_test[\"PassengerId\"], 'Survived': y_pred})","41f260a2":"my_output.to_csv('Predictions.csv', index=False)\n\n","be5eff56":"X_test"}}