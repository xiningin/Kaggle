{"cell_type":{"d8bf35b8":"code","8b03f01a":"code","b182aec4":"code","5c713ad3":"code","4d321447":"code","5e61ae7e":"code","6b8b9cf2":"code","7edbfb65":"code","b055e9c6":"code","36b82891":"code","da461554":"code","206eb5d4":"code","f488985b":"code","574e9e73":"code","2928fc54":"code","88765ccf":"code","5563cdcd":"code","e9a987d7":"code","ac4bb04b":"code","9442295b":"code","17c1cd72":"code","668509f4":"code","63a5395d":"code","8993fe27":"code","057f57c8":"code","de7d9ad5":"code","313c86da":"code","b97b33e9":"code","9edf3153":"code","c7571334":"code","a890db99":"code","962932d3":"code","455c9556":"code","ea742f18":"code","67738d53":"code","e9cd5f26":"code","7d253a2b":"code","ba264468":"code","cfa56c68":"code","7a9b18ba":"code","0138496c":"code","577933c7":"code","035ccda2":"code","5223494c":"code","c0615076":"code","5837cd8b":"code","d22c1c10":"code","8c880dfb":"code","19ec1d52":"code","90dae1e3":"code","713560fb":"code","a6415397":"code","5f0d264c":"markdown","6f747eda":"markdown","9646f235":"markdown","ebccbc60":"markdown","5f0364ba":"markdown","919ac20d":"markdown","cdb6dbf9":"markdown","b51c8b3d":"markdown","036cea45":"markdown","a232fac0":"markdown","559f7bed":"markdown","e4649bb8":"markdown","857a6df0":"markdown","0b39c3d7":"markdown","eaf163eb":"markdown","6e46862c":"markdown"},"source":{"d8bf35b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nplayers_data = pd.read_csv('\/kaggle\/input\/icc-test-cricket-runs\/ICC Test Batting Figures.csv', encoding='ISO-8859-1')","8b03f01a":"import numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt","b182aec4":"players_data.head()","5c713ad3":"players_data.tail()","4d321447":"players_data.info()","5e61ae7e":"players_data = players_data.drop(columns=['Player Profile'])","6b8b9cf2":"players_data = players_data.replace('-' , np.NaN) ","7edbfb65":"players_data = players_data.dropna(axis=0, how='any')","b055e9c6":"players_data.tail()","36b82891":"players_data.info()","da461554":"players_data[\"0\"] = players_data[\"0\"].astype(int)","206eb5d4":"players_data[\"50\"] = players_data[\"50\"].astype(int)","f488985b":"players_data[\"100\"] = players_data[\"100\"].astype(int)","574e9e73":"players_data[\"Avg\"] = players_data[\"Avg\"].astype(float)","2928fc54":"players_data[\"Runs\"] = players_data[\"Runs\"].astype(int)","88765ccf":"players_data[\"NO\"] = players_data[\"NO\"].astype(int)","5563cdcd":"players_data[\"Inn\"] = players_data[\"Inn\"].astype(int)","e9a987d7":"players_data.info()","ac4bb04b":"players_data.describe()","9442295b":"players_data = players_data.reset_index(drop=True)\n","17c1cd72":"country=[]\nplayer=[]\nfor i in range(len(players_data)):\n    country.append(players_data['Player'][i].split('(')[1].replace(')','').replace('ICC\/',''))\n    player.append(players_data['Player'][i].split('(')[0])","668509f4":"players_data['Country']=country\n","63a5395d":"players_data","8993fe27":"players_data['Player']=player\n","057f57c8":"players_data","de7d9ad5":"players_data_final=players_data[['Player','Country', 'Span', 'Mat', 'Inn', 'NO', 'Runs', 'HS', 'Avg', '100', '50','0']]","313c86da":"players_data_final","b97b33e9":"players_data_final[\"Country\"].unique()","9edf3153":"players_data_final = players_data_final.replace('ENG\/ICC' , np.NaN) \nplayers_data_final = players_data_final.replace('AUS\/SA' , np.NaN) \nplayers_data_final = players_data_final.replace('INDIA\/PAK' , np.NaN) \nplayers_data_final = players_data_final.replace('AUS\/ENG' , np.NaN) \nplayers_data_final = players_data_final.replace('NZ\/WI' , np.NaN) \nplayers_data_final = players_data_final.replace('ENG\/INDIA' , np.NaN) \nplayers_data_final = players_data_final.replace('ENG\/SA' , np.NaN) \nplayers_data_final = players_data_final.replace('3\\xa0' , np.NaN) \nplayers_data_final = players_data_final.replace('ENG\/IRE' , np.NaN) \nplayers_data_final = players_data_final.replace('SA\/ZIM' , np.NaN) \n","c7571334":"players_data_final = players_data_final.dropna(axis=0, how='any')\nplayers_data_final = players_data_final.reset_index(drop=True)\n","a890db99":"players_data_final","962932d3":"plt.figure(figsize=(40,25))\nplt.subplots_adjust(left=0, bottom=0.5, right=0.9, top=0.9, wspace=0.5, hspace=0.8)\nplt.subplot(141)\nplt.title('Percentage of players  from each country',fontsize = 20)\nplayers_data_final['Country'].value_counts().plot.pie(autopct=\"%1.1f%%\") ","455c9556":"#This plot depits the percentage of players from each country playing test match","ea742f18":"ind = players_data_final.query('Country == \"INDIA\"')\naus = players_data_final.query('Country == \"AUS\"')\nsa = players_data_final.query('Country == \"SA\"')\neng = players_data_final.query('Country == \"ENG\"')\nsl = players_data_final.query('Country == \"SL\"')\nwi = players_data_final.query('Country == \"WI\"')\npak = players_data_final.query('Country == \"PAK\"')\nnz = players_data_final.query('Country == \"NZ\"')\nzim = players_data_final.query('Country == \"ZIM\"')\nbdesh = players_data_final.query('Country == \"BDESH\"')\nafg = players_data_final.query('Country == \"AFG\"')\nire = players_data_final.query('Country == \"IRE\"')","67738d53":"ind.Runs.sum()","e9cd5f26":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\ncountriesbar = ['INDIA','AUS','SA','ENG','SL','WI','PAK','NZ','ZIM','BDESH','AFG','IRE']\nrunsbar = [ind.Runs.sum(),aus.Runs.sum(),sa.Runs.sum(),eng.Runs.sum(),sl.Runs.sum(),wi.Runs.sum(),pak.Runs.sum(),nz.Runs.sum(),zim.Runs.sum(),bdesh.Runs.sum(),afg.Runs.sum(),ire.Runs.sum()]\nax.bar(countriesbar,runsbar)\nplt.show()","7d253a2b":"players_by_country =  players_data_final.groupby('Country')['Player'].count()\n\nplt.xticks(rotation='vertical')\nplt.bar(x = players_by_country.index,height=players_by_country.values)\nplt.show()","ba264468":"len(ind)","cfa56c68":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\ncountriesbarmore = ['INDIA','AUS','SA','ENG','SL','WI','PAK','NZ','ZIM','BDESH','AFG','IRE']\nrunsbarmore = [(ind.Runs.sum()\/len(ind)),(aus.Runs.sum()\/len(aus)),(sa.Runs.sum()\/len(sa)),(eng.Runs.sum()\/len(eng)),(sl.Runs.sum()\/len(sl)),(wi.Runs.sum()\/len(wi)),(pak.Runs.sum()\/len(pak)),(nz.Runs.sum()\/len(nz)),(zim.Runs.sum()\/len(zim)),(bdesh.Runs.sum()\/len(bdesh)),(afg.Runs.sum()\/len(afg)),(ire.Runs.sum()\/len(ire))]\nax.bar(countriesbarmore,runsbarmore)\nplt.show()","7a9b18ba":"scatter_plot_frame = players_data_final[players_data_final['Mat'] > 50]\nscatter_plot_frame['Avg'] = pd.to_numeric(scatter_plot_frame['Avg'])\nscatter_plot_frame.sort_values('Avg' , ascending = False , inplace = True)\nscatter_plot = scatter_plot_frame.head(10)","0138496c":"scatter_plot","577933c7":"plt.figure(figsize=(15,5))\nx_coordinates = scatter_plot['Player']\ny_coordinates = scatter_plot['Avg']\n\nplt.scatter(x_coordinates, y_coordinates)","035ccda2":"import seaborn as sns\n","5223494c":"highest = [ind.Runs.max(),aus.Runs.max(),sa.Runs.max(),eng.Runs.max(),sl.Runs.max(),wi.Runs.max(),pak.Runs.max(),nz.Runs.max(),zim.Runs.max(),bdesh.Runs.max(),afg.Runs.max(),ire.Runs.max()]","c0615076":"average = [ind.Runs.mean(),aus.Runs.mean(),sa.Runs.mean(),eng.Runs.mean(),sl.Runs.mean(),wi.Runs.mean(),pak.Runs.mean(),nz.Runs.mean(),zim.Runs.mean(),bdesh.Runs.mean(),afg.Runs.mean(),ire.Runs.mean()]","5837cd8b":"lowest = [ind.Runs.min(),aus.Runs.min(),sa.Runs.min(),eng.Runs.min(),sl.Runs.min(),wi.Runs.min(),pak.Runs.min(),nz.Runs.min(),zim.Runs.min(),bdesh.Runs.min(),afg.Runs.min(),ire.Runs.min()]","d22c1c10":"scores = pd.DataFrame(list(zip(countriesbarmore, highest, average, lowest)), columns =['Countries', 'highest', 'average','lowest'])","8c880dfb":"scores","19ec1d52":"fig, axs = plt.subplots(ncols=3)\nfig.set_size_inches(25, 5)\nsns.barplot(x='Countries', y='highest', data=scores, ax=axs[0])\nsns.barplot(x='Countries', y='average', data=scores, ax=axs[1])\nsns.barplot(x='Countries', y='lowest', data=scores, ax=axs[2])\nplt.show() ","90dae1e3":"plt.plot( 'Countries', 'highest', data=scores, marker='o', markerfacecolor='blue', markersize=12, color='skyblue', linewidth=4)\nplt.plot( 'Countries', 'average', data=scores, marker='', color='red', linewidth=2, linestyle='dashed',)\nplt.plot( 'Countries', 'lowest', data=scores, marker='', color='green', linewidth=2,  label=\"lowest\")\nplt.legend()","713560fb":"plt.figure(figsize=(10,8))\nsns.jointplot(x='Inn',y='Runs',data=players_data_final,color='red',kind='reg')\nplt.show()","a6415397":"sns.scatterplot(players_data_final['Inn'], players_data_final['100'])\n","5f0d264c":"Resetting the index","6f747eda":"Dropping the rows with null values","9646f235":"These graphs compare the highest, average and the lowest runs by a player from each country","ebccbc60":"This compares the number of centuries per innings played","5f0364ba":"Adding the country data to the dataframe","919ac20d":"## **Krish Sukhani**\n## **TE IT**\n## **Batch D**\n## **59**","cdb6dbf9":"This compare number of runs vs the number innings played","b51c8b3d":"Removing the column player profile as there is no need\n","036cea45":"This graph depicts highest lowest and average on one graph","a232fac0":"Top 5 data from the dataset\n","559f7bed":"This one on the other hand compare the average scores of players from countries\n","e4649bb8":"This Graph depicts the total number of players from each country","857a6df0":"This Bar graph depits the total number of runs made by players of a particular country","0b39c3d7":"Replacing - values with NaN","eaf163eb":"This scatter plot gives information about the top 10 players on the basis of Average score","6e46862c":"Changing the datatypes"}}