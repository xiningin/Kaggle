{"cell_type":{"7a90efba":"code","0b9c90c7":"code","a2a58fcf":"code","fe3df5df":"code","2a320110":"code","55664b18":"code","abc739a8":"code","9f460fba":"code","a4c18598":"code","7dcd1f8b":"code","b6c147de":"code","f8e1566f":"code","d75c56f1":"code","bc438a46":"code","cea6a1f1":"code","517588fd":"code","5d4880c0":"code","80407ef9":"code","58aae574":"code","b176d3a9":"code","1e46583f":"code","a00df22e":"code","92fc6128":"code","ef0db8e5":"code","3b3acd06":"code","d60bd58a":"code","378ce706":"code","4bd8198a":"code","a63b84a8":"code","475d11c7":"code","ee9404fd":"code","cb9e529e":"code","1381f936":"code","fda81842":"code","deb2fbd0":"code","d19e38ff":"code","a1787e2d":"code","75c4cb62":"code","cb4adbea":"code","689417b8":"code","6c7a9352":"code","a4a9a21f":"code","b5cfa25a":"code","cde10ad6":"code","a053afac":"code","e2deda09":"code","47d470e6":"code","ba9efe9e":"code","049db804":"code","b140b584":"code","04174739":"code","84060a11":"markdown","6f3d467d":"markdown","9eef7b49":"markdown","ad03f352":"markdown","75bfb9dc":"markdown","b39c8314":"markdown","d62a4a19":"markdown","83fb18be":"markdown","b99dd6bd":"markdown","5c44e207":"markdown","60988b1f":"markdown","20c44849":"markdown","1dff9645":"markdown","34676b5f":"markdown","f4297328":"markdown","ff3b8b1c":"markdown","01f24fa3":"markdown","76ee41e2":"markdown","58033649":"markdown","82a9b3ad":"markdown","77b879a7":"markdown","91e7c3f4":"markdown","cfb5b550":"markdown","589ae5ce":"markdown","b3072b99":"markdown","078cdac2":"markdown","ca60ccfb":"markdown","df0d72a5":"markdown","9a455b0e":"markdown","6bf79e24":"markdown","52bd1840":"markdown","b1efe75a":"markdown","134ffe09":"markdown","17111c4b":"markdown","91ba4946":"markdown","e2b2691c":"markdown","d33e8ea5":"markdown","9176c61a":"markdown","b155a303":"markdown","5e7d9eac":"markdown","4172543a":"markdown","ffd79652":"markdown","4a3740f2":"markdown","42fd6393":"markdown","17550089":"markdown","9baee41d":"markdown","8336eeee":"markdown","3dfe06ac":"markdown","1b2a197d":"markdown","87876d8c":"markdown","96a83a52":"markdown","f60f8205":"markdown"},"source":{"7a90efba":"import warnings\nwarnings.filterwarnings('ignore')","0b9c90c7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n\npd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\npd.options.display.float_format = \"{:.2f}\".format","a2a58fcf":"df = pd.read_csv(\"\/kaggle\/input\/unsupervised-learning-on-country-data\/Country-data.csv\")\ndf.head()","fe3df5df":"# Changing percentage coulmns to actual values\ndf['exports']=df['gdpp']*df['exports']*100\ndf['health']=(df['gdpp']*df['health'])*100\ndf['imports']=(df['gdpp']*df['imports'])*100","2a320110":"df.head()","55664b18":"df.info()","abc739a8":"df.describe()","9f460fba":"print(\"shape of dataset is\" ,df.shape)","a4c18598":"df.dtypes","7dcd1f8b":"df.columns","b6c147de":"print('Null values: \\n{}'.format(df.isnull().sum()))\nprint('\\nNaN values: \\n{}'.format(df.isna().sum()))","f8e1566f":"plt.figure(figsize = (25,15))\nsns.pairplot(df, diag_kind='kde')\nplt.show()","d75c56f1":"plt.figure(figsize = (25,15))\nax = sns.heatmap(df.corr(),square = True,annot=True, cmap=\"Blues\")\nbottom, top = ax.get_ylim()\nax.set_ylim(bottom + 0.5, top - 0.5);","bc438a46":"fig, axs = plt.subplots(3,3,figsize = (30,30))\n\n# Child Mortality Rate : Death of children under 5 years of age per 1000 live births\nChild_mort = df[['country','child_mort']].sort_values('child_mort', ascending = False).head(5)\nax = sns.barplot(x='country', y='child_mort', data= Child_mort, ax = axs[0,0])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Child Mortality Rate')\n\n# Fertility Rate: The number of children that would be born to each woman if the current age-fertility rates remain the same\nTotal_fer = df[['country','total_fer']].sort_values('total_fer', ascending = False).head(5)\nax = sns.barplot(x='country', y='total_fer', data= Total_fer, ax = axs[0,1])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Fertility Rate')\n\n# Life Expectancy: The average number of years a new born child would live if the current mortality patterns are to remain same\nLife_expec = df[['country','life_expec']].sort_values('life_expec', ascending = True).head(5)\nax = sns.barplot(x='country', y='life_expec', data= Life_expec, ax = axs[0,2])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Life Expectancy')\n\n# Health :Total health spending.\nHealth = df[['country','health']].sort_values('health', ascending = True).head(5)\nax = sns.barplot(x='country', y='health', data= Health, ax = axs[1,0])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Health')\n\n# The GDP per capita : Calculated as the Total GDP divided by the total population.\nGDPP = df[['country','gdpp']].sort_values('gdpp', ascending = True).head(5)\nax = sns.barplot(x='country', y='gdpp', data= GDPP, ax = axs[1,1])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'GDP per capita')\n\n# Per capita Income : Net income per person\nIncome = df[['country','income']].sort_values('income', ascending = True).head(5)\nax = sns.barplot(x='country', y='income', data= Income, ax = axs[1,2])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Per capita Income')\n\n\n# Inflation: The measurement of the annual growth rate of the Total GDP\nInf = df[['country','inflation']].sort_values('inflation', ascending = False).head(5)\nax = sns.barplot(x='country', y='inflation', data= Inf, ax = axs[2,0])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Inflation Rate')\n\n\n# Exports: Exports of goods and services.\nExports = df[['country','exports']].sort_values('exports', ascending = True).head(5)\nax = sns.barplot(x='country', y='exports', data= Exports, ax = axs[2,1])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Exports')\n\n\n# Imports: Imports of goods and services.\nImports = df[['country','imports']].sort_values('imports', ascending = True).head(5)\nax = sns.barplot(x='country', y='imports', data= Imports, ax = axs[2,2])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nax.set(xlabel = '', title= 'Imports')\n\nfor ax in fig.axes:\n    plt.sca(ax)\n    plt.xticks(rotation = 90)\n    \nplt.tight_layout()    \nplt.show()","cea6a1f1":"plt.figure(figsize = (25,12))\nfeatures = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(df[i[1]])","517588fd":"plt.figure(figsize = (25,25))\nfeatures = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    plt.subplot(5,2,i[0]+1)\n    sns.boxplot(df[i[1]])","5d4880c0":"# Capping of outliers\nfeatures = ['exports', 'health', 'imports', 'income','inflation', 'total_fer', 'gdpp']\nfor i in features:\n    q1 = df[i].quantile(0.01)\n    q4 = df[i].quantile(0.99)\n    df[i][df[i]>=q4]=q4","80407ef9":"plt.figure(figsize = (25,25))\nfeatures = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    plt.subplot(5,2,i[0]+1)\n    sns.boxplot(df[i[1]])","58aae574":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","b176d3a9":"hopkins(df.drop('country' , axis=1))","1e46583f":"df_scale = df[['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']]\n\n# instantiating the scaler\nscaler = StandardScaler()\n\n# fit and transform\ndf_scale = scaler.fit_transform(df_scale)\ndf_scale.shape","a00df22e":"df_scale = pd.DataFrame(df_scale)\ndf_scale.columns = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\ndf_scale.head()","92fc6128":"# elbow-curve\/SSD\nssd = []\nn_cluster = list(range(1,10))\nfor num_clusters in n_cluster:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(df_scale)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\nplt.plot(n_cluster,ssd,marker='o',markersize=7)\nplt.vlines(x=3, ymax=ssd[-1], ymin=ssd[0], colors=\"g\", linestyles=\"-\")\nplt.hlines(y=ssd[2], xmax=9, xmin=1, colors=\"r\", linestyles=\"-\")\nplt.xlabel('Number of clusters',fontsize=15)\nplt.ylabel('Sum of Squared distance',fontsize=15)\nplt.title(\"Elbow Curve\")\nplt.show()","ef0db8e5":"ss = []\nfor k in range(2,11):\n    kmeans = KMeans(n_clusters = k).fit(df_scale)\n    ss.append([k, silhouette_score(df_scale, kmeans.labels_)])\n\nplt.plot(pd.DataFrame(ss)[0], pd.DataFrame(ss)[1],marker='o',markersize=7)\nplt.xlabel('Number of Clusters',fontsize=15)\nplt.ylabel('Silhouette Width',fontsize=15)\nplt.title(\"Silhouette Score\")\nplt.show()","3b3acd06":"kmeans = KMeans(n_clusters=3, max_iter=50,random_state = 14)\nkmeans.fit(df_scale)","d60bd58a":"kmeans.labels_","378ce706":"# Entering the Cluster in the column 'cluster_K' for further analysis\n\ncluster_K = pd.DataFrame(kmeans.labels_, columns = ['cluster_K'])","4bd8198a":"# Saving the new dataframe for further analysis\n\ndf_cluster = df.copy()","a63b84a8":"# Combing the cluster with cluster labels extracted from K-means\n\ndf_cluster = pd.concat([df_cluster, cluster_K ], axis =1)","475d11c7":"df_cluster.head()","ee9404fd":"# To check How many datapoints we have in each cluster\ndf_cluster.cluster_K.value_counts().reset_index()","cb9e529e":"# Scatter-plot:\n\nf, axes = plt.subplots(1, 3, figsize=(20,5))\nsns.scatterplot(x='income', y='child_mort', hue='cluster_K', data=df_cluster, palette='Set1',ax=axes[0]);\nsns.scatterplot(x='gdpp', y='income', hue='cluster_K', data=df_cluster, palette='Set1',ax=axes[1]);\n\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_K', data=df_cluster, palette='Set1',ax=axes[2]);","1381f936":"# Box-plot:\n\nf, axes = plt.subplots(1, 3, figsize=(25,7))\nsns.boxplot(x='cluster_K',y='gdpp',data=df_cluster,ax=axes[0])\naxes[0].set_title('GDP per capita',fontsize=15)\nsns.boxplot(x='cluster_K',y='income',data=df_cluster,ax=axes[1])\naxes[1].set_title('Income per person',fontsize=15)\nsns.boxplot(x='cluster_K',y='child_mort',data=df_cluster,ax=axes[2])\naxes[2].set_title('Child Mortality rate',fontsize=15)\nplt.show()","fda81842":"df_clusterK = df_cluster[['child_mort','income','gdpp','cluster_K']]\ndf_clusterK = df_clusterK.groupby('cluster_K').mean()\ndf_clusterK","deb2fbd0":"df_clusterK.plot(kind='bar',logy=True);","d19e38ff":"df_cluster[df_cluster['cluster_K'] ==2]['country'].reset_index(drop=True)","a1787e2d":"top5_Kmeans = df_cluster[df_cluster['cluster_K'] ==2].sort_values(by = ['income', 'gdpp', 'child_mort'], ascending = [True, True, False]).head(5)\ntop5_Kmeans.reset_index(drop=True)","75c4cb62":"# Taking the already scaled dataset\n\ndf_scale.head()","cb4adbea":"df_cluster.head()","689417b8":"# single linkage\nmergings = linkage(df_scale, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.title(\"Single Linkage\")\nplt.show()","6c7a9352":"# complete linkage\nmergings = linkage(df_scale, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.title(\"Complete Linkage\")\nplt.show()","a4a9a21f":"# 3 clusters\ncluster_H = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_H","b5cfa25a":"# assign cluster labels\ndf_cluster['cluster_H'] = cluster_H\ndf_cluster.head()","cde10ad6":"df_cluster.cluster_H.value_counts().reset_index()","a053afac":"# Scatter-Plot : \n\nf, axes = plt.subplots(1, 3, figsize=(20,5))\nsns.scatterplot(x='income', y='child_mort', hue='cluster_H', data=df_cluster, palette='Set1',ax=axes[0]);\nsns.scatterplot(x='gdpp', y='income', hue='cluster_H', data=df_cluster, palette='Set1',ax=axes[1]);\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_H', data=df_cluster, palette='Set1',ax=axes[2]);","e2deda09":"# Boxplot :\nf, axes = plt.subplots(1, 3, figsize=(20,5))\nsns.boxplot(x='cluster_H', y='child_mort', data=df_cluster,ax=axes[0]);\naxes[0].set_title('Child Mortality Rate',fontsize=15)\nsns.boxplot(x='cluster_H', y='gdpp', data=df_cluster,ax=axes[1]);\naxes[1].set_title('GDP per capita',fontsize=15)\nsns.boxplot(x='cluster_H', y='income', data=df_cluster,ax=axes[2]);\naxes[2].set_title('Income per person',fontsize=15)\nplt.show()","47d470e6":"df_clusterH = df_cluster[['child_mort','income','gdpp','cluster_H']]\ndf_clusterH = df_clusterH.groupby('cluster_H').mean()\ndf_clusterH","ba9efe9e":"df_clusterH.plot(kind = 'bar',logy=True);","049db804":"df_cluster[df_cluster['cluster_H'] ==0]['country'].reset_index(drop=True)","b140b584":"top5_Hier = df_cluster[df_cluster['cluster_H'] ==0].sort_values(by = ['income', 'gdpp', 'child_mort'], ascending = [True, True, False]).head(5)\ntop5_Hier.reset_index(drop=True)","04174739":"for countries in top5_Kmeans.country:\n    print(countries)","84060a11":"### Extracting top 5 countries which have low income, gdpp and high child mortality","6f3d467d":"## Visualising the varibles through univariate analysis via distplot","9eef7b49":"After the outlier treatment, we now have values that look like outliers in the above plot, this is an artifact of the earlier transformation. These values are within the \"normal\" expected range of values for the data.\n\nAs per the business requirement, not capping the outliers further.","ad03f352":"# Outlier Treatment","75bfb9dc":"### Inferences\n - life_expec is right-skewed whereas all the rest features are left-skewed.\n - total_fer and gdpp are bimodal whereas all the rest features are unimodal.","b39c8314":"##### Based on Elbow curve and Silhouette Analysis Curve, we decide to make a trade-off and choose the optimum value of K as 3","d62a4a19":"A Higher hopkins score indicates that clustering can be peformed on the dataset.  ","83fb18be":"# Clustering","b99dd6bd":"# Hopkins Check","5c44e207":"### Checking for null values is the data","60988b1f":"As per the data dictionary, below mentioned three columns are given as percentage of GDPP\n\nConverting them to actual values for further analysis","20c44849":"### Inferences\n\n - Linear relation is found between gdpp-income,imports-exports,total_fer-child_mort\n - Rectangular hyperbola curve is generated by gdpp-child_mort.\n - If gdpp is HIGH:\n   - child mortality is LOW\n   - income is HIGH\n   - inflation is LOW\n   - life expectancy is HIGH\n   - total fertility is LOW\n   - health, imports and exports are MEDIUM","1dff9645":"Analysing the clusters by comparing how 'gdpp', 'child_mort' and 'income' vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries.","34676b5f":"## Visualising numerical variables through pairplot ","f4297328":"## Cluster Profiling\n\nCluster profiling is based on major three factors:\n 1. Child Mortality\n 2. Income\n 3. GDPP\n\nCreating a new dataframe for these variable along with the cluster ID","ff3b8b1c":"### Silhouette Score for determing K","01f24fa3":"# Conclusion","76ee41e2":" ###### Above results are based on K-means clustering. We'll be further performing heirachical clustering on our dataframe to compare the results and conclude our analysis","58033649":"### Extracting the top 5 countries which have low income, gdpp and high child mortality","82a9b3ad":"## K-Means Clustering","77b879a7":"#### Inferences:\n - The dendogram produced by single linkage is not well structured\n - The dendogram produced by complete linkage is having proper tree-like structure\n \n### Based on above complete linkage, Creating the hierarchichal clustering model by taking n = 3","91e7c3f4":"### Checking the sturcture of data","cfb5b550":"### Visualising the clusters ","589ae5ce":"# Data Visualisation","b3072b99":"## Running K-means with K = 3","078cdac2":"## Visualising the correlation between the variables via heatmap","ca60ccfb":"#### I Choose K-Means Clustering Algorithm over Hierarchical Clustering Algorithm:\n\n - The cluster_K value counts were properly divided and visualizing each cluster was possible.\n\n - In both the methods, 3 clusters were formed but K-means gave significant plots.\n\n - After grouping all the countries into 3 groups by using some socio-economic and health factors, we can determine the overall development of the countries.\n\n - Here, the countries are categorised into list of developed countries, developing countries and under-developed countries.\n\n - In Developed countries, we can see the GDP per capita and income is high where as Death of children under 5 years of age per 1000 live births i.e. child-mort is very low, which is expected.\n\n - In Developing countries and Under-developed countries, the GDP per capita and income are low and child-mort is high. Specially, for under-developed countries, the death rate of children is very high.","df0d72a5":"## Visualising the profiled variables of the dataset via barplot ","9a455b0e":"### Inferences\n - The above plots shows the five countries which are in need of aid individually for all the factors taken in consideration\n - These plots will help us in further analysis when we'll cluster the countries and find top 5","6bf79e24":"# Recommendations:\n\n## The top countries that are in need of aid are presented below:","52bd1840":"#### Inferences\n - Since the size of the cluster varies significantly, we can't categorize the countries based on the level of developement","b1efe75a":"### The primary focus for the funding should be on countires of this segment.\n\n+ The major approach should be to provide better health facilities as this would increase the life expectancy and decrese the child mortality.\n \n+ Other focus should be on increasing the exports as that would give an increase in income and thus, GDPP will increase.\n\n+ The difference between the average of socio-economic factors of developed countries as compared to under-developed countries is quite huge.This funding would definitely help in improved conditions for above mentioned countries even though it might not show a significant impact","134ffe09":"### Outlier Analysis\n\n - There is atleast one outlier in all the features\n - In case of gdpp and health, there are too many outliers.\n - As per the data given, all the outliers couldn't be capped as we don't want the countries that needs aid to be treated with a single value.\n - As per business need, The Features are capped as mentioned below:\n1. Soft-Range capping of upper end outiers is done for mentioned features  : 'exports', 'health', 'imports', 'income','inflation','total_fer', 'gdpp'.\n2. There are lower end outliers for feature 'life_expec' but capping is not done as those countries would be in need of aid.\n3. There are upper end outliers for feature 'child_mort' but capping is not done as those countries would be in need of aid.\n   ","17111c4b":"#### Inferences:\n - Based on above plot, we know that countries with cluster ID 2 are Under-Developed and requires aid\n - Our main focus would be on the countries extracte below and top 5 countries in need of aid are reported to the company","91ba4946":"## Visualising the top 5 countries for each variable via Barplot","e2b2691c":"### Elbow methord for determing K","d33e8ea5":"## Scaling\n\nStandard-Scaler scales the features around the centre with mean 0 and with a standard deviation of 1.","9176c61a":"### Performing Single Linkage","b155a303":"### Visualising the clusters ","5e7d9eac":"#### Inferences\n - Countries with low gdpp,income and high child mortality are Under-developed countries (cluster_K = 2)\n - Countries with high gdpp,income and low child mortality are Developed countries (cluster_K = 1)\n - Countries with low gdpp,income and low child mortality are Developing countries (cluster_K = 0)\n","4172543a":"# Improrting Important Libraries","ffd79652":"Dataframe \"df_scale\" is ready for clustering","4a3740f2":"# Reading and understanding the Data","42fd6393":"## Cluster Profiling\n\nCluster profiling is based on major three factors:\n 1. Child Mortality\n 2. Income\n 3. GDPP\n\nCreating a new dataframe for these variable along with the cluster ID","17550089":"#### Inferences:\n - Based on above plot, we know that countries with cluster ID 0 are Under-Developed and requires aid\n - Our main focus would be on the countries extracte below and top 5 countries in need of aid are reported to the company","9baee41d":"### Performing Complete Linkage","8336eeee":"## Heirarchichal Clustering","3dfe06ac":"\nThe process to evaluate the data and check if the data is feasible for clustering or not, is known as clustering tendency.\n\nTo check clustering tendency, we calculate the hopkins statistics. It determines whether the data points differs significantly from uniformly distributed data in multidimensional space.","1b2a197d":"There are no Null or NaN values in the dataset","87876d8c":"Analysing the clusters by comparing how 'gdpp', 'child_mort' and 'income' vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries.","96a83a52":"### Inferences\n - exports is highly correlated with imports.\n - health, exports, income,imports are highly correlated with gdpp.\n - child_mort is having high negative correlation with life_expec.\n - total_fer is highly positively correlated with child_mort and negatively correlated with life_expec\n","f60f8205":"### Visualising the profiled variables of the dataset via barplot "}}