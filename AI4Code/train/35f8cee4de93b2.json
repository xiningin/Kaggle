{"cell_type":{"68c7d2aa":"code","4eb140f2":"code","3578b71c":"code","fa0151ef":"code","716ec587":"code","38a34ea8":"code","c7dfdb88":"code","86759bc3":"code","35a278ec":"code","d45a9cdb":"code","329d1254":"code","fde18beb":"code","b98f9460":"code","104a20cb":"code","1022b6f8":"code","daeaee24":"code","0ab99fc3":"code","a9b3cd23":"code","91a3f42d":"code","95a3afae":"code","8a4a2dde":"code","31ab04af":"code","a87aef33":"code","361bc976":"code","b34ff5e2":"code","d43992ac":"code","265f00db":"code","8620de96":"code","0f8c4ef8":"code","1357e031":"code","41973d02":"code","2400b3e9":"code","b04bb1c0":"code","fda3c5bd":"code","2cd2b861":"code","146c801e":"code","c4668a50":"code","adea1e9e":"code","e6bed455":"code","3d9ee8fb":"code","33c53c27":"code","047d3732":"code","8447d6fd":"code","7d6f5724":"code","74973d40":"code","a5a4e943":"code","88cb73ea":"code","dcd0ec2a":"code","2c9d92e7":"markdown","f2ffdad2":"markdown","4c4ead4c":"markdown","8d6faf61":"markdown","2a7ffa53":"markdown","c436190b":"markdown","98f5466e":"markdown","311ca2ae":"markdown","78b7e94d":"markdown","06951a3a":"markdown","ef0d2824":"markdown","2832d809":"markdown","974fc9c1":"markdown","b3c06ba4":"markdown","ce16ccef":"markdown","3b03c106":"markdown","4f9f8db9":"markdown","008fa160":"markdown","5aa49e62":"markdown","dfe92dc4":"markdown","c2088970":"markdown","a7f54605":"markdown","80b8a17d":"markdown","5cc9b6cb":"markdown","fe2bcd31":"markdown","81ef319f":"markdown","9d90d7df":"markdown","0feb733d":"markdown","d43dce35":"markdown","94f29339":"markdown","6d649c47":"markdown"},"source":{"68c7d2aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score, roc_curve\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","4eb140f2":"# read  data\ndf = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","3578b71c":"df.head()","fa0151ef":"# describe basic statistics of data\ndf.describe()","716ec587":"# information about data frame\ndf.info()","38a34ea8":"# missing value\ndf.isnull().sum()","c7dfdb88":"for i in list(df.columns):\n    print(\"{} -- {}\".format(i, df[i].value_counts().shape[0]))","86759bc3":"categorical_list = [\"sex\", \"cp\", \"fbs\", \"restecg\", \"exng\", \"slp\", \"caa\", \"thall\", \"output\"]","35a278ec":"df_categoric = df.loc[:, categorical_list]\nfor i in categorical_list:\n    plt.figure()\n    sns.countplot(x = i, data = df_categoric, hue = \"output\")\n    plt.title(i)","d45a9cdb":"numeric_list = [\"age\", \"trtbps\", \"chol\", \"thalachh\", \"oldpeak\", \"output\"]","329d1254":"df_numeric = df.loc[:, numeric_list]\nsns.pairplot(df_numeric, hue = \"output\", diag_kind = \"kde\")\nplt.show()","fde18beb":"scaler = StandardScaler()","b98f9460":"scaled_array = scaler.fit_transform(df[numeric_list[:-1]])","104a20cb":"scaled_array","1022b6f8":"# pd.DataFrame(scaled_array).describe()","daeaee24":"df_dummy = pd.DataFrame(scaled_array, columns = numeric_list[:-1])\ndf_dummy.head()","0ab99fc3":"df_dummy = pd.concat([df_dummy, df.loc[:, \"output\"]], axis = 1)\ndf_dummy","a9b3cd23":"data_melted = pd.melt(df_dummy, id_vars = \"output\", var_name = \"features\", value_name = \"value\")\ndata_melted.head(10)","91a3f42d":"# box plot\nplt.figure()\nsns.boxplot(x = \"features\", y = \"value\", hue = \"output\", data = data_melted)\nplt.show()","95a3afae":"# swarm plot\nplt.figure()\nsns.swarmplot(x = \"features\", y = \"value\", hue = \"output\", data = data_melted)\nplt.show()","8a4a2dde":"sns.catplot(x = \"exng\", y = \"age\", hue = \"output\", col = \"sex\", kind = \"swarm\", data = df)\nplt.show()","31ab04af":"sns.catplot(x = \"slp\", y = \"age\", hue = \"output\", col = \"sex\", kind = \"swarm\", data = df)\nplt.show()","a87aef33":"plt.figure(figsize = (14, 10))\nsns.heatmap(df.corr(), annot = True, fmt = \".1f\", linewidths = .7)\nplt.show()","361bc976":"numeric_list = [\"age\", \"trtbps\", \"chol\", \"thalachh\", \"oldpeak\"]\ndf_numeric = df.loc[:, numeric_list]\ndf_numeric.head()","b34ff5e2":"df.describe()","d43992ac":"# outlier detection\nfor i in numeric_list:\n    # IQR\n    Q1 = np.percentile(df.loc[:, i], 25)\n    Q3 = np.percentile(df.loc[:, i], 75)\n    IQR = Q3 - Q1\n    print(\"Old shape: \", df.loc[:, i].shape)\n    \n    # upper bound\n    upper = np.where(df.loc[:, i] >= (Q3 + 1.5 * IQR))\n    \n    # lower bound\n    lower = np.where(df.loc[:, i] <= (Q1 - 1.5 * IQR))\n    \n    print(\"{} -- {}\".format(upper, lower))\n    \n    try:\n        df.drop(upper[0], inplace = True)\n    except: print(\"KeyError: {} not found in axis\".format(upper[0]))\n    \n    try:\n        df.drop(lower[0], inplace = True)\n    except: print(\"KeyError: {} not found in axis\".format(lower[0]))\n    \n    print(\"New shape: \", df.shape)","265f00db":"df1 = df.copy()","8620de96":"df1 = pd.get_dummies(df1, columns = categorical_list[:-1], drop_first = True)\ndf1.head()","0f8c4ef8":"#\nX = df1.drop([\"output\"], axis = 1)\ny = df1[[\"output\"]]","1357e031":"X.head()","41973d02":"y.head()","2400b3e9":"scaler = StandardScaler()\nscaler","b04bb1c0":"X[numeric_list[:-1]] = scaler.fit_transform(X[numeric_list[:-1]])\nX.head()","fda3c5bd":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\nprint(\"X_train: {}\".format(X_train.shape))\nprint(\"X_test: {}\".format(X_test.shape))\nprint(\"y_train: {}\".format(y_train.shape))\nprint(\"y_test: {}\".format(y_test.shape))","2cd2b861":"logreg = LogisticRegression()\nlogreg","146c801e":"# fitting = training\nlogreg.fit(X_train, y_train)","c4668a50":"# calculate probabilities\ny_pred_prob = logreg.predict_proba(X_test)\ny_pred_prob","adea1e9e":"y_pred = np.argmax(y_pred_prob, axis = 1)\ny_pred","e6bed455":"print(\"Test Accuracy: {}\".format(accuracy_score(y_pred, y_test)))","3d9ee8fb":"# ROC Curve\nfpr, tpr, thresholds = roc_curve(y_test, y_pred_prob[:,1])","33c53c27":"# plot curve\nplt.plot([0,1], [0,1], \"k--\")\nplt.plot(fpr, tpr, label = \"LogisticRegression\")\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title(\"Logistic Regression ROC Curve\")\nplt.show()","047d3732":"lr = LogisticRegression()\nlr","8447d6fd":"penalty = [\"l1\", \"l2\", \"elasticnet\"]\n\nparameters = {\"penalty\":penalty}","7d6f5724":"lr_searcher = GridSearchCV(lr, parameters)","74973d40":"lr_searcher.fit(X_train, y_train)","a5a4e943":"print(\"Best parameters: \", lr_searcher.best_params_)","88cb73ea":"y_pred = lr_searcher.predict(X_test)","dcd0ec2a":"print(\"Test Accuracy: {}\".format(accuracy_score(y_pred, y_test)))","2c9d92e7":"* Are there any similarities between output and features?\n    * sex, cp, thalachh, exng, oldpeak, sp, caa and thall show some correlation to our output.","f2ffdad2":"## Introduction\n* A heart attack, also called a myocardial infarction, happens when a part of the heart muscle doesn't get enough blood.\n* The more time that passes without treatment to restore blood flow, the greater the damage to the heart muscle.\n* Coronary artery disease (CAD) is the main cause of heart attack.\n\n![HA-signs-symptoms-social2.png](attachment:e3a92982-eec8-4440-92e6-ed1cf3c69b0e.png)","4c4ead4c":"<a id=\"13\"><\/a>\n## Outlier Detection\n* Outliers can disrupt ML process.\n*![Box-plot-with-outliers-detection-range.png](attachment:e619a4ab-7b9b-4a87-88dd-b1ea4c6e267d.png)","8d6faf61":"<a id=\"1\"><\/a>\n## Python Libraries\n* In this section we import used libraries during this kernel","2a7ffa53":"## What will you learn from this project?\n* EDA\n* Missing Value Analysis\n* Categoric and Numeric Features\n* Standardization\n* Box - Swarm - Cat - Correlation Plot Analysis\n* Outlier Detection\n* Modelling and Tuning Machine Learning Model","c436190b":"### Logistic Regression","98f5466e":"<a id=\"7\"><\/a>\n## Numeric Feature Analysis\n* Bivariate data analysis with scatter plot","311ca2ae":"<a id=\"10\"><\/a>\n## Swarm Plot Analysis\n* If it is desired to examine one by one on a sample basis, swarmplot is an excellent option for this job.","78b7e94d":"<a id=\"14\"><\/a>\n## Modelling","06951a3a":"<a id=\"2\"><\/a>\n## Data Content\n* **Age:** Age of the patient\n* **Sex:** Sex of the patient\n* **exang:** exercise induced angina (1 = yes; 0 = no)\n* **ca:** number of major vessels (0-3)\n* **cp:** Chest Pain type chest pain type\n    * Value 1: typical angina\n    * Value 2: atypical angina\n    * Value 3: non-anginal pain\n    * Value 4: asymptomatic\n* **trtbps:** resting blood pressure (in mm Hg)\n* **chol:** cholestoral in mg\/dl fetched via BMI sensor\n* **fbs:** (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* **rest_ecg:** resting electrocardiographic results\n    * Value 0: normal\n    * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* **thalachh:** maximum heart rate achieved\n* **target:** 0= less chance of heart attack 1= more chance of heart attack","ef0d2824":"<a id=\"9\"><\/a>\n## Box Plot Analysis","2832d809":"<a id=\"3\"><\/a>\n## Read and Analyse Data\n* In this section, we read heart.csv","974fc9c1":"### Encoding Categorical Columns\n* ![download.png](attachment:e3c68000-77ce-4799-9cad-8719d96a153c.png)","b3c06ba4":"<a id=\"6\"><\/a>\n## Categorical Feature Analysis","ce16ccef":"<a id=\"11\"><\/a>\n## Cat Plot Analysis\n* If you want to examine the features from a wider perspective, catplot should be used. Thanks to catplot, we can examine and analyze the features in our data in different combinations.","3b03c106":"* Categorical Features -> sex, cp, fbs, restecg, exng, slp, caa, thall\n* Numerical Features -> age, trtbps, chol, thalachh, oldpeak","4f9f8db9":"#### ROC Curve\n![roc-curve-original.png](attachment:be78bec3-28b7-44cd-9816-9c55f39c5df6.png)","008fa160":"<a id=\"12\"><\/a>\n## Correlation Analysis\n* If it is desired to look at negative or positive similarity rates between features, heatmap should be used. Thanks to this graph, many situations related to the dataset can be observed.","5aa49e62":"### Scaling","dfe92dc4":"### Train\/Test Split","c2088970":"<a id=\"4\"><\/a>\n## Missing Value Analysis","a7f54605":"* When we visualize the features with boxplot according to the output, we can comment on the median values. We also observe the density of outlier values, and as you can see here, there are plenty of outlier values. We must delete them.","80b8a17d":"* Thanks to this graph, there is some superficial information that we see.\n* First of all, there seems to be a negative correlation between age and thalachh, so it may be better not to use one of them.\n* Secondly, there is a skewness in the thalachh and oldpeak properties, as can be seen when looking at the distributions.","5cc9b6cb":"# Heart Attack Analysis & Prediction","fe2bcd31":"<a id=\"15\"><\/a>\n## Conclusion\n* The best performance found in logistic regression with fine tuning was found to be approximately 88%.","81ef319f":"<a id=\"5\"><\/a>\n## Unique Value Analysis","9d90d7df":"<a id=\"8\"><\/a>\n## Standardization\n* Standardization not only works for us in data visualizations, but also enables the machine learning model to learn the data better.","0feb733d":"## Analysis Content\n1. [Python Libraries](#1) \n2. [Data Content](#2)\n3. [Read and Analyse Data](#3)\n4. [Missing Value Analysis](#4)\n5. [Unique Value Analysis](#5)\n6. [Categorical Feature Analysis](#6)\n7. [Numeric Feature Analysis](#7)\n8. [Standardization](#8)\n9. [Box Plot Analysis](#9)\n10. [Swarm Plot Analysis](#10)\n11. [Cat Plot Analysis](#11)\n12. [Correlation Analysis](#12)\n13. [Outlier Detection](#13)\n14. [Modelling](#14)\n    1. Encoding Categorical Columns\n    2. Scaling\n    3. Train\/Test Split\n    4. Logistic Regression\n    5. Logistic Regression Hyperparameter Tuning\n15. [Conclusion](#15)","d43dce35":"* Considering the graphs, serious information can be reached in some values of the properties. thall - 2 etc.","94f29339":"### Logistic Regression Hyperparameter Tuning","6d649c47":"* We do not have any missing values in our data."}}