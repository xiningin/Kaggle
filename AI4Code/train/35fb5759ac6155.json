{"cell_type":{"782e5406":"code","0de701a8":"code","424b047f":"code","67f88a1a":"code","eb1080d3":"code","e3585a35":"code","56e5bf80":"code","6337f9be":"code","1a46f5e8":"code","f13c0c1d":"markdown","67ffeecf":"markdown","1f0230c5":"markdown"},"source":{"782e5406":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0de701a8":"tickers = [\"intc.us.txt\", \"ko.us.txt\", \"wmt.us.txt\", \"pfe.us.txt\", \"f.us.txt\"]\nurl_stem = \"\/kaggle\/input\/price-volume-data-for-all-us-stocks-etfs\/Stocks\/\"\n\nticker_collection = {} \n\nfor ticker in tickers:\n    ticker_collection[ticker[:-7]] = pd.read_csv(url_stem+ticker)\n    print(\"Added DF for \" + ticker[:-7])\n    ticker_collection[ticker[:-7]] = ticker_collection[ticker[:-7]][['Date','Close']]","424b047f":"earliest_entry = datetime.datetime(1111, 1, 1) # will store most recent beginning date to sync up data\n\nfor ticker in tickers:\n    earliest_df = datetime.datetime.strptime(ticker_collection[ticker[:-7]].iloc[0]['Date'], '%Y-%m-%d')\n    if earliest_df > earliest_entry:\n        earliest_entry = earliest_df\n        \nearliest_entry_string = datetime.datetime.strftime(earliest_entry,'%Y-%m-%d')\n\nprint(earliest_entry_string)\n\nlatest_entry = datetime.datetime(9998, 1, 1) # will store most old end date to sync up data\n\nfor ticker in tickers:\n    latest_df = datetime.datetime.strptime(ticker_collection[ticker[:-7]].iloc[-1]['Date'], '%Y-%m-%d')\n    if latest_df < latest_entry:\n        latest_entry = latest_df\n        \nlatest_entry_string = datetime.datetime.strftime(latest_entry,'%Y-%m-%d')","67f88a1a":"for ticker in tickers:\n    df = ticker_collection[ticker[:-7]]\n    to_start_from = df.index[df['Date'] == earliest_entry_string].tolist()[0]\n    df = df.drop(labels=range(0, to_start_from), axis=0)\n    #to_end_at = df.index[df['Date'] == latest_entry_string].tolist()[0]\n    #df = df.drop(labels=range(6000, len(df)), axis=0)\n    df = df.rename(columns={\"Close\": ticker[:-7]})\n    df = df.reset_index(drop=True)\n    ticker_collection[ticker[:-7]] = df","eb1080d3":"combined_df = ticker_collection[tickers[0][:-7]]\n\nfor i in range(1, len(tickers)):\n    combined_df = pd.merge(combined_df, ticker_collection[tickers[i][:-7]], on='Date')\n\nprint(combined_df)","e3585a35":"for ticker in tickers:\n    combined_df[ticker[:-7] + \"_pct_change\"] = combined_df[ticker[:-7]].pct_change().apply(lambda x: np.log(1+x))\n    combined_df[ticker[:-7] + \"_var\"] = combined_df[ticker[:-7]].var()\n    combined_df[ticker[:-7] + \"_vol\"] = (combined_df[ticker[:-7]+\"_var\"]*250)**0.5\n    for ticker2 in tickers:\n        combined_df[ticker[:-7] + \"_\" + ticker2[:-7] + \"_cov\"] = combined_df[ticker[:-7]].cov(combined_df[ticker2[:-7]])\n        combined_df[ticker[:-7] + \"_\" + ticker2[:-7] + \"_corr\"] = combined_df[ticker[:-7]].corr(combined_df[ticker2[:-7]])\n    \nprint(combined_df)","56e5bf80":"equal_weight = 1.0\/len(tickers)\nweights = np.full((len(tickers)), equal_weight).tolist()\nprint(weights)\n\nexpected_return_meanpct = []\nfor ticker in tickers:\n    expected_return_meanpct.append(combined_df[ticker[:-7] + \"_pct_change\"].mean())\n    \nprint(expected_return_meanpct)\n\ntotal_expected_returns = 0\nfor i in range(0, len(weights)):\n    total_expected_returns += weights[i]*expected_return_meanpct[i]\n    \nprint(total_expected_returns)","6337f9be":"just_pctchange = pd.DataFrame()\nfor ticker in tickers:\n    just_pctchange[ticker[:-7]] = combined_df[ticker[:-7] + \"_pct_change\"]\njust_closes = pd.DataFrame()\nfor ticker in tickers:\n    just_closes[ticker[:-7]] = combined_df[ticker[:-7]]\njust_closes['Date'] = combined_df['Date']\njust_closes['Parsed_Date'] = datetime.datetime.strptime(combined_df['Date'], '%Y-%m-%d')\n\n    \npctchange_cov = just_pctchange.cov()\npctchange_corr = just_pctchange.corr()\nprint(pctchange_cov)\nprint(pctchange_corr)","1a46f5e8":"weights_test = np.full((len(tickers)), equal_weight).tolist()\nportfolio_variance = pctchange_cov.mul(weights_test, axis=0).mul(weights_test, axis=1).sum().sum()\nprint(portfolio_variance)\n\nindividual_yearly_expret = just_closes.resample('Y').last().pct_change().mean()\nprint(individual_yearly_expret)","f13c0c1d":"Import into a dataframe five different stocks. Keep only date and close.","67ffeecf":"Keep only data in dataframes after earliest_entry.","1f0230c5":"Find beginning date."}}