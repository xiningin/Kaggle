{"cell_type":{"5d7c1efa":"code","2ee18da7":"code","6d7a5bb6":"code","04f0d507":"code","11d7197d":"code","a0d19d64":"code","cdd902b9":"code","7e982202":"code","314987f9":"code","a8558f09":"code","bac5d904":"code","3e930cf3":"code","cf28948b":"code","cdd1a17d":"code","b42c4777":"code","a43c210a":"code","6ea4b996":"code","7234ea45":"code","22c8a289":"code","438fe653":"code","d0792eb8":"code","6a23ff29":"code","8c8224ca":"code","0e4b8161":"markdown","fb6ed442":"markdown","5382bcba":"markdown","e0295784":"markdown","bddf9c66":"markdown","42e502cb":"markdown","1e477b99":"markdown","bf497c43":"markdown","20744439":"markdown","66915edc":"markdown","e3e5c6eb":"markdown","1f8f94e1":"markdown","5fa6a94a":"markdown","acaf34f7":"markdown","bf1b56ea":"markdown","995081b4":"markdown","6233a3b4":"markdown","54b7f392":"markdown"},"source":{"5d7c1efa":"# Load libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport seaborn as sns\nimport folium\nfrom folium.plugins import HeatMap\n\n# Import data\ncrimedata = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='latin-1')\n\ncrime0 = crimedata.loc[crimedata['YEAR'].isin([2016,2017])]\n\ncrime = crime0.loc[crime0['UCR_PART'] == 'Part One']\n\n#Remove unused columns\ndel crime['INCIDENT_NUMBER'] \ndel crime['OFFENSE_CODE']\ndel crime['UCR_PART']\ndel crime['Location']\n\n# Peek\ncrime.head()","2ee18da7":"crime[[\"OCCURRED_ON_DATE\"]] = crime[[\"OCCURRED_ON_DATE\"]].apply(pd.to_datetime)\n\n# Convert OCCURED_ON_DATE to datetime\n\n\n# Fill in nans in SHOOTING column\ncrime.SHOOTING.fillna('N', inplace=True)\n\n# Convert DAY_OF_WEEK to an ordered category\ncrime.DAY_OF_WEEK = pd.Categorical(crime.DAY_OF_WEEK, \n              categories=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\n              ordered=True)\n\n# Replace -1 values in Lat\/Long with Nan\ncrime.Lat.replace(-1, None, inplace=True)\ncrime.Long.replace(-1, None, inplace=True)\n\n# Rename columns to something easier to type (the all-caps are annoying!)\nrename = {'OFFENSE_CODE_GROUP':'Group',\n         'OFFENSE_DESCRIPTION':'Description',\n         'DISTRICT':'District',\n         'REPORTING_AREA':'Area',\n         'SHOOTING':'Shooting',\n         'OCCURRED_ON_DATE':'Date',\n         'YEAR':'Year',\n         'MONTH':'Month',\n         'DAY_OF_WEEK':'Day',\n         'HOUR':'Hour',\n         'STREET':'Street'}\ncrime.rename(index=str, columns=rename, inplace=True)\n\n# Check\ncrime.head()","6d7a5bb6":"print('There are '+str(crime.shape[0])+' incidents.')","04f0d507":"# some data checks\ncrime.shape","11d7197d":"# checking null values\ncrime.isnull().count()","a0d19d64":"sns.catplot(y='Group',\n           kind='count',\n            height=8, \n            aspect=1.5,\n            order=crime.Group.value_counts().index,\n           data=crime)","cdd902b9":"# Crimes by hour of the day\nsns.catplot(x='Hour',\n           kind='count',\n            height=8.27, \n            aspect=3,\n            color='red',\n           data=crime)\nplt.xticks(size=30)\nplt.yticks(size=30)\nplt.xlabel('Hour', fontsize=40)\nplt.ylabel('Count', fontsize=40)","7e982202":"array = ['Larceny']\nlarceny = crime.loc[crime['Group'].isin(array)]\n\narray2 = ['Homicide']\nhomicide = crime.loc[crime['Group'].isin(array2)]","314987f9":"# Crimes by hour of the day\nsns.catplot(x='Hour',\n           kind='count',\n            height=8.27, \n            aspect=3,\n            color='red',\n           data=larceny)\nplt.xticks(size=30)\nplt.yticks(size=30)\nplt.xlabel('Hour', fontsize=40)\nplt.ylabel('Count', fontsize=40)","a8558f09":"crime.groupby('Day').count()","bac5d904":"# Crimes by day of the week\nsns.catplot(x='Day',\n           kind='count',\n            height=10, \n            aspect=3,\n           data=crime)\nplt.xticks(size=30)\nplt.yticks(size=30)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=40)","3e930cf3":"larceny.groupby('Day').count()","cf28948b":"# Crimes by day of the week\nsns.catplot(x='Day',\n           kind='count',\n            height=10, \n            aspect=3,\n           data=larceny)\nplt.xticks(size=30)\nplt.yticks(size=30)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=40)","cdd1a17d":"months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.catplot(x='Month', kind='count', height=8, aspect=3, color='gray', data=crime)\nplt.xticks(np.arange(12), months, size=30)\nplt.yticks(size=30)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=40)","b42c4777":"months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.catplot(x='Month', kind='count', height=8, aspect=3, color='gray', data=larceny)\nplt.xticks(np.arange(12), months, size=30)\nplt.yticks(size=30)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=40)","a43c210a":"months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.catplot(x='Month', kind='count', height=8, aspect=3, color='gray', data=homicide)\nplt.xticks(np.arange(12), months, size=30)\nplt.yticks(size=30)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=40)","6ea4b996":"sns.scatterplot(x='Lat',\n               y='Long',\n                alpha=0.01,\n               data=crime)","7234ea45":"sns.scatterplot(x='Lat',\n               y='Long',\n                alpha=0.01,\n               data=larceny)","22c8a289":"sns.scatterplot(x='Lat',\n               y='Long',\n                hue='District',\n                alpha=0.01,\n               data=crime)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2)","438fe653":"sns.scatterplot(x='Lat',\n               y='Long',\n                hue='Group',\n                alpha=0.01,\n               data=crime)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2)","d0792eb8":"# Create basic Folium crime map\ncrime_heatmap = folium.Map(location=[42.3125,-71.0875], \n                       tiles = \"OpenStreetMap\",\n                      zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = crime[crime.Year == 2017]\ndata_heatmap = crime[['Lat','Long']]\ndata_heatmap = crime.dropna(axis=0, subset=['Lat','Long'])\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_heatmap)\n\n# Plot\ncrime_heatmap","6a23ff29":"# Create basic Folium crime map\ncrime_map = folium.Map(location=[42.3125,-71.0875], \n                       tiles = \"OpenStreetMap\",\n                      zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = larceny[larceny.Year == 2017]\ndata_heatmap = larceny[['Lat','Long']]\ndata_heatmap = larceny.dropna(axis=0, subset=['Lat','Long'])\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n#Plot\ncrime_map","8c8224ca":"# Create basic Folium crime map\ncrime_map = folium.Map(location=[42.3125,-71.0875], \n                       tiles = \"OpenStreetMap\",\n                      zoom_start = 11)\n\n# Add data for heatmp \ndata_heatmap = homicide[homicide.Year == 2017]\ndata_heatmap = homicide[['Lat','Long']]\ndata_heatmap = homicide.dropna(axis=0, subset=['Lat','Long'])\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot\ncrime_map","0e4b8161":"Now let's look at our most common crime, larceny.","fb6ed442":"It's interesting that the hottest month of the summer and the coolest month of the winter contain the most crimes. Now let's see how how amount of larcenies per month compares to the average of all crime.","5382bcba":"Looks like afternoon and evening are the times of day when series crime occurs most often.","e0295784":"This map shows that most murders (which are recorded in our data) are centered around Dorchester, there seem to be very few murders recorded downtown. Since downtown is where a majority of other crimes happen this is very odd.","bddf9c66":"Below, I will create a plot which shows the most common kind of UCR_Part one crime (the most serious crimes) one crimes in the city of Boston","42e502cb":"Now that we have looked at time it's time to look at place. Next, I will discover where in Boston these crimes most often take place.","1e477b99":"Larceny is the most common sort of serious crime, and homicide is the least common. Now, let's see what time of day these crimes happen most often.","bf497c43":"Let's use a difference sort of map which can show us a more fine grained new of the city, street by street.","20744439":"Now let's see what day of the week on which serious crimes are most committed.","66915edc":"As we can see there is not a big difference in the amount of crime from day to day. But there is an obvious peak around Friday and a bit of a dip in crime on Sunday.","e3e5c6eb":"August still falls into the pattern of having the most crime, but January does not. Interesting, I wonder what causes this difference.","1f8f94e1":"This plot shows that larcenies are even more highly concentrated in the afternoon and evening hours than the average of all crimes combined. There is a strange rise in larcenies around midnight.","5fa6a94a":"Let's see in which month homicides happen the most often.","acaf34f7":"Now let's look closer at the most abundant crime in Boston, Larceny. We'll see when most larcenies happen.","bf1b56ea":"Below, I will create a heatmap for homicides in Boston.","995081b4":"It looks like most cases are concentrated to the east side of Boston. Though our crimes appear to be centered in the downtown area, there are little pockets of crime scattered around the rest of the city. Now we'll look at each district of the city.","6233a3b4":"It's about the same.","54b7f392":"Below, I will make a map on which will be plotted all the crimes across Boston."}}