{"cell_type":{"8fce03d4":"code","0c3775d2":"code","b2c2a9ea":"code","5e9349a6":"code","1a81ce89":"code","0e37b392":"code","c4cd6e02":"code","aee02698":"code","bb7bc435":"code","0426831c":"code","f98f8a28":"code","2655180a":"code","adfc30dd":"code","f67bb6b8":"code","763e6da3":"code","1090cbf1":"code","00980f03":"code","081d2b5a":"code","a38263e7":"code","e827aa07":"code","6fbaf190":"code","3b09b87e":"code","acea58af":"code","47e70210":"code","5f8a01ca":"code","8406e11d":"code","01ad8a04":"markdown","868f58e4":"markdown","4c2fcfd9":"markdown","89240dcd":"markdown","339202df":"markdown","d75fa61f":"markdown","7ccf0c15":"markdown","2855ced3":"markdown","764fa242":"markdown","8cee6aa2":"markdown","44cc7b25":"markdown","5a8040d4":"markdown","829e5d1d":"markdown","205fe192":"markdown","2d29a3dd":"markdown","3d0831d6":"markdown","d2cbd81f":"markdown","f631d454":"markdown","e641a05f":"markdown","f996702f":"markdown"},"source":{"8fce03d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c3775d2":"import matplotlib.pyplot as plt\nimport seaborn as sns\n            \n%matplotlib inline","b2c2a9ea":"df = pd.read_csv('..\/input\/billionaires-index\/BillionairesIndex.csv')","5e9349a6":"df.info()","1a81ce89":"df['net_worth'] = [float(i.split('$')[1].split(\"B\")[0]) for i in df['Total_Net_Worth']]","0e37b392":"df['last_change_sign'] = [i.split('$')[0] for i in df['LastChange']]\ndf['ytd_change_sign'] = [i.split('$')[0] for i in df['YTDChange']]","c4cd6e02":"df.ytd_change_sign.unique()","aee02698":"df['last_change_sign'].replace('', 0, inplace=True)\ndf['ytd_change_sign'].replace('', 0, inplace=True)","bb7bc435":"df.last_change_sign.unique()","0426831c":"values = [i.split('$')[1] for i in df['LastChange']]\nfor index, value in enumerate(values):\n    if len(value) > 4:\n        values[index] = value[:4]\n    else:\n        values[index] = value[:3]","f98f8a28":"df['last_change_value'] = values\ndf['last_change_value'] = df['last_change_value'].astype(float)","2655180a":"values = [i.split('$')[1] for i in df['LastChange']]\nfor index, value in enumerate(values):\n    if value[-1:] == 'M':\n        df['last_change_value'][index] = df['last_change_value'][index]\/1000\n    elif value[-1:] == 'k':\n        df['last_change_value'][index] = df['last_change_value'][index]\/1000000","adfc30dd":"values = [i.split('$')[1] for i in df['YTDChange']]\nfor index, value in enumerate(values):\n    if len(value) > 4:\n        values[index] = value[:4]\n    else:\n        values[index] = value[:3]","f67bb6b8":"df['ytd_change_value'] = values\ndf['ytd_change_value'] = df['ytd_change_value'].astype(float)","763e6da3":"values = [i.split('$')[1] for i in df['YTDChange']]\nfor index, value in enumerate(values):\n    if value[-1:] == 'M':\n        df['ytd_change_value'][index] = df['ytd_change_value'][index]\/1000","1090cbf1":"df.head(5)","00980f03":"fig, ax = plt.subplots(figsize=(16, 8))\nsns.countplot(x=df['Country'], order=df['Country'].value_counts().index)\nplt.xticks(rotation=90)\nax.set_ylabel('Number of Billionaires')","081d2b5a":"fig, ax = plt.subplots(figsize=(16,8))\ndf.groupby(['Country']).sum()['net_worth'].sort_values(ascending=False).plot(kind='bar')\nax.set_ylabel('Net Worth (in $B)')","a38263e7":"fig, ax = plt.subplots(figsize=(16, 8))\nsns.countplot(x=df['Industry'], order=df['Industry'].value_counts().index)\nplt.xticks(rotation=60)\nax.set_ylabel('Number of Billionaires')","e827aa07":"fig, ax = plt.subplots(figsize=(16, 10))\ndf.groupby('Industry').sum().net_worth.sort_values(ascending=False).plot(kind='bar')\nax.set_ylabel('Capital (in $B)')\nplt.xticks(rotation=60)","6fbaf190":"fig, ax = plt.subplots(figsize=(16, 10))\ndf.groupby('Industry').sum()['ytd_change_value'].sort_values(ascending=False).plot(kind='bar')\nax.set_ylabel('2021 Increases (in $B)')\nplt.xticks(rotation=60)","3b09b87e":"fig, ax = plt.subplots(figsize=(16, 10))\ntop_ytd = df['ytd_change_value'].sort_values(ascending=False)[:15]\ntop_name = [df['Name'].iloc[i] for i in pd.DataFrame(top_ytd).index]\nsns.barplot(top_name, top_ytd)\nax.set_ylabel('YTD (in $B)')\nax.set_xlabel('Billionaires')\nplt.xticks(rotation=60)","acea58af":"fig, ax = plt.subplots(figsize=(16, 10))\ntop_ytd = df[df['last_change_sign'] == '+']['last_change_value'].sort_values(ascending=False)[:15]\ntop_name = [df['Name'].iloc[i] for i in pd.DataFrame(top_ytd).index]\nsns.barplot(top_name, top_ytd)\nax.set_ylabel('Last Transcation (Gains in $B)')\nax.set_xlabel('Billionaires')\nplt.xticks(rotation=60)","47e70210":"fig, ax = plt.subplots(figsize=(16, 10))\ntop_ytd = df[df['last_change_sign'] == '-']['last_change_value'].sort_values(ascending=False)[:15]\ntop_name = [df['Name'].iloc[i] for i in pd.DataFrame(top_ytd).index]\nsns.barplot(top_name, top_ytd)\nax.set_ylabel('Last Transcation (Losses in $B)')\nax.set_xlabel('Billionaires')\nplt.xticks(rotation=60)","5f8a01ca":"country_per_industry = pd.DataFrame()\ncountry_per_industry['UnitedStates'] = df[df['Country'] == 'UnitedStates'].groupby(['Industry']).sum().net_worth\ncountry_per_industry['China'] = df[df['Country'] == 'China'].groupby(['Industry']).sum().net_worth\ncountry_per_industry['France'] = df[df['Country'] == 'France'].groupby(['Industry']).sum().net_worth\ncountry_per_industry['India'] = df[df['Country'] == 'India'].groupby(['Industry']).sum().net_worth\ncountry_per_industry['RussianFederation'] = df[df['Country'] == 'RussianFederation'].groupby(['Industry']).sum().net_worth","8406e11d":"country_per_industry.plot(kind='bar', figsize=(16, 10))\nplt.xticks(rotation=60)\nplt.ylabel('Capital (in $B)')","01ad8a04":"The USA is also the country that has the most amount of Capital. Followed by China and France.","868f58e4":"As expected, there are some values that are 0. So we need to replace them with 0 for both columns.","4c2fcfd9":"Next, is getting the values of the change for both the ytd and the last change.","89240dcd":"# Plotting\n## Analysis per Country\nWe can start by the number of billionaires per country.","339202df":"Final look at the data.","d75fa61f":"USA showing the highest values in all the industries except in Consumer, that industry is overwehlmed by France. The Industrial industries are show similar capitals between the top 5 countries.","7ccf0c15":"Most of the input is in str form, so we need to convert them to float to be able to visualise them. We can start with networth as we are working with billionaires it should be straightforward to convert.","2855ced3":"## Changes YTD\nThe following shows the changing in the YTD for the industries","764fa242":"## Industry Analysis\n\nWe can see in the following plot how many billionaires are in each Industry.","8cee6aa2":"Looking at the changes, there are some that are positive and some that are negative, we can start by handeling the sign of each change and adding them in a column on their own.","44cc7b25":"# Data Manipulation","5a8040d4":"Technology has the most number of billionaires and the highest capital. Followed by Industry and Consumer.","829e5d1d":"Lastly, a plot showing the amount of Capital of each Industry per Country.","205fe192":"There could be an issue with our approach, since some of the changes could also be 0. So we need to check the unique values of the columns we just created.","2d29a3dd":"The following shows the capital of each Industry.","3d0831d6":"The USA shows the highest number of Billionaires. Followed by China and Russia.","d2cbd81f":"Looking at the losses, Jeff Besoz has the biggest lost of around $3.5B, followed by Mukesh Ambani and MacKenzie Scott.","f631d454":"We can plot next the total amount of capital per country.","e641a05f":"We can also see the positive last transcation. Elon Musk is showing an increase of $9B, followed by Zeng Yuqun and Gautam Adani.","f996702f":"The following plots show the YTD change for each billionaire."}}