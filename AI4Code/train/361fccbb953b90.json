{"cell_type":{"19d1db36":"code","2299ec50":"code","57cbf892":"code","257a4a0b":"code","310b16b9":"code","d3dd7946":"code","18e813f5":"code","b1e92e35":"code","baedb689":"code","99ec89a0":"code","0fd9a960":"code","52c046c0":"code","d1912906":"code","834b91fd":"code","622268fe":"code","52d80138":"code","98b58bfa":"code","fbcb9a00":"code","55d964dd":"code","a6d23cef":"code","4e73cf78":"code","5d291c5f":"markdown","5c16e9d8":"markdown"},"source":{"19d1db36":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2299ec50":"import matplotlib.pyplot as plt\nimport seaborn as sns","57cbf892":"data = pd.read_csv(\"\/kaggle\/input\/amazon-electronics-items-reviews\/amazonReview.csv\")\ndata.shape","257a4a0b":"data.head()","310b16b9":"data.isnull().sum()","d3dd7946":"data[data['sentiment'] == 'positive'].shape","18e813f5":"print('Positive\/Negative count Ratio:', (data[data['sentiment'] == 'positive'].shape[0]\/data[data['sentiment'] == 'negative'].shape[0]))","b1e92e35":"print('Percentage of Nan Values for Review Rating in positive sentiments are:', (data[data['sentiment'] == 'positive'].isnull().sum()[3]\/data[data['sentiment'] == 'positive'].shape[0]) * 100)","baedb689":"print('Percentage of Nan Values for Review Rating in negative sentiments are:', (data[data['sentiment'] == 'negative'].isnull().sum()[3]\/data[data['sentiment'] == 'negative'].shape[0]) * 100)","99ec89a0":"data['title'] = data['title'].fillna(\"\")\ndata['Review body'] = data['Review body'].fillna(\"\")","0fd9a960":"data = data.sample(frac=1).reset_index(drop=True)","52c046c0":"data.head(50)","d1912906":"print('Count of Duplicate Review of the product:', data.duplicated(subset=['Review body'], keep='first').sum())","834b91fd":"data['Review body'].value_counts()[:100]","622268fe":"plt.figure(figsize=(10,20))\nsns.barplot(y=data['Review body'].value_counts()[:100].index, x=data['Review body'].value_counts()[:100])","52d80138":"plt.figure(figsize=(10,20))\nplt.title('Top 100 Most Used Review Body for positive Reviews')\nsns.barplot(y=data[data['sentiment'] == 'positive']['Review body'].value_counts()[:100].index, x=data[data['sentiment'] == 'positive']['Review body'].value_counts()[:100])","98b58bfa":"plt.figure(figsize=(10,20))\nplt.title('Top 100 Most Used Review Body for negative Reviews')\nsns.barplot(y=data[data['sentiment'] == 'negative']['Review body'].value_counts()[:100].index, x=data[data['sentiment'] == 'negative']['Review body'].value_counts()[:100])","fbcb9a00":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom PIL import Image\n\nimport matplotlib.pyplot as plt\n% matplotlib inline","55d964dd":"plt.figure(figsize=(20, 20))\nbody_pos = \" \".join(review for review in data[data['sentiment'] == 'positive']['Review body'])\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(stopwords=stopwords, background_color=\"white\").generate(body_pos)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","a6d23cef":"plt.figure(figsize=(20, 20))\nbody_neg = \" \".join(review for review in data[data['sentiment'] == 'negative']['Review body'])\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(stopwords=stopwords, background_color=\"white\").generate(body_pos)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","4e73cf78":"# def text_cleaning(text):\n#     text = text.lower() # lower-case all alphabets\n    ","5d291c5f":"## Creating WordCloud for positive reviews and negative reviews","5c16e9d8":"#### Replacing nan values for *title* and *review_body* with empty spaces \"\""}}