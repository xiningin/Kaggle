{"cell_type":{"53bceafb":"code","656b0276":"code","6f55601f":"code","0b006f34":"code","b8719886":"code","a0544031":"code","027cc69f":"code","f3d3b6f3":"code","955dc5d4":"code","2a076f63":"code","e6c39bd7":"code","344c2787":"code","ac752484":"code","757fde5a":"code","76c89865":"code","2f649af7":"code","924fb19e":"code","5286c5b7":"code","bc96d294":"code","b1ba8d93":"code","9633c1d6":"code","942e1cd2":"code","b5cca85d":"code","ea62e25f":"markdown","de7c9160":"markdown","75f43948":"markdown","133d0609":"markdown","8efdcedf":"markdown","26b449f5":"markdown","fda42366":"markdown","925f6817":"markdown","098f6d64":"markdown","bc2b1da8":"markdown","1c7791a0":"markdown","ba57e408":"markdown","071e15a4":"markdown","a08c2542":"markdown","89cad5c7":"markdown","c42965d8":"markdown","3f77b128":"markdown","375ab6e2":"markdown","c1f072ef":"markdown","4a1d411d":"markdown","7c204675":"markdown","6f08b22a":"markdown","5da760b5":"markdown"},"source":{"53bceafb":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","656b0276":"train = pd.read_csv('..\/input\/atividade-regressao-PMR3508\/train.csv', na_values = 'NaN')\ntest = pd.read_csv('..\/input\/atividade-regressao-PMR3508\/test.csv', na_values = 'Nan')\ntrain.head()","6f55601f":"train.shape","0b006f34":"test.head()","b8719886":"train_mod = pd.DataFrame.copy(train)\ntrain_mod.dropna()\nif train_mod.shape == train.shape:\n    print('N\u00e3o h\u00e1 dados faltantes')\nelse:\n    print('Os dados faltantes foram removidos, sendo as novas dimens\u00f5es do DataFrame iguais a', train_mod.shape)","a0544031":"cmap = sns.cubehelix_palette(rot=-.2, as_cmap=True)\ng = sns.relplot(data=train, x=\"longitude\", y=\"latitude\", hue=\"median_house_value\", size=\"population\", palette=cmap, sizes=(40, 200), height=10)","027cc69f":"# !pip install geopy\nfrom geopy import distance\n\ncities = {'SF':(37.773972,-122.431297),\n          'LA':(34.052235,-118.243683),\n          'SD':(32.715736,-117.161087),\n          'SJ':(37.335480,-121.893028)}\n\ndef dist(p1,p2):\n    i = 0\n    D = []\n    while i < len(p1):\n        d = min(distance.distance((p1['latitude'][i],p1['longitude'][i]),p2['SF']).km,\n                distance.distance((p1['latitude'][i],p1['longitude'][i]),p2['LA']).km,\n                distance.distance((p1['latitude'][i],p1['longitude'][i]),p2['SD']).km,\n                distance.distance((p1['latitude'][i],p1['longitude'][i]),p2['SJ']).km)\n        D.append(d)\n        i += 1\n    D = pd.DataFrame(D, columns=['distance_big_city'])\n    return D","f3d3b6f3":"te_mod = pd.DataFrame.copy(train)\nte_mod['distance_big_city'] = dist(train, cities)['distance_big_city']\nplt.figure(figsize=(15,8))\nax = sns.scatterplot(x='median_house_value', y='distance_big_city', data=te_mod)","955dc5d4":"cmap = sns.cubehelix_palette(rot=-.8, as_cmap=True)\nplt.figure(figsize=(15,8))\nax = sns.scatterplot(data=train, x='median_age', y='median_house_value', hue='population', sizes=(40,200), palette=cmap)","2a076f63":"avg = {'median_rooms':train['total_rooms']\/train['households'],\n      'median_bedrooms':train['total_bedrooms']\/train['households'],\n      'median_population':train['population']\/train['households']}\nte_mod['median_rooms'] = avg['median_rooms']\nte_mod['median_bedrooms'] = avg['median_bedrooms']\nte_mod['median_population'] = avg['median_population']\nte_mod.head()","e6c39bd7":"sns.set_style('white')\ncmap = sns.cubehelix_palette(rot=-.3, as_cmap=True)\nplt.figure(figsize=(15,8))\nplt.xlim(1,10)\nax = sns.scatterplot(data=te_mod, x='median_rooms', y='median_house_value', hue='population', sizes=(40,200), palette=cmap)","344c2787":"cmap = sns.cubehelix_palette(rot=-.2, as_cmap=True)\nplt.figure(figsize=(15,8))\nplt.xlim(0.8,1.6)\nsns.scatterplot(data=te_mod, x='median_bedrooms', y='median_house_value', hue='population', sizes=(40,200), palette=cmap)","ac752484":"plt.figure(figsize=(15,8))\nplt.xlim(0,6)\ncmap = sns.cubehelix_palette(rot=-.2, as_cmap=True)\nsns.scatterplot(data=te_mod, x='median_population', y='median_house_value', hue='population', sizes=(40,200), palette=cmap)","757fde5a":"plt.figure(figsize=(15,8))\ncmap = sns.cubehelix_palette(rot=-.2, as_cmap=True)\nsns.scatterplot(data=te_mod, x='median_income', y='median_house_value', hue='population', sizes=(40,200), palette=cmap)","76c89865":"from sklearn import preprocessing\nx = te_mod.values \nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\nte_norm = pd.DataFrame(x_scaled, columns=te_mod.columns.values)\nte_norm","2f649af7":"X = pd.DataFrame.copy(te_norm)\ny = pd.DataFrame.copy(te_norm['median_house_value'])\nX = X.drop(['Id', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_house_value', 'median_bedrooms'], 1)\nX","924fb19e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","5286c5b7":"from sklearn import linear_model\nreg = linear_model.LinearRegression()\nreg.fit(X_train, y_train)\ny_pred = reg.predict(X_test)\nprint('Score:', reg.score(X_test, y_test), '\\n' 'Coef:', reg.coef_)","bc96d294":"reg = linear_model.Ridge(alpha=.5)\nreg.fit(X_train, y_train)\nprint('Score:', reg.score(X_test, y_test), '\\n' 'Coef:', reg.coef_)","b1ba8d93":"from sklearn import linear_model\nreg = linear_model.Lasso(alpha=0.1)\nreg.fit(X_train, y_train)\nprint('Score:', reg.score(X_test, y_test))","9633c1d6":"from sklearn.neighbors import KNeighborsRegressor\nscores = []\nfor k in range(1,15):\n    knn = KNeighborsRegressor(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    scores.append([knn.score(X_test, y_test), k])\nprint('max[Score, n_neighbors]:', max(scores))","942e1cd2":"test_mod = pd.DataFrame.copy(test)\ntest_mod['distance_big_city'] = dist(test, cities)['distance_big_city']\ntest_mod['median_rooms'] = test['total_rooms']\/test['households']\ntest_mod['median_population'] = test['population']\/test['households']\ntest_mod = test_mod.drop(['Id', 'total_rooms', 'total_bedrooms', 'population', 'households'], 1)\ntest_mod","b5cca85d":"reg = KNeighborsRegressor(n_neighbors=10)\nX_ = pd.DataFrame.copy(te_mod)\ny_ = pd.DataFrame.copy(te_mod['median_house_value'])\nX_ = X_.drop(['Id', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_house_value', 'median_bedrooms'], 1)\nreg.fit(X_,y_)\nsub = pd.DataFrame(reg.predict(test_mod), columns = ['median_house_value'])\nsub.index= test['Id']\nsub.to_csv('KNN.csv')","ea62e25f":"Importando bibliotecas b\u00e1sicas usadas","de7c9160":"Importando bases de dados","75f43948":"Ridge","133d0609":"Regress\u00e3o Linear (Ordinary Least Squares)","8efdcedf":"# 2) An\u00e1lise dos dados","26b449f5":"Plotando o n\u00famero m\u00e9dio de quartos por resid\u00eancia, pode-se observar uma leve tend\u00eancia de aumento de pre\u00e7o das casas em fun\u00e7\u00e3o do aumento do n\u00famero de quartos, sendo esta uma vari\u00e1vel relevante para o c\u00e1lculo da regress\u00e3o. O mesmo plot foi feito para o n\u00famero m\u00e9dio de dormit\u00f3rios por casa e para o n\u00famero m\u00e9dio de indiv\u00edduos por casa. Em rela\u00e7\u00e3o aos dormit\u00f3rios, n\u00e3o se verificou uma tend\u00eancia de comportamento muito relevante, sendo essa vari\u00e1vel descartada para futuros c\u00e1lculos de regress\u00e3o. J\u00e1 em rela\u00e7\u00e3o ao n\u00famero m\u00e9dio de indiv\u00edduos, pode-se observar que h\u00e1 uma tend\u00eancia de casas com pre\u00e7os mais elevados possu\u00edrem um menor n\u00famero de indiv\u00edduos, havendo poucas casas precificadas acima de 200000 com 4 ou mais indiv\u00edduos, sendo esta feature relevante para o c\u00e1lculo da regress\u00e3o.","fda42366":"# 5) Preparando submiss\u00e3o","925f6817":"# 3) Preparando dados para regress\u00e3o","098f6d64":"Foi plotada o pre\u00e7o m\u00e9dio das resid\u00eancias em fun\u00e7\u00e3o da dist\u00e2ncia at\u00e9 as grandes cidades. \u00c9 poss\u00edvel notar que a maior parte das resid\u00eancias com os pre\u00e7os mais elevados est\u00e1 pr\u00f3xima dos grandes centros urbanos, ou seja, este \u00e9 uma feature importante na hora de se fazer a regress\u00e3o.","bc2b1da8":"KNN","1c7791a0":"Por \u00faltimo, foi observada a rela\u00e7\u00e3o entre a m\u00e9dia de sal\u00e1rio e o pre\u00e7o m\u00e9dio das casas, que mostrou uma tend\u00eancia de casas mais caras para sal\u00e1rios mais altos, sendo este par\u00e2metro levado em considera\u00e7\u00e3o na regress\u00e3o.","ba57e408":"Preparando dados para valida\u00e7\u00e3o cruzada, sendo selecionado 30% para a base de teste e o restante (70%) para a base de treino","071e15a4":"Deixando base de teste com as mesmas features da base X de treino","a08c2542":"Foram tamb\u00e9m calculadas as dist\u00e2ncias entre as resid\u00eancias e as cidades mais pr\u00f3ximas. As cidades escolhidas para este c\u00e1lculo foram os grandes centros urbanos: S\u00e3o Francisco, Los Angeles, S\u00e3o Diego e S\u00e3o Jos\u00e9, onde se localiza o Vale do Sil\u00edcio.","89cad5c7":"Optou-se por utilizar o KNeighborsRegressor, por ter apresentado um melhor desempenho na valida\u00e7\u00e3o cruzada","c42965d8":"Com o intuito de se fazer uma an\u00e1lise mais precisa, a partir da base de treino disponibilizada, foram calculados novas estimativas: n\u00famero m\u00e9dio de quartos por casa, n\u00famero m\u00e9dio de dormit\u00f3rios por casa e n\u00famero m\u00e9dio de indiv\u00edduos por casa.","3f77b128":"Pelo gr\u00e1fico plotado a seguir, observa-se que h\u00e1 uma distribui\u00e7\u00e3o relativamente uniforme entre a m\u00e9dia de idades e o pre\u00e7o m\u00e9dio das resid\u00eancias. No entanto, para m\u00e9dias de idades menores do que 20 anos, observa-se que o pre\u00e7o das resid\u00eancias \u00e9 relativamente menor de forma geral, quando comparado ao pre\u00e7o atribu\u00eddo \u00e0 outras idades. Dessa forma, o par\u00e2metro de m\u00e9dia de idades pode ser relevante no c\u00e1lculo da regress\u00e3o, justamente para auxiliar em uma escolha mais \"precisa\" do pre\u00e7o m\u00e9dio das resid\u00eancias entre indiv\u00edduos com m\u00e9dia de faixa et\u00e1ria acima de 20 anos e abaixo de 20 anos.","375ab6e2":"Lasso","c1f072ef":"# 4) Regress\u00e3o","4a1d411d":"# 6) Regress\u00e3o para submiss\u00e3o","7c204675":"# 1) Importando bibliotecas b\u00e1sicas e fazendo verifica\u00e7\u00f5es iniciais dos dados","6f08b22a":"Em primeiro lugar, foi plotada a posi\u00e7\u00e3o das resid\u00eancias em fun\u00e7\u00e3o do pre\u00e7o m\u00e9dio e da popula\u00e7\u00e3o. Com isso, pode-se observar que os maiores valores para pre\u00e7o de resid\u00eancia ocorrem na regi\u00e3o costeira, conforme apresentado a seguir","5da760b5":"Cria-se uma c\u00f3pia da base de treino, sendo feita a remo\u00e7\u00e3o de poss\u00edveis dados faltantes"}}