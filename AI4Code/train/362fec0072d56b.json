{"cell_type":{"57191444":"code","d44cf081":"code","6fb22758":"code","d58a163b":"code","f6f33d9d":"code","1c56288b":"code","abc087ca":"code","81e2ee4d":"code","c4a8bed4":"code","c7fb1507":"code","8c608577":"code","7de4e317":"code","6bc810d0":"code","6d16a46d":"code","fe90a468":"code","e58c8921":"code","46f28495":"code","0b79ea18":"code","dd9c1e81":"code","f20f6bc9":"code","c6d02f2b":"code","68bdfc8d":"code","0f99147c":"code","a0da55a4":"code","d01b396c":"code","c594cdd6":"code","5840ad5f":"code","469edabf":"code","f2ed0519":"code","f4a2726c":"code","b6d5601a":"code","0366c95c":"code","71c01207":"code","9b3b431d":"code","2ae609a0":"code","48d52fd9":"code","09f3ae3e":"code","b3124ddf":"code","cea58729":"code","87886596":"code","2b422240":"markdown","37083d84":"markdown","1a528302":"markdown","ecc3ebdd":"markdown","f18060da":"markdown","39f186f6":"markdown","3291e177":"markdown","b780686c":"markdown","5501f687":"markdown","9e83a7df":"markdown","55c51202":"markdown","f1801def":"markdown","2ed13b4e":"markdown","67f4e612":"markdown","cc4552f6":"markdown","483e7b1a":"markdown","409b83f3":"markdown","4b698a7b":"markdown","ed8bb5a8":"markdown","f4458797":"markdown","421d5bd0":"markdown","07288250":"markdown","5536fa6f":"markdown","499c11c9":"markdown","8cf40d36":"markdown","b45cc80e":"markdown","c418cb6d":"markdown","399dc396":"markdown","617f3b9a":"markdown","5276bac4":"markdown","bee47f50":"markdown","a4278373":"markdown","8ce1eeb1":"markdown","cd6c40e2":"markdown","052ad9cd":"markdown","78761831":"markdown","4c55f02a":"markdown"},"source":{"57191444":"import numpy as np\nimport math\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.offline import init_notebook_mode, iplot\nimport seaborn as sns\nimport warnings\nimport os\nwarnings.filterwarnings('ignore')\nplt.style.use('bmh')\n%matplotlib inline\nplt.rcParams['figure.dpi'] = 100\ninit_notebook_mode(connected=True) \n\n#print(os.listdir('..\/input\/NFL-Punt-Analytics-Competition'))\n\ndata = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/video_review.csv')\nplayers = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/play_player_role_data.csv')\ngd = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/game_data.csv')\nplay_info = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/play_information.csv')\nvideo = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/video_footage-injury.csv')\npositions = pd.read_csv('..\/input\/NFL-Punt-Analytics-Competition\/player_punt_data.csv')\n\ndata['GSISID'].apply(str)\ndata['Primary_Partner_GSISID'].apply(str)\nplayers['GSISID'].apply(str)\ngd['Turf'] = gd['Turf'].str.lower()\ngd['GameWeather'] = gd['GameWeather'].str.lower()\n\nfor index, row in data.iterrows():\n    role = players[(players.GSISID == row['GSISID']) & (players.GameKey == row['GameKey']) & (players.PlayID == row['PlayID'])]['Role'].tolist()[0]\n    \n    data.loc[index, 'game_clock'] = play_info[(play_info.PlayID == row['PlayID']) & (play_info.GameKey == row['GameKey'])]['Game_Clock'].tolist()[0]\n    data.loc[index, 'video_url'] = video[(video.gamekey == row['GameKey']) & (video.playid == row['PlayID'])]['PREVIEW LINK (5000K)'].tolist()[0]\n    data.loc[index, 'game_day'] = gd[(gd.GameKey == row['GameKey'])]['Game_Day'].tolist()[0]\n    data.loc[index, 'turf'] = gd[(gd.GameKey == row['GameKey'])]['Turf'].tolist()[0]\n    data.loc[index, 'start_time'] = gd[(gd.GameKey == row['GameKey'])]['Start_Time'].tolist()[0]\n    data.loc[index, 'weather'] = gd[(gd.GameKey == row['GameKey'])]['GameWeather'].tolist()[0]\n    data.loc[index, 'temperature'] = gd[(gd.GameKey == row['GameKey'])]['Temperature'].tolist()[0]\n    data.loc[index, 'player_role'] = role\n    data.loc[index, 'ball_possession'] = (role in ['GL','PLW','PLT','PLG','PLS','PRG','PRT','PRW','GR','PC','PPR','P'])\n    #data.loc[index, 'description'] = video[(video.gamekey == row['GameKey']) & (video.playid == row['PlayID'])]['PlayDescription'].tolist()[0]\n    data.loc[index, 'description'] = play_info[(play_info.PlayID == row['PlayID']) & (play_info.GameKey == row['GameKey'])]['PlayDescription'].tolist()[0]\n    data.loc[index, 'illegal'] = ('illegal' in video[(video.gamekey == row['GameKey']) & (video.playid == row['PlayID'])]['PlayDescription'].tolist()[0].lower().split(' '))\n    \n    gsisid = row['GSISID']\n    data.loc[index, 'player_pos'] = positions[positions.GSISID == gsisid]['Position'].tolist()[0]\n    #print(i, gsisid, positions[positions.GSISID == gsisid]['Position'].tolist()[0])\n    \n    if str(row['Primary_Partner_GSISID']) != 'nan' and str(row['Primary_Partner_GSISID']) != 'Unclear':\n        gsisid = int(row['Primary_Partner_GSISID'])\n        data.loc[index, 'partner_pos'] = positions[positions.GSISID == gsisid]['Position'].tolist()[0]\n        data.loc[index, 'partner_role'] = players[(players.GSISID == int(row['Primary_Partner_GSISID'])) & (players.GameKey == row['GameKey']) & (players.PlayID == row['PlayID'])]['Role'].tolist()[0]\n        #data.loc[index, 'ROLES'] = '{}-{}'.format(str(data.loc[index]['player_role']),str(data.loc[index]['PP_GSISROLE']))","d44cf081":"import tqdm\nPATH = '..\/input\/NFL-Punt-Analytics-Competition\/'\n\ndtypes = {'Season_Year': 'int16',\n         'GameKey': 'int16',\n         'PlayID': 'int16',\n         'GSISID': 'float32',\n         'Time': 'str',\n         'x': 'float32',\n         'y': 'float32',\n         'dis': 'float32',\n         'o': 'float32',\n         'dir': 'float32',\n         'Event': 'str'}\n\ncol_names = list(dtypes.keys())\n\nngs_files = ['NGS-2016-pre.csv',\n             'NGS-2016-reg-wk1-6.csv',\n             'NGS-2016-reg-wk7-12.csv',\n             'NGS-2016-reg-wk13-17.csv',\n             'NGS-2016-post.csv',\n             'NGS-2017-pre.csv',\n             'NGS-2017-reg-wk1-6.csv',\n             'NGS-2017-reg-wk7-12.csv',\n             'NGS-2017-reg-wk13-17.csv',\n             'NGS-2017-post.csv']\n\ndf_list = []\n\nfor i in tqdm.tqdm(ngs_files):\n    df = pd.read_csv(f'{PATH}'+i, usecols=col_names,dtype=dtypes)\n    \n    df_list.append(df)","6fb22758":"import gc\n# Merge all dataframes into one dataframe\nngs = pd.concat(df_list)\n\n# Delete the dataframe list to release memory\ndel df_list\ngc.collect()\nngs = ngs.drop(columns=['Event'])","d58a163b":"def find_direction(angle):\n    if angle < 45 and angle > -45:\n        return 'front'\n    elif (angle < -45 and angle > -135):\n        return  'left'\n    elif (angle > 45 and angle < 135):\n        return 'right'\n    else:\n        return 'behind'\n\ndef find_half(angle):\n    if angle > -90 and angle < 90:\n        return 'front'\n    else:\n        return 'behind'\n    \n\ndef find_impact(PlayID, GameKey, GSISID, Partner_GSISID, data_index):\n    player_coords = ngs[(ngs.GSISID == GSISID) & (ngs.GameKey == GameKey) & (ngs.PlayID == PlayID)]\n    partner_coords = ngs[(ngs.GSISID == Partner_GSISID) & (ngs.GameKey == GameKey) & (ngs.PlayID == PlayID)]\n\n    player_coords = player_coords.sort_values(by=['Time'])\n    partner_coords = partner_coords.sort_values(by=['Time'])\n\n    p1 = player_coords.index.tolist()\n    p2 = partner_coords.index.tolist()\n    \n    for i in range(0, len(p1)):\n        player_index = p1[i]\n        partner_index = p2[i]\n\n        distance = math.sqrt((player_coords.loc[player_index]['x'] - partner_coords.loc[partner_index]['x'])**2 + (player_coords.loc[player_index]['y'] - partner_coords.loc[partner_index]['y'])**2)\n\n        if distance < 1.2:\n            \n            rad = math.atan2(partner_coords.loc[partner_index]['y'] - player_coords.loc[player_index]['y'], partner_coords.loc[partner_index]['x'] - player_coords.loc[player_index]['x'])\n            rad = (rad * 180) \/ math.pi\n            if rad < 0:\n                rad += 360\n                \n            rad2 = math.atan2(player_coords.loc[player_index]['y'] - partner_coords.loc[partner_index]['y'], player_coords.loc[player_index]['x'] - partner_coords.loc[partner_index]['x'])\n            rad2 = (rad2 * 180) \/ math.pi\n            if rad2 < 0:\n                rad2 += 360\n                \n            collision_angle = player_coords.loc[player_index]['dir']  - rad\n            collision_angle_partner = partner_coords.loc[partner_index]['dir']  - rad2\n            \n            data.loc[data_index, 'collision_angle'] = collision_angle\n            data.loc[data_index, 'collision_angle_partner'] = collision_angle_partner\n            data.loc[data_index, 'player_speed'] = player_coords.loc[player_index]['dis'] * 0.9144 * 10\n            data.loc[data_index, 'partner_speed'] = partner_coords.loc[partner_index]['dis'] * 0.9144 * 10\n            data.loc[data_index, 'player_x'] = player_coords.loc[player_index]['x']\n            data.loc[data_index, 'player_y'] = player_coords.loc[player_index]['y']\n            data.loc[data_index, 'partner_x'] = partner_coords.loc[partner_index]['x']\n            data.loc[data_index, 'partner_y'] = partner_coords.loc[partner_index]['y']\n            data.loc[data_index, 'collision_time1'] = player_coords.loc[player_index]['Time']\n            data.loc[data_index, 'collision_time2'] = partner_coords.loc[partner_index]['Time']\n            data.loc[data_index, 'player_dir'] = player_coords.loc[player_index]['dir']\n            data.loc[data_index, 'player_o'] = player_coords.loc[player_index]['o']\n            data.loc[data_index, 'partner_dir'] = partner_coords.loc[partner_index]['dir']\n            data.loc[data_index, 'partner_o'] = partner_coords.loc[partner_index]['o']\n            data.loc[data_index, 'distance'] = distance\n            \n            partner_side = find_direction(collision_angle)\n            partner_half = find_half(collision_angle)\n            \n            player_side = find_direction(collision_angle_partner)\n            player_half = find_half(collision_angle_partner)            \n                \n            data.loc[data_index, 'partner_side'] = partner_side\n            data.loc[data_index, 'partner_half'] = partner_half\n            \n            data.loc[data_index, 'player_side'] = player_side\n            data.loc[data_index, 'player_half'] = player_half\n            \n            avg_player_speed = 0\n            avg_partner_speed = 0\n            \n            \"\"\"\n            for y in range(0, i):\n                p_index = p1[y]\n                p2_index = p2[y]\n                \n                avg_player_speed += player_coords.loc[p_index]['dis'] * 0.9144\n                avg_partner_speed += partner_coords.loc[p2_index]['dis'] * 0.9144\n                \n            #data.loc[data_index, 'player_avg_speed'] = (avg_player_speed \/ i) * 10\n            #data.loc[data_index, 'partner_avg_speed'] = (avg_partner_speed \/ i) * 10\n            \"\"\"\n            # Nombre de joueurs dans le p\u00e9rim\u00e8tre \u00e0 l'impact 5 yards\n            \n            perimeter_players = 0\n            for index in ngs[(ngs.GameKey == GameKey) & (ngs.PlayID == PlayID) & (ngs.Time == player_coords.loc[player_index]['Time'])].index:\n                perimeter_player = ngs.loc[index]\n                distance = math.sqrt((player_coords.loc[player_index]['x'] - perimeter_player[(perimeter_player.GameKey == GameKey)]['x'])**2 + (player_coords.loc[player_index]['y'] - perimeter_player[(perimeter_player.GameKey == GameKey)]['y'])**2)\n                \n                if distance < 3:\n                    perimeter_players += 1\n            \n            perimeter_players -= 2\n            data.loc[data_index, 'perimeter_players'] = perimeter_players\n            \n            return True\n        \n\nfor i in data.index.tolist():\n    PlayID = data.loc[i]['PlayID']\n    GameKey = data.loc[i]['GameKey']\n    GSISID = float(data.loc[i]['GSISID'])\n    \n    if str(data.loc[i]['Primary_Partner_GSISID']) != 'nan' and str(data.loc[i]['Primary_Partner_GSISID']) != 'Unclear':\n        Partner_GSISID = float(data.loc[i]['Primary_Partner_GSISID'])\n        \n        find_impact(PlayID, GameKey, GSISID, Partner_GSISID, i)\n\ndata.head()","f6f33d9d":"# Creating a dataframe to show turf relative concussions rate\ngraph_data = pd.DataFrame()\n\nfor turf in gd['Turf'].unique():\n    # data cleaning\n    if isinstance(turf, str) and turf.startswith('nat'):\n        turf = 'natural grass'\n    \n    if gd[(gd.Turf == turf)]['Turf'].count() >= 5:\n\n        graph_data.loc[turf, 'Total'] = gd[(gd.Turf == turf)]['Turf'].count()\n        graph_data.loc[turf, 'Concussions'] = data[(data.turf == turf)]['turf'].count()\n        graph_data.loc[turf, 'NoConcussions'] = gd[(gd.Turf == turf)]['Turf'].count() - data[(data.turf == turf)]['turf'].count()\n    \n# Sorting the data!\ngraph_data = graph_data.sort_values(by=['Total'])\n\nind = np.arange(len(graph_data))\nwidth = 0.7\n\n# Putting a part of the plot above the other one\np1 = plt.bar(ind, graph_data['Concussions'].tolist(), width, yerr=None, color='red')\np2 = plt.bar(ind, graph_data['NoConcussions'].tolist(), width, yerr=None, color='lightblue', bottom=graph_data['Concussions'].tolist())\n\n# Labelling, legends, etc...\nplt.ylabel('Match count')\nplt.title('Concussion relative to total games on each turf (at least 5 games played on it)')\nplt.xticks(ind, graph_data.index.tolist(), rotation=90)\nplt.yticks(np.arange(0, 250, 25))\nplt.legend((p1[0], p2[0]), ('Match with a punt concussion', 'Match with no punt concussion'))\n\nplt.show()","1c56288b":"# Creating a dataframe to show weather relative concussions rate\ngraph_data = pd.DataFrame()\nfor weather in gd['GameWeather'].unique().tolist():\n    if type(weather) is str and gd[(gd.GameWeather == weather)]['GameWeather'].count() >= 5:\n        \n        graph_data.loc[weather, 'Total'] = gd[(gd.GameWeather == weather)]['GameWeather'].count()\n        graph_data.loc[weather, 'Concussions'] = data[(data.weather == weather)]['weather'].count()\n        graph_data.loc[weather, 'NoConcussions'] = gd[(gd.GameWeather == weather)]['GameWeather'].count() - data[(data.weather == weather)]['weather'].count()\n    \n\n# Sorting the data!\ngraph_data = graph_data.sort_values(by=['Total'])\n\nind = np.arange(len(graph_data))\nwidth = 0.7\n\n# Putting a part of the plot above the other one\np1 = plt.bar(ind, graph_data['Concussions'].tolist(), width, yerr=None, color='red')\np2 = plt.bar(ind, graph_data['NoConcussions'].tolist(), width, yerr=None, color='lightblue', bottom=graph_data['Concussions'].tolist())\n\n# Labelling, legends, etc...\nplt.ylabel('Match count')\nplt.title('Concussion relative to total games for each weather (at least 5 games played on it)')\nplt.xticks(ind, graph_data.index.tolist(), rotation=90)\nplt.yticks(np.arange(0, 170, 15))\nplt.legend((p1[0], p2[0]), ('Match with a punt concussion', 'Match with no punt concussion'))\n\nplt.show()","abc087ca":"# Creating a dataframe to show start time relative concussions rate\ngraph_data = pd.DataFrame()\n\nfor start_time in gd['Start_Time'].unique().tolist():\n    if gd[(gd.Start_Time == start_time)]['Start_Time'].count() >= 5:\n        graph_data.loc[start_time, 'Total'] = gd[(gd.Start_Time == start_time)]['Start_Time'].count()\n        graph_data.loc[start_time, 'Concussions'] = data[(data.start_time == start_time)]['start_time'].count()\n        graph_data.loc[start_time, 'NoConcussions'] = gd[(gd.Start_Time == start_time)]['Start_Time'].count() - data[(data.start_time == start_time)]['start_time'].count()\n\n\n# Sorting the data!\ngraph_data = graph_data.sort_values(by=['Total'])\n\nind = np.arange(len(graph_data))\nwidth = 0.7\n\n# Putting a part of the plot above the other one\np1 = plt.bar(ind, graph_data['Concussions'].tolist(), width, yerr=None, color='red')\np2 = plt.bar(ind, graph_data['NoConcussions'].tolist(), width, yerr=None, color='lightblue', bottom=graph_data['Concussions'].tolist())\n\n# Labelling, legends, etc...\nplt.ylabel('Match count')\nplt.title('Concussion relative to total games for each start time (at least 5 games played on it)')\nplt.xticks(ind, graph_data.index.tolist(), rotation=90)\nplt.yticks(np.arange(0, 210, 15))\nplt.legend((p1[0], p2[0]), ('Match with a punt concussion', 'Match with no punt concussion'))\n\nplt.show()","81e2ee4d":"# Creating a dataframe to show game day relative concussions rate\ngraph_data = pd.DataFrame()\nfor game_day in gd['Game_Day'].unique().tolist():\n    graph_data.loc[game_day, 'Total'] = gd[(gd.Game_Day == game_day)]['Game_Day'].count()\n    graph_data.loc[game_day, 'Concussions'] = data[(data.game_day == game_day)]['game_day'].count()\n    graph_data.loc[game_day, 'NoConcussions'] = gd[(gd.Game_Day == game_day)]['Game_Day'].count() - data[(data.game_day == game_day)]['game_day'].count()\n    \n\n# Sorting the data!\ngraph_data = graph_data.sort_values(by=['Total'])\n\nind = np.arange(len(graph_data))\nwidth = 0.7\n\n# Putting a part of the plot above the other one\np1 = plt.bar(ind, graph_data['Concussions'].tolist(), width, yerr=None, color='red')\np2 = plt.bar(ind, graph_data['NoConcussions'].tolist(), width, yerr=None, color='lightblue', bottom=graph_data['Concussions'].tolist())\n\n# Labelling, legends, etc...\nplt.ylabel('Match count')\nplt.title('Concussion relative to total games for each game')\nplt.xticks(ind, graph_data.index.tolist(), rotation=90)\nplt.yticks(np.arange(0, 450, 25))\nplt.legend((p1[0], p2[0]), ('Match with a punt concussion', 'Match with no punt concussion'))\n\nplt.show()","c4a8bed4":"sns.countplot(y='player_role', data=data, order=data['player_role'].value_counts().index)\nplt.title('Role victim of concussion count')\nplt.ylabel('Roles')\nplt.show()","c7fb1507":"sns.countplot(y='partner_role', data=data, order=data['partner_role'].value_counts().index)\nplt.title('Partner role count involved in concussion')\nplt.ylabel('Roles')\nplt.show()","8c608577":"corr_data = data[(data['partner_role'] == 'PR') | (data['player_role'] == 'PR')]\ncorr_data = corr_data.drop(['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'Primary_Partner_GSISID','collision_time1','collision_time2', 'video_url', 'description'], axis=1)\nsubcorr = corr_data.corr()\n\nfor column in corr_data.columns:\n    if column not in subcorr.columns.tolist():\n        corr_data[column] = corr_data[column].astype('category').cat.codes\n\ncorr = corr_data.corr()\nf, ax = plt.subplots(figsize=(16, 8))\nheatmap = sns.heatmap(corr)","7de4e317":"sns.countplot(y='Player_Activity_Derived', data=data[(data['player_role'] == 'PR')], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Punt returner (as victim) activity')\nplt.ylabel('Activity')\nplt.show()","6bc810d0":"sns.countplot(y='Player_Activity_Derived', data=data[(data['partner_role'] == 'PR')], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Victim activity when the partner is a Punt Returner')\nplt.ylabel('Activity')\nplt.show()","6d16a46d":"sns.countplot(y='Primary_Impact_Type', data=data[(data['player_role'] == 'PR')], order=data['Primary_Impact_Type'].value_counts().index)\nplt.title('Punt returner (as victims) impact type')\nplt.ylabel('Impact type')\nplt.show()","fe90a468":"sns.countplot(y='Primary_Impact_Type', data=data[(data['partner_role'] == 'PR')], order=data['Primary_Impact_Type'].value_counts().index)\nplt.title('Victim impact type when the partner is a Punt Returner')\nplt.ylabel('Impact type')\nplt.show()","e58c8921":"sns.countplot(y='Primary_Impact_Type', data=data[(data['partner_role'] == 'PR') | (data['player_role'] == 'PR')], order=data['Primary_Impact_Type'].value_counts().index)\nplt.title('Sum of both cases')\nplt.show()","46f28495":"# merging punt returners partners\npart1 = data[(data['player_role'] == 'PR')]['partner_role']\npart2 = data[(data['partner_role'] == 'PR')]['player_role']\n\npartners = pd.DataFrame()\nfor i in part1.index:\n    partners.loc[i, 'partner_role'] = part1.loc[i]\n\nfor i in part2.index:\n    partners.loc[i, 'partner_role'] = part2.loc[i]\n\nsns.countplot(y='partner_role', data=partners, order=partners['partner_role'].value_counts().index)\nplt.title('Punt returner partners')\nplt.ylabel('Role')\nplt.show()","0b79ea18":"sns.countplot(y='partner_side', data=data[(data['player_role'] == 'PR') & (data['Player_Activity_Derived'] == 'Tackled')], order=data['player_side'].value_counts().index)\nplt.title('Side from which Punt Returners (as victims) are tackled')\nplt.ylabel('side')\nplt.show()","dd9c1e81":"sns.countplot(y='player_side', data=data[(data['partner_role'] == 'PR') & (data['Player_Activity_Derived'] == 'Tackling')], order=data['player_side'].value_counts().index)\nplt.title('Side from which the player (as victim) tackles the punt returner')\nplt.ylabel('side')\nplt.show()","f20f6bc9":"part1 = data[(data['player_role'] == 'PR')]['player_speed']\npart2 = data[(data['partner_role'] == 'PR')]['partner_speed']\n\nresult = pd.DataFrame()\nfor i in part1.index:\n    result.loc[i, 'speed'] = part1.loc[i]\n\nfor i in part2.index:\n    result.loc[i, 'speed'] = part2.loc[i]\n\nresult = result.dropna()\nsns.distplot(result['speed'])\nplt.title('Punt returners (as victims) speed distribution')\nplt.xlabel('speed in m\/s')\nplt.show()","c6d02f2b":"part1 = data[(data['player_role'] == 'PR')]['partner_speed']\npart2 = data[(data['partner_role'] == 'PR')]['player_speed']\n\nresult = pd.DataFrame()\nfor i in part1.index:\n    result.loc[i, 'speed'] = part1.loc[i]\n\nfor i in part2.index:\n    result.loc[i, 'speed'] = part2.loc[i]\n\nresult = result.dropna()\nsns.distplot(result['speed'])\nplt.title('Victims speed distribution when tackling')\nplt.xlabel('speed in m\/s')\nplt.show()","68bdfc8d":"corr_data = data[(data['partner_role'] != 'PR') & (data['player_role'] != 'PR')]\ncorr_data = corr_data.drop(['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'Primary_Partner_GSISID','collision_time1','collision_time2', 'video_url', 'description'], axis=1)\nsubcorr = corr_data.corr()\n\nfor column in corr_data.columns:\n    if column not in subcorr.columns.tolist():\n        corr_data[column] = corr_data[column].astype('category').cat.codes\n\ncorr = corr_data.corr()\nf, ax = plt.subplots(figsize=(18, 9))\nheatmap = sns.heatmap(corr)","0f99147c":"sns.countplot(y='ball_possession', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR')], order=data['ball_possession'].value_counts().index)\nplt.title('Ball possession')\nplt.ylabel('Victim from punting team ? (PRs excluded)')\nplt.show()","a0da55a4":"sns.countplot(y='Player_Activity_Derived', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR')], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Both sides - Victim activity (PRs excluded)')\nplt.ylabel('Activity')\nplt.show()","d01b396c":"has_ball = True\nsns.countplot(y='Player_Activity_Derived', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == has_ball)], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Punting team - Victim activity (PRs excluded)')\nplt.ylabel('Activity')\nplt.show()","c594cdd6":"has_ball = False\nsns.countplot(y='Player_Activity_Derived', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == has_ball)], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Returning team - Victim activity (PRs excluded)')\nplt.ylabel('Activity')\nplt.show()","5840ad5f":"sns.countplot(y='Primary_Impact_Type', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR')], order=data['Primary_Impact_Type'].value_counts().index)\nplt.title('Impact types (PRs excluded)')\nplt.ylabel('Impact')\nplt.show()","469edabf":"sns.countplot(y='player_role', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == True)], order=data['player_role'].value_counts().index)\nplt.title('Punting team - Victim role (PRs excluded)')\nplt.ylabel('Role')\nplt.show()","f2ed0519":"sns.countplot(y='player_role', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == False)], order=data['player_role'].value_counts().index)\nplt.title('Returning team - Victim role (PRs excluded)')\nplt.ylabel('Role')\nplt.show()","f4a2726c":"sns.countplot(y='partner_role', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == False)], order=data['player_role'].value_counts().index)\nplt.title('Returning team - Blocked partners (PRs excluded)')\nplt.ylabel('Role')\nplt.show()","b6d5601a":"sns.countplot(y='partner_role', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['ball_possession'] == True)], order=data['partner_role'].value_counts().index)\nplt.title('Player roles involved in concussions (PRs excluded)')\nplt.show()","0366c95c":"sns.distplot(data[(data['player_role'] != 'PR') & (data['Player_Activity_Derived'] =='Tackling')]['partner_speed'].dropna())\nsns.distplot(data[(data['player_role'] != 'PR') & (data['Player_Activity_Derived'] =='Tackling')]['player_speed'].dropna(), hist_kws={'alpha':0.25})\nplt.legend(['Target speed','Victim speed'])\nplt.title('Tackling speed distribution (PRs excluded)')\nplt.xlabel('speed m\/s')\nplt.show()","71c01207":"sns.distplot(data[(data['player_role'] != 'PR') & (data['Player_Activity_Derived'] == 'Blocking')]['partner_speed'].dropna())\nsns.distplot(data[(data['player_role'] != 'PR') & (data['Player_Activity_Derived'] == 'Blocking')]['player_speed'].dropna(), hist_kws={'alpha':0.25})\nplt.legend(['Target speed','Victim speed'])\nplt.title('Blocking speed distribution (PRs excluded)')\nplt.xlabel('speed m\/s')\nplt.show()","9b3b431d":"sns.countplot(y='partner_side', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR')], order=data['player_side'].value_counts().index)\nplt.title('Side from which partner comes leading to concussion')\nplt.ylabel('side')\nplt.show()","2ae609a0":"sns.countplot(y='Player_Activity_Derived', data=data[(data['player_role'] != 'PR') & (data['partner_role'] != 'PR') & (data['player_side'] == 'behind')], order=data['Player_Activity_Derived'].value_counts().index)\nplt.title('Activities leading to concussion when coming from behind the target (PRs excluded)')\nplt.ylabel('Activity')\nplt.show()","48d52fd9":"sns.countplot(y='partner_side', data=data[(data['Friendly_Fire'] == 'No')], order=data['partner_side'].value_counts().index)\nplt.title('Side from which partner coming from which leads to concussion | Excluded friendly fire')\nplt.ylabel('side')\nplt.show()","09f3ae3e":"sns.countplot(y='illegal', data=data, order=data['illegal'].value_counts().index)\nplt.title('Illegal move leading to concussion count')\nplt.ylabel('Move illegal ?')\nplt.show()","b3124ddf":"for i in play_info.index:\n    if 'punts' in play_info.loc[i, 'PlayDescription'].split(' '):\n        description = play_info.loc[i, 'PlayDescription'].split(' ')\n        play_info.loc[i, 'punt_dist'] = int(description[description.index('punts') + 1])\n    else:\n        play_info.loc[i, 'punt_dist'] = -1\n        \nfor i in data.index:\n    if 'punts' in data.loc[i, 'description'].split(' '):\n        description = data.loc[i, 'description'].split(' ')\n        data.loc[i, 'punt_dist'] = int(description[description.index('punts') + 1])\n    else:\n        data.loc[i, 'punt_dist'] = -1\n\nsns.distplot(play_info[play_info.punt_dist > 0]['punt_dist'])\nsns.distplot(data[data.punt_dist > 0]['punt_dist'], hist_kws={'alpha':0.25})        \nplt.title('Punt distance distribution')\nplt.legend(['All punts', 'Punt with concussion'])\nplt.xlabel('Punt distance in yards')\nplt.show()","cea58729":"sample = data['perimeter_players'].dropna()\nsns.distplot(sample)\nplt.title('Player in perimeter distribution')\nplt.xlabel('Number of players in a 3 yards perimeter')\nplt.show()","87886596":"concussion_gamekey = data['GameKey'].values.tolist()\nconcussion_punts = 0\nnormal_punts = 0\n\nnormal_gamekey = play_info['GameKey'].unique().tolist()\nfor i in normal_gamekey:\n    if i in concussion_gamekey:\n        concussion_punts += len(play_info[play_info.GameKey == i]['Play_Type'])\n    else:\n        normal_punts += len(play_info[play_info.GameKey == i]['Play_Type'])\n        \nprint('Average punt in a game with concussion {} ({} punts \/ {} games)'.format(concussion_punts\/ len(concussion_gamekey),concussion_punts , len(concussion_gamekey)))\nprint('Average punt in a game with no concussion {} ({} punts \/ {} games)'.format(normal_punts\/ len(normal_gamekey), normal_punts , len(normal_gamekey)))","2b422240":"A high density of people in the same place leads to people colliding, at high speed this doesn't often end up in a good way","37083d84":"### 2.3. Start time analysis\nThe hypothesis for the start time is that matches in the evening might reduce the visibility.","1a528302":"Behind is the most frequent side in both cases, even though we are working with pretty small datasets, we can expect this to be a great parameter\n#### 3.1.5. Punt returners speed distribution\nIn this category keep in mind that 10 m\/s is above Ussain Bolt speed world record, 5 m\/s is considered the average speed of a marathon runner, 2 m\/s is considered the speed of someone walking.","ecc3ebdd":"Given the appendix, mostly players from the sides and of the frontline","f18060da":"### 4. Play analysis focused on game\n#### 4.1. Move legality regarding game rules\nLet's watch parameters related to the moves leading to concussions, are they illegal ? are they long or short punt, is the relative ratio abnormal ?","39f186f6":"### 3.1. Punt returners\nAs seen in the 2 above graphs, in 13 out of the 37 concussions (33+%) punt returners are involved in concussion plays. \nLet's separate the punt returners from the rest.\n\nFirst we'll build a correlation matrix to try to get some insights about the data.\n","3291e177":"100% of punt returners (as victims) are tackled,  \nAnd when the punt returner is the target of the victim :","b780686c":"For the rest of the players the activities leading to injury are mostly related to blocking (65+%).  \nEven though it is hard to tell with such a small sample we can emit the hypothesis that the player the most subject to concussion is the one being blocked, but as said we would need a larger sample to determine such a thing.\n\n#### 3.2.3. Impact types","5501f687":"From this graph we can see that the players from the punting team are the more likely to get concussed, let's review their activities, impact types, roles\n\n#### 3.2.2. Activities","9e83a7df":"100% of concussions when the punt returner is the partner are happening on tackle.  \nEven though the sample size is pretty small we can assume that most of the victims are the players tackling and not the one tackled.  \nThe difference between injured tacklers and injured tackled is 3 and 3\/13 can be approximated to 20 - 25%, relative to the sample of the dataset this is significative it might not be with a bigger dataset.\n#### 3.1.2. Impact types\n","55c51202":"#### 3.2.1. Ball posession\nThe team that has the ball possession is the team currently punting, whereas the team without ball possession is the team doing the punt return.","f1801def":"The speed difference is important and should be something to look at out when building the rules","2ed13b4e":"Again the impacts are spread pretty much equally between Helmet-to-body and helmet-to-helmet. Even when looking in detail it stays pretty much the same\n\n#### 3.2.4. Roles\nWho is injuring who","67f4e612":"### 2.2. Weather analysis\nThe hypothesis for the weather type is that when raining the ground might get slippy or the adherence getting low.","cc4552f6":"The roles of the concussed players are mostly in the scrimmage","483e7b1a":"Hello,\n\nHere is our submission to the NFL Punt Analytics Competition, you'll see that in this kernel we're not gonna dive directly into the statistics, We believe it is important to take some time to think about what approach should we have regarding the data, what are the given parameters that we can change, what has been done in other sports, other leagues and other things.\nWhen this work is done, I'll then proceed to doing a statistics analysis and give a report of what I found.\n\n## Table of contents\n### I. Approaching the data  \n1. Punt plays  \n[1.1. The incentive behind punt plays](#1.1.-The-incentive-behind-punt-plays)  \n[1.2. Why are punt plays a source of concussions](#1.2.-Punt-plays,-a-source-of-concussions)  \n\n2. What parameters can be changed ?  \n[2.1. Game environment](#2.1.-Game-environment)  \n[2.2. Games rules (teams, players, referees)](#2.2.-Games-rules-(teams,-players,-referees))  \n\n3. What has been done ?  \n[3.1. In the Canadian Football League](#3.1-What-has-been-done-in-American-Football)    \n[3.2. In French Rugby](#3.2-What-has-been-done-in-Rugby)    \n\n[4. The way to approach new rules](#4.-The-way-to-approach-new-rules)  \n\n### II. Analyzing the data  \n[1.  Building the dataframe](#1.-Building-the-Dataframe)  \n\n2. Game environment analysis  \n[2.1. Turf analysis](#2.1.-Turf-analysis)  \n[2.2. Weather analysis](#2.2.-Weather-analysis)  \n[2.3. Match start time analysis](#2.3.-Start-time-analysis)  \n[2.4. Match day analysis](#2.4.-Match-day-analysis)  \n\n3. Play analysis focused on players  \n[3.1. Punt returners](#3.1.-Punt-returners)  \n[3.2. The rest](#3.2.-The-rest)  \n\n[4. Play analysis focused on game](#4.-Play-analysis-focused-on-game)\n\n[5. Conclusion](#5.-Conclusion)\n\n[6. Bibliography](#6.-Bibliography)\n","409b83f3":"Given the appendix for return team these players are again from the frontline\n![](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/NFL%20player%20safety%20analytics\/punt_return.png)","4b698a7b":"### 6. Bibliography  \n[[1]  https:\/\/calgaryherald.com](https:\/\/calgaryherald.com\/sports\/football\/cfl\/cfls-glen-johnson-explains-the-new-rules-for-2015) - Recap on 2015 rule change  \n[[2] https:\/\/sudouest.fr](https:\/\/www.sudouest.fr\/2018\/07\/05\/rugby-quelles-sont-les-nouvelles-regles-pour-proteger-la-sante-des-joueurs-5206706-773.php) - French rugby  \n[[3] https:\/\/bbc.com](https:\/\/www.bbc.com\/sport\/rugby-union\/43802462) - Rugby  \n[[4] playsmartplaysafe.com](https:\/\/www.playsmartplaysafe.com\/newsroom\/reports\/2017-injury-data\/) - Concussion report","ed8bb5a8":"### 3.3 Global role analysis\n#### 3.3.1. Global orientation","f4458797":"Given the role appendix 1 in the dataset description : ![](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/NFL%20player%20safety%20analytics\/punt_coverage.png)   \nWe clearly see that the majority of players suffering or inflicting concussions to punt returners are the players from the front line in the punting team","421d5bd0":"The punt returners are \"easy-targets\", the collision happens between tacklers at high speed and punt returners at low speed.\n\n### 3.2. The rest\nNow that we've studied the punt returners case, let's try to understand the remaining concussions play and try to find something regarding them.  \nIn this section we will mostly focus on the rest of the players by excluding the data from concussions involving punt returners as those can be studied apart.  \nFor a clear understanding I'll add a \"PRs included\" or \"PRs excluded\" in graph titles to tell if punt returners related concussions are part of the data.\n\nLet's build a correlation matrix first to get some insights.","07288250":"#### 3.2.5 Speed\nSome interesting distribution concerning tackling and blocking","5536fa6f":"### 5. Conclusion\n#### Micro-game rules :\n**1. Forbid tackling \/ blocking on players that have a low speed (2 to 3 m\/s = walking), especially do not tackle the punt returner until he starts running (let him 2 to 3 seconds)**\n- **Goal : ** We've seen  that there usually was a huge speed difference in impacts leading to concussions.  \n- **Risks :** Slow down not expected by other players on the field that could create other impacts ? (however the player has a clear trajectory if the target is not moving fast so it shouldn't happen). Optionally this will avoid people gathering in an area.  \n- **Advantages :** Avoids contact when not needed, avoids huge speed difference  \n- **Disadvantages :** Can slow down the game a bit (make it less spectacular?), feinting slowing down or other players accelerating might make tackles and blocks harder to perform ?\n\n**2. Not really a rule : giving a side to avoid helmet impact in front collision**\n- **Goal :** This is something we've taken from the aviation field to avoid front collision players should be given a side to put their head on to avoid the helmet-helmet impact which at high speed is a high source of concussion. This side can be left or right but has to be the same for every player.\n- **Risks :** None   \n- **Advantages  :** Pretty simple to setup, doesn't cost any money, doesn't impact the hype.  \n- **Disadvantages :** Players might not think about it.\n\n**3. Forbid tackling \/ blocking from behind the opponent**\n- **Goal :** Reduces the number of dangerous impacts  \n- **Risks :** None    \n- **Advantages :** Easy to setup. will force the players to think more about their placement which adds strategy.\n- **Disadvantages :** Will make tackles harder to perform in a good way\n\n**4. Forbid very low height tackling**\n- **Goal :** Some of the given plays were made of players diving head first in order to perform low height tackles, tackling too high or too low is too is pretty dangerous, tackling too low might generate spine problems, it raises chances of helmet-to-ground concussions. So tackling too low should be forbidden.\n- **Risks :** None  \n- **Advantages :** Same as forbidding tackles \/ blocks from behind\n- **Disadvantages :** None\n\n#### Macro-game rules : \n** 1. Teams with concussed players should receive sanctions (ex: lose an amount of point on the overall leaderboard)  **  \n- **Goal :** With such a sanction we create a link between players health and team success, so it incentivizes team to avoid concussion, in order to do so they will deploy money towards prevention, better training, safe training methods (15% of concussion happen during training [[4]](#6.-Bibliography)), a better medical staff, .... Also incentivizes player to play safe and avoid being a burden to their teammates.   \n- **Risk :** Teams not declaring concussion, in order to avoid the sanction should receive an even worse sanction is needed as teams should not be playing with their players health (ex: disqualified from playsoff)  \n- **Advantages :** Doesn't cost any money to the league, doesn't impact the show, will help in the long run for all type of injuries, preserves the show, not hard to apply with the current concussion checking system.\n- **Disadvantages :** Teams won't like having to spend money\n\n** 2. Limit the number of punt per games to 4 per team for the entire match**\n- **Goal :** As punts are a big source of concussion limiting them is a simple way to avoid the problem, We've seen that games with a concussion have an average of more than 10 punts whereas games with no concussion have an average below 10 punts. This is not a magic formula, but punts are requiring a lot of resources for players so limiting them might be a good way to go.  \n- **Risk :** None  \n- **Advantages :** Doesn't cost any money, preserves the show, adds a new dimension to strategies  \n- **Disadvantages :** Might be disliked by coaches\n\n**3. A rule for referees : Ability to send supposed concussed players on the bench (decision helped by medical staff)**\n- **Goal :** Avoid worsening a concussion situation\n- **Risk :** Wrong decision from the referee  \n- **Advantages :** Doesn't make the player case worst\n- **Disadvantages :** Team,player might contest the decision, it's a hard decision to take even with the help of a competent medical staff, costs money and is hard to setup","499c11c9":"#### 4.4. Average number of punt per games","8cf40d36":"#### 3.1.3. Punt returners partners\nTrying to find out who is tackling the punt returners","b45cc80e":"## II. Analyzing the data\n### 1. Building the Dataframe\nGathering all the data in a single dataframe to make it easier to analyze\n\nUsing [@kmader's kernel as model](https:\/\/www.kaggle.com\/kmader\/convert-to-feather-for-use-in-other-kernels) to handle all the NGS files.","c418cb6d":"### 2.4. Match day analysis\nHad no clear hypothesis for this one but wanted to see it.","399dc396":"#### 3.1.1. Activities\nActivities performed in-game","617f3b9a":"Impacts are equally spread between helmet-to-helmet and helmet-to-body, there is a no significant difference between when the victim is the punt returner or when the partner is the punt returner.\nIt might come from the small sample size we've been given but that's not enough to conclude anything about impacts on punt returners.","5276bac4":"#### 3.1.4. Orientations","bee47f50":"## I. Approaching the data\n### 1.1. The incentive behind punt plays\nA punt play is a last resort solution, it's usually done on the final down available, at first it seems like a high risk high reward scheme :  \n__Risks :__\n- The opposing team takes control of the ball and tries a punt return\n\n__Rewards :__\n- Avoid a turnover on downs\n  * If done well, it allows to score points\n  * If the punt returner gets the ball he can still be tackled\n\nEven if at first it seems like a high risk high reward, it is a medium-low risk high reward scheme so there is a huge incentive to do punt plays as they tend to be really profitable for the team doing them.\n\n### 1.2. Punt plays, a source of concussions\nDuring a punt play players make a scrimmage, which leads to contact between them.\nPlus in case the punt returner gets the ball, the opposite team will try to tackle him in order to regain control of the ball.\n\nWhich is why punt plays are an incentive to contact between players.\nOf course contact at full speed while trying to tackle the punt returner is far different from contact during the scrimmage and we'll see later what is the more dangerous and what causes the most concussions.\n\n### 2.1. Game environment\nWhat we define as the game environment is the type of turf, the weather, the start time of the game.\nCan we change those and would it really be an interesting change ?   \nWell as an example if there is a clear correlation between raining and concussions for example it would be wise to delay match when it rains on outdoor stadiums. This type of change would work well for the turf type of the weather.  \n\nConsidering the time at which the match starts or the day of the match, it seems normal that the majority of matches are played during the weekend or in the evening so when searching for correlations about that, we should keep in mind this fact. Even if it was an important factor changing the dates of the matches would narrow the hype because people wouldn't be able to watch them.\n\n### 2.2. Games rules (teams, players, referees)\nThe game rules are the category where most of the changes should happen but what are the actors concerned by the games rules ?  \nFirst those changes could be about teams compositions, if we see that a certain team composition is related to concussions we should avoid it.  \nThose changes could also be about giving more rights to the referees, for example giving referees the right to suspend player that suffer from concussions or that tend to cause concussions.  \n\nThere are a lot of changes available within the game rules, but changing them might alter the most efficient tactic available so it should be changed wisely. There is no way in telling 100% accurately how changes in this category will affect the concussion rate.\n\n### 3.1 What has been done in American Football\nI found that a rule change relative to punt plays occured in 2015, here is what I found online about the rule change\n> The rule changes, in a nutshell, are:  \n- holding the interior five players from past the line of scrimmage until the ball is kicked on punts   \n- adding five-yard no-yards penalty to the end of the play   \n- **limiting contact on a receiver to five yards past the line of scrimmage**  \n- pushing the convert back to a 32-yard kick and advancing a two-point convert to the three-yard line   \n- no re-kick option on a kickoff which goes out of bounds;   \n- coach can no longer request a measurement   \n- the removal of a rule which made a slotback ineligible if he was too close to his offensive tackle.   \n\n[[1]](https:\/\/calgaryherald.com\/sports\/football\/cfl\/cfls-glen-johnson-explains-the-new-rules-for-2015)\n\nAlso some of the new rule change :\n- The setup zone\n- The use of helmet rule\n\n\n### 3.2 What has been done in Rugby\nI thought it would be interesting to take a look at rugby as this sport is also suffering from a high concussion rate,  \nFor the 2018 - 2019 season, the french rugby federation has adopted a list of rule change :\n> - The referee can send a player to bench if he detects clear signs of concussion, the resulting player change is not counted in the team total available player changes.  \n- Each team in the national league has to get a doctor and 2 physiotherapists in its staff\n\n[[2]](https:\/\/www.sudouest.fr\/2018\/07\/05\/rugby-quelles-sont-les-nouvelles-regles-pour-proteger-la-sante-des-joueurs-5206706-773.php) [[3]](https:\/\/www.bbc.com\/sport\/rugby-union\/43802462)\n\nThose give a good example of parameters that we can change, either giving more responsabilities to the referees, changing in game rules, changing strategic rules for the coachs.\n\n### 4. The way to approach new rules\nWe have 2 ways to approach this submission :\n- The first one is to have interesting parameters that can change the game directly from the players, i.e: rules concerning the micro-game\n- The second one is to have some rule changes for the strategic side of the game, i.e: rules concerning the macro-game","a4278373":"#### 4.3. Number of players near the incident\nWe thought it would be interesting to know how much players would be near the concussion","8ce1eeb1":"### 2. Game environment analysis\nThe idea here is to plot the match count and concussions count in a certain environment to see if there is an environment in which the ratio of concussion is really high compared to the number of games played in that environment.  \nWith some environments the sample rate is pretty low, so non-significative.\n\n### 2.1. Turf analysis\nThe hypothesis for the turf type is that a some type might have less adherence for example, in such a way that would disturb the player for their trajectory.","cd6c40e2":"Most of the moves are currently legal that's why our rule change should propose new things and not try to enforce existing rules.\n#### 4.2. Punt distance distribution\nLet's take a look at the distance distribution :","052ad9cd":"None of the hypothesis are validated as those graphs show a concussion count relative to the number of games played in each environment.  \nSo fixing the game environment might not be the way to go.  \nSome turfs don't have any concussions but they represent a small size in the given dataset (less than 50 games) so it's non-significant, we could attribute this to pure coincidence.  \n\n### 3. Play analysis focused on players\nFirstly let's try to find out what roles are the most involved in concussion plays.","78761831":"#### 3.2.6. Orientation","4c55f02a":"On this graph the punt distance distribution of the 6000+ punts from the play_information.csv is shown in blue, it's approximately the same as the distribution of the 37 punt where a concussion happens from the video_review.csv. So we can't conclude on that as it just means that the most frequent distance has the most concussions which seems logical. This graph would've given interesting insights if the distribution was not the same at all, for example if the red part was heavily shifted to the left."}}