{"cell_type":{"0d9356f1":"code","ecd9a048":"code","73ff9b71":"code","aa9dc4e8":"code","703643a6":"code","3314c254":"code","0ef4559a":"code","74c3e9c3":"code","3616ef8b":"code","46228bae":"code","461bbff2":"code","5c114a03":"code","5e8df452":"code","90448fa2":"code","dd8b0042":"code","fcd638a3":"code","f942a96b":"code","99c4a13e":"code","20b98813":"code","60d8df63":"code","3c94e584":"code","6cbf12ba":"code","6994a9e7":"code","90b1dd99":"code","ad20275c":"code","3c6d929c":"code","2272be91":"code","7d528784":"code","1855b5f1":"code","11305f57":"code","3f6657ff":"code","970efd1c":"code","9593da50":"code","aa04ee19":"code","218cbd48":"code","4ab1ae91":"code","d06f3a98":"code","f048d369":"code","28cf3458":"code","07d4ab72":"code","54be41dc":"code","3024aace":"code","09565545":"code","1f31acb9":"code","c8aa04a1":"code","e2dffe0c":"code","b7eb2a89":"code","aacb8e34":"code","ac9a70b4":"code","330f3d30":"code","21d368c7":"code","da73a21f":"code","7ded8ff1":"code","be36f696":"code","825aeaa6":"code","518a4caa":"code","3a6f123b":"code","d48c0d82":"code","c33843f2":"code","33c1a3bc":"code","1dad64d6":"code","8d4786fd":"code","8c324c30":"code","6a521c9f":"code","038cd4e2":"code","aaec9dff":"code","f31e7349":"code","88662876":"code","9aeafea0":"code","cef23b18":"code","1dd99303":"code","f3239a33":"code","70288300":"code","e64661dc":"code","5a55c065":"code","477719d9":"code","6963d311":"code","4e8cd8d1":"code","f6dd5f73":"code","3ca10418":"code","468dd61e":"code","966558bd":"code","8638f528":"code","f4bd425c":"code","32e24f7e":"code","db678223":"code","402d4ae8":"code","abbfd37b":"code","a6d639bb":"code","2797ea50":"code","f8be8f2f":"code","9b6eb682":"code","ae9af82a":"code","22f427fc":"code","64fbce05":"code","99191271":"code","144ffd68":"code","4bbd4f74":"code","4efcb95d":"code","a1e314a1":"markdown","0b56f81d":"markdown","8a49b1fb":"markdown","7ed2a076":"markdown","4f69c9d0":"markdown","6a60fb57":"markdown","2ad6afbd":"markdown","65be18f0":"markdown","b808f7ee":"markdown","48ddeb63":"markdown","86ded978":"markdown"},"source":{"0d9356f1":"!pip install astropy\n!pip install specutils","ecd9a048":"#GENERAL\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport matplotlib.cm as mtpltcm\nfrom mpl_toolkits.mplot3d import Axes3D\nimport random\nimport time\nimport math\nfrom math import sqrt\n\n#PATH PROCESS\n\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\nimport nibabel as nib\nimport csv\nfrom astropy.visualization import astropy_mpl_style\nfrom astropy.utils.data import get_pkg_data_filename\nfrom astropy.io import fits\nimport astropy\nfrom astropy import units as u \nimport astropy.wcs as fitswcs\nfrom specutils import Spectrum1D, SpectralRegion\nfrom astropy.cosmology import WMAP9 as Cosmology\n\n#IMAGE PROCESS\n\nfrom PIL import Image\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom tensorflow.keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom tensorflow.keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage.morphology as morph\nimport skimage.exposure as skie\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nimport matplotlib.patches as patches\nfrom IPython.display import HTML\nimport matplotlib.animation as animation\n\n#SCALER & TRANSFORMATION\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\nimport sklearn\n\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nfrom scipy import signal\nfrom scipy.fft import fftshift\n\n#IGNORING WARNINGS\n\nfrom warnings import filterwarnings\n\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)\nfilterwarnings(\"ignore\", category=RuntimeWarning)","73ff9b71":"def displaying_video(source):\n    \n    figure = plt.figure(figsize=(15,15))\n\n    Image_List = []\n    \n    for indexing in source:\n        \n        Read_IMG = plt.imshow(indexing, animated=True,cmap=\"nipy_spectral\")\n        plt.axis('off')\n        Image_List.append([Read_IMG])\n\n    Animation_Func = animation.ArtistAnimation(figure, Image_List, interval=750, repeat_delay=1000)\n    plt.close()\n    return Animation_Func","aa9dc4e8":"PATH_2021_1 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz11010_sx2.fits\"\nPATH_2021_2 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz11020_sx2.fits\"\nPATH_2021_3 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz11fcq_raw.fits\"\nPATH_2021_4 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz12010_sx2.fits\"\nPATH_2021_5 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz12020_sx2.fits\"\nPATH_2021_6 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz12fiq_raw.fits\"\nPATH_2021_7 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz14010_sx2.fits\"\nPATH_2021_8 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz14020_sx2.fits\"\nPATH_2021_9 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz14fuq_raw.fits\"\nPATH_2021_10 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz21010_sx2.fits\"\nPATH_2021_11 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz21020_sx2.fits\"\nPATH_2021_12 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz21wrq_raw.fits\"\nPATH_2021_13 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz22010_sx2.fits\"\nPATH_2021_14 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz22020_sx2.fits\"\nPATH_2021_15 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz22wxq_raw.fits\"\nPATH_2021_16 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz24010_sx2.fits\"\nPATH_2021_17 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz24020_sx2.fits\"\nPATH_2021_18 = \"..\/input\/pds70-20122021-fits-coded-data-nasa\/PDS70_2021_2012\/PDS70_2021\/DATA_PER_RANGE_DATE_2021\/oebz24xlq_raw.fits\"","703643a6":"READING_2021_1 = fits.open(PATH_2021_1)\nREADING_2021_2 = fits.open(PATH_2021_2)\nREADING_2021_3 = fits.open(PATH_2021_3)\nREADING_2021_4 = fits.open(PATH_2021_4)\nREADING_2021_5 = fits.open(PATH_2021_5)\nREADING_2021_6 = fits.open(PATH_2021_6)\nREADING_2021_7 = fits.open(PATH_2021_7)\nREADING_2021_8 = fits.open(PATH_2021_8)\nREADING_2021_9 = fits.open(PATH_2021_9)\nREADING_2021_10 = fits.open(PATH_2021_10)\nREADING_2021_11 = fits.open(PATH_2021_11)\nREADING_2021_12 = fits.open(PATH_2021_12)\nREADING_2021_13 = fits.open(PATH_2021_13)\nREADING_2021_14 = fits.open(PATH_2021_14)\nREADING_2021_15 = fits.open(PATH_2021_15)\nREADING_2021_16 = fits.open(PATH_2021_16)\nREADING_2021_17 = fits.open(PATH_2021_17)\nREADING_2021_18 = fits.open(PATH_2021_18)","3314c254":"OPENING_LIST_2021 = [READING_2021_10,READING_2021_11,READING_2021_12,\n                     READING_2021_13,READING_2021_14,READING_2021_15,\n                     READING_2021_16,READING_2021_17,READING_2021_18,\n                    READING_2021_1,READING_2021_2,READING_2021_3,READING_2021_4,\n                     READING_2021_5,READING_2021_6,READING_2021_7,READING_2021_8,READING_2021_9]","0ef4559a":"for x_comment in OPENING_LIST_2021:\n    print(\"\\n\")\n    print(x_comment[0].header.comments[\"TDATEOBS\"])\n    print(x_comment[0].header[\"TDATEOBS\"])\n    print(x_comment[0].header.comments[\"TTIMEOBS\"])\n    print(x_comment[0].header[\"TTIMEOBS\"])\n    print(\"---\"*10)\n    print(\"\\n\")","74c3e9c3":"for x_open in OPENING_LIST_2021:\n    print(\"\\n\")\n    print(x_open.info())\n    print(\"\\n\")","3616ef8b":"SPECTRAL_LIST = [\"gray\",\"jet\",\"hot\",\"prism\",\"nipy_spectral\",\n             \"gist_ncar\",\"gist_earth\",\"gist_stern\",\"flag\",\"gnuplot2\",'tab20b']","46228bae":"IMG_1_2021 = READING_2021_10[1].data\n#\nIMG_2_2021 = READING_2021_11[1].data\n#\nIMG_3_2021 = READING_2021_12[1].data\nIMG_3_2021_2 = READING_2021_12[4].data\nIMG_3_2021_3 = READING_2021_12[7].data\n#\nIMG_4_2021 = READING_2021_13[1].data\n#\nIMG_5_2021 = READING_2021_14[1].data\n#\nIMG_6_2021 = READING_2021_15[1].data\nIMG_6_2021_2 = READING_2021_15[4].data\nIMG_6_2021_3 = READING_2021_15[7].data\n#\nIMG_7_2021 = READING_2021_16[1].data\n#\nIMG_8_2021 = READING_2021_17[1].data\n#\nIMG_9_2021 = READING_2021_18[1].data\nIMG_9_2021_2 = READING_2021_18[4].data\nIMG_9_2021_3 = READING_2021_18[7].data\n#\nIMG_10_2021 = READING_2021_1[1].data\n#\nIMG_11_2021 = READING_2021_2[1].data\n#\nIMG_12_2021 = READING_2021_3[1].data\nIMG_12_2021_2 = READING_2021_3[4].data\nIMG_12_2021_3 = READING_2021_3[7].data\n#\nIMG_13_2021 = READING_2021_4[1].data\n#\nIMG_14_2021 = READING_2021_5[1].data\n#\nIMG_15_2021 = READING_2021_6[1].data\nIMG_15_2021_2 = READING_2021_6[4].data\nIMG_15_2021_3 = READING_2021_6[7].data\n#\nIMG_16_2021 = READING_2021_7[1].data\n#\nIMG_17_2021 = READING_2021_8[1].data\n#\nIMG_18_2021 = READING_2021_9[1].data\nIMG_18_2021_2 = READING_2021_9[4].data\nIMG_18_2021_3 = READING_2021_9[7].data","461bbff2":"IMG_2021_LIST = [IMG_1_2021,IMG_2_2021,IMG_3_2021,IMG_4_2021,IMG_5_2021,IMG_6_2021,IMG_7_2021,\n                IMG_8_2021,IMG_9_2021,IMG_10_2021,IMG_11_2021,IMG_12_2021,IMG_13_2021,IMG_14_2021,\n                IMG_15_2021,IMG_16_2021,IMG_17_2021,IMG_18_2021]","5c114a03":"EXT_2021_IMG = [IMG_3_2021_2,IMG_3_2021_3,\n               IMG_6_2021_2,IMG_6_2021_3,\n               IMG_9_2021_2,IMG_9_2021_3,\n               IMG_12_2021_2,IMG_12_2021_3,\n               IMG_15_2021_2,IMG_15_2021_3,\n               IMG_18_2021_2,IMG_18_2021_3]","5e8df452":"for x_spectrum in SPECTRAL_LIST:\n    \n    figure,axis = plt.subplots(1,9,figsize=(25,25))\n\n    axis[0].axis(\"off\")\n    axis[0].imshow(IMG_1_2021,cmap=x_spectrum)\n\n    axis[1].axis(\"off\")\n    axis[1].imshow(IMG_2_2021,cmap=x_spectrum)\n\n    axis[2].axis(\"off\")\n    axis[2].imshow(IMG_3_2021,cmap=x_spectrum)\n\n    axis[3].axis(\"off\")\n    axis[3].imshow(IMG_4_2021,cmap=x_spectrum)\n\n    axis[4].axis(\"off\")\n    axis[4].imshow(IMG_5_2021,cmap=x_spectrum)\n\n    axis[5].axis(\"off\")\n    axis[5].imshow(IMG_6_2021,cmap=x_spectrum)\n\n    axis[6].axis(\"off\")\n    axis[6].imshow(IMG_7_2021,cmap=x_spectrum)\n    \n    axis[7].axis(\"off\")\n    axis[7].imshow(IMG_8_2021,cmap=x_spectrum)\n    \n    axis[8].axis(\"off\")\n    axis[8].imshow(IMG_9_2021,cmap=x_spectrum)\n\n    plt.tight_layout()\n    plt.show()","90448fa2":"for x_spectrum in SPECTRAL_LIST:\n    \n    figure,axis = plt.subplots(1,9,figsize=(25,25))\n\n    axis[0].axis(\"off\")\n    axis[0].imshow(IMG_10_2021,cmap=x_spectrum)\n\n    axis[1].axis(\"off\")\n    axis[1].imshow(IMG_11_2021,cmap=x_spectrum)\n\n    axis[2].axis(\"off\")\n    axis[2].imshow(IMG_12_2021,cmap=x_spectrum)\n\n    axis[3].axis(\"off\")\n    axis[3].imshow(IMG_13_2021,cmap=x_spectrum)\n\n    axis[4].axis(\"off\")\n    axis[4].imshow(IMG_14_2021,cmap=x_spectrum)\n\n    axis[5].axis(\"off\")\n    axis[5].imshow(IMG_15_2021,cmap=x_spectrum)\n\n    axis[6].axis(\"off\")\n    axis[6].imshow(IMG_16_2021,cmap=x_spectrum)\n    \n    axis[7].axis(\"off\")\n    axis[7].imshow(IMG_17_2021,cmap=x_spectrum)\n    \n    axis[8].axis(\"off\")\n    axis[8].imshow(IMG_18_2021,cmap=x_spectrum)\n\n    plt.tight_layout()\n    plt.show()","dd8b0042":"for x_spectrum in SPECTRAL_LIST:\n    \n    figure,axis = plt.subplots(6,2,figsize=(28,28))\n\n    axis[0][0].axis(\"off\")\n    axis[0][0].imshow(IMG_3_2021_2,cmap=x_spectrum)\n    \n    axis[0][1].axis(\"off\")\n    axis[0][1].imshow(IMG_3_2021_3,cmap=x_spectrum)\n\n    axis[1][0].axis(\"off\")\n    axis[1][0].imshow(IMG_6_2021_2,cmap=x_spectrum)\n    \n    axis[1][1].axis(\"off\")\n    axis[1][1].imshow(IMG_6_2021_3,cmap=x_spectrum)\n\n    axis[2][0].axis(\"off\")\n    axis[2][0].imshow(IMG_9_2021_2,cmap=x_spectrum)\n    \n    axis[2][1].axis(\"off\")\n    axis[2][1].imshow(IMG_9_2021_3,cmap=x_spectrum)\n    \n    axis[3][0].axis(\"off\")\n    axis[3][0].imshow(IMG_12_2021_2,cmap=x_spectrum)\n\n    axis[3][1].axis(\"off\")\n    axis[3][1].imshow(IMG_12_2021_3,cmap=x_spectrum)\n\n    axis[4][0].axis(\"off\")\n    axis[4][0].imshow(IMG_15_2021_2,cmap=x_spectrum)\n    \n    axis[4][1].axis(\"off\")\n    axis[4][1].imshow(IMG_15_2021_3,cmap=x_spectrum)\n\n    axis[5][0].axis(\"off\")\n    axis[5][0].imshow(IMG_18_2021_2,cmap=x_spectrum)\n    \n    axis[5][1].axis(\"off\")\n    axis[5][1].imshow(IMG_18_2021_3,cmap=x_spectrum)\n\n\n    plt.tight_layout()\n    plt.show()","fcd638a3":"MAIN_2021_OBS = [IMG_3_2021,IMG_6_2021,IMG_9_2021,IMG_12_2021,IMG_15_2021,IMG_18_2021]","f942a96b":"for x_spectrum in SPECTRAL_LIST:\n    \n    figure,axis = plt.subplots(3,2,figsize=(28,28))\n\n    axis[0][0].axis(\"off\")\n    axis[0][0].imshow(IMG_3_2021,cmap=x_spectrum)\n    \n    axis[0][1].axis(\"off\")\n    axis[0][1].imshow(IMG_6_2021,cmap=x_spectrum)\n\n    axis[1][0].axis(\"off\")\n    axis[1][0].imshow(IMG_9_2021,cmap=x_spectrum)\n    \n    axis[1][1].axis(\"off\")\n    axis[1][1].imshow(IMG_12_2021,cmap=x_spectrum)\n\n    axis[2][0].axis(\"off\")\n    axis[2][0].imshow(IMG_15_2021,cmap=x_spectrum)\n    \n    axis[2][1].axis(\"off\")\n    axis[2][1].imshow(IMG_18_2021,cmap=x_spectrum)\n    \n    plt.tight_layout()\n    plt.show()","99c4a13e":"for x_img in MAIN_2021_OBS:\n    \n    plt.figure(figsize=(12,12))\n    plt.axis(\"off\")\n    plt.imshow(x_img,cmap=\"nipy_spectral\")\n    plt.colorbar(shrink=0.7,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    \n    plt.tight_layout()\n    plt.show()","20b98813":"for x_img in MAIN_2021_OBS:\n    \n    plt.figure(figsize=(12,12))\n    plt.axis(\"off\")\n    plt.imshow(x_img,cmap=\"flag\")\n    plt.colorbar(shrink=0.7,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    \n    plt.tight_layout()\n    plt.show()","60d8df63":"for x_img in MAIN_2021_OBS:\n    \n    plt.figure(figsize=(12,12))\n    plt.axis(\"off\")\n    plt.imshow(x_img,cmap=\"gray\")\n    plt.colorbar(shrink=0.7,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    \n    plt.tight_layout()\n    plt.show()","3c94e584":"IMG_3_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_3_2021.astype('float32'),\n                                      image_g=IMG_3_2021.astype('float32'),\n                                      image_b=IMG_3_2021.astype('float32'))\n\nIMG_6_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_6_2021.astype('float32'),\n                                      image_g=IMG_6_2021.astype('float32'),\n                                      image_b=IMG_6_2021.astype('float32'))\n\nIMG_9_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_9_2021.astype('float32'),\n                                      image_g=IMG_9_2021.astype('float32'),\n                                      image_b=IMG_9_2021.astype('float32'))\n\nIMG_12_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_12_2021.astype('float32'),\n                                      image_g=IMG_12_2021.astype('float32'),\n                                      image_b=IMG_12_2021.astype('float32'))\n\nIMG_15_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_15_2021.astype('float32'),\n                                      image_g=IMG_15_2021.astype('float32'),\n                                      image_b=IMG_15_2021.astype('float32'))\n\nIMG_18_2021_3D = astropy.visualization.make_lupton_rgb(image_r=IMG_18_2021.astype('float32'),\n                                      image_g=IMG_18_2021.astype('float32'),\n                                      image_b=IMG_18_2021.astype('float32'))","6cbf12ba":"MAIN_3D_2021_OBS = [IMG_3_2021_3D,IMG_6_2021_3D,IMG_9_2021_3D,IMG_12_2021_3D,IMG_15_2021_3D,IMG_18_2021_3D]","6994a9e7":"for x_img in MAIN_3D_2021_OBS:\n    \n    plt.figure(figsize=(12,12))\n    plt.axis(\"off\")\n    plt.imshow(x_img)\n    plt.colorbar(shrink=0.7,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    \n    plt.tight_layout()\n    plt.show()","90b1dd99":"for x_3D_img in MAIN_3D_2021_OBS:   \n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(x_3D_img)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(x_3D_img[:,:,0])\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","ad20275c":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = x_img\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(TARGET_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=1500)\n    plt.tight_layout()\n    plt.show()","3c6d929c":"for x_3D_img in MAIN_3D_2021_OBS:   \n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(x_3D_img)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(x_3D_img.flatten())\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","2272be91":"for x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=2,truncate=3*3)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(TARGET_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","7d528784":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=2,truncate=3*3)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(TARGET_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=1500)\n    plt.tight_layout()\n    plt.show()","1855b5f1":"Kernel_OPS = np.ones((7,7), np.uint8)\n\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=3*3)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(DILATE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(DILATE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","11305f57":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=2,truncate=3*3)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(DILATE_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=200)\n    plt.tight_layout()\n    plt.show()","3f6657ff":"for x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sato(x_3D_img,black_ridges=False)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(TARGET_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","970efd1c":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.sato(x_img,black_ridges=False)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(TARGET_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=1200)\n    plt.tight_layout()\n    plt.show()","9593da50":"Kernel_OPS = np.ones((9,9), np.uint8)\n\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.meijering(x_3D_img,mode=\"mirror\",black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ERODE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ERODE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","aa04ee19":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.meijering(x_img,black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(ERODE_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","218cbd48":"Kernel_OPS = np.ones((9,9), np.uint8)\n\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.meijering(x_3D_img,mode=\"mirror\",black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=2)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ERODE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ERODE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","4ab1ae91":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(DILATE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(DILATE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","d06f3a98":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.sobel(x_img)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(DILATE_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","f048d369":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    GAUS_IMG = gaussian_filter(TARGET_IMG,sigma=1,truncate=2*2)\n    DILATE_IMG = cv2.dilate(GAUS_IMG,Kernel_OPS,iterations=2)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(DILATE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(DILATE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","28cf3458":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    GAUS_IMG = gaussian_filter(TARGET_IMG,sigma=1,truncate=2*2)\n    DILATE_IMG = cv2.dilate(GAUS_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*0.8, D_G*8, D_B*20))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","07d4ab72":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    GAUS_IMG = gaussian_filter(TARGET_IMG,sigma=1,truncate=2*2)\n    DILATE_IMG = cv2.dilate(GAUS_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*255, D_B*20))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","54be41dc":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(ERODE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*200, D_G*0.1, D_B*200))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","3024aace":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(TARGET_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","09565545":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(TARGET_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","1f31acb9":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=4,multichannel=2.15)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(TARGET_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","c8aa04a1":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    GAUS_IMG = gaussian_filter(TARGET_IMG,sigma=1,truncate=2*2)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(GAUS_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(GAUS_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","e2dffe0c":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=3)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ERODE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ERODE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","b7eb2a89":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=2)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*10, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","aacb8e34":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=2,multichannel=2.15)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=2)\n    GAUS_IMG = gaussian_filter(DILATE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","ac9a70b4":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=2,multichannel=2.15)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=2)\n    GAUS_IMG = gaussian_filter(DILATE_IMG,sigma=1,truncate=2*2)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(GAUS_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","330f3d30":"Kernel_OPS = np.ones((2,2), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.hessian(x_3D_img,black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n    GAUS_IMG = gaussian_filter(ERODE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","21d368c7":"Kernel_OPS = np.ones((5,5), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.hessian(x_3D_img,black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n    GAUS_IMG = gaussian_filter(ERODE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","da73a21f":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.hessian(x_img,black_ridges=False)\n    ERODE_IMG = cv2.erode(TARGET_IMG,Kernel_OPS,iterations=1)\n    GAUS_IMG = gaussian_filter(ERODE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*0.7, D_B*0.2))\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(IMAGE_DSTACK.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","7ded8ff1":"Kernel_OPS = np.ones((5,5), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.difference_of_gaussians(x_3D_img,low_sigma=1)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n    GAUS_IMG = gaussian_filter(DILATE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","be36f696":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.difference_of_gaussians(x_img,low_sigma=1)\n    DILATE_IMG = cv2.dilate(TARGET_IMG,Kernel_OPS,iterations=1)\n    GAUS_IMG = gaussian_filter(DILATE_IMG,sigma=1,truncate=2*2)\n    \n    D_R,D_G,D_B = cv2.split(GAUS_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*20, D_G*0.7, D_B*0.2))\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(IMAGE_DSTACK.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","825aeaa6":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*0.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","518a4caa":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*0.7, D_B*0.2))\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(IMAGE_DSTACK.flatten(),\n                                                                           cmap=\"seismic\",pad_to=2000)\n    plt.tight_layout()\n    plt.show()","3a6f123b":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(IMAGE_DSTACK)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(IMAGE_DSTACK.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","d48c0d82":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(IMAGE_DSTACK.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","c33843f2":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    GAUS_IMG = gaussian_filter(IMAGE_DSTACK,sigma=1,truncate=5*5)\n    ERODE_IMG = cv2.dilate(GAUS_IMG,Kernel_OPS,iterations=2)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ERODE_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ERODE_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","33c1a3bc":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    SATO_IMG = filters.sato(IMAGE_DSTACK)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(SATO_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(SATO_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","1dad64d6":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    SATO_IMG = filters.sato(IMAGE_DSTACK,black_ridges=False)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(SATO_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(SATO_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","8d4786fd":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    ME_IMG = filters.meijering(IMAGE_DSTACK,alpha=0.02)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ME_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ME_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","8c324c30":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    ME_IMG = filters.meijering(IMAGE_DSTACK,alpha=0.02)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(ME_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","6a521c9f":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=3)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=2)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    ME_IMG = filters.meijering(IMAGE_DSTACK,alpha=0.02)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(ME_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(ME_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","038cd4e2":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    RND_IMG = filters.roberts_neg_diag(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(RND_IMG,cmap=\"gist_earth\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(RND_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","aaec9dff":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    RND_IMG = filters.roberts_neg_diag(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(RND_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","f31e7349":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    RND_IMG = filters.roberts_pos_diag(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(RND_IMG,cmap=\"gist_earth\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(RND_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","88662876":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=6)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    NIB_IMG = filters.threshold_niblack(IMAGE_DSTACK)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(NIB_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(NIB_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","9aeafea0":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=6)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    NIB_IMG = filters.threshold_niblack(IMAGE_DSTACK)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(NIB_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","cef23b18":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=3)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    NIB_IMG = filters.threshold_niblack(IMAGE_DSTACK)\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(NIB_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(NIB_IMG.flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","1dd99303":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=3)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=1)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    NIB_IMG = filters.threshold_niblack(IMAGE_DSTACK)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(NIB_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","f3239a33":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(CF_IMG[0],cmap=\"seismic\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(CF_IMG[0].flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","70288300":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[0].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","e64661dc":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[1].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","5a55c065":"Kernel_OPS = np.ones((2,2), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(CF_IMG[0],cmap=\"seismic\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(CF_IMG[0].flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","477719d9":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[0].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","6963d311":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[1].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","4e8cd8d1":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(CF_IMG[0],cmap=\"seismic\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(CF_IMG[0].flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","f6dd5f73":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[0].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","3ca10418":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[0].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000,mode=\"angle\")\n    plt.tight_layout()\n    plt.show()","468dd61e":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=2)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=4)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[1].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","966558bd":"Kernel_OPS = np.ones((1,1), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=3)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(CF_IMG[1],cmap=\"seismic\")\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].plot(CF_IMG[1].flatten(),color=\"red\")\n    axis[1].set_title(\"PLOT\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","8638f528":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=7,multichannel=2.15)\n    DOG_IMG = filters.difference_of_gaussians(TARGET_IMG,low_sigma=1)\n    DILATE_IMG = cv2.dilate(DOG_IMG,Kernel_OPS,iterations=3)\n    \n    D_R,D_G,D_B = cv2.split(DILATE_IMG)\n    IMAGE_DSTACK = np.dstack((D_R*100, D_G*19.7, D_B*0.2))\n    CF_IMG = skimage.feature.corner_foerstner(IMAGE_DSTACK[:,:,0])\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(CF_IMG[0].flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","f4bd425c":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.sobel(x_3D_img)\n    _,THRESH_IMG = cv2.threshold(x_3D_img,130,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    DENSITY_FUNC = axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n    \n    figure.colorbar(DENSITY_FUNC,shrink=0.6,label=\"DENSITY\",location=\"right\",extend=\"max\")\n    plt.tight_layout()\n    plt.show()","32e24f7e":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    _,THRESH_IMG = cv2.threshold(x_img,130,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","db678223":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    _,THRESH_IMG = cv2.threshold(x_img,130,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000,mode=\"angle\")\n    plt.tight_layout()\n    plt.show()","402d4ae8":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = filters.unsharp_mask(x_3D_img,amount=5,multichannel=2.15)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),0,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","abbfd37b":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = filters.unsharp_mask(x_img,amount=5,multichannel=2.15)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),0,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","a6d639bb":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),150,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","2797ea50":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),150,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","f8be8f2f":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),190,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","9b6eb682":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),190,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","ae9af82a":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),190,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000,mode=\"angle\")\n    plt.tight_layout()\n    plt.show()","22f427fc":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),140,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","64fbce05":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),102,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","99191271":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),102,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","144ffd68":"Kernel_OPS = np.ones((3,3), np.uint8)\nfor x_3D_img in MAIN_3D_2021_OBS:   \n    \n    TARGET_IMG = gaussian_filter(x_3D_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),107,255,cv2.THRESH_BINARY_INV)\n    \n    figure,axis = plt.subplots(1,2,figsize=(22,9))\n\n    axis[0].imshow(TARGET_IMG)\n    axis[0].set_title(\"ORIGINAL\")\n    axis[0].axis(\"off\")\n    \n    axis[1].imshow(THRESH_IMG)\n    axis[1].set_title(\"THRESHOLD\")\n\n    plt.tight_layout()\n    plt.show()","4bbd4f74":"for x_img in MAIN_3D_2021_OBS:  \n    \n    figure = plt.figure(figsize=(18,7))\n\n    TARGET_IMG = gaussian_filter(x_img,sigma=1,truncate=2*2)\n\n    _,THRESH_IMG = cv2.threshold(TARGET_IMG.astype(np.float32),107,255,cv2.THRESH_BINARY_INV)\n\n    powerSpectrum_1, freqenciesFound_1, time_1, imageAxis_1 = plt.specgram(THRESH_IMG.flatten(),\n                                                                           cmap=\"seismic\",pad_to=3000)\n    plt.tight_layout()\n    plt.show()","4efcb95d":"print(\"hello world\")","a1e314a1":"# 2021","0b56f81d":"### DATA","8a49b1fb":"#### METHOD","7ed2a076":"# PACKAGES AND LIBRARIES","4f69c9d0":"# PDS70c - V1032 Centauri FITS \/ EXOPLANET\n\n* PDS 70 (V1032 Centauri) is a very young T Tauri star in the constellation Centaurus.\n\n* Located approximately 370 light-years from Earth, it has a mass of 0.76 M\u2609 and is approximately 5.4 million years old.\n* The star has a protoplanetary disk containing two nascent exoplanets, named PDS 70b and PDS 70c, which have been directly imaged by the European Southern Observatory's Very Large Telescope.\n* PDS 70b was the first confirmed protoplanet to be directly imaged.\n\n* The protoplanetary disk around PDS 70 was first hypothesized in 1992 and confirmed in 2006 along with a jet-like structure. The disk has a radius of approximately 140 au.\n\n* In 2012 a large gap (~65 au) in the disk was discovered, which was thought to be caused by planetary formation.\n* The gap was later found to have multiple regions: large dust grains were absent out to 80 au, while small dust grains were only absent out to the previously-observed 65 au.\n* There is an asymmetry in the overall shape of the gap; these factors indicate that there are likely multiple planets affecting the shape of the gap and the dust distribution.\n\n* In results published in 2018, a planet in the disk, named PDS 70b, was imaged by the Very Large Telescope (VLT).\n\n* With a mass estimated to be a few times greater than Jupiter, the planet was thought to have a temperature of around 1000 \u00b0C and an atmosphere with clouds; its orbit has an approximate radius of 3.22 billion kilometres (21.5 au), taking around 120 years for a revolution.\n* Modelling predicts that the planet has acquired its own accretion disk.\n* The accretion disk was observationally confirmed in 2019,and accretion rate was measured to be at least 510\u22127 Jupiter masses per year. A 2021 study with newer methods and data suggested a lower accretion rate of 1.4\u00b10.210\u22128 MJ\/year.\n* It is not clear how to reconcile these results with each other and with existing planetary accretion models; future research in accretion mechanisms and H\u03b1 emissions production should offer clarity. The optically thick accretion disk radius is 3.0\u00b10.2 RJ, significantly larger than planet itself. Its bolometric temperature is 1193\u00b120 K.\n\n#### Circumplanetary Disk\n\n* In July 2019 astronomers using the Atacama Large Millimeter Array (ALMA) reported the first-ever detection of a moon-forming circumplanetary disk.\nThe disk was detected around PDS 70c, with a potential disk observed around PDS 70b.\nThe disk was confirmed by Caltech-led researchers using the W. M. Keck Observatory in Mauna Kea, whose research was published in May 2020.\n\n* Constellation\nCentaurus\n\n* Right ascension\n14h 08m 10.15451s \/ 212.0428888\n\n* Declination\n\u221241\u00b0 23\u2032 52.5766\u2033 \/ -41.4011234\n\n* Apparent magnitude (V)\n12\n\n* Evolutionary stage\nPre-main-sequence (T Tauri)\n\n* Spectral type\nK7\n\n* U\u2212B color index\n0.71\n\n* B\u2212V color index\n1.06\n\n* Radial velocity (Rv)\n3.13 km\/s\n\n* Proper motion (\u03bc)\nRA: -29.661 mas\/yr\n\nDec.: -23.823 mas\/yr\n\n* Parallax (\u03c0)\n8.8159 \u00b1 0.0405 mas\n\n* Distance\n370 \u00b1 2 ly (113.4 \u00b1 0.5 pc)\n\n* Mass\n0.76 \u00b1 0.02 M\u2609\n\n* Radius\n1.26 \u00b1 0.15 R\u2609\n\n* Luminosity\n0.35 \u00b1 0.09 L\u2609\n\n* Temperature\n3972 \u00b1 36 K - 3698.85 C\n\n* Rotation\n~50 days\n\n* Rotational velocity (v sin i)\n~10 km\/s\n\n* Age\n5.4 \u00b1 1 Myr\n\n* ALMA has played an important role in helping us to visualize planet formation in a way not possible before.\n\n* ALMA observations have provided the first clear and systematic view of the presence of gaps in circumstellar disks produced by orbiting planets (e.g. ALMA Partnership; Brogan et al. 2015; Andrews et al. 2018).\n\n* Another key observation within the reach of ALMA is the detection of submillimeter continuum emission from circumplanetary disks (CPDs) associated with young planets.\n\n* These disks can feed the growth of planets and give rise to natural satellites.\n\n* In a recent study published by Dr. Andrea Isella and his collaborators, they report the detection of submillimeter emission associated with the exoplanet PDS 70c (see Figure), a 4-12 MJupiter exoplanet recently detected in H\u03b1 emission.\n\n* They estimate a CPD dust mass ~ 2-3x10-3 MEarth (if the outer radius is larger than ~ 0.3 times the Hill Radius), which gives a CPD-to-planet mass ratio of ~ 10-4 -10-5. This low ratio, in combination with the previously measured accretion rate of 10-8 MJupiter yr-1, likely means that PDS 70c has accreted most of its final mass.\n\n* They also report the detection of a submillimeter continuum source near a second planet (PDS 70b) in the system.\n\n* ICRS coord. (ep=J2000) :\n\n14 08 10.1545137760 -41 23 52.576649494 (Optical) [ 0.0397 0.0284 90 ] A 2018yCat.1345\u2026.0G\n\n* FK4 coord. (ep=B1950 eq=1950) :\n\n14 05 05.7314866617 -41 09 38.075400002 [ 0.0397 0.0284 90 ]\n\n* Gal coord. (ep=J2000) :\n\n318.0621220374871 +19.2084968169996 [ 0.0397 0.0284 90 ]\n\n* Proper motions mas\/yr :\n\n-29.661 -23.823 [0.066 0.064 90] A 2018yCat.1345\u2026.0G\n\n* Radial velocity \/ Redshift \/ cz :\n\nV(km\/s) 3.13 [1.40] \/ z(spectroscopic) 0.000010 [0.000005] \/ cz 3.13 [1.40]\n\n#### WHAT IS PROPER MOTION\n\n* Proper motion is the angular change in position of a star across our line of sight, measured in arc seconds per year, and symbolized with the Greek letter \u201cmu\u201d \u03bc.\n\n#### WHAT IS PRE-MAIN SEQUENCE STAR\n\n* A pre-main-sequence star (also known as a PMS star and PMS object) is a star in the stage when it has not yet reached the main sequence. Earlier in its life, the object is a protostar that grows by acquiring mass from its surrounding envelope of interstellar dust and gas. After the protostar blows away this envelope, it is optically visible, and appears on the stellar birthline in the Hertzsprung-Russell diagram. At this point, the star has acquired nearly all of its mass but has not yet started hydrogen burning (i.e. nuclear fusion of hydrogen). The star then contracts, its internal temperature rising until it begins hydrogen burning on the zero age main sequence. This period of contraction is the pre-main sequence stage. An observed PMS object can either be a T Tauri star, if it has fewer than 2 solar masses (M\u2609), or else a Herbig Ae\/Be star, if it has 2 to 8 M\u2609. Yet more massive stars have no pre-main-sequence stage because they contract too quickly as protostars. By the time they become visible, the hydrogen in their centers is already fusing and they are main-sequence objects.\n\n#### WHAT IS MAIN SEQUENCE\n\n* In astronomy, the main sequence is a continuous and distinctive band of stars that appears on plots of stellar color versus brightness. These color-magnitude plots are known as Hertzsprung\u2013Russell diagrams after their co-developers, Ejnar Hertzsprung and Henry Norris Russell. Stars on this band are known as main-sequence stars or dwarf stars. These are the most numerous true stars in the universe, and include the Earth's Sun.\n\n* After condensation and ignition of a star, it generates thermal energy in its dense core region through nuclear fusion of hydrogen into helium. During this stage of the star's lifetime, it is located on the main sequence at a position determined primarily by its mass, but also based upon its chemical composition and age. The cores of main-sequence stars are in hydrostatic equilibrium, where outward thermal pressure from the hot core is balanced by the inward pressure of gravitational collapse from the overlying layers. The strong dependence of the rate of energy generation on temperature and pressure helps to sustain this balance. Energy generated at the core makes its way to the surface and is radiated away at the photosphere. The energy is carried by either radiation or convection, with the latter occurring in regions with steeper temperature gradients, higher opacity or both.\n\n* The main sequence is sometimes divided into upper and lower parts, based on the dominant process that a star uses to generate energy. Stars below about 1.5 times the mass of the Sun (1.5 M\u2609) primarily fuse hydrogen atoms together in a series of stages to form helium, a sequence called the proton\u2013proton chain. Above this mass, in the upper main sequence, the nuclear fusion process mainly uses atoms of carbon, nitrogen and oxygen as intermediaries in the CNO cycle that produces helium from hydrogen atoms. Main-sequence stars with more than two solar masses undergo convection in their core regions, which acts to stir up the newly created helium and maintain the proportion of fuel needed for fusion to occur. Below this mass, stars have cores that are entirely radiative with convective zones near the surface. With decreasing stellar mass, the proportion of the star forming a convective envelope steadily increases. Main-sequence stars below 0.4 M\u2609 undergo convection throughout their mass. When core convection does not occur, a helium-rich core develops surrounded by an outer layer of hydrogen.\n\n* In general, the more massive a star is, the shorter its lifespan on the main sequence. After the hydrogen fuel at the core has been consumed, the star evolves away from the main sequence on the HR diagram, into a supergiant, red giant, or directly to a white dwarf.\n\n#### WHAT IS T-TAURI STAR\n\n* T Tauri stars (TTS) are a class of variable stars that are less than about ten million years old. This class is named after the prototype, T Tauri, a young star in the Taurus star-forming region. They are found near molecular clouds and identified by their optical variability and strong chromospheric lines. T Tauri stars are pre-main-sequence stars in the process of contracting to the main sequence along the Hayashi track, a luminosity\u2013temperature relationship obeyed by infant stars of less than 3 solar masses (M\u2609) in the pre-main-sequence phase of stellar evolution. It ends when a star of 0.5 M\u2609 or larger develops a radiative zone, or when a smaller star commences nuclear fusion on the main sequence.\n\n* T Tauri stars comprise the youngest visible F, G, K and M spectral type stars (<2 M\u2609). Their surface temperatures are similar to those of main-sequence stars of the same mass, but they are significantly more luminous because their radii are larger. Their central temperatures are too low for hydrogen fusion. Instead, they are powered by gravitational energy released as the stars contract, while moving towards the main sequence, which they reach after about 100 million years. They typically rotate with a period between one and twelve days, compared to a month for the Sun, and are very active and variable.\n\n* There is evidence of large areas of starspot coverage, and they have intense and variable X-ray and radio emissions (approximately 1000 times that of the Sun). Many have extremely powerful stellar winds; some eject gas in high-velocity bipolar jets. Another source of brightness variability are clumps (protoplanets and planetesimals) in the disk surrounding T Tauri stars.\n\n* Their spectra show a higher lithium abundance than the Sun and other main-sequence stars because lithium is destroyed at temperatures above 2,500,000 K. From a study of lithium abundances in 53 T Tauri stars, it has been found that lithium depletion varies strongly with size, suggesting that \"lithium burning\" by the p-p chain during the last highly convective and unstable stages during the later pre\u2013main sequence phase of the Hayashi contraction may be one of the main sources of energy for T Tauri stars. Rapid rotation tends to improve mixing and increase the transport of lithium into deeper layers where it is destroyed. T Tauri stars generally increase their rotation rates as they age, through contraction and spin-up, as they conserve angular momentum. This causes an increased rate of lithium loss with age. Lithium burning will also increase with higher temperatures and mass, and will last for at most a little over 100 million years.","6a60fb57":"### SIMPLE SPECTRAL","2ad6afbd":"### CREATING 3-D","65be18f0":"### FITS READING AND OVERVIEW","b808f7ee":"## OBSERVING IMAGES AND GETTING DATA","48ddeb63":"### SIMPLE CONTROL","86ded978":"### THRESHOLD"}}