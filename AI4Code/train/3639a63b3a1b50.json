{"cell_type":{"b271d27b":"code","4cf3d564":"code","30b8b076":"code","516e88d9":"code","4e471cd7":"code","48ffec2d":"code","8b816ebf":"markdown","6ebf7536":"markdown","01b787f9":"markdown"},"source":{"b271d27b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\ncannabis = pd.read_csv(\"..\/input\/cannabis.csv\")\ncannabis.info()","4cf3d564":"top_strains = cannabis.Rating >= 4.8\ncannabis[top_strains].sort_values('Rating', ascending=False)[:50]","30b8b076":"fig, ax = plt.subplots(figsize=(9, 9))\nshap = cannabis.Type.value_counts(dropna=False)\nlabels = 'Hybrid','Indica','Sativa'\nexplode = (0.09, 0.09, 0.09)\nax.pie(shap, explode=explode, labels=labels, autopct='%1.1f%%', colors=['blue','purple','red'], shadow=True)\nplt.title('Types of strains')\nplt.show()","516e88d9":"def get_effects(dataframe):\n    ret_dict = {}\n    for list_ef in dataframe.Effects:\n        effects_list = list_ef.split(',')\n        for effect in effects_list:\n            if not effect in ret_dict:\n                ret_dict[effect] = 1\n            else:\n                ret_dict[effect] += 1\n    return ret_dict\n\ndef plot_effects(cannabis_effects, strain_type):\n    fig, ax = plt.subplots(figsize=(10, 10))\n    shap = list(cannabis_effects.values())[:50]\n    labels = list(cannabis_effects.keys())[:50]\n    ax.pie(shap, labels=labels, autopct='%1.1f%%', shadow=True)\n    plt.title('top effects of {} type of strain'.format(strain_type))\n    plt.show()\n\nhybrids = cannabis[cannabis.Type == 'hybrid']\nindicas = cannabis[cannabis.Type == 'indica']\nsativas = cannabis[cannabis.Type == 'sativa']\n\nhybrid_effects = get_effects(hybrids)\nindica_effects = get_effects(indicas)\nsativa_effects = get_effects(sativas)\n\nplot_effects(hybrid_effects, 'Hybrid')\nplot_effects(indica_effects, 'Indica')\nplot_effects(sativa_effects, 'Sativa')","4e471cd7":"def get_flavors(dataframe):\n    ret_dict = {}\n    for list_ef in dataframe.Flavor.dropna():\n        flavors_list = list_ef.split(',')\n        for flavor in flavors_list:\n            if not flavor in ret_dict:\n                ret_dict[flavor] = 1\n            else:\n                ret_dict[flavor] += 1\n    return ret_dict\n\ndef plot_flavors(cannabis_flavors, strain_type):\n    fig, ax = plt.subplots(figsize=(10, 10))\n    shap = list(cannabis_flavors.values())[:50]\n    labels = list(cannabis_flavors.keys())[:50]\n    ax.pie(shap, labels=labels, autopct='%1.1f%%', shadow=True)\n    plt.title('top flavors of {} type of strain'.format(strain_type))\n    plt.show()\n\nhybrids = cannabis[cannabis.Type == 'hybrid']\nindicas = cannabis[cannabis.Type == 'indica']\nsativas = cannabis[cannabis.Type == 'sativa']\n\nhybrid_flavors = get_flavors(hybrids)\nindica_flavors = get_flavors(indicas)\nsativa_flavors = get_flavors(sativas)\n\nplot_flavors(hybrid_flavors, 'Hybrid')\nplot_flavors(indica_flavors, 'Indica')\nplot_flavors(sativa_flavors, 'Sativa')","48ffec2d":"wordcld = pd.Series(cannabis.Description.tolist()).astype(str)\nstopwords = ('with', 'and', 'the', 'this', 'it', 'an', 'of', 'in', 'or', 'like', 'that', 'a', 'but')\ncloud = WordCloud(width=1250, height=900,\n                  stopwords=stopwords, \n                  colormap='hsv').generate(''.join(wordcld.astype(str)))\nplt.figure(figsize=(15, 15))\nplt.imshow(cloud)\nplt.axis('off')\nplt.show()","8b816ebf":"## Top effects per type of strain ##","6ebf7536":"**TOP 50 strains, over rating 4.8**","01b787f9":"## Top flavors for strain types ##"}}