{"cell_type":{"2702c86b":"code","13311401":"code","614b37a9":"code","b95c61d5":"code","f39632fc":"code","fbcfb13f":"code","e7fa0ec0":"code","5c3feb27":"code","e532cb27":"code","4b7e4916":"markdown","d22ca1c6":"markdown","2e08becd":"markdown","71ea45d8":"markdown","0729db69":"markdown","4c7d2de2":"markdown","e6250918":"markdown","70b235d6":"markdown","2bcfee5d":"markdown","dfc646c2":"markdown","28e34d68":"markdown","52d2d75a":"markdown","18ae26ad":"markdown","06b18ff5":"markdown","dafe2376":"markdown","94803e60":"markdown"},"source":{"2702c86b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom math import pi\n\ndf = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\ndf_status = df[[\"Name\",\"HP\",\"Attack\",\"Defense\",\"Sp. Atk\",\"Sp. Def\",\"Speed\"]]\n\n### spider plot ###\ndef make_spider(df, nrows, ncols, index, color, label=None, title=None, ax=None):\n    categories=list(df)[1:]\n    N = len(categories)\n    \n    angles = [n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n\n    if ax == None:\n        ax = plt.subplot(nrows, ncols, index+1, polar=True)\n\n    ax.set_theta_offset(pi \/ 2)\n    ax.set_theta_direction(-1)\n\n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n\n    ax.set_rlabel_position(0)\n    plt.yticks([40,80,120], [\"40\",\"80\",\"120\"], color=\"grey\", size=7)\n    plt.ylim(0,160)\n\n    values=df.loc[row].drop('Name').values.flatten().tolist()\n    values += values[:1]\n    ax.plot(angles, values, color=color, linewidth=2, linestyle='solid', label=label)\n    ax.fill(angles, values, color=color, alpha=0.4)\n\n    if title:\n        plt.title(title, size=11, color=color, y=1.1)\n        \nmy_dpi=60\nplt.figure(figsize=(1000\/my_dpi, 1000\/my_dpi), dpi=my_dpi)\n\ncols = [\"green\",\"green\",\"green\",\"green\"]\n\nnr, nc = 1,4\nfor row in range(0,4):\n    make_spider(df_status, nr, nc, row, title=df_status['Name'][row], color=cols[row])\n\nplt.show()     ","13311401":"plt.figure(figsize=(13,10), dpi=80)\nsns.violinplot(x='Generation', y='Total', data=df, scale='width', inner='quartile')\n\nplt.title('Violin Plot of Total Stats by Generation', fontsize=22)\nplt.show()","614b37a9":"plt.figure(figsize=(13,10), dpi=80)\nsns.violinplot(x='Generation', y='Speed', data=df, scale='width', inner='quartile')\n\nplt.title('Violin Plot of Speed Stats by Generation', fontsize=22)\nplt.show()","b95c61d5":"#preprocessing\ndf.loc[df[\"Legendary\"]==False,\"Legendaryid\"] = 0\ndf.loc[df[\"Legendary\"]==True,\"Legendaryid\"] = 1\n\n# calculate proportion of legendary #\nlegendary_ratio = df.groupby(\"Generation\").mean()[\"Legendaryid\"]\nlegendary_ratio","f39632fc":"sns.set_style('darkgrid')\ndf_plot = pd.DataFrame(columns={\"Generation\",\"Rate\",\"colors\"})\nx = legendary_ratio.values\ndf_plot[\"Generation\"] = legendary_ratio.index\ndf_plot['Rate'] = (x - x.mean())\/x.std()\ndf_plot['colors'] = ['red' if x < 0 else 'green' for x in df_plot['Rate']]\ndf_plot.sort_values('Rate', inplace=True)\ndf_plot.reset_index(inplace=True)\n\nplt.figure(figsize=(14, 10))\nplt.hlines(\n    y=df_plot.index, xmin=0, xmax=df_plot.Rate,\n    color=df_plot.colors,\n    alpha=.4,\n    linewidth=5)\n\nplt.gca().set(xlabel='Legendary Rate', ylabel='Generation')\nplt.yticks(df_plot.index, df_plot.Generation, fontsize=12)\nplt.title('Diverging Bars of Legendary Rate', fontdict={'size':20})\nplt.show()","fbcfb13f":"corr = df_status.corr()\n\n### heat map ###\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\n\nf, ax = plt.subplots(figsize=(10, 10))\n\ncmap = sns.diverging_palette(255, 133, l=60, n=24, center = \"light\")\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr,\n            mask=mask, cmap=cmap, vmax=.6, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\n\nplt.show()","e7fa0ec0":"p1 = sns.jointplot(x=\"Sp. Atk\",y=\"Sp. Def\",data=df,kind=\"hex\",color=\"orange\")\np1.fig.suptitle(\"Hex Plot of Sp. Atk and Sp. Def\")\np1.fig.subplots_adjust(top=0.95)\np2 = sns.jointplot(x=\"Defense\",y=\"Sp. Def\",data=df,kind=\"hex\",color=\"green\")\np2.fig.suptitle(\"Hex Plot of Defense and Sp. Def\")\np2.fig.subplots_adjust(top=0.95)\np3 = sns.jointplot(x=\"Defense\",y=\"Speed\",data=df,kind=\"hex\",color=\"red\")\np3.fig.suptitle(\"Hex Plot of Defense and Speed -No Correlation\")\np3.fig.subplots_adjust(top=0.95)","5c3feb27":"plt.figure(figsize=(13,10), dpi=80)\nsns.violinplot(x='Type 1', y='Total', data=df, scale='width', inner='quartile')\n\nplt.title('Violin Plot of HP Stats by Type', fontsize=22)\nplt.show()","e532cb27":"attack_byType = df.groupby(\"Type 1\").mean()[\"Attack\"]\n\ndf_plot2 = pd.DataFrame(columns={\"Type\",\"Attack\",\"colors\"})\nx = attack_byType.values\ndf_plot2[\"Type\"] = attack_byType.index\ndf_plot2['Attack'] = (x - x.mean())\/x.std()\ndf_plot2['colors'] = ['red' if x < 0 else 'green' for x in df_plot2['Attack']]\ndf_plot2.sort_values('Attack', inplace=True)\n\nplt.figure(figsize=(14,14), dpi=80)\nplt.hlines(y=df_plot2.Type, xmin=0, xmax=df_plot2.Attack)\nfor x, y, tex in zip(df_plot2.Attack, df_plot2.Type, df_plot2.Attack):\n    t = plt.text(\n        x, y, round(tex, 2),\n        horizontalalignment='right' if x < 0 else 'left',\n        verticalalignment='center',\n        fontdict={'color':'red' if x < 0 else 'green', 'size':14})\n\nplt.yticks(df_plot2.Type, df_plot2.Type, fontsize=12)\nplt.title('Diverging Text Bars of Attack by Type', fontdict={'size':20})\nplt.xlim(-3, 3)\nplt.show()","4b7e4916":"**Heatmap says** there are good correlation between Sp.Def and Ap.Atk & Sp.Def and Defense. Let's look at the hex plot and check relationship between two.","d22ca1c6":"\n**Conlusion: Correlation of Pokemon Stats**\n1. Special defense affects their <font color=\"Orange\">\"Special attack\"<\/font> and <font color=\"Green\">\"Defense\"<\/font>.\n1. Deffence dosen't affect their speed at all.","2e08becd":"Their total stats are almost same except Dragon. Dragon has high status compared to others.","71ea45d8":"**\"Dragon\"** and \"Fighting\" is good at \"Attack\", but \"Fairly\" is weak.\n\n**Although** thier total stats is almost same regardless of their type, Pokemon's type has huge effection against their specific stats.","0729db69":"**We** can see that generation 1, 4 and 5 are better than others. howevere, there isn't huge difference, too.\n\n**How about legendary**? Legendary Pokemons have high potential compared to ordinal Pokemons. So, if rate of legendary pokemon of a generation is the highest, that is the best generation. Checking proportion of legendary and drawing barplot.","4c7d2de2":"## Introduction\n![Pikachu](https:\/\/img.gifmagazine.net\/gifmagazine\/images\/31051\/medium_thumb.png)\n**1. Which is the best Generation?**\n\nPokemon is the japanese icon today. Now there are more than 800 characters and 18 type in Pokemon. Pokemon's status depends on its tribe. For example,\u3000Mewtwo, legendary pokemon has the best status in 1st Generation. Then which generations dose have the best status? \n\n**2. Correlation of Pokemon's Stats**\n\nAre there any correlation among Pokemon's stats? Check and draw heatmap for finding correlation of Pokemon's stats.\n\n**3. The Relation of Type and Stats**\n\nPokemons' tyepe is various. We guess that Pokemon whose type is \"fighting\" is good at \"attack\" or psychic Pokemon is nice for \"special attack\". Dose Pokemon's type affect against their stats? \n\n\n**Pokemons status' summary**\n* **HP**: hit points, or health, defines how much damage a pokemon can withstand before fainting.\n* **Attack**: the base modifier for normal attacks.\n* **Defense**: the base damage resistance against normal attacks.\n* **SP Atk**: special attack, the base modifier for special attacks.\n* **SP Def**: the base damage resistance against special attacks.\n* **Speed**: determines which pokemon attacks first each round.\n******","e6250918":"**Conlusion: Which generation is the best?**\n1. <font color=\"Red\">Generation 4<\/font> is the best. Because they have many legendary and they are faster than others\n1. Lately generation includes more legendary Pokemon than old generations","70b235d6":"## 3. The Relation of Type and Stats","2bcfee5d":"**Obviously**, Generation 3 and 4 have more legendary Pokemon than others.\n\n","dfc646c2":"## 2. Correlation of Pokemon's stats\n**At first**, draw heatmap and heatmap of Pokemon stats is\u3000the diagram below.\n","28e34d68":"## Conclusion\n* Defference among Generation\n> 1. <font color=\"Red\">Generation 4<\/font> is the best. Because they have many legendary and they are faster than others\n> 1. Lately generation includes more legendary Pokemon than old generations\n* Stats correlation\n> 1. Special defense affects their <font color=\"Orange\">\"Special attack\"<\/font> and <font color=\"Green\">\"Defense\"<\/font>.\n> 1. Deffence dosen't affect their speed at all.\n* Type Effection on Stats\n> 1. Thier total stats is almost same regardless of their type except Dragon\n> >  <font color=\"Purple\">Dragon<\/font> has by far the best stats.\n> 1. Obviouslyokemon's type has huge effection against their specific stats.\n> > For example, <font color=\"Green\">Bug<\/font> have low HP, <font color=\"Brown\">Fighting<\/font> have good attack","52d2d75a":"## 1. The Best Generation\nWhich dose generation have the best status? Violin plot of Pokemon's total stats by generation is as follow. ","18ae26ad":"**Clearly**, there are high correlation between these sets.\n","06b18ff5":"## Spider Plot Visualization on their Stats\n**In the beginning**, status of *Bulbasaur*, *Ivysaur*, *Venusaur* that ia one of the most common Pokemon are as follow.","dafe2376":"**Clear Differences** aren't found among generation. Then, is every generation same level on battle? It is too early for decision.\n\n**Speed** is the most important stats for pokemon battle. Because fast pokemon can attack or do action earlier than slow one. So, let's check about speed stats!","94803e60":"**Spider plot** shows their status and clearly, Pokemons status depends on their level of evolution."}}