{"cell_type":{"bb045386":"code","4acd1dd1":"code","b1454b16":"code","9be27642":"code","c18207db":"code","ccf83428":"code","adf7b755":"code","6015881a":"code","5e7a20d2":"code","157fa430":"code","7ce0b686":"code","75d61d50":"code","125ed24b":"code","a040e738":"markdown","dc9e21d2":"markdown","520b463d":"markdown","73ff1186":"markdown","8e2cee77":"markdown","ed997126":"markdown","afaa8c7b":"markdown"},"source":{"bb045386":"# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","4acd1dd1":"# Read Data \"TSLA.csv\" and set \"Date\" as INDEX for the dataset\ndata = pd.read_csv(\"..\/input\/tesla-stock-data-from-2010-to-2020\/TSLA.csv\", index_col =\"Date\", parse_dates = True)","b1454b16":"data.shape","9be27642":"data.head()","c18207db":"# Plot \"Adj Close\" and \"Volume\" of Tesla Shares\nplt.figure(figsize=(20, 15))\n\nplt.subplot(2,1,1)\nplt.plot(data['Adj Close'], label='Adj Close', color=\"purple\")\nplt.legend(loc=\"upper right\")\nplt.title('Adj Close Prices of Tesla')\n\nplt.subplot(2,1,2)\nplt.plot(data['Volume'], label='Volume', color=\"Orange\")\nplt.legend(loc=\"upper right\")\nplt.title('Volume Of Shares Traded')","ccf83428":"# To install the library \n!pip install pmdarima ","adf7b755":"# Import the library \nfrom pmdarima import auto_arima ","6015881a":"# Ignore harmless warnings \nimport warnings \nwarnings.filterwarnings(\"ignore\") \n  \n# Fit auto_arima function to AirPassengers dataset \nstepwise_fit = auto_arima(data['Adj Close'], start_p = 1, start_q = 1, \n                          max_p = 3, max_q = 3, m = 12, \n                          start_P = 0, seasonal = True, \n                          d = None, D = 1, trace = True, \n                          error_action ='ignore',    # we don't want to know if an order does not work \n                          suppress_warnings = True,  # we don't want convergence warnings \n                          stepwise = True)           # set to stepwise \n  \n# To print the summary \nstepwise_fit.summary() ","5e7a20d2":"# Split data into train \/ test sets \ntrain = data.iloc[:len(data)-12] \ntest = data.iloc[len(data)-12:] # set one year(12 months) for testing \n  \n# Fit a SARIMAX(1, 0, 2)x(0, 1, [1], 12) on the training set \nfrom statsmodels.tsa.statespace.sarimax import SARIMAX \n  \nmodel = SARIMAX(train['Adj Close'],  \n                order = (1, 0, 2),  \n                seasonal_order =(0, 1, 1, 12)) \n  \nresult = model.fit() \nresult.summary() ","157fa430":"start = len(train) \nend = len(train) + len(test) - 1\n  \n# Predictions for one-year against the test set \npredictions = result.predict(start, end, \n                             typ = 'levels').rename(\"Predictions\") \n  \n# Create dataframe of Predictions\npredictions_df = pd.DataFrame(predictions)\npredictions_df.index = ['2020-01-16', '2020-01-17', '2020-01-21', '2020-01-22',\n               '2020-01-23', '2020-01-24', '2020-01-27', '2020-01-28',\n               '2020-01-29', '2020-01-30', '2020-01-31', '2020-02-03']\npredictions_df.index = pd.to_datetime(predictions_df.index)\n\n# plot predictions and actual values \npredictions_df.plot(legend = True) \ntest['Adj Close'].plot(legend = True)","7ce0b686":"# Load specific evaluation tools \nfrom sklearn.metrics import mean_squared_error \nfrom statsmodels.tools.eval_measures import rmse \n  \n# Calculate root mean squared error \nprint(\"RMSE on Test Data: \", rmse(test[\"Adj Close\"], predictions))\n  \n# Calculate mean squared error \nprint(\"MSE on Test Data: \", mean_squared_error(test[\"Adj Close\"], predictions))\n","75d61d50":"# Train the model on the full dataset \nmodel = model = SARIMAX(data['Adj Close'],  \n                        order = (1, 0, 2),  \n                        seasonal_order =(0, 1, 1, 12)) \n    \nresult = model.fit() \n  \n# Forecast for the next 1 Month \nforecast = result.predict(start = len(data),  \n                          end = (len(data)-1) + 1,             # +1 means 1 month advance from the last date i.e. 2nd Feb 2020\n                          typ = 'levels').rename('Forecast') \n","125ed24b":"print(\"The predicted share price on the 3rd March 2020 is: {}\".format(forecast.iloc[0]))","a040e738":"# Evaluate the model using MSE and RMSE","dc9e21d2":"### ARIMA Model for Time Series Forecasting\n\nARIMA stands for autoregressive integrated moving average model and is specified by three order parameters: (p, d, q).\n\n<b> AR(p) Autoregression \u2013 <\/b> a regression model that utilizes the dependent relationship between a current observation and observations over a previous period.An auto regressive (AR(p)) component refers to the use of past values in the regression equation for the time series. <br>\n\n<b> I(d) Integration \u2013 <\/b> uses differencing of observations (subtracting an observation from observation at the previous time step) in order to make the time series stationary. Differencing involves the subtraction of the current values of a series with its previous values d number of times. <br>\n\n<b> MA(q) Moving Average \u2013 <\/b> <\/b> a model that uses the dependency between an observation and a residual error from a moving average model applied to lagged observations. A moving average component depicts the error of the model as a combination of previous error terms. The order q represents the number of terms to be included in the model.\n\n<b> Types of ARIMA Model <\/b> \n\n<b> ARIMA: <\/b> Non-seasonal Autoregressive Integrated Moving Averages\n<b> SARIMA: <\/b> Seasonal ARIMA\n<b> SARIMAX: <\/b> Seasonal ARIMA with exogenous variables\n<b> Pyramid Auto-ARIMA <\/b> \n\nThe <b> \u2018auto_arima\u2019 <\/b> function from the <b> \u2018pmdarima\u2019 <\/b> library helps us to identify the most optimal parameters for an ARIMA model and returns a fitted ARIMA model.","520b463d":"TESLA shares have been quite volatile since the company\u2019s foundation\nin 2010. If you had all the companies share data for the last 10 years,\ncan you make a prediction regarding its future value?\nRequirements\nYou are required to take the dataset \u201cTSLA.csv\u201d and using any Machine Leaning\nAlgorithm, make a prediction as to what the stock\u2019s price will be on the 03\/03\/2020. (The\ndata set contains 10 years\u2019 worth of data finishing on the 03\/02\/2020)\nThe output of your program must:\n1. Visualize the data and prediction\n2. Print out the message: \u201cThe predicted share price on the 3rd March 2020 is\u201d\n(predicted share price)\n3. Print out the accuracy or error of the ML model.\n4. Explain in the code (As a comment) why you picked the specific algorithm","73ff1186":"# Forecasted value on 3rd March 2020","8e2cee77":"# Predictions of ARIMA Model against the test set","ed997126":"# Code : Forecast using ARIMA Model","afaa8c7b":"# Problem Statement"}}