{"cell_type":{"e0d7d61a":"code","3a91ac6c":"code","8ad68ead":"code","9cfc97c7":"code","5fdd51ef":"code","8aef39de":"code","797d762f":"code","8991a8f9":"code","f4c40623":"code","a14cc71b":"code","a29b23a1":"code","09677a7f":"code","16b03e68":"code","939b68ef":"code","e3b6c572":"code","33b79309":"code","8c3ecb4c":"code","9f490ac2":"markdown","48608caf":"markdown"},"source":{"e0d7d61a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style=\"white\",color_codes=True)\nimport warnings #\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/iris\"))\n\n# Any results you write to the current directory are saved as output.","3a91ac6c":"iris = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\niris.head()","8ad68ead":"iris.describe()","9cfc97c7":"iris.plot(kind=\"scatter\", x=\"SepalLengthCm\",y=\"SepalWidthCm\")","5fdd51ef":"sns.FacetGrid(iris, hue=\"Species\", size=5)\\\n.map(plt.scatter, \"SepalLengthCm\", \"SepalWidthCm\")\\\n.add_legend()","8aef39de":"sns.boxplot (x=\"Species\",y=\"SepalWidthCm\", data=iris)","797d762f":"ax = sns.boxplot (x=\"Species\",y=\"SepalWidthCm\", data=iris)\nax = sns.stripplot(x=\"Species\", y=\"PetalLengthCm\", data=iris, jitter=True, edgecolor=\"red\")","8991a8f9":"sns.violinplot(x=\"Species\", y=\"PetalLengthCm\", data=iris)","f4c40623":"sns.pairplot(iris.drop(\"Id\", axis=1), hue=\"Species\", size=4)","a14cc71b":"# Box plot grid\niris.drop(\"Id\", axis=1).boxplot(by=\"Species\", figsize=(12,6))","a29b23a1":"from pandas.plotting import parallel_coordinates\nparallel_coordinates(iris.drop(\"Id\", axis=1), \"Species\")","09677a7f":"from pandas.plotting import andrews_curves\nandrews_curves(iris.drop(\"Id\", axis=1), \"Species\")","16b03e68":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split","939b68ef":"X = iris.iloc[:, :-1].values\ny = iris.iloc[:, -1].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","e3b6c572":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n\nfrom sklearn.merics import accuracy_score\nprint('accuracy is', accuracy_score(y_pred, y_test))","33b79309":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is', accuracy_score(y_pred, y_test))","8c3ecb4c":"from sklearn.svm import SVC\nclassifier = SVC()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is', accuracy_score(y_pred, y_test))\n","9f490ac2":"iris = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\niris.head()","48608caf":"iris = pd.read_csv(\"..\/input\/iris.csv\")\niris.head()"}}