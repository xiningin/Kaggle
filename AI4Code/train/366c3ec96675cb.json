{"cell_type":{"f20519ff":"code","914499ca":"code","28c1a548":"code","9203e6cd":"code","a503e798":"code","f0f7d1da":"code","9d6f95ee":"code","92c00c01":"code","b6e95e51":"code","c3a0ba0e":"code","09a76f61":"code","6de0bf17":"code","fdb33b4c":"code","f91f1db3":"code","7303767b":"code","81492894":"code","8eed60bc":"code","ba5638d0":"code","eeb0ae57":"code","4143ed37":"code","3c734a0e":"markdown"},"source":{"f20519ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport ast, json\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","914499ca":"data = pd.read_csv('\/kaggle\/input\/ashrae-global-thermal-comfort-database-ii\/ashrae_db2.01.csv')","28c1a548":"# Take closer look at data set \n\ndata.describe()","9203e6cd":"# Examine unique values in the data set.\n\ndata.apply('nunique')","a503e798":"data.columns","f0f7d1da":"data = data.drop((['Publication (Citation)', 'Data contributor', 'Ta_h (F)', 'Air temperature (F)','Ta_m (F)', 'Ta_l (F)', \n                  'Operative temperature (F)', 'Radiant temperature (F)', 'Globe temperature (F)', 'Tg_h (F)', 'Tg_m (F)',\n                  'Tg_l (F)', 'Air velocity (fpm)', 'Velocity_h (fpm)', 'Velocity_m (fpm)', 'Velocity_l (fpm)',\n                   'Outdoor monthly air temperature (F)', ]), axis=1)","9d6f95ee":"# Duplicates\n\nprint(data.shape)\n\nduplicate_rows_data = data[data.duplicated()]\n\nprint(duplicate_rows_data.shape)","92c00c01":"# Remove duplicated data \n\ndata = data.drop_duplicates(keep='first')\n\nprint(data.shape)","b6e95e51":"# Check what type of data we have in our data set.\n\ndata.dtypes","c3a0ba0e":"# Transform datapoints \/ values that are registered as numbers (float64) despite being categorical (e.g.y|n door, window etc.)\n\ndata = data.copy() \n\ndata[\"Heater\"]= data[\"Heater\"].astype(\"object\")\ndata[\"Door\"]= data[\"Door\"].astype(\"object\")\ndata[\"Window\"]= data[\"Window\"].astype(\"object\")\ndata[\"Fan\"]= data[\"Fan\"].astype(\"object\")\ndata[\"Blind (curtain)\"]= data[\"Blind (curtain)\"].astype(\"object\")\ndata[\"Humidity sensation\"]= data[\"Humidity sensation\"].astype(\"object\")\ndata[\"Air movement preference\"]= data[\"Air movement preference\"].astype(\"object\")\n\n# May need to transform more, need list of data, e.g. idk meaning of PPD.\n","09a76f61":"# Check data points to check if transformation was successful. \n\ndata.dtypes","6de0bf17":"# Look at relationship between gender and said categorical values through data visualization \n\nsns.regplot(x=\"Sex\", y=\"tip\", data=tips, color=\".3\");","fdb33b4c":"# Check for missing values (data quality) to drop more columns that have missing values and reduce noise.  \n\nprint(data.isnull().sum())","f91f1db3":"# drop empty columns \n\ndata = data.drop((['Koppen climate classification', 'Climate', 'Country', 'Database']), axis=1)","7303767b":"# get overview of data - easy to see where major and minor gaps are in your data\n\nimport missingno as msno\n\nmsno.matrix(data.select_dtypes(include='number'));\n\n# results: Data is not of the best quality and there are significant gaps in many of the columns ","81492894":"# Examine relationship between the different varibales and gender \n\ndata.corr()['Sex'].sort_values(ascending=False).head(10)","8eed60bc":"# check out 'heater' (has the most outliers) using the describe() function\ndata[\"Heater\"].describe()","ba5638d0":"data[\"Age\"].describe()\n\n# The average age of participants in the data set is 32 years, oldest is 99 years, and youngest is 6 years. \n# The majority of participants (75%) were 43 years and older.","eeb0ae57":"data[\"Thermal sensation\"].describe()\n\n# Variance between sensations were 0.15 degrees celcius on average, ","4143ed37":"data[\"Year\"].describe()\n\n# Most of the buildings are built within the last 10 years (75% after 2011) \n# with the 'youngest' building built in 2016 and the 'oldest' in 1979.\n# In other words, all buildings are fairly new. ","3c734a0e":"### Check data types "}}