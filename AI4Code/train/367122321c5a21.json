{"cell_type":{"c1ac2444":"code","897edca1":"code","493e3367":"code","7689e76c":"code","86dcb996":"code","87e99f01":"code","2ea23ad9":"code","2deee610":"code","0c2331b7":"code","e90c278b":"code","ccce130b":"code","9ce06ff2":"code","5482dcbc":"code","a9ce5f0f":"code","91d0cca3":"code","4404353b":"code","22b8d59b":"code","c6db0cee":"markdown","141bbc69":"markdown","539d0237":"markdown","1c476ec4":"markdown","ab4b2bbd":"markdown","1fed37a9":"markdown","60111305":"markdown","97c0742b":"markdown","b14ce17e":"markdown","b43e1bf7":"markdown","04cf2933":"markdown","9485710f":"markdown","bc3dcbd1":"markdown","5ff294fd":"markdown","a74a4731":"markdown","30237a8b":"markdown","cc27caaf":"markdown","483230ef":"markdown","a64f959c":"markdown","08fade6c":"markdown","866c74fc":"markdown","6d43f88f":"markdown","5fb3cee0":"markdown","eda388c5":"markdown","786916ec":"markdown","df4dcf32":"markdown"},"source":{"c1ac2444":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom PIL import  Image\n%matplotlib inline\nimport seaborn as sns\nimport itertools\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport io\nimport plotly.offline as py#visualization\npy.init_notebook_mode(connected=True)#visualization\nimport plotly.graph_objs as go#visualization\nimport plotly.tools as tls#visualization\nimport plotly.figure_factory as ff#visualization","897edca1":"\nmultiform = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\",skiprows=1,low_memory=False)\n\nprint(multiform.shape)\n","493e3367":"multiform.head()","7689e76c":"gender = multiform.iloc[:,1:2]\ngender.columns = ['sex']\ngender['cnt'] = 1\ngender = gender[1:].groupby('sex')[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = gender[\"sex\"]  , y = gender[\"cnt\"],\n                name = \"gender\",\n                marker = dict(color=-gender['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"Gender of respondents\",\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"Gender\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","86dcb996":"age_grp = multiform.iloc[:,[1,3]]\nage_grp.columns = ['gender','age group']\nage_grp['cnt'] = 1\nage_grp = age_grp[1:].groupby(['gender','age group'])[['cnt']].count().sort_values(by=['gender','age group']).reset_index()\n\nage_grpf = age_grp.iloc[0:12,:]\nage_grpm= age_grp.iloc[12:24,:]\nage_grpo = age_grp.iloc[24:,:]\nage_grpo = age_grpo[1:].groupby(['age group'])[['cnt']].sum().reset_index()\nage_grpo['gender'] =\"others\"\n\n#bar - male\ntrace1 = go.Bar(x = age_grpm[\"age group\"]  , y = age_grpm[\"cnt\"],\n                name = \"male kagglers\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n#bar - female\ntrace2 = go.Bar(x = age_grpf[\"age group\"] , y = age_grpf[\"cnt\"],\n                name = \"female kagglers\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n#bar - others\ntrace3 = go.Bar(x = age_grpo[\"age group\"] , y = age_grpo[\"cnt\"],\n                name = \"gender not known\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n\nlayout = go.Layout(dict(title = \"kagglers by gender and age group\",\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"Age group\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1,trace2,trace3]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","87e99f01":"country = multiform.iloc[:,[4]]\ncountry.columns = ['country']\ncountry['cnt'] = 1\ncountry  = country[1:].groupby(['country'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = country[\"country\"]  , y = country[\"cnt\"],\n                name = \"country\",\n                marker = dict(color=-country['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"kagglers by country\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"country\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","2ea23ad9":"education = multiform.iloc[:,[5]]\neducation.columns = ['education']\neducation['cnt'] = 1\neducation  = education[1:].groupby(['education'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = education[\"education\"]  , y = education[\"cnt\"],\n                name = \"education\",\n                marker = dict(color=-education['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"Kagglers by Education\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"Education\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)\n","2deee610":"jobtitle = multiform.iloc[:,[7]]\njobtitle.columns = ['job title']\njobtitle['cnt'] = 1\njobtitle  = jobtitle[1:].groupby(['job title'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = jobtitle[\"job title\"]  , y = jobtitle[\"cnt\"],\n                name = \"Job Title\",\n                marker = dict(color=-jobtitle['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"Kagglers by profession\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"job title\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)\n","0c2331b7":"industry = multiform.iloc[:,[9]]\nindustry.columns = ['industry']\nindustry['cnt'] = 1\nindustry  = industry[1:].groupby(['industry'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = industry[\"industry\"]  , y = jobtitle[\"cnt\"],\n                name = \"Industry\",\n                marker = dict(color=-jobtitle['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"Kagglers by Industry\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"Industry\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","e90c278b":"salary =multiform[['What is your gender? - Selected Choice',\n                   'What is your current yearly compensation (approximate $USD)?']]\n\nsalary.columns = ['gender',\"salary\"]\nsalary['cnt'] = 1\nsalary = salary.dropna()\n\nsalist=[{'id':11,'salary':'I do not wish to disclose my approximate yearly compensation'},\n       {'id':12,'salary':'0-10,000'},\n       {'id':13,'salary':'10-20,000'},\n       {'id':14,'salary':'20-30,000'},\n       {'id':15,'salary':'30-40,000'},\n       {'id':16,'salary':'40-50,000'},\n       {'id':17,'salary':'50-60,000'},\n       {'id':18,'salary':'60-70,000'},\n       {'id':19,'salary':'70-80,000'},\n       {'id':20,'salary':'80-90,000'},\n       {'id':21,'salary':'90-100,000'},\n       {'id':22,'salary':'100-125,000'},\n       {'id':23,'salary':'125-150,000'},\n       {'id':24,'salary':'150-200,000'}, \n       {'id':25,'salary':'200-250,000'},\n       {'id':26,'salary':'250-300,000'},\n       {'id':27,'salary':'300-400,000'},\n       {'id':28,'salary':'400-500,000'},\n       {'id':29,'salary':'500,000'}]\n\nsalist=pd.DataFrame(salist)\nsalary = pd.merge(salary,salist,how='left', on ='salary' )\n\nsalary  = salary[1:].groupby(['gender','salary','id'])[['cnt']].count().sort_values(by=['gender','id']).reset_index()\n                                                                                  \nsalaryf = salary.iloc[0:17,:]\nsalarym= salary.iloc[17:35,:]\nsalaryo = salary.iloc[35:,:]\nsalaryo = salaryo[1:].groupby(['salary'])[['cnt']].sum().reset_index()\nsalaryo['gender'] =\"others\"\n\n\n#bar - male\ntrace1 = go.Bar(x = salarym[\"salary\"]  , y = salarym[\"cnt\"],\n                name = \"male kagglers\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n#bar - female\ntrace2 = go.Bar(x = salaryf[\"salary\"] , y = salaryf[\"cnt\"],\n                name = \"female kagglers\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n#bar - others\ntrace3 = go.Bar(x = salaryo[\"salary\"] , y = salaryo[\"cnt\"],\n                name = \"gender not known\",\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n\nlayout = go.Layout(dict( barmode='stack',title = \"salary of kagglers by gender\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"salary group\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1,trace2,trace3]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig,filename='stacked-bar')","ccce130b":"tool =multiform[['What is your gender? - Selected Choice',\n                 'What is the primary tool that you use at work or school to analyze data? (include text response) - Selected Choice']]\n\ntool.columns = ['gender',\"tool\"]\ntool['cnt'] = 1\ntool  = tool[1:].groupby(['gender','tool'])[['cnt']].count().sort_values(by='gender').reset_index()\n\ntoolf = tool.iloc[0:6,:]\ntoolm= tool.iloc[6:12,:]\ntoolo = tool.iloc[12:,:]\ntoolo = toolo[1:].groupby(['tool'])[['cnt']].sum().reset_index()\ntoolo['gender'] =\"others\"\n\n\n#bar - male\ntrace1 = go.Bar(y = toolm[\"tool\"]  , x = toolm[\"cnt\"],\n                name = \"male kagglers\",\n                orientation = 'h',\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n#bar - female\ntrace2 = go.Bar(y = toolf[\"tool\"] , x = toolf[\"cnt\"],\n                name = \"female kagglers\",\n                orientation = 'h',\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n#bar - others\ntrace3 = go.Bar(y = toolo[\"tool\"] , x = toolo[\"cnt\"],\n                name = \"gender not known\",\n                orientation = 'h',\n                marker = dict(line = dict(width = .5,color = \"black\")),\n                opacity = .9)\n\n\n\nlayout = go.Layout(dict(barmode='stack',title = \"primary tool used by gender\",\n                        autosize=False,width=850,height=500,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"Primary tool group\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1,trace2,trace3]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig,filename='marker-h-bar')","9ce06ff2":"language =multiform.loc[:,['What specific programming language do you use most often? - Selected Choice']]\n\nlanguage.columns = ['language']\nlanguage['cnt'] = 1\nlanguage = language.dropna()\nlanguage  = language[1:].groupby(['language'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n#bar - gender\ntrace1 = go.Bar(x = language[\"language\"]  , y = language[\"cnt\"],\n                name = \"language\",\n                marker = dict(color=-language['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"language used on regular basis\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"language\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)\n","5482dcbc":"framework =multiform.loc[:,['What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Scikit-Learn',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - TensorFlow',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Keras',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - PyTorch',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Spark MLlib',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - H20',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Fastai',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Mxnet',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Caret',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Xgboost',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - mlr',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Prophet',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - randomForest',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - lightgbm',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - catboost',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - CNTK',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Caffe',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - None',\n 'What machine learning frameworks have you used in the past 5 years? (Select all that apply) - Selected Choice - Other']]\n\nframework.columns = ['Scikit-Learn','TensorFlow','Keras','PyTorch','Spark MLlib','H20','Fastai','Mxnet','Caret','Xgboost','mlr','Prophet','randomForest',\n                     'lightgbm','catboost','CNTK','Caffe','None','Other']\n\n\nframework = pd.melt(framework, value_vars=['Scikit-Learn','TensorFlow','Keras','PyTorch','Spark MLlib','H20','Fastai','Mxnet','Caret','Xgboost','mlr','Prophet','randomForest',\n                     'lightgbm','catboost','CNTK','Caffe','None','Other'],var_name='framework', value_name='fm')\nframework = framework.dropna()\nframework['cnt'] = 1\n\nframework  = framework[1:].groupby(['framework'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n#bar - gender\ntrace1 = go.Bar(x = framework[\"framework\"]  , y = framework[\"cnt\"],\n                name = \"machine learning frameworks\",\n                marker = dict(color=-framework['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"Machine learning frameworks used in 5 years\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"machine learning frameworks\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","a9ce5f0f":"IDE = multiform.loc[:,[\"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Jupyter\/IPython\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - RStudio\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - PyCharm\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Visual Studio Code\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - nteract\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Atom\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - MATLAB\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Visual Studio\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Notepad++\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Sublime Text\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Vim\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - IntelliJ\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Spyder\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - None\",\n \"Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Other\"]]\n\n\nIDE.columns = ['Jupyter\/IPython','RStudio','PyCharm','Visual Studio Code','nteract','Atom','MATLAB','Visual Studio','Notepad++','Sublime Text','Vim','IntelliJ','Spyder',\n                     'None','Other']\n\nIDE = pd.melt(IDE, value_vars=['Jupyter\/IPython','RStudio','PyCharm','Visual Studio Code','nteract','Atom','MATLAB','Visual Studio','Notepad++','Sublime Text','Vim','IntelliJ','Spyder',\n                     'None','Other'],var_name='IDE', value_name='fm')\nIDE = IDE.dropna()\nIDE['cnt'] = 1\n\nIDE  = IDE[1:].groupby(['IDE'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n#bar - gender\ntrace1 = go.Bar(x = IDE[\"IDE\"]  , y = IDE[\"cnt\"],\n                name = \"integrated development environments (IDE's)\",\n                marker = dict(color=-IDE['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"integrated development environments (IDE's)\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"integrated development environments (IDE's)\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","91d0cca3":"cloud = multiform.loc[:,['Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - AWS Elastic Compute Cloud (EC2)',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Google Compute Engine',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - AWS Elastic Beanstalk',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Google App Engine',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Google Kubernetes Engine',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - AWS Lambda',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Google Cloud Functions',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - AWS Batch',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Virtual Machines',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Container Service',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Functions',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Event Grid',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Batch',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Azure Kubernetes Service',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - IBM Cloud Virtual Servers',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - IBM Cloud Container Registry',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - IBM Cloud Kubernetes Service',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - IBM Cloud Foundry',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - None',\n 'Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)? - Selected Choice - Other']]\n\n\ncloud.columns = ['AWS Elastic Compute Cloud (EC2)','Google Compute Engine','AWS Elastic Beanstalk','Google App Engine','Google Kubernetes Engine','AWS Lambda',\n                 'Google Cloud Functions','AWS Batch','Azure Virtual Machines','Azure Container Service','Azure Functions','Azure Event Grid','Azure Batch',\n                 'Azure Kubernetes Service','IBM Cloud Virtual Servers','IBM Cloud Container Registry','IBM Cloud Kubernetes Service','BM Cloud Foundry','None','other']\n\ncloud = pd.melt(cloud, value_vars=['AWS Elastic Compute Cloud (EC2)','Google Compute Engine','AWS Elastic Beanstalk','Google App Engine','Google Kubernetes Engine',\n                                   'AWS Lambda','Google Cloud Functions','AWS Batch','Azure Virtual Machines','Azure Container Service','Azure Functions',\n                                   'Azure Event Grid','Azure Batch','Azure Kubernetes Service','IBM Cloud Virtual Servers','IBM Cloud Container Registry',\n                                   'IBM Cloud Kubernetes Service','BM Cloud Foundry','None','other'],var_name='cloud', value_name='fm')\n                \ncloud = cloud.dropna()\ncloud['cnt'] = 1\n\ncloud  = cloud[1:].groupby(['cloud'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - gender\ntrace1 = go.Bar(x = cloud[\"cloud\"]  , y = cloud[\"cnt\"],\n                name = \"cloud computing products\",\n                marker = dict(color=-cloud['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"cloud computing products\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"cloud computing products\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","4404353b":"learning = multiform.loc[:,['On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Udacity',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Coursera',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - edX',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - DataCamp',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - DataQuest',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Kaggle Learn',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Fast.AI',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - developers.google.com',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Udemy',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - TheSchool.AI',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Online University Courses',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - None',\n 'On which online platforms have you begun or completed data science courses? (Select all that apply) - Selected Choice - Other']]\n\n\nlearning.columns = ['Udacity','GCoursera','edX','DataCamp','DataQuest','Kaggle Learn','Fast.AI','developers.google.com','Udemy','TheSchool.AI',\n                    'Online University Courses','None','other']\n\nlearning = pd.melt(learning, value_vars=['Udacity','GCoursera','edX','DataCamp','DataQuest','Kaggle Learn','Fast.AI','developers.google.com','Udemy','TheSchool.AI',\n                    'Online University Courses','None','other'],var_name='learning', value_name='fm')\n                \nlearning = learning.dropna()\nlearning['cnt'] = 1\n\nlearning  = learning[1:].groupby(['learning'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - learning\ntrace1 = go.Bar(x = learning[\"learning\"]  , y = cloud[\"cnt\"],\n                name = \"online platforms for learning\",\n                marker = dict(color=-learning['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"online platforms for learning\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"online platforms for learning\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","22b8d59b":"media = multiform.loc[:,['Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Twitter',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Hacker News',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - r\/machinelearning',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Kaggle forums',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Fastai forums',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Siraj Raval YouTube Channel',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - DataTau News Aggregator',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Linear Digressions Podcast',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Cloud AI Adventures (YouTube)',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - FiveThirtyEight.com',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - ArXiv & Preprints',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Journal Publications',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - FastML Blog',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - KDnuggets Blog',\n \"Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - O'Reilly Data Newsletter\",\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Partially Derivative Podcast',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - The Data Skeptic Podcast',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Medium Blog Posts',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Towards Data Science Blog',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Analytics Vidhya Blog',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - None\/I do not know',\n 'Who\/what are your favorite media sources that report on data science topics? (Select all that apply) - Selected Choice - Other']]\n\n\n\nmedia.columns = ['Twitter','Hacker News','r\/machinelearning',\"Kaggle forums\",'Fastai forums','Siraj Raval YouTube Channel','DataTau News Aggregator','Linear Digressions Podcast',\n                 'Cloud AI Adventures (YouTube)','FiveThirtyEight.com','ArXiv & Preprints','Journal Publications','FastML Blog',\"KDnuggets Blog\",\"O'Reilly Data Newsletter\",\n                \"Partially Derivative Podcast\",\"The Data Skeptic Podcast\",\"Medium Blog Posts\",\"Towards Data Science Blog\",\"Analytics Vidhya Blog\",\n                \"None\/I do not know\",\"Other\"]\n\nmedia = pd.melt(media, value_vars=['Twitter','Hacker News','r\/machinelearning',\"Kaggle forums\",'Fastai forums','Siraj Raval YouTube Channel','DataTau News Aggregator','Linear Digressions Podcast',\n                 'Cloud AI Adventures (YouTube)','FiveThirtyEight.com','ArXiv & Preprints','Journal Publications','FastML Blog',\"KDnuggets Blog\",\"O'Reilly Data Newsletter\",\n                \"Partially Derivative Podcast\",\"The Data Skeptic Podcast\",\"Medium Blog Posts\",\"Towards Data Science Blog\",\"Analytics Vidhya Blog\",\n                \"None\/I do not know\",\"Other\"],var_name='media', value_name='fm')\n                \nmedia= media.dropna()\nmedia['cnt'] = 1\n\nmedia  = media[1:].groupby(['media'])[['cnt']].count().sort_values(by='cnt').reset_index()\n\n\n#bar - media\ntrace1 = go.Bar(x = media[\"media\"]  , y = cloud[\"cnt\"],\n                name = \"favorite media sources\",\n                marker = dict(color=-media['cnt'].values, colorscale='Portland', showscale=False),\n                opacity = .9)\n\nlayout = go.Layout(dict(title = \"favorite media sources\",\n                        autosize=False,width=850,height=700,\n                        plot_bgcolor  = \"rgb(243,243,243)\",\n                        paper_bgcolor = \"rgb(243,243,243)\",\n                        xaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"favorite media sources\",automargin=True,\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                        yaxis = dict(gridcolor = 'rgb(255, 255, 255)',\n                                     title = \"kagglers\",\n                                     zerolinewidth=1,ticklen=5,gridwidth=2),\n                       )\n                  )\ndata = [trace1]\nfig  = go.Figure(data=data,layout=layout)\npy.iplot(fig)","c6db0cee":"## <a id='3.7'>3.7.salary<\/a>\n\nMajority of the participants are either earning below 10,000 or chose not to disclose their earnings. Some participants are earning above 100,000.","141bbc69":"## <a id='3.2'>3.2.Age group<\/a>\n\nMajority of the survey participants are below the age of 40. Few of the survey participants are above the age of 50 years.","539d0237":"-  <a href='#1'>1. Introduction<\/a>\n     - <a href='#1.1'>1.1.survey overview<\/a>\n-  <a href='#2'>2. Libraries and Data<\/a>\n    - <a href='#2.1'>2.1.Libraries<\/a>\n    - <a href='#2.2'>2.2.loading Data<\/a>\n    - <a href='#2.3'>2.3.Data overview<\/a>\n- <a href='#3'>3. Exploratory Data Analysis<\/a>\n    - <a href='#3.1'>3.1.Gender<\/a>\n    - <a href='#3.2'>3.2.Age group<\/a>\n    - <a href='#3.3'>3.3.Country<\/a>\n    - <a href='#3.4'>3.4.Education<\/a>\n    - <a href='#3.5'>3.5.Job Title<\/a>\n    - <a href='#3.6'>3.6.Industry<\/a>\n    - <a href='#3.7'>3.7.salary<\/a>\n    - <a href='#3.8'>3.8.Primary tool<\/a>\n    - <a href='#3.9'>3.9.Programming Language<\/a>\n    - <a href='#3.10'>3.10.Machine learning framework<\/a>\n    - <a href='#3.11'>3.11.integrated development environments (IDE's)<\/a>\n    - <a href='#3.12'>3.12.cloud compute products<\/a>\n    - <a href='#3.13'>3.13.online platforms for learning<\/a>\n    - <a href='#3.14'>3.14.favorite media sources<\/a>\n-  <a href='#4'>4. Summary<\/a>\n    - <a href='#4.1'>4.1.brief overview<\/a>\n-  <a href='#5'>5. Conculsion<\/a>\n    - <a href='#5.1'>5.1.end notes<\/a>\n","1c476ec4":"# <a id='1'>1.Introduction<\/a>\n\n","ab4b2bbd":"## <a id='2.2'>2.2.Loading Data<\/a>\n\nFor the Data, I will use multipleChoiceResponses.csv file. The Dataset has 23859 observations and 395 variables.","1fed37a9":"## <a id='4.1'>4.1.brief overview<\/a>\n\nSome the key findings in this EDA can be summarized as follows:\n\n - **Gender**:Most of the participants are males. Female participants are around 20%.   \n - **Countries**: Majority of the participants are from USA,India and China. \n - **Age Group**: Participants are mostly between 20 to 40 years. Some participants are above 50 years.\n - **Job title**: Particiapants are mostly students (around 22%).\n - **Language**: Python is a clear leader as the most used language.\n - **salary**: suprisingly  19% of the participants earn around 10000. Need to check on this by job title.\n - **ML Framework**: Python ML Frameworks like scikit-learn, tensorflow, keras are clear favourites. \n - **Cloud products**: 14% of the participants have not used any cloud compute products.\n - **IDE's**: Jupyter\/Ipython, Rstudio and pycharm are clear favourites among kagglers.","60111305":"## <a id='3.4'>3.4.Education<\/a>\n\n\nMost Participants either have a Master's degree(10,855), Bachelor's degree (7,083) or Doctoral degree (3,356). 232 participants have no formal education.  ","97c0742b":"## <a id='3.13'>3.13.online platforms for learning<\/a>\n\nGcoursera leads in online platforms for learning. Next on the popularity charts are Udemy and Datacamp. Kaggle learn is on the list on the fourth position.","b14ce17e":"## <a id='3.10'>3.10.Machine learning framework<\/a>\n\n\nScikit-learn is the most used machine learning framenwork, followed by tensorflow, keras, randomforest. Lightgbm which is quiet popluar on kaggle is used by 2099 participants.","b43e1bf7":"## <a id='5.1'>5.1.end notes<\/a>\n\nPlease do upvote if you like this kernel. ","04cf2933":"# <a id='3'>3.Exploratory Data Analysis<\/a>\n","9485710f":"## <a id='3.5'>3.5.Job Title<\/a>\n\n5,253 Students are major contributors to the survey, folllowed by Data Scientist(4137), Software Engineer(3130), Data Anlayst(1922).  842 particiapnts were not employed at the time of the survey.","bc3dcbd1":"## <a id='3.12'>3.12.cloud compute products<\/a>\n\nWhile AWS is used by most kagglers, 3376 participants have not used any cloud computing products.","5ff294fd":"## <a id='3.11'>3.11.integrated development environments (IDE's)<\/a>\n\nAmong IDE's Jupyter\/Ipython is a clear leader, followed RStudio, Notepad++, Pycharm.","a74a4731":"## <a id='3.8'>3.8.Primary tool<\/a>\n\nMajority of the participants are using local or hosted developments environments like Rstudio\/Jupyter lab.\n","30237a8b":"## <a id='3.3'>3.3.Country<\/a>\n\nUnited states leads with the most number of survey participants, followed by India and China. Country of 1036 participants is not mentioned.","cc27caaf":"## <a id='3.9'>3.9.Programming Language<\/a>\n\nPython is the most preferred and used language. Followed by R and SQL.","483230ef":"## <a id='2.1'>2.1.Libraries<\/a>\n\nplotly and pandas are used for most part of this EDA.","a64f959c":"## <a id='3.6'>3.6.Industry<\/a>\n\n3130 participants are from Computers\/Technology Industry, Academics\/Education(1322), Accounting\/Finance(1189). 1922 particippants are students.","08fade6c":"# <a id='4'>4.Summary<\/a>","866c74fc":"# <a id='5'>5.Conculsion<\/a>","6d43f88f":"## <a id='3.1'>3.1.Gender<\/a>\n\n\nMost of the responses are from 19,430 male kagglers. 4,009 female kagglers also form part of the survey. Gender of 419 kagglers is not known, as they preferred not to disclose. ","5fb3cee0":"# <a id='2'>2.Libraries and Data<\/a>\n\n","eda388c5":"## <a id='3.14'>3.14.favorite media sources<\/a>\n\nKaggle forums is most preferred among media sources, which is quiet understanable.","786916ec":"## <a id='1.1'>1.1.survey overview<\/a>\n\nWith the rapid pace at which technology is driving innovation in machine learning and artificial intelligence, it has become immensely important to keep pace with the ongoing trends in data science.Kaggle conducted an industry-wide survey that presents a truly comprehensive view of the state of data science and machine learning. The survey resulted with 23,859 responses, a 49% increase over last year. With this survey EDA, I will try to provide an overview on the global, diverse, and dynamic nature of the data science and machine learning industry. \n\n\n","df4dcf32":"## <a id='2.3'>2.3.Data Overview<\/a>\n\nThe questions form the columns names. These will be cleaned to present a more concise view in plots.  "}}