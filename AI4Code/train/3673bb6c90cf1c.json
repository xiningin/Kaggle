{"cell_type":{"bc2e9ff0":"code","8f41257e":"code","efc91df0":"code","e094d0ba":"code","ad2a6d44":"code","00529f9b":"code","59242fb0":"code","85ee6346":"code","cafddb8d":"code","9dea6aae":"markdown"},"source":{"bc2e9ff0":"from pathlib import Path\nimport numpy as np\nimport pandas as pd\nimport xgboost as xgb\nfrom tqdm.notebook import tqdm","8f41257e":"ll ..\/input","efc91df0":"DEBUG = True","e094d0ba":"ROOT = Path.cwd().parent\nINPUT_ROOT = ROOT \/ \"input\"\n\nKF_ROOT = INPUT_ROOT \/ \"2nd-place-solution-inference-kf-new-sequences\" \/ \"output\"\nONODERA_ROOT = INPUT_ROOT \/ \"covid-233-onodera-outputs-v2\"\nXGB_ROOT = INPUT_ROOT \/ \"stanford-covid-vaccine-onodera-models\" \/ \"xgb\/xgb\"\n\nSUBMISSION_FILE = ROOT \/ \"working\" \/ \"2nd-place-233-seq.csv.gz\"\n\nCOLS_TARGET = [\"reactivity\", \"deg_Mg_pH10\", \"deg_pH10\", \"deg_Mg_50C\", \"deg_50C\"]\n","ad2a6d44":"# ==============================================================================\n# load kf\n# ==============================================================================\n\n\nfile_kf = {}\nfiles = sorted(KF_ROOT.glob('*.csv.gz'))\nfor i, file in enumerate(files):\n\n    file_kf[str(file).split(\"\/\")[-1][:-7]] =  pd.read_csv(file)\n    print(f\"Loaded: {file}\")\n\nprint('kf', len(file_kf))","00529f9b":"# ==============================================================================\n# load onodera\n# ==============================================================================\n\nfile_onodera = {}\nfiles = sorted(ONODERA_ROOT.glob('*.csv'))\nfor i, file in enumerate(files):\n\n    file_onodera[str(file).split(\"\/\")[-1][:-4]] =  pd.read_csv(file)\n    print(f\"Loaded: {file}\")\n\nprint('onodera', len(file_onodera))\n","59242fb0":"# ==============================================================================\n# xgb\n# ==============================================================================\n\nfiles_all = {}\nfiles_all.update(file_kf)\nfiles_all.update(file_onodera)\n\ncols = [\"id_seqpos\"] + COLS_TARGET\n\n\nX_test = pd.concat(\n    [\n        files_all[k][cols].set_index(\"id_seqpos\").add_prefix(k + \"_\")\n        for k in files_all\n    ],\n    axis=1,\n)\n\ntest_id = X_test.index\nX_test.reset_index(drop=True, inplace=True)\n\nX_train = pd.read_csv(XGB_ROOT \/ \"X_train_head.csv\")\n\na, b = X_train.align(X_test, join='inner', axis=1)\nif not a.shape == X_train.shape:\n    raise Exception(a.shape, X_train.shape)\nelse:\n    X_train = a\n    X_test = b\n\ndtest = xgb.DMatrix(X_test)\nsub = pd.DataFrame(index=test_id)\n\nfor target in COLS_TARGET:\n    sub[target] = 0\n    cnt = 0\n    for file in tqdm(sorted(XGB_ROOT.glob(f'xgb_{target}*.json'))):\n        model = xgb.Booster({'nthread': 4})\n        model.load_model(file)\n\n        sub[target] += model.predict(dtest)\n        cnt += 1\n        \n        if DEBUG:\n            break\n    \n    sub[target] \/= cnt\n    print(f\"[{target}] Done\")\n\nsub.to_csv(SUBMISSION_FILE)","85ee6346":"sub","cafddb8d":"pd.read_csv(SUBMISSION_FILE)","9dea6aae":"### output is [here](https:\/\/www.kaggle.com\/onodera\/covid-result-of-233-sequences)"}}