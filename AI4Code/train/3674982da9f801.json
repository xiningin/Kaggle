{"cell_type":{"b2bdc765":"code","212e3528":"code","2c5b7893":"code","d7f0aa5c":"code","41b7290b":"code","1c89be78":"code","54245fd6":"code","4d15a08f":"code","30f7ae26":"code","19d40fdd":"code","acbf35b2":"code","9dcdd897":"code","17f4b87c":"code","d15c8331":"code","eebe26ad":"code","cc718b01":"code","82fbc751":"markdown","050445e7":"markdown","b49354e0":"markdown","289b6af1":"markdown","25cf8861":"markdown","1d2c7eaf":"markdown","412aa962":"markdown","612eb187":"markdown","9312dfcf":"markdown","89b48a6b":"markdown","579153e0":"markdown","76847487":"markdown","81a2f305":"markdown","52515587":"markdown"},"source":{"b2bdc765":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","212e3528":"pip install openpyxl\n","2c5b7893":"athletes_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\nGenderEntries_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx', index_col ='Total')\nMedals_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","d7f0aa5c":"athletes_df.sample(5)","41b7290b":"athletes_per_country = []\ncountries = list(set(athletes_df['NOC']))\n\nfor x in countries:\n    athletes_per_country.append(len(athletes_df[athletes_df['NOC'] == x]))\n    \nv = sorted(list(zip(athletes_per_country, countries)), reverse = True)","1c89be78":"plt.style.use('default')\n# Figure size\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Horizontal Bar plot\n\nax.barh([tuple[1] for tuple in v[19::-1]], [tuple[0] for tuple in v[19::-1]])\n\n#A xis Titles\nplt.title(\"Top 20 countries with most athletes\", fontweight = \"bold\")\nplt.xlabel('Number of Athletes')\n\n# Remove axes splines\nfor s in['top', 'bottom', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\n# Show values \nfor i in ax.patches:\n    ax.text(i.get_width()+20, i.get_y()+0.5, str(round((i.get_width()), 2)),\n            fontsize=10, fontweight='bold', color='grey')\n\n#Show plot\nplt.show()","54245fd6":"disciplines = list(set(athletes_df.Discipline))\n\nathletes_per_discipline = []\nfor x in disciplines:\n    athletes_per_discipline.append(len(athletes_df.Name[athletes_df['Discipline'] == x]))\n    \nv = sorted(list(zip(athletes_per_discipline, disciplines)), reverse = True)","4d15a08f":"# Figure size\nfig, ax = plt.subplots(figsize = (10,10))\n\n# Horizontal bar\nax.barh([tuple[1] for tuple in v[19::-1]], [tuple[0] for tuple in v[19::-1]])\n\n# Axis Titles\nplt.title(\"The 20 most popular disciplines\", fontweight = \"bold\")\nplt.xlabel('Number of Athletes')\n\n# Remove axes splines\nfor s in['top', 'bottom', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\n# Show values \nfor i in ax.patches:\n    ax.text(i.get_width()+20, i.get_y()+0.5, str(round((i.get_width()), 2)),\n            fontsize=10, fontweight='bold', color='grey')\n\n# Show plot\nplt.show()","30f7ae26":"GenderEntries_df.sample(5)","19d40fdd":"GenderEntries_df = GenderEntries_df.sort_index(ascending = False)\n\ntotal_participations_per_sport = GenderEntries_df.index\ndisciplines = list(GenderEntries_df['Discipline'])\n\ntotal_participants = sum(total_participations_per_sport)\nfemale_participants = sum(GenderEntries_df['Female'])\nmale_participants = sum(GenderEntries_df['Male'])\nfemale_freq = float(\"{:.2f}\".format(female_participants\/total_participants))\nmale_freq = float(\"{:.2f}\".format(male_participants\/total_participants))","acbf35b2":"plt.style.use('default')\n# Labels\nlabels = ['Males' + ' - ' + str(100*male_freq) + str(' %'), 'Females' + ' - ' + str(100*female_freq) +' %']\n\n# Edit pie\nplt.pie([male_freq, female_freq], labels = labels, wedgeprops = {'edgecolor': 'black'})\n\n# Title\nplt.title(\"Participation by Gender\")\n\n# Plot pie\nplt.show()","9dcdd897":"\nGenderEntries_df.sample(5)","17f4b87c":"females_per_sport = list(GenderEntries_df.Female)\nmales_per_sport = list(GenderEntries_df.Male)\n\nw=0.4\nbar1 = np.arange(len(disciplines[:10]))\nbar2 = [i+w for i in bar1]\n\n# Figure size\nfig, ax = plt.subplots(figsize = (10,9))\n\nrects1 = ax.barh(bar1, males_per_sport[9::-1], w, label = \"Males\")\nrects2 = ax.barh(bar2, females_per_sport[9::-1], w, label = \"Females\")\n\n\n\n# Remove axes splines\nfor s in['top', 'bottom', 'left', 'right']:\n    ax.spines[s].set_visible(False)\n\nplt.xlabel('Number of Athletes')\nplt.title(\"Participation by Gender in Top 10 most popular disciplines\")\nplt.yticks(bar1+w\/2, disciplines[9::-1])\nplt.legend()\n\n\n# Function to print values on top of bars\ndef show(rects):\n    for i in rects:\n        ax.text(i.get_width()+20, i.get_y()+0.2, str(round((i.get_width()), 2)),\n                fontsize=10, fontweight='bold', color='grey')\n\n# Show values\nshow(rects1)\nshow(rects2)\n\n# Plot horizontal bar chart\nplt.show()\n","d15c8331":"Medals_df.sample(5)","eebe26ad":"Medals_df = Medals_df.set_index('Rank by Total')\nMedals_df = Medals_df.sort_index()\n\ngold_top_20 = list(Medals_df.Gold)[:20]\nsilver_top_20 = list(Medals_df.Silver)[:20]\nbronze_top_20 = list(Medals_df.Bronze)[:20]\ntop_20_countries = list(Medals_df['Team\/NOC'])[:20]\n\nbottom_silver = bronze_top_20\nbottom_gold = [a+b for a,b in zip(bronze_top_20, silver_top_20)]","cc718b01":"\n# Figure Size\nfig, ax = plt.subplots(figsize = (20,10))\n\np1 = ax.bar(top_20_countries, bronze_top_20, label = 'Bronze', color = '#e6b18c')\np2 = ax.bar(top_20_countries, silver_top_20, bottom = bottom_silver, label = 'Silver', color = '#cecdB6')\np3 = ax.bar(top_20_countries, gold_top_20, bottom = bottom_gold, label = 'Gold', color = '#ffff58')\n\n# Remove axes splines\nfor s in['top', 'right']:\n    ax.spines[s].set_visible(False)\n\n# Titles\nplt.ylabel('Medals')\nplt.title('Top 20 countries with most medals')\n\n# Draw labels on top of each stacked bar\nfor i in range(len(top_20_countries)):\n    plt.text(i, bronze_top_20[i], str(bronze_top_20[i]), ha = \"center\", va = \"bottom\")\n    plt.text(i, silver_top_20[i]+bronze_top_20[i], str(silver_top_20[i]), ha = \"center\", va = \"bottom\")\n    plt.text(i, gold_top_20[i]+silver_top_20[i]+bronze_top_20[i], str(gold_top_20[i]), ha = \"center\", va = \"bottom\")\n    \nplt.xticks(rotation =90)\nplt.legend()\n\n# Show stacked bar chart\nplt.show()","82fbc751":"### 5. Analysis for medal distribution <a class=\"anchor\" id=\"chapter2\"><\/a>\n**Which are the top 20 countries with most medals?**","050445e7":"### 3. The 20 most popular disciplines <a class=\"anchor\" id=\"chapter2\"><\/a>\n**Which disciplines are the most popular with respect to participation?**","b49354e0":"#### 4.1 Pie chart of gender participation <a class=\"anchor\" id=\"section_4_1\"><\/a>","289b6af1":"#### 2.2 Bar chart 1 <a class=\"anchor\" id=\"section_2_2\"><\/a>","25cf8861":"#### 3.1 Creating the list of the most popular disciplines <a class=\"anchor\" id=\"section_3_1\"><\/a>","1d2c7eaf":"#### 4.2 Gender distribution among the most popular disciplines <a class=\"anchor\" id=\"section_4_2\"><\/a>\n","412aa962":"### 4. Some gender-related analysis <a class=\"anchor\" id=\"chapter4\"><\/a>\n","612eb187":"#### 3.2 Bar chart 2 <a class=\"anchor\" id=\"section_3_2\"><\/a>","9312dfcf":"#### 5.1 Manipulating the data of medals <a class=\"anchor\" id=\"section_5_1\"><\/a>\n","89b48a6b":"### Table of Contents\n\n* [1. Importing modules and reading the data](#chapter1)\n\n* [2. Top 20 countries with most athletes](#chapter2)\n    * [Manipulating the data for the athletes](#section_2_1)\n    * [Bar chart 1](#section_2_2)\n    \n* [3. The 20 most popular disciplines](#chapter3)\n    * [3.1 Creating the list of the most popular disciplines](#section_3_1)\n    * [3.2 Bar chart 2](#section_3_2)\n \n* [4. Some gender-related analysis](#chapter4)\n    * [4.1 Pie chart of gender participation](#section_4_1)\n    * [4.2 Gender distribution among the most popular disciplines](#section_4_2)\n\n* [5. Analysis for medal distribution](#chapter5)\n     * [5.1 Manipulating the data of medals](#section_5_1)\n     * [5.2 Stacked bar chart of medal distribution](#section_5_1)\n     ","579153e0":"### 2. Top 20 countries with most athletes <a class=\"anchor\" id=\"chapter2\"><\/a>\n\n**Which are the top 20 countries with the most athletes ?**","76847487":"#### 5.2 Stacked bar chart of medal distribution <a class=\"anchor\" id=\"section_5_2\"><\/a>\n","81a2f305":"#### 2.1 Manipulating the data for the athletes <a class=\"anchor\" id=\"section_2_1\"><\/a>","52515587":"### 1. Importing modules and reading the data <a class=\"anchor\" id=\"chapter1\"><\/a>"}}