{"cell_type":{"d23a486b":"code","48dcea5a":"code","f3f81e3d":"code","a3bd68e2":"code","8e3cf699":"code","0e1ace2f":"code","20dec146":"code","51a311f4":"code","256bec2b":"code","c5022305":"code","9b360308":"code","d2404359":"code","a551f261":"code","a5caf90b":"code","c744023a":"code","23504a58":"code","65458ced":"code","6e5e96ba":"code","03e03d5f":"code","2b50fd75":"code","5a6c90d8":"code","448e477e":"code","094473c6":"code","ee57c499":"code","430ff847":"markdown","9a740781":"markdown","7c6058e5":"markdown","203f598b":"markdown","fb225c49":"markdown","75c9ce1d":"markdown","e73d5e02":"markdown","98fbea3b":"markdown","d3b237bf":"markdown"},"source":{"d23a486b":"# import the libaries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom sklearn.metrics import accuracy_score, confusion_matrix, plot_confusion_matrix\nfrom sklearn import tree\nfrom sklearn.preprocessing import StandardScaler,LabelEncoder","48dcea5a":"# import the data\ndf = pd.read_csv('..\/input\/social-network-ads\/Social_Network_Ads.csv')\ndf","f3f81e3d":"df.shape","a3bd68e2":"df.isnull().sum()","8e3cf699":"df.info()","0e1ace2f":"le = LabelEncoder()","20dec146":"df['Gender'] = le.fit_transform(df['Gender'])\ndf","51a311f4":"df.drop(['User ID'], axis=1, inplace=True)","256bec2b":"df","c5022305":"sc = StandardScaler()","9b360308":"df.iloc[:,:3]  = sc.fit_transform(df.iloc[:,:3])\ndf","d2404359":"X = df.drop(['Purchased'], axis=1)\nX","a551f261":"Y = df['Purchased']\nY","a5caf90b":"train_x, test_x, train_y, test_y = train_test_split(X, Y, test_size=0.3, random_state=99)","c744023a":"train_x.shape, test_x.shape, train_y.shape, test_y.shape","23504a58":"dt =  DecisionTreeClassifier()","65458ced":"dt.fit(train_x, train_y)","6e5e96ba":"features = pd.DataFrame({'Features' : train_x.columns, 'Importance' : dt.feature_importances_})\nfeatures.sort_values('Importance', ascending=False)","03e03d5f":"y_pred = dt.predict(test_x)\ny_pred","2b50fd75":"results = pd.DataFrame({'Actual' : test_y, 'Predicted' : y_pred})\nresults","5a6c90d8":"accuracy_score(test_y,y_pred)","448e477e":"confusion_matrix(test_y,y_pred)","094473c6":"plot_confusion_matrix(dt, test_x, test_y)","ee57c499":"plt.figure(figsize=(20,15))\n\ntree.plot_tree(dt,class_names=['0','1'],feature_names=train_x.columns, filled=True,rounded=True,fontsize=12)","430ff847":"Now we will divide the data into Dependent and independent varaibles.","9a740781":"Here we can see that Gender is not of much importance, so we can remove it, i will not remove it as of now.","7c6058e5":"Now we will visualize our decision tree.","203f598b":"Now we will check the feature importance of our data.","fb225c49":"We can see that the data in our independent variables has a very high difference in values, which can affect our model, so we will scale the data using standard scaler.","75c9ce1d":"we can see that there are no null values in our dataset.","e73d5e02":"We can see that we have a user id column which is not of much importance so we will remove that column.","98fbea3b":"We can see that we one column who has categorical value, we will convert the categorical values into numerical values with the help of labelencoder.","d3b237bf":"We will now divide our data into training and testing data."}}