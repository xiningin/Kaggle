{"cell_type":{"3b70c979":"code","47a6554c":"code","4d56f085":"code","b2280cd8":"code","c2da0a93":"code","8a8fb2a4":"code","5abe811a":"code","99083e55":"code","bfe02f15":"code","c23396cd":"code","de22a524":"code","b627f7a0":"code","5288bdf7":"code","e6105044":"code","734917fa":"code","c472f9dd":"code","6468c907":"code","9a8c9e24":"code","16698067":"code","57a54064":"code","73b3993d":"code","15120794":"code","0b2431f2":"code","2acec532":"code","e7ce87a8":"code","9cc98af8":"code","0188eacf":"code","6509dcd0":"code","dc312d5c":"code","8159ed54":"code","d8a84676":"markdown","2900b57c":"markdown","30dc3dfc":"markdown"},"source":{"3b70c979":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47a6554c":"!pip install ppscore","4d56f085":"\n\nimport warnings\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nimport ppscore as pps\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nimport numpy as np\n\n\n\nwarnings.filterwarnings(\"ignore\")\n\n\n","b2280cd8":"df=pd.read_csv('\/kaggle\/input\/churn-modelling\/Churn_Modelling.csv')","c2da0a93":"df","8a8fb2a4":"df.describe()","5abe811a":"lb=LabelEncoder()","99083e55":"df['Geography']=lb.fit_transform(df['Geography'])\ndf['Gender']=lb.fit_transform(df['Gender'])","bfe02f15":"df.info()","c23396cd":"plt.figure(figsize=(15,8))\nsns.heatmap(pps.matrix(df),annot=True)\nplt.show()\n\n","de22a524":"sns.countplot(df['Exited'])\nplt.show()","b627f7a0":"df['Exited'].value_counts(normalize=True)*100","5288bdf7":"df['Gender'].groupby(df['Exited']).value_counts().plot(kind='bar')\nplt.show()","e6105044":"df['NumOfProducts'].groupby(df['Exited']).value_counts().plot(kind='bar')\nplt.show()","734917fa":"sns.scatterplot(df['Age'],df['CreditScore'],hue=df['Exited'])\nplt.show()","c472f9dd":"X=df[['Age','NumOfProducts','CreditScore']]","6468c907":"y=df['Exited']","9a8c9e24":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=0)","16698067":"sc=StandardScaler()\n","57a54064":"X_train=sc.fit_transform(X_train)\nX_test=sc.fit_transform(X_test)","73b3993d":"lr=LogisticRegression(class_weight='balanced')","15120794":"lr.fit(X_train,y_train)","0b2431f2":"y_pred=lr.predict(X_test)","2acec532":"print(classification_report(y_test,y_pred))\nprint(lr.score(X_train,y_train))\nprint(lr.score(X_test,y_test))","e7ce87a8":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","9cc98af8":"knn1 = KNeighborsClassifier(n_neighbors=38,p=2)","0188eacf":"knn1.fit(X_train,y_train)","6509dcd0":"pred5 = knn1.predict(X_test)","dc312d5c":"print(classification_report(y_test,pred5))\nprint(knn1.score(X_train,y_train))\nprint(knn1.score(X_test,y_test))","8159ed54":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,pred5)\ncm","d8a84676":"KNN","2900b57c":"most of exited people lies between age of 40 to 60","30dc3dfc":"imbalanced data set"}}