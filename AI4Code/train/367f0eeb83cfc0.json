{"cell_type":{"d202cb2a":"code","29f9fd30":"code","b861bee3":"code","55ede76e":"code","f30d3b3b":"code","d31c5b5f":"code","7f16b65c":"code","5853b39a":"code","1bde1a52":"code","07e9be20":"code","cba251e9":"code","6ef63795":"code","deda05e9":"code","9a0fbf5b":"code","2d462693":"code","aa76ff34":"code","92c700fc":"code","ccc915bb":"code","9832c50f":"code","1a84150a":"code","771fc25b":"code","436a524a":"code","7226e8d9":"code","8ce302e4":"code","a4b43993":"code","968ec4ef":"code","28a96985":"code","ce54d894":"code","71b94ff7":"code","391225d0":"code","5f39fa95":"code","b0c90f84":"code","3c4f700b":"code","71269ce7":"code","166d6735":"code","9e62afa2":"code","715cbab4":"code","4a88763d":"code","e9201a54":"code","37cbd66a":"code","fed316c2":"code","90973cb5":"markdown","82cbc6df":"markdown","125d330b":"markdown","d3f5600e":"markdown","76489069":"markdown","fd7fbfb0":"markdown","591d8ba6":"markdown","7a8cdd0b":"markdown","648f5bf0":"markdown","67925561":"markdown","08c7fde6":"markdown","a1b02695":"markdown","7b8db0dc":"markdown"},"source":{"d202cb2a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n%matplotlib inline\nimport os\nos.listdir('\/kaggle\/input\/pmr3508-tarefa-1-3508-adult-dataset')","29f9fd30":"adult = pd.read_csv('..\/input\/adult-dataset\/adult.data',\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")\nadult.head()","b861bee3":"adult.shape #H\u00e1 32561 atributos, e 15 par\u00e2metros.","55ede76e":"list(adult)","f30d3b3b":"adult[\"Age\"].value_counts().plot(kind=\"bar\")\n","d31c5b5f":"adult[\"Country\"].value_counts().plot(kind=\"bar\")\n","7f16b65c":"adult[\"Sex\"].value_counts().plot(kind=\"pie\")\n","5853b39a":"adult[\"Martial Status\"].value_counts().plot(kind=\"bar\")\n","1bde1a52":"adult[\"Race\"].value_counts().plot(kind=\"pie\")","07e9be20":"adult[\"Occupation\"].value_counts().plot(kind=\"bar\")\n","cba251e9":"##adult[\"fnlwgt\"].value_counts().plot(kind=\"bar\")","6ef63795":"adult.isnull().sum().plot(kind=\"bar\")\n","deda05e9":"nAdult = adult.dropna() \nnAdult\n","9a0fbf5b":"nAdult.shape #H\u00e1 menos linhas de atributos!","2d462693":"testAdult = pd.read_csv('..\/input\/adult-dataset\/adult.test',\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")\ntestAdult.shape","aa76ff34":"nTestAdult = testAdult.dropna()\nnTestAdult","92c700fc":"nTestAdult.shape\n","ccc915bb":"#Consideraremos inicialmente todos os valores num\u00e9ricos\nXadult = nAdult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\nXadult.head()","9832c50f":"Yadult = nAdult.Target\nYadult.head","1a84150a":"\n#Consideraremos inicialmente todos os valores num\u00e9ricos\nXtestAdult = nTestAdult[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\n","771fc25b":"YtestAdult = nTestAdult.Target\n","436a524a":"#Aplica\u00e7\u00e3o da Valida\u00e7\u00e3o Cruzada e Treinamento do modelo:\nimport sklearn\nfrom sklearn.neighbors import KNeighborsClassifier\n\n","7226e8d9":"#Primeiro teste com k=3\nknn = KNeighborsClassifier(n_neighbors=3)\n","8ce302e4":"from sklearn.model_selection import cross_val_score\n","a4b43993":"scores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores.mean()\n","968ec4ef":"knn = KNeighborsClassifier(n_neighbors=30)\nscores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores.mean()\n","28a96985":"from sklearn import preprocessing\nnumAdult = nAdult.apply(preprocessing.LabelEncoder().fit_transform)\nnumTestAdult = nTestAdult.apply(preprocessing.LabelEncoder().fit_transform)","ce54d894":"\nXadult = numAdult.iloc[:,0:14]","71b94ff7":"Yadult = numAdult.Target","391225d0":"XtestAdult = numTestAdult.iloc[:,0:14]","5f39fa95":"YtestAdult = numTestAdult.Target","b0c90f84":"knn = KNeighborsClassifier(n_neighbors=30)\nscores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores.mean()","3c4f700b":"knn.fit(Xadult,Yadult)","71269ce7":"YtestPred = knn.predict(XtestAdult)","166d6735":"from sklearn.metrics import accuracy_score\n\naccuracy_score(YtestAdult,YtestPred)","9e62afa2":"Xadult = numAdult[[\"Age\", \"Workclass\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\"]]","715cbab4":"XtestAdult = numTestAdult[[\"Age\", \"Workclass\", \"Education-Num\", \"Martial Status\",\n        \"Occupation\", \"Relationship\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\"]]","4a88763d":"knn = KNeighborsClassifier(n_neighbors=30)\nscores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores.mean()","e9201a54":"knn.fit(Xadult,Yadult)\n","37cbd66a":"YtestPred = knn.predict(XtestAdult)","fed316c2":"accuracy_score(YtestAdult,YtestPred)","90973cb5":"# 4) Passando todos os dados n\u00e3o-num\u00e9ricos para valores num\u00e9ricos, e fazendo alguns testes com v\u00e1rios conjuntos de atributos (mantendo k=30, pois foi o valor de k que levou a melhor acur\u00e1cia).","82cbc6df":"# 2) An\u00e1lise dos dados","125d330b":"# 1) Importa\u00e7\u00e3o das bibliotecas e leitura dos arquivos","d3f5600e":"### Separando os atributos da base de treino","76489069":"### Usando todos os par\u00e2metros","fd7fbfb0":"\n### Outro teste: mesmos dados, por\u00e9m kNN com k=30. Melhor resultado obtido.\n\n","591d8ba6":"### Retirando linhas com dados faltantes.","7a8cdd0b":"# 3) Treinamento do algoritmo\n\n","648f5bf0":"# PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es \n## Trabalho 1\n## Aluno: PMR3508-2019-75","67925561":"### Fazendo o mesmo processo com os dados de teste.\n","08c7fde6":"### Separando os atributos da base teste","a1b02695":"### Portanto, obteve-se uma melhor acur\u00e1cia ap\u00f3s selecionar k = 30 e desconsiderar alguns par\u00e2metros do dataset.","7b8db0dc":"### Desconsiderando campos abaixo foram desconsiderados conforme a an\u00e1lise pr\u00e9via dos dados:\nnative.country: os dados de teste s\u00e3o na maioria de norte-americanos\n\nrace: os dados de teste s\u00e3o na maioria de pessoas brancas\n\nfnlwgt: \u00e9 um n\u00famero individual para cada pessoa."}}