{"cell_type":{"ac52c96a":"code","5ba855ed":"code","1d394027":"code","c8b1123d":"code","6418bc59":"code","4e1c2a8b":"code","921441df":"code","36ca0414":"code","670a97a8":"markdown","54bc4994":"markdown","eca1c035":"markdown","7e9c84f5":"markdown","0a2648a0":"markdown"},"source":{"ac52c96a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nfrom plotly.offline import plot as plt\nimport datetime as dt\nimport warnings\nwarnings.filterwarnings('ignore')","5ba855ed":"def diff_data(df,country_list)->bool:\n    # initialization\n    tmp = []\n    for i in range(len(df)):\n        tmp.append(0)\n    df[\"new_Deaths_per_day\"] = tmp #all zero\n    \n    for country in country_list:\n        flag = 0\n        for i in range(len(df)): #index\n            if(df.at[i,\"Country\"] == country):\n                if(flag != 0):\n                    df.at[i,'new_Deaths_per_day'] = df.at[i,'Deaths'] - yesterday_Deaths\n                else:\n                    flag = 1\n                yesterday_Deaths = df.at[i,\"Deaths\"]","1d394027":"data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n#character\ndata.drop(['SNo','Last Update','Province\/State'],axis = 1, inplace = True) \n#Date\ndata['ObservationDate'] = pd.to_datetime(data[\"ObservationDate\"])\ndata = data[data['ObservationDate'] >= dt.datetime(2020,3,1) ]\ndata = data[data['ObservationDate'] <= dt.datetime(2020,4,30)]\ndata['ObservationDate'] = data['ObservationDate'].dt.strftime('%y-%m-%d')\n#rename\ndata.columns = ['Date','Country',\"Confirmed\",\"Deaths\",\"Recovered\"]\n#sum Country\ndata = data.groupby([\"Date\",\"Country\"],as_index = False).sum()\n# Top 30 \"Counfired\" cumsum\ncountry = data.groupby(\"Country\",as_index=False).sum()\ncountry_list = country.sort_values('Confirmed',ascending = False ).head(30)[\"Country\"].values\ndata = data[data[\"Country\"].isin(country_list)]\ndata.reset_index(drop=True,inplace=True)\n#new_data\ndiff_data(data,country_list)\ndata['Deaths_rate(%)']  = data['Deaths'] \/ data[\"Confirmed\"] * 100\ndata.tail()","c8b1123d":"fig = px.bar(data,x = 'Country',y = 'Confirmed',color = \"Recovered\",animation_frame = 'Date',title=\"Confirmed in each Countries\")\nfig.show()","6418bc59":"fig = px.bar(data,x = 'Country',y = 'new_Deaths_per_day',color = \"Deaths_rate(%)\",animation_frame = 'Date',title=\"new_Deaths in each Countries\")\nfig.show()","4e1c2a8b":"data_fig = data.sort_values(\"Confirmed\",ascending = False)\nfig = px.area(data_fig, x=\"Date\", y=\"Confirmed\", color=\"Country\",title=\"World_Confirmed\")\nfig.show()","921441df":"df = pd.read_csv(\"..\/input\/population-by-country-2020\/population_by_country_2020.csv\")\ndf = df[[\"Country (or dependency)\",\"Population (2020)\",\"Density (P\/Km\u00b2)\",\"Urban Pop %\"]]\n#rename\ndf.columns=[\"Country\",\"Population\",\"Density (P\/Km\u00b2)\",\"Urban_rate(%)\"]\n#replace\ndf.replace('China','Mainland China',inplace=True)\ndf.replace('United States', 'US',inplace=True)\ndf.replace('United Kingdom', 'UK',inplace=True)\n\ndf = df[df[\"Country\"].isin(country_list)]\ndf.reset_index(drop=True,inplace = True)\ndf.sort_values(\"Country\",ascending = True, inplace = True)\ndata_Apr_30 = pd.merge(data.tail(30).reset_index(drop=True), df, on = \"Country\")\ndata_Apr_30[\"Confirmed_rate(%)\"] = data_Apr_30[\"Confirmed\"] \/ data_Apr_30[\"Population\"] * 100\ndata_Apr_30.sort_values(\"Confirmed_rate(%)\",ascending = False,inplace = True)\ndata_Apr_30.reset_index(drop=True)","36ca0414":"fig = px.bar(data_Apr_30, x = \"Country\", y = \"Confirmed_rate(%)\",color = \"Density (P\/Km\u00b2)\",title = \"Confirmed_rate(%) in each country\")\nfig.show()","670a97a8":"### more data: population","54bc4994":"### Data top of 30 countries","eca1c035":"### data looking","7e9c84f5":"function","0a2648a0":"### library"}}