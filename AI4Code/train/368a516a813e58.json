{"cell_type":{"7aed3757":"code","5cc1b65e":"code","24dbb794":"code","edf255dc":"code","703025f8":"code","062de721":"code","7cbac3a5":"code","0996735c":"code","ff22ef46":"code","83cf954d":"code","56ed90b5":"code","106103c1":"code","02e72bc5":"code","aefb1a88":"code","ae2e8a4c":"code","6e0d3746":"code","b712e1d6":"code","82a6ef10":"code","10ba5355":"code","10c2ebf2":"code","12ac3820":"code","d6f57092":"code","42c46592":"code","fab1c4e2":"code","e62bc4ed":"code","a022d9c5":"code","9873a6de":"code","8ee52ca6":"code","a6865f75":"code","12e93a99":"code","5f3dea8f":"code","058fddf3":"markdown","526124b3":"markdown","5f9ae81d":"markdown"},"source":{"7aed3757":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\nfrom fastai.imports import *\n\nfrom fastai.transforms import *\nfrom fastai.conv_learner import *\nfrom fastai.model import *\nfrom fastai.dataset import *\nfrom fastai.sgdr import *","5cc1b65e":"PATH = \"..\/input\/\"\nTMP_PATH = \"\/kaggle\/working\/tmp\/\"\nMODEL_PATH = \"\/kaggle\/working\/models\/\"\nsz = 224\narch = resnet34\nbs = 64","24dbb794":"m = arch(True)","edf255dc":"m","703025f8":"m = nn.Sequential(*children(m)[:-2], \n                  nn.Conv2d(512, 2, 3, padding=1), \n                  nn.AdaptiveAvgPool2d(1), Flatten(), \n                  nn.LogSoftmax())","062de721":"fnames = np.array([f'train\/{f}' for f in sorted(os.listdir(f'{PATH}train'))])\nlabels = np.array([(0 if 'cat' in fname else 1) for fname in fnames])","7cbac3a5":"tfms = tfms_from_model(arch, sz, aug_tfms=transforms_side_on, max_zoom=1.1)\ndata = ImageClassifierData.from_names_and_array(\n    path=PATH, \n    fnames=fnames, \n    y=labels, \n    classes=['dogs', 'cats'], \n    test_name='test', \n    tfms=tfms,\n    bs=bs\n)","0996735c":"learn = ConvLearner.from_model_data(m, data, tmp_name=TMP_PATH, models_name=MODEL_PATH)","ff22ef46":"learn.freeze_to(-4)","83cf954d":"m[-1].trainable","56ed90b5":"m[-4].trainable","106103c1":"learn.fit(0.01, 1)","02e72bc5":"learn.fit(0.01, 1, cycle_len=1)","aefb1a88":"class SaveFeatures():\n    features=None\n    def __init__(self, m): self.hook = m.register_forward_hook(self.hook_fn)\n    def hook_fn(self, module, input, output): self.features = output\n    def remove(self): self.hook.remove()","ae2e8a4c":"x,y = next(iter(data.val_dl))","6e0d3746":"x,y = x[None,1], y[None,1]\nvx = Variable(x.cuda(), requires_grad=True)","b712e1d6":"dx = data.val_ds.denorm(x)[0]\nplt.imshow(dx);","82a6ef10":"sfs = [SaveFeatures(o) for o in [m[-7], m[-6], m[-5], m[-4]]]","10ba5355":"%time py = m(Variable(x.cuda()))","10c2ebf2":"for o in sfs: o.remove()","12ac3820":"[o.features.size() for o in sfs]","d6f57092":"py = np.exp(to_np(py)[0]); py","42c46592":"feat = np.maximum(0,to_np(sfs[3].features[0]))\nfeat.shape","fab1c4e2":"f2=np.dot(np.rollaxis(feat,0,3), py)\nf2-=f2.min()\nf2\/=f2.max()\nf2","e62bc4ed":"plt.imshow(dx)\nplt.imshow(scale_min(f2, dx.shape[0]), alpha=0.5, cmap='hot');","a022d9c5":"learn.unfreeze()\nlearn.bn_freeze(True)","9873a6de":"# 12 layer groups call for 12 lrs\nlr=np.array([[1e-6]*4,[1e-4]*4,[1e-2]*4]).flatten()","8ee52ca6":"learn.fit(lr, 2, cycle_len=1)","a6865f75":"log_preds,y = learn.TTA()\npreds = np.mean(np.exp(log_preds),0)\naccuracy_np(preds,y)","12e93a99":"learn.fit(lr, 2, cycle_len=1)","5f3dea8f":"log_preds,y = learn.TTA()\npreds = np.mean(np.exp(log_preds),0)\naccuracy_np(preds,y)","058fddf3":"## Dogs v Cats","526124b3":"## Model","5f9ae81d":"## Class Activation Maps (CAM)"}}