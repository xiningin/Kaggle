{"cell_type":{"78011dc4":"code","0dcde0f4":"code","1f11b587":"code","0d82246f":"code","bf876f94":"code","661c8a79":"code","132150c6":"code","772bd6bd":"code","6c664cb1":"code","d10b0d1b":"code","6f55ef9c":"code","e84c6e96":"code","df619ae6":"code","d3eac896":"code","139103fa":"code","17711ea7":"code","47fb355f":"code","57bf1bb3":"code","55bd29dc":"code","5ecdcfea":"code","d2957ca5":"code","6f066a3b":"code","9f86d4fa":"code","c1dcff5b":"code","bbc92899":"code","df210aab":"code","b026109c":"code","9298185b":"code","45a6dd06":"code","f28796d9":"code","23395b8a":"code","f012685d":"code","f774242c":"code","bfb52909":"code","617d5ce5":"code","e0a6e9a9":"code","ec925b36":"code","de2439af":"code","5bf5ce99":"code","7b0bed0e":"code","7b71fd58":"code","392842b5":"code","e936da04":"code","1f4d4f00":"code","861f1223":"code","8024acbf":"code","a54d0b5c":"code","602f1a94":"code","c50a2668":"code","558db2e0":"code","89c9f479":"code","c64d7ee6":"code","f648e109":"code","4030ce65":"code","d77e5c9d":"code","ec3520e7":"code","6ab73606":"code","e4e22d53":"code","6d8ef803":"code","9ce72a0c":"code","d4c0a481":"code","f7ed75ff":"code","411b419c":"code","191ed833":"code","47b1707a":"code","85780496":"code","f1fb21b7":"code","bcd1d10c":"code","07eb3ce6":"code","e121745d":"code","0c39b93c":"code","8022b24d":"code","7172aa62":"code","d7dde807":"code","ccc48e8b":"code","ecbdaf78":"code","98d30845":"code","1c8e4597":"code","805a5c1b":"code","ecf03dde":"code","38cf0c63":"code","d90e0ceb":"code","ef3372c2":"code","2df83647":"code","9d294521":"code","bd902adf":"code","d28afb04":"code","4a3d52a4":"code","9f24a820":"code","40a0651c":"code","d1f45825":"code","d20434af":"code","615b08e1":"code","4a206e3c":"code","0d1bbf27":"code","ef36a485":"code","b2f50c65":"code","30166b34":"code","ecf254ab":"code","9bb678f1":"code","30edc60e":"code","b4aed146":"code","fcfefb4b":"code","ee4c13ce":"code","6eae807e":"code","a00d1e06":"code","8294183d":"code","a619724b":"code","12758735":"code","a90c8699":"code","258785d5":"code","ae0d9e95":"code","d1bd48d7":"code","93e1ca68":"code","017cf3cd":"code","20617f81":"code","1ef01fe8":"code","a567e55a":"code","72fb0d53":"code","fdabc5ed":"code","4cad1314":"code","642c2cb7":"code","7a25f91d":"code","ba5b4247":"code","5efeab2f":"markdown","e39ea601":"markdown","7d5ddd58":"markdown","f0fd23de":"markdown","ae4f6024":"markdown","9cd8bc7e":"markdown","0668ad46":"markdown","0e309ed3":"markdown","bd9012f8":"markdown","1efcaeaa":"markdown","bc9e514e":"markdown","69115f99":"markdown","cb9205d5":"markdown","5fbd6d3b":"markdown","cf44ab31":"markdown","39ebcdfb":"markdown","5e0ba9e1":"markdown","420df81a":"markdown","16d9ece1":"markdown","d5c7f144":"markdown","3ff4a675":"markdown","a09bb803":"markdown","9b49daf2":"markdown","395a6371":"markdown","987c052f":"markdown"},"source":{"78011dc4":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nfrom mpl_toolkits.mplot3d import Axes3D\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\nimport nibabel as nib\nimport csv\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nimport matplotlib.patches as patches\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#MUSIC PROCESS\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nfrom scipy import signal\nfrom scipy.fft import fftshift\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","0dcde0f4":"Train_CSV = pd.read_csv(\"..\/input\/g2net-gravitational-wave-detection\/training_labels.csv\")","1f11b587":"print(\"COLUMNS:\\n\")\nprint(Train_CSV.columns)","0d82246f":"print(\"SHAPE:\\n\")\nprint(Train_CSV.shape)","bf876f94":"print(\"NaN:\\n\")\nprint(Train_CSV.isnull().sum())","661c8a79":"print(\"VALUE COUNTS:\\n\")\nprint(Train_CSV[\"target\"].value_counts())","132150c6":"print(Train_CSV.head(-1))","772bd6bd":"Example_Path = \"..\/input\/g2net-gravitational-wave-detection\/train\/0\/0\/0\/00000e74ad.npy\"\n# we need to design that path for Train CSV","6c664cb1":"All_NPY_Path = Path(\"..\/input\/g2net-gravitational-wave-detection\/train\/0\/0\/0\") # that notebook is for educational purpose","d10b0d1b":"NPY_Path_List = list(All_NPY_Path.glob(r\"*.npy\")) ","6f55ef9c":"print(\"LEN:\\n\")\nprint(len(NPY_Path_List))","e84c6e96":"Train_CSV = Train_CSV[0:155]","df619ae6":"print(Train_CSV.head(-1))","d3eac896":"Train_CSV[\"NEW_PATH\"] = NPY_Path_List","139103fa":"print(Train_CSV.head(-1))","17711ea7":"Train_CSV.drop(\"id\",axis=1,inplace=True)","47fb355f":"print(Train_CSV.head(-1))","57bf1bb3":"print(\"TYPE:\\n\")\nprint(type(Train_CSV[\"NEW_PATH\"]))","55bd29dc":"Random_Picking_NPY = Train_CSV[\"NEW_PATH\"][10]\nRandom_Example_Reading = np.load(Random_Picking_NPY)\n# READING","5ecdcfea":"print(\"TYPE:\\n\")\nprint(type(Random_Example_Reading))\nprint(\"--\"*20)\nprint(\"SHAPE:\\n\")\nprint(Random_Example_Reading.shape)\nprint(\"--\"*20)\nprint(\"SIZE:\\n\")\nprint(Random_Example_Reading.size)\nprint(\"--\"*20)\nprint(\"SELF:\\n\")\nprint(Random_Example_Reading)\nprint(\"--\"*20)","d2957ca5":"print(\"TYPE:\\n\")\nprint(type(Random_Example_Reading[0]))\nprint(\"--\"*20)\nprint(\"SHAPE:\\n\")\nprint(Random_Example_Reading[0].shape)\nprint(\"--\"*20)\nprint(\"SIZE:\\n\")\nprint(Random_Example_Reading[0].size)\nprint(\"--\"*20)\nprint(\"SELF:\\n\")\nprint(Random_Example_Reading[0])\nprint(\"--\"*20)","6f066a3b":"print(\"TYPE:\\n\")\nprint(type(Random_Example_Reading[2]))\nprint(\"--\"*20)\nprint(\"SHAPE:\\n\")\nprint(Random_Example_Reading[2].shape)\nprint(\"--\"*20)\nprint(\"SIZE:\\n\")\nprint(Random_Example_Reading[2].size)\nprint(\"--\"*20)\nprint(\"SELF:\\n\")\nprint(Random_Example_Reading[2])\nprint(\"--\"*20)","9f86d4fa":"plt.style.use(\"dark_background\")","c1dcff5b":"figure,axis = plt.subplots(1,3,figsize=(18,5),)\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n\naxis[0].set_title(\"WAVE 1\")\naxis[0].set_xlabel(Example_Reading[0].shape)\naxis[0].set_ylabel(Example_Reading[0].size)\naxis[0].plot(Example_Reading[0],c=\"g\")\n\naxis[1].set_title(\"WAVE 2\")\naxis[1].set_xlabel(Example_Reading[1].shape)\naxis[1].set_ylabel(Example_Reading[1].size)\naxis[1].plot(Example_Reading[1],c=\"g\")\n\naxis[2].set_title(\"WAVE 3\")\naxis[2].set_xlabel(Example_Reading[2].shape)\naxis[2].set_ylabel(Example_Reading[2].size)\naxis[2].plot(Example_Reading[2],c=\"g\")","bbc92899":"figure,axis = plt.subplots(1,3,figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n\naxis[0].set_title(\"WAVE 1\")\naxis[0].set_xlabel(Example_Reading[0].shape)\naxis[0].set_ylabel(Example_Reading[0].size)\naxis[0].hist(Example_Reading[0])\n\naxis[1].set_title(\"WAVE 2\")\naxis[1].set_xlabel(Example_Reading[1].shape)\naxis[1].set_ylabel(Example_Reading[1].size)\naxis[1].hist(Example_Reading[1])\n\naxis[2].set_title(\"WAVE 3\")\naxis[2].set_xlabel(Example_Reading[2].shape)\naxis[2].set_ylabel(Example_Reading[2].size)\naxis[2].hist(Example_Reading[2])","df210aab":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.kdeplot(x=Example_Reading[0],label=\"1\")\nsns.kdeplot(x=Example_Reading[1],label=\"2\")\nsns.kdeplot(x=Example_Reading[2],label=\"3\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","b026109c":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(x=Example_Reading[0],label=\"1\")\nsns.distplot(x=Example_Reading[1],label=\"2\")\nsns.distplot(x=Example_Reading[2],label=\"3\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","9298185b":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.histplot(x=Example_Reading[0],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"green\",label=\"1\")\nsns.histplot(x=Example_Reading[1],multiple=\"stack\",edgecolor=\".3\",linewidth=.5,color=\"red\",label=\"2\")\nsns.histplot(x=Example_Reading[2],multiple=\"stack\",edgecolor=\".3\",linewidth=.7,color=\"black\",label=\"3\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","45a6dd06":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(Example_Reading[0] > Example_Reading[1].mean(),label=\"0-1 MEAN\")\nsns.distplot(Example_Reading[0] > Example_Reading[2].mean(),label=\"0-2 MEAN\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","f28796d9":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(Example_Reading[0] > Example_Reading[1],label=\"0-1\")\nsns.distplot(Example_Reading[0] > Example_Reading[2],label=\"0-2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","23395b8a":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(Example_Reading[0] > Example_Reading[0].mean(),label=\"UPPER MEAN\")\nsns.distplot(Example_Reading[0] < Example_Reading[0].mean(),label=\"LOWER MEAN\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","f012685d":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(Example_Reading[0] > Example_Reading[0].argmax(),label=\"UPPER ARGMAX\")\nsns.distplot(Example_Reading[0] < Example_Reading[0].argmax(),label=\"LOWER ARGMAX\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","f774242c":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nsns.distplot(Example_Reading[0] > Example_Reading[0].argmin(),label=\"UPPER ARGMIN\")\nsns.distplot(Example_Reading[0] < Example_Reading[0].argmin(),label=\"LOWER ARGMIN\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","bfb52909":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n    \nplt.plot(Example_Reading[0])\nplt.plot(Example_Reading[1])\nplt.plot(Example_Reading[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","617d5ce5":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Reading[0])\n\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","e0a6e9a9":"figure = plt.figure(figsize=(18,5))\n\nPicking_NPY = Train_CSV[\"NEW_PATH\"][3]\nExample_Reading = np.load(Picking_NPY)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Reading[0])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Reading[1])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Reading[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","ec925b36":"Negative_Point = Train_CSV[Train_CSV[\"target\"] == 0]\nPositive_Point = Train_CSV[Train_CSV[\"target\"] == 1]\n\nNegative_Point = Negative_Point.reset_index(drop=True)\nPositive_Point = Positive_Point.reset_index(drop=True)","de2439af":"print(Negative_Point.head(-1))","5bf5ce99":"print(Positive_Point.head(-1))","7b0bed0e":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Negative[0] > Example_Positive[1],label=\"UPPER NEGATIVE\")\nsns.distplot(Example_Negative[0] < Example_Positive[2],label=\"LOWER NEGATIVE\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","7b71fd58":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Negative[0] > Example_Positive[1].mean(),label=\"UPPER NEGATIVE MEAN\")\nsns.distplot(Example_Negative[0] < Example_Positive[2].mean(),label=\"LOWER NEGATIVE MEAN\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","392842b5":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Positive[0] > Example_Negative[1],label=\"UPPER POSITIVE\")\nsns.distplot(Example_Positive[0] < Example_Negative[2],label=\"LOWER POSITIVE\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","e936da04":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Positive[0] > Example_Negative[1].mean(),label=\"UPPER POSITIVE MEAN\")\nsns.distplot(Example_Positive[0] < Example_Negative[2].mean(),label=\"LOWER POSITIVE MEAN\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","1f4d4f00":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.histplot(x=Example_Negative[0],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"green\",label=\"NEGATIVE \/ LAYER 0\")\nsns.histplot(x=Example_Positive[0],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"red\",label=\"POSITIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.histplot(x=Example_Negative[1],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"green\",label=\"NEGATIVE \/ LAYER 1\")\nsns.histplot(x=Example_Positive[1],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"red\",label=\"POSITIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.histplot(x=Example_Negative[2],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"green\",label=\"NEGATIVE \/ LAYER 2\")\nsns.histplot(x=Example_Positive[2],multiple=\"stack\",edgecolor=\".3\",linewidth=.3,color=\"red\",label=\"POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","861f1223":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(x=Example_Negative[0],color=\"green\",label=\"NEGATIVE \/ LAYER 0\")\nsns.distplot(x=Example_Positive[0],color=\"red\",label=\"POSITIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(x=Example_Negative[1],color=\"green\",label=\"NEGATIVE \/ LAYER 1\")\nsns.distplot(x=Example_Positive[1],color=\"red\",label=\"POSITIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(x=Example_Negative[2],color=\"green\",label=\"NEGATIVE \/ LAYER 2\")\nsns.distplot(x=Example_Positive[2],color=\"red\",label=\"POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","8024acbf":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Negative[0] > Example_Positive[0].mean(),label=\"UPPER NEGATIVE MEAN POSITIVE \/ LAYER 0\")\nsns.distplot(Example_Negative[0] < Example_Positive[0].mean(),label=\"LOWER NEGATIVE MEAN POSITIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[1] > Example_Positive[1].mean(),label=\"UPPER NEGATIVE MEAN POSITIVE \/ LAYER 1\")\nsns.distplot(Example_Negative[1] < Example_Positive[1].mean(),label=\"LOWER NEGATIVE MEAN POSITIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[2] > Example_Positive[2].mean(),label=\"UPPER NEGATIVE MEAN POSITIVE \/ LAYER 2\")\nsns.distplot(Example_Negative[2] < Example_Positive[2].mean(),label=\"LOWER NEGATIVE MEAN POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","a54d0b5c":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Negative[0].mean() > Example_Positive[0].mean(),label=\"UPPER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 0\")\nsns.distplot(Example_Negative[0].mean() < Example_Positive[0].mean(),label=\"LOWER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[1].mean() > Example_Positive[1].mean(),label=\"UPPER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 1\")\nsns.distplot(Example_Negative[1].mean() < Example_Positive[1].mean(),label=\"LOWER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[2].mean() > Example_Positive[2].mean(),label=\"UPPER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 2\")\nsns.distplot(Example_Negative[2].mean() < Example_Positive[2].mean(),label=\"LOWER MEAN NEGATIVE MEAN POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","602f1a94":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Negative[0].argmax() > Example_Positive[0].argmax(),label=\"UPPER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 0\")\nsns.distplot(Example_Negative[0].argmax() < Example_Positive[0].argmax(),label=\"LOWER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[1].argmax() > Example_Positive[1].argmax(),label=\"UPPER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 1\")\nsns.distplot(Example_Negative[1].argmax() < Example_Positive[1].argmax(),label=\"LOWER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Negative[2].argmax() > Example_Positive[2].argmax(),label=\"UPPER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 2\")\nsns.distplot(Example_Negative[2].argmax() < Example_Positive[2].argmax(),label=\"LOWER ARGMAX NEGATIVE ARGMAX POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","c50a2668":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n    \nsns.distplot(Example_Positive[0] > Example_Negative[0],label=\"UPPER POSITIVE NEGATIVE \/ LAYER 0\")\nsns.distplot(Example_Positive[0] < Example_Negative[0],label=\"LOWER POSITIVE NEGATIVE \/ LAYER 0\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Positive[0] > Example_Negative[0],label=\"UPPER POSITIVE NEGATIVE \/ LAYER 1\")\nsns.distplot(Example_Positive[0] < Example_Negative[0],label=\"LOWER POSITIVE NEGATIVE \/ LAYER 1\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nsns.distplot(Example_Positive[0] > Example_Negative[0],label=\"UPPER POSITIVE NEGATIVE \/ LAYER 2\")\nsns.distplot(Example_Positive[0] < Example_Negative[0],label=\"LOWER POSITIVE NEGATIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","558db2e0":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\nplt.plot(Example_Negative[0])\nplt.plot(Example_Positive[0])\nplt.legend()\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nplt.plot(Example_Negative[1])\nplt.plot(Example_Positive[1])\nplt.legend()\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nplt.plot(Example_Negative[2])\nplt.plot(Example_Positive[2])\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","89c9f479":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\ng = sns.JointGrid(x=Example_Negative[0], y=Example_Positive[0], space=0)\ng.plot_joint(sns.kdeplot,cmap=\"rocket\")\nplt.legend()\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\ng = sns.JointGrid(x=Example_Negative[1], y=Example_Positive[1], space=0)\ng.plot_joint(sns.kdeplot,cmap=\"rocket\")\nplt.legend()\n    \nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\ng = sns.JointGrid(x=Example_Negative[2], y=Example_Positive[2], space=0)\ng.plot_joint(sns.kdeplot,cmap=\"rocket\")\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","c64d7ee6":"figure = plt.figure(figsize=(40,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\nax = Axes3D(figure)\nax.scatter(Example_Negative[0],\n           Example_Negative[1], Example_Negative[2], c=\"red\", s=50, alpha=0.2)\n\nax.scatter(Example_Positive[0],\n           Example_Positive[1], Example_Positive[2], c=\"green\", s=50, alpha=0.2)\nplt.show()","f648e109":"figure = plt.figure(figsize=(40,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\nax = Axes3D(figure)\nax.scatter(Example_Negative[0],\n           Example_Negative[1], Example_Negative[2], c=\"red\", s=50, alpha=0.2)\n\nax.scatter(Example_Positive[0],\n           Example_Positive[1], Example_Positive[2], c=\"green\", s=50, alpha=0.2)\nplt.show()","4030ce65":"figure = plt.figure(figsize=(40,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][14]\nExample_Negative = np.load(Picking_Negative)\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][14]\nExample_Positive = np.load(Picking_Positive)\n\nax = Axes3D(figure)\nax.scatter(Example_Negative[0],\n           Example_Negative[1], Example_Negative[2], c=\"red\", s=50, alpha=0.2)\n\nax.scatter(Example_Positive[0],\n           Example_Positive[1], Example_Positive[2], c=\"green\", s=50, alpha=0.2)\nplt.show()","d77e5c9d":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\n    \nsns.distplot(x=Example_Negative[0],color=\"green\",label=\"NEGATIVE \/ LAYER 0\")\nsns.distplot(x=Example_Negative[1],color=\"red\",label=\"NEGATIVE \/ LAYER 1\")\nsns.distplot(x=Example_Negative[2],color=\"purple\",label=\"NEGATIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n   \nplt.tight_layout()\nplt.show()","ec3520e7":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\n    \nsns.distplot(x=Example_Positive[0],color=\"green\",label=\"POSITIVE \/ LAYER 0\")\nsns.distplot(x=Example_Positive[1],color=\"red\",label=\"POSITIVE \/ LAYER 1\")\nsns.distplot(x=Example_Positive[2],color=\"purple\",label=\"POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n \nplt.tight_layout()\nplt.show()","6ab73606":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nplt.plot(Example_Negative[0])\nplt.plot(Example_Negative[1])\nplt.plot(Example_Negative[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","e4e22d53":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\nplt.plot(Example_Positive[0])\nplt.plot(Example_Positive[1])\nplt.plot(Example_Positive[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","6d8ef803":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\ng = sns.JointGrid(x=Example_Negative[0], space=0)\ng.plot_joint(sns.kdeplot)\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","9ce72a0c":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\ng = sns.JointGrid(x=Example_Positive[0], space=0)\ng.plot_joint(sns.kdeplot)\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","d4c0a481":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\nax = Axes3D(fig)\nax.scatter(Example_Negative[0],\n           Example_Negative[1], Example_Negative[2], c=\"red\", s=50, alpha=0.2)\nplt.show()","f7ed75ff":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\nax = Axes3D(fig)\nax.scatter(Example_Positive[0],\n           Example_Positive[1], Example_Positive[2], c=\"red\", s=50, alpha=0.2)\nplt.show()","411b419c":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][3]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","191ed833":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][3]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Positive[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","47b1707a":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\n    \nsns.distplot(x=Example_Negative[0],color=\"green\",label=\"NEGATIVE \/ LAYER 0\")\nsns.distplot(x=Example_Negative[1],color=\"red\",label=\"NEGATIVE \/ LAYER 1\")\nsns.distplot(x=Example_Negative[2],color=\"purple\",label=\"NEGATIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n   \nplt.tight_layout()\nplt.show()","85780496":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\n    \nsns.distplot(x=Example_Positive[0],color=\"green\",label=\"POSITIVE \/ LAYER 0\")\nsns.distplot(x=Example_Positive[1],color=\"red\",label=\"POSITIVE \/ LAYER 1\")\nsns.distplot(x=Example_Positive[2],color=\"purple\",label=\"POSITIVE \/ LAYER 2\")\nplt.legend(prop=dict(size=10))\n\nplt.tight_layout()\nplt.show()","f1fb21b7":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\nplt.plot(Example_Negative[0])\nplt.plot(Example_Negative[1])\nplt.plot(Example_Negative[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","bcd1d10c":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\nplt.plot(Example_Positive[0])\nplt.plot(Example_Positive[1])\nplt.plot(Example_Positive[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","07eb3ce6":"figure = plt.figure(figsize=(18,5))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\ng = sns.JointGrid(x=Example_Negative[0], space=0)\ng.plot_joint(sns.kdeplot)\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","e121745d":"figure = plt.figure(figsize=(18,5))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\ng = sns.JointGrid(x=Example_Positive[0], space=0)\ng.plot_joint(sns.kdeplot)\nplt.legend()\n    \nplt.tight_layout()\nplt.show()","0c39b93c":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\nax = Axes3D(fig)\nax.scatter(Example_Negative[0],\n           Example_Negative[1], Example_Negative[2], c=\"red\", s=50, alpha=0.2)\nplt.show()","8022b24d":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\nax = Axes3D(fig)\nax.scatter(Example_Positive[0],\n           Example_Positive[1], Example_Positive[2], c=\"red\", s=50, alpha=0.2)\nplt.show()","7172aa62":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","d7dde807":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][30]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Negative[0:],cmap=\"jet\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","ccc48e8b":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Positive[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","ecbdaf78":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][30]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Positive[0:],cmap=\"jet\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","98d30845":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","1c8e4597":"print(\"PS SHAPE:\",powerSpectrum.shape)\nprint(\"PS SIZE:\",powerSpectrum.size)\nprint(\"PS TYPE:\",type(powerSpectrum))","805a5c1b":"print(\"FF SHAPE:\",freqenciesFound.shape)\nprint(\"FF SIZE:\",freqenciesFound.size)\nprint(\"FF TYPE:\",type(freqenciesFound))","ecf03dde":"print(\"TIME SHAPE:\",time.shape)\nprint(\"TIME SIZE:\",time.size)\nprint(\"TIME TYPE:\",type(time))","38cf0c63":"print(\"IA TYPE:\",type(imageAxis))","d90e0ceb":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(time)\nplt.plot(freqenciesFound)\nplt.plot(powerSpectrum[0])\nplt.legend(prop=dict(size=10))\nplt.title(\"TIME-FREQ-PS\")\n    \nplt.tight_layout()\nplt.show()","ef3372c2":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(time)\nplt.plot(freqenciesFound)\nplt.legend(prop=dict(size=10))\nplt.title(\"TIME-FREQ\")\n    \nplt.tight_layout()\nplt.show()","2df83647":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum)\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-ALL\")\n    \nplt.tight_layout()\nplt.show()","9d294521":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum[0:20])\n\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART\")\n    \nplt.tight_layout()\nplt.show()","bd902adf":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum[0:10])\n\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART\")\n    \nplt.tight_layout()\nplt.show()","d28afb04":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum, freqenciesFound, time, imageAxis = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","4a3d52a4":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(time)\nplt.plot(freqenciesFound)\nplt.plot(powerSpectrum[0])\nplt.legend(prop=dict(size=10))\nplt.title(\"TIME-FREQ-PS\")\n    \nplt.tight_layout()\nplt.show()","9f24a820":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(time)\nplt.plot(freqenciesFound)\nplt.legend(prop=dict(size=10))\nplt.title(\"TIME-FREQ\")\n    \nplt.tight_layout()\nplt.show()","40a0651c":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum)\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-ALL\")\n    \nplt.tight_layout()\nplt.show()","d1f45825":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum[0:10])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART\")\n    \nplt.tight_layout()\nplt.show()","d20434af":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum[0:20])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART\")\n    \nplt.tight_layout()\nplt.show()","615b08e1":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum_P, freqenciesFound_P, time_P, imageAxis_P = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","4a206e3c":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum_N, freqenciesFoundNN_N, time_N, imageAxi_N = plt.specgram(Example_Negative[0],cmap=\"hot\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","0d1bbf27":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(time_P)\nplt.plot(time_N)\nplt.plot(freqenciesFound_P)\nplt.plot(freqenciesFoundNN_N)\nplt.legend(prop=dict(size=10))\nplt.title(\"TIME-FREQ \/ COMPARE\")\n    \nplt.tight_layout()\nplt.show()","ef36a485":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_P)\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-ALL \/ P\")\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_N)\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-ALL \/ N\")\nplt.tight_layout()\nplt.show()","b2f50c65":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_P[0:10])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART \/ P\")\nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_N[0:10])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART \/ N\")\nplt.tight_layout()\nplt.show()","30166b34":"figure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_P[0:30])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART \/ P\")\nplt.tight_layout()\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nplt.plot(powerSpectrum_N[0:30])\nplt.legend(prop=dict(size=10))\nplt.title(\"PS-PART \/ N\")\nplt.tight_layout()\nplt.show()","ecf254ab":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[0])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[0])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","9bb678f1":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[1])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[1])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","30edc60e":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[2])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[2])\nplt.pcolormesh(t, f, Sxx, shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","b4aed146":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[0])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[0])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","fcfefb4b":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[1])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[1])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","ee4c13ce":"figure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Negative[2])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()\n\nfigure = plt.figure(figsize=(18,5))\n\nf, t, Sxx = signal.spectrogram(Example_Positive[2])\nplt.pcolormesh(t, fftshift(f), fftshift(Sxx, axes=0), shading='gouraud')\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')\nplt.show()","6eae807e":"fig = plt.figure(figsize=(20,10))\n\nplt.plot(Example_Positive[0])\nplt.plot(Example_Positive[1])\nplt.plot(Example_Positive[2])\nplt.gca().invert_yaxis()\nfig.axes[0].set_xlabel('windows (~86Hz)')\nfig.axes[0].set_ylabel('frequency')","a00d1e06":"fig = plt.figure(figsize=(20,10))\n\nplt.plot(Example_Negative[0])\nplt.plot(Example_Negative[1])\nplt.plot(Example_Negative[2])\nplt.gca().invert_yaxis()\nfig.axes[0].set_xlabel('windows (~86Hz)')\nfig.axes[0].set_ylabel('frequency')","8294183d":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum_N, freqenciesFoundNN_N, time_N, imageAxi_N = plt.specgram(Example_Negative,mode=\"angle\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","a619724b":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum_P, freqenciesFoundNN_P, time_P, imageAxi_P = plt.specgram(Example_Positive,mode=\"angle\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","12758735":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum_N, freqenciesFoundNN_N, time_N, imageAxi_N = plt.specgram(Example_Negative,mode=\"magnitude\",scale=\"linear\",sides=\"twosided\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","a90c8699":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum_P, freqenciesFoundNN_P, time_P, imageAxi_P = plt.specgram(Example_Positive,mode=\"magnitude\",scale=\"linear\",sides=\"twosided\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","258785d5":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\npowerSpectrum_N, freqenciesFoundNN_N, time_N, imageAxi_N = plt.specgram(Example_Negative,scale_by_freq=False)\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","ae0d9e95":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\npowerSpectrum_P, freqenciesFoundNN_P, time_P, imageAxi_P = plt.specgram(Example_Positive,scale_by_freq=False)\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","d1bd48d7":"fig = plt.figure(figsize=(20,10))\n\nPicking_Negative = Negative_Point[\"NEW_PATH\"][22]\nExample_Negative = np.load(Picking_Negative)\n\nplt.phase_spectrum(Example_Negative[0])\nplt.phase_spectrum(Example_Negative[1])\nplt.phase_spectrum(Example_Negative[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","93e1ca68":"fig = plt.figure(figsize=(20,10))\n\nPicking_Positive = Positive_Point[\"NEW_PATH\"][55]\nExample_Positive = np.load(Picking_Positive)\n\nplt.phase_spectrum(Example_Positive[0])\nplt.phase_spectrum(Example_Positive[1])\nplt.phase_spectrum(Example_Positive[2])\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","017cf3cd":"fig = plt.figure(figsize=(20,10))\n\nplt.phase_spectrum(Example_Negative[0],label=\"N-0\")\nplt.phase_spectrum(Example_Negative[1],label=\"N-1\")\nplt.phase_spectrum(Example_Negative[2],label=\"N-2\")\nplt.phase_spectrum(Example_Positive[0],label=\"P-0\")\nplt.phase_spectrum(Example_Positive[1],label=\"P-1\")\nplt.phase_spectrum(Example_Positive[2],label=\"P-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","20617f81":"fig = plt.figure(figsize=(20,10))\n\n\nplt.angle_spectrum(Example_Negative[0],label=\"N-0\")\nplt.angle_spectrum(Example_Negative[1],label=\"N-1\")\nplt.angle_spectrum(Example_Negative[2],label=\"N-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","1ef01fe8":"fig = plt.figure(figsize=(20,10))\n\nplt.angle_spectrum(Example_Positive[0],label=\"P-0\")\nplt.angle_spectrum(Example_Positive[1],label=\"P-1\")\nplt.angle_spectrum(Example_Positive[2],label=\"P-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","a567e55a":"fig = plt.figure(figsize=(20,10))\n\n\nplt.angle_spectrum(Example_Negative[0],label=\"N\",solid_capstyle=\"projecting\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","72fb0d53":"fig = plt.figure(figsize=(20,10))\n\n\nplt.angle_spectrum(Example_Positive[0],label=\"N\",solid_capstyle=\"projecting\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","fdabc5ed":"fig = plt.figure(figsize=(20,10))\n\nplt.magnitude_spectrum(Example_Negative[0],label=\"N-0\")\nplt.magnitude_spectrum(Example_Negative[1],label=\"N-1\")\nplt.magnitude_spectrum(Example_Negative[2],label=\"N-2\")\nplt.magnitude_spectrum(Example_Positive[0],label=\"P-0\")\nplt.magnitude_spectrum(Example_Positive[1],label=\"P-1\")\nplt.magnitude_spectrum(Example_Positive[2],label=\"P-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","4cad1314":"fig = plt.figure(figsize=(20,10))\n\nplt.magnitude_spectrum(Example_Negative[0],label=\"N-0\")\nplt.magnitude_spectrum(Example_Negative[1],label=\"N-1\")\nplt.magnitude_spectrum(Example_Negative[2],label=\"N-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","642c2cb7":"fig = plt.figure(figsize=(20,10))\n\nplt.magnitude_spectrum(Example_Negative[0],label=\"N-0\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","7a25f91d":"fig = plt.figure(figsize=(20,10))\n\nplt.magnitude_spectrum(Example_Positive[0],label=\"P-0\")\nplt.magnitude_spectrum(Example_Positive[1],label=\"P-1\")\nplt.magnitude_spectrum(Example_Positive[2],label=\"P-2\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","ba5b4247":"fig = plt.figure(figsize=(20,10))\n\nplt.magnitude_spectrum(Example_Positive[0],label=\"P-0\")\nplt.legend(prop=dict(size=20))\n    \nplt.tight_layout()\nplt.show()","5efeab2f":"#### DETAIL","e39ea601":"##### EX 2","7d5ddd58":"#### GENERAL INFO","f0fd23de":"# WHAT IS NPY?","ae4f6024":"##### BOTH","9cd8bc7e":"#### PATH","0668ad46":"#### I WORKED ON THE SAME PROJECT ON VISUALS BEFORE\n\n* CHECK\n\n* https:\/\/www.kaggle.com\/brsdincer\/gravitational-waves-project-ligo-prediction\n* https:\/\/www.kaggle.com\/brsdincer\/gravitational-waves-project-ligo-ai-process","0e309ed3":"##### POSITIVE","bd9012f8":"##### NEGATIVE","1efcaeaa":"# HISTORY\n\n* It's been said that teamwork makes the dream work. This couldn't be truer for the breakthrough discovery of gravitational waves (GW), signals from colliding binary black holes in 2015. It required the collaboration of experts in physics, mathematics, information science, and computing. GW signals have led researchers to observe a new population of massive, stellar-origin black holes, to unlock the mysteries of neutron star mergers, and to measure the expansion of the Universe. These signals are unimaginably tiny ripples in the fabric of space-time and even though the global network of GW detectors are some of the most sensitive instruments on the planet, the signals are buried in detector noise. Analysis of GW data and the detection of these signals is a crucial mission for the growing global network of increasingly sensitive GW detectors. These challenges in data analysis and noise characterization could be solved with the help of data science.\n\n* As with the multi-disciplined approach to the discovery of GWs, additional expertise will be needed to further GW research. In particular, social and natural sciences have taken an interest in machine learning, deep learning, classification problems, data mining, and visualization to develop new techniques and algorithms to efficiently handle complex and massive data sets. The increase in computing power and the development of innovative techniques for the rapid analysis of data will be vital to the exciting new field of GW Astronomy. Potential outcomes may include increased sensitivity to GW signals, application to control and feedback systems for next-generation detectors, noise removal, data conditioning tools, and signal characterization.\n\n* G2Net is a network of Gravitational Wave, Geophysics and Machine Learning. Via an Action from COST (European Cooperation in Science and Technology), a funding agency for research and innovation networks, G2Net aims to create a broad network of scientists. From four different areas of expertise, namely GW physics, Geophysics, Computing Science and Robotics, these scientists have agreed on a common goal of tackling challenges in data analysis and noise characterization for GW detectors.\n\n* In this competition, you\u2019ll aim to detect GW signals from the mergers of binary black holes. Specifically, you'll build a model to analyze simulated GW time-series data from a network of Earth-based detectors.","bc9e514e":"# VISION","69115f99":"#### NEW PATHING DESIGN","cb9205d5":"##### EX 1","5fbd6d3b":"#### CHECKING","cf44ab31":"#### DETAIL SPECTRUM","39ebcdfb":"# OVERVIEW AND ANALYSIS PROCESS","5e0ba9e1":"##### NEGATIVE - POSITIVE","420df81a":"#### THANK YOU SO MUCH!\n#### EDUCATIONALLY BUILT TO CONTRIBUTE TO SCIENCE","16d9ece1":"#### COMPARING","d5c7f144":"# PACKAGES AND LIBRARIES","3ff4a675":"##### RANDOM PLOT","a09bb803":"##### PICKING ONE INTO NPY","9b49daf2":"![](https:\/\/cdn.mos.cms.futurecdn.net\/U6aSNfCVa2RGSqNJHkzjZN-1200-80.jpg)","395a6371":"* Note the color changes at the bottom.","987c052f":"##### COMPARING"}}