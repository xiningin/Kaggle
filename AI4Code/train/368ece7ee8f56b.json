{"cell_type":{"5ffa7869":"code","9ebd687c":"code","87cd9ee3":"code","351d22ae":"code","59d70c20":"code","3d900eee":"code","98a726ca":"code","954ddc22":"code","48643f3b":"code","1237cda1":"code","4af6ba4b":"code","87d8584b":"code","1017139d":"code","fc7e8ad9":"code","014c8b39":"code","cd5f7a49":"code","6d9ce7ff":"markdown","098b6574":"markdown","418760bf":"markdown","9f7b0a08":"markdown","4e566ec6":"markdown","13a6fcf8":"markdown","63dfae8b":"markdown","484ebfff":"markdown","0a59df26":"markdown","41530dc7":"markdown","ff2f5ece":"markdown","53b22778":"markdown","25667a52":"markdown","0b2c8258":"markdown","389b4f35":"markdown","ed8a9015":"markdown","fa2b77bd":"markdown","d967ea51":"markdown"},"source":{"5ffa7869":"import pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nimport warnings\r\nwarnings.filterwarnings(\"ignore\")\r\npd.set_option('display.max_rows', 200)\r\nnp.set_printoptions(suppress=True)\r\npd.set_option('display.float_format', lambda x: '%.2f' % x)\r\nsns.set_style('darkgrid')","9ebd687c":"train = pd.read_csv('..\/input\/traincsv\/Data\/train.csv')\r\r\ntrain","87cd9ee3":"print(f'This dataset has {train.shape[0]} Records and {train.shape[1]} features.')","351d22ae":"train.describe(include='all')","59d70c20":"train.groupby('Survived').mean().drop(['PassengerId', 'SibSp', 'Parch'], axis=1)","3d900eee":"train.groupby('Pclass').mean().drop(['PassengerId', 'SibSp', 'Parch'], axis=1)","98a726ca":"train.groupby('Sex').mean().drop(['PassengerId', 'SibSp', 'Parch'], axis=1)","954ddc22":"train.groupby('Embarked').mean().drop(['PassengerId', 'SibSp', 'Parch'], axis=1)","48643f3b":"train.isnull().sum()","1237cda1":"train['Fare'][train['Fare'] > train['Fare'].quantile(.99)]","4af6ba4b":"train.loc[[258, 679, 737],:]","87d8584b":"train.loc[[258, 679, 737],'Fare'] = 263\r\ntrain.loc[[258, 679, 737],:]","1017139d":"fig, axes = plt.subplots(2, 4, figsize=(24,12))\r\n\r\nsns.histplot(data=train, x='Survived', bins=2, shrink=.9, ax=axes[0, 0], discrete=True)\r\naxes[0, 0].set_title('Survived distribution')\r\naxes[0, 0].set_xlabel('Survived')\r\naxes[0, 0].set_xticks([0, 1])\r\n\r\nsns.histplot(data=train, x='Pclass', bins=3, shrink=.9, ax=axes[0, 1], discrete=True)\r\naxes[0, 1].set_title('Passenger Class distribution')\r\naxes[0, 1].set_xlabel('Passenger Class')\r\naxes[0, 1].set_xticks([1, 2, 3])\r\n\r\nsns.histplot(data=train, x='Sex', bins=2, shrink=.9, ax=axes[0, 2], discrete=True)\r\naxes[0, 2].set_title('Sex distribution')\r\naxes[0, 2].set_xlabel('Sex')\r\n\r\nsns.histplot(data=train, x='Age', bins=20, shrink=.9, ax=axes[0, 3], kde=True)\r\naxes[0, 3].set_title('Age distribution')\r\naxes[0, 3].set_xlabel('Age')\r\naxes[0, 3].set_xticks(range(0, 80 + 1, 5))\r\n\r\nsns.histplot(data=train, x='SibSp', bins=8, shrink=.9, ax=axes[1, 0])\r\naxes[1, 0].set_title('Sibling \/ Spouse distribution')\r\naxes[1, 0].set_xlabel('Sibling \/ Spouse')\r\naxes[1, 0].set_xticks(range(0, 8 + 1, 1))\r\n\r\nsns.histplot(data=train, x='Parch', bins=7, shrink=.9, ax=axes[1, 1])\r\naxes[1, 1].set_title('Parent \/ Children distribution')\r\naxes[1, 1].set_xlabel('Parent \/ Children')\r\naxes[1, 1].set_xticks(range(0, 7 + 1, 1))\r\n\r\nsns.histplot(data=train, x='Fare', shrink=.9, ax=axes[1, 2])\r\naxes[1, 2].set_title('Fare distribution')\r\naxes[1, 2].set_xlabel('Fare')\r\n\r\ntemp = train.copy()\r\ntemp['Embarked'][temp['Embarked'] == 'S'] = 1\r\ntemp['Embarked'][temp['Embarked'] == 'C'] = 2\r\ntemp['Embarked'][temp['Embarked'] == 'Q'] = 3\r\nsns.histplot(data=temp, x='Embarked', bins=3, shrink=.9, ax=axes[1, 3], discrete=True)\r\naxes[1, 3].set_title('Embark distribution')\r\naxes[1, 3].set_xlabel('Embark')\r\naxes[1, 3].set_xticks([1,2,3])\r\n\r\nplt.show()","fc7e8ad9":"fig, axes = plt.subplots(2, 3, figsize=(24,12))\r\n\r\nsns.violinplot(data=train, x=\"Pclass\", y=\"Fare\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[0, 0])\r\naxes[0, 0].set_title('Fare vs Passenger Class Violin Plot - Color Coded Survival Status')\r\naxes[0, 0].set_ylabel('Passenger Class')\r\n\r\nsns.violinplot(data=train, x=\"Sex\", y=\"Fare\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[0, 1])\r\naxes[0, 1].set_title('Fare vs Sex Violin Plot - Color Coded Survival Status')\r\n\r\nsns.violinplot(data=train, x=\"Embarked\", y=\"Fare\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[0, 2])\r\naxes[0, 2].set_title('Fare vs Embarked Violin Plot - Color Coded Survival Status')\r\n\r\nsns.violinplot(data=train, x=\"Pclass\", y=\"Age\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[1, 0])\r\naxes[1, 0].set_title('Age vs Passenger Class Violin Plot - Color Coded Survival Status')\r\naxes[1, 0].set_ylabel('Passenger Class')\r\n\r\nsns.violinplot(data=train, x=\"Sex\", y=\"Age\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[1, 1])\r\naxes[1, 1].set_title('Age vs Sex Violin Plot - Color Coded Survival Status')\r\n\r\nsns.violinplot(data=train, x=\"Embarked\", y=\"Age\", hue=\"Survived\",\r\n               split=True, inner=\"quart\", linewidth=1,\r\n               palette={0: \"r\", 1: \"g\"}, ax=axes[1, 2])\r\naxes[1, 1].set_title('Age vs Embarked Violin Plot - Color Coded Survival Status')\r\n\r\nplt.show()","014c8b39":"intercor = train.drop(['PassengerId'], axis=1).corr()\r\nplt.figure(figsize=(10,8))\r\nsns.heatmap(intercor,annot=True, cmap = 'rocket_r')\r\nplt.tight_layout()\r\nplt.title('Variables Correlation Heatmap')\r\nplt.show()","cd5f7a49":"fig, axes = plt.subplots(1, 3, figsize=(30,8))\r\n\r\nsns.scatterplot(data=train, x='Age', y='Fare', hue='Survived', palette={0:'r', 1:'g'}, ax=axes[0])\r\naxes[0].set_title('Fare vs Age Scatter Plot - Color Coded Survival Status')\r\nsns.scatterplot(data=train, x='Age', y='Fare', hue='Sex', palette={'female':'orange', 'male':'b'}, ax=axes[1])\r\naxes[1].set_title('Fare vs Age Scatter Plot - Color Coded Sex')\r\nsns.scatterplot(data=train, x='Age', y='Fare', hue='Pclass', palette={1:'b', 2:'orange', 3:'g'}, ax=axes[2])\r\naxes[2].set_title('Fare vs Age Scatter Plot - Color Coded Passengers Class')\r\n\r\nplt.show()","6d9ce7ff":"in the cell above you can see the average of Survival Status, Age, Fare and Passenger class Features in contrast of Sex.\r\nthis output clearly indicates that\n* majority of females survived and females tend to have more expensive tickets than men.\n* majority of men didn't survive and their tickets were cheaper.er.","098b6574":"In the cell above you can see the correlation between the variables in this dataset.\r\nthere are some interesting facts which can be deduce from this graph:\r\n- Survival status and Passenger class variables have mediocre negative correlation. higher class, means higher chance of survival.\r\n- Passenger Class and Age variables have mediocre negative correlation. old passengers was in higher classes.\r\n- Passenger class and Fare variables have a strong negative correlation and it's obvious. higher class tickets were more expensive than lower class tickets.","418760bf":"Let's check grouped descriptive analysis:","9f7b0a08":"# Outlier Treatment\r\nwith a quick glimpse to the descriptive analysis section we can understand that there are outliers with huge difference in \"Fare\" feature, in this section we are going to investigate it more and remedy them with \"Clipping\" solution.","4e566ec6":"# Titanic Competition - EDA - Ramin F.","13a6fcf8":"in the cell above you can see the average of Passenger Class, Age and Fare Features in contrast survived and not survived groups.\r\nthis output clearly shows that most of people with lower class ticket didn't survive.","63dfae8b":"in the cell above you can see the average of Survival Status, Age, Fare and Passenger class Features in contrast of Embarked City.\nthis output clearly indicates that:\n* Passengers who boarded Cherbourg city were in higher class, thus they survived.\n* Passengers from Queenstown were in lower classes.\n* majority of Passengers who were boarded in Southampton didn't Survive.ved.","484ebfff":"# Missing Values\r\nnow it's time to check if there are any missing values in dataset, this is an important step since if we will have missing values, we must choose a strategy to tackle that problem.","0a59df26":"as we said earlier its like a random error in data side. we will clip this 3 records \"Fare\" feature to second to max value in this feature, i.e 263, which is more frequent.","41530dc7":"in the graph above you can see the scatter plot of Fare in contrast of Age, color coded with survival status, sex and passenger's class.\r\nas you can see younger passengers had lowest fares and highest chance of survival. also people with higher fare prices tend to have more chance of survival in contrast of people with lower ticket's price.","ff2f5ece":"in the cell above you can see the average of Survival Status, Age and Fare Features in contrast Passenger Classes.\nthis output clearly indicates that:\n- majority of the highest class survived, their fare was much more expensive than lower classes and they were older than the other 2 classes.\n- a little less than half of the middle-class passengers survived and their average age was about 29 years old.\n- majority of low-class passengers didn't survive and their average age was 25 years old.d.","53b22778":"----\r\n# Notebook By. Ramin F. | @SimplyRamin","25667a52":"# Graphical Representations\r\nin this section we are going to explore the dataset further with some of useful data visualizations.","0b2c8258":"as you can see in the cell above, there are 177 records with missing age and 2 records with missing embarked feature. also there are 687 rows with missing values in \"Cabin\" feature but since that feature is not useful for ML model, and we will drop it, it doesn't matter.","389b4f35":"as you can see in the cell above, there are 9 records (out of 891) in which their \"Fare\" feature is greater than 99% of the dataset. The interesting thing here is 3 records have 512 as \"Fare\" feature which is more than 99.775% of dataset. This seems like a typo or an error from data side. these 3 records can be see below:","ed8a9015":"as you can see there are some features that requires further explanation, we will discuss them further:\r\n- Pclass: this feature specificy the socio-economic status. this feature is discrete and has 3 classes:\r\n    - 1: Upper Class\r\n    - 2: Middle Class\r\n    - 3: Lower Class\r\n- Age: the age in this dataset is fractional, since there are passenger with less than a year age.\r\n- SibSp: Number of sibling \/ spouses abroad the titanic.\r\n- Parch: Number of parents \/ children abroad the titanic.\r\n- Embarked: Port of embarkation. this feature is discrete and has 3 classes:\r\n    - C: Cherbourg\r\n    - Q: Queenstown\r\n    - S: Southampton","fa2b77bd":"# Descriptive Analysis\r\nFirst thing first, lets check the descreptive analysis of this data set.","d967ea51":"In this notebook we are going to explore the data and perform all the steps before Modeling in CRISP-DM methodology. In this competition the goal is to predict whether if passengers were survived or not."}}