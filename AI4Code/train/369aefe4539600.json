{"cell_type":{"fb20df6c":"code","664cb1f9":"code","d8151e02":"code","590d34fc":"code","2d5669ca":"code","9c376e05":"code","4212746c":"code","66f55830":"code","159227ca":"code","0a126207":"code","5245bd91":"code","0f9f9d6a":"code","23fc4550":"code","fecf1ba1":"code","f19ef9d8":"code","d543be5a":"code","313adc20":"code","1e59cfc5":"code","c41c2ab7":"code","e0a88eda":"code","39d8ecfd":"code","0a985c44":"code","4ba706da":"code","795b8eef":"code","897c1718":"code","dd526d0c":"code","fb6f5501":"code","301f9149":"code","b1100044":"code","0d8fe799":"code","f47e44da":"code","ce16fce9":"code","1fd74db0":"code","f17a3e78":"code","c98d4b40":"code","5557dfe2":"code","7b5def41":"code","3e5d98d1":"code","848cca07":"code","b4ba37a4":"code","e0a49268":"markdown","a2016507":"markdown","7c670280":"markdown"},"source":{"fb20df6c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sn\n%matplotlib inline","664cb1f9":"athletes = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\nathletes.head()","d8151e02":"regions = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')\nregions.head()","590d34fc":"athletes.shape","2d5669ca":"regions.shape","9c376e05":"athletes.isna().sum()","4212746c":"regions.isna().sum()","66f55830":"# now merge both tables\ndf = athletes.merge(regions, on='NOC', how='left')","159227ca":"df.head()","0a126207":"df.shape","5245bd91":"# In the new data frame column name region and notes have small case so, let's rename these column names\ndf.rename(columns={'region':'Region', 'notes':'Notes'}, inplace=True)\ndf.head()","0f9f9d6a":"df.describe()","23fc4550":"df.info()","fecf1ba1":"# check null values\ndf.isna().sum()  # we can use as well df.isnull().sum()","f19ef9d8":"# now print the list of columns which contains null value\ndf.columns[df.isnull().any()].tolist()","d543be5a":"# India\nIndia_df =  df.query('Team==\"India\"')\nIndia_df.head()","313adc20":"India_df.Medal.value_counts()","1e59cfc5":"# Japan\nJapan_df =  df.query('Team==\"Japan\"')\nJapan_df.head()","c41c2ab7":"Japan_df.Medal.value_counts()","e0a88eda":"# Top 10 participating countries\ntop_10_countries = df.Team.value_counts().sort_values(ascending=False).head(10)\ntop_10_countries","39d8ecfd":"plt.figure(figsize=(12,6))\nsn.barplot(x=top_10_countries.index, y=top_10_countries)\nplt.title('Top 10 countries of participant')","0a985c44":"# Age distribution of the athelete\nplt.figure(figsize=(12,6))\nplt.xlabel('Age')\nplt.ylabel('No of participants')\nplt.title('Age distribution of Atheletes')\nplt.hist(df.Age, bins=np.arange(10,80,2), color='orange', edgecolor='white')\n","4ba706da":"# Winter olympic sports\ndf[df['Season']=='Winter']['Sport'].unique()","795b8eef":"# Summer olympic games\ndf[df.Season=='Summer'].Sport.unique()","897c1718":"# Male and Female Participants\ndf.Sex.value_counts()","dd526d0c":"plt.figure(figsize=(12,6))\nplt.title('Gender Distribution')\nplt.pie(df.Sex.value_counts(), labels=df.Sex.value_counts().index, autopct='%1.1f%%', startangle=180, shadow=True)","fb6f5501":"# Total no. of female athletes in each olympic\na = df[df['Sex']=='F'].groupby('Year').count()['Sex'].reset_index(name='Female_count')\nplt.figure(figsize=(20,10))\nplt.plot(a.Year,a.Female_count)\nplt.title('Female athlete over time')","301f9149":"# Total no. of female athletes in each olympic( Summer\/Winter)\nf_summer = df[(df.Sex=='F') & (df.Season=='Summer')].groupby('Year').count()['ID'].reset_index(name='Count_of_female_athlete')\nplt.plot(f_summer.Year, f_summer.Count_of_female_athlete)\nplt.title('Female athlete over time in summer olympics')","b1100044":"f_winter = df[(df.Sex=='F') & (df.Season=='Winter')].groupby('Year').count()['ID'].reset_index(name='Count_of_female_athlete')\nplt.plot(f_winter.Year, f_winter.Count_of_female_athlete)\nplt.title('Female athlete over time in Winter olympics')","0d8fe799":"# Athlete with gold medal\ndf[df.Medal=='Gold'].head()","f47e44da":"# Gold beyond 60\ndf[(df['Medal']=='Gold') & (df['Age']>60)]","ce16fce9":"# Gold beyond 60 sports\ndf[(df.Medal=='Gold') & (df.Age>60)].Sport.values.tolist()","1fd74db0":"sn.countplot(df[(df.Medal=='Gold') & (df.Age>60)].Sport.values.tolist())","f17a3e78":"# Total Gold Medals From Each Country\ntop_gold_medal_country =df[df.Medal=='Gold'].groupby('Region').count()['Medal'].reset_index(name='Total_Gold').sort_values(by='Total_Gold',ascending=False).head(10)\ntop_gold_medal_country","c98d4b40":"plt.figure(figsize=(12,6))\nsn.barplot(x='Region', y='Total_Gold', data=top_gold_medal_country)","5557dfe2":"# Rio Olympics\n# rio_df[['Team', 'Medal']].dropna()\nmax_year = df.Year.max()\nrio_df = df[df.Year==max_year]\nrio_df = rio_df[rio_df.Medal.notnull()]   \nrio_df[['Team','Medal']].head()\n","7b5def41":"country_medal = pd.pivot_table(rio_df[['Team','Medal']], values='Medal', index='Team', columns='Medal', aggfunc={'Medal':'count'})\ncountry_medal = country_medal.sort_values(by=['Gold'], ascending=False).head(6)\ncountry_medal = country_medal.reset_index()\ncountry_medal","3e5d98d1":"# Plot columnar bar chart for this.\n# plt.figure(figsize=(20,10)) # does not working here\ncountry_medal.plot(x='Team', y=['Gold','Silver','Bronze'], kind='bar', figsize=(20,10))\n","848cca07":"# now plot the distribution of height and weight of the athletes who won medals by sex \nMedalist = df[df.Medal.notnull()] # athlete who won medal\nMedalist = Medalist[(Medalist.Height.notnull()) & (Medalist.Weight.notnull())]\nMedalist.head()","b4ba37a4":"# scatter plot\nplt.figure(figsize=(10,5))\nsn.scatterplot(x='Height', y='Weight', data= Medalist, hue='Sex')","e0a49268":"##### Age, Height, Weight and Medal column has null value.","a2016507":"##### region has 3 null value","7c670280":"#### Data of specific country"}}