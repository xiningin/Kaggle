{"cell_type":{"b4ecdfc5":"code","0913e169":"code","7cec66bb":"code","7db721b7":"code","a8201f85":"code","5d648172":"code","4e184bb4":"code","1bb69282":"code","9b143d98":"code","dbbc8ce7":"code","3c89e1e0":"code","c2ca97c8":"code","1d92c57c":"markdown","e1adc7be":"markdown","8b2451a9":"markdown","cd66c84e":"markdown","1829dda0":"markdown","eec065a0":"markdown","6fe85c65":"markdown","8fb53124":"markdown","502007bc":"markdown","66a6d602":"markdown","4f3eceb2":"markdown"},"source":{"b4ecdfc5":"import numpy as np\nimport pandas as pd\nimport os","0913e169":"# if you want to run localy, download the dataset and use the commented dataset variable\n# dataset = 'brazilian-number-of-murders-1996-to-2016-ipea.csv'\n\ndataset = os.listdir(\"..\/input\")[0] # running on kaggle\nprint('dataset: {}'.format(dataset))","7cec66bb":"df = pd.read_csv('..\/input\/'+dataset, sep=';')\ndf.head(5)","7db721b7":"unique_states = np.unique(df['nome'])\nnumber_of_unique_states = len(unique_states)\n\nprint('List of States: {}.'.format(unique_states))\nprint('There are {} unique states.'.format(number_of_unique_states))","a8201f85":"last_year = max(np.unique(df['per\u00edodo']))\nfirst_yeat = min(np.unique(df['per\u00edodo']))\ndelta_year = last_year - first_yeat + 1\n\ndf_count = df.groupby(['nome']).size().reset_index(name='contagem')\ndf_count['validacao'] = df_count['contagem'] == delta_year\nvalidation_count = df_count['validacao'].sum()\n\nprint('Range of years in the dataset: {}.\\nNumber of stated equaly represented: {}'.format(delta_year, validation_count))","5d648172":"df_negative_validation = pd.DataFrame()\ndf_negative_validation['negative'] = df['valor'] >= 0\nlen_dataset = delta_year* 27 # the number of sample should be\nnumber_of_nonpositives = df_negative_validation.negative.sum()\nprint('Number of non-negatives number of murders {}. Len of dataset {}. check: {}'.format(number_of_nonpositives, len_dataset, number_of_nonpositives == len_dataset))\n\n#print('Number of stated equaly represented: {}'.format(validation_count))","4e184bb4":"import matplotlib.pyplot as plt","1bb69282":"def plt_murderes_per_state(df, state, color='C0'):\n    df_state = df.loc[df['nome'] == state]\n    \n    %matplotlib inline\n    \n    x = list(df_state['per\u00edodo'])\n    y = list(df_state['valor'])\n\n    plt.figure(figsize=(15,5))\n    x_pos = [i for i, _ in enumerate(x)]\n\n    plt.bar(x_pos, y, label='State of {}'.format(state), color=color)\n    plt.legend(loc='upper right')\n    plt.xlabel('Year')\n    plt.ylabel('Number of Murders')\n    plt.title('Number of Murders Between {} and {} of {} State'.format(x[0], x[-1], state))\n\n    plt.xticks(x_pos, x)\n\n    plt.show()","9b143d98":"plt_murderes_per_state(df, 'RJ') # Rio de Janeiro","dbbc8ce7":"plt_murderes_per_state(df, 'SP', color='C3') # Sao Paulo","3c89e1e0":"def plt_murderes_side_by_side(df, state1, state2, color1='C0', color2='C3'):\n    df_state1 = df.loc[df['nome'] == state1]\n    df_state2 = df.loc[df['nome'] == state2]\n    \n    x1 = list(df_state1['per\u00edodo'])\n    y1 = list(df_state1['valor'])\n    \n    x2 = list(df_state2['per\u00edodo'])\n    y2 = list(df_state2['valor'])\n    \n    N = len(x1)\n        \n    %matplotlib inline\n    \n    ind = np.arange(N) \n    width = 0.35\n    \n    plt.figure(figsize=(15,5))\n    x1_pos = [i for i, _ in enumerate(x1)]\n    x2_pos = [i + width for i, _ in enumerate(x1)]\n    xlabel_pos = [i + (width \/ 2) for i, _ in enumerate(x1)]\n    \n    plt.bar(x1_pos, y1, width, label='State of {}'.format(state1), color=color1)\n    plt.bar(x2_pos, y2, width, label='State of {}'.format(state2), color=color2)\n    \n    plt.xticks(xlabel_pos, x1)\n    \n    plt.legend(loc='upper right')\n    plt.xlabel('Year')\n    plt.ylabel('Number of Murders')\n    plt.title('Number of Murders Between {} and {} of States {} and {}'.format(x1[0], x1[-1], state1, state2))\n\n    \n    plt.show()","c2ca97c8":"plt_murderes_side_by_side(df, 'RJ', 'SP')","1d92c57c":"**Reading csv as DataFrame**","e1adc7be":"**Another great ideia is to plot thease two bar charts side by side**","8b2451a9":"### 2 - All States are equaly represented in all dataset\n\nLet's check if all States are equaly represented in all dataset. If the dataset is correct, the nuber must be 27.","cd66c84e":"**Getting dataset name**","1829dda0":"### 3 - negative number of murders?\n\nThere aren't negative number of murders, It does not make any sense, so we have to validate this.\nThe number os samples should be: delta_year (21 years) * number_of states (27 for Brazil)\nSo, 21 * 27 = 567. For this validation, the len of dataset must be 567 and the number of positive (or equal zero) number of murders must be 567.\n","eec065a0":"## 101 - Validation\n\n### 1 - Number of States\n\nThere are 27 states in Brazil. We Want to if all of them are in dataset.","6fe85c65":"## Opening dataset ","8fb53124":"If the number of states are equal 27, all the brazilian states are represented in the dataset.","502007bc":"## 102 - Distribuitions\n\nBar charts are an excelent tool to see what's going on some set of data. For example, let's see some data abount Rio de Janeiro, initial 'RJ'","66a6d602":"# Brazilian Number Of Murders - 1996 to 2016 (Ipea)\n\nKernel to exemplify statistics concepts on Brazilian Number Of Murders dataset.","4f3eceb2":"**Imports**"}}