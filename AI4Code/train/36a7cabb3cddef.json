{"cell_type":{"09a3719a":"code","74b7fe59":"code","8612a547":"code","6022f1e2":"code","18ad99e9":"code","438ddbfc":"code","65598a48":"code","17476097":"code","def607b2":"code","01094653":"code","be08d865":"code","cc1124bd":"code","d7a06f6a":"code","2b81aee5":"code","4e5dcae0":"code","ee219efd":"code","004b1870":"code","7ea54095":"code","446a338b":"code","ac9f843b":"code","4646263c":"code","752d0fbf":"code","856bbd6a":"code","d8a19143":"code","4eabff0a":"code","d27bdbe5":"code","9e53d168":"code","8e04cbb8":"code","28504ac1":"code","423171df":"code","17ccc8e3":"code","adaef305":"code","bdf768cd":"code","989d6c70":"code","ae75e064":"code","73a80a8e":"code","3cedd233":"code","60bde690":"code","dcc5c4c5":"code","66fc0673":"code","2bf4c3a4":"code","611f5b20":"code","e93db4bc":"code","7315cbd5":"code","55899b90":"code","f56c0d7f":"code","2424cf72":"code","beeb99da":"markdown"},"source":{"09a3719a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74b7fe59":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain.head()","8612a547":"test.info()","6022f1e2":"train.info()\n","18ad99e9":"import matplotlib as plt\n%matplotlib inline \nimport seaborn as sns\nsns.set()","438ddbfc":"def barchart(feature):\n    survived=train[train['Survived']==1][feature].value_counts()\n    dead=train[train['Survived']==0][feature].value_counts()\n    df=pd.DataFrame([survived,dead])\n    df.index=['Survived','Dead']\n    df.plot(kind='bar',stacked=True,figsize=(5,5))\n\n\n\n","65598a48":"barchart('Sex')","17476097":"barchart('Pclass')","def607b2":"barchart('SibSp')","01094653":"barchart('Embarked')","be08d865":"trainTestData=[train,test]\nfor ds in trainTestData:\n    ds['Title']=ds['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)","cc1124bd":"train['Title'].value_counts()","d7a06f6a":"test['Title'].value_counts()","2b81aee5":"titleMapping={'Mr':0,'Miss':1,'Mrs':2,'Master':3,'Dr':3,'Don':3,'Dona':3,'Mme':3,'Countess':3,'Rev':3,'Sir':3,'Lady':3,\n              'Capt':3,'Major':3,'Mlle':3,'Jonkheer':3,'Ms':3,'Col':3}","4e5dcae0":"for ds in trainTestData :\n    ds['Title']=ds['Title'].map(titleMapping)\ntrain.head()","ee219efd":"test.head()","004b1870":"train.drop('Name',axis=1,inplace=True)\ntest.drop('Name',axis=1,inplace=True)","7ea54095":"test.head()","446a338b":"sexMapping={'male':0,'female':1}\nfor ds in trainTestData :\n    ds['Sex']=ds['Sex'].map(sexMapping)\ntrain.head()","ac9f843b":"train.info()\ntrain['Age'].fillna(train.groupby('Title')['Age'].transform('median'),inplace=True)\ntest['Age'].fillna(test.groupby('Title')['Age'].transform('median'),inplace=True)","4646263c":"for ds in trainTestData:\n    ds.loc[ds['Age']<=16,'Age']=0\n    ds.loc[(ds['Age']>16) & (ds['Age']<=26),'Age']=1,\n    ds.loc[(ds['Age']>26) & (ds['Age']<=36),'Age']=2,\n    ds.loc[(ds['Age']>36) & (ds['Age']<=62),'Age']=3,\n    ds.loc[ds['Age']>62,'Age']=4\n           ","752d0fbf":"test.info()","856bbd6a":"for ds in trainTestData:\n    ds['Embarked']=ds['Embarked'].fillna('S')\ntrain.head()\n","d8a19143":"embarked_mapping = {\"S\": 0, \"C\": 1, \"Q\": 2}\nfor dataset in trainTestData:\n    dataset['Embarked'] = dataset['Embarked'].map(embarked_mapping)","4eabff0a":"train.info()","d27bdbe5":"train['Fare'].fillna(train.groupby('Pclass')['Fare'].transform('median'),inplace=True)\ntest['Fare'].fillna(test.groupby('Pclass')['Fare'].transform('median'),inplace=True)","9e53d168":"#facet=sns.FacetGrid(train,hue='Survived',aspect=4)\n#facet.map(sns.kdeplot,'Fare',shade=True)\n#facet.set(xlim=(0,train['Fare'].max()))\n#facet.add_legend()\n#plt.show()\n","8e04cbb8":"for ds in trainTestData:\n    ds.loc[ds['Fare']<=17,'Fare']=0\n    ds.loc[(ds['Fare']>17) & (ds['Fare']<=30),'Fare']=1,\n    ds.loc[(ds['Fare']>30) & (ds['Fare']<=100),'Fare']=2,\n    ds.loc[ds['Fare']>100,'Fare']=4","28504ac1":"train.head()","423171df":"for ds in trainTestData:\n    ds['Cabin']=ds['Cabin'].str[:1]","17ccc8e3":"#Pcls1=train[train['Pclass']==1]['Cabin'].value_counts()\n#Pcls2=train[train['Pclass']==2]['Cabin'].value_counts()\n#Pcls3=train[train['Pclass']==3]['Cabin'].value_counts()\n#df=pd.DataFrame([Pcls1,Pcls2,Pcls3])\n\n#df.index=['Ist Class','2nd Class','3rd Class']\n#df.plot(kind='bar',stacked=True,figsize=(10,5))\n","adaef305":"cabinMapping={'A':0,'B':0.4,'C':0.8,'D':1.2,'E':1.6,'F':2,'G':3,'Mme':2.4,'T':2.8}\nfor ds in trainTestData :\n    ds['Cabin']=ds['Cabin'].map(cabinMapping)\ntrain.head()","bdf768cd":"train['Cabin'].fillna(train.groupby('Pclass')['Cabin'].transform('median'),inplace=True)\ntest['Cabin'].fillna(test.groupby('Pclass')['Cabin'].transform('median'),inplace=True)","989d6c70":"train['FamilySize']=train['SibSp']+train['Parch']+1\ntest['FamilySize']=test['SibSp']+test['Parch']+1","ae75e064":"familyMapping={1:0,2:0.4,3:0.8,4:1.2,5:1.6,6:2,7:2.4,8:2.8,9:3.2,10:3.6,11:4 }\nfor ds in trainTestData :\n    ds['FamilySize']=ds['FamilySize'].map(familyMapping)\ntrain.head()","73a80a8e":"train.head()","3cedd233":"features_drop = ['Ticket', 'SibSp', 'Parch']\ntrain = train.drop(features_drop, axis=1)\ntest = test.drop(features_drop, axis=1)\ntrain = train.drop(['PassengerId'], axis=1)\n","60bde690":"test.shape","dcc5c4c5":"train_data = train.drop('Survived', axis=1)\ntarget = train['Survived']\n\ntrain_data.shape, target.shape\n","66fc0673":"train_data.head(10)","2bf4c3a4":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nimport numpy as np","611f5b20":"train.info()","e93db4bc":"from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\n","7315cbd5":"\nclf = SVC()\nclf.fit(train_data, target)\n\ntest_data = test.drop(\"PassengerId\", axis=1).copy()\nprediction = clf.predict(test_data)","55899b90":"print(prediction)\n","f56c0d7f":"submission = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": prediction\n    })\n\nsubmission.to_csv('submission.csv', index=False)","2424cf72":"submission = pd.read_csv('submission.csv')\nsubmission.head()","beeb99da":"#This is my first kaggle project"}}