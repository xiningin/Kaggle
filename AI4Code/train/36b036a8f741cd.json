{"cell_type":{"2af57458":"code","7575adb6":"code","c25f1f81":"code","0b6f9351":"code","e061bb74":"code","a6137fea":"code","51f3a68e":"code","a3599771":"code","3307f4b6":"code","9305d857":"code","b2c6a710":"code","ffb0497e":"code","596d99e3":"code","1f9d1015":"code","a582e56d":"code","31c634f2":"code","61ae844e":"code","4c4fd857":"code","ab767c81":"code","8ed92fe0":"code","b7a3a5b6":"code","8d1f3b96":"code","2729e6b8":"code","2759c729":"code","fd0bbf29":"code","0bd296d4":"code","aa8b6096":"code","58efcc8a":"code","6f40a7a8":"code","45abce16":"code","1fc9ab70":"code","aae128ac":"code","2eec6cc1":"code","1a31c7db":"code","4ed71a41":"code","24d15f0f":"code","94816900":"code","8200e175":"code","1e533141":"code","d85c7c40":"code","1e633c67":"code","2fea6a48":"code","a63da120":"code","9f75579f":"code","9dafd8a5":"code","999eeb1b":"code","76d4dad8":"code","1589993b":"code","7c140920":"code","06a45e39":"code","ef5b9158":"code","83ad1c2c":"code","1af08c97":"code","cb50ea47":"code","caff0096":"code","b85ebe6d":"code","169623bb":"code","e8196259":"code","d3bdd854":"code","acc3154c":"code","49c7d23e":"code","38b8508a":"code","adedee3a":"code","003d2c31":"code","e77e49de":"code","335d49c6":"code","9c13ae9b":"code","66912cfa":"markdown","29738fc4":"markdown","8106deae":"markdown","769d2587":"markdown","f9808c7a":"markdown","be584f45":"markdown","82b7a4f4":"markdown","598f6525":"markdown","c5b85ff6":"markdown","8ec2aa3a":"markdown","cf0f0bc0":"markdown","33eb7180":"markdown","b836c600":"markdown","6b6e2b73":"markdown","d3af477b":"markdown","8cf711e8":"markdown","3f0f59f2":"markdown","fb513ad2":"markdown","e920f9c7":"markdown","64bae29d":"markdown"},"source":{"2af57458":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as st\npd.set_option('display.max_columns',50)\npd.set_option('display.max_rows',2000)","7575adb6":"train_set=pd.read_csv('..\/input\/sales-prediction-for-big-mart-outletsav\/train_bms.csv')\ntrain_set","c25f1f81":"test_set=pd.read_csv('..\/input\/sales-prediction-for-big-mart-outletsav\/test_bms.csv')\ntest_set","0b6f9351":"train_set['Data']='train'","e061bb74":"test_set['Data']='test'","a6137fea":"test_set['Item_Outlet_Sales']=np.nan","51f3a68e":"combined=pd.concat([train_set,test_set],ignore_index=True,sort=False)\ncombined","a3599771":"combined['Item_Weight']=combined.groupby('Item_Identifier')['Item_Weight'].transform(lambda x:x.fillna(x.mean()))","3307f4b6":"combined.loc[(combined.Outlet_Location_Type=='Tier 2')&(combined.Outlet_Type=='Supermarket Type1'),'Outlet_Size']='Small'","9305d857":"combined.loc[(combined.Outlet_Location_Type=='Tier 3')&(combined.Outlet_Type=='Grocery Store'),'Outlet_Size']='Small'","b2c6a710":"combined['Item_Fat_Content']=combined['Item_Fat_Content'].replace(['low fat'],['Low Fat'])","ffb0497e":"combined['Item_Fat_Content']=combined['Item_Fat_Content'].replace(['LF'],['Low Fat'])","596d99e3":"combined['Item_Fat_Content']=combined['Item_Fat_Content'].replace(['reg'],['Regular'])","1f9d1015":"combined['Years']=2013-combined.Outlet_Establishment_Year","a582e56d":"combined.Item_Visibility=combined.groupby('Item_Identifier')['Item_Visibility'].transform(lambda x:x.replace(0,x.median()))","31c634f2":"combined['Price_Per_Unit']=combined.Item_MRP\/combined.Item_Weight","61ae844e":"ids=[]\nfor i in combined.Item_Identifier:\n    ids.append(i[:2])","4c4fd857":"combined['ID_Cat']=pd.Series(ids)","ab767c81":"combined.loc[combined.ID_Cat=='NC','Item_Type']='Non Eatables'","8ed92fe0":"combined.loc[combined.ID_Cat=='FD','Item_Type']='Food'","b7a3a5b6":"combined.loc[combined.ID_Cat=='DR','Item_Type']='Drinks'","8d1f3b96":"combined.loc[combined.ID_Cat=='NC','Item_Fat_Content']='Non Edible'","2729e6b8":"df=combined.copy()","2759c729":"df.drop(['Outlet_Establishment_Year'],axis=1,inplace=True)","fd0bbf29":"df.head()","0bd296d4":"df.skew()","aa8b6096":"l=['Item_Weight', 'Item_Visibility', 'Item_MRP',\n       'Years','Price_Per_Unit']","58efcc8a":"df.skew()","6f40a7a8":"for i in l:\n    df[i]=list(st.boxcox(combined[i]+1)[0])\ndf.skew()","45abce16":"# Target variable: Item_outlet_sales\nsns.distplot(df['Item_Outlet_Sales'],color='hotpink')\n#sns.distplot(train.Item_Outlet_Sales)\nplt.xlabel='Sales'\nplt.ylabel('Frequency')\nplt.title('Histogram-Item_Outlet_Sales')\nplt.show()","1fc9ab70":"#Inference\n#1.Sales appears to be skewed\n#2.In +ve skew-mean>median>mode and vice-versa","aae128ac":"#seaborn library cannot use missing values\nsns.distplot(df['Item_Weight'].dropna(),color='y')\n#Item_weight is uniform,neither +ve,-ve skewed,so we cant use mean,median or mode for missing values.","2eec6cc1":"#Item_visibility\nsns.distplot(df['Item_Visibility'],color='k')\n#positively skewed","1a31c7db":"#Item_mrp\nsns.distplot(df['Item_MRP'],color='hotpink')","4ed71a41":"# It clearly shows that there is a cluster and 4 different groups are created\nplt.scatter(df.Item_MRP,df.Item_Outlet_Sales,color='red')","24d15f0f":"# Univariate Analysis for categorical columns\ndf.Item_Fat_Content.value_counts().plot(kind='bar',color='g')\n#low fat=Low fat=lf and so on","94816900":"df.Item_Fat_Content.replace(to_replace=['LF','low fat'],value=['Low Fat']*2,inplace=True)\ndf.Item_Fat_Content.replace(to_replace=['reg'],value=['Regular'],inplace=True)\ndf.Item_Fat_Content.value_counts().plot(kind='bar',color='b')","8200e175":"df.Item_Type.value_counts().plot(kind='bar',color='c')","1e533141":"df.Outlet_Identifier.value_counts().plot(kind='bar',color='g')","d85c7c40":"df.Outlet_Type.value_counts().plot(kind='bar',color='blue')","1e633c67":"df.Outlet_Size.value_counts().plot(kind='bar',color='red')","2fea6a48":"#Item wt vs Sales\nplt.scatter(df.Item_Weight,df.Item_Outlet_Sales,color='coral')\n#No pattern","a63da120":"plt.scatter(df.Item_Visibility,df.Item_Outlet_Sales,color='green')","9f75579f":"plt.figure(figsize=[7,5]) \nplt.scatter(df.Item_MRP,df.Item_Outlet_Sales,color='coral')\n","9dafd8a5":"#Bivariate: Categorical vs Numerical : Item_Fat_Content vs sales\nsns.boxplot(x='Item_Fat_Content',y='Item_Outlet_Sales',data=df)\n#IQR=Q3-Q1\n#min=q1-1.5*iqr\n#max=q3+1.5*iqr","999eeb1b":"df.groupby('Item_Fat_Content')['Item_Outlet_Sales'].describe().T","76d4dad8":"df['Item_Outlet_Sales'].describe().T","1589993b":"plt.figure(figsize=[10,5])\nsns.boxplot(x='Item_Type',y='Item_Outlet_Sales',data=train_set)\nplt.xticks(rotation=90)\n#x-cat,y-num","7c140920":"sns.boxplot(x='Outlet_Identifier',y='Item_Outlet_Sales',data=df)\nplt.xticks(rotation=90)","06a45e39":"sns.boxplot(x='Outlet_Size',y='Item_Outlet_Sales',data=df)","ef5b9158":"pd.DataFrame(df.groupby(['Outlet_Size','Outlet_Location_Type','Outlet_Type'])['Outlet_Identifier'].value_counts()).T","83ad1c2c":"pd.crosstab(df[\"Outlet_Size\"],df[\"Outlet_Location_Type\"],margins=True)","1af08c97":"sns.boxplot(x='Outlet_Location_Type',y='Item_Outlet_Sales',data=df)","cb50ea47":"sns.boxplot(x='Outlet_Type',y='Item_Outlet_Sales',data=df)\nplt.xticks(rotation=90)","caff0096":"df.isnull().sum()","b85ebe6d":"df.head()","169623bb":"df=pd.get_dummies(df,columns=['Item_Fat_Content','Item_Type','Outlet_Location_Type','Outlet_Type','ID_Cat','Outlet_Size'],drop_first=True)","e8196259":"train=df.loc[df['Data']=='train']","d3bdd854":"test=df.loc[df['Data']=='test']","acc3154c":"train=train.drop('Data',axis=1)\ntest=test.drop(['Data','Item_Outlet_Sales'],axis=1)","49c7d23e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import cross_validate","38b8508a":"#Define target and ID columns:\ntarget = 'Item_Outlet_Sales'\nIDcol = ['Item_Identifier','Outlet_Identifier']\n#from sklearn import cross_validation, metrics\ndef modelfit(alg, dtrain, dtest, predictors, target, IDcol, filename):\n    #Fit the algorithm on the data\n    alg.fit(dtrain[predictors], dtrain[target])\n        \n    #Predict training set:\n    dtrain_predictions = alg.predict(dtrain[predictors])\n\n    #Perform cross-validation:\n    cv_score = cross_val_score(alg, dtrain[predictors], dtrain[target], cv=20, scoring='neg_mean_squared_error')\n    cv_score = np.sqrt(np.abs(cv_score))\n    \n    #Print model report:\n    print(\"\\nModel Report\")\n    print(\"RMSE : %.4g\" % np.sqrt(metrics.mean_squared_error(dtrain[target].values, dtrain_predictions)))\n    print(\"CV Score : Mean - %.4g | Std - %.4g | Min - %.4g | Max - %.4g\" % (np.mean(cv_score),np.std(cv_score),np.min(cv_score),np.max(cv_score)))\n    \n    #Predict on testing data:\n    dtest[target] = alg.predict(dtest[predictors])\n    \n    #Export submission file:\n    IDcol.append(target)\n    submission = pd.DataFrame({ x: dtest[x] for x in IDcol})\n    submission.to_csv(filename, index=False)","adedee3a":"from sklearn import metrics\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\npredictors = [x for x in train.columns if x not in [target]+IDcol]\n# print predictors\nalg1 = LinearRegression(normalize=True)\nmodelfit(alg1, train, test, predictors, target, IDcol, 'alg1.csv')\ncoef1 = pd.Series(alg1.coef_, predictors).sort_values()\ncoef1.plot(kind='bar', title='Model Coefficients')","003d2c31":"predictors = [x for x in train.columns if x not in [target]+IDcol]\nalg2 = Ridge(alpha=0.05,normalize=True)\nmodelfit(alg2, train, test, predictors, target, IDcol, 'Ridge1.csv')\ncoef2 = pd.Series(alg2.coef_, predictors).sort_values()\ncoef2.plot(kind='bar', title='Model Coefficients')","e77e49de":"from sklearn.tree import DecisionTreeRegressor\npredictors = [x for x in train.columns if x not in [target]+IDcol]\nalg3 = DecisionTreeRegressor(max_depth=15, min_samples_leaf=100)\nmodelfit(alg3, train, test, predictors, target, IDcol, 'DTR.csv')\ncoef3 = pd.Series(alg3.feature_importances_, predictors).sort_values(ascending=False)\ncoef3.plot(kind='bar', title='Feature Importances')","335d49c6":"from sklearn.ensemble import RandomForestRegressor\npredictors = [x for x in train.columns if x not in [target]+IDcol]\nalg5 = RandomForestRegressor(n_estimators=500,max_depth=5, min_samples_leaf=20,n_jobs=-1,min_samples_split=10)\nmodelfit(alg5, train, test, predictors, target, IDcol, 'RFR.csv')\ncoef5 = pd.Series(alg5.feature_importances_, predictors).sort_values(ascending=False)\ncoef5.plot(kind='bar', title='Feature Importances')","9c13ae9b":"predictors = [x for x in train.columns if x not in [target]+IDcol]\nalg6 = RandomForestRegressor(n_estimators=1000,max_depth=10, min_samples_leaf=10,min_samples_split=10,n_jobs=-1)\nmodelfit(alg6, train, test, predictors, target, IDcol, 'RFR2.csv')\ncoef6 = pd.Series(alg6.feature_importances_, predictors).sort_values(ascending=False)\ncoef6.plot(kind='bar', title='Feature Importances')","66912cfa":"# Bivariate:Numerical vs Numerical\n","29738fc4":"* Variable\tDescription\n* Item_Identifier\tUnique product ID\n* Item_Weight\tWeight of product\n* Item_Fat_Content\tWhether the product is low fat or not\n* Item_Visibility\tThe % of total display area of all products in a store allocated to the particular product\n* Item_Type\tThe category to which the product belongs\n* Item_MRP\tMaximum Retail Price (list price) of the product\n* Outlet_Identifier\tUnique store ID\n* Outlet_Establishment_Year\tThe year in which store was established\n* Outlet_Size\tThe size of the store in terms of ground area covered\n* Outlet_Location_Type\tThe type of city in which the store is located\n* Outlet_Type\tWhether the outlet is just a grocery store or some sort of supermarket\n* Item_Outlet_Sales\tSales of the product in the particular store. This is the outcome variable to be predicted.","8106deae":"**Submission file format**\n\n* Variable\tDescription\n* Item_Identifier\tUnique product ID\n* Outlet_Identifier\tUnique store ID\n* Item_Outlet_Sales\tSales of the product in the particular store. This is the outcome variable to be predicted.","769d2587":"# **Univariate Analysis**","f9808c7a":"**Sales Prediction for Big Mart Outlets\nThe data scientists at BigMart have collected 2013 sales data for 1559 products across 10 stores in different cities. Also, certain attributes of each product and store have been defined. The aim is to build a predictive model and predict the sales of each product at a particular outlet.\nUsing this model, BigMart will try to understand the properties of products and outlets which play a key role in increasing sales.\nPlease note that the data may have missing values as some stores might not report all the data due to technical glitches. Hence, it will be required to treat them accordingly.** ","be584f45":"### Ridge Regression Model","82b7a4f4":"**Now Furthur combined is splited in Two data sets such As Train Data And Test Data for Model builtding**","598f6525":"**Check for Skewness & Removal of Outliers**","c5b85ff6":"**Summary:Bivariate analysis:**\n1. The highest performing outlet is out27 mostlt based i  tier 3 and s3 stores.\n2. Higher visibility,lesserthe sales for the items in store.This is because high visibility shows that the products are large\/heavy in nature and hence people are not interested in buying them on a day to day basis.However the groceries,snacks,fruits and veggies are daily items,although low in visibility but high in sales.\n3. No pattern seen in item weight vs sales.\n4. Abnormality- A straight line in visibility plot is found at 0 meaning that thr sales is happening where the product is not seen.need to rectify this.\n5. Tier 3 cities have better sales and s3 stores are making most of the money and of course,the size is medium.","8ec2aa3a":"* Those Null Values Present  in dataset are from test Dataset We wont Drop Them at Once We Will impute Them by Regression Model.","cf0f0bc0":"### DTR","33eb7180":"**Missing values and their imputation**\n1. Mean\/Median Imputation for numerical columns.\n2. Mode is used to impute the values where the column is categorical.\n3. Find out a pattern-There must be some pattern amongst the columns.Hence,its wise to exploit the pattern and use it to your best.\n4. Build a machine learning model","b836c600":"**Summary:**\n1. Sales is skewed because of outliers.\n2. Item wt has missing values and shows no pattern in histogram\n3. Item Mrp shows 4 data distributions.need to expolre more\n4. There are two types of prod sold-reg and low fat\n5. Item visbility has lots of 0 values-need to treat this and it is skewed which means that there are prod which have higher visi in comp to others.\n6. Outlet size is mostly medium wherein the types of outlets is s1 and most of the cities where these store are tier 3 cities.\n7. Top 5 prod that sell in these stores are fruits and veggies,snack foods,dairy,frozen food followed by household items.","6b6e2b73":"# **Read Dataset train and Test**","d3af477b":"# **Combine Dataset Train & Test in combined**","8cf711e8":"**Evaluation Metric**-\nYour model performance will be evaluated on the basis of your prediction of the sales for the test data (test.csv), which contains similar data-points as train except for the sales to be predicted. Your submission needs to be in the format as shown in sample submission.\n\nWe at our end, have the actual sales for the test dataset, against which your predictions will be evaluated. We will use the Root Mean Square Error value to judge your response.","3f0f59f2":"# **Problem Statment-:**","fb513ad2":"# **Imputation of Null Values**","e920f9c7":"### RFR","64bae29d":"# **Data Dictionary**\n\nWe have train (8523) and test (5681) data set, train data set has both input and output variable(s). You need to predict the sales for test data set."}}