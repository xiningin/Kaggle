{"cell_type":{"49dcc8f9":"code","2da91ea6":"code","f97cbda8":"code","3b1eca5b":"code","d98a6302":"code","cdbf57f3":"code","7760752d":"code","f920b5e3":"code","56ac8ca9":"code","6b45d7ce":"code","cbcc7903":"code","0ac3c6c3":"code","bc432e0b":"code","bda8a084":"code","db7ad90b":"code","ecdb6c8c":"code","fd619d9a":"code","59d3e950":"code","c1777770":"code","9ecd1847":"code","1ba152b2":"markdown","6d58540d":"markdown","f1936dcc":"markdown","68f5f89e":"markdown","7a3ec853":"markdown"},"source":{"49dcc8f9":"# Load libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\n#%matplotlib inline\n#import warnings\n#warnings.filterwarnings(\"ignore\")\n","2da91ea6":"# Load Data\ndf = pd.read_csv('..\/input\/Data_To_Hourervals_no_filter.csv', header=0, sep = ';')\ndf['hour'] = df['Date'].str.split(' ', n = 1, expand = True)[1]\n\ndf = df.set_index('Date')","f97cbda8":"#Adding new columns\n#Price movement during the period\ndf['Change'] = df['Close']-df['Open']\n\n#Lets create a compound score that ignores the neutral values\ndf['Compound_Score_with_filter'] = (df['Sent_Negatives']*df['Count_Negatives']+df['Sent_Positives']*df['Count_Positives'])\/(df['Count_Positives']+df['Count_Negatives'])\n\n#Percentual price change during the period\ndf['log_change'] = np.log(df['Close']) - np.log(df['Close'].shift(1))\n\n#Percentual volume of tweets change during the period\ndf['log_n'] = np.log(df['n']) - np.log(df['n'].shift(1))\n\n#Drop columns that are not interesting\ndf = df.drop(columns = ['Low','High', 'Volume (Currency)', 'Open', 'Sent_Negatives', 'Sent_Positives', 'Count_Negatives', 'Count_Positives', 'Count_Neutrals'], axis=0)\n\n\n#change Volume (BTC) column to float\n\n#df['Volume (BTC)'] = pd.to_numeric(df['Volume (BTC)'])","3b1eca5b":"df.head()","d98a6302":"df.tail()","cdbf57f3":"df.info()","7760752d":"values = df.values\ngroups = [0,1,2,3,4,5,6,7,8]\ni =1  \nplt.figure(figsize=(16,13))\nfor group in groups:\n    plt.subplot(len(groups),1,i)\n    plt.plot(values[:,group])\n    plt.title(df.columns[group], y=.5, loc='right')\n    i += 1\nplt.show()","f920b5e3":"#As we can see in the graphs volume (btc) is wrong. So I will delete it\ndf = df.drop(columns = ['Volume (BTC)'], axis=0)\n","56ac8ca9":"#Lets see the distrinution of our key variables\nplt.figure(figsize=(10,7))\nplt.hist(df['Compound_Score'], bins=30, range = (-1,1))\nplt.title('Compound Score Histogram')\nplt.show()\n\nplt.figure(figsize=(10,7))\nplt.hist(df['n'], bins=30, range = (0,5000))\nplt.title('Tweets Volume Histogram')\nplt.show()\n\n\nplt.figure(figsize=(10,7))\nplt.hist(df['log_change'], bins=30, range = (-0.1,0.1))\nplt.title('Bitcoin Price Change Histogram')\nplt.show()","6b45d7ce":"df.describe()","cbcc7903":"#Correlation of all values\ncor = df.corr()\ncor","0ac3c6c3":"sns.set(style=\"white\")\nf, ax = plt.subplots(figsize=(11, 9))\n\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nax =sns.heatmap(cor, cmap=cmap, vmax=1, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .7})\nplt.show()","bc432e0b":"plt.figure(figsize=(16,13))\nplt.plot(df.index, df['Close'], 'red')\nplt.plot(df.index, df['n'], 'g')\nplt.title('BTC Close Price(hr) vs volume tweets')\nplt.xticks(rotation='vertical')\nplt.ylabel('Price ($)');\nplt.show();\n","bda8a084":"df.index = pd.to_datetime(df.index)\ndf['hour']=df.index.to_series().apply(lambda x: x.strftime(\"%X\"))\nhour_df=df.groupby('hour').agg(lambda x: x.mean())\nhour_df['hour'] = hour_df.index\nhour_df","db7ad90b":"#sns Hourly Heatmap\nfig, ax = plt.subplots(figsize=(16, 9))\nresult = hour_df.pivot(index='hour', columns='n', values='Change')\nsns.heatmap(result,ax = ax, annot=True, fmt=\"g\", cmap='viridis')\nplt.title('Volume of tweets x BTC change avg(Hr)')\nplt.show()","ecdb6c8c":"df['Day'] = df.index.day_name()\nday_df=df.groupby('Day').agg(lambda x: x.mean())\nday_df['Day'] = day_df.index\nday_df = day_df.reindex(index = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday','Saturday', 'Sunday'])\nday_df","fd619d9a":"fig, ax = plt.subplots(figsize=(16, 9))\nresult = day_df.pivot(index='Day', columns='n', values='Change')\nsns.heatmap(result,ax = ax, annot=True, fmt=\"g\", cmap='viridis')\nplt.title('Volume of tweets x BTC change avg(Day of the week))')\nplt.show()","59d3e950":"#Correlation. Basically I want to see how the volume of today affects the value of the future. \n#Apparently it affects positively until 100 days later\nAutocorr = []\n\nfor a in range(12362):\n    corr_df = df[['Close']]\n    corr_df[['n']] = df[['n']].shift(a)\n    cor = corr_df.corr()['Close'][1]\n    if str(cor) == 'nan':\n        break\n    Autocorr.append(cor)\n\nplt.figure(figsize=(16,13))\nplt.plot(range(len(Autocorr)), Autocorr, 'g')\nplt.title('Autocorrelation of volume and price')\nplt.xticks(rotation='vertical')\nplt.hlines(0.05, 0, 13000, linestyles = 'dashed', colors = 'r')\nplt.hlines(0, 0, 13000, linestyles = 'solid', colors = 'blue')\nplt.hlines(-0.05, 0, 13000, linestyles = 'dashed', colors = 'r')\nplt.ylabel('Tweets');\nplt.show();","c1777770":"\nprint('The maximum correlation is at', max(Autocorr), 'and that happens after ', Autocorr.index(max(Autocorr)), 'hours')\n","9ecd1847":"#Correlation of values that apparently are not correlated. \n#It is important to test this because maybe the volume of tweets of today does not affect the price of today, but it does tomorrow. \n\nAutocorr = []\n\nfor a in range(12362):\n    corr_df = df[['Close']]\n    corr_df[['Compound_Score']] = df[['Compound_Score']].shift(a)\n    cor = corr_df.corr()['Close'][1]\n    if str(cor) == 'nan':\n        break\n    Autocorr.append(cor)\n\nplt.figure(figsize=(16,13))\nplt.plot(range(len(Autocorr)), Autocorr, 'g')\nplt.title('Autocorrelation of volume and price')\nplt.xticks(rotation='vertical')\nplt.hlines(0.05, 0, 13000, linestyles = 'dashed', colors = 'r')\nplt.hlines(0, 0, 13000, linestyles = 'solid', colors = 'blue')\nplt.hlines(-0.05, 0, 13000, linestyles = 'dashed', colors = 'r')\nplt.ylabel('Tweets');\nplt.show();\n\n","1ba152b2":"**Conclusion:** There is no visual relationship between **day of the week** and the **change of price**.\n\nThere is a seassonal component weekly\n\nLets try to find the amount of days that tweets are correlated to the price\n\n**Conclusions**\n\n**-Further cleaning of data:** The column Volume (BTC) is wrong. Some of the values of the volume of tweets are 0 beacues of missing data. That should be cleaned and substituted with the prevous value to have a cleaner correlation\n\n**-Variables relationships:** Surprisingly, the only varaible that is correlated with the price is volume of tweets. We have discovered that the correlation of the two variables is maintained for about **100 days **. \n\n**-Seassonality:** There is seassonal components hourly and weekly. There might be more in bigger timeframes, but there is not enough data study them.\n\n**Next steps**\n\nCleaning data and updating this Exploratory analysis to see if we can find relationships with the traded volume of bitcoin. \n\n","6d58540d":"**Conclusion:** There is no visual relationship between **hour** and the **change of price**.\nThere is a small seassonal component hourly\n\nLets try with the days of the week","f1936dcc":"**Exploratory Data Analysis**","68f5f89e":"Lets try to find if there is any hourly seasonal component to the data.\n\n","7a3ec853":"The values with the highest correlations with the price is n (volume of tweets)\n\nLets plot Price and Volume of tweets to see the correlation visually"}}