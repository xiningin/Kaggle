{"cell_type":{"c58aadd2":"code","dad8c839":"code","91778007":"code","341e96ba":"code","ded4c828":"code","e99a3e66":"code","bf781061":"code","45f98166":"code","f3e9ae2b":"code","d2ba9422":"code","0beda94d":"code","3041aa66":"code","da55da02":"code","6db8df86":"code","928bec03":"code","ac2e7983":"code","9413088c":"code","be8c64be":"code","e563ba37":"code","3b1d4748":"code","501bff5b":"code","5802fc26":"code","ae674f87":"code","e228b342":"code","b8eef39e":"code","2103b27e":"markdown","e79a0de6":"markdown","6feda5d9":"markdown","010f1e3e":"markdown"},"source":{"c58aadd2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.simplefilter('ignore')","dad8c839":"df = pd.read_csv('..\/input\/concrete-compressive-strength\/Concrete Compressive Strength.csv')","91778007":"df.head()","341e96ba":"\n#Since we would be using these names a lot let us keep shorter names with no capital letters or spaces\n\ndf = df.rename(columns = {\n    'Cement (component 1)(kg in a m^3 mixture)':'cement',\n    'Blast Furnace Slag (component 2)(kg in a m^3 mixture)':'furnace_slag', \n    'Fly Ash (component 3)(kg in a m^3 mixture)':'fly_ash', \n    'Water  (component 4)(kg in a m^3 mixture)':'water', \n    \n    'Superplasticizer (component 5)(kg in a m^3 mixture)':'super_plasticizer', \n    'Coarse Aggregate  (component 6)(kg in a m^3 mixture)':'coarse_agg',\n    'Fine Aggregate (component 7)(kg in a m^3 mixture)':'fine_agg', \n    'Age (day)':'age', \n    'Concrete compressive strength(MPa, megapascals) ': 'strength'})\n\ndf.head()","ded4c828":"df.shape","e99a3e66":"df.columns","bf781061":"df.info()","45f98166":"df.describe()","f3e9ae2b":"#check for nulls\n\nprint(df.isnull().sum())","d2ba9422":"plt.figure(figsize=(15,12))\nsns.heatmap(round(df.describe()[1:].transpose(),2),linewidth=2,annot=True,fmt=\"f\")\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=12)\nplt.title(\"Variables summary\")\nplt.show()","0beda94d":"sns.distplot(df['strength'])","3041aa66":"import itertools\n\ncols = ['cement', 'furnace_slag', 'fly_ash', 'water', 'super_plasticizer','coarse_agg', 'fine_agg']\nlength = len(cols)\ncs = [\"b\",\"r\",\"g\",\"c\",\"m\",\"k\",\"lime\"]\nfig = plt.figure(figsize=(13,25))\n\nfor i,j,k in itertools.zip_longest(cols,range(length),cs):\n    plt.subplot(4,2,j+1)\n    ax = sns.distplot(df[i],color=k,rug=True)\n    ax.set_facecolor(\"w\")\n    plt.axvline(df[i].mean(),linestyle=\"dashed\",label=\"mean\",color=\"k\")\n    plt.legend(loc=\"best\")\n    plt.title(i,color=\"navy\")\n    plt.xlabel(\"\")","da55da02":"plt.figure(figsize=(12,10))\nsns.heatmap(df.corr(),annot=True)","6db8df86":"plt.figure(figsize=(12,6))\ndf.boxplot()\nplt.show()","928bec03":"df.head()","ac2e7983":"df['furnace_slag'] = df['furnace_slag'].replace((0.0),np.nan)\ndf['furnace_slag'] = df['furnace_slag'].fillna(df['furnace_slag'].median())\ndf['fly_ash'] = df['fly_ash'].replace((0.0),np.nan)\ndf['fly_ash'] = df['fly_ash'].fillna(df['fly_ash'].median())\ndf.head()","9413088c":"X = df.drop('strength',axis=1)\ny = df['strength']","be8c64be":"# from sklearn.preprocessing import StandardScaler\n# sc = StandardScaler()\n# X_scaled = sc.fit_transform(X)","e563ba37":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=45)","3b1d4748":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train_scaled = sc.fit_transform(X_train)\nX_test_scaled = sc.fit_transform(X_test)","501bff5b":"from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error\nfrom math import sqrt","5802fc26":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train_scaled,y_train)\n\n#Predicting the train set results\ny_pred_lr = lr.predict(X_train_scaled)\nscore = r2_score(y_train,y_pred_lr)\nprint(\"Score of Training:\",100*score)\nprint(\"RMSE :\" , np.sqrt(mean_squared_error(y_train,y_pred_lr)))\n\n#test set\n\ny_test_pred_lr = lr.predict(X_test_scaled)\n#r2 Score\nscore = r2_score(y_test,y_test_pred_lr)\nprint(\"Score of Testing:\",100*score)\n#RMSE\nprint(\"RMSE : \" , np.sqrt(mean_squared_error(y_test,y_test_pred_lr)))\n#MAE\nprint(\"Mean Absolute Error\",mean_absolute_error(y_test,y_test_pred_lr))","ae674f87":"feature = [[332.5,142.5,0.0,228.0,0.0,932.0,594.0,270]]\nfeature = sc.fit_transform(feature)\npred = lr.predict(feature)\npred","e228b342":"from lightgbm import LGBMRegressor\nlgm = LGBMRegressor(n_estimators=500)\nlgm.fit(X_train,y_train)\n\n#Predicting the Test set results\ny_pred_lgm = lgm.predict(X_train)\nscore = r2_score(y_train,y_pred_lgm)\nprint(\"Score of Training:\",100*score)\nprint(\"RMSE :\" , np.sqrt(mean_squared_error(y_train,y_pred_lgm)))\ny_test_pred_lgm = lgm.predict(X_test)\n#r2 Score\nscore = r2_score(y_test,y_test_pred_lgm)\nprint(\"Score of Testing:\",100*score)\n#RMSE\nprint(\"RMSE : \" , np.sqrt(mean_squared_error(y_test,y_test_pred_lgm)))\n#MAE\nprint(\"Mean Absolute Error\",mean_absolute_error(y_test,y_test_pred_lgm))","b8eef39e":"feature = [[332.5,142.5,0.0,228.0,0.0,932.0,594.0,270]]\n# feature_scale = sc.fit_transform(feature)\npred = lgm.predict(feature)\npred","2103b27e":"### Split","e79a0de6":" - Name -- Data Type -- Measurement -- Description\n - Cement (component 1) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Blast Furnace Slag (component 2) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Fly Ash (component 3) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Water (component 4) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Superplasticizer (component 5) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Coarse Aggregate (component 6) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Fine Aggregate (component 7) -- quantitative -- kg in a m3 mixture -- Input Variable\n - Age -- quantitative -- Day (1~365) -- Input Variable\n - Concrete compressive strength -- quantitative -- MPa -- Output Variable","6feda5d9":"### LGBM","010f1e3e":"### Linear regrssion"}}