{"cell_type":{"e7132284":"code","fdef9fe8":"code","8156e194":"code","3a7a3ffe":"code","c9203776":"code","4e602d3d":"code","9241373c":"code","ec056426":"code","b4f3dfcd":"code","e05e42ea":"code","2d5c556b":"code","54bc14f8":"code","2d16cf09":"code","8c5a124a":"code","bcc39f8f":"code","3ef3e745":"code","18e12aa9":"code","37ca4464":"markdown","cac6e85b":"markdown","7ab3df87":"markdown","fa5e37da":"markdown","7451f492":"markdown","530a1e07":"markdown","e9dc112d":"markdown","052620ae":"markdown","d0294d1c":"markdown","dadf3723":"markdown","0834f893":"markdown","11de5273":"markdown","ddcc4d30":"markdown","51adab21":"markdown","1d6f45e9":"markdown","02ff31ff":"markdown","96fd2ded":"markdown","22cfefdf":"markdown"},"source":{"e7132284":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fdef9fe8":"train_df = pd.read_csv('\/kaggle\/input\/1056lab-covid19-hospital-stay-prediction\/train.csv', index_col=0)\ntrain_df","8156e194":"test_df = pd.read_csv('\/kaggle\/input\/1056lab-covid19-hospital-stay-prediction\/test.csv', index_col=0)\ntest_df","3a7a3ffe":"train_df = train_df.drop(['Department', 'Ward_Type', 'Ward_Facility', 'Type_of_Admission', 'Illness_Severity', 'Age'], axis=1)\ntrain_df","c9203776":"train_df = train_df.dropna(axis=0)\ntrain_df","4e602d3d":"X = train_df.drop(['Stay_Days'], axis=1).to_numpy()\nX","9241373c":"y = train_df['Stay_Days'].to_numpy()\ny","ec056426":"from sklearn.tree import DecisionTreeClassifier\n\nmodel = DecisionTreeClassifier()\nmodel.fit(X, y)","b4f3dfcd":"test_df = test_df.drop(['Department', 'Ward_Type', 'Ward_Facility', 'Type_of_Admission', 'Illness_Severity', 'Age'], axis=1)\ntest_df","e05e42ea":"for c in test_df.columns:\n    print(c, test_df[c].isna().sum())","2d5c556b":"mfv_bed_grade = train_df['Bed_Grade'].mode()[0]\ntest_df['Bed_Grade'] = test_df['Bed_Grade'].fillna(mfv_bed_grade)\ntest_df","54bc14f8":"mfv_city_code_patient = train_df['City_Code_Patient'].mode()[0]\ntest_df['City_Code_Patient'] = test_df['City_Code_Patient'].fillna(mfv_city_code_patient)\ntest_df","2d16cf09":"X_test = test_df.to_numpy()\nX_test","8c5a124a":"pred = model.predict(X_test)\npred","bcc39f8f":"submit_df = pd.read_csv('\/kaggle\/input\/1056lab-covid19-hospital-stay-prediction\/sample_submission.csv', index_col=0)\nsubmit_df","3ef3e745":"submit_df['Stay_Days'] = pred\nsubmit_df","18e12aa9":"submit_df.to_csv('submit.csv')","37ca4464":"# \u5b66\u7fd2","cac6e85b":"\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f","7ab3df87":"\u4e88\u6e2c\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\uff08\u6c7a\u5b9a\u6728\u3088\u308a\u3082\u7cbe\u5ea6\u304c\u9ad8\u3044\u65b9\u6cd5\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09","fa5e37da":"\u6700\u5f8c\u306b\u3001submit.csv\u3092\u63d0\u51fa\u3057\u3066\u5b8c\u4e86","7451f492":"\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306b\u4e88\u6e2c\u5024\u3092\u4ee3\u5165","530a1e07":"\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057","e9dc112d":"\u6587\u5b57\u5217\u306e\u5217\u3092\u524a\u9664\uff08\u524a\u9664\u3059\u308b\u3088\u308a\u3001\u6570\u5024\u5316\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff09","052620ae":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f","d0294d1c":"\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u524a\u9664\u3057\u305f\u3089\u5217\u3092\u524a\u9664","dadf3723":"City_Code_Patient\u306eNaN\u3092\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u6700\u983b\u5024\u3067\u88dc\u5b8c(\u5e73\u5747\u307e\u305f\u306f\u4e2d\u592e\u5024\u306e\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)","0834f893":"# \u4e88\u6e2c","11de5273":"Bed_Grade\u306e\u6b20\u640d\u3092\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u6700\u983b\u5024\u3067\u88dc\u5b8c(\u5e73\u5747\u307e\u305f\u306f\u4e2d\u592e\u5024\u306e\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)","ddcc4d30":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406","51adab21":"\u5217\u3054\u3068\u306bNaN\u306e\u6570\u3092\u8abf\u3079\u308b","1d6f45e9":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406","02ff31ff":"NaN\uff08\u7a7a\u6b04\u3001\u6b20\u640d\u5024\uff09\u3092\u542b\u3080\u884c\u3092\u524a\u9664\uff08\u524a\u9664\u3059\u308b\u3088\u308a\u5e73\u5747\u3084\u4e2d\u592e\u5024\u3092\u88dc\u5b8c\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff09","96fd2ded":"\u30c7\u30fc\u30bf\u306e\u6e96\u5099","22cfefdf":"\u30c7\u30fc\u30bf\u306e\u6e96\u5099"}}