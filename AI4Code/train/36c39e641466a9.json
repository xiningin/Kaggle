{"cell_type":{"a5e8404e":"code","3ac1bee7":"code","0205bf93":"code","97d47d3a":"code","9544ca19":"code","94a4fab7":"code","af894c87":"code","25273d21":"code","759d8fc2":"code","dfad23c2":"code","d6c9086e":"code","f2c73566":"code","a983ae2a":"code","c3dd8972":"code","9bc2b45a":"code","9977eb9c":"code","6e93284f":"code","7d779480":"code","b1835cb2":"code","9389f572":"code","5176cff3":"code","fcd398cf":"code","b00b374d":"code","a7c1eef8":"code","c84f5664":"code","bac47c6c":"code","85d640e1":"code","3fe991aa":"code","770bacd0":"code","a7a68b95":"code","f0520f2b":"code","11588c59":"code","6fa2c4eb":"code","60221ad2":"code","3b3d04e2":"code","08f33e53":"code","910a8cf2":"code","86735a45":"code","da499825":"code","4ddc479a":"code","8dd9d47c":"code","3d2d7c7f":"code","20cc2f39":"code","25ea4062":"code","c2f6f9d2":"code","17407d6c":"code","0f888e7c":"code","9c0a4f61":"code","c8029244":"code","132da0bd":"code","a6529650":"code","57dc9bec":"code","e958d8ed":"code","bcd29a01":"code","43e4499a":"code","692e3e83":"code","4b6bcbde":"code","e6a23332":"code","981537d0":"code","32580f2f":"code","f9aa1124":"code","ffb998b9":"code","ee5ae477":"code","d48a3e53":"code","db7424b6":"code","30b68b01":"code","ec65e18e":"code","3cba57b1":"code","85793164":"code","9b108f3b":"markdown","e9c4eb95":"markdown","c23680ba":"markdown","e01ca918":"markdown","700e73e5":"markdown","1a7adcfb":"markdown","5b1da238":"markdown","b4a0f8ef":"markdown","3ce3aa1f":"markdown","989b3a00":"markdown","4508d760":"markdown","f5cbcaab":"markdown","55a98172":"markdown","95880448":"markdown","5ca0ff4c":"markdown","99ed7d20":"markdown","35167685":"markdown","321cb3ef":"markdown","33a7b1b9":"markdown","0b80e35b":"markdown"},"source":{"a5e8404e":"import pandas as pd\nimport numpy as np\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# kaggle dataset \ud655\uc778","3ac1bee7":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\",)\nprint(train.shape)\ntrain.head()","0205bf93":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nprint(test.shape)\ntest.head()","97d47d3a":"train.describe()\n# \ubd84\uc11d\uc758 \ubaa9\uc801\uc740 Survived\ub97c \uc608\uce21\ud558\ub294 \uac83\uc774\uba70, \uc5ec\uae30\uc11c\ub294 \uc0b4\uc558\ub0d0 \uc8fd\uc5c8\ub0d0\uc5d0 \ub530\ub978 0,1\ub85c \ub098\ub268","9544ca19":"train.isnull().sum()","94a4fab7":"test.isnull().sum()","af894c87":"train['Age'].describe()","25273d21":"train['Age'] = train['Age'].fillna(train['Age'].mean())\n# Age Column\uc5d0\uc11c \ube48\uac12\uc744 \uadf8\ub0e5 \ud3c9\uade0\uac12\uc73c\ub85c \ub300\ucda9 \ucc44\uc6cc\uc8fc\uc790","759d8fc2":"test['Age'] = test['Age'].fillna(test['Age'].mean())\n# Test\ub3c4 \ub3d9\uc77c","dfad23c2":"train.isnull().sum()","d6c9086e":"round(train['Age'].mode(),0)","f2c73566":"test.isnull().sum()","a983ae2a":"train.isnull().sum() \n# Cabin Null\uc758 \ube44\uc911\uc774 \ub108\ubb34 \ub192\uc74c, \uc804\uccb4\uc758 77%\uc815\ub3c4\uc778\ub370... \uc774\uac74 \ubb58\ub85c \ucc44\uc6cc\ub3c4 \ubb38\uc81c\uac00 \ub420 \uac83 \uac19\uc74c","c3dd8972":"train['Cabin'].unique()\n# \uac8c\ub2e4\uac00 \uac12\ub4e4\uc774 \ubb54\uac00 Null \uac12\uc744 \ucc44\uc6b0\uae30 \ub9cc\ub9cc\uce58 \uc54a\uc544\ubcf4\uc784","9bc2b45a":"train = train.drop(['Cabin'],1)\n# \uc774\uac70\ub294 \uadf8\ub0e5 \uc9c0\uc6cc\ubc84\ub9ac\uc790... \ub3c4\uc800\ud788...","9977eb9c":"test = test.drop(['Cabin'],1)\n# train\ub3c4 \uc9c0\uc6e0\uc73c\ub2c8\uae4c test\ub3c4 \uac19\uc774 \uc9c0\uc6cc\uc918\uc57c \ud568 -> \uc548\uc9c0\uc6b0\uba74 \uac00\ub974\uccd0\uc8fc\uc9c0\ub3c4 \uc54a\uc558\ub294\ub370 \uc2dc\ud5d8\ubcf4\uac8c \ud558\ub294 \uaf34","6e93284f":"train.isnull().sum()\n# \uc798 \uc9c0\uc6cc\uc84c\ub098 \ud655\uc778","7d779480":"test.isnull().sum()\n# \ud14c\uc2a4\ud2b8\ub3c4 \ud655\uc778","b1835cb2":"train.groupby(['Embarked','Pclass'])['Fare'].median()","9389f572":"train.isnull().sum()","5176cff3":"test.isnull().sum()","fcd398cf":"train['Embarked'].value_counts()\n# \ub2e4\uc74c\uc740 Embarked\ub97c \ud574\ubcfc \uc608\uc815, \uc774\uac70\ub294 Train\uc5d0\uc11c 2\uac1c\ub9cc \ube44\uc5b4\uc788\uc73c\ub2c8 \uadf8\ub0e5 \uac00\uc7a5 \ub9ce\uc740 \uac12\uc73c\ub85c \ub123\uc73c\uba74 \ub420\ub4ef","b00b374d":"train['Embarked'] = train['Embarked'].fillna('S')\n# fillna -> NA\ub97c \ucc44\uc6cc\ub77c, 'S' \uac12\uc73c\ub85c","a7c1eef8":"train.isnull().sum()\n# \uc798 \ucc44\uc6cc\uc9c4 \uac78 \uc54c \uc218 \uc788\uc74c","c84f5664":"test.isnull().sum()\n# Test\ub294 \ubb50 \uc5c6\uc73c\ub2c8\uae4c Pass!","bac47c6c":"train.isnull().sum()","85d640e1":"test.isnull().sum()\n# Test\uc758 Fare\uc5d0 Null\uac12\uc774 1\uac1c\uac00 \uc788\uc74c.....","3fe991aa":"train['Fare'].describe()\n# Fare\ub294 \uc694\uae08\uc5d0 \ub300\ud55c \uac12\uc778\ub370, \uc774\uac83\ub3c4 \ud558\ub098\ub9cc \ube44\uc5b4\uc788\uc73c\ub2c8 \ub300\ucda9 \ud3c9\uade0\uc73c\ub85c \ub584\ub824\ub123\uc790","770bacd0":"test['Fare'] = test['Fare'].fillna(test['Fare'].mean())\ntest.isnull().sum() \n# \uc798 \ucc44\uc6cc\uc84c\ub098 \ud655\uc778\ud558\ub294 \uc2b5\uad00\uc744 \uac00\uc9c0\uc790","a7a68b95":"train['Sex']\n# Male, Female\ub85c \ub418\uc5b4\uc788\ub294\ub370 \uc774\uac74 \uae30\uacc4\ub294 \ubabb\uc77d\uc74c... \ubc14\uafd4\uc918\uc57c\ud568","f0520f2b":"train['Sex']=train['Sex'].replace(\"male\",0)\ntrain['Sex']=train['Sex'].replace(\"female\",1)\ntrain['Sex'].head()\n# \ub0a8\uc790\ub294 0 \uc5ec\uc790\ub294 1\ub85c \ubc14\uafd4\uc90c, \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778","11588c59":"test['Sex']=test['Sex'].replace(\"male\",0)\ntest['Sex']=test['Sex'].replace(\"female\",1)\ntest['Sex'].head()\n# Test\ub3c4 \ub3d9\uc77c\ud558\uac8c","6fa2c4eb":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","60221ad2":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","3b3d04e2":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","08f33e53":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","910a8cf2":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","86735a45":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","da499825":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","4ddc479a":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","8dd9d47c":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","3d2d7c7f":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","20cc2f39":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","25ea4062":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","c2f6f9d2":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\n","17407d6c":"train = train.drop(['Name', 'Ticket', 'Embarked'],1)","0f888e7c":"test = test.drop(['Name', 'Ticket', 'Embarked'],1)","9c0a4f61":"test.head()","c8029244":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\nX = train.drop(['Survived'],1)","132da0bd":"y = train['Survived']","a6529650":"y","57dc9bec":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X,y,random_state=0, test_size=0.3)","e958d8ed":"X_train.shape, X_valid.shape, y_train.shape, y_valid.shape","bcd29a01":"X_train","43e4499a":"# from sklearn.tree import DecisionTreeClassifier\n# model = DecisionTreeClassifier()\n\n# from sklearn.linear_model import LogisticRegression\n# model = LogisticRegression()\n\nfrom lightgbm import LGBMClassifier\nmodel = LGBMClassifier()","692e3e83":"model.fit(X_train, y_train)","4b6bcbde":"pred_train = model.predict(X_train)\npred_train","e6a23332":"y_train\n","981537d0":"(pred_train == y_train).mean()","32580f2f":"pred_valid = model.predict(X_valid)","f9aa1124":"(pred_valid == y_valid).mean()","ffb998b9":"test","ee5ae477":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\npred_test = model.predict(test)","d48a3e53":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\npred_test","db7424b6":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\nsubmission = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\nsubmission","30b68b01":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\nsubmission['Survived'] = pred_test","ec65e18e":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\nsubmission","3cba57b1":"# \uc9c1\uc811 \uc785\ub825\ud574\ubcf4\uc138\uc694!\nsubmission.to_csv('submission_final.csv', index=False)","85793164":"!pip install pydotplus\nfrom sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nfrom sklearn.tree import export_graphviz\nimport pydotplus\ndot_data = StringIO()\nexport_graphviz(model, out_file=dot_data,  \n                filled=True, rounded=True,\n                special_characters=True)\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \nImage(graph.create_png())","9b108f3b":"# 7. Predict","e9c4eb95":"## 1-1. Fill NA : AGE","c23680ba":"## 2-3. Convert String --> Integer data : Ticket","e01ca918":"# 1. Data Preprocessing\n1. \ube48\uac12(Null) \ucc44\uc6b0\uae30\/\uc9c0\uc6b0\uae30\n2. \uc774\uc0c1\uce58 \uc81c\uac70\n3. \uce58\uc6b0\uce68(Skew) \ubcf4\uc815(Normalization)","700e73e5":"# 8. Submission","1a7adcfb":"## 1-3. Fill NA : Embarked","5b1da238":"# 3. Data Splitting\n1. Train --> X, y \ub85c \ubc14\uafd4\uc900\ub2e4.\n1. X, y --> X_train, y_train, X_valid, y_valid\ub85c \ubc14\uafd4\uc900\ub2e4","b4a0f8ef":"# 6. Evaluation (Cost Function)\n","3ce3aa1f":"## 2-5. Convert String --> Integer data : \ud655\uc778\uc791\uc5c5","989b3a00":"# 4. Modeling\n1. Modeling\uc744 \uc704\ud574\uc11c\ub294 \ud574\ub2f9 \uacfc\uc81c\uc758 \ubaa9\uc801\uc744 \uc815\ud655\ud788 \uc54c\uc544\uc57c \ud568\n2. \ubcf4\ud1b5 Regression(\ucf54\ud305 \ub450\uaed8)\uacfc Classification(\ud488\uc9c8 \ud569\ubd80\ud310\uc815) \uc608\uce21 \ubb38\uc81c\uac00 \uc788\ub294\ub370, \uc5ec\uae30\uc11c\ub294???\n3. Classification\uc744 \uc0ac\uc6a9\ud560 \uc608\uc815\uc774\uba70, \ub300\ud45c\uc801\uc778 RandomForest\ub97c \uc0ac\uc6a9\ud560 \uc608\uc815 \uc774\uac8c \ubb54\uc9c0\ub294 \ub2e4\uc74c\uc2dc\uac04\uc5d0...","4508d760":"# [Appendix] Decision Tree Visualization","f5cbcaab":"# 5. Model Training","55a98172":"# 2. Feature Engineering\n1. Convert String --> Integer data\n  - Categorical variance\ub97c Machine\uc774 \ubd84\uc11d\ud560 \uc218 \uc788\ub3c4\ub85d \ubcc0\ud615\ud574 \uc90c\n2. Feature\ub4e4\uc744 \uc870\ud569\ud574\uc11c \uc0c8\ub85c\uc6b4 Feature\ub97c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc74c\n","95880448":"# 0. EDA (Exploratory Data Analysis) \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d","5ca0ff4c":"## 2-1. Convert String --> Integer data : Sex","99ed7d20":"## 2-2. Convert String --> Integer data : Name","35167685":"## 1-4. Fill NA : Fare","321cb3ef":"## 2-4. Convert String --> Integer data : Embarked","33a7b1b9":"1. Train --> X, y \ub85c \ubc14\uafd4\uc900\ub2e4.","0b80e35b":"## 1-2. Fill NA : Cabin"}}