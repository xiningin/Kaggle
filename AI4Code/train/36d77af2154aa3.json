{"cell_type":{"6f6acc33":"code","3e65e964":"code","0bc66117":"code","0f56b71a":"code","907fc77a":"code","d4a63926":"code","de71ac8e":"code","f91986ef":"code","4527a74d":"code","94f27e2f":"code","c311c7df":"code","f72e0118":"code","5b0ac72a":"code","50ded392":"code","ab5c419a":"code","8487d607":"code","42fd0dd4":"code","689cf0e1":"code","5febfd83":"code","4062a6f1":"code","8c365a34":"code","f5e242e2":"code","a7236a36":"code","770a7a60":"code","33beb5f2":"code","563d0ae6":"markdown","1bf2bb7c":"markdown","3e988f90":"markdown","c3e82f5c":"markdown","d51a5e31":"markdown","953b27f5":"markdown","89d79633":"markdown","93efeaf6":"markdown","366f1684":"markdown","646461ce":"markdown","debf2b3e":"markdown","1a57e2ab":"markdown","46aa6a9c":"markdown","3f8c471f":"markdown","b401dd53":"markdown","20c0d3d4":"markdown","b88b7d70":"markdown","fa3b4085":"markdown","4c4a8c60":"markdown","f2a8b569":"markdown","05ed03a2":"markdown","69bcb64d":"markdown","b54ee2e9":"markdown","4f844397":"markdown","fc7eeb9c":"markdown","7d3db704":"markdown","fe344631":"markdown","88ba946a":"markdown","b8ab3b92":"markdown","eccd3c4d":"markdown"},"source":{"6f6acc33":"!wget --no-verbose http:\/\/homes.soic.indiana.edu\/gasser\/L3\/ParaMorfo-1.1.tar.gz","3e65e964":"!file \/kaggle\/working\/ParaMorfo-1.1.tar.gz","0bc66117":"!tar xzf  \/kaggle\/working\/ParaMorfo-1.1.tar.gz  -C .  ","0f56b71a":"!cat          ParaMorfo-1.1\/README.txt      ","907fc77a":"!sed -i 's\/for pos in range(1, len(word))\/for pos in range(1, len(word)):\/g' \/kaggle\/working\/ParaMorfo-1.1\/l3\/morpho\/strip.py","d4a63926":"ls -ltr \/kaggle\/working\/ParaMorfo-1.1","de71ac8e":"import os\nos.chdir('\/kaggle\/working\/ParaMorfo-1.1')\n!python setup.py install","f91986ef":"import l3 # ParaMorfo","4527a74d":"l3.anal('gn', \"nanemandu'\u00e1ipa\")","94f27e2f":"analysis = l3.anal('gn', \"nanemandu'\u00e1ipa\", raw=True)\nprint(analysis)","c311c7df":"stem = analysis[0][0]\nprint(stem)\nfeatures = analysis[0][1]\nfor k,v in features.items():\n    print(k,v)","f72e0118":"l3.gen('gn', 'guata')","5b0ac72a":"l3.gen('gn', 'mba\\'apo', '[sj=[+1,+p],+pos]')","50ded392":"l3.anal('gn', \"romba'apo\")","ab5c419a":"text = l3.gen('gn', 'mba\\'apo', '[sj=[+1,+p],+neg]')","8487d607":"l3.anal('gn', \"noromba'ap\u00f3i\")","42fd0dd4":"import spacy\n!python -m spacy download es_core_news_md\n!python -m spacy link es_core_news_md es_md\nnlp = spacy.load('es_md', disable=['ner', 'parser']) # disabling Named Entity Recognition for speed","689cf0e1":"def get_stem(text,  mixed=False):\n    stem = []\n    doc = nlp(text)\n    for token in doc:\n        if len(l3.anal('gn', token.text, raw=True)) > 0:\n            try:\n                token_ = l3.anal('gn', token.text, raw=True)[0][0] # use paramorfo word root\n            except:\n                token_ = token.text\n        elif mixed:\n            token_ = token.lemma_ # use spacy lemmatizer\n        token = token_ if token.is_punct else \" \"+token_ # for delete extra space: punctuaction\n        stem.append(token)\n    return \"\".join(stem).replace(\"<\",\"\").strip()","5febfd83":"# This is a sample\nsentence = \"K\u00f3va ha'e pete\u0129 techaukahar\u00e3\" # -> https:\/\/gn.wikipedia.org\/wiki\/Ape\nprint(get_stem(sentence))","4062a6f1":"# This is a sample, mixing languages\nsentence = \"K\u00f3va ha'e pete\u0129 techaukahar\u00e3, mezclando idiomas\" # -> https:\/\/gn.wikipedia.org\/wiki\/Ape\nprint(get_stem(sentence, True))","8c365a34":"def get_tag(word):\n    tag = 'u'\n    if len(l3.anal('gn', word, raw=True)) > 0:\n        try:\n            tag = l3.anal('gn', word, raw=True)[0][1]['pos'] # use paramorfo for pos \n        except:\n            tag = 'x' # undefined or missing \n    return tag","f5e242e2":"# This is a sample, although bad\nsentence = \"K\u00f3va ha'e pete\u0129 techaukahar\u00e3, vai jepe\" # -> https:\/\/gn.wikipedia.org\/wiki\/Ape\ndoc = nlp(sentence)\nfor token in doc:\n    print(token,get_tag(token.text))   ","a7236a36":"for token in doc:\n    if get_tag(token.text).lower() in ['n','noun','v','verb','adj','adv','propn']:\n        print(token)","770a7a60":"sentence = \"K\u00f3va ha'e pete\u0129 techaukahar\u00e3, vai jepe\"\nprint(sentence)\ndoc = nlp(sentence)\nfor token in doc:\n    if get_tag(token.text).lower() in ['n','noun','v','verb','adj','adv','propn']:\n        print(get_stem(token.text))","33beb5f2":"# This is a sample, even if it's bad and not the best.\nsentence = \"K\u00f3va ha'e pete\u0129 techaukahar\u00e3, aunque est\u00e9 feo y no sea el mejor.\"\ncontent_tags_es = ['adj','adv','noun','verb','propn']\ncontent_tags_gn = ['n','v','adj','adv'] # n: noun, v: verb\nexclude = ['conj'] # put here tags of words such: y, meaning: gn=water, es=conjunction\nprint(sentence)\ndoc = nlp(sentence)\nfor token in doc:\n    tag_gn = get_tag(token.text)\n    tag_es = token.pos_.lower()\n    if ((tag_gn in content_tags_gn) or (tag_es in content_tags_es)): #and (tag_gn not in exclude and tag_es not in exclude): #uncomment this if you need hidden some conflicts such \"y\" \n        print(\"---\",tag_gn,tag_es,get_stem(token.text, True))","563d0ae6":"### Part-of-Speech tagging function in sentence ...","1bf2bb7c":"### Stemming (root) function in sentence ...","3e988f90":"## Morphological analysis and generation","c3e82f5c":"More about ParaMorfo...","d51a5e31":"Try jopar\u00e1...","953b27f5":"And in a negative way?","89d79633":"Get word root and features","93efeaf6":"## The real life ...","366f1684":"Before install, correct and issue on the installation stage...","646461ce":"## Download ParaMorfo...\n\n**ParaMorfo**: morphological analysis and generation of Spanish (*not tested*) and Guarani verbs, nouns, and adjectives.","debf2b3e":"Untar file...","1a57e2ab":"English: \"walks\"","46aa6a9c":"Analize the verb *mandu'a* (remember) ","3f8c471f":"Guarani...","b401dd53":"Now with lemma...","20c0d3d4":"This is not perfect, but useful for a first approach...\n\nI hope that helps!","b88b7d70":"Now print *content words*","fa3b4085":"## Load libraries ","4c4a8c60":"Conjugate the verb *guata* (walk) in third person","f2a8b569":"Now we can install ParaMorfo!","05ed03a2":"## References:\n1. https:\/\/en.wikipedia.org\/wiki\/Guarani_language\n1. https:\/\/en.wikipedia.org\/wiki\/Jopara_language\n1. http:\/\/homes.sice.indiana.edu\/gasser\/Research\/software.html\n1. http:\/\/homes.sice.indiana.edu\/gasser\/plogs.html","69bcb64d":"Check file...","b54ee2e9":"# NLP with Paraguayan-Guarani?\n\n...even a custom lemmatizer...","4f844397":"Try it with tweets!\n\nComming soon...","fc7eeb9c":"Now, analize the word *romba'apo* (work)","7d3db704":"Guarani...","fe344631":"Jopar\u00e1 (Guarani-Spanish code-mixed)...","88ba946a":"## Guarani\n\n> Guarani, is a South American \ud83c\udf0e language that belongs to the Tupi\u2013Guarani family of the Tupian languages. It is one of the official languages of Paraguay \ud83c\uddf5\ud83c\uddfe (along with Spanish \ud83c\uddea\ud83c\uddf8), where it is spoken by the majority of the population (about 8M), also it is spoken by communities in neighboring countries, including parts of northeastern Argentina \ud83c\udde6\ud83c\uddf7, southeastern Bolivia \ud83c\udde7\ud83c\uddf4 and southwestern Brazil \ud83c\udde7\ud83c\uddf7, and is a second official language of the Argentine \ud83c\udde6\ud83c\uddf7 province of Corrientes since 2004; it is also an official language of Mercosur. Their dialects are Jopar\u00e1 and Guaran\u00ed-Correntino.\n\n### Jopara\n\n> Jopara, Jopar\u00e1 or Yopar\u00e1 (from the Guarani word \"mixture\") is a colloquial form of Guarani spoken in Paraguay \ud83c\uddf5\ud83c\uddfe which uses a number of Spanish loan words (code-switching). ","b8ab3b92":"View in a python way (in raw format)","eccd3c4d":"Conjugate the verb *mba'apo* (work)"}}