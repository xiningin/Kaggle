{"cell_type":{"9896c294":"code","eefab807":"code","4d1f4b10":"code","be078872":"code","3f2ebad5":"code","717110a7":"code","eb1b0e8a":"code","00f31c34":"code","fc0308b0":"code","bd854d47":"code","3e5fa823":"code","27993b26":"code","53d295ea":"code","ffaf9991":"code","a8e4eb1c":"code","34569f51":"code","19ff2c93":"code","94b99f0f":"code","cd8b71bf":"code","59d00e3c":"code","6e1192dc":"code","fa76d424":"code","aaef4403":"code","1dede221":"code","336fb72b":"code","478d70b2":"code","bc74378a":"code","16c22f40":"code","4da865b1":"code","45ddd9ba":"code","a55141bc":"code","b4bf2ea4":"code","4a0d110e":"code","aedf7fdf":"code","467b952d":"code","7fac86b3":"code","aea78558":"code","291edbe3":"code","195e143c":"code","2eb58726":"code","ce10cbb3":"code","f8caf865":"code","82ab8f58":"code","da307714":"code","79c0d864":"code","c0a2b6d7":"code","506f0752":"code","727627db":"code","bb4b1999":"code","6e67e61f":"code","b6543d93":"markdown"},"source":{"9896c294":"!pip install mord==0.6","eefab807":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d1f4b10":"!wc -l \/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_review.json","be078872":"!wc -l \/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_user.json","3f2ebad5":"!wc -l \/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_business.json","717110a7":"import json\nfrom collections import defaultdict\n\nfrom tqdm import tqdm","eb1b0e8a":"filename = '\/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_review.json'\ntarget_user_ids = dict()\ntarget_item_ids = dict()\nreviews = []\nwith open(filename, 'rt') as f:\n    with tqdm(total=8021122) as pbar:\n        for line in f:\n            data = json.loads(line)\n\n            if not 'date' in data:\n                continue\n\n            dt = data.get('date').split()[0] # get '2019-01-01'\n\n            # 2019\u5e74\u306e\u307f\u306b\u7d5e\u308b\u3002\n            if dt.startswith('2019-12'):\n                reviews.append({\n                    key: data[key]\n                    for key in ['review_id', 'user_id', 'business_id', 'stars']\n                })\n                target_user_ids[data['user_id']] = True\n                target_item_ids[data['business_id']] = True\n            pbar.update(1)\nprint(len(reviews))\nprint(json.dumps(reviews[0], indent=4))","00f31c34":"filename = '\/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_business.json'\nitems = list()\nwith open(filename, 'rt') as f:\n    with tqdm(total=209393) as pbar:\n        for line in f:\n            data = json.loads(line)\n            if data['business_id'] in target_item_ids:\n                items.append(data)\n            pbar.update(1)\nprint(len(items))","fc0308b0":"filename = '\/kaggle\/input\/yelp-dataset\/yelp_academic_dataset_user.json'\nusers = list()\nwith open(filename, 'rt') as f:\n    with tqdm(total=1968703) as pbar:\n        for line in f:\n            data = json.loads(line)\n            if data['user_id'] in target_user_ids:\n                users.append(data)\n            pbar.update(1)\nprint(len(users))","bd854d47":"import gc\n\ndel target_user_ids\ndel target_item_ids\ngc.collect()","3e5fa823":"items[0]","27993b26":"users[1]","53d295ea":"reviews[0]","ffaf9991":"user_df = pd.DataFrame(users)\nitem_df = pd.DataFrame(items)\nreview_df = pd.DataFrame(reviews)","a8e4eb1c":"user_df","34569f51":"item_df[item_df.business_id == 'MjGvGVvYV5WBVU2eGF1F7A']","19ff2c93":"recommend_target_df = item_df[\n    (item_df.city=='Phoenix')&\n    (item_df.state=='AZ')&\n    (item_df.categories.str.contains('Shopping'))\n]","94b99f0f":"recommend_target_df","cd8b71bf":"review_df.user_id.value_counts()","59d00e3c":"target_review_df = review_df[review_df.user_id=='FhSDVbwA_94W3lkxZz86Ww']\ntarget_review_df","6e1192dc":"review_df['y'] = review_df.stars.apply(lambda star: 1 if star >= 4 else 0)","fa76d424":"review_df","aaef4403":"user_df.columns","1dede221":"f_user_df = user_df.drop(['name', 'yelping_since', 'elite', 'friends'], axis=1)\nf_user_df.shape","336fb72b":"f_target_user_df = f_user_df[f_user_df.user_id == 'FhSDVbwA_94W3lkxZz86Ww']\nf_target_user_df.shape","478d70b2":"f_item_df = item_df.drop(['name', 'address', 'city', 'state', 'postal_code', 'attributes', 'categories', 'hours'], axis=1)\nf_item_df.shape","bc74378a":"f_review_df = review_df.drop(['stars'], axis=1)\nf_review_df.shape","16c22f40":"merge_df = pd.merge(f_review_df, f_user_df, on='user_id')\nmerge_df = pd.merge(merge_df, f_item_df, on='business_id')\nuser_ids = merge_df.user_id\nmerge_df = merge_df.drop(['review_id', 'user_id', 'business_id'], axis=1)\n# merge_df = merge_df.drop(['review_id', 'business_id'], axis=1)\nmerge_df","4da865b1":"target_X_df = pd.concat([\n    pd.concat([f_target_user_df]*recommend_target_df.shape[0]).reset_index(drop=True),\n    recommend_target_df.drop(['name', 'address', 'city', 'state', 'postal_code', 'attributes', 'categories', 'hours'], axis=1).reset_index(drop=True)\n], axis=1)","45ddd9ba":"X_target = target_X_df.drop(['user_id', 'business_id'], axis=1).values\nX_target","a55141bc":"X = merge_df.drop(['y'], axis=1).values\ny = merge_df.y.values.astype(np.int64)","b4bf2ea4":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom mord import LogisticAT","4a0d110e":"X_train, X_test, y_train, y_test, user_train, user_test = train_test_split(X, y, user_ids)\nprint(X_train.shape)\nprint(X_test.shape)","aedf7fdf":"user_test.head(3)","467b952d":"test_indices = pd.merge(\n    pd.DataFrame(pd.concat([user_test, user_train]).drop_duplicates(keep=False)),\n    user_test.reset_index(),\n    on='user_id'\n)['index'].tolist()","7fac86b3":"X_unique_test = X[test_indices]\ny_unique_test = y[test_indices]","aea78558":"model = LogisticRegression(max_iter=1000, verbose=1, n_jobs=-1)\n# at_model = LogisticAT()","291edbe3":"model.fit(X_train, y_train)\n# at_model.fit(X_train, y_train)","195e143c":"from sklearn.metrics import accuracy_score, precision_score","2eb58726":"precision_score(y_test, model.predict(X_test))","ce10cbb3":"precision_score(y_unique_test, model.predict(X_unique_test))","f8caf865":"# accuracy_score(y_test, at_model.predict(X_test))","82ab8f58":"cnt = 0\nfor ac, pr, at_pr in zip(y_test, model.predict(X_test), at_model.predict(X_test)):\n    print(f'(actual, predict, predictAt)=({ac}, {pr}, {at_pr})')\n    if cnt == 20:\n        break\n    cnt+=1","da307714":"pd.Series(y_train).value_counts().sort_index(ascending=False)","79c0d864":"pd.Series(model.predict(X_test)).value_counts().sort_index(ascending=False)","c0a2b6d7":"# at_model.predict_proba(X_test)","506f0752":"model.predict_proba(X_test)","727627db":"X_test","bb4b1999":"pair_df = target_X_df[['user_id', 'business_id']]\npair_df['score'] = model.predict_proba(X_target)[:, 1]\npair_df.sort_values(by='score', ascending=False)","6e67e61f":"pd.merge(\n    pair_df.sort_values(by='score', ascending=False),\n    target_review_df.drop('review_id', axis=1),\n    on=['user_id', 'business_id'],\n    how='left'\n).dropna()","b6543d93":"https:\/\/www.kaggle.com\/yelp-dataset\/yelp-dataset"}}