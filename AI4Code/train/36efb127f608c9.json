{"cell_type":{"8d6bce2e":"code","f2f2061d":"code","d319c9ac":"code","98378e48":"code","1a347c93":"code","6fec8799":"code","b2eee19e":"code","bbc6bf51":"code","33e7fb81":"code","16000905":"code","c20045d0":"code","3d9c8e01":"code","2c24eb3d":"code","8a58ff6c":"code","22e54fc4":"code","5f4df875":"code","255d2de8":"markdown","a6eac358":"markdown","f63ef3c9":"markdown","f05dc432":"markdown"},"source":{"8d6bce2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2f2061d":"#imporing libraries for analysing purpose\nimport pandas as pd\nimport numpy as np\n\n#importing for visualization\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","d319c9ac":"#reading the data using pandas\ndf= pd.read_csv(\"..\/input\/goodreadsbooks\/books.csv\",error_bad_lines=False)","98378e48":"#viewing the sample of data to understand\ndf.head(2)","1a347c93":"#chaning the index of data\ndf.set_index('title',inplace = True)","6fec8799":"#to know the number of rows and column\ndf.shape","b2eee19e":"#checking the missing values\ndf.isnull().sum()","bbc6bf51":"#quick summary of the dataset\ndf.describe(include='all')","33e7fb81":"#lets get types of attributes\ndf.dtypes","16000905":"#let's change all column labels into string type\ndf.columns = list(map(str, df.columns))\n\n# let's check the column labels types now\nall(isinstance(column, str) for column in df.columns)\n","c20045d0":"#arrange the data using text_reviews_count\ndf.sort_values(['text_reviews_count'],ascending =False, axis =0, inplace= True)\n#assigning \"text_reviews_count\" in a new variable for easy visualizing\ndf_top10 = df['text_reviews_count'].head(10)\n","3d9c8e01":"#visualize the highest text_reviews_count\ndf_top10.plot.barh(figsize=(10,6),color='steelblue',alpha= 1.0)\n\nplt.xlabel('Text reviews count')\nplt.ylabel('Title of book')\nplt.title('Books with highest text reviews',fontsize= 16,alpha = 1.0)","2c24eb3d":"#check the unique Languages\ndf['language_code'].unique()","8a58ff6c":"#visualize the language frequency\nplt.figure(figsize = (7,5))\nsns.countplot(y='language_code',data= df,palette='Blues_d',alpha=0.3)","22e54fc4":"#column name has a empty space so let us remove it\ndf.rename(columns={'  num_pages':'num_pages'},inplace=True)","5f4df875":"#visualize the relationship between rating and # of pages\nsns.relplot(x='average_rating',y='num_pages',data=df)","255d2de8":"Before going, Please share your thoughts about notebook in comments and **Upvote** (it motivates me a lot) ","a6eac358":"I'm working on it stay tuned.","f63ef3c9":"More than 80% of the books in the data set is in English language.","f05dc432":"### Conclusion\n\nThe book **\"Twilight\"** has a highest text reviews"}}