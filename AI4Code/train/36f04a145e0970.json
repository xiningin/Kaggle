{"cell_type":{"79f5d2b7":"code","b34c1de1":"code","20424bfc":"code","1051318b":"code","53b91872":"code","c7d35049":"code","131fef43":"code","84040eb6":"code","5852c786":"code","d9aa6541":"code","e2e1da95":"code","64772bb3":"code","40230374":"code","2aeb0a44":"code","1d166cf8":"code","a84574e5":"markdown","83eafa0b":"markdown","cee79a50":"markdown","f8a9264d":"markdown"},"source":{"79f5d2b7":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_theme(style=\"darkgrid\")","b34c1de1":"student = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\nstudent.head()","20424bfc":"student.info()","1051318b":"student.isnull().sum()","53b91872":"# Numerical features\nnum_cols = student.select_dtypes(['int64','float']).columns.tolist()\nprint('Numerical features include: \\n',num_cols)","c7d35049":"# Categorical features\ncat_cols = student.select_dtypes('object').columns.tolist()\nprint('Categorical features include: \\n',cat_cols)","131fef43":"# unique values within categorized features\nprint('Details of categorical features:')\nfor i, feature in enumerate(cat_cols):\n    unique_val = student[feature].unique().tolist()\n    print(i,'.', feature, \": \", \"\\n\", unique_val, '\\n')","84040eb6":"sns.pairplot(data=student)\nplt.suptitle('Pairplot for numerical features', \n                     x=0.3, y=1.1,\n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')\nplt.figtext(s='* Linear correlation between performance in different subjects',\n                    x=0.1, y=1.03,\n                    fontfamily='serif', fontsize=16, color='#173b56', alpha=0.8)\n\nplt.show()","5852c786":"sns.heatmap(student.corr(), cmap='Blues', linewidth=0.5, annot=True)\n\nplt.suptitle('Correlation matrix for numerical features', \n                     x=0.5, y=1.1, \n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')\nplt.text(s='''\n                       * Student who performs better at one subject, generally perfroms \n                         better at other subjects \n                       * Especially if student performs better at writing, they are also \n                         more likely to perform better at reading. \n                         There is 95% correlation for this relationship\n                    ''',\n                    x=4, y=2.5,\n                    fontfamily='serif', fontsize=14, color='#173b56', alpha=0.8, linespacing=1.8)\n\nplt.show()","d9aa6541":"# Calculate average scores\nstudent ['avg score'] = (student['math score'] + student['reading score'] + student['writing score'])\/3","e2e1da95":"fig = plt.figure(constrained_layout=True, figsize=(15,6))\ngs = fig.add_gridspec(2, 3)\n\n# Setting axes\nax1 = fig.add_subplot(gs[0,0])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\nax4 = fig.add_subplot(gs[1,2])\nax5 = fig.add_subplot(gs[0,1:])\n\n# KDE plots\nsns.kdeplot(x='avg score', data=student, hue='gender', ax=ax1, fill=True, palette=['#db7093','#46549d'], alpha=0.3)\nsns.kdeplot(x='math score', data=student, hue='gender', ax=ax2, fill=True, palette=['#db7093','#46549d'], alpha=0.3)\nsns.kdeplot(x='reading score', data=student, hue='gender', ax=ax3, fill=True, palette=['#db7093','#46549d'], alpha=0.3)\nsns.kdeplot(x='writing score', data=student, hue='gender', ax=ax4, fill=True, palette=['#db7093','#46549d'], alpha=0.3)\n\nax5.set_facecolor('white')\nax5.set_xticks([])\nax5.set_yticks([])\n    \nfig.suptitle('Score distribution for different subjects and gender', \n                     x=0.29, y=1.05, \n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')    \n\nax5.text(x=-0.15, y= 0.15, \n                 fontfamily='serif', fontsize=16, color='#173b56', alpha=0.8, linespacing=1.8,\n                s='''\n                     * Male students tend to perform better at math than female students\n                     * However, female students perform better at reading and writing \n                        than male students       \n                     * Overall, female students perform better on average \n                 ''')\n\nplt.show()","64772bb3":"fig, axs = plt.subplots(1,2, figsize=(15,6), sharey=True)\n\npar_ed = pd.crosstab(index=student['parental level of education'], values = student['avg score'], columns=student['gender'],aggfunc='mean', margins=True, margins_name='average')\npar_ed = par_ed.loc[['high school', 'some high school', 'some college', \"associate's degree\", \"bachelor's degree\",\"master's degree\" ]]\nsns.heatmap(par_ed, cmap='Blues', annot=True, linewidth=0.5, ax=axs[0])\n\npar_lunch = pd.crosstab(index=student['parental level of education'], values = student['avg score'], columns=student['lunch'],aggfunc='mean', margins=True, margins_name='average')\npar_lunch = par_lunch.loc[['high school', 'some high school', 'some college', \"associate's degree\", \"bachelor's degree\",\"master's degree\" ]]\nsns.heatmap(par_lunch, cmap='Blues', annot=True, linewidth=0.5, ax=axs[1], cbar_kws={'label': 'Average score'})\n\naxs[0].tick_params(labelsize=12, labelcolor='#173b56')\naxs[1].tick_params(labelsize=12, labelcolor='#173b56')\n\naxs[0].set_ylabel( \"Parental level of education\", size =14, color='#173b56', fontfamily='serif', weight='bold')\naxs[0].set_xlabel( \"Gender\", size =14, color='#173b56', fontfamily='serif', labelpad=8, weight='bold')\naxs[1].set_ylabel(\"\")\naxs[1].set_xlabel( \"Type of lunch\", size =14, color='#173b56', fontfamily='serif', labelpad=8, weight='semibold')\n\nplt.suptitle('Relationship between parental level of education | gender | lunch vs. score', \n                     x=0.38, y=1.2,\n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')\n\nplt.figtext(x=-0.08, y=0.9,\n                  fontfamily='serif', fontsize=16, color='#173b56', alpha=0.8, linespacing=1.5,\n                  s='''\n                  * Parental level of education plays an important role in children's academic performance\n                  * Student's score increase as parental level of education increases\n                  * Students have received standard lunch also perform better compare to students who have free\/reduced lunch\n                  ''')\n\naxs[0].text(s='                                                                 ', \n                    x=-1.15, y=5.2,\n                    bbox=dict(boxstyle=\"larrow, pad=1\", fc=\"#173b56\", ec=\"b\", lw=1, alpha=0.3), \n                    rotation=90, alpha=0.5)\naxs[0].text(s='Increasing', \n                    x=-1.4, y=3.8, \n                    rotation=90, size=14, fontfamily='serif', weight='semibold' )\n\nfig.tight_layout()\nplt.show()","40230374":"race = student.groupby('race\/ethnicity')['race\/ethnicity'].count()","2aeb0a44":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt, ax = plt.subplots(1,2, figsize=(15,5))\nrace.sort_values().plot(kind='barh', ax=ax[0])\ny = race.sort_values().values\nfor h, v in enumerate(y):\n    ax[0].text(v , h-0.05 , v,  fontweight='bold',  color='b')\nrace.sort_values().plot.pie(autopct='%1.1f%%', startangle = 90, cmap='Blues_r', ax=ax[1])   \n\nax[0].set_xlabel('Number of students')\nplt.suptitle('Group C is the largest ethnic group, accounting for 32% of the sample', \n                     x=0.38, y=1, \n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')\n\nplt.show()","1d166cf8":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nfig = plt.figure(figsize=(10,6))\nsns.boxplot(y='avg score', data=student, x='race\/ethnicity', order=['group A', 'group B','group C','group D', 'group E'], palette='Blues_r')\n\nplt.title('How different ethnic groups perform', \n                     x=0.35, y=1.1, \n                     fontfamily='serif', fontsize=20, color='#173b56', fontweight='bold')\n\nplt.text(s='''\n                       * Group E perfoms better than other groups on overage,\n                         while Group A is the worst performing group\n                       * However, there is little gap for top performing students\n                         in different groups\n                       * Student who got the least marks is in Group C\n                    ''',\n                    x=4, y=50,\n                    fontfamily='serif', fontsize=14, color='#173b56', alpha=0.8, linespacing=1.8)\n\nplt.show()\n","a84574e5":"#### This is my first Kaggle notebook. The aim of this exercise is to practice visualization techniques using matplotlib and seaborn","83eafa0b":"# Exploratory Data Analysis","cee79a50":"# Checking data","f8a9264d":"# Loading libraries and data"}}