{"cell_type":{"f95c1a44":"code","9f0e303f":"code","b1be162e":"code","e2fb3108":"code","efa68f4c":"code","7741959d":"code","ecc57497":"code","05768253":"code","6f5b7012":"code","7e4f43f1":"code","f31a1f7e":"code","498ed42a":"code","69978b79":"code","b787d59f":"code","8a957093":"code","4f8ff0dc":"markdown","060e8f4c":"markdown","11829aa4":"markdown","d80ee92c":"markdown","6c696458":"markdown","50a37f50":"markdown","170014ea":"markdown"},"source":{"f95c1a44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f0e303f":"import warnings\nwarnings.filterwarnings('ignore')","b1be162e":"data = pd.read_csv('..\/input\/iris\/Iris.csv', index_col='Id')","e2fb3108":"data.head()","efa68f4c":"import matplotlib.pyplot as plt\nimport seaborn as sns\n","7741959d":"sns.pairplot(data)","ecc57497":"corr = data.corr() \n\ncm = sns.light_palette(\"green\", as_cmap=True)\ncm = sns.diverging_palette(220, 20, sep=20, as_cmap=True) \ncorr.style.background_gradient(cmap=cm).set_precision(2)","05768253":"sns.heatmap(data.corr(), annot=True)","6f5b7012":"data","7e4f43f1":"data.isna().sum()","f31a1f7e":"!pip install pycaret","498ed42a":"from pycaret.classification import *","69978b79":"s = setup(data, target='Species')    ","b787d59f":"best = compare_models()","8a957093":"best","4f8ff0dc":"**Petal Length, Width and Sepal Length are the only ones that look somewhat correlated to each other.**\n\n","060e8f4c":"The best model found is `QuadraticDiscriminantAnalysis` from `sklearn` library. You can train that model to see the results on your own but `pycarat` has already saved that model for you.","11829aa4":"## Correlation between the features","d80ee92c":"## check for non-null values ","6c696458":"## Model Training","50a37f50":"We are good to go!","170014ea":"Since this is a very small dataset we can affort to train many types of models in no time!\nWe are gonna use a powerful libray called `pycaret` which will automatically do the work for us!"}}