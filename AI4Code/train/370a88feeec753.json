{"cell_type":{"420a8631":"code","85da9316":"code","55804af0":"code","6e1adf86":"code","a68c71cb":"code","30e75816":"code","81fac1b8":"code","5d159d75":"code","6e088ffa":"code","3879041d":"code","2b3771cb":"code","cf4ae2ac":"code","6239a713":"code","c7287b66":"code","9a88d3ad":"code","e963ef57":"code","2f4a5382":"code","8696b2cb":"code","70f2d877":"code","fed9cd60":"code","c8124fe0":"code","c53bb58a":"code","c7d2a9bc":"code","ac6d3041":"code","d794c201":"code","4342e074":"code","7eb91756":"code","741dcabf":"code","8665641d":"code","e08223da":"code","c056d3c4":"code","af4c5b2f":"code","b34de73d":"code","399ef708":"code","ef50b87d":"code","4a12e063":"code","88efb945":"code","fabd186e":"code","bafa0fa7":"code","c7cacd28":"code","67c927d1":"code","3548bd49":"code","cff7d1dc":"code","7a397e2d":"code","d82c1903":"code","71708c45":"code","30d6cb7c":"code","9675c7fe":"code","2b7744fa":"code","786376de":"code","1dc306ae":"code","a4cbef4d":"code","21483a96":"code","691f2e75":"code","8ad97629":"code","9c2a1326":"code","512396c8":"code","68f98f19":"code","52a71aab":"code","e9c20def":"code","56c52809":"code","130c5c82":"code","c8a03350":"code","46cadfb6":"code","38579d70":"code","1e491537":"code","bdc31e42":"code","b3a22f5d":"code","4a51e0ac":"code","6e64aa4e":"code","5bbc80da":"code","4272ac1d":"code","c81c402c":"code","f7ab6401":"code","545e6e4a":"code","3c798f8b":"code","0c661631":"code","f562590b":"code","4ecb0115":"code","69a47908":"code","fe59a6bc":"code","12949eee":"code","c23d23c8":"code","05d7e90f":"code","370d1ff8":"code","a702e406":"code","4ab256b9":"code","5512d014":"code","ab935b2a":"code","a078425e":"code","e0ecf33b":"code","34175655":"code","8b6d92fb":"markdown","618e5e28":"markdown","9a1abffd":"markdown","0e476228":"markdown","c9e5feee":"markdown","e51900fe":"markdown","68b7ad15":"markdown","1569f940":"markdown","8f90afdb":"markdown","b180d20d":"markdown","a69eedb4":"markdown","86f8b19e":"markdown","43599c04":"markdown","f5b65d1b":"markdown","4b23ccbd":"markdown","7020627f":"markdown","a9ad7cb7":"markdown","106cec06":"markdown","59e449c6":"markdown","efe851e3":"markdown","cf0200ee":"markdown","4fe7ba4f":"markdown","fd436691":"markdown","eb3e8d39":"markdown","c7b16619":"markdown","ec7c6d20":"markdown","a5d8517b":"markdown","06539ca1":"markdown","add02c84":"markdown","b2b2f111":"markdown","db812818":"markdown","0eb207b9":"markdown","9d89ba8e":"markdown","4d621320":"markdown","ebe1c411":"markdown","6db36ecf":"markdown","74974576":"markdown","a00faaa3":"markdown","74891c23":"markdown","d015e914":"markdown","8181e141":"markdown","7e8ef8b2":"markdown","999d137b":"markdown","ee65ecbb":"markdown","b6d02c6e":"markdown","f5bdffbc":"markdown","4950677c":"markdown","09469bd3":"markdown","27e57a4c":"markdown","f4ad25c6":"markdown","6bac084f":"markdown","14e0c213":"markdown","b5337163":"markdown","404912ea":"markdown"},"source":{"420a8631":"#This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","85da9316":"df = pd.read_csv(\"..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\ndf.head()","55804af0":"print (df.shape)\nprint (df.columns)","6e1adf86":"print(df.describe())","a68c71cb":"df.isnull().sum()","30e75816":"df.info()","81fac1b8":"df['SeniorCitizen'] = df.SeniorCitizen.astype('object')","5d159d75":"#Before that the empty data replace with np.nan\ndf['TotalCharges'] = df['TotalCharges'].replace(\" \",np.nan)","6e088ffa":"#Now we see there are 11 missing values in Total Charges column.\ndf['TotalCharges'].isnull().sum()","3879041d":"# Displaying the rows with 11 missing values for our understanding purpose\ndf1 = df[df.isnull().any(axis=1)]\nprint (df1)","2b3771cb":"churn_yes = df[df['Churn'] == 'Yes']\nprint (len(churn_yes))\nchurn_no = df[df['Churn'] == 'No']\nprint (len(churn_no))","cf4ae2ac":"df2 = df.loc[df['Churn'] == 'Yes']\ndf2.head()","6239a713":"male_count = df2[df2['gender'] == 'Male']\nprint (len(male_count))\nfemale_count = df2[df2['gender'] == 'Female']\nprint (len(female_count))","c7287b66":"import matplotlib.pyplot as plt\n# Data to plot\nlabels = 'Male', 'Female'\nsizes = [930, 939]\ncolors = ['yellowgreen', 'lightcoral']\nexplode = (0.1, 0)  # explode 1st slice\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=90)\n \nplt.axis('equal')\nplt.show()","9a88d3ad":"Senior_male_count = male_count[male_count['SeniorCitizen'] == 1]\nprint (len(Senior_male_count))\nJunior_male_count = male_count[male_count['SeniorCitizen'] == 0]\nprint (len(Junior_male_count))","e963ef57":"Senior_female_count = female_count[female_count['SeniorCitizen'] == 1]\nprint (len(Senior_female_count))\nJunior_female_count = female_count[female_count['SeniorCitizen'] == 0]\nprint (len(Junior_female_count))","2f4a5382":"import seaborn as sns\nplt.figure(figsize = (9,5))\nsns.countplot(df2.PhoneService, hue = df2.Churn)","8696b2cb":"plt.figure(figsize=(12,6))\nax = sns.countplot(x=\"Churn\", hue=\"Contract\", data=df2);\nax.set_title('Contract Type vs Churn', fontsize=10)\nax.set_ylabel('Number of Customers', fontsize =10)\nax.set_xlabel('Churn', fontsize = 15)","70f2d877":"Senior_male_count_services_1 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed phone service and left less than 10 months: \", len(Senior_male_count_services_1))\nSenior_male_count_services_4 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed phone service and stayed more than 10 months: \",len(Senior_male_count_services_4))\nJunior_male_count_services_1 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed phone service and left less than 10 months:\" ,len(Junior_male_count_services_1))\nJunior_male_count_services_4 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed phone service and stayed more than 10 months:\",len(Junior_male_count_services_4))","fed9cd60":"Senior_female_count_services_1 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed phone service and left less than 10 months: \", len(Senior_female_count_services_1))\nSenior_female_count_services_4 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed phone service and stayed more than 10 months: \",len(Senior_female_count_services_4))\nJunior_female_count_services_1 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed phone service and left less than 10 months:\" ,len(Junior_female_count_services_1))\nJunior_female_count_services_4 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed phone service and stayed more than 10 months:\",len(Junior_female_count_services_4))","c8124fe0":"# data to plot\nn_groups = 2\nPhService_usedby_MaleSeniors = [77, 115]\nPhService_usedby_FemaleSeniors = [94, 105]\nPhService_usedby_MaleJuniors = [313, 202]\nPhService_usedby_FemaleJuniors = [337, 218]\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, PhService_usedby_MaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='ph.Ser used by Seniors(M)')\n \nrects2 = plt.bar(index + bar_width, PhService_usedby_FemaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='g',\n                 label='ph.Ser used by Seniors(F)')\n \nplt.xlabel('Female\/Male customers (Sr)')\nplt.ylabel('Phone services utilized')\nplt.title('Phone Services used by Female\/Male customers (Sr) only for short period and Long Period')\nplt.xticks(index + bar_width, ('A', 'B'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()\n\n# data to plot\nn_groups = 2\nPhService_usedby_MaleJuniors = [313, 202]\nPhService_usedby_FemaleJuniors = [337, 218]\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, PhService_usedby_MaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='yellow',\n                 label='ph.Ser used by Juniors(M)')\n \nrects2 = plt.bar(index + bar_width,PhService_usedby_FemaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='R',\n                 label='ph.Ser used by Juniors(F)')\n \nplt.xlabel('Female\/Male customers (Jr)')\nplt.ylabel('Phone services utilized')\nplt.title('Phone Services used by Female\/Male customers (Jr) only for short period and Long Period')\nplt.xticks(index + bar_width, ('C', 'D'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()","c53bb58a":"import seaborn as sns\nplt.figure(figsize = (9,5))\nsns.countplot(df2.InternetService, hue = df2.Churn)","c7d2a9bc":"Senior_male_count_services_7 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed DSL Internet service and left less than 10 months:\", len(Senior_male_count_services_7))\nSenior_male_count_services_10 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service and left less than 10 months:\", len(Senior_male_count_services_10))\nSenior_male_count_services_13 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed DSL Internet service and stayed more than 10 months:\", len(Senior_male_count_services_13))\n\nSenior_male_count_services_16 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (M) who availed Fiber optic Internet service and stayed more than 10 months:\", len(Senior_male_count_services_16))","ac6d3041":"Senior_female_count_services_7 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed DSL Internet service and left less than 10 months:\", len(Senior_female_count_services_7))\nSenior_female_count_services_10 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service and left less than 10 months:\", len(Senior_female_count_services_10))\nSenior_female_count_services_13 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed DSL Internet service and stayed more than 10 months:\", len(Senior_female_count_services_13))\nSenior_female_count_services_16 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Seniors (F) who availed Fiber optic Internet service and stayed more than 10 months:\", len(Senior_female_count_services_16))","d794c201":"Junior_male_count_services_7 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed DSL Internet service and left less than 10 months:\", len(Junior_male_count_services_7))\nJunior_male_count_services_8 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service and left less than 10 months:\", len(Junior_male_count_services_8))\nJunior_male_count_services_9 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed DSL Internet service and stayed more than 10 months:\", len(Junior_male_count_services_9))\nJunior_male_count_services_10 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (M) who availed Fiber optic Internet service and stayed more than 10 months:\", len(Junior_male_count_services_10))","4342e074":"Junior_female_count_services_7 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed DSL Internet service and left less than 10 months:\", len(Junior_female_count_services_7))\nJunior_female_count_services_8 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service and left less than 10 months:\", len(Junior_female_count_services_8))\nJunior_female_count_services_9 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed DSL Internet service and stayed more than 10 months:\", len(Junior_female_count_services_9))\nJunior_female_count_services_10 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['Contract'] == 'Month-to-month')]\nprint (\"Juniors (F) who availed Fiber optic Internet service and stayed more than 10 months:\", len(Junior_female_count_services_10))","7eb91756":"# data to plot\nn_groups = 2\nDSLService_usedby_MaleSeniors = [20, 14]\nDSLService_usedby_FemaleSeniors = [21, 11]\n\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, DSLService_usedby_MaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='DSLnetSer used by Seniors(M)')\n \nrects2 = plt.bar(index + bar_width, DSLService_usedby_FemaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='g',\n                 label='DSLnetSer used by Seniors(F)')\n \nplt.xlabel('Female\/Male customers (Sr)')\nplt.ylabel('DSLIntenet services utilized')\nplt.title('DSLIntenet Services used by Female\/Male customers (Sr) for short period and Long Period')\nplt.xticks(index + bar_width, ('A', 'B'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()\n\n# data to plot\nn_groups = 2\nDSLService_usedby_MaleJuniors = [126, 36]\nDSLService_usedby_FemaleJuniors = [107, 51]\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, DSLService_usedby_MaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='R',\n                 label='DSLnetSer used by Juniors(M)')\n \nrects2 = plt.bar(index + bar_width,DSLService_usedby_FemaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='k',\n                 label='DSLnetSer used by Juniors(F)')\n \nplt.xlabel('Female\/Male customers (Jr)')\nplt.ylabel('DSLIntenet services utilized')\nplt.title('DSLIntenet Services used by Female\/Male customers (Jr) for short period and Long Period')\nplt.xticks(index + bar_width, ('C', 'D'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()\n\n# create plot\nFibOptService_usedby_MaleSeniors = [66, 111]\nFibOptService_usedby_FemaleSeniors = [82, 101]\n\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, FibOptService_usedby_MaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='FibOptSer used by Seniors(M)')\n \nrects2 = plt.bar(index + bar_width,FibOptService_usedby_FemaleSeniors, bar_width,\n                 alpha=opacity,\n                 color='y',\n                 label='FibOptSer used by Seniors(F)')\n \nplt.xlabel('Female\/Male customers (Sr)')\nplt.ylabel('FibOptIntenet services utilized')\nplt.title('FibOptIntenet Services used by Female\/Male customers (Sr) for short period and Long Period')\nplt.xticks(index + bar_width, ('E', 'F'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()\n\n# create plot\n\nFibOptService_usedby_MaleJuniors = [187,175]\nFibOptService_usedby_FemaleJuniors = [224, 179]\n\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.bar(index, FibOptService_usedby_MaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='coral',\n                 label='FibOptSer used by Juniors(M)')\n \nrects2 = plt.bar(index + bar_width,FibOptService_usedby_FemaleJuniors, bar_width,\n                 alpha=opacity,\n                 color='k',\n                 label='FibOptSer used by Juniors(F)')\n \nplt.xlabel('Female\/Male customers (Jr)')\nplt.ylabel('FibOptIntenet services utilized')\nplt.title('FibOptIntenet Services used by Female\/Male customers (Jr) for short period and Long Period')\nplt.xticks(index + bar_width, ('G', 'H'))\nplt.legend()\n \nplt.tight_layout()\nplt.show()\n","741dcabf":"Senior_male_count_services_19 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['Contract'] == 'Month-to-month') & (Senior_male_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (M) who availed DSL Internet service + Tech Services and left less than 10 months:\", len(Senior_male_count_services_19))\nSenior_male_count_services_20 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['Contract'] == 'Month-to-month')  & (Senior_male_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service + Tech Services and left less than 10 months:\", len(Senior_male_count_services_20))\nSenior_male_count_services_21 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['Contract'] == 'Month-to-month') & (Senior_male_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (M) who availed DSL Internet service + Tech Services and stayed more than 10 months:\", len(Senior_male_count_services_21))\nSenior_male_count_services_22 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['Contract'] == 'Month-to-month') & (Senior_male_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (M) who availed Fiber optic Internet service + Tech Services and stayed more than 10 months:\", len(Senior_male_count_services_22))","8665641d":"Junior_male_count_services_11 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['Contract'] == 'Month-to-month') & (Junior_male_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (M) who availed DSL Internet service + Tech Services and left less than 10 months:\", len(Junior_male_count_services_11))\nJunior_male_count_services_12 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['Contract'] == 'Month-to-month') & (Junior_male_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service + Tech Services and left less than 10 months:\", len(Junior_male_count_services_12))\n\nJunior_male_count_services_13 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['Contract'] == 'Month-to-month') & (Junior_male_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (M) who availed DSL Internet service + Tech Services and stayed more than 10 months:\", len(Junior_male_count_services_13))\nJunior_male_count_services_14 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['Contract'] == 'Month-to-month') & (Junior_male_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (M) who availed Fiber optic Internet service + Tech Services and stayed more than 10 months:\", len(Junior_male_count_services_14))","e08223da":"Senior_female_count_services_17 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['Contract'] == 'Month-to-month') & (Senior_female_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (F) who availed DSL Internet service + Tech Services and left less than 10 months:\", len(Senior_female_count_services_17))\nSenior_female_count_services_18 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['Contract'] == 'Month-to-month') & (Senior_female_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service + Tech Services and left less than 10 months:\", len(Senior_female_count_services_18))\nSenior_female_count_services_19 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['Contract'] == 'Month-to-month') & (Senior_female_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (F) who availed DSL Internet service + Tech Services and stayed more than 10 months:\", len(Senior_female_count_services_19))\nSenior_female_count_services_20 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['Contract'] == 'Month-to-month') & (Senior_female_count['TechSupport'] == 'Yes')]\nprint (\"Seniors (F) who availed Fiber optic Internet service + Tech Services and stayed more than 10 months:\", len(Senior_female_count_services_20))","c056d3c4":"Junior_female_count_services_11 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['Contract'] == 'Month-to-month') & (Junior_female_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (F) who availed DSL Internet service + Tech Services and left less than 10 months:\", len(Junior_female_count_services_11))\nJunior_female_count_services_12 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['Contract'] == 'Month-to-month') & (Junior_female_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service + Tech Services and left less than 10 months:\", len(Junior_female_count_services_12))\n\nJunior_female_count_services_13 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['Contract'] == 'Month-to-month') & (Junior_female_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (F) who availed DSL Internet service + Tech Services and stayed more than 10 months:\", len(Junior_female_count_services_13))\nJunior_female_count_services_14 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['Contract'] == 'Month-to-month') & (Junior_female_count['TechSupport'] == 'Yes')]\nprint (\"Juniors (F) who availed Fiber optic Internet service + Tech Services and stayed more than 10 months:\", len(Junior_female_count_services_14))","af4c5b2f":"from matplotlib.pyplot import figure\n# data to plot\nn_groups = 2\nDSL_IntTechService_usedby_JuniorsM = [18,13]\nDSL_IntTechService_usedby_JuniorsF= [27,13]\nFibOpt_IntTechService_usedby_JuniorsM = [14,31]\nFibOpt_IntTechService_usedby_JuniorsF = [19,34]\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nindex_1 = np.arange(n_groups)\nbar_width = 0.25\nopacity = 0.8\n\nrects1 = plt.bar(index, DSL_IntTechService_usedby_JuniorsM,bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='DSL\/Tech.Serv used by Jr(M)')\n \nrects2 = plt.bar(index + bar_width, DSL_IntTechService_usedby_JuniorsF, bar_width,\n                 alpha=opacity,\n                 color='g',\n                 label='DSL\/Tech.Serv used by Jr(F)')\nplt.xlabel('Male\/Female customers (Jr)')\nplt.ylabel('DSL net\/Tech services utilized')\nplt.title('DSL Internet + Tech Services used by Male\/Female customers (Juniors count Only)')\nplt.xticks(index + bar_width, ('A', 'B'))\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n# data to plot\nn_groups = 2\nDSL_IntTechService_usedby_JuniorsM = [18,13]\nDSL_IntTechService_usedby_JuniorsF= [27,13]\nFibOpt_IntTechService_usedby_JuniorsM = [14,31]\nFibOpt_IntTechService_usedby_JuniorsF = [19,34]\n# create plot\nfig, ax = plt.subplots(figsize=(8, 5))\nindex = np.arange(n_groups)\nindex_1 = np.arange(n_groups)\nbar_width = 0.25\nopacity = 0.8\n\nrects1 = plt.bar(index, FibOpt_IntTechService_usedby_JuniorsM,bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='FibOpt\/Tech.Serv used by Jr(M)')\n \nrects2 = plt.bar(index + bar_width, FibOpt_IntTechService_usedby_JuniorsF, bar_width,\n                 alpha=opacity,\n                 color='g',\n                 label='FibOpt\/Tech.Serv used by Jr(F)')\nplt.xlabel('Male\/Female customers (Jr)')\nplt.ylabel('FibOpt net\/Tech services utilized')\nplt.title('FibOpt Internet + Tech Services used by Male\/Female customers (Juniors count Only)')\nplt.xticks(index + bar_width, ('A', 'B'))\nplt.legend()\n\nplt.tight_layout()\nplt.show()","b34de73d":"Senior_male_count_services_1 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed phone service + Elec.Check Payment option and left less than 10 months: \", len(Senior_male_count_services_1))\nSenior_male_count_services_4 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed phone service + Elec.Check Payment option and stayed more than 10 months: \",len(Senior_male_count_services_4))\nJunior_male_count_services_1 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed phone service + Elec.Check Payment option and left less than 10 months:\" ,len(Junior_male_count_services_1))\nJunior_male_count_services_4 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed phone service + Elec.Check Payment option and stayed more than 10 months:\",len(Junior_male_count_services_4))","399ef708":"Senior_female_count_services_1 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed phone service + Elec.Check Payment option and left less than 10 months: \", len(Senior_female_count_services_1))\nSenior_female_count_services_4 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed phone service + Elec.Check Payment option and stayed more than 10 months: \",len(Senior_female_count_services_4))\nJunior_female_count_services_1 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed phone service + Elec.Check Payment option and left less than 10 months:\" ,len(Junior_female_count_services_1))\nJunior_female_count_services_4 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed phone service + Elec.Check Payment option and stayed more than 10 months:\",len(Junior_female_count_services_4))","ef50b87d":"Senior_male_count_services_1 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed phone service + Mailed Check Payment option and left less than 10 months: \", len(Senior_male_count_services_1))\nSenior_male_count_services_4 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed phone service + Mailed Check Payment option and stayed more than 10 months: \",len(Senior_male_count_services_4))\nJunior_male_count_services_1 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed phone service + Mailed Check Payment option and left less than 10 months:\" ,len(Junior_male_count_services_1))\nJunior_male_count_services_4 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed phone service + Mailed Check Payment option and stayed more than 10 months:\",len(Junior_male_count_services_4))","4a12e063":"Senior_female_count_services_1 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed phone service + Mailed Check Payment option and left less than 10 months: \", len(Senior_female_count_services_1))\nSenior_female_count_services_4 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed phone service + Mailed Check Payment option and stayed more than 10 months: \",len(Senior_female_count_services_4))\nJunior_female_count_services_1 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed phone service + Mailed Check Payment option and left less than 10 months:\" ,len(Junior_female_count_services_1))\nJunior_female_count_services_4 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed phone service + Mailed Check Payment option and stayed more than 10 months:\",len(Junior_female_count_services_4))","88efb945":"PhService_ElecCheck_usedby_MaleSr = [54, 85]\nPhService_ElecCheck_usedby_FemaleSr = [71, 71]\nPhService_ElecCheck_usedby_MaleJr = [182, 159]\nPhService_ElecCheck_usedby_FemaleJr = [177, 148]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [54., 85.]\nz = [71., 71.]\na = [182., 159.]\nb= [177., 148.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'ph.Ser\/Elec check used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'ph.Ser\/Elec check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'ph.Ser\/Elec check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'ph.Ser\/Elec check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('Phone services + Elec.Check utilized')\nplt.title('Phone Services + Elec.Check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C', 'D'))\n\nplt.legend()\nplt.show()\n\nPhService_MailCheck_usedby_MaleSr = [11, 7]\nPhService_MailCheck_usedby_FemaleSr = [12, 6]\nPhService_MailCheck_usedby_MaleJr = [93, 25]\nPhService_MailCheck_usedby_FemaleJr = [89,28]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [11., 7.]\nz = [12., 6.]\na = [93., 25.]\nb= [89., 28.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'ph.Ser\/Mail check used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'ph.Ser\/Mail check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'ph.Ser\/Mail check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'ph.Ser\/Mail check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('Phone services + Mail.Check utilized')\nplt.title('Phone Services + Mail.Check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C', 'D'))\n\nplt.legend()\nplt.show()","fabd186e":"Senior_male_count_services_1 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed phone service + Bank transfer option and left less than 10 months: \", len(Senior_male_count_services_1))\nSenior_male_count_services_4 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed phone service + Bank transfer option and stayed more than 10 months: \",len(Senior_male_count_services_4))\nJunior_male_count_services_1 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed phone service + Bank transfer option and left less than 10 months:\" ,len(Junior_male_count_services_1))\nJunior_male_count_services_4 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed phone service + Bank transfer option and stayed more than 10 months:\",len(Junior_male_count_services_4))","bafa0fa7":"Senior_female_count_services_1 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed phone service + Bank transfer option and left less than 10 months: \", len(Senior_female_count_services_1))\nSenior_female_count_services_4 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed phone service + EBank transfer option and stayed more than 10 months: \",len(Senior_female_count_services_4))\nJunior_female_count_services_1 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed phone service + Bank transfer option and left less than 10 months:\" ,len(Junior_female_count_services_1))\nJunior_female_count_services_4 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed phone service + Bank transfer option and stayed more than 10 months:\",len(Junior_female_count_services_4))","c7cacd28":"Senior_male_count_services_1 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed phone service + Credit card option and left less than 10 months: \", len(Senior_male_count_services_1))\nSenior_male_count_services_4 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['PhoneService'] == 'Yes') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed phone service + Credit card option and stayed more than 10 months: \",len(Senior_male_count_services_4))\nJunior_male_count_services_1 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed phone service + Credit card option and left less than 10 months:\" ,len(Junior_male_count_services_1))\nJunior_male_count_services_4 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['PhoneService'] == 'Yes') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed phone service + Credit card option and stayed more than 10 months:\",len(Junior_male_count_services_4))","67c927d1":"Senior_female_count_services_1 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed phone service + Credit card option and left less than 10 months: \", len(Senior_female_count_services_1))\nSenior_female_count_services_4 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['PhoneService'] == 'Yes') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed phone service + Credit card option and stayed more than 10 months: \",len(Senior_female_count_services_4))\nJunior_female_count_services_1 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed phone service + Credit card option and left less than 10 months:\" ,len(Junior_female_count_services_1))\nJunior_female_count_services_4 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['PhoneService'] == 'Yes') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed phone service + Credit card option and stayed more than 10 months:\",len(Junior_female_count_services_4))","3548bd49":"PhService_BankTransfer_usedby_MaleSr = [5, 18]\nPhService_BankTransfer_usedby_FemaleSr = [4, 22]\nPhService_BankTransfer_usedby_MaleJr = [24, 58]\nPhService_BankTransfer_usedby_FemaleJr = [43, 59]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [5., 18.]\nz = [4., 22.]\na = [24., 58.]\nb= [43., 59.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'ph.Ser\/Bank Trans. used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'ph.Ser\/Bank Trans. used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'ph.Ser\/Bank Trans. used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'ph.Ser\/Bank Trans. used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('Phone services + BankTransfer utilized')\nplt.title('Phone Services + BankTransfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n\nPhService_creditTrans_usedby_MaleSr = [7, 19]\nPhService_creditTrans_usedby_FemaleSr = [7,25]\nPhService_creditTrans_usedby_MaleJr = [18, 48]\nPhService_creditTrans_usedby_FemaleJr = [30,53]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [7., 19.]\nz = [7., 25.]\na = [18., 48.]\nb= [30., 53.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'ph.Ser\/CreditTrans used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'ph.Ser\/CreditTrans used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'ph.Ser\/CreditTrans used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'ph.Ser\/CreditTrans used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('Phone services + CreditTransfer utilized')\nplt.title('Phone Services + CreditTransfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n","cff7d1dc":"Senior_male_count_services_19 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed DSL Internet service + Elec Check Payment Option and left less than 10 months:\", len(Senior_male_count_services_19))\nSenior_male_count_services_20 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service + Elec Check Payment Option and left less than 10 months:\", len(Senior_male_count_services_20))\nSenior_male_count_services_21 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed DSL Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_21))\nSenior_male_count_services_22 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (M) who availed Fiber optic Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_22))","7a397e2d":"Junior_male_count_services_11 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed DSL Internet service + Elec Check Payment Option and left less than 10 months:\", len(Junior_male_count_services_11))\nJunior_male_count_services_12 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service + Elec Check Payment Option and left less than 10 months:\", len(Junior_male_count_services_12))\nJunior_male_count_services_13 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed DSL Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_13))\nJunior_male_count_services_14 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (M) who availed Fiber optic Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_14))","d82c1903":"Senior_female_count_services_17 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed DSL Internet service + Elec Check Payment Option and left less than 10 months:\", len(Senior_female_count_services_17))\nSenior_female_count_services_18 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service + Elec Check Payment Option and left less than 10 months:\", len(Senior_female_count_services_18))\nSenior_female_count_services_19 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed DSL Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_19))\nSenior_female_count_services_20 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Seniors (F) who availed Fiber optic Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_20))","71708c45":"Junior_female_count_services_11 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed DSL Internet service + Elec Check Payment Option and left less than 10 months:\", len(Junior_female_count_services_11))\nJunior_female_count_services_12 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service + Elec Check Payment Option and left less than 10 months:\", len(Junior_female_count_services_12))\n\nJunior_female_count_services_13 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed DSL Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_13))\nJunior_female_count_services_14 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Electronic check')]\nprint (\"Juniors (F) who availed Fiber optic Internet service + Elec Check Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_14))","30d6cb7c":"DSLserv_ElecCheck_usedby_MaleSr = [13, 9]\nDSLserv_ElecCheck_usedby_FemaleSr = [14, 6]\nDSLserv_ElecCheck_usedby_MaleJr = [61, 25]\nDSLserv_ElecCheck_usedby_FemaleJr = [47, 29]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [13., 9.]\nz = [14., 6.]\na = [61., 25.]\nb= [47., 29.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'DSL.Ser\/Elec Check used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'DSL.Ser\/Elec Check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'DSL.Ser\/Elec Check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'DSL.Ser\/Elec Check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('DSL.Service + Elec Check PM utilized')\nplt.title('DSL Services + Elec Check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n\nFibOptserv_ElecCheck_usedby_MaleSr = [48, 83]\nFibOptserv_ElecCheck_usedby_FemaleSr = [64, 70]\nFibOptserv_ElecCheck_usedby_MaleJr = [140, 141]\nFibOptserv_ElecCheck_usedby_FemaleJr = [143, 133]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [48., 83.]\nz = [64., 70.]\na = [140., 141.]\nb= [142., 133.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'FibOpt.Ser\/Elec Check used by Sr(M))')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'FibOpt.Ser\/Elec Check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'FibOpt.Ser\/Elec Check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'FibOpt.Ser\/Elec Check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('FibOpt services + Elec check utilized')\nplt.title('FiberOptic Services + Electronic check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()","9675c7fe":"Senior_male_count_services_19 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed DSL Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Senior_male_count_services_19))\nSenior_male_count_services_20 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Senior_male_count_services_20))\nSenior_male_count_services_21 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed DSL Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_21))\nSenior_male_count_services_22 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (M) who availed Fiber optic Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_22))","2b7744fa":"Junior_male_count_services_11 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed DSL Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Junior_male_count_services_11))\nJunior_male_count_services_12 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Junior_male_count_services_12))\nJunior_male_count_services_13 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed DSL Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_13))\nJunior_male_count_services_14 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (M) who availed Fiber optic Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_14))","786376de":"Senior_female_count_services_17 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed DSL Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Senior_female_count_services_17))\nSenior_female_count_services_18 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Senior_female_count_services_18))\nSenior_female_count_services_19 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed DSL Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_19))\nSenior_female_count_services_20 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Seniors (F) who availed Fiber optic Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_20))","1dc306ae":"Junior_female_count_services_11 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed DSL Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Junior_female_count_services_11))\nJunior_female_count_services_12 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service + Mailed Check Payment Option and left less than 10 months:\", len(Junior_female_count_services_12))\nJunior_female_count_services_13 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed DSL Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_13))\nJunior_female_count_services_14 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Mailed check')]\nprint (\"Juniors (F) who availed Fiber optic Internet service + Mailed Check Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_14))","a4cbef4d":"DSLserv_MailCheck_usedby_MaleSr = [4, 2]\nDSLserv_MailCheck_usedby_FemaleSr = [6, 1]\nDSLserv_MailCheck_usedby_MaleJr = [50, 12]\nDSLserv_MailCheck_usedby_FemaleJr = [38, 12]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [4., 2.]\nz = [6., 1.]\na = [49., 5.]\nb= [38., 6.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'DSL.Ser\/Mail Check used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'DSL.Ser\/Mail Check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'DSL.Ser\/Mail Check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'DSL.Ser\/Mail Check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('DSL.Service + Mail Check PM utilized')\nplt.title('DSL Services + Mail Check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n\nFibOptserv_MailCheck_usedby_MaleSr = [8, 6]\nFibOptserv_MailCheck_usedby_FemaleSr = [8, 5]\nFibOptserv_MailCheck_usedby_MaleJr = [22, 12]\nFibOptserv_MailCheck_usedby_FemaleJr = [33, 13]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [8., 5.]\nz = [8., 4.]\na = [22., 12.]\nb= [33., 7.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'FibOpt.Ser\/Mail Check used by Sr(M))')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'FibOpt.Ser\/Mail Check used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'FibOpt.Ser\/Mail Check used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'FibOpt.Ser\/Mail Check used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('FibOpt services + Mailed check utilized')\nplt.title('FiberOptic Services + Mailed check Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()","21483a96":"Senior_male_count_services_19 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed DSL Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Senior_male_count_services_19))\nSenior_male_count_services_20 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Senior_male_count_services_20))\nSenior_male_count_services_21 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed DSL Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_21))\nSenior_male_count_services_22 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (M) who availed Fiber optic Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_22))","691f2e75":"Junior_male_count_services_11 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed DSL Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Junior_male_count_services_11))\nJunior_male_count_services_12 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Junior_male_count_services_12))\nJunior_male_count_services_13 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed DSL Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_13))\nJunior_male_count_services_14 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (M) who availed Fiber optic Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_14))","8ad97629":"Senior_female_count_services_17 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed DSL Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Senior_female_count_services_17))\nSenior_female_count_services_18 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Senior_female_count_services_18))\nSenior_female_count_services_19 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed DSL Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_19))\nSenior_female_count_services_20 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Seniors (F) who availed Fiber optic Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_20))","9c2a1326":"Junior_female_count_services_11 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed DSL Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Junior_female_count_services_11))\nJunior_female_count_services_12 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service + Bank Transfer Payment Option and left less than 10 months:\", len(Junior_female_count_services_12))\nJunior_female_count_services_13 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed DSL Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_13))\nJunior_female_count_services_14 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Bank transfer (automatic)')]\nprint (\"Juniors (F) who availed Fiber optic Internet service + Bank Transfer Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_14))","512396c8":"DSLserv_BankTransfer_usedby_MaleSr = [2, 5]\nDSLserv_BankTransfer_usedby_FemaleSr = [0, 2]\nDSLserv_BankTransfer_usedby_MaleJr = [8, 15]\nDSLserv_BankTransfer_usedby_FemaleJr = [10, 11]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [2., 5.]\nz = [0., 2.]\na = [8., 15.]\nb= [10., 11.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'DSL.Ser\/BankTransfer used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'DSL.Ser\/BankTransfer used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'DSL.Ser\/BankTransfer used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'DSL.Ser\/BankTransfer used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('DSL.Service + BankTransfer PM utilized')\nplt.title('DSL Services + BankTransfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n\nFibOptserv_BankTransfer_usedby_MaleSr = [4, 16]\nFibOptserv_BankTransfer_usedby_FemaleSr = [4, 20]\nFibOptserv_BankTransfer_usedby_MaleJr = [16, 47]\nFibOptserv_BankTransfer_usedby_FemaleJr = [30, 46]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [4., 16.]\nz = [4., 20.]\na = [16., 47.]\nb= [30., 46.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'FibOpt.Ser\/BankTransfer used by Sr(M))')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'FibOpt.Ser\/BankTransfer used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'FibOpt.Ser\/BankTransfer used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'FibOpt.Ser\/BankTransfer used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('FibOpt services + BankTransfer utilized')\nplt.title('FiberOptic Services + BankTransfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()","68f98f19":"Senior_male_count_services_19 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed DSL Internet service + Credit Card Transfer Payment Option and left less than 10 months:\", len(Senior_male_count_services_19))\nSenior_male_count_services_20 = Senior_male_count.loc[(Senior_male_count['tenure'] < 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed Fiber Optic Internet service + Credit Card Payment Option and left less than 10 months:\", len(Senior_male_count_services_20))\nSenior_male_count_services_21 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'DSL') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed DSL Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_21))\nSenior_male_count_services_22 = Senior_male_count.loc[(Senior_male_count['tenure'] > 10) & (Senior_male_count['InternetService'] == 'Fiber optic') & (Senior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (M) who availed Fiber optic Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Senior_male_count_services_22))","52a71aab":"Junior_male_count_services_11 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed DSL Internet service + Credit Card Payment Option and left less than 10 months:\", len(Junior_male_count_services_11))\nJunior_male_count_services_12 = Junior_male_count.loc[(Junior_male_count['tenure'] < 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed Fiber Optic Internet service + Credit Card Payment Option and left less than 10 months:\", len(Junior_male_count_services_12))\nJunior_male_count_services_13 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'DSL') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed DSL Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_13))\nJunior_male_count_services_14 = Junior_male_count.loc[(Junior_male_count['tenure'] > 10) & (Junior_male_count['InternetService'] == 'Fiber optic') & (Junior_male_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (M) who availed Fiber optic Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Junior_male_count_services_14))","e9c20def":"Senior_female_count_services_17 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed DSL Internet service + Credit Card Payment Option and left less than 10 months:\", len(Senior_female_count_services_17))\nSenior_female_count_services_18 = Senior_female_count.loc[(Senior_female_count['tenure'] < 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed Fiber Optic Internet service + Credit Card Payment Option and left less than 10 months:\", len(Senior_female_count_services_18))\nSenior_female_count_services_19 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'DSL') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed DSL Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_19))\nSenior_female_count_services_20 = Senior_female_count.loc[(Senior_female_count['tenure'] > 10) & (Senior_female_count['InternetService'] == 'Fiber optic') & (Senior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Seniors (F) who availed Fiber optic Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Senior_female_count_services_20))","56c52809":"Junior_female_count_services_11 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed DSL Internet service + Credit Card Payment Option and left less than 10 months:\", len(Junior_female_count_services_11))\nJunior_female_count_services_12 = Junior_female_count.loc[(Junior_female_count['tenure'] < 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed Fiber Optic Internet service + Credit Card Payment Option and left less than 10 months:\", len(Junior_female_count_services_12))\nJunior_female_count_services_13 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'DSL') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed DSL Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_13))\nJunior_female_count_services_14 = Junior_female_count.loc[(Junior_female_count['tenure'] > 10) & (Junior_female_count['InternetService'] == 'Fiber optic') & (Junior_female_count['PaymentMethod'] == 'Credit card (automatic)')]\nprint (\"Juniors (F) who availed Fiber optic Internet service + Credit Card Payment Option and stayed more than 10 months:\", len(Junior_female_count_services_14))","130c5c82":"DSLserv_CreditTransfer_usedby_MaleSr = [1, 4]\nDSLserv_CreditTransfer_usedby_FemaleSr = [0, 2]\nDSLserv_CreditTransfer_usedby_MaleJr = [1, 6]\nDSLserv_CreditTransfer_usedby_FemaleJr = [12, 21]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [1., 4.]\nz = [0., 2.]\na = [1., 6.]\nb= [12., 21.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'DSL.Ser\/CreditTransfer used by Sr(M)')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'DSL.Ser\/CreditTransfer used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'DSL.Ser\/CreditTransfer used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'DSL.Ser\/CreditTransfer used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('DSL.Service + CreditTransfer PM utilized')\nplt.title('DSL Services + Credit Card Transfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()\n\nFibOptserv_CreditTransfer_usedby_MaleSr = [6, 16]\nFibOptserv_CreditTransfer_usedby_FemaleSr = [6, 21]\nFibOptserv_CreditTransfer_usedby_MaleJr = [9, 35]\nFibOptserv_CreditTransfer_usedby_FemaleJr = [19, 36]\n\nfig, ax = plt.subplots(figsize=(9, 5))\nx= np.arange(2)\nbar_width = 0.25\n\ny = [6., 16.]\nz = [6., 21.]\na = [9., 35.]\nb= [19., 36.]\n\nplt.bar(x+ 0.00,y,bar_width,color='b',label= 'FibOpt.Ser\/CreditTransfer used by Sr(M))')\nplt.bar(x+ 0.26,z,bar_width,color='g',label= 'FibOpt.Ser\/CreditTransfer used by Sr(F)')\nplt.bar(x+ 3.60,a,bar_width,color='y',label= 'FibOpt.Ser\/CreditTransfer used by Jr(M)')\nplt.bar(x+ 3.87,b,bar_width,color='k',label= 'FibOpt.Ser\/CreditTransfer used by Jr(F)')\n\nplt.xlabel('Female\/Male customers')\nplt.ylabel('FibOpt services + CreditTransfer utilized')\nplt.title('FiberOptic Services + Credit card Transfer Payment Option used by Female\/Male customers for short period and Long Period')\nplt.xticks(x + bar_width, ('A','B','C','D'))\n\nplt.legend()\nplt.show()","c8a03350":"'''\n### checking distribution of MonthlyCharges and TotalCharges\nfrom matplotlib import pyplot as plt    \n\nfig = plt.figure(figsize=(8, 9))\nax1 = fig.add_subplot(2, 2, 1)\nax2 = fig.add_subplot(2, 2, 2)\nax3 = fig.add_subplot(2, 2, 3)\nax4 = fig.add_subplot(2, 2, 4)\n\n#Senior_male_count.MonthlyCharges.plot(kind = 'hist',color='c',figsize = (9,5))\nn, bins, patches = ax1.hist(Senior_male_count.MonthlyCharges,color = 'r')\nax1.set_xlabel('Senior Male count)')\nax1.set_ylabel('MonthlyCharges')\n\nn, bins, patches = ax2.hist(Senior_female_count.MonthlyCharges)\nax2.set_xlabel('Senior Female count')\nax2.set_ylabel('MonthlyCharges')\n\nn, bins, patches = ax3.hist(Junior_male_count.MonthlyCharges,color = 'Coral')\nax3.set_xlabel('Junior Male count')\nax3.set_ylabel('MonthlyCharges')\n\nn, bins, patches = ax4.hist(Junior_female_count.MonthlyCharges,color = 'green')\nax4.set_xlabel('Junior Female count')\nax4.set_ylabel('MonthlyCharges')\n'''\n\n'''telecom_churn_services = df2[['PhoneService','InternetService', 'Churn']]\ntelecom_churn_services = telecom_churn_services[(telecom_churn_services['PhoneService'] == 'Yes') & (telecom_churn_services['InternetService'] == 'DSL') or (telecom_churn_services['InternetService'] == 'Fiber optic')]    \nagg = telecom_churn_services.groupby('Churn', as_index=False)[['PhoneService','InternetService']].sum()\nplt.figure(figsize=(12,6))\nax = sns.barplot(y='churn', x='telecom_churn_services', data=agg, color = 'b')\nax.set_xlabel('Number of Online Services Availed', fontsize=15)\nax.set_ylabel('Average Monthly Charges',  fontsize=15)\nax.set_title('Avg Monthly Charges vs Number of Services', fontsize=20)'''","46cadfb6":"fig = plt.figure(figsize=(8, 9))\nax1 = fig.add_subplot(2, 2, 1)\nax2 = fig.add_subplot(2, 2, 2)\n\n#Senior_male_count.MonthlyCharges.plot(kind = 'hist',color='c',figsize = (9,5))\ncount_1 = df2['PhoneService']\ny_pos_1 = df2['MonthlyCharges']\n\nax1.bar(count_1,y_pos_1,align='center',color = 'r')\nax1.set_xlabel('PhoneService)')\nax1.set_ylabel('MonthlyCharges')\n\ncount_2 = df2['InternetService']\ny_pos_2 = df2['MonthlyCharges']\nax2.bar(count_2,y_pos_2,align='center')\nax2.set_xlabel('InternetService')\nax2.set_ylabel('MonthlyCharges')","38579d70":"'''import seaborn as sns\n\n#df2['Services_1'] =df2.loc[(df2['InternetService'] == 'DSL') or (df2['InternetService'] == 'Fiber Optic')]\n#df2['Services_2'] = df2.[(df2['PhoneService'] == 'Yes')]\n#count of online services availed\ndf2['Services_1'] = (df2[['PhoneService']] == 'Yes')\n# create plot\nfig, ax = plt.subplots(figsize=(11, 5))\nx = np.arange(3)\nbar_width = 0.25\nopacity = 0.8\n\nrects1 = plt.bar(df2['Services_1'],df2['MonthlyCharges'],bar_width,\n                 alpha=opacity,\n                 color='b',\n                 label='Ph.Service' + 'Monthly charges')\n \nrects2 = plt.bar(df2['InternetService'],df2['MonthlyCharges'], bar_width,\n                 alpha=opacity,\n                 color='g',\n                 label='Internet Service' + 'Monthly charges')\nplt.xlabel('phone Service +Internet service)')\nplt.ylabel('Monthly Charges')\nplt.title('Whch component did increased the Monthly charges ?')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n'''","1e491537":"import seaborn as sns\n#count of online services availed\ndf2['value_added_Services'] = (df2[['OnlineSecurity', 'DeviceProtection', 'StreamingMovies', 'TechSupport',\n       'StreamingTV', 'OnlineBackup']] == 'Yes').sum(axis=1)","bdc31e42":"plt.figure(figsize=(12,6))\nax = sns.countplot(x='value_added_Services', hue='Churn', data=df2)\nax.set_title('Number of Services Availed by Churned customers', fontsize=20)\nax.set_ylabel('Number of churned Customers', fontsize=15)\nax.set_xlabel('Number of Online Services', fontsize=15)\n#ax.set_xticklabels(labels, rotation=45 )","b3a22f5d":"agg = df2.replace('Yes',1).groupby('value_added_Services', as_index=False)[['MonthlyCharges']].mean()\nagg[['MonthlyCharges']] = np.round(agg[['MonthlyCharges']], 0)","4a51e0ac":"plt.figure(figsize=(12,6))\nax = sns.barplot(y='MonthlyCharges', x='value_added_Services', data=agg)\nax.set_xlabel('Number of Online Services Availed', fontsize=15)\nax.set_ylabel('Average Monthly Charges',  fontsize=15)\nax.set_title('Avg Monthly Charges for services availed', fontsize=20)","6e64aa4e":"from sklearn.metrics import roc_auc_score;\nfrom sklearn.metrics import accuracy_score;\nfrom sklearn.metrics import confusion_matrix;\nfrom sklearn.model_selection import GridSearchCV;\n\ndf = pd.read_csv(\"..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\ndf.head()","5bbc80da":"df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors = 'coerce')\ndf[df['TotalCharges'].isna()==True] = 0","4272ac1d":"df['gender'].replace(['Male','Female'],[0,1],inplace=True)\ndf['Partner'].replace(['Yes','No'],[1,0],inplace=True)\ndf['Dependents'].replace(['Yes','No'],[1,0],inplace=True)\ndf['PhoneService'].replace(['Yes','No'],[1,0],inplace=True)\ndf['MultipleLines'].replace(['No phone service','No', 'Yes'],[0,0,1],inplace=True)\ndf['InternetService'].replace(['No','DSL','Fiber optic'],[0,1,2],inplace=True)\ndf['OnlineSecurity'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['OnlineBackup'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['DeviceProtection'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['TechSupport'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['StreamingTV'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['StreamingMovies'].replace(['No','Yes','No internet service'],[0,1,0],inplace=True)\ndf['Contract'].replace(['Month-to-month', 'One year', 'Two year'],[0,1,2],inplace=True)\ndf['PaperlessBilling'].replace(['Yes','No'],[1,0],inplace=True)\ndf['PaymentMethod'].replace(['Electronic check', 'Mailed check', 'Bank transfer (automatic)','Credit card (automatic)'],[0,1,2,3],inplace=True)\ndf['Churn'].replace(['Yes','No'],[1,0],inplace=True)\n\ndf.pop('customerID')\ndf.info()\n","c81c402c":"import seaborn as sns\nimport matplotlib.pyplot as plt\ncorr = df.corr()\nsns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values, annot = True, annot_kws={'size':12})\nheat_map=plt.gcf()\nheat_map.set_size_inches(20,15)\nplt.xticks(fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()","f7ab6401":"df.pop('TotalCharges')","545e6e4a":"from sklearn.model_selection import train_test_split\ntrain, test = train_test_split(df, test_size = 0.25)\n\ntrain_y = train['Churn']\ntest_y = test['Churn']\n\ntrain_x = train\ntrain_x.pop('Churn')\ntest_x = test\ntest_x.pop('Churn')","3c798f8b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix, classification_report\n\nlogisticRegr = LogisticRegression()\nlogisticRegr.fit(X=train_x, y=train_y)\n\ntest_y_pred = logisticRegr.predict(test_x)\nconfusion_matrix = confusion_matrix(test_y, test_y_pred)\nprint('Intercept: ' + str(logisticRegr.intercept_))\nprint('Regression: ' + str(logisticRegr.coef_))\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logisticRegr.score(test_x, test_y)))\nprint(classification_report(test_y, test_y_pred))\n\nconfusion_matrix_df = pd.DataFrame(confusion_matrix, ('No churn', 'Churn'), ('No churn', 'Churn'))\nheatmap = sns.heatmap(confusion_matrix_df, annot=True, annot_kws={\"size\": 20}, fmt=\"d\")\nheatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation=0, ha='right', fontsize = 14)\nheatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation=45, ha='right', fontsize = 14)\nplt.ylabel('True label', fontsize = 14)\nplt.xlabel('Predicted label', fontsize = 14)","0c661631":"df['Churn'].value_counts()","f562590b":"from sklearn.utils import resample\n \ndf_majority = df[df['Churn']==0]\ndf_minority = df[df['Churn']==1]\n \ndf_majority_upsampled = resample(df_majority,\nreplace=True,\nn_samples=1869, #same number of samples as majority classe\nrandom_state=1) #set the seed for random resampling\n# Combine resampled results\ndf_upsampled = pd.concat([df_minority, df_majority_upsampled])\n \ndf_upsampled['Churn'].value_counts()","4ecb0115":"train_x_upsampled = train\n\ntrain, test = train_test_split(df_upsampled, test_size = 0.25)\n \ntrain_y_upsampled = train['Churn']\ntest_y_upsampled = test['Churn']\n \ntrain_x_upsampled = train\ntrain_x_upsampled.pop('Churn')\ntest_x_upsampled = test\ntest_x_upsampled.pop('Churn')\n \nlogisticRegr_balanced = LogisticRegression()\nlogisticRegr_balanced.fit(X=train_x_upsampled, y=train_y_upsampled)\n \ntest_y_pred_balanced = logisticRegr_balanced.predict(test_x_upsampled)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logisticRegr_balanced.score(test_x_upsampled, test_y_upsampled)))\nprint(classification_report(test_y_upsampled, test_y_pred_balanced))","69a47908":"from sklearn import tree\n# Create each decision tree (pruned and unpruned)\ndecisionTree_unpruned = tree.DecisionTreeClassifier()\ndecisionTree = tree.DecisionTreeClassifier(max_depth = 4)\n \n# Fit each tree to our training data\ndecisionTree_unpruned = decisionTree_unpruned.fit(X=train_x, y=train_y)\ndecisionTree = decisionTree.fit(X=train_x, y=train_y)","fe59a6bc":"test_y_pred_dt = decisionTree.predict(test_x)\nprint('Accuracy of unpruned decision tree classifier on training set: {:.2f}'.format(decisionTree_unpruned.score(train_x, train_y)))\nprint('Accuracy of unpruned decision tree classifier on test set: {:.2f}'.format(decisionTree_unpruned.score(test_x, test_y)))\nprint('Accuracy of decision tree classifier on training set: {:.2f}'.format(decisionTree.score(train_x, train_y)))\nprint('Accuracy of decision tree classifier on test set: {:.2f}'.format(decisionTree.score(test_x, test_y)))","12949eee":"from sklearn.ensemble import RandomForestClassifier\nrandomForest = RandomForestClassifier()\nrandomForest.fit(train_x, train_y)\nprint('Accuracy of random forest classifier on test set: {:.2f}'.format(randomForest.score(test_x, test_y)))","c23d23c8":"import warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nLogisticRegression(solver='lbfgs')\n# Cross Validation\nlog_param = {'C':10**np.arange(-4, 2, .5)}\nlog = LogisticRegression()\nreg_cv = GridSearchCV(log, log_param, cv=5, scoring='roc_auc')\nreg_cv.fit(train_x, train_y)\n\n# Selecting the best model\nmod_log = LogisticRegression(C=reg_cv.best_params_['C'])\nmod_log.fit(train_x, train_y)\ny_pred_prob_log = mod_log.predict_proba(test_x)[:,1]\ny_pred_log = mod_log.predict(test_x)","05d7e90f":"'''# Accuracy Measures\nauc_log = roc_auc_score(test_y, y_pred_prob_log)\nspecificity_log = confusion_matrix(test_y, y_pred_log)[1,1] \/ (confusion_matrix(test_y, y_pred_log)[1,0] + confusion_matrix(test_y, y_pred_log)[1,1])\naccuracy_log = accuracy_score(test_y, y_pred_log)\nsensitivity_log = confusion_matrix(test_y, y_pred_log)[0,0]  \/ (confusion_matrix(test_y, y_pred_log)[0,1] + confusion_matrix(test_y, y_pred_log)[0,0])\n'''","370d1ff8":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import GridSearchCV\ntree_param = {'min_samples_leaf':np.arange(50, 300, 15), 'max_depth':np.arange(2, 12, 2)}\ntree = DecisionTreeClassifier()\ntree_cv = GridSearchCV(tree, tree_param, cv=5)\ntree_cv.fit(train_x, train_y)","a702e406":"#Selecting the best model\n\nmod_tree = DecisionTreeClassifier(max_depth=tree_cv.best_params_['max_depth'], \n                              min_samples_leaf=tree_cv.best_params_['min_samples_leaf'])\nmod_tree.fit(train_x, train_y)\ny_pred_prob_tree = mod_tree.predict_proba(test_x)[:,1]\ny_pred_tree = mod_tree.predict(test_x)","4ab256b9":"# Accuracy Measures\nfrom sklearn.metrics import roc_auc_score;\nfrom sklearn.metrics import accuracy_score;\nfrom sklearn.metrics import confusion_matrix;\nauc_tree = roc_auc_score(test_y, y_pred_prob_tree)\nspecificity_tree = confusion_matrix(test_y, y_pred_tree)[1,1] \/ (confusion_matrix(test_y, y_pred_tree)[1,0] + confusion_matrix(test_y, y_pred_tree)[1,1])\naccuracy_tree = accuracy_score(test_y, y_pred_tree)\nsensitivity_tree = confusion_matrix(test_y, y_pred_tree)[0,0]  \/ (confusion_matrix(test_y, y_pred_tree)[0,1] + confusion_matrix(test_y, y_pred_tree)[0,0])","5512d014":"# Cross Validation\n\nrf_param = {'max_features':np.arange(1, 5, 1)}\nrf = RandomForestClassifier(n_estimators=500, max_depth=tree_cv.best_params_['max_depth'])\nrf_cv = GridSearchCV(rf, rf_param, cv=5)\nrf_cv.fit(train_x, train_y)\n\n#Selecting the best model\n\nmod_rf = RandomForestClassifier(n_estimators=500, max_depth=tree_cv.best_params_['max_depth'], \n                             max_features=rf_cv.best_params_['max_features'],\n                             min_samples_leaf=tree_cv.best_params_['min_samples_leaf'])\nmod_rf.fit(train_x, train_y)\ny_pred_prob_rf = mod_rf.predict_proba(test_x)[:,1]\ny_pred_rf = mod_rf.predict(test_x)","ab935b2a":"# Accuracy Measures\nauc_rf = roc_auc_score(test_y, y_pred_prob_rf)\naccuracy_rf = accuracy_score(test_y, y_pred_rf)\nspecificity_rf = confusion_matrix(test_y, y_pred_rf)[1,1] \/ (confusion_matrix(test_y, y_pred_rf)[1,0] + confusion_matrix(test_y, y_pred_rf)[1,1])\nsensitivity_rf = confusion_matrix(test_y, y_pred_rf)[0,0]  \/ (confusion_matrix(test_y, y_pred_rf)[0,1] + confusion_matrix(test_y, y_pred_rf)[0,0])","a078425e":"#let x be \nx = np.arange(1, (len(y_pred_prob_rf)+1))\n\n# Classification Trees\ntree_df = pd.DataFrame()\ntree_df['probability'] = [1-i for i in y_pred_prob_tree]\ntree_df['actual'] = test_y\ntree_df = tree_df.sort_values(by='probability', ascending=False)\ntree_df['actual'] = np.where(tree_df['actual'] == 0, 1, 0)\ntree_df['cumsum'] = np.cumsum(tree_df['actual'])\ntree_df['index'] = x\n\n# Random Forest\nrf_df = pd.DataFrame()\nrf_df['probability'] = [1-i for i in y_pred_prob_rf]\nrf_df['actual'] = test_y\nrf_df = rf_df.sort_values(by='probability', ascending=False)\nrf_df['actual'] = np.where(rf_df['actual'] == 0, 1, 0)\nrf_df['cumsum'] = np.cumsum(rf_df['actual'])\nrf_df['index'] = x\n\n# Logistic Regression\nlog_df = pd.DataFrame()\nlog_df['probability'] = y_pred_prob_log\nlog_df['actual'] = test_y\nlog_df = log_df.sort_values(by='probability', ascending=False)\nlog_df['cumsum'] = np.cumsum(log_df['actual'])\nlog_df['index'] = x","e0ecf33b":"# Layout\nfig = plt.figure(figsize = (15,10))\nax = plt.subplot(122)\nax1 = plt.subplot(121)\n\n# Plot ax\nax.plot(rf_df['index'],rf_df['cumsum'], label = 'Random Forest', alpha = 0.4)\nax.plot(tree_df['index'],tree_df['cumsum'], label = 'Classification Trees', alpha = 0.4)\nax.plot(log_df['index'],log_df['cumsum'], label = 'Logistic Regression', alpha = 0.4)\nax.set_title('Zoomed In')\nax.set_ylabel('Number of Churn Observations')\nax.set_xlabel('Actual Outcome (In Ascending Order of Predicted Probability\/Confidence)')\n\n# Zoom ii\nax.set_ylim(200,100)\nax.set_xlim(1750,250)\n\n# PLot ax1\nax1.plot(rf_df['index'],rf_df['cumsum'], label = 'Random Forest', alpha = 0.4)\nax1.plot(tree_df['index'],tree_df['cumsum'], label = 'Classification Trees', alpha = 0.4)\nax1.plot(log_df['index'],log_df['cumsum'], label = 'Logistic Regression', alpha = 0.4)\nax1.set_title('Zoomed Out')\nax1.set_ylabel('Number of Churn Observations')\nax1.set_xlabel('Actual Outcome (In Ascending Order of Predicted Probability\/Confidence)')\n\nplt.legend()\nplt.tight_layout(pad = 4)\nplt.show()","34175655":"# Tabulate Results\nresult = pd.DataFrame({'Algorithm': ['Classification Tree', \n                                     'Random Forest'],#'Logistics Regression'],\n                        'Accuracy':[accuracy_tree, \n                                    accuracy_rf],#,accuracy_log ],\n                        'Specificity':[specificity_tree, \n                                     specificity_rf], #,specificity_log],\n                      'Sensitivity':[sensitivity_tree, \n                                     sensitivity_rf]}) #,sensitivity_log]})\n    \nresult.set_index('Algorithm').iloc[:, [0,1,2]].sort_values(['Sensitivity','Specificity'], ascending=[False, False])","8b6d92fb":"Ahh! Not bad.. It is almost an equal ratio. So, rooting more deeply, we will now find whether the Seniors or Juniors have opted to move out of the service provider.","618e5e28":"Now that we have a 1:1 ratio for our classes, let\u2019s train another logistic regression model.","9a1abffd":"Now, SeniorCitizen gets converted into a qualitative variable. Similarly, we will now consider the TotalCharges. If we take a closer look, we find that the 'TotalCharges'  variable is a categorical variable, where it should be converted to a numerical variable. This is because it refers to total amount of revenue generated by the client. Hence, it should be numerical only.","0e476228":"The above graph show that the Month-to - month contract type customers churned the most. Hence we will choos ethe same for our analysis","c9e5feee":"## Inference: \nJuniors (both Male and female) who used Electronic \/mailed check payments for a short period are the most affected ones.","e51900fe":"To balance the data set, we can randomly duplicate observations from the majority class. This is also known as re sampling with replacement:","68b7ad15":"The next service usage of a Telecom service provider is the Internet usage. We wil now concentrate on finding the below case:\n\n## 6. Now, let's find comparing the combination of no.of M\/F customers using Internet services  + customer Initiated payment method\n\n### Case 1\n-  a) For DSL Internet Service + Electronic Check Payment Option\n-  b) For Fiber Optic Internet Service + Electronic Check Payment Option","1569f940":"**Gender Analysis**","8f90afdb":"## Inference: \nWhen compared to the DSL lines, Fiber Optic Services seemed to be the most affected ones. People who used these services where churned more. Specially seniors male (for a long term) and Junior Female (for a short term) are the most affected ones. Usually, everyone opt for fiber-optic networks, because it  significantly improves the speed and reliability of the net connectivity. Therefore increasing bandwidth intensity, staying in the same price as basic broadband, resolving connectivity issues within few hours etc can help the customers to retain for a long time.","b180d20d":"## Reading the inputs - Data preparation","a69eedb4":"# PART - 1\n\nOkie! Upon seeing this, It is now our choice whether or not to delete this 11 rows . The reason behind this is, the last column on 'Churn' says all these are customers are existing customer. Our actual aim of this kernel is to focus on the customers who had left. We need to find the best possible reasons for leaving the company. Hence we will now take up the Kernel to the next level on splitting the dataset with condition **CHURN = YES**","86f8b19e":"## 2. Comparing the Internet Services used by M\/F customers \n-  a) availing DSL services by Seniors and Juniors for less than 10 months and more than 10 months\n-  b) availing Fiber Optic services by Seniors and Juniors for less than 10 months and more than 10 months","43599c04":"## Random forests\n\nRandom forests are an ensemble learning method, where the results from multiple decision trees are combined to make a final prediction. For example, a random forest may be made up of 10 decision trees, 7 of which make a prediction for \u2018churn\u2019 and 3 of which make a prediction for \u2018no churn\u2019. The final prediction for the forest will be \u2018churn\u2019.\n\nTree ensembles have become very popular due to their impressive performance on many real world problems.","f5b65d1b":"## Inference:  \nThe above graph shows that the Senior Male customers who used the phone service less than 10 months  and Junior female customers who used phone service less than 10 months are the the most affected. As a suggestion, Seniors are known for developing long-term brand loyalty, so an honest and forthright approach is vital to reaching this important segment of the population. Schemes like No Connection fees, no hidden charges, Telephone Lines for the Elderly and Retired, FREE Outbound Call Baring etc can make the Senior people to retain with the telecom service provider for a long time. Similarly, to attract junior people, Teens don\u2019t like intrusive ads. So we can cutshort the ad based calls. Ensure that advertising targeted at teens relates to their specific needs and interests. The bets way is we can use content marketing method to target them.","4b23ccbd":"## 5. Now, let's find comparing the combination of no.of M\/F customers using phone service  + System Initiated payment method.","7020627f":"Exactly as we suspected! The unpruned tree gets a perfect score on the training set, but a relatively lower score (73%) on the test set. Our pruned tree is less accurate on the training set, but performs better when presented with the out-of-sample test data.","a9ad7cb7":"Well, let us now pull out the 1869 existing customers alone... And there we start our analysis","106cec06":"## Okie! Lets now clean and transform the Data\n\nThe above information on the dataset shows there is no missing values. But, Some data that should be categorical are saved as number. So, why should we do this basically? This is because soemtimes, numerical variable is converted to categorical variable to make our analysis simpler and also might enhance the explanatory power. On the other hand, we convert categorical variables to numeric variables, because the former is known to hide and mask lots of interesting information in a data set. It\u2019s crucial to learn the methods of dealing with such variables. If we consider only numerical variables, without caring the categorical data, we never actually get an accurate model.\n\nHence have a sharp eye on the dtype of the variable.","59e449c6":"## 9. Avg Monthly Charges for Services availed","efe851e3":"## Logistic regression\n\nLogistic regression is one of the more basic classification algorithms in a data scientist\u2019s toolkit. It is used to predict a category or group based on an observation. Logistic regression is usually used for binary classification (1 or 0, win or lose, true or false). The output of logistic regression is a probability, which will always be a value between 0 and 1. While the output value does not give a classification directly, we can choose a cutoff value so that inputs with with probability greater than the cutoff belong to one class, and those with less than the cutoff belong to the other.\n\nFor example, if the classifier predicts a probability of customer attrition being 70%, and our cutoff value is 50%, then we predict that the customer will churn. Similarly, if the model outputs a 30% chance of attrition for a customer, then we predict that the customer won\u2019t churn.","cf0200ee":"## Inference:\nCustomers who does not avail any internet service are paying around dollor 50, while those with one service or more  are paying double as  dollor 100. As the number of services availed increases, the Average Monthly Charges are increasing linearly.","4fe7ba4f":"Looks like the blank \u2018TotalCharges\u2019 values were for customers with 0 months tenure. We will adjust these values to $0. Also, we aim to convert the data type to float64 , so if there is a non-numeric value then it can handle it.","fd436691":"So, we see Male\/female Seniors are comparitively less than their respective  Juniors. Now, we shall split the case study as per the following parts.\n\nInstead of comparing the Senior and Junior versions of the same gender, we will compare the Male and Female versions of the following case studies\n\n## 1. Comparing the Phone Services used by M\/F customers \n  -  **a)  for less than 10 months**\n  -  **b)  and more than 10 months**","eb3e8d39":"### Focusing on Male customers exclusively     \n(then followed by female count)","c7b16619":"The overall accuracy of the model has decreased, but the precision and recall scores for predicting a churn have improved. ","ec7c6d20":"## Inference:\n\nHere, almost the Senior count is neglegible. It seems that this facility is not mostly utilised by the seniors. Also, the junior people tend to be more affected. Hence we need to concentrate on both the sectors to increase the senior customers and to retain the existing customers. Measuring time resolution, Prioritising mission critical issues etc might help to retain the customers. FRom the graph, Junior (Female) are the most affected people for a short period and a long period by availing internet service along with Tech support sevices.","a5d8517b":"Next we\u2019ll convert the categorical values into numeric values, so our ML algorithms can process the data. We will also remove the columns not used in the predictive model.","06539ca1":"## 3.  Comparing the Internet Services used by M\/F customers along with Tech Support services","add02c84":"An unpruned tree is effectively trying to sort every training example \u2018perfectly\u2019 into its own leaf. We will get very good \u2018accuracy\u2019 when testing against the training set, but it is likely that the model is over fitted. Let\u2019s see what kind of accuracy each of the trees get on test and training sets:","b2b2f111":"**Automatic Payments:**\nBilling Systems provide facility to capture credit card or debit card information and automatic payment methods on monthly basis.\n\nIf payment method is set automatic using either credit card or debit card, payment requests are generated automatically after every invoice or on a given date and these requests are sent to the payment gateways (or banks) for payment authorization.\n\nOnce all the payments are authorized, they are uploaded into the billing system to settle down the due invoices.\n\n**Manual Payments:**\nIf the payments are made using cash or cheque, then either it can be entered into the system upfront the customer or if this is collected by some agencies, then all such payments are collected and posted to the billing system using automated methods provided by the billing system.\n\nFor all the payments received, payment files are prepared with a predefined format and then they are pushed automatically to a predefined location from where Billing System picks them up and uploads into the billing database.\n\nThere may be a situation, when a payment made by credit card or cheque does not go through. If this payment is already posted into the system, then it needs a cancellation to adjust the amount. Billing System provides utilities to handle failed or cancelled payments.\n\n## 4. Now, let's find comparing the combination of no.of M\/F customers using phone service  + Customer Initiated payment method.","db812818":"# PART - 2\n\nChurn Prediction using Machine Learning Algorithms","0eb207b9":"# Customer Churn Prediction \n\nChuring is nothing but a customer stops doing business with that comany. Every business is keen to know the reasons behind the customers who left and mainly it becomes a important task to atleast retain the existing customers. Than implemeting plans to new customer, it is the existing customer who can generate additional customer referrals. \n\nCustomer retention can be achieved with good customer service and products. But the most effective way for a company to prevent attrition of customers is to truly know them. The vast volumes of data collected about customers can be used to build churn prediction models. Knowing who is most likely to defect means that a company can prioritise focused marketing efforts on that subset of their customer base. Preventing customer churn is critically important to the telecommunications sector, as the barriers to entry for switching services are so low.\n\nIn this Kernel, we will examine the following:\n-  a) What are all the factors behind the people who left the company\n-  b) customer data  with the aim of building and comparing several customer churn prediction models. \n\n\n***Kindly Upvote if anyone finds this kernel helpful. I also request you to provide suggestions to strengthen the kernels purpose.***","9d89ba8e":"This is useful.\n\nWe can see that there are columns that have a minimum value of zero (0). On some columns, a value of zero does not make sense and indicates an invalid or missing value. So, we will now take a in-depth look into these colums. ","4d621320":"### Cross Validation on Random Forest","ebe1c411":"Same like above,  \n## 7. The next  Comparison is between the no.of M\/F customers using Internet services  + System Initiated payment method\n\n### Case 1\n-  a) For DSL Internet Service + Bank Transfer Payment Option\n-  b) For Fiber Optic Internet Service + Bank Transfer Payment Option","6db36ecf":"### Case 2\n-  a) For DSL Internet Service + Credit Transfer Payment Option\n-  b) For Fiber Optic Internet Service + Credit Transfer Payment Option","74974576":"It is a binary (2-class) classification problem. The number of observations for each class is not balanced. There are 7043 observations with 20 input variables and 1 output variable. The variable names are as follows","a00faaa3":"In these 1869 Existing customers, how many are male and how many are female??\n\nIt is an important question because gender based analysis can help us learn what kind of customers were affected severely. Hence, a telecom company might launch offers to attract them.\n","74891c23":"We got 81% classification accuracy from our logistic regression classifier. But the precision and recall for predictions in the positive class (churn) are relatively low, which suggests our data set may be imbalanced.\n\nso, How to handle imbalanced classes?\n\nIt is also important to look at the distribution of how many customers churn. If 95% of customers don\u2019t churn, we can achieve 95% accuracy by building a model that simply predicts that all customers won\u2019t churn. But this isn\u2019t a very useful model, because it will never tell us when a customer will churn, which is what we are really interested in.","d015e914":"Alright! I just wanted to check the ratio of the people who used phone service and left the service provider. It seems that there are a lot of people who have been affected after using the phone service. Hence, we will consider the case, where ** 'PhoneService'== 'Yes'**\n\nNext, we need to check the contract type in order check the list of customers who churned the most.","8181e141":"## Decision Trees\n\nUsing tree-based algorithms such as decision trees or random forests can result in good models for unbalanced datasets. If the minority class exists in one area of the feature space, a tree will be able to separate the class into a single node. For example, if 99% of customers who stream movies tend to churn, then a tree-based algorithm will likely pick this up. \n\nA decision tree is a supervised learning method that makes a prediction by learning simple decision rules from the explanatory variables. Decision trees have the following advantages:\n\n-  Trees can be visualised, which makes them easy to interpret\n-  They can handle numerical and categorical data\n-  We can easily validate the model using statistical tests\n\nThe downsides to decision trees:\n\n-  Decision trees are very prone to overfitting the training data, and often do not generalise well\n-  Small variations in the training data can cause a completely different tree to be generated\n-  Decision tree learning algorithms are based on heuristic algorithms like the greedy algorithm, which make locally optimal decisions at each node. These algorithms cannot guarantee a globally optimal decision tree\n\nDespite their downsides, decision trees can be a good starting point for developing predictive models that generalise better, like random forests.","7e8ef8b2":"### Case 2\n-  a) For DSL Internet Service + Mailed Check Payment Option\n-  b) For Fiber Optic Internet Service + Mailed Check Payment Option","999d137b":"The class for churn is only around 25% of the total population of samples. There is a real risk that a model trained on this data may only make too many predictions in favour of the majority class. There are a number of techniques for handling imbalanced classes:\n\n ## Down-sample the majority class","ee65ecbb":"### Cross Validation on Decision tree Classifier","b6d02c6e":"## Inference:\n\nCustomers who does not avail any internet services are churning least,  Customers who are availing just one Online Service are churning most. ","f5bdffbc":"## Predictive modelling\n\nWe will consider several different models to predict customer churn. To ensure we are not over-fitting to our data, we will split the 7,043 customer records into a training and test set, with the test set being 25% of the total records.","4950677c":"### Cross Validation on Logistic Regression","09469bd3":"## Correlations between customer data features and customer churn\n\nTo decide which features of the data to include in our predictive churn model, we\u2019ll examine the correlation between churn and each customer feature.","27e57a4c":"## Churn Observations","f4ad25c6":"### Focusing on Female customers exclusively","6bac084f":"So, before proceeding, it is evident that the people who used Fiber Optic Internet service where the most affected ones the DSL lines.","14e0c213":"## 8.  Number of Services Availed by Churned customers","b5337163":"### Avoiding multicollinearity\n\nTotal charges and monthly charges are highly correlated. We try to avoid strongly correlated explanatory variables in regression models. Correlation of explanatory variables is known as multicollinearity, and perfect multicollinearity occurs when the correlation between two independent variables is equal to 1 or -1.\n\nTo avoid unstable estimates of coeffiecients in our models, we will drop the \u2018TotalCharges\u2019 variable, as it is highly correlated to both \u2018Tenure\u2019 and \u2018MonthlyCharges\u2019.","404912ea":"Looks like we get similar performance to our pruned decision tree with a random forest. The next step would be to run several more rounds of cross validation using different training and testing sets to measure the performance of each of the models. We would then average the results from all rounds of cross validation to estimate the accuracy of each machine learning model."}}