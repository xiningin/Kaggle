{"cell_type":{"d33c3ddf":"code","d2e92e83":"code","a7e9c317":"code","48553e13":"code","3f7c054a":"code","9e8a8230":"code","f51bddb3":"code","1404490f":"code","c829e6fc":"code","046a8cee":"code","4e93a654":"code","4d99df2d":"code","8de13403":"code","0e4cdabc":"code","9f03420e":"code","9643d4ed":"code","4f9808eb":"code","a856b808":"code","59d475bf":"code","0852ce55":"code","82139683":"code","9157aeb5":"code","6ea5689d":"code","04e9f3f7":"code","8c5b4e9e":"code","cd4d9ca5":"code","6c93b64c":"code","1e633b6b":"code","b1c74efa":"code","ad2890e8":"code","4452e609":"code","4ac30296":"markdown","24c174ba":"markdown","1eb5487d":"markdown","d84ada4a":"markdown","579be8ff":"markdown","af79385f":"markdown","d4a4cbb3":"markdown","8a0ba599":"markdown","c1a1469b":"markdown","2665e27f":"markdown","0471aa81":"markdown","2cdaee9c":"markdown","a7729432":"markdown"},"source":{"d33c3ddf":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nsns.set()","d2e92e83":"data=pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndata.head()","a7e9c317":"data.describe()","48553e13":"data.isnull().sum()\n#no null value","3f7c054a":"#except from pregnancies and outcome no other value can have a minimum of zero. So we replce it by their medians\ndata['Glucose']=data.Glucose.mask(data.Glucose == 0,data['Glucose'].median())\ndata['BloodPressure']=data.BloodPressure.mask(data.BloodPressure == 0,data['BloodPressure'].median())\ndata['SkinThickness']=data.SkinThickness.mask(data.SkinThickness == 0,data['SkinThickness'].median())\ndata['Insulin']=data.Insulin.mask(data.Insulin == 0,data['Insulin'].median())\ndata['BMI']=data.BMI.mask(data.BMI == 0,data['BMI'].median())\npd.set_option(\"max_rows\", None)\ndata","9e8a8230":"data.describe()","f51bddb3":"# we can see there are outlier in insulin. further confirming it by plotting it\nsns.histplot(data['Insulin'])","1404490f":"p=data[\"Insulin\"].quantile(.98)\ndata2=data[data['Insulin']<p]\nsns.histplot(data['Insulin'])","c829e6fc":"#Now we have removed all the outliers\n#Reset Index\ndata_cleaned=data2.reset_index(drop=True)","046a8cee":"data_cleaned.describe(include='all')","4e93a654":"f,(ax1, ax2, ax3, ax4, ax5, ax6, ax7)=plt.subplots(1,7, sharey=True , figsize=(18,3))\nax1.scatter(data_cleaned['BMI'],data_cleaned[\"Outcome\"])\nax1.set_title(\"Outcome and BMI\")\nax2.scatter(data_cleaned['Insulin'],data_cleaned[\"Outcome\"])\nax2.set_title(\"Outcome and Insulin\")\nax3.scatter(data_cleaned['SkinThickness'],data_cleaned[\"Outcome\"])\nax3.set_title(\"Outcome and Skin Thickness\")\nax4.scatter(data_cleaned['Glucose'],data_cleaned[\"Outcome\"])\nax4.set_title(\"Outcome and Glucose\")\nax5.scatter(data_cleaned['Age'],data_cleaned[\"Outcome\"])\nax5.set_title(\"Outcome and Age\")\nax6.scatter(data_cleaned['BloodPressure'],data_cleaned[\"Outcome\"])\nax6.set_title(\"Outcome and Blood Pressure\")\nax7.scatter(data_cleaned['DiabetesPedigreeFunction'],data_cleaned[\"Outcome\"])\nax7.set_title(\"Outcome and DPF\")","4d99df2d":"target=data_cleaned['Outcome']\ninputs=data_cleaned[['BMI','Insulin','SkinThickness','Glucose','Age','BloodPressure','Pregnancies','DiabetesPedigreeFunction']]","8de13403":"from sklearn.preprocessing import StandardScaler","0e4cdabc":"Scaler=StandardScaler()\nScaler.fit(inputs)\nx_scaled=Scaler.transform(inputs)\nx_scaled","9f03420e":"from sklearn.model_selection import train_test_split","9643d4ed":"x_train,x_test,y_train,y_test=train_test_split(x_scaled,target,test_size=.1,random_state=42,shuffle=True)","4f9808eb":"x_train.shape,x_test.shape,y_train.shape,y_test.shape","a856b808":"x=sm.add_constant(x_train)","59d475bf":"x.shape","0852ce55":"reg=sm.Logit(y_train,x)\nresult=reg.fit()","82139683":"result.summary()","9157aeb5":"#predicted values\ny_hat=result.predict()\ny_hat","6ea5689d":"#actual values\nnp.array(y_train)","04e9f3f7":"result.pred_table()","8c5b4e9e":"cm_df=pd.DataFrame(result.pred_table())\ncm_df.columns=['predicted 0','Predicted 1']\ncm_df=cm_df.rename(index={0:'Actual 0',1:'Actual 1'})\ncm_df","cd4d9ca5":"cm=np.array(cm_df)\naccuracy=(cm[0,0]+cm[1,1])\/cm.sum()\naccuracy","6c93b64c":"sns.histplot(y_train-y_hat,kde=True)\nplt.title(\"Residual PDF\", size=18)","1e633b6b":"x_test=sm.add_constant(x_test)","b1c74efa":"def confusion_matrix(data,y_test,model):\n    pred_value=model.predict(data)\n    bins=np.array([0,.5,1])\n    cm=np.histogram2d(y_test,pred_value,bins=bins)[0]\n    accuracy=(cm[0,0]+cm[1,1])\/cm.sum()\n    return cm,accuracy","ad2890e8":"cm=confusion_matrix(x_test,y_test,result)\ncm","4452e609":"print('misclassification rate:'+str((11+6)\/59))","4ac30296":"### Train Test Split","24c174ba":"### Data Visualization","1eb5487d":"### Declare indep and dep var","d84ada4a":"### Standardisation","579be8ff":"##### The LLR p-value is very small so our accurate  and  Pseudo-R squared value is between .2 and .4 ","af79385f":"### Data Cleaning","d4a4cbb3":"### Regression","8a0ba599":"### Accuracy","c1a1469b":"### Import libraries","2665e27f":"### Testing","0471aa81":"### Load the data","2cdaee9c":"### Plottting","a7729432":"##### Our test accuracy is less than train accuracy but the difference is very small so our model is accurate."}}