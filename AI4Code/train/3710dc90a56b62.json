{"cell_type":{"42b0ebf9":"code","e418ca2c":"code","1e514763":"code","d19a88dd":"code","dad1d4d4":"code","84b593fc":"code","766f617b":"code","a498f3da":"code","89578481":"code","cfbb3d55":"code","fee4b91d":"code","aa8eceaa":"code","bb8c0254":"code","631c2dc6":"code","5e1c0bd0":"code","2577b37c":"code","42dc32df":"markdown","39199d66":"markdown","57ef66f5":"markdown","85f28dc4":"markdown","bd677b4b":"markdown","1cc0237b":"markdown","5d8cd0a6":"markdown","841665d9":"markdown","7a186c85":"markdown","4fabbad1":"markdown","3eef2f7a":"markdown","cecee3f9":"markdown","0db15951":"markdown"},"source":{"42b0ebf9":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","e418ca2c":"from fastai import *\nfrom fastai.vision import *\nimport os\nimport pandas as pd\nfrom pathlib import Path","1e514763":"input_dir = Path(\"..\/input\")\nprint(os.listdir(input_dir))","d19a88dd":"train_dir = input_dir\/'train'\ntest_dir = input_dir\/'test'","dad1d4d4":"print(os.listdir(train_dir)[:5])\nprint(os.listdir(test_dir)[:5])","84b593fc":"labels_path = \"..\/input\/labels.csv\"\nlabels_csv = pd.read_csv(labels_path)\nlabels_csv.head()","766f617b":"tfms = get_transforms()\ndata = ImageDataBunch.from_csv(\n    path = \"..\/input\",\n    folder = \"train\",\n    suffix = \".jpg\",\n    test = \"test\/test\",\n    bs = 16,\n    size = 224,\n    ds_tfms = tfms,\n    num_workers = 0\n).normalize(imagenet_stats)\nprint(data.classes[:10])\ndata.show_batch(rows=2)","a498f3da":"learn = cnn_learner(data, models.resnet18, metrics=accuracy, model_dir=\"\/tmp\/models\")","89578481":"learn.fit_one_cycle(1)","cfbb3d55":"interp = ClassificationInterpretation.from_learner(learn)","fee4b91d":"interp.plot_multi_top_losses(4, figsize=(10, 10))","aa8eceaa":"interp.most_confused(min_val=5)","bb8c0254":"class_score, y = learn.get_preds(DatasetType.Test)","631c2dc6":"# let's first check the sample submission file to understand the format of the submission file\nsample_submission =  pd.read_csv(input_dir\/\"sample_submission.csv\")\ndisplay(sample_submission.head(3))","5e1c0bd0":"classes_series = pd.Series(os.listdir(test_dir))\nclasses_series = classes_series.str[:-4]\nclasses_df = pd.DataFrame({'id':classes_series})\npredictions_df = pd.DataFrame(class_score.numpy(), columns=data.classes)\nsubmission = pd.concat([classes_df, predictions_df], axis=1)","2577b37c":"submission.to_csv(\"submission.csv\", index=False)\nsubmission[:5]","42dc32df":"Check out the inout folder","39199d66":"## Evaluation\nCreate a ClassificationInterpretation object to generate confusion matrices and visualizations of the most incorrect images","57ef66f5":"Check out train- and test-folder","85f28dc4":"## Prediction\nLet the neural network predict. It predicts a probability for every possible class. The class with the highest probability is taken as the predicted class","bd677b4b":"Take a look at labels.csv","1cc0237b":"## Training","5d8cd0a6":"### Create a submission","841665d9":"## Setup","7a186c85":"## Introduction: Dog Breed Identification\n\nHow well can you distinguish different dog breeds?\n\nThe task of this competition is to do fine-grained image classification on images of different dog breeds.\n\nThis kernel shows you how to use the [fast.ai library](https:\/\/docs.fast.ai\/) to create a baseline model for the [Dog Breed Identification\n](https:\/\/www.kaggle.com\/c\/dog-breed-identification) competition.\n\nI already did the setup, evaluation and prediction, so that you can get right into the training of the CNN.\n\nTo learn more about the fast.ai library check out the [documentation](https:\/\/docs.fast.ai) and the [fast.ai course 'Practical Deep Learning for Coders'](https:\/\/course.fast.ai\/)","4fabbad1":"Typically, you would now create a confusion matrix, but there are 120 classes in this task, so the confusion matrix would be a mess. Fast.ai has this neat function that only shows the highest values of the confusion matrix:\n","3eef2f7a":"Save the train and test directories","cecee3f9":"Load in the data","0db15951":"Plot the four images with the highest loss"}}