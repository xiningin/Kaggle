{"cell_type":{"047d3b92":"code","5edfbfdd":"code","4354782b":"code","181296ef":"code","efd3e06b":"code","c540286b":"code","7d41b51a":"code","ffbe6610":"code","423f548e":"code","ee2b0cd8":"code","1520d77d":"code","ff323d4c":"code","2713d352":"code","37315a2a":"code","85dbbf63":"code","95b3ec6d":"markdown","9f48bad3":"markdown"},"source":{"047d3b92":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5edfbfdd":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom sklearn.preprocessing import LabelEncoder\nfrom keras.utils import to_categorical","4354782b":"df = pd.read_csv('\/kaggle\/input\/emg-dataset-of-cp\/EMG DATA FOR MODELLING. - Sheet1.csv')","181296ef":"df.drop(['NAME'],axis = 1, inplace = True)","efd3e06b":"X = df.iloc[:, :4].values\ny = df.iloc[:, 4].values","c540286b":"y = to_categorical(y)","7d41b51a":"X","ffbe6610":"y","423f548e":"from tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Sequential\ntf.config.experimental_run_functions_eagerly(True)","ee2b0cd8":"model = Sequential()","1520d77d":"model.add(Dense(64, activation='relu', input_shape=[4]))\nmodel.add(Dense(64))\nmodel.add(Dense(2, activation='softmax'))","ff323d4c":"model.compile(optimizer='sgd', loss='categorical_crossentropy',\n              metrics=['acc'])","2713d352":"model.fit(X, y, epochs=100)","37315a2a":"from tensorflow import lite\nconverter = lite.TFLiteConverter.from_keras_model(model)","85dbbf63":"tfmodel = converter.convert()\n\nopen('dr.tflite', 'wb').write(tfmodel)","95b3ec6d":"Accuracy: 70.68%","9f48bad3":"# Creating the TFlite model"}}