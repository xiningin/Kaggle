{"cell_type":{"3f25165a":"code","5644820d":"code","1e1abaac":"code","b806fa3f":"code","86e01aa8":"code","70065de8":"code","cbf3294f":"code","210dfc8b":"code","67487dc7":"code","eca90059":"code","938fb53c":"code","e1dc690d":"code","5052b15d":"code","37b6bb1d":"code","130bd9ec":"code","c6fdb295":"code","1f82b06a":"code","3945943e":"code","3ab30b6b":"code","b488ce75":"code","b24601aa":"markdown","209ce434":"markdown","3feaecf0":"markdown"},"source":{"3f25165a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5644820d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1e1abaac":"df=pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')\ndf1=df[['price', 'bedrooms', 'bathrooms', 'sqft_living','sqft_lot', 'floors', 'waterfront', 'view', 'condition','grade','sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated','lat', 'long', 'sqft_living15', 'sqft_lot15']]\ndf1.sample(2)","b806fa3f":"df1.describe()","86e01aa8":"df_sample=df1.sample(2)\ndisplay(pd.melt(df_sample, id_vars =['bedrooms'], value_vars =['price']))\ndisplay(pd.melt(df_sample, id_vars =['price'], value_vars =['bedrooms','bathrooms']))","70065de8":"plt.subplot(221)\ndf['bedrooms'].value_counts().plot(kind='bar', title='bedrooms', figsize=(16,9))\nplt.xticks(rotation=0)\n\nplt.subplot(222)\ndf['bathrooms'].value_counts().plot(kind='bar', title='bathrooms')\nplt.xticks(rotation=0)\n\nplt.subplot(223)\ndf['floors'].value_counts().plot(kind='bar', title='floors')\nplt.xticks(rotation=0)\n\nplt.subplot(224)\ndf['waterfront'].value_counts().plot(kind='bar', title='waterfront')\nplt.xticks(rotation=0)\n\nplt.show()","cbf3294f":"df1.boxplot()","210dfc8b":"df1['price'].unique()","67487dc7":"sns.displot(df1['price'])","eca90059":"corr = df1.corr()\nplt.figure(figsize=(30,10))\nsns.heatmap(corr, annot=True, square=True)\nplt.show()","938fb53c":"plt.figure(figsize=(30,10))\nsns.relplot(x='bedrooms', y='bathrooms', hue='price', data=df1)","e1dc690d":"df2=df[['price', 'bedrooms', 'bathrooms','floors']]\nsns.pairplot(df2, hue=\"floors\",diag_kind=\"hist\")","5052b15d":"for c in df2:\n    grid= sns.FacetGrid(df, col='floors')\n    grid.map(plt.hist, c)","37b6bb1d":"sns.histplot(data=df1, x='yr_built')","130bd9ec":"sns.histplot(data=df1, y=\"grade\")","c6fdb295":"sns.histplot(data=df1, x=\"condition\", binwidth=0.1)","1f82b06a":"sns.histplot(data=df1, x='sqft_lot15', bins=10)","3945943e":"df1.columns","3ab30b6b":"sns.histplot(data=df1, x='sqft_living15', kde=True)","b488ce75":"ax = sns.violinplot(x=\"bedrooms\", y=\"bathrooms\", data=df2)","b24601aa":"https:\/\/seaborn.pydata.org\/generated\/seaborn.FacetGrid.html","209ce434":"# sns.histplot","3feaecf0":"# Reference\n\nhttps:\/\/towardsdatascience.com\/how-to-enhance-your-visualizations-for-exploratory-data-analysis-using-seaborn-and-facetgrid-15d9d0251b5c\n\nhttps:\/\/towardsdatascience.com\/how-to-perform-exploratory-data-analysis-with-seaborn-97e3413e841d\n\nhttps:\/\/www.analyticsvidhya.com\/blog\/2021\/05\/exploratory-data-analysis-eda-a-step-by-step-guide\/"}}