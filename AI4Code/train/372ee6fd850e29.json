{"cell_type":{"c52fbf30":"code","ab4dfe7a":"code","f94425d2":"code","2cbf454e":"code","ea48a689":"code","044570db":"code","faf041dd":"code","591cf2e9":"code","3a538d6c":"code","daeb9391":"code","e45c3fec":"code","1584ed6e":"code","da487a33":"code","ce96049c":"code","4795bf98":"code","b8df924d":"code","c4e62581":"code","365d0060":"code","d55cab07":"code","24a3a73e":"code","3a5fb573":"code","aca3521b":"code","2e6f88d3":"code","b30c7249":"code","2bbdcf22":"code","e0ac7ea0":"code","8b489f80":"code","9a3eeeaa":"code","e8fa8f88":"code","72a38832":"code","3148cb81":"code","13aeae27":"code","c30160eb":"code","53ab3b1c":"code","041009d3":"code","3b97bcdb":"code","23779471":"code","2fba7a30":"code","a01476e3":"code","bbb57b2b":"code","47fa46ba":"markdown","1cb0dadc":"markdown","56c96298":"markdown","1ca9d64f":"markdown","85778b76":"markdown","edf7385d":"markdown","3831cdbe":"markdown","026fedbc":"markdown","338b2121":"markdown","b75a9581":"markdown","1a938701":"markdown","1763e69b":"markdown","6f9e0257":"markdown","e84ee905":"markdown","64e948ed":"markdown","feba33b8":"markdown","cb5b2a76":"markdown","31a9ade3":"markdown","f26807a5":"markdown","b2ad6f8b":"markdown","68b014ac":"markdown","cf8aa5f8":"markdown","c98db1bf":"markdown"},"source":{"c52fbf30":"\nimport numpy as np \nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt \n\nimport datetime\nimport calendar\nimport matplotlib.dates as mdates\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ab4dfe7a":"#Read data from locally stored CSV.  The CSV file is from Kaggle.\ndf = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')","f94425d2":"#There are too many columns to display in a regular view, so .T will be used to transpose.\ndf.head().T","2cbf454e":"df.describe()","ea48a689":"#Create a month numeric column to be used to create a DateTime\nd = {'January':1, 'February':2, 'March':3, 'April':4, 'May':5, 'June':6,\\\n     'July':7, 'August':8, 'September':9, 'October':10, 'November':11, 'December':12}\ndf['month'] = df.arrival_date_month.map(d)\ndf.head(3)","044570db":"#Rename arrival_date_year\/month columns to be able to concatenate them all for a DateTime column\ndf.rename(columns={'arrival_date_year': 'year', 'arrival_date_day_of_month': 'day'}, inplace=True)\n\n#Create datetime value\ndf['arrival_date'] = pd.to_datetime(df[['year', 'month' , 'day']])","faf041dd":"#Values assigned will be 0-6, with Monday = 0 and Sunday = 6.  \n#With this logic, the code in the next cell can be used to create a weekend\/weekday column.\ndf['arrival_day_of_week'] = [x.dayofweek for x in df.arrival_date]","591cf2e9":"#Fridays are 5's and Saturdays are 6's.  Where 5 or 6, put a 1 to indicate the arrival\n#date was on a weekend and put a 0 to indicate it wasn't a weekend.\ndf['arrival_day_is_weekend'] = np.where(df['arrival_day_of_week'] >= 5, 1, 0)","3a538d6c":"df['cancel_rate'] = df['previous_cancellations'] \/ \\\n    (df['previous_cancellations'] + df['previous_bookings_not_canceled'])\n\ndf['cancel_rate'].fillna(0, inplace=True)\n\ndf[df.cancel_rate > 0].head(3)","daeb9391":"#Replacing 0's with 1's in the adult column on the assumption \n#that an adult must check in and use the room.\ndf['adults'].replace({0:1}, inplace=True) ","e45c3fec":"df['total_guests'] = df['adults'] + df['children'] + df['babies']\ndf[df['total_guests'] > 1].head()","1584ed6e":"df['total_nights_stay'] = df['stays_in_week_nights'] + df['stays_in_weekend_nights']","da487a33":"#Working on rows where total_nights_stay <= 0.  This appears to be a data quality issue.\n#If a guest stayed and checked out, we would assume they stayed at least one night.\ndf[['total_nights_stay', 'stays_in_week_nights', 'stays_in_weekend_nights']]\\\n    [(df['total_nights_stay'] <= 0) & (df['reservation_status'] == 'Check-Out')]\\\n    .groupby('total_nights_stay').count()","ce96049c":"#We know that there are rows where total_nights_stay == 0.  Are these all Canceled\n#or No-Show?  Let's take a look to be safe.  If we're wanting to change these all to 1,\n#it would be beneficial to make sure 0's show up in all reservation_status types.\ndf[['total_nights_stay', 'reservation_status']][df['total_nights_stay'] <= 0]\\\n    .groupby('reservation_status').count()","4795bf98":"#There aren't a ton of rows where total_nights_stay is 0 for Canceled or No-Show.\n#Considering that we might change those rows to a 1, let's make sure that we do see plenty\n#of rows with 1+ in those groups.  The thought is that the data was put together in a way\n#that when someone cancels or no-shows, they automatically show as 0 nights stay.\ndf[['total_nights_stay', 'reservation_status', 'adr']][df['reservation_status'] != 'Check-Out']\\\n    .groupby(['reservation_status', 'total_nights_stay']).count()","b8df924d":"#Find the rows where total_nights_stay = 0, and the arrival day is not a weekend.\n#Place a 1 in the stays_in_week_nights column.\ndf.loc[((df['total_nights_stay'] == 0) & (df['arrival_day_is_weekend'] == 0)\\\n          ), 'stays_in_week_nights' ] = 1","c4e62581":"#Find the rows where total_nights_stay = 0, and the arrival day is a weekend.\n#Place a 1 in the stays_in_weekend_nights column\ndf.loc[((df['total_nights_stay'] == 0) & (df['arrival_day_is_weekend'] == 1)\\\n          ), 'stays_in_weekend_nights' ] = 1","365d0060":"#We create the total_nights_stay column based on the sum of the week night and\n#and weekend night columns.  \n#Redo total_nights_stay column to reflect our changes:\ndf['total_nights_stay'] = df['stays_in_week_nights'] + df['stays_in_weekend_nights']","d55cab07":"df['total_dollar'] = df['total_nights_stay'] * df['adr']","24a3a73e":"df['total_previous_bookings'] = df['previous_cancellations'] + df['previous_bookings_not_canceled']","3a5fb573":"df[['is_repeated_guest', 'cancel_rate']].groupby('is_repeated_guest').agg(['min', 'max'])","aca3521b":"#If a guest has previously cancelled, they will considered a repeat guest.\n#Showing 3 rows where guests have previous cancellations and \n#non_cancellations, but are not listed as a repeat guest (0).\n\nres_non_repeat_w_cancel_rate_count = df['is_repeated_guest'][(df.is_repeated_guest == 0) \\\n                                        & (df.cancel_rate > 0)].count()\n\nprint('There appear to be {0} rows where we see previous cancellations and\\\nvisits, but the guest shows as a new guest.'.format(res_non_repeat_w_cancel_rate_count))\n\ndf[['previous_cancellations','previous_bookings_not_canceled', 'is_repeated_guest', \\\n       'cancel_rate']][(df.is_repeated_guest == 0) & (df.cancel_rate > 0)].head(3)","2e6f88d3":"#Double checking, here are examples where the guest is not a repeat guest, but show\n#both previous cancellations and previous stays.\ndf[['previous_cancellations','previous_bookings_not_canceled', 'is_repeated_guest', 'cancel_rate']]\\\n    [(df.is_repeated_guest == 0) & (df.cancel_rate > 0) & (df.cancel_rate < 1)].tail(3)","b30c7249":"#Aggregating guests listed as non repeat guests that have both previous cancellations\n#and stays.  Grouping into reservation status to make sure that they do not all fit\n#into a single value.\ndf[['is_repeated_guest', 'reservation_status', 'previous_cancellations', 'previous_bookings_not_canceled']]\\\n    [(df['is_repeated_guest'] == 0)\\\n    & ((df['previous_cancellations'] > 0) & (df['previous_bookings_not_canceled'] > 0))]\\\n    .groupby(['is_repeated_guest', 'reservation_status']).count()","2bbdcf22":"print('There are {} rows where the customer is listed as a repeated guest, \\\nbut they have 0 previous bookings. \\nHere are the first 5 rows:'\\\n    .format(df[['previous_cancellations','previous_bookings_not_canceled', \\\n    'is_repeated_guest', 'cancel_rate']][(df.is_repeated_guest == 1) \\\n    & (df.previous_cancellations == 0) & (df.previous_bookings_not_canceled == 0)].shape[0]))\n\ndf[['previous_cancellations','previous_bookings_not_canceled', 'is_repeated_guest', 'cancel_rate']]\\\n    [(df.is_repeated_guest == 1) & (df.previous_cancellations == 0)\\\n    & (df.previous_bookings_not_canceled == 0)].head()","e0ac7ea0":"#Checking a few rows where the customer is listed as a previous guest but \n#has no previous reservation.\ndf[(df.is_repeated_guest == 1) & (df.previous_cancellations == 0) \\\n      & (df.previous_bookings_not_canceled == 0)].head(10).T","8b489f80":"#The columns for number of nights stayed have been adjusted to reflect at least\n#1 night for either weekend or weeknight check-in, so this should return nothing.\nprint('There are {} rows where the total nights stayed are 0 or less.'\\\n      .format(df['total_nights_stay'][df.total_nights_stay <=0].count()))\n\ndf[['is_canceled', 'reservation_status', 'total_nights_stay','adr']]\\\n    [df['total_nights_stay'] <= 0].groupby(['is_canceled', 'reservation_status',\\\n    'total_nights_stay'], as_index=False).agg(['min', 'max', 'count'])","9a3eeeaa":"print('There are {} rows where the ADR is <= 0.'\\\n    .format(df['adr'][df['adr'] <= 0].count()))\n\ndf[['is_canceled', 'reservation_status', 'total_nights_stay','adr']]\\\n    [df['adr'] <= 0].groupby(['is_canceled', 'reservation_status','total_nights_stay']\\\n    , as_index=False).agg(['min', 'max', 'count'])","e8fa8f88":"#Where the customer is listed as a repeated guest, but has no previous bookings\n#they will be changed to 0.\ndf['is_repeated_guest'] = np.where(df['total_previous_bookings'] == 0\\\n                            , 0, df['is_repeated_guest'])","72a38832":"#Where the customer is listed as a first time guest, but has previous bookings\n#they will be changed to 1.\ndf['is_repeated_guest'] = np.where(df['total_previous_bookings'] > 0\\\n                            , 1, df['is_repeated_guest'])","3148cb81":"#Checking guests listed as first time guests to make sure they have only 0\n#in the cancel_rate column.\ndf[['is_repeated_guest', 'cancel_rate']][df['is_repeated_guest'] == 0]\\\n    .groupby('is_repeated_guest').agg(['min','max'])","13aeae27":"#Previous cancellations should be all 0's for customers with a 0 in cancel_rate.  \n#Checking the sum to confirm.\ndf[['previous_cancellations']][df['cancel_rate'] == 0].sum()","c30160eb":"#Change min ADR to 0.  $0 a night is feasible based on a rewards program.\n#I don't like the thought of a customer receving money for their stay.  \n#I think that's a data issue.\ndf['adr'] = df['adr'].clip(lower=0.0)","53ab3b1c":"#Taking a look at null counts and percentages of columns that are null\ndata = {'null_count': df.isnull().sum(), 'null_percent': (df.isnull().sum()\/df.shape[0]) * 100}\ndf_nulls = pd.DataFrame(data=data)\ndf_nulls[df_nulls['null_count'] > 0].sort_values(by='null_count', ascending=False)","041009d3":"df['children'].fillna(0, inplace=True)\ndf['total_guests'] = df['adults'] + df['children'] + df['babies']\ndf[df['total_guests'] > 1].head()","3b97bcdb":"#How many unique values do we see in agent?\ndf.agent.nunique()","23779471":"#What about country?\ndf.country.nunique()","2fba7a30":"df['agent'].fillna(0.0, inplace=True)\ndf['country'].fillna('Unknown', inplace=True)\n\ndf.drop(columns=['company'], inplace=True)","a01476e3":"#This should no show nothing as we have dropped a column with lots of nulls,\n#and we have replaced nulls in other columns.\ndata = {'null_count': df.isnull().sum(), 'null_percent': (df.isnull().sum()\/df.shape[0]) * 100}\ndf_nulls = pd.DataFrame(data=data)\ndf_nulls[df_nulls['null_count'] > 0].sort_values(by='null_count', ascending=False)","bbb57b2b":"df.head().T","47fa46ba":"## There are a lot of people staying with 0 ADR.  The initial thought is that these customers are using reward points or some sort of voucher for their stay.","1cb0dadc":"## Create an arrival day of week.  This will be used to replace rows that have 0's in both stays in weekend or weekday nights:","56c96298":"## Data Dictionary Thoughts:\n### Possible data collection recommendation: These do not appear to be associated to a particular customer\/account number.  This additional data could be useful in indentifying possible cancellation patterns.","1ca9d64f":"## Create a boolean column indicating whether the arrival date was a weekday or weekend:","85778b76":"## Company is almost all Null values.  This will most likely be dropped.\n## Children has only 3 rows with Nulls.  Let's replace those with 0 and the recreate the total guests column so those rows are filled with the totals of adults and babies.","edf7385d":"# Some feature engineering:\n## Create an arrival date:","3831cdbe":"## Similarly, there are rows where the customer has no previous cancel or non-cancel event, but they are labeled as a repeat customer.  I pulled all columns for the first 5 observations to check things like reservation_status (maybe these were all canceled due to an input error).  Some of these have a reservation_status of Check-Out, indicating the party checked in, stayed the night, and then departed.  Another observation from this: someone checked out, but stayed 0 nights...?  The two observations with 0 nights also have 0 adr.","026fedbc":"### Data Dictionary:\n\n#### Hotel: Hotel (H1 = Resort Hotel or H2 = City Hotel)\n\n#### is_canceled: Value indicating if the booking was canceled (1) or not (0)\n\n#### lead_time: Number of days that elapsed between the entering date of the booking into the PMS and the arrival date\n\n#### arrival_date_year: Year of arrival date\n\n#### arrival_date_month: Month of arrival date\n\n#### arrival_date_week_number: Week number of year for arrival date\n\n#### arrival_date_day_of_month: Day of arrival date\n\n#### stays_in_weekend_nights: Number of weekend nights (Saturday or Sunday) the guest stayed or booked to stay at the hotel\n\n#### stays_in_week_nights: Number of week nights (Monday to Friday) the guest stayed or booked to stay at the hotel\n\n#### adults: Number of adults\n\n#### children: Number of children\n\n#### babies: Number of babies\n\n#### meal: Type of meal booked. Categories are presented in standard hospitality meal packages: Undefined\/SC \u2013 no meal package; BB \u2013 Bed & Breakfast; HB \u2013 Half board (breakfast and one other meal \u2013 usually dinner); FB \u2013 Full board (breakfast, lunch and dinner)\n\n#### country: Country of origin. Categories are represented in the ISO 3155\u20133:2013 format\n\n#### market_segment: Market segment designation. In categories, the term \u201cTA\u201d means \u201cTravel Agents\u201d and \u201cTO\u201d means \u201cTour Operators\u201d\n\n#### distribution_channel: Booking distribution channel. The term \u201cTA\u201d means \u201cTravel Agents\u201d and \u201cTO\u201d means \u201cTour Operators\u201d\n\n#### is_repeated_guest: Value indicating if the booking name was from a repeated guest (1) or not (0)\n\n#### previous_cancellations: Number of previous bookings that were cancelled by the customer prior to the current booking\n\n#### previous_bookings_not_canceled: Number of previous bookings not cancelled by the customer prior to the current booking\n\n#### reserved_room_type: Code of room type reserved. Code is presented instead of designation for anonymity reasons.\n\n#### assigned_room_type: Code for the type of room assigned to the booking. Sometimes the assigned room type differs from the reserved room type due to hotel operation reasons (e.g. overbooking) or by customer request. Code is presented instead of designation for anonymity reasons.\n\n#### booking_changes: Number of changes\/amendments made to the booking from the moment the booking was entered on the PMS until the moment of check-in or cancellation\n\n#### deposit_type: Indication on if the customer made a deposit to guarantee the booking. This variable can assume three categories: No Deposit \u2013 no deposit was made; Non Refund \u2013 a deposit was made in the value of the total stay cost; Refundable \u2013 a deposit was made with a value under the total cost of stay.\n\n#### agent: ID of the travel agency that made the booking\n\n#### company: ID of the company\/entity that made the booking or responsible for paying the booking. ID is presented instead of designation for anonymity reasons\n\n#### days_in_waiting_list: Number of days the booking was in the waiting list before it was confirmed to the customer\n\n#### customer_type: Type of booking, assuming one of four categories: Contract - when the booking has an allotment or other type of contract associated to it; Group \u2013 when the booking is associated to a group; Transient \u2013 when the booking is not part of a group or contract, and is not associated to other transient booking; Transient-party \u2013 when the booking is transient, but is associated to at least other transient booking\n\n#### adr: Average Daily Rate as defined by dividing the sum of all lodging transactions by the total number of staying nights\n\n#### required_car_parking_spaces: Number of car parking spaces required by the customer\n\n#### total_of_special_requests: Number of special requests made by the customer (e.g. twin bed or high floor)\n\n#### reservation_status: Reservation last status, assuming one of three categories: Canceled \u2013 booking was canceled by the customer; Check-Out \u2013 customer has checked in but already departed; No-Show \u2013 customer did not check-in and did inform the hotel of the reason why\n\n#### Date at which the last status was set. This variable can be used in conjunction with the ReservationStatus to understand when was the booking canceled or when did the customer checked-out of the hotel","338b2121":"# At this point, we have completed enough cleaning of the data that we will be able to move forward with some EDA and visualization in the next notebook.  Keep in mind that what we've done here doesn't mean that this data is at its absolute best state.  We are saying that we know we have made changes and we feel comfortable moving forward.  If we do see some issues later, we can always iterate and make changes in this stage.","b75a9581":"#### In this notebook, I am showing my final prep work on the Hotel Bookings data.  I have arrived to this point after starting some EDA and noticing values in the data that don't show what I would expect them to show.  There were a few iterations and this is where I landed.  Since this is a data set that I imagine has gone through some sort of ETL process, or something someone had put together after a SQL query, I do my best to replace data I have questions about with something I feel is more logical.  Of course, if this were a work setting, I would be able to meet with the person that this came from to look at some of the code going into this.","1a938701":"## Create a column for total number of guests:","1763e69b":"## We do not see this.  We see that cancel and no-show rows can have > 0 values in the nights stay column.  For this reason, we will change all rows with 0, to at least 1.  If we were able to meet with the person that put this data together, we would most likely have a more accurate solution, but we'll do what we can on this one.","6f9e0257":"## Changing values based on logic:","e84ee905":"## Create a column summing previous cancellations and non-cancellations:","64e948ed":"## That's not the case.  Looking below, it looks like there are just over 5,500 guests that have previous visits that are labeled as 0, or not a repeat guest:","feba33b8":"## What stands out from the describe?\n### There is a max lead time of 737 days!  Do hotels even allow that?  Is that a good data point?\n### Someone stayed 19 weekend nights.  Did this person\/family stay for 10-11 weeks?  Looking at stays_in_week_nights, this seems plausible as a 50 weekday stretch would be 10 weeks.\n### 55 adults in a single room? 10 children?  10 babies?\n### \\\\$5,400 for an average daily rate?\n### 8 Parking spots?  I guess that can work with 55 adults.\n### There are guests that show 0 total nights stay?\n### Someone averaged -\\\\$6.38\/night?","cb5b2a76":"## Create a column for total number of days, which is the sum of stays_in_week_nights and stays_in_weekend_nights:","31a9ade3":"## Create a column where previous bookings canceled is divided by the sum of cancels and non-cancels, or total visits:","f26807a5":"# Some validation:\n## With this new 'cancel_rate' column, my thought is that someone that is not a repeat guest (0), should have only a 0.0 in the cancel_rate column.","b2ad6f8b":"## At this point, we will drop the 'company' column.\n## We can see that agent is a float type, so we will change null's to 0.0.  Country is a 3 letter string, so we will replace null's with 'Unknown'.","68b014ac":"# Looking at Null's:","cf8aa5f8":"## I'm headed down a rabbit hole here.  There are customers that have checked out but are not repeat customers.  I will change any customer with a cancel_rate > 0 to a 1 in the is_repeated_guest column.  Any customer with 0 total bookings will be changed to 0 in the is_repeated_guest column as well.  This might fix a lot.","c98db1bf":"## Create a total \\$ Amount column:"}}