{"cell_type":{"3227a8b7":"code","1cd0da1f":"code","cfedeb34":"code","b97e7895":"code","b0e5bd45":"code","d8922c75":"code","cd3daed2":"code","85094799":"code","f699c12c":"code","39f82f8e":"code","0a21b47b":"code","0383a612":"code","00eb1da4":"code","b3132259":"code","2b44681c":"code","5084c083":"code","e8e1b90c":"code","0e4a60a7":"code","f7bf9ac5":"code","4016d62e":"code","05c55938":"code","0c312082":"code","ede725f7":"code","e30f739c":"code","8269987f":"code","8cb1942e":"code","d7f27497":"code","7c39ff2c":"markdown","c62d6eae":"markdown","ffb345a3":"markdown","bcc15262":"markdown","100e7773":"markdown","01bb4f05":"markdown","8dde9234":"markdown"},"source":{"3227a8b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nsns.set()\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1cd0da1f":"data_train = pd.read_csv('..\/input\/train_users_2.csv',parse_dates=['timestamp_first_active','date_account_created','date_first_booking'])\ndata_test = pd.read_csv('..\/input\/test_users.csv',parse_dates=['timestamp_first_active','date_account_created','date_first_booking'])\ndata_train.head()","cfedeb34":"data_test.head()\n# Note that 'date_first_booking' is completely missing in test data","b97e7895":"# Note incorrect minimum and maximum age values\ndata_train.describe()","b0e5bd45":"print ('Number of lines in the training data are,',data_train.shape[0])","d8922c75":"countries = pd.read_csv('..\/input\/countries.csv')\ncountries.head(10)","cd3daed2":"test_ids = data_test['id']\nNrows_train = data_train.shape[0]  \n\n# Store country names\nlabels = data_train['country_destination'].values\ndata_train1 = data_train.drop(['country_destination'], axis=1)\n\n# Combining the test and train data. If this is not done, the number of dummy variable columns do not match in test and train data.\n# Some items present in train data and are not present in test data. For example, browser type. \ndata_all = pd.concat((data_train1, data_test), axis = 0, ignore_index = True)\n\n# Dropping ids which are saved separately and date of first booking which is completely absent in the test data\ndata_all = data_all.drop(['id','date_first_booking'], axis=1)\n","85094799":"data_all.head()","f699c12c":"print(data_all.isnull().sum())","39f82f8e":"data_all.gender.replace('-unknown-', np.nan, inplace=True)\ndata_all.first_browser.replace('-unknown-', np.nan, inplace=True)","0a21b47b":"data_all.loc[data_all.age > 100, 'age'] = np.nan\ndata_all.loc[data_all.age < 18, 'age'] = np.nan","0383a612":"# Splitting date time data for date account created\ndata_all['dac_year'] = data_all.date_account_created.dt.year\ndata_all['dac_month'] = data_all.date_account_created.dt.month\ndata_all['dac_day'] = data_all.date_account_created.dt.day\n\n# Splitting date time data for time first active\ndata_all['tfa_year'] = data_all.timestamp_first_active.dt.year\ndata_all['tfa_month'] = data_all.timestamp_first_active.dt.month\ndata_all['tfa_day'] = data_all.timestamp_first_active.dt.day\n\ndata_all.drop('date_account_created',1, inplace=True)\ndata_all.drop('timestamp_first_active',1, inplace=True)","00eb1da4":"data_all.head()","b3132259":"data_all.describe()","2b44681c":"data_all.groupby('gender').age.agg(['min','max','mean','count'])","5084c083":"data_all.groupby('gender').age.mean().plot(kind='bar')","e8e1b90c":"data_all.gender.value_counts(dropna=False).plot(kind='bar')","0e4a60a7":"data_all.dac_year.value_counts(sort=False).plot(kind='bar', title='Number of User Accounts Created in a Year')","f7bf9ac5":"data_all.tfa_year.value_counts(sort=False).plot(kind='bar', title = 'Number of Users by First Active Year')","4016d62e":"data_train.country_destination.value_counts(normalize=True).plot(kind='bar',title='Countries Visited by AirBNB Users')","05c55938":"data_all.language.value_counts(sort=True)","0c312082":"#Note no null data now left\nprint(data_all.isnull().sum())","ede725f7":"# Import sklearn.preprocessing.StandardScaler\n#from sklearn.preprocessing import MinMaxScaler\n\n# Initialize a MinMax scaler, then apply it to the numerical features\n#scaler = MinMaxScaler()\n#numerical = ['age','dac_year','dac_month','dac_day','tfa_year','tfa_month','tfa_day']\n#data_all[numerical] = scaler.fit_transform(data_all[numerical])\n\n# Create categorical columns\nfeatures = ['gender','signup_method','signup_flow','language','affiliate_channel','affiliate_provider',\\\n            'first_affiliate_tracked','signup_app','first_device_type','first_browser']\n\n# get dummies\ndata_all = pd.get_dummies(data_all,columns=features)\n","e30f739c":"data_all.describe()","8269987f":"data_all.head()","8cb1942e":"# Splitting train and test for the classifier\nfrom xgboost.sklearn import XGBClassifier\nfrom sklearn.preprocessing import LabelEncoder\n\nV = data_all.values\nX_train = V[:Nrows_train]\nX_test = V[Nrows_train:]\n\n#Create labels\nlabler = LabelEncoder()\ny = labler.fit_transform(labels)\n\n# Implementation of the classifier (decision tree)\nxgb = XGBClassifier(max_depth=6, learning_rate=0.3, n_estimators=22,\n                    objective='multi:softprob', subsample=0.6, colsample_bytree=0.6, seed=0)               \nxgb.fit(X_train, y)\ny_pred = xgb.predict_proba(X_test) ","d7f27497":"#Taking the 5 classes with highest probabilities\nids = []  #list of ids\ncts = []  #list of countries\nfor i in range(len(test_ids)):\n    idx = test_ids[i]\n    ids += [idx] * 5\n    cts += labler.inverse_transform(np.argsort(y_pred[i])[::-1])[:5].tolist()\n\n#Generate submission\nsub = pd.DataFrame(np.column_stack((ids, cts)), columns=['id', 'country'])\nsub.to_csv('submission.csv',index=False)","7c39ff2c":"**Number of Users by Language**\n\nIt looks like most users are English speaks. ","c62d6eae":"**Data Cleanup**\n\n1. Replace missing age and first_browser to NAN\n3. Age will be filtered between 18-100 and set to NAN\n4. Date time data of 'time_first_active' and 'timestamp_first_active' to be split into day, month and year columns\n5. Categorization of all non-numeric data such as gender, language, device type, browser type etc. \n6. Drop 'time_first_active', 'date_of_boking' and timestamp_first_active' \n7. Store IDs separately\n8. Save 'country_destination' as target variable","ffb345a3":"![](https:\/\/cdn-images-1.medium.com\/max\/1600\/1*yZ1LPIcXnnW6Ubmp2M-0rQ.png)","bcc15262":"**Countries visited by Air BnB Users**\n\nIt looks for bulk of data there is no country desitnation specified. Second most visited place by users of Air BnB users is United States. ","100e7773":"**Yearly growth of number of accounts created**","01bb4f05":"**Age and Gender**\n\nNow we will explore to know, genderwise split among the users through number of males\/females and average age of users in each category. \n\n* Average age of the users hovers around 35. \n* There are more females users than male. ","8dde9234":"**Preprocessing Data \n**\n\n*Normalizing Numerical Features*\n\nOnly numerical data of age, year, date, day is normalized"}}