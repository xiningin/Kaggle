{"cell_type":{"e8a00f5c":"code","7091a0e3":"code","c4d755ac":"code","f55e4c5c":"code","6e93db6f":"markdown","b26175ac":"markdown","244c5fe8":"markdown","87cae08d":"markdown","78de26ca":"markdown","af91979a":"markdown"},"source":{"e8a00f5c":"from sklearn.datasets import load_iris\niris=load_iris()\nx=iris.data\ny=iris.target\nfeature=iris.feature_names\ntarget=iris.target_names\nprint(\"List of features are : \\n\",feature)\nprint(\"\\nThe target variables are :\\n\",target)\nprint(\"\\nFirst 15 datasets are :\\n\",x[:15])\nprint(\"\\nResult of target variable :\\n\",y[:15]) # 0 for setosa 1 for versicolor and 2 for virginica\n# for the this dataset changing y[:15] to y will give you a result which has 0, 1, 2","7091a0e3":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.7,test_size=0.3) \n# train size and test size is optional unless required\n# random_state=1 is also optional\n# sum of test_size and train_size should be 1\n# by default the ratio of train and test is 75 : 25\nprint(\"Size of original dataset\",len(x),len(y))\nprint(\"Size of training dataset\",len(x_train),len(y_train))\nprint(\"Size of testing dataset\",len(x_test),len(y_test))\nprint(\"\\n\")\nprint(\"Shape of original dataset\",x.shape,y.shape)\nprint(\"Shape of training dataset\",x_train.shape,y_train.shape)\nprint(\"Shape of testing dataset\",x_test.shape,y_test.shape)","c4d755ac":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics\nclassifier=KNeighborsClassifier(n_neighbors=3)\nclassifier.fit(x_train,y_train)\ny_pred=classifier.predict(x_test)\nprint(\"The accuracy is : \",metrics.accuracy_score(y_test,y_pred))","f55e4c5c":"sample=[[5, 5, 3, 2], [2, 4, 3, 5]]\nprediction=classifier.predict(sample)\nfor i in prediction:\n  print(i,target[i])\nprint()","6e93db6f":"Following is an example to load iris dataset","b26175ac":"Scikit learn has datasets for classification and one for classification.\n\n> For classification they are: iris and digits\n\n\n> For regression : Boston House Price Prediction \n\n","244c5fe8":"<a href=\"https:\/\/colab.research.google.com\/github\/sanjeev30798\/Machine-Learning\/blob\/main\/Scikit_learn_0.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","87cae08d":"KNN algorithm\n\nIn this algorithm the distance is calculated between a test data point and each of the training data point. Then the calculated distance is arranged in ascending order. From this top K are choosen and now, it will assign a class to the test point based on most frequent class of these rows. ","78de26ca":"For training a model we need to split the dataset between training and testing dataset","af91979a":"Now lets check with a sample data "}}