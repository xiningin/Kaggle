{"cell_type":{"e6a80177":"code","c89e43b2":"code","c5f2922a":"code","ec57c90a":"code","7e886f42":"code","3f1cbb5d":"markdown","f8c158d6":"markdown","ad965908":"markdown","3e4fbad8":"markdown","713f6516":"markdown","426b9ce4":"markdown"},"source":{"e6a80177":"import numpy as np\nimport pandas as pd\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nmit_test_data = pd.read_csv(\"..\/input\/mitbih_test.csv\", header=None)\nmit_train_data = pd.read_csv(\"..\/input\/mitbih_train.csv\", header=None)\n\nprint(\"MIT test dataset\")\nprint(mit_test_data.info())\nprint(\"MIT train dataset\")\nprint(mit_train_data.info())","c89e43b2":"# take a random distribution\nsample = mit_test_data.sample(25)\n\n# remove the target column\nsampleX = sample.iloc[:,sample.columns != 187]\n\nimport matplotlib.pyplot as plt\n\nplt.style.use('classic')\n\n# plt samples\nfor index, row in sampleX.iterrows():\n    plt.plot(np.array(range(0, 187)) ,row)\n\nplt.xlabel(\"time\")\nplt.ylabel(\"magnitude\")\nplt.title(\"heartbeat reccording \\nrandom sample\")\n\nplt.show()\n\nplt.style.use(\"ggplot\")\n\nplt.title(\"Number of record in each category\")\n\nplt.hist(sample.iloc[:,sample.columns == 187].transpose())\nplt.show()","c5f2922a":"print(\"Train data\")\nprint(\"Type\\tCount\")\nprint((mit_train_data[187]).value_counts())\nprint(\"-------------------------\")\nprint(\"Test data\")\nprint(\"Type\\tCount\")\nprint((mit_test_data[187]).value_counts())","ec57c90a":"from keras.utils import to_categorical\n\nprint(\"--- X ---\")\nX = mit_train_data.loc[:, mit_train_data.columns != 187]\nprint(X.head())\nprint(X.info())\n\nprint(\"--- Y ---\")\ny = mit_train_data.loc[:, mit_train_data.columns == 187]\ny = to_categorical(y)\n\nprint(\"--- testX ---\")\ntestX = mit_test_data.loc[:, mit_test_data.columns != 187]\nprint(testX.head())\nprint(testX.info())\n\nprint(\"--- testy ---\")\ntesty = mit_test_data.loc[:, mit_test_data.columns == 187]\ntesty = to_categorical(testy)","7e886f42":"from keras.models import Sequential\nfrom keras.layers import Dense, Activation\n\nmodel = Sequential()\n\nmodel.add(Dense(50, activation='relu', input_shape=(187,)))\nmodel.add(Dense(50, activation='relu'))\nmodel.add(Dense(5, activation='softmax'))\n\nmodel.compile(optimizer='adam',\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X, y, epochs=100)\n\nprint(\"Evaluation: \")\nmse, acc = model.evaluate(testX, testy)\nprint('mean_squared_error :', mse)\nprint('accuracy:', acc)","3f1cbb5d":"# How many date we have in each category?","f8c158d6":"## Random sample\n\nFor now let's take a random sample of the MIT train dataset.","ad965908":"# ECG Heartbeat Categorization\n\nThe goal is to be able to classify heart disease from heartbeat signal. There is a lot of data, let's try to make sens out of it.","3e4fbad8":"# Separate features and targets","713f6516":"# Keras model to make prediction","426b9ce4":"This seems to work pretty well!\n\nWork in progress"}}