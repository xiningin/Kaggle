{"cell_type":{"7a664fea":"code","6aff443b":"code","94a4082f":"code","06d7de17":"code","3bcf627a":"code","641a6627":"code","589eb36c":"code","148442a8":"code","f62f9c6e":"code","62411e63":"code","ba28b6fc":"code","be3406ba":"code","451e8832":"code","2b774374":"code","4ba42e18":"code","3efa5289":"code","add9510d":"code","d2575e77":"code","3e962d1a":"code","1fb1fb1d":"code","d04e2eee":"code","04a5d430":"markdown","b7015057":"markdown","3ab5bbdd":"markdown","fe167d96":"markdown","e1324c02":"markdown","bef4442b":"markdown","c718f243":"markdown","d01f5027":"markdown","6000fafe":"markdown"},"source":{"7a664fea":"\nimport numpy as np\nimport pandas as pd\n","6aff443b":"mushrooms = pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\nmushrooms.head()","94a4082f":"mushrooms.info()","06d7de17":"from sklearn.preprocessing import OrdinalEncoder\n\nencoder = OrdinalEncoder()\n\nmushrooms[mushrooms.columns] = encoder.fit_transform(mushrooms[mushrooms.columns])","3bcf627a":"mushrooms","641a6627":"X = mushrooms.drop('class', axis=1)\n\ny = mushrooms['class']","589eb36c":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","148442a8":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(random_state=0, solver='liblinear').fit(X_train, y_train)","f62f9c6e":"print(f\"Accuracy (Train): {model.score(X_train, y_train)}\")","62411e63":"print(f\"Accuracy (Test): {model.score(X_test, y_test)}\")","ba28b6fc":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(max_depth=5).fit(X_train, y_train)","be3406ba":"print(f\"Accuracy (Train): {model.score(X_train, y_train)}\")","451e8832":"print(f\"Accuracy (Test): {model.score(X_test, y_test)}\")","2b774374":"from sklearn.naive_bayes import GaussianNB\n\nmodel = GaussianNB().fit(X_train, y_train)","4ba42e18":"print(f\"Accuracy (Train): {model.score(X_train, y_train)}\")","3efa5289":"print(f\"Accuracy (Test): {model.score(X_test, y_test)}\")","add9510d":"from sklearn.svm import SVC\n\nmodel = SVC().fit(X_train, y_train)","d2575e77":"print(f\"Accuracy (Train): {model.score(X_train, y_train)}\")","3e962d1a":"print(f\"Accuracy (Test): {model.score(X_test, y_test)}\")","1fb1fb1d":"model = SVC(class_weight={0: 1, 1: 5}).fit(X, y)\n\nprint(f\"Accuracy: {model.score(X, y)}\")","d04e2eee":"from sklearn.metrics import plot_confusion_matrix\nimport matplotlib.pyplot as plt\n\ndisp = plot_confusion_matrix(model, X, y, display_labels=['edible', 'poisonous'], normalize=None)\n\nplt.grid(False)\n\nplt.show()","04a5d430":"# Confussion Matrix","b7015057":"People can avoid an edible mushroom labelled as poisonous but they cannot eat a poisonous mushroom labelled as edible.","3ab5bbdd":"## 3. Naive Bayes","fe167d96":"## Support Vector Machine","e1324c02":"# Ordinal Encoder","bef4442b":"## 2. Random Forest Classifier","c718f243":"## 1. Logistic Regression","d01f5027":"# Data","6000fafe":"# Models"}}