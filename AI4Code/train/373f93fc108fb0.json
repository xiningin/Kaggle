{"cell_type":{"27edbf19":"code","c4645706":"code","67796d39":"code","ccae794e":"code","08f8f7ca":"code","384b6ce5":"code","e09d748e":"code","49a262cf":"code","68e134cf":"code","a157e145":"code","b9a1b318":"code","83232ae5":"code","e5d06bdc":"code","65697297":"code","26f69233":"code","8b1cf98b":"code","6d3083d8":"code","d3ed9705":"code","2f942e72":"code","6bc6c385":"code","3d2ef133":"code","580074f0":"code","6687ae06":"code","9321f8a2":"code","52b554f1":"code","adb09a98":"code","259f84b5":"code","b224bffe":"code","160402c6":"code","04a266fb":"code","5c5329f4":"code","bbe6a6ff":"code","2044b50b":"code","45b00347":"code","45b6e61f":"code","852f5eba":"code","f809edbb":"code","a84112c8":"code","ea1f50c8":"code","dac5fc62":"code","c6a6270c":"code","d6495cef":"code","626f9207":"code","503bcdb5":"code","1c5ae732":"code","069906cd":"code","835b1a84":"code","c32d8f8a":"code","aaebda92":"code","3bb25ceb":"code","4410902e":"code","d6f2ba50":"code","d06190d2":"code","67535328":"code","f1f84429":"code","162664b2":"code","4049a4ea":"code","7da17970":"code","944b6f07":"code","556b3e97":"code","3dc5a500":"code","857780d0":"code","8871ce70":"markdown","e449736a":"markdown","c7929ed0":"markdown","d9bf8f61":"markdown","5d2bbab5":"markdown","d92711c2":"markdown","a8e724f6":"markdown","90835fbb":"markdown","85f3e24e":"markdown","2376d728":"markdown","acddcc30":"markdown"},"source":{"27edbf19":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","c4645706":"# Simple scatter plot\nheight = [62, 64, 69, 75, 66,68, 65, 71, 76, 73]\nweight = [120, 136, 148, 175, 137,165, 154, 172, 200, 187]\nsns.scatterplot(x=height, y=weight)\nplt.show()","67796d39":"# Create a count plot\ngender = [\"Female\" , \"Female\" , \"Female\" , \"Female\" , \"Male\" , \"Male\" , \"Male\" , \"Male\", \"Male\",\"Male\"]\nsns.countplot(x=gender)\nplt.show()","ccae794e":"df1 = pd.read_csv('..\/input\/data-camp-dataset\/countries-of-the-world.csv')\ndf1.head(2)","08f8f7ca":"# Making a count plot with a Region column in df1\nsns.countplot(y=df1['Region'])\nplt.show()","384b6ce5":"df2 = pd.read_csv('..\/input\/data-camp-dataset\/young-people-survey-responses.csv')\ndf2.head(2)","e09d748e":"# Create a count plot with \"Spiders\" on the x-axis\nsns.countplot(x=\"Spiders\", data=df2)\n\n# Display the plot\nplt.show()","49a262cf":"df3 = pd.read_csv('..\/input\/data-camp-dataset\/student-alcohol-consumption.csv')\ndf3.head(2)","68e134cf":"# Hue and scatter plots\nsns.scatterplot(x=\"absences\", y=\"G3\", data=df3, hue='location')\nplt.show()","a157e145":"#  Change the hue order\nsns.scatterplot(x=\"absences\", y=\"G3\", data=df3, hue='location',  hue_order=['Rural', 'Urban'])\nplt.show()","b9a1b318":"# Hue and count plots\n# Create a dictionary mapping subgroup values to colors\npalette_colors = {\"Rural\": \"green\", \"Urban\": \"blue\"}\n\n# Create a count plot of school with location subgroups\nsns.countplot(x='school', data=df3, hue='location', palette=palette_colors)\nplt.show()","83232ae5":"# Creating subplots with col and row.\n# create one scatter plot for each level of the variable \"study_time\", arranged in columns.\n# relplot() lets you create subplots in a single figure.\nsns.relplot(x=\"absences\", y=\"G3\", \n            data=df3,\n            kind=\"scatter\",\n            col='study_time')\n\n# Show plot\nplt.show()","e5d06bdc":"# Change this scatter plot to arrange the plots in rows instead of columns\nsns.relplot(x=\"absences\", y=\"G3\", \n            data=df3,\n            kind=\"scatter\", \n            row=\"study_time\")\n\n# Show plot\nplt.show()","65697297":"# Create a scatter plot of G1 vs. G3\nsns.relplot(x='G1', y='G3', data=df3, kind='scatter')\n\n# Show plot\nplt.show()","26f69233":"# Adjust to add subplots based on school support\n'''\n    subplots based on whether the student received support from the school (\"schoolsup\"), \n    ordered so that \"yes\" comes before \"no\".\n'''\n\nsns.relplot(x=\"G1\", y=\"G3\", \n            data=df3,\n            kind=\"scatter\",\n            col='schoolsup',\n            col_order=['yes', 'no'])\n\n# Show plot\nplt.show()","8b1cf98b":"# Adjust further to add subplots based on family support\n'''\n    Add row subplots based on whether the student received support from the family (\"famsup\"),\n    ordered so that \"yes\" comes before \"no\". This will result in subplots based on two factors.\n'''\n\nsns.relplot(x=\"G1\", y=\"G3\", \n            data=df3,\n            kind=\"scatter\", \n            col=\"schoolsup\",\n            col_order=[\"yes\", \"no\"],\n            row=\"famsup\",\n            row_order=[\"yes\", \"no\"])\n\n# Show plot\nplt.show()","6d3083d8":"mpg = pd.read_csv('..\/input\/data-camp-dataset\/mpg.csv')\nmpg.head(2)","d3ed9705":"# Create scatter plot of horsepower vs. mpg\nsns.relplot(x='horsepower', y='mpg',data=mpg, kind='scatter', size='cylinders')\n\n# Show plot\nplt.show()","2f942e72":"# Create scatter plot of horsepower vs. mpg\n'''\n    To make this plot easier to read, use hue to vary the color of the points by\n    the number of cylinders in the car (\"cylinders\")\n'''\nsns.relplot(x=\"horsepower\", y=\"mpg\", \n            data=mpg, kind=\"scatter\", \n            size=\"cylinders\", hue='cylinders')\n\n# Show plot\nplt.show()","6bc6c385":"# Create a scatter plot of acceleration vs. mpg\nsns.relplot(x='acceleration', y='mpg', data=mpg ,kind= 'scatter', hue='origin', style='origin')\n\n# Show plot\nplt.show()","3d2ef133":"# Create line plot\nsns.relplot(x='model_year',y='mpg',data=mpg, kind='line')\n\n# Show plot\nplt.show()","580074f0":"# Make the shaded area show the standard deviation\n'''\n    Change the plot so the shaded area shows the standard deviation instead of the confidence interval for the mean.\n'''\nsns.relplot(x=\"model_year\", y=\"mpg\",\n            data=mpg, kind=\"line\", ci='sd')\n\n# Show plot\nplt.show()","6687ae06":"# Create line plot of model year vs. horsepower, with turning off the confidence intervals on the plot\n\nsns.relplot(x='model_year', y='horsepower',data=mpg, kind='line', ci=None)\n\n# Show plot\nplt.show()","9321f8a2":"# Create different lines for each country of origin (\"origin\") that vary in both line style and color.\n# Change to create subgroups for country of origin\nsns.relplot(x=\"model_year\", y=\"horsepower\", \n            data=mpg, kind=\"line\", \n            ci=None, \n            style='origin',\n            hue='origin')\n\n# Show plot\nplt.show()","52b554f1":"# Add markers and make each line have the same style\nsns.relplot(x=\"model_year\", y=\"horsepower\", \n            data=mpg, kind=\"line\", \n            ci=None, style=\"origin\", \n            hue=\"origin\",\n            markers=True,\n            dashes=False)\n\n# Show plot\nplt.show()","adb09a98":"# countplot() vs. catplot()\nsns.catplot(x='Internet usage', data=df2, kind='count')\nplt.xticks(rotation=20)\nplt.show()","259f84b5":"# Changing the orientation\nsns.catplot(y=\"Internet usage\", data=df2,kind=\"count\")\nplt.yticks(rotation=45)\nplt.show()","b224bffe":"# create subplots with col\nsns.catplot(x='Finances', data=df2, kind='count', col='Spiders')\nplt.show()","160402c6":"# Bar plots\n# Displays mean of quantitative variable per category.\n\nsns.catplot(x='Gender', y='Pets',data=df2, kind='bar')\nplt.show()","04a266fb":"df2['Pets'][df2['Gender'] == 'female'].mean()","5c5329f4":"# Turning off confidence intervals\nsns.catplot(x='Gender', y='Pets',data=df2, kind='bar', ci=None)\nplt.show()","bbe6a6ff":"# Rearrange the categories\norder=list(df3['study_time'].value_counts().index)[::-1]\n\nsns.catplot(x=\"study_time\", y=\"G3\",\n            data=df3,\n            kind=\"bar\", order=order)\n\n# Show plot\nplt.show()","2044b50b":"sns.catplot(x='Spiders', y='Age', data=df2, kind='box')\nplt.show()","45b00347":"# Change the order of categories\nsns.catplot(x='Spiders', y='Age', data=df2, kind='box', order=[4.0, 1.0, 2.0])\nplt.show()","45b6e61f":"# Omitting the outliers using 'sym'\nsns.catplot(x='Spiders', y='Age', data=df2, kind='box', sym='')\nplt.show()","852f5eba":"# Create a box plot with subgroups and omit the outliers\nsns.catplot(x='internet',y='G3',data=df3, kind='box', hue='location', sym='')\n\n# Show plot\nplt.show()","f809edbb":"sns.catplot(x='Spiders', y='Age', data=df2, kind='box', whis=[5, 95])\nplt.show()","a84112c8":"# Change the code to set the whiskers to extend to the min and max values.\nsns.catplot(x='Spiders', y='Age', data=df2, kind='box', whis=[0, 100])\nplt.show()","ea1f50c8":"sns.catplot(x='Gender', y='Pets',data=df2, kind='bar')\nplt.show()","dac5fc62":"sns.catplot(x='Gender', y='Pets', data=df2, kind='point', xlim=(0,4))\nplt.show()","c6a6270c":"sns.catplot(x='study_time', y='absences',data=df3, hue='sex', kind='bar')\nplt.show()","d6495cef":"sns.catplot(x='study_time', y='absences',data=df3, hue='sex', kind='point')\nplt.show()","626f9207":"sns.catplot(x='study_time', y='absences',data=df3, hue='sex', kind='point', join=False)\nplt.show()","503bcdb5":"# Create a point plot of family relationship vs. absences\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\n            \n# Show plot\nplt.show()","1c5ae732":"# Add caps to the confidence interval\nsns.catplot(x=\"famrel\", y=\"absences\",data=df3,\n            kind=\"point\", capsize=0.2)\n        \n# Show plot\nplt.show()","069906cd":"# Remove the lines joining the points\nsns.catplot(x=\"famrel\", y=\"absences\",data=df3,\n            kind=\"point\",\n            capsize=0.2, join=False)\n            \n# Show plot\nplt.show()","835b1a84":"# Import median function from numpy\nfrom numpy import median\n\nsns.catplot(x=\"famrel\", y=\"absences\",data=df3,\n            kind=\"point\",\n            capsize=0.2, join=False, estimator=median)\n            \n# Show plot\nplt.show()","c32d8f8a":"# Change the style\nsns.set_style('whitegrid')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\n            \n# Show plot\nplt.show()","aaebda92":"# dark style\nsns.set_style('dark')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","3bb25ceb":"# darkgrid\nsns.set_style('darkgrid')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","4410902e":"# default pallete\nsns.countplot(x=\"Spiders\", data=df2)\nplt.show()","d6f2ba50":"sns.set_palette('RdBu')\nsns.countplot(x=\"Spiders\", data=df2)\nplt.show()","d06190d2":"sns.set_palette('GnBu')\nsns.countplot(x=\"Spiders\", data=df2)\nplt.show()","67535328":"# Custom palettes\ncustom_palette = ['red', 'green', 'orange', 'blue', 'yellow', 'purple']\nsns.set_palette(custom_palette)","f1f84429":"sns.countplot(x=\"Spiders\", data=df2)\nplt.show()","162664b2":"sns.set_style('whitegrid')\nsns.set_palette(\"Purples\")\nsns.countplot(x=\"Spiders\", data=df2)\nplt.show()","4049a4ea":"sns.set_palette('tab10') # back to the default pallete\nsns.set_context('talk')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","7da17970":"# sns.set_style('dark')\nsns.set_context('paper')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","944b6f07":"sns.set_context('notebook')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","556b3e97":"sns.set_context('poster')\nsns.catplot(x='famrel', y='absences', data=df3, kind='point')\nplt.show()","3dc5a500":"# FacetGrid\nsns.set_palette('tab10')\nsns.set_style('white')\nb = sns.catplot(x='Spiders', y='Age', data=df2, kind='box', whis=[5, 95])\nb.fig.suptitle('New title', y=1.01) # y --> distance between the title and the plot\nb.set(xlabel='Spiders categories', ylabel='Age')\n\nplt.show()","857780d0":"#  AxesSubplot \nl = sns.lineplot(x='model_year', y='horsepower',data=mpg, ci=None)\nl.set_title('Line Ploy', y=1.03)\nl.set(xlabel='Car Model Year', ylabel='Average MPG')\nplt.show()","8871ce70":"**Confidence intervals**\n- Lines show 95% conidence intervals for the mean\n- Show s uncertainty about our estimate\n- Assumes our data is a random sample","e449736a":"**Diverging palettes**\n - RdBu<br>\n - PRGn<br>\n - RdBu_r<br>\n - PRGn_r<br>","c7929ed0":"### Point plots\nPoints show mean of quantitative variable<br>\nVertical lines show 95% conidence intervals","d9bf8f61":"### Changing the scale\n","5d2bbab5":"**Sequential palettes**\n- Greys<br>\n- Blues<br>\n- PuRd<br>\n- GnBu","d92711c2":"### catplot()\n**- Used to create categorical plots**<br>\n**- Same advantages of relplot()**<br>\n**- Easily create subplots with col= and row=**","a8e724f6":"#### This notebook has made with the help of 'Introduction to Data Visualization with Seaborn' course on  datacamp","90835fbb":"### relplot()","85f3e24e":"**Changing the whiskers using `whis`**<br>\n. By default, the whiskers extend to 1.5 * the interquartile range<br>\n. Make them extend to 2.0 * IQR: whis=2.0<br>\n. Show the 5th and 95th percentiles: whis=[5, 95]<br>\n. Show min and max values: whis=[0, 100]","2376d728":"**Box plot**\n- Shows the distribution of quantitative data\n- See median, spread, skewness, and outliers\n- Facilitates comparisons between groups\n","acddcc30":"###  Adding titles\n- title for FacetGrid --> fig.suptitl<br>\n- title for AxesSubplot --> set_title"}}