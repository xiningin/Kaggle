{"cell_type":{"729a1567":"code","41f046e2":"code","0d25419d":"code","94bae1d9":"code","c5839ae9":"code","826242dd":"code","bcacebfc":"code","f2640dec":"code","c0e5b33a":"code","6cdb4a80":"code","70634e20":"code","32bc50c5":"code","2e8527e3":"markdown","5ad394f1":"markdown"},"source":{"729a1567":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41f046e2":"import re\nfrom geopy.geocoders import Nominatim\nimport shapely\nimport pyproj\nimport math\nimport folium\nimport requests\nimport pandas as pd\nimport time\nimport numpy as np\nfrom sklearn.cluster import KMeans\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\nimport warnings\nwarnings.filterwarnings('ignore')","0d25419d":"city_venues= pd.read_csv('\/kaggle\/input\/munich-trending-venues-from-foursquare\/city_venues_munich.csv')\ncity_venues.head()","94bae1d9":"city_venues.groupby('Venue Category').count()","c5839ae9":"print('There are {} unique categories.'.format(len(city_venues['Venue Category'].unique())))","826242dd":"# one hot encoding\ncity_venues_onehot = pd.get_dummies(city_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n\n# add property column back to dataframe\ncity_venues_onehot['Neighborhood'] = city_venues['Neighborhood'] \n\n# move neighborhood column to the first column\nfixed_columns = [city_venues_onehot.columns[-1]] + list(city_venues_onehot.columns[:-1])\ncity_venues_onehot = city_venues_onehot[fixed_columns]\n\ncity_venues_onehot.head()","bcacebfc":"city_venues_onehot.shape","f2640dec":"city_venues_grouped = city_venues_onehot.groupby('Neighborhood').mean().reset_index()\ncity_venues_grouped","c0e5b33a":"city_venues_grouped.shape","6cdb4a80":"num_top_venues = 7\n\nfor hood in city_venues_grouped['Neighborhood']:\n    print(\"----\"+hood+\"----\")\n    temp = city_venues_grouped[city_venues_grouped['Neighborhood'] == hood].T.reset_index()\n    temp.columns = ['venue','freq']\n    temp = temp.iloc[1:]\n    temp['freq'] = temp['freq'].astype(float)\n    temp = temp.round({'freq': 2})\n    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n    print('\\n')","70634e20":"def return_most_common_venues(row, num_top_venues):\n    row_categories = row.iloc[1:]\n    row_categories_sorted = row_categories.sort_values(ascending=False)\n    \n    return row_categories_sorted.index.values[0:num_top_venues]","32bc50c5":"um_top_venues = 7\n\nindicators = ['st', 'nd', 'rd']\n\n# create columns according to number of top venues\ncolumns = ['Neighborhood']\nfor ind in np.arange(num_top_venues):\n    try:\n        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n    except:\n        columns.append('{}th Most Common Venue'.format(ind+1))\n\n# create a new dataframe\ncity_venues_sorted = pd.DataFrame(columns=columns)\ncity_venues_sorted['Neighborhood'] = city_venues_grouped['Neighborhood']\n\nfor ind in np.arange(city_venues_grouped.shape[0]):\n    city_venues_sorted.iloc[ind, 1:] = return_most_common_venues(city_venues_grouped.iloc[ind, :], num_top_venues)\n\ncity_venues_sorted","2e8527e3":"Next, let's group rows by neighborhood and by taking the mean of the frequency of occurrence of each category:","5ad394f1":"There are 184 unique categories.\n\nAnalyze Each Property's surrounding area - using one hot coding, each venue category will become a column in the dataframe:"}}