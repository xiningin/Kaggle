{"cell_type":{"7afb8014":"code","468b96d5":"code","a789870b":"code","76e8430d":"code","2a49928e":"code","39d38a8a":"code","7a824fb9":"code","2edf3fea":"code","36fb4691":"code","117508c6":"code","ea292d1b":"code","7e4072f2":"code","77c31983":"code","91fa6d33":"code","9f79a825":"code","0b942555":"code","2f472e58":"code","2518c572":"code","ddd1db88":"code","b26591b5":"code","c107586c":"code","6fad0d2a":"code","2fa23a8d":"code","3d4c5594":"code","b47b8c82":"code","e46f575e":"code","f3067e42":"code","961aa3c1":"code","389eb5e5":"code","e7fb64a1":"code","c8e51135":"code","ca92ef41":"code","e51eda63":"code","8ede0c6c":"code","de50a89a":"code","a85ab1c9":"code","a76c6609":"code","d5c06e84":"code","b96d4869":"code","b5f8f3b2":"code","0cb75243":"markdown","fef80639":"markdown","8b7e0bd7":"markdown","5ac85bb7":"markdown","7d57c735":"markdown","c3a52aac":"markdown"},"source":{"7afb8014":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as py # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport time, datetime\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","468b96d5":"data = pd.read_csv(\"\/kaggle\/input\/uberdrives\/My Uber Drives - 2016.csv\")\ndata.info()","a789870b":"data.columns","76e8430d":"data = data.rename({'START_DATE*':'startdate', \n                    'END_DATE*':'enddate', 'CATEGORY*':'category', \n                    'START*':'start', 'STOP*':'stop', 'MILES*':'miles', 'PURPOSE*':'purpose'}, axis=1)\ndata.columns","2a49928e":"data","39d38a8a":"data.isna().sum()","7a824fb9":"data[data.enddate.isna()]","2edf3fea":"### one Time\ndata = data.drop(1155)","36fb4691":"data.isna().sum()","117508c6":"data.category.value_counts()","ea292d1b":"print('\\n------- Average Length of Trip --------\\n')\nprint('Business: ', round(data[data['category'] == 'Business'].miles.mean(),3))\nprint('Personal: ', round(data[data['category'] == 'Personal'].miles.mean(),3))\nprint('Meal\/Entertain: ', round(data[data['purpose'] == 'Meal\/Entertain'].miles.mean(),3))","7e4072f2":"data.startdate.dtypes","77c31983":"data.startdate = pd.to_datetime(data.startdate)\ndata.enddate = pd.to_datetime(data.enddate)\ndata.info()","91fa6d33":"data['minutes'] = (data['enddate'] - data['startdate']).dt.total_seconds()\/60\ndata['year'] = data.startdate.dt.year\ndata['month'] = data.startdate.dt.month\ndata['week'] = data.startdate.dt.isocalendar().week\ndata['hour'] = data.startdate.dt.hour\ndata.head()","9f79a825":"print(\"Sorted Week\\n\\n\", data['week'].sort_values().unique() )\nprint(\"\\n\\nSorted Month\\n\\n\", data['month'].sort_values().unique() )\nprint(\"\\n\\nSorted Hours\\n\\n\", data['hour'].sort_values().unique() )","0b942555":"print('\\n------- Travel Time --------\\n')\nprint(\"Maximum Travel Time: \", round(data.minutes.max(),3) )\nprint(\"Minimum Travel Time: \", round(data.minutes.min(),3) )\nprint(\"Mean of Travel Time: \", round(data.minutes.mean(),3) )","2f472e58":"print('\\n------- Average Miles of Ride Category Wise --------\\n', \n      round(data.groupby(['category'])['miles'].mean(), 3) )\n\nprint('\\n------- Average Miles of Ride Puepose Wise --------\\n', \n      round(data.groupby(['purpose'])['miles'].mean(), 3) )","2518c572":"data[data.start.str.contains('\\?') == True]","ddd1db88":"data[data.start.str.contains('\\?') == True]","b26591b5":"data[\"start\"] = data[\"start\"].replace({\"\\?\": \"a\"}, regex=True)\ndata[\"stop\"] = data[\"stop\"].replace({\"\\?\": \"a\"}, regex=True)\n\ndata[data.start.str.contains('\\?') == True]","c107586c":"data[data.stop.str.contains('\\?') == True]","6fad0d2a":"data","2fa23a8d":"print(\"Popular Starting Points\\n------------------------\\n\", \n      data.start.sort_values().value_counts().head(15) )\n\nprint(\"\\n\\nMost Stop\/Drop Points\\n----------------------\\n\", \n      data.stop.sort_values().value_counts().head(15) )","3d4c5594":"sns.set_style('whitegrid')\nplt.subplots(figsize=(19,6))\nplt.title(\"Rides per Week of Year 2016\", fontsize=24)\nsns.countplot(x=\"week\", data=data)\nplt.xlabel(\"Weeks of the Year 2016\", fontsize=20)\nplt.ylabel(\"Rides in 2016\", fontsize=20)","b47b8c82":"#Relation Weeks and Miles of the Year 2016\nsns.set_style('whitegrid')\nplt.subplots(figsize=(19,6))\nplt.title(\"Miles Per Week\", fontsize=24)\nsns.barplot(x=\"week\", y=\"miles\", data=data)\nplt.xlabel(\"Weeks of Year 2016\", fontsize=20)\nplt.ylabel(\"Miles\", fontsize=20)","e46f575e":"plt.subplots(figsize=(12,8))\ndata[data[\"category\"]==\"Business\"][\"week\"].value_counts()[:10].sort_values().plot.barh()\nplt.title(\"Top 10 Weeks of Business Rides in 2016\", fontsize=24)\nplt.xlabel(\"Number of Business Rides\", fontsize=20)\nplt.ylabel(\"Weeks\", fontsize=20)\nplt.show()","f3067e42":"#Relation Between Miles and Months - (Miles Covered per Month)\nsns.set_style('whitegrid')\nplt.subplots(figsize=(19,6))\nplt.title(\"Miles Per Month\", fontsize=24)\nsns.barplot(x=\"month\", y=\"miles\", data=data)\nplt.xlabel(\"Months\", fontsize=20)\nplt.ylabel(\"Miles\", fontsize=20)","961aa3c1":"sns.set_style('whitegrid')\nplt.subplots(figsize=(15,10))\nsns.countplot(y=\"month\", data=data)\nplt.title(\"Number of Rides per Month\", fontsize=24)\nplt.xlabel(\"Number of Rides\", fontsize=18)\nplt.ylabel(\"Months\", fontsize=18)","389eb5e5":"plt.figure(figsize = (19, 5))\nplt.style.use('seaborn-white')\ndata['month'].value_counts().iloc[:10].plot.bar()\nplt.title(\"Number of Rides of Top 10 Months\", fontsize=24)\nplt.xlabel(\"Months\", fontsize=18)\nplt.ylabel(\"Total Miles\", fontsize=18)\nplt.tick_params(labelsize=15)","e7fb64a1":"#Relation Between Months and Time to Cover the Distance\nsns.set_style('whitegrid')\nplt.subplots(figsize=(18,6))\nsns.barplot(x=\"month\", y=\"minutes\", data=data)\n\nplt.title(\"Monthly Time to Cover the Distance\", fontsize=24)\nplt.xlabel(\"Months\", fontsize=20)\nplt.ylabel(\"Travel Time\", fontsize=20)","c8e51135":"#Relation Between Weeks and Time to Cover the Distance\nsns.set_style('whitegrid')\nplt.subplots(figsize=(19,6))\nsns.barplot(x=\"week\", y=\"minutes\", data=data)\n\nplt.title(\"Per Week Time to Cover the Distance\", fontsize=24)\nplt.xlabel(\"Week\", fontsize=20)\nplt.ylabel(\"Travel Time\", fontsize=20)","ca92ef41":"fig, ax = plt.subplots(figsize=(19,6)) # Create the figure and axes object\ndata.plot(x = 'week', y = 'minutes', ax = ax) # Plot the first x and y axes:\ndata.plot(x = 'week', y = 'miles', ax = ax, secondary_y = True)\nplt.title('Comparision between Miles and Minutes(Time)', fontsize=24)","e51eda63":"plt.subplots(figsize=(19,6))\ndata[\"start\"].value_counts()[:25].sort_values(ascending = False).plot.bar()\n\nplt.title(\"Rides From Start Location\", fontsize=24)\nplt.xlabel(\"Starting Location\", fontsize=20)\nplt.ylabel(\"Numbers\", fontsize=20)\nplt.show()","8ede0c6c":"plt.subplots(figsize=(19,6))\ndata[\"stop\"].value_counts()[:25].sort_values(ascending = False).plot.bar()\n\nplt.title(\"Rides with Stop Location\", fontsize=24)\nplt.xlabel(\"Stop\/Drop Location\", fontsize=20)\nplt.ylabel(\"Numbers\", fontsize=20)\nplt.show()","de50a89a":"\nsns.set_style('whitegrid')\nplt.subplots(figsize=(19,6))\nsns.barplot(x=\"purpose\", y=\"minutes\", data=data)\n\nplt.title(\"Ride Purpose & Time Take to Cover\", fontsize=24)\nplt.xlabel(\"Ride Purpose\", fontsize=20)\nplt.ylabel(\"Travel Time Take\", fontsize=20)\nplt.xticks(rotation = 45, fontsize=15);\n\n\n\nplt.subplots(figsize=(19,6))\nsns.barplot(x=\"purpose\", y=\"miles\", data=data)\n\nplt.title(\"Ride Purpose & Coverted Miles\", fontsize=24)\nplt.xlabel(\"Ride Purpose\", fontsize=20)\nplt.ylabel(\"Miles\", fontsize=20)\nplt.xticks(rotation = 45, fontsize=15);","a85ab1c9":"plt.figure(figsize = (15,5))\nsns.countplot(data=data, x=\"purpose\", hue=\"category\")\n\nplt.title(\"Ride Purpose VS Category\", fontsize=24)\nplt.xlabel(\"Ride Purpose\", fontsize=20)\nplt.ylabel(\"Number\", fontsize=20)\nplt.xticks(rotation = 45, fontsize=10);","a76c6609":"data.head()","d5c06e84":"print(\"Maximum Time: \",round((data.minutes \/ data.miles).max(),3))\n#data[round(data.minutes.max(),3)]\n#data[data.minutes == data.minutes.max()]\ndata[data.miles == data.miles.max()]","b96d4869":"mydf = pd.DataFrame(columns = {'miles', 'minutes'})\nmydf.miles = data.miles\nmydf.minutes = data.minutes\nmydf['minutesPerMile'] = round((mydf.minutes \/ mydf.miles),3)\n#mydf[mydf.minutesPerMile == mydf.minutesPerMile.max()]\nprint(\"Maximum Time Take to cover One Mile: \",mydf.minutesPerMile.max(), \"Minutes\")\nprint(\"Minimum Time Take to cover One Mile: \",mydf.minutesPerMile.min(), \"Minutes\")","b5f8f3b2":"print(\"Top 10 Drives take Minutes to Cover One Mile\")\nmydf.sort_values('minutesPerMile', ascending=False).head(10)","0cb75243":"**Like -> Upvote ---> Motivation**\nStudent of Data Science\/Analysis try python code for learning, need all of your guys support and Appriciation with lots of love, looking for your guidance, Like, **UPVOTES for Motivation**. Previously Notebook comments and like\/Upvores highly appriciated and motivated. **Thanks with lots of LOVE :)**\n\n**Please visit also**\nPakistan-Temperature-Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/pakistan-temperature-visualization\n\nData Cleaning & Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/data-cleaning-visualization\n\nPakistan COVID19 - EDA & Visuallization of CoronaVirus\nhttps:\/\/www.kaggle.com\/methoomirza\/covid19-datavisualization-pakistan-till-june2020\n\ncities Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/cities-visualization\n\ncleaning of cities name\nhttps:\/\/www.kaggle.com\/methoomirza\/cleaning-of-cities-name\n\nvariant_name_of_pakistan\nhttps:\/\/www.kaggle.com\/methoomirza\/variant-name-of-pakistan\n\nTop10-Books\nhttps:\/\/www.kaggle.com\/methoomirza\/top10-books\n\nGufhtugu-Analysis\nhttps:\/\/www.kaggle.com\/methoomirza\/gufhtugu-analysis","fef80639":"### Average of [Business, Personal and Meal\/Entertain]","8b7e0bd7":"## **Minutes Per Mile**","5ac85bb7":"## **Months and Miles**","7d57c735":"### Data Type of startdate","c3a52aac":"## **Number of Rides per Week**"}}