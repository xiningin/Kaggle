{"cell_type":{"98d5aeb1":"code","1df6c34e":"code","8341732f":"code","ebdb6dce":"code","7ae97c8f":"code","50b5ed1c":"code","d86005a4":"code","f37d8cfc":"code","b61c333c":"code","c4a373c5":"code","5478ed0e":"code","1f06d73d":"code","231c36b3":"code","8f7ec52e":"code","31e46b82":"code","867755d4":"code","b4ee6971":"markdown","7fad5377":"markdown","7f6b4600":"markdown","8bac1d25":"markdown"},"source":{"98d5aeb1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1df6c34e":"\ndataset = pd.read_csv('\/kaggle\/input\/fifa-20-latest-player-database\/players.csv')","8341732f":"dataset.head()","ebdb6dce":"dataset.shape","7ae97c8f":"dataset['Position'].value_counts()","50b5ed1c":"dataset = dataset.drop(['Futhead Card Link','Name','Club','League'],axis=1)","d86005a4":"dataset.head()","f37d8cfc":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\ndataset['Position'] = labelencoder.fit_transform(dataset['Position'])\ndataset['Work Rates'] = labelencoder.fit_transform(dataset['Work Rates'])\ndataset['Strong Foot'] = labelencoder.fit_transform(dataset['Strong Foot'])","b61c333c":"dataset.head()","c4a373c5":"x = dataset[['Pace','Shooting','Passing','Dribbling','Defense','Physical','Card Rating','Weak Foot','Skill Moves','Work Rates','Strong Foot']]\ny = dataset['Position']","5478ed0e":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)","1f06d73d":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression()\nlog.fit(x_train,y_train)","231c36b3":"log.score(x_test,y_test)","8f7ec52e":"from sklearn.ensemble import GradientBoostingClassifier\ngrad = GradientBoostingClassifier()\ngrad.fit(x_train,y_train)","31e46b82":"grad.score(x_test,y_test)","867755d4":"test = [[76,78,45,67,58,68,54,4,4,3,0]]\ngrad.predict(test)","b4ee6971":"our target is to predict which position is best for an individual player based on his stats","7fad5377":"now we would need to convert strings into numerical values","7f6b4600":"WE WOULD NEED TO DROP SOME DATA COLUMS WHICH ARE OF NO USE","8bac1d25":"FIRST OF ALL SOME DATA ENGINEERING AND ANALYSIS"}}