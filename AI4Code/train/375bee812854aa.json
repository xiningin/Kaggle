{"cell_type":{"114339c8":"code","00267d6b":"code","afa24e6d":"code","a04966fa":"code","432d634f":"code","c2a8a822":"code","796c1250":"code","f057cf80":"code","61317d28":"markdown","6b7c4323":"markdown","cc780a4e":"markdown","55dbf6f5":"markdown","9978d4ce":"markdown","30c6259b":"markdown","77cee75a":"markdown","92cbb8aa":"markdown","d63277e5":"markdown"},"source":{"114339c8":"!!pip install icecream","00267d6b":"import pandas as pd\nimport numpy as np\nfrom icecream import ic\nimport networkx as nx\nimport matplotlib.pyplot as plt","afa24e6d":"# Load Data\ncpm = pd.read_csv('..\/input\/pm-tasks\/cpm.csv')\ncpm = cpm.drop(columns='Unnamed: 0')\ncpm.style.background_gradient(cmap='Reds')","a04966fa":"# create the required tuple for nx using list comprehension\nlist_tups = [(start, end) for start, end in zip(cpm.start_node, cpm.end_node)] \nlikely = [' ' + str(days) + '-days' for days in cpm.most_likely]\n\n# combined our label with task time\nlabels = dict()\nfor tups, label_names, like in zip(list_tups, cpm.task, likely):\n    labels.update({tuple(tups): label_names + like})","432d634f":"def plot_nodes(edges, labels):    \n    \"Plots Node for CPM Data\"\n    G = nx.Graph()\n    G.add_edges_from(edges)\n    pos = nx.spring_layout(G)\n\n    # set plot figure size\n    plt.figure(figsize=(8, 5))        \n    \n    # draw\n    nx.draw(\n        G, pos, edge_color='black', width=1,linewidths=1,\n        node_size=500, node_color='red', alpha=0.9,\n        labels={node:node for node in G.nodes()})\n    \n    nx.draw_networkx_edge_labels(\n        G, pos,edge_labels=labels,font_color='black')\n    \n    # set plot title\n    plt.title(\n        'Task Network',\n        fontdict=dict(size=15))\n    \n    return plt.show()","c2a8a822":"plot_nodes(list_tups, labels)","796c1250":"# create matrix from dataframe\nmat = np.matrix(cpm[['optimistic', 'most_likely', 'pessimistic']])\nmat_solution = np.matrix([0] * 5)\n\n\n\ndef solve_activity_time(mat: np.matrix)-> pd.Series:\n    \"\"\"\n    Solves for activity time.\n    :returns: A series object of the activity time\n    \"\"\"\n    mat_solution = np.matrix([0] * mat.shape[0], 'float')\n    for i in range(0, 5):\n            \n        a = mat[i, 0]\n        b = np.dot(mat[i, 1], 4)\n        c = mat[i, 2]\n        out = np.divide(\n            np.asarray([a, b, c]).sum(), 6)\n        mat_solution[:, i] = out\n\n    return pd.Series(np.ravel(mat_solution).T)\n\n\n# tweak and round outputs\nactivity_time = solve_activity_time(mat)\nactivity_time.name = 'activity_time'\nactivity_time = np.round(activity_time, 2)","f057cf80":"# final output\npd.concat(\n    [cpm.iloc[:, :3],\n    activity_time,\n    cpm.iloc[:, 4:5]], axis=1)\\\n    .style.bar(subset=['activity_time'])","61317d28":"$$t = \\frac{(a + 4b +c)}{6}$$\n\n---","6b7c4323":"## The <font color='DarkRed'>Task<\/font> Data\n---","cc780a4e":"## Output\n---","55dbf6f5":"# **Critical Path Method** (CPM) in Project Management\n\nThe real life world example that I chose for this assignment\nis CPM, which is project management technique for mapping task necessary to complete the project.This notebook will focus on solving for the  activity time (t, which measures in days) of each task in the project. <br> The value of activity time is our estimate of the likelyhood of the task to finish considering:\n\n- **a** (optimistic estimated time to finish task)\n- **b** (most likely estimated time to finish task) \n- **c** (pessimistic timed to finish task)\n\nWith the help of matrices we can effectively solve for activity time. An estimate that can provide real value for effectively delivering projects.\n\n","9978d4ce":"# <font color='purple'>Homework #5<\/font> Matrices\n---\n**Instructions**","30c6259b":"\n\n\n \n> \nDetails:\nWhy is matrix multiplication useful? How would you use that in practice?\nFor this assignment, pick one of the matrix methods outlined in the previous video, and apply it your any of your earlier datasets in a practical \/ meaningful way. Above your formulas, write an explanation (1 paragraph long) explaining how the method is useful and what kind of analysis it enables in real-life.\nStumped? Do a bit of independent research on the topic. There are many real-world applications of these processes, but there not necessarily intuitive. If the datasets you've chosen so far don't lend themselves well to matrix manipulation, pick any new dataset that does.\/\nOnce you've completed your writeup, follow the instructions below to hand it in.","77cee75a":"## Task <font color='DarkRed'>Network<\/font>","92cbb8aa":"a = optimistic time <br>\nb = most likely time <br>\nc = pessimistc time <br>\n$$t = \\frac{(a + 4b +c)}{6}$$\n","d63277e5":"##  <font color='DarkRed'>Solving<\/font> for Activity Time"}}