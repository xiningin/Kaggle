{"cell_type":{"f3cc23a8":"code","5c0d31af":"code","fea48e6b":"code","1f9aaa11":"code","57151912":"code","20f8daa3":"code","5bad4f48":"code","78f57344":"code","a249bbed":"code","27d5cab8":"code","efc80b98":"code","bdc53749":"code","ef78e199":"code","b93499aa":"code","647a2140":"code","478f88a2":"code","5daa466c":"code","8f413164":"markdown","84bdbaaa":"markdown","b05a8422":"markdown","408ffe6e":"markdown","d7e8da9e":"markdown"},"source":{"f3cc23a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5c0d31af":"df=pd.read_csv('..\/input\/top-200-passwords-by-country-2021\/top_200_password_2020_by_country.csv')\ndf","fea48e6b":"df['Time_to_crack_in_minutes']=df['Time_to_crack_in_seconds']\/60\ndf['Time_to_crack_in_hours']=df['Time_to_crack_in_seconds']\/3600\ndf","1f9aaa11":"df['Length']=df['Password'].str.len()\ndf['num_chars']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'[a-zA-Z]', '', s)))\ndf['num_digits']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'\\d', '', s)))\ndf['num_upper']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'[A-Z]', '', s)))\ndf['num_lower']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'[a-z]', '', s)))\ndf['num_special']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'[^0-9A-Za-z]', '', s)))\ndf['num_vowels']=df['Password'].apply(lambda s: len(s)-len(re.sub(r'[aeiouAEIOU]', '', s)))","57151912":"dp=df.drop_duplicates(subset=['Password']).copy()\ndp","20f8daa3":"dp.columns","5bad4f48":"for col in dp[['Length',\n       'num_chars', 'num_digits', 'num_upper', 'num_lower', 'num_special',\n       'num_vowels']]:\n    fig=px.histogram(x=dp[col], title=col)\n    fig.show()","78f57344":"dp.nlargest(10, columns='Time_to_crack_in_seconds', keep='all')","a249bbed":"dp[dp['Length']==6].nlargest(5, columns='Time_to_crack_in_seconds', keep='all')","27d5cab8":"dp[['Length', 'Time_to_crack_in_seconds']].corr()","efc80b98":"dcorr=dp[['Length',\n       'num_chars', 'num_digits', 'num_upper', 'num_lower', 'num_special',\n       'num_vowels', 'Time_to_crack_in_seconds']].corr()\ndcorr","bdc53749":"px.imshow(dcorr)","ef78e199":"s=''.join(df['Password'].to_list())\ns[:10]","b93499aa":"from collections import Counter\nCounter(list(s))","647a2140":"dfreq=pd.DataFrame(Counter(list(s)).items(), columns=['ch', 'freq'])\ndfreq=dfreq.sort_values('freq', ascending=False)\ndfreq","478f88a2":"px.bar(dfreq.nlargest(40, 'freq'), x='ch', y='freq', title='Top 40 characters in password')","5daa466c":"px.bar(dfreq[dfreq['ch'].str.contains('\\d', regex=True)], x='ch', y='freq', title='digits in common passwords')","8f413164":"## Top 5 strong 6-character passwords","84bdbaaa":"# character frequency","b05a8422":"## password characteristics","408ffe6e":"## correlation between password length and time to crack","d7e8da9e":"## top 10 hardest passwords to be cracked"}}