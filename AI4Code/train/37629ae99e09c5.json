{"cell_type":{"eecb3919":"code","6b0e1b8d":"code","a39ce3f5":"code","e2a6c3d1":"code","3e8d8bf2":"code","e05fbcc2":"code","d18d1fe4":"code","18e17c1b":"code","edb710c9":"code","b3896d17":"code","ed1728bd":"code","2690e5aa":"code","b7cf2299":"code","b7bd31c6":"code","6f1746ff":"code","93e1510d":"code","f9fc7fc0":"code","820d95df":"code","c29daf78":"code","6245fd9b":"code","d8bd5bcf":"code","1498ec44":"code","57252872":"code","5fc350f8":"code","5c96afce":"code","1b53a3af":"code","d4efc52c":"code","c81fda70":"code","71d984b1":"code","6606becc":"code","7c19ae0b":"code","934c1136":"code","5d0a73f1":"code","3a6eb146":"code","e805b85b":"code","75628733":"code","c15d0d76":"code","8da0a518":"code","2793cc42":"code","b790b740":"code","4f8d5112":"code","205adda6":"code","4f32a357":"code","26a8576c":"code","c076605a":"code","cc491821":"code","5dcc347e":"code","93e93e5d":"code","e917638d":"code","a12ead6b":"code","0c633438":"code","65a20c48":"code","0b05fd23":"code","686bae64":"code","6e1e831f":"code","ac54c54b":"markdown","9c91a3c0":"markdown","1d0990ad":"markdown","aed5b485":"markdown","45408e04":"markdown","bbf3ab83":"markdown","ebe36d9b":"markdown","d0482037":"markdown","116b7690":"markdown","6c460e37":"markdown","c4f41aab":"markdown","918e03b2":"markdown","139e81d1":"markdown","22c771b9":"markdown","63e08c9e":"markdown","e4179ed8":"markdown","8fb87fc5":"markdown","c515026a":"markdown","7b8bbced":"markdown","8efd43d7":"markdown","97fabf53":"markdown","9ebedf09":"markdown","ebfff4d3":"markdown","0f6754a8":"markdown","f7c355b3":"markdown","955f895e":"markdown","256c2425":"markdown","ce518aa0":"markdown","700f98f5":"markdown","f5fbcec5":"markdown"},"source":{"eecb3919":"import numpy as np\nimport pandas as pd\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode,iplot,plot\n\nimport os \n# ignoring warnings\nimport warnings\nwarnings.simplefilter(\"ignore\")","6b0e1b8d":"from plotly.subplots import make_subplots","a39ce3f5":"pip install pandas_ods_reader #to read ods files ","e2a6c3d1":"print('Datasets:')\nos.listdir('..\/input\/acea-water-prediction')","3e8d8bf2":"from pandas_ods_reader import read_ods\nfeaturesDesc= read_ods('..\/input\/acea-water-prediction\/datasets_description.ods',1)\npd.set_option(\"display.max_colwidth\", -1)\nprint(featuresDesc)","e05fbcc2":"#reading datsets of aquifers  \nAquifer_Doganella = pd.read_csv('..\/input\/acea-water-prediction\/Aquifer_Doganella.csv')\nAquifer_Auser= pd.read_csv('..\/input\/acea-water-prediction\/Aquifer_Auser.csv')\nAquifer_Luco= pd.read_csv('..\/input\/acea-water-prediction\/Aquifer_Luco.csv')\nAquifer_Petrignano=pd.read_csv('..\/input\/acea-water-prediction\/Aquifer_Petrignano.csv')","d18d1fe4":"Aquifer_Luco.info()","18e17c1b":"Aquifer_Luco[\"Date\"] = pd.to_datetime(Aquifer_Luco[\"Date\"], format='%d\/%m\/%Y')","edb710c9":"#This is a global function call used throught the notebook\ndef scatter_plot(Date,source,name,color):\n    trace = go.Scatter(\n        x=Date,\n        y=source.values,\n        name=name,\n        showlegend=True,\n        marker=dict(\n            color=color),\n    )\n    return trace","b3896d17":"Date=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Sovicille\nname=\"Sovicille\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Ponte_Orgia\nname=\"Ponte_Orgia\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Scorgiano\nname=\"Scorgiano\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Pentolina\nname=\"Pentolina\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Monteroni_Arbia_Biena\nname=\"Monteroni_Arbia_Biena\"\nT5=scatter_plot(Date,source,name,\"Red\")\n\ndata1=[T1,T2,T3,T4,T5]\nlayout=go.Layout(dict(title='Rainfall near Sovicille,Pentolina,Monteroni,Scorgiano & Ponte_Orgia', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Rainfall)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots9')","ed1728bd":"Date=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Simignano\nname=\"Simignano\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Siena_Poggio_al_Vento\nname=\"Siena_Poggio_al_Vento\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Mensano\nname=\"Mensano\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Montalcinello\nname=\"Montalcinello\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Rainfall_Monticiano_la_Pineta\nname=\"Monticiano_la_Pineta\"\nT5=scatter_plot(Date,source,name,\"Red\")\n\ndata1=[T1,T2,T3,T4,T5]\nlayout=go.Layout(dict(title='Rainfall near aquifer luco', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Rainfall)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots10')","2690e5aa":"Date=Aquifer_Luco.Date\nsource=Aquifer_Luco.Temperature_Siena_Poggio_al_Vento\nname=\"Siena_Poggio_al_Vento\"\nT1=scatter_plot(Date,source,name,\"blue\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Temperature_Mensano\nname=\"Mensano\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Temperature_Pentolina\nname=\"Pentolina\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Temperature_Monteroni_Arbia_Biena\nname=\"Monteroni_Arbia_Biena\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\ndata1=[T1,T2,T3,T4]\n\nlayout=go.Layout(dict(title='Temperature near aquifer luco', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Temperature)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots11')","b7cf2299":"Date=Aquifer_Luco.Date\nsource=Aquifer_Luco.Depth_to_Groundwater_Podere_Casetta\nname=\"Podere_Casetta'\"\nT1=scatter_plot(Date,source,name,\"blue\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Depth_to_Groundwater_Pozzo_1\nname=\"Pozzo_1\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Depth_to_Groundwater_Pozzo_3\nname=\"Pozzo_3\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Depth_to_Groundwater_Pozzo_4\nname=\"Pozzo_4\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\ndata1=[T1,T2,T3,T4]\n\nlayout=go.Layout(dict(title='Water availability in water wells (pozzo)', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Water availability)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots12')","b7bd31c6":"Date=Aquifer_Luco.Date\nsource=Aquifer_Luco.Volume_Pozzo_1\nname=\"Pozzo_1\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Volume_Pozzo_3\nname=\"Pozzo_3\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Luco.Date\nsource=Aquifer_Luco.Volume_Pozzo_4\nname=\"Pozzo_4\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\ndata1=[T2,T3,T4]\n\nlayout=go.Layout(dict(title='Water volume in Pozzo 1 ,3 & 4', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Water volume)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots13')","6f1746ff":"Aquifer_Auser.info()","93e1510d":"Aquifer_Auser[\"Date\"] = pd.to_datetime(Aquifer_Auser[\"Date\"], format='%d\/%m\/%Y') ","f9fc7fc0":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Gallicano\nname=\"Gallicano\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Pontetetto\nname=\"Pontetetto\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Monte_Serra\nname=\"Monte_Serra\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Orentano\nname=\"Orentano\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Borgo_a_Mozzano\nname=\"Borgo_a_Mozzano\"\nT5=scatter_plot(Date,source,name,\"Red\")\n\ndata1=[T1,T2,T3,T4,T5]\nlayout=go.Layout(dict(title='Rainfall in 5 different places in aquifer Auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Rainfall)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots15')","820d95df":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Piaggione\nname=\"Piaggione\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Calavorno\nname=\"Calavorno\"\nT2=scatter_plot(Date,source,name,\"Red\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Croce_Arcana\nname=\"Croce_Arcana\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Tereglio_Coreglia_Antelminelli\nname=\"Tereglio_Coreglia_Antelminelli\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Rainfall_Fabbriche_di_Vallico\nname=\"Fabbriche_di_Vallico\"\nT5=scatter_plot(Date,source,name,\"Green\")\n\ndata1=[T1,T2,T3,T4,T5]\nlayout=go.Layout(dict(title='Rainfall in 5 different places in aquifer Auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Rainfall)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots16')","c29daf78":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Temperature_Orentano\nname=\"Orentano\"\nT1=scatter_plot(Date,source,name,\"blue\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Temperature_Monte_Serra\nname=\"Monte_Serra\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Temperature_Ponte_a_Moriano\nname=\"Ponte_a_Moriano\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Temperature_Lucca_Orto_Botanico\nname=\"Lucca_Orto_Botanico\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\ndata1=[T1,T2,T3,T4]\nlayout=go.Layout(dict(title='Temperature in 4 differnt places near aquifer Auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Temperature)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots18')","6245fd9b":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Depth_to_Groundwater_LT2\nname=\"LT2\"\nT1=scatter_plot(Date,source,name,\"blue\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Depth_to_Groundwater_SAL\nname=\"SAL\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Depth_to_Groundwater_PAG\nname=\"PAG\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Depth_to_Groundwater_CoS\nname=\"CoS\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Depth_to_Groundwater_DIEC\nname=\"DIEC\"\nT5=scatter_plot(Date,source,name,\"Red\")\ndata1=[T1,T2,T3,T4,T5]\nlayout=go.Layout(dict(title='Water availability in water wells at Aquifer auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Water availability)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots19') ","d8bd5bcf":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Volume_CSA\nname=\"CSA\"\nT1=scatter_plot(Date,source,name,\"Red\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Volume_POL\nname=\"POL\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Volume_CC1\nname=\"CC1\"\nT3=scatter_plot(Date,source,name,\"Brown\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Volume_CC2\nname=\"CC2\"\nT4=scatter_plot(Date,source,name,\"Orange\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Volume_CSAL\nname=\"CSAL\"\nT5=scatter_plot(Date,source,name,\"Blue\")\ndata1=[T1,T2,T3,T4,T5]\n\nlayout=go.Layout(dict(title='ground water volume in waterwells at Aquifer auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Water volume)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\n\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots13')","1498ec44":"Date=Aquifer_Auser.Date\nsource=Aquifer_Auser.Hydrometry_Monte_S_Quirico\nname=\"Monte_S_Quirico\"\nT1=scatter_plot(Date,source,name,\"Red\")\n\nDate=Aquifer_Auser.Date\nsource=Aquifer_Auser.Hydrometry_Piaggione\nname=\"Piaggione\"\nT2=scatter_plot(Date,source,name,\"Green\")\n\ndata1=[T1,T2]\nlayout=go.Layout(dict(title='Hydrometry of 2 places near Aquifer Auser', \n                      xaxis=dict(title='Date'),\n                      yaxis=dict(title='(Hydrometry)')\n                     ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig, filename='h2o-plots122')","57252872":"Aquifer_Doganella.info()","5fc350f8":"Aquifer_Doganella[\"Date\"] = pd.to_datetime(Aquifer_Doganella[\"Date\"], format='%d\/%m\/%Y') ","5c96afce":"\ncolumns_rain=Aquifer_Doganella.columns[Aquifer_Doganella.columns.str.startswith('Rainfall')]\ndata = []\nfor Rain in Aquifer_Doganella[columns_rain]: \n    data.append(go.Scatter(\n        x = Aquifer_Doganella['Date'],\n        y = Aquifer_Doganella[Rain].values,\n        name = Rain\n    ))\nlayout=go.Layout(dict(title = \"Rain fall in near by area of Auifer Doganella\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'rainfall'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                )\npy.iplot(dict(data=data, layout=layout), filename='basic-line1')","1b53a3af":"\ncolumns_Temperature=Aquifer_Doganella.columns[Aquifer_Doganella.columns.str.startswith('Temperature')]\ndata = []\nfor Temperature in Aquifer_Doganella[columns_Temperature]:   \n\n    data.append(go.Scatter(\n        x = Aquifer_Doganella['Date'],\n        y = Aquifer_Doganella[Temperature].values,\n        name = Temperature\n    ))\nlayout = go.Layout(dict(title = \"Temperature in near by area of Auifer Doganella\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Temperaturel'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                  )\npy.iplot(dict(data=data, layout=layout), filename='basic-line2')","d4efc52c":"\ncolumns_Depth_to_Groundwater=Aquifer_Doganella.columns[\n    Aquifer_Doganella.columns.str.startswith('Depth_to_Groundwater')]\ndata = []\nfor Depth_to_Groundwater in Aquifer_Doganella[columns_Depth_to_Groundwater]:   \n\n    data.append(go.Scatter(\n        x = Aquifer_Doganella['Date'],\n        y = Aquifer_Doganella[Depth_to_Groundwater].values,\n        name = Depth_to_Groundwater\n    ))\nlayout = go.Layout(dict(title = \"Depth to Groundwater in wells for Auifer Doganella\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Depth_to_Groundwater'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                  )\npy.iplot(dict(data=data, layout=layout), filename='basic-line3')","c81fda70":"\ncolumns_Volume=Aquifer_Doganella.columns[\n    Aquifer_Doganella.columns.str.startswith('Volume')]\ndata = []\nfor Volume in Aquifer_Doganella[columns_Volume]: \n    data.append(go.Scatter(\n        x = Aquifer_Doganella['Date'],\n        y = Aquifer_Doganella[Volume].values,\n        name = Volume\n    ))\nlayout = go.Layout(dict(title = \"water Volume in well for Auifer Doganella\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'water Volume'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line4')","71d984b1":"Aquifer_Petrignano.info()","6606becc":"Aquifer_Petrignano[\"Date\"] = pd.to_datetime(Aquifer_Petrignano[\"Date\"], format='%d\/%m\/%Y') ","7c19ae0b":"#rainfall using scatter()\nDate = Aquifer_Petrignano['Date']\nsource= Aquifer_Petrignano['Rainfall_Bastia_Umbra']\nname = \"Rainfall_Bastia_Umbra\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nlayout = go.Layout(dict(title = \"Rain fall Bastia_Umbra for Aquifer Petrignano\",\n                  xaxis = dict(title = ''),\n                  yaxis = dict(title = 'rain'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,\n                  )\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line66')","934c1136":"#water volume\nDate = Aquifer_Petrignano['Date']\nsource= Aquifer_Petrignano['Volume_C10_Petrignano']\nname = \"Volume_C10_Petrignano\"\nT1=scatter_plot(Date,source,name,\"Red\")\n\nlayout = go.Layout(dict(title = \"water Volume for Aquifer Petrignano\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'water Volume'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line86')","5d0a73f1":"#hydrometry\nDate = Aquifer_Petrignano['Date']\nsource= Aquifer_Petrignano['Hydrometry_Fiume_Chiascio_Petrignano']\nname = \"Fiume_Chiascio_Petrignano\"\nT1=scatter_plot(Date,source,name,\"Green\")\n\nlayout = go.Layout(dict(title = \"Hydrometry for Aquifer Petrignano\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Hydrometry'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line06')","3a6eb146":"columns_Depth_to_Groundwater=Aquifer_Petrignano.columns[\n    Aquifer_Petrignano.columns.str.startswith('Depth_to_Groundwater')]\ndata = []\nfor Depth_to_Groundwater in Aquifer_Petrignano[columns_Depth_to_Groundwater]:   \n\n    data.append(go.Scatter(\n        x = Aquifer_Petrignano['Date'],\n        y = Aquifer_Petrignano[Depth_to_Groundwater].values,\n        name = Depth_to_Groundwater\n    ))\nlayout = go.Layout(dict(title = \"Depth to Groundwater for Aquifer Petrignano\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Depth_to_Groundwater'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=400,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line3')","e805b85b":"\ncolumns_Temperature=Aquifer_Petrignano.columns[Aquifer_Petrignano.columns.str.startswith('Temperature')]\ndata = []\nfor Temperature in Aquifer_Petrignano[columns_Temperature]:   \n\n    data.append(go.Scatter(\n        x = Aquifer_Petrignano['Date'],\n        y = Aquifer_Petrignano[Temperature].values,\n        name = Temperature\n    ))\nlayout = go.Layout(dict(title = \"Temperature for Aquifer Petrignano\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Temperature'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line2')","75628733":"#water springs \nWater_Spring_Amiata= pd.read_csv('..\/input\/acea-water-prediction\/Water_Spring_Amiata.csv')\nWater_Spring_Madonna= pd.read_csv('..\/input\/acea-water-prediction\/Water_Spring_Madonna_di_Canneto.csv')\nWater_Spring_Lupa = pd.read_csv('..\/input\/acea-water-prediction\/Water_Spring_Lupa.csv')","c15d0d76":"Water_Spring_Amiata.info()","8da0a518":"Water_Spring_Amiata[\"Date\"] = pd.to_datetime(Water_Spring_Amiata[\"Date\"], format='%d\/%m\/%Y') ","2793cc42":"#plot the rainfalls\ncolumns_rain=Water_Spring_Amiata.columns[Water_Spring_Amiata.columns.str.startswith('Rainfall')]\ndata = []\nfor Rain in Water_Spring_Amiata[columns_rain]:\n    data.append(go.Scatter(\n        x = Water_Spring_Amiata['Date'],\n        y = Water_Spring_Amiata[Rain].values,\n        name = Rain\n    ))\nlayout = go.Layout(dict(title = \"Rain fall for Water Spring Amiata\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'rainfall'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line5')","b790b740":"\ncolumns_Temperature=Water_Spring_Amiata.columns[Water_Spring_Amiata.columns.str.startswith('Temperature')]\ndata = []\nfor Temperature in Water_Spring_Amiata[columns_Temperature]:   \n\n    data.append(go.Scatter(\n        x = Water_Spring_Amiata['Date'],\n        y = Water_Spring_Amiata[Temperature].values,\n        name = Temperature\n    ))\nlayout = go.Layout(dict(title = \"Temperature for Water Spring Amiata\",\n                  xaxis = dict(title = ''),\n                  yaxis = dict(title = 'Temperature'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line7')","4f8d5112":"\ncolumns_Depth_to_Groundwater=Water_Spring_Amiata.columns[\n    Water_Spring_Amiata.columns.str.startswith('Depth_to_Groundwater')]\ndata = []\nfor Depth_to_Groundwater in Water_Spring_Amiata[columns_Depth_to_Groundwater]:   \n\n    data.append(go.Scatter(\n        x = Water_Spring_Amiata['Date'],\n        y = Water_Spring_Amiata[Depth_to_Groundwater].values,\n        name = Depth_to_Groundwater\n    ))\nlayout = go.Layout(dict(title = \"Depth to Groundwater for Water Spring Amiata\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Depth_to_Groundwater'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line9')","205adda6":"\ncolumns_Flow_Rate=Water_Spring_Amiata.columns[Water_Spring_Amiata.columns.str.startswith('Flow_Rate')]\ndata = []\nfor Flow_Rate in Water_Spring_Amiata[columns_Flow_Rate]:   \n\n    data.append(go.Scatter(\n        x = Water_Spring_Amiata['Date'],\n        y = Water_Spring_Amiata[Flow_Rate].values,\n        name = Flow_Rate\n    ))\nlayout = go.Layout(dict(title = \"Flow Rate for Water Spring Amiata\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Flow_Rate'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line8')","4f32a357":"Water_Spring_Madonna.info()","26a8576c":"River_Arno=pd.read_csv('..\/input\/acea-water-prediction\/River_Arno.csv')\nLake_Bilancino=pd.read_csv('..\/input\/acea-water-prediction\/Lake_Bilancino.csv')","c076605a":"River_Arno.info()","cc491821":"River_Arno[\"Date\"] = pd.to_datetime(River_Arno[\"Date\"], format='%d\/%m\/%Y') ","5dcc347e":"#plot the rainfalls\ncolumns_rain=River_Arno.columns[River_Arno.columns.str.startswith('Rainfall')]\ndata = []\nfor Rain in River_Arno[columns_rain]:\n    data.append(go.Scatter(\n        x = River_Arno['Date'],\n        y = River_Arno[Rain].values,\n        name = Rain\n    ))\nlayout = go.Layout(dict(title = \"Rain fall for River Arno\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'rainfall'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line89')","93e93e5d":"\n#Temperature\nDate = River_Arno['Date']\nsource= River_Arno['Temperature_Firenze']\nname = \"Temperature_Firenze\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nlayout = go.Layout(dict(title = \"Temperature Firenze for River Arno\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Temperature'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line46')","e917638d":"\n#Hydrometry\nDate = River_Arno['Date']\nsource= River_Arno['Hydrometry_Nave_di_Rosano']\nname = \"Hydrometry_Nave_di_Rosano\"\nT1=scatter_plot(Date,source,name,\"Blue\")\n\nlayout = go.Layout(dict(title = \"Hydrometry Nave di Rosano for River Arno\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Hydrometry'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line46')","a12ead6b":"Lake_Bilancino.info()","0c633438":"Lake_Bilancino[\"Date\"] = pd.to_datetime(Lake_Bilancino[\"Date\"], format='%d\/%m\/%Y') ","65a20c48":"#plot the rainfalls\ncolumns_rain=Lake_Bilancino.columns[Lake_Bilancino.columns.str.startswith('Rainfall')]\ndata = []\nfor Rain in Lake_Bilancino[columns_rain]:\n    data.append(go.Scatter(\n        x = Lake_Bilancino['Date'],\n        y = Lake_Bilancino[Rain].values,\n        name = Rain\n    ))\nlayout = go.Layout(dict(title = \"Rain fall for Lake Bilancino\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'rainfall'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=data, layout=layout), filename='basic-line99')","0b05fd23":"#Temperature_Le_Croci\nDate = Lake_Bilancino['Date']\nsource= Lake_Bilancino['Temperature_Le_Croci']\nname = \"Temperature_Le_Croci\"\nT1=scatter_plot(Date,source,name,\"Blue\")\nlayout = go.Layout(dict(title = \"Temperature Le Croci for Lake Bilancino\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Temperature'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line46')","686bae64":"#Lake_Level\nDate = Lake_Bilancino['Date']\nsource= Lake_Bilancino['Lake_Level']\nname = \"Lake_Level\"\nT1=scatter_plot(Date,source,name,\"Green\")\n\nlayout = go.Layout(dict(title = \"Lake Level for Lake Bilancino\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Lake_Level'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line06')","6e1e831f":"#Flow_Rate\nDate = Lake_Bilancino['Date']\nsource= Lake_Bilancino['Flow_Rate']\nname = \"Flow_Rate\"\nT1=scatter_plot(Date,source,name,\"Brown\")\nlayout = go.Layout(dict(title = \"Flow Rate for Lake Bilancino\",\n                  xaxis = dict(title = 'Date'),\n                  yaxis = dict(title = 'Flow_Rate'),\n                  ),legend=dict(orientation=\"h\"),autosize=False,width=800,height=600,)\npy.iplot(dict(data=[T1], layout=layout), filename='basic-line06')","ac54c54b":"![image.png](attachment:image.png)","9c91a3c0":"# Aquifer Auser","1d0990ad":"\n**info about Aquifer Doganella from data description as below**\n\nThe wells field Doganella is fed by two underground aquifers not fed by rivers or lakes but fed by meteoric infiltration. The upper aquifer is a water table with a thickness of about 30m. The lower aquifer is a semi-confined artesian aquifer with a thickness of 50m and is located inside lavas and tufa products. These aquifers are accessed through wells called Well 1, ..., Well 9. Approximately 80% of the drainage volumes come from the artesian aquifer. The aquifer levels are influenced by the following parameters: rainfall, humidity, subsoil, temperatures and drainage volumes.\n\nwe need to predict all the 9 wells here. **Depth_to_Groundwater_Pozzo_1 to Depth_to_Groundwater_Pozzo_9**\n\n","aed5b485":"![image.png](attachment:image.png)","45408e04":"Simignano, Siena_Poggio_al_Vento, Mensano,Montalcinello, Monticiano_la_Pineta,Sovicille, Ponte_Orgia,Scorgiano, Pentolina,Monteroni_Arbia_Biena - these are 10 locations where rainfall is measured and this rainfall water is stored in Luco auifer. These are surrounded location of this Luco aquifer. \n\nSiena_Poggio_al_Vento,Mensano,Pentolina, Monteroni_Arbia_Biena - these locations 5 where temperature is  measured. As temperature impacts rainfall which is stored in this aquifers. we can explore them with our available dates to check which month has more water and which month water is running dry. \n\n**info about Aquifer luco from data description as below**\n\nThe Luco wells field is fed by an underground aquifer. This aquifer not fed by rivers or lakes but by meteoric infiltration at the extremes of the impermeable sedimentary layers. Such aquifer is accessed through wells called Well 1, Well 3 and Well 4 and is influenced by the following parameters: rainfall, depth to groundwater, temperature and drainage volumes.Pozzo is an italian word, it means \"water well\"\n\nwe need to predict for  **Depth_to_Groundwater_Podere_Casetta**\n\n**Have a look at aquifer Luco and its near by areas where rainfall and temperature is measured**","bbf3ab83":"**I**","ebe36d9b":"![image.png](attachment:image.png)","d0482037":"**This has all dataset names, some information about them and what output variable expected. Sadly what we dont have here is the details of measurement metrics of rainfall, flow rate, temperature etc. **","116b7690":"# Aquifer Petrignano","6c460e37":"# Water Spring Amiata","c4f41aab":"**info about Aquifer Petrignano from data description as below**\n\nThe wells field of the alluvial plain between Ospedalicchio di Bastia Umbra and Petrignano is fed by three underground aquifers separated by low permeability septa. The aquifer can be considered a water table groundwater and is also fed by the Chiascio river. The groundwater levels are influenced by the following parameters: rainfall, depth to groundwater, temperatures and drainage volumes, level of the Chiascio river.\n\nwe have to predict here **Depth_to_Groundwater_P24 and Depth_to_Groundwater_P25**\n\n","918e03b2":"**Terms associated to lake**\n\n**Lake level** : Water level in lakes and reservoirs is measured in centimetres against the national reference plane or against some adopted plane (so called \u201czero\u201d graph). Surface area of a lake or reservoir is measured in m2 or km2 depending on their size.\n\n**Flow rate** : It is the volume of water passing a point in a fixed period of time.\nFlow rate is usually measured in cubic feet per second (cfs or ft\u00b3\/sec) but could also be measured in gallons or liters per minute or second.","139e81d1":"![image.png](attachment:image.png)","22c771b9":"**Terms associated with River**\n\n**Hydrometry** : river Volumetric flow rate, also known as discharge, is the volume of water which passes through a given cross-section of the river channel per unit time.","63e08c9e":"# Acea water predictions for different water bodies- EDA, prediction,Plotly and Time series\n\nThe above model describes, what we need to do here in brief. we have four different type of waterbodies: water springs, lakes, rivers and aquifers.\nwe have dataset for 9 water bodies, 4 aquifer,3 water spring, 1 river and 1 lake. \n\n1. Aquifer - Auser,Doganella, Luco, Petrignano \n2. Lake - Bilancino \n3. River - Arno\n4. water spring - Amiata, Lupa, Madonna \n\nAs each waterbody is different from the other, the related features are also different. A water spring features are different from those of a lake.\nwe need to build 4 models for 4 different kind of water bodies(water springs, lakes, rivers and aquifers), but we have to predict for each of the 9 water body separately as they are independent of each other. \n\nLet's look at the above model in details. It describes all the deatils need to be put in notebook. \n\n1. Data cleaning, feature engineering, EDA\n2. Identification of a predictive model for each kind of water body \n3. Tuning of each model for each single dataset\n4. For Aquifers we need to forecast **\"depth to groundwater\"**\n5. For water spring we need to forecast **\"Flow rate\"**\n6. For Lake we need to forecast **\"Hydrometri(Lake level), Flow rate\"**\n7. For River we need to forecast **\"Hydrometri(River level)\"**\n\nThe challenge is to determine how features influence the water availability of each presented waterbody. \n\n**plz upvote if you find my explanation useful. let me know in comments if anything is missing**","e4179ed8":"**A small reference for the plotly codes.**\n\nI have created this global function for ploting Rainfall, temperature , water level etc. This is used for aquifer luco and Auser. Avantage, it gives us choice of our colours and avoid clutter of 10 rainfalls in one graph. I have create 5 to avoid much clutter. \nBut its too much lines of code,so I have implemented for loop for traces for last 2 aquifers. \nyou can go skip this part and move to aquifer Doganella if you want to less line of code. \nyou have to zoom into plotly graphs as most of the data are missing for 2000 to 2015 years and you better analyse 2015 to 2020. ","8fb87fc5":"imported 9 datasets and one data description in ods files. Lets have a look at data description file ","c515026a":"# Aquifer Luco","7b8bbced":"![image.png](attachment:image.png)","8efd43d7":"**Let's understand the impact of rainfall and temeprature on these water bodies in general**\n\nThe Earth\u2019s water cycle is highly dependent on temperature,So we can conclude this:\n\n**Increased temperature -> Heavy Rainfall -> More water volume -> Higher lake level-> higher stream flow rate- Heavy river flow rate**\n\nRainy season we see more water and on winter ice. We will see what correlation says between temperature and rainfall, water depth.","97fabf53":"# explore 3 Water springs ","9ebedf09":"July and August has recorded highest temeperature in 2019.here Siena (blue line) and Mensano (green) has low temperature for long time from 2000. Unlike others, siena temperature rises nov 2017. ","ebfff4d3":"# Aquifer Doganella","0f6754a8":"# let's explore the 4 different Aquifers ","f7c355b3":"Rainfall has been measured for these locations-Gallicano, Pontetetto, Monte_Serra, Orentano, Borgo_a_Mozzano, Piaggione, Calavorno,Croce_Arcana,Tereglio_Coreglia_Antelminelli,Fabbriche_di_Vallico. \n\nTemperature is measured for these 5 locations - Orentano, Monte_Serra, Ponte_a_Moriano, Lucca_Orto_Botanico.\n\n**info about Aquifer Auser from data description as below**\n\nThis waterbody consists of two subsystems, called NORTH and SOUTH, where the former partly influences the behavior of the latter. Indeed, the north subsystem is a water table (or unconfined) aquifer while the south subsystem is an artesian (or confined) groundwater.\nThe levels of the NORTH sector are represented by the values of the SAL, PAG, CoS and DIEC wells, while the levels of the SOUTH sector by the LT2 well.\n\nHere we need to predict these 3 depth values - **Depth_to_Groundwater_SAL, Depth_to_Groundwater_COS, Depth_to_Groundwater_LT2** \nTwo of them belong to north subsystem and one belong to south **LT2**\nThis one will be quite challenging as we cant here take different rainfall into accounts. ","955f895e":"**Spring** is the result of an aquifer being filled to the point that the water overflows onto the land surface. They range in size from intermittent seeps, which flow only after much rain, to huge pools flowing hundreds of millions of gallons daily. \n**Here we have flow rate of water spring to measure its water volume presence**","256c2425":"# River Arno","ce518aa0":"**Terms associated with Aquifers**\n*  **Depth to ground water** : The perpendicular distance between the upper edge of the surface and the upper edge of the groundwater surface is considered as depth.\n*  **volume** : The volume of water comprise the total resource of groundwater residing within a given basin or area. \n* **Hydrometry** : water flow rate -volume of water crossing a section of a stream for one unit of time- is expressed in cubic metres per second (m3\/s).","700f98f5":"**Lets check for the datasets we have here**","f5fbcec5":"# Lake Bilancino"}}