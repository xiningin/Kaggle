{"cell_type":{"6463a289":"code","016dfea3":"code","d2e0eac4":"code","d20f2e05":"code","ea7d1a82":"code","4a0da76a":"code","64f0fa5a":"code","3c5e09e1":"code","3baf9922":"code","44b16132":"code","c42ddf16":"code","76d334ec":"code","212f8862":"code","bc8a487d":"markdown","88af885b":"markdown","4836a361":"markdown","7d366fc4":"markdown","2a1d9134":"markdown","0357876a":"markdown","ae5a72e9":"markdown","e02448c6":"markdown","8944d907":"markdown","17b97f83":"markdown","65521d59":"markdown","da310f23":"markdown","647adba7":"markdown","d4462971":"markdown","3ecc68b8":"markdown","dfb6a3ec":"markdown"},"source":{"6463a289":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport pprint\npp = pprint.PrettyPrinter(indent=4)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","016dfea3":"dataset = pd.read_csv(\"\/kaggle\/input\/nyc-public-wifi\/NYC_Wi-Fi_Hotspot_Locations.csv\")\n\nx_locations = dataset['Latitude']\ny_locations = dataset['Longitude']\n","d2e0eac4":"from matplotlib.pyplot import scatter\nimport matplotlib.cm as cm\n\n\n\nzipcodes = dataset['Postcode'] # 176 unique zipcodes\ncolors = cm.gnuplot(np.linspace(0, 1, len(zipcodes)))\nscatter(x_locations, y_locations, s=7, c=colors)","d20f2e05":"manhatten_dataset = pd.read_csv(\"..\/input\/manhattan-housing-prices\/DOF__Cooperative_Comparable_Rental_Income___Manhattan__FY_2011_2012.csv\")\nmanhatten_dataset = manhatten_dataset[manhatten_dataset['Postcode'].notna()]\nmanhatten_dataset = manhatten_dataset[manhatten_dataset['COMPARABLE RENTAL \u2013 2 \u2013 Full Market Value'].notna()]\nmanhatten_dataset = manhatten_dataset[manhatten_dataset['COMPARABLE RENTAL \u2013 2 \u2013 Market Value per SqFt'].notna()]\n\npostcodes = manhatten_dataset['Postcode']\npostcodes = [int(i) for i in postcodes]\n\nreduced_x = []\nreduced_y = []\nreduced_postcodes = []\nindex = 0\nfor i in zipcodes:\n    if i in postcodes:\n        reduced_postcodes.append(zipcodes[index])\n        reduced_x.append(x_locations[index])\n        reduced_y.append(y_locations[index])\n    index += 1\n","ea7d1a82":"colors = cm.gnuplot(np.linspace(0, 1, len(reduced_postcodes)))\nscatter(reduced_x, reduced_y, s=8,c=colors)","4a0da76a":"zip_full_market_hash = {}\nzip_sqft_hash = {}\n\nfor zipcode in reduced_postcodes:\n    zip_full_market_hash[str(zipcode)] = []\n    zip_sqft_hash[str(zipcode)] = []\n\nfor index, row in manhatten_dataset.iterrows():\n    if str(int(row['Postcode'])) in list(zip_full_market_hash.keys()):\n        zip_full_market_hash[str(int(row['Postcode']))].append(row['COMPARABLE RENTAL \u2013 2 \u2013 Full Market Value'])\n        zip_sqft_hash[str(int(row['Postcode']))].append(row['COMPARABLE RENTAL \u2013 2 \u2013 Market Value per SqFt'])","64f0fa5a":"zip_avg_full_market_price = {}\nzip_avg_sqft_price = {}\n\nfor key in zip_full_market_hash:\n    zip_avg_full_market_price[key] = np.mean(np.array(zip_full_market_hash[key]))\n\nfor key in zip_sqft_hash:\n    zip_avg_sqft_price[key] = np.mean(np.array(zip_sqft_hash[key]))\n\nprint(\"Average full market value per zip code\")\npp.pprint(zip_avg_full_market_price)\nprint(\"\\n\")\nprint(\"Average price per square foot per zip code\")\npp.pprint(zip_avg_sqft_price)","3c5e09e1":"market_price = []\nsqft_price = []\n\nfor zc in reduced_postcodes:\n    market_price.append(zip_avg_full_market_price[str(zc)])\n    sqft_price.append(zip_avg_sqft_price[str(zc)])\n","3baf9922":"scatter(reduced_x, reduced_y, s=8,c=market_price, cmap=\"autumn\")\n","44b16132":"scatter(reduced_x, reduced_y, s=8,c=sqft_price, cmap=\"autumn\")","c42ddf16":"# Create a hashmap of postal codes to number of hotspots\nzipcode_n = {}\nfor zipcode in reduced_postcodes:\n    zipcode_n[str(zipcode)] = 0\n    \nfor index, row in dataset.iterrows():\n    if str(int(row['Postcode'])) in list(zipcode_n.keys()):\n        zipcode_n[str(int(row['Postcode']))] += 1\n\n\n# Create 2 columns, one for the price of an area and one for the amount of hotspots in that area\nprice_col = []\nnum_col = []\n\n\nfor zipcode in reduced_postcodes:\n    z = str(zipcode)\n    price_col.append(zip_avg_sqft_price[z])\n    num_col.append(zipcode_n[z])\n\n","76d334ec":"from scipy import stats\n\npearson_coefficient = stats.pearsonr(price_col, num_col)[0]\nprint(pearson_coefficient)","212f8862":"scatter(num_col, price_col, s=16)","bc8a487d":"Boilerplate code to setup project environment. You can ignore it, it has nothing to do with the data being processed.","88af885b":"Finally, we graph our (lack of) correlation, with the number of WiFi hotspots on the X axis and the average price of housing per square foot on the Y axis.","4836a361":"Load averaged pricing data into context of WiFi hotspots","7d366fc4":"**Graph with colors representing how expensive an area is. The brighter, the more expensive.**","2a1d9134":"Load dataset of Manhattan housing prices to quantify the wealth of an area. Drop zipcodes from the first dataset that don't have a price in the second dataset. ","0357876a":"Next, we'll determine correlation between the number of WiFi hotspots and the wealth of an area. To do this, we'll calculate the Pearson co-efficient.","ae5a72e9":"Newly reduced zipcodes plotted. Since the WiFi hotspots are from all of New York but the price dataset is only from Manhatten, the reduced graph of the WiFi hotspot locations seen below only includes hotspots in Manhatten, so we start to see a lot less \"noise\" and the shape of the city is more clearly defined.","e02448c6":"Graph by full market price.","8944d907":"A Pearson coefficent of 0 is one in which there is no correlation. We get a **Pearson Co-efficient of -0.11**, which implies **nearly no correlation between the amount of public WiFi hotspots and the wealth of an area in Manhattan**.","17b97f83":"Get average value of each zipcode in each hash","65521d59":"Load dataset then extract the lattitude and longitude of each WiFi hotspot","da310f23":"Graph by price per square foot","647adba7":"Create a hash of the market price and price per sqft for each zipcode in the Manhatten dataset","d4462971":"Each dot represents the location of a single WiFi hotspot, with each zipcode in a different color. Colors repeat, as there are 176 unique zipcodes in the dataset.","3ecc68b8":"Graphing by square foot more accurately represents the wealth distribution in Manhatten than graphing by full market price. Because of this, we'll use the price per square foot in the rest of our calculations.","dfb6a3ec":"Calcuate Pearson co-efficient to determine correlation"}}