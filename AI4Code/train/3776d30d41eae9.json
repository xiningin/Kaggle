{"cell_type":{"bf1e7f52":"code","61710254":"code","ed5fb321":"code","b314eca9":"code","64d4534c":"code","88e64ed9":"code","cef488c8":"code","39d5b0e2":"code","374efb8c":"code","ccb6f9e5":"code","e42d9b11":"code","de07443c":"code","a9f8aa77":"code","c30fbee8":"code","e740a15a":"code","f370b034":"code","39a26cc0":"code","8d84360b":"code","9d7012b9":"code","2e73e412":"code","e7c052ae":"code","28b3eeb2":"code","d093c8b3":"code","79202353":"code","bbb6bd9b":"code","f326077e":"markdown","a85957fc":"markdown","cb050fea":"markdown","d516705d":"markdown","06aa92c7":"markdown","ee529ed3":"markdown","158ad48c":"markdown","3337fe67":"markdown","4dee7051":"markdown","a4c85d2e":"markdown","bc7b75e8":"markdown","0b59e86d":"markdown","ee9d157d":"markdown","2d896620":"markdown","bf3048eb":"markdown"},"source":{"bf1e7f52":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import train_test_split, cross_val_score\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nfrom pandas.api.types import is_string_dtype\n\nimport re\n\n#Models\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\nimport lightgbm as lgbm","61710254":"df = pd.read_csv('..\/input\/Melbourne_housing_FULL.csv')\ndf = df[df.Price.notnull()]\n\ndf.head()\n\n","ed5fb321":"df.info()","b314eca9":"df.isnull().sum()","64d4534c":"imp = SimpleImputer(strategy = 'mean')\n#Bedroom2\nimp.fit(df[['Bedroom2']])\ndf['Bedroom2'] = imp.transform(df[['Bedroom2']]).ravel()\n#Bathroom\nimp.fit(df[['Bathroom']])\ndf['Bathroom'] = imp.transform(df[['Bathroom']]).ravel()\n#Car\nimp.fit(df[['Car']])\ndf['Car'] = imp.transform(df[['Car']]).ravel()\n#Landsize\nimp.fit(df[['Landsize']])\ndf['Landsize'] = imp.transform(df[['Landsize']]).ravel()\n\n#BuildingArea\nimp.fit(df[['BuildingArea']])\ndf['BuildingArea'] = imp.transform(df[['BuildingArea']]).ravel()\n#YearBuilt\nimp.fit(df[['YearBuilt']])\ndf['YearBuilt'] = imp.transform(df[['YearBuilt']]).ravel()\n\ndf.isnull().sum()","88e64ed9":"df[df['CouncilArea'].isnull()]","cef488c8":"#Filling in data based on values from the same suburb\n\ndf.loc[29483,['Suburb']]='Fawkner'\ndf.loc[29483,['CouncilArea']]='Moreland City Council'\ndf.loc[29483,['Regionname']]='Northern Metropolitan'\ndf.loc[29483,['Propertycount']]= 5070\ndf.loc[29483,['Distance']]=12.4\ndf.loc[29483,['Postcode']]= 3060\n\n\ndf.loc[26888,['CouncilArea']]='Boroondara City Council'\ndf.loc[26888,['Regionname']]='Southern Metropolitan'\ndf.loc[26888,['Propertycount']]= 8920\n\n\ndf.loc[18523,['CouncilArea']]='Maribyrnong City Council'\ndf.loc[18523,['Regionname']]='Western Metropolitan'\ndf.loc[18523,['Propertycount']]= 7570","39d5b0e2":"df.isnull().sum()","374efb8c":"df_cleaned = df.drop(['Lattitude','Longtitude'], axis = 1)\ndf_cleaned.info()","ccb6f9e5":"str(df.loc[1,['Address']].values)","e42d9b11":"a = re.split('\\s', str(df.loc[1,['Address']].values))","de07443c":"b = a[1:]\ntype(b)","a9f8aa77":"c = ' '.join(b)\nc","c30fbee8":"def street_name(addr):\n    a = re.split('\\s', addr)\n    b = a[1:]\n    c = ' '.join(b)\n    return c","e740a15a":"df_cleaned['Street'] = df_cleaned['Address'].apply(street_name)\ndf_cleaned['Street'].tail(20)","f370b034":"df_cleaned['Street_Suburb'] = df_cleaned['Street']+'-'+df_cleaned['Suburb']\ndf_cleaned['Street_Suburb'].head(10)","39a26cc0":"categories = ['Postcode', 'Street_Suburb','Type', 'CouncilArea', 'Method','Suburb', 'SellerG', 'Regionname']\n\nfor i in categories:\n    df_cleaned[i+'_code'] = df_cleaned[i].astype('category').cat.codes\n\n\ndf_cleaned.head(10)","8d84360b":"df_train = df_cleaned.drop(categories, axis = 1)\ndf_train = df_train.drop(['Address', 'Street'], axis = 1)\ndf_train['Date'] = df_train['Date'].apply(pd.Timestamp)\n\n#Converting Dates as days from 1st of January 2016 and dropping Date column\ndf_train['DaysFromJan2016']= df_train['Date']-pd.Timestamp('01-01-2016')\ndf_train['DaysFromJan2016']= df_train['DaysFromJan2016'].dt.days\ndf_train = df_train.drop('Date', axis = 1)\ndf_train.head()","9d7012b9":"X_train, X_test, y_train, y_test = train_test_split(df_train.drop('Price', axis = 1), df_train['Price'], test_size = 0.3, random_state = 100)","2e73e412":"\n\n#Create training dataset, clearly labeling X and y\ntrain = lgbm.Dataset(X_train, label = y_train)\n\n#Setting out the Parameter Dictionary\nparameters = {}\nparameters['learning_rate'] = 0.05 #learning rate - controlling how fast estimates change\nparameters['boosting_type'] = 'gbdt' # for  traditional Gradient Boosting Decision Tree\nparameters['objective'] = 'mae' #Minimising mean absolute error\nparameters['metric'] = 'mae' \nparameters['feature_faction'] = 0.8 # LightGBM to select 80% of features for each tree\nparameters['max_depth'] = 10\nparameters['min_data'] = 10\n\nmodel_lgbm = lgbm.train(parameters, train, 200) #Training for 200 iterations","e7c052ae":"cv_results = lgbm.cv(parameters, train, num_boost_round=200, nfold=5, metrics = 'mae', \n                    verbose_eval=20, early_stopping_rounds=10)","28b3eeb2":"#Display Results:\nprint('Current parameters:\\n', parameters)\nprint('Best CV score (mean absolute error):', cv_results['l1-mean'][-1])\n","d093c8b3":"predictions = model_lgbm.predict(X_test)","79202353":"plot = sns.jointplot(x= y_test, y= predictions, kind='reg', xlim=(0,10000000), joint_kws={'line_kws':{'color':'red'}})\nplot.set_axis_labels(xlabel='Actual Price', ylabel='Predicted Price')\nplt.figure(figsize = [15,15])","bbb6bd9b":"lgbm.plot_importance(model_lgbm, height = 0.7, title = 'Feature Importance', xlabel = 'Average Training Loss Reduction', importance_type = 'gain', max_num_features = 20)","f326077e":"> ### The 3 Odd Home Sales","a85957fc":"### Train- Test Split:","cb050fea":"#### The most important features affecting house prices in Melbourne are:\n- Distance from CBD\n- Postcode\n- Dwelling type\n- Number of rooms\n\nDistance from CBD is by far the most important feature.","d516705d":"## Using Light GBM to predict prices","06aa92c7":"In this kernel, I would visualise some of the Melbourne Housing data and model the data using Light GBM, and for comparison, a multi-linear model.\n\nVersion 4 includes postcode as a categorical variable and correcting some spelling mistakes.\n\n## Import Libaries:","ee529ed3":"> ### Convert Postcode, Suburb, Street_Suburb, Type , CouncilArea, Method, SellerG, and Regionname to Categorical data","158ad48c":"### Plotting the Results vs Testing Data","3337fe67":"### Final preparation for machine learning:","4dee7051":"There are many lines of data with missing data.\n\n-For the numerical values, we can impute them by mean (Bedroom2, Bathroom, Car, Landsize, BuildingArea, YearBuilt)\n-For Geographic data, we can look up the values by the addresses(Distance, Postcode, CouncilArea, Lattitude, Longtitude, Regionname, and Propertycount).\n\n### Imputing numerical missing values:","a4c85d2e":"> ### Cross Validation","bc7b75e8":"## Import data:\n\nI am only going to use part of the data with prices.","0b59e86d":"#### Creating the Street - Suburb Column","ee9d157d":"## Imputing Missing Data\n\nLets' take a look at the missing data:","2d896620":"### Feature Importance:\n\nThe most important features by gain - the average training loss reduction gained when using a feature for splitting.","bf3048eb":"## Feature Engineering"}}