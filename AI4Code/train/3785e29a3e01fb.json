{"cell_type":{"f72b16e7":"code","67e14d5b":"code","b28ba935":"code","0c07a0b5":"code","96c1e4c1":"code","328a8b12":"code","5de37c7e":"code","36af8179":"code","b6bb6e40":"code","a523476e":"code","be38ab89":"code","64d38ca9":"code","35594dd5":"code","427e1200":"code","79d84713":"code","319f48b0":"code","57d890fc":"code","c4a17adc":"code","752345a5":"code","861622f9":"code","a31cad88":"code","2e2230fc":"code","c9ba5c81":"code","f4368872":"code","71ce3a80":"code","598b9590":"code","4bfeb0fa":"markdown","30db3d5f":"markdown"},"source":{"f72b16e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n   print(dirname)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67e14d5b":"stock_data_path = \"\/kaggle\/input\/price-volume-data-for-all-us-stocks-etfs\/Data\/Stocks\/\"\nall_file = os.listdir(stock_data_path)\nprint('googl.us.txt' in all_file)","b28ba935":"google_stock_df = pd.read_csv(os.path.join(stock_data_path,'googl.us.txt'),date_parser=True)","0c07a0b5":"google_stock_df.head()","96c1e4c1":"google_stock_df.tail()","328a8b12":"google_stock_df.isnull().sum()","5de37c7e":"google_stock_df.OpenInt.unique()","36af8179":"google_stock_df.drop(['OpenInt'],axis=1,inplace=True)","b6bb6e40":"google_stock_df.head()","a523476e":"google_stock_df.tail()","be38ab89":"train_df = google_stock_df[google_stock_df['Date']<'2014-08-25']\ntest_df = google_stock_df[google_stock_df['Date']>='2014-08-25']","64d38ca9":"train_df=train_df.drop(['Date'],axis=1).copy()\ntest_df = test_df.drop(['Date'],axis=1).copy()","35594dd5":"from sklearn.preprocessing import MinMaxScaler\ntrain_scaler = MinMaxScaler()\ntest_scaler = MinMaxScaler()\ntrain_array=train_scaler.fit_transform(train_df)\ntest_array=test_scaler.fit_transform(test_df)","427e1200":"train_array","79d84713":"X_train = []\nY_train = []\nX_test = []\nY_test = []\n\nfor i in range(60,train_array.shape[0]):\n    X_train.append(train_array[i-60:i])\n    Y_train.append(train_array[i][0])\n    \nfor i in range(60,test_array.shape[0]):\n    X_test.append(test_array[i-60:i])\n    Y_test.append(test_array[i][0])\n    \nX_train = np.array(X_train)\nY_train = np.array(Y_train)\nX_test = np.array(X_test)\nY_test = np.array(Y_test)\nprint(X_train.shape,Y_train.shape,X_test.shape,Y_test.shape)","319f48b0":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.figure(figsize=(14,8))\nplt.plot(Y_train,color='blue')\nplt.plot(Y_test,color='red')\nplt.show()","57d890fc":"import tensorflow as tf\nfrom tensorflow.keras.layers import Dense,LSTM,Dropout\nfrom tensorflow.keras import Sequential","c4a17adc":"regressor = Sequential()\nregressor.add(LSTM(50,return_sequences = True,input_shape=X_train.shape[1:]))\nregressor.add(Dropout(0.2))\n\nregressor.add(LSTM(60,return_sequences = True))\nregressor.add(Dropout(0.3))\n\nregressor.add(LSTM(80,return_sequences= True))\nregressor.add(Dropout(0.4))\n\nregressor.add(LSTM(120))\nregressor.add(Dropout(0.5))\n\nregressor.add(Dense(1))\nregressor.summary()","752345a5":"regressor.compile(optimizer='adam',loss='mean_squared_error')","861622f9":"regressor.fit(X_train,Y_train,validation_data=(X_test,Y_test),batch_size=128,epochs=10)","a31cad88":"result = regressor.predict(X_test)\nresult[:10]","2e2230fc":"test_scaler.scale_","c9ba5c81":"scale = 1\/1.81636545e-03\nscale","f4368872":"result = result*scale\nresult[:10]","71ce3a80":"y_test = Y_test*scale\ny_test[:10]","598b9590":"plt.figure(figsize=(14,8))\nplt.plot(result,color = 'red',label='predicted')\nplt.plot(y_test,color =  'blue', label = 'actual')\nplt.legend()\nplt.show","4bfeb0fa":"# **Dataset Selection**\n**I have used \"Huge stock market dataset\" downloaded from [here](http:\/\/https:\/\/www.kaggle.com\/borismarjanovic\/price-volume-data-for-all-us-stocks-etfs)**","30db3d5f":"**Traininig  Model**"}}