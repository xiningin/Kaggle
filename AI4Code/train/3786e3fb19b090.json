{"cell_type":{"adda8744":"code","43fd4468":"code","96271cb4":"code","b7e5a286":"code","fbe8d711":"code","18da624b":"code","80cc289e":"code","594f7cd5":"code","cc894b3a":"code","b3fdd5c4":"code","229e167c":"code","f7c19a07":"code","025b1e10":"code","7ac61277":"code","bd4c5eed":"code","5c869220":"code","bc32c8e1":"code","74d97123":"code","8abedfdf":"code","c4bb7785":"markdown","133664c9":"markdown","af3aa42c":"markdown","f850c33d":"markdown","32d387d8":"markdown","c0444352":"markdown","8d407ef4":"markdown","6f707451":"markdown","3641eac5":"markdown","9cb2261f":"markdown","9624e5d4":"markdown","28438b2f":"markdown","22ae5529":"markdown","adcb0088":"markdown","77766d70":"markdown","16315665":"markdown"},"source":{"adda8744":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nsns.set()","43fd4468":"df = pd.read_csv('\/kaggle\/input\/esports-global-revenue-and-audience-in-20122019\/esports_revenue_audience.csv')\nyear = df[['Year']]\nrevenue = df[['Estimated e-sports market revenue in million dollars']]\naudience = df[['Audience']]\nfreq_viewers = df[['Frequent viewers in million']]\noc_viewers = df[['Occasional viewers in million']]","96271cb4":"# Revenue plot\nplt.scatter(year,revenue, c=\"blue\", marker=\"+\")\nplt.ylabel(\"E-sports revenue\")\nplt.xlabel(\"Year\")\nplt.title(\"Revenue each year\")\nplt.show()","b7e5a286":"# Audience plot\nplt.scatter(year,audience, c=\"blue\", marker=\"+\")\nplt.ylabel(\"E-sports audience\")\nplt.xlabel(\"Year\")\nplt.title(\"Audience each year\")\nplt.show()","fbe8d711":"# Frequent audience plot\nplt.scatter(year,freq_viewers, c=\"blue\", marker=\"+\")\nplt.ylabel(\"E-sports frequent audience\")\nplt.xlabel(\"Year\")\nplt.title(\"Frequent audience each year\")\nplt.show()","18da624b":"# Occasional audience plot\nplt.scatter(year,oc_viewers, c=\"blue\", marker=\"+\")\nplt.ylabel(\"E-sports occasional audience\")\nplt.xlabel(\"Year\")\nplt.title(\"Occasional audience each year\")\nplt.show()","80cc289e":"### Analyzing revenue\n\n# Importing a linear regression model\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(year, revenue)\n\nplt.scatter(year,revenue, c=\"blue\", marker=\"+\")\nplt.plot(year, regressor.predict(year), c='blue')\nplt.ylabel(\"E-sports revenue\")\nplt.xlabel(\"Year\")\nplt.title(\"Revenue by year\")\nplt.show()","594f7cd5":"# Polynomial Regression\nX = df.iloc[:,0].values # here, I am taking the year column as a simple array, rather than pandas object - else, the plotting won't work later\nY = df.iloc[:,1].values\nX = X.reshape(-1, 1)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 3) # degree = 2 is default, changing might raise accuracy\nX_poly = poly_reg.fit_transform(X)\nlin_reg = LinearRegression()\nlin_reg.fit(X_poly, Y)\n\nY_pred = lin_reg.predict(X_poly)\n\n# Grid rearange for accuracy\nX_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid)), 1)\n\nplt.scatter(X, Y, color = 'blue', marker = '+')\nplt.plot(X_grid, lin_reg.predict(poly_reg.fit_transform(X_grid)), color = 'red')\nplt.ylabel(\"E-sports revenue\")\nplt.xlabel(\"Year\")\nplt.title(\"Revenue by year, in million dollars\")\nplt.show()","cc894b3a":"# Prediction of polynomial\nlin_reg.predict(poly_reg.fit_transform([[2022]]))","b3fdd5c4":"# here I am ditching the 2012 value\n\nyear = year[1:] \nrevenue = revenue[1:]\n# Importing the second linear regression model\nfrom sklearn.linear_model import LinearRegression\nregressor_two = LinearRegression()\nregressor_two.fit(year, revenue)\n\nplt.scatter(year,revenue, c=\"blue\", marker=\"+\")\nplt.plot(year, regressor_two.predict(year), c='blue')\nplt.ylabel(\"E-sports revenue\")\nplt.xlabel(\"Year\")\nplt.title(\"E-sports revenue by year\")\nplt.show()","229e167c":"regressor_two.predict([[2020],[2021],[2022]])","f7c19a07":"year = df[['Year']] # since I ditched the 2012 value from the original, I need to redo this step\n\n# Importing a linear regression model\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(year, audience)\n\nplt.scatter(year,audience, c=\"blue\", marker=\"+\")\nplt.plot(year, regressor.predict(year), c='blue')\nplt.ylabel(\"E-sports audience\")\nplt.xlabel(\"Year\")\nplt.title(\"Yearly e-sports audience\")\nplt.show()","025b1e10":"regressor.predict([[2022]])","7ac61277":"# Polynomial Regression\nX = df.iloc[:,0].values\nY = df.iloc[:,-1].values\nX = X.reshape(-1, 1)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 2) # degree = 2 is default, changing might raise accuracy\nX_poly = poly_reg.fit_transform(X)\nlin_reg_audience = LinearRegression()\nlin_reg_audience.fit(X_poly, Y)\n\nY_pred = lin_reg_audience.predict(X_poly)\n\n# Grid rearange for accuracy\nX_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid)), 1)\n\nplt.scatter(X, Y, color = 'blue', marker = '+')\nplt.plot(X_grid, lin_reg_audience.predict(poly_reg.fit_transform(X_grid)), color = 'red')\nplt.ylabel(\"E-sports audience\")\nplt.xlabel(\"Year\")\nplt.title(\"Yearly e-sports audience\")\nplt.show()","bd4c5eed":"# Polynomial Regression\nY = df.iloc[:,2].values\nX = X.reshape(-1, 1)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 2) # degree = 2 is default, changing might raise accuracy\nX_poly = poly_reg.fit_transform(X)\nlin_reg_freq = LinearRegression()\nlin_reg_freq.fit(X_poly, Y)\n\nY_pred = lin_reg_freq.predict(X_poly)\n\n# Grid rearange for accuracy\nX_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid)), 1)\n\nplt.scatter(X, Y, color = 'blue', marker = '+')\nplt.plot(X_grid, lin_reg_freq.predict(poly_reg.fit_transform(X_grid)), color = 'red')\nplt.ylabel(\"E-sports frequent viewership\")\nplt.xlabel(\"Year\")\nplt.title(\"Yearly e-sports frequent viewership\")\nplt.show()","5c869220":"# Polynomial Regression\nY = df.iloc[:,3].values\nX = X.reshape(-1, 1)\n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 2) # degree = 2 is default, changing might raise accuracy\nX_poly = poly_reg.fit_transform(X)\nlin_reg_occ = LinearRegression()\nlin_reg_occ.fit(X_poly, Y)\n\n# Grid rearange for accuracy\nX_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid)), 1)\n\nplt.scatter(X, Y, color = 'blue', marker = '+')\nplt.plot(X_grid, lin_reg_occ.predict(poly_reg.fit_transform(X_grid)), color = 'red')\nplt.ylabel(\"E-sports occasional viewership\")\nplt.xlabel(\"Year\")\nplt.title(\"E-sports yearly occasional viewership\")\nplt.show()\n","bc32c8e1":"lin_reg_audience.predict(poly_reg.fit_transform([[2022]]))","74d97123":"lin_reg_freq.predict(poly_reg.fit_transform([[2022]]))","8abedfdf":"lin_reg_occ.predict(poly_reg.fit_transform([[2022]]))","c4bb7785":"Occasional audience","133664c9":"We can see the points fluctuate around the line, but seem to follow it more or less. That's not enough though, so let's try again the polynomial regression.","af3aa42c":"There is one small caveat to that though. Notice, that from year 2014 the trend follows rather differently, than before 2012. That means, if we ditch the year 2012 the trend becomes a simple linear regression one:","f850c33d":"That's a chart I'd believe more, to be honest. That's why I'm going to use polynomial regression for both groups of viewers:","32d387d8":"Overall audience","c0444352":"As we can see, this line does more justice to the data. On the site from which the data is (Statistica), was a 2022 prediction - in quantity of 1790 million dollars. Let's check whether we got close:","8d407ef4":"Frequent audience","6f707451":"We can see, that as mentioned above - simple linear regression won't work - we should try polynomial one.","3641eac5":"Here we notice, that the linear trend (apart from 2014, 2015), continues. As a bonus, predictions for 2022 (in millions of viewers):","9cb2261f":"We can see a couple of things in there:\n\n- revenue plot shows a linear trend, but not \"simple linear\", more like \"polynomialy linear\",\n- audience plots are mostly linear, with exception of year 2015, where frequent audience went above expected; that got corrected the following year though\n\nSince the trends are linear, simple linear regression and polynomial regression should be enough for this problem. Let's start by analyzing the revenue:","9624e5d4":"That concludes my analysis. If you have any tips on how I might improve, please write in the comments.","28438b2f":"Hi Kaggle community!\n\nThis is a beginners analysis on the growth of esports community: it's audience and revenue. I will be applying the methods of machine learning to try to predict the trends, which the growth will follow.\n\nLet me start by importing the necessary libraries:","22ae5529":"While 1593 million dollars is not a small sum, it's noticeably smaller that 1731 million dollars. Regardless, I'm excited to see which patch the trend will follow.\n\nNow, to the audience:","adcb0088":"If that's really the case, then the prediction for the following years will be:","77766d70":"To predict the trends, I will first plot \"raw\" data:\n\n- revenue each year,\n- general audience each year,\n- frequent audience each year,\n- and lastly, occasional audience each year\n\nNotice no data about year 2013, but that won't hinder our process.","16315665":"...and importing the dataset, then splitting it into columns."}}