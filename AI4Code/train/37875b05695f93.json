{"cell_type":{"7f93d12c":"code","bf83d302":"code","ef3325f6":"code","9300350b":"code","32a0f035":"code","f81b9fe0":"code","07a0a7a6":"code","72f749a0":"code","f48468d6":"code","2dbf474d":"code","03ecb7df":"code","bec69eed":"code","f3ede017":"code","eb46119d":"code","dde3cb2d":"code","b536159e":"code","9f014695":"code","e5e6d86e":"code","2eaf2a24":"code","a04a7dc5":"code","ce52843a":"code","8050502d":"code","318aba6d":"code","86d5182e":"code","debb4d0b":"code","f50db7d2":"code","17eda615":"code","5f3ae2a0":"code","4ca43623":"code","55180b62":"code","5a081a44":"code","15627f62":"code","b73990a1":"markdown","72d51c11":"markdown","575f791f":"markdown","37c3be78":"markdown","666ef265":"markdown","3582f045":"markdown","bbb076cb":"markdown","179afa71":"markdown","be36576e":"markdown","e2865565":"markdown","7ebaef6f":"markdown"},"source":{"7f93d12c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import cross_val_score, GridSearchCV, RepeatedStratifiedKFold\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.linear_model import LogisticRegressionCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import VotingClassifier\n\n\nsns.set_theme(style='whitegrid')","bf83d302":"train_df = pd.read_csv('..\/input\/assgn2\/train.csv')\ntest_df = pd.read_csv('..\/input\/assgn2\/eval.csv')\ntest = test_df\ntrain = train_df","ef3325f6":"train_df.info()","9300350b":"test_df.info()","32a0f035":"train_df.isnull().sum()","f81b9fe0":"test_df.isnull().sum()","07a0a7a6":"print(train_df.columns)","72f749a0":"print(test_df.columns)","f48468d6":"train_df = train_df.drop(columns=['title', 'id', 'console'], axis=1)\ntrain_df['esrb_rating_label'] = train_df['esrb_rating'].factorize(sort=False, na_sentinel=-1)[0]\ntrain_df","2dbf474d":"X = train_df.drop(['esrb_rating_label', 'esrb_rating'], axis= 1)\ny = train_df['esrb_rating_label']\n","03ecb7df":"X","bec69eed":"y","f3ede017":"test_df = test_df.drop(columns=['id', 'console'], axis =1)\ntest_df","eb46119d":"scaler = StandardScaler()\nX = scaler.fit_transform(X)\ntest_df = scaler.transform(test_df)","dde3cb2d":"dt_cls = DecisionTreeClassifier(criterion ='entropy', max_features='auto', splitter='best')\ndt_scores = cross_val_score(dt_cls, X, y, cv=10, scoring='accuracy', n_jobs=-1)\ndt_scores_df = pd.DataFrame({'Validation Scores': dt_scores})\nprint(dt_scores_df)","b536159e":"sns.histplot(dt_scores_df)","9f014695":"dt_scores_df.describe()","e5e6d86e":"knn_cls = KNeighborsClassifier(n_neighbors = 7, n_jobs=-1, algorithm='kd_tree')\nknn_scores = cross_val_score(knn_cls, X, y, cv=10, scoring='accuracy', n_jobs=-1)\nknn_scores_df = pd.DataFrame({'Validation Scores': knn_scores})\nprint(knn_scores_df)","2eaf2a24":"sns.histplot(knn_scores_df)","a04a7dc5":"knn_scores_df.describe()","ce52843a":"lr_cls = LogisticRegressionCV(n_jobs= -1, penalty='l2', random_state= 123, refit=False, solver='newton-cg')\nlr_scores = cross_val_score(lr_cls, X, y, cv=10, scoring='accuracy', n_jobs=-1)\nlr_scores_df = pd.DataFrame({'Validation Scores': lr_scores})\nprint(lr_scores_df)","8050502d":"sns.histplot(lr_scores_df)","318aba6d":"lr_scores_df.describe()","86d5182e":"svm_cls = LinearSVC(dual= True, fit_intercept= False, loss='hinge', multi_class='crammer_singer', penalty ='l1', random_state= 123, tol= 1)\nsvm_scores = cross_val_score(svm_cls, X, y, cv=10, scoring='accuracy', n_jobs=-1)\nsvm_scores_df = pd.DataFrame({'Validation Scores': svm_scores})\nprint(svm_scores_df)","debb4d0b":"sns.histplot(svm_scores_df)","f50db7d2":"svm_scores_df.describe()","17eda615":"voting_clf = VotingClassifier(\nestimators=[('tree', dt_cls), ('knn', knn_cls), ('linreg', lr_cls), ('svm', svm_cls)],\nvoting='hard', n_jobs=-1)\nvoting_clf.fit(X, y)","5f3ae2a0":"y_pred = voting_clf.predict(test_df)\nprint(y_pred)","4ca43623":"submission = pd.DataFrame({\n    'id': test['id'],\n    'esrb_rating': y_pred\n})\n\nsubmission['esrb_rating'] = submission['esrb_rating'].astype('object')\nsubmission","55180b62":"for index in range(len(submission)):\n    if submission.loc[index, 'esrb_rating'] == 0:\n        submission.loc[index, 'esrb_rating'] = 'E'\n    if submission.loc[index, 'esrb_rating'] == 1:\n        submission.loc[index, 'esrb_rating'] = 'ET'\n    if submission.loc[index, 'esrb_rating'] == 2:\n        submission.loc[index, 'esrb_rating'] = 'T'\n    if submission.loc[index, 'esrb_rating'] == 3:\n        submission.loc[index, 'esrb_rating'] = 'M'","5a081a44":"submission","15627f62":"submission.to_csv('Assignment2_v01.csv', index=False)\nprint(submission.to_string())","b73990a1":"## LinearSVC \n* Validation scores with summary statistics ","72d51c11":"# Feature extraction\n* Test data has no title a column. \n* Dropping title column from train data\n* id columns add no relevant information to the data\n* Dropping id column\n* Encoding esrb label \n* Dropping console column because it does not determine the esrb rating in any way","575f791f":"## Logistic Regression CV\n* Validation scores with summary statistics ","37c3be78":"# Exploratory Data Analysis","666ef265":"## Separating features from label","3582f045":"# Final Prediction using voting classifier","bbb076cb":"## Decision Tree Classifier \n* Validation scores with summary statistics ","179afa71":"# Loading data from CSV file","be36576e":"# Building Models","e2865565":"## KNeighbors Classifier\n* Validation scores with summary statistics ","7ebaef6f":"## Both train and test data have no missing values\n## No outliers because they are binary categorical data"}}