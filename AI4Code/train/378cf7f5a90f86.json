{"cell_type":{"2a87e6a3":"code","bd435dde":"code","5412271a":"code","3c3eb046":"code","803deb4c":"code","7cb3c614":"code","d400c6fa":"code","4af51489":"code","cbcb27d2":"code","71b6672f":"code","848d37ec":"code","f8da5d73":"code","711980a2":"code","8888d405":"code","04a43072":"code","00c8446b":"code","f4aac963":"code","63912988":"code","532b43c3":"code","16c09c5a":"code","abeedd4f":"code","9c553eb9":"code","7242d528":"code","9a34bdc8":"code","99abd159":"code","f8900515":"code","06228bb7":"code","052ad30f":"code","22e9a52e":"code","94ba2086":"code","6ad9605f":"code","1cd6c20a":"code","c2dedc37":"code","610f229e":"code","7f11f1b5":"code","4db76358":"code","212acb4a":"code","3c3feb34":"code","b9ece3f9":"code","f0227148":"code","00accce3":"code","db83e13f":"code","695dd968":"code","dbf00bc3":"code","3b2977f1":"code","31f50da2":"markdown","59ff467d":"markdown","b9fe428a":"markdown","4af718c9":"markdown","43c87326":"markdown","e5687a75":"markdown","ad0234fe":"markdown","b4eee44b":"markdown","8137c731":"markdown"},"source":{"2a87e6a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd435dde":"#pip install lazypredict","5412271a":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(color_codes = True)\n%matplotlib inline\n","3c3eb046":"train = pd.read_csv('\/kaggle\/input\/predicting-employee-attrition\/train_data.csv')\ntrain.head()","803deb4c":"train.isnull().sum()","7cb3c614":"train['Target']=np.where(train['LastWorkingDate'].isnull(),0,1)\ntrain.head()","d400c6fa":"emp_groupby = train.groupby(['Emp_ID'])['Emp_ID','Age','Gender','City','Education_Level','Salary','Joining Designation','Designation',\n                       'Quarterly Rating','Target'].tail(1)\nemp_groupby","4af51489":"emp_groupby.reset_index(inplace = True,drop = True)\nemp_groupby","cbcb27d2":"total_busi_groupby = train.groupby('Emp_ID').agg({'Total Business Value':'sum'})\ntotal_busi_groupby","71b6672f":"total_busi_groupby.reset_index(drop = True,inplace = True)","848d37ec":"final = pd.concat([total_busi_groupby,emp_groupby],axis = 1,join = 'inner')\nfinal","f8da5d73":"corr = final.corr()\n\nplt.figure(figsize = (20,8))\nsns.heatmap(corr,annot = True,cmap = 'rocket')","711980a2":"sns.catplot('Gender','Total Business Value',hue = 'Education_Level',data = final,col = 'Education_Level',col_wrap = 2)","8888d405":"sns.catplot('Education_Level','Salary',data = final,hue = 'Gender',col = 'City',col_wrap = 2)","04a43072":"plt.subplots(figsize=(20,10))\n\nplt.subplot(231)\nsns.countplot('Gender',data = final)\n\nplt.subplot(232)\nsns.countplot('Education_Level',data = final)\n\nplt.subplot(233)\nsns.countplot('Joining Designation',data = final)\n\nplt.subplot(234)\nsns.countplot('Designation',data = final)\n","00c8446b":"plt.figure(figsize = (20,8))\nsns.countplot('City',data = final,palette= 'rocket')","f4aac963":"sns.countplot('Target',data = final)","63912988":"final['Quarterly Rating'].unique()","532b43c3":"final ['Gender'] = pd.get_dummies(final['Gender'],drop_first = True)\nfinal","16c09c5a":"from sklearn.preprocessing import LabelEncoder\n\nlabel = LabelEncoder()\n\nfinal['City'] = label.fit_transform(final['City'])\n\nfinal['Education_Level'] = label.fit_transform(final['Education_Level'])","abeedd4f":"final.head()","9c553eb9":"sns.boxplot('Total Business Value',data = final)","7242d528":"Q1 = final['Total Business Value'].quantile(0.25)\nQ3 = final['Total Business Value'].quantile(0.75)\nIQR = Q3 - Q1\n\nfilter = (final['Total Business Value'] >= Q1 - 1.5 * IQR) & (final['Total Business Value']<= Q3 + 1.5 *IQR)\ntrain1 = final.loc[filter]  \nprint(\"data loss percentage {}%\".format(((len(final) - len(train1))\/len(final))*100))","9a34bdc8":"sns.boxplot('Salary',data = final)","99abd159":"Q1 = final['Salary'].quantile(0.25)\nQ3 = final['Salary'].quantile(0.75)\nIQR = Q3 - Q1\n\nfilter = (final['Salary'] >= Q1 - 1.5 * IQR) & (final['Salary']<= Q3 + 1.5 *IQR)\ntrain2 = final.loc[filter]  \nprint(\"data loss percentage {}%\".format(((len(final) - len(train2))\/len(final))*100))","f8900515":"\ntrain2.shape","06228bb7":"## Get the Fraud and the normal dataset \n\nnot_stay= (train2['Target']== 0 )\n\nstay= (train2['Target']== 1 )","052ad30f":"\nstd_x = train2.loc[:,['Total Business Value','Age','Gender','City','Education_Level','Salary','Joining Designation','Designation','Quarterly Rating']]\nstd_x.shape","22e9a52e":"y = train2.iloc[:,-1]\ny.head()","94ba2086":"from imblearn.under_sampling import NearMiss\n\n# Implementing Undersampling for Handling Imbalanced \nnm = NearMiss()\nX_res,y_res=nm.fit_resample(std_x,y)","6ad9605f":"X_res.shape,y_res.shape","1cd6c20a":"from sklearn.model_selection import train_test_split\n\n#Split data into Train and test format\nx_train,x_test,y_train,y_test = train_test_split(X_res,y_res,test_size = 0.25,random_state =105)\n\nprint('Shape of Training Xs:{}'.format(x_train.shape))\nprint('shape of Test:{}'.format(x_test.shape))","c2dedc37":"#pip install lazypredict","610f229e":"from lazypredict.Supervised import LazyClassifier\n\n\nclf = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)\nmodels,predictions = clf.fit(x_train, x_test, y_train, y_test)\n","7f11f1b5":"print(models)","4db76358":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier()\n\nclf.fit(x_train,y_train)\ny_predicted = clf.predict(x_test)\nscore = clf.score(x_test,y_test)","212acb4a":"print(score)","3c3feb34":"from sklearn.metrics import confusion_matrix\n#Confusion Matrix\n# Compute confusion matrix\ncnf_matrix = confusion_matrix(y_test, y_predicted)\nnp.set_printoptions(precision=2)\ncnf_matrix","b9ece3f9":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_predicted))","f0227148":"test = pd.read_csv('\/kaggle\/input\/predicting-employee-attrition\/test_data.csv')\n\ntest.shape","00accce3":"test_f = pd.merge(test,final,on = 'Emp_ID')\ntest_f","db83e13f":"test_final = test_f.drop(['Emp_ID','Target'],axis = 1)\ntest_final.head()","695dd968":"test_predicted = clf.predict(test_final)\ntest_predicted.shape","dbf00bc3":"submission=pd.read_csv('\/kaggle\/input\/predicting-employee-attrition\/sample_submission.csv')\n\nsubmission","3b2977f1":"submission['Target']=test_predicted\n\n\nsubmission.to_csv('Random_forest.csv',index=False)\n","31f50da2":"<a id=\"4\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>DATA_PREPROCESSING<\/center><\/h1>\n\n# 3. Data Preprocessing","59ff467d":"<a id=\"6\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>DATA_VALIDATION<\/center><\/h1>\n\n# 5. Data Validation","b9fe428a":"<a id=\"9\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>TEST_PREDICTION<\/center><\/h1>\n\n\n# 8. Prediction on Test Data","4af718c9":"<a id=\"7\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>MODEL_BUILDING<\/center><\/h1>\n\n# 6. Model Building","43c87326":"<a id=\"8\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>CONFUSION_MATRIX<\/center><\/h1>\n\n\n# 7. Confusion Matirx","e5687a75":"<a id=\"5\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>DATA_VISUALIZATION<\/center><\/h1>\n\n\n# 4.Data Visualization","ad0234fe":"<a id=\"2\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>LIBRARIES<\/center><\/h1>","b4eee44b":"<a id=\"3\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>IMPORT_DATA<\/center><\/h1>\n\n# 2.Import Data","8137c731":"<a id=\"1\"><\/a>\n<h1 style='background:#92b0ac; border:0; color:black'><center>INTRODUCTION<\/center><\/h1>\n\n- This project is based on classification output where we have numerical and categorical variable.for using this data,we need to apply data preprocessing technique to make data useable. later we also have to check data colinearity, outliers and Nan values. accordingly we need to use methods for tackling with them.\n\n- This data predict whether person will exit the company on not? however data doesnt have column to predict the output.create output variable and used validation techniuqe to split data into train and test format.\n\n- Finally I used lazy classifier and check how much accuracy will have been given by all classifiers and also check on test data how it performs.\n\n- Data contain different variable that are sub classified further:\n- 1.Demographics of the Employee 2.Tenure Information 3.Historical data regarding performance\n- Using these data we will going to find out whether employee will stay in the company and also will see another pattern with respect to time period of person stay in the company. There are other aspects also see in the notebook you can check in visualization part.\n- Using this data HR department will find out easily what type of candidate they need to take for particular job role."}}