{"cell_type":{"6233f3ae":"code","effd5795":"code","0b5fa9d1":"code","b80135bf":"code","7712c62c":"code","d6015d85":"code","89cbdec4":"code","4f46e6e4":"code","c18b66be":"code","bd7c9269":"code","4a8983ca":"code","cb5247af":"code","2b45ff91":"code","0d29a14f":"code","6a32fd37":"code","e2536432":"code","1f2039e5":"code","2fcc6149":"code","1d06e379":"code","ce6b5bd6":"code","375a8df2":"code","ff4afab3":"code","f158e193":"code","0e230acf":"code","5ed29f08":"code","0824cba6":"code","f8c8487c":"code","e95d4299":"markdown","6a1fe7bd":"markdown","e214aba1":"markdown","2cb4df22":"markdown","9d88202f":"markdown","e1011315":"markdown"},"source":{"6233f3ae":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport scipy","effd5795":"df_2015 = pd.read_csv(\"..\/input\/world-happiness\/2015.csv\")  \ndf_2016 = pd.read_csv(\"..\/input\/world-happiness\/2016.csv\") \ndf_2017 = pd.read_csv(\"..\/input\/world-happiness\/2017.csv\") ","0b5fa9d1":"df_2015.head()","b80135bf":"#Final set odf common variable matched in 3 dataset\ndf_2015 = df_2015[['Country','Happiness Rank', 'Happiness Score', 'Economy (GDP per Capita)', 'Family',\n                       'Health (Life Expectancy)', 'Freedom', 'Generosity', 'Trust (Government Corruption)']]\ndf_2016 = df_2016[['Country','Happiness Rank', 'Happiness Score', 'Economy (GDP per Capita)', 'Family',\n                       'Health (Life Expectancy)', 'Freedom', 'Generosity', 'Trust (Government Corruption)']]\ndf_2017 = df_2017[['Country', 'Happiness.Rank', 'Happiness.Score', 'Economy..GDP.per.Capita.', 'Family',\n                       'Health..Life.Expectancy.', 'Freedom', 'Generosity', 'Trust..Government.Corruption.']]\n","7712c62c":"#Final Names given to each variable\nnew_names = ['Country or region', 'Happiness Rank', 'Happiness Score', 'GDP per Capita', 'Social support',\n                       'Healthy Life Expectancy', 'Freedom', 'Generosity', 'Perceptions of corruption']","d6015d85":"df_2015.columns = new_names\ndf_2016.columns = new_names\ndf_2017.columns = new_names","89cbdec4":"#A column named Year is added\ndf_2015['Year'] = 2015\ndf_2016['Year'] = 2016\ndf_2017['Year'] = 2017","4f46e6e4":"#concatenate the dataset\ndata = pd.concat([df_2015, df_2016, df_2017], axis=0)\ndata.head(3)","c18b66be":"#2018 and 19 dataset are different compare to other 3 year \n# New data\ndf_2018 = pd.read_csv(\"..\/input\/world-happiness\/2018.csv\")\ndf_2019 = pd.read_csv(\"..\/input\/world-happiness\/2019.csv\")","bd7c9269":"# Concatenate data\ndf_2018['Year'] = 2018\ndf_2019['Year'] = 2019","4a8983ca":"new_data = pd.concat([df_2018, df_2019], axis=0)","cb5247af":"# Switching overall rank column with country\/ region\ncolumns_titles = ['Country or region', 'Overall rank', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy', 'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Year']\nnew_data = new_data.reindex(columns=columns_titles)","2b45ff91":"# Renaming old data columns i.e. the 3 year dataset\nold_data = data[['Country or region', 'Happiness Rank', 'Happiness Score', 'GDP per Capita', 'Social support',\n                       'Healthy Life Expectancy', 'Freedom', 'Generosity', 'Perceptions of corruption','Year']]\nold_data.columns = ['Country or region', 'Overall rank', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy', 'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption', 'Year']","0d29a14f":"final.head(3)","6a32fd37":"#Extract final dataset\nfinal.to_csv (r'C:\\Users\\Pritha Roy Choudhary\\Downloads\\Kaggle\\final.csv', index = False, header=True)","e2536432":"# Double check to see if there are any missing values left\nplt.figure(figsize = (16,6))\nsns.heatmap(data = data.isna(), cmap = 'Blues')\n\nplt.xticks(fontsize = 13.5);","1f2039e5":"data[data['Perceptions of corruption'].isna()]","2fcc6149":"final.describe()","1d06e379":"final.info()\n#Columns overview","ce6b5bd6":"#setting color palette and style for the rest of the graphs\nsns.set_palette(\"GnBu_d\")\nsns.set_style('darkgrid')","375a8df2":"sns.jointplot(x = 'GDP per capita', y = 'Score', data = final)","ff4afab3":"f,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(final.corr(), annot = True, linewidth = 0.5, fmt='.2f', ax=ax)\nplt.show()","f158e193":"#Important check - Normal Distribution\nsns.distplot(final['Score'])","0e230acf":"#Consider X and Y as per correlation plot\n#Before running in pycaret checked by doing MLR\nX = final[['Perceptions of corruption', 'Freedom to make life choices', 'Social support','GDP per capita','Generosity']]\ny = final['Score']","5ed29f08":"from pycaret.regression import *\nexp_reg = setup(df, target = 'Score')","0824cba6":"ridge_reg = create_model('ridge')\ntuned_ridge = tune_model('ridge')\nplot_model(estimator=tuned_ridge)\nX = df[['Country or region','Overall rank','GDP per capita', 'Social support', 'Healthy life expectancy','Freedom to make life choices','Generosity','Perceptions of corruption','Year']]","f8c8487c":"pred = predict_model(tuned_ridge, data=X)\n","e95d4299":"**Ridge Regression**","6a1fe7bd":"**EDA**","e214aba1":"# Happiness Index Analysis with Prediction\n\n1) Data Preparation - Seperate 5 files\n2) Visualization\n4) Modeling \n5) Conclusion","2cb4df22":"****Jointplot to compare the Time on Website and Yearly Amount Spent columns****","9d88202f":"**Data UnderStanding**","e1011315":"# Concatenating all data\nfinal = pd.concat([old_data, new_data], axis=0)"}}