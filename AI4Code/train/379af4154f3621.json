{"cell_type":{"ed7ee96b":"code","55f3730a":"code","af2bc1c5":"code","045d3a65":"code","047bc7f4":"code","eaf4e4dc":"code","08a1cf83":"code","3722baca":"code","e0946e78":"code","7f3f78c5":"code","f3da5c56":"code","9e599ded":"code","6ad8a8c1":"code","beebdb74":"code","dc70385b":"code","22ff4508":"code","b9c792d9":"code","eed8edb7":"markdown","d43090e9":"markdown","ce85d966":"markdown"},"source":{"ed7ee96b":"#importing the required libraries\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom scipy.fft import fft,fftfreq\nfrom sklearn.preprocessing import StandardScaler","55f3730a":"#loading the dataset using pandas\nx_train = pd.read_csv(\"..\/input\/power-quality-distribution-dataset-2\/VoltageL1Train.csv\")\ny_train = pd.read_csv(\"..\/input\/power-quality-distribution-dataset-2\/outputTrain.csv\")\nx_test = pd.read_csv(\"..\/input\/power-quality-distribution-dataset-2\/VoltageL1Test.csv\")\ny_test = pd.read_csv(\"..\/input\/power-quality-distribution-dataset-2\/outputTest.csv\")","af2bc1c5":"print(\"x_train\",x_train.shape)\nprint(\"y_train\",y_train.shape)\nprint(\"x_test\",x_test.shape)\nprint(\"y_test\",y_test.shape)","045d3a65":"header =[]\nfor i in range(1,x_train.shape[1]+1):\n    header.append(\"Col\"+str(i))\n","047bc7f4":"x_train.columns = header\nx_test.columns = header","eaf4e4dc":"header = [\"output\"]\ny_train.columns = header\ny_test.columns = header","08a1cf83":"x_train = x_train.to_numpy()\nx_test = x_test.to_numpy()","3722baca":"X_train = np.zeros((x_train.shape[0],256))\nX_test = np.zeros((x_test.shape[0],256))\n\nfor i in range(0,x_train.shape[0]):\n    for j in range(0,256):\n         X_train[i][j] = x_train[i][j]#+x_train[i][255-j]\n\nfor i in range(0,x_test.shape[0]):\n    for j in range(0,256):\n        X_test[i][j] = x_test[i][j]#+x_test[i][255-j]\n    ","e0946e78":"print(X_train.shape)\nX_train","7f3f78c5":"transform = StandardScaler()\nX_norm = transform.fit_transform(X_train)","f3da5c56":"X_norm_fft = X_train.copy()\nn = X_norm_fft.shape[0]\nfor i in range(0,x_train.shape[0]):\n    X_norm_fft[i][:] = np.abs(fft(X_train[i][:]))\ntransform = StandardScaler()\nX_norm_fft = np.log(X_norm_fft)#transform.fit_transform(X_norm_fft)    ","9e599ded":"print(\"class\", \"TYPE-1\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[0][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[0][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[0][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[0][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","6ad8a8c1":"print(\"class\", \"TYPE-2\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[1995][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[1995][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[1995][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[1995][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","beebdb74":"print(\"class\", \"TYPE-3\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[1999][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[1999][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[1999][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[1999][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","dc70385b":"print(\"class\", \"TYPE-4\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[3495][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[3495][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[3495][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[3495][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","22ff4508":"print(\"class\", \"TYPE-5\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[4495][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[4495][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[4495][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[4495][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","b9c792d9":"print(\"class\", \"TYPE-6\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,257)], X_train[5495][0:256])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(X_train[5495][0:256])\nxf = fftfreq(256,1\/256)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,257)], X_norm[5495][0:256])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,257)], X_norm_fft[5495][0:256])\naxes[1][1].title.set_text('With_NormAndFFT')","eed8edb7":"# EDA on dataset - 2","d43090e9":"This segment of notebook contains all the preprocessing steps which are performed on the data.","ce85d966":"## Data Preprocessing"}}