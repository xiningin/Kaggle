{"cell_type":{"5374de6d":"code","c4bda5de":"code","86a7b65a":"code","6feab332":"code","992744b4":"code","ec82f691":"code","33541bb4":"code","1ac22e37":"code","7d4ecf73":"code","ade8ad5c":"code","3b1e3901":"code","54c5beef":"code","d545f4f1":"code","19ee139a":"code","3242a31a":"code","df720060":"code","3cbb2d64":"code","95ebcfe6":"code","09eb4d1f":"code","48efee47":"code","ce097183":"code","505097d1":"code","a94ce592":"code","cd61870d":"code","e92f4598":"code","3d1d31b0":"code","3355816c":"code","291b0239":"code","4a073711":"code","46e6b1f7":"code","6a6d1811":"code","95965728":"code","418ae429":"code","072781af":"code","986f0db7":"markdown","117e3ce4":"markdown","27243106":"markdown","5f221077":"markdown","14dc1778":"markdown","ff08fc74":"markdown","babaaede":"markdown","f8a92622":"markdown","9ff19d2f":"markdown","e01085f1":"markdown","37610aa6":"markdown","473e76be":"markdown","a5b0df6d":"markdown","1dc7ce06":"markdown","b09d8b2d":"markdown","503b04e1":"markdown","671a456c":"markdown","07d73f42":"markdown","cc9ce2a7":"markdown","353b4eb7":"markdown","36605317":"markdown","4e14c0a5":"markdown","aafa03da":"markdown"},"source":{"5374de6d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4bda5de":"!pip install xlrd\n!pip install openpyxl\n!pip install lifetimes\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime as dt\nimport seaborn as sns\nimport missingno as msno\nfrom sklearn.preprocessing import MinMaxScaler\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\nimport warnings\nwarnings.filterwarnings(\"ignore\")","86a7b65a":"# reading the dataset\n\ndf1=pd.read_excel(\"\/kaggle\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx\",\n                  sheet_name=\"Year 2009-2010\")","6feab332":"#copy\n\ndf=df1.copy()","992744b4":"df.head()","ec82f691":"#Checking Variables\n\ndef check_df(dataframe):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"##################### Head #####################\")\n    print(dataframe.head(3))\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(3))\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ncheck_df(df)","33541bb4":"df.describe([0.01,0.25,0.50,0.75,0.99]).T","1ac22e37":"# there is no specific correlation between missing values\n\n\nmsno.heatmap(df);","7d4ecf73":"sns.boxplot(df[\"Quantity\"]);","ade8ad5c":"sns.boxplot(df[\"Price\"]);","3b1e3901":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\n","54c5beef":"replace_with_thresholds(df,\"Quantity\")\nreplace_with_thresholds(df,\"Price\")","d545f4f1":"# outliers values are now cleaner.\n\ndf.describe([0.01,0.25,0.50,0.75,0.99]).T","19ee139a":"def crm_data_prep(dataframe):\n    dataframe.dropna(axis=0, inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    return dataframe\n\n","3242a31a":"df=crm_data_prep(df)\ncheck_df(df)\n","df720060":"sns.boxplot(df[\"Quantity\"])","3cbb2d64":"sns.boxplot(df[\"Price\"]);","95ebcfe6":"# last transaction date\n\ndf[\"InvoiceDate\"].max()\n","09eb4d1f":"def create_rfm(dataframe):\n    # RFM Metrics\n    \n\n    today_date = dt.datetime(2010, 12, 11)\n\n    rfm = dataframe.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                                'Invoice': lambda num: num.nunique(),\n                                                \"TotalPrice\": lambda price: price.sum()})\n\n    rfm.columns = ['recency', 'frequency', \"monetary\"]\n\n    rfm = rfm[(rfm['monetary'] > 0)]\n\n\n    # RFM score\n    rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n    rfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n\n\n\n    # segment naming\n    rfm['rfm_segment'] = rfm['recency_score'].astype(str) + rfm['frequency_score'].astype(str)\n\n    seg_map = {\n        r'[1-2][1-2]': 'hibernating',\n        r'[1-2][3-4]': 'at_risk',\n        r'[1-2]5': 'cant_loose',\n        r'3[1-2]': 'about_to_sleep',\n        r'33': 'need_attention',\n        r'[3-4][4-5]': 'loyal_customers',\n        r'41': 'promising',\n        r'51': 'new_customers',\n        r'[4-5][2-3]': 'potential_loyalists',\n        r'5[4-5]': 'champions'\n    }\n\n    rfm['rfm_segment'] = rfm['rfm_segment'].replace(seg_map, regex=True)\n    rfm = rfm[[\"recency\", \"frequency\", \"monetary\", \"rfm_segment\"]]\n    return rfm\n\n\n","48efee47":"rfm = create_rfm(df)\nrfm.head()","ce097183":"plt.figure(figsize=(15,7))\nsns.barplot(x=\"rfm_segment\", y=\"frequency\", data=rfm)","505097d1":"check_df(rfm)","a94ce592":"\ndef create_cltv_calculated(dataframe):\n    # avg_order_value\n    dataframe['avg_order_value'] = dataframe['monetary'] \/ dataframe['frequency']\n\n    # purchase_frequency\n    dataframe[\"purchase_frequency\"] = dataframe['frequency'] \/ dataframe.shape[0]\n\n    # repeat rate & churn rate\n    repeat_rate = dataframe[dataframe.frequency > 1].shape[0] \/ dataframe.shape[0]\n    churn_rate = 1 - repeat_rate\n\n    # profit_margin\n    dataframe['profit_margin'] = dataframe['monetary'] * 0.05\n\n    # Customer Value\n    dataframe['cv'] = (dataframe['avg_order_value'] * dataframe[\"purchase_frequency\"])\n\n    # Customer Lifetime Value\n    dataframe['cltv'] = (dataframe['cv'] \/ churn_rate) * dataframe['profit_margin']\n\n    # minmaxscaler\n    scaler = MinMaxScaler(feature_range=(1, 100))\n    scaler.fit(dataframe[[\"cltv\"]])\n    dataframe[\"cltv_calculated\"] = scaler.transform(dataframe[[\"cltv\"]])\n\n    dataframe[\"cltv_calculated_segment\"] = pd.qcut(dataframe[\"cltv_calculated\"], 3, labels=[\"C\", \"B\", \"A\"])\n\n    dataframe = dataframe[[\"recency\", \"frequency\", \"monetary\", \"rfm_segment\",\n                           \"cltv_calculated\", \"cltv_calculated_segment\"]]\n\n    return dataframe\n\n","cd61870d":"rfm_cltv = create_cltv_calculated(rfm)\ncheck_df(rfm_cltv)\n","e92f4598":"plt.figure(figsize=(15,7))\nsns.barplot(x=\"rfm_segment\", y=\"cltv_calculated\", data=rfm_cltv)","3d1d31b0":"rfm_cltv.head()","3355816c":"plt.figure(figsize=(15,7))\nsns.barplot(x=\"cltv_calculated\", y=\"cltv_calculated_segment\", data=rfm_cltv)","291b0239":"# The correlation seems very weak. \n\nplt.scatter(rfm_cltv.monetary,rfm_cltv.frequency,s=75)\n\n\nplt.xlabel(\"monetary\")\nplt.ylabel(\"frequency\")\nplt.legend()\nplt.show()","4a073711":"def create_cltv_predicted(dataframe):\n    today_date = dt.datetime(2010, 12, 11)\n\n    ## recency value customized\n    rfm = dataframe.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max()-date.min()).days,\n                                                                lambda date: (today_date - date.min()).days],\n                                                'Invoice': lambda num: num.nunique(),\n                                                'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\n    rfm.columns = rfm.columns.droplevel(0)\n\n    ## recency_cltv_predicted\n    rfm.columns = ['recency_cltv_predicted', 'T', 'frequency', 'monetary']\n\n    ## basic monetary_avg\n    rfm[\"monetary\"] = rfm[\"monetary\"] \/ rfm[\"frequency\"]\n\n    rfm.rename(columns={\"monetary\": \"monetary_avg\"}, inplace=True)\n\n\n  \n    ## recency_weekly_cltv_predicted\n    rfm[\"recency_weekly_cltv_predicted\"] = rfm[\"recency_cltv_predicted\"] \/ 7\n    rfm[\"T_weekly\"] = rfm[\"T\"] \/ 7\n\n\n\n    # CONTROL\n    rfm = rfm[rfm[\"monetary_avg\"] > 0]\n\n    ## recency filter\n    rfm = rfm[(rfm['frequency'] > 1)]\n\n    rfm[\"frequency\"] = rfm[\"frequency\"].astype(int)\n\n    # BGNBD\n    bgf = BetaGeoFitter(penalizer_coef=0.01)\n    bgf.fit(rfm['frequency'],\n            rfm['recency_weekly_cltv_predicted'],\n            rfm['T_weekly'])\n\n\n    # Gamma Gamma\n    ggf = GammaGammaFitter(penalizer_coef=0.01)\n    ggf.fit(rfm['frequency'], rfm['monetary_avg'])\n    rfm[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(rfm['frequency'],\n                                                                             rfm['monetary_avg'])\n    # 6 months cltv_p\n    cltv = ggf.customer_lifetime_value(bgf,\n                                       rfm['frequency'],\n                                       rfm['recency_weekly_cltv_predicted'],\n                                       rfm['T_weekly'],\n                                       rfm['monetary_avg'],\n                                       time=6,\n                                       freq=\"W\",\n                                       discount_rate=0.01)\n\n    rfm[\"cltv_predicted\"] = cltv\n\n    # minmaxscaler\n    scaler = MinMaxScaler(feature_range=(1, 100))\n    scaler.fit(rfm[[\"cltv_predicted\"]])\n    rfm[\"cltv_predicted\"] = scaler.transform(rfm[[\"cltv_predicted\"]])\n\n    # rfm.fillna(0, inplace=True)\n\n    # cltv_predicted_segment\n    rfm[\"cltv_predicted_segment\"] = pd.qcut(rfm[\"cltv_predicted\"], 3, labels=[\"C\", \"B\", \"A\"])\n\n    ## recency_cltv_predicted, recency_weekly_cltv_predicted\n    rfm = rfm[[\"recency_cltv_predicted\", \"T\", \"monetary_avg\", \"recency_weekly_cltv_predicted\", \"T_weekly\",\n               \"expected_average_profit\",\"cltv_predicted\", \"cltv_predicted_segment\"]]\n\n\n    return rfm\n","46e6b1f7":"rfm_cltv_predicted = create_cltv_predicted(df)\ncheck_df(rfm_cltv_predicted)","6a6d1811":"rfm_cltv_predicted.head()","95965728":"rfm_cltv_predicted.groupby('cltv_predicted_segment').agg('expected_average_profit').mean().plot(kind='bar', colormap='copper_r');\n\nplt.ylabel(\"profit\");","418ae429":"crm_final = rfm_cltv.merge(rfm_cltv_predicted, on=\"Customer ID\", how=\"left\")\ncheck_df(crm_final)","072781af":"# will be effective in campaign decisions\n\ncrm_final.sort_values(by=\"monetary_avg\", ascending=False).head()","986f0db7":"<font color = '#D35400'>\n    \n<a id = \"20\"><\/a><br>\n\n# FINAL\n\nSo we can analyze each metric comparatively.\n\nWe can make different decisions for customers in different segments.\n\nWe can make different campaigns according to the decisions taken.\n\nAfter that, the productivity of the campaign can be measured by making different offers to the masses.\n\nA\/B test can be used for this.","117e3ce4":"<font color = '#F1C40F'>\n<p><img style=\"float: right;margin:-10px 20px 20px 5px; max-width:380px\" src=\"https:\/\/www.surveysensum.com\/wp-content\/uploads\/2019\/11\/customer-lifetime-Value-SurveySensum.png\">\n \n\n<a id = \"13\"><\/a><br>\n\n #   What is Customer Lifetime Value(CLV or CLTV)?\n    \n    ","27243106":"# Let's start now!","5f221077":"<font color = '#F1C40F'>\n    \n<a id = \"14\"><\/a><br>\n\n### CLTV Calculated","14dc1778":"<font color = '#D35400'>\n\nCheck out descriptive statistics of numerical variables. See the difference between 75% and 99% values and then See the difference between 99% and max values. We can think that there are some outliers.","ff08fc74":"<font color = '#D35400'>\nMissing values are deleted. Canceled Invoices are not received and and a new variable was created.","babaaede":"\n<font color = '#34495E'>\n\n\n\nCustomer lifetime value is how much money a customer will bring your brand throughout their entire time as a paying customer.It is the monetary value that a customer will give to a company during its relationship-communication with a company. \n\nIn fact, it is to be able to extract the future situation from the current situation of the customer.\n\n\nFor this we will first make a simple calculation and then we will add the time factor.\n","f8a92622":"\n    \n<font color = '#FF7F50'>\n\nContent:\n1. [Customer Relationship Management (CRM)](#1)\n* [What is CRM?](#2)\n* [What is the purpose?](#3)\n* [Content of Dataset](#4)\n* [Attribute Information](#5)\n2. [Load Dataset](#6)\n3. [Data Preprocessing](#7)\n4. [RFM](#10)\n* [What is RFM?](#11)\n* [RFM Segments](#12)\n5. [What is Customer Lifetime Value(CLV or CLTV)?](#13)\n* [CLTV Calculated](#14)\n6. [CLTV Predicted](#15)\n* [What is a cohort model?](#16)\n* [BG-NBD](#17)\n* [Gamma Gamma](#18)\n7. [And Finally CRM](#19)\n8. [Final](#20)","9ff19d2f":" <font color = '#34495E'>\n\n\n Now, we are creating RFM.\n\n  <a id = \"11\"><\/a><br>\n ### What is RFM?\n<p><img style=\"float: right;margin:-10px 20px 20px 5px; max-width:380px\" src=\"https:\/\/d35fo82fjcw0y8.cloudfront.net\/2018\/03\/01013508\/Incontent_image.png\"><p>RFM represents a method used for measuring customer value. An RFM analysis can show you who are the most valuable customers for your business. The ones who buy most frequently, most often, and spend the most. First of all, the metrics you have seen are calculated\n\n\n\n","e01085f1":"\n<font color = '#34495E'>\n\n <a id = \"2\"><\/a><br>\n### What is CRM? \n\nCustomer relationship management (CRM) is the combination of practices, strategies and technologies that companies use to manage and analyze customer interactions and data throughout the customer lifecycle.It tries to understand the customer profile of the company and to communicate according to these profiles. Moreover CRM targets to gain new customers other than existing customers\n\nAnalyzes on customers, finding audiences belonging to certain behaviors and organizing campaigns suitable for that audienceWith CRM software, the customer feels special, so dependency occurs for the company or product.In this study, we will create CRM by making RFM and then CLTV.\n\n <a id = \"3\"><\/a><br>\n### What is the purpose?\n\nIn this notebook, we will create CRM by making RFM and then CLTV.\n\n<a id = \"4\"><\/a><br>\n### Content of Dataset\n\nThis Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers.\n\n<a id = \"5\"><\/a><br>\n### Attribute Information:\n\nInvoiceNo: Invoice number. If this code starts with the letter 'c', it indicates a cancellation.\nStockCode: Product code.\nDescription: Product name.\nQuantity: The quantities of each product per transaction.\nInvoiceDate: Invoice date and time.The day and time when a transaction was generated.\nUnitPrice: Unit price. Product price per unit in sterling.\nCustomerID: Customer number.A 5-digit integral number uniquely assigned to each customer.\nCountry: Country name. The name of the country where a customer resides.\n\n\n\n","37610aa6":"<font color = '#D35400'>\n\nThis time we divided people into A, B, C segments. (Not to be confused with rfm segmentation.) Let's remember we do life-time value calculations.\n\nThe calculations in the table have been made.\n\nStandardization process was done for better understanding.","473e76be":"\n\n<font color = '#F1C40F'>\n    \n<a id = \"19\"><\/a><br>\n    \n# And Finally...CRM!","a5b0df6d":"<font color = '#D35400'>\nOutlier values are trimmed (very little) without damaging the data.Here we have set a lower and upper limit. But since the lower limit is set, we'll only assign it to the upper limit. We'll do it for Quantity and Price.","1dc7ce06":"<font color = '#D35400'>\nVariables are as follows after they are cleared of outliers values.","b09d8b2d":"\n    \n<font color = '#F1C40F'>\n\n<a id = \"6\"><\/a><br>\n#  Load Dataset","503b04e1":"<font color = '#F1C40F'>\n\n<a id = \"1\"><\/a><br>\n#  CUSTOMER RELAT\u0130ONSH\u0130P MANAGEMENT(CRM) \n<img style=\"float: margin:1000px 50px 50px 1px; max-width:500px\" src=\"https:\/\/previews.123rf.com\/images\/wrightstudio\/wrightstudio1706\/wrightstudio170604163\/80553736-crm-customer-relationship-management-concept-customer-service-and-relationship-.jpg\">\n","671a456c":"<a id = \"12\"><\/a><br>\nThen segments are created. \n\n**So why are we doing this?**\n\nWe look for answers to these questions;\n\n-Who is our most profitable customer?\n-What is it they appreciate in my products or services?\n-Who are my new customers?\n-How do I attract new customers to the company?\n\nThe answers to the questions are hidden in the segmentation.\n\nWith better RFM segmentation, we\u2019ll be able to address certain segments in a personalized manner, based on their needs and preferences.\n\nBrowse the scheme to more easily understand segmentation.\n","07d73f42":"<font color = '#F1C40F'>\n\n <a id = \"7\"><\/a><br>\n# Data Preprocessing","cc9ce2a7":"<a id = \"17\"><\/a><br>\n### BG-NBD\n\n\nIn short, expected sales value. Used to estimate how many purchases customers can make over a period of time\n\nThis method computes the probability that a customer with history (frequency, recency_weekly, T_weekly) is currently alive.(relationship between recency & frequency)\n\n<a id = \"18\"><\/a><br>\n### Gamma Gamma\n\n-conditional expected number of purchases up to time-\n\n**Note1**: There should be no correlation between the **frequency of transactions** and **their monetary value.**\n\n**Note2:** We are considering only customers who made repeat purchases with the business i.e., frequency > 0. Because, if the frequency is 0, it means that they are a one-time customer and are considered already dead.\n","353b4eb7":"\n![](https:\/\/miro.medium.com\/max\/1234\/0*JJBP4ToZiaw0HVPN.png) ","36605317":" <font color = '#F1C40F'>\n\n<a id = \"10\"><\/a><br>\n# RFM\n","4e14c0a5":"<font color = '#F1C40F'>\n    \n<a id = \"15\"><\/a><br>\n\n### CLTV Preticted","aafa03da":"<a id = \"16\"><\/a><br>\n What is a cohort model?\n\nInstead of simply assuming all the customers to be one group, we can try to split them into multiple groups and calculate the CLTV for each group. \n\n **Note**: recency value customized. (One of the key differences between RFM and CLTV)"}}