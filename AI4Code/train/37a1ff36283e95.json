{"cell_type":{"a06b119b":"code","775dd5fb":"code","090e3042":"code","032f6e1e":"code","6b674bd2":"code","b78a8e8b":"code","3c3b69fd":"code","0ac2524c":"markdown"},"source":{"a06b119b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport requests\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium.plugins import TimestampedGeoJson\nimport re","775dd5fb":"'''Parsing data www.gsras.ru'''\nURL = 'http:\/\/www.gsras.ru\/cgi-bin\/new\/mapCustom.pl?l=0&lat=51.719&lon=94.43&num=1000&rad=400'\nr = requests.get(URL)\ndf = pd.read_html(r.text, header=0)[2]\ndf['\u0412\u0440\u0435\u043c\u044f [GMT]'] = pd.to_datetime(df['\u0412\u0440\u0435\u043c\u044f [GMT]'])\ndf.rename(columns={'N': 'N', '\u0412\u0440\u0435\u043c\u044f [GMT]': 'date', '\u0428\u0438\u0440. \u0433\u0440': 'lat', '\u0414\u043e\u043b\u0433. \u0433\u0440': 'lot',\n                  '\u0413\u043b\u0443\u0431. \u043a\u043c': 'deep', '\u0421\u0442\u0430\u043d\u0446\u0438\u0438': 'staion', 'Ms': 'ms', 'I0': 'intensiv', '\u0420\u0435\u0433\u0438\u043e\u043d': 'reg'}, inplace=True)\n#df = df.set_index('date')","090e3042":"df.info()","032f6e1e":"def to_float(x):\n    if x == '-':\n        x = np.nan\n        return x\n    elif x == '':\n        x = np.nan\n        return x\n    else:\n        return float(x)\n\ndef io_float(x):\n    if x == '-':\n        return np.nan\n    elif x == '':\n        return np.nan\n    else:\n        x = str(x)\n        x = x.split('-')\n        if len(x) == 1:\n            return float(x[0])\n        else:\n            return float(x[0])           \n    \n    \ndf.ms = df['ms'].apply(lambda x : to_float(x))\ndf.mb = df['mb'].apply(lambda x : to_float(x))\ndf.intensiv = df['intensiv'].apply(lambda x : io_float(x))\n\ndf.describe()","6b674bd2":"df","b78a8e8b":"select_time = df.set_index('date').groupby(pd.Grouper(freq='M')).count()\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(15,15))\n\ndf.plot(x='intensiv', y='mb', kind='hist', title= \"frequency\", ax=axes[0,0])\ndf.plot(x='intensiv', y='mb', kind='scatter', title= \"intensity IO\", ax=axes[0,1])\ndf.plot(x='deep', y='mb', kind='scatter', title= \"Explosion depth\", ax=axes[1,0])\nselect_time.N.plot(title= \"Frequency month\", ax=axes[1,1])","3c3b69fd":"'''\u0441\u0442\u0440\u043e\u0438\u043c \u043a\u0430\u0440\u0442\u0443 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 folium'''\nm = folium.Map(\n    location=[51.719082, 94.433983],\n    tiles='Stamen Toner',\n    zoom_start=7\n)\nfor er in df.values.tolist():\n    st = (er[5])   \n    lat = float(er[2])\n    lot = float(er[3])    \n    point = (lat,lot)\n    folium.CircleMarker(\n    location=point,\n    radius=5,    \n    color= '#cc',\n    fill=True,\n    fill_color='#ff0000'\n).add_to(m)\nm\n","0ac2524c":"Data parser and analysis of earthquakes on the territory of the Republic of Tyva"}}