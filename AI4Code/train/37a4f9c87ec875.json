{"cell_type":{"f7842c30":"code","2bed845d":"code","a2975bc2":"code","881f42b3":"code","75399499":"code","0ca64bb9":"code","9de73c00":"code","064df46c":"code","34e22eee":"code","c38d4bda":"code","34e63f5c":"code","e4b1e166":"code","cc963dd4":"code","1e0c7b72":"code","1b315c21":"code","89853c5c":"code","c1663db8":"code","9a6e3386":"code","c21bad09":"code","fbe0b601":"code","058e8bbd":"code","d176987f":"markdown","5107705a":"markdown","2a72860b":"markdown","934c2104":"markdown"},"source":{"f7842c30":"import numpy as np\nimport pandas as pd","2bed845d":"# reading in data files\n\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","a2975bc2":"train_data[:10]","881f42b3":"train_data.describe(include='all')","75399499":"above30 = train_data[train_data['Age'] > 30]['Survived']\nrate_above30 = sum(above30)\/len(above30)\nprint('% of people older than 30 who survived:', rate_above30)","0ca64bb9":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","9de73c00":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","064df46c":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","34e22eee":"train_data[['Sex', 'Pclass', 'Survived']].groupby(['Pclass','Sex']).count()","c38d4bda":"train_data[['Sex', 'Pclass', 'Survived']].groupby(['Pclass','Sex']).mean()","34e63f5c":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","e4b1e166":"women_count = 0\nwomen_survived_count = 0\n\nfor idx, row in train_data.iterrows():\n    people_count += 1\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\n\nprint(women_survived_count \/ women_count)","cc963dd4":"women_under50_count = 0\nwomen_under50_survived_count = 0\nfor idx, row in train_data.iterrows():\n    people_count += 1\n    if row['Sex'] == 'male' and row['Age'] < 15:\n        women_under50_count += 1\n        if row['Survived'] == 1:\n            women_under50_survived_count += 1\n\nprint(women_under50_count)\nprint(women_under50_survived_count \/women_under50_count)","1e0c7b72":"predictions = []\nfor idx, row in test_data.iterrows():\n    if row['Sex'] == 'female' and row['Pclass'] != 3:\n        # if (something that makes a woman more likely to die):\n        #      append(0)\n        # else:\n        predictions.append(1)\n    elif row['Age'] < 15:\n        # if (something that makes a man more likely to survive)\n        #      append(1)\n        # else:\n        predictions.append(1)\n    else:\n        predictions.append(0)\n\n# what is going to bring the success rate down?\n# - any woman that died\n# - any man that survived","1b315c21":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","89853c5c":"test_data['Survived'] = predictions","c1663db8":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","9a6e3386":"test_data[['PassengerId','Survived']]['Survived']","c21bad09":"train_survived = []\nfor idx, row in train_data.iterrows():\n    if row['Survived'] == 1:\n        train_survived.append(1)\n    else:\n        train_survived.append(0)\nsum(train_survived)","fbe0b601":"test_survived = []\nfor idx, row in test_data.iterrows():\n    if row['Survived'] == 1:\n        test_survived.append(1)\n    else:\n        test_survived.append(0)\nsum(test_survived)","058e8bbd":"correct = 0\nfor idx in range(len(test_survived)):\n    if(test_survived[idx] == train_survived[idx]):\n        correct += 1\ncorrect\/len(test_survived)","d176987f":"# Making predictions","5107705a":"# Basic analysis","2a72860b":"# Loading and examining data","934c2104":"# Working with rows manually"}}