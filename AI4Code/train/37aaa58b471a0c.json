{"cell_type":{"e830d4f9":"code","6f20d886":"code","0197e8e7":"code","bcf1b78c":"code","e3244340":"code","1c833301":"code","208830d0":"code","d5363f1b":"code","7989afb6":"code","597defef":"code","801c20c4":"code","d58e7a31":"code","ad803e62":"code","d19f26a2":"code","e60aaaf9":"code","8abde76c":"code","e7e9c7bc":"code","a200f198":"code","126d74d4":"code","a476209f":"code","2be499f5":"code","d7f86925":"code","19d662e3":"code","a35cfaa0":"code","07110072":"code","d344ff20":"code","51367bb9":"code","85c55129":"code","890f704e":"code","b293bbe2":"code","6d79ac59":"code","45262640":"code","24fdd5c3":"code","ba183300":"code","fe60b58a":"code","2c120e1d":"code","f8c61797":"code","71af0adf":"code","869d9371":"code","74208141":"code","cb6998d4":"code","7292d807":"code","d1daf02c":"code","94ed5cda":"code","61800df5":"code","accab2ba":"code","9e22a9df":"code","86d7b3d1":"code","c927f658":"code","767b66c6":"code","623740e5":"code","95db0582":"code","8322fa53":"code","3b2eba55":"code","74caadcd":"code","78113815":"code","4abf257d":"code","8249fcd0":"code","86446e78":"code","3f810818":"markdown","01b5ffad":"markdown","0a9938a8":"markdown","b9dad065":"markdown","4b629b21":"markdown","e6269d1e":"markdown","6409603c":"markdown","984acf3a":"markdown","643d7fca":"markdown","8df9763e":"markdown","7ab6f743":"markdown","ae44a683":"markdown","c6d493df":"markdown","48a92935":"markdown","5e4acf39":"markdown","2008fcda":"markdown","d2846d49":"markdown"},"source":{"e830d4f9":"import numpy as np\nimport pandas as pd \nimport plotly.express as px\nfrom plotly.offline import plot, iplot, init_notebook_mode","6f20d886":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0197e8e7":"\ndf=pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')\ndf.head(n=10)","bcf1b78c":"df.shape","e3244340":"df.info()","1c833301":"fig=px.pie(df,names='Sex',hole=0.5)\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 1.5)))\n\nfig.show()","208830d0":"fig=px.histogram(df,x='Age',color='Sex', title=\"<b>Average Age Gender wise<\/b>\")\nfig.add_vline(x=df['Age'].mean(),line_dash=\"dash\")\nfig.show()","d5363f1b":"male=df[df['Sex']=='M']\nprint(male.shape)","7989afb6":"male_risk_of_HeartAttack=male[male['HeartDisease']==1]\nmale_risk_of_HeartAttack.shape","597defef":"details_male={\"Total Male\":male.shape[0],\n              \"Total Male affected by Heart Disease\":male_risk_of_HeartAttack.shape[0],\n               \"Percentage of Males getting Affected\":np.round((male_risk_of_HeartAttack.shape[0]*100)\/male.shape[0])\n    \n}\n","801c20c4":"details_male","d58e7a31":"female=df[df['Sex']=='F']\nprint(female.shape)","ad803e62":"female_riskOf_HeartAttack=female[female['HeartDisease']==1]\nfemale_riskOf_HeartAttack.shape","d19f26a2":"details_female={\"Total Female\":female.shape[0],\n              \"Total Female affected by Heart Disease\":female_riskOf_HeartAttack.shape[0],\n               \"Percentage of Females getting Affected\":np.round((female_riskOf_HeartAttack.shape[0]*100)\/female.shape[0])\n    \n}","e60aaaf9":"details_female","8abde76c":"Full_details={\"Total Male\":male.shape[0],\n              \"Total Male affected by Heart Disease\":male_risk_of_HeartAttack.shape[0],\n               \"Percentage of Males getting Affected\":np.round((male_risk_of_HeartAttack.shape[0]*100)\/male.shape[0]),\n              \"Total Female\":female.shape[0],\n              \"Total Female affected by Heart Disease\":female_riskOf_HeartAttack.shape[0],\n               \"Percentage of Females getting Affected\":np.round((female_riskOf_HeartAttack.shape[0]*100)\/female.shape[0])\n    \n                \n    \n}\ngender_wise=pd.DataFrame(Full_details,index=['Details'])","e7e9c7bc":"gender_wise.T","a200f198":"fig=px.histogram(df,x='Sex',color='HeartDisease',template='plotly_dark')\nfig.show()","126d74d4":"old_age=df[df['Age']>df['Age'].mean()]\nold_age.shape","a476209f":"old_age_risk=old_age[old_age['HeartDisease']==1]\nold_age_risk.shape","2be499f5":"oldAge_details={ 'Total old age people':old_age.shape[0],\n                 'old age people who suffered Heart Diasese':old_age_risk.shape[0],\n                 '% of old age people who suffered Heart Diasese':np.round(old_age_risk.shape[0]*100\/old_age.shape[0])\n                  }","d7f86925":"old_age_details=pd.DataFrame(oldAge_details,index=['Details'])","19d662e3":"old_age_details.T","a35cfaa0":"young_people=df[df['Age']<df['Age'].mean()]\nyoung_people.shape[0]","07110072":"young_people_risk=young_people[young_people['HeartDisease']==1]\nyoung_people_risk.shape[0]","d344ff20":"young_people_details={'Total young people':young_people.shape[0],\n                      'Young people who have heart Disease':young_people_risk.shape[0],\n                      '% of young people who have heart Disease':np.round((young_people_risk.shape[0]*100)\/young_people.shape[0])\n                       \n    \n}","51367bb9":"young_people_details=pd.DataFrame(young_people_details,index=['details'])","85c55129":"young_people_details.T","890f704e":"df['ChestPainType'].value_counts()","b293bbe2":"fig=px.pie(df,names='ChestPainType')\nfig.show()","6d79ac59":"asy=df[df['ChestPainType']=='ASY']\nnap=df[df['ChestPainType']=='NAP']\nata=df[df['ChestPainType']=='ATA']\nta=df[df['ChestPainType']=='TA']\n\nasy_heartRisk=asy[asy['HeartDisease']==1]\nnap_heartRisk=nap[nap['HeartDisease']==1]\nata_heartRisk=ata[ata['HeartDisease']==1]\nta_heartRisk=ta[ta['HeartDisease']==1]","45262640":"ChestPainDetails={\n                   '% of heart Disease with ASY Type ChestPain':np.round(asy_heartRisk.shape[0]*100)\/asy.shape[0],\n                   '% of heart Disease with NAP Type ChestPain':np.round(nap_heartRisk.shape[0]*100)\/nap.shape[0],\n                   '% of heart Disease with ATA Type ChestPain':np.round(ata_heartRisk.shape[0]*100)\/ata.shape[0],\n                   '% of heart Disease with TA Type ChestPain':np.round(ta_heartRisk.shape[0]*100)\/ta.shape[0]\n    \n}","24fdd5c3":"chestPain=pd.DataFrame(ChestPainDetails,index=['Details'])","ba183300":"chestPain.T","fe60b58a":"fig=px.histogram(df,x='ChestPainType',color='HeartDisease')\nfig.show()\n","2c120e1d":"angina=df[df['ExerciseAngina']=='N']\nno_angina=angina[angina['HeartDisease']==1]\n","f8c61797":"print('Percentage of people with No Angima who are still having Heart Disease is',np.round(no_angina.shape[0]*100\/angina.shape[0]))","71af0adf":"fig=px.histogram(df,'ExerciseAngina',color='HeartDisease')\nfig.show()","869d9371":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder","74208141":"sc=StandardScaler()\nle=LabelEncoder()","cb6998d4":"df['Sex']=le.fit_transform(df['Sex'])\ndf['ChestPainType']=le.fit_transform(df['ChestPainType'])\ndf['ExerciseAngina']=le.fit_transform(df['ExerciseAngina'])\ndf['ST_Slope']=le.fit_transform(df['ST_Slope'])\ndf['RestingECG']=le.fit_transform(df['RestingECG'])\n\ndf.head(n=10)","7292d807":"data=df.corr()\ndata","d1daf02c":"col_to_drop=['ChestPainType','Cholesterol','MaxHR','ST_Slope']\ndf.drop(col_to_drop,axis=1,inplace=True)","94ed5cda":"df","61800df5":"df=df.values\nx=df[:,:-1]\ny=df[:,-1]","accab2ba":"x=sc.fit_transform(x)","9e22a9df":"split=int(0.8*x.shape[0])\nx_train=x[:split]\n\ny_train=y[:split]\n\nx_test=x[split:]\ny_test=y[split:]\n\nprint(x_train.shape,y_train.shape,x_test.shape,y_test.shape)","86d7b3d1":"from sklearn.svm import LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import StackingClassifier\n\nsvm=LinearSVC(C= 0.4,dual=False)\nrfc=RandomForestClassifier()\ndt=DecisionTreeClassifier()\nlr=LogisticRegression()\n","c927f658":"params=[\n    \n    {\n       \n         'C':[0.1,0.2,0.4,0.5,1.0,2.0,5.0]\n    }\n]","767b66c6":"gs=GridSearchCV(estimator=svm,param_grid=params,scoring='accuracy',cv=5)","623740e5":"gs.fit(x_train,y_train)","95db0582":"gs.best_params_","8322fa53":"gs.score(x_train,y_train)","3b2eba55":"gs.score(x_test,y_test)","74caadcd":"base_models = [\n    ('rf', RandomForestClassifier(n_estimators= 1400,\n min_samples_split= 5,\n max_depth= 80,\n bootstrap= True)),\n    ('SVC', LinearSVC(C = 1))]","78113815":"meta_model = LogisticRegression()","4abf257d":"stacking_model = StackingClassifier(estimators=base_models, final_estimator=meta_model, passthrough=True, cv=3)","8249fcd0":"stacking_model.fit(x_train,y_train)","86446e78":"stacking_model.score(x_test,y_test)","3f810818":"### Coverting DataFrame to numpy array","01b5ffad":"### From above data we can conclude that Males are more prone to heart Disease","0a9938a8":"### Male VS Heart Attack Risk","b9dad065":"### 1.Count of Each Sex","4b629b21":"### 2.Median Age","e6269d1e":"### From above data we can conclude that old age people are more prone to heart Disease than young people ","6409603c":"### Preparation for Machine Learning Model ","984acf3a":"### Young people VS Heart Disease","643d7fca":"### Old Age VS Heart Disease ","8df9763e":"### From above data we can conclude that people with ChestPain Type ASY are more prone to Heart Disease .We cannot take TA type ChestPain into consideration as it only has 46 examples . People with ATA type ChestPain are least Prone to Heart Disease.\n","7ab6f743":"### As we can see ChestPainType , Cholesterole , MaxHr , ST_Slope has negative correlation with HeartDisease,These columns will be dropped ","ae44a683":"### Checking co-relation ","c6d493df":"### Which type of ChestPain can lead to HeartDisease?","48a92935":"### Detailed Exploratory Data Analysis ","5e4acf39":"### Spliting into training and testing DataSet","2008fcda":"### Excercise Induced Angina VS Heart Disease ","d2846d49":"### Female VS Heart Disease Risk"}}