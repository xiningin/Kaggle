{"cell_type":{"ab5e034f":"code","b66078e3":"code","4277d09c":"code","79ba1526":"code","42b57c2d":"code","930260f2":"code","7ada6894":"code","9df4c4d9":"code","6b541107":"code","789815e2":"code","528f26fd":"code","7db4bcbd":"code","ca7ef6d5":"code","452ade2d":"markdown","49ee0cbb":"markdown","e21f4206":"markdown","7bf6aa7a":"markdown","8d48abf6":"markdown","85e6393d":"markdown","8c948eb4":"markdown","0af6ae6b":"markdown"},"source":{"ab5e034f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b66078e3":"train = pd.read_csv('..\/input\/train_final.csv')\n\ntest = pd.read_csv('..\/input\/test_final.csv')","4277d09c":"train.head()","79ba1526":"ids = test.PRT_ID","42b57c2d":"del train['PRT_ID']\ndel test['PRT_ID']","930260f2":"from sklearn.preprocessing import LabelEncoder","7ada6894":"le = LabelEncoder()","9df4c4d9":"from tqdm import  tqdm\nfrom sklearn.preprocessing import LabelEncoder\ncat_cols = [f for f in train.columns if (train[f].dtype == 'object')]\nfor col in tqdm(cat_cols):\n    lbl = LabelEncoder()\n    lbl.fit(list(train[col].values.astype('str')) + list(test[col].values.astype('str')))\n    train[col] = lbl.transform(list(train[col].values.astype('str')))\n    test[col] = lbl.transform(list(test[col].values.astype('str')))","6b541107":"train.head()","789815e2":"x = train.drop('SALES_PRICE',axis=1)\n\ny=train.SALES_PRICE","528f26fd":"from sklearn.linear_model import LinearRegression\n\nreg = LinearRegression()\n\nx.fillna(0,inplace=True)\n\nreg.fit(x,y)\n\n","7db4bcbd":"\nprice = reg.predict(test.fillna(0))\n\nsub = pd.DataFrame(ids)\nsub['SALES_PRICE'] = price\nsub.to_csv('sample1.csv',index=None)","ca7ef6d5":"from IPython.display import HTML\nimport pandas as pd\nimport numpy as np\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n# download it (will only work for files < 2MB or so)\ndef create_download_link(df, title = \"Download CSV file\", filename = \"data.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\n# create a random sample dataframe\ndf = pd.DataFrame(np.random.randn(50, 4), columns=list('ABCD'))\n\n# create a link to download the dataframe\ncreate_download_link(sub)","452ade2d":"#### Read Train andTest Dataset.","49ee0cbb":"### Convert the strings into Label encoded format","e21f4206":"#### Sample kernel:\n1)You can considere it as a starter code.\n","7bf6aa7a":"### Delete columns that are not usefull","8d48abf6":"#### Remove the Date column","85e6393d":"### Fitting a Simple Linear Regression model","8c948eb4":"#### Prep the Dataset","0af6ae6b":"> #### Predicting the price for test cases\n"}}