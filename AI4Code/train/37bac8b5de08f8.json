{"cell_type":{"501fd514":"code","3b7d6397":"code","8a349e1c":"code","74641746":"code","1ac6ba3b":"code","a9301059":"code","a3193153":"code","9f7312bf":"code","6848c33b":"code","62b19f24":"code","0d9a0455":"code","bf8a3e2d":"code","985b63a2":"code","e8cf68e0":"code","f6188b97":"code","9af32a5a":"code","ed183062":"code","21c5b0e4":"code","5f246a0a":"code","7deedcf2":"code","157aee06":"code","a000d0f0":"code","2e219c62":"code","8393c955":"code","a63e881b":"code","23c6a51a":"code","274e0b8c":"code","79711b6e":"code","c39be848":"code","ae8ccfd8":"code","ee57ef98":"code","5aaf1355":"code","5ca4b075":"code","57674bcd":"code","73f83e7e":"code","9d6a62d2":"code","05fd1c6c":"code","7bdae0fd":"code","4963ed2b":"code","de9f29ee":"markdown","19ac8ee6":"markdown","4d8c874a":"markdown","29fb3e11":"markdown","9680aa75":"markdown","43a7ef99":"markdown","4d480800":"markdown","7ab05ad7":"markdown","709702cf":"markdown","0e20f9f0":"markdown","7de11f8f":"markdown","32213761":"markdown","a716fd93":"markdown","8b4a5c48":"markdown","0cd2f281":"markdown","9bff22aa":"markdown","4ff815ce":"markdown","8cc3f737":"markdown","fdfe958f":"markdown","161eef90":"markdown","82bc0013":"markdown","4242f5c9":"markdown","3e19af08":"markdown","8f05693e":"markdown","ffb8bcae":"markdown","eaf3a170":"markdown","f6d6f51c":"markdown","72c3680d":"markdown","d6dc9c11":"markdown","42afbc8e":"markdown","c11035b3":"markdown","54a21812":"markdown","0734835e":"markdown","2409049b":"markdown","7432e1f5":"markdown","d6998335":"markdown","af0d2633":"markdown","4e199d8c":"markdown"},"source":{"501fd514":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3b7d6397":"import matplotlib.pyplot as plt\nimport warnings\nimport seaborn as sns\nfrom colorama import Fore, Back, Style \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score,mean_squared_error\n\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nfrom statsmodels.formula.api import ols\nimport plotly.graph_objs as gobj\n\ninit_notebook_mode(connected=True)\nwarnings.filterwarnings(\"ignore\")\nimport plotly.figure_factory as ff\n\nimport xgboost\nimport lightgbm","8a349e1c":"insurance_data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ninsurance_data.head()","74641746":"insurance_data.isnull().sum()","1ac6ba3b":"# description of the data\n\ninsurance_data.describe()","a9301059":"charge_dist =[insurance_data['charges'].values]\ngroup_labels = ['charges'] \n\nfig = ff.create_distplot(charge_dist, group_labels)\nfig.update_layout(title_text='Charge Distribution plot')\nfig.show()","a3193153":"fig = px.box(insurance_data, x='smoker', y='charges', points=\"all\")\nfig.update_layout(title_text=\"Charge Spread - Smoker and Non Smoker\")\nfig.show()","9f7312bf":"fig = px.box(insurance_data, x='region', y='charges', points=\"all\")\nfig.update_layout(title_text=\"Region wise Charge Spread\")\nfig.show()","6848c33b":"fig = px.violin(insurance_data, y=\"charges\", x=\"region\", color='sex', box=True, points=\"all\", hover_data=insurance_data.columns)\nfig.update_layout(title_text=\"Analysis in Charges and Region on Sex Status\")\nfig.show()","62b19f24":"fig = px.violin(insurance_data, y=\"charges\", x=\"region\", color='smoker', box=True, points=\"all\", hover_data=insurance_data.columns)\nfig.update_layout(title_text=\"Analysis in Charges and Region on Smoker Status\")\nfig.show()","0d9a0455":"fig = px.violin(insurance_data, y=\"charges\", x=\"region\", color='children', box=True, points=\"all\", hover_data=insurance_data.columns)\nfig.update_layout(title_text=\"Analysis in Charges and Region on Children Status\")\nfig.show()","bf8a3e2d":"# age distribution\n\nage_dist =[insurance_data[\"age\"].values]\ngroup_labels = ['age'] \n\nfig = ff.create_distplot(age_dist, group_labels)\nfig.update_layout(title_text='Age Distribution plot')\nfig.show()","985b63a2":"fig = px.box(insurance_data, y='age', points=\"all\")\nfig.update_layout(title_text=\"Age Spread\")\nfig.show()","e8cf68e0":"fig = px.box(insurance_data, x='sex', y='age', points=\"all\")\nfig.update_layout(title_text=\"Gender wise Age Spread - Male and Female\")\nfig.show()","f6188b97":"fig = px.violin(insurance_data, y=\"age\", x=\"sex\", color='smoker', box=True, points=\"all\", hover_data=insurance_data.columns)\nfig.update_layout(title_text=\"Analysis in Age and sex on Smoker Status\")\nfig.show()","9af32a5a":"x1 = insurance_data[(insurance_data.sex == 'male')][\"age\"]\nx2 = insurance_data[(insurance_data.sex == 'female')][\"age\"]\n\ngroup_labels = ['male', 'female']\ncolors = ['#F66095', '#A6ACEC']\nfig = ff.create_distplot([x1, x2], group_labels, bin_size=.5,\n                         curve_type='normal',colors=colors)\n\nfig.update_layout(title_text='Age Distribution with Gender')\nfig.show()","ed183062":"fig = px.box(insurance_data, x='smoker', y='age', points='all')\nfig.update_layout(title_text='Age Spread - Smoker and Non smoker')\nfig.show()","21c5b0e4":"x1 = insurance_data[(insurance_data.smoker == 'yes')][\"age\"]\nx2 = insurance_data[(insurance_data.smoker == 'no')][\"age\"]\n\ngroup_labels = ['yes', 'no']\ncolors = ['#835AF1', '#7FA6EE']\nfig = ff.create_distplot([x1, x2], group_labels, bin_size=.5, curve_type='normal',colors=colors)\n\nfig.update_layout(title_text='Age Distribution with Smoker and Non Smoker')\nfig.show()","5f246a0a":"fig = px.scatter(insurance_data[insurance_data.smoker=='yes'], x='age', y='charges')\nfig.update_layout(title_text='Analysis in Age and Charges')\nfig.show()","7deedcf2":"fig = px.density_contour(insurance_data[insurance_data.smoker=='yes'], x='age', y='charges', marginal_x='box', marginal_y='box')\nfig.show()","157aee06":"fig = px.scatter(insurance_data[insurance_data.smoker=='no'], x='age', y='charges')\nfig.update_layout(title_text='Analysis in Age and Charges')\nfig.show()","a000d0f0":"fig = px.density_contour(insurance_data[insurance_data.smoker=='no'], x='age', y='charges', marginal_x='box', marginal_y='box')\nfig.show()","2e219c62":"fig = px.scatter(insurance_data, x='age', y='bmi', color='sex')\nfig.update_layout(title_text='Analysis in Age and BMI on Sex Status')\nfig.show()","8393c955":"fig = px.scatter(insurance_data, x='bmi', y='charges', color='sex')\nfig.update_layout(title_text='Analysis in Charges and BMI on Sex Status')\nfig.show()","a63e881b":"fig = px.density_contour(insurance_data, x='bmi', y='charges', marginal_x='box', marginal_y='box', color='sex')\nfig.show()","23c6a51a":"plt.figure(figsize=(10,10))\nsns.heatmap(insurance_data.corr(), vmin=-1, cmap='coolwarm', annot=True);","274e0b8c":"# Converting category labels into numerical using LabelEncoder\n\n#sex\nle = LabelEncoder()\nle.fit(insurance_data.sex.drop_duplicates()) \ninsurance_data.sex = le.transform(insurance_data.sex)\n# smoker or not\nle.fit(insurance_data.smoker.drop_duplicates()) \ninsurance_data.smoker = le.transform(insurance_data.smoker)\n#region\nle.fit(insurance_data.region.drop_duplicates()) \ninsurance_data.region = le.transform(insurance_data.region)","79711b6e":"insurance_data.head()","c39be848":"X = insurance_data.drop(['charges','region', 'sex', 'children'], axis = 1)\ny = insurance_data.charges\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 0)","ae8ccfd8":"linear_reg = LinearRegression()\nlinear_reg.fit(X_train,y_train)\ny_test_pred = linear_reg.predict(X_test)","ee57ef98":"print(Fore.GREEN + \"Accuracy of Linear Regression is : \",linear_reg.score(X_test,y_test))","5aaf1355":"random_reg = RandomForestRegressor(random_state = 2)\nrandom_reg.fit(X_train,y_train)\nrandom_test_pred = random_reg.predict(X_test)","5ca4b075":"print(Fore.GREEN + \"Accuracy of Random Forest Regression is : \",random_reg.score(X_test,y_test))","57674bcd":"xgb_reg = xgboost.XGBRegressor(max_depth=2, random_state=1)\nxgb_reg.fit(X_train,y_train)\nxgb_test = xgb_reg.predict(X_test)","73f83e7e":"print(Fore.GREEN + \"Accuracy of XGB Regression is : \",xgb_reg.score(X_test,y_test))","9d6a62d2":"lgb_reg = lightgbm.LGBMRegressor(max_depth=2, random_state=1)\nlgb_reg.fit(X_train,y_train)\nlgb_test = lgb_reg.predict(X_test)","05fd1c6c":"print(Fore.GREEN + \"Accuracy of LGB Regression is : \",lgb_reg.score(X_test,y_test))","7bdae0fd":"from catboost import CatBoostRegressor\ncatb_reg = CatBoostRegressor()\ncatb_reg.fit(X_train,y_train)\ncatb_test = catb_reg.predict(X_test)","4963ed2b":"print(Fore.GREEN + \"Accuracy of CatBoost Regression is : \",catb_reg.score(X_test,y_test))","de9f29ee":"# **Correlation matrix**","19ac8ee6":"**Gender wise age distribution**","4d8c874a":"Age is ranging from 18 to 64 ,with mean of 39","29fb3e11":"**Lightgbm**","9680aa75":"# **Age vs charges**","43a7ef99":"# **Data Modelling**","4d480800":"# **About Dataset**","7ab05ad7":"# Age Distribution","709702cf":"* Charges for smoker ranges between 12.82k to 63.77k\n* Charges for non smoker ranges between 1.1k to 36k","0e20f9f0":"Age is ranging from 18 to 64 ,with mean of 38 for smoker and 40 for non-smoker.","7de11f8f":"# **Import Libraries**","32213761":"**Charges Region wise**","a716fd93":"# **Exploratory Data Analysis**","8b4a5c48":"* Charges for Southwest Region ranges between 1.2k to 52.59k\n* Charges for Southeast Region ranges between 1.1k to 63.77k\n* Charges for Northwest Region ranges between 1.6k to 60.02k\n* Charges for Northeast Region ranges between 1.6k to 58.57k","0cd2f281":"# Charge distribution","9bff22aa":"# **BMI Analysis**","4ff815ce":"* As you can see age is normally distrtibuted\n* Maximum number of patients are of 18-20 age","8cc3f737":"**Data summary**","fdfe958f":"**Age vs charges for smokers**","161eef90":"# **Import Dataset**","82bc0013":"**Linear Regression**","4242f5c9":"Maximum number of Costs\/Charges are of 3000-8000","3e19af08":"**Random Forest Regressor**","8f05693e":"**Age vs charges for smokers**","ffb8bcae":"**Train Test split**","eaf3a170":"**Age and BMI on sex status**","f6d6f51c":"* Charges of Southwest Region for smoker 14k to 53k and for non-smoker is 1.2 to 36k\n* Charges of Southeast Region for smoker 16k to 63k and for non-smoker is 1.1 to 36k\n* Charges of Northwest Region for smoker 12k to 53k and for non-smoker is 1.6 to 32k\n* Charges of Northeast Region for smoker 14k to 60k and for non-smoker is 1.6 to 33k","72c3680d":"**charges for childrens region wise**","d6dc9c11":"**Let's check for missing values**","42afbc8e":"how much you pay for health insurance are not within your control.There are some factors that affect how much health insurance cost.\nThis dataset contains person's information like age,sex,gender,bmi,region,smoke or not and we have to predict their medical insurance cost.In this notebook I will apply regression techniques of supervised learning to predict the medical insurance costs.","c11035b3":"* Charges of Southwest Region for female 1.7k to 46k and for male is 1.2 to 52k\n* Charges of Southeast Region for female 1.6k to 63k and for male is 1.1 to 62k\n* Charges of Northwest Region for female 2.1k to 55k and for male is 1.6 to 60k\n* Charges of Northeast Region for female 2.1k to 58k and for male is 1.7 to 48k","54a21812":"**Age distribution of Smoker vs Non-Smoker**","0734835e":"Age is ranging from 18 to 64 ,with mean of 40 for female and 39 for male.","2409049b":"**Charges and BMI on sex status**","7432e1f5":"# If you found this kernel helpful, please upvote it","d6998335":"* Age is ranging from 18 to 64 ,with mean of 38.2 and standard deviation of 14.04\n* bmi is ranging from 15.96 to 53.13 , with mean of 30.6 and standard deviation of 6.09\n* charges is ranging from 1121 to 63770 , with mean of 13270 and standard deviation of 12110","af0d2633":"**Xboost Regressor**","4e199d8c":"* LGBM Regressor : 89.79%\n* CatBoost Regressor : 88.76%\n* XGB Regressor: 88.65%\n* Random Forest Regressor: 86.06%\n* Linear Regressor: 79.45%"}}