{"cell_type":{"004bd584":"code","89ca135e":"code","40c5c347":"code","5ca782b6":"code","f9b7ad72":"code","81d97ea9":"code","12420b01":"code","b556b365":"code","d092880d":"code","ded6301d":"code","383837f6":"code","ab400302":"markdown","ddd2a14f":"markdown","d851ab46":"markdown","70157e6d":"markdown","dd1a9849":"markdown","06672be6":"markdown","c7e9ac69":"markdown","be89a22b":"markdown","67530d4b":"markdown","14690dd7":"markdown"},"source":{"004bd584":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom sklearn import datasets,linear_model\n\n# \u533a\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\nfrom sklearn.model_selection import train_test_split\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","89ca135e":"\nengagement_data = []\nbase_path = \"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\"\nengagement_path = os.path.join(base_path, 'engagement_data')\n\n\nfor root,dirs,files in os.walk(engagement_path):\n    for file in files:\n        path = os.path.join(engagement_path, file)\n        district_id, ext = os.path.splitext(file)\n        df = pd.read_csv(path)\n        df[\"district_id\"] = district_id\n#         print(os.path.join(base_path, file))\n        engagement_data.append(df)\n        \n        \nengagement_data = pd.concat(engagement_data)\nengagement_data.head()","40c5c347":"dis_path = os.path.join(base_path, 'districts_info.csv')\n\n\ndistricts_info = pd.read_csv(dis_path)\ndistricts_info.head()","5ca782b6":"pro_path = os.path.join(base_path, 'products_info.csv')\n\n\nproducts_info = pd.read_csv(pro_path)\nproducts_info.head()","f9b7ad72":"districts_info = districts_info.dropna()\n\ndistricts_info_state = districts_info.groupby('state')[\"district_id\"].count()\n\n# districts_info_state\n\nplt.style.use('ggplot')\ndistricts_info_state.plot.pie(autopct='%.2f%%',figsize=(10,10))\n\n# state_fig = px.pie(districts_info, names='state')\n# state_fig.show()\n\n","81d97ea9":"products_info_sector = products_info.groupby(\"Sector(s)\")[\"Sector(s)\"].count()\nproducts_info_sector.plot.pie(figsize=(8,8),autopct='%.2f%%')\n\n# state_fig = px.pie(districts_info, names='locale')\n# state_fig.show()","12420b01":"lp_id_pct_access = engagement_data.groupby('lp_id')['pct_access'].mean().sort_values(ascending=False).head(20)\n\n# series\u8f6cdf\nlp_id_pct_access_df = lp_id_pct_access.reset_index(level=None, drop=False, name=None, inplace=False)\n\n# \u53c2\u4e0e\u5ea6\u6570\u636e\u4e0e\u4ea7\u54c1\u8868\u5173\u8054\nlp_id_pct_access_product = pd.merge(lp_id_pct_access_df, products_info, how='inner',left_on='lp_id',right_on='LP ID')\n\nlp_id_pct_access_product[['Product Name','pct_access']].set_index('Product Name').plot(kind='bar',figsize=(10,10))\nplt.xticks(rotation=60)","b556b365":"engagement_index_mean = engagement_data.groupby('lp_id')['engagement_index'].mean().sort_values(ascending=False).head(20)\n\nengagement_index_mean_df = engagement_index_mean.reset_index()\n\nengagement_index_mean_product_df = pd.merge(engagement_index_mean_df, products_info, how='inner', left_on='lp_id', right_on='LP ID')\n\n# engagement_index_mean_product_df\nengagement_index_mean_product_df[['Product Name','engagement_index']].set_index('Product Name').plot(kind='bar',figsize=(10,10))\n\n# \u53ef\u4ee5\u7b97\u4e00\u4e2a\u957f\u5c3e\u5206\u5e03\nplt.xticks(rotation=45)","d092880d":"# get month\ndef get_month(time):\n    return time.split('-')[1]\n\n\nengagement_data['month'] = engagement_data.loc[:,'time'].apply(get_month)\n\nengagement_data_month = engagement_data.groupby('month',as_index=False).mean()\n\nsns.set(style=\"darkgrid\")\n\nsns.relplot(data=engagement_data_month,x='month',y='engagement_index', kind=\"line\",markers=True)\n","ded6301d":"sns.relplot(data=engagement_data_month,x='month',y='pct_access', kind=\"line\",markers=True)","383837f6":"data = engagement_data.dropna()\nX,y = data[['pct_access']].values,data[['engagement_index']]\n\n# \u533a\u5206\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.8)\nregr = linear_model.LinearRegression()\n# \u8bad\u7ec3\u6a21\u578b\nregr.fit(X_train, y_train)\n# \u83b7\u53d6\u8bc4\u5206\uff0c\u7ed3\u679c\u662f\u51b3\u5b9a\u7cfb\u6570R\u5e73\u65b9\nregr.score(X_train, y_train)\n\nfont = {'family':'FangSong', 'size':20}\nplt.figure(figsize=(20,5))\nplt.rc('font',**font)\n\n# \u8bad\u7ec3\u6570\u636e\nplt.scatter(X_train, y_train, color='r')\n\n# \u62df\u5408\u7ebf\nplt.plot(X_train, regr.predict(X_train), color='b')\n\n# \u6d4b\u8bd5\u6570\u636e\n# plt.scatter(X_test, y_test, color='black')\n\n# \u6d4b\u8bd5\u96c6\u9884\u6d4b\n# plt.plot(X_test, regr.predict(X_test), 'y')\n\nplt.xlabel('pct_access')\nplt.ylabel('engagement_index')\nplt.show()","ab400302":"## explore relationship between pct_access and engagement_index","ddd2a14f":"## Distribution of districts","d851ab46":"#### Percentage access is constantly descending since January\n\n#### It reached the lowest point in July and reached the highest point in September\n\n#### Epidemic outbreak impact Percentage access descending","70157e6d":"## import engagement data, district data,production data","dd1a9849":"## mean of percentage access per month","06672be6":"## Top 20 product by engagement_index mean","c7e9ac69":"#### Engagement_index is constantly rising since January\n\n#### It reached the highest point in April and September and reached the lowest point in July","be89a22b":"## Distribution of sector","67530d4b":"## mean of engagement data per month","14690dd7":"## Top 20 product by pct_access mean"}}