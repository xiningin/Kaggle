{"cell_type":{"1fd179c3":"code","7e869a74":"code","75b0bee7":"code","4c63e651":"code","3aa52378":"code","49be08b3":"code","c1af8ee6":"code","a572cd96":"code","2a236a86":"code","e883a1c9":"code","91348b99":"code","bcff6949":"code","5ff7113b":"code","16adffef":"code","c3745bad":"code","1ff314d0":"code","46cfc952":"code","42a190d6":"code","92e068b0":"code","b26c8c7e":"markdown","a03ffd79":"markdown","e5f60666":"markdown","f3bad63c":"markdown","1ea32735":"markdown","d6d63099":"markdown","db5c7608":"markdown","21395d27":"markdown","7d0210c0":"markdown","3244c87a":"markdown","1a53f8f4":"markdown"},"source":{"1fd179c3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7e869a74":"wine = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","75b0bee7":"wine.info()","4c63e651":"wine.describe()","3aa52378":"wine.head()","49be08b3":"sb.countplot(x=\"quality\", data=wine)","c1af8ee6":"def correlation_heatmap(train):\n    correlations = train.corr()\n    \n    fig, ax = plt.subplots(figsize=(14,14))\n    sb.heatmap(correlations, vmax=1.0, center=0, fmt='.2f', square=True, linewidths=.5, annot=True, cbar_kws={\"shrink\":.70})\n    plt.show()\ncorrelation_heatmap(wine)","a572cd96":"grid = sb.PairGrid(wine)\ngrid.map(sb.scatterplot)","2a236a86":"f, ax = plt.subplots(figsize=(15, 6.5))\nsb.scatterplot(x=\"volatile acidity\", y=\"quality\",\n              data=wine)","e883a1c9":"sb.boxplot(x=\"volatile acidity\", y=\"quality\", data=wine, whis=[0,100], width=.6, orient=\"h\")","91348b99":"wine['quality'] = [1 if x>=7 else 0 for x in wine['quality']]\nwine.head()","bcff6949":"X = wine.drop('quality', axis=1)\ny = wine['quality']","5ff7113b":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.compose import ColumnTransformer\n\nnum_attribs = list(X)\n\npipeline = ColumnTransformer([\n    (\"num\", StandardScaler(), num_attribs)\n])\n\nprepared = pipeline.fit_transform(X)","16adffef":"X_df = pd.DataFrame(data=prepared)","c3745bad":"from sklearn.model_selection import StratifiedShuffleSplit\nStratSplit = StratifiedShuffleSplit(test_size=0.1, random_state=42)\nfor train_index, test_index in StratSplit.split(X_df, y):\n    X_train, X_test = X_df.iloc[train_index], X_df.iloc[test_index]\n    y_train, y_test = y.iloc[train_index], y.iloc[test_index]","1ff314d0":"from sklearn.neighbors import KNeighborsClassifier\nneigh = KNeighborsClassifier(n_neighbors=3)\nneigh.fit(X_train, y_train)","46cfc952":"from sklearn.metrics import roc_curve, auc\nneighbors = list(range(1,30))\ntrain_results = []\ntest_results = []\nfor n in neighbors:\n   model = KNeighborsClassifier(n_neighbors=n)\n   model.fit(X_train, y_train)\n   train_pred = model.predict(X_train)\n   false_positive_rate, true_positive_rate, thresholds = roc_curve(y_train, train_pred)\n   roc_auc = auc(false_positive_rate, true_positive_rate)\n   train_results.append(roc_auc)\n   y_pred = model.predict(X_test)\n   false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test, y_pred)\n   roc_auc = auc(false_positive_rate, true_positive_rate)\n   test_results.append(roc_auc)\nfrom matplotlib.legend_handler import HandlerLine2D\nline1, = plt.plot(neighbors, train_results, color=\"b\", label=\"Train AUC\")\nline2, = plt.plot(neighbors, test_results, color=\"r\", label=\"Test AUC\")\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('n_neighbors')\nplt.show()","42a190d6":"from sklearn.metrics import classification_report\ny_pred = neigh.predict(X_train)\nprint(classification_report(y_train, y_pred))","92e068b0":"y_pred = neigh.predict(X_test)\nprint(classification_report(y_test, y_pred))","b26c8c7e":"We have alot of examples of wines with a quality of 5 and 6 but the rest are either little amount of entries or non existant. This needs to be sorted out.","a03ffd79":"We see a spike at 3 neighbors for both the training and test set, so I will change my model to this above!","e5f60666":"## Preproccessing data\nHere I will transform data to perform better for our model","f3bad63c":"What we can determine from this is that wines with a lower volatile acidity which leads to an acidic taste more frequently correlate with a higher quality of wine and vice versa.","1ea32735":"Looks like we have no examples of wines that are below 3 quality and higher than 8 quality as these are our min and max's for the quality target column.","d6d63099":"# Red Wine Quality Prediction\nThe reason for this analysis and model is to predict the quality of red wine based of it's unique features. This will score it into a quality range of 0 to 10.","db5c7608":"## Variable Identification\nFirst I will explore each variable first, I want to find out the data type of each and how many null entries I have in the dataset.","21395d27":"Wow! No missing entries!","7d0210c0":"## Univariate Analysis\nNow I will visualize some features to try and find some outliers and see if we can find some interesting stats.","3244c87a":"## Train Model\nNow I will train KNN on our data and finetune the model","1a53f8f4":"## Bi-variate Analysis\nNow I will compare features against each other to try and find some correlation between them."}}