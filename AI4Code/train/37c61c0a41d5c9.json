{"cell_type":{"6716fe5f":"code","56685f8a":"code","1566b4b5":"code","a193b227":"code","f4060f91":"code","0d647980":"code","7030d073":"code","1ce780c1":"code","1f06f2c8":"code","fc14f04b":"code","e7ee4a78":"code","3ed49ba2":"code","75417c92":"code","087b794b":"code","448ff05d":"code","7f0a6f8a":"code","eeefcac4":"code","b6baad49":"code","d214d18c":"code","a5d3768b":"code","b7cb949a":"code","20fb7bff":"code","71a90b31":"code","33d15b0b":"code","d72b6564":"code","434c0228":"code","2c70ea82":"code","b33a9cd1":"code","4ef1e175":"code","83782fd3":"code","969119e2":"code","dd18d2b7":"code","591bab9c":"code","e9516a77":"code","e88ff852":"code","431e5437":"markdown","6bfe4dc1":"markdown","9e051a07":"markdown","33f8a352":"markdown","940cd6cc":"markdown","450d69c0":"markdown","1d2586e4":"markdown","526206a6":"markdown","fa8eb4c3":"markdown","2c5a6f27":"markdown","940a03f9":"markdown","993eeb38":"markdown","fa336598":"markdown","07b836ca":"markdown","bf3701d1":"markdown","1ece20a9":"markdown","ea323629":"markdown","4988f4b8":"markdown","495a4eb4":"markdown","ccddf60e":"markdown"},"source":{"6716fe5f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n    \n('\/kaggle\/input\/boston-houseprice-data.csv')","56685f8a":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\n%matplotlib inline\nimport matplotlib.pyplot as plt","1566b4b5":"df = pd.read_csv('\/kaggle\/input\/the-boston-houseprice-data\/boston.csv') #\u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 Housing, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u043e\u043c\u0430\u0445 \u0432 \u043e\u043a\u0440\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u044f\u0445 \u0411\u043e\u0441\u0442\u043e\u043d\u0430","a193b227":"df.head()","f4060f91":"df.info()","0d647980":"# \u0418\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e\nplt.hist(df['MEDV'], bins = 50, edgecolor = 'k');\nplt.xlabel('Median value')\nplt.ylabel('Number of Houses')\nplt.title('Median value of owner-occupied homes Distribution')","7030d073":"cols = ['LSTAT' , 'INDUS', 'NOX' , 'RM', 'MEDV']","1ce780c1":"# \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u043c \u0432\u044b\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0447\u0438\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438\nsns.pairplot(df[cols])","1f06f2c8":"fig, ax = plt.subplots()\nsns.heatmap(np.corrcoef(df[cols].values.T), annot=True)\n\nax.set_xticklabels(cols)\nax.set_yticklabels(cols)\n# Rotate the tick labels and set their alignment.\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n         rotation_mode=\"anchor\")\n\nplt.setp(ax.get_yticklabels(), rotation=0);\n","fc14f04b":"from sklearn.model_selection import train_test_split\nX = df[['RM']].values\ny = df['MEDV']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","e7ee4a78":"# \u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c\nmodel = LinearRegression().fit(np.array(X_train).reshape((-1, 1)), y_train)","3ed49ba2":"# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n\nmodel.score(np.array(X_test).reshape((-1, 1)), y_test)\n\n# \u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c","75417c92":"y_pred = model.predict(X)\nprint('Slope: %.3f' % model.coef_[0])\nprint('Intercept: %.3f' % model.intercept_)","087b794b":"# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","448ff05d":"X2 = df.iloc[:,:13]\ny2 = df['MEDV']\nX_train2, X_test2, y_train2, y_test2 = train_test_split(X2, y2, test_size=0.33, random_state=42)","7f0a6f8a":"model2 = LinearRegression().fit(X_train2, y_train2)","eeefcac4":"model2.score(X_test2, y_test2)\n# \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0441\u0442\u0430\u043b\u0430 \u0432\u044b\u0448\u0435","b6baad49":"print('intercept: %.3f' % model2.intercept_)\nprint('slope:', model2.coef_)","d214d18c":"y_train_pred = model2.predict(X_train2)\ny_test_pred = model2.predict(X_test2)","a5d3768b":"# \u0421\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u0432\nplt.scatter(y_train_pred,  y_train_pred - y_train2,\n            c='steelblue', marker='o', edgecolor='white',\n            label='Training data')\nplt.scatter(y_test_pred,  y_test_pred - y_test2,\n            c='limegreen', marker='s', edgecolor='white',\n            label='Test data')\nplt.xlabel('Predicted values')\nplt.ylabel('Residuals')\nplt.legend(loc='upper left')\nplt.hlines(y=0, xmin=-10, xmax=50, color='black', lw=2)\nplt.xlim([-10, 50])\nplt.tight_layout()","b7cb949a":"# \u0412\u044b\u0447\u0438\u0441\u043b\u0438\u043c MSE\n\nfrom sklearn.metrics import mean_squared_error\n\nprint('MSE train: %.3f, test: %.3f' % (\n        mean_squared_error(y_train2, y_train_pred),\n        mean_squared_error(y_test2, y_test_pred)))","20fb7bff":"# Ridge regression:\n\nfrom sklearn.linear_model import Ridge\nridge = Ridge(alpha=1.0).fit(X_train2, y_train2)\nridge.score(X_test2, y_test2)","71a90b31":"# LASSO regression:\n\nfrom sklearn.linear_model import Lasso\nlasso = Lasso(alpha=1.0).fit(X_train2, y_train2)\nlasso.score(X_test2, y_test2)","33d15b0b":"# Elastic Net regression:\n\nfrom sklearn.linear_model import ElasticNet\nelanet = ElasticNet(alpha=1.0, l1_ratio=0.5).fit(X_train2, y_train2)\nelanet.score(X_test2, y_test2)","d72b6564":"X = np.array([258.0, 270.0, 294.0, \n              320.0, 342.0, 368.0, \n              396.0, 446.0, 480.0, 586.0])\\\n             [:, np.newaxis]\n\ny = np.array([236.4, 234.4, 252.8, \n              298.6, 314.2, 342.2, \n              360.8, 368.0, 391.2,\n              390.8])","434c0228":"from sklearn.preprocessing import PolynomialFeatures\n# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u043b\u0435\u043d \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438:\nlr = LinearRegression()\npr = LinearRegression()\nquadratic = PolynomialFeatures(degree=2)\nX_quad = quadratic.fit_transform(X)","2c70ea82":"# \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0443 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f:\nlr.fit(X, y)\nX_fit = np.arange(250, 600, 10)[:, np.newaxis]\ny_lin_fit = lr.predict(X_fit)\n\n# \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0443 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445 \u0434\u043b\u044f \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438:\npr.fit(X_quad, y)\ny_quad_fit = pr.predict(quadratic.fit_transform(X_fit))\n\n# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438\nplt.scatter(X, y, label='Training points')\nplt.plot(X_fit, y_lin_fit, label='Linear fit', linestyle='--')\nplt.plot(X_fit, y_quad_fit, label='Quadratic fit')\nplt.xlabel('Explanatory variable')\nplt.ylabel('Predicted or known target values')\nplt.legend(loc='upper left')\n\nplt.tight_layout()\n#plt.savefig('images\/10_11.png', dpi=300)\nplt.show()","b33a9cd1":"y_lin_pred = lr.predict(X)\ny_quad_pred = pr.predict(X_quad)","4ef1e175":"from sklearn.metrics import r2_score\nprint('Training MSE linear: %.3f, quadratic: %.3f' % (\n        mean_squared_error(y, y_lin_pred),\n        mean_squared_error(y, y_quad_pred)))\nprint('Training R^2 linear: %.3f, quadratic: %.3f' % (\n        r2_score(y, y_lin_pred),\n        r2_score(y, y_quad_pred)))","83782fd3":"X = df[['LSTAT']].values\ny = df['MEDV'].values\n\nregr = LinearRegression()\n\n# create quadratic features\nquadratic = PolynomialFeatures(degree=2)\ncubic = PolynomialFeatures(degree=3)\nX_quad = quadratic.fit_transform(X)\nX_cubic = cubic.fit_transform(X)\n\n# fit features\nX_fit = np.arange(X.min(), X.max(), 1)[:, np.newaxis]\n\nregr = regr.fit(X, y)\ny_lin_fit = regr.predict(X_fit)\nlinear_r2 = r2_score(y, regr.predict(X))\n\nregr = regr.fit(X_quad, y)\ny_quad_fit = regr.predict(quadratic.fit_transform(X_fit))\nquadratic_r2 = r2_score(y, regr.predict(X_quad))\n\nregr = regr.fit(X_cubic, y)\ny_cubic_fit = regr.predict(cubic.fit_transform(X_fit))\ncubic_r2 = r2_score(y, regr.predict(X_cubic))\n\n\n# plot results\nplt.scatter(X, y, label='Training points', color='lightgray')\n\nplt.plot(X_fit, y_lin_fit, \n         label='Linear (d=1), $R^2=%.2f$' % linear_r2, \n         color='blue', \n         lw=2, \n         linestyle=':')\n\nplt.plot(X_fit, y_quad_fit, \n         label='Quadratic (d=2), $R^2=%.2f$' % quadratic_r2,\n         color='red', \n         lw=2,\n         linestyle='-')\n\nplt.plot(X_fit, y_cubic_fit, \n         label='Cubic (d=3), $R^2=%.2f$' % cubic_r2,\n         color='green', \n         lw=2, \n         linestyle='--')\n\nplt.xlabel('% lower status of the population [LSTAT]')\nplt.ylabel('Price in $1000s [MEDV]')\nplt.legend(loc='upper right')\n\n#plt.savefig('images\/10_12.png', dpi=300)\nplt.show()","969119e2":"X = df[['LSTAT']].values\ny = df['MEDV'].values\n\n# transform features\nX_log = np.log(X)\ny_sqrt = np.sqrt(y)\n\n# fit features\nX_fit = np.arange(X_log.min()-1, X_log.max()+1, 1)[:, np.newaxis]\n\nregr = regr.fit(X_log, y_sqrt)\ny_lin_fit = regr.predict(X_fit)\nlinear_r2 = r2_score(y_sqrt, regr.predict(X_log))\n\n# plot results\nplt.scatter(X_log, y_sqrt, label='Training points', color='lightgray')\n\nplt.plot(X_fit, y_lin_fit, \n         label='Linear (d=1), $R^2=%.2f$' % linear_r2, \n         color='blue', \n         lw=2)\n\nplt.xlabel('log(% lower status of the population [LSTAT])')\nplt.ylabel('$\\sqrt{Price \\; in \\; \\$1000s \\; [MEDV]}$')\nplt.legend(loc='lower left')\n\nplt.tight_layout()\n#plt.savefig('images\/10_13.png', dpi=300)\nplt.show()","dd18d2b7":"from sklearn.tree import DecisionTreeRegressor\ndef lin_regplot(X, y, model):\n    plt.scatter(X, y, c='steelblue', edgecolor='white', s=70)\n    plt.plot(X, model.predict(X), color='black', lw=2)    \n    return\n\nX = df[['LSTAT']].values\ny = df['MEDV'].values\n\ntree = DecisionTreeRegressor(max_depth=3)\ntree.fit(X, y)\n\nsort_idx = X.flatten().argsort()\n\nlin_regplot(X[sort_idx], y[sort_idx], tree)\nplt.xlabel('% lower status of the population [LSTAT]')\nplt.ylabel('Price in $1000s [MEDV]')\n#plt.savefig('images\/10_14.png', dpi=300)\nplt.show()","591bab9c":"X = df.iloc[:, :-1].values\ny = df['MEDV'].values\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.4, random_state=1)","e9516a77":"from sklearn.ensemble import RandomForestRegressor\n\nforest = RandomForestRegressor(n_estimators=1000, \n                               criterion='mse', \n                               random_state=1, \n                               n_jobs=-1)\nforest.fit(X_train, y_train)\ny_train_pred = forest.predict(X_train)\ny_test_pred = forest.predict(X_test)\n\nprint('MSE train: %.3f, test: %.3f' % (\n        mean_squared_error(y_train, y_train_pred),\n        mean_squared_error(y_test, y_test_pred)))\nprint('R^2 train: %.3f, test: %.3f' % (\n        r2_score(y_train, y_train_pred),\n        r2_score(y_test, y_test_pred)))","e88ff852":"plt.scatter(y_train_pred,  \n            y_train_pred - y_train, \n            c='steelblue',\n            edgecolor='white',\n            marker='o', \n            s=35,\n            alpha=0.9,\n            label='Training data')\nplt.scatter(y_test_pred,  \n            y_test_pred - y_test, \n            c='limegreen',\n            edgecolor='white',\n            marker='s', \n            s=35,\n            alpha=0.9,\n            label='Test data')\n\nplt.xlabel('Predicted values')\nplt.ylabel('Residuals')\nplt.legend(loc='upper left')\nplt.hlines(y=0, xmin=-10, xmax=50, lw=2, color='black')\nplt.xlim([-10, 50])\nplt.tight_layout()\n\n#plt.savefig('images\/10_15.png', dpi=300)\nplt.show()","431e5437":"MSE \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442\u0441\u044f \u043e\u0442 570 (\u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0430) \u0434\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 61 (\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u0430\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0430).\n\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432\u044b\u0448\u0435 (0.982) \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e (0.832).","6bfe4dc1":"#### \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u0441\u0432\u044f\u0437\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u043b\u0435\u0441\u043e\u0432","9e051a07":"\u041f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u043c \u0432\u044b\u0431\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u0441\u0432\u044f\u0437\u0435\u0439. \u0412\u0437\u0433\u043b\u044f\u043d\u0443\u0432 \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a \u0440\u0430\u0441\u0441\u0435\u044f\u043d\u0438\u044f\nMEDV-LSTAT, \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0434\u0432\u0438\u043d\u0443\u0442\u044c \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 LSTAT \u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c MEDV \u043c\u043e\u0433\u0443\u0442 \u0441\u043f\u0440\u043e\u0435\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.  \n\u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u0445\u043e\u0436\u0435\u0439 \u043d\u0430 \u044d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e. \u041d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u044d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u044f\u043c\u0443\u044e \u043b\u0438\u043d\u0438\u044e.","33f8a352":"\u041a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0430 \u0443\u043b\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043d\u0430\u043c\u0438 \u043d\u0430 \u0434\u043e\u043c\u0430 \u0438 LSTAT \u043b\u0443\u0447\u0448\u0435, \u0447\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u0430\u044f. \u041e\u0434\u043d\u0430\u043a\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0441\u0435 \u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438.","940cd6cc":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u0432 \u0432\u043e\u043a\u0440\u0443\u0433 \u043d\u0443\u043b\u0435\u0432\u043e\u0439 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043d\u0435 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u0430 \n\u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0441\u044e \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.\n\u041e\u0434\u043d\u0430\u043a\u043e \u0433\u0440\u0430\u0444\u0438\u043a \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u0432 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043a\u0440\u0443\u043f\u043d\u043e\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \u0441 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u043c \u043e\u0441\u0442\u0430\u0442\u043a\u043e\u0432 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0440\u0430\u043d\u0435\u0435.","450d69c0":"\u041e\u0434\u043d\u0430\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0442\u043e\u043c , \u0447\u0442\u043e \u043e\u043d\u0430 \u043d\u0435 \u0443\u043b\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e\u0441\u0442\u044c \u0438 \u0434\u0438\u0444\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430.","1d2586e4":"\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441 \u0441\u043a\u043b\u043e\u043d\u0435\u043d \u043a \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438. \u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, \u043e\u043d \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0441\u043f\u043e\u0441\u043e\u0431\u0435\u043d \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0440\u043e\u0448\u043e \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0438 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044e\u0449\u0435\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 (R2 = 0.878 \u043d\u0430 \u0438\u0441\u043f\u044b\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445).","526206a6":"#### \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u0440\u0435r\u0440\u0435\u0441\u0441\u0438\u0438","fa8eb4c3":"\u041f\u0440\u044f\u043c\u0430\u044f \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u0434\u0433\u043e\u043d\u044f\u0435\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u044b\u043c (R^2=0.69), \u0447\u0435\u043c \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.","2c5a6f27":"#### \u041f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f","940a03f9":"### Features info\n\nInput features in order:  \n1) CRIM - \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0434\u0443\u0448\u0443 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443;  \n2) ZN - \u0434\u043e\u043b\u044f \u0436\u0438\u043b\u044b\u0445 \u0437\u0435\u043c\u0435\u043b\u044c\u043d\u044b\u0445 \u0443\u0447\u0430\u0441\u0442\u043a\u043e\u0432 \u0441 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e \u0431\u043e\u043b\u0435\u0435 25000 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0444\u0443\u0442\u043e\u0432 (\u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 2 322.5 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u043e\u0432);  \n3) INDUS - \u0434\u043e\u043b\u044f \u0437\u0435\u043c\u0435\u043b\u044c, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u043f\u0440\u0435\u0434\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 \u043d\u0435\u0440\u043e\u0437\u043d\u0438\u0447\u043d\u043e\u0439 \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u0438, \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443;  \n4) \u0421\u041d\u0410S - \u0444\u0438\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0440\u0435\u043a\u0438 \u0427\u0430\u0440\u043b\u044c\u0437 (\u0440\u0430\u0432\u043d\u0430 1, \u0435\u0441\u043b\u0438 \u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442 \u0441 \u0440\u0435\u043a\u043e\u0439, \u0438 0 \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435);  \n5) NOX - \u043a\u043e\u043d\u0446\u0435\u043d\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u043a\u0438\u0441\u0438 \u0430\u0437\u043e\u0442\u0430 (\u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u043c\u0438\u043b\u043b\u0438\u043e\u043d\u043d\u044b\u0445 \u0434\u043e\u043b\u044f\u0445);  \n6) R\u041c - \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u043d\u0430 \u0434\u043e\u043c;  \n7) AGE - \u0434\u043e\u043b\u044f \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u0430\u043c\u0438 \u0434\u043e\u043c\u043e\u0432, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0434\u043e 1940 \u0433\u043e\u0434\u0430;  \n8) DIS - \u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u043e \u043f\u044f\u0442\u0438 \u0446\u0435\u043d\u0442\u0440\u043e\u0432 \u0437\u0430\u043d\u044f\u0442\u043e\u0441\u0442\u0438 \u0432 \u0411\u043e\u0441\u0442\u043e\u043d\u0435;  \n9) RAD - \u0438\u043d\u0434\u0435\u043a\u0441 \u0434\u043e\u0441\u044f\u0433\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u0434\u043e \u0440\u0430\u0434\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u0430\u0433\u0438\u0441\u0442\u0440\u0430\u043b\u0435\u0439;  \n10) \u0422\u0410\u0425 - \u043f\u043e\u043b\u043d\u0430\u044f \u0441\u0442\u0430\u0432\u043a\u0430 \u043d\u0430\u043b\u043e\u0433\u0430 \u043d\u0430 \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0430 $10000;  \n11) PTRATIO - \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u044f \u0443\u0447\u0435\u043d\u0438\u043a-\u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443;  \n12) B - \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f B=1000 (Bk - 0.63)^2, \u0433\u0434\u0435 Bk - \u0434\u043e\u043b\u044f \u043b\u044e\u0434\u0435\u0439 \u0430\u0444\u0440\u043e\u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0443;  \n13) LSTAT - \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u0430\u044f \u0434\u043e\u043b\u044f \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0441 \u0431\u043e\u043b\u0435\u0435 \u043d\u0438\u0437\u043a\u0438\u043c \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c;  \n\nOutput variable:  \n1) MEDV: \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u0430\u043c\u0438 \u0434\u043e\u043c\u043e\u0432 \u0432 \u0442\u044b\u0441\u044f\u0447\u0430\u0445 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432","993eeb38":"\u0414\u043b\u044f \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c SVM \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u043e\u0440.","fa336598":"\u041f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0430 \u0443\u043b\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0442\u0432\u0435\u0442\u0430 \u0438 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044e\u0449\u0435\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043b\u0443\u0447\u0448\u0435, \u0447\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0430.","07b836ca":"#### \u041c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435\u043f\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u0441\u0432\u044f\u0437\u0435\u0439","bf3701d1":"##### \u0420\u0435r\u0440\u0435\u0441\u0441\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0435\u0440\u0435\u0432\u0430 \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u0439","1ece20a9":"##### \u0420\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043beca","ea323629":"\u041d\u0430 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u043d\u0430 \u0434\u043e\u043c RM \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043e\u043c\u043e\u0432, \u0430 LSTAT \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e MEDV.","4988f4b8":"C\u043c\u043e\u0434\u0435\u043b\u0438\u0440\u0443\u0435\u043c \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043d\u0430\u043c\u0438 \u043d\u0430 \u0434\u043e\u043c\u0430 \u0438 LSTAT \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u043e\u0432 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0438 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u043c \u0435\u0435 \u0441 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u043e\u0439.","495a4eb4":"\u041f\u043e \u0442\u0435\u043f\u043b\u043e\u0432\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0443\u0431\u0435\u0434\u0438\u043b\u0438\u0441\u044c, \u0447\u0442\u043e \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f MEDV \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0443\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 LSTAT (-0.74); \u043e\u0434\u043d\u0430\u043a\u043e \u0441\u0443\u0434\u044f \u043f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0443 \u043c\u0435\u0436\u0434\u0443 LSTAT \u0438 MEDV \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c. \u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043c\u0435\u0436\u0434\u0443 RM \u0438 MEDV \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0441\u043e\u043a\u0430 (\u041e.70) + \u0443 \u043d\u0438\u0445 \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 RM \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044e\u0449\u0435\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.","ccddf60e":"MEDV \u0438\u043c\u0435\u0435\u0442 \u043f\u043e\u0447\u0442\u0438 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441 \u0440\u044f\u0434\u043e\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432.  \n*\u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0443 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u044e\u0449\u0438\u0445 \u0438\u043b\u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445. \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a \u0433\u0438\u043f\u043e\u0442\u0435\u0437.*"}}