{"cell_type":{"ff8e214c":"code","8dbbfb96":"code","ffba1942":"code","66862dfe":"code","d8c30774":"code","7b53a37b":"code","20b6dca2":"code","e41a2fd0":"code","262b0704":"code","b0ed1a10":"code","08fd742c":"code","e2beff2c":"code","f3403953":"code","8455dd10":"code","e6c25f55":"code","8be6ac8f":"code","a729bc03":"code","dfcc6c81":"code","fa1f97e3":"code","2f86a9ec":"code","b27da834":"code","b371b03a":"code","97f56faa":"markdown","b1ccbd52":"markdown","541fc3d0":"markdown","135c84f0":"markdown","7bb41ed8":"markdown","2bad09ed":"markdown","c663cb11":"markdown","98f1e139":"markdown","9e940347":"markdown","d6cb3ca9":"markdown","6cac18c9":"markdown","84ee4c0d":"markdown","2efbaf08":"markdown","9039a97d":"markdown","a99ad303":"markdown","c95ff8cb":"markdown","c2ff06cd":"markdown","3d158a46":"markdown","97a80b08":"markdown","358ddf7f":"markdown","be6ec49b":"markdown","45c5ba44":"markdown","c9167923":"markdown","74ffa44d":"markdown","eac2239d":"markdown","71cade85":"markdown","e8d8b5e7":"markdown","aa25580c":"markdown","18c785ad":"markdown","43f565b9":"markdown"},"source":{"ff8e214c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8dbbfb96":"customers = pd.read_csv(\"..\/input\/new-york-ecommerce-customers\/Ecommerce Customers\")","ffba1942":"customers.head()","66862dfe":"customers.describe()","d8c30774":"sns.distplot(customers[\"Yearly Amount Spent\"],bins=25)","7b53a37b":"sns.jointplot(x = 'Time on Website', y = 'Yearly Amount Spent',data = customers)","20b6dca2":"customers.corr()","e41a2fd0":"sns.heatmap(customers.corr(),cmap='coolwarm', annot=True,fmt=\".2f\",annot_kws={'size':16},cbar=False)","262b0704":"sns.pairplot(customers)","b0ed1a10":"sns.lmplot(x = 'Length of Membership', y = 'Yearly Amount Spent',data = customers)","08fd742c":"X = customers[[\"Avg. Session Length\",\"Time on App\",\"Time on Website\",\"Length of Membership\"]]\nY = customers[\"Yearly Amount Spent\"]","e2beff2c":"from sklearn.model_selection import train_test_split","f3403953":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,random_state = 101)","8455dd10":"from sklearn.linear_model import LinearRegression","e6c25f55":"lm = LinearRegression()","8be6ac8f":"lm.fit(X_train,Y_train)","a729bc03":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","dfcc6c81":"predictions = lm.predict(X_test)","fa1f97e3":"plt.scatter(x = predictions, y = Y_test)","2f86a9ec":"sns.distplot(Y_test-predictions)","b27da834":"from sklearn import metrics","b371b03a":"print('MAE:', metrics.mean_absolute_error(Y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(Y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(Y_test, predictions)))","97f56faa":"Let's calculate the above metrics","b1ccbd52":"Let's import and instantiate out Linear Regression Model","541fc3d0":"The above dataframe specifies that if every other feature is held constant then for 1 unit change in the feature will cause an increase in the Yearly Amount Spent by coefficient amount","135c84f0":"## Predicting Test Data","7bb41ed8":"**Note that Email,Address and Avatar are of no use to us, since they are not numerical. But we can still use them to gain additional insights about the data**","2bad09ed":"## Regression Evaluation Metrics\n\n\nHere are three common evaluation metrics for regression problems:\n\n**Mean Absolute Error** (MAE) is the mean of the absolute value of the errors:\n\n$$\\frac 1n\\sum_{i=1}^n|y_i-\\hat{y}_i|$$\n\n**Mean Squared Error** (MSE) is the mean of the squared errors:\n\n$$\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2$$\n\n**Root Mean Squared Error** (RMSE) is the square root of the mean of the squared errors:\n\n$$\\sqrt{\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}$$\n\nComparing these metrics:\n\n- **MAE** is the easiest to understand, because it's the average error.\n- **MSE** is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n- **RMSE** is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are **loss functions**, because we want to minimize them.","c663cb11":"Let's take a look at the data","98f1e139":"Let's print the coefficient of each variable in from of a dataframe","9e940347":"For splitting the data we are going to use python's sklearn library","d6cb3ca9":"Above we can see that there are 500 rows in the dataset. Let's jump to the interesting part <br>\nLet's check the distribution of **Yearly Amount Spent**","6cac18c9":"# Linear Regression\nIn this notebook, we are going to discuss Linear Regression, machine learning algorithm. For this we are going to use fake data of an Ecommerce clothing company based in New York. The company also provides in-store style and clothing advice sessions. Customers come in to the store, have sessions\/meetings with a personal stylist, then they can go home and order either on a mobile app or website for the clothes they want.We are going to predict the amount spent by an individual based on the time spent on website, time spent on app, average session time and length of his\/her membership.\n\nLet's start with importing the important libraries","84ee4c0d":"We will use the python pandas library to import and handle the data. Think of pandas as an excel sheet through which we can manipulate and handle data. The CSV file is included in the repository","2efbaf08":"Now that we have our model ready, we can evaluate its performance by predicting off the values","9039a97d":"To gain additional insights let's plot each numerical column with every other column using Seaborn's pairplot","a99ad303":"## Splitting Data into Train and Test Data","c95ff8cb":"In train_test_split test_size = 0.33 means that 1\/3rd of the dataset is used for testing and the remaining for the training<br>\nrandom_state corresponds to the shuffling applied to the data before the split","c2ff06cd":"For example as we saw **Time on App** is better correlated with **Yearly Amount Spent** than **Time on Website**. Therefore we can further improve our App or focus on the website to gain additional customers. Also **Length of Membership** is highly correlated with the amount so we can offer some addtional incentives to our long time customers.","3d158a46":"\n**Time to see the correlation between these columns**","97a80b08":"**We can see that the distribution is approximately normal**<br>\nLet's see the relation between **Time on Website** with **Yearly Amount Spent**","358ddf7f":"## Conclusion\nWe saw that how we can train a linear regression model to predit numerical values off some given features<br>\nApart from the above predictions using our analysis we can increase our profits.","be6ec49b":"We can see the descriptive statistics of the data using pandas","45c5ba44":"## Explonatory Data Analysis","c9167923":"As hoped we got a normal distribution which is a good sign","74ffa44d":"We can see that **Length of Membership** and **Yearly Amount Spent** are highly correlated","eac2239d":"We can also plot this in form of a heatmap using Seaborn python library","71cade85":"Let's fit the model with our training data","e8d8b5e7":"The predicted variable is denoted by Y and the independent variables are denoted by X<br>Let's define X and Y","aa25580c":"**We can see that there is no significant dependance of Time Spent by a customer on the Website with the Amount Spent by the Customer**","18c785ad":"Let's compare our predictions with true value in form of a scatter plot","43f565b9":"We can see that our predictions are close to the true value<br>\nLet's plot the residual distribution it should approximate a normal distribution"}}