{"cell_type":{"61a78fd5":"code","18dc65b2":"code","0ffa8f69":"code","5a21a28b":"code","6d3be9de":"code","f6fe6f1f":"code","abb03924":"code","b40a2b78":"code","c65df978":"code","82e42c55":"code","745e2ad1":"code","0edbf8b3":"code","cd22b626":"code","f0527a9f":"code","f910bd4c":"code","a45de086":"code","5757f049":"code","f6bdc842":"code","b30244a1":"code","aa107cba":"code","b3858e25":"code","6ba84680":"code","d524e4c2":"markdown","e46d4109":"markdown","db06f954":"markdown","0d35bfdf":"markdown","f945b66f":"markdown","f330f060":"markdown","a51f1c52":"markdown"},"source":{"61a78fd5":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn","18dc65b2":"Dataset=pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\nDataset.head()","0ffa8f69":"Dataset.tail()","5a21a28b":"Dataset.info()","6d3be9de":"Dataset.describe()","f6fe6f1f":"Dataset.hist(figsize=(12,12))","abb03924":"sn.pairplot(Dataset)","b40a2b78":"corr_matrix=Dataset.corr()\nplt.figure(figsize=(12,12))\nhm = sn.heatmap(corr_matrix,annot=True)\nplt.show()","c65df978":"Dataset=Dataset.drop(['Cholesterol','MaxHR'],axis=1)\nDataset ","82e42c55":"Dataset.select_dtypes(exclude=\"number\").nunique()","745e2ad1":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nDataset['Sex']=le.fit_transform(Dataset['Sex'])\nDataset['ExerciseAngina']=le.fit_transform(Dataset['ExerciseAngina'])\nDataset","0edbf8b3":"Dataset=pd.get_dummies(Dataset,drop_first=True)\nDataset.head()","cd22b626":"x=Dataset.iloc[:,:-1].values\ny=Dataset.iloc[:,-1].values","f0527a9f":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)","f910bd4c":"print(x_train)\nprint(x_test)\nprint(y_train)\nprint(y_test)","a45de086":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nx_train=sc.fit_transform(x_train)\nx_test=sc.fit_transform(x_test)","5757f049":"print(x_train)\nprint(x_test)","f6bdc842":"from sklearn.svm import SVC\nclassifier = SVC(kernel='rbf', random_state=27)\nclassifier.fit(x_train, y_train)","b30244a1":"y_pred=classifier.predict(x_test)","aa107cba":"result_np = np.concatenate((y_pred.reshape(len(y_pred), 1), (y_test.reshape(len(y_test), 1))), 1)\nresult = pd.DataFrame(result_np, columns=['Prediction', 'Real_Value'])\nresult","b3858e25":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","6ba84680":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 10)\nprint(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","d524e4c2":"confusion_matrix","e46d4109":"Finding Correlation","db06f954":"Model Building","0d35bfdf":"DATA ENCODING","f945b66f":"Pre Preprocessing\n","f330f060":" Accuracy & Standard Deviation","a51f1c52":"Feature Scaling "}}