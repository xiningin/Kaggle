{"cell_type":{"0f6376e2":"code","7b58d4ef":"markdown"},"source":{"0f6376e2":"import numpy as np\nimport pandas as pd\nfrom IPython.core.display import HTML\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nsub = pd.read_csv('..\/input\/Submissions.csv')\nsub.dropna(subset=['SourceKernelVersionId','PrivateScoreFullPrecision'], inplace=True)\nsub = sub[['SubmittedUserId', 'TeamId', 'SourceKernelVersionId', 'PrivateScoreFullPrecision']]\n\nusers = pd.read_csv('..\/input\/Users.csv').rename(columns={'Id':'SubmittedUserId'})[['SubmittedUserId', 'UserName', 'DisplayName']]\nsub = pd.merge(sub, users, how='inner', on='SubmittedUserId')\n\nteams = pd.read_csv('..\/input\/Teams.csv')[['Id', 'CompetitionId', 'PrivateLeaderboardRank']].rename(columns={'Id':'TeamId'})\nsub = pd.merge(sub, teams, how='inner', on='TeamId')\n\ncomp = pd.read_csv('..\/input\/Competitions.csv')\ncomp = comp[((comp['HostSegmentTitle'].isin(['Featured', 'Research', 'Recruitment', 'Playground'])) \n             & (comp['HasKernels']==True) \n             & (comp['HasLeaderboard']==True))]\ncomp.dropna(subset=['DeadlineDate'], inplace=True)\ncomp['DeadlineDate'] = pd.to_datetime(comp['DeadlineDate'])\ncomp = comp.sort_values(by='DeadlineDate', ascending=False).reset_index(drop=True)\ncomp['Sort'] = comp.index\ncomp = comp[['Sort', 'Id', 'Slug', 'Title', 'EvaluationAlgorithmIsMax']].rename(columns={'Id':'CompetitionId', 'Title':'CompetitionTitle'})\nsub = pd.merge(sub, comp, how='inner', on='CompetitionId')\n\nversions = pd.read_csv('..\/input\/KernelVersions.csv')[['Id', 'KernelId', 'Title']].rename(columns={'Id':'SourceKernelVersionId'})\nsub = pd.merge(sub, versions, how='inner', on='SourceKernelVersionId')\n\nkernels = pd.read_csv('..\/input\/Kernels.csv')[['Id', 'CurrentKernelVersionId', 'CurrentUrlSlug', 'TotalViews', 'TotalComments', 'TotalVotes']].rename(columns={'Id':'KernelId'})\nsub = pd.merge(sub, kernels, how='inner', on='KernelId')\nsub['Latest'] = sub['CurrentKernelVersionId'] == sub['SourceKernelVersionId']\n\ncslug = sub[['Sort', 'Slug']].drop_duplicates()\ncslug = cslug.sort_values(by=['Sort'], ascending=[True]).reset_index(drop=True)['Slug'].values\n\nsub.drop(columns=['Sort','SubmittedUserId', 'TeamId', 'KernelId', 'CurrentKernelVersionId'], inplace=True)\n\n#https:\/\/www.kaggle.com\/shivamb\/data-science-glossary-on-kaggle\n#https:\/\/www.kaggle.com\/sudalairajkumar\/winning-solutions-of-kaggle-competitions\ndef best_kernels(df, n = 10):\n    if df['EvaluationAlgorithmIsMax'].iloc[0] == False:\n        df = df.sort_values(by=['PrivateScoreFullPrecision'], ascending=[True])\n    else:\n        df = df.sort_values(by=['PrivateScoreFullPrecision'], ascending=[False])\n\n    df = df.drop_duplicates(subset=['CurrentUrlSlug'], keep='first')[:n].reset_index(drop=True)\n    \n    comp_url = \"https:\/\/www.kaggle.com\/c\/\"+str(df['Slug'].iloc[0])\n    comp_img1 = 'https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/' + str(df['CompetitionId'].iloc[0]) + '\/logos\/header.png'\n    comp_img2 = 'https:\/\/www.kaggle.com\/static\/images\/competition-noimage.png'\n    hs = \"\"\"<div style=\"border: 2px solid black; padding: 10px; height:100px; width:500; background-image: url('\"\"\" + comp_img1 + \"\"\"'), url('\"\"\" + comp_img2 + \"\"\"'); background-size: cover;\">\n                <h3><a style='color:#ffffff;  text-shadow: 2px 2px #000000;' href=\"\"\"+comp_url+\"\"\">\"\"\"+df['CompetitionTitle'].iloc[0]+\"\"\"<\/a><\/h3>\n            <\/div>\n            <table>\n            <th>\n                <td><b>Kernel<\/b><\/td>\n                <td><b>Author<\/b><\/td>\n                <td><b>Leaderboard Rank<\/b><\/td>\n                <td><b>Private Score<\/b><\/td>\n                <td><b>Views<\/b><\/td>\n                <td><b>Comments<\/b><\/td>\n                <td><b>Votes<\/b><\/td>\n            <\/th>\"\"\"\n    for i, row in df.iterrows():\n        url = \"https:\/\/www.kaggle.com\/\"+row['UserName']+\"\/\"+row['CurrentUrlSlug']+\"?scriptVersionId=\" + str(int(row['SourceKernelVersionId']))\n        aurl= \"https:\/\/www.kaggle.com\/\"+row['UserName']\n        latest = ''\n        if row['Latest'] == True:\n            latest = ' *'\n        hs += \"\"\"<tr>\n                    <td>\"\"\"+str(i+1)+\"\"\"<\/td>\n                    <td><a href=\"\"\"+url+\"\"\" target=\"_blank\"><b>\"\"\"  + row['Title']  + latest + \"\"\"<\/b><\/a><\/td>\n                    <td><a href=\"\"\"+aurl+\"\"\" target=\"_blank\">\"\"\"  + row['DisplayName'] + \"\"\"<\/a><\/td>\n                    <td>\"\"\"+str(row['PrivateLeaderboardRank'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(round(row['PrivateScoreFullPrecision'],5))+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalViews'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalComments'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalVotes'])+\"\"\"<\/td>\n                    <\/tr>\"\"\"\n    hs += \"<\/table><hr\/>\"\n    display(HTML(hs))\n\nfor slug in cslug:\n    best_kernels(sub[sub['Slug']==slug])","7b58d4ef":"**Top Private Leaderboard Kernels**\n\nTop kernel competitors may iterate through many kernel variations and submissions, sometimes stumbling upon a great solution they may have not selected for final submission. Here are the top private leaderboard kernels to highlight options for your research needs and to give them your up-votes if deserving of them to encourage continued contributions."}}