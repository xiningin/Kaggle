{"cell_type":{"4904c60e":"code","3a7cda9c":"code","ad9fc718":"code","7386c47b":"code","3a35a541":"code","13673a15":"code","a24c686c":"code","fd65363c":"code","08d10539":"code","1c7a96c6":"code","c27a39f1":"code","14052fed":"code","48e6a298":"code","de9bd04e":"code","bdd7169a":"code","e231e97c":"code","cc4c95bb":"code","1478334c":"code","ef0d5b80":"code","fd299c1b":"code","06c96fa7":"code","6087e164":"code","77aa1054":"code","ba6ab6fd":"code","4021df36":"code","2aa87378":"code","2e785bf5":"code","c305994f":"code","aadae0b3":"code","a90d40a2":"code","22362066":"code","8db928a2":"code","dab1137b":"code","5e2d3d82":"code","ecfd98d7":"code","103dd2ff":"code","c64a1879":"code","828a64e1":"code","a4c49151":"code","79898d3e":"code","afc05873":"code","d15a217d":"code","facbee39":"code","99426a01":"code","0614199c":"code","e040fa31":"code","ff65b6d6":"code","3827580a":"code","46ea2feb":"code","d6ab549e":"code","0894b619":"code","11e826b4":"code","696c7ffd":"code","b536e67c":"code","95ad8d3c":"code","fc6d5a1f":"code","234d6a67":"code","d1d75e71":"code","cbbd189c":"code","1e095600":"code","013ed148":"code","6c525cc0":"code","80ad289f":"code","d186c1ac":"code","2f1890ab":"code","acfcaa4a":"code","ab647196":"code","5bd24d6c":"code","5cd36556":"code","11f6f4f9":"markdown","cd930572":"markdown","e4c97902":"markdown","b1b3609b":"markdown"},"source":{"4904c60e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a7cda9c":"pip install openpyxl","ad9fc718":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","7386c47b":"train=pd.read_excel(r'\/kaggle\/input\/flight-fare-prediction-mh\/Data_Train.xlsx',engine='openpyxl')\ntest=pd.read_excel(r'\/kaggle\/input\/flight-fare-prediction-mh\/Test_set.xlsx',engine='openpyxl')","3a35a541":"train.head()","13673a15":"train.shape","a24c686c":"train.isnull().sum()","fd65363c":"train[train['Route'].isna()==True]","08d10539":"train[train['Destination']=='Cochin'].head(1)","1c7a96c6":"train['Route'].fillna('DEL \u2192 COK',inplace=True)\ntrain['Total_Stops'].fillna('non-stop',inplace=True)","c27a39f1":"train.isnull().sum()","14052fed":"train.head()","48e6a298":"train['Duration'].value_counts()","de9bd04e":"train[\"Journey_date\"]=pd.to_datetime(train['Date_of_Journey'],format='%d\/%m\/%Y').dt.day\ntrain[\"Journey_month\"]=pd.to_datetime(train['Date_of_Journey'],format='%d\/%m\/%Y').dt.month","bdd7169a":"train.drop(['Date_of_Journey'],axis=1,inplace=True)","e231e97c":"train['Dept_hour']=pd.to_datetime(train['Dep_Time']).dt.hour\ntrain['Dept_min']=pd.to_datetime(train['Dep_Time']).dt.minute\ntrain.drop(['Dep_Time'],axis=1,inplace=True)","cc4c95bb":"train.head()","1478334c":"duration=list(train['Duration'])\n\nfor i in range(len(duration)):\n    if (len(duration[i].split())!=2):\n        if 'h' in duration[i]:\n            duration[i]=duration[i].strip()+\" 0m\"\n        elif 'm' in duration[i]:\n            duration[i]=\"0h \"+duration[i].strip()\n\n            \nduration_hour=[]\nduration_min=[]\nfor i in range(len(duration)):\n    duration_hour.append(int(duration[i].split('h')[0]))\n    duration_min.append(int(duration[i].split('m')[0].split()[-1]))","ef0d5b80":"train['Duration_hour']=duration_hour\ntrain['Duration_min']=duration_min","fd299c1b":"sns.catplot(y='Price',x='Airline',data=train.sort_values('Price',ascending=False),kind='boxen',height=6,aspect=3)","06c96fa7":"airline=pd.get_dummies(train['Airline'],drop_first=True)\nairline.head()\n","6087e164":"sns.catplot(y='Price',x='Source',data=train.sort_values('Price',ascending=False),kind='boxen',height=6,aspect=3)","77aa1054":"train.Source.value_counts()\nsource=pd.get_dummies(train.Source,drop_first=True)","ba6ab6fd":"train.Destination.value_counts()","4021df36":"train.Destination.replace({'Delhi':'New Delhi'},inplace=True)","2aa87378":"sns.catplot(y='Price',x='Destination',data=train.sort_values('Price',ascending=False),kind='violin',height=6,aspect=3)","2e785bf5":"Destination=pd.get_dummies(train['Destination'],drop_first=True)\nDestination.head()","c305994f":"train['Total_Stops'].value_counts()","aadae0b3":"train['Total_Stops'].replace({'non-stop':0,\n                             '1 stop':1,\n                             '2 stops':2,\n                             \"3 stops\":3,\n                             '4 stops':4},inplace=True)","a90d40a2":"train['Total_Stops'].head()","22362066":"train.head()","8db928a2":"print(train.Additional_Info.value_counts())\ntrain.Additional_Info.replace({'No info':'No Info'},inplace=True)\nprint(train.Additional_Info.value_counts())","dab1137b":"Add_Info=pd.get_dummies(train.Additional_Info,drop_first=True)","5e2d3d82":"train_data=pd.concat([train,airline,source,Destination,Add_Info],axis=1)","ecfd98d7":"train_data.head()","103dd2ff":"train_data.drop(['Airline','Source','Destination','Route','Arrival_Time','Duration','Additional_Info'],axis=1,inplace=True)","c64a1879":"train_data.head()","828a64e1":"print('Shape of the Test Set: ',test.shape)\nprint(\"Check Null Values in Test Set: \\n\",test.isnull().sum())\ntest[\"Journey_date\"]=pd.to_datetime(test['Date_of_Journey'],format='%d\/%m\/%Y').dt.day\ntest[\"Journey_month\"]=pd.to_datetime(test['Date_of_Journey'],format='%d\/%m\/%Y').dt.month\ntest.drop(['Date_of_Journey'],axis=1,inplace=True)\ntest['Dept_hour']=pd.to_datetime(test['Dep_Time']).dt.hour\ntest['Dept_min']=pd.to_datetime(test['Dep_Time']).dt.minute\ntest.drop(['Dep_Time'],axis=1,inplace=True)\n\nduration=list(test['Duration'])\n\nfor i in range(len(duration)):\n    if (len(duration[i].split())!=2):\n        if 'h' in duration[i]:\n            duration[i]=duration[i].strip()+\" 0m\"\n        elif 'm' in duration[i]:\n            duration[i]=\"0h \"+duration[i].strip()\n\n            \nduration_hour=[]\nduration_min=[]\nfor i in range(len(duration)):\n    duration_hour.append(int(duration[i].split('h')[0]))\n    duration_min.append(int(duration[i].split('m')[0].split()[-1]))\n\ntest['Duration_hour']=duration_hour\ntest['Duration_min']=duration_min\n\nairline=pd.get_dummies(test['Airline'],drop_first=True)\nsource=pd.get_dummies(test.Source,drop_first=True)\nDestination=pd.get_dummies(test['Destination'],drop_first=True)\n\nprint(test.Additional_Info.value_counts())\ntest.Additional_Info.replace({'No info':'No Info'},inplace=True)\nprint(test.Additional_Info.value_counts())\n\nAdd_Info=pd.get_dummies(test.Additional_Info,drop_first=True)\n\ntest['Total_Stops'].replace({'non-stop':0,\n                             '1 stop':1,\n                             '2 stops':2,\n                             \"3 stops\":3,\n                             '4 stops':4},inplace=True)\ntest_data=pd.concat([test,airline,source,Destination,Add_Info],axis=1)\ntest_data.drop(['Airline','Source','Destination','Route','Arrival_Time','Duration','Additional_Info'],axis=1,inplace=True)\ntest_data.head()","a4c49151":"train_data.columns","79898d3e":"y=train_data['Price']\nX=train_data.drop(['Price'],axis=1)","afc05873":"X.head()","d15a217d":"y.head()","facbee39":"plt.figure(figsize=(40,40))\nsns.heatmap(train_data.corr(),cmap='viridis',annot=True,fmt='.2f')","99426a01":"from sklearn.ensemble import ExtraTreesRegressor\nselection=ExtraTreesRegressor(random_state=0)\nselection.fit(X,y)\n","0614199c":"print(selection.feature_importances_)","e040fa31":"plt.figure(figsize=(12,8))\nfeat_importances=pd.Series(selection.feature_importances_,index=X.columns)\nfeat_importances.nlargest(20).plot(kind='barh')\nplt.show()","ff65b6d6":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.15)","3827580a":"from sklearn.ensemble import RandomForestRegressor\nrfr=RandomForestRegressor()\nrfr.fit(X_train,y_train)","46ea2feb":"y_pred=rfr.predict(X_test)","d6ab549e":"rfr.score(X_train,y_train)","0894b619":"rfr.score(X_test,y_test)","11e826b4":"sns.distplot(y_pred-y_test)","696c7ffd":"plt.scatter(y_pred,y_test,alpha=0.5)\nplt.xlabel('Predicted Price',fontsize=20)\nplt.ylabel('Actual Price',fontsize=20)\nplt.title('Predicted vs Actual Price Distribution')","b536e67c":"from sklearn import metrics\nprint('MAE: ',metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE: ',metrics.mean_squared_error(y_test,y_pred))\nprint('RMSE: ',np.sqrt(metrics.mean_squared_error(y_test,y_pred)))\n","95ad8d3c":"metrics.r2_score(y_test,y_pred)","fc6d5a1f":"from sklearn.model_selection import RandomizedSearchCV\nn_estimators=[int(x) for x in np.linspace(start=100,stop=1200,num=12)]\nmax_features=['auto','sqrt']\nmax_depth=[int(x) for x in np.linspace(5,30, num=6)]\nmin_samples_split=[2,5,10,15,100]\nmin_sample_leaf=[1,2,5,10]","234d6a67":"random_grid={'n_estimators':n_estimators,\n            'max_features':max_features,\n            'max_depth':max_depth,\n            'min_samples_split':min_samples_split,\n            'min_samples_leaf':min_sample_leaf}","d1d75e71":"rf_random=RandomizedSearchCV(estimator=rfr,param_distributions=random_grid,scoring='neg_mean_squared_error',n_iter=10,cv=5,verbose=2,random_state=42,n_jobs=1)","cbbd189c":"rf_random.fit(X_train,y_train)","1e095600":"rf_random.best_params_","013ed148":"y_pred_rf=rf_random.predict(X_test)","6c525cc0":"plt.figure(figsize=(8,8))\nsns.distplot(y_test-y_pred_rf)\nplt.show()","80ad289f":"plt.scatter(y_pred_rf,y_test,alpha=0.5)\nplt.xlabel('Predicted Price',fontsize=20)\nplt.ylabel('Actual Price',fontsize=20)\nplt.title('Predicted vs Actual Price Distribution')","d186c1ac":"metrics.r2_score(y_test,y_pred_rf)","2f1890ab":"from sklearn import metrics\nprint('MAE: ',metrics.mean_absolute_error(y_test,y_pred_rf))\nprint('MSE: ',metrics.mean_squared_error(y_test,y_pred_rf))\nprint('RMSE: ',np.sqrt(metrics.mean_squared_error(y_test,y_pred_rf)))","acfcaa4a":"import pickle\n\nfile=open('flight_fare.pkl','wb')\npickle.dump(rfr,file)","ab647196":"model=open('flight_fare.pkl','rb')\nforest=pickle.load(model)","5bd24d6c":"y_prediction=forest.predict(X_test)","5cd36556":"metrics.r2_score(y_test,y_prediction)","11f6f4f9":"# Hyperparameter Tuning!","cd930572":"# Feature Selection","e4c97902":"# EDA","b1b3609b":"1. Heatmap\n2. Feature Importance\n3. SelectKBest"}}