{"cell_type":{"06a69ce2":"code","bdda4a8a":"code","59177383":"code","5c4593e4":"code","6b554b98":"code","19ea728d":"code","20392fce":"code","e603f6eb":"code","52895241":"code","f3be8d3c":"code","21231980":"code","6225bae9":"code","2b1d0bad":"code","d7082473":"code","5dac1813":"code","226253e8":"code","65d20d18":"code","41040b3f":"code","747b8798":"code","05e9d9a8":"code","87875038":"code","0430b792":"code","5be7ec6f":"code","1a5db40d":"code","42b31f8d":"code","22316e74":"code","75736a2f":"code","c017acab":"code","a31e216d":"code","d799e37e":"code","e0c2e80c":"code","8de24c58":"code","419ee055":"code","69998297":"code","34b3594e":"code","6feeb1da":"code","0fc6667f":"markdown","bed69939":"markdown","5e6ca82a":"markdown","f8cc4afb":"markdown","4c43110c":"markdown","44442eac":"markdown","c398b04d":"markdown","d48e12d5":"markdown","ee8416de":"markdown","77ab38c1":"markdown","c8df6859":"markdown"},"source":{"06a69ce2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bdda4a8a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks\n\n%matplotlib inline\nsns.set_style('whitegrid')\ninit_notebook_mode(connected=True)\ncufflinks.go_offline()","59177383":"titanic = pd.read_csv('..\/input\/titanic\/train.csv')","5c4593e4":"titanic.head()","6b554b98":"titanic.info()","19ea728d":"plt.figure(figsize=(12,6))\nsns.heatmap(titanic.isnull(),yticklabels=False,cbar=False,cmap='coolwarm')","20392fce":"plt.figure(figsize=(12,6))\nsns.countplot(titanic['Survived'])","e603f6eb":"plt.figure(figsize=(12,6))\nsns.countplot(titanic['Survived'],hue=titanic['Sex'])","52895241":"titanic['Pclass'].value_counts()","f3be8d3c":"plt.figure(figsize=(12,6))\nsns.countplot(titanic['Pclass'],hue=titanic['Sex'])","21231980":"fg=sns.FacetGrid(data=titanic,col='Sex',height=6)\nfg.map(sns.countplot,'Survived',hue=titanic['Pclass'],palette='rainbow').add_legend()","6225bae9":"titanic['Age'].iplot(kind='hist',bins=30)","2b1d0bad":"corr = titanic.corr()\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nplt.figure(figsize=(12,6))\nsns.heatmap(corr,mask=mask,cmap='coolwarm',annot=True)","d7082473":"sns.boxplot(x='Pclass', y='Age', data=titanic)","5dac1813":"def inputAge(data):\n    age=data[0]\n    _class= data[1]\n    if pd.isnull(age):\n        if _class==1:\n            return 37\n        elif _class==2:\n            return 29\n        else:\n            return 25\n    else:\n        return age","226253e8":"titanic['Age'] = titanic[['Age','Pclass']].apply(inputAge,axis=1)","65d20d18":"plt.figure(figsize=(12,6))\nsns.heatmap(titanic.isnull(),yticklabels=False,cbar=False,cmap='viridis')","41040b3f":"titanic.drop('Cabin',axis=1,inplace=True)","747b8798":"titanic.dropna(inplace=True)","05e9d9a8":"plt.figure(figsize=(12,6))\nsns.heatmap(titanic.isnull(),yticklabels=False,cbar=False,cmap='viridis')","87875038":"sex=pd.get_dummies(titanic['Sex'],drop_first=True)\nembark=pd.get_dummies(titanic['Embarked'],drop_first=True)\ntitanic.drop(['PassengerId','Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","0430b792":"train = pd.concat([titanic,sex,embark],axis=1)","5be7ec6f":"train.head()","1a5db40d":"from sklearn.linear_model import LogisticRegression","42b31f8d":"X_train= train.drop('Survived',axis=1)\ny_train = train['Survived']\n\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","22316e74":"test= pd.read_csv('..\/input\/titanic\/test.csv')","75736a2f":"test['Age'] = test[['Age','Pclass']].apply(inputAge,axis=1)","c017acab":"test.drop('Cabin',axis=1,inplace=True)","a31e216d":"import plotly.express as px\nfig = px.box(test,x='Pclass', y=\"Fare\")\nfig.show()","d799e37e":"boolean = pd.isnull(test['Fare'])\ntest[boolean]","e0c2e80c":"test.loc[152,'Fare'] = 7.89","8de24c58":"sex=pd.get_dummies(test['Sex'],drop_first=True)\nembark=pd.get_dummies(test['Embarked'],drop_first=True)\ntest.drop(['PassengerId','Sex','Embarked','Name','Ticket'],axis=1,inplace=True)\ntest = pd.concat([test,sex,embark],axis=1)","419ee055":"predict = logmodel.predict(test)","69998297":"df= pd.read_csv('..\/input\/titanic\/gender_submission.csv')","34b3594e":"df['Survived'] = predict","6feeb1da":"df.to_csv('submission.csv', index=False)","0fc6667f":"The number of female survived is more than that of male. If you have seen the movie, a lot of men sacrified their life for women and children.","bed69939":"* Poor people always die *what a pity!\n* It seems like men in 3rd class couldn't survive and almost women in 1st class survived based on our data","5e6ca82a":"Check data again","f8cc4afb":"See how many ppl has survived","4c43110c":"Let see the number group by Male and Female","44442eac":"It can be clearly seen that the Cabin is missing a lot of data and then the Age columns.\n> Let visualize the missing data","c398b04d":"# Insight\nLet explore this dataset a little bit\n","d48e12d5":"People on Titanic were really young, from 20 to 30","ee8416de":"Let check the data","77ab38c1":"# Building a Logistic Regression model","c8df6859":"## Data Cleaning\nLet try to input missing value for **Age**\n"}}