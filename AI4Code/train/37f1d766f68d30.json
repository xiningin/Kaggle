{"cell_type":{"a12856c7":"code","4f2d8b45":"code","d4e0f0f7":"code","d186e807":"code","3edc71e3":"code","34569231":"code","622711c2":"markdown","699fcd86":"markdown","22c6e269":"markdown"},"source":{"a12856c7":"# Python 3 environment\nimport numpy as np\nimport pandas as pd\n\ntrain = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\n\nprint(train.shape)\nprint(test.shape)","4f2d8b45":"train.head()","d4e0f0f7":"Y_train = train['label']\nX_train = train.drop(labels = ['label'], axis = 1)\n\n# Is this faster?\n#X = train.iloc[:,1:]\n#y = train.iloc[:,0]","d186e807":"# Gray pixels are 0..255, make it 0..1.0\nX_train = X_train \/ 255.0\ntest = test \/ 255.0\n\n# Get rid of pandas DataFrame & reshape for CNN input\nX_train = X_train.values.reshape((X_train.shape[0], 28, 28, 1))\nX_test = test.values.reshape((test.shape[0], 28, 28, 1))","3edc71e3":"from tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D, Dropout, MaxPooling2D\n\nmodel1 = Sequential()\nmodel1.add(Conv2D(32, kernel_size=5, activation='relu', input_shape=(28, 28, 1), padding='same'))\nmodel1.add(Conv2D(64, activation='relu', kernel_size=5, padding='same'))\nmodel1.add(MaxPooling2D(2, 2))\nmodel1.add(Dropout(0.4))\nmodel1.add(Flatten())\nmodel1.add(Dense(128, activation='relu'))\nmodel1.add(Dense(10, activation='softmax'))\nmodel1.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel1.fit(X_train, Y_train, batch_size=32, epochs=8, validation_split=0.2)","34569231":"Y_test = model1.predict_classes(X_test)\ndf = pd.Series(Y_test, name='Label')\ndf.index += 1\ndf.to_csv(\"digit_recognizer-v5.csv\", header=True, index_label='ImageId')","622711c2":"## Basic preprocessing","699fcd86":"## Keras model","22c6e269":"## Prediction & submission"}}