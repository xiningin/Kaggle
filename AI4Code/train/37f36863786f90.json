{"cell_type":{"386c7960":"code","7e41d256":"code","0d8845f3":"code","c3a4f1b8":"code","3cd03ef1":"code","54a80b25":"code","c1a0229d":"code","878daa1c":"code","699694a9":"code","1a22f146":"code","2c2db872":"code","0838da1f":"code","075d44e5":"code","88c8fb73":"code","88974a81":"code","33926635":"code","a28e2db5":"code","d1b97adb":"code","14e37575":"code","496b9ae6":"code","8ca4ce69":"code","62fa5403":"code","8b35abcf":"code","a6af8757":"code","7a2a6e18":"code","30de9644":"code","5d203371":"code","81053b93":"code","77ddddb3":"code","39eac62b":"code","e4ed4d2c":"code","9f4719c1":"code","9c048e0e":"code","07c10e77":"code","aa8b6360":"code","668f73d1":"code","938cfb83":"code","0cbf5aae":"code","726b16f7":"code","2b22e777":"markdown","566fc0cb":"markdown","7acb11c6":"markdown","d9dca720":"markdown","30218af7":"markdown","17df12ed":"markdown","3bff7f07":"markdown","b1b2046e":"markdown","96876529":"markdown","ed89ae9d":"markdown","566785da":"markdown","260220df":"markdown"},"source":{"386c7960":"import warnings\nwarnings.filterwarnings('ignore')","7e41d256":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","0d8845f3":"h_df = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv') \nh_df.head(10)","c3a4f1b8":"h_df.shape","3cd03ef1":"h_df.columns","54a80b25":"h_df.info()","c1a0229d":"h_df.describe([0.25,0.50,0.75])","878daa1c":"h_df.isnull().sum()","699694a9":"h_df['age'].sort_values(ascending = False)","1a22f146":"bins = [32,48,64,80,96]\nlabels = ['32-48', '48-64', '64-80', '80-96']\nh_df['agegroup']=pd.cut(h_df['age'], bins, labels = labels)","2c2db872":"h_df['agegroup'].value_counts()","0838da1f":"def plot_Outlier(var_list):\n    plt.figure(figsize=(20, 15))\n    for var in var_list:\n        plt.subplot(4,4,var_list.index(var)+1)\n        ax=sns.boxplot(x = h_df[var])   \n    plt.show()","075d44e5":"plot_Outlier(['age', 'anaemia', 'creatinine_phosphokinase', 'diabetes',\n       'ejection_fraction', 'high_blood_pressure', 'platelets',\n       'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time',\n       'DEATH_EVENT'])","88c8fb73":"Q1 = h_df['creatinine_phosphokinase'].quantile(0.25)\nQ3 = h_df['creatinine_phosphokinase'].quantile(0.75)\nIQR = Q3 - Q1\nh_df=h_df.loc[(h_df['creatinine_phosphokinase'] >= Q1 - 1.5*IQR) & (h_df['creatinine_phosphokinase'] <= Q3 + 1.5*IQR)]\nh_df.shape","88974a81":"Q1 = h_df['platelets'].quantile(0.25)\nQ3 = h_df['platelets'].quantile(0.75)\nIQR = Q3 - Q1\nh_df=h_df.loc[(h_df['platelets'] >= Q1 - 1.5*IQR) & (h_df['platelets'] <= Q3 + 1.5*IQR)]\nh_df.shape","33926635":"Q1 = h_df['serum_creatinine'].quantile(0.25)\nQ3 = h_df['serum_creatinine'].quantile(0.75)\nIQR = Q3 - Q1\nh_df=h_df.loc[(h_df['serum_creatinine'] >= Q1 - 1.5*IQR) & (h_df['serum_creatinine'] <= Q3 + 1.5*IQR)]\nh_df.shape","a28e2db5":"Q1 = h_df['serum_sodium'].quantile(0.25)\nQ3 = h_df['serum_sodium'].quantile(0.75)\nIQR = Q3 - Q1\nh_df=h_df.loc[(h_df['serum_sodium'] >= Q1 - 1.5*IQR) & (h_df['serum_sodium'] <= Q3 + 1.5*IQR)]\nh_df.shape","d1b97adb":"Q1 = h_df['ejection_fraction'].quantile(0.25)\nQ3 = h_df['ejection_fraction'].quantile(0.75)\nIQR = Q3 - Q1\nh_df=h_df.loc[(h_df['ejection_fraction'] >= Q1 - 1.5*IQR) & (h_df['ejection_fraction'] <= Q3 + 1.5*IQR)]\nh_df.shape","14e37575":"plot_Outlier(['age', 'anaemia', 'creatinine_phosphokinase', 'diabetes',\n       'ejection_fraction', 'high_blood_pressure', 'platelets',\n       'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time',\n       'DEATH_EVENT'])","496b9ae6":"h_df.columns","8ca4ce69":"plt.figure(figsize=(10, 5))\nsns.countplot('agegroup', data=h_df)","62fa5403":"plt.figure(figsize=(10, 5))\nsns.countplot('anaemia', data=h_df, hue = 'agegroup')","8b35abcf":"plt.figure(figsize=(10, 5))\nsns.countplot('agegroup', data=h_df, hue = 'anaemia')","a6af8757":"plt.figure(figsize=(10, 5))\nsns.countplot('agegroup', data=h_df, hue = 'DEATH_EVENT')","7a2a6e18":"plt.figure(figsize=(10, 5))\nsns.countplot('anaemia', data=h_df, hue = 'DEATH_EVENT')","30de9644":"plt.figure(figsize=(10, 5))\nsns.countplot('high_blood_pressure', data=h_df, hue = 'DEATH_EVENT')","5d203371":"plt.figure(figsize=(15, 10))\nsns.heatmap(h_df.corr(),annot = True)","81053b93":"corr = h_df.corr()\ncorr[abs(corr['DEATH_EVENT']) > 0.1]['DEATH_EVENT']","77ddddb3":"plt.figure(figsize=(10, 5))\nsns.barplot(y ='ejection_fraction', data=h_df, x = 'DEATH_EVENT')","39eac62b":"def bar_plot(var_list):\n    plt.figure(figsize=(20, 20))\n    for var in var_list:\n        plt.subplot(2,3,var_list.index(var)+1)\n        ax=sns.barplot(y = h_df[var], data = h_df, x = 'DEATH_EVENT')   \n    plt.show()","e4ed4d2c":"bar_plot(['age','ejection_fraction', 'serum_creatinine', 'time', 'serum_sodium'])","9f4719c1":"corr_df=h_df[['age', 'ejection_fraction', 'serum_creatinine', 'serum_sodium', 'time']]","9c048e0e":"x = corr_df\ny = h_df['DEATH_EVENT']\n\n## Train and test data split\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1,test_size=0.2)","07c10e77":"from sklearn.preprocessing import MinMaxScaler\n\n\nscaler = MinMaxScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","aa8b6360":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import metrics\nlr = LogisticRegression()\nlr.fit(x_train,y_train)\ny_pred = lr.predict(x_test)\nprint(\"Accuracy {}\".format(metrics.accuracy_score(y_test, y_pred)))\nprint(\"Recall\/Sensitivity {}\".format(metrics.recall_score(y_test, y_pred)))","668f73d1":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\ny_pred=rfc.predict(x_test)\n#s3=accuracy_score(y_test,p3)\nprint(\"Accuracy {}\".format(metrics.accuracy_score(y_test, y_pred)))\nprint(\"Recall\/Sensitivity {}\".format(metrics.recall_score(y_test, y_pred)))","938cfb83":"from sklearn.svm import SVC\nsvm=SVC()\nsvm.fit(x_train,y_train)\ny_pred=svm.predict(x_test)\nprint(\"Accuracy {}\".format(metrics.accuracy_score(y_test, y_pred)))\nprint(\"Recall\/Sensitivity {}\".format(metrics.recall_score(y_test, y_pred)))","0cbf5aae":"from sklearn.tree import DecisionTreeClassifier\ndt_clf = DecisionTreeClassifier(max_leaf_nodes=10, random_state=30, criterion='entropy')\ndt_clf.fit(x_train, y_train)\ny_pred = dt_clf.predict(x_test)\nprint(\"Accuracy {}\".format(metrics.accuracy_score(y_test, y_pred)))\nprint(\"Recall\/Sensitivity {}\".format(metrics.recall_score(y_test, y_pred)))","726b16f7":"pd.concat([pd.DataFrame(x.columns, columns = ['variable']),\n           pd.DataFrame(rfc.feature_importances_, columns = ['importance'])],\n          axis = 1).sort_values(by = 'importance', ascending = False)","2b22e777":"### Decision Tree Classifier","566fc0cb":"## Reading and Understanding the Data","7acb11c6":"**The age group of 48-64 have high positive cases of Anaemia**. **In the age group of 80-96, the cases are low, but they also have a higher cases of anaemia**","d9dca720":"### Logistic Regression","30218af7":"### Outlier Detection and Removal","17df12ed":"### Support Vector Machine","3bff7f07":"**It shows that Death event has a considerable correlation with following columns: ejection_fraction, serum creatinine, time, serum_sodium**","b1b2046e":"**Accuracy for the following models:**\n1. Logistic Regression: 82.22%\n2. RandomForest Classifier: 82.22%\n3. SVM: 88.88%\n4. Decision Tree Classifier: 84.44%","96876529":"## Model Training and Prediction","ed89ae9d":"**So, we find outliers in following columns: creatinine_phosphokinase,ejection fraction, platelets, serum_creatinine, serum_sodium**","566785da":"## Data Visualization and Data Analysis","260220df":"### Random Forest Classifier"}}