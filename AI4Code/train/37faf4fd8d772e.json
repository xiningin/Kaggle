{"cell_type":{"3544a016":"code","1ee7aa0f":"code","f96a5adb":"code","f3fd359e":"code","c15a1cfd":"code","2c28cc39":"code","18d24b76":"code","406c51e2":"code","5e519d64":"code","f3b744c2":"code","41c75df6":"code","d5a63ef0":"code","303d33dc":"code","b7c57215":"code","b67cfe30":"code","1fc01899":"code","e867cd1d":"code","2824ae25":"markdown","40fb7f77":"markdown","c3f9fe31":"markdown","3a2f2644":"markdown","d09ad583":"markdown","ef9dfea1":"markdown","39dc269e":"markdown","ba2e116b":"markdown","fa8981ad":"markdown","1a0440ef":"markdown"},"source":{"3544a016":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1ee7aa0f":"data = pd.read_csv('..\/input\/2016.csv')\ndata.info()","f96a5adb":"data.head(15)","f3fd359e":"data_cols = data.columns\ndata_cols = data_cols.str.replace(' ','_')\ndata_cols","c15a1cfd":"data.columns = data_cols\ndata.columns","2c28cc39":"def calcCorr(a):\n    return a.corr()","18d24b76":"def plotHeatmap(a):\n    f,ax = plt.subplots(figsize = (15,15))\n    sns.heatmap(calcCorr(a), annot = True, linewidth=.6, fmt='.1f', ax=ax)\n    plt.show()","406c51e2":"calcCorr(data)\nplotHeatmap(data)","5e519d64":"x = 2\ndef f():\n    x = 3\n    return x\nprint(x)      # x = 2 global scope\nprint(f())    # x = 3 local scope","f3b744c2":"# How can we learn what is built in scope\nimport builtins\ndir(builtins)","41c75df6":"pow5= lambda x: x**5     # where x is name of argument\nprint(pow5(4))\ntot = lambda x,y,z: x+y+z   # where x,y,z are names of arguments\nprint(tot(12,54,66))","d5a63ef0":"name = 'Atilla'\nit = iter(name)\nprint(it)\nprint(next(it))\nprint(*it)","303d33dc":"zippedCols = zip(data.Family, data.Happiness_Score)\nprint(zippedCols)\nzippedCols_list = list(zippedCols)\nprint(zippedCols_list)","b7c57215":"un_zip = zip(*zippedCols_list)\nun_list1,un_list2 = list(un_zip) # unzip returns tuple\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))","b67cfe30":"def f(*args):\n    for i in args:\n        print(i)\nf(1)\nprint(\"\")\nf(1,2,3,4)","1fc01899":"def f(**kwargs):\n    \"\"\" print key and value of dictionary\"\"\"\n    for key, value in kwargs.items():               \n        print(key, \" \", value)\nf(country = 'spain', capital = 'madrid', population = 1234560)\nf(country = 'turkey', capital = 'ankara', population = 1231233, altitude = 1100)","e867cd1d":"num1 = [1,2,3]\nnum2 = [i + 1 for i in num1 ]\ndecision = [print(\"doing ok\") if(len(num2)==3) else print(\"something is wrong!\")]\nprint(num2)","2824ae25":"**Flexible arguments with dictionary data type(how to use kwargs)**","40fb7f77":"**An example of Nested Function**","c3f9fe31":"**Built-in Scope**","3a2f2644":"**Local and Global Scope**","d09ad583":"**User defined function**","ef9dfea1":"**Flexible arguments *args**","39dc269e":"***Zip and Unzip***","ba2e116b":"**Lambda Function**","fa8981ad":"**Example of list comprehension**","1a0440ef":"**Iretation Process**"}}