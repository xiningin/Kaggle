{"cell_type":{"6a150b87":"code","36471969":"code","c7811546":"code","7e9bc0d1":"code","b7cfaecb":"code","e95ab9a9":"code","3d494384":"code","eb5eda63":"code","7bdc08b3":"markdown"},"source":{"6a150b87":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets, linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\npd.options.display.max_columns = None","36471969":"df = pd.read_csv('\/kaggle\/input\/apartments-in-volgograd-june-2020\/apartments_in_volgograd_june_2020.csv', sep='\\t', index_col=0)","c7811546":"df = df[~df['district'].isnull()]","7e9bc0d1":"df['district_1'] = (df['district'] == '\u0440-\u043d \u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439').astype(int)\ndf['district_2'] = (df['district'] == '\u0440-\u043d \u0421\u043e\u0432\u0435\u0442\u0441\u043a\u0438\u0439').astype(int)\ndf['district_3'] = (df['district'] == '\u0440-\u043d \u0414\u0437\u0435\u0440\u0436\u0438\u043d\u0441\u043a\u0438\u0439').astype(int)\ndf['district_4'] = (df['district'] == '\u0440-\u043d \u0412\u043e\u0440\u043e\u0448\u0438\u043b\u043e\u0432\u0441\u043a\u0438\u0439').astype(int)\ndf['district_5'] = (df['district'] == '\u0440-\u043d \u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0438\u0439').astype(int)\ndf['district_6'] = (df['district'] == '\u0440-\u043d \u0422\u0440\u0430\u043a\u0442\u043e\u0440\u043e\u0437\u0430\u0432\u043e\u0434\u0441\u043a\u0438\u0439').astype(int)\ndf['district_7'] = (df['district'] == '\u0440-\u043d \u041a\u0440\u0430\u0441\u043d\u043e\u043e\u043a\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u0438\u0439').astype(int)\ndf['district_8'] = (df['district'] == '\u0440-\u043d \u041a\u0440\u0430\u0441\u043d\u043e\u0430\u0440\u043c\u0435\u0439\u0441\u043a\u0438\u0439').astype(int)\ndf = df.drop(['district'], axis=1)","b7cfaecb":"X = df.drop(['price', 'address'], axis=1)\ny = df['price']\n\nX_train = X[:-20]\nX_test = X[-20:]\n\ny_train = y[:-20]\ny_test = y[-20:]","e95ab9a9":"regr = linear_model.LinearRegression()\nregr.fit(X_train, y_train)","3d494384":"y_pred = regr.predict(X_test)\n\nprint('Mean squared error: %.2f'% mean_squared_error(y_test, y_pred))\nprint('Coefficient of determination: %.2f'% r2_score(y_test, y_pred))","eb5eda63":"plt.scatter(X_train['area'], y_train,  color='black', alpha=0.3)\nplt.show()","7bdc08b3":"Deleting non-existent districts"}}