{"cell_type":{"23914e45":"code","f00bf1ff":"code","6ab22069":"code","d2efdbbe":"code","f61db316":"code","a1ed518e":"code","be2d3265":"code","27363bcb":"code","9a5e16fb":"code","a404370d":"code","6b605b99":"code","cf350989":"code","e7b20eaf":"code","68d3bc8c":"code","9a3a49e6":"code","8daae4a4":"code","f0f1f35a":"code","66932086":"code","32f5a8c9":"code","1a0437fd":"code","16e74d5c":"code","53efaf2d":"code","bee8a713":"code","ddb1bd45":"code","a40466fd":"code","9cf5dea9":"markdown","db6688d8":"markdown","c8017268":"markdown","a2149ca0":"markdown","569939e5":"markdown","c3752026":"markdown","bf4947cc":"markdown","25b6b0c6":"markdown","c724fe82":"markdown","efaf9497":"markdown","69e9c2a8":"markdown","6f94a7e9":"markdown"},"source":{"23914e45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f00bf1ff":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6ab22069":"train_df = pd.read_csv('..\/input\/santander-customer-satisfaction\/train.csv', encoding='latin-1')\ntest_df = pd.read_csv('..\/input\/santander-customer-satisfaction\/test.csv', encoding='latin-1')\nprint(train_df.shape)\nprint(test_df.shape)","d2efdbbe":"train_df.head()","f61db316":"train_df.info()","a1ed518e":"train_df.isnull().sum()","be2d3265":"train_df['TARGET'].value_counts()","27363bcb":"train_df.describe()","9a5e16fb":"train_df['var3'].value_counts()","a404370d":"train_df['var3'] = train_df['var3'].replace(-999999, 2)","6b605b99":"train_df = train_df.drop('ID', axis=1)\ntest_df = test_df.drop('ID', axis=1)","cf350989":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train_df.iloc[:, :-1], train_df.iloc[:, -1], test_size=0.2)","e7b20eaf":"from xgboost import XGBClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.feature_selection import SelectKBest, chi2, f_classif, VarianceThreshold\nfrom sklearn.decomposition import PCA","68d3bc8c":"pipeline = Pipeline([\n    ('vt', VarianceThreshold()),\n    ('skb', SelectKBest(f_classif, k=15)),\n    ('pca', PCA()),\n    ('xgb_clf', XGBClassifier())\n])","9a3a49e6":"params = {\n    'pca__n_components'         : [4, 5, 6, 7, 8, 9, 10, 11, 12],\n    'xgb_clf__learning_rate'    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30],\n    'xgb_clf__max_depth'        : [3, 4, 5, 6, 8, 10, 12, 15],\n    'xgb_clf__min_child_weight' : [1, 3, 5, 7],\n    'xgb_clf__gamma'            : [0.0, 0.1, 0.2 , 0.3, 0.4],\n    'xgb_clf__colsample_bytree' : [0.3, 0.4, 0.5 , 0.7]\n}","8daae4a4":"from sklearn.model_selection import RandomizedSearchCV\npipeline_RandomGrid = RandomizedSearchCV(estimator=pipeline, param_distributions=params,\n                                         cv=5, n_jobs=-1, scoring='roc_auc', n_iter=5)","f0f1f35a":"pipeline_RandomGrid.fit(X_train, y_train)","66932086":"pipeline_RandomGrid.best_estimator_","32f5a8c9":"print('Train AUC:', roc_auc_score(y_train, pipeline_RandomGrid.predict_proba(X_train)[:, 1]))\nprint('Test AUC:', roc_auc_score(y_test, pipeline_RandomGrid.predict_proba(X_test)[:, 1]))","1a0437fd":"from xgboost import plot_importance\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 8))\nplot_importance(pipeline_RandomGrid.best_estimator_['xgb_clf'], ax=ax, max_num_features=20, height=0.4)","16e74d5c":"X_train = train_df.iloc[:, :-1]\ny_train = train_df.iloc[:, -1]\nX_test = test_df\n\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)","53efaf2d":"preds = pipeline_RandomGrid.predict_proba(X_test)[:, 1]\npreds","bee8a713":"submission = pd.read_csv('..\/input\/santander-customer-satisfaction\/sample_submission.csv', encoding='latin-1')\nsubmission.head()","ddb1bd45":"submission.loc[:, 'TARGET'] = preds\nsubmission","a40466fd":"submission.to_csv('submission.csv', index=False)","9cf5dea9":"# Data preprocessing","db6688d8":"# Submission","c8017268":"Replace `-999999` with `2`.","a2149ca0":"# train_test_split","569939e5":"min of var3 is `-999999`, which means NaN or some exception value is replaced by `-999999`.","c3752026":"# Prediction","bf4947cc":"Total 370 features. Label is named `TARGET`.","25b6b0c6":"No missing values.","c724fe82":"All features are type of int64.","efaf9497":"Drop ID column.","69e9c2a8":"# Model","6f94a7e9":"# Feature importance"}}