{"cell_type":{"a21fdace":"code","c1ca05fe":"code","7739a6a6":"code","134450c8":"code","6c3c7231":"code","ef87e32e":"code","06afcce5":"code","56888555":"code","ddc1a9f4":"code","c038cb89":"code","2361d86a":"code","273fcdd8":"code","b97e4025":"code","d7e1666e":"code","0d69dc0d":"code","b989c51e":"markdown","bd00b4d9":"markdown","4e527a69":"markdown","e179eb72":"markdown","049a3313":"markdown","35f078db":"markdown"},"source":{"a21fdace":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c1ca05fe":"data = pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")\ndata.head()","7739a6a6":"data.drop([\"Time\"],inplace=True,axis=1)","134450c8":"data.Class.value_counts()","6c3c7231":"databalanced = data.sort_values(by=\"Class\")[-492*2:]\n#databalanced = data.sort_values(by=\"Class\") #for non-undersample","ef87e32e":"databalanced.Class.value_counts()","06afcce5":"databalanced.reset_index(inplace=True)\ndatabalanced.head()","56888555":"X = databalanced.iloc[:,2:-1]\n#X = databalanced.iloc[:,1:-1] #for non-undersample\ny = databalanced.iloc[:,-1]","ddc1a9f4":"from sklearn.preprocessing import MinMaxScaler, StandardScaler\n\n#mms = MinMaxScaler(feature_range=(0,1))\nmms = StandardScaler()\nx = mms.fit_transform(X)","c038cb89":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom seaborn import heatmap\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state = 6)","2361d86a":"from xgboost import XGBClassifier\nxgb = XGBClassifier()\nxgb.fit(x_train,y_train)\nypred = xgb.predict(x_test)\nheatmap(confusion_matrix(y_test,ypred),annot=True,cbar=False,fmt=\"1d\")\nplt.title(\"XGB Accuracy: {}\".format(accuracy_score(y_test,ypred)),fontsize=20)\nplt.show()","273fcdd8":"from tensorflow.keras.models import Sequential, model_from_json\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import Adam\nfrom kerastuner.tuners import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters\n\ndef build_model(hp):\n    model = Sequential()\n\n    model.add(Dense(hp.Int(\"first_dense\",min_value=8,max_value=1024,step=8),activation=\"relu\",input_dim=(x_train.shape[1])))\n    \n    for i in range(hp.Int(\"layers\",1,2)):\n        model.add(Dense(hp.Int(f\"{i}_dense\",min_value=8,max_value=1024,step=8),activation=\"relu\"))\n        \n    model.add(Dense(1,activation=\"tanh\"))\n\n    model.compile(loss=\"binary_crossentropy\",optimizer=Adam(lr=0.00005),metrics=[\"accuracy\"])\n    \n    return model\n\ntuntun = RandomSearch(build_model,max_trials=10,executions_per_trial=2,objective=\"val_accuracy\")\n\ntuntun.search(x=x_train,y=y_train,verbose=2,epochs=20,batch_size=2,validation_data=(x_test,y_test))","b97e4025":"print(tuntun.get_best_models()[0].summary())\nypred = tuntun.get_best_models()[0].predict_classes(x_test)\nheatmap(confusion_matrix(y_test,ypred),annot=True,cbar=False,fmt=\"1d\")\nplt.title(\"ANN Accuracy: {}\".format(accuracy_score(y_test,ypred)),fontsize=20)\nplt.show()","d7e1666e":"#let's test it\narc = tuntun.get_best_models()[0].to_json()\nmodel = model_from_json(arc)\n\nmodel.compile(loss=\"binary_crossentropy\",optimizer=Adam(lr=0.00005),metrics=[\"accuracy\"])\nmodel.fit(x_train,y_train,epochs=20,verbose=2,batch_size=2)","0d69dc0d":"ypred = model.predict_classes(x_test)\nheatmap(confusion_matrix(y_test,ypred),annot=True,cbar=False,fmt=\"1d\")\nplt.title(\"ANN Accuracy: {}\".format(accuracy_score(y_test,ypred)),fontsize=20)\nplt.show()","b989c51e":"# Preprocessing","bd00b4d9":"# XGBClassifier","4e527a69":"# Testing Best Model","e179eb72":"# Keras-Tuner","049a3313":"# Undersampling","35f078db":"# Splitting"}}