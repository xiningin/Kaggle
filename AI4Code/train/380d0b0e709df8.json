{"cell_type":{"cd9453cb":"code","5eb7384f":"code","473f6c7b":"code","11a98884":"code","a30ba3ff":"code","c80e0c30":"code","d033d20c":"code","1c33d174":"code","1fbae4d3":"code","83a98bc1":"code","d8218959":"code","ad5699b9":"code","29b08bed":"code","39611f96":"code","3163d8a9":"code","5de19f2b":"code","7908376d":"code","21688dbe":"code","562cf4d7":"code","0a8ce445":"code","3d5a340b":"code","35f02527":"code","667352ef":"code","ae023513":"code","116361cf":"markdown","9ef0032a":"markdown","a6c99c7f":"markdown","a353f0b3":"markdown","bb3da528":"markdown","7bbaade7":"markdown","5f8faa12":"markdown","6cfe30fd":"markdown","2706ead8":"markdown","d3cb22e5":"markdown","a22b3c55":"markdown","c2b923fc":"markdown","042ee39b":"markdown","811d766d":"markdown","59d476b8":"markdown","276a4fe3":"markdown"},"source":{"cd9453cb":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt","5eb7384f":"data = pd.read_csv(\"..\/input\/mushrooms.csv\")","473f6c7b":"data.head()","11a98884":"data.describe()","a30ba3ff":"#Let's discard \"veil-type\"\ndata = data.drop(['veil-type'], axis=1)","c80e0c30":"#Checking for missing values\ndata.isnull().sum()","d033d20c":"print(data.shape)\ndata.groupby('class').size()","1c33d174":"data = pd.get_dummies(data, drop_first=True)\ndata.head()","1fbae4d3":"y = data.iloc[:,0]\nX = data.iloc[:,1:]","83a98bc1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","d8218959":"import xgboost\nfrom sklearn import metrics\nfrom xgboost import XGBClassifier","ad5699b9":"xgb = XGBClassifier()\nxgb.fit(X_train, y_train)\ny_pred_xgb = xgb.predict(X_test)","29b08bed":"auc_roc_xgb = metrics.roc_auc_score(y_test,y_pred_xgb)\nprint(\"auc score = {}\".format(auc_roc_xgb))\nconfusion_matrix_xgb = metrics.confusion_matrix(y_test,y_pred_xgb)\nconfusion_matrix_xgb","39611f96":"#Plot\nxgboost.plot_importance(xgb)","3163d8a9":"#List\ndf_xgb = pd.DataFrame({'x': np.array(X.columns), 'y':xgb.feature_importances_})\ndf_xgb.sort_values('y', ascending=False)","5de19f2b":"from sklearn.linear_model import LogisticRegression","7908376d":"logit = LogisticRegression()\nlogit.fit(X_train, y_train)\ny_pred_log = logit.predict(X_test)","21688dbe":"auc_roc_log =metrics.roc_auc_score(y_test,y_pred_log)\nprint(\"auc score = {}\".format(auc_roc_log))\nconfusion_matrix_log = metrics.confusion_matrix(y_test,y_pred_log)\nconfusion_matrix_log","562cf4d7":"df_log = pd.DataFrame({'x': np.array(X.columns), 'beta':logit.coef_[0]})\ndf_log['OR'] = np.exp(df_log['beta'])\ndf_log","0a8ce445":"df_log[df_log['x'].str.contains(\"spore-print-color\")]","3d5a340b":"df_log[df_log['x'].str.contains(\"odor\")]","35f02527":"df_log[df_log['x'].str.contains(\"bruises\")]","667352ef":"df_log[df_log['x'].str.contains(\"gill-size\")]","ae023513":"df_log[df_log['x'].str.contains(\"gill-spacing\")]","116361cf":"The most important features when classifying if a mushroom is edible or not are:\n* spore-print-color\n* odor\n* bruises\n* gill-size\n* gill-spacing\n\n**In order to get an interpretation out of these features let's fit a logistic regression to the data. This, because Logit is a linear model and its interpretation is easier:**","9ef0032a":"***In this case the base corresponds to spore-print-color = buff. Given the OR's for the rest of colors we can conclude that the most dangerous colors for spore print are (in order of magnitude):***\n\n* Green\n* White\n* Chocolate","a6c99c7f":"***In this case the base corresponds to gill size = broad. Given the OR for gill size = narrow it is safer if a mushroom presents broad gill size than if it doesn't***","a353f0b3":"Logit performs almost as well as XGBoost and because of this we can safely interpret its results. \n\n**The coefficients of the logit regression can be used to calculate the Odds Ratio of each variable. In this case the Odds Ratio is calculated against the base (the dummy variable that was left out) and this happens to all features since they all are categorical.**","bb3da528":"The data contains 8124 observations evenly distributed across the two classes of mushrooms and 21 predictors (this will change once variables are converted to dummies)","7bbaade7":"Let's explore the data","5f8faa12":"**Let's check the OR (Odds Ratio) for the most important features found in the XGBoost model:\n\n**It is important to notice that a bigger OR corresponds to a bigger magnitude of the odds of having a \"success\". In this case this represents the chances of the mushroom being poisonous. So a bigger OR is an indication of danger.****","6cfe30fd":"After converting all variables to dummies, the response variable is 1 if mushroom is poisonous and 0 if not. In this case it is considered a \"success\" if the mushroom is indeed poisonous.\nNow let's separate the response variable from the predictors and create our train and test subsets:","2706ead8":"XGBoost model is able to perfectly classify is a mushroom is edible or not. Let's look at the most important features in this model:","d3cb22e5":"First we'll be using XGBoost to define a classification model and identify important features:","a22b3c55":"**In this notebook we will be applying classification techniques to the mushroom data. **\n\n**Aside from being able to properly classify if a mushroom is edible or not, the interpretation of the most relevenat features is briefly explained.**","c2b923fc":"***In this case the base corresponds to bruises = False. Given the OR for having bruises it is safer if a mushroom presents bruises than if it doesn't***\n","042ee39b":"By exploring the data it is easy to realize that:\n1. All variables are categorical\n2. The response variable \"class\" presents two categories only (edible and poisonous)\n3. \"veil-type\" only has one category so it does not provide any useful information for the classification procedure\n","811d766d":"The data doesn't exhibit missing values and since all the variables are categorical there is no need to take outliers into consideration","59d476b8":"***In this case the base corresponds to odor = almond. Given the OR's for the rest of odors we can conclude that the most dangerous odors are (in order of magnitude):***\n\n* Creosote\n* Pungent\n* Foul\n* Fishy\n* Spicy\n* Musty","276a4fe3":"***In this case the base corresponds to gill spacing = close. Given the OR for gill spacing = crowded it is safer if a mushroom presents crowded gill spacing than if it doesn't***\n"}}