{"cell_type":{"3e359bf3":"code","8bd0d9e7":"code","7bac6acd":"code","1b38eb29":"code","c178b94c":"code","e8fded14":"code","d88dbc7a":"code","6a47ee13":"code","8246d646":"code","658df037":"code","632a8a64":"code","72360c93":"code","31fafab1":"code","c0e7863c":"code","77918677":"code","b2fedad1":"code","0dbbb500":"code","6480a34e":"code","b0587228":"code","73fc5be3":"code","5c5ee974":"code","4ff233cc":"code","eee94e4c":"markdown","2aa35383":"markdown","a5423b11":"markdown","a79f459d":"markdown","93c1a849":"markdown","3d41d3a7":"markdown","a4ee8f4a":"markdown","f43f6b6c":"markdown","43d8771c":"markdown","49279cf6":"markdown","0a0fffce":"markdown","8fc52c33":"markdown","9bb9c545":"markdown","40ed48ce":"markdown","6e4b99ad":"markdown","aedbe9ee":"markdown"},"source":{"3e359bf3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","8bd0d9e7":"df_stars= pd.read_csv('..\/input\/star-dataset\/6 class csv.csv')\ndf_stars","7bac6acd":"df_stars['Star color'].value_counts()","1b38eb29":"df_stars['Spectral Class'].value_counts()","c178b94c":"figure= plt.figure(figsize=(10,10))\nsns.heatmap(df_stars.corr(), annot=True)\n\n","e8fded14":"figure= plt.figure(figsize=(10,10))\nsns.distplot(df_stars['Temperature (K)'])","d88dbc7a":"figure= plt.figure(figsize=(20,10))\nsns.boxenplot(x='Star color',y='Temperature (K)',data=df_stars)","6a47ee13":"figure= plt.figure(figsize=(20,10))\nsns.boxenplot(x='Spectral Class',y='Luminosity(L\/Lo)',data=df_stars,palette='winter')","8246d646":"sns.jointplot(x='Absolute magnitude(Mv)',y='Temperature (K)',data=df_stars, kind='hex')","658df037":"sns.lmplot(x='Luminosity(L\/Lo)',y='Temperature (K)',data=df_stars)","632a8a64":"Spectral = pd.get_dummies(df_stars['Spectral Class'],drop_first=True)\ndf_stars.drop('Spectral Class',axis=1,inplace=True)","72360c93":"df_stars = pd.concat([df_stars,Spectral],axis=1)\n","31fafab1":"df_stars=df_stars.drop('Star color',axis=1)","c0e7863c":"df_stars.head()","77918677":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df_stars.drop('Star type',axis=1),df_stars['Star type'],test_size=0.30,random_state=101)","b2fedad1":"from sklearn.tree import DecisionTreeClassifier\ndtree= DecisionTreeClassifier()\ndtree.fit(X_train,y_train)\npredictions= dtree.predict(X_test)\n","0dbbb500":"from sklearn.metrics import classification_report,confusion_matrix\nprint(confusion_matrix(y_test,predictions))\nprint('__________________________________________________________________________')\nprint(classification_report(y_test,predictions))","6480a34e":"!pip install --upgrade scikit-learn==0.20.3","b0587228":"# Libraries importing\nfrom IPython.display import Image\nfrom sklearn.externals.six import StringIO\nfrom sklearn.tree import export_graphviz\nimport pydot","73fc5be3":"# preparing for export_graphviz method\ndf_feat=df_stars.drop('Star type',axis=1)\nfeatures= list(df_feat.columns)\n","5c5ee974":"dot_data=StringIO()\nexport_graphviz(dtree,out_file=dot_data,feature_names=features,filled=True,rounded=True,)","4ff233cc":"#Visualize the tree in image\ngraph = pydot.graph_from_dot_data(dot_data.getvalue())  \nImage(graph[0].create_png())\n","eee94e4c":"# Journey to discove star type from this beutiful dataset \n## I will use decision tree to predict star type and in this notebook I will visualise the tree in png image.\n## Hope you enjoy the journey as much as I did!","2aa35383":"## 3- Data prepration :\n### As I mentioned before we have to prepare the data and get dummy values from Spectral column","a5423b11":"## b- Distributon of the temprature","a79f459d":"## a- showing correlation between variables.","93c1a849":"## 4- Classification model \"Decision Tree\" :","3d41d3a7":"Sources1: [What is Decision tree](https:\/\/medium.com\/greyatom\/decision-trees-a-simple-way-to-visualize-a-decision-dc506a403aeb)\n\nSource2: [How to visualize a decision-tree](https:\/\/towardsdatascience.com\/how-to-visualize-a-decision-tree-in-5-steps-19781b28ffe2)","a4ee8f4a":"## c- Temprature and star color : _highest temp of orange blue!_","f43f6b6c":"# 5- visualization Dtree\n### By importing StringIO from sklearn.externals.six, but unfortunately it removed from sklearn 23 so I will upgard sklearn to 20.3","43d8771c":"## 2-Data visualization & EDA","49279cf6":"## 1- Importing libraries and data","0a0fffce":"## f-Linear model plot, Luminosity with temprature:","8fc52c33":"## d- Spectral class with Luminosity : _the highest luminosity is O class_","9bb9c545":"## e- Hex join plot, Absolute magnitude with temprature:","40ed48ce":"### Here in spectral class I can transform it into columns by dummies method from pandas, unlike star color columns!","6e4b99ad":"### A decision tree is a flowchart-like structure in which each internal node represents a \u201ctest\u201d on an attribute (e.g. whether a coin flip comes up heads or tails), each branch represents the outcome of the test, and each leaf node represents a class label (decision taken after computing all attributes). The paths from root to leaf represent classification rules.\n\n","aedbe9ee":"## The final Decision tree!"}}