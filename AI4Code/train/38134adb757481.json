{"cell_type":{"755ea286":"code","a1dbff11":"code","81155125":"code","961f244f":"code","5c89968f":"code","799606a5":"code","262abb76":"code","eba599ca":"code","42d139ab":"code","f92debba":"code","17e3079c":"code","2eb6c01f":"code","85a12520":"code","b5377c30":"code","25b1fb5c":"code","b054b74c":"code","e106f30b":"code","957f6458":"code","cbdfe847":"code","7d620e9b":"code","47876443":"markdown","c782cb8c":"markdown","14559074":"markdown","702a45ca":"markdown","656f8e99":"markdown","d2812f42":"markdown","f3b529d3":"markdown","9b86286e":"markdown","7c3a43d8":"markdown","a7384030":"markdown","d6ace018":"markdown","9349604e":"markdown","9e8026a2":"markdown","c3b89f12":"markdown","5624d88c":"markdown"},"source":{"755ea286":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a1dbff11":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","81155125":"xdf = pd.read_csv('\/kaggle\/input\/icc-odi-batting-figures-1971-to-2019\/ICC ODI Batting 2589.csv', engine = 'python')\nxdf.head()","961f244f":"split1 = xdf.Player.str.split('([()])',expand=True)\nsplit1 = pd.DataFrame(split1)\nsplit1.columns = ['Name','z','Country','c','v','b','n','m','l']\nsplit1 = split1[['Name', 'Country']]\n","5c89968f":"xdf['Name'] = split1.Name\nxdf['Country'] = split1.Country","799606a5":"# xdf['Name'] = xdf['Name'].replace(u'\\xa0', u'')\n# xdf.head()","262abb76":"xdf = xdf[(xdf[['Inns', 'NO', 'Runs', 'HS', 'Ave','BF', 'SR', '100', '50', '0']] != '-').all(axis=1)]\nxdf.head()","eba599ca":"xdf['Country'].unique()","42d139ab":"xdf[xdf['Country'].str.contains('1')]","f92debba":"xdf[xdf['Country'].str.contains('3')]","17e3079c":"xdf['Country'] = xdf['Country'].replace('1','PAK',regex=True)\nxdf['Country'] = xdf['Country'].replace('3','UAE',regex=True)","2eb6c01f":"xdf['Country'].unique()","85a12520":"ctry_name = { 'INDIA' : 'India', 'Asia\/ICC\/INDIA' : 'India', 'Asia\/INDIA' : 'India', \n              'Asia\/ICC\/SL' : 'Sri Lanka', 'SL' : 'Sri Lanka', 'Asia\/SL' : 'Sri Lanka', \n              'AUS\/ICC' : 'Australia', 'AUS' : 'Australia', \n              'Asia\/PAK' : 'Pakistan', 'PAK' : 'Pakistan', 'Asia\/ICC\/PAK': 'Pakistan', 3 : 'Pakistan',\n              'Afr\/ICC\/SA' : 'South Africa', 'Afr\/SA' : 'South Africa', 'SA' : 'South Africa','ICC\/SA': 'South Africa',\n              'ICC\/WI' : 'West Indies', 'WI' : 'West Indies', \n              'NZ' : 'New Zeland', 'ICC\/NZ' : 'New Zeland',\n              'BDESH' : 'Bangladesh', 'Asia\/BDESH' : 'Bangladesh', \n              'ENG' : 'England',\n              'ENG\/ICC' : 'England',\n              'Afr\/ZIM' : 'Zimbwabe', 'ZIM' : 'Zimbwabe', \n              'Afr\/KENYA' : 'Kenya', 'KENYA' : 'Kenya',\n              'IRE' : 'Ireland',\n              'AFG' : 'Afghanistan',\n              'SCOT' : 'Scotland', \n              'CAN' : 'Canada',\n              'NL' : 'Netherlands',\n              'HKG' : 'Hongkong', \n              'BMUDA' : 'Bermuda',\n              'PNG' : 'Papua New Guinea',\n              'OMAN' : 'Oman',\n              'NAM' : 'Namibia', \n              'NEPAL' : 'Nepal',\n              'USA' : 'USA', \n              'UAE' : 'UAE', 1 : 'UAE',\n              'EAf' : 'East Africa',\n              'ENG\/IRE' : 'ENG\/IRE', \n              'AUS\/NZ' : 'AUS\/NZ', \n              'AUS\/SA' : 'AUS\/SA', \n              'USA\/WI' : 'USA\/WI', \n              'ENG\/PNG' : 'ENG\/PNG', \n              'ENG\/SCOT' : 'ENG\/SCOT', \n              'CAN\/WI' : 'CAN\/WI', \n              'HKG\/NZ' : 'HKG\/NZ',\n              'NL\/SA' : 'NL\/SA',\n              'SA\/USA' : 'SA\/USA'\n             }","b5377c30":"ctnt_name = { 'India': 'Asia', \n              'Sri Lanka': 'Asia', \n              'Australia' : 'Australia', \n              'Pakistan': 'Asia',\n              'South Africa' : 'Africa',\n              'West Indies': 'America', \n              'New Zeland': 'Australia',\n              'Bangladesh': 'Asia', \n              'England': 'Europe',\n              'Zimbwabe': 'Africa', \n              'Kenya': 'Africa',\n              'Ireland': 'Europe',\n              'Afghanistan': 'Asia',\n              'Scotland': 'Europe', \n              'Canada': 'America',\n              'Netherlands': 'Europe',\n              'Hongkong': 'Asia', \n              'Bermuda': 'America',\n              'Papua New Guinea': 'Australia',\n              'Oman': 'Asia',\n              'Namibia' : 'Africa', \n              'Nepal': 'Asia',\n              'USA': 'America', \n              'UAE': 'Asia',\n              'East Africa': 'Africa',\n              'ENG\/IRE': 'Europe', \n              'AUS\/NZ': 'Australia', \n              'AUS\/SA': 'Mixed', \n              'USA\/WI': 'America', \n              'ENG\/PNG': 'Mixed', \n              'ENG\/SCOT': 'Europe', \n              'CAN\/WI': 'America', \n              'HKG\/NZ': 'Mixed',\n              'NL\/SA': 'Mixed',\n              'SA\/USA': 'Mixed'\n             }","25b1fb5c":"xdf['Nation'] = xdf['Country'].map(ctry_name)\nxdf['Continent'] = xdf['Nation'].map(ctnt_name)","b054b74c":"xdf.isnull().sum()","e106f30b":"xdf = xdf[['Name', 'Nation', 'Continent', 'Span', 'Mat', 'Inns', 'NO', 'Runs', 'HS', 'Ave', 'BF', 'SR', '100', '50', '0', ]]\nxdf.head()","957f6458":"\nfig = plt.figure()\nsns.set(style='darkgrid')\nsns.set(rc={'figure.figsize':(20.7, 15.27)})\nsns.countplot(x = 'Nation', data = xdf, order = xdf['Nation'].value_counts().index)\nplt.xticks(rotation = 90)\nplt.show()","cbdfe847":"fig = plt.figure()\nsns.set(style='darkgrid')\nsns.set(rc={'figure.figsize':(16.7, 12.27)})\nsns.countplot(x = 'Continent', data = xdf, order = xdf['Continent'].value_counts().index)\nplt.xticks(rotation = 90)\nplt.show()","7d620e9b":"xdf.iloc[0:1, :1]\n","47876443":"Since we split the player name and country using braces '()'. It happens to be that 2 players have braces with numbers and then the country for which they are playing. WE\n","c782cb8c":"We saw that there are multiple\/duplicate entries for Country, We'll use mapping to assign the duplicated names to original Nation. I had to use Google to figure out what some countries like \"EAf\", \"PNG\" meant.\n\nSince we are creating a new column for countries represented, Lets also map the countries to thier respeective continents and this migt be helpful for bettter analysis. I Googled up continents for some countries to verify and validate. Papa New Guinea actually belongs to Asia and Australia, I assigned it to Australia anyway since most of its territory lies towards Australia.","14559074":"Lets see the total number of countries that have played cricket since 1970, We see there are many countries that have\/still are playing cricket. \nThere are multiple entries for same country like:\n> 'INDIA', 'Asia\/INDIA', 'Asia\/ICC\/INDIA', \n\nAlso notice that there are 2 numbers (1 and 3). lets see why there are those 2 numbers in the data.","702a45ca":"Since most of the countries playing Cricket are from Asian subcontinent it holds the most number of player participation when we group the data continent wise.","656f8e99":"When you see the \"Name\" column, there is a special character at the end of each player's name, The special character is \"\\xa0\". I couldn't find a proper solution to remove the special character.\n\n> \\xa0 is actually non-breaking space in Latin1 (ISO 8859-1), also chr(160). (Stack Overflow)\n> \n","d2812f42":"Asif Iqbal belongs to UAE but listed as 1 and Mohammed Nawaz who belongs to Pakistan is listed as 3. We will replace those numbers with the country they belong to.","f3b529d3":"We see that there are no null values in the dataset. There are rows with \"0\" but they hold significance in our dataset. We then filter out the columns that are essential for analysis.","9b86286e":"While reading the data, I used *engine = 'python'* because you get *UnicodeDecodeError* if you read the csv file in normal way. I searched up solution using python as engine fixed that error.","7c3a43d8":"Lets start our analysis with some basic vizualisations!\n\nHere we try to find the most number of players who have represented a particular Country. As expected England has most number of players since the data starts way back from 1970 and England used to play lot of cricket since that time period.","a7384030":"Will be back with interesting analysis.","d6ace018":"We merge\/concat the 2 splitted columns into original dataframe.","9349604e":"Since some of the rows have no stats about the players, they are marked with - symbol. We'll get rid of those rows as they won't be of much use for our analysis.","9e8026a2":"About this Dataset (From the uploader)\n\n\nOne Day International\nA One Day International (ODI) is a form of limited overs cricket, played between two teams with international status, in which each team faces a fixed number of overs, usually 50. The Cricket World Cup, generally held every four years, is played in this format. One Day International matches are also called Limited Overs Internationals (LOI), although this generic term may also refer to Twenty20 International matches. They are major matches and considered the highest standard of List A, limited overs competition.\n\nThe international one day game is a late-twentieth-century development. The first ODI was played on 5 January 1971 between Australia and England at the Melbourne Cricket Ground. When the first three days of the third Test were washed out officials decided to abandon the match and, instead, play a one-off one day game consisting of 40 eight-ball overs per side. Australia won the game by 5 wickets. ODIs were played in white coloured kits with a red coloured ball.\n\nIn the late 1970s, Kerry Packer established the rival World Series Cricket competition, and it introduced many of the features of One Day International cricket that are now commonplace, including coloured uniforms, matches played at night under floodlights with a white ball and dark sight screens, and, for television broadcasts, multiple camera angles, effects microphones to capture sounds from the players on the pitch, and on-screen graphics. The first of the matches with coloured uniforms was the WSC Australians in wattle gold versus WSC West Indians in coral pink, played at VFL Park in Melbourne on 17 January 1979. This led not only to Packer's Channel 9 getting the TV rights to cricket in Australia but also led to players worldwide being paid to play, and becoming international professionals, no longer needing jobs outside cricket. Matches played with coloured kits and a white ball became more commonplace over time, and the use of white flannels and a red ball in ODIs ended in 2001.\n\nThe Data consists of runs scored by the batsmen from 1971 to 2020 January 19.\n\nIncludes the following current or recent One-Day Internationals:\n\nIndia v Australia at Bengaluru, 3rd ODI, Jan 19, 2020 [ODI # 4233]\n\nIndia v Australia at Rajkot, 2nd ODI, Jan 17, 2020 [ODI # 4232]\n\nIndia v Australia at Mumbai, 1st ODI, Jan 14, 2020 [ODI # 4231]","c3b89f12":"Importing the necessary libraries...","5624d88c":"First we split the Name and the Nation the player is representing from the \"Player\" column.\nAfter this the Player Name (Name) and Country are made as 2 separate dataframes. We also see that there are multiple entries for Country, we'll fix that below using mapping."}}