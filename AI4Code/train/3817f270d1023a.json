{"cell_type":{"8d2a2724":"code","193dc317":"code","efcb88f7":"code","207410f4":"code","323e5b5a":"code","490b9741":"code","8d299767":"code","03b787ef":"code","d590a2d5":"code","25bab9d0":"markdown","e737c654":"markdown","2ce1c8de":"markdown"},"source":{"8d2a2724":"!pip install -q -U mljar-supervised","193dc317":"import numpy as np\nimport pandas as pd\nfrom supervised.automl import AutoML # mljar-supervised","efcb88f7":"train = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/test.csv\")","207410f4":"# code from -> https:\/\/www.kaggle.com\/alexryzhkov\/tps-april-21-lightautoml-starter\ndef converter(x):\n    spl = str(x).strip().split()[-1]\n    try:\n        return float(x)\n    except:\n        return np.nan   \n    \ndef create_extra_features(data):\n    data['Ticket_type'] = data['Ticket'].map(lambda x: str(x)[:3].replace('.', '').replace('\/', '').replace(' ', '').strip() if len(str(x).split()) > 1 else np.nan)\n    data['Ticket_len'] = data['Ticket_type'].str.len()\n    data['Ticket_number'] = data['Ticket'].map(converter)\n    \n    data['Cabin_type'] = data['Cabin'].map(lambda x: str(x)[0] if str(x) != 'nan' else np.nan)\n    data['Cabin_number'] = data['Cabin'].map(lambda x: float(str(x)[1:]) if str(x) != 'nan' else np.nan)\n    \n    data['Fixed_Name'] = data['Name'].map(lambda x: x.split(', ')[1])\n    data['FamilySize'] = data['SibSp'] + data['Parch'] + 1\n    \n    data['CategoricalTicket'] = pd.qcut(data['Ticket_number'], 20).astype(str)\n    data['CategoricalCabin'] = pd.qcut(data['Cabin_number'], 20).astype(str)\n    data['CategoricalFare'] = pd.qcut(data['Fare'], 20).astype(str)\n    data['CategoricalAge'] = pd.qcut(data['Age'], 20).astype(str)\n    return data\n\ntrain = create_extra_features(train)\ntest = create_extra_features(test)","323e5b5a":"train.head()","490b9741":"x_cols = train.columns[2:].tolist()\nx_cols.remove('Name')\nx_cols.remove('Ticket')\ny_col = \"Survived\"","8d299767":"automl = AutoML(\n    mode=\"Optuna\", \n    optuna_time_budget=1200,\n    eval_metric=\"f1\",\n    total_time_limit=48*3600,\n    validation_strategy={\n        \"validation_type\": \"kfold\",\n        \"k_folds\": 5\n    },\n    random_state=2021\n)\nautoml.fit(train[x_cols], train[y_col])","03b787ef":"preds = automl.predict(test[x_cols])\nsubmission = pd.DataFrame({'PassengerId':test.iloc[:,0], 'Survived': preds})\nsubmission.to_csv('1_submission.csv', index=False)","d590a2d5":"automl.report()","25bab9d0":"# MLJAR - Machine Learning with Joy And Relax :)\n\nMLJAR GitHub: https:\/\/github.com\/mljar\/mljar-supervised\n\n<img src=\"https:\/\/raw.githubusercontent.com\/mljar\/visual-identity\/main\/media\/kaggle_banner_white.png\" style=\"width: 80%;\"\/>","e737c654":"Additional features are from:\n\nhttps:\/\/www.kaggle.com\/alexryzhkov\/tps-april-21-lightautoml-starter","2ce1c8de":"# Thank you!\n\n<img src=\"https:\/\/raw.githubusercontent.com\/mljar\/visual-identity\/main\/media\/robot_academy.png\" style=\"width: 40%;\"\/>\n"}}