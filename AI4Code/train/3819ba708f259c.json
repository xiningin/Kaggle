{"cell_type":{"7e789754":"code","0aca8868":"code","fcdd3922":"code","0b61d289":"code","eeefcfbb":"code","533f6e60":"code","e6f9aa4e":"code","314f299c":"code","5b0072d3":"code","ca8909fb":"code","cc4a83be":"code","464e6f5c":"code","6b3b3097":"code","ac52c3b8":"code","9329a549":"code","5b9c5d7d":"code","21a8f1a9":"code","ff1fcfd0":"code","5af5132e":"code","5fb9961a":"code","9c670590":"code","e870d00b":"code","920059ff":"code","43c5ca67":"code","2d619c86":"code","bd272980":"code","7201598c":"code","6c65d6f5":"code","09975e08":"code","52991ece":"code","bec103c6":"code","169f215c":"markdown","b2294659":"markdown","9b51b8ac":"markdown","1570c7c9":"markdown","bb986b38":"markdown","f1222772":"markdown","b09c029c":"markdown","0b1fe421":"markdown","28940608":"markdown"},"source":{"7e789754":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0aca8868":"import re\nimport matplotlib.pyplot as plt\nimport numpy as np","fcdd3922":"os.getcwd()","0b61d289":"os.chdir('\/kaggle\/input\/chai-time-data-science\/')","eeefcfbb":"thumbnail_types = pd.read_csv('Anchor Thumbnail Types.csv')\nthumbnail_types.head()","533f6e60":"thumbnail_types.shape","e6f9aa4e":"description = pd.read_csv('Description.csv')\ndescription.shape","314f299c":"description.head()","5b0072d3":"# Total Episodes \ndescription['episode_id'].nunique()","ca8909fb":"description['description'][1]","cc4a83be":"! pip install contractions","464e6f5c":"import contractions","6b3b3097":"def extracting_links(text):\n    text = re.sub(r'\\n',' ',text)\n    # Getting URLS present in the description of the episode\n    l = re.findall(r'http[s]*:\/\/[a-zA-Z0-9.\/-]+',text)\n    return l\n    \n    ","ac52c3b8":"description['links']= description['description'].apply(lambda x : extracting_links(x))","9329a549":"def cleaning_description(text):\n    # Substituting \\n with a space \n    text = re.sub(r'\\n',' ',text)\n    # Cleaning URLS present in the description of the episode\n    text = re.sub(r'http[s]*:\/\/[a-zA-Z0-9.\/-]+','',text)\n    # Converting text to lower case \n    text = text.lower()\n    # Expanding Contractions eg. i'll to I will \n    text = contractions.fix(text)\n    return text","5b9c5d7d":"description['description'] = description['description'].apply(lambda x : cleaning_description(x))","21a8f1a9":"description.head()","ff1fcfd0":"youtube_thumbnail = pd.read_csv('YouTube Thumbnail Types.csv')\nyoutube_thumbnail.shape","5af5132e":"youtube_thumbnail.head()","5fb9961a":"episodes = pd.read_csv('Episodes.csv')\nepisodes.shape","9c670590":"episodes.head()","e870d00b":"episodes.columns","920059ff":"episodes.isnull().sum()","43c5ca67":"episodes['heroes'].unique()","2d619c86":"sns.countplot(episodes['heroes_gender'])","bd272980":"plt.figure(figsize=(15,7))\nsns.countplot(episodes['heroes_nationality'])","7201598c":"episodes_sorted = episodes.sort_values('youtube_subscribers',ascending=False).reset_index(drop= True)","6c65d6f5":"plt.figure(figsize=(12,19))\nsns.barplot(episodes_sorted['youtube_subscribers'],episodes_sorted['heroes'])","09975e08":"episodes_sorted['heroes'][:10]","52991ece":"sns.countplot(episodes['category'])","bec103c6":"sns.countplot(episodes['category'],hue=episodes['heroes_gender'])","169f215c":"### This concludes Thumbnail type has only 4 major categories","b2294659":"### Check for the NaN values in the episodes dataframe","9b51b8ac":"### A count analysis on the heroes_nationality","1570c7c9":"### Let's count for the gender of the heroes interviewed","bb986b38":"### Top Ten Heroes based on the number of Youtube Subscribers ","f1222772":"### Count of heroes for each category","b09c029c":"## Segregating Description and links from description dataframe as well as cleaning Description of episodes","0b1fe421":"### Sorting Episodes by the number of youtube subscribes each heroes have","28940608":"### Analysing the category of the heroes gender-wise"}}