{"cell_type":{"df0bb980":"code","3cbe9b27":"code","fe0869d9":"code","71480103":"code","ac2ac7e9":"code","8a37944d":"code","1f05d407":"code","f240ca7b":"code","b4e910f8":"code","ab38c39f":"code","48331030":"code","b5d4c8fa":"code","eacb4513":"code","179ff7a8":"code","e5244203":"code","57da8058":"code","1d36032e":"code","1e4800b6":"code","175c8401":"code","275e3bd6":"code","18df02e3":"code","407b3d32":"code","d5a03d60":"code","0ed3ba0a":"code","0d2cf71e":"code","6eacecc4":"code","6afbbc8d":"code","2e4f2bbf":"code","ba89ed98":"code","f8e3a27e":"code","754ea023":"code","7dcc571e":"code","31d52ad0":"code","798b8114":"code","bc3ae8a3":"code","aed98388":"code","7fc148c1":"code","2898b907":"code","4666a443":"code","fd31729d":"code","8be66751":"code","e1f6a5bb":"code","197a15af":"code","6e61a103":"code","755fdbd6":"code","68156d9d":"code","a1736709":"code","1c755872":"code","9289c089":"code","169f76ac":"code","957b9df5":"code","df3e7145":"code","90ae6f51":"code","5ca012de":"code","85e8b712":"code","25dbaca2":"markdown","55856883":"markdown","9fd896f9":"markdown","d5ead30e":"markdown","f38a3033":"markdown","d261ea62":"markdown","b175d790":"markdown"},"source":{"df0bb980":"#import essential libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","3cbe9b27":"#import from sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix","fe0869d9":"#reading data from csv using pandas\ndata = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")\ndata.head(10)","71480103":"data.shape\n#to see how many rows and columns we have in table","ac2ac7e9":"data.info()","8a37944d":"sns.distplot(data[\"target\"])\ndata[\"target\"].value_counts()","1f05d407":"#too see data having null values or not#in way to see any missing values.\nprint(\"Data Sum of Null Values\\n\")\ndata.isnull().sum()\n","f240ca7b":"null = data.isnull()\nnull","b4e910f8":"#the seaborn heatmap shows the clear view off entire dataset that theres no null\nsns.heatmap(null)","ab38c39f":"sns.distplot(data[\"age\"], color= \"red\" )\nplt.title(\"ploting of age feature\")\n#visulize data as per age","48331030":"#to find minimum and maximum ages\nminAge =min(data[\"age\"])\nmaxAge =max(data[\"age\"])\navgAge = (data[\"age\"]).mean()\nprint(\"Minimum age:\",minAge)\nprint(\"Maximum age:\",maxAge)\nprint(\"Average age:\",avgAge)","b5d4c8fa":"#we can also understand data into age catagries \nYoung_age = data[(data.age>=29)&(data.age<40)]\nMeddle_age = data[(data.age>=40)&(data.age<55)]\nElderly_age = data[(data.age>55)]","eacb4513":"print(\"Young age people:\",len(Young_age))\nprint(\"Meddle age people:\",len(Meddle_age)) \nprint(\"Elderly age people\",len(Elderly_age)) ","179ff7a8":"sns.barplot(x = [\"Young ages\",\"Meddle Ages\",\"Elderly ages\"], y =[len(Young_age),len(Meddle_age),len(Elderly_age)], color = \"red\")","e5244203":"f,ax=plt.subplots(1,2,figsize=(10,6))\ndata[\"target\"].value_counts().plot.pie(ax = ax[0],autopct='%1.1f%%')\nsns.countplot('target',data=data,ax=ax[1],order=data['sex'].value_counts().index)","57da8058":"f,ax=plt.subplots(1,2,figsize=(10,6))\ndata[\"sex\"].value_counts().plot.pie(ax = ax[0],autopct='%1.1f%%')\nsns.countplot('sex',data=data,ax=ax[1],order=data['sex'].value_counts().index)\nplt.title(\"heart disease by sex\")","1d36032e":"#cheast pain types\nf,ax=plt.subplots(1,2,figsize=(10,6))\ndata[\"cp\"].value_counts().plot.pie(ax = ax[0],autopct='%1.1f%%',explode = [0,0.05,0.05,0.05])\nsns.countplot('cp',data=data,ax=ax[1],order=data['sex'].value_counts().index)\nplt.title(\"by type of chest pain\")","1e4800b6":"#plot the target variable\n#with the displot visulization we can see the average age of people suuffering from heart disease","175c8401":"sns.countplot(data[\"target\"])\n#where 0 shows that no heart attack and 1 shows that having an heart attack","275e3bd6":"fig, axes = plt.subplots( nrows=5, ncols=3, figsize=(15,40) )\nplt.subplots_adjust( wspace=0.20, hspace=0.20, top=0.97 )\nplt.suptitle(\"Heart Disease Dataset\", fontsize=20)\n\naxes[0,0].hist(data.age)\naxes[0,0].set_xlabel(\"age(years)\")\naxes[0,0].set_ylabel(\"age(Number of Patients)\")\n\naxes[0,1].hist(data.sex)\naxes[0,1].set_xlabel(\"Sex(male = 1,female = 0)\")\naxes[0,1].set_ylabel(\"Sex(Number of Patients)\")\n\naxes[0,2].hist(data.cp)\naxes[0,2].set_xlabel(\"cp(type of chest pain)\")\naxes[0,2].set_ylabel(\"cp(Number of Patients)\")\n\naxes[1,0].hist(data.trestbps)\naxes[1,0].set_xlabel(\"trestbps(rest blood pressure)\")\naxes[1,0].set_ylabel(\"trestbp(Number of Patients)\")\n\naxes[1,1].hist(data.chol)\naxes[1,1].set_xlabel(\"chol(cholestrol level)\")\naxes[1,1].set_ylabel(\"chol(Number of Patients)\")\n\n\naxes[1,2].hist(data.fbs)\naxes[1,2].set_xlabel(\"fbs(fasting blood sugure)\")\naxes[1,2].set_ylabel(\"fbs(Number of Patients)\")\n\n\naxes[2,0].hist(data.restecg)\naxes[2,0].set_xlabel(\"restecg(Resting electrocardiology)\")\naxes[2,0].set_ylabel(\"restecg(Number of Patients)\")\n\naxes[2,1].hist(data.thalach)\naxes[2,1].set_xlabel(\"thalach(maximum heart rate achieved)\")\naxes[2,1].set_ylabel(\"thalach(Number of Patients)\")\n\naxes[2,2].hist(data.exang)\naxes[2,2].set_xlabel(\"exang(Exercise Inducing Angina)\")\naxes[2,2].set_ylabel(\"exang(Number of Patients)\")\n\naxes[3,0].hist(data.oldpeak)\naxes[3,0].set_xlabel(\"oldpeak(Exercise Include Depression)\")\naxes[3,0].set_ylabel(\"oldpeak(Number of Patients)\")\n\naxes[3,1].hist(data.slope)\naxes[3,1].set_xlabel(\"slope(slope of peak Exerice ST segment)\")\naxes[3,1].set_ylabel(\"slope(Number of Patients)\")\n\naxes[3,2].hist(data.ca)\naxes[3,2].set_xlabel(\"ca(major vessies colored by FLurosocopy)\")\naxes[3,2].set_ylabel(\"ca(Number of Patients)\")\n\naxes[4,0].hist(data.thal)\naxes[4,0].set_xlabel(\"thal\")\naxes[4,0].set_ylabel(\"thal(Number of Patients)\")\n\naxes[4,1].hist(data.target)\naxes[4,2].axis(\"off\")\n","18df02e3":"#plot an correlation using seaborn ","407b3d32":"corr = data.corr()\ncorr\n#correlation between features","d5a03d60":"plt.figure(figsize =(20,15))\nsns.heatmap(corr,annot= True)","0ed3ba0a":"#by analysing the positive and negative values we can understand the correlation between\n# how positivalues and negativevalues have affect on each other in  feature.","0d2cf71e":"#select the dependent and independent fetaures\n#the target we have is independent features","6eacecc4":"X = data.drop(\"target\",axis = 1)","6afbbc8d":"#dependent feature \nX","2e4f2bbf":"#independent feature\ny = data[\"target\"]\ny","ba89ed98":"#now we have we have to create both training data and independent ","f8e3a27e":"X_train,X_test,y_train,y_test =  train_test_split(X,y,test_size = 0.2,random_state = 0)","754ea023":"#the model we are imported #from sklearn.ensemble import RandomForestClassifier","7dcc571e":"random_forest = RandomForestClassifier(n_estimators=100)\n#fit the training parameter we created\nrandom_forest.fit(X_train,y_train)\nY_prediction = random_forest.predict(X_test)\nrandom_forest.score(X_train,y_train)","31d52ad0":"print(classification_report(y_test,Y_prediction))","798b8114":"print(confusion_matrix(y_test,Y_prediction))","bc3ae8a3":"#we can plot the confusion matrix in heatmap","aed98388":"sns.heatmap(confusion_matrix(y_test,Y_prediction),annot= True)","7fc148c1":"#feature importance in random forest","2898b907":"feat_importances = pd.Series(random_forest.feature_importances_,index= X.columns) \nfeat_importances.nlargest(15).plot(kind = \"barh\")","4666a443":"from sklearn.preprocessing import StandardScaler","fd31729d":"#giving dependent variable\nscaler = StandardScaler()\nscaler.fit(X)","8be66751":"data_scaled = scaler.transform(X)\ndata.columns","e1f6a5bb":"final_data = pd.DataFrame(data_scaled,columns = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach',\n       'exang', 'oldpeak', 'slope', 'ca', 'thal'])\n#not adding independent feature","197a15af":"final_data.head()\n#just for understanding ","6e61a103":"data.target\n#the test  data","755fdbd6":"from sklearn.neighbors import KNeighborsClassifier","68156d9d":"knn = KNeighborsClassifier(n_neighbors=5)","a1736709":"knn.fit(X_train,y_train)","1c755872":"#have to predict\nknnpredict = knn.predict(X_test)","9289c089":"print(classification_report(y_test,knnpredict))\nprint(confusion_matrix(y_test,knnpredict))","169f76ac":"sns.heatmap(confusion_matrix(y_test,knnpredict),annot = True)","957b9df5":"#using logistic regression with sciket learn","df3e7145":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics  import accuracy_score\nfrom sklearn import metrics","90ae6f51":"model = LogisticRegression( fit_intercept=True,penalty='l2',dual=False,C=1.0)\nmodel.fit(X_train,y_train)","5ca012de":"modelpredict = model.predict(X_test)","85e8b712":"print(classification_report(y_test,modelpredict))\nprint(confusion_matrix(y_test,modelpredict))","25dbaca2":"understanding the data is vary important to know about the features the values","55856883":"using knn classifier","9fd896f9":"*list of features used:\nage,\nsex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal, target- the predicted attribute\n![heart](https:\/\/images.pexels.com\/photos\/744667\/pexels-photo-744667.jpeg?cs=srgb&dl=silhouette-photo-of-man-leaning-on-heart-shaped-tree-744667.jpg&fm=jpg)","d5ead30e":"About The Dataset","f38a3033":"I have used three different machine learning Algoritham-\n\n1.RandomForest\n2.KNeighbors\n3.LogisticReggression","d261ea62":"i know we did same things;]\nso lets start with KNeighborsClassifier","b175d790":"There are no null values in dataset\nisnull() if showing True this means there must be null value otherswise false."}}