{"cell_type":{"aac79f60":"code","45a0c96e":"code","393db6c9":"code","9a4c7cff":"code","f7f85888":"code","5fe7a40e":"code","c7c744a3":"code","3ace2b68":"code","9c17ef71":"code","452e371d":"code","ca83b76c":"code","684bcef5":"code","dc3da865":"code","e18032bb":"code","c68fb2c6":"code","1e7101ed":"markdown","6aa84b40":"markdown","5c0c9ed4":"markdown"},"source":{"aac79f60":"pip install lightautoml -q","45a0c96e":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(10,6)})\nsns.set(font_scale=1.3)\nsns.color_palette(\"light:#5A9\", as_cmap=True)\nplt.style.use('fivethirtyeight')\n\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\n\nfrom sklearn.metrics import log_loss\n\nimport warnings\nwarnings.filterwarnings('ignore')","393db6c9":"train = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')","9a4c7cff":"train.head()","f7f85888":"# Buscando por valores ausentes","5fe7a40e":"train.info()","c7c744a3":"train.drop(columns=['id']).describe().T.style.bar(subset=['mean'], color='#03a326')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='Blues')","3ace2b68":"test.drop(columns=['id']).describe().T.style.bar(subset=['mean'], color='#fcf45d')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='Blues')","9c17ef71":"train['target'] = train['target'].str.slice(start=6).astype(int)-1","452e371d":"plt.figure(figsize=(12,6))\ncontagem = train['target'].value_counts()\n\nax = sns.countplot(data=train, x='target', order=train['target'].value_counts().index)\n\nfor c in ax.patches:\n    ax.text(c.get_x()-.1 + c.get_width() \/ 3, c.get_height() + 2, c.get_height(), fontsize='16')\n    \nax.set_xlabel('Number of Class', fontsize = 15)\nax.set_ylabel('Count', fontsize = 15);","ca83b76c":"plt.figure(figsize=(12,6))\nax = sns.countplot(data=train, x='target', order=train['target'].value_counts().index)\ntotals = []\n\nfor i in ax.patches:\n    totals.append(i.get_height())\n    \ntotal = sum(totals)\n\nfor i in ax.patches:\n    ax.text(i.get_x()-.03, i.get_height(), str(round((i.get_height()\/total)*100, 2))+'%', fontsize=15)\n    \nax.set_xlabel('% of Class', fontsize = 15)\nax.set_ylabel('Count', fontsize = 15);","684bcef5":"task = Task('multiclass')\nroles = {'target':'target','drop':['id']}","dc3da865":"automl = TabularUtilizedAutoML(task=task, timeout=10800, cpu_limit= -1,\n                              general_params = {'use_algos': [['lgb', 'cb', 'cb_tuned'], ['linear_l2', 'cb']]},\n                               reader_params = {'n_jobs': 12})\n\npred = automl.fit_predict(train, roles=roles)","e18032bb":"previsao = automl.predict(test)","c68fb2c6":"sub.iloc[:, 1:] = previsao.data\nsub.to_csv('sub1.csv', index=False)\nsub","1e7101ed":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Plots<\/p>","6aa84b40":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">AutoML<\/p>","5c0c9ed4":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Preprocessing<\/p>"}}