{"cell_type":{"b8918855":"code","920ec9ba":"code","f0eb1b64":"code","84a6868b":"code","b4b7dd62":"code","16fbbc20":"code","cf10eaf2":"code","aa986649":"code","bec45fe3":"code","5ae6596c":"code","5635c0b2":"code","8fd2b817":"code","eaf1b5a8":"code","8c8a2807":"markdown","454195b3":"markdown","d95ba58d":"markdown","7ec82382":"markdown","516bb345":"markdown","7a3cdb3c":"markdown","c8cde2a8":"markdown","3e959467":"markdown","28179bfe":"markdown","e0302cec":"markdown","d3415016":"markdown","681ca552":"markdown"},"source":{"b8918855":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom xgboost import XGBRegressor","920ec9ba":"Data_Spotify = pd.read_csv(\"..\/input\/top50spotify2019\/top50.csv\",encoding='ISO-8859-1')","f0eb1b64":"Data_Spotify.isnull().sum()\nData_Spotify.fillna(0)","84a6868b":"Data_Spotify.columns\n\nData_Spotify = Data_Spotify.rename(columns = \n                    {'Track.Name' : 'Track', \n                     'Artist.Name' : 'Artist', \n                     'Genre': 'Genre', \n                     'Beats.Per.Minute' : 'BPM',\n                     'Energy' : 'Energy', \n                     'Danceability' : 'Dance', \n                     'Loudness..dB..' : 'Loud', \n                     'Liveness' : 'Liveness', \n                     'Valence.' : 'Valence',\n                     'Length.' : 'Length', \n                     'Acousticness..' : 'Acoustic', \n                     'Speechiness.' : 'Speech', \n                     'Popularity' : 'Popularity'}, inplace = False)","b4b7dd62":"# # with regression\n# sns.pairplot(Data_Spotify, kind=\"reg\")\n# plt.show()","16fbbc20":"# plt.figure(figsize=(10,10))\n# plt.title('Correlation Map')\n# ax=sns.heatmap(Data_Spotify.corr(), linewidth=3.1, annot=True, center=1)","cf10eaf2":"Data_Spot = Data_Spotify.groupby('Genre')['BPM','Energy','Dance','Liveness','Valence','Length','Speech','Popularity'].mean()","aa986649":"Data_Spot","bec45fe3":"Flatten_Spot = Data_Spot.reset_index()","5ae6596c":"from sklearn.linear_model import LinearRegression\n\n#Linear regression, first create test and train dataset\nX=Flatten_Spot.loc[:,['BPM','Energy','Dance','Liveness','Valence','Length','Speech']].values\nY=Flatten_Spot.loc[:,'Popularity'].values\n\nregressor = LinearRegression()\nregressor.fit(X, Y)\nprint(regressor.intercept_)\nprint(regressor.coef_)","5635c0b2":"X_test = Data_Spotify.loc[:,['BPM','Energy','Dance','Liveness','Valence','Length','Speech']].values\nY_test = Data_Spotify.loc[:,'Popularity'].values\n\nY_pred = regressor.predict(X_test)\n\nActVPred = pd.DataFrame({'Actual': Y_test, 'Predicted': Y_pred})\nprint(ActVPred)\n\n#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))","8fd2b817":"Y_pred = regressor.predict(X)\n\nActVPred = pd.DataFrame({'Actual': Y, 'Predicted': Y_pred})\nprint(ActVPred)\n\n#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y, Y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(Y, Y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y, Y_pred)))\n","eaf1b5a8":"model = XGBRegressor()\nmodel.fit(X_test, Y_test)\nY_pred = model.predict(X)\n\nActVPred = pd.DataFrame({'Actual': Y, 'Predicted': Y_pred})\nprint(ActVPred)\n\n#Checking the accuracy of Linear Regression\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y, Y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(Y, Y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y, Y_pred)))","8c8a2807":"# Parameters with impact on Popularity\nLoud and Acoustic have less impact on Popularity. We can drop them \n\n","454195b3":"# References\nhttps:\/\/www.kaggle.com\/arpita28\/analysis-of-spotify-trends\n\nhttps:\/\/www.kaggle.com\/tanersekmen\/spotify-50-song-analysis\n\nhttps:\/\/www.kaggle.com\/aryamonani\/song-popularity-prediction-using-xgb\n","d95ba58d":"# Testing the model on Original Data","7ec82382":"# Flattening the Data","516bb345":"# Making the column names shorter for easy reading","7a3cdb3c":"# Importing all Libraries","c8cde2a8":"# Remving Null with 0","3e959467":"# Regression being used to train model on Mean data","28179bfe":"# Grouping by Genre","e0302cec":"# Reading File","d3415016":"#  Using Pairplot to see if there are any obvious correlation between variables","681ca552":"# Comparing accuracy to see if there is overfitment"}}