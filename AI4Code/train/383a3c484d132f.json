{"cell_type":{"8fbb398b":"code","ffb624b9":"code","37a0d5d8":"code","6cf699a8":"code","1b8124d9":"code","4b80539d":"code","743f7427":"code","4ffda6c0":"code","9c6db8c6":"code","08dd086e":"code","fe6b69f2":"code","7057470c":"code","b8bfb39a":"code","20f8d2c2":"code","7e061ce3":"code","b6662ab8":"code","8feef9b2":"code","dd9990b8":"code","f5c61e71":"code","3df53e53":"code","2c25e011":"code","9d12e8f0":"code","8cd69762":"code","6875ac24":"code","2ba3a098":"code","069206fe":"code","78d3b25a":"code","8a2a72ce":"code","37ffcf66":"code","6fa8f266":"code","51d32bf6":"code","619d2837":"code","d566b3a6":"code","9f5fd6e4":"code","57497f5b":"code","7e406fa4":"code","e4fbf86e":"code","2bde409d":"code","de4374e3":"code","c0a7905c":"code","fff92d85":"code","d92d0a16":"code","cbca5d7b":"code","f5e240a7":"code","2ce06d8b":"code","531504db":"code","ee53336c":"code","cb49dbdd":"code","785ec209":"code","ac875e73":"code","edbf9f12":"code","56c0a373":"code","009cfd84":"code","8b91d3c8":"code","14b5c645":"code","e53a4ba5":"code","7206dd9f":"code","8f61d2f0":"code","74c9c77c":"code","0d36097d":"code","062666ec":"code","8b089cd7":"code","e1f7bf2d":"code","8179f279":"code","4ef83e6e":"code","2f962d5a":"code","11731cc3":"code","01452cf8":"code","889a98c9":"code","548a2a70":"code","839e8abf":"code","69b9c1f2":"code","32a0f500":"code","fc137e87":"code","959dfec7":"code","c5ed35e4":"code","0d0582d7":"code","6e0c0a6a":"code","602900c1":"code","6ca6da28":"code","87809a8a":"code","6a420146":"code","4897315a":"code","36a70b50":"code","1ad51465":"code","41f94e0c":"code","9f87ae5b":"code","004cdc53":"code","7bdd0605":"code","1ecd37f2":"code","92e4e0a0":"code","e62847f0":"code","c1e7af1a":"code","541065a7":"code","7e0c1554":"code","cc4a77fd":"code","af6888c0":"code","151f4c58":"code","9f2a4103":"code","c233bdbd":"code","0b32a794":"code","09ad2f10":"code","11856283":"code","676797fa":"code","7d56f043":"code","8c80f884":"code","04919c6e":"code","a4a1174e":"code","e2a12891":"code","3f91a7aa":"code","7ba9fa51":"code","23c1f0dd":"code","95346ad3":"code","d03181a9":"code","4030bae4":"code","81867823":"code","c206b9ce":"code","f2c58635":"code","47de98fb":"code","271878f6":"code","341b50fb":"code","44d39f78":"code","29c17fbd":"code","cd840dd9":"code","229cb814":"code","d2c468a9":"code","92edfc07":"code","3c5175f0":"code","d76559a1":"code","ba01f638":"code","8b43b23f":"code","d511236e":"code","760aeee6":"code","b9f7dead":"code","34176405":"code","c71d6f81":"code","d32fedf6":"code","7a9716e6":"code","2f1d4d66":"code","92ffe038":"code","1b51d74a":"code","a8e405ce":"code","7a0e56b3":"code","9b1d3988":"code","5dda3338":"code","1156a9e3":"code","a5267fd1":"code","76d1220c":"code","d4977c35":"code","78bb8fb9":"code","229f13a0":"code","34f04b50":"code","7f38539d":"code","a5923eb5":"code","fc398c7a":"code","9dfe64a2":"code","e68256d4":"code","7aaede88":"code","4d7a40d1":"code","affe7adc":"code","9e197e3a":"code","f347cb47":"code","e5fc4099":"code","54e0808d":"code","85f9165a":"code","bf4b203d":"code","3a9787ff":"code","a3ea9dad":"code","c292a8fc":"code","fc5bc2d3":"code","a686b7aa":"code","2c0cf894":"code","d60430a9":"code","cb8b2d07":"code","1b07ff6f":"code","013f5b8d":"code","3608056b":"code","0c2f779e":"code","cfbd4658":"code","fe2d6615":"code","b0c62c3c":"code","3d0e0c8c":"code","acccb7d6":"code","cde787e3":"code","afc2c0bb":"code","02d0723b":"code","ac452476":"code","402ca45c":"code","cf074171":"code","90431a86":"code","2db95686":"code","529bf351":"code","c25271b5":"code","dd6772d3":"code","8132f7f3":"code","8f41060f":"code","6456defc":"code","5ee2722d":"code","4f7a35e9":"code","83a893af":"code","30c74a92":"code","03d475fa":"code","6910b360":"code","5e902a77":"code","e8135c56":"code","df54a81f":"code","28adc073":"code","d8210c59":"code","fe5c5338":"code","086458ff":"code","8a70ffda":"code","05581c04":"code","e5b972f5":"code","a7a030b4":"markdown","61ed594b":"markdown","dc1247d4":"markdown","db37710a":"markdown","718d12c3":"markdown","045ebbf8":"markdown","60288118":"markdown","fb7c1c62":"markdown","8e32bdec":"markdown","8bb2ebf8":"markdown","1346b345":"markdown","dcbd3aec":"markdown","ca7213a3":"markdown","4c467d38":"markdown","4c561699":"markdown","b51351c6":"markdown","8f2a47ef":"markdown","ac832e08":"markdown","5fd4cec5":"markdown","fc1c5b3f":"markdown","88b18127":"markdown","91a9f4e0":"markdown","a73ab1e9":"markdown","a016afa4":"markdown","50dd85bd":"markdown","ddf1cb59":"markdown","3aa3b7c6":"markdown","4c8654be":"markdown","6fbf3a6b":"markdown","9d305f15":"markdown","7c4b6287":"markdown","23c37ddb":"markdown","b0bb326b":"markdown","83aff233":"markdown","1d59a4cf":"markdown","73e2f4fb":"markdown","3319cf41":"markdown","942c79b6":"markdown","8b058509":"markdown","41041825":"markdown","ec870c8c":"markdown","b5a4c725":"markdown","3827fa0c":"markdown","c96973cc":"markdown","ba479ce1":"markdown","093c7d3f":"markdown","e40b4d47":"markdown","7284f062":"markdown","cf25ad51":"markdown","eeeb52b5":"markdown","a21ed8d0":"markdown","8e0d5632":"markdown","6032d3fa":"markdown","312855f8":"markdown","a96cd74d":"markdown","17821b69":"markdown","f9f0087b":"markdown","5536c630":"markdown","3f7e00c4":"markdown","882df090":"markdown","89ea1b8f":"markdown","fe16e478":"markdown","2179c7d5":"markdown","4f03efad":"markdown","eaa836e6":"markdown","ca26ee83":"markdown","e7cfb68a":"markdown","be6d91c5":"markdown","d18132e6":"markdown","f87bfba3":"markdown","5bc8f484":"markdown","b7d32736":"markdown","d544ef3a":"markdown","3d921388":"markdown","175529ba":"markdown","4495f06e":"markdown","88efc5e9":"markdown","7318a9e5":"markdown","7b2ee710":"markdown"},"source":{"8fbb398b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sys\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom tqdm.notebook import tqdm\nfrom catboost import CatBoostRegressor, Pool\nfrom sklearn.ensemble import StackingRegressor\n\nimport xgboost as xgb\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\n\nimport time\nimport os\n\nfrom pandas import Series\nimport re\n\nimport pandas_profiling\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.base import clone\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.feature_selection import f_classif, mutual_info_classif\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom tqdm import tqdm\nfrom datetime import timedelta, datetime, date\n\nimport json","ffb624b9":"print('Python       :', sys.version.split('\\n')[0])\nprint('Numpy        :', np.__version__)","37a0d5d8":"# \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b:\n!pip freeze > requirements.txt","6cf699a8":"# \u0432\u0441\u0435\u0433\u0434\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0439\u0442\u0435 RANDOM_SEED, \u0447\u0442\u043e\u0431\u044b \u0432\u0430\u0448\u0438 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b!\nRANDOM_SEED = 42","1b8124d9":"# \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u044b \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b:\ndef visualizing_number(data, column): \n    bins = 100\n    if data[column].nunique() < 100:\n        bins = data[column].nunique()\n    \n    fig, axes = plt.subplots(2,1, figsize=(26,8))\n    sns.boxplot(ax=axes[0], y = data[column],data=data, orient='h')\n    axes[0].set_title(column)\n    data[column].hist(ax=axes[1], bins = bins)\n    plt.show()\n    print()\n    \n\ndef get_outliers(column): \n    Q1 = column.quantile(0.25)\n    Q3 = column.quantile(0.75)\n    IQR = Q3 - Q1\n    min_out = Q1 - 1.5 * IQR\n    max_out = Q3 + 1.5 * IQR\n    return (column < min_out).sum() + (column > max_out).sum(), min_out, max_out\n\ndef mape(y_true, y_pred):\n    return np.mean(np.abs((y_pred-y_true)\/y_true))","4b80539d":"VERSION    = 16\nDIR_TRAIN  = '..\/input\/parsing-all-moscow-auto-ru-09-09-2020\/' \nDIR_TRAIN2 = '..\/input\/cars-df-v2\/' #\u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0435\u043b\u044c\u043d\u043e \u0432\u0437\u044f\u0442\u044b \u0441 \u0441\u0430\u0439\u0442\u0430 \u0430\u0432\u0442\u043e.\u0440\u0443\nDIR_TEST   = '..\/input\/sf-dst-car-price-prediction\/'\nVAL_SIZE   = 0.20   # 20%","743f7427":"!ls '..\/input'","4ffda6c0":"train_2020 = pd.read_csv(DIR_TRAIN+'all_auto_ru_09_09_2020.csv')\ntrain = pd.read_csv(DIR_TRAIN2+'cars_df.csv') # \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\ntest = pd.read_csv(DIR_TEST+'test.csv')\nsample_submission = pd.read_csv(DIR_TEST+'sample_submission.csv')","9c6db8c6":"train_2020.info()","08dd086e":"train.info()","fe6b69f2":"test.info()","7057470c":"\n# \u0443\u0434\u0430\u043b\u0438\u043c \u0437\u043d\u0430\u043a \u0432\u0430\u043b\u044e\u0442\u044b \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0432 \u0446\u0435\u043d\u0435\ntrain['price'] =train['price'].astype(str)\ntrain['price'] = train['price'].apply(lambda x: x if len(x) ==1 else ''.join(x.split()[0:-1])).astype(int)","b8bfb39a":"# \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u044f \u043f\u043e \u0431\u0440\u0435\u043d\u0434\u0430\u043c\n\n\nbrands = test.brand.unique()\ninfs = []\nfor brand in brands:\n    mean20 = train_2020[train_2020[\"brand\"]==brand].price.mean()\n    mean21 = train[train[\"brand\"]==brand].price.mean()\n    inf = (mean21-mean20)\/mean20\n    infs.append(inf)\n    print(f'{brand} 2020: {mean20}')\n    print(f'{brand} 2021: {mean21}')\n    print(f'\u0418\u043d\u0444\u043b\u044f\u0446\u0438\u044f: {round(inf * 100,2)}%')\n    print()\n","20f8d2c2":"brands = test.brand.unique()\ntt = train.copy()\ndisplay(tt.head(2))\nfor brand in brands:\n    mean20 = train_2020[train_2020[\"brand\"]==brand].price.mean()\n    mean21 = train[train[\"brand\"]==brand].price.mean()\n    inf = (mean21-mean20)\/mean20\n    if inf>0:\n        tt.loc[tt[\"brand\"]==brand, ['price']] = tt.loc[tt[\"brand\"]==brand, ['price']].apply(lambda x: round(x\/(1+inf),0))\ndisplay(tt.head(2))","7e061ce3":"# \u0426\u0435\u043d\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438\u0441\u044c \u0432\u0435\u0440\u043d\u043e.\ndata = tt","b6662ab8":"print(train.columns)\nprint(train_2020.columns)\nprint(test.columns)","8feef9b2":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u0449\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0430 \u0438 \u0442\u0440\u0435\u0439\u043d\u0430:\ns2020 = list(train_2020.columns)\ns2021 = list(train.columns)\ns = set(list(test.columns))\nno2020 = [x for x in s if not x in s2020] #\u043d\u0430\u0439\u0434\u0435\u043c \u0441\u0442\u043e\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435\nprint('\u0421\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0435, \u043d\u043e \u0438\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 2020:', no2020)\nno2021 = [x for x in s if not x in s2021] #\u043d\u0430\u0439\u0434\u0435\u043c \u0441\u0442\u043e\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435\nprint('\u0421\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0435, \u043d\u043e \u0438\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 2021:', no2021)\n#\u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442 \u0434\u0432\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0443\u0436\u043d\u043e \u043b\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u043d\u0430 \u0438\u043b\u0438 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442\n#test[s3]\n#model_info \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 car_url, \n#super_gen - \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0438 \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u043e\u0431\u0446\u043e\u0432,\n#\u0430 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0438\u043c\u0435\u044e\u0442 \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0438 \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u0440\u0435\u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0442\u0438\u0432\u043d\u044b\n","dd9990b8":"train['equipment_dict'] = train['equipmentGroups']\ntrain = train.drop(['equipmentGroups'], axis=1)\n\ntrain.columns","f5c61e71":"train_2020['sell_id'] = 0\ntrain['sell_id'] = 0\ntrain_2020['car_url'] = train_2020['model']","3df53e53":"# \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u0449\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\ncolumns2021 = [x for x in s2021 if not x in no2021]\nprint('\u041e\u0431\u0449\u0438\u0435 \u0434\u043b\u044f 2021')\nprint('\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e', len(columns2021))\nprint(columns2021)\n\ncolumns2020 = [x for x in s2020 if not x in no2020]\nprint('\u041e\u0431\u0449\u0438\u0435 \u0434\u043b\u044f 2020')\nprint('\u041e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e', len(columns2020))\nprint(columns2020)\n# columns","2c25e011":"print('train - priceCurrency - ', train.priceCurrency.value_counts(), sep='\\n')\nprint('test - priceCurrency - ', test.priceCurrency.value_counts(), sep='\\n')\nprint()\nprint('train - \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 - ', train['\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435'].value_counts(), sep='\\n')\nprint('test - \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 - ', test['\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435'].value_counts(), sep='\\n')","9d12e8f0":"to_del = ['image','parsing_unixtime','priceCurrency','description','model_name', '\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435','equipmentGroups']","8cd69762":"columns = [x for x in columns2021 if not x in to_del] \ncolumns = ([x for x in columns if x in columns2020+['car_url', 'sell_id']] )","6875ac24":"test['price']=0","2ba3a098":"df_train_2020 = train_2020[columns]\ndf_train = train[columns]\ndf_test = test[columns]","069206fe":"# \u0412\u0410\u0416\u041d\u041e! \u0434\u0440\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\ndf_train_2020['sample'] = 1 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_train['sample'] = 1 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_test['sample'] = 0 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\n\ndata = df_test.append(df_train, sort=False).append(df_train_2020, sort=False).reset_index(drop=True) # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c\ndata[data['sample']==0].shape","78d3b25a":"data.info()","8a2a72ce":"#\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ndata.rename(columns={'productionDate': 'production_date',\n                     'vehicleConfiguration': 'vehicle_configuration',\n                     'vehicleTransmission': 'vehicle_transmission',\n                     'name':'gear',\n                     '\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b': 'owners_qty',\n                     '\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435': 'ownership_time',\n                     '\u041f\u0422\u0421': 'licence',\n                     '\u041f\u0440\u0438\u0432\u043e\u0434': 'type_of_drive',\n                     '\u0420\u0443\u043b\u044c': 'steering_wheel',\n                     '\u0422\u0430\u043c\u043e\u0436\u043d\u044f': 'customs', \n                     'Price': 'price',\n                     'bodyType': 'body_type', \n                     'engineDisplacement': 'engine_volume',\n                     'enginePower': 'engine_power',\n                     'fuelType': 'fuel_type',\n                     'modelDate': 'model_date',\n                     'numberOfDoors': 'number_of_doors',}, inplace=True)\ndata.columns","37ffcf66":"#\u0443\u0434\u0430\u043b\u0438\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0438\u0437 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430\n# data[data.duplicated(keep=False)]\ndata = data.drop_duplicates()\ndata[data['sample'] ==0].info()","6fa8f266":"# \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nnum_cols = []\n\n# \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols = []\n\n# \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ncat_cols = []\n\n# \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nready_cat_cols = []","51d32bf6":"data1 = data.copy() # \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 data1, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\ndata[data['sample']==0].shape","619d2837":"data.car_url","d566b3a6":"#\u0418\u0437\u043c\u0435\u043d\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 car_url \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0430\u0432\u0442\u043e\n\nvalue = data.car_url.apply(lambda x: x.lower() if len(x.split('\/'))==1 else x.split('\/')[7].lower())\nidx = data.columns.get_loc('brand') \ndata.insert(loc=idx+1, column='model_of_car', value=value )\ndata = data.drop('car_url',1)\ndata[data['sample'] ==0].info()","9f5fd6e4":"data['model_of_car'].value_counts","57497f5b":"cat_cols.append('model_of_car')","7e406fa4":"data['body_type'].unique()","e4fbf86e":"#\u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\ndata['body_type'] = data['body_type'].astype(str).apply(lambda x: None if x.strip()=='' else x)\ndata['body_type'] = data['body_type'].apply(lambda x: x.split(' ')[0].lower())","2bde409d":"sns.countplot(y = data['body_type'], data = data, order = data['body_type'].value_counts().index)\n# sns.countplot?","de4374e3":"data.at[93550,'body_type'] = None","c0a7905c":"data['body_type'].isna().sum()","fff92d85":"data['body_type'] = data['body_type'].fillna(data['body_type'].mode())","d92d0a16":"cat_cols.append('body_type')","cbca5d7b":"data[data['sample']==0].shape","f5e240a7":"data['brand'].unique() ","2ce06d8b":"data['brand'].value_counts().plot.barh()","531504db":"data['brand'].isnull().sum()","ee53336c":"cat_cols.append('brand')","cb49dbdd":"data['color'].unique() ","785ec209":"data['color'].value_counts().plot.barh()","ac875e73":"#\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ncolor_dict = {'040001':'black', \n              'FAFBFB':'white',\n              'CACECB':'silver',\n              '97948F':'grey',\n              '\u0447\u0451\u0440\u043d\u044b\u0439':'black',\n              '0000CC':'blue',\n              '\u0431\u0435\u043b\u044b\u0439':'white',\n              '200204':'brown',\n              'EE1D19':'red',\n              '\u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439':'silver',\n              '\u0441\u0435\u0440\u044b\u0439':'grey',\n              '\u0441\u0438\u043d\u0438\u0439':'blue',\n              '007F00':'green',\n              'C49648':'beige',\n              '\u043a\u0440\u0430\u0441\u043d\u044b\u0439':'red', \n              '\u043a\u043e\u0440\u0438\u0447\u043d\u0435\u0432\u044b\u0439':'brown',\n              '22A0F8':'light_blue',\n              '\u0437\u0435\u043b\u0451\u043d\u044b\u0439':'green',\n              '660099':'purple',\n              'DEA522':'gold',\n              '4A2197':'violet',\n              '\u0431\u0435\u0436\u0435\u0432\u044b\u0439':'beige',\n              'FFD600':'yellow',\n              '\u0433\u043e\u043b\u0443\u0431\u043e\u0439':'light_blue',\n              'FF8649':'orange',\n              '\u0437\u043e\u043b\u043e\u0442\u0438\u0441\u0442\u044b\u0439':'gold',\n              '\u043f\u0443\u0440\u043f\u0443\u0440\u043d\u044b\u0439':'purple',\n              '\u0444\u0438\u043e\u043b\u0435\u0442\u043e\u0432\u044b\u0439':'violet',\n              '\u0436\u0451\u043b\u0442\u044b\u0439':'yellow',\n              '\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439':'orange',\n              'FFC0CB':'pink',\n              '\u0440\u043e\u0437\u043e\u0432\u044b\u0439':'pink'\n             }","edbf9f12":"data['color'] = data['color'].map(color_dict)","56c0a373":"  \npop_color_dict = {\n    'white': 1,\n    'black': 1,\n    'blue': 2,\n    'silver': 2,\n    'grey': 2,\n    'brown': 3,\n    'red': 3, \n    'green': 3,\n    'beige': 3,\n    'light_blue': 3,\n    'purple': 4,\n    'yellow': 4, \n    'orange': 4,\n    'violet': 4, \n    'gold': 4, \n    'pink': 4\n}\ndata['color'] = data['color'].map(pop_color_dict)","009cfd84":"ready_cat_cols.append('color')","8b91d3c8":"data['color'].isnull().sum()\n","14b5c645":"data['color'].fillna(1, inplace=True)","e53a4ba5":"data[data['sample']==0].shape","7206dd9f":"data['fuel_type'].unique()","8f61d2f0":"data['fuel_type'].value_counts().plot.barh()","74c9c77c":"# \u0434\u0430\u0434\u0438\u043c \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\nd = {\n    '\u0431\u0435\u043d\u0437\u0438\u043d': 'petrol', \n    '\u0434\u0438\u0437\u0435\u043b\u044c': 'diesel', \n    '\u0433\u0438\u0431\u0440\u0438\u0434': 'hybrid', \n    '\u044d\u043b\u0435\u043a\u0442\u0440\u043e': 'electro', \n    '\u0433\u0430\u0437': 'gas'\n}\ndata['fuel_type'] = data['fuel_type'].map(d)","0d36097d":"cat_cols.append('fuel_type')","062666ec":"data2 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438","8b089cd7":"np.sort(data['model_date'].unique())","e1f7bf2d":"fig, axes = plt.subplots(1, 1, figsize=(20,5))\nplt.title('\u0413\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f')\nplt.xticks(rotation=90)\nsns.countplot(x='model_date', data=data, orient='v')","8179f279":"data['model_date'][data['model_date']< 1980].value_counts(dropna=False).sort_index(ascending=False)","4ef83e6e":"# \u043f\u0440\u0438\u043c\u0435\u043c  \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441\u0442\u0430\u0440\u0448\u0435 1980 \u0433. \u0437\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b\ndata = data[~((data.model_date < 1980)&(data.sample==1))]","2f962d5a":"data[data['sample']==0].shape","11731cc3":"data['model_date'].isnull().sum()","01452cf8":"data = data.dropna(subset=['model_date'])","889a98c9":"data['production_date'].isnull().sum()","548a2a70":"fig, axes = plt.subplots(1, 1, figsize=(20,5))\nplt.title('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u0432\u044b\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0432 \u0433\u043e\u0434\u0443')\nplt.xticks(rotation=90)\nsns.countplot(x='model_date', data=data, orient='v')","839e8abf":"#\u0432\u0432\u0435\u0434\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u0430\u0448\u0438\u043d\u044b\nfrom datetime import date\n\ntoday = date.today()\nd1 = int(today.strftime(\"%Y\"))\n\ndata['model_date'] = data['model_date'].astype('int')\nidx = data.columns.get_loc('model_date') \ndata.insert(loc=idx+1, column='model_d', value=d1 - data['model_date'] )\ndata.insert(loc=idx+1, column='production_d', value=d1 - data['production_date'] )\n","69b9c1f2":"num_cols.append('model_date')","32a0f500":"num_cols.append('production_date')","fc137e87":"num_cols.append('model_d')","959dfec7":"num_cols.append('production_d')","c5ed35e4":"data[data['sample']==0].shape","0d0582d7":"data3 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data3.copy()","6e0c0a6a":"data['gear'].unique()","602900c1":"#\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f \u0442\u0440\u0430\u043d\u0441\u043c\u0438\u0441\u0441\u0438\u0438, \u0442. \u043a. \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c\ndata['gear'] = data['gear'].astype(str)\nidx = data.columns.get_loc('color') \ndata.insert(loc=idx+1, column='transmis', value= data['gear'].str.extract('([A][T]|[M][T]|[A][M][T]|[C][V][T])',\n                                                expand=False).str.strip())","6ca6da28":"sns.countplot(x = data['transmis'], data = data)","87809a8a":"data['transmis'].isnull().sum()","6a420146":"data['transmis']=data['transmis'].fillna('AT')","4897315a":"cat_cols.append('transmis')","36a70b50":"data = data.drop('gear', 1)","1ad51465":"data4 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438","41f94e0c":"data['number_of_doors'].unique()","9f87ae5b":"mode = round(data['number_of_doors'].mean(),0)\nmode","004cdc53":"data['number_of_doors']=data['number_of_doors'].fillna(mode)","7bdd0605":"sns.countplot(x = data['number_of_doors'], data = data)","1ecd37f2":"num_cols.append('number_of_doors')","92e4e0a0":"data[data['sample']==0].shape","e62847f0":"data5 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438","c1e7af1a":"data['vehicle_configuration'].value_counts()","541065a7":"data['vehicle_configuration'] = data['vehicle_configuration'].astype(\n                str).apply(lambda x: x if len(x) == 1 else x.split())","7e0c1554":"data['vehicle_configuration'] = data['vehicle_configuration'].apply(\n    lambda x: x[0].lower() if len(x) == 1 else x[1].lower())","cc4a77fd":"data['vehicle_configuration'].value_counts().plot.barh()","af6888c0":"cat_cols.append('vehicle_configuration')","151f4c58":"data6 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data6.copy()","9f2a4103":"data['engine_volume'].value_counts(dropna=False).head(50)","c233bdbd":"data['engine_volume'] = data['engine_volume'].astype(str)","0b32a794":"data['engine_volume'] = data['engine_volume'].str.extract('(\\d.\\d)',expand=False).str.strip()","09ad2f10":"data['engine_volume']=data['engine_volume'].astype(float)","11856283":"data['engine_volume'] = data['engine_volume'].apply(lambda x: round(x\/100,1) if (x>10) else round(x,1))","676797fa":"mean = round(data['engine_volume'].mean(),1)\nmean","7d56f043":"data[data['sample']==0]['engine_volume'].isnull().sum()","8c80f884":"data['engine_volume'].fillna(mean, inplace=True)","04919c6e":"data['engine_volume'].value_counts().plot.barh()","a4a1174e":"num_cols.append('engine_volume')","e2a12891":"data[data['sample']==0].shape","3f91a7aa":"data7 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438","7ba9fa51":"data['engine_power']","23c1f0dd":"data['engine_power'] = data['engine_power'].astype(str).apply(lambda x: x.split()[0])\ndata['engine_power'] = data['engine_power'].astype(float)","95346ad3":"data['engine_power'].value_counts()","d03181a9":"data['engine_power'].value_counts().sort_index()","4030bae4":"# \u0420\u0430\u0437\u043e\u0431\u044c\u0451\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438\ndef engine_power(x):\n    if x < 100: x = 1\n    elif 99 < x < 150: x = 2\n    elif 149 < x < 200: x = 3\n    elif 199 < x < 250: x = 4\n    elif 249 < x < 300: x = 5\n    elif 299 < x < 350: x = 6\n    elif 349 < x < 400: x = 7\n    elif 399 < x < 450: x = 8\n    elif 449 < x < 500: x = 9\n    elif 499 < x < 550: x = 10\n    elif 549 < x < 600: x = 11\n    else: x = 12\n    return x  ","81867823":"data['engine_power'] = data['engine_power'].map(engine_power)","c206b9ce":"plt.figure(figsize=(16,8))\nsns.countplot(x = data['engine_power'], data = data) \nplt.title('\u041c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0432 \u043b.\u0441.')","f2c58635":"data['engine_power'].isnull().sum()","47de98fb":"num_cols.append('engine_power')","271878f6":"data[data['sample']==0].shape","341b50fb":"data8 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data8.copy()","44d39f78":"data['mileage']","29c17fbd":"data['mileage'] = data['mileage'].astype(str).apply(lambda x: x.replace('\\xa0',''))\ndata['mileage'] = data['mileage'].astype(str).apply(lambda x: x.replace('\u043a\u043c',''))\ndata['mileage'] = data['mileage'].apply(lambda x: int(x.replace(' ','')))\ndata['mileage']","cd840dd9":"data['mileage'].isna().sum()","229cb814":"num_cols.append('mileage')","d2c468a9":"#\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u0433\u043e\u0434\u043e\u0432\u043e\u0439 \u043f\u0440\u043e\u0431\u0435\u0433 \nimport math\nvalue= round(data['mileage'].astype(int)\n                                                       \/(data['model_d'].apply(lambda x: x if x>0 else x+1)),-2)\nidx = data.columns.get_loc('licence') \ndata.insert(loc=idx+1, column='mileage_per_year', value= value)\ndata['mileage_per_year'] = data['mileage_per_year'].apply(lambda x: x if x != math.inf else 0 )","92edfc07":"plt.figure(figsize=(26,8))\nplt.title('\u041f\u0440\u043e\u0431\u0435\u0433 \u0432 \u0433\u043e\u0434')\nplt.xticks(rotation=90)\n\nplot_ = sns.countplot(x = data['mileage_per_year'], data = data) \nfor ind, label in enumerate(plot_.get_xticklabels()):\n    if ind % 10 == 0:  # every 10th label is kept\n        label.set_visible(True)\n    else:\n        label.set_visible(False)","3c5175f0":"num_cols.append('mileage_per_year')","d76559a1":"data9 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data9.copy()","ba01f638":"data['type_of_drive'].unique()","8b43b23f":"data['type_of_drive'].value_counts(dropna=False)","d511236e":"# \u0434\u0430\u0434\u0438\u043c \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\nd = {\n    '\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439': 'front', \n    '\u043f\u043e\u043b\u043d\u044b\u0439': 'full', \n    '\u0437\u0430\u0434\u043d\u0438\u0439': 'back'\n}\ndata['type_of_drive'] = data['type_of_drive'].map(d)","760aeee6":"data['type_of_drive']=data['type_of_drive'].fillna('front')","b9f7dead":"plt.figure(figsize=(8,8))\nsns.countplot(x = data['type_of_drive'], data = data)\nplt.title('\u0422\u0438\u043f \u043f\u0440\u0438\u0432\u043e\u0434\u0430')","34176405":"cat_cols.append('type_of_drive')","c71d6f81":"data['steering_wheel'].value_counts(dropna=False)","d32fedf6":"steering_wheel_dict = {'LEFT':'left', \n                       '\u041b\u0435\u0432\u044b\u0439':'left',\n                       'RIGHT':'right', \n                       '\u041f\u0440\u0430\u0432\u044b\u0439':'right',\n                        }\ndata['steering_wheel'] = data['steering_wheel'].map(steering_wheel_dict)","7a9716e6":"plt.figure(figsize=(8,8))\nsns.countplot(x = data['steering_wheel'], data = data) ","2f1d4d66":"data['steering_wheel'].isnull().sum()","92ffe038":"bin_cols.append('steering_wheel')","1b51d74a":"data[data['sample']==0].shape","a8e405ce":"data11 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data11.copy()","7a0e56b3":"data['owners_qty'].value_counts(dropna=False)\n# data['owners_qty'].unique()","9b1d3988":"data['owners_qty'] = data['owners_qty'].astype(\n                str).apply(lambda x: x if len(x) == 1 else x.split())\ndata['owners_qty']","5dda3338":"data['owners_qty']= data['owners_qty'].apply(\n    lambda x: x[0].lower() if len(x) == 1 else x[0].lower())","1156a9e3":"data['owners_qty']=data['owners_qty'].astype(float)","a5267fd1":"data['owners_qty'].isnull().sum()","76d1220c":"mode = round(data['owners_qty'].mode(),0)\nmode","d4977c35":"data['owners_qty'].fillna(3, inplace=True)","78bb8fb9":"ready_cat_cols.append('owners_qty')\n","229f13a0":"data12 = data.copy() # \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438\n# data = data12.copy()","34f04b50":"data['licence'].unique()","7f38539d":"licence_dict={'\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b': 1,\n             '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442': 0,\n             'ORIGINAL':1,\n             'DUPLICATE':0}\ndata['licence'] = data['licence'].map(licence_dict)","a5923eb5":"data['licence'].value_counts( dropna=False)","fc398c7a":"data['licence'] = data['licence'].fillna(2)","9dfe64a2":"ready_cat_cols.append('licence')","e68256d4":"data['customs'].value_counts()","7aaede88":"data = data.drop('customs', 1)","4d7a40d1":"data['vehicle_transmission'].value_counts()","affe7adc":"data = data.drop('vehicle_transmission',1 )","9e197e3a":"data['price']","f347cb47":"data['price'][(data['sample']==1)&(data['price'].isna())]","e5fc4099":"data.dropna(subset=['price'], inplace=True)","54e0808d":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438  \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b:\nprint('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432:',len(data) - len(data.drop_duplicates()))","85f9165a":"# data[data.duplicated(keep=False)]\ndata = data.drop_duplicates()\ndata.isna().sum()","bf4b203d":"data15 = data.copy()\n# data = data15.copy()","3a9787ff":"print(bin_cols)\nprint(num_cols)\nprint(cat_cols)\nprint(ready_cat_cols)","a3ea9dad":"data.info()","c292a8fc":"# \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439\nplt.figure(figsize=(8, 5))\nsns.heatmap(data[num_cols + ['price']].corr().abs(), vmin=0, vmax=1,\n            annot=True, fmt=\".2f\", cmap=\"YlGnBu\")","fc5bc2d3":"data = data.drop(['model_date', 'production_date', 'model_d'], 1)","a686b7aa":"num_cols.remove('model_date')\nnum_cols.remove('production_date')\nnum_cols.remove('model_d')","2c0cf894":"for col in num_cols:\n    visualizing_number(data, col)","d60430a9":"# #\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0430\u0448\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445:\nimp_cat = Series(mutual_info_classif(data[data['price'] >0][num_cols], \n                                     data[data['price'] >0]['price'],\n                                     discrete_features = True), index = num_cols)\nimp_cat.sort_values(inplace = True)\nimp_cat.plot(kind = 'barh')\nplt.title('\u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u0447\u0438\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u043b\u044f price')","cb8b2d07":"data[ready_cat_cols + cat_cols + bin_cols]","1b07ff6f":"data = data.drop(['vehicle_configuration'], 1)","013f5b8d":"cat_cols.remove('vehicle_configuration')","3608056b":"for col in cat_cols:\n    print(col)\n    print(data[col].value_counts())\n    print()","0c2f779e":"data[bin_cols]","cfbd4658":"# cat_cols\ncat_oh_cols = ['fuel_type', 'transmis', 'type_of_drive']\ncat_le_cols = ['model_of_car', 'body_type', 'brand', 'steering_wheel']","fe2d6615":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0447\u0438\u0441\u043b\u0430:\ndata = pd.get_dummies(data, columns=cat_oh_cols, dummy_na=False)","b0c62c3c":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0447\u0438\u0441\u043b\u0430:\n\nlabel_encoder = LabelEncoder()\nfor i in cat_le_cols:\n    data[i] = label_encoder.fit_transform(data[i])\ndata.info()    ","3d0e0c8c":"cat_new_cols = data.columns\n# len(cat_cols)\ncat_new_cols = [x for x in cat_new_cols if x not in (num_cols + ['sell_id','price','sample'])]\ndata[cat_new_cols].info()","acccb7d6":"imp_num = imp_cat.copy()","cde787e3":"imp_cat = Series(mutual_info_classif(data[data['price'].isna() == False][cat_new_cols], \n                                     data[data['price'].isna() == False]['price'],\n                                     discrete_features = True), index = cat_new_cols)\nimp_cat.sort_values(inplace = True)\nimp_cat.plot(kind = 'barh')\nplt.title('\u0412\u043b\u0438\u044f\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 price')","afc2c0bb":"imp_weights = pd.concat([imp_num, imp_cat]).drop_duplicates()\ncols = data.columns\nweights = [imp_weights[col] for col in cols if col not in ['sell_id', 'price', 'sample']]\nweights\n","02d0723b":"# # data = data20.copy()\n# dn = data.copy()","ac452476":"# dd = dn.drop(['sample','sell_id','price'],1).copy()\n# dd = pd.DataFrame(StandardScaler().fit_transform(dd), columns = dd.columns)\n# dn[dd.columns] = dd\n# dn","402ca45c":"# # 'production_d', 'engine_power', 'mileage', 'mileage_per_year'\n# dn[['production_d', 'engine_power', 'mileage', 'mileage_per_year']] = np.log(dn[['production_d', 'engine_power', 'mileage', 'mileage_per_year']] + 1)","cf074171":"# for col in num_cols:\n#     visualizing_number(data20, col)","90431a86":"# for col in num_cols:\n#     visualizing_number(dn, col)","2db95686":"# data20 = data.copy()\n# data = dn.copy()","529bf351":"X = data.query('sample == 1').drop(['sample', 'price', 'sell_id'], axis=1)\nX_sub = data.query('sample == 0').drop(['sample', 'price'], axis=1)\ny = data.query('sample == 1')['price'].values\nX_sub","c25271b5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=VAL_SIZE, shuffle=True, random_state=RANDOM_SEED)\nX_train","dd6772d3":"# def standart():\n\n","8132f7f3":"# model = CatBoostRegressor(iterations = 5000,\n#                           random_seed = RANDOM_SEED,\n#                           eval_metric='MAPE',\n#                           custom_metric=['R2', 'MAE'],\n#                           silent=True,\n#                          )\n\nstsc = StandardScaler()\nX_train = stsc.fit_transform(X_train)\nX_test = stsc.transform(X_test)\n\n# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0432\u0435\u0441\u0430\nX_train = X_train * weights\nX_test = X_test * weights\n","8f41060f":"# model.fit(X_train, y_train,\n#          #cat_features=cat_features_ids,\n#          eval_set=(X_test, y_test),\n#          verbose_eval=0,\n#          use_best_model=True,\n#          #plot=True\n#          )\n\n# # model.save_model('catboost_single_model_baseline.model')\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# predict = model.predict(X_test)\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict))*100:0.2f}%\")\n# # \u0411\u0435\u0437 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 15.61%","6456defc":"np.log(y_train)","5ee2722d":"# model = CatBoostRegressor(iterations = 5000,\n#                           random_seed = RANDOM_SEED,\n#                           eval_metric='MAPE',\n#                           custom_metric=['R2', 'MAE'],\n#                           silent=True,\n#                          )\n\n# model.fit(X_train, np.log(y_train),\n#          #cat_features=cat_features_ids,\n#          eval_set=(X_test, np.log(y_test)),\n#          verbose_eval=0,\n#          use_best_model=True,\n#          #plot=True\n#          )\n\n# # model.save_model('catboost_single_model_2_baseline.model')","4f7a35e9":"# predict_test = np.exp(model.predict(X_test))\n# predict_submission = np.exp(model.predict(X_sub))","83a893af":"# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_test))*100:0.2f}%\")\n# # \u0431\u0435\u0437 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 13.74%","30c74a92":"# lin_reg = LinearRegression().fit(X_train, y_train)\n# y_pred = lin_reg.predict(X_test)\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, y_pred))*100:0.2f}%\")\n\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 117.26%","03d475fa":"# # max_depth \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u043b\u0438 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435.\n# gb = GradientBoostingRegressor(min_samples_split=2,\n#                                learning_rate=0.03,\n#                                max_depth=30,\n#                                n_estimators=1000)\n# gb.fit(X_train,y_train)\n# # \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0431\u0435\u0437 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0430\u0440\u0433\u0435\u0442\u0430\n# y_pred = gb.predict(X_test)\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE_\u0431\u0435\u0437 \u043b\u043e\u0433\u043e: {(mape(y_test, y_pred))*100:0.2f}%\")\n\n# # \n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 14.96%\n# # \n\n# # \u0431\u0435\u0437 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f 15.65%","6910b360":"# #\u0422\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0441 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u043e\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430\n# gb.fit(X_train,np.log(y_train))\n# y_pred = gb.predict(X_test)\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE c \u043b\u043e\u0433\u043e: {(mape(y_test, y_pred))*100:0.2f}%\")\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE c \u043b\u043e\u0433\u043e: 100.00%","5e902a77":"# rf = RandomForestRegressor(n_estimators=1000,\n#                            n_jobs=-1,\n#                            max_depth=30,\n#                            max_features='log2',\n#                            random_state=RANDOM_SEED,\n#                            oob_score=True)\n# rf.fit(X_train,y_train)\n\n","e8135c56":"# # \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0431\u0435\u0437 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0430\u0440\u0433\u0435\u0442\u0430\n# y_pred = rf.predict(X_test)\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE_\u0431\u0435\u0437 \u043b\u043e\u0433\u043e: {(mape(y_test, y_pred))*100:0.2f}%\")\n\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE_\u0431\u0435\u0437 \u043b\u043e\u0433\u043e: 18.15%, max_depth=50, || 100\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE_\u0431\u0435\u0437 \u043b\u043e\u0433\u043e: 18.10%, max_depth=30","df54a81f":"import xgboost as xgb\nxb = xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5, learning_rate=0.03, \\\n                      max_depth=12, alpha=1, n_jobs=-1, n_estimators=1000)\nxb.fit(X_train, np.log(y_train+1))\nprint(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, np.exp(xb.predict(X_test))))*100:0.2f}%\")\n\n\n#\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 14.15%,  max_depth=8\n#\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 13.89%,  max_depth=12\n#\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 14.07%,  max_depth=35\n#\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 14.02%,  max_depth=20","28adc073":"estimators = [('xb',xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5, learning_rate=0.03, \\\n                      max_depth=12, alpha=1, n_jobs=-1, n_estimators=1000)),\n              ('xb2',xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5, learning_rate=0.03, \\\n                      max_depth=12, alpha=1, n_jobs=-1, n_estimators=500)),\n              ('cb', CatBoostRegressor(iterations = 2000,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          silent=True,\n                         ))\n            ]\n\n","d8210c59":"st_ensemble = StackingRegressor(estimators=estimators,final_estimator=LinearRegression())\n\n# \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\nst_ensemble.fit(X_train, np.log(y_train))\npredict_e = np.exp(st_ensemble.predict(X_test))\nprint(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_e))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 14.01%: xb1_12_1000, xb2_12_500,-> cb\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 13.80%: xb1_12_1000, xb2_12_500, cb -> LR","fe5c5338":"X_sub_st = stsc.transform(X_sub.drop('sell_id',1))\nX_sub_st = X_sub_st * weights\n# X_sub_st['sell_id']\n","086458ff":"# xb.fit(X_train, np.log(y_train+1))\n# X_train\npred = np.exp(st_ensemble.predict(X_sub_st))","8a70ffda":"predict_submission = np.round(pred,-3).astype('int')\n","05581c04":"sample_submission['price'] = predict_submission\nsample_submission.to_csv(f'submission_2_v{VERSION}.csv', index=False)\nsample_submission.head(10)","e5b972f5":"!ls '..\/input'","a7a030b4":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043d\u0430 \u0431\u0435\u043d\u0437\u0438\u043d\u0435, \u043d\u0430\u0438\u043c\u0435\u043d\u0435\u0435 - \u043d\u0430 \u0433\u0430\u0437\u0443","61ed594b":"# # Model 5: Xgboosting","dc1247d4":"## **CAR_URL**","db37710a":"\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b:\n\n\u0418\u0437 2021\n\n- *\u043d\u0435 \u043d\u0435\u0441\u0443\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0446\u0435\u043d\u044b* - 'image','parsing_unixtime',\n- *\u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435* - 'description', 'equipmentGroups'\n- *\u0434\u0443\u0431\u043b\u0438\u0440\u0443\u044e\u0442 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438* -'model_name', \n- *\u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435* - 'priceCurrency', '\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435'\n","718d12c3":"\u0423 \u043d\u0430\u0441 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c 21 \u043f\u0440\u0438\u0437\u043d\u0430\u043a. \u0418\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 6 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435, 15 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435.","045ebbf8":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e-\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0438\u043c\u0435\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u0440\u0438\u0432\u043e\u0434","60288118":"\u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043c\u0430\u0448\u0438\u043d \u0441 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0440\u043e\u0431\u043a\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0447","fb7c1c62":"# \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","8e32bdec":"\u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u043d\u0435\u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u041d\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430 \u0434\u0435\u0440\u0436\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435","8bb2ebf8":"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c cat_cols:\n- \u0415\u0441\u043b\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u043c\u0430\u043b\u043e, \u0442\u043e \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Dumming,\n- \u0415\u0441\u043b\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u043c\u043d\u043e\u0433\u043e, \u0442\u043e - LabelEncoder \n\n\u041a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c \u043d\u0430 LabelEncoder \u0434\u043e\u0431\u0430\u0432\u0438\u043c bin_cols - \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","1346b345":"# **number_of_doors**","dcbd3aec":"# **fuelType**","ca7213a3":"# **\u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**","4c467d38":"# **mileage**","4c561699":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0431\u0440\u0435\u043d\u0434\u044b-, \u0411\u041c\u0412, Mercedes","b51351c6":"# # Model 3: GradientBoosting","8f2a47ef":"# **engine_power**","ac832e08":"\u0417\u0430\u043c\u0435\u0442\u0438\u043c, \u0447\u0442\u043e vehicle_configuration \u0438 transmis \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435. \u0423\u0434\u0430\u043b\u0438\u043c vehicle_configuration","5fd4cec5":"\u041e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u0440\u044f\u043d\u043e\u0439 \u043a\u043e\u0440\u043e\u0431\u043a\u043e\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f AT","fc1c5b3f":"# # Model 6: StackingRegressor","88b18127":"\u0423\u0447\u0442\u0435\u043c \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u044e \u0438 \u0438\u0437\u043c\u0435\u043d\u0438\u043c \u0446\u0435\u043d\u044b \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u043f\u043e\u0445\u043e\u0436\u0438 \u043d\u0430 \u043e\u0441\u0435\u043d\u044c 2020 \u0433\u043e\u0434\u0430","91a9f4e0":"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0446\u0432\u0435\u0442\u0430 \u043f\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438. \u0421\u0430\u043c\u044b\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435: 1, \u043c\u0435\u043d\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435: 2,\u0435\u0449\u0435 \u043c\u0435\u043d\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435: 3, \u043d\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435: 4","a73ab1e9":"**imp_cat - \u044d\u0442\u043e \u0432\u0435\u0441\u044b \u0434\u043b\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438**","a016afa4":"\n# **bodyType**","50dd85bd":"## Data Preprocessing","ddf1cb59":"# **brand**","3aa3b7c6":"# **owners_qty**","4c8654be":"# # Model 4: Forest","6fbf3a6b":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0438\u043c\u0435\u0435\u0442 5 \u0434\u0432\u0435\u0440\u0435\u0439","9d305f15":"# **engine_volume**","7c4b6287":"# **\u041f\u0420\u041e\u0413\u041d\u041e\u0417 \u0421\u0422\u041e\u0418\u041c\u041e\u0421\u0422\u0418 \u0410\u0412\u0422\u041e\u041c\u041e\u0411\u0418\u041b\u0415\u0419**\n# EDA\n## \u0417\u0430\u0434\u0430\u0447\u0430\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e \u0435\u0433\u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c. \u0414\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u0440\u0438\u043a\u0443 MAPE\n\n\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u043b\u0438 \u043e\u0431\u0430\u0431\u043e\u0442\u043a\u0443 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043a \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e.\n\n\u0422\u0430\u043a\u0436\u0435 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438:\n\n* \u041d\u043e\u0443\u0442\u0431\u0443\u043a, \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0430\u0440\u0441\u0438\u043b\u0438 https:\/\/www.kaggle.com\/tatianamukhidaeva\/prj5-kirill-n-tanya-m-parser\n* \u0421\u043f\u0430\u0440\u0441\u0435\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 https:\/\/www.kaggle.com\/tatianamukhidaeva\/cars-df-v2\n* \u041d\u043e\u0443\u0442\u0431\u0443\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u043b\u0438 EDA \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 https:\/\/www.kaggle.com\/tatianamukhidaeva\/prj5-kirill-n-tanya-m-eda\n\n## \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438","23c37ddb":"**\u041e\u0446\u0435\u043d\u0438\u043c \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e**","b0bb326b":"\u0422\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0443\u0434\u0430\u043b\u0438\u043c \u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","83aff233":"\u0417\u0430\u043c\u0435\u0442\u0438\u043c, \u0447\u0442\u043e \u0432 \u0444\u0430\u0439\u043b\u0435 2020 \u0433\u043e\u0434\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 2021 \u0433\u043e\u0434\u0430. \u041e\u0434\u043d\u0430\u043a\u043e \u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c. \u0422\u0430\u043a\u0436\u0435 \u0446\u0435\u043d\u044b \u0432 2021 \u0433\u043e\u0434\u0443 \u0441\u0438\u043b\u044c\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438\u0441\u044c. \u0423\u0447\u0442\u0435\u043c \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u044e \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b 2020 \u0438 2021 \u0433\u043e\u0434\u0430.","1d59a4cf":"## 1. \u0410\u043d\u0430\u043b\u0438\u0437 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","73e2f4fb":"### \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043a \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044e","3319cf41":"\u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f","942c79b6":"\u0421\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u043a\u0443\u0437\u043e\u0432 \u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a, \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0441\u0435\u0434\u0430\u043d\n\n\u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438,\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c,\u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0438\u0445 \u043a\u0443\u0437\u043e\u0432 \u0442\u0438\u043f\u0430 \"\u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a\"","8b058509":"# \u0412\u044b\u0432\u043e\u0434\u044b:\n\n\u041b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c Xgboosting: 13.69623%, \u043b\u0443\u0447\u0448\u0435 \u0447\u0435\u043c StackingRegression: 13.77556%\n\u041a\u0430\u043a \u043c\u044b \u0443\u0436\u0435 \u043d\u0435 \u0440\u0430\u0437 \u0443\u0431\u0435\u0436\u0434\u0430\u043b\u0438\u0441\u044c, \u0441\u0438\u043b\u044c\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u043b\u0438\u044f\u044e\u0442 \u0441\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0435. \u0421\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0442\u043e\u043b\u044c\u043a\u043e 34 \u0442\u044b\u0441. \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 2021 \u0433\u043e\u0434\u0430, \u0430 \u0432 \u0442\u0435\u0441\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 2020 \u0433\u043e\u0434\u0430. \u0426\u0435\u043d\u044b \u043d\u0430 \u0430\u0432\u0442\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438\u0441\u044c, \u043f\u0440\u0438\u0447\u0435\u043c \u043d\u0435 \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u044f\u043c. \u0421\u0434\u0435\u043b\u0430\u043b\u0438 \u0443\u0447\u0435\u0442 \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u0438 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u043f\u043e \u0431\u0440\u0435\u043d\u0434\u0430\u043c \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0437\u0430 2020 \u0433\u043e\u0434.\n\n\u0412 Exploratory data analysis \u043f\u0440\u043e\u0432\u0435\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f:\n- \u0432\u044b\u0434\u0435\u043b\u0438\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 car_url,\n- \u0432\u044b\u0434\u0435\u043b\u0438\u043b\u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u0446\u0432\u0435\u0442\u043e\u0432 \u043f\u043e-\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438,\n- \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043b\u0438 \u043f\u0440\u043e\u0431\u0435\u0433 \u0432 \u0433\u043e\u0434,\n- \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043b\u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0430\u0432\u0442\u043e,\n- \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.\n\n\u0427\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0435\u0449\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c:\n- \u041c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u043e\u043b\u044f \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430\u0446\u0438\u0438 equipmentGroups, \u043e\u0431\u044b\u0447\u043d\u043e \u043e\u0442 \u044d\u0442\u043e\u0433\u043e \u0446\u0435\u043d\u0430 \u0441\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u0442.\n","41041825":"## Price\n\n\u0423\u0436\u0435 \u0434\u0435\u043b\u0430\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043f\u0440\u0438 \u0443\u0447\u0435\u0442\u0435 \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u0438 \u0434\u043b\u044f train 2021","ec870c8c":"# **type_of_drive**","b5a4c725":"**\u0421\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 2021**\n\n'super_gen'  - \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0438 \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u043e\u0431\u0446\u043e\u0432, \n\n'model_info' - \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 car_url,\n\n'\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435' - \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e  \u0438\u043b\u0438 \u043e\u0431\u0449\u0435\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f (\u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f AJAX), \n\n'vendor' - \u043f\u0440\u043e\u0434\u0430\u0432\u0435\u0446, \u043f\u043e\u043a\u0430 \u0443\u0431\u0435\u0440\u0435\u043c \u044d\u0442\u043e\u0442 \u0441\u0442\u043e\u043b\u0431\u0435\u0446, \n\n'equipment_dict' - \u0430\u043d\u0430\u043b\u043e\u0433 'equipmentGroups', \n\n'complectation_dict' - \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0432 'equipmentGroups'","3827fa0c":"# \u0412\u044b\u0431\u043e\u0440 \u043c\u043e\u0434\u0435\u043b\u0438\n","c96973cc":"**\u0421\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 2020**\n\n'sell_id' - \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0435\u0433\u043e, \u043d\u0430\u043f\u043e\u043b\u043d\u0438\u0432 0\n\n'car_url' - \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c, \u0438\u0437\u043c\u0435\u043d\u0438\u0432 model\n\n'priceCurrency', 'parsing_unixtime', 'complectation_dict', 'equipment_dict', 'image', 'super_gen' - \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c,\n","ba479ce1":"\u0412\u044b\u0431\u0438\u0440\u0435\u043c \u0434\u043b\u044f \u0441\u0442\u0435\u043a\u0430 \u0441\u0430\u043c\u044b\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438,  \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438: Xgboosting, CatBoosting. \u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e.\n\u0414\u043e \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b\u0438 \u0431\u0440\u0430\u0442\u044c \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043c\u043e\u0434\u0435\u043b\u044c CatBoosting, \u043d\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043e\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u0445\u0443\u0436\u0435.\n\n\u0411\u0440\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u0434\u0430\u0436\u0435 \u043f\u0440\u0438 2-3 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u0434\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 30 \u043c\u0438\u043d\u0443\u0442.","093c7d3f":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 model_date, production_date, model_d, production_d \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u0434\u0440\u0443\u0433  \u0434\u0440\u0443\u0433\u043e\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u043d\u0438\u0445: production_d","e40b4d47":"# **customs**","7284f062":"### Log Traget\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u0442\u0430\u0440\u0433\u0435\u0442 \u0432 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c - \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e np.log \u0438 np.exp).    \n\u0412 \u043f\u0440\u0438\u043d\u0446\u0438\u0435\u043f\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u043f\u0440\u0438\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u0443\u0440\u0441 \u0434\u043e\u043b\u043b\u0430\u0440\u0430, \u0435\u0432\u0440\u043e \u0438\u043b\u0438 \u0433\u0440\u0435\u0447\u043a\u0438 :) \u0432 \u0434\u0430\u0442\u0443 \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u0442\u0443 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432 \u0442\u0435\u0441\u0442\u0435 \u0432 **parsing_unixtime**","cf25ad51":"### \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 train \u0438 test","eeeb52b5":"# Setup","a21ed8d0":"\u0421\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 - \u0447\u0451\u0440\u043d\u044b\u0439 \u0438 \u0431\u0435\u043b\u044b\u0439","8e0d5632":"\u041f\u043e\u043b\u0443\u0447\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u0438\u043f\u0435 \u043a\u043e\u0440\u043e\u0431\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447","6032d3fa":"## **vehicle_transmission**","312855f8":"\u0423 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u043d\u0435\u0442 \u0446\u0435\u043d\u044b, \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0443\u043b\u0435\u0432\u0443\u044e \u0446\u0435\u043d\u0443","a96cd74d":"# **steering_wheel**","17821b69":"* body_type - \u0442\u0438\u043f \u043a\u0443\u0437\u043e\u0432\u0430,\n* brand - \u043c\u0430\u0440\u043a\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f,\n* car_url - url \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f\n* color - \u0446\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f,\n* engine_displacement - \u043e\u0431\u044a\u0451\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f,\n* engine_volume - \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f,\n* fuel_type - \u0442\u0438\u043f \u0442\u043e\u043f\u043b\u0438\u0432\u0430,\n* mileage - \u043f\u0440\u043e\u0431\u0435\u0433,\n* model_date - \u0434\u0430\u0442\u0430 \u0440\u0435\u043b\u0438\u0437\u0430 \u043c\u043e\u0434\u0435\u043b\u0438,\n* name - \u0438\u043c\u044f, \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c\n* number_of_doors - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0432\u0435\u0440\u0435\u0439,\n* production_date - \u0434\u0430\u0442\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\n* vehicle_configuration - \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 (\u0422\u0421),\n* vehicle_transmoission - \u0442\u0438\u043f \u043a\u043e\u0440\u043e\u0431\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447,\n* owners_qty - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432,\n* licence - \u043f\u0430\u0441\u043f\u043e\u0440\u0442 \u0422\u0421,\n* type_of_drive - \u0442\u0438\u043f \u043f\u0440\u0438\u0432\u043e\u0434\u0430,\n* steering_wheel - \u0441\u0442\u043e\u0440\u043e\u043d\u0430 \u0440\u0443\u043b\u044f,\n* customs - \u044d\u0442\u0430\u043f \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u043a\u0438,\n* price - \u0446\u0435\u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440,\n* sample - \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0442\u0435\u0441\u0442\u0443 (0) \u0438 \u0442\u0440\u0435\u0439\u043d\u0443 (1),\n","f9f0087b":"# # ***EDA***","5536c630":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b\u0438\u0441\u044c \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437. \u0423 \u043d\u0430\u0441 \u0431\u044b\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438:\n- \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 2020 \u0433\u043e\u0434\u0430\n- \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u044e \u0434\u043b\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 2021 \u0433\u043e\u0434\u0430\n- \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0430\u0432\u0442\u043e \u0441\u0442\u0430\u0440\u0448\u0435 2020 \u0433\u043e\u0434\u0430 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435,\n- \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438,\n- \u0412\u044b\u0431\u043e\u0440 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445: Dumming, LabelEncoding\n- \u041f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c\n- \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0435\u0441 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442.\n\n\u041f\u043e \u043b\u043e\u0433\u0438\u043a\u0435 \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u043b\u0443\u0447\u0448\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435, \u043e\u0434\u043d\u0430\u043a\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \n\n- \u0443\u0447\u0435\u0442 \u0438\u043b\u0438 \u043d\u0435 \u0443\u0447\u0435\u0442 \u0430\u0432\u0442\u043e \u0441\u0442\u0430\u0440\u0448\u0435 2020 \u0433\u043e\u0434\u0430 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u0440\u043e\u0441\u0442\u043e \u0442\u0430\u043a\u0438\u0445 \u0430\u0432\u0442\u043e \u043c\u0430\u043b\u043e \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445.\n\n- \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 2020 \u0433\u043e\u0434\u0430 \u043f\u043e\u0432\u043b\u0438\u044f\u043b\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u043e. \u041c\u0435\u0442\u0440\u0438\u043a\u0430 \u043d\u0430 XBoost \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u0430\u0441\u044c \u0432 submission \u0441 20% \u0434\u043e 13%. \u041e\u0434\u043d\u0430\u043a\u043e \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 13% \u0432 \u043e\u0431\u043e\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445. \u042d\u0442\u043e \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u0436\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \u0442\u043e, \u0447\u0442\u043e \u0446\u0435\u043d\u044b \u0437\u0430 \u0433\u043e\u0434 \u0441\u0438\u043b\u044c\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438\u0441\u044c.\n\n- \u041b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u0445\u0443\u0434\u0448\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c. \u0423\u0431\u0440\u0430\u043b\u0438 \u044d\u0442\u0443 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0443.\n\n- \u0412\u044b\u0431\u043e\u0440 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0432\u044b\u0448\u0435. \u042d\u0442\u043e \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u0430\u043b \u043d\u0435 \u0442\u0430\u043a \u043c\u043d\u043e\u0433\u043e \u043d\u043e\u0432\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432.\n\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#<\/th>\n      <th scope=\"col\">Model<\/th>\n      <th scope=\"col\">\u043e\u0442\u0431\u0440\u043e\u0448\u0435\u043d\u044b \u0441\u0442\u0430\u0440\u0448\u0435 1980<\/th>\n      <th scope=\"col\">\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0432\u0435\u0441\u0430<\/th>\n      <th scope=\"col\">max_depth<\/th>\n      <th scope=\"col\">MAPE<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">1<\/th>\n      <td>CatBoost<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>-<\/td>\n      <td>17.15%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">1<\/th>\n      <td>CatBoost (log res)<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>-<\/td>\n      <td>14.24%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">2<\/th>\n      <td>LinearRegression<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>-<\/td>\n      <td>117.26%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">3<\/th>\n      <td>GradientBoosting<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>30<\/td>\n      <td>14.96%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">4<\/th>\n      <td>RandomForest<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>30<\/td>\n      <td>18.10%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">4<\/th>\n      <td>RandomForest<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>50<\/td>\n      <td>18.15%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">5<\/th>\n      <td>Xgboosting<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>12<\/td>\n      <td>13.89%<\/td>\n    <\/tr>\n      <tr>\n      <th scope=\"row\">5<\/th>\n      <td>Xgboosting<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>20<\/td>\n      <td>14.02%<\/td>\n    <\/tr>\n  <tr>\n      <th scope=\"row\">5<\/th>\n      <td>Xgboosting<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>35<\/td>\n      <td>14.07%<\/td>\n    <\/tr>\n    <tr>\n      <th scope=\"row\">6<\/th>\n      <td>Stacking<\/td>\n      <td>no<\/td>\n      <td>yes<\/td>\n      <td>Stack models: Xb,Xb, Cb. Finish: LR<\/td>\n      <td>13.80<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","3f7e00c4":"## Fit","882df090":"\u0422\u0430\u043a\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0443\u0436\u0435 \u0431\u044b\u043b","89ea1b8f":"# # Model 1 : CatBoost\n![](https:\/\/pbs.twimg.com\/media\/DP-jUCyXcAArRTo.png:large)   \n\n\n\u0423 \u043d\u0430\u0441 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0431\u044b\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 CatBoost \u043e\u0442 \u042f\u043d\u0434\u0435\u043a\u0441\u0430. [https:\/\/catboost.ai](http:\/\/)     \n\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 **CatBoost \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445!**\n\n#### \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0432\u0438\u0434\u0435\u043e \u043e CatBoost (\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c):\n* [\u0414\u043e\u043a\u043b\u0430\u0434 \u043f\u0440\u043e CatBoost](https:\/\/youtu.be\/9ZrfErvm97M)\n* [\u0421\u0432\u0435\u0436\u0438\u0439 \u0422\u0443\u0442\u043e\u0440\u0438\u0430\u043b \u043e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b CatBoost (\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c)](https:\/\/youtu.be\/wQt4kgAOgV0) ","fe16e478":"# **model_date,production_date**","2179c7d5":"# # Model 2 : LinearRegression","4f03efad":"# **color**","eaa836e6":"# Submission","ca26ee83":"## \u0423\u0447\u0435\u0442 \u0438\u043d\u0444\u043b\u044f\u0446\u0438\u0438\n\n\u0421 2020 \u043f\u043e 2021 \u0433\u043e\u0434 \u0446\u0435\u043d\u044b \u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u043d\u044f\u043b\u0438\u0441\u044c, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043d\u0430 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438. \u041f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0431 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0430\u043c:\n- https:\/\/mag.auto.ru\/article\/risepricescalltouchpres\/\n- https:\/\/cenamashin.ru\/statistika\/moskva\/avg_price?seg=1\n\n\u041f\u0440\u0438\u0447\u0435\u043c \u0446\u0435\u043d\u044b \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u0431\u0440\u0435\u043d\u0434\u044b \u043c\u0435\u043d\u044f\u043b\u0438\u0441\u044c \u043f\u043e-\u0440\u0430\u0437\u043d\u043e\u043c\u0443","e7cfb68a":"# \u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","be6d91c5":"# Data","d18132e6":"\u041a \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u0449\u0435 \u0438 \u0442\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e LabelEncoding, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0432 \u043d\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0440\u0430\u0437\u0431\u0440\u043e\u0441 \u0447\u0438\u0441\u0435\u043b","f87bfba3":"## 2. \u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","5bc8f484":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0441\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0430\u043d\u043d\u044b\u0435 ","b7d32736":"# **Gear**","d544ef3a":"# **mileage_per_year**","3d921388":"# **licence**","175529ba":"\u0415\u0441\u043b\u0438 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0430, \u0442\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0441\u0442\u0430\u0432\u0438\u0442\u044c, \u0447\u0442\u043e \u043e\u043d\u0430 \u0435\u0441\u0442\u044c, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043c\u0430\u0448\u0438\u043d\u0430 \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 2 - \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445","4495f06e":"# **vehicle_configuration**","88efc5e9":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043b\u0435\u0432\u043e\u0440\u0443\u043b\u044c\u043d\u044b\u0435","7318a9e5":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0432\u0435\u0441\u0430 \u0432 \u043e\u0434\u0438\u043d \u0441\u0435\u0440\u0438\u0435\u0441. \u041d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0435\u0433\u043e \u0432 list, \u043d\u043e \u0447\u0442\u043e\u0431\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441\u0442\u043e\u044f\u043b\u0438 \u0432 \u0442\u043e\u043c \u0436\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0447\u0442\u043e \u0438 \u0432 data","7b2ee710":"\u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u043d\u0435\u0435 1980 \u0433\u043e\u0434\u0430 \u043e\u0447\u0435\u043d\u044c \u043c\u0430\u043b\u043e. \u041e\u0434\u043d\u0430\u043a\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438 \u043c\u044b \u0443\u043c\u0435\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0446\u0435\u043d\u0443 \u043d\u0430 \u043d\u0438\u0445? \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u044b. \u041d\u043e:\n- \u0432\u043e-\u043f\u0435\u0440\u0432\u044b\u0445: \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e,\n- \u0432\u043e-\u0432\u0442\u043e\u0440\u044b\u0445: \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043f\u043b\u043e\u0445\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0446\u0435\u043d\u044b \u043d\u0430 \u0441\u0442\u043e\u043b\u044c \u0441\u0442\u0430\u0440\u044b\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438, \u0434\u043b\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u044b \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f, \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u0441\u0442\u0430\u043d\u0435\u0442 \u043b\u0443\u0447\u0448\u0435.\n\n\u0412\u044b\u0432\u043e\u0434: \u043f\u0440\u0438\u043c\u0435\u043c \u044d\u0442\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0437\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b"}}