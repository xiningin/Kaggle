{"cell_type":{"26070028":"code","0ab240e8":"code","4a06a2ed":"code","1bc0b73c":"code","0960da90":"code","92716cdb":"code","8a302363":"code","47eba4e2":"code","85da10c1":"code","370f6b5e":"code","1b9d2560":"code","e0ae7f02":"code","34a8b58b":"markdown","06409a69":"markdown","d108c36f":"markdown","7795839b":"markdown","1c41212d":"markdown","7327598e":"markdown","41acbad4":"markdown","5278f4ef":"markdown","5be3b996":"markdown","9ff62ae4":"markdown","90328e52":"markdown","7812fc18":"markdown","3c0b2ee5":"markdown"},"source":{"26070028":"import pandas as pd\npd.set_option('max_rows', 5)\nfrom learntools.advanced_pandas.creating_reading_writing import *","0ab240e8":"check_q1(pd.DataFrame())","4a06a2ed":"# Your code here \nimport pandas as pd #for data frame\nfruitData={'Apples':[30],\n          'Bananas':[21]}\nfd= pd.DataFrame(fruitData,\n columns=['Apples', 'Bananas'])\nprint(fd)","1bc0b73c":"# Your code here\nimport pandas as pd #for data frame\nfruitData2={'Apples':[35,41],\n          'Bananas':[21,34],\n           }\nfd2= pd.DataFrame(fruitData2,\n columns=['Apples', 'Bananas'],\n index=['2017 Sales', '2018 Sales']) #index is for the name of each row\nprint(fd2)\n","0960da90":"# Your code here\nrecipeSeries = pd.Series(['4 cups', '1 cup', '2 large', '1 can'], index=['Flour', 'Milk', 'Eggs', 'Spam'], name='Dinner')\nprint(recipeSeries)","92716cdb":"# Your code here \ncountryFile=pd.read_csv(\"..\/input\/wine-reviews\/winemag-data_first150k.csv\") #reads the CSV file\ncountryFile.shape #shows how many rows and columns are present\n","8a302363":"print(countryFile.head())#prints the first 5 rows of the dataframe","47eba4e2":"# Your code here\nPregnancy=pd.read_excel(\"..\/input\/publicassistance\/xls_files_all\/WICAgencies2014ytd.xls\")\nPregnancy.shape","85da10c1":"print(Pregnancy.head())","370f6b5e":"q6_df = pd.DataFrame({'Cows': [12, 20], 'Goats': [22, 19]}, index=['Year 1', 'Year 2'])","1b9d2560":"# Your code here\nq6_df.to_csv('cows_and_goats.csv')","e0ae7f02":"# Your Code Here\n#reads the SQL data\nimport sqlite3\nconn = sqlite3.connect(\"..\/input\/pitchfork-data\/database.sqlite\")\nreadSQL = pd.read_sql_query(\"SELECT * FROM artists\", conn) #the name of the table is artists\nreadSQL.head()","34a8b58b":"**Exercise 3**: Create a `Series` that looks like this:\n\n```\nFlour     4 cups\nMilk       1 cup\nEggs     2 large\nSpam       1 can\nName: Dinner, dtype: object\n```","06409a69":"# Introduction\nWelcome to the **[Learn Pandas](https:\/\/www.kaggle.com\/learn\/pandas)** track. These hands-on exercises are targeted for someone who has worked with Pandas a little before. \nEach page has a list of `relevant resources` you can use if you get stumped. The top item in each list has been custom-made to help you with the exercises on that page.\n\nThe first step in most data analytics projects is reading the data file. In this section, you'll create `Series` and `DataFrame` objects, both by hand and by reading data files.\n\n# Relevant Resources\n* ** [Creating, Reading and Writing Reference](https:\/\/www.kaggle.com\/residentmario\/creating-reading-and-writing-reference)**\n* [General Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n# Set Up\n\nRun the code cell below to load libraries you will need (including coad to check your answers).","d108c36f":"**Exercise 2**: Create the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/CHPn7ZF.png)","7795839b":"## Keep going\n\nMove on to the **[indexing, selecting and assigning workbook](https:\/\/www.kaggle.com\/kernels\/fork\/587910)**\n\n___\nThis is part of the [Learn Pandas](https:\/\/www.kaggle.com\/learn\/pandas) series.","1c41212d":"For the questions that follow, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nIf you get stuck, you may run the `print(answer_qN())` function to print the answer outright.","7327598e":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","41acbad4":"**Exercise 4**: Read the following `csv` dataset on wine reviews into the a `DataFrame`:\n\n![](https:\/\/i.imgur.com\/74RCZtU.png)\n\nThe filepath to the CSV file is `..\/input\/wine-reviews\/winemag-data_first150k.csv`.","5278f4ef":"**Exercise 7**: This exercise is optional. Read the following `SQL` data into a `DataFrame`:\n\n![](https:\/\/i.imgur.com\/mmvbOT3.png)\n\nThe filepath is `..\/input\/pitchfork-data\/database.sqlite`. Hint: use the `sqlite3` library. The name of the table is `artists`.","5be3b996":"Save this `DataFrame` to disc as a `csv` file with the name `cows_and_goats.csv`.","9ff62ae4":"**Exercise 6**: Suppose we have the following `DataFrame`:","90328e52":"**Exercise 5**: Read the following `xls` sheet into a `DataFrame`: \n\n![](https:\/\/i.imgur.com\/QZJBIBF.png)\n\nThe filepath to the XLS file is `..\/input\/publicassistance\/xls_files_all\/WICAgencies2014ytd.xls`.\n\nHint: the name of the method you need inclues the word `excel`. The name of the sheet is `Pregnant Women Participating`. Don't do any cleanup.","7812fc18":"# Exercises","3c0b2ee5":"**Exercise 1**: Create a `DataFrame` that looks like this:\n\n![](https:\/\/i.imgur.com\/Ax3pp2A.png)"}}