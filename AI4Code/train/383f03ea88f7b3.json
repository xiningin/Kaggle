{"cell_type":{"31416f9e":"code","ab4a133d":"code","f2b678b4":"code","65c078ee":"code","3f0a3673":"code","da39c422":"code","c39e8fd3":"code","617b721f":"code","c7aadc56":"code","d01a2f6a":"code","cf0b4783":"code","786f5e85":"code","f894b2d7":"code","49e9562c":"code","386d84de":"code","6a170602":"code","4696b829":"code","313f6656":"code","21f1f83d":"code","6d16289c":"code","20245fe8":"code","51878688":"code","4c17e82d":"code","32824b85":"markdown","01e2e6a8":"markdown","dab30768":"markdown","fa2dbd09":"markdown","08bbe2c5":"markdown","0647ed75":"markdown","8b534b40":"markdown","c974bf11":"markdown","f739a3cf":"markdown","58190aec":"markdown"},"source":{"31416f9e":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix, f1_score\nimport pickle","ab4a133d":"columns = [\"buying\",\"maintenance\",\"doors\",\"persons\",\"lug_boot\",\"safety\",\"class\"]\ndataset_original = pd.read_csv(r'..\/input\/carevaluationdataset-uci\/car (2).data',sep=',',names=columns)","f2b678b4":"# Copy the dataset, so we can explore it while the original data is safe\ndataset = dataset_original.copy()","65c078ee":"# Let's have a glimpse of our data\ndataset.head()","3f0a3673":"# Let's get some info about the dataset\ndataset.info()","da39c422":"# Let's get some statistical info about the data\ndataset.describe()","c39e8fd3":"# Let's have a look at our labels\/classes\ndataset['class'].unique()","617b721f":"# Let's get our labels\nlabels = dataset['class'] ","c7aadc56":"# Let's drop the labels from the dataset, so that we automatically have\n# our independent features ready\ndataset.drop(columns='class',axis=1,inplace=True)","d01a2f6a":"# Making the Stratified Train Test Split\nX_train, X_test, y_train, y_test = train_test_split(dataset, labels,\n                                                    stratify=labels, \n                                                    test_size=0.25)","cf0b4783":"# Let's create two nested dictionaries to assist us in the process of Label \n# Encoding our features and labels\nreplace_values_features = {\n    \"buying\" : {\"vhigh\": 3, \"high\":2, \"med\":1, \"low\":0},\n    \"maintenance\" : {\"vhigh\": 3, \"high\":2, \"med\":1, \"low\":0},\n    \"doors\" : {\"2\":0, \"3\":1, \"4\":2, \"5more\":3},\n    \"persons\" : {\"2\":0, \"4\":1, \"more\":2},\n    \"lug_boot\" : {\"small\":0, \"med\":1, \"big\":2},\n    \"safety\" : {\"low\":0, \"med\":1, \"high\":2}\n}\n\nreplace_values_labels = {\"unacc\":0, \"acc\":1, \"good\":2, \"vgood\":3}","786f5e85":"# Label encoding the Independent Features\nX_train.replace(to_replace=replace_values_features,inplace=True)","f894b2d7":"  X_train.info()","49e9562c":"y_train.replace(to_replace=replace_values_labels, inplace=True)","386d84de":"# Label encoding the Independent Features\nX_test.replace(to_replace=replace_values_features,inplace=True)","6a170602":"X_test.info()","4696b829":"y_test.replace(to_replace=replace_values_labels, inplace=True)","313f6656":"# We chose the Linear Kernel\nmodel = SVC(kernel='linear') ","21f1f83d":"#Train the model \nmodel.fit(X_train, y_train)","6d16289c":"#Predict the response for test dataset\ny_pred = model.predict(X_test)","20245fe8":"print(\"The F1 score of the model is:\",f1_score(y_test,y_pred,average='weighted'))","51878688":"# Get the Confusion Matrix\nplt.imshow(confusion_matrix(y_test,y_pred))","4c17e82d":"filename = 'finalized_model.h5'\npickle.dump(model, open(filename, 'wb'))","32824b85":"## SVC Model","01e2e6a8":"## Load Packages and the Data","dab30768":"\nIn this notebook, we use Car Evaluation Dataset that consists of the features, namely -- buying(Cost of the Car), maintenance (Maintenance Cost), doors (No. of Doors), persons (No. of Persons), lug_boot (Luggage Boot) and Safety. The [Dataset](https:\/\/archive.ics.uci.edu\/ml\/datasets\/car+evaluation) is available at UCI Machine Learning Repository.\n\nCar Evaluation Database was derived from a simple hierarchical decision model originally developed for the demonstration of DEX, M. Bohanec, V. Rajkovic: Expert system for decision making.\n\nIt's an imbalanced dataset with categorical variables. We shall explore the dataset in the following section!","fa2dbd09":"We get satisfactory score of 84.4 % on the test dataset. However, to improve the performance, using a Random Forest Classifier or Artificial Neural Network can be considered.","08bbe2c5":"Conclusion from the data, so far\n\n* No null values\n\n* The dataset is imbalanced, and hence, metric to consider will be F1 score\n\n* We have all the categorical variables - 4 Object, 2 int  \n\n* We need to perform Label Encoding,but no One-hot encoding since the labels have superior-inferior relationship with each other\n\n","0647ed75":"## Introduction","8b534b40":"## Processing the Train Dataset","c974bf11":"## Evaluating the Results","f739a3cf":"## Save the model","58190aec":"## Processing the Test Set"}}