{"cell_type":{"7e45a00e":"code","c53c57ce":"code","2c36b911":"code","d22ab312":"code","24594f7c":"code","9e1f2bc4":"code","200b2b54":"code","93ecafc8":"code","2e303918":"code","a8429686":"code","b78538a1":"code","d8d52225":"code","824f1cf0":"code","c43b1a2c":"code","a2295b4b":"code","07b6d0a4":"code","5edfb90f":"code","c2ce23e5":"code","6cac08fc":"code","787e0e2c":"code","b8070138":"code","6a7f8f69":"code","44878f90":"markdown","c8827e72":"markdown","aa894f26":"markdown","56bac6c8":"markdown","34a1e7ec":"markdown","023a959e":"markdown","8e29922c":"markdown","8fb0a7ea":"markdown"},"source":{"7e45a00e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n%matplotlib inline","c53c57ce":"import pandas as pd\nimport tensorflow as tf\nfrom tensorflow.keras.optimizers import RMSprop\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.image as mpimg\n","2c36b911":"data = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')\n","d22ab312":"img = mpimg.imread('..\/input\/cassava-leaf-disease-classification\/train_images\/999068805.jpg')","24594f7c":"img.shape","9e1f2bc4":"window_name = 'Sample'\n\nplt.imshow(img)\n","200b2b54":"label_dict = {\n0:\"Cassava Bacterial Blight (CBB)\",\n1:\"Cassava Brown Streak Disease (CBSD)\",\n2:\"Cassava Green Mottle (CGM)\",\n3:\"Cassava Mosaic Disease (CMD)\",\n4:\"Healthy\"\n}","93ecafc8":"data['label'].replace(label_dict, inplace=True)","2e303918":"data.head()","a8429686":"data[data['label'] == label_dict[0]].count()","b78538a1":"data[data['label'] == label_dict[1]].count()","d8d52225":"data[data['label'] == label_dict[2]].count()","824f1cf0":"data[data['label'] == label_dict[3]].count()","c43b1a2c":"data[data['label'] == label_dict[4]].count()","a2295b4b":"from sklearn.model_selection import train_test_split\ntrain, valid = train_test_split(data, test_size=0.3, stratify=data.label)","07b6d0a4":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(rescale = 1\/255.0)\ntrain_data = train_datagen.flow_from_dataframe(train ,directory='..\/input\/cassava-leaf-disease-classification\/train_images',\n                                                    x_col=\"image_id\" , y_col=\"label\", target_size=(300, 300), color_mode=\"rgb\",\n                                                    class_mode=\"categorical\",batch_size=128)\nvalid_data = train_datagen.flow_from_dataframe(valid ,directory='..\/input\/cassava-leaf-disease-classification\/train_images',\n                                                    x_col=\"image_id\" , y_col=\"label\", target_size=(300, 300), color_mode=\"rgb\",\n                                                    class_mode=\"categorical\",batch_size=32)","5edfb90f":"# Model definition\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(32, (3,3), activation = 'relu', input_shape = (300,300,3)),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.25),\n    tf.keras.layers.Conv2D(64, (3,3), activation = 'relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.25),\n    tf.keras.layers.Conv2D(128, (3,3), activation = 'relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.25),\n    tf.keras.layers.Conv2D(64, (3,3), activation = 'relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.25),\n    tf.keras.layers.Conv2D(32, (3,3), activation = 'relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(512, activation = 'relu'),\n    tf.keras.layers.Dense(5, activation = 'softmax')\n])\n\nmodel.compile(optimizer=RMSprop(learning_rate=0.003),\n              loss = 'categorical_crossentropy',\n              metrics = ['accuracy'])\n\n# Stops the model from training if there is no learning\ncallback = tf.keras.callbacks.EarlyStopping(\n    monitor=\"val_loss\",\n    patience=3,\n    restore_best_weights=True\n)","c2ce23e5":"history = model.fit(train_data,\n          epochs = 1,\n          validation_data = valid_data,\n          callbacks = [callback],\n          verbose = 1)","6cac08fc":"model.save('cassava-model.h5')","787e0e2c":"from keras.preprocessing import image\ntest_image = image.load_img('\/kaggle\/input\/cassava-leaf-disease-classification\/test_images\/2216849948.jpg', \n                            target_size = (300, 300))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = model.predict(test_image)","b8070138":"submission_data = pd.DataFrame(columns = ['image_id','label'])\nsubmission_data['image_id'] = os.listdir('..\/input\/cassava-leaf-disease-classification\/test_images')\nsubmission_data['label'] = np.argmax(result)","6a7f8f69":"submission_data.to_csv('submission.csv',index=False)","44878f90":"# Imports","c8827e72":"# Model Definition","aa894f26":"# Generating submission file:","56bac6c8":"# Testing the model","34a1e7ec":"# Data Analysis","023a959e":"# Preprocessing","8e29922c":"# Introduction","8fb0a7ea":"# Training"}}