{"cell_type":{"8bce2285":"code","e4f6c13b":"code","7c89512e":"code","abb53780":"code","99090446":"code","c12d7111":"code","a1c581c4":"code","51d607fb":"code","8bdd054b":"code","8b4612c3":"code","eb8181d6":"code","7b8a4746":"code","cd43211f":"markdown","c872885b":"markdown","3f3dba24":"markdown"},"source":{"8bce2285":"import numpy as np  \nimport pandas as pd  \nimport datetime as dt\nfrom typing import Tuple\n\nimport h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\nh2o.init(max_mem_size='16G')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e4f6c13b":"\ndf_train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/train.csv')\nprint(df_train.shape)\ndf_train.head()\n","7c89512e":"df_test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/test.csv')\nprint(df_test.shape)\ndf_test.head()","abb53780":"df_sub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-mar-2021\/sample_submission.csv')\nprint(df_sub.shape)\ndf_sub.head()","99090446":"df_train = df_train.drop(['id'], axis=1, errors='ignore')\ndf_test = df_test.drop(['id'], axis=1, errors='ignore')\n\nprint(df_train.shape)\nprint(df_test.shape)","c12d7111":"# Target should be boolean, otherwise autoML will perform a regression, not classification\n\ndf_train.target = df_train.target.astype(bool)\n","a1c581c4":"%%time\n\n#Prep the h2o frames\n\ntrain = h2o.H2OFrame(df_train)\ntest = h2o.H2OFrame(df_test)\n\nx = test.columns\ny = 'target'","51d607fb":"# Run AutoML - set num of models and allocated time\n\naml = H2OAutoML(max_models=50, seed=47, max_runtime_secs= 3*3600)\naml.train(x=x, y=y, training_frame=train)","8bdd054b":"# View the AutoML Leaderboard\n\nlb = aml.leaderboard\nlb.head(rows=lb.nrows)  # Print the entire leaderboard instead of default (top 10 rows)","8b4612c3":"# The leader model \naml.leader","eb8181d6":"preds = aml.predict(test)","7b8a4746":"\ndf_sub['target'] = preds['True'].as_data_frame().values.flatten()\ndf_sub.to_csv('h2o_automl_baseline_submission.csv', index=False)\n\ndf_sub.head()","cd43211f":"# Data","c872885b":"# Submit","3f3dba24":"# h2o autoML"}}