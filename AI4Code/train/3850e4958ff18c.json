{"cell_type":{"5c0be167":"code","7c78d6ad":"code","08e4b368":"code","2bb947ee":"code","058c0af6":"code","8b1acd95":"code","8126a8fe":"code","0bd1d802":"code","64130bd4":"code","be9d7abf":"code","8794462b":"code","7f9d6315":"code","aa11aa6f":"code","1c87d958":"code","181f0ed1":"code","d829354b":"code","cecd42c1":"code","6a35ba7b":"code","51d5e60b":"code","32d0b3da":"code","7c4ef759":"code","484e4e81":"code","4ab1aaa8":"code","f72f3d66":"code","ba411418":"code","7a1c64cb":"code","57ef5388":"code","5e7d13a2":"code","fe5c8baf":"code","dacd9341":"markdown"},"source":{"5c0be167":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c78d6ad":"#import necessary libraries\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nimport matplotlib.pyplot as plt","08e4b368":"train=pd.read_csv(\"\/kaggle\/input\/widsdatathon2021\/TrainingWiDS2021.csv\")\ntrain.head()","2bb947ee":"pd.set_option('max_rows', None)","058c0af6":"train.isna().sum()","8b1acd95":"train.shape","8126a8fe":"traincopy=train.copy()\ntraincopy.head()","0bd1d802":"#eliminate features with more than 80% missing values\ntrain=train[train.columns[train.isnull().mean() < 0.8]]","64130bd4":"train.shape","be9d7abf":"train.drop([\"Unnamed: 0\"],axis=1,inplace=True)","8794462b":"train.head()","7f9d6315":"#missingno is library to visulaize missing data\nimport missingno as msno\nmsno.bar(train)","aa11aa6f":"#PandasProfiling is a very handy tool for EDA\ntrainprofile = ProfileReport(train,'EDA')\ntrainprofile","1c87d958":"import plotly.express as px\nfig = px.histogram(train[['age','gender','diabetes_mellitus','bmi']].dropna(), x=\"age\", y=\"diabetes_mellitus\", color=\"gender\",\n                   marginal=\"box\", hover_data=train[['age','gender','diabetes_mellitus','bmi']].columns)\nfig.show()","181f0ed1":"#one hot encoding is a representation of categorical variables as binary vectors\nencoded_training = pd.get_dummies(train)","d829354b":"missing_values=encoded_training.copy()","cecd42c1":"#imputing missing values using SimpleImputer\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy='mean')\nimputer = imputer.fit(missing_values)\ntrainingfinal = pd.DataFrame(imputer.transform(missing_values))","6a35ba7b":"trainingfinal.columns=missing_values.columns","51d5e60b":"trainingfinal.head()","32d0b3da":"trainingfinal.columns.get_loc(\"diabetes_mellitus\")","7c4ef759":"X=trainingfinal.drop([\"diabetes_mellitus\"],axis=1)\ny = trainingfinal.iloc[:,141]","484e4e81":"#selecting top 10 features for analysis\nfrom sklearn.ensemble import ExtraTreesClassifier\nmodel = ExtraTreesClassifier()\nmodel.fit(X,y)\nprint(model.feature_importances_) \nfeat_importances = pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(10).plot(kind='barh')\nplt.show()","4ab1aaa8":"traintop=trainingfinal[[\"d1_bun_min\",\"d1_bun_max\",\"age\",\"bmi\",\"weight\",\"d1_glucose_min\",\"h1_glucose_min\",\"h1_glucose_max\",\"glucose_apache\",\"d1_glucose_max\",\"diabetes_mellitus\"]].copy()","f72f3d66":"traintop.head()","ba411418":"sns.pairplot(traintop)","7a1c64cb":"#Randomly select 50% data for further analysis\ntrainsample=traintop.sample(frac=0.5, random_state=1)","57ef5388":"trainsample.shape","5e7d13a2":"cor=trainsample.corr()","fe5c8baf":"sns.set(rc={'figure.figsize':(15,15)})\nsns.heatmap(cor,annot=True)","dacd9341":"**In this notebook I have done data preprocessing and EDA that is aimed at feature selection and data analysis. This notebook is work in progress as I will be adding various model prediction outcomes as well.**"}}