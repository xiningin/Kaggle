{"cell_type":{"f3886b65":"code","53db10bb":"code","30411a8a":"code","ab2ae4e7":"code","0bfd57cf":"code","d8f691bf":"code","2d57f8bc":"code","c53365c8":"code","6ff9e3f9":"code","7f57952c":"code","b9323827":"code","98a37b33":"code","82e5ccfe":"code","9245eb6e":"code","a47b3624":"code","5d7aadc1":"code","29b4134a":"code","310b78e0":"code","defb3d20":"code","986c86cc":"code","86e5c9c7":"code","989b4501":"code","11444a6c":"code","62e4ebc4":"code","1ca0b263":"code","2943c076":"code","21660b40":"code","7de871f7":"code","9bbfc7c3":"code","7dc60548":"code","84ab7c22":"code","08fbaabb":"code","622de568":"code","90f40f7c":"code","a131cb1a":"code","d7a5f92f":"code","5ac6a799":"code","1154e961":"code","3887e6c3":"code","c5027a02":"code","ef12ffa4":"code","5a325db3":"code","2830e9b2":"code","0100264b":"code","946f52f6":"code","de705ec3":"code","152e4310":"code","f2165ab8":"markdown","cd1e0294":"markdown","bafade6d":"markdown","fb0f09d0":"markdown","3d55a792":"markdown","82bbee02":"markdown"},"source":{"f3886b65":"!pip install altair vega_datasets -q\n!pip install dexplot -q\n!pip install pycomp -q\n!pip install datasist -q\n","53db10bb":"import pandas as pd\nimport numpy as np\nimport altair as alt\nimport dexplot as dxp\nfrom collections import Counter\nimport datasist as ds\nimport matplotlib.pyplot as plt\nplt.xkcd\nfrom pycomp.viz.insights import *\nalt.data_transformers.disable_max_rows()\n%matplotlib inline\n","30411a8a":"from sklearn.model_selection import StratifiedShuffleSplit, KFold, GridSearchCV, RandomizedSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler,RobustScaler\n\n\nimport xgboost as xgb\nimport lightgbm as lgb\n","ab2ae4e7":"train_df = pd.read_csv('\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')","0bfd57cf":"train_df.tail()","d8f691bf":"train_df = ds.feature_engineering.fill_missing_cats(train_df)","2d57f8bc":"ds.structdata.display_missing(train_df)","c53365c8":"ds.structdata.describe(train_df)","6ff9e3f9":"ds.structdata.check_train_test_set(train_df, test_df, index='enrollee_id',col='gender'\n                                )","7f57952c":"ds.visualizations.boxplot(train_df, target='target')","b9323827":"dxp.count('target',data=train_df,cmap='blackbody',figsize=(10,5))","98a37b33":"ds.visualizations.catbox(train_df, target='target')\n","82e5ccfe":"alt.Chart(train_df).mark_bar(color=\"green\").encode(\n    x='education_level',\n    y='training_hours',\n    tooltip=['education_level','training_hours']\n).properties(height=400,width=600,title=\"Bar-Plot\")","9245eb6e":"city_grp=train_df[['city','city_development_index']].groupby('city').agg('sum').sort_values('city_development_index',ascending=False).reset_index()\ncity_grp = city_grp[:10]","a47b3624":"bar = alt.Chart(city_grp).mark_bar().encode(\n    x='city',\n    y='city_development_index',\n    tooltip=['city','city_development_index']\n)\n\nrule = alt.Chart(city_grp).mark_rule(color='red').encode(\n    y='mean(city_development_index):Q',\n    tooltip=['mean(city_development_index):Q']\n)\n\n(bar + rule).properties(height=400,width=600,title=\"Bar plot for City Developement Index\")","5d7aadc1":"dxp.count(val='target', data=train_df,split ='gender' ,figsize=(4,3))","29b4134a":"dxp.count(val='education_level', data=train_df, split='enrolled_university', \n          orientation='h', stacked=True, col='major_discipline')","310b78e0":"dxp.line(x='company_size', y='training_hours', data=train_df,split='education_level', aggfunc='median',figsize=(10,5))","defb3d20":"alt.Chart(train_df).mark_bar().encode(\n    x='average(training_hours)',\n    y='education_level',\n    color='enrolled_university'\n).properties(height=400,width=600,title=\"Bar-Plot\")","986c86cc":"alt.Chart(train_df).mark_bar(opacity=0.7).encode(\n    x='major_discipline:O',\n    y=alt.Y('training_hours:Q', stack=None),\n    color=\"education_level\"\n).properties(height=400,width=600,title=\"Bar-Plot\")","86e5c9c7":"plot_distplot(df=train_df, col='training_hours', hue='target', kind='kde',\n              title='Distribution of traning hrs')","989b4501":"dxp.count('company_size',data = train_df,split = 'company_type',figsize=(10,8),title='Company Size with Company type')","11444a6c":"plot_pie_chart(df=train_df, col='relevent_experience', explode=(0, 0.03),\n               title='Pie chart for Experience')","62e4ebc4":"plot_aggregation(df=train_df, group_col='company_type', value_col='city_development_index', aggreg='mean',\n                 title='Plot for type of company with development index',figsize=(10,12))","1ca0b263":"dxp.count('enrolled_university',data = train_df,split = 'education_level',figsize=(10,8),title='Bar Plot for University Enrollment')","2943c076":"# pair plot\nsns.pairplot(train_df)\nplt.show()","21660b40":"exp = train_df.experience.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=exp[:10].index,y=exp[:10].values)\nplt.xticks(rotation=45)\nplt.title('Most Experienced Data Scientist',color = 'red',fontsize=15)","7de871f7":"jd = train_df.last_new_job.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=jd[:10].index,y=jd[:10].values)\nplt.xticks(rotation=45)\nplt.title('Last Job (in years)',color = 'blue',fontsize=15)","9bbfc7c3":"ds.structdata.display_missing(train_df)","7dc60548":"ds.structdata.display_missing(test_df)","84ab7c22":"coorelation=train_df[[\"city\",\"city_development_index\",\"gender\",\"relevent_experience\",\"enrolled_university\",\"education_level\",\n                   \"major_discipline\",\"experience\",\"company_size\",\"company_type\",\"last_new_job\",\"training_hours\",\"target\"]].corr()\n\nsns.set(font_scale=1.10)\nplt.figure(figsize=(15, 10))\n\nsns.heatmap(coorelation,  linewidths=0.01,annot=True,linecolor=\"red\",cmap='Wistia')\nplt.title('Correlation between features');","08fbaabb":"for f in train_df.columns:\n    if train_df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(train_df[f].values))\n        train_df[f] = lbl.transform(list(train_df[f].values))","622de568":"test_df = ds.feature_engineering.fill_missing_cats(test_df)\ntest_df = ds.feature_engineering.fill_missing_num(test_df)","90f40f7c":"for f in test_df.columns:\n    if test_df[f].dtype=='object': \n        lblt = LabelEncoder()\n        lblt.fit(list(test_df[f].values))\n        test_df[f] = lblt.transform(list(test_df[f].values))","a131cb1a":"x = train_df.drop(['enrollee_id','target'], axis = 1)\ny = train_df['target']\ntrain_data_cols = x.columns.values.tolist()\n\nprint(\"Shape of x :\", x.shape)\nprint(\"Shape of y :\", y.shape)","d7a5f92f":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 7)\nprint(\"Shape of X_train :\", X_train.shape)\nprint(\"Shape of X_test :\", X_test.shape)\nprint(\"Shape of y_train :\", y_train.shape)\nprint(\"Shape of y_test :\", y_test.shape)","5ac6a799":"from imblearn.over_sampling import ADASYN\noversample = ADASYN(random_state=42)\nX_train_resam, y_train_resam = oversample.fit_resample(X_train, y_train)\ncounter = Counter(y_train)\ncounter_ = Counter(y_train_resam)\n\nprint('before oversampling',counter)\nprint('after oversampling' ,counter_)","1154e961":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","3887e6c3":"from catboost import CatBoostClassifier,Pool\nmodel = CatBoostClassifier(learning_rate=0.03)\n\nmodel.fit(X_train_resam,\n          y_train_resam,\n          verbose=False,\n          plot=True)\n","c5027a02":"from sklearn.metrics import f1_score,roc_auc_score\ny_pred_cat = model.predict(X_test)\n\nprint('F1 Score',f1_score(y_test, y_pred_cat,average = 'weighted'))\nroc_score = roc_auc_score(y_test,y_pred_cat)\nprint(\"ROC AUC Score - \",roc_score)","ef12ffa4":"!pip install optuna -q","5a325db3":"import optuna","2830e9b2":"def objective(trial):\n    \n    param = {\n        'custom_loss': 'AUC', \n        'random_state': 101,\n        'iterations' : trial.suggest_int('iterations', 1, 100),\n        'learning_rate': trial.suggest_categorical('learning_rate', [0.001,0.008,0.01,0.02,0.03,0.04,0.05]),\n        'depth': trial.suggest_categorical('max_depth', [1,2,3,4,5]),\n        'l2_leaf_reg' : trial.suggest_int('l2_leaf_reg', 1, 10),\n    }\n    model = CatBoostClassifier(**param)  \n    \n    model.fit(X_train_resam,y_train_resam,eval_set=[(X_test,y_test)],early_stopping_rounds=100,verbose=False)\n    \n    preds = model.predict(X_test)\n    auc = roc_auc_score(y_test,preds)\n    \n    return auc","0100264b":"study = optuna.create_study(direction='minimize')\nstudy.optimize(objective, n_trials=50)\nprint('Number of finished trials:', len(study.trials))\nprint('Best trial:', study.best_trial.params)","946f52f6":"tuned_params=study.best_params   \ntuned_params","de705ec3":"tunedmodel = CatBoostClassifier(**tuned_params)\n\ntunedmodel.fit(X_train_resam,\n          y_train_resam,\n          verbose=False)","152e4310":"y_pred_tuned = tunedmodel.predict(X_test)\n\nprint('F1 Score',f1_score(y_test, y_pred_tuned,average = 'weighted'))\nroc_score = roc_auc_score(y_test,y_pred_tuned,average='weighted')\nprint(\"ROC AUC Score - \",roc_score)","f2165ab8":"<img src = \"https:\/\/media.giphy.com\/media\/WvENXbe6sHAfC\/giphy.gif\">","cd1e0294":"## Step I- Exploratory Data Analysis","bafade6d":"## Step IV Hyper Param Search with Optuna","fb0f09d0":"## Step III Model Building","3d55a792":"<img src = \"https:\/\/media.giphy.com\/media\/Q6l0us2sAAAiL9RMnP\/giphy.gif\">","82bbee02":"## Step II Data Preprocessing"}}