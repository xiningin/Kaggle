{"cell_type":{"18411bea":"code","ccf5bad0":"code","185a5c36":"code","c245b75d":"code","6ad31e49":"code","f0f837a5":"code","6672bd1b":"code","bca9b2a2":"code","56d76ac7":"code","722c5f72":"code","51e5d9f5":"code","a02d3b78":"code","b653dfbf":"code","8157f90e":"code","5fdeb16c":"code","dea29ffa":"code","bd1d11df":"code","4397e52d":"code","4ccbe267":"code","2d476045":"code","f8454e8f":"code","178fb0e9":"code","3d4d8a46":"code","bdff43a6":"code","fcedb50c":"code","86d7587b":"code","4b21924c":"code","74132ddb":"code","87bd9da7":"code","e29f2969":"code","302c2d6a":"code","6616fed9":"code","f1581d9e":"code","a3d8ea80":"code","61561954":"code","b20adcae":"code","6caad873":"code","a36956c2":"code","98141aec":"code","4894b122":"code","7b09f522":"code","40390cec":"code","d7116f1a":"markdown"},"source":{"18411bea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n\n# Any results you write to the current directory are saved as output.","ccf5bad0":"data = pd.read_csv(\"..\/input\/insurance.csv\")","185a5c36":"data.info","c245b75d":"data.corr()","6ad31e49":"data.head(21)","f0f837a5":"data.columns","6672bd1b":"data.age.plot(kind = 'line', color = 'g',label = 'age',linewidth=1,alpha = 1,grid = True,linestyle = ':')\n\ndata.charges.plot(color = 'r',label = 'charges',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\n\n\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')            \nplt.show()\n\n\n\n","bca9b2a2":"data.plot(kind='scatter', x='age', y='charges',alpha = 0.5,color = 'red')\nplt.xlabel('age')              # label = name of label\nplt.ylabel('charges')\nplt.title('age -- charges') ","56d76ac7":"data.age.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","722c5f72":"dictionary = {'python' : 'def','javascript' : 'var'}\nprint(dictionary.keys())\nprint(dictionary.values())","51e5d9f5":"dictionary['java'] = \"null\"    \nprint(dictionary)\ndictionary['c'] = \"int\"       \nprint(dictionary)\ndel dictionary['java']              \nprint(dictionary)\nprint('c' in dictionary)        \ndictionary.clear()                   \nprint(dictionary)","a02d3b78":"x = data['age']>20     # There are only 3 pokemons who have higher defense value than 200\ndata[x]","b653dfbf":"data[np.logical_and(data['age']>20, data['charges']>10000 )]","8157f90e":"data[(data['age']>20) & (data['charges']>10000)]","5fdeb16c":"i = 0\nwhile i != 10 :\n    print(i)\n    i +=1 \nprint(i)","dea29ffa":"li = [1,2,3,4,5]\nfor i in li:\n    print(i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(li):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'python':'def','javascript':'var'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\nfor index,value in data[['age']][0:1].iterrows():\n    print(index,\" : \",value)","bd1d11df":"def tuple_ex():\n     t = (1,2,3)\n     return t\na,b,c = tuple_ex()\nprint(a,b,c)\nprint(a)","4397e52d":"x = 2\ndef f():\n    x = 3\n    return x\nprint(x)\nprint(f())","4ccbe267":"x = 3\ndef f ():\n    y = 2*x\n    return y\nprint(f())","2d476045":"def var1():\n    \n    def var2():\n        x = 2\n        y = 4\n        z = x + y\n        return z\n    return var2()**2\n\nprint(var1())","f8454e8f":"def f(a,b = 1,c = 3):\n    y = a + b + c\n    return y\nprint(f(5))\nprint(f(5,3,4))","178fb0e9":"def f(*args):\n    for i in args:\n        print(i)\nf(1)\nprint(\"\")\nf(1,2,3,4)\n\ndef f(**kwargs):\n    for key,value in kwargs.items():\n        print(key,\"\",value)\nf(samsun = \"good city\",istanbul = \"bad city\")\n\n    ","3d4d8a46":"val1 = lambda x: x**2\nprint(val1(3))\nval2 = lambda x,y,z: x+y+z  \nprint(val2(1,2,3))","bdff43a6":"numbers = [1,2,3]\nx = map(lambda x:x**2,numbers)\nprint(list(x))","fcedb50c":"name = \"yusuf\"\nit = iter(name)\nprint(next(it))\nprint(*it)","86d7587b":"list1 = [1,2,3,4]\nlist2 = [5,6,7,8]\nz = zip(list1,list2)\nprint(z)\nzlist = list(z)\nprint(zlist)","4b21924c":"unzip = zip(*zlist)\nunlist,unlist2 = list(unzip)\nprint(unlist)\nprint(unlist2)\nprint(type(unlist))","74132ddb":"num1 = [1,2,3]\nnum2 = [i * 2 for i in num1]\nprint(num2)","87bd9da7":"num1 = [5,10,15]\nnum2 = [i**2 if i == 5  else i + 4  if i > 7 and i <12 else i - 2 for i in num1]\nprint(num2)\n","e29f2969":"ara","302c2d6a":"threshold = sum(data.charges)\/len(data.charges)\ndata[\"ara\"] = [\"high\" if i > threshold else \"low\" for i in data.charges]\ndata.loc[:10,[\"ara\",\"charges\"]]","6616fed9":"data.shape\n","f1581d9e":"print(data[\"smoker\"].value_counts(dropna = False))","a3d8ea80":"data.describe()","61561954":"data.boxplot(column='charges',by = 'smoker')","b20adcae":"data2 = data.head()\ndata2","6caad873":"melt = pd.melt(frame = data2,id_vars=\"sex\",value_vars=[\"charges\",\"ara\"])\nmelt","a36956c2":"data1 = data.head()\ndata2= data.tail()\nconc = pd.concat([data1,data2],axis =0,ignore_index =True)\nconc","98141aec":"data1 = data[\"age\"].head()\ndata2 = data[\"charges\"].head()\nconcc = pd.concat([data1,data2],axis = 1)\nconcc","4894b122":"data.columns","7b09f522":"data.dtypes","40390cec":"\ndata.dtypes","d7116f1a":"This is my first karnel.Forgive my mistakes,thanks for reading"}}