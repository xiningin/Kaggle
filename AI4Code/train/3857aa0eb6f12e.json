{"cell_type":{"aa38ddc0":"code","f97765bc":"code","3992bcec":"code","2882d83c":"code","dc3b97ce":"code","f4ee9de1":"code","3722d1a8":"code","d6621325":"code","953819d7":"code","c8b0ea31":"code","fc11df7e":"code","6be54a20":"code","cba80fa7":"code","ab8754d9":"code","e2668ed8":"code","a639abd7":"code","9d4fd40d":"code","2d3cb823":"code","d5fc7f85":"code","25a9d86f":"code","c01ab832":"code","8fd99db9":"code","4f6f5048":"code","b5509d0a":"code","5bf8b995":"code","5a4dfd3c":"code","e90d58f8":"code","f9bd9b6d":"code","356f92a3":"code","3aa2c68b":"code","6017c173":"code","c071a85f":"code","f55ec8e8":"code","239fc2d9":"code","df9d28e7":"code","52b0203b":"code","ddb1ed42":"code","a81e1c45":"code","b20f7857":"code","6153ab4c":"code","9cb0bb55":"code","0eba3794":"code","2c8b7876":"code","7b848bb4":"code","39b9b1b0":"code","2d9ae04b":"code","679a0af9":"code","9a142b6f":"code","9afc3e1d":"code","c3a6882f":"code","4d10898d":"code","20541e00":"code","488d1181":"code","b9600d4e":"code","95a5ab1f":"code","a73ef19d":"code","25323ae4":"code","cbf418a0":"code","8de96c1c":"code","3631fcce":"code","04a70d7f":"code","dff9fae2":"code","6ba65b81":"code","3dd538a5":"code","48ee810f":"code","be868cbe":"code","75e0d614":"code","539b57dd":"code","21039b83":"code","4cb061f0":"code","34a78e92":"markdown","54f54948":"markdown","d54645fa":"markdown","46035153":"markdown","30852eb5":"markdown","290cbded":"markdown"},"source":{"aa38ddc0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","f97765bc":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","3992bcec":"train=pd.concat([train,test])","2882d83c":"Sales_Price = train['SalePrice']","dc3b97ce":"Sales_Price = Sales_Price.iloc[0:1460]","f4ee9de1":"train.head()","3722d1a8":"train.drop(['Alley', 'FireplaceQu','PoolQC','Fence', 'MiscFeature'],  axis=1, inplace=True)","d6621325":"train.dropna(axis=1, inplace=True)","953819d7":"train.info()","c8b0ea31":"train['Street'].unique()","fc11df7e":"train['Street'].replace({'Pave': 1, 'Grvl': 2}, inplace=True)","6be54a20":"train['LotShape'].unique()","cba80fa7":"train['LotShape'].replace({'Reg': 1, 'IR1': 2, 'IR2': 3, 'IR3': 4}, inplace=True)","ab8754d9":"train['LandContour'].unique()","e2668ed8":"train['LandContour'].replace({'Lvl': 1, 'Bnk': 2, 'Low': 3, 'HLS': 4}, inplace=True)","a639abd7":"train['LotConfig'].unique()","9d4fd40d":"train['LotConfig'].replace({'Inside': 1, 'FR2': 2, 'Corner': 3, 'CulDSac': 4, 'FR3': 5}, inplace=True)","2d3cb823":"train['LandSlope'].unique()","d5fc7f85":"train['LandSlope'].replace({'Gtl': 1, 'Mod': 2, 'Sev': 3}, inplace=True)","25a9d86f":"train['Neighborhood'].unique()","c01ab832":"train['Neighborhood'].replace({'CollgCr':1, 'Veenker':2, 'Crawfor':3, 'NoRidge':4, 'Mitchel':5, 'Somerst':6,\n       'NWAmes':7, 'OldTown':8, 'BrkSide':9, 'Sawyer':10, 'NridgHt':11, 'NAmes':12,\n       'SawyerW':13, 'IDOTRR':14, 'MeadowV':15, 'Edwards':16, 'Timber':17, 'Gilbert':18,\n       'StoneBr':19, 'ClearCr':20, 'NPkVill':21, 'Blmngtn':22, 'BrDale':23, 'SWISU':24,\n       'Blueste':25}, inplace=True)","8fd99db9":"train['Condition1'].unique()","4f6f5048":"train['Condition1'].replace({'Norm':1, 'Feedr':2, 'PosN':3, 'Artery':4, 'RRAe':5, 'RRNn':6, 'RRAn':7, 'PosA':8,\n       'RRNe':9}, inplace=True)","b5509d0a":"train['Condition2'].unique()","5bf8b995":"train['Condition2'].replace({'Norm':1, 'Artery':2, 'RRNn':3, 'Feedr':4, 'PosN':5, 'PosA':6, 'RRAn':7, 'RRAe':8}, inplace=True)","5a4dfd3c":"train['BldgType'].unique()","e90d58f8":"train['BldgType'].replace({'1Fam': 1, '2fmCon': 2, 'Duplex': 3, 'TwnhsE': 4, 'Twnhs': 5}, inplace=True)","f9bd9b6d":"train['HouseStyle'].unique()","356f92a3":"train['HouseStyle'].replace({'2Story': 1, '1Story':2, '1.5Fin':3, '1.5Unf':4, 'SFoyer':5, 'SLvl':6, '2.5Unf':7, '2.5Fin':8}, inplace=True)","3aa2c68b":"train['RoofStyle'].unique()","6017c173":"train['RoofStyle'].replace({'Gable': 1, 'Hip':2, 'Gambrel':3, 'Mansard':4, 'Flat':5, 'Shed':6}, inplace=True)","c071a85f":"train['RoofMatl'].unique()","f55ec8e8":"train['RoofMatl'].replace({'CompShg':1, 'WdShngl':2, 'Metal':3, 'WdShake':4, 'Membran':5, 'Tar&Grv':6,\n       'Roll':7, 'ClyTile':8}, inplace=True)","239fc2d9":"train['ExterQual'].unique()","df9d28e7":"train['ExterQual'].replace({'Gd':1, 'TA':2, 'Ex':3, 'Fa':4}, inplace=True)","52b0203b":"train['ExterCond'].unique()","ddb1ed42":"train['ExterCond'].replace({'TA':1, 'Gd':2, 'Fa':3, 'Po':4, 'Ex':5}, inplace=True)","a81e1c45":"train['Foundation'].unique()","b20f7857":"train['Foundation'].replace({'PConc':1, 'CBlock':2, 'BrkTil':3, 'Wood':4, 'Slab':5, 'Stone':6}, inplace=True)","6153ab4c":"train['Heating'].unique()","9cb0bb55":"train['Heating'].replace({'GasA':1, 'GasW':2, 'Grav':3, 'Wall':4, 'OthW':5, 'Floor':6}, inplace=True)","0eba3794":"train['HeatingQC'].unique()","2c8b7876":"train['HeatingQC'].replace({'Ex':1, 'Gd':2, 'TA':3, 'Fa':4, 'Po':5}, inplace=True)","7b848bb4":"train['CentralAir'].unique()","39b9b1b0":"train['CentralAir'].replace({'Y':0, 'N':1}, inplace=True)","2d9ae04b":"train['PavedDrive'].unique()","679a0af9":"train['PavedDrive'].replace({'Y':1, 'N':0, 'P':2}, inplace=True)","9a142b6f":"train['SaleCondition'].unique()","9afc3e1d":"train['SaleCondition'].replace({'Normal':1, 'Abnorml':2, 'Partial':3, 'AdjLand':4, 'Alloca':5, 'Family':6}, inplace=True)","c3a6882f":"train.info()","4d10898d":"train_set = train.iloc[0:1460]\ntest_set = train.iloc[1460:2919]","20541e00":"train_set = pd.concat([train_set, Sales_Price],axis=1)\nX = train_set.drop('SalePrice', axis=1)\ny = train_set['SalePrice']","488d1181":"from sklearn.feature_selection import SelectKBest, f_regression, chi2\ntest=SelectKBest(score_func=chi2,k=20)\nfit=test.fit(X,y)\nscore = fit.scores_.reshape(1,46)\nscore = pd.DataFrame(score, columns=X.columns)\nscore = score.transpose()","b9600d4e":"score[score > 190].count()","95a5ab1f":"w = score[score > 190].dropna().reset_index()['index']","a73ef19d":"X = X[w]","25323ae4":"from sklearn.model_selection import train_test_split\nX_train, X_test,y_train,y_test = train_test_split(X,y, test_size=0.1)\n","cbf418a0":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_validate = scaler.transform(X_test)","8de96c1c":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping","3631fcce":"model = Sequential()\nmodel.add(Dense(units = 46, activation = 'relu'))\n#model.add(Dropout(0.5))\n#model.add(Dense(units = 92, activation = 'relu'))\n#model.add(Dropout(0.5))\nmodel.add(Dense(units = 23, activation = 'relu'))\n#model.add(Dropout(0.5))\n#model.add(Dense(units = 10, activation = 'relu'))\n#model.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'relu'))\n\n\n\nmodel.add(Dense(units = 1))\nmodel.compile(optimizer = 'adam', loss = 'mse')\nearly_stop = EarlyStopping(monitor='val_loss', mode= 'min', verbose= 1, patience=25)","04a70d7f":"model.fit(x=X_train, y=y_train, epochs = 10000, validation_data=(X_validate, y_test), batch_size=20, callbacks=[early_stop])","dff9fae2":"loss = pd.DataFrame(model.history.history)","6ba65b81":"loss.plot()","3dd538a5":"check = model.predict(X_validate)\nfrom sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(y_test, check))","48ee810f":"final_test=scaler.transform(test_set[w])","be868cbe":"pred = model.predict(final_test)\n#from sklearn.metrics import mean_squared_error\n#np.sqrt(mean_squared_error(y_test, pred))","75e0d614":"pred = pd.DataFrame(pred)\npred=pd.concat([test_set['Id'], pred], axis=1)","539b57dd":"pred.rename(columns={0: 'SalePrice'},inplace=True)","21039b83":"pred.to_csv('prediction.csv',index=False)","4cb061f0":"pred","34a78e92":"# Checking the datatypes and null values","54f54948":"# Cleaning the Data","d54645fa":"# *Final Test Predictions*","46035153":"# Importing Libraries","30852eb5":"# Hello\n\n* This is my work of predicting house prices \n* The major challenge I faced in this was cleaning the data. \n* I have tried to explain as much as I can as to what I have done to make data more readable to the model.","290cbded":"* There are a total of 81 columns.\n* Out of which these are the following with Null values\n* We will look into the data and see if there is a way we can fill these columns\n* If they are not relevant to predicting the sales price then we will drop them\n\nLotFrontage, Alley, MasVnrType, MasVnrArea,  BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, Electrical, FireplaceQu,GarageType, GarageYrBlt, GarageFinish, GarageQual, GarageCond, PoolQC, Fence, MiscFeature.\n\n* 1-2 missing vaues in some other columns as well. \n* we will not treat them individually. \n* we will simply drop them. "}}