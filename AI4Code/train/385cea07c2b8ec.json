{"cell_type":{"c5402bc7":"code","f6614034":"code","f76c11fe":"code","30599a41":"code","51f1c9ce":"code","6bcff067":"code","6080fadd":"code","e37508c6":"code","8ef23a5a":"code","72e6fc06":"code","639156cc":"code","c7bf4ba7":"code","40057214":"code","269bb593":"code","d75e1e57":"code","3d3661f1":"code","2faa22ee":"code","9099ad9d":"markdown","7798cd6c":"markdown","f5fd2b7e":"markdown"},"source":{"c5402bc7":"from sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns","f6614034":"df = pd.read_csv('\/kaggle\/input\/real-time-advertisers-auction\/Dataset.csv')","f76c11fe":"#calculating CPM\n\ndef weird_division(n, d):\n    return n \/ d if d else 0\n\ndf['CPM'] = df.apply(lambda x: weird_division(((x['total_revenue']*100)),x['measurable_impressions'])*1000 , axis=1)\ndf.drop(columns=['total_revenue'], inplace=True)\ndf = df[df['CPM'] >= 0]\ndf['date'] = pd.to_datetime(df['date'])\ndf.head()","30599a41":"train = df[df['date'] < '2019-06-22']\ntest = df[df['date'] >= '2019-06-22']\ntest_up = test['CPM'].quantile(0.95)\ntest = test[test['CPM'] < test_up ] # remove outliers\ntrain = train[train['CPM'] < test_up] # remove outliers (from train too)\ntrain.shape, test.shape","51f1c9ce":"df['date'].describe()","6bcff067":"train.info()","6080fadd":"pd.concat([train,test]).groupby('date').agg({'CPM':'mean'}).plot()","e37508c6":"num_cols = ['total_impressions', 'viewable_impressions', 'measurable_impressions', 'CPM']","8ef23a5a":"train[num_cols].corr().style.background_gradient(cmap='inferno').set_precision(2)","72e6fc06":"train[num_cols].describe()","639156cc":"train.columns","c7bf4ba7":"cat_cols = ['site_id', 'ad_type_id', 'geo_id', 'device_category_id',\n       'advertiser_id', 'order_id', 'line_item_type_id', 'os_id',\n       'integration_type_id', 'monetization_channel_id', 'ad_unit_id']","40057214":"from catboost import CatBoostRegressor\nfrom sklearn.metrics import mean_squared_error","269bb593":"bad_cols = ['date', 'CPM']\n\nX = train.drop(columns=bad_cols)\ny = train['CPM']\n\nmodel = CatBoostRegressor()\nmodel.fit(X, y, \n          cat_features=cat_cols, \n#           silent=True\n         )","d75e1e57":"y_train_pred = model.predict(X)\ntrain_score = mean_squared_error(y, y_train_pred)\nprint(f\"TRAIN MSE : {train_score:.3f}\")","3d3661f1":"plt.bar(x=model.feature_names_, height=model.feature_importances_)\nmodel.feature_names_","2faa22ee":"X_test = test.drop(columns=bad_cols)\ny_test = test['CPM']\n\ny_pred = model.predict(X_test)\ntest_mse = mean_squared_error(y_test, y_pred)\nprint(f\"TEST MSE: {test_mse}\")","9099ad9d":"> ***HACHU ZACHET***","7798cd6c":"## Build model","f5fd2b7e":"## Lets look on data"}}