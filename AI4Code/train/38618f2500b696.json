{"cell_type":{"842f01c8":"code","4826416a":"code","f0774b2b":"code","fb3e4fa5":"code","8553a715":"code","e13e3fed":"code","5cd7bbfb":"code","7cc71284":"code","27cc5aff":"markdown","b36a4bb3":"markdown"},"source":{"842f01c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4826416a":"df = pd.read_csv('..\/input\/train.csv')\ndf.head()","f0774b2b":"X = df.drop(['label'], axis = 1)\/255.\ny = df['label']","fb3e4fa5":"X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size = .2, random_state = 0)","8553a715":"#RandomForestClassifier\nclf1 = RandomForestClassifier(n_estimators = 250)\nclf1.fit(X_train, y_train)\nprint( clf1.score(X_test, y_test))","e13e3fed":"#NeuralNetworks\nclf2 = MLPClassifier(hidden_layer_sizes = (400, 400, 400))\nclf2.fit(X_train, y_train)\nclf2.score(X_test, y_test)","5cd7bbfb":"#GradientBoostClassifier\nclf3 = GradientBoostingClassifier(n_estimators = 200)\nclf3.fit(X_train, y_train)\nclf3.score(X_test, y_test)","7cc71284":"#Voting\nclf4 = VotingClassifier([('rf', clf1), ('mpl', clf2), ('gbc', clf3)], voting = 'soft')\nclf4.fit(X_train, y_train)\nclf4.score(X_test, y_test)","27cc5aff":"Lets regularize the data","b36a4bb3":"Let us start the classification with different methods and then use the voting classifier to use them"}}