{"cell_type":{"c4741ca6":"code","e352d433":"code","da2437b8":"code","b0cee394":"code","bcc8c28a":"code","ac728233":"code","5b411704":"code","658b6d78":"code","f67ef902":"code","b6a4f751":"code","1e2547f9":"code","4e9d800d":"code","f5256ffa":"code","61724889":"code","c888acf7":"code","1eb66c46":"markdown","71c13d7d":"markdown","e5a06a27":"markdown","dc5fb277":"markdown"},"source":{"c4741ca6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e352d433":"df = pd.read_csv('\/kaggle\/input\/used-cars-price-prediction\/train-data.csv')\ndf.head()","da2437b8":"df.drop('Unnamed: 0',axis = 1,inplace = True)","b0cee394":"kmkg = 0\nkmpl = 0\nfor i in df.Mileage:\n    if str(i).endswith(\"km\/kg\"):\n        kmkg+=1\n    elif str(i).endswith(\"kmpl\"):\n        kmpl+=1\nprint('The number of rows with Km\/Kg : {} '.format(kmkg))\nprint('The number of rows with Km\/Kg : {} '.format(kmpl))","bcc8c28a":"import missingno as msg\nmsg.matrix(df)","ac728233":"df.Mileage","5b411704":"# Same stuff missing for engine,power,seats\ndf.drop('New_Price',axis=1,inplace=True)\ndf.dropna(inplace=True,axis=0)","658b6d78":"df= df[df['Mileage']!= 'nan']","f67ef902":"Correct_Mileage= []\nfor i in df.Mileage:\n    if str(i).endswith('km\/kg'):\n        i = i[:-6]\n        i = float(i)*1.40\n        Correct_Mileage.append(float(i))\n    elif str(i).endswith('kmpl'):\n        i = i[:-6]\n        #print(i)\n        Correct_Mileage.append(float(i))\n#    for unit in str(i).split(\" \"):\n#        print(type(unit))\n#        if unit=='km\/kg':\n#            print('kmkg')","b6a4f751":"df['Mileage']=Correct_Mileage","1e2547f9":"df.head()","4e9d800d":"msg.matrix(df)","f5256ffa":"import plotly.express as px\npx.scatter(df,x = 'Year',y='Kilometers_Driven')","61724889":"# Removing outlier\ndf = df[df['Kilometers_Driven']<6000000]","c888acf7":"px.scatter(df,x = 'Year',y='Kilometers_Driven',color='Kilometers_Driven')","1eb66c46":"# Prediction of Car Price from given data\n**Hi , so this problem seems pretty straightforward with what we are supposed to do**\n\n\nA Regression model will be what I consider to begin with and see where this leads us","71c13d7d":"# **Soooooo , not many in the list to make that great a difference **\nStill gonna do it though....\n\n**But first , let us remove the missing values**","e5a06a27":"Still just a novice learning new stuff.\nPlz Upvote .\nWill keep adding more to the list........","dc5fb277":"If we look at the Mileage Columns,  we see that the column contains 2 units -\na) km\/kg\nb) kmpl\n\nA quick Google search gave me :- \n\n**1 liter of mileage =  710 to 775 grams ~= 742.5**\n"}}