{"cell_type":{"d27354b6":"code","0464a7eb":"code","181413b0":"code","2990fae0":"code","66e664b2":"code","5eb4fa79":"code","ebb033c0":"code","fc5ba362":"code","605b62de":"code","05ea8046":"code","cd86701d":"code","9f2fcaeb":"code","51538373":"code","d56d57de":"code","a1222369":"code","ed90e198":"code","ae8deeaf":"code","70407322":"code","d82c8215":"code","e313dd03":"code","c819fcdc":"code","a7c02b48":"code","53ad031e":"code","abdf4bf1":"code","90c88e38":"code","804e8e46":"code","df0c30b3":"markdown"},"source":{"d27354b6":"import pandas as pd\ndataset=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndataset.head()","0464a7eb":"dataset.info()","181413b0":"dataset.nunique().sort_values(ascending=False)[:5]","2990fae0":"data = dataset.sample(frac=0.8, random_state=42)\ndata_unseen = dataset.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","66e664b2":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","5eb4fa79":"!pip install pycaret","ebb033c0":"from pycaret.classification import *","fc5ba362":"numeric_features=data.columns.tolist()\nnumeric_features.remove('label')\nnumeric_features[:5]","605b62de":"data.label.value_counts()","05ea8046":"exp_clf101 = setup(data = data, target = 'label', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n                   numeric_features=numeric_features)","cd86701d":"lightgbm = create_model('lightgbm')","9f2fcaeb":"print(lightgbm)","51538373":"tuned_lightgbm = tune_model(lightgbm,optimize = 'Accuracy')","d56d57de":"plot_model(tuned_lightgbm, plot = 'auc')","a1222369":"plot_model(tuned_lightgbm, plot = 'pr')","ed90e198":"plot_model(tuned_lightgbm, plot='feature')","ae8deeaf":"plot_model(tuned_lightgbm, plot = 'confusion_matrix')","70407322":"evaluate_model(tuned_lightgbm)","d82c8215":"predict_model(tuned_lightgbm)","e313dd03":"unseen_predictions = predict_model(tuned_lightgbm, data=data_unseen)\nunseen_predictions.head()","c819fcdc":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","a7c02b48":"test=pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest.head()","53ad031e":"sol = predict_model(tuned_lightgbm, data=test)\nsol.head()","abdf4bf1":"final=pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nfinal.head()","90c88e38":"final.Label=sol.Label\nfinal.head()","804e8e46":"final.to_csv('final.csv', index=False)","df0c30b3":"#### Time is constant, so using model which will take less time to execute"}}