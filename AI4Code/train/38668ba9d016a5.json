{"cell_type":{"10c2404c":"code","95f4ccc9":"code","332c520c":"code","053b6dba":"code","05ab33e0":"code","0047d0ab":"code","a262b19b":"code","265f74fd":"code","874cf8b9":"code","0f16f4a9":"code","c27eb1ad":"code","ed03a186":"code","5fbcd19d":"code","e1e927d8":"code","1a05e695":"code","a0cadc2d":"code","053453ad":"code","ed56f32c":"code","55f03d5c":"code","ecef9a6b":"code","8bed4f8e":"code","5fcfe7b2":"code","3758974f":"code","397b5b31":"code","7de759b1":"code","358ae8db":"code","420448dc":"code","235f8c1e":"code","b0b91365":"code","0018fed1":"code","aa2ffa73":"code","d7c843f6":"code","76e8aef9":"code","e738402c":"code","e2f0ebd0":"markdown","fca49a86":"markdown","21266c2b":"markdown","b7912923":"markdown","6c79cfda":"markdown"},"source":{"10c2404c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","95f4ccc9":"dir_targets = '\/kaggle\/input\/playerid-and-targets\/results\/targets_df_'\ntrain_df = pd.read_csv('\/kaggle\/input\/mlb-player-digital-engagement-forecasting\/train.csv')\ndef unpack_json(json_str):\n    return np.nan if pd.isna(json_str) else pd.read_json(json_str)\ntrain_df.tail()","332c520c":"targets_1211 = unpack_json(train_df['nextDayPlayerEngagement'].iloc[1211])\nplayerBoxScores = unpack_json(train_df['playerBoxScores'].iloc[1211])","053b6dba":"targets_1211","05ab33e0":"playerBoxScores","0047d0ab":"playerBoxScores.info()","a262b19b":"playerScore_target = pd.merge(targets_1211,playerBoxScores, how='outer',on='playerId')","265f74fd":"pd.set_option('max_rows', 10)","874cf8b9":"playerScore_target","0f16f4a9":"playerScore_target = playerScore_target.dropna(subset=['gameDate'])","c27eb1ad":"playerScore_target.drop(['gameDate', 'gameTimeUTC', 'teamName', 'playerName', 'positionName', 'positionType'], axis = 1, inplace = True)","ed03a186":"playerScore_target","5fbcd19d":"playerScore_target = playerScore_target.fillna(0)","e1e927d8":"pd.set_option('max_columns', None)\nplayerScore_target","1a05e695":"playerScore_target.info()","a0cadc2d":"playerScore_target_corr = playerScore_target.corr()","053453ad":"for i in ['groundIntoTriplePlay','pickoffs','pickoffsPitching']:\n    print(playerScore_target[i].value_counts())","ed56f32c":"playerScore_target_corr['target1'].sort_values(ascending = False)","55f03d5c":"'''\n\ud55c\uac1c\uc758 corr_matrix\ub97c \ub9cc\ub4e4\uae30\n\ntargets_1211 = unpack_json(train_df['nextDayPlayerEngagement'].iloc[1211])\nplayerBoxScores = unpack_json(train_df['playerBoxScores'].iloc[1211])\nplayerScore_target = pd.merge(targets_1211,playerBoxScores, how='outer',on='playerId')\nplayerScore_target = playerScore_target.dropna(subset=['gameDate'])\nplayerScore_target.drop(['gameDate', 'gameTimeUTC', 'teamName', 'playerName', 'positionName', 'positionType'], axis = 1, inplace = True)\nplayerScore_target = playerScore_target.fillna(0)\nplayerScore_target_corr = playerScore_target.corr()\n\n\n'''\n","ecef9a6b":"# train_df\uc18d playerBoxScores\uac00 NaN\uc778 \uac12 \uac78\ub7ec\ub0b4\uae30\ntrain_df = train_df.dropna(subset=['playerBoxScores'])","8bed4f8e":"train_df.info()","5fcfe7b2":"train_df=train_df.reset_index()\n","3758974f":"train_df.drop(['index'], axis = 1, inplace = True)","397b5b31":"train_df","7de759b1":"# train_df \uc804\ucc98\ub9ac \uba3c\uc800\ud558\uae30\ntrain_df = pd.read_csv('\/kaggle\/input\/mlb-player-digital-engagement-forecasting\/train.csv')\ntrain_df = train_df.dropna(subset=['playerBoxScores'])\ntrain_df=train_df.reset_index()\ntrain_df.drop(['index'], axis = 1, inplace = True)\n\n","358ae8db":"train_df","420448dc":"\ndef playerBoxScores_targets_corr(train_df, start, last):\n    plus = lambda a, b : a + b\n    for i in range(start, last):\n        targets = unpack_json(train_df['nextDayPlayerEngagement'].iloc[i])\n        playerBoxScores = unpack_json(train_df['playerBoxScores'].iloc[i])\n        playerScore_targets = pd.merge(targets, playerBoxScores, how='outer',on='playerId')\n        playerScore_targets = playerScore_targets.dropna(subset=['gameDate'])\n        playerScore_targets.drop(['gameDate', 'gameTimeUTC', 'teamName', 'playerName', 'positionName', 'positionType'], axis = 1, inplace = True)\n        playerScore_targets = playerScore_targets.fillna(0)\n        playerScore_target_corr = playerScore_targets.corr()\n        if i == start:\n            p_t_c = playerScore_target_corr\n        else:\n            p_t_c = p_t_c.combine(playerScore_target_corr, plus)\n        if i%50 == 0:\n            print(i)\n    return p_t_c\n ","235f8c1e":"playerScore_target_corr = playerBoxScores_targets_corr(train_df, 0, 538)","b0b91365":"playerScore_target_corr = playerScore_target_corr.apply(lambda x : x\/538)","0018fed1":"playerScore_target_corr_1 = playerScore_target_corr.loc['target1'].sort_values(ascending = False)","aa2ffa73":"playerScore_target_corr_1[:10]","d7c843f6":"playerScore_target_corr_2 = playerScore_target_corr.loc['target2'].sort_values(ascending = False)\nplayerScore_target_corr_2[:10]","76e8aef9":"playerScore_target_corr_3 = playerScore_target_corr.loc['target3'].sort_values(ascending = False)\nplayerScore_target_corr_3[:10]","e738402c":"playerScore_target_corr_4 = playerScore_target_corr.loc['target4'].sort_values(ascending = False)\nplayerScore_target_corr_4[:10]","e2f0ebd0":"object\ud615 \uc81c\uac70","fca49a86":"playerBoxScores\uac00 NaN\uc778 \ub0a0\uc744 \uc81c\uc678\ud558\uace0 corr\uc744 \ud588\ub354\ub2c8 target\uac04\uc758 \uc5f0\uad00\uc131\uc774 \ub192\uc544\uc9d0\n\n\ud0c0\uac9f\uc744 \uc81c\uc678\ud55c \uacbd\uc6b0 0.2\uc815\ub3c4\uc758 \uc5f0\uad00\uc131\uc744 \ubcf4\uc774\ub294 \uac83\ub4e4\uc774 \uba87\uac1c \uc788\uc74c => \uadf8\ub7ec\ud55c \ud2b9\uc9d5\ub4e4\uc774 \uac8c\uc784 \uad00\ub828\uc774\ubbc0\ub85c \uc120\uc218 \ud3ec\uc9c0\uc158\uacfc \uc5f0\uad00\uc9c0\uc5b4 \ub2e4\uc2dc\ud55c\ubc88 \uc5f0\uad00\uc131\uc744 \ucc45\uc815\ud558\uba74 \uc720\uc758\ubbf8\ud55c \uacb0\uacfc\uac00 \ub098\uc62c\uac83\uc73c\ub85c \uc608\uc0c1","21266c2b":"object\ud615 \uc804\ubd80 \ucf54\ub4dc\uac00 \uc788\uc73c\ubbc0\ub85c \ubc84\ub824\ub3c4 \ub420\ub4ef, \ub0a0\uc9dc\ub294 \uc6b0\uc120 \ubc84\ub9ac\uae30, playerId\ub97c \uae30\uc900\uc73c\ub85c \ucde8\ud569\n\n\nobject : gameDate, gameTimeUTC, teamName, playerName, positionName, positionType","b7912923":"rbi(\ub4dd\uc810\ud0c0)\uac00 target1\uc5d0 \uc5b4\ub290\uc815\ub3c4 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uac83 \uac19\uc74c, \n1211 index\uc5d0\uc11c target1\uacfc target2\uac04\uc758 \uc5f0\uad00\ub3c4\uac00 \ub192\uac8c \uce21\uc815\ub428 => \ub0a0\uc9dc\uc5d0 \ub530\ub77c\uc11c \uac01 target\uac12\ub4e4\uac04\uc758 \uc5f0\uad00\ub3c4\uac00 \ub2ec\ub77c\uc9c0\ub294 \uac83\uc774 \uc544\ub2cc\uac00 \ud558\ub294 \uc758\uc2ec\uc774 \ub4ec\n\n\ntarget\uac12\uacfc \uad00\ub828\ub41c NaN\uc774 3\uac1c \uc788\uc74c => \ud574\uacb0\ud560 \ud544\uc694\uac00 \uc788\uc5b4\ubcf4\uc784  => \ubaa8\ub4e0 \uac12\uc774 0\uc774\uc5b4\uc11c \uadf8\ub7fc \uc5b4\uca54\uc218 \uc5c6\ub2e4\uace0 \ub290\uaef4\uc9d0","6c79cfda":"\uac8c\uc784 \ub0a0\uc9dc\uac00 null\uc778 \uac83\uc740 \uc5c6\uc73c\ubbc0\ub85c 'gameDate'\uac00 NaN\uc774\uba74 \uadf8 \ud589 \uc0ad\uc81c\ud558\uae30"}}