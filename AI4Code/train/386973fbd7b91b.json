{"cell_type":{"4bd245d0":"code","44a6df96":"code","a83988fc":"code","ddfece0e":"code","740be7f3":"code","f13e0592":"code","e2a9dbf3":"code","d14fd5b2":"code","d763ed50":"code","8dfad358":"code","e70b3367":"code","231b9677":"code","0bc5410f":"code","01b89f70":"code","be3b8b05":"code","3088d7a9":"code","e5ff5c11":"code","eece9b1d":"code","e79ef14b":"code","b8d3ba72":"code","0f2aab09":"code","01b4af54":"code","417e3f7c":"code","c58e24c0":"code","d068885f":"code","8cf820e5":"code","b5c807b6":"code","600d55fb":"code","421489ae":"code","532b2c26":"code","674b1816":"code","acaa0d7b":"code","3e2f6c5c":"code","3c9ae89c":"code","cf74c7fd":"markdown","fc5f9e30":"markdown","fd2a4f2e":"markdown"},"source":{"4bd245d0":"!pip install plotly --upgrade\n! pip install chart_studio\n#import plotly\n#plotly.__version__\n","44a6df96":"import plotly\nplotly.__version__","a83988fc":"import chart_studio.plotly as py\nfrom chart_studio.grid_objs import Grid, Column\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\n\nimport pandas as pd\nimport time","ddfece0e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n     \n    for filename in filenames:\n        \n        print(os.path.join(dirname, filename))","740be7f3":"df = pd.read_excel('\/kaggle\/input\/world-development-indicators-world-bank\/health Indicators WDI.xlsx')\ndf.head()","f13e0592":"df.tail()","e2a9dbf3":"df.shape","d14fd5b2":"df.isnull().sum()","d763ed50":"df.dropna(inplace=True)","8dfad358":"df.isnull().sum()","e70b3367":"df.notnull().sum()","231b9677":"cn = df['Country Name'].unique()\ncn","0bc5410f":"df['Country Name'].value_counts()","01b89f70":"df['Country Name'].count()","be3b8b05":"con = df['Continent'].unique()\ncon","3088d7a9":"year = df['Year'].value_counts()\nyear","e5ff5c11":"df['Year'].unique()","eece9b1d":"temp = pd.crosstab([df['Year'],df[\"Population\"]], df['Continent'])\ntemp","e79ef14b":"df.head(2)","b8d3ba72":"import plotly.express as px","0f2aab09":"px.scatter(df, x=\"GDP per capita\", y=\"Current health expenditure per capita\",\n           animation_frame=\"Year\", animation_group=\"Country Name\",\n           size=\"Population\", color=\"Continent\", hover_name=\"Country Name\",\n           log_x=True, size_max=65, range_x=[100,100000], range_y=[25,90])","01b4af54":"fig = px.bar(df, x=\"Continent\", y=\"Population\", color=\"Continent\",\n  animation_frame=\"Year\", animation_group=\"Country Name\", range_y=[0,4000000000])\nfig.show()","417e3f7c":"df.rename(columns = {'Life expectancy at birth, total (years) ': 'Life Expectancy', \n                    'Government expenditure on education, total':'Exp on Edu',\n                     'Domestic private health expenditure per capita' :'Private health exp',\n                     'Domestic general government health expenditure per capita' :'gov health exp'\n                    }, inplace = True)  \n","c58e24c0":"df.columns","d068885f":"df.head(2)","8cf820e5":"years =['1999', '2000', '2010', '2018']","b5c807b6":"# make list of continents\ncontinents = []\nfor continent in df[\"Continent\"]:\n    if continent not in continents:\n        continents.append(continent)\n# make figure\nfig_dict = {\n    \"data\": [],\n    \"layout\": {},\n    \"frames\": []\n}","600d55fb":"# fill in most of layout\nfig_dict[\"layout\"][\"xaxis\"] = {\"range\": [30, 85], \"title\": \"Life Expectancy\"}\nfig_dict[\"layout\"][\"yaxis\"] = {\"title\": \"GDP per capita\", \"type\": \"log\"}\nfig_dict[\"layout\"][\"hovermode\"] = \"closest\"\nfig_dict[\"layout\"][\"sliders\"] = {\n    \"args\": [\n        \"transition\", {\n            \"duration\": 400,\n            \"easing\": \"cubic-in-out\"\n        }\n    ],\n    \"initialValue\": \"1999\",\n    \"plotlycommand\": \"animate\",\n    \"values\": years,\n    \"visible\": True\n}\nfig_dict[\"layout\"][\"updatemenus\"] = [\n    {\n        \"buttons\": [\n            {\n                \"args\": [None, {\"frame\": {\"duration\": 500, \"redraw\": False},\n                                \"fromcurrent\": True, \"transition\": {\"duration\": 300,\n                                                                    \"easing\": \"quadratic-in-out\"}}],\n                \"label\": \"Play\",\n                \"method\": \"animate\"\n            },\n            {\n                \"args\": [[None], {\"frame\": {\"duration\": 0, \"redraw\": False},\n                                  \"mode\": \"immediate\",\n                                  \"transition\": {\"duration\": 0}}],\n                \"label\": \"Pause\",\n                \"method\": \"animate\"\n            }\n        ],\n        \"direction\": \"left\",\n        \"pad\": {\"r\": 10, \"t\": 87},\n        \"showactive\": False,\n        \"type\": \"buttons\",\n        \"x\": 0.1,\n        \"xanchor\": \"right\",\n        \"y\": 0,\n        \"yanchor\": \"top\"\n    }\n]\n\nsliders_dict = {\n    \"active\": 0,\n    \"yanchor\": \"top\",\n    \"xanchor\": \"left\",\n    \"currentvalue\": {\n        \"font\": {\"size\": 20},\n        \"prefix\": \"Year:\",\n        \"visible\": True,\n        \"xanchor\": \"right\"\n    },\n    \"transition\": {\"duration\": 300, \"easing\": \"cubic-in-out\"},\n    \"pad\": {\"b\": 10, \"t\": 50},\n    \"len\": 0.9,\n    \"x\": 0.1,\n    \"y\": 0,\n    \"steps\": []\n}\n\n","421489ae":"df.columns","532b2c26":"# make data\nyear = 1999\nfor continent in continents:\n    dataset_by_year = df[df[\"Year\"] == year]\n    dataset_by_year_and_cont = dataset_by_year[\n        df[\"Continent\"] == continent]\n\n    data_dict = {\n        \"x\": list(dataset_by_year_and_cont[\"Life Expectancy\"]),\n        \"y\": list(dataset_by_year_and_cont[\"GDP per capita\"]),\n        \"mode\": \"markers\",\n        \"text\": list(dataset_by_year_and_cont[\"Country Name\"]),\n        \"marker\": {\n            \"sizemode\": \"area\",\n            \"sizeref\": 200000,\n            \"size\": list(dataset_by_year_and_cont[\"Population\"])\n        },\n        \"name\": continent\n    }\n    fig_dict[\"data\"].append(data_dict)\n\n# make frames\nfor year in years:\n    frame = {\"data\": [], \"name\": str(year)}\n    for continent in continents:\n        dataset_by_year = df[df[\"Year\"] == int(year)]\n        dataset_by_year_and_cont = dataset_by_year[\n            dataset_by_year[\"Continent\"] == continent]\n\n        data_dict = {\n            \"x\": list(dataset_by_year_and_cont[\"Life Expectancy\"]),\n            \"y\": list(dataset_by_year_and_cont[\"GDP per capita\"]),\n            \"mode\": \"markers\",\n            \"text\": list(dataset_by_year_and_cont[\"Country Name\"]),\n            \"marker\": {\n                \"sizemode\": \"area\",\n                \"sizeref\": 200000,\n                \"size\": list(dataset_by_year_and_cont[\"Population\"])\n            },\n            \"name\": continent\n        }\n        frame[\"data\"].append(data_dict)\n\n    fig_dict[\"frames\"].append(frame)\n    slider_step = {\"args\": [\n        [year],\n        {\"frame\": {\"duration\": 300, \"redraw\": False},\n         \"mode\": \"immediate\",\n         \"transition\": {\"duration\": 10000}}\n    ],\n        \"label\": year,\n        \"method\": \"animate\"}\n    sliders_dict[\"steps\"].append(slider_step)\n\n\nfig_dict[\"layout\"][\"sliders\"] = [sliders_dict]\n\nfig = go.Figure(fig_dict)\n\nfig.show()","674b1816":"\nfig = px.choropleth(df, locations=\"Code\",\n                    color=\"Life Expectancy\", \n                    hover_name=\"Country Name\", animation_frame=df[\"Year\"],\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(transition = {'duration': 1000})\nfig.show()","acaa0d7b":"\nfig = px.choropleth(df, locations='Code',\n                    color= 'Population',\n                    hover_name='Country Name', labels={'GDP per capita':'GDP per capita'},\n                    animation_frame=df[\"Year\"],\n                    color_continuous_scale=px.colors.sequential.Agsunset)\nfig.update_layout(transition = {'duration': 10000})\nfig.show()","3e2f6c5c":"df.head(2)","3c9ae89c":"fig = px.choropleth(df, locations='Code',\n                    color= 'GDP per capita',\n                    hover_data=['Country Name','Continent','Exp on Edu'],\n                    animation_frame=df[\"Year\"],\n                    color_continuous_scale=px.colors.sequential.thermal)\nfig.update_layout(transition = {'duration': 10000})\nfig.show()","cf74c7fd":"#### check the null values","fc5f9e30":"#### Drop the null values","fd2a4f2e":"#### Check the unique values of countries"}}