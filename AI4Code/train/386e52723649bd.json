{"cell_type":{"0c4cffbe":"code","ed8c80df":"code","07680a76":"code","0b5715c0":"code","71dbaca9":"code","9e913325":"code","eb1e61cf":"code","588a1d39":"code","1cd6475c":"code","36f20507":"code","ced4540a":"code","6ad844a6":"code","7f832bf2":"code","95ee0205":"code","189069ee":"code","4852d1b8":"code","e42aaab6":"code","0931e39e":"code","42fa4400":"code","ec3f66cd":"code","d700ab99":"markdown","f4584633":"markdown","e1197bfe":"markdown","d4ecc9a4":"markdown","9d8bf490":"markdown","1771c1d4":"markdown","a1038033":"markdown","1a9bbd22":"markdown","11e98a2a":"markdown"},"source":{"0c4cffbe":"import numpy as np \nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport random","ed8c80df":"total = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv')\nconfirm = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_2019_ncov_confirmed.csv')\ndeath = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_2019_ncov_deaths.csv')\nrecovered = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_2019_ncov_recovered.csv')","07680a76":"total.head()","0b5715c0":"confirm.head()","71dbaca9":"confirm = confirm.fillna(0)\ndeath = death.fillna(0)\nrecovered = recovered.fillna(0)","9e913325":"np.any(confirm.isnull())","eb1e61cf":"np.any(death.isnull())","588a1d39":"np.any(recovered.isnull())","1cd6475c":"confirm_total = confirm.sum()[2:]\ndeath_total = death.sum()[2:]\nrecovered_total = recovered.sum()[2:]","36f20507":"df_confirm_total = pd.DataFrame(confirm_total).reset_index()\ndf_confirm_total = df_confirm_total.rename(columns = {'index': 'Time', 0: 'Confirmed'})\n\ndf_death_total = pd.DataFrame(death_total).reset_index()\ndf_death_total = df_death_total.rename(columns = {'index': 'Time', 0: 'Death'})\n\ndf_recovered_total = pd.DataFrame(recovered_total).reset_index()\ndf_recovered_total = df_recovered_total.rename(columns = {'index': 'Time', 0: 'Recovered'})","ced4540a":"df_total = pd.concat([df_confirm_total['Time'], df_confirm_total['Confirmed'], df_death_total['Death'], df_recovered_total['Recovered']], axis=1)\ndf_total['Time'] = pd.to_datetime(df_total['Time'])\ndf_total['Time'] = df_total['Time'].dt.normalize()\ndf_total.set_index('Time')\ndf_total['Death_ratio'] = df_total['Death']\/df_total['Confirmed'] * 100\ndf_total['Recovery_ratio'] = df_total['Recovered']\/df_total['Confirmed'] * 100\ndf_total['change_in_confirmed'] = df_total['Confirmed'].pct_change()\ndf_total.head()","6ad844a6":"fig = plt.figure()\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\nax1.set_title('The number of people in Confirmed, Death and Recovered', fontsize = 18)\nax1.set_xlabel('Date', fontsize = 14)\nax1.set_ylabel('The number of people', fontsize = 14)\n\nax2.set_xlabel('Date', fontsize = 14)\nax2.set_ylabel('Percentage (%)', fontsize = 14)\nax2.set_title('Death rate VS Recovery rate', fontsize = 18)\n\ndf_total.plot(kind = 'line', x = 'Time', y = 'Confirmed', color = 'blue', ax = ax1, figsize = (20,10))\ndf_total.plot(kind = 'line', x = 'Time', y = 'Death', color = 'red', ax = ax1, figsize = (20,10))\ndf_total.plot(kind = 'line', x = 'Time', y = 'Recovered', color = 'Green', ax = ax1, figsize = (20,10))\n\n\ndf_total.plot(kind = 'line', x = 'Time', y = 'Death_ratio', color = 'red', ax = ax2, figsize = (20,10))\ndf_total.plot(kind = 'line', x = 'Time', y = 'Recovery_ratio', color = 'Green', ax = ax2, figsize = (20,10))\n\nfig.text(0.4,0.05, 'Data Source: Johns Hopkins University', fontsize = 10)","7f832bf2":"ini_patient = 41 \nnum_of_people_met_daily = 7\nspecial_treatement_involved_day = 10  \ncity_closed_day = 24","95ee0205":"death_std = np.std(df_total['Death_ratio'])\/100\ndeath_mean = np.mean(df_total['Death_ratio'])\/100\nrecovery_std = np.std(df_total['Recovery_ratio'])\/100\nrecovery_mean = np.mean(df_total['Recovery_ratio'])\/100","189069ee":"def random_walk(n, t = 10 , c = 24):\n    \"\"\" return the day that number of confirmed patient reduced to the half of maximum confirmed patients after breakout, n is the number of breakout day after 12\/31\/2020,\n    t is the speical treatment involved day, c is the city closed day\"\"\"\n    patient = 41\n    con_patient = []\n    for i in range(n):\n        if i < t:\n            patient =  patient * np.random.normal(6.2, 6.43) * (1 + np.random.uniform(0.014, 0.025)) * (1 - np.random.normal(death_mean, death_std))\n            con_patient.append(patient)\n        elif i < c:\n            patient = patient * np.random.normal(6.2, 6.43) * 0.5 * (1 + np.random.uniform(0.014, 0.025)) * (1 - np.random.normal(death_mean, death_std)) * (1 - np.random.normal(recovery_mean, recovery_std))\n            con_patient.append(patient)\n        else: \n            patient = patient * np.random.normal(6.2, 6.43) * 0.1 * (1 + np.random.uniform(0.014, 0.025)) * (1 - np.random.normal(death_mean, death_std)) * (1 - np.random.normal(recovery_mean, recovery_std))\n            con_patient.append(patient)\n    max_patient = max(con_patient)\n    max_patient_loc = con_patient.index(max_patient)\n    for i in range(len(con_patient)):\n        if i > max_patient_loc and con_patient[i] < max_patient\/3:\n            break\n    return i + 1 - max_patient_loc","4852d1b8":"random_walk(274)","e42aaab6":"number_of_simulation = 10000\ndays_after_max_number = []\nfor i in range(number_of_simulation):\n    days_after_max_number.append(random_walk(274))\ndays_after_max_number = pd.Series(days_after_max_number)","0931e39e":"count_days = days_after_max_number.value_counts()\ndf_count_days = pd.DataFrame(count_days).reset_index()\ndf_count_days = df_count_days.rename(columns = {'index': 'days after the date with maximum number of confirmed patients', 0:'Frq'})","42fa4400":"df_count_days['Probability'] = df_count_days['Frq']\/number_of_simulation\ndf_count_days","ec3f66cd":"p = df_count_days.plot.bar(x = 'days after the date with maximum number of confirmed patients', y = 'Probability', figsize = (15,8), legend = False)\np.set_title('How many days will the number of confirmed patients reduces to 50% of maximum number', fontsize = 18)\np.set_xlabel('days after the date with maximum number of confirmed patients', fontsize = 14)\np.set_ylabel('Probability', fontsize = 14)\np.text(7,0.02, 'Data Source: Johns Hopkins University', fontsize = 10)","d700ab99":"# **Import dataset**","f4584633":"#**Clean Data**","e1197bfe":"From the two lines chart above, we can tell the virus has high infection rate. The death rate stays at 2% and recovery rate is growing now. Hopefully the situation is getting better. ","d4ecc9a4":"# **Conclusion**\n\nOver 50% chance, the virus will be reduced to 50% in 2 days once the number of confirmed patients reached to maximum number. \n\nHowever, I acknowledge that this model is based on necessary assumptions and ignores many other variables. The model can only be used for discussion. \n\nI hope the disease breakout could be ended soon. \n\n\u52a0\u6cb9\u6b66\u6c49\uff01","9d8bf490":"# Event Deacription\nOn 12\/31\/2019, there were 59 cases of pneumonia of unknown cause in Wuhan,China. A week after, Chinese authorities identified new virus behind the illness called Coronavirus. 41 of the the initial 59 patients are attacked by this new virus. refer: https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0140673620301835\n\nOn 1\/11\/2020, the first death case was reported. \n\nOn 1\/23\/2020, the city Wuhan has been closed until now. All citizens are restricted in their apartment and community. After, many other major cities are close as well. \n\nAs of 2\/15\/2020, there are over 66581 confirmed cases, 1524 death cases and 8494 recovery cases. Refer: https:\/\/ncov.dxy.cn\/ncovh5\/view\/pneumonia\n\nIn this project, I want to visulize the virus breakout and use Monte Carlo model to simulate its spread.","1771c1d4":"Prepare dataset for data visulization","a1038033":"Calculate mean and standard deviation for death rate and recovery rate","1a9bbd22":"# **Data Visulization**","11e98a2a":"# **Simulation** \n\nQuestion:\n\nWhen will the number of confirmed patients reduced to the half of the maximum number of confirmed patients?.\n\nAssumption\uff1a \n1. Patients cannot be cured without special treatment involved\n2. Patients cannot infect others once dead\n3. The daily death rate and recovery rate is distributed normally\n4. The simulation is based on the data from WHO. \n5. all age of people have the same level of activity level\n\nIn this simulation, I simplify the virus breakout by the model below:\n\n**Initial Phase:** The virus breakout time is on 12\/31\/2019\n\nthere are 41 initial patients on 12\/31\/2019 according to WHO refer: https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0140673620301835\n\n*current patients # = (patients_yesterday) x (the number of people met daily) x (1 + infection_rate) x (1 - death_rate)\n\n**Second Phase**: when the special treatment involved and patient can be cured: \n\n12\/31\/2019 is the first cases confirmed. 1\/9\/2020 is the first day when the virus is defined as a new virus.\n\n*current patients # = (patients_yesterday) x (the number of people met daily * 50%) x (1 + infection_rate) x (1 - death_rate) x (1 - recovery_rate)\n\n**Third Phase**: when many cities are closed\n\n1\/23\/2020 Wuhan government announced that the city is close. 24 days after the first confimed patient\n\n*current patients # = (patients_yesterday) x (the number of people met daily * 10%) x (1 + infection_rate) x (1 - death_rate) x (1 - recovery_rate)\n\nNote: once special treatment involved, people know the virus so that the number of people met will decrease to 50%. Once the city is closed and apartments restricted people's activity, this percentage reduced to 10%\n\n\nwhere: \n\nThe Numeber of people met daily without protection: a normal distribution with mean 6.20 and standard deviation 6.43\n\nrefer: https:\/\/journals.plos.org\/plosone\/article?id=10.1371\/journal.pone.0220443\n\nInfection_rate: a range between 1.4% to 2.5% refer: https:\/\/www.who.int\/news-room\/detail\/23-01-2020-statement-on-the-meeting-of-the-international-health-regulations-(2005)-emergency-committee-regarding-the-outbreak-of-novel-coronavirus-(2019-ncov)\n\nn: the total days of the disease outbreak. This simulation will use the days of 2002 SARS breakout. (totoal 274 days from 11\/15\/2002 to 8\/16\/2003)\n\nrefer: https:\/\/www.ncbi.nlm.nih.gov\/books\/NBK92479\/\n\ndeath_rate ~ (\u03bc1, \u03c31) Derived from current dataset\n\nrecovery_rate ~ (\u03bc2, \u03c32) Derived from current dataset"}}