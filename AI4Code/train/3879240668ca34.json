{"cell_type":{"5dd17805":"code","66f8020a":"code","92575327":"code","7b7093d4":"code","119872c8":"code","33beaeac":"code","9cf0ddbc":"code","8d25e191":"code","c2efa60e":"code","6cc82d20":"code","7d52a070":"code","6a7f25ef":"markdown","f56ce4a1":"markdown","5165b86e":"markdown","19595a82":"markdown","8fff2ef5":"markdown","9ae506e8":"markdown","76778617":"markdown","1c019a18":"markdown","e00f0e2c":"markdown","3bc225f4":"markdown","84a1828e":"markdown"},"source":{"5dd17805":"import pandas as pd\nfrom pandas_profiling import ProfileReport\ndf = pd.read_csv(\"..\/input\/car-price\/datasets_383055_741735_CarPrice_Assignment.csv\")\ndf","66f8020a":"pip install sweetviz","92575327":"import sweetviz as sv\nsweet_report = sv.analyze(df)\nsweet_report.show_html('sweet_report.html')\n","7b7093d4":"df1 = sv.compare(df[102:], df[:102])\ndf1.show_html('Compare.html')","119872c8":"pip install autoviz","33beaeac":"from autoviz.AutoViz_Class import AutoViz_Class\nAV = AutoViz_Class()","9cf0ddbc":"df = AV.AutoViz('..\/input\/car-price\/datasets_383055_741735_CarPrice_Assignment.csv')","8d25e191":"df = AV.AutoViz('..\/input\/car-price\/datasets_383055_741735_CarPrice_Assignment.csv', depVar='highwaympg')","c2efa60e":"pip install pandas-profiling","6cc82d20":"import pandas as pd\nfrom pandas_profiling import ProfileReport\ndf = pd.read_csv(\"\/content\/datasets_383055_741735_CarPrice_Assignment.csv\")\ndf","7d52a070":"design_report = ProfileReport(df)\ndesign_report.to_file(output_file='report.html')","6a7f25ef":"### **to compare two dataframe**","f56ce4a1":"# **pandas profiling**","5165b86e":"## ***Autoviz***","19595a82":"Sweetviz is a python library that focuses on exploring the data with the help of beautiful and high-density visualizations. It not only automates the EDA but is also used for comparing datasets and drawing inferences from it.","8fff2ef5":"### **to analyze all the dataset**","9ae506e8":"# **sweetviz**","76778617":"Exploratory Data Analysis\n\n\nToday is the world where we get lots of libraries and python packages for any computations, calculations, parameters etc. So every data scientist should know about how to present the data, how to show the insights and there are lots of other factors that the data scientist should know.\n\n\nExploratory Data Analysis is the process where we summarize and analyze the main characteristics of dataset by using visual methods. EDA is the first part that the data scientist do, if you are not familiar with EDA, you would not be able to get the insights from the data.\n\n\nNow, I\u2019m telling you that if you don\u2019t know how to analyze the data then its not a big issue, there are some python libraries that automate the EDA process.\n\n\nI will explain only two packages that are designed specially for Exploratory Data Analysis and these are :\n\n\u00d8 Sweetviz\n\n\u00d8 Autoviz\n\nNote:\n\n\u00b7 We use dataset of car price (you can download it from kaggle).\n\n\u00b7 I perform on google colab.\n\n\u00b7 Importing dataset and some libraries:\n\n\nSweetviz\n\nIt is a python library that explore the data by visualization. The main advantage of this library is we can compare datasets and find conclusions on the basis of datasets.\n\nInstall the sweetviz package:\n\n\u2014 \u2014 pip install sweetviz\nWe import the dataset above already, so we are ready to implement\n\n\nThis command import sweetviz package then analyze our dataset that we have change in data frame as df, then we create a file named sweet_analyzed_report that shows the characteristics of dataset (this file will be downloaded automatically for you).\n\n\nIn this report we can easily find what are the different attributes and characteristics like number of values, missing values, distinct values, maximum, minimum, average etc.\n\nFor comparing two datasets\n\nfirst we break the dataset in two parts and then compare it and then save this comparison report.\n\nTwo parts of dataset showing two different colours orange and blue. Here you can see report is easily understandable and prepared in few seconds.\n\n\nAutoviz\n\n\nAs the name indicate autoviz Automatic visualization. Autoviz is open source python library that automatic visualize the relationship of the data. It creates plots and finds the most impactful features.\n\n\nLet\u2019s start \u2014 -\n\n\nInstall the package autoviz.\n\n\u2014 \u2014 pip install autoviz\n\nImport autoviz class from autoviz and then create instance\/object of autoviz.\n\nfrom autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()\n\nProvide the dataset for auto visualization\n\n\nThis report contains the following attributes:\n- Pairwise scatter plot of all continuous variables\n- Histograms(KDE plots) of all continuous variables\n- Violin plots of all continuous variables\n- Heatmap of continuous variables\n\nIf you want the plots according to the dependent variable then there is a parameter called depvar. Here is the code\n\ndf=AV.AutoViz(\u2018\/content\/datasets_383055_741735_CarPrice_Assignment.csv\u2019, depVar=\u2019highwaympg\u2019)\n\nnow it will show the plots according to our dependent variable.\n\nnow implement in this notebook.\n\n","1c019a18":"If we know the dependent variable in the dataset which is dependent on other variables, then we can pass it as an argument and visualize the data according to the Dependent Variable. For eg. If we consider \u201chighway-mpg\u201d as a dependent variable then we will use the below-given command to visualize the data according to the dependent variable.**bold text**","e00f0e2c":"If you are working on kaggle then you can download this file from kaggle output folder. After downloading this file you can run it on your browser","3bc225f4":"The output is same as previous one. Download it and run it on your browser :)","84a1828e":"Autoviz is an open-source python library that mainly works on visualizing the relationship of the data, it can find the most impactful features and plot creative visualization in just one line of code. Autoviz is incredibly fast and highly useful."}}