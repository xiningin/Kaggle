{"cell_type":{"7709ad8b":"code","a5e9bcc0":"code","40e12173":"code","eca44c5a":"code","17b62352":"code","25a3d168":"code","9b81a6c1":"code","181b46a5":"code","a67cf5d3":"code","850cd061":"code","100ed898":"markdown","ab33d545":"markdown","63b2bd5b":"markdown","5b6cbe6f":"markdown"},"source":{"7709ad8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns #I added for visualization\nimport matplotlib.pyplot as plt \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# Any results you write to the current directory are saved as output.","a5e9bcc0":"df = pd.read_csv(\"\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2019-08-12.csv\")\ndf.head()","40e12173":"df.info()","eca44c5a":"df.corr()","17b62352":"#correlation map\nf,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(df.corr(),annot =True,linewidths=5,fmt= '.1f',ax=ax)\nplt.show()","25a3d168":"x=df[(df['Open']>5000)&(df['Open']<10000)&(df['Close']<10000 )&(df['Close']>5000)]","9b81a6c1":"x.head(10)","181b46a5":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\nx.Open.plot(kind = 'line', color = 'g',label = 'Open',linewidth=5,alpha = 0.5,grid = True,linestyle = ':')\nx.Close.plot(color = 'r',label = 'Close',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","a67cf5d3":"# Scatter Plot \n# x = Open, y = Close\nx.plot(kind='scatter', x='Open', y='Close',alpha = 0.9,color = 'red')\nplt.xlabel('Open')              # label = name of label\nplt.ylabel('Close')\nplt.title('Open Close Scatter Plot')            # title = title of plot\nplt.show()","850cd061":"# Histogram\n# bins = number of bar in figure\nx.Open.plot(kind = 'hist',bins = 120,figsize = (12,12),color=\"r\")\nplt.show()","100ed898":"> First of all, I prepared the Correlation Map.\n> >  Then I checked therelationships between 'Open' with 'Close' .(Correlation Rate=1)\n> > > And I chose to analyze the process between 10000 and 5000.\n","ab33d545":"* No fluctuation in the range of 3,6 to 3,8.","63b2bd5b":"* 'Open' and 'Close' are in direct proportion","5b6cbe6f":"The Highest Timestamp has been observed between 6000 and 7000."}}