{"cell_type":{"3b3c7043":"code","634ae17f":"code","545dbdd2":"code","1ea4e2e5":"code","f44559c1":"code","57f37711":"code","d7e4b7ef":"code","3ff01f9d":"code","e82ca76a":"code","6d6bc67d":"code","a7a79cdd":"code","e8701572":"code","653b7bfe":"code","dcfa635d":"code","4710afb1":"code","052c1c95":"code","10e3c10b":"code","442c5f86":"code","e4e40605":"markdown","0b4d510c":"markdown","e8b3f591":"markdown","c56bc24d":"markdown","232cdee8":"markdown","7cd22501":"markdown","065d679a":"markdown","9bbbeb42":"markdown","3fe277c7":"markdown","3b4344aa":"markdown","89127870":"markdown","9902b99a":"markdown","44adae4a":"markdown","0c0640ae":"markdown","3b9accb0":"markdown","0a805d1b":"markdown","7f796461":"markdown","62dd6650":"markdown","af721811":"markdown","fdbb50be":"markdown","ef74e638":"markdown","901e7ae1":"markdown","4eeac753":"markdown"},"source":{"3b3c7043":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans","634ae17f":"countries=pd.read_csv(r'\/kaggle\/input\/categorical-country-geotags\/Categorical.csv')\ncountries.head()","545dbdd2":"plt.figure(figsize=(8,8))\nsns.scatterplot(x=\"Longitude\",y=\"Latitude\",data=countries)\nplt.xlim(-180,180)\nplt.ylim(-90, 90)\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.show()","1ea4e2e5":"x = countries.iloc[:,1:3]\nx.head()","f44559c1":"kmeans = KMeans(4)\nkmeans.fit(x)","57f37711":"clusters=kmeans.fit_predict(x)\n\nclusters","d7e4b7ef":"clusters_data=countries.copy()\nclusters_data['Cluster_4']=clusters\nclusters_data.head()","3ff01f9d":"clusters=kmeans.fit_predict(x)\nclusters_data['Cluster_4']=clusters\nplt.figure(figsize=(8,8))\nplt.scatter(countries[\"Longitude\"],countries[\"Latitude\"],c=clusters_data['Cluster_4'],cmap='rainbow')\nplt.title(\"Data with 9 clusters\") \nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.xlim(-180,180)\nplt.ylim(-90, 90)\nplt.show()\n","e82ca76a":"kmeans.inertia_","6d6bc67d":"wcss = []\n# 'cl_num' is a that keeps track the highest number of clusters we want to use the WCSS method for.\n# Note that 'range' doesn't include the upper boundery\ncl_num = 10\nfor i in range (1,cl_num):\n    kmeans= KMeans(i)\n    kmeans.fit(x)\n    wcss_iter = kmeans.inertia_\n    wcss.append(wcss_iter)","a7a79cdd":"wcss","e8701572":"number_clusters = range(1,cl_num)\nplt.plot(number_clusters, wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('Within-cluster Sum of Squares')","653b7bfe":"kmeans = KMeans(2)\nkmeans.fit(x)","dcfa635d":"\nclusters=kmeans.fit_predict(x)\nclusters_data['Cluster_2']=clusters\nplt.scatter(countries[\"Longitude\"],countries[\"Latitude\"],c=clusters_data['Cluster_2'],cmap='rainbow')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(\"Data with 2 clusters\") \nplt.xlim(-180,180)\nplt.ylim(-90, 90)\nplt.show()","4710afb1":"kmeans = KMeans(3)\nkmeans.fit(x)","052c1c95":"\nclusters=kmeans.fit_predict(x)\nclusters_data['Cluster_3']=clusters\nplt.scatter(countries[\"Longitude\"],countries[\"Latitude\"],c=clusters_data['Cluster_3'],cmap='rainbow')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(\"Data with 3 clusters\") \nplt.xlim(-180,180)\nplt.ylim(-90, 90)\nplt.show()","10e3c10b":"clusters_data.head()","442c5f86":"plt.figure(figsize=(25, 20))\nplt.subplot(2,1,1)\nplt.scatter(countries[\"Longitude\"],countries[\"Latitude\"],c=clusters_data['Cluster_2'],cmap='rainbow')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(\"Data with 2 clusters\") \nplt.xlim(-180,180)\nplt.ylim(-90, 90)\nplt.subplot(2,1,2)\nplt.scatter(countries[\"Longitude\"],countries[\"Latitude\"],c=clusters_data['Cluster_3'],cmap='rainbow')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(\"Data with 3 clusters\") \nplt.xlim(-180,180)\nplt.ylim(-90, 90)\n\nplt.show()","e4e40605":"# How to Choose the Number of Clusters","0b4d510c":"### WCSS","e8b3f591":"Plot the <i>'Longtitude'<\/i> and <i>'Latitude'<\/i> columns. ","c56bc24d":"Write a loop that calculates and saves the WCSS for any number of clusters from 1 up to 10 (or more if you wish).","232cdee8":"## Plot the data","7cd22501":"## Clustering","065d679a":"Based on the Elbow Curve, plot several graphs with the appropriate amounts of clusters you believe would best fit the data.","9bbbeb42":"Use 4 clusters initially.","3fe277c7":"## Plot the data","3b4344aa":"Plot the data once again but separate the data by the clusters we defined.  ","89127870":"Use the ingerated <i>sklearn<\/i> method <i> 'inertia_' <\/i>.","9902b99a":"### Clustering results","44adae4a":"## Select the features","0c0640ae":"Load data from the csv file: <i> 'Categorical.csv'<\/i>.","3b9accb0":"## Load the data","0a805d1b":"Make sure to select the appropriate features since we are no longer using the categorical variable for our clustering but rather <i>'Longitude'<\/i> and <i>'Laditude'<\/i>.","7f796461":"<i>Hint: we already created the scatter plot for 4 clusters, so we only have to slightly alter our code.<\/i>","62dd6650":"Compare the scatter plots to determine which one to use in our further analysis. ","af721811":"Using the same code as in the previous exercise, find the WCSS for clustering solutions with 1 to 10 clusters (you can try with more if you wish).\n\nFind the most suitable solutions, run them and compare the results.","fdbb50be":"## Selecting the number of clusters","ef74e638":"### The Elbow Method","901e7ae1":"Plot the <i>'Longtitude'<\/i> and <i>'Latitude'<\/i> columns. ","4eeac753":"## Import the relevant libraries"}}