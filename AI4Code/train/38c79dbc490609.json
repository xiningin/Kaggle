{"cell_type":{"3ddea618":"code","456b605e":"code","9f2c483c":"code","83fee2b6":"code","560a3cbb":"code","9811e496":"code","8087d974":"code","78fc93b3":"code","e629fcac":"code","f02d5367":"code","aee4891d":"code","b39583d0":"code","4d55d904":"code","85704dd1":"code","ec48297c":"code","47d410e3":"code","f1e5a099":"code","62845859":"code","b6e72f88":"code","5cba62c2":"code","f04e5096":"code","4a8e5f04":"code","84ec4359":"code","d07753f8":"markdown","e737c9c3":"markdown","008b379d":"markdown","763d4bb9":"markdown","cac81a9a":"markdown","228c1a8e":"markdown","e763bf4d":"markdown","9408b664":"markdown","09c20523":"markdown","eb061fc1":"markdown","c3b3c71e":"markdown","d4c89d12":"markdown","dc839213":"markdown","6e666a3b":"markdown"},"source":{"3ddea618":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","456b605e":"world_data=pd.read_csv('\/kaggle\/input\/covid19-data\/worldometer_data.csv')\ncovid19_data=pd.read_csv('\/kaggle\/input\/covid19-data\/covid_19_clean_complete.csv')\ndaywise_data=pd.read_csv('\/kaggle\/input\/covid19-data\/day_wise.csv')\ncountrywise_data=pd.read_csv('\/kaggle\/input\/covid19-data\/country_wise_latest.csv')\nusa_Data=pd.read_csv('\/kaggle\/input\/covid19-data\/usa_country_wise.csv')\ngrouped_data=pd.read_csv('\/kaggle\/input\/covid19-data\/full_grouped.csv')","9f2c483c":"world_data.head()","83fee2b6":"world_data.columns","560a3cbb":"import plotly.express as px","9811e496":"columns=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\nfor i in columns:\n         fig=px.treemap(world_data.iloc[0:20],values=i,path=['Country\/Region'],title='Treemap representation of different countries w.r.t. to their {}'.format(i))\n         fig.show()","8087d974":"daywise_data.head()","78fc93b3":"px.line(daywise_data,x='Date',y=['Confirmed','Deaths','Recovered','Active'],title='Covid cases w.r.t data',template='plotly_dark')","e629fcac":"pop_test_ratio=world_data['Population']\/world_data['TotalTests'].iloc[0:20]\npop_test_ratio","f02d5367":"fig=px.bar(world_data.iloc[0:20],x='Country\/Region',y=pop_test_ratio[0:20],color='Country\/Region',title='Population to tests done ratio')\nfig.show()","aee4891d":"px.bar(world_data.iloc[0:20],x='Country\/Region',y=['Serious,Critical','TotalDeaths','TotalRecovered','ActiveCases','TotalCases'])","b39583d0":"fig=px.bar(world_data.iloc[0:20],y='Country\/Region',x='TotalCases',color='TotalCases',text='TotalCases',title='Top 20 countries of total confirmed cases',template='plotly_dark')\nfig.show()","4d55d904":"world_data.sort_values(by='TotalDeaths',ascending=False)","85704dd1":"fig=px.bar(world_data.sort_values(by='TotalDeaths',ascending=False)[0:20],y='Country\/Region',x='TotalDeaths',color='TotalDeaths',text='TotalDeaths',title='Top 20 countries of total deaths',template='plotly_dark')\nfig.show()","ec48297c":"fig=px.bar(world_data.sort_values(by='ActiveCases',ascending=False)[0:20],y='Country\/Region',x='TotalDeaths',color='ActiveCases',text='ActiveCases',title='Top 20 countries of active cases',template='plotly_dark')\nfig.show()","47d410e3":"fig=px.bar(world_data.sort_values(by='TotalRecovered',ascending=False)[0:20],y='Country\/Region',x='TotalRecovered',color='TotalRecovered',text='TotalRecovered',title='Top 20 countries of total recovered',template='plotly_dark')\nfig.show()","f1e5a099":"labels=world_data[0:15]['Country\/Region'].values\ncases=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\nfor i in cases:\n    fig=px.pie(world_data[0:15],values=i,names=labels,hole=0.4,title=\"{} recoreded w.r.t to WHO region of 15 worst affected countries\".format(i))\n    fig.show()","62845859":"deaths_to_confirmed=world_data['TotalDeaths']\/world_data['TotalCases']","b6e72f88":"px.bar(world_data,x='Country\/Region',y=deaths_to_confirmed,title='Deaths to confirmed ratio of worst affected countries')","5cba62c2":"deaths_to_recovered=world_data['TotalDeaths']\/world_data['TotalRecovered']\npx.bar(world_data,x='Country\/Region',y=deaths_to_recovered,title='Deaths to recovered ratio of worst affected countries')","f04e5096":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go","4a8e5f04":"def country_visualisation(df,country):\n    data=df[df['Country\/Region']==country]\n    automated_data=data.loc[:,['Date','Confirmed','Deaths','Recovered','Active']]\n    \n    fig=make_subplots(rows=1,cols=4,subplot_titles=('Confirmed','Active','Recovered','Deaths'))\n    \n    fig.add_trace(\n    go.Scatter(name=\"Confirmed\",x=automated_data['Date'],y=automated_data['Confirmed']),row=1,col=1\n    )\n    \n    fig.add_trace(\n    go.Scatter(name=\"Deaths\",x=automated_data['Date'],y=automated_data['Deaths']),row=1,col=2\n    )\n    \n    fig.add_trace(\n    go.Scatter(name=\"Recovered\",x=automated_data['Date'],y=automated_data['Recovered']),row=1,col=3\n    )\n    \n    fig.add_trace(\n    go.Scatter(name=\"Active\",x=automated_data['Date'],y=automated_data['Active']),row=1,col=4\n    )\n    \n    fig.update_layout(height=600,width=1000,title_text=\"Date vs Recorded cases of {}\".format(country),template='plotly_dark')\n    fig.show()","84ec4359":"country_visualisation(grouped_data,'Brazil')","d07753f8":"**What is the trend of Confirmed Deaths Recovered Active cases**","e737c9c3":"**Pie Chart Representation of stats of worst affected countries**","008b379d":"**20 countries that are badly affected by corona**","763d4bb9":"**Top 20 countries of Total Active cases**","cac81a9a":"**Top 20 countries of Total Deaths**","228c1a8e":"# **Visualize Confirmed, Active, Recovered , Deaths Cases(entire statistics ) of a particular country**","e763bf4d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9408b664":"# Which Country has maximum Total cases, Deaths, Recovered & active cases\n**lets create TreeMap Representation of our data**","09c20523":"**Top 20 countries of total confirmed cases**","eb061fc1":"**Deaths to Recovered ratio**","c3b3c71e":"**Top 20 countries of Total Recovered cases**","d4c89d12":"# **Find 20 most affected countries**","dc839213":"**Deaths to Confirmed ratio**","6e666a3b":"**BarPlot Representation of Population to Tests Done Ratio**\n"}}