{"cell_type":{"0b6d677a":"code","f8682073":"code","64291b09":"code","afe48ff0":"code","061e3517":"code","90388c14":"code","f389be81":"code","c823b360":"code","fb9a32bb":"code","8716879b":"code","efe68c0b":"code","30a6ac0c":"code","b71e219f":"code","f601c38f":"markdown","0c0c972a":"markdown","d24d1a60":"markdown","223e4036":"markdown","c244acc9":"markdown","af40ff56":"markdown","758f89c8":"markdown","6deaec18":"markdown","3d81793d":"markdown","965cc0a3":"markdown","010119ea":"markdown","fcac57e9":"markdown","437a59fe":"markdown"},"source":{"0b6d677a":"import pandas as pd\nimport numpy as np\nimport wandb\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\")","f8682073":"# Get Apple stock price data from https:\/\/www.macrotrends.net\/stocks\/charts\/AAPL\/apple\/stock-price-history\n# Read in dataset\napple = pd.read_csv(\"..\/input\/kernel-files\/apple.csv\")\napple = apple[-1000:]","64291b09":"# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"metrics\")\n\n# Log the metric\nfor price in apple['close']:\n    wandb.log({\"Stock Price\": price})","afe48ff0":"import matplotlib.pyplot as plt\nfibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\nplt.plot(fibonacci)\nplt.ylabel('some interesting numbers')\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"plots\")\nwandb.log({\"plot\": plt})","061e3517":"# Initialize a new run\nfibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"histograms\")\nwandb.log({\"histograms\": wandb.Histogram(fibonacci)})","90388c14":"from matplotlib import pyplot as plt\npath_to_img = \"..\/input\/kernel-files\/cafe.jpg\"\nim = plt.imread(path_to_img)\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"images\")\nwandb.log({\"img\": [wandb.Image(im, caption=\"Cafe\")]})","f389be81":"path_to_video = \"..\/input\/kernel-files\/openai-gym.mp4\"\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"videos\")\nwandb.log({\"video\": wandb.Video(path_to_video, fps=4, format=\"gif\")})","c823b360":"from scipy.io import wavfile\npath_to_audio = \"..\/input\/kernel-files\/piano.wav\"\n\n# Initialize a new run\nwandb.init(project=\"visualize-predictions\", name=\"audio\")\nwandb.log({\"examples\": [wandb.Audio(path_to_audio, caption=\"Piano\", sample_rate=32)]})","fb9a32bb":"# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"tables\")\n\n# Method 1\ndata = [[\"I love my phone\", \"1\", \"1\"],[\"My phone sucks\", \"0\", \"-1\"]]\nwandb.log({\"a_table\": wandb.Table(data=data, columns=[\"Text\", \"Predicted Label\", \"True Label\"])})\n\n# Method 2\ntable = wandb.Table(columns=[\"Text\", \"Predicted Label\", \"True Label\"])\ntable.add_data(\"I love my phone\", \"1\", \"1\")\ntable.add_data(\"My phone sucks\", \"0\", \"-1\")\nwandb.log({\"another_table\": table})","8716879b":"path_to_html = \"..\/input\/kernel-files\/some_html.html\"\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"html\")\nwandb.log({\"custom_file\": wandb.Html(open(path_to_html))})\nwandb.log({\"custom_string\": wandb.Html('<a href=\"https:\/\/mysite\">Link<\/a>')})","efe68c0b":"path_to_obj = \"..\/input\/kernel-files\/wolf.obj\"\n\n# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"3d_objects\")\nwandb.log({\"3d_object\": wandb.Object3D(open(path_to_obj))})","30a6ac0c":"# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"point_clouds\")\n\n# Log points and boxes in W&B\nwandb.log(\n        {\n            \"point_scene\": wandb.Object3D(\n                {\n                    \"type\": \"lidar\/beta\",\n                    \"points\": np.array(\n                        [\n                            [0.4, 1, 1.3], \n                            [1, 1, 1], \n                            [1.2, 1, 1.2]\n                        ]\n                    ),\n                    \"boxes\": np.array(\n                        [\n                            {\n                                \"corners\": [\n                                    [0,0,0],\n                                    [0,1,0],\n                                    [0,0,1],\n                                    [1,0,0],\n                                    [1,1,0],\n                                    [0,1,1],\n                                    [1,0,1],\n                                    [1,1,1]\n                                ],\n                                \"label\": \"Box\",\n                                \"color\": [123,321,111],\n                            },\n                            {\n                                \"corners\": [\n                                    [0,0,0],\n                                    [0,2,0],\n                                    [0,0,2],\n                                    [2,0,0],\n                                    [2,2,0],\n                                    [0,2,2],\n                                    [2,0,2],\n                                    [2,2,2]\n                                ],\n                                \"label\": \"Box-2\",\n                                \"color\": [111,321,0],\n                            }\n                        ]\n                    ),\n                }\n            )\n        }\n    )","b71e219f":"# Initialize a new run\nwandb.init(anonymous='allow', project=\"visualize-predictions\", name=\"incremental_logging\")\n\n# Log the metric to specific steps\nfor step, price in enumerate(apple['close']):\n    # Specify steps\n    wandb.log({\"Stock Price\": price}, step=step)\n\n# Initialize a new run\nwandb.init(project=\"visualize-metrics\", name=\"incremental_logging\")\n# Log many metrics to the same step\nfor close, date in zip(apple['close'], apple['date']):\n    # Log multiple metrics to the same step\n    wandb.log({\"Stock Price\": close}, commit=False)\n    \n    # Somewhere else when I'm ready to report this step:\n    wandb.log({'Another Metric': close*10})","f601c38f":"## More Resources\nCheck out some other cool things you can do with Weights & Biases:\n* [Track model performance](https:\/\/app.wandb.ai\/lavanyashukla\/visualize-models\/reports\/Visualize-Model-Performance--Vmlldzo1NTk2MA)\n* [Visualize sklearn models](https:\/\/app.wandb.ai\/lavanyashukla\/visualize-sklearn\/reports\/Visualize-Sklearn-Model-Performance--Vmlldzo0ODIzNg)\n* [Visualize model predictions](https:\/\/app.wandb.ai\/lavanyashukla\/visualize-predictions\/reports\/Visualize-Model-Predictions--Vmlldzo1NjM4OA\/)","0c0c972a":"# Log 3D Objects","d24d1a60":"# Log metrics","223e4036":"# Log images","c244acc9":"# Log audio","af40ff56":"# Log Histograms","758f89c8":"# Log videos","6deaec18":"# Log Point Clouds","3d81793d":"# Log tables","965cc0a3":"# Log HTML","010119ea":"# Log plots","fcac57e9":"# Incremental Logging","437a59fe":"In this kernel, I'll show you how to visualize a model's predictions with Weights & Biases \u2013 images, videos, audio, tables, HTML, metrics, plots, 3d objects and point clouds.\n\n## View plots in interactive [dashboard \u2192](https:\/\/app.wandb.ai\/lavanyashukla\/visualize-predictions\/reports\/Visualize-Model-Predictions--Vmlldzo1NjM4OA).\n\n![](https:\/\/paper-attachments.dropbox.com\/s_C0EC7008D045FC80715C08E7386E0BBDA59DC92DEE34C734FEA67BF25E4BA5CC_1578297638486_image.png)\n\nIf you have any questions, we'd love to [answer them](http:\/\/bit.ly\/wandb-forum).\n"}}