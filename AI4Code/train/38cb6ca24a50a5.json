{"cell_type":{"20147540":"code","16cd0900":"code","73c6bdc6":"code","04a1d3b2":"code","cb2d1370":"code","6c31dfb2":"code","0aa5356e":"code","6d265a5c":"code","f01d8bb4":"code","1d5a040e":"code","1c284049":"code","ecf0ab13":"code","f418a1d9":"code","a06bdb8a":"code","0c794ffb":"code","f187da1a":"code","05f66b1e":"code","0be8b858":"code","6cc339d1":"code","57711c65":"code","b2430f31":"code","43e2ca20":"code","8ac000d9":"code","ce7ea070":"code","6590de06":"code","80ed323a":"code","a1aa6745":"code","4ea5698c":"code","762ff773":"code","1320c896":"code","2024407f":"code","5a4bd791":"code","5c7bbbc8":"code","8c3c5e2a":"code","d8c05eda":"code","9bd6828b":"code","7f510e76":"code","8de0804a":"markdown","2c5d73b0":"markdown","7e19123d":"markdown","6b3cdd15":"markdown","11cd9447":"markdown","362320ea":"markdown","9c70601d":"markdown","3eca65a6":"markdown","4b05635f":"markdown","28a42bc6":"markdown","ea431fe6":"markdown","06f8912d":"markdown"},"source":{"20147540":"#Imports\n\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport geopandas as gpd\nimport os\nfrom matplotlib import pyplot as plt\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\nimport datetime\nimport matplotlib.dates as mdates\n\n#Filter warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","16cd0900":"df = pd.read_csv('..\/input\/covid19spain\/datos_ccaas.csv')\ndf.head()","73c6bdc6":"#Read Datasets\ndf = pd.read_csv('..\/input\/covid19-spain-report-27032020\/serie_historica_acumulados.csv',error_bad_lines=False)  #Spain regions data\ngrupos_edad = pd.read_csv(\"..\/input\/covid19-spain-report-27032020\/grupos_edad.csv\") #Spain regions ages of population\nsf = gpd.read_file('..\/input\/shapees\/ESP_adm1.shp') #Regions Geometry Map \n\ndf = df.rename({'FECHA': 'Fecha', 'CASOS': 'Casos'}, axis=1)  # new method\n\n\npopulation = {\n                 'Andaluc\u00eda':8414240,\n                 'Arag\u00f3n':1319291,\n                 'Principado de Asturias':1022800,\n                 'Islas Baleares':1149460,\n                 'Islas Canarias':2153389,\n                 'Cantabria':581078,\n                 'Castilla-La Mancha':2032863,\n                 'Castilla y Le\u00f3n':2399548,\n                 'Catalu\u00f1a':7675217,\n                 'Ceuta y Melilla':171264,\n                 'Comunidad Valenciana':5003769,\n                 'Extremadura':1067710,\n                 'Galicia':2699499,\n                 'Comunidad de Madrid':6663394,\n                 'Regi\u00f3n de Murcia':1493898,\n                 'Comunidad Foral de Navarra':654214,\n                 'Pa\u00eds Vasco':2207776,\n                 'La Rioja':316798    \n} # https:\/\/www.ine.es\/jaxiT3\/Tabla.htm?t=2853&L=0\n\npopulation = pd.DataFrame.from_dict(population,orient='index',columns=[\"Poblaci\u00f3n\"]) #Regions population\n\ndf[\"Fecha\"] = pd.to_datetime(df[\"Fecha\"],format=\"%d\/%m\/%Y\") #--\n#df[\"Fecha\"] = df[\"Fecha\"].dt.date #-- Transform to date format\n","04a1d3b2":"df[\"Casos\"] = pd.Series(np.where(~df[\"Casos\"].isnull(),df[\"Casos\"],df[\"PCR+\"] + df[\"TestAc+\"]))\nlast_data = df.tail(19).copy() #Data from the last day\nlast_data = last_data.replace({'CCAA' : {'ML':'CE'}}).groupby('CCAA', sort=False).sum() #Join Ceuta and Melilla data, beacuse its only one in the map","cb2d1370":"#Styles\nsns.set(style=\"darkgrid\",palette=\"pastel\", color_codes=True)\nsns.mpl.rc(\"figure\", figsize=(17,10))","6c31dfb2":"def set_date_format(ax,day=2,month=1):\n    ax.xaxis.set_minor_locator(mdates.DayLocator(interval=day)) \n    ax.xaxis.set_minor_formatter(mdates.DateFormatter('%d'))\n    ax.xaxis.set_major_locator(mdates.MonthLocator(interval=month))\n    ax.xaxis.set_major_formatter(mdates.DateFormatter('\\n%b')) ","0aa5356e":"def anotate_values(ax,df,var_name,f_type=lambda x: x,decimals = 2):\n    \"\"\"\n    Annotate value on the center of the map\n    \"\"\"\n    try:\n        df.apply(lambda x: ax.annotate(s=f_type(round(x[var_name], decimals)), xy=x.geometry.centroid.coords[0], ha='center',color=\"Black\"),axis=1)\n        return ax\n    except: \n        pass\n","6d265a5c":"def create_evolution(data,ax):\n    ax.stackplot(data[\"Fecha\"],data[\"Casos\"],color=\"skyblue\",labels=[\"Casos\"]) \n    ax.stackplot(data[\"Fecha\"], data[\"Hospitalizados\"],color=\"lightcoral\",labels=[\"Hospitalizados\"])\n    ax.stackplot(data[\"Fecha\"], data[\"Recuperados\"],color=\"lightgreen\",labels=[\"Recuperados\"],alpha=.5)\n    ax.stackplot(data[\"Fecha\"], data[\"Fallecidos\"],color=\"Black\",labels=[\"Fallecidos\"],alpha=.6)\n\n    ax.text(x=data[\"Fecha\"].max(),y=data[\"Casos\"].max(),s=\"{}\".format(int(data[\"Casos\"].max())),fontsize=12,ha=\"center\")\n    ax.text(x=data[\"Fecha\"].max(),y=data[\"Recuperados\"].max(),s=\"{}\".format(int(data[\"Recuperados\"].max())),fontsize=12,ha=\"center\")\n    ax.text(x=data[\"Fecha\"].max(),y=data[\"Hospitalizados\"].max(),s=\"{}\".format(int(data[\"Hospitalizados\"].max())),fontsize=12,ha=\"center\")\n    ax.text(x=data[\"Fecha\"].max(),y=data[\"Fallecidos\"].max(),s=\"{}\".format(int(data[\"Fallecidos\"].max())),fontsize=12,ha=\"center\")\n\n    ax.set_xlim([data[\"Fecha\"].min(),data[\"Fecha\"].max()])\n    ax.legend(loc='upper left')\n    set_date_format(ax)\n\n    #ax.set_xticks(rotation=45,ha=\"right\")\n    return ax","f01d8bb4":"def plot_col_map(df,col_name,f_type=lambda x: x,title=\"\",color=\"Reds\",decimals = 2):\n    \"\"\"\n    Plot map for the column col_name from dataset df\n    \"\"\"\n    ax = df.plot(column=col_name, cmap=color,legend=True,edgecolor='Grey')\n    ax = anotate_values(ax,result,col_name,f_type,decimals)\n    ax.set_title(title)\n    ax.set_axis_off()\n    ax.plot()","1d5a040e":"def plot_col_map2(df,col_name,f_type=lambda x: x,title=\"\",color=\"Reds\",decimals = 2,date=None):\n    \"\"\"\n    Plot map for the column col_name from dataset df\n    \"\"\"\n    ax = df.plot(column=col_name, cmap=color,legend=True,edgecolor='Grey')\n    ax = anotate_values(ax,df,col_name,f_type,decimals)\n    ax.set_title(title)\n    ax.set_axis_off()\n    plt.suptitle(\"{}\".format(date),fontsize=18)\n    return ax\n","1c284049":"#Change the name of Regions\nlast_data.rename({'AN':'Andaluc\u00eda',\n                 'AR':'Arag\u00f3n',\n                 'AS':'Principado de Asturias',\n                 'IB':'Islas Baleares',\n                 'CN':'Islas Canarias',\n                 'CB':'Cantabria',\n                 'CM':'Castilla-La Mancha',\n                 'CL':'Castilla y Le\u00f3n',\n                 'CT':'Catalu\u00f1a',\n                 'CE':'Ceuta y Melilla',\n                 'VC':'Comunidad Valenciana',\n                 'EX':'Extremadura',\n                 'GA':'Galicia',\n                 'MD':'Comunidad de Madrid',\n                 'MC':'Regi\u00f3n de Murcia',\n                 'NC':'Comunidad Foral de Navarra',\n                 'PV':'Pa\u00eds Vasco',\n                 'RI':'La Rioja'\n                },inplace=True)","ecf0ab13":"sf.set_index(\"NAME_1\",drop=True,inplace=True)\n\nresult = pd.concat([last_data, sf[\"geometry\"],population], axis=1, sort=False) #Join Data from last date, geometry and population\nresult = gpd.GeoDataFrame(result)\n\nresult.reset_index(inplace=True)\n\n#Fix Canary Islands position to display them closer to Iberian Peninsula\nimport shapely\nfrom shapely.geometry import MultiPolygon\ncanarias_geom = result.loc[result[\"index\"].str.contains(\"Islas Canarias\"),\"geometry\"].values[0]\n\nnew_pol = []\nfor pol in canarias_geom:\n    new_pol.append(shapely.affinity.translate(pol, xoff=7, yoff=5))\nresult.loc[result[\"index\"].str.contains(\"Islas Canarias\"),\"geometry\"] = gpd.GeoDataFrame(geometry=[MultiPolygon(new_pol)]).geometry.values","f418a1d9":"print(\"Datos actualizados a \/ Data updated to: {}\".format(df[\"Fecha\"].max()))","a06bdb8a":"\nspain = df.groupby(\"Fecha\").sum()\nspain.reset_index(inplace=True)\n\n\"\"\"\nPlot spain evolution\n\n\"\"\"\n\nfig, ax = plt.subplots()\n\ncreate_evolution(spain,ax)","0c794ffb":"import matplotlib.gridspec as gridspec\n\ngs = gridspec.GridSpec(4, 2)\nfig = plt.figure(figsize=(14,20))\n\nfig.suptitle(\"Espa\u00f1a\", fontsize=20)\n\n\nspain[\"new_casos\"] = spain[\"Casos\"].diff()\nspain[\"new_hosp\"] = spain[\"Hospitalizados\"].diff()\nspain[\"new_uci\"] = spain[\"UCI\"].diff()\nspain[\"new_fal\"] = spain[\"Fallecidos\"].diff()\nspain[\"new_rec\"] = spain[\"Recuperados\"].diff()\n\n\n#____Plot Confirmed cases of the region___#\n\nax4 = fig.add_subplot(gs[0, 0])\nplt.bar(x=\"Fecha\",height=\"Casos\",data=spain,color=\"skyblue\")\nax4.yaxis.grid(True)\nax4.set_ylabel(\"Casos confirmados\")\nset_date_format(ax4,4)\n\nax41 = fig.add_subplot(gs[0, 1])\nplt.bar(x=\"Fecha\",height=\"new_casos\",data=spain,color=\"skyblue\")\nax41.yaxis.grid(True)\nax41.set_ylabel(\"Nuevos Casos\")\nset_date_format(ax41,4)\n\n#____Plot hospitalized of the region___#\n\nax5 = fig.add_subplot(gs[1, 0])\nplt.bar(x=\"Fecha\",height=\"Hospitalizados\",data=spain,color=\"lightcoral\")\nax5.yaxis.grid(True)\nset_date_format(ax5,4)\nax5.set_ylabel(\"Hospitalizados\")\n\n\nax51 = fig.add_subplot(gs[1, 1])\nplt.bar(x=\"Fecha\",height=\"new_hosp\",data=spain,color=\"lightcoral\")\nax51.yaxis.grid(True)\nset_date_format(ax51,4)\nax51.set_ylabel(\"Variaci\u00f3n Hospitalizados\")\n\n#____Plot Revovered of the region___#\n\nax6 = fig.add_subplot(gs[2, 0])\nplt.bar(x=\"Fecha\",height=\"Recuperados\",data=spain,color=\"lightgreen\")\nset_date_format(ax6,4)\nax6.yaxis.grid(True)\nax6.set_ylabel(\"Recuperados\")\n\nax61 = fig.add_subplot(gs[2, 1])\nplt.bar(x=\"Fecha\",height=\"new_rec\",data=spain,color=\"lightgreen\")\nset_date_format(ax61,4)\nax61.yaxis.grid(True)\nax61.set_ylabel(\"Nuevos Recuperados\")\n\n#____Plot Deaths of the region___#\n\nax7 = fig.add_subplot(gs[3, 0])\nplt.bar(x=\"Fecha\",height=\"Fallecidos\",data=spain,color=\"Black\")\nset_date_format(ax7,4)\nax7.yaxis.grid(True)\nax7.set_ylabel(\"Fallecidos\")\n\nax71 = fig.add_subplot(gs[3, 1])\nplt.bar(x=\"Fecha\",height=\"new_fal\",data=spain,color=\"Black\")\nset_date_format(ax71,4)\nax71.yaxis.grid(True)\nax71.set_ylabel(\"Variaci\u00f3n Fallecidos\")\n\n\n\nplt.subplots_adjust(hspace=.3)","f187da1a":"df = df.replace({'CCAA' : {'ML':'CE'}}).groupby(['CCAA',\"Fecha\"], sort=False).sum()\ndf.reset_index(inplace=True)\ndf.replace({'CCAA':{'AN':'Andaluc\u00eda',\n                 'AR':'Arag\u00f3n',\n                 'AS':'Principado de Asturias',\n                 'IB':'Islas Baleares',\n                 'CN':'Islas Canarias',\n                 'CB':'Cantabria',\n                 'CM':'Castilla-La Mancha',\n                 'CL':'Castilla y Le\u00f3n',\n                 'CT':'Catalu\u00f1a',\n                 'CE':'Ceuta y Melilla',\n                 'VC':'Comunidad Valenciana',\n                 'EX':'Extremadura',\n                 'GA':'Galicia',\n                 'MD':'Comunidad de Madrid',\n                 'MC':'Regi\u00f3n de Murcia',\n                 'NC':'Comunidad Foral de Navarra',\n                 'PV':'Pa\u00eds Vasco',\n                 'RI':'La Rioja'\n                }},inplace=True)\ndf.set_index(\"CCAA\",inplace=True,drop=True)","05f66b1e":"plot_col_map(result,\"Casos\",lambda x: int(x),\"N\u00famero de casos por CCAA\",\"Reds\",0)","0be8b858":"result['Casos_Poblaci\u00f3n'] = result['Casos']\/result['Poblaci\u00f3n']","6cc339d1":"plot_col_map(result,\"Recuperados\",title=\"N\u00famero de recuperados\",f_type=lambda x: int(x),color=\"YlGn\",decimals=0)","57711c65":"result['Recuperados_Casos'] = (result['Recuperados']\/result['Casos'])*100","b2430f31":"plot_col_map(result,\"Recuperados_Casos\",title=\"Porcentaje de recuperados en cada CCAA\",f_type=lambda x: \"{} %\".format(int(x)),color=\"YlGn\",decimals=0)","43e2ca20":"plot_col_map(result,\"Casos_Poblaci\u00f3n\",title=\"Proporci\u00f3n de casos en relaci\u00f3n con la poblaci\u00f3n de cada regi\u00f3n\",f_type=lambda x: x,color=\"Reds\",decimals=5)","8ac000d9":"result['Fallecidos_Casos'] = result['Fallecidos'] \/ result['Casos']","ce7ea070":"plot_col_map(result,\"Fallecidos_Casos\",title=\"Proporci\u00f3n de casos en relaci\u00f3n con la poblaci\u00f3n de cada regi\u00f3n\",f_type=lambda x: x,color=\"Reds\",decimals=2)","6590de06":"df_groups = df.copy()\ndf_groups.replace({'CCAA' : {'ML':'CE'}},inplace=True)\ndf_groups = df_groups.groupby([\"CCAA\",\"Fecha\"]).sum()\ndf_groups.reset_index(inplace=True)\n\ndf_groups.replace({'CCAA' : {'AN':'Andaluc\u00eda',\n                 'AR':'Arag\u00f3n',\n                 'AS':'Principado de Asturias',\n                 'IB':'Islas Baleares',\n                 'CN':'Islas Canarias',\n                 'CB':'Cantabria',\n                 'CM':'Castilla-La Mancha',\n                 'CL':'Castilla y Le\u00f3n',\n                 'CT':'Catalu\u00f1a',\n                 'CE':'Ceuta y Melilla',\n                 'VC':'Comunidad Valenciana',\n                 'EX':'Extremadura',\n                 'GA':'Galicia',\n                 'MD':'Comunidad de Madrid',\n                 'MC':'Regi\u00f3n de Murcia',\n                 'NC':'Comunidad Foral de Navarra',\n                 'PV':'Pa\u00eds Vasco',\n                 'RI':'La Rioja'\n                }},inplace=True)\nsf.reset_index(inplace=True)","80ed323a":"grupos_edad = pd.read_csv(\"..\/input\/covid19-spain-report-27032020\/grupos_edad.csv\") #Ages groups \ngrupos_edad[\"CCAA\"].unique()\ngrupos_edad.replace({'CCAA' : {\n                 'MELILLA':'CEUTA',\n                }},inplace=True)\n\ngrupos_edad.replace({'CCAA' : {\n                 'ANDALUCIA':'Andaluc\u00eda',\n                 'ARAGON':'Arag\u00f3n',\n                 'ASTURIAS ':'Principado de Asturias',\n                 'BALEARS ILLES':'Islas Baleares',\n                 'CANARIAS':'Islas Canarias',\n                 'CANTABRIA':'Cantabria',\n                 'CASTILLA  LA MANCHA':'Castilla-La Mancha',\n                 'CASTILLA Y LEON':'Castilla y Le\u00f3n',\n                 'CATALUNYA':'Catalu\u00f1a',\n                 'CEUTA':'Ceuta y Melilla',\n                 'COMUNITAT VALENCIANA':'Comunidad Valenciana',\n                 'EXTREMADURA':'Extremadura',\n                 'GALICIA':'Galicia',\n                 'MADRID COMUNIDAD DE':'Comunidad de Madrid',\n                 'MURCIA REGION DE':'Regi\u00f3n de Murcia',\n                 'NAVARRA COMUNIDAD FORAL DE':'Comunidad Foral de Navarra',\n                 'PAIS VASCO':'Pa\u00eds Vasco',\n                 'RIOJA LA':'La Rioja'\n                }},inplace=True)\n\ngrupos_edad = grupos_edad.groupby([\"CCAA\",\"Edad_min\",\"Edad_max\"]).sum()\ngrupos_edad.reset_index(inplace=True)\n","a1aa6745":"df_groups[\"Fecha\"] = pd.to_datetime(df_groups[\"Fecha\"])","4ea5698c":"import matplotlib.gridspec as gridspec\nsns.set_color_codes(\"pastel\")\n\n\nfor ca in df_groups[\"CCAA\"].unique():    \n    data = df_groups.loc[df_groups[\"CCAA\"] == ca]\n    data[\"new_casos\"] = data[\"Casos\"].diff()\n    data[\"new_hosp\"] = data[\"Hospitalizados\"].diff()\n    data[\"new_uci\"] = data[\"UCI\"].diff()\n    data[\"new_fal\"] = data[\"Fallecidos\"].diff()\n    data[\"new_rec\"] = data[\"Recuperados\"].diff()\n    \n    gs = gridspec.GridSpec(7, 2)\n    fig = plt.figure(figsize=(14,20))\n    \n    fig.suptitle(ca, fontsize=20)\n    \n    #____Plot MAP of the region___#\n    \n    ax1 = fig.add_subplot(gs[0, :])\n    sf.loc[sf[\"NAME_1\"] == ca,\"geometry\"].plot(ax=ax1)\n    ax1.annotate(s=int(population.at[ca,\"Poblaci\u00f3n\"]), xy=sf.loc[sf[\"NAME_1\"] == ca].iloc[0].geometry.centroid.coords[0], ha='center',color=\"Black\")\n    ax1.set_axis_off()\n    ax1.set_xlabel(\"Poblaci\u00f3n\")\n\n    #____Plot Age groups of the region___#\n\n    \n    ax2 = fig.add_subplot(gs[1, :])\n    sns.set_color_codes(\"pastel\")\n    sns.barplot(y=\"Total\",x=\"Edad_min\",data=grupos_edad.loc[grupos_edad[\"CCAA\"] == ca],color=\"b\")\n    ax2.yaxis.grid(True)\n    ax2.set_xlabel(\"Edad\")\n    ax2.set_ylabel(\"Poblaci\u00f3n\")\n    \n    #____Plot Evolution of the region___#\n    \n    ax3 = fig.add_subplot(gs[2, :])\n    ax3 = create_evolution(data=data,ax=ax3)\n    ax3.yaxis.grid(True)\n    set_date_format(ax3,4)\n     \n   \n\n    #____Plot Confirmed cases of the region___#\n\n    ax4 = fig.add_subplot(gs[3, 0],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"Casos\",data=data,color=\"skyblue\")\n    ax4.yaxis.grid(True)\n    ax4.set_ylabel(\"Casos confirmados\")\n    set_date_format(ax4,4)\n    \n    ax41 = fig.add_subplot(gs[3, 1],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"new_casos\",data=data,color=\"skyblue\")\n    ax41.yaxis.grid(True)\n    ax41.set_ylabel(\"Nuevos Casos\")\n    set_date_format(ax41,4)\n\n    #____Plot hospitalized of the region___#\n\n    ax5 = fig.add_subplot(gs[4, 0],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"Hospitalizados\",data=data,color=\"lightcoral\")\n    ax5.yaxis.grid(True)\n    set_date_format(ax5,4)\n    ax5.set_ylabel(\"Hospitalizados\")\n    \n    \n    ax51 = fig.add_subplot(gs[4, 1],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"new_hosp\",data=data,color=\"lightcoral\")\n    ax51.yaxis.grid(True)\n    set_date_format(ax51,4)\n    ax51.set_ylabel(\"Variaci\u00f3n Hospitalizados\")\n    \n    #____Plot Revovered of the region___#\n\n    ax6 = fig.add_subplot(gs[5, 0],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"Recuperados\",data=data,color=\"lightgreen\")\n    set_date_format(ax6,4)\n    ax6.yaxis.grid(True)\n    ax6.set_ylabel(\"Recuperados\")\n    \n    ax61 = fig.add_subplot(gs[5, 1],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"new_rec\",data=data,color=\"lightgreen\")\n    set_date_format(ax61,4)\n    ax61.yaxis.grid(True)\n    ax61.set_ylabel(\"Nuevos Recuperados\")\n\n    #____Plot Deaths of the region___#\n\n    ax7 = fig.add_subplot(gs[6, 0],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"Fallecidos\",data=data,color=\"Black\")\n    set_date_format(ax7,4)\n    ax7.yaxis.grid(True)\n    ax7.set_ylabel(\"Fallecidos\")\n    \n    ax71 = fig.add_subplot(gs[6, 1],sharex=ax3)\n    plt.bar(x=\"Fecha\",height=\"new_fal\",data=data,color=\"Black\")\n    set_date_format(ax71,4)\n    ax71.yaxis.grid(True)\n    ax71.set_ylabel(\"Variaci\u00f3n Fallecidos\")\n    \n\n\n    plt.subplots_adjust(hspace=.3)\n    \n\n\n    plt.plot()\n","762ff773":"spain = df.groupby(\"Fecha\").sum().copy()\nspain.reset_index(inplace=True)\n\n\nchina = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\nchina = china.loc[china[\"Country\/Region\"].str.contains(\"China\")]\nchina[\"Date\"] = pd.to_datetime(china[\"ObservationDate\"])\nchina[\"Date\"] = pd.to_datetime(china[\"Date\"].dt.date)\nchina = china.groupby(\"Date\").sum()\nchina.reset_index(inplace=True)\n\n\nitaly = pd.read_csv(\"..\/input\/covid19-in-italy\/covid19_italy_region.csv\")\nitaly[\"Date\"] = pd.to_datetime(italy[\"Date\"],format=\"%Y-%m-%d\")\nitaly[\"Date\"] = pd.to_datetime(italy[\"Date\"].dt.date)\nitaly = italy.groupby(\"Date\").sum()\nitaly.reset_index(inplace=True)\n\ncountries = pd.DataFrame([])\ncountries[\"spain_date\"] = pd.to_datetime(spain[\"Fecha\"])\ncountries[\"spain_positive\"] = spain[\"Casos\"]\ncountries[\"spain_recovered\"] = spain[\"Recuperados\"]\ncountries[\"spain_deaths\"] = spain[\"Fallecidos\"]\n\n\ncountries = pd.concat([countries, china[[\"Date\",\"Confirmed\",\"Recovered\",\"Deaths\"]]], axis=1)\ncountries = pd.concat([countries, italy[[\"Date\",\"TotalPositiveCases\",\"Recovered\",\"Deaths\"]]], axis=1)\n\n\n\ncountries.columns = [\"spain_date\",\"spain_positive\",\"spain_recovered\",\"spain_deaths\",\n                     \"china_date\",\"china_positive\",\"china_recovered\",\"china_deaths\",\n                     \"italy_date\",\"italy_positive\",\"italy_recovered\",\"italy_deaths\"\n                    ]\n\n\ncountries[\"spain_active\"] = countries[\"spain_positive\"] - (countries[\"spain_recovered\"] + countries[\"spain_deaths\"])\ncountries[\"china_active\"] = countries[\"china_positive\"] - (countries[\"china_recovered\"] + countries[\"china_deaths\"])\ncountries[\"italy_active\"] = countries[\"italy_positive\"] - (countries[\"italy_recovered\"] + countries[\"italy_deaths\"])\ncountries.reset_index(inplace=True)\ncountries.head()","1320c896":"plt.figure(figsize=(35,10))\n\nax = sns.lineplot(data=countries,x=\"spain_date\",y=\"spain_positive\",color=\"Blue\")\nax = sns.lineplot(ax=ax,data=countries,x=\"italy_date\",y=\"italy_positive\",color=\"Red\")\nax = sns.lineplot(ax=ax,data=countries,x=\"china_date\",y=\"china_positive\",color=\"Orange\")\n\nax.scatter(x=countries[\"italy_date\"],y=countries[\"italy_positive\"],s=countries[\"italy_active\"]\/10,label=\"Italia Active cases\",color=\"Red\",alpha=0.3)\nax.scatter(x=countries[\"spain_date\"],y=countries[\"spain_positive\"],s=countries[\"spain_active\"]\/10,label=\"Spain Active cases\",color=\"Blue\",alpha=0.3)\nax.scatter(x=countries[\"china_date\"],y=countries[\"china_positive\"],s=countries[\"china_active\"]\/10,label=\"China Active cases\",color=\"Orange\",alpha=0.3)\n\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1)) \nax.xaxis.set_minor_formatter(mdates.DateFormatter('%d\\n%a'))\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\nax.xaxis.set_major_formatter(mdates.DateFormatter('\\n\\n%B'))\n\nax.grid(which='minor', alpha=0.5)\nax.grid(which='major', alpha=1)\n\nax.set_ylabel(\"Confirmed And Active Cases\")\nax.set_xlabel(\"Days\")\nplt.legend(loc='upper left')\nplt.plot()","2024407f":"plt.figure(figsize=(20,10))\n\nax = sns.lineplot(data=countries,x=\"index\",y=\"spain_positive\",color=\"Blue\")\nax = sns.lineplot(ax=ax,data=countries,x=\"index\",y=\"italy_positive\",color=\"Red\")\nax = sns.lineplot(ax=ax,data=countries,x=\"index\",y=\"china_positive\",color=\"Orange\")\n\nax.scatter(x=countries[\"index\"],y=countries[\"italy_positive\"],s=countries[\"italy_active\"]\/10,label=\"Italia Active cases\",color=\"Red\",alpha=0.3)\nax.scatter(x=countries[\"index\"],y=countries[\"spain_positive\"],s=countries[\"spain_active\"]\/10,label=\"Spain Active cases\",color=\"Blue\",alpha=0.3)\nax.scatter(x=countries[\"index\"],y=countries[\"china_positive\"],s=countries[\"china_active\"]\/10,label=\"China Active cases\",color=\"Orange\",alpha=0.3)\n\nax.grid(which='minor', alpha=0.5)\nax.grid(which='major', alpha=1)\n\n\nax.set_ylabel(\"Active Cases\")\nax.set_xlabel(\"Days\")\nplt.legend(loc='upper left')\nplt.plot()","5a4bd791":"plt.figure(figsize=(35,10))\n\n\nax = sns.lineplot(data=countries,x=\"spain_date\",y=\"spain_active\",color=\"Blue\",label=\"Spain\")\nax = sns.lineplot(ax=ax,data=countries,x=\"italy_date\",y=\"italy_active\",color=\"Red\",label=\"Italy\")\nax = sns.lineplot(ax=ax,data=countries,x=\"china_date\",y=\"china_active\",color=\"Orange\",label=\"China\")\n\n\nfrom datetime import date\nchina_lockdown = date(2020,1,23)\nspain_lockdown = date(2020,3,14)\nitaly_lockdown = date(2020,3,9)\n\nchina_value = countries.loc[countries[\"china_date\"] == china_lockdown][\"china_active\"]\nspain_value = countries.loc[countries[\"spain_date\"] == spain_lockdown][\"spain_active\"]\nitaly_value = countries.loc[countries[\"italy_date\"] == italy_lockdown][\"italy_active\"]\n\n\nax.scatter(x=china_lockdown,y=china_value,color=\"Orange\",label=\"China Lockdown\",zorder=5,marker='X')\nax.text(x=china_lockdown,y=china_value,s=\"Lockdown {} -> {}\".format(china_lockdown,int(china_value)),fontsize=12,ha=\"left\")\n\nax.scatter(x=spain_lockdown,y=spain_value,color=\"Blue\",label=\"Spain Lockdown\",zorder=5,marker='X')\nax.text(x=spain_lockdown,y=spain_value,s=\"Lockdown {} -> {}\".format(spain_lockdown,int(spain_value)),fontsize=12,ha=\"left\",)\n\nax.scatter(x=italy_lockdown,y=italy_value,color=\"Red\",label=\"Italy Lockdown\",zorder=5, marker='X')\nax.text(x=italy_lockdown,y=italy_value,s=\"Lockdown {} -> {}\".format(italy_lockdown,int(italy_value)),fontsize=12,ha=\"right\")\n\n\nax.text(x=countries.iloc[countries[\"spain_active\"].idxmax()][\"spain_date\"],y=countries[\"spain_active\"].max(),s=\"{}\".format(int(countries[\"spain_active\"].max())),fontsize=12,ha=\"center\")\nax.text(x=countries.iloc[countries[\"italy_active\"].idxmax()][\"italy_date\"],y=countries[\"italy_active\"].max(),s=\"{}\".format(int(countries[\"italy_active\"].max())),fontsize=12,ha=\"center\")\nax.text(x=countries.iloc[countries[\"china_active\"].idxmax()][\"china_date\"],y=countries[\"china_active\"].max(),s=\"{}\".format(int(countries[\"china_active\"].max())),fontsize=12,ha=\"center\")\n\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1)) \nax.xaxis.set_minor_formatter(mdates.DateFormatter('%d\\n%a'))\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\nax.xaxis.set_major_formatter(mdates.DateFormatter('\\n\\n%B'))\n\nax.grid(which='minor', alpha=0.5)\nax.grid(which='major', alpha=1)\n\nax.set_ylabel(\"Active Cases\")\nax.set_xlabel(\"Date\")\nplt.legend(loc='upper left')\n\nplt.plot()","5c7bbbc8":"countries['spain_new_positive'] = countries[\"spain_positive\"].diff()\ncountries['italy_new_positive'] = countries[\"italy_positive\"].diff()\ncountries['china_new_positive'] = countries[\"china_positive\"].diff()","8c3c5e2a":"plt.figure(figsize=(45,15))\n\nax = sns.lineplot(data=countries,x=\"spain_date\",y=\"spain_new_positive\",color=\"Blue\",label=\"Spain\")\nax = sns.lineplot(ax=ax,data=countries,x=\"italy_date\",y=\"italy_new_positive\",color=\"Red\",label=\"Italy\")\nax = sns.lineplot(ax=ax,data=countries,x=\"china_date\",y=\"china_new_positive\",color=\"Orange\",label=\"China\")\n#plt.legend(loc='upper left')\nax.set_ylabel(\"New Positives Cases\")\nax.set_xlabel(\"Date\")\n\nchina_value = countries.loc[countries[\"china_date\"] == china_lockdown][\"china_new_positive\"]\nspain_value = countries.loc[countries[\"spain_date\"] == spain_lockdown][\"spain_new_positive\"]\nitaly_value = countries.loc[countries[\"italy_date\"] == italy_lockdown][\"italy_new_positive\"]\n\n\nax.scatter(x=china_lockdown,y=china_value,color=\"Orange\",label=\"China Lockdown\",zorder=5,marker='X')\nax.text(x=china_lockdown,y=china_value,s=\"Lockdown {} -> {}\".format(china_lockdown,int(china_value)),fontsize=12,ha=\"left\")\n\nax.scatter(x=spain_lockdown,y=spain_value,color=\"Blue\",label=\"Spain Lockdown\",zorder=5,marker='X')\nax.text(x=spain_lockdown,y=spain_value,s=\"Lockdown {} -> {}\".format(spain_lockdown,int(spain_value)),fontsize=12,ha=\"left\")\n\nax.scatter(x=italy_lockdown,y=italy_value,color=\"Red\",label=\"Italy Lockdown\",zorder=5, marker='X')\nax.text(x=italy_lockdown,y=italy_value,s=\"Lockdown {} -> {}\".format(italy_lockdown,int(italy_value)),fontsize=12,ha=\"right\")\n\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1)) \nax.xaxis.set_minor_formatter(mdates.DateFormatter('%d\\n%a'))\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\nax.xaxis.set_major_formatter(mdates.DateFormatter('\\n\\n%B'))\n\nax.grid(which='minor', alpha=0.5)\nax.grid(which='major', alpha=1)\n\nax.legend()\nax.plot()","d8c05eda":"plt.figure(figsize=(30,10))\n\nax = sns.lineplot(data=countries,x=\"spain_date\",y=\"spain_new_positive\",color=\"Blue\",label=\"Spain\")\n\nax.set_ylabel(\"New Positives Cases\")\nax.set_xlabel(\"Date\")\n\nspain_value = countries.loc[countries[\"spain_date\"] == spain_lockdown][\"spain_new_positive\"]\n\nax.scatter(x=spain_lockdown,y=spain_value,color=\"Blue\",label=\"Spain Lockdown\",zorder=5,marker='X')\nax.text(x=spain_lockdown,y=spain_value,s=\"Lockdown {} -> {}\".format(spain_lockdown,int(spain_value)),fontsize=12,ha=\"left\")\n\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1)) \nax.xaxis.set_minor_formatter(mdates.DateFormatter('%d\\n%a'))\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\nax.xaxis.set_major_formatter(mdates.DateFormatter('\\n\\n%B'))\n\nax.grid(which='minor', alpha=0.5)\nax.grid(which='major', alpha=1)\n\nax.legend()\nax.plot()","9bd6828b":"global_data = pd.read_csv(\"..\/input\/covid19-coronavirus\/2019_nCoV_data.csv\")\n\nglobal_data[\"Date\"] = pd.to_datetime(global_data[\"Date\"])\nglobal_data[\"Date\"] = pd.to_datetime(global_data[\"Date\"].dt.date)\n\n\n","7f510e76":"global_data = global_data.replace({\"Country\":{\n    \"Mainland China\": \"China\"\n}})\n\nglobal_data = global_data.groupby([\"Country\",\"Date\",]).sum()\nglobal_data.reset_index(inplace=True)\n\ntop_countries = global_data.groupby(\"Country\").max().sort_values(by=['Confirmed'],ascending=False).reset_index()[\"Country\"][:10]\ntop_countries = global_data.loc[global_data[\"Country\"].isin(top_countries.to_list())]\n\ntop_countries = top_countries.sort_values([\"Confirmed\"], ascending = False)\n\nsns.set(style=\"white\", rc={\"axes.facecolor\": (0, 0, 0, 0)})\n\n#ax = sns.lineplot(data=top_countries,x=\"Date\",y=\"Confirmed\",hue=\"Country\")\nax = sns.FacetGrid(data=top_countries,row=\"Country\",hue=\"Country\",aspect=5,height=5)\nax.map(sns.lineplot,\"Date\",\"Confirmed\")\nax.map(plt.fill_between,\"Date\",\"Confirmed\")\n\nax.fig.subplots_adjust(hspace=.10)\nax.set(ylim=(0,top_countries[\"Confirmed\"].max() ))\nplt.xticks(rotation=45,ha='right')\nplt.plot(figsize=(40,40))","8de0804a":"**N\u00famero de casos por regi\u00f3n**","2c5d73b0":"**N\u00famero de recuperados**","7e19123d":"**Total confirmed cases and active by date**","6b3cdd15":"**INTERNATIONAL COMPARISON**","11cd9447":"**Total confirmed cases and active by day**","362320ea":"**Porcentaje de recuperados**","9c70601d":"** New confirmed cases by date**","3eca65a6":"**Proporci\u00f3n de Fallecidos en relaci\u00f3n con el n\u00famero de casos**","4b05635f":"**Evoluci\u00f3n en Espa\u00f1a. (Casos , Hospitalizados, Fallecidos ) **","28a42bc6":"**Active cases by date**","ea431fe6":"**Proporci\u00f3n de casos en relaci\u00f3n con la poblaci\u00f3n de cada regi\u00f3n**","06f8912d":"**Evoluci\u00f3n de cada Comunidad Aut\u00f3noma**"}}