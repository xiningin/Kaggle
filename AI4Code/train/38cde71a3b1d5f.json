{"cell_type":{"660e1d8e":"code","0c878fcf":"code","7c3948cb":"code","58b4c3cd":"code","10abede0":"code","4194ffae":"code","d2f151cf":"code","41fb0cfc":"code","7e611b77":"code","d7efc045":"code","6c2a4107":"code","af6202a8":"code","18536f61":"code","527c01a5":"code","91740289":"code","1d7af169":"code","682e04d8":"markdown","bcb91697":"markdown","89e881ac":"markdown","1b9a4bd5":"markdown","abb80575":"markdown","401dd02a":"markdown"},"source":{"660e1d8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\n# Any results you write to the current directory are saved as output.","0c878fcf":"ksdata = pd.read_csv(\"..\/input\/2015.csv\")","7c3948cb":"ksdata.drop([\"Happiness Rank\"],axis=1,inplace = True)\nksdata.drop([\"Dystopia Residual\"],axis=1,inplace = True)\n","58b4c3cd":"ksdata.rename(columns={'Economy (GDP per Capita)': 'Economy'}, inplace=True)\nksdata.rename(columns={'Health (Life Expectancy)': 'Health'}, inplace=True)\nksdata.rename(columns={'Trust (Government Corruption)': 'Trust'}, inplace=True)\nksdata.rename(columns={'Happiness Score': 'Happiness'}, inplace=True)","10abede0":"ksdata.head()","4194ffae":"ksdata.tail()","d2f151cf":"ksdata.info()","41fb0cfc":"ksdata.columns","7e611b77":"ksdata.describe()","d7efc045":"ksdata[ksdata.Country == \"Turkey\"]","6c2a4107":"AVG_ECONOMY = ksdata.Economy.mean()\nksdata[\"wealth\"]=[\"POOR\" if AVG_ECONOMY> each else \"RICH\" for each in ksdata.Economy]\nAVG_FAMILY = ksdata.Economy.mean()\nksdata[\"family ties\"]=[\"weak\" if AVG_FAMILY> each else \"powerful\" for each in ksdata.Economy]\nksdata[70:80]\n","af6202a8":"#kksdata = ksdata['Family'].rank(method='min')\n","18536f61":"ksdata.plot(kind='scatter', x='Economy', y='Health',alpha = 0.5,color = 'red')\nplt.xlabel('Economy')              \nplt.ylabel('Health')\nplt.title('Economy \/ Health')\nplt.show()","527c01a5":"data1 = ksdata.loc[:,[\"Family\",\"Happiness\"]]\ndata1.plot()\nplt.show()","91740289":"plt.hist(ksdata.Freedom,bins=50)\nplt.xlabel(\"PetalLengthCm values\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show","1d7af169":"plt.bar(ksdata.Economy,ksdata.Health)\nplt.title(\"bar plot\")\nplt.xlabel(\"Economy\")\nplt.ylabel(\"Health\")\nplt.show()","682e04d8":"> **Columns and data types in our dataset**","bcb91697":"> **Columns added**","89e881ac":"> **I want to rename the headings of some columns**","1b9a4bd5":"> **Turkey's data**","abb80575":"> **The 5 most unhappy countries**","401dd02a":"> **The 5 most happy countries**"}}