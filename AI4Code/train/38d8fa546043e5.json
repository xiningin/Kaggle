{"cell_type":{"e83991e3":"code","49a2fc00":"code","be91b919":"code","f3d67fba":"code","d9b93471":"code","f460334f":"code","56de6f6f":"code","66196e33":"code","29faf199":"code","714016d8":"code","cfb60e99":"code","8ddce573":"markdown","788a2225":"markdown","86b2f6ad":"markdown","3074f7c3":"markdown","e188c99f":"markdown"},"source":{"e83991e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","49a2fc00":"data1=pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\")\ndata2=pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")","be91b919":"data1.info()","f3d67fba":"data2.info()","d9b93471":"data2.head()","f460334f":"data2[\"class\"]=[1 if each == \"Abnormal\" else 0 for each in data2[\"class\"]]\n\nx_data=data2.drop([\"class\"],axis=1)\n\nx= (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))","56de6f6f":"y=data2[\"class\"].values","66196e33":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)","29faf199":"from sklearn.neighbors import KNeighborsClassifier\n\nknn=KNeighborsClassifier(n_neighbors=3)\nknn.fit(x_train,y_train)\nprediction=knn.predict(x_test)\n\nprint(\"{} nn score: {}\".format(3,knn.score(x_test,y_test)))","714016d8":"score_list=[]\nfor each in range(1,15):\n    knn2=KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \nplt.plot(range(1,15),score_list)\nplt.xlabel(\"k\")\nplt.ylabel(\"accuracy\")\nplt.show()","cfb60e99":"from sklearn.neighbors import KNeighborsClassifier\n\nknn=KNeighborsClassifier(n_neighbors=7)\nknn.fit(x_train,y_train)\nprediction=knn.predict(x_test)\n\nprint(\"{} nn score: {}\".format(3,knn.score(x_test,y_test)))","8ddce573":"<a id=\"3\"><\/a><br>\n# KNN","788a2225":"<a id=\"2\"><\/a><br>\n# Train Test Split","86b2f6ad":"<a id=\"1\"><\/a><br>\n# Entering and Cleaning Data","3074f7c3":"# Introduction\n\n1. [Entering and Cleaning Data](#1)\n1. [Train Test Split](#2)\n1. [KNN](#3)\n1. [Finding Best Value of K](#4)\n\n","e188c99f":"<a id=\"4\"><\/a><br>\n# Finding Best Value of K"}}