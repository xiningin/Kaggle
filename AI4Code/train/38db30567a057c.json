{"cell_type":{"c9453219":"code","c44f0431":"code","99182aaa":"code","e605fd14":"code","d2ed6035":"code","52fe978c":"code","7683959c":"code","9d26cfaf":"code","3487ad98":"code","39c9660f":"code","d5bece65":"code","5756b7fd":"code","8c6a70a3":"code","7379d564":"code","9e83b92c":"code","c518955c":"code","9f10b9e8":"code","4777b246":"code","5fe4c62f":"code","1e285075":"code","c52b5921":"code","039d6328":"code","66968921":"code","4fa8550a":"code","33cafe3b":"code","9d9c25c5":"code","2b176567":"code","8ed19393":"code","6e8599f4":"code","a5248e05":"code","a907e5b0":"code","fd4566df":"code","7c070e84":"code","9535e00d":"code","8f8c470e":"code","42efa28a":"code","dd6ae78e":"code","016e9fcf":"code","1bce8a5e":"code","7fba9382":"code","651b5716":"code","80f4d795":"code","a7e86459":"code","69aada46":"code","6c2d938d":"markdown"},"source":{"c9453219":"import numpy as np \nimport pandas as pd","c44f0431":"df=pd.read_csv(\"..\/input\/titanic\/train.csv\")","99182aaa":"df.head()","e605fd14":"df.dtypes","d2ed6035":"for i in df:\n    print(df[i])\n    print(df[i].unique())\n#passenger id is a numeric feature\n#Survived is a categorical feature\n#Passenger class is a categorical feature\n#Name is a text feature\n#Sex is a categorical variable\n#Age is a numeric vaiable\n#lets consider Sibsp as numeric for now. \n# no of parents is numeric\n#Ticket number is unique\n#Fare is numeric\n#Cabin is categorical # we might not consider this.\n# embarked is categorical.","52fe978c":"# since 687 of cabins are missing we can remove that column\n#we can remove 2 obervations on embarked.\n# age has 177 missing values, we will try and fill them with the median age first, try mean then annd finally try removing the column.","7683959c":"df.drop('Cabin',inplace=True,axis=1)","9d26cfaf":"#df.head()","3487ad98":"# new=df[\"Embarked\"]\n# for i in range(len(df['Embarked'])):\n#     if new[i].isna():\n#         print(df[\"Embarked\"].iloc[i])","39c9660f":"df[\"Embarked\"].unique()\ndf[df[\"Embarked\"].isna()]\n\n#if df[\"Embarked\"].isna==True:\n#    print(df[\"Embarked\"].isna)\n    \n    ","d5bece65":"df.drop(61,axis=0,inplace=True)","5756b7fd":"df.drop(829,axis=0,inplace=True)","8c6a70a3":"df[df[\"Embarked\"].isna()]","7379d564":"import seaborn as sns\nsns.distplot(df.Age)","9e83b92c":"# since this looks like a normal distribution, a safe bet would be to impute mean values.\n#df[df[\"Age\"].fillna(df[\"Age\"].mean())]\ndf[df[\"Age\"].isna()]","c518955c":"df[[\"Age\"]]=df[[\"Age\"]].fillna(df[\"Age\"].mean())\ndf[\"Age\"].mean()","9f10b9e8":"df[df[\"Age\"].isna()]","4777b246":"df.head()\ndf['Name']","5fe4c62f":"\ndf\nspec_chars = [\" \",\"!\",'\"',\"#\",\"%\",\"&\",\"'\",\"(\",\")\",\n              \"*\",\"+\",\",\",\"-\",\".\",\"\/\",\":\",\";\",\"<\",\n              \"=\",\">\",\"?\",\"@\",\"[\",\"\\\\\",\"]\",\"^\",\"_\",\n              \"`\",\"{\",\"|\",\"}\",\"~\",\"\u2013\"]\ntitle=[\"Mrs\",\"Mr\",\"Miss\"]\nfor char in spec_chars:\n    df['Name'] = df['Name'].str.replace(char,' ')\n#    if char==\"Mrs\" or char==\"Mr\" or char==\"Miss\":\n        ","1e285075":" df['Name']\nfor char in title:\n    if char==\"Mrs\" or char==\"Mr\" or char==\"Miss\":\n        df['Name'] = df['Name'].str.replace(char,char)\n        \n    \ndf['Name']\ntitle=[] \nfor i in df['Name']:\n     for j in range(len(i)-6):\n#            print(i)\n            if (i[j]+i[j+1])==\"Mr\" and i[j]+i[j+1]+i[j+2]!=\"Mrs\":\n                title.append(\"Mr\")\n            elif (i[j]+i[j+1]+i[j+2])==\"Mrs\":\n                 title.append(\"Mrs\")\n            elif (i[j]+i[j+1]+i[j+2]+i[j+3])==\"Miss\":\n                 title.append(\"Miss\")\n            elif (i[j]+i[j+1]+i[j+2]+i[j+3]+i[j+4]+i[j+5])==\"Master\":\n                 title.append(\"Mast\")\n            elif i[j]+i[j+1]+i[j+2]==\"Dr \":\n                title.append(\"Dr\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]==\"Rev \":\n                title.append(\"Rev\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]+i[j+4]==\"Capt \":\n                title.append(\"Capt\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]==\"Col \":\n                title.append(\"Col\")\n#            elif (i[j]+i[j+1]+i[j+2]+i[j+3]+i[j+4]+i[j+5]+i[j+6]+i[j+7])==\"Countess\":\n#                 title.append(\"Count\")\n\n        \ntitle.append(\"Mr\")\ntitle.append(\"Mrs\")\ntitle.append(\"Miss\")            \n        \n# #            print(i[j])\n# #    print(i)\n# tit=np.array(title)\n# np.unique(tit)\n# #title\n# #print(len(title))\nprint(len(df[\"Name\"]))\n# #df['Title']=title\n# #df.head()\nprint(len(title))\n#df[\"Name\"].unique()\n#Countess\n#Capt\n#Coland space\n#\"Mlle\"\n#Rev\n#\ntit=np.array(title)\nnp.unique(tit)","c52b5921":"df['Title']=title","039d6328":"df=df.drop([\"Name\",\"Ticket\"],axis=1)","66968921":"df=pd.get_dummies(df,columns=[\"Pclass\",\"Sex\",\"Embarked\",\"Title\"],drop_first=True)","4fa8550a":"#df.head()","33cafe3b":"y=df[\"Survived\"]","9d9c25c5":"#y.head()","2b176567":"x=df","8ed19393":"x=x.drop(\"Survived\",axis=1)\nx=x.drop(\"Title_Col\",axis=1)\nlen(x.columns)","6e8599f4":"# normalize values:\nfrom sklearn.preprocessing import StandardScaler\n#from sklearn.model_selection import train_test_split","a5248e05":"scaler=StandardScaler()\nx_std=scaler.fit_transform(x)","a907e5b0":"#linear regression","fd4566df":"from sklearn.linear_model import LinearRegression\nlin=LinearRegression()\nlin_fit=lin.fit(x_std,y)","7c070e84":"new_df=pd.read_csv(\"..\/input\/titanic\/test.csv\")\nnew_df.head()\nnew_df.head()\nspec_chars = [\" \",\"!\",'\"',\"#\",\"%\",\"&\",\"'\",\"(\",\")\",\n              \"*\",\"+\",\",\",\"-\",\".\",\"\/\",\":\",\";\",\"<\",\n              \"=\",\">\",\"?\",\"@\",\"[\",\"\\\\\",\"]\",\"^\",\"_\",\n              \"`\",\"{\",\"|\",\"}\",\"~\",\"\u2013\"]\n#title=[\"Mrs\",\"Mr\",\"Miss\"]\nfor char in spec_chars:\n    new_df['Name'] = new_df['Name'].str.replace(char,' ')\ntitle=[] \nfor i in new_df['Name']:\n     for j in range(len(i)-6):\n#            print(i)\n            if (i[j]+i[j+1])==\"Mr\" and i[j]+i[j+1]+i[j+2]!=\"Mrs\":\n                title.append(\"Mr\")\n            elif (i[j]+i[j+1]+i[j+2])==\"Mrs\":\n                 title.append(\"Mrs\")\n            elif (i[j]+i[j+1]+i[j+2]+i[j+3])==\"Miss\":\n                 title.append(\"Miss\")\n            elif (i[j]+i[j+1]+i[j+2]+i[j+3]+i[j+4]+i[j+5])==\"Master\":\n                 title.append(\"Mast\")\n            elif i[j]+i[j+1]+i[j+2]==\"Dr \":\n                title.append(\"Dr\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]==\"Rev \":\n                title.append(\"Rev\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]+i[j+4]==\"Capt \":\n                title.append(\"Capt\")\n            elif i[j]+i[j+1]+i[j+2]+i[j+3]==\"Col \":\n                title.append(\"Col\")\nprint(len(title))\nnew_df['Title']=title\nnew_df=new_df.drop([\"Name\",\"Ticket\",\"Cabin\"],axis=1)\nnew_df=pd.get_dummies(new_df,columns=[\"Pclass\",\"Sex\",\"Embarked\",\"Title\"],drop_first=True)\n\n\n#y_pred=\n#x_new\nnew_df[[\"Age\"]]=new_df[[\"Age\"]].fillna(new_df[\"Age\"].mean()).round(decimals=2)\n#new_df[\"Age\"].mean()\nx_new=new_df\n#x_new=x_new.drop(\"Survived\",axis=1)\nx_new.head()\nx_new.to_csv(\"new_test.csv\")","9535e00d":"x_new.head()","8f8c470e":"x_new.head()\nscaler_new=StandardScaler()\nx_new_std=scaler_new.fit_transform(x_new)\n\n#np.unique(x_new_std)\n#for i in x_new_std:\n#    if x_new_std=='nan':\n#        x_new_std=0\n#x_new_std.isnull().values.any()\n#x_new_std.unique()\nnp.nan_to_num(x_new_std,copy=False)\narray_sum=np.sum(x_new_std)\n","42efa28a":"array_sum\n#np.unique(x_new_std)\n","dd6ae78e":"import matplotlib.pyplot as plt\ny_pred=lin.predict(x_new_std)\n#plt.scatter(x_std,y)\n#plt.plot(x_std,y_pred)\n#plt.show()\n#y_pred=np.around(y_pred,decimals=3)","016e9fcf":"#y_pred.to_csv(\"titanic_pred.csv\")","1bce8a5e":"import numpy as np\nnp.savetxt(\"ans.csv\", y_pred, delimiter=\",\")","7fba9382":"df_val=pd.read_csv(\"ans.csv\")","651b5716":"df_val.head()\n# accuarcy of 0.7","80f4d795":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nlog_reg=LogisticRegression()\nmodel=log_reg.fit(x_std,y)\nlog_pred=model.predict(x_new_std)\n#model.predict_proba(x_new_std)","a7e86459":"np.savetxt(\"ans_1.csv\", log_pred, delimiter=\",\")","69aada46":"# try out l1 regularization\n","6c2d938d":"# Try out Logistic regression"}}