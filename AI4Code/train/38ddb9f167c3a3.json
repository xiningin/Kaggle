{"cell_type":{"11de74fa":"code","6c326a81":"code","d988cb2e":"code","0f11f153":"code","c7b13128":"markdown","1ee03d00":"markdown"},"source":{"11de74fa":"words = ['dog', 'deer', 'deal']\nsubstr = 'de'","6c326a81":"for i,n in enumerate(substr):\n    for x in words:\n        if substr[i] != x[i]:\n            words.remove(x)\nwords","d988cb2e":"words = ['tricycle', 'triple', 'triangulation', 'hello', 'world', 'trip', 'take']\nsubstr = 'tri'","0f11f153":"for i,n in enumerate(substr):\n    for x in words:\n        if substr[i] != x[i]:\n            words.remove(x)\nwords","c7b13128":"# Appendix\n\nquery string = tri","1ee03d00":"# Daily Coding Problem (Asked by Twitter)\n\nImplement an autocomplete system. That is, given a query string s and a set of all possible query strings, return all strings in the set that have s as a prefix.\n\nFor example, given the query string de and the set of strings [dog, deer, deal], return [deer, deal].\n\nHint: Try preprocessing the dictionary into a more efficient data structure to speed up queries."}}