{"cell_type":{"d6a53bd0":"code","f1a34efa":"code","72086924":"code","94964100":"code","4f64bb59":"code","a2bf7176":"code","5802e5ca":"code","da0640a6":"code","9b69cea2":"code","ce5c01ea":"code","6489ce58":"code","c91be0bd":"code","13ed8b09":"code","fdc05817":"code","dcd9930c":"code","b7ba81b6":"code","09fbf794":"code","eb439cdf":"code","7f641313":"code","cf884dae":"code","ba12b734":"markdown"},"source":{"d6a53bd0":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tcs-share\/TCS.NS (1).csv')\nnetflix.head()","f1a34efa":"netflix=netflix[['Date','Close']]\nnetflix.head()","72086924":"netflix.info()","94964100":"!pip install pycaret-ts-alpha","4f64bb59":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","a2bf7176":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","5802e5ca":"netflix = netflix.asfreq('d')\nnetflix.index","da0640a6":"netflix.head()","9b69cea2":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","ce5c01ea":"data=netflix.Close\ndata","6489ce58":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","c91be0bd":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","13ed8b09":"## Create a model manually\nmodel = exp.create_model(\"exp_smooth\")\nmodel","fdc05817":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","dcd9930c":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","b7ba81b6":"tuned_model = exp.tune_model(model,optimize = 'MAPE')\ntuned_model","09fbf794":"exp.predict_model(tuned_model)","eb439cdf":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","7f641313":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","cf884dae":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","ba12b734":"# "}}