{"cell_type":{"5997b32d":"code","2e22db22":"code","a2224cfc":"code","056f96e5":"code","e1626ffd":"code","d367e940":"code","32f28666":"code","5d094e52":"code","4b9f875e":"code","64942827":"code","8e31c95c":"code","42dfafd3":"code","36d17b75":"code","66073718":"code","311115a8":"code","c67d0231":"code","6377d53a":"code","0a5fcb56":"code","e41a3962":"code","e7ef1fab":"code","55562c2c":"code","5694847d":"markdown","b09b9b11":"markdown","7364a844":"markdown","40283bfe":"markdown","4539e380":"markdown","5ca1e9e8":"markdown","dfb476d5":"markdown","6ade577d":"markdown","1c690307":"markdown","86190f12":"markdown","7dca1a28":"markdown","fceb6525":"markdown","ecbefdbc":"markdown","1ba97bd3":"markdown","467e59bb":"markdown","53aada9d":"markdown","29b67474":"markdown","3cead87c":"markdown","57ad2f96":"markdown","fb904391":"markdown","10321368":"markdown"},"source":{"5997b32d":"!pip install openpyxl\n!pip install lifetimes\nimport datetime as dt\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 500)\npd.set_option('display.float_format', lambda x: '%.4f' % x)\nfrom sklearn.preprocessing import MinMaxScaler","2e22db22":"df_ = pd.read_excel(\"..\/input\/online-retail-ii\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf = df_.copy()","a2224cfc":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n    \n    \ndf = df[df[\"Country\"].str.contains(\"United Kingdom\", na=False)] # UK selection of customers\ndf.dropna(inplace=True)\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)] # we did not receive those that started with c on the invoice in our data set. # RETURNS\ndf = df[df[\"Quantity\"] > 0] # We have selected at least 1 purchase\ndf = df[df[\"Price\"] > 0] # We chose those who earned more than 0\nreplace_with_thresholds(df, \"Quantity\") #  we use suppression.\nreplace_with_thresholds(df, \"Price\")    #  we use suppression.\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"] # Let's create a total price variable\ndf[\"InvoiceDate\"].max() # our latest invoice date\ntoday_date = dt.datetime(2011, 12, 11) # our analysis date","056f96e5":"cltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days, \n                                                        # Recency calculation: The time since the last purchase. Weekly.\n                                                         lambda date: (today_date - date.min()).days], \n                                                        # T: How long before the analysis date was made the first purchase. Weekly.\n                                         'Invoice': lambda num: num.nunique(), \n                                        # frequency : total number of recurring purchases unique\n                                         'TotalPrice': lambda TotalPrice: TotalPrice.sum()}) \n                                        # monetary : average earnings per purchase\ncltv_df.columns = cltv_df.columns.droplevel(0) # we are correcting the hierarchical column structure\ncltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\n\ncltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\ncltv_df = cltv_df[(cltv_df['frequency'] > 1)]\ncltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\ncltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7 # transaction to receive weekly\ncltv_df[\"T\"] = cltv_df[\"T\"] \/ 7","e1626ffd":"bgf = BetaGeoFitter(penalizer_coef=0.001)\nbgf.fit(cltv_df['frequency'],\n        cltv_df['recency'],\n        cltv_df['T'])\n\n\n# \"expected_purc_1_week\"\ncltv_df[\"expected_purc_1_week\"] = bgf.predict(1,\n                                              cltv_df['frequency'],\n                                              cltv_df['recency'],\n                                              cltv_df['T'])\n\n\n# \"expected_purc_1_month\"\ncltv_df[\"expected_purc_1_month\"] = bgf.predict(4,\n                                               cltv_df['frequency'],\n                                               cltv_df['recency'],\n                                               cltv_df['T'])\n","d367e940":"ggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(cltv_df['frequency'], cltv_df['monetary'])\n\n# \"expected_average_profit\"\ncltv_df[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                                                             cltv_df['monetary'])","32f28666":"cltv = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=6,  # 6 months.\n                                   freq=\"W\",  # T's frequency information.\n                                   discount_rate=0.01)\ncltv.head()","5d094e52":"cltv = cltv.reset_index()\ncltv.sort_values(by=\"clv\", ascending=False).head()","4b9f875e":"cltv_final = cltv_df.merge(cltv, on=\"Customer ID\", how=\"left\")\ncltv_final.sort_values(by=\"clv\", ascending=False).head(10)","64942827":"scaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_final[[\"clv\"]])\ncltv_final[\"scaled_clv\"] = scaler.transform(cltv_final[[\"clv\"]])\ncltv_final.sort_values(by=\"scaled_clv\", ascending=False).head()","8e31c95c":"cltv_1 = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=1,  # 1 MONTH \n                                   freq=\"W\",  # T's frequency information.\n                                   discount_rate=0.01)\ncltv_1.head()\n","42dfafd3":"cltv_1 = cltv_1.reset_index()\ncltv_1.sort_values(by=\"clv\", ascending=False).head(10)","36d17b75":"cltv_1_final = cltv_df.merge(cltv_1, on=\"Customer ID\", how=\"left\")\ncltv_1_final.sort_values(by=\"clv\", ascending=False).head(10)","66073718":"scaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_1_final[[\"clv\"]])\ncltv_1_final[\"scaled_clv_1ay\"] = scaler.transform(cltv_1_final[[\"clv\"]])\ncltv_1_final.sort_values(by=\"scaled_clv_1ay\", ascending=False).head(10)","311115a8":"cltv_12 = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=12,  # 12 MONTH \n                                   freq=\"W\",  # T's frequency information.\n                                   discount_rate=0.01)\ncltv_12.head()","c67d0231":"cltv_12 = cltv_12.reset_index()\ncltv_12.sort_values(by=\"clv\", ascending=False).head(10)","6377d53a":"cltv_12_final = cltv_df.merge(cltv_12, on=\"Customer ID\", how=\"left\")\ncltv_12_final.sort_values(by=\"clv\", ascending=False).head(10)","0a5fcb56":"scaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_12_final[[\"clv\"]])\ncltv_12_final[\"scaled_clv_12ay\"] = scaler.transform(cltv_12_final[[\"clv\"]])\ncltv_12_final.sort_values(by=\"scaled_clv_12ay\", ascending=False).head(10)","e41a3962":"# Creation of Segments by CLTV\ncltv_final[\"segment\"] = pd.qcut(cltv_final[\"scaled_clv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\ncltv_final.head()","e7ef1fab":"cltv_final.sort_values(by=\"scaled_clv\", ascending=False).head()","55562c2c":"cltv_final.groupby(\"segment\").agg({\"mean\",\"count\", \"sum\"})","5694847d":" ## Necessary Import","b09b9b11":"# Task 2\n---","7364a844":"# Customer-Lifetime-Value-Prediction with BGNBD & GAMMA GAMMA Model\n---\n\n![cltvvv.png](attachment:4b08163e-8bdd-4865-ab34-0aaaf60affb4.png)\n\n* In this study, we will try to examine the relationship between companies and customers.\n* In the business world, there may be cases where customers leave us, and this action may occur without our being aware of it.\n* The customer may not have actually left us and may only be visiting us at certain periodic times.\n* These possibilities can cause us some difficulties in calculating the lifetime value of the customer, that is, how much he will gain us during his stay with us.\n* We will estimate CLTV with BG\\NBD & Gamma Gamma Models. With the models we will build with the past shopping habits of the users, we will predict which customers will come to us in certain time periods, our most profitable customers and the CLTV values of our customers.","40283bfe":"# Task 3\n---","4539e380":"###  GAMMA-GAMMA Model Calculation","5ca1e9e8":"### 1 MONTH CLTV CALCULATION","dfb476d5":"### Let's move on to our example\n---\n![cltvv.png](attachment:bf943c4a-f19d-4af2-919a-52d67abb01c0.png)","6ade577d":"### 12 MONTH CLTV CALCULATION","1c690307":"### COMPARISON OF THE TOP 10 VALUES OF 1 MONTH AND 12 MONTHS\n* some customers may have fallen to the bottom of the list by month 1 because they have not completed their patterns","86190f12":"### BG-NBD Model Calculation","7dca1a28":"* CLTV analysis consisting of different time periods\n* Calculate 1-month and 12-month CLTV for 2010-2011 UK customers.\n* Analyze the top 10 people at 1-month CLTV and the top 10 people at 12 months.\n* Is there a difference? If so, why do you think it could be?","fceb6525":"* 6 months CLTV Prediction\n* Make a 6-month CLTV prediction for 2010-2011 UK customers.\n* Interpret and evaluate the results you have obtained.","ecbefdbc":"# Task 1\n---","1ba97bd3":"### Dataset Story\n---\n* The dataset named Online Retail II is a UK-based online sales company. Store's sales between 01\/12\/2009 - 09\/12\/2011 contains.\n* The product catalog of this company includes souvenirs.\n* The vast majority of the company's customers are corporate customers.","467e59bb":"## My Action Suggestions \n* D segment houses our oldest customers. In fact, it is the segment that makes the last purchase from us on average. However, it is the segment that earns us the least. \n\n* My suggestion for this segment would be to remind ourselves to them often. We can frequently inform you about our new products and new products via mail and sms. \n\n* The C segment consists of our old customers, just like the D segment, but they have earned us more than the D segment.\n* My suggestion for this segment is that we can reach them again via e-mail and sms and offer discounts on the products they buy most frequently.","53aada9d":"* let's show the values between 0 and 1","29b67474":"### Data Preperation","3cead87c":"### Lifetime Preparing the Data Structure","57ad2f96":"* Segmentation and Action Suggestions \n* For 2010-2011 UK customers all your customers into 4 groups based on 6-month CLTV \n* (segment) and add the group names to the dataset. \n* A short 6-month action to the management for 2 groups that you will choose from among 4 groups. * make suggestions\n","fb904391":"### Reading data from the Database","10321368":"### RESOURCES AND THANKS\n---\n[O\u011fuz Erdo\u011fan - CLTV](https:\/\/oguzerdo.medium.com\/crm-analytics-cltv-projeksiyonu-54a0bfa99b1f)"}}