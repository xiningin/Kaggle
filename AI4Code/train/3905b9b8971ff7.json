{"cell_type":{"c54d1527":"code","77ad46ba":"code","6c42eff5":"code","46c7fc64":"code","75795ac2":"code","caaafbfe":"code","07072c73":"code","3fba05e4":"code","3d789648":"code","1e3c66f2":"code","16f8fcda":"code","2ab34fb5":"code","e8d32ca7":"code","1b53bf7c":"code","6703d888":"code","3e766ea9":"code","68920c7a":"code","7dd9089b":"code","9c5da8be":"code","a1df3a9c":"code","99003252":"code","0e3f1bf7":"code","3f1328e3":"markdown","e6cffaaa":"markdown","8bb47b67":"markdown","60032924":"markdown","fcacea7d":"markdown","8dd03bad":"markdown","4b435ba0":"markdown"},"source":{"c54d1527":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        print(filename)","77ad46ba":"# Review each of the csv files to understand what is available\ndir_name = '\/kaggle\/input\/mlb-player-digital-engagement-forecasting\/'\ndata = ['players', 'teams', 'seasons', 'awards']\n# Create a list of dataframes\ncsvs = [pd.read_csv(f'{dir_name}{d}.csv') for d in data]","6c42eff5":"# Import the awards data and set date\nawards = pd.read_csv(f'{dir_name}awards.csv')","46c7fc64":"# Variable data types\nawards.dtypes","75795ac2":"# Describe the key variables within the awards DataFrame\n# Including the 'all' parameter allows the string variables to be included in the output\nawards.describe(include='all', datetime_is_numeric=True)","caaafbfe":"# Sample of the dataframe\nawards.sample(10)","07072c73":"#word cloud visualisation to show the popular neighbourhoods\nfrom wordcloud import WordCloud\n\nplt.subplots(figsize=(20,15))\nwordcloud = WordCloud(\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(awards.playerName))\nplt.imshow(wordcloud)\nplt.title('Word Cloud for Player Name Awards')\nplt.axis('off')\nplt.show()","3fba05e4":"# Understand the 10 largest award winners\ntop_players = awards.groupby('playerName')['playerName'].count().nlargest(n=10, keep='all')\ntop_players","3d789648":"# For the 10 largest award winners. Lets understand the number of unique awards won\n# Did one player dominate a single award\nplayer = awards.groupby('playerName').agg(\n    {\n        'playerName' : 'count',\n        'awardSeason' : ['min', 'max'],\n        'awardId' : pd.Series.nunique\n    }\n).nlargest(10, ('playerName', 'count'))\nplayer","1e3c66f2":"# Convert date variable from object to datetime\nawards['awardDate'] = pd.to_datetime(awards['awardDate'])\nawards.head()","16f8fcda":"# Animated scattergraph to review player awards by time for the largest award winners\ntp_array = np.array(awards['playerName'].isin(player.index))\nawards_tp = awards.loc[(tp_array)]","2ab34fb5":"awards_tp.head()","e8d32ca7":"awards_sum = awards_tp.groupby(['playerName', 'awardSeason'])['playerId'].count()\nawards_sum1 = awards_sum.reset_index()\nawards_sum1","1b53bf7c":"fig = px.bar(awards_sum1, x='playerName', y='playerId', color='playerName',\n            animation_frame='awardSeason')\nfig.show()","6703d888":"# Import the players data and set date\ndf_p = pd.read_csv(f'{dir_name}players.csv')","3e766ea9":"df_p.sample(10)","68920c7a":"# Distribution of players by country\ndf_p_s1 = df_p.groupby('birthCountry').agg(\n    {\n        'playerName' : 'count'\n    }\n)\n\n# Bar chart\nfig = px.bar(df_p_s1, x=df_p_s1.index, y=\"playerName\", title=\"Distribution by Country\")\nfig.show()","7dd9089b":"# Convert the mlbDebutDate and DOB to datetime\ndf_p['mlbDebutDate'] = pd.to_datetime(df_p['mlbDebutDate'])\ndf_p['DOB'] = pd.to_datetime(df_p['DOB'])\n","9c5da8be":"# Debut year and birth year\ndf_p['mlbDebutYear'] = df_p['mlbDebutDate'].dt.year\ndf_p['DOBYear'] = df_p['DOB'].dt.year\n\n# What age is average for starting in MLB\ndf_p['DebutAge'] = df_p['mlbDebutYear'] - df_p['DOBYear']","a1df3a9c":"# summary of the numeric values\ndf_p.describe()","99003252":"# Has the distribution of new players got younger over time?\nage_sum = df_p.groupby(['mlbDebutYear', 'DebutAge'])['playerName'].count()\nage_sum = age_sum.reset_index()\nage_sum\nfig = px.bar(age_sum, x=\"mlbDebutYear\", y=\"playerName\", color=\"DebutAge\")\nfig.show()","0e3f1bf7":"# Review a scatter plot\nfig = px.scatter(\n    age_sum, x='mlbDebutYear', y='DebutAge', opacity=0.65, size=\"playerName\",\n    trendline='ols', trendline_color_override='darkblue'\n)\nfig.show()","3f1328e3":"# MLB Player Digital Engagement Forecasting","e6cffaaa":"### 1. Importing the data","8bb47b67":"Ideas\n* Do rivalry games create more digital content for players?\n* Are the best players on the best teams the most followed on twitter?\n* Do other sporting events impact the digital content for MLB?\n* Does digital engagement change during the innings?\n* Does the all-star event impact players performances?\n* Do awards benefit players digital content?\n* Do twitter followers engage with the best players?","60032924":"### 2. Exploratory data analysis","fcacea7d":"#### 2a. Awards data","8dd03bad":"#### 2b. Players","4b435ba0":"This output will be impacted by players who have left the baseball dataset over time. The players that remain are only included. Therefore the most recent years provide a fairer reflection of the age distribution for MLB debut's. "}}