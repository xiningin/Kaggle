{"cell_type":{"edb55817":"code","8412c8e6":"code","92374517":"code","ccc65f10":"code","8ee46ea5":"code","120a82dd":"code","7812edca":"code","5fb70b86":"code","9c994715":"code","165d4fc7":"code","f748ea37":"markdown","5491badc":"markdown","bd5b83b2":"markdown"},"source":{"edb55817":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use('default')\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8412c8e6":"carCsv = pd.read_csv('..\/input\/cardataset\/data.csv')","92374517":"carCsv.columns = carCsv.columns.str.lower()","ccc65f10":"# Create filter to setup dataframes for midrange cars\ndef rangeFilter(make):\n    return carCsv[(carCsv['msrp'] > 30000) & (carCsv['msrp'] < 100000) & \n           (carCsv['make'] == make) &\n           (carCsv['market category'].notna())].drop(\n        columns = ['popularity', 'number of doors'])","8ee46ea5":"df_toyota = rangeFilter('Toyota')\ndf_lexus = rangeFilter('Lexus')\ndf_scion = rangeFilter('Scion')\ndf_acura = rangeFilter('Acura')\ndf_honda = rangeFilter('Honda')\n\n# Dataframes for parent companies\ntoyota_df = [df_toyota, df_lexus, df_scion]\nhonda_df = [df_acura, df_honda]","120a82dd":"# Plot some examples of midrange Asian cars\ndef plot_hist(df_group):\n    for df in df_group:\n        sns.distplot(a=df['msrp'], label=df['make'], kde=False)\n    plt.title('MSRP Comparison')\n    plt.ylabel('# of models')\n    plt.xlabel('MSRP')\n    plt.legend()","7812edca":"plot_hist(toyota_df)","5fb70b86":"plot_hist(honda_df)","9c994715":"carMakes = set(carCsv['make'])\n\n# Create a dictionary of car makes and median price\n# Sort by median price\nmedian_make_d = {}\nfor carMake in carMakes:\n    make = carCsv.loc[carCsv['make'] == carMake]\n    # A limit of >15k seems like the right limit to ignore outliers on the lower end    \n    median_make = make['msrp'][make['msrp'] > 20000].median()\n    median_make_d[median_make] = carMake\nsorted_median_make_d = dict(sorted(median_make_d.items(), reverse=True))\n\nmedian_make_df = pd.DataFrame(sorted_median_make_d.items(), columns = ['median_msrp', 'make'])\nplt.figure(figsize=(5,10))\nsns.barplot(x='median_msrp', y='make', data=median_make_df)","165d4fc7":"# Removing Bugatti to have better visibility in graph\nfrom copy import deepcopy\n\n# Create deep copy to avoid changing `sorted_median_make_d`  \nno_bugatti_median_d = deepcopy(sorted_median_make_d)\nbugatti_key = max(no_bugatti_median_d.keys())\nno_bugatti_median_d.pop(bugatti_key)\n\nno_bugatti_df = pd.DataFrame(no_bugatti_median_d.items(), columns = ['median_msrp', 'make'])\nplt.figure(figsize=(15,16))\nplt.title('Median MSRP - 2017 & older models')\nbp = sns.barplot(x='median_msrp', y='make', data=no_bugatti_df)\n\n# Display value on the graph\n# Functionality is available on matplotlib\n# Get a variable from matplotlib\nax = plt.gca()\n\n# Use patches() and text() to annotate bars\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_y() + p.get_height()\/2. +0.2\n    val = int(width)\n    \n    # Using comma as thousands separator\n    formatted_val = f'{val:,}' \n    \n    ax.text(width, \n            height,\n            formatted_val,\n            color='black',\n            ha='left')","f748ea37":"### Setup required libraries and read from the input file","5491badc":"### Define functions to filter the range and plot a histogram","bd5b83b2":"### Display relationship for median MSRP for different car brands up until 2017. \nSetting a condition of > 15,000$ to remove lower bound outliers.  "}}