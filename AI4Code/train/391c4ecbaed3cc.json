{"cell_type":{"a23846e4":"code","5fff41be":"code","602af009":"code","97df5109":"code","b4eec254":"code","71534ccd":"code","00445e6f":"code","f041c2d8":"code","f97714aa":"code","a1e58b7b":"code","b7631a30":"code","4988b7ac":"code","d59c3482":"code","3e5ed9cc":"code","544ab1e2":"markdown","6eda8c3f":"markdown"},"source":{"a23846e4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\ndf = pd.read_csv('..\/input\/parking-citations.csv')","5fff41be":"#Validation dataframe\ndf_validation = df[[\"Issue Date\",\"Location\",\"Violation code\",\"Fine amount\"]].copy()\ndf_validation.dropna(axis='rows', inplace=True)\ndf_validation.shape","602af009":"## Validating\n#All dates are in format like 2015-12-21T00:00:00 using regex\nassert False not in df_validation['Issue Date'].str.match(r\"^[\\d]{4}-[\\d]{2}-[\\d]{2}T.*$\").values\nprint('Issue Date is OK')\n\n#Location is string\nassert pd.api.types.is_string_dtype(df_validation['Location'])\nprint('Location is OK')\n\n#Violation code is string\nassert pd.api.types.is_string_dtype(df_validation['Violation code'])\nprint('Violation code is OK')\n\n#Fine amount is float\nassert pd.api.types.is_float_dtype(df_validation['Fine amount'])\nprint('Fine amount is OK')","97df5109":"#Issue Date to datetime\ndf['Issue Date'] = df['Issue Date'].apply(lambda x: str(x).split('T')[0])\ndf['Issue Date'] = pd.to_datetime(df['Issue Date'], infer_datetime_format=True)\ndf.set_index(df[\"Issue Date\"],inplace=True)\ndf.head()","b4eec254":"import datetime as DT\ntoday = DT.date.today()\nmonth_ago = today - DT.timedelta(days=30)\n\n#Monthly Number of Incidents\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\nsbn.lineplot(data=df['Ticket number'].resample('D').count().truncate(before=month_ago), ax=ax)\nax.set(title='Daily Number of Incidents', xlabel='Time', ylabel='NO. of Incidents')\nplt.show()\nplt.rcParams['figure.figsize'] = 15,5","71534ccd":"# import plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\n# these two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\ndata = [go.Scatter(x=df['Ticket number'].resample('D').count().truncate(before=month_ago).index, y=df['Ticket number'].resample('D').count().truncate(before=month_ago))]\n\n# specify the layout of our figure\nlayout = dict(title = \"Daily Number of Incidents\",\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False))\n\n# create and show our figure\nfig = dict(data = data, layout = layout)\niplot(fig)","00445e6f":"#group by Location\ndf_group = (df.groupby('Location', as_index=True)).agg({'Ticket number':'count'}).rename(columns={'Ticket number': 'Incidents Size'})\n#select top 10 location based on incidents\ndf_group = df_group.sort_values(by='Incidents Size', ascending=False).iloc[0:10, :]\ndf_group.head(10)","f041c2d8":"#Number of Incidents of top 10 locations\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\nsbn.barplot(x=df_group.index, y=df_group['Incidents Size'], ax=ax)\nax.set(title='Incidents by Location', xlabel='Location', ylabel='NO. of Incidents')\nplt.show()\nplt.rcParams['figure.figsize'] = 28,5","f97714aa":"# import plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\n# these two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\ndata = [go.Bar(x=df_group.index, y=df_group['Incidents Size'])]\n\n# specify the layout of our figure\nlayout = dict(title = \"Incidents by Location\",\n              xaxis= dict(ticklen= 5,zeroline= False))\n\n# create and show our figure\nfig = dict(data = data, layout = layout)\niplot(fig)","a1e58b7b":"#group by Violation code\ndf_group = (df.groupby('Violation code', as_index=True)).agg({'Ticket number':'count'}).rename(columns={'Ticket number': 'Incidents Size'})\n#select top 10 location based on incidents\ndf_group = df_group.sort_values(by='Incidents Size', ascending=False).iloc[0:10, :]\ndf_group.head(10)","b7631a30":"#Top 10 violation codes\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\nsbn.barplot(x=df_group.index, y=df_group['Incidents Size'], ax=ax)\nax.set(title='Incidents by Violation Code', xlabel='Violation Code', ylabel='NO. of Incidents')\nplt.show()\nplt.rcParams['figure.figsize'] = 23,8","4988b7ac":"# import plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\n# these two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\ndata = [go.Bar(x=df_group.index, y=df_group['Incidents Size'])]\n\n# specify the layout of our figure\nlayout = dict(title = \"Incidents by Violation Code\",\n              xaxis= dict(ticklen= 5,zeroline= False))\n\n# create and show our figure\nfig = dict(data = data, layout = layout)\niplot(fig)","d59c3482":"#Monthly Amount Collected\nfig = plt.figure()\nax = fig.add_subplot(1,1,1)\nsbn.lineplot(data=df['Fine amount'].resample('M').sum().truncate(before='2018'), ax=ax)\nax.set(title='Monthly Fine Amount', xlabel='Time', ylabel='Fine Amount')\nplt.show()\nplt.rcParams['figure.figsize'] = 15,5","3e5ed9cc":"# import plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\n# these two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\ndata = [go.Scatter(x=df['Fine amount'].resample('M').sum().truncate(before='2018').index, y=df['Fine amount'].resample('M').sum().truncate(before='2018'))]\n\n# specify the layout of our figure\nlayout = dict(title = \"Monthly Fine Amount\",\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False))\n\n# create and show our figure\nfig = dict(data = data, layout = layout)\niplot(fig)","544ab1e2":"# Plots\n* Daily Number of Incidents\n* Number of Incidents of top 10 locations\n* Top 10 violated codes\n* Monthly Fine amount","6eda8c3f":"# Preprocessing, Test and Validation"}}