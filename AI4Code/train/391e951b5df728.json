{"cell_type":{"5d7faa9d":"code","4da7ef49":"code","c633c3cc":"code","41fdf743":"code","c79d8f4b":"code","f0d171e8":"code","f9c21f79":"code","d5c7da9d":"code","7b151029":"code","e02c3582":"code","aa43c390":"markdown","14c1a197":"markdown","35ebd82c":"markdown","b7e7e2da":"markdown","c52699e7":"markdown","471623d6":"markdown","52f21b26":"markdown"},"source":{"5d7faa9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname,'  ', filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4da7ef49":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor","c633c3cc":"dataset = pd.read_csv('..\/input\/szeged-weather\/weatherHistory.csv')","41fdf743":"x = dataset.iloc[:500, 3].values.reshape(-1, 1)\ny = dataset.iloc[:500, 5].values.reshape(-1, 1)","c79d8f4b":"x[:6]","f0d171e8":"y[:6]","f9c21f79":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)","d5c7da9d":"regressor = RandomForestRegressor(n_estimators=20)\nregressor.fit(x_train, y_train)","7b151029":"x_grid = np.arange(min(x_train), max(x_train), 0.5).reshape(-1, 1)\nplt.scatter(x_train, y_train, color=\"pink\")\nplt.plot(x_grid, regressor.predict(x_grid), color=\"blue\")\nplt.title('Humidity Vs Temperature(Training Set)')\nplt.xlabel('Humidity')\nplt.ylabel('Temperature')\nplt.show()","e02c3582":"plt.scatter(x_test, y_test, color=\"pink\")\nplt.plot(x_grid, regressor.predict(x_grid), color=\"blue\")\nplt.title('Humidity Vs Temperature(Test Set)')\nplt.xlabel('Humidity')\nplt.ylabel('Temperature')\nplt.show()","aa43c390":"Import the libraries","14c1a197":"Splitting into training and test set","35ebd82c":"Import the dataset","b7e7e2da":"Visualizing the training set results","c52699e7":"Assign x and y","471623d6":"Training the model","52f21b26":"Visualizing the test set"}}