{"cell_type":{"4123c607":"code","1d5016f3":"code","2d99eb06":"code","1c2fc0bf":"code","59b05091":"code","ca5db7d1":"code","cdd0016e":"code","b268eeff":"code","88a26411":"code","c9e86054":"code","63df8820":"code","461a6ab9":"code","2419b486":"code","9bfdd1da":"code","3ab681c8":"code","d5e2cc87":"code","7576fa1d":"code","d96fe1c5":"code","67007a84":"code","7ec05dfc":"code","40c0ca3f":"markdown","a5d4cfb6":"markdown","923c5ea1":"markdown","2b8164bc":"markdown","d968342d":"markdown","b6a6a724":"markdown","63e3d284":"markdown","a2536a83":"markdown","cadc3239":"markdown","884a73a0":"markdown"},"source":{"4123c607":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d5016f3":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadslonelycsv\/lonely.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'lonely.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","2d99eb06":"df.head()","1c2fc0bf":"# Numerical features\nNumerical_feat = [feature for feature in df.columns if df[feature].dtypes != 'O']\nprint('Total numerical features: ', len(Numerical_feat))\nprint('\\nNumerical Features: ', Numerical_feat)","59b05091":"# Let's find the null values in data\n\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(20)","ca5db7d1":"# categorical features\ncategorical_feat = [feature for feature in df.columns if df[feature].dtypes=='O']\nprint('Total categorical features: ', len(categorical_feat))\nprint('\\n',categorical_feat)","cdd0016e":"# Lets first handle numerical features with nan value\nnumerical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes!='O']\nnumerical_nan","b268eeff":"df[numerical_nan].isna().sum()","88a26411":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=df[feature].median()\n    \n    df[feature].fillna(median_value,inplace=True)\n    \ndf[numerical_nan].isnull().sum()","c9e86054":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes=='O']\nprint(categorical_nan)","63df8820":"df[categorical_nan].isna().sum()","461a6ab9":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","2419b486":"df[categorical_nan].isna().sum()","9bfdd1da":"col_search = 'topic1'\nsns.barplot(y=df[col_search].value_counts().index,x=df[col_search].value_counts())\nplt.show()\nprint(f'Unique values: {df[col_search].unique()}')","3ab681c8":"col_search = 'topic1'\nds = df[~(df[col_search].isin(['None','before tax','Index of Multiple','Quintile']))].copy()\nds.reset_index(drop=True,inplace=True)","d5e2cc87":"col_search = 'topic2'\nsns.barplot(y=ds[col_search].value_counts().index,x=ds[col_search].value_counts())\nplt.show()","7576fa1d":"col_search = 'totals'\nsns.barplot(y=ds[col_search].value_counts().index,x=ds[col_search].value_counts())\nplt.show()","d96fe1c5":"col_search = 'Often\/ always'\nsns.barplot(y=ds[col_search].value_counts().index,x=ds[col_search].value_counts())\nplt.show()","67007a84":"#Sal\u00e1rio m\u00e9dio a patir dos ranges dispon\u00edveis\ncol_search = 'totals'\nds['meanTot'] = ds[col_search].fillna('$ 0\/').apply(lambda x: #get the mean in ranges\n                    int( #transform all in int in the end\n                    (int(str(x)[str(x).rfind(' ')+1:str(x).rfind('\/')].replace('.','')) # Get max in range \n                    +\n                    int(str(x)[str(x).find('$')+2:str(x).find('\/')].replace('.','')) #Get min\n                    )\/2)) #divide by 2","7ec05dfc":"plt.figure(figsize=(10,4))\n\nax1 = plt.subplot(131)\nax2 = plt.subplot2grid((1, 3), (0, 1),colspan=2)\n\nplt.xticks(np.arange(0,25000,step=2500))\n\n\n\nsns.violinplot(data=ds['meanTot'],ax=ax1)\nsns.lineplot(data=ds['meanTot'].value_counts(),ax=ax2)\n\n\nplt.tight_layout()\n\nplt.show()\n\nprint(f'The mean of totals is {int(ds[\"meanTot\"].mean())},00')","40c0ca3f":"#Codes from Lucas Trajano  https:\/\/www.kaggle.com\/lucastrajano\/eu-preciso-de-gradua-o-pra-trabalhar-na-rea","a5d4cfb6":"That data was downloaded on LGBT Community in London https:\/\/www.kaggle.com\/gauravdahiya\/lgbt-community-in-london Table 6.","923c5ea1":"<iframe width=\"803\" height=\"535\" src=\"https:\/\/www.youtube.com\/embed\/djU4Lq_5EaM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","2b8164bc":"Removing the following columns: None, before tax, Index of Multiple, Quintile.","d968342d":"<iframe width=\"950\" height=\"535\" src=\"https:\/\/www.youtube.com\/embed\/Ewm1O8Mw3RI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","b6a6a724":"#Dealing with Numerical features(handling missing data)","63e3d284":"#Categorical features(handling missing data)","a2536a83":"#Bobby Vinton - Mr. Lonely","cadc3239":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","884a73a0":"Carlton Banks (Alfonso Ribeiro) dancing with Tyra Banks (The Fresh Prince of Belair)."}}