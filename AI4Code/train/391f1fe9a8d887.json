{"cell_type":{"a366291b":"code","dbbeb6f0":"code","ef00bd61":"code","ca71a966":"code","2f90e4f3":"code","ba3afdbd":"code","674c6121":"code","22a3ee7d":"code","c4362873":"code","a0b46de0":"code","5dc6e257":"code","82311e59":"code","d34a5063":"code","b3bd0c7b":"code","f23dfa9a":"code","4b7e669c":"code","135c8836":"code","2ff8025f":"markdown","d355a7db":"markdown","3c819ef0":"markdown","d5385412":"markdown","49ee16a2":"markdown","24acc8c5":"markdown","eaa690ac":"markdown","eb17ddc8":"markdown","542168d2":"markdown","58fb92d1":"markdown","8e62b9be":"markdown","b7537c9b":"markdown"},"source":{"a366291b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dbbeb6f0":"# Get the data \ncolumn_names = ['user_id', 'item_id', 'rating', 'timestamp'] \n\npath = '..\/input\/movie-recimendation\/file.tsv'\n\ndf = pd.read_csv(path, sep='\\t', names=column_names) \n\n# Check the head of the data \ndf.head() \n","ef00bd61":"# Check out all the movies and their respective IDs \nmovie_titles = pd.read_csv('..\/input\/movie-recimendation\/Movie_Id_Titles.csv') \nmovie_titles.head()","ca71a966":"data = pd.merge(df, movie_titles, on='item_id') \ndata.head()","2f90e4f3":"data.groupby('title')['rating'].mean().head()","ba3afdbd":"# Calculate mean rating of all movies \ndata.groupby('title')['rating'].mean().sort_values(ascending=False).head() ","674c6121":"# Calculate count rating of all movies \ndata.groupby('title')['rating'].count().sort_values(ascending=False).head() ","22a3ee7d":"# creating dataframe with 'rating' count values \nratings = pd.DataFrame(data.groupby('title')['rating'].mean()) \n\nratings['num of ratings'] = pd.DataFrame(data.groupby('title')['rating'].count()) \n\nratings.head()","c4362873":"import matplotlib.pyplot as plt \nimport seaborn as sns \n\nsns.set_style('white') \n%matplotlib inline","a0b46de0":"# plot graph of 'num of ratings column' \nplt.figure(figsize =(10, 4)) \n\nratings['num of ratings'].hist(bins = 70) ","5dc6e257":"# plot graph of 'ratings' column \nplt.figure(figsize =(10, 4)) \n\nratings['rating'].hist(bins = 70) ","82311e59":"data = pd.merge(df, movie_titles, on='item_id') \ndata.head() ","d34a5063":"# Sorting values according to \n# the 'num of rating column' \nmoviemat = data.pivot_table(index ='user_id', \n\t\t\tcolumns ='title', values ='rating') \n\nmoviemat.head() \n\nratings.sort_values('num of ratings', ascending = False).head(10) ","b3bd0c7b":"# analysing correlation with similar movies \nstarwars_user_ratings = moviemat['Star Wars (1977)'] \nliarliar_user_ratings = moviemat['Liar Liar (1997)'] \n\nstarwars_user_ratings.head()","f23dfa9a":"# analysing correlation with similar movies \nsimilar_to_starwars = moviemat.corrwith(starwars_user_ratings) \nsimilar_to_liarliar = moviemat.corrwith(liarliar_user_ratings) \n\ncorr_starwars = pd.DataFrame(similar_to_starwars, columns =['Correlation']) \ncorr_starwars.dropna(inplace = True) \n\ncorr_starwars.head()","4b7e669c":"# Similar movies like starwars \ncorr_starwars.sort_values('Correlation', ascending = False).head(10) \ncorr_starwars = corr_starwars.join(ratings['num of ratings']) \ncorr_starwars.head()\n\ncorr_starwars[corr_starwars['num of ratings']>100].sort_values('Correlation', ascending = False).head() \n","135c8836":"# Similar movies as of liarliar \ncorr_liarliar = pd.DataFrame(similar_to_liarliar, columns =['Correlation']) \ncorr_liarliar.dropna(inplace = True) \n\ncorr_liarliar = corr_liarliar.join(ratings['num of ratings']) \ncorr_liarliar[corr_liarliar['num of ratings']>100].sort_values('Correlation', ascending = False).head() ","2ff8025f":"Here,disply first five movies along with their average rating","d355a7db":"Here, we find same kind of movies","3c819ef0":"**Here , We use the read_csv() method of the Pandas library to read the \"ratings.csv\" file. Next, we call the head() method from the dataframe object returned by the read_csv() function, which will display the first five rows of the dataset.****\nThe movieId column contains the Id of the movie, the rating column contains the rating left by the user. Ratings can have values between 1 and 5. And the timestamp refers to the time at which the user left the rating.","d5385412":"****The output the movies that are highly correlated with \"liar liar (1997)\". The movies in the\nlist are some of the most famous movies .and \"Liar Liar (1997)\" is also a very famous\nmovie.","49ee16a2":"Here,disply first five movies along with their highest rating","24acc8c5":"# FOR PPT CHECK THE DATASET.","eaa690ac":"Filter movies correlated to \"Star Wars (1977)\", that have more than 584 ratings.","eb17ddc8":"Filter movies correlated to \"Star Wars (1977)\", that have more than 584 ratings.","542168d2":"# **DATA_MINERS**\n# **Movie Recommender System Implementation in Python****\nWe develop a very simple movie recommender system that uses the correlation between the ratings assigned todifferent movies, and find the similarity between the movies.\nWe are use for this problem is the MovieLens Dataset.","58fb92d1":"Here We can see, Most of the users assign rating as integer value like 1, 2, 3, 4 or 5. it is evident that the data has a weak normal distribution with the mean of around 3.5.","8e62b9be":"Here,we know that the average rating per movie and the number of ratings per movie both are important attributes.","b7537c9b":"Here, We see that most of the movies have received less than 50 ratings. While the number of movies having more than 100 ratings is very low."}}