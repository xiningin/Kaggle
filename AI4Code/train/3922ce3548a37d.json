{"cell_type":{"f29efb86":"code","d5a09c38":"code","d56da8ba":"code","6f93395a":"code","5d542525":"code","6703b4e9":"code","ec41d87a":"code","4e5bcbf0":"code","743c9a40":"code","c7d25f59":"code","122601f4":"code","9d1a8f06":"code","907b7df0":"code","b6ec0dc5":"code","c8dfd478":"code","fa344ee1":"code","8e751f50":"code","97bf589b":"markdown","ef86ee27":"markdown","824fbe53":"markdown","ab53d114":"markdown","0d4b342a":"markdown","76bde6f8":"markdown","505260f4":"markdown","6ef5ee63":"markdown","632b04c0":"markdown"},"source":{"f29efb86":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport tensorflow.keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\n\nfrom sklearn.tree import DecisionTreeRegressor\n\nfrom sklearn.neighbors import KNeighborsRegressor\n\nfrom sklearn.linear_model import Lasso\n\nfrom sklearn.linear_model import Ridge\n\nfrom keras.callbacks import EarlyStopping\nfrom keras.layers.advanced_activations import LeakyReLU\n\nfrom sklearn.model_selection import KFold\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.model_selection import cross_val_score \nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import RepeatedKFold","d5a09c38":"data =  pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv', error_bad_lines = False, encoding='latin-1')\n#saving target value into different dataframe\nanswer = data.drop(['fbs','restecg','exang','oldpeak', 'ca', 'thal', 'slope', 'age', 'sex', 'cp', 'trestbps', 'chol', 'thalach'], axis=1)\n#dropping extraneous data\ndata = data.drop(['fbs','restecg','exang','oldpeak', 'ca', 'thal', 'slope', 'target'], axis=1)\n#Renaming columns for clarity\ndata.columns = ['Age', 'Gender','Chest Pain','Resting Blood Pressure', 'Cholesterol', 'Max HR']","d56da8ba":"data.head()","6f93395a":"from tensorflow.keras.wrappers.scikit_learn import KerasRegressor\n\ndef buildmodel():\n    model= Sequential([\n        Dense(256, input_dim=6),\n        LeakyReLU(alpha=0.3),\n        Dropout(0.1),\n        Dense(256),\n        LeakyReLU(alpha=0.3),\n        Dropout(0.1),\n        Dense(256),\n        LeakyReLU(alpha=0.3),\n        Dropout(0.1),\n        Dense(256),\n        LeakyReLU(alpha=0.3),\n        Dropout(0.1),\n        Dense(1)\n    ])\n    model.compile(optimizer='adam', loss='mean_absolute_error', metrics=['mean_absolute_error'])\n    return(model)\n\nestimator= KerasRegressor(build_fn=buildmodel, epochs=100, batch_size=2000, verbose=0)\nkfold= RepeatedKFold(n_splits=5, n_repeats=100)\nresults = cross_val_score(estimator, data, answer, cv=kfold)\nscore0 = abs(results.mean())","5d542525":"regr_1 = DecisionTreeRegressor(max_depth=3)","6703b4e9":"regr_1.fit(data, answer)","ec41d87a":"score1 = abs(cross_val_score(estimator = regr_1, X = data, y = answer, cv=kfold).mean())\n\nprint(score1)","4e5bcbf0":"regr_2 = KNeighborsRegressor(n_neighbors=3,weights='distance', algorithm='brute')","743c9a40":"regr_2.fit(data, answer)","c7d25f59":"score2 = abs(cross_val_score(estimator = regr_2, X = data, y = answer, cv=kfold).mean())\n\nprint(score2)","122601f4":"regr_3 = Lasso(alpha=0.001)","9d1a8f06":"regr_3.fit(data, answer)","907b7df0":"score3 = abs(cross_val_score(estimator = regr_3, X = data, y = answer, cv=kfold).mean())\n\nprint(score3)","b6ec0dc5":"regr_4 = Ridge(alpha=0.001)","c8dfd478":"regr_4.fit(data, answer)","fa344ee1":"score4 = abs(cross_val_score(estimator = regr_4, X = data, y = answer, cv=kfold).mean())\n\nprint(score4)","8e751f50":"plt.style.use('ggplot')\n\nx = ['ANN', 'Regression Tree', 'KNN', 'Lasso', 'Ridge']\nenergy = [score0, score1, score2, score3, score4]\n\nx_pos = [i for i, _ in enumerate(x)]\n\nplt.bar(x_pos, energy)\nplt.xlabel(\"Model\")\nplt.ylabel(\"Loss\")\nplt.title(\"K Fold Cross Validation Scores\")\n\nplt.xticks(x_pos, x)\n\nplt.show()","97bf589b":"# Data Preprocessing","ef86ee27":"# Lasso Regression","824fbe53":"Mean Absolute Error on Test Set","ab53d114":"# K Nearest Neighbor Regression","0d4b342a":"\u2022Age: Age in years\u2022Gender: (1 = male; 0 = female) Value 0: female Value 1: male\u2022Chest Pain: Previously reported chest pain Value 0: none Value 1: typical angina Value 2: atypical angina Value 3: non-anginal pain Value 4: asymptomatic\u2022Resting Blood Pressure: Resting blood pressure in mm Hg measured on admission to the hospital\u2022Cholesterol: Cholesterol in mg\/dl measured on admission to the hospital\u2022Max HR: Maximum heart rate measured on admission to the hospital","76bde6f8":"# Artificial Neural Network Regression","505260f4":"# Regression Tree ","6ef5ee63":"# Ridge Regression","632b04c0":"# Cross Validation Scores"}}