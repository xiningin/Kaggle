{"cell_type":{"8a8d7693":"code","c9be1356":"code","2e823c71":"code","20869688":"code","c6572b2a":"code","a7544022":"code","9c27a73d":"code","756402d4":"code","35d75933":"code","61bdc6f7":"code","3693f6c3":"code","35c21a81":"code","d1bed2a9":"code","c4e5769f":"code","5cf317a8":"code","61180d23":"code","de6fa58c":"code","25c8f461":"code","f53b57ef":"code","907084d9":"code","b9ca845b":"code","05cfe49a":"code","bd0c7a9a":"code","b12ed84f":"code","fbf0a85c":"code","422af55f":"code","04581038":"markdown","b9e1bb37":"markdown","bae057c1":"markdown","22c555b8":"markdown","c0c8d6e8":"markdown","8f171a32":"markdown","878e00ea":"markdown","7077354f":"markdown","64fc1a84":"markdown","0a5fa1c1":"markdown","7a4fa96b":"markdown","0012f79c":"markdown","09d60138":"markdown","a6b80904":"markdown","9e2c4c39":"markdown","d09b2e76":"markdown","82699af2":"markdown","ad9e8587":"markdown","cfc0903a":"markdown","66b82ea3":"markdown","519841e7":"markdown","0becbc2c":"markdown","b20a51ff":"markdown","5b2ddab1":"markdown","96e78cfa":"markdown"},"source":{"8a8d7693":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c9be1356":"import numpy as np\nimport pandas as pd\ncustomers = pd.read_csv(\"..\/input\/dataset\/FyntraCustomerData.csv\")","2e823c71":"customers.head()","20869688":"customers.describe()","c6572b2a":"customers.info()","a7544022":"#Check Correlations\n# More time on site, more money spent.\nsns.jointplot(x='Time_on_Website',y='Yearly_Amount_Spent',data=customers)","9c27a73d":"correlation = customers.corr()","756402d4":"sns.heatmap(correlation, cmap=\"YlGnBu\")","35d75933":"sns.jointplot(x='Time_on_App',y='Yearly_Amount_Spent',data=customers)\n# This one looks stronger correlation than Time_on_Website","61bdc6f7":"sns.pairplot(customers)","3693f6c3":"sns.lmplot(x='Length_of_Membership',y='Yearly_Amount_Spent',data=customers)","35c21a81":"sns.jointplot(x='Length_of_Membership', y='Yearly_Amount_Spent', data=customers,kind=\"kde\")","d1bed2a9":"X = customers[['Avg_Session_Length', 'Time_on_App','Time_on_Website', 'Length_of_Membership']]","c4e5769f":"y = customers['Yearly_Amount_Spent']","5cf317a8":"from sklearn.model_selection import train_test_split","61180d23":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=85)","de6fa58c":"from sklearn.linear_model import LinearRegression","25c8f461":"lm = LinearRegression()","f53b57ef":"lm.fit(X_train,y_train)","907084d9":"#calculating the residuals\nprint('y-intercept             :' , lm.intercept_)\nprint('beta coefficients       :' , lm.coef_)","b9ca845b":"predictions = lm.predict( X_test)","05cfe49a":"plt.scatter(y_test,predictions)\nplt.xlabel('Y Test ')\nplt.ylabel('Y Predicted ')","bd0c7a9a":"# here You can check the values Test vrs Prediction\ndft = pd.DataFrame({'Y test': y_test, 'Y Pred':predictions})\ndft.head(10)","b12ed84f":"# calculate these metrics by hand!\nfrom sklearn import metrics\n\nprint('Mean Abs Error MAE      :' ,metrics.mean_absolute_error(y_test,predictions))\nprint('Mean Sqrt Error MSE     :' ,metrics.mean_squared_error(y_test,predictions))\nprint('Root Mean Sqrt Error RMSE:' ,np.sqrt(metrics.mean_squared_error(y_test,predictions)))\nprint('r2 value                :' ,metrics.r2_score(y_test,predictions))","fbf0a85c":"sns.distplot((y_test-predictions),bins=50);","422af55f":"coeffecients = pd.DataFrame(lm.coef_,X.columns)\ncoeffecients.columns = ['Coeffecient']\ncoeffecients","04581038":"Based on this plot what looks to be the most correlated feature with Yearly Amount Spent","b9e1bb37":"**Create an instance of a LinearRegression() model named lm.**","bae057c1":"<a href=\"#top\" class=\"btn btn-primary btn-lg active\" role=\"button\" aria-pressed=\"true\">Go to TOP<\/a>","22c555b8":"<a id='top'><\/a>\n> ## <div style=\"text-align: center\"> Machine Learning using Python<\/div>\n### Example using Linear Regression Model\n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/53\/Linear_least_squares_example2.png\/220px-Linear_least_squares_example2.png\">","c0c8d6e8":"** Create a scatterplot of the real test values versus the predicted values.\nIdeally for each point value and x and y axis should be same**","8f171a32":"## For more Machine Learning Algorithms check this kernel \n\n## [LINK](https:\/\/www.kaggle.com\/marcovasquez\/top-machine-learning-algorithms)\n","878e00ea":"<a id=\"top\"><\/a> <br>\n## Notebook  Content\n\n1. [Imports](#1)\n1. [Understand the Data](#2)\n1. [Exploratory Data Analysis](#3)\n1. [Estimator](#4)\n1. [Training and Testing Data](#5)\n1. [Training the Model](#6)\n1. [Predicting Test Data](#7)\n1. [Evaluating the Model](#8)\n1. [Residuals](#9)\n1. [Final Results](#10)","7077354f":"It is used to estimate real values (cost of houses, number of calls, total sales etc.) based on continuous variable(s). Here, we establish relationship between independent and dependent variables by fitting a best line. This best fit line is known as regression line and represented by a linear equation *Y= a X + b.","64fc1a84":"<a id=\"7\"><\/a> <br>\n## 7- Predicting Test Data\nNow that we have fit our model, let's evaluate its performance by predicting off the test values!\n\n** Use lm.predict() to predict off the X_test set of the data.**","0a5fa1c1":"<a id=\"5\"><\/a> <br>\n## 5- Training and Testing Data\n\nscikit-learn provides a helpful function for partitioning data, train_test_split, which splits out your data into a training set and a test set.\n\nTraining and test usually is 70% for training and 30% for test\n\n- Training set for fitting the model -> to the numerical features of the customers\n- Test set for evaluation only -> to the \"Yearly_Amount_Spent\" column","7a4fa96b":"1. ** No missing data and more easy to work with","0012f79c":"<a id=\"2\"><\/a> <br>\n## 2- Understand the Data\n\nWe'll work with the FyntraCustomerData.csv. It has Customer info, such as Email, Address. Then it also has numerical value columns:\n\n* Avg_Session_Length: Average session of in-store style advice sessions.\n* Time_on_App: Average time spent on App in minutes\n* Time_on_Website: Average time spent on Website in minutes\n* Length_of_Membership: How many years the customer has been a member. \n* Yearly_Amount_Spent: The output parameter -- Amount Spend in thousand $ in a year \n\n\n** Read in the FyntraCustomerData.csv file as a DataFrame called customers.**","09d60138":"**Check the head of customers, and check out its info() and describe() methods to get some insights into data","a6b80904":"<a id=\"1\"><\/a> <br>\n## 1- Imports\n** Import pandas, numpy, matplotlib,and seaborn. Then set %matplotlib inline \n","9e2c4c39":"####  **I hope you find this kernel helpful and some <font color=\"red\"><b>UPVOTES<\/b><\/font> would be very much appreciated**","d09b2e76":"** Train\/fit lm on the training data.**","82699af2":"<a id=\"4\"><\/a> <br>\n## 4- Estimator\nGiven a scikit-learn estimator object named **model**, the following methods are available:\n\n#### Available in all Estimators\n\n**model.fit()** : fit training data. For supervised learning applications, this accepts two arguments: the data X and the labels y (e.g. model.fit(X, y)). For unsupervised learning applications, this accepts only a single argument, the data X (e.g. model.fit(X)).\n\n---------------------------------------------------------\n\n#### Available in supervised estimators\n\n**model.predict()** : given a trained model, predict the label of a new set of data. This method accepts one argument, the new data X_new (e.g. model.predict(X_new)), and returns the learned label for each object in the array.\n\n**model.predict_proba()** : For classification problems, some estimators also provide this method, which returns the probability that a new observation has each categorical label. In this case, the label with the highest probability is returned by model.predict().\n**model.score()** : for classification or regression problems, most (all?) estimators implement a score method. Scores are between 0 and 1, with a larger score indicating a better fit.\n\n---------------------------------------------------------\n#### Available in unsupervised estimators\n\n**model.predict()** : predict labels in clustering algorithms.\n**model.transform()** : given an unsupervised model, transform new data into the new basis. This also accepts one argument X_new, and returns the new representation of the data based on the unsupervised model.\n**model.fit_transform()** : some estimators implement this method, which more efficiently performs a fit and a transform on the same input data.","ad9e8587":"<a id=\"3\"><\/a> <br>\n## 3- Exploratory Data Analysis\n\nLet's explore the data! for better understanding**\n\n\nUse seaborn to create a jointplot to compare the Time on Website and Yearly Amount Spent columns. **","cfc0903a":"####  **I hope you find this kernel helpful and some <font color=\"red\"><b>UPVOTES<\/b><\/font> would be very much appreciated**","66b82ea3":"Interpreting the coefficients:\n\n- Holding all other features fixed, a 1 unit increase in **Avg. Session Length** is associated with an **increase of 26.08 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Time on App** is associated with an **increase of 39.18 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Time on Website** is associated with an **increase of 0.40 total dollars spent**.\n- Holding all other features fixed, a 1 unit increase in **Length of Membership** is associated with an **increase of 61.41 total dollars spent**.\n\n\n**Clearly Time On App leads to higher revenue conversion \u2013 hence company should focus on App rather than website.  Whether company should shutdown the website depends solely on management take on revenue through website **","519841e7":"**Let's explore these types of relationships across the entire data set. Use [pairplot](https:\/\/stanford.edu\/~mwaskom\/software\/seaborn\/tutorial\/axis_grids.html#plotting-pairwise-relationships-with-pairgrid-and-pairplot) to recreate the plot below.","0becbc2c":"<a id=\"10\"><\/a> <br>\n## 10- Final Results\n\n** Based on coefficients interpret company should focus more on their mobile app or on their website**","b20a51ff":"<a id=\"8\"><\/a> <br>\n## 8- Evaluating the Model\n\nLet's evaluate our model performance by calculating the residual sum of squares \n\n- Calculate the  Root Mean Squared Error\n- Mean Abs Error MAE \n- Mean Sqrt Error MSE \n- r2 value ","5b2ddab1":"<a id=\"9\"><\/a> <br>\n## 9- Residuals\n\nYou should have gotten a very good model with a good fit. Let's quickly explore the residuals to make sure everything was okay with our data. \n\n**Plot a histogram of the residuals and make sure it looks normally distributed. Use either seaborn distplot, or just plt.hist().**","96e78cfa":"<a id=\"6\"><\/a> <br>\n## 6- Training the Model\n\nNow its time to train our model on our training data!\n\n** Import LinearRegression from sklearn.linear_model **"}}