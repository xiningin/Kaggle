{"cell_type":{"9bae4504":"code","937d25eb":"code","03951b2d":"code","a8c7c960":"code","20bf5466":"code","d8404909":"code","5ed3a3f8":"code","7bdd0375":"code","c02fe3a5":"code","0d6a0df9":"code","8fa4d3f1":"code","8e278439":"markdown","e8073dde":"markdown","ff0a7a3c":"markdown"},"source":{"9bae4504":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n\nimport seaborn as sns\nsns.set_style(\"dark\")\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","937d25eb":"df=pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\ndf.columns=[\"rank\",\"name\",\"platform\",\"year\",\"genre\",\"publisher\",\"na_sales\",\"eu_sales\",\"jp_sales\",\"other_sales\",\"global_sales\"]\n# first 5 rows to have an overview\ndf.head()","03951b2d":"df.describe()","a8c7c960":"df.corr(method ='pearson') ","20bf5466":"sns.pairplot(df)","d8404909":"year_data = df['year']\nprint(\"Max Year Value: \", year_data.min())","5ed3a3f8":"#Filling the missing values\ndf.isnull().sum()","7bdd0375":"best_genre = df[['genre', 'global_sales']]\nbest_genre.groupby('genre').sum()","c02fe3a5":"# pie plot to illustrate the diffrence\nplt.figure(figsize=(12,8))\ncolors = sns.color_palette(\"muted\")\nax = sns.barplot(data = best_genre, y = best_genre.genre, x= best_genre.global_sales)\nax.set_xlabel(xlabel='Global Sales', fontsize=16)\nax.set_ylabel(ylabel='Genre', fontsize=16)\nax.set_title('Comparison between Global Sales for every Genre', fontsize=18)","0d6a0df9":"best_year = df[['year', 'global_sales']]\nbest_year.groupby('global_sales')\nplt.figure(figsize=(12,8))\n\nax = sns.barplot(data = best_year, x=best_year.year, y = best_year.global_sales)\nax.set_xticklabels(labels='Years', fontsize=12, rotation=50)\nax.set_xlabel(xlabel='Years', fontsize=16)\nax.set_ylabel(ylabel='Revenue Per Game in Millions', fontsize=16)\nax.set_title(label='Best Revenue Per Game by Year in $ Millions', fontsize=20)","8fa4d3f1":"plat_pop = pd.crosstab(df.platform,df.genre)\nplat_pop_total = plat_pop.sum(axis=1).sort_values(ascending= False)\nplt.figure(figsize=(10, 10))\nax = sns.barplot(y = plat_pop_total.index, x = plat_pop_total.values)\nax.set_xlabel(xlabel ='Platform', fontsize= 15 )\nax.set_ylabel(ylabel ='number of games', fontsize= 15 )\nax.set_title(label='Number of games in each platform', fontsize=20)\nplt.show()\n","8e278439":"### Best Globa Sales year","e8073dde":"#### In this data set there are 11 columns. Their names and data types as follows:\n- Rank - Ranking of overall sales, integer\n- Name - The games name, object\n- Platform - Platform of the games \n- Year - Year of the game's release, float\n- Genre - Genre of the game ,object\n- Publisher - Publisher of the game\n- NA_Sales - Sales in North America\n- EU_Sales - Sales in Europe\n- JP_Sales - Sales in Japan \n- Other_Sales - Sales in the rest of the world\n- Global_Sales - Total worldwide sales","ff0a7a3c":"> # A study for Games data from year 1980 to 2020 including:\n- Basic insighs and correlation between varibales\n- Visulization for trends in games and platform in games histroy*"}}