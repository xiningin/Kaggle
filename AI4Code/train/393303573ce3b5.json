{"cell_type":{"33bd5b1d":"code","aff8800e":"code","de835091":"code","e7da4d29":"code","dba217fd":"code","521a5578":"code","3c294582":"code","97f7349c":"code","919d2875":"code","e16ecf24":"code","9e272130":"code","47b410f7":"code","102184e3":"code","9a75baf8":"code","e0b993be":"code","2c869f04":"code","8e9806a1":"code","229eb5e5":"code","f1060ff2":"code","58ee6599":"code","3592b52b":"code","888ed56e":"code","bbb424cb":"code","21766ddb":"code","89777a40":"code","e60fd4db":"code","660b803b":"code","da785dce":"code","107c3f67":"code","2a2c2355":"code","dd3abbe1":"code","43341fc8":"markdown","0cd8bb1c":"markdown","ee9b0bb3":"markdown","0c44fbab":"markdown"},"source":{"33bd5b1d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib as plt\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# % matplotlib inline\nimport math\ntitanic_data=pd.read_csv('..\/input\/titanic\/titanic.csv')\n\n\ntitanic_data.head(10)\n","aff8800e":"print(\"# of passengers in the data are \" + str(len(titanic_data)))","de835091":"sns.countplot(x = 'Survived',data = titanic_data)","e7da4d29":"sns.countplot(x = 'Survived',hue = 'Sex',data = titanic_data)","dba217fd":"sns.countplot(x = 'Survived',hue = 'Pclass',data = titanic_data)","521a5578":"titanic_data[\"Age\"].plot.hist()","3c294582":"titanic_data[\"Fare\"].plot.hist(bins = 20,figsize = (10,5))","97f7349c":"titanic_data.info()","919d2875":"titanic_data.isnull().sum()","e16ecf24":"sns.heatmap(titanic_data.isnull(),cmap = 'PRGn')","9e272130":"sns.boxplot(x =\"Pclass\",y = \"Age\",data = titanic_data)","47b410f7":"titanic_data.head(5)","102184e3":"titanic_data.drop(\"Cabin\",axis = 1,inplace=True)\ntitanic_data.head(5)","9a75baf8":"titanic_data.dropna(inplace=True)","e0b993be":"sns.heatmap(titanic_data.isnull(),yticklabels = False,cbar = False)","2c869f04":"titanic_data.isnull().sum()\n","8e9806a1":"sex = pd.get_dummies(titanic_data[\"Sex\"],drop_first=True)\nsex.head()","229eb5e5":"Embarked= pd.get_dummies(titanic_data[\"Embarked\"],drop_first=True)\nEmbarked.head()","f1060ff2":"Pclass = pd.get_dummies(titanic_data[\"Pclass\"],drop_first=True)\nPclass.head()","58ee6599":"titanic_data = pd.concat([titanic_data,sex,Embarked,Pclass],axis = 1)\ntitanic_data","3592b52b":"titanic_data.drop(['PassengerId','Pclass','Name','Ticket','Sex','Embarked'],axis= 1,inplace = True)","888ed56e":"titanic_data.head()","bbb424cb":"X = titanic_data.drop(\"Survived\",axis =1)\ny = titanic_data[\"Survived\"]","21766ddb":"from sklearn.model_selection import train_test_split\n","89777a40":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.3,random_state  = 1)\n","e60fd4db":"# conda update -n base conda -c anaconda\n\n# Importing the MinMaxScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\n# Instantiating an object\nscaler = MinMaxScaler()\n\n# Creating a list of numeric vars\nnum_vars = [\"Age\",\"Parch\",\"Fare\",\"SibSp\"]\n\n# Fitting on object\nX_train[num_vars] = scaler.fit_transform(X_train[num_vars])","660b803b":"from sklearn.linear_model import LogisticRegression\n\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","da785dce":"X_test[num_vars] = scaler.fit_transform(X_test[num_vars])\n\npredictions = logmodel.predict(X_test)","107c3f67":"from sklearn.metrics import classification_report\n\nprint(classification_report(y_test,predictions))","2a2c2355":"from sklearn.metrics import confusion_matrix\n\nprint(confusion_matrix(y_test,predictions))","dd3abbe1":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,predictions)*100)","43341fc8":"# Train Data","0cd8bb1c":"# Analyzing data","ee9b0bb3":"# Test Data","0c44fbab":"# Data wrangling"}}