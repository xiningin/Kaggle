{"cell_type":{"df0eb4b5":"code","4f2f3cba":"code","4ede24fd":"code","2ca2423f":"code","30733fcc":"code","d728af76":"code","9700b7eb":"code","caa17f2b":"code","115bbd31":"code","2226d0b5":"code","f4bab296":"code","f7392856":"code","699edae3":"code","eb0d773f":"code","dd9d8e4d":"code","4aff8cfe":"code","c95009f4":"code","765591b4":"markdown","603af41b":"markdown","841b9f90":"markdown","27c5ef1e":"markdown","b07c6b4a":"markdown","a6a9b083":"markdown","ddf34394":"markdown","8003d36e":"markdown","b009b4b3":"markdown","fe78220e":"markdown","d4030a6a":"markdown","33e59605":"markdown","4ac84564":"markdown","3749eb8b":"markdown","464fc3ff":"markdown","4d7888dc":"markdown","b8322b47":"markdown","ada90f40":"markdown","43dd7c7a":"markdown","64b2492a":"markdown","c3c550a6":"markdown","572d6cc7":"markdown"},"source":{"df0eb4b5":"import pandas as pd\n\n#Read Data\nts = pd.read_csv(\"..\/input\/traffic-stops-in-rhode-island\/police.csv\")\ndisplay(ts.head())\n\n#Dataframe Info\ndisplay(ts.info())\n\n\n#Look for missing values\ndisplay(ts.isnull().sum())\ndisplay(ts.shape)","4f2f3cba":"# Drop state and county_name\ndisplay(ts['state'].value_counts())\nts.drop(['county_name','state'], axis='columns', inplace=True)\n\n#Drop rows with NaN stop_date and stop_time\nts.dropna(subset=['stop_date', 'stop_time'], inplace=True)\n\ndisplay(ts.shape)","4ede24fd":"#Look at column data types\ndisplay(ts.dtypes)\n\n#Change is_arrested to boolean\ndisplay(ts['is_arrested'].value_counts())\nts['is_arrested'] = ts['is_arrested'].astype('bool')\n\n#Combine stop date and stop time to create pandas date time object\nts['stop_datetime'] = pd.to_datetime(ts['stop_date'].str.cat(ts['stop_time'], sep=\" \"))\n\ndisplay(ts.dtypes)\n\n#Set datetime as index of dataframe\nts.set_index('stop_datetime', inplace=True)","2ca2423f":"#Examine Traffic Violations\ndisplay(ts['violation'].value_counts(normalize=True))\n\n#Compare Violations by gender\nfemale = ts[ts['driver_gender']=='F']\nmale = ts[ts['driver_gender']=='M']\n\ndisplay(female['violation'].value_counts(normalize=True))\ndisplay(male['violation'].value_counts(normalize=True))\n\n#Single line\ndisplay(ts.groupby('driver_gender')['violation'].value_counts(normalize=True))","30733fcc":"# Compare data by gender for speeding violation\nfemale_speeding  = ts[(ts['driver_gender']=='F') & (ts['violation']=='Speeding')]\nmale_speeding  = ts[(ts['driver_gender']=='M') & (ts['violation']=='Speeding')]\n\ndisplay(female_speeding['stop_outcome'].value_counts(normalize=True))\ndisplay(male_speeding['stop_outcome'].value_counts(normalize=True))\n\n#Single Line\nts[ts['violation']=='Speeding'].groupby('driver_gender')['stop_outcome'].value_counts(normalize=True)","d728af76":"# Compare data by gender on Vehicle Search\nts.groupby(['driver_gender'])['search_conducted'].mean()","9700b7eb":"# Compare search rate by gender and violation\nts.groupby(['violation','driver_gender'])['search_conducted'].mean()","caa17f2b":"# Use search type to look at rows with 'Protective Frisk'\ndisplay(ts['search_type'].value_counts())\n\n# Since search type can have multiple values, containment need to be checked\nts['frisk'] = ts['search_type'].str.contains('Protective Frisk', na=False)\n\n# Frisk condcuted by gender when vehicle was searched\ndisplay(ts[(ts['search_conducted'])].groupby('driver_gender')['frisk'].mean())\n","115bbd31":"# Overall Arrest Rate\noverall_arrest_rate = ts['is_arrested'].mean()\n\n#Calculate hourly Arrest Rate. Resampling can also be used (used in next example)\nhourly_arrest_rate = ts.groupby(ts.index.hour)['is_arrested'].mean()\n\n# Plot Hourly Arrest Rate on a line chart\nimport matplotlib.pyplot as plt\n\n# Create a line plot of 'hourly_arrest_rate'\nplt.plot(hourly_arrest_rate)\n\n# Add the xlabel, ylabel, and title\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Arrest Rate\")\nplt.title(\"Arrest Rate by Time of Day\")\n\n# Add reference line for overall Arrest Rate\nplt.axhline(y=overall_arrest_rate, color='gray', linestyle='--')\n\n# Display the plot\nplt.show()","2226d0b5":"# Calculate annual trend by resampling data and plot line charts\nannual_trend = ts.resample('A')[['drugs_related_stop','search_conducted']].mean()\nannual_trend.plot(subplots=True)\nplt.xlabel(\"Year\")\nplt.show()","f4bab296":"# Create a crosstab and display a bar chart for each district\nviolations_by_zone =  pd.crosstab(ts['district'], ts['violation'])\nviolations_by_zone.plot(kind=\"bar\",  stacked=True)\nplt.show()\n\n#Plot  only  for  K Zones\nk_zones = violations_by_zone.loc['Zone  K1':'Zone K3']\nk_zones.plot(kind=\"bar\",  stacked=True)\nplt.show()","f7392856":"# Print the unique values in 'stop_duration'\ndisplay(ts.stop_duration.unique())\n\n# Create a dictionary that maps strings to integers\nmapping = {'0-15 Min':8, '16-30 Min':23, '30+ Min':45} \n\n# Convert the 'stop_duration' strings to integers using the 'mapping'\nts['stop_minutes'] = ts.stop_duration.map(mapping)\n\n# Print the unique values in 'stop_minutes'\ndisplay(ts['stop_minutes'].unique())\n\n# Calculate the mean 'stop_minutes' for each value in 'violation_raw'\nstop_length = ts.groupby('violation_raw')['stop_minutes'].mean()\n\n# Sort 'stop_length' by its values and create a horizontal bar plot\nstop_length.sort_values().plot(kind='barh')\n\n# Display the plot\nplt.show()","699edae3":"# Read weather dataset\nweather = pd.read_csv(\"..\/input\/weather-in-providence-rhode-island\/weather.csv\")\ndisplay(weather.head())\n\n# Examine temperature columns for sanity: TMIN, TAVG, TMAX\ndisplay(weather[['TMIN','TAVG','TMAX']].describe())\n\n# Visually examine with box plot\nweather[['TMIN','TAVG','TMAX']].plot(kind=\"box\")\nplt.show()\n\n# Ensure TMIN is always less than TMAX\n# Create a 'TDIFF' column that represents temperature difference\nweather['TDIFF'] = weather['TMAX'] - weather['TMIN']\n\n# Describe the 'TDIFF' column\nprint(weather['TDIFF'].describe())\n\n# Create a histogram with 20 bins to visualize 'TDIFF'\nweather['TDIFF'].plot(kind='hist', bins=20)\nplt.show()","eb0d773f":"# Copy 'WT01' through 'WT22' to a new DataFrame. Each column is a flag indicating bad weather\nWT = weather.loc[:,'WT01':'WT22']\n\n# Calculate the sum of each row in 'WT'\nweather['bad_conditions'] = WT.sum(axis='columns')\n\n# Replace missing values in 'bad_conditions' with '0'\nweather['bad_conditions'] = weather.bad_conditions.fillna(0).astype('int')\n\n# Create a histogram to visualize 'bad_conditions'\nweather['bad_conditions'].plot(kind='hist')\n\n# Display the plot\nplt.show()","dd9d8e4d":"# Count the unique values in 'bad_conditions' and sort the index\nprint(weather['bad_conditions'].value_counts().sort_index())\n\n# Create a dictionary that maps integers to strings\nmapping = {0:'good', 1:'bad', 2:'bad', 3:'bad', 4:'bad', 5:'worse', 6:'worse', 7:'worse', 8:'worse', 9:'worse'}\n\n# Convert the 'bad_conditions' integers to strings using the 'mapping'\nweather['rating'] = weather['bad_conditions'].map(mapping)\n\n# Count the unique values in 'rating'\nprint(weather['rating'].value_counts().sort_index())\n\n# Create a list of weather ratings in logical order\ncats = ['good', 'bad', 'worse']\n\n# Change the data type of 'rating' to category\nweather['rating'] = weather['rating'].astype(pd.api.types.CategoricalDtype(categories = cats))\n\n# Examine the head of 'rating'\nprint(weather['rating'].head())","4aff8cfe":"# Reset the index of Policing dataset\nts.reset_index(inplace=True)\ndisplay(ts.head())\n\n# Create a DataFrame from the 'DATE' and 'rating' columns\nweather_rating = weather[['DATE', 'rating']]\ndisplay(weather_rating.head())\n\n#Merge the datasets\nts_weather = pd.merge(left=ts, right=weather_rating, left_on='stop_date', right_on='DATE', how='left')\ndisplay(ts_weather.head())","c95009f4":"# Overall Arrest Rate\noverall_arrest_rate = ts_weather['is_arrested'].mean()\ndisplay(overall_arrest_rate)\n\n# Arrest Rate by weather rating\nweather_arrest_rate = ts_weather.groupby('rating')['is_arrested'].mean()\ndisplay(weather_arrest_rate)\n\n# Arrest Rate by Violation and weather rating\nweather_violation_arrest_rate = ts_weather.pivot_table(index='violation', columns='rating', values='is_arrested')\ndisplay(weather_violation_arrest_rate)","765591b4":"\n## Visualizing Exploratory Data Analysis\n\n### Does time of day affect arrest rate ?\nPlot hourly arrrest rate and compare with overall rate.","603af41b":"\n### Does weather affect the arrest rate ?","841b9f90":"\n### What violations are caught in each district ?\nPlot Violations by District","27c5ef1e":"### Effect of Gender on Speeding Tickets","b07c6b4a":"\n### Categorizing the weather\nCreate ordered category field for weather condition by counting bad weather conditions","a6a9b083":"It  seems that search rate for males is much higher than females. Search rate might depend on violation type as well.","ddf34394":"## Preparing and Cleaning Data\n\n### Inpect data and look at missing values","8003d36e":"The arrest rate increases as the weather gets worse, and that trend persists across many of the violation types. This doesn't prove a causal link, but it's quite an interesting result","b009b4b3":"### Using proper data types\n1. Change is_arrested to boolean\n2. Combine stop_date and stop_time columns to create pandas datetime object and set it as index of data frame","fe78220e":"# Analyzing Police Activity Dataset\nExploring the Stanford Open Policing Project dataset and analyzing the impact of gender on police behavior.","d4030a6a":"\n### Effect of  Gender on Frisking","33e59605":"The rate of drug-related stops increased even though the search rate decreased.","4ac84564":"\n## Analyzing effect of weather on policing\nCombbining weather dataset with policing dataset to explore the impact of weather conditions on police behavior during traffic stops.","3749eb8b":"\n### Merging Policing and Weather data\nMerge the 2 datasets on date for analysis","464fc3ff":"The arrest rate has a significant spike overnight, and then dips in the early morning hours.","4d7888dc":"It looks like many days didn't have any bad weather conditions, and only a small portion of days had more than four bad weather conditions.\n\nCategorize the weather based on number of bad conditions. Create an ordered categorical variable for weather rating.","b8322b47":"\n### Drop rows\/columns\n\n  1. Drop county_name column as all values in the column are NaN. Drop State column as data is for a single state.\n  2. Drop rows without stop date and stop time column","ada90f40":"\n###  How  long  is a stop for a violation ?","43dd7c7a":"### Effect of Gender on Vehicle Search","64b2492a":"### Exploring weather dataset","c3c550a6":"## Exploring Relationship between Gender and Policing\n\n### Examine Traffic Violations  and Comparing Violations by Gender","572d6cc7":"\n### Are drug related stops on the rise ?\nVisulalize Annual Search Rate and Drug Related Stops to see the trend over time."}}