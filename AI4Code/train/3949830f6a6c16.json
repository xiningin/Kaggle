{"cell_type":{"92319005":"code","dbe0a165":"code","8ca9955b":"code","2a69bbb5":"code","ec0ac558":"code","91cc2f5d":"code","7a24ba55":"code","c95ed5e0":"code","b724427a":"code","69732d4c":"code","a6c10328":"code","ac1bd54d":"code","3200a498":"code","1f6c9202":"code","58e39e58":"code","5c846bb5":"code","d5cc1dee":"code","6375f98b":"code","fb821ddb":"code","426d4369":"code","1640485d":"code","8c5cc4e2":"code","4406d78c":"code","deaf1bf5":"markdown","b5632828":"markdown","e0e68e58":"markdown","7feab433":"markdown","0a2b7338":"markdown","5bfbc90a":"markdown","1c0b6562":"markdown","7c12c023":"markdown","2e802805":"markdown","027c05de":"markdown","6cb41a4f":"markdown","283c01d0":"markdown","d042067c":"markdown"},"source":{"92319005":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport itertools\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'\nplt.style.use('Solarize_Light2')","dbe0a165":"print(plt.style.available)","8ca9955b":"DATA_PATH = \"..\/input\/store-sales-time-series-forecasting\/\"\ndata = pd.read_csv(f\"{DATA_PATH}\/train.csv\")","2a69bbb5":"# copying data \ndf = data.copy()","ec0ac558":"df.head()","91cc2f5d":"df.info()","7a24ba55":"# changing a type casting to date column\ndf.date = pd.to_datetime(df.date,dayfirst=True)","c95ed5e0":"# check the descriptive stats\ndf.describe()","b724427a":"# finding min and max date\ndf.date.min(),df.date.max()","69732d4c":"# checking for null values\ndf.isna().sum()","a6c10328":"# let us plot only the AUTOMATIVE family first\nautomotive_df = df[df['family'] == 'AUTOMOTIVE']\nautomotive_df","ac1bd54d":"# droping the columns \ncols = ['id','store_nbr','family','onpromotion']\nautomotive_df.drop(cols,axis =1,inplace=True)","3200a498":"automotive_df = automotive_df.groupby('date')['sales'].sum().reset_index()\nautomotive_df.set_index('date',inplace=True)\nautomotive_df","1f6c9202":"automotive_df.index","58e39e58":"y = automotive_df['sales'].resample('MS').mean()","5c846bb5":"y.plot(figsize=(20,6))\nplt.show()","d5cc1dee":"from pylab import rcParams\nrcParams['figure.figsize'] = 18,8\n\ndecomposition = sm.tsa.seasonal_decompose(y,model='additive')\nfig = decomposition.plot()\nplt.show()","6375f98b":"# for testing purpose using pdq =(1,10), seasonal_order= (1,1,0,12)\nmod = sm.tsa.statespace.SARIMAX(y,\n                                order=(1, 1, 0),\n                                seasonal_order=(1, 1, 0, 12),\n                                enforce_stationarity=False,\n                                enforce_invertibility=False)\nresults = mod.fit()\nprint(results.summary().tables[1])","fb821ddb":"# investigateing any unusual behaviour\nresults.plot_diagnostics(figsize=(16, 8))\nplt.show()","426d4369":"pred = results.get_prediction(start=pd.to_datetime('2017-01-01'), dynamic=False)\npred_ci = pred.conf_int()\nax = y['2014':].plot(label='observed')\npred.predicted_mean.plot(ax=ax, label='One-step ahead Forecast', alpha=.7, figsize=(14, 7))\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.2)\nax.set_xlabel('Date')\nax.set_ylabel('automotive')\nplt.legend()\nplt.show()","1640485d":"y_forecasted = pred.predicted_mean\ny_truth = y['2017-01-01':]\nmse = ((y_forecasted - y_truth) ** 2).mean()\nprint('The Mean Squared Error of our forecasts is {}'.format(round(mse, 2)))","8c5cc4e2":"print('The Root Mean Squared Error of our forecasts is {}'.format(round(np.sqrt(mse), 2)))","4406d78c":"# visualizing it for 25 steps\npred_uc = results.get_forecast(steps=25)\npred_ci = pred_uc.conf_int()\nax = y.plot(label='observed', figsize=(14, 7))\npred_uc.predicted_mean.plot(ax=ax, label='Forecast')\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:, 0],\n                pred_ci.iloc[:, 1], color='k', alpha=.25)\nax.set_xlabel('Date')\nax.set_ylabel('automotive')\nplt.legend()\nplt.show()","deaf1bf5":"### data processing","b5632828":"### Visualising forcast","e0e68e58":"### Importing libraries","7feab433":"### importing data","0a2b7338":"<a id=\"1\"><\/a>\n<h3 style=\"background-color:green;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\">Problem definition<\/h3>\n\n# Store Sales - Time Series Forecasting\n- you\u2019ll use time-series forecasting to forecast store sales on data from Corporaci\u00f3n Favorita, a large Ecuadorian-based grocery retailer.\n- you'll build a model that more accurately predicts the unit sales for thousands of items sold at different Favorita stores.","5bfbc90a":"### RMSE of our forcast","1c0b6562":"### Model diagnostics ","7c12c023":"### Visualizing TS data","2e802805":"### Will continue..\nPlease upvote if you like it, \nthank you ","027c05de":"### One step forcasting and validating","6cb41a4f":"- I will use the averages daily sales value for that month, and we are using the start of each month as the timestamp.","283c01d0":"### Visualizing using decomposition technique","d042067c":"### Time series forcating with ARIMA (Autoregressive Integrated Moving Average.)\n"}}