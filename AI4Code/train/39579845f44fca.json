{"cell_type":{"757fc9cc":"code","472e45de":"code","c1cc17ca":"code","e7a58cc5":"code","2c2687af":"code","6007d512":"code","8e1c701d":"code","1c5fe4b0":"code","7686beaa":"code","b213aa1a":"code","5aa4b5bd":"code","2d0f572d":"code","6b3cc6c6":"code","38cff588":"code","4f610cab":"code","51ba8c2f":"code","3e6aa208":"code","b6c91daf":"markdown"},"source":{"757fc9cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","472e45de":"train_ds = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_ds = pd.read_csv(\"..\/input\/titanic\/test.csv\")","c1cc17ca":"import matplotlib.pyplot as plt\nimport missingno as mso\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nimport os","e7a58cc5":"train_ds.head()","2c2687af":"test_ds.head()","6007d512":"train_ds.info()","8e1c701d":"test_ds.info()","1c5fe4b0":"train_ds['Age']=train_ds['Age'].fillna(train_ds['Age'].mean())","7686beaa":"train=train_ds.iloc[:,[0,1,2,4,5,6]]","b213aa1a":"train.head()","5aa4b5bd":"train.info()","2d0f572d":"train=pd.get_dummies(train,columns=['Sex'])","6b3cc6c6":"train.head()","38cff588":"train=train.drop(['PassengerId'],axis=1)","4f610cab":"train.head()","51ba8c2f":"predictors = train.drop([\"Survived\"], axis=1)\ntarget = train[\"Survived\"]\nx_train, x_test, y_train, y_test = train_test_split(predictors, target, test_size = 0.3, random_state = 0)","3e6aa208":"LRclassifier = LogisticRegression(solver='liblinear', max_iter=5000)\nLRclassifier.fit(x_train, y_train)\n\ny_pred = LRclassifier.predict(x_test)\n\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nLRAcc = accuracy_score(y_pred,y_test)\n\nprint('Logistic regression accuracy: ', LRAcc)","b6c91daf":"Considering only those attributes that may influence the outcome."}}