{"cell_type":{"a1f9a1e1":"code","145b1eda":"code","657bdd59":"code","adf77028":"code","332f11dd":"code","20465107":"code","169e11db":"code","cc97271d":"code","3c19b91f":"code","f4e96dc2":"code","d19a6f9b":"code","1be3283e":"code","740019f6":"code","e15ddc2b":"code","ad894187":"code","99260ffb":"markdown","9af64059":"markdown","5b514b61":"markdown","e7e6bc31":"markdown"},"source":{"a1f9a1e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","145b1eda":"import pandas as pd\nimport math\nimport scipy.stats as st\nfrom sklearn.preprocessing import MinMaxScaler\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.width', 500)\npd.set_option('display.expand_frame_repr', False)\npd.set_option('display.float_format', lambda x: '%.5f' % x)","657bdd59":"df=pd.read_csv(\"..\/input\/score\/amazon_review.csv\")\ndf.head(20)","adf77028":"df[\"overall\"].mean()","332f11dd":"  df.loc[df[\"day_diff\"] <= 30, \"overall\"].mean() * 28 \/ 100 + \\\n  df.loc[(df[\"day_diff\"] > 30) & (df[\"day_diff\"] <= 90), \"overall\"].mean() * 26 \/ 100 + \\\n  df.loc[(df[\"day_diff\"] > 90) & (df[\"day_diff\"] <= 180), \"overall\"].mean() * 24 \/ 100 + \\\n  df.loc[(df[\"day_diff\"] > 180), \"overall\"].mean() * 22 \/ 100\n","20465107":"def time_based_weighted_average(dataframe, w1=28, w2=26, w3=24, w4=22):\n    return dataframe.loc[df[\"day_diff\"] <= 30, \"overall\"].mean() * w1 \/ 100 + \\\n           dataframe.loc[(dataframe[\"day_diff\"] > 30) & (dataframe[\"day_diff\"] <= 90), \"overall\"].mean() * w2 \/ 100 + \\\n           dataframe.loc[(dataframe[\"day_diff\"] > 90) & (dataframe[\"day_diff\"] <= 180), \"overall\"].mean() * w3 \/ 100 + \\\n           dataframe.loc[(dataframe[\"day_diff\"] > 180), \"overall\"].mean() * w4 \/ 100\n\n\ntime_based_weighted_average(df)\n","169e11db":"df.sort_values(\"day_diff\", ascending=True).head(20)","cc97271d":"\ndf.sort_values(\"helpful_yes\", ascending=False).head()","3c19b91f":"\ndef score_up_down_diff(up, down):\n    return up - down\n","f4e96dc2":"df[\"helpful_no\"] = df[\"total_vote\"] - df[\"helpful_yes\"]","d19a6f9b":"up = df[\"helpful_yes\"]\ndown = df[\"helpful_no\"]","1be3283e":"\ndef score_average_rating(up, down):\n    if up + down == 0:\n        return 0\n    return up \/ (up + down)\n\n# score_average_rating\ndf[\"score_average_rating\"] = df.apply(lambda x: score_average_rating(x[\"helpful_yes\"], x[\"helpful_no\"]), axis=1)\n# Review 1 Average Rating Score: 2\/2 = 1\n# Review 2 Average Rating Score: 100\/101 = 0.99","740019f6":"df.sort_values(\"score_average_rating\",ascending=False).head(20)","e15ddc2b":"def wilson_lower_bound(up, down, confidence=0.95):\n    \"\"\"\n    Wilson Lower Bound Score hesapla\n\n    - Bernoulli parametresi p i\u00e7in hesaplanacak g\u00fcven aral\u0131\u011f\u0131n\u0131n alt s\u0131n\u0131r\u0131 WLB skoru olarak kabul edilir.\n    - Hesaplanacak skor \u00fcr\u00fcn s\u0131ralamas\u0131 i\u00e7in kullan\u0131l\u0131r.\n\n    - Not:\n    E\u011fer skorlar 1-5 aras\u0131daysa 1-3 negatif, 4-5 pozitif olarak i\u015faretlenir ve bernoulli'ye uygun hale getirilebilir.\n    Bu beraberinde baz\u0131 problemleri de getirir. Bu sebeple bayesian average rating yapmak gerekir.\n\n    Parameters\n    ----------\n    up: int\n        up count\n    down: int\n        down count\n    confidence: float\n        confidence\n\n    Returns\n    -------\n    wilson score: float\n\n    \"\"\"\n    n = up + down\n    if n == 0:\n        return 0\n    z = st.norm.ppf(1 - (1 - confidence) \/ 2)\n    phat = 1.0 * up \/ n\n    return (phat + z * z \/ (2 * n) - z * math.sqrt((phat * (1 - phat) + z * z \/ (4 * n)) \/ n)) \/ (1 + z * z \/ n)\n","ad894187":"df[\"wilson_lower_bound\"] = df.apply(lambda x: wilson_lower_bound(x[\"helpful_yes\"], x[\"helpful_no\"]),axis=1)\n#helpful ye ve no yerine up ve down kodu\u011fumda \u00e7al\u0131\u015fmad\u0131\n\ndf.sort_values(\"wilson_lower_bound\", ascending=False).head(20)","99260ffb":"Fonksiyonla\u015ft\u0131rma","9af64059":"![image.png](attachment:aa1f9f4c-c30f-4b57-ba84-f4a6aae2eb5c.png)","5b514b61":"Yeni y\u00f6ntem ile \u00fcr\u00fcn\u00fc g\u00fcncel yorumlar baz\u0131nda de\u011ferlendirdi\u011fimizde (a\u011f\u0131rl\u0131kland\u0131rd\u0131\u011f\u0131m\u0131zda) rating'i artt\u0131. Bu \u00fcr\u00fcn\u00fcn son zamanlarda daha iyi puanland\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz. \u00dcr\u00fcn\u00fc geli\u015ftirdiysek yada yap\u0131lan eski yorumlar\u0131 dikkate alarak \u00e7al\u0131\u015fma yapt\u0131ysak meyvelerini vermeye ba\u015flad\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz. :)","e7e6bc31":"![image.png](attachment:03e8e21d-bf36-4908-8823-ef6f28cacade.png)"}}