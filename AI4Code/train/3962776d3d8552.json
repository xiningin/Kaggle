{"cell_type":{"2b7be406":"code","21ed6d60":"code","d28335b9":"code","f4cf81b1":"code","b051e1b5":"code","c2f97910":"code","99f73e89":"code","ee0ae1fc":"code","6c6f2ceb":"code","e8323f6e":"code","b8930507":"code","264c4e9a":"code","6b00f810":"code","9245b8ca":"code","284ab5c3":"code","73bbff33":"markdown","1cc6d785":"markdown","9395a115":"markdown","a4e19f70":"markdown","42015222":"markdown","f6feec13":"markdown","0a1f8b90":"markdown","157126b6":"markdown","9a06248c":"markdown","1222b966":"markdown","b8d5b3ac":"markdown","75981701":"markdown","98b1d6eb":"markdown","01bffe02":"markdown"},"source":{"2b7be406":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21ed6d60":"!pip install textblob","d28335b9":"\nfrom textblob import TextBlob     \ntext = '''                                       \nSentiment analysis is the interpretation and classification of emotions (positive, negative and neutral) within text \ndata using text analysis techniques. Sentiment analysis allows \nbusinesses to identify customer sentiment toward products, brands or services in online conversations and feedback.\n'''\nblob = TextBlob(text)","f4cf81b1":"blob","b051e1b5":"blob.sentences","c2f97910":"from textblob import TextBlob  \n'''Sentiment analysis is the interpretation and classification of emotions (positive, negative and neutral) within text \ndata using text analysis techniques. Sentiment analysis allows \nbusinesses to identify customer sentiment toward products, brands or services in online conversations and feedback.\n'''\nblob = TextBlob(text)\nblob.words","99f73e89":"from textblob import TextBlob   \ntext = '''                                       \nSentiment analysis is the interpretation and classification of emotions (positive, negative and neutral) within text \ndata using text analysis techniques. Sentiment analysis allows.\n'''\nblob = TextBlob(text) \nblob.tags  ","ee0ae1fc":"from textblob import TextBlob\ntext = '''                                       \nSentiment analysis is the interpretation and classification of emotions (positive, negative and neutral) within text \ndata using text analysis techniques. Sentiment analysis allows \nbusinesses to identify customer sentiment toward products, brands or services in online conversations and feedback.\n'''\nblob = TextBlob(text) \nblob.noun_phrases   ","6c6f2ceb":"sentence = TextBlob(\"This is really good !\")       \nsentence.sentiment","e8323f6e":"sentence = TextBlob(\"This is really good !\") \n#transalate sentence to spanish using language translator \nsentence.translate(to=\"es\")","b8930507":"monty = TextBlob(\"This is beautiful and you are looking beautiful too\")\nmonty.word_counts['beautiful']","264c4e9a":"#spelling checker which give probabilities \nfrom textblob import Word\nw = Word('aple')\nw.spellcheck()","6b00f810":"#Pluralization of a word\nfrom textblob import Word\nw = Word(\"personality\")\nprint (w.pluralize())","9245b8ca":"blob = TextBlob(\"Now is better than never. We are even. Good night\")\nblob.ngrams(n=2)","284ab5c3":"from textblob import TextBlob\nfrom textblob.sentiments import NaiveBayesAnalyzer\nopinion = TextBlob(\"This is a beautiful place\", analyzer=NaiveBayesAnalyzer())\nopinion.sentiment","73bbff33":"# Sentence Transalation:-\n## Sentence translation can be done using another function call, which makes it easy to translate sentence from one language to another.","1cc6d785":"# Parts of Speech Tagging:-\n## Part of Speech Tagging is one of the important pre-processing operation performed on a NLP text. In this process each token is tagged with its corresponding part of speech.","9395a115":"# Noun phrases:-\n## It is also necessary to get the noun phrases of the sentence sometimes to know more about the context.","a4e19f70":"# Getting Sentiment of Class:-","42015222":"# N-GRAMS:-","f6feec13":"# INSTALLING TEXTBLOB","0a1f8b90":"# Get frequency count of a word in a sentence:-","157126b6":"# Pluralization of words:-","9a06248c":"# Spelling checker:-","1222b966":"# Tockenization of words:-\n\n\n\n# Tockenization is the process of separating each word in the sentence so that it can be easily understood and manipulated later.","b8d5b3ac":"# Get All the Sentences in the passage:-","75981701":"# TextBlob is just like a python string !","98b1d6eb":"# Sentiment Analysis:-\n## Sentiment Analysis in NLP is used to get the polarity of the sentence, whether it is positive,negative or neutral, In TextBlob we have a function call which gives the corresponding sentiment of the sentence.\n### The polarity score is a float within the range [-1.0, 1.0]. The subjectivity is a float within the range [0.0, 1.0] where 0.0 is very objective and 1.0 is very subjective.","01bffe02":"# Introduction to TextBlob. A tool for Natural Language Processing !\n\n\n  Due to the advancement in natural language processing tools, there are several open source tools available for natural language processing. One of them is TextBlob lets have a look at this tool and how easily it can be implemented.\n Text Blob is a simple python library used to perform **NLP task like tokenization, Noun phrase extraction, POS-Tagging, Words inflection and lemmatization, N-grams, Sentiment Analysis.** It is like NLTK just it has more features like Spelling correction, Creating a short summary of a text, Translation and language detection.\n \n ![image.png](attachment:image.png)\n\n**A Text Blob is just like a python string** that can be easily manipulated and played with. It is a easy tool which contains all the necessary tools for natural language processing. Text Blob can be interfaced with NLTK. It is similar to Python\u2019s string functions. It allows to easily swap to a pre-trained implementation from the NLTK library for sentiment analysis.\nDifference between NLTK and TEXTBLOB with advantages\n\n\u00b7 It is a faster than NLTK. It does not provide features like dependency parsing, word vectors etc.\n\u00b7 Simple to use and callable functions.\n\u00b7 Easily deployable with less computable resources and can be employed where the application requires computational constraints.\n\u00b7 Can be used for simple application usages.\n\n\nText Blob can be used for pre-processing as well as It can be used to find sentiment of a document. It has various classifiers that we can use to train a model. Many of NLTK\u2019s functions in a simplified manner through TextBlob, and TextBlob also includes functionality from the Pattern library. \n\n**TextBlob can be used mainly in the production where the resource usage are constrained.\nDifferent tasks in TextBlob can be done like\nCreate a TextBlob, Part-of-speech Tagging ,Noun Phrase Extraction\nSentiment Analysis, Tokenization ,Words Inflection and Lemmatization\nWordNet Integration, WordLists Spelling Correction, Get Word and Noun Phrase Frequencies, Parsing, n-grams, Get Start and End Indices of Sentences**\n\n\nText Blob is mainly used as a additional tool with NLTK it is fast and easy to used with several callable functions. TextBlob is used mainly to classify the sentiment with the pretrained inbuilt classifier. It is used in sentiment analysis for twitter it can be used to identify different sentiments from post\/reviews.\n"}}