{"cell_type":{"6a713f83":"code","b83d2a8f":"code","22b11668":"code","45cb3d78":"code","1d579133":"code","d7730ced":"code","f2431c39":"code","336fb908":"code","85ef3895":"code","7bccc88d":"code","c198bcc9":"code","67942b28":"code","b7efe24f":"code","615e7a74":"code","03ce5d0e":"code","22ed8a00":"code","750f2376":"code","a60993ee":"code","1dc5a584":"code","c2b51f1a":"code","5fb22a7a":"code","904f7325":"code","37a19dd7":"code","00de390e":"code","f0e5fb5e":"code","5350cb97":"markdown","d86618d2":"markdown","f90efe28":"markdown","23c4d1f2":"markdown","b3a79fbb":"markdown","bac23a32":"markdown","2f7cd04a":"markdown","11dbfa57":"markdown","6018606a":"markdown","1850244b":"markdown","3637d8a8":"markdown","31d68146":"markdown","4689487e":"markdown","b5314513":"markdown","761d417c":"markdown","4f9c4b30":"markdown","e481f14e":"markdown","23bd3893":"markdown","f0511fc1":"markdown","6e8873b9":"markdown","39681517":"markdown"},"source":{"6a713f83":"import pandas as pd\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\n\nimport matplotlib.lines as mlines\nimport numpy as np","b83d2a8f":"top500 = pd.read_csv(\"\/kaggle\/input\/top-500-supercomputers\/TOP500.csv\")","22b11668":"def draw_countplot(data, names, values, title, orientation='x'):\n    \"\"\"\n        Display a countplot\n    \"\"\"\n    if orientation == 'y':\n        fig = px.bar(data, x=values, y=names, text=values, title=title, height=1300, width=1000)\n        fig.update_traces(textposition='outside')\n        fig.show()\n    else:\n        fig = px.bar(data, x=names, y=values, text=values, title=title)\n        fig.update_traces(textposition='outside')\n        fig.show()","45cb3d78":"def draw_pie(data, names, values, title):\n    \"\"\"\n        Display a Pie Chart\n    \"\"\"\n    fig = px.pie(data, values=values, names=names, title=title)\n    fig.update_traces(textposition='outside', textinfo='percent+label')\n    fig.show()","1d579133":"def slope_chart_new_line(p1, p2, color='black'):\n    ax = plt.gca()\n    if p1[1]-p2[1] > 0:\n        color='green'\n    elif p1[1]==p2[1]:\n        color='blue'\n    else:\n        color='red'\n    l = mlines.Line2D([p1[0],p2[0]], [p1[1],p2[1]], color=color, marker='o', markersize=6)\n    ax.add_line(l)\n    return l","d7730ced":"asia_supercomputers = top500.groupby([\"Country\", \"Continent\"]).size().reset_index(name='Number of Supercomputers')\nasia_supercomputers['World'] = 'World'","f2431c39":"fig = px.sunburst(asia_supercomputers,\n                  path=[\"World\", \"Continent\", \"Country\"],\n                  values='Number of Supercomputers',\n                  width=700, height=700,\n                  title=\"Supercomputers in the world (Click on continent to see its countries)\",\n                  )\nfig.show()","336fb908":"continent_supercomputers = top500.groupby(\"Continent\").size().reset_index(name='Number of Supercomputers')\ndraw_pie(continent_supercomputers, 'Continent', 'Number of Supercomputers', 'Percentage of Supercomputers in the continents')","85ef3895":"asia_supercomputers = top500.query(\"Continent=='Asia'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(asia_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the Asian countries')","7bccc88d":"north_america_supercomputers = top500.query(\"Continent=='North America'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(north_america_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the North American countries')\n","c198bcc9":"europe_supercomputers = top500.query(\"Continent=='Europe'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(europe_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the European countries')","67942b28":"south_america_supercomputers = top500.query(\"Continent=='South America'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(south_america_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the South American countries')","b7efe24f":"oceania_supercomputers = top500.query(\"Continent=='Oceania'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(oceania_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the Oceanian countries')","615e7a74":"african_supercomputers = top500.query(\"Continent=='Africa'\").groupby(\"Country\").size().reset_index(name='Number of Supercomputers')\ndraw_countplot(african_supercomputers, 'Country', 'Number of Supercomputers', 'Number of Supercomputers in the African countries')","03ce5d0e":"compare_rank = top500.copy()[['Name', 'System ID', 'Rank', 'Previous Rank']]\ncompare_rank.isna().sum()","22ed8a00":"compare_rank['Name'] = compare_rank['Name'].fillna(compare_rank['System ID'])","750f2376":"compare_rank.dropna(inplace=True)","a60993ee":"fig, ax = plt.subplots(1,1,figsize=(10,200))\n\n# Vertical Lines\nax.vlines(x=1, ymin=1, ymax=500, color='black', linewidth=1, linestyles='dotted')\nax.vlines(x=3, ymin=1, ymax=500, color='black', linewidth=1, linestyles='dotted')\n\n# Points\nax.scatter(y=compare_rank['Previous Rank'], x=np.repeat(1, compare_rank.shape[0]), s=10, color='black')\nax.scatter(y=compare_rank['Rank'], x=np.repeat(3, compare_rank.shape[0]), s=10, color='black')\n\n# Line Segmentsand Annotation\nfor p1, p2, c in zip(compare_rank['Previous Rank'], compare_rank['Rank'], compare_rank['Name']):\n    slope_chart_new_line([1,p1], [3,p2])\n    ax.text(1-0.05, p1, str(c) + ' - ' + str(round(p1)), horizontalalignment='right', verticalalignment='center', fontdict={'size':14})\n    ax.text(3+0.05, p2, str(round(p2)) + ' - ' + str(c), horizontalalignment='left', verticalalignment='center', fontdict={'size':14})\n\n# 'Previous Rank' and 'Rank' Annotations\nax.text(1-0.05, 0, 'Previous Rank', horizontalalignment='right', verticalalignment='center', fontdict={'size':16, 'weight':600})\nax.text(3+0.05, 0, 'Current Rank', horizontalalignment='left', verticalalignment='center', fontdict={'size':16, 'weight':600})\n\n# Decoration\nax.set_title(\"Slopechart: Comparing previous rank and current rank of supercomputer\", fontdict={'size':20}, pad=45)\nax.set(xlim=(0,4), ylim=(0,500))\nax.set_xticks([1,3])\nax.invert_yaxis()\n\n# Lighten borders\nplt.gca().spines[\"top\"].set_alpha(.0)\nplt.gca().spines[\"bottom\"].set_alpha(.0)\nplt.gca().spines[\"right\"].set_alpha(.0)\nplt.gca().spines[\"left\"].set_alpha(.0)\nplt.axis('off')\nplt.show()","1dc5a584":"manufacturer_supercomputers = top500.groupby(\"Manufacturer\").size().reset_index(name='Number of Supercomputers')\n","c2b51f1a":"manufacturer_supercomputers.loc[manufacturer_supercomputers['Number of Supercomputers'] < 10, 'Manufacturer'] = 'Other Manufacturers'","5fb22a7a":"draw_pie(manufacturer_supercomputers, 'Manufacturer', 'Number of Supercomputers', 'Market share of Manufacturers')","904f7325":"# Changing datatype\ntop500['Total Cores'] = top500['Total Cores'].str.replace(',','').astype(int)","37a19dd7":"fig = px.scatter(top500, x=\"Rank\", y=\"Total Cores\",size='Total Cores', color=\"Manufacturer\")\nfig.update_layout(showlegend=False)\nfig.show()","00de390e":"os_supercomputers = top500.groupby(\"Operating System\").size().reset_index(name='Number of Supercomputers')\nos_supercomputers = os_supercomputers.sort_values(by='Number of Supercomputers')","f0e5fb5e":"draw_countplot(os_supercomputers, \n               'Operating System', 'Number of Supercomputers', \n               'Operating system in supercomputers',\n                orientation='y')","5350cb97":"# Operating system in supercomputers","d86618d2":"# Slopechart: Comparing previous rank and current rank of supercomputer","f90efe28":"# Number of Supercomputers in the European countries","23c4d1f2":"# Scatterplot: Rank vs Total Cores of Manufacturers","b3a79fbb":"Also, 44 computers doesn't have a previous ranking, so dropping them.","bac23a32":"**Sunburst Chart**\n\nThe sunburst chart is ideal for displaying hierarchical data. Each level of the hierarchy is represented by one ring or circle with the innermost circle as the top of the hierarchy.","2f7cd04a":"# Number of Supercomputers in the Asian countries","11dbfa57":"Merging manufacturer having less than 10 supercomputers","6018606a":"# Market share of Manufacturers","1850244b":"Since significant number (185) of supercomputers doesn't have any name, we'll fill the null name using **System ID** column.\n","3637d8a8":"# Source\n\n1. Slopechart - https:\/\/www.machinelearningplus.com\/plots\/top-50-matplotlib-visualizations-the-master-plots-python","31d68146":"### Importing necessary libraries","4689487e":"# Percentage of Supercomputers in the continents","b5314513":"**Thank you for going through my Exploratory Data Analysis on [Top 500 Supercomputers](https:\/\/www.kaggle.com\/rowhitswami\/top-500-supercomputers).**\n\n**No, this is not it, at all \ud83d\ude01**\n\n**I'll keep updating this notebook with new insights from time to time according to my bandwidth \ud83d\ude09**\n\n**Let me know below if anything (Code\/Visualization) could have been better \ud83c\udf89**\n\n**Namaste \ud83c\uddee\ud83c\uddf3**","761d417c":"# Number of Supercomputers in the African countries","4f9c4b30":"# Number of Supercomputers in the North American countries","e481f14e":"### Loading data","23bd3893":"### Helper functions","f0511fc1":"# Number of Supercomputers in the South American countries","6e8873b9":"# Supercomputers in the world using Sunburst Chart","39681517":"# Number of Supercomputers in the Oceanian countries"}}