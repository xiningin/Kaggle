{"cell_type":{"c1d69eac":"code","fab7a39b":"code","47a7a54d":"code","bbf6811e":"code","df2ac781":"code","8c2e76ae":"code","ddaac546":"code","e1b6f636":"code","b5bb60ce":"code","31f004d7":"code","82dc609b":"code","cb2eb8b3":"code","1ad9a0fc":"code","4f292215":"code","38ced042":"code","00785eb7":"code","bd5dd8a1":"code","032d18f9":"code","466fd55d":"code","288aa9de":"code","00a54fc2":"code","961420b1":"code","8c225b52":"code","28664ccb":"code","7cbcbdac":"code","206aceca":"code","d523b175":"code","a474fb59":"code","448d48eb":"code","3322f985":"code","39fdd9f3":"code","19a98574":"code","791d8b29":"code","58150bc8":"code","c598ed7e":"code","7d6e28c3":"code","95a983af":"code","000b0256":"code","2544445a":"code","fa630f95":"code","f90c3407":"code","4594cab5":"code","2fe53d9f":"code","9df15ad8":"code","823c32c1":"code","843551bd":"code","4ad90208":"code","40f071eb":"code","21899a14":"code","062fadcd":"code","4f8a0c1c":"code","37eb7253":"code","5d82eeb3":"code","c87bf974":"code","1b251feb":"code","2d0dd144":"code","071c8d00":"code","77bf24da":"code","89ef4f57":"code","57f0b221":"code","1ea6f8fb":"code","19ff0c40":"code","fb8c8620":"code","ed5ab528":"code","668f9bac":"code","5e850f66":"code","c184540a":"code","9ddb04e6":"code","f266fb07":"code","a1e79058":"code","5cf312ed":"code","82ff026b":"code","9f20bd86":"code","28c32cd6":"code","8e6777b9":"markdown","dcba6f4f":"markdown","e84e0888":"markdown","b7b9ec5f":"markdown","ee631007":"markdown","47aefadb":"markdown","55fe5e14":"markdown","6e4765ce":"markdown","db7bbeee":"markdown","ed7869b6":"markdown","8b47cadb":"markdown","e59d3b7b":"markdown","099dcfc4":"markdown","47b7a7f7":"markdown","e74eb722":"markdown","04d1f730":"markdown","03baf5ab":"markdown","043c7285":"markdown","acf822bc":"markdown"},"source":{"c1d69eac":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","fab7a39b":"df=pd.read_csv('..\/input\/shared-bikes-demand-prediction\/day.csv')","47a7a54d":"df","bbf6811e":"df.season.value_counts()","df2ac781":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.season)\nplt.title('Season vs Number of vehicles registered')\nplt.xlabel('Number of Vehicles')\nplt.ylabel('Seasons')","8c2e76ae":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.weekday)\nplt.title('Season vs Number of vehicles registered')\nplt.xlabel('Number of Vehicles')\nplt.ylabel('Working Days')","ddaac546":"df.drop('instant',inplace=True,axis=1)","e1b6f636":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.mnth)\nplt.title('Months vs Number of vehicles')\nplt.xlabel('Number of Month')\nplt.ylabel('Number of Vehicles')","b5bb60ce":"plt.figure(figsize=(12,6))\nsns.barplot(y=df.cnt,x=df.mnth)\nplt.title('Months vs Number of vehicles')\nplt.xlabel('Number of Month')\nplt.ylabel('Number of Vehicles')","31f004d7":"plt.figure(figsize=(12,6))\nsns.barplot(y=df.cnt,x=df.holiday)\nplt.title('Holiday vs Number of vehicles')\nplt.xlabel('Is it a holiday or not')\nplt.ylabel('Number of Vehicles')","82dc609b":"plt.figure(figsize=(12,6))\nsns.lineplot(x=df.temp,y=df.cnt)\nplt.title('Temperature vs Number of vehicles')\nplt.xlabel('Temperature')\nplt.ylabel('Number of Vehicles')","cb2eb8b3":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.atemp)\nplt.title('Feeling Temperature vs Number of vehicles')\nplt.xlabel('Feeling Temperature')\nplt.ylabel('Number of Vehicles')","1ad9a0fc":"plt.figure(figsize=(12,6))\nplt.plot(df.temp)\nplt.plot(df.atemp)\nplt.title('Temperature vs Number of vehicles')\nplt.xlabel('Observations')\nplt.ylabel('Temperature')","4f292215":"df['dteday']=df['dteday'].astype(str)","38ced042":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True)","00785eb7":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.hum)\nplt.title('Humidity vs Number of vehicles')\nplt.xlabel('Humidity')\nplt.ylabel('Number of Vehicles')","bd5dd8a1":"plt.figure(figsize=(12,6))\nsns.lineplot(y=df.cnt,x=df.windspeed)\nplt.title('Wind speed vs Number of vehicles')\nplt.xlabel('Wind Speed')\nplt.ylabel('Number of Vehicles')","032d18f9":"plt.figure(figsize=(12,6))\nsns.histplot(df.temp)","466fd55d":"plt.figure(figsize=(12,6))\nsns.histplot(df.atemp)","288aa9de":"plt.figure(figsize=(12,6))\nsns.histplot(df.windspeed)","00a54fc2":"plt.figure(figsize=(12,6))\nsns.histplot(df.registered)","961420b1":"plt.figure(figsize=(12,6))\nsns.scatterplot(x=df.cnt,y=df.casual)","8c225b52":"plt.figure(figsize=(12,6))\nsns.scatterplot(x=df.cnt,y=df.registered)","28664ccb":"plt.figure(figsize=(12,6))\nsns.barplot(x=df.weathersit,y=df.cnt)\nplt.xlabel('Weather of the Day')\nplt.ylabel('Count of Vehicles')\nplt.title(' Weather of the day vs Count of the vehicles')","7cbcbdac":"plt.figure(figsize=(12,6))\nsns.barplot(y=df.cnt,x=df.yr)","206aceca":"plt.figure(figsize=(12,12))\ndf.corr().iloc[:, -1].plot(kind='barh')\nprint(df.corr().iloc[:, -1])\nprint('\\n')","d523b175":"df.drop('atemp',axis=1,inplace=True)","a474fb59":"df.drop('dteday',axis=1,inplace=True)","448d48eb":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","3322f985":"X=df.iloc[:,0:-1]\ny=df.iloc[:,-1]","39fdd9f3":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)","19a98574":"X_train","791d8b29":"X_test","58150bc8":"LR=LinearRegression()\nLR.fit(X_train,y_train)\ny_pred=LR.predict(X_test)","c598ed7e":"y_pred","7d6e28c3":"from sklearn.metrics import r2_score","95a983af":"score=r2_score(y_test,y_pred)\nscore","000b0256":"dff=pd.DataFrame({'y_test':y_test,'y_pred':y_pred})","2544445a":"dff['My_error']=dff['y_test']-dff['y_pred']\ndff","fa630f95":"plt.figure(figsize=(12,6))\nsns.regplot(x=dff.y_pred,y=dff.y_test)","f90c3407":"testing_data=pd.read_csv('..\/input\/shared-bikes-demand-prediction\/test.csv')","4594cab5":"testing_data","2fe53d9f":"testing_data.drop(['instant','dteday'],axis=1,inplace=True)","9df15ad8":"testing_data.head()","823c32c1":"testing_data.drop('atemp',inplace=True,axis=1)","843551bd":"y_pred_testing=LR.predict(testing_data)","4ad90208":"y_pred_testing","40f071eb":"from sklearn.tree import DecisionTreeRegressor","21899a14":"DTR=DecisionTreeRegressor(criterion='mse')\nDTR.fit(X_train,y_train)\ny_pred2=DTR.predict(X_test)","062fadcd":"score1=r2_score(y_test,y_pred2)\nscore1","4f8a0c1c":"dff1=pd.DataFrame({'y_test':y_test,'y_DTR_pred':y_pred2})\ndff1['my_error']=dff1['y_test']-dff1['y_DTR_pred']\ndff1","37eb7253":"plt.figure(figsize=(12,6))\nsns.regplot(x=dff1.y_DTR_pred,y=dff1.y_test)","5d82eeb3":"from sklearn.linear_model import Ridge","c87bf974":"Rid=Ridge(alpha=1)\nRid.fit(X_train,y_train)\ny_pred_ridge=Rid.predict(X_test)","1b251feb":"dff2=pd.DataFrame({'y_test':y_test,'y_pred':y_pred_ridge})\ndff2['my_error']=dff2['y_test']-dff2['y_pred']\n(dff2.my_error.sum())**2","2d0dd144":"dff2","071c8d00":"score2=r2_score(y_test,y_pred_ridge)\nscore2","77bf24da":"plt.figure(figsize=(12,6))\nsns.regplot(x=dff2.y_pred,y=dff2.y_test)","89ef4f57":"from sklearn import linear_model","57f0b221":"LSO=linear_model.Lasso(alpha=0.2)\nLSO.fit(X_train,y_train)\ny_pred_lasso=LSO.predict(X_test)","1ea6f8fb":"y_pred_lasso","19ff0c40":"dff3=pd.DataFrame({'y_test':y_test,'y_pred_lasso':y_pred_lasso})\ndff3['my_error']=dff3['y_test']-dff3['y_pred_lasso']\n(dff3.my_error.sum())**2","fb8c8620":"dff3","ed5ab528":"score3=r2_score(y_test,y_pred_lasso)\nscore3","668f9bac":"plt.figure(figsize=(12,6))\nsns.regplot(x=dff3.y_pred_lasso,y=dff3.y_test)","5e850f66":"LinearRegressionPredictions=score\nDecisionTreeRegressorPredictions=score1\nLassoRegressionPredictions=score2\nRidgeRegressionPredictions=score3\nModels=['Linear Regression','Decision Tree Regression','Lasso Regression','Ridge Regression']\nScores=[LinearRegressionPredictions,DecisionTreeRegressorPredictions,LassoRegressionPredictions,RidgeRegressionPredictions]","c184540a":"from sklearn.metrics import mean_squared_error","9ddb04e6":"rms=round(mean_squared_error(y_test,y_pred,squared=False),12)\nrms","f266fb07":"rms1=round(mean_squared_error(y_test,y_pred2,squared=False),2)\nrms1","a1e79058":"rms2=round(mean_squared_error(y_test,y_pred_lasso,squared=False),5)\nrms2","5cf312ed":"rms3=round(mean_squared_error(y_test,y_pred_ridge,squared=False),5)\nrms3","82ff026b":"LinearRegressionPredictions=score\nDecisionTreeRegressorPredictions=score1\nLassoRegressionPredictions=score2\nRidgeRegressionPredictions=score3\nModels=['Linear Regression','Decision Tree Regression','Lasso Regression','Ridge Regression']\nScores=[LinearRegressionPredictions,DecisionTreeRegressorPredictions,LassoRegressionPredictions,RidgeRegressionPredictions]\nrmse=[rms,rms1,rms2,rms3]","9f20bd86":"scores_df=pd.DataFrame({'Models':Models,'R2 Scores':Scores,'Root_Mean_Squared_Error':rmse})\nscores_df","28c32cd6":"plt.rcParams[\"figure.autolayout\"] = True\nplt.rcParams[\"figure.figsize\"] = [12,20]\nf, ax = plt.subplots(4,1 )\nsns.regplot(x=dff.y_pred,y=dff.y_test,ax=ax[0])\nax[0].set_title('Predictions using Linear Regression')\nsns.regplot(x=dff3.y_pred_lasso,y=dff3.y_test,ax=ax[1])\nax[1].set_title('Predictions using Lasso Regression')\nsns.regplot(x=dff2.y_pred,y=dff2.y_test,ax=ax[2])\nax[2].set_title('Predictions using Ridge Regression')\nsns.regplot(x=dff1.y_DTR_pred,y=dff1.y_test,ax=ax[3])\nax[3].set_title('Predictions using Decision Tree Regression')\nf.tight_layout()","8e6777b9":"**NOTE:**Anyhow, we are getting almost same distribution and we have already decided to remove one of this features as they are highly correlate and may act like duplicate features.","dcba6f4f":"* **NOTE:** From the above dataset, you can cleary see that the error in my model is just near to some decimal points which shows that this model maybe good for predictions.\n* **NOTE:** Also note that this model is not overfitted as we have already used train test split function to split the dataset so now lets see on testing dataset.","e84e0888":"**NOTE:**Here we can see that we have a right skewed data, so if we want we can convert it to normal distribution.","b7b9ec5f":"**NOTE:**Here we can easily say that most number of vehicles are shared when there is summer season that is it starts to rise from april and its at the peak in May.","ee631007":"Weekdays: Monday:0, Tuesday:1, Wednesday:2, Thursday:3, Friday:4, Saturday:5, Sunday:6","47aefadb":"**NOTE:**Here we can see that we have achieved around 98% but with Liner Regression we have a better score.","55fe5e14":"1. : Clear, Few clouds, Partly cloudy, Partly cloudy\n2. : Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n3. : Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n4. : Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog","6e4765ce":"* **NOTE:**From above graph it is confirmed that when the weather is cool, and not very sunny, more number of bikes are used.\n* **NOTE:**We also cannot see any values when there is heavy rain type of conditions and there is no number of vehicles.","db7bbeee":"Here we can see that on wednesday and sturday, most of the bikes are shared.","ed7869b6":"**NOTE:**We also cannot say with accurate judgement about the relationship about windspeed and count of vehicles.","8b47cadb":"**NOTE:**We cannot properly say the relation between count of vehicles and humidity from this above graph.","e59d3b7b":"**NOTE:** Year:1 means 2019, and Year:0 means 2018, so we can see that in 2019, the count of vehicles have increases.","099dcfc4":"**NOTE:**Using train_test_split to overcome overfitting.","47b7a7f7":"**NOTE:** Most of the bikes are used when there not a holiday","e74eb722":"Season (1:spring, 2:summer, 3:fall, 4:winter)","04d1f730":"* **NOTE:** Here we can see that registered users and count of vehicles are like more than 90 percent correlated which means that registeted users feature will have more weightage to predict the count of vehicles.\n\n* **NOTE:** Here we can also see that the feeling temperature and temperature are nearly same so we can drop one of this feature so our complexcity of model decreases and also it reduces the curse of dimensionality to the model.","03baf5ab":"**NOTE:** Even with the Ridge Regression model, we are having a better score.","043c7285":"**NOTE:**Here we can see that in summer we have greatest number of vehicles getting registered","acf822bc":"**NOTE:**Here we can clearly see that as the registered number of users increases, count also increases."}}