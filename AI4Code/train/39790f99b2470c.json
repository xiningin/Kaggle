{"cell_type":{"2db55ecf":"code","15a7fec9":"code","a4d78861":"code","f87e3cca":"code","f56215e1":"code","af6fe414":"code","d3951abd":"code","ccdb2a7a":"code","4e5be247":"code","f09e8bb2":"code","5b268566":"code","caf0f986":"code","f108fc29":"code","e2592efa":"code","3e1729c3":"code","d51ff4a3":"code","f8119637":"code","69193e9b":"code","e2edc6d3":"code","4c83a10a":"code","c0b4a77e":"code","d622ad74":"code","44d595cb":"code","c995e7f0":"code","1043697b":"code","3e60cbd6":"code","232b97ec":"code","3fca3d18":"code","c83088dc":"code","12da5fd9":"code","3a5df0e6":"code","f27a7fca":"code","14a69ce4":"code","be7dd1b5":"code","1b6b5cea":"code","b642c949":"code","09af4b99":"markdown","86c23cdd":"markdown","826a5f3b":"markdown","07b51843":"markdown","99424e01":"markdown","74babedf":"markdown","5ec30985":"markdown","209d951d":"markdown","6a1ed132":"markdown","41a8a5ef":"markdown","c5e47608":"markdown","940a1e2b":"markdown","764bae03":"markdown","6349e148":"markdown","d3b1e93c":"markdown","0860bbac":"markdown","3c7eae75":"markdown","d039a8cf":"markdown","5414abd5":"markdown","b30da97f":"markdown","3db34e40":"markdown","e1a61e1a":"markdown","ad551927":"markdown","6a773a2b":"markdown","9e0dcce3":"markdown","009d8d77":"markdown","a62280d7":"markdown","23fce21e":"markdown","79127b04":"markdown","01ba7910":"markdown","a5a8db11":"markdown"},"source":{"2db55ecf":"import os\nimport random\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport tensorflow as tf\nfrom scipy import special #comb, factorial\nfrom keras import backend as K\nfrom scipy.stats import uniform\nfrom matplotlib import pyplot as plt\nfrom sklearn import tree\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest,chi2\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler,LabelEncoder\nfrom sklearn.metrics import classification_report, roc_auc_score, recall_score, make_scorer, plot_confusion_matrix, confusion_matrix,accuracy_score,f1_score\n\n\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","15a7fec9":"sns.set_style(\"darkgrid\")\ndf = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","a4d78861":"df.info()","f87e3cca":"print(\"Number of null values in each column\")\ndf.isnull().sum()","f56215e1":"df['Genre'].value_counts()","af6fe414":"dataframe = df\nfeature_1 = 'Year'\nfeature_2 = 'Genre'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","d3951abd":"dataframe = df\nfeature = 'Reviews'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist()\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","ccdb2a7a":"dataframe = df\nfeature = 'Price'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist()\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","4e5be247":"dataframe = df\nfeature = 'User Rating'\nsns.set_style('ticks')\nplt.figure(figsize=(10,7))\ndataframe[feature].hist()\nplt.title(f\"Distribution of the feature `{feature}`\",fontsize=25)\nplt.show()","f09e8bb2":"df['Year'].value_counts()","5b268566":"#HISTOGRAM\ndataframe = df\ncat_feat = 'Genre'\ncont_feat = 'Reviews'\nplt.figure(figsize=(7,7))\nfor value in df[cat_feat].unique():\n    sns.distplot(df[df[cat_feat] == value][cont_feat], label=value)\nplt.legend()\nplt.title(f\"Distribution of `{cont_feat}` conditional on `{cat_feat}`\")\nplt.show()","caf0f986":"#STRIP\ndataframe = df\nfeature_1 = 'Genre'\nfeature_2 = 'Reviews'\nplt.figure(figsize=(7,7))\nhue = None\nsns.stripplot(x=feature_1, y=feature_2,hue=hue,\n              data=df, palette=\"Set2\", size=20, marker=\".\",\n              edgecolor=\"gray\", alpha=.25)\nplt.show()","f108fc29":"#BOX\ndataframe = df\nfeature_1 = 'Genre'\nfeature_2 = 'Reviews'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","e2592efa":"#BOX\ndataframe = df\nfeature_1 = 'Year'\nfeature_2 = 'Reviews'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","3e1729c3":"dataframe = df\nfeature1 = 'Reviews'\nfeature2 = 'Price'\n\ng=sns.jointplot(x=dataframe[feature1], y=dataframe[feature2], kind=\"kde\")\ng.fig.set_figwidth(11)\ng.fig.set_figheight(13)\nplt.show()","d51ff4a3":"corr_c = df[['Reviews','Price']].corr()['Price'][0]\nprint(f\"Correlation between Reviews and Price: {corr_c}\" )","f8119637":"dataframe = df\nfeature1 = 'User Rating'\nfeature2 = 'Reviews'\n\ng=sns.jointplot(x=dataframe[feature1], y=dataframe[feature2], kind=\"kde\")\ng.fig.set_figwidth(11)\ng.fig.set_figheight(13)\nplt.show()","69193e9b":"corr_c = df[['Reviews','User Rating']].corr()['User Rating'][0]\nprint(f\"Correlation between Reviews and Price: {corr_c}\" )","e2edc6d3":"#BOX\ndataframe = df\nfeature_1 = 'Genre'\nfeature_2 = 'Price'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","4c83a10a":"#HISTOGRAM\ndataframe = df\ncat_feat = 'Genre'\ncont_feat = 'Price'\nplt.figure(figsize=(7,7))\nfor value in df[cat_feat].unique():\n    sns.distplot(df[df[cat_feat] == value][cont_feat], label=value)\nplt.legend()\nplt.title(f\"Distribution of `{cont_feat}` conditional on `{cat_feat}`\")\nplt.show()","c0b4a77e":"#BOX\ndataframe = df\nfeature_1 = 'Year'\nfeature_2 = 'Price'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","d622ad74":"dataframe = df\nfeature1 = 'User Rating'\nfeature2 = 'Price'\n\ng=sns.jointplot(x=dataframe[feature1], y=dataframe[feature2], kind=\"kde\")\ng.fig.set_figwidth(11)\ng.fig.set_figheight(13)\nplt.show()","44d595cb":"corr_c = df[['User Rating','Price']].corr()['Price'][0]\nprint(f\"Correlation between Reviews and Price: {corr_c}\" )","c995e7f0":"#BOX\ndataframe = df\nfeature_1 = 'Genre'\nfeature_2 = 'User Rating'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.title(\"Conditional distributions of `User Rating` based on `Genre`\")\nplt.show()","1043697b":"df['top_25%'] = df['Reviews'] > df['Reviews'].quantile(0.75)","3e60cbd6":"dataframe = df\nfeature_1 = 'top_25%'\nfeature_2 = 'Genre'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","232b97ec":"#BOX\ndataframe = df\nfeature_1 = 'top_25%'\nfeature_2 = 'User Rating'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","3fca3d18":"#BOX\ndataframe = df\nfeature_1 = 'top_25%'\nfeature_2 = 'Price'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","c83088dc":"df['top_25%_price'] = df['Price'] > df['Price'].quantile(0.75)","12da5fd9":"dataframe = df\nfeature_1 = 'top_25%_price'\nfeature_2 = 'Genre'\nplt.figure(figsize=(7,7))\nsns.countplot(data=df,x=feature_1,hue=feature_2)\nplt.show()","3a5df0e6":"#BOX\ndataframe = df\nfeature_1 = 'top_25%_price'\nfeature_2 = 'User Rating'\nplt.figure(figsize=(7,7))\nsns.boxplot(x=feature_1, y=feature_2, data=dataframe)\nplt.show()","f27a7fca":"df1 = df.drop_duplicates(['Name'])\ndf1 = df1.groupby(\"Author\").count()['Name'].sort_values(ascending=False).head(6).reset_index()\ndf1.rename(columns={'Name': 'Number of books'},inplace=True)\n\nfig = px.bar(df1,\n             x='Author',\n             y='Number of books',\n             title='Most prolific authors')\nfig.show()","14a69ce4":"df1 = df.drop_duplicates(subset=['Name'])\ndf1 = df1[df1['Reviews'] >= 1000]\ndf1 = df1[df1['User Rating'] <= df1['User Rating'].quantile(0.10)]","be7dd1b5":"df1['top_25%'] = df1['top_25%'].map({True: 'Above 75%', False: \"Below 75%\"})\n\ndataframe = df1\nfeature = 'top_25%'\nseries = dataframe[feature].value_counts()\n\nlabels = series.index\nsizes = series.values\nexplode = [0 for x in range(series.size)]  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots(figsize=(10,15))\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title(f'How many of the worst performing books got large number of reviews?',fontsize=20)\nplt.show()","1b6b5cea":"df1['top_25%_price'] = df1['top_25%_price'].map({True: 'Above 75%', False: \"Below 75%\"})\n\ndataframe = df1\nfeature = 'top_25%_price'\nseries = dataframe[feature].value_counts()\n\nlabels = series.index\nsizes = series.values\nexplode = [0 for x in range(series.size)]  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots(figsize=(10,15))\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title(f'How many of the worst performing books are relatively expensive?',fontsize=20)\nplt.show()","b642c949":"dataframe = df1\nfeature = 'Genre'\nseries = dataframe[feature].value_counts()\n\nlabels = series.index\nsizes = series.values\nexplode = [0 for x in range(series.size)]  # only \"explode\" the 2nd slice (i.e. 'Hogs')\n\nfig1, ax1 = plt.subplots(figsize=(10,15))\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title(f'Distribution of `Genre` for worst performing books',fontsize=20)\nplt.show()","09af4b99":"# Does the price increase with time?","86c23cdd":"# How many of the worst perfoming books are expensive (price above 75% percentile?)?","826a5f3b":"# Is there any relation between user rating and reviews?","07b51843":"Couple of notes can be made here:\n1. As far as the books with the price below 75% percentile are concerned, the proportions of the fictional and non-fictional books are roughly the same. While for the most expensive books, the proportion of fictional books is way larger.\n\n2. Most expensive books tend to have lower user ratings (partly explained by the fact that buyers generally have higher expectation for the books with heftier price)","99424e01":"Get the basic info about the dataset","74babedf":"# Now let's see how the most expensive books differ from cheaper counterparts.\n\nAgain, we will define *most expensive* book as the one that has a price **above** 75% percentile.","5ec30985":"# Does the genre affect the number of reviews?","209d951d":"As it can be seen, almost every single year saw more non-fiction books being published than fiction ones. The only  year where the trend was reversed was 2014.","6a1ed132":"As graphs show, there doesn't seem to be a substantial difference between the two conditinal distributions.","41a8a5ef":"# Do the conditional distributions of user rating based  on gender differ?","c5e47608":"# Does the price distribution differ for the books with different genre?","940a1e2b":"# Let's have a look at the most prolific authors (i.e., those who has written the most books)","764bae03":"No, the price doesn't seem to be increasing with time.","6349e148":"# Let's have a look at the worst performing books.\n\nBy \"worst performing\", we mean the books with the rating below (or equal to) 10th percentile.","d3b1e93c":"And yet again, the correlation between the two is pretty weak.","0860bbac":"# Is there any relation between user rating and price?","3c7eae75":"# How many of the worst perfoming books got a lot of reviews (number of reviews above 75th percentile)?","d039a8cf":"Distribution of the column `Year`","5414abd5":"As we see, worst performing books are unlikely to get a lot of reviews.","b30da97f":"Fiction books tend to have higher user rating (on average), although fiction books have more outliers (those books with very low user rating)","3db34e40":"# How does the number of reviews change per year?","e1a61e1a":"From the graphs above, we can observe couple of things:\n1. The books with most reviews have more fictional books. The books with reviews below 75th percentile have more non-fictional books.\n\n2. Books with the most reviews tend to have higher rating (signified by the the higher median and the fact that Q1 of the books with the most reviews is on the same level as the median of the books below 75th percetinle)\n\n3. Contrary to what some people might expect,  books with most reviews have lower price (generally speaking).","ad551927":"# What is the distribution of `Genre` for worst performing books?","6a773a2b":"# How has the distribution of the `genre` been changing over time?","9e0dcce3":"# Is there any relation between `Reviews` and `Price`?","009d8d77":"Check the distribution of the column `Genre`","a62280d7":"It seems that fiction books tend to get more reviews than non-fiction ones.","23fce21e":"Check the nulls","79127b04":"As we've seen, the correlation between two variables is pretty weak. Although is seems like  there is a non-linear relation: the price for the books with reviews smaller than 20k is more spread out (i.e., larger variance) than for those with reviews larger than 20k. More notably, books with reviews larger than 20k tend to have lower price.","01ba7910":"Similarly, we see that the correlation between reviews and price is weak.","a5a8db11":"# Let's have a closer look at how books with the most reviews (top 25%) differ from the rest."}}