{"cell_type":{"36dad9d2":"code","e8da3bca":"code","222061f2":"code","5955e812":"code","0c691fc2":"code","6a3e3f38":"code","4afe3efc":"code","558c378c":"code","a7f95496":"code","495655eb":"code","49e50db3":"code","1a7c432f":"code","42348b64":"code","3c36769f":"code","47455d9d":"code","64641fb7":"code","a7b4ea1b":"code","d59fc08a":"code","90646455":"code","16d47426":"code","e408d3cb":"code","fb54b95f":"code","e2357f11":"code","f4ad3afb":"code","e68d18e8":"code","bf2c1fc5":"code","efa926ae":"code","06250aa6":"code","420e60b6":"code","4a361b20":"code","9c6df4f5":"code","37a45d5d":"code","5792a140":"code","a5a91f2f":"code","6e374b75":"code","523f462a":"code","2994f947":"code","7e43c03e":"code","339cac21":"code","06962cd7":"code","29c840ad":"code","84caf4cf":"code","db830a90":"code","a067ec04":"code","1b0b1b54":"code","ebdcadbb":"markdown","5f483e95":"markdown","1c7aa33d":"markdown","0ecf313d":"markdown","aab43b6e":"markdown","65d78157":"markdown","53e194dc":"markdown","424d6620":"markdown","971e880b":"markdown","10295a77":"markdown","8d590e0a":"markdown","8404b23b":"markdown","b9b0f52c":"markdown","cceb1359":"markdown","54556356":"markdown","f54de8f9":"markdown","93451b8a":"markdown","b5354072":"markdown","99335b50":"markdown","6943a4cf":"markdown","27b2a6ce":"markdown","7bc05f63":"markdown","01cdc7f3":"markdown","99ddfb6d":"markdown","62ed67a9":"markdown","5427f4a9":"markdown","1a49432b":"markdown","3ae5fdc9":"markdown","0629c545":"markdown","b2491241":"markdown","9aa61fba":"markdown","175fdb22":"markdown","00a7f57b":"markdown","8cbe1405":"markdown","acee3c2d":"markdown","997d61a2":"markdown","a947121d":"markdown","1ac7c727":"markdown","7010fb98":"markdown","f7878997":"markdown","5d8cbefc":"markdown","eedbf556":"markdown"},"source":{"36dad9d2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport missingno as msno\n\n%matplotlib inline\nsns.set(rc={\n    'figure.figsize':(20, 15)\n})","e8da3bca":"!pip install openpyxl","222061f2":"athletes=pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\ncoaches=pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\ngender=pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nteams=pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\nmedals=pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","5955e812":"def head_shape(df):\n    \"\"\"The function shows first 5 rows of data and data shape(rows, columns)\n    \n    Input:\n         df: The pandas dataframe.\n    Output:\n         head: Returns top 5 rows.\n         shape: Returns data shape.\n    \"\"\"\n    print(df.head())\n    print(df.shape)","0c691fc2":"head_shape(athletes)","6a3e3f38":"head_shape(coaches)","4afe3efc":"head_shape(gender)","558c378c":"head_shape(teams)","a7f95496":"head_shape(medals)","495655eb":"def missing_val_analysis(df):\n    \"\"\" This function if for analyzing the missing data of given datasets.\n    \n    Input:\n         df: The pandas dataframe.\n    \n    Output:\n         sum: Sum of missing values of each column.\n         percentage: % of missing values of each column.\n         plot: Visually shows the missing data.\n    \"\"\"\n    sum=df.isnull().sum()\n    percentage=sum\/len(df)\n    msno.bar(df)\n    plt.show()\n    return sum, percentage","49e50db3":"missing_val_analysis(athletes)","1a7c432f":"missing_val_analysis(coaches)","42348b64":"missing_val_analysis(gender)","3c36769f":"missing_val_analysis(teams)","47455d9d":"missing_val_analysis(medals)","64641fb7":"athletes.head()","a7b4ea1b":"len(athletes['Name'].unique()), len(athletes['NOC'].unique()), len(athletes['Discipline'].unique())","d59fc08a":"athletes_top10_countries=athletes.groupby('NOC')['Name'].count().sort_values(ascending=False).reset_index(name='Total Number of Athletes').head(10)\na=sns.barplot(data=athletes_top10_countries, x='NOC', y='Total Number of Athletes', hue='NOC', dodge=False)\nplt.title('Top 10 Countries based on the Total Number of the Athletes on each Countries', size=25, x=0.5, y=1.06, fontname='monospace', color='red')\nplt.legend(bbox_to_anchor=(1.05, 0.6), fancybox=True, shadow=True, prop={'size': 12})\nplt.tight_layout()\nplt.xticks(rotation=90, fontsize=18, fontname='monospace', color='#283655')\nplt.yticks([])\nplt.xlabel('')\nplt.ylabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=np.nan_to_num(p.get_height(), 0)\n    a.annotate(f'{int(height)}', (p.get_x()+p.get_width()\/2, p.get_height()-15.0), ha='center', va='center', size=28, xytext=(0, 5), textcoords='offset points', color='black', \n               fontname='monospace')\nplt.show()","90646455":"fig=px.pie(athletes['Discipline'].value_counts().reset_index().rename(columns={'Discipline': 'count'}), values='count', names='index', width=1450, height=800)\n\nfig.update_traces(textposition='inside', textinfo='percent+label', hole=0.7, marker=dict(colors=['#90afc5','#336b87','#2a3132','#763626'], \n                                                                                           line=dict(color='white', width=2)))\n\nfig.update_layout(annotations=[dict(text='The count of disciplines <br>perticipated by the athletes', x=0.5, y=0.5, font_size=26, showarrow=False, \n                                    font_family='monospace', font_color='#283655')],\n                  showlegend = False)\n                  \nfig.show()","16d47426":"coaches['Event'].fillna('No data', inplace=True)","e408d3cb":"coaches.head()","fb54b95f":"coaches_dis=coaches.groupby(['NOC','Name'])['Discipline'].value_counts().reset_index(name='coaches_dis')\nprint(coaches_dis)\npx.bar(coaches_dis, x='Discipline', color='NOC', title='Coaches of each country according to discipline').show()","e2357f11":"coaches_event=coaches.groupby(['NOC','Name'])['Event'].value_counts().reset_index(name='coaches_event')\nprint(coaches_event)\npx.bar(coaches_event, x='Event', color='NOC', title='Coaches of each country according to event').show()","f4ad3afb":"gender.head()","e68d18e8":"gender['Female'].sum(), gender['Male'].sum(), gender['Total'].sum()","bf2c1fc5":"female_dis=gender.groupby('Discipline')['Female'].sum().sort_values(ascending=False).reset_index(name='female_dis')\nprint(female_dis.head(7))\npx.bar(female_dis, x='Discipline', y='female_dis', color='Discipline', title='Total number of female athletes in each discipline').show()","efa926ae":"male_dis=gender.groupby('Discipline')['Male'].sum().sort_values(ascending=False).reset_index(name='male_dis')\nprint(male_dis.head(7))\npx.bar(male_dis, x='Discipline', y='male_dis', color='Discipline', title='Total number of male athletes in each discipline').show()","06250aa6":"gender['Difference']=gender['Male']-gender['Female']\ngender.head(10)","420e60b6":"gender['Female'].sum()-gender['Male'].sum()","4a361b20":"difference=gender.groupby('Discipline')['Difference'].sum().sort_values(ascending=False).reset_index(name='difference')\nprint(difference.head(7))\npx.bar(difference, x='Discipline', y='difference', color='Discipline', title='(Male-Female) Athletes in each discipline').show()","9c6df4f5":"teams.head()","37a45d5d":"len(teams['Name'].unique())==len(teams['NOC'].unique())","5792a140":"len(teams['Name'].unique()), len(teams['Discipline'].unique()), len(teams['NOC'].unique()), len(teams['Event'].unique())","a5a91f2f":"top_10_disciplines=teams['Discipline'].value_counts().sort_values().tail(10)\nprint(top_10_disciplines)\na=top_10_disciplines.plot(kind='barh', figsize=(25,15), color='green')\nplt.title('Top 10 Disciplines Participated by the teams', size=35, x=0.5, y=1.06, fontname='monospace', color='#283655')\nplt.xticks([])\nplt.yticks(fontname='monospace', fontsize=18, color='#283655')\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n    \nfor p in a.patches:\n    width = p.get_width()\n    a.text(1+width, p.get_y()+0.55*p.get_height(), f'{int(width)}', ha='center', va='center', fontname='monospace', fontsize=18, color='red')\nplt.show()","6e374b75":"dis_event=teams.groupby('Event')['Discipline'].count().sort_values(ascending=False).reset_index(name='Discipline Count')\ndis_event.head()","523f462a":"dis_event['Discipline Count']=(dis_event['Discipline Count']\/dis_event['Discipline Count'].sum())*100\ndis_event.head()","2994f947":"a=dis_event.head(10).plot(kind='bar', x='Event', figsize=(30,15), color='gray')\nplt.title('Top 10 Disciplines by the events', size=35, x=0.5, y=1.06, fontname='monospace', color='gray')\nplt.xticks(fontname='monospace', fontsize=18, color='#283655')\nplt.yticks([])\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=p.get_height()\n    a.annotate(f'{int(height)}%', (p.get_x()+p.get_width()\/2, p.get_height()-0.50), ha='center', va='center', size=18,xytext=(0, 5), textcoords='offset points', \n               color='red', fontname='monospace')\nplt.show()","7e43c03e":"medals.head()","339cac21":"medal_winner_countries=len(medals['Team\/NOC'].unique())\nmedal_winner_countries","06962cd7":"top10_ranked_countries=medals['Team\/NOC'].head(10)\nprint(top10_ranked_countries)","29c840ad":"top10_golds=medals.groupby('Team\/NOC')['Gold'].sum().sort_values(ascending=False).reset_index(name='top10_golds').head(10)\na=sns.barplot(data=top10_golds, x='Team\/NOC', y='top10_golds', hue='Team\/NOC', dodge=False)\nplt.title('Top 10 Gold Winner Countries', size=35, x=0.5, y=1.06, fontname='monospace', color='gray')\nplt.legend(bbox_to_anchor=(1.05, 0.6), fancybox=True, shadow=True, prop={'size': 12})\nplt.xticks(rotation=90, fontsize=18, fontname='monospace', color='#283655')\nplt.yticks([])\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=np.nan_to_num(p.get_height(), 0)\n    a.annotate(f'{int(height)}', (p.get_x()+p.get_width()\/2, p.get_height()-5.0), ha='center', va='center', size=28,xytext=(0, 5), textcoords='offset points', color='red', \n               fontname='monospace')\nplt.show()","84caf4cf":"top10_silver=medals.groupby('Team\/NOC')['Silver'].sum().sort_values(ascending=False).reset_index(name='top10_silver').head(10)\na=sns.barplot(data=top10_silver, x='Team\/NOC', y='top10_silver', hue='Team\/NOC', dodge=False)\nplt.title('Top 10 Silver Winner Countries', size=35, x=0.5, y=1.06, fontname='monospace', color='gray')\nplt.legend(bbox_to_anchor=(1.05, 0.6), fancybox=True, shadow=True, prop={'size': 12})\nplt.xticks(rotation=90, fontsize=18, fontname='monospace', color='#283655')\nplt.yticks([])\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=np.nan_to_num(p.get_height(), 0)\n    a.annotate(f'{int(height)}', (p.get_x()+p.get_width()\/2, p.get_height()-5.0), ha='center', va='center', size=28,xytext=(0, 5), textcoords='offset points', color='red', \n               fontname='monospace')\nplt.show()","db830a90":"top10_bronze=medals.groupby('Team\/NOC')['Bronze'].sum().sort_values(ascending=False).reset_index(name='top10_bronze').head(10)\na=sns.barplot(data=top10_bronze, x='Team\/NOC', y='top10_bronze', hue='Team\/NOC', dodge=False)\nplt.title('Top 10 Bronze Winner Countries', size=35, x=0.5, y=1.06, fontname='monospace', color='gray')\nplt.legend(bbox_to_anchor=(1.05, 0.6), fancybox=True, shadow=True, prop={'size': 12})\nplt.xticks(rotation=90, fontsize=18, fontname='monospace', color='#283655')\nplt.yticks([])\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=np.nan_to_num(p.get_height(), 0)\n    a.annotate(f'{int(height)}', (p.get_x()+p.get_width()\/2, p.get_height()-5.0), ha='center', va='center', size=28,xytext=(0, 5), textcoords='offset points', color='red', \n               fontname='monospace')\nplt.show()","a067ec04":"top10_medals=medals.groupby('Team\/NOC')['Total'].sum().sort_values(ascending=False).reset_index(name='top10_medals').head(10)\na=sns.barplot(data=top10_medals, x='Team\/NOC', y='top10_medals', hue='Team\/NOC', dodge=False)\nplt.title('Top 10 Medals Winner Countries', size=35, x=0.5, y=1.06, fontname='monospace', color='gray')\nplt.legend(bbox_to_anchor=(1.05, 0.6), fancybox=True, shadow=True, prop={'size': 12})\nplt.xticks(rotation=90, fontsize=18, fontname='monospace', color='#283655')\nplt.yticks([])\nplt.ylabel('')\nplt.xlabel('')\na.spines['left'].set_linewidth(1.5)\nfor w in ['right', 'top', 'bottom']:\n    a.spines[w].set_visible(False)\n\nfor p in a.patches:\n    height=np.nan_to_num(p.get_height(), 0)\n    a.annotate(f'{int(height)}', (p.get_x()+p.get_width()\/2, p.get_height()-5.0), ha='center', va='center', size=28,xytext=(0, 5), textcoords='offset points', color='red', \n               fontname='monospace')\nplt.show()","1b0b1b54":"fig=px.pie(medals.groupby('Team\/NOC')['Total'].sum().reset_index(), values='Total', names='Team\/NOC', width=1450, height=800)\n\nfig.update_traces(textposition='inside', textinfo='percent+label', hole=0.7, marker=dict(colors=['#90afc5','#336b87','#2a3132','#763626'], line=dict(color='white', width=2)))\n\nfig.update_layout(annotations=[dict(text='The Percentage of Total<br>medal winners by the countries', x=0.5, y=0.5, font_size=26, showarrow=False, font_family='monospace', \n                                    font_color='#283655')],\n                  showlegend = False)\n                  \nfig.show()","ebdcadbb":"### <span style='color:red'>Which Countries are the Most Silver Medal Winner?<\/span>","5f483e95":"### <span style=\"color:red\">**Coaches According to the Disciplines by Countries**<\/span>","1c7aa33d":"# <span style=\"color:green\">**Importing the Necessary Libraries**<\/span>","0ecf313d":"### <span style='color:red'>Which are the Top Disciplines According to the Events?<\/span>","aab43b6e":"### <span style='color:red'>Which Countries are in Top 10 based on the Ranking?<\/span>","65d78157":"##### <span style=\"color:black\">Coaches Data<\/span>","53e194dc":"#### <span style=\"color:orange\">**More EDA by merging the datasets.**<\/span>\n#### <span style=\"color:orange\">**Further analysis when data will update.**<\/span>","424d6620":"##### <span style=\"color:black\">Medals Data<\/span>","971e880b":"##### <span style=\"color:black\">Athletes Data<\/span>","10295a77":"## <span style='color:blue'>***Medals EDA***<\/span>","8d590e0a":"# <span style=\"color:green\">**Loading the Data**<\/span>","8404b23b":"##### <span style='color:orange'>Male Athletes are 452 more than Female Athletes<\/span>","b9b0f52c":"##### <span style=\"color:black\">Coaches Data<\/span>","cceb1359":"### <span style='color:red'>How Many Male Athletes Participated in each Discipline?<\/span>","54556356":"##### <span style=\"color:black\">Filling the Null Values<\/span>","f54de8f9":"## <span style=\"color:blue\">***Coaches EDA***<\/span>","93451b8a":"### <span style=\"color:red\">**Which Countries Sent the Most Number of Athletes?**<\/span>","b5354072":"##### <span style=\"color:black\">Teams Data<\/span>","99335b50":"### <span style='color:red'>Which Countries are the Most Gold Medal Winner?<\/span>","6943a4cf":"# <span style=\"color:green\">**Analysis**<\/span>","27b2a6ce":"##### <span style=\"color:black\">Athletes Data<\/span>","7bc05f63":"## <span style=\"color:blue\">***Take a Look on Some Data and Data Shape***<\/span>","01cdc7f3":"## <span style='color:blue'>***Gender EDA***<\/span>","99ddfb6d":"### <span style='color:red'>Medal Distribution in % that are Won by the Countries<\/span>","62ed67a9":"### <span style='color:red'>Which Countries are the Most Medal Winner?<\/span>","5427f4a9":"### <span style='color:red'>Which Countries are the Most Bronze Medal Winner?<\/span>","1a49432b":"### <span style='color:red'>Which are the Top Disciplines that Participated by the Teams?<\/span>","3ae5fdc9":"### <span style='color:red'>What is the Difference between Male and Female Athletes in each Discipline><\/span>","0629c545":"##### <span style='color:black'>Take a Look on Unique Values of Athletes Names, Countries and Disciplines<\/span>","b2491241":"## <span style='color:blue'>***Teams EDA***<\/span>","9aa61fba":"##### <span style=\"color:black\">Teams Data<\/span>","175fdb22":"##### <span style=\"color:black\">Gender data<\/span>","00a7f57b":"##### <span style=\"color:black\">Medals Data<\/span>","8cbe1405":"### <span style='color:red'>How Many Countries Have Won at least One Medal?<\/span>","acee3c2d":"### <span style=\"color:red\">**Distribution of Disciplines Participated By the Athletes**<\/span>","997d61a2":"### <span style='color:red'>How Many Female Athletes Participated in each Discipline?<\/span>","a947121d":"## <span style=\"color:blue\">***Missing Data Analysis***<\/span>","1ac7c727":"### <span style='color:red'>**Coaches According to the Events by Countries**<\/span>","7010fb98":"##### <span style='color:black'>Take a Look of Unique Number of Genders Participated in the Olympic 2021<\/span>","f7878997":"## <span style=\"color:blue\">***Athletes EDA***<\/span>","5d8cbefc":"##### <span style=\"color:black\">Gender Data<\/span>","eedbf556":"# <span style=\"color:green\">**What's Next**<\/span>"}}