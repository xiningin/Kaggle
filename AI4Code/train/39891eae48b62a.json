{"cell_type":{"ec5098a3":"code","27864d7f":"code","43577633":"code","ae1f225c":"code","f325469e":"code","49809913":"code","bb783330":"code","43f40bd5":"code","cf74968a":"code","cd44fabb":"code","f400d92f":"code","3cd61c06":"code","63bee361":"code","1afdfabc":"code","8136d116":"code","5cdaa8e1":"code","0808533d":"code","8b46ade0":"code","8daddf94":"code","4e37a9f3":"code","8b49abb4":"code","6dda6c10":"code","dc62a53f":"code","46085bec":"code","5125b892":"code","2b025a76":"code","05b869e3":"code","936134a9":"markdown","5647616a":"markdown","b00798b2":"markdown","47515cc2":"markdown"},"source":{"ec5098a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","27864d7f":"df = pd.read_csv(\"..\/input\/suicide-rates-overview-1985-to-2016\/master.csv\", thousands=',')\n#df.head(10)\ndf.isnull().sum()","43577633":"print(df.columns.values)","ae1f225c":"country_df = df[['suicides_no', 'population', 'country', 'year']].groupby(['country', 'year'], as_index=False).sum()\ncountry_df.reindex(columns=['suicides_no', 'population', 'country', 'year'])\ncountry_df['suicides\/100k pop'] = 100000*country_df['suicides_no'] \/ country_df['population']\ncountry_df.head()\necon_df = df[['country', 'year', 'gdp_per_capita ($)', ' gdp_for_year ($) ']].groupby(['country', 'year'], as_index=False).mean()\necon_df.head()\n\ncountry_df = pd.merge(country_df, econ_df,  how='left', left_on=['year','country'], right_on = ['year','country'])\ncountry_df.head()","f325469e":"gen_df = df[['suicides_no', 'population', 'generation', 'year']].groupby(['generation', 'year'], as_index=False).sum()\ngen_df['suicides\/100k pop'] = 100000*gen_df['suicides_no'] \/ gen_df['population']\ngen_df.head()\n\necon_gen_df = df[['generation', 'year', 'gdp_per_capita ($)', ' gdp_for_year ($) ']].groupby(['generation', 'year'], as_index=False).mean()\n#econ_gen_df.head()\n\ngen_df = pd.merge(gen_df, econ_gen_df,  how='left', left_on=['year','generation'], right_on = ['year','generation'])\ngen_df.head()","49809913":"age_df = df[['suicides_no', 'population', 'age', 'year']].groupby(['age', 'year'], as_index=False).sum()\nage_df['suicides\/100k pop'] = 100000*gen_df['suicides_no'] \/ gen_df['population']\nage_df.head()\necon_age_df = df[['age', 'year', 'gdp_per_capita ($)', ' gdp_for_year ($) ']].groupby(['age', 'year'], as_index=False).mean()\n#econ_gen_df.head()\n\nage_df = pd.merge(age_df, econ_age_df,  how='left', left_on=['year','age'], right_on = ['year','age'])\nage_df.head()","bb783330":"age_df.corr()","43f40bd5":"def plot_deaths_per_gdppp(df, str):\n    x = df['gdp_per_capita ($)']\n    y = df['suicides\/100k pop']\n    plt.scatter(x,y, label=str)\n    plt.xlabel('gdp_per_capita ($)')\n    plt.ylabel('suicides\/100k pop')\n\ncountries =df['country'].unique()    \nfor country in countries:\n    plot_deaths_per_gdppp(country_df[country_df['country']== country],country)\n#plt.legend()","cf74968a":"#G8 = [ 'United States', 'Canada', 'France', 'Germany', 'Japan', 'Italy', 'Russian Federation', 'United Kingdom' ]\nG8 = [ 'United States', 'Canada', 'France', 'Germany', 'Japan', 'Italy', 'United Kingdom' ]\ng8_df = country_df[country_df['country'].isin(G8)]\ng8_df[['country', 'suicides\/100k pop']].boxplot(figsize=(40,10), by='country')\n","cd44fabb":"import matplotlib\nimport matplotlib.pyplot as plt\n\ncountries =df['country'].unique()\n\ndef plot_deaths_per_year(df, str):\n    x = df['year']\n    y = df['suicides\/100k pop']\n    plt.plot(x,y, label=str)\n    plt.xlabel('Year')\n    plt.ylabel('suicides\/100k pop')\n\nfor country in countries:\n    plot_deaths_per_year(country_df[country_df['country']== country], country)\n#plt.legend()\n","f400d92f":"gens =df['generation'].unique()\n\nfor gen in gens:\n    plot_deaths_per_year(gen_df[gen_df['generation']== gen],gen)\nplt.legend()","3cd61c06":"gen_df[['generation', 'suicides\/100k pop']].boxplot(by='generation')","63bee361":"ages =df['age'].unique()\n#print(ages)\nfor age in ages:\n    plot_deaths_per_year(age_df[age_df['age']== age], age)\nplt.legend()","1afdfabc":"def divide_two_cols(df_sub):\n    return df_sub['suicides_no'].sum() \/ float(df_sub['population'].sum())\n\ndf.groupby('sex').apply(divide_two_cols)\n","8136d116":"import seaborn as sns\nsns.distplot(df['gdp_per_capita ($)']);","5cdaa8e1":"plt.figure(figsize=(18,10))\nplt.subplot(211)\nsns.boxplot(x = country_df[\"year\"],y = country_df[\"suicides\/100k pop\"],palette=\"rainbow\")\nplt.title(\"Suicide number \")\nplt.show()","0808533d":"sns.distplot(df['suicides\/100k pop']);","8b46ade0":"df['country'].unique()\nNorth_America = {'Antigua and Barbuda', 'Bahamas', 'Barbados', 'Belize','Canada', 'Cuba', 'Dominica', 'El Salvador', 'Guatemala', 'Jamaica', 'Mexico', 'Nicaragua', 'Panama',\n        'Puerto Rico','Saint Kitts and Nevis', 'Saint Lucia',\n       'Saint Vincent and Grenadines','Trinidad and Tobago', 'United States'}\nEurope  = ['Albania', 'Armenia','Austria',  'Azerbaijan', 'Belarus', 'Belgium','Bosnia and Herzegovina', 'Bulgaria',\n        'Costa Rica', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia',\n       'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Latvia',\n       'Lithuania', 'Luxembourg',\n       'Malta', 'Montenegro', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russian Federation',\n        'Serbia', 'San Marino', 'Slovakia', 'Slovenia',\n       'Spain', 'Sweden', 'Switzerland',\n         'Turkey',  'Ukraine', 'United Kingdom']\nAsia ={'Bahrain', 'Israel', 'Japan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan', 'Macau', 'Maldives', 'Mongolia', 'Oman','Philippines', 'Qatar', 'Republic of Korea','Seychelles',\n       'Singapore', 'Sri Lanka','Thailand','Turkmenistan', 'United Arab Emirates','Uzbekistan'}\nAfrica ={ 'Cabo Verde', 'Mauritius', 'South Africa',}\nSouth_America = {'Argentina', 'Aruba', 'Brazil', 'Chile', 'Colombia', 'Ecuador','Grenada', 'Guyana', 'Paraguay', 'Suriname', 'Uruguay'}\nOceania = {'Australia', 'Fiji', 'Kiribati', 'New Zealand'}\n\nG8 = [ 'United States', 'Canada', 'France', 'Germany', 'Japan', 'Italy', 'Russian Federation', 'United Kingdom' ]\n","8daddf94":"Europe_df = country_df[country_df['country'].isin(Europe)]\nEurope_df[['country', 'suicides\/100k pop']].boxplot(figsize=(40,10), by='country')","4e37a9f3":"Asia_df = country_df[country_df['country'].isin(Asia)]\nAsia_df[['country', 'suicides\/100k pop']].boxplot(figsize=(40,10), by='country')","8b49abb4":"South_America_df = country_df[country_df['country'].isin(South_America)]\nSouth_America_df[['country', 'suicides\/100k pop']].boxplot(figsize=(40,10), by='country')","6dda6c10":"North_America_df = country_df[country_df['country'].isin(North_America)]\nNorth_America_df[['country', 'suicides\/100k pop']].boxplot(figsize=(40,10), by='country')","dc62a53f":"for dataset in df:\n    dataset['sex'] = dataset['ex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ndf.head()","46085bec":"df.plot.scatter(x='gdp_per_capita ($)', y='suicides\/100k pop')","5125b892":"J_df=df[df['country']=='Japan']\nJapan_gen_df = J_df[['suicides_no', 'population', 'generation', 'year']].groupby(['generation', 'year'], as_index=False).sum()\nJapan_gen_df['suicides\/100k pop'] = 100000*gen_df['suicides_no'] \/ gen_df['population']\nJapan_gen_df.head()\n","2b025a76":"gens =Japan_gen_df['generation'].unique()\n\nfor gen in gens:\n    plot_deaths_per_year(Japan_gen_df[Japan_gen_df['generation']== gen],gen)\nplt.legend()","05b869e3":"J_df.corr()","936134a9":"Remember this is the average of each group which will not be equally sized. ","5647616a":"What the above two plots seems to show is globally suicides seem to be dominated by outliers. ","b00798b2":"Two ways the group the data is to look by country and by the generation of the individual.","47515cc2":"The sharp decrease in 25-54 range seems to suggest something is wrong with the data."}}