{"cell_type":{"dc2f6158":"code","d6999d30":"code","9a47d514":"code","ba945a2e":"code","081dfacb":"code","1f9a2240":"code","c665b1b1":"code","de53a9db":"code","f6e7bc14":"code","8208131b":"code","68c97b17":"code","c71d81fa":"code","650ab352":"code","7c50215b":"code","d562c268":"code","56708528":"code","10c86b1c":"code","8588e246":"code","7a90bf65":"code","700306d3":"code","7c41605b":"markdown","40f024b8":"markdown","c9fd6b7d":"markdown","97a499f2":"markdown","efbc5750":"markdown","ac5c4224":"markdown","0096346f":"markdown","cba8fd80":"markdown","66c4fb7e":"markdown","e15ba5af":"markdown","a1c0d2c9":"markdown"},"source":{"dc2f6158":"!pip install squarify","d6999d30":"# for some basic operations\nimport numpy as np \nimport pandas as pd \n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nimport squarify\n\n# for providing path\nimport os\nprint(os.listdir(\"..\/input\"))\n","9a47d514":"# reading the dataset\n\ndata = pd.read_csv('..\/input\/Police_Department_Incidents_-_Previous_Year__2016_.csv')\n\n# check the shape of the data\ndata.shape\n\n\n\n","ba945a2e":"# checking the head of the data\n\ndata.head()\n\n\n\n","081dfacb":"# describing the data\n\ndata.describe()\n\n\n\n","1f9a2240":"# checking if there are any null values\n\ndata.isnull().sum()\n\n\n\n","c665b1b1":"# filling the missing value in PdDistrict using the mode values\n\ndata['PdDistrict'].fillna(data['PdDistrict'].mode()[0], inplace = True)\n\ndata.isnull().any().any()\n\n\n\n\n","de53a9db":"# plotting a tree map\n\ny = data['Category'].value_counts().head(25)\n    \nplt.rcParams['figure.figsize'] = (15, 15)\nplt.style.use('fivethirtyeight')\n\ncolor = plt.cm.magma(np.linspace(0, 1, 15))\nsquarify.plot(sizes = y.values, label = y.index, alpha=.8, color = color)\nplt.title('Tree Map for Top 25 Crimes', fontsize = 20)\n\nplt.axis('off')\nplt.show()","f6e7bc14":"# description of the crime\n\nfrom wordcloud import WordCloud\n\nplt.rcParams['figure.figsize'] = (15, 15)\nplt.style.use('fast')\n\nwc = WordCloud(background_color = 'orange', width = 1500, height = 1500).generate(str(data['Descript']))\nplt.title('Description of the Crime', fontsize = 20)\n\nplt.imshow(wc)\nplt.axis('off')\nplt.show()","8208131b":"# Regions with count of crimes\n\nplt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('seaborn')\n\ncolor = plt.cm.spring(np.linspace(0, 1, 15))\ndata['PdDistrict'].value_counts().plot.bar(color = color, figsize = (15, 10))\n\nplt.title('District with Most Crime',fontsize = 30)\n\nplt.xticks(rotation = 90)\nplt.show()","68c97b17":"# Regions with count of crimes\n\nplt.rcParams['figure.figsize'] = (20, 9)\nplt.style.use('seaborn')\n\ncolor = plt.cm.ocean(np.linspace(0, 1, 15))\ndata['Address'].value_counts().head(10).plot.bar(color = color, figsize = (15, 10))\n\nplt.title('Top 10 Addresses with the most Crime',fontsize = 20)\n\nplt.xticks(rotation = 90)\nplt.show()","c71d81fa":"# Regions with count of crimes\n\nplt.style.use('seaborn')\n\n\ndata['DayOfWeek'].value_counts().head(15).plot.pie(figsize = (15, 8), explode = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1))\n\nplt.title('Crime count on each day',fontsize = 20)\n\nplt.xticks(rotation = 90)\nplt.show()","650ab352":"# Regions with count of crimes\n\nplt.style.use('seaborn')\n\ncolor = plt.cm.winter(np.linspace(0, 10, 20))\ndata['Resolution'].value_counts().plot.bar(color = color, figsize = (15, 8))\n\nplt.title('Resolutions for Crime',fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","7c50215b":"data['Date'] = pd.to_datetime(data['Date'])\n\ndata['Month'] = data['Date'].dt.month\n\nplt.style.use('fivethirtyeight')\nplt.rcParams['figure.figsize'] = (15, 8)\n\nsns.countplot(data['Month'], palette = 'winter',)\nplt.title('Monthly Crime Rate', fontsize = 20)\n\nplt.show()","d562c268":"# checking the time at which crime occurs mostly\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\ncolor = plt.cm.twilight(np.linspace(0, 5, 100))\ndata['Time'].value_counts().head(5).plot.bar(color = color, figsize = (15, 9))\n\nplt.title('Crime Occurrence Throughout The Day', fontsize = 20)\nplt.show()","56708528":"\ndf = pd.crosstab(data['Category'], data['PdDistrict'])\ncolor = plt.cm.Greys(np.linspace(0, 1, 10))\n\ndf.div(df.sum(1).astype(float), axis = 0).plot.bar(stacked = True, color = color, figsize = (18, 12))\nplt.title('District vs Category of Crime', fontweight = 30, fontsize = 20)\n\nplt.xticks(rotation = 90)\nplt.show()","10c86b1c":"t = data.PdDistrict.value_counts()\n\ntable = pd.DataFrame(data=t.values, index=t.index, columns=['Count'])\n#table = table.reindex([\"CENTRAL\", \"NORTHERN\", \"PARK\", \"SOUTHERN\", \"MISSION\", \"TENDERLOIN\", \"RICHMOND\", \"TARAVAL\", \"INGLESIDE\", \"BAYVIEW\"])\n\ntable = table.reset_index()\ntable.rename({'index': 'Neighborhood'}, axis='columns', inplace=True)\n\ntable\n","8588e246":"gjson = r'https:\/\/cocl.us\/sanfran_geojson'\nsf_map = folium.Map(location = [37.77, -122.42], zoom_start = 12)","7a90bf65":"\n#generate map\nsf_map.choropleth(\n    geo_data=gjson,\n    data=table,\n    columns=['Neighborhood', 'Count'],\n    key_on='feature.properties.DISTRICT',\n    fill_color='YlOrRd', \n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Crime Rate in San Francisco'\n)\n\nsf_map","700306d3":"import gmplot\n# For improved table display in the notebook\nfrom IPython.display import display\n","7c41605b":"**Importing some Basic Libraries**","40f024b8":"**Description of the Crime**","c9fd6b7d":"**Density of crime in Sanfrancisco**","97a499f2":"<img src=\"https:\/\/i.imgur.com\/i3Pksy0.gif?noredirect\" width=\"700px\">","efbc5750":"## Geospatial Visualization","ac5c4224":"**Top 15 Addresses in Sanfrancisco in Crime**","0096346f":"**Sanfrancisco Crime Analysis**","cba8fd80":"**Reading the Dataset**","66c4fb7e":"<img src=\"https:\/\/media.giphy.com\/media\/josB0ZKSutNgA\/giphy.gif\" width=\"300px\">","e15ba5af":"<img src=\"https:\/\/www.dea.gov\/sites\/default\/files\/styles\/crop_paragraph_hero\/public\/2018-08\/sanfran_copy.jpg?h=9e857dc9&itok=4vVW02qv\" width=\"1000px\">","a1c0d2c9":"## Data Visualization"}}