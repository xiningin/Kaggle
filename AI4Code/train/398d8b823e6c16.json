{"cell_type":{"b93a3d7d":"code","6017ff8a":"code","e66c7f38":"code","9781616a":"code","c6f0c9a0":"code","e3cbebb8":"code","48e4600e":"code","26fa4b7b":"code","bb64b2b8":"code","279a7f32":"code","f8ec7d32":"code","dd1b1574":"code","9b990c3d":"code","c973ebe2":"code","7ad6aa16":"code","c7e0eff7":"code","269067b4":"code","a0c8f043":"code","0f66eb25":"code","78da9f03":"code","c1feb813":"code","2585cebc":"code","3d5bf97c":"code","a62ea4cf":"code","60d44c4e":"code","9df376f9":"code","91da4762":"markdown","2192ca67":"markdown","a34dd529":"markdown","2da91f19":"markdown","35ed8aa5":"markdown","3fcdd443":"markdown","5a7f99d6":"markdown","6736f4f6":"markdown","12629cfc":"markdown","41efdcf9":"markdown","dc5d7292":"markdown","3b3ce2fb":"markdown","fba060cb":"markdown","a16b3883":"markdown","c05cb7bf":"markdown","4b6e4255":"markdown","c1cd36ba":"markdown"},"source":{"b93a3d7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier\n\nimport os\nprint(os.listdir(\"..\/input\"))\nsns.set(style='whitegrid')\n# Any results you write to the current directory are saved as output.","6017ff8a":"df = pd.read_csv('..\/input\/Iris.csv')","e66c7f38":"df.head()","9781616a":"df.describe()","c6f0c9a0":"#distribution for speal-length\nplt.subplots(figsize=(7,5))\nsns.distplot(df['SepalLengthCm'], hist=False, rug=True, color='c')","e3cbebb8":"#distribution of sepal-width\nplt.subplots(figsize=(7,5))\nsns.distplot(df['SepalWidthCm'], hist=False, rug=True, color='r')","48e4600e":"#distribution of petal-length\nplt.subplots(figsize=(7,5))\nsns.distplot(df['PetalLengthCm'], hist=False, rug=True, color='m')","26fa4b7b":"#distribution of petal-width\nplt.subplots(figsize=(7,5))\nsns.distplot(df['PetalWidthCm'], hist=False, rug=True, color='g')","bb64b2b8":"df['Species'].value_counts()","279a7f32":"df['Species'] = df['Species'].map({'Iris-versicolor': 'versicolor', 'Iris-virginica':'virginica', 'Iris-setosa':'setosa'})\n#mapped the species from Iris-x to x, not needed but I did it anyway","f8ec7d32":"df.head()","dd1b1574":"setosa = df[df['Species'] == 'setosa']            #make a dataframe setosa from df where species is setosa\nvirginica = df[df['Species'] == 'virginica']      #make a dataframe virginica from df where species is virginica\nversicolor = df[df['Species'] == 'versicolor']    #make a dataframe versicolor from df where species is versicolor","9b990c3d":"sns.jointplot(setosa['SepalWidthCm'], setosa['SepalLengthCm'], kind='kde', color='b')\nplt.title('Setosa')","c973ebe2":"sns.jointplot(versicolor['SepalWidthCm'], versicolor['SepalLengthCm'], kind='kde', color='c')\nplt.title('Versicolor')","7ad6aa16":"sns.jointplot(virginica['SepalWidthCm'], virginica['SepalLengthCm'], kind='kde', color='m')\nplt.title('Virginica')","c7e0eff7":"sns.jointplot(setosa['PetalWidthCm'], setosa['PetalLengthCm'], kind='kde', color='b')\nplt.title('setosa')","269067b4":"sns.jointplot(versicolor['PetalWidthCm'], versicolor['PetalLengthCm'], kind='kde', color='c')\nplt.title('versicolor')","a0c8f043":"sns.jointplot(virginica['PetalWidthCm'], virginica['PetalLengthCm'], kind='kde', color='m')\nplt.title('virginica')","0f66eb25":"df.drop(columns=['Id'], inplace=True) #dropping id column beacuse it's not needed for pairplot and for future analysis\nsns.pairplot(df, hue='Species')       #hue is species because we want see the species' distribution","78da9f03":"#splitting the data 80-20 for training and test \ntrain, test = train_test_split(df, test_size=0.2)","c1feb813":"print(train.shape)\nprint(test.shape)","2585cebc":"X_train = train[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\ny_train = train['Species']\n\nX_test = test[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\ny_test = test['Species']","3d5bf97c":"print(X_train.head())\nprint(y_train.head())\n\nprint(X_test.head())\nprint(y_test.head())","a62ea4cf":"model1 = LogisticRegression()\nmodel1.fit(X_train, y_train)\nprediction1 = model1.predict(X_test)\n\nprint('Accuracy of this model is :', metrics.accuracy_score(prediction1, y_test))","60d44c4e":"model2 = svm.SVC()\nmodel2.fit(X_train, y_train)\nprediction2 = model2.predict(X_test)\n\nprint('Accuracy of SVM model is :', metrics.accuracy_score(prediction2, y_test))","9df376f9":"model3 = DecisionTreeClassifier()\nmodel3.fit(X_train, y_train)\nprediction3 = model3.predict(X_test)\n\nprint('Acuracy of Decision Tree model is :', metrics.accuracy_score(prediction3, y_test))","91da4762":"**Here the idea is to split the dataframe into three depending upon the Iris species. Visualize the distribution different species using spela-length-vs-sepal-width and petal-length-vs-petal-width** ","2192ca67":"**We have four different features of Iris flower namely Sepal-Length, Sepal-Width, Petal-length, Petal-Width. All values are given in cm scale. Each row of the dataframe has an Id of the flower, values for the features and flower species associated with it.** ","a34dd529":"**Here I will use dirrent classifier for this problem namely Logistic Regression, SVM(suport vector machine) and Decision Tree classifier. Lets see how these classifiers work for this dataset.** But 1st split the dataframe for training and test purpose.","2da91f19":"## Conclusion\nFrom this we can see that svm is performing extremely good for this classification problem.","35ed8aa5":"**Logistic Regression**","3fcdd443":"### Petal-Width vs Petal-Length","5a7f99d6":"**From this we can see that we have equal no. of example for different species**","6736f4f6":"**I want to pedict a species of iris-flower given value of it's features. This is a classification problem because our target is discrete variable only having 3 different values(multiple classes).**   ","12629cfc":"**SVM**","41efdcf9":"**Lets use a pairplot to visualize how different species of iris flower is scattered **","dc5d7292":"**Import the Iris.csv as pandas dataframe** ","3b3ce2fb":"**Lets see distribution of each features**","fba060cb":"**Color used**\n* setosa --> Blue\n* versicolor --> cyan\n* virginica --> magenta","a16b3883":"### Sepal-Width vs Sepal-Length","c05cb7bf":"Now, lets see some statistics about the dataframe using describe method","4b6e4255":"**Decision Tree **","c1cd36ba":"**Lets see 1st five rows of the dataframe using head method**"}}