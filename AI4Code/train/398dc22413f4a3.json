{"cell_type":{"224bf5a7":"code","be53b1cd":"code","fe8513d1":"code","0b56f563":"code","775de365":"code","8cf23808":"code","8451a130":"code","45d3738a":"code","68591fd3":"code","f212ad61":"code","c497c556":"code","9378a3b0":"code","733865f1":"code","8990cb89":"code","0e1c8b67":"code","1bbaf6b3":"markdown","b069058d":"markdown","2be2c6f7":"markdown","bbf1a40d":"markdown","e53a86f0":"markdown","4ef546e9":"markdown","a07bec9d":"markdown","4a6f9a42":"markdown","d5337a52":"markdown","961a52d7":"markdown","8f089afb":"markdown","2d49c5b9":"markdown","5213eb85":"markdown"},"source":{"224bf5a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be53b1cd":"customers = pd.read_csv('\/kaggle\/input\/ecommerce-customers\/Ecommerce Customers.csv')","fe8513d1":"customers.head()","0b56f563":"customers.isnull().sum()","775de365":"sns.set_palette(\"bone\")\nsns.set_style('whitegrid')\n\nsns.jointplot(x = 'Time on Website', y = 'Yearly Amount Spent', data = customers)\nplt.show()","8cf23808":"sns.jointplot(x = 'Time on App', y = 'Yearly Amount Spent', data = customers)\nplt.show()","8451a130":"sns.pairplot(customers)\nplt.show()","45d3738a":"sns.lmplot(x='Length of Membership', y='Yearly Amount Spent', data = customers)\nplt.show()","68591fd3":"X = customers[['Avg. Session Length', 'Time on App', 'Time on Website', 'Length of Membership']]\nY = customers['Yearly Amount Spent']\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=101)","f212ad61":"from sklearn.linear_model import LinearRegression\n\nlm = LinearRegression()\nlm.fit(X_train, Y_train)","c497c556":"predictions = lm.predict(X_test)","9378a3b0":"plt.scatter(Y_test, predictions)\nplt.xlabel('Test')\nplt.ylabel('Prediction')\nplt.show()","733865f1":"from sklearn import metrics\n\nprint('MAE:', metrics.mean_absolute_error(Y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(Y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(Y_test, predictions)))","8990cb89":"sns.histplot((Y_test-predictions), bins = 50, kde = True)\nplt.show()","0e1c8b67":"coeff = pd.DataFrame(lm.coef_, X.columns, columns=['Coeff'])\ncoeff","1bbaf6b3":"This is also confirmed and the model seems to be reasonably accurate. But what does this mean for our specific case? Should the company focus on the app or the website? Or does a completely different variable play a decisive role? For this purpose we will interpret the coefficients.","b069058d":"Next, we create our model and train it with the training data.","2be2c6f7":"A unit line would be optimal and our prediction seems to be close to this optimum. But can we also determine the quality more precisely? For a linear regression Mean Absolute Error, Mean Squared Error and Root Mean Square Error are suitable techniques of measurement.\nIn general, one can say simplified: The smaller (or closer to zero) these values are, the better the prediction is. Since the MSE is calculated with a squared deviation, a comparatively larger value is to be expected for the MSE. ","bbf1a40d":"Finally, we can make a prediction. We will predict the test data.","e53a86f0":"And a quick check to see if there are any missing values.","4ef546e9":"The coefficient for \"Length of Membership\" is the largest. Specifically, if everything else remains constant, an increase in membership of 1 results in an increase of 61.28 in \"Yearly Amount Spent\". Clearly, the company should focus on the Length of Membership to increase their annual revenues.\n\nThe question whether they should focus on the app or website is much more difficult to answer. On one hand, the coefficient for \"Time on App\" is significantly higher. On the other hand, the extremely low value for \"Time on Website\" could possibly be increased significantly with simple measures. Futhermore, the value for this coefficient is extremely low, which could indicate significant quality problems on the website. Therefore, further investigations are necessary.","a07bec9d":"With this project I want to implement machine learning practically for the first time. I will focus on a simple linear regression. The main goal is to understand the structure and the procedure of machine learning.\nLet's assume an ecommerce company sells its products in stores, on its website and in an app. The management faces the decision whether to focus on the app or the website to increase their annual revenues. How can we support this decision with data science? First, we import our packages, load the data and have a look at the structure.","4a6f9a42":"Based on the visualization we assumed that the model is good and this first impression was confirmed by the measure of errors.\n\nFinally, we look at the distribution of the residuals. Residual is the deviation of a predicted value from the actual observed value. Overall, the deviation should follow a normal distribution.","d5337a52":"With this result we can now start with the machine learning part of the project. First, we divide our dataset into training and test data. Our target variable is \"Yearly Amount Spent\".","961a52d7":"An easy way to estimate the quality of the prediction is to plot the predicted data and the test data.","8f089afb":"The \"Time on App\" seems to slightly influence the \"Yearly Amount Spent\", but a clear correlation cannot be determined. So let's examine this kind of relationship for the whole data set.","2d49c5b9":"The \"Length of Membership\" seems to correlate linearly with the \"Yearly Amount Spent\".","5213eb85":"In this project our goal is to increase the revenue of the company. Therefore, we are only interested in numerical variables.\n\nTo understand the relationships, we need to take a closer look at the data. How are \"Time on App\" and \"Time on Website\" related to the \"Yearly Amount Spent\"?"}}