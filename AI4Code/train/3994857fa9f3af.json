{"cell_type":{"9de8359c":"code","189d057f":"code","0df4c5b2":"code","023d7881":"code","15b0b1fa":"code","83978d21":"code","5ea5d59b":"code","68e56fa5":"code","144d245e":"code","c28779a3":"code","b5ab6d43":"code","ce434c51":"code","7294055b":"code","1662461c":"code","749fd08a":"code","c4e7434b":"code","92cd10df":"markdown","ec1832c8":"markdown","e8a400db":"markdown"},"source":{"9de8359c":"import numpy as np\nimport pandas as pd\nfrom collections import Counter\nfrom pandas.plotting import scatter_matrix\nimport matplotlib.pyplot as plt","189d057f":"df = pd.read_csv('..\/input\/california-housing-prices\/housing.csv')","0df4c5b2":"print(df.shape)\ndf.head(10)","023d7881":"df.describe()","15b0b1fa":"df.hist(bins=50, figsize=(20,15))","83978d21":"labels_count = Counter(list(df['ocean_proximity']))\nnames = list(labels_count.keys())\nvalues = list(labels_count.values())\nplt.bar(names, values)","5ea5d59b":"scatter_matrix(df[df.columns], figsize=(20,20))","68e56fa5":"plt.scatter(x=df[\"longitude\"], y=df[\"latitude\"], alpha=0.1)","144d245e":"cal_map =plt.scatter(x=df[\"longitude\"], y=df[\"latitude\"], alpha=0.4,\n        c=df[\"median_house_value\"], cmap=plt.get_cmap(\"jet\"))\nplt.colorbar(cal_map)","c28779a3":"cal_map = plt.scatter(x=df[\"longitude\"], y=df[\"latitude\"],  alpha=0.4,\n        s=df[\"population\"]\/300,\n        c=df[\"median_house_value\"], cmap=plt.get_cmap(\"jet\"))\nplt.colorbar(cal_map)","b5ab6d43":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer","ce434c51":"num_pipeline = Pipeline([\n    ('imputer', SimpleImputer()),\n    ('std_scaler', StandardScaler())\n])","7294055b":"num_attributes = list(df.drop(['ocean_proximity', 'median_house_value'], axis=1))\ncat_attributes = ['ocean_proximity']\n\npipe = ColumnTransformer([\n    ('numerical', num_pipeline, num_attributes),\n    ('categorical', OneHotEncoder(), cat_attributes)\n])","1662461c":"from sklearn.model_selection import train_test_split\n\nX = df.drop('median_house_value', axis=1)\ny = df['median_house_value']","749fd08a":"X_prepared = pipe.fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(\n    X_prepared, y,\n    test_size=.30,\n    random_state=1234\n)","c4e7434b":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\n\ncls = RandomForestRegressor(n_estimators=10, random_state=13)\ncls.fit(X_train, y_train)\npredictions = cls.predict(X_test)\nmse = mean_squared_error(y_test, predictions)\nrmse = np.sqrt(mse)\nprint(\"Estimators: 10\\tmax depth: None\\tMSE: {}\\tRMSE: {}\".format(mse, rmse))","92cd10df":"# Prepare data","ec1832c8":"# Model training and evaluation","e8a400db":"# Data Pipelines"}}