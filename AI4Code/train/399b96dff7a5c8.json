{"cell_type":{"a9820ba0":"code","d6bf6ee3":"code","c3665124":"code","9bbb9b40":"code","903d0827":"code","999660f0":"code","9abd3114":"code","b794d3d7":"code","ccbcd4c9":"code","7c8dcf7a":"code","71c351ba":"code","1cb830d9":"code","87751510":"code","abd71f30":"code","47f833be":"code","6b448f3a":"code","3e9e3a77":"code","5ea2d710":"code","8d5f9978":"code","b6b2a85e":"markdown","423c658a":"markdown","4742f55b":"markdown","6d9d3c85":"markdown","7a2ebaa2":"markdown","62498153":"markdown","f0ce7307":"markdown","c69127bf":"markdown","c2b8b0da":"markdown","88732c74":"markdown","03033a49":"markdown","bded8a0e":"markdown","41005eef":"markdown","64d93d51":"markdown","c72213b0":"markdown","3133f6f4":"markdown","317aaee6":"markdown","760427c1":"markdown","7344f78e":"markdown"},"source":{"a9820ba0":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing\nimport seaborn as sns\nimport pandas_profiling\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nwarnings.filterwarnings(\"ignore\")\n","d6bf6ee3":"# Popular Movies TV shows from Prime Videos Netflix version_3.csv  let's see the data in raw format\ndf1 = pd.read_csv('\/kaggle\/input\/Popular Movies TV shows from Prime Videos Netflix version_3.csv',delimiter = ',')\ndf1.head(10)","c3665124":"df1.describe()","9bbb9b40":"#separate features \nfeatures = ['ID', 'Title', 'Year', 'Rating', 'IMDb',\n       'Rotten Tomatoes', 'Genre', 'Netflix', 'Amazon Prime Video']\n\n#generate data profile\nprofile = pandas_profiling.ProfileReport(df1[features])\nprofile","903d0827":"#before we move to that we need to clean the data, remove missing values \nfeatures = ['ID', 'Title', 'Year', 'Rating', 'IMDb',\n       'Rotten Tomatoes', 'Genre', 'Netflix', 'Amazon Prime Video']\n\ntrain_data = df1[features].copy()\ntrain_data.isnull().sum()","999660f0":"train_data = train_data.drop('Rating',axis = 1)","9abd3114":"train_data = train_data.dropna()\ntrain_data","b794d3d7":"features.remove('Rating')\ntrain_data.isnull().sum()","ccbcd4c9":"\n#train_data[\"IMDb\"] = pd.to_numeric(train_data['IMDb'])\ndef convert_to_float(x):\n    imdb = x[0]\n    try:\n        return float(imdb)\n    except:\n        print('the unwanted value is:',imdb)\n        \n    return imdb\ntrain_data[\"IMDb\"] = train_data[['IMDb']].apply(convert_to_float,axis = 1)\ntrain_data","7c8dcf7a":"train_data = train_data[train_data.IMDb != 'd;}']\ntrain_data","71c351ba":"#movies\/shows annual production data\nplt.figure(figsize=(10,6))\nfig = sns.distplot(train_data['Year'],color = 'coral')\nfig.set_xlabel(\"Year\",size=15)\nfig.set_ylabel(\"Movie\/Shows Count\",size=15)\nplt.title('Movies\/TV shows in each Year',size = 20)\nplt.show()","1cb830d9":"plt.figure(figsize=(10,6))\nfig = sns.distplot(train_data[train_data['Year'] > 1980][\"Year\"],color = 'coral')\nfig.set_xlabel(\"Year\",size=15)\nfig.set_ylabel(\"Movie\/Shows Frequency\",size=15)\n#fig.set_xticklabels(fig.get_xticklabels(),rotation=45)\nplt.title('Movies\/TV shows in each Year',size = 20)\nplt.show()","87751510":"plt.figure(figsize=(10,6))\nfig = sns.distplot(train_data[\"IMDb\"],color = 'coral')\nfig.set_xlabel(\"IMDb Rating Rounded\",size=15)\nfig.set_ylabel(\"Movie\/Shows Frequency\",size=15)\nplt.title('Movies\/TV shows IMDb Rating',size = 20)\nplt.show()","abd71f30":"plt.figure(figsize=(10,6))\nfig = sns.countplot(train_data[\"Genre\"],color = 'coral')\nfig.set_xlabel(\"Genre\",size=15)\nfig.set_ylabel(\"Movie\/Shows Count\",size=15)\nfig.set_xticklabels(fig.get_xticklabels(),rotation=30)\nplt.title('Movies\/TV shows in each Genre',size = 20)\nplt.show()","47f833be":"plt.figure(figsize=(10,6))\nfig = sns.distplot(train_data[\"Rotten Tomatoes\"],color = 'coral')\nfig.set_xlabel(\"Rotten Tomatoes\",size=15)\nfig.set_ylabel(\"Movie\/Shows frequency\",size=15)\nfig.set_xticklabels(fig.get_xticklabels(),rotation=30)\nplt.title('Movies\/TV shows distribution over Rotten tomatoes',size = 20)\nplt.show()","6b448f3a":"train_data[\"Rotten Tomatoes\"] = pd.to_numeric(train_data['Rotten Tomatoes'])\ntrain_data[\"Popularity Rating\"] = (train_data[\"IMDb\"] + train_data['Rotten Tomatoes']\/10.0)\/2\ntrain_data.head()","3e9e3a77":"plt.figure(figsize=(10,6))\nfig = sns.distplot(train_data[\"Popularity Rating\"],color = 'coral')\nfig.set_xlabel(\"Popularity Rating\",size=15)\nfig.set_ylabel(\"Movie\/Shows frequency\",size=15)\nfig.set_xticklabels(fig.get_xticklabels(),rotation=30)\nplt.title('Movies\/TV shows Popularity Rating Distribution',size = 20)\nplt.show()","5ea2d710":"a=train_data['Popularity Rating'].sort_values(ascending=False).head(10)\n\ntrain_data.loc[a.index]","8d5f9978":"plt.figure(figsize=(10,6))\nfig = sns.barplot(x = 'Genre', y = 'Popularity Rating',data = train_data,color = 'lightgreen')\nfig.set_xlabel(\"Genre\",size=15)\nfig.set_ylabel(\"Movie\/Shows popularity\",size=15)\nfig.set_xticklabels(fig.get_xticklabels(),rotation=30)\nplt.title('Movies\/TV shows Popularity Rating Distribution over Genres',size = 20)\nplt.show()","b6b2a85e":"Now that looks like a gaussian distribution ","423c658a":"### There are 14 different Genres","4742f55b":"## Conclusion\nThe dataset seems pretty interesting as we can that as Rotten Tomatoes increases, the no of movies\/shows decreases. The IMDb rating shows large number movies\/shows lie in mid range, describing average performance. There are a few things to notice:   \n* The popularity Rating feature seems to give much clearer view about the popularity of any movie\/tv show than only IMDb and Rotten Tomatoes.\n* Genre-wise popularity shows a general trend towards anime, biography and action movies\/shows whereas genres like horror and thriller were less popular\n* Top movies\/shows from popularity Rating appeared as multiple data points, giving information such as same movie\/shows can be found in multiple genres, thus it's highly likely that data collection was done based on genre and then data was combined.   \n\nThanks for Reading this Notebook!! Upvote it if you like it!! Please don't forget to see my dataset [Popular Movies\/Shows](https:\/\/www.kaggle.com\/jyotmakadiya\/popular-movies-and-tv-shows-amazon-prime-netflix)","6d9d3c85":"## Visualizations\nNow our data is cleaned so we can visualize it with seaborn ","7a2ebaa2":"## Introduction\nThe dataset describes various Movies and TV shows found on Netflix and Amazon Prime Videos.The dataset can be found at [Popular Movies n TV shows dataset](https:\/\/www.kaggle.com\/jyotmakadiya\/popular-movies-and-tv-shows-amazon-prime-netflix)    \n\nIf you find this notebook helpful, please don't forget to share your thoughts and upvote!!!         \nLet's explore the content of the data and see what we can conclude","62498153":"* You can see that horror has lowest rating, now I know why many of the box office bombs are in horror genre!!\n* Anime is relatively more popular, that's neat!!","f0ce7307":"We can see some string values which are causing error when converting to float, so we get rid of them","c69127bf":"It seems that around 60% of age Rating value and 420 IMdb rating are missing, We will drop IMDb NULL rows and Age rating column doesn't seem to help in further analysis. So, we will drop age rating feature altogether","c2b8b0da":"We can see that there are a lot of values missing in Age rating variable, a few in IMDb.    \nThere are some interesting conclusions we can draw from the statistics of this data:\n* The mean year of production is around 2002,with standard deviation 21 so most of the movies in the dataset lie around 2020 and 1980s, which resembles with our general understanding as most of the movies\/TV shows found on Netflix\/Prime Videos lie in these range\n* There are 14 different genres, from which Drama seems to be the largest one having around 6000 entries\n* Around 75% of the movies are found on Amazon Prime Videos and 25% found on Netflix (can be seen from 0,1 ratio)\n* Finally We can see multiple titles on the dataset, which indicates that same movie can be found on netflix and prime videos under multile genre, which is pretty interesting","88732c74":"### Let's visualize the IMDb rating data","03033a49":"There is 1 csv file in the current version of the dataset:     \nPopular Movies TV shows from Prime Videos Netflix version_3.csv","bded8a0e":"*  The Rotten Tomatoes distribution is good approximation of gaussian distribution, although a little bit skewed","41005eef":"* Now Let's visualize that new feature","64d93d51":"* That's almost perfect Gaussian Distribution!! Now we can know that not all the movies\/shows are like Avengers Endgame\/Sherlock Holmes!! Most of them lies in the middle which resonates with our understandings!! pretty Good!!\n* Let's find out top 10 most popular movies\/shows in our dataset","c72213b0":"* That was unexpected (somewhat) but still it's cool as we know this is a good indicator of popularity!!","3133f6f4":"We can see most of the movies\/shows are after 1980s, so we can make scaled plot\n(The above plot is skewed, we scale it to get a better view)","317aaee6":" ## Feature Generation\nWe generate new feature, popularity Rating from IMDb and Rotten Tomatoes (which may not be absolutely correct but better than IMDb and Rotten Tomatoes alone)     \n* The idea is that if we know that it has higher IMDb rating and higher Rotten Tomatoes percentage, it should be popular, atleast that's what general inference concludes\n* So we use IMdb + Rotten Tomatoes\/10 to get popularity rank ( assuming equal weightage to both features)","760427c1":"## Let's do some data cleaning","7344f78e":"## Exploratory Analysis\n"}}