{"cell_type":{"476dfb4b":"code","032ad9c0":"code","dcd400b7":"code","7db99f69":"code","8fac024f":"code","6dee6963":"code","fb5dca16":"code","abac0bb2":"code","ef269797":"code","eb2f6a74":"code","a33ceefd":"code","790c00fc":"code","ba6f16bc":"code","dbbe1d5b":"markdown"},"source":{"476dfb4b":"#Import scikit-learn dataset library\nfrom sklearn import datasets","032ad9c0":"#Load dataset\nwine = datasets.load_wine()\n\nprint(wine.feature_names)","dcd400b7":"print(wine.target_names)","7db99f69":"print(wine.data[0:5])","8fac024f":"print(wine.target)","6dee6963":"print(wine.data.shape)\nprint(wine.target.shape)","fb5dca16":"# Import train_test_split function\nfrom sklearn.model_selection import train_test_split\n\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(wine.data, wine.target, test_size=0.2,random_state=1) \n","abac0bb2":"\n#Import knearest neighbors Classifier model\nfrom sklearn.neighbors import KNeighborsClassifier\n\n#Create KNN Classifier\nknn = KNeighborsClassifier(n_neighbors=5)\n\n#Train the model using the training sets\nknn.fit(X_train, y_train)\n\n#Predict the response for test dataset\ny_pred = knn.predict(X_test)\ny_pred_tarin=knn.predict(X_train)","ef269797":"#Import scikit-learn metrics module for accuracy calculation\nfrom sklearn import metrics\n# Model Accuracy, how often is the classifier correct?\nprint(\"Accuracy Test :\",metrics.accuracy_score(y_test, y_pred))\nprint(\"Accuracy Train :\",metrics.accuracy_score(y_train, y_pred_tarin))","eb2f6a74":"#Create KNN Classifier\nknn1 = KNeighborsClassifier(n_neighbors=7)\n\n#Train the model using the training sets\nknn1.fit(X_train, y_train)\n\n#Predict the response for test dataset\ny_pred1 = knn1.predict(X_test)\ny_pred_tarin1=knn1.predict(X_train)","a33ceefd":"from sklearn import metrics\n# Model Accuracy, how often is the classifier correct?\nprint(\"Accuracy Test :\",metrics.accuracy_score(y_test, y_pred1))\nprint(\"Accuracy Train :\",metrics.accuracy_score(y_train, y_pred_tarin1))","790c00fc":"k_range = range(1, 26)\nscores = []\n# We append the scores in the dictionary\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    scores.append(metrics.accuracy_score(y_test, y_pred))\n\nprint(scores)","ba6f16bc":"# import Matplotlib (scientific plotting library)\nimport matplotlib.pyplot as plt\n\n# allow plots to appear within the notebook\n%matplotlib inline\n\n#plot the relationship between K and testing accuracy\nplt.plot(k_range, scores)\nplt.xlabel('Value of K for KNN')\nplt.ylabel('Testing Accuracy')","dbbe1d5b":"2. Use the wine dataset, which is a very famous multi-class classification problem. This data is the \nresult of a chemical analysis of wines grown in the same region in Italy using three different \ncultivars. The analysis determined the quantities of 13 constituents found in each of the three \ntypes of wines. The dataset comprises 13 features ('alcohol', 'malic_acid', 'ash', 'alcalinity_of_ash', \n'magnesium', 'total_phenols', 'flavanoids', 'nonflavanoid_phenols', 'proanthocyanins', \n'color_intensity', 'hue', 'od280\/od315_of_diluted_wines', 'proline') and a target (type of cultivars). \nThis data has three types of cultivar classes: 'class_0', 'class_1', and 'class_2'. \nYour task is to build a model using k-nn classifier to classify the type of cultivar. Access the \nperformance of your model using different values of \u2018k\u2019"}}