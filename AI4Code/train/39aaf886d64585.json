{"cell_type":{"fd4ba7f3":"code","defd1d89":"code","30d9b644":"code","03dd4719":"code","2e5d3d9a":"code","0e597772":"code","2d8915bc":"code","a01469fc":"code","5cdfb2db":"code","6fd33d80":"code","469db8e6":"code","f27a765d":"code","f0478258":"code","09a0709b":"code","726b81c6":"code","14a0eae4":"code","3dace112":"code","6992535a":"code","70879285":"code","ab1fdfa0":"markdown"},"source":{"fd4ba7f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom collections import Counter\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom wordcloud import WordCloud\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n# import WordCloud\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","defd1d89":"timesData = pd.read_csv(\"\/kaggle\/input\/world-university-rankings\/timesData.csv\")\n#yillara gore universitelerin siralamasi, ogretim, arastirma, odul, geliri, ogrenci sayisi, calisan orani, uluslararasi ogrenci sayisi gibi veriler var","30d9b644":"timesData.head(10)\n#totale e gore ilk 10 universite","03dd4719":"timesData.tail(10)\n#totale e gore son 10 universite","2e5d3d9a":"# prepare data frame\ndf = timesData.iloc[:100,:]\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n# Creating trace1\ntrace1 = go.Scatter(\n                    x = df.world_rank, #dunya siralamasi\n                    y = df.citations, # atiflari\n                    mode = \"lines\",  #cizgi turu\n                    name = \"citations\",# cubugun sonunda yazacak isim\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'), \n                    text= df.university_name) #uzerine geldiginde ne gorunsun.\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode = \"lines+markers\", # noktalarla birlestirme yapar. ve cizgi kullanir\n                    name = \"teaching\", # cubugun sonunda yazacak isim\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= df.university_name)\ndata = [trace1, trace2]\nlayout = dict(title = 'Citation and Teaching vs World Rank of Top 100 Universities',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False) #ticlen kalinlik, zeroline '0' dan baslamasi\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","0e597772":"# prepare data frames\n#yillara gore ilk 100 veriyi aldik\ndf2014 = timesData[timesData.year == 2014].iloc[:100,:]\ndf2015 = timesData[timesData.year == 2015].iloc[:100,:]\ndf2016 = timesData[timesData.year == 2016].iloc[:100,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# creating trace1\ntrace1 =go.Scatter(\n                    x = df2014.world_rank,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"2014\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2014.university_name) #uzerine geldiginde ne gorunsun.\n# creating trace2\ntrace2 =go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.citations,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2015.university_name) #uzerine geldiginde ne gorunsun.\n# creating trace3\ntrace3 =go.Scatter(\n    #x, y, mode, name, marker, text mecbur on tanimli yazilmak zorunda. \n                    x = df2016.world_rank,\n                    y = df2016.citations,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2016.university_name) #uzerine geldiginde ne gorunsun.\ndata = [trace1, trace2, trace3]  # olusturdugumuz veriler listeye atadik\n\n# konumlandirmayi yapar ve isimlendirir.(layout)\nlayout = dict(title = 'Citation vs world rank of top 100 universities with 2014, 2015 and 2016 years',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Citation',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","2d8915bc":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\ndf2014","a01469fc":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.citations,\n                name = \"citations\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)), \n                text = df2014.country)\n# create trace2 \ntrace2 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.teaching,\n                name = \"teaching\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df2014.country)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\") \nfig = go.Figure(data = data, layout = layout)\niplot(fig)","5cdfb2db":"# prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\nx = df2014.university_name\n\ntrace1 = {\n  'x': x,\n  'y': df2014.citations,\n  'name': 'citation',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df2014.teaching,\n  'name': 'teaching',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': 'Top 3 universities'},\n  'barmode': 'relative',\n  'title': 'citations and teaching of top 3 universities in 2014'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6fd33d80":"# import graph objects as \"go\" and import tools\nimport plotly.graph_objs as go\nfrom plotly import tools\nimport matplotlib.pyplot as plt\n# prepare data frames\ndf2016 = timesData[timesData.year == 2016].iloc[:7,:] # ilk 7 universitenin verilerini aldik ( 2016 yilina ait)\n\ny_saving = [each for each in df2016.research]\ny_net_worth  = [float(each) for each in df2016.income]\nx_saving = [each for each in df2016.university_name]\nx_net_worth  = [each for each in df2016.university_name]\ntrace0 = go.Bar(\n                x=y_saving,\n                y=x_saving,\n                marker=dict(color='rgba(171, 50, 96, 0.6)',line=dict(color='rgba(171, 50, 96, 1.0)',width=1)),\n                name='research',\n                orientation='h',\n)\ntrace1 = go.Scatter(\n                x=y_net_worth,\n                y=x_net_worth,\n                mode='lines+markers',\n                line=dict(color='rgb(63, 72, 204)'),\n                name='income',\n)\nlayout = dict(\n                title='Citations and income',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(248, 248, 255)',\n                plot_bgcolor='rgb(248, 248, 255)',\n)\nannotations = []\ny_s = np.round(y_saving, decimals=2)\ny_nw = np.rint(y_net_worth)\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x_saving):\n    # labeling the scatter savings\n    annotations.append(dict(xref='x2', yref='y2', y=xd, x=ydn - 4,text='{:,}'.format(ydn),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=yd + 3,text=str(yd),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\n\nlayout['annotations'] = annotations\n\n# Creating two subplots\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","469db8e6":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:7,:]\npie1 = df2016.num_students\npie1_list = [float(each.replace(',', '.')) for each in df2016.num_students] \n#num_Student deki \n# str(2,4) => str(2.4) = > float(2.4) = 2.4\nlabels = df2016.university_name\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Students Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3, #pastaanin ortasinda delik acar\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Universities Number of Students rates\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Students\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","f27a765d":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size  = [float(each.replace(',', '.')) for each in df2016.num_students]\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'y': df2016.teaching,\n        'x': df2016.world_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n        },\n        \"text\" :  df2016.university_name    \n    }\n]\niplot(data)\n\n#yuvarlaklarin genisligi ogrenci sayisinin cokluk azligini verir.\n#renkler yabanci ogrenci oranini verir\n#","f0478258":"# prepare data\n#histogram cizimi\nx2011 = timesData.student_staff_ratio[timesData.year == 2011]\nx2012 = timesData.student_staff_ratio[timesData.year == 2012]\n\ntrace1 = go.Histogram(\n    x=x2011,\n    opacity=0.75,\n    name = \"2011\",\n    marker=dict(color='rgba(171, 50, 96, 0.6)'))\ntrace2 = go.Histogram(\n    x=x2012,\n    opacity=0.75,\n    name = \"2012\",\n    marker=dict(color='rgba(12, 50, 196, 0.6)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay', # ustuste koyacak ovarlay\n                   title=' students-staff ratio in 2011 and 2012',\n                   xaxis=dict(title='students-staff ratio'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","09a0709b":"# data prepararion\nx2011 = timesData.country[timesData.year == 2011]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(x2011))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","726b81c6":"# data preparation\nx2015 = timesData[timesData.year == 2015]\n\ntrace0 = go.Box(\n    y=x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)","14a0eae4":"# import figure factory\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\", \"total_score\"]] #uc sutununun tamamini aldik\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","3dace112":"# iki ayri cizimi ayni gorselde gosterebilmek icin \n# first line plot\ntrace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n)\n# second line plot\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"income\",\n    marker = dict(color = 'rgba(160, 112, 20, 0.8)'),\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='x2',\n    ),\n    title = 'Income and Teaching vs World Rank of Universities'\n\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","6992535a":"# create trace 1 that is 3d scatter\ntrace1 = go.Scatter3d(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    z=dataframe.citations,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(555,33,022)',                # set color to an array\/list of desired values      \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","70879285":"trace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","ab1fdfa0":"#yuvarlaklarin genisligi ogrenci sayisinin cokluk azligini verir.\n#renkler yabanci ogrenci oranini verir\n#"}}