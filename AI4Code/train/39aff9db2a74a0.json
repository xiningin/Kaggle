{"cell_type":{"ee89185b":"code","55f150d5":"code","560ad38b":"code","b39aa7d9":"code","55f9015d":"code","ed3f14cf":"code","fc334ef1":"code","e2d73dd0":"code","8db3bf7d":"code","bd6b4380":"code","0242a194":"code","86ee9d00":"code","b526254b":"code","aa9a70d4":"code","5149a64d":"code","d32ffa74":"code","2ffadf3b":"code","cba1efb4":"code","7aad490e":"code","04c4f0aa":"code","fba2409a":"code","3c5c795c":"code","7e363e07":"code","825f85fa":"code","dfb17885":"code","48fb9bc6":"code","94ceaed8":"code","55933e5b":"code","ba314505":"code","48ba2870":"code","ce7bacc9":"code","5f382374":"markdown","a2a574c2":"markdown"},"source":{"ee89185b":"from fastai import *\nfrom fastai.tabular import *\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","55f150d5":"train_x=pd.read_csv('..\/input\/lish-moa\/train_features.csv')\ntrain_y=pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')\n\ntest_x=pd.read_csv('..\/input\/lish-moa\/test_features.csv')","560ad38b":"print(train_x.shape)\ntrain_x.head()","b39aa7d9":"print(train_y.shape)\ntrain_y.head()","55f9015d":"for col in train_y.columns:\n  if col!='sig_id':\n    print(train_y[col].value_counts())","ed3f14cf":"print(test_x.shape)\ntest_x.head()","fc334ef1":"train_x.info()","e2d73dd0":"train_x.iloc[:,:10].info()","8db3bf7d":"test_x.info()","bd6b4380":"train_y.info()","0242a194":"print('missing values in train_x:',sum(train_x.isnull().sum()))\nprint('missing values in test_x:',sum(test_x.isnull().sum()))\nprint('missing values in train_y:',sum(train_y.isnull().sum()))","86ee9d00":"print('train:')\nprint(train_x.cp_time.value_counts())\nprint(' ')\nprint(train_x.cp_type.value_counts())\nprint(' ')\nprint(train_x.cp_dose.value_counts())\nprint('--------------------------------------')\nprint('test:')\nprint(test_x.cp_time.value_counts())\nprint(' ')\nprint(test_x.cp_type.value_counts())\nprint(' ')\nprint(test_x.cp_dose.value_counts())","b526254b":"cat=['cp_time','cp_dose','cp_type']\ncont=[x for x in train_x.columns if x not in cat and x!='sig_id']\ndepv=[x for x in train_y.columns if x!='sig_id']\nprint('categorical features:',len(cat))\nprint('continuous features:',len(cont))\nprint('dependent variables:',len(depv))","aa9a70d4":"train=train_x\nprint('train_shape:',train.shape)","5149a64d":"print(len(cat)+len(cont)+len(depv)+1)\ntrain[depv]=train_y[depv]\nprint('train_shape:',train.shape)","d32ffa74":"train.head()","2ffadf3b":"procs = [FillMissing,Categorify,Normalize]\nimport torch.nn as nn","cba1efb4":"procs = [FillMissing,Categorify,Normalize]\ndata=(TabularList.from_df(train, cont_names=cont, cat_names=cat, procs=procs)\n                .split_by_rand_pct(valid_pct=0.15,seed=42)\n                .label_from_df(cols=depv)\n                .add_test(TabularList.from_df(test_x,procs=procs, cont_names=cont, cat_names=cat))\n                .databunch())","7aad490e":"learn=tabular_learner(data,layers=[1000,1000,1000])\nlearn.loss_func = nn.BCEWithLogitsLoss()","04c4f0aa":"#learn","fba2409a":"learn.fit_one_cycle(7, max_lr=slice(1e-4),wd=0.1)","3c5c795c":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","7e363e07":"learn.fit_one_cycle(7, max_lr=slice(1e-5),wd=0.05)","825f85fa":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","dfb17885":"learn.fit_one_cycle(7, max_lr=slice(5e-6),wd=0.02)","48fb9bc6":"preds, _ = learn.get_preds(ds_type=DatasetType.Test)","94ceaed8":"v=math.pow(10,-15)\ndef const1(a):\n  for i in range(a.shape[0]):\n    for j in range(a.shape[1]):\n      if a[i][j]<v:\n        a[i][j]=v\n      elif a[i][j]>1-v:\n        a[i][j]=1-v\n  return a","55933e5b":"const1(preds)","ba314505":"sub=pd.read_csv('..\/input\/lish-moa\/sample_submission.csv')\nsub.head()","48ba2870":"sub[depv]=preds\nprint(sub.shape)\nsub.head()","ce7bacc9":"sub.to_csv('submission.csv', header=True,index=False)","5f382374":"## **Model**","a2a574c2":"There are\n>872 float dtype \n\n> 1 int64  (cp_time )\n\n> 3 object (sig_id , cp_time , cp_dose)"}}