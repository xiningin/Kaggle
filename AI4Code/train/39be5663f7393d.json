{"cell_type":{"a2e5937f":"code","edd9a3e0":"code","72aba839":"code","e2c3ccd1":"code","726856a5":"code","7c4321c3":"code","52326580":"markdown","3612c0c7":"markdown","2bccaf87":"markdown","fe73f43d":"markdown","8a448320":"markdown","4c6769eb":"markdown"},"source":{"a2e5937f":"#kutuphanelerin yuklenmesi\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","edd9a3e0":"#verinin yuklenmesi\ndf = pd.read_csv(\"..\/input\/advertising-data\/Advertising.csv\")\n\n#gereksiz degiskenlerin d\u00fcs\u00fcrulmes\ndf = df.drop(\"Unnamed: 0\" , axis = 1)\n\n#ilk 5 gozlem\ndf.head()","72aba839":"#tahminlerin hesaplanmas\u0131\ndf[[\"yhat\"]] = df.iloc[:, 0:3].apply(lambda x :  2.90 + 0.04*x[0] + 0.17*x[1] + 0.002*x[2] , axis = 1)\n\n#gercek ve tahmin aras\u0131ndaki fark\u0131n hesaplanmas\u0131\ndf[[\"difference\"]] = df.apply(lambda x : x[3] - x[4], axis = 1)\n\n#farklar\u0131n karelerinin al\u0131nmas\u0131\ndf[[\"square\"]] = df.apply(lambda x : x[5]**2, axis = 1)\n\n#mean squared error degerinin hesaplanmas\u0131\nmse1 = df.square.sum() \/ len(df)\n\n#root mean square error degerinin hesaplanmas\u0131\nrmse1 = np.sqrt(mse1)\n\n#mean absolute error degerinin hesaplanmas\u0131\nmae1 = np.abs(df.difference).sum() \/ len(df)\n\n#mse , rmse ve mae'nin birlikte gosterimi\nprint(mse1 , rmse1 , mae1)","e2c3ccd1":"#verinin yuklenmesi\ndf = pd.read_csv(\"..\/input\/advertising-data\/Advertising.csv\")\n\n#gereksiz degiskenlerin d\u00fcs\u00fcrulmes\ndf = df.drop(\"Unnamed: 0\" , axis = 1)\n\n#ilk 5 gozlem\ndf.head()","726856a5":"#tahminlerin hesaplanmas\u0131\ndf[[\"yhat\"]] = df.iloc[:, 0:3].apply(lambda x :  1.70 + 0.09*x[0] + 0.20*x[1] + 0.017*x[2] , axis = 1)\n\n#gercek ve tahmin aras\u0131ndaki fark\u0131n hesaplanmas\u0131\ndf[[\"difference\"]] = df.apply(lambda x : x[3] - x[4], axis = 1)\n\n#farklar\u0131n karelerinin al\u0131nmas\u0131\ndf[[\"square\"]] = df.apply(lambda x : x[5]**2, axis = 1)\n\n#mean squared error degerinin hesaplanmas\u0131\nmse2 = df.square.sum() \/ len(df)\n\n#root mean square error degerinin hesaplanmas\u0131\nrmse2 = np.sqrt(mse2)\n\n#mean absolute error degerinin hesaplanmas\u0131\nmae2 = np.abs(df.difference).sum() \/ len(df)\n\n#mse , rmse ve mae'nin birlikte gosterimi\nprint(mse2 , rmse2 , mae2)","7c4321c3":"#Hesaplanan olculerin birlikte gosterilmesi\nmeasure = pd.DataFrame([mse1,rmse1,mae1 ,mse2,rmse2,mae2]  , index=[\"mse1\",\"rmse1\",\"mae1\" ,\"mse2\",\"rmse2\",\"mae2\"])\n\n#olculere isim verilmese\nmeasure.columns = [\"measures\"]\n\n#olculerin gosterimi\nmeasure","52326580":"# 1. Denklem\n***b = 2.90, w1 = 0.04, w2 = 0.17, w3= 0.002***\n","3612c0c7":"![Ekran%20Resmi%202021-02-20%2022.20.16.png](attachment:Ekran%20Resmi%202021-02-20%2022.20.16.png)","2bccaf87":"![Ekran%20Resmi%202021-02-20%2022.20.00.png](attachment:Ekran%20Resmi%202021-02-20%2022.20.00.png)","fe73f43d":"# OLCULER\u0130N FORMULLER\u0130","8a448320":"![Ekran%20Resmi%202021-02-20%2022.20.29.png](attachment:Ekran%20Resmi%202021-02-20%2022.20.29.png)","4c6769eb":"# 2. Denklem\n***b = 1.70, w1 = 0.09, w2 = 0.20, w3= 0.017*** "}}