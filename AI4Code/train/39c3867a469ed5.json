{"cell_type":{"61ac50e7":"code","18ee3418":"code","d248ee5c":"code","7e40fd5a":"code","699bec03":"code","49050932":"code","a5f5bd68":"code","1a29746e":"code","d3990016":"code","44a075b2":"code","31902b89":"code","4c6b4945":"code","9173caf7":"code","1047ff7c":"code","d09eb1b2":"code","020a08d4":"code","a220d075":"markdown","3e25980d":"markdown","4f9b1c5b":"markdown","d08eb282":"markdown","dbbda6c4":"markdown","a17efc19":"markdown","7313416a":"markdown","0a8583f7":"markdown"},"source":{"61ac50e7":"import os\nimport numpy as np\nimport pandas as pd\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","18ee3418":"df = pd.read_csv('\/kaggle\/input\/poezii-in-limba-romana\/train.csv').rename(columns={'Versuri': 'versuri', 'Autor': 'autor'}).set_index('Id')\ntest = pd.read_csv('\/kaggle\/input\/poezii-in-limba-romana\/test.csv').rename(columns={'Versuri': 'versuri'}).set_index('Id')\nsubmission = pd.read_csv('\/kaggle\/input\/poezii-in-limba-romana\/sampleSubmission.csv')\n\nprint('Train: ', df.shape, '|| Test: ', test.shape, '|| Submission: ', submission.shape)\n\ndf.head()","d248ee5c":"t = df['autor'].astype('category').cat.categories\nlabels = pd.DataFrame(range(len(t)), index=t, columns=['id'])\nlabels","7e40fd5a":"def poet_to_class(series, index):\n    t = pd.DataFrame(index=series)\n    t['class'] = labels['id']\n    t.index = index\n    return t['class']\n\ndf['class'] = poet_to_class(df['autor'], df.index)\ndf['class'].value_counts()","699bec03":"def class_to_poet(pred, index):\n    t = pd.DataFrame(index=pred)\n    t['autor'] = labels.reset_index().set_index('id')['index']\n    t.index = index\n    return t['autor']\nt = class_to_poet(df['class'], df.index)\nt.value_counts()","49050932":"min_samples = df['class'].value_counts().iloc[-2]\nl = []\nfor b in labels['id']:\n    t = df[df['class'] == b]\n    if len(t)>min_samples:\n        t = t.sample(min_samples, random_state=42)\n    l.append(t)\ndf = pd.concat(l)\ndf['autor'].value_counts()","a5f5bd68":"from sklearn.feature_extraction.text import TfidfVectorizer","1a29746e":"v = TfidfVectorizer(lowercase=True, analyzer='word', max_df=0.5, max_features=5000).fit(df['versuri'])\nprint(len(v.vocabulary_))\nlist(v.vocabulary_.items())[:10]","d3990016":"from sklearn.ensemble import RandomForestClassifier","44a075b2":"X_train = v.transform(df['versuri'])\nX_train.shape","31902b89":"%%time\nclf = RandomForestClassifier(200, random_state=42).fit(X_train, df['class'])","4c6b4945":"pd.DataFrame(zip(v.vocabulary_, clf.feature_importances_)).sort_values(by=1, ascending=False).reset_index(drop=True).head(10)","9173caf7":"pred = clf.predict(v.transform(test['versuri']))\npred = pd.Series(pred)\npred.value_counts()","1047ff7c":"from sklearn.metrics import accuracy_score\n\naccuracy_score(pred, poet_to_class(submission['Autor'], submission.index))","d09eb1b2":"submission['label'] = pred\nsubmission['Autor'] = class_to_poet(pred, submission.index)\nsubmission.head()","020a08d4":"submission[['Id','Autor']].to_csv('submission.csv', index=False)","a220d075":"## Save predictions","3e25980d":"## Load data","4f9b1c5b":"## Predict","d08eb282":"## Train","dbbda6c4":"## (Optional) Balance the classes\n\nGeorge Bacovia has the least samples, 236.\nWe will use it as a magic number","a17efc19":"Let's see the most important features, in the opinion of our classifier","7313416a":"## Custom LabelEncoding","0a8583f7":"## Feature engineering"}}