{"cell_type":{"a27adbdf":"code","310c517e":"code","e7ca9f70":"code","09cb9ad4":"code","0d960a54":"code","eee939fb":"code","7111d4cb":"code","b292d78f":"code","a8e80885":"code","f37554cb":"code","3aaa602c":"code","67f0014e":"code","013c5c9e":"code","5c30fe15":"code","0db4c445":"code","1d952e4a":"markdown","7d52c39f":"markdown","081810f9":"markdown","80a33e62":"markdown","333fbf11":"markdown","bc913fb4":"markdown","fdc4bb7d":"markdown","5685eb6c":"markdown","fb2156b8":"markdown","e00ebf11":"markdown","606328cc":"markdown"},"source":{"a27adbdf":"%%bash\n\nJULIA_VERSION=\"1.5.0\"\n\nJULIA_VER=`cut -d '.' -f -2 <<< \"$JULIA_VERSION\"`\nBASE_URL=\"https:\/\/julialang-s3.julialang.org\/bin\/linux\/x64\"\nURL=\"$BASE_URL\/$JULIA_VER\/julia-$JULIA_VERSION-linux-x86_64.tar.gz\"\nwget -nv $URL -O \/tmp\/julia.tar.gz\ntar -x -f \/tmp\/julia.tar.gz -C \/usr\/local --strip-components 1\nrm \/tmp\/julia.tar.gz","310c517e":"%%bash\n\njulia -e 'using Pkg; pkg\"add DataFrames@0.21.6\"'\njulia -e 'using Pkg; pkg\"add CSV@0.7.7\"'\njulia -e 'using Pkg; pkg\"add XGBoost@1.1.1\"'","e7ca9f70":"import os\nos.environ['JULIA_NUM_THREADS'] = \"4\"","09cb9ad4":"%%time\n\n!pip install --quiet julia\nimport julia\nfrom julia.api import Julia\njulia.install()\njl = Julia(compiled_modules=False)  # cannot use precompiled packages with pyjulia on linux :-(\n%load_ext julia.magic","0d960a54":"%%julia\n\nusing Random\n\nRandom.seed!(42);","eee939fb":"%%julia\n\nusing CSV, DataFrames\n\ntrain_data = CSV.read(\"..\/input\/titanic\/train.csv\")\nhead(train_data, 10)","7111d4cb":"%%julia\n\nCSV.describe(train_data)","b292d78f":"%%julia\n\nX = select(train_data, Not(:Survived));\ny = train_data[!, :Survived];","a8e80885":"%%julia\n\nusing Statistics\n\nfunction preprocess_data(df)\n    tempdf = deepcopy(df)\n\n    select!(tempdf, Not(:PassengerId))\n    select!(tempdf, Not(:Name))\n    select!(tempdf, Not(:Ticket))\n    select!(tempdf, Not(:Cabin))\n    select!(tempdf, Not(:Embarked))\n\n    recode!(tempdf[!, :Sex], \"male\" => \"0\");\n    recode!(tempdf[!, :Sex], \"female\" => \"1\");\n    tempdf.Sex = tryparse.(Int, tempdf.Sex)\n\n    recode!(tempdf[!, :Age], missing => median(skipmissing(tempdf[:Age])));\n    tempdf.Age = Array{Float64}(tempdf.Age)\n    \n    recode!(tempdf[!, :Fare], missing => 0.0);\n    tempdf.Fare = Array{Float64}(tempdf.Fare)\n\n    return tempdf\nend","f37554cb":"%%julia\n\nX = preprocess_data(X)","3aaa602c":"%%julia\n\ntrain_data_num = Int64(floor(nrow(X) * 0.75))\n\nX_train = convert(Matrix, X[begin:train_data_num, :]);\ny_train = y[begin:train_data_num];\nX_test = convert(Matrix, X[train_data_num+1:end, :]);\ny_test = y[train_data_num+1:end];","67f0014e":"%%julia\n\nusing XGBoost\n\nnum_round = 500\nxgb = xgboost(X_train, num_round, label=y_train, eta=1, max_depth=3, objective = \"binary:logistic\")","013c5c9e":"%%julia\n\ntest_data = CSV.read(\"..\/input\/titanic\/test.csv\")\n\ntest_data = preprocess_data(test_data);\ntest_data = convert(Matrix, test_data);","5c30fe15":"%%julia\n\npredictions = XGBoost.predict(xgb, test_data)\n\npredictions[predictions .> 0.5] .= 1\npredictions[predictions .<= 0.5] .= 0\npredictions = Array{Int64}(predictions)\npredictions","0db4c445":"%%julia\n\nsubmission = CSV.read(\"..\/input\/titanic\/gender_submission.csv\")\nsubmission[2] = predictions\nCSV.write(\"submission.csv\", submission)","1d952e4a":"# Predict","7d52c39f":"# Titanic XGBoost using Julia-1.5.0\n\nThis notebook refers to \"[Julia Live on Kaggle](https:\/\/www.kaggle.com\/marketneutral\/julia-live-on-kaggle\/notebook)([@marketneutral](https:\/\/www.kaggle.com\/marketneutral))\".\n","081810f9":"# Set Random Seed","80a33e62":"# Save Submission.csv","333fbf11":"# Install Package","bc913fb4":"# Load Train Data","fdc4bb7d":"# XGBoost Training","5685eb6c":"# Set Thread Num","fb2156b8":"# Install Julia","e00ebf11":"# Split X\/y and PreProcess","606328cc":"# Install PyJulia"}}