{"cell_type":{"22f861e9":"code","76cab8fd":"code","47591d28":"code","2a615712":"code","a72efad2":"code","fc6fabef":"code","9612708e":"code","70215c6f":"code","eac5aa5b":"code","4dfa881c":"code","639a7f3b":"code","16d3555a":"code","0a7786f6":"code","c1291350":"code","445f0c2a":"code","935dc680":"code","e728b28a":"code","2c229fa3":"code","d1388c3b":"code","197ed39a":"code","777d4975":"code","955c9894":"code","b015fec8":"code","38e08655":"code","92c79bc7":"code","119133a0":"code","784ffd23":"code","d31ce754":"code","ef6ef78e":"code","f6b04235":"markdown","251ff314":"markdown","0353a461":"markdown","f133addc":"markdown","8151b807":"markdown","db70aa57":"markdown","e2e2e5c2":"markdown","15a22d19":"markdown","f81465e6":"markdown","d793100f":"markdown","8278c318":"markdown","e4ba3379":"markdown","f1b9cf93":"markdown","5cb22d6a":"markdown","98d5b0c1":"markdown","3f001e75":"markdown","177a1c7c":"markdown","5cbb1b3b":"markdown","cafaabd1":"markdown","0b37bd5b":"markdown","5ae85b75":"markdown","59a3238d":"markdown","11dd8fe3":"markdown","09a5310d":"markdown","54446c96":"markdown","fc0d7d29":"markdown","04bf04b2":"markdown","85729e6c":"markdown","1e65aeb7":"markdown","72f26d10":"markdown","d73d718e":"markdown","1f00bef3":"markdown","697038d9":"markdown","07284650":"markdown","e157956a":"markdown","06ee3d0e":"markdown","d806ca50":"markdown","67aeea04":"markdown","6c0ea565":"markdown","6de777bf":"markdown","c46a9859":"markdown","ff685c78":"markdown","247d98ab":"markdown","07ed6a8e":"markdown","7117af18":"markdown"},"source":{"22f861e9":"#Importamos librerias que vamos a utilizar y cargamos los datos limpios en un dataframe**","76cab8fd":"pip install funpymodeling","47591d28":"pip install matplotlib==3.1.3","2a615712":"import pandas as pd\nfrom funpymodeling.exploratory import freq_tbl, status, profiling_num, cat_vars, num_vars\nfrom qgrid import show_grid\nfrom pandas_profiling import ProfileReport\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom IPython.display import YouTubeVideo\nimport squarify","a72efad2":"# Cargamos los datos ya trabajados\ndata = pd.read_csv(\"..\/input\/clean-data-ufo\/clean Data UFO (10).csv\", sep=\",\")","fc6fabef":"freq_tbl(data['country'])\n# como era de esperarse, Estados Unidos tiene el 88% de los registros\n#tenemos 164 pa\u00edses","9612708e":"# vamos a tomar el a\u00f1o, mes, dia y hora a partir de la columna datetime\ndata['year'] = pd.DatetimeIndex(data['datetime']).year\ndata['month'] = pd.DatetimeIndex(data['datetime']).month\ndata['day'] = pd.DatetimeIndex(data['datetime']).day\n#data['hour'] = pd.DatetimeIndex(data['datetime']).time #este devuelve la hora y minutos\ndata['hour'] = pd.DatetimeIndex(data['datetime']).hour #este devuelve solo la hora","70215c6f":"#declaramos formato global de matplotlib\nimport matplotlib.pylab as pylab\nparams = {'legend.fontsize': 'xx-large',\n          'figure.figsize': (15, 5),\n         'axes.labelsize': 'xx-large',\n         'axes.titlesize':'xx-large',\n         'xtick.labelsize':'xx-large',\n         'ytick.labelsize':'xx-large'}\npylab.rcParams.update(params)\n\n#https:\/\/matplotlib.org\/api\/font_manager_api.html#matplotlib.font_manager.FontProperties.set_size","eac5aa5b":"#vamos a hacer divisiones cada 40 a\u00f1os para que sea legible\ndt_year_1900_1949= data.loc[(data['year'] >= 1900) & (data['year'] <= 1949)]\ndt_year_1940_1979= data.loc[(data['year'] >= 1950) & (data['year'] <= 1979)]\ndt_year_1980_2020= data.loc[(data['year'] >= 1980) & (data['year'] <= 2020)]","4dfa881c":"plt.figure(figsize=(30,10))\nsns.countplot(x=dt_year_1900_1949['year'])\nplt.title('Avistamientos por a\u00f1o 1900-1949')\nplt.xlabel('Year')\nplt.show()","639a7f3b":"plt.figure(figsize=(30,10))\nsns.countplot(x=dt_year_1940_1979['year'])\nplt.title('Avistamientos por a\u00f1o 1940-1979')\nplt.xlabel('Year')\nplt.show()","16d3555a":"plt.figure(figsize=(30,10))\nsns.countplot(x=dt_year_1980_2020['year'])\nplt.title('Avistamientos por a\u00f1o 1980-2020')\nplt.xlabel('Year')\nplt.show()","0a7786f6":"plt.figure(figsize=(10,7))\nsns.countplot(x=data['month'])\nplt.title('Avistamientos por mes')\nplt.show()","c1291350":"plt.figure(figsize=(20,7))\nsns.countplot(x=data['day'])\nplt.title('Avistamientos por d\u00eda del mes')\nplt.show()","445f0c2a":"plt.figure(figsize=(20,7))\nsns.countplot(x=data['hour'])\nplt.title('Avistamientos por hora')\nplt.show()","935dc680":"YouTubeVideo('mVZN_movUQo', width=800, height=450)","e728b28a":"data['dayofweek'] = pd.DatetimeIndex(data['datetime']).dayofweek\ndata['dayofweek'] = data['dayofweek'].astype('str')\ndata['dayofweek'] = data['dayofweek'].replace({'0': 'Lunes','1':'Martes','2':'Miercoles','3':'Jueves','4':'Viernes','5':'Sabado','6':'Domingo'}, regex=True)","2c229fa3":"plt.figure(figsize=(10,7))\nsns.countplot(x=data['dayofweek'],order=['Lunes','Martes','Miercoles','Jueves','Viernes','Sabado','Domingo'])\nplt.title('Avistamientos por d\u00eda de la semana')\nplt.show()","d1388c3b":"import plotly.graph_objs as go\nimport plotly.offline as py","197ed39a":"countries = data[\"country\"].value_counts().index #lista de paises\ncountries_ratio = data[\"country\"].value_counts().values #frecuencia\ncountries = [i.upper() for i in countries]","777d4975":"datadict = [\n        dict(\n        type='choropleth',\n        locations = countries,\n        z = countries_ratio,\n        locationmode = 'country names', #\"ISO-3\" | \"USA-states\" | \"country names\" | \"geojson-id\"\n        text = \"avistamientos\",\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"Avistamientos por paises\",\n     )\n        )\n        ]\n\nlayout = dict(\n        title = 'Avistamientos en todo el mundo',\n        geo = dict(\n            scope='world', #scope del mapa \"world\" | \"usa\" | \"europe\" | \"asia\" | \"africa\" | \"north america\" | \"south america\" \n            projection=dict( type='orthographic' ), # equirectangular | robinson | orthographic |\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n              )\n\n\nfig = go.Figure(data=datadict, layout=layout)\npy.iplot(fig)\n\n#https:\/\/plotly.com\/python\/reference\/","955c9894":"SudAmerica =  data[(data.country == \"Colombia\") | (data.country == \"Venezuela\")| (data.country == \"Argentina\")| (data.country == \"Chile\")| (data.country == \"Uruguay\")| (data.country == \"Paraguay\")| (data.country == \"Brazil\")| (data.country == \"Bolivia (Plurinational State of)\")| (data.country == \"Ecuador\")| (data.country == \"Guyana\")| (data.country == \"Peru\")| (data.country == \"Suriname\")]['country']","b015fec8":"countries_SA = SudAmerica.value_counts().index #que estados\ncountries_SA_ratio = SudAmerica.value_counts().values #cuanto aparece cada estad\ncountries_SA = [i.upper() for i in countries_SA]\n                  ","38e08655":"datadict = [\n        dict(\n        type='choropleth',\n        locations = countries_SA,  \n        z = countries_SA_ratio,  \n        locationmode = 'country names', #\"ISO-3\" | \"USA-states\" | \"country names\" | \"geojson-id\"\n        text = \"avistamientos\",\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)', #color de los limites de los paises (255 255 255 = blanco)\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"Avistamientos por paises\",\n    )\n        )\n        ]\n\nlayout = dict(\n        title = 'Avistamientos en America del sur',\n        geo = dict(\n            scope='south america', #scope del mapa \"world\" | \"usa\" | \"europe\" | \"asia\" | \"africa\" | \"north america\" | \"south america\" \n            projection=dict( type='equirectangular' ), # equirectangular | robinson | orthographic |\n            showlakes = True,\n            lakecolor = 'rgb(255, 255,255)'), #color de los lagos\n              )\n\n\nfig = go.Figure(data=datadict, layout=layout)\npy.iplot(fig)\n\n#https:\/\/plotly.com\/python\/reference\/","92c79bc7":"provinciasArgentinas = data[data.country == \"Argentina\"][\"state\"].value_counts().index\nprovinciasArgentinas_ratio = data[data.country == \"Argentina\"][\"state\"].value_counts().values","119133a0":"labels = provinciasArgentinas\nsizes = provinciasArgentinas_ratio\ncolors = ['#ff9999','#66b3ff','#99ff99','#FFF664','#FFD880','#80FFD8','#FF64D3']\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',colors=colors,pctdistance=0.85,\n        shadow=True, startangle=90)\n\n#draw internal circle\ncentre_circle = plt.Circle((0,0),0.6,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\n\n\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.show()\n\n#https:\/\/medium.com\/@kvnamipara\/a-better-visualisation-of-pie-charts-by-matplotlib-935b7667d77f","784ffd23":"#creo un nuevo dataframe solo de argentina\n#lo ordeno\n#le parametrizo el tama\u00f1o de la fila\ndata[data.country == \"Argentina\"][['datetime','state','city','duration(minutes)','shape','comments']].sort_values(by=['datetime']).style.set_properties(subset=['comments'], **{'width': '500px','height': '50px'})","d31ce754":"from PIL import Image, ImageFont\nfrom wordcloud import WordCloud\nwords = [i for i in data.comments]\n    \nmask = np.array(Image.open(\"..\/input\/ufoimages2\/alien-head-isolated-png-graphic-style-silhouette-illustration-iconic-transparent-background-element-your-design-high-105019445.jpg\"))    \n    \nwords = \" \".join(words)\n\nplt.subplots(figsize=(28,12))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=2048,\n                          height=1024,\n    mask = mask\n                          ).generate(words)\nplt.imshow(wordcloud)\nplt.axis('off')\n#plt.savefig('graph.png')\n\nplt.show()","ef6ef78e":"#filtro los datos para que el grafico tenga m\u00e1s sentido. Solo voy a mostrar las formas que tengan al menos 2000 registros\ndata_treemap = data.groupby(\"shape\").filter(lambda x: len(x) > 2000)\n\n# Prepare Data\ndf = data_treemap.groupby('shape').size().reset_index(name='counts')\nlabels = df.apply(lambda x: str(x[0]) + \"\\n (\" + str(x[1]) + \")\", axis=1)\nsizes = df['counts'].values.tolist()\ncolors = [plt.cm.Spectral(i\/float(len(labels))) for i in range(len(labels))]\n\n# Draw Plot\nplt.figure(figsize=(10,7), dpi= 80)\nsquarify.plot(sizes=sizes, label=labels, color=colors, alpha=.8)\n\n# Decorate\nplt.title('Formas de ovni m\u00e1s reportadas')\nplt.axis('off')\nplt.show()","f6b04235":"**24 registros en m\u00e1s de 100 a\u00f1os... obviamente esto es lo registrado por la NUFORC, que es de otro pais.<br>\nEstaria bueno obtener datos de algun organismo de ac\u00e1**","251ff314":"<img src=\"https:\/\/i.pinimg.com\/originals\/a5\/42\/48\/a5424852abc98df69ebd4b4e366e1b6f.gif\">","0353a461":"******************","f133addc":"# **Conclusiones**\n\n* Los cantidad de avistamientos es altamente influenciada por eventos famosos relacionados de alguna forma al fenomeno ovni. Por ejemplo en 1947 ocurrio el incidente Roswell, y los casos se triplicaron respecto del a\u00f1o anterior\n* El mes de julio es donde por lo general m\u00e1s reportes hay\n* La mayoria de avistamientos ocurren a la noche\n* Las palabras m\u00e1s utilizadas para describir el encuentro: sky, bright, object, night, light, shaped\n* Las formas de ovni varian: ovalos, luces, triangulos, esferas, discos","8151b807":"Se ve mucho palabras como (en espa\u00f1ol): luces, cielo, brillo, volador, nave, forma.","db70aa57":"Variables de los datos\n* datetime: fecha y hora del avistamiento\n* country: pa\u00eds\n* state: estado\/provincia\/region\n* city: ciudad\n* shape: forma del ovni\n* duration(minutes): duraci\u00f3n en minutos del avistamiento\n* comments: descripci\u00f3n \n* datePosted: fecha en que fue cargado el registro\n* latitude & longitude: coordenadas geogr\u00e1ficas","e2e2e5c2":"Este notebook se realiza aplicando los conocimientos aprendidos en el curso \"Ciencia de datos 360 en Python\" de la Escuela de Datos Vivos<br>\nhttps:\/\/escueladedatosvivos.ai\/courses<br>\nHay cursos muy accesibles y algunos completamente gratuitos","15a22d19":"# An\u00e1lisis inicial","f81465e6":"***********************","d793100f":"Tomaremos los datos ya limpios de UFO sightings y haremos algunas visualizaciones<br>\nEs un registro de avistamientos de OVNI llevado a cabo por National UFO Reporting Center (NUFORC)<br>\nContiene registros de avistamientos desde 1906 hasta 2014<br>\n1\u00b0 Parte: https:\/\/www.kaggle.com\/leogenzano\/ufo-sightings-1-parte-data-preparation<br>","8278c318":"This is called a neuralizer","e4ba3379":"![The kaggle logo][2]\n[2]: https:\/\/postercity.com.ar\/wp-content\/uploads\/2017\/07\/I-Want-To-Believe.jpg","f1b9cf93":"![The kaggle logo][2]\n[2]: https:\/\/lamenteesmaravillosa.com\/wp-content\/uploads\/2014\/02\/hombres-de-negro.jpg","5cb22d6a":"Una nube de palabras, en donde vemos las m\u00e1s utilizadas por quienes reportaron los avistamientos","98d5b0c1":"**************************","3f001e75":"# En provincias argentinas","177a1c7c":"# Ese video de los simpsons me hizo pensar algo. \u00bfLos ovnis aparecen m\u00e1s algun dia de la semana que otro?","5cbb1b3b":"Claramente en los d\u00edas 1 y 15 del mes aumenta la actividad. No se me ocurre por qu\u00e9 podr\u00eda ser","cafaabd1":"Esto tiene sentido, a medida que va cayendo la noche, los avistamientos son m\u00e1s comunes. <br>\nA las 21hs es cuando m\u00e1s ovnis se ven  \nA partir de las 23hs descienden los avistamientos","0b37bd5b":"# ****Avistamientos por localizaci\u00f3n****","5ae85b75":"*******************","59a3238d":"Obviamente al ser casi todos los registros de Estados Unidos, los dem\u00e1s pa\u00edses no van a quedar muy representados. ","11dd8fe3":"# ****M\u00e1s preguntas****","09a5310d":"Por: [Leonardo Genzano](https:\/\/www.linkedin.com\/in\/leonardo-genzano-1b275193\/)","54446c96":"*******************","fc0d7d29":"Consideraciones:\n* para ver el c\u00f3digo, presiona el bot\u00f3n Code que esta arriba a la derecha de cada visualizaci\u00f3n. Lo oculto para que no se haga largo el notebook\n* voy a estar utilizando algunas funciones de la libreria funpymodeling, que nos ayuda sobretodo con el analisis exploratorio y la preparaci\u00f3n de datos https:\/\/pypi.org\/project\/funpymodeling\/\n* Este notebook no fue realizado por un experto. Seguramente haya mejores maneras de afrontar las mismas problematicas. Quedo atento a cualquier comentario o sugerencia ","04bf04b2":"# En todo el mundo","85729e6c":"![The kaggle logo][1]\n[1]: https:\/\/img.europapress.es\/fotoweb\/fotonoticia_20160104180748_420.jpg","1e65aeb7":"# \u00bfHay algun mes o d\u00eda en donde los avistamientos aumenten?","72f26d10":"# \u00bfCuales son las formas de OVNI avistadas m\u00e1s comunes?","d73d718e":"# Veamos que pasa con el d\u00eda y la hora","1f00bef3":"# Avistamientos por per\u00edodos de tiempo","697038d9":"Veamos como estan distribuidos los pa\u00edses. ","07284650":"# En Sudamerica","e157956a":"Bueno en este caso el d\u00eda de la semana en que m\u00e1s registros hay es el sabado","06ee3d0e":"![The kaggle logo][1]\n[1]: https:\/\/i.pinimg.com\/originals\/e2\/6a\/04\/e26a047ca4b432efb62f63534ae9e8b9.jpg","d806ca50":"Tenemos en total 164 pa\u00edses<br>\nComo era de esperarse, Estados Unidos esta primero, con casi el 90% de los datos<br>\nEsto ocurre porque los datos estan relevados por NUFORC, que es de Estados Unidos","67aeea04":"**Entre 1940-1979**","6c0ea565":"*******************","6de777bf":"**************************","c46a9859":"**Entre 1900-1939<br>**\nComo dir\u00eda el canal de Youtube 'Te lo resumo asi nomas'     DATO DE VITAL IMPORTANCIA <br>\nAumentaron los avistamientos en los a\u00f1os:<br>\n* 1938: transmisi\u00f3n de radio de \"La guerra de los mundos\" https:\/\/es.wikipedia.org\/wiki\/La_guerra_de_los_mundos_(radio)\n* 1942: la batalla de los Angeles https:\/\/es.wikipedia.org\/wiki\/Batalla_de_Los_%C3%81ngeles_(1942)\n* 1947: Incidente Roswell https:\/\/es.wikipedia.org\/wiki\/Caso_Roswell\n* 1939-1945: 2\u00b0 guerra mundial","ff685c78":"Parece ser que julio es donde hay m\u00e1s avistamientos. Teniendo en cuenta que casi el 90% de los avistamientos son de Estados Unidos...\u00bfpodr\u00edamos decir que el dia de la independencia de USA tiene cierta implicancia?","247d98ab":"**Entre 1980-2020**<br>\nAtenci\u00f3n con como aumentaron los avistamientos segun:\n* 1994: Comienzo de una de las series pioneras en generar el famoso \"hype\", obviamente trata de ovnis: X-files \n* 2012: fin del mundo segun el calendario maya (o fin de una era..) Al final lo habian calculado mal\nOficialmente 2012 se lleva la medalla a la mayor cantidad de avistamientos","07ed6a8e":"# **THE TRUTH IS OUT THERE 2\u00b0parte**","7117af18":"# Palabras m\u00e1s usadas por quienes reportaron"}}