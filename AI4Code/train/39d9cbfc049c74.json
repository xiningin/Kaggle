{"cell_type":{"a8e870af":"code","652a05c8":"code","155da1ca":"code","d0080df3":"code","569a77ac":"code","1d8dac9f":"code","746bbd40":"code","408a3f0e":"code","e34304df":"code","2ff10607":"code","2735a5c1":"code","f2c2e03b":"code","98401b8b":"code","d072e547":"code","b2662f8e":"code","fd71528a":"code","96d0b7b6":"code","c5cd559f":"code","c83a84f0":"code","5bdac29b":"code","1307fdde":"code","371dc2d7":"code","bc5e06ba":"code","6f34114f":"code","54acab4d":"code","328cdd3d":"code","05c8f0e8":"code","fadf85f7":"code","642d6fb7":"markdown","5fd6581e":"markdown","784bcdcf":"markdown","1e74576d":"markdown","1ddee2a4":"markdown","9d8be37f":"markdown","beabaa11":"markdown","906d5353":"markdown","8c977bcd":"markdown","603a6c50":"markdown","6e3bc5ed":"markdown","012f0c58":"markdown","cce75f67":"markdown","459c5cfd":"markdown"},"source":{"a8e870af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","652a05c8":"#Import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings(action='ignore')","155da1ca":"data = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","d0080df3":"data.head()","569a77ac":"data.describe()","1d8dac9f":"data.nunique()","746bbd40":"data.isnull().sum()","408a3f0e":"data.dropna(inplace=True)","e34304df":"data.info()","2ff10607":"data.Year = data.Year.astype(int) # converting the year to int type","2735a5c1":"plt.figure(figsize=(20,10))\nsns.barplot(x='Genre',y='NA_Sales',data = data)","f2c2e03b":"plt.figure(figsize=(20,10))\nsns.barplot(x='Genre',y='EU_Sales',data = data)","98401b8b":"plt.figure(figsize=(25,5))\nsns.lineplot(x='Year',y='Global_Sales',data= data)","d072e547":"plt.figure(figsize=(20,5))\nsns.pointplot(x='Platform',y='Global_Sales',data=data)","b2662f8e":"sns.pairplot(data, kind=\"reg\",\n             x_vars=[\"NA_Sales\",\"EU_Sales\",\"JP_Sales\",\"Other_Sales\"],\n             y_vars=[\"Global_Sales\"],\n             height=4,size=5,aspect=0.9)","fd71528a":"train, test = train_test_split(data, test_size=0.2, random_state=42, shuffle=True)","96d0b7b6":"train=train.drop('Name',1)","c5cd559f":"import catboost as cat\ncat_feat = ['Platform', 'Genre', 'Publisher']\nfeatures = list(set(train.columns)-set(['Global_Sales']))\ntarget = 'Global_Sales'","c83a84f0":"model = cat.CatBoostRegressor(random_state=100,cat_features=cat_feat,verbose=0)\nmodel.fit(train[features],train[target])","5bdac29b":"y_true= pd.DataFrame(data=test[target], columns=['Global_Sales'])","1307fdde":"test_temp = test.drop(columns=[target])","371dc2d7":"y_pred = model.predict(test_temp[features])","bc5e06ba":"from sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\nrmse = sqrt(mean_squared_error(y_true, y_pred))\nprint(rmse)","6f34114f":"import pickle\nfilename = 'game_model.sav'              # saving the model","54acab4d":"pickle.dump(model, open(filename, 'wb'))","328cdd3d":"loaded_model = pickle.load(open(filename, 'rb'))","05c8f0e8":"test_temp[features].head()","fadf85f7":"loaded_model.predict(test_temp[features].head()) # predicted the global sales in millions","642d6fb7":"Building the model - CatBoost","5fd6581e":"Global Sales Yearly Stats","784bcdcf":"Let's now split the dataset ","1e74576d":"Let's check the rmse","1ddee2a4":"Let's Plot now.","9d8be37f":"Europe sales based on Genre","beabaa11":"dropping the null values","906d5353":"Woah, We are done! Let me know your feedback","8c977bcd":"North America Sales based on Genre","603a6c50":"Comparing all Region sales with that of Global","6e3bc5ed":"which platform stands out based on sales ","012f0c58":"Let's explore","cce75f67":"Predicting the global sales using Catboost","459c5cfd":"# EDA"}}