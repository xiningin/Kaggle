{"cell_type":{"c40d9801":"code","55d7986d":"code","c86be3c6":"code","e93990e6":"code","b3a443af":"code","18c34b6b":"code","dc88831b":"code","f265f56d":"code","79b32820":"code","efb013b9":"code","27b49835":"code","e89616c5":"code","15175f80":"code","f41c2687":"code","df229b0c":"code","38202724":"code","cf8ccf4d":"code","0e524ba0":"code","e5c2e897":"code","4d40bd8c":"code","1fc79d4c":"code","3b3109f4":"code","e2d4958c":"code","7fa769fb":"code","5964328d":"code","da407d3b":"code","224394ca":"markdown","63629237":"markdown","134d5ade":"markdown","78aba9a6":"markdown","8d33200f":"markdown","8c1d394b":"markdown","b83283f1":"markdown","71634bff":"markdown"},"source":{"c40d9801":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55d7986d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c86be3c6":"# Data Extraction","e93990e6":"videogames_df = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\nvideogames_df","b3a443af":"videogames_df.info()","18c34b6b":"videogames_df.describe()","dc88831b":"videogames_df.isnull().sum()","f265f56d":"videogames_df = videogames_df.dropna()","79b32820":"videogames_df.isnull().sum()","efb013b9":"videogames_df.describe()","27b49835":"videogames_df.Year = videogames_df.Year.astype(int)","e89616c5":"publisher_salesDF = videogames_df.groupby('Publisher')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales']].sum()\npublisher_salesDF","15175f80":"publisher_salesDF.max()\n","f41c2687":"publisher_salesDF.min()","df229b0c":"# Find which publisher earned the most\n\npublisher_salesDF[publisher_salesDF['Global_Sales'] == publisher_salesDF['Global_Sales'].max()]","38202724":"nintendo_salesDF = videogames_df[videogames_df['Publisher'] == 'Nintendo']\nnintendo_salesDF","cf8ccf4d":"globalSales_genre = nintendo_salesDF.groupby('Genre')[['Global_Sales']].sum()\nglobalSales_genre","0e524ba0":"genre = ['Action','Adventure','Fighting','Misc','Platform','Puzzle','Racing','Role-Playing','Shooter','Simulation','Sports','Strategy']","e5c2e897":"plt.figure(figsize=(15,10))\nsns.barplot(x = globalSales_genre['Global_Sales'], y = genre, palette='inferno')\nsns.color_palette(\"rocket\")\nplt.title(\"Nintendo Global Sales\", size = 20)\nplt.xlabel(\"Sales(In Millions)\",size = 15)\nplt.ylabel(\"Genre\", size = 15)","4d40bd8c":"names_games = videogames_df.groupby(['Name','Year','Publisher','Genre'])[['Global_Sales']].sum()\nnames_games","1fc79d4c":"names_games.max()","3b3109f4":"names_games.min()","e2d4958c":"names_games[names_games['Global_Sales'] == names_games['Global_Sales'].max()]","7fa769fb":"platform_sales = videogames_df.groupby('Platform')[['Global_Sales']].sum()\nplatform_sales","5964328d":"platforms=['2600','3DO','3DS','DC','DS','GB','GBA','GC','GEN','GG','N64','NES','NG','PC','PCFX','PS','PS2','PS3','PS4','PSP','PSV','SAT','SCD','SNES','TG16','WS','Wii','WiiU','X360','XB','XOne']","da407d3b":"#create bar chart\nplt.figure(figsize=(15,10))\nsns.barplot(x = platform_sales['Global_Sales'], y = platforms, color='#2dfdd4')\nplt.title(\"Platforms Sales\", size = 20)\nplt.xlabel(\"Sales(In Millions)\",size = 15)\nplt.ylabel(\"Platform\", size = 15)","224394ca":"# Data Cleaning","63629237":"## Which publisher had the most sales and in which genre did it sell the most?","134d5ade":"# Analysis","78aba9a6":"# Video Games Sales Analysis (Beginner)\n\n![VideoGameSales](https:\/\/github.com\/Henri-debug\/Video_Games_Sales\/blob\/master\/Imgs%20for%20README\/Capa.png?raw=true)\n","8d33200f":"# Libs","8c1d394b":"## What was the most successful game?\n","b83283f1":"## Fields\n\n- Rank - Ranking of overall sales\n- Name - The games name\n- Platform - Platform of the games release (i.e. PC,PS4, etc.)\n- Year - Year of the game's release\n- Genre - Genre of the game\n- Publisher - Publisher of the game\n- NA_Sales - Sales in North America (in millions)\n- EU_Sales - Sales in Europe (in millions)\n- JP_Sales - Sales in Japan (in millions)\n- Other_Sales - Sales in the rest of the world (in millions)\n- Global_Sales - Total worldwide sales.\n\n\n## Credits\n- [Database Link](https:\/\/www.kaggle.com\/gregorut\/videogamesales)\n- [Database Author](https:\/\/www.kaggle.com\/gregorut)\n- [License](https:\/\/github.com\/GregorUT\/vgchartzScrape\/blob\/master\/LICENSE)\n\n# Questions\n\n- Which platform sold the most?\n- Which publisher had the most sales and in which genre did it sell the most?\n- What was the most successful game?\n","71634bff":"## Which platform sold the most?"}}