{"cell_type":{"c9ccb243":"code","c3222c4f":"code","1cb7a4fe":"code","a52dc868":"code","09658862":"code","442243e9":"code","16547a1a":"code","5c2b886f":"code","f23fd8bf":"code","ebaa273f":"code","be0d6555":"code","cbdf5233":"code","759432f7":"code","bb1d275f":"code","a1bd510c":"code","fce4b2a9":"code","f5f2076d":"code","4b7e60a6":"code","31e8d04a":"code","025c4268":"code","01da0dcb":"code","b25e3986":"code","d5821de8":"code","a66c8f0b":"code","d7710602":"code","c45898b4":"code","bb7d12d6":"code","923a288f":"code","e32867bb":"markdown","6d96e43f":"markdown","369b6415":"markdown","aaac529c":"markdown","faa3dc39":"markdown","c17314f4":"markdown","3ab3754e":"markdown","d803a8c4":"markdown","6b262f90":"markdown","06ab1938":"markdown","4760967b":"markdown","de0dab23":"markdown"},"source":{"c9ccb243":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\n\nfrom collections import Counter\nimport warnings \nwarnings.filterwarnings(\"ignore\")","c3222c4f":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","1cb7a4fe":"train_df.columns","a52dc868":"train_df.head()","09658862":"train_df.describe()","442243e9":"train_df.info()","16547a1a":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output: bar plot & value count    \n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequence\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","5c2b886f":"category1 = [\"Survived\", \"Sex\", \"Pclass\", \"Embarked\", \"SibSp\", \"Parch\"]\nfor c in category1:\n    bar_plot(c)","f23fd8bf":"category2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","ebaa273f":"def hist_plot(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable], bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","be0d6555":"numericVar = [\"Fare\", \"Age\", \"PassengerId\"]\nfor c in numericVar:\n    hist_plot(c)","cbdf5233":"# Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","759432f7":"# Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","bb1d275f":"# SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","a1bd510c":"# Pclass vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","fce4b2a9":"# Embarked vs Survived\ntrain_df[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","f5f2076d":"def detectOutlier(df, features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indices\n        outlier_list_col = df[(df[c]<Q1 - outlier_step) | (df[c]>Q3 + outlier_step)].index\n        # store indices\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","4b7e60a6":"train_df.loc[detectOutlier(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","31e8d04a":"# drop outliers\ntrain_df = train_df.drop(detectOutlier(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]), axis = 0).reset_index(drop = True)","025c4268":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df], axis = 0).reset_index(drop = True)","01da0dcb":"train_df.head()","b25e3986":"train_df.columns[train_df.isnull().any()]","d5821de8":"train_df.isnull().sum()","a66c8f0b":"train_df[train_df[\"Embarked\"].isnull()]","d7710602":"train_df.boxplot(column=\"Fare\", by=\"Embarked\")\nplt.show()","c45898b4":"train_df[\"Embarked\"]=train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","bb7d12d6":"train_df[train_df[\"Fare\"].isnull()]","923a288f":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))\ntrain_df[train_df[\"Fare\"].isnull()]","e32867bb":"* float64(2): Fare and Age\n* int64(5): Pclass, SibSp, Parch, PassengerId and Survived\n* object(5): Name, Sex, Ticket, Cabin and Embarked","6d96e43f":"<a id= \"5\"><\/a><br>\n## Numerical Variable","369b6415":"<a id= \"4\"><\/a><br>\n## Categorical Variable","aaac529c":"<a id= \"8\"><\/a><br>\n# Missing Value\n\n* Find Missing Value\n* Fill Missing Value","faa3dc39":"<a id= \"7\"><\/a><br>\n# Outlier Detection","c17314f4":"<a id= \"2\"><\/a><br>\n# Variable Description\n1. PassangerId: unique id number to each passenger\n1. Survived: passenger survived(1) or died(0)\n1. Pclass: passenger class\n1. Name: name of passenger\n1. Sex: gender of passenger\n1. Age: age of passenger\n1. SibSp: nubmer of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number\n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked (C: Cherbourg, Q: Queenstown, S: Southampton)","3ab3754e":"<a id= \"1\"><\/a><br>\n# Load and Check Data","d803a8c4":"<a id= \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Survived, Sex, Pclass, Embarked, Cabine, Name, Ticket, SibSp and Parch\n* Numerical Variable: Age, PassengerId and Fare","6b262f90":"# Introduction\nThe sinking of Titanic is one of the most notorius shipwrecks in the history. In 1912, during her voyage, the Titanic sank after colliding with an icebarg, killing 1502 out of 2224 people.\n\n<font color = \"blue\">\ncontent:\n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n            ","06ab1938":"<a id= \"9\"><\/a><br>\n## Find Missing Value","4760967b":"<a id= \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1","de0dab23":"<a id= \"6\"><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n* Embarked - Survived"}}