{"cell_type":{"808ec2d7":"code","a3b9a3dd":"code","dd8dbcf1":"code","97ee0bfc":"code","c4ef32c0":"code","87d8892c":"code","dd7f9e8e":"code","7da07f62":"code","47073d81":"code","d3974462":"code","597180cc":"code","0b7a0798":"code","80792a5f":"code","00de6651":"code","e9b051f6":"code","969dd6c3":"code","3b88ec9e":"markdown","960feded":"markdown","e8b089b8":"markdown"},"source":{"808ec2d7":"# Importing libraries\n## for data\nimport numpy as np\nimport pandas as pd\n\n## for visualizations\nimport seaborn as sns\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns \n\n## for statistical tests\nimport scipy\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\n\n## for machine learning\nfrom sklearn import model_selection, preprocessing, feature_selection, ensemble, metrics, decomposition\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import linear_model\nfrom sklearn.tree import DecisionTreeClassifier\ndecision_tree_classifier = DecisionTreeClassifier()\n","a3b9a3dd":"# Importing the dataset\n\ndf = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf.head(5)","dd8dbcf1":"# Identify the data types\ndf.info()","97ee0bfc":"# Checking if any rows are missing any data.\ndf.isnull().sum()","c4ef32c0":"df.index","87d8892c":"# Clean up data\ncd = df.astype({'anaemia': 'bool', 'diabetes': 'bool', 'high_blood_pressure':'bool', 'smoking':'bool'})\ncd.head()","dd7f9e8e":"# Count of unique rows in each column\ncd.nunique()","7da07f62":"# The values in the sex field is updated from 1\/0 to Male\/Female.\ncd['sex'].replace(0, 'Female',inplace=True)\ncd['sex'].replace(1, 'Male',inplace=True)\ncd.head(5)","47073d81":"# Assess each subplot w\/ age.\nfig = make_subplots(rows=2, cols=3, start_cell=\"top-left\", subplot_titles=(\"Age\",\"Creatinine Phosphokinase\", \"Platelets\",\"Serum Creatinine\",\"Serum Sodium\",\"Time\", \"Diabetes\"))\nfig.add_trace(go.Box(y=cd['age'], x=cd['sex'],boxpoints='all', name='Age'), row=1, col=1)\nfig.add_trace(go.Box(y=cd['creatinine_phosphokinase'], x=cd['sex'],boxpoints='all', name='Creatinine Phosphokinase'), row=1, col=2)\nfig.add_trace(go.Box(y=cd['platelets'], x=cd['sex'],boxpoints='all', name='Platelets'), row=1, col=3)\nfig.add_trace(go.Box(y=cd['serum_creatinine'], x=cd['sex'],boxpoints='all', name='Serum Creatinine'), row=2, col=1)\nfig.add_trace(go.Box(y=cd['serum_sodium'], x=cd['sex'], boxpoints='all',name='Serum Sodium'), row=2, col=2)\nfig.add_trace(go.Box(y=cd['time'], x=cd['sex'], boxpoints='all', name='Time'), row=2, col=3) \nfig.update_layout(height=1400, width=1000,showlegend=False)\nfig.show()","d3974462":"corr = cd.corr() \ncorr_target = abs(cor[\"DEATH_EVENT\"])\nrelevant_features = corr_target[corr_target>0.1]\nrelevant_features","597180cc":"plt.rcParams['figure.figsize'] = (20.0, 10.0)\nsns.set(font_scale=2)\nax = sns.heatmap(corr, annot=True, fmt='.4f', linewidths=.5, \n                 annot_kws={'size': 15})","0b7a0798":"ds = cd['high_blood_pressure'].value_counts().reset_index()\nds.columns = ['high_blood_pressure', 'count']\nfig = px.bar(ds, x='high_blood_pressure', y=\"count\", title='Count of people with High-blood pressure', width=400)\nfig.show()\n","80792a5f":"# Plot showing serum_sodium correlation with age.\nplt.scatter(cd.age, cd.serum_sodium\n, s=10 ) \nplt.title(\"Ages compared to Serum Sodium\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Serum Sodium\")\n","00de6651":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['age'],\n    xbins=dict( \n        start=20,\n        end=95,\n        size=2\n    ), \n    opacity=1\n))\n\nfig.update_layout(\n    title_text='AGE DISTRIBUTION',\n    xaxis_title_text='AGE',\n    yaxis_title_text='COUNT', \n    bargap=0.10,\n    xaxis =  {'showgrid': True },\n    yaxis = {'showgrid': True },\n    template = 'plotly'\n)\n\nfig.show()","e9b051f6":"#Correlation matrix \ncorr = cd.corr()\ncorr","969dd6c3":"bp = cd[['serum_creatinine', 'DEATH_EVENT']].boxplot(by='DEATH_EVENT', figsize=(10,6))\nbp.set_ylabel('serum_creatinine')","3b88ec9e":"# Analysis\n* The number of subjects in this study are between the ages of 40 and 95 (with the majority between 51 and 70). People over the age of 65 are more likely to resule in heart failure. \n* Creatinine Phosphokinase: Elevated CPK most often means there has been injury or stress to muscle tissue, the heart, or the brain The normal values for CPK is usually 10 to 120 mcg\/L. Usually CPK tests are used to detect heart attacks. The median for men are 249 and for women its 250. Both are elevated. \n* Platelets: Normal values are from 150k to 450k. Platelets for both men and women are within normal range.\n* Serum Creatinine: The kidneys are responsible for keeping the level of creatinine in the blood within a normal range. Normal values for men are 0.7 to 1.2 micromoles per liter, meanwhile normal values for women are 0.5 to 1.0 micromoles per liter. The median in the chart for men 1.1, and for women 1. Both are within normal range, though there were more men that exceeded the elevated levels. \n* Serum Sodium: Normal values are between 135 to 145 milliequivalents per liter. The median in the dataset for both men and women is 137, which is within normal range.\n\nKey factors that stand out:\n-age >65\n-elevated CPK (gender not playing a role)\n-serum creatine are within normal range, but the males are elevated on the high side. ","960feded":"* There is no missing data in this dataset.\n* This meas that none of the rows have any null or NaN values, however there are boolean values (1, 0) that could be instead changed to True\/False.","e8b089b8":"The following fields are boolean and changed from 1\/0 to True\/False.\n* anaemia\n* diabetes\n* high_blood_pressure\n* smoking\n"}}