{"cell_type":{"0d6b975e":"code","3fdbbc43":"code","0c1e1d9c":"code","5be023bc":"code","d7310d34":"code","e7b7d68f":"code","4900791f":"code","e87403a8":"code","3275c0ea":"code","78ae0eee":"code","ca9e76d5":"code","d2e0ce6b":"code","9089c47d":"code","013eb5a0":"code","21c4aed3":"code","98d3824a":"code","29c4fcdc":"code","6125381c":"code","e587983b":"code","50ed0cfe":"code","217a076d":"code","1f03a626":"code","a5a6d885":"code","ebb9e562":"code","db6f5b3d":"code","cd921ab3":"code","225a347f":"code","88a27a38":"code","46cb64ec":"code","4594673c":"code","ac0bd04b":"markdown","b5a90272":"markdown","9c502f7b":"markdown","1d3930ef":"markdown","8c3942d6":"markdown"},"source":{"0d6b975e":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nimport matplotlib\n%pylab inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","3fdbbc43":"dataset_x_train = pd.read_csv('..\/input\/used-car-price-dataset-competition-format\/X_train.csv')\ndataset_y_train = pd.read_csv('..\/input\/used-car-price-dataset-competition-format\/y_train.csv')","0c1e1d9c":"dataset_x_train.shape","5be023bc":"dataset_y_train.shape","d7310d34":"dataset_x_train.head()","e7b7d68f":"dataset_y_train.head()","4900791f":"#union of data\njoin = (dataset_x_train, dataset_y_train['price'])\ndf = pd.concat(join, axis = True)\ndf.head()","e87403a8":"#indexing car ID\ndf = df.set_index('carID')\ndf.head()","3275c0ea":"df.describe()","78ae0eee":"df.info()","ca9e76d5":"#heatmap correlation\nplt.figure(figsize = (8,6))\nsns.heatmap(df.corr(), annot = True, cmap = 'viridis')\nplt.title(\"Pearson Correlation\")\nplt.show()","d2e0ce6b":"#visualize brand of car\nplt.figure(figsize = (8,6))\nsns.countplot(df['brand'])\nplt.title(\"Brand of Car\")\nplt.xlabel(\"Brand\")\nplt.show()","9089c47d":"#visualize brand of car ~ price\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'brand', y = 'price', palette = 'Set1')\nplt.title(\"Brand of Car ~ Price\")\nplt.xlabel(\"Brand\")\nplt.ylabel(\"Price\")\nplt.show()","013eb5a0":"#visualize transmission of car\nplt.figure(figsize = (8,6))\nsns.countplot(df['transmission'], palette = 'Set2')\nplt.title(\"Transmission of Car\")\nplt.xlabel(\"Transmission\")\nplt.show()","21c4aed3":"#visualize transmission of car ~ price\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'transmission', y = 'price')\nplt.title(\"Transmission of Car ~ Price\")\nplt.xlabel(\"Transmission\")\nplt.ylabel(\"Price\")\nplt.show()","98d3824a":"#visualize fuel type of car\nplt.figure(figsize = (8,6))\nsns.countplot(df['fuelType'], palette = 'Set1')\nplt.title(\"Fuel Type of Car\")\nplt.xlabel(\"Fuel Type\")\nplt.show()","29c4fcdc":"#visualize fuel type of car ~ price\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'fuelType', y = 'price', palette = 'Set2')\nplt.title(\"Fuel Type of Car ~ Price\")\nplt.xlabel(\"Fuel Type\")\nplt.ylabel(\"Price\")\nplt.show()","6125381c":"#group brand of car & transmission\nbrand_transmission = df.groupby(['brand', 'transmission']).size().reset_index(name = 'Count')\n\n#visualize brand of car & transmission\nplt.figure(figsize = (8,6))\nsns.barplot(data = brand_transmission, x = 'brand', y = 'Count', hue = 'transmission')\nplt.title(\"Brand of Car ~ Transmission of Car\")\nplt.xlabel(\"Brand of Car\")\nplt.show()","e587983b":"#group brand of car & fuel type\nbrand_fuel= df.groupby(['brand', 'fuelType']).size().reset_index(name = 'Count')\n\n#visualize brand of car & fuel type\nplt.figure(figsize = (8,6))\nsns.barplot(data = brand_fuel, x = 'brand', y = 'Count', hue = 'fuelType', palette = 'Set1')\nplt.title(\"Brand of Car ~ Fuel Type of Car\")\nplt.xlabel(\"Brand of Car\")\nplt.show()","50ed0cfe":"#visualize histogram of each attribute\ndf.hist(figsize = (13,10), color = 'chocolate')\nplt.show()","217a076d":"#handling categorical data\ndf = pd.get_dummies(df, drop_first = True)\ndf.head()","1f03a626":"#split data \nX = df.drop('price', axis = 1)\ny = df['price']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","a5a6d885":"#build model\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","ebb9e562":"#prediction\ny_pred = lr.predict(X_test)\nprint(y_pred)","db6f5b3d":"#check MAE, MSE & RMSE\nprint('Mean Absolute Error : ', metrics.mean_absolute_error(y_test, y_pred).round(2))\nprint('Mean Squared Error : ', metrics.mean_squared_error(y_test, y_pred).round(2))\nprint('Root Mean Squared Error : ', np.sqrt(metrics.mean_absolute_error(y_test, y_pred).round(2)))","cd921ab3":"#visualize model\nx = y_test\ny = y_pred\n\nplt.figure(figsize = (8,6))\nplt.title(\"Linear Regression Model\")\nplt.plot(x, y, 'o', color = 'g')\n\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m * x + b, color = 'crimson')","225a347f":"#distribution\nplt.figure(figsize = (8,6))\nsns.distplot(df['price'], color = 'darkblue')\nplt.title(\"Distribution of Price\")\nplt.show()","88a27a38":"#transform distribution to normal distribution\nfigure(figsize = (10,6))\nsubplot(1,2,1)\nhist(df['price'] * 1e-6, 20, color = 'r');\nxlabel(\"Price\")\nsubplot(1, 2, 2)\nhist(log10(df['price']), 20);\nxlabel(\"log10(Price)\")","46cb64ec":"#defining feature\ncoef = pd.Series(lr.coef_, index = X.columns)\n\nimp_coef = pd.concat([coef.sort_values().head(10),\n                     coef.sort_values().tail(10)])","4594673c":"#visualize feature\nplt.figure(figsize = (10,6))\nimp_coef.plot(kind = 'barh', color = 'indigo')\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","ac0bd04b":"# Linear Regression Model","b5a90272":"# Data Extraction","9c502f7b":"# Check Feature Importance","1d3930ef":"# Used Car Pricing Prediction","8c3942d6":"# Visualization"}}