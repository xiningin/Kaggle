{"cell_type":{"758c2c2b":"code","bad9dd75":"code","e591906d":"code","d35cf527":"code","63e07886":"code","bb50f49c":"code","a7967445":"code","4512f395":"code","bba5cb5f":"code","010fcfb4":"code","5af12205":"code","2c319e29":"code","4647327a":"code","3bc05b7f":"code","d1b8dfdc":"code","5ddbc4d1":"code","9237b2b2":"code","8b3baac5":"code","cf43ff67":"code","a7a1e22f":"code","73543fc1":"code","0ff31f6f":"code","b48fa488":"code","82e58bbf":"code","d8557cb4":"code","e64a5b7e":"code","e894ea5a":"code","867541a2":"code","637de016":"code","a5ce9652":"code","5e7a7aae":"code","e39b54cd":"code","29362cbd":"markdown"},"source":{"758c2c2b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bad9dd75":"covid=pd.read_csv('..\/input\/covidtimeseries\/timeseries.csv')","e591906d":"covid.head(20)","d35cf527":"covid['New_cases']=[x.iloc[-1]-x.iloc[0] for x in covid['Confirmed'].rolling(2) if len(x)>0]","63e07886":"covid.shape","bb50f49c":"covid.columns","a7967445":"covid['No History'].isna().sum()","4512f395":"covid['No History']=covid['No History'].fillna(0)","bba5cb5f":"covid=covid.fillna(0)","010fcfb4":"covid.dtypes","5af12205":"import matplotlib.pyplot as plt\nfrom sklearn import linear_model, metrics, model_selection","2c319e29":"covid['year'] = pd.DatetimeIndex(covid['Date']).year","4647327a":"covid['date2020'] = covid.loc[covid['year']==2020,'Date']","3bc05b7f":"covid['date2021']=covid.loc[covid['year']==2021,'Date']","d1b8dfdc":"covid['date2021']","5ddbc4d1":"covid['date2021']=covid['date2021'].fillna(0)","9237b2b2":"covid['date2021']","8b3baac5":"covid['date2020'] ","cf43ff67":"covid['date2020'] = covid['date2020'].fillna(0)","a7a1e22f":"covid['month2020']=pd.DatetimeIndex(covid['date2020']).month","73543fc1":"covid['month2021']=pd.DatetimeIndex(covid['date2021']).month","0ff31f6f":"covid['cases2020']=covid.loc[covid['year']==2020,'New_cases']","b48fa488":"covid['cases2021']=covid.loc[covid['year']==2021,'New_cases']","82e58bbf":"covid['cases2020']=covid['cases2020'].fillna(0)","d8557cb4":"covid['cases2021']=covid['cases2021'].fillna(0)","e64a5b7e":"covid['cases2020']=covid['cases2020'].astype('int64')","e894ea5a":"covid['cases2021']=covid['cases2021'].astype('int64')","867541a2":"covid.plot.scatter(x=\"month2020\",y=\"cases2020\")","637de016":"import plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot\n\ninit_notebook_mode(connected=True)","a5ce9652":"fig1 = px.scatter(covid,x=\"month2020\",y=\"cases2020\")\nfig1.show()","5e7a7aae":"fig2 = px.scatter(covid, x=\"month2021\", y=\"cases2021\")\nfig2.show()\n","e39b54cd":"figure = plt.figure(figsize=(16, 7))\nplt.hist([covid['cases2021'], covid['cases2020']], \n         stacked=True, bins = 50, label = ['2021','2020'])\nplt.xlabel('Cases')\nplt.ylabel('days')\nplt.legend()","29362cbd":"Analyse the hike of cases on 2020 and 2021"}}