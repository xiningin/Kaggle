{"cell_type":{"b0a32fc0":"code","02ce4a1e":"code","9377d468":"code","3bb35ba9":"code","2d56a0f3":"code","eafb6cab":"code","ace69342":"code","5c562dfb":"code","4bf922ff":"code","e88a44ee":"code","045a5c59":"code","3a9e6b50":"code","e90a993e":"code","7ef2fca2":"code","390bf6ef":"code","fcc60830":"code","66254040":"code","a6838460":"code","c72eaccf":"code","d8a6da7b":"code","58768dd7":"code","89cc768e":"code","6cb5d64a":"code","b2e71b6a":"code","4ab007e7":"code","459c6bb8":"code","116cbf17":"code","86f8db03":"code","b5e82d56":"code","e15edee4":"code","cc75c91b":"code","b1b84d92":"code","83954256":"code","e4731960":"code","3af470ad":"code","1aa13cef":"code","3b683b46":"code","806a9e6d":"code","f8250f2e":"code","34fcf16a":"code","fb38e928":"code","98e1d099":"code","7bc2074c":"code","39dab790":"code","07112b73":"code","c3d433f1":"code","6fd2baa3":"code","4ad20d9a":"code","5ed216e4":"code","8569d838":"code","e05ac132":"code","b9b45e95":"code","183baeaf":"code","a6aa5111":"code","c0cff29d":"code","a23ff470":"markdown"},"source":{"b0a32fc0":"#importing the basic library\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pandas_profiling","02ce4a1e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9377d468":"# reading the CSV file to python\n\nhotel = pd.read_csv(\"..\/input\/hotel-booking-demand\/hotel_bookings.csv\")","3bb35ba9":"hotel","2d56a0f3":"# checking the summary statistics of data\nhotel.describe()","eafb6cab":"#check the top 5 row of dataset\nhotel.head()","ace69342":"#checking the bottom 5 row of dataset\nhotel.tail()","5c562dfb":"#checking the data information\nhotel.info()","4bf922ff":"#calculating the missing value in each column\nhotel.isnull().sum()","e88a44ee":"#commpany column in dataset has maximum no of null values\n# so we remove the column  \nhotel= hotel.drop(['company'],axis=1)","045a5c59":"#removing all the row having missing value\nhotel= hotel.dropna(axis=0)","3a9e6b50":"hotel.info()","e90a993e":"# again checking the missing value \nhotel.isnull().sum()","7ef2fca2":"#checking the unique value of hotel\nhotel['hotel'].unique()","390bf6ef":"#checking the data type for all feature in dataset  \nhotel.info()","fcc60830":"#converting the required object type feature to categorical\ncategorical_features = ['hotel','is_canceled','arrival_date_week_number','meal','country','market_segment',\n                        'distribution_channel','is_repeated_guest','reserved_room_type','assigned_room_type',\n                        'deposit_type','agent','customer_type','reservation_status','arrival_date_month']","66254040":"hotel[categorical_features]=hotel[categorical_features].astype('category')","a6838460":"# checking the converted data type\nhotel.info()","c72eaccf":"\nhotel['meal'].unique()","d8a6da7b":"# seperating the dataset into features and target variables\ny=hotel['is_canceled']","58768dd7":"y","89cc768e":"X = hotel.drop(['is_canceled','reservation_status_date'],axis=1)","6cb5d64a":"X","b2e71b6a":"#converting the categorical data into dummy variable  \nX_dum=pd.get_dummies(X,prefix_sep='-',drop_first=True)","4ab007e7":"X_dum","459c6bb8":"#Splitting the data into train and test\nfrom sklearn.model_selection import train_test_split","116cbf17":"X_train,X_test,y_train,y_test= train_test_split(X_dum,y, test_size=.25,random_state=40)","86f8db03":"X_train","b5e82d56":"# preparing a logistic regression model\nfrom sklearn.linear_model import LogisticRegression","e15edee4":"logistic=LogisticRegression()","cc75c91b":"logistic.fit(X_train,y_train)","b1b84d92":"#predicting the test data\ny_pred= logistic.predict(X_test)","83954256":"# calculating the  accuracy, precision,recall and f1-score for logistic regression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report","e4731960":"accuracy_score(y_test,y_pred)","3af470ad":"classification_report(y_test,y_pred)","1aa13cef":"#calculating the ROC and AUC  for the logistics regression\nfrom sklearn.metrics import roc_curve,roc_auc_score","3b683b46":"roc_curve(y_test,y_pred)","806a9e6d":"roc_auc_score(y_test,y_pred)","f8250f2e":"#now  we will make a model of random forest and  gradient boosting \nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier","34fcf16a":"rand=RandomForestClassifier(n_jobs=10, random_state=40)\n","fb38e928":"gb=GradientBoostingClassifier(random_state=50)","98e1d099":"rand.fit(X_train,y_train)\n","7bc2074c":"gb.fit(X_train,y_train)","39dab790":"# predicting the test sample for randomforest and gradient boosting \nrand_pred=rand.predict(X_test)","07112b73":"gb_pred=gb.predict(X_test)","c3d433f1":"# checking accuracy, precision,recall and f1-score for data\naccuracy_score(y_test,rand_pred)","6fd2baa3":"accuracy_score(y_test,gb_pred)","4ad20d9a":"classification_report(y_test,rand_pred)","5ed216e4":"classification_report(y_test,gb_pred)","8569d838":"roc_auc_score(y_test,rand_pred)","e05ac132":"roc_auc_score(y_test,gb_pred)","b9b45e95":"#creating  confusion matrix for logistic reression,random forest and gradient boosting\nfrom sklearn.metrics import confusion_matrix","183baeaf":"confusion_matrix(y_test,y_pred)","a6aa5111":"confusion_matrix(y_test,rand_pred)","c0cff29d":"confusion_matrix(y_test,gb_pred)","a23ff470":"from all three algorithm we will found that random forest and gradient boosting gives maximum accuracy"}}