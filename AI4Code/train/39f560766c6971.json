{"cell_type":{"ac161bc6":"code","92761325":"code","25da7533":"code","2f44f921":"code","a9bd3a37":"code","4b36aeb1":"code","ffbf7d74":"code","accd8487":"code","926d8221":"code","904d539b":"code","d72196d3":"code","23fc5691":"code","43ca8c7c":"code","65d0a69a":"code","b27b0eb8":"code","65d1005d":"code","aaa504b0":"code","f6508772":"code","312e29c8":"code","166f0eb3":"code","4bed002c":"code","1d0cd027":"code","d1431392":"code","5859f018":"code","19d19625":"code","cea6dcb9":"code","340f09bb":"code","2c490c1c":"markdown","f886c58d":"markdown","393ced08":"markdown","eb72931d":"markdown","5a70a20c":"markdown"},"source":{"ac161bc6":"import numpy as np\nimport pandas as pd","92761325":"!pip install \"torch==1.4\" \"torchvision==0.5.0\"\nimport torch\ntorch.__version__","25da7533":"from fastai.vision import *\nfrom fastai.metrics import error_rate","2f44f921":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","a9bd3a37":"from shutil import copyfile\ncopyfile(src = \"..\/input\/cutmix\/shared\/0_image_data_augmentation\/exp\/nb_new_data_augmentation.py\" , \n         dst = \"..\/working\/nb_new_data_augmentation.py\")","4b36aeb1":"from nb_new_data_augmentation import *","ffbf7d74":"path = Path('..\/input\/shopee-product-detection-student')","accd8487":"# change filename and category name\n# chose 1000 data for each category\n\nN = 1000 #number of data in each category\ndf = pd.read_csv('..\/input\/shopee-product-detection-student\/train.csv')\n\ndf = df.groupby('category').apply(lambda x: x[:N]).reset_index(drop=True) # choose first till N(th) image data from df\ndf['filename'] = 'train\/' + df['category'].apply(lambda x: '{0:0>2}'.format(x)).apply(str)+'\/'+df['filename'] # change file name column to the filepath","926d8221":"# change label name\ndf['category'] = df['category'].replace({0: '00 Dress',1: '01 Sarung',2: '02 Shirt(Top)',3: '03 Long Sleeves\/Hoodie',4: '04 Jeans(Female)',5: '05 Ring',6: '06 Ear Rings',7: '07 Cap',8: '08 Purse\/Wallet',9: '09 Bags',10: '10 Phone Cover',11: '11 Phone',12: '12 Clock',13: '13 Plastic Baby Bottles',14: '14 Rice Cooker',15: '15 Coffee',16: '16 Shoe',17: '17 High Heels',18: '18 Aircon',19: '19 Pendrive',20: '20 Chair',21: '21 Racket',22: '22 Helmet',23: '23 Gloves',24: '24 Watch',25: '25 Belt',26: '26 Headphones\/Earpiece',27: '27 Toy Car',28: '28 Suit\/Jacket (Male)',29: '29 Tuxedo Pants (Male)',30: '30 Sport Shoes',31: '31 Biscuit\/ Junk Food',32: '32 Face Mask',33: '33 Sanitizer\/Antiseptic',34: '34 Skin Care(?)',35: '35 Perfume\/Cologne',36: '36 Cleaning Supplies',37: '37 Laptop',38: '38 Bowls',39: '39 Vases?',40: '40 Shower Stuff(Showerhead)',41: '41 Sofa',})\ndf","904d539b":"# Loading data using ImageDataBunch.from_df\nnp.random.seed(0)\ndata = ImageDataBunch.from_df(path, df, folder='\/train\/train',valid_pct=0.2, # add train data and split 20% to valid\n                              test='test\/test\/test', #add train data\n                              ds_tfms=get_transforms(), # apply transorm by default\n                              size=224, bs=64 # change size to 224 and batch size to 64\n                              ).normalize(imagenet_stats) # normalize data","d72196d3":"# checking data\ndata.show_batch(rows=3, figsize=(10, 5))","23fc5691":"# using model resnet50 and applying cutmix in the image\nlearn = cnn_learner(data, models.resnet50, \n                    metrics=[error_rate, accuracy]\n                   ).cutmix().show_multi_img_tfms()","43ca8c7c":"learn.model_dir = '\/kaggle\/working\/'","65d0a69a":"# to find a good learning rate\nlearn.lr_find()\nlearn.recorder.plot(suggestion=True)","b27b0eb8":"# fit one cycle, set max learning rate\nlearn.fit_one_cycle(8, max_lr=slice(2e-3))","65d1005d":"# unfreeze\nlearn.unfreeze() ","aaa504b0":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","f6508772":"# fit one cycle again, set max learning rate\nlearn.fit_one_cycle(8, max_lr=slice(1e-5 , 4e-4))","312e29c8":"learn.recorder.plot_losses()","166f0eb3":"interp = ClassificationInterpretation.from_learner(learn)","4bed002c":"# the most confuse data\ninterp.most_confused(min_val=40)","1d0cd027":"# the most confuse matrix\ninterp.plot_confusion_matrix(figsize=(10,10), dpi=60)","d1431392":"# Predict Using TTA\npreds, y = learn.TTA(ds_type=DatasetType.Test)","5859f018":"# make category column for submission\ncategory = [data.classes[int(x)][:2] for x in np.argmax(preds, 1)]","19d19625":"# make filename column for submission\nfilename = []\nnum = len(learn.data.test_ds)\nfor i in range(num):\n    filename.append(str(learn.data.test_ds.items[i]).split('\/')[-1])","cea6dcb9":"# make submission's dataframe\nsubmit = pd.DataFrame({'filename':filename,'category':category}) \n#the test folder have extra image data, so drop it\ntest_csv = pd.read_csv('..\/input\/shopee-product-detection-student\/test.csv')\nsubmit = submit[submit['filename'].isin(test_csv['filename'])]\nsubmit","340f09bb":"submit.to_csv('submission.csv', header=True, index=False)","2c490c1c":"# Train","f886c58d":"# Look into training result","393ced08":"# Predict Using TTA","eb72931d":"I never learn machine learning, this is the first time trying. Feel free to comment on the codes.\nI also have tried progress resizing, but not enough time to train.\nSome code might be wrong because I use colab to run.\n\nSo, let's start!\n\n# Importing Library ","5a70a20c":"# Load data \nI have no time to clean the data so if you clean it it probably will be better a lot"}}