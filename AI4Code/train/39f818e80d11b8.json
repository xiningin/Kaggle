{"cell_type":{"15d8ed81":"code","6df49720":"code","ee45f90d":"code","6c79154e":"code","ec99e09a":"code","f6e1efc6":"code","78473352":"code","bca9edef":"code","e515098f":"code","c21abca7":"code","2c89742e":"code","2790fcba":"code","b1309cf6":"code","55995921":"code","067a96a9":"code","2f7112bf":"code","68c92bf2":"code","05b817b7":"code","785c034f":"code","67aa876c":"markdown","ef5f7e60":"markdown","c6622ac8":"markdown","25584649":"markdown"},"source":{"15d8ed81":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6df49720":"mdb = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')\nprint(mdb.head())","ee45f90d":"print(mdb.info())","6c79154e":"print(mdb.describe())","ec99e09a":"mdb.isna().sum()","f6e1efc6":"condn = (mdb['Prime Video'] == 1)\nap = mdb[condn].drop(['ID', 'Title', 'Directors','Hulu',  'Prime Video',  'Disney+', 'Netflix', 'Type', 'Rotten Tomatoes'], axis = 1)\nprint(ap.head())","78473352":"print(ap.info())\nprint(ap.describe())","bca9edef":"import matplotlib.pyplot as plt\nimport seaborn as sns","e515098f":"condn = mdb['Netflix'] == 1\nN = mdb[condn].drop(['ID', 'Title', 'Directors','Hulu',  'Prime Video',  'Disney+', 'Netflix', 'Type', 'Rotten Tomatoes'], axis = 1)\nprint(N.head())\n","c21abca7":"###N['Rotten Tomatoes'] = N['Rotten Tomatoes'].str.replace('%', '')\n###N['Rotten Tomatoes'] = N['Rotten Tomatoes'].astype(float)###\n","2c89742e":"print(N.info())","2790fcba":"N['Year'] = N['Year'].astype('category')","b1309cf6":"print(N.head())\nprint(N.describe())","55995921":"sns.set_style('whitegrid')\nsns.set_context(\"paper\")\nsns.catplot(x = 'Year', data = N, kind = 'count')\nplt.xticks(rotation = 90)\nplt.show()","067a96a9":"sns.distplot(N[\"Runtime\"], hist = True)\nplt.show()","2f7112bf":"sns.catplot(x = 'Age', data = N, kind = \"count\", order = [\"7+\", \"13+\", \"16+\", \"18+\", \"all\"])\nplt.show()","68c92bf2":"sns.relplot(x= \"Runtime\", y = \"IMDb\", data = N, kind = \"scatter\", marker = 'o', col = \"Age\", col_order = [\"7+\", \"13+\", \"16+\", \"18+\", \"all\"])\nplt.show()","05b817b7":"sns.regplot(x = \"IMDb\", y = \"Rotten Tomatoes\", data = N)\nplt.show()","785c034f":"g = list(N.Genres)\ns = set()\nfor x in g:\n    if type(x) == 'str':\n        p = x.split(',')\n        s.add(set(p))\nprint(s)","67aa876c":"# Netflix's Dataset Analysis\n* 3560 MOvies out of 16744 on NX\n* HAve to check Year wise\n* Genre, LAnguage wise.\n* age group\n* IMDb and rotten tomatoes wise\n* Runtime - Multivariate Analysis\n* Based on Country of Production too.","ef5f7e60":"* Hereafter, Rotten Tomatoes values will be considered as percentage.\n* Whatever Age stats we obtain, consider it as X+. ( For age, greater equal to X)","c6622ac8":"Univariate Analysis ","25584649":"**Few Obsvns**\n* Year Range - 1942 - 2020\n* Runtime - [1, 224] minutes\n* IMDb - [1.4 , 9.3] ratings\n* Avg. IMDb Ratings- 6.25\n* Median IMDb - 6.3\n* RT - 66% Avg.\n* RT - [3,  100] %\n* Median RT - 72%"}}