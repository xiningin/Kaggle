{"cell_type":{"36b342ea":"code","062dec01":"code","93a3f622":"code","d129b9ce":"code","9e64f767":"code","c252bd8a":"code","99d2b7a4":"code","b73f18cc":"code","dbc75da1":"code","b4d42079":"code","3b3b77a9":"code","7a8ee84d":"code","b7aabec4":"code","eff4406c":"code","c05a7ad1":"code","2c24ede8":"code","af44ab4d":"code","956e9af7":"code","04ddab7f":"code","0e5408b3":"markdown","c0610bca":"markdown","27e28f57":"markdown","ed1359ae":"markdown","afccf690":"markdown","ee332ff1":"markdown","e387ca4f":"markdown","846a9f23":"markdown","064ae7d1":"markdown","02648abe":"markdown","ee45899d":"markdown","67bf1c64":"markdown","6cc90434":"markdown"},"source":{"36b342ea":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import linear_kernel\nsns.set_style('darkgrid')\nplt.style.use('fivethirtyeight')\nprint(\"The necessary packages are included successfully!\")","062dec01":"url = '..\/input\/coursera-courses-dataset-2021\/Coursera.csv'\ndf = pd.read_csv(url)\ndf.head()","93a3f622":"# This dataframe contains some useless columns which must be dropped for a better analytics result\nuc = ['Course URL']  # uc means useless columns\ndf = df.drop(columns=uc)\ndf.head()","d129b9ce":"r,c = df.shape\nprint(\"Number of customers  = \",r)\nprint(\"Number of parameters = \",c)","9e64f767":"df.info()","c252bd8a":"print(\"Are there any missing values in the dataset ?\",df.isna().values.any())","99d2b7a4":"# complete summary of dataset\ndf.describe().T","b73f18cc":"data = df['Difficulty Level'].value_counts()\ndata","dbc75da1":"mag = ['Beginner','Advanced','Intermediate','Conversant','Not Calibrated']\n  \ndata = [1444,1005,837,186,50]\nexplode = (0.1,0.0,0.0,0.0,0.0) \n  \n# Creating color parameters \ncolors = (\"lightblue\",\"crimson\",\"yellow\",\"green\",\"violet\") \n  \n# Wedge properties \nwp = { 'linewidth' : 1, 'edgecolor' : \"white\" } \n  \n# Creating autocpt arguments \ndef func(pct, allvalues): \n    absolute = int(pct \/ 100.*np.sum(allvalues)) \n    return \"{:.1f}%\\n({:d} g)\".format(pct, absolute) \n  \n# Creating plot \nfig, ax = plt.subplots(figsize =(15, 10)) \nwedges, texts, autotexts = ax.pie(data,  \n                                  autopct = lambda pct: func(pct, data), \n                                  explode = explode,  \n                                  labels = mag, \n                                  shadow = True, \n                                  colors = colors, \n                                  startangle = 90, \n                                  wedgeprops = wp, \n                                  textprops = dict(color =\"black\")) \n  \n# Adding legend \nax.legend(wedges, mag, \n          title =\"Values\", \n          loc =\"center left\", \n          bbox_to_anchor =(1, 0, 0.5, 1)) \n  \nplt.setp(autotexts, size = 10, weight =\"bold\") \nax.set_title(\"Payment type of course\\n\",size=19) \n  \n# show plot \n\nplt.show()","b4d42079":"df['Course Rating'].value_counts()","3b3b77a9":"df = df[df['Course Rating'] != 'Not Calibrated']","7a8ee84d":"df['Course Rating'] = df['Course Rating'].astype(float)\ndf","b7aabec4":"plt.figure(figsize=(18,7))\nsns.countplot(data=df,x='Course Rating',palette='plasma')\nplt.xlabel('Course Ratings',fontsize='16',color='blue')\nplt.ylabel('Number of courses',fontsize='16',color='blue')\nplt.xticks(fontsize='14',color='green')\nplt.yticks(fontsize='14',color='red')\nplt.title(\"Count of course types\\n\",fontsize=24,fontweight='bold',color='indigo')","eff4406c":"df2 = df[df['Course Rating'] > 4.0]\ndf2.head(10)","c05a7ad1":"cv=TfidfVectorizer()\ntfidf_matrix=cv.fit_transform(df['Course Name'])\ncourse_user = df.pivot_table(columns='Course Name',values='Course Rating')\ncourse_user.head()","2c24ede8":"df = df.rename(columns={'Course Name':'course_title'})","af44ab4d":"cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)\nindices=pd.Series(df.index,index=df['course_title'])\ntitles=df['course_title']\ndef recommendations(course_title):\n    idx = indices[course_title]\n    sim_scores = list(enumerate(cosine_sim[idx]))\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    sim_scores = sim_scores[1:11]\n    course_indices = [i[0] for i in sim_scores]\n    return titles.iloc[course_indices]\nprint(\"--------------- Similar courses to your search --------------:\\n\")\nrecommendations('Write A Feature Length Screenplay For Film Or Television')","956e9af7":"cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)\nindices=pd.Series(df.index,index=df['course_title'])\ntitles=df['course_title']\ndef recommendations(course_title):\n    idx = indices[course_title]\n    sim_scores = list(enumerate(cosine_sim[idx]))\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    sim_scores = sim_scores[1:11]\n    course_indices = [i[0] for i in sim_scores]\n    return titles.iloc[course_indices]\nprint(\"--------------- Similar courses to your search --------------:\\n\")\nrecommendations('Retrieve Data using Single-Table SQL Queries')","04ddab7f":"cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)\nindices=pd.Series(df.index,index=df['course_title'])\ntitles=df['course_title']\ndef recommendations(course_title):\n    idx = indices[course_title]\n    sim_scores = list(enumerate(cosine_sim[idx]))\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    sim_scores = sim_scores[1:11]\n    course_indices = [i[0] for i in sim_scores]\n    return titles.iloc[course_indices]\nprint(\"--------------- Similar courses to your search --------------:\\n\")\nrecommendations('Finance for Managers')","0e5408b3":"## 9. Running Recommendation Engine on variety of course genres","c0610bca":"## 3. Data Cleaning","27e28f57":"## 8. Making NLP Model for Recommendation Engine","ed1359ae":"### TOPIC : 2 Database and related courses ","afccf690":"## 2. Importing the dataset","ee332ff1":"## 7. Filterning required data","e387ca4f":"### TOPIC : 1 TV shows and telecast","846a9f23":"# Coursera Course Recommendation Engine and Visualization\ud83d\udcda","064ae7d1":"## 1. Importing necessary libraries","02648abe":"## 5. NULL Removal \/ Checking","ee45899d":"### TOPIC : 3 Finance related","67bf1c64":"## 4. Data Inferencing","6cc90434":"## 6. Data Visualization"}}