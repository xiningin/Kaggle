{"cell_type":{"cf74ebe2":"code","cbf1b063":"code","a21fc706":"code","d5de72fc":"code","b6dea5ce":"code","0a325e46":"code","d473a4b4":"code","b16c4c0f":"code","a7879040":"code","1d6ebefd":"code","366dd82b":"code","c44443a9":"code","0f67d56e":"code","e2ed48bd":"markdown","4c376c9b":"markdown","bcaadcc0":"markdown","15a22233":"markdown","fd45f7d6":"markdown","6ea6bf89":"markdown","0aa5ef55":"markdown","9ec16b01":"markdown","6b1620b5":"markdown","7c2f2ffc":"markdown"},"source":{"cf74ebe2":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression","cbf1b063":"data = pd.read_csv(\"..\/input\/diabetes-dataset\/diabetes2.csv\")","a21fc706":"data.head()","d5de72fc":"data.plot.scatter(x='Glucose',y='Outcome')","b6dea5ce":"data.plot.scatter(x='Age',y='Outcome')","0a325e46":"data.plot.scatter(x='DiabetesPedigreeFunction',y='Outcome')","d473a4b4":"data.plot.scatter(x='Insulin',y='Outcome')","b16c4c0f":"import statsmodels.api as sm\ny= data['Outcome']\n\nX = sm.add_constant(data[['Age','Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction']])\n\nlogit_model=sm.Logit(y,X)\n\nresult=logit_model.fit()\n\nprint(result.summary())","a7879040":"from sklearn.linear_model import LogisticRegression\n\nlogreg = LogisticRegression()\nlogreg.fit(X, y)","1d6ebefd":"y_pred = logreg.predict(X)\n\nprint('Accuracy of logistic regression classifier on test set is : {:.2f}'.format(logreg.score(X, y)))","366dd82b":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix = confusion_matrix(y, y_pred)\n\nprint(confusion_matrix)","c44443a9":"from sklearn.metrics import classification_report\n\nprint(classification_report(y, y_pred))","0f67d56e":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nimport matplotlib.pyplot as plt\n\nlogit_roc_auc = roc_auc_score(y, logreg.predict(X))\nfpr, tpr, thresholds = roc_curve(y, logreg.predict_proba(X)[:,1])\n\nplt.figure()\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()","e2ed48bd":"* If Outcome is 1,then person have Diabetes.\n* If Outcome is 0,then person Don't have Diabetes.","4c376c9b":"### I hope you liked my notebook.","bcaadcc0":"### Prediction and Accuracy","15a22233":"### Model","fd45f7d6":"### Loading Data","6ea6bf89":"### Importing Libraries","0aa5ef55":"### ROC curve","9ec16b01":"### Plotting Data - Visualization","6b1620b5":"# Diabetes Prediction - Logistic Regression","7c2f2ffc":"### Confusion Matrix"}}