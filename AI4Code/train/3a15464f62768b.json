{"cell_type":{"d3cb514c":"code","096d0515":"code","8918969a":"code","ab332171":"code","a6417631":"code","b0ac541b":"code","932a8d12":"code","d0132a47":"code","d439fbbc":"code","0293b766":"code","2ae4c95e":"code","261cf1f5":"code","8d0df9b6":"code","2336102a":"code","005fb2f6":"code","670454bc":"code","e194c7e9":"code","1fbafb96":"code","23876fea":"code","acafe41b":"code","2ac67944":"code","c53ace8d":"code","b850902a":"code","b6b4bd5f":"code","e407169c":"code","5f8b9cc5":"code","99ea633d":"markdown","681146ec":"markdown","2825d748":"markdown","efd43fc0":"markdown","f7e4d15b":"markdown"},"source":{"d3cb514c":"import os\n      \nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport glob\nimport matplotlib.pyplot as plt\nimport re\nimport seaborn as sns","096d0515":"join_df = os.path.join(\"..\/input\/crypto-historical-price\/data\", \"*.csv\")\njoined_list = glob.glob(join_df)\njoined_list.sort()","8918969a":"df_list = []\nfor file in joined_list:\n    crypto_currency = re.search(\"..\/input\/crypto-historical-price\/data\/(.*)-USD\", file).group(1)\n    df = (pd.read_csv(file).assign(Currency = crypto_currency))\n    df_list.append(df)\ndf = pd.concat(df_list)","ab332171":"df.head(10)","a6417631":"df.describe()","b0ac541b":"df.info()","932a8d12":"df.isna().sum()","d0132a47":"df = df[df['Open'].notna()] #As all values are related, this gonna drop all empty rows.","d439fbbc":"df.isna().sum()","0293b766":"df.dtypes","2ae4c95e":"df['Average'] = (df['Open'] + df['Close'])\/2","261cf1f5":"df = df[['Currency', 'Date','Average', 'Open', 'Close', 'High', 'Low', 'Volume', 'Adj Close']]","8d0df9b6":"df.head()","2336102a":"fig = px.scatter(df, x=\"Date\", y=\"Average\", color=\"Currency\")\nfig.show()","005fb2f6":"# def all_crypto_OHCL(mode):\n#     mode = mode.title()\n#     fig = px.scatter(df, x='Date', y=mode, color = 'Currency')\n#     fig.show()","670454bc":"# all_crypto_OHCL('Open')","e194c7e9":"# def specific_crypto_currency_OHCL(currency_name, mode):\n#     currency_name = currency_name.upper()\n#     crypto_date = (df['Date'][df['Currency'] == currency_name])\n#     fig = px.scatter(df, x=\"crypto_date\", y=mode)\n#     fig.show()","1fbafb96":"def choosing_crypto(crypto_name):\n    crypto_name = crypto_name.upper()\n    new_title = f'History of cryptocurrency: {crypto_name}'\n    crypto_average = (df['Average'][df['Currency'] == crypto_name])\n    crypto_date = (df['Date'][df['Currency'] == crypto_name])\n    fig = px.scatter(df, x=crypto_date, y=crypto_average, title = new_title, labels= {'x': 'Date', 'y': 'Dollars'})\n    fig.show()","23876fea":"choosing_crypto('ada')\nchoosing_crypto('btc')","acafe41b":"def all_crypto_info(crypto_name):\n    crypto_name = crypto_name.upper()\n    crypto_date = (df['Date'][df['Currency'] == crypto_name])\n    high = (df['High'][df['Currency'] == crypto_name])\n    low = (df['Low'][df['Currency'] == crypto_name])\n    close =(df['Close'][df['Currency'] == crypto_name])\n    opena = (df['Open'][df['Currency'] == crypto_name])\n    new_title = f'History of cryptocurrency: {crypto_name}'\n    \n    \n    fig = go.Figure()\n    fig.add_trace(go.Scatter(\n        x= crypto_date,\n        y= high, name = 'High'\n        ))\n    fig.add_trace(go.Scatter(\n        x= crypto_date,\n        y= low, name = 'Low'\n        ))\n    fig.add_trace(go.Scatter(\n        x= crypto_date,\n        y= opena, name = 'Open'\n        ))\n    fig.add_trace(go.Scatter(\n        x= crypto_date,\n        y= close, name = 'Close'\n        ))\n    \n    fig.update_layout(\n    title= new_title,\n    xaxis_title=\"Date\",\n    yaxis_title=\"Money (Dollars)\",\n    font=dict(\n        size=18,\n        color=\"black\"\n        )\n    )\n\n    fig.show()","2ac67944":"all_crypto_info('btc')","c53ace8d":"sum_df = df.groupby(['Currency'])['Average'].sum().reset_index()","b850902a":"sum_df.describe()","b6b4bd5f":"sum_df = sum_df.rename(columns={'Average':'Total_of_History'})\ntop_currencies_df = sum_df[sum_df['Total_of_History'] >= 202256.3] ","e407169c":"top_currencies_df\ntop_currencies_df.sort_values(by=['Total_of_History']).tail(10)","5f8b9cc5":"colors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen', 'darkgreen', 'darkred', 'blue', 'orange']\nfig = px.pie(top_currencies_df, values='Total_of_History', names='Currency', title = '% of Total sum Of Cryptos ')\nfig.update_traces(hoverinfo='label+percent', textfont_size=15,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","99ea633d":"The missing values:\n* Open\n* Low\n* Close\n* High\n* Adj Close\n* Volume\n\n![image.png](attachment:eba6df23-1a1a-4794-9882-855c05e020df.png)","681146ec":"***So once we have the understand what we're talking about, it's time to drop the unnecesary rows.***\n\nChecking the figures we can conclude that the missing data for open is the same that for close and the other aspects.","2825d748":"# Removing Null values and old rows.","efd43fc0":"There is no null values in the table","f7e4d15b":"**Define if you want to see Open, Close, Low, or High information better known as OHLC**"}}