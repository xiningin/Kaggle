{"cell_type":{"6497acdd":"code","315218f9":"code","7993a100":"code","8a7ac55a":"code","f1f47637":"code","6c3ff2d1":"code","62a69ac7":"code","3f30c7bf":"code","714ef5c7":"code","c876f0e5":"code","d305fcec":"markdown","bfac9229":"markdown","f24cdb8c":"markdown","59aaf6e3":"markdown","deee4573":"markdown"},"source":{"6497acdd":"import pandas as pd\nfrom sklearn.datasets import load_digits\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import svm\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns","315218f9":"digits = load_digits()\ndir(digits)\n","7993a100":"plt.gray() \nfor i in range(4):\n    plt.matshow(digits.images[i])","8a7ac55a":"X = digits.data\nX.shape","f1f47637":"y=digits.target\ny.shape","6c3ff2d1":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2,random_state=0)","62a69ac7":"sc=SVC(C=100,gamma=0.001)\nsc.fit(X_train,y_train)","3f30c7bf":"y_pred=sc.predict(X_test)\ny_pred","714ef5c7":"Score=sc.score(X_test,y_test)\nScore","c876f0e5":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(10,7))\nsns.heatmap(cm, annot=True)\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","d305fcec":"# Confusion Matrix","bfac9229":"# Importing required libraries","f24cdb8c":"# Loading Data","59aaf6e3":"**Thank You**","deee4573":"# Model Preparation"}}