{"cell_type":{"8491a8bc":"code","8255518a":"code","f6334ae3":"code","f0686896":"code","3db2048f":"code","3ac4e9fc":"code","48da9c7e":"code","644e88b6":"code","2cdd72cc":"code","4e86b5cc":"code","b3edfc53":"code","056c3781":"code","8c0ae6ce":"code","c5175bff":"code","69f90c71":"code","bbbc6f6a":"code","846f159b":"code","075032cd":"code","6b541f9f":"code","d4f2fff6":"code","81a91cfd":"markdown","75638ec5":"markdown","83fb2e40":"markdown"},"source":{"8491a8bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8255518a":"#importing libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f6334ae3":"#reading dataset\n\n\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","f0686896":"#displaying first five rows\n\ntrain_data.head()","3db2048f":"# getting the number of rows and columns in the dataset\n\ntrain_data.shape","3ac4e9fc":"#basic statistical data\n\n\ntrain_data.describe()","48da9c7e":"#heatmap to visualize missing values\n\nsns.heatmap(train_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","644e88b6":"#calculation of count of the total number of survived and deceased\n\ntrain_data['Survived'].value_counts()","2cdd72cc":"#Bar chart to visualize the survived\n\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train_data)","4e86b5cc":"#calculating count of people in each passengerclass (Pclass)\n\ntrain_data['Pclass'].value_counts()","b3edfc53":"#Bar chart to visualize the count in each Pclass\n\nplt.figure(figsize=(5,5))\nplt.bar(list(train_data['Pclass'].value_counts().keys()),list(train_data['Pclass'].value_counts()),color=[\"y\"])\nplt.show()","056c3781":"#calculating count of people of each gender \n\n\ntrain_data['Sex'].value_counts()","8c0ae6ce":"#Bar chart to visualize the count in each gender\n\nplt.figure(figsize=(5,5))\nplt.bar(list(train_data['Sex'].value_counts().keys()),list(train_data['Sex'].value_counts()),color=[\"cyan\",\"pink\"])\nplt.show()","c5175bff":"#visualizing survived for both genders\n\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train_data,palette='rainbow')","69f90c71":"#visualizing survived for each Pclass\n\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train_data,palette='rainbow')","bbbc6f6a":"#Bar chart to visualize the Age distribution\n\nplt.figure(figsize=(5,7))\nplt.hist(train_data['Age'])\nplt.title('Age Dsitribution')\nplt.xlabel('Age')\n#dusplt.show()","846f159b":"#distplot to visualize the Age distribution\n\nsns.displot(train_data['Age'],kde=False,bins=50,color='darkred')","075032cd":"#count of SibSp using countplot\n\n\nsns.countplot(x='SibSp',data=train_data)","6b541f9f":"#Histogram Visualization for Fare column\n\ntrain_data['Fare'].hist(color='r',bins=50,figsize=(9,4))","d4f2fff6":"#BOXPLOT visualization to find the missing values\n\nplt.figure(figsize=(10,8))\nsns.boxplot(x='Pclass',y='Age',data=train_data,palette='winter')","81a91cfd":"# **EDA**","75638ec5":"# **Importing Libraries**","83fb2e40":"# **Loading Train and Test Dataset** "}}