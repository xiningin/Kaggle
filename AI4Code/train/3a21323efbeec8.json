{"cell_type":{"121cef12":"code","8bb3969f":"code","1dde314a":"code","4da87682":"code","f996ae26":"code","35c2b5d7":"code","9f47bb21":"code","fe3c0c34":"code","075385df":"code","865a7606":"code","242d09bd":"code","d146ae03":"code","0e2949f0":"code","de360f0a":"code","dddf9bc3":"code","fcff3c76":"code","94063681":"code","2c87018e":"code","1f3192ef":"code","32c607ef":"code","a1b5a4dc":"code","5e703538":"code","3eb179e4":"code","cf730fcf":"code","ae83a688":"code","9612f980":"code","da5fcf9f":"code","6f72e4e0":"code","7ad9d3bd":"code","85724b49":"code","eb7b80a7":"code","ef7f8cf4":"code","0f4c86e0":"code","bf589945":"code","6e515459":"code","d36a6647":"code","03effd53":"code","87e5f0da":"code","73082835":"code","67bab9a5":"code","11a84951":"code","18cf91e5":"code","b66f5cac":"code","28ba879b":"code","04df46fd":"code","508d7e29":"code","6f00f2fe":"code","4c9370ee":"code","3c7360e8":"code","d829d3ba":"code","54f5d4a9":"code","10844441":"code","abea5373":"code","18acc1d9":"code","1919e26b":"code","4d2dfaa4":"code","989a06f4":"code","179147eb":"code","617be80e":"code","c20adfa2":"code","5ca9081f":"code","cd635205":"code","52fe29a7":"code","8d798c8d":"code","1197ad6d":"code","d2e65cca":"code","d455aa39":"code","54a5a693":"code","73083997":"code","916566c6":"code","292f03f5":"code","1458a285":"code","204422f2":"code","7277ee90":"code","1be2210e":"code","129df236":"code","2e3686cf":"code","29d428f5":"code","0b917808":"code","1c5c67b9":"code","ae905514":"code","28738d05":"code","85993f21":"code","5cdb3ce8":"code","60c71101":"code","812934da":"code","a90dba5f":"code","0ae6dae2":"code","69b0b0b3":"code","b6cfce02":"code","533de356":"code","aa5f4055":"code","57d14f97":"code","8a06f37d":"code","f18ab7e3":"code","a5c49432":"code","02f1bc59":"code","8e9796f1":"code","c8992fae":"code","ad52ac73":"code","4eaa861d":"code","83a8f29b":"code","9f93526f":"code","a4062c8a":"markdown","caa1ee48":"markdown","3167ef1d":"markdown","6139d8be":"markdown","8b6b8b36":"markdown","91684fd5":"markdown","9b34ab3d":"markdown","5cb1fb3c":"markdown","87b4becb":"markdown","913bc6ff":"markdown","462bccbb":"markdown","8637631c":"markdown","e44d77c4":"markdown","02232213":"markdown","900e095f":"markdown","62ff3c15":"markdown","51b9f09d":"markdown","573500a8":"markdown","c62c94ac":"markdown","a8d1f82f":"markdown","2c5ab1a2":"markdown","4df2e45f":"markdown","9a104562":"markdown","584af9a2":"markdown","d8588f0b":"markdown","9726bebe":"markdown","d224450f":"markdown","45467130":"markdown","6b295cc1":"markdown","a8495148":"markdown","0b2b88c1":"markdown","5d75acbd":"markdown","8c90fb58":"markdown","153d6579":"markdown","0cfa8181":"markdown","b7d7273c":"markdown"},"source":{"121cef12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8bb3969f":"train_data = pd.read_csv(\"\/kaggle\/input\/fmcgfast-moving-consumer-goods\/train1.csv\")","1dde314a":"test_data = pd.read_csv(\"\/kaggle\/input\/fmcgfast-moving-consumer-goods\/test1.csv\")","4da87682":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import skew, kurtosis, norm\nfrom scipy import stats\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n","f996ae26":"\ntrain_data.head(10) \n","35c2b5d7":"train_data = train_data.loc[:, ~train_data.columns.str.contains('^Unnamed')]","9f47bb21":"print(train_data.keys())","fe3c0c34":"\ntrain_data.dtypes #datatype of colunms in train data\n","075385df":"train_data['PROD_CD'] = train_data['PROD_CD'].str.replace(r'\\D', '').astype(int)\n","865a7606":"train_data['SLSMAN_CD'] = train_data['SLSMAN_CD'].str.replace(r'\\D', '').astype(int)","242d09bd":"train_data['TARGET_IN_EA'] = train_data['TARGET_IN_EA'].str.replace(r'\\D', '').astype(int)","d146ae03":"train_data['ACH_IN_EA'] = train_data['ACH_IN_EA'].str.replace(r'\\D', '').astype(int)","0e2949f0":"train_data.dtypes","de360f0a":"test_data.dtypes","dddf9bc3":"test_data = test_data.loc[:, ~test_data.columns.str.contains('^Unnamed')]","fcff3c76":"corr=train_data.corr()\nsns.heatmap(corr,annot=True)","94063681":"corr","2c87018e":"train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['SLSMAN_CD'].count()","1f3192ef":"train_data.groupby(['PROD_CD','PLAN_MONTH'])['PROD_CD'].count()","32c607ef":"train_data.groupby(['SLSMAN_CD','PLAN_MONTH','PLAN_YEAR'])['SLSMAN_CD'].count()","a1b5a4dc":"np.std(train_data) ","5e703538":"np.var(train_data)","3eb179e4":"skew(train_data)","cf730fcf":"kurtosis(train_data)","ae83a688":"plt.hist(train_data['PROD_CD']);plt.title('Histogram of PROD_CD'); plt.xlabel('PROD_CD'); plt.ylabel('Frequency')","9612f980":"plt.hist(train_data['SLSMAN_CD'], color = 'coral');plt.title('Histogram of SLSMAN_CD'); plt.xlabel('SLSMAN_CD'); plt.ylabel('Frequency')","da5fcf9f":"plt.hist(train_data['TARGET_IN_EA'], color= 'brown');plt.title('Histogram of TARGET_IN_EA'); plt.xlabel('TARGET_IN_EA'); plt.ylabel('Frequency')","6f72e4e0":"plt.hist(train_data['ACH_IN_EA'], color = 'violet');plt.title('Histogram of ACH_IN_EA'); plt.xlabel('ACH_IN_EA'); plt.ylabel('Frequency')","7ad9d3bd":"sns.boxplot(train_data[\"PROD_CD\"])","85724b49":"sns.boxplot(train_data[\"SLSMAN_CD\"])","eb7b80a7":"sns.boxplot(train_data[\"PLAN_MONTH\"])","ef7f8cf4":"sns.boxplot(train_data[\"TARGET_IN_EA\"])","0f4c86e0":"sns.scatterplot(x='PROD_CD', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PROD_CD')","bf589945":"sns.scatterplot(x='SLSMAN_CD', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & SLSMAN_CD')","6e515459":"sns.scatterplot(x='PLAN_MONTH', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PLAN_MONTH')","d36a6647":"sns.scatterplot(x='PLAN_YEAR', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & PLAN_YEAR')","03effd53":"sns.scatterplot(x='TARGET_IN_EA', y='ACH_IN_EA', data=train_data).set_title('Scatterplot of ACH_IN_EA & TARGET_IN_EA')","87e5f0da":"sns.countplot(train_data[\"PROD_CD\"])","73082835":"sns.countplot(train_data[\"SLSMAN_CD\"])\n","67bab9a5":"sns.countplot(train_data[\"PLAN_MONTH\"])\n","11a84951":"sns.countplot(train_data[\"PLAN_YEAR\"])\n","18cf91e5":"train_data.PROD_CD.unique()               \n","b66f5cac":"train_data.PROD_CD.value_counts()                    ","28ba879b":"train_data.SLSMAN_CD.unique()","04df46fd":"train_data.SLSMAN_CD.value_counts()","508d7e29":"train_data.PLAN_YEAR.unique()","6f00f2fe":"train_data.PLAN_YEAR.value_counts()","4c9370ee":"train_data.PLAN_MONTH.unique()","3c7360e8":"train_data.PLAN_MONTH.value_counts()","d829d3ba":"train_data.TARGET_IN_EA.unique()","54f5d4a9":"train_data.TARGET_IN_EA.value_counts()","10844441":"train_data.ACH_IN_EA.unique()","abea5373":"train_data.ACH_IN_EA.value_counts()","18acc1d9":"train_data.plot(x=\"ACH_IN_EA\",y=\"SLSMAN_CD\")","1919e26b":"train_data.plot(x=\"TARGET_IN_EA\",y=\"SLSMAN_CD\")","4d2dfaa4":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['PROD_CD','PLAN_MONTH']).count()['ACH_IN_EA'].unstack().plot(ax=ax)","989a06f4":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['ACH_IN_EA'].count().unstack().plot(ax=ax)","179147eb":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['PROD_CD','PLAN_MONTH']).count()['TARGET_IN_EA'].unstack().plot(ax=ax)","617be80e":"fig,ax= plt.subplots(figsize =(15,7))\nfig= train_data.groupby(['SLSMAN_CD','PLAN_MONTH'])['TARGET_IN_EA'].count().unstack().plot(ax=ax)","c20adfa2":"pd.crosstab(train_data.PROD_CD,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","5ca9081f":"pd.crosstab(train_data.PROD_CD,train_data.PLAN_YEAR).plot(kind=\"bar\")\n","cd635205":"pd.crosstab(train_data.SLSMAN_CD,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","52fe29a7":"pd.crosstab(train_data.SLSMAN_CD,train_data.PLAN_YEAR).plot(kind=\"bar\")","8d798c8d":"sns.distplot(train_data['PROD_CD'], fit=norm, kde=False)","1197ad6d":"sns.distplot(train_data['SLSMAN_CD'], fit=norm, kde=False, color = 'coral')","d2e65cca":"sns.distplot(train_data['PLAN_MONTH'], fit=norm, kde=False, color = 'skyblue')","d455aa39":"sns.distplot(train_data['PLAN_YEAR'], fit=norm, kde=False, color = 'orange')\n","54a5a693":"sns.distplot(train_data['TARGET_IN_EA'], fit=norm, kde=False, color = 'brown')\n","73083997":"sns.kdeplot(train_data['TARGET_IN_EA'],shade = True, bw = .5, color = \"red\")","916566c6":"import seaborn as sns","292f03f5":"train_data[\"ACH_IN_EA\"].describe()","1458a285":"sns.kdeplot(train_data['ACH_IN_EA'],shade = True, bw = .5, color = \"BLUE\")","204422f2":"sns.violinplot(y=train_data['PROD_CD'],x=train_data['PLAN_MONTH'])","7277ee90":"sns.violinplot(y=train_data['SLSMAN_CD'],x=train_data['PLAN_MONTH'])","1be2210e":"sns.violinplot(y=train_data['TARGET_IN_EA'],x=train_data['PLAN_MONTH'])","129df236":"sns.violinplot(y=train_data['ACH_IN_EA'],x=train_data['PLAN_MONTH'])","2e3686cf":"target=list(train_data.TARGET_IN_EA)","29d428f5":"achiv=list(train_data.ACH_IN_EA)","0b917808":"yn=[]     ","1c5c67b9":"for x in range(22646):\n    if(target[x]<=achiv[x]):\n        yn.append(1)\n    else:\n        yn.append(0)\n","ae905514":"train_data['result'] = yn","28738d05":"pd.crosstab(train_data.result,train_data.PLAN_YEAR).plot(kind=\"bar\")","85993f21":"pd.crosstab(train_data.result,train_data.PLAN_MONTH).plot(kind=\"bar\")\n","5cdb3ce8":"prod = np.array(train_data['PROD_CD'])","60c71101":"salesman = np.array(train_data['SLSMAN_CD'])","812934da":"month = np.array(train_data['PLAN_MONTH'])","a90dba5f":"year = np.array(train_data['PLAN_YEAR'])","0ae6dae2":"target = np.array(train_data['TARGET_IN_EA'])","69b0b0b3":"achieved = np.array(train_data['ACH_IN_EA'])","b6cfce02":"x_ach = np.linspace(np.min(achieved), np.max(achieved))","533de356":"y_ach = stats.norm.pdf(x_ach, np.mean(x_ach), np.std(x_ach))","aa5f4055":"plt.plot(x_ach, y_ach,); plt.xlim(np.min(x_ach), np.max(x_ach));plt.xlabel('achieved');plt.ylabel('Probability');plt.title('Normal Probability Distribution of achieved')","57d14f97":"x_prod = np.linspace(np.min(prod), np.max(prod))","8a06f37d":"y_prod = stats.norm.pdf(x_prod, np.mean(x_prod), np.std(x_prod))","f18ab7e3":"plt.plot(x_prod, y_prod, color = 'coral'); plt.xlim(np.min(x_prod), np.max(x_prod));plt.xlabel('prod_cd');plt.ylabel('Probability');plt.title('Normal Probability Distribution of prod_cd')","a5c49432":"x_sale = np.linspace(np.min(salesman), np.max(salesman))\ny_sale = stats.norm.pdf(x_sale, np.mean(x_sale), np.std(x_sale))\nplt.plot(x_sale, y_sale, color = 'coral'); plt.xlim(np.min(x_sale), np.max(x_prod));plt.xlabel('Sale_cd');plt.ylabel('Probability');plt.title('Normal Probability Distribution of sales_cd')","02f1bc59":"x_target = np.linspace(np.min(target), np.max(target))\ny_target = stats.norm.pdf(x_target, np.mean(x_target), np.std(x_target))\nplt.plot(x_target, y_target, color = 'coral'); plt.xlim(np.min(x_target), np.max(x_target));plt.xlabel('target');plt.ylabel('Probability');plt.title('Normal Probability Distribution of target')","8e9796f1":"train_data['PLAN_MONTH'].value_counts().head(10).plot.pie()\ntrain_data['PLAN_YEAR'].value_counts().head(10).plot.pie()\nplt.gca().set_aspect('equal')","c8992fae":"X = train_data.iloc[:,:6]  #independent columns\ny = train_data.iloc[:,-1]    #target column i.e price range","ad52ac73":"bestfeatures = SelectKBest(score_func=chi2, k=5)\nfit = bestfeatures.fit(X,y)","4eaa861d":"dfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(X.columns)","83a8f29b":" \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['imp','importance']  #naming the dataframe columns","9f93526f":"featureScores","a4062c8a":"By using feature selection we get the importance of particular column in data.\nso by feature selection we get that product_CD and Achivement is having more importance respectively followed by target\ncolumn with very less importance can be drop.\n\n","caa1ee48":"['PROD_CD', 'SLSMAN_CD', 'PLAN_MONTH', 'PLAN_YEAR', 'TARGET_IN_EA','ACH_IN_EA']\nare the columns name in train data","3167ef1d":"COUNTPLOT","6139d8be":"#GETTING THE ACCURING FREQUENCY OF EACH PRODUCTS AND SALESMAN IN BAR CHART FOR EACH MONTH AND YEAR ","8b6b8b36":"HERE IS SOME INSIGHTS ABOUT HOW MUCH SALESMAN'S TARGETS AND ACHIEVEMENTS","91684fd5":"getting the discriptive information about the train data","9b34ab3d":"by heatmap we can see that target and achivement have good correlation that is 0.719321\nand month and year do not have good correlation that is -0.98","5cb1fb3c":"#By distribution plot we can see how much our data is normally distributed","87b4becb":"By all the plots and graphs we have come to conclusion that highest achivement is 232,000 \nby saleman code i.e SLSMAN_CD 94 in month of november 2019 product_CD 31 \n","913bc6ff":"GETTING EXACTLY WHERE SALES MA COMPLETED THEIR TARGET OR ACHIEVED THE TARGET OF EVERY PRODUCT IN DATASET ","462bccbb":"# target\n","8637631c":"#apply SelectKBest class to extract top 10 best features\n","e44d77c4":"# KURTOSIS\n ","02232213":"# Product_code","900e095f":"importing required libraries","62ff3c15":"concat two dataframes for better visualization","51b9f09d":"HISTOGRAM\n","573500a8":"# salesman_code\n","c62c94ac":"droping ['id'] column from train data","a8d1f82f":"#VARIANCE\n","2c5ab1a2":"#ANALYIZING MORE INSGHTS\n","4df2e45f":"VISIUALIZING DISTRIBUTION OF DATA ACCORDING TO THE MONTH","9a104562":"UNIQUE VALUES and COUNTS\n","584af9a2":"STANDARD DEVIATION\n","d8588f0b":"CHECK FOR CORRELATION","9726bebe":"# ACHIEVED","d224450f":"SCATTERPLOT","45467130":"HERE IT SHOWING HOW MUCH TARGETS ARE ACHIEVED OR NOT ACHIEVED","6b295cc1":"# Normal Probability distribution \nAs we know data is not normally Distributed so we can process and form the Normal Probability Distribution of data column wise.\n\n\n","a8495148":"#distribution plot\n","0b2b88c1":"VISUALISATION OF DENSITY DISTRIBUTION OF TARGETS AND ACHEIVEMENT AND COMPARIOSION BETWEEN THEM","5d75acbd":"#ENCODING  (using this we have remove string part and kept integer in following colunms for EDA and better insights )","8c90fb58":"we can finally plot the targets and acheivements  made for each salesman and products for each month:","153d6579":"BOXPLOT\n\n\n\n\n\n","0cfa8181":"# Unsquish the pie.\n","b7d7273c":"GROUPBY IS USED FOR GRUOPING OF PARTICULAR PARAMETERS TO GET INSIGHTS OF PRODUCT AND SALESMAN DATA ACCORDING TO THEIR FREQUENCY IN A PERTICULAR MONTH AND YEAR \n"}}