{"cell_type":{"42882dbf":"code","811d0d04":"code","a0e53efd":"code","3df20820":"code","41fd7d30":"code","abfc1641":"code","c7dd89cf":"code","5d120f96":"code","2eb8c08b":"code","1515e77f":"code","46e80ba1":"code","0ba8c683":"code","fe0bc225":"code","d66ded02":"code","a83537ba":"code","7964ba77":"code","e0c5b1f5":"code","795955ce":"code","a0c335f4":"code","fe096db1":"markdown"},"source":{"42882dbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","811d0d04":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","a0e53efd":"from sklearn.datasets import load_breast_cancer","3df20820":"data=load_breast_cancer()","41fd7d30":"data.data","abfc1641":"X=pd.DataFrame(data=data.data,columns=data.feature_names)\nX","c7dd89cf":"y=data.target\ny","5d120f96":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.svm import SVC","2eb8c08b":"TrainX, TestX, TrainY, TestY = train_test_split(X, y, test_size=0.3, shuffle=True)","1515e77f":"supportvector = SVC()\nsupportvector.fit(TrainX,TrainY)","46e80ba1":"pred = supportvector.predict(TestX)","0ba8c683":"print(classification_report(TestY,pred))","fe0bc225":"print(confusion_matrix(TestY,pred))","d66ded02":"from sklearn.model_selection import GridSearchCV","a83537ba":"parameters={'C':[0.1,1,10,100,1000,10000], 'gamma' :[1,0.1,0.001,0.0001,0.000001]}\ngrid=GridSearchCV(SVC(),parameters ,verbose=10)","7964ba77":"grid.fit(TrainX,TrainY)","e0c5b1f5":"grid.best_estimator_","795955ce":"gridpredict=grid.predict(TestX)\nprint(classification_report(TestY,gridpredict))\nconfusion_matrix(TestY,gridpredict)\n","a0c335f4":"from sklearn.metrics import accuracy_score\naccuracy_score(TestY,gridpredict)","fe096db1":"## Breast Cancer "}}