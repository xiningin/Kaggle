{"cell_type":{"3cbb85e7":"code","e6bc40d6":"code","e829de9b":"code","75313cd9":"code","2d7ff987":"code","722045cb":"code","79475cd3":"code","bc29d744":"code","4be29832":"code","a81f0ab0":"code","2082bbf3":"code","779d50ab":"code","d4fbd13a":"code","600892cc":"code","09a0e0a8":"code","515d101e":"code","15a92889":"code","48d46abc":"code","d90f91d5":"code","61ebae22":"code","8a43f80a":"code","b7cc80b0":"code","75b34c85":"code","20151378":"code","a0f7a716":"code","73309735":"code","ceab6d10":"code","6308548d":"code","92d8e37a":"code","a22d2946":"code","1fda9434":"markdown","b97579e1":"markdown","0dbe57d0":"markdown","1f575c0a":"markdown","ad221b15":"markdown","59a73fa4":"markdown"},"source":{"3cbb85e7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\n%matplotlib inline","e6bc40d6":"df_fake=pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/Fake.csv')\ndf_true=pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/True.csv')","e829de9b":"# setting label as 0 for fake\ndf_fake['label']=0\ndf_fake.head()","75313cd9":"# setting label 1 for true\ndf_true['label']=1\ndf_true.head()","2d7ff987":"# merging both fake and true datasets\ndf=pd.concat([df_fake,df_true])","722045cb":"df=df.sample(frac=1)\ndf.reset_index(inplace=True)","79475cd3":"df.drop('index',axis=1,inplace=True)","bc29d744":"df.isnull().sum()","4be29832":"import seaborn as sns\nsns.set_style('darkgrid')","a81f0ab0":"df['label'].value_counts().plot.bar(color=['blue','red'])","2082bbf3":"df['subject'].unique()","779d50ab":"df['subject'].value_counts().plot.bar(color=['red','blue','green','pink','orange','yellow','cyan','black'])","d4fbd13a":"from tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense","600892cc":"y=df['label']\nx=df.drop('label',axis=1)","09a0e0a8":"news=x.copy()","515d101e":"news['title'][0]","15a92889":"import nltk\nimport re\nfrom nltk.corpus import stopwords","48d46abc":"nltk.download('stopwords')","d90f91d5":"from nltk.stem import WordNetLemmatizer\ncorpus=[]\nfor i in range(len(news)):\n    # removing everything except alphabets\n    text=re.sub('[^a-zA-Z]',' ',news['title'][i])\n    text=text.lower()\n    text_words=text.split()\n    stem_words=[WordNetLemmatizer().lemmatize(word) for word in text_words if word not in stopwords.words('english') ]\n    text=' '.join(stem_words)\n    corpus.append(text)","61ebae22":"corpus[:5]","8a43f80a":"# one-hot representation  of our corpus\nvocab_size=50000\nonehot_corpus=[one_hot(words,vocab_size) for words in corpus]\nonehot_corpus[:5]","b7cc80b0":"# padding every one-hot encoded sentence in corpus to make them of equal length\nmax_length=20\nembedded_docs=pad_sequences(onehot_corpus,maxlen=max_length,padding='pre')\nembedded_docs[:5]","75b34c85":"features=50\nmodel=Sequential()\n# Embedding layer\nmodel.add(Embedding(vocab_size,features,input_length=max_length))\n# Long Short Term Memory layer\nmodel.add(LSTM(100))\n# Output layer\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\nprint(model.summary())","20151378":"x=np.array(embedded_docs)\nx.shape","a0f7a716":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)","73309735":"model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=10,batch_size=64)","ceab6d10":"y_pred=model.predict_classes(x_test)\ny_pred[:5]","6308548d":"y_test[:5]","92d8e37a":"from sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(y_pred,y_test))","a22d2946":"sns.heatmap(confusion_matrix(y_pred,y_test),annot=True)","1fda9434":"### Text Cleaning","b97579e1":"### Word Embedding","0dbe57d0":"### Model Evaluation","1f575c0a":"### Data PreProcessing","ad221b15":"### Model Training","59a73fa4":"### Exploratory Data Analysis"}}