{"cell_type":{"d604bc6b":"code","7c7d525b":"code","750b90fe":"code","9a772f13":"code","55b92576":"code","e9121fc5":"code","80e231d9":"code","a62215a6":"code","44b53a64":"code","82f1add1":"code","1c76ad97":"code","59a149e3":"code","c8cdd63e":"code","c7d971fe":"code","ea65f519":"markdown"},"source":{"d604bc6b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport cv2\nfrom matplotlib import pyplot as plt\nfrom joblib import Parallel, delayed\nimport glob\n\nfilenames = glob.glob( '..\/input\/aptos2019-blindness-detection\/train_images\/*' )","7c7d525b":"def morph_func( img, subgauss=False ):\n    img = img.astype( np.uint8 )\n\n    findblack = np.sum( img, axis=2 )\n    findblack = findblack - np.min(findblack)\n    findblack[findblack > np.mean(findblack)] = np.mean(findblack)\n    findblack = findblack \/ np.max(findblack)\n    borders = 2+np.sum( findblack[:,:int(img.shape[1]\/2)]<0.33, axis=1 )\n\n    for i in range( img.shape[0] ):\n        k = borders[i]\n        img[i] = img[i, np.linspace(k,img.shape[1]-k,num=img.shape[1]).astype(int),: ]   \n        \n    img = cv2.resize( img, (512,512) )\n    if subgauss==True:\n        img = cv2.addWeighted(img,4, cv2.GaussianBlur(img, (0,0) , sigmaX=13) ,-4 ,127)\n        \n    return img\n\ndef print_preprocessing( fn ):\n    img_circle = cv2.imread( fn )\n    img_circle = cv2.cvtColor(img_circle, cv2.COLOR_BGR2RGB)\n    img_circle = cv2.resize( img_circle, (512,512) )\n\n    img_rect = morph_func(img_circle)\n\n    plt.imshow( np.hstack((img_circle, img_rect))  )","750b90fe":"print_preprocessing( filenames[0] )","9a772f13":"print_preprocessing( filenames[11] )","55b92576":"print_preprocessing( filenames[111] )","e9121fc5":"print_preprocessing( filenames[1111] )","80e231d9":"print_preprocessing( filenames[2222] )","a62215a6":"print_preprocessing( filenames[3333] )","44b53a64":"print_preprocessing( filenames[2019] )","82f1add1":"print_preprocessing( filenames[908] )","1c76ad97":"print_preprocessing( filenames[5] )","59a149e3":"print_preprocessing( filenames[6] )","c8cdd63e":"print_preprocessing( filenames[7] )","c7d971fe":"print_preprocessing( filenames[9] )","ea65f519":"# During the exploration phase I found that the black areas around the images could be a problem.\n# So I looked for some ways to normalized this and found stretching works very well.\n# My initial idea was to transform the Circle to a Rectangle and I searched for some 2D morph libraries using maped triangles. This looks promissing to morphing faces but not for this task.\n# So I found a simple line-by-line approximation worked pretty well with this images. The idea is remove the left and right black portion of images stretching the non-black area to the rectangle limits.\n# This preprocessing showed to be very stable and improved our scores by 0.01+ :)"}}