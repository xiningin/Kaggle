{"cell_type":{"171d5761":"code","4cf89755":"code","9406541c":"code","a12fe613":"code","281c2365":"code","2d36fb4e":"code","d1e388a1":"code","77a5c1b6":"code","22f5db61":"code","dd03aef2":"code","c30f0932":"code","5ec17554":"code","96ccdd3d":"code","14c854d2":"code","5b9fea2c":"code","e73c8828":"code","079c9068":"code","f272d005":"code","7ae717f4":"code","9101e89b":"code","a7e1ca9e":"code","477d0c25":"code","d0ec0b2b":"code","f9f65a5b":"code","305437dd":"code","b9f1b6bd":"code","508fa1c7":"markdown","2d328ccf":"markdown","1a7b15ea":"markdown","9d1e1dbc":"markdown","48272944":"markdown","43b4ebec":"markdown","879f0b86":"markdown","1df3dce1":"markdown","31362d7c":"markdown","6bf15136":"markdown","8a4c6888":"markdown","64f47cbf":"markdown","efff3d8a":"markdown","939c653c":"markdown","890b0df7":"markdown","a77a38de":"markdown","93e5cce9":"markdown","d7adf70e":"markdown","764da067":"markdown","178dbf9c":"markdown","f022dcbb":"markdown","2983bf40":"markdown","8634e4fd":"markdown","47ee7942":"markdown","1e35fed9":"markdown"},"source":{"171d5761":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom datetime import datetime\nfrom fbprophet import Prophet\nfrom fbprophet.plot import add_changepoints_to_plot\nfrom fbprophet.diagnostics import cross_validation, performance_metrics","4cf89755":"df = pd.read_csv('..\/input\/nyc-energy-consumption\/nyc_energy_consumption.csv', parse_dates=True)\ndf.head()","9406541c":"df.shape","a12fe613":"df.dtypes","281c2365":"df.isnull().sum()","2d36fb4e":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])","d1e388a1":"df.dtypes","77a5c1b6":"df = df.set_index('timeStamp')","22f5db61":"plt.figure(figsize = (12, 5))\n\nplt.plot(df['demand'])\nplt.show()","dd03aef2":"df = df.resample('D').mean()","c30f0932":"df.shape","5ec17554":"plt.figure(figsize = (12, 5))\n\nplt.plot(df['demand'])\nplt.show()","96ccdd3d":"df_final = df.reset_index()[['timeStamp', 'demand']].rename({'timeStamp' : 'ds', 'demand' : 'y'}, axis = 'columns')","14c854d2":"df_final.head()","5b9fea2c":"train = df_final[(df_final['ds'] >= '2012-01-01') & (df_final['ds'] <= '2017-04-30')]\ntest = df_final[(df_final['ds'] > '2017-04-30')]","e73c8828":"print('Lenth of train set : {}'.format(len(train)))\nprint('Lenth of test set : {}'.format(len(test)))","079c9068":"model = Prophet(interval_width = 0.95, yearly_seasonality = True)\nmodel.fit(train)","f272d005":"future = model.make_future_dataframe(periods = 104)\nfuture.head()","7ae717f4":"future.tail()","9101e89b":"forecast = model.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","a7e1ca9e":"plt.figure(figsize = (12, 5))\n\ndf_final.set_index('ds')['y'].plot(label = \"Actual\")\nforecast.set_index('ds')['yhat'].plot(label = \"Predicted\")\n\nplt.legend()\nplt.show()","477d0c25":"plt.figure(figsize = (12, 5))\n\nmodel.plot(forecast)\nplt.show()","d0ec0b2b":"model.plot_components(forecast)\nplt.show()","f9f65a5b":"plt.figure(figsize = (12, 5))\n\nchagepoint_fig = model.plot(forecast)\nadd_changepoints_to_plot(chagepoint_fig.gca(), model, forecast)\n\nplt.show()","305437dd":"model.changepoints","b9f1b6bd":"cv_results = cross_validation( model = model, initial = '731 days', horizon = '365 days')\ndf_p = performance_metrics(cv_results)\ndf_p","508fa1c7":"<br\/>\n\n## Changing the data type of **timeStamp** into datetime","2d328ccf":"<br\/>\n\n## Preparing the dataset for **fbprophet**\nFbprophet prefers two columns named as **ds** and **y**.","1a7b15ea":"<br\/>\n\n## Train the model","9d1e1dbc":"<br\/>\n\n## After resampling the plot will look like this","48272944":"**Note:**  \nFrom the weekly trend, we are seeing that there is no seasonality.  \nAnd from the yearly graph, it is seen that the demand in **May** to **November** is higher than the other months as these are in the summer season in New York City.","43b4ebec":"<br\/>\n\n## Changepoints with time","879f0b86":"## Importing Necessary Modules","1df3dce1":"#### Checking the null values","31362d7c":"<br\/>\n\n## PLot with confidence interval\n**Note:**  \nBlack dot - actual value  \nShallow blue - lower and higher yhat  \nBlue - Predicted values","6bf15136":"<br\/>\n\n## Plot the actual and predicted values","8a4c6888":"<br\/>\n\n## Load the dataset","64f47cbf":"<br\/>\n\n## splitting into train and test set","efff3d8a":"<br\/>\n\n## Resampling\n\nThe dataset is in hourly level. That means energy consumption of every hour is recorded here. Now we convert it to daily level through resampling.","939c653c":"<br\/>\n\n## Set the timeStamp to index","890b0df7":"<br\/>\n\n## Plotting the **Demand** feature","a77a38de":"<br\/>\n\n## Performance Metrics","93e5cce9":"**Note:**  \nWhile using **fbprophet**, we don't think about the null values. fbprophet will handle this itself.","d7adf70e":"<br\/>\n\n## Reconnaissance\n<br\/>\n\n#### Shape","764da067":"<br\/>\n\n#### Lenth of the train and test set","178dbf9c":"#### Shape after Resampling","f022dcbb":"<br\/>\n\n## Now let's plot the components of the model","2983bf40":"#### Data types","8634e4fd":"<br\/>\n<br\/>\n\n**Gratitude: AIEngineering**","47ee7942":"<br\/>\n\n## Now let's see the changepoints","1e35fed9":"<br\/>\n\n## Prediction"}}