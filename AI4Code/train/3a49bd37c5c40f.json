{"cell_type":{"ec05b581":"code","8b248347":"code","dfab5795":"code","96565d73":"code","758673e0":"code","acdd56a9":"code","eb908bcc":"code","29727914":"code","71c814b5":"code","2a25c847":"code","372f3c9c":"code","bd6aa594":"code","e77293cd":"code","7f5e57f1":"code","8bcb11e3":"code","2f9d412f":"code","0bd7e5e4":"code","2de0400e":"code","aa1ee623":"code","0323b2d6":"code","396798e2":"code","ba14aadb":"code","09be0b1e":"code","9371751f":"code","ef9744c0":"code","c4968766":"code","0735539e":"code","33a2d8f9":"code","6cc728a7":"code","f51e2be8":"code","c2537830":"code","89e3553e":"code","22d96fc6":"code","80658e64":"code","3b92e66f":"code","a3f9ab95":"code","c7817b98":"code","fe7de384":"code","e0c0b08c":"code","d09b9975":"code","3e9120ed":"code","eae781bc":"code","fded12e1":"code","f3c0257f":"code","9074dd13":"code","49ef1017":"code","08d0b5ad":"code","872c7635":"code","26cdd92e":"code","660e5210":"code","8316e929":"code","51d3ffb5":"code","de2639c3":"code","d5392562":"code","785cd387":"code","2dc453c1":"code","305610f6":"code","2ab8226d":"code","bfb9e80d":"code","a0d8b2ac":"code","ff8c47be":"code","a18ef7b5":"markdown","de07fa30":"markdown","5e4e669f":"markdown","be0854b7":"markdown","855a72b7":"markdown","ac6ad592":"markdown","61110561":"markdown","5ead52ea":"markdown","f82bbd2c":"markdown","db1f9531":"markdown","94920e13":"markdown","011994de":"markdown","75d967f4":"markdown","98b4c73e":"markdown","06c896f7":"markdown","dd6225b2":"markdown","b27b688f":"markdown","8586858a":"markdown","f7cc8f1b":"markdown","f7c50975":"markdown","7c3b5f1c":"markdown"},"source":{"ec05b581":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.image import imread","8b248347":"import zipfile\nimport os","dfab5795":"data_dir = \"..\/input\/chest-xray-covid19-pneumonia\/Data\"","96565d73":"os.listdir(data_dir)","758673e0":"train_dir = data_dir+\"\/train\"\nos.listdir(train_dir)","acdd56a9":"test_dir = data_dir+\"\/test\"\nos.listdir(test_dir)","eb908bcc":"len(os.listdir(train_dir+\"\/COVID19\"))","29727914":"len(os.listdir(train_dir+\"\/NORMAL\"))","71c814b5":"len(os.listdir(train_dir+\"\/PNEUMONIA\"))","2a25c847":"len(os.listdir(test_dir+\"\/COVID19\"))","372f3c9c":"len(os.listdir(test_dir+\"\/NORMAL\"))","bd6aa594":"len(os.listdir(test_dir+\"\/PNEUMONIA\"))","e77293cd":"os.listdir(train_dir+\"\/COVID19\")[0]","7f5e57f1":"pneumonia_sample = imread(train_dir+\"\/PNEUMONIA\"+\"\/PNEUMONIA(3189).jpg\")","8bcb11e3":"plt.imshow(pneumonia_sample)","2f9d412f":"normal_sample = imread(train_dir+\"\/NORMAL\"+\"\/NORMAL(342).jpg\")","0bd7e5e4":"plt.imshow(normal_sample)","2de0400e":"covid_sample = imread(train_dir+\"\/COVID19\"+\"\/COVID19(189).jpg\")","aa1ee623":"plt.imshow(covid_sample, cmap= \"gray\")","0323b2d6":"covid_sample.shape","396798e2":"pneumonia_sample.shape","ba14aadb":"normal_sample.shape","09be0b1e":"dim1 = []\ndim2 = []\n\nfor image_name in os.listdir(train_dir+\"\/PNEUMONIA\"):\n    img = imread(train_dir+\"\/PNEUMONIA\/\"+image_name)\n    d1,d2,c = img.shape\n    dim1.append(d1)\n    dim2.append(d2)","9371751f":"plt.figure(figsize=(16,6))\nsns.scatterplot(dim1, dim2)","ef9744c0":"np.mean(dim1)","c4968766":"np.mean(dim2)","0735539e":"average_image_size = (400,400,3)","33a2d8f9":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","6cc728a7":"generator = ImageDataGenerator(\n    rotation_range=0,\n    width_shift_range=0.1,\n    height_shift_range=0.1,\n    shear_range=0.1,\n    zoom_range=0.2,\n    fill_mode='nearest',\n    horizontal_flip=False,\n    vertical_flip=False,\n    rescale=1\/255,\n)","f51e2be8":"plt.imshow(generator.random_transform(pneumonia_sample))","c2537830":"generator.flow_from_directory(test_dir)","89e3553e":"generator.flow_from_directory(train_dir)","22d96fc6":"train_generator = generator.flow_from_directory (\n    train_dir,\n    target_size=average_image_size[:2],\n    color_mode='rgb',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=True,\n)","80658e64":"test_generator = generator.flow_from_directory (\n    test_dir,\n    target_size=average_image_size[:2],\n    color_mode='rgb',\n    class_mode='categorical',\n    batch_size=32,\n    shuffle=False,\n)","3b92e66f":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping","a3f9ab95":"stop = EarlyStopping(monitor=\"val_loss\", mode=\"min\", patience=6)","c7817b98":"model = Sequential()\nmodel.add(Conv2D(filters = 32, padding = \"same\", kernel_size = (2,2), strides = (2,2), activation = \"relu\", input_shape = average_image_size))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Conv2D(filters = 32, padding = \"same\", kernel_size = (2,2), strides = (2,2), activation = \"relu\", input_shape = average_image_size))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Conv2D(filters = 64, padding = \"same\", kernel_size = (2,2), strides = (2,2), activation = \"relu\", input_shape = average_image_size))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Flatten())\nmodel.add(Dense(units = 132, activation = \"relu\"))\nmodel.add(Dense(units = 60, activation = \"relu\"))\nmodel.add(Dense(units = 3, activation = \"softmax\"))\nmodel.compile(loss = \"categorical_crossentropy\", optimizer = \"adam\", metrics = [\"accuracy\"])","fe7de384":"model.fit_generator(train_generator, validation_data=test_generator, epochs=10, callbacks=[stop])","e0c0b08c":"model.summary()","d09b9975":"model.metrics_names","3e9120ed":"pd.DataFrame(model.history.history)[[\"loss\", \"val_loss\"]].plot(figsize =(16,6), marker = \"o\", mfc = \"g\")","eae781bc":"pd.DataFrame(model.history.history)[[\"accuracy\", \"val_accuracy\"]].plot(figsize =(16,6), marker = \"o\", mfc = \"g\")","fded12e1":"predictions = model.predict(test_generator)","f3c0257f":"predictions","9074dd13":"pred_labels = np.argmax(predictions, axis = 1)","49ef1017":"len(test_generator.classes)","08d0b5ad":"len(pred_labels)","872c7635":"from sklearn.metrics import confusion_matrix, classification_report","26cdd92e":"print(classification_report(test_generator.classes, pred_labels))","660e5210":"from tensorflow.keras.preprocessing import image","8316e929":"from random import randint\nrandom_index = randint(1, len(os.listdir(train_dir+\"\/COVID19\")))\nrandom_covid_image_name = os.listdir(train_dir+\"\/COVID19\")[random_index]","51d3ffb5":"random_covid_image_name","de2639c3":"covid_img_path = train_dir+\"\/COVID19\/\"+random_covid_image_name","d5392562":"random_covid_img = image.load_img(covid_img_path, target_size=average_image_size)","785cd387":"random_covid_img","2dc453c1":"random_covid_img_array = image.img_to_array(random_covid_img)","305610f6":"random_covid_img_array.shape","2ab8226d":"covid_img_array = np.expand_dims(random_covid_img_array, axis=0)","bfb9e80d":"covid_img_array.shape","a0d8b2ac":"np.argmax(model.predict(covid_img_array), axis =1)","ff8c47be":"test_generator.class_indices","a18ef7b5":"### Generating Test and training generators\n- These are the generators that will be passed into the model for fitting\n- first we will check the class intances for each image in the directories","de07fa30":"### Average image size\n- 400wX400hx3channels\n- lowering dimension to decrease training time","5e4e669f":"## We do not shuffle images on the test generator \n- because this will suffle the labels as well and produce inaccurate labeling","be0854b7":"#### Testing Set","855a72b7":"### Prediction of new image (Covid 19 image) \n- Model predict that the image is classify as label 0\n- To check is this is correct we need to look at the class indicies of out test_generator\n- keep in mind we are intentionally passing in a covid image for testing","ac6ad592":"### Metrics\n- Using Sklearn we will use classification report to see the accuracy of the predictions per class","61110561":"## Creating model \n- lets import the proper libraries through tensorflow and keras","5ead52ea":"### Reshaping\n- The image is in the proper shape but our dimensions are off \n- we wneed to alert the model that we are passing in 1 image, so we need our first layer of the array to be 1\n- numpy expand dimensions feature will allow us to do this easily ","f82bbd2c":"## Predicitons\n- Below our predictions are presented in probabilities \n- we will need to convert these to the proper label so we can compare to our test generator","db1f9531":"#### Lets evaluate the directories\n- checking image counts for each class\n- Appears we have a bit of an unbalance with the data\n- There are mare covid images than Normal and Pneumonia\n- This could work in our favor allowing the model to differentiate covid images better ","94920e13":"### Testing on covid image \n- Lets see if the model can predict on a covid image ","011994de":"## Predicted classes \n- The predicted classes should match the length of test generator classes \n- Lets test this below","75d967f4":"### Finding the average size of the images in the data\n- We will need to generate the average size of the the images to feed into the model\n- We will use the the training set using the Pneumonia images","98b4c73e":"### Early Stopping\n- This will set a limit on the training of our model to prevent overtraining","06c896f7":"### Generator \n- We will minipulate the images below\n- WE will not flip the images because there will never be a point where we are scanning a patient up side down","dd6225b2":"### Observing a sample image of each X-ray\n- We will grab an image from the training set from each class","b27b688f":"## Model History\n- We will take a look at the model training on the training data and validation data\n- The below diagrams lets us know that the model trained very well on the data and provided over 90% accuracy on the validation data \n- below we will made predictions to test our model \n- will also need to find a way to test the model on random data ","8586858a":"### Creating a image generator\n- This will allow us to minipulate and transform the images in the direcrtory as they are imported to them model for accurate training","f7cc8f1b":"### Random Image testing\n- Since we do not have random covid, pneumonia, or nurmal x-rays we will test the model on the data we already have and get a prediction on the label \n- lets pass the model random images from each clssificaiton and see if its accurate in predictions\n- we have to consider the image size that the image was trained on so we wil address this as well","f7c50975":"### Report\n- We can see that the model is 92% accurate \n- also seems thsat the model seems to have some trouble with label 1 \n- we will we will take a look this below of which label this is\n- over all we can be happy with a 92 % accuracy in predictions","7c3b5f1c":"## Testing generator\n- We will test the generator on a random image \n- Lets use the Pneunonia sample image we generated earlier"}}