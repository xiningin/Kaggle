{"cell_type":{"70c7118d":"code","8f50d400":"code","67dc05dd":"code","e0f8423c":"code","b8fbb638":"code","4bd586b9":"code","a6ef4966":"code","0c8088fb":"code","78741f8f":"code","ca4c8b58":"code","ccc68e2d":"code","ebb33316":"code","22c90c1f":"code","1d15c482":"code","0a967764":"code","c99f535c":"code","1b0afa33":"code","aa29d9c7":"code","f3b5360c":"code","f78dc747":"code","cf3833ed":"code","379883f3":"code","b146ce76":"code","e241d2e8":"code","c913ce33":"code","b79c518d":"code","83e78142":"code","49f70d69":"code","292ed288":"code","3cd3ab2d":"code","80db8d82":"code","b1da737e":"code","6a845c92":"code","ac2c86a2":"code","d8c46770":"markdown","8f90be5e":"markdown","6b5219c1":"markdown","0160707e":"markdown","191c0d4f":"markdown","2d35752d":"markdown","1e5d1585":"markdown","5ed93dec":"markdown","8e622b8f":"markdown","7c1fd707":"markdown","8aeb8daf":"markdown","5f88c085":"markdown","350391bd":"markdown","8e221d3f":"markdown","6a14c20c":"markdown","129b96f0":"markdown","1a1a149b":"markdown","3201fcba":"markdown","7b434c69":"markdown","f0b2a9ef":"markdown","f5833983":"markdown","d54c5416":"markdown","ea86b92f":"markdown","7a8a237d":"markdown","135ae43e":"markdown","bb6fa016":"markdown","7eeea76c":"markdown","8c3a96a8":"markdown","9971a908":"markdown","60f22c01":"markdown","6a1c46c3":"markdown","31171a76":"markdown","f869e33b":"markdown","05991899":"markdown","db22aacd":"markdown","45cc73cb":"markdown","820d5644":"markdown","53fd1516":"markdown"},"source":{"70c7118d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd# data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f50d400":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy\nimport re\nimport missingno as mso\nfrom scipy import stats\nfrom scipy.stats import ttest_ind\nfrom scipy.stats import pearsonr\nfrom sklearn.preprocessing import StandardScaler,LabelEncoder\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report","67dc05dd":"data=pd.read_csv(\"\/kaggle\/input\/weather-prediction\/seattle-weather.csv\")\ndata.head()","e0f8423c":"data.shape","b8fbb638":"import warnings\nwarnings.filterwarnings('ignore')\nsns.countplot(\"weather\",data=data,palette=\"hls\")","4bd586b9":"countrain=len(data[data.weather==\"rain\"])\ncountsun=len(data[data.weather==\"sun\"])\ncountdrizzle=len(data[data.weather==\"drizzle\"])\ncountsnow=len(data[data.weather==\"snow\"])\ncountfog=len(data[data.weather==\"fog\"])\nprint(\"Percent of Rain:{:2f}%\".format((countrain\/(len(data.weather))*100)))\nprint(\"Percent of Sun:{:2f}%\".format((countsun\/(len(data.weather))*100)))\nprint(\"Percent of Drizzle:{:2f}%\".format((countdrizzle\/(len(data.weather))*100)))\nprint(\"Percent of Snow:{:2f}%\".format((countsnow\/(len(data.weather))*100)))\nprint(\"Percent of Fog:{:2f}%\".format((countfog\/(len(data.weather))*100)))","a6ef4966":"data[[\"precipitation\",\"temp_max\",\"temp_min\",\"wind\"]].describe()","0c8088fb":"sns.set(style=\"darkgrid\")\nfig,axs=plt.subplots(2,2,figsize=(10,8))\nsns.histplot(data=data,x=\"precipitation\",kde=True,ax=axs[0,0],color='green')\nsns.histplot(data=data,x=\"temp_max\",kde=True,ax=axs[0,1],color='red')\nsns.histplot(data=data,x=\"temp_min\",kde=True,ax=axs[1,0],color='skyblue')\nsns.histplot(data=data,x=\"wind\",kde=True,ax=axs[1,1],color='orange')","78741f8f":"sns.set(style=\"darkgrid\")\nfig,axs=plt.subplots(2,2,figsize=(10,8))\nsns.violinplot(data=data,x=\"precipitation\",kde=True,ax=axs[0,0],color='green')\nsns.violinplot(data=data,x=\"temp_max\",kde=True,ax=axs[0,1],color='red')\nsns.violinplot(data=data,x=\"temp_min\",kde=True,ax=axs[1,0],color='skyblue')\nsns.violinplot(data=data,x=\"wind\",kde=True,ax=axs[1,1],color='yellow')","ca4c8b58":"plt.figure(figsize=(12,6))\nsns.boxplot(\"precipitation\",\"weather\",data=data,palette=\"YlOrBr\")","ccc68e2d":"plt.figure(figsize=(12,6))\nsns.boxplot(\"temp_max\",\"weather\",data=data,palette=\"inferno\")","ebb33316":"plt.figure(figsize=(12,6))\nsns.boxplot(\"wind\",\"weather\",data=data,palette=\"inferno\")","22c90c1f":"plt.figure(figsize=(12,6))\nsns.boxplot(\"temp_min\",\"weather\",data=data,palette=\"YlOrBr\")","1d15c482":"plt.figure(figsize=(12,7))\nsns.heatmap(data.corr(),annot=True,cmap='coolwarm')","0a967764":"data.plot(\"precipitation\",\"temp_max\",style='o') \nprint(\"Pearson correlation:\",data[\"precipitation\"].corr(data[\"temp_max\"]))\nprint(\"T Test and P value:\",stats.ttest_ind(data[\"precipitation\"],data[\"temp_max\"]))","c99f535c":"data.plot(\"wind\",\"temp_max\",style='o') \nprint(\"Pearson correlation:\",data[\"wind\"].corr(data[\"temp_max\"]))\nprint(\"T Test and P value:\",stats.ttest_ind(data[\"wind\"],data[\"temp_max\"]))","1b0afa33":"data.plot(\"temp_max\",\"temp_min\",style='o') ","aa29d9c7":"data.isna().sum()","f3b5360c":"plt.figure(figsize=(12,6))\naxz=plt.subplot(1,2,2)\nmso.bar(data.drop([\"date\"],axis=1),ax=axz,fontsize=12);","f78dc747":"df=data.drop([\"date\"],axis=1)","cf3833ed":"Q1=df.quantile(0.25)\nQ3=df.quantile(0.75)\nIQR=Q3-Q1\ndf=df[~((df<(Q1-1.5*IQR))|(df>(Q3+1.5*IQR))).any(axis=1)]","379883f3":"df.precipitation=np.sqrt(df.precipitation)\ndf.wind=np.sqrt(df.wind)","b146ce76":"sns.set(style=\"darkgrid\")\nfig,axs=plt.subplots(2,2,figsize=(10,8))\nsns.histplot(data=df,x=\"precipitation\",kde=True,ax=axs[0,0],color='green')\nsns.histplot(data=df,x=\"temp_max\",kde=True,ax=axs[0,1],color='red')\nsns.histplot(data=df,x=\"temp_min\",kde=True,ax=axs[1,0],color='skyblue')\nsns.histplot(data=df,x=\"wind\",kde=True,ax=axs[1,1],color='orange')","e241d2e8":"df.head()","c913ce33":"lc=LabelEncoder()\ndf[\"weather\"]=lc.fit_transform(df[\"weather\"])","b79c518d":"df.head()","83e78142":"x=((df.loc[:,df.columns!=\"weather\"]).astype(int)).values[:,0:]\ny=df[\"weather\"].values","49f70d69":"df.weather.unique()","292ed288":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=2)","3cd3ab2d":"knn=KNeighborsClassifier()\nknn.fit(x_train,y_train)\nprint(\"KNN Accuracy:{:.2f}%\".format(knn.score(x_test,y_test)*100))","80db8d82":"svm=SVC()\nsvm.fit(x_train,y_train)\nprint(\"SVM Accuracy:{:.2f}%\".format(svm.score(x_test,y_test)*100))","b1da737e":"gbc=GradientBoostingClassifier(subsample=0.5,n_estimators=450,max_depth=5,max_leaf_nodes=25)\ngbc.fit(x_train,y_train)\nprint(\"Gradient Boosting Accuracy:{:.2f}%\".format(gbc.score(x_test,y_test)*100))","6a845c92":"import warnings\nwarnings.filterwarnings('ignore')\nxgb=XGBClassifier()\nxgb.fit(x_train,y_train)\nprint(\"XGB Accuracy:{:.2f}%\".format(xgb.score(x_test,y_test)*100))","ac2c86a2":"input=[[1.140175,8.9,2.8,2.469818]]\not=xgb.predict(input)\nprint(\"The weather is:\")\nif(ot==0):\n    print(\"Drizzle\")\nelif(ot==1):\n    print(\"Fog\")\nelif(ot==2):\n    print(\"Rain\")\nelif(ot==3):\n    print(\"snow\")\nelse:\n    print(\"Sun\")","d8c46770":"As of it has **6 Columns** with total of **1461 Rows** as our observations in the Data set. ","8f90be5e":"**Objective of this Notebook:**\n\n***This notebook aims to:***\n* Easy and ***Begginers guide***.\n* Analyse Each and Every ***Attributes*** in the data set.\n* Build Various ***ML Models*** with the view of ***increasing accuracy*** of the Model. \n\n\nThe ***Machine learning Models used*** are:\n\n    1.K-Nearest Neighbour(KNN)\n    \n    2.Support Vector Machine(SVM)\n    \n    3.Gradient Boost\n    \n    4.Extreme Gradient Boosting(XGBC)","6b5219c1":"***Scaling the weather variables using label Encoder:***","0160707e":"From the above ***Violin plot*** we can clearly understand the Skewness of the Data as the **TAIL** indicates the skewness.\n\n# 6.2.*BELOW DIAGRAM SHOWS THE EXACT OF HOW THE* **SKEWNESS LOOKS:**","191c0d4f":"# 1. INTRODUCTION\n\n![weat.png](attachment:52742b7a-4bbd-485b-be03-7136fb11dc90.png)","2d35752d":"# 6.1.***VIOLIN PLOT***","1e5d1585":"# 10.CHECKING FOR THE USER INPUT:","5ed93dec":"# 8.DATA PREPROCESSING:","8e622b8f":"**EXTREME GRADIENT BOOSTING OR XGBCLASSIFIER:**","7c1fd707":"# 4.**DATA EXPLORATION**","8aeb8daf":"**HEATMAP:**","5f88c085":"There are **6 Variables** in this Dataset:\n* **4 Continuous** Variables.\n* **1 Variable** to accommodate the Date.\n* **1 Variable** refers the Weather.","350391bd":"It is the process of Exploring the data from the **\"RAW\"** data set tha we have taken or Imported.\n\nFirst let us Deal with the Categorical variables ","8e221d3f":"Distribution of numerical value using ***Histogram and Violin plot .***","6a14c20c":"There is a ***positive correlation*** between ***temp_max and temp_min***.","129b96f0":"![skw.png](attachment:395c4894-9fd5-4d09-b1ea-4b89be44c12d.png)","1a1a149b":"From the above box plot between the ***Weather and Precipitation*** \nthe value ***Rain*** has many **positive outliers** and both **Rain and Snow** were ***positively skewed\/has positive skewness***.","3201fcba":"here some data has ***negative*** and some have both ***positive and negative*** outliers and ***snow is negatively skewed.\n***SKEWNESS AND ITS CORRECTIONS:***\n\n![skewness.png](attachment:2718890d-308d-4fae-a5d7-0e451838d688.png)","7b434c69":"**Drop Unnecessary Variables**\n\nIn this data set Date is a unnecessary variable as it does not affect the data so it can be dropped.","f0b2a9ef":"From the above distribution it is clear that **precipitation and wind** are **Positively skewed.**\n\nAnd **temp_min** is **Negatively skewed** and both has some***outliers.***","f5833983":"# 5.**NUMERICAL OR CONTINUOUS VARIABLES**\n\n  Next we will explore the ***Continuous variables***","d54c5416":"**K-NEAREST NEIGHBOR CLASSIFIER:**","ea86b92f":"# 7.NULL VALUES:","7a8a237d":"From the Above countplot the data set contains higher amount of data with the weather datail of ***Rain and Sun*** and it also have some additionals like ***drizzle,snow and fog*** .","135ae43e":"As from the above result of ***T test and P value of 0*** indicates that the ***Null hypothesis*** in the corresponding columns is **rejected** and the columns are ***Statistically significant*** ","bb6fa016":"# 6.3.***SKEWNESS USING BOXPLOT***\n\n**OTHER EXPLORATION**","7eeea76c":"***Skewed Distribution Treatment***","8c3a96a8":"**Checking for Null values in the data set**\n\nThe below plot shows that all the columns in the data set ***doesn't contains Null values*** as each columns contains a ***total of 1461*** observations.","9971a908":"# 2.**IMPORTING THE REQUIRED LIBRARIES**","60f22c01":"**GRADIENT BOOSTING CLASSIFIER:**","6a1c46c3":"**SUPPORT VECTOR MACHINE - CLASSIFIER:**","31171a76":"***SPLITTING THE DATASET INTO DEPENDANT AND INDEPENDANT VARIABLES:***","f869e33b":"From the above box plots ,we came to know that Every ***attribute of weather*** has some ***positive outliers** and it is ***both types of skewness***.","05991899":"# 6.**HOW TO FIND THE OUTILERS OR SKEW IN DATA SET?**\n\n\n\n* ***We can find the outliers in the dataset by using following plots:***\n\n  1.**Hist plot**\n  \n  2.**Box plot**\n  \n  3.**Violin plot**\n  \n  4.**Dist plot**\nyet both ***box and violin plots*** are easier to handel with.","db22aacd":"**Remove Outliers & Infinite Values**\n\nSince this dataset contains ***Outliers ,it will be removed***,to make data set more even.","45cc73cb":"# 3.**ANALYSING THE DATASET**","820d5644":"**Numerical - Numerical**","53fd1516":"# 9.ALGORITHMS AND MODEL TRAINING:"}}