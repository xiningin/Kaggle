{"cell_type":{"f2c5adc2":"code","caf3220f":"code","eb07d36e":"code","2295801f":"code","c5d00c48":"code","15cc7789":"code","31344c9e":"code","96f5597c":"code","6b168196":"code","e1324ff4":"code","3b95a835":"code","2a7ef7c1":"code","25d72a18":"code","ba1ed82f":"code","5ea84b82":"code","280866e0":"code","8532630f":"code","dd27780b":"code","3a2b1421":"code","bcbac4bc":"markdown","8967824a":"markdown","71c40419":"markdown","16f4d27a":"markdown","bafd66df":"markdown","c79dbac0":"markdown","02af6c53":"markdown","d1f789fd":"markdown","c7e9fcae":"markdown","54ddc691":"markdown","c07e657e":"markdown","886fd7ca":"markdown"},"source":{"f2c5adc2":"#import Libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn.datasets import load_iris\niris_dataset = load_iris()","caf3220f":"# to get the key values\niris_dataset.keys()","eb07d36e":"# to see the description\niris_dataset['DESCR'][:200]","2295801f":"iris_dataset['target_names']","c5d00c48":"iris_dataset['feature_names']","15cc7789":"iris_dataset['data'][:20]","31344c9e":"iris_dataset['target']\n# 0 means setosa\n# 1 means versicolor\n# 2 means virginica","96f5597c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\n    iris_dataset['data'],iris_dataset['target'], random_state=0\n)","6b168196":"print(X_train.shape)\nprint(y_train.shape)","e1324ff4":"print(X_test.shape)\nprint(y_test.shape)","3b95a835":"!pip install mglearn","2a7ef7c1":"from pandas.plotting import scatter_matrix\nimport mglearn\n# create dataframe from data in X_train\n# label the columns using the strings in iris_dataset.feature_names\niris_dataframe = pd.DataFrame(X_train, columns=iris_dataset.feature_names)\n# create a scatter matrix from the dataframe, color by y_train\ngrr = scatter_matrix(iris_dataframe, c=y_train, figsize=(15, 15), marker='o',\n                      hist_kwds={'bins': 20}, s=60, alpha=.8, cmap=mglearn.cm3)","25d72a18":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)","ba1ed82f":"knn.fit(X_train,y_train)","5ea84b82":"new_flower = np.array([[6.8, 2.8, 4.8, 1.4]])\nnew_flower.shape","280866e0":"prediction = knn.predict(new_flower)\nprint(prediction)\nprint('Predicted target name: {}'.format(iris_dataset['target_names'][prediction]))","8532630f":"pred = knn.predict(X_test)\npred","dd27780b":"# testset score \nprint(\"test set score: {:.2f}\".format(np.mean(pred == y_test)))","3a2b1421":"print(\"Test set score: {:.2f}\".format(knn.score(X_test, y_test)))","bcbac4bc":"## Let's get started","8967824a":"## Image","71c40419":"# Classifying Iris Species","16f4d27a":"Our goal is to build a machine learning model that can learn from the measurements\nof these irises whose species is known, so that we can predict the species for a new\niris.\n**whcih technique i used?\nk-Nearest Neighbors to predict the result**","bafd66df":"![](https:\/\/www.oreilly.com\/library\/view\/machine-learning-for\/9781783980284\/assets\/3c233f63-bf41-4cc3-aa08-48c67302e81a.png)","c79dbac0":"## Building First Model: k-Nearest Neighbors","02af6c53":"We made the right\nprediction for 97% of the irises in the test set. Under some mathematical assump\u2010\ntions, this means that we can expect our model to be correct 97% of the time for new\nirises.","d1f789fd":"Our model predicts that this new iris belongs to the class 1, meaning its species is\nversicolor. But how do we know whether we can trust our model? We don\u2019t know the cor\u2010\nrect species of this sample, which is the whole point of building the model!","c7e9fcae":"## Making Predictions","54ddc691":"we will go through a simple machine learning application and create\nour first model. In the process, we will introduce some core concepts and terms.\nLet\u2019s assume that a hobby botanist is interested in distinguishing the species of some\niris flowers that she has found. She has collected some measurements associated with\neach iris: the length and width of the petals and the length and width of the sepals, all\nmeasured in centimeters. *see below image*.","c07e657e":"## Evaluating the Model\nWe can make a prediction for each iris in the test data and compare it\nagainst its label (the known species). We can measure how well the model works by\ncomputing the accuracy, which is the fraction of flowers for which the right species\nwas predicted:","886fd7ca":"## Our Goal"}}