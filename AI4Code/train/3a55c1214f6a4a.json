{"cell_type":{"497d1fb2":"code","6c735ac7":"code","fc308567":"code","acb7b2a9":"code","b224e093":"code","d60b1167":"code","3b6ce614":"code","e2595c5c":"code","0402e8f9":"code","0cd15609":"code","296917a8":"code","497a3772":"markdown","2d58f2d6":"markdown","0520b8e4":"markdown","9099150f":"markdown"},"source":{"497d1fb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c735ac7":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","fc308567":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","acb7b2a9":"Y_test=pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\nY_test.head()","b224e093":"train_data.describe()","d60b1167":"test_data.describe()","3b6ce614":"sns.countplot(train_data.Survived)","e2595c5c":"sns.countplot(train_data.Survived, hue=train_data.Sex)","0402e8f9":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","0cd15609":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","296917a8":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=4, random_state=1)\nmodel.fit(X, y)\n\nscore =model.score(X_test, Y_test['Survived'])\nprint(score)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","497a3772":"# Getting Started With Titanic","2d58f2d6":"## *Exploratory Data Analysis*","0520b8e4":"## *Reading Data from Train and Test Files*","9099150f":"## *Implementing Random Forest Algorithm*"}}