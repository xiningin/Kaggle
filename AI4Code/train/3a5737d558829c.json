{"cell_type":{"6b8e4c47":"code","e594dc9b":"code","dde2dac7":"code","419482b0":"code","5ae02633":"code","b5a616c9":"code","597c4cfb":"code","ff0592d5":"code","99a15de3":"code","e9737ef8":"code","62c95080":"code","24a1aced":"code","e62aff5d":"code","ce209278":"code","4c0e0643":"code","5bb3b965":"code","815ae954":"code","e10a4b9b":"code","e25e5f5c":"code","897dc640":"code","a1f00c5b":"code","a0fa80d4":"code","203a5214":"code","665dca3c":"code","4fbdd67e":"code","5318e29f":"code","5c6427be":"code","54a04b93":"code","bc876eb8":"markdown","b565e0a8":"markdown"},"source":{"6b8e4c47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e594dc9b":"import matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport seaborn as sns","dde2dac7":"data = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')","419482b0":"data.head(10)","5ae02633":"data.info()","b5a616c9":"data.rename(columns = {'parental level of education':'parentEducation', \n                       'test preparation course':'testCourse', \n                       'math score':'mathScore',\n                       'reading score':'readingScore', \n                       'writing score':'writingScore',\n                        'race\/ethnicity': 'race'}, inplace=True)","597c4cfb":"pp.ProfileReport(data)","ff0592d5":"data['score'] = ((data['mathScore']+ data['readingScore'] + data['writingScore'])\/ 3)","99a15de3":"data.head(5)","e9737ef8":"data.groupby(['race', 'parentEducation'])['score'].mean()","62c95080":"plt.figure(figsize=(10,5))\ndata.gender.value_counts().plot(kind='barh',color=['salmon', 'lightgreen'])\nplt.xlabel('Count', fontsize=20)\nplt.ylabel('Gender', fontsize=20)\ny = data.gender.value_counts()\n\nfor index, count in enumerate(y):\n    plt.text(count, index,\n             str(count))","24a1aced":"plt.figure(figsize=(10,20))\nplt.subplot(3,1,1)\nsns.distplot(data['mathScore'], color='red');\nplt.subplot(3,1,2)\nsns.distplot(data['writingScore'],color='black')\nplt.subplot(3,1,3)\nsns.distplot(data['readingScore'], color='blue')","e62aff5d":"plt.figure(figsize=(10,15))\nplt.subplot(3,1,1)\nsns.scatterplot(x='mathScore', y=\"readingScore\", hue='gender', data=data)\nplt.subplot(3,1,2)\nsns.scatterplot(x='mathScore', y='writingScore', hue='gender', data=data)\nplt.subplot(3,1,3)\nsns.scatterplot(x='readingScore', y='writingScore', hue='gender', data=data)","ce209278":"group_data = data.groupby('race')[\"mathScore\", \"readingScore\", \"writingScore\"].mean().round()\ngroup_data.plot(kind='bar', figsize=(14, 7), color=['LightSalmon','Crimson','DarkRed'],width=0.2)","4c0e0643":"plt.figure(figsize=(10,10))\nsns.heatmap(data.corr(), annot=True, cmap='twilight_shifted')","5bb3b965":"data['race'] = data.race.astype('category')\ndata['gender'] = data.gender.astype('category')\ndata['parentEducation'] = data.parentEducation.astype('category')\ndata['testCourse'] = data.testCourse.astype('category')","815ae954":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","e10a4b9b":"data[\"race\"] = le.fit_transform(data[\"race\"])\ndata[\"gender\"] = le.fit_transform(data[\"gender\"])\ndata[\"parentEducation\"] = le.fit_transform(data[\"parentEducation\"])\ndata[\"testCourse\"] = le.fit_transform(data[\"testCourse\"])\ndata[\"lunch\"] = le.fit_transform(data[\"lunch\"])","e25e5f5c":"data.head()","897dc640":"score = data[\"score\"]","a1f00c5b":"data = data.drop([\"score\"], axis = 1)","a0fa80d4":"from sklearn.model_selection import train_test_split","203a5214":"x_train, x_test, y_train, y_test = train_test_split(data, score, test_size = 0.30)","665dca3c":"from sklearn.ensemble import RandomForestRegressor\nrcr = RandomForestRegressor(random_state = 42)","4fbdd67e":"rcr.fit(x_train,y_train)","5318e29f":"y_pred= rcr.predict(x_test)","5c6427be":"np.sqrt(((y_pred - y_test) ** 2).mean())","54a04b93":"print(\"Train Accuracy:\",rcr.score(x_train, y_train))\nprint(\"Test Accuracy:\",rcr.score(x_test, y_test))","bc876eb8":"I must change the column names.","b565e0a8":"Firstly we are looking for descriptive statistics with pandas profil report. There ise no null data. Correlations between scores does not surprise me. We will learn more about grouping operations and visualization operations. I want to get the average score of each student for a few operations.I don't think this will be a problem since there is a correlation between the scores.\n"}}