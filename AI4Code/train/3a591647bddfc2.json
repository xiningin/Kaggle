{"cell_type":{"a316b7b3":"code","d12eca0a":"code","10f668de":"code","c26ba7f9":"code","53c9a70e":"code","78d6a39d":"code","5709677e":"code","ea8aa089":"code","64900d61":"code","a060e209":"code","9bfe1414":"code","1da51892":"code","cbee3456":"code","d4d23aac":"code","ca15623f":"code","b84224b1":"code","9f21a911":"code","2de5cdca":"code","8955b3e1":"code","2f55c03d":"code","f6f719c2":"code","f8d702b9":"code","8c4e1874":"code","e6060286":"code","de5b05eb":"code","387990ea":"code","4f8e2a27":"code","0492e0a8":"code","192307d0":"code","e76fb51e":"code","3a4a8dc4":"code","d2a4a2b5":"code","9cdaadf5":"code","e55b89e0":"code","f62705a3":"code","bbd89891":"code","05808793":"code","4fb232d3":"code","6da812d4":"code","f509c5c2":"code","414f9b29":"code","3efc3b0b":"code","0284ffdb":"code","8a0768f1":"code","48336364":"markdown","f77691f1":"markdown","5129299d":"markdown","729d8fc7":"markdown","28405c8d":"markdown","b1923903":"markdown","2cfc6c0d":"markdown","bd8ed5d9":"markdown","7954b475":"markdown","3a0bd057":"markdown","2da86f08":"markdown","c5f432f7":"markdown","23dd4178":"markdown","7161bc45":"markdown","e58882cc":"markdown"},"source":{"a316b7b3":"#Print hello world\nprint(\"Hello world!\")","d12eca0a":"a = 2 #Assinging integer value 2 to variable a\nprint(a)\ntype(a) #Which will return the type of variable","10f668de":"a = 2.44 #Assinging float value 2.44 to variable a\nprint(a)\ntype(a) #Which will return the type of variable","c26ba7f9":"a = 6 #assinging value 6 to variable a\nb = 3 #assinging value 3 to variable b\nc = a \/ b \nprint(c)\ntype(c) #In case of division it always returns float value","53c9a70e":"a = 7 #assinging value 6 to variable a\nb = 3 #assinging value 3 to variable b\nc = a \/\/ b # The \/\/ operator gives us a result that's rounded down to the next integer.\nprint(c)","78d6a39d":"a = 700 #assinging value 6 to variable a\nb = 3 #assinging value 3 to variable b\nc = ( a * b ) \/ 100 # returns 21\nprint(c)\nd = a + b \/ 100 # \/ and * has more weight than + , so 3\/100 = 0.03 and then it is added to 700.\nprint(d)","5709677e":"print(max(10, 20, 30))\nprint(min(20, 10, 30))","ea8aa089":"print(abs(-21)) # print absolute value\nprint(abs(21))\n","64900d61":"print(int('201') + 1) #converting string to number\nprint(float(201)) #converting int to float","a060e209":"pi = 3.14159 # approximate\ndiameter = 3\n\nradius = diameter \/ 2;\nprint(radius)\narea = pi * ( radius ** 2)\nprint(area)\n","9bfe1414":"a = [1, 2, 3]\nb = [3, 2, 1]\nprint(\"value of a:\", a)\nprint(\"value of b:\", b)\nprint(\"Picking value from index [1]:\",a[1]) # list index start from 0\na, b = b, a #easy way to swap values\nprint(\"value of a after swap:\", a)\nprint(\"value of b after swap:\", b)","1da51892":"print(7%2) #modular operation","cbee3456":"help(round) #helper function","d4d23aac":"def sum(a, b):\n    return a+b\nprint(sum(5, 6))","ca15623f":"def sum(a, b):\n    \"\"\"\n    This function will sum of two numbers, eg: sum(5, 6)\n    \"\"\"\n    return a+b","b84224b1":"help(sum)","9f21a911":"def print_hello(name=\"world\"):\n    print(\"Hello,\", name)\n    \nprint_hello()\nprint_hello(name=\"ThatCoder\")\nprint_hello(\"Pythonistas\")\n","2de5cdca":"def print_hello(name):\n    print(\"Hello,\", name)\n    \ndef call(fn, args): \/\/passing function as argument\n    fn(args)\n    \ncall(print_hello, \"world\")","8955b3e1":"a = True\nb = False\nprint(a)\nprint(b)\ntype(a)\n","2f55c03d":"def larger(a):\n    return a > 30\nprint(larger(10))\nprint(larger(40))","f6f719c2":"3.0 == 3","f8d702b9":"3.0 == \"3\"","8c4e1874":"def larger(a):\n    return a > 30 and a == 40\nprint(larger(32))\nprint(larger(40))","e6060286":"def larger(a):\n    return a > 30 or a == 40\nprint(larger(32))\nprint(larger(40))","de5b05eb":"def if_cond(a):\n    if a > 5:\n        print(a, \"is greater than 5\")\n    elif a > 2:\n        print(a, \"is greater than 2\")\n    else:\n        print(a, \"is less than 2 \")\n\nif_cond(6)\nif_cond(3)\nif_cond(1)","387990ea":"def cond(a):\n    b = 'heyhey' if a < 50 else 'hihi'\n    print(b)\n    \ncond(45)\ncond(55)","4f8e2a27":"a = [1, 2, 3]\nprint(\"1: \", a)\nb = [\"apple\", \"orange\"]\nprint(\"2: \", b)\n\nprint(\"3: \", b[0])\nprint(\"4: \", a[-1]) # last element of array\n\nprint(\"5: \", a[1:3]); # start from first index and scan upto third element\nprint(\"6: \", a[:3]); #assumed start index and 0\nprint(\"7: \",a[2:]) # from index 2 to all element\n\nc = [1, \"red\"]\nprint(\"8: \",c)\n\nd = [\n    [1, 2, 3],\n    [3, 4, 5],\n    [6, 7, 8]\n]  # multi dimensional list\n\nprint(\"9: \",d)\nprint(\"10: \",d[0]) \nprint(\"11: \",d[0][0])\nprint(\"12: \",d[0][0:2])","0492e0a8":"a = [1, 2, 3, 4, 5, 6]\nprint(\"length of List a\", len(a))\nb = [4, 3, 6, 1, 2, 5]\nc = [\"orange\", \"apple\"]\nprint(\"Sorted List:\", sorted(b))\nprint(\"Max number in List b:\", max(b))\nprint(\"Max number in List b:\", min(b))\nprint(\"Sorted String List:\", sorted(c))","192307d0":"a = [1, 2, 3, 4, 5, 6]\na.pop();\nprint(a)\na.append(7);\nprint(a)\nc = 4 + 3j #imaginary number (complex number)\nprint(c.imag)\n","e76fb51e":"a = [1, 2, 3, 4, 5, 6]\nfor i in a:\n    print(i,end= \" \") #print with space\n\nfor i in a:\n    print(i) #print in new line\n\nfor i in range(2):\n    print(i)","3a4a8dc4":"a = (2, 2, 2, 3, 3, 5) # look at this new way of writing list\nb = 1\nfor value in a:\n    b = value * b\n\nprint(b)\nb = (\n    (1, 2, 3),\n    (2, 3, 4)\n)\nprint(b)","d2a4a2b5":"i = 0\nwhile i < 10:\n    print(i, end=\" \")\n    i = i+1\nprint(\"\\n\")\ni = 0\nwhile i < 10:\n    print(i, end=\" \")\n    i+=1","9cdaadf5":"a = 'Hello World'\nb = 'There\\'s a villain'\nprint(a)\nprint(b)\nc = 'This is a car'\nprint(c.upper())\nprint(c.lower())\nprint(c.index(\"is\"))\nprint( a + \" \" + b )","e55b89e0":"a = {'one':1, 'two':2, 'three':3}\nprint(a['two'])\nprint(\"\\n\")\n\na['four'] = 4\nprint(a)\nprint(\"\\n\")\n\nprint(\"loop dict elemets:\")\nfor i in a: \n    print(i + \":\", a[i])","f62705a3":"import math\n\nprint(math.log(32, 2))\nprint(math.pi)\n","bbd89891":"from math import *\n\nprint(log(32, 2))\nprint(pi)","05808793":"import numpy\n\na = numpy.random.randint(low=1, high=6, size=10)\nprint(a)\ntype(a)","4fb232d3":"print(dir(a)) #dir() function attempts to return a list of valid attributes for the given object.","6da812d4":"print(a.mean())","f509c5c2":"print(a.sum())","414f9b29":"b= a.tolist() #converting numpy array to list\nprint(b)","3efc3b0b":"a.ravel() # returing as flatened array","0284ffdb":"a < 3","8a0768f1":"x = [ [1, 2, 3], [4, 5, 6] ]\nx_numpy = numpy.asarray(x) #list to numpy array\nprint(x_numpy)","48336364":"Loops","f77691f1":"**Dictionaries**\n\n> Key - value pair ( like JSON in JavaScript )","5129299d":"**If - Else Statement**","729d8fc7":"For loop","28405c8d":"**numpy **\n\nNumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays.","b1923903":"In python you can return from a function without adding return value or return statement","2cfc6c0d":"**Lists**","bd8ed5d9":"> **Hello Pythonista's,**\n\nThe NoteBook includes the following,\n\n* Data structures\n* Loops\n* Conditional statements\n* Functions and helper\n* List\n* Tuple\n* Dictionary\n* And some basics of Numpy and math Modules\n","7954b475":"**Boolean and Conditional Expression**","3a0bd057":"**Passing function as Argument**","2da86f08":"**Minimum and Maximum number**","c5f432f7":"**While Loop**","23dd4178":"**Strings**","7161bc45":"**Define a function call**","e58882cc":"**Lists**\n\nList are array like datastructure in python."}}