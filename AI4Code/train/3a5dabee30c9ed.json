{"cell_type":{"e4421c06":"code","5ffc5e02":"code","244e62c0":"code","a15a8e8c":"code","a2ea7c97":"code","0b285db5":"code","aea20257":"code","a616fc99":"code","9dfa0e66":"code","f1e4527a":"code","0eb2e7e9":"code","47f403fe":"code","088b48cf":"code","93ac4d90":"code","168a6a55":"code","afd8e8a9":"code","cd09d089":"code","a239bf64":"code","ccde219f":"code","96551735":"code","c089710e":"code","2285586b":"code","90e9a7eb":"code","793a3300":"code","ca12a180":"code","2a99778f":"code","6496fbb1":"code","1feaef92":"code","d29b9699":"code","cdd6454d":"code","64a932af":"code","d59a3e0a":"code","4445e0d2":"code","a08c8a2f":"code","963fa529":"code","fa9d649d":"code","cef93e9a":"code","a86e4989":"code","d5552424":"code","0bf706ae":"code","ec86d279":"code","f1bf7ddd":"code","35622003":"code","563bd083":"markdown","8c1d5e6c":"markdown","d7fea22c":"markdown","7bd01bd5":"markdown","33905079":"markdown","8b778969":"markdown","7b4425a3":"markdown","37a4ca1e":"markdown","739eb650":"markdown","24c98960":"markdown","5fcde4be":"markdown","e7d5247d":"markdown","56a8f0b7":"markdown"},"source":{"e4421c06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.io as pio\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ffc5e02":"df = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")","244e62c0":"df.head()","a15a8e8c":"df.shape","a2ea7c97":"df.isnull().values.any()","0b285db5":"df.corr()","aea20257":"df.info","a616fc99":"display(df.info(),df.head())","9dfa0e66":"df.drop([\"director\",\"cast\"],axis =1,inplace=True)","f1e4527a":"df.head()","0eb2e7e9":"df['type'].value_counts()","47f403fe":"df['listed_in'].value_counts()","088b48cf":"df['country'].value_counts()","93ac4d90":"df['country'].replace(np.nan,\"United States\",inplace=True)","168a6a55":"df['date_added'].value_counts()","afd8e8a9":"df['country'].replace(np.nan,\"France\",inplace=True)","cd09d089":"df['date_added'].value_counts()","a239bf64":"netflix_date = df[['date_added']].replace(np.nan,'Not Added')\nnetflix_date[\"release_month\"] = netflix_date['date_added'].apply(lambda x: x.lstrip().split(\" \")[0])","ccde219f":"netflix_date.head()","96551735":"netflix_date[\"release_month\"].value_counts()","c089710e":"netflix_date.drop(\"date_added\",axis=1,inplace=True)\nnetflix_date.head()","2285586b":"netflix = pd.concat([df,netflix_date],axis=1)\nnetflix.head()","90e9a7eb":"netflix.drop(\"date_added\",axis=1,inplace=True)\nnetflix.head()","793a3300":"df[\"rating\"].value_counts()","ca12a180":"df[\"rating\"].isnull().sum()","2a99778f":"sns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"type\", data=df, palette=\"Set2\")","6496fbb1":"plt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"rating\", data=df, palette=\"Set2\", order=df['rating'].value_counts().index[0:15])","1feaef92":"sns.set()\nplt.figure(figsize=(25,9))\nsns.countplot(x=\"rating\",data= df,hue= \"type\",order = df['rating'].value_counts().index[0:15])\nplt.xticks(rotation=45)\nplt.show()","d29b9699":"df.head()","cdd6454d":"sns.set()\nplt.figure(figsize=(20,8))\nsns.countplot(x=\"release_month\",data= netflix,order = netflix['release_month'].value_counts().index[0:12])\nplt.xticks(rotation=45)\nplt.show()","64a932af":"df[\"country\"].value_counts().head()","d59a3e0a":"top = df['country'].value_counts()[0:8]\ntop.index","4445e0d2":"fig = px.pie(netflix,values = top,names = top.index,labels= top.index)\nfig.update_traces(textposition ='inside',textinfo='percent+label')\nfig.show()","a08c8a2f":"tabcorr = df.corr()","963fa529":"tabcorr","fa9d649d":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","cef93e9a":"top_listed_in=netflix[\"listed_in\"].value_counts()[0:25]\ntop_listed_in.head()","a86e4989":"fig = px.pie(netflix,values = top_listed_in,names = top_listed_in.index,labels= top_listed_in.index)\nfig.update_traces(textposition ='inside',textinfo='percent+label')\nfig.show()","d5552424":"old = netflix.sort_values(\"release_year\",ascending=True)\nold[[\"title\",\"type\",\"country\",\"release_year\"]].head(20)","0bf706ae":"netflix[netflix[\"country\"] == \"France\"]","ec86d279":"netflix[netflix[\"country\"] == \"United Kingdom\"]","f1bf7ddd":"Country = pd.DataFrame(df[\"country\"].value_counts().reset_index().values,columns=[\"country\",\"TotalShows\"])\nCountry.head()","35622003":"top20=top[0:20]\ntop20.plot(kind='bar',x='title',y='no_of_shows', color='purple')","563bd083":"*On peut afficher les pays les plus cr\u00e9ateurs de contenu :*","8c1d5e6c":"***Voyons le contenu de la plateforme par genre***","d7fea22c":"**On peut aussi voir le contenu selon la classification :**","7bd01bd5":"***Lecture du dataset***","33905079":"***Regardons par exemple le nombre de vieux films qui sont sur la plateforme***","8b778969":"*On peut voir que \u00e7a ne sert \u00e0 rien de chercher la corr\u00e9lation entre le nom du programme et l'ann\u00e9e de sortie, il faudrait peut-\u00eatre la faire le type de programme et le nombres de vues si on avait ces donn\u00e9es*","7b4425a3":"*On peux voir que les Etats-Unis sont en t\u00eate de classement des cr\u00e9ateurs de contenu*","37a4ca1e":"*On peut representer graphiquement le contenu de la plateforme selon la classification*","739eb650":"*pour enlever les nan on va droper les noms des r\u00e9alisateurs et des acteurs*","24c98960":"**Recherche des corr\u00e9lations**","5fcde4be":"*Selon le pays d'origine du contenu :*","e7d5247d":"***Visualisation graphique du dataset***","56a8f0b7":"*Voyons le nombre de sorties apr mois de l'ann\u00e9e :*"}}