{"cell_type":{"6a449102":"code","6ea8cc32":"code","9aee9166":"code","039bfee6":"code","971005e3":"code","d966ea04":"code","b09c1bc0":"code","ade45b4f":"code","6da5c099":"code","9f41164f":"code","e3d89f44":"code","0a9b5729":"code","44621e04":"code","a9bcab0c":"code","1afcdf1d":"code","2c4af448":"code","640db8da":"code","5588c2b3":"code","44434a1e":"code","dd9d81ea":"code","0bc44b08":"code","6db2d6a4":"markdown","db281549":"markdown","bd501235":"markdown","d98d3a6b":"markdown","2741c0f4":"markdown","dc9d257d":"markdown","f7ab1acf":"markdown"},"source":{"6a449102":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport random\nimport seaborn as sns\nfrom fbprophet import Prophet\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf","6ea8cc32":"df_org = pd.read_csv('..\/input\/world-unemployment-rate-from-oecd\/DP_LIVE_10012020131736460 Unemployment Rate OECD.csv', index_col = 'TIME', parse_dates = True)\ndf_org.head()","9aee9166":"df_rus = df_org.loc[df_org['LOCATION']==('RUS')]\ndf_rus = df_rus[['SUBJECT', 'Value']]\ndf_rus.head()","039bfee6":"df_rus.describe()","971005e3":"df_rus.info()","d966ea04":"#Looking for the unique values in the column 'SUBJECT'\ndf_rus.SUBJECT.unique()","b09c1bc0":"#preparing data by pivoting the table\ndf = df_rus.pivot_table(values='Value',index=['TIME'],columns=['SUBJECT'])\ndf.head()","ade45b4f":"#removing NAs\ndf = df.dropna()\ndf.head()","6da5c099":"#renaming columns with .rename\ndf.rename(columns={\"MEN\":\"MEN\", \"TOT\":\"TOTAL\", \"WOMEN\":\"WOMEN\"}, inplace = True)\ndf.head()","9f41164f":"#rearranging columns\ndf = df[[\"MEN\", \"WOMEN\", \"TOTAL\"]]\ndf.head()","e3d89f44":"#coloring table\ncm = sns.light_palette(\"blue\", as_cmap=True)\n\ns = df.style.background_gradient(cmap=cm)\ns","0a9b5729":"#plotting the data by markers and different colors for each time series, specifying the size of the graph\n#labeling y-axis and the title, adding the grid\nplt.figure(figsize=(12,6), dpi= 80)\nplt.plot(df[\"TOTAL\"],'g^',df[\"WOMEN\"],'ro',df[\"MEN\"],'bs')\nplt.ylabel('Unemployment Rate')\nplt.title(\"Russian Unemployment\", fontsize=22)\nplt.grid(axis='both', alpha=.3)\nplt.show()","44621e04":"#plotting the time series with the lines instead of markers, adding the legend with specific labels\nplt.figure(figsize=(10,6), dpi= 80)\nplt.plot(df.index, df[\"TOTAL\"],'g',df[\"WOMEN\"],'r',df[\"MEN\"],'b')\nplt.legend(labels=('Average', 'Women', 'Men'))\nplt.ylabel('Unemployment')\nplt.title(\"Russian Unemployment\", fontsize=22)\nplt.grid(axis='both', alpha=.3)\n# Remove borders\nplt.gca().spines[\"top\"].set_alpha(0.0)    \nplt.gca().spines[\"bottom\"].set_alpha(0.3)\nplt.gca().spines[\"right\"].set_alpha(0.0)    \nplt.gca().spines[\"left\"].set_alpha(0.3)   \nplt.show()","a9bcab0c":"#plotting only \"WOMEN\" values, changing color, marker and '-' line style\nplt.figure(figsize=(10,6), dpi= 80)\nplt.plot_date(df.index, \"WOMEN\", data=df, color='r', ls = '-', marker = '')\nplt.legend(loc = 'upper center')\n#to fit in the date labels\nplt.tight_layout()\nplt.show()","1afcdf1d":"#another way of doing it\ndf['WOMEN'].plot(figsize=(10,6), color='purple')\nplt.legend(loc = 'upper center')\n#to fit in the date labels\n#fig.autofmt_xdate()\nplt.tight_layout()\nplt.show()","2c4af448":"#changing the interval or slising the date\nfig, ax = plt.subplots(figsize=(10,6))\nax.plot(df.loc['2010-01':'2020-02', 'TOTAL'], color = 'g',marker='o', linestyle='-')\nax.set_title('Unemployment')\nplt.grid(axis='both', alpha=.2)\n\n#removing the borders\nplt.gca().spines[\"top\"].set_alpha(0.0)    \nplt.gca().spines[\"bottom\"].set_alpha(0.3)\nplt.gca().spines[\"right\"].set_alpha(0.0)    \nplt.gca().spines[\"left\"].set_alpha(0.3)   \nplt.show()","640db8da":"#creating subplots\nfig, axes = plt.subplots(2,1, figsize=(10,7), sharex=True)\ndf[[\"WOMEN\", \"MEN\"]].plot(subplots=True, ax=axes)","5588c2b3":"#plotting the stackable graphs and changing its colors\nplt.figure(figsize=(25,16), dpi= 100)\ndf.plot.area(color = sns.color_palette(\"Set2\"))\nplt.legend(loc='best')\nplt.title(\"Russian Unemployment\", fontsize = 22)\nplt.show()","44434a1e":"#another way to change the colors\nplt.figure(figsize=(25,16), dpi= 100)\ndf.plot.area(color = [\"#9b59b6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"])\nplt.legend(loc='best')\nplt.title(\"Russian Unemployment\", fontsize = 22)\nplt.show()","dd9d81ea":"#percentage stacked area chart\ndata = df[[\"MEN\", \"WOMEN\"]]\ndata_perc = data.divide(data.sum(axis=1), axis=0)\n \n#create the plot\ndata_perc.plot.area(color = sns.color_palette(\"Set1\"))\nplt.legend(loc='best')\nplt.margins(0,0)\nplt.title(\"Russian Unemployment\", fontsize = 22)\nplt.show()","0bc44b08":"#autocorrelation and partial autocorrelation\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nfig, (ax1, ax2) = plt.subplots(1, 2,figsize=(16,6), dpi= 80)\nplot_acf(df[\"TOTAL\"].values.tolist(), ax=ax1, lags=50, color = \"purple\", marker = \"^\")\nplot_pacf(df[\"TOTAL\"].values.tolist(), ax=ax2, lags=20, color = \"yellow\", marker = \"o\")\n\n# Decorate\n# lighten the borders\nax1.spines[\"top\"].set_alpha(.3); ax2.spines[\"top\"].set_alpha(.3)\nax1.spines[\"bottom\"].set_alpha(.3); ax2.spines[\"bottom\"].set_alpha(.3)\nax1.spines[\"right\"].set_alpha(.3); ax2.spines[\"right\"].set_alpha(.3)\nax1.spines[\"left\"].set_alpha(.3); ax2.spines[\"left\"].set_alpha(.3)\n\n# font size of tick labels\nax1.tick_params(axis='both', labelsize=14)\nax2.tick_params(axis='both', labelsize=14)\nplt.show()","6db2d6a4":"**Conclusion:**\nI have used a few visualizations and played with different designs using pandas and matplotlib libraries. \n\nThe unemployment rate in Russia is at it's all-time lowest, which represents a good trend for the country's economy. Historically, the last spike was over 10 years ago during the 2008 financial crisis. \n\nIn 90's it was over 13 % due to the country's crisis as an aftermath of the Soviet Union collapse. \n\nAs for the gender proportions, it is clear that it's about 50% \/ 50% of men's and women's unemployment in the total labour force and does not depend on the country's economy.","db281549":"We have 329 non-null observations with the maximum of 13.73 %, minimum of 4.38 % and mean of 7.18 %.","bd501235":"**Plotting with Pandas**","d98d3a6b":"This was ment to help berinners to look at the possibilities in Pandas and getting more comfortable working with Python and feeling it's capabilities.\n\nThe unemployment rate is an economic indicator that represents a percentage of the unemploymed people in the total labour force. It's a lagging indicator, meaning that it rises or falls as a result of changing economic conditions, rather than anticipating them. \n\nRussia's unemployment held steady at 4.6 percent in the 3 quarter of 2019, that was slightly below market expectations of 4.7 percent.\n\nIn this kaggle I want to give a few Data Visualisation examples for beginners using dataset of the Unemployment rate in Russia. I am using Python3, Pandas and Matplotlib.\n","2741c0f4":"First, I import these libraries: ","dc9d257d":"Here I filter out data for the Russian Federation and leave out unneeded for this Time Series Data Visualisation project. ","f7ab1acf":"And upload the data, indicating the TIME variable as an index column and creating new Time Series."}}