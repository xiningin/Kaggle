{"cell_type":{"b87a5d66":"code","011ac667":"code","82eb7884":"code","291c3e8a":"code","16b583f9":"code","3b7a322a":"code","96af4e94":"code","faad1c72":"code","d895a59a":"code","a5ed1589":"code","7abf9620":"code","9e4f39b8":"code","bff007aa":"code","46e513e2":"code","3d272feb":"code","8e61b6d4":"code","73f04a65":"code","f9ee3d58":"code","a44782b3":"code","8a3e11c3":"code","349464d7":"markdown"},"source":{"b87a5d66":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\n\nfrom mlxtend.plotting import plot_confusion_matrix\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px","011ac667":"immo_data = pd.read_csv(\"..\/input\/apartment-rental-offers-in-germany\/immo_data.csv\")\n# Source: https:\/\/www.kaggle.com\/corrieaar\/apartment-rental-offers-in-germany","82eb7884":"immo_data.head(10)","291c3e8a":"# A view of all the columns in the database and the amount of non-null data in each\nimmo_data.info()","16b583f9":"# Name of the German states (regio1) in the database\nimmo_data[\"regio1\"].unique()","3b7a322a":"# Renaming columns\nimmo_data.rename(columns = {\"regio1\": \"state\", \"regio2\": \"city\", \"regio3\": \"locality_district\"}, inplace = True)\n\n# Sorting data\nimmo_data = immo_data.sort_values(by = [\"state\", \"city\", \"locality_district\"]).reset_index(drop = True)\n\nimmo_data[[\"state\", \"city\", \"locality_district\", \"totalRent\", \"livingSpace\",\"typeOfFlat\", \"noRooms\", \"floor\"]].head(20)","96af4e94":"#Data only for Berlin sorted by regions\nimmo_data_berlin = immo_data[immo_data[\"state\"] == \"Berlin\"].reset_index(drop = True)\n\nimmo_data_berlin[[\"city\", \"locality_district\", \"totalRent\", \"livingSpace\",\"typeOfFlat\", \"noRooms\", \"floor\"]]","faad1c72":"# Deleting rows without totalRent data\nimmo_data_berlin.dropna(subset = [\"totalRent\"], inplace = True)\nimmo_data_berlin.reset_index(drop = True, inplace = True)\n\nimmo_data_berlin[[\"city\", \"totalRent\"]]","d895a59a":"# Graphing living space against total rent per locality_district in Berlin with seaborn\nplt.figure(figsize = (14,10))\n\nsns.scatterplot(x = immo_data_berlin.livingSpace[immo_data_berlin.livingSpace < 200],\n                y = immo_data_berlin.totalRent[immo_data_berlin.totalRent < 2500],\n                hue = immo_data_berlin.locality_district)\n\n# Setting the legend with the localities to the right\nplt.legend(bbox_to_anchor = (1.05, 1), loc = 2, borderaxespad = 0.)\n\n# This graph doesn't provide much relevant info","a5ed1589":"# Creating data frame with the average (mean) totalRent per locality_district\nimmo_data_berlin_mean = immo_data_berlin.groupby(\"locality_district\").totalRent.agg(\"mean\")\nimmo_data_berlin_mean = pd.DataFrame(immo_data_berlin_mean)\nimmo_data_berlin_mean.sort_values(by = [\"totalRent\"], inplace = True)\n\nimmo_data_berlin_mean","7abf9620":"# Graphing each district against average total rent with seaborn\nplt.figure(figsize=(14,10))\n\nsns.barplot(x = immo_data_berlin_mean.index, y = immo_data_berlin_mean.totalRent)\n\nplt.xticks(rotation = -90)","9e4f39b8":"# List of all Berlin localities in the database (79), some of which have an incorrect _district\nimmo_data_berlin.locality_district.unique()","bff007aa":"# Associating each locality with its respective district in Berlin for geojson mapping purposes\n\ndistrict = []\n\nfor x in range(len(immo_data_berlin.locality_district)):\n    if immo_data_berlin.locality_district[x] in [\"Charlottenburg_Charlottenburg\", \"Wilmersdorf_Wilmersdorf\", \"Schmargendorf_Wilmersdorf\", \"Grunewald_Wilmersdorf\"]:\n        district.append(\"Charlottenburg-Wilmersdorf\")\n    elif immo_data_berlin.locality_district[x] in [\"Friedrichshain_Friedrichshain\", \"Kreuzberg_Kreuzberg\"]:\n        district.append(\"Friedrichshain-Kreuzberg\")\n    elif immo_data_berlin.locality_district[x] in [\"Friedrichsfelde_Lichtenberg\", \"Karlshorst_Lichtenberg\", \"Lichtenberg_Lichtenberg\", \"Falkenberg_Hohensch\u00f6nhausen\", \"Malchow_Hohensch\u00f6nhausen\", \"Neu_Hohensch\u00f6nhausen_Hohensch\u00f6nhausen\", \"Alt_Hohensch\u00f6nhausen_Hohensch\u00f6nhausen\", \"Rummelsburg_Lichtenberg\"]:\n        district.append(\"Lichtenberg\")\n    elif immo_data_berlin.locality_district[x] in [\"Marzahn_Marzahn\", \"Biesdorf_Marzahn\", \"Kaulsdorf_Hellersdorf\", \"Mahlsdorf_Hellersdorf\", \"Hellersdorf_Hellersdorf\"]:\n        district.append(\"Marzahn-Hellersdorf\")\n    elif immo_data_berlin.locality_district[x] in [\"Mitte_Mitte\", \"Tiergarten_Tiergarten\", \"Wedding_Wedding\"]:\n        district.append(\"Mitte\")\n    elif immo_data_berlin.locality_district[x] in [\"Neuk\u00f6lln_Neuk\u00f6lln\", \"Britz_Neuk\u00f6lln\", \"Buckow_Neuk\u00f6lln\", \"Rudow_Neuk\u00f6lln\"]:\n        district.append(\"Neuk\u00f6lln\")\n    elif immo_data_berlin.locality_district[x] in [\"Prenzlauer_Berg_Prenzlauer_Berg\", \"Wei\u00dfensee_Wei\u00dfensee\", \"Blankenburg_Wei\u00dfensee\", \"Heinersdorf_Wei\u00dfensee\", \"Karow_Wei\u00dfensee\", \"Pankow_Pankow\", \"Buch_Pankow\", \"Franz\u00f6sisch_Buchholz_Pankow\", \"Niedersch\u00f6nhausen_Pankow\", \"Rosenthal_Pankow\"]:\n        district.append(\"Pankow\")\n    elif immo_data_berlin.locality_district[x] in [\"Reinickendorf_Reinickendorf\", \"Tegel_Reinickendorf\", \"Konradsh\u00f6he_Reinickendorf\", \"Heiligensee_Reinickendorf\", \"Frohnau_Reinickendorf\", \"Hermsdorf_Reinickendorf\", \"Waidmannslust_Reinickendorf\", \"L\u00fcbars_Reinickendorf\", \"Wittenau_Reinickendorf\"]:\n        district.append(\"Reinickendorf\")\n    elif immo_data_berlin.locality_district[x] in [\"Spandau_Spandau\", \"Haselhorst_Spandau\", \"Siemensstadt_Spandau\", \"Staaken_Spandau\", \"Gatow_Spandau\", \"Kladow_Spandau\"]:\n        district.append(\"Spandau\")\n    elif immo_data_berlin.locality_district[x] in [\"Steglitz_Steglitz\", \"Lichterfelde_Steglitz\", \"Lankwitz_Steglitz\", \"Zehlendorf_Zehlendorf\", \"Dahlem_Zehlendorf\", \"Nikolassee_Zehlendorf\", \"Wannsee_Zehlendorf\"]:\n        district.append(\"Steglitz-Zehlendorf\")\n    elif immo_data_berlin.locality_district[x] in [\"Sch\u00f6neberg_Sch\u00f6neberg\", \"Friedenau_Sch\u00f6neberg\", \"Tempelhof_Tempelhof\", \"Mariendorf_Tempelhof\", \"Marienfelde_Tempelhof\", \"Lichtenrade_Tempelhof\"]:\n        district.append(\"Tempelhof-Sch\u00f6neberg\")\n    elif immo_data_berlin.locality_district[x] in [\"Treptow_Treptow\", \"Pl\u00e4nterwald_Treptow\", \"Baumschulenweg_Treptow\", \"Johannisthal_Treptow\", \"Niedersch\u00f6neweide_Treptow\", \"Altglienicke_Treptow\", \"Adlershof_Treptow\", \"Bohnsdorf_Treptow\", \"Obersch\u00f6neweide_K\u00f6penick\", \"K\u00f6penick_K\u00f6penick\", \"Friedrichshagen_K\u00f6penick\", \"Rahnsdorf_K\u00f6penick\", \"Gr\u00fcnau_K\u00f6penick\", \"M\u00fcggelheim_K\u00f6penick\", \"Schm\u00f6ckwitz_K\u00f6penick\"]:\n        district.append(\"Treptow-K\u00f6penick\")\n\nimmo_data_berlin[\"district\"] = district\nimmo_data_berlin[[\"city\", \"district\", \"totalRent\", \"livingSpace\",\"typeOfFlat\", \"noRooms\", \"floor\"]]","46e513e2":"# Determining the rent per square meter for each flat\nimmo_data_berlin[\"rentPerMet2\"] = immo_data_berlin.totalRent \/ immo_data_berlin.livingSpace\n\nimmo_data_berlin[[\"city\", \"district\", \"totalRent\", \"livingSpace\", \"rentPerMet2\"]]","3d272feb":"# Graphing district against price per squared meter with seaborn\nplt.figure(figsize=(14,10))\n\nsns.barplot(x = immo_data_berlin.district, y = immo_data_berlin.rentPerMet2)\n\n# Establishing the angle at which the name of each district will show up in the graph\nplt.xticks(rotation = -45)","8e61b6d4":"# Graphing district against price per squared meter with plotly\n# Just for comparison purposes between seaborn and plotly\n\ndata = go.Bar(x = immo_data_berlin.district, y = immo_data_berlin.rentPerMet2, \n              marker_color = \"red\")\n\n\nlayout = go.Layout(bargap = 0,\n                  xaxis = dict(title = 'District', gridcolor = 'rgb(183, 183, 183)', showline = True),\n                  yaxis = dict(title = 'Rent per m^2', gridcolor = 'rgb(183, 183, 183)', showline = True),\n                  font = dict(family = 'Courier New, monospace', size = 12, color = 'rgb(0, 0, 0)'),\n                  legend = dict(x = 0, y = 1.0, bgcolor='rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'))\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","73f04a65":"# Creating data frame with average totalRent per district for geojson\nimmo_data_berlin_disMean = immo_data_berlin.groupby(\"district\").rentPerMet2.agg(\"mean\")\nimmo_data_berlin_disMean = pd.DataFrame(immo_data_berlin_disMean)\nimmo_data_berlin_disMean.sort_values(by = [\"rentPerMet2\"], inplace = True)\n\nimmo_data_berlin_disMean","f9ee3d58":"# Graphing district against avg price per squared meter in Berlin map with plotly using geojson data\nimport json\n\nwith open(\"..\/input\/berlin-bezirke\/berlin_bezirke.geojson\") as repo_url:\n    ger_regions_geo = json.load(repo_url)\n\n#repo_url = \"https:\/\/raw.githubusercontent.com\/funkeinteraktiv\/Berlin-Geodaten\/master\/berlin_bezirke.geojson\" #geojson raw data file\n#ger_regions_geo = requests.get(repo_url).json()\n\nfig = px.choropleth(data_frame = immo_data_berlin_disMean, \n                    geojson = ger_regions_geo, \n                    locations = immo_data_berlin_disMean.index, #column from the data frame with the Berlin districts\n                    featureidkey = 'properties.name',  #location of the name of the districts in the geojson file\n                    color = 'rentPerMet2', #column form data frame whose value will set the hue for each district\n                    color_continuous_scale = \"Greens\",\n                    scope = \"europe\",\n                    range_color = (10, 25)) #observed range for approx. min and max values\n\nfig.update_geos(showsubunits = True, showcoastlines = True, showland = True, fitbounds = \"locations\")\n\nfig.update_layout(title_text = 'Berlin Geo-data')\n\nfig.show()","a44782b3":"# Creating data frame with number of flats per district in Berlin\npie_data = immo_data_berlin.district.value_counts()\npie_data = pd.DataFrame(pie_data)\npie_data.rename(columns = {\"index\": \"district\", \"district\": \"num_of_flats\"}, inplace = True)\n\npie_data","8a3e11c3":"# Graphing percentage of flats that each Berlin district has with pyplot\nfig = px.pie(pie_data, values = pie_data.num_of_flats, names = pie_data.index)\nfig.update_traces(textposition = 'inside', textinfo = 'percent+label')\nfig.update_layout(template = 'plotly_white')\n\nfig.show()","349464d7":"geojson links\n\nwith districts: https:\/\/raw.githubusercontent.com\/funkeinteraktiv\/Berlin-Geodaten\/master\/berlin_bezirke.geojson\n\nwith localities: https:\/\/raw.githubusercontent.com\/ljwolf\/geopython\/master\/data\/berlin-neighbourhoods.geojson"}}