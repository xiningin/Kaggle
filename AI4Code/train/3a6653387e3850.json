{"cell_type":{"1c489c14":"code","f8ca7768":"code","184bdaa8":"code","bbd44408":"code","fe60241d":"code","6dc2cc74":"code","9aaa7a26":"code","244a3725":"code","76dc8c4f":"code","8530c33d":"code","67c88c37":"code","1ef3b8ea":"code","fa89fa36":"code","5f6d0a3f":"code","b62bf76e":"code","8aa37b51":"code","9117efaa":"code","36cf0567":"code","c43ff0d4":"code","4db53931":"code","c7b0a21f":"code","1eedce29":"code","b840f7a2":"code","0507bddd":"code","b8c353f8":"code","467e3734":"code","0a12baf2":"code","48ae9dae":"code","129bf3ee":"code","b34781d4":"code","b981089c":"code","0a693b57":"code","22576a3a":"code","33f0e523":"code","d3d46344":"code","2a32ab20":"code","6d91abcc":"code","8266982b":"code","45a46c34":"code","83a4f8a6":"code","583a1b50":"code","3985a904":"code","db0c09fb":"code","4f2f11c9":"code","6b223400":"code","cf0d4a8f":"code","c6041499":"code","e03ec973":"code","756210ba":"code","9692902e":"code","50598508":"code","20607c22":"code","172eb0ba":"code","3fc6c90d":"code","0786677d":"markdown","7932738b":"markdown","b3476f8a":"markdown"},"source":{"1c489c14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sln\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f8ca7768":"train=pd.read_csv('..\/input\/jigsaw-unintended-bias-in-toxicity-classification\/train.csv')","184bdaa8":"test=pd.read_csv('..\/input\/jigsaw-unintended-bias-in-toxicity-classification\/test.csv')","bbd44408":"train.info()","fe60241d":"train.head ()","6dc2cc74":"train.isnull().sum()","9aaa7a26":"diff_bias=[]\nfor i in  train.columns:\n    if train[i].isnull().sum()==1399744:\n        diff_bias.append(i)\n        ","244a3725":"tree_df=pd.concat([train[diff_bias],train['target']],axis=1)","76dc8c4f":"tree_df.head()","8530c33d":"tree_df.shape","67c88c37":"tree_df=tree_df.dropna()","1ef3b8ea":"tree_df.shape","fa89fa36":"tree_df['target'].value_counts()","5f6d0a3f":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn import tree","b62bf76e":"#for visulaization keep depth low\ndt=DecisionTreeRegressor(max_depth=4,min_samples_split=10,max_features=10)","8aa37b51":"clf=dt.fit(tree_df.drop('target',axis=1),tree_df['target'])","9117efaa":"import graphviz \ndot_data = tree.export_graphviz(clf, out_file='tree.dot') ","36cf0567":"from sklearn.tree import export_graphviz\nfrom IPython.display import SVG","c43ff0d4":"from graphviz import Source\nfrom IPython.display import display","4db53931":"graph=Source(tree.export_graphviz(clf,feature_names=tree_df.drop('target',axis=1).columns))","c7b0a21f":"display(SVG(graph.pipe(format='svg')))","1eedce29":"train['comment_text'][0]","b840f7a2":"train.head(5)","0507bddd":"full_text=' '\nfor i in train[train['article_id']==2006]['comment_text']:\n    full_text+=i\n    ","b8c353f8":"train['comment_text'][4]","467e3734":"train['comment_text'][5]","0a12baf2":"train['comment_text'][6]","48ae9dae":"#lets see the effect of gender on toxic comments\ntrain_new=train.dropna()\n","129bf3ee":"sln.jointplot(train['target'],train['severe_toxicity'])","b34781d4":"sln.distplot(train_new['female'])","b981089c":"#Before checking the cuttoff lets see\n#lets clean the data first","0a693b57":"from nltk.corpus import stopwords\nfrom nltk.tokenize import TweetTokenizer","22576a3a":"stop = stopwords.words('english')\ntrain['comm_clean'] = train['comment_text'].apply(lambda x: \" \".join(x for x in x.split() if x not in stop))","33f0e523":"test['comm_clean'] = test['comment_text'].apply(lambda x: \" \".join(x for x in x.split() if x not in stop))","d3d46344":"sln.distplot(train['target'])","2a32ab20":"# cuttoff-0.5\ntrain['target_cat']=np.where(train['target']>0.5,1,0)","6d91abcc":"# import libraries\nimport fastai\nfrom fastai import *\nfrom fastai.text import * \nfrom functools import partial\n","8266982b":"df.to_feather('cleaned_df')","45a46c34":"df=train[['comm_clean','target_cat']]","83a4f8a6":"from sklearn.model_selection import train_test_split\n\n# split data into training and validation set\ndf_trn, df_val = train_test_split(df, stratify = df['target_cat'], test_size = 0.4, random_state = 12)","583a1b50":"# Language model data\n#data_lm = TextLMDataBunch.from_df(train_df = df_trn, valid_df = df_val, path = \"\")","3985a904":"# Classifier model data\n\ndata_lm = TextClasDataBunch.from_df('',df_trn,valid_df=df_val, test_df=test, text_cols=['comm_clean'], \n                                    label_cols=['target_cat'])","db0c09fb":"data_lm.save()","4f2f11c9":"awd_lstm_clas_config = dict(emb_sz=372, n_hid=1000, n_layers=3, pad_token=1, qrnn=False, bidir=False, output_p=0.4,\n                       hidden_p=0.2, input_p=0.6, embed_p=0.1, weight_p=0.5)","6b223400":"learner = text_classifier_learner(data_lm, AWD_LSTM, max_len=210,config=awd_lstm_clas_config, pretrained = False)","cf0d4a8f":"fnames = ['..\/input\/path-new\/lstm_wt103.pth','..\/input\/pickle\/itos_wt103.pkl']\nlearner.load_pretrained(*fnames, strict=False)\nlearner.freeze()","c6041499":"#learner.fit_one_cycle(1, 1e-3)","e03ec973":"oof = learner.get_preds(ds_type=DatasetType.Valid)","756210ba":"preds = learner.get_preds(ds_type=DatasetType.Test, ordered=True)","9692902e":"o = oof[0].cpu().data.numpy()\nl = oof[1].cpu().data.numpy()","50598508":"p = preds[0].cpu().data.numpy()","20607c22":"submission = pd.read_csv('..\/input\/jigsaw-unintended-bias-in-toxicity-classification\/sample_submission.csv', index_col='id')","172eb0ba":"submission['prediction'] = p[:,1]","3fc6c90d":"submission.to_csv('submission.csv')","0786677d":"Using ULMFit","7932738b":"Lets build a decision tree","b3476f8a":"## Exploring Text Data"}}