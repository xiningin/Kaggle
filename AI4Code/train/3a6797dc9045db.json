{"cell_type":{"0f40665c":"code","94c9a35f":"code","1f867ba4":"code","783534e3":"code","9fc14851":"code","99340cb6":"code","3983b6fd":"code","e4f3b9d9":"code","6d58c133":"code","411c6ca3":"code","185784fc":"code","84c8b6ef":"code","6ae22d4f":"code","5324f4cc":"code","77e27e50":"code","a0a3c347":"code","53d79c05":"code","f4d4f58b":"code","061fce22":"code","523172aa":"code","552abd48":"code","1a50538e":"code","10e78dbc":"code","7db8d3a8":"code","2449674e":"code","cb860bf2":"code","415f14a6":"code","07a9a0cf":"code","c61a4f71":"code","9da58635":"markdown","ab09a490":"markdown","aff77b9c":"markdown","8dc61eda":"markdown","4e6b40bd":"markdown","ec2ba91c":"markdown","9345b1b9":"markdown","bf1b3c5a":"markdown","d8b80e7c":"markdown","3f99bfc5":"markdown","9aa67514":"markdown","520e3944":"markdown","846554d0":"markdown","b057e94d":"markdown","e0ea6a36":"markdown","dee0521e":"markdown","aef6584a":"markdown","4ccac191":"markdown","4004cc4f":"markdown","191aca46":"markdown","6a36ebae":"markdown","6447a700":"markdown","e89207cf":"markdown","55eaf687":"markdown"},"source":{"0f40665c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","94c9a35f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","1f867ba4":"x = np.arange(0, 2 * np.pi, 0.1)\ny = np.sin(x)\nplt.plot(x, y, 'r')\nplt.show()","783534e3":"x = np.arange(0, 10, 1) # \u8fd4\u56de\u7ed9\u5b9a\u95f4\u9694\u533a\u95f4\u5747\u5300\u95f4\u9694\u7684\u503c\ny = np.random.rand(10, 2) # \u8fd4\u56de [0,1] \u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u503c\n\nfig, ax = plt.subplots()\nax.plot(x, y[:, 0], label='A')\nax.plot(x, y[:, 1], label='B')\n\n# \u6807\u9898\nplt.title('title')\n\n# \u5750\u6807\u8f74\u6807\u7b7e\nplt.xlabel('xlabel')\nplt.ylabel('ylabel')\n\n# \u5750\u6807\u8fb9\u754c\nplt.xlim([0, 15])\nplt.ylim([0, 1.2])\n\n# \u5750\u6807\u523b\u5ea6\nplt.xticks(x)\nplt.yticks([0, 0.2, 0.5, 0.7, 0.8, 0.9, 1.2])\n\n# \u5750\u6807\u523b\u5ea6\u6807\u7b7e\nax.set_xticklabels(x for x in 'abcdefgh123')\n# ax.set_yticklabels([0, 0.2, 0.5, 0.7, 0.8, 0.9, 1.2])\nplt.show()","9fc14851":"# \u76f4\u63a5\u4f7f\u7528 pd \u7ed8\u5236\n# .cumsum() \u8fd4\u56de\u8be5\u5217\u7684\u7d2f\u8ba1\u548c\uff0c\u662f\u4e00\u5217\uff01\ns = pd.Series(np.random.randn(10).cumsum()) \ns.plot(linestyle='--', marker='*', color='g', alpha=0.2, grid=True)\nplt.show()","99340cb6":"# \u76f4\u63a5\u7528style \u8bbe\u7f6e\u7ebf\u578b\uff0c\u7b26\u53f7\n# \u989c\u8272\u677f\ndf = pd.DataFrame(np.random.randn(100,4), columns=list('ABCD')).cumsum()\ndf.plot(style='--.', alpha=0.9, colormap='summer_r')\nplt.show()","3983b6fd":"x = np.arange(0, 10, 1)\ny = np.random.randn(10, 2)\nplt.plot(x, y[:, 0], '--o', label='a')\nplt.plot(x, y[:, 1], '--o', label='b')\nplt.text(4, 0.4, 'text', fontsize=12, color='r') # 4,0.4 \u8fd9\u4e2a\u4f4d\u7f6e\u56fe\u6ce8\nplt.show()","e4f3b9d9":"fig1 = plt.figure(num=1, figsize=(8, 6)) # num = id\uff1f\u76f8\u540c\u4f1a\u7ed8\u5236\u5728\u540c\u4e00\u5f20\u56fe\u4e0a\nplt.plot(np.random.rand(50).cumsum(), 'k--')\nfig2 = plt.figure(num=2, figsize=(8, 6))\nplt.plot(50 - np.random.rand(50).cumsum(), 'k--')\nplt.show()","6d58c133":"fig = plt.figure(figsize=(10, 8), facecolor='gray')\n\nax1 = fig.add_subplot(2, 2, 1) # \u8fd4\u56de Axes \u5bf9\u8c61\nax1.plot(np.random.rand(50).cumsum(), 'k--')\nax1.plot(np.random.rand(50).cumsum(), 'b--')\n\nax2 = fig.add_subplot(2, 2, 2)\nax2.hist(np.random.rand(50), alpha=0.5)\n\nax4 = fig.add_subplot(2, 2, 4)\ndf = pd.DataFrame(np.random.rand(10, 4), columns=list('abcd'))\nax4.plot(df, '--.', alpha=.5)\nplt.show()","411c6ca3":"fig, axes = plt.subplots(2, 3, figsize=(10, 4))\n\ns = pd.Series(np.random.randn(1000).cumsum())\n# \u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u5b50\u56fe\nax1 = axes[0, 1]\nax1.plot(s)\nplt.show()","185784fc":"# \u53c2\u6570\u8c03\u6574\uff0c\u5171\u7528\u5750\u6807\u8f74\nfig, axes = plt.subplots(2, 2, figsize=(10, 6), sharex=True, sharey=True)\nfor i in range(2):\n    for j in range(2):\n        axes[i, j].hist(np.random.randn(500), color='k', alpha=0.6)\n# wspace, hspace: \u63a7\u5236\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u767e\u5206\u6bd4\uff0c\u6bd4\u5982\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u8ddd\nplt.subplots_adjust(wspace=0, hspace=0)\nplt.show()","84c8b6ef":"df = pd.DataFrame(np.random.randn(1000,4), index=s.index, columns=list('ABCD'))\ndf = df.cumsum()\ndf.plot(style='--.', alpha=0.4, grid=True, figsize=(20, 8), subplots=True,\n        layout=(1,4), sharex=False)\nplt.subplots_adjust(wspace=0.1, hspace=0)\nplt.show()","6ae22d4f":"# pandas \u65f6\u95f4\u5e8f\u5217\ns = pd.Series(np.random.randn(1000), index=pd.date_range('1\/1\/2000', periods=1000))\ns = s.cumsum()\ns.plot(kind='line', label='what', style='--.b', alpha=0.3, use_index=True, rot=45,\n       grid=True, ylim=[-50, 50], yticks=list(range(-50, 50, 10)), figsize=(8, 4),\n       title='Title', legend=True)\nplt.grid(True, linestyle='--', color='green', linewidth=2, axis='x')\n# plt.grid(True, linestyle='-', color='red', linewidth='0.5', axis='y')\nplt.show()","5324f4cc":"df = pd.DataFrame(np.random.randn(1000, 4), index=s.index, columns=list('ABCD')).cumsum()\ndf.plot(kind='line', style='--.', alpha=0.4, use_index=True, rot=45, grid=True,\n        figsize=(8, 4), title='test', legend=True, subplots=True, colormap='Greens')\nplt.show()","77e27e50":"fig, axes = plt.subplots(4, 1, figsize=(10, 10))\n\ns = pd.Series(np.random.randint(0, 10, 16), index=list('abcdefghijklmnop'))\ndf = pd.DataFrame(np.random.rand(10, 3), columns=['a', 'b', 'c'])\n\n# \u67f1\u72b6\u56fe\u65b9\u6cd5\u4e00\uff1a\ns.plot(kind='bar', color='k', grid=True, alpha=0.5, ax=axes[1]) # ax \u9009\u62e9\u5b50\u56fe\u4f4d\u7f6e\n\n# \u591a\u67f1\u72b6\u56fe\ndf.plot(kind='bar', ax=axes[0], grid=True, colormap='Reds_r')\n\n# \u591a\u5806\u53e0\u56fe\ndf.plot(kind='bar', ax=axes[2], grid=True, colormap='Blues_r', stacked=True)\n\n# \u67f1\u72b6\u56fe\u65b9\u6cd5\u4e8c\uff1a\ndf.plot.barh(ax=axes[3], grid=True, stacked=True, cmap='BuGn_r')\nplt.show()","a0a3c347":"plt.figure(figsize=(10, 6))\n\nx = np.arange(10)\ny1 = np.random.rand(10)\ny2 = -np.random.rand(10)\n\nplt.bar(x, y1, width=1, facecolor='yellowgreen', edgecolor='white')\nplt.bar(x, y2, width=1, facecolor='lightskyblue', edgecolor='white', yerr=y2*0.1)\n\n# zip \u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6253\u5305\u6210\u5143\u7ec4\nfor i,j in zip(x, y1):\n    plt.text(i-0.2, j-0.15, '%.2f' % j, color='k')\nfor i,j in zip(x, y2):\n    plt.text(i-0.2, j-0.05, '%.2f' % -j, color='r')\nplt.show()","53d79c05":"fig, axes = plt.subplots(2, 1, figsize=(8, 6))\n\ndf1 = pd.DataFrame(np.random.rand(10, 4), columns=list('abcd'))\ndf2 = pd.DataFrame(np.random.rand(10, 4), columns=list('abcd'))\n\ndf1.plot.area(cmap='Greens_r', alpha=0.5, ax=axes[0])\ndf2.plot.area(stacked=True, cmap='Set2', alpha=0.5, ax=axes[1])\nplt.show()","f4d4f58b":"fig, axes = plt.subplots(2, 1, figsize=(8, 6))\n\nx= np.linspace(0, 1, 500)\ny1 = np.sin(4 * np.pi * x) * np.exp(-5 * x)\ny2 = -np.sin(4 * np.pi * x) * np.exp(-5 * x)\n\naxes[0].fill(x, y1, 'r', alpha=0.5, label='y1')\naxes[0].fill(x, y2, 'g', alpha=0.5, label='y2')\n# \u540c\u6548\u679c\n# plt.fill(x, y1, 'r', x, y2, 'g', alpha=0.5)\n\nx = np.linspace(0, 5 * np.pi, 1000)\ny1 = np.sin(x)\ny2 = np.sin(2 * x)\n# \u586b\u5145\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u7684\u533a\u57df\naxes[1].fill_between(x, y1, y2, color='b', alpha=0.5, label='area')\n\nfor ax in axes:\n    ax.legend()\n    ax.grid()\n\nplt.show()","061fce22":"# np.random.seed(1)\n%time\ns = pd.Series(3 * np.random.rand(4), index=['a', 'b', 'c', 'd'], name='series')\nfig = plt.figure(figsize=(10, 8))\nplt.subplot(1, 2, 1)\nplt.axis('equal') # \u4fdd\u8bc1\u957f\u5bbd\u76f8\u7b49,\u753b\u51fa\u6765\u624d\u5706\nplt.pie(s, explode=[0.05, 0, 0, 0], labels=s.index, colors=['r', 'g', 'b', 'c'],\n        autopct='%.2f%%', pctdistance=0.5, labeldistance=1.2, shadow=True,\n        startangle=0, radius=1.5)\n\nplt.subplot(1,2,2)\nplt.axis('equal') # \u4fdd\u8bc1\u957f\u5bbd\u76f8\u7b49,\u753b\u51fa\u6765\u624d\u5706\nplt.pie(s, explode=[0.05, 0, 0, 0], labels=s.index, colors=['r', 'g', 'b', 'c'],\n        autopct='%.2f%%', pctdistance=0.6, labeldistance=1.2, shadow=False,\n        startangle=0, radius=1.5)\nplt.subplots_adjust(wspace=0.5, hspace=0)\nplt.show()","523172aa":"# \u76f4\u65b9\u56fe\ns = pd.Series(np.random.randn(1000))\ns.hist(bins=20, histtype='bar', align='mid', orientation='vertical', alpha=0.5,\n       grid=False, density=True, label='hist')\n# \u5bc6\u5ea6\u56fe\ns.plot(kind='kde', style='k--', label='line')\nplt.legend(loc='upper left') # \u5c31\u53ea\u6709\u51e0\u4e2a\u56fa\u5b9a\u503c\nplt.show()","552abd48":"# \u5806\u53e0\u76f4\u65b9\u56fe\nplt.figure(figsize=(10, 6))\ndf = pd.DataFrame({'a': np.random.randn(1000) + 1, 'b': np.random.randn(1000),\n                   'c': np.random.randn(1000) - 1, 'd': np.random.randn(1000) - 2},\n                  columns=list('abcd'))\ndf.plot.hist(bins=20, cmap='Greens_r', alpha=0.5, grid=True, stacked=True)\n\n# \u751f\u6210\u591a\u4e2a\u76f4\u65b9\u56fe\ndf.hist(bins=20)\nplt.subplots_adjust(wspace=0.3, hspace=0.5)\nplt.show()","1a50538e":"plt.figure(figsize=(8, 6))\n\nx = np.random.randn(1000)\ny = np.random.randn(1000)\n\nplt.scatter(x, y, marker='o', s=np.random.rand(1000)*100, cmap='Reds_r', c=y, alpha=0.8)\nplt.show()","10e78dbc":"df = pd.DataFrame(np.random.randn(100, 4), columns=list('abcd'))\npd.plotting.scatter_matrix(df, figsize=(10,6), marker='o', diagonal='kde', alpha=0.5, \n                  range_padding=0.5)\nplt.show()","7db8d3a8":"# df.plot.box() \u7ed8\u5236\nfig, axes = plt.subplots(2, 1, figsize=(10, 6))\ndf = pd.DataFrame(np.random.rand(10, 5), columns=list('ABCDE'))\n# \u7bb1\u578b\u56fe\u989c\u8272\n# boxes \u2192 \u7bb1\u7ebf\n# whiskers \u2192 \u5206\u4f4d\u6570\u4e0e error bar \u6a2a\u7ebf\u4e4b\u95f4\u7ad6\u7ebf\u7684\u989c\u8272\n# medians \u2192 \u4e2d\u4f4d\u6570\u7ebf\u989c\u8272\n# caps \u2192 error bar \u6a2a\u7ebf\u989c\u8272\ncolor = dict(boxes='DarkGreen', whiskers='DarkOrange', medians='DarkBlue', caps='blue')\n\ndf.plot.box(ylim=[0, 1.2], grid=True, color=color, ax=axes[0])\ndf.plot.box(vert=False, positions=[1,4,5,6,8], grid=True, color=color, ax=axes[1])\nplt.show()","2449674e":"df = pd.DataFrame(np.random.rand(10, 5), columns=list('ABCDE'))\nplt.figure(figsize=(10, 4))\n\nf = df.boxplot(sym='+', vert=True, whis=1.5, patch_artist=True, meanline=False,\n               showmeans=True, showbox=True, showcaps=True, showfliers=True,\n               notch=False, return_type='dict')\nplt.title('boxplot')\nfor box in f['boxes']:\n    box.set(color='b', linewidth=2)\n    box.set(facecolor='y', alpha=0.5)\nfor whisker in f['whiskers']:\n    whisker.set(color='k', linewidth=0.5, linestyle='--')\nfor cap in f['caps']:\n    cap.set(color='green', linewidth=2)\nfor median in f['medians']:\n    median.set(color='r', linewidth=2)\nfor flier in f['fliers']:\n    flier.set(marker='+', color='yellow', alpha=0.5)\nplt.show()","cb860bf2":"# \u5206\u7ec4\u7ed8\u5236\ndf = pd.DataFrame(np.random.rand(10, 2), columns=['Col1', 'Col2'])\ndf['X'] = pd.Series(['A','A','A','A','A','B','B','B','B','B'])\ndf['Y'] = pd.Series(['A','B','A','B','A','B','A','B','A','B'])\n\ndf.boxplot(by='X')\ndf.boxplot(column=['Col1', 'Col2'], by=['X', 'Y'])\n\nplt.show()","415f14a6":"plt.figure(figsize=(12, 8))\nx = np.array([[32, 24], [22, 18]])\nplt.imshow(x)\nplt.colorbar()\nplt.text(1, 0, 'h', color='r', fontsize=20)\nplt.text(1, 0, 'O', color='k', fontsize=20)\nplt.show()","07a9a0cf":"fig, axes = plt.subplots(1, 2, figsize=(10, 8))\nx = np.array([[32, 24], [56, 24], [22, 18]])\nfor ax in axes:\n    im = ax.imshow(x,interpolation='nearest')\n    ax.figure.colorbar(im, ax=ax)\n    for i in range(x.shape[0]):\n        for j in range(x.shape[1]):\n            ax.text(j, i, x[i][j], color='r') # x, y \u5bf9\u5e94\u5217\uff0c\u884c\nplt.show()","c61a4f71":"plt.figure(figsize=(12, 6))\n\nx=np.linspace(-3,3,300)\ny=np.linspace(-3,3,300)\nX, Y = np.meshgrid(x, y)\n\nZ = 2 * X - 3 * Y\nplt.subplot(1, 4, 1)\nplt.contour(X, Y, Z, cmap=plt.cm.Set1)\n\nZ = X ** 2 + Y ** 2\nplt.subplot(1, 4, 2)\nplt.contourf(X, Y, Z, colors=['red', 'blue', 'green'], origin='upper')\n\nZ = (4 * X - 2 * Y) > 0\nZ = Z.astype(np.uint8)\nplt.subplot(1, 4, 3)\nplt.contourf(X, Y, Z, cmap=plt.cm.Blues, origin='lower')\n\nplt.subplot(1, 4, 4)\nplt.contourf(X, Y, Z, cmap=plt.cm.Blues, origin='upper')\n\n\nplt.show()","9da58635":"### boxplot \n[df.boxplot()](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.boxplot.html?highlight=boxplot#pandas.DataFrame.boxplot)  \n\u53c2\u6570\uff1a\n- column\uff1a\u5217\u540d\uff0c\u53ef\u9009\n- by\uff1a\n- ax\uff1aAxes \u5bf9\u8c61\n- fontsize\uff1a\u6807\u7b7e\u5b57\u4f53\u5927\u5c0f\n- rot\uff1a\u6807\u7b7e\u65cb\u8f6c\u89d2\u5ea6\n- grid\uff1a\u6805\u683c\n- figsize\uff1a\u56fe\u5927\u5c0f\n- layout\uff1a\u5b50\u56fe\u5e03\u5c40 (rows, columns)\uff0c\u5143\u7ec4\n- return_type\uff1a{axes\uff0cdict\uff0cboth} \u6216\u8005 None\uff0c\u9ed8\u8ba4 axes\n- kwds\uff1a\u5176\u4ed6\u4f20\u9012\u81f3 matplotlib.pyplot.boxplot() \u7684\u53c2\u6570  \n[plt.boxplot()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.boxplot.html#matplotlib.pyplot.boxplot)  \n\u53c2\u6570\uff1a\n- x\uff1a\u8f93\u5165\u6570\u636e\n- notch\uff1a\u662f\u5426\u6709\u7f3a\u53e3\u7684\u7bb1\u578b\u56fe\uff0c\u53ef\u9009\n- sym\uff1a\u5f02\u5e38\u70b9\u5f62\u72b6\uff0c\u9ed8\u8ba4\"b+\"\n- vert\uff1a\u662f\u5426\u5782\u76f4\uff0c\u9ed8\u8ba4True\n- whis\uff1a\u7bb1\u987b\u4f4d\u7f6e\uff0c\u7bb1\u4f53\u81f3 error bar \u4e2d\u95f4\u7684\u7ad6\u7ebf\n- patch_artist\uff1a","ab09a490":"# 6.\u57fa\u672c\u56fe\u8868\u7ed8\u5236\n[colormap](https:\/\/matplotlib.org\/tutorials\/colors\/colormaps.html#moreland) \u73b0\u6709\u9009\u62e9","aff77b9c":"# 2. \u56fe\u8868\u7684\u57fa\u672c\u5143\u7d20\n- \u6807\u9898\n- \u5750\u6807\u8f74\u6807\u7b7e\n- \u5750\u6807\u8f74\u8fb9\u754c\n- \u5750\u6807\u8f74\u523b\u5ea6\n- \u5750\u6807\u8f74\u523b\u5ea6\u6807\u7b7e\n- \u56fe\u4f8b","8dc61eda":"# 3. \u56fe\u8868\u6837\u5f0f\n- linestyle\n- color\n- marker (\u5b9e\u9645\u6570\u636e\u5bf9\u5e94\u4f4d\u7f6e\u753b\u7684\u7b26\u53f7)\n- style (linestyle\u3001marker\u3001color)\n- alpha (\u900f\u660e\u5ea6 [0,1] )\n- colormap (\u989c\u8272\u677f)\n- grid","4e6b40bd":"## 5.4. \u591a\u7cfb\u5217\u56fe\u7ed8\u5236\nplt.plot():\n- subplots\uff0c\u5206\u522b\u7ed8\u5236\u5b50\u56fe\n- layout\uff0c\u6309\u5e03\u5c40\u7ed8\u5236\u5b50\u56fe","ec2ba91c":"- plt.bar()\n  - x, y \u2192 x, y\n  - width \u2192 \u5bbd\u5ea6\u6bd4\u4f8b\n  - facecolor \u2192 \u67f1\u72b6\u56fe\u586b\u5145\u989c\u8272\n  - edgecolor \u2192 \u67f1\u72b6\u56fe\u8fb9\u6846\u989c\u8272\n  - left \u2192 \u5de6\u8fb9\u754c\uff0cbottom \u2192 \u4e0b\u8fb9\u754c\uff0c\u6269\u5c55\u5373\u4e3a\u7518\u7279\u56fe\n  - align \u2192 \u67f1\u72b6\u56fe\u7684\u5206\u5e03\uff0c\u9ed8\u8ba4left\uff0c\u4ece\u5de6\u8fb9\u754c\u5f00\u59cb\u7ed8\u5236\n  - xerr\/yerr \u2192 x\/y \u65b9\u5411 error bar","9345b1b9":"## 6.7. \u6563\u70b9\u56fe\n[plt.scatter()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.scatter.html?highlight=scatter#matplotlib.pyplot.scatter)  \n\u53c2\u6570\uff1a\n- x\uff0cy\uff1ax\uff0cy\n- s\uff1a\u70b9\u5927\u5c0f\n- c\uff1a\u989c\u8272\n- marker\uff1a\u70b9\u7684\u7c7b\u578b\n- cmap\uff1a\u989c\u8272\u677f\n- edgecolors\uff1a\u70b9\u8fb9\u7f18\u989c\u8272","bf1b3c5a":"## 6.9. \u7b49\u9ad8\u7ebf(\u8f6e\u5ed3)\n[plt.contour()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.contour.html?highlight=contour#matplotlib.pyplot.contour)  \n[plt.contourf()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.contourf.html?highlight=contourf#matplotlib.pyplot.contourf)  \n\u53c2\u6570\uff1a\n- X\uff0cY\uff1aZ\u7684x\uff0cy\u5750\u6807\uff0cX\uff0cY\u5fc5\u987b\u548cZ\u7ef4\u5ea6\u76f8\u540c\n- Z\uff1a\u7531X \u548cY\u4ea7\u751f\u7684\u503c\uff0c\u5982 Z=X+Y\n- levels\uff1alevels + 1 \u4e2a\u7b49\u9ad8\u7ebf\n- colors\uff1a\u7ed8\u5236\u7684\u7ebf\u6216\u8005\u533a\u57df\u7684\u989c\u8272\n- cmap\uff1a\u7ebf\u6216\u533a\u57df\u7684\u989c\u8272\u677f\n- alpha\uff1a\u900f\u660e\u5ea6\n- origin\uff1aZ\u7684\u65b9\u5411\u548c\u4f4d\u7f6e\uff0c{None, 'upper', 'lower', 'image'}","d8b80e7c":"## 6.1. [Series](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.Series.plot.html#pandas.Series.plot) \u548c [DataFrame](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.plot.html#pandas.DataFrame.plot) \u7ed8\u56fe\nindex \u4e3a x\uff0c\u6bcf\u5217\u7684 value \u4e3a y\n\n\u53c2\u6570\uff1a\n- kind \u2192 line,bar,barh... (\u6298\u7ebf\u56fe\uff0c\u67f1\u72b6\u56fe\uff0c\u67f1\u72b6\u56fe-\u6a2a...)\n- label \u2192 \u56fe\u4f8b\u6807\u7b7e\uff0cDataFrame \u4ee5\u5217\u540d\u4e3a\u6807\u7b7e\n- style \u2192 linestyle\uff0cmarker\uff0ccolor\n- color \u2192 \u989c\u8272\uff0ccolor\u6307\u5b9a\u65f6\u5ffd\u7565style\u91cc\u7684\n- alpha \u2192 \u900f\u660e\u5ea6\n- use_index \u2192 \u5c06\u7d22\u5f15\u4f5c\u4e3a\u523b\u5ea6\u6807\u7b7e\uff0c\u9ed8\u8ba4True\n- rot \u2192 \u65cb\u8f6c\u523b\u5ea6\u6807\u7b7e\uff0c[0,360]\n- grid \u2192 \u663e\u793a\u6805\u683c\uff0c\u4e00\u822c\u7528 plt.grid\n- xlim, ylim \u2192 x, y \u754c\u9650\n- xticks, yticks \u2192 x, y \u8f74\u523b\u5ea6\n- figsize \u2192 \u753b\u5e03\u5927\u5c0f\n- title \u2192 \u6807\u9898\n- legend \u2192 \u56fe\u4f8b\uff0c\u4e00\u822c\u7528 plt.legend\n\n__\u6298\u7ebf\u56fe__","3f99bfc5":"## 6.7. \u7bb1\u578b\u56fe\n\n\u7bb1\u578b\u56fe\uff1a\u53c8\u79f0\u4e3a\u76d2\u987b\u56fe\u3001\u76d2\u5f0f\u56fe\u3001\u76d2\u72b6\u56fe\u6216\u7bb1\u7ebf\u56fe\uff0c\u662f\u4e00\u79cd\u7528\u4f5c\u663e\u793a\u4e00\u7ec4\u6570\u636e\u5206\u6563\u60c5\u51b5\u8d44\u6599\u7684\u7edf\u8ba1\u56fe  \n\u5305\u542b\u4e00\u7ec4\u6570\u636e\u7684\uff1a\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u4e2d\u4f4d\u6570\u3001\u4e0a\u56db\u5206\u4f4d\u6570\uff08Q1\uff09\u3001\u4e0b\u56db\u5206\u4f4d\u6570\uff08Q3\uff09\u3001\u5f02\u5e38\u503c  \n\u2460 \u4e2d\u4f4d\u6570 \u2192 \u4e00\u7ec4\u6570\u636e\u5e73\u5747\u5206\u6210\u4e24\u4efd\uff0c\u4e2d\u95f4\u7684\u6570  \n\u2461 \u4e0b\u56db\u5206\u4f4d\u6570Q1 \u2192 \u662f\u5c06\u5e8f\u5217\u5e73\u5747\u5206\u6210\u56db\u4efd\uff0c\u8ba1\u7b97(n+1)\/4\u4e0e(n-1)\/4\u4e24\u79cd\uff0c\u4e00\u822c\u4f7f\u7528(n+1)\/4  \n\u2462 \u4e0a\u56db\u5206\u4f4d\u6570Q3 \u2192 \u662f\u5c06\u5e8f\u5217\u5e73\u5747\u5206\u6210\u56db\u4efd\uff0c\u8ba1\u7b97(1+n)\/4*3=6.75  \n\u2463 \u5185\u9650 \u2192 T\u5f62\u7684\u76d2\u987b\u5c31\u662f\u5185\u9650\uff0c\u6700\u5927\u503c\u533a\u95f4Q3+1.5IQR,\u6700\u5c0f\u503c\u533a\u95f4Q1-1.5IQR \uff08IQR=Q3-Q1\uff09  \n\u2464 \u5916\u9650 \u2192 T\u5f62\u7684\u76d2\u987b\u5c31\u662f\u5185\u9650\uff0c\u6700\u5927\u503c\u533a\u95f4Q3+3IQR,\u6700\u5c0f\u503c\u533a\u95f4Q1-3IQR \uff08IQR=Q3-Q1\uff09  \n\u2465 \u5f02\u5e38\u503c \u2192 \u5185\u9650\u4e4b\u5916 - \u4e2d\u5ea6\u5f02\u5e38\uff0c\u5916\u9650\u4e4b\u5916 - \u6781\u5ea6\u5f02\u5e38   \n[plt.boxplot()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.boxplot.html#matplotlib.pyplot.boxplot)","9aa67514":"## 6.2 \u67f1\u72b6\u56fe\n- plt.plot(kind='bar\/barh')","520e3944":"\u6563\u70b9\u77e9\u9635  \n[pd.plotting.scatter_matrix()](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.plotting.scatter_matrix.html?highlight=scatter#pandas.plotting.scatter_matrix)  \n\u53c2\u6570\uff1a\n- frame\uff1aDataFrame\n- alpha\uff1a\n- figsize\uff1a\n- ax\uff1amatplotlib axis \u5bf9\u8c61 (\u53ef\u9009)\n- diagonal\uff1a\u5bf9\u89d2\u7ebf\u56fe\u6837\uff0c\u5bc6\u5ea6\u56fe\u6216\u76f4\u65b9\u56fe\uff0c{'hist', 'kde'}\n- marker\uff1a\u9ed8\u8ba4 '.'\n- hist_kwds\uff1a\u5176\u4ed6\u4f20\u9012\u81f3\u76f4\u65b9\u56fe\u7684\u53c2\u6570\n- density_kwds\uff1a\u5176\u4ed6\u4f20\u9012\u81f3\u5bc6\u5ea6\u56fe\u7684\u53c2\u6570\n- range_padding\uff1a\n- kwds\uff1a\u5176\u4ed6\u4f20\u9012\u7ed9scatter\u51fd\u6570\u7684\u53c2\u6570","846554d0":"## 6.8. \u8272\u6761\n[plot.colorbar()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.colorbar.html?highlight=colorbar#matplotlib.pyplot.colorbar)","b057e94d":"## 5.2. figure.add_subplot","e0ea6a36":"## 6.3. \u9762\u79ef\u56fe\nplt.area()\n- stacked \u2192 \u662f\u5426\u5806\u53e0\uff0c\u9ed8\u8ba4\u5806\u53e0\n- \u6bcf\u5217\u5fc5\u987b\u5168\u6b63\u6216\u8005\u5168\u8d1f\n- NaN \u81ea\u52a8\u88ab\u586b\u5145\u4e3a 0\uff0c\u56fe\u6807\u7b7e\u9700\u8981\u6e05\u6d17\u6389\u7f3a\u5931\u503c","dee0521e":"## 6.6. \u76f4\u65b9\u56fe\n[plt.hist()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.hist.html?highlight=hist#matplotlib.pyplot.hist)  \n\u53c2\u6570\uff1a\n- x\uff1a\u6570\u636e\n- bins\uff1a\u5bbd\u5ea6\uff0c\u5373\u591a\u5c11\u4e2a\u67f1\u5b50\n- range\uff1a\u8303\u56f4\n- density\uff1a\u6807\u51c6\u5316\n- histtype\uff1a\u76f4\u65b9\u56fe\u7c7b\u578b\uff0c{bar\uff0cbarstacked\uff0cstep\uff0cstepfilled}\n- align\uff1a\u5bf9\u9f50\u65b9\u5f0f\uff0c{left\uff0cmid\uff0c right}\n- orientation\uff1a\u65b9\u5411\uff0c{horizontal\uff0cvertical}\n- color\uff1a\u989c\u8272\n- label\uff1a\u6807\u7b7e\n- stacked\uff1a\u662f\u5426\u5806\u53e0","aef6584a":"### [df.plot.box()](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.plot.box.html?highlight=box#pandas.DataFrame.plot.box)","4ccac191":"# 4. \u56fe\u6ce8","4004cc4f":"## 5.3. subplots","191aca46":"## 6.5. \u997c\u56fe\n[plt.pie()](https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.pie.html#matplotlib.pyplot.pie)  \n\u53c2\u6570\uff1a\n- x\uff1a\u6570\u636e\n- explode\uff1a\u504f\u79fb\u91cf\uff0c\u6954\u5b50\u504f\u79bb\u4e2d\u5fc3\u7684\u6bd4\u4f8b\n- labels\uff1a\u6807\u7b7e\n- colors\uff1a\u989c\u8272\n- autopct\uff1a\u6587\u672c\uff0c\u6954\u5b50\u5bf9\u5e94\u7684\u6570\u503c\uff0c\u5b57\u7b26\u4e32\u6216\u8005\u51fd\u6570\n- pctdistance\uff1a\u6954\u5b50\u4e2d autopct \u4ea7\u751f\u7684\u6587\u672c\u8ddd\u79bb\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6bd4\u4f8b\n- shadow\uff1a\u9634\u5f71\uff0c\u6709\u9634\u5f71\u770b\u8d77\u6765\u611f\u89c9\u7acb\u4f53\n- labeldistance\uff1a\u88ab\u997c\u56fe\u753b\u7684\u6807\u8bb0\u7684\u76f4\u5f84\n- startangle\uff1a\u5f00\u59cb\u89d2\u5ea6\n- radius\uff1a\u534a\u5f84\n- counterclock\uff1a\u6307\u9488\u65b9\u5411\uff0c\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488","6a36ebae":"# 5. \u5b50\u56fe\u7ed8\u5236\n## 5.1. figure  ","6447a700":"## 6.4. \u586b\u5145\u56fe","e89207cf":"# 1. \u57fa\u7840\u7ed8\u56fe","55eaf687":"# \u5b98\u7f51\u6559\u7a0b\n[pyplot tutorial](https:\/\/matplotlib.org\/tutorials\/introductory\/pyplot.html)  "}}