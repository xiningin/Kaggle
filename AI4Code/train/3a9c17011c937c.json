{"cell_type":{"a295fe42":"code","d046d1c0":"code","530894bc":"code","4460af2d":"code","22a7f090":"code","93fc4d43":"code","02c099f4":"code","e6783fa9":"code","951b8432":"code","3ddb1649":"code","069aed25":"code","10857523":"code","bc671fef":"code","4ea8b5cb":"code","8bfb7a4b":"code","660bd835":"code","99d9ede3":"code","33496768":"code","b0ab6a1b":"code","a99d6227":"code","5444aa0d":"code","b888f37b":"code","8116086c":"code","814c887f":"code","91ac4ab6":"code","c52bf02b":"code","3d9ee49f":"code","26ec29ca":"code","6b04ac6d":"code","f1539bf6":"code","8665eff3":"code","7566e7a4":"code","3191d670":"code","4dde3b74":"code","be36a1f4":"code","84fd6f47":"code","f64266c4":"markdown","89470f51":"markdown","c47a694b":"markdown","13fd1062":"markdown","44a2c2f1":"markdown","437b8943":"markdown","9c659f5e":"markdown","e4b9a958":"markdown","27e2355e":"markdown","ed826c21":"markdown","7ee719e7":"markdown","0fe12614":"markdown","da85560b":"markdown","e60a64e7":"markdown","660f4a56":"markdown","88bc1a49":"markdown","d6a0636f":"markdown","e6706e15":"markdown","80ede973":"markdown","72107f2d":"markdown","a8219711":"markdown","4c00b0ab":"markdown"},"source":{"a295fe42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d046d1c0":"print(\"Hello World\")","530894bc":"print(\"Hello World\")","4460af2d":"# Assigning integer values\nx= 5\nprint(x)","22a7f090":"#Assigning float values\nx= 9.0\nprint(x)","93fc4d43":"#Assigning string values\nx= \"Hi\"\nprint(x)","02c099f4":"#Assigning boolean values\nx= True\nprint(x)","e6783fa9":"str(input(\"What is your name? \"))\nint(input(\"Enter a random integer of your choice? \"))\nbool(input(\"Enter something value is true enter nothing it's false\"))","951b8432":"#concatenate string values (With string values you can use + and *)\n\nstr1= \"Hello\"\nstr3= \" \"\nstr2= \"World!\"\n\nprint(str1+str3+str2)\nprint(\"Hello\"+\" \"+ \"World!\")\nprint(2*(str1+str3+str2))","3ddb1649":"#convert float to string\nfloat_value = 1.90\nstring_value = str(float_value)\n\nprint(2*float_value)\nprint(2*string_value)","069aed25":"#convert integer to string\nint_value = 1\nstring_value2 = str(int_value)\n\nprint(2*int_value)\nprint(2*string_value2)","10857523":"#convert float to int\nfloat_value = 1.90\nint_value2= int(float_value)\n\nprint(float_value)\nprint(int_value2)","bc671fef":"#int to float\nint_value= 1\nfloat_value2= float(int_value)\n\nprint(int_value)\nprint(float_value2)","4ea8b5cb":"Number1 = float(input(\"Enter number1: \"))\nNumber2 = float( input(\"Enter number2: \") )\nResAdd = Number1+Number2\nResSub = Number1-Number2\nResDiv = Number1\/Number2\nResMul = Number1*Number2\nprint(\"\\nResult of Addition of \" + str(Number1) + \" and \" + str(Number2) + \" is \" + str(ResAdd))\nprint(\"Result of Subtraction of \" + str(Number1) + \" and \" + str(Number2) + \" is \"  + str(ResSub))\nprint(\"Result of Division of \" + str(Number1) + \" and \" + str(Number2) + \" is \"  + str(ResDiv))\nprint(\"Result of Multiplication of \" + str(Number1) + \" and \" + str(Number2) + \" is \"  + str(ResMul))","8bfb7a4b":"Rad = float(input(\"Enter Radius of circle: \"))\nAreaCir = 3.14*(Rad**2)\nStAreaCir = str(AreaCir)\nprint(\"Area of circle having radius\", Rad, \"is:\", AreaCir)","660bd835":"#if statements\n\nx= int(input(\"Number? \"))\n\nif x<=10:\n  print('Number is less than or equal to 10')","99d9ede3":"#elif statements\n\nx= int(input(\"Number? \"))\n\nif x<=10:\n  print('Number is less than or equal to 10')\nelif x<=20:\n  print('Number is less than or equal to 20')\nelif x<=30:\n  print('Number is less than or equal to 30')","33496768":"#else statements\n\nx= int(input(\"Number? \"))\n\nif x<=10:\n  print('Number is less than or equal to 10')\nelif x<=20:\n  print('Number is less than or equal to 20')\nelif x<=30:\n  print('Number is less than or equal to 30')\nelse:\n  print('Number is greater than 30')","b0ab6a1b":"#entering wrong percentage\nar= True\nwhile ar==True:\n  t= float(input(\"Max marks for each subject:\"))\n  p= float(input(\"Enter physics marks:\"))\n  m= float(input(\"Enter maths marks:\"))\n  b= float(input(\"Enter biology marks:\"))\n  c= float(input(\"Enter chemistry marks:\"))\n  if p>t or c>t or m>t or b>t:\n    print(\"I think you made a mistake. You can never get more marks than the max total marks for each subject. Re enter\\n\")\n    continue\n  else:\n    ar= False\n\n#calculating percentage\npercentage= (p+c+m+b)\/(4*t)* 100\n\nprint(\"\\nPercentage= \", percentage, \"%\")\n\n#adding remarks\nif percentage> 95:\n  print(\"Your pecentage is Outstanding\")\nelif percentage> 90:\n  print(\"Your pecentage is Excellent\")\nelif percentage> 80:\n  print(\"Your pecentage is Very Good\")\nelif percentage> 70:\n  print(\"Your pecentage is good\")\nelif percentage> 40:\n  print(\"Your pecentage is Average\")\nelse:\n  print(\"You failed.\")","a99d6227":"a = float(input(\"Enter number1: \"))\nb = float(input(\"Enter number2: \"))\nc = float(input(\"Enter number3: \"))\nif a > b and a > c:\n  print(\"All conditions are True.\")\nelse:\n  print(\"One or both the conditions are false.\")","5444aa0d":"a = float(input(\"Enter number1: \"))\nb = float(input(\"Enter number2: \"))\nc = float(input(\"Enter number3: \"))\nif a > b or a > c:\n  print(\"Atleast one conditions is True.\")\nelse:\n  print(\"All conditions are false.\")","b888f37b":"a= float(input(\"Enter number1: \"))\nb= float(input(\"Enter number2: \"))\nc= float(input(\"Enter number3: \"))\n\nif a > b:\n    a, b= b,a #swap\nif a > c:\n    a,c= c,a #swap\nif b > c:\n    b, c= c, b #swap\n\nprint(a,\"<\", b, \"<\", c)","8116086c":"num = int(input(\"Enter the number: \"))\nrem = 1\nfor i in range(2, num) :\n  rem = num%i\n  if(rem == 0):\n    print(\"Not a prime number\")\n    break\nif(rem != 0) :\n     print(\"Prime Number\")","814c887f":"limit = int(input(\"Enter the limit: \"))\nfor numi in range(1, limit) :\n  num = numi\n  rem = 1\n  for i in range(2, num) :\n    rem = num%i\n    if(rem == 0):\n      break\n  if(rem != 0) :\n     print(numi)","91ac4ab6":"num = int(input(\"Enter the  3 digit number abc: \"))\na = int(num\/100)\nb = int((num\/10)%10)\nc = int((num%100)%10)\nprint(\"Sum of digits = \", c+b+a)","c52bf02b":"limit = int(input(\"Enter the number of terms of series: \"))\ncur = 1\nprev = 0\nnext = 1\nprint(next)\nfor i in range(1, limit) :\n  next = prev + cur\n  print(next)\n  prev = cur\n  cur = next\n","3d9ee49f":"len = int(input(\"Enter the length \"))\nwidth = int(input(\"Enter the width \"))\nfor row in range(1,width+1):\n   for col in range(1,len+1):\n      print(\"*\", end=\"\")\n   print('')","26ec29ca":"#asterix\n\nn= int(input(\"Size of triangle sequence? \"))\n\nfor row in range(1, n+1):\n  for col in range(1,row+1):\n    print(\"*\", end= \"\")\n  print('')","6b04ac6d":"#numbers\nn= int(input(\"Number for triangle sequence? \"))\n\nfor i in range(1, n+1):\n  for j in range(1,i+1):\n    print(j, \" \", end= \"\")\n  print('')","f1539bf6":"size = int(input(\"Size of triangle? \"))\nspLen= size-1\nfor row in range(0, size):\n  for col in range(0, spLen):\n    print(\" \",end= \"\")\n  for col in range(0, row+1):\n    #print(\"* \", end=\"\")\n    print(row+1,\"\", end=\"\")\n  spLen = spLen - 1\n  print(\"\")\n","8665eff3":"#asterix\nn= int(input(\"Number of rows? \"))\nk= n\nfor i in range(0, n):\n  for j in range(0, i+1):\n    print(\" \",end= \"\")\n  for j in range(0, k):\n    print(\"* \", end=\"\")\n  k = k - 1\n  print(\"\")","7566e7a4":"#number\nn= int(input(\"Number of rows? \"))\nk=n\nz= int(n*(n+1)\/2)\nfor i in range(0, n):\n  for j in range(0, i+1):\n    print(\" \",end= \"\")\n  for j in range(k, 0, -1):\n    print(z,\" \", end=\"\")\n    z=z-1\n  k = k - 1\n  print(\"\")","3191d670":"n= int(input(\"Enter odd number \"))\nn= int((n+1)\/2)\nk= n-1\nfor i in range(0, n):\n  for j in range(0, k):\n    print(\" \",end= \"\")\n  for j in range(0, i+1):\n    print(\"* \", end=\"\")\n  k = k - 1\n  print(\"\")\nk=n-1\nfor i in range(0, n):\n  for j in range(0, i+1):\n    print(\" \",end= \"\")\n  for j in range(0, k):\n    print(\"* \", end=\"\")\n  k = k - 1\n  print(\"\")","4dde3b74":"S= str(input(\"\"))\nS= S.upper()\n\nif S == S[::-1]:\n  print(\"Pallindrome\")","be36a1f4":"#definingfunction\ndef isArmstrong(num):\n    temp = num\n    digit= 0\n    sum=0\n    while temp > 0:\n       digit = temp % 10\n       sum += digit ** 3\n       temp \/\/= 10\n    if num == sum:\n       print(num,\"is an Armstrong number\")\n    else:\n       print(num,\"is not an Armstrong number\")\n\n#callingfunction\n\nisArmstrong(370)\nisArmstrong(380)","84fd6f47":"#printing tables\n#defining function\ndef table(num):\n    print(\"Multiplication Table of\", num)\n    for i in range(1, 11):\n        print(num,\"X\",i,\"=\",num * i)\n    \n#calling function\ntable(8)","f64266c4":"**Logic operator And**\n\nWhen all the conditions are true","89470f51":"**Logic operator Or**\n\nWhen only one condition is true...","c47a694b":"Nested Loops Rectangle Pattern","13fd1062":"Prime Number","44a2c2f1":"**Inverted Triangle**","437b8943":"**Palindrome Program**","9c659f5e":"**Functions**\n\n","e4b9a958":"**Ascending Order**","27e2355e":"Fibonnaci","ed826c21":"**Area of Circle**","7ee719e7":"Nested loops triangle pattern","0fe12614":"Prime number series","da85560b":"**If Else Statements**\n\nWhile writing if statement we have to specify a condition if it is true the code is executed\n\nWhile writing elif statement we have to specify a condition if it is true the code is executed. However it is executed after the if statement and is used to specify many conditions.\n\nElse comes with both if\/ if and elif statements and there is no requirement to specify the condition as it executes if all the if and elif statements are false","e60a64e7":"What we learn\n\n- There are lots of datatypes: float (decimal) , int(integer), boolean(True or False), complex (Complex numbers), str(String) etc..\n\n- To take input we follow the syntax\n\ntype(input(\"To tell the user what to input:\"))\n\nExample\n- str(input(\"What is your name\"))\n- int(input(\"Enter a random integer of your choice\"))\n- bool(input(\"Are you a human? True or False?\"))\n\nSecond we can convert some of the types to other for example\n\n1. float can be converted to string\n2. int to string\n3. int can be to float\n4. float can be to int (rounding off to the lower integer)\n\nCheck code below","660f4a56":"**Nested Loop Triangle(Pyramid) Pattern**","88bc1a49":"Print commant prints the given input in the output. Since hello world is a string we write it in double coats or single coats. Strings can be used to store words or sentences","d6a0636f":"Hello World","e6706e15":"Assigning the value to a variable. Note to assign the value to a variable we dont need to necessarily mention the type. However while assigning string values to a variable it is always important to add the double coats.","80ede973":"Sum of Digits","72107f2d":"**Percentage**","a8219711":"**Basic Calculator**","4c00b0ab":"**Variable Types**"}}