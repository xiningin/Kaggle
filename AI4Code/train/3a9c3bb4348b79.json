{"cell_type":{"0ebac945":"code","664a0aab":"code","dab7998b":"code","470a0a13":"code","56a204fe":"code","cb2685f4":"code","bbb06aca":"code","43b0ed18":"code","9c4d7940":"code","61b79a88":"code","e448175e":"code","f651b918":"code","89f7b4cc":"code","0dcbb8c0":"code","2a78b47c":"code","8bb5a979":"code","8de03640":"code","9b3f94c9":"code","2dda4d3e":"code","405e4c08":"markdown"},"source":{"0ebac945":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","664a0aab":"# Connect to db\nSql = sqlite3.connect('\/kaggle\/input\/clubhouse-dataset\/Clubhouse_Dataset_v1.db')\n# Read the file into panda\ndata = pd.read_sql_query(\"SELECT * FROM user\", Sql)\ndata.head()","dab7998b":"data[data['name'].str.contains('Tuba ')]","470a0a13":"data.info()","56a204fe":"data.isnull().sum()","cb2685f4":"data.describe()","bbb06aca":"from matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nfig = plt.figure(figsize=(8,8))\nplt.scatter(x=data['num_followers'], y=data['num_following'])\nplt.xlabel('Num Of Followers')\nplt.ylabel('Num of Following')\n\nplt.show()","43b0ed18":"data.loc[(data['twitter'] != 'null'), 'twitter_count'] = 1\ndata.loc[(data['twitter'] == 'null'), 'twitter_count'] = 0\ndata.loc[(data['instagram'] != 'null'), 'instagram_count'] = 1\ndata.loc[(data['instagram'] == 'null'), 'instagram_count'] = 0\ndata.head()","9c4d7940":"print ('Visualize the number of followers by Twitter users vs Instagram users.\\n')\n\nfig = plt.figure(figsize=(8,8))\nax = fig.gca()\ndata.boxplot(column='num_followers', by='twitter_count', ax=ax)\nax.set_title('Number of followers by Twitter user')\nax.set_ylabel('Num of followers')\nplt.show()\n\nfig = plt.figure(figsize=(8,8))\nax = fig.gca()\ndata.boxplot(column='num_followers', by='instagram_count', ax=ax)\nax.set_title('Number of followers by Instagram user')\nax.set_ylabel('Num of followers')\nplt.show()","61b79a88":"print ('Visualize the number of followings by Twitter users vs Instagram users.')\n\nfig = plt.figure(figsize=(8,8))\nax = fig.gca()\ndata.boxplot(column='num_following', by='twitter_count', ax=ax)\nax.set_title('Number of followers by Twitter user')\nax.set_ylabel('Num of followers')\nplt.show()\n\nfig = plt.figure(figsize=(8,8))\nax = fig.gca()\ndata.boxplot(column='num_following', by='instagram_count', ax=ax)\nax.set_title('Number of followers by Instagram user')\nax.set_ylabel('Num of followers')\nplt.show()","e448175e":"data['time_created']  = [time.split('T')[0] for time in data['time_created']]","f651b918":"data.groupby('time_created').sum()","89f7b4cc":"data[data['time_created'] == '2020-03-17']","0dcbb8c0":"timeReportData = data['time_created'].value_counts()\ntype(timeReportData)\ntype(timeReportData),timeReportData\ntimeReportData = pd.DataFrame({'Time':timeReportData.to_frame().index, 'Count':timeReportData.to_frame().time_created},index=None)\ntimeReportData\ntimeReportData.reset_index(drop=True, inplace=True)\ntimeReportData","2a78b47c":"timeReportData['Time']","8bb5a979":"top10mostfollowed = data.sort_values(by=['num_followers'],ascending=False).head(10)","8de03640":"top10mostfollowed","9b3f94c9":"topfollowedchart = sns.barplot(y= top10mostfollowed['num_followers'],x=top10mostfollowed['username'],palette=\"Blues_d\").set_xticklabels(top10mostfollowed['username'], rotation=90);","2dda4d3e":" ax = sns.barplot(x=\"num_followers\", y=\"username\", hue=\"twitter_count\", data=top10mostfollowed)","405e4c08":"fig = plt.figure(figsize=(20,20))\nplt.scatter(x=timeReportData['Time'], y=timeReportData['Count'])\nplt.xlabel('Zaman')\nplt.ylabel('Toplam \u00fcye say\u0131s\u0131')\n##plt.xticks(rotation=90)\nplt.xticks(np.arange(1, len(timeReportData), step=10),rotation=90)\nplt.xlim(2)\n\nplt.show()"}}