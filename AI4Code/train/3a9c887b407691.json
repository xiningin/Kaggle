{"cell_type":{"a5c48227":"code","f9a23b4e":"code","6959d551":"code","6cab5a0c":"code","25700b2d":"code","cb925abe":"code","6a3ce157":"code","a3aa4e85":"code","64f61e05":"code","c3a6aced":"code","6e673f31":"code","2a12569f":"code","bdaa88b2":"code","c92ee1d6":"markdown","99337d07":"markdown","9748d101":"markdown","23f81b31":"markdown","2d110ee6":"markdown","c9d55084":"markdown","230ddd86":"markdown"},"source":{"a5c48227":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n","f9a23b4e":"#what the data looks like\ndata  = pd.read_csv(\"..\/input\/restaurant-scores-lives-standard.csv\")\ndata.head(10)","6959d551":"data['inspection_type'].value_counts()\n\n","6cab5a0c":"plt.hist(data['inspection_type'].value_counts())\nplt.show()\n","25700b2d":"print(data['risk_category'].value_counts())","cb925abe":"data[\"business_postal_code\"].value_counts()","6a3ce157":"import seaborn as sns\n%matplotlib inline \ndf = data[[\"business_postal_code\",'risk_category']]\nsns.countplot(x='risk_category',data=df)\n\n","a3aa4e85":"data['inspection_type'].value_counts()","64f61e05":"sns.countplot(x=\"inspection_type\", hue = \"risk_category\", data=data)","c3a6aced":"simple_inspection_type = {'inspection_type':{'Routine - Unscheduled':'Unexpected',\n                                             'Reinspection\/Followup':'Expected',\n                                             'Complaint':'Expected',\n                                             'New Ownership':'Expected',\n                                             'New Construction':'Expected',\n                                             'Non-inspection site visit':'Expected',\n                                             'Structural Inspection':'Expected',\n                                             'New Ownership - Followup':'Expected',\n                                             'Complaint Reinspection\/Followup':'Expected',\n                                             'Foodborne Illness Investigation':'Expected',\n                                             'Routine - Scheduled':'Expected',\n                                             'Special Event':'Expected',\n                                             'Administrative or Document Review':'Expected',\n                                             'Home Environmental Assessment':'Expected',\n                                             'Community Health Assessment':'Expected'\n                                             }}\n\ndata_copy = data.copy()\ndata_copy.replace(simple_inspection_type,inplace = True)\nsns.countplot(x=\"inspection_type\", hue = \"risk_category\", data=data_copy)","6e673f31":"data[\"business_postal_code\"].unique()","2a12569f":"len(data[\"business_postal_code\"].unique())","bdaa88b2":"plt.figure(figsize=(15,10))\nax = sns.countplot(x=\"business_postal_code\", hue = \"risk_category\", data=data_copy)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","c92ee1d6":"Let's see if we can have an idea of a pattern related to the postal code so to not use here longitude-latitude but regions defined by postal codes.\nIt will not be very accurate to say that a region is more at risk than another if we don't compare it with the number of restaurant per surface and the density of population","99337d07":"Here we can see as a first draft that the zones: 94103, 94110,94133, 94109 represent the bigget risk. ","9748d101":"We need to clean the data. But before let's see some plots","23f81b31":"First conclusion: Maybe my classification isn't that true. We need to dig more in each inspection type to know for sure what unexpected visits are and what are not. \nBut the plot is that clear that we have more results with the Unexpected visits\n","2d110ee6":"There is two variables we need to track:\n1\/ the location either by the longitude-latitude or by the business postal code. The location give us an idea if there is any regions where the inspections are often high risk\n\n2\/ The nature of inspection cared by the variable inspection_type: We need to know if there is any correlation between the unexpected inspections and the risk_category","c9d55084":"Let's  see do a light EDA","230ddd86":"In this notebook we'll try to analyse the data of SF Restaurant Scores - LIVES Standard as a continued updating data(updated daily) This notebook is a work for Dashboarding with scheduled notebooks. This is the first draft(without cleaning data)"}}