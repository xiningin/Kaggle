{"cell_type":{"2e33419c":"code","32dc985b":"code","6a1fcbe7":"code","3d077450":"code","a59b0784":"code","bf2beaa6":"code","b46ea2fa":"code","5b130c1d":"code","cd05f31b":"code","a8b0628e":"code","086db12b":"code","58f80ae3":"code","530eb732":"markdown","0b2a6dc9":"markdown","de4d8b21":"markdown","ec2c7e64":"markdown","abd0cd17":"markdown","dd854d59":"markdown","0ca222f6":"markdown","ba84151a":"markdown","f10c8cb0":"markdown","610a0578":"markdown","8f3bbdc2":"markdown","7d820294":"markdown","aaa62fb4":"markdown","045a2db5":"markdown","debbabab":"markdown"},"source":{"2e33419c":"## Step 1. Import Library Dependencies\n# Dependencies\nimport requests as req\nimport json\nimport pandas as pd\n##print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","32dc985b":"# A. Get our base URL for the Open Weather API\nbase_url = \"http:\/\/api.openweathermap.org\/data\/2.5\/weather\"\n\n# B. Get our API Key \nkey = \"c703c966f9be8a0c4869b86832a0898f\"\n\n# C. Get our query (search filter)\nquery_city = \"Los Angeles\"\nquery_units = \"metric\"\n\n# D. Combine everything into our final Query URL\nquery_url = base_url + \"?apikey=\" + key + \"&q=\" + query_city + \"&units=\" + query_units\n\n# Display our final query url\nquery_url","6a1fcbe7":"# Perform a Request Call on our search query\nresponse = req.get(query_url)\nresponse","3d077450":"response = response.json()\nresponse","a59b0784":"# Using json.dumps() allows you to easily read the response output\nprint(json.dumps(response, indent=4, sort_keys=True))","bf2beaa6":"# Extract the temperature data from our JSON Response\ntemperature = response['main']['temp']\nprint (\"The temperature is \" + str(temperature))\n\n# Extract the weather description from our JSON Response\nweather_description = response['weather'][0]['description']\nprint (\"The description for the weather is \" + weather_description)","b46ea2fa":"# A. Get our base URL for the Open Weather API\nbase_url = \"http:\/\/api.openweathermap.org\/data\/2.5\/weather\"\n\n# B. Get our API Key \nkey = \"c703c966f9be8a0c4869b86832a0898f\"\n\n# C. Create an empty list to store our JSON response objects\nweather_data = []\n\n# D. Define the multiple cities we would like to make a request for\ncities = [\"London\", \"Paris\", \"Las Vegas\", \"Stockholm\", \"Sydney\", \"Hong Kong\"]\n\n# E. Read through each city in our cities list and perform a request call to the API.\n# Store each JSON response object into the list\nfor city in cities:\n    query_url = base_url + \"?apikey=\" + key + \"&q=\" + city\n    weather_data.append(req.get(query_url).json())","5b130c1d":"# Now our weather_data list contains 6 different JSON objects for each city\n# Print the first city (London) \nweather_data","cd05f31b":"# Create an empty list for each variable\ncity_name = []\ntemperature_data = []\nweather_description_data = []\n\n# Extract the city name, temperature, and weather description of each City\nfor data in weather_data:\n    city_name.append(data['name'])\n    temperature_data.append(data['main']['temp'])\n    weather_description_data.append(data['weather'][0]['description'])\n\n# Print out the list to make sure the queries were extracted \nprint (\"The City Name List: \" + str(city_name))\nprint (\"The Temperature List: \" + str(temperature_data))\nprint (\"The Weather Description List: \" + str(weather_description_data))","a8b0628e":"# Extract the city name, temperature, and weather description of each City\ncity_name = [data['name'] for data in weather_data]\ntemperature_data = [data['main']['temp'] for data in weather_data]\nweather_description_data = [data['weather'][0]['description'] for data in weather_data]\n\n# Print out the list to make sure the queries were extracted \nprint (\"The City Name List: \" + str(city_name))\nprint (\"The Temperature List: \" + str(temperature_data))\nprint (\"The Weather Description List: \" + str(weather_description_data))","086db12b":"# Create a dictionary containing our newly extracted information\nweather_data = {\"City\": city_name, \n                \"Temperature\": temperature_data,\n                \"Weather Description\": weather_description_data}","58f80ae3":"# Convert our dictionary into a Pandas Data Frame\nweather_data = pd.DataFrame(weather_data).reset_index()\nweather_data","530eb732":"**Create an API Key**\n\nJust register on the Sign up page https:\/\/home.openweathermap.org\/users\/sign_up\n\nGet your unique API key on your personal page","0b2a6dc9":"**How to Query a JSON API in Python**\n\n* Import Library Dependencies\n* Create Query URL (which contains the url, apikey, and query filters)\n* Perform a Request Call & Convert to JSON\n* Extract Data from JSON Response (Query it)","de4d8b21":"**What is JSON?**\n\nJSON (JavaScript Object Notation) is a compact, text based format for computers to exchange data and is once loaded into Python just like a dictionary.\n\nJSON data structures map directly to Python data types, which makes this a powerful tool for directly accessing data.\n\nThis makes JSON an ideal format for transporting data between a client and a server.","ec2c7e64":"**Perform a Request Call & Convert to JSON**\n\n**Step 1**. **Perform a Request Call** : Using our req.get() method, we'll get back a response from our Weather Map API with the filtered queries.","abd0cd17":"**Convert your dictionary into a Pandas DataFrame**","dd854d59":"**JSON vs Dictionary**\n\nIt is apples vs. oranges comparison:\n\nJSON is a data format (a string).\n\nPython dictionary is a data structure (in-memory object).","0ca222f6":" **Extract Multiple Queries and Store in Pandas DataFrame**\n \n **Using List Comprehension**","ba84151a":"**What is an API?**\n\nAn API (Application Programming Interface) is something that any particular website can design to this thing called an API to give out their data and allow your web application to communicate with that data. Facebook, Twitter, Yelp, and many other services rely and have their own API's.\n\nWith APIs, applications talk to each other without any user knowledge or intervention.\n\nWhen we want to interact with an API in Python (like accessing web services), we get the responses in a form called JSON.","f10c8cb0":" **Extract Multiple Queries and Store in Pandas DataFrame**\n\n**Using For Loop**","610a0578":"**TASK**\n\nGet weather information from the city of Los Angeles","8f3bbdc2":"**Step 2**. **Convert to JSON**: Then just call the .json() at the end to convert it into a JSON format (aka dictionary)","7d820294":"**Create Query URL**\n\nThe \"?\" syntax is used in the begginning of our query string so we can start building a filterized version of our data\n\nThe \"&\" syntax is used to perform our different types of queries, in this case one for city and units","aaa62fb4":"**Extract Data from JSON Response**\n\nFinally, we're able to access our JSON object and extract information from it just as if it was a Python Dictionary.\n\nA JSON object contains a key-value pair.","045a2db5":"**How to Perform Multiple API Calls**","debbabab":"**Create a dictionary to store your data**"}}