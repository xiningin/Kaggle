{"cell_type":{"201a2168":"code","57171f85":"code","aad89c3b":"code","87f46794":"code","4a308d53":"code","26539c12":"code","18c9233f":"code","8caad98a":"code","d8d2d0a7":"code","c7fbadc7":"code","948e4000":"code","15d3817f":"code","a0bba180":"code","6cd51146":"code","90a494f8":"code","eeee2024":"markdown","a5fb342c":"markdown","1f35c48a":"markdown","68a4f967":"markdown","b5fdc611":"markdown","841912a2":"markdown","7fe18a73":"markdown","4c417e50":"markdown","988d669c":"markdown","03073c1f":"markdown","502de3a6":"markdown","b3880639":"markdown","e47f5232":"markdown","da2aa0d5":"markdown"},"source":{"201a2168":"import os\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n\nfrom matplotlib import pyplot as plt\nplt.style.use('seaborn')\n\n\nfrom sklearn import metrics\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nimport xgboost as xgb\n\nimport shap","57171f85":"df = pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\ndf[:3]","aad89c3b":"df = df.apply(LabelEncoder().fit_transform)\ndf[:3]","87f46794":"features = list(set(df.columns.tolist()) - set(['class']))\ntarget = 'class'","4a308d53":"train, test = train_test_split(df,test_size=0.33,random_state=42,stratify=df[target])","26539c12":"param_grid = {\n    \"max_depth\"        : [ 7, 14, 20,23],\n    \"min_child_weight\" : [ 3, 5, 7 ],\n    \"gamma\"            : [ 0.1, 0.3],\n    \"colsample_bytree\" : [ 0.3, 0.5 , 0.7 ],\n    \"n_estimators\" : [ 100,300,600,1000 ],\n }\n","18c9233f":"xgc = xgb.XGBClassifier()\ngrid = GridSearchCV(xgc, param_grid, cv=3,verbose=10,n_jobs=-1)\ngrid.fit(train[features],train[target])","8caad98a":"grid.best_params_","d8d2d0a7":"results = test.copy()\nresults['y_pred'] = grid.best_estimator_.predict(test[features])","c7fbadc7":"print(metrics.classification_report(results[target],results['y_pred']))","948e4000":"sns.heatmap(metrics.confusion_matrix(results[target],results['y_pred']),annot=True,fmt='d');","15d3817f":"fig,ax = plt.subplots(1,1,figsize=(20,20))\nxgb.plot_tree(grid.best_estimator_,num_trees=10,ax=ax);","a0bba180":"expl = shap.TreeExplainer(grid.best_estimator_)","6cd51146":"shap_values = expl.shap_values(test[features],test[target])","90a494f8":"shap.summary_plot(shap_values,test[features])","eeee2024":"**Best params**","a5fb342c":"**Shap Values \/ Feature Impact**","1f35c48a":"**Train\/Test Split**","68a4f967":"## Imports","b5fdc611":"**Classification Report**","841912a2":"**Results**","7fe18a73":"**Features**","4c417e50":"***How does the model think ?***","988d669c":"**Confusion Matrix**","03073c1f":"## Pre-Processing","502de3a6":"## Data\n\n[Source](https:\/\/www.kaggle.com\/uciml\/mushroom-classification)","b3880639":"# Magic Mushroom \ud83c\udf44","e47f5232":"**Looking for best params**","da2aa0d5":"## Modeling"}}