{"cell_type":{"a9a8121c":"code","d2072c3f":"code","8e76f343":"code","64925bbf":"code","b809b6f5":"code","436d3bfe":"markdown"},"source":{"a9a8121c":"import numpy as np\nimport pandas as pd\nimport os\nimport json\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\nimport numpy as np\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\nfrom pathlib import Path","d2072c3f":"data_path = Path('\/kaggle\/input\/abstraction-and-reasoning-challenge\/')\ntraining_path = data_path \/ 'training'\nevaluation_path = data_path \/ 'evaluation'\ntest_path = data_path \/ 'test'\ntraining_tasks = sorted(os.listdir(training_path))","8e76f343":"def show_plot(i): # t88take's funktion with improvements\n    if type(i) is int: # For using slider\n        task_file = str(training_path \/ training_tasks[i])\n    else:\n        task_file = str(training_path \/ i) # For using dropdown menu\n\n    with open(task_file, 'r') as f:\n        task = json.load(f)\n\n    def plot_task(task):\n        \"\"\"\n        Plots the first train and test pairs of a specified task,\n        using same color scheme as the ARC app\n        \"\"\"\n        cmap = colors.ListedColormap(\n            ['#000000', '#0074D9','#FF4136','#2ECC40','#FFDC00',\n             '#AAAAAA', '#F012BE', '#FF851B', '#7FDBFF', '#870C25'])\n        norm = colors.Normalize(vmin=0, vmax=9)\n        fig, axs = plt.subplots(1, 4, figsize=(15,15))\n        axs[0].imshow(task['train'][0]['input'], cmap=cmap, norm=norm)\n        axs[0].axis('off')\n        axs[0].set_title('Train Input')\n        axs[1].imshow(task['train'][0]['output'], cmap=cmap, norm=norm)\n        axs[1].axis('off')\n        axs[1].set_title('Train Output')\n        axs[2].imshow(task['test'][0]['input'], cmap=cmap, norm=norm)\n        axs[2].axis('off')\n        axs[2].set_title('Test Input')\n        axs[3].imshow(task['test'][0]['output'], cmap=cmap, norm=norm)\n        axs[3].axis('off')\n        axs[3].set_title('Test Output')\n        plt.tight_layout()\n        plt.show()\n\n    plot_task(task)","64925bbf":"display(interact(show_plot, i=training_tasks))# Dropdown style","b809b6f5":"display(interact(show_plot, i=(0,400)))# Slider style","436d3bfe":"https:\/\/www.kaggle.com\/t88take created the original kernel\n\nIt's just a quick improvement of his kernel\n\nJust in case you want to save a bit of space and have a look on a specific image\n\nUnfortunately, you can't see 'em, just copy the kernel if you want to :)\n\nGL!\n![demo.gif](attachment:demo.gif)"}}