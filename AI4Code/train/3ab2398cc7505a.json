{"cell_type":{"7eceff38":"code","c4d7f434":"code","0042334a":"code","55b1d478":"code","5ea27b6a":"code","81217606":"code","4a83d696":"code","e5cd9b49":"code","d714898b":"code","6c9ddf09":"code","6e10af4a":"code","be9a54b0":"code","dff96320":"code","322e6034":"code","0f4c83a9":"code","d2c90a92":"code","e2476953":"code","578f00d5":"code","98f8760b":"code","2fc64223":"markdown","fba01a8d":"markdown","7ac21af2":"markdown","abeec2e2":"markdown","1bcc9e7b":"markdown","1250f904":"markdown","08d3f8f9":"markdown","e77c4d3d":"markdown","23bc5769":"markdown","60a6ff5f":"markdown","c5cf9fab":"markdown","eec3ecd8":"markdown","085a4464":"markdown","4f1268d0":"markdown","4de38d70":"markdown","b4d55dcd":"markdown"},"source":{"7eceff38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport sys\nimport os\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import preprocessing\nfrom sklearn import utils\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c4d7f434":"data= pd.read_csv(\"..\/input\/Admission_Predict.csv\")\nprint(\"there are\", len(data.columns), \"columns: \")\nprint (data.columns)\ndata.columns = [c.replace(' ', '_') for c in data.columns]\ndata.info()","0042334a":"data.GRE_Score.plot(kind=\"line\",color=\"green\",label=\"GRE Score\",grid=True,linestyle=\":\")\ndata.TOEFL_Score.plot(kind=\"line\",color=\"purple\",label=\"TOEFL Score\",grid=True)\ndata.University_Rating.plot(kind=\"line\",color=\"pink\",label=\"UNI rank\",grid=True)\ndata.SOP.plot(kind=\"line\",color=\"orange\",label=\"SOP\",grid=True)\ndata.LOR_.plot(kind=\"line\",color=\"blue\",label=\"SOP\",grid=True)\nplt.legend(loc=\"upper right\") #legend: puts feature label into plot\nplt.xlabel(\"indexes\")\nplt.ylabel(\"Features\")\nplt.title(\"GRE SCore\")\nplt.show()\n\n","55b1d478":"#Using Scatter plot for GRE score and Chance of admit.","5ea27b6a":"\ndata.plot(kind=\"scatter\" , x=\"GRE_Score\", y=\"Chance_of_Admit_\", alpha=0.5, color =\"red\")\nplt.xlabel(\"GRE_Score\")\nplt.ylabel(\"Chance_of_Admit_\")\nplt.title(\"GRE and Chance of Admit with scatter\")\nplt.show()\n","81217606":"data.plot(kind=\"scatter\" , x=\"LOR_\", y=\"Chance_of_Admit_\", alpha=0.5, color =\"red\")\nplt.xlabel(\"LOR\")\nplt.ylabel(\"Chance_of_Admit_\")\nplt.title(\"GRE and Chance of Admit with scatter\")\nplt.show()","4a83d696":"data.plot(kind=\"scatter\" , x=\"SOP\", y=\"Chance_of_Admit_\", alpha=0.5, color =\"red\")\nplt.xlabel(\"SOP\")\nplt.ylabel(\"Chance_of_Admit_\")\nplt.title(\"GRE and Chance of Admit with scatter\")\nplt.show()","e5cd9b49":"data.describe()\n#We can see visualization of statistical calculations.\ndata.boxplot(column=\"GRE_Score\", by=\"Research\")\n# ages value by sex\nplt.show()\n","d714898b":"data.describe()\n#We can see visualization of statistical calculations.\ndata.boxplot(column=\"Chance_of_Admit_\", by=\"Research\")\n# ages value by sex\nplt.show()","6c9ddf09":"plt.figure(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,fmt='.1f')\nplt.show()","6e10af4a":"from scipy import stats \n#I include it for see pearsonr value.\ng= sns.jointplot(data['GRE_Score'],data['Chance_of_Admit_'],kind=\"kde\",height=5)\ng = g.annotate(stats.pearsonr)\nplt.savefig('graph.png')\nplt.show()","be9a54b0":"y = data.Chance_of_Admit_.values\nprint(len(y))\nfor i in range(len(y)):\n    if y[i] <= 0.8:\n            y[i] = 0\n    else:\n            y[i] = 1\n\nx = data.drop(['Chance_of_Admit_','Serial_No.'], axis = 1)\n#y =np.ones((80))\n#y=np.random.randint(2, size=80)\ny=y.T\n#x=np.ones((80,6))\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","dff96320":"lr = LogisticRegression()\nlr.fit(x_train,y_train)\nprint(\"Test Accuracy Logistics Reg {:.2f}%\".format(lr.score(x_test,y_test)*100))","322e6034":"from sklearn.svm import SVC\nsvm = SVC(random_state = 1)\nsvm.fit(x_train, y_train)\nprint(\"Test Accuracy of SVM Algorithm: {:.2f}%\".format(svm.score(x_test,y_test)*100))","0f4c83a9":"\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 2)  # n_neighbors means k\nknn.fit(x_train, y_train)\nprediction = knn.predict(x_test)\nprint(\"{} NN Score: {:.2f}%\".format(2, knn.score(x_test, y_test)*100))","d2c90a92":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train, y_train)\nprint(\"Accuracy of Naive Bayes: {:.2f}%\".format(nb.score(x_test,y_test)*100))","e2476953":"from sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier()\ndtc.fit(x_train, y_train)\nprint(\"Decision Tree Test Accuracy {:.2f}%\".format(dtc.score(x_test, y_test)*100))\n","578f00d5":"\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 1000, random_state = 1)\nrf.fit(x_train, y_train)\nprint(\"Random Forest Algorithm Accuracy Score : {:.2f}%\".format(rf.score(x_test,y_test)*100))","98f8760b":"#This is my first attemt to visualize data in this field.\n# Please suggest ways in which I can Improve.\n# Upvote if you find this useful.","2fc64223":"# We can see the maximum accuracy in Random Forest Classifier (95%)","fba01a8d":"#Decision Tree Classifier","7ac21af2":"#Naive Bayes Algorithm","abeec2e2":"#K Means Algorithm.","1bcc9e7b":"#Heatmap to visualize the correlation of each feature on others.","1250f904":"#Effect of SOP on Chance of Admit.","08d3f8f9":"#Box PLot to visualize the effect of Research on GRE Score.","e77c4d3d":"#Random Forest Classifier","23bc5769":"# Regression Analysis","60a6ff5f":"#Effect of Letter of Recommendation on Chance of Admit","c5cf9fab":"#Box Plot to visualize the Chance of admit on Research.","eec3ecd8":"#SVM ","085a4464":"#we are using Chance of admit above 80% as 1 (pass) less than that 0 (fail, less chance to qualify).","4f1268d0":"#Reading the input file.\n##replaced the space with _ for all column name","4de38d70":"#Plotting line plot to see all the values on single graph.","b4d55dcd":"#Logistics Regression"}}