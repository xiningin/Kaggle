{"cell_type":{"6dfd9b33":"code","ce785b9e":"code","a908d799":"code","29543e09":"code","3c7dfd03":"code","aa5ddb5a":"code","d4b46eae":"code","af599118":"code","2ec72e30":"code","72819ba2":"code","2f7bc468":"code","c787674f":"code","7fca939d":"code","63eea292":"code","67de5197":"code","dfb213c5":"code","df839801":"code","13a81665":"code","b68147da":"code","b91514f5":"code","6b0f2f05":"code","38438b44":"code","1e7717ae":"code","e7374c80":"code","f5d375c3":"code","bb933c42":"code","e5b8b122":"code","5bd12356":"code","37bc8a20":"code","740acf99":"code","ed7c64f3":"code","ac8b98b8":"code","0204243f":"code","9dedf92a":"code","4dfaa3e5":"code","7746760f":"markdown","6876b039":"markdown","f83156d4":"markdown","684ee81a":"markdown","338ff1ed":"markdown","8032a3bf":"markdown","13030162":"markdown","ca7b8041":"markdown","1d04e2be":"markdown","0591aea6":"markdown","a5e1969f":"markdown","7e2518c5":"markdown","1d341216":"markdown","69884bb4":"markdown","917f7d44":"markdown","79d0521b":"markdown","073b26a5":"markdown","a205bd98":"markdown","f576ab89":"markdown","3f3c3d26":"markdown","1ce36dc2":"markdown","8e808d61":"markdown"},"source":{"6dfd9b33":"from pandas import Series\ntemperatures = Series([23, 20, 25, 18])\ntemperatures","ce785b9e":"temperatures = Series([23, 20, 25, 18], index=['TOP', 'OUN', 'DAL', 'DEN'])\ntemperatures","a908d799":"temperatures['DAL']","29543e09":"temperatures[['DAL', 'OUN']]","3c7dfd03":"temperatures[temperatures > 20]","aa5ddb5a":"temperatures + 2","d4b46eae":"dps = {'TOP': 14,\n       'OUN': 18,\n       'DEN': 9,\n       'PHX': 11,\n       'DAL': 23}\n\ndewpoints = Series(dps)\ndewpoints","af599118":"'PHX' in dewpoints","2ec72e30":"'PHX' in temperatures","72819ba2":"temperatures.name = 'temperature'\ntemperatures.index.name = 'station'","2f7bc468":"temperatures","c787674f":"from pandas import DataFrame\n\ndata = {'station': ['TOP', 'OUN', 'DEN', 'DAL'],\n        'temperature': [23, 20, 25, 18],\n        'dewpoint': [14, 18, 9, 23]}\n\ndf = DataFrame(data)\ndf","7fca939d":"df['temperature']","63eea292":"df.dewpoint","67de5197":"df['wspeed'] = 0.\ndf","dfb213c5":"df.index = df.station\ndf","df839801":"df.drop('station', 1, inplace=True)\ndf","13a81665":"df.loc['DEN']","b68147da":"df.T","b91514f5":"df.values","6b0f2f05":"df.temperature.values","38438b44":"import pandas as pd","1e7717ae":"df = pd.read_csv('..\/input\/train_V2.csv')","e7374c80":"df.head()","f5d375c3":"df.columns","bb933c42":"len(df)","e5b8b122":"df.isnull().sum()","5bd12356":"len(df)","37bc8a20":"df.head()","740acf99":"df.reset_index(drop=True, inplace=True)","ed7c64f3":"df.head()","ac8b98b8":"print('Min: {}\\nMax: {}'.format(df.damageDealt.min(), df.damageDealt.max()))","0204243f":"df.teamKills.corr(df.damageDealt)","9dedf92a":"df.groupby('teamKills').mean()","4dfaa3e5":"df.groupby('teamKills').describe()","7746760f":"Look at the `values` attribute to access the data as a 1D or 2D array for series and data frames recpectively.","6876b039":"<a name=\"missing\"><\/a>\n## Missing Data\nWe've already dealt with some missing data by turning the 'M' string into actual NaN's while reading the file in. We can do one better though and delete any rows that have all values missing. There are similar operations that could be performed for columns. You can even drop if any values are missing, all are missing, or just those you specify are missing.","f83156d4":"The values on the left are the index (zero based integers by default) and on the right are the values. Notice that the data type is an integer. Any NumPy datatype is acceptable in a series.\n\nThat's great, but it'd be more useful if the station were associated with those values. In fact you could say we want the values *indexed* by station name.","684ee81a":"Notice the index is shared and that the name of the column is attached as the series name.\n\nYou can also create a new column and assign values. If I only pass a scalar it is duplicated.","338ff1ed":"<a name=\"series\"><\/a>\n## Data Series\nData series are one of the fundamental data structures in Pandas. You can think of them like a dictionary; they have a key (index) and value (data\/values) like a dictionary, but also have some handy functionality attached to them.\n\nTo start out, let's create a series from scratch. We'll imagine these are temperature observations.","8032a3bf":"<a href=\"#top\">Top<\/a>\n<hr style=\"height:2px;\">","13030162":"We can even transpose the data easily if we needed that do make things easier to merge\/munge later.","ca7b8041":"Let's set the index to be the station.","1d04e2be":"Remember how I said that series are like dictionaries? We can create a series striaght from a dictionary.","0591aea6":"You can access columns (data series) using dictionary type notation or attribute type notation.","a5e1969f":"<a name=\"manipulating\"><\/a>\n## Manipulating Data\nWe can now take our data and do some intersting things with it. Let's start with a simple min\/max.","7e2518c5":"Well, that's close, but we now have a redundant column, so let's get rid of it.","1d341216":"<a href=\"#top\">Top<\/a>\n<hr style=\"height:2px;\">","69884bb4":"Series have a name attribute and their index has a name attribute.","917f7d44":"Now, very similar to a dictionary, we can use the index to access and modify elements.","79d0521b":"You can also do some useful statistics on data with attached methods like corr for correlation coefficient.","073b26a5":"<a name=\"loading\"><\/a>\n## Loading Data in Pandas\nThe real power of pandas is in manupulating and summarizing large sets of tabular data. To do that, we'll need a large set of tabular data. We've included a file in this directory called `JAN17_CO_ASOS.txt` that has all of the ASOS observations for several stations in Colorado for January of 2017. It's a few hundred thousand rows of data in a tab delimited format. Let's load it into Pandas.","a205bd98":"We can also call a `groupby` on the data frame to start getting some summary information for each station.","f576ab89":"We can also do basic filtering, math, etc.","3f3c3d26":"It's also easy to check and see if an index exists in a given series:","1ce36dc2":"<a name=\"frames\"><\/a>\n## Data Frames\nSeries are great, but what about a bunch of related series? Something like a table or a spreadsheet? Enter the data frame. A data frame can be thought of as a dictionary of data series. They have indexes for their rows and their columns. Each data series can be of a different type , but they will all share a common index.\n\nThe easiest way to create a data frame by hand is to use a dictionary.","8e808d61":"Now let's get a row from the dataframe instead of a column."}}