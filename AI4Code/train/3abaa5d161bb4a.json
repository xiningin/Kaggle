{"cell_type":{"186fa439":"code","495ecc2b":"code","55711d13":"code","f21f9c61":"code","4a4e5312":"code","fa38920a":"code","dfe1be6a":"code","7794d084":"code","20b3dd90":"code","d8068e01":"code","aeb09353":"code","a0b6b7ec":"code","e9237d74":"code","15b956a0":"code","7628ebb9":"code","c57e28cc":"code","0a3f332b":"code","2fc3b5cb":"code","fcf2fffc":"code","7c879693":"code","f4253d77":"code","e9fb9269":"code","fe23f0a8":"code","d4a95087":"code","0133fb8b":"code","cdb62b43":"code","36ce7249":"code","a6603996":"code","05d9adfb":"code","c48dbd70":"code","d4693e1f":"code","2466f1b6":"code","cd4de16b":"code","860dfe7c":"code","f97d6178":"code","e2045962":"code","56930dd9":"code","80c2e026":"code","92adccb4":"code","fa7b7dbc":"code","b84f7dfb":"code","236a54f2":"code","b95f3731":"code","b7a4f901":"code","f9280a6d":"code","dd7f0fa1":"code","655b40c1":"code","e89d507e":"code","0d43edd4":"code","963c0aa7":"code","9f73f86f":"code","bdaf80d4":"code","e846d18a":"code","8387ed97":"code","96e60b36":"code","b6ca870d":"code","43ed7999":"code","6897330d":"code","78d5f0ae":"code","f38441bf":"code","7d3312db":"code","7fea540a":"code","49b3ad0a":"code","b1d40e20":"code","afc61049":"code","b040dffd":"code","b8a31ad4":"code","807bd8ce":"code","649e98b6":"code","43000383":"code","df67edd4":"code","299317cb":"code","9a3a6656":"code","a7d8f3d9":"code","36ea19b8":"code","5ec124a7":"code","2bf1a7c9":"code","d47589ae":"code","22dd6c6d":"code","9bdc4c42":"code","f174c703":"code","83050805":"code","ebe5312e":"code","12aefe17":"code","53a47d10":"code","92a1c2bd":"markdown","31a1693e":"markdown","e5100946":"markdown","5bccbd03":"markdown","a6148872":"markdown","3a4054ee":"markdown","3546320b":"markdown","788b0540":"markdown","07364c9f":"markdown","f5e13f88":"markdown","72ee4438":"markdown","21cfa7c0":"markdown","8ce56de0":"markdown","490ef5f0":"markdown","e4f7424d":"markdown","b879c9d3":"markdown","b107b73e":"markdown","8782cbad":"markdown","45fb948e":"markdown","b33a943b":"markdown","478e00ec":"markdown","ac553a83":"markdown","5f11262e":"markdown","337c3a52":"markdown","c09744b3":"markdown","2f38ad1d":"markdown","1cf5bbaf":"markdown","7d6d1148":"markdown","07ebddb2":"markdown","8e3c878c":"markdown","03f32f7b":"markdown","6174c491":"markdown","16f45010":"markdown","15ea9588":"markdown","174b29d0":"markdown","ee033d45":"markdown","84009d50":"markdown","a673234e":"markdown","acaed52e":"markdown","63c1187c":"markdown","81969087":"markdown","05dddd07":"markdown","b9198a59":"markdown","3e70dee2":"markdown","b06ea5f9":"markdown","12baebf0":"markdown","66c30b19":"markdown","13898846":"markdown","f481c5f2":"markdown","cbb816ac":"markdown"},"source":{"186fa439":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# import all important libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","495ecc2b":"countryData = pd.read_csv(\"..\/input\/Country-data.csv\")","55711d13":"countryData.shape","f21f9c61":"countryData.head()","4a4e5312":"countryData.describe()","fa38920a":"countryData.info()","dfe1be6a":"countryData.isnull().sum()","7794d084":"plt.figure(figsize=(35, 20))\n\nplt.subplot(3,1,1)\nplt.xticks(rotation=90,fontsize=12)\nsorted_child_mort = countryData[['country','child_mort']].sort_values('child_mort', ascending = False)\nax1=sns.barplot(x='country', y='child_mort', data=sorted_child_mort, estimator=np.mean)\nax1.set(xlabel = 'Countries', ylabel= 'Child Mortality Rate')\n\nplt.subplot(3,1,2)\nplt.xticks(rotation=90,fontsize=12)\nsorted_total_fer = countryData[['country','total_fer']].sort_values('total_fer', ascending = False)\nax2=sns.barplot(x='country', y='total_fer', data=sorted_total_fer, estimator=np.mean)\nax2.set(xlabel = 'Countries', ylabel= 'Fertility Rate')\n\nplt.subplot(3,1,3)\nplt.xticks(rotation=90,fontsize=12)\nsorted_life_expec = countryData[['country','life_expec']].sort_values('life_expec', ascending = True)\nax2=sns.barplot(x='country', y='life_expec', data=sorted_life_expec, estimator=np.mean)\nax2.set(xlabel = 'Countries', ylabel= 'Life Expectancy')\n\nplt.subplots_adjust(hspace=1)\nplt.show()\n#plt.tight_layout()","20b3dd90":"countryData['exports'] = (countryData['exports'] * countryData['gdpp'])\/100\ncountryData['imports'] = (countryData['imports'] * countryData['gdpp'])\/100\ncountryData['health'] = (countryData['health'] * countryData['gdpp'])\/100","d8068e01":"countryData.head(10)","aeb09353":"plt.figure(figsize=(16, 16))\n\nplt.subplot(3,2,1)\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\navg15_country_exports = countryData[['country','exports']].sort_values('exports', ascending = False).head(15)\nax1=sns.barplot(x='country', y='exports', data=avg15_country_exports, estimator=np.mean)\n\nplt.subplot(3,2,2)\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\navg15_country_imports = countryData[['country','imports']].sort_values('imports', ascending = False).head(10)\nax2=sns.barplot(x='country', y='imports', data=avg15_country_imports, estimator=np.mean)\n\nplt.subplot(3,2,3)\nplt.xticks(rotation=45,fontsize=12)\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\navg15_country_healthspend = countryData[['country','health']].sort_values('health', ascending = False).head(10)\nax3=sns.barplot(x='country', y='health', data=avg15_country_healthspend, estimator=np.mean)\n\nplt.subplots_adjust(hspace=1)\nplt.show()","a0b6b7ec":"# Checking for outliers in the continuous variables\nfactors = countryData[['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec','total_fer', 'gdpp']]","e9237d74":"plt.figure(figsize=(20, 10))\nplt.subplot(3,3,1)\nsns.boxplot(factors['child_mort'],orient=\"v\")\nplt.subplot(3,3,2)\nsns.boxplot(factors['life_expec'],orient=\"v\")\nplt.subplot(3,3,3)\nsns.boxplot(factors['health'],orient=\"v\")\nplt.subplot(3,3,4)\nsns.boxplot(factors['income'],orient=\"v\")\nplt.subplot(3,3,5)\nsns.boxplot(factors['inflation'],orient=\"v\")\nplt.subplot(3,3,6)\nsns.boxplot(factors['imports'],orient=\"v\")\nplt.subplot(3,3,7)\nsns.boxplot(factors['exports'],orient=\"v\")\nplt.subplot(3,3,8)\nsns.boxplot(factors['gdpp'],orient=\"v\")\nplt.subplot(3,3,9)\nsns.boxplot(factors['total_fer'],orient=\"v\")\nplt.show()","15b956a0":"# Checking outliers at 25%, 50%, 75%, 90%, 95% and 99%\nfactors.describe(percentiles=[.05,.25, .5, .75, .90, .95, .99])","7628ebb9":"# # removing (statistical) outliers\nQ1 = countryData.child_mort.quantile(0.05)\nQ3 = countryData.child_mort.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.child_mort >= Q1 - 1.5*IQR) & (countryData.child_mort <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.health.quantile(0.05)\nQ3 = countryData.health.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.health >= Q1 - 1.5*IQR) & (countryData.health <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.income.quantile(0.05)\nQ3 = countryData.income.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.income >= Q1 - 1.5*IQR) & (countryData.income <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.inflation.quantile(0.05)\nQ3 = countryData.inflation.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.inflation >= Q1 - 1.5*IQR) & (countryData.inflation <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.imports.quantile(0.05)\nQ3 = countryData.imports.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.imports >= Q1 - 1.5*IQR) & (countryData.imports <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.exports.quantile(0.05)\nQ3 = countryData.exports.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.exports >= Q1 - 1.5*IQR) & (countryData.exports <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.gdpp.quantile(0.05)\nQ3 = countryData.gdpp.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.gdpp >= Q1 - 1.5*IQR) & (countryData.gdpp <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.life_expec.quantile(0.05)\nQ3 = countryData.life_expec.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.life_expec >= Q1 - 1.5*IQR) & (countryData.life_expec <= Q3 + 1.5*IQR)]\n\nQ1 = countryData.total_fer.quantile(0.05)\nQ3 = countryData.total_fer.quantile(0.95)\nIQR = Q3 - Q1\ncountryData = countryData[(countryData.total_fer >= Q1 - 1.5*IQR) & (countryData.total_fer <= Q3 + 1.5*IQR)]","c57e28cc":"countryData.head()","0a3f332b":"countryData.shape","2fc3b5cb":"plt.figure(figsize = (12, 10))\nsns.heatmap(countryData.corr(), annot = True, cmap=\"bwr\" , linewidths=.5)\nplt.show()","fcf2fffc":"df_countryData=countryData.copy()\ndf_countryData.drop(['country'],axis=1,inplace=True)","7c879693":"# Scaling\n# instantiate\nscaler = StandardScaler()\n\n# fit_transform\ndf_scaled_countryData = scaler.fit_transform(df_countryData)","f4253d77":"df_scaled_countryData = pd.DataFrame(df_scaled_countryData)\ndf_scaled_countryData.head()","e9fb9269":"pca = PCA(svd_solver='randomized',random_state=42)","fe23f0a8":"pca.fit(df_scaled_countryData)","d4a95087":"pca.components_","0133fb8b":"pca.explained_variance_ratio_","cdb62b43":"fig = plt.figure(figsize=[10,8])\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel(\"Number of components\")\nplt.ylabel(\"Cumulative variance explained\")\nplt.show()","36ce7249":"cols = list(df_countryData.columns)\ndf_principal_comp = pd.DataFrame({'PC1':pca.components_[0] , 'PC2':pca.components_[1],'PC3':pca.components_[2],'PC4':pca.components_[3],'Features':cols})\ndf_principal_comp.head(10)","a6603996":"fig = plt.figure(figsize = (8,8))\nplt.scatter(df_principal_comp.PC1, df_principal_comp.PC2)\nplt.xlabel('Principal Component 1')\nplt.ylabel('Principal Component 2')\nfor i, txt in enumerate(df_principal_comp.Features):\n    plt.annotate(txt, (df_principal_comp.PC1[i],df_principal_comp.PC2[i]))","05d9adfb":"# let's go ahead and do dimenstionality reduction using the four Principal Components\npca_final = IncrementalPCA(n_components=4)","c48dbd70":"df_pca_final = pca_final.fit_transform(df_scaled_countryData)","d4693e1f":"df_pca_final.shape","2466f1b6":"df_pca_final = pd.DataFrame(df_pca_final)\ndf_pca_final.head()","cd4de16b":"corrmat = np.corrcoef(df_pca_final.transpose())","860dfe7c":"corrmat.shape","f97d6178":"plt.figure(figsize=[10,5])\nsns.heatmap(corrmat, annot=True)","e2045962":"df_pca_final.corr()","56930dd9":"df_pca = df_pca_final.copy()","80c2e026":"df_pca.columns","92adccb4":"df_pca_final.columns","fa7b7dbc":"#Adding country column to PCA dataframe\ndf_pca_final['country'] = countryData['country']\ndf_pca_final.columns = ['PC1','PC2','PC3','PC4','country']\ndf_pca_final.head()","b84f7dfb":"sns.scatterplot(x='PC1',y='PC2',data=df_pca_final)","236a54f2":"plt.figure(figsize=(20,10))\nsns.regplot(x='PC1', y='PC2', data=df_pca_final, fit_reg=False)\n\ndef label_point(x, y, val, ax):\n    a = pd.concat({'x': x, 'y': y, 'val': val}, axis=1)\n    for i, point in a.iterrows():\n        ax.text(point['x']+.02, point['y'], str(point['val']))\n\nlabel_point(df_pca_final.PC1, df_pca_final.PC2, df_pca_final.country, plt.gca())","b95f3731":"from sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","b7a4f901":"#Use the Hopkins Statistic function by passing the above dataframe as a paramter\nhopkins(df_pca)","f9280a6d":"#First we'll do the silhouette score analysis\nfrom sklearn.metrics import silhouette_score\nsse_ = []\nfor k in range(2, 10):\n    kmeans = KMeans(n_clusters=k).fit(df_pca)\n    sse_.append([k, silhouette_score(df_pca, kmeans.labels_)])","dd7f0fa1":"plt.plot(pd.DataFrame(sse_)[0], pd.DataFrame(sse_)[1]);","655b40c1":"# elbow-curve\/SSD\nssd = []\nfor num_clusters in list(range(1,10)):\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(df_pca)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)","e89d507e":"# silhouette analysis\nrange_n_clusters = [2,3,4,5,6]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(df_pca)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(df_pca, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","0d43edd4":"kmeans_cluster = KMeans(n_clusters=3, max_iter=50,random_state=50)\nkmeans_cluster.fit(df_pca)","963c0aa7":"kmeans_cluster.labels_","9f73f86f":"df_kmeans=df_pca_final\ndf_kmeans.index = pd.RangeIndex(len(df_kmeans.index))\ndf_kmeans = pd.concat([df_kmeans, pd.Series(kmeans_cluster.labels_)], axis=1)\ndf_kmeans.columns = ['PC1', 'PC2','PC3', 'PC4','country','ClusterID']\ndf_kmeans","bdaf80d4":"df_kmeans['ClusterID'].value_counts()","e846d18a":"#Now lets visualizise the same data as shown above on a scatter plot\nsns.scatterplot(x='PC1',y='PC2',hue='ClusterID',palette=\"Paired\",legend='full',data=df_kmeans)","8387ed97":"merge_df=pd.merge(countryData,df_kmeans, how='inner',on='country')\nmerge_df.head()","96e60b36":"#Removing the principal components to keep the original features as it is \ndf_final=merge_df.drop(['PC1','PC2','PC3','PC4'],axis=1)\ndf_final.shape","b6ca870d":"avg_child_mort =  pd.DataFrame(df_final.groupby([\"ClusterID\"]).child_mort.mean())\navg_gdpp = pd.DataFrame(df_final.groupby([\"ClusterID\"]).gdpp.mean())\navg_income = pd.DataFrame(df_final.groupby([\"ClusterID\"]).income.mean())","43ed7999":"analyse_df = pd.concat([avg_child_mort,avg_gdpp,avg_income],axis=1)","6897330d":"analyse_df","78d5f0ae":"plt.figure(figsize=(16, 8))\n\nplt.subplot(1,3,1)\ns=sns.barplot(x=analyse_df.index,y='child_mort',data=analyse_df)\nplt.xlabel('Country Clusters on basis of Child Mortality', fontsize=8)\nplt.ylabel('Child Mortality', fontsize=8)\n\n\nplt.subplot(1,3,2)\ns=sns.barplot(x=analyse_df.index,y='gdpp',data=analyse_df)\nplt.xlabel('Country Clusters on basis of GDP', fontsize=8)\nplt.ylabel('GDP per capita', fontsize=8)\n\n\nplt.subplot(1,3,3)\ns=sns.barplot(x=analyse_df.index,y='income',data=analyse_df)\nplt.xlabel('Country Clusters on basis of Income', fontsize=8)\nplt.ylabel('Net Income per person', fontsize=8)\n\n\nplt.subplots_adjust(wspace=2)\n\nplt.show()","f38441bf":"analyse_df.rename(index={0: 'Developing Countries'},inplace=True)\nanalyse_df.rename(index={1: 'Developed Countries'},inplace=True)\nanalyse_df.rename(index={2: 'Under-Developed countries'},inplace=True)\nanalyse_df","7d3312db":"country_child_mortality=df_final.loc[df_final['ClusterID'] == 2].sort_values(by='child_mort',ascending=False).head(5)\ncountry_child_mortality","7fea540a":"country_gdpp=df_final.loc[df_final['ClusterID'] == 2].sort_values(by='gdpp',ascending=True).head(5)\ncountry_gdpp","49b3ad0a":"country_income=df_final.loc[df_final['ClusterID'] == 2].sort_values(by='income',ascending=True).head(5)\ncountry_income","b1d40e20":"pd.concat([country_child_mortality,country_gdpp,country_income],ignore_index=True).drop_duplicates().reset_index(drop=True).head(9)","afc61049":"df_pca2= df_pca_final.copy()","b040dffd":"df_hc=df_pca2.drop('country',axis=1)","b8a31ad4":"df_hc.head()","807bd8ce":"# single linkage\nmergings = linkage(df_hc, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","649e98b6":"# complete linkage\nmergings = linkage(df_hc, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","43000383":"# 3 clusters\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","df67edd4":"# assign cluster labels\ndf_hc['cluster_labels'] = cluster_labels\ndf_hc.head()","299317cb":"df_hc['cluster_labels'].value_counts()","9a3a6656":"df_hc.columns","a7d8f3d9":"plt.figure(figsize= (16,6))\nsns.scatterplot(x='PC1',y='PC2',hue='cluster_labels',legend='full', palette = 'Paired',data=df_hc)","36ea19b8":"# Merging the origianl final data frame with hierarchical cluster dataframe\ndf_hc2=df_pca2\ndf_hc2 = pd.concat([df_hc2, df_hc], axis=1)\ndf_hc2.head()","5ec124a7":"#Dropping the prinicpal components from dataframe\ndf_hc_merge=pd.merge(countryData,df_hc2, how='inner',on='country')\ndf_hc3=df_hc_merge.drop(['PC1','PC2','PC3','PC4'],axis=1)\ndf_hc3.head()","2bf1a7c9":"avg_child_mort_2= pd.DataFrame(df_hc3.groupby(['cluster_labels']).child_mort.mean())\navg_gdpp_2 = pd.DataFrame(df_hc3.groupby(['cluster_labels']).gdpp.mean())\navg_gdpp_income_2 = pd.DataFrame(df_hc3.groupby(['cluster_labels']).income.mean())","d47589ae":"analyse_df_2 = pd.concat([avg_child_mort_2,avg_gdpp_2,avg_gdpp_income_2],axis=1)","22dd6c6d":"analyse_df_2","9bdc4c42":"plt.figure(figsize=(16, 6))\n\nplt.subplot(1,3,1)\ns=sns.barplot(x=analyse_df_2.index,y='child_mort',data=analyse_df_2)\nplt.xlabel('Country Clusters on basis of Child Mortality', fontsize=8)\nplt.ylabel('Child Mortality', fontsize=8)\n\n\nplt.subplot(1,3,2)\ns=sns.barplot(x=analyse_df_2.index,y='gdpp',data=analyse_df_2)\nplt.xlabel('Country Clusters on basis of GDP', fontsize=8)\nplt.ylabel('GDP per capita', fontsize=8)\n\n\nplt.subplot(1,3,3)\ns=sns.barplot(x=analyse_df_2.index,y='income',data=analyse_df_2)\nplt.xlabel('Country Clusters on basis of Income', fontsize=8)\nplt.ylabel('Net Income per person', fontsize=8)\n\n\nplt.subplots_adjust(wspace=2)\n\nplt.show()","f174c703":"analyse_df_2.rename(index={0: 'Under Developed Countries'},inplace=True)\nanalyse_df_2.rename(index={1: 'Developed Countries'},inplace=True)\nanalyse_df_2.rename(index={2: 'Developing countries'},inplace=True)\nanalyse_df_2","83050805":"country_child_mortality_2=df_hc3.loc[df_hc3['cluster_labels'] == 0].sort_values(by='child_mort',ascending=False).head(5)\ncountry_child_mortality_2","ebe5312e":"country_gdpp_2=df_hc3.loc[df_hc3['cluster_labels'] == 0].sort_values(by='gdpp',ascending=True).head(5)\ncountry_gdpp_2","12aefe17":"country_income_2=df_hc3.loc[df_hc3['cluster_labels'] == 0].sort_values(by='income',ascending=True).head(5)\ncountry_income_2","53a47d10":"pd.concat([country_child_mortality_2,country_gdpp_2,country_income_2],ignore_index=True).drop_duplicates().reset_index(drop=True).head(9)","92a1c2bd":"### From above we can observe that the almost same countries have been identified by both K-Means and Hierarchical clustering which are in direst need of aid","31a1693e":"### Data Analysis","e5100946":"### PCA on the data","5bccbd03":"Here also we see that 3 seems to be a good number of clusters for K means clustering.","a6148872":"Inference:\n- From the above plot, we can see that the \n    - First component(PC1) is in the direction where the imports, exports, gdpp,income, health,life_expec are more. \n    - Second component(PC2) is in the direction where child_mort , total_fer is more","3a4054ee":"### Combining the 3 dataframes to list out countries which are in direst need of aid based on analysis of 3 variables - child mortality,gdpp and income","3546320b":"As per the above Hopkins score, we reject the null hypothesis. This means that Alternative Hypothesis is true and the given dataset contains meaningful clusters(It has significantly clusterable data) ","788b0540":"# HELP International NGO (Clustering and Principal Component Analysis)\n- HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n- After the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid.\nThe job is to categorise the countries using some socio-economic and health factors that determine the overall development of the country and then suggest the countries which the CEO needs to focus on the most.The solution below will help to derive suggestions to be given the CEO","07364c9f":"Inference :\n- Single linkage type as seen from above has produced a dendrogram which is not structured properly","f5e13f88":"Let us now analyse the clusters by comparing how the three variables [gdpp, child_mort and income] vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries.","72ee4438":"## K Means Clustering","21cfa7c0":"Lets check the correlation between the principal components by plotting the correlation matrix.","8ce56de0":"Inference:\n- Child mortality rate is significantly high for countries in cluster 2 as compared to other clusters\n- GDP of countries in cluster 2 is  very less as compared to other clusters\n- Net Income Per Person of countries in cluster 2 is lowest as compared to other clusters\n- <b>Cluster 2<\/b> seems to be the list of <b>Under Developed countries<\/b>\n- <b>Cluster 1<\/b> seems to be the list of <b>Developed countries<\/b>\n- <b>Cluster 0<\/b> seems to be list of <b>Developing countries<\/b>","490ef5f0":"### Data Visualisation","e4f7424d":"Now lets look at the socio economic factors in the countries and see what inference we get","b879c9d3":"Inference :\n- Haiti has a highest child mortality rate.The next 10 countries where the child mortality rate is high are mostly all the <b> African countries<\/b>\n- Similarly the fertility rate is more in the African and middle east countries but lowest in most European \/ Asia Pacific nations.\n- The life expectancy is highest in Japan (approx 85 years) and lowest in Haiti (approx 30 years).  In general the life expectancy is high in the European and Asia Pacific nations.","b107b73e":"Inference:\n- Child mortality rate is significantly high for countries in cluster 0 as compared to other clusters\n- GDP of countries in cluster 0 is significantly lowest as compared to other clusters\n- Net Income Per Person of countries in cluster 0 is lowest as compared to other clusters\n- <b>Cluster 2<\/b> seems to be the list of <b>Developing countries<\/b>\n- <b>Cluster 1<\/b> seems to be the list of <b>Developed countries<\/b>\n- <b>Cluster 0<\/b> seems to be list of <b>Under Developed countries<\/b>","8782cbad":"Inference :\n- <b>Looks like 4 components are enough to explain 95% of variance in the dataset.<\/b>\n- Perform PCA with 4 components. ","45fb948e":"From the above analysis we see  that 3 seems to be a good number of clusters for K means","b33a943b":"Checking Hopkins Test score and performing Hypothesis test","478e00ec":"Inference:\n- From above it is seen that <b>after performing PCA there are no correlations in the data.<\/b>","ac553a83":"### Combining the 3 dataframes to list out countries which are in direst need of aid based on analysis of 3 variables - child mortality,gdpp and income","5f11262e":"<b>Perform data conversion from percentage to actual values for fields like imports,exports, health spend<\/b>","337c3a52":"#### Variance ration between components","c09744b3":"Inference:\n- Luxembourg has good exports and imports\n- United States has good amount of health spend followed by most of the European nations and Canada who equally have good health spend !","2f38ad1d":"### Scaling the dataset","1cf5bbaf":"##### Making a scree plot for the explained variance","7d6d1148":"Inference:\n- Complete Linkage has given a proper tree liked structure(dendrogram) and making it easier to determine clusters\n- <b> Cutting the above dendrogram at 3 clusters<\/b>","07ebddb2":"## Hiearchical Clustering","8e3c878c":"Not much data is lost after removing outliers as compared to original data","03f32f7b":"### Silhouette Analysis\n\n$$\\text{silhouette score}=\\frac{p-q}{max(p,q)}$$\n\n$p$ is the mean distance to the points in the nearest cluster that the data point is not a part of\n\n$q$ is the mean intra-cluster distance to all the points in its own cluster.\n\n* The value of the silhouette score range lies between -1 to 1. \n\n* A score closer to 1 indicates that the data point is very similar to other data points in the cluster, \n\n* A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","6174c491":"##### Checking for null values","16f45010":"##### Outlier Removal","15ea9588":"### Check Correlations between the variables in the dataset","174b29d0":"Inference\n- Average child mortality rate for cluster 0 seems to the highest and lowest for cluster 1\n- Average gdpp for is the lowest for cluster 0 and highest for cluster 2\n- Average income for is the lowest for cluster 0 and highest for cluster 1","ee033d45":"Filtering out the 5 countries(Hierarchical) from clusters formed by Hierarchical","84009d50":"#### Components from the PCA","a673234e":"#### Import all the important libraries","acaed52e":"From above, you can see that there are no nulls in the data. All columns have data.","63c1187c":"##### Outlier Analysis (followed by removal)","81969087":"Inference:\n - From above it is seen that there are highly correlated factors. We will need to do PCA to solve this.","05dddd07":"Lets look at the population factors in the countries and see what inferences we get","b9198a59":"As we can see from above table and the box plots there are a number of outliers in the data.We will treat the outliers to values accordingly for analysis. ","3e70dee2":"Filtering out the 5 countries(Hierarchical) from clusters formed by KMeans","b06ea5f9":"Inference\n- Average child mortality rate for cluster 2 seems to the highest and lowest for cluster 1\n- Average gdpp for is the lowest for cluster 2 and highest for cluster 1\n- Average income for is the lowest for cluster 2 and highest for cluster 1","12baebf0":"### Analysis of the clusters by comparing how these three variables - [gdpp, child_mort and income] vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries\/developing countries","66c30b19":"### Incremental PCA","13898846":"## Hopkins Statistics:\nThe Hopkins statistic, is a statistic which gives a value which indicates the cluster tendency, in other words: how well the data can be clustered.It is used to assess the clustering tendency of a data set by measuring the probability that a given data set is generated by a uniform data distribution.\n\n- If the value is between {0.01, ...,0.3}, the data is regularly spaced.\n\n- If the value is around 0.5, it is random.\n\n- If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.\n\nThe null and the alternative hypotheses are defined as follow:\n- Null hypothesis: the data set is uniformly distributed (i.e. no meaningful clusters)\n- Alternative hypothesis: the data set  is not uniformly distributed (i.e. contains meaningful clusters)\n","f481c5f2":"Let's find out the names of under developed countries now which from  are in direst need of aid  ","cbb816ac":"### Analysis of the clusters by comparing how these three variables - [gdpp, child_mort and income] vary for each cluster of countries to recognise and differentiate the clusters of developed countries from the clusters of under-developed countries\/developing countries"}}