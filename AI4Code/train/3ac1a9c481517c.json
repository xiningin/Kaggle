{"cell_type":{"dfb2f445":"code","60008d72":"code","c8b4df8e":"code","5ede6c2d":"code","1b4d1e3a":"code","4e15a835":"code","53ea5fbf":"markdown","a5465437":"markdown","e073b1ea":"markdown","4338761c":"markdown","613fc557":"markdown","b024b140":"markdown","241705e2":"markdown"},"source":{"dfb2f445":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60008d72":"from google.cloud import bigquery\n\n# \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c(Client()) \uad6c\uae00\ud074\ub77c\uc6b0\ub4dc \ube45\ucffc\ub9ac\uc5d0 \uc811\uc18d\ud558\ub294 \uba85\ub839\uc744 \ub0b4\ub9ac\uace0 \uc774\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub77c(client) \uc815\uc758\nclient = bigquery.Client()\n\n# \ubd88\ub7ec\uc62c \uc790\ub8cc(dataset)\uc758 \uacbd\ub85c \uc124\uc815 : \uc811\uc18d\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ube45\ucffc\ub9ac\uc5d0 \uc788\ub294 \uacf5\uacf5 \uc790\ub8cc \uc911\uc5d0(project = 'bigquery-public-data') \n# \ubbf8\uad6d \uad50\ud1b5 \uc0ac\ub9dd\uc790 \uae30\ub85d \uc790\ub8cc\ub97c('nhtsa_traffic_fatalities') \ubd88\ub7ec \uc624\uae30 \uc704\ud55c \uacbd\ub85c\ub97c \uc124\uc815\ud568\n# \uc124\uc815\ud55c \uacbd\ub85c\ub97c dataset_ref\ub77c \uc815\uc758\ndataset_ref = client.dataset('nhtsa_traffic_fatalities', project = 'bigquery-public-data')\n\n# \uc124\uc815\ud55c \uacbd\ub85c\ub300\ub85c \ud074\ub77c\uc774\uc5b4\ud2b8\ub97c \ud1b5\ud574 \uc790\ub8cc \ubd88\ub7ec\uc624\uace0 \uc774 \uc790\ub8cc\ub97c dataset\uc774\ub77c \uc815\uc758\ndataset = client.get_dataset(dataset_ref)\n\n# \uc790\ub8cc\ub97c \ubd88\ub7ec\uc62c \ub54c \uacbd\ub85c\ub97c \uc124\uc815\ud588\ub358 \ucc98\ub7fc \ubd88\ub7ec\uc62c \ud45c\uc758 \uacbd\ub85c \uc124\uc815, \uacbd\ub85c\ub300\ub85c \ud45c\ub97c \ubd88\ub7ec\uc624\uace0 \uc774 \ud45c\ub97c table\uc774\ub77c \uc815\uc758\ntable_ref = dataset_ref.table('accident_2015')\ntable = client.get_table(table_ref)\n\n# \ubd88\ub7ec\uc628 \ud45c\ub97c \uc704\uc5d0\uc11c 5\ud589\ub9cc \ub098\ud0c0\ub0b4 \ud655\uc778 \nclient.list_rows(table, max_results=5).to_dataframe()","c8b4df8e":"query = \"\"\"\n        SELECT COUNT(consecutive_number) AS num_accidents,\n               EXTRACT(DAYOFWEEK FROM timestamp_of_crash) AS day_of_week\n        FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`\n        GROUP BY day_of_week\n        ORDER BY num_accidents DESC\n        \"\"\"\n# \uce90\uae00\uc5d0\uc11c \uad6c\uae00 \ud074\ub77c\uc6b0\ub4dc\uc5d0 \uc788\ub294 \uc790\ub8cc\ub294 \uc6d4\ub9c8\ub2e4 \uc4f8 \uc218 \uc788\ub294 \uc591\uc774 \ud55c\uc815\ub418\uc5b4 \uc788\uc5b4 1\uae30\uac00\ubc14\uc774\ud2b8(1,000,000,000 \ubc14\uc774\ud2b8)\ub97c \ub118\uc73c\uba74 \uc790\ub8cc \uc694\uccad\uc744 \ucde8\uc18c\ud558\ub294 \uba85\ub839\uc744 \ub0b4\ub9bc \nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**9)\nquery_job = client.query(query, job_config=safe_config)\n\n# \uc694\uccad\ud574 \ubd88\ub7ec\uc628 \uc790\ub8cc\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ubc14\uafc8\naccidents_by_day = query_job.to_dataframe()\n\naccidents_by_day\n# day_of_week \uac12\uc740 1~7\ub85c \ub098\uc624\ub294\ub370, 1\uc740 \uc77c\uc694\uc77c, 2\ub294 \uc6d4\uc694\uc77c \uc21c\uc73c\ub85c 7\uc740 \ud1a0\uc694\uc77c.","5ede6c2d":"# \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c(Client()) \uad6c\uae00\ud074\ub77c\uc6b0\ub4dc \ube45\ucffc\ub9ac\uc5d0 \uc811\uc18d\ud558\ub294 \uba85\ub839\uc744 \ub0b4\ub9ac\uace0 \uc774\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub77c(client) \uc815\uc758\nclient = bigquery.Client()\n\n# \ubd88\ub7ec\uc62c \uc790\ub8cc(dataset)\uc758 \uacbd\ub85c \uc124\uc815 : \uc811\uc18d\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ube45\ucffc\ub9ac\uc5d0 \uc788\ub294 \uc790\ub8cc\uc9d1 \uacf5\uacf5 \uc790\ub8cc\uc9d1\uc744 \ud0dd\ud558\uace0(project = 'bigquery-public-data') \n# \uc138\uacc4 \uc740\ud589 \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828 \uc790\ub8cc\ub97c('world_bank_intl_education') \ubd88\ub7ec \uc624\uae30 \uc704\ud55c \uacbd\ub85c\ub97c \uc124\uc815\ud568\n# \uc124\uc815\ud55c \uacbd\ub85c\ub97c dataset_ref\ub77c \uc815\uc758\ndataset_ref = client.dataset('world_bank_intl_education', project='bigquery-public-data')\n\n# \uc124\uc815\ud55c \uacbd\ub85c\ub300\ub85c \ud074\ub77c\uc774\uc5b4\ud2b8\ub97c \ud1b5\ud574 \uc790\ub8cc \ubd88\ub7ec\uc624\uace0 \uc774 \uc790\ub8cc\ub97c dataset\uc774\ub77c \uc815\uc758\ndataset = client.get_dataset(dataset_ref)\n\n# \uc790\ub8cc\ub97c \ubd88\ub7ec\uc62c \ub54c \uacbd\ub85c\ub97c \uc124\uc815\ud588\ub358 \uac83\ucc98\ub7fc \ubd88\ub7ec\uc62c \ud45c\uc758 \uacbd\ub85c \uc124\uc815, \uacbd\ub85c\ub300\ub85c \ud45c\ub97c \ubd88\ub7ec\uc624\uace0 \uc774 \ud45c\ub97c table\uc774\ub77c \uc815\uc758\ntable_ref = dataset_ref.table('international_education')\ntable = client.get_table(table_ref)\n\n# \ubd88\ub7ec\uc628 \ud45c\ub97c \uc704\uc5d0\uc11c 5\ud589\ub9cc \ub098\ud0c0\ub0b4 \ud655\uc778\nclient.list_rows(table, max_results=5).to_dataframe()","1b4d1e3a":"query = \"\"\"\n        SELECT country_name, avg(value) as avg_ed_spending_pct\n        FROM `bigquery-public-data.world_bank_intl_education.international_education`\n        WHERE indicator_code='SE.XPD.TOTL.GD.ZS' and 2010 <= year and year <= 2017\n        GROUP BY country_name, indicator_code\n        ORDER BY avg_ed_spending_pct DESC\n        \"\"\"\n# \uce90\uae00 \ub178\ud2b8\ubd81\uc5d0\uc11c \uad6c\uae00 \ud074\ub77c\uc6b0\ub4dc\uc5d0 \uc788\ub294 \uc790\ub8cc\ub294 \uc6d4\ub9c8\ub2e4 \uc4f8 \uc218 \uc788\ub294 \uc591\uc774 \ud55c\uc815\ub418\uc5b4 \uc788\uc5b4 1\uae30\uac00\ubc14\uc774\ud2b8(1,000,000,000 \ubc14\uc774\ud2b8)\ub97c \ub118\uc73c\uba74 \uc790\ub8cc \uc694\uccad\uc744 \ucde8\uc18c\ud558\ub294 \uba85\ub839\uc744 \ub0b4\ub9bc \nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**9)\nquery_job = client.query(query, job_config=safe_config)\n\n# \uc694\uccad\ud574 \ubd88\ub7ec\uc628 \uc790\ub8cc\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ubc14\uafc8\ncountry_spending_results = query_job.to_dataframe()\n\ncountry_spending_results","4e15a835":"code_count_query = \"\"\"\n                    select indicator_code, indicator_name, count(1) as num_rows\n                    from `bigquery-public-data.world_bank_intl_education.international_education`\n                    where year = 2016\n                    group by indicator_code, indicator_name\n                    having count(1) >= 175\n                    order by count(1) desc\n                    \"\"\"\n\n\n# \uce90\uae00 \ub178\ud2b8\ubd81\uc5d0\uc11c \uad6c\uae00 \ud074\ub77c\uc6b0\ub4dc\uc5d0 \uc788\ub294 \uc790\ub8cc\ub294 \uc6d4\ub9c8\ub2e4 \uc4f8 \uc218 \uc788\ub294 \uc591\uc774 \ud55c\uc815\ub418\uc5b4 \uc788\uc5b4 10\uae30\uac00\ubc14\uc774\ud2b8(10,000,000,000 \ubc14\uc774\ud2b8)\ub97c \ub118\uc73c\uba74 \uc790\ub8cc \uc694\uccad\uc744 \ucde8\uc18c\ud558\ub294 \uba85\ub839\uc744 \ub0b4\ub9bc\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\ncode_count_query_job = client.query(code_count_query, job_config=safe_config)\n\n# \uc694\uccad\ud574 \ubd88\ub7ec\uc628 \uc790\ub8cc\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ubc14\uafc8\ncode_count_results = code_count_query_job.to_dataframe()\n\nprint(code_count_results.head())","53ea5fbf":"### 1.2 accident_2015 \ud45c\uc5d0\uc11c \uc77c\ubd80 \ud589\uacfc \uc5f4 \ubd88\ub7ec\uc624\uae30 : \n\n#### 1) \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b4\ub294 timestamp_of_crash \uc5f4\uc744 \ud55c \uc8fc\uc5d0\uc11c \uba87 \ubc88\uc9f8 \ub0a0\uc778\uc9c0 \uc8fc \ub2e8\uc704\ub85c \ud45c\uc2dc\ud558\uace0, \uc5f4 \uc774\ub984\uc744 day_of_week\ub85c \ubc14\uafc8\n#### 2) day_of_week \uae30\uc900\uc73c\ub85c \uc790\ub8cc\ub97c \ubb36\uace0 : GROUP BY day_of_week\n#### 3) \uc0ac\uac74 \uace0\uc720 \ubc88\ud638\ub97c \ub098\ud0c0\ub0b4\ub294 consecutive_number \uc5f4 \uac1c\uc218\ub97c \uc138\uc5b4 \uc8fc \ub2e8\uc704 \uba87 \uac1c\uc758 \uc0ac\uac74\uc774 \ubc1c\uc0dd\ud558\ub294\uc9c0 \ub098\ud0c0\ub0b4\uace0, \uc5f4 \uc774\ub984\uc744 num_accidents\ub85c \ubc14\uafc8 : COUNT(consecutive_number) AS num_accidents\n#### 4) num_accidents \uc5f4 \uac12 \uc624\ub984\ucc28\uc21c \uae30\uc900\uc73c\ub85c \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc90c(\uc624\ub984\ucc28\uc21c ASC, \ub0b4\ub9bc\ucc28\uc21c DESC) : ORDER BY num_accidents DESC","a5465437":"### 2.1 \uc790\ub8cc \ubd88\ub7ec\uc624\uae30(\uc138\uacc4\uc740\ud589 \uad6d\uac00\ubcc4 \uad50\uc721 \uc790\ub8cc : World Bank International Education)\n\n    - \ube45\ucffc\ub9ac \uacf5\uacf5 \uc790\ub8cc\uc9d1(bigquery-public-data)\uc5d0\uc11c \uc138\uacc4 \uc740\ud589 \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828 \uc790\ub8cc(world_bank_intl_education)\ub97c \ubd88\ub7ec\uc628 \ud6c4,\n    - \uc138\uacc4 \uc740\ud589 \uad6d\uac00\ubcc4 \uad00\ub828 \uc790\ub8cc\uc5d0\uc11c \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828\ud45c(international_education)\ub97c \ubd88\ub7ec\uc634.\n    \n    - \uc790\ub8cc\uc758 \uad6c\uc870 : \ud45c(table) \u2282 \uc790\ub8cc(dataset) \u2282 \uc790\ub8cc\uc9d1(project)\n    - \uc790\ub8cc\uc9d1(project) : \ube45\ucffc\ub9ac \uacf5\uacf5 \uc790\ub8cc\uc9d1(bigquery-public-data)\n    - \uc790\ub8cc(dataset) : \uc138\uacc4 \uc740\ud589 \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828 \uc790\ub8cc(world_bank_intl_education)\n    - \ud45c(table) : \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828\ud45c(international_education)","e073b1ea":"### 1.1 \uc790\ub8cc \ubd88\ub7ec\uc624\uae30(\ubbf8\uad6d \uad50\ud1b5 \uc0ac\ub9dd\uc790 \uae30\ub85d : US Traffic Fatality Records database)\n    - \ube45\ucffc\ub9ac \uacf5\uacf5 \uc790\ub8cc\uc9d1(bigquery-public-data)\uc5d0\uc11c \ubbf8\uad6d \uad50\ud1b5 \uc0ac\ub9dd\uc790 \uc790\ub8cc(nhtsa_traffic_fatalities)\ub97c \ubd88\ub7ec\uc628 \ud6c4,\n    - \ubbf8\uad6d \uad50\ud1b5 \uc0ac\ub9dd\uc790 \uc790\ub8cc\uc5d0\uc11c 2015\ub144 \uc0ac\uace0(accident_2015)\ud45c\ub97c \ubd88\ub7ec\uc634.\n    - \uc790\ub8cc\uc758 \uad6c\uc870 : \ud45c(table) \u2282 \uc790\ub8cc(dataset) \u2282 \uc790\ub8cc\uc9d1(project)\n        - \uc790\ub8cc\uc9d1(project) : \ube45\ucffc\ub9ac \uacf5\uacf5 \uc790\ub8cc\uc9d1(bigquery-public-data)\n        - \uc790\ub8cc(dataset) : \ubbf8\uad6d \uad50\ud1b5 \uc0ac\ub9dd\uc790 \uc790\ub8cc(nhtsa_traffic_fatalities)\n        - \ud45c(table) : 2015\ub144 \uc0ac\uace0\ud45c(accident_2015)","4338761c":"### 2.2.2 \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828\ud45c(international_education)\uc5d0\uc11c \uc77c\ubd80 \uc790\ub8cc \ubd88\ub7ec\uc624\uae30\n#### 1) \uad50\uc721\uc9c0\ud45c, \uad50\uc721\uc9c0\ud45c\uba85, \uad50\uc721\uc9c0\ud45c\uac00 \uc804\uccb4 \ud45c\uc5d0\uc11c \uba87 \uac1c\ub098 \uc788\ub294\uc9c0 \uadf8 \uac1c\uc218\ub97c \ubd88\ub7ec\uc62c \uc5f4\uc744 \ub9cc\ub4e4\uace0 \uc774 \uc5f4 \uc774\ub984\uc744 num_rows\ub77c \ud568 : select indicator_code, indicator_name, count(1) as num_rows\n#### 2) \uae30\uac04\uc744 2016\ub144\uc73c\ub85c \ud55c\uc815\ud558\uace0 : where year = 2016\n#### 3) \uad50\uc721\uc9c0\ud45c, \uad50\uc721\uc9c0\ud45c\uba85 \uae30\uc900\uc73c\ub85c \ud45c\ub97c \ub9cc\ub4e4\uace0 : group by indicator_code, indicator_name\n#### 4) \uc9c0\ud45c\uc758 \uac1c\uc218\ub294 175\uac1c \uc774\uc0c1\ub9cc \ub098\ud0c0\ub0b4\uace0 : having count(1) >= 175\n#### 5) \uc9c0\ud45c \uac1c\uc218\ub294 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c : order by count(1) desc ","613fc557":"## Intro to SQL Lesson 4 Order By\n- \ucd9c\ucc98(source) : https:\/\/www.kaggle.com\/learn\/intro-to-sql","b024b140":"### 2.2.1 \uad6d\uac00\ubcc4 \uad50\uc721 \uad00\ub828\ud45c(international_education)\uc5d0\uc11c \uc77c\ubd80 \uc790\ub8cc \ubd88\ub7ec\uc624\uae30\n#### 1) \uad50\uc721\uc9c0\ud45c(indicator_code)\uc911 \uad6d\ub0b4\ucd1d\uc0dd\uc0b0 \ub300\ube44 \uad50\uc721 \ubd84\uc57c \uc815\ubd80 \uc9c0\ucd9c \ube44\uc911(%)(SE.XPD.TOTL.GD.ZS)\uc744 \ubf51\uace0 : WHERE indicator_code='SE.XPD.TOTL.GD.ZS'\n#### 2) \uae30\uac04\uc740 2010\ub144\uc5d0\uc11c 2017\ub144\uae4c\uc9c0\ub9cc : WHERE 2010 <= year and year <= 2017\n#### 3) \ubf51\uc740 \uc9c0\ud45c\uc758 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uc218\uce58\ub97c \ub098\ud0c0\ub0b4\uace0 \uc5f4 \uc774\ub984\uc744 avg_ed_spending_pct\ub85c \ubcc0\uacbd : SELECT avg(value) as avg_ed_spending_pct\n#### 4) \uad6d\uac00\uba85(country_name)\uacfc \uad50\uc721\uc9c0\ud45c(indicator_code) \uae30\uc900\uc73c\ub85c \ud45c\ub97c \ub2e4\uc2dc \ub9cc\ub4e4\uace0 : GROUP BY country_name, indicator_code\n#### 5) \ud3c9\uade0 \uc218\uce58\ub294 \ud070 \uc218\uce58\ubd80\ud130 : ORDER BY avg_ed_spending_pct DESC","241705e2":"#### SELECT\ub294 \ubd80\ub97c \uc5f4(column)\uc744 \uc9c0\uc815\n#### WHERE\ub294 \ubd80\ub97c \ud589(row)\uc744 \uc9c0\uc815\n#### COUNT\ub294 \ud589\uc758 \uac1c\uc218\n#### GROUP BY\ub294 \uc5f4\uc5d0 \uc788\ub294 \uac19\uc740 \uac12\ub07c\ub9ac \ubb36\uc74c\n#### ORDER BY\ub294 \ubd88\ub7ec\uc628 \uac12\uc758 \uc21c\uc11c\ub97c \uc815\ub82c(\uc624\ub984\ucc28\uc21c(ASC)\/\ub0b4\ub9bc\ucc28\uc21c(DESC)\n#### DATE\ub294 \uc5f0\uc6d4\uc77c \ud45c\uc2dc, \uc5f0\ub3c4(4\uc790\ub9ac)-\uc6d4(1 \ub610\ub294 2\uc790\ub9ac)-\uc77c(1 \ub610\ub294 2\uc790\ub9ac)\ub85c \uad6c\uc131(YYYY-MM-DD)\n#### DATETIME\uc740 \uc5f0\uc6d4\uc77c\uc2dc\ubd84\ucd08"}}