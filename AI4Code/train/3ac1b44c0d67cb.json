{"cell_type":{"95d19c26":"code","6dbe236f":"code","4e3b8d42":"code","74b5faec":"code","c1f9b92b":"code","517b77fc":"code","90a70838":"code","54392c19":"markdown","b47e7bc9":"markdown","08943937":"markdown","5a3bf6cf":"markdown","ba2454bb":"markdown","6a80acdc":"markdown"},"source":{"95d19c26":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()","6dbe236f":"df = pd.read_csv('..\/input\/nba-playtype-stats\/playtype2019-2020.csv')\ndf_color = pd.read_csv('..\/input\/nba-playtype-stats\/team_color_list.csv')\ndf_post = df[['Name','Team','postup-freq','postup-pts']]\ndf_post = pd.merge(df_post, df_color, how='inner', on='Team')\ndf_post_ave = df_post[df_post['postup-freq'] != 0]\nfreq_ave = df_post['postup-freq'].mean()\npts_ave = df_post_ave['postup-pts'].mean()","4e3b8d42":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df_post['postup-freq'],\n                         y = df_post['postup-pts'],\n                         mode = 'markers+text',\n                         text = df_post['Name'],\n                         marker = dict(color = df_post['Color'],\n                                       symbol = df_post['Symbol'],\n                                       size = 10\n                                      ),\n                         name = 'plot'\n                        )\n             )\nfig.add_trace(go.Scatter(x = [0,0.4],\n                         y = [pts_ave, pts_ave],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.add_trace(go.Scatter(x = [freq_ave, freq_ave],\n                         y = [0.5, 1.2],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.update_layout(xaxis=dict(title='Post Frequency',\n                             range=[0.02,0.4],\n                             tickangle=90,\n                             ticks=\"inside\",\n                            ),\n                  yaxis=dict(title='Post Points per Possession',\n                             range=[0.5, 1.2],\n                             ticks=\"inside\",\n                            ),\n                 )\noffline.iplot(fig)","74b5faec":"df_iso = df[['Name','Team','Iso-freq','iso-pts']]\ndf_iso = pd.merge(df_iso, df_color, how='inner', on='Team')\ndf_iso_ave = df_iso[df_iso['Iso-freq'] != 0]\nfreq_ave_iso = df_iso['Iso-freq'].mean()\npts_ave_iso = df_iso_ave['iso-pts'].mean()","c1f9b92b":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df_iso['Iso-freq'],\n                         y = df_iso['iso-pts'],\n                         mode = 'markers+text',\n                         text = df_iso['Name'],\n                         marker = dict(color = df_iso['Color'],\n                                       symbol = df_iso['Symbol'],\n                                       size = 10\n                                      ),\n                         name = 'plot'\n                        )\n             )\nfig.add_trace(go.Scatter(x = [0.03,0.47],\n                         y = [pts_ave_iso, pts_ave_iso],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.add_trace(go.Scatter(x = [freq_ave_iso, freq_ave_iso],\n                         y = [0.4, 1.6],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.update_layout(xaxis=dict(title='Isolation Frequency',\n                             range=[0.03,0.47],\n                             tickangle=90,\n                             ticks=\"inside\",\n                            ),\n                  yaxis=dict(title='Isolation Points per Possession',\n                             range=[0.4, 1.6],\n                             ticks=\"inside\",\n                            ),\n                 )\noffline.iplot(fig)","517b77fc":"df_cut = df[['Name','Team','cut-freq','cut-pts']]\ndf_cut = pd.merge(df_cut, df_color, how='inner', on='Team')\ndf_cut_ave = df_cut[df_cut['cut-freq'] != 0]\nfreq_ave_cut = df_cut['cut-freq'].mean()\npts_ave_cut = df_cut_ave['cut-pts'].mean()","90a70838":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = df_cut['cut-freq'],\n                         y = df_cut['cut-pts'],\n                         mode = 'markers+text',\n                         text = df_cut['Name'],\n                         marker = dict(color = df_cut['Color'],\n                                       symbol = df_cut['Symbol'],\n                                       size = 10\n                                      ),\n                         name = 'plot'\n                        )\n             )\nfig.add_trace(go.Scatter(x = [0,0.4],\n                         y = [pts_ave_cut, pts_ave_cut],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.add_trace(go.Scatter(x = [freq_ave_cut, freq_ave_cut],\n                         y = [0.7, 1.9],\n                         mode = 'lines',\n                         line = dict(color='red',\n                                     width=1),\n                         name = 'average of pts'\n                        ))\nfig.update_layout(xaxis=dict(title='Cut Frequency',\n                             range=[0,0.4],\n                             tickangle=90,\n                             ticks=\"inside\",\n                            ),\n                  yaxis=dict(title='Cut Points per Possession',\n                             range=[0.7, 1.9],\n                             ticks=\"inside\",\n                            ),\n                 )\noffline.iplot(fig)","54392c19":"Import some libraries","b47e7bc9":"## Post Up in 2019-20 Season\nThis scatter plot is post up frequency vs post up points per possession. This figure shows that<br>\n* **Joel Embiid** is prominent post player.\n* Average efficincy of post up is about 0.9 pts per possession and frequency is 5% of 200 players.\n\nBest efficient plays of NBA can score about 1.2-1.4 pts per possession. So I cannot say that post up is efficeint play. But post up & isolation are **necessary plays**. Because huge efficient strategy ( cutting & spot up shooting) isn't always able to select because of opponent's defence. On the contrary, players always can choose these two plays aginst tough defence. So they are necessary strategies although they are not efficient.   \n<br>\nHow about perimeter isolation? Let's check isolation, too!","08943937":"## Conclusion\n* Post up isn't efficient strategy, but **necessary play** as well isolation. And these efficiency is about 0.85-0.9 pts on average.\n* Post up needs **high skill and strong physical**.\n* Post up has **great potentia**l because this play can become a start point of spot up & cutting play ( high efficient plays ).","5a3bf6cf":"## Efficiency of cutting play ( efficient plays )","ba2454bb":"## Introduction\n[https:\/\/www.youtube.com\/watch?v=mcULJMJFuNs](https:\/\/www.youtube.com\/watch?v=mcULJMJFuNs) \n<br>Post up is one of the most popular strategies in NBA game. This video is typical post move highlight video. When it comes to old players, **Tim Duncan** and **Hakeem Olajuwo**n often selected this play for easy basket. For active players, **Carmelo Anthony** and **Nikola Jokic** are the most famous players who has good post up skill.\n<br>Post up play needs strong physical contact and high offensive skill. So this play fascinates nba supporters. But these days, players don't choose post up actively cause this play is said that post up is not efficient play comaperd to three points shot. However of cource, this strategy is still alive. Post up has strong points against negative points. \n<br><br>\nThey are as follow.\n* Opponents can't stop post up isolation perfectly.\n> Great-skilled players' post move can get a start on deffense and score.\n* Kick out pass and inside pass to cutting play is really powerful option.\n> Nikola Jokic ([https:\/\/www.youtube.com\/watch?v=JWjV4dt9aw0](https:\/\/www.youtube.com\/watch?v=JWjV4dt9aw0))\n* Post isolation has great efficiency in mismatch situations.\n> Big man can score easily against small players\n\n<br>\nLet's check efficiency of post up isolation in this article.","6a80acdc":"## Isolation in 2019-20 Season\nThere are differences and similarities between isolation and post up.\n\n1. **Similarities**\n> * These plays' efficiency are about 0.85 - 0.9 pts per possession.\n> * Players choosed post and isolation at 5-6% on average. \n2. **Differences**\n> * Isolation is selected by more various players than Post up.\n> * Efficiency of isolation is different among players. (Some scored over 1.2 pts and others scored under 0.6 pts)\n\nThese similarities means that isolation & post up can score about 0.85 pts on average at anytime.\n<br>\nDifferences shows that post up needs higher skill and physical ( including size ). Though post up dosen't have explosive power without kick out pass because players cannot shoot from deep area ( three pointers ), more stable play with high skill thanks to closer to rim. And when it comes to including kick out pass and start point of cutting play, post up has great potential. "}}