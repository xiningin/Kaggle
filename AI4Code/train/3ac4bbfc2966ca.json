{"cell_type":{"d68043cf":"code","8fdcc282":"code","9ea95c01":"code","6920da81":"code","63dbf759":"code","e18d13e3":"code","d38bbd69":"code","d8e7a535":"code","aef08d41":"code","e39a7012":"code","ebbaf52a":"code","189dad19":"code","620a29c8":"code","7e70e4db":"code","fcb3a455":"code","27ee4da4":"code","8ef17317":"code","30352266":"code","aa71b1b1":"code","6bdea116":"code","7f33bc7f":"code","3f027730":"code","9a00dc79":"code","ff4a0472":"code","4613670f":"code","64b7e6b9":"code","14d21783":"code","7aad5645":"code","3db36d4d":"markdown","3f9707f7":"markdown","cd4015a9":"markdown","9ffe10d0":"markdown","277b2ea2":"markdown","02f7787d":"markdown","818848a2":"markdown","77d34340":"markdown","7535c8c8":"markdown","ae3743f7":"markdown","3b605d95":"markdown","0a312c90":"markdown","14fe3790":"markdown","ca99858a":"markdown","7bfa6b88":"markdown","8c05fa7c":"markdown","ef37674f":"markdown","6dc1a9d8":"markdown","33202f55":"markdown","81625405":"markdown","43b9c598":"markdown"},"source":{"d68043cf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport plotly.express as px\nimport plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\n\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.graphics.tsaplots import plot_acf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom progressbar import *\n\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom math import sqrt\n\n# Function for splitting training and test set\nfrom sklearn.model_selection import train_test_split\n\n# Function to perform data standardization \nfrom sklearn.preprocessing import StandardScaler\n\n# Import classes for ML Models\nfrom sklearn.linear_model import Ridge  ## Linear Regression + L2 regularization\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\n\n# Evaluation Metrics\nfrom sklearn.metrics import mean_squared_error as mse\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_absolute_error as mae\n\n\nfrom keras.models import Sequential, Model\nfrom keras import optimizers\nfrom keras.layers import Dense\nimport tensorflow as tf\n\nfrom tensorflow.keras import backend as K\nfrom tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.layers import LSTM, Dense, RepeatVector, Masking, TimeDistributed\nfrom tensorflow. keras.utils import plot_model\n\nfrom tensorflow.keras.optimizers import Adam\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","8fdcc282":"df = pd.read_csv(\"..\/input\/iowa-liquor-sales\/Iowa_Liquor_Sales.csv\")","9ea95c01":"df.head()","6920da81":"# Last 5 rows\ndf.tail()","63dbf759":"df.shape","e18d13e3":"df.columns","d38bbd69":"# Checknig the types of columns\ndf.dtypes","d8e7a535":"df.info()","aef08d41":"# Displaying unique names of country\nprint(df['City'].nunique())\ndf['City'].unique()","e39a7012":"df['City'].value_counts()","ebbaf52a":"# Checking for the Null values\ndf.isnull().sum()","189dad19":"# Dropping null values rows and again checking shape of dataframe.\ndf.dropna(inplace = True)\nprint(df.shape)","620a29c8":"# Check for the duplicates values.\ndf.drop_duplicates()\ndf.shape","7e70e4db":"df['Date'] = pd.to_datetime(df['Date'])\ndf['Year'] = df['Date'].dt.year\ndf['Month'] = df['Date'].dt.month\ndf['Day'] = df['Date'].dt.day","fcb3a455":"df.head()","27ee4da4":"# Printing minimum and the maximum date from dataset.\nprint(df['Date'].min())\nprint(df['Date'].max())","8ef17317":"print(df['Category Name'].nunique())\ndf['Category Name'].unique()","30352266":"# Replacing the dollar symbol in the sales column by None\n\ndf['Sale (Dollars)'] = df['Sale (Dollars)'].str.replace('$', '')\ndf['Sale (Dollars)'] = df['Sale (Dollars)'].astype('float')","aa71b1b1":"df_plot = df.fillna('NA').groupby(['Category Name','Pack','Date'])['Sale (Dollars)'].sum().groupby(\n            ['Category Name','Pack']).max().sort_values().groupby(\n            ['Category Name']).sum().sort_values(ascending=False)\ntop_count = pd.DataFrame(df_plot)\ntop_count1 = pd.DataFrame(df_plot.head(10))","6bdea116":"import plotly.graph_objects as go\n\nfig_reg = px.bar(top_count1,x=top_count1.index, y='Sale (Dollars)',color='Sale (Dollars)')\nfig_reg.update_layout(\n    title=\"Sales of liquor per category\",\n    xaxis_title=\" Category Name\",\n    yaxis_title=\"Sales in dollars\",\n    )\nfig_reg.show()","7f33bc7f":"df_plot = df.fillna('NA').groupby(['City','Pack','Date'])['Sale (Dollars)'].sum().groupby(\n            ['City','Pack']).max().sort_values().groupby(\n            ['City']).sum().sort_values(ascending=False)\ntop_count1 = pd.DataFrame(df_plot)\ntop_count1 = pd.DataFrame(df_plot.head(20))\n\nfig_reg = px.bar(top_count1,x=top_count1.index, y='Sale (Dollars)',color='Sale (Dollars)')\nfig_reg.update_layout(\n    title=\"Sales of liquor per city\",\n    xaxis_title=\" City Name\",\n    yaxis_title=\"Sales in dollars\",\n    )\nfig_reg.show()","3f027730":"df_plot = df.fillna('NA').groupby(['Month','Pack','Date'])['Sale (Dollars)'].sum().groupby(\n            ['Month','Pack']).max().sort_values().groupby(\n            ['Month']).sum().sort_values(ascending=False)\ntop_count1 = pd.DataFrame(df_plot)\ntop_count1 = pd.DataFrame(df_plot.head(50))\n\nfig_reg = px.bar(top_count1,x=top_count1.index, y='Sale (Dollars)',color='Sale (Dollars)')\nfig_reg.update_layout(\n    title=\"Sales of liquor per Month\",\n    xaxis_title=\" Month Number\",\n    yaxis_title=\"Sales in dollars\",\n    )\nfig_reg.show()","9a00dc79":"daily_sales = df.groupby('Date', as_index=False)['Sale (Dollars)'].sum()","ff4a0472":"daily_sales_sc = go.Scatter(x=daily_sales['Date'], y=daily_sales['Sale (Dollars)'])\nlayout = go.Layout(title='Daily sales', xaxis=dict(title='Date'), yaxis=dict(title='Sales'))\nfig = go.Figure(data=[daily_sales_sc], layout=layout)\niplot(fig)","4613670f":"df_plot = df.fillna('NA').groupby(['Category Name','Pack','Date'])['Sale (Dollars)'].sum().groupby(\n            ['Category Name','Pack']).max().sort_values().groupby(\n            ['Category Name']).sum().sort_values(ascending=False)\ntop_count1 = pd.DataFrame(df_plot)\n#top_count1 = pd.DataFrame(df_plot.head(10))\n\ndf_plot = df.fillna('NA').groupby(['Category Name','Pack','Date'])['Volume Sold (Liters)'].sum().groupby(\n            ['Category Name','Pack']).max().sort_values().groupby(\n            ['Category Name']).sum().sort_values(ascending=False)\ntop_count2 = pd.DataFrame(df_plot)\n#top_count2 = pd.DataFrame(df_plot.head(10))","64b7e6b9":"# Ordrening the countries by number of fatalities\ntop_count = pd.concat([top_count1 , top_count2],axis=1)\ntop_count = top_count.sort_values(['Sale (Dollars)'],ascending=False)[:10]\ntop_count","14d21783":"fig = go.Figure(data=[\n    go.Bar(name='sale in dollars',x=top_count.index, y=top_count['Sale (Dollars)']),\n    go.Bar(name='Volume in litres',x=top_count.index, y=top_count['Volume Sold (Liters)'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group',title=\"Sales of liquors with category and the volume of liquor sold.\",\n    xaxis_title=\" category\",\n    yaxis_title=\"Sale and the amount of liquor sold in litre.\",)\nfig.show()\n","7aad5645":"df_plot = df.fillna('NA').groupby(['Vendor Name','Pack','Date'])['Volume Sold (Liters)'].sum().groupby(\n            ['Vendor Name','Pack']).max().sort_values().groupby(\n            ['Vendor Name']).sum().sort_values(ascending=False)\ntop_count1 = pd.DataFrame(df_plot)\n#top_count1 = pd.DataFrame(df_plot.head(50))\n\nfig_reg = px.bar(top_count1,x=top_count1.index, y='Volume Sold (Liters)',color='Volume Sold (Liters)')\nfig_reg.update_layout(\n    title=\"Volume sold by vendor name\",\n    xaxis_title=\" Vendor Name\",\n    yaxis_title=\"Liquor sold in Litres\",\n    )\nfig_reg.show()","3db36d4d":"There are highest number of shops in the Des Moines city.","3f9707f7":"> In Sep 2013 there is large sales of the liquors.","cd4015a9":"We have around 12 millions rows and 24 columns in the dataset.","9ffe10d0":"The CEDAR RAPIDS city has highest sales of liquors.","277b2ea2":"There are null values. So we will simply drop all such rows that also will reduce the size of dataset.","02f7787d":"Canadian Whiskies has highest sale with the 72K litre.","818848a2":"## Exploratory Data Analysis\n#### Reading CSV file data.\n","77d34340":"> So there are 793 unique cities in our data.","7535c8c8":"Printing the shape of the data.","ae3743f7":"#### Sales of liquors with category and the volume of liquor sold.","3b605d95":"From the above plot it is cleared that the October month has highest number of sales of liquors.","0a312c90":"#### Columns of the dataset","14fe3790":"#### Converting the date into month, day, year as separate column.\u00b6","ca99858a":"#### Sales of liquor by city name (top 20).","7bfa6b88":"#### Volume sold in litres by vendor name.","8c05fa7c":"As we can see that the canadian whiskies has high number of sales may be becuase peoples like to drink it more or it can be very famous liquor brand as well.","ef37674f":"#### Importing the necessary libraries. ","6dc1a9d8":"* So we have dataset from the 3rd january 2012 to 31st october 2017.","33202f55":"Displaying first 5 rows.","81625405":"#### Top 10 categories of liquors that has highest sale.","43b9c598":"![](http:\/\/)As we can see there are 130 unique different categories of liquors."}}