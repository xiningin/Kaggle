{"cell_type":{"e0216c7b":"code","bc8a5c80":"code","626fc75c":"code","50a8d5d1":"code","d721d676":"code","b1e164f4":"code","1435e7e0":"code","1f197c56":"code","8b803853":"code","046ee150":"code","e9f108c4":"code","27d6843e":"markdown","3995115b":"markdown","a415075e":"markdown","ee9a54c5":"markdown","5dcc7249":"markdown","28b6903d":"markdown","7c660c88":"markdown","f9410a72":"markdown"},"source":{"e0216c7b":"!pip install -U beir\n!pip install nltk\n!pip install pandas","bc8a5c80":"import os\nimport pandas as pd\nimport nltk\nfrom nltk.tokenize import word_tokenize, sent_tokenize\nfrom nltk.probability import FreqDist\nfrom nltk.corpus import stopwords\nfrom beir import util","626fc75c":"nltk.download('punkt')\nnltk.download('stopwords')\nstop_words = set(stopwords.words('english'))\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\ndataset_url = 'https:\/\/public.ukp.informatik.tu-darmstadt.de\/thakur\/BEIR\/datasets\/{}.zip'","50a8d5d1":"def load_dataset(dataset_name):\n    out_dir = os.path.join(os.getcwd(), 'datasets')\n    util.download_and_unzip(dataset_url.format(dataset_name), out_dir)","d721d676":"def filter_words(w, filter_stopwords):\n    if filter_stopwords:\n        return w.isalnum() and w not in stop_words\n    else:\n        return w","b1e164f4":"def build_doc_stats(dataset_name, fdist, doc_count, sentence_count, query_count):\n    term_count = fdist.N()\n    bin_count = fdist.B()\n    word_per_doc = term_count \/ doc_count\n    valid_sentence_count = sentence_count\n    if valid_sentence_count == 0:\n        print('WARNING! \"{}\" corpus does not have title values.'.format(dataset_name))\n        valid_sentence_count = 1\n    word_per_sent = term_count \/ valid_sentence_count\n    # print(fdist.most_common(10))\n    stats_dict = {\n        '# of docs': [doc_count],\n        '# of terms': [term_count],\n        '# of unique terms': [bin_count],\n        '# of sentences': [sentence_count],\n        '# of terms per sentences': [word_per_sent],\n        '# of terms per docs': [word_per_doc]}\n    if query_count != 0:\n        stats_dict['# of queries'] = query_count\n    stats_df = pd.DataFrame(data=stats_dict)\n    stats_df.index = [dataset_name]\n    return stats_df","1435e7e0":"def get_corpus_df(dataset_name, file_name):\n    corpus_path = os.path.join(os.getcwd(), 'datasets', dataset_name, file_name)\n    return pd.read_json(path_or_buf=corpus_path, lines=True)","1f197c56":"def stats_corpus(dataset_name, column_name, add_queries):\n    load_dataset(dataset_name)\n    query_count = 0\n    if add_queries:\n        queries_df = get_corpus_df(dataset_name, 'queries.jsonl')\n        query_count = len(queries_df.index)\n    corpus_df = get_corpus_df(dataset_name, 'corpus.jsonl')\n    doc_count = len(corpus_df.index)\n    sentence_count = 0\n    fdist = FreqDist()\n    for line in corpus_df.get(column_name):\n        sentence_count += len(sent_tokenize(line))\n        tokens = [w.lower() for w in word_tokenize(line) if filter_words(w, True)]\n        for word in tokens:\n            fdist[word] += 1\n    return build_doc_stats(dataset_name, fdist, doc_count, sentence_count, query_count)","8b803853":"datasets = ['trec-covid', 'scifact', 'scidocs', 'nfcorpus']\ntitle_stats = []\ntext_stats = []\nfor dataset in datasets:\n    title_stats.append(stats_corpus(dataset, 'title', False))\nfor dataset in datasets:\n    text_stats.append(stats_corpus(dataset, 'text', True))","046ee150":"pd.concat(title_stats)","e9f108c4":"pd.concat(text_stats)","27d6843e":"**NFCORPUS** - [Homepage](https:\/\/www.cl.uni-heidelberg.de\/statnlpgroup\/nfcorpus\/) - [Paper](https:\/\/www.cl.uni-heidelberg.de\/~riezler\/publications\/papers\/ECIR2016.pdf)","3995115b":"**STATISTICS FOR DOCUMENTS**","a415075e":"---","ee9a54c5":"---","5dcc7249":"**STATISTICS FOR TITLES**","28b6903d":"**SCIFACT** - [Homepage](https:\/\/allenai.org\/data\/scifact) - [Paper](https:\/\/arxiv.org\/abs\/2004.14974)","7c660c88":"**SCIDOCS** - [Homepage](https:\/\/allenai.org\/data\/scidocs) - [Paper](https:\/\/arxiv.org\/abs\/2004.07180)","f9410a72":"**TREC-COVID** - [Homepage](https:\/\/ir.nist.gov\/covidSubmit\/index.html) - [Paper](https:\/\/arxiv.org\/abs\/2005.04474)"}}