{"cell_type":{"9d23618f":"code","0fc2308b":"code","3ff8bc46":"code","2ae6e78c":"code","fb5f5ffc":"code","013133a7":"code","f6514772":"code","bd4d5fd2":"code","973d9856":"code","e5228a16":"code","5b09536a":"code","f27641ad":"code","e5ba0c64":"code","274db6a5":"code","f2fbd35b":"code","0d0a7dfd":"code","09ceb795":"code","2fa4edb6":"code","50d2b1e7":"code","380727c3":"markdown","ff850e2c":"markdown"},"source":{"9d23618f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fc2308b":"# Solving this problem as my first practice problem \n#Steps to solve any machine learning problem \n# 1: Load dataset\n# 2: EDA \n# 3: Build linear model \n# 4: Evaluate the model \n# 5: Predict with some data ","3ff8bc46":"import numpy as np\nimport pandas as pd \nimport matplotlib as mt \nimport seaborn as sns \n","2ae6e78c":"%matplotlib inline ","fb5f5ffc":"train_data = pd.read_csv(\"\/kaggle\/input\/random-linear-regression\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/random-linear-regression\/test.csv\")","013133a7":"# EDA \n# 1: check the data type of the data \n\ntrain_data.info()","f6514772":"train_data.head()","bd4d5fd2":"# check the relation ship among the data. If we can apply linear regression \nsns.pairplot(train_data)","973d9856":"train_data.corr()","e5228a16":"from sklearn.linear_model import  LinearRegression","5b09536a":"lg = LinearRegression()","f27641ad":"\n# while training model fit failed due to null value in the data. Check if there is any null\ntrain_data.isnull().values.any()","e5ba0c64":"train_data = train_data.dropna()","274db6a5":"lg.fit(train_data[['x']],train_data.y)","f2fbd35b":"# check the coeff and y intercept \nlg.intercept_","0d0a7dfd":"lg.coef_","09ceb795":"X_test = test_data[['x']]\nY_test = test_data.y","2fa4edb6":"Y_predict = lg.predict(X_test);","50d2b1e7":"# not lets check the r^2 value  \nfrom sklearn.metrics import r2_score\nr2_score(Y_test,Y_predict)","380727c3":"Best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of y, disregarding the input features, would get a  score of 0.0. :) ","ff850e2c":"We can see X and Y are positive co related. Lets check if what is the co relation among the two data point \n"}}