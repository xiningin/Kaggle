{"cell_type":{"ae5a9c45":"code","cd03dfee":"code","6840acb1":"code","a8efdd8e":"code","866583c7":"code","add1c2b0":"code","5b2bc59d":"code","4facc2e1":"code","0b00c2e1":"code","801279dc":"code","c2b49680":"code","2513651a":"code","8e6c8b80":"code","09f7c760":"markdown","55af316b":"markdown","5af3558c":"markdown","3523d832":"markdown","ddf7d43f":"markdown","92d26c77":"markdown","2efb72c5":"markdown","f2a08cd1":"markdown","66e2b682":"markdown","ad51c18b":"markdown","227057de":"markdown"},"source":{"ae5a9c45":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cd03dfee":"df=pd.read_csv(\"..\/input\/weather-prediction\/seattle-weather.csv\")","6840acb1":"df.shape","a8efdd8e":"df.head()","866583c7":"df.describe()","add1c2b0":"df.info()","5b2bc59d":"df.isnull().sum()","4facc2e1":"from sklearn.preprocessing import LabelEncoder\n\ndf['weather']=LabelEncoder().fit_transform(df['weather'])","0b00c2e1":"fig, axes=plt.subplots(figsize=(8, 6))\nsns.heatmap(df.corr(), ax=axes)","801279dc":"from sklearn.model_selection import train_test_split\nfeatures=[\"precipitation\", \"temp_max\", \"temp_min\", \"wind\"]\nX=df[features]\ny=df.weather\ntrain_X, test_X, train_y, test_y = train_test_split(X, y,random_state = 0)","c2b49680":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_absolute_error\n\nmodel1=DecisionTreeRegressor(random_state=1)\nmodel1.fit(train_X, train_y)\npred1=model1.predict(test_X)\nprint(\"Mean Absolute Error: %f\" %(mean_absolute_error(test_y, pred1)))","2513651a":"from sklearn.ensemble import RandomForestRegressor\n\nmodel2=RandomForestRegressor(random_state=1)\nmodel2.fit(train_X, train_y)\npred2=model2.predict(test_X)\nprint(\"Mean Absolute Error: %f\" %(mean_absolute_error(test_y, pred2)))\n    ","8e6c8b80":"from xgboost import XGBRegressor\n\nmodel3= XGBRegressor(n_estimators=100, learning_rate=0.04)\nmodel3.fit(train_X, train_y)\npred3=model3.predict(test_X)\nprint(\"Mean Absolute Error: %f\" %(mean_absolute_error(test_y, pred3)))","09f7c760":"# Machine Learning Model for Prediction of Weather...","55af316b":"# Data Visualization:","5af3558c":"# **Weather Forecasting**\n\nImporting some important utilities!","3523d832":"# Data Pre-Processing:\nThe column weather contains the data value in the string form and we need to predict the weather data so for that we need to process the data.","ddf7d43f":"# Extreme Gradient Regressor:","92d26c77":"# Decision Tree Regressor:","2efb72c5":"We can observe that wind and preception are weakly co-related.temp_max and wind are negatively correlated means they move in the opposite direction.","f2a08cd1":"Checking whether the dataset got imported to the notebook.","66e2b682":"The least mean absolute error we got is of the XGB Regressor Model. ","ad51c18b":"There are no null values in the data set.","227057de":"# Random Forest Regressor:"}}