{"cell_type":{"6dc0cc98":"code","c0d430db":"code","86625b65":"code","45824a92":"code","4fd49dd4":"code","77df1f74":"code","22d7880d":"code","703e45ec":"code","926f6062":"code","af9ebf59":"code","05ba8323":"code","de17a067":"code","387256a0":"code","336bb520":"code","58187720":"code","52246cea":"code","b9435dcf":"code","23b8cdca":"code","e8ca9cf4":"code","663bd006":"code","69624418":"code","c8b6a98d":"code","2dcfca76":"code","aa9f959f":"code","b36b9d15":"code","ae2e29eb":"code","81ed1c87":"code","4b24763d":"code","e1e82ddf":"code","dc66132d":"markdown","856b5cd8":"markdown","3371129a":"markdown","d969742c":"markdown","a6e0358a":"markdown","7d2bf0da":"markdown","e7bb0387":"markdown","6294179d":"markdown","871e317c":"markdown","bdfff8a0":"markdown"},"source":{"6dc0cc98":"import os, gc, pickle, copy, datetime, warnings\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nfrom sklearn import metrics\nfrom IPython.display import Image\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 999)\nwarnings.filterwarnings('ignore')","c0d430db":"df_test = pd.read_csv(\"..\/input\/my-covid-pred\/test_week2.csv\")\ndf_test.head()","86625b65":"df_week4 = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/train.csv\")\ndf_week4.head()","45824a92":"df_test = pd.merge(df_test, df_week4, on=['Province_State', 'Country_Region', 'Date'], how='left')\ndf_test.head()","4fd49dd4":"df_test['Date'] = pd.to_datetime(df_test['Date'])\ndf_test['day'] = df_test['Date'].apply(lambda x: x.dayofyear).astype(np.int16)\ndf_week4['Date'] = pd.to_datetime(df_week4['Date'])\ndf_week4['day'] = df_week4['Date'].apply(lambda x: x.dayofyear).astype(np.int16)\ndf_test.head()","77df1f74":"# concat Country\/Region and Province\/State\ndef func(x):\n    try:\n        x_new = x['Country_Region'] + \"\/\" + x['Province_State']\n    except:\n        x_new = x['Country_Region']\n    return x_new\n        \ndf_test['place_id'] = df_test.apply(lambda x: func(x), axis=1)\ndf_week4['place_id'] = df_week4.apply(lambda x: func(x), axis=1)\ndf_test.head()","22d7880d":"tmp = df_test[pd.isna(df_test['ConfirmedCases'])==False]['Date'].max()\nprint(\"last day of existing true data: {}\".format(tmp))","703e45ec":"df_oscii_fix = pd.read_csv(\"..\/input\/my-covid-pred\/submission_osciiart2_fixed.csv\") # my final submission with bug\ndf_beluga = pd.read_csv(\"..\/input\/my-covid-pred\/submission_beluga.csv\")\ndf_kaz = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Kaz.csv\")\ndf_vopani = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Vopani.csv\")\ndf_rapid = pd.read_csv(\"..\/input\/my-covid-pred\/submission_rapids.ai KGMON.csv\")\n\ndf_oscii_fix.head()","926f6062":"day_before_private = 92\n# list of places\nplaces_sort = df_test[['place_id', 'ConfirmedCases']][df_test['day']==day_before_private]\nplaces_sort = places_sort.sort_values('ConfirmedCases', ascending=False).reset_index(drop=True)['place_id'].values\nprint(len(places_sort))\nfor i, place in enumerate(places_sort):\n    print(i, place)","af9ebf59":"def show_graph(place):\n    sns.set()\n    sns.set_style('ticks')\n    fig, ax = plt.subplots(figsize = (15,6)) \n    plt.subplot(1,2,1)\n    x_pred = df_test[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Date'].values\n    y_oscii_fix = df_oscii_fix[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_beluga = df_beluga[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_kaz = df_kaz[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_vopani = df_vopani[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_rapid = df_rapid[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n\n    x_true= df_week4[(df_week4['place_id']==place)]['Date'].values\n    y_true = df_week4[(df_week4['place_id']==place)]['ConfirmedCases'].values\n\n    ax = sns.lineplot(x=x_pred, y=y_oscii_fix, label='Oscii fix')\n    #     ax.set(yscale=\"log\")\n    sns.lineplot(x=x_pred, y=y_beluga, label='Beluga')\n    sns.lineplot(x=x_pred, y=y_kaz, label='Kaz')\n    sns.lineplot(x=x_pred, y=y_vopani, label='Vopani')\n    sns.lineplot(x=x_pred, y=y_rapid, label='Rapid')\n    sns.lineplot(x=x_true, y=y_true, label='true')\n    plt.ylim(-1, y_true.max()*2)\n    plt.title(\"{}\/ConfirmedCases\".format(place))\n\n    fig.autofmt_xdate()\n    plt.subplot(1,2,2)\n    x_pred = df_test[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Date'].values\n\n    y_oscii_fix = df_oscii_fix[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_beluga = df_beluga[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_kaz = df_kaz[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_vopani = df_vopani[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_rapid = df_rapid[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    x_true= df_week4[(df_week4['place_id']==place)]['Date'].values\n    y_true = df_week4[(df_week4['place_id']==place)]['Fatalities'].values\n    ax = sns.lineplot(x=x_pred, y=y_oscii_fix, label='Oscii fix')\n    #     ax.set(yscale=\"log\")\n    sns.lineplot(x=x_pred, y=y_beluga, label='Beluga')\n    sns.lineplot(x=x_pred, y=y_kaz, label='Kaz')\n    sns.lineplot(x=x_pred, y=y_vopani, label='Vopani')\n    sns.lineplot(x=x_pred, y=y_rapid, label='Rapid')\n    sns.lineplot(x=x_true, y=y_true, label='true')\n    plt.ylim(-1, y_true.max()*2)\n    plt.title(\"{}\/Fatalities\".format(place))\n    fig.autofmt_xdate()\n    plt.show()","05ba8323":"show_graph(places_sort[0])\nshow_graph(places_sort[1])\nshow_graph(places_sort[2])\nshow_graph(places_sort[3])\nshow_graph(places_sort[4])\nshow_graph(places_sort[10])\nshow_graph(places_sort[20])\nshow_graph(places_sort[50])\nshow_graph(places_sort[100])\nshow_graph(places_sort[150])\nshow_graph(places_sort[200])\nshow_graph(\"Japan\")\nshow_graph(\"Korea, South\")","de17a067":"country_data = pd.read_csv('..\/input\/countryinfo\/covid19countryinfo.csv')","387256a0":"df_test.loc[df_test.ConfirmedCases < 0,'ConfirmedCases' ] = 0\ndf_test.loc[df_test.Fatalities < 0,'Fatalities' ] = 0","336bb520":"evaluate_period = (pd.isna(df_test['ConfirmedCases'])==False) & (df_test['day']>day_before_private)","58187720":"df_test2 = df_test[evaluate_period]","52246cea":"df_test2['predicted_cases'] = df_oscii_fix[evaluate_period]['ConfirmedCases'].values\ndf_test2['predicted_fatalities'] = df_oscii_fix[evaluate_period]['Fatalities'].values","b9435dcf":"country_data = country_data.rename(columns={\"region\": \"Province_State\", \"country\": \"Country_Region\"})\ndf_test2 = df_test2.merge(country_data)","23b8cdca":"df_test2['case_square_error'] = (np.log(df_test2['predicted_cases'].values[:]+1) - np.log(df_test2['ConfirmedCases'].values.clip(0, 1e10)+1))**2\ndf_test2['fatalities_square_error'] = (np.log(df_test2['predicted_fatalities'].values[:]+1) - np.log(df_test2['Fatalities'].values.clip(0, 1e10)+1))**2\ndf_test2['case_absolute_error'] = (np.log(df_test2['predicted_cases'].values[:]+1) - np.log(df_test2['ConfirmedCases'].values.clip(0, 1e10)+1))\ndf_test2['fatalities_absolute_error'] = (np.log(df_test2['predicted_fatalities'].values[:]+1) - np.log(df_test2['Fatalities'].values.clip(0, 1e10)+1))\n\ndf_test2['pop'] = df_test2['pop'].str.replace(',', '').astype(float)\ndf_test2['gdp2019'] = df_test2['gdp2019'].str.replace(',', '').astype(float)","e8ca9cf4":"df_test2.head()","663bd006":"out_df = df_test2[~pd.isna(df_test2['pop'])].groupby('Country_Region').mean()[['case_square_error','fatalities_square_error','pop','gdp2019']]","69624418":"sns.regplot(np.log(out_df['pop'].values),out_df['case_square_error'],robust=True)\nplt.xlabel('log(population)')\nplt.ylim([0,0.2])","c8b6a98d":"sns.regplot(np.log(out_df['pop'].values),out_df['fatalities_square_error'],robust=True)\nplt.xlabel('log(population)')\nplt.ylim([0,0.2])","2dcfca76":"sns.regplot(np.log(out_df['gdp2019'].values),out_df['case_square_error'],robust=True)\nplt.xlabel('log(GDP 2019)')\nplt.ylim([0,0.2])","aa9f959f":"sns.regplot(np.log(out_df['gdp2019'].values),out_df['fatalities_square_error'],robust=True)\nplt.xlabel('log(GDP 2019)')\nplt.ylim([0,0.2])","b36b9d15":"df_test2.groupby('Country_Region')['case_square_error'].mean().sort_values()","ae2e29eb":"df_test2.groupby('Country_Region')['case_absolute_error'].mean().sort_values()","81ed1c87":"df_test2.groupby('Country_Region')['fatalities_square_error'].mean().sort_values()","4b24763d":"df_test2.groupby('Country_Region')['fatalities_absolute_error'].mean().sort_values()","e1e82ddf":"Image('..\/input\/temp-image\/shap.png')","dc66132d":"# Preprocessing","856b5cd8":"Contrasely we can obsever the error significantly decrease when projecting more developed countries according to GDP in 2019, which shows that poor countries has a less accurate coronavirus data possibly due to lack of tools to accurate detect infected people, or developed countries has better resource to migrate the disease.","3371129a":"Compare to [week 1 entires](https:\/\/www.kaggle.com\/osciiart\/comparison-of-week-1-sumissions), there is a huge improvement of quality of prediction, could be due to more training data and time to improve the model. Since fixed version of OsciiArt model has the best [LB score](https:\/\/www.kaggle.com\/osciiart\/week-2-late-submission), here is some further study of his submission:","d969742c":"Comparison and analysis of [COVID-19 week 2 competition](https:\/\/www.kaggle.com\/c\/covid19-global-forecasting-week-2), data collection courtesy of https:\/\/www.kaggle.com\/osciiart","a6e0358a":"From the [model notebook](https:\/\/www.kaggle.com\/osciiart\/covid-19-lightgbm-no-leak\/output?scriptVersionId=31694015) we can get the feature importance of cases and fatalities prediction models.\n\n","7d2bf0da":"# Comparison","e7bb0387":"The log of population is uncorrelated to error in number of cases and fatalities, which shows a good calibration of the model with respect to size of countries","6294179d":"Square error and absolute error of difference region on the world:","871e317c":"Unsuprisingly if there are more cases in the past there would be more cases at future as well.","bdfff8a0":"Most important features are cases and fatalities of past week. Here is SHAP value of features"}}