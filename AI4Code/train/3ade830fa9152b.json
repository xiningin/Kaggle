{"cell_type":{"55351c4e":"code","653237e0":"code","fe1f6f09":"code","d4d64eb1":"code","2ab80a82":"code","e3dfb451":"code","380d3199":"code","e67c713e":"code","01dc5800":"code","1850ac11":"code","aca80f38":"code","fc2d5375":"code","7c3b4edc":"code","aced2484":"markdown","26bbb290":"markdown","efd4157e":"markdown","01e860d7":"markdown","3c695577":"markdown","60fb77fa":"markdown","a0428a41":"markdown","011d6cbf":"markdown","f42e06ec":"markdown","b7c6dc9e":"markdown","8bcb8791":"markdown","b194b84a":"markdown"},"source":{"55351c4e":"import numpy as np\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sea\n\nimport pandas as pd","653237e0":"data_set = pd.read_csv('..\/input\/simple-linear-reg-salary-data\/Salary_Data.csv')\ndata_set.head()","fe1f6f09":"X = data_set.iloc[: ,:-1].values\ny = data_set.iloc[: , -1].values","d4d64eb1":"from sklearn.model_selection import train_test_split\nX_train , X_test, y_train , y_test = train_test_split(X,y , test_size= 0.2 , random_state = 0)","2ab80a82":"print(X_train.shape)\nprint(X_test.shape)\n\nprint(y_train.shape)\nprint(y_test.shape)","e3dfb451":"from sklearn.linear_model import LinearRegression\n\nregressor = LinearRegression()\n\nregressor.fit(X_train , y_train)","380d3199":"y_pred = regressor.predict(X_test)\n\n# y_pred is predicted salary","e67c713e":"plt.scatter(X_train , y_train , color='red')\nplt.plot(X_train , regressor.predict(X_train), color= 'blue')\nplt.title(\"Salary vs Experience\", fontsize=20)\nplt.xlabel('Year of Experience ', fontsize=20)\nplt.ylabel('Salary', fontsize=20)\nplt.show","01dc5800":"plt.scatter(X_test , y_test , color='red')\nplt.plot(X_train , regressor.predict(X_train), color= 'blue')\nplt.title(\"Salary vs Experience\", fontsize=20)\nplt.xlabel('Year of Experience ', fontsize=20)\nplt.ylabel('Salary', fontsize=20)\nplt.show","1850ac11":"r2_score = regressor.score(X_test,y_test)\nprint(r2_score*100,\" %\")","aca80f38":"print(y_pred)\nprint(y_test)","fc2d5375":"from sklearn.metrics import mean_squared_error\n\nmse = mean_squared_error(y_test,y_pred)\n\nrmse = np.sqrt(mse)","7c3b4edc":"from sklearn.metrics import r2_score\n\nr2_score(y_test, y_pred)","aced2484":"# 5. predicting ","26bbb290":"# 9. R-Square\n\n     1 mean best score , good model\n     0 - mean worst model","efd4157e":"# 2. divide the dataset into dependent and Independent variable\n    \n    create feature ","01e860d7":"__________________________________________________________________________________\n    we can't create Confusion matrix for Simple linear regression bcz, it give continuous values , First thing, confusion matrix is not for continuous values. AND you can also use it by converting continuous values to classes.\n     \n     The confusion matrix is used to check discrete results, but Linear Regression model returns predicted result as a continuous values. That is why you get the error: your dv_test data likely is integer, but y_pred is float\n     \n     _____________________________________________________________________________________","3c695577":"# 8.Root Mean Square Error","60fb77fa":"# 1. import libraries and Data_set","a0428a41":"# 7. Check Accuracy of the Model","011d6cbf":"# 3.splitting the dataset into The training set and Test Set","f42e06ec":"# Visualising the Test Set result","b7c6dc9e":"# 6.Visualising the training set Result","8bcb8791":"# 4.Training the Simple Linear Regression model on the training set","b194b84a":"    #Note --------------->\n    \n    metrics.accuracy_score(test_y, linear_predicted_rating)\n    \n    metrics.accuracy_score is used to measure classification accuracy, it can't be used to measure accuracy of regression model because it doesn't make sense to see accuracy for regression - predictions rarely can equal the expected values. And if predictions differ from expected values by 1%, the accuracy will be zero, though these predictions are great\n    \n    NOTE: Accuracy (e.g. classification accuracy) is a measure for classification, not regression so we can't calculate accuracy for a regression model. For regression, one of the matrices we've to get the score (ambiguously termed as accuracy) is R-squared (R2).\n    "}}