{"cell_type":{"0ee3897e":"code","084273ba":"code","c12ca8f7":"code","8ab24dcb":"code","1c26a560":"code","9d621dca":"code","83cab9f1":"code","6aaa7e95":"code","57312c93":"code","445b6dcf":"code","c585347d":"code","1317d55a":"code","75c66a22":"code","13ea2c90":"code","1d28ff5e":"code","89f00996":"code","e6cddb32":"code","4f05ec3c":"markdown","a00ddbb6":"markdown","a599ca82":"markdown","d214744e":"markdown","e12a6232":"markdown","aaf3fbf3":"markdown","b2d4a52b":"markdown","d73838d4":"markdown","0e24ec78":"markdown","1337c903":"markdown"},"source":{"0ee3897e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","084273ba":"#We read data\ndata = pd.read_csv(\"..\/input\/column_2C_weka.csv\")","c12ca8f7":"#We ignore this\na = data.degree_spondylolisthesis.max()\ndata[data.degree_spondylolisthesis == a] = np.mean(data.degree_spondylolisthesis)","8ab24dcb":"#The feature of our data(if you dont know feature it is like header)\ndata.columns","1c26a560":"import matplotlib.pyplot as plt \n#We use sacral_radius and pelvic incidence for showing our cluster.\nplt.scatter(x = data[\"pelvic_radius\"],y = data[\"degree_spondylolisthesis\"],color = \"black\")\nx = data[\"pelvic_radius\"]\ny = data[\"degree_spondylolisthesis\"]\n#we use two columns for clustering our data.The computer see our data so ","9d621dca":"#we can draw with class.It is original class\nplt.scatter(x = data[data[\"class\"] == \"Normal\"].pelvic_radius , y = data[data[\"class\"] == \"Normal\"].degree_spondylolisthesis,color = \"red\")\nplt.scatter(x = data[data[\"class\"] == \"Abnormal\"].pelvic_radius , y = data[data[\"class\"] == \"Abnormal\"].degree_spondylolisthesis,color = \"yellow\")\n#probably we use two columns for clustering","83cab9f1":"#We implement our model so. We need just one data\ncluster_data_arg = {\"x\":x,\"y\":y}\ncluster_data = pd.DataFrame(cluster_data_arg)\nfrom sklearn.cluster import KMeans\nwcss = []\nfor k in range(1,10):\n    kmeans = KMeans(n_clusters = k)\n    kmeans.fit(cluster_data)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1,10),wcss,color=\"blue\")\nplt.show()\n#Number of cluster should be 2.We look the most increase where(you can look \"elbow\" rules)","6aaa7e95":"#if we want to add label to data We do cluster data(x and y)\nkmeans2 = KMeans(n_clusters = 2)\nclusters = kmeans2.fit_predict(cluster_data)\ndata[\"label\"] = clusters","57312c93":"#We look how many whether true our clusters\ndata_ac = pd.read_csv(\"..\/input\/column_2C_weka.csv\")\ndata_ac[\"class\"] = [0 if each == \"Abnormal\" else 1 for each in data_ac[\"class\"]]\ndata_ac_class = data_ac[\"class\"]\npredict_class = data[\"label\"]\nprint(\"accuracy is : {}\".format(100 - np.mean(np.abs(data_ac_class - predict_class)*100)))\nkmeans_accuracy = int(100 - np.mean(np.abs(data_ac_class - predict_class)*100))","445b6dcf":"#We draw our data with clusters.We have 0,1,2 label\nplt.scatter(x = data[data.label == 0].pelvic_radius,y = data[data.label == 0].degree_spondylolisthesis , color = \"yellow\")\nplt.scatter(x = data[data.label == 1].pelvic_radius,y = data[data.label == 1].degree_spondylolisthesis , color = \"blue\")","c585347d":"from scipy.cluster.hierarchy import linkage, dendrogram\nmerg = linkage(cluster_data,method=\"ward\")\ndendrogram(merg,leaf_rotation = 90)\nplt.xlabel(\"data points\")\nplt.ylabel(\"euclidean distance\")\nplt.show()","1317d55a":"from sklearn.cluster import AgglomerativeClustering\n\nhiyerartical_cluster = AgglomerativeClustering(n_clusters = 2,affinity= \"euclidean\",linkage = \"ward\")\ncluster = hiyerartical_cluster.fit_predict(cluster_data)\n\ndata[\"label_hc\"] = cluster","75c66a22":"plt.scatter(x = data[data.label_hc == 0].pelvic_radius,y = data[data.label_hc == 0].degree_spondylolisthesis , color = \"yellow\")\nplt.scatter(x = data[data.label_hc == 1].pelvic_radius,y = data[data.label_hc == 1].degree_spondylolisthesis , color = \"blue\")","13ea2c90":"#Let's we calculate accuracy.\n#data_ac[\"class\"] = [0 if each == \"Abnormal\" else 1 for each in data_ac[\"class\"]]\n#data_ac_class = data_ac[\"class\"]\n#predict_class = data[\"label\"]\nprint(\"accuracy is : {}\".format(100 - np.mean(np.abs(data_ac_class - data[\"label_hc\"])*100)))\nhc_accuracy = int(100 - np.mean(np.abs(data_ac_class - data[\"label_hc\"])*100))","1d28ff5e":"#We compare our model in graph\nfig = plt.figure(figsize = (15,5))\n\nplt.subplot(1, 3, 1)\nplt.scatter(x = data[data[\"class\"] == \"Normal\"].pelvic_radius , y = data[data[\"class\"] == \"Normal\"].degree_spondylolisthesis,color = \"red\")\nplt.scatter(x = data[data[\"class\"] == \"Abnormal\"].pelvic_radius , y = data[data[\"class\"] == \"Abnormal\"].degree_spondylolisthesis,color = \"yellow\")\nplt.title(\"original class\")\n\nplt.subplot(1, 3, 2)\nplt.scatter(x = data[data.label == 0].pelvic_radius,y = data[data.label == 0].degree_spondylolisthesis , color = \"yellow\")\nplt.scatter(x = data[data.label == 1].pelvic_radius,y = data[data.label == 1].degree_spondylolisthesis , color = \"red\")\nplt.title(\"kmeans\") \n\nplt.subplot(1, 3, 3)\nplt.scatter(x = data[data.label_hc == 0].pelvic_radius,y = data[data.label_hc == 0].degree_spondylolisthesis , color = \"yellow\")\nplt.scatter(x = data[data.label_hc == 1].pelvic_radius,y = data[data.label_hc == 1].degree_spondylolisthesis , color = \"red\")\nplt.title(\"hierarchical\")\n\nplt.show()","89f00996":"#We have hc_accuracy and kmeans_accuracy\nlist1 = [\"hc\",\"kmeans\"]\nlist2 = [hc_accuracy,kmeans_accuracy]\nlist3 = [100 - hc_accuracy,100 - kmeans_accuracy]\ndictionary = {\"name\":list1,\"value\":list2,\"hundred\":list3}\ndt = pd.DataFrame(dictionary)","e6cddb32":"import plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\ntrace1 = go.Bar(\nx = dt.name,\ny = dt.value,\nname=\"accuracy\",\nmarker = {\"color\":\"rgba(111,23,155,0.5)\"},\ntext=dt.name\n)\ntrace2 = go.Bar(\nx = dt.name,\ny = dt.hundred,\nname=\"mistake\",\nmarker = {\"color\":\"rgba(47,69,187)\"},\n)\nfig_data = [trace1,trace2]\nlayout = go.Layout(barmode = \"relative\")\nfig = go.Figure(data = fig_data, layout = layout)\niplot(fig)\n","4f05ec3c":"**Comparing Cluster's Method**\n\nWe compare two accuracy with plotly plot ","a00ddbb6":"![Ekran%20Al%C4%B1nt%C4%B1s%C4%B1.PNG](attachment:Ekran%20Al%C4%B1nt%C4%B1s%C4%B1.PNG)","a599ca82":"**Hierarcihal Cluster**\n\nOther cluster method is hierarcihal cluster it is not easy than kmeans but kmeans the simplest clusters method to me","d214744e":"The accuracy of hierarcihal cluster accuracy is higher than kmeans our data but everytime isn't so ","e12a6232":"**K-Means Cluster**\n\nAlready the data have been classified but we do this for you learn.We will do other clustering model is hierarchical cluster but \u0131 most like k means","aaf3fbf3":"**Unsupervised Learning**\n\nWelcome to my kernel.We will have learnt kmeans and hierarchical cluster.I hope you learn something from this kernel.\nI think \u0131 explained kernel but there is you don't understand you ask me everytime in comment.DONT FORGET UPVOTE.Let's go ","b2d4a52b":"We have this data but data point in yellow circle if we drop this data we will wrong with separate clusters that's why we drop it","d73838d4":"You look elbow rule understanding this.I understand down","0e24ec78":"![Ekran%20Al%C4%B1nt%C4%B1s%C4%B1.PNG](attachment:Ekran%20Al%C4%B1nt%C4%B1s%C4%B1.PNG)","1337c903":"**Conclusion**\n\nWe did kmeans and hierarchical cluster \u0131 hope you can understand this topic.If \u0131 have mistake \u0131 am sorry.You can look other kernel.Ca you vote me and feedback.Thanks for upvote"}}