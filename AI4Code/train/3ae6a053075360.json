{"cell_type":{"562d1d90":"code","ad78354b":"code","f0f67037":"code","b432b0f4":"code","2733eb9a":"code","60ff7d35":"code","7b0424a6":"code","bbdd4542":"code","ecff9a52":"code","9f4cb036":"code","6dbde3ce":"code","e037cf00":"code","cb507000":"code","8ce4d7cc":"markdown","e5b4e75f":"markdown","8d80b393":"markdown"},"source":{"562d1d90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import iplot\nimport seaborn\nimport cv2 as cv\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad78354b":"IMG_PATH = \"..\/input\/cusersmarilonedriveimagensvaccinationpng\/covid-vaccination-doses-per-capita.png\"\n\nimgArray = cv.imread(IMG_PATH)","f0f67037":"plt.imshow(imgArray)\n\nplt.show()","b432b0f4":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsvaccinationcsv\/vaccination.csv', delimiter=';', encoding = \"utf8\", nrows = nRowsRead)\ndf.dataframeName = 'vaccination.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","2733eb9a":"convertedArray = cv.cvtColor(imgArray, cv.COLOR_BGR2RGB)\n\nplt.subplots(figsize=(15,10))\nplt.imshow(convertedArray);plt.show()","60ff7d35":"df.isnull().sum()","7b0424a6":"ax = sns.catplot(y='total_vaccinations_per_hundred', kind='count', data=df, height=2.6, aspect=2.5,)","bbdd4542":"def barplot_percentages(feature, orient='v', axis_name=\"percentage of Total Vaccinations\"):\n    ratios = pd.DataFrame()\n    g = df.groupby(feature)[\"total_vaccinations_per_hundred\"].value_counts().to_frame()\n    g = g.rename({\"total_vaccinations_per_hundred\": axis_name}, axis=1).reset_index()\n    g[axis_name] = g[axis_name]\/len(df)\n    if orient == 'v':\n        ax = sns.barplot(x=feature, y= axis_name, hue='total_vaccinations_per_hundred', data=g, orient=orient)\n        ax.set_yticklabels(['{:,.0%}'.format(y) for y in ax.get_yticks()])\n    else:\n        ax = sns.barplot(x= axis_name, y=feature, hue='total_vaccinations_per_hundred', data=g, orient=orient)\n        ax.set_xticklabels(['{:,.0%}'.format(x) for x in ax.get_xticks()])\n    ax.plot()\n    plt.xticks(rotation=45)\nbarplot_percentages(\"Date\")","ecff9a52":"plt.figure(figsize=(9, 4.5))\nbarplot_percentages(\"Date\", orient='h')","9f4cb036":"plt.figure(figsize=(9, 4.5))\nbarplot_percentages(\"Entity\", orient='h')","6dbde3ce":"df.columns.tolist()","e037cf00":"from sklearn.ensemble import RandomForestClassifier\n\nparams = {'random_state': 0, 'n_jobs': 4, 'n_estimators': 5000, 'max_depth': 8}\n# One-hot encode\ndf = pd.get_dummies(df)\n# Drop redundant columns (for features with two unique values)\ndrop = ['Code_OWID_WRL']\nx, y = df.drop(drop,axis=1), df['Date_13\/12\/2020']\n# Fit RandomForest Classifier\nclf = RandomForestClassifier(**params)\nclf = clf.fit(x, y)\n# Plot features importances\nimp = pd.Series(data=clf.feature_importances_, index=x.columns).sort_values(ascending=False)\nplt.figure(figsize=(10,12))\nplt.title(\"Feature importance\")\nax = sns.barplot(y=imp.index, x=imp.values, palette=\"Blues_d\", orient='h')","cb507000":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Covid the next TB? Mar\u00edlia Prata, @mpwolke was Here' )","8ce4d7cc":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">How many people have received a coronavirus vaccine?<\/h3>\n\nTracking COVID-19 vaccination rates is crucial to understand the scale of protection against the virus, and how this is distributed across the global population.\n\nA global, aggregated database on COVID-19 vaccination rates is essential to monitor progress, but it is unfortunately not yet available. \n\nUntil such a database is made available, Our World in Data will be tracking recent announcements on the first countries to administer these vaccinations.\n\nhttps:\/\/ourworldindata.org\/covid-vaccinations","e5b4e75f":"#Codes by Shubham https:\/\/www.kaggle.com\/shubham47\/eda-with-seaborn-on-churn-dataset\/notebook","8d80b393":"<div class=\"alert alert-block alert-success\">\n    The chart above show the number of COVID-19 vaccination doses administered per 100 people within a given population. Note that this does not measure the total number of people that have been vaccinated (which is usually two doses)\n    https:\/\/ourworldindata.org\/covid-vaccinations\n\n<\/div>"}}