{"cell_type":{"43b3b3bf":"code","8e521f13":"code","b3951c18":"code","1f0b710f":"code","d73a7ae8":"code","812851c8":"code","665dba6c":"code","195b428b":"code","a01d4791":"code","f230051d":"code","f1b52d8a":"code","fa3c7e3c":"code","62705bb6":"code","f5e49bb7":"code","e72d2e09":"code","d4343df2":"code","58be84e3":"code","50727f90":"code","dac14d36":"code","00471bca":"code","7511d323":"code","52586311":"code","ce82872c":"code","e1a80f95":"code","40a2c857":"code","bc7e9b85":"code","a6f85327":"code","81b49fc4":"code","77be93e7":"code","ee6b46d5":"code","0644ff24":"code","ca23ed13":"code","73f5f3fc":"code","30d4bcae":"code","786c4bcc":"code","8f48d6a7":"code","4f89106d":"markdown","0d7c9082":"markdown","01d25bf8":"markdown","5797e92c":"markdown","afdcec42":"markdown","ba350c51":"markdown","fc3526ab":"markdown","f9db9cb7":"markdown"},"source":{"43b3b3bf":"import pandas as pd\n \ncars = {'Brand': ['Honda Civic','Toyota Corolla','Ford Focus','Audi A4'],\n        'Price': [22000,25000,27000,35000],\n        'Year': [2015,2013,2018,2018]\n        }\n \ndf = pd.DataFrame(cars, columns= ['Brand', 'Price','Year'])\nprint(df)","8e521f13":"# sort by one variable\ndf.sort_values(by=['Variable of Interest'], inplace=True) #ascending=False\nprint(df)","b3951c18":"# sort by multiple variables\n","1f0b710f":"import pandas as pd\n\ndata = {'Product': ['ABC','XYZ'],\n          'Price': ['250','270']\n        }\n\ndf = pd.DataFrame(data)\nprint (df)\nprint (df.dtypes)","d73a7ae8":"# Use astype(datatype)\ndf['Variable of Interest'] = df['Variable of Interest'].astype(float)\n","812851c8":"import pandas as pd\n\ndata = {'Product': ['AAA','BBB','CCC','DDD'],\n          'Price': ['250','ABC260','270','280XYZ']\n        }\n\ndf = pd.DataFrame(data)\n\nprint (df)\nprint(df.dtypes)","665dba6c":"df['Variable of Interest'] = pd.to_numeric(df['Variable of Interest'], errors='coerce')","195b428b":"import pandas as pd\n\ndata = {'Price_1': ['300','750','600','770','920'],\n        'Price_2': ['250','270','950','580','410'],\n        'Price_3': ['530','480','420','290','830']\n        }\n\ndf = pd.DataFrame(data)\n\nprint (df)\nprint (df.dtypes)","a01d4791":"# convert the dataframe to float type\n","f230051d":"import pandas as pd\n\nboxes = {'Color': ['Green','Green','Green','Blue','Blue','Red','Red','Red'],\n         'Shape': ['Rectangle','Rectangle','Square','Rectangle','Square','Square','Square','Rectangle'],\n         'Price': [10,15,5,5,10,15,15,5]\n        }\n\ndf = pd.DataFrame(boxes, columns= ['Color','Shape','Price'])\nprint (df)","f1b52d8a":"# Filter Color = Green?\ntemp = df.copy()\n","fa3c7e3c":"# Filter Color = Green or Blue?\ntemp = df.copy()\n","62705bb6":"# Filter Color = Green and Shape = Rectangle?\ntemp = df.copy()\n","f5e49bb7":"# Filter Price >= 5?\ntemp = df.copy()\n","e72d2e09":"import pandas as pd\n\nemployees = {'Name of Employee': ['Jon','Mark','Tina','Maria','Bill','Jon','Mark','Tina','Maria','Bill','Jon','Mark','Tina','Maria','Bill','Jon','Mark','Tina','Maria','Bill'],\n             'Sales': [1000,300,400,500,800,1000,500,700,50,60,1000,900,750,200,300,1000,900,250,750,50],\n             'Quarter': [1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4],\n             'Country': ['US','Japan','Brazil','UK','US','Brazil','Japan','Brazil','US','US','US','Japan','Brazil','UK','Brazil','Japan','Japan','Brazil','UK','US']\n            }\n\ndf = pd.DataFrame(employees, columns= ['Name of Employee','Sales','Quarter','Country'])\n\nprint (df)","d4343df2":"# Total sales by employee?\n# pivot = df.pivot_table(index=['Group'], values=['Variable of Interest'], aggfunc='statistic')\n","58be84e3":"# Total sales per employee in Quarter 3 and 4?\n","50727f90":"# Plot total sales by employee?\nimport matplotlib.pyplot as plt\n","dac14d36":"# Total sales by country?\n","00471bca":"# Total sales by country and employee?\n","7511d323":"# Max, Mean, Median, Min by employee?\n# Hint: aggfunc={'max', 'mean', 'median', 'min'}\n","52586311":"import pandas as pd\n\ndf = pd.DataFrame({'values_1': ['700','ABC','500','XYZ','1200'],\n                   'values_2': ['DDD','150','350','400','5000'] \n                   })\n\nprint (df)","ce82872c":"# What and how to fix?\n# Hint: pd.to_numeric() method\n","e1a80f95":"# What is the issue? How to fix?\n# Hint: dropna() method\n","40a2c857":"import pandas as pd\n\nclients = {'Client_ID': [111,222,333,444,555],\n           'Client_Name': ['Jon Snow','Maria Green', 'Bill Jones','Rick Lee','Pamela Lopez']\n           }\ndf1 = pd.DataFrame(clients, columns= ['Client_ID','Client_Name'])\nprint(df1)\n\ncountries = {'Client_ID': [111,222,333,444,777],\n             'Client_Country': ['UK','Canada','Spain','China','Brazil']\n             }\ndf2 = pd.DataFrame(countries, columns= ['Client_ID', 'Client_Country'])\nprint(df2)","bc7e9b85":"# pd.merge(df1, df2, how='type of join', on=['df1 key', 'df2 key'])\n# 'type of join' = {inner, left, right, outer}\n# 1. Inner Joint by Client\n","a6f85327":"# 2. Left Join by Client\n","81b49fc4":"# 3. Right Join by Client\n","77be93e7":"# 4. Outer Join by Client\n","ee6b46d5":"!pip install yfinance --upgrade --no-cache-dir\n# https:\/\/pypi.org\/project\/fix-yahoo-finance\/","0644ff24":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport datetime as dt\nimport yfinance as yf\n\n# find the symbol (i.e., google the instrument + 'yahoo finance') to any data series you are interested at \n# e.g., market\/sector index ETF for your chosen country and various asset classes (e.g., Comex Gold's symbol is 'GC=F')\n# e.g., SPY (https:\/\/finance.yahoo.com\/quote\/SPY\/)\n\nsymbols_list = ['AMZN', 'SPY', 'ETH-USD']\nstart = dt.datetime(2016,7,15)\nend = dt.datetime(2021,7,15)\ndata = yf.download(symbols_list, start=start, end=end)","ca23ed13":"data.head()","73f5f3fc":"# filter column adjusted close\ndf = data['Adj Close']\ndf.head()","30d4bcae":"# pct_change for returns\n# first element is NaN, so we remove\ndf['amzn_ret'] =df['AMZN'].pct_change()[1:]\ndf['spy_ret'] =df['SPY'].pct_change()[1:]\ndf['eth_ret'] =df['ETH-USD'].pct_change()[1:]\ndf.head()","786c4bcc":"df['eth_ret'].describe()","8f48d6a7":"df['AMZN'].plot()\n#df['SPY'].plot()\ndf['ETH-USD'].plot()\nplt.ylabel('Prices of AMZN and ETH-USD')\nplt.show()\n","4f89106d":"# 4. AGGREGATE","0d7c9082":"Acknowledgement: The code snippets are from Datatofish.com","01d25bf8":"# LIVE LAB","5797e92c":"# 3. FILTER","afdcec42":"# 2. CONVERT","ba350c51":"# 5. CLEAN","fc3526ab":"# 6. MERGE","f9db9cb7":"# 1. SORT"}}