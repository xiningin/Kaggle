{"cell_type":{"6e7d5b61":"code","2a77e061":"code","e4f78ace":"code","c9efa7cd":"code","7ca94070":"code","5fc73d3e":"code","e4f5be85":"code","73a7fdda":"code","d8bf9480":"code","ac967c15":"code","301e38d2":"code","74f94f3b":"code","78b23d00":"code","9eb3d0f0":"code","ff373553":"code","5ef3bb9b":"code","45e1a963":"code","8e0c9e48":"code","99492eba":"code","ae3bfd10":"code","a6385a98":"markdown","e616be4e":"markdown","d94ba179":"markdown","fbf7afc1":"markdown","08aa0248":"markdown","14fca267":"markdown","8c2d0aaf":"markdown"},"source":{"6e7d5b61":"import numpy as np\nimport pandas as pd","2a77e061":"us_yt = pd.read_csv('..\/input\/youtube-new\/USvideos.csv')\ndisplay(us_yt.head())\nprint(us_yt.columns)","e4f78ace":"#another curiousity of mine\nus_yt.category_id.nunique()#.unique_count().sum()","c9efa7cd":"corrolation_list = ['views', 'likes', 'dislikes', 'comment_count']\nhm_data = us_yt[corrolation_list].corr() \ndisplay(hm_data)\n#This will trim down the number of columns we are looking for correlations between\n#this exceeds the scope of the initial question but i want to know a little more for myself ","7ca94070":"import matplotlib as plt\nimport seaborn as sns\nimport matplotlib.pyplot\n","5fc73d3e":"# to help you visualize these correlations, see the plots below\n# the lighter the colour the higher the correlation\n\nmatplotlib.pyplot.figure(figsize=(8,6))\nsns.heatmap(hm_data, annot=True);","e4f5be85":"#matplotlib.pyplot.figure(figsize=(12,12))\nsns.pairplot(us_yt[['views', 'likes']], kind='reg',height=6);","73a7fdda":"#to get a closer look at the scatterplot for likes\/views\nmatplotlib.pyplot.figure(figsize=(16,16))\nsns.scatterplot(x=us_yt['views'], y=us_yt['likes']);","d8bf9480":"#For these datasets we will use a subset of the columns, certain columns have characters that\n#the dataframe can't currently handle and since those columns don't contain meaningful data for\n#this use case I'm electing to simply drop them \ncol_list = ['video_id', 'views', 'likes', 'dislikes', 'comment_count']\n\nus_yt = pd.read_csv('..\/input\/youtube-new\/USvideos.csv', usecols=col_list) #USA, remaking the dataframe in the same format as the others\nca_yt = pd.read_csv('..\/input\/youtube-new\/CAvideos.csv', usecols=col_list) #Canada\nde_yt = pd.read_csv('..\/input\/youtube-new\/DEvideos.csv', usecols=col_list) #Germany\nfr_yt = pd.read_csv('..\/input\/youtube-new\/FRvideos.csv', usecols=col_list) #France\ngb_yt = pd.read_csv('..\/input\/youtube-new\/GBvideos.csv', usecols=col_list) #United Kingdom (Great Brittain)\nin_yt = pd.read_csv('..\/input\/youtube-new\/INvideos.csv', usecols=col_list) #India\njp_yt = pd.read_csv('..\/input\/youtube-new\/JPvideos.csv', usecols=col_list) #Japan\nkr_yt = pd.read_csv('..\/input\/youtube-new\/KRvideos.csv', usecols=col_list) #South Korea\nmx_yt = pd.read_csv('..\/input\/youtube-new\/MXvideos.csv', usecols=col_list) #Mexico\nru_yt = pd.read_csv('..\/input\/youtube-new\/RUvideos.csv', usecols=col_list) #Russia","ac967c15":"df_list = [us_yt, ca_yt, de_yt, fr_yt, gb_yt, in_yt, jp_yt, kr_yt, mx_yt, ru_yt]\ndf_name_list = ['United States', 'Canada', 'Germany', 'France', 'Great Brittain', 'India',\n                'Japan', 'South Korea', 'Mexico', 'Russia']\n","301e38d2":"views_df = pd.DataFrame(columns=['views', 'likes', 'dislikes', 'comment_count'])\nlikes_df = pd.DataFrame(columns=['views', 'likes', 'dislikes', 'comment_count'])\n\ndisplay(views_df, likes_df)","74f94f3b":"count = 0\nwhile count != 10:\n    print(df_name_list[count])\n    current_df = df_list[count]\n    _x = current_df[corrolation_list].corr()\n    display(_x)\n    views_df.loc[count] = _x.loc['views']\n    likes_df.loc[count] = _x.loc['likes']\n    count += 1\n# Hid output to keep the size of the notebook down, feel free to unhide it to see more of the data","78b23d00":"views_df = views_df.drop(axis=1, labels='views') #remove redundant column\nviews_df.index = df_name_list\ndisplay(views_df.style.background_gradient()) ## MasterData frame with all the correlation coefficients in relation to views ","9eb3d0f0":"likes_df = likes_df.drop(axis=1, labels='likes') #remove redundant column\nlikes_df.index = df_name_list\ndisplay(likes_df.style.background_gradient()) ## Master Data frame with all the corrolation coefficients in relation to likes","ff373553":"matplotlib.pyplot.figure(figsize=(8,6))\nsns.heatmap(likes_df, annot=True, linewidths=.5);","5ef3bb9b":"Master_df = pd.DataFrame(columns=['views', 'likes', 'dislikes', 'comment_count', 'country'])\ndisplay(Master_df)","45e1a963":"#now to create a master dataframe with all the datapoints in it\ncount = 0\nentries = 0\nwhile count != 10:\n    current_df = df_list[count]\n    entries = entries + len(current_df)\n    country_name = df_name_list[count]\n    current_df['country'] = country_name\n    Master_df = pd.merge(Master_df, current_df, how='outer')\n    count += 1\nprint(entries)","8e0c9e48":"print(entries) \nprint(len(Master_df)) #comparing the total number of entries to make sure I didn't lose any data points \ndisplay(Master_df.sample(10))\n","99492eba":"Master_df[corrolation_list].corr().style.background_gradient()","ae3bfd10":"matplotlib.pyplot.figure(figsize=(16,16))\nsns.scatterplot(x=Master_df[\"views\"], y=Master_df[\"likes\"], hue=Master_df[\"country\"])\nsns.despine(bottom=True, left=True);","a6385a98":"# Correlations On Youtube TOTW\n\nThis notebook is to answer the task: Correlation between views and likes. This is my Third draft (content complete), I encourage constructive feedback. As time allows I will revisit this notebook and polish it up.\nThe conclusion is that there is a strong positive correlation between views and likes on youtube.\n\n\n[US Data](#part-1)\n\n[World Data](#part-2)\n\n[Final Visual](#part-3)","e616be4e":"<a id=\"part-1\"><\/a>\n## US Data\nWe'll start with a subset of the data (US) before expanding to include the entire dataset","d94ba179":"<a id=\"part-3\"><\/a>\n## Final Visual\n\nAs you can see below the trend below seems to follow for each country in the datasets","fbf7afc1":"<a id=\"part-2\"><\/a>\n## World Data\n\nNow that we see the correlation coefficient for the US data, let's now see how much these trends stay the same in other countries.","08aa0248":"We can see that there is a high correlation between the number of likes on a video and the number of views. Also an interesting note: likes and comment count has an incredibly high correlation in Japan, Japan also has a weirdly high correlation between dislikes, likes and views (one could also rephrase this to a high correlation between reactions and views). There are other interesting little tidbits in the data.\n\n(obligatory correlation =\/= causation speil)Without seeing this data in timelapse one couldn't determine if a particular variable is the cause of the other. For instance: are videos that are watched frequently more likely to be liked by a viewer, or does a video receiving a large number of likes cause it to be recommended frequently. Or perhaps neither is the cause of the other and perhaps some confounding variable is the cause of both of these. ","14fca267":"# Final Thoughts\nThere is a strong positive correlation between likes and views. This trend is more visible in outlier cases.\n\n\nThis year I've challenged myself to complete one task on Kaggle per week, in order to develop a larger Data Science portfolio. If you found this notebook useful or interesting please give it an upvote. If you would like to collaborate on a future task of the week feel free to leave a comment here or message me directly. For past TOTW check out the link to my page on github for this ongoing project https:\/\/github.com\/Neil-Kloper\/Weekly-Kaggle-Task\/wiki","8c2d0aaf":"This is the pearson correlation values:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 = a strong positive correlation<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 = no correlation<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1 = strong negative correlation.\n\nThis shows that there is a strong positive correlation with number of likes and number of views, while there is a moderate correlation between views and comment count \n"}}