{"cell_type":{"119410e5":"code","01ee1035":"code","950343f1":"code","96787095":"code","581b21fb":"code","5d27fcfd":"code","564b312a":"code","9e4ae627":"code","64765a38":"code","884c5c99":"code","5f4fd7fa":"code","68ce0888":"code","ac33c166":"code","d7cb9a43":"code","2b008a63":"code","a0e42a77":"code","a9cff3be":"code","aee74ab2":"code","a1e5fd1e":"code","bccbe075":"code","f7265b72":"code","78fe6868":"code","d2ceeab3":"code","fec2fecb":"markdown","7d4ec3d6":"markdown","d04f6b60":"markdown","4664051c":"markdown","428b530f":"markdown","5e85b7c6":"markdown","b8e68ffa":"markdown","b9c56df0":"markdown","59d97d04":"markdown","4b4d77ab":"markdown","a71997b5":"markdown","82456e2a":"markdown","4f4b00d5":"markdown","9d22aa87":"markdown","b17f76dd":"markdown","e06ab34a":"markdown","b3e4add9":"markdown","1710c34e":"markdown"},"source":{"119410e5":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn           as sns\nimport plotly.graph_objs as go\nimport plotly.express    as px \nimport nltk\nimport re\nimport string\n\nfrom scipy.stats import norm\nfrom wordcloud   import WordCloud, STOPWORDS\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom wordcloud import WordCloud,STOPWORDS\nstopwords = set(STOPWORDS)\n\nfrom textblob import TextBlob\nimport re\nfrom collections import Counter\n\nfrom sklearn.metrics import classification_report,accuracy_score,confusion_matrix\nfrom IPython.display import Markdown as md\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","01ee1035":"tweets = pd.read_csv(\"\/kaggle\/input\/pfizer-vaccine-tweets\/vaccination_tweets.csv\")","950343f1":"tweets.head()","96787095":"tweets.info()","581b21fb":"tweets.describe()","5d27fcfd":"#Number of rows and columns in the dataset\nprint(\"There are {} rows and {} columns in the dataset.\".format(tweets.shape[0],tweets.shape[1]))","564b312a":"text = \",\".join(review for review in tweets.text if 'COVID' not in review and 'https' not in review and 'Covid' not in review)\ntext[:1000]","9e4ae627":"text = \",\".join(review for review in tweets.text if 'COVID' not in review and 'https' not in review and 'Covid' not in review)\nwordcloud = WordCloud(max_words=200, colormap='Set2',background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.title('Prevalent words in tweets',fontsize=19)\nplt.show()","64765a38":"tweets[\"user_location\"].value_counts()","884c5c99":"plt.figure(figsize=(10,12))\nsns.barplot(tweets[\"user_location\"].value_counts().values[0:30],\n            tweets[\"user_location\"].value_counts().index[0:30]);\nplt.title(\"Top 10 Countries with maximum tweets\",fontsize=14)\nplt.xlabel(\"Number of tweets\",fontsize=14)\nplt.ylabel(\"Country\",fontsize=14)\nplt.show()","5f4fd7fa":"plt.figure(figsize=(15, 6))\nsns.heatmap(tweets.isnull(), cbar=True, cmap='Paired_r')\nplt.xlabel(\"Column_Name\", size=14, weight=\"bold\")\nplt.title(\"Places of missing values in column\",fontweight=\"bold\",size=14)\nplt.show()","68ce0888":"def unique_values_funct(data_frame):\n    unique_dataframe = pd.DataFrame()\n    unique_dataframe['Features'] = data_frame.columns\n    uniques = []\n    for col in data_frame.columns:\n        u = data_frame[col].nunique()\n        uniques.append(u)\n    unique_dataframe['Uniques'] = uniques\n    return unique_dataframe\n\nudf = unique_values_funct(tweets)\n\nf, ax = plt.subplots(1,1, figsize=(10,5))\nsns.barplot(x=udf['Features'], y=udf['Uniques'], alpha=0.8)\nplt.title('Bar plot for unique values in each column', fontsize=14)\nplt.ylabel('Unique values', fontsize=14)\nplt.xlabel('Columns', fontsize=14)\nplt.xticks(rotation=90)\nplt.show()","ac33c166":"tweets[\"num of words in text\"] = tweets[\"text\"].apply(lambda x: len(x))\nplt.figure(figsize=(10,7))\nsns.kdeplot(tweets[\"num of words in text\"],shade=True, color='m')\nplt.title(\"Distribution of words in text column\")\nplt.xlabel(\"Number of words\")\nplt.show()","d7cb9a43":"username_count = tweets['user_name'].value_counts().reset_index().rename(columns={\n    'user_name':'tweet_count','index':'user_name'})\nusername_count","2b008a63":"username_count = tweets['user_name'].value_counts().reset_index().rename(columns={\n    'user_name':'tweet_count','index':'user_name'})\n\nplt.figure(figsize=(8, 10))\nsns.barplot(y='user_name',x='tweet_count',data=username_count.head(20))\ny=username_count['tweet_count'].head(20)\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Users with maximum tweets',weight='bold', size=13)\nplt.ylabel('Username', size=12, weight='bold')\nplt.xlabel('TweetCount', size=12, weight='bold')\nplt.show()","a0e42a77":"plt.figure(figsize=(5, 5))\nsns.countplot(x =\"user_verified\",data=tweets, palette=\"Set1\")\nplt.title(\"Verified user accounts or not ?\")\nplt.xticks([False,True],['Unverified','Verified'])\nplt.show()","a9cff3be":"plt.figure(figsize=(15,5))\nsrc = tweets['source'].value_counts().sort_values(ascending=False)\nsource = src.head(10)\nsource.plot.bar(color=['red', 'green', 'blue', 'black','cyan','pink','purple','violet','yellow','orange'])\nplt.title('Platform with maximum number of tweets',size=13)\nplt.xlabel('User Platform',size=13)\nplt.ylabel('Tweet Count',size=13)\nplt.show()","aee74ab2":"tweets['user_location'].value_counts()","a1e5fd1e":"pla = tweets['source'][tweets['user_location'] == 'London'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0,0.01) \nplt.figure(figsize=(8,8))\npla[0:5].plot(kind = 'pie', title = 'Most Tweet Sources used in India', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","bccbe075":"pla = tweets['source'][tweets['user_location'] == 'Malaysia'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1) \nplt.figure(figsize=(8,8))\npla[0:2].plot(kind = 'pie', title = 'Most Tweet Sources used in Malaysia', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","f7265b72":"pla = tweets['source'][tweets['user_location'] == 'United States'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0) \nplt.figure(figsize=(8,8))\npla[0:4].plot(kind = 'pie', title = 'Most Tweet Sources used in United States', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","78fe6868":"top_tags=tweets['hashtags'].value_counts().sort_values(ascending=False)\nplt.figure(figsize=(8,8))\nexplode = (0, 0.1, 0, 0,0.01) \n\ntop_tags[0:5].plot(kind = 'pie',title = 'Top 5 hashtags',autopct='%1.1f%%',shadow=True,explode = explode)","d2ceeab3":"tweets[\"date\"] = pd.to_datetime(tweets[\"date\"])\ntweets[\"Month\"] = tweets[\"date\"].apply(lambda x : x.month)\ntweets[\"day\"] = tweets[\"date\"].apply(lambda x : x.dayofweek)\ndmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ntweets[\"day\"] = tweets[\"day\"].map(dmap)\nplt.title(\"Day with maximun tweets\")\nsns.countplot(tweets[\"day\"])","fec2fecb":"### 1. Word cloud","7d4ec3d6":"### Number of Tweets by location(Top 30)","d04f6b60":"![u8vm2hl_pfizer-covid-vaccine-650_625x300_09_November_20.jpg](attachment:u8vm2hl_pfizer-covid-vaccine-650_625x300_09_November_20.jpg)","4664051c":"### 8. Plot platform with maximum number of tweets\u00b6\n","428b530f":"## Visualization","5e85b7c6":"# Visualizing Pfizer Vaccine Tweets","b8e68ffa":"### Load the dataset","b9c56df0":"#### 8.2> Most Tweet Sources used in Malaysia","59d97d04":"### Load all the required libraries","4b4d77ab":"### 9. Plot top 5 hashtags","a71997b5":"### 4. Bar plot of unique values in each column","82456e2a":"### 5. Distribution of words in text column","4f4b00d5":"### 7. Plot verified users account\n","9d22aa87":"#### 8.1> Most Tweet Sources used in London","b17f76dd":"### 10. Day with most number of tweets","e06ab34a":"#### 8.3> Most Tweet Sources used in United States","b3e4add9":"### 6. Users with maximum tweets(Top 20)","1710c34e":"### 3. Heatmap representation of missing values"}}