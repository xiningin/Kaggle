{"cell_type":{"1800d1d6":"code","d071f4ab":"code","3fbfd96a":"code","4e60fd82":"code","e6411941":"code","f2b49689":"code","32ce8423":"code","4942292f":"code","04ae0352":"code","4f34ac02":"code","28afbf5c":"code","4e316107":"code","840a2574":"code","a82826db":"code","cc50e788":"code","d0f7427e":"code","6a6963e6":"code","2b24c7cc":"code","a4459a35":"code","cc575496":"code","b556184e":"code","56334ed0":"code","f293f617":"code","a9bc702c":"code","27f10831":"code","e9c18deb":"code","81c282ae":"code","c3e66efd":"code","86d35d29":"code","e0285bac":"code","59e7eafe":"code","1ff41be3":"code","fe83bce0":"code","94feb549":"code","e31a1587":"markdown","eef07085":"markdown"},"source":{"1800d1d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d071f4ab":"#To load the dataset\ncancer=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')","3fbfd96a":"##to print the instances\ncancer.head()\n","4e60fd82":"cancer.columns","e6411941":"##To get the insight of dataset \ncancer.describe()\n","f2b49689":"#to know the shape of dataset\ncancer.shape","32ce8423":"##for checking missing values\ncancer.isnull().sum()","4942292f":"## Knowing missing values using visualisation\nsns.heatmap(cancer.isnull(),cmap='coolwarm')","04ae0352":"sns.distplot(cancer['radius_mean'])","4f34ac02":"sns.distplot(cancer['texture_mean'])","28afbf5c":"sns.distplot(cancer['perimeter_mean'])","4e316107":"sns.distplot(cancer['area_mean'])","840a2574":"#To drop id columns\ncancer.drop(['id'],axis=1)","a82826db":"##Getting dummy parameter for the attribute diagnosis\nm1=pd.get_dummies(cancer['diagnosis'],drop_first=True)","cc50e788":"m1","d0f7427e":"rt=pd.concat([cancer,m1],axis=1)","6a6963e6":"rt.head()","2b24c7cc":"##dropping some of the unwanted attributes\nmt=rt.drop(['id','diagnosis','Unnamed: 32'],axis=1)","a4459a35":"#printing some of the instances \nmt.head()","cc575496":"#considering all the attributes excluding class diagonosis\nx=mt.drop(['M'],axis=1)","b556184e":"x.head()","56334ed0":"y=mt['M']\ny","f293f617":"##Dividing the dataset into training set and testing set\nfrom sklearn.model_selection import train_test_split","a9bc702c":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.30, random_state=101)","27f10831":"X_train.head()","e9c18deb":"#fitting the model using the decision tree method\nfrom sklearn.tree import DecisionTreeClassifier","81c282ae":"model=DecisionTreeClassifier()","c3e66efd":"model.fit(X_train,y_train)","86d35d29":"predicts=model.predict(X_test)","e0285bac":"predicts","59e7eafe":"y_test","1ff41be3":"from sklearn.metrics import classification_report,confusion_matrix","fe83bce0":"##To print the confusion matrix\nprint(confusion_matrix(y_test,predicts))","94feb549":"#print classification report\nprint(classification_report(y_test,predicts))","e31a1587":"The fitted model shows 91 percent accuracy and precision with 93 percent and 88 percent respectively.","eef07085":"# 1. * # > **Training Model**"}}