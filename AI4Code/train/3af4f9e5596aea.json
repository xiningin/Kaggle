{"cell_type":{"d728f0e2":"code","eb83d36e":"code","51583fc2":"code","de5a6ebf":"code","c144875c":"code","e9327055":"code","1b7d4f37":"code","80b532b5":"code","b8b25ec5":"code","0df3592b":"code","4eaa8ae2":"code","f0af5055":"code","39318ecb":"code","2b73e0f2":"code","07aa40da":"code","7deabecb":"code","991ff5dc":"markdown","a3645590":"markdown","604d34a5":"markdown","cd8b36cd":"markdown","ba274dc2":"markdown","765421b1":"markdown"},"source":{"d728f0e2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","eb83d36e":"# read the csv as a DataFrame.\ndf_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","51583fc2":"df_train.info()","de5a6ebf":"df_train[df_train['Embarked'].isnull()]","c144875c":"df_train['Embarked'] = df_train['Embarked'].fillna('S')","e9327055":"df_test.info()","1b7d4f37":"df_concat = pd.concat([df_train, df_test], sort=True).reset_index(drop=True)\ndf_concat.info()","80b532b5":"# Use pandas' correlation method.\ncorrelations_all = df_concat.corr()\ncorrelations_all","b8b25ec5":"# Maybe try some visual things,\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.heatmap(correlations_all.abs())\nplt.show()","0df3592b":"df_train = pd.concat([df_train,pd.get_dummies(df_train['Sex'], prefix='Sex')], axis=1)\ndf_train = pd.concat([df_train,pd.get_dummies(df_train['Pclass'], prefix='Pclass')], axis=1)\ndf_train = pd.concat([df_train,pd.get_dummies(df_train['Embarked'], prefix='Embarked')], axis=1)\n\ndf_test = pd.concat([df_test,pd.get_dummies(df_test['Sex'], prefix='Sex')], axis=1)\ndf_test = pd.concat([df_test,pd.get_dummies(df_test['Pclass'], prefix='Pclass')], axis=1)\ndf_test = pd.concat([df_test,pd.get_dummies(df_test['Embarked'], prefix='Embarked')], axis=1)","4eaa8ae2":"correlation_survived = df_train.corr()\ncorrelation_survived.drop('Survived', axis=0)['Survived'].abs()","f0af5055":"df_test[df_test['Fare'].isnull()]","39318ecb":"fare_median = df_concat.loc[df_concat['Pclass'] == 3]['Fare'].median()\ndf_test['Fare'] = df_test['Fare'].fillna(fare_median)\ndf_test[df_test['PassengerId'] == 1044]","2b73e0f2":"Train_x = df_train[['Sex_female', 'Sex_male', 'Fare', 'Pclass_1', 'Pclass_2', 'Pclass_3',\n                   'Embarked_C', 'Embarked_S']]\nTrain_y = df_train['Survived']\n\nTest_x = df_test[['Sex_female', 'Sex_male', 'Fare', 'Pclass_1', 'Pclass_2', 'Pclass_3',\n                   'Embarked_C', 'Embarked_S']]\n\nTrain_x.info()","07aa40da":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\n\nmodel.fit(Train_x, Train_y)\nacc_log = round(model.score(Train_x, Train_y) * 100, 2)\nacc_log","7deabecb":"df_test['Survived'] = model.predict(Test_x)\nOutput = df_test[['PassengerId', 'Survived']]\nOutput.to_csv('.\/submission.csv', index=False)\nOutput","991ff5dc":"The code above is to see what feature describes 'Survived' the most.","a3645590":"TODO <br \/>\nSex <- one-hot encoding <br \/>\nPclass <- one-hot encoding <br \/>\nFare <- Fill NaN <br \/>\nNormalize <br \/>\nLogistic regression w\/ Pclass, Fare, male\/female <br \/>\n(optional) Embarked <- fill NaN and one-hot encode <br \/>","604d34a5":"\\<Test set\\> <br \/>\nTotal data: 418 <br \/>\nAge: 332 (86 *Null*) <br \/>\nCabin: 91 (327 *Null*) <br \/>\nFare: 417 (1 *Null*)","cd8b36cd":"one-hot encoding for 'Sex'","ba274dc2":"\\<Train set\\> <br \/>\nTotal data: 891 <br \/>\nAge: 714 (177 *Null*) <br \/>\nCabin: 204 (687 *Null*) <br \/>\nEmbarked: 889 (2 *Null*)","765421b1":"A missing value in Embarked is filled with S.\n\nSee: https:\/\/www.encyclopedia-titanica.org\/titanic-survivor\/martha-evelyn-stone.html\nand https:\/\/www.kaggle.com\/gunesevitan\/titanic-advanced-feature-engineering-tutorial\/notebook"}}