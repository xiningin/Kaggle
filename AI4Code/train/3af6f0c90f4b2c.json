{"cell_type":{"7f35d51a":"code","1edec950":"code","c710e65b":"code","894153a8":"code","36251d81":"code","ef148bb5":"code","eedac787":"code","b1904f87":"code","881707ef":"code","46587161":"markdown","08f8c071":"markdown","22b2c2ee":"markdown","64cf1dc9":"markdown","ad05e14e":"markdown","26dcfb46":"markdown","93411ef0":"markdown","0d62aeb0":"markdown","f224563a":"markdown","0d9f1d15":"markdown","cd4666a1":"markdown","0b549802":"markdown","c7885299":"markdown","8b7f8851":"markdown","6a80370a":"markdown","f50ba9b2":"markdown","c9d03431":"markdown","b7a6cc22":"markdown","35fdd1da":"markdown","a87d0f0d":"markdown"},"source":{"7f35d51a":"# Importing modules\nimport pandas as pd\n\n# Reading in datasets\/book1.csv\nbook1 = pd.read_csv(\"\/kaggle\/input\/gameofthrones-book1\/book1.csv\")\nbook2 = pd.read_csv(\"\/kaggle\/input\/gameofthrones-book2\/book2.csv\")\nbook3 = pd.read_csv(\"\/kaggle\/input\/gameofthrones-book3\/book3.csv\")\nbook4 = pd.read_csv(\"\/kaggle\/input\/gameofthrones-book4\/book4.csv\")\nbook5 = pd.read_csv(\"\/kaggle\/input\/gameofthrones-book5\/book5.csv\")\n\n\n# Printing out the head of the dataset - example of book 1\nbook1.head()","1edec950":"# Importing modules\nimport networkx as nx\n\n# Creating an empty graph object\nG_book1 = nx.Graph()","c710e65b":"# Iterating through the DataFrame to add edges\nfor _, edge in book1.iterrows():\n    G_book1.add_edge(edge['Source'], edge['Target'], weight=edge['weight'])\n\n# Creating a list of networks for all the books\nbooks = [G_book1]\nbook_fnames = ['..\/input\/gameofthrones-book2\/book2.csv', '..\/input\/gameofthrones-book3\/book3.csv', '..\/input\/gameofthrones-book4\/book4.csv', '..\/input\/gameofthrones-book5\/book5.csv']\nfor book_fname in book_fnames:\n    book = pd.read_csv(book_fname)\n    G_book = nx.Graph()\n    for _, edge in book.iterrows():\n        G_book.add_edge(edge['Source'], edge['Target'], weight=edge['weight'])\n    books.append(G_book)","894153a8":"#Using this measure, let's extract the top ten important characters from the first book (book[0]) and the fifth book (book[4]).\n\n# Calculating the degree centrality of book 1\ndeg_cen_book1 = nx.degree_centrality(books[0])\n\n# Calculating the degree centrality of book 5\ndeg_cen_book5 = nx.degree_centrality(books[4])\n\n# Sorting the dictionaries according to their degree centrality and extracting the top 10\nsorted_deg_cen_book1 = sorted(deg_cen_book1.items(), key=lambda x:x[1], reverse=True)[0:10]\n\n# Sorting the dictionaries according to their degree centrality and extracting the top 10\nsorted_deg_cen_book5 = sorted(deg_cen_book5.items(), key=lambda x:x[1], reverse=True)[0:10]\n\n# Printing out the top 10 of book1 and book5\nprint(\"Book 1\", sorted_deg_cen_book1)\nprint(\"and\")\nprint(\"Book 5\", sorted_deg_cen_book5)","36251d81":"%matplotlib inline\nimport matplotlib.pyplot as plt\n\n# Creating a list of degree centrality of all the books\nevol = [nx.degree_centrality(book) for book in books]\n \n# Creating a DataFrame from the list of degree centralities in all the books\ndegree_evol_df = pd.DataFrame.from_records(evol)\n\n# Plotting the degree centrality evolution of Eddard-Stark, Tyrion-Lannister and Jon-Snow\ndegree_evol_df[['Eddard-Stark', 'Tyrion-Lannister', 'Jon-Snow']].plot();\n\n          \nplt.xlabel(\"Books number\", size = 16,)\nplt.ylabel(\"importance\", size = 16)\n\nplt.title(\"Evolution of character s importance through the five books\", \n          fontdict={'family': 'serif', \n                    'color' : 'darkblue',\n                    'weight': 'bold',\n                    'size': 16},\n          loc='left')\n","ef148bb5":"# Creating a list of betweenness centrality of all the books just like we did for degree centrality\nevol = [nx.betweenness_centrality(book, weight='weight') for book in books]\n\n# Making a DataFrame from the list\nbetweenness_evol_df = pd.DataFrame.from_records(evol).fillna(0)\n\n# Finding the top 4 characters in every book\nset_of_char = set()\nfor i in range(5):\n    set_of_char |= set(list(betweenness_evol_df.T[i].sort_values(ascending=False)[0:4].index))\nlist_of_char = list(set_of_char)\n\n# Plotting the evolution of the top characters\nbetweenness_evol_df[list_of_char].plot(figsize=(13, 7))","eedac787":"# Creating a list of pagerank of all the characters in all the books\nevol = [nx.pagerank(book) for book in books]\n\n# Making a DataFrame from the list\npagerank_evol_df = pd.DataFrame.from_records(evol).fillna(0)\n\n# Finding the top 4 characters in every book\nset_of_char = set()\nfor i in range(5):\n    set_of_char |= set(list(pagerank_evol_df.T[i].sort_values(ascending=False)[0:4].index))\nlist_of_char = list(set_of_char)\n\n# Plotting the top characters\npagerank_evol_df[list_of_char].plot(figsize=(13, 7))","b1904f87":"# Creating a list of pagerank, betweenness centrality, degree centrality\n# of all the characters in the fifth book.\nmeasures = [nx.pagerank(books[4]), \n            nx.betweenness_centrality(books[4], weight='weight'), \n            nx.degree_centrality(books[4])]\n\n# Creating the correlation DataFrame\ncor = pd.DataFrame.from_records(measures)\n\n# Calculating the correlation\ncor.T.corr()","881707ef":"# Finding the most important character in the fifth book,\n# according to degree centrality, betweenness centrality and pagerank.\np_rank, b_cent, d_cent = cor.idxmax(axis=1)\n\n# Printing out the top character accoding to the three measures\nprint(p_rank)\nprint(b_cent)\nprint(d_cent)","46587161":"According to degree centrality, the most important character in the first book is Eddard Stark but he is not even in the top 10 of the fifth book. The importance of characters changes over the course of five books. \nThe high \"death-activity\" might be one of the explaination.","08f8c071":"# Google PageRank","22b2c2ee":"# INTRODUCTION\n\nBased on the books of George R.R. Martin, the HBO serie GAME OF THRONES has released different seasons with different characters. Some of them dies, some of them survive, but the importance of each of them change according to the moment of the story. \n\nIn this project **we will analyze the co-occurence network of the characters**. This analysis is based on the books. \n\n<font color=\"#008000\">Co-occurence : <\/font> 2 characters are considered to co-occur if their names appear in the surrounding of 15 words from one another. ","64cf1dc9":"\n\nCentrality Measures allows us to pinpoint the most important nodes of a Graph. This essentially helps us to identify :\n\n- Influential nodes in a Social Network.\n- Nodes that disseminate information to many nodes\n- Hubs in a transportation network\n- Important pages in the Web\n- Nodes that prevent the Network from breaking up\n\n**This is based on the assumption that important nodes have many connections.**\n\n\n\n\nhttps:\/\/www.geeksforgeeks.org\/network-centrality-measures-in-a-graph-using-networkx-python\/\n\n\nhttps:\/\/coderzcolumn.com\/tutorials\/data-science\/network-analysis-in-python-node-importance-and-paths-networkx","ad05e14e":"# Correlation between different measures","26dcfb46":"First, let's measure the importance of a node in a network by looking at the number of neighbors it has, that is, the number of nodes it is connected to. **This measure of importance is called degree centrality.**","93411ef0":"# I - Import of the environment","0d62aeb0":"Let's look at the evolution of degree centrality of a couple of characters like Eddard Stark, Jon Snow, and Tyrion, which showed up in the top 10 of degree centrality in the first book.","f224563a":"Currently, the graph object G_book1 is empty. Let's now populate it with the edges from book1. And while we're at it, let's load in the rest of the books too!","0d9f1d15":"Stannis, Jon Snow, and Daenerys are the most important characters in the fifth book according to PageRank. Eddard Stark follows a similar curve but for degree centrality and betweenness centrality: He is important in the first book but dies into oblivion over the book series.\n\nWe have seen three different measures to calculate the importance of a node in a network, and all of them tells us something about the characters and their importance in the co-occurrence network. We see some names pop up in all three measures so maybe there is a strong correlation between them?\n\nLet's look at the correlation between PageRank, betweenness centrality and degree centrality for the fifth book using Pearson correlation.","cd4666a1":"# Evolution of importance throught the books","0b549802":"We have 5 columns. \n\nWe have 2 nodes that are linked by an edge : Source & target. \n\nA network can have directed or undirected edges and in this network all the edges are undirected. The weight attribute of every edge tells us the number of interactions that the characters have had over the book, and the book column tells us the book number.","c7885299":"PageRank was the initial way Google ranked web pages. It evaluates the inlinks and outlinks of webpages in the world wide web, which is, essentially, a directed network. Let's look at the importance of characters in the Game of Thrones network according to PageRank.","8b7f8851":"# betweenness centrality and PageRank","6a80370a":"COMMENTS : \n    \n    Check these additional website : https:\/\/github.com\/harrisonpim\/bookworm\n    https:\/\/networkofthrones.wordpress.com\/the-novels\/\n    https:\/\/networkofthrones.wordpress.com\/","f50ba9b2":"Let's start with book 1","c9d03431":"# Conclusion\n\nWe see a high correlation between these three measures for our character co-occurrence network.\n\nSo we've been looking at different ways to find the important characters in the Game of Thrones co-occurrence network. According to degree centrality, Eddard Stark is the most important character initially in the books. But who is\/are the most important character(s) in the fifth book according to these three measures?","b7a6cc22":"# Network & node : which character is the most important ?","35fdd1da":"> We are going to use : https:\/\/networkx.org\/documentation\/networkx-2.0\/reference\/classes\/index.html\n        \n> NetworkX provides data structures and methods for storing graphs.\n\n> All NetworkX graph classes allow (hashable) Python objects as nodes and any Python object can be assigned as an edge attribute.","a87d0f0d":"**conclusions** We can see that the importance of Eddard Stark dies off as the book series progresses. With Jon Snow, there is a drop in the fourth book but a sudden rise in the fifth book.\n"}}