{"cell_type":{"b4a85f4f":"code","13333e30":"code","3d6d24c8":"code","5879a255":"code","822254f8":"code","26a13dfb":"code","6261f915":"code","5056c8d3":"code","2f31ce97":"code","c28fac68":"code","8f3fece9":"code","f02f54e2":"code","bd197732":"code","5869f2d8":"code","43a0fde1":"code","d35e4039":"code","bd2211f9":"markdown","d248ef71":"markdown","7d991561":"markdown","c27db20f":"markdown","9a32abcb":"markdown","fbb4685a":"markdown","d14f9e1f":"markdown"},"source":{"b4a85f4f":"import numpy as np\nimport pandas as pd\nfrom sklearn import datasets\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler","13333e30":"cancer = datasets.load_breast_cancer()\ncancer.keys()","3d6d24c8":"print(cancer.data.shape)\nprint(np.unique(cancer.target, return_counts=True))","5879a255":"sns.countplot(cancer.target)","822254f8":"df_cancer = pd.DataFrame(cancer['data'], columns=cancer['feature_names'])\ndf_cancer['target'] = cancer['target']\ndf_cancer.head()","26a13dfb":"plt.figure(figsize=(15,5))\nplt.boxplot(cancer.data)\nplt.xlabel('feature')\nplt.ylabel('value')\nplt.show()","6261f915":"cancer.feature_names[[3,23]]","5056c8d3":"scaler = StandardScaler()\nX = cancer.data\nscaled_X = scaler.fit_transform(X) ","2f31ce97":"plt.figure(figsize=(15,5))\nplt.boxplot(scaled_X)\nplt.xlabel('feature')\nplt.ylabel('value')\nplt.show()","c28fac68":"for i in range(len(scaled_X)):\n    scaled_X[i][scaled_X[i]>6] = scaled_X[i].mean()","8f3fece9":"plt.figure(figsize=(15,5))\nplt.boxplot(scaled_X)\nplt.xlabel('feature')\nplt.ylabel('value')\nplt.show()","f02f54e2":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Sequential\nfrom sklearn.model_selection import train_test_split","bd197732":"# \ub370\uc774\ud130\uc14b \uc0dd\uc131\nx_train, x_test, y_train, y_test = train_test_split(scaled_X, cancer.target, test_size=0.3)\n\n# \ubaa8\ub378 \uad6c\uc131\nmodel = keras.Sequential([\n                          layers.Input(shape=x_train.shape[1]),\n                          layers.Dense(8, activation='relu'),\n                          layers.Dense(1, activation='sigmoid')\n])\n# \ubaa8\ub378 \ud559\uc2b5 \uacfc\uc815 \uc124\uc815\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","5869f2d8":"hist = model.fit(x_train, y_train, epochs=50, validation_split=0.3)","43a0fde1":"model.evaluate(x_test, y_test)","d35e4039":"plt.plot(hist.history['loss'],'x--',label='loss')\nplt.plot(hist.history['val_loss'],'x--',label='val_loss')\nplt.plot(hist.history['val_accuracy'],'-',label='val_accuracy')\nplt.plot(hist.history['accuracy'],'-',label='accuracy')\nplt.legend()\nplt.show()","bd2211f9":"# sklearn dataset \ubd84\uc11d\ud558\uae30\n## < Breast Cancer >","d248ef71":"boxplot\uc73c\ub85c \ubd24\uc744 \ub54c mean area\uc640 worst area \ud2b9\uc131\uc758 \uac12 \ubd84\ud3ec\uac00 \ud070 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.","7d991561":"\uac12\uc774 \ub108\ubb34 \ud280\ub294 \uc774\uc0c1\uce58(Outlier)\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc784\uc758\ub85c value\uac00 6\uc774\uc0c1\uc778 \uac12\uc744 \ud3c9\uade0\uac12\uc73c\ub85c \ubcc0\uacbd\ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.","c27db20f":"# Tensorflow","9a32abcb":"# Data Scaling","fbb4685a":"target 0: maligent, target 1: benign","d14f9e1f":"data sample: 569, feature: 30"}}