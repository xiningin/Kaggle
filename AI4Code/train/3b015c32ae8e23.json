{"cell_type":{"eca316b5":"code","be954540":"code","f9c74f07":"code","e353f64c":"code","d63b7958":"code","3c0fcbb0":"code","939d88de":"code","c621cf22":"code","84daef04":"code","84c26bf8":"code","fbc1790a":"code","f1981974":"code","9b07fb0f":"code","c101da1c":"code","ee065548":"code","53411103":"code","01b8512f":"code","7ce74b24":"code","fbb39878":"code","75c79289":"code","2bb39a9a":"code","a8ac43d7":"code","6112dfdb":"markdown","f7f401c4":"markdown","48f8bb57":"markdown","708faae9":"markdown","de5ca0b6":"markdown","8f1b5f6f":"markdown","0bdc41cb":"markdown","e6bdbc6c":"markdown","f9674091":"markdown","516ad45a":"markdown","275853b3":"markdown"},"source":{"eca316b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport time\nfrom datetime import datetime\nimport os\n\n","be954540":"# read data\njunuary = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-01.csv')\nfebruary = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-02.csv')\nmarch = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-03.csv')\napril = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-04.csv')\nmay = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-05.csv')\njune = pd.read_csv('\/kaggle\/input\/tripdata\/green_tripdata_2018-06.csv')\n\nstock_market = pd.read_csv('\/kaggle\/input\/tripdata\/stock_maket.csv')","f9c74f07":"# \u67e5\u770b\u6570\u636e\u7ef4\u5ea6\nprint(junuary.shape)\nprint(february.shape)\nprint(march.shape)\nprint(april.shape)\nprint(may.shape)\nprint(june.shape)\nprint(stock_market.shape)","e353f64c":"# \u5c06lpep_pickup_datetime\u3001lpep_dropoff_datetime\u5206\u4e3a \u65f6\u3001\u65e5\uff0c\u661f\u671f\njunuary['lpep_pickup_datetime'] = pd.to_datetime(junuary['lpep_pickup_datetime'])\nfebruary['lpep_pickup_datetime'] = pd.to_datetime(february['lpep_pickup_datetime'])\nmarch['lpep_pickup_datetime'] = pd.to_datetime(march['lpep_pickup_datetime'])\napril['lpep_pickup_datetime'] = pd.to_datetime(april['lpep_pickup_datetime'])\nmay['lpep_pickup_datetime'] = pd.to_datetime(may['lpep_pickup_datetime'])\njune['lpep_pickup_datetime'] = pd.to_datetime(june['lpep_pickup_datetime'])\n\njunuary['lpep_dropoff_datetime'] = pd.to_datetime(junuary['lpep_dropoff_datetime'])\nfebruary['lpep_dropoff_datetime'] = pd.to_datetime(february['lpep_dropoff_datetime'])\nmarch['lpep_dropoff_datetime'] = pd.to_datetime(march['lpep_dropoff_datetime'])\napril['lpep_dropoff_datetime'] = pd.to_datetime(april['lpep_dropoff_datetime'])\nmay['lpep_dropoff_datetime'] = pd.to_datetime(may['lpep_dropoff_datetime'])\njune['lpep_dropoff_datetime'] = pd.to_datetime(june['lpep_dropoff_datetime'])\n\njunuary['hour1'] = junuary['lpep_pickup_datetime'].dt.hour\njunuary['hour2'] = junuary['lpep_dropoff_datetime'].dt.hour\nfebruary['hour1'] = february['lpep_pickup_datetime'].dt.hour\nfebruary['hour2'] = february['lpep_dropoff_datetime'].dt.hour\nmarch['hour1'] = march['lpep_pickup_datetime'].dt.hour\nmarch['hour2'] = march['lpep_dropoff_datetime'].dt.hour\napril['hour1'] = april['lpep_pickup_datetime'].dt.hour\napril['hour2'] = april['lpep_dropoff_datetime'].dt.hour\nmay['hour1'] = may['lpep_pickup_datetime'].dt.hour\nmay['hour2'] = may['lpep_dropoff_datetime'].dt.hour\njune['hour1'] = june['lpep_pickup_datetime'].dt.hour\njune['hour2'] = june['lpep_dropoff_datetime'].dt.hour\n\njunuary['day1'] = junuary['lpep_pickup_datetime'].dt.day\njunuary['day2'] = junuary['lpep_dropoff_datetime'].dt.day\nfebruary['day1'] = february['lpep_pickup_datetime'].dt.day\nfebruary['day2'] = february['lpep_dropoff_datetime'].dt.day\nmarch['day1'] = march['lpep_pickup_datetime'].dt.day\nmarch['day2'] = march['lpep_dropoff_datetime'].dt.day\napril['day1'] = april['lpep_pickup_datetime'].dt.day\napril['day2'] = april['lpep_dropoff_datetime'].dt.day\nmay['day1'] = may['lpep_pickup_datetime'].dt.day\nmay['day2'] = may['lpep_dropoff_datetime'].dt.day\njune['day1'] = june['lpep_pickup_datetime'].dt.day\njune['day2'] = june['lpep_dropoff_datetime'].dt.day\n\njunuary['month'] = junuary['lpep_pickup_datetime'].dt.month\nfebruary['month'] = february['lpep_pickup_datetime'].dt.month\nmarch['month'] = march['lpep_pickup_datetime'].dt.month\napril['month'] = april['lpep_pickup_datetime'].dt.month\nmay['month'] = may['lpep_pickup_datetime'].dt.month\njune['month'] = june['lpep_pickup_datetime'].dt.month\n\n","d63b7958":"# \u5408\u5e761~6\u6708\u6570\u636e\nall_data = pd.concat([junuary, february, march, april, may, june], axis=0)\nall_data.shape","3c0fcbb0":"# \u5c06lpep_pickup_datetime\u3001lpep_dropoff_datetime\u5206 \u65e5\u671f\u3001 \u65f6\u523b,\u65f6\u523b\u683c\u5f0f\u5316\u540e\u4ec5\u4fdd\u7559 \u65f6\uff1a\u5206\nall_data['pickup_date'] = pd.to_datetime(all_data['lpep_pickup_datetime'].dt.normalize())\nall_data['dropoff_date'] = pd.to_datetime(all_data['lpep_dropoff_datetime'].dt.normalize())\n\nall_data['pickup_time'] = all_data['lpep_pickup_datetime'].dt.time\nall_data['pickup_time'] = all_data['pickup_time'].apply(lambda x:x.strftime('%H:%M'))\nall_data['dropoff_time'] = all_data['lpep_pickup_datetime'].dt.time\nall_data['dropoff_time'] = all_data['dropoff_time'].apply(lambda x:x.strftime('%H:%M'))\n","939d88de":"stock_market['Date'] = pd.to_datetime(stock_market['Date'])\nstock_market.head(5)","c621cf22":"# \u5c06\u51fa\u79df\u8f66\u6570\u636e\u4e0e\u80a1\u5e02\u6570\u636e\u5408\u5e76\nall_data = all_data.merge(stock_market, left_on='pickup_date', right_on='Date',how='left')","84daef04":"all_data.loc[all_data.day1==3]","84c26bf8":"# 1~6\u6708\u4e2d\uff0c\u6bcf\u5206\u949f\u7684\u4e58\u5ba2\u603b\u6570\nfig, axes = plt.subplots(3,2,figsize=(17, 10), dpi=100)\nfor i in range(0,6):\n    d = all_data[all_data['lpep_pickup_datetime'].dt.month == i+1][['pickup_time', 'passenger_count']].set_index('pickup_time')\n    d = d.groupby('pickup_time').sum()\n    d.plot(ax=axes[i%3][i\/\/3], \n    alpha=0.8, color='tab:blue').set_ylabel('passenger_count', fontsize=13);\n    \n    axes[i%3][i\/\/3].legend();\n    axes[i%3][i\/\/3].set_title('month {}'.format(i+1), fontsize=13);\n    plt.subplots_adjust(hspace=0.45)","fbc1790a":"# 1~6\u6708\uff0c\u6bcf\u65e5\u5c0f\u8d39\u5747\u503c\u53d8\u5316\nfig, axes = plt.subplots(3,2,figsize=(15, 13), dpi=100)\nfor i in range(0,6):\n    d = all_data[all_data['lpep_pickup_datetime'].dt.month == i+1][['pickup_date', 'tip_amount']]\n    dm = d.groupby(['pickup_date']).mean()[3:-1]\n    dm.plot(ax=axes[i%3][i\/\/3]).set_ylabel('tip mean', fontsize=13);\n    \n    axes[i%3][i\/\/3].set_title('month {}'.format(i+1), fontsize=13);","f1981974":"# 1~6\u6708\uff0c\u6bcf\u6708\u5c0f\u8d39\u7684\u76f8\u5173\u7edf\u8ba1\u91cf\nmm=[]\nm5=[]\nm7=[]\nfor i in range(1,7):\n    mm.append(all_data.loc[(all_data.month==i) & (all_data.tip_amount>0),'tip_amount'].describe()['mean'])\n    m5.append(all_data.loc[(all_data.month==i) & (all_data.tip_amount>0),'tip_amount'].describe()['50%'])\n    m7.append(all_data.loc[(all_data.month==i) & (all_data.tip_amount>0),'tip_amount'].describe()['75%'])\n\nd = {'mean':mm,'50%':m5,'75%':m7}\nd= pd.DataFrame(d)\nfig,ax1 = plt.subplots(figsize=(17, 6))\nd.plot(kind='bar', ax=ax1)\n\nplt.xlabel('month')\nplt.ylabel('tip_amount')","9b07fb0f":"# \u6bcf\u5206\u949f\u4e58\u5ba2\u6570 \u753b\u51fa\u6298\u7ebf\u56fe\ngroup1 = all_data['passenger_count'].groupby(all_data['pickup_time']).sum()\nplt.figure(figsize=(17,7))\ngroup1.plot()\nplt.title('passengers Amount per min')\nplt.xlabel('pickup time')\nplt.ylabel('passenger_count')","c101da1c":"# \u6bcf\u5c0f\u65f6\u4e58\u5ba2\u6570\uff0c\u753b\u51fa\u6761\u5f62\u56fe\ngroup2 = all_data['passenger_count'].groupby(all_data['hour1']).sum()\nplt.figure(figsize=(15,7))\ngroup2.plot(kind='bar')\nplt.title('passengers Amount per hour')\nplt.xlabel('pickup hour')\nplt.ylabel('passenger_count')","ee065548":"# \u4ee5\u9ad8\u5cf0\u65f6\u6bb517\u65f6\u523019\u65f6\u7684\u5404\u4e2a\u5730\u533a\u7684\u4e58\u5ba2\u91cf\u753b\u6761\u5f62\u56fe\na = all_data.loc[(all_data.hour1==17) | (all_data.hour1==18) | (all_data.hour1==19)]\ngroup3 = a['passenger_count'].groupby(a['PULocationID']).sum()[:100]\nplt.figure(figsize=(30,7))\ngroup3.plot(kind='bar')\nplt.title('passengers Amount at 5pm to 7pm')\nplt.xticks(size=8)\nplt.xlabel('pick up location ID')\nplt.ylabel('passenger_count')","53411103":"# \u4ee5\u9ad8\u5cf0\u65f6\u6bb517\u65f6\u523019\u65f6\u7684\u4e58\u5ba2\u91cf\u753b\u6761\u5f62\u56fe\uff0c\u53d6\u4e58\u5ba2\u91cf\u6700\u591a\u7684\u524d\u5341\u4e2a\u5730\u70b9ID\na = all_data.loc[(all_data.hour1==17) | (all_data.hour1==18) | (all_data.hour1==19)]\ngroup3 = a['passenger_count'].groupby(a['PULocationID']).sum().sort_values(ascending=False)[:10]\nplt.figure(figsize=(15,7))\ngroup3.plot(kind='bar')\nplt.title('passengers Amount at 5pm to 7pm')\nplt.xlabel('pick up location ID')\nplt.ylabel('passenger_count')","01b8512f":"a = all_data.loc[all_data.Close.notnull()]\n# \u6bcf\u5929\u7684\u4e58\u5ba2\u603b\u91cf\ngroup4 = a['passenger_count'].groupby(a['pickup_date']).sum()\ngroup5 = a['Close'].groupby(a['pickup_date']).mean()\nopenprice = a[['Open']].groupby(a['pickup_date']).mean()","7ce74b24":"# \u6536\u76d8\u4ef7\u4e0e\u5f53\u65e5\u4e58\u5ba2\u603b\u6570\u7684\u8d8b\u52bf\u5173\u7cfb\nfig, ax1 = plt.subplots(figsize=(17,7))\nax2 = ax1.twinx()\nax1.plot(group4.index, group4.values, c='blue',linestyle='--',label='passenger_count')\nax1.legend(loc=2)\n\nax2.plot(group5.index, group5.values, c='red',label='close_price')\nax2.legend(loc=1)\nax1.tick_params(axis='y', colors='blue')\nax2.tick_params(axis='y', colors='red')\nax1.set_ylabel('passenger_count',size=13)\nax2.set_ylabel('Close_Price',size=13)\nplt.title('close price and passenger amount')\n\nplt.show()","fbb39878":"b = a.loc[ (a.hour1==17) | (a.hour1==18) | (a.hour1==19)]","75c79289":"a = all_data.loc[all_data.Close.notnull()]\na .drop(['VendorID', 'store_and_fwd_flag', 'trip_distance', 'fare_amount', 'improvement_surcharge',\n         'payment_type','tolls_amount','mta_tax', 'Volume','ehail_fee','trip_type','total_amount','RatecodeID'],\n        axis=1,inplace=True)\n","2bb39a9a":"day_tip_sum = a[['tip_amount']].groupby(a['pickup_date']).sum()\nday_tip_mean = a[['tip_amount']].groupby(a['pickup_date']).mean()\nday_tip_max = a[['tip_amount']].groupby(a['pickup_date']).max()\ntip_count = all_data.loc[(all_data['Open'].notnull()==True) &(all_data['lpep_pickup_datetime'].dt.year == 2018)  & (all_data.tip_amount>0)][['pickup_date']]\ntip_count = pd.value_counts(tip_count.pickup_date)\ntip_count = tip_count.reset_index()\ntip_count = tip_count.sort_values(by='index')","a8ac43d7":"# \u6bcf\u65e5\u6240\u6709\u5355\u5b50\u5c0f\u8d39\u5747\u503c \u4e0e \u6bcf\u65e5\u5f00\u76d8\u4ef7\u7684\u8d8b\u52bf\u5173\u7cfb\nfig, ax = plt.subplots(3,2,figsize=(22,10))\nax2 = ax[0][0].twinx()\nax[0][0].plot(day_tip_mean.index, day_tip_mean.values, c='blue',linestyle='--',label='tip_mean')\nax[0][0].legend(loc=2)\n\nax2.plot(openprice.index,openprice.values, c='red',label='open_price')\nax2.legend(loc=1)\nax[0][0].tick_params(axis='y', colors='blue')\nax2.tick_params(axis='y', colors='red')\nax[0][0].set_ylabel('tip_mean',size=13)\nax2.set_ylabel('Open_Price',size=13)\nplt.title('open price and tips mean')\n\n\n# \u6bcf\u65e5\u6240\u6709\u5355\u5b50\u5c0f\u8d39\u603b\u6570 \u4e0e \u6bcf\u65e5\u5f00\u76d8\u4ef7\u7684\u8d8b\u52bf\u5173\u7cfb\nax2 = ax[0][1].twinx()\nax[0][1].plot(day_tip_sum.index, day_tip_sum.values, c='blue',linestyle='--',label='tip_sum')\nax[0][1].legend(loc=2)\n\nax2.plot(openprice.index,openprice.values, c='red',label='open_price')\nax2.legend(loc=1)\nax[0][1].tick_params(axis='y', colors='blue')\nax2.tick_params(axis='y', colors='red')\nax[0][1].set_ylabel('tip_sum',size=13)\nax2.set_ylabel('Open_Price',size=13)\nplt.title('open price and tips sum')\n\n\n# \u6bcf\u65e5\u6700\u9ad8\u5c0f\u8d39 \u4e0e \u6bcf\u65e5\u5f00\u76d8\u4ef7\u7684\u8d8b\u52bf\u5173\u7cfb\nax2 = ax[1][0].twinx()\nax[1][0].plot(day_tip_max.index, day_tip_max.values, c='blue',linestyle='--',label='tip max')\nax[1][0].legend(loc=2)\n\nax2.plot(openprice.index,openprice.values,c='red',label='open_price')\nax2.legend(loc=1)\nax[1][0].tick_params(axis='y', colors='blue')\nax2.tick_params(axis='y', colors='red')\nax[1][0].set_ylabel('tip_max',size=13)\nax2.set_ylabel('Open_Price',size=13)\nplt.title('open price and tips max')\n\n\n# \u53bb\u9664\u79bb\u7fa4\u70b9\uff0c\u7ed8\u52361~6\u6708\u5c0f\u8d39\u7bb1\u7ebf\u56fe\nsns.boxplot(x='month', y='tip_amount',data=all_data.loc[(all_data.month<7) & (all_data.tip_amount>0)& (all_data.tip_amount<5),['tip_amount','month']],ax=ax[1][1])\nax[1][1].legend(loc=2)\n\nax[1][1].tick_params(axis='y', colors='blue')\nax[1][1].set_ylabel('tip_mean',size=13)\nplt.title('open_price and tips mean')\n\n\n# \u4ee5\u90e8\u5206\u79bb\u7fa4\u70b9\u4e3a\u6570\u636e\uff0c\u7ed8\u52361~6\u6708\u5c0f\u8d39\u7bb1\u7ebf\u56fe\nsns.boxplot(x='month', y='tip_amount',data=all_data.loc[(all_data.month<7) & (all_data.tip_amount>50)& (all_data.tip_amount<400),['tip_amount','month']],ax=ax[2][0])\nax[2][0].legend(loc=2)\n\nax[2][0].tick_params(axis='y', colors='blue')\nax[2][0].set_ylabel('tip_mean',size=13)\nplt.title('open_price and tips mean')\n\n# \u6bcf\u65e5\u4e58\u5ba2\u4ed8\u5c0f\u8d39\u7684\u5355\u5b50\u6570\u76ee \u4e0e \u6bcf\u65e5\u5f00\u76d8\u4ef7\u7684\u8d8b\u52bf\u5173\u7cfb\nax[2][1].plot(tip_count['index'], tip_count['pickup_date'], c='blue',linestyle='--',label='tip_mean')\nax2 = ax[2][1].twinx()\nax2.plot(openprice.index,openprice.values, c='red',label='open_price')\n\nax2.legend(loc=1)\nax[2][1].tick_params(axis='y', colors='blue')\nax2.tick_params(axis='y', colors='red')\nax[2][1].set_ylabel('tip_count',size=13)\nax2.set_ylabel('Open_Price',size=13)\n","6112dfdb":"> \u53ef\u770b\u51fa1~6\u6708\u6bcf\u4e2a\u65f6\u6bb5\u4e2d\u4e58\u5ba2\u91cf\u7684\u5206\u5e03\u76f8\u4f3c\uff0c\u51e0\u4e4e\u4e0d\u5b58\u5728\u5f02\u5e38\u73b0\u8c61\uff0c\u53ef\u5728\u63a5\u4e0b\u6765\u7684\u5206\u6790\u4e2d\uff0c\u5c06\u516d\u4e2a\u6708\u7684\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u603b\u4f53\u8fdb\u884c\u5206\u6790","f7f401c4":"> \u867d\u7136\u6bcf\u5929\u4e58\u8f66\u5c0f\u8d39\u7684\u5206\u5e03\u6ce2\u52a8\u5927\uff0c\u4f46\u603b\u4f53\u6570\u636e\u7684\u76f8\u5173\u7edf\u8ba1\u91cf\u57fa\u672c\u7ef4\u6301\u5728\u4e00\u4e2a\u6781\u5c0f\u7684\u8303\u56f4\u5185\u6ce2\u52a8\u3002","48f8bb57":"> LocationID\u4e3a74\uff0c75\u7684\u5730\u70b9\u7684\u7b49\u5f85\u4e58\u5ba2\u6700\u591a","708faae9":"> \u4ece\u4e0a\u51e0\u56fe\u53ef\u770b\u51fa\uff0c\u5c0f\u8d39\u5747\u503c\u7684\u53d8\u5316\u8d8b\u52bf\u4e0e\u80a1\u4ef7\u7684\u6ce2\u52a8\u5728\u4e00\u4e9b\u5730\u65b9\u53ef\u770b\u51fa\u7aef\u502a\uff0c\u5728\u67d0\u4e9b\u65f6\u6bb5\u5f53\u80a1\u4ef7\u5904\u4e8e\u4e0a\u5347\u6216\u4e0b\u964d\u8d8b\u52bf\u65f6\uff0c\u5c0f\u8d39\u7684\u5747\u503c\u53d8\u5316\u4ea6\u662f\u5982\u6b64\uff0c\u4f46\u4ece\u7bb1\u7ebf\u56fe\u548c\u5176\u4f59\u6298\u7ebf\u56fe\u4e0a\u770b\uff0c\u5b8f\u89c2\u4e0a\u5c0f\u8d39\u5176\u4ed6\u76f8\u5173\u7684\u7edf\u8ba1\u91cf\uff0c\u53d8\u5316\u4e0d\u5927\u3002","de5ca0b6":"### 3. with respect to NY stock market, will the change in stock market price affect the trend of riding taxi","8f1b5f6f":"### \u6570\u636e\u63a2\u7d22","0bdc41cb":"> \u5728\u5148\u524d\u6570\u636e\u63a2\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u53ef\u53d1\u73b0\u6bcf\u4e2a\u6708\u642d\u4e58\u51fa\u79df\u8f66\u7684\u4e58\u5ba2\u91cf\u5206\u5e03\u89c4\u5f8b\u76f8\u4f3c\uff0c\u800c\u80a1\u4ef7\u5448\u65e0\u89c4\u5f8b\u6ce2\u52a8\u3002\u7531\u6b64\u63a8\u6d4b\uff0c\u80a1\u4ef7\u4e0e\u51fa\u79df\u8f66\u4e58\u5ba2\u91cf\u76f8\u5173\u4e0d\u5927\uff0c\u524d\u8005\u7684\u6ce2\u52a8\u4e0d\u5f71\u54cd\u540e\u8005","e6bdbc6c":"### 4. With respect to New York Stock Market , will passengers tend to pay tips to the driver ?","f9674091":"> \u4e0b\u5348\u4e94\u70b9\u5230\u4e03\u70b9\u4e4b\u95f4\u662f\u51fa\u79df\u8f66\u4e58\u5ba2\u6700\u591a\u7684\u65f6\u95f4\u6bb5","516ad45a":" ### 2. According to 1, which two places will have the most people wait for taxi duiring the peak hour","275853b3":"### 1. Which time slot will have the most people wait for taxi."}}