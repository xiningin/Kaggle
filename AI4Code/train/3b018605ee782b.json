{"cell_type":{"62d58d95":"code","1e0c7340":"code","10c414bc":"code","0aff03f9":"code","e94dfdd4":"code","9c84b871":"code","2f59d0e8":"code","62c19cd3":"code","72c3658f":"code","83fa57ae":"code","b48d5889":"code","7877811c":"code","234d545f":"code","f33c425c":"code","099ebb36":"code","c8ba0ca5":"code","566f7f4d":"code","cbefd95c":"code","599b2160":"code","89d73280":"code","11b90e42":"code","c3b9a961":"code","397c4b84":"code","95473867":"code","a47f0b39":"code","6a02afc2":"code","8444335b":"code","31d24d58":"code","d4baaf43":"markdown","dd923cea":"markdown","a6a1d9de":"markdown","8172960c":"markdown","00026f0f":"markdown"},"source":{"62d58d95":"# importing required libraries \n\nimport pandas as pd\nimport numpy as np \n\ndata = pd.read_csv('\/kaggle\/input\/forbes-billionaires-of-2021\/Billionaire.csv')\ndata.head()","1e0c7340":"data['NetWorth']= data['NetWorth'].map(lambda x:x.replace('$',''))\ndata['NetWorth_in_B']= data['NetWorth'].map(lambda x:x.replace('B',''))\ndel data['NetWorth']\ndata['NetWorth_in_B'] = data['NetWorth_in_B'].astype(float)\ndata['NetWorth_in_B'][:10]","10c414bc":"data.head(10)","0aff03f9":"# let's look inside the data \ndata.info()","e94dfdd4":"data.describe(include=\"object\")","9c84b871":"print('Shape of the data', data.shape)\nprint('Missing values present\\n\\n', data.isna().sum())","2f59d0e8":"import seaborn as sns \nimport matplotlib.pyplot as plt \nfig, ax = plt.subplots(1, 1, figsize=(20, 8))\ng = sns.barplot(x=data['Name'][:10], y=data['NetWorth_in_B'][:10], ax=ax)\nplt.title('Top Ten billionaires', size=20)\n\n\nplt.show()","62c19cd3":"country_per_b = pd.DataFrame(data['Country'].unique())","72c3658f":"# creating fucntion to sum the amount and count bill \n# these task were easily done by groupby .. but I wanted to understand it from scratch so tried this approach \ndef count_amount(country):\n    return data[data['Country']==country]['NetWorth_in_B'].sum()\ndef count_bill(country):\n    return data[data['Country']==country]['NetWorth_in_B'].count()","83fa57ae":"#creating new columns and deleting to reduce the size\ncountry_per_b['Worth_of_Billionair'] = country_per_b[0].apply(count_amount)\ncountry_per_b['Number_Billionair'] = country_per_b[0].apply(count_bill)\ncountry_per_b['Country'] = country_per_b[0]\ndel country_per_b[0]","b48d5889":"# print the glimpse of the country data \ncountry_per_b.head()","7877811c":"plt.subplots(1, 1, figsize=(18, 8))\ndata['Source'].value_counts()[:40].plot(kind='bar')\nplt.xlabel('Sources')\nplt.ylabel('People who are billionaire')\nplt.title('TOP 40 Sources to get billionaire')\nplt.show()","234d545f":"import plotly as p \nimport plotly.graph_objects as go \nimport plotly.express as px\np.offline.init_notebook_mode (connected = True)\n\ndef building_pie_chart(df):\n    data = df['Country'].value_counts()[:10]\n    fig = go.Figure(data = [go.Pie(values=data, labels=data.index)])\n    fig.update_layout(template = 'plotly_dark', title_text = \"Country\")\n    fig.show()","f33c425c":"building_pie_chart(data)","099ebb36":"# sorting the country Data Frame \ncountry_per_b = country_per_b.sort_values('Worth_of_Billionair', ascending=False) ","c8ba0ca5":"fig, ax = plt.subplots(1, 2, figsize=(20, 8))\nsns.barplot(data=country_per_b[:10], x='Country', y='Worth_of_Billionair', ax=ax[0])\n\nsns.barplot(data=country_per_b[:10], x='Country', y='Number_Billionair', ax=ax[1])\n\n\nplt.show()\n","566f7f4d":"# let's check the owners which owns more than one company\ndata_more_than_one_company = data[data['Source'].str.contains(\",\") | data['Source'].str.contains('diver')]","cbefd95c":"data_more_than_one_company.head()","599b2160":"# word cloud for Source .. to see what most of them are doing \n\nSource = \" \".join(data['Source'])\n","89d73280":"\n%matplotlib inline\n# Define a function to plot word cloud\ndef plot_cloud(wordcloud):\n    # Set figure size\n    plt.figure(figsize=(40, 30))\n    # Display image\n    plt.imshow(wordcloud) \n    # No axis details\n    plt.axis(\"off\");","11b90e42":"# Import package\nfrom wordcloud import WordCloud, STOPWORDS\n# Generate word cloud\nwordcloud = WordCloud(width = 3000, height = 2000, random_state=1, background_color='black', colormap='Pastel1', collocations=False, stopwords = STOPWORDS).generate(Source)\n# Plot\nplot_cloud(wordcloud)","c3b9a961":"# What are indians doing .. let see\n# I am from India ;p\n\nindians = data[data['Country']=='India']\nindians.head()","397c4b84":"Indian_source = \" \".join(indians['Source'])","95473867":"wordcloud = WordCloud(width = 3000, height = 2000, random_state=1, background_color='black', colormap='Pastel1', collocations=False, stopwords = STOPWORDS).generate(Indian_source)\n# Plot\nplot_cloud(wordcloud)","a47f0b39":"import geoplot as gplt\nimport geopandas as gpd\nimport geoplot.crs as gcrs\nimport imageio\n\n","6a02afc2":"!pip install country-converter\n\nimport country_converter as coco\ndef name_isalpha(country):\n    country = coco.convert(names=country, to='ISO3')\n    return country\n\n\ncountry_per_b['new_name'] = country_per_b['Country'].apply(name_isalpha)","8444335b":"country_per_b.head()","31d24d58":"import plotly.express as px\nimport numpy as np\n\nnp.random.seed(12)\n\n\nfig = px.choropleth(country_per_b, locations=\"new_name\",\n                    color=\"Number_Billionair\", \n                    hover_name=\"Country\", # column to add to hover information\n                    color_continuous_scale=px.colors.sequential.Plasma)\n\nfig.show()","d4baaf43":"## TOP 10 Billionaires ","dd923cea":"## Preprocessing \n- changing the Networth column to numeric \n- changes helps to see it better. ","a6a1d9de":"# Let's Get Rich \nI have created this notebook from the forbes dataset for billionaires. \nI tried to understand the data & to explore the data. As I could. \n\n### About data :\nThis is curated the list of \ud83d\ude04Billionaires of the world in the year 2021\ud83d\udca5 published by Forbes in their 35th Annual World's Billionaires List.\n\nCreated by : @roysouravcu : [Profile](https:\/\/www.kaggle.com\/roysouravcu)\n\nThe Dataset contains \n- \"Name of the each Billionaires\"\n- \"Country: They are based on!\" \n- \"Source of their Income\/ Company Name\" \n- \"Their net worth that makes them richer than God\"  \n- \"Their global position in terms of their net worth\".\n\n## In this notebook I tried to visualize the data and tried to find some interesting things. \n## DO UPVOTE \ud83e\udd7a\ud83e\udd7a\ud83e\udd7a\ud83e\udd7a\ud83e\udd7a\ud83e\udd7a\ud83e\udd7a ","8172960c":"### New DataFrame for Country\n\n- since their are more than one billionaire per Country \n- I tried to analyze that to find better & interesting insights ","00026f0f":"# Conclusion(cheatsheet)\n- Dataset has 2755 entries from different country. \n- U.S.A is dominating in the dataset \n- Most of the Billionaire has more than one source of income (you can use it as \"mantra\" to be billionaire to \n- \"REAL - ESTATE\" is dominating the Source of income which is not surprising ;P\n- Cummulative Worth of billionaire is leadning by U.S.A only.\n- But if we take top 10 billionaire most(or all) of them has source of income as software companies(Tesla is Software too?In my opinion it is 40% ).\n- China is also leading after USA,  India & Germany also contributing "}}