{"cell_type":{"5fceb9af":"code","d10954e3":"code","a989d33f":"code","f605a902":"code","9d3adc93":"code","ba3a41c1":"code","19ab68a0":"code","fc9db6c9":"code","e8141d74":"code","d22cb364":"code","b757082c":"code","1e06381e":"code","57b5f665":"code","3d6c166d":"code","c35612e4":"code","fc401128":"code","367ac910":"code","78024a0f":"code","792d682a":"markdown","765041d4":"markdown","b9ed9514":"markdown","625bc6e8":"markdown","8a90163c":"markdown","016b59e8":"markdown","3cd6ce86":"markdown","96a391e5":"markdown","4118f545":"markdown","7a93e3ba":"markdown"},"source":{"5fceb9af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d10954e3":"!pip install stable-baselines3[extra] pyvirtualdisplay gym[atari] pyglet \n!apt-get install python-opengl -y\n!pip install atari-py\n!apt-get install unrar","a989d33f":"!wget http:\/\/www.atarimania.com\/roms\/Roms.rar \n!unrar x Roms.rar \n!unzip ROMS.zip\n!python -m atari_py.import_roms ROMS","f605a902":"import gym\nfrom stable_baselines3 import PPO\nfrom stable_baselines3.common.vec_env import VecFrameStack\nfrom stable_baselines3.common.evaluation import evaluate_policy\nfrom stable_baselines3.common.env_util import make_atari_env\nfrom stable_baselines3.common.callbacks import EvalCallback\nimport os","9d3adc93":"from pyvirtualdisplay import Display\ndisplay = Display(visible=0, size=(1024, 768))\ndisplay.start()\n\n\nfrom matplotlib import pyplot as plt, animation\n%matplotlib inline\nfrom IPython import display\n\ndef create_anim(frames, dpi, fps):\n    plt.figure(figsize=(frames[0].shape[1] \/ dpi, frames[0].shape[0] \/ dpi), dpi=dpi)\n    patch = plt.imshow(frames[0])\n    def setup():\n        plt.axis('off')\n    def animate(i):\n        patch.set_data(frames[i])\n    anim = animation.FuncAnimation(plt.gcf(), animate, init_func=setup, frames=len(frames), interval=fps)\n    return anim\n\ndef display_anim(frames, dpi=72, fps=60):\n    anim = create_anim(frames, dpi, fps)\n    return anim.to_jshtml()\n\ndef save_anim(frames, filename, dpi=72, fps=60):\n    anim = create_anim(frames, dpi, fps)\n    anim.save(filename)\n\n\nclass trigger:\n    def __init__(self):\n        self._trigger = True\n\n    def __call__(self, e):\n        return self._trigger\n\n    def set(self, t):\n        self._trigger = t\n","ba3a41c1":"environment_name = 'Breakout-v0'    \nenv = gym.make(environment_name)","19ab68a0":"frames = []\nepisodes = 5\nfor episode in range(1, episodes+1):\n    state = env.reset()\n    done = False\n    score = 0\n    \n    while not done:\n        frames.append(env.render(mode = \"rgb_array\"))\n        action = env.action_space.sample()\n        n_state, reward, done, info = env.step(action)\n        score += reward\n    print(\"Episode:{} Score:{}\".format(episode,score))\nenv.close()","fc9db6c9":"display.HTML(display_anim(frames))","e8141d74":"env = make_atari_env(environment_name, n_envs=4, seed=0) #make_atari_env helps in creating wrapped Atari env\nenv = VecFrameStack(env, n_stack=4)  #VecFrameStack allows to stack env together","d22cb364":"log_path = os.path.join('Training','Logs')\nmodel_path = os.path.join('Training','Saved Models','PPO_Best_Atari_Model')\nmodel = PPO('CnnPolicy', env, verbose=1, tensorboard_log=log_path)","b757082c":"model.learn(total_timesteps=1000000)","1e06381e":"atari_path = os.path.join('Training','Saved Models','PPO_Atari_Model')\nmodel.save(atari_path)","57b5f665":"env = make_atari_env(environment_name,n_envs=1,seed=0)\nenv = VecFrameStack(env , n_stack=4)","3d6c166d":"ev = evaluate_policy(model, env, n_eval_episodes=50, render=False)\nenv.close()\nev","c35612e4":"frames = []\nepisodes = 10\nfor episode in range(1, episodes+1):\n    obs = env.reset()  #state = env.reset()\n    done = False\n    score = 0\n    \n    while not done:\n        frames.append(env.render(mode = 'rgb_array'))\n        action , _ = model.predict(obs) #action = env.action_space.sample()\n        obs, reward, done, info = env.step(action) #n_state, reward, done, info = env.step(action)\n        score += reward\n    print(\"Episode:{} Score:{}\".format(episode,score))\nenv.close()","fc401128":"display.HTML(display_anim(frames))","367ac910":"filename = 'Breakout-v0.mp4'\nsave_anim(frames, filename=filename)","78024a0f":"display.Video(filename, width=300, height=400)","792d682a":"<div class = \"alert alert-info\">\n<h3><strong>\nImport ROMS\n<\/strong><\/h3>\n<\/div>","765041d4":"<div class = \"alert alert-info\">\n<h3><strong>\n2.Make Environment \n<\/strong><\/h3>\n<\/div>","b9ed9514":"<div class = \"alert alert-info\">\n<h3><strong>\n4.Save Model\n<\/strong><\/h3>\n<\/div>","625bc6e8":"<div class = \"alert alert-info\">\n<h3><strong>\n3.Train Model\n<\/strong><\/h3>\n<\/div>","8a90163c":"<div class = \"alert alert-info\">\n<h3><strong>\n5.Evaluate Model\n<\/strong><\/h3>\n<\/div>","016b59e8":"<div class = \"alert alert-info\">\n<h4><strong>\nSave Video\n<\/strong><\/h4>\n<\/div>","3cd6ce86":"<div class = \"alert alert-info\">\n<h3><strong>\n6.Test Model\n<\/strong><\/h3>\n<\/div>","96a391e5":"<div class = \"alert alert-info\">\n<h3><strong>\nAdding Visualization Function\n<\/strong><\/h3>\n<\/div>","4118f545":"<div class = \"alert alert-info\">\n<h3><strong>\n1.Import Dependencies\n<\/strong><\/h3>\n<\/div>\n   ","7a93e3ba":"<div class = \"alert alert-info\">\n<h1><strong>\nAtari Breakout RL Using GPU(importing ROMS) \n<\/strong><\/h1>\n<\/div>"}}