{"cell_type":{"a7f0bbcc":"code","fe0c0dd2":"code","f7ad012b":"code","5dcc6b41":"code","8ab47380":"code","1d804e75":"code","60c6ba50":"code","c55fbceb":"code","1aba4067":"code","4e9fdbdc":"code","be387d05":"code","b284cb8d":"code","2e23da43":"code","a1d37e8b":"code","48cb8969":"code","85e589af":"code","12ee2005":"code","1fd2ad7e":"code","7083cdc6":"code","9db6d5da":"code","3c5558e1":"code","0f3f21b2":"code","b4e6438d":"code","c4d9fe47":"markdown","9a153835":"markdown","c17ae996":"markdown","d717414f":"markdown","f261e762":"markdown","41cfe240":"markdown","0d11144f":"markdown","7eb302f7":"markdown","40fc65e9":"markdown","8269f891":"markdown","50e7b1d7":"markdown","40b44527":"markdown","50e51018":"markdown","b9102fed":"markdown"},"source":{"a7f0bbcc":"# Import des librairies d'analyse et de graphing\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nfrom numpy import nan\nfrom numpy import isnan\nfrom scipy.stats import norm\nfrom matplotlib import pyplot","fe0c0dd2":"dataset = pd.read_csv('..\/input\/household_power_consumption.txt',\n                   sep=';',                            # separateur = ;\n                   header=0,                           # ligne des header = 1\u00e8re ligne\n                   low_memory=False,                   # parsing complet\n                   infer_datetime_format=True,         # parsing des dates\n                   parse_dates={'datetime':[0,1]},     # les dates se parsent via les 2 premi\u00e8res colonnes\n                   index_col=['datetime'])             # l'index sera cr\u00e9e dans une colonne 'datetime'","f7ad012b":"# Visualisation de quelques \u00e9l\u00e9ments du dataset (qui est un DataFrame Panda)\ndataset.head()","5dcc6b41":"# Principales informations sur le Dataset:\n# Nous trouvons ici principalement le nombre de lignes et les dates des donn\u00e9es\n# Nous trouvons \u00e9galement le type des colonnes\ndataset.info()","8ab47380":"# Comptage des valeurs manquantes dans le dataset\ndataset.isnull().sum()","1d804e75":"# Visualisation de quelques manquants sur la colonne en question\ndataset.loc[dataset.Sub_metering_3.isnull()].head()","60c6ba50":"# Suppression des valeurs non num\u00e9riques et conversion des colonnes en float\ndataset = dataset.dropna()\ndataset = dataset.astype('float32')","c55fbceb":"# Groupes pour le resampling\ndaily_groups = dataset.resample('D')\nweekly_groups = dataset.resample('W')\n\n# Jeux de donn\u00e9es resampl\u00e9s\ndaily_data = daily_groups.sum()\nweekly_data = weekly_groups.sum()","1aba4067":"# Visualisation des donn\u00e9es \/ jour\ndaily_data.head()","4e9fdbdc":"# Plot de toutes les features\nax = daily_data.plot(title='Daily Household Power', figsize=(15,5))","be387d05":"# Filtre sur les dates des donn\u00e9es de la derni\u00e8re ann\u00e9e\nmask = (daily_data.index > '2010-01-01') & (daily_data.index < '2011-01-01')\nax = daily_data.loc[mask].plot(title='Daily Household Power 2010', figsize=(15,5))","b284cb8d":"# Suppression de la feature voltage pour observer les autres features\nddata = daily_data.drop(columns=['Voltage'])\nax= ddata.plot(title='Household Power \/ day', figsize=(15,5))","2e23da43":"# Suppression de la feature voltage pour observer les autres features weekly\nwkdata = weekly_data.drop(columns=['Voltage'])\nax= wkdata.plot(title='Household Power \/ week', figsize=(15,5))","a1d37e8b":"# Plotting de la puissance totale par jour\nax = daily_data.Global_active_power.plot(title='Global_active_power by days', figsize=(15,5))","48cb8969":"# Plotting de la puissance totale par semaine\nax= weekly_data.Global_active_power.plot(title='Global_active_power by weeks', figsize=(15,5))","85e589af":"# Observation de la distribution de la puissance par rapport \u00e0 une distribution Gaussienne\nax = sns.distplot(daily_data['Global_active_power'], fit=norm, bins=50, kde=True);","12ee2005":"# Analyse de la distribution Gaussienne\nax = stats.probplot(daily_data['Global_active_power'], plot=pyplot)","1fd2ad7e":"# Plotting de l'ensemble des features du jeu de donn\u00e9es deux par deux\nax = sns.pairplot(daily_data, height = 2.5)","7083cdc6":"# Plotting de deux variables qui semblent corr\u00e9l\u00e9es:\nax = daily_data.plot.scatter(x='Global_active_power', y='Global_intensity')","9db6d5da":"# Analyse plus d\u00e9taill\u00e9e entre les deux features pr\u00e9c\u00e9dentes\nax=sns.jointplot(daily_data['Global_active_power'], daily_data['Global_intensity'], kind='kde', \n                   joint_kws={'alpha':0.5}, \n                   xlim=(0, 3200), \n                   ylim=(0, 14000),\n                   height=6)","3c5558e1":"# Analyse entre deux autres features\nax=sns.jointplot(daily_data['Global_active_power'], daily_data['Sub_metering_3'], kind='kde', \n                   joint_kws={'alpha':0.5}, \n                   xlim=(0, 3000), \n                   ylim=(0, 18000),\n                   height=6)","0f3f21b2":"# Heatmap de corr\u00e9lation de type pearson\n# Les features corr\u00e9l\u00e9es auront des valeurs proche de 1\npearson = daily_data.corr(method='pearson')\nmask = np.zeros_like(pearson)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(pearson, vmax=1, vmin=0, square=True, cbar=True, annot=True, cmap=\"YlGnBu\", mask=mask);","b4e6438d":"# 3D plotting\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = pyplot.figure(figsize=(80, 80))\nax = fig.add_subplot(666, projection='3d')\nxs = daily_data['Global_active_power']\nys = daily_data['Global_intensity']\nzs = daily_data['Sub_metering_3']\nax.scatter(xs, ys, zs, s=100, alpha=0.2, edgecolors='w')\nax.set_xlabel('Active Power')\nax.set_ylabel('Intensity')\nax.set_zlabel('Sub_metering_3')\nax.set(zlim=(0, 20000))\npyplot.show()","c4d9fe47":"### Analyse Graphique du jeu de donn\u00e9es\nNous allons maintenant proc\u00e9der \u00e0 l'analyse des donn\u00e9es gr\u00e2ce aux librairies graphiques de python. Principalement matplotlib ici et seaborn qui propose aussi quelques visualisations de qualit\u00e9","9a153835":"Nous allons dans ce Notebook proc\u00e9der \u00e0 l'analyse d'un jeu de donn\u00e9es de plus de 2.5 Millions de lignes repr\u00e9sentant les consommations \u00e9l\u00e9ctriques selon diff\u00e9rents param\u00e8tres. Les donn\u00e9es sont fournies minute par minute.\n\nLes d\u00e9tails du jeu de donn\u00e9es sont ici : https:\/\/www.kaggle.com\/uciml\/electric-power-consumption-data-set\nLe format en entr\u00e9e est un fichier texte (format csv, s\u00e9parateur ;).\n\nDans un premier temps nous allons importer les donn\u00e9es via Panda et resampler pour avoir un suivi par jour.\nEnsuite nous allons analyser les diff\u00e9rentes features et essayer d'extraire des corr\u00e9lations de ces donn\u00e9es.\n\nNous ne traiterons pas dans cette partie de l'analyse par un r\u00e9seau de Neurones pour les pr\u00e9dictions.","c17ae996":"On constate que les donn\u00e9es sont d\u00e9sormais group\u00e9es et somm\u00e9es par jour dans le dataframe daily_data","d717414f":"Nouv observons que le Voltage est une feature qui semble \u00eatre constante hormis les trous, ce sont peut \u00eatre des pannes ou des maintenance.\n\nObservons de plus pr\u00e8s sur la derni\u00e8re ann\u00e9e, pour cel\u00e0 nous allons cr\u00e9er un masque (boolean) pour filtrer les donn\u00e9es, puis utiliser la fonction .loc() de Panda pour les affichier","f261e762":"On observe dans les graphiques ci-dessus que certaines features semblent corr\u00e9l\u00e9es.\n\nNous allons analyser de plus pr\u00e8s ce point dans ce paragraphe:","41cfe240":"#### Suppression des donn\u00e9es manquantes\nComme tout jeu de donn\u00e9es certaines donn\u00e9es seront manquantes. Nous allons le v\u00e9rifier et nous prenons le choix dans cet exemple de supprimer les lignes avec des donn\u00e9es non num\u00e9riques","0d11144f":"### Traitement des donn\u00e9es\n#### Lecture du fichier de donn\u00e9es\nNous proc\u00e9dons \u00e0 l'ouverture du fichier grace \u00e0 la m\u00e9thode de panda read_csv.\nNous allons r\u00e9cup\u00e9rer un Dataframe en retour, qui est un objet Panda permettant l'analyse.\nL'index du DataFrame contiendra les dates pars\u00e9es depuis les deux premi\u00e8res colonnes.","7eb302f7":"## Tutorial Analyse Statistique: Consommation Electrique avec Pandas - partie 1","40fc65e9":"#### Import des librairies n\u00e9cessaires","8269f891":"#### Heatmap de Corr\u00e9lation\nApr\u00e8s avoir observ\u00e9 des corr\u00e9lations possibles entre certaines features nous allons maintenant observer factuellement l'indice de corr\u00e9lation. Ceci peut se faire gr\u00e2ce \u00e0 une Heatmap","50e7b1d7":"On apercoit que la colonne contenant tous les manquants est 'Sub_metering_3'.\nNous allons donc faire une recherche dans le dataframe sur cette colonne.","40b44527":"### Analyse des Correlations entre les Features\nNous allons maintenant proc\u00e9der \u00e0 l'analyse des corr\u00e9lations entres les diff\u00e9rentes features du dataset.\nLa corr\u00e9lation entre des features signifie qu'il existe une fonction math\u00e9matique permettant de pr\u00e9duire l'une \u00e0 partir de l'autre.","50e51018":"### Resampling des Donn\u00e9es\nLes donn\u00e9es du Dataset sont fournies minute par minute. Nous allons les resampler par jour et semaine pour les visualiser. Panda dispose d'une m\u00e9thode tr\u00e9s pratique pour faire cette op\u00e9ration. ","b9102fed":"Nous voyons que certaines des features ont une valeur proche de 1.\n\nCi-dessous \u00e0 titre illustratif un premier exemple de visualisation en 3D:"}}