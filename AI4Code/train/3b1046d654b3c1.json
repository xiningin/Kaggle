{"cell_type":{"547c8a3c":"code","03fbc34f":"code","303def88":"code","23b70df9":"code","8ba6c60b":"code","bc2a4f7f":"code","c71f718f":"code","3f4f526a":"code","8cbedbaa":"code","f26dcdb2":"code","e8b3192c":"code","c8a69f53":"code","ac8027ad":"code","41f48010":"code","fe47a53b":"code","cbe17a68":"code","9f65eaf1":"code","3eae0ef0":"code","b47793c1":"code","89804e9b":"code","f3293456":"code","c896f6a7":"code","43a16b42":"code","9bbfc542":"code","dbbbb002":"code","c6364838":"code","7505e5f3":"code","e52a20b3":"code","29946ecf":"markdown","d0924b9d":"markdown","6f635ef0":"markdown","402e79ed":"markdown","8c63f517":"markdown"},"source":{"547c8a3c":"# Run this cell and select the kaggle.json file downloaded\n# from the Kaggle account settings page.\n\n#from google.colab import files\n#files.upload()  #Kaggle>account>API json file","03fbc34f":"# Let's make sure the kaggle.json file is present.\n#!ls -lha kaggle.json","303def88":"# Next, install the Kaggle API client.\n#!pip install -q kaggle","23b70df9":"# The Kaggle API client expects this file to be in ~\/.kaggle,\n# so move it there.\n\n#!mkdir -p ~\/.kaggle\n#!cp kaggle.json ~\/.kaggle\/\n\n# This permissions change avoids a warning on Kaggle tool startup.\n\n#!chmod 600 ~\/.kaggle\/kaggle.json","8ba6c60b":"# Copy the kaggle data set locally.\n#!kaggle datasets download -d datafiniti\/consumer-reviews-of-amazon-products","bc2a4f7f":"#! unzip -q -n 'consumer-reviews-of-amazon-products.zip'","c71f718f":"#!ls","3f4f526a":"#Importing necessary libraries\nimport pandas as pd\nfrom nltk.corpus import stopwords\nimport string\nimport matplotlib.pyplot as plt\nfrom nltk.tokenize import word_tokenize","8cbedbaa":"#Creating dataframe of amazon reviews from csv\ndf=pd.read_csv('..\/input\/consumer-reviews-of-amazon-products\/Datafiniti_Amazon_Consumer_Reviews_of_Amazon_Products_May19.csv')\ndf.columns","f26dcdb2":"#Shape of dataframe\ndf.shape","e8b3192c":"#Filtering Columns\ndf=df[['reviews.rating' , 'reviews.text' , 'reviews.title']]","c8a69f53":"df.head()","ac8027ad":"df.info()","41f48010":"#Checking for null values\nprint(df.isnull().sum())","fe47a53b":"#ploting graph on the basis of review ratings\ndf[\"reviews.rating\"].value_counts().sort_values().plot.bar()","cbe17a68":"#Rating value counts\ndf['reviews.rating'].value_counts()","9f65eaf1":"sentiment = {1: 0,\n            2: 0,\n            3: 1,\n            4: 2,\n            5: 2}\n\ndf[\"sentiment\"] = df[\"reviews.rating\"].map(sentiment)","3eae0ef0":"df.head()","b47793c1":"#sentiment value counts\ndf.sentiment.value_counts()","89804e9b":"#implementing bag of words using CountVectorizer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.tokenize import RegexpTokenizer\n#tokenizer to remove unwanted elements from out data like symbols and numbers\ntoken = RegexpTokenizer(r'[a-zA-Z0-9]+')\ncv = CountVectorizer(lowercase=True,stop_words='english',ngram_range = (1,1),tokenizer = token.tokenize)\ntext_counts= cv.fit_transform(df['reviews.text'])","f3293456":"print(text_counts[0])","c896f6a7":"#Split train and test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(text_counts, df['reviews.rating'], test_size=0.3, random_state=1)","43a16b42":"from sklearn.naive_bayes import MultinomialNB\n# Model Generation Using Multinomial Naive Bayes\nclf = MultinomialNB().fit(X_train, y_train)\npredicted= clf.predict(X_test)","9bbfc542":"#Import scikit-learn metrics module for accuracy calculation\nfrom sklearn import metrics\nprint(\"BoW MultinomialNB Accuracy:\",metrics.accuracy_score(y_test, predicted))","dbbbb002":"#Using TF-IDF approach\nfrom sklearn.feature_extraction.text import TfidfVectorizer\ntf=TfidfVectorizer()\ntext_tf= tf.fit_transform(df['reviews.text'])","c6364838":"#Split train and test set\nX_train, X_test, y_train, y_test = train_test_split(text_tf, df['reviews.rating'], test_size=0.3, random_state=1)","7505e5f3":"#Again Generating model Using Multinomial Naive Bayes\nclf = MultinomialNB().fit(X_train, y_train)\npredicted= clf.predict(X_test)\nprint(\"TF-IDF MultinomialNB Accuracy:\",metrics.accuracy_score(y_test, predicted))","e52a20b3":"# Random Forests\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier().fit(X_train, y_train)\npredicted= classifier.predict(X_test)\nprint(\"Random Forests Accuracy:\",metrics.accuracy_score(y_test, predicted))","29946ecf":"## If you are using notebook other then Kaggle (i.e. Jupyter or Colab) kindly execute the above code to import data to your notebook.","d0924b9d":"## Inspection of Data","6f635ef0":"### Above graph shows maximum reviews are positive.","402e79ed":"## Getting data from kaggle","8c63f517":"**Hence Random Forests gives Accuracy: 84.6, which is a good score**"}}