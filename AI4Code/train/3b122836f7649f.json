{"cell_type":{"79f19ddc":"code","e9702af1":"code","315c7f28":"code","41f0b226":"code","41bd9557":"code","80b1ca4f":"code","0b91e71f":"code","b9c4e808":"code","46fb2a2c":"code","ec4e761b":"code","04e74ce4":"markdown"},"source":{"79f19ddc":"import numpy as np\nimport pandas as pd\nimport os\nfrom sklearn import preprocessing\nfrom catboost import CatBoostClassifier, Pool\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import roc_auc_score, accuracy_score\n\n\ndef label_encoding(train: pd.DataFrame, test: pd.DataFrame, col_definition: dict):\n    \"\"\"\n    col_definition: encode_col\n    \"\"\"\n    n_train = len(train)\n    train = pd.concat([train, test], sort=False).reset_index(drop=True)\n    for f in col_definition['encode_col']:\n        try:\n            lbl = preprocessing.LabelEncoder()\n            train[f] = lbl.fit_transform(list(train[f].values))\n        except:\n            print(f)\n    test = train[n_train:].reset_index(drop=True)\n    train = train[:n_train]\n    return train, test","e9702af1":"train = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')\nsub = pd.read_csv('..\/input\/nlp-getting-started\/sample_submission.csv')","315c7f28":"train.head()","41f0b226":"target_col = 'target'\ntext_cols = ['text']\ncategorical_cols = ['keyword', 'location']","41bd9557":"train, test = label_encoding(train, test, col_definition={'encode_col': categorical_cols})","80b1ca4f":"X_train = train[text_cols + categorical_cols]\ny_train = train[target_col].values\nX_test = test[text_cols + categorical_cols]","0b91e71f":"y_preds = []\nmodels = []\noof_train = np.zeros((len(X_train),))\ncv = StratifiedKFold(n_splits=5, shuffle=True, random_state=0)\n\ncatboost_params = {\n    'iterations': 1000,\n    'learning_rate': 0.1,\n    'eval_metric': 'Logloss',\n    'task_type': 'GPU',\n    'early_stopping_rounds': 10,\n    'use_best_model': True,\n    'verbose': 100\n}\n\nfor fold_id, (train_index, valid_index) in enumerate(cv.split(X_train, y_train)):\n    X_tr = X_train.loc[train_index, :]\n    X_val = X_train.loc[valid_index, :]\n    y_tr = y_train[train_index]\n    y_val = y_train[valid_index]\n\n    train_pool = Pool(\n        X_tr, \n        y_tr, \n        cat_features=categorical_cols,\n        text_features=text_cols,\n        feature_names=list(X_tr)\n    )\n    valid_pool = Pool(\n        X_val, \n        y_val, \n        cat_features=categorical_cols,\n        text_features=text_cols,\n        feature_names=list(X_tr)\n    )\n\n    model = CatBoostClassifier(**catboost_params)\n    model.fit(train_pool, eval_set=valid_pool)\n\n    oof_train[valid_index] = model.predict_proba(X_val)[:, 1]\n\n    y_pred = model.predict_proba(X_test)[:, 1]\n    y_preds.append(y_pred)\n    models.append(model)","b9c4e808":"pd.DataFrame(oof_train).to_csv('oof_train_skfold.csv', index=False)\nprint(f'Local AUC: {roc_auc_score(y_train, oof_train)}')\nprint(f'Local ACC: {accuracy_score(y_train, (oof_train > 0.5).astype(int))}')","46fb2a2c":"y_sub = sum(y_preds) \/ len(y_preds)\ny_sub = (y_sub > 0.5).astype(int)\ny_sub[:10]","ec4e761b":"sub[target_col] = y_sub\nsub.to_csv('submission.csv', index=False)\nsub.head()","04e74ce4":"You can see the official tutorial [here](https:\/\/github.com\/catboost\/tutorials\/blob\/master\/text_features\/text_features_in_catboost.ipynb)."}}