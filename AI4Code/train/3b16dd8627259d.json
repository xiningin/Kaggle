{"cell_type":{"b9c421f8":"code","bfca434c":"code","4225533c":"code","43ba77ea":"code","50338144":"code","55efd14e":"code","cf75a28c":"code","efa10184":"code","f2b0b0b9":"code","5eb1b384":"code","fe400a3e":"code","195bade3":"markdown","39446cf3":"markdown","9d4c5a0e":"markdown","80165d5e":"markdown","dc442ef1":"markdown","af52e096":"markdown","a935aac7":"markdown","08d51f27":"markdown"},"source":{"b9c421f8":"#Set up environment\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nfrom sklearn.cluster import KMeans ","bfca434c":"data = pd.read_csv('..\/input\/simplify-banknote-authentication-dataset\/1fXr31hcEemkYxLyQ1aU1g_50fc36ee697c4b158fe26ade3ec3bc24_Banknote-authentication-dataset-.csv')\ndata.head(10)","4225533c":"#Normalise the data\n\ndata_normalised = (data - data.min())\/(data.max() - data.min())\ndata_normalised.head(10)","43ba77ea":"# Find the cluster centers\n\nx = data_normalised['V1']\ny = data_normalised['V2']\nxy = np.column_stack((x,y))\n\nclstr = KMeans(n_clusters=2).fit(xy)\ncenters = clstr.cluster_centers_\nprint(centers)","50338144":"# Assign each observation to its appropriate cluster\n\nclstr_fit = KMeans(n_clusters=2).fit_predict(xy)\ndata_normalised['cluster'] = clstr_fit\nprint(data_normalised.head())\nprint(clstr_fit)","55efd14e":"# Visualise the data\n\nplt.scatter(x, y, c = clstr_fit)\nplt.scatter(centers[:,0], centers[:,1], s = 400)","cf75a28c":"# Cluster centers and the number of observations in each cluster\n\nprint(centers)\ndata_normalised['cluster'].value_counts()","efa10184":"# Find the cluster centers\n\nx = data_normalised['V1']\ny = data_normalised['V2']\nxy = np.column_stack((x,y))\n\nclstr = KMeans(n_clusters=2).fit(xy)\ncenters = clstr.cluster_centers_\nprint(centers)\n\n# Assign each observation to its appropriate cluster\n\nclstr_fit = KMeans(n_clusters=2).fit_predict(xy)\ndata_normalised['cluster'] = clstr_fit\nprint(data_normalised.head())\nprint(clstr_fit)\n\n# Cluster centers and the number of observations in each cluster\n\nprint(centers)\ndata_normalised['cluster'].value_counts()","f2b0b0b9":"# Find the cluster centers\n\nx = data_normalised['V1']\ny = data_normalised['V2']\nxy = np.column_stack((x,y))\n\nclstr = KMeans(n_clusters=2).fit(xy)\ncenters = clstr.cluster_centers_\nprint(centers)\n\n# Assign each observation to its appropriate cluster\n\nclstr_fit = KMeans(n_clusters=2).fit_predict(xy)\ndata_normalised['cluster'] = clstr_fit\nprint(data_normalised.head())\nprint(clstr_fit)\n\n# Cluster centers and the number of observations in each cluster\n\nprint(centers)\ndata_normalised['cluster'].value_counts()","5eb1b384":"# Find the cluster centers\n\nx = data_normalised['V1']\ny = data_normalised['V2']\nxy = np.column_stack((x,y))\n\nclstr = KMeans(n_clusters=2).fit(xy)\ncenters = clstr.cluster_centers_\nprint(centers)\n\n# Assign each observation to its appropriate cluster\n\nclstr_fit = KMeans(n_clusters=2).fit_predict(xy)\ndata_normalised['cluster'] = clstr_fit\nprint(data_normalised.head())\nprint(clstr_fit)\n\n# Cluster centers and the number of observations in each cluster\n\nprint(centers)\ndata_normalised['cluster'].value_counts()","fe400a3e":"# Find the cluster centers\n\nx = data_normalised['V1']\ny = data_normalised['V2']\nxy = np.column_stack((x,y))\n\nclstr = KMeans(n_clusters=2).fit(xy)\ncenters = clstr.cluster_centers_\nprint(centers)\n\n# Assign each observation to its appropriate cluster\n\nclstr_fit = KMeans(n_clusters=2).fit_predict(xy)\ndata_normalised['cluster'] = clstr_fit\nprint(data_normalised.head())\nprint(clstr_fit)\n\n# Cluster centers and the number of observations in each cluster\n\nprint(centers)\ndata_normalised['cluster'].value_counts()","195bade3":"*The actual data sets contain 762 genuine notes and 610 forged notes*","39446cf3":"> ****As we can see, the cluster centers and the number of variables in each cluster were different in each run, which shows that the model is not stable as it should be.****","9d4c5a0e":"> **Identify forged banknotes is a huge problem for banks. Finest banks are working on introducing security features to banknotes, but forgeries are also explored in modern technology to recreate those features. Modern data science can help\n> banks to identify fake notes more efficiently by collecting, digitizing hundreds of images of genuine and forged banknotes with Wavelet Transform, then identifying some features and clustering those banknotes. We used K-Means Clustering algorithm to detect the genuine and forged banknotes based on their variance of Wavelet Transformed image (V1) and skewness of Wavelet Transformed image (V2).**","80165d5e":"We need to standardized the data (domain [0,1] standardization). After standardization, the data is converted into values under a range of 0 to 1 in order to group them.","dc442ef1":"**The model detect 762 genuine notes (purple) and 610 forge notes (yellow). As we can see, the data points of features of real bank notes are les disperse than the \u2018fake\u2019 ones.**","af52e096":"# *We will run the model few more times to see if it is stable or not. Notice the cluster centers and the number of observations in each cluster.*","a935aac7":"# Banknote Authentication with K-Means Clustering ","08d51f27":"The objective of K-means clustering is to group similar data points together, generate K clusters in which each observation belongs to the cluster with the nearest mean (cluster centers). The centers are found by calculate average\ndistance.\n**Since we were trying to cluster genuine and forged banknotes, so K = 2.**"}}