{"cell_type":{"021dda0e":"code","4325274d":"code","14582837":"code","5bca563f":"code","2cf4613e":"code","7799914d":"code","ccfabfb1":"markdown","7d1cc798":"markdown","b1de1c5c":"markdown"},"source":{"021dda0e":"import os\nimport warnings\nimport pandas as pd\nimport numpy as np\nimport random\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.figure_factory as ff\nimport plotly.express as px\nwarnings.filterwarnings(\"ignore\") ","4325274d":"sub_ag1 = pd.read_csv('..\/input\/tps09-autogluon-081481\/TPS09AutoGluon.csv').sort_values('id')\n# sub_ag2 = pd.read_csv('..\/input\/d\/yus002\/tps09-public-notebook\/0.81426 ag.csv').sort_values('id') \nsub_lam = pd.read_csv('..\/input\/sep21-lightautoml-starter\/In_LightAutoML_we_trust.csv').sort_values('id') \nsub_lgbm1 = pd.read_csv('..\/input\/k\/takahiroyoshida012\/eda-lightgbm-hyperparameter-tuning-using-optuna\/submission.csv').sort_values('id')\nsub_lgbm2 = pd.read_csv('..\/input\/tps-sep-2021-single-lgbm\/submission.csv').sort_values('id')\nsub_xgb = pd.read_csv('..\/input\/xgboost-10fold-cv-blend\/submission_blend.csv').sort_values('id')\n# sub_nn = pd.read_csv('..\/input\/d\/yus002\/tps09-public-notebook\/0.80493 nn.csv').sort_values('id')\nsub_kfold = pd.read_csv('..\/input\/tps-lightgbm-kfold\/submission.csv').sort_values('id')\nsub_blend = sub_kfold = pd.read_csv('..\/input\/random-weights-blending-tool-tps-sep-2021\/rwb 3375 loops version 23.csv').sort_values('id')","14582837":"# Group data together\nhist_data = [sub_ag1.claim, sub_lam.claim, sub_lgbm1.claim, sub_lgbm2.claim, sub_xgb.claim, sub_kfold.claim, sub_blend.claim]\n\ngroup_labels = ['sub_ag1', 'sub_lam', 'sub_lgbm1', 'sub_lgbm2', 'sub_xgb', 'sub_kfold', 'sub_blend']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.3, show_hist=False, show_rug=False)\nfig.show()","5bca563f":"data=np.corrcoef([sub_ag1.claim, sub_lam.claim, sub_lgbm1.claim, sub_lgbm2.claim, sub_xgb.claim, sub_kfold.claim, sub_blend.claim])\nfig = px.imshow(data,\n                x=group_labels,\n                y=group_labels\n               )\nfig.show()","2cf4613e":"ensemble = sub_ag1.copy()\nensemble.loc[:, 'claim'] = (0 * sub_ag1.claim \n                             + 0 * sub_lam.claim \n                             + 0 * sub_lgbm1.claim \n                             + 0.09 * sub_lgbm2.claim \n                             + 0 * sub_xgb.claim \n                             + 0.21 * sub_kfold.claim\n                             + 0.7 * sub_blend.claim)\n\n# Group data together\nhist_data = [sub_ag1.claim, sub_lam.claim, sub_lgbm1.claim, sub_lgbm2.claim, sub_xgb.claim, sub_kfold.claim, sub_blend.claim, ensemble.claim]\n\ngroup_labels = ['sub_ag1', 'sub_lam', 'sub_lgbm1', 'sub_lgbm2', 'sub_xgb', 'sub_kfold', 'sub_blend', 'ensemble']\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.3, show_hist=False, show_rug=False)\nfig.show()","7799914d":"ensemble.to_csv('submission.csv', index=False)","ccfabfb1":"# Ensembling","7d1cc798":"# Data Set\n## Thanks to these datasets\nSolutions for blend\n* 0.81481 - [TPS09: AutoGluon](https:\/\/www.kaggle.com\/antonellomartiello\/tps09-autogluon)\n* 0.81426 - [AutoGluon for tabular playground sep 2021](https:\/\/www.kaggle.com\/lucamassaron\/autogluon-for-tabular-playground-sep-2021\/output)\n* 0.81023 - [Sep21 LightAutoML starter](https:\/\/www.kaggle.com\/alexryzhkov\/sep21-lightautoml-starter)\n* 0.80971 - [EDA & LightGBM Hyperparameter Tuning Using Optuna](https:\/\/www.kaggle.com\/takahiroyoshida012\/eda-lightgbm-hyperparameter-tuning-using-optuna)\n* 0.81796 - [TPS Sep 2021 single LGBM](https:\/\/www.kaggle.com\/hiro5299834\/tps-sep-2021-single-lgbm)\n* 0.80979 - [XGBoost-10Fold-CV-Blend](https:\/\/www.kaggle.com\/kennethquisado\/xgboost-10fold-cv-blend)\n* 0.80493 - [TPS-09 NN](https:\/\/www.kaggle.com\/lukaszborecki\/tps-09-nn)\n* 0.81796 - [TPS: LightGBM & KFold](https:\/\/www.kaggle.com\/hsuchialun\/tps-lightgbm-kfold)\n* 0.81809 - [Random Weights Blending Tool [TPS Sep 2021]](https:\/\/www.kaggle.com\/yus002\/random-weights-blending-tool-tps-sep-2021)\n","b1de1c5c":"# Smart Ensembling\n## For TPS - Sep 2021"}}