{"cell_type":{"1f80a125":"code","b765dcab":"code","66b54541":"code","64e953f8":"code","63c58828":"code","9e3d2e52":"code","64275edd":"code","de427817":"code","37af40d5":"code","1dbc8b78":"markdown","f50124db":"markdown"},"source":{"1f80a125":"# Importing libraries\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Set up matplotlib style \nplt.style.use('ggplot')\n\n# Libraries for wordcloud making and image importing\nfrom wordcloud import WordCloud, ImageColorGenerator\nfrom PIL import Image\n\nimport tensorflow as tf\nfrom tensorflow import keras\nimport random","b765dcab":"input_dir = '..\/input\/'\nfile_path = os.path.join(input_dir, 'Sarcasm_Headlines_Dataset.json')\n\ndata = pd.read_json(file_path, lines=True)","66b54541":"data.shape","64e953f8":"data.head()","63c58828":"data['is_sarcastic'].value_counts()","9e3d2e52":"data['website_domain'] = data['article_link'].apply(lambda x: x.split('.com')[0].split('.')[-1])","64275edd":"data.head()","de427817":"data['website_domain'].value_counts()","37af40d5":"data.groupby(['website_domain','is_sarcastic'])['headline'].aggregate('count').unstack().fillna(0)","1dbc8b78":"So we can see the website domain is a column of data leakage since it literally tell the is sarcastic or not. It seems the theonion website itself post sarcastic posts or the data owner classify in this way. We should drop it and only look at the headline to study this topic instead!\n\nThis is just a short case study. Feel free to let me know if you have any suggestion or feedback. I'll see you guys around.","f50124db":"After taking the [Data Leakage](https:\/\/www.kaggle.com\/dansbecker\/data-leakage) course for a while, I found it happen every now and then in the real world cases. However, since most of the data in each companies are confidential. I want to take this open dataset as an example. What is Data Leakage and we should be careful of it."}}