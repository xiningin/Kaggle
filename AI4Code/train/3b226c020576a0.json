{"cell_type":{"0f178217":"code","47dd6645":"code","a8c06900":"code","05e69f5e":"code","edf37c18":"code","fffdb88f":"code","b483ea59":"code","812dcbc4":"code","e7721baa":"code","96486c62":"code","287f32f9":"code","38878f84":"code","6d71258f":"code","b433863d":"markdown","97c2a0e6":"markdown","17556535":"markdown","923d8c69":"markdown","51d12408":"markdown","81275aaf":"markdown","5f18b294":"markdown"},"source":{"0f178217":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras import backend as K\nfrom keras import regularizers\nfrom keras.callbacks import EarlyStopping\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","47dd6645":"df = pd.read_csv('\/kaggle\/input\/cap-4611-2021-fall-assignment-4\/train.csv', low_memory=False) # Training Data\ntest_df = pd.read_csv('\/kaggle\/input\/cap-4611-2021-fall-assignment-4\/eval.csv', low_memory=False) # Testing Data\nsample_df = pd.read_csv('\/kaggle\/input\/cap-4611-2021-fall-assignment-4\/sample_submission.csv', low_memory=False) # Sample Submission","a8c06900":"df.head()","05e69f5e":"df.tail()","edf37c18":"test_df.head()","fffdb88f":"test_df.tail()","b483ea59":"sample_df.head()","812dcbc4":"sample_df.tail()","e7721baa":"hi = test_df['id']\ndf.drop(['id'], axis=1)\ntest_df.drop(['id'], axis=1)","96486c62":"label_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","287f32f9":"X = df.drop(['label'], axis=1)\nY = df['label']\nx = X.values\ny = Y.values\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.10, random_state=42)\nx_train = x_train \/ 255\nx_test = x_test \/ 255","38878f84":"model = Sequential()\nmodel.add(Flatten(input_shape=(785,)))\nmodel.add(Dense(128, activation='selu'))\nmodel.add(Dense(10))\nmodel.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\nmodel.fit(x_train, y_train, epochs=50)\nmodel.summary()","6d71258f":"solution = np.array(model(test_df.to_numpy())).flatten()\noutput = pd.DataFrame({'id': hi, 'label': solution[:10000]})\ndisplay(output)\noutput.to_csv('submission.csv', index=False)\n\nprint('Your submission was successfully saved') # Asserting submission was successfully saved","b433863d":"# Saving Solution to CSV","97c2a0e6":"# Building Sequential Model","17556535":"# Exploratory Data Analysis","923d8c69":"# Reading Data","51d12408":"# Import all necessary packages","81275aaf":"# Feature Engineering","5f18b294":"# Splitting data into training and testing data"}}