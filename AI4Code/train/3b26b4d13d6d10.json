{"cell_type":{"148e33e8":"code","5b21db8e":"code","6ff33cfd":"code","789f2bfd":"code","afb4d6b8":"code","c012e3bb":"code","624bc488":"code","99255b23":"code","19652549":"code","4d77bffb":"code","17b541c5":"code","8785dd80":"code","8856531c":"markdown","df447041":"markdown","23fd1743":"markdown","3b6911c0":"markdown","191bb917":"markdown","d5203c56":"markdown"},"source":{"148e33e8":"#Import libraries: \n\nfrom urllib.request import urlopen\nimport glob\nimport cufflinks as cf\nimport pandas as pd\nimport numpy as np\n#import pandas_bokeh\nfrom mpl_toolkits.mplot3d import Axes3D  # noqa: F401 unused import\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import BoundaryNorm\nfrom matplotlib import cm\nfrom matplotlib.ticker import LinearLocator, FormatStrFormatter\nimport numpy as np\nfrom matplotlib.ticker import MaxNLocator\nimport geopandas as gpd\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib.patches import Polygon\nfrom matplotlib.collections import PatchCollection","5b21db8e":"# The data could be downloaded here: \ndata = pd.read_csv(\"https:\/\/opendata.dwd.de\/climate_environment\/CDC\/regional_averages_DE\/annual\/air_temperature_mean\/regional_averages_tm_year.txt\",sep=\";\", skiprows=1)\n#appended_data_sorted = appended_data.sort_values(['Jahr', 'Monat'], ascending=[True, True])","6ff33cfd":"# Here I will try to build up a matrix to plot\n# What you have to note is that the pcolormesh usually interpolates the data between \n# 4 corner points and therefore it seems like there is 1 point on each axis missing\n%matplotlib inline\ny, x = np.mgrid[slice(1, data.shape[1]-3 + 1, 1),\n                slice(1, data.shape[0] + 1, 1)]\nz = data.iloc[:,2:-1]\n\nfig=plt.figure(figsize=(50, 6), dpi= 80, facecolor='w', edgecolor='k')\n\ncmap = plt.get_cmap('jet')\nlevels = MaxNLocator(nbins=25).tick_values(z.min().min(), z.max().max())\nnorm = BoundaryNorm(levels, ncolors=cmap.N, clip=True)\nplt.pcolormesh(x,y,np.transpose(z), cmap=cm.coolwarm, norm=norm)\nplt.xticks(np.arange(1,x.shape[1]+1), data.Jahr, rotation=70, fontsize=20)\nplt.yticks(np.arange(1,x.shape[0]+1), data.columns[2:-1], rotation=0, fontsize=20)\nplt.title('Near Surface Annual mean Air Temperature (c) in Germany', fontsize=50)\ncbaxes = fig.add_axes([.91, 0.1, 0.01, 0.8]) \ncb = plt.colorbar( cax = cbaxes)  \ncb.ax.tick_params(labelsize=25)","789f2bfd":"#Just another sort of plotting :\n\nfig = plt.figure(figsize=(54, 10))\n#fig.bbox_inches.from_bounds(1, 1, 20, 6)\nax = fig.gca(projection='3d')\nax.view_init(10, 250)\n\n\n# Plot the surface.\nsurf = ax.plot_surface(x, y, np.transpose(z), cmap=cm.coolwarm,\n                       linewidth=0, antialiased=False)\n\nax.zaxis.set_major_locator(LinearLocator(10))\nax.zaxis.set_major_formatter(FormatStrFormatter('%.02f'))\n\nplt.xticks(np.arange(1,x.shape[1]+1), data.Jahr, rotation=70, fontsize=20)\nplt.yticks(np.arange(1,x.shape[0]+1), data.columns[2:-1], rotation=10, fontsize=20)\n\nax.set_zlim3d(6,11)\n\n\nplt.show()","afb4d6b8":"# For the sake of plotting I hav downloaded the Germany's shapefiles of districts divisions\n# Downloaded from http:\/\/biogeo.ucdavis.edu\/data\/gadm2\/shp\/DEU_adm.zip\nfname = '..\/input\/germanyshp\/DEU_adm1.shp'\nmap_df = gpd.read_file(fname)","c012e3bb":"def plot_map(year_start,year_end):\n    \n    fig= plt.figure(figsize=(10, 13))\n    ax= fig.add_subplot(111)\n    m=Basemap(projection='cyl',llcrnrlat=47.3024876979,llcrnrlon=5.98865807458,\n                               urcrnrlat=54.983104153,urcrnrlon=15.0169958839,resolution='l')\n\n#m.drawmapboundary(fill_color='aqua')\n#m.fillcontinents(color='w',lake_color='aqua')\n#m.drawcoastlines()\n    m.readshapefile('..\/input\/germanyshp\/DEU_adm1','nomoi')\n\n\n    dict1 = {}\n    keys = range(16)\n    values = data[(data.Jahr>year_start) & (data.Jahr<year_end)].iloc[:,2:-2].mean()\n\n    dict1={1: values['Baden-Wuerttemberg'], 2: values['Bayern'], 3:values['Brandenburg\/Berlin'],\n           4: values['Brandenburg\/Berlin'], 5: values['Niedersachsen\/Hamburg\/Bremen'],\n           6: values['Niedersachsen\/Hamburg\/Bremen'],7:values['Hessen'],\n           8:values['Mecklenburg-Vorpommern'],9:values['Niedersachsen'],10:values['Nordrhein-Westfalen'],\n           11:values['Rheinland-Pfalz'],12:values['Saarland'],13:values['Sachsen-Anhalt'], \n           14:values['Sachsen'],15:values['Schleswig-Holstein'],16:values['Thueringen']}\n                                                   \n    colvals = dict1.values()\n\n    \n    cmap = plt.get_cmap('jet')\n    levels = MaxNLocator(nbins=25).tick_values(z.min().min(), z.max().max())\n    norm = BoundaryNorm(levels, ncolors=cmap.N, clip=True)\n    cmap = cm.coolwarm\n    patches   = []\n\n    for info, shape in zip(m.nomoi_info, m.nomoi):\n        if info['ID_1'] in list(dict1.keys()):\n            color=cmap(norm(dict1[info['ID_1']]))\n            patches.append( Polygon(np.array(shape), True, color=color) )\n\n    pc = PatchCollection(patches, match_original=True, edgecolor='k', linewidths=1., zorder=2)\n    ax.add_collection(pc)\n\n    #colorbar\n   \n    sm = plt.cm.ScalarMappable(cmap=cm.coolwarm, norm=norm)\n    sm.set_array(colvals)\n    fig.colorbar(sm, ax=ax, shrink=.5, aspect=20)\n    plt.title(str(year_start)+\" to \"+str(year_end), fontsize=30)\n    ax.axis(\"off\")\n    plt.show()\n    \n    \ndef plot_map_diff(year_start1,year_end1,year_start2,year_end2):\n    \n    fig= plt.figure(figsize=(10, 13))\n    ax= fig.add_subplot(111)\n    m=Basemap(projection='cyl',llcrnrlat=47.3024876979,llcrnrlon=5.98865807458,\n                               urcrnrlat=54.983104153,urcrnrlon=15.0169958839,resolution='l')\n\n#m.drawmapboundary(fill_color='aqua')\n#m.fillcontinents(color='w',lake_color='aqua')\n#m.drawcoastlines()\n    m.readshapefile('..\/input\/germanyshp\/DEU_adm1','nomoi')\n\n\n    dict1 = {}\n    keys = range(16)\n    values1 = data[(data.Jahr>year_start1) & (data.Jahr<year_end1)].iloc[:,2:-2].mean()\n    values2 = data[(data.Jahr>year_start2) & (data.Jahr<year_end2)].iloc[:,2:-2].mean()\n    values = values2 -values1\n\n    dict1={1: values['Baden-Wuerttemberg'], 2: values['Bayern'], 3:values['Brandenburg\/Berlin'],\n           4: values['Brandenburg\/Berlin'], 5: values['Niedersachsen\/Hamburg\/Bremen'],\n           6: values['Niedersachsen\/Hamburg\/Bremen'],7:values['Hessen'],\n           8:values['Mecklenburg-Vorpommern'],9:values['Niedersachsen'],10:values['Nordrhein-Westfalen'],\n           11:values['Rheinland-Pfalz'],12:values['Saarland'],13:values['Sachsen-Anhalt'], \n           14:values['Sachsen'],15:values['Schleswig-Holstein'],16:values['Thueringen']}\n                                                   \n    colvals = dict1.values()\n\n    cmap = cm.coolwarm\n    cmap = plt.get_cmap('jet')\n    levels = MaxNLocator(nbins=25).tick_values(-2, 2)\n    norm = BoundaryNorm(levels, ncolors=cmap.N, clip=True)\n    cmap = cm.coolwarm\n    patches   = []\n\n    for info, shape in zip(m.nomoi_info, m.nomoi):\n        if info['ID_1'] in list(dict1.keys()):\n            color=cmap(norm(dict1[info['ID_1']]))\n            patches.append( Polygon(np.array(shape), True, color=color) )\n\n    pc = PatchCollection(patches, match_original=True, edgecolor='k', linewidths=1., zorder=2)\n    ax.add_collection(pc)\n\n    #colorbar\n    \n    sm = plt.cm.ScalarMappable(cmap=cm.coolwarm, norm=norm)\n    sm.set_array(colvals)\n    fig.colorbar(sm, ax=ax, shrink=.5, aspect=20)\n    plt.title(str(year_start2)+\" to \"+str(year_end2)+\" - \"+ \n              str(year_start1)+\" to \"+str(year_end1), fontsize=30)\n    ax.axis(\"off\")\n    plt.show()","624bc488":"plot_map(1881,1910)","99255b23":"plot_map(1989,2018)","19652549":"plot_map_diff(1881,1910,1989,2018)","4d77bffb":"plot_map(1961,1990)","17b541c5":"plot_map_diff(1961,1990,1989,2018)","8785dd80":"plot_map_diff(1961,1990,1881,1910)","8856531c":"## Heat Map of the Temperature Trend\n-----\nThe following plot shows the warming trend in districts of Germany from 1881 to 2018. The y axis is the 16 districts and the x axis the years. \n\n-----\nThere are some points which I would like to mention: \n\n* Since around year 1987 there is an aprupt warming trend in the whole country.\n* From 1940 to 1943 there was a cool period in the Germany. \n* There is an unusual warming since year 2014. \n","df447041":"# Discussion\nThere is a significant warming trend in Germany both with respect to climatological reference mean (1961- 1990) and the 1881-1910 period. ","23fd1743":"-----\nAccording to [WMO](http:\/\/www.wmo.int\/pages\/prog\/wcp\/wcdmp\/GCDS_1.php): \"The period from 1961 to 1990 has been retained as a standard reference period for long-term climate change assessments.\", So lets see how the reference period looks like: \n\n------","3b6911c0":"And now the differences with the 2 climatological period we have chosen, i.e.: 1989 to 2018 and 1881 to 1910 : ","191bb917":"---\n# Temperature Trends in Germany: The Country is Warming up!\n\n\n---\n\n\nBased on the data from the German Weather Service [DWD](https:\/\/opendata.dwd.de\/climate_environment\/CDC\/regional_averages_DE\/monthly\/air_temperature_mean\/), I plotted the near surface air temperature averaged for each year and over each country devision (Bundesland) for Germany. The data starts from 1881 up to present. \n\n<br>\n\n\n\n\n\n","d5203c56":"\n\n\n## Climatology\n\nAccording to world meteorological organization [WMO](http:\/\/www.wmo.int\/pages\/prog\/wcp\/wcdmp\/GCDS_1.php), climate is defined as the mean state of the weather system in at least 30 years. Therefore for ploting the maps I consider 30 years for taking the mean. For me 2 distinct periods which look interesting are the 1881 to 1910 and the last 30 years (1989 to 2018) period. The first following plot shows that the average temoperature for the 1881 to 1910 period was somewhere under 8.5\u00b0C. However, the second figure shows that the average temperature for Germany was greater than 8\u00b0C. And finally looking at the difference of these 2 periods, we can see that there is a jump of more than 1.5\u00b0C for annual mean of temoerature!\n\n\n\n"}}