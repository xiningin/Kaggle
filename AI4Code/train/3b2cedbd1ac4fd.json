{"cell_type":{"fcb80e12":"code","b3c2bf30":"code","d25b66f6":"code","b8acf7ba":"code","4a0eed63":"code","6bd4298f":"code","fb8fd6fd":"code","7e5ad942":"code","ec34b19d":"code","621d88b4":"code","92cae334":"code","dac0fa3c":"code","3fa2e215":"code","f0983ebb":"code","de82c12e":"code","6a235bf2":"code","ff9e74c2":"code","cbe29883":"code","2670f0a4":"code","db5cf684":"code","e15cd51c":"code","25b3b066":"code","ccebc39b":"code","dd239eaa":"code","b0e652a1":"code","47d6727f":"code","7d275714":"code","d66a8e1d":"code","e579c299":"code","d944c225":"code","acf79a81":"code","1b18e825":"code","a4a8d1bc":"code","8735aaf0":"code","3b448d9b":"code","0ff61c36":"code","a7e7d8ef":"code","51b39e12":"code","494ccd9e":"code","54ee11d8":"code","94d1a782":"code","4b2a334c":"code","3b9889b1":"code","992cde1e":"code","7c6fb814":"code","73a4738e":"code","d2a6a4b0":"code","060077bb":"code","157de778":"code","58500fa9":"code","f6acdc6a":"code","4d0211b7":"code","5c764cf1":"code","949ffd29":"code","4f465ff4":"code","009bfe48":"code","3e8daa02":"markdown","41b479b9":"markdown","69965f65":"markdown","abdbaa24":"markdown","0dd9eb8e":"markdown","5d3f0d12":"markdown","335e9afa":"markdown","d0528fb2":"markdown","eabec9b0":"markdown"},"source":{"fcb80e12":"!pip install dexplot -q","b3c2bf30":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport dexplot as dxp\n\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nfrom plotly import tools\nimport plotly.figure_factory as ff\n\n\nfrom fbprophet import Prophet\nfrom fbprophet.plot import plot_plotly, plot_components_plotly\nimport datetime as dt\n\nimport os\nimport glob\n","d25b66f6":"DATA_PATH = '..\/input\/price-volume-data-for-all-us-stocks-etfs\/Stocks\/'","b8acf7ba":"def get_data(sym):\n    df = pd.read_csv(os.path.join(DATA_PATH, sym.lower() + '.us.txt'), parse_dates=True,na_values='nan', usecols=['Date', 'Close'], sep=',')\n    df['Date'] = pd.to_datetime(df['Date'])\n    \n    return df\n\ntsla_df = get_data('TSLA')\nfig = ff.create_table(tsla_df.head())\nfig.show()\n","4a0eed63":"tsla_df.info()\ntsla_df.shape","6bd4298f":"dxp.line(x='Date', y='Close', data=tsla_df,figsize=(16,8),title='Tesla Closing Stock Price')","fb8fd6fd":"trace0 = go.Box(\n    y=tsla_df.Close,\n    name = 'Tesla Close',\n    marker = dict(\n        color = 'red')\n)\n\ndata = [trace0]\n\npy.iplot(data)","7e5ad942":"fig = px.histogram(tsla_df, x=\"Date\", y=\"Close\", histfunc=\"avg\", title=\"Histogram for Avg Closing Stock\")\nfig.update_traces(xbins_size=\"M1\")\nfig.update_xaxes(showgrid=True, ticklabelmode=\"period\", dtick=\"M1\", tickformat=\"%b\\n%Y\")\nfig.update_layout(bargap=0.1)\nfig.add_trace(go.Scatter(mode=\"markers\", x=tsla_df[\"Date\"], y=tsla_df[\"Close\"], name=\"daily\"))\nfig.show()\n","ec34b19d":"tsla_df.rename(columns={'Close': 'y', 'Date': 'ds'}, inplace=True)\ntsla_df.sample(10)","621d88b4":"tsla_df.tail()","92cae334":"tsla_m = Prophet()\ntsla_m.fit(tsla_df)","dac0fa3c":"# Create Future dates\nfuture_prices = tsla_m.make_future_dataframe(periods=60,freq='D')\n\n# Predict Stocks\nforecast = tsla_m.predict(future_prices)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","3fa2e215":"## Forecasting for Next Month Dec 2017 & Jan 2018\n### y represents the truth values and yhat forecasted values. \nfig = ([\n    go.Scatter(x=tsla_df['ds'], y=tsla_df['y'], name='y'),\n    go.Scatter(x=forecast['ds'], y=forecast['yhat'], name='yhat'),\n    go.Scatter(x=forecast['ds'], y=forecast['yhat_upper'], fill='tonexty', mode='none', name='upper'),\n    go.Scatter(x=forecast['ds'], y=forecast['yhat_lower'], fill='tonexty', mode='none', name='lower')\n])\n\n\npy.iplot(fig)","f0983ebb":"plot_plotly(tsla_m, forecast)","de82c12e":"plot_components_plotly(tsla_m, forecast)","6a235bf2":"arch_df = get_data('acgl')\nfig = ff.create_table(arch_df.head())\nfig.show()\n","ff9e74c2":"arch_df.info()","cbe29883":"fig = px.line(arch_df, x='Date', y=\"Close\",title='ARCH Capital Stock Trend')\nfig.show()","2670f0a4":"fig = px.box(arch_df.Close,\n             notched=True,\n             title=\"Box plot of Arch Capital Close Stocks\",\n            )\nfig.show()","db5cf684":"arch_df.rename(columns={'Close': 'y', 'Date': 'ds'}, inplace=True)\narch_df.tail()","e15cd51c":"arch_m = Prophet()\narch_m.fit(arch_df)","25b3b066":"# Create Future dates\nfuture_prices_m = arch_m.make_future_dataframe(periods=60,freq='D')\n\n# Predict Stocks\nforecast_m = arch_m.predict(future_prices_m)\nforecast_m[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","ccebc39b":"## Forecasting for Next Month Dec 2017 & Jan 2018\nfig = ([\n    go.Scatter(x=arch_df['ds'], y=arch_df['y'], name='y'),\n    go.Scatter(x=forecast_m['ds'], y=forecast_m['yhat'], name='yhat'),\n    go.Scatter(x=forecast_m['ds'], y=forecast_m['yhat_upper'], fill='tonexty', mode='none', name='upper'),\n    go.Scatter(x=forecast_m['ds'], y=forecast_m['yhat_lower'], fill='tonexty', mode='none', name='lower')\n])\n\n\npy.iplot(fig)","dd239eaa":"plot_plotly(arch_m, forecast_m)","b0e652a1":"plot_components_plotly(arch_m, forecast_m)","47d6727f":"afl_df = get_data('afl')\nfig = ff.create_table(afl_df.head())\nfig.show()\n","7d275714":"afl_df.info()","d66a8e1d":"fig = px.line(afl_df, x='Date', y=\"Close\",title='AFL Close Stock Trend')\nfig.show()","e579c299":"fig = px.box(afl_df.Close,\n             notched=True,\n             title=\"Box plot of AFL Insurance Close Stocks\",\n            )\nfig.show()","d944c225":"afl_df.rename(columns={'Close': 'y', 'Date': 'ds'}, inplace=True)\nafl_df.tail()","acf79a81":"afl_m = Prophet()\nafl_m.fit(afl_df)","1b18e825":"# Create Future dates\nfuture_prices_afl = afl_m.make_future_dataframe(periods=60,freq='D')\n\n# Predict Stocks\nforecast_m_afl = afl_m.predict(future_prices_afl)\nforecast_m_afl[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","a4a8d1bc":"f, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nfig = afl_m.plot(forecast_m_afl,\n                 ax=ax)\nplt.title('Forecating Plot ')\nplt.show()","8735aaf0":"plot_plotly(afl_m, forecast_m_afl)","3b448d9b":"plot_components_plotly(afl_m, forecast_m_afl)","0ff61c36":"bgr_df = get_data('bgr')\nfig = ff.create_table(bgr_df.head())\nfig.show()\n","a7e7d8ef":"bgr_df.info()","51b39e12":"fig = px.line(bgr_df, x='Date', y=\"Close\",title='BGR CLOSE Stock Trend')\nfig.show()","494ccd9e":"fig = px.box(bgr_df.Close,\n             notched=True,\n             title=\"Box plot of BGR Trust Close Stocks\",\n            )\nfig.show()","54ee11d8":"bgr_df.rename(columns={'Close': 'y', 'Date': 'ds'}, inplace=True)\nbgr_df.tail()","94d1a782":"bgr_m = Prophet()\nbgr_m.fit(bgr_df)","4b2a334c":"# Create Future dates\nfuture_prices_bgr = bgr_m.make_future_dataframe(periods=60,freq='D')\n\n# Predict Stocks\nforecast_m_bgr = bgr_m.predict(future_prices_bgr)\nforecast_m_bgr[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","3b9889b1":"f, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nfig = bgr_m.plot(forecast_m_bgr,\n                 ax=ax)\nplt.title('Forecating Plot ')\nplt.show()","992cde1e":"## Forecasting for Next Month Dec 2017 & Jan 2018\nfig = ([\n    go.Scatter(x=bgr_df['ds'], y=bgr_df['y'], name='y'),\n    go.Scatter(x=forecast_m_bgr['ds'], y=forecast_m_bgr['yhat'], name='yhat'),\n    go.Scatter(x=forecast_m_bgr['ds'], y=forecast_m_bgr['yhat_upper'], fill='tonexty', mode='none', name='upper'),\n    go.Scatter(x=forecast_m_bgr['ds'], y=forecast_m_bgr['yhat_lower'], fill='tonexty', mode='none', name='lower')\n])\n\n\npy.iplot(fig)","7c6fb814":"plot_plotly(bgr_m, forecast_m_bgr)","73a4738e":"plot_components_plotly(bgr_m, forecast_m_bgr)","d2a6a4b0":"arkw_df = get_data('arkw')\nfig = ff.create_table(arkw_df.head())\nfig.show()\n","060077bb":"fig = px.line(arkw_df, x='Date', y=\"Close\",title='ARK CLOSE Stock Trend')\nfig.show()","157de778":"fig = px.box(arkw_df.Close,\n             notched=True,\n             title=\"Box plot of ARK Internet Close Stocks\",\n            )\nfig.show()","58500fa9":"arkw_df.rename(columns={'Close': 'y', 'Date': 'ds'}, inplace=True)\narkw_df.tail()","f6acdc6a":"ark_m = Prophet()\nark_m.fit(arkw_df)","4d0211b7":"# Create Future dates\nfuture_prices_ark = ark_m.make_future_dataframe(periods=60,freq='D')\n\n# Predict Stocks\nforecast_m_ark = ark_m.predict(future_prices_ark)\nforecast_m_ark[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","5c764cf1":"f, ax = plt.subplots(1)\nf.set_figheight(5)\nf.set_figwidth(15)\nfig = ark_m.plot(forecast_m_ark,\n                 ax=ax)\nplt.title('Forecating Plot ')\nplt.show()","949ffd29":"## Forecasting for Next Month Dec 2017 & Jan 2018\nfig = ([\n    go.Scatter(x=arkw_df['ds'], y=arkw_df['y'], name='y'),\n    go.Scatter(x=forecast_m_ark['ds'], y=forecast_m_ark['yhat'], name='yhat'),\n    go.Scatter(x=forecast_m_ark['ds'], y=forecast_m_ark['yhat_upper'], fill='tonexty', mode='none', name='upper'),\n    go.Scatter(x=forecast_m_ark['ds'], y=forecast_m_ark['yhat_lower'], fill='tonexty', mode='none', name='lower')\n])\n\n\npy.iplot(fig)","4f465ff4":"plot_plotly(ark_m, forecast_m_ark)","009bfe48":"plot_components_plotly(ark_m, forecast_m_ark)","3e8daa02":"# END","41b479b9":"## Prophet Introduction:\n<img src  = \"https:\/\/miro.medium.com\/max\/603\/0*tVCene42rgUTNv9Q.png\">\n\n##### Prophet is Facebook's library for time series forecasting. In my opinion, Prophet works best with datasets that are higely influenced by seasonality (electricity bills, restaurant visitors etc.)","69965f65":"# Time Series Forecasting\n## Forecast the stock price of any 5 stocks for Jan 2018.\n<img src = \"https:\/\/miro.medium.com\/max\/875\/1*NpT5pyemQQsGEHXbfS51Zw.png\">","abdbaa24":"> Since we have data until Nov 2017 Hence Forecasting for 2 Months(Dec 2017 and Jan 2018)","0dd9eb8e":"## Stock IV - Black Rock Global Energy and Resources Trust\n\n","5d3f0d12":"## Stock III - AFLAC Incorporated\n\n","335e9afa":"## Stock V ARK Next Generation Internet ETF\n","d0528fb2":"## Stock II - ARCH CAPITAL GROUP\n","eabec9b0":"## Stock I -Tesla "}}