{"cell_type":{"7a6279db":"code","b16b7168":"code","c9634712":"code","1e848045":"code","5e6cd68d":"code","ed3ddc6b":"code","6e4a5ab0":"code","7dc88a40":"code","6344c6e3":"code","fe3965dd":"code","0ed3980c":"markdown","b939e2b7":"markdown","eeb4a270":"markdown","c230ac23":"markdown","9865ea2f":"markdown","36217af0":"markdown","cdfff027":"markdown"},"source":{"7a6279db":"import pandas\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os.path\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom collections import Counter\nfrom sklearn.metrics import accuracy_score","b16b7168":"TREE_OPTS = {\n    \"criterion\": \"gini\", # Gini Impurity\n    \"max_depth\": 3,\n    \"splitter\": \"best\",\n}","c9634712":"data_frame = pandas.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")","1e848045":"# Need the abundance of each category type in the dataset\ncateg_counter = Counter(data_frame[\"Species\"].values)\nprint(\"Category abundances: \"+\", \".join(f\"{k}: {v}\" for k, v in categ_counter.items()))\n\n# Calculate Gini Impurity\ngini_impurity = sum((i\/len(data_frame))*(1-i\/len(data_frame)) for i in categ_counter.values())\nprint(f\"Gini Impurity: {gini_impurity:.3f}\")","5e6cd68d":"plt.rcParams['figure.figsize'] = (16,8)\n\nN_BINS=25\n\nfeature_bins = {\n    \"SepalLengthCm\": (4.0, 8.0, N_BINS),\n    \"SepalWidthCm\": (2.0, 4.5, N_BINS),\n    \"PetalLengthCm\": (1.0, 7.0, N_BINS),\n    \"PetalWidthCm\": (0.0, 2.5, N_BINS)\n}\n\nfig, axes = plt.subplots(2, 2)\ncolors = (\"red\", \"green\", \"blue\", \"black\")\n\nrow_n = 0\ncol_n = 0\n\nfor col, bins in feature_bins.items():\n    for i, species in enumerate(set(data_frame[\"Species\"].values)):\n        axes[row_n][col_n].hist(data_frame[data_frame[\"Species\"] == species][col], color=colors[i], bins=np.linspace(*bins))\n        axes[row_n][col_n].set_title(col)\n    if col_n == 1:\n        col_n = 0\n        row_n += 1\n    else:\n        col_n += 1\nplt.show()","ed3ddc6b":"corr = data_frame.loc[:, (data_frame.columns != \"SpeciesInt\") & (data_frame.columns != \"Id\")].corr()\ncorr.style.background_gradient(cmap='coolwarm')","6e4a5ab0":"data_frame[\"Species\"] = data_frame[\"Species\"].astype(\"category\")\ndata_frame[\"species_cat\"] = data_frame[\"Species\"].cat.codes","7dc88a40":"X = data_frame.values[:,:4]\ny = data_frame[\"species_cat\"].values\ntrain_X, test_X, train_y, test_y = train_test_split(X, y)","6344c6e3":"dtc = DecisionTreeClassifier(**TREE_OPTS)\ndtc.fit(train_X, train_y)","fe3965dd":"predict_y = dtc.predict(test_X)\n\nprint(f\"Accuracy Score: {accuracy_score(test_y, predict_y)}\")","0ed3980c":"## Full Dataset Gini Impurity\n\nThe Gini Impurity, $G$, is a measure of the probability that for the given data set, we will misclassify the result, for a dataset containing $N$ categories $x_i$ it is calculated as:\n\n$G = \\sum^{N}_{i=1}{P(x_{i})(1-P(x_{i}))}$\n\nTo calculate the Gini Impurity of the complete data set firstly get the abundance of each category:","b939e2b7":"## Preparing the Data\nTo prepare the data we firstly convert the target data from categorical to integer values. The features and target are then divided into two datasets for training and testing.","eeb4a270":"# Iris Dataset ML with SKLearn\n\nBasic example of machine learning using the well known \"iris\" data set. This ML workflow uses the `DecisionTreeClassifier` model from SKLearn for training and predictions the result is a high level of accuracy using all of the provided features when a max depth of 3 is used for each tree.","c230ac23":"## Feature Distributions","9865ea2f":"## Model Creation\nAn instance of `DecisionTreeClassifier` is created as the fit model for the test data set firstly trained on the training data set. After then fitting to the test sample, the resulting classifications predicted by the model are compared to the actual classifications to give an accuracy score.","36217af0":"## Feature Correlations","cdfff027":"Set options for the classifier, use the Gini Impurity as the criterion, and a maximum tree depth of 3:"}}