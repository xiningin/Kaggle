{"cell_type":{"381bde7a":"code","76a6ce0c":"code","87805fcb":"code","55ee3abc":"code","46839528":"code","90b22713":"code","0d68a77a":"code","1de89509":"markdown"},"source":{"381bde7a":"%matplotlib notebook","76a6ce0c":"import matplotlib.pyplot as plt\nfrom mpl_toolkits import mplot3d\nimport pandas as pd\nfrom pyquaternion import Quaternion","87805fcb":"x_trn = pd.read_csv('..\/input\/X_train.csv')","55ee3abc":"ser0 = x_trn[x_trn.series_id == 0]","46839528":"orient = ser0.columns.str.startswith('orientation')","90b22713":"qs = [Quaternion(list(row)) for _, row in ser0[ser0.columns[orient]].iterrows()]","0d68a77a":"vec = [1, 0, 1]\nxyz = [q.rotate(vec) for q in qs]\nxs, ys, zs = [list(seq) for seq in zip(*xyz)]\nax = plt.axes(projection='3d')\nax.scatter3D(xs, ys, zs, c=zs)","1de89509":"# Quaterni... what?\n\n![](http:\/\/)A small snippet to show how one can visualize the 3d vector rotations in `matplotlib`.  Could this kind of visualizations give some insights?\n\n> Note: This plot looks much better in Jupyter notebook. It will be interactive and you'll be able to rorate the axis and see the projections from the various sides."}}