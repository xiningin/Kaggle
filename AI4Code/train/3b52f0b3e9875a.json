{"cell_type":{"7e69a530":"code","4ddec81f":"code","925f23d4":"code","e10cf466":"code","66b61b62":"code","edcdd01d":"code","4d92e225":"code","0214b51a":"code","f88563bf":"code","995dd5aa":"code","2de575d7":"code","3cf461ae":"code","c91bb479":"code","6b83f2c7":"code","d7385309":"code","c93d2c49":"code","d8d9797c":"code","40beee66":"code","e70aba83":"code","0b67eea4":"code","a196f596":"code","fc400d33":"code","f37b5bd8":"code","156e9d7b":"code","941a844e":"code","89de435d":"code","4e454ab8":"code","22ad3034":"code","a0de20f4":"code","4a2b6bd2":"code","51c12a0d":"code","acc32002":"markdown"},"source":{"7e69a530":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ddec81f":"data = pd.read_csv('\/kaggle\/input\/metal-by-nation\/metal_bands_2017.csv',encoding='latin-1')","925f23d4":"data.head(2)","e10cf466":"data.shape","66b61b62":"data[\"fans\"]","edcdd01d":"data.dtypes","4d92e225":"data.columns[data.isna().any()]","0214b51a":"data[\"origin\"].isnull().sum()","f88563bf":"import seaborn as sns\nimport matplotlib.pyplot as plt","995dd5aa":"dataset = data.iloc[:, 1:7]\ndataset.shape","2de575d7":"dataset.band_name.duplicated().sum()","3cf461ae":"dataset.loc[dataset.band_name.duplicated(keep='first'), :]","c91bb479":"dataset.loc[dataset.band_name.duplicated(keep='last'), :]","6b83f2c7":"new_data = dataset.drop_duplicates(keep='first')\nnew_data.shape","d7385309":"new_data.info()","c93d2c49":"new_data[\"origin\"].fillna(\"unknown\", inplace=True)","d8d9797c":"for i in new_data[\"style\"].str.split(','):\n    i = i[0]\n    print(i)","40beee66":"styles = new_data[\"style\"].str.split(\",\", expand=True)\nnew_data['main_style'] = styles[0]\nnew_data['style_2'] = styles[1]\nnew_data['style_3'] = styles[2]\nnew_data['style_4'] = styles[3]\nnew_data['style_5'] = styles[4]\nnew_data['style_6'] = styles[5]","e70aba83":"new_data['main_style'].value_counts().head()","0b67eea4":"new_data.head()","a196f596":"new_data.drop(\"style\", axis=1, inplace=True)","fc400d33":"new_data.head(2)","f37b5bd8":"plt.subplots(figsize=(25,5))\norigin_total = new_data[\"origin\"].value_counts()\nsns.barplot(x=origin_total[:20].keys(), y=origin_total[:20].values)","156e9d7b":"style_count = new_data[\"main_style\"].value_counts()\nplt.subplots(figsize=(30,5))\nsns.barplot(x=style_count[:20].keys(), y=style_count[:20].values)","941a844e":"split_count = new_data[\"split\"].value_counts(ascending=False)\nformed_count = new_data[\"formed\"].value_counts(ascending=False)","89de435d":"split_count","4e454ab8":"data_ = {'split': split_count, 'formed': formed_count}\nsplit_formed = pd.DataFrame(data=data_)","22ad3034":"split_formed.tail()","a0de20f4":"fig = plt.figure(figsize=(30,10))\nax1 = fig.add_axes([0, 0, 1, 1])\nax2 = fig.add_axes([0.05, 0.65, 0.5, 0.3])\nax1.plot(split_formed[\"formed\"], color='teal')\nax2.plot(split_formed[\"split\"], color='green')\nax2.set_title(\"Split Bands\", fontsize=18)\n# split_formed.dtypes","4a2b6bd2":"plt.subplots(figsize=(30,5))\nsns.barplot(x=\"formed\", y=\"fans\", data=new_data)","51c12a0d":"new_data[(new_data.fans <= 2500) & (new_data.formed.isin(['1975', '1976', '1977'])) & (new_data.main_style == \"Heavy\")]","acc32002":"## We see that year 2016 split band 87 but formed only 5"}}