{"cell_type":{"0600aa45":"code","e8f47947":"code","1b9df5a0":"code","b006f355":"code","cddfc543":"code","25ea113d":"code","c349f1d0":"code","914bef05":"code","7d114936":"code","4f9a7bef":"code","c7748d80":"code","3b875403":"code","37ed6d66":"code","af2ede6b":"code","29b3d35c":"code","6c7ad727":"code","3e2cb98b":"code","4a328bbc":"code","c1dfb166":"code","571d7914":"code","6195b447":"markdown","d7a45f6c":"markdown","4bff298a":"markdown","c73c0021":"markdown","29dc9d7b":"markdown","a0aee564":"markdown","14eaf68a":"markdown","15ebec76":"markdown","7ee651a9":"markdown","33c0e527":"markdown","ba08445f":"markdown","03a41c41":"markdown","fb736e55":"markdown"},"source":{"0600aa45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8f47947":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import model_selection, tree\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV, KFold\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.svm import LinearSVC","1b9df5a0":"stroke = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv',index_col=[0])\nstroke","b006f355":"stroke = stroke[(~stroke.bmi.isna()) & (~stroke.avg_glucose_level.isna()) & (stroke.smoking_status != 'Unknown')]","cddfc543":"stroke = stroke.drop(['ever_married', 'work_type', 'Residence_type'], axis=1)","25ea113d":"stroke","c349f1d0":"y = stoke.stroke","914bef05":"X = stroke.drop(\"stroke\", axis=1)\nX = pd.get_dummies(X)","7d114936":"X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y)","4f9a7bef":"params = {'n_neighbors': [ i for i in range(1, 22, 2)]}\nparams","c7748d80":"test_knn = KNeighborsClassifier()\ngs_cv = GridSearchCV(test_knn, params)\ngs_cv.fit(X_train, y_train)\nbest_k = gs_cv.best_params_['n_neighbors']\nbest_k","3b875403":"kNN = KNeighborsClassifier(best_k)\nkNN.fit(X_train, y_train)","37ed6d66":"kNN.score(X_test, y_test)","af2ede6b":"y_train_kfold = y_test_kfold = pd.Series([])\nkf = KFold(n_splits=2)","29b3d35c":"kNN = KNeighborsClassifier(best_k)","6c7ad727":"for train_index, test_index in kf.split(X):\n    X_train_kfold = X.iloc[train_index]\n    X_test_kfold = X.iloc[test_index]\n    y_train_kfold = (y.iloc[train_index])\n    y_test_kfold = (y.iloc[test_index])\n    kNN.fit(X_train_kfold, y_train_kfold)","3e2cb98b":"kNN.score(X_test_kfold, y_test_kfold)","4a328bbc":"dt = DecisionTreeClassifier()\ndt.fit(X_train,y_train)","c1dfb166":"dt.score(X_test, y_test)","571d7914":"import graphviz \ndot_data = tree.export_graphviz(dt, out_file=None) \ngraph = graphviz.Source(dot_data) \ngraph","6195b447":"### \u0e41\u0e1c\u0e19\u0e20\u0e32\u0e1e\u0e02\u0e2d\u0e07 Model Decision Tree Classifier","d7a45f6c":"## K-Neighbor Classifier","4bff298a":"\u0e17\u0e33\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e25\u0e38\u0e48\u0e21\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n\n\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23 Train model \u0e41\u0e25\u0e30 test model \u0e14\u0e49\u0e27\u0e22\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48 model \u0e44\u0e21\u0e48\u0e40\u0e04\u0e22\u0e40\u0e2b\u0e47\u0e19\u0e21\u0e32\u0e01\u0e48\u0e2d\u0e19\n* \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e38\u0e14 Train model        `X_train`\n* \u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a test model    `X_test`\n* \u0e0a\u0e38\u0e14\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e02\u0e2d\u0e07\u0e0a\u0e38\u0e14 Train model  `y_train`\n* \u0e0a\u0e38\u0e14\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e02\u0e2d\u0e07 test model     `y_test`","c73c0021":"\u0e04\u0e48\u0e32 K \u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e08\u0e31\u0e14\u0e01\u0e25\u0e38\u0e48\u0e21\u0e41\u0e25\u0e49\u0e27\u0e44\u0e14\u0e49\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e04\u0e37\u0e2d 15","29dc9d7b":"<br>\n<ins>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c<\/ins>\n\n| Column | Description |\n| :--------- | :---------- |\n| id\t| \u0e25\u0e33\u0e14\u0e31\u0e1a |\n| gender\t| \u0e40\u0e1e\u0e28 |\n| age\t| \u0e2d\u0e32\u0e22\u0e38 |\n| hypertension\t| \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e25\u0e2d\u0e14\u0e42\u0e23\u0e04\u0e04\u0e27\u0e32\u0e21\u0e14\u0e31\u0e19\u0e42\u0e25\u0e2b\u0e34\u0e15\u0e2a\u0e39\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48? |\n| heart_disease\t| \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e31\u0e27\u0e43\u0e08\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48? |\n| ever_married | \u0e2a\u0e16\u0e32\u0e19\u0e30\u0e01\u0e32\u0e23\u0e41\u0e15\u0e48\u0e07\u0e07\u0e32\u0e19 |\n| work_type\t| \u0e2d\u0e32\u0e0a\u0e35\u0e1e|\n| Residence_type\t| \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e2d\u0e32\u0e28\u0e31\u0e22|\n| avg_glucose_level\t| \u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e19\u0e49\u0e33\u0e15\u0e32\u0e25\u0e43\u0e19\u0e40\u0e25\u0e37\u0e2d\u0e14|\n| bmi | \u0e14\u0e31\u0e0a\u0e19\u0e35\u0e21\u0e27\u0e25\u0e01\u0e32\u0e22 |\n| smoking_status | \u0e01\u0e32\u0e23\u0e2a\u0e39\u0e1a\u0e1a\u0e38\u0e2b\u0e23\u0e35\u0e48 |\n| stroke | \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e25\u0e2d\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e14\u0e2a\u0e21\u0e2d\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48? |\n\n\n<br>\n\n\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\n<br>1) id: \u0e40\u0e25\u0e02\u0e41\u0e17\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e15\u0e48\u0e25\u0e30\u0e41\u0e16\u0e27\u0e17\u0e35\u0e48\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19\n<br>2) gender: \"Male\"(\u0e40\u0e1e\u0e28\u0e0a\u0e32\u0e22), \"Female\"(\u0e40\u0e1e\u0e28\u0e2b\u0e0d\u0e34\u0e07), \"Other\"(\u0e40\u0e1e\u0e28\u0e2d\u0e37\u0e48\u0e19\u0e46)\n<br>3) age: \u0e2d\u0e32\u0e22\u0e38\n<br>4) hypertension: 0 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e04\u0e27\u0e32\u0e21\u0e14\u0e31\u0e19\u0e42\u0e25\u0e2b\u0e34\u0e15\u0e2a\u0e39\u0e07, 1 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e04\u0e27\u0e32\u0e21\u0e14\u0e31\u0e19\u0e42\u0e25\u0e2b\u0e34\u0e15\u0e2a\u0e39\u0e07\n<br>5) heart_disease: 0 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e31\u0e27\u0e43\u0e08, 1 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e31\u0e27\u0e43\u0e08\n<br>6) ever_married: \u0e40\u0e04\u0e22\u0e41\u0e15\u0e48\u0e07\u0e07\u0e32\u0e19\u0e21\u0e32\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 -> \"No\"(\u0e44\u0e21\u0e48\u0e40\u0e04\u0e22\u0e2a\u0e21\u0e23\u0e2a), \"Yes\"(\u0e40\u0e04\u0e22\u0e2a\u0e21\u0e23\u0e2a)\n<br>7) work_type: \"children\"(\u0e40\u0e14\u0e47\u0e01), \"Govt_jov\"(\u0e07\u0e32\u0e19\u0e23\u0e31\u0e10\u0e1a\u0e32\u0e25), \"Never_worked\"(\u0e44\u0e21\u0e48\u0e17\u0e33\u0e07\u0e32\u0e19), \"Private\"(\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e2a\u0e48\u0e27\u0e19\u0e15\u0e31\u0e27),\"Self-employed\"(\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e2d\u0e32\u0e0a\u0e35\u0e1e\u0e2d\u0e34\u0e2a\u0e23\u0e30)\n<br>8) Residence_type: \"Rural\"(\u0e2d\u0e32\u0e28\u0e31\u0e22\u0e2d\u0e22\u0e39\u0e48\u0e19\u0e2d\u0e01\u0e40\u0e21\u0e37\u0e2d\u0e07), \"Urban\"(\u0e2d\u0e32\u0e28\u0e31\u0e22\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e40\u0e21\u0e37\u0e2d\u0e07)\n<br>9) avg_glucose_level: \u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e19\u0e49\u0e33\u0e15\u0e32\u0e25\u0e43\u0e19\u0e40\u0e25\u0e37\u0e2d\u0e14\u0e17\u0e28\u0e19\u0e34\u0e22\u0e21\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14\u0e2a\u0e2d\u0e07\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\n<br>10) bmi: body mass index(\u0e14\u0e31\u0e0a\u0e19\u0e35\u0e21\u0e27\u0e25\u0e01\u0e32\u0e22)\n<br>11) smoking_status: \"formerly smoked\"(\u0e40\u0e04\u0e22\u0e2a\u0e39\u0e1a\u0e1a\u0e38\u0e2b\u0e23\u0e35\u0e48\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e19\u0e35\u0e49), \"never smoked\"(\u0e44\u0e21\u0e48\u0e40\u0e04\u0e22\u0e2a\u0e39\u0e1a\u0e1a\u0e38\u0e2b\u0e23\u0e35\u0e48), \"smokes\"(\u0e2a\u0e39\u0e1a\u0e1a\u0e38\u0e2b\u0e23\u0e35\u0e48), \"Unknown\"(\u0e44\u0e21\u0e48\u0e17\u0e23\u0e32\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25)\n<br>12) stroke: 1 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e25\u0e2d\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e14\u0e2a\u0e21\u0e2d\u0e07, 0 \u0e16\u0e49\u0e32\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e23\u0e04\u0e2b\u0e25\u0e2d\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e14\u0e2a\u0e21\u0e2d\u0e07","a0aee564":"## K-Neighbor \u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e25\u0e38\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e1a\u0e1a KFold\nKFold \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23 suffle \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \n\n\u0e17\u0e33\u0e43\u0e2b\u0e49 Dataset \u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23 Bias \u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Train Model \u0e44\u0e14\u0e49\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e21\u0e32\u0e01\u0e02\u0e36\u0e49\u0e19","14eaf68a":"## Decision Tree\n   Decision Tree \u0e40\u0e1b\u0e47\u0e19 Algorithms \u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08 \u0e42\u0e14\u0e22\u0e08\u0e30\u0e41\u0e22\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\u0e44\u0e1b\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46\u0e08\u0e19\u0e01\u0e27\u0e48\u0e32\u0e08\u0e30\u0e44\u0e1b\u0e16\u0e36\u0e07 condition \u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\n   \n   input \u0e17\u0e35\u0e48\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e08\u0e32\u0e01 Root Node \u0e02\u0e2d\u0e07\u0e15\u0e49\u0e19\u0e44\u0e21\u0e49 \u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e16\u0e39\u0e01\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\u0e46\u0e44\u0e1b\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46\u0e08\u0e19\u0e16\u0e36\u0e07 Leaf Node","15ebec76":"### \u0e04\u0e27\u0e32\u0e21\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e02\u0e2d\u0e07 Model \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49 Algorithm Decision Tree Classifier \u0e04\u0e37\u0e2d 89.15%","7ee651a9":"Algorithms K-Neighbor \n\n\u0e2b\u0e32 `n_neighbors` \u0e17\u0e35\u0e48\u0e14\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e14\u0e49\u0e27\u0e22 `GridSearchCV`\n\u0e42\u0e14\u0e22 `n_neighbors` \u0e17\u0e35\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23 brute force \u0e04\u0e37\u0e2d 1 3 5 7 9 11 13 15 17 19 21","33c0e527":"### \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49 Algorithm K-neighbor \u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e1a\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e25\u0e38\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e14\u0e49\u0e27\u0e22 KFold \u0e17\u0e33\u0e43\u0e2b\u0e49 Model \u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e16\u0e36\u0e07 98.66% ","ba08445f":"### \u0e04\u0e27\u0e32\u0e21\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e02\u0e2d\u0e07 Model \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49 Algorithm K-Neighbor Classifier \u0e04\u0e37\u0e2d 95.45%","03a41c41":"`y` \u0e04\u0e37\u0e2d\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e02\u0e2d\u0e07\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25","fb736e55":"`X` \u0e04\u0e37\u0e2d\u0e0a\u0e38\u0e14\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e15\u0e49\u0e19\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n\n\u0e42\u0e14\u0e22\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e2d\u0e32\u0e1c\u0e25\u0e40\u0e09\u0e25\u0e22\u0e2d\u0e2d\u0e01 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e01\u0e32\u0e23\u0e17\u0e33 Model"}}