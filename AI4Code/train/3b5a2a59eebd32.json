{"cell_type":{"6aacf7a4":"code","8f2468eb":"code","19d0bf97":"code","ac256ad8":"code","d058a082":"code","3735ce01":"code","a690d1e4":"code","eeddc082":"code","43cba018":"code","e530a8db":"code","60798b7d":"code","f7e9c49b":"code","c4d6aa9a":"code","73baad85":"code","44bb6fc7":"code","c57e38d4":"code","7c1342b1":"code","acc70ed2":"code","abf078cc":"code","40e4b1f8":"code","333c6bd1":"code","3b68c941":"code","b1ca018e":"code","5bccf4eb":"code","2be608b3":"code","8d27fa21":"code","ae29ba0d":"code","4891deea":"code","74796cdd":"code","3ac2a492":"code","482efab2":"code","b4d91e7a":"code","ced5770e":"markdown","bd67066b":"markdown","81a8d4be":"markdown","67fab049":"markdown","ec834889":"markdown","ecdadb03":"markdown","1fc86e3a":"markdown","c0098cd0":"markdown","b59df019":"markdown","792141cf":"markdown","573aca17":"markdown","ff29913c":"markdown","88a28a48":"markdown","11909022":"markdown","2028fe4f":"markdown","07f7385c":"markdown","9c966589":"markdown","1c2e0580":"markdown","ab02a330":"markdown","4f51f71f":"markdown","1d9d9698":"markdown","d213a34e":"markdown","608eb247":"markdown","4dbbae1b":"markdown","3d81855a":"markdown","060125fa":"markdown"},"source":{"6aacf7a4":"# packages\nimport numpy as np \nimport pandas as pd \n# visual\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\n# tsa\nimport statsmodels.api as sm\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n# evaluation\nfrom sklearn import metrics\n# html\nfrom IPython.core.display import HTML\n\n# plotly offline\nfrom plotly.offline import download_plotlyjs,init_notebook_mode\ninit_notebook_mode(connected=True)\n\n# warnings\nimport warnings\nwarnings.filterwarnings('ignore')","8f2468eb":"# data from covid19india.org\ndf = pd.read_csv('..\/input\/covid19-second-wave\/case_time_series (10).csv',parse_dates=True,index_col=0)\ndf = df.drop('Date_YMD',axis=1)\n\n# data from ourworldindata.org\ndfo = pd.read_csv('..\/input\/covid19-our-world-in-data\/owid-covid-data (6).csv',parse_dates=True)\ndfo.set_index('date',inplace=True)\n\n\ndf_vc = pd.read_csv('..\/input\/covid19-in-india\/covid_vaccine_statewise.csv')","19d0bf97":"# time series\nfig = px.line(df['Daily Confirmed'],title='Daily Confirmed cases in India',template='none')\n\nfig.show()","ac256ad8":"## plot data\nind =dfo[dfo['location'] =='India']['new_cases_smoothed']\nus = dfo[dfo['location'] =='United States']['new_cases_smoothed']\nbrz = dfo[dfo['location'] =='Brazil']['new_cases_smoothed']\nuk = dfo[dfo['location'] =='United Kingdom']['new_cases_smoothed']\n\n\ntime_new_case = pd.DataFrame({'India':ind,'United states':us,'Brazil':brz,'United Kingdom':uk})\n","d058a082":"# plot\nfig = px.line(time_new_case,template='none',title='Confirmed cases in different nations')\n\nfig.show()\n","3735ce01":"plot_sun_df = dfo.groupby(['continent','iso_code','location'])['total_cases'].max().reset_index()\n\n\nfig = px.sunburst(plot_sun_df, path=['continent','location'], values='total_cases',\n                  title= 'Confirmed cases around the world',\n                  height=620,template='none')\n\nfig.show()","a690d1e4":"# total deaths across continent\n\ncont_plot = dfo.groupby('continent')['total_deaths'].max().reset_index().sort_values('total_deaths',ascending=False)\n\nfig =px.bar(cont_plot,x='continent',y='total_deaths',template='none',title='Total deaths across continent')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","eeddc082":"country_plot = dfo.groupby('location')['total_deaths'].max().reset_index().sort_values('total_deaths',ascending=False)\ncountry_plot=country_plot.reset_index()\ncountry_plot.drop(country_plot.index[[0,1,2,3,4,5,11]],inplace=True)\n\nfig =px.bar(country_plot.head(20),x='location',y='total_deaths',template='none',title='Total deaths across countries')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","43cba018":"ind =dfo[dfo['location'] =='India']['total_deaths']\nus = dfo[dfo['location'] =='United States']['total_deaths']\nbrz = dfo[dfo['location'] =='Brazil']['total_deaths']\nuk = dfo[dfo['location'] =='United Kingdom']['total_deaths']\n\n\ntime_new_death = pd.DataFrame({'India':ind,'United states':us,'Brazil':brz,'United Kingdom':uk})\n\nfig = px.line(time_new_death,template='none',title='Daily deaths in different nations')\n\nfig.show()","e530a8db":"%%HTML\n<div class='tableauPlaceholder' id='viz1621341619591' style='position: relative'><noscript><a href='#'><img alt='Dashboard 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;To&#47;Totalvaccinatedacrossstates&#47;Dashboard1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Totalvaccinatedacrossstates&#47;Dashboard1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;To&#47;Totalvaccinatedacrossstates&#47;Dashboard1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1621341619591');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else { vizElement.style.width='100%';vizElement.style.height='727px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","60798b7d":"%%HTML\n<div class='tableauPlaceholder' id='viz1620392585071' style='position: relative'><noscript><a href='#'><img alt='Total covid-19 active cases  and deaths across states ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;To&#47;Totalcovid-19activecases&#47;Totaldeathsinacrossstates&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Totalcovid-19activecases&#47;Totaldeathsinacrossstates' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;To&#47;Totalcovid-19activecases&#47;Totaldeathsinacrossstates&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1620392585071');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","f7e9c49b":"%%HTML\n<div class='tableauPlaceholder' id='viz1621500069349' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;va&#47;vaccination_progress_India2&#47;Dashboard1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='vaccination_progress_India2&#47;Dashboard1' \/><param name='tabs' value='yes' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;va&#47;vaccination_progress_India2&#47;Dashboard1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1621500069349');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else { vizElement.style.width='100%';vizElement.style.minHeight='800px';vizElement.style.maxHeight=(divElement.offsetWidth*1.77)+'px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","c4d6aa9a":"vc_pro =df_vc.groupby('State')['Total Individuals Vaccinated'].max().reset_index().sort_values(['Total Individuals Vaccinated'],ascending=False)\nvc_pro = vc_pro[vc_pro['State'] != 'India']\n\npx.bar(vc_pro, y='State',x='Total Individuals Vaccinated',color='Total Individuals Vaccinated',height=550,title='Total no. of Individual vaccinated across state')","73baad85":"adfuller_test =adfuller(df['Daily Confirmed'])\nprint('adfuller test P-value:', adfuller_test[1])","44bb6fc7":"plt.rcParams.update({'figure.figsize':(7,4), 'figure.dpi':90})\n\nplt.style.use('seaborn');\ndecompose = seasonal_decompose(df['Daily Confirmed'],model='additive',period=14);\ndecompose.plot();","c57e38d4":"# ACF\n\nplot_acf(df['Daily Confirmed'].diff().dropna(),lags=50);","7c1342b1":"# pacf\n\nplot_pacf(df['Daily Confirmed'].diff().dropna(),lags=50);","acc70ed2":"# test size\ntest_size = 30","abf078cc":"train_size= len(df) - test_size","40e4b1f8":"train = df[['Daily Confirmed']].iloc[:train_size]\ntest = df[['Daily Confirmed']].iloc[train_size:]","333c6bd1":"# train and test\n\nprint(train.shape)\nprint(test.shape)","3b68c941":"# exons variables\nexons=df[['Daily Recovered','Daily Deceased']]\n\nfull_data = df['Daily Confirmed']","b1ca018e":"\nSARIMA_1017_model = sm.tsa.statespace.SARIMAX(train.values,\n                                            order=(1,0,1),\n                                            seasonal_order=(0,0,0,7),\n                                         enforce_stationarity=False,\n                                         enforce_invertibility=False)\nSARIMA_1017_model = SARIMA_1017_model.fit(maxiter=1000)","5bccf4eb":"SARIMA_1017_model.summary()","2be608b3":"plt.style.use('seaborn')\nSARIMA_1017_model.plot_diagnostics();","8d27fa21":"# forecast\nforecast_SARIMA =SARIMA_1017_model.get_forecast(steps=test_size)\npred_SARIMA_1017_date = forecast_SARIMA.summary_frame(alpha=0.05).set_index(pd.date_range(start=test.index[0], periods=test_size, freq='D'))","ae29ba0d":"RSME_SARIMA_7 = np.sqrt(metrics.mean_squared_error(test,pred_SARIMA_1017_date['mean']))\n\n\nRMSE = pd.DataFrame({'Model':['RSME_SARIMA_010_7'],'RSME':[RSME_SARIMA_7]})\nRMSE","4891deea":"\nSARIMAX__model = sm.tsa.statespace.SARIMAX(full_data.values,exons=exons,\n                                            order=(1,0,1),\n                                            seasonal_order=(1,0,1,7),\n                                         enforce_stationarity=False,\n                                         enforce_invertibility=False,)\nSARIMAX__model = SARIMAX__model.fit(maxiter=1000)\n\nSARIMAX__model.summary()","74796cdd":"plt.style.use('seaborn')\nSARIMAX__model.plot_diagnostics();","3ac2a492":"days=10\nprediction = SARIMAX__model.get_forecast(steps=days)\npred_date = prediction.summary_frame(alpha=0.05).set_index(pd.date_range(start='2021-05-17',periods=days,freq='D'))\n","482efab2":"\nplt.style.use('seaborn-whitegrid')\n\nax =df['Daily Confirmed'].plot(figsize=(15,6));\npred_date['mean'].plot(ax=ax, label='forecast',alpha=.50);\nax.fill_between(pred_date.index,pred_date['mean_ci_lower'], pred_date['mean_ci_upper'], color='y', alpha=.20)\nplt.title('forecast for next 10 days in India');\nax.set_ylabel('Confirmed cases');\nplt.legend(loc='best');","b4d91e7a":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    name=\"Actual\",\n     x=df.index, y=df[\"Daily Confirmed\"]))\n\nfig.add_trace(go.Scatter(\n    name=\"prediction\",mode=\"lines\",\n     x=pred_date.index, y=pred_date['mean']))\n\nfig.add_trace(go.Scatter(\n    name=\"lowerbound\",mode=\"lines\",\n        line=dict(width=0),fillcolor='rgba(68, 68, 68, 0.3)',\n        fill='tonexty',showlegend=False,\n     x=pred_date.index, y=pred_date['mean_ci_lower']))\n\nfig.add_trace(go.Scatter(name=\"upperbound\",mode=\"lines\",\n        line=dict(width=0),fillcolor='rgba(68, 68, 68, 0.3)',fill='tonexty',showlegend=False,\n                         x=pred_date.index, y=pred_date['mean_ci_upper']))","ced5770e":"## <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\">i. daily confirmed cases","bd67066b":"* <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> United states ,Brazil and India has most of the confirmed cases ","81a8d4be":"# Covid-19 Second wave ","67fab049":"# 1.8.Forecast","ec834889":"# 1.5.Train Test split","ecdadb03":"#  1.1.packages","1fc86e3a":"# 1.2.EDA","c0098cd0":"# feel free to post your suggestions","b59df019":"* <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> In the above map, we can observe that red colour shows the lower percentage of the population are vaccinated and green shows the higher percentage of population vaccinated\n\n* <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> In the above map we can see that below 10% of population vaccinated state are Tamilnadu, Madhya Pradesh, Uttar Pradesh,Bihar, Jharkhand, West Bengal, Assam, Meghalaya, Nagaland and Manipur\n    \n* <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> we can also see that above 25% vaccinated states like Goa, Tripura, Sikkim, Himachal Pradesh and Ladakh","792141cf":"## <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> ii. where India stands...","573aca17":"# Thank you","ff29913c":"# lets decompose the Time series\n\n* Trend\n* Seasonality\n* error or white noise","88a28a48":"#### so the Daily confirmed time series is stationary we can continue","11909022":"* <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\"> Most of the human losses happened in the top 5 countries United States, Brazil, India, Mexico and the United Kingdom","2028fe4f":"# Index\n\n* <a href=\"#1.1.packages\">1.1.packages\n* <a href=\"#1.2.EDA\">1.2.EDA\n* <a href=\"#1.3.Time-series-Stationary-check\">1.3.Time series Stationary check\n* <a href=\"#1.4.ACF-and-PACF-plots\">1.4.ACF and PACF plots\n* <a href=\"#1.5.Train-Test-split\">1.5.Train Test split\n* <a href=\"#1.6.-SARIMA\">1.6. SARIMA\n* <a href=\"#1.7.SARIMAX\">1.7.SARIMAX\n* <a href=\"#1.8.Forecast\">1.8.Forecast\n* <a href=\"#Reference\">Reference","07f7385c":"# 1.3.Time series Stationary check\n\n* time series must be stationary and we can check this Statistically\n\n### H0: The Time Series is non-stationary\n### Ha: The Time Series is stationary","9c966589":"# <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\">","1c2e0580":"# 1.7.SARIMAX ","ab02a330":"# 1.6. SARIMA ","4f51f71f":"#### <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\">Objective:  forecast covid-19 confirmed cases and analysis of vaccination progress in each state","1d9d9698":"# 1.4.ACF and PACF plots\n* auto-correlation function and partial auto-correlation function\n","d213a34e":"## <span style=\"font-family: Arial;font-size:1.2em;color:#3366ff\">iii. Vaccinaion_progress\n    \n* <span style=\"font-family: Arial;font-size:1.1em;color:#3366ff\">how many percentage of people are vaccinated across Indian states","608eb247":"\n* https:\/\/online.stat.psu.edu\/stat501\/lesson\/14\/14.1\n* https:\/\/www.kaggle.com\/prashant111\/arima-model-for-time-series-forecasting \n* https:\/\/www.youtube.com\/watch?v=FPM6it4v8MY  Time series concepts\n* https:\/\/people.duke.edu\/~rnau\/411home.htm\n* https:\/\/api.covid19india.org\/ # for Dataset\n* https:\/\/ourworldindata.org\/covid-vaccinations # for Dataset","4dbbae1b":"# Reference\n","3d81855a":"## ACF and Pacf \n\n### acf and pacf values \n\n* P =1\n* d =0\n* q =1\n* Seasonal = 7","060125fa":"# Model evaluation RMSE"}}