{"cell_type":{"0a2047d6":"code","b7f12230":"code","df8cd373":"code","bc639400":"code","c2b4f68d":"code","6dd08b1c":"code","cea752ad":"code","9467735a":"code","5ce0f0b8":"code","bdaf8463":"code","749ad663":"markdown"},"source":{"0a2047d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7f12230":"import pandas as pd\n\ndataset = pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')","df8cd373":"dataset['Sex'] = dataset['Sex'].replace({'M' : 0})\ndataset['Sex'] = dataset['Sex'].replace({'F' : 1})\n\ndataset['ST_Slope'] = dataset['ST_Slope'].replace({'Up' : 0})\ndataset['ST_Slope'] = dataset['ST_Slope'].replace({'Flat' : 1})\ndataset['ST_Slope'] = dataset['ST_Slope'].replace({'Down' : 2})\n\ndataset['ChestPainType'] = dataset['ChestPainType'].replace({'ATA' : 0})\ndataset['ChestPainType'] = dataset['ChestPainType'].replace({'NAP' : 1})\ndataset['ChestPainType'] = dataset['ChestPainType'].replace({'ASY' : 3})\ndataset['ChestPainType'] = dataset['ChestPainType'].replace({'TA' : 4})\n\n\ndataset.to_csv(r'F:\\heart.csv', index=False)\ndataset.describe()","bc639400":"dataset = dataset.dropna(axis = 0)\ndataset.describe()","c2b4f68d":"y = dataset.HeartDisease\nprint(y)","6dd08b1c":"data_features = ['Age', 'Sex', 'ChestPainType', 'RestingBP' , 'Cholesterol', 'FastingBS', 'Oldpeak' ,  'ST_Slope']\nX = dataset[data_features]","cea752ad":"X.describe()","9467735a":"X.head()","5ce0f0b8":"X.head()","bdaf8463":"data_model.predict()","749ad663":"from sklearn.tree import DecisionTreeRegressor\n\ndata_model = DecisionTreeRegressor(random_state = 1)\n\ndata_model.fit(X,y)"}}