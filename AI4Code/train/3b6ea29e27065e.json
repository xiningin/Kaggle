{"cell_type":{"4ed369a8":"code","08e9891f":"code","3a4efeb7":"code","c4071d8e":"code","729481d8":"code","46e82adc":"code","f737bc5a":"code","3a9e552f":"code","3e02eda7":"code","b9fe03b6":"code","192fe093":"code","b123ef1d":"code","a8040a1d":"code","76c8d72a":"code","56b5231a":"code","d00c570d":"code","a0b0488b":"code","6fa8bbc6":"code","3fc8d2be":"code","41022b42":"code","e8130473":"code","7e2aeab1":"code","b3498271":"code","cbb6e995":"code","0032622d":"code","7111010c":"code","c4efbd90":"code","3f66f2c2":"code","56db67c0":"code","c6994326":"code","eac55679":"code","17069b7a":"code","4c1ed72a":"code","e85df810":"code","2305ff20":"code","a0ca4564":"code","c7b5cdb4":"code","4d9ff849":"code","d53291c0":"code","f9be33c5":"code","7c52290e":"code","d6aefa81":"code","88a8f4d0":"code","df6100c8":"code","b9b4cd07":"code","b8269778":"code","ccf8c659":"code","975bad65":"code","04d54901":"code","407ba28e":"code","e16bedcf":"code","f1f0fd8f":"code","dcf0f0ff":"code","eb56c282":"code","8f5e489c":"code","7577a34d":"code","9d2e3b72":"code","ed5beaf5":"code","3a3d6c2c":"code","8ee222d0":"code","922575fb":"code","cf9556a1":"code","f4ecc472":"code","ff3b04a5":"code","ea69b4fc":"code","aa6d0c8e":"code","8b97ef82":"code","eefa44dd":"code","7fe35e72":"code","1c8c5c97":"code","0714146c":"code","f8a6854e":"code","91bcc3fa":"code","e6a0c4c3":"code","11b6b2eb":"code","766e4b66":"code","4ed64365":"code","4d1ae903":"code","d12abc1c":"code","0aa44e00":"code","646b8406":"code","543a4137":"code","e78a7539":"code","165312ae":"code","a20e62f7":"markdown","305f6792":"markdown","64a9f7de":"markdown","12b53732":"markdown","cc7d6993":"markdown","8d5fd1f4":"markdown","decf8ff1":"markdown","ca0dd1e9":"markdown","8b41de79":"markdown","a296574d":"markdown","a1d9b298":"markdown","bdd6b4eb":"markdown","6321e8be":"markdown"},"source":{"4ed369a8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport lightgbm as lgb\nfrom sklearn.metrics import mean_squared_error\nfrom tqdm import tqdm\nimport gc","08e9891f":"#============================#\ndef get_cat(inp):\n    tokens = inp.split(\"_\")\n    return tokens[0]\n#============================#\ndef get_dept(inp):\n    tokens = inp.split(\"_\")\n    return tokens[0] + \"_\" + tokens[1]\n#============================#","3a4efeb7":"#Building all the aggregation levels","c4071d8e":"l12 = pd.read_csv(\"..\/input\/m5-forecasting-uncertainty\/sales_train_evaluation.csv\")","729481d8":"l12.head()","46e82adc":"\nl12.id = l12.id.str.replace('_evaluation', '')","f737bc5a":"l12.head()","3a9e552f":"COLS = [f\"d_{i+1}\" for i in range(1941)]","3e02eda7":"%%time\nprint(\"State & Item\")\nl11 = l12.groupby(['state_id','item_id']).sum().reset_index()\nl11[\"store_id\"] = l11[\"state_id\"]\nl11[\"cat_id\"] = l11[\"item_id\"].apply(get_cat)\nl11[\"dept_id\"] = l11[\"item_id\"].apply(get_dept)\nl11[\"id\"] = l11[\"state_id\"] + \"_\" + l11[\"item_id\"]\nprint(\"Item\")\nl10 = l12.groupby('item_id').sum().reset_index()\nl10['id'] = l10['item_id'] + '_X'\nl10[\"cat_id\"] = l10[\"item_id\"].apply(get_cat)\nl10[\"dept_id\"] = l10[\"item_id\"].apply(get_dept)\nl10[\"store_id\"] = 'X'\nl10[\"state_id\"] = 'X'\nprint(\"Store & Dept\")\nl9 = l12.groupby(['store_id','dept_id']).sum().reset_index()\nl9[\"cat_id\"] = l9[\"dept_id\"].apply(get_cat)\nl9[\"state_id\"] = l9[\"store_id\"].apply(get_cat)\nl9[\"item_id\"] = l9[\"dept_id\"]\nl9[\"id\"] = l9[\"store_id\"] + '_' + l9[\"dept_id\"]\nprint(\"Store & Cat\")\nl8 = l12.groupby(['store_id','cat_id']).sum().reset_index()\nl8['dept_id'] = l8['cat_id']\nl8['item_id'] = l8['cat_id']\nl8['state_id'] = l8['store_id'].apply(get_cat)\nl8[\"id\"] = l8[\"store_id\"] + '_' + l8[\"cat_id\"]\nprint(\"State & Dept\")\nl7 = l12.groupby(['state_id','dept_id']).sum().reset_index()\nl7[\"store_id\"] = l7[\"state_id\"]\nl7[\"cat_id\"] = l7[\"dept_id\"].apply(get_cat)\nl7[\"item_id\"] = l7[\"dept_id\"]\nl7[\"id\"] = l7[\"state_id\"] + '_' + l7[\"dept_id\"]\nprint(\"State & Cat\")\nl6 = l12.groupby(['state_id','cat_id']).sum().reset_index()\nl6[\"store_id\"] = l6[\"state_id\"]\nl6[\"dept_id\"] = l6[\"cat_id\"]\nl6[\"item_id\"] = l6[\"cat_id\"]\nl6[\"id\"] = l6[\"state_id\"] + \"_\" + l6[\"cat_id\"]\nprint(\"Dept\")\nl5 = l12.groupby('dept_id').sum().reset_index()\nl5[\"cat_id\"] = l5[\"dept_id\"].apply(get_cat)\nl5[\"item_id\"] = l5[\"dept_id\"]\nl5[\"state_id\"] = \"X\"\nl5[\"store_id\"] = \"X\"\nl5[\"id\"] = l5[\"dept_id\"] + \"_X\"\nprint(\"Cat\")\nl4 = l12.groupby('cat_id').sum().reset_index()\nl4[\"store_id\"] = l4[\"cat_id\"]\nl4[\"item_id\"] = l4[\"cat_id\"]\nl4[\"store_id\"] = \"X\"\nl4[\"state_id\"] = \"X\"\nl4[\"id\"] = l4[\"cat_id\"] + \"_X\"\nprint(\"Store\")\nl3 = l12.groupby('store_id').sum().reset_index()\nl3[\"state_id\"] = l3[\"store_id\"].apply(get_cat)\nl3[\"cat_id\"] = \"X\"\nl3[\"dept_id\"] = \"X\"\nl3[\"item_id\"] = \"X\"\nl3[\"id\"] = l3[\"store_id\"] + \"_X\"\nprint(\"State\")\nl2 = l12.groupby('state_id').sum().reset_index()\nl2[\"store_id\"] = l2[\"state_id\"]\nl2[\"cat_id\"] = \"X\"\nl2[\"dept_id\"] = \"X\"\nl2[\"item_id\"] = \"X\"\nl2[\"id\"] = l2[\"state_id\"] + \"_X\"\nprint(\"Total\")\nl1 = l12[COLS].sum(axis=0).values\nl1 = pd.DataFrame(l1).T\nl1.columns = COLS\nl1[\"id\"] = 'Total_X'\nl1['state_id'] = 'X'\nl1['store_id'] = 'X'\nl1['cat_id'] = 'X'\nl1['dept_id'] = 'X'\nl1['item_id'] = 'X'","b9fe03b6":"l11.head()","192fe093":"df = pd.DataFrame()\ndf = df.append([l12, l11, l10, l9, l8, l7, l6, l5, l4, l3, l2, l1])","b123ef1d":"df.shape","a8040a1d":"sub = pd.read_csv(\"..\/input\/m5-forecasting-uncertainty\/sample_submission.csv\")\nsub['id'] = sub.id.str.replace('_evaluation', '')\ngrps =sub.iloc[-42840:, 0].unique()\ngrps = [col.replace(\"_0.995\",\"\") for col in grps]","76c8d72a":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, df[col].nunique())","56b5231a":"#Computing scale and start date","d00c570d":"X = df[COLS].values","a0b0488b":"X = df[COLS].values\nx = (X>0).cumsum(1)\nx = x>0\nst = x.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X[:,1:] - X[:,:-1])\nnorm = diff.sum(1) \/ den","6fa8bbc6":"st","3fc8d2be":"df[\"start\"] = st\ndf[\"scale\"] = norm","41022b42":"df.head(5)","e8130473":"plt.plot(X[-1]\/norm[-1])\nplt.show()","7e2aeab1":"df.to_csv(\"sales.csv\", index=False)","b3498271":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l11[col].nunique())","cbb6e995":"X_State_Item = l11[COLS].values","0032622d":"\nx1 = (X_State_Item>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_State_Item[:,1:] - X_State_Item[:,:-1])\nnorm = diff.sum(1) \/ den","7111010c":"l11[\"start\"] = st\nl11[\"scale\"] = norm\nl11.head()","c4efbd90":"l11.to_pickle('State_Item_1.pkl')\n#l11.to_csv('State_Item_1.csv')","3f66f2c2":"l11.head()","56db67c0":"l11.info()","c6994326":"del l11","eac55679":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l1[col].nunique())","17069b7a":"X_Total = l1[COLS].values","4c1ed72a":"X_Total","e85df810":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","2305ff20":"l1[\"start\"] = st\nl1[\"scale\"] = norm\nl1.head()","a0ca4564":"l1.to_pickle('TotalSales.pkl')","c7b5cdb4":"del l1","4d9ff849":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l10[col].nunique())","d53291c0":"X_Total = l10[COLS].values","f9be33c5":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","7c52290e":"l10[\"start\"] = st\nl10[\"scale\"] = norm\nl10.head()","d6aefa81":"l10.to_pickle('Items.pkl')","88a8f4d0":"del l10","df6100c8":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l9[col].nunique())","b9b4cd07":"X_Total = l9[COLS].values","b8269778":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","ccf8c659":"l9[\"start\"] = st\nl9[\"scale\"] = norm\nl9.head()","975bad65":"l9.to_pickle('Store_Dept.pkl')","04d54901":"del l9","407ba28e":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l8[col].nunique())","e16bedcf":"X_Total = l8[COLS].values","f1f0fd8f":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","dcf0f0ff":"l8[\"start\"] = st\nl8[\"scale\"] = norm\nl8.head()","eb56c282":"l8.to_pickle('Store_Cat.pkl')","8f5e489c":"del l8","7577a34d":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l7[col].nunique())","9d2e3b72":"X_Total = l7[COLS].values","ed5beaf5":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","3a3d6c2c":"l7[\"start\"] = st\nl7[\"scale\"] = norm\nl7.head()","8ee222d0":"l7.to_pickle('State_Dept.pkl')","922575fb":"del l7","cf9556a1":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l6[col].nunique())","f4ecc472":"X_Total = l6[COLS].values","ff3b04a5":"\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","ea69b4fc":"l6[\"start\"] = st\nl6[\"scale\"] = norm\nl6.head()","aa6d0c8e":"l6.to_pickle('State_Category.pkl')","8b97ef82":"del l6","eefa44dd":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l5[col].nunique())","7fe35e72":"X_Total = l5[COLS].values\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","1c8c5c97":"l5[\"start\"] = st\nl5[\"scale\"] = norm\nl5.head()","0714146c":"l5.to_pickle('Department.pkl')\ndel l5","f8a6854e":"l4","91bcc3fa":"for col in ['id','item_id','cat_id','store_id','state_id']:\n    print(col, l4[col].nunique())","e6a0c4c3":"X_Total = l4[COLS].values\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","11b6b2eb":"l4[\"start\"] = st\nl4[\"scale\"] = norm\nl4.head()","766e4b66":"l4.to_pickle('Category.pkl')\ndel l4","4ed64365":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l3[col].nunique())","4d1ae903":"X_Total = l3[COLS].values\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","d12abc1c":"l3[\"start\"] = st\nl3[\"scale\"] = norm\nl3.head()","0aa44e00":"l3.to_pickle('Store.pkl')\ndel l3","646b8406":"for col in ['id','item_id','dept_id','cat_id','store_id','state_id']:\n    print(col, l2[col].nunique())","543a4137":"X_Total = l2[COLS].values\nx1 = (X_Total>0).cumsum(1)\nx1 = x1>0\nst = x1.argmax(1)\nden = 1941 - st - 2\ndiff = np.abs(X_Total[:,1:] - X_Total[:,:-1])\nnorm = diff.sum(1) \/ den","e78a7539":"l2[\"start\"] = st\nl2[\"scale\"] = norm\nl2.head()","165312ae":"l2.to_pickle('State.pkl')\ndel l2","a20e62f7":"# 11. State","305f6792":"# 3.Adding Item Details","64a9f7de":"**Cumsum function generally take the sum from day 1 to day 1941 with respect to last value whether it is 0 0r not and then sum it for example:d1=d1, d2=d1+d2, d3=d1+d2+d3 and so on**\n\n<hr>\nx=x>1 will give true and false value for each cell","12b53732":"**2.Adding Total Sales**","cc7d6993":"# 10. Store","8d5fd1f4":"# 6.State & Dept","decf8ff1":"# 8.Department","ca0dd1e9":"# 5.Store and Category","8b41de79":"\n**1.Getting State and Item Details seperately**","a296574d":"# 7. State&Category","a1d9b298":"# 9. Category","bdd6b4eb":"# Here we have used Gradient Bossting aaproach Total Sales cases:\n\n<hr>\n\n1. Data Preparation for all levels of Aggregation is done at this notebook: https:\/\/www.kaggle.com\/kamalnaithani\/m5unceratinityadddata\n2. With this approach we can merge sales level data as well\n3. Link for each hierachy seperate level is : https:\/\/www.kaggle.com\/kamalnaithani\/m5uncertainity-total-gradient-boosting\n4. Applying gradient boosting approcah and mergin the output of all final models\n5. Do upvote in case you find this notebook helpful\n","6321e8be":"# 4.Store and Department"}}