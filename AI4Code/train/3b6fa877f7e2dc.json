{"cell_type":{"23bcf856":"code","2ee53a56":"code","4ee16a1f":"code","6c2ce036":"code","9ca4af18":"code","4e259e2d":"code","f41e2518":"code","5d912c80":"code","c800d7a9":"code","de02fbbf":"code","4a2f4793":"code","665d5f09":"code","85b199a4":"code","e5987a4b":"code","022450c5":"code","1935068c":"code","04942313":"code","d7bd548d":"code","2cb10ccd":"code","b1523945":"code","1ba8e666":"code","00417067":"code","25788dca":"code","1af92271":"code","23030059":"code","621e45ca":"code","7f569e5f":"code","cf7725cd":"code","2dc648d0":"code","f1d09f00":"code","ab8fa8b1":"code","f509a30a":"code","1f05c018":"code","b25e7fdb":"code","0d1dc2b4":"code","3dc47bf9":"code","e0ea96b7":"code","0391c4e4":"code","f096a6b8":"code","d233f551":"code","b83d8a53":"markdown","8186297c":"markdown","542dd91d":"markdown","347fbcfa":"markdown","92516d52":"markdown","7289ae9c":"markdown","7cc7f298":"markdown","ccbe780f":"markdown","e86427d7":"markdown","96471ce2":"markdown","7ebae641":"markdown","f2aa7b18":"markdown","0caf20af":"markdown"},"source":{"23bcf856":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2ee53a56":"import pandas as pd\n\npathfile = '..\/input\/diabetes.csv'\nmydata = pd.read_csv(pathfile)\n\n","4ee16a1f":"mydata.head()","6c2ce036":" mydata.tail()","9ca4af18":"mydata.describe()","4e259e2d":"mydata.info()","f41e2518":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","5d912c80":"#mdata= mydata.drop['Age', 'Outcome', 'DiabetesPedigreeFunction']","c800d7a9":"plt.figure(figsize=(16,6))\n#sns.lineplot(data=mydata)","de02fbbf":"y = mydata.DiabetesPedigreeFunction","4a2f4793":"mydata.columns","665d5f09":"features=['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'Age', 'Outcome']\n   \nX=mydata[features]","85b199a4":"from sklearn.model_selection import train_test_split\nX_train,X_valid, y_train,  y_valid= train_test_split(X,y,random_state=1)","e5987a4b":"from sklearn.ensemble import RandomForestRegressor","022450c5":"marammodel = RandomForestRegressor()\nmarammodel.fit(X_train, y_train)","1935068c":"y_predict = marammodel.predict(X_valid)","04942313":"from sklearn.metrics import mean_absolute_error\nprint(\"MAE=\", mean_absolute_error(y_valid, y_predict))","d7bd548d":"# Set the width and height of the figure\nplt.figure(figsize=(14,6))\n\n# Add title\nplt.title(\"Lineplot\")\n\n# Line chart showing BloodPressurev\nsns.lineplot(data=mydata['BloodPressure'], label=\"Blood\")\n\n# Line chart showing Age'\nsns.lineplot(data=mydata['Age'], label=\"Age\")","2cb10ccd":"#Figure Size\nplt.figure(figsize= (16,4))\n\n#title\nplt.title('Trends of Skin Thickness and Age')\nsns.lineplot(x=\"Age\", y=\"SkinThickness\", data= mydata)\n\nplt.show()","b1523945":"sns.lineplot(data=mydata['DiabetesPedigreeFunction'], label=\"Diabetes Pedigree Function\")","1ba8e666":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Relationship between Age and  DiabetesPedigreeFunction\")\n\n# Bar chart \nsns.barplot(x=mydata.head()['Age'], y=mydata.head()['DiabetesPedigreeFunction'])\n\n# Add label for vertical axis\nplt.ylabel(\"DiabetesPedigreeFunction\")","00417067":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\n# Add title\nplt.title(\"Heatmap of Dataset\")\n\n# Heatmap \nsns.heatmap(data=mydata.head(), annot=True)\n\n# Add label for horizontal axis\nplt.xlabel(\"Airline\")","25788dca":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\nsns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'])","1af92271":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\nsns.regplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'])","23030059":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\nsns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'], hue=mydata['Glucose'])","621e45ca":"plt.figure(figsize=(14,7))\n\nsns.scatterplot(x=mydata['BloodPressure'], y=mydata['Glucose'], hue=mydata['Age'])","7f569e5f":"# Set the width and height of the figure\n#plt.figure(figsize=(14,7))\n\nsns.scatterplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'], hue=mydata['Outcome'])","cf7725cd":"# Set the width and height of the figure\nplt.figure(figsize=(16,4))\n\nsns.lmplot(x=\"DiabetesPedigreeFunction\", y=\"Age\", hue=\"Outcome\", data=mydata)","2dc648d0":"sns.swarmplot(x=mydata['DiabetesPedigreeFunction'], y=mydata['Age'])","f1d09f00":"# Histogram \nsns.distplot(a=mydata['BloodPressure'], kde=False)","ab8fa8b1":"sns.kdeplot(data=mydata['BloodPressure'], shade=True)","f509a30a":"# 2D KDE plot\nsns.jointplot(x=mydata['BloodPressure'], y=mydata['Age'], kind=\"kde\")","1f05c018":"# Histograms for each species\nsns.distplot(a=mydata['Glucose'], label=\"Glucose\", kde=False)\nsns.distplot(a=mydata['BloodPressure'], label=\"BloodPressure\", kde=False)\nsns.distplot(a=mydata['SkinThickness'], label=\"SkinThickness\", kde=False)\n\n# Add title\nplt.title(\"Histogram of data\")\n\n# Force legend to appear\nplt.legend()","b25e7fdb":"# Histograms for each species\nsns.kdeplot(data=mydata['Glucose'], label=\"Glucose\", shade=True)\nsns.kdeplot(data=mydata['BloodPressure'], label=\"BloodPressure\", shade=True)\nsns.kdeplot(data=mydata['SkinThickness'], label=\"SkinThickness\", shade=True)\n\n# Add title\nplt.title(\"Histogram of data\")\n\n# Force legend to appear\nplt.legend()","0d1dc2b4":"sns.set(style=\"ticks\")\n\n#df = sns.mydata(\"\")\nsns.pairplot(mydata, hue=\"Age\")","3dc47bf9":"plt.figure(figsize=(14,7))\n# Draw a violinplot \nsns.violinplot(data=mydata.head(), palette=\"Set3\", bw=.5, cut=1, linewidth=2)","e0ea96b7":"# Initialize the figure\nf, ax = plt.subplots()\nsns.despine(bottom=True, left=True)\n\n# Show each observation with a scatterplot\nsns.stripplot(x=\"Age\", y=\"BloodPressure\", hue=\"Outcome\",\n              data=mydata.head(35), dodge=True, jitter=True,\n              alpha=.25, zorder=1)\n\n# Show the conditional means\nsns.pointplot(x=\"Age\", y=\"BloodPressure\", hue=\"Outcome\",\n              data=mydata.head(35), dodge=.532, join=False, palette=\"dark\",\n              markers=\"d\", scale=.75, ci=None)\n","0391c4e4":"# Set up a grid of axes with a polar projection\ng = sns.FacetGrid(mydata.head(), col=\"Age\", hue=\"Outcome\",\n                  subplot_kws=dict(projection='polar'), height=4.5,\n                  sharex=False, sharey=False, despine=False)\n\n# Draw a scatterplot onto each axes in the grid\ng.map(sns.scatterplot, \"BloodPressure\", \"Glucose\")","f096a6b8":"# Draw a nested boxplot \nsns.boxplot(x=\"BloodPressure\", y=\"Age\",\n            hue=\"Outcome\", palette=[\"m\", \"g\"],\n            data=mydata.head(25))\nsns.despine(offset=10, trim=True)","d233f551":"\n\n# Draw the full plot\nsns.clustermap(mydata.corr(), center=0, cmap=\"vlag\",\n            \n               linewidths=.75, figsize=(13, 13))","b83d8a53":"**Violinplot**","8186297c":"# KDE plot \n","542dd91d":"**Discovering structure in heatmap data**\n","347fbcfa":"**Heatmap**\n\nIn the code cell below, we create a heatmap to quickly visualize patterns in dataset. Each cell is color-coded according to its corresponding value.","92516d52":"**PairPlot**","7289ae9c":"**Visualization data with LinePlot**","7cc7f298":"**Striplot**","ccbe780f":"**Scatter plots**\n\n\nTo create a simple scatter plot, we use the sns.scatterplot command and specify the values","e86427d7":" the strength of the relationship,  add a regression line, or the line that best fits the data. We do this by changing the command to sns.regplot","96471ce2":"boxplot","7ebae641":"**Histograms**\n\n\ncreate a histogram to see how BloodPressure varies in dataset. We can do this with the sns.distplot command.","f2aa7b18":"**Bar chart**\n\n create a bar chart showing the  Age and  DiabetesPedigreeFunction","0caf20af":"**#FacePlot**"}}