{"cell_type":{"718aaad6":"code","93099726":"code","13671bac":"code","ee16b501":"code","9430f645":"code","153208f1":"code","ff764d87":"code","70e9043f":"code","901ff07b":"code","7e520b99":"code","1af2f6f3":"code","49db6ad8":"code","27ad9d6b":"code","2b953c74":"code","c44de44b":"code","f7a9e32f":"code","c29b8359":"code","c52a7e0c":"code","977d9645":"markdown","4c56665f":"markdown","2fd951bd":"markdown","926b9f87":"markdown","12346c82":"markdown","65e0b3bf":"markdown","b5af9176":"markdown","0703f2bb":"markdown"},"source":{"718aaad6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93099726":"data=pd.read_csv(\"\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv\")\ndf=data[data.Year>=1995]\ns=len(df)\ndf.index=range(0,s,1)\n                 ","13671bac":"df.columns","ee16b501":"df.describe()","9430f645":"df.head()","153208f1":"df.info()","ff764d87":"# line plot\nplt.plot(df.ID,df.Height,label=\"Height\")\nplt.xlabel(\"ID number\")\nplt.ylabel(\"Height of Athlets(cm)\")\nplt.legend()\nplt.show()","70e9043f":"#scatter plot\nplt.scatter(df.Height,df.Weight)\nplt.xlabel(\"Height\")\nplt.ylabel(\"Weight\")\nplt.legend()\nplt.show()","901ff07b":"#histogram\nplt.hist(df.Year)\nplt.ylabel(\"Frequency\")\nplt.xlabel(\"Years\")\nplt.legend()\nplt.show()","7e520b99":"#subplot\nplt.subplot(3,1,1)\nplt.plot(df.ID,df.Height,label=\"Height\")\nplt.legend()\nplt.subplot(3,1,2)\nplt.scatter(df.Height,df.Weight)\nplt.legend()\nplt.subplot(3,1,3)\nplt.hist(df.Year)\nplt.show()","1af2f6f3":"# pie plot1\n#sex rate\nlabels=df.Sex.value_counts().index\nexplode=[0,0]\nsizes=df.Sex.value_counts().values\nplt.pie(sizes,explode,labels,autopct=\"%1.1f%%\")\nplt.show()","49db6ad8":"#pie plot2\n#seasons rate\nlabels=df.Season.value_counts().index\nexplode=[0.2,0.2]\nsizes=df.Season.value_counts().values\nplt.pie(sizes,explode,labels,autopct=\"%1.1f%%\")\nplt.show()","27ad9d6b":"#bar plot1\nteam_list=list(df.NOC.unique())\n\ntks=[]\nfor i in team_list:\n    k=df[df.NOC==i]\n    sx=len(k)\n    tks.append(sx)\n\nnew_data=pd.DataFrame({\"team_list\":team_list,\"TKS\":tks})\nsorted_data=new_data.sort_values(\"TKS\",ascending=False)\n\nplt.figure(figsize=(25,20))\nsns.barplot(x=sorted_data.team_list,y=sorted_data.TKS)   \nplt.xticks(rotation=90)    \nplt.xlabel=(\"Teams\")\nplt.ylabel(\"Total Number of Athlets\")\nplt.title(\"1996 y\u0131l\u0131ndan 2016 y\u0131l\u0131na kadar olimpiyat sporcular\u0131n\u0131n \u00fclkelere g\u00f6re da\u011f\u0131l\u0131\u015f grafi\u011fi\")\nplt.show()","2b953c74":"#bar plot2\nyear_list=list(df.Year.unique())\n\nyks=[]\nfor i in year_list:\n    gecici=df[df.Year==i]\n    sx=len(gecici)\n    yks.append(sx)\n\nnew_data=pd.DataFrame({\"year_list\":year_list,\"TKS\":yks})\nsorted_data=new_data.sort_values(\"TKS\",ascending=False)\n    \n#visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data.year_list,y=sorted_data.TKS)\nplt.xticks(rotation=90)\nplt.ylabel(\"TKS\")\nplt.title(\"1996'dan 2016'ya kadar y\u0131llara g\u00f6re kat\u0131l\u0131mc\u0131 say\u0131s\u0131\")\nplt.show()","c44de44b":"#bar plot3\nsport_list=list(df.Sport.unique())\n\nyks=[]\nfor i in sport_list:\n    gecici=df[df.Sport==i]\n    sx=len(gecici)\n    yks.append(sx)\n\nnew_data=pd.DataFrame({\"sport_list\":sport_list,\"TKS\":yks})\nsorted_data=new_data.sort_values(\"TKS\",ascending=False)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data.sport_list,y=sorted_data.TKS)\nplt.xticks(rotation=90)\nplt.ylabel(\"TKS\")\nplt.title(\"1996'dan 2016'ya spor dallar\u0131na g\u00f6re kat\u0131l\u0131mc\u0131 say\u0131s\u0131\")\nplt.show()","f7a9e32f":"#point plot\nplt.figure(figsize=(15,10))\nsns.pointplot(x=sorted_data.sport_list,y=sorted_data.TKS)\nplt.xticks(rotation=90)\nplt.ylabel(\"TKS\")\nplt.show()","c29b8359":"#heatmap\nplt.figure(figsize=(25,20))\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(df.corr(),annot=True,linewidths=.5,fmt=\".1f\")\nplt.show()","c52a7e0c":"#boxplot\nplt.figure(figsize=(15,10))\nsns.boxplot(x=df.Sex,y=df.Age)\nplt.show()","977d9645":"Matplotlib and Seaborn Library","4c56665f":"<a id=\"1\"><\/a>\n## 1.Load and Check Data   \n","2fd951bd":"<a id=\"4\"><\/a>\n## Matplotlib","926b9f87":"<a id=\"5\"><\/a>\n## Seaborn","12346c82":"<a id=\"2\"><\/a>\n## 2.Variable Description","65e0b3bf":"<a id=\"3\"><\/a>\n## 3.Visualization","b5af9176":"1. ID:Identity Number\n1. Name:Name\n1. Sex:Gender of athletes\n1. Age:Age of athletes\n1. Heigt:Height of athletes\n1. Weight:Weight of athletes\n1. Team:Country of athletes\n1. NOC:Country abbreviation\n1. Games:Games Name\n1. Year:When\n1. Season:Winter or Summer\n1. City:Place\n1. Sport:Branch\n1. Event:Men's or women's\n1. Medal:Gold,Silver,Bronze or NaN\n","0703f2bb":"# Introduction\nHi everybody.I write this kernel for Python skills improve.I apologize everyone for my bad English.\nThe kernel will show you 20 years of olympic data using the Matplotlip and seaborn Libraries.Yes 20 years(1996-2016).\nWe wont used all data.\n<font color=\"blue\">\nContent:    \n    1.[Load and Check Data](#1)<br>\n    2.[Variable Description](#2)<br>\n    3.[Visualization](#3)<br>\n* [Matplotlib](#4)<br>\n* [Seaborn](#5)    \n"}}