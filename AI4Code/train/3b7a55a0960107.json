{"cell_type":{"b65ce263":"code","819743eb":"code","e2e5e039":"code","6718fff1":"code","f26eaf04":"code","79c6ec34":"code","3c5e5be1":"code","9d743f8f":"markdown","5f5b05b7":"markdown","3c0019c7":"markdown","13460ec3":"markdown","c208bf35":"markdown"},"source":{"b65ce263":"pip install openpyxl","819743eb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\ndf_ = pd.read_excel(\"..\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\",engine='openpyxl')\n\ndf=df_.copy()\ndf.head()","e2e5e039":"#essiz urun sayisi:\ndf[\"Description\"].nunique()\n\n# hangi urunden kacar tane:\ndf[\"Description\"].value_counts().head()\n\n# en cok siparis edilen urun:\ndf.groupby(\"Description\").agg({\"Quantity\": \"sum\"}).head()\n\n# yukar\u0131daki \u00e7\u0131kt\u0131y\u0131 nasil siralariz?\ndf.groupby(\"Description\").agg({\"Quantity\": \"sum\"}).sort_values(\"Quantity\", ascending=False).head()\n\n# toplam kac fatura kesilmi\u015ftir?\ndf[\"Invoice\"].nunique()\n\n# fatura basina ortalama kac para kazanilmistir? ,\n# (iki de\u011fi\u015fkeni \u00e7arparak yeni bir de\u011fi\u015fken olu\u015fturmak gerekmektedir)\n# iadeleri \u00e7\u0131kararak yeniden df'i olu\u015ftural\u0131m\ndf= df[~df[\"Invoice\"].str.contains(\"C\", na=False)] #iadeleri \u00e7\u0131kard\u0131k\n\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\n\n#en pahali urunler:\ndf.sort_values(\"Price\",ascending=False).head()\n\n# hangi ulkeden kac siparis geldi?\ndf[\"Country\"].value_counts()\n\n# hangi ulke ne kadar kazand\u0131rd\u0131?\ndf.groupby(\"Country\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\",ascending=False).head()\n\ndf.isnull().sum()\ndf.dropna(inplace=True)\n\ndf.describe([0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95, 0.99]).T\n","6718fff1":"#RFM Calculating\nimport datetime as dt\n\ndf[\"InvoiceDate\"].max() # veri setindeki max tarih Timestamp('2011-12-09 12:50:00')\ntoday_date = dt.datetime(2011, 12, 11)\n\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                     'Invoice': lambda num: len(num),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\nrfm.columns= ['Recency', 'Frequency', 'Monetary']\n\nrfm = rfm[(rfm[\"Monetary\"]) > 0 & (rfm[\"Frequency\"] > 0)] #iki tane monetory s\u0131f\u0131r de\u011fer vard\u0131\nrfm","f26eaf04":"#rfm scores\n\nrfm[\"RecencyScore\"]= pd.qcut(rfm['Recency'],5,labels=[5, 4, 3, 2, 1]) #qcut k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe s\u0131ralar\n\nrfm\n\nrfm[\"FrequencyScore\"] = pd.qcut(rfm['Frequency'], 5, labels=[1, 2, 3, 4, 5])\n\nrfm[\"MonetaryScore\"] = pd.qcut(rfm['Monetary'], 5, labels=[1, 2, 3, 4, 5])\n\nrfm[\"RFM_SCORE\"] = (rfm['RecencyScore'].astype(str) +\n                    rfm['FrequencyScore'].astype(str) +\n                    rfm['MonetaryScore'].astype(str))\n\nrfm[rfm[\"RFM_SCORE\"] == \"555\"].head()","79c6ec34":"# RFM isimlendirmesi\nseg_map = {\n    r'[1-2][1-2]': 'Hibernating',\n    r'[1-2][3-4]': 'At_Risk',\n    r'[1-2]5': 'Cant_Loose',\n    r'3[1-2]': 'About_to_Sleep',\n    r'33': 'Need_Attention',\n    r'[3-4][4-5]': 'Loyal_Customers',\n    r'41': 'Promising',\n    r'51': 'New_Customers',\n    r'[4-5][2-3]': 'Potential_Loyalists',\n    r'5[4-5]': 'Champions'\n}\n\nrfm\n\nrfm['Segment'] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str)\nrfm['Segment'] = rfm['Segment'].replace(seg_map, regex=True)","3c5e5be1":"rfm[[\"Segment\", \"Recency\", \"Frequency\", \"Monetary\"]].groupby(\"Segment\").agg([\"mean\", \"count\"])","9d743f8f":"Bu a\u015famadan sonra Recency, Frequency, Monetary de\u011ferlerinin mean ve count bilgilerini de g\u00f6r\u00fcnt\u00fcleyebiliriz.","5f5b05b7":"today_date, son al\u0131\u015fveri\u015f yap\u0131lan tarihten iki g\u00fcn sonra olarak tan\u0131mland\u0131.\n\nRecency de\u011ferine bug\u00fcn\u00fcn tarihinden en son sat\u0131n alma tarihini \u00e7\u0131kararak eri\u015fmi\u015f olduk. Customer ID de\u011feri ile yapt\u0131\u011f\u0131m\u0131z groupby i\u015flemi sonucunda Recency, Frequency, Monetary de\u011ferlerini elde etmi\u015f olduk ve bunlar\u0131 isimlendirdik.","3c0019c7":"Segmentlere ay\u0131rma a\u015famas\u0131nda ise, qcut fonksiyonunu kulland\u0131k. Bu sayede Recency, Frequency ve Monetary tablosu alt\u0131nda bulunan t\u00fcm de\u011ferler 5 ayr\u0131 gruba ayr\u0131lm\u0131\u015f oldu.\n\nRFM_SCORE isimli bir de\u011fi\u015fken olu\u015fturarak buldu\u011fumuz de\u011ferleri birle\u015ftirdik. Birle\u015ftirme i\u015fleminin ger\u00e7ekle\u015fmesi i\u00e7in, elimizdeki de\u011ferleri astype(str) ile string\u2019e \u00e7evirdik.","13460ec3":"RFM, Yenilik(Recency), S\u0131kl\u0131k(Frequency) ve Parasal De\u011fer(Monetary) anlam\u0131na gelir.\n\n\n![rfm1.jpg](attachment:rfm1.jpg)","c208bf35":"Yenilik(Recency), bir m\u00fc\u015fterinin ma\u011fazan\u0131zdan ne kadar yak\u0131n zamanda sat\u0131n alma i\u015flemi ger\u00e7ekle\u015ftirdi\u011fi bilgisini verir.\n\nS\u0131kl\u0131k(Frequency), bir m\u00fc\u015fterinin sizden ne s\u0131kl\u0131kla sat\u0131n alma yapt\u0131\u011f\u0131 ile ilgili de\u011ferdir.\n\nParasal De\u011fer(Monetary), bir m\u00fc\u015fterinin ma\u011fazan\u0131zda harcad\u0131\u011f\u0131 para miktar\u0131 anlam\u0131na gelir.\n\nBu \u00fc\u00e7 parametre ile birlikte, m\u00fc\u015fteri bazl\u0131 segmentasyon yapabiliriz. \u00d6rne\u011fin;\n\n*-en sad\u0131k m\u00fc\u015fteriniz kim?*\n\n*-hangi m\u00fc\u015fterilerinizi kaybetmek \u00fczeresiniz?*\n\n*-kampanyan\u0131za yan\u0131t verme olas\u0131l\u0131\u011f\u0131 en y\u00fcksek m\u00fc\u015fteri grubu hangisi?*\n\n\u015eimdi elimizde bulunan veri setiyle RFM\u2019in nas\u0131l analiz edildi\u011fini ve m\u00fc\u015fterilerin nas\u0131l segmentlere ayr\u0131ld\u0131\u011f\u0131n\u0131 inceleyelim.\n\n**Veri seti hikayesi:**\n\nOnline Retail II isimli veri seti \u0130ngiltere merkezli online bir sat\u0131\u015f ma\u011fazas\u0131n\u0131n 01\/12\/2009\u201309\/12\/2011 tarihleri aras\u0131ndaki sat\u0131\u015flar\u0131n\u0131 i\u00e7eriyor.\n\n**InvoiceNo:** Fatura numaras\u0131. Her i\u015fleme yani faturaya ait e\u015fsiz numara. E\u011fer bu kod C ile ba\u015fl\u0131yorsa i\u015flemin iptal edildi\u011fini ifade eder.\n\n**StockCode:** \u00dcr\u00fcn kodu. Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numara.\n\n**Description:** \u00dcr\u00fcn ismi.\n\n**Quantity:** \u00dcr\u00fcn adedi. Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir.\n\n**InvoiceDate:** Fatura tarihi ve zaman\u0131.\n\n**UnitPrice:** \u00dcr\u00fcn fiyat\u0131 (Sterlin cinsinden).\n\n**CustomerID**: E\u015fsiz m\u00fc\u015fteri numaras\u0131.\n\n**Country:** \u00dclke ismi. M\u00fc\u015fterinin ya\u015fad\u0131\u011f\u0131 \u00fclke.\n\nBiz proje kapsam\u0131nda online_retail_II.xlsx veri setinin \u201cYear 2010\u20132011\u201d isimli sheet\u2019i ile analiz yap\u0131yoruz. Burada veri setini okutup df de\u011fi\u015fkenine atad\u0131k (df_ de\u011fi\u015fkeniyle de i\u015flemlere devam edilebilir, ancak copy() i\u015flemi yap\u0131p yeni bir de\u011fi\u015fkene atamak ilerleyen s\u00fcre\u00e7ler i\u00e7in daha sa\u011fl\u0131kl\u0131 olacakt\u0131r).\n"}}