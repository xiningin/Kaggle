{"cell_type":{"810f857d":"code","18a657e3":"code","50e86084":"code","c81f8263":"code","94d9c782":"code","91ba30b6":"code","4e2cfd20":"code","c96ed71a":"code","8120afde":"code","9d4ff7c8":"code","648256a7":"code","cec49949":"code","81f51a7c":"markdown","a0e48e1c":"markdown","57484cd2":"markdown","25f27d1f":"markdown","7f202795":"markdown","92b58380":"markdown","e3595fa4":"markdown","8c4e775f":"markdown","4c74efc9":"markdown","9b5d301b":"markdown","9fa03065":"markdown","fc6d078e":"markdown","34698b9b":"markdown","78e414e0":"markdown"},"source":{"810f857d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import ttest_ind\n\nsns.set(style=\"whitegrid\", color_codes=True)\nsns.set_palette(\"Set1\")\n%matplotlib inline","18a657e3":"df = pd.read_excel('\/kaggle\/input\/corona-data\/Corona Data.xlsx')\ndf.head()","50e86084":"df_Cases = pd.DataFrame()\nTot_Cases = (100\/df['Total Cases'])\ndf_Cases['Country'] = df['Country']\ndf_Cases['Recovered'] = Tot_Cases * df['Total Recovered']\ndf_Cases['Dead'] = Tot_Cases * df['Total Deaths']\ndf_Cases = df_Cases.fillna(0)\ndf_Cases['Active Cases'] = (Tot_Cases * (df['Total Cases'])) - (df_Cases['Recovered'] + df_Cases['Dead'])\ndf_Cases['Temp'] = df['Avg. Temp Feb 2020']\ndf_Cases = df_Cases.sort_values(by = ['Temp'], ascending = True)\n\nplt.figure(figsize=(15,5))\ncon = np.arange(len(df_Cases['Country']))\nbarWidth = 1\np1 = plt.bar(con, df_Cases['Dead'], bottom=[i+j for i,j in zip(df_Cases['Recovered'], df_Cases['Active Cases'])], color='r', edgecolor='white', width=barWidth)\np2 = plt.bar(con, df_Cases['Recovered'], bottom=df_Cases['Active Cases'], color='g', edgecolor='white', width=barWidth)\np3 = plt.bar(con, df_Cases['Active Cases'], color='b', edgecolor='white', width=barWidth)\n\nplt.ylabel('Distribution Percentage')\nplt.title('Percentage of Deaths, Recovered and Active Cases sorted by average temperature of country', size = 15)\nplt.xticks(con, df_Cases['Country'])\nplt.xticks(rotation=90)\nplt.legend((p1[0], p2[0], p3[0]), ('Deaths', 'Recovered', 'Active Cases'), loc='lower left')\nprint('Sorted by average temperature of country')","c81f8263":"plt.figure(figsize=(15,5))\nsns.barplot(df[df['Recovery Rate'] > 0]['Country'], df['Recovery Rate'], color='g')\nplt.xticks(rotation=60)\nprint('Recovery Rate Vs Country')","94d9c782":"plt.figure(figsize=(15,5))\nsns.barplot(df[df['Death Rate'] > 0]['Country'], df['Death Rate'], color='r')\nplt.xticks(rotation=60)\nprint('Death Rate Vs Country')","91ba30b6":"f, ax = plt.subplots(1, 3, sharey = True, figsize = (15,6))\nplt.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=0.05, hspace=None)\nax[0].set_ylim(-10, 110)\nax[0].set_xlim(-15, 30)\nax[1].set_xlim(-15, 30)\nax[2].set_xlim(-15, 30)\nax[0].set_title(\"Deaths upon Total Cases\", size = 15, weight = \"bold\")\nax[1].set_title(\"Recovered upon Total Cases\", size = 15, weight = \"bold\")\nax[2].set_title(\"Recovered upon (Recovered + Deaths)\", size = 15, weight = \"bold\")\nsns.scatterplot(x=df['Avg. Temp Feb 2020'], y=df['Death Rate Tot'], color = 'r', ax = ax[0])\nsns.scatterplot(x=df['Avg. Temp Feb 2020'], y=df['Recovery Rate Tot'], color = 'g', ax = ax[1])\nsns.scatterplot(x=df['Avg. Temp Feb 2020'], y=df['Recovery Rate'], color = 'b', ax = ax[2])\nprint('Recovery Rate & Death Rate Vs Avg. Temperature')","4e2cfd20":"corr = df[['Avg. Temp Feb 2020', 'Death Rate Tot', 'Recovery Rate Tot', 'Death Rate', 'Recovery Rate']].corr()\nplt.figure(figsize=(12, 6))\nplt.title('Pearson Correlation of attributes', y=1.05, size=19)\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask, 1)] = True\nsns.heatmap(corr, mask=mask, cmap='YlGnBu', annot=True, linewidths=.5, fmt= '.2f', center = 1)","c96ed71a":"def box(Temp):\n    global df_Temp\n    df_Temp = pd.DataFrame()\n    df_Temp = df_Temp.append(pd.DataFrame({'Status': 'Above', 'Recovery Rate':df[df['Avg. Temp Feb 2020'] > Temp]['Recovery Rate']}))\n    df_Temp = df_Temp.append(pd.DataFrame({'Status': 'Below', 'Recovery Rate':df[df['Avg. Temp Feb 2020'] <= Temp]['Recovery Rate']}))","8120afde":"Threshold = [(0,0),(1,5),(2,10),(3,15),(4,20),(5,25)]\n\nprint('Recovery Rate Distribution')\nf, ax = plt.subplots(1, len(Threshold), sharey=True, figsize = (15,6))\nfor i,j in Threshold:\n    box(j)\n    ax[i].set_title(\"Threshold %d\u00b0C\"%(j), size = 15)\n    sns.boxplot(y = df_Temp['Recovery Rate'], x = df_Temp.Status, ax = ax[i])","9d4ff7c8":"df_Recovery_Temp = pd.DataFrame()\nfor i in range(-10,28):\n    box(i)\n    Below = round(df_Temp[df_Temp['Status'] == 'Below']['Recovery Rate'].mean(),1)\n    Above = round(df_Temp[df_Temp['Status'] == 'Above']['Recovery Rate'].mean(),1)\n    df_Recovery_Temp = df_Recovery_Temp.append({'Temp':'%d\u00b0C'%(i), 'Below Mean':Below, 'Above Mean':Above}, ignore_index=True)\ndf_Recovery_Temp\nplt.figure(figsize=(15, 6))\nplt.title('Mean Recovery Rate based on Temperature', size = 15)\nplt.xlim([0, 37])\nplt.ylim([80, 105])\nplt.xticks(rotation=45)\np1 = plt.plot(df_Recovery_Temp['Temp'], df_Recovery_Temp['Below Mean'], color = 'b')\np2 = plt.plot(df_Recovery_Temp['Temp'], df_Recovery_Temp['Above Mean'], color = 'r')\nplt.legend((p1[0], p2[0]), ('Mean Recovery Rate below threshold temperature', 'Mean Recovery Rate above threshold temperature'), loc='lower left')","648256a7":"# Calculate p value\ngroup1 = df[df['Avg. Temp Feb 2020'] <= 11]['Recovery Rate']\ngroup2 = df[df['Avg. Temp Feb 2020'] > 11]['Recovery Rate']\nprint(' Mean recovery rate for patients from countries below or equal to 11\u00b0C:', round(group1.mean(),2),\"\\n\",'Mean recovery rate for patients from countries above 11\u00b0C:', round(group2.mean(),2))\n\nt_statistic, p_value = ttest_ind(group1.dropna(), group2.dropna())\nprint(' t-statistic is %1.6f' %(t_statistic), \"\\n\", 'p-value is %1.6f' %(p_value))","cec49949":"# Calculate p value\ngroup1 = df[df['Avg. Temp Feb 2020'] <= 20]['Recovery Rate']\ngroup2 = df[df['Avg. Temp Feb 2020'] > 20]['Recovery Rate']\nprint(' Mean recovery rate for patients from countries below or equal to 20\u00b0C:', round(group1.mean(),2),\"\\n\",'Mean recovery rate for patients from countries above 20\u00b0C:', round(group2.mean(),2))\n\nt_statistic, p_value = ttest_ind(group1.dropna(), group2.dropna())\nprint(' t-statistic is %1.6f' %(t_statistic), \"\\n\", 'p-value is %1.6f' %(p_value))","81f51a7c":"### Summary\n* Revalidate results based on new samples\n* Other factors such as age and medical support to be considered","a0e48e1c":"#### Threshold = 20\u00b0C\n* $H_0: \\mu_{RRColder} = \\mu_{RRWarmer}$\n\nNull hypothesis: Recovery Rate of COVID-19 patients from countries below 20\u00b0C and countries above 20\u00b0C are same \n\n* $H_A: \\mu_{RRColder} \\neq \\mu_{RRWarmer}$\n\nAlternative hypothesis: Recovery Rate of COVID-19 patients from countries below 20\u00b0C and countries above 20\u00b0C are not same\n\n* $RRColder$ = Recovery Rate of COVID-19 patients from countries below or equal to 20\u00b0C\n* $RRWarmer$ = Recovery Rate of COVID-19 patients from countries above 20\u00b0C\n* Here $\\mu$ is the mean recovery rate of inactive cases of COVID-19 patients grouped by 2020 February mean temperature.\n* Selecting \u03b1 = 0.05","57484cd2":"#### Comparison of Death & Recovery Rate with Temperature","25f27d1f":"#### Distribution of Recovery Rate across various Temperature Thresholds","7f202795":"#### Comparison of Death Rate across countries","92b58380":"#### Decide to 'Reject' or 'Fail to reject' the null hypothesis\n* Statistical evidence, p-value is 0.038446 and < 0.05 \u03b1, so we ***'Reject the null hypothesis'.***\n* Supporting $H_A:$ Recovery Rate of COVID-19 patients from colder and warmer countires are not same, $\\mu_{RRColder} \\neq \\mu_{RRWarmer}$","e3595fa4":"#### Decide to 'Reject' or 'Fail to reject' the null hypothesis\n* Statistical evidence, p-value is 0.491308 and > 0.05 \u03b1, so we ***'Fail to reject the null hypothesis'.***\n* Supporting $H_0:$ Recovery Rate of COVID-19 patients from colder and warmer countires are same, $\\mu_{RRColder} = \\mu_{RRWarmer}$","8c4e775f":"#### Pearson Correlation of attributes\n* Death Rate Vs Avg. Temp Feb 2020 Pearson correlation (\u03c1 = -0.31)","4c74efc9":"* Data shows containment at temperatures above 25\u00b0C","9b5d301b":"### Does 'Recovery Rate' of COVID-19 patients for colder countries differ significantly from warmer countries?","9fa03065":"### Data Information\n* Country - Data from worldometers dated March 2, 2020\n* Total Cases - Data from worldometers dated March 2, 2020\n* Total Deaths - Data from worldometers dated March 2, 2020\n* Total Recovered - Data from worldometers dated March 2, 2020\n* Death Rate - Total Deaths\/(Total Deaths + Total Recovered)\n* Recovery Rate - Total Recovered\/(Total Deaths + Total Recovered)\n* Death Rate Tot - Total Deaths\/(Total Cases)\n* Recovery Rate Tot - Total Recovered\/(Total Cases)\n* Avg. Temp Feb 2020 - Data from accuweather\n\n- Based on the data available in https:\/\/www.worldometers.info\/coronavirus\/#countries dated March 2, 2020\n- Mean monthly temperature data for Feb 2020 taken from https:\/\/www.accuweather.com\/","fc6d078e":"#### Threshold = 11\u00b0C\n* $H_0: \\mu_{RRColder} = \\mu_{RRWarmer}$\n\nNull hypothesis: Recovery Rate of COVID-19 patients from countries below 11\u00b0C and countries above 11\u00b0C are same \n\n* $H_A: \\mu_{RRColder} \\neq \\mu_{RRWarmer}$\n\nAlternative hypothesis: Recovery Rate of COVID-19 patients from countries below 11\u00b0C and countries above 11\u00b0C are not same\n\n* $RRColder$ = Recovery Rate of COVID-19 patients from countries below or equal to 11\u00b0C\n* $RRWarmer$ = Recovery Rate of COVID-19 patients from countries above 11\u00b0C\n* Here $\\mu$ is the mean recovery rate of inactive cases of COVID-19 patients grouped by 2020 February mean temperature.\n* Selecting \u03b1 = 0.05","34698b9b":"#### Comparison of Recovery Rate across countries","78e414e0":"#### Comparison of distribution across countries"}}