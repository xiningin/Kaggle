{"cell_type":{"8645eca6":"code","feabbc7c":"code","4d463e96":"code","b6e6f87f":"code","28063507":"code","2ae19be9":"code","7d39dee6":"code","987bd270":"code","4f05e69c":"code","dbe4befb":"code","3f87d8a5":"code","1bdf6a03":"code","63e0d221":"code","31e7ce38":"code","0712a7e3":"markdown","b45650ab":"markdown","f22c01ce":"markdown","1be63c08":"markdown","6cc92076":"markdown"},"source":{"8645eca6":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","feabbc7c":"col = [ 'Class Name','Left weight','Left distance','Right weight','Right distance']\ndf = pd.read_csv('..\/input\/balancescale\/balance-scale.data',names=col,sep=',')","4d463e96":"df.head()","b6e6f87f":"df.info()","28063507":"sns.countplot(df['Class Name'])","2ae19be9":"sns.countplot(df['Left weight'],hue=df['Class Name'])","7d39dee6":"from sklearn.model_selection import train_test_split\nX = df.drop('Class Name',axis=1)\ny = df[['Class Name']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state=42)","987bd270":"from sklearn.tree import DecisionTreeClassifier\nclf_model = DecisionTreeClassifier(criterion=\"gini\", random_state=42,max_depth=3, min_samples_leaf=5)   \nclf_model.fit(X_train,y_train)","4f05e69c":"y_predict = clf_model.predict(X_test)","dbe4befb":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\naccuracy_score(y_test,y_predict)","3f87d8a5":"target = list(df['Class Name'].unique())\nfeature_names = list(X.columns)","1bdf6a03":"from sklearn import tree\nimport graphviz\ndot_data = tree.export_graphviz(clf_model,\n                                out_file=None, \n                      feature_names=feature_names,  \n                      class_names=target,  \n                      filled=True, rounded=True,  \n                      special_characters=True)  \ngraph = graphviz.Source(dot_data)  \n\ngraph","63e0d221":"from sklearn.tree import export_text\nr = export_text(clf_model, feature_names=feature_names)\nprint(r)","31e7ce38":"graph.save('graph1.jpg')","0712a7e3":"**Exploratory Data Analysis**","b45650ab":"**Plotting Decision Tree**","f22c01ce":"**Test Accurray**","1be63c08":"**Readinf Dataset**","6cc92076":"**Splitting Dataset into Training and Testing set**"}}