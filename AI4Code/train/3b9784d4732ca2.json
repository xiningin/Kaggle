{"cell_type":{"f704bd98":"code","2419e6c9":"code","8245baa6":"code","e4e0cdfe":"code","8d4a597d":"code","a2630a0c":"code","6c2b5d45":"code","4a19c3dd":"code","2e704c80":"code","7d6d1b44":"code","e15b98ec":"code","7d5b6f42":"code","aed2004a":"code","60d79d4d":"code","730a75c9":"code","2888696b":"code","91de1aef":"code","bb4eacb3":"code","86abfc4d":"code","626118d0":"code","b92da6b1":"code","1d6e6c5b":"code","b64f2658":"code","de59137d":"code","433dc5bd":"code","7e230497":"code","df28f533":"code","186e8625":"code","0863bf38":"code","e58ce9cd":"code","8aa91a42":"code","0d6b3c3d":"code","284fce7f":"code","905b6e2a":"code","dffc701b":"code","ce68015e":"code","5789a80b":"code","38ec1a04":"code","c7619208":"code","85a6427f":"code","2ba6e3c9":"code","b54870b1":"code","a319c6d5":"code","c3595378":"code","c8fb25b5":"code","fe2b8e8e":"code","cd3555df":"code","2c9ecc9c":"code","467f60ab":"code","68a927de":"code","cdebac90":"code","838f2995":"code","a9a452ab":"code","779992d7":"code","9a8e0abb":"code","a3a7e655":"code","7aca68ac":"code","1deeef3b":"code","5e3670e1":"code","e96945f1":"code","3631fe23":"code","f618848c":"code","3627e659":"code","24d6fc71":"code","cd73db9e":"code","58686f6a":"code","e86641b2":"code","6206e95b":"code","acd5d41c":"code","5358989b":"code","9ca8d5d2":"code","bb2603ef":"code","ddecf05f":"code","3f9e2b74":"code","22ceba9d":"code","a8f0d360":"code","c3fe226e":"code","7174a20f":"code","73d4cd49":"code","7cd34fc7":"code","00ed6744":"code","de2c877f":"markdown","8e73beb8":"markdown","aeec15cf":"markdown","ac5ef09b":"markdown","0efe5bc9":"markdown","71abe190":"markdown","daa21341":"markdown","3df63374":"markdown","19550e49":"markdown","24322e87":"markdown","0a72b907":"markdown","3cabdac5":"markdown","19bb1736":"markdown","bd666c93":"markdown","cc5c455d":"markdown","b636f980":"markdown","16c69ea9":"markdown","32e5e9f9":"markdown","f3c36016":"markdown","79ce9883":"markdown","63792e78":"markdown","e7fa77f0":"markdown","f0a7a883":"markdown","1408544d":"markdown","dfde5195":"markdown","62a89456":"markdown","b7c9570d":"markdown","dd158f43":"markdown","b56367b5":"markdown","fb7abca3":"markdown","11d194e5":"markdown","1052c2e6":"markdown","bd1db511":"markdown","c257638a":"markdown","e5112c54":"markdown","1148247a":"markdown","24655c6c":"markdown","c3da20c1":"markdown"},"source":{"f704bd98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2419e6c9":"file = open('..\/input\/ense32020-marco\/files\/adult.data', 'r')","8245baa6":"def chr_int(a):\n    if a.isdigit():\n        return int(a)\n    else:\n        return 0\n                \ndata=[]\nfor line in file:\n     data1=line.split(', ')\n     if len(data1)==15:\n        data.append([chr_int(data1[0]),data1[1],chr_int(data1[2]),data1[3],chr_int(data1[4]),data1[5],data1[6],\\\n            data1[7],data1[8],data1[9],chr_int(data1[10]),chr_int(data1[11]),chr_int(data1[12]),data1[13],\\\n            data1[14]])","e4e0cdfe":"print (data[1:3])","8d4a597d":"%matplotlib inline\nimport pandas as pd\n\ndf = pd.DataFrame(data) #  Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes \n\ndf.columns = ['age', 'type_employer', 'fnlwgt', 'education', \n                \"education_num\",\"marital\", \"occupation\", \"relationship\", \"race\",\"sex\",\n                \"capital_gain\", \"capital_loss\", \"hr_per_week\",\"country\",\"income\"]\ndf.head()","a2630a0c":"df.tail()","6c2b5d45":"df.shape","4a19c3dd":"counts = df.groupby('country').size()\n\nprint (counts) ","2e704c80":"counts = df.groupby('age').size() # grouping by age\ncounts.head()","7d6d1b44":"print(counts.max())\nm=counts.max()\ncounts[counts==m].tail()\n\n","e15b98ec":"ml = df[(df.sex == 'Male')] # grouping by sex\nml.shape\nml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\nml1.shape\n","7d5b6f42":"fm =df[(df.sex == 'Female')]\nfm.shape","aed2004a":"fm1 =df[(df.sex == 'Female')&(df.income=='>50K\\n')]\nfm1.shape","60d79d4d":"df1=df[(df.income=='>50K\\n')]\n\nprint ('The rate of people with high income is: ', int(len(df1)\/float(len(df))*100), '%.' )\nprint ('The rate of men with high income is: ', int(len(ml1)\/float(len(ml))*100), '%.' )\nprint ('The rate of women with high income is: ', int(len(fm1)\/float(len(fm))*100), '%.' )","730a75c9":"print ('The average age of men is: ', ml['age'].mean(), '.' )\nprint ('The average age of women is: ', fm['age'].mean(), '.')","2888696b":"print ('The average age of high-income men is: ', ml1['age'].mean(), '.' )\nprint ('The average age of high-income women is: ', fm1['age'].mean(), '.')","91de1aef":"ml_mu = ml['age'].mean()\nfm_mu = fm['age'].mean()\nml_var = ml['age'].var()\nfm_var = fm['age'].var()\nml_std = ml['age'].std()\nfm_std = fm['age'].std()\n\nprint ('Statistics of age for men: mu:', ml_mu, 'var:', ml_var, 'std:', ml_std)\nprint ('Statistics of age for women: mu:', fm_mu, 'var:', fm_var, 'std:', fm_std)","bb4eacb3":"ml_mu_hr = ml['hr_per_week'].mean()\nfm_mu_hr = fm['hr_per_week'].mean()\nml_var_hr = ml['hr_per_week'].var()\nfm_var_hr = fm['hr_per_week'].var()\nml_std_hr = ml['hr_per_week'].std()\nfm_std_hr = fm['hr_per_week'].std()\n\nprint ('Statistics of hours per week for men: mu:', ml_mu_hr, 'var:', ml_var_hr, 'std:', ml_std_hr)\nprint ('Statistics of hours per week for women: mu:', fm_mu_hr, 'var:', fm_var_hr, 'std:', fm_std_hr)","86abfc4d":"ml_median= ml['age'].median()\nfm_median= fm['age'].median()\n\nprint (\"Median age per men and women: \", ml_median, fm_median)","626118d0":"ml_median_age= ml1['age'].median()\nfm_median_age= fm1['age'].median()\n\nprint (\"Median age per men and women with high-income: \", ml_median_age, fm_median_age)\n","b92da6b1":"ml_median_hr= ml['hr_per_week'].median()\nfm_median_hr= fm['hr_per_week'].median()\nprint (\"Median hours per week per men and women: \", ml_median_hr, fm_median_hr)","1d6e6c5b":"import matplotlib.pyplot as plt\n\nml_age=ml['age']\nml_age.hist(density=True, histtype='stepfilled', bins=20)\nplt.axvline(ml_median,color='k')\nplt.axvline(ml_mu,color='r')","b64f2658":"fm_age=fm['age']\nfm_age.hist(density=True, histtype='stepfilled', bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Female samples',fontsize=15)\nplt.axvline(fm_median,color='k')\nplt.axvline(fm_mu,color='r')\nplt.show()","de59137d":"import seaborn as sns\nfm_age.hist(density=0, histtype='stepfilled', alpha=.5, bins=10)   # default number of bins = 10\nml_age.hist(density=0, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('samples',fontsize=15)\nplt.show()","433dc5bd":"fm_age.hist(density=True, histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(density=True, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('PMF',fontsize=15)\nplt.show()","7e230497":"ml_age.hist(density=True, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","df28f533":"fm_age.hist(density=True, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","186e8625":"ml_age.hist(density=True, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","0863bf38":"fm_age.hist(density=True, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","e58ce9cd":"ml_age.hist(bins=10, density=True, histtype='stepfilled', alpha=.5)   # default number of bins = 10\nfm_age.hist(bins=10, density=True, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()\n","8aa91a42":"ml_age.hist(density=True, histtype='step', cumulative=True,  linewidth=3.5, bins=20)\nfm_age.hist(density=True, histtype='step', cumulative=True,  linewidth=3.5, bins=20, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","0d6b3c3d":"print (\"The mean sample difference is \", ml_age.mean() - fm_age.mean())","284fce7f":"df['age'].median()","905b6e2a":"len(df[(df.income == '>50K\\n') & (df['age'] < df['age'].median() - 15)])","dffc701b":"len(df[(df.income == '>50K\\n') & (df['age'] > df['age'].median() + 35)])","ce68015e":"df2 = df.drop(df.index[(df.income=='>50K\\n') & (df['age']>df['age'].median() +35) & (df['age'] > df['age'].median()-15)])\n\ndf2.shape","5789a80b":"ml1_age=ml1['age']\nfm1_age=fm1['age']","38ec1a04":"ml2_age = ml1_age.drop(ml1_age.index[(ml1_age >df['age'].median()+35) & (ml1_age>df['age'].median() - 15)])\n\nfm2_age = fm1_age.drop(fm1_age.index[(fm1_age > df['age'].median()+35) & (fm1_age > df['age'].median()- 15)])","c7619208":"mu2ml = ml2_age.mean()\nstd2ml = ml2_age.std()\nmd2ml = ml2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income male population\n\nprint (\"Men statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", ml2_age.min(), \"Max:\",ml2_age.max())","85a6427f":"mu3ml = fm2_age.mean()\nstd3ml = fm2_age.std()\nmd3ml = fm2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income female population\nprint (\"Women statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", fm2_age.min(), \"Max:\",fm2_age.max())","2ba6e3c9":"print ('The mean difference with outliers is: %4.2f.'% (ml_age.mean() - fm_age.mean()))\nprint (\"The mean difference without outliers is: %4.2f.\"% (ml2_age.mean() - fm2_age.mean()))","b54870b1":"plt.figure(figsize=(13.4,5))\n\ndf.age[(df.income == '>50K\\n')].plot(alpha=.25, color='blue')\ndf2.age[(df2.income == '>50K\\n')].plot(alpha=.45,color='red')\n\nplt.ylabel('Age')\nplt.xlabel('Samples')","a319c6d5":"import numpy as np\n\ncountx,divisionx = np.histogram(ml2_age, density=True)\ncounty,divisiony = np.histogram(fm2_age, density=True)","c3595378":"import matplotlib.pyplot as plt\n\nval = [(divisionx[i]+divisionx[i+1])\/2 for i in range(len(divisionx)-1)]\n\nplt.plot(val, countx-county,'o-')\nplt.title('Differences in promoting men vs. women')\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Differences',fontsize=15)\nplt.show()\n","c8fb25b5":"print (\"Remember:\\n We have the following mean values for men, women and the difference:\\nOriginally: \", ml_age.mean(), fm_age.mean(),  ml_age.mean()- fm_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"For high-income: \", ml1_age.mean(), fm1_age.mean(), ml1_age.mean()- fm1_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"After cleaning: \", ml2_age.mean(), fm2_age.mean(), ml2_age.mean()- fm2_age.mean()) # The difference between the mean values of male and female populations.)\n\nprint (\"\\nThe same for the median:\")\nprint (ml_age.median(), fm_age.median(), ml_age.median()- fm_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml1_age.median(), fm1_age.median(), ml1_age.median()- fm1_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml2_age.median(), fm2_age.median(), ml2_age.median()- fm2_age.median()), # The difference between the mean values of male and female populations.)","fe2b8e8e":"def skewness(x):\n    res=0\n    m=x.mean()\n    s=x.std()\n    for i in x:\n        res+=(i-m)*(i-m)*(i-m)\n    res\/=(len(x)*s*s*s)\n    return res\n\nprint (\"The skewness of the male population is:\", skewness(ml2_age))\nprint (\"The skewness of the female population is:\", skewness(fm2_age))","cd3555df":"def pearson(x):\n    return 3*(x.mean()-x.median())\/x.std()\n\nprint (\"The Pearson's coefficient of the male population is:\", pearson(ml2_age))\nprint (\"The Pearson's coefficient of the female population is:\", pearson(fm2_age))","2c9ecc9c":"ml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\n\nml2 = ml1.drop(ml1.index[(ml1['age']>df['age'].median() +35)&(ml1['age']> df['age'].median()- 15)])\n\nfm2 = fm1.drop(fm1.index[(fm1['age']> df['age'].median() + 35)& (fm1['age']> df['age'].median() - 15)])\n\nprint (ml2.shape, fm2.shape)","467f60ab":"print (\"Men grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(ml2_age[ml2_age<41])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(ml2_age[ml2_age >44])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(ml2_age[(ml2_age>40) & (ml2_age< 45)])\/float(len(ml2_age.index)))),\"%.\")","68a927de":"print (\"Women grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(fm2_age[fm2_age <41])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(fm2_age[fm2_age >44])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(fm2_age[(fm2_age>40) & (fm2_age< 45)])\/float(len(fm2_age.index)))),\"%.\")\n","cdebac90":"print (\"The male mean:\", ml2_age.mean())\nprint (\"The female mean:\", fm2_age.mean())","838f2995":"ml2_young = len(ml2_age[(ml2_age<41)])\/float(len(ml2_age.index))\nfm2_young  = len(fm2_age[(fm2_age<41)])\/float(len(fm2_age.index))\nprint (\"The relative risk of female early promotion is: \", 100*(1-ml2_young\/fm2_young))","a9a452ab":"ml2_elder = len(ml2_age[(ml2_age>44)])\/float(len(ml2_age.index))\nfm2_elder  = len(fm2_age[(fm2_age>44)])\/float(len(fm2_age.index))\nprint (\"The relative risk of male late promotion is: \", 100*ml2_elder\/fm2_elder)","779992d7":"l = 3\nx=np.arange(0,2.5,0.1)\ny= 1- np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential CDF: $\\lambda$ =%.2f'% l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","9a8e0abb":"from __future__ import division\nimport scipy.stats as stats\n\nl = 3\nx=np.arange(0,2.5,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential PDF: $\\lambda$ =%.2f'% l, fontsize=15)\nplt.xlabel('x', fontsize=15)\nplt.ylabel('PDF', fontsize=15)\nplt.show()","a3a7e655":"l = 0.25\n\nx=np.arange(0,25,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential: $\\lambda$ =%.2f' %l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('PDF',fontsize=15)\nplt.show()","7aca68ac":"u=6 # mean\ns=2 # standard deviation\n\nx=np.arange(0,15,0.1)\n\ny=(1\/(np.sqrt(2*np.pi*s*s)))*np.exp(-(((x-u)**2)\/(2*s*s)))\n\nplt.plot(x,y,'-')\nplt.title('Gaussian PDF: $\\mu$=%.1f, $\\sigma$=%.1f'%(u,s),fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('Probability density',fontsize=15)\nplt.show()","1deeef3b":"fig, ax = plt.subplots(1, 4, sharey=True, squeeze=True, figsize=(14, 5))\nx = np.linspace(0, 1, 100)\nfor i in range(4):\n    f = np.mean(np.random.random((10000, i+1)), 1)\n    m, s = np.mean(f), np.std(f, ddof=1)\n    fn = (1\/(s*np.sqrt(2*np.pi)))*np.exp(-(x-m)**2\/(2*s**2))  # normal pdf            \n    ax[i].hist(f, 40, density=True, color=[0, 0.2, .8, .6]) \n    ax[i].set_title('n=%d' %(i+1))\n    ax[i].plot(x, fn, color=[1, 0, 0, .6], linewidth=5)\nplt.suptitle('Demonstration of the central limit theorem for a uniform distribution', y=1.05)\nplt.show()","5e3670e1":"from scipy.stats.distributions import norm\n\n# Some random data\ny = np.random.random(15) * 10\nx = np.linspace(0, 10, 100)\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\ny = np.r_[x1, x2] # r_ Translates slice objects to concatenation along the first axis.\nx = np.linspace(min(y), max(y), 100)\n\n# Smoothing parameter\ns = 0.4\n\n# Calculate the kernels\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'go', ms=10)","e96945f1":"from scipy.stats import kde\n\nx1 = np.random.normal(-1, 0.5, 15)\n\n# parameters: (loc=0.0, scale=1.0, size=None)\n\nx2 = np.random.normal(6, 1, 10)\ny = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\n\nx = np.linspace(min(y), max(y), 100)\ns = 0.4   # Smoothing parameter\n\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\n# Calculate the kernels\ndensity = kde.gaussian_kde(y)\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'bo', ms=10)","3631fe23":"xgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(y, bins=28, density=True)\nplt.plot(xgrid, density(xgrid), 'r-')","f618848c":"# Create a bi-modal distribution with a mixture of Normals.\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\n\n# Append by row\nx = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\nplt.hist(x, bins=18, density=True)","3627e659":"density = kde.gaussian_kde(x)\nxgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(x, bins=18, density=True)\nplt.plot(xgrid, density(xgrid), 'r-')\n","24d6fc71":"x = np.random.normal(0.0, 1.0, 10000)\na = plt.hist(x,50,density='True')","cd73db9e":"print ('The empirical mean of the sample is ', x.mean())","58686f6a":"NTs=200\nmu=0.0\nvar=1.0\nerr = 0.0\nNPs=1000\nfor i in range(NTs):\n    x = np.random.normal(mu, var, NPs)\n    err += (x.mean()-mu)**2\n\nprint ('MSE: ', err\/NTs)","e86641b2":"def Cov(X, Y):\n    def _get_dvis(V):\n        return [v - np.mean(V) for v in V]\n    dxis = _get_dvis(X)\n    dyis = _get_dvis(Y)\n    return np.sum([x * y for x, y in zip(dxis, dyis)])\/len(X)\n\n\nX = [5, -1, 3.3, 2.7, 12.2]\nX= np.array(X)\nY = [10, 12, 8, 9, 11]\n\nprint (\"Cov(X, X) = %.2f\" % Cov(X, X))\nprint (\"Var(X) = %.2f\" % np.var(X))\n\nprint (\"Cov(X, Y) = %.2f\" % Cov(X, Y))","6206e95b":"MAXN=100\nMAXN=40\n\nX=np.array([[1,9],[3, 2], [5,3],[5.5,4],[6,4],[6.5,4],[7,3.5],[7.5,3.8],[8,4],\n[8.5,4],[9,4.5],[9.5,7],[10,9],[10.5,11],[11,11.5],[11.5,12],[12,12],[12.5,12],[13,10]])","acd5d41c":"plt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('Economic growth(T)',fontsize=15)\nplt.ylabel('Stock market returns(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","5358989b":"X=np.array([[1,8],[2, 7], [3,6],[4,8],[5,8],[6,7],[7,7],[8,5],[9,5],[10,6],[11,4],[12,5],[13,3],[14,2],[15,2],[16,1]])\n\nplt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('World Oil Production(T)',fontsize=15)\nplt.ylabel('Gasoline prices(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","9ca8d5d2":"def Corr(X, Y):\n    assert len(X) == len(Y)\n    return Cov(X, Y) \/ np.prod([np.std(V) for V in [X, Y]])\n\nprint (\"Corr(X, X) = %.5f\" % Corr(X, X))\n\nY=np.random.random(len(X))\n\nprint (\"Corr(X, Y) = %.5f\" % Corr(X, Y))","bb2603ef":"def list2rank(l):\n    #l is a list of numbers\n    # returns a list of 1-based index; mean when multiple instances\n    return [np.mean([i+1 for i, sorted_el in enumerate(sorted(l)) if sorted_el == el]) for el in l]\n\nl = [7, 1, 2, 5]\nprint (\"ranks: \", list2rank(l))\n\ndef spearmanRank(X, Y):\n    # X and Y are same-length lists\n    print (list2rank(X) )\n    print (list2rank(Y))\n    return Corr(list2rank(X), list2rank(Y))\n\nX = [10, 20, 30, 40, 1000]\nY = [-70, -1000, -50, -10, -20]\nplt.plot(X,'ro')\nplt.plot(Y,'go')\n\nprint (\"Pearson rank coefficient: %.2f\" % Corr(X, Y))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(X, Y))","ddecf05f":"X=np.array([[10.0, 8.04,10.0, 9.14, 10.0, 7.46, 8.0, 6.58],\n[8.0,6.95, 8.0, 8.14, 8.0, 6.77, 8.0, 5.76],\n[13.0,7.58,13.0,8.74,13.0,12.74,8.0,7.71],\n[9.0,8.81,9.0,8.77,9.0,7.11,8.0,8.84],\n[11.0,8.33,11.0,9.26,11.0,7.81,8.0,8.47],\n[14.0,9.96,14.0,8.10,14.0,8.84,8.0,7.04],\n[6.0,7.24,6.0,6.13,6.0,6.08,8.0,5.25],\n[4.0,4.26,4.0,3.10,4.0,5.39,19.0,12.50],\n[12.0,10.84,12.0,9.13,12.0,8.15,8.0,5.56],\n[7.0,4.82,7.0,7.26,7.0,6.42,8.0,7.91],\n[5.0,5.68,5.0,4.74,5.0,5.73,8.0,6.89]])","3f9e2b74":"plt.subplot(2,2,1)\nplt.scatter(X[:,0],X[:,1],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","22ceba9d":"plt.subplot(2,2,2)\nplt.scatter(X[:,2],X[:,3],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.subplot(2,2,3)\nplt.scatter(X[:,4],X[:,5],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","a8f0d360":"plt.subplot(2,2,4)\nplt.scatter(X[:,6],X[:,7],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.gcf().set_size_inches((10,10))","c3fe226e":"Ascombe1=pd.DataFrame([X[:,0],X[:,1]])\nAscombe2=pd.DataFrame([X[:,2],X[:,3]])\nAscombe3=pd.DataFrame([X[:,4],X[:,5]])\nAscombe4=pd.DataFrame([X[:,6],X[:,7]])\n\nAscombe1.columns = ['0', '1', '2', '3',\"4\",\"5\", \"6\", \"7\",\"8\",\"9\",\"10\"]\nAscombe1['letter']=['x','y']\nAscombe1=Ascombe1.set_index('letter')\nAscombe1 = pd.pivot_table( Ascombe1.iloc[0:2] ,columns = ['letter'])\n\nAscombe2.columns = ['0', '1', '2', '3',\"4\",\"5\", \"6\", \"7\",\"8\",\"9\",\"10\"]\nAscombe2['letter']=['x','y']\nAscombe2=Ascombe2.set_index('letter')\nAscombe2 = pd.pivot_table( Ascombe2.iloc[0:2] ,columns = ['letter'])\n\nAscombe3.columns = ['0', '1', '2', '3',\"4\",\"5\", \"6\", \"7\",\"8\",\"9\",\"10\"]\nAscombe3['letter']=['x','y']\nAscombe3=Ascombe3.set_index('letter')\nAscombe3 = pd.pivot_table( Ascombe3.iloc[0:2] ,columns = ['letter'])\n\nAscombe4.columns = ['0', '1', '2', '3',\"4\",\"5\", \"6\", \"7\",\"8\",\"9\",\"10\"]\nAscombe4['letter']=['x','y']\nAscombe4=Ascombe4.set_index('letter')\nAscombe4 = pd.pivot_table( Ascombe4.iloc[0:2] ,columns = ['letter'])\n\n\n#Ascombe1.head(8)\n","7174a20f":"list1 = Ascombe1['x'] \nlist2 = Ascombe1['y'] \n\n  \n# Calculating mean for x \nprint('%.1f' % list1.mean()) \n  \n# Calculating standard deviation for x \nprint('%.2f' % list1.std() )\n  \n# Calculating mean for y \nprint('%.1f' % list2.mean())\n  \n# Calculating standard deviation for y \nprint('%.2f' % list2.std()  )\n   \n\nprint(\"Covariance: %.2f\" % Cov(list1, list2))\nprint (\"Pearson rank coefficient: %.2f\" % Corr(list1, list2))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(list1, list2))\n","73d4cd49":"list1 = Ascombe2['x'] \nlist2 = Ascombe2['y'] \n  \n# Calculating mean for x \nprint('%.1f' % list1.mean()) \n  \n# Calculating standard deviation for x \nprint('%.2f' % list1.std() )\n  \n# Calculating mean for y \nprint('%.1f' % list2.mean())\n  \n# Calculating standard deviation for y \nprint('%.2f' % list2.std()  )\n   \n\nprint(\"Covariance: %.2f\" % Cov(list1, list2))\nprint (\"Pearson rank coefficient: %.2f\" % Corr(list1, list2))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(list1, list2))\n","7cd34fc7":"list1 = Ascombe3['x'] \nlist2 = Ascombe3['y'] \n  \n# Calculating mean for x \nprint('%.1f' % list1.mean()) \n  \n# Calculating standard deviation for x \nprint('%.2f' % list1.std() )\n  \n# Calculating mean for y \nprint('%.1f' % list2.mean())\n  \n# Calculating standard deviation for y \nprint('%.2f' % list2.std()  )\n   \n\nprint(\"Covariance: %.2f\" % Cov(list1, list2))\nprint (\"Pearson rank coefficient: %.2f\" % Corr(list1, list2))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(list1, list2))","00ed6744":"list1 = Ascombe4['x'] \nlist2 = Ascombe4['y'] \n  \n# Calculating mean for x \nprint('%.1f' % list1.mean()) \n  \n# Calculating standard deviation for x \nprint('%.2f' % list1.std() )\n  \n# Calculating mean for y \nprint('%.1f' % list2.mean())\n  \n# Calculating standard deviation for y \nprint('%.2f' % list2.std()  )\n   \n\nprint(\"Covariance: %.2f\" % Cov(list1, list2))\nprint (\"Pearson rank coefficient: %.2f\" % Corr(list1, list2))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(list1, list2))","de2c877f":"Question 19 \n\nWe compare the 2 CDF on the same graph. The CDF of women is above the one of the men from 17 to 60 years with the gap closing as the people become olders. This means that the population of women is younger than the one of men. Moreover the very young women are almost the double as the very young men. This will affect greatly the income of the 2 genders.","8e73beb8":"Question 21\n\nThe skewness is a measure of the asymmetry of the distribution. For positive value as we have the mass of the distribution is concentrated on the left (we have seen that before). The value of skewness of the female population is higher so again it shows that the women population is younger.","aeec15cf":"We decide to remove the person above from our data","ac5ef09b":"return the median age of the people composing our dataframe","0efe5bc9":"Question9\n\nFirst concerning the age we see that the distribution for the 2 genders is more or less the same, indeed the data are spread in the same way (std ~= 14). The only diffrence is that the distribution of men is shifted toward the right by 3 years.\nSo the discrepancy between salary cannot be explained by the ages.\nConcerning the weekly number of work hours we see that men tend to work 6 hour more than women during the week. It is confirmed by the 2 distribution that have the same std. Maybe the difference in wages between the 2 genders can be explained partially by the number of work hour difference. ","71abe190":"Question 3\n\nThe method tail() give the last five rows of a dataframe. head() gives instead the first 5 rows.","daa21341":"Question 2\n\nAt question 1 we saw that we created a vector full of raws each one also containing 15 strings. We transform this vector into a dataframe above with the command : (df=pd.Datatframe(data)).\nWe also define the name of each columns of the dataframe. Finally we show the first 5 rows of our dataframe","3df63374":"We plot the difference in frequency for the 2 gender along the age axis. We can see that young women are more frequent. On the opposite men around 50 are more frequent than women. So even if we clean our data the trend that the women population is younger continue","19550e49":"Question 18\n\nNow the number of bins is the same for the 2 distributions and an interval of age is of 10 years.\nThe conclusions are the same as before","24322e87":"Question4\n\nThis function give the size of our dataframe so the number of rows (32561) and the number of columns (15)","0a72b907":"We observe that the values x.mean()=9.0, x.std()=3.32, y.mean()=7.5, y.std()=2.03 cov(x,y)=5.0, Pearson = 0.82 are the same for the 4 dataset. Only the spearman rank coefficient is diffrent for the 4 datasets.\nAt first glance this quartet dataset are all different as we see in graphs, but the statistic parameter are the same.\nThis show that the graphical analysis is not enough and should be completed also by statistical analysis","3cabdac5":"We can see that after the cleaning not so much changed in the mean and median value if we compare high income people","19bb1736":"The difference between the 2 values is greater than the one for the skewness","bd666c93":"Question 11\n\nWe see that the distribution for women is shifted to the right even more than the one of the men.\nThere few elderly women that compensate the fact that the largest part of women have an age between 17 and 23 so the wages are logically going to be low. The age distribution is very different compared to the one of the men. ","cc5c455d":"We see that without the outlier the mean and the median are nearer. ","b636f980":"Exercise\n\nFirst we create 4 dataframe each one for an Ascombe dataset\n","16c69ea9":"This command gives us the number of occurences for each age but there are to many rows we use max() to identify the age of the most represented people","32e5e9f9":"We created 2 new dataframe one with only mens and one with only mens that have high incomes","f3c36016":"We can clearly see that some spikes corresponding to elderly have been removed","79ce9883":"Question 12\n\nWe plot the 2 distributions with non normalized value, we can see that there are more men than women but we cannot appreciate the proportion of men and women in each age interval. Moreover we see that even if the population of men is 2 times bigger the number of women with age between 17 and 25 is almost the same as the one of the men. This demonstrate that the population of women is composed by a lot more very young person than the men\n\nWe need to plot a normalized graph","63792e78":"Question 21","e7fa77f0":"As we would expect the data are less spread than before","f0a7a883":"Question 20\n\nAs often with statistic the mean is not enough to visualize the situation. In our case it hides the fact that very old women compensate a lot of very young women. Moreover the 2 distribution of ages are totally different. Actually the difference of age between the 2 population explain the difference in proportion of women with high income and men with income.\nThe population of men is older so they are forward in their career and the wages are higher. Concerning women the big number of very young (in proportion 2 times more than men) have low income job and decrease the proportion of women with high income.","1408544d":"There are 5 person that are 22 years old or less that have high income","dfde5195":"Question5\n\nWith this command we want to count how many raws (people) are from a determined country\nWe grouped the data by countries and applied the function size() to count them\nFor USA there are 29170 items \nFor Mexico there are 643 items","62a89456":"Question 7\n\nFirst we create another dataframe with all the people with high income.\nAfter we just compute for men and women group, for only the women and only the men the rate of people that have high incomes.\nThis first analysis shows us that a little less than a quarter of all the people have high income. Moreover there is a big discrepancy between men and women because in proportion there are 3 times more mens that have high income in confrot to women.\nNonetheless it's the first ananlysis and many parameter can false it such as the age distribution for the 2 gender.","b7c9570d":"question1\nThe first function is used to check if all characters in the string are digit. If the character is a digit it will return it otherwise it will return 0\nThe second part allow to read the file and separate all the entries (with line.split(',') that will split a string every times it read a ','). After we add to the vector data a list for each row of the file that contains 15 strings representing each one a characteristic of the person. We also filter some of the characteristics using the function described before chr_int()\n\n","dd158f43":"Question 14 and 15 \n\nWe already discussed abiut these 2 graph at question 10 and 11","b56367b5":"Question 16\n\nFor men the cumulative distribution function of age tend to be linear until 50 years old. We see that the probability that a men is younger than 30 years old is more or less 0,35. the probability that a men is older than 60 is less than 0.1 \nNow let's compare with the women CDF","fb7abca3":"We do the same for the women","11d194e5":"Question 21\n\nWe obtain the mean squared error on the estimation of the mean value","1052c2e6":"Question 17\n\nWe see that the probability that a woman is younger than 30 years old is almost 0,42. For the men it was 0,35.\nThe probability that a woman is older than 60 years old is less than 0,05. \nWith these 2 CDF we can conclude that the population of women is younger than the one of the men. Most importantly there are a big discrepancy for young people with almost the double of probability to be younger than 20 years old for women.","bd1db511":"Question 13\n\nHere we plot the normalized distribution, it means that the quantity of person in each age interval is divided by the total number of people. We can observe that the age interval for men is of 10 years and the one of the women 20 years. This may affect the conclusion.\nAs we explained the 2 distribution are shifted and a lot of women are very young and cannot access to high income job.","c257638a":"Question 6\n\nFirst we determined the maximum of occurence for the same age and after we looked to the raw of the dataframe counts where the value was equal to the max (898). The age of the most represented people is 36 years ","e5112c54":"Question 8\n\nWe see that the average age of women is lower that the one of the men. It is the same observation for high income men and women.\nWe can't deduce a lot from these mean value. We need to know the exact distribution of the ages.","1148247a":"Question 10\n\nThe median allow us to see more clearly the data. First concerning the median age of women and men we see that it is more or less 2 years lower than the mean values. It means that there are some people with high age that increase the mean. Concerning the median age of genders with high income we have the same conclusion. \nConcerning the median work hours we see that actually for the 2 genders half work less than 40 h and half work more than 40 h. The discrepancy with the mean results could be explained because maybe women cannot work as much as the men or occupy the highest qualified position where the number of work hours is very high. To conclude work hour is not the explanation for the salary difference ","24655c6c":"There are 69 person that are 72 years old or more that have high income","c3da20c1":"Question 10\n\nWe plot the age distribution for men. As we explained before we see that there are few elderly men that shift the distribution toward the right and increase the mean value. We plotted also in red the mean and in black the median. Most of the men have an age between 30 and 45.\n"}}