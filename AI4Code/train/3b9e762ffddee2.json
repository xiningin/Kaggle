{"cell_type":{"3585eb4b":"code","3d25eb73":"code","99bca2d9":"code","df49dae1":"code","92193b80":"code","1f364c73":"code","6cca93da":"code","7e7b94c9":"code","79a5e5d2":"code","d3fd5062":"code","990917ad":"code","f11ebf28":"code","28bd1a48":"code","3238ba7d":"code","15fe96a3":"code","1714b99d":"code","4177b29b":"code","34a643ef":"code","b7350cca":"code","ab4fd9e4":"code","6f98382a":"code","2214ac04":"code","c2df1fc1":"code","52288a66":"code","5a22869c":"code","3684dae3":"code","f1bd1eab":"code","691e4b29":"code","abd37669":"code","a380dde2":"code","6b426af3":"code","00f171e5":"code","929effa0":"code","00596643":"code","f8bdaf81":"code","7c6127df":"code","90712167":"code","9073d3a9":"code","2a49e010":"code","bdeab3c3":"code","f955ff26":"code","a9cf2252":"code","3815ad49":"code","becb0dff":"code","63010dbe":"code","3e587876":"code","df890069":"code","85ad70c0":"code","1ff5cad6":"code","2ffa2619":"code","22eb9408":"code","e40a83be":"code","174866b4":"code","1f2e6f48":"code","e1360788":"markdown","636612b5":"markdown","3a133e7a":"markdown","222a5b35":"markdown","896cc508":"markdown","6f3341aa":"markdown","214d75fe":"markdown","c8e3b29d":"markdown","7b499099":"markdown","451b82af":"markdown","d15278d5":"markdown","759fb7fc":"markdown","7e0094f3":"markdown","9cd74b49":"markdown","10782588":"markdown","9ce0f590":"markdown"},"source":{"3585eb4b":"import IPython.display\nIPython.display.YouTubeVideo('o3EssYobJa8')","3d25eb73":"# Set your own project id here\nPROJECT_ID = 'kaggle-advent-calendar'\nfrom google.cloud import bigquery\nbigquery_client = bigquery.Client(project=PROJECT_ID)\nfrom google.cloud import storage\nstorage_client = storage.Client(project=PROJECT_ID)\nfrom google.cloud import automl_v1beta1 as automl\nautoml_client = automl.AutoMlClient()","99bca2d9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","df49dae1":"sample_submission = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\ntest_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntrain_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","92193b80":"train_df.head()","1f364c73":"cleaned_train_df = train_df.fillna(train_df.median())\ncleaned_test_df = test_df.fillna(test_df.median())","6cca93da":"cleaned_train_df.to_csv('train.csv', index=False)\ncleaned_test_df.to_csv('test.csv', index=False)","7e7b94c9":"dataset_id = \"{}.house_prices\".format(bigquery_client.project)","79a5e5d2":"dataset = bigquery.Dataset(dataset_id)","d3fd5062":"dataset.location = \"US\"","990917ad":"dataset = bigquery_client.create_dataset(dataset)","f11ebf28":"dataset.dataset_id","28bd1a48":"filename = '.\/train.csv'\ntable_id = 'train'","3238ba7d":"dataset_ref = bigquery_client.dataset('house_prices')","15fe96a3":"table_ref = dataset_ref.table(table_id)","1714b99d":"job_config = bigquery.LoadJobConfig()","4177b29b":"job_config.source_format = bigquery.SourceFormat.CSV","34a643ef":"job_config.skip_leading_rows = 1","b7350cca":"job_config.autodetect = True","ab4fd9e4":"with open(filename, \"rb\") as source_file:\n    job = bigquery_client.load_table_from_file(source_file, table_ref, job_config=job_config)","6f98382a":"filename = '.\/test.csv'\ntable_id = 'test'\ntable_ref = dataset_ref.table(table_id)\nwith open(filename, \"rb\") as source_file:\n    job = bigquery_client.load_table_from_file(source_file, table_ref, job_config=job_config)","2214ac04":"from google.cloud.bigquery import magics\nfrom kaggle.gcp import KaggleKernelCredentials\nmagics.context.credentials = KaggleKernelCredentials()\nmagics.context.project = PROJECT_ID","c2df1fc1":"%load_ext google.cloud.bigquery","52288a66":"%%bigquery sample\nSELECT\n  GrLivArea,\n  OverallQual,\n  _2ndFlrSF,\n  _1stFlrSF,\n  YearBuilt,\n  ExterQual,\n  YearRemodAdd,\n  FireplaceQu,\n  GarageYrBlt,\n  FullBath,\n  MSSubClass,\n  LotArea,\n  Fireplaces,\n  KitchenQual,\n  MSZoning,\n  GarageType\nFROM\n  house_prices.train","5a22869c":"sample.head()","3684dae3":"%%bigquery\nCREATE OR REPLACE MODEL `house_prices.model_prices`\nOPTIONS (\n    model_type = 'LINEAR_REG',\n    optimize_strategy = 'BATCH_GRADIENT_DESCENT'\n) AS (\n    SELECT\n        GrLivArea,\n        OverallQual,\n        _2ndFlrSF,\n        _1stFlrSF,\n        YearBuilt,\n        ExterQual,\n        YearRemodAdd,\n        FireplaceQu,\n        GarageYrBlt,\n        FullBath,\n        MSSubClass,\n        LotArea,\n        Fireplaces,\n        KitchenQual,\n        MSZoning,\n        GarageType,\n        SalePrice AS label\n    FROM\n        house_prices.train\n)","f1bd1eab":"%%bigquery\nSELECT\n    *\nFROM\n    ML.TRAINING_INFO(MODEL `house_prices.model_prices`)","691e4b29":"%%bigquery submission_bigquery\nSELECT\n    Id,\n    predicted_label AS SalePrice\nFROM\n    ML.PREDICT(MODEL `house_prices.model_prices`, (\n        SELECT\n            Id,\n            GrLivArea,\n            OverallQual,\n            _2ndFlrSF,\n            _1stFlrSF,\n            YearBuilt,\n            ExterQual,\n            YearRemodAdd,\n            FireplaceQu,\n            GarageYrBlt,\n            FullBath,\n            MSSubClass,\n            LotArea,\n            Fireplaces,\n            KitchenQual,\n            MSZoning,\n            GarageType,\n        FROM\n            `house_prices.test`\n    ))","abd37669":"submission_bigquery","a380dde2":"submission_bigquery.to_csv('submission_bigquery_ml.csv', index=False)","6b426af3":"BUCKET_NAME = 'automl-kaggle-regonn'\nBUCKET_REGION = 'us-central1'","00f171e5":"tables_gcs_client = automl.GcsClient(client=storage_client, bucket_name=BUCKET_NAME)","929effa0":"prediction_client = automl.PredictionServiceClient()","00596643":"tables_client = automl.TablesClient(project=PROJECT_ID, region=BUCKET_REGION, client=automl_client, gcs_client=tables_gcs_client, prediction_client=prediction_client)","f8bdaf81":"bucket = storage.Bucket(storage_client, name=BUCKET_NAME)\nif not bucket.exists():\n    bucket.create(location=BUCKET_REGION)","7c6127df":"bucket = storage_client.get_bucket(BUCKET_NAME)","90712167":"blob = bucket.blob('train.csv')","9073d3a9":"blob.upload_from_filename('.\/train.csv')","2a49e010":"blob = bucket.blob('test.csv')\nblob.upload_from_filename('.\/test.csv')","bdeab3c3":"dataset_display_name = 'house_prices'","f955ff26":"new_dataset = False\ntry:\n    dataset = tables_client.get_dataset(dataset_display_name=dataset_display_name)\nexcept:\n    new_dataset = True\n    dataset = tables_client.create_dataset(dataset_display_name)","a9cf2252":"if new_dataset:\n    gcs_input_uris = ['gs:\/\/' + BUCKET_NAME + '\/train.csv']\n    \n    import_data_operation = tables_client.import_data(\n        dataset = dataset,\n        gcs_input_uris = gcs_input_uris\n    )\n    print('Dataset import operation: {}'.format(import_data_operation))\n    import_data_operation.result()","3815ad49":"model_display_name = 'model_prices'\nTARGET_COLUMN = 'SalePrice'\nID_COLUMN = 'Id'","becb0dff":"tables_client.set_target_column(\n    dataset=dataset,\n    column_spec_display_name=TARGET_COLUMN\n)","63010dbe":"for col in tables_client.list_column_specs(PROJECT_ID, BUCKET_REGION, dataset.name):\n    if TARGET_COLUMN in col.display_name or ID_COLUMN in col.display_name:\n        continue\n    tables_client.update_column_spec(PROJECT_ID,\n                                     BUCKET_REGION,\n                                     dataset.name,\n                                     column_spec_display_name=col.display_name,\n                                     type_code=col.data_type.type_code,\n                                     nullable=True\n                                    )","3e587876":"TRAIN_BUDGET = 1000\nmodel = None\ntry:\n    model = tables_client.get_model(model_display_name=model_display_name)\nexcept:\n    response = tables_client.create_model(\n        model_display_name,\n        dataset=dataset,\n        train_budget_milli_node_hours=TRAIN_BUDGET,\n        exclude_column_spec_names=[ID_COLUMN, TARGET_COLUMN]\n    )\n    print('Create model operation: {}'.format(response.operation))\n    model = response.result()","df890069":"gcs_input_uris = 'gs:\/\/' + BUCKET_NAME + '\/test.csv'\ngcs_output_uri_prefix = 'gs:\/\/' + BUCKET_NAME + '\/predictions'","85ad70c0":"batch_predict_response = tables_client.batch_predict(\n    model=model,\n    gcs_input_uris=gcs_input_uris,\n    gcs_output_uri_prefix=gcs_output_uri_prefix,\n)\nprint('Batch prediction operation: {}'.format(batch_predict_response.operation))\n\nbatch_predict_result = batch_predict_response.result()\nbatch_predict_response.metadata","1ff5cad6":"gcs_output_folder = batch_predict_response.metadata.batch_predict_details.output_info.gcs_output_directory.replace('gs:\/\/' + BUCKET_NAME + '\/', '')","2ffa2619":"blobs = storage_client.list_blobs(BUCKET_NAME, prefix=gcs_output_folder)","22eb9408":"for blob in blobs:\n    blob.download_to_filename('.\/tables.csv')","e40a83be":"preds_df = pd.read_csv(\"tables.csv\")","174866b4":"preds_df.head()","1f2e6f48":"submission_auto_ml = preds_df[['Id', 'predicted_SalePrice']]\nsubmission_auto_ml.columns = ['Id', 'SalePrice']\nsubmission_auto_ml.to_csv('submmission_auto_ml.csv', index=False)","e1360788":"\u3053\u306eNotebook\u306f [Kaggle Advent Calendar 2019 \\- Qiita](https:\/\/qiita.com\/advent-calendar\/2019\/kaggle) \u306e25\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u666e\u6bb5\u306f[Kaggle\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u7cfb\u306e\u30dd\u30c3\u30c9\u30ad\u30e3\u30b9\u30c8 regonn&curry.fm](https:\/\/scrapbox.io\/regonn-curry\/) \u3084\u3063\u3066\u307e\u3059\u3002\u308c\u3054\u3093\u3067\u3059\u3002\n\n\u4eca\u56de\u306fKaggle\u306eNotebook\u3067BigQueryML\u3068AutoML Tables\u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u3001\u52d5\u753b\u306b\u3082\u64ae\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u516c\u958b\u3084Private Sharing\u306e\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067\u3001\u52d5\u753b\u3082\u3053\u306eNotebook\u9650\u5b9a\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002","636612b5":"\u6b20\u640d\u5024\u3092\u4e2d\u592e\u5024\u3067\u57cb\u3081\u308b","3a133e7a":"\u30c7\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b","222a5b35":"\u4e88\u6e2c","896cc508":"Query\u306e\u5b9f\u884c","6f3341aa":"\u30e2\u30c7\u30eb\u4f5c\u6210","214d75fe":"\u3042\u3068\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306b\u3001CSV\u3067\u66f8\u304d\u51fa\u3057\u3066\u304a\u304f","c8e3b29d":"\u4e88\u6e2c\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9","7b499099":"# \u30c7\u30fc\u30bf\u306e\u6e96\u5099","451b82af":"test\u3082\u540c\u3058\u7528\u306b\u4f5c\u6210","d15278d5":"\u4e88\u6e2c","759fb7fc":"# Auto ML\n\n\u5148\u306bAuto ML \u30c6\u30fc\u30d6\u30ebAPI\u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\nhttps:\/\/console.cloud.google.com\/automl-tables","7e0094f3":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u3044\u304f","9cd74b49":"# BigQuery ML","10782588":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210","9ce0f590":"\u30e2\u30c7\u30eb\u4f5c\u6210"}}