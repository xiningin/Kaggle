{"cell_type":{"ed7c2eec":"code","79d59aca":"code","7f3bd531":"code","3ea80f01":"code","ffcec05b":"code","70c1a5bc":"code","eeeb87c9":"code","bcce5c00":"code","05529141":"markdown","8dc9e70f":"markdown"},"source":{"ed7c2eec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","79d59aca":"train = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/train.csv\")","7f3bd531":"train","3ea80f01":"import re\n\nalphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\ngod_list = ['buddha', 'allah', 'jesus']\ntrain_text_list = list(train['text'])\ntext_list_corpus = ''\n\nfor text in train_text_list:\n    text_list_corpus = text_list_corpus + text\n\ntext_list_corpus  = text_list_corpus.lower()\ntext_list_corpus\npattern = '(http|ftp|https):\/\/(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+\/(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+' \nclear_text = re.sub(pattern=pattern, repl='LINK', string=text_list_corpus)\nclear_text = clear_text = re.sub('[-=+,#\/\\?:^$.@*\\\"\u203b~&%\u318d!\u300f\\\\\u2018|\\(\\)\\[\\]\\<\\>`\\'\u2026\u300b;]', '', clear_text)\nclear_text = clear_text = re.sub('[0-9]', 'num ', clear_text)\nfor i in range(len(alphabets)):\n    clear_text = re.sub(alphabets[i]+'{3,}', alphabets[i], clear_text)\nfor i in range(len(god_list)):\n    clear_text = clear_text.replace(god_list[i], 'god')\nclear_text","ffcec05b":"import nltk\n\nfrom nltk.corpus import stopwords  \nstop_words = stopwords.words('english')\n\nfrom nltk.corpus import stopwords \nfrom nltk.tokenize import word_tokenize\nfrom nltk.stem.porter import PorterStemmer\nstemmer = PorterStemmer()","70c1a5bc":"word_list = word_tokenize(clear_text)\nword_list = [stemmer.stem(word) for word in word_list]\nword_list = [word for word in word_list if word not in stop_words]\nlen(list(set(word_list)))","eeeb87c9":"from collections import Counter\ncount = Counter(word_list)\ncommon_tag_200 = count.most_common(16208)\ncommon_tag_200[:10]","bcce5c00":"from wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\nwc = WordCloud(background_color=\"white\", width=3200, height=2400)\ncloud = wc.generate_from_frequencies(dict(common_tag_200))\nplt.figure(figsize=(20, 16))\nplt.axis('off')\nplt.imshow(cloud)\nplt.show()","05529141":"### Data pre-processing process\n\n- Compress three or more repeated alphabets into one alphabet -> using Regex\n- Convert the address (https \/ http \/ ftp) to LINK -> using Regex\n- Delete Special Characters -> using Regex\n- Convert numbers to string 'num' -> using Regex\n- Unify the name of Jesus, Buddha, and Allah as god","8dc9e70f":"# MAKE WORDCLOUD WITH PRE-PROCESSING"}}