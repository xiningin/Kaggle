{"cell_type":{"265d66bd":"code","be669042":"code","14ca39e2":"code","9f0ffbad":"code","0c615e85":"code","f79c368c":"code","0a44f5e9":"code","b2111534":"code","cb8c7d02":"code","f3b95c2e":"code","4f32ca25":"code","1da8bd16":"code","1a89b29a":"code","5c45ee9e":"code","b7619588":"code","8cce9519":"code","7724d928":"markdown","a81991f3":"markdown","de70ea42":"markdown","070f0570":"markdown"},"source":{"265d66bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","be669042":"import sqlite3\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport seaborn as sns\n%matplotlib inline","14ca39e2":"rc={'savefig.dpi': 75, 'figure.autolayout': False, 'figure.figsize': [12, 8], 'axes.labelsize': 18,\\\n   'axes.titlesize': 18, 'font.size': 18, 'lines.linewidth': 2.0, 'lines.markersize': 8, 'legend.fontsize': 16,\\\n   'xtick.labelsize': 16, 'ytick.labelsize': 16}\n\nsns.set(style='white',rc=rc)\n\ndefault_color = '#56B4E9'\ncolormap = plt.cm.cool","9f0ffbad":"def initiate_db(strcnx: Path) -> sqlite3.Cursor:\n    \"\"\"\n    Conecta no banco sqlite\n\n    Atributos:\n        strcnx: string de conex\u00e3o.\n    \"\"\"\n    strcnx_is_valid = Path(strcnx)\n    if not strcnx_is_valid.is_file():\n        raise (\"O arquivo sqlite3 n\u00e3o existe.\")\n    conn = sqlite3.connect(str(strcnx))\n    cur = conn.cursor()\n    return conn, cur","0c615e85":"db_path = Path(\"\/kaggle\/input\/acordaos-tcu\/tcu-acordaos.db\")\nconn, cur = initiate_db(db_path)","f79c368c":"query = \"SELECT COUNT(DISTINCT id) as quantitativo_acordao, ano_acordao as ano from acordaos group by ano_acordao\"\ncount_acordaos = pd.read_sql_query(query, conn)","0a44f5e9":"count_acordaos","b2111534":"count_acordaos['ano'] = count_acordaos[\"ano\"].astype('category')","cb8c7d02":"count_acordaos.dtypes","f3b95c2e":"count_acordaos.plot.bar(x='ano')","4f32ca25":"query_relator = \"SELECT COUNT(DISTINCT id) as quantitativo_acordao, relator from acordaos group by relator\"\ncount_relator = pd.read_sql_query(query_relator, conn)","1da8bd16":"count_relator.sort_values('quantitativo_acordao',inplace=True, ascending=False)","1a89b29a":"plt.figure(figsize=(12,15)) \nax = sns.barplot(data=count_relator, x= \"quantitativo_acordao\", y = count_relator.relator,  palette=\"GnBu_d\") \nax.set(ylabel = 'Relator');","5c45ee9e":"query_dados_2016 = \"SELECT * from acordaos where ano_acordao = 2016\"\nd2016 = pd.read_sql_query(query_dados_2016, conn)","b7619588":"d2016.head()","8cce9519":"d2016.to_csv('tcu-assunto-sumario.csv') ","7724d928":"> # 1. Quantitativo de ac\u00f3rd\u00e3os por ano presentes na base","a81991f3":"# 4. Salva em CSV","de70ea42":"> # 2. Quantitativo de ac\u00f3rd\u00e3os por relator","070f0570":"# 3. EDA DOS AC\u00d3RD\u00c3OS REFERENTES AO ANO DE 2016"}}