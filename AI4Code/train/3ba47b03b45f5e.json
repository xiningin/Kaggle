{"cell_type":{"03a58827":"code","80068e92":"code","f6e2e00a":"code","485094a8":"code","0f4e10fa":"code","751001c5":"code","136dcb59":"code","6b4db3a9":"code","cbdd2cfe":"code","f5561ad6":"code","67874915":"code","b4d4a691":"code","27eb13c4":"code","2d568d6f":"code","da6d94e6":"code","94c2a179":"code","19b523b9":"code","d18fc4d4":"code","0d083d2d":"code","8b29c573":"code","f5e176bf":"markdown","ac657e3f":"markdown","ffd257c4":"markdown","c6d8934a":"markdown","00fd0eb5":"markdown","27abae31":"markdown","6da4f438":"markdown","c6d53b6c":"markdown","8bb00ea7":"markdown","fd2ea5ff":"markdown","1da413fe":"markdown","7ca0317e":"markdown","362d78ff":"markdown","bb285f4d":"markdown","fa2c68aa":"markdown","0b41c546":"markdown","303c10b4":"markdown","392a1153":"markdown","e0ad81af":"markdown","edf3ddee":"markdown","110c2cd5":"markdown","011fad2a":"markdown","7b2d6677":"markdown"},"source":{"03a58827":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80068e92":"customer_data = pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","f6e2e00a":"# Checking a few records to have an idea of the values in each columns\n\ncustomer_data.head()","485094a8":"# Checking what are the different data types and if there are any missing values\n\ncustomer_data.info()","0f4e10fa":"customer_data.describe()","751001c5":"# importing libraries for visualization\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","136dcb59":"# plotting Count of Customers based on Gender \n\nsns.countplot(customer_data[\"Gender\"])\nplt.title(\"Count of Customers based on Gender\")\nplt.show()","6b4db3a9":"# Representing the above analysis in a pie-chart \n\nlabels = [\"Female\", \"Male\"]\nplt.pie(customer_data[\"Gender\"].value_counts(), labels=labels, autopct='%1.1f%%',\n        shadow=True)\nplt.title(\"% Customers based on Gender\")\nplt.show()","cbdd2cfe":"# Histogram to show distribution of Age\n\nsns.distplot(customer_data[\"Age\"])\nplt.show()","f5561ad6":"sns.boxplot(customer_data[\"Age\"])\nplt.show()","67874915":"sns.distplot(customer_data[\"Annual Income (k$)\"])\nplt.show()","b4d4a691":"sns.boxplot(customer_data[\"Annual Income (k$)\"])\nplt.show()","27eb13c4":"sns.distplot(customer_data[\"Spending Score (1-100)\"])\nplt.show()","2d568d6f":"sns.boxplot(customer_data[\"Spending Score (1-100)\"])\nplt.show()","da6d94e6":"from sklearn.cluster import KMeans","94c2a179":"k = np.arange(2,11)\n\ninertia = []\nscore = []\n\nfor i in k:\n    kmeans = KMeans(n_clusters=i, random_state=42)\n    kmeans.fit(customer_data[[\"Age\",\"Annual Income (k$)\",\"Spending Score (1-100)\"]])\n    inertia.append(kmeans.inertia_)\n\nplt.plot(k,inertia,\"o-\")\nplt.xticks(k)\nplt.xlabel(\"K Value\")\nplt.ylabel(\"Inertia\")\nplt.title(\"Finding the value of K - Elbow Method\")\nplt.show()","19b523b9":"from sklearn.metrics import silhouette_score\n\nn = np.arange(2,11)\nscore=[]\nfor i in n:\n    kmeans = KMeans(n_clusters=i, random_state=42)\n    kmeans.fit(customer_data[[\"Age\",\"Annual Income (k$)\",\"Spending Score (1-100)\"]])\n    score.append(silhouette_score(customer_data[[\"Age\",\"Annual Income (k$)\",\"Spending Score (1-100)\"]], kmeans.labels_))\n    \n\nplt.plot(k,score,\"*-\")\nplt.xlabel(\"K Value\")\nplt.ylabel(\"Silhouette Score\")\nplt.title(\"Finding the value of K - Silhouette Method\")\nplt.xticks(k)\nplt.show()","d18fc4d4":"model = KMeans(n_clusters = 6, random_state= 111)\nmodel.fit(customer_data[[\"Age\",\"Annual Income (k$)\",\"Spending Score (1-100)\"]])\nlabels = model.labels_\ncentroids = model.cluster_centers_","0d083d2d":"import plotly as py\nimport plotly.graph_objs as go","8b29c573":"customer_data['label'] =  labels\ntrace1 = go.Scatter3d(\n    x= customer_data['Age'],\n    y= customer_data['Spending Score (1-100)'],\n    z= customer_data['Annual Income (k$)'],\n    mode='markers',\n     marker=dict(\n        color = customer_data['label'], \n        size= 20,\n        line=dict(\n            color= customer_data['label'],\n            width= 12\n        ),\n        opacity=0.8\n     )\n)\ndata = [trace1]\nlayout = go.Layout(\n    title= 'Clusters',\n    scene = dict(\n            xaxis = dict(title  = 'Age'),\n            yaxis = dict(title  = 'Spending Score'),\n            zaxis = dict(title  = 'Annual Income')\n        )\n)\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig)","f5e176bf":"* There is an outlier though with ~140K income.","ac657e3f":"## 3. Exploratory Data Analysis","ffd257c4":"# Customer Segmentation\n\n1. Importing the data\n2. Analyzing the data\n3. Exploratory Data Analysis (Visualization)\n4. Clustering using K-Means\n5. Finding the K value - Elbow Method, Silhouette Score Method\n6. 3D Plot of Clusters\n","c6d8934a":"* There are more Female customers coming into the mall.","00fd0eb5":"### K-Means Clustering","27abae31":"* We can see that the Inertia values tend to decrease sharply until 6 and the slop decreases after that.\n* **Inertia** here is defined as performance metric and is the mean squared distance between each instance and it's closest centroid.\n* Having said that, we need a way to validate if using K value of 6 results in optimum solution or not.","6da4f438":"### Analyzing the Gender of customers","c6d53b6c":"Source: https:\/\/www.kaggle.com\/kushal1996\/customer-segmentation-k-means-analysis","8bb00ea7":"* Silhouette Score is the mean Silhouette Coefficient over all the instances.\n* An instance's Silhouette Coefficient is equal to (b-a)\/max(a,b), where a is the mean distance to the other instances in the same cluster and b is the mean distance to the nearest cluster.\n* Silhouette Coefficient can vary between -1 and +1.\n* A coefficient close to +1 means that the instance is well inside its own cluster and far from other clusters, while a coefficient close to 0 means that it is close to a cluster boundary, and finally a coefficient close to -1 means that the isntance may have been assigned to the wrong cluster.","fd2ea5ff":"* There are 4 numeric columns and 1 categorical column.","1da413fe":"## 2. Analyzing the data","7ca0317e":"### Finding the optimum value of K","362d78ff":"* 56% of the customers are Female\n* 44% of the customers are Male","bb285f4d":"### Analyzing the Spending Score of customers","fa2c68aa":"**1. Elbow Method**","0b41c546":"* We have 5 features - all of them seem to be self explanatory except Spending Score for it has been mentioned in the data description - Spending Score is something you assign to the customer based on your defined parameters like customer behavior and purchasing data.","303c10b4":"* The maximum Age is 70","392a1153":"### 1. Importing the data","e0ad81af":"* The Annual income seems to be normally distributed","edf3ddee":"* We can see above that the Silhouette Score reaches maximum at K value of 6, hence we will choose the same as our cluster size.","110c2cd5":"**2. Silhouette Method**","011fad2a":"### 3D Plot of Clusters","7b2d6677":"### Analyzing the Age of customers"}}