{"cell_type":{"ddaec0df":"code","8746ab09":"code","bdce43cc":"code","70887586":"code","246d48d7":"code","88834982":"code","c64b6fa1":"code","5b42c147":"code","96c28f88":"code","de4fc4b0":"code","4f87c7cf":"code","c9e9ae17":"code","ed0e38a2":"code","ad7d2495":"code","727160a4":"code","fe287d0a":"code","fa788d4e":"code","357ecd4c":"code","ec2e6f86":"code","110b8987":"code","aa5874cf":"code","3e1d84e9":"code","5087240c":"code","01db4471":"markdown"},"source":{"ddaec0df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8746ab09":"ls \/kaggle\/input\/comunas-chile\/Comunas\n","bdce43cc":"ls ..\/input\/covid-comunas-chile","70887586":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd","246d48d7":"df_map = gpd.read_file(\"\/kaggle\/input\/comunas-chile\/Comunas\/comunas.shp\")\ndf_covid = gpd.read_file(\"..\/input\/covid-comunas-chile\/covid_comunas.csv\")\n#Obtenido desde https:\/\/github.com\/MinCiencia\/Datos-COVID19\/blob\/master\/output\/producto1\/Covid-19.csv","88834982":"df_map","c64b6fa1":"df_map.info()","5b42c147":"df_map['Comuna'] = df_map['Comuna'].astype('str')\n\n\ndef remove_accents(a):\n    return unidecode.unidecode(a.decode('utf-8'))\n#remuevo los caracteres especiales de los nombres de las comunas.\ndf_map['Comuna'] = df_map['Comuna'].str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')\ndf_map","96c28f88":"df_mapa_chile=df_map.iloc[:, [-3,-1]]\n#Selecciono las comunas que requiero, los datos geometricos y el nombre de cadad comuna","de4fc4b0":"df_mapa_chile","4f87c7cf":"df_covid","c9e9ae17":"df_covid['total_aLafecha']=df_covid.iloc[:, -3]\ndf_covid[\"total_aLafecha\"] = pd.to_numeric(df_covid[\"total_aLafecha\"])\ndf_covid","ed0e38a2":"df_covid","ad7d2495":"df_covid_final=df_covid.iloc[:, [2,-1]]\ndf_covid_final","727160a4":"#Hay filas que no ti\ndf_covid_final.drop(df_covid_final[df_covid_final['total_aLafecha'].isnull()].index, inplace = True)\ndf_covid_final","fe287d0a":"df_covid_final.isnull().sum()","fa788d4e":"df_mapa_chile","357ecd4c":"merged_df_chile = df_mapa_chile.set_index('Comuna').join(df_covid_final.set_index('Comuna'))\nmerged_df_chile","ec2e6f86":"merged_df_chile = merged_df_chile.fillna(0)\n#Algunas comunas no tienen datos de contagios...","110b8987":"merged_df_chile","aa5874cf":"p, ax = plt.subplots(1, figsize=(40,50))\nax.set_title('test2', fontdict={'fontsize': '21', 'fontweight' : '1000'})\nmerged_df_chile.plot(column='total_aLafecha', cmap='Reds', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True)\nax.axis('off')\nplt.show()","3e1d84e9":"by_year = merged_df_chile.sort_values('total_aLafecha')\nby_year","5087240c":"df_covid.loc[df_covid.loc[:, 'Comuna'] == 'Valdivia']","01db4471":"Hay 16 fillas son datos, supongo que son datos que se suman a los totales de cada provincia, pero este mapa es de las comunas... podria sumarlos igualmente, pero no lo hare.. simplemente eliminare dichas filas."}}