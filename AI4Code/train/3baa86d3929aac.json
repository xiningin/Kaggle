{"cell_type":{"1bd47186":"code","2bd02fb7":"code","33c87c68":"code","b560e796":"code","e7fc36e3":"code","1e3c9070":"code","e97c28b4":"code","5b158b03":"code","66377e75":"code","6ed659d8":"code","962dda4b":"code","c2b8eb2c":"code","2da6b69a":"code","3bc31c56":"code","d276b2c1":"markdown","f00e7c89":"markdown","83eed395":"markdown","22869801":"markdown","038abf8b":"markdown","96a9bc6a":"markdown","aad6a511":"markdown","a0a26922":"markdown","9f57a183":"markdown","f7838931":"markdown","62d150d7":"markdown","5a9df8eb":"markdown"},"source":{"1bd47186":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2bd02fb7":"#import Data with pandas library\ndf = pd.read_csv('..\/input\/winemag-data-130k-v2.csv')","33c87c68":"#Information About Data\ndf.info()","b560e796":"# names of Columns\ndf.columns","e7fc36e3":"#Change the column name \"Unnamed : 0\" to \"#Index and recheck the name of the column\"\ndf=df.rename(columns = {'Unnamed: 0':'#Index'})\ndf.columns","1e3c9070":"df.corr()","e97c28b4":"#Correlation Heat Map\nsns.heatmap(df.corr(),vmax = 1, vmin = 0,annot = True)\nplt.show()","5b158b03":"#First 5 Data\ndf.head(5)","66377e75":"#line plot of the points \nplt.figure(figsize=(20,10))\nplt.plot(df.points, color = 'orange',label = 'Points', linewidth=0.3,alpha=0.7)\nplt.xlabel('Index')\nplt.ylabel('Point')\nplt.title('Wine Point Line Graph')\nplt.legend()\nplt.show()","6ed659d8":"#Scatter Plot of Countries Points\nplt.figure(figsize=(30,10))\nplt.scatter(df.country, df.points,color = 'g')\nplt.xticks(rotation=90)\nplt.xlabel ('Country')\nplt.ylabel('Points')\nplt.title(\"Countries Wine Points\")\nplt.show()","962dda4b":"# Frequency of Variety\nplt.figure(figsize=(30,10))\nplt.hist(df.country, bins = 30)\nplt.xticks(rotation=90)\nplt.xlabel = ('Country')\nplt.ylabel('Frequency')\nplt.title('Productivity of Countries')\nplt.show()","c2b8eb2c":"# Wines have point above 95\npoint_filter = df.points > 95\ndf[point_filter].head(5)","2da6b69a":"#Wine have price below 200\nprice_filter = df.price<200\ndf[price_filter].head(5)","3bc31c56":"# Point % Price Filter\ndf[np.logical_and(point_filter, price_filter)].head(5)","d276b2c1":"**2.** Check Summary info of the data","f00e7c89":"It seems Price and the Points have positive correleation","83eed395":"**7. **Line Plot the Points of the wines","22869801":"**10.** Some Filtering Operations","038abf8b":"**8.** Scatter Country to Price","96a9bc6a":"**5.** Check the Correlation Heat Map","aad6a511":"**9. **Histogram Plot of Variety","a0a26922":"**6. ** Check First 5 data","9f57a183":"As we have only two non-string columns (First one is the index) there is only two column output for correlation","f7838931":"**4. **Correlation of the columns","62d150d7":"**3. ** Check the Name of the Columns","5a9df8eb":"**1.** Import the Data"}}