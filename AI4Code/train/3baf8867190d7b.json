{"cell_type":{"96e7fde5":"code","14e8d38b":"code","18f03ebf":"code","d7ef7f55":"code","d3dc024e":"code","c49274a3":"code","e17f6eeb":"code","e4b4c794":"code","f139075b":"code","99c2a407":"code","3cfdb0d2":"code","79d20dee":"code","1f8e394b":"code","3a3983f7":"code","d3dfe1b9":"code","a61b2a3d":"code","18ade93d":"code","60ed8b44":"code","d0aa58c0":"code","b10f640f":"code","bb54223b":"code","6befbbb4":"code","0381452e":"code","ea577ad5":"code","535c2451":"code","5e3ee747":"code","7ccfc0e0":"code","e73fab4f":"code","81c38a4d":"code","8d608071":"code","6ad9fd7f":"code","fcf28be4":"code","fa08050b":"code","9489d72d":"code","f3bed80f":"code","4bb022d6":"code","d6cd9acc":"code","4cd0944a":"code","8735ad8e":"code","ad35620a":"code","830bc9c8":"code","a79a6031":"code","c2a145c6":"code","f1dc42f6":"code","300b1145":"code","ec4d3f6c":"code","ddd7702b":"code","093b570e":"code","5de0de81":"code","89d2e514":"code","66d065bc":"code","70b0a408":"code","0d717c87":"code","971f3ad7":"code","6047d0af":"code","6b6f14ee":"code","8d1e0407":"code","e7e38f21":"code","c1974a54":"code","216dcddd":"code","8d12b279":"markdown","410fa3ff":"markdown","19138d64":"markdown","a35d13a1":"markdown","99a54329":"markdown","571aca20":"markdown","3958b8c7":"markdown","445d5981":"markdown","4ab2bbca":"markdown","bb3cb613":"markdown","4bce3c3e":"markdown","33eb7422":"markdown","e446ad7f":"markdown","045c8071":"markdown","4544ab52":"markdown","a124a144":"markdown"},"source":{"96e7fde5":"#imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","14e8d38b":"#load our data\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","18f03ebf":"train","d7ef7f55":"y_train=pd.DataFrame(train[\"Survived\"])\nx_train=train.drop([\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\",\"Fare\"],1)\nx_test=test.drop([\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\",\"Fare\"],1)\ny_test=gender_submission.drop([\"PassengerId\"],1)","d3dc024e":"x_train","c49274a3":"y_train","e17f6eeb":"x_test","e4b4c794":"y_test","f139075b":"x_train.info()","99c2a407":"x_test.info()","3cfdb0d2":"y_train.info()","79d20dee":"y_test.info()","1f8e394b":"print(x_train[\"Age\"].isna().sum())\nprint(x_test[\"Age\"].isna().sum())\nprint(x_train[\"Embarked\"].isna().sum())","3a3983f7":"x_train[\"Age\"]=x_train[\"Age\"].fillna(value=x_train[\"Age\"].mean())\nx_test[\"Age\"]=x_test[\"Age\"].fillna(value=x_test[\"Age\"].mean())\nx_train[\"Embarked\"]=x_train[\"Embarked\"].fillna(value=x_train[\"Embarked\"].mode()[0])\nx_test[\"Embarked\"]=x_test[\"Embarked\"].fillna(value=x_test[\"Embarked\"].mode()[0])","d3dfe1b9":"print(x_train[\"Age\"].isna().sum())\nprint(x_test[\"Age\"].isna().sum())\nprint(x_train[\"Embarked\"].isna().sum())","a61b2a3d":"x_train","18ade93d":"x_test","60ed8b44":"x_train.Embarked.unique()","d0aa58c0":"sex={'male':0,'female':1}\nemb={'Q':0,'S':1,'C':2}","b10f640f":"x_train[\"Sex\"]=x_train[\"Sex\"].map(sex)\nx_train[\"Embarked\"]=x_train[\"Embarked\"].map(emb)\nx_test[\"Sex\"]=x_test[\"Sex\"].map(sex)\nx_test[\"Embarked\"]=x_test[\"Embarked\"].map(emb)","bb54223b":"x_train","6befbbb4":"x_test","0381452e":"y_train.hist(column='Survived')","ea577ad5":"x_train.hist(column='Pclass')","535c2451":"x_train.hist(column='Sex')","5e3ee747":"x_train.hist(column='Embarked')","7ccfc0e0":"x_train.hist(column='Parch')","e73fab4f":"x_train.hist(column='SibSp')","81c38a4d":"x_train.hist(column='Age',bins=20)","8d608071":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Pclass\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Pclass\"],kde_kws={\"label\":\"died\"})","6ad9fd7f":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Age\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Age\"],kde_kws={\"label\":\"died\"})","fcf28be4":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Sex\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Sex\"],kde_kws={\"label\":\"died\"})","fa08050b":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"SibSp\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"SibSp\"],kde_kws={\"label\":\"died\"})","9489d72d":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Parch\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Parch\"],kde_kws={\"label\":\"died\"})","f3bed80f":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Embarked\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Embarked\"],kde_kws={\"label\":\"died\"})","4bb022d6":"pd.cut(x_train[\"Age\"],bins=4).unique()","d6cd9acc":"def factorize_age(col):\n    for i,e in enumerate(col):\n        if col[i] > 0.34 and col[i] <=20.315:\n            col[i]=0\n        elif col[i] > 20.315 and col[i] <=40.21:\n             col[i]=1\n        elif col[i] >40.21 and col[i] <=60.105:\n            col[i]=2\n        elif col[i] > 60.105 and col[i] <=80.0:\n            col[i]=3\n    return col","4cd0944a":"factorize_age(x_train[\"Age\"])\nfactorize_age(x_test[\"Age\"])","8735ad8e":"\nx_train","ad35620a":"x_test","830bc9c8":"fig=plt.figure(figsize=(10,10))\nsns.distplot(x_train.loc[x_train[\"Survived\"]==1][\"Age\"],kde_kws={\"label\":\"Survived\"})\nsns.distplot(x_train.loc[x_train[\"Survived\"]==0][\"Age\"],kde_kws={\"label\":\"died\"})","a79a6031":"x_train=x_train.drop([\"Survived\"],1)","c2a145c6":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()","f1dc42f6":"x_train=sc.fit_transform(x_train)\nx_test=sc.transform(x_test)","300b1145":"x_train","ec4d3f6c":"from sklearn.linear_model import LogisticRegression\nregressor1=LogisticRegression(random_state=0)","ddd7702b":"regressor1.fit(x_train,y_train)","093b570e":"y_pred1=regressor1.predict(x_test)","5de0de81":"from sklearn.metrics import confusion_matrix\ncm1=confusion_matrix(y_test,y_pred1)","89d2e514":"cm1","66d065bc":"print((255+144)\/(266+152))","70b0a408":"from sklearn.svm import SVC\nregressor2=SVC(kernel='rbf',random_state=0)\nregressor2.fit(x_train,y_train)","0d717c87":"y_pred2=regressor2.predict(x_test)\ncm2=confusion_matrix(y_test,y_pred2)","971f3ad7":"cm2","6047d0af":"print((254+123)\/(254+123+12+29))","6b6f14ee":"gender_submission","8d1e0407":"y_pred1=pd.DataFrame(y_pred1)\ny_pred1","e7e38f21":"y_pred1[\"PassengerId\"]=gender_submission[\"PassengerId\"]\ny_pred1[\"Survived\"]=y_pred1.loc[:,0]\ny_pred1=y_pred1.drop(y_pred1.columns[0],1)","c1974a54":"y_pred1","216dcddd":"y_pred1.to_csv('SurvivedPrediction.csv',index=False)","8d12b279":"**Correlations**","410fa3ff":"- Here I replaced the NaN values in age columns with the mean of ages, and replaced the NaN values in Embarked columns with the mode of Emparked columns","19138d64":"- Convert Age here to catigorical values","a35d13a1":"- Now we can print a gain and see that there is no NaN values","99a54329":"- To read ages more easy I splitted it to four ranges","571aca20":"**Separating and Splitting data**\n\nI assumed that \"PassengerId\",\"Name\",\"Ticket\",\"Cabin\" and \"Fare\" columns will not add usefull information to our prediction, so I dropped it.\nalso gender_submission ( as a test lable ) has an additional column which is \"PassengerId\", so I also dropped it.","3958b8c7":"- from info we can see that age column in each of training and testing set has NaN values, and also Embarked column in traing set as we can see in the following cell .","445d5981":"- Embarked and Sex columns are not numerical so I converted it here to catigorical values","4ab2bbca":"**Prediction**\n- Now we will use logistic regression and SVM to predict our lables ","bb3cb613":"It's my first notbook so its so basic ,has a simple data preprocessing then I used logistic regression and SVM for prediction","4bce3c3e":"- We don't need \"Survived\" column in training set as it is in testing set","33eb7422":"**Visualizing our data**\n\n- The number of unsurvived peaple is greater than The number of survived.","e446ad7f":"- The number of survived males is greater than The number of survived females","045c8071":"- Most of unsurvived peaple are at the age of thirty","4544ab52":"- Get 95.5% accuracy with logistic regrission","a124a144":"- Get 90.2% accuracy with SVM"}}