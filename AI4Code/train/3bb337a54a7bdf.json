{"cell_type":{"dd5a67ed":"code","c7c792f8":"code","2643aa1f":"code","adeca22a":"code","d2118737":"code","0aca812f":"code","15a3829c":"code","cf082b05":"code","8390f273":"code","7b750844":"code","d47b9ee4":"code","c60f9d2d":"code","6cd64c9a":"code","3fc9d41d":"code","2fd99ab0":"code","09a4280a":"code","62a521ec":"code","0c7d05c8":"code","1bd488cd":"code","7b5bc8f6":"code","6234e07a":"code","6f11d149":"code","5eb44d12":"code","3a3cf80a":"code","76d9129c":"code","b36c2e3f":"code","0585d032":"code","82c46936":"code","d07d01ae":"code","0db8848a":"code","645577e9":"code","a3034c52":"code","3bde96a1":"code","1337b37d":"code","b67d0ea6":"code","417e0a0a":"code","0b17622b":"code","785d4bbd":"code","774495ad":"code","e19b5772":"code","f5a9570a":"code","0f6daa80":"markdown","9a89f67d":"markdown","f47645fb":"markdown","c922eb89":"markdown","d4696f86":"markdown","32e00c96":"markdown","1647ff23":"markdown","50b3f99f":"markdown","e457efde":"markdown"},"source":{"dd5a67ed":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os       \nprint(os.listdir(\"..\/input\"))","c7c792f8":"train=pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')","2643aa1f":"train.head()","adeca22a":"train.shape","d2118737":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","0aca812f":"#Lets have a countplot based on the Survived column\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='RdBu_r')","15a3829c":"#Lets have the same countplot when compared to gender wise.\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train,palette='RdBu_r')","cf082b05":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train,palette='rainbow')","8390f273":"#Let us categorize the data\nnum_cols=[var for var in train.columns if train[var].dtypes != 'O']\ncat_cols=[var for var in train.columns if train[var].dtypes != 'int64' and train[var].dtypes != 'float64']\nprint('No of numerical cols: ',len(num_cols))\nprint('No of categoriacl cols: ',len(cat_cols))\nprint('Total No of Cols: ',len(cat_cols+ num_cols))","7b750844":"#Lets create a histogram for the age column\ntrain['Age'].hist(bins=30,color='darkred',alpha=0.7)","d47b9ee4":"sum(train['PassengerId'].duplicated()),sum(test['PassengerId'].duplicated())","c60f9d2d":"sns.countplot(x='SibSp',data=train)","6cd64c9a":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","3fc9d41d":"#Columns with null values in the Train dataFrame\nvar_with_na=[var for var in train.columns if train[var].isnull().sum()>=1 ]\n\nfor var in var_with_na:\n    print(var, np.round(train[var].isnull().mean(),3), '% missing values')","2fd99ab0":"#Columns with null values in the Test dataFrame\nvar_with_na2=[var for var in test.columns if test[var].isnull().sum()>=1 ]\n\nfor var in var_with_na2:\n    print(var, np.round(test[var].isnull().mean(),3), '% missing values')","09a4280a":"test['Fare'].head()","62a521ec":"num_miss_vars=['age','Fare']\ncat_miss_vars=['Embarked']\ndrop_cols=['Cabin']","0c7d05c8":"combine=[train,test]\n\nfor df in combine:\n    df.drop(columns=drop_cols, inplace=True)","1bd488cd":"for df in combine:\n    df['Embarked'].fillna('S',inplace=True)","7b5bc8f6":"test['Fare'].fillna('35.6',inplace=True)","6234e07a":"#Lets create a heatmap to see which all columns has null values\nsns.heatmap(train.isnull(), yticklabels=False, cmap='viridis',cbar='cyan')","6f11d149":"sns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","5eb44d12":"def impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n    ","3a3cf80a":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)\ntest['Age'] =train[['Age','Pclass']].apply(impute_age,axis=1)","76d9129c":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","b36c2e3f":"train.head()","0585d032":"train.info()","82c46936":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","d07d01ae":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","0db8848a":"train = pd.concat([train,sex,embark],axis=1)","645577e9":"train.head()","a3034c52":"sex = pd.get_dummies(test['Sex'],drop_first=True)\nembark = pd.get_dummies(test['Embarked'],drop_first=True)","3bde96a1":"test.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","1337b37d":"test = pd.concat([test,sex,embark],axis=1)","b67d0ea6":"test.head()","417e0a0a":"X_train=train.drop(columns='Survived')\nY_train=train['Survived']\n#X_test=test.drop(columns='PassengerId')\nX_test1=test","0b17622b":"#X_test1['Fare']=X_test1['Fare'].astype('float64')","785d4bbd":"#from sklearn.linear_model import LogisticRegression\n#logmodel = LogisticRegression()\n#logmodel.fit(X_train,Y_train)\n#predictions = logmodel.predict(X_test1)","774495ad":"from sklearn.ensemble import RandomForestClassifier\nrandom_forest = RandomForestClassifier(n_estimators=1000)\nrandom_forest.fit(X_train, Y_train)\nY_pred = random_forest.predict(X_test1)\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\nacc_random_forest","e19b5772":"final_df = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": Y_pred\n    })","f5a9570a":"# Save the dataframe to a csv file\nfinal_df.to_csv('submission.csv',index=False)","0f6daa80":"Lets check the training dataframe now..\n","9a89f67d":"# EDA: Exploratory Data Analysis","f47645fb":"**Observation:** We can see that there more male who didn't survived.","c922eb89":"## Import Libraries\nLet's import some libraries to get started!","d4696f86":"## Missing Data\nWe can use seaborn to create a simple heatmap to see where we are missing data!","32e00c96":"## The Data\nLet's start by reading in the titanic_train.csv file into a pandas dataframe","1647ff23":"**Observation:** We can see that the Age and Cabin columns have some missing data.","50b3f99f":"**Observation:** The 1st class people survived the most and on the other hand maximum people who didn't make it were from the 3rd class.","e457efde":"**Observation:** We can see that there roughly 550 people who didn't make it"}}