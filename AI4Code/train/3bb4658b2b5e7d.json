{"cell_type":{"25909ae4":"code","f9713d91":"code","ab2f2b32":"code","b6dc7974":"code","98b6d64e":"code","675d77cc":"code","15b1f19a":"code","07d0aa92":"code","0efdab54":"code","11b6e755":"code","b74301df":"code","b76f738d":"code","85deacdb":"code","b676e391":"code","0b73f077":"code","f7074a3f":"code","eca97243":"code","721adc9c":"code","f30305e7":"code","96723cc7":"code","50c0dfd7":"code","976f9563":"code","793051e2":"code","4281137f":"code","c0172ed0":"markdown","7e2ce31e":"markdown","2a607a73":"markdown","eef9b649":"markdown"},"source":{"25909ae4":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestClassifier\n%matplotlib inline","f9713d91":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\nsubmission = pd.read_csv(\"..\/input\/gender_submission.csv\")","ab2f2b32":"train.head()","b6dc7974":"test.head()","98b6d64e":"submission.head()","675d77cc":"all_data = pd.concat([train, test], sort = False)\nall_data.info()","15b1f19a":"# Age, Fare\uc758 null \uac12\uc744 \uc911\uc559\uac12\uc73c\ub85c \uce58\ud658\nall_data['Age'] = all_data['Age'].fillna(all_data['Age'].median())\nall_data['Fare'] = all_data['Fare'].fillna(all_data['Fare'].median())","07d0aa92":"all_data.info()","0efdab54":"sns.catplot(x='Embarked', kind='count', data=all_data);","11b6e755":"# Embarked \uc911 \uac00\uc7a5 \ub9ce\uc740 'S'\ub85c null \uac12 \uce58\ud658\nall_data['Embarked'] = all_data['Embarked'].fillna('S')\nall_data.info()","b74301df":"# \ub098\uc774 feature \uad6c\uac04 \ub098\ub204\uae30\nall_data.loc[all_data['Age'] <= 15, 'Age'] = 0\nall_data.loc[(all_data['Age'] > 15) & (all_data['Age'] <= 25), 'Age'] = 1\nall_data.loc[(all_data['Age'] > 25) & (all_data['Age'] <= 35), 'Age'] = 2\nall_data.loc[(all_data['Age'] > 35) & (all_data['Age'] <= 45), 'Age'] = 3\nall_data.loc[(all_data['Age'] > 45) & (all_data['Age'] <= 60), 'Age'] = 4\nall_data.loc[ all_data['Age'] > 60, 'Age'] = 5","b76f738d":"# Title \ucd94\ucd9c \ud568\uc218\nimport re\ndef get_title(name):\n    title_search = re.search(' ([A-Za-z]+\\.)', name)\n    \n    if title_search:\n        return title_search.group(1)\n    return \"\"","85deacdb":"# Title \ucd94\ucd9c\nall_data['Title'] = all_data['Name'].apply(get_title)\nall_data['Title'].value_counts()","b676e391":"# Title\uc744 \ub300\ud45c Title\ub85c \ucd95\uc18c\nall_data['Title'] = all_data['Title'].replace(['Capt.', 'Dr.', 'Major.', 'Rev.'], 'Officer.')\nall_data['Title'] = all_data['Title'].replace(['Lady.', 'Countess.', 'Don.', 'Sir.', 'Jonkheer.', 'Dona.'], 'Royal.')\nall_data['Title'] = all_data['Title'].replace(['Mlle.', 'Ms.'], 'Miss.')\nall_data['Title'] = all_data['Title'].replace(['Mme.'], 'Mrs.')\nall_data['Title'].value_counts()","0b73f077":"# Cabin null\uac12 \ucc98\ub9ac\nall_data['Cabin'] = all_data['Cabin'].fillna('Missing')\nall_data['Cabin'] = all_data['Cabin'].str[0]\nall_data['Cabin'].value_counts()","f7074a3f":"# \uac00\uc871 \uc218 \ubc0f \ud63c\uc790\uc0ac\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub300\ud55c feature \ucd94\uac00\nall_data['Family_Size'] = all_data['SibSp'] + all_data['Parch'] + 1\nall_data['IsAlone'] = 0\nall_data.loc[all_data['Family_Size']==1, 'IsAlone'] = 1\nall_data.head()","eca97243":"# \ubaa8\ub378\ub9c1\uc5d0 \ud544\uc694 \uc5c6\ub294 feature \uc0ad\uc81c\nall_data.drop(['Name', 'Ticket'], axis=1, inplace=True)\nall_data.head()","721adc9c":"# \ubc94\uc8fc\ud615 feature \uac00\ubcc0\uc218\ud654\ud558\uae30\nall_dummies = pd.get_dummies(all_data, drop_first=True)\nall_dummies.head()","f30305e7":"train = all_dummies[all_dummies['Survived'].notna()]\ntrain.info()","96723cc7":"test = all_dummies[all_dummies['Survived'].isna()]\ntest.info()","50c0dfd7":"X = train.drop(['PassengerId','Survived'], axis=1)\ny = train['Survived']\n\ntest = test.drop(['PassengerId', 'Survived'], axis=1)","976f9563":"clf = RandomForestClassifier(n_estimators=200, min_samples_split=10, random_state=42)\nclf.fit(X, y)","793051e2":"pred = clf.predict(test).astype(int)\nsubmission['Survived'] = pred","4281137f":"submission.to_csv(\"submission.csv\", index=False)","c0172ed0":"# \ubaa8\ub378\ub9c1 \ubc0f \ud6c8\ub828\/\uc608\uce21","7e2ce31e":"# \uc804\ucc98\ub9ac & \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1","2a607a73":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","eef9b649":"# \ub370\uc774\ud130 \uc77d\uc5b4\uc624\uae30"}}