{"cell_type":{"530590df":"code","b536570c":"code","56ae1134":"code","bbafbefa":"code","127b20ac":"code","77f30bea":"code","4ec0307d":"code","9ce4d509":"code","61f26ad2":"code","62bcb99b":"code","45af1736":"code","92c188b5":"code","ceb78828":"code","c85a68b5":"code","0a7d624f":"code","d45ba45a":"code","46b89b94":"code","ea0b07e4":"code","92cf9c99":"code","b7e1c5eb":"code","14886543":"code","dbb181e2":"code","195c2d6a":"code","beea9ccb":"code","573ef04e":"code","e9b16eb4":"code","813aa531":"code","9d961ebb":"markdown","41f7653d":"markdown","70db216d":"markdown","d4557ffb":"markdown","6fa955a3":"markdown","7f7f717c":"markdown","9949f7cf":"markdown","c4e7b21f":"markdown","e7a3bc1a":"markdown","10f4d170":"markdown","81c16ffa":"markdown","ac3fbe38":"markdown","fe552b76":"markdown","2687648d":"markdown","57ed304d":"markdown","c54c113c":"markdown","f8745aa2":"markdown","a96efba3":"markdown","3fe1db4b":"markdown","35d9b3cc":"markdown","3042de60":"markdown","5a3e93e9":"markdown","8d20d27b":"markdown","2f4244dd":"markdown","266a6859":"markdown"},"source":{"530590df":"#Importing libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom geopy.geocoders import Nominatim\nfrom folium.plugins import HeatMap\nimport folium","b536570c":"#Uploading Restaurant Data\ndf = pd.read_csv(\"..\/input\/zomato-bangalore-restaurants\/zomato.csv\")\ndf.head()","56ae1134":"df.shape","bbafbefa":"len(df['name'].unique())","127b20ac":"df.replace(\"[]\", np.nan, inplace = True)\ndf.info()","77f30bea":"df.isna().sum()","4ec0307d":"df['rate'].unique()","9ce4d509":"df.dropna(axis='index',subset=['rate'],inplace=True)","61f26ad2":"#Splitting function\ndef split(x):\n    return x.split('\/')[0]\n\ndf['rate']=df['rate'].apply(split)","62bcb99b":"df.replace('NEW',0,inplace=True)\ndf.replace('-',0,inplace=True)\n\n#Change the type from string to float\ndf['rate']=df['rate'].astype(float)","45af1736":"df['rate'].unique()","92c188b5":"df.head()","ceb78828":"#Descriptive statistics of the restaurant dataset, including objects\ndf.describe(include = \"all\")","c85a68b5":"#Frequency of the top 10 restaurants in Bangaluru\ndf[\"name\"].value_counts()[:10].plot(kind='pie',\n                                    figsize=(15, 6),\n                                    autopct='%1.1f%%', \n                                    startangle=90,    \n                                    shadow=True,\n                                    labels=None,\n                                    pctdistance=1.12,       \n                                    )\n        \nplt.title('Pie Chart Percentage of Top 10 Restaurants in Bangaluru', y=1.12) \n\nplt.axis('equal') \n\nplt.legend(labels=df[\"name\"].value_counts().index, loc='center left') \n\nplt.show()","0a7d624f":"#Online order percentage pie chart\ndf['online_order'].value_counts().plot(kind='pie',\n                                      figsize=(15, 6),\n                                      autopct='%1.1f%%', \n                                      startangle=90,    \n                                      shadow=True,       \n                                      labels=None,                 \n                                      pctdistance=1.12,            \n                                      ) \n\nplt.title('Online Order Pie Chart', y=1.12) \nplt.axis('equal') \n\n# add legend\nplt.legend(labels=df['online_order'].value_counts().index, loc='center left') \n\n# show plot\nplt.show()","d45ba45a":"#Table booking percentage pie chart\ndf['book_table'].value_counts().plot(kind='pie',\n                                      figsize=(15, 6),\n                                      autopct='%1.1f%%', \n                                      startangle=90,    \n                                      shadow=True,       \n                                      labels=None,                 \n                                      pctdistance=1.12,            \n                                      ) \n\nplt.title('Table Booking Pie Chart', y=1.12) \nplt.axis('equal') \n\n# add legend\nplt.legend(labels=df['book_table'].value_counts().index, loc='center left') \n\n# show plot\nplt.show()","46b89b94":"df['rest_type'].dropna(inplace=True)","ea0b07e4":"len(df['rest_type'].unique())","92cf9c99":"plt.figure(figsize=(7,7))\nrest=df['rest_type'].value_counts()[:20]\nsns.barplot(rest,rest.index)\nplt.title(\"Restaurant Types\")\nplt.xlabel(\"Count\")","b7e1c5eb":"#Histogram of ratings\nfig, ax = plt.subplots(1, 1)\nbins = np.linspace(df['rate'].min(),df['rate'].max(),4)\nax = sns.distplot(df['rate'], bins)\n  \nax.set_title(\"Rating Histogram\")\nax.set_xlabel('Rate')\nax.set_ylabel('Density')\n  \n# Make some labels\nrects = ax.patches\nlabels = [\"Low Rating\",\"Med Rating\",\"High Rating\"]\n  \nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height+0.01, label,\n            ha='center', va='bottom')\nplt.show()","14886543":"#Cleaning and changing type of approximate cost for two people data\ndf.dropna(axis='index',subset=['approx_cost(for two people)'],inplace=True)\ndf['approx_cost(for two people)']=df['approx_cost(for two people)'].apply(lambda x: x.replace(',',''))\ndf['approx_cost(for two people)']=df['approx_cost(for two people)'].astype(int)","dbb181e2":"#Claculating rate\/cost ratio and assigning them to a new column\ndf['rate\/cost'] = df['rate'] \/ df['approx_cost(for two people)']","195c2d6a":"df.head()","beea9ccb":"df[['name', 'rate', 'approx_cost(for two people)', 'rate\/cost']].sort_values('rate\/cost', ascending=False)","573ef04e":"#Rate\/cost histogram\nfig, ax = plt.subplots(1, 1)\nax = sns.distplot(df['rate\/cost'])\n  \nax.set_title(\"Rate\/cost Histogram\")\nax.set_xlabel('Rate\/cost')\nax.set_ylabel('Density')\n\nplt.show()","e9b16eb4":"#Finding the locations with most restaurants\ndf['location'].value_counts().T","813aa531":"plt.figure(figsize=(7,7))\nRestaurants_loc = df['location'].value_counts()[:25]\nsns.barplot(Restaurants_loc,Restaurants_loc.index)","9d961ebb":"## Location of Restaurants","41f7653d":"Now, we want to find the restaurants that provide the highest rated service for the cheapest price. We are going to do that with adding a feature to the dataframe, called rate\/cost by dividing the rate of each restaurant to the approximate cost for two people. (Since we want the rate to be high and the cost to be low as much as possible.)","70db216d":"From the pie charts above we can see that ehe majority of the restaurants do online ordering. However, only a small percentage of restaurants do table bookings.","d4557ffb":"Histogram of rate\/cost values shows us that most of the restaurants either provides good service for an expensive price or a low rated service for a cheap price. (Histogram is left skewed and almost 90% of restaurant have a relatively low Rate\/cost ratio.","6fa955a3":"Cafe Coffe Day is the restaurant with the most branches in Bangaluru. But we know that there are 8792 different restaurant brands, therefore, this top 10 pie chart of the restaurants represents only a minuscular amount of the brands.","7f7f717c":"This split function splits the '\/5' part of the rates to helps us convert the rates to a float number.","9949f7cf":"[] objects are missing values, so we have replaced them with 'NaN'.","c4e7b21f":"Lastly, we are going to find the areas in Bangaluru that has the most restaurants and then create a heat map of Bangaluru to see the the density of the restaurants on the map. ","e7a3bc1a":"The shape of DataFrame implies that there are 51717 different restaurants and 17 different features in the dataset. And the length of the each unique name implies that there are 8792 different restaurant brands. The main features of the restaurants that are going to be analyzed in this exploratory data analysis are going to be name, online booking, table booking, rate, location and approximate cost for two people of the restaurants.","10f4d170":"## Rest Type of Restaurants","81c16ffa":"There are 88 different rest types.","ac3fbe38":"Quick Bites is by far the most popular restaurant type in Bangaluru. However, Casual Dining and Cafe can still be considered popular when compared to the other rest types.","fe552b76":"Because we're going to work with the rates, we want to clean the rate data first (and remove \/5 parts).\n","2687648d":"The nan values and the rate data is cleaned now. We can acces the rate data easily as float numbers from this dataframe.","57ed304d":"From the sorted values we can see that Srinidhi Sagar is the restaurant brand that provides the highest rated service for the cheapest price. Lowest rate\/cost values of zeroes are resulted by the outlier zero values we have assigned for nan values.","c54c113c":"## Percentages of Online Order and Table Booking Restaurants\n### (Categorial Data Analysis)","f8745aa2":"First, we are going to clear the data set from NaN values and other irregularities that may cause discrepancies in our analysis, especially when analyzing the rate data.","a96efba3":"BTM is by far the location with the most restaurants in Bangaluru.","3fe1db4b":"## Cleaning Data Set","35d9b3cc":"The descriptive statistics of the restaurant data is above. It provides good statistical data for rate and vote features, but we can only see basics stats of other features because all the other features are categorical.","3042de60":"## Finding the Cheapest Restaurants with Highest Ratings","5a3e93e9":"## Restaurant Freuqency","8d20d27b":"## Histogram of Restaurant Ratings","2f4244dd":"From this histogram we can see that the plot is right skewed and most of the rating data is considered a high rating. However this is mainly because of the outlier values of zeroes that we have created to replace nan values. We can see that almost 50% of the ratings are close to a rating of 4\/5.","266a6859":"# Zomato Bangalore Restaurants Exploratory Data Analysis"}}