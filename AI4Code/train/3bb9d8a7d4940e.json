{"cell_type":{"f6074e4b":"code","8f80078d":"code","1d8d22b9":"code","c2630774":"code","8d9fd020":"code","34e47eec":"code","8a6ece82":"code","1443dcc0":"code","6fff844d":"code","dd6ddfa8":"code","40d2e903":"code","598f4c96":"code","7973c1ad":"code","d689d8f9":"code","5568dcfb":"code","785a14cb":"code","1de741a5":"code","94f9b277":"code","ebef9e20":"code","d9df6e42":"code","dda49ebf":"code","e3e651a5":"code","556dff4d":"code","72de951e":"code","b85506e8":"code","225e3191":"code","79a763de":"code","1ea1926c":"markdown","a0e8d28e":"markdown"},"source":{"f6074e4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in 3\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","8f80078d":"data = pd.read_csv(\"\/kaggle\/input\/diabetic-retinopathy-resized\/trainLabels.csv\")\ndata.head()","1d8d22b9":"data.head()","c2630774":"data['image_name'] = [i+\".jpeg\" for i in data['image'].values]\ndata.head()","8d9fd020":"data['level'].hist()\ndata['level'].value_counts()","34e47eec":"from sklearn.model_selection import train_test_split","8a6ece82":"train, val = train_test_split(data, test_size=0.15)","1443dcc0":"train.shape, val.shape","6fff844d":"from keras.preprocessing.image import ImageDataGenerator","dd6ddfa8":"import cv2\ndef load_ben_color(image):\n    IMG_SIZE = 224\n    sigmaX=10\n    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))\n    image=cv2.addWeighted ( image,4, cv2.GaussianBlur( image , (0,0) , sigmaX) ,-4 ,128)\n    return image","40d2e903":"data_gen = ImageDataGenerator(rescale=1\/255.,\n                              zoom_range=0.15,\n                              fill_mode='constant',\n                              cval=0.,\n                              horizontal_flip=True,\n                              vertical_flip=True,\n                              preprocessing_function=load_ben_color)","598f4c96":"# batch size\nbs = 32\n\ntrain_gen = data_gen.flow_from_dataframe(train, \n                                         \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                         x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                         batch_size=bs,\n                                         target_size=(224, 224))\nval_gen = data_gen.flow_from_dataframe(val,\n                                       \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                       x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                       batch_size=bs,\n                                       target_size=(224, 224))","7973c1ad":"from keras.applications.vgg19 import VGG19\nimport keras.layers as L\nfrom keras.models import Model","d689d8f9":"base_model = VGG19(weights='imagenet',\n                   include_top=False,\n                   input_shape=(224, 224, 3))\nx = base_model.output\nx = L.GlobalMaxPooling2D()(x)\nx = L.BatchNormalization()(x)\nx = L.Dropout(0.4)(x)\nx = L.Dense(1024, activation=\"relu\")(x)\nx = L.Dropout(0.2)(x)\nx = L.Dense(64, activation=\"relu\")(x)\npredictions = L.Dense(5, activation='softmax')(x)","5568dcfb":"len(base_model.layers)","785a14cb":"model = Model(inputs=base_model.input, outputs=predictions)","1de741a5":"for layer in base_model.layers[:18]: layer.trainable = False","94f9b277":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","ebef9e20":"model.summary()","d9df6e42":"from keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nmodel_chk = ModelCheckpoint(\"vgg19_model.h5\", save_best_only=True, monitor=\"val_accuracy\")\nreduce_lr = ReduceLROnPlateau()","dda49ebf":"model.fit_generator(train_gen, train_gen.n \/\/ bs,\n                    validation_data=val_gen, validation_steps=val_gen.n \/\/ bs,\n                    epochs=30, workers=4, callbacks=[model_chk])","e3e651a5":"model.evaluate_generator(val_gen, steps=val_gen.n\/bs, verbose=1)","556dff4d":"from keras.models import load_model\nmodel = load_model(\"vgg19_model.h5\")","72de951e":"from PIL import Image\nim = Image.open(\"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\" + val.iloc[0].image_name)\nim = np.array(im.resize((224, )*2, resample=Image.LANCZOS))\nim.shape","b85506e8":"import matplotlib.pyplot as plt\nplt.imshow(im)","225e3191":"plt.imshow(load_ben_color(im))","79a763de":"print(\"predicted:\", np.argmax(model.predict(load_ben_color(im).reshape(1, *im.shape))[0]))\nprint(\"actual:\", val.iloc[0].level)","1ea1926c":"test some instances","a0e8d28e":"### VGG19"}}