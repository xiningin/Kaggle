{"cell_type":{"a95c2bed":"code","76ad4525":"code","bd82c2a8":"code","c07155b5":"code","f238526a":"code","d957ddbc":"code","7c0bb57a":"code","6b04aeb1":"code","4d522688":"code","fad024b9":"code","cb114b7f":"code","0ec770be":"code","0e989025":"code","607ee561":"code","5517e720":"code","56254c23":"code","00ff15db":"code","4aac54bf":"markdown","ebd3aff9":"markdown","2618f892":"markdown","2e7c26f5":"markdown","7f00c3b2":"markdown","fb77088e":"markdown","c2742f88":"markdown","0b29e04b":"markdown","061b2ec7":"markdown","fc6f07b6":"markdown","9fb46859":"markdown"},"source":{"a95c2bed":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split","76ad4525":"import os\nprint(os.listdir(\"..\/input\"))","bd82c2a8":"iris = pd.read_csv(\"..\/input\/Iris.csv\")\nprint(\"Type: \"+str(type(iris)))\nprint(\"Names of column fields: \\n\"+str(iris.columns))\nprint(\"\\n Shape of dataset: \"+str(iris.shape))\nprint(\"Head of dataset: \")\nprint(iris.head())","c07155b5":"print(\"\\n Brief description of data: \")\nprint(iris.describe())","f238526a":"# Shuffling data\nfrom sklearn.utils import shuffle\niris = shuffle(iris)","d957ddbc":"# Seperating target and features\nX = iris.iloc[:,1:5].values\ny = iris.iloc[:,5].values","7c0bb57a":"# Scaling and normalization\n#X_scale = (X-X.mean(0))\/X.std(0)\nX_scale = X","6b04aeb1":"# Encoding categorical data\nlabelencoder_y = LabelEncoder()\ny_encode = labelencoder_y.fit_transform(y)\n\nprint(\"Name of classes: \"+str(labelencoder_y.classes_))\nprint(\"Classes: \"+str(np.unique(y_encode)))","4d522688":"print(y.reshape(150,1).shape)\nprint(X.shape)","fad024b9":"# Using pairplot available in the seaborn package to visualize data\ndata = np.hstack((X,y.reshape(150,1)))\ncolumns = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm','Species']\nsns.pairplot(pd.DataFrame(data= data, columns= columns),hue=\"Species\")","cb114b7f":"# from above plot we can easily arrive to following conclusions\n# 1. from the plot of SepalWidthCm vs PetalWidthCm we can see a clear seperation between Setosa and other #species based on PetalWidth\n# 2. from the plot of SepalWidthCm vs SepalLengthCm there is ALMOST  boundary between versicolor and verginica and a clear boundary between setosa and other two species based on the first obeservation we can with 100 certainity and accuracy predict whether specie is setosa or not, based on second obervation we can with high accuracy predict the specie.","0ec770be":"X_train, X_test, y_train, y_test = train_test_split(X_scale, y_encode,test_size=0.3)","0e989025":"from sklearn.naive_bayes import MultinomialNB\nclf = MultinomialNB()\nclf.fit(X_train,y_train)","607ee561":"y_pred = clf.predict(X_test)","5517e720":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test, y_pred))","56254c23":"from sklearn.metrics import confusion_matrix\ncnf_matrix = confusion_matrix(y_test, y_pred)\n\nfrom mlxtend.plotting import plot_confusion_matrix\nfig, ax = plot_confusion_matrix(conf_mat=confusion_matrix(y_test, y_pred),\n                                colorbar=True,\n                                show_absolute=False,\n                                show_normed=True)\nplt.xticks(np.arange(0,3,1),labelencoder_y.classes_,rotation=90,size=15)\nplt.yticks(np.arange(0,3,1),labelencoder_y.classes_,size=15)\nplt.xlabel('Predicted label',color='red',fontsize=20)\nplt.ylabel('True label',color='red',fontsize=20)\nplt.show()","00ff15db":"print(list(zip(iris.columns[1:5].values, abs(clf.coef_.sum(axis=0)))))\nplt.barh(iris.columns[1:5].values, abs(clf.coef_.sum(axis=0)))","4aac54bf":"# Classification using Naive bayes on iris dataset","ebd3aff9":"## 3.Preprocessing the data","2618f892":"## 5. Splitting the data into test\/train","2e7c26f5":"## 9. Confusion Matrix","7f00c3b2":"## 8. Accuracy","fb77088e":"## 2. Importing the dataset","c2742f88":"## 4. Visualizing the data","0b29e04b":"## 7. Prediction","061b2ec7":"## 1. Importing necessary packages","fc6f07b6":"## 10. Importance of each feature","9fb46859":"## 6. Classification algorithm - Naive bayes"}}