{"cell_type":{"9d63a7f4":"code","37428d02":"code","762861d3":"code","e1ec7d9b":"code","69d9f545":"code","5cc0f591":"code","af267dd3":"code","23717dfa":"code","2cab2892":"code","6459c607":"code","39d47358":"code","b21856a2":"code","05248d18":"code","4c743840":"code","e8b89734":"code","6046157d":"code","9684e056":"code","dcc50e37":"code","339cfce3":"code","4a58f4b2":"code","e514700f":"markdown","970c99e4":"markdown","275fcd4b":"markdown","cfd4fe1e":"markdown","71c76f96":"markdown","36cf5910":"markdown","57202bea":"markdown"},"source":{"9d63a7f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37428d02":"df_car = pd.read_csv('..\/input\/cars-dataset\/cars.csv')\ndf_car.head(6)","762861d3":"df_car.columns","e1ec7d9b":"df_car.shape","69d9f545":"df_car.describe()","5cc0f591":"df_car.tail(3)","af267dd3":"df_car.info()","23717dfa":"df_car.isnull().sum()","2cab2892":"df_car.head(5)","6459c607":"df_car.corr()","39d47358":"df = df_car.loc[100:130]","b21856a2":"df[['engine-location', 'num-of-doors' , 'symboling']]","05248d18":"sns.set_theme(style=\"darkgrid\")\n\nax = sns.countplot(x=\"num-of-doors\", data= df_car)\n#how many different num of doors with count value","4c743840":"ax = sns.countplot(x=\"body-style\", data= df_car)\n#how many different body styles with count","e8b89734":"sns.catplot(x=\"drive-wheels\", y=\"wheel-base\", data= df_car)\n#cat plot for driver wheel and base wheel","6046157d":"sns.countplot(df_car['engine-location']);\n","9684e056":"sns.kdeplot(df_car['stroke']);\n#density plot for stroke","dcc50e37":"sns.catplot(x=\"fuel-type\", y=\"horsepower\", data=df_car )\n#effect on horsepower due to fuel type","339cfce3":"sns.catplot(x=\"fuel-type\", y=\"price\", hue=\"engine-type\", kind=\"swarm\", data= df_car)\n#plotting impact of fuel type on price and engine type","4a58f4b2":"corr = df.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)\n#correlation between df columns","e514700f":"Object types of each column","970c99e4":"Last 3 rows","275fcd4b":"Make Suitable Plots of the follwing Features num-of-doors body-style drive-wheels engine-location wheel-base stroke fuel-type horsepower price","cfd4fe1e":"Top five rows","71c76f96":"Null values count in each column","36cf5910":"Access 100th to 130th row with any 3 columns","57202bea":"Summary Statistics"}}