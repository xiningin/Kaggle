{"cell_type":{"33acbc24":"code","ff4fa479":"code","85ed7acf":"code","a13d06ba":"code","5ad6f074":"code","9b6b923b":"code","99ffd4bc":"code","5662d701":"code","e55edddc":"code","31df1898":"code","11293526":"code","3b21190a":"code","890cbffa":"code","613953b1":"code","e302e2a6":"code","14e4d0ad":"code","8cd04728":"code","4338b3cb":"code","faa1c8c1":"code","5a2176dc":"markdown","7f9a59a6":"markdown"},"source":{"33acbc24":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff4fa479":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","85ed7acf":"df=pd.read_csv('\/kaggle\/input\/parkinsons-data-set\/parkinsons.data')\npd.set_option('display.max_columns', None)\ndf","a13d06ba":"df.shape","5ad6f074":"df.info()","9b6b923b":"df.describe()","99ffd4bc":"df['status'].value_counts(normalize=True)","5662d701":"df.isnull().sum()","e55edddc":"sns.pairplot(df,hue='status')\nplt.show()","31df1898":"fig,axes=plt.subplots(5,5,figsize=(15,15))\naxes=axes.flatten()\n\nfor i in range(1,len(df.columns)-1):\n    sns.boxplot(x='status',y=df.iloc[:,i],data=df,orient='v',ax=axes[i])\nplt.tight_layout()\nplt.show()","11293526":"plt.figure(figsize=(25,15))\nsns.heatmap(df.corr(),annot=True,linewidths=0.8)\nplt.show() ","3b21190a":"X=df.drop(['status','name'],axis=1)\ny=df['status']","890cbffa":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","613953b1":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\ndtc=DecisionTreeClassifier(criterion='entropy')\ndtc.fit(X_train,y_train)","e302e2a6":"pred=dtc.predict(X_test)","14e4d0ad":"print(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(accuracy_score(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","8cd04728":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier()\nrf.fit(X_train,y_train)","4338b3cb":"pred_rf=rf.predict(X_test)","faa1c8c1":"print(confusion_matrix(y_test,pred_rf))\nprint('\\n')\nprint(classification_report(y_test,pred_rf))\nprint('\\n')\nprint(\"The Train score of Random Forest is :\",rf.score(X_train,y_train))\nprint(\"The Test score of Random Forest is :\",rf.score(X_test,y_test))","5a2176dc":"**Random Forest**","7f9a59a6":"**Decision Tree**"}}