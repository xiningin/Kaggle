{"cell_type":{"2701110c":"code","f45ffd6f":"code","174059ed":"code","02973415":"code","3ce45466":"code","8ec1322f":"code","c1a3fd46":"code","e8bd0fa6":"code","fe512e5e":"code","a6144b09":"code","fe81f666":"code","01835261":"code","597d792c":"code","1df11ad6":"code","668b71c0":"code","a8a237e8":"code","920195bd":"code","a140ba9a":"code","d308243f":"code","4b6108db":"code","a020b89b":"code","280e910d":"code","ecb9d630":"code","b18e5b14":"code","39a48383":"code","c28ed58e":"code","44a7f511":"code","ceeed879":"code","f7e24ec7":"markdown","cb4afded":"markdown","c8ddf6b5":"markdown","4ff75459":"markdown","75b7773f":"markdown","8b6128af":"markdown","6e8291b4":"markdown","b219f9bc":"markdown","099a9923":"markdown","b6d5e154":"markdown","c08cb6a5":"markdown","583c6dae":"markdown","dd1a4f3b":"markdown","228816df":"markdown","aeaae68c":"markdown","dbd0cc09":"markdown","cfdd8a17":"markdown","663202e1":"markdown","18157aaa":"markdown","6c9866a4":"markdown","fa6089d8":"markdown","0fab456c":"markdown","037c3779":"markdown","b855f150":"markdown","b4bc1977":"markdown","93a4c31c":"markdown","57dfda19":"markdown","35934bf6":"markdown","6326836d":"markdown","10486c0a":"markdown","bc7d76ed":"markdown","755c3285":"markdown","842844cc":"markdown","5bf520db":"markdown","64cef661":"markdown","ffb8f242":"markdown","68595460":"markdown","45cd1b97":"markdown","79922299":"markdown","8cbc58c8":"markdown","d35c2679":"markdown","8ffd9df7":"markdown","b901a2f2":"markdown","b6014d00":"markdown","ae0a3a08":"markdown","e5c75977":"markdown","07b7befd":"markdown","1dedf55b":"markdown","4b49c332":"markdown","7f8f32c8":"markdown"},"source":{"2701110c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f45ffd6f":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","174059ed":"df.head()","02973415":"df.shape","3ce45466":"df.describe()","8ec1322f":"df.info()","c1a3fd46":"df.isnull().sum()","e8bd0fa6":"df.drop(columns='CustomerID',axis=1,inplace=True)","fe512e5e":"df.head()","a6144b09":"plt.figure(1, figsize=(15,6))\nn = 0\nfor x in ['Age','Annual Income (k$)','Spending Score (1-100)']:\n    n = n + 1\n    plt.subplot(1,3,n)\n    plt.subplots_adjust(hspace=0.5,wspace=0.5)\n    sns.distplot(df[x],bins=20)\n    plt.title('Distplot of {}'.format(x))\nplt.show()","fe81f666":"plt.figure(figsize=(15,5))\nsns.countplot(y='Gender',data=df)\nplt.show()","01835261":"plt.figure(1, figsize=(15,7))\nn = 0\nfor cols in ['Age','Annual Income (k$)','Spending Score (1-100)']:\n    n = n + 1\n    plt.subplot(1,3,n)\n    sns.set(style='whitegrid')\n    plt.subplots_adjust(hspace=0.5,wspace=0.5)\n    sns.violinplot(x = cols, y = 'Gender', data = df)\n    plt.ylabel('Gender' if n == 1 else '')\n    plt.title('Violin Plot')\nplt.show()","597d792c":"age_18_25 = df.Age[(df.Age >= 18) & (df.Age <= 25)]\nage_26_35 = df.Age[(df.Age >= 26) & (df.Age <= 35)]\nage_36_45 = df.Age[(df.Age >= 36) & (df.Age <= 45)]\nage_46_55 = df.Age[(df.Age >= 46) & (df.Age <= 55)]\nage_55above = df.Age[(df.Age >= 56)]\n\n\nagex = ['18-25','26-35','36-45','46-55','55+']\nagey = [len(age_18_25),len(age_26_35),len(age_36_45),len(age_46_55),len(age_55above)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=agex,y=agey,palette='mako')\nplt.title('Number of Customer & Ages')\nplt.xlabel('Age')\nplt.ylabel('Number of Customer')\nplt.show()","1df11ad6":"sns.relplot(x='Annual Income (k$)',y='Spending Score (1-100)',data=df)","668b71c0":"ss_1_20 = df['Spending Score (1-100)'][(df['Spending Score (1-100)'] >= 1) & (df['Spending Score (1-100)'] <= 20)]\nss_21_40 = df['Spending Score (1-100)'][(df['Spending Score (1-100)'] >= 21) & (df['Spending Score (1-100)'] <= 40)]\nss_41_60 = df['Spending Score (1-100)'][(df['Spending Score (1-100)'] >= 41) & (df['Spending Score (1-100)'] <= 60)]\nss_61_80 = df['Spending Score (1-100)'][(df['Spending Score (1-100)'] >= 61) & (df['Spending Score (1-100)'] <= 80)]\nss_81_100 = df['Spending Score (1-100)'][(df['Spending Score (1-100)'] >= 81) & (df['Spending Score (1-100)'] <= 100)]\n\n\nssx = ['1-20','21-40','41-60','61-80','81-100']\nssy = [len(ss_1_20),len(ss_21_40),len(ss_41_60),len(ss_61_80),len(ss_81_100)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=ssx,y=ssy,palette='rocket')\nplt.title('Spending Score')\nplt.xlabel('Score')\nplt.ylabel('Number of Customer having the Score')\nplt.show()","a8a237e8":"ai0_30 = df['Annual Income (k$)'][(df['Annual Income (k$)'] >= 0) & (df['Annual Income (k$)'] <= 30)]\nai31_60 = df['Annual Income (k$)'][(df['Annual Income (k$)'] >= 31) & (df['Annual Income (k$)'] <= 60)]\nai61_90 = df['Annual Income (k$)'][(df['Annual Income (k$)'] >= 61) & (df['Annual Income (k$)'] <= 90)]\nai91_120 = df['Annual Income (k$)'][(df['Annual Income (k$)'] >= 91) & (df['Annual Income (k$)'] <= 120)]\nai121_150 = df['Annual Income (k$)'][(df['Annual Income (k$)'] >= 121) & (df['Annual Income (k$)'] <= 150)]\n\n\naix = ['$ 0 - 30,000','$ 30,001 - 60,000','$ 60,001 - 90,000','$ 9,001 - 120,000','$ 120,001 - 150,000']\naiy = [len(ai0_30),len(ai31_60),len(ai61_90),len(ai91_120),len(ai121_150)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=aix,y=aiy,palette='Spectral')\nplt.title('Annual Incomes')\nplt.xlabel('Income')\nplt.ylabel('Number of Customer')\nplt.show()","920195bd":"X1 = df.loc[:,['Age','Spending Score (1-100)']].values\n\nfrom sklearn.cluster import KMeans\nwcss = []\n\nfor k in range(1,11):\n    kmeans = KMeans(n_clusters=k, init='k-means++')\n    kmeans.fit(X1)\n    wcss.append(kmeans.inertia_)\nplt.figure(figsize=(12,6))\nplt.grid()\nplt.plot(range(1,11),wcss,linewidth=2,color='red',marker='8')\nplt.xlabel('K-Value')\nplt.ylabel('WCSS')\nplt.show()","a140ba9a":"kmeans = KMeans(n_clusters=4)\n\nlabels = kmeans.fit_predict(X1)\n\nprint(labels)","d308243f":"print(kmeans.cluster_centers_)","4b6108db":"plt.scatter(X1[:,0],X1[:,1],c=kmeans.labels_, cmap='rainbow')\nplt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color='black')\nplt.title('Clusters of Customers')\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.show()","a020b89b":"X2 = df.loc[:,['Annual Income (k$)','Spending Score (1-100)']].values\n\nfrom sklearn.cluster import KMeans\nwcss = []\n\nfor k in range(1,11):\n    kmeans = KMeans(n_clusters=k, init='k-means++')\n    kmeans.fit(X2)\n    wcss.append(kmeans.inertia_)\nplt.figure(figsize=(12,6))\nplt.grid()\nplt.plot(range(1,11),wcss,linewidth=2,color='red',marker='8')\nplt.xlabel('K-Value')\nplt.ylabel('WCSS')\nplt.show()","280e910d":"kmeans = KMeans(n_clusters=5)\n\nlabels = kmeans.fit_predict(X2)\n\nprint(labels)","ecb9d630":"print(kmeans.cluster_centers_)","b18e5b14":"plt.scatter(X2[:,0],X2[:,1],c=kmeans.labels_, cmap='rainbow')\nplt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color='black')\nplt.title('Clusters of Customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.show()","39a48383":"X3 = df.iloc[:,1:]\n\nwcss = []\n\nfor k in range(1,11):\n    kmeans = KMeans(n_clusters=k,init='k-means++')\n    kmeans.fit(X3)\n    wcss.append(kmeans.inertia_)\nplt.figure(figsize=(12,6))\nplt.grid()\nplt.plot(range(1,11),wcss,linewidth=2,color='red',marker='8')\nplt.xlabel('K-Value')\nplt.ylabel('WCSS')\nplt.show()","c28ed58e":"kmeans = KMeans(n_clusters=5)\n\nlabels = kmeans.fit_predict(X3)\n\nprint(labels)","44a7f511":"print(kmeans.cluster_centers_)","ceeed879":"clusters = kmeans.fit_predict(X3)\ndf['Label'] = clusters\n\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure(figsize=(20,10))\nax = fig.add_subplot(111,projection='3d')\nax.scatter(df.Age[df.Label == 0],df['Annual Income (k$)'][df.Label == 0],df['Spending Score (1-100)'][df.Label == 0], c='blue', s=60)\nax.scatter(df.Age[df.Label == 1],df['Annual Income (k$)'][df.Label == 1],df['Spending Score (1-100)'][df.Label == 1], c='red', s=60)\nax.scatter(df.Age[df.Label == 2],df['Annual Income (k$)'][df.Label == 2],df['Spending Score (1-100)'][df.Label == 2], c='green', s=60)\nax.scatter(df.Age[df.Label == 3],df['Annual Income (k$)'][df.Label == 3],df['Spending Score (1-100)'][df.Label == 3], c='orange', s=60)\nax.scatter(df.Age[df.Label == 4],df['Annual Income (k$)'][df.Label == 4],df['Spending Score (1-100)'][df.Label == 4], c='purple', s=60)\nax.view_init(30,185)\n\nplt.xlabel('Age')\nplt.ylabel('Annual Income (k$)')\nax.set_zlabel('Spending Score (1-100)')\n\nplt.show()","f7e24ec7":"**Lets consider number of clusters be 5.**","cb4afded":"**First 5 rows of the dataset**","c8ddf6b5":"**Statistical information about the dataset**","4ff75459":"**Finding the number of Clusters we need to create**","75b7773f":"**Finding:**\n* Count of Female is more gender-wise","8b6128af":"# **4. Finding the numbers of clusters needs to be created**","6e8291b4":"**Finally:**\nCustomer Segmentation is done by clustering customer data based on various variables.","b219f9bc":"**Finding the number of Clusters we need to create**","099a9923":"**Distribution plot of numerical columns**","b6d5e154":"## **Problem Statement**\nYou own the mall and want to understand the customers like who can be easily converge [Target Customers] so that the sense can be given to marketing team and plan the strategy accordingly.","c08cb6a5":"**Loading the dataset**","583c6dae":"**Datatype of columns in the dataset**","dd1a4f3b":"**Finding:**\n* We can see the density of each category gender-wise.","228816df":"**Dropping \"CustomerID\" column as this column is useless for analyzation**","aeaae68c":"# **3. Analysis**","dbd0cc09":"**Now, our data is divided into 5 clusters: 0,1,2,3,4**","cfdd8a17":"**Visualizing the Age cluster on a graph**","663202e1":"## **Content**\n\nYou are owing a supermarket mall and through membership cards , you have some basic data about your customers like Customer ID, age, gender, annual income and spending score.\n\nSpending Score is something you assign to the customer based on your defined parameters like customer behavior and purchasing data.","18157aaa":"**Dividing Spending Score into different ranges**","6c9866a4":"**Finding:**\n* Highest number of count lies in 41-60 spending score range.","fa6089d8":"**Lets consider number of clusters be 5.**","0fab456c":"**Checking the centroids**","037c3779":"**Finding:**\n* Age group of 30s is having highest desnsity.\n* Most people have income that lies between 50 - 70k USD.\n* Most people have a spending score of 50.","b855f150":"**Relationship between \"Annual Income (k$)\" & \"Spending Score (1-100)\"**","b4bc1977":"Checking the centroids","93a4c31c":"**Dividing Annual Income into different ranges**","57dfda19":"## **Acknowledgement**\nFrom Udemy's Machine Learning A-Z course. [Link of the Dataset](https:\/\/github.com\/SteffiPeTaffy\/machineLearningAZ\/blob\/master\/Machine%20Learning%20A-Z%20Template%20Folder\/Part%204%20-%20Clustering\/Section%2025%20-%20Hierarchical%20Clustering\/Mall_Customers.csv)","35934bf6":"**Visualizing the Age cluster on a graph**","6326836d":"**Dividing Age into different ranges**","10486c0a":"**Finding:**\n* Highest number of count lies in 26-35 age range.","bc7d76ed":"**Finding:**\n* We can see the clusters of customers.","755c3285":"## **Process for this model building**\n\n* Importing necessary libraries and dataset\n* Getting familiar with the dataset\n* Cleaning the dataset\n* Processing the dataset\n* Divinding data into ranges\n* Checking for relationships\n* Finding the numbers of clusters needs to be created\n* Visualizing the clusters on graphs","842844cc":"**Now, our data is divided into 4 clusters: 0,1,2,3**","5bf520db":"**Violent plot of numerical columns**","64cef661":"# **2. Prepare & Process**\n\n**Key Objective:**\n\n* Observe and familiarize with data\n* Check for null or missing values\n* Perform sanity check of data","ffb8f242":"**Checking for null values**","68595460":"**Our cluster data for Age Column is ready!**","45cd1b97":"## **For Annual Income column**","79922299":"**Shape of dataset**","8cbc58c8":"## **For Age column**","d35c2679":"**Lets consider number of clusters be 4.**","8ffd9df7":"Now, our data is divided into 5 clusters: 0,1,2,3,4","b901a2f2":"# **1. Introduction**\n\nCustomer segmentation is the process by which you divide your customers up based on common characteristics \u2013 such as demographics or behaviors, so you can market to those customers more effectively. These customer segmentation groups can also be used to begin discussions of building a marketing persona.","b6014d00":"# **5. Visualizing the cluster on a 3D-graph**","ae0a3a08":"**Importing Libraries**","e5c75977":"**Our cluster data for Annual Salary Column is ready!**","07b7befd":"**Finding:**\n* Highest number of count lies in $ 60,001 - 90,000 Annual Income range.","1dedf55b":"**Checking the centroids**","4b49c332":"## **For all columns**","7f8f32c8":"**Finding the number of Clusters we need to create**"}}