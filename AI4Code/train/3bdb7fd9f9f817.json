{"cell_type":{"3bfa8ed7":"code","1a44859c":"code","66d16610":"code","5f5389db":"code","5b769058":"code","32f4404a":"code","77460e60":"code","27a420a4":"code","c2d43488":"code","a413f7ee":"code","b8d502c3":"code","afd7ca69":"code","70c889aa":"code","2ce9afd5":"code","a7574a5c":"code","ff4396ce":"code","9d48d15c":"code","28f3efdc":"code","112ca311":"code","e3ac0a72":"code","7d19598b":"code","e2b03e5f":"code","472bf48d":"code","b86b1188":"code","04726636":"code","cd6cc58a":"code","bda7942d":"code","1c6dd63f":"code","7ad25bef":"code","abe4bf70":"code","80f8718b":"code","2274ecda":"code","832c386f":"code","e55d913c":"code","579646cc":"code","b4b01af8":"code","5cf78099":"code","4048009d":"code","d86a2e3b":"code","29e80502":"code","7b864b65":"code","a3814ea4":"code","7e95c476":"code","22a50930":"code","531728d3":"code","475c471f":"code","799d38e3":"code","ee4530c5":"code","5445479c":"code","52019d8f":"code","b4187473":"code","a7458a0a":"code","371462fa":"code","2d0154dd":"code","9cc1f169":"code","9f6547a8":"code","6b21ef0f":"code","c35272e8":"code","4a10251b":"code","4b84cea5":"code","281024ab":"code","00179be3":"code","a16e9c3e":"code","6cd89fd6":"code","cb72f112":"code","e2a8e576":"markdown","6f8b78f2":"markdown","5e20682f":"markdown","99c41b83":"markdown","27a5dec5":"markdown","5b69e261":"markdown"},"source":{"3bfa8ed7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a44859c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","66d16610":"data = pd.read_csv('..\/input\/california-housing-prices\/housing.csv')\ndata.head()","5f5389db":"data.shape","5b769058":"data.info()","32f4404a":"data.isnull().sum()","77460e60":"data.describe()","27a420a4":"#we will fill the bedroom column with median\nbedroom_median = data['total_bedrooms'].median()\nbedroom_median","c2d43488":"data['total_bedrooms'].fillna(bedroom_median, inplace=True)","a413f7ee":"data.isnull().sum()","b8d502c3":"sns.displot(data['housing_median_age'], kde=False, bins=20)","afd7ca69":"sns.displot(data['total_rooms'])","70c889aa":"sns.displot(data['total_bedrooms'])","2ce9afd5":"sns.displot(data['population'])","a7574a5c":"sns.displot(data['households'])","ff4396ce":"sns.displot(data['median_income'], kde=False, bins=20)","9d48d15c":"sns.displot(data['median_house_value'])","28f3efdc":"sns.boxplot(x=data['median_house_value'], data=data)","112ca311":"sns.pairplot(data)","e3ac0a72":"sns.scatterplot(x=data['total_rooms'], y=data['total_bedrooms'], hue=data['median_house_value'])","7d19598b":"sns.scatterplot(x=data['median_income'], y=data['median_house_value'])","e2b03e5f":"plt.figure(figsize=(10, 8))\nsns.heatmap(data.corr(), annot=True, cmap=\"Blues\")","472bf48d":"#removing the unnecessary columns from the data\ndata.drop(['longitude', 'latitude'], axis=1, inplace=True)","b86b1188":"data.head()","04726636":"data = data.rename(columns = {'housing_median_age':'housing_age'})\ndata.head(2)","cd6cc58a":"data = data.rename(columns = {'median_house_value': 'housing_value'})\ndata.head(2)","bda7942d":"data = data.rename(columns = {'median_income': 'income'})\ndata.head(2)","1c6dd63f":"sns.countplot(x=data['ocean_proximity'], data=data)","7ad25bef":"data.head(2)","abe4bf70":"data = pd.get_dummies(data, drop_first = True, prefix=None)\ndata.head()","80f8718b":"data.isnull().sum()","2274ecda":"numerical_data = data[['housing_age','total_rooms', 'total_bedrooms', 'population', 'households', 'income','housing_value']]","832c386f":"from sklearn.preprocessing import StandardScaler","e55d913c":"sc = StandardScaler()\nscaled_data = sc.fit(numerical_data)","579646cc":"sc_data = scaled_data.transform(numerical_data)","b4b01af8":"sc_data","5cf78099":"new_data = pd.DataFrame(data = sc_data, columns=numerical_data.columns)","4048009d":"new_data","d86a2e3b":"data","29e80502":"data.head(2)","7b864b65":"cat_data = data[['ocean_proximity_INLAND', 'ocean_proximity_ISLAND', 'ocean_proximity_NEAR BAY', 'ocean_proximity_NEAR OCEAN']]","a3814ea4":"new_df = pd.concat([new_data, cat_data], axis=1)\nnew_df.head()","7e95c476":"X = new_df.drop('housing_value', axis=1)\ny = new_df['housing_value']","22a50930":"X.head()","531728d3":"y.head()","475c471f":"from sklearn.model_selection import train_test_split","799d38e3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 42)","ee4530c5":"X_train.shape","5445479c":"y_train.shape","52019d8f":"from sklearn.linear_model import LinearRegression","b4187473":"lr = LinearRegression()","a7458a0a":"lr.fit(X_train, y_train)","371462fa":"lr_pred = lr.predict(X_test)","2d0154dd":"lr_pred","9cc1f169":"lr.coef_","9f6547a8":"lr.intercept_","6b21ef0f":"lr.score(X_test, y_test)","c35272e8":"from sklearn.metrics import mean_absolute_error, mean_squared_error","4a10251b":"mse = mean_absolute_error(lr_pred, y_test)\nmse","4b84cea5":"mae = mean_absolute_error(lr_pred, y_test)\nmae","281024ab":"from sklearn.ensemble import RandomForestRegressor","00179be3":"rf = RandomForestRegressor(max_features = 'log2', min_samples_split=3, n_estimators=15)","a16e9c3e":"rf.fit(X_train, y_train)","6cd89fd6":"rf_pred = rf.predict(X_test)","cb72f112":"rf.score(X_test, y_test)","e2a8e576":"### Data Visualization","6f8b78f2":"### SPLITTING THE DATASET INTO X AND Y","5e20682f":"### TRAIN AND TEST SPLIT","99c41b83":"### Building the model","27a5dec5":"### Exporatory Data Analysis","5b69e261":"### Data Cleaning"}}