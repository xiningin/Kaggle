{"cell_type":{"87327f50":"code","200fbd0b":"code","cc31ff71":"code","6ff3d6a4":"code","d674cf64":"code","7a187f53":"code","fafdabd0":"code","110c5855":"code","122f01d7":"code","34fc042c":"code","d6cd7757":"code","86d1968e":"code","61d71e41":"code","474ae9d6":"code","46aec544":"code","e615262a":"code","803f92f9":"code","621c9a89":"code","75945f8c":"code","d3c643b1":"code","f385b3ff":"code","1eace0d6":"code","e5fbc5f0":"code","902aa8b8":"code","0e4990be":"code","60ae0428":"code","b19cbb61":"code","2a97184b":"code","9fdae914":"code","9af1d736":"code","e87fa340":"code","f9396ab2":"code","6c31970d":"code","42d5f39e":"code","eeb87f66":"code","c836a2a2":"markdown","b48d971e":"markdown","109b2566":"markdown","bf8d8287":"markdown","d4413a33":"markdown","46c0d4a2":"markdown","02a34185":"markdown","737d56f3":"markdown","2263761f":"markdown","c9e330f6":"markdown"},"source":{"87327f50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","200fbd0b":"import matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","cc31ff71":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Convolution2D\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Flatten                                      \nfrom tensorflow.keras.layers import MaxPooling2D\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","6ff3d6a4":"from tensorflow.keras.models import load_model","d674cf64":"import tensorflow as tf\ntf.__version__","7a187f53":"train_df=pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')","fafdabd0":"train_df.head()","110c5855":"train_df.shape","122f01d7":"x=train_df.drop('label',axis=1)\nx","34fc042c":"x.shape","d6cd7757":"y=train_df['label']\ny","86d1968e":"x=x.values.reshape(-1,28,28,1)","61d71e41":"x.shape","474ae9d6":"plt.imshow(x[100][:,:,0])","46aec544":"y[100]","e615262a":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=42)","803f92f9":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","621c9a89":"x_train = x_train \/ 255.0\nx_test = x_test \/ 255.0","75945f8c":"model=Sequential()","d3c643b1":"model.add(Convolution2D(32,(5,5),input_shape=(28,28,1),padding='same',activation='relu'))\nmodel.add(Convolution2D(64,(5,5),input_shape=(28,28,1),padding='same',activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2),padding='valid'))\nmodel.add(Dropout(0.2))\nmodel.add(Convolution2D(128,(3,3),activation='relu',padding='same'))\nmodel.add(Convolution2D(192,(3,3),activation='relu',padding='same'))\nmodel.add(MaxPooling2D(pool_size=(2,2),padding='valid'))\nmodel.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(Dense(units=128,activation='relu'))\nmodel.add(Dense(units=10,activation='softmax'))","f385b3ff":"model.summary()","1eace0d6":"model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])","e5fbc5f0":"filepath = os.path.join(\".\/model_v{epoch}.hdf5\")\n\ncheckpoint = tf.keras.callbacks.ModelCheckpoint(filepath,\n                                             monitor='val_accuracy',\n                                             verbose=1,\n                                             save_best_only=True,\n                                             mode='max')\ncallbacks = [checkpoint]","902aa8b8":"model.fit(x_train,y_train,epochs=30,batch_size=32,validation_data=(x_test,y_test),callbacks=callbacks)","0e4990be":"model.evaluate(x_test,y_test)","60ae0428":"test_df=pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","b19cbb61":"test_df.head()","2a97184b":"test_df=test_df.values.reshape(-1,28,28,1)","9fdae914":"test_df.shape","9af1d736":"test_df=test_df\/255","e87fa340":"classifier=load_model('.\/model_v14.hdf5')","f9396ab2":"prediction=classifier.predict(test_df)","6c31970d":"prediction.shape","42d5f39e":"pr=classifier.predict_classes(test_df)","eeb87f66":"sub = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')\nsub['Label'] = pr\nsub.to_csv('submission1.csv',index=False)","c836a2a2":"## Normalization","b48d971e":"## Predicting on test data set","109b2566":"## Reshaping and converting into images","bf8d8287":"## Ploting the images","d4413a33":"## Diving the dataframe into train and test data set","46c0d4a2":"## Testing The model","02a34185":"## Building The CNN Layers","737d56f3":"## Dividing the values into x and y","2263761f":"## Importing Libraries","c9e330f6":"### Model is 99.310% Accurate."}}