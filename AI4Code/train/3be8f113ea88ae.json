{"cell_type":{"dcccb16f":"code","dbf78cdd":"code","a6c8efc1":"code","067e8191":"code","b777ae42":"code","6649fb7f":"code","385ee6a0":"code","e1e9a5b6":"code","178749e3":"code","0ddc16ff":"code","7bd1c96c":"markdown","010af821":"markdown","ec1b863f":"markdown","35c958c2":"markdown","cf46a00b":"markdown","fcabf3be":"markdown","9f7ae07e":"markdown","781ffb47":"markdown","5f74cce7":"markdown","eb63a747":"markdown","160ea970":"markdown","f66dda04":"markdown"},"source":{"dcccb16f":"# Import the required packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt","dbf78cdd":"# Read in the dataset and convert time column to datetime\ndata = pd.read_csv('..\/input\/bitcoin-prices-dataset\/Bitcoin.csv')\ndata.Date = pd.to_datetime(data.Date)\n\n# Remove the adjusted Close column\ndata.drop(columns=['Adj Close'], inplace=True)\n\n# Add some more features derived from the exiting ones\ndata['Range'] = data.High - data.Low\ndata['Difference'] = data.Close - data.Open\n\n# Show the first 10 rows\ndata.head(10)","a6c8efc1":"fig, axs = plt.subplots(figsize=(24,6))\naxs.plot(data.Date, data.Close, label='Close Price')\naxs.legend()\naxs.set(xlim=(data.Date.min(), data.Date.max()))","067e8191":"data.describe()","b777ae42":"columns = [c for c in data.columns if c != 'Date']\nplt.rcParams[\"figure.figsize\"] = (24,12)\nfor i, col in enumerate(columns):\n    if i<4:\n        plt.subplot(2, 4, i+1)\n    else:\n        plt.subplot(2, 3, i)\n    sns.histplot(data[col], bins=100)\nplt.show()","6649fb7f":"sns.pairplot(data)\nplt.show()","385ee6a0":"col = 'Close'\nyears = np.unique(data['Date'].dt.year)\nfig, axs = plt.subplots(figsize=(24,6))\nfig.suptitle('Yearly Normalized Price Development', fontsize=20)\nfor year in years:\n    relevant_rows = data[data['Date'].dt.year==year]\n    norm_data = (relevant_rows[col] - relevant_rows[col].min()) \/ (relevant_rows[col].max() - relevant_rows[col].min())\n    formatted_dates = [(d - dt.datetime(year=year, month=1, day=1)).days for d in relevant_rows['Date']]\n    axs.plot(formatted_dates, norm_data, label=year)\naxs.legend(ncol=len(years))\naxs.set(xlim=(0,365), xlabel='Day of the year', ylabel='Normalized Bitcoin Price')\nplt.show()","e1e9a5b6":"fig, axs = plt.subplots(2, figsize=(24,10))\nfig.suptitle('Mean Differences grouped by Month and Weekday', fontsize=20)\n# Plot mean differences by month\ndata.groupby(data['Date'].dt.month).Difference.mean().plot(kind='bar', ax=axs[0])\naxs[0].set_xticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\naxs[0].grid()\n# Plot mean differences by weekday\ndata.groupby(data['Date'].dt.weekday).Difference.mean().plot(kind='bar', ax=axs[1])\naxs[1].set_xticklabels(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])\naxs[1].grid()\nplt.tight_layout()\nplt.show()","178749e3":"# Days with the biggest price loss\ndata[['Date', 'Difference']].sort_values(by='Difference').head(10).T","0ddc16ff":"# Days with the biggest price gain\ndata[['Date', 'Difference']].sort_values(by='Difference', ascending=False).head(10).T","7bd1c96c":"## Plot histograms","010af821":"## Check out some extreme values","ec1b863f":"# 2. How does the data look like?\nTo get a first impression of the data, in this case the development of the Bitcoin price, the data can be visualized in a simple form. Therefore, the close value of the data set over time is shown below.\n\nIt can be clearly seen how the price is constant for a long time and more and more change comes into play from the end of 2017. From 2021 onwards, a clear increase can then be seen, culminating in the peak value at the end of 2021.","35c958c2":"# 5. Next steps\nIn further steps, for example, explanations for individual characteristic values can be searched for in the data. In the case of the extreme values in the daily changes of the price, a possible approach would be to search for the most popular tweets with the topic Bitcoin on Twitter in the second space of a week before the extreme value and to investigate whether an extreme value could have arisen from this.\nAnother step could also be to train a prediction model on the data that can predict the future price of bitcoin. However, this is likely to be relatively difficult purely on this data, as the price does not follow fixed patterns like classic time series. Therefore, an accurate prediction should only be possible in combination with many other data or factors.\n\nFeel free to use the comments to note other possible next steps or raise further questions that could be explored as part of the exploratory data analysis.","cf46a00b":"# 4. Generate more Insights\nOnce initial correlations and distributions can be gleaned from the basic descriptive statistics, the data set can be further examined for specific questions. The following blocks deal with the following questions (more are possible, of course):\n\n1. How does the price develop within the individual years considered and are there recurring patterns within a year?\n\n2. Are there specific months or even days of the week when the price tends to fall or rise on average?\n\n3. Which extreme values can be found in the data set (and what is the reason for these jumps)?","fcabf3be":"## DataFrame Describe Method","9f7ae07e":"# 3. Descriptive Statistics\nDescriptive statistics can be used a lot to get a quick overview of data. Basic key figures are, among others, mean, median and standard deviation. These three ratios combine measures of location with measures of dispersion and can therefore give a good first impression of the distribution of a variable.\n\nIn further steps, histograms or boxplots can be used to determine the exact distribution and whether there are any outliers in the data.\n\nAnother important point of descriptive statistics is the correlation between individual variables. This can either be indicated with a correlation coefficient (e.g. Pearson coefficient) or visually displayed on the basis of pairplots. This notebook shows a pairplot of the relevant variables, from which a clear correlation of some attributes can be seen. In the case of this dataset, however, a correlation is to be expected, since, for example, daily maximum value and the value at the end of a day are very likely to be strongly related.","781ffb47":"## Compare normalized price development within every year","5f74cce7":"# Exploratory Data Analysis on Bitcoin Prices\nExploratory data analysis (EDA for short) is an important way of getting to know a data set and generating or learning about initial relationships and insights. This notebook aims to provide initial insights from the evolution of the Bitcoin price and introduce some methods of exploratory data analysis.\n\nThe following subtopics will be addressed:\n1. Preparing the dataset\n2. How does the data look like?\n3. Descriptive Statistics\n4. Generate more Insights\n5. Next Steps","eb63a747":"# 1. Preparing the dataset\nThe first step is to prepare the data set for analysis. In this case, the price range of a day and the difference between the beginning and the end of the day are added as features. Also, the column *'Adj Close'* is removed, as it does not contain any new information and matches the *'Close'* column.","160ea970":"## Check for correlations","f66dda04":"## Group by months and weekdays"}}