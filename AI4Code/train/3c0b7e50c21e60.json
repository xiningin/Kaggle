{"cell_type":{"44237aaa":"code","dbe2fe4b":"code","09800fae":"code","32cb3ff0":"code","19dfc281":"code","80376aef":"code","ab5bc6a4":"code","a974790b":"code","517199c2":"code","c9b5dbf7":"code","f0bec86f":"code","0e1a6bef":"code","c7fc5bd6":"code","46a9bc08":"code","fffac088":"code","621785a5":"code","08e77637":"code","f80f7e27":"code","fc4db13b":"code","78b963fe":"code","43236a60":"code","335ae4a6":"code","a152a474":"code","28f32679":"markdown","8963eabb":"markdown","d1769bd2":"markdown","e7f0d342":"markdown","7f3c0c7c":"markdown","fa1bab59":"markdown","3514c636":"markdown","dbad8249":"markdown","b8293595":"markdown","408507b1":"markdown","355ecb5a":"markdown","758c2dfc":"markdown","0931d15e":"markdown","6227a164":"markdown","d9bb7e37":"markdown","9192cb1c":"markdown"},"source":{"44237aaa":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport seaborn as sns\nfrom subprocess import check_output\nimport plotly.plotly as py\nfrom wordcloud import WordCloud\nimport os","dbe2fe4b":"print(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","09800fae":"terror=pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv',encoding='ISO-8859-1')","32cb3ff0":"terror2 = terror.copy()\nterrorTr2 = terror2[terror2.country_txt == \"Turkey\"]\nterror.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','region_txt':'Region','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed','nwound':'Wounded','summary':'Summary','gname':'Group','targtype1_txt':'Target_type','weaptype1_txt':'Weapon_type','motive':'Motive'},inplace=True)\nterror=terror[['Year','Month','Day','Country','Region','city','latitude','longitude','AttackType','Killed','Wounded','Target','Summary','Group','Target_type','Weapon_type','Motive']]","19dfc281":"terror['casualities']=terror['Killed']+terror['Wounded']","80376aef":"terror['Killed'] = terror['Killed'].fillna(0)\nterror['Wounded'] = terror['Wounded'].fillna(0)","ab5bc6a4":"x = terror.Country == 'Turkey'\nterrorTr = terror[x]","a974790b":"terrorTr.head(5)","517199c2":"terrorTr.tail(5)","c9b5dbf7":"terrorTr.describe()","f0bec86f":"print(type(terrorTr))","0e1a6bef":"terrorTr.columns","c7fc5bd6":"terror.isnull().sum()","46a9bc08":"print('En fazla ter\u00f6r sald\u0131r\u0131s\u0131 ger\u00e7ekle\u015fen \u015fehir:',terrorTr['city'].value_counts().index[0])","fffac088":"plt.subplots(figsize=(15,6))\nsns.countplot('Year',data=terrorTr,palette='RdYlGn_r',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=90)\nplt.yticks(rotation=30)\nplt.title('Y\u0131llara G\u00f6re Ter\u00f6rist Eylemler Grafi\u011fi')\nplt.show()","621785a5":"terrorTr.city.value_counts().drop('Unknown').head(10).plot.bar(figsize=[16,9])\nplt.yticks(fontsize=14,rotation=30)\nplt.xticks(fontsize=14)\nplt.xlabel(\"Cities\", fontsize=15)\nplt.ylabel(\"Number of Attacks\", fontsize=15)\nplt.title(\"En \u00c7ok Hedef Al\u0131nan \u015eehirler\", fontsize=16)\nplt.show()","08e77637":"plt.subplots(figsize=(15,6))\nsns.countplot('AttackType',data=terrorTr,palette='inferno',order=terrorTr['AttackType'].value_counts().index)\nplt.xticks(rotation=90)\nplt.yticks(rotation=30)\nplt.title('Ter\u00f6ristlerin Sald\u0131r\u0131 Metodlar\u0131')\nplt.show()","f80f7e27":"plt.subplots(figsize=(15,6))\nsns.countplot(terror['Target_type'],palette='inferno',order=terror['Target_type'].value_counts().index)\nplt.xticks(rotation=90)\nplt.yticks(rotation=30)\nplt.title('Hedefler')\nplt.show()","fc4db13b":"terorism_actors = terrorTr2.gname.unique()\nprint(terorism_actors)","78b963fe":"cities = terrorTr2.provstate.dropna(False)\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(background_color = 'white',\n                     width = 512,\n                     height = 384).generate(' '.join(cities))\nplt.axis('off')\nplt.imshow(wordcloud)\nplt.imsave(arr = wordcloud, fname = 'wordcloud.png')\nplt.show()","43236a60":"attacks_of_groups = []\nfor name in terorism_actors:\n    temp = terrorTr2.gname[terrorTr2.gname == name].count()\n    attacks_of_groups.append(temp)\n    \ndataframe_temp = pd.DataFrame({'actor':terorism_actors, 'attack_num':attacks_of_groups})\ndataframe_temp = dataframe_temp[dataframe_temp.attack_num >= 6]\ndataframe_temp","335ae4a6":"terrorTr.Group.value_counts().head(10).plot.bar(figsize=[18,9])\nplt.yticks(fontsize=14,rotation=30)\nplt.xticks(fontsize=14)\nplt.ylabel(\"Sald\u0131r\u0131 Say\u0131lar\u0131\", fontsize=15)\nplt.show()","a152a474":"labels = ['PKK','Unknown','Dev Sol']\nexplode = (0, 0.1, 0)\ncolrs = ['cyan','tan','wheat']\nfig, ax = plt.subplots(figsize=(8, 3.5))\nax.pie(terrorTr.Group.value_counts().head(3), explode= explode, labels=labels, autopct = '%1.1f%%',startangle=270, colors=colrs)\nax.axis('equal')\nfig.suptitle('Ter\u00f6r \u00d6rg\u00fctleri')\nfig.savefig('filename.png', dpi=125)","28f32679":"**Global veritaban\u0131 i\u00e7erisinde T\u00fcrkiye'ye ait olan verileri filtreleme**","8963eabb":"**T\u00fcrkiye'de son 50 y\u0131l i\u00e7erisinde faaliyet g\u00f6stermi\u015f ter\u00f6r \u00f6rg\u00fctlerinin listesi**","d1769bd2":"**Son 5 veri sat\u0131r\u0131**","e7f0d342":"**Yeni s\u00fct\u00fcn olu\u015fturma**","7f3c0c7c":"**Veri taban\u0131ndaki bo\u015f veriler**","fa1bab59":"**Eylem say\u0131lar\u0131na g\u00f6re ter\u00f6r \u00f6rg\u00fctleri**","3514c636":"**En aktif 3 ter\u00f6r \u00f6rg\u00fct\u00fc pasta grafi\u011fi**","dbad8249":"**Yine illere g\u00f6re sald\u0131r\u0131 say\u0131lar\u0131na ili\u015fkin bir grafik**","b8293595":"**\u0130lk 5 veri sat\u0131r\u0131**","408507b1":"**Verimizi i\u00e7eri alma**","355ecb5a":"**Ter\u00f6r \u00d6rg\u00fctleri ve Sald\u0131r\u0131 Say\u0131lar\u0131na \u0130li\u015fkin Tablo**","758c2dfc":"**K\u00fct\u00fcphanelerimizi dahil etme**","0931d15e":"**Veritaban\u0131 s\u00fctunlar\u0131**","6227a164":"**S\u00fct\u00fcnlar\u0131 yeniden adland\u0131rma**","d9bb7e37":"**\u0130statiksel \u00f6zellikler**","9192cb1c":"**Kay\u0131p say\u0131sal verilerin giderilmesi (2 s\u00fct\u00fcn i\u00e7in)**"}}