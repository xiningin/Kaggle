{"cell_type":{"be57cb05":"code","e9d474ef":"code","6569fc4e":"code","f5e8d843":"code","231d18f3":"code","30a638ea":"code","de84d2b6":"code","64a648e2":"code","9d623027":"code","dde0b2a7":"markdown","d8b50dbc":"markdown","6afcf533":"markdown","8e2060a7":"markdown","1b8b5aa6":"markdown"},"source":{"be57cb05":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport matplotlib.ticker as ticker\nfrom IPython.display import HTML\nfrom matplotlib import ticker\n\nimport random\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e9d474ef":"df = pd.read_csv(\"..\/input\/coronavirus-covid19-cases-by-us-state\/covid_by_state.csv\")","6569fc4e":"df.shape","f5e8d843":"df.head()","231d18f3":"# Add column for percent change of cases by state\ndf['pct change cases'] = round(df.groupby(['state'])['cases'].pct_change() * 100, 1)\n# Add column for number of new cases by state\ndf['new cases'] = df.groupby('fips')['cases'].diff()\n# Add column for percent change of deaths by state\ndf['pct change deaths'] = round(df.groupby(['state'])['deaths'].pct_change() * 100, 1)\n# Add column for total cases\ndf[\"total usa cases\"] = df.groupby(\"date\")[\"cases\"].transform(\"sum\")\n# Add column for total deaths\ndf[\"total usa deaths\"] = df.groupby(\"date\")[\"deaths\"].transform(\"sum\")\ndf.fillna(0, inplace=True)","30a638ea":"# get 7 day average for each state\ndates = df.date.unique()\nstates = df.state.unique()\nfor i in range(len(dates)):\n  currDate = dates[len(dates) - (i + 1)]\n  for state in states:\n    df.loc[(df['state'] == state) & (df.date == currDate), '7 day ave % change cases'] = round(df[(df.state == state) & (df.date.isin(dates[-(7+i):len(dates) - i]))]['pct change cases'].mean(), 2)\n    df.loc[(df['state'] == state) & (df.date == currDate), '7 day ave new cases'] = round(df[(df.state == state) & (df.date.isin(dates[-(7+i):len(dates) - i]))]['new cases'].mean(), 1)","de84d2b6":"# Create a list of dates one month after first cases were reported in the US. Cases were limited early on so I skipped ahead one month.\ndates_month_skipped = dates[30:]\n# Create a list of colors, then randomly assign each state a color\ncolors = ['lightcoral','chocolate', 'y', 'silver', 'moccasin', 'coral', 'mediumturquoise', 'deepskyblue', 'darkseagreen', 'mediumslateblue', 'plum' ]\nstate_colors = dict()\nfor state in states:\n    state_colors[state] = random.choice(colors)\n\nfig, ax = plt.subplots(figsize=(15,10))\nplt.box(False)\nplt.close()\n\ndef update_barchart(date):\n    df_top10 = df[df.date == date].sort_values('cases', ascending=False).head(10)[::-1]\n    ax.clear()\n    ax.barh(df_top10.state, df_top10.cases, color=[state_colors[state] for state in df_top10.state])\n    \n    # iterate over values to plot labels and values\n    for i, (val, name) in enumerate(zip(df_top10['cases'], df_top10['state'])):\n        ax.text(val, i, name, size=14,weight=600, ha = 'right', va=\"bottom\")\n        ax.text(val, i, f'{val:,d}' , size=14, ha = 'left', va='center')\n    \n    # clear state names from yticks since they are already being shown\n    ax.set_yticks([])\n    # move xticks to the top\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors=\"#777777\", labelsize=16)\n    # add grid lines\n    ax.grid(which='major', axis='x', linestyle='--')\n    # add date to right side of the canvas\n    ax.text(1, 0.4, date, transform=ax.transAxes, color=\"#777777\", size=48, ha=\"right\", weight=600)\n    ax.text(0, 1.12, \"States With Most COVID-19 Cases By Date\"  ,color =\"#777777\", transform=ax.transAxes, size=26, ha=\"left\", weight=600)\n\nanimator = FuncAnimation(fig, update_barchart, frames = dates_month_skipped, interval=400)\nHTML(animator.to_jshtml())","64a648e2":"fig, ax = plt.subplots(figsize=(8,8))\nplt.close()\ndata = dict()\nlabels=[\"NY-NJ\", \"Rest Of US\"]\ncolors = ['#adb0ff', '#e48381']\nny_nj = [\"New York\", \"New Jersey\"]\n\nfor date in dates:\n    new_york_cases = 0\n    total_cases = df['total usa cases'][df.date==date].values[0]\n    for state in ny_nj:\n        try:\n          new_york_cases += df.cases[(df.date==date) & (df.state == state)].values[0]\n        except:\n          new_york_cases += 0\n    percent_ny_nj = (new_york_cases \/ total_cases) * 100\n    data[date] = [percent_ny_nj, 100-percent_ny_nj]\n\ndef update(date):\n    ax.clear()\n    ax.pie(data[date],labels=labels, autopct='%1.1f%%', colors=colors)\n    title = date + \"\\n\" + f'{int(df[\"total usa cases\"][df.date==date].values[0]):,.0f}' + \" US cases\" \n    ax.set_title(title)\n    \nmpl.rcParams['font.size'] = 18.0\nanimator = FuncAnimation(fig, update, frames = dates_month_skipped, interval=350)\nHTML(animator.to_jshtml())","9d623027":"states = sorted(states)\nfig, ax = plt.subplots(nrows=11, ncols=5, figsize=(40, 60))\n\nindex = 0\nfor row in ax:\n  for col in row:\n    X = np.arange(len(df[df.state == states[index]]['new cases']))    \n    col.bar(X, df[df.state == states[index]]['new cases'])\n    col.plot(X, df[df.state == states[index]]['7 day ave new cases'], color='red')\n    col.set_title(states[index], loc='left', va = 'top')\n    index += 1\nplt.show()","dde0b2a7":"# Animated pie chart\n\nShare of NY-NJ cases vs rest of USA\n1. \nEarly on, there were no cases reported in the NY area, then the number of cases increased quickly to encompass the majority of cases in the USA. During the summer of 2020, the share of cases coming from NY-NJ began dropping rapidly.","d8b50dbc":"# Each State's \"Curve\"\n\nLet's view each state's curve by using a bar chart to chart the daily new cases, and using a line chart to chart the 7 day average","6afcf533":"# **Data Augmentation**","8e2060a7":"# Here I create some data animations and visualization using the dataset the NY Times has provided here https:\/\/github.com\/nytimes\/covid-19-data. Thanks again to the NY Times for posting this data.","1b8b5aa6":"# **Animated Bar Chart**\n\nHere we see how the ranking of states by number of cases changes over time"}}