{"cell_type":{"ad54fc81":"code","5537e524":"code","ee7879c9":"code","bc0b1ad5":"code","7f926647":"code","54023059":"code","b803e97d":"code","f446a9ac":"code","98833645":"code","b06a03d4":"code","a60c3b70":"code","0b1f1c03":"code","75d50e2a":"code","738ae605":"code","26789f22":"code","2db6816a":"code","a2c3b5bc":"code","f78fb3b2":"code","9320db4f":"code","96e2a75c":"code","f5ea3129":"markdown","ff7c1aab":"markdown","259e3375":"markdown","e5e185d0":"markdown","da88659c":"markdown"},"source":{"ad54fc81":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5537e524":"from fastai.vision import *","ee7879c9":"tfms = get_transforms(max_rotate=25)","bc0b1ad5":"len(tfms)","7f926647":"def get_ex(): return open_image('..\/input\/cusersmarildownloadsimagesjpg\/images.jpg')","54023059":"def plots_f(rows, cols, width, height, **kwargs):\n    [get_ex().apply_tfms(tfms[0], **kwargs).show(ax=ax) for i,ax in enumerate(plt.subplots(\n        rows,cols,figsize=(width,height))[1].flatten())]","b803e97d":"plots_f(2, 4, 12, 6, size=224)","f446a9ac":"tfms = zoom_crop(scale=(0.75,2), do_rand=True)","98833645":"# random zoom and crop\nplots_f(2, 4, 12, 6, size=224)","b06a03d4":"# random resize and crop\ntfms = [rand_resize_crop(224)]\nplots_f(2, 4, 12, 6, size=224)","a60c3b70":"# passing a probability to a function\ntfm = [rotate(degrees=30, p=0.5)]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = 'Done' if tfm[0].do_run else 'Not done'\n    img.show(ax=ax, title=title)","0b1f1c03":"tfm = [rotate(degrees=(-30,30))]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = f\"deg={tfm[0].resolved['degrees']:.1f}\"\n    img.show(ax=ax, title=title)","75d50e2a":"# brightness\nfig, axs = plt.subplots(1,5,figsize=(14,8))\nfor change, ax in zip(np.linspace(0.1,0.9,5), axs):\n    brightness(get_ex(), change).show(ax=ax, title=f'change={change:.1f}')","738ae605":"# contrast\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.exp(np.linspace(log(0.5),log(2),5)), axs):\n    contrast(get_ex(), scale).show(ax=ax, title=f'scale={scale:.2f}')","26789f22":"# dihedral\nfig, axs = plt.subplots(2,2,figsize=(12,8))\nfor k, ax in enumerate(axs.flatten()):\n    dihedral(get_ex(), k).show(ax=ax, title=f'k={k}')\nplt.tight_layout()","2db6816a":"fig, axs = plt.subplots(1,2,figsize=(10,8))\nget_ex().show(ax=axs[0], title=f'no flip')\nflip_lr(get_ex()).show(ax=axs[1], title=f'flip')","a2c3b5bc":"# jitter\nfig, axs = plt.subplots(1,5,figsize=(20,8))\nfor magnitude, ax in zip(np.linspace(-0.05,0.05,5), axs):\n    tfm = jitter(magnitude=magnitude)\n    get_ex().jitter(magnitude).show(ax=ax, title=f'magnitude={magnitude:.2f}')","f78fb3b2":"# squish\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.linspace(0.66,1.33,5), axs):\n    get_ex().squish(scale=scale).show(ax=ax, title=f'scale={scale:.2f}')","9320db4f":"# tilt\nfig, axs = plt.subplots(2,4,figsize=(12,8))\nfor i in range(4):\n    get_ex().tilt(i, 0.4).show(ax=axs[0,i], title=f'direction={i}, fwd')\n    get_ex().tilt(i, -0.4).show(ax=axs[1,i], title=f'direction={i}, bwd')","96e2a75c":"# symm warp\ntfm = symmetric_warp(magnitude=(-0.2,0.2))\n_, axs = plt.subplots(2,4,figsize=(12,6))\nfor ax in axs.flatten():\n    img = get_ex().apply_tfms(tfm, padding_mode='zeros')\n    img.show(ax=ax)","f5ea3129":"Balloons providing Internet access to rural and remote areas. High-altitude balloons in the stratosphere at an altitude of 18 km (11 mi) to 25 km (16 mi)create an aerial wireless network with up to 1 Mbps speeds. A reference to the balloons used, Project Loon began as a research and development project by X (formerly Google X), but later spun out into a separate company in July 2018.\n\nThe technology designed in the project could allow countries to avoid using expensive fiber cable that would have to be installed underground to allow users to connect to the Internet. Alphabet feels this will greatly increase Internet usage in developing countries in regions such as Africa and Southeast Asia that can't afford to lay underground fiber cable.https:\/\/en.wikipedia.org\/wiki\/Loon_LLC","ff7c1aab":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Shh!   @mpwolke","259e3375":"#Thanks to DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","e5e185d0":"#Codes by DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","da88659c":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTYjynGer1S8KChnlIqOnf8B307yn5Ij7oQGQ&usqp=CAU)economictimes.indiatimes.com"}}