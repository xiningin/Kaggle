{"cell_type":{"50a45a43":"code","b0eb5b76":"code","f681f627":"code","160d2269":"code","29b3fbc5":"code","b3f1f715":"code","18028787":"code","7cb30fb6":"code","35d61c81":"code","f3f919aa":"code","0f7258f9":"code","327fde11":"code","ef405b65":"code","7c166150":"code","de3943c5":"markdown","2ef27fd3":"markdown","e1e7cb53":"markdown","a2a6233d":"markdown","a1365b58":"markdown","972c90e5":"markdown","b900103e":"markdown","ebc37f5d":"markdown","629cd809":"markdown","2c893a17":"markdown","79735a48":"markdown","bfa7a9bc":"markdown"},"source":{"50a45a43":"import pandas as pd","b0eb5b76":"#Leitura dos dados de treino e de teste\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndf_train.sample(3)","f681f627":"df_test.sample(3)","160d2269":"df_all = pd.concat([df_train,df_test])\npd.isnull(df_all).sum()","29b3fbc5":"df_all.corr()","b3f1f715":"print('A m\u00e9dia da Idade \u00e9: %d'%df_all['Age'].median())\nprint('A m\u00e9dia da Idade dos Homens \u00e9: %d'%df_all.loc[df_all['Sex'] == 'male']['Age'].median())\nprint('A m\u00e9dia da Idade das Mulheres \u00e9: %d'%df_all.loc[df_all['Sex'] == 'female']['Age'].median())","18028787":"cs = df_all.loc[df_all['Pclass'] == 1]\nageh = cs.loc[cs['Sex'] == 'male']['Age'].median()\nagem = cs.loc[cs['Sex'] == 'female']['Age'].median()\nprint('A m\u00e9dia da Idade dos passageiros Homens da 1\u00aa Classe \u00e9 de %d anos, e das Mulheres \u00e9 de %d anos' %(ageh,agem))\n\ncs = df_all.loc[df_all['Pclass'] == 2]\nageh = cs.loc[cs['Sex'] == 'male']['Age'].median()\nagem = cs.loc[cs['Sex'] == 'female']['Age'].median()\nprint('A m\u00e9dia da Idade dos passageiros Homens da 2\u00aa Classe \u00e9 de %d anos, e das Mulheres \u00e9 de %d anos' %(ageh,agem))\n\ncs = df_all.loc[df_all['Pclass'] == 3]\nageh = cs.loc[cs['Sex'] == 'male']['Age'].median()\nagem = cs.loc[cs['Sex'] == 'female']['Age'].median()\nprint('A m\u00e9dia da Idade dos passageiros Homens da 3\u00aa Classe \u00e9 de %d anos, e das Mulheres \u00e9 de %d anos' %(ageh,agem))","7cb30fb6":"# Preenchimento dos valores ausentes nos dados de treino\n\na = df_train.loc[df_train['Pclass'] == 1].loc[df_train['Sex']=='male']['Age'].fillna(df_train.loc[df_train['Pclass'] == 1].loc[df_train['Sex']=='male']['Age'].median())\nb = df_train.loc[df_train['Pclass'] == 1].loc[df_train['Sex']=='female']['Age'].fillna(df_train.loc[df_train['Pclass'] == 1].loc[df_train['Sex']=='female']['Age'].median())\n\nc = df_train.loc[df_train['Pclass'] == 2].loc[df_train['Sex']=='male']['Age'].fillna(df_train.loc[df_train['Pclass'] == 2].loc[df_train['Sex']=='male']['Age'].median())\nd = df_train.loc[df_train['Pclass'] == 2].loc[df_train['Sex']=='female']['Age'].fillna(df_train.loc[df_train['Pclass'] == 2].loc[df_train['Sex']=='female']['Age'].median())\n\ne = df_train.loc[df_train['Pclass'] == 3].loc[df_train['Sex']=='male']['Age'].fillna(df_train.loc[df_train['Pclass'] == 3].loc[df_train['Sex']=='male']['Age'].median())\nf = df_train.loc[df_train['Pclass'] == 3].loc[df_train['Sex']=='female']['Age'].fillna(df_train.loc[df_train['Pclass'] == 3].loc[df_train['Sex']=='female']['Age'].median())\n\ndf_train['Age'] = pd.concat([a,b,c,d,e,f])","35d61c81":"# Preenchimento dos valores ausentes nos dados de teste\n\na = df_test.loc[df_test['Pclass'] == 1].loc[df_test['Sex']=='male']['Age'].fillna(df_test.loc[df_test['Pclass'] == 1].loc[df_test['Sex']=='male']['Age'].median())\nb = df_test.loc[df_test['Pclass'] == 1].loc[df_test['Sex']=='female']['Age'].fillna(df_test.loc[df_test['Pclass'] == 1].loc[df_test['Sex']=='female']['Age'].median())\n\nc = df_test.loc[df_test['Pclass'] == 2].loc[df_test['Sex']=='male']['Age'].fillna(df_test.loc[df_test['Pclass'] == 2].loc[df_test['Sex']=='male']['Age'].median())\nd = df_test.loc[df_test['Pclass'] == 2].loc[df_test['Sex']=='female']['Age'].fillna(df_test.loc[df_test['Pclass'] == 2].loc[df_test['Sex']=='female']['Age'].median())\n\ne = df_test.loc[df_test['Pclass'] == 3].loc[df_test['Sex']=='male']['Age'].fillna(df_test.loc[df_test['Pclass'] == 3].loc[df_test['Sex']=='male']['Age'].median())\nf = df_test.loc[df_test['Pclass'] == 3].loc[df_test['Sex']=='female']['Age'].fillna(df_test.loc[df_test['Pclass'] == 3].loc[df_test['Sex']=='female']['Age'].median())\n\ndf_test['Age'] = pd.concat([a,b,c,d,e,f])","f3f919aa":"pd.isnull(df_train).sum()","0f7258f9":"pd.isnull(df_test).sum()","327fde11":"df_test[df_test['Fare'].isnull()]","ef405b65":"print ('A m\u00e9dia da tarifa (Fare) na 1\u00aa Classe \u00e9 %r , na 2\u00aa Classe \u00e9 %r , e na 3\u00aa Classe \u00e9 %r .' % (df_test[df_test['Pclass'] == 1]['Fare'].median(),df_test[df_test['Pclass'] == 2]['Fare'].median(),df_test[df_test['Pclass'] == 3]['Fare'].median()))","7c166150":"df_test['Fare'] = df_test['Fare'].fillna(df_test[df_test['Pclass'] == 3]['Fare'].median())\npd.isnull(df_test).sum()","de3943c5":"# Cabin\n\nAgora vamos analisar o maior problema at\u00e9 ent\u00e3o: a vari\u00e1vel 'cabin' tem o total de 1014 valores ausentes juntando as duas bases de dados.","2ef27fd3":"Com essa tabela podemos identificar algumas correla\u00e7\u00f5es interessantes, como: \n* Pclass x Age\n* Pclass x Fare\n* Age x SibSp\n* SibSp x Parch\n* Parch x Fare\n\nOutras correla\u00e7\u00f5es ainda mais interessantes:\n* Survived x Pclass\n* Survived x Fare","e1e7cb53":"Considerando a correla\u00e7\u00e3o encontrada entre 'Pclass' e 'Age', vamos testar a m\u00e9dia de idade (Age) para cada grupo da classifica\u00e7\u00e3o 'Pclass'.","a2a6233d":"# Tratamento da Coluna 'Age' (Idade)\n\nUma op\u00e7\u00e3o para tratamento dos dados da coluna 'Age' (Idade) poderia ser preencher com a m\u00e9dia dos valores. Por\u00e9m, esta solu\u00e7\u00e3o poderia causar um impacto negativo nos dados, uma vez que a Idade pode ser um fator determinante para a sobreviv\u00eancia do(a) passageiro(a). \n\nDe in\u00edcio, agrupamos os dados de acordo com o sexo, e encontramos as seguintes m\u00e9dias de idade:","a1365b58":"Feito isso, vamos preencher o valor ausente a m\u00e9dia da tarifa na Pclass 3.","972c90e5":"Com isso, confirmamos uma suspeita interessante: a mudan\u00e7a na m\u00e9dia da idade conforme a classe selecionada, e o sexo do passageiro. Feito isso, vamos preencher esses dados nos valores ausentes na coluna Idade ('Age').","b900103e":"Descobrimos que o valor ausente est\u00e1 nos dados de teste. Vamos localizar a linha de dados, e verificar como podemos tratar isso.","ebc37f5d":"# Fare\n\nTraduzindo no Google, a palavra 'fare' pode ser entendida como 'tarifa'. Temos apenas um valor ausente no conjunto de dados. De in\u00edcio, vamos descobrir em qual dos dataframes est\u00e1 o valor ausente.","629cd809":"Vamos concatenar os dados de treino e de teste, agrupando todos os dados no dataframe df_all. Em seguida, vamos verificar os dados ausentes.","2c893a17":"Temos 418 valores ausentes na coluna Survived, que representa nossos dados de teste. A coluna 'Age' (idade) conta com 263 valores ausentes. A coluna 'Fare' tem apenas 1 valor ausente. A coluna 'Cabin' contem 1014 valores ausentes. E, por fim, a coluna 'Embarked' contem apenas 2 valores ausentes.\n\nPrimeiramente, vamos tentar encontrar correla\u00e7\u00f5es entre as v\u00e1ri\u00e1veis,em seguida, prosseguiremos ao tratamento dos valores ausentes.","79735a48":"Com esse comando, descobrimos que o valor ausente est\u00e1 na linha 152, do passageiro Mr. Thomas Storey. \n\nNa tabela de correla\u00e7\u00e3o, pudemos perceber que a vari\u00e1vel 'Fare' tem uma boa correla\u00e7\u00e3o com a vari\u00e1vel 'Pclass'. Considerando que 'Fare' \u00e9 a tarifa, e que 'Pclass' \u00e9 a Classe de Viagem, podemos supor que a tarifa varia de acordo com a Classe, e assim, vamos verificar m\u00e9dia da tarifa em cada uma das classes.","bfa7a9bc":"Ideias:\n* Verificar os dados ausentes e identificar as possibilidades\n* Criar uma coluna para agrupar dados por fam\u00edlia, utilizando o sobrenome"}}