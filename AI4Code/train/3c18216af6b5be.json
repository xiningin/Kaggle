{"cell_type":{"43583d8c":"code","bdfd0e35":"code","0a235f9d":"code","e6f67867":"code","b99d507c":"code","3e731a87":"code","8c1c2d90":"code","7aa32f2a":"code","b106fb94":"code","6940c26f":"code","719aa6d7":"code","3e2ebc9a":"code","3e10e851":"markdown","e9b40cf2":"markdown","3aa2938a":"markdown","2126176a":"markdown","c3d53a47":"markdown","d4ccec8c":"markdown","29bc5a23":"markdown","b4db0696":"markdown","03d2fdc6":"markdown","b06b0b93":"markdown","b340ccf7":"markdown","e9521491":"markdown","eed83da5":"markdown","25140532":"markdown","e1db2f4d":"markdown"},"source":{"43583d8c":"import pandas as pd\nimport numpy as np\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nwarnings.filterwarnings(\"ignore\")\n","bdfd0e35":"df = pd.read_csv('..\/input\/titanic-machine-learning-from-disaster\/train.csv')\n# let's see our data\ndf.head(4)","0a235f9d":"#pip install pandas-profiling","e6f67867":"import pandas_profiling as pp","b99d507c":"prof = pp.ProfileReport(df)\n","3e731a87":"prof","8c1c2d90":"prof.to_file(output_file = 'plot.html')","7aa32f2a":"#pip install sweetviz","b106fb94":"import sweetviz as sv\n\nanalyzed_report = sv.analyze(df)\nanalyzed_report.show_html('SWEETVIZ_REPORT.html') # to save and show the analyzed report","6940c26f":"\n\nfrom IPython.display import IFrame\nIFrame(src = 'SWEETVIZ_REPORT.html',width=1000,height=600)\n\n","719aa6d7":"train_data = pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/titanic-machine-learning-from-disaster\/test.csv\")\n\ncomparison_report = sv.compare(train_data,test_data)\ncomparison_report.show_html('Comparison.html')","3e2ebc9a":"IFrame(src = 'Comparison.html',width=1000,height=500)","3e10e851":"## Let's see the magic","e9b40cf2":"## To see the analyzed report","3aa2938a":"# Introduction\nIn statistics, exploratory data analysis is an approach to analyzing data sets to summarize their main characteristics, often with visual methods. EDA mainly focus on checking assumptions required for model fitting and hypothesis testing, and handling missing values and making transformations of variables as needed. There are lots of libraries available which made EDA easy and fast, but they require lots of code. Here, I am going to show how can we do EDA with single line of code. \n<img src = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxISEhIQEhAVFhAVFRUPFRUVGBIVEBAPFhcWFhUVFRUYHSggGBolGxUVITEhJSkrLi4uFx8zPTMsNygtLysBCgoKDg0OGhAQGy8lIB8tNy8rLS0tKy0tKy0uLS0tKy0tKy0vLS0tLTUvLS0tKystLS0tLS0tLS0tLSstLS0rLf\/AABEIAMIBAwMBIgACEQEDEQH\/xAAcAAACAgMBAQAAAAAAAAAAAAAABgEFAgMEBwj\/xABVEAABAwICAwkJCgsHAwUBAAABAAIDBBEFIRIxUQYTQWFxgZGxwRQVIjJSU5Kh0RYjM0JicoKywtIHJDRUY3ODk8Ph8ENEhKKjs9NVZJRFpLTE8SX\/xAAaAQEAAwEBAQAAAAAAAAAAAAAAAQIDBAUG\/8QALBEBAAEEAgEEAAUEAwAAAAAAAAECAxETEjEEITJBYQVRodHwIpGxwRQVM\/\/aAAwDAQACEQMRAD8A9wc4AEnUMzyLk76Q+X6nexeYS7vK+WZlOw07A8WJMT3HNwZl74PKVn3HW\/nkXNT+2RXppyzrrmD53zi8v1O9invnF5fqd7Eh9w1n583mp2drlHe6r\/6geaCDtur64U2Sfe+UXl+p3sR3yi8sdB9iQu9dT\/1GXmipR9hR3on4cRn5mUo\/hprg2Sfu+UXljoPsU98IvLHrSD3ll4cQqebucfwkd5H8NdV+lEOqNRrg2yf+74vOBT3dF5xvSEgd49tZVn9qB1NR3hbw1NUf27x1JrTtegd2R+cb0hT3VH5xvpNXn3uej4Zqo\/4ifscsfc1BwvqDy1FT99NZteid0s8tvSFO\/t8tvSF517mKbZKeWep++j3L0nmnHllqD1vTWbXo2+t8odIRvrfKHSF517l6P83B5XSHrcj3L0X5rHzgnrKaza9E35vlN6QsXVcY1yMH0mrz4bl6L8zh9BpWQ3N0Q\/ucH7tnsTWbfo9uxGEa5o\/TZ7VrfjNMNdTCOWSMdqTG4DSDVSQfu4\/YtjcIpxqpoRyRx+xNZt+jS7dHRDXW045ZovvLW7dVQD+\/0376H7yX20EI1QxjkYz2LMUzBqY30W+xNZt+ly7djhw\/v9P+9YeorD3aYd+ewnkcD1KtaLahbkyWwSuHxj0lNZt+nd7tKDgqmHkDz1BHuzofPk8kc56mLjFS\/wA470nKe65POO9IprNrqO7Oj8uU8lPVnqjUe7Kl4G1J5KSt\/wCNc\/dknnHdJR3bJ5x3So1p2w6PdhBwQVh5KSr\/AONHutj4KSuP+EqR1tWju6XzjlPfCXzh9Sa5NsOql3URvlihMFTG6UuYwywujY5zWOeRc8Oi09CvUgY\/Wyb7QOLzdtVlkMtKCZuzjTbg1S9+npOva1tXHsUTRhaK4mcLJCEKi7wCh\/LaXjNuh8ZXp68yo\/yyi\/WEfVP2V6atrfTC72EIQtGQQhCAUOcACSbAZknIAKSkbF8Rkl8Y+DwNFw3n2nlUSmIyuqrdPHp73ENMjNztTOQbVj7oX+ab0n2JOw74V\/8AXCjdPiD4YZCzJ+gSHeTwXHGvCveXfm7xonH9luPwcRuhf5tvSUe6F\/m29JXm7qzR0Rad5LGvJbLNbO+vwuIrow2Z75WBsU7QHaTnPkkLAyxyIc7O+WSib\/kxGef6Q6q\/FiiJzXGY+PX9j+d0T\/NN6T7FfQP0mtdtaHclxdJJV9jWLmkou6RHvmg2Ilt7eAS0PN+JtzzLp\/DvJuXZq5znDjwvEJTxHdgGPqnRhjqalp98fISRvlXIAYYWO1ZjXrN3AcvBSbu53OpXvoCylqJI4GOL7yudIPHay1tAG\/HbNepyhPGT2hKuF7qT3tfiE4F278dFuQdoyuZEwcZ8EX41UndZXUxdHWxQ74+llqoNAPbaWJmm6J4LjcW4Qb5HmcoOMvQEJV3DbpZasPjqI2MmYyGcGPS3uSGZukwgOJII1HNVu5ndTU1zKyGMxsqo5fe3ObdncpeW30bjSILXC\/GEzBxk+IXnuDVGKOqKkSV7DFSyMbMHQxBpjLRI4t0bEZXGsrbge7Kpc8ioiY2OeCatpLXDwyO7hG\/OzrsAdcW4eZyOMn1CQ9zu62re6nZUxRE1cL5qd0Yc33xjS\/QkaSbiw1grqp92wFLUvnY2Otpo3OkhzDHu8WN8ZOZjc4tG0XtsJcoOMnJC58OdIYojKAJSxhkDQQ0SFo0gAeC910KyoQgoQCEIQVG6LLuZ2yqh9ek37ScNz+p\/0e1J26nKKN3k1NM7\/WYO1OO5\/U\/lHaqV9S0t9wt0IQsHQ8DpR+NUR\/TgdLXexemLzSnNqikOyojHpXb2r0tbW+mF3sIQhaMghCEGqqdZjzsa4+opGqGgdqdsQPvUnzT1JOmCiVqVJh599fz9a5t2Q95k\/VO7VvofhJOfrWndOC+F7Wi7jE8ADWTnYBfOT\/7wvHasdMwCO7JXOMbT72XDweC9iOElW252Zznu0WStiDc981GQkW0b56gfUqZjvBj0o5dJrAw6O\/N1AbAL5hWOHSvc9jWNnADml2k6TQDAbuvpZZi451reo\/on93oeRVFcTiaf9\/4M6t91VayLDnl7dLTibAyPWZZpG6LGAcOefICqhd7cMkqKynklbakpIWSRDglrHjxyPkNAtsJ4yrfhPuqeYVty2ARTYdJTSstNSSVG+M+LJUOZ73K4fGs0gC\/kqx\/B1hMk0VNX1Lw\/eod4pI2+JDG0b2552vOjb+hZiocEfHW1lQLbzURRgt+MZm6QvyWJHOtm4nCX0tHFTyW0mmQ+Dewa+R7wM+GzgvaiFpq9CJG\/RwKAkEsjq9KS2d421Li7LoVt+EZu+1FI1mf4tXTEix97MDg08hJUYHudxAMdSSGBlC6WR7mlhfK+J7y4tNyLX1XAyurnAtxjKYSkyPlkfEaVhkdpbzT52iZfU2\/UoiJTMxElz8ElYA57JtIVcsMLoybb3JRwsDGNjtwt4Rr4dqX8AxF1NLTVQheI45pqeeW7N6fBLKRtv4LiDyhPEG46RsGHhswFVSOB3wNyMRcdJhF8xoHROedlth3JOOGy0L3DTkdLIDa4Y58hc3lIFkxJyhTV73Mfujb5UMUreR0T2uKxxGEOdgjIxf8AEqix\/R9yADpumuDc0BNLM+Qu32mjpHtsNF5aBeQjblqvwlce5fcf3LIZHzul0YjTQNdmIIHO0nAbTfK+zJTiUcoKf4I5o5JGGeSQ1UcRjpmvtvQprkPMPyrgg8Nue15u6weGetw2PQ99klc95trpoQHvDuU2Ga1+4iRtFG1jg2tgfJPC9utulI5zWnbkbEZ89grXA6WolrX1dTFoGOlipmAG7N9f75OWjWLGwz9aiI9MEz65g1XQpChaMwpQUIBCEIKfdb+SvPkvgf0TRlOWAapOUdqTd14\/EqjiZpeiQ7sTlufOTzxjtVK+mlvuFshCFg6HgDjZ9O7ZUU5\/1Wr09eW1ZsGnY+N3RI09i9SK2t9MLvYQhC0ZBCEIOXEz70\/kA6SEqVDMk14l8GebrS9PGolaCW6oMb3+ATckcIAz5FD8RvriJ5z7Ew1ca4TCuCrwaZnOV1aMQHmPWfYt0WKuGTYDbXkT7F2CBdlPAq\/9fRPcjjw6pmmkbEyE3J1uJDWjhJOivSYI9FrW3votDb7bCyrMAoQ0GU+M7IcTP5q3XT4\/i0Wc8flnMoIRZBQulCLKdEbEIQQ1osMkaIvqQ1HCgnRGxQ1o2Kc1AugNEX1ILRsRwoN0EhoUWUhQgkhFkFCAUqFKCs3TtvR1Q\/QS\/VKadyzrx32hh6Wpdxhl6edu2KQdLCrrcM\/SpY3bYoT0xgqlfTS32YkIQsHQ+fa0e9ycTHP9EF3YvUQb586813vSbKP0M\/8AsvXolC\/SjjdtYx3S0FbW+mF3tvQhC0ZIe4DWQOXJc0mIwt8aeMcr2DrKwbhFMDcU0NzmTvcdydt7LoZTsb4rGjka0dShLidjVI7LumB3EJI3HoBWDsQpdml82GV\/1WFWt1jLKGjSc4AbSgqm1NO7VTSHlpZm\/XYFJdHwULz+zhb9ZwVXW7rhvhjhYHBvjOdexOwAHrWPunm8iPof95VmuIc9fk26JxK1EmzDpOcUQ\/irNr3cFARyuph1OKp\/dPN5EfQ\/7yj3TTeTH0P+8o50qf8ANtL7umfgphzytHU0qHT1XBTw887x1QlUJ3TT+TH6LvvJtYbgHaAVaKonprav0XM8fhXNnrOGnpx\/iZT\/APXWe+VXmoP3sp\/grvWG+N0tDSGmAHFtxpBpNgba7XBz4lLZx6VV5EH7yX\/jU6VT5MHpS\/cXbZFkHEDU+TB6Uv3VBdVeRAfpyj7BXcAiyCufNV8FPTn\/ABEo9Xc5WTaip4aZn0Zr\/WjC77IAQUtRuibG4skjDXC1xv1ICCcxk+Rp1EdK6IMYDxcQS22t3mT\/AG5HKysuOpwqnkzfBE4jMFzGlwPEbXCHow78Rg2LZm8sFTo+loW9aBjVNe3dMQcfiue1rvRcQV2xxgAAagABmdQUlt8jmOND0DHhwu0gjaCCPUslwTYNTOOk6miLvK0GaXpWuo7zxfFMrfmTVDWj6Ifb1IeiwQuKOgc1zXCom0RrYTE5j9eRLmF\/Q4al2ohqqm3Y8bWuHSCuz8Gzr0NOf0MI6IwFoIWf4MfyGEbGtb6Nx2KlfTS32bUIQsXQ8Pwtmk8t2xzDpieE4bnn6VLTHbDF9RqVtzjb1DR8l4\/yOTHuSP4lTcUTW9GXYtqOmFztbIQhaMghCEGMjrAnYCUqV8rnG7nEnj4ORM9WfAf809SVKtRK0FSkPvsnzj1lWM8ui0u1qtpPhJOU9a7aw+9nm6wuWXjXozcL9PiGmKiWUyHQnMLWse9gazwWiwDgNZJJVph9Zm3wi6N5LW6XwkcgBOi48IIBsfWbi1Fhr2t7o0jZvdbSTwAF7M\/WrHD4dDQZneWczNaciyJjRnbgHgtFuDTAXLmYrzn5xj6w+ivWrVfjzRNERFNvlnHU+vz9\/kYCsse3Qy02L03hu7lNPDHKy53tolke0SFuoEOLPC12Flg85FcO7VunWzxCB8pkw+KNuho+9v3zSa86RGQIXbS8b8Nj1qWG7nAXNfBLJVTvbNWRxPYZJBGyKQkaLGg2AGXQq\/dDE\/D6+ndSgkU9IZHtJc50tPvx3xl3En4xI2EBdmN4qajB6apd8LDPA2W+sTRSaDr7L5H6S7N02Ed1YuyHfpIh3E5zjE4tc5oltokjW03GXEFpMfk9OJ\/M70VW2aNk0ZvHI0SNO1rhcLekzcA808lThTybwOM0F9bqWQ5226L75\/KTorxOWcxiUBCG6gjhUoCApUBAIRwqSghClQgFKChAIQhABZ\/gz\/I7bJJWejK8diwWf4NvgJ2+TVVLf9Z57VSvppb7NqEIWDoeNblvylnI76pV7uR\/JIx5LpWejLI3sVHuV\/KG\/Nd1K83LZRSN8mpqm\/6zz2rajphc7XCEIWjIIQhBz4gfe3cgHrCV6sJmxI+9nlCXZwolaCbSj3yTlP1l1VR8B3N1hcksc7JJC2FxBc7OxsRpXBCkT1HmOkH2rmmJeZXZrmvMQqKNkzHS6EekXyF4PA0ZAE5i4y2q7wvDnMc6aV2lM4aPyY2a9FvPrPEOfAVFR5kdB9qO6KnzI\/rnVYtxE5x6ui\/e8q7bi11THwsZ9SbcMwhwrJawkaD6aGBo4bt8Jx5NSTsIo6molbGWNY3W52vRZw2F9a9NjbogNGoAN47DJb26VfEtVW85+SvJuJiMdbCXu3mpkbNoC1o3NsS5uV9IkC+vUFdjB4u6e67HfRF3MNdhHpaRy4TcBdzjkclN+LqWmHZmXGcMi38VGgN+DDGHWFw0kX6l2aI2KL56uDiU34upShDWiwy4EaIvqQ05DLqRfPV1IJ0RsUNaNikni6lAOWrqQGiL6kEDYovnq4OJSTxdSCQFFs0A8XUovnq4Bs40GRCLKHHLV1Kb8SAUqP661KAWf4PMm1o2Vs3+bRd9pYLPcD42IN2Vd\/SghPas7nTS12bUIQsXQ8b3KflA+Y7sV7ud\/vTdlXL\/AJgx32lR7k\/h\/oO7Fd4FlNXt\/wC4a70oIStqOnPc7XCELRVVkUVjJKxgOrTc1t7bLnNaM29Cr3Y1BwOc\/wDVxzS\/7bSpOJE+JTzu+g2P\/dc1RlOGzEgS0AAnPgz4Cql8B8k9BVk2tmOqkePnyQD6jnKN+qj\/AGEI5Z5CegQ9qCllpj5J6Cud9KfJPQUyfjJ4YG80r+1qx3mr4aiEDigkv0mbsROSu6nOw9Cw3k6rG6bDSTHXVuHzI4R9drkNw5\/xqud37hv1IghkYPQCFlj47s3cvAOb2rvsq92EsPjSTn9vO36jggYLDwh7vnSzv+s8ohYOGS1umaNb2jlIC4nYHS6zTRE\/KY1x6SCt0eFwN8WniHJHGOoIB2IwA5zxD6bPasTi1P8AnMP7yP2re2mjByjYORrfYs96b5I6Ah6OVmLU9h+Mw\/vI\/as24hCTlNGeR7PatwibYeCOgLW6kjJzjYfot9iHo2Cdh1Pb0hZMIIFjdczsMgOuCI8sbPYtfeWlOulg\/dRexB3Wz5lLgq3vFS3ypoQbcDGjPmsuF+59\/BJEB8ltVGellSh6GAKOHmHaqmjwlwBDnvbqsWTTPvtuJb26Stpw198quYZatGlI4dsN\/WgsXaipVa+knA8GoYf1kLXfUcxZWqQNVO8\/tIh9tB3\/ANdalV3dM48alB\/Vysdt84GKwRCVnuIynxFv6aJ\/pQRj7KwU7jjasxAbW0j+lsrfsKlzppa9xvQhCxdDxzcn8P8AQd1hXeFi1XXDaad\/TFo\/YVLuS+H+g7rarukyrqkbYad\/QZm9gW1HTnudrdCELRmLoQhALXPO1gu426zyBZSus0nYCegJVqJScybnaoTENFfuxcZCyFrdFuRc4XLncNhfICy1+6mo+R6J9qUqc++P+cesrsqZNFpIXVRTTxzMPPuV188RJh91NR+j9E+1R7qaj9H6J9qR8F99p2Oc890SabmuLneO1ziLC9rAAZbFc08um0Ota41cLTwg8YNxzLHx79u9NVMRjDp8vxr3jU01TVmKv0+l+7dXUW1R+ifvJ3C8sdqKYm40WYy+le86MlKzehc6AlbpPPg6rkaWfEAr3oinGFPFqqrzmTdNKGgucQ1u0kAC+QzPGs89n9dC8qxCokmwCGN73PlkqBS6TiXOcRUP0bnWcmgcys5Mdlfh+G1O+Oa+OrghqLGxeWOMT2vtrDvGtxhc\/J2cHoFzfUNW3+SkOJ1W2a+HVsSjjuMT0FUZ5SZMPls11hd1I8AAPbbMsJ8YcdxsS0zGHRYTRxmbeH1sszpJje8NOZXvke0geMWloHztqckRS9PE4DC8uaGNGbi4Brba7nULLUK6Mx7+JGGHQMm+aY3vQGZdparcaQ8SpqCowedtG47xTB77ASMJnay933ALvGBzvwbF0bsKn\/8An0DN7caeV1Lv7YmlzjTNaJHNAG0hoTKeJ3o6ts0bZYnNdG8aTXAmzm7dS2tJsMhq2\/yVNuVx5lWyQMgfDvLhCY3hoc0aIc3Iasjq4Fdt1DkUwrMYY3N9Q1bf5KSTsHT\/ACU8PMgqUIBOwdP8lGd9Q1Dh5eJZBHDzDtQYuJsch0\/yU3OwdP8AJS7UVKDAE3OQ1Dh5eJS69tXr\/kpGs8g7UO1HkQGf9H+SjcubV9UPKpqZ3ovnHasljgGWIv8AlUg\/yzH76pX00t+44oUoWDoeO7kvhz8x3W1XTMsQd8qkafRlcPtKl3JfDn9W7rarqbLEIvlUszfRkiPatqOnPc9y4QhC0ZhCEIOfEXWjfyW6cu1Kkwvq\/opnxb4MjaQPXfsSvUNz1qJWgmweM75x6yujEXe9n+uArli1u5T1lTXy3iIAzzy49E2XTE\/0y8+YzchVYc5jYKVzi8Ft3N0NG58IEix13yGWZBKv6dwDyAbskG\/MPBfIPA4s2u+kVRUVK8xsaW6IijLdLwvhCWkEAtGrRJXRSSyEtY2PVIHC5cNBpHvg1EFti8DMaxlkL+XYt3Ldym5EdzMTH1M\/yXt+TetXrNdqZj0iJifuI\/kL8rDdpSvNfU1UXwtJDS1LdepriXDkLb5LMp5iwL8aqalzrtnhjg0Lagy9yTzjJel5MZw8fwpxNTzelkfJh+FthYHSOr5Z2MeSGExukeA62ds1oxGOaKnxWknDGTXhxNjYtLRF5A2Qt0s9egn2j3HCF9AIn+80rqiUg5l75gQANgF+gKxxXcxDUTGaQEkwupiAbBzHODs9virl4y9DnDRu0qGd76p5sb07nAHOznCzTblcFxVccFJhcEk0TZHQQRBjSCdKoLWhrQBteei630u4KgjDw2AWe3Qdc3u3SDrdLQrXFcGZUPp3P8SCTf2sHiukDSGF3E25KtiVMwWzgppcFqWPznfBNUTHK5ne0ude2zJv0Va4BWwjDoJnuaY4qaJ0huHb2WxNJB2Otwa8wu\/H8HbVw7w97msJBdoOc0vFiNF1iLtN8wqPEtybd5psPp2BlGZRLU+VJGyztEm2Zc4Nz+SExhOc9ujcDSOFO+qkBEtXK+sLT8Rj\/g2+gAedMoapA4ABbVxAICmFZnMo0c0EKUFSgAKNHNShBDm5FTooKEGIaLnkHapc3Io4ejtQb\/1\/+IJ0VhhItiMXyqSob6MtOftFZrCkFq6iPlR1jP8A4zh1FUr6Xt+452QhCwdLx\/cj8Of1butqua8WraQ7Y6lnqid9lU25H4c\/q3dbVdYtlU0J\/STM6YHn7K2o6c9fuW6EIWjMIQhBxYqLtA4+wqimi\/rYmSph0rZ6lxSYY4\/GHrUJiXmUmFVILrRayeFmefKsRS1I\/sx0t+8vR5MGefjN9fsWh2AybWdLvYrc5Z6qJIG9VPmx6vvLJkdT5ser7yeTuek2s6T7EMwCQeT0n2KdlSNFsuYDg9RPJoyBrIhm92RdbY2xOZ416StFFSiNoaOUna7at6iapntNNumn2hCEKFwhCEAhCEAhCEAhCEAhaWVUZOiJGl1yLAi5I1gcYssoJQ8aQ1XI6CW35MkGxCEIBCEIBQwWqcPd+lqY+mDS+wpUVGT8Od\/3j2+lTTBUr6aW\/ccUIQsHQ8f3IfDu\/Vu+s1XGPi0lE7ZVAelFM3tWs\/g9qvOw9Mn3VVbotxdVDGyUua5rZYyd7357mgmxdotZcgX4FpFeIwzqozOTjZFkg9xy\/FEzuSCv7YVPcVX8WnqjyQ1LfrNCtsU1fZ9siyRW4dXnVS1XQR1uWbcKxPgpKn04x1yJsNX2d0JMbg2LcFJPzzwD+ItjcCxj82kHLUxdjymw1Sb0JR7w41wQH\/ymI7x455n\/AN01NkGqTchKPeTHfND\/AMgHtR3lx3yR+8B+0myDVJuQlDvPjvF6j\/EUd6Md8o8zWH7abIRqk4ISd3qxvy380cX3kd7Ma85NzRQewpsg1ScUJMOG4zwy1HNFT\/cWBwzFuGSr5o4h1Rpsg1SdkJHdhmJ8Lq7mBH1WLU7CsQ4e7z+\/7AmyDVJ9RZefHB6zhZWnlNUoGET8MFSeXuo9qbITql6HZcmKxPdDKxhs9zHNbmW+EQfjfF5eDWkc4U\/honn5zKg9ZUd7La8PZzwyHrTnBrkxbz4QAcdEnNrm72IWCRsjbEnRJaGhg0b2sCOG+dMZI2Mj7qhaA1oJ0mk3BZewPEHj6V+ILgpQP\/ToOenPatrH6Oqgpx\/h05wcJXHdrgTvldTZaQa8OiDjeNmRGoDfQ48PggXJK0DGiAQcRpA7RtffI3DfTpeEAALNHgWab8OeWfG3EXD+6QD9jbtWxuOSD+7wj9m4dqc4OEtpxqOxHfOFujfQLXh7nXa\/OS4sTpFhsBbwTtRBj7bDSr4y8G50Q5zHm7MrCO7W2bILZ+PryUDdNKP7KMczh2rL3WS+Qz\/N7U5QcJTJjQcDasIOk512QTv1uBYLaAFmtuy3DfS15KxoK3fH0jY5KiW1YyWz6eZrYme\/Au3wsAsGSRtzP9nfWSmHcxF3VTtncdEkuFm6vBJHDyJjo6YRt0QSc75qtVUTC1FMxLehCFm1CEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQRZGiNiEIABShCAQhCD\/\/2Q==' height = '1000px' width = '1000px'>\n","2126176a":"## We can compare train and test data using sweet viz. So let' try.....","c3d53a47":"## let install panda_profiling first","d4ccec8c":"## to visualize comparision report.....","29bc5a23":"## Thanks for your visit. \n## Feel free to comment and upvote. \n","b4db0696":"# 1. Panda profiling\nPandas profiling is an open source Python module with which we can quickly do an exploratory data analysis with just a few lines of code. Besides this it also generates interactive plot and reports in web format\n pandas profiling  save us all the work of visualizing and understanding the distribution of each variable. It generates a report with all the information easily available.","03d2fdc6":"# 2.SweetViz\nSweetviz is an open source Python library that generates beautiful, high-density visualizations to kickstart EDA (Exploratory Data Analysis) with just two lines of code. Output is a fully self-contained HTML application.\n","b06b0b93":"## Let's load our data\nHere, I am going to perform analysis in very famous Titanic dataset","b340ccf7":"## Load some important libraries ","e9521491":"### The main advantage of using Pandas Profiling is that it can generate interactive reports in web format that can be presented to any person who doesn't know programming . So let's save our report in html file.","eed83da5":"## Analyzing the dataframe\nto analyze the dataframe we simply use analyze() function. Similarly, we use show_html() function to show the analysis","25140532":"## Let's import panda_profiling ","e1db2f4d":"## Let's see the magic !!"}}