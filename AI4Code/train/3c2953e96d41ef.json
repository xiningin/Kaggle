{"cell_type":{"364bfe5f":"code","16184d2f":"code","56fc2136":"code","24edd357":"code","fc6d9b49":"code","c2f8afc3":"code","79d0ee3b":"code","82ad3129":"code","c5272e5f":"code","d32805dc":"code","36b26f63":"code","f392dfaa":"code","eaf74ed3":"code","93417f5c":"code","31b51443":"code","6b0c8793":"code","34086508":"code","c890ae77":"code","015217e1":"code","4634f957":"code","0fa6b189":"code","f23f048a":"code","e1498acf":"code","97d310f2":"markdown","8f8f288e":"markdown","4f8963c6":"markdown","786c2856":"markdown","1bddc2e2":"markdown","4d13584a":"markdown","c2928232":"markdown","33ac966c":"markdown"},"source":{"364bfe5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16184d2f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","56fc2136":"data = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","24edd357":"data.head()","fc6d9b49":"data.info()","c2f8afc3":"data.duplicated().sum()","79d0ee3b":"data.drop_duplicates(keep='first', inplace=True)","82ad3129":"sns.set_style('dark')\nsns.distplot(data['age'], kde= False, color = 'green')","c5272e5f":"plt.figure(figsize=(10,4))\nsns.countplot(x='age', data=data)","d32805dc":"sns.countplot(x='exng', data=data)","36b26f63":"sns.countplot(x='sex', data=data)","f392dfaa":"sns.countplot(x='cp', data=data)","eaf74ed3":"sns.distplot(data['chol'], kde=False)","93417f5c":"plt.figure(figsize=(12,6))\nsns.heatmap(data.corr())\nplt.xticks(rotation=-45)\nplt.show()","31b51443":"import sklearn\nfrom sklearn import linear_model\nfrom sklearn.utils import shuffle","6b0c8793":"data.loc[data.output==0]","34086508":"x= data.iloc[:, :13]\ny= data.iloc[:, 13]\nbest=0","c890ae77":"for i in range(50):\n    x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y , test_size=0.1)\n    linear = linear_model.LinearRegression()\n    linear.fit(x_train, y_train)\n    acc=linear.score(x_test, y_test)\n    if acc>best:\n        best=acc\nbest\n","015217e1":"from sklearn.neighbors import KNeighborsClassifier","4634f957":"best = 0","0fa6b189":"for i in range(50):\n    x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y , test_size=0.1)\n    KNN = KNeighborsClassifier(n_neighbors=60)\n    KNN.fit(x_train, y_train)\n    acc=KNN.score(x_test, y_test)\n    if acc>best:\n        best=acc\nbest\n","f23f048a":"from sklearn import svm","e1498acf":"best=0\nfor i in range(10):\n    x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y , test_size=0.1)\n    SVM= svm.SVC(kernel='linear', C=1)\n    SVM.fit(x_train, y_train)\n    acc=SVM.score(x_test, y_test)\n    if acc>best:\n        best=acc\n        \nbest","97d310f2":"##### cp = Chest Pain type chest pain type\n##### trtbps = resting blood pressure (in mm Hg)\n##### chol = cholestoral in mg\/dl fetched via BMI sensor\n##### fbs = (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n##### restecg = resting electrocardiographic results\n##### thalachh = maximum heart rate achieved\n##### exng = exercise induced angina (1 = yes; 0 = no)\n##### oldpeak = Previous peak\n##### slp = slope\n##### caa = Number of major vessels","8f8f288e":"#### counts number of duplicates","4f8963c6":"#### linear regression","786c2856":"### visualization","1bddc2e2":"##### SVM","4d13584a":"##### KNN","c2928232":"### model","33ac966c":"### Data cleaning"}}