{"cell_type":{"1b9c9f8c":"code","ebea25f6":"code","11c5f2d0":"code","eb6846cd":"code","1f8e5d33":"code","83f1b5db":"code","ecc2c862":"code","eb5f49e6":"code","e9520f65":"code","0849d585":"markdown","499579a2":"markdown","f5755cdb":"markdown","eb33eb56":"markdown","bb95dd94":"markdown","18b3bb0c":"markdown"},"source":{"1b9c9f8c":"import numpy as np\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor","ebea25f6":"SEED = 42\nEARLY_STOP_NUM = 5 \nDATA_NUM = 1000 # row number \nCOL_NUM = 5 #column number \nMAX_DEPTH = 2\nMAX_ESTIMATOR = 120\nIS_WARM_START = True","11c5f2d0":"np.random.seed(SEED)\nX = np.random.rand(DATA_NUM, COL_NUM) - 0.5\ny = 3*X[:, 0]**2 + 0.05 * np.random.randn(DATA_NUM)","eb6846cd":"X[:5]","1f8e5d33":"y[:5]","83f1b5db":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=SEED)","ecc2c862":"gbrt = GradientBoostingRegressor(max_depth=MAX_DEPTH, warm_start=IS_WARM_START, random_state=SEED)\n\nmin_val_error = float(\"inf\")\nerror_going_up = 0\nfor n_estimators in range(1, MAX_ESTIMATOR):\n    gbrt.n_estimators = n_estimators\n    gbrt.fit(X_train, y_train)\n    y_pred = gbrt.predict(X_val)\n    val_error = mean_squared_error(y_val, y_pred)\n    if val_error < min_val_error:\n        print(n_estimators,\"try => find new min val error\")\n        min_val_error = val_error\n        error_going_up = 0\n    else:\n        error_going_up += 1\n        print(n_estimators,\"try => not find new min val error num : \",error_going_up)\n        if error_going_up == EARLY_STOP_NUM:\n            print(n_estimators,\"try => early stopping\")\n            break  # early stopping","eb5f49e6":"print(gbrt.n_estimators)","e9520f65":"print(\"Minimum validation MSE:\", min_val_error)","0849d585":"# split train set and validation set ","499579a2":"# import libraries","f5755cdb":"# make data ","eb33eb56":"# global variables","bb95dd94":"# get best n_estimators using warm_start = True ","18b3bb0c":"# get minimun validation error"}}