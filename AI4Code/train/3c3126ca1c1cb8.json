{"cell_type":{"1c9676b7":"code","d7bd3d44":"code","36e57c66":"code","35f29066":"code","cfe1d1cf":"code","18be1463":"code","cacd104a":"code","c9da5db7":"code","e336a45e":"code","7fe75bce":"code","84ac9833":"code","c9acd1c2":"code","88fcc540":"code","8d04bc98":"code","2130333b":"code","c6d831b9":"code","c818c6d9":"code","a2621a00":"code","fd1a40cf":"code","9f417353":"code","dcb9625b":"code","45855eb6":"code","bd3fef8d":"code","e60cb6e5":"code","879bacd9":"code","b8eea389":"code","dcc886cb":"code","213a1016":"code","e3487641":"code","0001fa04":"code","9cafa12a":"code","73ef1ae6":"code","9730f189":"code","3036a9cc":"code","663b7106":"code","68520499":"code","80d71bb5":"code","f827e4e1":"code","de00164f":"code","9f5d53d9":"code","49ec15c2":"code","20903526":"code","07b92a59":"code","aab250f3":"code","6a4036f2":"code","f75cc637":"code","ae70b8e0":"code","b7078abf":"code","a887a09b":"code","4c5b226e":"code","a90eab54":"code","222ef4bf":"code","3927bae5":"code","17e60250":"code","73ec8f64":"code","805d4d8f":"code","a1578b52":"code","c92821a0":"code","5c13f34e":"code","5bb1655a":"code","6e747fd6":"code","40595651":"code","c389bb7c":"code","b23d2a67":"code","cfd096c5":"code","ca28cba1":"code","bda0629c":"code","5de5ce73":"code","c620c334":"markdown","a5ea9733":"markdown","a6d9cec7":"markdown","d5f5b8be":"markdown","587402ca":"markdown","be0cc331":"markdown","21f1b06d":"markdown","0b5f62fe":"markdown","98053839":"markdown","163aa8ac":"markdown","372b9b0c":"markdown","cb08419c":"markdown","0417f08f":"markdown","b4409113":"markdown","c4ac5df1":"markdown","ce49554c":"markdown","ea27cfc8":"markdown","97ea667a":"markdown","5fa9d34e":"markdown"},"source":{"1c9676b7":" cd ","d7bd3d44":"import os\nimport pandas as pd\nTESS=\"input\/toronto-emotional-speech-set-tess\/TESS Toronto emotional speech set data\/\"\ndir_list = os.listdir(TESS)\ndir_list.sort()\ndir_list","36e57c66":"path = []\nemotion = []\n\nfor i in dir_list:\n    fname = os.listdir(TESS + i)\n    for f in fname:\n        if i == 'OAF_angry' or i == 'YAF_angry':\n            emotion.append('female_angry')\n        elif i == 'OAF_disgust' or i == 'YAF_disgust':\n            emotion.append('female_disgust')\n        elif i == 'OAF_Fear' or i == 'YAF_fear':\n            emotion.append('female_fear')\n        elif i == 'OAF_happy' or i == 'YAF_happy':\n            emotion.append('female_happy')\n        elif i == 'OAF_neutral' or i == 'YAF_neutral':\n            emotion.append('female_neutral')                                \n        elif i == 'OAF_Pleasant_surprise' or i == 'YAF_pleasant_surprised':\n            emotion.append('female_surprise')               \n        elif i == 'OAF_Sad' or i == 'YAF_sad':\n            emotion.append('female_sad')\n        else:\n            emotion.append('Unknown')\n        path.append(TESS + i + \"\/\" + f)\n\nTESS_df = pd.DataFrame(emotion, columns = ['labels'])\nTESS_df['source'] = 'TESS'\nTESS_df = pd.concat([TESS_df,pd.DataFrame(path, columns = ['path'])],axis=1)\nTESS_df.labels.value_counts()\n","35f29066":"pwd()","cfe1d1cf":"cd \"input\/toronto-emotional-speech-set-tess\/TESS Toronto emotional speech set data\/\"","18be1463":"ls","cacd104a":"cd  OAF_angry","c9da5db7":"import librosa\nimport librosa.display\nimport matplotlib.pyplot as plt\nimport IPython.display as ipd\nimport numpy as np","e336a45e":"data, sampling_rate = librosa.load('OAF_back_angry.wav')\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(data, sr=sampling_rate)\n\n# Lets play the audio \n#ipd.Audio('..\/input\/toronto-emotional-speech-set-tess\/TESS Toronto emotional speech set data\/OAF_angry\/OAF_back_angry.wav')","7fe75bce":"from scipy.io.wavfile import read\nimport matplotlib.pyplot as plt\n\n# read audio samples\ninput_data = read('OAF_back_angry.wav')\naudio = input_data[1]\n# plot the first 1024 samples\nplt.plot(audio[0:1024])\n# label the axes\nplt.ylabel(\"Amplitude\")\nplt.xlabel(\"Time\")\n# set the title  \nplt.title(\"Sample Wav\")\n# display the plot\nplt.show()","84ac9833":"cd ..","c9acd1c2":"File_Names=os.listdir('OAF_angry')","88fcc540":"ls","8d04bc98":"cd OAF_angry\/","2130333b":"Max=1\nMin=2\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","c6d831b9":"cd ..","c818c6d9":"File_Names=os.listdir('OAF_Fear')","a2621a00":"cd OAF_Fear\/","fd1a40cf":"Max=1\nMin=2\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","9f417353":"cd ..","dcb9625b":"File_Names=os.listdir('OAF_disgust')","45855eb6":"cd OAF_disgust\/","bd3fef8d":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","e60cb6e5":"cd ..","879bacd9":"File_Names=os.listdir('OAF_Sad')","b8eea389":"cd OAF_Sad\/","dcc886cb":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","213a1016":"cd ..","e3487641":"File_Names=os.listdir('OAF_Pleasant_surprise')","0001fa04":"cd OAF_Pleasant_surprise\/","9cafa12a":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","73ef1ae6":"cd ..","9730f189":"File_Names=os.listdir('OAF_neutral')","3036a9cc":"cd OAF_neutral\/","663b7106":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","68520499":"cd ..","80d71bb5":"File_Names=os.listdir('OAF_happy\/')","f827e4e1":"cd OAF_happy\/","de00164f":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    print(x.shape)\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","9f5d53d9":"cd ..","49ec15c2":"File_Names=os.listdir('YAF_disgust\/')","20903526":"cd YAF_disgust\/","07b92a59":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","aab250f3":"cd ..","6a4036f2":"File_Names=os.listdir('YAF_pleasant_surprised\/')","f75cc637":"cd YAF_pleasant_surprised\/","ae70b8e0":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","b7078abf":"cd ..","a887a09b":"File_Names=os.listdir('YAF_fear\/')","4c5b226e":"cd YAF_fear\/","a90eab54":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","222ef4bf":"cd ..","3927bae5":"File_Names=os.listdir('YAF_sad\/')","17e60250":"cd YAF_sad\/","73ec8f64":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","805d4d8f":"cd ..","a1578b52":"File_Names=os.listdir('YAF_happy\/')","c92821a0":"cd YAF_happy\/","5c13f34e":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","5bb1655a":"cd ..","6e747fd6":"File_Names=os.listdir('YAF_angry\/')","40595651":"cd YAF_angry\/","c389bb7c":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","b23d2a67":"    cd ..      ","cfd096c5":"File_Names=os.listdir('YAF_neutral\/')","ca28cba1":"cd YAF_neutral\/","bda0629c":"Max=1\nMin=3\nMax_File_Name= ''\nMin_File_Name= ''\nsum=0\naverage=0\nfor file in File_Names:\n    x, sr = librosa.load(file)\n    length=librosa.get_duration(y=x, sr=sr)\n    sum=sum+length\n    if length > Max:\n       Max=length\n       Max_File_Name=file\n    if length < Min:\n       Min=length\n       Min_File_Name=file\naverage=sum\/200\nprint(average)\nprint(Min_File_Name,Min)\nprint(Max_File_Name,Max)","5de5ce73":"# Import our libraries\nimport librosa\nimport librosa.display\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import specgram\nimport pandas as pd\nimport os\nimport IPython.display as ipd  # To play sound in the notebook","c620c334":"# OAF_neutral\/","a5ea9733":"# YAF_pleasant_surprised\/","a6d9cec7":"# FEATUREs:\n- Time domain features\nThese are simpler to extract and understand, like the energy of signal, zero crossing rate, maximum amplitude, minimum energy, etc.\n- Frequency based features\nare obtained by converting the time based signal into the frequency domain. Whilst they are harder to comprehend, it provides extra information that can be really handy such as pitch, rhythms, melody etc. Check this infographic below:\n![](https:\/\/www.nti-audio.com\/portals\/0\/pic\/news\/FFT-Time-Frequency-View-540.png)\n- Since I've already outlined the various types of features here, I'll just simplify things here and just use MFCC, because its the best feature for this particular problem and we're trying to get to a quick working baseline. Later on, during the accuracy improvement phase, we may expand our feature set to include Mel-Spectogram, Chroma, HPSS and etc... and not just a simple mean\n- MFCC is well known to be a good feature. And there's many ways you can slice and dice this one feature. But what is MFCC? It stands for Mel-frequency cepstral coefficient, and it is a good \"representation\" of the vocal tract that produces the sound. Think of it like an x-ray of your mouth\nThe most common machine learning application treats the MFCC itself as an 'image' and becomes a feature. The benefit of treating it as an image is that it provides more information, and gives one the ability to draw on transfer learning. This is certainly legit and yields good accuracy. However, research has also shown that statistics relating to MFCCs (or any other time or frequency domain) can carry good amount of information as well. We'll be investigating both of this methods","d5f5b8be":"We have around 400 files for a particular 200 from old female and 200 from young female.","587402ca":"# OAF_sad\/","be0cc331":"Here In this we are doing EDA on Old Talker who is speaking in angry manner and she is saying 200 words ' say the word - $word ' is what they say in all audio files","21f1b06d":"# YAF_happy\/","0b5f62fe":"# OAF_Pleasant_surprise\/","98053839":"# OAF_disgust\/","163aa8ac":"# YAF_sad\/","372b9b0c":"# OAF_fear","cb08419c":"# YAF_disgust\/ ","0417f08f":"[[](http:\/\/)](http:\/\/)# EDA OF Tess Dataset\nOnly Based on 2 Speakers-a young female and older female which bias in audio features but it should be balanced the male dominant speakers on dataset SAVEE\n\n7 key emotions in this dataset-angry,disgust,happy,fear,neutral,Pleasant_surprise,sad","b4409113":"import wave\n\n#Few observations: they are all in mono format,none in stereo format,sample rate=22050 x.shape is the length of the audio in samples(meaning more the samples,longer the audio","c4ac5df1":"# YAF_angry\/ ","ce49554c":"#    YAF_neutral\/","ea27cfc8":"#   YAF_fear\/     ","97ea667a":"#  OAF_happy\/","5fa9d34e":"Results: https:\/\/docs.google.com\/spreadsheets\/d\/149iS0mC3PbC0Lv1OYSs_-CbGEy6ufvfkYAVDvI0Rsvk\/edit#gid=0"}}