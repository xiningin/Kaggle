{"cell_type":{"7fc819d0":"code","f44f1a64":"code","24a03def":"code","285d14c9":"code","11cbca5d":"code","845752ae":"code","1825973f":"code","c42b8184":"code","25f0e907":"code","8562b276":"code","31f34a20":"code","c3eae942":"code","8e1be487":"code","3e4bcd8a":"code","35baf213":"code","9b04bb90":"code","d01d472d":"code","fd5be1c3":"code","33b8fda1":"code","9d9ccaa6":"markdown","6ca0bd65":"markdown","53a1716a":"markdown","6443a450":"markdown","22c4d9a5":"markdown","deb42be6":"markdown","76184cff":"markdown"},"source":{"7fc819d0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras.preprocessing.image import ImageDataGenerator","f44f1a64":"df_train=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_train.csv\")\ndf_test=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_test.csv\")\nprint(df_train.shape)\nprint(df_test.shape)\ndf_train.head(5)","24a03def":"df_test.head(5)","285d14c9":"df_train.describe()","11cbca5d":"X=np.array(df_train.iloc[:,1:].astype('float32'))\ny=np.array(df_train.iloc[:,0])\n\nX_test=np.array(df_test.iloc[:,1:].astype('float32'))\ny_test=np.array(df_test.iloc[:,0])\n\nX_train,X_val,y_train,y_val=train_test_split(X,y,test_size=0.2,random_state=44)\n\n\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_val.shape)\nprint(y_val.shape)","845752ae":"X_train=X_train.reshape(-1,28,28,1)\nX_test=X_test.reshape(-1,28,28,1)\nX_val=X_val.reshape(-1,28,28,1)","1825973f":"X_train\/=255\nX_test\/=255\nX_val\/=255","c42b8184":"\nmodel=keras.models.Sequential([\n    keras.layers.Conv2D(32,kernel_size=(3,3),activation='relu',input_shape=(28,28,1)),  \n    keras.layers.Conv2D(32,kernel_size=(3,3),activation='relu'),\n    keras.layers.MaxPool2D(2,2),\n    keras.layers.Dropout(0.2),\n    \n    keras.layers.Conv2D(64,kernel_size=(3,3),activation='relu'),\n    keras.layers.MaxPool2D(2,2),\n    keras.layers.Dropout(0.2),\n    \n    keras.layers.Flatten(),\n    keras.layers.Dense(128,activation='relu'),\n    keras.layers.Dense(64,activation='relu'),\n    keras.layers.Dropout(0.2),\n    keras.layers.Dense(10,activation='softmax')\n])\n\nmodel.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])\n\nmodel.summary()","25f0e907":"history=model.fit(X_train,y_train,epochs=20,validation_data=(X_val,y_val))","8562b276":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","31f34a20":"model.evaluate(X_test,y_test)","c3eae942":"batch_size=256\n\ndata_aug=ImageDataGenerator(\n        rotation_range=10,\n        zoom_range=0.1,\n        width_shift_range=0.1,\n        height_shift_range=0.1,\n        horizontal_flip=True,\n        vertical_flip=True)\n\ntrain_generator=data_aug.flow(X_train,y_train,batch_size=batch_size)\nval_generator=data_aug.flow(X_val,y_val,batch_size=batch_size)","8e1be487":"history=model.fit_generator(train_generator,epochs=20,validation_data=val_generator)\n","3e4bcd8a":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","35baf213":"model.evaluate(X_test,y_test)","9b04bb90":"#get the predictions for the test data\npredicted_classes = model.predict_classes(X_test)\n\n#get the indices to be plotted\ncorrect = np.nonzero(predicted_classes==y_test)[0]\nincorrect = np.nonzero(predicted_classes!=y_test)[0]","d01d472d":"from sklearn.metrics import classification_report\nnum_classes=10\ntarget_names = [\"Class {}\".format(i) for i in range(num_classes)]\nprint(classification_report(y_test, predicted_classes))","fd5be1c3":"for i, correct in enumerate(correct[:9]):\n    plt.subplot(3,3,i+1)\n    plt.imshow(X_test[correct].reshape(28,28), cmap='gray', interpolation='none')\n    plt.title(\"Predicted {}, Class {}\".format(predicted_classes[correct], y_test[correct]))\n    plt.tight_layout()","33b8fda1":"for i, incorrect in enumerate(incorrect[0:9]):\n    plt.subplot(3,3,i+1)\n    plt.imshow(X_test[incorrect].reshape(28,28), cmap='gray', interpolation='none')\n    plt.title(\"Predicted {}, Class {}\".format(predicted_classes[incorrect], y_test[incorrect]))\n    plt.tight_layout()\n","9d9ccaa6":"# creat model","6ca0bd65":"# apply normalization","53a1716a":"# data augmentation","6443a450":"# split dataset","22c4d9a5":"# import dataset","deb42be6":"# Classification Report\nWe can summarize the performance of our classifier as follows","76184cff":"# reshape"}}