{"cell_type":{"54ee8a93":"code","75dad46f":"code","1ec146a0":"code","330e09c3":"code","c83808ec":"code","6780d3c7":"code","3b1e682e":"code","a8adce33":"code","7f7061df":"code","cd778c71":"code","37f8ab09":"code","b43dc982":"code","4ab599ea":"code","6daafc2e":"code","5ecf6e12":"code","5814fa17":"code","27c710d1":"code","e82b7b61":"code","fbdec0dd":"code","38307709":"code","ebb2bc22":"code","b293121e":"code","76bc7c63":"code","0abf6d59":"code","4a05b984":"code","7d24cba7":"code","e0a8daee":"code","c9e5cdcb":"code","3daaf8d4":"code","1bf746b3":"code","f57f6af5":"code","93f6f5fa":"code","4249f5ba":"code","206f3613":"code","5f09bb16":"markdown","fa609f53":"markdown"},"source":{"54ee8a93":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport datetime as dt\npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\npd.set_option('display.float_format', lambda x: '%2f' % x)","75dad46f":"!pip install openpyxl","1ec146a0":"df_ = pd.read_excel(\"..\/input\/online-retail-ii-uci\/online_retail_II.xlsx\", sheet_name=\"Year 2009-2010\")\ndf = df_.copy()","330e09c3":"df.head()","c83808ec":"df[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\ndf.head()","6780d3c7":"df.shape","3b1e682e":"df.isnull().sum()","a8adce33":"df.dropna(inplace=True)","7f7061df":"df.isnull().sum()","cd778c71":"df.shape","37f8ab09":"df[df[\"Invoice\"].str.contains(\"C\", na=False)]","b43dc982":"df = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]","4ab599ea":"# rfm metrics","6daafc2e":"df[\"InvoiceDate\"].max()","5ecf6e12":"today_date = dt.datetime(2010, 12, 11)","5814fa17":"df.groupby(\"Customer ID\")[\"TotalPrice\"].sum()","27c710d1":"today_date = dt.datetime(2010, 12, 11)\n\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                     'Invoice': lambda num: num.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})","e82b7b61":"rfm","fbdec0dd":"rfm.columns = ['recency', 'frequency', 'monetary']","38307709":"rfm.head()","ebb2bc22":"rfm.describe().T","b293121e":"rfm = rfm[rfm[\"monetary\"] > 0]","76bc7c63":"rfm.describe().T","0abf6d59":"rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5,4,3,2,1])\nrfm[\"frequency_score\"] = pd.qcut(rfm['frequency'].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\nrfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1,2,3,4,5])","4a05b984":"rfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                   rfm['frequency_score'].astype(str))","7d24cba7":"seg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalist',\n    r'5[4-5]': 'champions'\n}","e0a8daee":"rfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)","c9e5cdcb":"rfm.head()","3daaf8d4":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])","1bf746b3":"rfm[rfm[\"segment\"] == \"need_attention\"].head()","f57f6af5":"new_df = pd.DataFrame()\nnew_df[\"new_customer_id\"] = rfm[rfm[\"segment\"] == \"need_attention\"].index\nnew_df.head()","93f6f5fa":"# new_df.to_csv(\"need_attention.csv\")","4249f5ba":"def create_rfm(dataframe):\n\n    # PREPARING THE DATA\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n\n    # CALCULATION OF RFM metrics\n    today_date = dt.datetime(2011, 12, 11)\n    rfm = dataframe.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                                'Invoice': lambda num: num.nunique(),\n                                                \"TotalPrice\": lambda price: price.sum()})\n    rfm.columns = ['recency', 'frequency', \"monetary\"]\n    rfm = rfm[(rfm['monetary'] > 0)]\n\n    # CALCULATION OF RFM SCORES\n    rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n    rfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n    rfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1, 2, 3, 4, 5])\n\n    # cltv_df scores converted to categorical value and added to df\n    rfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                        rfm['frequency_score'].astype(str))\n\n\n    # NAMING OF SEGMENTS\n    seg_map = {\n        r'[1-2][1-2]': 'hibernating',\n        r'[1-2][3-4]': 'at_risk',\n        r'[1-2]5': 'cant_loose',\n        r'3[1-2]': 'about_to_sleep',\n        r'33': 'need_attention',\n        r'[3-4][4-5]': 'loyal_customers',\n        r'41': 'promise',\n        r'51': 'new_customers',\n        r'[4-5][2-3]': 'potential_loyalists',\n        r'5[4-5]': 'champions'\n    }\n\n    rfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\n    rfm = rfm[[\"recency\", \"frequency\", \"monetary\", \"segment\"]]\n    return rfm","206f3613":"df = df_.copy()\nrfm_new = create_rfm(df)\nrfm_new.head()","5f09bb16":"<h2 style='background:#11489c; border:0; color:white'><center>RFM Analysis<\/center><\/h2>\n\nIt covers customer analytics with rfm, including customer segmentation, customer retention rate, customer churn rate, cohort analysis, cross-selling, and up-selling\n\n* <span style=\"color:blue\">Customer Relations Management<\/span>\n* <span style=\"color:blue\">Communication<\/span>\n* <span style=\"color:blue\">Finding Customers<\/span>\n* <span style=\"color:blue\">Customer Lifecycle\/Journey\/Funnel<\/span>\n* <span style=\"color:blue\">Churn<\/span>\n* <span style=\"color:blue\">Upsell\/Cross-Sell<\/span>\n* <span style=\"color:blue\">KPIs\/Key Performance Indicators<\/span>\n* <span style=\"color:blue\">Customer Acquisition Rate<\/span>\n* <span style=\"color:blue\">Customer Retention Rate<\/span>\n* <span style=\"color:blue\">Customer Churn Rate<\/span>\n* <span style=\"color:blue\">Conversion<\/span>\n* <span style=\"color:blue\">Growth Rate<\/span>\n* <span style=\"color:blue\">Cohort Analysis<\/span>\n* <span style=\"color:blue\">Customer Segmentation with RFM<\/span>\n\n<a href=\"https:\/\/ibb.co\/374TMt2\"><img src=\"https:\/\/i.ibb.co\/7XjSR7P\/68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f393331322f312a61514c4f646175352d4a7634714753.png\" alt=\"68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f393331322f312a61514c4f646175352d4a7634714753\" border=\"0\"><\/a>","fa609f53":"<h2 style='background:#11489c; border:0; color:white'><center>Brief information about RFM Analysis<\/center><\/h2>\n\n* RFM metrics are Recency, Frequency and Monetary\n* When we examine the image, we will have a better understanding of what the metrics mean\n* RFM Analysis is a technique used for customer segmentation\n* It enables customers to be divided into groups based on their purchasing habits and to develop strategies specific to these groups. \n* Provides data-driven action\n\n<a href=\"https:\/\/ibb.co\/7nt5hjR\"><img src=\"https:\/\/i.ibb.co\/5rhyZGn\/Screen-Shot-2021-11-30-at-17-07-20.png\" alt=\"Screen-Shot-2021-11-30-at-17-07-20\" border=\"0\"><\/a>"}}