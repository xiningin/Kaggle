{"cell_type":{"47bb8b82":"code","e4bada2d":"code","fd452860":"markdown","89695ca4":"markdown"},"source":{"47bb8b82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sklearn as sk # scikit-learn for the win\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n# Any results you write to the current directory are saved as output.","e4bada2d":"train = pd.read_csv(\"\/kaggle\/input\/dcod19\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/dcod19\/test.csv\")\nprint(\"Chargement des fichiers train.csv et test.csv r\u00e9ussis sans erreur\")\n\n#from sklearn.impute import SimpleImputer\n#imp = SimpleImputer(strategy=\"constant\", fill_value = 0)\n#filled_trainer = imp.fit_transform(train)\n#print(\"Remplissage des valeurs indisponibles r\u00e9ussi\")\n\ny = train.loc[:,\"Class\"]\nfilled_trainer = filled_trainer[:, 1:190]\n\nfrom sklearn import svm\nclf = sk.svm.SVC()\nprint(\"Cr\u00e9ation du classifieur r\u00e9ussie\")\n\n\nclf.fit(filled_trainer, y)\nclf\n\n\n","fd452860":"A am\u00e9liorer : \n1 - Preprocessing\n2 - Choix du classifier\n...","89695ca4":"ENTREE: train.csv\n        test.csv\n\n\n\nSORTIE : resultat.csv\n\n\n\nAlgorithme : \n\n1 - Charger les entr\u00e9es dans des DataFrames (avec pandas)\n\n2 - G\u00e9rer les valeurs manquantes dans les entr\u00e9es (ici remplissage par 0)\n\n3 - Cr\u00e9er un classifier clf (avec scikit-learn)\n\n4 - Entra\u00eener clf sur train.csv\n\n5 - G\u00e9n\u00e9rer une classification de test.csv (avec clf)\n\n6 - Renvoyer cette classification"}}