{"cell_type":{"424e9c15":"code","fc75e59c":"code","b8a2dabc":"code","424a09cf":"code","ac33cfb3":"code","de758cde":"markdown","06329696":"markdown","95313c78":"markdown","97d4994f":"markdown","52691a03":"markdown","c216f68b":"markdown","452d7ac6":"markdown"},"source":{"424e9c15":"import numpy as np\nimport pandas as pd\nnp.set_printoptions(precision=1)\nM = np.array([[1, 1, 1, 0, 0], [3, 3, 3, 0, 0], [4, 4, 4, 0, 0], [5, 5, 5, 0, 0], [0, 0, 0, 4, 4], [0, 0, 0, 5, 5], [0, 0, 0, 2, 2]])\nd = pd.DataFrame(M, index=[\"Joe\", \"Jim\", \"John\", \"Jack\", \"Jill\", \"Jenny\", \"Jane\"], columns=[\"Matrix\", \"Alien\", \"Star Wars\", \"Casablanca\", \"Titanic\"])\nd.head(7)","fc75e59c":"from numpy.linalg import svd \nU, S, Vt = svd(M, full_matrices=True)\nprint(f\"U:\\n{U}\")\nprint(f\"S used for building Sigma:\\n{S}\")\nprint(f\"Vt (already transposed):\\n{Vt}\")","b8a2dabc":"np.set_printoptions(precision=2)\nSigma = np.zeros((7, 5), dtype=float)\nSigma[:5, :5] = np.diag(S)\nprint(f\"Sigma:\\n {Sigma}\")\nprint(\"Reconstructured data: U * Sigma * Vt\")\nprint(np.dot(U, np.dot(Sigma, Vt)))","424a09cf":"np.set_printoptions(precision=2)\nU = U[:,0:2]\nprint(f\"U:\\n{U}\")\nSigma = np.zeros((2, 2), dtype=float)\nSigma[:2, :2] = np.diag(S[:2])\nprint(f\"Sigma:\\n{Sigma}\")\nVt = Vt[0:2, :]\nprint(f\"Vt:\\n{Vt}\")\nprint(f\"Reconstructured data:\\n {np.dot(U, np.dot(Sigma, Vt))}\")","ac33cfb3":"q = np.array([4, 0, 0, 0, 0])\nV = Vt.transpose()\nprint(f\"Query: q={q}\")\nqV = np.dot(q, V)\nprint(f\"Map to concept space: qV={qV}\")\nprint(f\"Map back to movie space by multiplying by Vt = {np.dot(qV, Vt)}\")","de758cde":"## Using U, Sigma and Vt to reconstruct the original matrix","06329696":"## Demonstration of SVD using a toy data of movie ranking\nYuzhen Ye (yye@indiana.edu), 2021, for Data Mining course (B565)","95313c78":"## Quency only rated the first movie, can we find out his interest in other movies as well?","97d4994f":"## Apply SVD","52691a03":"## Here is the toy data","c216f68b":"## Using the two most inportant hidden variables (concepts)","452d7ac6":"## The diagram below summarizes the above calculations. \n\n<img src=\"https:\/\/cgi.luddy.indiana.edu\/~yye\/b565\/images\/SVDtoymovie.png\" style=\"width: 600px;\"\/>\n\n## What SVD does?\nIn linear algebra, the singular value decomposition (SVD) is a factorization of a real or complex matrix. It generalizes the eigendecomposition of a square normal matrix with an orthonormal eigenbasis to any $m\\times  n$ matrix. Specifically, the singular value decomposition of a $m \\times n$ matrix $M$ is a factorization of the form $U\\Sigma V^T$, where $U$ is $m \\times m$ matrix, $\\Sigma$ is $m \\times n$ matrix and $V$ is $n \\times n$ matrix. If M is real, U and V can also be guaranteed to be real orthogonal matrices. \n\nThe diagonal entries of $\\Sigma$ matrix are known as the singular values of $M$. The number of non-zero singular values is equal to the rank of M. The columns of $U$ and the columns of $V$ are called the left-singular vectors and right-singular vectors of M, respectively. \n\nSVD defines a small number of hidden \u201cconcepts\u201d that connect the row (person) and column (movie). In this case, the concepts can be science-fiction and romance. U connects people to concepts, V connects concepts to movies, and the middle diagonal (Sigma) gives the strength of each of the concepts. \n\n## Querying using concepts. \nFor example, a new user Quincy has only seen one movie, The Matrix, and he rated it 4. Quincy can be represented as q=[4,0,0,0,0], and be mapped onto the \u201cconcept space\u201d by multiplying q by the matrix V of the decomposition: qV=[2.32,0], meaning that Quincy has high interest in science-fiction, but not romance. \nTo find his actual interest in movies, just need to map his representation in the concept space back into movie space by multiplying [2.31,0] by VT. The product is [1.33,1.33,1.33,0,0]. \n\n"}}