{"cell_type":{"41c2fa1c":"code","bcd16fe1":"code","c5b94bed":"code","5adffa56":"code","ddc91fb5":"code","ced77657":"code","2f4aeddd":"code","01f687f4":"code","60aa36e9":"code","6fda9f02":"code","d42d129f":"code","f2e3a052":"code","2c7f9fd1":"code","e01eb3ca":"code","8367aa69":"code","69c25689":"code","578f8c75":"code","6b0acccf":"code","68c7e1cd":"code","28166e2a":"code","a473bf01":"code","644702c0":"code","bad6d9a7":"markdown","b2609aed":"markdown","e8f76860":"markdown","1b407454":"markdown","a93e2460":"markdown","5b7c21e8":"markdown","80c4605c":"markdown","4aeb4f50":"markdown","943c41f0":"markdown","f4ca070f":"markdown"},"source":{"41c2fa1c":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport numpy as np\nfrom datetime import datetime\n\nfrom matplotlib.pyplot import figure\n\nimport bq_helper\nfrom bq_helper import BigQueryHelper\n\npatents = bq_helper.BigQueryHelper(active_project=\"patents-public-data\",\n                                   dataset_name=\"patents\")\n\n# View table names under the patents data table\nbq_assistant = BigQueryHelper(\"patents-public-data\", \"patents\")\nbq_assistant.list_tables()","bcd16fe1":"# View information on all columns in the publications data table\n#bq_assistant.table_schema(\"publications\")","c5b94bed":"# View the first three rows of the publications data table\nbq_assistant.head(\"publications\", num_rows=3)","5adffa56":"df_sample = bq_assistant.head(\"publications\", num_rows=3)\ndf_sample.columns","ddc91fb5":"# number of publications by country\nquery1 = \"\"\"\nSELECT COUNT(*) AS cnt, country_code\nFROM (\n  SELECT ANY_VALUE(country_code) AS country_code\n  FROM `patents-public-data.patents.publications` AS pubs\n  GROUP BY application_number\n)\nGROUP BY country_code\nORDER BY cnt DESC\n        \"\"\"\n#bq_assistant.estimate_query_size(query1) \n\napplications = patents.query_to_pandas_safe(query1, max_gb_scanned=3)\napplications.head()","ced77657":"figure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6)\n\nax = sns.barplot(x='country_code', y='cnt', data=applications, color='grey')\n\nplt.title(\"Total applications per country\", loc='center')\nplt.ylabel('#Applications')\nplt.xlabel('Country')\n\n#ax.set_yscale('log')\nsns.despine();","2f4aeddd":"query1 = \"\"\"\nSELECT\n  SUM(year_cnt) AS total_count,\n  assignee_name,\n  ARRAY_AGG(STRUCT<cnt INT64, filing_year INT64, countries STRING>(year_cnt, filing_year, countries) ORDER BY year_cnt DESC LIMIT 1)[SAFE_ORDINAL(1)] AS largest_year\nFROM (\n  SELECT SUM(year_country_cnt) AS year_cnt, assignee_name, filing_year, STRING_AGG(country_code ORDER BY year_country_cnt DESC LIMIT 5) AS countries\n  FROM (\n    SELECT COUNT(*) AS year_country_cnt, a.name AS assignee_name, CAST(FLOOR(filing_date \/ 10000) AS INT64) AS filing_year, apps.country_code\n    FROM (\n      SELECT ANY_VALUE(assignee_harmonized) AS assignee_harmonized, ANY_VALUE(filing_date) AS filing_date, ANY_VALUE(country_code) AS country_code\n      FROM `patents-public-data.patents.publications` AS pubs\n      WHERE (SELECT MAX(TRUE) FROM UNNEST(pubs.cpc) AS c WHERE REGEXP_CONTAINS(c.code, \"A61K39\"))\n      GROUP BY application_number\n    ) AS apps, UNNEST(assignee_harmonized) AS a\n    WHERE filing_date > 0\n    GROUP BY a.name, filing_year, country_code\n  )\n  GROUP BY assignee_name, filing_year\n)\nGROUP BY assignee_name\nORDER BY total_count DESC\nLIMIT 20;\n\"\"\"\n#bq_assistant.estimate_query_size(query1) \n\nassignee = patents.query_to_pandas_safe(query1, max_gb_scanned=9)\nassignee.head()","01f687f4":"figure(num=None, figsize=(6, 8), dpi=80, facecolor='w', edgecolor='k')\n\nsns.set(context='poster', style='ticks', font_scale=0.6)\n# Reorder it following the values:\nmy_range=range(1,len(assignee.index)+1)\n\n# Create a color if the group is \"B\"\nmy_color=np.where(assignee['total_count'] >= 1000, '#5ab4ac', '#d8b365')\nmy_size=np.where(assignee['total_count'] >= 0, 70, 30)\n\n# The vertival plot is made using the hline function\n# I load the seaborn library only to benefit the nice looking feature\nplt.hlines(y=my_range, xmin=0, xmax=assignee['total_count'], color=my_color, alpha=1)\nplt.scatter(assignee['total_count'], my_range, color=my_color, s=my_size, alpha=1)\n\n# Add title and exis names\n\nplt.yticks(my_range, assignee['assignee_name'])\nplt.title(\"Most applications filed per assignee\", loc='left')\nplt.xlabel('Number of applications')\nplt.ylabel('')\nsns.despine();","60aa36e9":"query1 = \"\"\"\nSELECT AVG(num_inventors), COUNT(*) AS cnt, country_code, filing_year, STRING_AGG(publication_number LIMIT 10) AS example_publications\nFROM (\n  SELECT ANY_VALUE(publication_number) AS publication_number, ANY_VALUE(ARRAY_LENGTH(inventor)) AS num_inventors, ANY_VALUE(country_code) AS country_code, ANY_VALUE(CAST(FLOOR(filing_date \/ (5*10000)) AS INT64))*5 AS filing_year\n  FROM `patents-public-data.patents.publications` AS pubs\n  WHERE filing_date > 19000000 AND ARRAY_LENGTH(inventor) > 0\n  GROUP BY application_number\n)\nGROUP BY filing_year, country_code\nHAVING cnt > 100\nORDER BY filing_year\n\"\"\"\n# bq_assistant.estimate_query_size(query1) \n\ninventors = patents.query_to_pandas_safe(query1, max_gb_scanned=8)\ninventors.head()","6fda9f02":"from matplotlib.pyplot import figure\nfigure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\n\nax = sns.boxplot(x=\"country_code\", y=\"f0_\",\n                 data=inventors, \n                 fliersize=True)\n\nplt.title(\"Average number of inventors per country  \", loc='center')\nplt.ylabel('')\nplt.xlabel('')\n\nsns.despine();","d42d129f":"from matplotlib.pyplot import figure\nfigure(num=None, figsize=(12, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6, palette='colorblind')\n\npalette = sns.color_palette(\"deep\", 17)\n\nax = sns.lineplot(x='filing_year', y='f0_', data=inventors, hue='country_code', lw=1, palette=palette)\n\nax.set_ylim(0, 5)\nax.set_xlim(1900, 2018)\nplt.title(\"Average number of inventors per country  \", loc='center')\nplt.ylabel('')\nplt.xlabel('Year')\nplt.legend(loc=2)\nsns.despine();","f2e3a052":"# number of publications by country\nquery1 = \"\"\"\nSELECT \n  country_code,\n  COUNT(DISTINCT publication_number) AS publications\nFROM\n  `patents-public-data.patents.publications`\nWHERE publication_date > 0\n    AND application_kind = 'A'\nGROUP BY country_code\nORDER BY publications DESC;\n        \"\"\"\n#bq_assistant.estimate_query_size(query1) \n\ncountry = patents.query_to_pandas_safe(query1, max_gb_scanned=3)\ncountry.head()","2c7f9fd1":"figure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6)\n\nax = sns.barplot(x='country_code', y='publications', data=country, color='grey')\n\nplt.title(\"Total patents published\", loc='center')\nplt.ylabel('$log$ #Publications')\nplt.xlabel('Country')\n\n#ax.set_yscale('log')\nsns.despine();","e01eb3ca":"# number of publications with date\nquery1 = \"\"\"\nWITH top5 AS (\nSELECT \n  country_code,\n  COUNT(DISTINCT publication_number) AS publications\nFROM\n  `patents-public-data.patents.publications`\nWHERE publication_date > 0\n    AND application_kind = 'A'\nGROUP BY country_code\nORDER BY publications DESC\nLIMIT 5)\n\nSELECT \n  ROUND(publication_date\/10000)  as datum,\n  country_code,\n  COUNT(DISTINCT publication_number) AS publications\nFROM\n  `patents-public-data.patents.publications`\nWHERE publication_date > 19000000\n    AND publication_date < 20180000\n    AND application_kind = 'A'\n    AND country_code IN (SELECT country_code FROM top5)\nGROUP BY datum, country_code\nORDER BY datum DESC, country_code;\n        \"\"\"\n# bq_assistant.estimate_query_size(query1) \n\nyearly = patents.query_to_pandas_safe(query1, max_gb_scanned=3)\nyearly['datum'] = np.int64(yearly.datum)\nyearly.head()","8367aa69":"from matplotlib.pyplot import figure\nfigure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\n\nax = sns.boxplot(x=\"country_code\", y=\"publications\",\n                 data=yearly, \n                 fliersize=False)\n\n#ax.set_ylim(0, 1e6)\nplt.title(\"Publication of patents per year\", loc='center')\nplt.ylabel('')\nplt.xlabel('')\nplt.yscale('log')\nsns.despine();","69c25689":"from matplotlib.pyplot import figure\nfigure(num=None, figsize=(12, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6, palette='colorblind')\n\npalette = sns.color_palette(\"deep\", 5)\n\nax = sns.lineplot(x='datum', y='publications', data=yearly, hue='country_code', lw=4, palette=palette)\n\nax.set_xlim(1900, 2017)\n#ax.set_yscale('log')\nplt.title(\"Publication of patents per year\", loc='center')\nplt.ylabel('Number of Publication')\nplt.xlabel('Year')\nplt.legend(loc=2)\nsns.despine();","578f8c75":"from matplotlib.pyplot import figure\nfigure(num=None, figsize=(12, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6, palette='colorblind')\n\npalette = sns.color_palette(\"deep\", 5)\n\nax = sns.lineplot(x='datum', y='publications', data=yearly, hue='country_code', lw=4, palette=palette)\n\nax.set_xlim(2000, 2017)\n#ax.set_yscale('log')\nplt.title(\"2011 China emerges as the leader\", loc='center')\nplt.ylabel('Number of Publication')\nplt.xlabel('Year')\nplt.legend(loc=2)\nsns.despine();","6b0acccf":"query2 = \"\"\"\nSELECT \n  FLOOR(grant_date\/10000) as datum,\n  COUNT(DISTINCT publication_number) as publications\nFROM\n  `patents-public-data.patents.publications`\nWHERE country_code = 'CN'\n    AND grant_date > 20110000\n    AND grant_date < 20180000\n    AND application_kind = 'A'\nGROUP BY datum, application_kind\nORDER BY application_kind, datum\n    ;\n        \"\"\"\n#bq_assistant.estimate_query_size(query2) \n\ncn_yearly = patents.query_to_pandas_safe(query2, max_gb_scanned=3)\ncn_yearly['datum'] = np.int64(cn_yearly.datum)\ncn_yearly","68c7e1cd":"figure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.set(context='poster', style='ticks', font_scale=0.6)\n\nax = sns.barplot(x='datum', y='publications', data=cn_yearly, color='grey')\n\nplt.title(\"Total patents granted to China\", loc='center')\nplt.ylabel('#Patents')\nplt.xlabel('')\nsns.despine();","28166e2a":"# kind_code = 'B'\n# Examined APP. open to Public inspection\nquery2 = \"\"\"\nSELECT \n    publication_number\nFROM\n  `patents-public-data.patents.publications`\nWHERE country_code = 'CN'\n    AND grant_date > 20170000\n    AND grant_date < 20180000\n    AND application_kind = 'A'\n    AND kind_code = 'B'\n    ;\n        \"\"\"\n#bq_assistant.estimate_query_size(query2) \n\ncn_publication_number = patents.query_to_pandas_safe(query2, max_gb_scanned=4)\ncn_publication_number.head()","a473bf01":"cn_publication_number.shape[0]","644702c0":"# Save publication number of Patents granted in 2017\ncn_publication_number.to_csv('cn_publication_number.csv', index=False)","bad6d9a7":"## More than 400,000 patents granted to China in 2017","b2609aed":"## Average number of inventors per country  ","e8f76860":"# Continuing... \n\n## New Kernel: [Deep dive into 2 millions patents of inventions to China ](https:\/\/www.kaggle.com\/dhimananubhav\/china-2-million-patents-for-invention\/)","1b407454":"## Lets look at the top 5 countries","a93e2460":"# Total published patents per country","5b7c21e8":"**I fill focus on only 1 table `publications`** ","80c4605c":"# Data dictionary \n\n* `publication_number`: Patent publication number (DOCDB compatible), eg: 'US-7650331-B1'\n* `application_number`: Patent application number (DOCDB compatible), eg: 'US-87124404-A'. This may not always be set.\n*  `country_code`: Country code, eg: 'US', 'EP', etc\n* `kind_code`: Kind code, indicating application, grant, search report, correction, etc. These are different for each country.\n* `application_kind`:  High-level kind of the application: A=patent; U=utility; P=provision; W= PCT; F=design; T=translation.\n* `application_number_formatted`:  Application number, formatted to the patent office format where possible.\n* `pct_number`: PCT number for this application if it was part of a PCT filing, eg: 'PCT\/EP2008\/062623'.\n* `family_id`: Family ID (simple family). Grouping on family ID will return all publications associated with a simple patent family (all publications share the same priority claims).\n* `title_localized`: The publication titles in different languages\n* `abstract_localized`: The publication abstracts in different languages\n* `claims_localized`: For US publications only, the claims\n* `description_localized`: For US publications only, the description, limited to the first 9 megabytes\n* `publication_date`: The publication date.\n* `filing_date`: The filing date.\n* `grant_date`: The grant date, or 0 if not granted.\n* `priority_date`: The earliest priority date from the priority claims, or the filing date.\n* `priority_claim`: The application numbers of the priority claims of this publication.\n* `inventor`: The inventors.\n* `inventor_harmonized`: The harmonized inventors and their countries.\n* `assignee`: The assignees\/applicants.\n* `assignee_harmonized`: The harmonized assignees and their countries.\n* `'examiner`: The examiner of this publication and their countries.\n* `uspc`: The US Patent Classification (USPC) codes.\n* `ipc`: The International Patent Classification (IPC) codes.\n* `cpc`: The Cooperative Patent Classification (CPC) codes.\n* `fi`: The FI classification codes.\n* `fterm`: The F-term classification codes.\n* `citation`: The citations of this publication. Category is one of {CH2 = Chapter 2; SUP = Supplementary search report ; ISR = International search report ; SEA = Search report; APP = Applicant; EXA = Examiner; OPP = Opposition; 115 = article 115; PRS = Pre-grant pre-search; APL = Appealed; FOP = Filed opposition}, Type is one of {A = technological background; D = document cited in application; E = earlier patent document; 1 = document cited for other reasons; O = Non-written disclosure; P = Intermediate document; T = theory or principle; X = relevant if taken alone; Y = relevant if combined with other documents}\n* `entity_status`: The USPTO entity status (large, small).\n* `art_unit`: The USPTO art unit performing the examination (2159, etc).\n# Patent application per country","4aeb4f50":"# Patent analysis using the Google Patents Public Datasets on BigQuery\n\n* Documentation: [Source](https:\/\/bigquery.cloud.google.com\/table\/patents-public-data:patents.publications**)\n* SQL:  [Source](https:\/\/console.cloud.google.com\/marketplace\/details\/google_patents_public_datasets\/google-patents-public-data?_ga=2.149459583.-859854271.1532095116&pli=1)","943c41f0":"## Patents granted to China since 2011","f4ca070f":"## Most application filed per assignee"}}