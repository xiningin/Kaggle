{"cell_type":{"14f26de7":"code","cc8736bf":"code","77a6b064":"code","7e7bebd1":"code","17c95a56":"code","1fb4d5ab":"code","4ca58f66":"code","2f66ba63":"code","934e951d":"code","9199b4da":"code","31774bda":"code","29f90389":"code","7e203bac":"code","11fcc628":"code","358299e3":"markdown","b57d2df5":"markdown","5e409617":"markdown","469acae5":"markdown","bd089b03":"markdown","f2d090c9":"markdown"},"source":{"14f26de7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc8736bf":"# Other  \nimport librosa\nimport librosa.display\nimport json\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom matplotlib.pyplot import specgram\nimport pandas as pd\nimport seaborn as sns\nimport glob \nimport os\nfrom tqdm import tqdm\nimport pickle\nimport IPython.display as ipd  # To play sound in the notebook","77a6b064":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\n# Use one audio file in previous parts again\ndf = '\/kaggle\/input\/french-speaking-english-speech-data\/G00003S2267.wav'  \ndata, sampling_rate = librosa.load(fname)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(data, sr=sampling_rate)\n\n# Paly it again to refresh our memory\nipd.Audio(data, rate=sampling_rate)","7e7bebd1":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef noise(data):\n    \"\"\"\n    Adding White Noise.\n    \"\"\"\n    # you can take any distribution from https:\/\/docs.scipy.org\/doc\/numpy-1.13.0\/reference\/routines.random.html\n    noise_amp = 0.05*np.random.uniform()*np.amax(data)   # more noise reduce the value to 0.5\n    data = data.astype('float64') + noise_amp * np.random.normal(size=data.shape[0])\n    return data","17c95a56":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\nx = noise(data)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(x, sr=sampling_rate)\nipd.Audio(x, rate=sampling_rate)","1fb4d5ab":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef shift(data):\n    \"\"\"\n    Random Shifting.\n    \"\"\"\n    s_range = int(np.random.uniform(low=-5, high = 5)*1000)  #default at 500\n    return np.roll(data, s_range)","4ca58f66":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\nx = shift(data)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(x, sr=sampling_rate)\nipd.Audio(x, rate=sampling_rate)","2f66ba63":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef stretch(data, rate=0.8):\n    \"\"\"\n    Streching the Sound. Note that this expands the dataset slightly\n    \"\"\"\n    data = librosa.effects.time_stretch(data, rate)\n    return data","934e951d":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\nx = stretch(data)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(x, sr=sampling_rate)\nipd.Audio(x, rate=sampling_rate)","9199b4da":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef pitch(data, sample_rate):\n    \"\"\"\n    Pitch Tuning.\n    \"\"\"\n    bins_per_octave = 12\n    pitch_pm = 2\n    pitch_change =  pitch_pm * 2*(np.random.uniform())   \n    data = librosa.effects.pitch_shift(data.astype('float64'), \n                                      sample_rate, n_steps=pitch_change, \n                                      bins_per_octave=bins_per_octave)\n    return data","31774bda":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef dyn_change(data):\n    \"\"\"\n    Random Value Change.\n    \"\"\"\n    dyn_change = np.random.uniform(low=-0.5 ,high=7)  # default low = 1.5, high = 3\n    return (data * dyn_change)","29f90389":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\nx = dyn_change(data)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(x, sr=sampling_rate)\nipd.Audio(x, rate=sampling_rate)","7e203bac":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\ndef speedNpitch(data):\n    \"\"\"\n    peed and Pitch Tuning.\n    \"\"\"\n    # you can change low and high here\n    length_change = np.random.uniform(low=0.8, high = 1)\n    speed_fac = 1.2  \/ length_change # try changing 1.0 to 2.0 ... =D\n    tmp = np.interp(np.arange(0,len(data),speed_fac),np.arange(0,len(data)),data)\n    minlen = min(data.shape[0], tmp.shape[0])\n    data *= 0\n    data[0:minlen] = tmp[0:minlen]\n    return data","11fcc628":"#Codes by Eu Jin Lok https:\/\/www.kaggle.com\/ejlok1\/audio-emotion-part-5-data-augmentation\/notebook\n\nx = speedNpitch(data)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(x, sr=sampling_rate)\nipd.Audio(x, rate=sampling_rate)","358299e3":"#Dynamic change","b57d2df5":"That's all for now. Unfortunately, I could hear any french here. Only beer.","5e409617":"#I didn't understand  what he is talking about ( only beer)","469acae5":"#Pitch, this method accentuates the high pitch notes.","bd089b03":"#Add static noise in the background","f2d090c9":"#Augmentation methods"}}