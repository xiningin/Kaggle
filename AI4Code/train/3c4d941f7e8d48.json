{"cell_type":{"10d37067":"code","6e5164a0":"code","97fb37e3":"code","003ab9f4":"code","0fadce74":"code","aa88b365":"code","99240915":"code","235c7c52":"code","efb06b63":"code","c2c06cda":"markdown","efc9bb7d":"markdown","bd8937d2":"markdown","d5ef3f29":"markdown","83416dcf":"markdown","c64fd222":"markdown"},"source":{"10d37067":"%matplotlib inline\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import date2num\nfrom datetime import datetime\nfrom scipy import stats\nimport numpy as np","6e5164a0":"df = pd.read_csv(\"..\/input\/all_prices.csv\", sep=',')\ndf.head()","97fb37e3":"df['Date'] = pd.to_datetime(df[\"Date\"], dayfirst=True)\ndf = df.pivot(index='Date', columns='Product', values='Price')\ndf = df.infer_objects()\ndf = df.dropna(thresh=len(df.index)*0.8, axis=1)\ndf = df.fillna(df.mean())\ndf.head()","003ab9f4":"def calc_cpi(df):\n    df['CPI'] = df.sum(axis=1)\n    df['CPI rebased'] = df['CPI'] * 100 \/ df['CPI'].iloc[0]\n    df['MA 20'] = df['CPI rebased'].rolling(20).mean()\n    df['MA 50'] = df['CPI rebased'].rolling(50).mean()\n    return df \n\ndf = calc_cpi(df)\n    \n# Removing outliers using Z-scores. \n# TODO Do it earlier.\nz = np.abs(stats.zscore(df))\nz = np.nan_to_num(z)\ndf = df[(z < 3).all(axis=1)]","0fadce74":"def plot_time_series(df, title):\n    df['CPI rebased'].plot(color='grey', linewidth=1, alpha=0.4)\n    df['MA 20'].plot(color='orange', linewidth=2, alpha=1)\n\n    plt.grid()\n\n    plt.axvspan(date2num(datetime(2018,5,16)), date2num(datetime(2018,6,14)), \n               label=\"Ramadhan 2018\",color=\"green\", alpha=0.3)\n\n    plt.axvspan(date2num(datetime(2019,5,5)), date2num(datetime(2019,6,3)), \n               label=\"Ramadan 2019\",color=\"green\", alpha=0.3)\n\n    plt.ylabel('Fruits & vegs, price')\n    plt.title(title, size=18)\n\n    plt.show()\n    \nplot_time_series(df, \"Absolute prices\")","aa88b365":"df = df.iloc[:, :-4]\ndf = df \/ df.iloc[0, :]\ndf = calc_cpi(df)\n\nplot_time_series(df, \"Normalized prices\")","99240915":"weights = {\n    \"Carotte\" : 6,\n    \"Pomme de terre blanche\" : 10, \n    \"Salade\" : 4, \n    \"Banane\" : 2,\n    \"Citron\" : 4,\n    \"Pomme (Locale)\" : 3\n}","235c7c52":"df = df.iloc[:, :-4] \n\nfor column in df.columns:\n    if column in weights:\n        df[column] = df[column] * weights.get(column)\n        \ndf.head()","efb06b63":"df = calc_cpi(df)\nplot_time_series(df, \"Normalized weighted prices\")","c2c06cda":"### Weighted noramlized prices","efc9bb7d":"We suppose that some products are more popular than others","bd8937d2":"### Plotting","d5ef3f29":"### Preparing the dataframe","83416dcf":"### Building a price index","c64fd222":"### Normalized prices"}}