{"cell_type":{"251a9e0f":"code","e4dd9674":"code","664ce12c":"code","d681085d":"code","053cf338":"code","2d61fd20":"code","0d7678f0":"code","f63188b8":"code","d61bb097":"code","4c565824":"markdown","7711c6db":"markdown","fdff92bf":"markdown","df0336b8":"markdown","4e530789":"markdown","e1f3e487":"markdown","ddf11c2c":"markdown"},"source":{"251a9e0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e4dd9674":"data  = pd.read_csv('\/kaggle\/input\/investdatatest\/INVEST.csv',delimiter=\";\")","664ce12c":"data","d681085d":"data.info()","053cf338":"data[\"DESEMPLEO\"] = [float(x.replace(',','.')) for x in data[\"DESEMPLEO\"]]\ndata[\"INFLACION\"] = [float(x.replace(',','.')) for x in data[\"INFLACION\"]]\ndata[\"CONFIANZA_USA\"] = [float(x.replace(',','.')) for x in data[\"CONFIANZA_USA\"]]\ndata[\"CONFIANZA_OCDE\"] = [float(x.replace(',','.')) for x in data[\"CONFIANZA_OCDE\"]]\ndata[\"PRECIO_CIERRE\"] = [float(x.replace(',','.')) for x in data[\"PRECIO_CIERRE\"]]\ndata[[\"DESEMPLEO\",\"INFLACION\",\"CONFIANZA_USA\",\"CONFIANZA_OCDE\",\"PRECIO_CIERRE\"]] = data[[\"DESEMPLEO\",\"INFLACION\",\"CONFIANZA_USA\",\"CONFIANZA_OCDE\",\"PRECIO_CIERRE\"]].apply(pd.to_numeric)","2d61fd20":"data.info()","0d7678f0":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import pearsonr\n\ndef corrfunc(x,y, ax=None, **kws):\n    \"\"\"Plot the correlation coefficient in the top left hand corner of a plot.\"\"\"\n    r, _ = pearsonr(x, y)\n    ax = ax or plt.gca()\n    # Unicode for lowercase rho (\u03c1)\n    rho = '\\u03C1'\n    ax.annotate(f'{rho} = {r:.2f}', xy=(.1, .9), xycoords=ax.transAxes)","f63188b8":"g = sns.pairplot(data,vars=[\"DESEMPLEO\",\"INFLACION\",\"CONFIANZA_USA\",\"CONFIANZA_OCDE\",\"PRECIO_CIERRE\"])\ng.map_lower(corrfunc)\nplt.show()","d61bb097":"g = sns.pairplot(data,vars=[\"DESEMPLEO\",\"INFLACION\",\"CONFIANZA_USA\",\"CONFIANZA_OCDE\",\"PRECIO_CIERRE\"],diag_kind=\"kde\")\ng.map_lower(corrfunc)\nplt.show()","4c565824":"## Calculo de correlaci\u00f3n\n\nEsta funci\u00f3n nos permite calcular la correlaci\u00f3n y graficarla en cada scatter","7711c6db":"### Visualizamos la tabla de datos","fdff92bf":"Si quieres Este estilo de diagonal","df0336b8":"Una Descripci\u00f3n de los tipos de datos nos muestra que no hay valores nulos y que ademas, los campos que necesitamos son de texto, para ello vamos a hacer una tranformacino de los datos\n\n1. Reemplazar las comas por puntos en cada campo de nuestro inter\u00e9s\n2. COnvertir a tipo num\u00e9rico","4e530789":"## Explicaci\u00f3n\nPra generar el grupo de graficas, usamos seaborn y una herramienta llamada pairplot, en la cual le especificamos las valiables que queremos. Adem\u00e1s, le pasamos por par\u00e1metro la funcion de la correlacion y listo","e1f3e487":"### Primero Cargamos los datos en un dataFrame\nNota, es necesario marcar como delimitador el punto y coma porque este csv no se delimita por la coma","ddf11c2c":"Ahora ya tenemos los datos listos para usar"}}