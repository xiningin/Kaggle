{"cell_type":{"fe5d652c":"code","d9573e94":"code","7b7a4b12":"code","df59cf1e":"code","73d3bbbb":"code","2b201b80":"code","b04c4d4e":"code","f801daae":"code","277d99b7":"code","582ee820":"code","d7220321":"code","70b12b17":"code","485f899c":"markdown"},"source":{"fe5d652c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nfrom tensorflow.keras import regularizers\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d9573e94":"df=pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ndf_test=pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\n","7b7a4b12":"df.columns","df59cf1e":"y_train=df.label.values\ndf=df.drop([\"label\"],axis=1)\n","73d3bbbb":"df.head()","2b201b80":"x_train=df.values\nx_train.shape\nx_train_shaped=x_train.reshape(42000,28,28,1)","b04c4d4e":"x_test=df_test.values\nx_test.shape\nx_test_shaped=x_test.reshape(28000,28,28,1)","f801daae":"model=tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(64,(3,3),activation=\"relu\",input_shape=(28,28,1)),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Conv2D(64,(3,3),activation=\"relu\"),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(64,activation=\"relu\"),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(10,activation=\"softmax\")\n    \n])","277d99b7":"model.compile(metrics=[\"accuracy\"], loss=\"sparse_categorical_crossentropy\",optimizer=\"adam\")","582ee820":"model.fit(x_train_shaped,y_train,epochs=30)","d7220321":"pred=model.predict(x_test_shaped)\npred.shape","70b12b17":"results = np.argmax(pred,axis = 1)\n\nresults = pd.Series(results,name=\"Label\")\n\nsubmission = pd.concat([pd.Series(range(1,28001),name = \"ImageId\"),results],axis = 1)\n\nsubmission.to_csv(\"result.csv\",index=False)","485f899c":"# feel free to edit. hope you like it."}}