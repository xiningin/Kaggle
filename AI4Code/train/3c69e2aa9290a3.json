{"cell_type":{"f085f083":"code","44941f59":"code","b5abe6a2":"code","3ad84a59":"code","9b4c9a0c":"code","dbe087ed":"code","e4460a18":"code","029f727f":"code","08b438e0":"code","a965bc97":"code","bb9724d8":"code","909b624b":"code","bd3e2e66":"code","6db35523":"code","52a1b0b4":"code","65da2f33":"code","4763f71d":"code","d044a021":"code","c64a10e7":"code","baf24f5e":"code","85328d1f":"markdown","43a2127b":"markdown","5c080ed8":"markdown","8f0dc8dd":"markdown","23146ab1":"markdown","ca2680a2":"markdown","8a1a3509":"markdown","8964f9fc":"markdown","1ce08fa7":"markdown","872fa898":"markdown","330ded3c":"markdown","192f3663":"markdown","3d3ca586":"markdown","97ce919b":"markdown","8eb27288":"markdown","c3479161":"markdown","7a3c9153":"markdown","929c987a":"markdown"},"source":{"f085f083":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns","44941f59":"import pandas as pd\ntrain = pd.read_csv(\"..\/input\/jane-street-market-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/jane-street-market-prediction\/example_test.csv\")\nfeatures = pd.read_csv(\"..\/input\/jane-street-market-prediction\/features.csv\")\nsubmission = pd.read_csv(\"..\/input\/jane-street-market-prediction\/example_sample_submission.csv\")","b5abe6a2":"plt.subplots(figsize=(20, 10))\nsns.heatmap(features.set_index(\"feature\"))","3ad84a59":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\").sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag count by feature\")","9b4c9a0c":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_0\", \"tag_1\", \"tag_2\", \"tag_3\", \"tag_4\", \"tag_5\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_0 ~ tag_5 count by feature\")","dbe087ed":"check_the_features_list = [\n    [\"feature_7\", \"feature_9\", \"feature_11\", \"feature_13\", \"feature_15\"],    # tag_6, tag_9, tag_11\n    [\"feature_8\", \"feature_10\", \"feature_12\", \"feature_14\", \"feature_16\"],   # tag_6, not tag_9, tag_11\n    [\"feature_17\", \"feature_19\", \"feature_21\", \"feature_23\", \"feature_25\"],  # tag_6, tag_9, tag_12\n    [\"feature_18\", \"feature_20\", \"feature_22\", \"feature_24\", \"feature_26\"],  # tag_6, not tag_9, tag_12\n    [\"feature_27\", \"feature_29\", \"feature_31\", \"feature_33\", \"feature_35\"],  # tag_6, tag_9, tag_13\n    [\"feature_28\", \"feature_30\", \"feature_32\", \"feature_34\", \"feature_36\"]   # tag_6, not tag_9, tag_13\n]\n\ncheck_feature_tag = [\n    \"tag_6, tag_9, tag_11\",\n    \"tag_6, not tag_9, tag_11\",\n    \"tag_6, tag_9, tag_12\",\n    \"tag_6, not tag_9, tag_12\",\n    \"tag_6, tag_9, tag_13\",\n    \"tag_6, not tag_9, tag_13\"\n]","e4460a18":"fig, axes = plt.subplots(2, 3, figsize=(20, 10))\nfor n, (feature, tag) in enumerate(zip(check_the_features_list, check_feature_tag)):\n    c = n % 2\n    v = n \/\/ 2\n    sns.heatmap(train[feature].corr(), annot=True, ax=axes[c, v])\n    axes[c, v].set_title(tag)","029f727f":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_6\", \"tag_9\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_6 or tag_9 count by feature\")","08b438e0":"fig, axes = plt.subplots(1, 2, figsize=(20, 10))\nfeatures[\n    features[\"tag_6\"] &\n    features[\"tag_9\"]\n].set_index(\"feature\").sum().plot(kind=\"barh\", ax=axes[0])\naxes[0].set_title(\"tag_6 and tag_9\")\n\nfeatures[\n    features[\"tag_6\"] &\n    ~features[\"tag_9\"]\n].set_index(\"feature\").sum().plot(kind=\"barh\", ax=axes[1])\naxes[1].set_title(\"tag_6 and not tag_9\")\n","a965bc97":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_7\", \"tag_8\", \"tag_10\", \"tag_11\", \"tag_12\", \"tag_13\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_7, tag_8, tag_10 ~ tag_13 count by feature\")","bb9724d8":"check_the_features_list = [\n    [\"feature_1\", \"feature_2\"],    # tag_6, tag_7. tag_\n    [\"feature_3\", \"feature_4\"],    # tag_6, tag_9, tag_11\n    [\"feature_5\", \"feature_6\"],    # tag_6, tag_9, tag_11\n\n\n]\n\ncheck_feature_tag = [\n    \"tag_6, tag_9, tag_11\",\n    \"tag_6, not tag_9, tag_11\",\n    \"tag_6, tag_9, tag_12\",\n    \"tag_6, not tag_9, tag_12\",\n    \"tag_6, tag_9, tag_13\",\n    \"tag_6, not tag_9, tag_13\"\n]","909b624b":"plt.subplots(figsize=(20, 10))\n\nsns.heatmap(train[[\"feature_1\", \"feature_2\", \"feature_3\", \"feature_4\", \"feature_5\", \"feature_6\"]].corr(), annot=True)","bd3e2e66":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_14\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_6 or tag_9 count by feature\")","6db35523":"plt.subplots(figsize=(20, 10))\nfeatures[\n    features[\"tag_14\"]\n].set_index(\"feature\").sum().plot(kind=\"barh\")\nplt.title(\"feature of true tag_14\")","52a1b0b4":"plt.subplots(figsize=(20, 10))\n\nsns.heatmap(train[[\"feature_41\", \"feature_42\", \"feature_43\"]].corr(), annot=True)","65da2f33":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_15\", \"tag_17\", \"tag_23\", \"tag_24\", \"tag_25\", \"tag_26\", \"tag_27\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_15, tag_17 and tag_23 ~ tag_27 count by feature\")","4763f71d":"check_the_features_list = [\n    [\"feature_72\", \"feature_73\", \"feature_74\", \"feature_75\", \"feature_76\", \"feature_77\"],          # tag_15, tag_23, tag_27\n    [\"feature_78\", \"feature_79\", \"feature_80\", \"feature_81\", \"feature_82\", \"feature_83\"],          # tag_17, tag_23, tag_27\n    [\"feature_84\", \"feature_85\", \"feature_86\", \"feature_87\", \"feature_88\", \"feature_89\"],          # tag_15, tag_23, tag_25\n    [\"feature_90\", \"feature_91\", \"feature_92\", \"feature_93\", \"feature_94\", \"feature_95\"],          # tag_17, tag_23, tag_25\n    [\"feature_96\", \"feature_97\", \"feature_98\", \"feature_99\", \"feature_100\", \"feature_101\"],        # tag_15, tag_23, tag_24\n    [\"feature_102\", \"feature_103\", \"feature_104\", \"feature_105\", \"feature_106\", \"feature_107\"],    # tag_17, tag_23, tag_24\n    [\"feature_108\", \"feature_109\", \"feature_110\", \"feature_111\", \"feature_112\", \"feature_113\"],    # tag_15, tag_23, tag_26\n    [\"feature_114\", \"feature_115\", \"feature_116\", \"feature_117\", \"feature_118\", \"feature_119\"],    # tag_17, tag_23, tag_26\n]\n\ncheck_feature_tag = [\n    \"tag_15, tag_23, tag_27\",\n    \"tag_17, tag_23, tag_27\",\n    \"tag_15, tag_23, tag_25\",\n    \"tag_17, tag_23, tag_25\",\n    \"tag_15, tag_23, tag_24\",\n    \"tag_17, tag_23, tag_24\",\n    \"tag_15, tag_23, tag_26\",\n    \"tag_17, tag_23, tag_26\",\n]","d044a021":"fig, axes = plt.subplots(2, 4, figsize=(20, 10))\nfor n, (feature, tag) in enumerate(zip(check_the_features_list, check_feature_tag)):\n    c = n % 2\n    v = n \/\/ 2\n    sns.heatmap(train[feature].corr(), annot=True, ax=axes[c, v])\n    axes[c, v].set_title(tag)","c64a10e7":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_18\", \"tag_19\", \"tag_20\", \"tag_21\", \"tag_22\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_18 ~ tag_22 count by feature\")","baf24f5e":"plt.subplots(figsize=(20, 10))\ntag_count = features.set_index(\"feature\")[[\"tag_28\"]].sum(axis=1).value_counts().sort_index().to_frame()\nplt.bar(tag_count.index, tag_count[0])\nfor x, y in zip(tag_count.index, tag_count[0]):\n    plt.text(x, y, y ,ha='center', va='bottom')\nplt.title(\"tag_28 count by feature\")","85328d1f":"Almost no correlation feature41 and (feature42, feature43)?","43a2127b":"## tag_14","5c080ed8":"## tag_15, tag_17 and tag_23 ~ tag_27","8f0dc8dd":"## tag_6 or tag_9","23146ab1":"a description of feature.csv [here](https:\/\/www.kaggle.com\/c\/jane-street-market-prediction\/data), but it's a bit unclear\n\n```\nfeatures.csv - metadata pertaining to the anonymized features\n```","ca2680a2":"feature_1, feature_2(tag_6, tag_7) <br>\nfeature_3, feature_4(tag_6, tag_8) <br>\nfeature_5, feature_6(tag_6, tag_9) <br>\nIn the case of the same tag, the correlation is high without depending on tag_9","8a1a3509":"There are no duplicate tags_0 to tag_5\n\nCheck the tags with the same tag except tag_0 to tag_5","8964f9fc":"## tag_28","1ce08fa7":"## tag_0 ~ tag_5","872fa898":"tag_14 does not conflict with other tags","330ded3c":"## tag_18 ~ tag_22","192f3663":"# Check feature.csv","3d3ca586":"## tag_7, tag_8, tag_10 ~ tag_13","97ce919b":"purpose of this notebook is to check the relationships between features with the same tag.","8eb27288":"this notebook is on the way","c3479161":"no tag related with feature_0","7a3c9153":"The features related to tag_11 are not so correlated due to the difference between tags0 to tag_5.\n\nBut The features related to tag_12 or tag_13 is correlated","929c987a":"There are no duplicate tag_7, tag_8, tag_10 ~ tag_13\n\ncheck tag_7, tag_8, tag_10"}}