{"cell_type":{"a0f0dee3":"code","7e902e63":"code","365fbc1b":"code","c8717518":"code","030ee613":"code","ad97d754":"code","2e00e30d":"code","5ee684ae":"code","56618269":"code","205e0bcb":"code","846a59e8":"code","03bee4f8":"code","e7729c1d":"code","d4a4eaf6":"code","455f3d2e":"code","f5a1b016":"code","1e81ace4":"markdown","7d079af3":"markdown","8f0366c2":"markdown","a8f86f3c":"markdown"},"source":{"a0f0dee3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7e902e63":"data = pd.read_csv(\"..\/input\/column_2C_weka.csv\")","365fbc1b":"data.head()","c8717518":"data[\"class\"].unique()","030ee613":"data[\"class\"].value_counts()","ad97d754":"data.info()","2e00e30d":"Abnormal =data[data[\"class\"] == 'Abnormal']\nNormal = data[data[\"class\"] == 'Normal']","5ee684ae":"Abnormal.drop([\"class\"],axis = 1,inplace = True)\nNormal.drop([\"class\"],axis = 1,inplace = True)\n","56618269":"Abnormal = (Abnormal-np.min(Abnormal))\/(np.max(Abnormal)-np.min(Abnormal))\nNormal = (Normal-np.min(Normal))\/(np.max(Normal)-np.min(Normal))","205e0bcb":"plt.figure(figsize=(15,10))\nplt.scatter(Abnormal.pelvic_incidence,Abnormal[\"pelvic_tilt numeric\"],color = 'red',label = 'Abnormal')\nplt.scatter(Normal.pelvic_incidence,Normal[\"pelvic_tilt numeric\"],color = 'green',label = 'Normal')\nplt.xlabel('pelvic_incidence')\nplt.ylabel('pelvic_tilt numeric')\nplt.legend()\nplt.show()","846a59e8":"#data[\"class\"] = [0 if i == \"Abnormal\" else 1 for i in data[\"class\"]]\ndata[\"class\"].replace([\"Abnormal\",\"Normal\"],[0,1],inplace = True)","03bee4f8":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis = 1)\nx = (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))","e7729c1d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 1)","d4a4eaf6":"# KNN model\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=22)\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)","455f3d2e":"print(\"{} knn score: {}\".format(22,knn.score(x_test,y_test)))","f5a1b016":"score =[]\nfor i in range(1,30):\n    knn2 = KNeighborsClassifier(n_neighbors=i)\n    knn2.fit(x_train,y_train)\n    score.append(knn2.score(x_test,y_test))\nplt.figure(figsize=(15,10))\nplt.plot(range(1,30),score)\nplt.xlabel(\"knn value\")\nplt.ylabel(\"Score\")\nplt.show()","1e81ace4":"The highest knn score is obtained when the n neighbor value was 22","7d079af3":"# Split data","8f0366c2":"# Scatter Plot","a8f86f3c":"# Conclusion"}}