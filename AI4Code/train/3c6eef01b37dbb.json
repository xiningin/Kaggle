{"cell_type":{"596a5452":"code","02063f05":"code","f44cc268":"code","cff6b4cb":"code","c4dc4673":"code","3a7b31c3":"code","fdece4a8":"code","6e70d6ba":"markdown"},"source":{"596a5452":"#dataset 1: UCI ML Drug Review dataset, 161297 entries","02063f05":"import pandas as pd","f44cc268":"Training1 = pd.read_csv(\"..\/input\/kuc-hackathon-winter-2018\/drugsComTrain_raw.csv\")\nprint(Training1.shape)\nTraining1.head()","cff6b4cb":"tsv_file='..\/input\/uci-drug-review-dataset\/drugLibTrain_raw.tsv'\ncsv_table=pd.read_table(tsv_file,sep='\\t')\ncsv_table.to_csv('Training2.csv',index=False)\nTraining2 = pd.read_csv(\"Training2.csv\")\nprint(Training2.shape)\nTraining2.head()","c4dc4673":"data = [Training1[\"drugName\"], Training2[\"urlDrugName\"], Training1[\"condition\"], Training2[\"condition\"], Training2[\"rating\"], Training1[\"rating\"], Training2[\"effectiveness\"], Training1[\"review\"], Training2[\"benefitsReview\"], Training2[\"sideEffects\"], Training2[\"sideEffectsReview\"], Training2[\"commentsReview\"]]\nheaders = [\"T1-Name\", \"T2-Name\", \"T1-condition\", \"T2-condition\", \"T2-rating\", \"T1-rating\", \"T2-effectiveness\", \"T1-review\", \"T2-benefits\", \"T2-sideEffects\", \"T2-sideEffectsReview\",\"T2-comments\"]\ncombined = pd.concat(data, axis=1, keys=headers)\nprint(combined.head())\nprint(combined.shape)","3a7b31c3":"combined[\"drugName\"] = combined[\"T1-Name\"] + combined[\"T2-Name\"]\ncombined[\"condition\"] = combined[\"T1-condition\"] + combined[\"T2-condition\"]\ncombined[\"rating\"] = combined[\"T1-rating\"] + combined[\"T2-rating\"]\ncombined = combined.drop(columns=[\"T1-Name\", \"T2-Name\", \"T1-condition\", \"T2-condition\", \"T1-rating\", \"T2-rating\"])\ncombined = combined[[\"drugName\", \"condition\", \"rating\", \"T2-effectiveness\", \"T2-sideEffects\",\"T1-review\", \"T2-benefits\", \"T2-sideEffectsReview\", \"T2-comments\"]]\n\nprint(combined.shape)\nprint(combined.head())\n","fdece4a8":"#combined.to_csv(Path, index=False)","6e70d6ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}