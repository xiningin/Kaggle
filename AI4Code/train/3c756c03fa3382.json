{"cell_type":{"9be3581f":"code","c07e10fc":"code","5fe56985":"code","d7194920":"code","3e94d058":"code","3899d643":"code","8c0c495f":"code","d86a1a62":"code","eb21e7b0":"code","faa7064f":"code","34b32b26":"code","ed519aa4":"code","a3141a3a":"code","e9921039":"code","11a3f55a":"code","f1193173":"code","23c44b1c":"code","1d94807b":"code","ccd9bb33":"code","32495ad1":"code","d88b1259":"code","9aa98a90":"code","2dd45fe2":"code","c89797ed":"code","c7399c7a":"code","13eedb68":"code","940321a4":"code","25481957":"code","e741818e":"code","9aa81c62":"code","ec30ce5c":"markdown","34f18c80":"markdown","8518c918":"markdown","888e57cd":"markdown","0291c47a":"markdown","004827ff":"markdown","86207b10":"markdown","9e63af89":"markdown","f38c1ab5":"markdown","f28acfeb":"markdown","dfeb5653":"markdown","1ae532f7":"markdown","9bc0ec97":"markdown","6309b2a9":"markdown","af2d348c":"markdown","d9de0c4e":"markdown"},"source":{"9be3581f":"import pandas as pd\nimport numpy as np \nimport requests\nimport configparser as cfg","c07e10fc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5fe56985":"def read_token_from_config_file(config):\n    parser = cfg.ConfigParser()\n    parser.read(config)\n    return parser.get('creds', 'token')","d7194920":"def get_data(symbol, exchange):\n    API_KEY = read_token_from_config_file(\"\/kaggle\/input\/stock-dataset-config-file\/config.cfg\")  \n    # you can obtain your API key from here https:\/\/www.alphavantage.co\/support\/#api-key\n    URL = f\"https:\/\/www.alphavantage.co\/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol={symbol}.{exchange}&outputsize=full&apikey={API_KEY}\"\n    request = requests.get(URL) \n    data = request.json()\n    return data","3e94d058":"Reliance_data = get_data(\"RELIANCE\", \"BSE\")","3899d643":"Reliance_data.keys()","8c0c495f":"Reliance_timeseries_data = Reliance_data['Time Series (Daily)'] # so we will use this as our date column in our csv","d86a1a62":"Reliance_data['Time Series (Daily)']['2021-06-07']","eb21e7b0":"key_df = pd.DataFrame(Reliance_timeseries_data.keys(), columns=['date']) \nvalue_df = pd.DataFrame(Reliance_timeseries_data.values())\ndf = key_df.join(value_df)\ndf.head()","faa7064f":"df.columns = ['date', 'open', 'high', 'low', 'close','adjusted_close' ,'volume', 'dividend_amount', 'split_coefficient']\ndf.head()","34b32b26":"df.columns","ed519aa4":"df = df.drop(['adjusted_close', 'split_coefficient'], axis=1)\ndf.columns","a3141a3a":"df.head()","e9921039":"df.info()","11a3f55a":"for col in df.columns[1:] :\n  df[col] = df[col].astype(float, errors = 'raise')","f1193173":"df['date'] = pd.to_datetime(df['date'])","23c44b1c":"df.head()","1d94807b":"df.info()","ccd9bb33":"print(df['date'].iloc[-1].date(), \"to\",df['date'].iloc[0].date())","32495ad1":"copy_df = df.copy(deep=True)\ncopy_df['year'] = pd.DatetimeIndex(df['date']).year\ncopy_df['month'] = pd.DatetimeIndex(df['date']).month\n\ncopy_df.head()","d88b1259":"df1 = copy_df[ (copy_df['year'] == 2021) & (copy_df['month']==6)]\ndf1.head()","9aa98a90":"df = pd.concat([copy_df, df1, df1]).drop_duplicates(keep=False)\ndf.head()","2dd45fe2":"import re\ndt = copy_df['date'].astype('str')\ndf2 = copy_df[ dt.str.contains(r'2021-06-0[1-9]' , regex=True) == False]\ndf2.head()","c89797ed":" stocks = [\n           ['RELIANCE', 'BSE'] ,\n           ['TCS', 'BSE'] ,\n           ['INFY', 'BSE'] ,\n           ['ITC', 'BSE'] ,\n           ['ONGC', 'BSE'],\n           ['IOC', 'BSE'],\n           ['OIL', 'BSE'],\n           ['SBIN', 'BSE'], \n           ['532215', \"BSE\"], # Axis bank \n           ['500770', 'BSE'] # Tata chemicals they are represnetd by some number and not name in the list which can be \n                             # obtained from the next cell\n]","c7399c7a":"r = requests.get(\"https:\/\/www.alphavantage.co\/query?function=SYMBOL_SEARCH&keywords=Axis&apikey={}\".format(\"YOUR_API_KEY\"))\nr.json()['bestMatches'][-3] # looking at the last entry","13eedb68":"import time \n# since we can have only 5 API calls per minute we will stop for 20 secs after making each call","940321a4":"for stock in stocks :\n    stock_data = get_data(stock[0], stock[1])\n    if stock[0] == \"532215\" :\n        stock[0] = \"AXISBANK\"\n    elif stock[0] == '500770' :\n        stock[0] = \"TATACHEM\"\n    print(f\"Symbol: {stock[0]}\")\n    # creating a df \n    timeseries_data = stock_data['Time Series (Daily)']\n    key_df = pd.DataFrame(timeseries_data.keys(), columns=['date']) \n    value_df = pd.DataFrame(timeseries_data.values())\n    df = key_df.join(value_df)\n\n    # renaming and dropping columns\n    df.columns = ['date', 'open', 'high', 'low', 'close','adjusted_close' ,'volume', 'dividend_amount', 'split_coefficient']\n    df = df.drop(['adjusted_close', 'split_coefficient'], axis=1)\n\n    # changing dtypes\n    for col in df.columns[1:] :\n        df[col] = df[col].astype(float, errors = 'raise')\n    df['date'] = pd.to_datetime(df['date'])\n\n    # removing entries from\n    dt = df['date'].astype('str')\n    df = df[ dt.str.contains(r'2021-06-0[1-9] | 2021-06-[1-2][0-9] | 2021-06-30' , regex=True) == False]\n\n    # setting date as index and reversing the df \n    df.set_index('date' ,inplace=True )\n    df = df.iloc[::-1]\n    print(df.head())\n    filename = f\"{stock[0]}-{stock[1]}.csv\"\n    df.to_csv(filename, index=True)\n    print(\"Done !\\n\")\n    time.sleep(25)\n","25481957":"saved_df = pd.read_csv('INFY-BSE.csv')","e741818e":"saved_df.head()","9aa81c62":"saved_df.info()","ec30ce5c":"# Done !","34f18c80":"OR ","8518c918":"## Let's create a dataset for sample stock then we will generalise the same process for different list of stocks","888e57cd":"## Renaming columns","0291c47a":"### So we have a data from Jan 2005 to June 2021 \nLets keep it till end of May 2021 as it just contains some days in June","004827ff":"So finally we have our df for reliance ready!\n","86207b10":"# Creating a indian stock price dataset ","9e63af89":"## Importing some libraries","f38c1ab5":"## Let's check if data is saved properly or not ","f28acfeb":"## Lets look at the range of date which we have","dfeb5653":"Removing adjusted_close, split_coefficient ","1ae532f7":"Removing the df1 from df \n\nreference : https:\/\/stackoverflow.com\/questions\/37313691\/how-to-remove-a-pandas-dataframe-from-another-dataframe ","9bc0ec97":"## Let's simulate the process for one particular stock then we will combine the results for different stocks","6309b2a9":"## all the columns are of dtype='object' so let's convert them into their respective types","af2d348c":"# Let's list some stocks with their respctive Symbol and exchange","d9de0c4e":"This notebook contains all the steps which I took while creating this [Daily Indian stock price dataset](https:\/\/www.kaggle.com\/pathikghugare\/daily-indian-stock-price-dataset)"}}