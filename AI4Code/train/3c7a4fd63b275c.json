{"cell_type":{"1d0b4e5c":"code","096880c1":"code","2e13b30c":"code","9f6ebd84":"code","f975fbbb":"code","bcf43235":"code","fb43e1aa":"code","004eeff7":"code","6ef60a1c":"code","f09f7531":"code","7beaaf77":"code","c8f20498":"markdown","c1f25e55":"markdown","b86c261d":"markdown","78af9ef1":"markdown","2b7c1061":"markdown","0d595f94":"markdown"},"source":{"1d0b4e5c":"!pip install pycaret","096880c1":"from pycaret.regression import *\n","2e13b30c":"train = pd.read_csv('..\/input\/home-data-for-ml-course\/train.csv')\ntest  = pd.read_csv('..\/input\/home-data-for-ml-course\/test.csv')\nsample= pd.read_csv('..\/input\/home-data-for-ml-course\/sample_submission.csv')","9f6ebd84":"train.head()","f975fbbb":"train.info()","bcf43235":"categorical_cols = [col for col in train.columns\n                    if train[col].dtype == object\n                    and train[col].nunique() <= 10]\n\nignore_feature = [col for col in train.columns\n                    if train[col].dtype == object\n                    and train[col].nunique() > 10]\nmiss_categorical_cols_train = [col for col in categorical_cols\n                         if train[col].isnull().any()]\n\nnumerical_cols = [col for col in train.columns\n                   if train[col].dtype != object]\nmiss_numerical_cols_train = [col for col in numerical_cols\n                         if train[col].isnull().any()]\nnumerical_cols.remove('SalePrice')","fb43e1aa":"reg = setup(data = train, \n             target = 'SalePrice',\n             numeric_imputation = 'mean',\n             categorical_features = categorical_cols  , \n             ignore_features = ignore_feature+miss_categorical_cols_train+miss_numerical_cols_train,\n             normalize = True,\n             silent = True)","004eeff7":"compare_models()","6ef60a1c":"cb = create_model('catboost')","f09f7531":"interpret_model(cb)","7beaaf77":"predictions = predict_model(cb, data = test)\nsample['SalePrice'] = predictions['Label']\nsample.to_csv('submission.csv',index=False)\nsample.head()","c8f20498":"# let's do CatBoost","c1f25e55":"# Final","b86c261d":"PyCaret - An open source low-code ML library. You can reach pycaret website and documentation from https:\/\/pycaret.org","78af9ef1":"# Compare different regression models","2b7c1061":"# Read the Data","0d595f94":"SHAP Values (impact on model output)"}}