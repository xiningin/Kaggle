{"cell_type":{"2489df09":"code","bcf52db8":"code","b08a15b6":"code","bc871c64":"code","8e0f62b8":"code","c50b9ddc":"code","d947d768":"code","d9dad405":"code","ea7367b8":"code","304d665a":"code","97ada8af":"code","ca47a7df":"markdown","de4d7e9c":"markdown"},"source":{"2489df09":"import gc\nfrom tqdm import tqdm\n#from tqdm._tqdm import trange\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\n\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","bcf52db8":"data0=pd.read_csv('..\/input\/uber-stock-data\/UBER.csv')\ndata0","b08a15b6":"data1=data0[['Date','Close']]","bc871c64":"item1=data1\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20, 5\nplt.plot(item1.ds, item1.y)","8e0f62b8":"train_item=item1[0:-60]\nvalidation_item=item1[-60:]","c50b9ddc":"ph = Prophet()\nph.fit(item1)\nforecast = ph.predict(item1[['ds']])\nfigure = ph.plot(forecast)\nfigure.show()","d947d768":"from datetime import timedelta\nstart0 = dt.datetime.strptime('2021-01-01', '%Y-%m-%d').date()\nend0   = dt.datetime.strptime('2022-12-31', '%Y-%m-%d').date()\nprint((end0-start0).days)","d9dad405":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","ea7367b8":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0)","304d665a":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","97ada8af":"ph = Prophet()\nph.fit(item1)\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","ca47a7df":"# fit past and predict past","de4d7e9c":"# fit past and predict past+future"}}