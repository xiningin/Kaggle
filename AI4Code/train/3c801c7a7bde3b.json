{"cell_type":{"5ce6a995":"code","5dabf3c8":"code","9816064e":"code","b3190c38":"code","5ef7efc3":"code","3346a9ec":"code","d7dce5df":"code","6200a1fd":"code","c79165ea":"code","521838f7":"code","370787cb":"code","af73b29a":"code","eb7eed8d":"code","90d1b447":"code","f157527a":"code","672d7d91":"code","a57655eb":"code","0492273c":"code","b9ad5b42":"code","b97ffd36":"code","ba69ff90":"code","50506778":"code","0ed43f25":"code","bb00a53d":"code","3aa22634":"code","7960c6fc":"code","84a8d854":"code","926c79d4":"code","e92f03bb":"code","fd5019a8":"code","86dfe44f":"code","edfeee4c":"code","526acb7e":"code","86ca8ab6":"code","8ec49624":"code","b02549f8":"code","521f5c48":"code","654f3aa5":"code","f2e7d42b":"markdown","a62fb98d":"markdown","07e18894":"markdown","65e00a16":"markdown","22b90243":"markdown","aca4e3d1":"markdown","2694a3e6":"markdown","7fe2aa1a":"markdown","46793441":"markdown","75ff62ca":"markdown","a1bba0c4":"markdown","793ad779":"markdown","85499235":"markdown","868f1182":"markdown"},"source":{"5ce6a995":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5dabf3c8":"import pandas as pd\nimport numpy as np","9816064e":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style('whitegrid')","b3190c38":"import cufflinks as cf\ncf.go_offline()","5ef7efc3":"train = pd.read_csv('..\/input\/titanic-machine-learning-from-disaster\/titanic_train.csv')","3346a9ec":"train.head()","d7dce5df":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","6200a1fd":"sns.countplot(x='Survived', data=train, hue='Sex', palette='RdBu_r')","c79165ea":"sns.countplot(x='Survived', data=train, hue='Pclass')","521838f7":"sns.displot(train['Age'].dropna(), bins=30)","370787cb":"sns.countplot(x='SibSp', data=train)","af73b29a":"train['Fare'].iplot(kind='hist', bins=50)","eb7eed8d":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass', y='Age', data=train)","90d1b447":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 39\n        else:\n            return 24\n    else:\n        return Age","f157527a":"train['Age'] = train[['Age','Pclass']].apply(impute_age, axis=1)","672d7d91":"sns.heatmap(train.isnull(),yticklabels=False, cbar=False, cmap='viridis')","a57655eb":"train.drop('Cabin', axis=1, inplace=True)","0492273c":"train.head()","b9ad5b42":"train.dropna(inplace=True)","b97ffd36":"sns.heatmap(train.isnull(),yticklabels=False, cbar=False, cmap='viridis')","ba69ff90":"sex = pd.get_dummies(train['Sex'], drop_first=True)\nsex.head()","50506778":"embark = pd.get_dummies(train['Embarked'], drop_first=True)\nembark.head()","0ed43f25":"train = pd.concat([train,sex,embark], axis=1)","bb00a53d":"train.head()","3aa22634":"train.drop(['Sex','Embarked','Name', 'Ticket'], axis=1, inplace=True)","7960c6fc":"train.drop('PassengerId', axis=1, inplace =True)","84a8d854":"train.head()","926c79d4":"X = train.drop('Survived', axis =1)\ny = train['Survived']","e92f03bb":"from sklearn.model_selection import train_test_split","fd5019a8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","86dfe44f":"from sklearn.linear_model import LogisticRegression","edfeee4c":"lr = LogisticRegression(max_iter=10000)","526acb7e":"lr.fit(X_train,y_train)","86ca8ab6":"predictions = lr.predict(X_test)","8ec49624":"from sklearn.metrics import classification_report","b02549f8":"print(classification_report(y_test, predictions))","521f5c48":"from sklearn.metrics import confusion_matrix","654f3aa5":"print(confusion_matrix(y_test, predictions))","f2e7d42b":"Its seems like there is Bi-model distribution where there were quite a few young i.e., child passengers aged between 0 and 10. And then the average between 20 and 30 age. So, there is a skew towards younger passengers and as older we go, the lesser precentage passengers onboard.","a62fb98d":"Therefore, we have filled all the Null values in the Age column.","07e18894":"It seems like, most people onboard did not have neither a children or a spouse onboard.","65e00a16":"**EDA**","22b90243":"From the above heatmap, we can observe that there are many null values present in Age and Cabin columns.","aca4e3d1":"From this we can interpret that, the people who did not survive are much more likely to be male and people that did survive were almost twice as likely to be female.","2694a3e6":"The wealthier passengers in 1st and 2nd class tend to be a older than passengers in the 3rd class. Now we can use this average values inorder to impute the age based on the passenger class. ","7fe2aa1a":"Now, we are good to go and fit Logistic Regression model","46793441":"Now, we can see that there are no Null Values in the Data.","75ff62ca":"Its looks like the people that did not survive were overwhelmingly part of 3rd class or lowest class. And its looks like more or less the people that did survive were leaning a little more towards the heigher classes 1&2.","a1bba0c4":"**Converting categorical variables into indicator\/dummy variables**","793ad779":"Imputing the missing values in Age column.","85499235":"**Cleaning the Data**","868f1182":"It shows most of the purchase price is between 0 and 50 dollars. So it make sence that things are distributed towards the cheaper fare ticket because we already knew that most passengers were in 3rd class."}}