{"cell_type":{"9fd3f83e":"code","99492ca4":"code","01bbf707":"code","a495466e":"code","2c0aeff8":"code","55234634":"code","327c0e45":"code","b844ea30":"code","3681d294":"code","28b19f5f":"code","329818a4":"code","6178d1f0":"code","3594a097":"code","fcd00261":"code","5bebbc35":"code","a0f3b04f":"markdown","6dda1cbb":"markdown","c169884e":"markdown"},"source":{"9fd3f83e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","99492ca4":"!ls","01bbf707":"data = pd.read_csv(\"..\/input\/yahoofinancedata\/YahooFinSymbol.csv\", encoding = 'latin-1')","a495466e":"data","2c0aeff8":"data.tail()","55234634":"!pip install yfinance","327c0e45":"import yfinance as yf ","b844ea30":"import time\ndownloaded = []\nsymbols = []\nfor i in range(len(data)):\n  try:\n    downloaded.append(yf.download(data[\"Symbol\"][i],period=\"365d\",interval=\"1d\"))\n    symbols.append(data[\"Symbol\"][i])\n  except:\n    pass","3681d294":"downloaded","28b19f5f":"symbols","329818a4":"def autoTrading(df):\n  increasing = 1\n  candle = \"green\"\n  nexDayBuy = 0\n  alreadyBuy = 0\n  nearMA44 = 0; \n  df = df\n  df[\"MA44\"] = df[\"Close\"].rolling(44).mean()\n  df = df.dropna()\n  dates  = [ind for ind in df.index]\n  dates = dates[-21:]\n  for i in range(len(dates)-1):\n    if( i != (len(dates)-1)):\n      if(df[\"MA44\"][dates[i+1]] >= df[\"MA44\"][dates[i]]):\n        increasing = increasing * 1\n      else:\n        increasing = increasing * 0\n    else:\n      if(df[\"MA44\"][dates[i+1]] > df[\"MA44\"][dates[i]] and df[\"MA44\"][dates[i+1]] > df[\"MA44\"][dates[0]] ):\n        increasing = increasing * 1\n      else:\n       increasing = increasing * 0\n  candleValueOC = df[\"Close\"][dates[len(dates)-1]] -  df[\"Open\"][dates[len(dates)-1]] \n  candleValueLH = df[\"High\"][dates[len(dates)-1]] -  df[\"Low\"][dates[len(dates)-1]]\n  lastCandlesizeValid =  1 if df[\"High\"][dates[len(dates)-1]] <= df[\"MA44\"][dates[len(dates)-1]]*1.03 else 0\n  if(candleValueOC < 0):\n    candle = \"red\"\n  lastLow = df[\"Low\"][dates[len(dates)-1]]\n  lastMA44 = df[\"MA44\"][dates[len(dates)-1]]\n  # near MA44\n  if(lastLow < lastMA44*1.02):\n    nearMA44 = 1\n  greenClosing = df[\"Close\"][dates[len(dates)-1]]\n  MA44 = df[\"MA44\"][dates[len(dates)-1]]\n  if(candle == \"green\" and (greenClosing > MA44) and increasing == 1 and nearMA44 == 1 and alreadyBuy != 1):\n    nexDayBuy = 1\n  return nexDayBuy","6178d1f0":"stocks = []\nfor i in range(len(downloaded)):\n  if(len(downloaded[i]) > 0):\n    s = autoTrading(downloaded[i])\n    if(s == 1):\n      stocks.append(symbols[i])","3594a097":"stocks","fcd00261":"#nextDayBuy stocks if price goes above the last green candle # error margin 0.05%\nfrom datetime import date\ntoday = date.today()","5bebbc35":"print(\"Today's date:\", today)\nprint(\"Drum Roll please :), Tomorrow you should buy these following stocks at NSE India.\")\nstocks","a0f3b04f":"NOW DOWNLOAD DATA AFOR ALL THE STOCKS MENTIONED SYMBOL DATA. DAILY DATA IS GOOD ENOUGH FOR US NOW. HOWEVER, HIGH FREQUENCY TRADING DATA WILL BE A WORTH TRY.","6dda1cbb":"> THIS NOTE-BOOK IS NOT FOR MAKING INVESTMENT DECISION RATHER TO GET A PEEK AT ALGORITHMIC TRADING.","c169884e":"**IN THIS NOTEBOOK I PRESENT A SIMPLE WAY OF TECHNICAL ANALYSIS. ONE CAN USE ANY STOCK|ASSET SYMBOL, ANY MARKET. THOUGH I HAVE FOLLOWED A VERY SIMPLE STRATEGY GREEN CANDLE AND UP MOVING BOLLINGER BANDS BUT ANY COMPLEX STRATEGY CAN BE IMPLEMENTED USING THIS NOTEBOOK AS A BUILDING BLOCK**"}}