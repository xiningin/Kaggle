{"cell_type":{"482a080d":"code","615c36b6":"code","0fb45387":"code","9d6c5fa5":"code","0a0165a2":"code","612aedce":"code","ab9a57a2":"code","cfd2e772":"code","ce1a8e8a":"code","5c506896":"code","d9d4685d":"code","ac6363ac":"code","dbb377ba":"code","815b57e2":"code","b3dadce0":"code","b3d9980d":"code","b7498f6c":"code","cd474cb8":"code","3e9569b0":"code","5a83eae1":"code","7786de09":"code","245364de":"code","82228a9d":"code","65646a77":"code","e14f8d89":"code","fa331026":"code","0bd2ab13":"code","1424437a":"code","eca75e81":"code","b8ad3dde":"code","3db21cff":"code","0d5bf647":"code","a9a9b283":"code","66f125fb":"code","01d4e6af":"code","3f595b36":"code","0ecc94ac":"code","67b0e8ef":"code","567a84c5":"code","2dd3f2db":"code","e344da93":"code","64c45ec8":"code","14767c07":"code","6ba68b7d":"code","b2b0bfb1":"code","ffb2b780":"code","726d76ef":"code","a0ba5a68":"markdown","b51e867f":"markdown","350788df":"markdown","33bda9c8":"markdown"},"source":{"482a080d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","615c36b6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline ","0fb45387":"train_data = pd.read_csv(\"..\/input\/ipl-2020-player-performance\/Training.csv\")","9d6c5fa5":"train_data","0a0165a2":"train_data['batting_points'] = train_data['Runs'] + train_data['Boundaries'] + 2 * train_data['Six'] + 8 * train_data['Fifty'] + 16 * train_data['Hundred'] - 2 * train_data['Duck']\ntrain_data['bowling_points'] = 25 * train_data['Wickets'] + 8 * train_data['4W_Haul'] + 16 * train_data['5W_Haul'] + 8 * train_data['Maidens']\ntrain_data['total'] = train_data['batting_points'] + train_data['bowling_points']\ntrain_data","612aedce":"train_data['Player_name'] = train_data['Id']\ntrain_data['match_number'] =  train_data['Id']\nfor p in range(0, len( train_data)):\n    train_data['Player_name'][p] =  train_data['Id'][p].split(\"_\")[-1]\n    train_data['match_number'][p] = int( train_data['Id'][p].split('_')[:1][0])","ab9a57a2":"train_data.head()","cfd2e772":"train_data.isnull().sum()","ce1a8e8a":"plt.figure(figsize=(12,6),dpi=200)\nsns.heatmap(train_data.corr(),annot =True)","5c506896":"plt.figure(figsize = (12,10))\nsns.scatterplot(x ='Batting_Points', y = 'Bowling_Points', data=train_data)","d9d4685d":"plt.figure(figsize=(10,5),dpi=150)\nsns.scatterplot(data=train_data,y='Total Points',x='Player_name')\nplt.xticks(rotation=45);","ac6363ac":"data = pd.DataFrame()\ndata['total_score'] = train_data['Total Points']\ndata['match_number']    = train_data['match_number']\ndata['Player_name']= train_data['Player_name']","dbb377ba":"data","815b57e2":"##2020 matches","b3dadce0":"IPL_2020 =pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2020.csv')","b3d9980d":" IPL_2020.head()","b7498f6c":"IPL_2020.isnull().sum()","cd474cb8":"IPL_2020.columns","3e9569b0":"sns.countplot(x='city',data =IPL_2020)","5a83eae1":"IPL_2008_2019 = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2008-2019.csv')\nIPL_2008_2019","7786de09":"IPL_2008_2019.isnull().sum()","245364de":"IPL_2008_2019[\"city\"].fillna(\"0\", inplace = True) \n","82228a9d":"IPL_2008_2019[\"city\"]","65646a77":"IPL_2008_2019['umpire3'].fillna('0',inplace=True)\nIPL_2008_2019['umpire3']","e14f8d89":"IPL_2008_2019.isnull().sum()","fa331026":"IPL_2008_2019['umpire1'].fillna('0',inplace=True)\nIPL_2008_2019['umpire2'].fillna('0',inplace=True)\nIPL_2008_2019['winner'].fillna('0',inplace=True)\nIPL_2008_2019['player_of_match'].fillna('0',inplace=True)\nIPL_2008_2019","0bd2ab13":"IPL_2008_2019.isnull().sum()","1424437a":"plt.figure(figsize=(10,5),dpi = 200)\nplt.xticks(rotation=90)\nsns.countplot(IPL_2008_2019['winner'])","eca75e81":"plt.figure(figsize=(10,5),dpi = 200)\nplt.xticks(rotation=90)\nsns.countplot(IPL_2008_2019['toss_winner'])","b8ad3dde":"IPL_2008_2019 = IPL_2008_2019[['match_id','city','date','winner']]\nIPL_2008_2019.head()","3db21cff":"IPL_squad20 = pd.read_csv('..\/input\/ipl-2020-player-performance\/IPL 2020 Squads.csv',encoding= 'unicode_escape')","0d5bf647":"IPL_squad20","a9a9b283":"IPL_squad20['Player_name'].value_counts()","66f125fb":"sub_data=pd.read_csv('..\/input\/ipl-2020-player-performance\/sample_submission.csv')\nsub_data","01d4e6af":"data.head()","3f595b36":"data.player_name.value_counts()","0ecc94ac":"data.shape","67b0e8ef":"data1 = data.drop(['Player_name'],axis=1)","567a84c5":"data1","2dd3f2db":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_error","e344da93":"Pred_ = train_data.groupby(['Id','Player_name'])['total'].sum().reset_index() \n","64c45ec8":"Pred_ =Pred_.sort_values(by = 'total',ascending = False)\nPred_['Id'] = Pred_['Id'].astype('str')\nPred_['Id'] = Pred_['Id'] +'_'+ Pred_['Player_name']\nPred_","14767c07":"pred_l = train_data[['Id','Player_name','Total Points']]\npred_l","6ba68b7d":"pred_l.to_csv('predict10_11.csv',index=False)","b2b0bfb1":"from math import sqrt\nfrom sklearn.metrics import mean_squared_error\n\n#calculate RMSE\nrmse = sqrt(mean_squared_error(pred_l['Total Points'], Pred_['total'] )) \nrmse","ffb2b780":"pred_l.to_csv('predict10_11.csv',index=False)\n","726d76ef":"pred_l","a0ba5a68":"1. 1. WE are getting 1283 rows 2 columns\n\n\n\nPREPROCESS DATA","b51e867f":"sample_submission data","350788df":"PREDICTION","33bda9c8":"2020 ipl squads"}}