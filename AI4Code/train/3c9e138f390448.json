{"cell_type":{"0834c1cd":"code","cca337ba":"code","a6c98fd7":"code","df382125":"code","362d264b":"code","baee37f8":"code","4054131c":"code","a43a1936":"code","07f73b41":"code","621190c4":"code","421af90f":"code","b8baf1c3":"code","92b8d489":"code","f1531ea8":"code","786f8a79":"code","6f4f39c7":"code","6782d9c8":"code","fc1ecffd":"code","3efc6bca":"code","37ba82e2":"code","2964ca61":"code","dbbe1341":"code","edd3e6be":"code","772ab653":"code","ed4e912e":"code","0cae3e66":"code","2ed0e21c":"code","c88cf53d":"code","236b9102":"code","4ff9c4a7":"code","3ea16fb2":"code","7d80f770":"code","129d10bc":"code","a1abdbcb":"code","953b7aab":"code","cb5383f6":"code","a0e881a6":"code","ca34b3f9":"code","fbdb229d":"code","7e47aa54":"code","49e56fbd":"code","73729e59":"code","05e35524":"code","ca1ef325":"markdown","2e7de49b":"markdown","d8441d31":"markdown","2c14cf4a":"markdown","ba34094f":"markdown","9e82b8d5":"markdown","cc0c9e1e":"markdown","3fd73cb3":"markdown","6268c5b9":"markdown","cb2d7dfc":"markdown","3445f356":"markdown","87ffe5b1":"markdown","e61170b1":"markdown"},"source":{"0834c1cd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA\nimport sklearn.utils","cca337ba":"data = pd.read_csv('\/kaggle\/input\/country-socioeconomic-data\/Country-data.csv')\ndata.head(10)","a6c98fd7":"data.describe()","df382125":"data.info()","362d264b":"print(data.shape)","baee37f8":"df = data.iloc[:, 1:data.shape[1]]\ndf","4054131c":"# checking the missing values\ndata.isnull().sum()","a43a1936":"data.columns","07f73b41":"# checking for outliers using box-plots\n\nplt.figure(figsize=(20,20), dpi=100)\n\nplt.subplot(4,3,1)\nsns.boxplot(x = 'child_mort', data = data)\n\nplt.subplot(4,3,2)\nsns.boxplot(x = 'exports', data = data)\n\nplt.subplot(4,3,3)\nsns.boxplot(x = 'health', data = data)\n\nplt.subplot(4,3,4)\nsns.boxplot(x = 'imports', data = data)\n\nplt.subplot(4,3,5)\nsns.boxplot(x = 'income', data = data)\n\nplt.subplot(4,3,6)\nsns.boxplot(x = 'inflation', data = data)\n\nplt.subplot(4,3,7)\nsns.boxplot(x = 'life_expec', data = data)\n\nplt.subplot(4,3,8)\nsns.boxplot(x = 'total_fer', data = data)\n\nplt.subplot(4,3,9)\nsns.boxplot(x = 'gdpp', data = data)","621190c4":"\n# checking for outliers using the Z-score\n\nfrom scipy import stats\n\nz = np.abs(stats.zscore(data[['child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp']]))\nprint(z)\nprint(\"*******************************************************************************\")\n\n# threshold = 3  # selecting 3 as the threshold to identify outliers\nprint('Below are the outlier points along with the respective column numbers in the second array')\nprint(\"\\n\")\nprint(np.where(z > 3))","421af90f":"data_outliers_removed = data[(z<3).all(axis=1)]\n","b8baf1c3":"data_outliers_removed.head()\n","92b8d489":"print('Shape of dataframe before outlier removal: ' + str(data.shape))\nprint(\"\\n\")\nprint('Shape of dataframe after outlier removal: ' + str(data_outliers_removed.shape))","f1531ea8":"num_vars = data_outliers_removed.drop('country',axis =1)  \ncat_vars = data_outliers_removed['country']","786f8a79":"num_vars","6f4f39c7":"# Standardization of the dataset before performing PCA\n\nscaler = StandardScaler()\nnum_vars_scaled = scaler.fit_transform(num_vars)\nnum_vars_scaled_df = pd.DataFrame(num_vars_scaled,columns=num_vars.columns)\nnum_vars_scaled_df","6782d9c8":"# Let's see the correlation matrix \nplt.figure(figsize = (20,10))       \nsns.heatmap(num_vars_scaled_df.corr(),annot = True)","fc1ecffd":"pca = PCA(random_state=42)\npca.fit(num_vars_scaled)\n","3efc6bca":"var_cumu = np.cumsum(pca.explained_variance_ratio_)\nfig = plt.figure(figsize=[12,8],dpi=80)\nplt.vlines(x=4, ymax=1, ymin=0, colors=\"r\", linestyles=\"--\")\nplt.hlines(y=0.95, xmax=30, xmin=0, colors=\"g\", linestyles=\"--\")\nplt.plot(var_cumu)\nplt.ylabel(\"Cumulative variance explained\")\nplt.show()","37ba82e2":"pca_final = IncrementalPCA(n_components=4)\nnum_vars_pca_final = pca_final.fit_transform(num_vars_scaled)\nprint(num_vars.shape)\nprint(num_vars_pca_final.shape)","2964ca61":"# Finding the Optimal Number of Clusters\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=1000)\n    kmeans.fit(num_vars_pca_final)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)","dbbe1341":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=1000)\n    kmeans.fit(num_vars_pca_final)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(num_vars_pca_final, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","edd3e6be":"# final model with k=3\nkmeans = KMeans(n_clusters=4, max_iter=1000, random_state=42)\nkmeans.fit(num_vars_pca_final)","772ab653":"data_outliers_removed['K-Means_Cluster_ID'] = kmeans.labels_","ed4e912e":"healthy_df_clus_temp = df[[\"child_mort\",\"income\",\"gdpp\",]]\nhealthy_df_clus_temp = StandardScaler().fit_transform(healthy_df_clus_temp)\ndb = DBSCAN(eps = 0.3, min_samples = 3).fit(healthy_df_clus_temp)\ndataFrameLabels = pd.DataFrame(db.labels_)\ndataFrameLabels.head(15)","0cae3e66":"# Building the label to colour mapping \ncolours = {}\ncolours[0]  = 'red' # Zero values on labels\ncolours[1]  = 'green'# Minus 1 values on labels\ncolours[-1]  = 'blue'# Two values on labels","2ed0e21c":"cvec = [colours[label] for label in dataFrameLabels]\ncolors = ['red', 'green', 'blue'] \nprint(cvec)\nset(cvec)","c88cf53d":"#Visualize Results\n# For the construction of the legend of the plot \ncolors = ['r','g','b']\nr = plt.scatter( df[\"child_mort\"],df[\"gdpp\"], marker ='o', color =colours[0] ) \ng = plt.scatter( df[\"income\"],df[\"gdpp\"], marker ='o', color = colours[1]) \nb = plt.scatter( df[\"income\"],df[\"child_mort\"], marker ='o', color = colours[-1]) \nplt.legend((r, g, b), \n           ('Label 0', 'Label 2', 'Label -1'), \n           scatterpoints = 1, \n           loc ='upper right', \n           ncol = 3, \n           fontsize = 8) ","236b9102":"num_vars_scaled_df.head()","4ff9c4a7":"# complete linkage\ncl_mergings = linkage(num_vars_scaled_df, method=\"complete\", metric='euclidean')\ndendrogram(cl_mergings)\nplt.show()","3ea16fb2":"# 4 clusters using complete linkage\ncl_cluster_labels = cut_tree(cl_mergings, n_clusters=4).reshape(-1, )\ncl_cluster_labels","7d80f770":"data_outliers_removed[\"Hierarchical_Cluster_labels\"] = cl_cluster_labels\n","129d10bc":"data_outliers_removed.head()\n","a1abdbcb":"# plotting sub-plots to analyse the results\n\nplt.figure(figsize=(16,14), dpi=100)\n\nplt.subplot(3,2,1)\nsns.boxplot(x='K-Means_Cluster_ID', y='gdpp', data=data_outliers_removed)\n\nplt.subplot(3,2,2)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='gdpp', data=data_outliers_removed)\n\nplt.subplot(3,2,3)\nsns.boxplot(x='K-Means_Cluster_ID', y='child_mort', data=data_outliers_removed)\n\nplt.subplot(3,2,4)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='child_mort', data=data_outliers_removed)\n\nplt.subplot(3,2,5)\nsns.boxplot(x='K-Means_Cluster_ID', y='income', data=data_outliers_removed)\n\nplt.subplot(3,2,6)\nsns.boxplot(x='Hierarchical_Cluster_labels', y='income', data=data_outliers_removed)","953b7aab":"# scatter plot using the gdpp, child_mort to observe the cluster distribution\n\nplt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='gdpp',y='child_mort',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='gdpp',y='child_mort',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')\n\n","cb5383f6":"plt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='gdpp',y='income',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='gdpp',y='income',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')","a0e881a6":"plt.figure(figsize=(15,6),dpi=90)\n\nplt.subplot(1,2,1)\nsns.scatterplot(x='child_mort',y='income',data=data_outliers_removed,hue='K-Means_Cluster_ID')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='child_mort',y='income',data=data_outliers_removed,hue='Hierarchical_Cluster_labels')","ca34b3f9":"K_Means_countries = data_outliers_removed[data_outliers_removed['K-Means_Cluster_ID'] == 1]\nK_Means_countries.head(10)","fbdb229d":"Hirarchical_countries = data_outliers_removed[data_outliers_removed['Hierarchical_Cluster_labels'] == 0]\nHirarchical_countries.head(10)","7e47aa54":"# countries common to both the models\n\ncommon_countries = pd.merge(K_Means_countries,Hirarchical_countries,how='inner',on=['country', 'child_mort', 'exports', 'health', 'imports', 'income',\n       'inflation', 'life_expec', 'total_fer', 'gdpp', 'K-Means_Cluster_ID',\n       'Hierarchical_Cluster_labels'])\ncommon_countries","49e56fbd":"common_countries[['country', 'child_mort', 'income','gdpp']].head(10)","73729e59":"# dataframe with dereasing child mortality rate and increasing income\n\ncommon_countries_final = common_countries[['country', 'child_mort','income','gdpp']].sort_values(['child_mort','income'],ascending=[False,True])\ncommon_countries_final.head(15)","05e35524":"final_countries = common_countries_final[(common_countries_final['child_mort'] > 80) &  (common_countries_final['income'] < 1200)]\nfinal_countries = final_countries.reset_index(drop=True)\nfinal_countries","ca1ef325":"we can see that some columns have significant correlation among themselves ","2e7de49b":"As we can see, all rows are assigned to one cluster","d8441d31":"From K-Means clustering,\n\nWe can see that countries with cluster labelled as '1' are in need of aid","2c14cf4a":"# Countries which are in direst need of aid","ba34094f":"From Hierarchical clustering,\n\nWe can see that countries with cluster labelled as '0' are in need of aid","9e82b8d5":"# Clustering\n\n**K - means clustering**","cc0c9e1e":"## DBSCAN Clustering","3fd73cb3":"Scatter plot using the gdpp, child_mortt, income to observe the cluster distribution","6268c5b9":"### Countries with direst need for aid can be selected from the above dataframe\n","cb2d7dfc":" from the elbow method we can say that k = 4 clusters seems to be a good choice","3445f356":"# Hierarchical Clustering\n","87ffe5b1":"## PCA","e61170b1":"**Performing PCA with 4 components**"}}