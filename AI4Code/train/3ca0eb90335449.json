{"cell_type":{"4ce92ff7":"code","3a24c5d6":"code","90e78705":"code","d8ea0f40":"code","0053510c":"code","610dd6df":"code","4ef58a1c":"code","8a6bbe8f":"code","372a6fc1":"code","9de4a48c":"code","6788f16c":"code","1c3d032b":"code","4d5d8f80":"code","6aadd172":"code","86e2e65b":"code","3641c7fb":"code","19f32b75":"code","e8628d27":"code","5abbead8":"code","a4350797":"code","068ca8ae":"code","9b34e60c":"code","f1b4d165":"markdown","e77c263f":"markdown","fad41f98":"markdown","b9c04c32":"markdown","d30186e7":"markdown","966181e7":"markdown","66713292":"markdown","85d79b77":"markdown","1781f282":"markdown","3a156d38":"markdown","eddb3889":"markdown","cffe0178":"markdown","543a7f04":"markdown","79e0125e":"markdown","be9046a6":"markdown","346e3adb":"markdown","4449cdb2":"markdown","bf1a71b7":"markdown","a503a2e2":"markdown","137e3ab2":"markdown","5b2713e1":"markdown","83ccbfde":"markdown","082f0432":"markdown","80c08d15":"markdown","436ebb00":"markdown","8f398e48":"markdown","b8eab01c":"markdown","a5caba9e":"markdown","7cc9f2de":"markdown","ce39c2ad":"markdown","af206fbd":"markdown","a897ddec":"markdown","36c41074":"markdown","54250667":"markdown","f24429f2":"markdown"},"source":{"4ce92ff7":"import pandas as pd\nimport numpy as np \nimport plotly.express as px\nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.graph_objects as go\n","3a24c5d6":"\nnutrients=pd.read_csv(\"\/kaggle\/input\/nutrition-details-for-most-common-foods\/nutrients_csvfile.csv\")\nnutrients.head()","90e78705":"nutrients=nutrients.replace(\"t\",0)\nnutrients=nutrients.replace(\"t'\",0)\n\nnutrients.head()","d8ea0f40":"nutrients=nutrients.replace(\",\",\"\", regex=True)\nnutrients['Fiber']=nutrients['Fiber'].replace(\"a\",\"\", regex=True)\nnutrients['Calories'][91]=(8+44)\/2","0053510c":"nutrients['Grams']=pd.to_numeric(nutrients['Grams'])\nnutrients['Calories']=pd.to_numeric(nutrients['Calories'])\nnutrients['Protein']=pd.to_numeric(nutrients['Protein'])\nnutrients['Fat']=pd.to_numeric(nutrients['Fat'])\nnutrients['Sat.Fat']=pd.to_numeric(nutrients['Sat.Fat'])\nnutrients['Fiber']=pd.to_numeric(nutrients['Fiber'])\nnutrients['Carbs']=pd.to_numeric(nutrients['Carbs'])","610dd6df":"nutrients.dtypes","4ef58a1c":"print(nutrients.isnull().any())\nprint('-'*245)\nprint(nutrients.describe())\nprint('-'*245)","8a6bbe8f":"nutrients=nutrients.dropna()\nnutrients.shape","372a6fc1":"# Plotting the KDEplots\n\nimport matplotlib.pyplot as plt\n\n\nf, axes = plt.subplots(2, 3, figsize=(10, 10), sharex=True, sharey=True)\n\ns = np.linspace(0, 3, 10)\ncmap = sns.cubehelix_palette(start=0.0, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Carbs'],nutrients['Protein'],cmap=cmap,shade=True, ax=axes[0,0])\naxes[0,0].set(xlim=(-10, 50), ylim=(-30, 70), title = 'Carbs and Protein')\n\ncmap = sns.cubehelix_palette(start=0.25, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Fat'],nutrients['Carbs'], ax=axes[0,1])\naxes[0,1].set(xlim=(-10, 50), ylim=(-30, 70), title = 'Carbs and Fat')\n\ncmap = sns.cubehelix_palette(start=0.33, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Carbs'],nutrients['Fiber'], ax=axes[0,2])\naxes[0,2].set(xlim=(-10, 50), ylim=(-30, 70), title = 'Carbs and Fat')\n\ncmap = sns.cubehelix_palette(start=0.45, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Fiber'],nutrients['Fat'], ax=axes[1,0])\naxes[1,0].set(xlim=(-10, 50), ylim=(-30, 70), title = 'Fiber and Fat')\n\ncmap = sns.cubehelix_palette(start=0.56, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Fat'],nutrients['Sat.Fat'], ax=axes[1,1])\naxes[1,1].set(xlim=(-10, 50), ylim=(-30, 70), title = 'Sat. Fat and Fat')\n\ncmap = sns.cubehelix_palette(start=0.68, light=1, as_cmap=True)\n\nsns.kdeplot(nutrients['Carbs'],nutrients['Calories'], ax=axes[1,2])\naxes[1,2].set(xlim=(-10, 100), ylim=(-30, 70), title = 'Calories and Carbs')\n\nf.tight_layout()\n","9de4a48c":"\nalls=['Vegetables A-E',\n 'Vegetables F-P',\n 'Vegetables R-Z','Breads cereals fastfoodgrains','Seeds and Nuts']\n\nprot= nutrients[nutrients['Category'].isin(alls)]\n\nprotein_rich= prot.sort_values(by='Protein', ascending= False)\ntop_20=protein_rich.head(20)\nfig = px.bar(top_20, x='Food', y='Protein', color='Protein', title=' Top 10 protein rich foods')\nfig.show()","6788f16c":"cals= nutrients.sort_values(by='Calories', ascending= False)\ntop_20_cals=cals.head(20)\nfig = px.bar(top_20, x='Food', y='Calories' , color='Calories',title=' Top 10 calorie rich foods')\nfig.show()","1c3d032b":"fats= nutrients.sort_values(by='Fat', ascending= False)\ntop_20_fat=fats.head(20)\nfig = px.bar(top_20_fat, x='Food', y='Calories', color='Calories', title=' Fat Content and Calories')\nfig.show()","4d5d8f80":"category_dist=nutrients.groupby(['Category']).sum()\ncategory_dist","6aadd172":"category_dist=nutrients.groupby(['Category']).sum()\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(\n    rows=2, cols=3,\n    specs=[[{\"type\": \"domain\"},{\"type\": \"domain\"},{\"type\": \"domain\"}],[{\"type\": \"domain\"},{\"type\": \"domain\"},{\"type\": \"domain\"}]])\n\nfig.add_trace(go.Pie(values=category_dist['Calories'].values, title='CALORIES', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=1, col=1)\n\nfig.add_trace(go.Pie(values=category_dist['Fat'].values,title='FAT', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=1, col=2)\n\nfig.add_trace(go.Pie(values=category_dist['Protein'].values,title='PROTEIN', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=1, col=3)\n\nfig.add_trace(go.Pie(values=category_dist['Fiber'].values,title='FIBER', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=2, col=1)\n\nfig.add_trace(go.Pie(values=category_dist['Sat.Fat'].values,title='SAT.FAT', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=2, col=2)\n\nfig.add_trace(go.Pie(values=category_dist['Carbs'].values,title='CARBS', labels=category_dist.index,marker=dict(colors=['#100b','#f00560'], line=dict(color='#FFFFFF', width=2.5))),\n              row=2, col=3)\nfig.update_layout(title_text=\"Category wise distribution of all metrics\",height=700, width=1000)\n\nfig.show()","86e2e65b":"drinks= nutrients[nutrients['Category'].isin(['Fish Seafood','Desserts sweets'])]\ndrinks_top=drinks.sort_values(by='Calories', ascending= False)\ndrinks_top=drinks_top.head(10)\n\nfig = go.Figure(go.Funnelarea(values=drinks_top['Calories'].values, text=drinks_top['Food'],\n                              title = { \"text\": \"Desserts with high calorie percentages\"},\n               marker = {\"colors\": [\"deepskyblue\", \"lightsalmon\", \"tan\", \"teal\", \"silver\",\"deepskyblue\", \"lightsalmon\", \"tan\", \"teal\", \"silver\"],\n                \"line\": {\"color\": [\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\",\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\"]}}))\n\n\n\nfig.show()","3641c7fb":"drinks_fatty=drinks.sort_values(by='Fat', ascending= False)\ndrinks_fatty=drinks_fatty.head(10)\n\nfig = go.Figure(go.Funnelarea(values=drinks_fatty['Fat'].values, text=drinks_fatty['Food'],\n                              title = { \"text\": \"Desserts with high fat percentage\"},\n               marker = {\"colors\": [\"blue\", \"purple\", \"pink\", \"teal\", \"silver\",\"yellow\", \"lightsalmon\", \"tan\", \"teal\", \"silver\"],\n                \"line\": {\"color\": [\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\",\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\"]}}))\nfig.show()","19f32b75":"meat= nutrients[nutrients['Category'].isin(['Fish Seafood','Meat Poultry'])]\nmeats_top=drinks.sort_values(by='Protein', ascending= False)\nmeats_top=meats_top.head(10)\n\nfig = go.Figure(go.Pie(values=meats_top['Protein'].values, text=meats_top['Food'],\n                              title = { \"text\": \"Desserts with high calorie percentages\"},\n               marker = {\"colors\": [\"maroon\", \"salmon\", \"tan\", \"gold\", \"silver\",\"deepskyblue\", \"lightsalmon\", \"tan\", \"teal\", \"silver\"],\n                \"line\": {\"color\": [\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\",\"wheat\", \"wheat\", \"blue\", \"wheat\", \"wheat\"]}}))\nfig.show()","e8628d27":"top_10_fattest= meat.sort_values(by='Fat', ascending=False)\ntop_10_fattest=top_10_fattest.head(10)\nfig = go.Figure(data=[go.Scatter(\n    x=top_10_fattest['Food'], y=top_10_fattest['Fat'],\n    mode='markers',\n    marker_size=[200,180,160,140,120, 100 ,80 , 60 ,40,20])\n])\nfig.update_layout(title='Meat\/Seafood with high Fat Content')\nfig.show()","5abbead8":"top_10_fibrous= meat.sort_values(by='Fiber', ascending=False)\ntop_10_fibrous=top_10_fibrous.head(10)\ntop_10_fibrous","a4350797":"trace1 = go.Scatter3d(\n    x=nutrients['Category'].values,\n    y=nutrients['Food'].values,\n    z=nutrients['Fat'].values,\n    text=nutrients['Food'].values,\n    mode='markers',\n    marker=dict(\n        sizemode='diameter',\n         sizeref=750,\n        color = nutrients['Fat'].values,\n        colorscale = 'Portland',\n        colorbar = dict(title = 'Total Fat (% Daily Value)'),\n        line=dict(color='rgb(255, 255, 255)')\n    )\n)\ndata=[trace1]\nlayout=dict(height=800, width=800, title='3D Scatter Plot of Fatty foods (% Daily Value)')\nfig=dict(data=data, layout=layout)\npy.iplot(fig, filename='3DBubble')","068ca8ae":"trace1 = go.Scatter3d(\n    x=nutrients['Category'].values,\n    y=nutrients['Food'].values,\n    z=nutrients['Carbs'].values,\n    text=nutrients['Food'].values,\n    mode='markers',\n    marker=dict(\n        sizemode='diameter',\n         sizeref=750,\n        color = nutrients['Carbs'].values,\n        colorscale = 'Portland',\n        colorbar = dict(title = 'Total Fat (% Daily Value)'),\n        line=dict(color='rgb(255, 255, 255)')\n    )\n)\ndata=[trace1]\nlayout=dict(height=800, width=800, title='3D Scatter Plot of Carbohydrate rich food')\nfig=dict(data=data, layout=layout)\npy.iplot(fig, filename='3DBubble')","9b34e60c":"sns.set_style(\"whitegrid\")\nplt.figure(figsize=(22,10))\n#plt.figure()\n\nax = sns.boxenplot(x=\"Category\", y='Calories', data=nutrients, color='#eeeeee', palette=\"tab10\")\n\n# Add transparency to colors\nfor patch in ax.artists:\n    r, g, b, a = patch.get_facecolor()\n    patch.set_facecolor((r, g, b, .9))\n    \n#ax = sns.stripplot(x='Category', y='Cholesterol (% Daily Value)', data=menu, color=\"orange\", jitter=0.5, size=5,alpha=0.15)\n#\nplt.title(\"Total Calorie Content \\n\", loc=\"center\",size=32,color='#be0c0c',alpha=0.6)\nplt.xlabel('Category',color='#34495E',fontsize=20) \nplt.ylabel('Total Fat (% Daily Value)',color='#34495E',fontsize=20)\nplt.xticks(size=16,color='#008abc',rotation=90, wrap=True)  \nplt.yticks(size=15,color='#006600')\n#plt.text(2.5, 1, 'Courtesy: https:\/\/seaborn.pydata.org\/examples\/grouped_boxplot.html', fontsize=13,alpha=0.2)\n#plt.ylim(0,200)\n#plt.legend(loc=\"upper right\",fontsize=14,ncol=5,title='Category',title_fontsize=22,framealpha=0.99)\nplt.show()\n","f1b4d165":"Since it is clear that meat\/ seafood have an abundance of protein, let us find the protein rich foods.","e77c263f":"## Analyzing meat, poultry , seafood.","fad41f98":"So, pudding has the most amount of calories followed by chocolate fudge.","b9c04c32":"Bacon, Halibut, Turkey and veal top the charts in terms of Fiber content.","d30186e7":"## Lastly, let us find the meat with most fiber","966181e7":"## Introducing 3D Scatter Plots\n\n3D scatter plots are used to plot data points on three axes in the attempt to show the relationship between three variables. Each row in the data table is represented by a marker whose position depends on its values in the columns set on the X, Y, and Z axes. Basically, Plotting some data on the z-axis of a normal x-y scatter plot like the previous figure.\n\nThey are interesting and though may not provide much inferences, are visually appealing to look at.","66713292":"So, only have high protein as well as high fat percentage. Pork sausages are the second highest followed by Roast beef. Also, no type of fish is present in the top 10 fattiest meats list. So, fishes tend to have less fat, I suppose.","85d79b77":"What is the most protein rich food in the category of vegetables and grains?","1781f282":"Therefore, Oysters and Butter have the largest combination of calories and fats, followed by lard.","3a156d38":"## Food and Nutrition\n\n![Nutrition Image](https:\/\/images.unsplash.com\/photo-1498837167922-ddd27525d352?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80)\n\n\nFood and nutrition are the way that we get fuel, providing energy for our bodies. We need to replace nutrients in our bodies with a new supply every day. Water is an important component of nutrition. Fats, proteins, and carbohydrates are all required.Nutrition is the science that interprets the nutrients and other substances in food in relation to maintenance, growth, reproduction, health and disease of an organism. It includes ingestion, absorption, assimilation, biosynthesis, catabolism and excretion.\n\n\nKnowing and eating mindfully is not only essential for a healthy gut but also for peace of mind. Also,A diet filled with vegetables, fruits and whole grains could help prevent major conditions such as stroke, diabetes and heart disease.More often than not, we like to gorge on our favourite foods which are not exactly the best for our bodies.While it is okay for such binges to occur occasionally, such diets can be extremely harmful if the person does not strike a balance with healthy foods. \n\nThis notebook analyses the most common available foods and the nutritional facts in them.","eddb3889":"## Foods to stay away from:\n\nWhat food has the most calories?","cffe0178":"Nice, all our data is in desired datatypes.\n\n## Quick last checks on data quality","543a7f04":"## Seafood and meat always is known for having good fat content. Let's find out the fattiest of the fishes.\ud83d\udc1f","79e0125e":"## Analysing categories","be9046a6":"Let's start the analysis by plotting the features with one another. This will not only provide us the distribution of features with one another but also give a quick quantitative feel of the data.","346e3adb":"Now, we need to remove all the expressions like commas from the dataset so as to convert the numerical data to the respective integer or float variables.","4449cdb2":"Grouping the data into categories can give us the total count of all metrics and thus we can analyse the categories.","bf1a71b7":"## Let's dive into individual metrics","a503a2e2":"### Some inferences from the above pie charts:\n\n* It is clear that breads, grains and cereals have the highest amount of Carbs and Calories.\n\n* Largest percentage of protein is in seafood (God bless the vegetarians!)\n\n* Surprisingly, same amount of fiber content is present in Fats and Seafood.\n\n* Seeds and nuts have about 14% fat content.\n\n* Fruits do not have a large percentage in any of the categories except carbs, they have about 10% carbohydrates.\n\n* Dairy products (15%) have more saturated fat content than seafood (11.8%).","137e3ab2":"First things first, the **t's** in the data denote miniscule amounts so we might as well replace them by 0.","5b2713e1":"There's a null value in the fiber column, lets drop that row entirely.","83ccbfde":"Fortified milk has the most calories, followed by white bread. Also, notice how whole wheat has the most proteins but has almost equal amount of calories. Lard is fat source with most calories and 1\/2 cup of ice-creams tops the charts in the dessert category.","082f0432":"# Introduction","80c08d15":"Therefore, from the category of Grains, Vegetables and Seeds, whole wheat has the most protein content followed by white bread. Soybeans are also in the top 20s. Also, Almonds rank no. 1 in the Seeds category.\ud83c\udf31","436ebb00":"# Data Visualization and Analysis","8f398e48":"Pies and fudges have the highest percentage of fat as well.","b8eab01c":"This kernel is an exploration and amalgamation of different visualizations that can be done on csv files. The visuals are from plotly as well as matplotlib. In addition to that, it also has valuable insights on the quality of food we eat and nutrients that it carries. ","a5caba9e":"This notebook was an attempt to visualize data that is a part of every single person's life and analysing our basic needs in terms of nutrients. Upvote if you like it and share possible improvements in the comments.","7cc9f2de":"## Analyzing the Drinks, Alcohol, Beverages and Desserts","ce39c2ad":"Data cleaning is always the first step in any data science project. Although the data here seems clean, some minor alterations are required.","af206fbd":"Now, let us convert grams, calories, protein, fat, saturated fat, fiber and carbs datatypes to int.","a897ddec":"# Data Cleaning","36c41074":"Oysters have a large amount of proteins, after them the flatfish flounders have about 6.59% protein.","54250667":"## Food group with the most calorie content","f24429f2":"## Fat Content:\n\nNormally, fat sources are often looked down upon. But, a certain amount of fat is required for a healthy gut.\nLet's look at some fatty foods.\n\n"}}