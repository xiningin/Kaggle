{"cell_type":{"7e5bef2e":"code","99aeffce":"code","cb38d288":"code","80f75da9":"code","aba61e7f":"code","c5842adf":"code","b687710f":"code","17f616e5":"code","4628865b":"code","e8c738ea":"code","9b89e308":"code","9a74a5ae":"code","4e14b5ae":"code","23b600c6":"code","9ec7932d":"code","4fd102eb":"code","5c1db9dd":"code","b4adb297":"code","f678886b":"code","c74f9167":"code","8a81ee8d":"code","61f629cc":"code","2621f28f":"markdown","05a971a6":"markdown","121da009":"markdown","5864d86a":"markdown","581d3c2a":"markdown","f9577755":"markdown","0021ffb1":"markdown","d931bddc":"markdown","f34c33fe":"markdown","1dac9a99":"markdown","fb978616":"markdown","df60066f":"markdown","dae66081":"markdown","7996f5d1":"markdown","194f8583":"markdown","41a1fda0":"markdown","5c0e466f":"markdown","b6dc149f":"markdown","581e201b":"markdown","200ce0a3":"markdown"},"source":{"7e5bef2e":"#Getting all the packages we need: \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\n\nimport seaborn as sns #statist graph package\nimport matplotlib.pyplot as plt #plot package\nimport pandasql as ps #sql package\nimport wordcloud #will use for the word cloud plot\nfrom wordcloud import WordCloud, STOPWORDS # optional to filter out the stopwords\n\n#Optional helpful plot stypes:\nplt.style.use('bmh') #setting up 'bmh' as \"Bayesian Methods for Hackers\" style sheet\n#plt.style.use('ggplot') #R ggplot stype\n#print(plt.style.available) #pick another style\n","99aeffce":"df = pd.read_csv('\/kaggle\/input\/dataisbeautiful\/r_dataisbeautiful_posts.csv')\n","cb38d288":"df.sample(5)","80f75da9":"df.tail(5)","aba61e7f":"print(\"Data shape :\",df.shape)","c5842adf":"df.info()\ndf.describe()","b687710f":"#Empty values:\n\ndf.isnull().sum().sort_values(ascending = False)","17f616e5":"q1 = \"\"\"SELECT removed_by, count(distinct id)as number_of_removed_posts\nFROM df \nwhere removed_by is not null \ngroup by removed_by \norder by 2 desc \"\"\"\n\ngrouped_df = ps.sqldf(q1, locals())\ngrouped_df","4628865b":"#Visualizing bar chart based of SQL output:\n\nremoved_by = grouped_df['removed_by'].tolist()\nnumber_of_removed_posts = grouped_df['number_of_removed_posts'].tolist()\n\nplt.figure(figsize=(12,8))\nplt.ylabel(\"Number of deleted reddits\")\nplt.bar(removed_by, number_of_removed_posts)\n\nplt.show()","e8c738ea":"q2 = \"\"\"SELECT author, count(id) as number_of_removed_posts \nFROM df \nwhere removed_by = 'moderator' \ngroup by author \norder by 2 desc \nlimit 3\"\"\"\nprint(ps.sqldf(q2, locals()))","9b89e308":"#Step 1: Getting proportion of all removed posts \/ removed \"virus\" posts\nq3 = \"\"\"\nwith Virus as (\nSELECT id \nFROM df \nwhere removed_by = 'moderator' \nand title like '%virus%'\n)\n\nSELECT count(v.id) as virus_removed, count(d.id) as all_removed\nFROM df d \nleft join virus v on v.id = d.id \nwhere d.removed_by = 'moderator';\"\"\"\n\nremoved_moderator_df = ps.sqldf(q3, locals())\n\n#print(type(removed_moderator_df))\nprint(removed_moderator_df.values)\nprint(removed_moderator_df.values[0])","9a74a5ae":"#Step 2: getting % virus reddits from all removed posts:\n\nvirus_removed_id = removed_moderator_df.values[0][0]\nall_removed_id = removed_moderator_df.values[0][1]\n\n\nprint(virus_removed_id\/all_removed_id)","4e14b5ae":"#Top 10 reddits with the most number of comments:\n\nq4 = \"\"\"SELECT title, num_comments as number_of_comments \nFROM df  \nwhere title != 'data_irl'\norder by 2 desc \nlimit 10\"\"\"\nprint(ps.sqldf(q4, locals()))","23b600c6":"#To build a wordcloud, we have to remove NULL values first:\ndf[\"title\"] = df[\"title\"].fillna(value=\"\")","9ec7932d":"#Now let's add a string value instead to make our Series clean:\nword_string=\" \".join(df['title'].str.lower())\n\n#word_string","4fd102eb":"#And - plotting:\n\nplt.figure(figsize=(15,15))\nwc = WordCloud(background_color=\"purple\", stopwords = STOPWORDS, max_words=2000, max_font_size= 300,  width=1600, height=800)\nwc.generate(word_string)\n\nplt.imshow(wc.recolor( colormap= 'viridis' , random_state=17), interpolation=\"bilinear\")\nplt.axis('off')","5c1db9dd":"#Comments distribution plot:\n\nfig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"num_comments\"] < 25][\"num_comments\"], kde=False, rug=False, hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"num_comments\", ylabel=\"id\")\n\nplt.ylabel(\"Number of reddits\")\nplt.xlabel(\"Comments\")\n\nplt.show()","b4adb297":"df.corr()","f678886b":"h_labels = [x.replace('_', ' ').title() for x in \n            list(df.select_dtypes(include=['number', 'bool']).columns.values)]\n\nfig, ax = plt.subplots(figsize=(10,6))\n_ = sns.heatmap(df.corr(), annot=True, xticklabels=h_labels, yticklabels=h_labels, cmap=sns.cubehelix_palette(as_cmap=True), ax=ax)","c74f9167":"df.score.describe()","8a81ee8d":"df.score.median()","61f629cc":"#Score distribution: \n\nfig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"score\"] < 22][\"score\"], kde=False, hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"score\", ylabel=\"No. of reddits\")","2621f28f":"**Who are the top 3 users who had the most their posts removed by moderator?**\n","05a971a6":"## <a name=\"corr\"><\/a>Removed reddits deep dive","121da009":"## <a name=\"feel\"><\/a>Getting a feel of the dataset\nLet's run basic dataframe exploratory commands","5864d86a":">As we can see, the most deleted posts (68%) were removed by moderator. Less than 1% are deleted by authors.\n","581d3c2a":"## <a name=\"corr\"><\/a>The most popular reddits","f9577755":">As we can see, the most reddits have less than 5 comments. ","0021ffb1":"## <a name=\"corr\"><\/a>Score distribution\n","d931bddc":"Let's see who and why removes posts:","f34c33fe":"## <a name=\"corr\"><\/a>Comments distribution\n","1dac9a99":">Hornedviper is not a good user. ","fb978616":"## Introduction\n\nThis is a brief exploratory data analysis using Pandas for a given public sample of random Reddit posts.\nWe will get a feel of a dataset and try to answer the following questions: \n* What are the most popular reddits? Which topics are viral?\n* Which posts have been removed and why? \n* What % removed reddits are deleted by moderatos? \n* Who are the most popular authors? \n* Who are the biggest spammers at Reddit platform?\n","df60066f":"**Let's find out how many posts with \"virus\" keyword are removed by moderator.\n**","dae66081":"We note from the table above:\n- There are `173,611` entries in the dataset. Caveat, not all columns in the dataset are complete. \n- The average reddit score `196`. The median value for the score is `1`, which means that a half of reddits in our dataset have the score `0` or `1` and only less than 75% reddits have the score more than `5`\n- The most popular reddit has `18,801` comments, while the average is `25` and the median is `1`. ","7996f5d1":"We see that score and number of comments are highly positively correlated with a correlation value of 0.6. \n\nThere is some positive correlation of 0.2 between total awards received and score (0.2) and num_comments (0.1).\n\nNow let's visualize the correlation table above using a heatmap\n","194f8583":"> From all removed reddits by moderator, 12% posts contain the \"virus\" keyword.\n","41a1fda0":"## <a name=\"read\"><\/a>Reading the dataset\nAccessing Reddit dataset:","5c0e466f":"## <a name=\"corr\"><\/a>The most common words in reddits:\n\nLet's see the word map of the most commonly used words from reddit titles:","b6dc149f":">The average reddit has less than 25 comments. Let's see the comment distribution for those reddits who have <25 comments:","581e201b":"<p>&nbsp;<\/p>\n<img src=\"https:\/\/1000logos.net\/wp-content\/uploads\/2017\/05\/Reddit-logo.png\" width=400>\n<p>&nbsp;<\/p>","200ce0a3":"## <a name=\"corr\"><\/a>Correlation between dataset variables\n\nNow let's see how the dataset variables are correlated with each other:\n* How score and comments are correlated? \n* Do they increase and decrease together (positive correlation)? \n* Does one of them increase when the other decrease and vice versa (negative correlation)? Or are they not correlated?\n\nCorrelation is represented as a value between -1 and +1 where +1 denotes the highest positive correlation, -1 denotes the highest negative correlation, and 0 denotes that there is no correlation.\n\n* Let's see the correlation table between our dataset variables (numerical and boolean variables only)"}}