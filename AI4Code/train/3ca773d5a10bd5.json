{"cell_type":{"85dcf2de":"code","d195825a":"code","2d5c6c41":"code","8fac0b65":"code","18b70a65":"code","46845dd6":"code","7e397300":"code","cde2c7b0":"code","b3975f30":"code","20a2d5c9":"code","f16cdb54":"code","80db92b4":"code","88af6364":"code","0139f5f0":"code","84a3f1b0":"code","df05c78c":"code","88fda684":"markdown","fe6834f3":"markdown"},"source":{"85dcf2de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib_venn as venn\nfrom math import pi\nfrom pandas.tools.plotting import parallel_coordinates\nimport plotly.graph_objs as go\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d195825a":"diabets = pd.read_csv('..\/input\/diabetes.csv')","2d5c6c41":"diabets.info()","8fac0b65":" # library\nimport missingno as msno\ndictionary = {\"column1\" : [np.nan,2,5,4,5,78,7,8,11,10,11,12,29,14,15,26,17,18,145,20,],\n            \"column2\": [7,6,3,56,np.nan,np.nan,7,4,np.nan,10,np.nan,12,13,14,np.nan,16,np.nan,18,np.nan,20],\n            \"column3\" : [8,45,3,58,np.nan,6,89,8,25,10,45,12,13,np.nan,6,8,17,18,np.nan,20]}\nd_m = pd.DataFrame(dictionary)\nmsno.matrix(d_m)\nplt.show()\n# white space showed missing value, black space showed not missing value.\n","18b70a65":"#we can visialization missing value with bar plot.\nmsno.bar(d_m, color='maroon')\nplt.show()","46845dd6":"diabets.head()","7e397300":"data = diabets.drop(['Insulin','DiabetesPedigreeFunction','Pregnancies','BMI'],axis=1)\nplt.figure(figsize=(15,10))\nparallel_coordinates(data,'Outcome',colormap=plt.get_cmap(\"Set3\"))\nplt.title('Breast Cancer')\nplt.xlabel(\"Dataset Feature\")\nplt.ylabel(\"cm\")\nplt.show()\n# each color show different feature","cde2c7b0":"corr=diabets.corr()\ncorr","b3975f30":"import networkx as nx\nlinks = corr.stack().reset_index()\n#look corelation\nlinks.columns = ['var1', 'var2','value']\n#change column names\nthreshold = 0\n#determine threshold value\n#we will created filter\nlinks_filtered=links.loc[(links['value'] >=threshold) & (links['var1'] != links['var2'])]\n\n# visualization\nG=nx.from_pandas_edgelist(links_filtered, 'var1', 'var2')\nnx.draw_circular(G,with_labels=True,node_color = 'purple', node_size = 300, edge_color='pink',linewidths=1, font_size=10)","20a2d5c9":"diabets.head()","f16cdb54":"# Matplotlib Library (Venn)\nfrom matplotlib_venn import venn2\nglucose = data.iloc[:,1]\nbloodpressure = data.iloc[:,2]\nvenn2(subsets = (len(glucose)-50,len(bloodpressure)-50,50), set_labels=('glucose','blood_pressure'))\nplt.show()","80db92b4":"\nfeature_names='glucose','blood pressure'\nfeature_size = [len(glucose),len(bloodpressure)]\n# determine circle for donut.\n# coordinate: 0.0, radius = 0.5\ncircle = plt.Circle((0,0),0.5,color=\"white\")\nplt.pie(feature_size,labels = feature_names,colors=[\"brown\",\"green\"])\n# \u015fimdi olu\u015fturdu\u011fum circle \u0131 eklemem gerekiyor.\np = plt.gcf()\np.gca().add_artist(circle)\nplt.title(\"glucose and blood pressure\")\nplt.show()","88af6364":"# Seaborn Library (Cluster )\nx = dict(zip(('a','b','c','d','e'),(1,2,3,4,5)))\nx","0139f5f0":"df = data.loc[:,[\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Age\"]]\ndf1 = data.Outcome\nx = dict(zip(df1.unique(),\"rgb\"))\nrow_colors = df1.map(x)\ncg = sns.clustermap(df,row_colors=row_colors,figsize=(12, 12),metric=\"correlation\")\nplt.setp(cg.ax_heatmap.yaxis.get_majorticklabels(),rotation=0,size=8)\nplt.show()","84a3f1b0":"# Plotly(Inset Plot)\ntrace1 = go.Scatter(\n    x = df.Age,\n    y = df.BloodPressure,\n    name = \"blood pressure\",\n    xaxis ='x2',\n    yaxis ='y2',\n    mode = \"markers\",\n    marker = dict(color = 'rgba(0, 11, 20, 0.8)'),\n)\ntrace2 = go.Histogram(\n    x = df.Glucose,\n    name = \"Glucose\",\n    marker =dict(color='rgba(10, 20, 250, 0.6)'),\n    opacity = 0.75,\n)\n# sonra ikisini birle\u015ftirip datam\u0131 olu\u015fturuyorum.\ndata = [trace1,trace2]\nlayout = go.Layout(\n    xaxis2 = dict(domain = [0.7,1], anchor = 'y2'),\n    yaxis2 = dict(domain = [0.6,0.95], anchor = 'x2'),\n    title = 'Glucose and Blood pressure'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","df05c78c":"# Plotly Library (3D Scatter)\ndata = pd.read_csv('..\/input\/diabetes.csv')\ndiabets_zero = data[data.Outcome == 0]\ndiabets_one = data[data.Outcome == 1]\ntrace1 = go.Scatter3d(\n    x=diabets_zero.Age,\n    y=diabets_zero.Glucose,\n    z=diabets_zero.BloodPressure,\n    mode='markers',\n    name = \"outcome zero\",\n    marker=dict(\n        color='rgb(217, 100, 100)',\n        size=12,\n        line=dict(\n            color='rgb(255, 255, 255)',\n            width=0.1\n        )\n    )\n)\ntrace2 = go.Scatter3d(\n    x=diabets_one.Age,\n    y=diabets_one.Glucose,\n    z=diabets_one.BloodPressure,\n    mode='markers',\n    name = \"outcome one\",\n    marker=dict(\n        color='rgb(154, 17, 127)',\n        size=12,\n        line=dict(\n            color='rgb(24, 204, 204)',\n            width=0.1\n        )\n    )\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    title = ' 3D scatter',\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","88fda684":"# Missingno Library(matrix and box plot)\n\nThis tool used for missing data visualization.","fe6834f3":"# Pandas Library ( Parallel Plots)"}}