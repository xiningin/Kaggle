{"cell_type":{"e9a5f51e":"code","7c71d92a":"code","e3914224":"code","f7bf21ca":"code","fc799e85":"code","772addd1":"code","0ab77831":"code","227040b9":"code","f0b6ea28":"code","063ce984":"code","2f01863d":"code","c253e171":"code","322e1afe":"code","e2706b38":"code","4ada957e":"code","57715c3d":"code","de72cf13":"code","cb61d1ee":"code","1db06f25":"code","46a7ff35":"code","6e0372a9":"code","41bc4e49":"code","bd320cf0":"code","d6ad4c34":"code","0d56b57f":"code","b836762f":"code","945de911":"code","7e63ffc9":"code","07a3746f":"code","97c0680c":"code","b561aff4":"code","a945f1ed":"code","8c697057":"code","5045018d":"code","2f2c0b45":"code","18eaaedc":"markdown","f8d6a9dc":"markdown","ac670c7e":"markdown","40c3a994":"markdown","3a89dac1":"markdown","143482e0":"markdown","4905458c":"markdown","e6a4a566":"markdown","55e6d89b":"markdown","cf18b9a5":"markdown","e5ac0897":"markdown","b97ed150":"markdown","d9c2d090":"markdown","d54e01e9":"markdown","12835532":"markdown","549dde17":"markdown","dd0ff264":"markdown","cae99936":"markdown","fa344f01":"markdown"},"source":{"e9a5f51e":"# importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nstyle.available\nimport seaborn as sns\n%matplotlib inline\nimport folium\nfrom sklearn.linear_model import LinearRegression, BayesianRidge\nfrom sklearn.model_selection import RandomizedSearchCV, train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\n\n# interactive visualization\nimport plotly.express as px\nimport plotly.graph_objs as go\n# import plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots","7c71d92a":"# read data from Johns Hopkins github repo\nconfirmed_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndeaths_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\nrecoveries_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","e3914224":"# shape of dataframe\nprint(confirmed_df.shape)\nprint(deaths_df.shape)\nprint(recoveries_df.shape)","f7bf21ca":"# first 5 rows\nconfirmed_df.head()","fc799e85":"# checking null values\nconfirmed_df.isna().sum()","772addd1":"# check all unique values\nconfirmed_df.nunique()","0ab77831":"# check all unique values\nrecoveries_df.nunique()","227040b9":"# value counts by country\nconfirmed_df['Country\/Region'].value_counts()","f0b6ea28":"col=confirmed_df.columns[-1]\n\nconfirmed_df.rename(columns = {'Province\/State' : 'Province', 'Country\/Region' : 'Country', col : 'Current'},inplace = True)\ndeaths_df.rename(columns = {'Province\/State' : 'Province', 'Country\/Region' : 'Country', col : 'Current'},inplace = True)\nrecoveries_df.rename(columns = {'Province\/State' : 'Province', 'Country\/Region' : 'Country', col : 'Current'},inplace = True)\nconfirmed_df.head(1)","063ce984":"# confirmed cases\nconfirm = pd.DataFrame(confirmed_df.groupby('Country').sum())\nconfirm.reset_index(inplace = True)\nconfirm.head(2)","2f01863d":"# drop Lat & Long columns as they do not give accurate results\ncol = confirm['Country']\nconfirm.drop(['Lat','Long'],axis=1,inplace=True)\nconfirm.head(2)","c253e171":"# deaths\ndeaths= pd.DataFrame(deaths_df.groupby('Country').sum())\ndeaths.reset_index(inplace = True)\n\n# drop Lat & Long columns as they do not give accurate results\ndeaths.drop(['Lat','Long'],axis=1,inplace=True)\ndeaths.head(2)","322e1afe":"# recovery\nrecovery= pd.DataFrame(recoveries_df.groupby('Country').sum())\nrecovery.reset_index(inplace = True)\n\n# drop Lat & Long columns as they do not give accurate results\nrecovery.drop(['Lat','Long'],axis=1,inplace=True)\nrecovery.head(2)","e2706b38":"# active cases dataframe\nactive= confirm.copy()\nfor i in active.columns[1:]:\n    active[i] =active[i] - recovery[i] - deaths[i]\nactive.head()","4ada957e":"print(\"Confirmed Cases :\" , confirm.iloc[:,-1].sum())\nprint(\"Recovered Cases :\" , recovery.iloc[:,-1].sum())\nprint(\"Deaths :\" , deaths.iloc[:,-1].sum())\nprint(\"Active Cases :\", active.iloc[:,-1].sum())","57715c3d":"confirm_data = confirm[['Country','Current']].sort_values('Current',ascending = False)\ndeaths_data = deaths[['Country','Current']].sort_values('Current',ascending = False)\nrecovery_data = recovery[['Country','Current']].sort_values('Current',ascending = False)\nactive_data = active[['Country','Current']].sort_values('Current',ascending = False)","de72cf13":"# Confirmed Cases\nsns.set(font_scale=1.5)\nplt.figure(figsize=(10,5))\nfig= sns.barplot(x='Current', y='Country', data=confirm_data[:10], orient='h',color='Blue')\nplt.title('Total Confirmed Cases Worldwide')\nfig.set(xlabel ='Number of Cases', ylabel ='Country')\nplt.show()\n\n# Recovery Cases\nplt.figure(figsize=(10,5))\nfig= sns.barplot(x='Current', y='Country', data=recovery_data[:10], orient='h',color='Green')\nplt.title('Total Recovered Cases Worldwide')\nfig.set(xlabel ='Number of Cases', ylabel ='Country')\nplt.show()\n\n# Death Cases\nplt.figure(figsize=(10,5))\nfig= sns.barplot(x='Current', y='Country', data=deaths_data[:10], orient='h',color='Red')\nplt.title('Total Deaths Worldwide')\nfig.set(xlabel ='Number of Cases', ylabel ='Country')\nplt.show()\n\n# Active Cases\nplt.figure(figsize=(10,5))\nfig= sns.barplot(x='Current', y='Country', data=active_data[:10], orient='h',color='Yellow')\nplt.title('Total Active Cases Worldwide')\nfig.set(xlabel ='Number of Cases', ylabel ='Country')\nplt.show()","cb61d1ee":"china_confirm = confirm[confirm.Country == 'China'].iloc[:,1:].sum().values.tolist()\nus_confirm = confirm[confirm.Country == 'US'].iloc[:,1:].sum().values.tolist()\nitaly_confirm = confirm[confirm.Country == 'Italy'].iloc[:,1:].sum().values.tolist()\nindia_confirm = confirm[confirm.Country == 'India'].iloc[:,1:].sum().values.tolist()\nrussia_confirm = confirm[confirm.Country == 'Russia'].iloc[:,1:].sum().values.tolist()\nbrazil_confirm = confirm[confirm.Country == 'Brazil'].iloc[:,1:].sum().values.tolist()\n\nchina_deaths = deaths[deaths.Country == 'China'].iloc[:,1:].sum().values.tolist()\nus_deaths = deaths[deaths.Country == 'US'].iloc[:,1:].sum().values.tolist()\nitaly_deaths = deaths[deaths.Country == 'Italy'].iloc[:,1:].sum().values.tolist()\nindia_deaths = deaths[deaths.Country == 'India'].iloc[:,1:].sum().values.tolist()\nrussia_deaths = deaths[deaths.Country == 'Russia'].iloc[:,1:].sum().values.tolist()\nbrazil_deaths = deaths[confirm.Country == 'Brazil'].iloc[:,1:].sum().values.tolist()\n\nchina_recovery = recovery[recovery.Country == 'China'].iloc[:,1:].sum().values.tolist()\nus_recovery = recovery[recovery.Country == 'US'].iloc[:,1:].sum().values.tolist()\nitaly_recovery = recovery[recovery.Country == 'Italy'].iloc[:,1:].sum().values.tolist()\nindia_recovery = recovery[recovery.Country == 'India'].iloc[:,1:].sum().values.tolist()\nrussia_recovery = recovery[recovery.Country == 'Russia'].iloc[:,1:].sum().values.tolist()\nbrazil_recovery = recovery[recovery.Country == 'Brazil'].iloc[:,1:].sum().values.tolist()","1db06f25":"# Confirmed Cases\nplt.figure(figsize=(16,9))\nplt.plot(china_confirm)\nplt.plot(italy_confirm)\nplt.plot(us_confirm)\nplt.plot(india_confirm)\nplt.plot(russia_confirm)\nplt.plot(brazil_confirm)\n\nplt.title('Confirmed Cases Countrywise', size=25)\nplt.xlabel('No. of Days from 1\/22\/2020', size=20)\nplt.ylabel('No. of Cases', size=20)\nplt.legend(['China', 'Italy','US','India','Russia','Brazil'])\nplt.show()\n\n# Recovered Cases\nplt.figure(figsize=(16, 9))\nplt.plot(china_recovery)\nplt.plot(italy_recovery)\nplt.plot(us_recovery)\nplt.plot(india_recovery)\nplt.plot(russia_recovery)\nplt.plot(brazil_recovery)\n\nplt.title('Recovered Cases Countrywise', size=25)\nplt.xlabel('No. of Days from 1\/22\/2020', size=20)\nplt.ylabel('No. of Cases', size=20)\nplt.legend(['China', 'Italy','US','India','Russia','Brazil'])\nplt.show()\n\n# Deaths\nplt.figure(figsize=(16, 9))\nplt.plot(china_deaths)\nplt.plot(italy_deaths)\nplt.plot(us_deaths)\nplt.plot(india_deaths)\nplt.plot(russia_deaths)\nplt.plot(brazil_deaths)\n\nplt.title('Deaths Countrywise', size=25)\nplt.xlabel('No. of Days 1\/22\/2020', size=20)\nplt.ylabel('No. of Cases', size=20)\nplt.legend(['China', 'Italy','US','India','Russia','Brazil'])\nplt.show()","46a7ff35":"confirm_date = confirm.iloc[:,1:].sum().values.tolist()\nrecovery_date = recovery.iloc[:,1:].sum().values.tolist()\ndeaths_date = deaths.iloc[:,1:].sum().values.tolist()\nactive_date = active.iloc[:,1:].sum().values.tolist()","6e0372a9":"plt.figure(figsize=(16,9))\nplt.plot(confirm_date,color='Blue')\nplt.plot(recovery_date,color='Green')\nplt.plot(deaths_date,color='Red')\nplt.plot(active_date,color='Yellow')\n\nplt.xlabel('No. of Days from 22\/1\/2020',size=25)\nplt.ylabel('No. of Cases',size=25)\nplt.title('Increase in number of Cases',size=25)\nplt.legend(['Confirmed','Recovery','Deaths','Active'])\nplt.show()","41bc4e49":"days = [ i for i in range(confirm.shape[1] - 1) ] \n\nplt.figure(figsize=(10,6))\nplt.bar(days,confirm_date,color='Blue')\nplt.title('Confirmed Cases Worldwide',size=20)\nplt.show()\n\nplt.figure(figsize=(10,6))\nplt.bar(days,recovery_date,color='Green')\nplt.title('Recovered Cases Worldwide',size=20)\nplt.show()\n\nplt.figure(figsize=(10,6))\nplt.bar(days,active_date,color='Yellow')\nplt.title('Active Cases Worldwide',size=20)\nplt.show()\n\nplt.figure(figsize=(10,6))\nplt.bar(days,deaths_date,color='Red')\nplt.title('Death Cases Worldwide',size=20)\nplt.show()","bd320cf0":"# Confirmed Cases\nfig = px.choropleth(confirm_data, locations=\"Country\", locationmode='country names', \n                  color=confirm_data['Current'], hover_name=\"Country\", \n                  title='Countries with Confirmed Cases',hover_data=['Current'], color_continuous_scale=\"blues\")\nfig.show()\n\n# Recovered Cases\nfig = px.choropleth(recovery_data, locations=\"Country\", locationmode='country names', \n                  color=recovery_data['Current'], hover_name=\"Country\", \n                  title='Countries with Recovered Cases',hover_data=['Current'], color_continuous_scale=\"emrld\")\nfig.show()\n\n# Death Cases\nfig = px.choropleth(deaths_data, locations=\"Country\", locationmode='country names', \n                  color=deaths_data['Current'], hover_name=\"Country\", \n                  title='Countries with Death Cases',hover_data=['Current'], color_continuous_scale=\"peach\")\nfig.show()\n\n# Active Cases\nfig = px.choropleth(active_data, locations=\"Country\", locationmode='country names', \n                  color=active_data['Current'], hover_name=\"Country\", \n                  title='Countries with Active Cases',hover_data=['Current'], color_continuous_scale=\"ylgn\")\nfig.show()\n","d6ad4c34":"total_confirm = np.array(confirm_date).reshape(-1,1)\ntotal_deaths = np.array(deaths_date).reshape(-1,1)\ntotal_recovery = np.array(recovery_date).reshape(-1,1)\ntotal_active = np.array(active_date).reshape(-1,1)\ndates = np.array([i for i in range(len(days))]).reshape(-1, 1)","0d56b57f":"# Visualization function\ndef linear_plot(x,y,reg,title):\n    plt.figure(figsize=(10,6)) \n    plt.scatter(x,y,color='red')\n    plt.plot(x,reg)\n    plt.title(title)","b836762f":"X_train_confirmed, X_test_confirmed, y_train_confirmed, y_test_confirmed = train_test_split(dates[50:], total_confirm[50:], test_size=0.14, shuffle=False) ","945de911":"reg = LinearRegression()\nreg.fit(X_train_confirmed, y_train_confirmed);","7e63ffc9":"# Plot training set\nlinear_plot(X_train_confirmed,y_train_confirmed,reg.predict(X_train_confirmed),'Predicting Confirmed Cases Worldwide (Training Set)')\n\n# Plot test set\nlinear_plot(X_test_confirmed,y_test_confirmed,reg.predict(X_test_confirmed),'Predicting Confirmed Cases Worldwide (Test Set)')\n","07a3746f":" # transform our data for polynomial regression\npoly = PolynomialFeatures(degree=5)\npoly_X_train_confirmed = poly.fit_transform(X_train_confirmed)\npoly_X_test_confirmed = poly.fit_transform(X_test_confirmed)","97c0680c":"# polynomial regression\npoly_reg = LinearRegression(normalize=True, fit_intercept=False)\npoly_reg.fit(poly_X_train_confirmed, y_train_confirmed)","b561aff4":"# Plot training set\nlinear_plot(X_train_confirmed,y_train_confirmed,poly_reg.predict(poly_X_train_confirmed),'Predicting Confirmed Cases Worldwide (Training Set)')\n\n# Plot test set\nlinear_plot(X_test_confirmed,y_test_confirmed,poly_reg.predict(poly_X_test_confirmed),'Predicting Confirmed Cases Worldwide (Test Set)')","a945f1ed":"# Plot total cases\nlinear_plot(dates,total_confirm,poly_reg.predict(poly.fit_transform(dates)),'Predicting Total Confirmed Cases Worldwide')","8c697057":"X_train_deaths, X_test_deaths, y_train_deaths, y_test_deaths = train_test_split(dates[60:], total_deaths[60:], test_size=0.14, shuffle=False) ","5045018d":" # transform our data for polynomial regression\npoly = PolynomialFeatures(degree=5)\npoly_X_train_deaths = poly.fit_transform(X_train_deaths)\npoly_X_test_deaths = poly.fit_transform(X_test_deaths)\n\n# polynomial regression\npoly_reg = LinearRegression(normalize=True, fit_intercept=False)\npoly_reg.fit(poly_X_train_deaths, y_train_deaths)","2f2c0b45":"# Plot training set\nlinear_plot(X_train_deaths,y_train_deaths,poly_reg.predict(poly_X_train_deaths),'Predicting Deaths Cases Worldwide (Training Set)')\n\n# Plot test set\nlinear_plot(X_test_deaths,y_test_deaths,poly_reg.predict(poly_X_test_deaths),'Predicting Deaths Cases Worldwide (Test Set)')\n\n# Plot total cases\nlinear_plot(dates,total_deaths,poly_reg.predict(poly.fit_transform(dates)),'Predicting Total Death Cases Worldwide')","18eaaedc":"### Observations :   \n* Although COVID-19originated from China, the number of cases are very less compared to other countries.\n* Number of cases and deaths in USA has been increasing exponentially.    \n* Initially the cases and deaths in Italy were increasing but currently the situation seems under control.     \n* Number of cases and deaths are comparatively less in India.","f8d6a9dc":"### 1) Total Cases till date","ac670c7e":"# Polynomial Linear Regression ","40c3a994":"### 3) Daily Cases for China, Italy, US, Russia, India, Brazil","3a89dac1":"# Global Analysis and Data Visualization of COVID-19","143482e0":"### 5) Global Cases Distribution :","4905458c":"# Cleaning :","e6a4a566":"The test set curve shows much better prediction.","55e6d89b":"### Observations :\n* A sharp rise in number of confirmed cases can be seen after 2 months of origin of coronavirus.   \n* The number of deaths are comparatively very less compared to the confirmed cases.    \n* The number of active cases are more compared to recovered cases.","cf18b9a5":"# Linear Regression :","e5ac0897":"### 2) Make new dataframe grouping by unique country","b97ed150":"### Confirmed Cases","d9c2d090":"# Analysis :","d54e01e9":"### Death Cases","12835532":"### 2) Top 10 countries","549dde17":"### 3) Create new dataframe for active cases","dd0ff264":"The test set predictions are not very accurate as training set predictions.      \nAs the total confirmed cases has a parabolic curve, trying polynomial linear regression.","cae99936":"### 1) Rename columns 'Province\/State' & 'Country\/Region' & change latest date to 'Current'.  ","fa344f01":"### 4) Increase in Cases Worldwide from 22\/1\/20"}}