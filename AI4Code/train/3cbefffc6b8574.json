{"cell_type":{"c6fd5eef":"code","e623924a":"code","46ffb288":"code","fd9a08de":"code","6e1784c3":"code","f86dcef2":"code","ef373438":"code","ba593e78":"code","c13a6d19":"code","f438f462":"markdown","826b42ce":"markdown","24824642":"markdown","5b49f11c":"markdown","c5c7c161":"markdown","abacb629":"markdown"},"source":{"c6fd5eef":"import pandas as pd  \n\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.corpus import stopwords\nfrom bs4 import BeautifulSoup   \nimport re \nimport nltk","e623924a":"train = pd.read_csv(\"..\/input\/word2vec-nlp-tutorial\/labeledTrainData.tsv.zip\", header=0, delimiter=\"\\t\", quoting=3)\ntest = pd.read_csv(\"..\/input\/word2vec-nlp-tutorial\/testData.tsv.zip\", header=0, delimiter=\"\\t\", quoting=3 )","46ffb288":"train","fd9a08de":"test","6e1784c3":"def review_to_words( raw_review ):\n    source_text = BeautifulSoup(raw_review).get_text()      \n    letters_only = re.sub(\"[^a-zA-Z]\", \" \", source_text) \n    words = letters_only.lower().split()                             \n    stops = set(stopwords.words(\"english\"))                  \n    meaningful_words = [w for w in words if not w in stops]   \n    \n    return(\" \".join(meaningful_words))  ","f86dcef2":"train_reviews_count = train[\"review\"].size\nclean_train_reviews = []\nfor i in range(0, train_reviews_count):\n    clean_train_reviews.append(review_to_words(train[\"review\"][i]))\n    \ntest_reviews_count = test[\"review\"].size\nclean_test_reviews = []\nfor i in range(0, test_reviews_count):\n    clean_test_reviews.append(review_to_words(test[\"review\"][i]))","ef373438":"vectorizer = CountVectorizer(analyzer = \"word\", \n                             tokenizer = None, \n                             preprocessor = None, \n                             stop_words = None, \n                             max_features = 20000) \n\ntrain_data_features = vectorizer.fit_transform(clean_train_reviews)\ntrain_data_features = train_data_features.toarray()\n\ntest_data_feature = vectorizer.transform(clean_test_reviews)\ntest_data_feature = test_data_feature.toarray()","ba593e78":"clf = RandomForestClassifier(n_estimators = 300)\nclf.fit(train_data_features, train.sentiment)","c13a6d19":"pred = clf.predict(test_data_feature)\n\noutput = pd.DataFrame(data={\"id\":test[\"id\"], \n                            \"sentiment\":pred})\n\noutput.to_csv(\"submission.csv\", index=False, quoting=3)","f438f462":"\u041e\u0447\u0438\u0441\u0442\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.","826b42ce":"\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430 (RandomForestClassifier) \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0440\u0430\u0432\u043d\u044b\u043c 300.","24824642":"\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","5b49f11c":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u0430\u0439\u043b.","c5c7c161":"\u041d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0435\u043a\u0441\u0442\u0430: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 html \u0442\u0435\u0433\u0438 \u0438 \u0437\u043d\u0430\u043a\u0438 \u043f\u0440\u0435\u043f\u0438\u043d\u0430\u043d\u0438\u044f, \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u043b\u043e\u0432\u0430, \u043d\u0435\u0432\u043b\u0438\u044f\u044e\u0449\u0438\u0435 \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435.","abacb629":"\u041f\u043e\u043b\u0443\u0447\u0438\u043c \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u0437 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445."}}