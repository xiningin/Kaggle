{"cell_type":{"53ec5ec8":"code","eb02d3da":"code","e8ffdfd7":"code","bbba697a":"code","de1318ec":"code","8fc03994":"code","be26ecc9":"code","2f2864b1":"code","81de223a":"code","8f560d9b":"code","3dd4fbed":"code","317b6ba3":"code","2fc80a7a":"code","e325e8fa":"code","9b12c0cc":"code","a49eed38":"code","11ee3780":"code","416b720c":"code","36704026":"code","50f1d872":"code","524af5b7":"code","ac69affe":"code","bc53390c":"code","e99f6e0f":"code","662feddd":"code","af18d110":"code","9e523be0":"code","78567723":"code","5adddc1f":"markdown","c3a9da6d":"markdown","b384a497":"markdown","c2671682":"markdown","f65b3dde":"markdown","572b6bb6":"markdown","cdde37bd":"markdown","f0acb165":"markdown","9010eef0":"markdown","318e4029":"markdown","94ebb263":"markdown","c0fbd1ac":"markdown","74619ff0":"markdown","be0e81fb":"markdown","3c94b328":"markdown","11372ed9":"markdown","dd8aa1e6":"markdown","6e8d1c6b":"markdown","29f09fe6":"markdown","f2aae399":"markdown"},"source":{"53ec5ec8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eb02d3da":"dataset = pd.read_csv(\"\/kaggle\/input\/startup-logistic-regression\/50_Startups.csv\")\ndataset.head()","e8ffdfd7":"dataset.isna().any()","bbba697a":"plt.figure(figsize=(10,8))\ng=sns.distplot(dataset['R&D Spend'],label='R&D Spend')\nplt.title('R&D Spend \\n Median:{0:.1f} \\n Mean:{1:.1f}'.format(dataset['R&D Spend'].median(),\n                                                                            dataset['R&D Spend'].mean()),size=25)\nl1=plt.axvline(dataset['R&D Spend'].median(),color='black',label='Median score')\nplt.legend()\nplt.show()\n","de1318ec":"g=sns.lmplot('R&D Spend','Profit',data=dataset,order=1,line_kws={'color':'red','linewidth':2.5},\n           height=5,aspect=2,scatter_kws={'s':50,'alpha':0.4})\nplt.title('R&D Spend Vs Profit',size=30)\n\nplt.axhline(0.8,color='black',alpha=0.2)\nplt.axvline(324,color='black',alpha=0.2)\nplt.xticks(np.arange(280,365,5))\nplt.show()","8fc03994":"plt.figure(figsize=(10,8))\ng=sns.distplot(dataset['Administration'],label='Administration')\nplt.title('Administration \\n Median:{0:.1f} \\n Mean:{1:.1f}'.format(dataset['Administration'].median(),\n                                                                            dataset['Administration'].mean()),size=25)\nl1=plt.axvline(dataset['Administration'].median(),color='black',label='Median score')\nplt.legend()\nplt.show()","be26ecc9":"g=sns.lmplot('Administration','Profit',data=dataset,order=1,line_kws={'color':'red','linewidth':2.5},\n           height=5,aspect=2,scatter_kws={'s':50,'alpha':0.4})\nplt.title('Administration Vs Profit',size=30)\n\nplt.axhline(0.8,color='black',alpha=0.2)\nplt.axvline(324,color='black',alpha=0.2)\nplt.xticks(np.arange(280,365,5))\nplt.show()","2f2864b1":"plt.figure(figsize=(10,8))\ng=sns.distplot(dataset['Marketing Spend'],label='Marketing Spend')\nplt.title('Marketing Spend \\n Median:{0:.1f} \\n Mean:{1:.1f}'.format(dataset['Marketing Spend'].median(),\n                                                                            dataset['Marketing Spend'].mean()),size=25)\nl1=plt.axvline(dataset['Marketing Spend'].median(),color='black',label='Median score')\nplt.legend()\nplt.show()","81de223a":"g=sns.lmplot('Marketing Spend','Profit',data=dataset,order=1,line_kws={'color':'red','linewidth':2.5},\n           height=5,aspect=2,scatter_kws={'s':50,'alpha':0.4})\nplt.title('Marketing Spend Vs Profit',size=30)\n\nplt.axhline(0.8,color='black',alpha=0.2)\nplt.axvline(324,color='black',alpha=0.2)\nplt.xticks(np.arange(280,365,5))\nplt.show()","8f560d9b":"x = dataset.drop('Profit',axis=1).values\nx","3dd4fbed":"y = dataset['Profit'].values\ny","317b6ba3":"from sklearn.preprocessing import LabelEncoder,OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\ntransformer = ColumnTransformer(\n    transformers = [\n        (\"asda\",\n        OneHotEncoder(),\n        [3]\n        )\n    ],\n    remainder = 'passthrough'\n)\n\nx = transformer.fit_transform(x)\n\nx","2fc80a7a":"x=x[:,1:]\nx","e325e8fa":"from sklearn.model_selection import train_test_split as tts\nx_train,x_test,y_train,y_test = tts(x,y,test_size=0.2,random_state=0)","9b12c0cc":"x_train","a49eed38":"y_train","11ee3780":"x_test","416b720c":"y_test","36704026":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x_train,y_train)\ny_pred = regressor.predict(x_test)\ny_pred","50f1d872":"y_test","524af5b7":" \nprint('Train Score: ', regressor.score(x_train, y_train))  \nprint('Test Score: ', regressor.score(x_test, y_test))  ","ac69affe":"x = np.append(arr = np.ones((50,1)).astype(int),values=x,axis=1)\nx","bc53390c":"import statsmodels.api as sm\ndef backwardElimination(x, sl):\n    numVars = len(x[0])\n    for i in range(0, numVars):\n        regressor_OLS = sm.OLS(y, x).fit()\n        maxVar = max(regressor_OLS.pvalues).astype(float)\n        if maxVar > sl:\n            for j in range(0, numVars - i):\n                if (regressor_OLS.pvalues[j].astype(float) == maxVar):\n                    x = np.delete(x, j, 1)\n    regressor_OLS.summary()\n    return x\n \nSL = 0.05\nX_opt = np.array(x[:, [0, 1, 2, 3, 4, 5]], dtype=float)\nX_Modeled = backwardElimination(X_opt, SL)","e99f6e0f":"X_Modeled","662feddd":"dataset","af18d110":"x_train,x_test,y_train,y_test = tts(X_Modeled[:,1:],y,test_size=0.2,random_state=0)","9e523be0":"regressor.fit(x_train,y_train)\ny_pred=regressor.predict(x_test)","78567723":"print('Train Score: ', regressor.score(x_train, y_train))  \nprint('Test Score: ', regressor.score(x_test, y_test)) ","5adddc1f":"## Data Visualization","c3a9da6d":"### R & B Spend","b384a497":"## adding the constand column ","c2671682":"## Testing new Score","f65b3dde":"## Comparing X_Modeled with our dataset we can find that there only exits the const and R&B spend that means that other independent variables are dummy","572b6bb6":"## Avoiding Dummy variable trap","cdde37bd":"## Automated backkward Elimination function","f0acb165":"## As the testing score is not colse enough we will use backward elimination algorithm","9010eef0":"## Split data into dependent and independent variables ","318e4029":"# Done! Have FUN!","94ebb263":"### Administration","c0fbd1ac":"## This time score is more accurate","74619ff0":"## Handle Dummy varibales","be0e81fb":"# Backward Elimination","3c94b328":"## Cheking the score ","11372ed9":"## Filtering Multiple Linear Regression to the training set","dd8aa1e6":"## Check Missing data","6e8d1c6b":"### Marketing Spend\t","29f09fe6":"## Split into train and test data","f2aae399":"## Load Dataset"}}