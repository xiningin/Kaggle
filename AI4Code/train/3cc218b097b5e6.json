{"cell_type":{"a80711e3":"code","b4fb069e":"code","f6053076":"code","12cf7e42":"code","5a5ab69f":"code","461a2c74":"code","22860bc3":"code","ff1a7fbf":"code","1d4976e3":"code","05bb79a3":"code","0e74463c":"code","ca4bdbe5":"code","f3b5514e":"code","1f7cb719":"code","c66fe2d2":"code","a643d2ef":"code","46c18aa6":"code","800c49e7":"code","8b111594":"code","27feec77":"code","8eb89d81":"code","750cb675":"code","44a06809":"code","cc667adc":"code","41e84b54":"code","c3494240":"code","81896f03":"code","b660c595":"code","8a414fea":"code","db3e1d0f":"code","cbdfbdc0":"code","fbb475f3":"code","46553668":"code","0d142cd0":"code","e3939d29":"code","98840963":"code","3c4fc611":"code","572c5ddd":"code","dcf7f091":"code","3abaf3fd":"code","5c7657a5":"code","28266de9":"code","c49e9228":"code","91c5ac60":"code","abb9f9de":"code","4e2453cc":"code","d9844c72":"code","4503b2a7":"code","e40890ef":"code","07fb441a":"code","91f58c41":"code","bf362777":"markdown","64939f57":"markdown","67ce3158":"markdown","7e243a6a":"markdown","85ebd60d":"markdown","b2763cfd":"markdown"},"source":{"a80711e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4fb069e":"pip install openpyxl\n","f6053076":"#importing files into pandas dataframes\n\nathletes_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\ncoaches_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\ngender_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nmedals_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')\nteams_df = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\n","12cf7e42":"athletes_df.head()","5a5ab69f":"coaches_df.head()","461a2c74":"gender_df.head()","22860bc3":"medals_df.head()","ff1a7fbf":"teams_df.head()","1d4976e3":"teams_df.info()","05bb79a3":"athletes_df.isnull().sum()","0e74463c":"gender_df.isnull().sum()","ca4bdbe5":"medals_df.shape","f3b5514e":"medals_df.info()","1f7cb719":" athletes_df.groupby('NOC').Discipline.count()\n","c66fe2d2":"gender_ratio = gender_df.Female\/gender_df.Male\n\nprint(gender_ratio)","a643d2ef":"arr = np.array(gender_ratio)\n\nfiltered_array = arr >= 1\n\nnewarr = arr[filtered_array]\n\nprint(newarr)","46c18aa6":"medals_df.rename(columns={'Team\/NOC':'NOC'}, inplace=True)\n","800c49e7":"medals_df.head()","8b111594":"gold = (medals_df.Gold\/medals_df.Total)*100\n\ngold.head()","27feec77":"import matplotlib.pyplot as plt\n\nmedals_df.plot(kind='scatter', x='Gold', y='Total')\nplt.show()","8eb89d81":"medals_df.corr()","750cb675":"medals_df.plot(kind=\"scatter\", x=\"Silver\",y=\"Total\")\nplt.show()","44a06809":"medals_df.Total.plot(kind='hist')","cc667adc":"medals_df.Gold.plot(kind=\"hist\")","41e84b54":"coaches_df.isnull().sum()","c3494240":"coaches_df.shape","81896f03":"coaches_df.tail()","b660c595":"coaches_df.dropna(inplace=True)","8a414fea":"coaches_df.reset_index(inplace=True)","db3e1d0f":"coaches_df.head()","cbdfbdc0":"x = teams_df.groupby('Discipline').NOC.count()","fbb475f3":"x = teams_df.groupby('Discipline').NOC.count()\nx.plot(kind='bar', color='red',title=\"Number of disciplines by coutries \",ylabel=\"count\")\nplt.show","46553668":"w = gender_df.groupby('Discipline').Female.sum()\nneww=w.sort_values(ascending=False).head()","0d142cd0":"neww=w.sort_values(ascending=False).head()\nneww.plot(kind='barh', color='pink' , title='top 5 disciplines with female candidates', xlabel='number of females', ylabel='Discipline')\nplt.show\n","e3939d29":"coachecount = coaches_df.groupby('NOC').Name.count()\n\nq = coachecount.sort_values(ascending=False).head()","98840963":"#top countries with number of coaches\n\nq = coachecount.sort_values(ascending=False).head()\nq.plot(kind='bar', color='blue', title='top 5 counties by coaches',figsize=(9,5))\nplt.show","3c4fc611":"newt=teams_df.groupby('NOC').Discipline.count().sort_values(ascending=False).head()","572c5ddd":"newt=teams_df.groupby('NOC').Discipline.count().sort_values(ascending=False).head()\nnewt.plot(kind='barh', color='green', title='top 5 teams by disciplines',xlabel='count',ylabel='countries',figsize=(12,4))\nplt.show\n","dcf7f091":"females =gender_df.Female.sum()\nmales = gender_df.Male.sum()\nprint(females)\nprint(males)\n","3abaf3fd":"piegender=pd.DataFrame({'genderparticipation':[5432,5884]},index=['females','males'])\nprint(piegender)\npiegender.plot(kind='pie',x=females, subplots=True)\nplt.show","5c7657a5":"numathe= athletes_df.groupby('NOC').Name.count().sort_values(ascending=False).head()\nnumathe.plot(kind='bar', title=\"Top 5 Number of athletes by country\", figsize=(8,6), xlabel=\"country\",\n            ylabel=\"number of atheletes\", color=\"green\")\nplt.show\n","28266de9":"medals_df.head()","c49e9228":"medals_df.describe()","91c5ac60":"total_gold= medals_df.Gold.sum()\npercentgold=medals_df.Gold.map(lambda g: (g\/total_gold)*100).head()\nprint(percentgold)","abb9f9de":"total_silver= medals_df.Silver.sum()\npercentsilver=medals_df.Silver.map(lambda s: (s\/total_silver)*100).head()\n\nprint(percentsilver)","4e2453cc":"total_bronze= medals_df.Bronze.sum()\npercentbronze=medals_df.Bronze.map(lambda s: (s\/total_bronze)*100).head()\nprint(percentbronze)","d9844c72":"medals_df.plot(kind=\"line\",x=\"NOC\", figsize=(15,6),title=\"Rankings of countries by medals\", xlabel=\"Country names\")\nplt.show","4503b2a7":"topcountry=medals_df.NOC.head()\npercentgold=np.array([medals_df.Gold.map(lambda g: (g\/total_gold)*100).head()])\narrg= percentgold.reshape(-1)\npercentsilver=np.array([medals_df.Silver.map(lambda s: (s\/total_silver)*100).head()])\narrs= percentsilver.reshape(-1)\npercentbronze=np.array([medals_df.Bronze.map(lambda s: (s\/total_bronze)*100).head()])\narrb= percentbronze.reshape(-1)\n\ndf=pd.DataFrame({'gold':arrg,'silver':arrs,'bronze':arrb}, index=topcountry)\nprint(df)\n\ndf.plot.bar(ylabel=\"%of medals out of total\", title=\"Top5 countries with highest medals\",\n                     figsize =(10,5))","e40890ef":"def totalmedalpercent(row):\n    row.Total = row.Total - medals_df.Total.mean()\n    return row\n\ndf=medals_df.apply(totalmedalpercent, axis=\"columns\").head()\n\ndf.plot(kind=\"bar\", x=\"NOC\", y=\"Total\", title=\"total medals above mean=11.61\", figsize=(10,5))\n\nplt.show","07fb441a":"ath= athletes_df.groupby('NOC').Name.count().head().sort_values(ascending=True).head()\natharr= np.array(ath)\nxpoints=np.array(ath.index)\n\nplt.bar(xpoints, atharr, width=0.2)\nplt.title(\"Countries with lowest number of athletes\", fontdict={'size':15,'color':\"red\"})\nplt.xlabel(\"Name of country\",fontdict={'size':10,'color':\"red\"})\nplt.ylabel(\"Number of athletes\",fontdict={'size':10,'color':\"red\"})\nplt.show()\n","91f58c41":"teams_df.groupby(['NOC','Discipline']).count().head(20).rename(columns={'Name':'Team'})","bf362777":"# Percentage of medals earned by top countries ","64939f57":"# Top five countries with most number of athletes in 2021 olympics","67ce3158":"# Countries with lowest number of of athletes participated in olympics","7e243a6a":"# Here's top countries earned medals above mean level of medals earned per country","85ebd60d":"# Rankings of countries and skewness of medal counts from top to bottom","b2763cfd":"# Countries participated in events grouped by country and discipline"}}