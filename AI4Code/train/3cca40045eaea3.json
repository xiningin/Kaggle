{"cell_type":{"baa42906":"code","afd4ad67":"code","5c886217":"code","43174473":"code","2c273568":"code","97e66625":"code","d9a85ae4":"code","9f80e13a":"code","ddfd6ea7":"code","c4c570f4":"code","19360530":"code","5caf8fea":"code","88b066bf":"code","e2b97242":"code","0f204ee0":"code","7504a864":"code","1c8b415d":"code","48df0279":"code","5ce160f6":"code","7b732d31":"code","4c877a7d":"code","2ce883ba":"code","69705cf2":"code","0c49ea6f":"code","41ae6bb1":"code","a81cb4b4":"code","ae6d85ec":"code","735ee11a":"code","9c30de0e":"code","115721c1":"code","a30e510f":"code","ea30b34e":"code","e0001114":"code","5556a961":"code","fc0f9199":"code","ba5495d3":"code","01485823":"code","b25d7a99":"code","09607cf2":"code","770fbd0f":"code","5d322f29":"code","1442f9e5":"code","a1b4e6c3":"code","63515290":"code","741f9cbc":"code","f7cdfea2":"code","99ce605d":"code","c51116d0":"code","818a6342":"code","1cbd4097":"code","6080a1b2":"code","43d7da01":"code","942502d7":"code","4e97efb5":"code","131582d4":"code","978f151c":"code","8f00ab2b":"code","d6243ba1":"code","fad4f86f":"code","60bbe443":"code","1c277f34":"code","1597197a":"code","a307f1c9":"code","c3c21621":"code","f3ba1820":"code","c08a5dd1":"code","5fc9883b":"code","ff663ade":"code","40ee958b":"code","1150dfb1":"code","ca7fbd3d":"code","cd86d220":"code","db8b3399":"code","68e3c073":"code","8db44814":"code","ec4463de":"code","eba331b3":"code","311d3b8c":"code","b5d5bf79":"code","00b1e438":"code","fcaf6548":"code","6efbbf28":"code","aa935ffb":"code","046abae7":"code","40efdb90":"code","6ef63270":"code","66bb8c52":"code","2d09267a":"code","95db78fa":"code","25c0bde5":"code","a6dc1ad7":"code","29f4c561":"code","67b9d99a":"code","bc5f2747":"code","e7856007":"code","ad76372d":"code","aab82469":"code","4b0de10e":"code","b5a89b9b":"code","10287e21":"code","5dae02d8":"code","cb262010":"code","6bc8645e":"code","d4aefe00":"code","b860b139":"code","d66b1541":"code","3878a4cd":"code","00a75e91":"code","8896d159":"code","ac3b02e6":"markdown","b8781299":"markdown","bc64ee4d":"markdown","b03f4f75":"markdown","4c6dd2bd":"markdown","874ccb54":"markdown","f401b190":"markdown","e84a8f01":"markdown"},"source":{"baa42906":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","afd4ad67":"unique_category = pd.read_csv('\/kaggle\/input\/summer-products-and-sales-in-ecommerce-wish\/unique-categories.csv')\nunique_category_sort = pd.read_csv('\/kaggle\/input\/summer-products-and-sales-in-ecommerce-wish\/unique-categories.sorted-by-count.csv')\nsummer_products = pd.read_csv('\/kaggle\/input\/summer-products-and-sales-in-ecommerce-wish\/summer-products-with-rating-and-performance_2020-08.csv')","5c886217":"pd.set_option('display.max_rows',None)\npd.set_option('display.max_columns',None)","43174473":"summer_products.head()","2c273568":"summer_products.shape","97e66625":"summer_products.isnull().sum()","d9a85ae4":"summer_products.drop(['title','title_orig','shipping_option_name','urgency_text','merchant_info_subtitle','merchant_id','merchant_has_profile_picture','merchant_profile_picture','product_url','product_picture','product_id'],axis=1,inplace=True)","9f80e13a":"summer_products.shape","ddfd6ea7":"summer_products.isnull().sum()","c4c570f4":"summer_products.head()","19360530":"summer_products['crawl_month'].unique()","5caf8fea":"summer_products['currency_buyer'].value_counts()","88b066bf":"summer_products.drop(['crawl_month','currency_buyer'],axis=1,inplace=True)","e2b97242":"max_rating_count = max(summer_products['rating_count'])","0f204ee0":"summer_products['rating\/rating_count'] = (summer_products['rating']\/summer_products['rating_count'])*100","7504a864":"summer_products.drop(['rating','rating_count'],axis=1,inplace=True)","1c8b415d":"summer_products.drop('tags',axis=1,inplace=True)","48df0279":"summer_products['product_color'].value_counts()","5ce160f6":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()","7b732d31":"from sklearn.pipeline import Pipeline\n\nclass MultiColumnLabelEncoder:\n    def __init__(self,columns = None):\n        self.columns = columns # array of column names to encode\n\n    def fit(self,X,y=None):\n        return self # not relevant here\n\n    def transform(self,X):\n        '''\n        Transforms columns of X specified in self.columns using\n        LabelEncoder(). If no columns specified, transforms all\n        columns in X.\n        '''\n        output = X.copy()\n        if self.columns is not None:\n            for col in self.columns:\n                output[col] = LabelEncoder().fit_transform(output[col])\n        else:\n            for colname,col in output.iteritems():\n                output[colname] = LabelEncoder().fit_transform(col)\n        return output\n\n    def fit_transform(self,X,y=None):\n        return self.fit(X,y).transform(X)","4c877a7d":"summer_products['product_color'] = summer_products['product_color'].astype('str')","2ce883ba":"summer_products['product_variation_size_id'] = summer_products['product_variation_size_id'].astype('str')","69705cf2":"summer_products.drop('theme',axis=1,inplace=True)","0c49ea6f":"summer_products.drop('merchant_name',axis=1,inplace=True)","41ae6bb1":"summer_products.isnull().sum()","a81cb4b4":"summer_products['has_urgency_banner'] = summer_products['has_urgency_banner'].fillna(0)","ae6d85ec":"summer_products['origin_country'] = summer_products['origin_country'].fillna(summer_products['origin_country'].mode()[0])","735ee11a":"summer_products.shape","9c30de0e":"def replace_with_median(data,column_list):\n    for col in column_list:\n        data[col] = data[col].fillna(data[col].median())","115721c1":"column_list = [i for i in summer_products if summer_products[i].isnull().sum() != 0]","a30e510f":"column_list","ea30b34e":"replace_with_median(summer_products,column_list)","e0001114":"summer_products.head()","5556a961":"!nvidia-smi","fc0f9199":"summer_products_corr = summer_products.corr()","ba5495d3":"summer_products_corr['price']","01485823":"import matplotlib.pyplot as plt\nimport seaborn as sns","b25d7a99":"sns.jointplot(x='price',y='retail_price',data=summer_products,kind='scatter')","09607cf2":"summer_products.drop(summer_products[summer_products['retail_price'] > 200].index,inplace=True)","770fbd0f":"summer_products.drop(summer_products[summer_products['price'] > 30].index,inplace=True)","5d322f29":"summer_products['rating\/rating_count_of_merchant'] = (summer_products['merchant_rating']\/summer_products['merchant_rating_count'])*100","1442f9e5":"summer_products.drop(['merchant_rating','merchant_rating_count'],axis=1,inplace=True)","a1b4e6c3":"sns.jointplot(x='price',y='units_sold',data=summer_products,kind='scatter')","63515290":"from scipy import stats\nsns.distplot(summer_products['units_sold'],fit=stats.norm)","741f9cbc":"summer_products['units_sold'].skew()","f7cdfea2":"sns.boxplot(summer_products['units_sold'])","99ce605d":"sns.violinplot(summer_products['units_sold'])","c51116d0":"summer_products['units_sold'].unique()","818a6342":"bins = [0, 100, 1000, 5000, 10000, 50000, 100000,np.inf]\nlabels = [1,2,3,4,5,6,7]\nsummer_products['units_sold_binned'] = pd.cut(summer_products['units_sold'], bins=bins, labels=labels)","1cbd4097":"summer_products['units_sold_binned'] = summer_products['units_sold_binned'].astype('int')","6080a1b2":"summer_products.drop(['units_sold'],axis=1,inplace=True)","43d7da01":"summer_products.drop(column_list,axis=1,inplace=True)","942502d7":"summer_products['product_color'] = le.fit_transform(summer_products['product_color'])","4e97efb5":"summer_products['product_variation_size_id'] = le.fit_transform(summer_products['product_variation_size_id'])","131582d4":"summer_products.head()","978f151c":"summer_products_corr = summer_products.corr()\nsummer_products_corr['price']","8f00ab2b":"sns.jointplot(data=summer_products,x='price',y='badges_count')","d6243ba1":"sns.jointplot(data=summer_products,x='price',y='badge_local_product')","fad4f86f":"sns.jointplot(data=summer_products,x='price',y='badge_product_quality')","60bbe443":"sns.jointplot(data=summer_products,x='price',y='badge_fast_shipping')","1c277f34":"sns.jointplot(data=summer_products,x='price',y='shipping_is_express')","1597197a":"summer_products.drop(['badge_local_product','shipping_is_express'],axis=1,inplace=True)","a307f1c9":"summer_products['countries_shipped_to'].unique()","c3c21621":"expensive_country = summer_products.groupby('countries_shipped_to').agg({'price':'mean'})","f3ba1820":"expensive_country.sort_values(by='price',ascending=False,inplace=True)\nexpensive_country.head(10)","c08a5dd1":"expensive_country.tail(10)","5fc9883b":"summer_products['inventory_total'].unique()","ff663ade":"bins = [0, 10, 20, 30, 40, 50,np.inf]\nlabels = [1,2,3,4,5,6]\nsummer_products['inventory_total_binned'] = pd.cut(summer_products['inventory_total'], bins=bins, labels=labels)","40ee958b":"summer_products.drop('inventory_total',axis=1,inplace=True)\nsummer_products['inventory_total_binned'] = summer_products['inventory_total_binned'].astype('int')","1150dfb1":"summer_products['has_urgency_banner'].value_counts()","ca7fbd3d":"sns.jointplot(data=summer_products,x='price',y='has_urgency_banner')","cd86d220":"summer_products['origin_country'].unique()","db8b3399":"summer_products['origin_country'] = le.fit_transform(summer_products['origin_country'])","68e3c073":"summer_products.drop(['merchant_title'],axis=1,inplace=True)","8db44814":"summer_products.shape","ec4463de":"summer_products.head()","eba331b3":"features = summer_products.drop('price',axis=1)\nlabels = summer_products['price']","311d3b8c":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","b5d5bf79":"features.isnull().sum()","00b1e438":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor(n_estimators=100)","fcaf6548":"features.drop(['rating\/rating_count','rating\/rating_count_of_merchant'],axis=1,inplace=True)","6efbbf28":"rfr.fit(features,labels)","aa935ffb":"ranked_features=pd.Series(rfr.feature_importances_,index=features.columns)\nranked_features.nlargest(7).plot(kind='barh')\nplt.show()","046abae7":"ranked_features.sort_values(ascending=False)[:8]","40efdb90":"features = features[['shipping_option_price','retail_price','countries_shipped_to','product_color','product_variation_size_id','units_sold_binned','product_variation_inventory']]","6ef63270":"rfr_ = RandomForestRegressor()","66bb8c52":"from sklearn.model_selection import train_test_split,GridSearchCV,KFold,cross_val_score\nfrom sklearn import metrics","2d09267a":"X_train,X_test,y_train,y_test = train_test_split(features,labels,test_size=0.2,random_state=42)","95db78fa":"X_train.shape,X_test.shape","25c0bde5":"cross_score = cross_val_score(X=features,y=labels,estimator=rfr_,cv=3,verbose=10,n_jobs=-1,scoring='neg_root_mean_squared_error')","a6dc1ad7":"cross_score.mean()","29f4c561":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge","67b9d99a":"scaler = StandardScaler()","bc5f2747":"X_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","e7856007":"sns.distplot(summer_products['price'],fit=stats.norm)","ad76372d":"summer_products['price'].skew()","aab82469":"lr = LinearRegression(n_jobs=-1)","4b0de10e":"lr.fit(X_train_scaled,y_train)","b5a89b9b":"ypred_lr = lr.predict(X_test_scaled)","10287e21":"metrics.mean_absolute_error(y_test,ypred_lr)","5dae02d8":"lasso = Lasso()","cb262010":"lasso.fit(X_train_scaled,y_train)","6bc8645e":"ypred_lasso = lasso.predict(X_test_scaled)","d4aefe00":"metrics.mean_absolute_error(y_test,ypred_lasso)","b860b139":"metrics.r2_score(y_test,ypred_lr)","d66b1541":"rfr_.fit(X_train,y_train)","3878a4cd":"ypred_rfr_ = rfr_.predict(X_test)","00a75e91":"metrics.r2_score(y_test,ypred_rfr_) #best model","8896d159":"from xgboost import XGBRegressor\nreagressor=XGBRegressor()\nreagressor.fit(X_train,y_train)\nY_pred_xgb=reagressor.predict(X_test)\nfrom sklearn.metrics import r2_score\nr2_score(Y_pred_xgb,y_test)","ac3b02e6":"So from the graph we can see that as the price increases, retail price tend to increase a bit","b8781299":"So our best model is Random Forest and XGBoost Regressor","bc64ee4d":"Only around <10% of the values are having local_badge as 1.So drop it","b03f4f75":"Let's see the countries which are shipped to having highest price on summer clothes","4c6dd2bd":"From the boxplot and scatter plot between price and units_sold we can see that most of the values of units_sold are discrete which means we can divide those prices into bins and see the result.....Let's try","874ccb54":"It's a bit trend in the above graph that as the badges increases the price decreases and that's obivous","f401b190":"Skewness of the feature \"units_sold\" is much higher. We will try to remove the outliers and see what happens...","e84a8f01":"Here we get our features now. The most important feature is shipping option price."}}