{"cell_type":{"6c363fbe":"code","12ab38cb":"code","b438f2c1":"code","3cab7248":"code","8ae4949b":"code","93329ab4":"code","fc75405f":"code","706cce3c":"code","13dfce8d":"code","05f7e2a0":"code","b0f9dbac":"code","faa94f2d":"code","321646de":"code","1a33b3f2":"code","ca5dbf95":"code","1f3e3c82":"code","405073ef":"code","e63a59a0":"code","56723754":"code","8d743a89":"markdown","37974557":"markdown","3e9ce231":"markdown","f39e81be":"markdown","281b055b":"markdown","fb751b2d":"markdown","28aad6fd":"markdown","b75e7f3e":"markdown","6dbfd2d7":"markdown","84460502":"markdown","b17009e9":"markdown","f48c24c5":"markdown","6fb56453":"markdown","d221aee3":"markdown","e407c24b":"markdown","96ea07b9":"markdown","cddc4198":"markdown","21e8a528":"markdown","6b482360":"markdown","a7ca7db4":"markdown","565f6be5":"markdown","0d81d07a":"markdown","b8d0b261":"markdown","f92704a3":"markdown","90465091":"markdown","d6711ed9":"markdown","c150165e":"markdown","ab368224":"markdown","e877e1c5":"markdown"},"source":{"6c363fbe":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","12ab38cb":"import os\nprint(os.listdir('..\/input')) #checking input dataset","b438f2c1":"haberman_df = pd.read_csv('..\/input\/haberman.csv\/haberman.csv')\n","3cab7248":"haberman_df.head()","8ae4949b":"print (haberman_df.shape)   #shows datapoints and features                     \nprint (haberman_df.columns) #displays column names in our dataset","93329ab4":"haberman_df[\"status\"].value_counts()\n","fc75405f":"print(list(haberman_df['status'].unique())) # print the unique values of the target column(status)","706cce3c":"haberman_df['status'] = haberman_df['status'].map({1:'YES', 2:'NO'}) #mapping the value '1' to 'YES'and value '2' to 'NO'\nhaberman_df.head() #printing the first 5 records from the dataset.","13dfce8d":"one = haberman_df.loc[haberman_df[\"status\"] == \"YES\"]\ntwo = haberman_df.loc[haberman_df[\"status\"] == \"NO\"]\nplt.plot(one[\"age\"], np.zeros_like(one[\"age\"]), 'o',label='YES')\nplt.plot(two[\"age\"], np.zeros_like(two[\"age\"]), 'o',label='NO')\nplt.title(\"1-D scatter plot for age\")\nplt.xlabel(\"age\")\nplt.legend(title=\"survival_status\")\nplt.show()","05f7e2a0":"sns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman_df, hue=\"status\", height=6) \\\n   .map(plt.scatter, \"age\", \"nodes\") \\\n   .add_legend();\nplt.show();\n","b0f9dbac":"sns.set_style(\"whitegrid\")\nsns.pairplot(haberman_df, diag_kind=\"kde\", hue=\"status\", height=4)\nplt.show()\n","faa94f2d":"sns.FacetGrid(haberman_df, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"age\") \\\n   .add_legend();\nplt.title(\"PDF of age\")\nplt.show();","321646de":"sns.FacetGrid(haberman_df, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"year\") \\\n   .add_legend();\nplt.title(\"PDF of year\")\nplt.show();","1a33b3f2":"sns.FacetGrid(haberman_df, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"nodes\") \\\n   .add_legend();\nplt.title(\"PDF of nodes\")\nplt.show();","ca5dbf95":"# the patient survived 5 years or longer\ncounts, bin_edges = np.histogram(one['nodes'], bins=10, density = True)\npdf1 = counts\/(sum(counts))\nprint(pdf1);\nprint(bin_edges)\ncdf1 = np.cumsum(pdf1)\nplt.plot(bin_edges[1:],pdf1)\nplt.plot(bin_edges[1:], cdf1)\n \n# the patient dies within 5 years\ncounts, bin_edges = np.histogram(two['nodes'], bins=10, density = True)\npdf2 = counts\/(sum(counts))\nprint(pdf2)\nprint(bin_edges)\ncdf2 = np.cumsum(pdf2)\nplt.plot(bin_edges[1:],pdf2)\nplt.plot(bin_edges[1:], cdf2)\n\nlabel = [\"pdf of patient_survived\", \"cdf of patient_survived\", \"pdf of patient_died\", \"cdf of patient_died\"]\nplt.legend(label)\nplt.xlabel(\"positive_lymph_node\")\nplt.title(\"pdf and cdf for positive_lymph_node\")\nplt.show();","1f3e3c82":"# the patient survived 5 years or longer\ncounts, bin_edges = np.histogram(one['age'], bins=10, density = True)\npdf1 = counts\/(sum(counts))\nprint(pdf1);\nprint(bin_edges)\ncdf1 = np.cumsum(pdf1)\nplt.plot(bin_edges[1:],pdf1)\nplt.plot(bin_edges[1:], cdf1)\n \n# the patient dies within 5 years\ncounts, bin_edges = np.histogram(two['age'], bins=10, density = True)\npdf2 = counts\/(sum(counts))\nprint(pdf2)\nprint(bin_edges)\ncdf2 = np.cumsum(pdf2)\nplt.plot(bin_edges[1:],pdf2)\nplt.plot(bin_edges[1:], cdf2)\n\nlabel = [\"pdf of patient_survived\", \"cdf of patient_survived\", \"pdf of patient_died\", \"cdf of patient_died\"]\nplt.legend(label)\nplt.xlabel(\"age\")\nplt.title(\"pdf and cdf for age\")\nplt.show();","405073ef":"sns.boxplot(x='status',y='age', data=haberman_df)\nplt.title(\"Box_plot for age and survival status\")\nplt.show()\n\nsns.boxplot(x='status',y='year', data=haberman_df)\nplt.title(\"Box_plot for year and survival status\")\nplt.show()\n\nsns.boxplot(x='status',y='nodes', data=haberman_df)\nplt.title(\"Box_plot for nodes and survival status\")\nplt.show()","e63a59a0":"sns.violinplot(x=\"status\", y=\"age\", data=haberman_df, size=8)\nplt.title(\"Violin plot for age and survival status\")\nplt.show()\n\nsns.violinplot(x=\"status\", y=\"year\", data=haberman_df, size=8)\nplt.title(\"Violin plot for year and survival status\")\nplt.show()\n\nsns.violinplot(x=\"status\", y=\"nodes\", data=haberman_df, size=8)\nplt.title(\"Violin plot for nodes and survival status\")\nplt.show()","56723754":"sns.jointplot(x=\"age\", y=\"year\", data=haberman_df, kind=\"kde\");\nplt.show();","8d743a89":"## Attributes:\n\n1. age: Age of patient at time of operation (numerical)\n\n2. year: Patient's year of operation (year - 1900, numerical)\n\n3. nodes: Number of positive axillary nodes detected (numerical)\n\n4. status: Survival status (class attribute)\n\n    1= the patient survived 5 years or longer\n\n    2= the patient dies within 5 years","37974557":"**Observations**: \n\n1.   There are about 84% of patients_survived that has nodes<=4\n2.   About 56% of patients_died has nodes<=4.5\n\n","3e9ce231":"**Box_plots**","f39e81be":"**Contour Plot**","281b055b":"**Observations:**\n\n1.   More number of patients survived who had 0 to 1 positive axillary nodes. But there is a small frequency of patients who had no nodes died within 5 years of operation. Thus absence of positive axillary nodes doesn't necessarily guarantee survival.\n2.   There are more number of patients aged between 50-60 who survived. At the same time a large frequency of patients died lie in the age range of 45-55. Thus age is not an important feature to determine a persons survival chance.\n\n\n","fb751b2d":"**Pair Plots**","28aad6fd":"**Observation:**\n\n1.   The years 1960 to 1964 saw more operations done on patients aged between 45 and 55","b75e7f3e":"## Objective:\nGiven the age, year and nodes, classify\/predict a patient's survival who had undergone surgery for breast cancer.","6dbfd2d7":"## Details\nThe dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.","84460502":"**2-D Scatter Plot**","b17009e9":"**Observations:**\n1. Seperating the patients_survived from patients_died is harder as they have considerable overlap (they are not linearly separable).","f48c24c5":"## Univariant Analysis\n**PDF(Probability Density Function)**\n","6fb56453":"**Cumulative Distribution Function(CDF)**","d221aee3":"**Observation:**\n1. Since a lot of overlapping is seen here, we can't infer much from this 1-D scatter plot","e407c24b":"**Observations:** Here also major overlapping is seen. Also year of operation alone cannot be used as a parameter to determine the patient's survival chance.","96ea07b9":"There are two unique values, '1' and '2' in the status column. So the value '1' can be mapped to \u2018YES\u2019 which means the patient survived 5 years or longer and the value '2' can be mapped to \u2018NO\u2019 which means the patient died within 5 years.","cddc4198":"**Observations:**\n\n1.   Overlapping is observed. Hence difficult to classify two classes.\n2.   But vaguely we can say that patients with 0 or 1 node are more likely to survive.","21e8a528":"# Haberman's survival- EDA","6b482360":"**Observations:**\nThe PDF of Patients_age shows major overlapping. This tells us that the survival chance of a patient is irrespective of their age. But we can roughly tell that patient's in age group 30-40 are more likely to survive.","a7ca7db4":"## Scatter plots\n**1-D scatter plot**","565f6be5":"**Observations:**\n1.   20% of patients who survived had age<41\n\n","0d81d07a":"**Loading Dataset**","b8d0b261":"**Importing packages and libraries**","f92704a3":"**Observations:**\n\n\n1.   There are 306 datapoints and 4 features\n2.   Haberman dataset is an imbalanced dataset as the number of data points is different (\"the number of patients survived 5 years or longer\"= 225, \"the number of patient died within 5 years\"= 80\"\n3.   The datatype of survival_status is an integer, which is meaningless. It has to be converted to a categorical datatype","90465091":"The top 5 rows of data set can be seen by the head() function. ","d6711ed9":"**Understanding the data**","c150165e":"## Conclusions:\n\n1.   Haberman datset is not linearly separable since there is too much overlapping in datapoints. Hence difficult to classify classes.\n2.   The dataset is imbalanced as it contains unequal number of data-points for each class. Thus it is difficult to classify the survival chance of a patient based on given features.\n3.   The number of positive axillary nodes gave us some insight about the survival chance. Zero or less number of nodes in patients indicated more chance of survival. But still the absence of nodes cannot always guarantee survival.\n\n","ab368224":"**Observation:**\n\n\n1.   Not much informative, as there is too much of overlapping. Classification is not possible.\n2.   The plot between year and nodes is comparatively better.\n\n","e877e1c5":"**Violin Plots**"}}