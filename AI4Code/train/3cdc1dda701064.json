{"cell_type":{"f8f8bc87":"code","39370565":"code","86f8e52d":"code","dbbaab6d":"code","512d8b00":"code","ccde450c":"code","9241f6b6":"code","b0aa5a10":"code","266ac678":"code","89631fd4":"code","d6129552":"code","ec55ed3d":"code","b5455665":"code","d171bdc4":"code","39b5ca4b":"code","df2c602b":"code","a30c3a20":"code","f239cf1b":"code","9f8df27d":"code","c24a5286":"code","3c3fa966":"code","8fcd192b":"code","8727f2a2":"markdown"},"source":{"f8f8bc87":"# import all the lib\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","39370565":"# read the dataset using pandas\ndata = pd.read_csv('..\/input\/salary-dataset\/Salary_Data.csv')","86f8e52d":"# This displays the top 5 rows of the data\ndata.head()","dbbaab6d":"# Provides some information regarding the columns in the data\ndata.info()","512d8b00":"# this describes the basic stat behind the dataset used \ndata.describe()","ccde450c":"# These Plots help to explain the values and how they are scattered\n\nplt.figure(figsize=(12,6))\nsns.pairplot(data,x_vars=['YearsExperience'],y_vars=['Salary'],size=7,kind='scatter')\nplt.xlabel('Years')\nplt.ylabel('Salary')\nplt.title('Salary Prediction')\nplt.show()","9241f6b6":"# Cooking the data\nX = data['YearsExperience']\nX.head()","b0aa5a10":"# Cooking the data\ny = data['Salary']\ny.head()","266ac678":"# Import Segregating data from scikit learn\nfrom sklearn.model_selection import train_test_split","89631fd4":"# Split the data for train and test \nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,random_state=100)","d6129552":"# Create new axis for x column\nX_train = X_train[:,np.newaxis]\nX_test = X_test[:,np.newaxis]","ec55ed3d":"# Importing Linear Regression model from scikit learn\nfrom sklearn.linear_model import LinearRegression","b5455665":"# Fitting the model\nlr = LinearRegression()\nlr.fit(X_train,y_train)","d171bdc4":"# Predicting the Salary for the Test values\ny_pred = lr.predict(X_test)","39b5ca4b":"# Plotting the actual and predicted values\n\nc = [i for i in range (1,len(y_test)+1,1)]\nplt.plot(c,y_test,color='r',linestyle='-')\nplt.plot(c,y_pred,color='b',linestyle='-')\nplt.xlabel('Salary')\nplt.ylabel('index')\nplt.title('Prediction')\nplt.show()","df2c602b":"# plotting the error\nc = [i for i in range(1,len(y_test)+1,1)]\nplt.plot(c,y_test-y_pred,color='green',linestyle='-')\nplt.xlabel('index')\nplt.ylabel('Error')\nplt.title('Error Value')\nplt.show()","a30c3a20":"# Importing metrics for the evaluation of the model\nfrom sklearn.metrics import r2_score,mean_squared_error","f239cf1b":"# calculate Mean square error\nmse = mean_squared_error(y_test,y_pred)","9f8df27d":"# Calculate R square vale\nrsq = r2_score(y_test,y_pred)","c24a5286":"print('mean squared error :',mse)\nprint('r square :',rsq)","3c3fa966":"# Just plot actual and predicted values for more insights\nplt.figure(figsize=(12,6))\nplt.scatter(y_test,y_pred,color='r',linestyle='-')\nplt.show()","8fcd192b":"# Intecept and coeff of the line\nprint('Intercept of the model:',lr.intercept_)\nprint('Coefficient of the line:',lr.coef_)","8727f2a2":"![](http:\/\/)Then it is said to form a line with\n# y = 25202.8 + 9731.2x"}}