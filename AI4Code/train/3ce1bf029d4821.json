{"cell_type":{"2fe267ee":"code","4b905c65":"code","0d56cbc6":"code","92d0081f":"code","e1fbd7dd":"code","cbd572a2":"code","996e6491":"code","9be07d3c":"code","ca075b3f":"code","71fdebee":"code","c60ed666":"code","e80dee30":"code","e9908307":"code","1209ca9f":"code","8dbb528e":"code","52b9aba3":"code","f1ed3625":"code","1218c585":"markdown","df07022d":"markdown","d1c85bf4":"markdown","296dd982":"markdown","71690ae4":"markdown","43ef0d47":"markdown","0c274a0c":"markdown","6532196a":"markdown","02a5bd60":"markdown","dbc0f90b":"markdown","f5ca00a4":"markdown"},"source":{"2fe267ee":"#Imports\nimport numpy as np\nimport pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nimport plotly.plotly as ply\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\nimport warnings\nwarnings.filterwarnings('ignore')","4b905c65":"#Get the data filtered to last three years\ndfa = pd.read_csv('..\/input\/nypd-motor-vehicle-collisions.csv')\n\ndfa['DATE'] = pd.to_datetime(dfa['DATE'])\n\ncurrentyear = dt.datetime.now().year\ncollisionyear = pd.DatetimeIndex(dfa['DATE']).year\n\ndfa = dfa[pd.DatetimeIndex(dfa['DATE']).year > (currentyear - 4)]","0d56cbc6":"#Create dataframe of fields of interest\ndfa2 = dfa[['DATE','TIME','BOROUGH','ZIP CODE', \n            'NUMBER OF PERSONS KILLED', 'NUMBER OF PEDESTRIANS KILLED', 'NUMBER OF CYCLIST KILLED', 'NUMBER OF MOTORIST KILLED',\n           'NUMBER OF PERSONS INJURED', 'NUMBER OF PEDESTRIANS INJURED','NUMBER OF CYCLIST INJURED', 'NUMBER OF MOTORIST INJURED',\n           'CONTRIBUTING FACTOR VEHICLE 1','CONTRIBUTING FACTOR VEHICLE 2','LATITUDE','LONGITUDE']]\n\ndfa2.columns = ['date', 'time','borough','zipcode','persons_killed','pedestrians_killed', 'cyclists_killed', 'motorists_killed',\n                'persons_injured','pedestrians_injured', 'cyclists_injured', 'motorists_injured', 'vehicle1_reason',\n                'vehicle2_reason','latitude','longitude']\n\ndfa2.head(1)","92d0081f":"#Consolidate Injured and Killed\ndfa3 = dfa2[['date', 'time','borough','zipcode','vehicle1_reason','vehicle2_reason','latitude','longitude']]\n\ndfa3['killed'] = dfa2.persons_killed + dfa2.pedestrians_killed + dfa2.cyclists_killed + dfa2.motorists_killed \ndfa3['injured'] = dfa2.persons_injured + dfa2.pedestrians_injured + dfa2.cyclists_injured + dfa2.motorists_injured \n\ndfa3.head(1)","e1fbd7dd":"# Percentage of missing values in each column\ndf_missing = pd.DataFrame(dfa3.isnull().sum(), columns = ['Count Missing Values'])\ndf_missing['% Missing Values'] = dfa3.isnull().sum()\/len(dfa3)\n\ndf_missing","cbd572a2":"#When the borough is blank, replace with the text, \"unknown\"\nlistb = []\n\nfor i,v in enumerate(dfa3.borough):\n    if pd.isnull(v):\n        listb.append('UNKNOWN')\n    else:\n        listb.append(v)\n\ndfa3['borough'] = listb","996e6491":"#When the zipcode is blank, replace with the text, 99999\nlistb = []\n\nfor i,v in enumerate(dfa3.zipcode):\n    if pd.isnull(v):\n        listb.append(99999)\n    else:\n        listb.append(v)\n\ndfa3['zipcode'] = listb\n\ndfa3.head(1)","9be07d3c":"df_ah = dfa3[['date','time']]\ndf_ah = df_ah[df_ah.date.dt.year == currentyear]\n\ndf_ah['time'] = pd.to_datetime(df_ah['time'])\n\ndf_ah['hour'] = df_ah.time.dt.hour\n\ndf_hourcount = df_ah.groupby('hour').count()\n\nax = df_hourcount.plot(kind='bar', color='blue',figsize=(15,5),rot=0)\nax.set_ylabel('# of accidents', fontsize=12)\nax.set_title('# of Accidents per Hour this Year', fontsize=12)\n                          \nplt.show()","ca075b3f":"df_apdw = pd.DataFrame(dfa3.date)\n#df_apdw = df_apdw[pd.DatetimeIndex(df_apdw.date).year == currentyear]\ndf_apdw = df_apdw[df_apdw.date.dt.year == currentyear]\n\ndf_apdw['weekday'] = df_apdw.date.dt.dayofweek\n\ndf_weekdaycount = df_apdw.groupby('weekday').count()\n\nax = df_weekdaycount.plot(kind='bar', color='green',figsize=(8,5),rot=0)\nax.set_ylabel('# of accidents', fontsize=12)\nax.set_title('# of Accidents this Year by Day of Week')\n                          \nplt.show()","71fdebee":"dfrc = dfa3[['date','vehicle1_reason']]\ndfrc = dfrc[dfrc.date.dt.year == currentyear]\n\ndfrc_chart = dfrc.groupby('vehicle1_reason').count()\ndfrc_chart.columns = ['count']\n\ndfrc_chart = dfrc_chart.sort_values('count',ascending=False)\n\ndfrc_chart_top10 = dfrc_chart.head(10)\n\nax = dfrc_chart_top10.plot(kind='bar',color='red',figsize=(8,5),rot=90)\nax.set_xlabel('Collision Reason', fontsize=12)\nax.set_ylabel('Occurrences', fontsize=12)\nax.set_title('Top 10 Reasons for Collisions this Year',fontsize=12)\nplt.show()","c60ed666":"#Get the data\ndf_im = dfa3[['date','injured']]\n\ndf_im['year'] = df_im.date.dt.year\ndf_im['month'] = df_im.date.dt.month\n\ndf_im = df_im.drop(['date'], axis=1)\n\ndf_im.head(1)","e80dee30":"#Pivot the dataframe to get each year as a column\ndf_im2 = df_im.pivot_table(index='month', columns='year', values='injured', aggfunc='count')\n\ndf_im2.columns = ['threeyearsago','twoyearsago','lastyear','thisyear']","e9908307":"#Plot the collisions per month for each year\nplt.figure(figsize=(15,5))\nplt.title('Collisions per Month in Past Three Years')\nplt.xlabel('Month', fontsize=12)\nplt.ylabel('# of Collisions', fontsize=12)\n           \nax1 = df_im2.threeyearsago.plot(color='blue',kind='line', label='3 years ago')\nax2 = df_im2.twoyearsago.plot(color='red', kind='line', label='2 years ago')\nax3 = df_im2.lastyear.plot(color='green', kind='line', label='last year')\n\nplt.show()","1209ca9f":"#create dataframe of latitude and longitude\ndf_loc = dfa3[['date','latitude','longitude','injured']]\n\ndf_loc = df_loc[pd.DatetimeIndex(df_loc.date).year == currentyear]\n\ndf_loc = df_loc[df_loc.injured > 0]\n\ndf_loc.head(1)","8dbb528e":"#Access token from Plotly\nmapbox_access_token = 'pk.eyJ1Ijoia3Jwb3BraW4iLCJhIjoiY2pzcXN1eDBuMGZrNjQ5cnp1bzViZWJidiJ9.ReBalb28P1FCTWhmYBnCtA'\n\n#Prepare data for Plotly\ndata = [\n    go.Scattermapbox(\n        lat=df_loc.latitude,\n        lon=df_loc.longitude,\n        mode='markers',\n        text=df_loc.injured,\n        marker=dict(\n            size=7,\n            color=df_loc.injured,\n            colorscale='RdBu',\n            reversescale=True,\n            colorbar=dict(\n                title='Injured'\n            )\n        ),\n    )\n]","52b9aba3":"#Prepare layout for Plotly\nlayout = go.Layout(\n    autosize=True,\n    hovermode='closest',\n    title='NYPD Motor Vehicle Collisions in ' + str(currentyear),\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=40.721319,\n            lon=-73.987130\n        ),\n        pitch=0,\n        zoom=11\n    ),\n)","f1ed3625":"#Create map using Plotly\nfig = dict(data=data, layout=layout)\niplot(fig, filename='NYPD Collisions')","1218c585":"<div class=\"span5 alert alert-info\">\n<B>  Prep: <\/B> <a class=\"anchor\" id=\"prep\"><\/a>  \n<\/div>","df07022d":"<div class=\"span5 alert alert-success\">\n<I> Top 10 reasons for collisions this year <\/I>\n<\/div>","d1c85bf4":"<a class=\"anchor\" id=\"top-of-doc\"><\/a>\n## Table Of Contents: \n* [Prep](#prep)\n* [Structure and clean data](#eda)\n* [Visualize data](#machine-learning)\n","296dd982":"<div class=\"span5 alert alert-success\">\n<I> Year to date, Cumulative injuries by month for past three years, <\/I>\n<\/div>","71690ae4":"<div class=\"span5 alert alert-success\">\n<I> Accidents per day of week this year: <\/I>\n<\/div>","43ef0d47":"<div class=\"span5 alert alert-info\">\n<B>  Structure and clean data: <\/B> <a class=\"anchor\" id=\"eda\"><\/a>  \n<\/div>","0c274a0c":"<div class=\"span5 alert alert-success\">\n<I> Accidents per Hour for current year: <\/I>\n<\/div>","6532196a":"<div class=\"span5 alert alert-success\">\n<I> Location of people injured this year: <\/I>\n<\/div>","02a5bd60":"<div class=\"span5 alert alert-success\">\n<I> About prep: <\/I> This is preparation for exploratory data analysis on the NYPD Collisions dataset\n<\/div>","dbc0f90b":"<div class=\"span5 alert alert-success\">\n<I> Fields of Interest: <\/I> Of the 29 columns of data, the following are of interest for this dashboard... <br>\nDate, Time, Borough, Zip code, Number Injured, Number Killed, Contributing Factor Vehicle 1, Contributing Factor Vehicle 2\n<br>\n<\/div>","f5ca00a4":"<div class=\"span5 alert alert-info\">\n<B>  Visualize Data: <\/B> <a class=\"anchor\" id=\"machine-learning\"><\/a> \n \n<\/div>"}}