{"cell_type":{"dbda83d3":"code","a51dfb43":"code","0c314956":"code","47f7085f":"code","766316bc":"code","14c0b9e4":"code","f0d06fe4":"code","acc0b900":"code","ff7a3902":"code","824a8a02":"code","941d687a":"code","16da24d6":"code","9b0617b8":"code","9c62653f":"code","d42f3542":"markdown","cd0cd737":"markdown","711d4cdc":"markdown","88dea22f":"markdown","8afaa64a":"markdown","31685adb":"markdown","c4dc8371":"markdown","0cb6907c":"markdown","a12d0125":"markdown","8fbddeef":"markdown","e3c058d8":"markdown","2859420d":"markdown","3b05a59b":"markdown","628ca295":"markdown","437d7308":"markdown","fb6db19a":"markdown","c821fc1a":"markdown","c49030ab":"markdown","c70822cd":"markdown"},"source":{"dbda83d3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))\ndf = pd.read_csv('..\/input\/books.csv',error_bad_lines=False)\n","a51dfb43":"df.head(2)","0c314956":"df.shape #finding the number of rows and columns in the dataset","47f7085f":"df.drop(['bookID','isbn','isbn13'],axis = 1,inplace=True) # dropping unnecessary columns\ndf.head(2)","766316bc":"df.rename(columns={'# num_pages':'total_pages'},inplace=True) #renaming columns\ndf.head(2)","14c0b9e4":"ax =df.groupby('language_code')['title'].count().reset_index().sort_values('title',ascending=False).head(10).set_index('language_code').plot.bar(figsize=(14,8),rot=0)\nplt.title('language code',fontsize=20)\nplt.xticks(fontsize=15)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()),(p.get_x()+0.1,p.get_height()+100))","f0d06fe4":"df = df[(df.language_code =='eng')|(df.language_code =='eng-US')|(df.language_code =='eng-GB')] # selecting only English books\ndf.head(2)","acc0b900":"\nmost_rated = df.sort_values('ratings_count',ascending=False).head(10).set_index('title')\nplt.subplots(figsize=(12,8))\nax = most_rated['ratings_count'].sort_values().plot.barh(width=0.9,color=sns.color_palette('CMRmap',12))\nax.set_xlabel(\"Total ratings count \", fontsize=15)\nax.set_ylabel(\"Books\", fontsize=15)\nax.set_title(\"Top 10 most rated books\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+3, i.get_y()+.2,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","ff7a3902":"most_text_reviews = df.sort_values('text_reviews_count',ascending=False).head(10).set_index('title')\nplt.subplots(figsize=(12,8))\nax = most_text_reviews['text_reviews_count'].sort_values().plot.barh(width=0.9,color=sns.color_palette('gnuplot2',12))\nax.set_xlabel(\"Total text reviews count \", fontsize=15)\nax.set_ylabel(\"Books\", fontsize=15)\nax.set_title(\"Top 10 books with most text reviews\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+3, i.get_y()+.2,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","824a8a02":"high_average_rating =df[df['ratings_count'] > 1000]\nhigh_average_rating = high_average_rating.sort_values('average_rating',ascending=False).head(10).set_index('title')\nplt.subplots(figsize=(12,8))\nax = high_average_rating['average_rating'].sort_values().plot.barh(width=0.9,color=sns.color_palette('Spectral',12))\nax.set_xlabel(\"Average rating \", fontsize=15)\nax.set_ylabel(\"Books\", fontsize=15)\nax.set_title(\"Top 10 books with highest average rating\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+.05, i.get_y()+.2,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","941d687a":"author_of_most_books = df.groupby('authors')['title'].count().reset_index().sort_values('title',ascending=False).head(10).set_index('authors')\nplt.subplots(figsize=(12,8))\nax = author_of_most_books['title'].sort_values().plot.barh(width=0.9,color=sns.color_palette('gist_rainbow',12))\nax.set_xlabel(\"Total books \", fontsize=15)\nax.set_ylabel(\"Authors\", fontsize=15)\nax.set_title(\"Top 10 authors with most books\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+.2, i.get_y()+.2,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","16da24d6":"dist = df\ndist.average_rating = dist.average_rating.astype(float)\nfig, ax = plt.subplots(figsize=[14,8])\nsns.distplot(dist['average_rating'],ax=ax)\nax.set_title('Average rating distribution for all books',fontsize=20)\nax.set_xlabel('Average rating',fontsize=13)","9b0617b8":"\nmost_pages = df.sort_values('total_pages',ascending=False).head(10).set_index('title')\nplt.subplots(figsize=(12,8))\nax = most_pages['total_pages'].sort_values().plot.barh(width=0.9,color=sns.color_palette('Spectral',12))\nax.set_xlabel(\"Total pages \", fontsize=15)\nax.set_ylabel(\"Books\", fontsize=15)\nax.set_title(\"Top 10 books with most pages\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+.05, i.get_y()+.2,str(round(i.get_width())), fontsize=20,color='black')\nplt.show()","9c62653f":"highly_rated_author =df[df['average_rating']>4.4]\nhighly_rated_author = highly_rated_author.groupby('authors')['title'].count().reset_index().sort_values('title',ascending=False).head(10).set_index('authors')\nplt.subplots(figsize=(12,8))\nax = highly_rated_author['title'].sort_values().plot.barh(width=0.9,color=sns.color_palette('terrain',12))\nax.set_xlabel(\"Total books \", fontsize=15)\nax.set_ylabel(\"Authors\", fontsize=15)\nax.set_title(\"Top 10 highly rated authors\",fontsize=20,color='black')\ntotals = []\nfor i in ax.patches:\n    totals.append(i.get_width())\ntotal = sum(totals)\nfor i in ax.patches:\n    ax.text(i.get_width()+.2, i.get_y()+.2,str(round(i.get_width())), fontsize=15,color='black')\nplt.show()","d42f3542":"**Author of most books**","cd0cd737":"**Top 10 books with most text reviews**","711d4cdc":"**Average rating distribution of all books**","88dea22f":"**As we see that majority of the books are in English. So lets only concentrate on English books.**","8afaa64a":"**Top 10 books with most pages**","31685adb":"Now lets plot average rating of all books and see how it looks.","c4dc8371":"**Data Cleaning**","0cb6907c":"**Top 10 most rated books**","a12d0125":"**This is my first kaggle notebook.Hope it helped. Please leave your comments \/ suggestions below. Please upvote if you liked it.**","8fbddeef":"**As we see above, Harry Potter series dominates in the this list.**","e3c058d8":"**Let's find the number of books in all the different languages.**","2859420d":"**Agatha Christie leads this list with 65 books!!! People just love mystery and detective novels! Don't they!**","3b05a59b":"**As we can see overall average rating of all the books available is around 4.0. Not bad at all!**","628ca295":"**Twilight has got most number of text reviews. But The Alchemist is my favorite!!**","437d7308":"**Omg!! There is a book with more than 6500 pages! I wonder how many people have actually read the entire book!**","fb6db19a":"If you want to read a good book and wondering what to read, then this notebook is for you! Here i will be looking into various exciting things related to books. **Please upvote if you liked it.**\nThis notebook contains following things:\n* ** Data Pre-processing**\n* **Data Visualisation**\n1. Number of books in all the different languages\n1. Top 10 most rated books\n1. Top 10 books with most text reviews\n1. Top 10 books with highest average rating\n1. Author of most books\n1. Average rating distribution of all books\n1. Top 10 books with most pages\n1. Top 10 highly rated authors","c821fc1a":"**Data Visualisation**","c49030ab":"**Top 10 highly rated authors**","c70822cd":"**Top 10 books with highest average rating**"}}