{"cell_type":{"1442ce0e":"code","31e082c3":"code","41966453":"code","39a11631":"code","8526d83d":"code","7576f544":"code","394e4644":"code","04e76f12":"code","d7bdbc19":"code","d8b28331":"code","0c03ed4e":"code","9c970ab1":"code","03c98e04":"code","df803889":"code","585210fc":"code","064f9683":"code","34641315":"code","23062906":"code","48815624":"code","881ce6fd":"code","5e51d8e5":"code","e8c3e7d0":"code","741a4f05":"code","1beb7845":"code","083bce64":"code","462e32ec":"code","426254fd":"code","68f45158":"code","787770ad":"code","a3a06282":"code","10f4faf0":"code","1209b381":"code","75e20fe3":"code","33dc58d9":"code","edf5335e":"code","531744dc":"code","76fb8b49":"markdown","f47ce3e2":"markdown","c5a62439":"markdown","481145e8":"markdown","fe1ce68b":"markdown","e35341bc":"markdown","ea1dfd1c":"markdown","418635d7":"markdown","a13466dd":"markdown","3ca552b9":"markdown","91620902":"markdown","e5f335ae":"markdown","3c5220b8":"markdown","73328a40":"markdown","d6bb62e2":"markdown","b48cbf6a":"markdown","e3321418":"markdown","8778e554":"markdown","9b772ae1":"markdown","5900358f":"markdown"},"source":{"1442ce0e":"%%HTML\n<style type=\"text\/css\">\ndiv.h1 {\n    background-color:#eebbcb; \n    color: white; \n    padding: 8px; \n    padding-right: 300px; \n    font-size: 35px; \n    max-width: 1500px; \n    margin: auto; \n    margin-top: 50px;\n}\n\ndiv.h2 {\n    background-color:#2ca9e1; \n    color: white; \n    padding: 8px; \n    padding-right: 300px; \n    font-size: 35px; \n    max-width: 1500px; \n    margin: auto; \n    margin-top: 50px;\n}\n<\/style>","31e082c3":"from IPython.display import YouTubeVideo\nYouTubeVideo('UUqWQNGYGAA')","41966453":"from collections import Counter\n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \n\nimport warnings\nwarnings.filterwarnings('ignore')","39a11631":"!ls ..\/input\/nfl-big-data-bowl-2021","8526d83d":"df_games = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/games.csv\")\ndf_plays = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/plays.csv\")\ndf_players = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/players.csv\")\ndf_week1 = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/week1.csv\")","7576f544":"print(df_games.shape)\ndf_games.head()","394e4644":"df_games.info()","04e76f12":"print(df_players.shape)\ndf_players.head()","d7bdbc19":"df_players.info()","d8b28331":"print(df_plays.shape)\ndf_plays.head()","0c03ed4e":"df_plays.info()","9c970ab1":"print(df_week1.shape)\ndf_week1.head()","03c98e04":"df_week1.info()","df803889":"set(df_games[\"gameDate\"].map(lambda x: x[6:10] ))","585210fc":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\nc = Counter(df_games[\"homeTeamAbbr\"])\nax[0].pie(c.values(), labels=c.keys())\nax[0].set_title('homeTeamAbbr')\n\nc = Counter(df_games[\"visitorTeamAbbr\"])\nax[1].pie(c.values(), labels=c.keys())\nax[1].set_title('visitorTeamAbbr')","064f9683":"f,ax=plt.subplots(1,2,figsize=(13,5))\nsns.countplot(df_games[\"gameDate\"].map(lambda x: x[:2] ), ax=ax[0])\n\nax[0].set_xlabel(\"Month\") \nax[0].set_ylabel(\"Count\") \nax[0].set_title('The month the game hold')\n\nsns.countplot(df_games[\"week\"], ax=ax[1])\n\n\nax[1].set_xlabel(\"week\") \nax[1].set_ylabel(\"Count\") \nax[1].set_title('The week the game hold')\n\n\nplt.show()","34641315":"fig = plt.figure(figsize=(10, 5))\nax = plt.axes()\nsns.countplot(df_games[\"gameDate\"].map(lambda x: x[3:5]), ax=ax)\nax.set_title('The date the game hold')\nplt.show()","23062906":"fig = plt.figure(figsize=(5, 5))\nax = plt.axes()\nsns.countplot(df_games[\"gameTimeEastern\"].map(lambda x: x[:2] ), ax=ax)\nax.set_title('The Eastern time the game start')\nplt.show()","48815624":"dict_collegeName = Counter(df_players[\"collegeName\"])\ndf_collegeName = pd.DataFrame.from_dict(dict_collegeName, orient='index', \n                                        columns=[\"Number\"]).sort_values('Number', ascending=False)\ndf_collegeName.head(10)","881ce6fd":"# Inspired by https:\/\/www.kaggle.com\/fatihbilgin\/nfl-big-data-visualization\ndf_players[\"HeightFt\"] = df_players[\"height\"].str.split('-', expand=True)[0].astype(int)\ndf_players[\"HeightIn\"] = df_players[\"height\"].str.split('-', expand=True)[1].fillna(0).astype(int)\ndf_players[\"HeightCm\"] = df_players[\"HeightFt\"]*30.48 + df_players[\"HeightIn\"]*2.54\n\ndf_players[\"WeightKg\"] = df_players[\"weight\"]*0.45359237\n\ndf_height = df_players.groupby(['height','HeightFt','HeightIn']).size().reset_index().sort_values([\"HeightFt\", \"HeightIn\"])\n\ndf_height.columns = [\"height\",\"HeightFt\",\"HeightIn\",\"Count\"]","5e51d8e5":"f,ax=plt.subplots(1,2,figsize=(13,5))\ndf_height.loc[:,[\"height\",\"Count\"]].set_index(\"height\").plot(ax=ax[0],color='green', kind='bar')\n\nax[0].set_xlabel(\"Height\") \nax[0].set_ylabel(\"Count\") \nax[0].get_legend().remove()\nax[0].set_title('Player Height (ft-in)')\n\nsns.distplot(df_players[\"weight\"])\n\nax[1].set_xlabel(\"Weight\") \nax[1].set_title('Player Weight (lbs)')\n\nplt.show()","e8c3e7d0":"df_plays.head()","741a4f05":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\nsns.countplot(df_plays[\"quarter\"], ax=ax[0])\nax[0].set_title(\"o distribution\")\n\nsns.countplot(df_plays[\"down\"], ax=ax[1])\n\nplt.show()","1beb7845":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\ng1 = sns.countplot(df_plays[\"yardsToGo\"], ax=ax[0])\ng1.set_xticklabels(g1.get_xticklabels(),rotation=90)\n\ng2 = sns.countplot(df_plays[\"possessionTeam\"], ax=ax[1])\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.show()","083bce64":"f,ax=plt.subplots(1,2,figsize=(20,5))\n\ng1 = sns.countplot(df_plays[\"yardlineSide\"], ax=ax[0])\ng1.set_xticklabels(g1.get_xticklabels(),rotation=90)\n\ng2 = sns.countplot(df_plays[\"yardlineNumber\"], ax=ax[1])\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.show()","462e32ec":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\ng1 = sns.countplot(df_plays[\"offenseFormation\"], ax=ax[0])\ng1.set_xticklabels(g1.get_xticklabels(),rotation=90)\n\ng2 = sns.countplot(df_plays[\"defendersInTheBox\"], ax=ax[1])\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.show()","426254fd":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\ng1 = sns.countplot(df_plays[\"numberOfPassRushers\"], ax=ax[0])\ng1.set_xticklabels(g1.get_xticklabels(),rotation=90)\n\ng2 = sns.countplot(df_plays[\"typeDropback\"], ax=ax[1])\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.show()","68f45158":"f,ax=plt.subplots(1,2,figsize=(20,5))\n\ng1 = sns.countplot(df_plays[\"preSnapHomeScore\"], ax=ax[0])\ng1.set_xticklabels(g1.get_xticklabels(),rotation=90)\n\ng2 = sns.countplot(df_plays[\"preSnapVisitorScore\"], ax=ax[1])\ng2.set_xticklabels(g2.get_xticklabels(),rotation=90)\n\nplt.show()","787770ad":"fig = plt.figure(figsize=(10, 5))\nax = plt.axes()\nsns.countplot(df_plays[\"passResult\"])","a3a06282":"c = Counter(df_plays[\"offensePlayResult\"])\nfig = px.bar(df_plays, x=c.keys(), y=c.values(),labels = {\"x\":\"offensePlayResult\", \"y\":\"Count\"})\nfig.show()","10f4faf0":"c = Counter(df_plays[\"playResult\"])\nfig = px.bar(df_plays, x=c.keys(), y=c.values(),labels = {\"x\":\"playResult\", \"y\":\"Count\"})\nfig.show()","1209b381":"fig = px.scatter(x=df_week1[\"x\"], y=df_week1[\"y\"])\nfig.show()","75e20fe3":"f,ax=plt.subplots(1,3,figsize=(13,5))\nsns.distplot(df_week1[\"s\"], ax=ax[0])\n\nax[0].set_xlabel(\"Height\") \nax[0].set_ylabel(\"Count\") \nax[0].set_title('Player Height (ft-in)')\n\nsns.distplot(df_week1[\"a\"], ax=ax[1])\n\nax[1].set_xlabel(\"Weight\") \nax[1].set_title('Player Weight (lbs)')\n\nsns.distplot(df_week1[\"dis\"], ax=ax[2])\nax[2].set_xlabel(\"Weight\") \nax[2].set_title('Player Weight (lbs)')\n\nplt.show()","33dc58d9":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\nsns.distplot(df_week1[\"o\"], ax=ax[0])\nax[0].set_title(\"o distribution\")\n\nsns.distplot(df_week1[\"dir\"], ax=ax[1])\nax[1].set_xlabel(\"dir\") \nax[1].set_title('dir distribution')\n\n\nplt.show()","edf5335e":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\ng = sns.countplot(df_week1[\"event\"], ax=ax[0])\ng.set_xticklabels(g.get_xticklabels(),rotation=90)\n\nsns.countplot(df_week1[\"position\"], ax=ax[1])\nax[1].set_title(\"o distribution\")\n\nplt.show()","531744dc":"f,ax=plt.subplots(1,2,figsize=(13,5))\n\ng1 = sns.countplot(df_week1[\"playDirection\"], ax=ax[0])\n\ng2 = sns.countplot(df_week1[\"route\"], ax=ax[1])\nax[1].set_title(\"o distribution\")\ng2.set_xticklabels(g.get_xticklabels(),rotation=90)\n\nplt.show()","76fb8b49":"# Updating...\n\n## If you like, please Upvote\ud83d\ude39","f47ce3e2":"### Play data","c5a62439":"<a id=\"3\"><\/a> <br>\n# <div class=\"h2\">Data overview<\/div>\n\nLet's overview loaded data. Identify the columns and data types that exist to get a feel for the visualization.","481145e8":"Here, I'll load.","fe1ce68b":"### Play data\n\nThere are data for game play.","e35341bc":"## **Content**\n1. [Introduction](#1)\n1. [Libraries and dataset](#2)\n1. [Data overview](#3)\n1. [Visualization](#4)","ea1dfd1c":"### Player data\n\nThere are plyer's data in game.","418635d7":"### Game data\n\nThere are data for each game hold in 2018. ","a13466dd":"## Reference\n\n1. https:\/\/www.kaggle.com\/fatihbilgin\/nfl-big-data-visualization","3ca552b9":"### Tracking data\n\nEach of the 17 week[week].csv files contain player tracking data from all passing plays during Week [week] of the 2018 regular season. Nearly all plays from each [gameId] are included; certain plays or games with insufficient data are dropped. Each team and player plays no more than 1 game in a given week.\n\n![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F3258%2F820e86013d48faacf33b7a32a15e814c%2FIncreasing%20Dir%20and%20O.png?generation=1572285857588233&alt=media)","91620902":"### Player data","e5f335ae":"### Game data","3c5220b8":"### Tracking data","73328a40":"# <div class=\"h1\"> NFL Big Data Bowl","d6bb62e2":"<a id=\"2\"><\/a> <br>\n# <div class=\"h2\">Libraries and dataset<\/div>","b48cbf6a":"<a id=\"1\"><\/a> <br>\n# <div class=\"h2\">Introduction<\/div>\n\nIn this competition, our goal is to use data science to better understand the schemes and players that make for a successful defense against passing plays.\n\nIn American football, there are a plethora of defensive strategies and outcomes. The National Football League (NFL) has used previous competitions to focus on offensive plays.\n\nBut this year, we focun on defense.\n\nWe\u2019ll employ player tracking data for all drop-back pass plays from the **2018 regular season**. The goal of submissions is to identify unique and impactful approaches to measure defensive performance on these plays. ","e3321418":"### What is \"drop-back pass plays\"\n\n> A drop-back pass or dropping back to pass is a passing style employed in American football in which the quarterback initially takes a three-step drop, backpedaling into the pocket to make a pass. It is the most common way of passing the ball in gridiron football.Kinds include a three-step drop, a five-step drop, and a seven-step drop.\nhttps:\/\/en.wikipedia.org\/wiki\/Drop-back_pass","8778e554":"<a id=\"4\"><\/a> <br>\n# <div class=\"h2\">Visualization<\/div>\n\nI'll visualize 4 kind data. And check their trends and characteristics.","9b772ae1":"The 2021 Big Data Bowl data contains player tracking, play, game, and player level information for all possible passing plays during the 2018 regular season. \n\nThere are 4 kind of datas.\n\n- Game data\n\n- Player data\n\n- Play data\n\n- Tracking data","5900358f":"The year which game is hold is only 2018."}}