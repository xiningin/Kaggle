{"cell_type":{"c9568f77":"code","a22af51c":"code","296a6ad1":"code","f3a7c88f":"code","6c22f355":"code","8e7643f0":"code","a8399de5":"code","e2ca8d49":"code","f3455e54":"code","94e806ef":"code","d679fbc8":"code","6feabd48":"code","b818b32c":"code","45676894":"code","0fdf18c8":"code","da28b4a6":"code","738f3118":"code","b8e3404c":"code","51df767a":"code","451e9780":"code","9cb72f0e":"code","7732f65c":"code","761f52fe":"code","33f1c66e":"code","adf41de1":"code","79b457d9":"code","56a9d3b4":"code","0a4366e1":"code","57e62818":"markdown","66a163d6":"markdown","596a97d0":"markdown","e28c14cd":"markdown","50865461":"markdown","96ab6f57":"markdown","a1e578bd":"markdown","62669b94":"markdown","67253e14":"markdown","47ff3016":"markdown","ba46bed1":"markdown","5a816f72":"markdown","34a274c3":"markdown","bad71e24":"markdown","ddc5424f":"markdown"},"source":{"c9568f77":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRoVtDbEHRZT87BQEE1ZOFMtTFjzPy9FM2flAXK616QtzxSUqHj&usqp=CAU',width=400,height=400)","a22af51c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","296a6ad1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSzlOglfPd6vMn2Na45hnvsZENqhAnB7bHxtbsB4OoHToycMpcQ&usqp=CAU',width=400,height=400)","f3a7c88f":"df = pd.read_csv('..\/input\/trec-covid-information-retrieval\/topics-rnd3.csv', encoding='ISO-8859-2')\ndf.head()","6c22f355":"fig,ax = plt.subplots(1,1, figsize=(8,8))\ndegree = df.groupby(['topic-id', 'query']).size().unstack()#.fillna(0)\ndegree = degree.div(degree.sum(axis=1), axis=0)\nsns.heatmap(degree, cmap='viridis')","8e7643f0":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRCF3mA9DUiwQetDt7XHTFivmdly1woDMLsNYzgjUfGGIcAcK0V&usqp=CAU',width=400,height=400)","a8399de5":"from category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = ['query']\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndf_t = ohe.fit_transform(df[cols_selected+['topic-id']])\n\n#scaler = MaxAbsScaler()\nX = df_t.iloc[:,:-1]\ny = df_t.iloc[:, -1].fillna(df_t.iloc[:, -1].mean()) \/ df_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","e2ca8d49":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRPokyIGsHzP0Xx4a2VsCRnsJ1_5SXcM-Zfm0qiQh7WvEHn3KFe&usqp=CAU',width=400,height=400)","f3455e54":"df['topic-id'].hist(figsize=(10,5), bins=20)","94e806ef":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRZpieBNSe48nNKrJmlVdKqS1hjRH0tc1LEsZvNrs6iwH404UF2&usqp=CAU',width=400,height=400)","d679fbc8":"sns.countplot(df['topic-id'],linewidth=3,palette=\"Set2\",edgecolor='black')\nplt.show()","6feabd48":"sns.countplot(x=\"query\",data=df,palette=\"GnBu_d\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\n# changing the font size\nsns.set(font_scale=1)","b818b32c":"ax = df['query'].value_counts().plot.barh(figsize=(14, 6))\nax.set_title('Query Distribution', size=18)\nax.set_ylabel('Query', size=14)\nax.set_xlabel('', size=14)","45676894":"import matplotlib.ticker as ticker\nax = sns.distplot(df['topic-id'])\nplt.xticks(rotation=45)\nax.xaxis.set_major_locator(ticker.MultipleLocator(2))","0fdf18c8":"import warnings\nwarnings.filterwarnings(\"ignore\")\nsns.boxplot(x='topic-id', y='question', data=df, palette='rainbow')","da28b4a6":"fig = px.bar(df[['query','topic-id']].sort_values('topic-id', ascending=False), \n                        y = \"topic-id\", x= \"query\", color='topic-id', template='ggplot2')\nfig.update_xaxes(tickangle=45, tickfont=dict(family='Rockwell', color='crimson', size=14))\nfig.update_layout(title_text=\"TREC Covid-19 Information Retrieval\")\n\nfig.show()","738f3118":"fig = px.parallel_categories(df, color=\"topic-id\", color_continuous_scale=px.colors.sequential.Viridis)\nfig.show()","b8e3404c":"ace = pd.read_csv('..\/input\/cusersmarildownloadsangiotensincsv\/angiotensin.csv', sep=';')\nace","51df767a":"sns.countplot(ace['Genotyping'],linewidth=3,palette=\"Set2\",edgecolor='black')\nplt.show()","451e9780":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcScZPkwZI41pI2V3O14mHGkagR7K7GbdceJNl_xHV_sPL8qVzvw&usqp=CAU',width=400,height=400)","9cb72f0e":"sns.countplot(ace['End_point'],linewidth=3,palette=\"Set2\",edgecolor='black')\nplt.show()","7732f65c":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxITEBUTExASFhUWFRoaGBgWFRYbHhsWFRcWGh0WGRgdHikgGRolIhsWITElJikrLi4uGB8zODMuNygtLisBCgoKDg0OGxAQGy0lICYtLS0tLy0tLS0tLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAKgBLAMBEQACEQEDEQH\/xAAbAAEAAQUBAAAAAAAAAAAAAAAABQIDBAYHAf\/EAEEQAAEDAgMDCAcGBgICAwAAAAECAxEABAUSIQYxURMUIkFhcZLRBzJSU4GRsRYjQnKhwRUkM3Oy0mKCg6Lh8PH\/xAAbAQEAAwEBAQEAAAAAAAAAAAAAAQIDBAUGB\/\/EADcRAAIBAgQDBAoCAQQDAAAAAAABAgMRBBIhMQVBURMUYZEVIjJScYGhseHwBsHRIzNC8SSCov\/aAAwDAQACEQMRAD8A63zZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgHNm\/do8I8qAc2b92jwjyoBzZv3aPCPKgILHmEcoOgj1B+EcVUBsFAKAUAoBQCgFAKAUAoBQCgFAKAUAoBQCgFAKAUAoBQCgFAKAUAoBQCgFAKAUAoBQCgFAQWPf1B+QfVVATc0AmgFAJoBQCaATQCaATQCaATQCaAUAmgE0AoBQCgE0BSXADBIk9UiouiVFtXSKpqSBNAW330oSVLUlKRvKiAB8TUN21ZaMZTeWKuzy2ukOJzNrStJ60qBGnaKJp7E1Kc6css00\/EuzUlClLgJgEEjfBFRdEtNK7LDeINKcLYdbKxvQFpzaf8ZmozK9r6mjoVVDtHF5ettPMyZqxkUrcA3kDvNRexKi5bIqmpIE0AmgE0AmgE0AmgE0BBY8fvB+QfVVATk0BbfdyoUrgCfkKA5L6ML1+5xV91Tzqm0ocOUuLKZWsJQMsxuzfKt5pKCRlBts2H0w4qtmySltxaFOOAShRSYGp1GvVVKSvItN2RLejvMjCmFOuKUVJLhU4ok5VqKhKlHcExUVPadiY7Hr3pAwxK8hvETxCVqHiCSP1p2cugzxJheMW4Y5wXkcjE8oDKY4yKrZ3sTcYVjDFy2XWHUuIBIKhOhABIM9hHzo01uE09izhu0dpcOqaZuELcQCVJTMgAgE7tYJAqXFpXCaeh5cbSWiH0267hAeUQAjWSVGAN3XUZXa4utiVmoJIfarGRbWynPxHRA4qNZ1aipxcjswGEli68aUee\/guZyzDMTuUXLDjjzsLcSqCtUFBXB0mIOteXGdRSjKT3PvK+Gwk8PVpU4K8VbZb2vudfxfEkW7KnV7kjdxPUBXrTkopyZ+eYehOvUjThu3Y5vZrv8UcUQ8WmknWCQkTuSANVq7\/ANK85OriJaOyPs6kMBwemlKOeb62v+ETmBbOXtrdIPOStjXlOkd2UwMhJ1mNRW9OhUpzXrXR5eN4rg8Vh5Lsss+VrffTka6wq5vsQcbRdONiVGQpUBKNPVBHXHzrB56tZxUrHrQWHwHDadWpSUm7bpX113+Bs+E7H3Db6HF4g4tKFBRT0+lGsGVxHwrohhpxkm5nj4njeHq0pU4YdRbVr6afQ3Oa6z500K6wi3uMUC+fArSsHkgkz930soVMDdO7jXHOnGdZetquR9JhsXiMNw6SVH1ZX9a+mumxti8dtg6Wi+gOAElJO6ASZO7cCa6XUjmy31PEjg68qXaqLy7X+hj2m1Vm46GkXCSsmAIUATwCiIJ+NVVenJ5UzepwrGU6fazptL95bkH6U7vLaoR7a\/8AHWssZK1P4nd\/G6PaY1P3U3\/X9jZfHLS0smWnX0pWU5iIUSC4SoZoBjQjfVaNWnTppNmvEsDisbi6lSlBtJ28tNLm1XF02pgrDqQgoJCwdII9aa68yavyPAdKcZ9m1617W8TUNi8IYZL1y3dh8hBSYQUxPSMyekTA\/WuTDU4qTkpXPf4zja86UKFSlktrve9tNOhBbD3rSbx+5ecSlKUqgn2nFaAdZMA1hQku1lOTPV4rQqdxo4WlG7dtF4LX6s6NhOO29zPIuheXeIII7YIBiu+nVhU9lnyWKwGIwtu2ja5qm1eE291eoQu+CFaJ5LIVHXqBmAT21z16cZzScreB7HCcXXwmGnOFHMn\/AMr2tZHu2e2JZKW7V1BUNF6Zojq1qMTiMmkXqW4NwbvUnUxEXltdcrmz4DjDb7QyvIcWlCeUy6AKI1MdQkGuilUU1o7s8fHYOph5vNBxi28t+hj3e19k2rKq4TPXlClR3lINRLEU4uzZrR4Rja0c8Kbt5fck7G\/aeRnacStPFJ6+B4GtIzjJXizjr4erQlkqRafiYatpLQKWk3CJbEqEnQAgcNdSPnVXVgm1fY2WAxMoxmoO0tvEqttobVbJeS8nk0nKVKlMKEaagcRSNWDjmT0FXAYilVVGUHmey3Me02usnFhtFwnMTABChJOgAJEE1WOIpydkzarwfG0oZ5U3b5E3NbHmkFj39QfkH1VQE3NAQe219yNg+vrDZjvI0q0VdpESdlc4\/sNs\/iTrS3rF8NJKghR5QoKigSNyTIGb610TlFOzMIxlbQw9tLe\/Q6hi8uOWWRKBnKgCrQbwNTSDjuhJPZm2elfEVtNW+HtEhIbSFAfiygJSk9hP0rOkrtyZeb0SJXGthbK2wtZLYLqG5LpJzFcakcBO4VHaSciciSNe2KQpzA8QQZyhZy9ii2kqjh+E\/Gr1NJoiGsWY2y20PNcEuoMLXcFKO9bLQJ+GUmpnHNNIiMrRKPRko2uJqDvRItllU9UhtyD2wKVNY6CGkiT9Hlsq+xZ6+WDkaJUmfbWClA+Ccyu+KrP1YWEfWlc7DNYGxyfa7FkXd8lpTmRhtWUq\/wAlade8CvMxNRTqKF9EfccFwVTC4OWIUbzktF4cvPf4Fjbu8t3HGjbLSUobCYSCMuWABqOyq4qcJZcj2N+A4bE0u17xFrM7683rcnfSZflVvbgHRwBffKZFb4uf+kvE8n+OYdLHTv8A8U\/vb7GybD2obsGQPxJzk8Ssz9IHwrfDRSpI8vjdWVTHVL8nZfIkcZueTt3V8EH6Vs3ZXPNpwc5qC5tLzOVbH4ZeOqcdtnUtqEJUomJzawNDwH6V5OHhUm3KDsfoPFsTg8PCFHEQclyS8NOqOkbM2d22lfOnw6okZY1gAGdYGp\/avRoxqRvndz43iVfCVZR7tDKuf7dktcO5UKVwST8hWx5trnNvR0nlL5987koUfitQj9AqvOwvrVpSPs+Of6HDqNDrb6LX6kbh1hz7E3ElRCCVKWRvyJIEDvJSPjWeTtq7XI6u3XDuFU5WvLS3xd3f5FWPYY03ibTNukpGZsbyYJUNZOtK1OMasYx8BwzGVq3D6tXEO\/tW8iQ9KL5XctNJ1IG7tUdK0xzbcYnF\/FoKEateWysvLVlva3Zti0s296nioZlknU9YA3AVFahGnSvzNOF8VxGLx+VaQs9PDl8zNddLWAIBOqwY7luKI\/QitE3DDfvM5akI1+OWWyav\/wCqPMB+4wR1zrdUsj4QiP8A1PzqMP6lByJ4v\/5HFoUemVf2zD2A2XbfQt58EoBypTJAJABKjG+JAHxrPCUFNZpHd\/IOLVMPNUaLs7Xb5\/BFvYZATiqg36gDgP5R\/wDMUoJLENR21I4pUlU4PCdX2nlfz\/6Lmzv8xjSnOpKlq8Iyj9SKtH18S30\/oyrru3A4x5yt\/wDTv9jEx\/DmlYqlhtEJU4gKgnXMrpHU8JqmIgnWUV8zfhOKq0+Fzqzfs3UfCy0+pN7apasbfkbZHJl89MgknKnqkmf\/ANrfEKNGnaCtc83hDq8SxaliHmUFcv4NsjbJw\/O62FOLazlRnoyJSBwgR8amjhoZLyWplxPjWJeKlGjK0YuyS526kV6M3yg3RBORLQPxBMHviaxwLtKVtj0f5PFOlSbXrX\/r\/JH7H4IL65cU4TySTmWAYKionKmeoaE\/D41nRp9tUbex2cSxno3B04U161rLwstWSe32BlllpLDagwkqJAJVC1fiM61tiqLjBKC0PN4FxBVsVOeJl67SSei+RJbJv4bcqbCbVLb7YCgI3lEHMFD1oOuutWoSozsrWaMeK0eI4XNKVRyhLTfrya5fI3qa7j5cg8dP3g\/IPqqgJqaA0z0qMPu2XJMNLcKlpkIEwAZ1q9NpSuys720M70dYUu2w5ptxJS4Spa0neCtRIB7Yy0qO8hBWRpmLYFdXOPIcVbu8gh1slZHRytHPv7SI+NXjJKHiUlFuRk+lXZi5deburdBcygApTqQUmQQOulKSWjJqRb2MDGMQxfFG024sFMpJGdSgtCTHWSsCE9gk1KUIu9yrcpaWN5w3ZpNthirVHTUUKKlR67ihqY4bgOwCspSu7miVlY5fsdsXduXTSLi3dQwhfKLziASker2lUAdxNbymrNoyjB31MvbjZy9XiTqre3dUlwRmSNCFDKQVbgIqKco5dSZp30OobH4AmytEMCCr1nFD8Tiok9wgJHYkVjOWZ3NIqyse7V3LqLZXItrWtXRGUTE9dY1ZSjFuK1O7AUqVTERjVklHm39jXtj9jG+RK7tmXFq0SomUpHGDvJk90Vy0MMst6i1Pd4vxyfaqGEnaKW65v8GNtvsolKEG0tjMnMEAnSKjE4dZfUWpbgvGanbtYqp6tufUysU2eduMNtxlKXmkAZFaGEjLHZoBV5UZVKKXNHPQ4lTwnE6lVO8JN6rx1+5FYNi2J2zYYFopYE5czazlkzGYGCN9YU6lemsuU9PF4XhWLn27rWvvZrX5PW5MX7V+vDnQ8grdcXohIHRbgCIHxPXXQ1VdKWbdnkRlgIcQpdi7QjvJ82tf8ELs8\/iVo2pDdiSFKzEqQuZgCNCNNK5qTrUlZRPb4hHhuOqKpUr2sraNf4N62avbl1oquWQ0rMQlIBHRgakEnrmu6jKco3mrHynEaGGo1FHDzzK2r8SvaUr5o6G0qUspIATv1q9S+V2OfCqDrwU3ZXV\/hc1fYrC3mLO5UppaXF6JSRqUpTpp3qV8q5cJTlCLbWp738gxlLE16cack4rny1ev0KvRthDzRecebUgqCQnMIJ1JV8PVqMJSlFtyRf8AkONoVoUqVGSaXTyRi4ZhL7mLl9xlaW0qUrMoQNEkJg98U7OUsRma0LPGUKXB1RhJOb3XPV3YucJfexhLimVhpLiTmI0yo6Q179KVKcp107aIYTGUMPwmcFNZ5X0566fYv+kiyuHltIaZWsAEkpEiTpVsZCU0lFGP8cxFDDzqVKsktElf6\/Y924w1421swy0tYQkA5QT6qQKYmEuyUIocFxVFY6pXrSSve1\/F\/wCD3aPDXk4Zb27bS1KATnCRMGJO7tJpVhJUFCK6EYLFUZ8VliKkko3k035IibK6xK1YNqm1UQr1VBCiU59SJGnz3VjCVelHKonp4ilwvH1u8Sq2tur2vb4\/0TWyWzrlsw884kl9xBASNSkb4n2iYnuFb4ag4JyluzyuN8Tp4qUaFH2I\/wDXkkWvRvhDzbjzrzSkFQATmETJJVHyTVMJTlGUpSR0fyDG0KlKlRoyTS3t4JJERiNndsYmbhFstzpkphKlAgpKerdvrOrGpGtnSudeAr4Svwzu1Soovn13vz3JfbLB7m6t2XeTHKpT0209WbWBJ3itsRTnUpp8zzuEY7D4LGTjmvB6J\/DZ\/BkcvE8Set02ibNaSEhCl5VJlKRG8wB3zWXaVpRyKPzO94PhlOv3mVZNXzZdHrvy1JdjZ5dphryEArfdHSyCdepI4ga\/M1tToulSaW55mL4jDHY6nKWlNNb9L6tmR6OMKcYt3C6goUtzcoQcqUiP1KqYSm4ReZFv5FjaeJrxVKV0ly6\/tinFtob1l5aeYl1r8BSFfqQFT8hU1KtSEtI3RlguH4PE0U5Vsk9bp\/Tp9yN2N2efN4bt5rkUjMUo3ElaSn1eoAE741rKhRk6naSVj0OKcQoU8EsHSnnel34LX98DoM13nyZB46fvB+QfVVATVAJoBQCaATQCaAUAmgE0AoBNAKATQCgE0AmgE0AoBQCaATQCgE0AmgE0AmgE0AoBNAJoBQCaATQCgE0AmgFAQeOn7wfkH1VQE1QCgE0AmgFAKAUAoBQCaAUAoBQCgFAKAUAoBQCaAUAoBQCgFAKAUAoBQCgFAKATQCgFAKAUBB45\/UH5R9VUBNTQCaA0L0q7Sv2rbSWHC2tZJJASTlSOqQRwrSlFSepScrLQgMXu8cs2UXLl4hSDl0hBjNEBQLY4xoausjdrFXnWpvezu1Lb1g3dPrbZzSlRUoJTnQopMFR3EiR31lKNpWReLurkkMbtuVS1zlnlFiUoC0yoESCBOumtRZk3GI41bMRy1w03O4LWkE9wOpoot7C6Rdw\/EmX052Xm3EzEoUFAHgY3GjTW5NynEcWYYALz7bYO7OoJnunfRJvYXscy9LOMh4W7du8FpXJBbXIJnKBKTxNa0o6tsyqM6Rz+3tw0y5cNIVlSlIW4kFUAJ0BMk7vnWdm9UaF+\/wASZYSFPPNtJJgFxaUieEk1CTexJe5wnJnzpyROaRGUiZndHbUAwLTaOzdc5Nu7YWvqSlxJJ7hOvwqzi1yIujKv8SZZTmeebbTxWoJH61CTexNy3huMW9xPIXDTsb8i0kjvA1FGmtyLozZqCTAxHHLZggPXLTZO4LWkE\/AmpSb2Iujme3F5zrFrRlp0qQVN6oXoQtYlQIMHQEzW1NWi2zObvJI6g7izCXeSU+0HIJyFxIVABJOWZiAT8Kxs9zQxBtPZZSvnttlCspUXUAZomJJ31OV9BdEi7dISjlFLSEATmKgExvnNuiq25E3KLG\/aeRnZdbcRMZm1JUJHVIMTUtNbgvrWAJJAA6zUAjLfaSzW5yaLy3UsmAkOoJJ4ATqe6rZX0IujMvsQaZTnddQ2nitQSPmahK+xNzHw3HbW4JDNyy4RqQhaSQOMTMUcWt0RdMuX2KsMkB59psq9XlFpTPdJ1ok3sTcuX2INMpzPOttp3ZlqSkT3k0Sb2BWi6QUBwLSUEZgsKBSUnXMFbiO2luQMC12ks3CoIu7dRSCVAOIMAbzv3DjUuLRF0WMbxtrmD1w06hxKUKhTagoSBuBBiaKLvYN6XNJ9FF81b2rz1zcIRyjwSkuORORIJIk6mVH5VrVV3ZGdPRXZ0u2ukOoC2nErSodFSSFA9oI31g01uanPcd2EfUh19zEni50lJSMwQkTISOlpA4RWqqJaWM3C\/Mueh3HH32n2nVqWGuTKFKMmHM8ozHUgZJ19ruqa0UtRTd0dEmsTQhMcP3g\/KPqqgJmaATQHGfStc8piLbYSpeRKeimZUVHVIidTH610UtmzGpvYzMcucSxUJZRYKYaCpJXmA03FSlJGg4AE1CUYathuUtLFr0lWqbW0tLJBnJKjp6ytZMdqlTSm80mxNWSRMsbKs4dbc+cK13TaCqc3RC1IKcoT1wDAnhVXNyeVbFlFRV2Rno\/2XRfh28vczhUspSCojUAFSjB3agAbhB7KtUnl0RWEc2rMTYuLbGnUNE8klDoUJPqITmE8YVA+JqZ6wTYjpKyPdmcOGL4g+9cqUWmx6oJGiioITI3CEqJjrpJ5IpIJZ27mIxgbKcdat2ZLaXkqIJmMg5QieHRG\/jUqTcLsiyU7Ik8b\/mdomW96W1on\/wAYLh+gqsNKbZaWsyv0wvF25t7ZJ1P6KcISn6mlHS7FTkj30iXbj12xhjKilHQSY3STlE8QkAmKU0knJierUTZU+j2wZLbqUuBTCkuTnJzKbIUMwOm8A6RVO0ky2SKOdNY0zdX67i9bfeaE8m20mRv6IPSECJPaewVtlcY2RndN3ZObF4K6vFE3TNq7bWyc2iwUykoIyAHfJIPWBl3zFUnK0bN3ZaC1ujp2N34Yt3Xj+BBV8hWKV3Y0bsjlmwmzaMSU\/d3hWsZ8oAUR0oCiZGsJBSAO+t5yyWSMoxzasxtgsMb\/AI2UtkltjlViewcnqewr\/SpnJ5PiIL1tChWHqxHGnWwspRKs6hvDSISoDtJIT\/2+FQnlhcNZpEr6Qtk2LSwTyCVQHgpRUrMZUkI38KiE25akzilHQsbVbQZsHsmEmXHW0BQG+G+idO0iI7aRj67fQSl6p0XY7B+aWTTJ9YJzL\/uL6SvkTHcBWU5Xdy8VZGj+lXFHHbhmwaVGcpzdpWrKkH\/jvJ7q0pLeRSo+ROo9G9g2ltUOZmilZVnMrKCFdIHQAxuAHZVXVkW7NGp4PbHGMUdVcKUWGQSEgkaZsqUiN0wVEjXSK0byQVtyls8tdjF2ow1uzxa3FqCg52yACTBUsJjXWCCRFINyi7iSSkrGftr\/ADOO27G8JW2D3Zsyh8k1FPSDZM9ZJGR6arwksMp1VJVA47gP1qKK1bFV7Is+ki5WOa4YyYAS2gidCei2hJ7Jqaa3kxNvSKLHpA2QtLK1bU0V8rISVFR6enSJG4aToKmE3KViJRUUX8V\/l9nGG9xehR\/8iiv\/ABNRvUJ2gYNtse0nB1Xj5WXFNlTSQogISZKdOsq366aipc3msiFFZbs2z0NtqGHrJOin1FPYAlAMfEKqlb2i9PYh8SxK9xHEH8PauEtNJBKjknopygyRqZKgIkVMVGMczKttysbzsns41Ysck2SoqOZazvUqI3dQA0A\/eaznNyd2XjFRVkTU1UsQmOf1B+UfVVATU0AmgOaYXs\/dLx03TrKksoUpQUcsGGylIGs7zO7qrbMlCxnZ5rnS5rE0Ob7WYDc3WLMK5BRYQpvMuUxlCsyuudwA+NawklFmcotyRuO1mFm6tHWUmFKGk8eqs4uzuXaurHOsCdxizYXaN2BVKlFK9+Uq3wZgjr1jfW0skne5ks0dLGwbFbFLYbeduFA3D6CmAZyJVqQVdalGCY0EADrqk530ReMbbmsbO4di1i480xaBXK5U51eqMhVlWFZgB6x0NaScJJXZRKUXoiW2A2YumsRcfuEKhKFQ4Y6biymSNZiM3VVZzTjZExi812YF9hWI22KruWLUu5irKYlJC05TOogipi4uNmyGpKV0VYbstfrxVl+6bzDMHHFgpypKQopQNZMEI3cTv3lniotInK27sydtMAvW8RTe2rRdgpUABMKTOhTIJBGmlRCUcuViad7o2DAnsTulOG7aRbslopSgDpKWoiFHUkACeG+qSUVsWjme5qezjGJ4Wt1CLAvpWRqD7MwoETGh1BFaScZrVlIqUG9DoGy15fOha7xhDIkcmgGVRrJUcx7I3ddZSSWxpFt7mTtPh5uLR5lJgrQQO8ioTs7ktXVjmezlpjDLLlo1a5ErUSXV\/hkAHKqYOgEaE1vJwbu2ZRzrREx6N9nbi252660pKlJCG80SqCok6E7+hVakk7WLQjYu+i\/ALhl65fuWVNqXATmKZMqUpe4nT1KipJNJIQi022TfpJbSrDXpIECRPEbhVYe0i0\/ZNE9Fmzin3hdOglpgw2DuU5JOn\/FJJP5iOBrWpKysZwjd3Z2Oa5zY5jt\/s7d8+bvLZsuFOUwNSFNmRKZ1B7K2pyVmmZTi73RO7PXeKXLpN0wi3Y5NQyx0lLVoDqSQBqerq31WSgloWi5Pc1LCcPxLDLl4s2fLoc0kaggElJkGQRJmR11e8ZpXdilpRehL7LbK3T17z+\/AQoGUN6E5huJAJCUp3gTJPDrrKSUcsS0Ytu7I3HsHxBjFzdsWxe6WZGkjVBQQdQRoT86tGUXCzIkmpXRbGy+Iv4iw9dNky4hbhSU5W0oVmDe\/XdGk795pniotIjLK92Z3pC2fuzfNXlu0XcpQqAJhbSgoSOsTUU5JJplpp3ujV9uX7591oXSUtuL0bZT+HMQATqYJJrSGVbFJXe5uHpMwK5eRbsWzClobTEjKAMqcomSOqsqckm2y802rIlNvsMeVhyLa2aUuMiYTHqoA4kcKrBrNdlpL1bIlNkcPXbYa00UQ6lsqUnT+oslRGmm8xUTd5XEVZWIzYNeJKdfVeoyIMZElDaelJmMupAEb+Iq08tlYiOa+puU1mXE0BCY4fvB+UfVVATE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgPZoDyaATQCaATQCaA1bbLZV2+UhJuuTZTqUBuSTxnMB3aVeE1HkUlHMbDh1k2w0hptOVCEgJHYOs8Sd5PbVW7u5ZKxkTUEiaATQCaATQCaATQGo7SbJPv3HLs4g6wcoTlGaIE+yoca0jNJWaKSi3sy1gOwCGrgXNxcuXLqTKSvQBQ3KIJJUR1awN8bqOpdWQULO7Nzmsy4mgE0AmgE0AmgIXGz94Pyj6qoCZmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgITG\/wCoPyj6qoCZoBQCgFAKA8mgIq9xzI4pAaSQkkSVGSRoTpurrhhk4ptnmVcfKE3FLYs\/aM+5R4ledW7qupn6Sn7qH2jPuUeJXnTuq6j0lP3UPtGfco8SvOndV1HpKfuofaM+5R4ledO6rqPSU\/dQ+0Z9yjxK86d1XUekp+6h9oz7lHiV507quo9JT91D7Rn3KPErzp3VdR6Sn7qJppwKSlQEBSQY4SJieuuSUcraPTpTzwUupVVTQSACSYA3n\/7vPZVKlSNOOaWxaEJTkoxWpXkzAFKTlIBHxANRCpGUVLqTODjJxfIcir2TV8y6lbDkVeyaZl1FhyKvZNMy6iw5FXsmmZdRYFpQ1ymiaZBRUgo5VM5cwmJiRMcYoTZ7nhfQFZStObhIn5UFna543coUYStJPAKBPyqLhxa1aPW30qJCVJJSYUAQYPA8DU3FmtTxy4QlSUqUkKUYSCRJI1gDrqLhRb2PHrttBhTiEmCYKgDA3kDsqbhJvYc6Rk5TOnJE5pEQeud0UGV3y21LqVAgEEEHcR1jjQg9oBQCgFAKAhcaP3g\/KPqaAmKAUAoBQCgPCaA1TFf67v8AcV\/ka9Sn7CPnK\/8AuS+Ji1cxFATv8PbytpOQKQpvlCCM2V09LMOrLKB8TXNnd2\/jY7uxjZLS6tfrr1+hbZbJcUFsBASlcQzOojSDosjt1131LaSVn05kRTc3mjbfl+3Iq49dWnX7IT\/6j1e6t47HJLd\/9FupKigNwsv6Lf8AbT9K8yr7b+J9Fhf9mPwL1Zm5gYqpRj2B1cFR+LiT1Hh8a8XiKqZrv2eR7HDXTtZe1+7GAGz7J+VecoN8j0nOPVDkj7J+Rpkl0Yzx6ockfZPyNMkujGePVDkj7J+Rpkl0Yzx6ockfZPyNMkujGePVGbhLZC1aEdA9Xamu\/h0Wq2q5HDxCUXR0fNGepUAk7hXuHhnPkXaw+L3IvKXinP0cvJHoRvnQyd0aCsb65j0lFZOyvyvbx3M3B1W2V0P5Oc8sqM46ROmTL1x3VKy313M6qqZVk9m3L6l3YVTcAZrfPC+iEjlfXOqlTqI7NxFKdhi77620+GxYXiDwfcQhzJmu0olKUTCk92p76Nu\/zEIRcYtrk39SwLh11bAU8rOm4dQHITmhKJHVE6kbqau3xLJRSbS3inYocxJxxDedQUSi4SSUpkhGYDWNNw3RUXb+pGSKbaXuvzKGcScDBQh7lEC1zKBSkhtYygJ3d4gzO+oTdvkaTgnO7VvWXzKxfONLuFpdPKFpopTCekCkyQmNyezjrU3au\/ArljKMU1pmf78y\/dY08hD3JXJdQkNlLkJMKUdUyBG7q6qZnrZkKlFuOaNtX5WJBV641eIaXcrcSVJSAkt5syiZLiMslPaIgCpu07GahGcG1G3nY2utTjFAKAhcaP3g\/KPqqgJeaATQCaATQCaAUBHXWFoWsrOYFRkwoRJ3kAp0rojiJRVjhqYCE5OV3qYl1h7LaczjhSOJWn5Do6nuqXi2t7ER4Upu0W2RIu2VKytN3Lh\/45QPjKZA7wKz7+3srnT6BUVepOxlIw65VrySUTvzvSfjlQQfnVlip+6jKXDKC2qSfy\/Jccw+6EEBCoED79QMcBKP3p3mXuoLh9J71JfvzMC5u0tn+Yt7pE\/izIWnxRH71HfZLeJouCQnrCpf7khh7Vs8PunVKPWMwCh3pKZqyxje1jGfCMntNmb\/AAVHFfiT\/rVu9S6Gfo2HvMlGxCQBoAAAJnQCN\/Wa5pSzO7O+EFCKiuRVNQWPFDu4a7iOB7KrKCkrS2LRk4u63PSRpGYAAAAqPUAOqkIKMVFchKTlJyfM8+KvErzqxUfFXiV50A+KvErzoB8VeJXnQD4n5nzoD00BTlERAjhFBcZBMwJ4wKC4SgDckDuAoTdjKOA+XXQi4CBwHy40F2QWxeJqurNDziWwoqcScqYEIcUkQCT1CguycDadeiNd+goTdnuQb4Hy6qEXAbTEZRHCBQm4yiZgTxjX50FyqaECaATQENjR+8H5R9VUBLzQCaATQCaATQCaAiMexoMjKmFOEaA7kj2lfsOus6lRROvC4V1nd7EJhWFLuVcs8tWXiTqrsT7KO74cazjBz1kdtfEQw67OktTbbZhDacqEhKR1Afr2mt0rbHkyk5O8mXZqSomgPFAEQQCDvBoNjUse2Xj762lKk65Ekj4o4Hs+XbjKnziehQxd\/Uqaoq2Z2nKyGnz0jole7MfZVwV29ffvQqX0ZGJwqis8NjbJrY4BNAJoBNAJoBNAJoBNAJoBNAJoBNAJoBNAeZwIkjUx8eFAap6MFD+HNiRPKPadzy6A2yaATQCaATQCaATQCaAhsaP3g\/KPqaAlpoBNAJoBNAJoDExLEkMpCl5oJgQknWJieqe2qykorU1pUZVZWiaIp3O7mdJ6a5WQCTB6gBru6I+FcieaV2fQOLpUbQ5I6IzASABAgQIiBGgjqrtPm223qVTQgTQCaATQCaA0DbPDg2+FpEJdk6dSxv8AnIPfNc9WNnc9fBVc8Mr5fY2zZvEC9bpUo9IdFXapPX8RB+NbQd0efiaXZ1GlsSc1YwE0AmgE0AmgE0AmgE0AmgE0AmgE0AmgIfavBzdWxQlWV1Cg4yv2XW9Un9vjQGqeirAnUpNzcBQUM7bSDIyJLhU4Y4qXPwFAdDmgE0AmgE0AmgE0AmgIfGT0x+X91UBLTQCaAu2rCnFZUxME6mBAjzFUlKzSRaMU1dmd\/BHeLfiV\/rS8+i8\/wTaHV+X5H8Ed4t+JX+tLz6Lz\/AtDq\/35lq52cW4goXyZSoajMr\/XQ1DzvdLz\/BaEoxakm\/L8kZhOwqmVZittap6JJIyjsGX1u35RVIU5R5Lz\/B018X2qtdpfviZNw0UKKVRI4btRNaRle9zjkrWsW5q5UTQCaATQFbbaleqlSo4An6VRzSdiyg2rkZtFs67coSkJUkpVMltR0giPp8qpNqXXyZ04efZSb080NndnnrZC0kKVmVOjahGkUg1Fc\/JjET7Vpqy+aJfmrnunPCfKr9ovHyZz5H1XmeG1c9254VeVO0Xj5MZH1XmWQqrJ31RVqzsxNSQJoBNAJoBNAJoBNAave7SLS4tISISopH\/UxwrjnXkpNI+hwvDKM6UZyvdltraN5SglKMyjoANSTwACaqq82bS4XhYq7ul8Sq42hfQrKtsoVwUIPyKaOvNbkR4ZhZq8Xf4MoRtM6SAEySYAGpJPUBlp3iZL4Vhkru\/mV3G0L7asq2yhQ\/CoQdewpo681uRDhmFmrx1XxLf2pc4D5jyp3iZb0Th\/HzK3No3khJUiMwzJmNUyRI03SD8qdvMiPDMLK9r6eJR9qHPZH6eVO8TJ9E4fx8yewPEC81nUACFEadka\/rXVSk5RuzwsbQjRrOEdiQmtDkE0AmgIfGT94Py\/uaAlpoBNASOz39f\/AKK+qKo\/bXz\/AKLr2H8V\/ZsbqiEkhJUQCQBGpHVrprVyhzVGx9ypGS4tbd3O9avqMheV03COdj7wCEqbA6KdCAoazFATu0uBvOPSy0MgTZgAFIA5C+Q6sAEiAEAn4QOFAbhQGrY3\/XV8P8RWcPal+8i8tl+8zBmtCgmgE0AmgJ3Zr1V\/mH0rOPtP5F5eyvmSOI3iWWXHl+q2hS1dyASY7dK0KGgWWJ4g5yTT1zcMPc4bSvI1biWrhlS5AcZV6jiHW0kbwgEyTQG32l44cRuGio8ki3t1JEDRbi7kLMxJkIb0nSO2gJmgNIVvPefrVKXsIvU9tiauUE0AmgE0AmgE0AmgOa4q7\/MPf3V\/5GvPqL12fWYOVqEPgXMDxFLNy26qSlCpOWJiCNNaiDtJNlsQnUpSguZKK2kQhjk28yloQlKHHEIJP3ilqEEqypg5RBnfurRz0sjlWFlKeaeie6T8LL58yu7xphu+bW2n7pCVTkyzmeC1KKT1lBXlH9sVLklO62IhRqToNSfrPr4bfb6lu3xe2bZW2C44YXqtpH3gW3lSkkqJbCFdIRUKUUrbkypVZzUtFts9tdfjfYlsNxmyU6o6I3r+8Q2kAq5uMiSVQQMiydRooxvq8ZQuc1WjXUbb8tG\/F\/2ROMY+2tpTPrFIASoISBmS84pS0\/iCVJUIFUlJONjqoUJQmp7fPlZb\/M17lqxsehnN22LVNsf7iv2ruo+wfM8Sd67J6a1OATQCaAh8YPTH5f3NASs0AmgKkOEGQSDxBIqsop7kqTWxd5877xfiNR2a8fNls78PJDnzvvF+I07NePmxnfh5Ic+d94vxGnZrx82M78PJDnzvvF+I07NePmxnfh5IsqWSZJJJ3kmT86mMVHYq5N7nk1YgTQCaATQGVZYgtqcuWDxB3\/A1Rxd7pl8ytZoyv487wb+Sv9qi0+v0\/IvHo\/P8D+PO+y38lf7UtPr9PyLx6Pz\/AAP487wb+Sv9qWn1+n5F49H5\/gHHneCPkfOlp9fp+ReHT6\/gi5q8Y5VYrJ3dxNSQJoBNAJoBNAJoBNARd3gFu4srU30jvIJEnjpVXCL3RtDEVYK0ZOxZ+zFr7CvErzqOzj0Ld7re8x9mLX2FeNXnTs49B3ut7zH2YtfYV4ledOzj0He63vMfZi19hXjVTs49B3ut7zH2YtfYV41U7OPQd7re8x9mLX2FeJXnTs49B3ut7zH2YtfYV4ledOzj0He63vMk7O1Q0gIbSEpHV37z31ZKxjKTk7tl+akqJoBNAQ+Mnpj8v7mgP\/\/Z',width=400,height=400)","761f52fe":"sns.countplot(ace['Country'],linewidth=3,palette=\"Set3\",edgecolor='black')\nplt.show()","33f1c66e":"sns.countplot(x=ace['Selection'],palette='coolwarm',linewidth=2,edgecolor='black')","adf41de1":"plt.figure(figsize=(18,6))\nplt.subplot(1, 2, 1)\nsns.countplot(x=ace['LVH_GG'],hue=ace['Outcomer'],palette='summer',linewidth=3,edgecolor='white')\nplt.title('Outcomer')\nplt.subplot(1, 2, 2)\nsns.countplot(x=ace['LVH_GG'],hue=ace['Comparability'],palette='hot',linewidth=3,edgecolor='white')\nplt.title('Comparability')\nplt.show()","79b457d9":"fig = px.bar(ace, x= \"Country\", y= \"LVH_GG\", color_discrete_sequence=['crimson'],)\nfig.show()","56a9d3b4":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.narrative)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","0a4366e1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcR0jMf0aHqO1YutEMPn6P_2tcElzbpxgwehHdEik-Rh9GB9N66y&usqp=CAU',width=400,height=400)","57e62818":"youtube.com","66a163d6":"#What is the ACE2 receptor, how is it connected to coronavirus and why might it be key to treating COVID-19?\nAuthors: Krishna Sriram: Postdoctoral Fellow, University of California San Diego Paul Insel: Professor of Pharmacology and Medicine, University of California San Diego Rohit Loomba: Professor of Medicine, University of California San Diego\n\nIn the search for treatments for COVID-19, many researchers are focusing their attention on a specific protein that allows the virus to infect human cells. Called the angiotensin-converting enzyme 2, or ACE2 \u201creceptor,\u201d the protein provides the entry point for the coronavirus to hook into and infect a wide range of human cells.\n\nACE2 is a protein on the surface of many cell types. It is an enzyme that generates small proteins \u2013 by cutting up the larger protein angiotensinogen \u2013 that then go on to regulate functions in the cell.\n\nUsing the spike-like protein on its surface, the SARS-CoV-2 virus binds to ACE2 \u2013 like a key being inserted into a lock \u2013 prior to entry and infection of cells. Hence, ACE2 acts as a cellular doorway \u2013 a receptor \u2013 for the virus that causes COVID-19. https:\/\/theconversation.com\/what-is-the-ace2-receptor-how-is-it-connected-to-coronavirus-and-why-might-it-be-key-to-treating-covid-19-the-experts-explain-136928","596a97d0":"cebm.net","e28c14cd":"Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","50865461":"Angiotensin converting enzyme (ACE, aka ACE1) is another protein, also found in tissues such as the lung and heart, where ACE2 is present. Drugs that inhibit the actions of ACE1 are called ACE inhibitors.\n\nThese drugs block the actions of ACE1 but not ACE2. ACE1 drives the production of ANG II. In effect, ACE1 and ACE2 have a \u201cyin-yang\u201d relationship; ACE1 increases the amount of ANG II, whereas ACE2 reduces ANG II.\n\nBy inhibiting ACE1, ACE inhibitors reduce the levels of ANG II and its ability to increase blood pressure and tissue injury. ACE inhibitors are commonly prescribed for patients with hypertension, heart failure and kidney disease.\nhttps:\/\/theconversation.com\/what-is-the-ace2-receptor-how-is-it-connected-to-coronavirus-and-why-might-it-be-key-to-treating-covid-19-the-experts-explain-136928","96ab6f57":"youtube.com","a1e578bd":"nature.com - High expression of ACE2 receptor of 2019-nCoV on the epithelial cells of oral mucosa Citation: Xu, H., Zhong, L., Deng, J. et al. High expression of ACE2 receptor of 2019-nCoV on the epithelial cells of oral mucosa. Int J Oral Sci 12, 8 (2020). https:\/\/doi.org\/10.1038\/s41368-020-0074-x","62669b94":"When the SARS-CoV-2 virus binds to ACE2, it prevents ACE2 from performing its normal function to regulate ANG II signaling. Thus, ACE2 action is \u201cinhibited,\u201d removing the brakes from ANG II signaling and making more ANG II available to injure tissues. This \u201cdecreased braking\u201d likely contributes to injury, especially to the lungs and heart, in COVID-19 patients.\n\nACE2 is present in all people but the quantity can vary among individuals and in different tissues and cells. Some evidence suggests that ACE2 may be higher in patients with hypertension, diabetes and coronary heart disease.\n\nA lack of ACE2 is associated with severe tissue injury in the heart, lungs and other tissue types.\n\nThe SARS-CoV-2 virus requires ACE2 to infect cells but the precise relationship between ACE2 levels, viral infectivity and severity of infection are not well understood.https:\/\/theconversation.com\/what-is-the-ace2-receptor-how-is-it-connected-to-coronavirus-and-why-might-it-be-key-to-treating-covid-19-the-experts-explain-136928","67253e14":"advbiores.net","47ff3016":"#Codes from Mario Filho https:\/\/www.kaggle.com\/mariofilho\/live26-https-youtu-be-zseefujo0zq","ba46bed1":"#High expression of ACE2 receptor of 2019-nCoV on the epithelial cells of oral mucosa\nCitation: Xu, H., Zhong, L., Deng, J. et al. High expression of ACE2 receptor of 2019-nCoV on the epithelial cells of oral mucosa. Int J Oral Sci 12, 8 (2020). https:\/\/doi.org\/10.1038\/s41368-020-0074-x\n\nThe ACE2 expressed on the mucosa of oral cavity.This receptor was highly enriched in epithelial cells of tongue. Those findings have explained the basic mechanism that the oral cavity is a potentially high risk for 2019-nCoV infectious susceptibility and provided a piece of evidence for the future `prevention strategy in dental clinical practice` as well as daily life.\n\nHigh ACE2 expression was identified in type II alveolar cells (AT2) of lung, and many others. These findings indicated that those organs with high ACE2-expressing cells should be considered as potential high risk for 2019-nCoV infection.\n\nThe ACE2 could be expressed in the oral cavity, and was highly enriched in epithelial cells. Moreover, among different oral sites, ACE2 expression was higher in tongue than buccal and gingival tissues. These findings indicate that the mucosa of oral cavity may be a potentially high risk route of 2019-nCov infection.\n\nWhen the authors combined the base of tongue, floor of mouth and oral cavity as other sites, and compared them with oral tongue, they found the obvious tendency that the mean expression of ACE2 was higher in oral tongue (13 tissues) than others (19 tissues).https:\/\/www.nature.com\/articles\/s41368-020-0074-x#citeas","5a816f72":"healthcare-in-europe.com","34a274c3":"nzdoctor.co.nz","bad71e24":"When the amount of ACE2 is reduced because the virus is occupying the receptor, individuals may be more susceptible to severe illness from COVID-19. That is because enough ACE2 is available to facilitate viral entry but the decrease in available ACE2 contributes to more ANG II-mediated injury. In particular, reducing ACE2 will increase susceptibility to inflammation, cell death and organ failure, especially in the heart and the lung.\n\nThe lungs are the primary site of injury by SARS-CoV-2 infection, which causes COVID-19. The virus reaches the lungs after entry in the nose or mouth.\n\nThe virus also impacts other tissues that express ACE2, including the heart, where damage and inflammation (myocarditis) can occur. The kidneys, liver and digestive tract can also be injured. Blood vessels may also be a site for damage.\n\nAbnormally high ANG II activity can be a key factor that determines severity of damage in patients with COVID-19. https:\/\/theconversation.com\/what-is-the-ace2-receptor-how-is-it-connected-to-coronavirus-and-why-might-it-be-key-to-treating-covid-19-the-experts-explain-136928","ddc5424f":"epistemonikos.cl"}}