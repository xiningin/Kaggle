{"cell_type":{"849d9176":"code","392ec128":"code","81cdbf94":"code","d8af4999":"code","bedf694f":"code","6fe17b48":"code","430e931d":"code","e124231a":"code","5f1fe38e":"code","b9a6b525":"code","8895f7a7":"code","a0ac0fd9":"code","5c7ebcdc":"code","3dad0a02":"code","4fef6e21":"code","306fa7a3":"code","88e50ea4":"code","0736a697":"code","73e3eb8f":"code","52b9ad64":"code","65f1cb04":"code","09818461":"code","c1981119":"code","943d87f9":"code","16a9f6d4":"code","e9adafdf":"code","d8883b57":"code","a737b5ad":"code","4ff41fd2":"code","d2c767e4":"code","556f1556":"code","c5db6224":"code","9d7885b3":"code","c19216b0":"code","3b796e7f":"code","958cb35a":"code","7bfacb27":"code","240e4f9c":"code","d940d00f":"code","623b45ef":"code","f62987f6":"code","49a0aa15":"code","257efb76":"code","293259c8":"code","dccfad59":"code","961ac11d":"code","48e53261":"code","ae3e041d":"code","6b3a174f":"code","3e6d65ce":"code","346fb9a0":"code","f171fe26":"code","a38c2cb9":"code","ba95fde7":"code","8cc2dc32":"code","43ef9f87":"code","080d41b3":"code","d8b5d1d6":"code","2fb9dabf":"code","fa1ccbe7":"code","7f0a733c":"code","da8deaab":"code","c0a84838":"code","9dbfc554":"code","046932bf":"code","e9df9679":"code","fc2c7839":"code","3da6048b":"code","9619ae8e":"code","636e6be2":"code","b487fd36":"code","4b32077d":"code","5576cde0":"code","90b6d8c1":"code","66804cb8":"code","f16c6c7e":"code","94bf5bac":"markdown","c5083005":"markdown","c033a3fa":"markdown","8ef1f9f4":"markdown","da67c98b":"markdown","3c5f00d2":"markdown","851c7b88":"markdown","e9e6171b":"markdown","7e56a329":"markdown","21f972d8":"markdown","244a1821":"markdown","44bee137":"markdown","ae08ae57":"markdown","b65f7828":"markdown","ab36c61d":"markdown","165f4357":"markdown","c4d3ffa6":"markdown","a1b3047a":"markdown","13a0a6b2":"markdown","1b90ace1":"markdown","c017af6a":"markdown","8b7974ec":"markdown","ee817bac":"markdown","89cd2b59":"markdown","22a3baa2":"markdown","eb5fc9f0":"markdown","8d5e1db8":"markdown","65906ffd":"markdown","fb87a0ed":"markdown","d96e2fff":"markdown","1656004d":"markdown","5cb93843":"markdown","d2a680c4":"markdown","16de84e5":"markdown","c59505ea":"markdown","a81c8207":"markdown","f8c52a79":"markdown","658c424f":"markdown","1dd06aad":"markdown","7db3606d":"markdown","3e95c1f1":"markdown","6f6b0229":"markdown","5c4a5782":"markdown","b9f81eeb":"markdown","bf21c3ea":"markdown","e45b1382":"markdown","09ce84ae":"markdown","29e64306":"markdown","9e83f230":"markdown","0405a6ef":"markdown"},"source":{"849d9176":"import numpy as np\nimport pandas as pd\nimport re\n\ndata = pd.read_csv(\"..\/input\/russian-cyrillic-names-and-sex\/data.csv\", header=None)\ndata = data.rename(columns={0: 'surname', 1: 'name', 2: 'father_name', 3: 'sex'})","392ec128":"data.head(10)","81cdbf94":"data.describe(include='all')","d8af4999":"# \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c\ndata.shape","bedf694f":"males = data.loc[data['sex'] == '\u041c']\nfemales = data.loc[data['sex'] == '\u0416']","6fe17b48":"pd.isnull(data).sum()","430e931d":"pd.isnull(males).sum()","e124231a":"pd.isnull(females).sum()","5f1fe38e":"data.duplicated().sum()","b9a6b525":"sex_distr = data['sex'].value_counts()\nsex_distr","8895f7a7":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_theme(style='darkgrid')\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\nax[0].pie(x=sex_distr, autopct='%1.1f%%', shadow=True)\n\nax[0].set_title('Sex distribution')\nax[0].set_ylabel('')\n\nsns.countplot(x='sex', data=data, ax=ax[1])\nax[1].set_title('Sex')\nplt.show()","a0ac0fd9":"labels = males['name'].value_counts().index[:50]\nsizes = males['name'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"\u0421\u0430\u043c\u044b\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430\", size=15)\nplt.show()","5c7ebcdc":"labels = males['name'].value_counts().index[-50:]\nsizes = males['name'].value_counts().values[-50:]\nunpopular_names = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_names","3dad0a02":"labels = females['name'].value_counts().index[:50]\nsizes = females['name'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"name\", size=15)\nplt.show()","4fef6e21":"labels = females['name'].value_counts().index[-50:]\nsizes = females['name'].value_counts().values[-50:]\nunpopular_names = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_names\n","306fa7a3":"labels = males['surname'].value_counts().index[:50]\nsizes = males['surname'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"surname\", size=15)\nplt.show()","88e50ea4":"labels = males['surname'].value_counts().index[-50:]\nsizes = males['surname'].value_counts().values[-50:]\nunpopular_surnames = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_surnames","0736a697":"labels = females['surname'].value_counts().index[:50]\nsizes = females['surname'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"surname\", size=15)\nplt.show()","73e3eb8f":"labels = females['surname'].value_counts().index[-50:]\nsizes = females['surname'].value_counts().values[-50:]\nunpopular_surnames = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_surnames","52b9ad64":"labels = males['father_name'].value_counts().index[:50]\nsizes = males['father_name'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"father name\", size=15)\nplt.show()","65f1cb04":"labels = males['father_name'].value_counts().index[-50:]\nsizes = males['father_name'].value_counts().values[-50:]\nunpopular_f_names = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_f_names","09818461":"labels = females['father_name'].value_counts().index[:50]\nsizes = females['father_name'].value_counts().values[:50]\nplt.figure(figsize=(11,11))\nplt.pie(sizes, labels=labels, autopct=\"%1.1f%%\")\nplt.title(\"father name\", size=15)\nplt.show()","c1981119":"labels = females['father_name'].value_counts().index[-50:]\nsizes = females['father_name'].value_counts().values[-50:]\nunpopular_fnames = pd.DataFrame({'labels': labels, 'sizes': sizes})\nunpopular_fnames","943d87f9":"male_lengths = males['name'].str.len().value_counts()\nfemale_lengths = females['name'].str.len().value_counts()\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].bar(male_lengths.index, male_lengths.values \/ males.shape[0])\nax[0].set_xticks(male_lengths.index)\nax[0].set_title('\u041c \u0438\u043c\u044f')\nax[0].set_xlabel('len')\nax[0].set_ylabel('frac')\nax[1].bar(female_lengths.index, female_lengths.values \/ females.shape[0])\nax[1].set_xticks(female_lengths.index)\nax[1].set_title('\u0416 \u0438\u043c\u044f')\nax[1].set_xlabel('len')\nax[1].set_ylabel('frac')\nplt.show()","16a9f6d4":"male_lengths = males['surname'].str.len().value_counts()\nfemale_lengths = females['surname'].str.len().value_counts()\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].bar(male_lengths.index, male_lengths.values \/ males.shape[0])\nax[0].set_xticks(male_lengths.index)\nax[0].set_title('\u041c \u0444\u0430\u043c\u0438\u043b\u0438\u044f')\nax[0].set_xlabel('len')\nax[0].set_ylabel('frac')\nax[1].bar(female_lengths.index, female_lengths.values \/ females.shape[0])\nax[1].set_xticks(female_lengths.index)\nax[1].set_title('\u0416 \u0444\u0430\u043c\u0438\u043b\u0438\u044f')\nax[1].set_xlabel('len')\nax[1].set_ylabel('frac')\nplt.show()","e9adafdf":"male_lengths = males['father_name'].str.len().value_counts()\nfemale_lengths = females['father_name'].str.len().value_counts()\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].bar(male_lengths.index, male_lengths.values \/ males.shape[0])\nax[0].set_xticks(male_lengths.index)\nax[0].set_title('\u041c \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e')\nax[0].set_xlabel('len')\nax[0].set_ylabel('frac')\nax[1].bar(female_lengths.index, female_lengths.values \/ females.shape[0])\nax[1].set_xticks(female_lengths.index)\nax[1].set_title('\u0416 \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e')\nax[1].set_xlabel('len')\nax[1].set_ylabel('frac')\nplt.show()","d8883b57":"male_ends = males['surname'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nfemale_ends = females['surname'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].pie(male_ends.values, labels=male_ends.index, autopct=\"%1.1f%%\")\nax[0].set_title('2 \u0431\u0443\u043a\u0432\u044b \u041c, \u0444\u0430\u043c\u0438\u043b\u0438\u044f')\nax[1].pie(female_ends.values, labels=female_ends.index, autopct=\"%1.1f%%\")\nax[1].set_title('2 \u0431\u0443\u043a\u0432\u044b \u0416, \u0444\u0430\u043c\u0438\u043b\u0438\u044f')\nplt.show()","a737b5ad":"male_ends = males['father_name'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nfemale_ends = females['father_name'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].pie(male_ends.values, labels=male_ends.index, autopct=\"%1.1f%%\")\nax[0].set_title('2 \u0431\u0443\u043a\u0432\u044b \u041c, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e')\nax[1].pie(female_ends.values, labels=female_ends.index, autopct=\"%1.1f%%\")\nax[1].set_title('2 \u0431\u0443\u043a\u0432\u044b \u0416, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e')\nplt.show()","4ff41fd2":"male_ends = males['name'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nfemale_ends = females['name'].apply(lambda x: x[-2:] if type(x) is str else x).value_counts()[:50]\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].pie(male_ends.values, labels=male_ends.index, autopct=\"%1.1f%%\")\nax[0].set_title('2 \u0431\u0443\u043a\u0432\u044b \u041c, \u0438\u043c\u044f')\nax[1].pie(female_ends.values, labels=female_ends.index, autopct=\"%1.1f%%\")\nax[1].set_title('2 \u0431\u0443\u043a\u0432\u044b \u0416, \u0438\u043c\u044f')\nplt.show()","d2c767e4":"vowels = set('\u0401\u0423\u0415\u042b\u0410\u041e\u042d\u042f\u0418\u042e')\ndef eval_vowel_num(string):\n    return sum([*map(lambda x: string.count(x), vowels)])\n\ndef eval_vowel_ratio(string):\n    if type(string) != str:\n        return 0\n    return eval_vowel_num(string.upper()) \/ len(string)","556f1556":"# \u0434\u043b\u044f \u0438\u043c\u0435\u043d\nmale_vowel_counts = males['name'].apply(eval_vowel_ratio)\nfemale_vowel_counts = females['name'].apply(eval_vowel_ratio)\nf, ax = plt.subplots(1, 2,  figsize=(18, 8))\nax[0].hist(male_vowel_counts)\nax[0].set_title('\u0434\u043e\u043b\u044f \u0433\u043b\u0430\u0441\u043d\u044b\u0445 \u041c, \u0438\u043c\u044f')\nax[1].hist(female_vowel_counts)\nax[1].set_title('\u0434\u043e\u043b\u044f \u0433\u043b\u0430\u0441\u043d\u044b\u0445 \u0416, \u0438\u043c\u044f')\nplt.show()","c5db6224":"dataset = data.copy()","9d7885b3":"dataset = dataset.loc[dataset['sex'].isin(('\u041c', '\u0416'))]","c19216b0":"print(dataset.shape)\ndataset = dataset.drop_duplicates()\ndataset.shape","3b796e7f":"preprocess_str = lambda x: re.sub(r'\\s+ ', '', str(x).upper()).replace('\u0401', '\u0415')","958cb35a":"dataset['name'] = dataset['name'].apply(preprocess_str)\ndataset['surname'] = dataset['surname'].apply(preprocess_str)\ndataset['father_name'] = dataset['father_name'].apply(preprocess_str)","7bfacb27":"def is_cirillic(string):\n    return bool(re.search('^([\u0410-\u042f]+\\-?[\u0410-\u042f]+)?$', str(string)))","240e4f9c":"dataset = dataset[dataset['name'].apply(is_cirillic)]\ndataset = dataset[dataset['surname'].apply(is_cirillic)]\ndataset = dataset[dataset['father_name'].apply(is_cirillic)]","d940d00f":"dataset.fillna('~1', inplace=True)","623b45ef":"dataset['sex'] = dataset['sex'].apply(lambda x: int(x == '\u041c'))","f62987f6":"dataset.to_csv('preprocessed_nofeatures.csv', index=False)","49a0aa15":"coded = dataset.copy()","257efb76":"coded['vowel_rate'] = coded['name'].apply(eval_vowel_ratio)","293259c8":"coded['surend'] = coded['surname'].apply(lambda x: x[-2:])\ncoded['nameend'] = coded['name'].apply(lambda x: x[-2:])\ncoded['fatend'] = coded['father_name'].apply(lambda x: x[-2:])\ncoded['num_let_sur'] = coded['surname'].apply(lambda x: len(x))\ncoded['num_let_nam'] = coded['name'].apply(lambda x: len(x))\ncoded['num_let_fat'] = coded['father_name'].apply(lambda x: len(x))\ncoded['has_m_fatend'] = coded['father_name'].apply(lambda x: int(x[-2:] in set(['\u0418\u0427', '\u041b\u042b'])))\ncoded['has_m_surend'] = coded['father_name'].apply(lambda x: int(x[-2:] in set(['\u041e\u0412', '\u0418\u041d', '\u042f\u041d'])))\ncoded['has_m_namend'] = coded['father_name'].apply(lambda x: int(x[-2:] in set(['\u0418\u0419', '\u0415\u0419', '\u0414\u0420', '\u0418\u0420', '\u0410\u041d', '\u0410\u0419', '\u041e\u0420'])))\ncoded","dccfad59":"#coded = coded.drop(columns=['surname', 'name', 'father_name'])\ncoded","961ac11d":"coded.to_csv('preprocessed_features_letter.csv', index=False)","48e53261":"from functools import reduce\ndef string_norm(min_letter, string):\n  return reduce(lambda prev, cur: prev + cur ** 2, map(lambda x: ord(x) - ord(min_letter) + 1, string))","ae3e041d":"numeric = coded.copy()","6b3a174f":"from functools import partial\nstring_norm_app = partial(string_norm, '\u0410')","3e6d65ce":"\nnumeric['fatend'] = coded['fatend'].apply(string_norm_app)\nnumeric['nameend'] = coded['nameend'].apply(string_norm_app)\nnumeric['surend'] = coded['surend'].apply(string_norm_app)","346fb9a0":"pd.isnull(numeric).sum()","f171fe26":"numeric.to_csv('preprocessed_features.csv', index=False)","a38c2cb9":"numeric = pd.read_csv(\"preprocessed_features.csv\")","ba95fde7":"y = numeric['sex']\n# \nX = numeric[['surname', 'name', 'father_name', 'vowel_rate', 'surend', 'nameend', 'fatend', 'num_let_sur', 'num_let_nam', 'num_let_fat', 'has_m_fatend', 'has_m_surend', 'has_m_namend']]\n","8cc2dc32":"X.head(10)\n","43ef9f87":"from sklearn.model_selection import train_test_split\n\nX_train_w, X_test_w, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1810)","080d41b3":"# , 'has_m_fatend', 'has_m_surend', 'has_m_namend'\nindices = ['vowel_rate', 'surend', 'nameend', 'fatend', 'num_let_sur', 'num_let_nam', 'num_let_fat']\nX_train = X_train_w[indices]\nX_test = X_test_w[indices]","d8b5d1d6":"X_train, ind = np.unique(X_train, return_index=True, axis=0)\ny_train = np.take(y_train, ind, axis=0)","2fb9dabf":"print(X.shape)\nprint(X_train.shape) \nprint(X_test.shape)","fa1ccbe7":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import plot_tree\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score\n\ndt_model = DecisionTreeClassifier(max_depth=4, criterion='entropy')\ndt_model.fit(X_train, y_train)\n\ny_pred = dt_model.predict(X_test)\n\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')","7f0a733c":"from sklearn.linear_model import LinearRegression\nlr_model = LinearRegression()\nlr_model.fit(X_train, y_train)\ny_pred = lr_model.predict(X_test)\ny_pred = np.where(y_pred > 0.5, 1, 0)\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')","da8deaab":"from sklearn.linear_model import LogisticRegression\nlogr_model = LogisticRegression(solver='sag')\nlogr_model.fit(X_train, y_train)\ny_pred =logr_model.predict(X_test)\n# y_pred = np.where(y_pred > 0.5, 1, 0)\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')","c0a84838":"from sklearn.ensemble import RandomForestClassifier\nrf_model = RandomForestClassifier(n_estimators=10, max_depth=4, criterion='entropy')\nrf_model.fit(X_train, y_train)\n\ny_pred = rf_model.predict(X_test)\n\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')","9dbfc554":"import xgboost as xgb\nxgb_model = xgb.XGBClassifier(random_state=1810, max_depth=4, n_estimators=10)\nxgb_model.fit(X_train, y_train)\n\ny_pred = xgb_model.predict(X_test)\n\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')","046932bf":"import lightgbm as lgb\nlgb_model = lgb.LGBMClassifier()\nlgb_model.fit(X_train, y_train)\n\ny_pred = lgb_model.predict(X_test)\nprobes = lgb_model.predict_proba(X_test)\n\nprint(f'accuracy = {accuracy_score(y_pred, y_test)}')\nprint(f'precision = {precision_score(y_pred, y_test)}')\nprint(f'recall = {recall_score(y_pred, y_test)}')\nprint(f'f1_score = {f1_score(y_pred, y_test)}')\n\n# X_test_w[['surname', 'name', 'father_name']].to_numpy()[sorted_probs[-num:]], y_test.to_numpy()[sorted_probs[-num:]], y_pred[sorted_probs[-num:]], prob[sorted_probs[-num:]]","e9df9679":"processed = X_test_w.copy()","fc2c7839":"processed['expected'] = y_test","3da6048b":"processed['predicted'] = probes[:, 1]","9619ae8e":"processed['error'] = np.abs(processed['expected'] - processed['predicted'])","636e6be2":"processed","b487fd36":"processed_sorted = processed.sort_values(by='error')","4b32077d":"processed_sorted[:20]","5576cde0":"processed_sorted[-20:]","90b6d8c1":"def preprocess(surname, name, father_name):\n    surname_n = preprocess_str(surname)[-2:]\n    name_n = preprocess_str(name)[-2:]\n    father_n = preprocess_str(father_name)[-2:]\n    vowel_rate = eval_vowel_ratio(name)\n    num_let_sur = len(surname)\n    num_let_nam = len(name)\n    num_let_fat = len(father_name)\n    has_m_fatend = int(surname[-2:] in set(['\u0418\u0427', '\u041b\u042b']))\n    has_m_surend = int(name[-2:] in set(['\u041e\u0412', '\u0418\u041d', '\u042f\u041d']))\n    has_m_namend = int(father_name[-2:] in set(['\u0418\u0419', '\u0415\u0419', '\u0414\u0420', '\u0418\u0420', '\u0410\u041d', '\u0410\u0419', '\u041e\u0420']))\n    return np.array([\n        vowel_rate, \n        string_norm_app(surname_n), \n        string_norm_app(name_n), \n        string_norm_app(father_n), \n        num_let_sur, \n        num_let_nam, \n        num_let_fat, \n#         has_m_fatend, \n#         has_m_surend, \n#         has_m_namend\n    ])","66804cb8":"vector = preprocess('\u0427\u0423\u0420\u0418\u041a\u041e\u0412', '\u0421\u0415\u0420\u0413\u0415\u0419', '\u042e\u0420\u042c\u0415\u0412\u0418\u0427').reshape(1, -1)\nprint(dt_model.predict(vector))\nprint(logr_model.predict(vector))","f16c6c7e":"vector = preprocess('\u041c\u0418\u0425\u0410\u0419\u041b\u041e\u0412\u0410', '\u0410\u041d\u0410\u0421\u0422\u0410\u0421\u0418\u042f', '\u0412\u041b\u0410\u0414\u0418\u041c\u0418\u0420\u041e\u0412\u041d\u0410').reshape(1, -1)\nprint(dt_model.predict(vector))\nprint(lr_model.predict(vector))\nprint(logr_model.predict(vector))\nprint(rf_model.predict(vector))\nprint(xgb_model.predict(vector))\nprint(lgb_model.predict(vector))","94bf5bac":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0440\u0430\u0437\u0432\u0435\u0434\u043e\u0447\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445; \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b.","c5083005":"\u0412\u044b\u0432\u0435\u043b 20 \u0445\u0443\u0434\u0448\u0438\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432. \u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u044b \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445.","c033a3fa":"## Random Forest","8ef1f9f4":"\u0411\u0443\u0434\u0435\u043c \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0442\u044c \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0430\u043c \u0434\u043b\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (accuracy, precision, recall, f1_score). \u041a\u043b\u0430\u0441\u0441\u044b \u0441\u043a\u043e\u0440\u0435\u0435 \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u0445\u043e\u0442\u0438\u043c \u0438\u043c\u0435\u0442\u044c \u0432\u044b\u0441\u043e\u043a\u043e\u0435 accuracy - \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u043d\u043e \u0443\u0433\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e \u0432\u0441\u0435\u043c (\u0445\u043e\u0442\u0438\u043c \u0443\u0433\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0438 \u043c\u0443\u0436\u0447\u0438\u043d \u0438 \u0436\u0435\u043d\u0449\u0438\u043d).","da67c98b":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043d\u0430 2 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445 \u0441 \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433\u043e\u043c.","3c5f00d2":"\u0414\u043e\u043b\u044f \u0433\u043b\u0430\u0441\u043d\u044b\u0445 \u0432 \u0436\u0435\u043d\u0441\u043a\u0438\u0445 \u0438\u043c\u0435\u043d\u0430\u0445 \u0431\u043e\u043b\u044c\u0448\u0435.","851c7b88":"## \u041e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u044b\u0445 \u043a \u043e\u0431\u0449\u0435\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u0431\u0443\u043a\u0432 \u0432 \u0438\u043c\u0435\u043d\u0438","e9e6171b":"## \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e \u043f\u043e\u043b\u0443","7e56a329":"\u0414\u0435\u0440\u0435\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439. \u0412 \u0443\u0437\u043b\u0435 - \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0421\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0445\u043e\u0440\u043e\u0448\u043e.","21f972d8":"### Desicion Tree","244a1821":"## XGBoost","44bee137":"## Logistic regression","ae08ae57":"\u0416\u0435\u043d\u0441\u043a\u0438\u0435 \u0444\u0430\u043c\u0438\u043b\u0438\u0438 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0438\u043b\u044c\u043d\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u043e\u0442 \u043c\u0443\u0436\u0441\u043a\u0438\u0445 \u043f\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f\u043c. \u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","b65f7828":"## \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d, \u0444\u0430\u043c\u0438\u043b\u0438\u0439 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432 \u0432 \u0437\u0430\u043f\u0438\u0441\u044f\u0445 \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u043f\u043e\u043b\u043e\u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e","ab36c61d":"## LightGBM","165f4357":"\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f - \u043c\u043e\u0434\u0435\u043b\u044c, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (\u0441\u0442\u0440\u043e\u0438\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u044e\u0449\u0443\u044e \u0433\u0438\u043f\u0435\u0440\u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u044c \u0432 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432). \u041d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u043b\u0433\u043e. ","c4d3ffa6":"Train \/ test split","a1b3047a":"\u0423\u0434\u0430\u043b\u0438\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b","13a0a6b2":"\u041b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c, \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435 \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0438\u0437 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u0445\u043e\u0434\u0430\u043c\u0438 \u0438 \u0432\u044b\u0445\u043e\u0434\u043e\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u044b\u0445\u043e\u0434 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u0438.","1b90ace1":"\u0411\u0443\u0434\u0435\u043c \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0438\u043c\u0435\u043d, \u0442\u0430\u043a \u043a\u0430\u043a \u0444\u0430\u043c\u0438\u043b\u0438\u0438 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0430 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u0445\u043e\u0436\u0438\u043c\u0438 \u0437\u0430 \u043e\u0442\u043b\u0438\u0447\u0438\u0435\u043c \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0439, \u0430 \u0438\u0445 \u043c\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0439.","c017af6a":"\u0423\u0434\u0430\u043b\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043a \u0432\u0435\u0440\u0445\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443, \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0401 \u043d\u0430 \u0415.\n","8b7974ec":"## \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u0448\u0438\u0431\u043b\u0430\u0441\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e","ee817bac":"## 3 \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438 \u0438\u0445 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435","89cd2b59":"# 1 \u0420\u0430\u0437\u0432\u0435\u0434\u043e\u0447\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445","22a3baa2":"## \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c","eb5fc9f0":"## 2 \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433 \u0434\u0430\u043d\u043d\u044b\u0445","8d5e1db8":"\u0422\u0430\u043a\u0436\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044f \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 (\u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u044b\u0439 \u0431\u0443\u0441\u0442\u0438\u043d\u0433). \u0422\u0430\u043a \u043a\u0430\u043a \u043e\u0434\u043d\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0441\u043f\u0440\u0430\u0432\u0438\u043b\u043e\u0441\u044c \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0438 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 \u0445\u0443\u0436\u0435.","65906ffd":"Random Forest - \u044d\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u0448\u0430\u044e\u0449\u0438\u0445 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432, \u0438 \u0437\u0430 \u0441\u0447\u0435\u0442 \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u0438\u044f \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041e\u0434\u043d\u0430\u043a\u043e, \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438 \u043e\u0434\u043d\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0441\u043f\u0440\u0430\u0432\u0438\u043b\u043e\u0441\u044c \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043b\u0443\u0447\u0448\u0435 \u043e\u0441\u043e\u0431\u043e \u043d\u0435 \u0441\u0442\u0430\u043b\u043e.","fb87a0ed":"\u0412\u044b\u043a\u0438\u043d\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u0438, \u0433\u0434\u0435 \u0432 \u0444\u0430\u043c\u0438\u043b\u0438\u0438, \u0438\u043c\u0435\u043d\u0438 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043d\u0435 \u043a\u0438\u0440\u0438\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.","d96e2fff":"## \u0414\u043b\u0438\u043d\u044b \u0438\u043c\u0435\u043d, \u0444\u0430\u043c\u0438\u043b\u0438\u0439, \u043e\u0442\u0447\u0435\u0441\u0442\u0432","1656004d":"## \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u0448\u0438\u0431\u043b\u0430\u0441\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e","5cb93843":"\u0412\u044b\u043a\u0438\u043d\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c \u043f\u043e\u043b\u043e\u043c","d2a680c4":"# \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161-2.","16de84e5":"# \u041f\u043e\u043f\u044b\u0442\u043a\u0438 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (\u0431\u0435\u0437 \u0447\u0435\u0442\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438)","c59505ea":"## \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430","a81c8207":"\u0417\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b \u043a\u0430\u043a {'\u041c': 1, '\u0416': 0)","f8c52a79":"\u0412\u044b\u0432\u043e\u0434: \u043f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (\u0434\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445) \u0432\u0430\u0436\u043d\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u0443\u0433\u0430\u0434\u0430\u0442\u044c \u0441 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c, \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u044d\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. \u0412 \u0437\u0430\u0434\u0430\u0447\u0435 \u043d\u0430 \u043b\u0430\u0431. \u0440\u0430\u0431\u043e\u0442\u0443 \u0431\u044b\u043b\u043e \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043b\u0435\u0433\u043a\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u044b (\u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0438\u043c\u0435\u043d \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432). \u041f\u0440\u043e\u0441\u0442\u043e \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0443\u0436\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043d\u0435 \u0442\u0430\u043a \u043b\u0435\u0433\u043a\u043e.","658c424f":"## Linear regression","1dd06aad":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u0438\u043d \u0441\u0445\u043e\u0436\u0438 \u0441 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u043c\u0438. \u041f\u043e\u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u0447\u0442\u043e-\u0442\u043e \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435.","7db3606d":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u0438\u043d\u044b \u0438\u043c\u0435\u043d, \u0444\u0430\u043c\u0438\u043b\u0438\u0439 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043f\u043e\u043b\u0430. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u0438\u043d\u044b \u0438\u043c\u0435\u043d\u0438 \u0434\u043b\u044f \u043c\u0443\u0436\u0447\u0438\u043d \u0438 \u0436\u0435\u043d\u0449\u0438\u043d (\u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u043e\u0431\u0449\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u0430).","3e95c1f1":"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 '~1'. \u0422\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f.","6f6b0229":"## \u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b","5c4a5782":"\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0435\u0442\u0435\u043d\u0434\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u0444\u0438\u0447\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0434\u0432\u0435 \u0431\u0443\u043a\u0432\u044b \u0444\u0430\u043c\u0438\u043b\u0438\u0438, \u0438\u043c\u0435\u043d\u0438 \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0430; \u0434\u043e\u043b\u044f \u0433\u043b\u0430\u0441\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 \u0432 \u0438\u043c\u0435\u043d\u0438. ","b9f81eeb":"## \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438","bf21c3ea":"\u0417\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0444\u0430\u043c\u0438\u043b\u0438\u0438, \u0438\u043c\u0435\u043d \u0438 \u043e\u0442\u0447\u0435\u0441\u0442\u0432 \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0432 \u0438\u0445 \u043d\u043e\u0440\u043c\u0443","e45b1382":"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438 \u0438 \u0438\u043c\u0435\u043d\u0438 \u043d\u0435 \u0442\u0430\u043a \u043c\u043d\u043e\u0433\u043e, \u043f\u043e \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0443 \u0431\u043e\u043b\u044c\u0448\u0435, \u043d\u043e \u0442\u043e\u0436\u0435 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043c\u0430\u043b\u043e \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0432\u0441\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430. \u041f\u0440\u0438\u0447\u0435\u043c \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0447\u0438\u043d \u0438 \u0436\u0435\u043d\u0449\u0438\u043d \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0435","09ce84ae":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u043e\u043c, \u043d\u043e \u0438\u0445 \u043d\u0435 \u0442\u0430\u043a \u043c\u043d\u043e\u0433\u043e. \u042d\u0442\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430\u043f\u0438\u0441\u044f\u043c\u0438 \u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0435, \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0438\u043d\u0442\u0440\u0435\u0441\u0430 (\u043d\u0430\u0448\u0435\u043b \u0438\u0445 \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435). ","29e64306":"\u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438 males \u0438 females. \u041f\u0440\u0438\u0433\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u0440\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0435.","9e83f230":"\u0422\u0430\u043a\u0436\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044f \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432. \u0422\u0430\u043a \u043a\u0430\u043a \u043e\u0434\u043d\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0441\u043f\u0440\u0430\u0432\u0438\u043b\u043e\u0441\u044c \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0438 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 \u0445\u0443\u0436\u0435. \u0415\u0441\u0442\u044c \u043e\u0442\u043b\u0438\u0447\u0438\u044f \u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 XGBoost, \u043d\u043e \u043d\u0430 \u0442\u0430\u043a\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0438\u0445 \u043d\u0435 \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c.","0405a6ef":"## \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0431\u0443\u043a\u0432\u044b \u0444\u0430\u043c\u0438\u043b\u0438\u0438, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0430, \u0438\u043c\u0435\u043d\u0438"}}