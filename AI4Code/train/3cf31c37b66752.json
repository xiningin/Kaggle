{"cell_type":{"db379894":"code","9be7c790":"code","4153f10e":"code","175db696":"code","e8421f93":"code","82b41f90":"code","58e93a54":"code","6057708b":"code","7033226a":"code","f6c59794":"code","95e196b5":"code","c2c31260":"code","533ced90":"code","55a3cea8":"code","81d69e01":"code","299d6e8f":"code","cad9d897":"code","1838e11f":"code","f026f109":"code","b39fddaa":"code","c162dc31":"code","2003e0f2":"code","9fd95d8a":"code","b009ad0f":"code","8357d6f1":"code","27498891":"code","33dc496f":"code","1e341e6e":"code","ee61abaa":"code","052c4e23":"code","d64b3520":"code","733e46e4":"code","369c7263":"code","7e8061f5":"code","2b800b08":"code","5dd9806f":"code","25055d23":"code","ebc1f222":"code","064941a7":"code","8cdbcfc7":"code","9c263137":"code","7c72bd4f":"code","5ec7db73":"code","416a6adf":"code","6c609f52":"code","e1c7c8b0":"code","5669428c":"markdown","d25f2e30":"markdown","b191840e":"markdown","4e08522a":"markdown","656fd20c":"markdown","009eedad":"markdown","eef1e6e9":"markdown","180041a6":"markdown","0175ec0c":"markdown","e371d87c":"markdown","5c3c81db":"markdown","3bc5cb51":"markdown","fdb76579":"markdown","0d080b87":"markdown","d72a8cb3":"markdown","7c5d3de9":"markdown","c065a696":"markdown","524d1cb9":"markdown","f143c3f1":"markdown","92ff8b33":"markdown","129b4724":"markdown","194c05c6":"markdown","c01afdb4":"markdown","c686fa99":"markdown","7f1e0b64":"markdown","5543e49a":"markdown","ea622208":"markdown","47bb1968":"markdown","1acb68ae":"markdown","3cf5eab3":"markdown"},"source":{"db379894":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\nimport time\nimport scipy.stats as stats\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_rows',2000, 'display.max_columns',100)\nWorld_Marathon = pd.read_csv(\"..\/input\/world-marathons-majors\/world_marathon_majors.csv\",encoding= 'unicode_escape')","9be7c790":"World_Marathon.head()","4153f10e":"#Creating New Columns wrt to time\nWinner_Time_in_Min = []\nfor i in World_Marathon['time']:\n    time_obj = time.strptime(i, '%H:%M:%S')\n    Winner_Time_in_Min.append(time_obj.tm_hour * 60 + time_obj.tm_min +time_obj.tm_sec\/60)\nWorld_Marathon['Winner_Time_in_Min'] = Winner_Time_in_Min","175db696":"#Restructuring Columns\nWorld_Marathon = World_Marathon[['year','marathon','winner','gender','country','time','Winner_Time_in_Min']]\nWorld_Marathon.head()","e8421f93":"World_Marathon.isna().sum()","82b41f90":"labels = World_Marathon['gender'].value_counts().keys().tolist()\nvalues = World_Marathon['gender'].value_counts().tolist()\n\ncolors = ['Blue', 'Red']\n\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=25,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=1)))\nfig.update_layout(title_text='Overall Genderwise Winner Marathon ')\nfig.show()\n","58e93a54":"fig = px.histogram(World_Marathon, x=\"year\",color=\"gender\")\nfig.update_layout(title_text='Yearly Marathon organized for Male\/Female')\nfig.show()","6057708b":"fig = px.histogram(World_Marathon,x='marathon',color=\"marathon\")\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Marathon Organized By Cities')\nfig.show()\n","7033226a":"fig = px.histogram(World_Marathon,x='country')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Most Countries Winning Marathon')\nfig.update_traces(marker_color='rgb(255,0,0)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()\n","f6c59794":"fig = px.sunburst(World_Marathon, path=['marathon', 'gender', 'year','country','winner'])\nfig.update_layout(\n    title='Marathon Winner throughout the Years ')\nfig.show()","95e196b5":"World_Marathon_male = World_Marathon[World_Marathon['gender']=='Male']\nWorld_Marathon_male.reset_index(inplace = True)\n\nWorld_Marathon_female = World_Marathon[World_Marathon['gender']=='Female']\nWorld_Marathon_female.reset_index(inplace = True)","c2c31260":"fig = px.box(World_Marathon_male, y=\"Winner_Time_in_Min\")\nfig.update_layout(\n    title='Male Marathon Time in Minutes ')\nfig.show()","533ced90":"fig = px.box(World_Marathon_female, y=\"Winner_Time_in_Min\")\nfig.update_layout(\n    title='Female Marathon Time in Minutes ')\nfig.show()","55a3cea8":"World_Marathon_male = World_Marathon[World_Marathon['gender']=='Male']\nWorld_Marathon_male.head()\nWorld_Marathon_male.reset_index(inplace = True)","81d69e01":"Tokyo_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='Tokyo']\nTokyo_marathon_men\nTokyo_marathon_men.reset_index(inplace = True) ##If you will not do this you will get inbound error","299d6e8f":"Tokyo_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='Tokyo']\nfig = px.scatter(Tokyo_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Tokyo Men Marathon Winners with their Time')\nfig.show()","cad9d897":"print(\"Male Marathon Winner with the Fastest Record to Win the Tokyo Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nTokyo_Record=Tokyo_marathon_men.iloc[Tokyo_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Tokyo_Record)\nprint(\"                                    \")\nprint('=================================================================================')","1838e11f":"Berlin_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='Berlin']\nBerlin_marathon_men.reset_index(inplace = True) \nfig = px.scatter(Berlin_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_layout(\n    title='Berlin Men Marathon Winners with their Time')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.show()","f026f109":"print(\"Male Marathon Winner with the Fastest Record to Win the Berlin Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nBerlin_Record=Berlin_marathon_men.iloc[Berlin_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Berlin_Record)\nprint(\"                                    \")\nprint('=================================================================================')","b39fddaa":"Boston_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='Boston']\nBoston_marathon_men.reset_index(inplace = True) \nfig = px.scatter(Boston_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Boston Men Marathon Winners with their Time')\nfig.show()","c162dc31":"print(\"Male Marathon Winner with the Fastest Record to Win the Boston Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nBoston_Record=Boston_marathon_men.iloc[Boston_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Boston_Record)\nprint(\"                                    \")\nprint('=================================================================================')","2003e0f2":"NYC_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='NYC']\nNYC_marathon_men.reset_index(inplace = True) \n\nfig = px.scatter(Boston_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='NYC Men Marathon Winners with their Time')\nfig.show()","9fd95d8a":"print(\"Male Marathon Winner with the Fastest Record to Win the NYC Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nNYC_Record=NYC_marathon_men.iloc[NYC_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(NYC_Record)\nprint(\"                                    \")\nprint('=================================================================================')","b009ad0f":"London_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='London']\nLondon_marathon_men.reset_index(inplace = True) \n\nfig = px.scatter(London_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='London Men Marathon Winners with their Time')\nfig.show()","8357d6f1":"print(\"Male Marathon Winner with the Fastest Record to Win the Lonndon Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nLondon_Record=London_marathon_men.iloc[London_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(London_Record)\nprint(\"                                    \")\nprint('=================================================================================')","27498891":"Chicago_marathon_men = World_Marathon_male[World_Marathon_male['marathon']=='Chicago']\nChicago_marathon_men.reset_index(inplace = True) \n\nfig = px.scatter(London_marathon_men, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Chicago Men Marathon Winners with their Time')\nfig.show()","33dc496f":"print(\"Male Marathon Winner with the Fastest Record to Win the Chicago Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nChicago_Record=Chicago_marathon_men.iloc[Chicago_marathon_men.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Chicago_Record)\nprint(\"                                    \")\nprint('=================================================================================')","1e341e6e":"fig = px.bar(World_Marathon_male, x=\"winner\", y=\"year\", color=\"marathon\", title=\"Marathon Winner\")\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=10))\nfig.update_layout(\n    title='Most Marathon Male winner wrt City and Year')\nfig.show()","ee61abaa":"fig = px.treemap(World_Marathon_male, path=['winner'],hover_data=['winner','country'],color='country')\nfig.update_layout(\n    title='Statewise Urban Population and their Hospital Facilities for Covid19')\nfig.update_layout(\n    title='Individual Male Winners with Countries')\nfig.show()","052c4e23":"print(\"Male Marathon Winner with the Fastest Record to Win the Marathon\")\nprint('_________________________________________________________________________________')\nFastest_Marathon_Runner=World_Marathon_male.iloc[World_Marathon_male.groupby(['gender'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Fastest_Marathon_Runner)\nprint(\"                                    \")\nprint('=================================================================================')\nprint('                                                                                 ')\nprint(\"Male Marathon Winner with the Slowest Record to Win the Marathon\")\nprint('_________________________________________________________________________________')\nSlowest_Marathon_Runner=World_Marathon_male.iloc[World_Marathon_male.groupby(['gender'])['Winner_Time_in_Min'].idxmax()][['year','marathon','winner','country','gender','time']]\nprint(Slowest_Marathon_Runner)\nprint(\"                                    \")\nprint('=================================================================================')","d64b3520":"World_Marathon_female = World_Marathon[World_Marathon['gender']=='Female']\nWorld_Marathon_female.head()\nWorld_Marathon_female.reset_index(inplace = True)","733e46e4":"Tokyo_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='Tokyo']\nTokyo_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(Tokyo_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Boston Women Marathon Winners with their Time')\nfig.show()","369c7263":"print(\"Female Marathon Winner with the Fastest Record to Win the Tokyo Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nTokyo_Record=Tokyo_marathon_women.iloc[Tokyo_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Tokyo_Record)\nprint(\"                                    \")\nprint('=================================================================================')","7e8061f5":"Boston_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='Boston']\nBoston_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(Boston_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Boston Women Marathon Winners with their Time')\nfig.show()","2b800b08":"print(\"Female Marathon Winner with the Fastest Record to Win the Boston Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nBoston_Record=Boston_marathon_women.iloc[Boston_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Boston_Record)\nprint(\"                                    \")\nprint('=================================================================================')","5dd9806f":"Berlin_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='Berlin']\nBerlin_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(Berlin_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Boston Women Marathon Winners with their Time')\nfig.show()","25055d23":"print(\"Female Marathon Winner with the Fastest Record to Win the Berlin Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nBerlin_Record=Berlin_marathon_women.iloc[Berlin_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Berlin_Record)\nprint(\"                                    \")\nprint('=================================================================================')","ebc1f222":"NYC_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='NYC']\nNYC_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(NYC_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='NYC Women Marathon Winners with their Time')\nfig.show()","064941a7":"print(\"Female Marathon Winner with the Fastest Record to Win the NYC Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nNYC_Record=NYC_marathon_women.iloc[NYC_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(NYC_Record)\nprint(\"                                    \")\nprint('=================================================================================')","8cdbcfc7":"London_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='London']\nLondon_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(London_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='NYC Women Marathon Winners with their Time')\nfig.show()","9c263137":"print(\"Female Marathon Winner with the Fastest Record to Win the London Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nLondon_Record=London_marathon_women.iloc[London_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(London_Record)\nprint(\"                                    \")\nprint('=================================================================================')","7c72bd4f":"Chicago_marathon_women = World_Marathon_female[World_Marathon_female['marathon']=='Chicago']\nChicago_marathon_women.reset_index(inplace = True)\n\nfig = px.scatter(Chicago_marathon_women, x=\"country\", y=\"Winner_Time_in_Min\", color = 'year')\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=14))\nfig.update_layout(\n    title='Chicago Women Marathon Winners with their Time')\nfig.show()","5ec7db73":"print(\"Female Marathon Winner with the Fastest Record to Win the Chicago Marathon\")\nprint('_________________________________________________________________________________')\nprint(\"                                    \")\nChicago_Record=Chicago_marathon_women.iloc[Chicago_marathon_women.groupby(['marathon'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Chicago_Record)\nprint(\"                                    \")\nprint('=================================================================================')","416a6adf":"fig = px.bar(World_Marathon_female, x=\"winner\", y=\"year\", color=\"marathon\", title=\"Marathon Winner\")\nfig.update_xaxes(categoryorder=\"total descending\",tickangle=270, tickfont=dict(size=10))\nfig.update_layout(\n    title='Most Marathon Female winner wrt City and Year')\nfig.show()","6c609f52":"fig = px.treemap(World_Marathon_female, path=['winner'],hover_data=['winner','country'],color='country')\nfig.update_layout(\n    title='Statewise Urban Population and their Hospital Facilities for Covid19')\nfig.update_layout(\n    title='Individual Female Winners with Countries')\nfig.show()","e1c7c8b0":"print(\"Female Marathon Winner with the Fastest Record to Win the Marathon\")\nprint('_________________________________________________________________________________')\nFastest_Marathon_Runner=World_Marathon_female.iloc[World_Marathon_female.groupby(['gender'])['Winner_Time_in_Min'].idxmin()][['year','marathon','winner','country','gender','time']]\nprint(Fastest_Marathon_Runner)\nprint(\"                                    \")\nprint('=================================================================================')\nprint('                                                                                 ')\nprint(\"Female Marathon Winner with the Slowest Record to Win the Marathon\")\nprint('_________________________________________________________________________________')\nSlowest_Marathon_Runner=World_Marathon_female.iloc[World_Marathon_female.groupby(['gender'])['Winner_Time_in_Min'].idxmax()][['year','marathon','winner','country','gender','time']]\nprint(Slowest_Marathon_Runner)\nprint(\"                                    \")\nprint('=================================================================================')","5669428c":"## Berlin Men's Marathon and their Time","d25f2e30":"## Chicago Men's Marathon and their Time","b191840e":"## NYC Men's Marathon and their Time","4e08522a":"## London Female's Marathon and their Time","656fd20c":"## Tokyo Female's Marathon and their Time","009eedad":"## Currently Working on it...If you liked this much Upvote it","eef1e6e9":"## London Men's Marathon and their Time","180041a6":"Generally Male Marathon winners completed their Race 02hrs and 07 Minutes to 02hrs and 19minutes","0175ec0c":"## Most Countries Winning Marathon","e371d87c":"## Marathon Organized By Cities","5c3c81db":"## FEMALE PARTICIPATION","3bc5cb51":"## Overall Genderwise Winner Marathon","fdb76579":"## Chicago Female's Marathon and their Time","0d080b87":"## NYC Female's Marathon and their Time","d72a8cb3":"From Above Analysis \n\n1. Most Femen Marathon Record Belongs to **Kenya**\n2. From above analysis of countrywise time Marathon winner, We can see **KENYA** and **Ethopia** are ruling Female's Marathon competition, and this guys are having the Best records of finishing Marathon in early time.\n3. During earlier time of Marathon **USA** was the leader in Marathon Competition","7c5d3de9":"## Individual Female Winners with Countries","c065a696":"Generally Female Marathon winners completed their Race 02hrs and 23 Minutes to 02hrs and 30minutes","524d1cb9":"## Boston Men's Marathon and their Time","f143c3f1":"## Berlin Female's Marathon and their Time","92ff8b33":"## Marathon Winner throughout the Years","129b4724":"#### BILL RODGERS from USA is one of the successful Marathon Runners Winning 8 Marathons","194c05c6":"## Most Marathon Male winner wrt City and Year","c01afdb4":"## Most Marathon Female winner wrt City and Year","c686fa99":"## Individual Male Winners with Countries","7f1e0b64":"## TIME\n\nLet's Check the **time** taken by winners and its relation with other factors.","5543e49a":"## MALE PARTICIPATION","ea622208":"#### Grete Waitz is one of the successful Female Marathon Runners Winning 11 Marathons","47bb1968":"## Tokyo Men's Marathon and their Time","1acb68ae":"From Above Analysis \n\n1. Every Men Marathon Record Belongs to **Kenya**\n2. From above analysis of countrywise time Marathon winner, We can see **KENYA** is ruling Men's Marathon competition, and this guys are having the Best records of finishing Marathon in early time.\n3. During earlier time of Marathon **USA** was the leader in Marathon Competition","3cf5eab3":"## Boston Female's Marathon and their Time"}}