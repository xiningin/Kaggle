{"cell_type":{"32e083ad":"code","ae8cbf50":"code","98d10487":"code","68e5c45b":"code","fe483098":"code","ec5dd0b5":"code","9b8e7e49":"code","8ed77970":"code","ee28279a":"code","f2c8dbc5":"code","b73ce323":"code","b44f9d35":"code","edce7653":"code","b9b62027":"code","85c403f1":"markdown","91bb7161":"markdown","0d148056":"markdown"},"source":{"32e083ad":"# General imports\nimport numpy as np\nimport pandas as pd\nimport os\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","ae8cbf50":"WEIGHT = 1 # best to keep between 1 and 2 from the orignal authors","98d10487":"submission = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\ntest = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\nsub_best = pd.read_csv('..\/input\/minmax-highest-public-lb-9619\/submission.csv')","68e5c45b":"files_sub = [\n    '..\/input\/minmax-highest-public-lb-9619\/submission.csv',\n    '..\/input\/minmax-ensemble-0-9526-lb\/submission.csv',\n    '..\/input\/new-basline-np-log2-ensemble-top-10\/submission.csv',\n    '..\/input\/stacking-ensemble-on-my-submissions\/submission_mean.csv',\n    '..\/input\/analysis-of-melanoma-metadata-and-effnet-ensemble\/ensembled.csv',\n    '..\/input\/eda-modelling-of-the-external-data-inc-ensemble\/external_meta_ensembled.csv',\n    '..\/input\/submission-exploration\/submission.csv',\n    '..\/input\/rc-fork-siim-isic-melanoma-384x384\/sub_EfficientNetB2_384.csv',\n    '..\/input\/train-cv\/submission.csv',\n    '..\/input\/triple-stratified-kfold-with-tfrecords\/submission.csv',\n    '..\/input\/rank-then-blend\/blend_sub.csv',\n    '..\/input\/analysis-of-melanoma-metadata-and-effnet-ensemble\/blended_effnets.csv',\n    '..\/input\/cs0099\/blended_effnets.csv',\n    '..\/input\/siim-isic-melanoma-classification-ensemble\/submission.csv',\n    '..\/input\/minmax-ensemble-0-9526-lb\/submission.csv',\n    '..\/input\/stacking-ensemble-on-my-submissions\/submission_median.csv',\n    '..\/input\/cs0099\/submission.csv',\n    '..\/input\/melanoma-pytorch-starter-efficientnet\/submission.csv',\n    '..\/input\/power-of-metadata-xgboost-cnn-ensemble\/submission.csv',\n    '..\/input\/melanoma-detection-with-pytorch\/submission.csv',\n    '..\/input\/siim-isic-multiple-model-training-stacking\/submission_mean.csv',\n    '..\/input\/post-processing-technique-c-f-1st-place-jigsaw\/submission.csv',\n    '..\/input\/analysis-of-melanoma-metadata-and-effnet-ensemble\/meta_simplified_img_data.csv',\n    '..\/input\/eda-modelling-of-the-external-data-inc-ensemble\/external_tabular_predicts.csv',\n    '..\/input\/public-blender-with-rank-data-0-946\/submission.csv',\n    '..\/input\/cs0099\/submission_jig.csv',\n    '..\/input\/blending-submissions-0-966\/submission.csv',\n    '..\/input\/incredible-tpus-finetune-effnetb0-b6-at-once\/submission_models_blended.csv',\n    '..\/input\/dark-magic-blending-0-9603\/submission.csv',\n    '..\/input\/cs0099\/submission_mean.csv',\n    '..\/input\/cs0099\/submission.csv',\n    '..\/input\/inference-melanoma-crazy-fast\/submission.csv',\n    '..\/input\/siim-isic-efficientnet-b6-single-model-lb-0-9475\/submission.csv',\n    '..\/input\/simple-oof-ensembling-methods-for-classification\/submission_bo.csv',\n    '..\/input\/inference-melanoma-crazy-fast\/submission.csv',\n    '..\/input\/let-the-magic-begin\/stacking.csv'\n    \n]\nfiles_sub = sorted(files_sub)\nprint(len(files_sub))\nfiles_sub","fe483098":"for file in files_sub:\n    test[file.replace(\".csv\", \"\")] = pd.read_csv(file).sort_values('image_name')[\"target\"]\ntest['id'] = test.index","ec5dd0b5":"# Derive the given sub increases or decreases in score\ntest[\"diff_good1\"] =  test['..\/input\/new-basline-np-log2-ensemble-top-10\/submission'] - test['..\/input\/stacking-ensemble-on-my-submissions\/submission_median']\n\n\ntest[\"diff_good2\"] =  test['..\/input\/eda-modelling-of-the-external-data-inc-ensemble\/external_meta_ensembled'] - test['..\/input\/let-the-magic-begin\/stacking']\n    \n    \ntest[\"diff_good3\"] = test['..\/input\/minmax-ensemble-0-9526-lb\/submission'] - test['..\/input\/rc-fork-siim-isic-melanoma-384x384\/sub_EfficientNetB2_384']\n    \n    \ntest[\"diff_good4\"] = test['..\/input\/analysis-of-melanoma-metadata-and-effnet-ensemble\/ensembled'] - test['..\/input\/rank-then-blend\/blend_sub']\n    \n\n# test[\"diff_good5\"] = test['..\/input\/submission-exploration\/submission'] - test['..\/input\/new-basline-np-log2-ensemble-top-10\/submission']\n\n\ntest[\"diff_good6\"] = test['..\/input\/simple-oof-ensembling-methods-for-classification\/submission_bo'] - test['..\/input\/siim-isic-efficientnet-b6-single-model-lb-0-9475\/submission']\n\n\ntest[\"diff_bad1\"] = test['..\/input\/triple-stratified-kfold-with-tfrecords\/submission'] - test['..\/input\/train-cv\/submission']","9b8e7e49":"test[\"sub_best\"] = test['..\/input\/minmax-highest-public-lb-9619\/submission']\n\ncol_comment = [\"id\", \"image_name\", \"patient_id\", \"sub_best\"]\ncol_diff = [column for column in test.columns if \"diff\" in column]\ntest_diff = test[col_comment + col_diff].reset_index(drop=True)\n\ntest_diff[\"diff_avg\"] = test_diff[col_diff].mean(axis=1) # the mean trend","8ed77970":"# Apply the post-processing technique in one line (as explained in the pseudo-code of my post.\ntest_diff[\"sub_new\"] = test_diff.apply(lambda x: (1+WEIGHT*x[\"diff_avg\"])*x[\"sub_best\"] if x[\"diff_avg\"]<0 else (1-WEIGHT*x[\"diff_avg\"])*x[\"sub_best\"] + WEIGHT*x[\"diff_avg\"] , axis=1)","ee28279a":"submission[\"target\"] = sub_best[\"target\"]\nsubmission.head()","f2c8dbc5":"test_diff.head()","b73ce323":"submission.loc[test[\"id\"], \"target\"] = test_diff[\"sub_new\"].values","b44f9d35":"submission.to_csv(\"submission.csv\", index=False)\nsubmission.head()","edce7653":"plt.hist(submission.target,bins=100)\nplt.show()","b9b62027":"fig, ax = plt.subplots(figsize=(12,5))\nsns.distplot(submission['target'], hist_kws={\n                 'rwidth': 0.75,\n                 'edgecolor': 'black',\n                 'alpha': 0.3\n             }, color='#C3073F')\nax.set_title('Final Predictions')\nplt.show()","85c403f1":"# LB 96.48","91bb7161":"- Thanks (upvote it): https:\/\/www.kaggle.com\/rafiko1\/1st-place-jigsaw-post-processing-example\n- Thanks (upvote it) : https:\/\/www.kaggle.com\/c\/jigsaw-multilingual-toxic-comment-classification\/discussion\/160862","0d148056":"# Imports"}}