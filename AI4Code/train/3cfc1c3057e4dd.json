{"cell_type":{"5daa0b90":"code","85cfee0b":"code","bddaebdf":"code","640a5858":"code","b7aefaff":"code","d7b70d42":"code","49cbe158":"code","9a0d6fc3":"code","7d2ce55b":"code","89f9471b":"code","7e27bd11":"code","6f743e53":"code","cc1a7361":"code","226caf35":"code","3a8d31d5":"code","9aa3cc33":"code","ee0a8342":"code","28a47938":"code","2c6c3301":"code","95be4466":"code","02c527b5":"code","121b328d":"code","ad4c46e0":"code","32c46c70":"code","b870104e":"code","234bd095":"code","0f5471b9":"code","ff4e185c":"code","089856bc":"code","c947d404":"code","3a78352f":"code","6a0de259":"code","0fcc5c6b":"code","f8190708":"code","b50fb6ae":"code","4945885d":"code","d2e05073":"code","2cf35226":"code","138a26e4":"code","ac85bd7f":"code","e9345ea6":"code","47872834":"code","44716b86":"code","6d954b88":"code","59f51098":"code","12fe1215":"code","d1b7c670":"code","44c32ea8":"code","82d8a7cb":"code","38ae2ce3":"code","611b8ddf":"code","72009c96":"markdown"},"source":{"5daa0b90":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf\n\nfrom sklearn.metrics import confusion_matrix, classification_report\n\n\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, MaxPool2D , Flatten\nfrom keras.preprocessing.image import ImageDataGenerator \n","85cfee0b":"data= pd.read_csv(\"..\/input\/skin-cancer-mnist-ham10000\/hmnist_28_28_RGB.csv\")\n","bddaebdf":"data","640a5858":"data.isna().sum().sum()","b7aefaff":"class0=data[data['label']==0]\nclass1=data[data['label']==1]\nclass2=data[data['label']==2]\nclass3=data[data['label']==3]\nclass4=data[data['label']==4]\nclass5=data[data['label']==5]\nclass6=data[data['label']==6]","d7b70d42":"class1.shape","49cbe158":"data['label'].value_counts()","9a0d6fc3":"data.shape","7d2ce55b":"class0","89f9471b":"class0.shape","7e27bd11":"class0=class0.drop('label', axis=1).copy()\nclass1=class1.drop('label', axis=1).copy()\nclass2=class2.drop('label', axis=1).copy()\nclass3=class3.drop('label', axis=1).copy()\nclass4=class4.drop('label', axis=1).copy()\nclass5=class5.drop('label', axis=1).copy()\nclass6=class6.drop('label', axis=1).copy()","6f743e53":"class0.shape","cc1a7361":"class0 = np.array(class0)\nclass0 = class0.reshape(-1, 28, 28, 3)\nclass1 = np.array(class1)\nclass1 = class1.reshape(-1, 28, 28, 3)\nclass2 = np.array(class2)\nclass2 = class2.reshape(-1, 28, 28, 3)\nclass3 = np.array(class3)\nclass3 = class3.reshape(-1, 28, 28, 3)\nclass4 = np.array(class4)\nclass4 = class4.reshape(-1, 28, 28, 3)\nclass5 = np.array(class5)\nclass5 = class5.reshape(-1, 28, 28, 3)\nclass6 = np.array(class6)\nclass6 = class6.reshape(-1, 28, 28, 3)","226caf35":"class6.shape","3a8d31d5":"class6_a=class6\nclass6_b=class6[:,::-1,:,:]\nclass6_c=class6[:,:,::-1,:]\nclass6_d=np.transpose(class6_a,(0,2,1,3))\nclass6_e=np.transpose(class6_b,(0,2,1,3))\nclass6_f=np.transpose(class6_c,(0,2,1,3))","9aa3cc33":"class6_d.shape","ee0a8342":"plt.figure(figsize=(2,2))\nplt.imshow(class6_a[0])\nplt.figure(figsize=(2,2))\nplt.imshow(class6_b[0])\nplt.figure(figsize=(2,2))\nplt.imshow(class6_c[0])\nplt.figure(figsize=(2,2))\nplt.imshow(class6_d[0])\nplt.figure(figsize=(2,2))\nplt.imshow(class6_e[0])\nplt.figure(figsize=(2,2))\nplt.imshow(class6_f[0])","28a47938":"class0_a=class0\nclass0_b=class0[:,::-1,:,:]\nclass0_c=class0[:,:,::-1,:]\nclass0_d=np.transpose(class0_a,(0,2,1,3))\nclass0_e=np.transpose(class0_b,(0,2,1,3))\nclass0_f=np.transpose(class0_c,(0,2,1,3))\n\nclass1_a=class1\nclass1_b=class1[:,::-1,:,:]\nclass1_c=class1[:,:,::-1,:]\nclass1_d=np.transpose(class1_a,(0,2,1,3))\nclass1_e=np.transpose(class1_b,(0,2,1,3))\nclass1_f=np.transpose(class1_c,(0,2,1,3))\n\nclass2_a=class2\nclass2_b=class2[:,::-1,:,:]\nclass2_c=class2[:,:,::-1,:]\nclass2_d=np.transpose(class2_a,(0,2,1,3))\nclass2_e=np.transpose(class2_b,(0,2,1,3))\nclass2_f=np.transpose(class2_c,(0,2,1,3))\n\nclass3_a=class3\nclass3_b=class3[:,::-1,:,:]\nclass3_c=class3[:,:,::-1,:]\nclass3_d=np.transpose(class3_a,(0,2,1,3))\nclass3_e=np.transpose(class3_b,(0,2,1,3))\nclass3_f=np.transpose(class3_c,(0,2,1,3))\n\nclass5_a=class5\nclass5_b=class5[:,::-1,:,:]\nclass5_c=class5[:,:,::-1,:]\nclass5_d=np.transpose(class5_a,(0,2,1,3))\nclass5_e=np.transpose(class5_b,(0,2,1,3))\nclass5_f=np.transpose(class5_c,(0,2,1,3))","2c6c3301":"class_0=np.concatenate([class0_a,class0_b,class0_c,class0_d,class0_e,class0_f])\n","95be4466":"class0.shape","02c527b5":"class_0.shape","121b328d":"class_0=np.concatenate([class0_a,class0_b,class0_c,class0_d,class0_e,class0_f])\nclass_1=np.concatenate([class1_a,class1_b,class1_c,class1_d,class1_e,class1_f])\nclass_2=np.concatenate([class2_a,class2_b,class2_c,class2_d,class2_e,class2_f])\nclass_4=class4\nclass_3=np.concatenate([class3_a,class3_b,class3_c,class3_d,class3_e,class3_f])\nclass_5=np.concatenate([class5_a,class5_b,class5_c,class5_d,class5_e,class5_f])\nclass_6=np.concatenate([class6_a,class6_b,class6_c,class6_d,class6_e,class6_f])\n","ad4c46e0":"print(class_0.shape)\nprint(class_1.shape)\nprint(class_2.shape)\nprint(class_3.shape)\nprint(class_4.shape)\nprint(class_5.shape)\nprint(class_6.shape)","32c46c70":"X=np.concatenate([class_0,class_1,class_2,class_3,class_4,class_5,class_6])\nX.shape","b870104e":"y0=[0]*1962\ny0 = np.array(y0)\ny1=[1]*3084\ny1 = np.array(y1)\ny2=[2]*6594\ny2 = np.array(y2)\ny3=[3]*690\ny3 = np.array(y3)\ny4=[4]*6705\ny4 = np.array(y4)\ny5=[5]*852\ny5 = np.array(y5)\ny6=[6]*6678\ny6 = np.array(y6)\n","234bd095":"X=X\/255","0f5471b9":"X[0]","ff4e185c":"y=np.concatenate([y0,y1,y2,y3,y4,y5,y6])\ny.shape","089856bc":"# t=[class0_a,class0_b,class0_c,class0_d,class0_e,class0_f]\n","c947d404":"# class_0=pd.concat(t)","3a78352f":"# z=[class_0,class_1,class_2,class_3,class_4,class_5,class_6]\n# sampled_data=pd.concat(z)","6a0de259":"# y0=[0]*113\n# y0 = np.array(y0)\n# y1=[1]*115\n# y1 = np.array(y1)","0fcc5c6b":"# y=np.concatenate([y0,y1])\n# y.shape","f8190708":"y.shape","b50fb6ae":"# y[221]","4945885d":"# print(y0.shape)","d2e05073":"# len(y0)\nl=X[0][0]","2cf35226":"m=X[0][1]","138a26e4":"from sklearn.utils import shuffle\no,p=shuffle(l,m,random_state=3)","ac85bd7f":"l","e9345ea6":"o","47872834":"m","44716b86":"p","6d954b88":"# class0","59f51098":"# len(class0)","12fe1215":"from sklearn.utils import shuffle\nX,y=shuffle(X,y,random_state=3)","d1b7c670":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)","44c32ea8":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","82d8a7cb":"inputs= tf.keras.Input(shape=(28,28,3), name='input')\n\nconv1= tf.keras.layers.Conv2D(filters= 16, kernel_size= 3, name= 'conv1')(inputs)\n\nmaxpool1= tf.keras.layers.MaxPooling2D(name= 'maxpool1')(conv1)\n\nconv2= tf.keras.layers.Conv2D(filters=32, kernel_size=3, name='conv2')(maxpool1)\n\nmaxpool2= tf.keras.layers.MaxPooling2D(name= 'maxpool2')(conv2)\n\nconv3= tf.keras.layers.Conv2D(filters= 64, kernel_size=3, name='conv3')(maxpool2)\n\nmaxpool3= tf.keras.layers.MaxPooling2D(name='maxpool3')(conv3)\n\navgpool= tf.keras.layers.GlobalAveragePooling2D(name='avgpool')(maxpool3)\n\noutputs= tf.keras.layers.Dense(7, activation='softmax', name='output')(avgpool)\n\nmodel= tf.keras.Model(inputs= inputs, outputs= outputs)\n\nprint(model.summary())\n\ntf.keras.utils.plot_model(model)","38ae2ce3":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n\nbatch_size= 32\nepochs= 50\n\nhistory= model.fit(X_train,y_train, validation_split=0.2,\n                    batch_size= batch_size,\n                    epochs=epochs,\n                    callbacks=[\n                      tf.keras.callbacks.EarlyStopping(\n                      monitor='val_loss',\n                      patience=3,\n                      restore_best_weights=True\n                      )\n                  ]\n                  )","611b8ddf":"model_acc = model.evaluate(X_test, y_test, verbose=0)[1]\n\nprint(\"Test Accuracy: {:.3f}%\".format(model_acc * 100))","72009c96":"###### "}}