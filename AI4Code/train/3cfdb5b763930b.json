{"cell_type":{"94c52a0f":"code","8a1f2fe6":"code","0cb36793":"code","80eec7a3":"code","9504ea09":"code","97d8667d":"code","e6667b45":"code","a078c176":"code","d8dc0823":"code","2f966e93":"code","3b637c9f":"code","dbf09c23":"code","b914f173":"code","31954486":"code","6ba0bcdd":"code","e5df8085":"code","542b851e":"code","ebcec889":"markdown","02ee676f":"markdown","25a6a5f4":"markdown","6ecae2ac":"markdown","488b1850":"markdown","3fd02e7c":"markdown","9713a2a7":"markdown","ac8296fc":"markdown","f1da3f8c":"markdown","68e01f86":"markdown","81e66e9f":"markdown","eef2a168":"markdown","c4d0af09":"markdown","d7cac347":"markdown","a9c55223":"markdown","9ae418b7":"markdown","c91cfd9b":"markdown","a079108b":"markdown","dac13819":"markdown","276774d0":"markdown","82c0fcd3":"markdown","7d6f3dad":"markdown","83038f4d":"markdown","1396bb20":"markdown","19881ba4":"markdown","c0f9b7b5":"markdown","c3838348":"markdown"},"source":{"94c52a0f":"import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, explained_variance_score, mean_absolute_error, mean_squared_error\nfrom sklearn import preprocessing\nfrom sklearn import utils\nfrom math import sqrt\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8a1f2fe6":"data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv', sep = ',')\n\ndata['sex'] =data['sex'].astype('category')\ndata['region'] =data['region'].astype('category')\ndata['smoker'] =data['smoker'].astype('category')\n\ndata.head()","0cb36793":"def Bmi_Classifier(row):\n    if row['bmi'] < 18.5:\n        return \"underweight\"\n    elif row['bmi'] < 25:\n        return \"normal\"\n    elif row['bmi'] < 30:\n        return \"overweight\"\n    else:\n        return \"obese\"\n\ndef Age_Classifier(row):\n    if row['age'] < 17:\n        return \"child\"\n    elif row['age'] < 31:\n        return \"adult\"\n    elif row['age'] < 46:\n        return \"middle-aged\"\n    else:\n        return \"old-aged\"\n\ndata['bmi_status'] = data.apply(Bmi_Classifier, axis=1)\ndata['age_status'] = data.apply(Age_Classifier, axis=1)\n\ndata.head()","80eec7a3":"print('There are',data[data['smoker'] == 'no']['age'].count(),'non-smokers in the dataset')\nprint('There are',data[data['smoker'] == 'yes']['age'].count(),'smokers in the dataset')","9504ea09":"smokedata = data.groupby('smoker').mean().round(2)\nsmokedata.head()","97d8667d":"fig = plt.figure(figsize = (10,8));\nsns.set_theme()\n\nsns.boxplot(data = data, \n            x = 'children', \n            y = 'charges', \n            hue = 'smoker', \n            palette = 'Set1');\n\nplt.xlabel('Children', fontweight = 'bold');\nplt.ylabel('Charges', fontweight = 'bold');\nplt.title('Children vs Charges', fontweight = 'bold');","e6667b45":"fig = plt.figure(figsize = (10,8));\n\nsns.boxplot(data = data, \n            x = 'region', \n            y = 'charges', \n            hue = 'smoker', \n            palette = 'Set1');\n\nplt.xlabel('Region', fontweight = 'bold');\nplt.ylabel('Charges', fontweight = 'bold');\nplt.title('Region vs Charges', fontweight = 'bold');","a078c176":"sns.pairplot(data[['age','bmi','charges','smoker']], \n             hue = 'smoker', \n             height = 3, \n             palette = 'Set1');","d8dc0823":"sns.lmplot(data = data, \n           x = 'bmi', \n           y = 'charges', \n           col = 'smoker', \n           hue = 'sex',\n           palette = 'Set1',\n           height = 6, \n           ci = None);","2f966e93":"hm = data[data['smoker'] == 'yes'][['age','bmi','children','charges']].corr()\n\nfig = plt.figure(figsize = (10,8))\nsns.heatmap(hm, cmap = 'Reds', annot = True, annot_kws = {'size':20});","3b637c9f":"data2 = data[data['smoker'] == 'yes'][['sex', 'children', 'region', 'charges','bmi_status', 'age_status']]\nnew_data = pd.get_dummies(data2, columns = ['sex','children','region','bmi_status','age_status'])\nnew_data.head()","dbf09c23":"\n\nX = new_data.drop('charges', axis = 1).values\ny = new_data['charges']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, train_size = 0.80, test_size = 0.20, random_state = 15)\n\nlm = LinearRegression(fit_intercept = True)\nlm.fit(X_train, y_train);\n\ny_pred = lm.predict(X_train)","b914f173":"print('The accuracy on the training data:',lm.score(X_train, y_train).round(3))\nprint('The accuracy on the testing data:',lm.score(X_test, y_test).round(3))\nprint(' ')\nprint('Root Mean Squared Error (RMSE)')\nprint('The RMSE on the training dataset:', round(sqrt(mean_squared_error(y_train, y_pred)),3))\nprint('The RMSE on the testing dataset:', round(sqrt(mean_squared_error(y_test, lm.predict(X_test))),3))\nprint(' ')\nprint('Mean Absolute Error (MAE)')\nprint('The MAE on the training dataset:', mean_absolute_error(y_train, y_pred).round(3))\nprint('The MAE on the testing dataset:', mean_absolute_error(y_test, lm.predict(X_test)).round(3))","31954486":"plt.figure(figsize = (12,8))\nplt.scatter(y_train, y_pred);\n\nplt.plot([y_train.min(), y_train.max()], \n         [y_train.min(), y_train.max()], \n         'k--', \n         c = 'red',\n         lw = 4);\n\nplt.xlabel('Actual Values', fontweight = 'bold');\nplt.ylabel('Predicted Values', fontweight = 'bold');\nplt.title('Actual vs Predicted Values', fontweight = 'bold');","6ba0bcdd":"plt.figure(figsize = (12,8));\n\nsns.residplot(y_train, y_pred, line_kws={\"color\": \"red\"});\n\nplt.xlabel('Actual Charges', fontweight = 'bold');\nplt.ylabel('Residuals', fontweight = 'bold');\nplt.title('Actual Charges vs Residuals', fontweight = 'bold');","e5df8085":"X2 = new_data.drop('charges', axis = 1)\n\nInter = lm.intercept_\nCoeff = lm.coef_\nCoeff = Coeff.reshape(-1,19)\n\nCoeff_df = pd.DataFrame(Coeff, columns = [X2.columns])\nCoeff_df","542b851e":"sex = ['sex_female']\nchildren = ['children_2']\nregion = ['region_southwest']\nbmi_status = ['bmi_status_normal']\nage_status = ['age_status_middle-aged']\n\npred1 = (Inter) + (Coeff_df[sex].values[0] * 1) + (Coeff_df[children].values[0] * 1) + (Coeff_df[region].values[0] * 1) + (Coeff_df[bmi_status].values[0] * 1) +(Coeff_df[age_status].values[0] * 1)\n\nprint('Your predicted insurance cost is', pred1[0].round(2), 'dollars')","ebcec889":"## Accuracy of the model\n\nWe measure the accuracy of the model using:\n\n- Overall score\n- Root Mean Squared Error\n- Mean Absolute Error","02ee676f":"Again, there doesn't seem to be much of a difference. We can see that non-smokers never pass the 40,000 dollar level, while smokers never go below 10,000. \n\nLets create a pairplot to see if there are any strong correlations","25a6a5f4":"\n\n---\n\n","6ecae2ac":"There doesn't seem to be a significant difference when the number of children increase, but what about regional differences?","488b1850":"### What are the averages for the columns based on whether the patient is a smoker or not?","3fd02e7c":"We can see here that the average cost for a smoker is 32,050 dollars which is **3.8 times** more than the average cost of non-smokers, with 8,434 dollars.\n\nLets look at how the data is distributed betweeen the number of children and the charges based if the patient smokes or not.","9713a2a7":"Now that we have built our model, lets measure the accuracy","ac8296fc":"While there doesn't seem to be any significant difference based on sex, there is a very obvious difference based on if the patient is a smoker or not. There is a very strong positive correlation, but what exactly is the number?","f1da3f8c":"### Pairplot","68e01f86":"### How many smokers and non-smokers are in the dataset?","81e66e9f":"The BMI and charges graph looks very interesting, and it seems to have a very strong positive correlation when it comes to smokers, lets take a closer look","eef2a168":"\n\n---\n\n","c4d0af09":"\n\n---\n\n","d7cac347":"### Creating numeric columns for the different categories","a9c55223":"Now that we are done loading the data, we can begin exploring it to find anything interesting","9ae418b7":"\n\n---\n\n","c91cfd9b":"## Loading the data","a079108b":"Now that we have all our coefficients and the intercept, we can create our prediction forumla. By changing the values for the 5 variables, we can predict the cost for the patient","dac13819":"## Linear Regression\n\nI'll now begin working on the regression model, which will be based on smokers as opposed to non-smokers. This will make the model a bit more accurate, but will only be applicable when predicting future values for smokers.","276774d0":"## Data Exploration","82c0fcd3":"#  Insurance Linear Regression Forecast by Ammar Altalibi\n\nUses 'Medical Cost Personal' dataset from Kaggle\n\nLink to dataset: \nhttps:\/\/www.kaggle.com\/mirichoi0218\/insurance\n\nThe data is comprised of insurance costs for over 1,300 patients and includes information such as age, BMI, charges, etc.\n\n\n---\n\n\n\nThis is my linear regression model of insurance costs. I used simple machine learning code to apply a regression model in order to predict charges based on the historical data. I first start by importing all necessary libraries and extensions before loading the dataset.","7d6f3dad":"## Conclusion and Notes\n\nWhile this model is relatively accurate, with over 80% accuracy, we must keep in mind that it can only be applied to smokers. If I attempt to use the same code and apply the model for the dataset, smokers and non-smokers, the accuracy drops to 70%.\n\nThank you for reading!\n","83038f4d":"\n\n---\n\n","1396bb20":"As expected, BMI has the highest correlation for smokers when it comes to charges, and we can now see that it has a value of 0.81 which is considered moderate to high.","19881ba4":"### Building the Regression model\n\nThe training data will be 80% of the data, and the testing will use the remaining 20%","c0f9b7b5":"We then create 2 new columns in order to classify the age and BMI columns. This code is based on the classifiers used by Salik Husseini for his EDA [(link to his work)](https:\/\/www.kaggle.com\/salikhussaini49\/medical-insurance-eda)","c3838348":"## Predicting Insurance Costs\n\nNow that we have a succesful model, lets apply it and predict the costs based on whatever parameters we set"}}