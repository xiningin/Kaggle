{"cell_type":{"9918995e":"code","43f4ffe4":"code","f507a431":"code","7472d151":"code","dd821cb7":"code","88fd4c9e":"code","35f9d775":"code","d3ff72e5":"code","dde7d3fc":"code","5571d573":"code","5baef445":"code","ed3f597b":"code","c83c4e69":"code","ecc8efc7":"code","4b43d413":"code","6186e7da":"code","d5d2506f":"code","51e0b305":"code","9796bdd7":"code","3dd8bbc8":"code","66809339":"code","211e1594":"code","4faa653d":"code","f727e0ee":"code","61ef8db2":"code","6a67a747":"code","cb2d7985":"code","45b2817b":"code","6f91faa2":"code","4dc83ff5":"markdown","61f37730":"markdown","44fbd344":"markdown","e0765acd":"markdown","303265c8":"markdown","5787e120":"markdown","901fbfae":"markdown"},"source":{"9918995e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.impute import SimpleImputer","43f4ffe4":"train=pd.read_csv('..\/input\/iba-ml1-mid-project\/train.csv')\ntest=pd.read_csv('..\/input\/iba-ml1-mid-project\/test.csv')","f507a431":"print('The shape of train data is', train.shape)\nprint('The shape of train data is', test.shape)\nprint('We have {} training rows and {} test rows.'.format(train.shape[0], test.shape[0]))\nprint('We have {} training columns and {} test columns.'.format(train.shape[1], test.shape[1]))","7472d151":"train.describe()","dd821cb7":"test.describe()","88fd4c9e":"test['credit_line_utilization'] = test['credit_line_utilization'].str.replace(',' , '.').astype(float)\ntrain['credit_line_utilization'] = train['credit_line_utilization'].str.replace(',' , '.').astype(float)","35f9d775":"null_df = pd.Series(pd.isnull(train).sum(), name = 'Null').to_frame()\ndisplay(null_df.loc[null_df['Null'] != 0], train.loc[train.isnull().any(axis = 1)]) \n#second table shows that approximately the half of observations have missing values. ","d3ff72e5":"null_df2 = pd.Series(pd.isnull(test).sum(), name = 'Null').to_frame()\ndisplay(null_df2.loc[null_df2['Null'] != 0], test.loc[test.isnull().any(axis = 1)]) \n#the same variables as in the train set have missing values, so indeed no need for null_df2","dde7d3fc":"null_variables = []\n\nfor x in null_df.loc[null_df['Null'] != 0].index:\n    null_variables.append(x)\n    \n    \nnull_variables","5571d573":"#missing values for train set\nfor var in null_variables:\n    print('Missing values form {:.2f}% of total records for'.format((train[var].isnull().sum() \/ train.shape[0]) * 100) + \n          ' ' + var + ' variable.')","5baef445":"#missing values for test set\nfor var in null_variables:\n    print('Missing values form {:.2f}% of total records for'.format((test[var].isnull().sum() \/ test.shape[0]) * 100) + \n          ' ' + var + ' variable.')","ed3f597b":"import pylab\ndef plot_missing_values(df):\n    \"\"\" For each column with missing values plot proportion that is missing.\"\"\"\n    data = [(col, df[col].isnull().sum() \/ len(df)) \n            for col in df.columns if df[col].isnull().sum() > 0]\n    col_names = ['column', 'percent_missing']\n    missing_df = pd.DataFrame(data, columns=col_names).sort_values('percent_missing')\n    pylab.rcParams['figure.figsize'] = (15, 8)\n    missing_df.plot(kind='barh', x='column', y='percent_missing', color = 'green')\n    plt.title('Percent of missing values in columns')","c83c4e69":"train.rename(columns={'number_of_credit_lines': 'no_cdtline', 'number_dependent_family_members': 'no_dep_fmemb', 'ratio_debt_payment_to_income': 'debtpay_inc_ratio',\n                      'credit_line_utilization': 'cdtline_util', 'number_of_previous_late_payments_up_to_59_days': 'no_latepay_up_59d', \n                      'number_of_previous_late_payments_up_to_89_days': 'no_latepay_up_89d', 'number_of_previous_late_payments_90_days_or_more': 'no_latepay_90d_more'}, inplace=True)\n\ntest.rename(columns={'number_of_credit_lines': 'no_cdtline', 'number_dependent_family_members': 'no_dep_fmemb', 'ratio_debt_payment_to_income': 'debtpay_inc_ratio',\n                      'credit_line_utilization': 'cdtline_util', 'number_of_previous_late_payments_up_to_59_days': 'no_latepay_up_59d', \n                      'number_of_previous_late_payments_up_to_89_days': 'no_latepay_up_89d', 'number_of_previous_late_payments_90_days_or_more': 'no_latepay_90d_more'}, inplace=True)","ecc8efc7":"plot_missing_values(train)\nplot_missing_values(test)","4b43d413":"impute_median = SimpleImputer(missing_values = np.nan, strategy = 'median')\n\nfor var in train.columns.values:\n    if train[var].isnull().sum() != 0:\n        train[var] = impute_median.fit_transform(train[[var]]).ravel()  \n        \ndisplay(train.isnull().sum())\n","6186e7da":"for var in test.columns.values:\n    if test[var].isnull().sum() != 0:\n        test[var] = impute_median.transform(test[[var]]).ravel()\n        \ndisplay(test.isnull().sum())","d5d2506f":"print('The number of duplicates in the dataset is {}.'.format(train.duplicated().sum()))","51e0b305":"f, ax = plt.subplots(figsize=(20,35))\n\n\n#############################\nplt.subplot(10,2,1)\ntrain[\"no_latepay_90d_more\"].plot.hist(color= '#b9e769')\nplt.title(\"Number of late payment more than 90 d\",fontsize = 13, color= '#b9e769')\nplt.grid(True)\n###############################\nplt.subplot(10,2,2)\nplt.title(\"Number of late payment more than 90 d Boxplot\",fontsize = 13, color =  '#b9e769')\nsns.boxplot(train[\"no_latepay_90d_more\"], flierprops=dict(markerfacecolor='#b9e769', marker='D'))\n##########################\nplt.subplot(10,2,3)\ntrain[\"no_latepay_up_89d\"].plot.hist('#38b000')\nplt.title(\"Number of late payment up to 89d Histogram\",fontsize = 13, color = '#38b000')\nplt.grid(True)\n##########################\nplt.subplot(10,2,4)\nsns.boxplot(train[\"no_latepay_up_89d\"], flierprops= dict(markerfacecolor='#38b000', marker='v'))\nplt.title(\"Number of late payment up to 89d Boxplot\",fontsize = 13, color= '#38b000')\n#############################\nplt.subplot(10,2,5)\ntrain[\"no_latepay_up_59d\"].plot.hist(color = '#f08080')\nplt.title(\"Number of late payment up to 59d Histogram\",fontsize = 13, color = '#f08080')\nplt.grid(True)\n#############################\nplt.subplot(10,2,6)\nsns.boxplot(train[\"no_latepay_up_59d\"], flierprops=dict(markerfacecolor='#f08080', marker='D'))\nplt.title(\"Number of late payment up to 59d Boxplot\",fontsize = 13, color = '#f08080')\n#######################\nplt.subplot(10,2,7)\ntrain[\"no_dep_fmemb\"].plot.hist(color = '#d5896f')\nplt.title(\"Number of dependent family members\",fontsize = 13, color = '#d5896f')\nplt.grid(True)\n############################\nplt.subplot(10,2,8)\nsns.boxplot(train[\"no_dep_fmemb\"], flierprops=dict(markerfacecolor='#d5896f', marker='D'))\nplt.title(\"Number of dep.family members Boxplot\",fontsize = 13, color = '#d5896f')\n##########################\nplt.subplot(10,2,9)\ntrain[\"no_cdtline\"].plot.hist(color = 'green')\nplt.title(\"Number of credit lines\",fontsize = 13, color = 'green')\nplt.grid(True)\n#########################\nplt.subplot(10,2,10)\nsns.boxplot(train[\"no_cdtline\"], flierprops=dict(markerfacecolor='green', marker='D'))\nplt.title(\"Number of dep.family members Boxplot\",fontsize = 13, color = 'green')\n###########################\nplt.subplot(10,2,11)\ntrain[\"real_estate_loans\"].plot.hist(color = '#25ced1')\nplt.title(\"Number of real estate loans\",fontsize = 13, color = '#25ced1')\nplt.grid(True)\n######################\nplt.subplot(10,2,12)\nsns.boxplot(train[\"real_estate_loans\"], flierprops=dict(markerfacecolor='#25ced1', marker='D'))\nplt.title(\"Number of dep.family members Boxplot\",fontsize = 13, color = '#25ced1')\n######################\nplt.subplot(10,2,13)\ntrain[\"debtpay_inc_ratio\"].plot.hist(color = '#a26769')\nplt.title(\"Debtpay income ratio \",fontsize = 13, color = '#a26769')\nplt.grid(True)\n####################\nplt.subplot(10,2,14)\nsns.boxplot(train[\"debtpay_inc_ratio\"], flierprops = dict(markerfacecolor='#a26769', marker='D'))\nplt.title(\"Debtpay income ratio Boxplot\",fontsize = 13, color= '#a26769')\n#####################\nplt.subplot(10,2,15)\ntrain[\"cdtline_util\"].plot.hist(color = '#9381ff')\nplt.title(\"Creditline utilization \",fontsize = 13, color = '#9381ff')\nplt.grid(True)\n#####################\nplt.subplot(10,2,16)\nsns.boxplot(train[\"cdtline_util\"], flierprops=dict(markerfacecolor='#9381ff', marker='D'))\nplt.title(\"Creditline utilization Boxplot\",fontsize = 13, color = '#9381ff')\n################################\nplt.subplot(10,2,17)\ntrain[\"age\"].plot.hist(color = '#54478c')\nplt.title(\"Age distribution\",fontsize = 13, color = '#54478c')\nplt.grid(True)\n####################\nplt.subplot(10,2,18)\nsns.boxplot(train[\"age\"], flierprops=dict(markerfacecolor='#54478c', marker='D'))\nplt.title(\"Age Boxplot\",fontsize = 13, color = '#54478c')\n#########################\nplt.subplot(10,2,19)\ntrain[\"monthly_income\"].plot.hist(color = '#f29e4c')\nplt.title(\"Monthly Income\",fontsize = 13, color = '#f29e4c')\nplt.grid(True)\n#################\nplt.subplot(10,2,20)\nplt.title( \"Monthly Income Boxplot\",fontsize = 13, color = '#f29e4c')\nsns.boxplot(train[\"monthly_income\"], flierprops=dict(markerfacecolor='#f29e4c', marker='v'))","9796bdd7":"#Lets see variable`s skewness coeffs. It is easily recognizable that in the test set monthly income and \n#cdtline utilization variable`s skewness are high rather than others\nprint(train.skew())\nprint(test.skew())","3dd8bbc8":"train[['no_dep_fmemb','defaulted_on_loan']].groupby('no_dep_fmemb').agg(['mean','count']).sort_values(by=[('defaulted_on_loan','mean')])\n#There is not an easily recognizable pattern between these variables. But it is obvious that dependent family members are frequent between 0:4","66809339":"plt.figure(figsize=(8, 6))\nsns.boxplot(x='defaulted_on_loan', y='monthly_income', data=train, flierprops=dict(markerfacecolor='green', marker='D'))\n#we can see that non default side of the plot has extremes more than defaulted side","211e1594":"#here is the correlation matrix. In both datasets no latepay 59,89,90 more variables have correlation with each other.\n#it can lead to some multicollinearity problem.\nf, ax = plt.subplots(figsize=(25,20))\nplt.subplot(2,2,1)\nsns.heatmap(train.corr(),linewidths=0.1,vmax=1.0, \n            square=True,  linecolor='white', annot=True, cmap='Greens')\nplt.title('Correlation matrix for Train set', fontsize = 18, color = 'green')\nplt.subplot(2,2,2)\nsns.heatmap(test.corr(),linewidths=0.1,vmax=1.0, \n            square=True,  linecolor='white', annot=True, cmap='Blues')\nplt.title('Correlation matrix for Test set',fontsize = 18, color = 'blue')","4faa653d":"# this visual shows correlation with only target variable. In the negative side age, positive side no latepay 59 \n#has strong impact on target.\ncorr_w_target = train.corr().iloc[:-1, -1].sort_values(ascending=False)\nplt.figure(figsize=(6, 6))\n\nsns.barplot(x=corr_w_target.values, y=corr_w_target.index)\nplt.title('Correlation with target variable')","f727e0ee":"#correlation coefficients displayed\ncorrelation = train.corr()['defaulted_on_loan'].sort_values(ascending = False).to_frame().head(20)\nfinal = correlation.style.background_gradient(cmap = sns.light_palette(\"green\", as_cmap = True))\nfinal\n#if we look at the top variables first 3(about the late payment of customers) and bottom 1st are correlated with default. It is worst to mention there not that much of higher correlation. ","61ef8db2":"sns.relplot( x = 'no_latepay_up_89d', y = 'no_latepay_90d_more', hue= 'defaulted_on_loan',\n            data = train)","6a67a747":"sns.pairplot( data = train, vars=['age', 'no_dep_fmemb',\n       'no_latepay_up_59d',\n       'no_latepay_up_89d',\n       'no_latepay_90d_more'], hue= \"defaulted_on_loan\", palette= 'Paired_r')","cb2d7985":"from scipy.stats import zscore, probplot\nnum_var = train.drop(columns = ['defaulted_on_loan']).columns.values\n\nprint('The number of records containing outlier(s) before was {}.'.\n      format(train.loc[(abs(zscore(train[num_var])) > 3).any(axis = 1)].shape[0]))\n      \nbefore = train.shape[0]\n\ndef impute_outliers(value):\n    if value > upperlimit:\n        value = upperlimit\n    elif value < lowerlimit:\n        value = lowerlimit\n    return value\n\nfor var in num_var:\n    Q3 = train[var].quantile(q = 0.75)\n    Q1 = train[var].quantile(q = 0.25)\n    IQR = Q3 - Q1\n    outlier_range = IQR * 1.5\n    upperlimit = Q3 + outlier_range\n    lowerlimit = Q1 - outlier_range\n    train[var] = train[var].apply(impute_outliers)\n    \nwhile train.loc[(abs(zscore(train[num_var])) > 3).any(axis = 1)].shape[0] != 0:\n    train.drop(index = train.loc[(abs(zscore(train[num_var])) > 3).any(axis = 1)].index, inplace = True)\n    \nafter = train.shape[0]\n\nprint('The number of records containing outlier(s) after is {}.'.\n      format(train.loc[(abs(zscore(train[num_var])) > 3).any(axis = 1)].shape[0]))","45b2817b":"num_var = test.columns.values\ndef impute_outliers(value):\n    if value > upperlimit:\n        value = upperlimit\n    elif value < lowerlimit:\n        value = lowerlimit\n    return value\nfor var in num_var:\n    Q3 = test[var].quantile(q = 0.75)\n    Q1 = test[var].quantile(q = 0.25)\n    IQR = Q3 - Q1\n    outlier_range = IQR * 1.5\n    upperlimit = Q3 + outlier_range\n    lowerlimit = Q1 - outlier_range\n    test[var] = test[var].apply(impute_outliers)","6f91faa2":"f, ax = plt.subplots(figsize=(20,35))\n\n\n#############################\nplt.subplot(10,2,1)\ntrain['no_latepay_90d_more'].plot.hist(color = '#b9e769')\nplt.title(\"Number of late payment more than 90 d\",fontsize = 13, color= '#b9e769')\nplt.grid(True)\n###############################\nplt.subplot(10,2,2)\nplt.title(\"Number of late payment more than 90 d Boxplot\",fontsize = 13, color =  '#b9e769')\nsns.boxplot(train[\"no_latepay_90d_more\"], flierprops=dict(markerfacecolor='#b9e769', marker='D'))\n##########################\nplt.subplot(10,2,3)\ntrain[\"no_latepay_up_89d\"].plot.hist(color ='#38b000')\nplt.title(\"Number of late payment up to 89d Histogram\",fontsize = 13, color = '#38b000')\nplt.grid(True)\n##########################\nplt.subplot(10,2,4)\nsns.boxplot(train[\"no_latepay_up_89d\"], flierprops= dict(markerfacecolor='#38b000', marker='v'))\nplt.title(\"Number of late payment up to 89d Boxplot\",fontsize = 13, color= '#38b000')\n#############################\nplt.subplot(10,2,5)\ntrain[\"no_latepay_up_59d\"].plot.hist(color = '#f08080')\nplt.title(\"Number of late payment up to 59d Histogram\",fontsize = 13, color = '#f08080')\nplt.grid(True)\n#############################\nplt.subplot(10,2,6)\nsns.boxplot(train[\"no_latepay_up_59d\"], flierprops=dict(markerfacecolor='#f08080', marker='D'))\nplt.title(\"Number of late payment up to 59d Boxplot\",fontsize = 13, color = '#f08080')\n#######################\nplt.subplot(10,2,7)\ntrain[\"no_dep_fmemb\"].plot.hist(color = '#d5896f')\nplt.title(\"Number of dependent family members\",fontsize = 13, color = '#d5896f')\nplt.grid(True)\n############################\nplt.subplot(10,2,8)\nsns.boxplot(train[\"no_dep_fmemb\"], flierprops=dict(markerfacecolor='#d5896f', marker='D'))\nplt.title(\"Number of dep.family members Boxplot\",fontsize = 13, color = '#d5896f')\n##########################\nplt.subplot(10,2,9)\ntrain[\"no_cdtline\"].plot.hist(color = 'green')\nplt.title(\"Number of credit lines\",fontsize = 13, color = 'green')\nplt.grid(True)\n#########################\nplt.subplot(10,2,10)\nsns.boxplot(train[\"no_cdtline\"], flierprops=dict(markerfacecolor='green', marker='D'))\nplt.title(\"Number of credit lines Boxplot\",fontsize = 13, color = 'green')\n###########################\nplt.subplot(10,2,11)\ntrain[\"real_estate_loans\"].plot.hist(color = '#25ced1')\nplt.title(\"Number of real estate loans\",fontsize = 13, color = '#25ced1')\nplt.grid(True)\n######################\nplt.subplot(10,2,12)\nsns.boxplot(train[\"real_estate_loans\"], flierprops=dict(markerfacecolor='#25ced1', marker='D'))\nplt.title(\"Number of real estate loans Boxplot\",fontsize = 13, color = '#25ced1')\n######################\nplt.subplot(10,2,13)\ntrain[\"debtpay_inc_ratio\"].plot.hist(color = '#a26769')\nplt.title(\"Debtpay income ratio \",fontsize = 13, color = '#a26769')\nplt.grid(True)\n####################\nplt.subplot(10,2,14)\nsns.boxplot(train[\"debtpay_inc_ratio\"], flierprops = dict(markerfacecolor='#a26769', marker='D'))\nplt.title(\"Debtpay income ratio Boxplot\",fontsize = 13, color= '#a26769')\n#####################\nplt.subplot(10,2,15)\ntrain[\"cdtline_util\"].plot.hist(color = '#9381ff')\nplt.title(\"Creditline utilization \",fontsize = 13, color = '#9381ff')\nplt.grid(True)\n#####################\nplt.subplot(10,2,16)\nsns.boxplot(train[\"cdtline_util\"], flierprops=dict(markerfacecolor='#9381ff', marker='D'))\nplt.title(\"Creditline utilization Boxplot\",fontsize = 13, color = '#9381ff')\n################################\nplt.subplot(10,2,17)\ntrain[\"age\"].plot.hist(color = '#54478c')\nplt.title(\"Age distribution\",fontsize = 13, color = '#54478c')\nplt.grid(True)\n####################\nplt.subplot(10,2,18)\nsns.boxplot(train[\"age\"], flierprops=dict(markerfacecolor='#54478c', marker='D'))\nplt.title(\"Age Boxplot\",fontsize = 13, color = '#54478c')\n#########################\nplt.subplot(10,2,19)\ntrain[\"monthly_income\"].plot.hist(color = '#f29e4c')\nplt.title(\"Monthly Income\",fontsize = 13, color = '#f29e4c')\nplt.grid(True)\n#################\nplt.subplot(10,2,20)\nplt.title( \"Monthly Income Boxplot\",fontsize = 13, color = '#f29e4c')\nsns.boxplot(train[\"monthly_income\"], flierprops=dict(markerfacecolor='#f29e4c', marker='v'))","4dc83ff5":"Let's find out whether we have any duplicates in the dataset.","61f37730":"Imputing outliers","44fbd344":"Let's impute missing values in our train and test sets using SimpleImputer","e0765acd":"Lets see visually percentage of our missing values in dataset\n","303265c8":"Let's calculate the ratio of missing values to the total % of all records for a particular variable.","5787e120":"Renaming column names, because they can sometimes affect visuals.","901fbfae":"Visuals after imputing outliers"}}