{"cell_type":{"a305fae1":"code","43224df0":"code","bd6a01fd":"code","002899e6":"code","a6c26a7d":"code","4f6531ce":"code","21dc0e30":"code","0a421631":"code","2532fa3d":"code","28983a22":"code","6805c727":"code","57c9c946":"code","fac8e73d":"code","98952cbd":"code","d391ac17":"code","ac6b26af":"code","b59950e8":"code","654a7eba":"code","73542277":"code","f051d4a3":"code","c7719abb":"code","a2dae2fa":"code","9799f449":"code","0e2378c5":"code","06dac8eb":"code","f8911dbb":"code","6d188b84":"code","c8578e22":"code","5e046838":"code","67611e24":"markdown"},"source":{"a305fae1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","43224df0":"song=pd.read_csv('\/kaggle\/input\/spotifyclassification\/data.csv')\nsong.head()","bd6a01fd":"song.drop('Unnamed: 0',axis=1,inplace=True)\nsong.head()","002899e6":"song.info()","a6c26a7d":"song.describe()","4f6531ce":"song.target.value_counts()","21dc0e30":"songd=song.copy()\nsongd.drop_duplicates(subset=None,inplace=True)\nsongd.shape","0a421631":"song.shape","2532fa3d":"song=songd\ndel songd\nsong.shape","28983a22":"plt.figure(figsize=(20,10))\nsns.heatmap(song.corr(), annot=True,cmap='RdBu')\nplt.show()","6805c727":"song.columns","57c9c946":"left = song[['target','song_title', 'artist']]\nleft.head()","fac8e73d":"song.drop(['target','song_title', 'artist'],axis=1,inplace=True)\nsong.head()","98952cbd":"from statsmodels.stats.outliers_influence import variance_inflation_factor\ndef vif_show(X_vif):\n    vif = pd.DataFrame()\n    vif['Features'] = X_vif.columns\n    vif['VIF'] = [variance_inflation_factor(X_vif.values, i) for i in range(X_vif.shape[1])]\n    vif['VIF'] = round(vif['VIF'], 2)\n    vif = vif.sort_values(by = \"VIF\", ascending = False)\n    print(vif)\n    print()\n    if(vif.iloc[0,1] > 5.0 ):\n        col = vif.iloc[0,0]\n        X_vif.drop([vif.iloc[0,0]],axis =1, inplace = True)\n        print(\"After removing \\\"\"+ col + \"\\\" from datafame\")\n        vif_show(X_vif)\n\nvif_show(song)","d391ac17":"song.columns","ac6b26af":"song = pd.concat([song,left],axis = 1)\nsong.head()","b59950e8":"song.shape","654a7eba":"#Note: - We reduced 9 Columns from original 15 columns, which will reduce training time  for teh model","73542277":"X=song.drop('target',axis=1)\ny=song['target']","f051d4a3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, train_size = 0.80,stratify=y, random_state = 1)","c7719abb":"X_train.info()","a2dae2fa":"song.head()","9799f449":"from catboost import CatBoostClassifier\nmodel=CatBoostClassifier()","0e2378c5":"obj=list(np.where(X_train.dtypes == np.object)[0])\nobj","06dac8eb":"model.fit(X_train,y_train,cat_features=obj)","f8911dbb":"import sklearn.metrics\nprint(sklearn.metrics.classification_report(y_test,model.predict(X_test)))","6d188b84":"# predict result\nX_test['target']= model.predict(X_test)\nX_test.head()","c8578e22":"# Factors which decide that I will like the song or not ","5e046838":"imp_df = pd.DataFrame({\n    \"Varname\": X_train.columns,\n    \"Imp\": model.feature_importances_})\nimp_df.sort_values(by=\"Imp\", ascending=False)","67611e24":"# Duplicate Check "}}