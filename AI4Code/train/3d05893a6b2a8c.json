{"cell_type":{"e6c885a7":"code","bb392630":"code","6c8fa545":"code","736f62e4":"code","c5d55499":"code","68cba3a1":"code","67d487c1":"code","4233836f":"code","ecc2abc8":"code","667b6e64":"code","5390ca2d":"markdown","1805b762":"markdown","0018426c":"markdown","23c5d3e5":"markdown","fc6ec7d5":"markdown"},"source":{"e6c885a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bb392630":"data = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndata.rename(columns={'id':'ID','gender':'Gender','age':'Age','hypertension':'Hypertension','heart_disease':'Heart_Disease','ever_married':'Ever_Married','work_type':'Work_Type','Residence_type':'Residence_Type','avg_glucose_level':'AVG_Glucose_Level','bmi':'BMI','smoking_status':'Smoking_Status','stroke':'Stroke'},inplace=True)\ndata = data[['ID','Gender','Age','Hypertension','Heart_Disease','Ever_Married','Work_Type','Residence_Type', 'AVG_Glucose_Level', 'BMI', 'Smoking_Status', 'Stroke']]\ndata = data.sort_values('AVG_Glucose_Level',ascending = False)\ndata.head(20)\n","6c8fa545":"for item in data.ID.unique():\n    if len(data.Ever_Married[data.ID == item].unique()) != 1:\n        print(item)","736f62e4":"print (data.Work_Type)","c5d55499":"data['Work']=data['Work_Type']\nfor i in data['Work'].index:\n    if isinstance(data.loc[i, 'Work_Type'], str):\n        data.loc[i,'Work']=str(data.loc[i, 'Work_Type']).split('_')[0]","68cba3a1":"data.loc[1324]","67d487c1":"#data.pivot_table(index='Gender', columns='Hypertension', values='ID')\n#data.pivot_table(index='Age', columns='Hypertension', values='ID')\n#data.pivot_table(index='Ever_Married', columns='Hypertension', values='ID')\nps = data.pivot_table(index='Age', columns='Gender', values='BMI')\nps","4233836f":"#SLICE\n# \u041e\u0442 Female \u0434\u043e Male\nps.loc[:, 'Female':'Male']","ecc2abc8":"# \u041e\u0442 Other \u0434\u043e Male\nps.loc[:,'Male':'Other']","667b6e64":"ps = pd.DataFrame(np.random.randn(5, 3),\n                       columns=list('Age'),\n                       index=pd.date_range('20130101', periods=5))","5390ca2d":"# **\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21164**\n1. \u041f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0438\u043f\u044b \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 DataSet, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0442\u0438\u043f (\u043d\u043e\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439, \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439, \u0434\u0438\u0441\u043a\u0440\u0435\u0442\u043d\u044b\u0439 (\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u044c\u043d\u044b\u0439), \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0439), \u0434\u043e\u043c\u0435\u043d (\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439) \u0438 \u0448\u043a\u0430\u043b\u0443;\n2. \u0412\u044b\u044f\u0432\u0438\u0442\u044c \u0438 \u0443\u0441\u0442\u0440\u0430\u043d\u0438\u0442\u044c \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0438 \u0432 DataSet (\u043d\u0435\u0430\u0442\u043e\u043c\u0430\u0440\u043d\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b, \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u0432\u043e\u0434\u0430, \u0433\u0435\u0442\u0435\u0440\u043e\u0433\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445, \u043e\u0448\u0438\u0431\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430, \u043f\u043e\u0434\u043c\u0435\u043d\u0430 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\u043c\u0438);\n3. \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0439 DataSet \u0438 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c.\n\n# \n1. \n* \u041d\u043e\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0435 - Gender, Work_Type, Residence_Type, Smoking_Status. \n* \u0418\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u044c\u043d\u044b\u0435 - Age, BMI.\n* \u041e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 ID, AVG_Glucose_Level.\n2. \n3. ","1805b762":"# **\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21163**\n\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 python \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0432 DataSet \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 pandas:\n* 1 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u2013 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043e\u0434\u043d\u043e\u0439 \u0424\u0417;\n* 2 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u2013 \u043f\u043e\u0438\u0441\u043a \u0432\u0441\u0435\u0445 \u0424\u0417;\n* 3 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u2013 \u043f\u043e\u0438\u0441\u043a \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0424\u0417, \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u044b\u0435 \u0424\u0417 (\u0442\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445). ","0018426c":"# **\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21167**\n\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c Fact-dimensional model \u0434\u043b\u044f \u0441\u0432\u043e\u0435\u0433\u043e DataSet-\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f:\n* \u0424\u0430\u043a\u0442\u044b \u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438;\n* \u0423\u0440\u043e\u0432\u0435\u043d\u044c \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f Grain \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0443\u0440\u043e\u0432\u043d\u0438 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f (\u043f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0438);\n* \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f.\n* \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f DataSet-\u0430 \u0441\u0432\u043e\u0434\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 (\u043a\u0440\u043e\u0441\u0441-\u0442\u0430\u0431\u043b\u0438\u0446\u0443) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 pivot_table (\u0438\u043b\u0438 pivot) \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 pandas, \u0433\u0434\u0435 \u0447\u0430\u0441\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0432 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0448\u0430\u043f\u043a\u0435, \u0430 \u0447\u0430\u0441\u0442\u044c \u0432 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0439. \u0423\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0441\u0432\u043e\u0434\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0430 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u043c \u043d\u0430 80% \u043d\u0435\u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438;\n* \u041f\u0440\u043e\u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 Slice, Dice \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 pandas \u043d\u0430\u0434 \u0441\u0432\u043e\u0434\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439.","23c5d3e5":"# **\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21162**\n* \u0412\u044b\u0431\u0440\u0430\u0442\u044c \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 Kaggle.com DataSet \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 csv, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 3-\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432;\n* \u0421\u043e\u0437\u0434\u0430\u0442\u044c notebook \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043a \u043d\u0435\u043c\u0443 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 DataSet.","fc6ec7d5":"![]()![\u0411\u0435\u0437 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f.png](attachment:d3df50a1-0d7f-435a-af4a-f11099ae47eb.png)"}}