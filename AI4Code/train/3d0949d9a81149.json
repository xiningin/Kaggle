{"cell_type":{"aa352148":"code","bccc3b4b":"code","d257b113":"code","07c83b0b":"code","3829fc02":"code","71d9ffc1":"code","20865f36":"code","04b98e3a":"code","c87c9687":"code","72b48000":"code","971a1ada":"code","e995789f":"code","d2da1c06":"code","170af90b":"code","52f32f50":"code","30895868":"code","6b208aba":"code","3dc9140a":"code","017b059e":"code","76890f3f":"code","3d1a2dc3":"code","e361ba90":"markdown","541c217b":"markdown","6feba1bf":"markdown","14823751":"markdown","15befadf":"markdown","6de8fce4":"markdown","ecda73aa":"markdown","f1c73326":"markdown","173e976e":"markdown","97179fd1":"markdown","4fbb751d":"markdown"},"source":{"aa352148":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # mathematical operations and linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualization library\nimport seaborn as sns # Fancier visualizations\nimport statistics # fundamental stats package\n%matplotlib inline\nimport os\nimport scipy.stats as stats # to calculate chi-square test stat\nfrom datetime import date\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bccc3b4b":"# Load raw data from url and use first row as column names\n\nrawData = pd.read_csv('..\/input\/jhu-csse-rawdata\/coronavirus.csv', sep=',',\n                           header=0, encoding='ascii', engine='python')\ndf = rawData","d257b113":"df","07c83b0b":"df.sort_values(['country','type','date'],inplace = True)\ndf.reset_index(drop=True, inplace=True) # reset index from 0 to -1\nprint(df)","3829fc02":"df.info() #Display Data Types and Columns","71d9ffc1":"df['date'] = df['date'].astype('datetime64')\ndf = df.fillna('unknown')\ndf.info()","20865f36":"df.columns # get column names ","04b98e3a":"df_conf_ttl = df[df.type == 'confirmed'].cases.sum()\ndf_deat_ttl = df[df.type == 'death'].cases.sum()\ndf_rcvd_ttl = df[df.type == 'recovered'].cases.sum()\nObservationDate = df['date'].max() #Latest date\ndf_ac_ttl = df_conf_ttl  - (df_deat_ttl + df_rcvd_ttl) # Active cases\n\nlabels = [\"Last Update\",\"Confirmed\",\"Active cases\",\"Recovered\",\"Deaths\"]\nfig = go.Figure(data=[go.Table(header=dict(values=labels),\n                 cells=dict(values=[ObservationDate,df_conf_ttl,df_ac_ttl,df_rcvd_ttl,df_deat_ttl]))\n                     ])\nfig.update_layout(\n    title='Total Number of COVID 19 Cases in The world',\n)\nfig.show()","c87c9687":"df['date'].max()-df['date'].min() # number of tracked day data has been tracked","72b48000":"dfghana = df[df.country == 'Ghana']\ndfghana = dfghana.reset_index(drop=True, inplace=None) #reduce to 74 x 4\ndfghana = dfghana[['date','type','cases']]\ndfghana","971a1ada":"# Confirmed Cases in Ghana\ndfghana_conf_ttl = dfghana[dfghana.type =='confirmed']\ndfghana_conf_ttl = dfghana_conf_ttl[['date','cases']]\ndfghana_conf_ttl","e995789f":"# Death Cases in Ghana\ndfghana_deat_ttl = dfghana[dfghana.type =='death']\ndfghana_deat_ttl = dfghana_deat_ttl[['date','cases']]\ndfghana_deat_ttl","d2da1c06":"# Recovered Cases in Ghana\ndfghana_rcvd_ttl = dfghana[dfghana.type =='recovered']\ndfghana_rcvd_ttl =  dfghana_rcvd_ttl[['date','cases']]\ndfghana_rcvd_ttl","170af90b":"#Actice Cases in Ghana\ndfghana_actv_ttl = (dfghana_conf_ttl['cases'].sum() - (dfghana_deat_ttl['cases'].sum() \n                    + dfghana_rcvd_ttl['cases'].sum()))\n\ndfghana_actv_ttl","52f32f50":"dfghana_merged = pd.merge(dfghana_conf_ttl,dfghana_deat_ttl, on = 'date', how = 'right')\ndfghana_merged = pd.merge(dfghana_merged,dfghana_rcvd_ttl, on = 'date', how = 'right')\ndfghana_merged","30895868":"#rename columns\ndfghana_merged = dfghana_merged.rename(columns ={'cases_x':'confirmed',\n                                          'cases_y': 'death',\n                                          'cases':'recovered'})","6b208aba":"dfghana_merged","3dc9140a":"dfghana_merged.describe()","017b059e":"#Frequency and five number summary boxplot\ndfghana_merged[['confirmed', 'death', 'recovered']].hist(layout=(1,3), sharex=False, sharey=False, figsize=(15, 5), bins=20) \nplt.show()\n\ndfghana_merged[['confirmed', 'recovered', 'death']].plot(kind = 'box',subplots=True, layout=(1,3), sharex=False, sharey=False, figsize=(15,5))\nplt.show()","76890f3f":"print('-----------Skewness-------------')\nprint(dfghana_merged.skew(axis = 0, skipna = True))\nprint('\\n-----------Kurtosis-------------')\nprint(dfghana_merged.kurtosis(skipna = True))","3d1a2dc3":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=dfghana_merged['date'],y=dfghana_merged['confirmed'],\n             mode='lines+markers',\n             name='Confirmed Cases'))\nfig.add_trace(go.Scatter(x=dfghana_merged['date'],y=dfghana_merged['death'],\n             mode='lines+markers',\n             name='Death Cases'))\nfig.add_trace(go.Scatter(x=dfghana_merged['date'],y=dfghana_merged['recovered'],\n             mode='lines+markers',\n             name='Recovery Cases'))\n\nfig.update_xaxes(\n    rangeslider_visible=True\n)\n\nfig.show()","e361ba90":"All cases are positively skewed and heavy-tailed relative to a normal distribution.","541c217b":"There are a lot of outerliers in all cases. This dataset is not adequate enough to perform other statistical calculations without normalizing the data. ","6feba1bf":"Preprocessing the raw data involves cleaning, reducing and transforming the data to a specifies dataset which comprises of Ghana only.","14823751":"The \"date\" attribute was set to an object datatype by default, therefore, it needs to be changed to a datetime64 datatype.\n\nThe \"province\" attribute has some missing values; missig values can cause inconsistency, so there they need to be replaced.","15befadf":"# COVID 19 Analysis in Ghana - What are The Trends? ","6de8fce4":"The raw data has been reduced to only entries for Ghana.","ecda73aa":"![Image](https:\/\/www.furman.edu\/covid-19\/wp-content\/uploads\/sites\/177\/2020\/03\/CoronaVirusHeader-Final-3.jpg)","f1c73326":"# Data Mining Analysis using Data Mining Techniques and Algorithms","173e976e":"Number of days COVID-19 has been tracked in Ghana as of Jan 22, 2020.","97179fd1":"Using Data Mining techniques and algorithms to find interesting patterns (knownledge) from the COVID-19 raw data derived from Ghana.","4fbb751d":"# Data reduction by Country: Ghana"}}