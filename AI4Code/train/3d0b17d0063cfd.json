{"cell_type":{"4e45f107":"code","b1e71fb9":"code","37e14add":"code","b70de5aa":"code","2e0203a4":"code","235d9007":"code","6c6a6e8a":"code","f279b4cd":"code","ace56e97":"code","3071c30a":"code","cfd11424":"code","e61a3c4f":"code","da7f77a4":"code","b9bf712c":"code","a9aa5fb4":"code","2f72872f":"code","d01985c7":"code","0f318773":"code","cb9f431c":"code","55a20a14":"code","5c750575":"code","ef0bbe4f":"code","a69e2d65":"code","e287c168":"code","13886878":"code","46c3f440":"code","4b7fd5ba":"code","8875f169":"code","cf5f1f0c":"code","04ad5d45":"code","77920eac":"code","900db4eb":"code","a5736ad0":"code","b6888869":"markdown","b716b96b":"markdown","7ce77d5b":"markdown","2c5725d0":"markdown","ff5a1ac6":"markdown","797546ff":"markdown","d47fa3e3":"markdown","88d48b51":"markdown","6a95bf92":"markdown","8f5f9b52":"markdown","59074eab":"markdown","01422717":"markdown","c0f9bac8":"markdown","8cc28f3b":"markdown","3adb6823":"markdown","f7cd1fc2":"markdown","dda5b48d":"markdown","66723e13":"markdown","24342c38":"markdown","8bf52756":"markdown","098031b2":"markdown","44f4d112":"markdown","716517c8":"markdown","68a4c0c5":"markdown","ec98c898":"markdown","62d1b8b5":"markdown","4a61fc10":"markdown","ac0cd615":"markdown","977116f5":"markdown","a1c28b3e":"markdown","dcf2ec2a":"markdown"},"source":{"4e45f107":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom datetime import datetime\n\nimport folium\nfrom folium.plugins import HeatMap\nfrom folium.plugins import FastMarkerCluster\nfrom IPython.display import HTML, display\n\nimport random\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","b1e71fb9":"#read data\ndf0 = pd.read_csv(\"..\/input\/MissingMigrants-Global-2019-03-29T18-36-07.csv\")","37e14add":"df0.sample(10)","b70de5aa":"df0.info()","2e0203a4":"df = df0[['Web ID','Region of Incident',\n         'Reported Date', \n         'Total Dead and Missing',\n         'Number of Survivors', \n        'Cause of Death',\n        'Location Description',\n        'Information Source',\n        'Location Coordinates',\n        'Migration Route',\n        'URL','UNSD Geographical Grouping']]","235d9007":"df[df['Web ID'].duplicated()]","6c6a6e8a":"df[df['Location Coordinates'].isna()]","f279b4cd":"df = df[df['Location Coordinates'].notna()]","ace56e97":"#also split the column for later use\ndf['Location Coordinates'] = df['Location Coordinates'].str.split(\",\")\ndf['Location Coordinates_lon'] = pd.to_numeric(df['Location Coordinates'].str[0][:])\ndf['Location Coordinates_lat'] = pd.to_numeric(df['Location Coordinates'].str[1][:])\ndf.drop('Location Coordinates',axis = 1)","3071c30a":"df['Reported Date'] = pd.to_datetime(df['Reported Date'], infer_datetime_format=True)","cfd11424":"df[df['Total Dead and Missing']==0]","e61a3c4f":"df['Total Dead and Missing'][4599]=11\ndf['Total Dead and Missing'][5013]=6","da7f77a4":"#df.drop(index=df[df['Total Dead and Missing']==0].index,inplace = True)","b9bf712c":"\ndf.insert(6,'Total Migrants',0)\ndf['Total Migrants'] = df['Total Dead and Missing']+df['Number of Survivors']","a9aa5fb4":"df.head()","2f72872f":"df_temp = df.groupby('Reported Date')['Total Dead and Missing'].sum().reset_index()\ndf_temp['Reported_Month']=df_temp['Reported Date'].dt.strftime('%Y-%m')\ndf_temp = df_temp.groupby('Reported_Month')['Total Dead and Missing'].sum().reset_index()","d01985c7":"df_temp = df.groupby('Reported Date')['Total Dead and Missing','Total Migrants'].sum().reset_index()\ndf_temp['Reported_Month']=df_temp['Reported Date'].dt.strftime('%Y-%m')\ndf_temp = df_temp.groupby('Reported_Month')['Total Dead and Missing','Total Migrants'].sum().reset_index()","0f318773":"fig,ax =plt.subplots(figsize=(18,10));\nax = sns.lineplot(x=\"Reported_Month\", y=\"Total Dead and Missing\", data=df_temp, color=\"r\").set_title('Total Dead and Missing Migrants over time');\nplt.xticks(rotation='vertical');\n\nax2 = sns.lineplot(x=\"Reported_Month\", y=\"Total Migrants\", data=df_temp, color=\"b\");\n\nax.figure.legend(['Total Dead and Missing','Total Migrants'],fontsize='large');\n\nplt.xlabel('Date');\nplt.ylabel('No. of Migrants');","cb9f431c":"m = folium.Map(location=[30, 20], zoom_start=3)\n\nm.add_children(HeatMap(zip(df['Location Coordinates_lon'],\n                           df['Location Coordinates_lat'], \n                           df['Total Dead and Missing']),\n                           min_opacity = 0.2))\n\nFastMarkerCluster(data=list(zip(df['Location Coordinates_lon'].values, df['Location Coordinates_lat'].values))).add_to(m)\nfolium.LayerControl().add_to(m)\n\n\ndisplay(m)","55a20a14":"df['Cause of Death'].sort_values().unique()","5c750575":"df_cause_of_death=df.drop(index=df[df['Total Migrants'].isna()].index)\ndf_cause_of_death=df_cause_of_death.groupby('Cause of Death').sum()[['Total Dead and Missing','Total Migrants']].sort_values(\n    by = 'Total Dead and Missing',ascending = False).reset_index() ","ef0bbe4f":"#define sorter\nsorter_cause_of_death= list(df_cause_of_death['Cause of Death'].iloc[0:30])\n","a69e2d65":"df_cause_of_death1 = pd.melt(df_cause_of_death,id_vars=['Cause of Death'],\n        value_vars = ['Total Dead and Missing','Total Migrants'])\ndf_cause_of_death1 = df_cause_of_death1[df_cause_of_death1['Cause of Death'].isin(sorter_cause_of_death)]\n#change to log value\ndf_cause_of_death1.rename({'value': 'Total(log10)'}, axis=1, inplace=True)\ndf_cause_of_death1['Total(log10)'] = np.log10(df_cause_of_death1['Total(log10)'])\n","e287c168":"chart = sns.catplot(kind=\"bar\", data = df_cause_of_death1,\n            x='Cause of Death',y='Total(log10)',hue = 'variable',\n            hue_order = ['Total Migrants','Total Dead and Missing'],\n            order = sorter_cause_of_death, height=8,aspect = 1.5)\nchart.fig.suptitle('Top Causes for Dead or Missing Migrants')\n\nfor axes in chart.axes.flat:\n    axes.set_xticklabels(axes.get_xticklabels(), rotation=60,horizontalalignment='right')\n\nplt.ylabel('Number of Migrants');","13886878":"df_location = df[df['Cause of Death'].isin(sorter_cause_of_death)]\n\ndf_location1 = df_location[['Region of Incident','Cause of Death','Total Dead and Missing']]\n\ndf_location1 = df_location1.groupby(['Region of Incident','Cause of Death']).sum().unstack(level=-1)\ndf_location1.columns = df_location1.columns.droplevel() \ndf_location1 = df_location1.fillna(0)\n","46c3f440":"fig, ax = plt.subplots(figsize=(18,10));\nsns.heatmap(df_location1,cmap = 'Wistia',annot=True, annot_kws={\"size\": 7},linewidths=0.25,ax=ax).set_title('Total Dead and Missing by Cause of Death and Region of Incident');","4b7fd5ba":"colors =  ['red', 'blue', 'green', 'purple', 'orange', 'darkred',\n             'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue',\n             'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen',\n             'gray', 'black', 'lightgray']","8875f169":"m = folium.Map(location=[30, 20], zoom_start=3)\n\ndf_location2 = df_location.sample(1500)\nfor cause,color in zip(sorter_cause_of_death[0:15],colors):\n    for x,y,z in zip(df_location2[df_location2['Cause of Death']==str(cause)]['Location Coordinates_lon'],\n                     df_location2[df_location2['Cause of Death']==str(cause)]['Location Coordinates_lat'],\n                     df_location2[df_location2['Cause of Death']==str(cause)]['Total Dead and Missing']):\n        folium.Circle(radius=z*1000,\n                  location=[x,y],\n                  color = color,\n                  popup='{0}, no. of death\/missing: {1}'.format(cause,z),\n                  fill=True).add_to(m)\n\ndisplay(m)","cf5f1f0c":"sorter_cause_of_death1= list(df_cause_of_death['Cause of Death'].iloc[0:15])\ndf_location2 = df[df['Cause of Death'].isin(sorter_cause_of_death1)]\ndf_location2 = df_location2[['Region of Incident','Cause of Death','Total Dead and Missing','Total Migrants']]\ndf_location2['Total Migrants'].fillna(df_location2['Total Dead and Missing'],inplace=True)","04ad5d45":"df_location2_1 = df_location2.groupby('Cause of Death').count()['Total Dead and Missing'].reset_index()\ndf_location2_1 = df_location2_1.rename({'Total Dead and Missing':'Count of Cases'},axis=1)\ndf_location2_2 = df_location2.groupby('Cause of Death').sum().reset_index()\ndf_location2_2 = df_location2_2.rename({'Total Dead and Missing':'Sum of Total Dead and Missing',\n                                        'Total Migrants':'Sum of Total Migrants'},axis=1)\ndf_location2_3 = pd.merge(df_location2_2,df_location2_1,on=['Cause of Death'],how='left')","77920eac":"df_location2_3.sort_values(by = 'Sum of Total Dead and Missing', ascending = False)","900db4eb":"df_location2_3['Sum of Total Dead and Missing'] = np.log10(df_location2_3['Sum of Total Dead and Missing'])\ndf_location2_3['Sum of Total Migrants'] = np.log10(df_location2_3['Sum of Total Migrants'])\ndf_location2_3.rename({'Sum of Total Dead and Missing':'Sum of Total Dead and Missing(log10)','Sum of Total Migrants':'Sum of Total Migrants(log10)' },axis=1,inplace=True)","a5736ad0":"fig, ax = plt.subplots(figsize=(18,10));\nax = sns.scatterplot(x=\"Sum of Total Migrants(log10)\", y=\"Sum of Total Dead and Missing(log10)\",\n                     hue=\"Cause of Death\", size=\"Count of Cases\", \n                     sizes=(100, 2000),alpha = 0.5,legend='brief',data=df_location2_3)\n\nfor line in range(0,df_location2_3.shape[0]):\n     ax.text(x=df_location2_3['Sum of Total Migrants(log10)'][line],\n             y= df_location2_3['Sum of Total Dead and Missing(log10)'][line],\n             s=df_location2_3['Cause of Death'][line],\n             horizontalalignment='center', size='small', color='black', weight='semibold',linespacing=5)\nax.set_title('Sum and Count of Total Dead and Missing Migrants by Cause of Death');","b6888869":"## 3.2 Illustration of number of dead\/missing on map","b716b96b":"Drop rows that cannot be explained","7ce77d5b":"# EDA on Global Missing Migrants","2c5725d0":"1. Check if there are duplicated rows and remove if any","ff5a1ac6":"## 3.1 Trend of migrants and corresponding death\/missing over Time","797546ff":"### Figures on Causes of Death happened in regions","d47fa3e3":"### Illustration on map with sampling size of 5000:","88d48b51":"4. Inspect rows with no 'Total Dead and Missing'","6a95bf92":"## 2. Data Cleansing","8f5f9b52":"Utilize only useful columns for EDA","59074eab":"Fill 'Total Dead and Missing' according to information from available URL","01422717":"Here below are the full list of causes of the death\/ missing migrants:","c0f9bac8":"Since there is only one row and with only 1 casualty, I will just remove the row","8cc28f3b":"### Visualized Illustration","3adb6823":"### Info on types of data:","f7cd1fc2":"* Causes with high gradient means higher death rate(e.g. easier to cause death by Dehydration than Asphyxiation)","dda5b48d":"# 3. Exploratory data analysis","66723e13":"*For rows with unknown 'Number of Survivors' the total migrants are still unknown","24342c38":"## 3.3 Cause of deaths of migrants","8bf52756":"### Graphic Illustration on Top cause for dead or missing vs Total migrants:","098031b2":"## 3.4 Illustration of death rate of top causes","44f4d112":"[1. Snapshtot on data](#1.-Snapshtot-on-data)\n\n[2. Data Cleansing](#2.-Data-Cleansing)\n\n[3. Exploratory data analysis](#3.-Exploratory-data-analysis)\n   * [3.1 Trend of migrants and corresponding death\/missing over Time](#3.1-Trend-of-migrants-and-corresponding-death\/missing-over-Time)\n   * [3.2 Illustration of number of dead\/missing on map](#3.2-Illustration-of-number-of-dead\/missing-on-map)\n   * [3.3 Cause of deaths of migrants](#3.3-Cause-of-deaths-of-migrants)\n   * [3.4 Illustration of death rate of top causes](#3.4-Illustration-of-death-rate-of-top-causes)","716517c8":"Add a row to sum 'Total Dead and Missing' and 'Number of Survivors'","68a4c0c5":"This notebook aims to understand the pheonmena of missing migrants from 2014 to early 2019.\n\nIt would study the following questions:\n1. Any change in the trend of migrants? \n2. Where did the death\/ missing migrants mostly happen? \n3. What are the causes of the death of migrants? \n4. Any causes that led to the higher death rate of the migrants? ","ec98c898":"# Index","62d1b8b5":"## It's my first post in Kaggle.<br>Please feel free to give me advice or upvote!","4a61fc10":"Data cleansing will involve the following steps:\n    1. Remove duplicated rows if any\n    2. Find out and process N\/A row in column 'Location Coordinates'\n    3. Change the format of column 'Reported Date' to datetime format\n    4. Process odd entries(i.e. 0 victims under column 'Total Dead and Missing' but Number of Survivors is unknown )","ac0cd615":"3. Change 'Reported Date' column to datetime format","977116f5":"2. Find out N\/A entry under column 'Location Coordinates'","a1c28b3e":"# 1. Snapshtot on data","dcf2ec2a":"Snapshot on Dataframe after cleansing"}}