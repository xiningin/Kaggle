{"cell_type":{"03e16c38":"code","d2e9a1f5":"code","1d93e7f9":"code","36aa02e9":"code","227d2543":"code","035644dd":"code","f107f1c6":"code","e751404e":"code","b284f02b":"code","ea6d482c":"code","b9d20594":"code","eee8fd87":"code","29105971":"code","51b5f439":"code","03af3cff":"code","2066beeb":"code","eafa46c7":"code","63fb636f":"code","8be6c961":"code","8166fb44":"code","43d6e5d3":"code","4613a476":"code","f6ba400b":"code","367b07b9":"code","59dc5ac4":"code","75b3bf26":"code","bcff7656":"code","1ab9652e":"code","0ece42ab":"code","91037632":"code","53021979":"code","34f019ee":"code","afe3b939":"code","87c5f946":"code","611376a6":"code","9415e3b5":"code","a20c8e61":"code","9ff1aca1":"code","48b7e43f":"code","538a3b81":"code","489e9523":"code","3be807ea":"code","addf1622":"code","884c1bae":"code","16c8af09":"code","2bb646bd":"code","cef63822":"code","4063f219":"code","ef8515cb":"code","04b6c9f7":"code","ddf95783":"code","2ac88a7a":"code","3804fd27":"code","fd7f8ce5":"code","cb535808":"code","49d46d50":"code","1a3be032":"code","41ad84e6":"code","50ef4a0b":"code","3029694f":"code","fc7c96c5":"markdown","632f341a":"markdown","ec7ef43d":"markdown","6debc7e8":"markdown","a28c1474":"markdown","5d28e2e9":"markdown","c598bc6e":"markdown","30ed95eb":"markdown","ee058c2c":"markdown","192f65fd":"markdown"},"source":{"03e16c38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d2e9a1f5":"import pandas as pd\nimport numpy as np","1d93e7f9":"#importando arquivos\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","36aa02e9":"#verificando tamanho dos DFs\ndf_train.shape, df_test.shape","227d2543":"#Verificando tipo das colunas\ndf_train.dtypes, df_test.dtypes","035644dd":"#Verificando a existencia de valores nulos\ndf_train.info(), df_test.info()","f107f1c6":"#fazendo describe do df de treino;\ndf_train.describe()","e751404e":"df_train.head()","b284f02b":"#Juntando os dataframes para serem tratados\ndf_train = df_train.append(df_test)","ea6d482c":"df_train.shape","b9d20594":"df_train['codigo_mun'] = df_train['codigo_mun'].str.replace('ID_ID_','').astype(int)","eee8fd87":"df_train = pd.concat([df_train, pd.get_dummies(df_train['porte'], prefix='porte').iloc[:, :-1]], \n                   axis =1)","29105971":"df_train = pd.concat([df_train, pd.get_dummies(df_train['regiao'], prefix='regiao').iloc[:, :-1]], \n                   axis =1)","51b5f439":"#Convertendo estado para numero\ndf_train['estado'] = df_train['estado'].astype('category').cat.codes","03af3cff":"#Convertendo municipio para numero\ndf_train['municipio'] = df_train['municipio'].astype('category').cat.codes","2066beeb":"df_train.head()","eafa46c7":"#apagando todos NaNs\n#df_train.dropna(inplace=True)","63fb636f":"df_train.update(df_train['exp_anos_estudo'].fillna(df_train['exp_anos_estudo'].mean()))\n#df_train.update(df_train['exp_anos_estudo'].fillna(0))\n#df_train.update(df_train['exp_anos_estudo'].fillna(df_train['exp_anos_estudo'].median()))","8be6c961":"df_train.update(df_train['exp_vida'].fillna(df_train['exp_vida'].mean()))\n#df_train.update(df_train['exp_vida'].fillna(0))\n#df_train.update(df_train['exp_vida'].fillna(df_train['exp_vida'].median()))","8166fb44":"df_train.update(df_train['idhm'].fillna(df_train['idhm'].mean()))\n#df_train.update(df_train['idhm'].fillna(0))\n#df_train.update(df_train['idhm'].fillna(df_train['idhm'].median()))","43d6e5d3":"df_train.update(df_train['indice_governanca'].fillna(df_train['indice_governanca'].mean()))\n#df_train.update(df_train['indice_governanca'].fillna(0))\n#df_train.update(df_train['indice_governanca'].fillna(df_train['indice_governanca'].median()))","4613a476":"#df_train.update(df_train['participacao_transf_receita'].fillna(df_train['participacao_transf_receita'].mean()))\n#df_train.update(df_train['participacao_transf_receita'].fillna(0))\ndf_train.update(df_train['participacao_transf_receita'].fillna(df_train['participacao_transf_receita'].median()))","f6ba400b":"df_train.update(df_train['perc_pop_econ_ativa'].fillna(df_train['perc_pop_econ_ativa'].mean()))\n#df_train.update(df_train['perc_pop_econ_ativa'].fillna(0))\n#df_train.update(df_train['perc_pop_econ_ativa'].fillna(df_train['perc_pop_econ_ativa'].median()))","367b07b9":"df_train.update(df_train['gasto_pc_saude'].fillna(df_train['gasto_pc_saude'].mean()))\n#df_train.update(df_train['gasto_pc_saude'].fillna(0))\n#df_train.update(df_train['gasto_pc_saude'].fillna(df_train['gasto_pc_saude'].median()))","59dc5ac4":"df_train.info()","75b3bf26":"#quem n\u00e3o tiver nota_mat nulla vai para o DF de treino\ntrain_raw = df_train[~df_train['nota_mat'].isnull()]","bcff7656":"#quem tiver nota_mat nulla vai para o DF de teste\ndf_test = df_train[df_train['nota_mat'].isnull()]","1ab9652e":"#atribuindo \ndf_train = train_raw","0ece42ab":"df_train.shape, df_test.shape","91037632":"df_train.corr().nota_mat","53021979":"df_train['nota_mat'] = np.log(df_train['nota_mat'])","34f019ee":"df_train['nota_mat'].head()","afe3b939":"from sklearn.model_selection import train_test_split\n","87c5f946":"#separando em train e valid\ntrain, valid = train_test_split(df_train, random_state=42)","611376a6":"train.shape, valid.shape","9415e3b5":"#importando algoritmos\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor\nfrom sklearn.ensemble import AdaBoostRegressor, GradientBoostingRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR","a20c8e61":"models = {'RandomForest': RandomForestRegressor(random_state=42),\n         'ExtraTrees': ExtraTreesRegressor(random_state=42),\n         'GBM': GradientBoostingRegressor(random_state=42),\n         'DecisionTree': DecisionTreeRegressor(random_state=42),\n         'AdaBoost': AdaBoostRegressor(random_state=42),\n         'KNN 1': KNeighborsRegressor(n_neighbors=1),\n         'KNN 3': KNeighborsRegressor(n_neighbors=3),\n         'KNN 11': KNeighborsRegressor(n_neighbors=11),\n         'SVR': SVR(),\n         'Linear Regression': LinearRegression()}","9ff1aca1":"#Colunas a serem removidas do DF\nremoved_cols = ['populacao', 'pib', 'hab_p_medico', 'gasto_pc_educacao', 'regiao', 'nota_mat', 'Unnamed: 0', 'area', 'capital', 'comissionados', 'comissionados_por_servidor', 'densidade_dem','municipio',\n                'porte', 'ranking_igm', 'servidores', 'taxa_empreendedorismo']\n","48b7e43f":"feats = [c for c in df_train.columns if c not in removed_cols]","538a3b81":"feats","489e9523":"from sklearn.metrics import mean_squared_error","3be807ea":"def run_model(model, train, valid, feats, y_name):\n    model.fit(train[feats], train[y_name])\n    preds = model.predict(valid[feats])\n    return mean_squared_error(valid[y_name], preds)**(1\/2)","addf1622":"import warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)","884c1bae":"#Criando score para cada um dos algoritmos\nscores = []\nfor name, model in models.items():\n    score = run_model(model, train, valid, feats, 'nota_mat')\n    scores.append(score)\n    print(name+':', score)","16c8af09":"#Plotando scores\npd.Series(scores, index=models.keys()).sort_values(ascending=False).plot.barh()\n","2bb646bd":"#Criando coluna preds com a m\u00e9dia das notas de matematica\ntrain['preds'] = train['nota_mat'].mean()","cef63822":"train['preds']","4063f219":"train.shape, train['nota_mat'].mean()\n","ef8515cb":"mean_squared_error(train['nota_mat'], train['preds'])","04b6c9f7":"from sklearn.ensemble import RandomForestRegressor\n","ddf95783":"rf = RandomForestRegressor(random_state=42, n_jobs=-1)\n","2ac88a7a":"rf.fit(train[feats], train['nota_mat'])\n","3804fd27":"#rodando o modelo para o df de treino com as colunas que n\u00e3o foram removidas\ntrain_preds = rf.predict(train[feats])\n","fd7f8ce5":"train_preds","cb535808":"mean_squared_error(train['nota_mat'], train_preds)**(1\/2)","49d46d50":"#rodando o modelo para o df de valida\u00e7\u00e3o com as colunas que n\u00e3o foram removidas\nvalid_preds = rf.predict(valid[feats])\n","1a3be032":"mean_squared_error(valid['nota_mat'], valid_preds)**(1\/2)","41ad84e6":"df_test['nota_mat'] = np.exp(rf.predict(df_test[feats]))","50ef4a0b":"#Plotando as vari\u00e1veis que mais influenciam o modelo\npd.Series(rf.feature_importances_, index=feats).sort_values().plot.barh()\n","3029694f":"df_test[['codigo_mun','nota_mat']].to_csv('rf.csv', index=False)","fc7c96c5":"# Tratando NaNs","632f341a":"**3 - Tratando vari\u00e1vel Regiao - Dummy**","ec7ef43d":"# Conhecendo os dados:","6debc7e8":"**- Tratando vari\u00e1vel Porte - Dummy**","a28c1474":"# Dividindo DFs","5d28e2e9":"# Tratando os dados:","c598bc6e":"# Verificando correla\u00e7\u00e3o das vari\u00e1veis com nota de matem\u00e1tica:","30ed95eb":"**- Tratando codigo_mun**","ee058c2c":"# Separando em treino e valida\u00e7\u00e3o","192f65fd":"# Juntando os dados para tratar:"}}