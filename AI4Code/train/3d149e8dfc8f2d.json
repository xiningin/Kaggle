{"cell_type":{"34122168":"code","c0f3152d":"code","ac4a3196":"code","a7b09eaf":"code","5343bef6":"code","94defd48":"code","271441b0":"code","c39a2c5e":"code","fc120894":"code","13cb230a":"code","e075149c":"code","150a4b03":"code","50a7998b":"code","57d00ea8":"code","1512c2ea":"code","b9f93ba4":"code","20696f73":"code","1034281d":"code","457662dc":"markdown","6246de57":"markdown","dc4a4b4b":"markdown","314d61b4":"markdown","fc2eede7":"markdown","7b449115":"markdown","5eab111e":"markdown","bddf2b2a":"markdown"},"source":{"34122168":"import numpy as np\nimport pandas as pd\nimport os\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\npd.options.display.max_columns = 1000\npd.options.display.max_rows = 1000\n\n\npath_submissions = '\/'\ntarget_name = 'target'\nscores_folds = {}\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nDEBUG = False","c0f3152d":"nrows = 10000 if DEBUG else None\n\ntrain=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv\", nrows = nrows)\ntest=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/test.csv\", nrows = nrows)","ac4a3196":"train.describe()","a7b09eaf":"train.isnull().sum()","5343bef6":"colNames=[col for col in test.columns if col not in 'id']","94defd48":"!mkdir -p \/tmp\/pip\/cache\/\n!cp ..\/input\/hdbscan0827-whl\/hdbscan-0.8.27-cp37-cp37m-linux_x86_64.whl \/tmp\/pip\/cache\/\n!pip install --no-index --find-links \/tmp\/pip\/cache\/ hdbscan","271441b0":"%%time\n\nfrom sklearn.preprocessing import StandardScaler\nimport hdbscan\nimport umap\n\nscaler = StandardScaler()\n\nX = scaler.fit_transform(train[colNames])\n\nreducer = umap.UMAP(random_state=42, n_components=2)\nembedding = reducer.fit_transform(X)\n\nclusterer = hdbscan.HDBSCAN(prediction_data=True, min_cluster_size = 250).fit(embedding)\n\nu, counts = np.unique(clusterer.labels_, return_counts=True)\n\nprint(u)\nprint(counts)","c39a2c5e":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=clusterer.labels_, edgecolors='none', cmap='jet');","fc120894":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=train.target, edgecolors='none', cmap='jet');","13cb230a":"from sklearn.preprocessing import RobustScaler\n\nscaler = RobustScaler()\n\nX = scaler.fit_transform(train[colNames])\n\nreducer = umap.UMAP(random_state=42, n_components=2)\nembedding = reducer.fit_transform(X)\nclusterer = hdbscan.HDBSCAN(prediction_data=True, min_cluster_size = 10).fit(embedding)\n\nu, counts = np.unique(clusterer.labels_, return_counts=True)\n\nprint(u)\nprint(counts)","e075149c":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=clusterer.labels_, edgecolors='none', cmap='jet');","150a4b03":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=train.target, edgecolors='none', cmap='jet');","50a7998b":"table_target = pd.crosstab(clusterer.labels_,train.target)","57d00ea8":"proba = table_target.iloc[:,1] \/ table_target.sum(axis=1)","1512c2ea":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=[proba[i] for i in clusterer.labels_], edgecolors='none', cmap='jet',vmin=0.25,vmax=0.75);","b9f93ba4":"Xtest = scaler.transform(test[colNames])\nembedding_test = reducer.transform(Xtest)\ntest_labels, strengths = hdbscan.approximate_predict(clusterer, embedding_test)\ntest_proba = [proba[i] for i in test_labels]","20696f73":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding_test[:, 0], embedding_test[:, 1], s=5, c=test_labels, edgecolors='none', cmap='jet');","1034281d":"sub=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\",nrows = nrows)\nsub['target']=test_proba\nsub.to_csv(\"submission.csv\",index=False)","457662dc":"# Count target by cluster","6246de57":"# Use on test","dc4a4b4b":"# Plot clusters","314d61b4":"# Better scaler","fc2eede7":"# Prediction","7b449115":"# UMAP \/ Hdbscan","5eab111e":"# Plot relation to target","bddf2b2a":"# plot probabilities"}}