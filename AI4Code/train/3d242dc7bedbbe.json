{"cell_type":{"9715d1e4":"code","12aefc54":"code","23fe2dda":"code","19dbd05e":"code","c34015d4":"code","5fa0032e":"code","98433d61":"code","cef3b58b":"code","66a30295":"code","7f3fbe87":"code","aab481b2":"code","12fd3493":"code","1c9fceb1":"code","478cb8ad":"code","0a6fdc7b":"code","b8cb9c39":"code","fee62a67":"code","63d9f4a1":"code","b539b040":"code","36c86846":"code","95543186":"code","d6c35070":"code","1ab2ee2d":"code","82b505b2":"code","73aa998f":"markdown","25297028":"markdown","8ea18e6a":"markdown","55c07daa":"markdown","672eecf2":"markdown","700cb160":"markdown","6c5cfb8a":"markdown","7d65a5b4":"markdown","bd3ed13a":"markdown"},"source":{"9715d1e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme(context='talk', style='whitegrid')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","12aefc54":"data = pd.read_csv('\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv')","23fe2dda":"data.head(10)","19dbd05e":"data.shape","c34015d4":"data.columns","5fa0032e":"data.rename(columns={'Order Date & Time': 'order_date'}, inplace=True)\ndata.columns = data.columns.str.lower()\ndata.columns = data.columns.str.replace(' ', '_')\ndata.columns = data.columns.str.replace('(', '' )\ndata.columns = data.columns.str.replace(')', '')\ndata.head()","98433d61":"data['order_date'] = pd.to_datetime(data.order_date)\ndata['year'] = data.order_date.dt.year\ndata['month'] = data.order_date.dt.month_name()\ndata['date'] = data.order_date.dt.day\ndata['day'] = data.order_date.dt.day_name()\n","cef3b58b":"data.describe(include='all')","66a30295":"data.isnull().sum().nlargest() # to check null values\n","7f3fbe87":"order = data.order_status.value_counts()\ntotal_order = data.order_status.count()\nprint('Total number of ** ORDER RECEIVED ** during the period: ', total_order)\nprint('Total number of ** COMPLETED ORDER ** during the period: ', order.values[0])\nprint('Total number of ** RETURNED ORDER ** during the period: ', order.values[1])\nprint('Total number of ** CANCELLED ORDER ** during the period: ', order.values[2])","aab481b2":"plt.figure(figsize=(20,7))\n\nplt.subplot(1, 2, 1)\n# sns.countplot(x='order_status', data=data,)\nplt.bar(order.index, order.values)\nplt.title(\"ORDER ANALYSIS\", fontsize=40, color='blue')\nplt.xlabel('Order Status')\nplt.ylabel('Order QTY')\n\n\nplt.subplot(1, 2, 2)\nplt.pie(order.values, labels=order.index)\n\nplt.show()\n\nax = sns.catplot(x='year', col='order_status',data=data, kind='count',linewidth=1.5);","12fd3493":"print(data.payment_method.value_counts())\ndata['payment_method'] = data.payment_method.str.replace('Cash on Delivery \\(COD\\)','Cash on delivery')\npayment = data.payment_method.value_counts()\npayment.to_frame()","1c9fceb1":"plt.figure(figsize=(20,7))\n\nplt.subplot(1, 2, 1)\nplt.pie(payment.values, labels=payment.index)\nplt.title('Payment Method Pie Chart')\n\nplt.subplot(1, 2, 2)\n\nplt.bar(payment.index, payment.values,)\nplt.xticks(rotation=90)\nplt.show()\n\nax = sns.catplot(x='year', col='payment_method',data=data, kind='count',linewidth=1.5);","478cb8ad":"top_books = data.book_name.value_counts().head(15)\ntop_books.to_frame()","0a6fdc7b":"top_books_2 = data.book_name.str.split('\/').explode().value_counts().head(15)\ntop_books_2.to_frame()","b8cb9c39":"fig, a = plt.subplots(figsize=(20, 5))\n\nplt.subplot(1, 2, 1)\n\nplt.bar(top_books.index, top_books.values)\nplt.xticks(rotation=90)\nplt.title('Before Data Cleaning', fontsize=15)\n\nplt.subplot(1, 2, 2)\n\nplt.bar(top_books_2.index, top_books_2.values)\nplt.xticks(rotation=90)\nplt.title('After Data Cleaning', fontsize=15)\nplt.show()\n\nfig, b = plt.subplots(figsize=(20, 7))\n\nplt.subplot(1, 2, 1)\nplt.pie(top_books_2.values, labels=top_books_2.index)\nplt.title('Before Data Cleaning', fontsize=15)\n\nplt.subplot(1, 2, 2)\nplt.pie(top_books.values, labels=top_books.index)\nplt.title('After Data Cleaning', fontsize=15)\n\n\nplt.show()\n","fee62a67":"top_city = data.city.str.title().value_counts().head(15)\ntop_city.to_frame()","63d9f4a1":"plt.figure(figsize=(20,7))\n\nplt.subplot(1, 2, 1)\nplt.pie(top_city.values, labels=top_city.index)\nplt.title('Top (15) City Pie Chart', fontsize=20)\n\nplt.subplot(1, 2, 2)\n\nplt.bar(top_city.index, top_city.values,)\nplt.title('Top (15) - City Bar Chart', fontsize=20)\nplt.xticks(rotation=90)\nplt.show()","b539b040":"month_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nday_order = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\ndata['month'] = data.month.str[0:3]\ndata['day'] = data.day.str[0:3]","36c86846":"plt.figure(figsize=(20, 8))\nplt.title('Month Wise Number of Orders', fontsize=30, color='purple')\nsplot = sns.countplot(x=\"month\", data=data, order=month_order)\n\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2, p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\n","95543186":"plt.figure(figsize=(15, 6))\nplt.title('Day Wise Number of Orders', fontsize=30, color='Green')\nsplot = sns.countplot(x=\"day\", data=data, order=day_order)\n\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2, p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\n\n","d6c35070":"data['mm'] = data.order_date.dt.month","1ab2ee2d":"df = data[['year', 'mm']].value_counts().reset_index()\ndf.columns = ['year', 'mm', 'title']\ndf = df[['mm', 'year', 'title']].sort_values('mm')\ndf = df.pivot('mm', 'year', 'title')\ndf = df.fillna(0)\n\nf, ax = plt.subplots(figsize=(15,10))\nsns.heatmap(df, annot=True, linewidths=1, ax=ax, fmt='n', yticklabels=month_order)\nplt.show()","82b505b2":"data.year.value_counts()","73aa998f":"**Facts about Order Status**\n* there are **19239 total orders** out of which **17948 is Completed** i.e., 93.29%\n* and **1142 orders are returned** i.e, 5.94%\n* further **149 orders are cancelled** i.e, 0.77%\n\n**Observation about Order Analysis**\n**its mean that in **every 100 orders** there will be only **6 Retunred** and **1 order will be cancelled** \n","25297028":"# After Data Cleaning","8ea18e6a":"# Payment Methods - Findings in Data Frame","55c07daa":"## Top Selling Months & Days","672eecf2":"# To Change Column Names","700cb160":"# Before Data Cleaning","6c5cfb8a":"# Order Status - Findings in Data Frame\n* There are only 3 Unique Value so we start with this one to explore our data","7d65a5b4":"# Top City - (Ordering Cities)","bd3ed13a":"# Top Selling Books"}}