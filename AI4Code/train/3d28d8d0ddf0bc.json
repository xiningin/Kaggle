{"cell_type":{"8a2deb78":"code","0864f6e3":"code","e6a14930":"code","3154aa76":"code","8a260317":"code","27507331":"code","6789ecd3":"code","7c26a282":"code","47c0a3b5":"code","fe2ededc":"code","0957f25f":"code","5404c90b":"markdown","62d9da21":"markdown","fd831ccc":"markdown","a362ad33":"markdown","f598de5b":"markdown","7b2848ba":"markdown","f18d2af4":"markdown","a5bb2949":"markdown","f6ede960":"markdown","d07afc1d":"markdown","6fc87954":"markdown","2273b332":"markdown","749c8fa7":"markdown","b031e68f":"markdown"},"source":{"8a2deb78":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits import mplot3d\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.cluster import MeanShift,estimate_bandwidth,KMeans,AffinityPropagation\n%matplotlib inline","0864f6e3":"data = pd.read_csv('..\/input\/mall-customers\/Mall_Customers.csv')\nn = LabelEncoder()\ndata['Genre'] = n.fit_transform(data['Genre'])\n\ndata=data.drop(['Annual Income (k$)'],axis=1)\ndata = data.drop(['CustomerID'],axis=1)\n\ndata.head()","e6a14930":"bandwidth_ = estimate_bandwidth(data, quantile=0.1, n_samples=len(data))\n\nms = MeanShift(bandwidth=bandwidth_)\nms.fit(data)","3154aa76":"clusters = ms.labels_\ncc = ms.cluster_centers_\nprint(np.unique(clusters))\nprint(cc)","8a260317":"plt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.scatter3D(data['Age'],data['Spending Score (1-100)'],data['Genre'],c=clusters.astype(float),s=50)\nax.scatter3D(cc[:,1],cc[:,2],cc[:,0],s=200,color='black',c=None,marker=\"*\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\nax.set_zticks([0,0.5,1])\nplt.show()","27507331":"plt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\n\nnumber_of_clusters = len(np.unique(clusters))\nc_val = clusters.astype(float)\nmarker = \".so+xd^1\"\nfor i,marker_shape,c_v in zip(range(number_of_clusters),marker,c_val):\n  d = data[clusters==i]\n  ax.set_zticks([0,0.5,1])\n\n  ax.scatter3D(d['Age'],d['Spending Score (1-100)'],d['Genre'],marker=marker_shape,s=50)\n  cc_v = cc[i]\n  ax.scatter3D(cc[:,1],cc[:,2],cc[:,0],s=200,color='black',c=None,marker=\"*\")\nplt.show()\n","6789ecd3":"model_aff = AffinityPropagation()\nmodel_aff.fit(data)\naff_clusters = model_aff.labels_\naff_cc = model_aff.cluster_centers_\nprint(aff_cc)\nprint(np.unique(aff_clusters))\n\nplt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.scatter3D(data['Age'],data['Spending Score (1-100)'],data['Genre'],c=aff_clusters.astype(float),s=50)\nax.scatter3D(aff_cc[:,1],aff_cc[:,2],aff_cc[:,0],s=200,color='black',c=None,marker=\"*\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\nax.set_zticks([0,0.5,1])\nplt.show()\n","7c26a282":"plt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\n\nnumber_of_clusters = len(np.unique(aff_clusters))\nc_val = aff_clusters.astype(float)\nmarker = \".so+xd^1hX\"\nfor i,marker_shape,c_v in zip(range(number_of_clusters),marker,c_val):\n  d = data[aff_clusters==i]\n  ax.set_zticks([0,0.5,1])\n\n  ax.scatter3D(d['Age'],d['Spending Score (1-100)'],d['Genre'],marker=marker_shape,s=50)\n  ax.scatter3D(aff_cc[:,1],aff_cc[:,2],aff_cc[:,0],s=200,color='black',c=None,marker=\"*\")\nplt.show()\n","47c0a3b5":"distance = []\ntotal = 10\nfor k in range(1,total):\n  kmean = KMeans(n_clusters=k,init = 'k-means++')\n  kmean.fit(data)\n  distance.append(kmean.inertia_)\nplt.plot(range(1,total), distance)\nplt.title('Elbow Plot')\nplt.xlabel('No. of clusters')\nplt.ylabel('Distance')\nplt.show()\n","fe2ededc":"kmeans = KMeans(n_clusters = 3, init = 'k-means++').fit(data.values)\n\nk_cc = kmeans.cluster_centers_\nk_clusters = kmeans.labels_\nprint(np.unique(k_clusters))\nprint(k_cc)\n\nplt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.scatter3D(data['Age'],data['Spending Score (1-100)'],data['Genre'],c=k_clusters.astype(float),s=50)\nax.scatter3D(k_cc[:,1],k_cc[:,2],k_cc[:,0],s=200,color='black',c=None,marker=\"*\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\nax.set_zticks([0,0.5,1])\nplt.show()\n","0957f25f":"plt.figure(figsize=(15,10))\nax = plt.axes(projection=\"3d\")\nax.set_xlabel('Age')\nax.set_ylabel('Spending Score (1-100)')\nax.set_zlabel('Gender')\n\nnumber_of_clusters = len(np.unique(k_clusters))\nc_val = k_clusters.astype(float)\nmarker = \".so+xd^1hX\"\nfor i,marker_shape,c_v in zip(range(number_of_clusters),marker,c_val):\n  d = data[k_clusters==i]\n  ax.set_zticks([0,0.5,1])\n\n  ax.scatter3D(d['Age'],d['Spending Score (1-100)'],d['Genre'],marker=marker_shape,s=50)\n  ax.scatter3D(k_cc[:,1],k_cc[:,2],k_cc[:,0],s=200,color='black',c=None,marker=\"*\")\nplt.show()","5404c90b":"**Find the cluster labels and the cluster centres**","62d9da21":"**In this experiment, I have tried to segment the dataset into clusters based on age, income and gender.**","fd831ccc":"**Import all the required libraries. Three methods namely, K-Means, Mean Shift and Affinity Propagation are used**","a362ad33":"**We can also plot using different symbols for different clusters**","f598de5b":"**CONCLUSION: Comparing all the methods, it is clear that K-Means algorithm is not very effective. Affinity propagation produces better clustering and better values of cluster centres than mean shift algorithm. The centres in mean shift algorithm, had floating values for z-axis (gender) which is not possible whereas affinity propagation produces binary values (0 and 1).**","7b2848ba":"# **AFFINITY PROPAGATION**","f18d2af4":"# **PREPROCESSING**","a5bb2949":"**From the elbow plot, the cluster size can be chosen as 3 which has not very high nor very low value of distance.**","f6ede960":"**From above, we can see that 8 clusters can be formed. Since there are three features that are considered, we can do a 3D scatter plot.**","d07afc1d":"**Create an object of MeanShift and estimate the bandwidth parameter using the inbuilt function.**","6fc87954":"**We can also plot using different symbols for different clusters**","2273b332":"# **K-MEANS**","749c8fa7":"**We can also use different symbols for each cluster**","b031e68f":"# **MEAN SHIFT ALGORITHM**"}}