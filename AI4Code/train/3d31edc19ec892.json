{"cell_type":{"8e5179f7":"code","ce6b93cc":"code","616b4a85":"code","fcea693f":"code","6f4a1233":"code","8a079ca3":"code","585b2f11":"code","aa7d35f5":"code","bd59618a":"code","3728e337":"code","cc21032a":"code","d2c42b81":"markdown","d4f70374":"markdown","f5766cef":"markdown","a8ec5150":"markdown","6922955f":"markdown","c0c48f70":"markdown","a6f533ad":"markdown","e99edb20":"markdown","3fb886d6":"markdown"},"source":{"8e5179f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ce6b93cc":"import seaborn as sns # for intractve graphs\n","616b4a85":"import matplotlib.pyplot as plt\nplt.style.use(\"ggplot\")\n%matplotlib inline\n","fcea693f":"train_data = pd.read_csv(\"..\/input\/train.csv\", header=0)\ntest_data = pd.read_csv(\"..\/input\/test.csv\", header=0)\n","6f4a1233":"train_data.info()","8a079ca3":"train_data.isnull().sum()","585b2f11":"sns.countplot(\"target\",data=train_data)\n","aa7d35f5":"# now let us check in the number of Percentage\nCount_Normal_transacation = len(train_data[train_data[\"target\"]==0]) # normal transaction are repersented by 0\nCount_insincere_transacation = len(train_data[train_data[\"target\"]==1]) # fraud by 1\nPercentage_of_Normal_transacation = Count_Normal_transacation\/(Count_Normal_transacation+Count_insincere_transacation)\nprint(\"percentage of normal transacation is\",Percentage_of_Normal_transacation*100)\nPercentage_of_insincere_transacation= Count_insincere_transacation\/(Count_Normal_transacation+Count_insincere_transacation)\nprint(\"percentage of fraud transacation\",Percentage_of_insincere_transacation*100)","bd59618a":"insincere_indices= np.array(train_data[train_data.target==1].index)\nnormal_indices = np.array(train_data[train_data.target==0].index)\n#now let us a define a function for make undersample data with different proportion\n#different proportion means with different proportion of normal classes of data\ndef undersample(normal_indices,insincere_indices,times):#times denote the normal data = times*fraud data\n    Normal_indices_undersample = np.array(np.random.choice(normal_indices,(times*Count_insincere_transacation),replace=False))\n    print(len(Normal_indices_undersample))\n    undersample_data= np.concatenate([insincere_indices,Normal_indices_undersample])\n\n    undersample_data = train_data.iloc[undersample_data,:]\n    #print(undersample_data)\n    print(len(undersample_data))\n\n    print(\"the normal transacation proportion is :\",len(undersample_data[undersample_data.target==0])\/len(undersample_data))\n    print(\"the fraud transacation proportion is :\",len(undersample_data[undersample_data.target==1])\/len(undersample_data))\n    print(\"total number of record in resampled data is:\",len(undersample_data))\n    return(undersample_data)\n","3728e337":"Undersample_data = undersample(normal_indices,insincere_indices,1)","cc21032a":"questions=Undersample_data.iloc[:,1].values.tolist()\nlabels=Undersample_data.iloc[:,2].values.tolist()","d2c42b81":"Now handling the class imbalance problem, we are using a function to tackle this, so just to save some processing time we would be taking an assumption that the training data is class=1 is equal to class=0, means we take equal number of data of both clases.","d4f70374":"**Now we can proceed with handing NLP and Embeddings.**","f5766cef":"Reading our data using pandas","a8ec5150":"lets import few important libraries and packages","6922955f":"Ohh my gosh!! we have class imbalance problem, need to balance it otherwise we will get skewed results.","c0c48f70":"We have 1306122 rows of data and lets see if we have any missing values","a6f533ad":"You can handle change the last parameter of the function for changing the proportion of the classes, as of now I have taken equal proportion.","e99edb20":"Good!! we don't have any missing values, don't have to handle them now. Moving further lets see if have class unbalance problem","3fb886d6":"Lets describe the data "}}