{"cell_type":{"2a65060f":"code","a9b68ca2":"code","77a0cfb6":"code","997a1d1b":"code","67d3f470":"code","1ea20c5b":"code","668b858d":"code","efba5221":"code","491c55ee":"code","d44604c8":"code","27dcc1f3":"code","0d38d602":"code","1295e2e5":"code","fadcd58c":"code","a7604ae1":"code","0658890b":"code","e457682c":"code","46a98acc":"code","21345090":"code","3ba91810":"code","25313118":"code","dea74282":"code","0b4884e4":"code","92a9079b":"code","52906a7f":"code","ad10f133":"code","2c73ee97":"code","c830861f":"code","c6364cd8":"code","609eb9d2":"code","85a6d755":"code","be997e61":"code","0d5e48dc":"code","22cab8c4":"code","c9c591c3":"code","5839c51c":"code","3a0f8a4e":"code","2d722c00":"code","dca3486a":"markdown","4d55c80d":"markdown","3e7d2541":"markdown","a2dac7f2":"markdown","daf7f156":"markdown","abdac4c3":"markdown","47eee0c4":"markdown","7b8caac3":"markdown","083529fd":"markdown","856fe29c":"markdown","c6fc1bbc":"markdown","007d11b8":"markdown","be4aa5b0":"markdown","fe6be78f":"markdown","843e8379":"markdown","dae65cba":"markdown","b2d30ce5":"markdown","6d9c01b0":"markdown","ca0c6d81":"markdown","13b9ee9d":"markdown","ac9afe29":"markdown","dd59226d":"markdown","5aa05ee5":"markdown","0c2d340b":"markdown","9da864bd":"markdown","f47f3346":"markdown","40fdc302":"markdown","a7e9c01a":"markdown","506e7482":"markdown","abdf4f4c":"markdown","2c5686dd":"markdown","3e484ad4":"markdown","8e721987":"markdown","e9a4fe91":"markdown","236d78e1":"markdown","a3e7d92f":"markdown","99b27027":"markdown","4da8c0b4":"markdown","33ee9831":"markdown","fa0c66b8":"markdown"},"source":{"2a65060f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","a9b68ca2":"df=pd.read_csv('\/kaggle\/input\/real-estate-price-prediction\/Real estate.csv')","77a0cfb6":"df.head()","997a1d1b":"df.drop('No', axis=1, inplace=True)","67d3f470":"df.columns","1ea20c5b":"df.shape","668b858d":"df.info()","efba5221":"df.describe()","491c55ee":"plt.figure(figsize=(8,3))\nsns.displot(x=df['Y house price of unit area'], kde=True, aspect=2, color='purple')\nplt.xlabel('house price of unit area')","d44604c8":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X1 transaction date'])","27dcc1f3":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X2 house age'])","0d38d602":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X3 distance to the nearest MRT station'])","1295e2e5":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X4 number of convenience stores'])","fadcd58c":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X5 latitude'])","a7604ae1":"sns.jointplot(data=df, y=df['Y house price of unit area'], x=df['X6 longitude'])","0658890b":"df.corr()","e457682c":"sns.heatmap(df.corr(), annot=True,cmap='Greens')","46a98acc":"X = df.drop('Y house price of unit area',axis=1)\ny = df['Y house price of unit area']","21345090":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","3ba91810":"from sklearn.linear_model import LinearRegression\nLR= LinearRegression()\nLR.fit(X_train, y_train)","25313118":"pd.DataFrame(LR.coef_, X.columns, columns=['Coeficient'])","dea74282":"y_pred=LR.predict(X_test)","0b4884e4":"from sklearn import metrics\nMAE_simple= metrics.mean_absolute_error(y_test, y_pred)\nMSE_simple= metrics.mean_squared_error(y_test, y_pred)\nRMSE_simple=np.sqrt(MSE_simple)\n\npd.DataFrame([MAE_simple, MSE_simple, RMSE_simple], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","92a9079b":"print('predicted mean:' ,np.mean(y_pred))\nprint('real mean:' ,df['Y house price of unit area'].mean())","52906a7f":"test_residuals=y_test-y_pred","ad10f133":"sns.displot(x=test_residuals)","2c73ee97":"sns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","c830861f":"X = df.drop('Y house price of unit area',axis=1)\ny = df['Y house price of unit area']","c6364cd8":"from sklearn.preprocessing import PolynomialFeatures\nPF=PolynomialFeatures(degree=2, include_bias=False)\npoly_features=PF.fit_transform(X)","609eb9d2":"poly_features.shape","85a6d755":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","be997e61":"from sklearn.linear_model import LinearRegression\npolymodel=LinearRegression()\npolymodel.fit(X_train, y_train)","0d5e48dc":"y_pred=polymodel.predict(X_test)","22cab8c4":"MAE_Poly = metrics.mean_absolute_error(y_test,y_pred)\nMSE_Poly = metrics.mean_squared_error(y_test,y_pred)\nRMSE_Poly = np.sqrt(MSE_Poly)\n\npd.DataFrame([MAE_Poly, MSE_Poly, RMSE_Poly], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","c9c591c3":"pd.DataFrame({'Poly Metrics': [MAE_Poly, MSE_Poly, RMSE_Poly], 'Simple Metrics':[MAE_simple, MSE_simple, RMSE_simple]}, index=['MAE', 'MSE', 'RMSE'])","5839c51c":"train_RMSE_list=[]\ntest_RMSE_list=[]\n\nfor d in range(1,10):\n    \n    polynomial_converter= PolynomialFeatures(degree=d, include_bias=False)\n    poly_features= polynomial_converter.fit_transform(X)\n    \n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n    \n    polymodel=LinearRegression()\n    polymodel.fit(X_train, y_train)\n    \n    y_train_pred=polymodel.predict(X_train)\n    y_test_pred=polymodel.predict(X_test)\n    \n    train_RMSE=np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))\n    \n    test_RMSE=np.sqrt(metrics.mean_squared_error(y_test, y_test_pred))\n        \n    train_RMSE_list.append(train_RMSE)\n    test_RMSE_list.append(test_RMSE)","3a0f8a4e":"plt.plot(range(1,6), train_RMSE_list[:5], label='Train RMSE')\nplt.plot(range(1,6), test_RMSE_list[:5], label='Test RMSE')\n\nplt.xlabel('Polynomial Degree')\nplt.ylabel('RMSE')\nplt.legend()","2d722c00":"display(pd.DataFrame({'degree': list(range(1, 10)),'train_RMSE': train_RMSE_list,'test_RMSE':test_RMSE_list}).set_index('degree'))","dca3486a":"The more latitude and longtitude, the more expansive the house.","4d55c80d":"## * Step 7-B: Adjusting model parameters","3e7d2541":"The more convenient stores are around a house, the more expensive the house.","a2dac7f2":"## Step 6-B: Evalutaing the model","daf7f156":"The mean absolute error is 4.30 and the mean squared error is 5.30 which is less than the previous model:","abdac4c3":"Splitting the data into train and test:","47eee0c4":"This notebook is about predicting the price of the house per unit area. We first use a linear regression model and then a polynomial regression model and we compare the results to see which one is better.\n\nFirst, let's get to know the data better and then make a linear regression model based on the dataset.","7b8caac3":"There are no missing data and no categorical data.","083529fd":"It is clear that the more distance to the nearest MRT station, the cheaper the house as it is less convenient.","856fe29c":"We can see from the graph that degree=2 is the best to use for this model.","c6fc1bbc":"Preprocessing:","007d11b8":"We can see the house price of the old houses (20-40) are less than newer ones (0-10 years)","be4aa5b0":"## Step 5-B: Predicting the test data","fe6be78f":"## Step 6-A: Evalutaing the model","843e8379":"We can see most of the house prices of unit area are around 40. The distribution seems normal.","dae65cba":"Splitting the data into train and test:","b2d30ce5":"The mean absolute error is 5.39 and the mean squared error is 6.79.","6d9c01b0":"We can see the features are 'transaction date', 'house age', 'distance to the nearest MRT station','number of convenience stores', 'latitude' and 'longitude'.","ca0c6d81":"Coefficients are like this:","13b9ee9d":"## Step 4-A: Building a linear regression model","ac9afe29":"The test residuals seem to have a normal distribution with the mean of nearly 0 which is fine.","dd59226d":"We now check the residuals:","5aa05ee5":"We can see that the 'number of convenience stores', 'latitude', 'longitude' have a possitive and 'distance to the nearest MRT station' has a negative corrolation with the housing price.","0c2d340b":"You can see that we decided to go by degree 2. How did we decide this? look at step 7!","9da864bd":"## Step 4-B: Bulding a polynomial regression","f47f3346":"## Step 5-A: Predicting the test data","40fdc302":"We can see the house price increased a little bit during the time.","a7e9c01a":"## Step 2: Getting to know the data better","506e7482":"## Step 1: Importing the dataset and neccessary libraries:","abdf4f4c":"We have 414 rows and 7 columns!","2c5686dd":"I hope you enjoyed this notebook! If you have any questions, please mention in the comments. If you liked the notebook, please upvote! Thanks!","3e484ad4":"The y test and test residuals do not show a regression which is what we wanted.","8e721987":"Now let's discuss how did we know the degree of the polynomial model:","e9a4fe91":"Training the model:","236d78e1":"Defining the features and target variables:","a3e7d92f":"## Step 3: Exploratory data analysis","99b27027":"## B. polynomial regression","4da8c0b4":"## A. Linear regression","33ee9831":"Training the model:","fa0c66b8":"Defining the features and target variables:"}}