{"cell_type":{"b554b1b5":"code","96514b51":"code","6053d823":"code","2aeb87a6":"code","66090b5f":"code","cd737861":"code","1347d4d4":"code","41293337":"code","1912daa2":"code","045c3982":"code","26a19eb9":"code","bcae1f0c":"code","534fb55c":"code","ef9e700d":"code","7ae9c1e7":"code","9eabbc9b":"code","d6ed5259":"code","3e36d64e":"code","062a6c4a":"code","f3c1dfc4":"code","3946e0bc":"code","b4f47cb7":"code","7c61d563":"code","610b8459":"code","c207e316":"code","0926cf05":"code","ef7b964d":"code","bb35d6f8":"code","84ef4368":"code","7f6b6ac5":"code","7c2fde1b":"code","8602d226":"code","f3ad6d9e":"code","97eee28c":"code","d986a117":"code","f3a30867":"code","c8312c68":"code","b274cae8":"code","acd1b75b":"code","3e359698":"code","6a6fc772":"code","4f27441e":"code","fef2b84f":"code","5d7a37ff":"code","b2915795":"code","6ce64a68":"code","5290b2d3":"markdown"},"source":{"b554b1b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","96514b51":"train = pd.read_csv(\"\/kaggle\/input\/covid-diagnostic\/covid_19_train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/covid-diagnostic\/covid_19_test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/covid-diagnostic\/covid_19_submission.csv\")","6053d823":"train.head()","2aeb87a6":"train.shape","66090b5f":"train.info()","cd737861":"y = train[\"covid_19\"].values\ny","1347d4d4":"y.mean()","41293337":"df = pd.concat([train, test])\ndf.shape","1912daa2":"df.isna().mean(0).sort_values().hist()","045c3982":"df.isna().mean(0).values","26a19eb9":"df = df.drop((df.isna().mean(0)).index[df.isna().mean(0) > 0.95].values, axis = 'columns')","bcae1f0c":"df.head()","534fb55c":"df.groupby('age_quantile').agg({'Platelets': np.median})","ef9e700d":"df['Platelets_gr'] = df['Platelets'] - df.groupby('age_quantile')['Platelets'].transform(np.median)","7ae9c1e7":"df.groupby('age_quantile').agg({'Monocytes': np.median})","9eabbc9b":"df['Monocytes_gr'] = df['Monocytes'] - df.groupby('age_quantile')['Monocytes'].transform(np.median)\ndf['Leukocytes_gr'] = df['Leukocytes'] - df.groupby('age_quantile')['Leukocytes'].transform(np.median)","d6ed5259":"df.fillna(-999, inplace = True)\ndf","3e36d64e":"df.info()","062a6c4a":"df = df.drop('covid_19', axis='columns') ","f3c1dfc4":"df = df.drop('id', axis='columns') ","3946e0bc":"train_X = df.iloc[:4000, :].select_dtypes(exclude=['object']).values\ntest_X = df.iloc[4000:, :].select_dtypes(exclude=['object']).values","b4f47cb7":"#from imblearn.under_sampling import RandomUnderSampler\n\n#ros = RandomUnderSampler(random_state=0)\n#train_X, train_y = ros.fit_sample(train_X, y)","7c61d563":"#from imblearn.over_sampling import RandomOverSampler\n\n#ros = RandomOverSampler(random_state=0)\n#train_X, train_y = ros.fit_sample(train_X, y)","610b8459":"#from imblearn.over_sampling import SMOTE\n\n#ros = SMOTE(k_neighbors=50, random_state=0)\n#train_X, train_y = ros.fit_sample(train_X, y)","c207e316":"train_X.shape","0926cf05":"from sklearn.tree import DecisionTreeClassifier\n\ntree_clf = DecisionTreeClassifier(\n    max_depth=10, \n    min_samples_leaf=28, \n    max_features=0.94, \n    criterion=\"gini\",                                    \n    random_state=1)\n\ndt = tree_clf.fit(train_X, y)\ny_pred = dt.predict_proba(test_X)","ef7b964d":"imp = pd.DataFrame({\n    'colnames': df.columns,\n    'importances': tree_clf.feature_importances_\n})\n\ngood_columns = imp.loc[imp['importances'] != 0, :].colnames.values","bb35d6f8":"imp","84ef4368":"train_X = df.iloc[:4000, :].loc[:, good_columns].values\ntest_X = df.iloc[4000:, :].loc[:, good_columns].values","7f6b6ac5":"#from imblearn.over_sampling import SMOTE\n\n#ros = SMOTE(k_neighbors=50, random_state=0)\n#train_X, train_y = ros.fit_sample(train_X, y)","7c2fde1b":"#from sklearn.tree import DecisionTreeClassifier\n#\n#tree_clf = DecisionTreeClassifier(\n#    max_depth=10, \n#    min_samples_leaf=21, \n#    max_features=0.9, \n#    criterion=\"gini\",                                    \n#    random_state=1)\n#\n#dt = tree_clf.fit(train_X, y)\n#y_pred = dt.predict_proba(test_X)","8602d226":"#from sklearn.model_selection import GridSearchCV\n#\n#param_grid = {\n#    'max_depth': [10], \n#    'min_samples_leaf': [28], \n#    'max_features': [0.94, 0.93, 0.95] \n#}\n#\n#grid = GridSearchCV(tree_clf, cv=5, param_grid=param_grid, n_jobs=-1, scoring='roc_auc')\n#grid.fit(train_X, y)","f3ad6d9e":"#grid.best_score_","97eee28c":"#grid.best_params_","d986a117":"#y_pred = grid.best_estimator_.predict_proba(test_X)","f3a30867":"#from sklearn.tree import DecisionTreeClassifier\n#\n#tree_clf = DecisionTreeClassifier(\n#    max_depth=10, \n#    min_samples_leaf=28, \n#    max_features=0.94, \n#    criterion=\"gini\",                                    \n#    random_state=1)\n#\n#dt = tree_clf.fit(train_X, y)\n#y_pred = dt.predict_proba(test_X)","c8312c68":"#pd.Series(y_pred[:, 1]).hist()","b274cae8":"import lightgbm as lgb\n\n#bt = lgb.LGBMClassifier(n_jobs=-1, objective='binary', boosting_type='gbdt', learning_rate=0.01, random_state=1)\n#\n#\n#grid_params = {\n#    'n_estimators': [200, 250, 300],\n#    'colsample_bytree': [0.9, 0.85, 0.8],\n#    'num_leaves': [5, 10, 20],\n#    'subsample': [1],\n#    'min_split_gain': [0],\n#    'reg_alpha': [0.0, 0.01], \n#    'reg_lambda': [0.0, 0.1],\n#    'min_child_samples': [10, 20,30,40]\n#}\n#\n#grid = GridSearchCV(bt, cv=5, param_grid=grid_params, n_jobs=-1, scoring='roc_auc')\n#grid.fit(train_X, y)","acd1b75b":"#grid.best_score_","3e359698":"#grid.best_params_","6a6fc772":"#grid.cv_results_['split0_test_score'].mean(), grid.cv_results_['split1_test_score'].mean(), grid.cv_results_['split2_test_score'].mean(), grid.cv_results_['split3_test_score'].mean(), grid.cv_results_['split0_test_score'].mean()","4f27441e":"bt = lgb.LGBMClassifier(colsample_bytree=0.85, min_child_samples=20, min_split_gain=0, n_estimators=250,\n                        num_leaves=10, reg_alpha=0.0, reg_lambda=0.1, subsample=1, n_jobs=-1, objective='binary', \n                        boosting_type='gbdt', learning_rate=0.01, random_state=1)","fef2b84f":"bt.fit(train_X, y)","5d7a37ff":"bt.predict_proba(test_X)[:,1]","b2915795":"submission['covid_19'] = bt.predict_proba(test_X)[:,1]\nsubmission","6ce64a68":"submission.to_csv('submission.csv', index=False)","5290b2d3":"## The best model"}}