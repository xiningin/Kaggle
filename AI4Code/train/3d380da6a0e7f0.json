{"cell_type":{"10f80abb":"code","09b6284f":"code","e6b6dec9":"code","7dec4213":"code","d1f12806":"code","087b6b43":"code","73e28339":"code","ef837458":"code","1ae94453":"code","873c8170":"code","13cab8e2":"code","27bec997":"code","6c2dbfdc":"code","6ef9d816":"code","744b63a3":"code","d8996ab3":"code","97ca6c58":"code","5b061abe":"code","f1d75831":"code","e185adda":"code","e0af16e0":"code","0f552a96":"code","d1881fcd":"code","03f75cc3":"code","4d38c765":"code","5eb6832a":"code","2d85406f":"code","b099c260":"code","c8392490":"code","f06edd61":"code","f3f08cec":"code","656df881":"code","15480e8f":"code","1922889b":"code","98bf6b39":"code","b1111105":"code","b4589b2a":"code","6b699732":"code","3e517a6a":"code","19799de3":"code","913db368":"code","b6da5baf":"code","476524d2":"code","4447433a":"code","8ca075b3":"code","44bfef88":"code","1f4592c4":"code","75b7bdc6":"code","0ddd390b":"code","a6f368a3":"code","ddf0bc28":"code","a2105ed4":"code","4942bb41":"code","ab0149dd":"markdown","b4fc04f9":"markdown","630e4e7b":"markdown","2c8c05ef":"markdown","211b8cf0":"markdown","81355672":"markdown","673ff573":"markdown","1cd8cd4b":"markdown","74a976b0":"markdown"},"source":{"10f80abb":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","09b6284f":"%time\nfrom fastai.text.all import *","e6b6dec9":"INPUT_DIR = Path(\"..\/input\/commonlitreadabilityprize\")\nINPUT_DIR.ls()","7dec4213":"WORKING_DIR = Path(\".\/\")","d1f12806":"train_df = pd.read_csv(INPUT_DIR \/ 'train.csv')\ntest_df = pd.read_csv(INPUT_DIR \/ 'test.csv')","087b6b43":"train_df.head()","73e28339":"# # Making pretrained weights work without needing to find the default filename\n# if not os.path.exists('\/root\/.cache\/torch\/hub\/checkpoints\/'):\n#         os.makedirs('\/root\/.cache\/torch\/hub\/checkpoints\/')\n# !cp '..\/input\/resnet50\/resnet50.pth' '\/root\/.cache\/torch\/hub\/checkpoints\/resnet50-19c8e357.pth'","ef837458":"!mkdir -p ~\/.fastai\/models\/\n\n!cp -R ..\/input\/fastai-wikitext-wt103-pretrained-model\/* ~\/.fastai\/models\/","1ae94453":"dls_class = DataBlock(blocks=(TextBlock.from_df('excerpt', seq_len=256), RegressionBlock),\n                      get_x=ColReader('text'),\n                      get_y=ColReader('target'),\n                      splitter=RandomSplitter())","873c8170":"dls = dls_class.dataloaders(train_df, bs=64)","13cab8e2":"dls.show_batch()","27bec997":"learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=rmse)","6c2dbfdc":"lrs = learn.lr_find()","6ef9d816":"lrs","744b63a3":"cbs = [\n#     ShowGraphCallback(),\n#     GradientAccumulation(),\n    MixedPrecision(),\n    SaveModelCallback(monitor='_rmse', comp=np.less, min_delta=0.01),\n#     ReduceLROnPlateau(monitor='rmse', comp=np.less, min_delta=0.001, patience=2),\n#     MixUp(0.4),\n    EarlyStoppingCallback(monitor='_rmse', comp=np.less, min_delta=0.01, patience=3),\n#     GradientClip(0.1),\n      ]","d8996ab3":"learn.fine_tune(20, lrs.lr_min\/2, cbs=cbs)","97ca6c58":"learn.show_results()","5b061abe":"learn.save('pretrained_LM')","f1d75831":"SAMPLE_SUBMISSION = pd.read_csv(INPUT_DIR \/ 'sample_submission.csv')","e185adda":"SAMPLE_SUBMISSION.head()","e0af16e0":"test_dl = learn.dls.test_dl(test_df.excerpt)","0f552a96":"preds = learn.get_preds(dl=test_dl, with_decoded=True)\npreds = preds[2].tolist()\npreds = [x for l in preds for x in l]","d1881fcd":"preds","03f75cc3":"SAMPLE_SUBMISSION['target'] = preds","4d38c765":"SAMPLE_SUBMISSION.head()","5eb6832a":"SAMPLE_SUBMISSION.to_csv('submission.csv', index=False)","2d85406f":"train_df.head()","b099c260":"dls_lm = TextDataLoaders.from_df(train_df, text_col='excerpt', is_lm=True)","c8392490":"dls_lm.show_batch(max_n=3)","f06edd61":"learn = language_model_learner(dls_lm, AWD_LSTM, metrics=[accuracy, Perplexity()], wd=0.1).to_fp16()","f3f08cec":"lrs = learn.lr_find()","656df881":"lrs","15480e8f":"cbs = [\n#     ShowGraphCallback(),\n#     GradientAccumulation(),\n#     MixedPrecision(),\n    SaveModelCallback(monitor='valid_loss', comp=np.less, min_delta=0.01),\n#     ReduceLROnPlateau(monitor='rmse', comp=np.less, min_delta=0.001, patience=2),\n#     MixUp(0.4),\n    EarlyStoppingCallback(monitor='valid_loss', comp=np.less, min_delta=0.01, patience=3),\n#     GradientClip(0.1),\n      ]","1922889b":"learn.fine_tune(20, lrs.lr_min, cbs=cbs)","98bf6b39":"learn.save_encoder('finetuned_lm')","b1111105":"dls = dls_class.dataloaders(train_df, bs=64, text_vocab=dls_lm.vocab)","b4589b2a":"learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=rmse)","6b699732":"lrs = learn.lr_find()","3e517a6a":"lrs","19799de3":"cbs = [\n    MixedPrecision(),\n    SaveModelCallback(monitor='valid_loss', comp=np.less, min_delta=0.01),\n    EarlyStoppingCallback(monitor='valid_loss', comp=np.less, min_delta=0.01, patience=3),\n      ]","913db368":"learn = learn.load_encoder('finetuned_lm')","b6da5baf":"learn.fit_one_cycle(1, lrs.lr_min, cbs=cbs)","476524d2":"learn.freeze_to(-2)\nlearn.fit_one_cycle(1, slice(lrs.lr_min\/2\/2.5**4, lrs.lr_min\/2), cbs=cbs)","4447433a":"learn.freeze_to(-3)\nlearn.fit_one_cycle(1, slice(lrs.lr_min\/2\/2\/2.5**4, lrs.lr_min\/2\/2), cbs=cbs)","8ca075b3":"learn.unfreeze()\nlearn.fit_one_cycle(20, slice(lrs.lr_min\/2\/2\/2\/2.5**4, lrs.lr_min\/2\/2.2), cbs=cbs)","44bfef88":"SAMPLE_SUBMISSION = pd.read_csv(INPUT_DIR \/ 'sample_submission.csv')","1f4592c4":"SAMPLE_SUBMISSION.head()","75b7bdc6":"test_dl = learn.dls.test_dl(test_df.excerpt)","0ddd390b":"preds = learn.get_preds(dl=test_dl, with_decoded=True)\npreds = preds[2].tolist()\npreds = [x for l in preds for x in l]","a6f368a3":"\npreds","ddf0bc28":"SAMPLE_SUBMISSION['target'] = preds","a2105ed4":"SAMPLE_SUBMISSION.head()","4942bb41":"\nSAMPLE_SUBMISSION.to_csv('submission.csv', index=False)","ab0149dd":"In this knowledge contest, we are trying to predict the readability for a passage of text.","b4fc04f9":"# Setup","630e4e7b":"# Utilize out of the box language model from `fastai`","2c8c05ef":"## Background\n\n@TODO: update\n\n### For beginners forking this notebook\n\nI highly suggest for anyone interested in solving problems like this to look into the course by Sylvain Gugger and Jeremy Howard. They spent a lot of time building `fastai` into a great library for accessing the latest deep learning techniques.\n\n[Practical Deep Learning for Coders](https:\/\/course.fast.ai\/)","211b8cf0":"# Create Custom Language Model","81355672":"**Version History**\n* *Version 1* - Getting the notebook setup, importing basic modules, reading the dataset, building a simple model, evaluate results, submission using pretrained language model only'\n* *Version 2* - Internet off :)\n* *Version 3* - Integrating [my own dataset](https:\/\/www.kaggle.com\/abee82\/fastai-wikitext-wt103-pretrained-model) to pull in the WikiText-103 pretained model for `fastai`\n* *Version 4* - Fixed submision file\n* *Version 5* - Added fine tuned model submission","673ff573":"# Fine tuned LM submission","1cd8cd4b":"# A fastai implementation for the CommonLit Readability Contest","74a976b0":"## Pretrained LM Submission"}}