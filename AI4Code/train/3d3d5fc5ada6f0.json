{"cell_type":{"c2369891":"code","c6771953":"code","07e3b4ff":"code","17cdffcd":"code","dde8b737":"code","aaaf0576":"code","f565daa8":"code","afdb5dc9":"code","f23a6163":"code","b3f37c39":"code","ffc0c3af":"code","2b144c78":"code","7bb2c605":"code","35274ae2":"code","ab7af002":"code","b5f564a6":"code","eb628f14":"code","9630d265":"code","2289466f":"code","0ce11a05":"code","222c8cc2":"code","faf333f6":"code","2e496b3c":"code","d55de554":"code","b8db2895":"code","097c9b35":"code","9de5b44b":"code","9afb0a30":"code","36433533":"code","7f0b7b8a":"code","3d51f52c":"markdown","b9b10545":"markdown","c808326d":"markdown","64b31c3a":"markdown","b57cc3d8":"markdown","d2b379f9":"markdown"},"source":{"c2369891":"import numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\n\nimport missingno\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nsns.set_theme(style=\"darkgrid\")","c6771953":"data_train = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')","07e3b4ff":"data_train.head()","17cdffcd":"data_train.info()","dde8b737":"data_train.isna().sum()","aaaf0576":"data_train.describe()","f565daa8":"data_train.hist(bins=20,figsize=(15,10))\nplt.show()","afdb5dc9":"data_train.plot(subplots=True, figsize=(20,40),color='darkslateblue')","f23a6163":"plt.figure(figsize=(15,10))\ncorrelation = data_train.corr()\nsns.heatmap(correlation,annot=True)","b3f37c39":"correlation['target_benzene'].sort_values(ascending = False)","ffc0c3af":"correlation['target_nitrogen_oxides'].sort_values(ascending = False)","2b144c78":"correlation['target_carbon_monoxide'].sort_values(ascending = False)","7bb2c605":"data_train['year']= data_train['date_time'].apply(lambda x: x.split(\"-\")[0])\ndata_train.head()","35274ae2":"data_train.year.unique()","ab7af002":"data_train['month']= data_train['date_time'].apply(lambda x: x.split(\"-\")[1])\ndata_train.head()","b5f564a6":"data_train.month.unique()","eb628f14":"convert_dict = {'year':'int','month':'int'}\ndata_train= data_train.astype(convert_dict)","9630d265":"fig, axs = plt.subplots(ncols=2, nrows=5, figsize=(16, 20))\nplt.set_cmap(\"Set2\")\nplt.subplots_adjust(hspace = 0.3)\nfig.suptitle('target_benzene', fontsize=20)\n\ni=3\nfor r in np.arange(5):\n    for c in [0, 1]:\n        axs[r, c].plot(data_train.loc[data_train[\"month\"]==i,'target_benzene'], color=\"purple\")\n        axs[r, c].set_title(f\"Month #{i}\", fontsize=15)\n        axs[r, c].legend(fontsize=13)\n        i+=1","2289466f":"fig, axs = plt.subplots(ncols=2, nrows=5, figsize=(16, 20))\nplt.set_cmap(\"Set2\")\nplt.subplots_adjust(hspace = 0.3)\nfig.suptitle('target_carbon_monoxide', fontsize=20)\n\ni=3\nfor r in np.arange(5):\n    for c in [0, 1]:\n        axs[r, c].plot(data_train.loc[data_train[\"month\"]==i,'target_carbon_monoxide'], color=\"crimson\")\n        axs[r, c].set_title(f\"Month #{i}\", fontsize=15)\n        axs[r, c].legend(fontsize=13)\n        i+=1","0ce11a05":"fig, axs = plt.subplots(ncols=2, nrows=5, figsize=(16, 20))\nplt.set_cmap(\"Set2\")\nplt.subplots_adjust(hspace = 0.3)\nfig.suptitle('target_nitrogen_oxides', fontsize=20)\n\ni=3\nfor r in np.arange(5):\n    for c in [0, 1]:\n        axs[r, c].plot(data_train.loc[data_train[\"month\"]==i,'target_nitrogen_oxides'], color=\"goldenrod\")\n        axs[r, c].set_title(f\"Month #{i}\", fontsize=15)\n        axs[r, c].legend(fontsize=13)\n        i+=1","222c8cc2":"monthly = {\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'Aug',\n    9: 'Sept',\n    10: 'Oct',\n    11: 'Nov',\n    12: 'Dec',\n    1: 'Jan'\n}\ndata_train['month'] = data_train['month'].replace(monthly)\ndata_train.head()","faf333f6":"data_train['target_benzene'].groupby(data_train['month']).mean()","2e496b3c":"data_train['target_carbon_monoxide'].groupby(data_train['month']).mean()","d55de554":"data_train['target_nitrogen_oxides'].groupby(data_train['month']).mean()","b8db2895":"quaterly = {\n    'March': 1,\n     'April' :1,\n    'May':2,\n    'June':2,\n    'July':2,\n    'Aug':2,\n    'Sept':3,\n    'Oct':3,\n    'Nov':3,\n    'Dec':3,\n    'Jan':1\n}\ndata_train['quarterly'] = data_train['month'].replace(quaterly)\ndata_train.head()","097c9b35":"d =  data_train.drop(columns=['month','year'])\nd['date'] = d['date_time'].apply(lambda x: x.split(\" \")[0])\nd=d.drop(columns='date_time')\nd.head()","9de5b44b":"target=['target_benzene','target_carbon_monoxide','target_nitrogen_oxides']\nfor t in target:\n    my_alpha=0.25\n    fig, ax = plt.subplots(figsize=(16,4))\n    ax.scatter(data_train.date_time, data_train[t], alpha=my_alpha, \n               color='darkred', s=4)\n    ax.xaxis.set_major_locator(plt.MaxNLocator(20)) # reduce number of x-axis labels\n    plt.xticks(rotation=90)\n    plt.title(t)\n    plt.grid()\n    plt.show()","9afb0a30":"    fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(20, 6))\n\n    sns.scatterplot(data_train['sensor_2'], data_train['target_benzene'], ax=ax[0])\n    ax[0].set_title('scatterplot \\n sensor_2 vs target_carbon_monoxide', fontsize = 10, loc='center')\n    ax[0].set_xlabel('sensor_2', fontsize = 10, fontdict=dict(weight='bold'))\n    ax[0].set_ylabel('target_benzene', fontsize = 10, fontdict=dict(weight='bold'))\n\n    sns.scatterplot(data_train['target_benzene'], data_train['target_carbon_monoxide'], ax=ax[1])\n    ax[1].set_title('scatterplot \\n target_benzene vs target_carbon_monoxide', fontsize = 10, loc='center')\n    ax[1].set_xlabel('target_benzene', fontsize = 10, fontdict=dict(weight='bold'))\n    ax[1].set_ylabel('target_carbon_monoxide', fontsize = 10, fontdict=dict(weight='bold'))\n    \n    sns.scatterplot(data_train['target_carbon_monoxide'], data_train['target_nitrogen_oxides'], ax=ax[2])\n    ax[2].set_title('scatterplot \\n target_carbon_monoxide vs target_nitrogen_oxides', fontsize = 10, loc='center')\n    ax[2].set_xlabel('target_carbon_monoxide', fontsize = 10, fontdict=dict(weight='bold'))\n    ax[2].set_ylabel('target_nitrogen_oxides', fontsize = 10, fontdict=dict(weight='bold'))","36433533":"for t in target:\n    fig, ax = plt.subplots(figsize=(16, 6))\n\n\n    sns.lineplot(data_train['month'], data_train[t], palette='mako')\n    ax.set_title('Seasonal plot of '+t , fontsize = 20, loc='center', fontdict=dict(weight='bold'))\n    ax.set_xlabel('Month', fontsize = 16, fontdict=dict(weight='bold'))\n    ax.set_ylabel('Salinity Surface', fontsize = 16, fontdict=dict(weight='bold'))\n\n\n    fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(16, 6))\n\n    sns.scatterplot(data_train['month'], data_train[t], ax=ax[0])\n    ax[0].set_title('Month-wise Scatter Plot', fontsize = 15, loc='center', fontdict=dict(weight='bold'))\n    ax[0].set_xlabel('month', fontsize = 16, fontdict=dict(weight='bold'))\n    ax[0].set_ylabel(t, fontsize = 16, fontdict=dict(weight='bold'))\n\n    sns.boxplot(data_train['month'], data_train[t], ax=ax[1])\n    ax[1].set_title('Month-wise Box Plot', fontsize = 15, loc='center', fontdict=dict(weight='bold'))\n    ax[1].set_xlabel('Month', fontsize = 16, fontdict=dict(weight='bold'))\n    ax[1].set_ylabel(t, fontsize = 16, fontdict=dict(weight='bold'))","7f0b7b8a":"fig, axes = plt.subplots(4, 1, figsize=(15, 20), sharex=True)\nfor name, ax in zip(['sensor_1', 'sensor_2', 'sensor_3', 'sensor_4','sensor_5','target_carbon_monoxide','target_benzene',\n                     'target_nitrogen_oxides'], axes):\n    sns.boxplot(data = data_train, x='month', y=name, ax=ax)\n    ax.set_ylabel(\"\")\n    ax.set_title(name)\n    if ax != axes[-1]:\n        ax.set_xlabel('')","3d51f52c":"The graph of deg_C and relative humidity apears like a reflection. The graph for target_benzene and target_carbon_monoxide shows noticable resemblance.","b9b10545":"**Categorizing the months as the names**\n\n\n","c808326d":"Let's have a look at all the variables and their trend","64b31c3a":" **The values show that target_benzene is highly correlated with sensor_2 values while target_carbon_monoxide shows high correlation with target_benzene and target_nitrogen_oxides is correlated to target_carbon_monoxide**","b57cc3d8":"## Let us look at the correlation values of the variables.","d2b379f9":"There are some noticable flat areas in the 4th, 6th, 8th and 12th month. We need to figure out what is special about them or maybe they are just garbage values that needs to be fixed before applying ML."}}