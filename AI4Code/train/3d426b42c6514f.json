{"cell_type":{"d38b4c69":"code","d1cd102a":"code","09e531c0":"code","e0683979":"code","d5ff7356":"code","f5a5a201":"code","ae97e1fe":"code","c35a1f96":"code","4f002f9f":"code","975f686f":"code","42870a18":"code","0e4b76ae":"code","2c0a403e":"code","9dd42a75":"code","21e80f0d":"code","567da655":"code","d178d517":"code","605db502":"code","0dd8e161":"code","127a917e":"code","9b68fa3b":"code","ebeb1c22":"code","584ff5e1":"code","2bd33137":"code","367d1a99":"code","507f1d82":"code","65d8765f":"code","3983d605":"code","228bbf00":"code","85acb2dc":"code","1738906c":"code","2171a3fe":"code","de1eb434":"code","4e9b6528":"code","05423c21":"code","65d1fcec":"code","71078429":"code","45985e2c":"code","7bf3d757":"code","ffbcbe9e":"markdown","3a3ab6f7":"markdown","2667584e":"markdown","82f673d2":"markdown","d7905916":"markdown","b634cd12":"markdown","8f060e2b":"markdown","3ac3faa7":"markdown","3d20b08e":"markdown","d818cf3d":"markdown","34b35948":"markdown","0414e1bf":"markdown","d221b4cc":"markdown","02359c62":"markdown","7d796e22":"markdown","b7b103b9":"markdown","ec90d94f":"markdown","3917a3f4":"markdown","7c76a50c":"markdown","8f373eb1":"markdown"},"source":{"d38b4c69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1cd102a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","09e531c0":"cars=pd.read_csv(\"\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv\")\ncars.head()","e0683979":"cars.info()","d5ff7356":"cars.describe()","f5a5a201":"cars.isnull().sum()","ae97e1fe":"cars.shape","c35a1f96":"cars.columns","4f002f9f":"CompanyName = cars['CarName'].apply(lambda x : x.split(' ')[0])\ncars.insert(3,\"CompanyName\",CompanyName)\ncars.drop(['CarName'],axis=1,inplace=True)\ncars.head()","975f686f":"cars[\"CompanyName\"].unique()","42870a18":"cars[\"CompanyName\"]=cars[\"CompanyName\"].str.lower()\n\ndef change(a,b):\n    cars[\"CompanyName\"].replace(a,b,inplace=True)\n    \nchange('maxda','mazda')\nchange('porcshce','porsche')\nchange('toyouta','toyota')\nchange('vokswagen','volkswagen')\nchange('vw','volkswagen')\n\n\ncars[\"CompanyName\"].unique()","0e4b76ae":"cars.loc[cars.duplicated()]","2c0a403e":"cars.columns","9dd42a75":"import seaborn as sns","21e80f0d":"plt.subplot(1,2,1)\nplt.title(\"Car Price Spread\")\nsns.boxplot(y=cars.price)\n\nplt.subplot(1,2,2)\nplt.title(\"Car Price Distribution Plot\")\nsns.distplot(cars.price)\n\n\nplt.show()","567da655":"plt.figure(figsize=(25, 6))\n\nplt.subplot(1,3,1)\nplt1 = cars.CompanyName.value_counts().plot.bar()\nplt.title('Companies Histogram')\nplt1.set(xlabel = 'Car company', ylabel='Frequency of company')\n\nplt.subplot(1,3,2)\nplt1 = cars.fueltype.value_counts().plot.bar()\nplt.title('Fuel Type Histogram')\nplt1.set(xlabel = 'Fuel Type', ylabel='Frequency of fuel type')\n\nplt.subplot(1,3,3)\nplt1 = cars.carbody.value_counts().plot.bar()\nplt.title('Car Type Histogram')\nplt1.set(xlabel = 'Car Type', ylabel='Frequency of Car type')\n\nplt.show()","d178d517":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nplt.title('Symboling Histogram')\nsns.countplot(cars.symboling, palette=(\"cubehelix\"))\n\nplt.subplot(1,2,2)\nplt.title('Symboling vs Price')\nsns.boxplot(x=cars.symboling, y=cars.price, palette=(\"cubehelix\"))\n\nplt.show()\n","605db502":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nplt.title('Engine Type Histogram')\nsns.countplot(cars.enginetype, palette=(\"Blues_d\"))\n\nplt.subplot(1,2,2)\nplt.title('Engine Type vs Price')\nsns.boxplot(x=cars.enginetype, y=cars.price, palette=(\"PuBuGn\"))\n\nplt.show()\n\ndf = pd.DataFrame(cars.groupby(['enginetype'])['price'].mean().sort_values(ascending = False))\ndf.plot.bar(figsize=(8,6))\nplt.title('Engine Type vs Average Price')\nplt.show()","0dd8e161":"plt.figure(figsize=(25, 6))\n\ndf = pd.DataFrame(cars.groupby(['CompanyName'])['price'].mean().sort_values(ascending = False))\ndf.plot.bar()\nplt.title('Company Name vs Average Price')\nplt.show()\n\ndf = pd.DataFrame(cars.groupby(['fueltype'])['price'].mean().sort_values(ascending = False))\ndf.plot.bar()\nplt.title('Fuel Type vs Average Price')\nplt.show()\n\ndf = pd.DataFrame(cars.groupby(['carbody'])['price'].mean().sort_values(ascending = False))\ndf.plot.bar()\nplt.title('Car Type vs Average Price')\nplt.show()\n","127a917e":"plt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nplt.title('Door Number Histogram')\nsns.countplot(cars.doornumber, palette=(\"plasma\"))\n\nplt.subplot(1,2,2)\nplt.title('Door Number vs Price')\nsns.boxplot(x=cars.doornumber, y=cars.price, palette=(\"plasma\"))\n\nplt.show()\n\nplt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nplt.title('Aspiration Histogram')\nsns.countplot(cars.aspiration, palette=(\"plasma\"))\n\nplt.subplot(1,2,2)\nplt.title('Aspiration vs Price')\nsns.boxplot(x=cars.aspiration, y=cars.price, palette=(\"plasma\"))\n\nplt.show()","9b68fa3b":"def plot_count(x,fig):\n    plt.subplot(4,2,fig)\n    plt.title(x+' Histogram')\n    sns.countplot(cars[x],palette=(\"magma\"))\n    plt.subplot(4,2,(fig+1))\n    plt.title(x+' vs Price')\n    sns.boxplot(x=cars[x], y=cars.price, palette=(\"magma\"))\n    \nplt.figure(figsize=(15,20))\n\nplot_count('enginelocation', 1)\nplot_count('cylindernumber', 3)\nplot_count('fuelsystem', 5)\nplot_count('drivewheel', 7)\n\nplt.tight_layout()","ebeb1c22":"def scatter(x,fig):\n    plt.subplot(5,2,fig)\n    plt.scatter(cars[x],cars['price'])\n    plt.title(x+' vs Price')\n    plt.ylabel('Price')\n    plt.xlabel(x)\n\nplt.figure(figsize=(10,20))\n\nscatter('carlength', 1)\nscatter('carwidth', 2)\nscatter('carheight', 3)\nscatter('curbweight', 4)\n\nplt.tight_layout()","584ff5e1":"def pp(x,y,z):\n    sns.pairplot(cars, x_vars=[x,y,z], y_vars='price',size=4, aspect=1, kind='scatter')\n    plt.show()\n\npp('enginesize', 'boreratio', 'stroke')\npp('compressionratio', 'horsepower', 'peakrpm')\npp('wheelbase', 'citympg', 'highwaympg')\n","2bd33137":"np.corrcoef(cars['carlength'], cars['carwidth'])[0, 1]","367d1a99":"cars=cars.drop(['car_ID','CompanyName','symboling'],axis=1)","507f1d82":"cars.head()","65d8765f":"pd.set_option('display.max_columns', None)\ncars.head()","3983d605":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","228bbf00":"df_col=(\"fueltype\",\"aspiration\",\"doornumber\",\"carbody\",\"drivewheel\",\"enginelocation\",\"enginetype\",\"cylindernumber\",\"fuelsystem\")","85acb2dc":"for i in df_col:\n    cars[i]=le.fit_transform(cars[i])","1738906c":"cars.head()","2171a3fe":"cars.info()","de1eb434":"X=cars.iloc[:,:-1].values\ny=cars.iloc[:,-1].values","4e9b6528":"print(X)","05423c21":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)","65d1fcec":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(X_train, y_train)","71078429":"y_pred=regressor.predict(X_test)","45985e2c":"regressor.score(X_test,y_test)","7bf3d757":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","ffbcbe9e":"Inference :\n\n1.Very few datapoints for enginelocation categories to make an inference.\n\n2.Most common number of cylinders are four, six and five. Though eight cylinders have the highest price range.\n\n3.mpfi and 2bbl are most common type of fuel systems. mpfi and idi having the highest price range. But there are few data for \n\n4.other categories to derive any meaningful inference\n\n5.A very significant difference in drivewheel category. Most high ranged cars seeme to prefer rwd drivewheel.","3a3ab6f7":"Inference :\n\n1. Toyota seemed to be favored car company.\n\n2. Number of gas fueled cars are more than diesel.\n\n3. sedan is the top car type prefered.","2667584e":"**Inference :**\n\n1.ohc Engine type seems to be most favored type.\n\n2.ohcv has the highest price range (While dohcv has only one row), ohc and ohcf have the low price range.","82f673d2":"Inference :\n\n1.The plot seemed to be right-skewed, meaning that the most prices in the dataset are low(Below 15,000).\n\n2.There is a significant difference between the mean and the median of the price distribution.\n\n3.The data points are far spread out from the mean, which indicates a high variance in the car prices.(85% of the prices are below 18,500, whereas the remaining 15% are between 18,500 and 45,400.)","d7905916":"**Drop Unnecessary Columns**\n\nCar ID, symboling, car name does not affect the price.","b634cd12":"**ACCURACY SCORE**","8f060e2b":"**IMPORT DATASET**","3ac3faa7":"**DATA VISUALISATION**","3d20b08e":"Inference :\n\n1. It seems that the symboling with 0 and 1 values have high number of rows (i.e. They are most sold.)\n\n2. The cars with -1 symboling seems to be high priced (as it makes sense too, insurance risk rating -1 is quite good). But it seems that symboling with 3 value has the price range similar to -2 value. There is a dip in price at symboling 1.","d818cf3d":"Inference :\n\n1.enginesize, boreratio, horsepower, wheelbase - seem to have a significant positive correlation with price.\n\n2.citympg, highwaympg - seem to have a significant negative correlation with price.","34b35948":"**TRAIN TEST SPLIT OF DATA**","0414e1bf":"Inference :\n\n1.Jaguar and Buick seem to have highest average price.\n\n2.diesel has higher average price than gas.\n\n3.hardtop and convertible have higher average price.","d221b4cc":"Inference :\n\n1.doornumber variable is not affacting the price much. There is no sugnificant difference between the categories in it.\n\n2.It seems aspiration with turbo have higher price range than the std(though it has some high values outside the whiskers.)","02359c62":"**PREDICTING RESULTS**","7d796e22":"**IMPORT LIBRARIES**","b7b103b9":"**APPLYING RANDOM FOREST REGRESSION MODEL ON DATASET**","ec90d94f":"**DATA CLEANING AND PREPERATION**","3917a3f4":"**APPLYING LABEL ENCODING**","7c76a50c":"Inference :\n\n1.carwidth, carlength and curbweight seems to have a poitive correlation with price.\n\n2.carheight doesn't show any significant trend with price.","8f373eb1":"****VISUALISATION NUMERIC DATA****"}}