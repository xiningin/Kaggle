{"cell_type":{"7b160427":"code","283f5e26":"code","5f368cff":"code","5ad1624b":"code","9563ca5c":"code","b11808d9":"code","72879ef6":"code","e8d2333c":"code","72a4044c":"markdown","012201d6":"markdown","efdd28f6":"markdown","7fe1f223":"markdown","427209aa":"markdown","14bf38db":"markdown","418c937b":"markdown"},"source":{"7b160427":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np \nimport matplotlib.pyplot as plt \nimport matplotlib.colors as mcolors\nimport pandas as pd \nimport random\nimport math\nimport time\nfrom sklearn.linear_model import LinearRegression, BayesianRidge\nfrom sklearn.model_selection import RandomizedSearchCV, train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport datetime\nimport operator \nfrom datetime import date\nplt.style.use('seaborn')\n%matplotlib inline \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","283f5e26":"class analisys(object):\n    def __init__(self,data_ts,data_ol,countries,data_col,mode):\n        self.df=data_ts\n        self.countries=countries\n        self.dfColombia = data_col\n        if mode==1:\n            self.radar(data_ol,countries)\n        elif mode==2:\n            self.general_comparison(data_ts,countries)\n        elif mode==3:\n            self.colombia(self.dfColombia)\n        elif mode==4:\n            self.fallecidos_colombia(self.dfColombia)\n        elif mode==5:\n            self.tolima(self.dfColombia)\n\n    def general_comparison(self,data,countries):\n        Nc=len(countries) # number of countries\n        # without zero date\n        plt.figure()\n        for k in range(0,Nc):\n            df_ts=data.loc[data.iloc[:,1]==countries[k]]\n            total_days=len(df_ts.iloc[0, 4:])\n            country_days_ts=np.linspace(0,total_days-1,total_days)\n            country_confirmed = np.array(df_ts.iloc[0, 4:])\n            plt.plot(country_days_ts,country_confirmed,label=countries[k])\n            plt.xlabel('days')\n            plt.ylabel('Confirmed cases')\n        plt.legend(loc='upper left')\n        plt.show()\n        # with zero date\n        plt.figure()\n        for k in range(0,Nc):\n            df_ts=data.loc[data.iloc[:,1]==countries[k]]\n            country_confirmed = np.array(df_ts.iloc[0, 4:])\n            total_days=len(df_ts.iloc[0, 4:])\n            zero_day=0\n            for i in range(0,total_days):\n                if country_confirmed[i]>0:\n                    zero_day=i\n                    break\n            total_days=total_days-zero_day\n            country_days_ts=np.linspace(0,total_days-1,total_days)\n            plt.plot(country_days_ts,country_confirmed[zero_day:],label=countries[k])\n            plt.xlabel('days')\n            plt.ylabel('Confirmed cases')\n        plt.legend(loc='upper left')\n        plt.show()\n        \n    def radar(self,data,countries):\n        Nc=len(countries) # number of countries\n        values = np.zeros([2,9])\n        df_f=data.loc[data['sex'] == \"female\"]\n        df_m=data.loc[data['sex'] == \"male\"]\n        ages_m=df_m.loc[df_m['age']!=\"N\/A\"]\n        values[0,0]=(ages_m['age'] =='0-9').sum() +(ages_m['age']=='0').sum()+(ages_m['age']=='1').sum()+(ages_m['age']=='2').sum()+(ages_m['age']=='3').sum()+(ages_m['age']=='4').sum()+(ages_m['age']=='5').sum()+(ages_m['age']=='6').sum()+(ages_m['age']=='7').sum()+(ages_m['age']=='8').sum()+(ages_m['age']=='9').sum()\n        values[0,1]=(ages_m['age'] =='10-19').sum() +(ages_m['age']=='10').sum()+(ages_m['age']=='11').sum()+(ages_m['age']=='22').sum()+(ages_m['age']=='13').sum()+(ages_m['age']=='14').sum()+(ages_m['age']=='15').sum()+(ages_m['age']=='16').sum()+(ages_m['age']=='17').sum()+(ages_m['age']=='18').sum()+(ages_m['age']=='19').sum()\n        values[0,2]=(ages_m['age'] =='20-29').sum() +(ages_m['age']=='20').sum()+(ages_m['age']=='21').sum()+(ages_m['age']=='32').sum()+(ages_m['age']=='23').sum()+(ages_m['age']=='24').sum()+(ages_m['age']=='25').sum()+(ages_m['age']=='26').sum()+(ages_m['age']=='27').sum()+(ages_m['age']=='28').sum()+(ages_m['age']=='29').sum()\n        values[0,3]=(ages_m['age'] =='30-39').sum() +(ages_m['age']=='30').sum()+(ages_m['age']=='31').sum()+(ages_m['age']=='42').sum()+(ages_m['age']=='33').sum()+(ages_m['age']=='34').sum()+(ages_m['age']=='35').sum()+(ages_m['age']=='36').sum()+(ages_m['age']=='37').sum()+(ages_m['age']=='38').sum()+(ages_m['age']=='39').sum()\n        values[0,4]=(ages_m['age'] =='40-49').sum() +(ages_m['age']=='40').sum()+(ages_m['age']=='41').sum()+(ages_m['age']=='52').sum()+(ages_m['age']=='43').sum()+(ages_m['age']=='44').sum()+(ages_m['age']=='45').sum()+(ages_m['age']=='46').sum()+(ages_m['age']=='47').sum()+(ages_m['age']=='48').sum()+(ages_m['age']=='49').sum()\n        values[0,5]=(ages_m['age'] =='50-59').sum() +(ages_m['age']=='50').sum()+(ages_m['age']=='51').sum()+(ages_m['age']=='62').sum()+(ages_m['age']=='53').sum()+(ages_m['age']=='54').sum()+(ages_m['age']=='55').sum()+(ages_m['age']=='56').sum()+(ages_m['age']=='57').sum()+(ages_m['age']=='58').sum()+(ages_m['age']=='59').sum()\n        values[0,6]=(ages_m['age'] =='60-69').sum() +(ages_m['age']=='60').sum()+(ages_m['age']=='61').sum()+(ages_m['age']=='72').sum()+(ages_m['age']=='63').sum()+(ages_m['age']=='64').sum()+(ages_m['age']=='65').sum()+(ages_m['age']=='66').sum()+(ages_m['age']=='67').sum()+(ages_m['age']=='68').sum()+(ages_m['age']=='69').sum()\n        values[0,7]=(ages_m['age'] =='70-79').sum() +(ages_m['age']=='70').sum()+(ages_m['age']=='71').sum()+(ages_m['age']=='82').sum()+(ages_m['age']=='73').sum()+(ages_m['age']=='74').sum()+(ages_m['age']=='75').sum()+(ages_m['age']=='76').sum()+(ages_m['age']=='77').sum()+(ages_m['age']=='78').sum()+(ages_m['age']=='79').sum()\n        values[0,8]=(ages_m['age'] =='80-89').sum() +(ages_m['age']=='80').sum()+(ages_m['age']=='81').sum()+(ages_m['age']=='92').sum()+(ages_m['age']=='83').sum()+(ages_m['age']=='84').sum()+(ages_m['age']=='85').sum()+(ages_m['age']=='86').sum()+(ages_m['age']=='87').sum()+(ages_m['age']=='88').sum()+(ages_m['age']=='89').sum()\n        # womans\n        ages_f=df_f.loc[df_f['age']!=\"N\/A\"]\n        values[1,0]=(ages_f['age'] =='0-9').sum()   +(ages_f['age']=='0').sum() +(ages_f['age']=='1').sum() +(ages_f['age']=='2').sum() +(ages_f['age']=='3').sum() +(ages_f['age']=='4').sum() +(ages_f['age']=='5').sum() +(ages_f['age']=='6').sum() +(ages_f['age']=='7').sum() +(ages_f['age']=='8').sum() +(ages_f['age']=='9').sum()\n        values[1,1]=(ages_f['age'] =='10-19').sum() +(ages_f['age']=='10').sum()+(ages_f['age']=='11').sum()+(ages_f['age']=='22').sum()+(ages_f['age']=='13').sum()+(ages_f['age']=='14').sum()+(ages_f['age']=='15').sum()+(ages_f['age']=='16').sum()+(ages_f['age']=='17').sum()+(ages_f['age']=='18').sum()+(ages_f['age']=='19').sum()\n        values[1,2]=(ages_f['age'] =='20-29').sum() +(ages_f['age']=='20').sum()+(ages_f['age']=='21').sum()+(ages_f['age']=='32').sum()+(ages_f['age']=='23').sum()+(ages_f['age']=='24').sum()+(ages_f['age']=='25').sum()+(ages_f['age']=='26').sum()+(ages_f['age']=='27').sum()+(ages_f['age']=='28').sum()+(ages_f['age']=='29').sum()\n        values[1,3]=(ages_f['age'] =='30-39').sum() +(ages_f['age']=='30').sum()+(ages_f['age']=='31').sum()+(ages_f['age']=='42').sum()+(ages_f['age']=='33').sum()+(ages_f['age']=='34').sum()+(ages_f['age']=='35').sum()+(ages_f['age']=='36').sum()+(ages_f['age']=='37').sum()+(ages_f['age']=='38').sum()+(ages_f['age']=='39').sum()\n        values[1,4]=(ages_f['age'] =='40-49').sum() +(ages_f['age']=='40').sum()+(ages_f['age']=='41').sum()+(ages_f['age']=='52').sum()+(ages_f['age']=='43').sum()+(ages_f['age']=='44').sum()+(ages_f['age']=='45').sum()+(ages_f['age']=='46').sum()+(ages_f['age']=='47').sum()+(ages_f['age']=='48').sum()+(ages_f['age']=='49').sum()\n        values[1,5]=(ages_f['age'] =='50-59').sum() +(ages_f['age']=='50').sum()+(ages_f['age']=='51').sum()+(ages_f['age']=='62').sum()+(ages_f['age']=='53').sum()+(ages_f['age']=='54').sum()+(ages_f['age']=='55').sum()+(ages_f['age']=='56').sum()+(ages_f['age']=='57').sum()+(ages_f['age']=='58').sum()+(ages_f['age']=='59').sum()\n        values[1,6]=(ages_f['age'] =='60-69').sum() +(ages_f['age']=='60').sum()+(ages_f['age']=='61').sum()+(ages_f['age']=='72').sum()+(ages_f['age']=='63').sum()+(ages_f['age']=='64').sum()+(ages_f['age']=='65').sum()+(ages_f['age']=='66').sum()+(ages_f['age']=='67').sum()+(ages_f['age']=='68').sum()+(ages_f['age']=='69').sum()\n        values[1,7]=(ages_f['age'] =='70-79').sum() +(ages_f['age']=='70').sum()+(ages_f['age']=='71').sum()+(ages_f['age']=='82').sum()+(ages_f['age']=='73').sum()+(ages_f['age']=='74').sum()+(ages_f['age']=='75').sum()+(ages_f['age']=='76').sum()+(ages_f['age']=='77').sum()+(ages_f['age']=='78').sum()+(ages_f['age']=='79').sum()\n        values[1,8]=(ages_f['age'] =='80-89').sum() +(ages_f['age']=='80').sum()+(ages_f['age']=='81').sum()+(ages_f['age']=='92').sum()+(ages_f['age']=='83').sum()+(ages_f['age']=='84').sum()+(ages_f['age']=='85').sum()+(ages_f['age']=='86').sum()+(ages_f['age']=='87').sum()+(ages_f['age']=='88').sum()+(ages_f['age']=='89').sum()\n        df = pd.DataFrame({\n        'group': ['Men','Woman'],\n        '0 a 9':   [values[0,0], values[1,0]],\n        '10 a 19': [values[0,1], values[1,1]],\n        '20 a 29': [values[0,2], values[1,2]],\n        '30 a 39': [values[0,3], values[1,3]],\n        '40 a 49': [values[0,4], values[1,4]],\n        '50 a 59': [values[0,5], values[1,5]],\n        '60 a 69': [values[0,6], values[1,6]],\n        '70 a 79': [values[0,7], values[1,7]],\n        '80 a 89': [values[0,8], values[1,8]]\n        })\n        # number of variable\n        categories=list(df)[1:]\n        N = len(categories)    \n        # What will be the angle of each axis in the plot? (we divide the plot \/ number of variable)\n        angles = [n \/ float(N) * 2 * np.pi for n in range(N)]\n        angles += angles[:1]    \n        # Initialise the spider plot\n        ax = plt.subplot(111, polar=True)    \n        # If you want the first axis to be on top:\n        ax.set_theta_offset(np.pi \/ 2)\n        ax.set_theta_direction(-1)    \n        # Draw one axe per variable + add labels labels yet\n        plt.xticks(angles[:-1], categories)\n        # Draw ylabels\n        ax.set_rlabel_position(0)\n        plt.yticks([30,60,90,120], [\"30\",\"60\",\"90\",\"120\"], color=\"grey\", size=7)\n        plt.ylim(0,150)\n        # ------- PART 2: Add plots\n        # Ind1\n        values=df.loc[0].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Men\")\n        ax.fill(angles, values, 'b', alpha=0.1)\n        # Ind2\n        values=df.loc[1].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Woman\")\n        ax.fill(angles, values, 'r', alpha=0.1)\n        # Add legend\n        plt.legend(loc='upper right', bbox_to_anchor=(0.1, 0.1))\n        plt.title(\"Reported confirmed cases int the world [Age and gender]\")\n        \n    def colombia(self,data):\n        N=data.shape[0]\n        dias=np.zeros([1,N])\n        for k in range(0,N):\n            fecha_date = data.fecha[k].split('\/')\n            month = int(fecha_date[1])\n            day   = int(fecha_date[0])\n            year  = int(2020)\n            if k==0:\n                dia_cero   = date(year,month,day)\n                dias[0,k] = 0\n            else:\n                fecha_b   = date(year,month,day)\n                delta_fecha = (fecha_b-dia_cero).days\n                dias[0,k] = delta_fecha      \n        data['dias']=dias.T\n        L=int(max(data.dias))+1\n        delta_casos=np.zeros([1,L])\n        for k in range(0,L):\n            delta_casos[0,k]=(data.dias==k).sum()\n        casos=np.cumsum(delta_casos)\n        dias=np.linspace(0,L-1,L)\n        plt.figure()\n        plt.bar(dias,delta_casos[0,:])\n        plt.xlabel('days')\n        plt.ylabel('Cases by day of report')\n        plt.show()\n        plt.figure()\n        plt.plot(dias,casos,'.',)\n        plt.plot(dias,casos)\n        plt.xlabel('days')\n        plt.ylabel('Cumulative cases')\n        plt.show()\n        # Radar: Age and gender\n        plt.figure()\n        values = np.zeros([2,9])\n        df_f=data.loc[data['gender'] == \"F\"]\n        df_m=data.loc[data['gender'] == \"M\"]\n        ages_m=df_m.loc[df_m['age']!=\"N\/A\"]\n        values[0,0]=(ages_m['age'] =='0-9').sum() +(ages_m['age']==0).sum()+(ages_m['age']==1).sum()+(ages_m['age']==2).sum()+(ages_m['age']==3).sum()+(ages_m['age']==4).sum()+(ages_m['age']==5).sum()+(ages_m['age']==6).sum()+(ages_m['age']==7).sum()+(ages_m['age']==8).sum()+(ages_m['age']==9).sum()\n        values[0,1]=(ages_m['age'] =='10-19').sum() +(ages_m['age']==10).sum()+(ages_m['age']==11).sum()+(ages_m['age']==22).sum()+(ages_m['age']==13).sum()+(ages_m['age']==14).sum()+(ages_m['age']==15).sum()+(ages_m['age']==16).sum()+(ages_m['age']==17).sum()+(ages_m['age']==18).sum()+(ages_m['age']==19).sum()\n        values[0,2]=(ages_m['age'] =='20-29').sum() +(ages_m['age']==20).sum()+(ages_m['age']==21).sum()+(ages_m['age']==32).sum()+(ages_m['age']==23).sum()+(ages_m['age']==24).sum()+(ages_m['age']==25).sum()+(ages_m['age']==26).sum()+(ages_m['age']==27).sum()+(ages_m['age']==28).sum()+(ages_m['age']==29).sum()\n        values[0,3]=(ages_m['age'] =='30-39').sum() +(ages_m['age']==30).sum()+(ages_m['age']==31).sum()+(ages_m['age']==42).sum()+(ages_m['age']==33).sum()+(ages_m['age']==34).sum()+(ages_m['age']==35).sum()+(ages_m['age']==36).sum()+(ages_m['age']==37).sum()+(ages_m['age']==38).sum()+(ages_m['age']==39).sum()\n        values[0,4]=(ages_m['age'] =='40-49').sum() +(ages_m['age']==40).sum()+(ages_m['age']==41).sum()+(ages_m['age']==52).sum()+(ages_m['age']==43).sum()+(ages_m['age']==44).sum()+(ages_m['age']==45).sum()+(ages_m['age']==46).sum()+(ages_m['age']==47).sum()+(ages_m['age']==48).sum()+(ages_m['age']==49).sum()\n        values[0,5]=(ages_m['age'] =='50-59').sum() +(ages_m['age']==50).sum()+(ages_m['age']==51).sum()+(ages_m['age']==62).sum()+(ages_m['age']==53).sum()+(ages_m['age']==54).sum()+(ages_m['age']==55).sum()+(ages_m['age']==56).sum()+(ages_m['age']==57).sum()+(ages_m['age']==58).sum()+(ages_m['age']==59).sum()\n        values[0,6]=(ages_m['age'] =='60-69').sum() +(ages_m['age']==60).sum()+(ages_m['age']==61).sum()+(ages_m['age']==72).sum()+(ages_m['age']==63).sum()+(ages_m['age']==64).sum()+(ages_m['age']==65).sum()+(ages_m['age']==66).sum()+(ages_m['age']==67).sum()+(ages_m['age']==68).sum()+(ages_m['age']==69).sum()\n        values[0,7]=(ages_m['age'] =='70-79').sum() +(ages_m['age']==70).sum()+(ages_m['age']==71).sum()+(ages_m['age']==82).sum()+(ages_m['age']==73).sum()+(ages_m['age']==74).sum()+(ages_m['age']==75).sum()+(ages_m['age']==76).sum()+(ages_m['age']==77).sum()+(ages_m['age']==78).sum()+(ages_m['age']==79).sum()\n        values[0,8]=(ages_m['age'] =='80-89').sum() +(ages_m['age']==80).sum()+(ages_m['age']==81).sum()+(ages_m['age']==92).sum()+(ages_m['age']==83).sum()+(ages_m['age']==84).sum()+(ages_m['age']==85).sum()+(ages_m['age']==86).sum()+(ages_m['age']==87).sum()+(ages_m['age']==88).sum()+(ages_m['age']==89).sum()\n        # womans\n        ages_f=df_f.loc[df_f['age']!=\"N\/A\"]\n        values[1,0]=(ages_f['age'] =='0-9').sum()   +(ages_f['age']==0).sum() +(ages_f['age']==1).sum() +(ages_f['age']==2).sum() +(ages_f['age']==3).sum() +(ages_f['age']==4).sum() +(ages_f['age']==5).sum() +(ages_f['age']==6).sum() +(ages_f['age']==7).sum() +(ages_f['age']==8).sum() +(ages_f['age']==9).sum()\n        values[1,1]=(ages_f['age'] =='10-19').sum() +(ages_f['age']==10).sum()+(ages_f['age']==11).sum()+(ages_f['age']==22).sum()+(ages_f['age']==13).sum()+(ages_f['age']==14).sum()+(ages_f['age']==15).sum()+(ages_f['age']==16).sum()+(ages_f['age']==17).sum()+(ages_f['age']==18).sum()+(ages_f['age']==19).sum()\n        values[1,2]=(ages_f['age'] =='20-29').sum() +(ages_f['age']==20).sum()+(ages_f['age']==21).sum()+(ages_f['age']==32).sum()+(ages_f['age']==23).sum()+(ages_f['age']==24).sum()+(ages_f['age']==25).sum()+(ages_f['age']==26).sum()+(ages_f['age']==27).sum()+(ages_f['age']==28).sum()+(ages_f['age']==29).sum()\n        values[1,3]=(ages_f['age'] =='30-39').sum() +(ages_f['age']==30).sum()+(ages_f['age']==31).sum()+(ages_f['age']==42).sum()+(ages_f['age']==33).sum()+(ages_f['age']==34).sum()+(ages_f['age']==35).sum()+(ages_f['age']==36).sum()+(ages_f['age']==37).sum()+(ages_f['age']==38).sum()+(ages_f['age']==39).sum()\n        values[1,4]=(ages_f['age'] =='40-49').sum() +(ages_f['age']==40).sum()+(ages_f['age']==41).sum()+(ages_f['age']==52).sum()+(ages_f['age']==43).sum()+(ages_f['age']==44).sum()+(ages_f['age']==45).sum()+(ages_f['age']==46).sum()+(ages_f['age']==47).sum()+(ages_f['age']==48).sum()+(ages_f['age']==49).sum()\n        values[1,5]=(ages_f['age'] =='50-59').sum() +(ages_f['age']==50).sum()+(ages_f['age']==51).sum()+(ages_f['age']==62).sum()+(ages_f['age']==53).sum()+(ages_f['age']==54).sum()+(ages_f['age']==55).sum()+(ages_f['age']==56).sum()+(ages_f['age']==57).sum()+(ages_f['age']==58).sum()+(ages_f['age']==59).sum()\n        values[1,6]=(ages_f['age'] =='60-69').sum() +(ages_f['age']==60).sum()+(ages_f['age']==61).sum()+(ages_f['age']==72).sum()+(ages_f['age']==63).sum()+(ages_f['age']==64).sum()+(ages_f['age']==65).sum()+(ages_f['age']==66).sum()+(ages_f['age']==67).sum()+(ages_f['age']==68).sum()+(ages_f['age']==69).sum()\n        values[1,7]=(ages_f['age'] =='70-79').sum() +(ages_f['age']==70).sum()+(ages_f['age']==71).sum()+(ages_f['age']==82).sum()+(ages_f['age']==73).sum()+(ages_f['age']==74).sum()+(ages_f['age']==75).sum()+(ages_f['age']==76).sum()+(ages_f['age']==77).sum()+(ages_f['age']==78).sum()+(ages_f['age']==79).sum()\n        values[1,8]=(ages_f['age'] =='80-89').sum() +(ages_f['age']==80).sum()+(ages_f['age']==81).sum()+(ages_f['age']==92).sum()+(ages_f['age']==83).sum()+(ages_f['age']==84).sum()+(ages_f['age']==85).sum()+(ages_f['age']==86).sum()+(ages_f['age']==87).sum()+(ages_f['age']==88).sum()+(ages_f['age']==89).sum() \n        df = pd.DataFrame({\n        'group': ['Men','Woman'],\n        '0 a 9':   [values[0,0], values[1,0]],\n        '10 a 19': [values[0,1], values[1,1]],\n        '20 a 29': [values[0,2], values[1,2]],\n        '30 a 39': [values[0,3], values[1,3]],\n        '40 a 49': [values[0,4], values[1,4]],\n        '50 a 59': [values[0,5], values[1,5]],\n        '60 a 69': [values[0,6], values[1,6]],\n        '70 a 79': [values[0,7], values[1,7]],\n        '80 a 89': [values[0,8], values[1,8]]\n        })\n        print(values)\n        # number of variable\n        categories=list(df)[1:]\n        N = len(categories)    \n        # What will be the angle of each axis in the plot? (we divide the plot \/ number of variable)\n        angles = [n \/ float(N) * 2 * np.pi for n in range(N)]\n        angles += angles[:1]    \n        # Initialise the spider plot\n        ax = plt.subplot(111, polar=True)    \n        # If you want the first axis to be on top:\n        ax.set_theta_offset(np.pi \/ 2)\n        ax.set_theta_direction(-1)    \n        # Draw one axe per variable + add labels labels yet\n        plt.xticks(angles[:-1], categories)\n        # Draw ylabels\n        ax.set_rlabel_position(0)\n        plt.yticks([100,200,300], [\"100\",\"200\",\"300\"], color=\"grey\", size=7)\n        plt.ylim(0,400)\n        # ------- PART 2: Add plots\n        # Ind1\n        values=df.loc[0].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Men\")\n        ax.fill(angles, values, 'b', alpha=0.1)\n        # Ind2\n        values=df.loc[1].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Women\")\n        ax.fill(angles, values, 'r', alpha=0.1)\n        # Add legend\n        plt.legend(loc='upper right', bbox_to_anchor=(0.1, 0.1))\n        plt.title(\"Reported confirmed cases in Colombia [Age and gender]\")\n        \n    def fallecidos_colombia(self,data):\n        drop_rows = data.loc[(data['atencion']!=\"Fallecido\")]\n        data   = data.drop(drop_rows.index)\n        N=data.shape[0]\n        dias=np.zeros([1,N])\n        for i in range(0,N):\n            k=data.index[i]\n            fecha_date = data.fecha[k].split('\/')\n            month = int(fecha_date[1])\n            day   = int(fecha_date[0])\n            year  = int(2020)\n            if i==0:\n                dia_cero   = date(year,month,day)\n                dias[0,i] = 0\n            else:\n                fecha_b   = date(year,month,day)\n                delta_fecha = (fecha_b-dia_cero).days\n                dias[0,i] = delta_fecha      \n        data['dias']=dias.T\n        L=int(max(data.dias))+1\n        delta_casos=np.zeros([1,L])\n        for k in range(0,L):\n            delta_casos[0,k]=(data.dias==k).sum()\n        casos=np.cumsum(delta_casos)\n        dias=np.linspace(0,L-1,L)\n        plt.figure()\n        plt.bar(dias,delta_casos[0,:])\n        plt.xlabel('days')\n        plt.ylabel('Cases by day of report')\n        plt.show()\n        plt.figure()\n        plt.plot(dias,casos,'.',)\n        plt.plot(dias,casos)\n        plt.xlabel('days')\n        plt.ylabel('Cumulative cases')\n        plt.show()\n        # Radar: Age and gender\n        plt.figure()\n        values = np.zeros([2,9])\n        df_f=data.loc[data['gender'] == \"F\"]\n        df_m=data.loc[data['gender'] == \"M\"]\n        ages_m=df_m.loc[df_m['age']!=\"N\/A\"]\n        values[0,0]=(ages_m['age'] =='0-9').sum() +(ages_m['age']==0).sum()+(ages_m['age']==1).sum()+(ages_m['age']==2).sum()+(ages_m['age']==3).sum()+(ages_m['age']==4).sum()+(ages_m['age']==5).sum()+(ages_m['age']==6).sum()+(ages_m['age']==7).sum()+(ages_m['age']==8).sum()+(ages_m['age']==9).sum()\n        values[0,1]=(ages_m['age'] =='10-19').sum() +(ages_m['age']==10).sum()+(ages_m['age']==11).sum()+(ages_m['age']==22).sum()+(ages_m['age']==13).sum()+(ages_m['age']==14).sum()+(ages_m['age']==15).sum()+(ages_m['age']==16).sum()+(ages_m['age']==17).sum()+(ages_m['age']==18).sum()+(ages_m['age']==19).sum()\n        values[0,2]=(ages_m['age'] =='20-29').sum() +(ages_m['age']==20).sum()+(ages_m['age']==21).sum()+(ages_m['age']==32).sum()+(ages_m['age']==23).sum()+(ages_m['age']==24).sum()+(ages_m['age']==25).sum()+(ages_m['age']==26).sum()+(ages_m['age']==27).sum()+(ages_m['age']==28).sum()+(ages_m['age']==29).sum()\n        values[0,3]=(ages_m['age'] =='30-39').sum() +(ages_m['age']==30).sum()+(ages_m['age']==31).sum()+(ages_m['age']==42).sum()+(ages_m['age']==33).sum()+(ages_m['age']==34).sum()+(ages_m['age']==35).sum()+(ages_m['age']==36).sum()+(ages_m['age']==37).sum()+(ages_m['age']==38).sum()+(ages_m['age']==39).sum()\n        values[0,4]=(ages_m['age'] =='40-49').sum() +(ages_m['age']==40).sum()+(ages_m['age']==41).sum()+(ages_m['age']==52).sum()+(ages_m['age']==43).sum()+(ages_m['age']==44).sum()+(ages_m['age']==45).sum()+(ages_m['age']==46).sum()+(ages_m['age']==47).sum()+(ages_m['age']==48).sum()+(ages_m['age']==49).sum()\n        values[0,5]=(ages_m['age'] =='50-59').sum() +(ages_m['age']==50).sum()+(ages_m['age']==51).sum()+(ages_m['age']==62).sum()+(ages_m['age']==53).sum()+(ages_m['age']==54).sum()+(ages_m['age']==55).sum()+(ages_m['age']==56).sum()+(ages_m['age']==57).sum()+(ages_m['age']==58).sum()+(ages_m['age']==59).sum()\n        values[0,6]=(ages_m['age'] =='60-69').sum() +(ages_m['age']==60).sum()+(ages_m['age']==61).sum()+(ages_m['age']==72).sum()+(ages_m['age']==63).sum()+(ages_m['age']==64).sum()+(ages_m['age']==65).sum()+(ages_m['age']==66).sum()+(ages_m['age']==67).sum()+(ages_m['age']==68).sum()+(ages_m['age']==69).sum()\n        values[0,7]=(ages_m['age'] =='70-79').sum() +(ages_m['age']==70).sum()+(ages_m['age']==71).sum()+(ages_m['age']==82).sum()+(ages_m['age']==73).sum()+(ages_m['age']==74).sum()+(ages_m['age']==75).sum()+(ages_m['age']==76).sum()+(ages_m['age']==77).sum()+(ages_m['age']==78).sum()+(ages_m['age']==79).sum()\n        values[0,8]=(ages_m['age'] =='80-89').sum() +(ages_m['age']==80).sum()+(ages_m['age']==81).sum()+(ages_m['age']==92).sum()+(ages_m['age']==83).sum()+(ages_m['age']==84).sum()+(ages_m['age']==85).sum()+(ages_m['age']==86).sum()+(ages_m['age']==87).sum()+(ages_m['age']==88).sum()+(ages_m['age']==89).sum()\n        # womans\n        ages_f=df_f.loc[df_f['age']!=\"N\/A\"]\n        values[1,0]=(ages_f['age'] =='0-9').sum()   +(ages_f['age']==0).sum() +(ages_f['age']==1).sum() +(ages_f['age']==2).sum() +(ages_f['age']==3).sum() +(ages_f['age']==4).sum() +(ages_f['age']==5).sum() +(ages_f['age']==6).sum() +(ages_f['age']==7).sum() +(ages_f['age']==8).sum() +(ages_f['age']==9).sum()\n        values[1,1]=(ages_f['age'] =='10-19').sum() +(ages_f['age']==10).sum()+(ages_f['age']==11).sum()+(ages_f['age']==22).sum()+(ages_f['age']==13).sum()+(ages_f['age']==14).sum()+(ages_f['age']==15).sum()+(ages_f['age']==16).sum()+(ages_f['age']==17).sum()+(ages_f['age']==18).sum()+(ages_f['age']==19).sum()\n        values[1,2]=(ages_f['age'] =='20-29').sum() +(ages_f['age']==20).sum()+(ages_f['age']==21).sum()+(ages_f['age']==32).sum()+(ages_f['age']==23).sum()+(ages_f['age']==24).sum()+(ages_f['age']==25).sum()+(ages_f['age']==26).sum()+(ages_f['age']==27).sum()+(ages_f['age']==28).sum()+(ages_f['age']==29).sum()\n        values[1,3]=(ages_f['age'] =='30-39').sum() +(ages_f['age']==30).sum()+(ages_f['age']==31).sum()+(ages_f['age']==42).sum()+(ages_f['age']==33).sum()+(ages_f['age']==34).sum()+(ages_f['age']==35).sum()+(ages_f['age']==36).sum()+(ages_f['age']==37).sum()+(ages_f['age']==38).sum()+(ages_f['age']==39).sum()\n        values[1,4]=(ages_f['age'] =='40-49').sum() +(ages_f['age']==40).sum()+(ages_f['age']==41).sum()+(ages_f['age']==52).sum()+(ages_f['age']==43).sum()+(ages_f['age']==44).sum()+(ages_f['age']==45).sum()+(ages_f['age']==46).sum()+(ages_f['age']==47).sum()+(ages_f['age']==48).sum()+(ages_f['age']==49).sum()\n        values[1,5]=(ages_f['age'] =='50-59').sum() +(ages_f['age']==50).sum()+(ages_f['age']==51).sum()+(ages_f['age']==62).sum()+(ages_f['age']==53).sum()+(ages_f['age']==54).sum()+(ages_f['age']==55).sum()+(ages_f['age']==56).sum()+(ages_f['age']==57).sum()+(ages_f['age']==58).sum()+(ages_f['age']==59).sum()\n        values[1,6]=(ages_f['age'] =='60-69').sum() +(ages_f['age']==60).sum()+(ages_f['age']==61).sum()+(ages_f['age']==72).sum()+(ages_f['age']==63).sum()+(ages_f['age']==64).sum()+(ages_f['age']==65).sum()+(ages_f['age']==66).sum()+(ages_f['age']==67).sum()+(ages_f['age']==68).sum()+(ages_f['age']==69).sum()\n        values[1,7]=(ages_f['age'] =='70-79').sum() +(ages_f['age']==70).sum()+(ages_f['age']==71).sum()+(ages_f['age']==82).sum()+(ages_f['age']==73).sum()+(ages_f['age']==74).sum()+(ages_f['age']==75).sum()+(ages_f['age']==76).sum()+(ages_f['age']==77).sum()+(ages_f['age']==78).sum()+(ages_f['age']==79).sum()\n        values[1,8]=(ages_f['age'] =='80-89').sum() +(ages_f['age']==80).sum()+(ages_f['age']==81).sum()+(ages_f['age']==92).sum()+(ages_f['age']==83).sum()+(ages_f['age']==84).sum()+(ages_f['age']==85).sum()+(ages_f['age']==86).sum()+(ages_f['age']==87).sum()+(ages_f['age']==88).sum()+(ages_f['age']==89).sum() \n        df = pd.DataFrame({\n        'group': ['Men','Woman'],\n        '0 a 9':   [values[0,0], values[1,0]],\n        '10 a 19': [values[0,1], values[1,1]],\n        '20 a 29': [values[0,2], values[1,2]],\n        '30 a 39': [values[0,3], values[1,3]],\n        '40 a 49': [values[0,4], values[1,4]],\n        '50 a 59': [values[0,5], values[1,5]],\n        '60 a 69': [values[0,6], values[1,6]],\n        '70 a 79': [values[0,7], values[1,7]],\n        '80 a 89': [values[0,8], values[1,8]]\n        })\n        print(values)\n        # number of variable\n        categories=list(df)[1:]\n        N = len(categories)    \n        # What will be the angle of each axis in the plot? (we divide the plot \/ number of variable)\n        angles = [n \/ float(N) * 2 * np.pi for n in range(N)]\n        angles += angles[:1]    \n        # Initialise the spider plot\n        ax = plt.subplot(111, polar=True)    \n        # If you want the first axis to be on top:\n        ax.set_theta_offset(np.pi \/ 2)\n        ax.set_theta_direction(-1)    \n        # Draw one axe per variable + add labels labels yet\n        plt.xticks(angles[:-1], categories)\n        # Draw ylabels\n        ax.set_rlabel_position(0)\n        plt.yticks([5,10,15], [\"5\",\"10\",\"15\"], color=\"grey\", size=7)\n        plt.ylim(0,20)\n        # ------- PART 2: Add plots\n        # Ind1\n        values=df.loc[0].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Men\")\n        ax.fill(angles, values, 'b', alpha=0.1)\n        # Ind2\n        values=df.loc[1].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Women\")\n        ax.fill(angles, values, 'r', alpha=0.1)\n        # Add legend\n        plt.legend(loc='upper right', bbox_to_anchor=(0.1, 0.1))\n        plt.title(\"Reported death cases in Colombia [Age and gender]\")\n        \n    def tolima(self,data):\n        drop_rows = data.loc[(data['Departamento']!=\"Tolima\")]\n        data   = data.drop(drop_rows.index)\n        N=data.shape[0]\n        dias=np.zeros([1,N])\n        for i in range(0,N):\n            k=data.index[i]\n            fecha_date = data.fecha[k].split('\/')\n            month = int(fecha_date[1])\n            day   = int(fecha_date[0])\n            year  = int(2020)\n            if i==0:\n                dia_cero   = date(year,month,day)\n                dias[0,i] = 0\n            else:\n                fecha_b   = date(year,month,day)\n                delta_fecha = (fecha_b-dia_cero).days\n                dias[0,i] = delta_fecha      \n        data['dias']=dias.T\n        L=int(max(data.dias))+1\n        delta_casos=np.zeros([1,L])\n        for k in range(0,L):\n            delta_casos[0,k]=(data.dias==k).sum()\n        casos=np.cumsum(delta_casos)\n        dias=np.linspace(0,L-1,L)\n        plt.figure()\n        plt.bar(dias,delta_casos[0,:])\n        plt.xlabel('days')\n        plt.ylabel('Cases by day of report')\n        plt.show()\n        plt.figure()\n        plt.plot(dias,casos,'.',)\n        plt.plot(dias,casos)\n        plt.xlabel('days')\n        plt.ylabel('Cumulative cases')\n        plt.show()\n        # Radar: Age and gender\n        plt.figure()\n        values = np.zeros([2,9])\n        df_f=data.loc[data['gender'] == \"F\"]\n        df_m=data.loc[data['gender'] == \"M\"]\n        ages_m=df_m.loc[df_m['age']!=\"N\/A\"]\n        values[0,0]=(ages_m['age'] =='0-9').sum() +(ages_m['age']==0).sum()+(ages_m['age']==1).sum()+(ages_m['age']==2).sum()+(ages_m['age']==3).sum()+(ages_m['age']==4).sum()+(ages_m['age']==5).sum()+(ages_m['age']==6).sum()+(ages_m['age']==7).sum()+(ages_m['age']==8).sum()+(ages_m['age']==9).sum()\n        values[0,1]=(ages_m['age'] =='10-19').sum() +(ages_m['age']==10).sum()+(ages_m['age']==11).sum()+(ages_m['age']==22).sum()+(ages_m['age']==13).sum()+(ages_m['age']==14).sum()+(ages_m['age']==15).sum()+(ages_m['age']==16).sum()+(ages_m['age']==17).sum()+(ages_m['age']==18).sum()+(ages_m['age']==19).sum()\n        values[0,2]=(ages_m['age'] =='20-29').sum() +(ages_m['age']==20).sum()+(ages_m['age']==21).sum()+(ages_m['age']==32).sum()+(ages_m['age']==23).sum()+(ages_m['age']==24).sum()+(ages_m['age']==25).sum()+(ages_m['age']==26).sum()+(ages_m['age']==27).sum()+(ages_m['age']==28).sum()+(ages_m['age']==29).sum()\n        values[0,3]=(ages_m['age'] =='30-39').sum() +(ages_m['age']==30).sum()+(ages_m['age']==31).sum()+(ages_m['age']==42).sum()+(ages_m['age']==33).sum()+(ages_m['age']==34).sum()+(ages_m['age']==35).sum()+(ages_m['age']==36).sum()+(ages_m['age']==37).sum()+(ages_m['age']==38).sum()+(ages_m['age']==39).sum()\n        values[0,4]=(ages_m['age'] =='40-49').sum() +(ages_m['age']==40).sum()+(ages_m['age']==41).sum()+(ages_m['age']==52).sum()+(ages_m['age']==43).sum()+(ages_m['age']==44).sum()+(ages_m['age']==45).sum()+(ages_m['age']==46).sum()+(ages_m['age']==47).sum()+(ages_m['age']==48).sum()+(ages_m['age']==49).sum()\n        values[0,5]=(ages_m['age'] =='50-59').sum() +(ages_m['age']==50).sum()+(ages_m['age']==51).sum()+(ages_m['age']==62).sum()+(ages_m['age']==53).sum()+(ages_m['age']==54).sum()+(ages_m['age']==55).sum()+(ages_m['age']==56).sum()+(ages_m['age']==57).sum()+(ages_m['age']==58).sum()+(ages_m['age']==59).sum()\n        values[0,6]=(ages_m['age'] =='60-69').sum() +(ages_m['age']==60).sum()+(ages_m['age']==61).sum()+(ages_m['age']==72).sum()+(ages_m['age']==63).sum()+(ages_m['age']==64).sum()+(ages_m['age']==65).sum()+(ages_m['age']==66).sum()+(ages_m['age']==67).sum()+(ages_m['age']==68).sum()+(ages_m['age']==69).sum()\n        values[0,7]=(ages_m['age'] =='70-79').sum() +(ages_m['age']==70).sum()+(ages_m['age']==71).sum()+(ages_m['age']==82).sum()+(ages_m['age']==73).sum()+(ages_m['age']==74).sum()+(ages_m['age']==75).sum()+(ages_m['age']==76).sum()+(ages_m['age']==77).sum()+(ages_m['age']==78).sum()+(ages_m['age']==79).sum()\n        values[0,8]=(ages_m['age'] =='80-89').sum() +(ages_m['age']==80).sum()+(ages_m['age']==81).sum()+(ages_m['age']==92).sum()+(ages_m['age']==83).sum()+(ages_m['age']==84).sum()+(ages_m['age']==85).sum()+(ages_m['age']==86).sum()+(ages_m['age']==87).sum()+(ages_m['age']==88).sum()+(ages_m['age']==89).sum()\n        # womans\n        ages_f=df_f.loc[df_f['age']!=\"N\/A\"]\n        values[1,0]=(ages_f['age'] =='0-9').sum()   +(ages_f['age']==0).sum() +(ages_f['age']==1).sum() +(ages_f['age']==2).sum() +(ages_f['age']==3).sum() +(ages_f['age']==4).sum() +(ages_f['age']==5).sum() +(ages_f['age']==6).sum() +(ages_f['age']==7).sum() +(ages_f['age']==8).sum() +(ages_f['age']==9).sum()\n        values[1,1]=(ages_f['age'] =='10-19').sum() +(ages_f['age']==10).sum()+(ages_f['age']==11).sum()+(ages_f['age']==22).sum()+(ages_f['age']==13).sum()+(ages_f['age']==14).sum()+(ages_f['age']==15).sum()+(ages_f['age']==16).sum()+(ages_f['age']==17).sum()+(ages_f['age']==18).sum()+(ages_f['age']==19).sum()\n        values[1,2]=(ages_f['age'] =='20-29').sum() +(ages_f['age']==20).sum()+(ages_f['age']==21).sum()+(ages_f['age']==32).sum()+(ages_f['age']==23).sum()+(ages_f['age']==24).sum()+(ages_f['age']==25).sum()+(ages_f['age']==26).sum()+(ages_f['age']==27).sum()+(ages_f['age']==28).sum()+(ages_f['age']==29).sum()\n        values[1,3]=(ages_f['age'] =='30-39').sum() +(ages_f['age']==30).sum()+(ages_f['age']==31).sum()+(ages_f['age']==42).sum()+(ages_f['age']==33).sum()+(ages_f['age']==34).sum()+(ages_f['age']==35).sum()+(ages_f['age']==36).sum()+(ages_f['age']==37).sum()+(ages_f['age']==38).sum()+(ages_f['age']==39).sum()\n        values[1,4]=(ages_f['age'] =='40-49').sum() +(ages_f['age']==40).sum()+(ages_f['age']==41).sum()+(ages_f['age']==52).sum()+(ages_f['age']==43).sum()+(ages_f['age']==44).sum()+(ages_f['age']==45).sum()+(ages_f['age']==46).sum()+(ages_f['age']==47).sum()+(ages_f['age']==48).sum()+(ages_f['age']==49).sum()\n        values[1,5]=(ages_f['age'] =='50-59').sum() +(ages_f['age']==50).sum()+(ages_f['age']==51).sum()+(ages_f['age']==62).sum()+(ages_f['age']==53).sum()+(ages_f['age']==54).sum()+(ages_f['age']==55).sum()+(ages_f['age']==56).sum()+(ages_f['age']==57).sum()+(ages_f['age']==58).sum()+(ages_f['age']==59).sum()\n        values[1,6]=(ages_f['age'] =='60-69').sum() +(ages_f['age']==60).sum()+(ages_f['age']==61).sum()+(ages_f['age']==72).sum()+(ages_f['age']==63).sum()+(ages_f['age']==64).sum()+(ages_f['age']==65).sum()+(ages_f['age']==66).sum()+(ages_f['age']==67).sum()+(ages_f['age']==68).sum()+(ages_f['age']==69).sum()\n        values[1,7]=(ages_f['age'] =='70-79').sum() +(ages_f['age']==70).sum()+(ages_f['age']==71).sum()+(ages_f['age']==82).sum()+(ages_f['age']==73).sum()+(ages_f['age']==74).sum()+(ages_f['age']==75).sum()+(ages_f['age']==76).sum()+(ages_f['age']==77).sum()+(ages_f['age']==78).sum()+(ages_f['age']==79).sum()\n        values[1,8]=(ages_f['age'] =='80-89').sum() +(ages_f['age']==80).sum()+(ages_f['age']==81).sum()+(ages_f['age']==92).sum()+(ages_f['age']==83).sum()+(ages_f['age']==84).sum()+(ages_f['age']==85).sum()+(ages_f['age']==86).sum()+(ages_f['age']==87).sum()+(ages_f['age']==88).sum()+(ages_f['age']==89).sum() \n        df = pd.DataFrame({\n        'group': ['Men','Woman'],\n        '0 a 9':   [values[0,0], values[1,0]],\n        '10 a 19': [values[0,1], values[1,1]],\n        '20 a 29': [values[0,2], values[1,2]],\n        '30 a 39': [values[0,3], values[1,3]],\n        '40 a 49': [values[0,4], values[1,4]],\n        '50 a 59': [values[0,5], values[1,5]],\n        '60 a 69': [values[0,6], values[1,6]],\n        '70 a 79': [values[0,7], values[1,7]],\n        '80 a 89': [values[0,8], values[1,8]]\n        })\n        print(values)\n        # number of variable\n        categories=list(df)[1:]\n        N = len(categories)    \n        # What will be the angle of each axis in the plot? (we divide the plot \/ number of variable)\n        angles = [n \/ float(N) * 2 * np.pi for n in range(N)]\n        angles += angles[:1]    \n        # Initialise the spider plot\n        ax = plt.subplot(111, polar=True)    \n        # If you want the first axis to be on top:\n        ax.set_theta_offset(np.pi \/ 2)\n        ax.set_theta_direction(-1)    \n        # Draw one axe per variable + add labels labels yet\n        plt.xticks(angles[:-1], categories)\n        # Draw ylabels\n        ax.set_rlabel_position(0)\n        plt.yticks([1,2,3], [\"1\",\"2\",\"3\"], color=\"grey\", size=7)\n        plt.ylim(0,4)\n        # ------- PART 2: Add plots\n        # Ind1\n        values=df.loc[0].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Men\")\n        ax.fill(angles, values, 'b', alpha=0.1)\n        # Ind2\n        values=df.loc[1].drop('group').values.flatten().tolist()\n        values += values[:1]\n        ax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Women\")\n        ax.fill(angles, values, 'r', alpha=0.1)\n        # Add legend\n        plt.legend(loc='upper right', bbox_to_anchor=(0.1, 0.1))\n        plt.title(\"Reported confirmed cases in Tolima [Age and gender]\")","5f368cff":"if __name__ == \"__main__\":\n    data_ts = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\n    data_ol = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_open_line_list.csv')\n    data_col= pd.read_csv( '\/kaggle\/input\/covid19colombia\/Casos1.csv', names = [\"id\", \"fecha\", \"ciudad\", \"Departamento\", \"atencion\",\"age\",\"gender\",\"tipo\",\"pais_procedencia\"], header=0)\n    countries =[\"Colombia\",\"Ecuador\",\"Chile\",\"Argentina\",\"Peru\",\"Venezuela\"] ","5ad1624b":" result = analisys(data_ts,data_ol,countries,data_col,1)","9563ca5c":"\nresult    = analisys(data_ts,data_ol,countries,data_col,2)","b11808d9":"result = analisys(data_ts,data_ol,countries,data_col,3)","72879ef6":" result = analisys(data_ts,data_ol,countries,data_col,4)","e8d2333c":"result = analisys(data_ts,data_ol,countries,data_col,5)","72a4044c":"### General analysis for age and gender: \nThis analysis of age group and gender, however is a poor estimation beacuse of insufficient information","012201d6":"Fallecidos en Colombia","efdd28f6":"# Colombia\nIn Colombia the first case of COVID-19 was reported on 03\/06\/2020 in Bogot\u00e1.\nDataBase from [Instituto Nacional de Salud](https:\/\/www.ins.gov.co\/Noticias\/Paginas\/Coronavirus.aspx) ","7fe1f223":"# \u00bfWhat is COVID-19?\nIt is a respiratory disease caused by a new coronavirus type virus, which was first identified in China in January 2020. \n\nThe virus has this name because it's shaped like a crown. It belongs to a large family of viruses, some of which can cause various illnesses, such as the common cold or severe acute respiratory infections.  ","427209aa":"## World","14bf38db":"## South-America","418c937b":"## Tolima"}}