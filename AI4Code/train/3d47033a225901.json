{"cell_type":{"30d088d8":"code","fc566e63":"code","41a765ff":"code","24d5d053":"code","7b67ce2e":"code","c874bb51":"code","4fde62e1":"code","28f982d5":"code","66d78a20":"code","c0bea51f":"code","dfa752a0":"code","5ab00021":"code","9064b7b7":"code","c0811d09":"code","2a5f5d35":"code","20c08898":"code","a7aa4432":"code","28b88444":"code","d8f78b35":"code","308ba3ad":"code","3606cbf2":"code","3c98cda3":"code","c36cf299":"code","cf7a536c":"markdown","99bc40a8":"markdown","1731b760":"markdown","f9aeafc5":"markdown","66aa7516":"markdown"},"source":{"30d088d8":"import pandas as pd \nimport datetime\n","fc566e63":"cal= pd.read_csv(r\"\/kaggle\/input\/m5-forecasting-accuracy\/calendar.csv\")\nsell= pd.read_csv(r\"\/kaggle\/input\/m5-forecasting-accuracy\/sell_prices.csv\")\ntrain= pd.read_csv(r\"\/kaggle\/input\/m5-forecasting-accuracy\/sales_train_validation.csv\")\nss= pd.read_csv(r\"\/kaggle\/input\/m5-forecasting-accuracy\/sample_submission.csv\")","41a765ff":"cal.shape","24d5d053":"cal.isnull().sum()","7b67ce2e":"sell.head()","c874bb51":"# includes all the items of 3 states= 30490\n# shows sale history of every item\n\ntrain.head()","4fde62e1":"train.shape","28f982d5":"ss.head()","66d78a20":"sell.head()","c0bea51f":"train_state= train.drop(labels= ['id', 'item_id', 'dept_id', 'cat_id', 'store_id'],axis=1)\ntrain_state= train_state.groupby(\"state_id\", as_index=False).sum()\ntrain_state= train_state.T\ntrain_state= train_state.rename(columns=train_state.iloc[0]).drop(train_state.index[0])\ntrain_state= train_state.reset_index()\ntrain_state= train_state.rename(columns={\"index\":\"d\"})\ntrain_state= pd.merge(train_state, cal, how=\"inner\", on=\"d\")","dfa752a0":"import plotly.graph_objects as go\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=train_state[\"date\"], y=train_state[\"CA\"], name=\"CA\",line_color='deepskyblue',opacity=0.8))\nfig.add_trace(go.Scatter(x=train_state[\"date\"], y=train_state[\"TX\"], name=\"TX\",line_color='magenta', opacity=0.8))\nfig.add_trace(go.Scatter(x=train_state[\"date\"], y=train_state[\"WI\"], name=\"WI\",line_color='greenyellow',opacity=0.8))\n               \nfig.update_layout(title_text='Total Monthly Sale per State', xaxis_rangeslider_visible=True)\nfig.show()","5ab00021":"train_m= train_state.copy()\ntrain_m[\"year\"]= pd.DatetimeIndex(train_state[\"date\"]).year\ntrain_m= train_m[[\"CA\",\"TX\",\"WI\",\"year\",\"month\",\"date\"]]\ntrain_m= train_m.groupby([\"year\",\"month\"], as_index=False).sum()\ntrain_m= train_m.drop(labels=[\"date\"], axis=1)\n\ntrain_d=train_state.copy()\ntrain_d[\"year\"]= pd.DatetimeIndex(train_state[\"date\"]).year","9064b7b7":"train_d","c0811d09":"train_m","2a5f5d35":"train1=train.copy()\ntrain1[\"Total Sale\"]= train1.sum(axis=1)","20c08898":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nplt.figure(figsize=(12,7))\nplt.style.use('seaborn-darkgrid')\n\nsns.boxenplot(x=\"store_id\", y=\"Total Sale\",color=\"r\",scale=\"linear\", data=train1)\nplt.title(\"Total Sale per Store\", fontsize=18)","a7aa4432":"train2= train.drop(labels= [\"id\", \"dept_id\", \"item_id\"], axis=1)\ntrain2= train2.groupby([\"state_id\", \"store_id\", \"cat_id\"], as_index=False).sum()\ntrain2[\"Total Sale\"]=train2.sum(axis=1)\ntrain2= train2[[\"state_id\", \"store_id\", \"cat_id\", \"Total Sale\"]]","28b88444":"import plotly.express as px\n\nfig = px.bar(train2, x=\"store_id\", y=\"Total Sale\",color=\"cat_id\",  barmode=\"group\",  facet_row=\"state_id\", \n             category_orders={\"state_id\": [\"CA\", \"TX\", \"WI\"]}, title=\"Total Sale per Category per Store\",height=700)\nfig.show()","d8f78b35":"train_cat= train.drop(labels= ['id', 'item_id', 'dept_id', 'store_id', 'state_id'],axis=1)\ntrain_cat= train_cat.groupby(\"cat_id\", as_index=False).sum()\ntrain_cat= train_cat.T\ntrain_cat= train_cat.rename(columns=train_cat.iloc[0]).drop(train_cat.index[0])\ntrain_cat= train_cat.reset_index()\ntrain_cat= train_cat.rename(columns={\"index\":\"d\"})\ntrain_cat= pd.merge(train_cat, cal, how=\"inner\", on=\"d\")\n\ntrain_m= train_cat[[\"FOODS\",\"HOBBIES\",\"HOUSEHOLD\",\"month\"]].groupby(\"month\", as_index=False).sum()\ntrain_d= train_cat[[\"FOODS\",\"HOBBIES\",\"HOUSEHOLD\",\"weekday\"]].groupby(\"weekday\", as_index=False).sum()","308ba3ad":"import matplotlib.pylab as pl\nimport matplotlib.gridspec as gridspec\ngs=gridspec.GridSpec(1,2)\nplt.figure(figsize=(15,5))\n\nax=pl.subplot(gs[0,0])\nplt.bar(train_m[\"month\"], train_m[\"FOODS\"], color=\"salmon\")\nplt.bar(train_m[\"month\"], train_m[\"HOUSEHOLD\"], color=\"orange\")\nplt.bar(train_m[\"month\"], train_m[\"HOBBIES\"], color=\"cyan\")\nplt.ylabel(\"Overall Sale\", fontsize=22)\nplt.legend([\"FOODS\", \"HOUSEHOLD\", \"HOBBIES\"])\n\nax=pl.subplot(gs[0,1])\nplt.plot(train_d[\"weekday\"], train_d[\"FOODS\"], color=\"salmon\", marker=\"o\", markersize=8, linewidth=3.5)\nplt.plot(train_d[\"weekday\"], train_d[\"HOUSEHOLD\"], color=\"orange\", marker=\"o\", markersize=8, linewidth=3.5)\nplt.plot(train_d[\"weekday\"], train_d[\"HOBBIES\"], color=\"cyan\", marker=\"o\", markersize=8, linewidth=3.5)\nplt.legend([\"FOODS\", \"HOUSEHOLD\", \"HOBBIES\"])\n\nplt.tight_layout()","3606cbf2":"import matplotlib.pylab as pl\nimport matplotlib.gridspec as gridspec\n\nCA= train_state[train_state[\"snap_CA\"]==0]\nCA_snap= train_state[train_state[\"snap_CA\"]==1]\n\nTX= train_state[train_state[\"snap_TX\"]==0]\nTX_snap= train_state[train_state[\"snap_TX\"]==1]\n\nWI= train_state[train_state[\"snap_WI\"]==0]\nWI_snap= train_state[train_state[\"snap_WI\"]==1]\n\ngs=gridspec.GridSpec(3,3)\nplt.figure(figsize=(12,8))\n\nax=pl.subplot(gs[0,0])\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"snap_CA\", data=train_state)\nplt.ylabel(\"No. of Days\", fontsize=10)\nplt.title(\"CA\",fontsize=15)\n\nax=pl.subplot(gs[0,1])\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"snap_TX\", data=train_state)\n# plt.ylabel(\"No. of Days\", fontsize=10)\nplt.title(\"TX\",fontsize=15)\n\nax=pl.subplot(gs[0,2])\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=\"snap_WI\", data=train_state)\n# plt.ylabel(\"No. of Days\", fontsize=10)\nplt.title(\"WI\",fontsize=15)\n\nax=pl.subplot(gs[1:,0])\nplt.pie([CA[\"CA\"].sum(), CA_snap[\"CA\"].sum()], autopct=\"%1.1f%%\", colors=[\"blue\", \"orange\"],\n        startangle=90, explode=[0, 0.1], shadow=True)\nplt.legend([\"sale without SNAP purchase\", \"sale with SNAP purchase\"], loc=\"best\", fontsize=9)\n\nax=pl.subplot(gs[1:,1])\nplt.pie([TX[\"TX\"].sum(), TX_snap[\"TX\"].sum()], autopct=\"%1.1f%%\", colors=[\"blue\", \"pink\"],\n        startangle=90, explode=[0, 0.1], shadow=True)\nplt.legend([\"sale without SNAP purchase\", \"sale with SNAP purchase\"], loc=\"lower right\", fontsize=9)\n\nax=pl.subplot(gs[1:,2])\nplt.pie([WI[\"WI\"].sum(), WI_snap[\"WI\"].sum()], autopct=\"%1.1f%%\", colors=[\"blue\", \"yellowgreen\"],\n        startangle=90, explode=[0, 0.1], shadow=True)\nplt.legend([\"sale without SNAP purchase\", \"sale with SNAP purchase\"], loc=\"lower right\", fontsize=9)  \n\nplt.tight_layout()","3c98cda3":"event1= cal[cal[\"event_name_1\"].notnull()]\nevent1.loc[85, \"event_name_1\"]=\"OrthodoxEaster + Easter\"\nevent1.loc[827, \"event_name_1\"]=\"OrthodoxEaster + Cinco De Mayo\"\nevent1.loc[1177, \"event_name_1\"]=\"Easter + OrthodoxEaster\"\nevent1.loc[1233, \"event_name_1\"]=\"NBAFinalsEnd + Father's day\"\nevent1.loc[1968, \"event_name_1\"]=\"NBAFinalsEnd + Father's day\"\n\nevent1= pd.merge(train_state[[\"d\",\"CA\",\"TX\",\"WI\"]], event1[[\"d\",\"event_name_1\"]], on=\"d\", how=\"inner\").drop(labels=[\"d\"], axis=1)\nevent1[\"Total Sale\"]= event1[\"CA\"] + event1[\"TX\"] + event1[\"WI\"]\nevent1= event1.groupby(\"event_name_1\", as_index=False).sum() \n\nplt.figure(figsize=(15,7))\nplt.style.use(\"bmh\")\n\nplt.plot(event1[\"event_name_1\"],event1[\"Total Sale\"], color=\"red\", marker=\"o\", markerfacecolor=\"black\", linewidth=1)\nplt.xlabel(\"Events\", fontsize=15)\nplt.ylabel(\"Total Sale\", fontsize=15)\nplt.title(\"Overall Sale on Holidays\", fontsize=20)\nplt.xticks(rotation=\"vertical\")","c36cf299":"import seaborn as sns; sns.set()\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(15,7))\nax = sns.lineplot(event1[\"event_name_1\"],event1[\"Total Sale\"])","cf7a536c":"### Impact of Supplement Nutrition Assistance Program (SNAP) on Overall Sales per State","99bc40a8":"## Sale per Store","1731b760":"## Total Sale per Category per Store","f9aeafc5":"The stores in California seems to have more variance in their sales as compared to stores in Texas and wisconsin.","66aa7516":"## Monthly Sale per State"}}