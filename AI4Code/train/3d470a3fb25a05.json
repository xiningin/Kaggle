{"cell_type":{"74a5cdc5":"code","1d2abbde":"code","fc226568":"code","de373937":"code","e2025e8c":"code","eaddb3d0":"code","510d6777":"code","4e759ee0":"code","26b864d7":"code","110a783c":"code","916e6d37":"code","4591a101":"code","6efa65af":"code","52697ea7":"code","4ab377a6":"code","c85b98b7":"code","1b5380fe":"code","41910a3a":"code","09bef4e5":"code","8f919e98":"code","6450cde2":"code","86f162ce":"code","029c4c3a":"code","d9fb73f7":"code","85c14585":"code","2d613731":"code","a70d1e9c":"code","6c29f24b":"code","1163f50a":"code","dd733037":"code","e5cec6d8":"code","1bbbe71a":"code","321cc6a6":"code","907dc887":"code","6cac0ccb":"code","21a74ede":"code","76e2f406":"markdown","e78e25c8":"markdown","6e33adb9":"markdown","786163b9":"markdown","87035327":"markdown","7aa52827":"markdown","322f659b":"markdown","f5d054ab":"markdown","443bb075":"markdown","a9c86d8f":"markdown","181dfabc":"markdown"},"source":{"74a5cdc5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nprint('\\n--------- DATA LIST --------------\\n')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d2abbde":"# Data Loading\ndata = pd.read_csv(\"\/kaggle\/input\/palestine-body-count\/Palestine Body Count.csv\")\nprint(\"Data Shape: \", data.shape)","fc226568":"# Get Information of DataSet\ndata.info()","de373937":"# Check the name of Columns of DataSet\ndata.columns","e2025e8c":"# Change\/Rename the Name of Column for Easy Access\/EDA\ndata.rename( columns = {'Year' : 'year', 'Month' : 'month', 'Palestinians Injuries' : 'palestinians-injuries',\n                        'Israelis Injuries' : 'israelis-injuries', 'Palestinians Killed' : 'palestinians-killed',\n                        'Israelis Killed' : 'israelis-killed'}, inplace=True )\ndata.columns","eaddb3d0":"# Data View\ndata","510d6777":"# Strip the Extra Space and Replace the unwanted character like coma\",\" from DataSet\n\n# Remove the Extra Space by using Strip Command\ndata['month'] = data['month'].str.strip()\ndata['palestinians-injuries'] = data['palestinians-injuries'].str.strip()\ndata['israelis-injuries'] = data['israelis-injuries'].str.strip()\ndata['palestinians-killed'] = data['palestinians-killed'].str.strip()\ndata['israelis-killed'] = data['israelis-killed'].str.strip()\n\n# Remove the unwanted character like coma\",\" by using replace function\ndata['palestinians-injuries'] = data['palestinians-injuries'].str.replace(',','')\ndata['israelis-injuries'] = data['israelis-injuries'].str.replace(',','')\ndata['palestinians-killed'] = data['palestinians-killed'].str.replace(',','')\ndata['israelis-killed'] = data['israelis-killed'].str.replace(',','')\n\n# Filling Null Values\ndata = data.fillna(0)\ndata","4e759ee0":"# Check Unique values in month column\ndata['month'].unique()","26b864d7":"# Check the row of month with \"May & JUNE\" unwanted values\ndata[data['month'] == 'MAY & JUNE']","110a783c":"# Extract another row of unwanted values\ndata[data['palestinians-injuries'] == '(incl. Aug)']","916e6d37":"# From Data it represent that the\n# data already included in June then remaining willbe for MAY\ndata['month'] = data['month'].replace('MAY & JUNE','MAY')\n\n# and data shifted in other month then this should be zero like integer value\ndata['palestinians-injuries'] = data['palestinians-injuries'].replace('(incl. Aug)','0')\ndata['israelis-injuries'] = data['israelis-injuries'].replace('(incl. Aug)','0')\n\n# and data shifted in other month then this should be zero like integer value\ndata['palestinians-injuries'] = data['palestinians-injuries'].replace('(incl. Jun)','0')\ndata['israelis-injuries'] = data['israelis-injuries'].replace('(incl. Jun)','0')\n\n# Shape of data\ndata.shape","4591a101":"# Verify data info and datatypes\ndata.info()","6efa65af":"# Change datatype of column as per data hold init.\ndata['year'] = data['year'].astype('int64')\ndata['palestinians-injuries'] = data['palestinians-injuries'].astype('int64')\ndata['israelis-injuries'] = data['israelis-injuries'].astype('int64')\ndata['palestinians-killed'] = data['palestinians-killed'].astype('int64')\ndata['israelis-killed'] = data['israelis-killed'].astype('int64')\n\ndata.info()","52697ea7":"# Data View first 5 Rows\ndata.head()","4ab377a6":"# get data where year not equal to zero\nxdata = data[data['year'] != 0]\nxdata.shape","c85b98b7":"# Create Function for PIE Graph\n\ndef myPieChart(df, xName, lblName, myTitle, myXplode):\n    x = df[xName]\n    labels = lblName\n\n    fig, ax = plt.subplots(figsize=(7, 7))\n    patches, texts, pcts = ax.pie(\n        x, labels = labels, autopct='%.1f%%',\n        wedgeprops = {'linewidth': 3.0, 'edgecolor': 'white'},\n        textprops = {'size': 'small', 'weight':400},\n        labeldistance = 1.04,\n        rotatelabels = False,\n        explode = myXplode,\n        startangle = 90)\n    \n    # Set corresponding label color\n    for i, patch in enumerate(patches):\n        texts[i].set_color(patch.get_facecolor())\n        texts[i].set_fontsize(12)\n\n    plt.setp(pcts, color='white')\n    plt.setp(texts, fontweight=600)\n    ax.set_title(myTitle, fontsize=20)\n    plt.tight_layout()","1b5380fe":"# Create Function for PIE Chart Explode Property\ndef getXplode(df, colName):\n    xeplode = []\n    totalVal = df[colName].sum()\n    for index, row in df.iterrows():\n        percent = round((row[colName] \/ totalVal)*100, 1)\n        if(percent > 0 and percent <= 5.0 ):\n            xeplode.append(0.1)\n            \n        elif(percent > 5.0 and percent <= 10.0 ):\n            xeplode.append(0.05)\n            \n        elif(percent > 10.0 ):\n            xeplode.append(0.01)\n        else:\n            xeplode.append(0)\n            \n    return xeplode","41910a3a":"xdata_groupby_month = xdata.groupby('month', axis=0).sum()\nxdata_sorted_month = xdata_groupby_month.drop(['year'], axis=1)\nxdata_sorted_month","09bef4e5":"# Create Dictionary to replace the Month name to Number for sorting\nreplace_month_tonumber = {\n    \"DECEMBER\" : \"12\",\n    \"NOVEMBER\" : \"11\",\n    \"OCTOBER\" : \"10\",\n    \"SEPTEMBER\" : \"9\",\n    \"AUGUST\" : \"8\",\n    \"JULY\" : \"7\",\n    \"JUNE\" : \"6\",\n    \"MAY\" : \"5\",\n    \"APRIL\" : \"4\",\n    \"MARCH\" : \"3\",\n    \"FEBRUARY\" : \"2\",\n    \"JANUARY\" : \"1\"\n}\n#replace_month_tonumber\nxdata_sorted_month[\"month_no\"] = xdata_sorted_month.index # Copy month Column to month_no\n\n# Replace the Month Name to Month Number for Sorting Only\nxdata_sorted_month[\"month_no\"] = xdata_sorted_month['month_no'].replace(replace_month_tonumber)\nxdata_sorted_month['month_no'] = xdata_sorted_month['month_no'].astype('int64')\nxdata_sorted_month = xdata_sorted_month.sort_values(by='month_no', ascending=True)\nxdata_sorted_month = xdata_sorted_month.drop(['month_no'], axis=1)\n\nxdata_sorted_month","8f919e98":"xdata_sorted_month['palestinians-casualities'] = xdata_sorted_month['palestinians-injuries'] + xdata_sorted_month['palestinians-killed']\nxdata_sorted_month['israelis-casualities'] = xdata_sorted_month['israelis-injuries'] + xdata_sorted_month['israelis-killed']\nxdata_sorted_month['total-killed'] = xdata_sorted_month['palestinians-killed'] + xdata_sorted_month['israelis-killed']\nxdata_sorted_month['total-injured'] = xdata_sorted_month['palestinians-injuries'] + xdata_sorted_month['israelis-injuries']\nxdata_sorted_month","6450cde2":"# Call Function of Pie Chart for all Category\n\nfor x, name in xdata_sorted_month.iteritems():\n    if x == \"palestinians-injuries\":\n        myTitle = \"Palestinians Injuries Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"israelis-injuries\":\n        myTitle = \"Israelis Injuries Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"palestinians-killed\":\n        myTitle = \"Palestinians Killed Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"israelis-killed\":\n        myTitle = \"Israelis Killed Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"palestinians-casualities\":\n        myTitle = \"Total Palestinians Casualities Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"israelis-casualities\":\n        myTitle = \"Total Israelis Casualities Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n        \n    elif x == \"total-killed\":\n        myTitle = \"Total Killed Number Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    elif x == \"total-injured\":\n        myTitle = \"Total Injured Number Month Wise\"\n        myXplode = getXplode(xdata_sorted_month, x)\n    \n    myPieChart(xdata_sorted_month, x, xdata_sorted_month.index, myTitle, myXplode)","86f162ce":"xdata_sorted_month['month_name'] = xdata_sorted_month.index\nxdata_sorted_month","029c4c3a":"# Palestinians and Israelis Injuries Comparison Monthwise\nxdata_sorted_month.plot.bar(x=\"month_name\", \n                            y=[\"palestinians-injuries\", \"israelis-injuries\"],\n                            figsize=(14,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='Palestine & Israel Injuries Comparison\\n\\n\\n', # Adding Top Title\n                            xlabel=\"Months\", # Label x-axis\n                            ylabel=\"Numbers\", # Label y-axis\n                            fontsize='medium' # ticks fontsize\n                           )","d9fb73f7":"# Palestinians and Israelis Killed Comparison Monthwise\nxdata_sorted_month.plot.bar(x=\"month_name\", \n                            y=[\"palestinians-killed\", \"israelis-killed\"],\n                            figsize=(14,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='Palestine & Israel Killed Comparison\\n\\n\\n', # Adding Top Title\n                            xlabel=\"Months\", # Label x-axis\n                            ylabel=\"Numbers\", # Label y-axis\n                            fontsize='medium' # ticks fontsize\n                           )","85c14585":"# Palestinians and Israelis Casualities Comparison Monthwise\nxdata_sorted_month.plot.bar(x=\"month_name\", \n                            y=[\"palestinians-casualities\", \"israelis-casualities\"],\n                            figsize=(14,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='Palestine & Israel Casualities Comparison\\n\\n\\n', # Adding Top Title\n                            xlabel=\"Months\", # Label x-axis\n                            ylabel=\"Numbers\", # Label y-axis\n                            fontsize='medium' # ticks fontsize\n                           )","2d613731":"# Palestinians and Israelis Casualities Comparison Monthwise\nxdata_sorted_month.plot(x=\"month_name\", \n                            y=[\"palestinians-casualities\", \"israelis-casualities\"],\n                            figsize=(14,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='Palestine & Israel Casualities Comparison\\n\\n\\n', # Adding Top Title\n                            xlabel=\"Months\", # Label x-axis\n                            ylabel=\"Numbers\", # Label y-axis\n                            fontsize='medium' # ticks fontsize\n                           )","a70d1e9c":"xdata_sorted_month = xdata_sorted_month.drop(['total-injured', 'total-killed'], axis=1)","6c29f24b":"xdata_sorted_month.plot(kind='area', \n             stacked=True,\n             figsize=(20, 10), # pass a tuple (x, y) size\n             )\nplt.title('Total Casualities, Injuries and Deaths in Israel-Palestine Conflict', fontsize=20)\nplt.xlabel('Months')\nplt.show()","1163f50a":"xdata = xdata.sort_values(by='year', ascending=True)\nxdata_groupby_year = xdata.groupby('year', axis=0, as_index=False).sum()\nxdata_groupby_year\n##xdata_sorted_year = xdata_groupby_year.sort_values(by='year', ascending=True)\n#xdata_sorted_year['years'] = xdata_groupby_year.index\n#dataBody_year_sorted","dd733037":"xdata_groupby_year.plot.bar(x=\"year\", \n                            y=[\"palestinians-injuries\", \"israelis-injuries\"],\n                            figsize=(15,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='\\nPalestine and Israel Injuries Visualization\\n\\n\\n',\n                            xlabel=\"Years\",\n                            ylabel=\"Numbers\",\n                            fontsize='medium'\n                       )","e5cec6d8":"xdata_groupby_year.plot.bar(x=\"year\", \n                            y=[\"palestinians-killed\", \"israelis-killed\"],\n                            figsize=(15,6), # Change the Graph\/Chart Size\n                            rot=90,\n                            title='\\nPalestine and Israel Killed Visualization\\n\\n\\n',\n                            xlabel=\"Years\",\n                            ylabel=\"Numbers\",\n                            fontsize='medium'\n                       )","1bbbe71a":"xdata_groupby_year['palestinians-casualities'] = xdata_groupby_year['palestinians-injuries'] + xdata_groupby_year['palestinians-killed']\nxdata_groupby_year['israelis-casualities'] = xdata_groupby_year['israelis-injuries'] + xdata_groupby_year['israelis-killed']\nxdata_groupby_year.plot.bar(x=\"year\", \n                        y=[\"palestinians-casualities\", \"israelis-casualities\"],\n                        figsize=(15,6),\n                        rot=90,\n                        title='Visualization of Yearly Palestine & Israel Total Casualities\\n\\n\\n',\n                        xlabel=\"Years\",\n                        ylabel=\"Numbers\",\n                        fontsize='medium'\n                       )\n","321cc6a6":"min_year = xdata_groupby_year['year'].min()\nmax_year = xdata_groupby_year['year'].max()\nmy_title = '\\n\\nYearly [' + str(min_year) + ' to ' + str(max_year) + '] Total Casualities\\n\\n\\n'\n\nxdata_groupby_year.plot(x=\"year\", \n                        y=[\"palestinians-casualities\", \"israelis-casualities\"],\n                        figsize=(15,8), # Change the Graph\/Chart Size\n                        rot=90,\n                        title = (my_title),\n                        xlabel=\"Years\",\n                        ylabel=\"Numbers\",\n                        fontsize='large'\n                       )\n","907dc887":"print(\"Injured: \", xdata['palestinians-injuries'].sum())\nprint(\"Killed: \", xdata['palestinians-killed'].sum())\nprint(\"Total Body Count: \", xdata['palestinians-injuries'].sum() + xdata['palestinians-killed'].sum())","6cac0ccb":"print(\"Injured: \", xdata['israelis-injuries'].sum())\nprint(\"Killed: \", xdata['israelis-killed'].sum())\nprint(\"Total Body Count: \", xdata['israelis-injuries'].sum() + xdata_groupby_year['israelis-killed'].sum() )","21a74ede":"palestinians_casualities = xdata['palestinians-injuries'].sum() + xdata_groupby_year['palestinians-killed'].sum()\nisraelis_casualities = xdata['israelis-injuries'].sum() + xdata_groupby_year['israelis-killed'].sum()\ntotal_casualities = palestinians_casualities + israelis_casualities\n\n\nprint(\"\\n\\nCasualities\\n------------\")\nprint(\"Palestinians: \", palestinians_casualities)\nprint(\"Israelis: \", israelis_casualities)\nprint(\"Total: \", total_casualities)","76e2f406":"### **Preparing Dataset for PIE Chart**","e78e25c8":"## **Total Casualities**","6e33adb9":"## **Israelis**","786163b9":"### **Monthwise Comparision**","87035327":"## **Palestinians**","7aa52827":"### **Year-Wise Visualization**","322f659b":"### **Data Exploratory**","f5d054ab":"## **Visualize the Month Wise Conflict of Palestine & Israel with PIE Chart**","443bb075":"### **Data Load**","a9c86d8f":"#### **Create Function to Generate the Pie Chart of given Data**","181dfabc":"### **Prepare for Visualization**"}}