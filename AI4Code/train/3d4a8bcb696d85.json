{"cell_type":{"b6d541f7":"code","24284596":"code","c7db8e29":"code","de8cba3d":"code","6122b2d9":"code","461be878":"code","d9ca2f0d":"code","9893c7d8":"code","c8b5ea57":"code","8846b906":"code","4f85381c":"code","8a49b937":"code","18cd5bca":"code","47f1b9f1":"code","469b1b92":"code","3471eb12":"code","2b21ffdc":"code","ef4e71ca":"code","d0a2c197":"code","c3bf2aaa":"code","830d5549":"code","67a0d178":"code","76daf9e6":"code","608f365c":"code","5c136719":"markdown","40801349":"markdown","ab143a99":"markdown","f493e335":"markdown","edbe23c4":"markdown","24979861":"markdown","97232dba":"markdown","51496c7d":"markdown","7624613f":"markdown","56762d9d":"markdown","b4f04a83":"markdown","38e230b2":"markdown","7c9a6795":"markdown","69027daa":"markdown","b0cc64fe":"markdown","2bb239e7":"markdown","91aa3b30":"markdown","ab8d4bd3":"markdown","6b63df64":"markdown","526679b9":"markdown","1573b5ae":"markdown","a47de9c8":"markdown","3aeae245":"markdown","4994c323":"markdown"},"source":{"b6d541f7":"# Import packages\n\n## general packages\nimport os\nimport numpy as np\nimport pandas as pd\n\n## Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom bokeh.plotting import figure, show\nfrom bokeh.io import output_notebook\nfrom bokeh.transform import factor_cmap, jitter\nfrom bokeh.layouts import row\n\n## Machine learning\nimport time\nfrom sklearn.model_selection import train_test_split\n### Oversampling\nfrom imblearn.over_sampling import SMOTE\nfrom imblearn.combine import SMOTEENN\n### LightGBM\nimport lightgbm as lgb\n### Metrics\nfrom sklearn.metrics import roc_auc_score, precision_score, classification_report\n### Feature Selection\nimport shap","24284596":"# Upload dataset\ndf = pd.read_csv('data.csv')\ndf","c7db8e29":"df2=df.copy()\ndf2['Bankrupt?'].replace({0:'No', 1: 'Yes'}, inplace=True)\ndf2","de8cba3d":"df.describe()","6122b2d9":"# check duplicates\ndf.duplicated().sum()","461be878":"# check null values\ndf.isnull().any().any()","d9ca2f0d":"df.info()","9893c7d8":"labels = df['Bankrupt?'].value_counts()\nlabels.index=['No', 'Yes']\nlabels","c8b5ea57":"ori_X = df.drop(['Bankrupt?'], axis=1)\nori_y = df['Bankrupt?']\n\nsmote_enn = SMOTEENN(random_state=28)\nX, y = smote_enn.fit_resample(ori_X, ori_y)","8846b906":"new_labels = y.value_counts()\nnew_labels.index = ['No', 'Yes']\nnew_labels","4f85381c":"fig = plt.figure(figsize=[10, 6])\ngs = fig.add_gridspec(1, 2)\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\nax0.pie(labels, labels=labels.index, pctdistance=0.5, autopct='%.1f%%')\nax1.pie(new_labels, labels=new_labels.index, pctdistance=0.5, autopct='%.1f%%')\n\nax0.set_title('Distribution of Labels before SMOTEENN')\nax1.set_title('Distribution of Labels after SMOTEENN');","8a49b937":"# Split data into random train and test subsets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=28)\n# Set the dataset\nd_train = lgb.Dataset(X_train, label=y_train)\nd_test = lgb.Dataset(X_test, label=y_test)\n# Specify parameters\nparams = {'boosting':'gbdt',\n          'max_bin':512,\n          'num_leaves':10,\n          'learning_rate':0.03,\n          'objective':'binary',\n          'force_col_wise':True,\n          'metric':'binary_logloss'}\n\n# Train\nlgbm = lgb.train(params, d_train, 1000)","18cd5bca":"y_pred = lgbm.predict(X_test)\ny_pred = y_pred.round(0)\ny_pred = y_pred.astype(int)","47f1b9f1":"roc_auc_score(y_pred, y_test)","469b1b92":"print(classification_report(y_test, y_pred))","3471eb12":"# Load JS visualization code\nshap.initjs()\n\n# Explain the model's predictions using SHAP\nexplainer = shap.TreeExplainer(lgbm)\nshap_values = explainer.shap_values(X)","2b21ffdc":"shap_values[1].shape","ef4e71ca":"shap.summary_plot(shap_values, features=X_train, feature_names=X_train.columns, plot_type='bar')","d0a2c197":"shap.summary_plot(shap_values[1], features=X, feature_names=X.columns)","c3bf2aaa":"for name in X.columns:\n    shap.dependence_plot(name, shap_values[1], X)","830d5549":"shap.force_plot(explainer.expected_value[1], shap_values[1][0,:], X.iloc[0,:])","67a0d178":"shap.force_plot(explainer.expected_value[1], shap_values[1][1,:], X.iloc[1,:])","76daf9e6":"output_notebook()","608f365c":"# figure1\np1 = figure(plot_width=500, plot_height=500)\n\ncolormap = {0:'green', 1: 'red'}\ncolors= [colormap[x] for x in df['Bankrupt?']]\n\np1.circle(df[' Continuous interest rate (after tax)'], \n         df[' Total debt\/Total net worth'], \n         size=10, line_color='black', fill_color=colors, fill_alpha=0.2)\n\np1.xaxis.axis_label='Continuous interest rate (after tax)'\np1.yaxis.axis_label='Total debt\/Total net worth'\n\n#figure2\np2 = figure(plot_width=500, plot_height=500)\n\ncolormap = {0:'green', 1: 'red'}\ncolors= [colormap[x] for x in df['Bankrupt?']]\n\np2.circle(df[' Continuous interest rate (after tax)'], \n         df[' Retained Earnings to Total Assets'], \n         size=10, line_color='black', fill_color=colors, fill_alpha=0.2)\n\np2.xaxis.axis_label='Continuous interest rate (after tax)'\np2.yaxis.axis_label='Retained Earnings to Total Assets'\n\n\nshow(row(p1, p2))","5c136719":"## Company Bankruptcy Prediction","40801349":"To solve the unbalance of labels, I'll use SMOTEENN method to oversample the minority class then clean the noisy samples.","ab143a99":"The performance of the LightGBM model is pretty good, with accuracy 0.99 and F1-score 0.99. This model could help investigators distinguish companies with potentiation before making business decisions. ","f493e335":"<a id='eda'><\/a>\n## Exploratory Data Analysis","edbe23c4":"### Feature selection","24979861":"### Class Balancing","97232dba":"This plot shows the importance of features in a descending order. For example, the top feature \"Continuous interest rate\" contribute more to the model than the second feature \"Total debt\/total net worth\". To figure out the relationships between features and labels,I plotted the effect of these features on all records in the training data as shown below:","51496c7d":"Next, I'll explore the effect of features on the prediction of each record, such as the first one with index 0:","7624613f":"#### The total impact of features on the model","56762d9d":"Normalize each feature","b4f04a83":"This plot shows the positive and negative relationships of the features with the label. Similarly, features are ranked in descending order. Each dot represents one record in the training data. The color represents the value of the feature (red high, blue low). The horizontal axis represents the effect of feature on model prediction. For example, high continuous interest rate lowers the probability that model predict bankrupt. There is a negative relationship between continuous interest rate with bankrupt.","38e230b2":"#### The effect of a single feature across the whole dataset","7c9a6795":"Use Scikit-learn API:","69027daa":"First, let's take a look at the relationship between the top two variables: \n  - Continuous interest rate\n  - Total debt\/ Total net worth\n  \nMore visualizations are shown on [Heroku app](https:\/\/bankruptcy-visualization.herokuapp.com)","b0cc64fe":"### Visualization","2bb239e7":"The prediction of both records are lower than the base value, which means these two records were classified as \"not bankrupt\". Those features which push the prediction to the direction of \"not bankrupt\" are shown in blue.","91aa3b30":"#### The impact of features on the model for individual data","ab8d4bd3":"## Table of Contents\n\n<ul>\n    <li><a href='#intro'>Introduction<\/a><\/li>\n    <li><a href='#wrangle'>Data Wrangling<\/a><\/li>\n    <li><a href='#eda'>Exploratory Data Analysis<\/a><\/li>\n    <li><a href='#conclusion'>Conclusion<\/a><\/li>\n<\/ul>","6b63df64":"<a id='intro'><\/a>\n## Introduction\nThe data were collected from the Taiwan Economic Journal for the years 1999 to 2009. \n\nIn this notebook, I built a LightGBM Classifier to predict company bankruptcy using financial features. The model has accuracy 0.99 and F1-score 0.99. Then I used SHAP to explain the predictions of this model. \n\nI made a [Data Visualization Web Application](https:\/\/bankruptcy-visualization.herokuapp.com\/) by Streamlit and Heroku. In the application, you can select two random features to generate a scatterplot, with the colors represent bankruptcy condition.","526679b9":"<a id='wrangle'><\/a>\n## Data Wrangling","1573b5ae":"### Modeling","a47de9c8":"How about the second record?","3aeae245":"<a id='conclusion'><\/a>\n## Conclusion","4994c323":"There are 95 variables describing the condition of companies, plus one column \"Bankrupt?\" as the label.\n\nThe number of records is 6819.\n\nNext, I'll check the existence of replicates and null values."}}