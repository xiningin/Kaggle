{"cell_type":{"626e35ba":"code","4854edd3":"code","e7540583":"code","486ac453":"code","d3d5081d":"code","6ea42e1c":"code","bc6aa3f9":"markdown","8cf6573d":"markdown","19d422ca":"markdown","e6c0613f":"markdown"},"source":{"626e35ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4854edd3":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","e7540583":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","486ac453":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nrate_women = sum(women)\/len(women)\n\nprint('% of women who survived: ', rate_women)","d3d5081d":"men = train_data.loc[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\n\nprint('% of men who survived: ', rate_men)\n","6ea42e1c":"from sklearn.ensemble import RandomForestClassifier\n\n# Get the predictor variable (Y)\ny = train_data[\"Survived\"]\n\n# Consider the features to be included in the model and get the feature variables (X)\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\n# Create the model\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\n\n# Perform the prediction\npredictions = model.predict(X_test)\n\n# Create a output CVS file for submission\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('jg_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","bc6aa3f9":"**Explore a pattern - Assumsions that all female passengers survived (and all male passengers died).**","8cf6573d":"**Load the Training Data**","19d422ca":"USE RANDOM FOREST MODEL","e6c0613f":"**Load the Training Data**"}}