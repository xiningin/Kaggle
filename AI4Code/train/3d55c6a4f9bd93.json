{"cell_type":{"3d2d2f35":"code","87c12149":"code","831c6c17":"code","2fb88a4c":"code","a222eaf2":"code","dfef828c":"markdown","d48398ff":"markdown","78e773e2":"markdown"},"source":{"3d2d2f35":"import nltk","87c12149":"grammar = nltk.CFG.fromstring(\"\"\"\nS -> Aux NP VP\nS -> VP\nVP -> V NP\nVP -> V NP NP\nNP -> Det Nominal\nNP -> Nominal\nNP -> Pronoun\nNominal -> Noun\nNominal -> Proper-Noun Nominal\nV -> 'book'\nDet -> 'that'\nNoun -> 'flight' | 'flights'\nProper-Noun -> 'TWA'\nAux -> 'can'\nPronoun -> 'you'\n\"\"\")\n\ngrammar.start()\ngrammar.productions()","831c6c17":"print('*'* 20 + ' Top Down parsing ' + '*' * 20)\nrd_parser = nltk.RecursiveDescentParser(grammar, trace =2)\n\nsentenses = ['book that flight','can you book TWA flights']\n\nfor sent in sentenses:\n    tokens = sent.split()\n    print('\\r\\n' + sent + '------------>')\n    for tree in rd_parser.parse(tokens):\n        print(tree)    ","2fb88a4c":"print('*'* 20 + ' Bottom Up parsing ' + '*' * 20)\nsr_parse = nltk.ShiftReduceParser(grammar, trace=2)\n\nfor sent in sentenses:\n    tokens = sent.split()\n    print(tokens)\n    print(sent + '------------->\\r\\n')\n    for tree in sr_parse.parse(tokens):\n        print(tree)","a222eaf2":"parser = nltk.LeftCornerChartParser(grammar, trace = 2)\n\nfor sent in sentenses:\n    print('\\r\\n' + sent + '==============================>\\r\\n')\n    \n    tokens = sent.split()\n    print ((parser.parse(tokens)))","dfef828c":"# Bottom-up Parser","d48398ff":"# top-down parser with bottom-up filtering","78e773e2":"# Top Down Parsing"}}