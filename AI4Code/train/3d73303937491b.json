{"cell_type":{"5b635fe3":"code","a0078699":"code","f5489412":"code","b9f4346f":"code","73121a25":"code","a3e6d52c":"code","12e83fd9":"code","4a5e43ea":"code","14d83d96":"code","9feefe83":"code","2bb31cec":"code","15c2d9f0":"code","eee82da7":"code","9642877a":"code","d4ba0f13":"code","312a8930":"code","fd3c8105":"code","7e143ea0":"code","c2f6a6f2":"code","6b87282d":"code","2dd8240b":"code","e7a06db0":"markdown","ccd25e8f":"markdown","6455adb3":"markdown","a51327e2":"markdown","4ded8580":"markdown","b9dd74cd":"markdown","379aa878":"markdown","82a12fed":"markdown","99d6437e":"markdown"},"source":{"5b635fe3":"import numpy as np\nimport pandas as pd\n        \nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\npd.set_option('display.max_columns', None)","a0078699":"games = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2021\/games.csv')","f5489412":"games","b9f4346f":"games_num = games['gameDate'].value_counts().reset_index()\ngames_num.columns = ['Date' , \"Games\"]\ngames_num = games_num.sort_values('Games' , ascending = True)\n\nfig = px.bar(\n      games_num,\n    y = 'Date',\n    x = 'Games',\n    orientation = 'h',\n    color = 'Games',\n    title = 'Number of games for every Date',\n    height = 500,\n    width = 500\n\n\n)\n\nfig.show()","73121a25":"check = games['gameTimeEastern'].value_counts().reset_index()\ncheck.columns = ['Time' , 'Games']\ncheck = check.sort_values('Games')\n\nfig = px.bar(\n    check,\n    x = 'Games',\n    y = 'Time',\n    color = 'Games',\n    orientation = 'h',\n    title = 'Number of games for every Time',\n    height = 500,\n    width = 500\n    \n\n\n)\n\nfig.show()","a3e6d52c":"check = games['homeTeamAbbr'].value_counts().reset_index()\ncheck.columns = ['Team', 'Games']\ncheck = check.sort_values('Games')\n\nfig = px.bar(\n    check, \n    y='Team', \n    x=\"Games\", \n    orientation='h',\n    color = 'Games',\n    title='Number of games for every team (home)', \n    height=500, \n    width=500\n)\n\nfig.show()","12e83fd9":"check = games['visitorTeamAbbr'].value_counts().reset_index()\ncheck.columns = ['Team', 'Games']\ncheck = check.sort_values('Games')\n\nfig = px.bar(\n    check, \n    y='Team', \n    x=\"Games\", \n    orientation='h', \n    title='Number of games for every team (Visitor)', \n    height=500, \n    width=500\n)\n\nfig.show()","4a5e43ea":"check = games['week'].value_counts().reset_index()\ncheck.columns = ['Week_Numeric', 'Games']\ncheck = check.sort_values('Games')\n\nfig = px.bar(\n    check, \n    y='Week_Numeric', \n    x=\"Games\", \n    orientation='h',\n    color = 'Games',\n    title='Number of games for every week', \n    height=500, \n    width=500\n)\n\nfig.show()","14d83d96":"players = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2021\/players.csv')\nplayers","9feefe83":"players['height'] = players['height'].str.replace('-', '.')\nplayers['height'] = players['height'].astype(np.float32)\n","2bb31cec":"players.loc[players['height']>10, 'height'] \/= 12\nplayers","15c2d9f0":"fig = px.histogram(\n    players, \n    x=\"height\",\n    width=500,\n    height=500,\n    nbins=20,\n        title='Players height distribution'\n)\n\nfig.show()","eee82da7":"fig = px.histogram(\n    players, \n    x=\"weight\",\n    width=500,\n    height=500,\n    nbins=20,\n        title='Players weight distribution'\n)\n\nfig.show()","9642877a":"check = players.collegeName.value_counts().reset_index()\ncheck.columns = ['collegeName' , 'Players']\ncheck.sort_values('Players' , inplace=True)\n\nfig = px.bar(\n   check.tail(20),\n    x = 'Players',\n    y = 'collegeName',\n    orientation = 'h',\n    title = 'Top 20 colleges by number of Players',\n    color = 'Players',\n    height = 900,\n    width = 800\n\n\n)\n\nfig.show()","d4ba0f13":"check = players.position.value_counts().reset_index()\ncheck.columns = ['Position' , 'Players']\ncheck.sort_values('Players' , inplace=True)\n\nfig = px.bar(\n   check,\n    x = 'Players',\n    y = 'Position',\n    orientation = 'h',\n    title = 'Top positions by number of players',\n    color = 'Players',\n    height = 900,\n    width = 800\n\n\n)\n\nfig.show()","312a8930":"plays = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2021\/plays.csv')\nplays","fd3c8105":"check = plays['possessionTeam'].value_counts().reset_index()\ncheck.columns = ['team', 'plays']\ncheck = check.sort_values('plays')\n\nfig = px.bar(\n    check, \n    y='team', \n    x=\"plays\", \n    orientation='h', \n    color = 'plays',\n    title='Number of plays for every team',\n    height=800,\n    width=800\n)\n\nfig.show()","7e143ea0":"check = plays['playType'].value_counts().reset_index()\ncheck.columns = ['type', 'plays']\ncheck = check.sort_values('plays')\n\nfig = px.pie(\n    check, \n    names='type', \n    values=\"plays\",  \n    title='Number of plays of every type',\n    height=600,\n    width=600\n)\n\nfig.show()","c2f6a6f2":"check = plays['yardlineNumber'].value_counts().reset_index()\ncheck.columns = ['yardline', 'plays']\ncheck = check.sort_values('plays')\n\nfig = px.bar(\n    check, \n    x='yardline', \n    y=\"plays\",  \n    title='Number of plays for every yardline',\n    height=600,\n    width=800,\n    color = 'plays'\n)\n\nfig.show()","6b87282d":"check = plays['offenseFormation'].value_counts().reset_index()\ncheck.columns = ['offenseFormation', 'plays']\ncheck = check.sort_values('plays')\n\nfig = px.pie(\n    check, \n    names='offenseFormation', \n    values=\"plays\",  \n    title='Number of plays for every offense formation type',\n    height=600,\n    width=600\n)\n\nfig.show()","2dd8240b":"check = plays['defendersInTheBox'].value_counts().reset_index()\ncheck.columns = ['defendersInTheBox', 'plays']\ncheck = check.sort_values('plays')\n\nfig = px.bar(\n    check, \n    x='defendersInTheBox', \n    y=\"plays\",  \n    title='Number of plays for every number of defenders in the box',\n    height=600,\n    width=800\n)\n\nfig.show()\n\n","e7a06db0":"**Game data:** The games.csv contains the teams playing in each game. The key variable is gameId\n\n* **gameId:** Game identifier, unique (numeric)\n* **gameDate:** Game Date (time , mm\/dd\/yyyy)\n* **gameTimeEastern:** Start time of game (time, HH:MM:SS, EST)\n* **homeTeamAbbr:** Home team three-letter code (text)\n* **visitorTeamAbbr:** Visiting team three-letter code (text)\n* **week:** Week of game (numeric)","ccd25e8f":"# **Player Data**","6455adb3":"**Play data:** The plays.csv file contains play-level information from each game. The key variables are gameId and playId\n\n* **gameId:** Game identifier, unique (numeric)\n\n* **playId:** Play identifier, not unique across games (numeric)\n\n* **playDescription:** Description of play (text)\n\n* **quarter:** Game quarter (numeric)\n\n* **down:** Down (numeric)\n\n* **yardsToGo:** Distance needed for a first down (numeric)\n\n* **possessionTeam:** Team on offense (text)\n\n* **playType:** Outcome of dropback: sack or pass (text)\n\n* **yardlineSide:** 3-letter team code corresponding to line-of-scrimmage (text)\n\n* **yardlineNumber:** Yard line at line-of-scrimmage (numeric)\n\n* **offenseFormation:** Formation used by possession team (text)\n\n* **personnelO:** Personnel used by offensive team (text)\n\n* **defendersInTheBox:** Number of defenders in close proximity to line-of-scrimmage (numeric)\n\n* **numberOfPassRushers:** Number of pass rushers (numeric)\n\n* **personnelD:** Personnel used by defensive team (text)\n\n* **typeDropback:** Dropback categorization of quarterback (text)\n\n* **preSnapHomeScore:** Home score prior to the play (numeric)\n\n* **preSnapVisitorScore:** Visiting team score prior to the play (numeric)\n\n* **gameClock:** Time on clock of play (MM:SS)\n\n* **absoluteYardlineNumber:** Distance from end zone for possession team (numeric)\n\n* **penaltyCodes:** NFL categorization of the penalties that ocurred on the play. For purposes of this contest, the most important penalties are Defensive Pass Interference (DPI), Offensive Pass Interference (OPI), Illegal Contact (ICT), and Defensive Holding (DH). Multiple penalties on a play are separated by a ; (text)\n\n* **penaltyJerseyNumber:** Jersey number and team code of the player commiting each penalty. Multiple penalties on a play are separated by a ; (text)\n\n* **passResult:** Outcome of the passing play (C: Complete pass, I: Incomplete pass, S: Quarterback sack, IN: Intercepted pass, text)\n\n* **offensePlayResult:** Yards gained by the offense, excluding penalty yardage (numeric)\n\n* **playResult:** Net yards gained by the offense, including penalty yardage (numeric)\n\n* **epa:** Expected points added on the play, relative to the offensive team. Expected points is a metric that estimates the average of every next scoring outcome given the play's down, distance, yardline, and time remaining (numeric)\n\n* **isDefensivePI:** An indicator variable for whether or not a DPI penalty ocurred on a given play (TRUE\/FALSE)","a51327e2":"**Players positions abbreviation**\n* WR: Wide Receiver;\n* CB: Cornerback;\n* RB: Running Back;\n* TE: Tight End;\n* OLB: Outside Linebacker;\n* QB: Quarterback;\n* FS: Free Safety;\n* LB: Linebacker;\n* SS: Strong Safety;\n* ILB: Inside Linebacker;\n* DE: Defensive End;\n* DB: Defensive Back;\n* MLB: Middle Linebacker;\n* DT: Defensive Tackle;\n* FB: Fullback;\n* P: Punter;\n* LS: Long snapper;\n* S: Safety;\n* K: Kicker;\n* HB: Running back;\n* NT: Nose Tackle","4ded8580":"![#NFL](https:\/\/www.thesportsgeek.com\/wp-content\/uploads\/2019\/12\/NFL-768x372.jpg)","b9dd74cd":"Convert all heights to feet.\n\n","379aa878":"**Player data:** The players.csv file contains player-level information from players that participated in any of the tracking data files. The key variable is nflId\n\n* **nflId:** Player identification number, unique across players (numeric)\n\n* **height:** Player height (text)\n\n* **weight:** Player weight (numeric)\n\n* **birthDate:** Date of birth (YYYY-MM-DD)\n\n* **collegeName:** Player college (text)\n\n* **position:** Player position (text)\n\n* **displayName:** Player name (text)","82a12fed":"# Play Data","99d6437e":"#            **Game DATA**"}}