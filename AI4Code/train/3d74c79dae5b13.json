{"cell_type":{"168f36b6":"code","62a83b00":"code","9ee9fb54":"code","be2ce279":"code","98ae573c":"code","ffd5c5d7":"code","74511421":"code","cd26b537":"code","c17ba042":"code","5c8bc2d5":"code","58524c66":"code","cd9f4029":"code","00eb78da":"code","e8bb3320":"code","8cb9f3b8":"code","fb6cf17a":"code","64e2808b":"code","65242bcd":"code","e51e5f91":"code","5552edab":"code","1101d7fa":"code","a8c53b8f":"markdown","307344a0":"markdown","149b87b1":"markdown","2be8f1d0":"markdown","14889c65":"markdown","f0ddbc7b":"markdown","931e89b9":"markdown","58b5c5a6":"markdown","5b55515c":"markdown","428f2c5e":"markdown","9f88bec1":"markdown","2183255c":"markdown","3785b920":"markdown","ef49ef0e":"markdown","1b101e0f":"markdown","fad9432b":"markdown","ba7789e7":"markdown","9a3f7e65":"markdown"},"source":{"168f36b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json #JSON\u30c7\u30fc\u30bf\u3092\u8aad\u3080\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport seaborn as sns\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/youtube-new\"))\nprint(os.listdir(\"..\/input\/fontjp\/notosanscjkjp-hinted\"))\n\n# Any results you write to the current directory are saved as output.","62a83b00":"import sys #\u30b7\u30b9\u30c6\u30e0\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u95a2\u6570\n>>> sys.getdefaultencoding() #\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u8868\u793a","9ee9fb54":"# -*- coding: utf-8 -*-\nimport codecs\nwith codecs.open(\"..\/input\/youtube-new\/JPvideos.csv\", \"r\", \"utf_8\", \"ignore\") as jp_videos:\n  jp_videos = pd.read_table(jp_videos, delimiter=\",\")\n  jp_videos_categories = pd.read_json('..\/input\/youtube-new\/JP_category_id.json')","be2ce279":"jp_videos.head()","98ae573c":"jp_videos.info()","ffd5c5d7":"id_to_category = {}\n\nwith open('..\/input\/youtube-new\/JP_category_id.json' , 'r') as f:\n    data = json.load(f) #json.load\u3067JSON\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3002\n    for category in data['items']:\n        id_to_category[category['id']] = category['snippet']['title']\nid_to_category","74511421":"jp_videos['category_id_str'] = jp_videos['category_id'].astype(str)\njp_videos['category_id'] = jp_videos['category_id'].astype(int)\njp_videos['category'] = jp_videos['category_id_str'].map(id_to_category)\njp_videos.head()","cd26b537":"# \u5fc5\u8981\u6700\u4f4e\u9650\u306e\u5909\u6570\u306b\u7d5e\u308b\ndrop = [\"video_id\",\"trending_date\",\"tags\",\"channel_title\",\"category_id\",\"publish_time\",\"thumbnail_link\",\"comments_disabled\",\"ratings_disabled\",\"video_error_or_removed\",\"description\"]\n# \u91cd\u8907\u524a\u9664\njp_video1 = jp_videos.drop_duplicates(subset=['trending_date','title'])","c17ba042":"sort_views = sorted(jp_video1[\"views\"],reverse = True) #reverse = True\u3067\u3001\u964d\u9806\u306b\u30bd\u30fc\u30c8\njp_top5_views = jp_video1[jp_video1[\"views\"] >= sort_views[20]] \njp_top5_views_output1=jp_top5_views.drop(drop,axis=1,inplace = False)\njp_top5_views_output2 = jp_top5_views_output1.sort_values('views', inplace=False, ascending=False)\njp_top5_views_output2","5c8bc2d5":"sort_likes = sorted(jp_video1[\"likes\"],reverse = True) #reverse = True\u3067\u3001\u964d\u9806\u306b\u30bd\u30fc\u30c8\njp_top5_likes = jp_video1[jp_video1[\"likes\"] >= sort_likes[20]] \njp_top5_likes_output1=jp_top5_likes.drop(drop,axis=1,inplace = False)\njp_top5_likes_output2 = jp_top5_likes_output1.sort_values('likes', inplace=False, ascending=False)\njp_top5_likes_output2","58524c66":"sort_dislikes = sorted(jp_video1[\"dislikes\"],reverse = True) #reverse = True\u3067\u3001\u964d\u9806\u306b\u30bd\u30fc\u30c8\njp_top5_dislikes = jp_video1[jp_video1[\"dislikes\"] >= sort_dislikes[20]] \njp_top5_dislikes_output1=jp_top5_dislikes.drop(drop,axis=1,inplace = False)\njp_top5_dislikes_output2 = jp_top5_dislikes_output1.sort_values('dislikes', inplace=False, ascending=False)\njp_top5_dislikes_output2","cd9f4029":"cols = ['views','likes','dislikes','comment_count']\ncorrmat = jp_videos[cols].corr()\ncorrmat","00eb78da":"plt.scatter(jp_videos.likes, jp_videos.views, s = 30, alpha = 0.5, marker=\"*\", c = \"green\")\nplt.xlabel(\"likes\")\nplt.ylabel(\"views\")\nplt.grid(True) # \u683c\u5b50\u306e\u8868\u793a","e8bb3320":"plt.scatter(jp_videos.likes, jp_videos.dislikes, s = 30, alpha = 0.5, marker=\"*\", c = \"red\")\nplt.xlabel(\"likes\")\nplt.ylabel(\"dislikes\")\nplt.grid(True) # \u683c\u5b50\u306e\u8868\u793a","8cb9f3b8":"x_axis = jp_video1.category.value_counts().index #value_counts\u3067\u3001\u5024\u306e\u30ab\u30a6\u30f3\u30c8\ny_axis = jp_video1.category.value_counts().values\n\nplt.figure(figsize = (13,11))  #\u5927\u304d\u3081\u306b\u8a2d\u5b9a\u3057\u305f\nplt.title(\"Category\")\nsns.barplot(x = x_axis, y =y_axis)\nplt.xticks(rotation = 90)  #\u5024\u3092\u5782\u76f4\u306b\u51fa\u3059\nplt.show()","fb6cf17a":"from wordcloud import WordCloud, STOPWORDS\nplt.figure(figsize = (25,25))\n\n# \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\nstop_words = [ u'\u3066\u308b', u'\u3044\u308b', u'\u306a\u308b', u'\u308c\u308b', u'\u3059\u308b', u'\u3042\u308b', u'\u3053\u3068', u'\u3053\u308c', u'\u3055\u3093', u'\u3057\u3066', \\\n             u'\u304f\u308c\u308b', u'\u3084\u308b', u'\u304f\u3060\u3055\u308b', u'\u305d\u3046', u'\u305b\u308b', u'\u3057\u305f',  u'\u601d\u3046',  \\\n             u'\u305d\u308c', u'\u3053\u3053', u'\u3061\u3083\u3093', u'\u304f\u3093', u'', u'\u3066',u'\u306b',u'\u3092',u'\u306f',u'\u306e', u'\u304c', u'\u3068', u'\u305f', u'\u3057', u'\u3067', \\\n             u'\u306a\u3044', u'\u3082', u'\u306a', u'\u3044', u'\u304b', u'\u306e\u3067', u'\u3088\u3046', u'']\nfpath = \"..\/input\/fontjp\/notosanscjkjp-hinted\/NotoSansCJKjp-Regular.otf\"\nwordcloud = WordCloud(    \n                          font_path=fpath,\n                          stopwords=stop_words,\n                          max_words=2000,\n                          max_font_size=200, \n                          background_color=\"white\",  \n                          width=1900,  \n                          height=1900, \n                          random_state=42\n                         ).generate(str(jp_video1['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\")\nplt.axis('off')\nplt.show()","64e2808b":"plt.figure(figsize = (25,25))\n\n#\u30c7\u30fc\u30bf\u3092\u518d\u751f\u56de\u6570\u4e0a\u4f4d1000\u52d5\u753b\u306b\u7d5e\u308b\njp_video1_view = jp_video1[jp_video1[\"views\"] >= sort_views[1000]] \n\nwordcloud = WordCloud(    \n                          font_path=fpath,\n                          stopwords=stop_words,\n                          max_words=2000,\n                          max_font_size=200, \n                          background_color=\"white\",  \n                          width=1900,  \n                          height=1900, \n                          random_state=42\n                         ).generate(str(jp_video1_view['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - Top 1000 views\")\nplt.axis('off')\nplt.show()","65242bcd":"plt.figure(figsize = (25,25))\n\n#\u30c7\u30fc\u30bf\u3092Like\u4e0a\u4f4d1000\u52d5\u753b\u306b\u7d5e\u308b\njp_video1_likes = jp_video1[jp_video1[\"likes\"] >= sort_likes[1000]] \n\nwordcloud = WordCloud(    \n                          font_path=fpath,\n                          stopwords=stop_words,\n                          max_words=2000,\n                          max_font_size=200, \n                          background_color=\"white\",  \n                          width=1900,  \n                          height=1900, \n                          random_state=42\n                         ).generate(str(jp_video1_likes['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - Top 1000 Likes\")\nplt.axis('off')\nplt.show()","e51e5f91":"plt.figure(figsize = (25,25))\n\n#\u30c7\u30fc\u30bf\u3092Like\u4e0a\u4f4d1000\u52d5\u753b\u306b\u7d5e\u308b\njp_video1_dislikes = jp_video1[jp_video1[\"dislikes\"] >= sort_dislikes[1000]] \n\nwordcloud = WordCloud(    \n                          font_path=fpath,\n                          stopwords=stop_words,\n                          max_words=2000,\n                          max_font_size=200, \n                          background_color=\"white\",  \n                          width=1900,  \n                          height=1900, \n                          random_state=42\n                         ).generate(str(jp_video1_dislikes['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - Top 1000 Dislikes\")\nplt.axis('off')\nplt.show()","5552edab":"from IPython.display import HTML, display\n\njp_display = jp_video1.dropna() #NaN\u3092\u524a\u9664\u3059\u308b\nto_int = ['category_id']\nfor column in to_int:\n    jp_display[column] = jp_display[column].astype(int)\njp_display = jp_display.drop_duplicates('video_id',keep='last').sort_values('views',ascending=False)\nmost_views_thumb = jp_display['thumbnail_link'].head(100).reset_index()['thumbnail_link']\n\nROW = 10\nCOLUMN = 10\ntempHTML = ''\ninnerHTML = '<div style=\"block\">'\n    \nfor r in range(ROW):\n    rowHTML = ''\n    for c in range(COLUMN):\n        #if c != COLUMN-1:\n        tempHTML = '<img src=\"' + most_views_thumb[c*10+r] + '\"style=\"float:left;width:80px;height:80px;margin:0\">'\n        rowHTML += tempHTML\n        #else:\n            #tempHTML = '<img src=\"' + most_views_thumb[c*10+r] + '\"style=\"float:left;width:80px;height:80px;margin:0\">'\n            #rowHTML += tempHTML\n    innerHTML += rowHTML #'<div>' +rowHTML + '<\/div>'\ninnerHTML += '<\/div>'\ndisplay(HTML(innerHTML))\n","1101d7fa":"jp_top5_views = jp_video1[jp_video1[\"views\"] >= sort_views[20]] \njp_top5_views_output = jp_top5_views.sort_values('views', inplace=False, ascending=False)\nmost_views_thumb = jp_top5_views_output['thumbnail_link'].reset_index()['thumbnail_link']\n\nROW = 4\nCOLUMN = 5\ntempHTML = ''\ninnerHTML = '<div style=\"block\">'\n    \nfor r in range(ROW):\n    rowHTML = ''\n    for c in range(COLUMN):\n        #if c != COLUMN-1:\n        tempHTML = '<img src=\"' + most_views_thumb[c*4+r] + '\"style=\"float:left;width:200px;height:200px;margin:0\">'\n        rowHTML += tempHTML\n    innerHTML += rowHTML #'<div>' +rowHTML + '<\/div>'\ninnerHTML += '<\/div>'\ndisplay(HTML(innerHTML))\n","a8c53b8f":"### \u518d\u751f\u56de\u6570\u306e\u4e0a\u4f4d1000\u52d5\u753b\u3060\u3068\uff1f","307344a0":"# JSON\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b ","149b87b1":"### Dislike\u306e\u4e0a\u4f4d1000\u52d5\u753b","2be8f1d0":"# \u2464WordCloud\u3092\u65e5\u672c\u8a9e\u3067\u51fa\u3059\u3002\n### 1. [https:\/\/www.google.com\/get\/noto\/](https:\/\/www.google.com\/get\/noto\/)\u304b\u3089**Noto Sans CJK JP**\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n### 2. kernel\u753b\u9762\u53f3\u7aef\u306e\u30d0\u30fc\u5185\u306b\u3042\u308b\u201dAdd Data\u201d\u3092\u30af\u30ea\u30c3\u30af\u2192\"Your Datasets\"\u3092\u30af\u30ea\u30c3\u30af\u2192\"Upload\"\u3092\u30af\u30ea\u30c3\u30af\u2192\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u2192\"Enter Dataset Title\"\u306b\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u540d\u3092\u5165\u529b\u3057\u3001\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3002\n### 3. \"..\/input\/\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u540d\/zip\u30d5\u30a9\u30eb\u30c0\u540d\/XXX.otf\"\u306b\u3001\u30d5\u30a9\u30f3\u30c8\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002\n## \u6ce8\u610f: 2\u3067\u65b0\u305f\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u306b\u3001..\/input\/\u306b\u3042\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u30011\u3064\u968e\u5c64\u304c\u4e0b\u304c\u308a\u3001..\/input\/\u30b3\u30f3\u30da\u540d\/\u306b\u306a\u308b\u306e\u3067\u3001\u30d5\u30a9\u30eb\u30c0\u4f4d\u7f6e\u306e\u6307\u5b9a\u3092\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u4fee\u6b63\u3059\u308b\u3053\u3068\u3002","14889c65":"#### JSON\u30c7\u30fc\u30bf\u304b\u3089\u5f97\u305f\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u540d\u524d\u3092\u3001map\u3092\u4f7f\u3063\u3066category_id\u3068\u30ea\u30f3\u30af\u3055\u305b\u308b","f0ddbc7b":"# \u2463Category\u3092\u8abf\u3079\u308b","931e89b9":"# \u518d\u751f\u56de\u6570\u4e0a\u4f4d100\u3092\u8868\u793a\u3059\u308b","58b5c5a6":"# \u2462\u76f8\u95a2\u3092\u78ba\u8a8d\u3059\u308b\n### \u518d\u751f\u56de\u6570\u30fbLike\u30fbDislike\u30fb\u30b3\u30e1\u30f3\u30c8\u6570\u306f\u3059\u3079\u3066\u6b63\u306e\u76f8\u95a2\u3042\u308a","5b55515c":"# \u2460\u524d\u51e6\u7406","428f2c5e":"# \u2461\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e0a\u4f4d\u3092\u62bd\u51fa","9f88bec1":"## \u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001description(\u52d5\u753b\u306e\u8a73\u7d30\u306a\u8aac\u660e)\u4ee5\u5916\u306f\u6b20\u6e2c\u5024\u306e\u306a\u3044\u30c7\u30fc\u30bf\u3060\u3068\u308f\u304b\u308b\u3002\n### \u307e\u305f\u3001comments_disabled, ratings_disabled, video_error_or_removed\u306fTrue\u304bFalse\u306ebool\u578b\u3067\u3042\u308b\u3002\n> comments_disabled\uff1a\u30b3\u30e1\u30f3\u30c8\u3092\u5165\u529b\u3067\u304d\u306a\u3044\n\n> ratings_disabled\uff1a\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u304d\u306a\u3044\uff08\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u6210\u4eba\u6307\u5b9a\u304b\u3069\u3046\u304b\u306a\u3069\u306e\u6307\u6a19\u306e\u3053\u3068\uff1f\uff09\n\n> video_error_or_removed\uff1a\u52d5\u753b\u304c\u30a8\u30e9\u30fc\u304b\u65e2\u306b\u524a\u9664\u3055\u308c\u3066\u3044\u308b","2183255c":" \u500b\u4eba\u7528\u30e1\u30e2\n>EDA\u3068\u306f\u3001\u63a2\u7d22\u7684\u89e3\u6790\u306e\u3053\u3068","3785b920":"### Like\u4e0a\u4f4d1000\u52d5\u753b","ef49ef0e":"# \u305b\u3063\u304b\u304f\u306a\u306e\u3067\u65e5\u672c\u306e\u30c7\u30fc\u30bf\u3092\u8abf\u67fb\u3057\u3066\u307f\u308b\n> **\u305d\u306e\u307e\u307e\u3060\u3068\u65e5\u672c\u8a9e\u6587\u5b57\u306e\u554f\u984c\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u305f\u3081\u3001codecs.open\u3067ignore\u3092\u6307\u5b9a\u306e\u3046\u3048\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3057\u3066\u958b\u3044\u3066\u3001pd.read_table\u3092\u4f7f\u3063\u305f\u3002**\n[https:\/\/qiita.com\/niwaringo\/items\/d2a30e04e08da8eaa643]()\n> codecs.open( ... )\u306e\u4e2d\u8eab\u306f\u30d5\u30a1\u30a4\u30eb\u540d\uff0c\u8aad\u307f\u66f8\u304d\u6a29\u9650\uff0c\u6587\u5b57\u30b3\u30fc\u30c9\uff0c\u30a8\u30e9\u30fc\u3078\u306e\u5bfe\u5fdc\u6cd5\uff08strict(\u30c7\u30d5\u30a9\u30eb\u30c8)\u304bignore\uff09","1b101e0f":"# \u30c7\u30fc\u30bf\u5206\u6790\n#### \u30fb\u518d\u751f\u56de\u6570\u306e\u4e0a\u4f4d\u3092\u8868\u793a\n#### \u30fbLike\u306e\u4e0a\u4f4d\u3092\u8868\u793a\n#### \u30fbDslike\u306e\u4e0a\u4f4d\u3092\u8868\u793a\n#### \u30fbLike\u3068Dislike\u306e\u76f8\u95a2\n#### \u30fbLike\u3068\u518d\u751f\u56de\u6570\u306e\u76f8\u95a2","fad9432b":"### \u30a4\u30a4\u30cd\u6570\u306e\u4e0a\u4f4d\u3092\u8868\u793a","ba7789e7":"### DISLIKE\u6570\u306e\u4e0a\u4f4d\u3092\u8868\u793a","9a3f7e65":"### \u518d\u751f\u56de\u6570\u306e\u4e0a\u4f4d\u3092\u8868\u793a\n#### BTS (\u9632\u5f3e\u5c11\u5e74\u56e3) \u306e\u52d5\u753b\u304c\u4e00\u756a\u4eba\u6c17"}}