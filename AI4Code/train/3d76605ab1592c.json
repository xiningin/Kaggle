{"cell_type":{"f8d35bbc":"code","52fc12ec":"code","b47fbe08":"code","74e0e974":"code","dc784d95":"code","69849ee8":"code","611f457d":"code","8233c81a":"code","63659829":"code","dea121ec":"code","4f041aca":"code","a681d9f7":"code","59f9cfd8":"code","0b417dbc":"code","d015d81a":"code","da83b4bd":"code","e9e24516":"code","c2e4be49":"code","46939976":"code","d2deeeab":"code","13b291ff":"code","2eb597fa":"code","7a65c4ad":"code","f847b30f":"markdown","5960c876":"markdown","b3690848":"markdown","1d09a8f5":"markdown","492181d8":"markdown","c4cf1ce2":"markdown","dd08f5ea":"markdown","01c2f2c5":"markdown","58c4f042":"markdown","feaf61bb":"markdown","508465b4":"markdown","10e20bf1":"markdown","142f96af":"markdown","3328c1e9":"markdown","2eed1052":"markdown","dfb7912f":"markdown","f8729c10":"markdown","63bd354c":"markdown","8ae28105":"markdown","3caa173e":"markdown","4edffd41":"markdown","904f991c":"markdown","5ea83845":"markdown"},"source":{"f8d35bbc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","52fc12ec":"df = pd.read_csv(\"..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\ndf.head()","b47fbe08":"df['Year'].value_counts()","74e0e974":"sns.countplot(x=df['Genre'])\nplt.title('Non Fiction VS Fiction')\nplt.show()","dc784d95":"fig, ax = plt.subplots(2, 2, figsize=(16,10))\n\nax[0,0].hist(df['Reviews'], bins=100, color='r')\nax[0,0].set_title('Reviews', size=20)\nax[0,1].hist(df['Price'], bins=100, color='b')\nax[0,1].set_title('Price', size=20)\nax[1,0].hist(df['Year'], bins=50, color='orange')\nax[1,0].set_title('Year', size=20)\nax[1,1].hist(df['Genre'], bins=5, color='pink')\nax[1,1].set_title('Genre', size=20)\n\nplt.show()","69849ee8":"plt.figure(figsize=(8,6))\nplt.scatter('Price', 'User Rating', data=df, color='purple')\nplt.title('Price VS User Rating', size=20)\nplt.xlabel('Price', size=15)\nplt.ylabel('User Rating', size=15)\nplt.show()","611f457d":"plt.scatter(df['Price'], y=[i for i in range(\n    len(df['Price']))], color='#42b7bd')\nplt.title('Price column', size=20)\nplt.xlabel('Price', size=15)\nplt.ylabel('index in the data frame', size=15)\nplt.show()","8233c81a":"# Plot\nplt.plot(df['Reviews'], color='purple')\nplt.title('Reviews column', size=20)\nplt.xlabel('Index in the data frame', size=15)\nplt.ylabel('Number of reviews', size=15)\nplt.show()","63659829":"# Get the name of the top 10 books that has most reviews\nbooks = df.drop_duplicates(subset='Name').nlargest(\n    10, 'Reviews').iloc[:, [0, -4]].reset_index(drop=True)\nprint(f'The most reviewed books:')\nbooks","dea121ec":"df['User Rating'].hist(bins=35)\nplt.title('User rating Hist')\nplt.show()","4f041aca":"# Get the name of the top 10 user rated books\nratings = df.drop_duplicates(subset='Name').nlargest(\n    10, 'User Rating').iloc[:, [0, 2]].reset_index(drop=True)\nprint(f'The most User rated books:')\nratings","a681d9f7":"# Define the X\nX = df.iloc[:, 2:]\n# Drop the price column\nX.drop('Price', axis=1, inplace=True)\n# Map the genre column to ('Non Fiction': 0, 'Fiction':1)\nX['Genre'] = X['Genre'].map({'Non Fiction': 0, 'Fiction':1})\n# Convert the data frame to numpy array \nX = X.values\n# Define the y and y2\ny = df['Price']\ny2 = df['User Rating'].values\n# Convert the data Frame to a numpy array\ny = y.values\n# print X and y shape\nX.shape, y.shape","59f9cfd8":"from sklearn.preprocessing import MinMaxScaler\nsc = MinMaxScaler()\nX = sc.fit_transform(X)","0b417dbc":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10)\nreg = RandomForestRegressor(n_estimators = 10)\nregressor.fit(X, y)\nreg.fit(X,y2)","d015d81a":"# For the User Rating column\nfrom sklearn import metrics\ny_pred = reg.predict(X)\nResult = pd.DataFrame({'Actual': y2, 'Predicted': y_pred})\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y2, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y2, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(\n    metrics.mean_squared_error(y2, y_pred)))\n\nResult.head()","da83b4bd":"# For the Price column\ny_pred = regressor.predict(X)\nResult = pd.DataFrame({'Actual': y, 'Predicted': y_pred})\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(\n    metrics.mean_squared_error(y, y_pred)))\n\nResult.head()","e9e24516":"import keras\nfrom keras.models import Sequential\nfrom keras import layers","c2e4be49":"model = Sequential()\nmodel.add(layers.Dense(64, activation='relu'))\nmodel.add(layers.Dense(64, activation='relu'))\nmodel.add(layers.Dense(1))","46939976":"model.compile(\n    optimizer=keras.optimizers.Adam(learning_rate=0.1),\n    loss='mean_absolute_error')","d2deeeab":"history = model.fit(\n    X, y,\n    epochs=100,\n    validation_split = 0.5)","13b291ff":"def plot_loss(history):\n  plt.plot(history.history['loss'], label='loss')\n  plt.plot(history.history['val_loss'], label='val_loss')\n  plt.ylim([0, 10])\n  plt.xlabel('Epoch')\n  plt.ylabel('Error [MPG]')\n  plt.legend()\n  plt.grid(True)\n\nplot_loss(history)","2eb597fa":"history = model.fit(\n    X, y2,\n    epochs=100,\n    validation_split = 0.5)","7a65c4ad":"plot_loss(history)","f847b30f":"## Model bulding","5960c876":"## Plot the loss VS the validation loss","b3690848":"## Predict X, show the Error","1d09a8f5":"## Train the Random Forest Regressor","492181d8":"## top 10 user rated books","c4cf1ce2":"# Plot the Price column","dd08f5ea":"## Read the data, Show first 5 rows","01c2f2c5":"## Compile the model","58c4f042":"## For User Rating","feaf61bb":"## Top 10 Books that has most Reviewes","508465b4":"## Build the model","10e20bf1":"# Define X and y","142f96af":"## Importing the libraries","3328c1e9":"## Train the model","2eed1052":"## Plot the loss VS the validation loss","dfb7912f":"## For the Price column","f8729c10":"## Explore the Reviews column","63bd354c":"## Importing keras ","8ae28105":"## See how many books made in each year from (2009 - 2019)","3caa173e":"## Normalize the data with Min Max Scaler","4edffd41":"# The link of the data set:\nhttps:\/\/www.kaggle.com\/sootersaalu\/amazon-top-50-bestselling-books-2009-2019","904f991c":"## Explore the User rating column","5ea83845":"## Histogram (Reviews, Price, Year, Genre)"}}