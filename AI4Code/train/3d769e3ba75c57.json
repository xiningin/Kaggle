{"cell_type":{"a33c440b":"code","8596c5cb":"code","39fb5dbc":"code","a5beb595":"code","7de6ece1":"code","85c5768f":"code","679664d3":"code","ac633d3d":"code","d4df6f9b":"code","fd8d82ac":"code","e740d72a":"code","b81c9777":"code","701ccece":"code","ee076755":"code","c145b382":"code","41906f0b":"code","8bae8675":"code","f0c073d5":"code","a1b4d9a7":"code","2028f3d5":"code","be8ea97f":"code","4d0ff7ce":"code","b191847e":"code","6306fcac":"code","d4f67485":"code","d27ac4bd":"code","9d0eecd3":"code","e8773652":"code","f1efce95":"markdown","70fb194c":"markdown","37db8482":"markdown","bc194a4d":"markdown","4ef15028":"markdown","53921824":"markdown","73899b19":"markdown","9a37074d":"markdown","19cd7c40":"markdown","3ccf3753":"markdown","ec86d10f":"markdown","a50343f6":"markdown","65d01d86":"markdown","58528dd4":"markdown","1d0a6ac0":"markdown","555ba019":"markdown","9078ec43":"markdown","f03981d2":"markdown","5e12fdd6":"markdown","cbe26804":"markdown","c5b4128a":"markdown","3c931b47":"markdown","a6aab16a":"markdown","c2f94d78":"markdown","6ead523e":"markdown","14349010":"markdown","6a739b3f":"markdown","e50a1890":"markdown","280a9aff":"markdown","108c2adc":"markdown","2cc8ba18":"markdown","aaa6e74a":"markdown","b37040bf":"markdown","ab740e5f":"markdown","67ba0013":"markdown"},"source":{"a33c440b":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport folium\nfrom scipy import stats\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8596c5cb":"# data\ncountries = ['Finland', 'Brazil', 'Japan', 'New Zealand', 'Northern Ireland', 'Taiwan',\n            'United States', 'Great Britain', 'France', 'Greece', 'India', 'Singapore',\n            'Canada', 'Chile', 'Latvia', 'Australia', 'Slovenia', 'Portugal', 'Serbiea', \n            'Denmark']\nquality = [100, 85, 85, 85, 85, 85, 85, 85, 70, 65, 65, 60, 50, 50, 50, 50, 50, 50, 45, 30]\ndf_countries = pd.DataFrame({'Country':countries, 'Quality,%':quality})\nlist_countries = []\nfor n in range(len(df_countries['Country'])):\n    x = df_countries.loc[n,:]\n    list_countries.append(x)\n\n# colors\ncolor_list=[['#D3D3D3', 'white']]\n\n# fig\nfig = plt.figure()\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1]) \n\n# table\ntable=axes1.table(cellColours=color_list*20,cellText = list_countries, cellLoc ='left', loc ='center', colWidths=[0.3,0.3,],\n                  colLabels=df_countries.columns,colColours=['steelblue']*2)      \n# axis\naxes1.set_axis_off() \n\n# font sie\ntable.auto_set_font_size(False) \ntable.set_fontsize(16)  \n\n# table size\ntable.scale(1.5, 1.8) ","39fb5dbc":"df = pd.read_csv('\/kaggle\/input\/water-potability\/water_potability.csv')\ndf.head()","a5beb595":"df.info()","7de6ece1":"df.describe()","85c5768f":"df[df['Potability']==0].describe()","679664d3":"df[df['Potability']==1].describe()","ac633d3d":"df['Potability'].replace({0:'Not potable', 1:'Potable'}, inplace=True)\ndf_not_potable = df[df['Potability']=='Not potable']\ndf_potable = df[df['Potability']=='Potable']\n\n# ph\ndf_not_potable['ph'].fillna(df_not_potable['ph'].mean(),inplace=True)\ndf_potable['ph'].fillna(df_potable['ph'].mean(),inplace=True)\n\n# sulfate\ndf_not_potable['Sulfate'].fillna(df_not_potable['Sulfate'].mean(),inplace=True)\ndf_potable['Sulfate'].fillna(df_potable['Sulfate'].mean(),inplace=True)\n\n# sulfate\ndf_not_potable['Trihalomethanes'].fillna(df_not_potable['Trihalomethanes'].mean(),inplace=True)\ndf_potable['Trihalomethanes'].fillna(df_potable['Trihalomethanes'].mean(),inplace=True)\n\ndf = pd.concat([df_not_potable, df_potable])","d4df6f9b":"group_Potability = df.groupby('Potability')['ph'].count().reset_index()\ngroup_Potability.rename(columns={'ph':'Count'}, inplace=True)\ngroup_Potability['Percentage'] = round(group_Potability['Count']\/sum(group_Potability['Count'])*100,2)\n\n# fig\nfig = plt.figure(figsize=(12,4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# barh\naxes1.barh(width=group_Potability['Percentage'][0]+group_Potability['Percentage'][1], y=0, color='steelblue')\naxes1.barh(width=group_Potability['Percentage'][0], y=0, color='#D3D3D3')\n\n# annotation\naxes1.text(group_Potability['Percentage'][0]\/2.5, 0, f\"{group_Potability['Percentage'][0]}%\", color='black', fontsize=30, fontweight='bold')\naxes1.text(group_Potability['Percentage'][0]\/2.5, -0.1, f\"({group_Potability['Count'][0]})\", color='black', fontsize=30, fontweight='bold')\naxes1.text((group_Potability['Percentage'][0]+group_Potability['Percentage'][1])\/1.37, 0, f\"{group_Potability['Percentage'][1]}%\", color='black', fontsize=30, fontweight='bold')\naxes1.text((group_Potability['Percentage'][0]+group_Potability['Percentage'][1])\/1.37, -0.1, f\"({group_Potability['Count'][1]})\", color='black', fontsize=30, fontweight='bold')\n\n# title\naxes1.text(group_Potability['Percentage'][0]\/3.5, 0.5, 'Not potability', color='Black', fontsize=30, fontweight='bold')\naxes1.text((group_Potability['Percentage'][0]+group_Potability['Percentage'][1])\/1.43, 0.5, 'Potability', color='Black', fontsize=30, fontweight='bold')\n\n# axis\naxes1.axis('off')\n\nfig.show()","fd8d82ac":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['ph'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['ph'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes 1\naxes1.axvline(6.5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axvline(8.5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axhline(0.2, linestyle = ':', color = 'crimson', xmin = 0.474, xmax = 0.5823, lw=4)\naxes1.text(6.3, 0.22, 'Normal for human', color='black', fontsize=14, fontweight='bold')\naxes1.annotate('', xy=(2, 0.15), xytext=(6.3, 0.15), arrowprops=dict(color='crimson'))\naxes1.annotate('', xy=(13, 0.15), xytext=(8.7, 0.15), arrowprops=dict(color='crimson'))\naxes1.text(3.3, 0.17, 'Very acidic', color='black', fontsize=14, fontweight='bold')\naxes1.text(9.7, 0.17, 'Very alkaline', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes 2\naxes2.axvline(6.5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axvline(8.5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axhline(0.23, linestyle = ':', color = 'crimson', xmin = 0.487, xmax = 0.611, lw=4)\naxes2.text(6.3, 0.25, 'Normal for human', color='black', fontsize=14, fontweight='bold')\naxes2.annotate('', xy=(2, 0.15), xytext=(6.3, 0.15), arrowprops=dict(color='crimson'))\naxes2.annotate('', xy=(13, 0.15), xytext=(8.7, 0.15), arrowprops=dict(color='crimson'))\naxes2.text(3.3, 0.17, 'Very acidic', color='black', fontsize=14, fontweight='bold')\naxes2.text(9.7, 0.17, 'Very alkaline', color='black', fontsize=14, fontweight='bold')\n\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('ph', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('ph', color='black', fontsize=17)\n\n# ticks\naxes1.set_xticks(range(1,15))\naxes2.set_xticks(range(1,15))\n\n# title\naxes1.text(-0.2, 0.4, 'ph (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(0, 0.4, 'ph (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","e740d72a":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['ph'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('ph', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'ph by potability', color='Black', fontsize=24, fontweight='bold')\n\n# ticks\naxes1.set_xticks(range(1,15))\n\nfig.show()\n","b81c9777":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Hardness'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Hardness'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotates for axes1\naxes1.axvline(0, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axvline(60, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axvline(120, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axvline(180, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axhline(0.00724, linestyle = ':', color = 'crimson', xmin = 0.05, xmax = 1, lw=4)\naxes1.text(25, 0.00784, 'Soft', color='black', fontsize=14, fontweight='bold')\naxes1.text(61, 0.00784, 'Moderately hard', color='black', fontsize=14, fontweight='bold')\naxes1.text(142, 0.00784, 'Hard', color='black', fontsize=14, fontweight='bold')\naxes1.text(202, 0.00784, 'Very hard', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotates for axes2\naxes2.axvline(0, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axvline(60, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axvline(120, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axvline(180, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axhline(0.006, linestyle = ':', color = 'crimson', xmin = 0.05, xmax = 1, lw=4)\naxes2.text(25, 0.0066, 'Soft', color='black', fontsize=14, fontweight='bold')\naxes2.text(61, 0.0066, 'Moderately hard', color='black', fontsize=14, fontweight='bold')\naxes2.text(142, 0.0066, 'Hard', color='black', fontsize=14, fontweight='bold')\naxes2.text(202, 0.0066, 'Very hard', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Hardness', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Hardness', color='black', fontsize=17)\n\n# title\naxes1.text(0, 0.015, 'Hardness (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(0, 0.013, 'Hardness (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","701ccece":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Hardness'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Hardness', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Hardness by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","ee076755":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Solids'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Solids'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotates for axes1\naxes1.axvline(1200, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(60000, 0.000015), xytext=(1300, 0.000015), arrowprops=dict(color='crimson'))\naxes1.text(19000, 0.000018, 'Unacceptable', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotates for axes2\naxes2.axvline(1200, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(60000, 0.000015), xytext=(1300, 0.000015), arrowprops=dict(color='crimson'))\naxes2.text(19000, 0.000018, 'Unacceptable', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Solids', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Solids', color='black', fontsize=17)\n\n# title\naxes1.text(0, 0.000053, 'Solids (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(0, 0.000053, 'Solids (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","c145b382":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Solids'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Solids', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Solids by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","41906f0b":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Chloramines'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Chloramines'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(4, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(0.1, 0.1), xytext=(3.95, 0.1), arrowprops=dict(color='crimson'))\naxes1.text(1, 0.11, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(4, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(-1, 0.1), xytext=(3.95, 0.1), arrowprops=dict(color='crimson'))\naxes2.text(1, 0.11, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Chloramines', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Chloramines', color='black', fontsize=17)\n\n# ticks\naxes1.set_xticks(range(1,15))\naxes2.set_xticks(range(1,15))\n\n# title\naxes1.text(0, 0.28, 'Chloramines (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(-1.8, 0.28, 'Chloramines (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","8bae8675":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Chloramines'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Chloramines', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Chloramines by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","f0c073d5":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Sulfate'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Sulfate'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(500, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(200, 0.008), xytext=(498, 0.008), arrowprops=dict(color='crimson'))\naxes1.text(395, 0.009, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(500, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(200, 0.005), xytext=(498, 0.005), arrowprops=dict(color='crimson'))\naxes2.text(395, 0.006, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Sulfate', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Sulfate', color='black', fontsize=17)\n\n# title\naxes1.text(150, 0.025, 'Sulfate (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(56, 0.019, 'Sulfate (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","a1b4d9a7":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Sulfate'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Sulfate', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Sulfate by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","2028f3d5":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Conductivity'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Conductivity'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(400, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(150, 0.0015), xytext=(395, 0.0015), arrowprops=dict(color='crimson'))\naxes1.text(265, 0.0017, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(400, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(185, 0.0015), xytext=(395, 0.0015), arrowprops=dict(color='crimson'))\naxes2.text(265, 0.0017, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Sulfate', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Sulfate', color='black', fontsize=17)\n\n# title\naxes1.text(55, 0.005, 'Conductivity (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(75, 0.005, 'Conductivity (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","be8ea97f":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Sulfate'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Conductivity', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Conductivity by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","4d0ff7ce":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Organic_carbon'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Organic_carbon'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(4, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axvline(10, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.axhline(0.06, linestyle = ':', color = 'crimson', xmin = 0, xmax = 10, lw=4)\naxes1.text(0.01, 0.065, 'Potable water', color='black', fontsize=14, fontweight='bold')\naxes1.text(4.6, 0.065, 'Surface water', color='black', fontsize=14, fontweight='bold')\naxes1.text(12, 0.065, 'Wastewater', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(4, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axvline(10, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.axhline(0.063, linestyle = ':', color = 'crimson', xmin = 0, xmax = 10, lw=4)\naxes2.text(0.01, 0.068, 'Potable water', color='black', fontsize=14, fontweight='bold')\naxes2.text(4.6, 0.068, 'Surface water', color='black', fontsize=14, fontweight='bold')\naxes2.text(12, 0.068, 'Wastewater', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Organic_carbon', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Organic_carbon', color='black', fontsize=17)\n\n# title\naxes1.text(2, 0.13, 'Organic_carbon (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(-0.3, 0.11, 'Organic_carbon (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","b191847e":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Organic_carbon'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Organic_carbon', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Organic_carbon by potability', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","6306fcac":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Trihalomethanes'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Trihalomethanes'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(80, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(20, 0.012), xytext=(78, 0.012), arrowprops=dict(color='crimson'))\naxes1.text(45, 0.014, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(80, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(20, 0.012), xytext=(78, 0.012), arrowprops=dict(color='crimson'))\naxes2.text(45, 0.014, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Trihalomethanes', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Trihalomethanes', color='black', fontsize=17)\n\n# title\naxes1.text(-12, 0.027, 'Trihalomethanes (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(-5, 0.025, 'Trihalomethanes (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","d4f67485":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Trihalomethanes'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Trihalomethanes', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Trihalomethanes', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","d27ac4bd":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df_not_potable['Turbidity'], color='#D3D3D3', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df_potable['Turbidity'], color='steelblue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# lines and annotate axes1\naxes1.axvline(5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes1.annotate('', xy=(1.3, 0.19), xytext=(4.95, 0.19), arrowprops=dict(color='crimson'))\naxes1.text(2.9, 0.22, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# lines and annotate axes2\naxes2.axvline(5, linestyle = ':', color = 'crimson', ymin = 0, ymax = 0.5, lw=4)\naxes2.annotate('', xy=(1.3, 0.19), xytext=(4.95, 0.19), arrowprops=dict(color='crimson'))\naxes2.text(2.9, 0.22, 'Safely', color='black', fontsize=14, fontweight='bold')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('')\naxes1.set_xlabel('Turbidity', color='black', fontsize=17)\naxes2.set_ylabel('')\naxes2.set_xlabel('Turbidity', color='black', fontsize=17)\n\n# title\naxes1.text(1, 0.43, 'Turbidity (Not potable)', color='Black', fontsize=24, fontweight='bold')\naxes2.text(1, 0.43, 'Turbidity (Potable)', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","9d0eecd3":"# fig\nfig = plt.figure(figsize=(15, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxenplot(x=df['Turbidity'], y=df['Potability'], ax=axes1, palette=['#D3D3D3', 'steelblue'])\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Potability', color='black', fontsize=17)\naxes1.set_xlabel('Turbidity', color='black', fontsize=17)\n\n# title\naxes1.text(0, -0.8, 'Turbidity', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","e8773652":"# corr_table\ndf_corr = df.corr('spearman')\n\n# ph\nph = df.corr('spearman')['ph'][1:]\n\n# Hardness\nHardness = df_corr['Hardness'][0]\nHardness = np.hstack([df_corr['Hardness'][0],df_corr['Hardness'][2:]])\nhardness_list = [df_corr.columns[0]]\nfor i in df_corr.columns[2:]:\n    hardness_list.append(i)\n\n# Solids\nSolids = df_corr['Solids'][:2]\nSolids = np.hstack([df_corr['Solids'][:2],df_corr['Solids'][3:]])\nsolids_list = []\nfor i in df_corr.columns[:2]:\n    solids_list.append(i)\nfor i in df_corr.columns[3:]:\n    solids_list.append(i)\n    \n# Chloramines\nChloramines = df_corr['Chloramines'][:3]\nChloramines = np.hstack([df_corr['Chloramines'][:3],df_corr['Chloramines'][4:]])\nchloramines_list = []\nfor i in df_corr.columns[:3]:\n    chloramines_list.append(i)\nfor i in df_corr.columns[4:]:\n    chloramines_list.append(i)\n\n# Sulfate\nSulfate = df_corr['Sulfate'][:4]\nSulfate = np.hstack([df_corr['Sulfate'][:4],df_corr['Sulfate'][5:]])\nsulfate_list = []\nfor i in df_corr.columns[:4]:\n    sulfate_list.append(i)\nfor i in df_corr.columns[5:]:\n    sulfate_list.append(i)\n    \n# Conductivity\nConductivity = df_corr['Conductivity'][:5]\nConductivity = np.hstack([df_corr['Conductivity'][:5],df_corr['Conductivity'][6:]])\nconductivity_list = []\nfor i in df_corr.columns[:5]:\n    conductivity_list.append(i)\nfor i in df_corr.columns[6:]:\n    conductivity_list.append(i)    \n\n# Organic_carbon\nOrganic_carbon = df_corr['Organic_carbon'][:6]\nOrganic_carbon = np.hstack([df_corr['Organic_carbon'][:6],df_corr['Organic_carbon'][7:]])\norganic_carbon_list = []\nfor i in df_corr.columns[:6]:\n    organic_carbon_list.append(i)\nfor i in df_corr.columns[7:]:\n    organic_carbon_list.append(i)  \n    \n# Trihalomethanes\nTrihalomethanes = df_corr['Trihalomethanes'][:7]\nTrihalomethanes = np.hstack([df_corr['Trihalomethanes'][:7],df_corr['Trihalomethanes'][8:]])\ntrihalomethanes_list = []\nfor i in df_corr.columns[:7]:\n    trihalomethanes_list.append(i)\nfor i in df_corr.columns[8:]:\n    trihalomethanes_list.append(i)  \n    \n# Turbidity\nTurbidity = df_corr['Turbidity'][:8]\nTurbidity = np.hstack([df_corr['Turbidity'][:8],df_corr['Trihalomethanes'][9:]])\nturbidity_list = []\nfor i in df_corr.columns[:8]:\n    turbidity_list.append(i)\nfor i in df_corr.columns[9:]:\n    turbidity_list.append(i)\n\n# fig\nfig = plt.figure(figsize=(12, 5))\n\n#axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.2,1,1])\naxes3 = fig.add_axes([0,-2.4,1,1])\naxes4 = fig.add_axes([0,-3.6,1,1])\naxes5 = fig.add_axes([0,-4.8,1,1])\naxes6 = fig.add_axes([0,-6,1,1])\naxes7 = fig.add_axes([0,-7.2,1,1])\naxes8 = fig.add_axes([0,-8.4,1,1])\naxes9 = fig.add_axes([0,-9.6,1,1])\n\n# bar (ph)\naxes1.bar(height=1, x=ph.index, color='white')\naxes1.bar(height=ph[0], x=ph.index[0], color='crimson')\naxes1.bar(height=ph[1:], x=ph.index[1:], color='steelblue')\n\n# bar (hardness)\naxes2.bar(height=1, x=hardness_list, color='white')\naxes2.bar(height=Hardness[0], x=hardness_list[0], color='crimson')\naxes2.bar(height=Hardness[1:], x=hardness_list[1:], color='steelblue')\n\n# bar (solids)\naxes3.bar(height=1, x=solids_list, color='white')\naxes3.bar(height=Solids[:3], x=solids_list[:3], color='steelblue')\naxes3.bar(height=Solids[3], x=solids_list[3], color='crimson')\naxes3.bar(height=Solids[4:], x=solids_list[4:], color='steelblue')\n\n# bar (chloramines)\naxes4.bar(height=1, x=chloramines_list, color='white')\naxes4.bar(height=Chloramines[:2], x=chloramines_list[:2], color='steelblue')\naxes4.bar(height=Chloramines[2], x=chloramines_list[2], color='crimson')\naxes4.bar(height=Chloramines[3:], x=chloramines_list[3:], color='steelblue')\n\n# bar (sulfate)\naxes5.bar(height=1, x=sulfate_list, color='white')\naxes5.bar(height=Sulfate[:2], x=sulfate_list[:2], color='steelblue')\naxes5.bar(height=Sulfate[2], x=sulfate_list[2], color='crimson')\naxes5.bar(height=Sulfate[3:], x=sulfate_list[3:], color='steelblue')\n\n# bar (conductivity)\naxes6.bar(height=1, x=conductivity_list, color='white')\naxes6.bar(height=Conductivity[0], x=conductivity_list[0], color='steelblue')\naxes6.bar(height=Conductivity[1], x=conductivity_list[1], color='crimson')\naxes6.bar(height=Conductivity[2:], x=conductivity_list[2:], color='steelblue')\n\n# bar (organic_carbon)\naxes7.bar(height=1, x=organic_carbon_list, color='white')\naxes7.bar(height=Organic_carbon[0], x=organic_carbon_list[0], color='crimson')\naxes7.bar(height=Organic_carbon[1:], x=organic_carbon_list[1:], color='steelblue')\n\n# bar (trihalomethanes)\naxes8.bar(height=1, x=trihalomethanes_list, color='white')\naxes8.bar(height=Trihalomethanes[7], x=trihalomethanes_list[7], color='crimson')\naxes8.bar(height=Trihalomethanes[:7], x=trihalomethanes_list[:7], color='steelblue')\n\n# bar (turbidity)\naxes9.bar(height=1, x=turbidity_list, color='white')\naxes9.bar(height=Turbidity[0], x=turbidity_list[0], color='crimson')\naxes9.bar(height=Turbidity[1:], x=turbidity_list[1:], color='steelblue')\n\n# spines\naxes1.spines[['left', 'top', 'right']].set_visible(False)\naxes2.spines[['left', 'top', 'right']].set_visible(False)\naxes3.spines[['left', 'top', 'right']].set_visible(False)\naxes4.spines[['left', 'top', 'right']].set_visible(False)\naxes5.spines[['left', 'top', 'right']].set_visible(False)\naxes6.spines[['left', 'top', 'right']].set_visible(False)\naxes7.spines[['left', 'top', 'right']].set_visible(False)\naxes8.spines[['left', 'top', 'right']].set_visible(False)\naxes9.spines[['left', 'top', 'right']].set_visible(False)\n\n# lebels\naxes1.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes1.set_xlabel('Features', color='black', fontsize=17)\naxes2.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes2.set_xlabel('Features', color='black', fontsize=17)\naxes3.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes3.set_xlabel('Features', color='black', fontsize=17)\naxes4.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes4.set_xlabel('Features', color='black', fontsize=17)\naxes5.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes5.set_xlabel('Features', color='black', fontsize=17)\naxes6.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes6.set_xlabel('Features', color='black', fontsize=17)\naxes7.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes7.set_xlabel('Features', color='black', fontsize=17)\naxes8.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes8.set_xlabel('Features', color='black', fontsize=17)\naxes9.set_ylabel('Spearman correlation', color='black', fontsize=17)\naxes9.set_xlabel('Features', color='black', fontsize=17)\n\n# ticks\naxes1.set_yticks(np.arange(-1,1.1, 0.2))\naxes2.set_yticks(np.arange(-1,1.1, 0.2))\naxes3.set_yticks(np.arange(-1,1.1, 0.2))\naxes4.set_yticks(np.arange(-1,1.1, 0.2))\naxes5.set_yticks(np.arange(-1,1.1, 0.2))\naxes6.set_yticks(np.arange(-1,1.1, 0.2))\naxes7.set_yticks(np.arange(-1,1.1, 0.2))\naxes8.set_yticks(np.arange(-1,1.1, 0.2))\naxes9.set_yticks(np.arange(-1,1.1, 0.2))\n\n# title\naxes1.text(-0.6, 0.8, 'Correlation ph with other features', color='Black', fontsize=24, fontweight='bold')\naxes2.text(-0.6, 0.8, 'Correlation Hardness with other features', color='Black', fontsize=24, fontweight='bold')\naxes3.text(-0.6, 0.8, 'Correlation Solids with other features', color='Black', fontsize=24, fontweight='bold')\naxes4.text(-0.6, 0.8, 'Correlation Chloramines with other features', color='Black', fontsize=24, fontweight='bold')\naxes5.text(-0.6, 0.8, 'Correlation Sulfate with other features', color='Black', fontsize=24, fontweight='bold')\naxes6.text(-0.6, 0.8, 'Correlation Conductivity with other features', color='Black', fontsize=24, fontweight='bold')\naxes7.text(-0.6, 0.8, 'Correlation Organic_carbon with other features', color='Black', fontsize=24, fontweight='bold')\naxes8.text(-0.6, 0.8, 'Correlation Trihalomethanes with other features', color='Black', fontsize=24, fontweight='bold')\naxes9.text(-0.6, 0.8, 'Correlation Turbidity with other features', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","f1efce95":"**From the presented data we observe a weak correlation between the features.**","70fb194c":"*For potability*","37db8482":"![image.png](attachment:64bba10a-5476-4a7c-a54d-80ab4cccd4da.png)","bc194a4d":"# Turbidity","4ef15028":"# Trihalomethanes","53921824":"**Firstly i decided check water quality by country. I found data on this topic on the [GLOBAL OPEN DATA INDEX](https:\/\/index.okfn.org\/dataset\/water\/).**\n\n![image.png](attachment:117656e9-01d0-4c30-bf2b-e21071467ab5.png)\n\n**Parameters for analysis**\n* Fecal coliform\n* Arsenic\n* Fluoride levels\n* Nitrates\n* Total Dissolved Solids\n* Data per water source\n* Available for entire country\n\n**There are 94 countries in the ranking. And 71 of them have water quality - 0%.**\n\n**I made table with top 20 countries, other you can see in the source**.","73899b19":"# Sulfate","9a37074d":"*For not potability*","19cd7c40":"# Hardness","3ccf3753":"**And so, we have only one observe with Organic_carbon < 4...**","ec86d10f":"**In most observes the value of sulfates in normal range**\n\n**Interesting that in potable water sulfates out of normal range.**","a50343f6":"**Conductivity of a substance is defined as 'the ability or power to conduct or transmit heat, electricity, or sound'. Pure water has an extremely low electrical conductivity because of the lack of impurities within it. The commonly used units for measuring electrical conductivity of water are:**\n\n* \u03bcS\/cm (microSiemens\/cm)\n\n*or*\n\n* dS\/m   (deciSiemens\/m)\n\n*Where: 1000 \u03bcs\/cm = 1 dS\/m*\n\n**According to WHO standards, EC value should not exceeded 400 \u03bcS\/cm.**","65d01d86":"**The data contains nan. Let's check mean values for columns.**\n\n*For all*","58528dd4":"# Solids","1d0a6ac0":"**We can see that a small number of observations, even in potable water, are classified as Soft and Moderately hard.**\n\n**Also we observe that maximum values of hardness in potable water.**","555ba019":"**Hardness is caused by compounds of calcium and magnesium, and by a variety of other metals. General guidelines for classification of waters are:**\n\n* 0 to 60 mg\/L (milligrams per liter) as calcium carbonate is classified as soft; \n* 61 to 120 mg\/L as moderately hard; \n* 121 to 180 mg\/L as hard; \n* and more than 180 mg\/L as very hard.","9078ec43":"# Organic_carbon","f03981d2":"# Chloramines\n\n**Chloramine is a disinfectant used to treat drinking water. It is formed by mixing chlorine with ammonia. Although it is a weaker disinfectant than chlorine, it is more stable which extends its disinfectant benefits throughout a water utility's distribution system (a system of pipes that delivers water to homes).**\n\n","5e12fdd6":"**Very strange results. I think there is an error in the data.**","cbe26804":"**PH shows how strongly acid or alkaline a substance is, in a range from 0 to 14:**\n* 0-6 - acidic\n* 7 - neutral\n* 8-14 - alkaline.","c5b4128a":"**Else I want to know what is the relationship between features. Since we have outliers, we will use a nonparametric method - the Spearman correlation.**","3c931b47":"**[Criteria](https:\/\/www.globalspec.com\/learnmore\/sensors_transducers_detectors\/gas_sensing\/total_organic_carbon_analyzers):**\n\n![image.png](attachment:03a00ef9-ecf1-429e-a592-ad3c485e079b.png)","a6aab16a":"**I don't see a strong difference between the two groups of observations.**","c2f94d78":"# PH","6ead523e":"**Chloramine levels up to 4 milligrams per liter (mg\/L or 4 parts per million (ppm)) are considered safe in drinking water. At this level, harmful health effects are unlikely to occur. In drinking water more observations are in the safe range.**","14349010":"**Total dissolved solids (TDS) is the term used to describe the inorganic salts and small amounts of organic matter present in solution in water. The principal constituents are usually calcium, magnesium, sodium, and potassium cations and carbonate, hydrogencarbonate, chloride, sulfate, and nitrate anions.**\n\n**Criteria that are presented in the [SDWF](https:\/\/www.safewater.org\/fact-sheets-1\/2017\/1\/23\/tds-and-ph):**\n\n![image.png](attachment:4e6377e0-3555-4f15-9d3c-d72b35ac2f33.png)\n\n**If you have questions about why I'm used criteria milligrams per litre (mpl), when df has data part per million (ppm), you can visit this [url](http:\/\/www.endmemo.com\/sconvert\/mg_lppm.php).**","6a739b3f":"**Change nan to mean values for not potability and potability**","e50a1890":"**And so, we can see that only a small part of the observations in potable and not potable water is outside the norm**","280a9aff":"**Turbidity is the amount of cloudiness in the water. This can vary from a river full of mud and silt where it would be impossible to see through the water (high turbidity), to a spring water which appears to be completely clear (low turbidity).Turbidity can be caused by:** \n* silt, sand and mud\n* bacteria and other germs \n* chemical precipitates\n\n**Drinking water should have a turbidity of 5 NTU\/JTU or less.**\n\n[(c) WHO](https:\/\/www.who.int\/water_sanitation_health\/hygiene\/emergencies\/fs2_33.pdf)","108c2adc":"**After the analysis I can say that I do not understand what the classification of potable and not potable water was based on. According to the criteria, if not all, then almost all observations should be Not potable.**","2cc8ba18":"**Normal values ph in water: 6.5 - 8.5.**\n\n**Charts show that values ph in not potable water more out normal range than in potable water.**","aaa6e74a":"**Trihalomethanes (THMs) are halogen-substituted single-carbon compounds with the general formula CHX3, where X represents a halogen, which may be fluorine, chlorine, bromine, or iodine, or combinations thereof.**\n\n**THMs are formed in drinking-water primarily as a result of chlorination of organic matter present in raw water supplies. The rate and degree of THM formation increase as a function of the chlorine and humic acid concentration, temperature, pH, and bromide ion concentration**\n\n**Dataset's author wrote \"THM levels up to 80 ppm is considered safe in drinking water\". I will use this criteria, because I didn't find any.**","b37040bf":"**Also I don't see a strong difference between the two groups of observations.**","ab740e5f":"# Conductivity","67ba0013":"**Sulfates are naturally occurring substances that are found in minerals, soil, and rocks.**\n\n**The United States Environmental Protection Agency (U.S. EPA) has proposed a maximum allowable con-centration of 500 mg\/L for sulfate in drinking water in order to avoidany health concern regarding human consumption.**"}}