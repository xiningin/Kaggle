{"cell_type":{"2e60fd53":"code","11f591f2":"code","a130ac9a":"code","0fc318c3":"code","9088f2c5":"code","b4b80f6e":"code","b5d9eccf":"code","ef39bb2d":"code","15d8f69a":"markdown","605a7d80":"markdown"},"source":{"2e60fd53":"import pandas as pd\nimport numpy as np\nimport datatable as dt\nimport gc\n\nIGNORE_COLS = ['row_id', 'f_30', 'f_63', 'f_74', 'f_84', 'f_120', 'f_124', 'f_170', 'f_291', 'f_0', \n               'f_1', 'f_4', 'f_6', 'f_7', 'f_10', 'f_11', 'f_12', 'f_13', 'f_14', 'f_18', 'f_19', \n               'f_20', 'f_22', 'f_24', 'f_27', 'f_28', 'f_30', 'f_32', 'f_34', 'f_35', 'f_37', 'f_39', \n               'f_40', 'f_46', 'f_48', 'f_49', 'f_50', 'f_51', 'f_53', 'f_56', 'f_57', 'f_60', 'f_61', \n               'f_62', 'f_63', 'f_66', 'f_67', 'f_70', 'f_73', 'f_74', 'f_75', 'f_81', 'f_84', 'f_86', \n               'f_89', 'f_95', 'f_97', 'f_99', 'f_101', 'f_102', 'f_107', 'f_108', 'f_110', 'f_111', \n               'f_115', 'f_117', 'f_120', 'f_122', 'f_123', 'f_124', 'f_126', 'f_127', 'f_128', 'f_129', \n               'f_130', 'f_131', 'f_138', 'f_140', 'f_141', 'f_142', 'f_143', 'f_148', 'f_149', 'f_151', \n               'f_152', 'f_154', 'f_156', 'f_157', 'f_159', 'f_161', 'f_164', 'f_166', 'f_170', 'f_171', \n               'f_175', 'f_176', 'f_178', 'f_180', 'f_182', 'f_183', 'f_186', 'f_189', 'f_191', 'f_195', \n               'f_196', 'f_198', 'f_199', 'f_200', 'f_201', 'f_202', 'f_204', 'f_205', 'f_208', 'f_211', \n               'f_213', 'f_215', 'f_217', 'f_218', 'f_220', 'f_221', 'f_222', 'f_223', 'f_227', 'f_228', \n               'f_229', 'f_235', 'f_236', 'f_240', 'f_241', 'f_242', 'f_244', 'f_248', 'f_253', 'f_254', \n               'f_258', 'f_261', 'f_262', 'f_267', 'f_269', 'f_272', 'f_275', 'f_276', 'f_278', 'f_279', \n               'f_282', 'f_283', 'f_284', 'f_285', 'f_288', 'f_289', 'f_291', 'f_292', 'f_293', 'f_294', \n               'f_296', 'f_298', 'f_299', 'f_262']\n\nbasic_cols = ['time_id', 'investment_id', 'target']\nnum_feat = 300\nfeatures = [f'f_{i}' for i in range(num_feat)]\ncols = basic_cols + features\ncols = basic_cols + features\nselected_cols = []\nfor c in cols:\n    if c in IGNORE_COLS:\n        continue\n    selected_cols.append(c)\n\n#train = pd.read_csv('..\/input\/ubiquant-market-prediction\/train.csv', skiprows=lines2skip)\ntrain = dt.fread('..\/input\/ubiquant-market-prediction\/train.csv').to_pandas()\ntrain = train[selected_cols]\ntest = pd.read_csv('..\/input\/ubiquant-market-prediction\/example_test.csv')\nsub = pd.read_csv('..\/input\/ubiquant-market-prediction\/example_sample_submission.csv')","11f591f2":"train.dtypes","a130ac9a":"train.head()","0fc318c3":"sub.head()","9088f2c5":"from sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nimport lightgbm\nfrom sklearn.ensemble import VotingRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold\n\nimport optuna\n\nX = train.drop(['target'], axis=1)\ny = train[['target']]\ndel train\ngc.collect();\n\nr1 = LinearRegression()\nr2 = Ridge()\nr3 = lightgbm.LGBMRegressor(n_estimators=500,\n                            max_depth=11,\n                            learning_rate=0.05,\n                            subsample=0.9,\n                            colsample_bytree=0.7,\n                            random_state=2022)\ner = VotingRegressor([('lr', r1), ('ridge', r2), ('lgbm', r3)])\ner.fit(X, y)","b4b80f6e":"gc.collect();\ntry:\n    selected_cols.remove('target')\nexcept:\n    pass\npreds = er.predict(test[selected_cols])\npreds","b5d9eccf":"import ubiquant\nenv = ubiquant.make_env()\niter_test = env.iter_test()","ef39bb2d":"for (test_df, sample_prediction_df) in iter_test:\n    row_id = test_df['row_id'].str.split('_', expand=True)\n    test_df['time_id'] = row_id[0]\n    test_df['time_id'] = test_df['time_id'].astype(np.int32)\n    preds = er.predict(test_df[selected_cols])\n    sample_prediction_df['target'] = preds  # make your predictions here\n    env.predict(sample_prediction_df)   # register your predictions","15d8f69a":"# Modeling","605a7d80":"# Introduction\nHey, thanks for viewing my Kernel!\n\nIf you like my work, please, leave an upvote: it will be really appreciated and it will motivate me in offering more content to the Kaggle community ! \ud83d\ude0a\n\nIGNORE_COLS found in this [notebook](https:\/\/www.kaggle.com\/hasanbasriakcay\/ubiquan-market-prediction-eda-ignore-cols)\n\nRegression models found in this [notebook](https:\/\/www.kaggle.com\/hasanbasriakcay\/ubiquan-market-preds-pycaret-model-comparisons)."}}