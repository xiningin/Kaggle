{"cell_type":{"e28280e0":"code","9bca0a9e":"code","c315704b":"code","370f1f01":"code","3d171550":"code","240ac966":"code","967d256f":"code","553a3162":"code","ef47b206":"code","999789ed":"code","e0e42400":"code","1736b35a":"code","97bcec85":"code","b32bce70":"code","215c0e24":"code","e8caf025":"code","f4b6a322":"code","e24bfb56":"code","3c8de2ec":"code","4b0ad83f":"code","6e4bc34f":"markdown","15ea4099":"markdown","df990b75":"markdown","33536c15":"markdown","50610141":"markdown","23918d36":"markdown","3a2472e8":"markdown"},"source":{"e28280e0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom colorama import Fore\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9bca0a9e":"# Importing Data:\n\ndf=pd.read_csv('..\/input\/tesla-stock-data-from-2010\/TSLA.csv',parse_dates=['Date'],index_col='Date')\ndf.head(10)","c315704b":"df.tail(10)","370f1f01":"df.shape","3d171550":"df.info()","240ac966":"df.describe()","967d256f":"df.isnull().sum()","553a3162":"df[df.duplicated()].shape","ef47b206":"df.columns","999789ed":"# Rename columns:\ndf.rename(columns={'Date':'date','Open':'open_price', 'High':'high_price', 'Low':'low_price',\n                   'Close':'close_price', 'Adj Close':'adj_closePrice', 'Volume':'volume'},inplace=True)\ndf.columns","e0e42400":"# Comparing Closed and adj_closePrice columns to identify both are identical or not.\ndf['close_price'].equals(df['adj_closePrice'])","1736b35a":"# Droping adj_closePrice column from dataset.\ndf.drop(columns='adj_closePrice',axis=1, inplace=True)\ndf","97bcec85":"# Calculating the average value of each columns:\n\nvaribles = ['open_price', 'high_price', 'low_price', 'close_price',\n       'adj_closePrice', 'volume']\nprint('Average values of Each column')\nfor varibles in df:\n    avg =df[varibles].mean()\n    print('\\033[1m'+\"\\nThe Average of the %s is:\"%varibles+Fore.BLUE+ f\"{avg}\" +'\\033[0m')","b32bce70":"# Checking average value of each column for every year present in the dataset:\ndf.groupby(pd.Grouper(freq='Y')).mean()","215c0e24":"# Checking is there is any correlation in columns:\nplt.figure(figsize=(10,8))\ndataplot = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True)\nplt.show()","e8caf025":"# Check does Open and close price affect the volume:\npx.line(df,y=df['volume'],hover_data=df[['open_price','close_price']],title='Volume with Open and Close Price')","f4b6a322":"# Ploting Moving average plot for each column:\nmove_avg_open = df['open_price'].rolling(180).mean()\nmove_avg_close = df['close_price'].rolling(180).mean()\nmove_avg_high = df['high_price'].rolling(180).mean()\nmove_avg_low = df['low_price'].rolling(180).mean()\n","e24bfb56":"mv1 = px.line(df,y=move_avg_open,title='Moving average for Open price')\n\nmv2 = px.line(df,y=move_avg_close,title='Moving average for Close price')\n\nmv3 = px.line(df,y=move_avg_high,title='Moving average for High price')\n\nmv4 = px.line(df,y=move_avg_low,title='Moving average for Low price')\n\nmv1.show()\nmv2.show()\nmv3.show()\nmv4.show()","3c8de2ec":"# Checking average daily income,\nfrom colorama import Fore\nimport statistics\nvol_into_Oprice = (df['close_price'] \/ df['close_price'].shift(1))-1\n\nline1 =px.line(df,x=df.index,y=vol_into_Oprice,\n             title='Stock Returns in Percent',range_y=(-1,1)\n    \n)\nline1.show()\nprint('Average Daily Returns from 2010 to 2021:'+Fore.RED+'\\033[1m'+ f\" {vol_into_Oprice.mean()}\"+'\\033[0m'+' %')\nprint('Varince Daily Returns from 2010 to 2021:'+Fore.RED+'\\033[1m'+ f\" {np.var( vol_into_Oprice)}\"+'\\033[0m')\nprint('Standard deviation Daily Returns from 2010 to 2021:'+Fore.RED+'\\033[1m'+ f\" {np.std( vol_into_Oprice)}\"+'\\033[0m')","4b0ad83f":"# Area chart Low anf High price of the stocks.\n\nc_area = px.area(df['high_price'], title = 'TESLA SHARE HIGH PRICE (2010-2020)')\n\nc_area.update_xaxes(\n    title_text = 'date',\n    rangeslider_visible = True,\n    rangeselector = dict(\n        buttons = list([\n            dict(count = 7, label = 'Week', step = 'day', stepmode = 'backward'),\n            dict(count = 1, label = 'Month', step = 'month', stepmode = 'backward'),\n            dict(count = 3, label = 'Quter', step = 'month', stepmode = 'backward'),\n            dict(count = 6, label = 'Half', step = 'month', stepmode = 'backward'),\n            dict(count = 1, label = 'YTD', step = 'year', stepmode = 'todate'),\n            dict(count = 1, label = '1Y', step = 'year', stepmode = 'backward'),\n            dict(step = 'all')])))\n\nc_area.update_yaxes(title_text = 'TESLA High Price', tickprefix = '$')\nc_area.update_layout(showlegend = False,\n    title = {\n        'text': 'TESLA SHARE HIGH PRICE (2010-2021)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nc_area.update_layout(\n    margin=dict(l=40, r=40, t=40, b=40)\n    \n)\n\n\nc_area2 = px.area(df['low_price'], title = 'TESLA SHARE LOW PRICE (2010-2020)')\n\nc_area2.update_xaxes(\n    title_text = 'date',\n    rangeslider_visible = True,\n    rangeselector = dict(\n        buttons = list([\n            dict(count = 7, label = 'Week', step = 'day', stepmode = 'backward'),\n            dict(count = 1, label = 'Month', step = 'month', stepmode = 'backward'),\n            dict(count = 3, label = 'Quter', step = 'month', stepmode = 'backward'),\n            dict(count = 6, label = 'Half', step = 'month', stepmode = 'backward'),\n            dict(count = 1, label = 'YTD', step = 'year', stepmode = 'todate'),\n            dict(count = 1, label = '1Y', step = 'year', stepmode = 'backward'),\n            dict(step = 'all')])))\n\nc_area2.update_yaxes(title_text = 'TESLA Low Price', tickprefix = '$')\nc_area2.update_layout(showlegend = False,\n    title = {\n        'text': 'TESLA SHARE LOW PRICE (2010-2021)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nc_area2.update_layout(\n    margin=dict(l=40, r=40, t=40, b=40)\n    \n)\n\nc_area.show()\nc_area2.show()\n\n\n# Candlestick chart stock price\n\nc_candlestick = go.Figure(data = [go.Candlestick(x = df.index, \n                                               open = df[('open_price' )], \n                                               high = df[('high_price')], \n                                               low = df[('low_price')], \n                                               close = df[('close_price')])])\n\nc_candlestick.update_xaxes(\n    title_text = 'Date',\n    rangeslider_visible = True,\n    rangeselector = dict(\n        buttons = list([\n             dict(count = 7, label = 'Week', step = 'day', stepmode = 'backward'),\n            dict(count = 1, label = 'Month', step = 'month', stepmode = 'backward'),\n            dict(count = 3, label = 'Quter', step = 'month', stepmode = 'backward'),\n            dict(count = 6, label = 'Half', step = 'month', stepmode = 'backward'),\n            dict(count = 1, label = 'YTD', step = 'year', stepmode = 'todate'),\n            dict(count = 1, label = '1Y', step = 'year', stepmode = 'backward'),\n            dict(step = 'all')])))\n\nc_candlestick.update_layout(\n    \n    title = {\n        'text': 'TESLA SHARE PRICE (2010-2021)',\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n    \n    shapes = [dict(\n        x0='2020-03-31', x1='2020-03-31', y0=0, y1=1, xref='x', yref='paper',\n        line_width=2)],\n    annotations=[dict(\n        x='2020-03-31', y=0.05, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='Increase Period Begins')]\n\n)\nc_candlestick.update_yaxes(title_text = 'Tesla Close Price', tickprefix = '$')\nc_candlestick.show()","6e4bc34f":"## Statestical Analysis\n* daily Average Returns: 0.002416157240890297 %\n* Volatility : 0.0012477074059654442\n* Risk: 0.03532290200373469","15ea4099":"###### A percentage increase in stock value is the change in stock comparing that to the previous day. The bigger the value either positive or negative the volatile the stock is.\n\n\n\n\n\n","df990b75":"*  From above graph we can state that initially company stocks price was increasing steadily but after end of the 1st quater. profit start increasing exponentially.\n\n* The reason behinde it is self-driving technology, and manufacturing expansion plans.\n* Tesla published a document on April 2 stating that it had produced almost 103,000 vehicles and delivered roughly 88,400 vehicles in the first quarter record performance on both fronts for the period.\nThe stock climbed in conjunction with momentum for the broader market early in the month, and it saw more pronounced positive\nmovement after Jefferies analyst Philippe Houchois upgraded his rating on the stock from \"hold\" to \"buy\" in a note published on April 6.\n","33536c15":"* According to Average daily returns, Variance and standard Deviation we can tell that.\n\n* Variance :- Variance is a measure of volatility because it measures how much a stock tends to deviate from its mean. The higher the variance, the more wildly the stock fluctuates. Accordingly, the higher the variance, the riskier the stock.\n\n* Standard deviation helps determine market volatility or the spread of asset prices from their average price. When prices move wildly, standard deviation is high, meaning an investment will be risky. Low standard deviation means prices are calm, so investments come with low risk.","50610141":"###### Moving Averages\n* As we know the stock prices are highly volatile and prices change quickly with time. To observe any trend or pattern we can take the help of a 50-day 200-day average","23918d36":"* Both columns are exactly identical so we will drop one of them column","3a2472e8":"# Conclusion"}}