{"cell_type":{"d3e17eb9":"code","7606f45b":"code","33076f90":"code","97da713e":"code","bc8d0ee7":"code","36908732":"markdown"},"source":{"d3e17eb9":"!pip install python-vivid","7606f45b":"from sklearn.datasets import make_classification\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom vivid.utils import timer, get_logger\n\nlogger = get_logger(__name__)\n\ndef calc_score(y_true, y_pred):\n    none_prob_functions = [\n        accuracy_score,\n        f1_score,\n        precision_score,\n        recall_score\n    ]\n\n    retval = {}\n    for func in none_prob_functions:\n        retval[func.__name__] = func(y_true, y_pred)\n\n    return retval","33076f90":"X, y = make_classification(n_samples=int(2e5), n_features=10,)\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=.5, shuffle=True)\n\nlogger.info('#train: {} - #features: {}'.format(*X_train.shape))","97da713e":"logger.info('#train: {} - #features: {}'.format(*X_train.shape))\n\n# train simple svc\nwith timer(logger, prefix='fit simple svc '):\n    svc = SVC()\n    svc.fit(X_train, y_train)\ny_pred = svc.predict(X_test)\nscore = calc_score(y_test, y_pred)\nlogger.info(score)","bc8d0ee7":"with timer(logger, prefix='fit bagging '):\n    clf = BaggingClassifier(SVC(), n_estimators=10, max_samples=.1, n_jobs=1)\n    clf.fit(X_train, y_train)\n\ny_pred = clf.predict(X_test)\nscore = calc_score(y_test, y_pred)\nlogger.info(score)\n\nwith timer(logger, prefix='fit bagging (parallel) '):\n    clf = BaggingClassifier(SVC(), n_estimators=10, max_samples=.1, n_jobs=-1)\n    clf.fit(X_train, y_train)\n\ny_pred = clf.predict(X_test)\nscore = calc_score(y_test, y_pred)\nlogger.info(score)\n\nwith timer(logger, prefix='fit bagging (n_samples x2) '):\n    clf = BaggingClassifier(SVC(), n_estimators=10, max_samples=.2, n_jobs=-1)\n    clf.fit(X_train, y_train)\n\ny_pred = clf.predict(X_test)\nscore = calc_score(y_test, y_pred)\nlogger.info(score)\n","36908732":"# Speed up scikit learn SVC using bagging"}}