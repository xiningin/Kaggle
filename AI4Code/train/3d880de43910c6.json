{"cell_type":{"02794a3b":"code","6c6e531e":"code","1555b6dd":"code","a7ec9034":"code","9fd06015":"code","37086d62":"code","1141454b":"code","80ac6277":"code","ae0ea007":"code","999f7138":"code","0f417d9d":"code","96c82a87":"code","0004d07a":"code","403e9f8f":"code","287eb74c":"code","9f98ad52":"code","7ba38632":"code","868a325e":"code","b457a832":"code","17cbc853":"code","f59ec251":"code","4b9fb2a0":"code","acd7044a":"code","225d52b6":"code","be531cb8":"code","5f7ea246":"code","ec29e76b":"code","93f8b9fa":"code","d218eb94":"code","fa152e04":"code","1548c9e5":"code","8abae4cb":"code","df057065":"code","4e82ff70":"code","06250f8a":"code","188405b7":"code","477c7024":"code","7e72e2a9":"code","7dfad880":"code","5e380d78":"markdown"},"source":{"02794a3b":"# Import\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6c6e531e":"# Wczytanie danych treningowych oraz testowych\ndf_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ndf_train.info()","1555b6dd":"#Ilo\u015b\u0107 brakuj\u0105cych danych\ndf_train.isnull().sum()","a7ec9034":"# Wizualizacja brakuj\u0105cych danych\nsns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","9fd06015":"# Wizualizacja stosunku ocala\u0142ych og\u00f3\u0142em \nsns.set_style('whitegrid')\nsns.countplot(x='Survived',data=df_train,palette='viridis') ","37086d62":"## Wizualizacja stosunku ocala\u0142ych wzgl\u0119dem p\u0142ci\nsns.countplot(x='Survived',hue='Sex',data=df_train,palette='viridis')","1141454b":"# Wizualizacja stosunku ocala\u0142ych wzgl\u0119dem klasy\nsns.countplot(x='Survived',hue='Pclass',data=df_train)","80ac6277":"# Ilo\u015b\u0107 pasa\u017cer\u00f3w w pr\u00f3bie\ndf_train['Pclass'].value_counts()","ae0ea007":"sns.countplot(x='Pclass',data=df_train)","999f7138":"# Wykres pude\u0142kowy dla wieku wzgl\u0119dem klasy\nplt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=df_train,palette='winter')","0f417d9d":"# Wype\u0142nienie brakuj\u0105cych danych wieku \u015brednimi\ndef impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass ==1:\n            return 37\n        elif Pclass ==2:\n              return 29\n        else:\n              return 24\n              \n    else:\n        return Age\n    \n    \ndef impute_age_test(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass ==1:\n            return 42\n        elif Pclass ==2:\n              return 27\n        else:\n              return 24\n              \n    else:\n        return Age","96c82a87":"df_train['Age'] = df_train[['Age','Pclass']].apply(impute_age,axis=1)\ndf_test['Age']=df_test[['Age','Pclass']].apply(impute_age_test, axis=1)","0004d07a":"# Ponowny heatmap sprawdzaj\u0105cy poprawno\u015b\u0107 oczyszczenia danych treningowych\nsns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","403e9f8f":"# Heatmap sprawdzaj\u0105cy poprawno\u015b\u0107 oczyszczenia danych testowych\nplt.figure(figsize=(10,10))\nsns.heatmap(df_test.isnull(), cmap=None, yticklabels=False, cbar = False)","287eb74c":"# Usuniecie niepotrzebnych kolumn\ndf_train.drop(['Name','Age','Ticket','Fare','Cabin'],inplace=True,axis=1)\ndf_test.drop(['Name','Age','Ticket','Fare','Cabin'],inplace=True,axis=1)","9f98ad52":"# Ponowne sprawdzenie poprawno\u015bci oczyszczenia danych treningowych\nsns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7ba38632":"# Ponowne sprawdzenie poprawno\u015bci oczyszczenia danych testowych\nsns.heatmap(df_test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","868a325e":"# Podgl\u0105d danych treningowych\ndf_train.head()","b457a832":"# Przekonwertowanie cechy kategorialnej 'Sex' na zmienne fikcyjne\nsex_train = pd.get_dummies(df_train['Sex'],drop_first=True)\nsex_test = pd.get_dummies(df_test['Sex'],drop_first=True)","17cbc853":"# Przekonwertowanie cechy kategorialnej 'Embarked' na zmienne fikcyjne\nembark_train=pd.get_dummies(df_train['Embarked'], drop_first=True) \nembark_test=pd.get_dummies(df_test['Embarked'], drop_first=True)","f59ec251":"# Konkatenacja, aby wprowadzi\u0107 przekonwertowane zmienne\ndf_train = pd.concat([df_train,sex_train, embark_train],axis=1)\ndf_test = pd.concat([df_test,sex_test, embark_test],axis=1)","4b9fb2a0":"# Podgl\u0105d danych treningowych\ndf_train.head()","acd7044a":"# Konwersja danych p\u0142e\u0107\nsex_mapping = {\"male\": 0, \"female\": 1}\ndf_train['Sex'] = df_train['Sex'].map(sex_mapping)\ndf_test['Sex'] = df_test['Sex'].map(sex_mapping)","225d52b6":"# uzupe\u0142nienie danych\ndf_train['Embarked']=df_train['Embarked'].fillna('S')","be531cb8":"embarked_mapping = {\"S\": 1, \"C\": 2, \"Q\": 3}\ndf_train['Embarked'] = df_train['Embarked'].map(embarked_mapping)\ndf_test['Embarked'] = df_test['Embarked'].map(embarked_mapping)","5f7ea246":"df_train.drop(['Sex'],axis=1,inplace=True)","ec29e76b":"df_train.head()","93f8b9fa":"# Wsp\u00f3\u0142czynnik ocala\u0142ych wzgl\u0119dem klasy\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n","d218eb94":"# Usuni\u0119cie kolumn nadmiarowych\nX=df_train.drop(['PassengerId', 'Survived'],axis=1)\ny=df_train['Survived'] \n","fa152e04":"from sklearn.linear_model import LogisticRegression \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","1548c9e5":"# Podzia\u0142 danych\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.47, random_state=101)","8abae4cb":"df_test.info()","df057065":"# Tworzenie instancji oraz dopasowanie modelu do danych treningowych\nlrmodel = LogisticRegression()\nlrmodel.fit(X_train,y_train) ","4e82ff70":"# Predykcja\npredict=lrmodel.predict(X_test)","06250f8a":"# Wynik\nacc_logreg = round(accuracy_score(predict, y_test)*100, 2)\nacc_logreg","188405b7":"print (classification_report(y_test,predict))","477c7024":"confusion_matrix(y_test,predict)","7e72e2a9":"df_test.info()","7dfad880":"logreg = df_test['PassengerId']\npredict = lrmodel.predict(df_test.drop(['PassengerId', 'S'], axis=1))\n\n\n\n\n#Export danych\noutput = pd.DataFrame({ 'PassengerId' : logreg, 'Survived': predict })\noutput.to_csv('submission.csv', index=False)\nprint(\"your submission was succesfull\")","5e380d78":"\u015aredni wiek wed\u0142ug klas  to:\n\nI klasa = \u015bredni wiek 37 lat.\nII klasa = \u015bredni wiek 29 lat.\nIII klasa = \u015bredni wiek 24 lata."}}