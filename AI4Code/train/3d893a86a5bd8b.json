{"cell_type":{"9739fbc1":"code","c1acbcda":"code","f8f0dd3a":"code","74fcef31":"code","dcd411f8":"code","20f86bab":"code","500736ff":"code","6d42c11a":"code","97e5aeaa":"code","3efc2692":"code","27c0a1bc":"code","e42d8df3":"code","35cd103e":"code","2ea65752":"code","648bac57":"code","7012f360":"code","23a473fa":"code","d4da5226":"code","21976a2c":"code","be2191d0":"code","b978b821":"code","19332044":"code","b9e79d82":"code","5942fbf3":"code","f75d7f54":"code","38b1032a":"code","3399cd11":"markdown","eb548fe3":"markdown","b89737ba":"markdown","fa872c38":"markdown","f72258da":"markdown","d97b006a":"markdown","079b2d9d":"markdown","fd956e5e":"markdown","8450f5ca":"markdown","914466c0":"markdown","6b467dc3":"markdown","e6d02f70":"markdown","b34b2d0d":"markdown","5f1c592a":"markdown","35bb5339":"markdown","6fc4b6b0":"markdown","142bb3a2":"markdown"},"source":{"9739fbc1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport matplotlib.style as style\nfrom datetime import timedelta\nimport datetime as dt\nimport time\nimport os","c1acbcda":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f8f0dd3a":"customer = pd.read_csv(\"\/kaggle\/input\/retail-case-study-data\/Customer.csv\")\nprod_cat= pd.read_csv(\"\/kaggle\/input\/retail-case-study-data\/prod_cat_info.csv\")\ntransactions = pd.read_csv(\"\/kaggle\/input\/retail-case-study-data\/Transactions.csv\")","74fcef31":"customer.isnull().sum()\n\"\"\"Both Gender and city_code columns have null values\"\"\"\n\n#To fix this, I applied ffill (fill forward) to the null cells\ncustomers = customer.fillna({\n    'Gender': customer['Gender'].ffill(),\n    'city_code': customer['city_code'].ffill()\n})\n\n#Splitting transaction date into year, month and day of week","dcd411f8":"transactions['tran_date'] = pd.to_datetime(transactions['tran_date'], errors='coerce')","20f86bab":"transactions.insert(loc=3, column='year', value= transactions.tran_date.dt.year)\ntransactions.insert(loc=4, column='month', value= transactions.tran_date.dt.month)\ntransactions.insert(loc=5, column='day', value=(transactions.tran_date.dt.weekday_name))\n\ntransactions.head()","500736ff":"###### Transactions and Product Category datasets have no null cells.\n\ndf = pd.merge(left = customers, right = transactions, left_on = 'customer_Id', right_on = 'cust_id').drop('cust_id', axis =1)\n#This joins the customers and transactions dataset on customer_Id and cust_id. The duplicate column (cust_id)\n#is dropped.\ndf.duplicated().sum()\n#There are 13 duplicate cells in the df dataframe. Next step: drop duplicates.\n\ndf.drop_duplicates(inplace = True)\ndf_new = pd.merge(df, prod_cat, left_on = ('prod_subcat_code', \"prod_cat_code\"), right_on = ('prod_sub_cat_code', \"prod_cat_code\")).drop('prod_sub_cat_code', axis =1)\ndf_new.shape\n#Columns from the prod_cat dataset have been added to the df dataframe\n\ndf_new.describe()\n#showing basic statistical details\n\n\ncustomer_city=df_new[['city_code','customer_Id']]\ncustomer_city.groupby(['city_code'])['customer_Id'].aggregate('count').reset_index().sort_values('customer_Id', ascending=False)\n","6d42c11a":"rdf = df_new[df_new['Qty'] <= -1]\nsdf = df_new[df_new['Qty'] >= 0]\n\"\"\"To analyze negative and positive order values seperately, 2 new datasets were created.\"\"\"","97e5aeaa":"\n\"\"\"The e-shop accounted for the most returns in the returned orders dataset.\"\"\"\norders = rdf.groupby(by=['Store_type'], as_index = False)['Qty'].count()\nplt.figure(figsize=(6,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"Store_type\", y = 'Qty', data = orders,  palette= \"magma\")\nplt.xlabel('Store Category')\nplt.ylabel('Returned Orders')\nplt.title('Total number of returned orders per store category')\nplt.show()","3efc2692":"\"\"\"Books, Electronics and Home & Kitchen were the most returned product categories.\"\"\"\ncategory = rdf.groupby(by=['prod_cat'], as_index = False)['Qty'].count()\nplt.figure(figsize=(8,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"prod_cat\", y = 'Qty', data = category,  palette= \"inferno\")\nplt.xlabel('Product Category')\nplt.ylabel('Returned Orders')\nplt.title('Total number of returned orders per product category')\nplt.show()\n","27c0a1bc":"\"\"\"Returns across cities were quite similar, with the highest recorded for City Code 8.\"\"\"\ncity = rdf.groupby(by= ['city_code'], as_index = False)['Qty'].count()\nplt.figure(figsize=(8,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"city_code\", y = 'Qty', data = city,  palette= \"viridis\")\nplt.xlabel('City Code')\nplt.ylabel('Returned Orders')\nplt.title('Total number of returned orders per city')\nplt.show()\n","e42d8df3":"\"\"\"The highest product returns were recorded in 2012.\"\"\"\norder_year = rdf.groupby(by=['year'], as_index = False)['Qty'].count()\nplt.figure(figsize=(6,5))\nsns.barplot(x = \"year\", y = 'Qty', data = order_year,  palette= \"plasma\")\nplt.xlabel('Year')\nplt.ylabel('Returned Orders')\nplt.title('Returned Orders Per Year')\nplt.show()\n\n\"\"\"Chart below shows revenue loss.\"\"\"\nsales = rdf.groupby(by=['year'], as_index = False)['total_amt'].sum()\nplt.figure(figsize=(6,5))\nsns.barplot(x = \"year\", y = 'total_amt', data = sales,  palette = 'plasma')\nplt.xlabel('Year')\nplt.ylabel('Returned Orders')\nplt.title('Revenue Lost Due To Returns')\nplt.show()\n","35cd103e":"\"\"\"The most purchases were made through the e-shop.\"\"\"\norders1 = sdf.groupby(by=['Store_type'], as_index = False)['Qty'].count()\nplt.figure(figsize=(6,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"Store_type\", y = 'Qty', data = orders1,  palette= \"inferno\")\nplt.xlabel('Store Category')\nplt.ylabel('Total Orders')\nplt.title('Total successful orders per store category')\nplt.show()","2ea65752":"\"\"\"Books, Electronics and Home & Kitchen were the most purchased product categories.\"\"\"\ncategory1 = sdf.groupby(by=['prod_cat'], as_index = False)['Qty'].count()\nplt.figure(figsize=(8,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"prod_cat\", y = 'Qty', data = category1,  palette= \"plasma\")\nplt.xlabel('Product Category')\nplt.ylabel('Total Orders')\nplt.title('Total successful orders per product category')\nplt.show()","648bac57":"location1 = sdf.groupby(by= ['city_code'], as_index = False)['Qty'].count()\nplt.figure(figsize=(8,4))\nsns.set_style('whitegrid')\nsns.barplot(x = \"city_code\", y = 'Qty', data = location1,  palette= \"viridis\")\nplt.xlabel('City Code')\nplt.ylabel('Successful Orders')\nplt.title('Orders placed per location')\nplt.show()","7012f360":"\"\"\"Highest sales occured in the years 2012 and 2013.\"\"\"\norder_year1 = sdf.groupby(by=['year'], as_index = False)['Qty'].count()\nplt.figure(figsize=(6,5))\nsns.barplot(x = \"year\", y = 'Qty', data = order_year1,  palette= \"plasma\")\nplt.xlabel('Year')\nplt.ylabel('Total Orders')\nplt.title('Order Quantity Per Year')\nplt.show()\n\n\"\"\"The most successful sales occured in 2012 and 2013\"\"\"\nsales1 = sdf.groupby(by=['year'], as_index = False)['total_amt'].sum()\nplt.figure(figsize=(6,5))\nsns.barplot(x = \"year\", y = 'total_amt', data = sales1,  palette= \"plasma\")\nplt.xlabel('Year')\nplt.ylabel('Total Orders')\nplt.title('Revenue Generated')\nplt.show()","23a473fa":"\"\"\"Products in the Women, Mens and Kids categories sold better than other categories.\"\"\"\nsubcategory = sdf.groupby(by=['prod_subcat'], as_index = False)['total_amt'].sum()\nplt.figure(figsize=(8,6))\nsns.set_style('whitegrid')\nsns.barplot(x = \"total_amt\", y = 'prod_subcat', data = subcategory, palette= \"inferno\")\nplt.xlabel('Amount Spent')\nplt.ylabel('Product Subcategories')\nplt.title('Amount Spent Per Subcategories')\nplt.show()","d4da5226":"\"\"\"Purchases by men accounted for the highest percentage across all product categories except footwear and bags.\"\"\"\nplt.figure(figsize=(8,4))\nsns.set_style('whitegrid')\nsns.countplot(x = 'prod_cat', hue = \"Gender\", data = sdf, palette= \"inferno\")\nplt.xlabel('Amount Spent')\nplt.ylabel('Product Categories')\nplt.title('Purchase By Gender')\nplt.show()\n\n\"\"\"Pivot chart representation\"\"\"\nproduct_by_gender = sdf.groupby([\"Gender\",\"prod_cat\"])[[\"Qty\"]].sum().reset_index()\nproduct_by_gender.pivot(index=\"Gender\",columns=\"prod_cat\",values=\"Qty\")\n","21976a2c":"\"\"\"To analyze data based on customer age, a new age column is created.\"\"\"\nnow = pd.Timestamp('now')\nsdf['DOB'] = pd.to_datetime(sdf['DOB'], errors = 'coerce')    #1\nsdf['DOB'] = sdf['DOB'].where(sdf['DOB'] < now, sdf['DOB'] -  np.timedelta64(100, 'Y'))   # 2\nsdf['AGE'] = (now - sdf['DOB']).astype('<m8[Y]').round()\n\n#check for max and min age\nsdf['AGE'].max()\nsdf['AGE'].min()\n\n\"\"\"The cut() method is used to bin age values into discrete intervals.\"\"\"\nsdf['age_category'] = pd.cut(x = sdf['AGE'], bins = [24, 30, 39, 49], labels=['24-29','30-39','40-50'],include_lowest=True)","be2191d0":"sdf['age_category'].value_counts()","b978b821":"\"\"\"Customers aged betweeen 40-50 purchased the most products and 24-30 customers purchased the least\"\"\"\nplt.figure(figsize=(8,6))\nsns.countplot(x = 'prod_cat', hue = 'age_category', data = sdf, palette= \"inferno\")\n\n\"\"\"Pivot chart representation\"\"\"\nspend_per_category = sdf.groupby(['age_category','prod_cat'])['total_amt'].sum().reset_index()\nspend_per_category.pivot(index = \"age_category\", columns = \"prod_cat\", values = 'total_amt').round(0)","19332044":"\"\"\"Showing category sales by month.\"\"\"\nplt.figure(figsize=(12,6))\nsns.countplot(x = 'prod_cat', hue = 'month', data = sdf, palette= \"plasma\")\n\nsale_by_month = sdf.groupby(['month','prod_cat'])['Qty'].count().reset_index()\nsale_by_month.pivot(index = \"month\", columns = \"prod_cat\", values = 'Qty').round(0)\n\nsdf['month'].value_counts()","b9e79d82":"\"\"\"When it comes to finding out who your best customers are, the old RFM matrix principle is the best. RFM stands for Recency, Frequency and Monetary. It is a customer segmentation technique that uses past purchase behavior to divide customers into groups.\nRFM Score Calculations\nRECENCY (R): Days since last purchase\nFREQUENCY (F): Total number of purchases\nMONETARY VALUE (M): Total money this customer spent\"\"\"\n\ndf_new['tran_date'].min()\n\ndf_new['tran_date'].max()\n\nNOW = dt.datetime(2014,12,3)\n\nrfmTable = sdf.groupby('customer_Id').agg({'tran_date': lambda x: (NOW - x.max()).days, 'transaction_id': lambda x: len(x), 'total_amt': lambda x: x.sum()})\n\nrfmTable['tran_date'] = rfmTable['tran_date'].astype(int)\n\nrfmTable.rename(columns={'tran_date': 'recency', \n                         'transaction_id': 'frequency', \n                         'total_amt': 'monetary_value'}, inplace=True)\n\nrfmTable.head()","5942fbf3":"sort_by_monetary_value = rfmTable.sort_values('monetary_value',ascending=False)\n\n\"\"\"Customers with the highest purchases:\"\"\"\nprint(sort_by_monetary_value.head(n=10))","f75d7f54":"\"\"\"Getting rows for the most valuable customer.\"\"\"\nmost_valued_customer = sdf.loc[sdf['customer_Id'] == 271834]","38b1032a":"print(most_valued_customer)","3399cd11":"**2. Returned Orders Per Product Category**","eb548fe3":"**7. Purchase By Gender**","b89737ba":"**3. Total Successful Orders Per City**","fa872c38":"**7. Purchase By Age Category**","f72258da":"**5. Total Orders Per Year**","d97b006a":"**6. Revenue Per Category**","079b2d9d":"**4. Returned Orders By City**","fd956e5e":"#### Returned Orders Dataset","8450f5ca":"**RFM Score Calculation**","914466c0":"**7. Quantity Sold By Month**\n","6b467dc3":"**1. Total Orders Per Store Category**","e6d02f70":"**1. Returned Orders Per Store Category**","b34b2d0d":"**DATA PREPROCESSING**","5f1c592a":"**2. Total Orders Per Product Category**","35bb5339":"**5. Returned Orders By Year**","6fc4b6b0":"Results Obtained From The EDA (Exploratory Data Analysis)\nTransactions Period - January 2nd 2011 to December 2nd 2014.\n\n1. There was a sharp decline in sales from 2013 to 2014. It is nor clear why this occurred. Highest sales was recorded in the years 2012 and 2013.\n\n\n2. More men were recorded as customers than women.\n\n\n3. The city with the highest number of customers was city 4 -  the highest revenue was recorded in cities 4 and 3 and the lowest in city 6.\n\n\n4.  Purchases were largely made online, with the e-Shop also accounting for the most returns.\n\n\n5. Product categories: Books, Electronics and Home & Kitchen accounted for the most sold and most returned (difference between successful sales and returns is quite wide).\n\n\n6. Considering subcategories - Women, Mens and Kids products sold more than the rest.\n\n\n7. Customers aged between 40 - 50 accounted for the most sales.\n\n\n8. Across the period in review, the most sales were recorded in the month January.\n\n\n9. 8 out of 10 of the most valuable customers purchased items over 300 days before the last sale for the year 2014 was recorded.\n\n\n10. Customer with ID 271834 spent the most ($44,967), purchasing only 10 items. He is a 38 year old resident of city 9. His purchases spanned across 2011 and 2013.\n","142bb3a2":"**Successful Orders Dataset**"}}