{"cell_type":{"1e497d1f":"code","37f5518a":"code","fb5b4819":"code","e0c560a9":"code","c693e57f":"code","5c708d4f":"code","a48a2d28":"code","95fe2485":"code","4c78a760":"code","9abdbe3c":"code","21cecb52":"code","9253d63e":"code","13aad757":"code","10c84248":"code","bcdf86fc":"code","187a40ec":"code","d4b74132":"code","b5be9b7c":"code","15c42db5":"code","825345a0":"code","a1f2c4d1":"code","6790da82":"code","87fc3e99":"code","64c39f7e":"code","c67adde9":"code","5543b2e7":"code","91bbb544":"code","432048d6":"code","437728ad":"markdown","57f9ab9c":"markdown","da7af510":"markdown","e64967e5":"markdown"},"source":{"1e497d1f":"from statsmodels.graphics.tsaplots import plot_acf\nfrom statsmodels.tsa.arima_process import ArmaProcess\nfrom statsmodels.tsa.stattools import acf\nimport matplotlib.pyplot as plt\nimport numpy as np\nplt.rcParams['figure.figsize'] = [9,7]","37f5518a":"# Generating dataset of 1000 data points\nsteps = np.random.standard_normal(1000)\nsteps[0] = 0 # Starting point is zero\nrandom_walk = np.cumsum(steps) # Adding random noise to previous ones","fb5b4819":"plt.plot(random_walk)","e0c560a9":"# From the above graph we can say that series is not stationary.","c693e57f":"random_walk_acf = acf(random_walk)\nplot_acf(random_walk, lags = 25);","5c708d4f":"diff = np.diff(random_walk, n = 1)","a48a2d28":"plt.plot(diff)","95fe2485":"# It seems like we got the stationary series.","4c78a760":"diff_scf = plot_acf(diff, lags = 25)","9abdbe3c":"# lag of 2\nar2 = np.array([2])\n\n# Specifying weights\nma2 = np.array([1, 0.9, 0.3])","21cecb52":"# Generating data\nma_2 = ArmaProcess(ar2, ma2).generate_sample(nsample=1000)","9253d63e":"plt.plot(ma_2)","13aad757":"plot_acf(ma_2, lags = 20);","10c84248":"from statsmodels.graphics.tsaplots import plot_pacf\nfrom statsmodels.tsa.stattools import pacf\nfrom statsmodels.regression.linear_model import yule_walker","bcdf86fc":"# Generating data\nar2 = np.array([1, 0.33, 0.5])\nma = np.array([1]) # Will remove MA\nar2_data = ArmaProcess(ar2, ma).generate_sample(nsample = 1000)","187a40ec":"plt.plot(ar2_data)","d4b74132":"plot_acf(ar2_data);","b5be9b7c":"plot_pacf(ar2_data);","15c42db5":"# ACF is slowly decaying & PACF has a sharp cut-off which says we can use AR process. From PACF plot we will \n## choose the order of AR process.","825345a0":"# To check the values\npacf(ar2_data)","a1f2c4d1":"# We surely can see that the AR process has the order of 2, so we will do the Yuler-Walker equation which will \n## allow us to estimate the coefficients of AR(p), given we know the order.","6790da82":"rho, sigma = yule_walker(ar2_data, 2, method = 'mle')\nprint(-rho)\nprint(sigma)","87fc3e99":"# It did a decent job in estimating the coefficient values.","64c39f7e":"# Trying it with AR(3)\nar_3 = np.array([1, 0.33, 0.5, 0.07])\nma = np.array([1])\n\nar_3_data = ArmaProcess(ar_3, ma).generate_sample(nsample=1000)","c67adde9":"plt.plot(ar_3_data)","5543b2e7":"plot_acf(ar_3_data);\nplot_pacf(ar_3_data);","91bbb544":"# From PACF we can see that this has an order of 3","432048d6":"# Estimating\nrho, sigma = yule_walker(ar_3_data, 3, method = 'mle')\nprint(-rho)\nprint(sigma)","437728ad":"\u2022 As by specifying the weights we made sure that it will take upto value upto lag 2. In the ACF plot also we can see that the significant lags are 2 only.","57f9ab9c":"### Autoregressive processes - AR(p)\nThis process take lags values rather than the error terms as we have seen in MA. So we can say that present will be somehow dependent on the previous day values. Applied only on stationary series.","da7af510":"### Moving average Process - MA(q)\nMoving averages works on error of the previous values.","e64967e5":"### Random Walk Model.\nThis is the phenomenon of stock market saying that the stocks move in a random way, which makes every other theory or model futile. So there is not point of predicting future in such scenarios."}}