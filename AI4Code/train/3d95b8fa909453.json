{"cell_type":{"80bd25ea":"code","60297f0c":"code","e7b0fc80":"code","39be3654":"code","617f6344":"code","10996f4f":"code","8d23f1dc":"code","d64c7ade":"code","63527cd5":"code","339d9ec2":"code","d25c65c9":"code","5c4fe30f":"code","f28cb2de":"code","bdabd40b":"code","0bf28e05":"code","03749025":"code","744f9d9c":"code","3e4e371b":"code","2c3e0528":"code","87d79e4a":"code","15c433fe":"code","8c0d9f43":"code","ca71f774":"code","f4922c70":"code","54ff044e":"code","47c16634":"code","f0e50c5c":"code","0d6aa96f":"code","78b28864":"code","567fdb3c":"code","c92881c2":"code","bac49255":"code","52c23964":"code","05960f99":"code","51b149b3":"code","da10646e":"code","efb52d10":"code","979c5484":"code","40a0d70b":"code","477cbeea":"code","ea862713":"code","16ba1068":"code","d0ca4e46":"code","db92d622":"code","cd98bdd8":"code","cd4eeae4":"code","e8cc6e17":"code","2bb8e128":"code","72ce7b0a":"code","d2537f50":"code","df0e65d4":"code","3b268850":"code","01965dcf":"code","86320d1a":"code","b6b3f7da":"code","83e8a862":"code","032f1534":"code","21702e13":"code","bbc3a201":"code","7f8ebf03":"code","6e32a703":"code","146c27ee":"code","1f2e359a":"code","f02191f6":"code","eaf50bbb":"code","6ce16001":"code","23665086":"code","1195a258":"code","b69e87bb":"code","3a9a60fb":"code","72e45897":"code","8e575dba":"code","e1502439":"code","7e7d5b60":"code","d097c631":"code","bb3eba75":"code","822c85af":"code","d36da673":"code","d5de5042":"code","0d5a4851":"code","813f46ed":"code","08eaed6a":"code","79052e99":"markdown","ca36fef3":"markdown","bad35877":"markdown","074dcc6f":"markdown","90db72c1":"markdown","d68fb4a8":"markdown","eab6376a":"markdown","aa3b5a50":"markdown","e5dd1b0f":"markdown","fa9cae20":"markdown","23215562":"markdown","ebe1c461":"markdown","688ccb37":"markdown","a158629b":"markdown","38200f55":"markdown","239db019":"markdown","961b3165":"markdown","18269c37":"markdown","4d43f27f":"markdown","ffda75ce":"markdown","a14c6c6a":"markdown","39e692fe":"markdown","7cedef25":"markdown","ff36800a":"markdown","1590f2fc":"markdown","bb896e67":"markdown","5c09f48f":"markdown","906236fd":"markdown","fa1c3ae1":"markdown","7465e130":"markdown","43221e83":"markdown","c288b2eb":"markdown","58145326":"markdown","88571fa2":"markdown","b12cf2fe":"markdown","7fd9dbad":"markdown","207681fe":"markdown","6ec0b9c9":"markdown","57ced2cd":"markdown","4fa18a08":"markdown","d24334ea":"markdown","f94d26df":"markdown","bc53e11d":"markdown","e18a9c5b":"markdown","6cb4f4b6":"markdown","d384dc96":"markdown","859e8d45":"markdown","c4185e51":"markdown"},"source":{"80bd25ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60297f0c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom scipy.stats import zscore\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_columns',None)","e7b0fc80":"data = pd.read_csv(\"\/kaggle\/input\/world-foodfeed-production\/FAO.csv\",encoding=\"ISO-8859-1\")\ndata.head()","39be3654":"print(\"Dataset contains\",data.shape[0],\"observations and\" , data.shape[1], \"attributes\")","617f6344":"data.columns","10996f4f":"data.describe()","8d23f1dc":"data.info()","d64c7ade":"cat_cols = data.select_dtypes(['object']).columns\nprint(\"Count of categorical values are\",cat_cols.value_counts().sum())","63527cd5":"num_cols = data.select_dtypes(['float64','int64']).columns\nprint(\"Count of numerical values are\",num_cols.value_counts().sum())","339d9ec2":"cols = list(num_cols)\nimport seaborn as sns\nfor col in cols:\n    sns.boxplot(y = data[col])\n    plt.show()","d25c65c9":"pd.set_option('display.max_rows',None)\ndata.isnull().sum()","5c4fe30f":"fig = plt.subplots(figsize=(20,10))\nsns.heatmap(data.isnull(),yticklabels=False,cbar=False,cmap='viridis')\nplt.show()","f28cb2de":"#for col in data.columns:\n    #if (col not in ['Area Abbreviation','Area Code','Area','Item Code','Item','Element Code','Element','Unit','latitude','longitude'])& (data[col].isnull().sum()>0):\n        #data.loc[data[col].isnull(),col]=data[col].median()","bdabd40b":"data = data.dropna()","0bf28e05":"fig = plt.subplots(figsize=(20,10))\nsns.heatmap(data.isnull(),yticklabels=False,cbar=False,cmap='viridis')\nplt.show()","03749025":"data['Y2012'] = data['Y2012'].replace('-','')\ndata['Y2013'] = data['Y2013'].replace('-','')","744f9d9c":"data['Total_production'] = (data['Y1961'] + data['Y1962'] + data['Y1963'] + data['Y1964'] + data['Y1965'] + data['Y1966'] + \n    data['Y1967'] + data['Y1968'] + data['Y1969'] + data['Y1970'] + data['Y1971'] + data['Y1972'] + data['Y1973'] +\n    data['Y1974'] + data['Y1975'] + data['Y1976'] + data['Y1977'] + data['Y1978'] + data['Y1979'] + data['Y1980'] + \n    data['Y1981'] + data['Y1982'] + data['Y1983'] + data['Y1984'] + data['Y1985'] + data['Y1986'] + data['Y1987'] + \n    data['Y1988'] + data['Y1989'] + data['Y1990'] + data['Y1991'] + data['Y1992'] + data['Y1993'] + data['Y1994'] + \n    data['Y1995'] + data['Y1996'] + data['Y1997'] + data['Y1998'] + data['Y1999'] + data['Y2000'] + data['Y2001'] + \n    data['Y2001'] + data['Y2002'] + data['Y2003'] + data['Y2004'] + data['Y2005'] + data['Y2006'] + data['Y2007'] + \n    data['Y2008'] + data['Y2009'] + data['Y2010'] + data['Y2011'] + data['Y2012'] + data['Y2013'] )","3e4e371b":"fig = plt.subplots(figsize=(7,7))\nax = sns.countplot(data['Element'],order=data['Element'].value_counts().index)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","2c3e0528":"df_food = data[data['Element']=='Food']","87d79e4a":"df_food.shape","15c433fe":"df_food.head()","8c0d9f43":"df_food.groupby('Item').sum()['Total_production'].sort_values(ascending=False)[:10]","ca71f774":"fig = plt.subplots(figsize=(10,10))\nfood_item = df_food.groupby('Item').sum()['Total_production'].sort_values(ascending=False)[:10]\nax=sns.barplot(data = df_food,x = food_item.index, y= food_item.values)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","f4922c70":"fig = plt.subplots(figsize=(12,10))\nArea_wise_food = df_food.groupby('Area').sum()['Total_production'].sort_values(ascending=False)[:10]\nax=sns.barplot(data = df_food,x = Area_wise_food.index, y= Area_wise_food.values)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","54ff044e":"df_feed = data[data['Element']=='Feed']\ndf_feed.head()","47c16634":"fig = plt.subplots(figsize=(12,10))\nfeed_item = df_feed.groupby('Item').sum()['Total_production'].sort_values(ascending=False)[:10]\nax=sns.barplot(data = df_feed,x = feed_item.index, y= feed_item.values)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","f0e50c5c":"fig = plt.subplots(figsize=(12,10))\nArea_wise_feed = df_feed.groupby('Area').sum()['Total_production'].sort_values(ascending=False)[:10]\nax=sns.barplot(data = df_feed,x = Area_wise_feed.index, y= Area_wise_feed.values)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","0d6aa96f":"fig = plt.subplots(figsize=(12,10))\nArea_wise = data.groupby('Area').sum()['Total_production'].sort_values(ascending=False)[:10]\nax=sns.barplot(data = data,x = Area_wise.index, y= Area_wise.values)\nplt.xticks(rotation = 50)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n               ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\nplt.show()","78b28864":"sns.factorplot('Area',data=data[(data['Area']=='China, mainland')|(data['Area']=='United States of America')|(data['Area']=='India')],kind='count',hue='Element')\nplt.show()","567fdb3c":"data = data.drop('Total_production', axis=1)","c92881c2":"data.head(2)","bac49255":"#Pivoting some columns\ncolumns = ['Area Abbreviation', 'Area Code', 'Area', 'Item Code', 'Item','Element Code', \n           'Element', 'Unit', 'latitude', 'longitude']\ndf = pd.melt(data,id_vars= columns)\ndf.drop(columns=['Area Code','Item Code','Area Abbreviation','Unit','Element Code'], axis=1,inplace=True)\ndf.rename(str.lower, axis = 1, inplace = True)\ndf.rename({'variable':'year','value':'quantity','area':'country'},axis=1,inplace=True)","52c23964":"# Removing the Y from the numbers in df.year\ndf.year = df.year.str.replace('Y','')\ndf.country = df.country.replace ({'China, mainland': 'China','United States of America':'USA',\n                                 'United Kingdom':'UK'})\ndf.head(2)","05960f99":"df.info()","51b149b3":"df['year'] = pd.to_datetime(df['year'],infer_datetime_format=True)","da10646e":"df1 = df[(df['country']=='China')|(df['country']=='USA')|(df['country']=='India')][['item','element','latitude','longitude','year','quantity','country']]","efb52d10":"fig = plt.subplots(figsize=(10,10))\nsns.lineplot(x='year', y='quantity', data=df1,hue='country',style='country',markers=True)","979c5484":"fig = plt.subplots(figsize=(10,10))\nsns.lineplot(x='year', y='quantity', data=df,hue='element',style='element',markers=True)","40a0d70b":"data.head()","477cbeea":"df_countries = data.copy()","ea862713":"df_countries.head()","16ba1068":"df_countries.columns","d0ca4e46":"df_countries = df_countries.drop(['Area Abbreviation', 'Area Code','Item Code', 'Item',\n       'Element Code', 'Element', 'Unit', 'latitude', 'longitude'],axis=1)\ndf_countries.head()","db92d622":"df_countries = df_countries.groupby('Area').sum()","cd98bdd8":"df_countries.head()","cd4eeae4":"df_countries.shape","e8cc6e17":"#sns.pairplot(df_countries,diag_kind='kde',hue='Area')","2bb8e128":"df_scaled = df_countries.apply(zscore)","72ce7b0a":"df_scaled.head()","d2537f50":"df_scaled.shape","df0e65d4":"cluster_range = range(1,15)\ncluster_errors = []\nfor num_clusters in cluster_range:\n    clusters = KMeans(num_clusters,n_init = 10)\n    clusters.fit(df_scaled)\n    cluster_errors.append(clusters.inertia_)\nclusters_df = pd.DataFrame({\"num_clusters\":cluster_range, \"cluster_errors\": cluster_errors})\nclusters_df","3b268850":"plt.figure(figsize=(12,6))\nplt.plot( clusters_df.num_clusters, clusters_df.cluster_errors, marker = \"o\" )","01965dcf":"#silhouette analysis\nfrom sklearn.metrics import silhouette_score\nscore = []\nfor n_clusters in range(2,20):\n    kmeans = KMeans(n_clusters = n_clusters)\n    kmeans.fit(df_scaled)\n    labels = kmeans.labels_\n    centroids = kmeans.cluster_centers_\n    score.append(silhouette_score(df_scaled,labels,metric='euclidean'))\n    \nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nplt.plot(score)\nplt.grid(True)\nplt.ylabel('silhouette score')\nplt.xlabel('k')\nplt.title('silhouette for kmeans')","86320d1a":"kmeans = KMeans(n_clusters=4, n_init = 15, random_state=25)","b6b3f7da":"kmeans.fit(df_scaled)","83e8a862":"centroids = kmeans.cluster_centers_","032f1534":"centroids","21702e13":"centroid_df = pd.DataFrame(centroids, columns = list(df_scaled) )","bbc3a201":"centroid_df","7f8ebf03":"kmeans.inertia_","6e32a703":"## creating a new dataframe only for labels and converting it into categorical variable\ndf_labels = pd.DataFrame(kmeans.labels_ , columns = list(['labels']))\n\ndf_labels['labels'] = df_labels['labels'].astype('category')\n\ndf_labels","146c27ee":"df_countries['labels'] =kmeans.labels_","1f2e359a":"df_countries.head()","f02191f6":"df_countries['labels'].value_counts()","eaf50bbb":"df_countries.tail(8)","6ce16001":"from mpl_toolkits.mplot3d import Axes3D","23665086":"fig = plt.figure(figsize=(8, 6))\nax = Axes3D(fig, rect=[0, 0, .95, 1], elev=20, azim=100)\nkmeans.fit(df_scaled)\nlabels = kmeans.labels_\nax.scatter(df_scaled.iloc[:, 0], df_scaled.iloc[:, 1], df_scaled.iloc[:, 3],c=labels.astype(np.float), edgecolor='k')\nax.w_xaxis.set_ticklabels([])\nax.w_yaxis.set_ticklabels([])\nax.w_zaxis.set_ticklabels([])\nax.set_xlabel('Length')\nax.set_ylabel('Height')\nax.set_zlabel('Weight')\nax.set_title('3D plot of KMeans Clustering')","1195a258":"kmeans = KMeans(n_clusters=2, n_init = 15, random_state=25)","b69e87bb":"kmeans.fit(df_scaled)","3a9a60fb":"centroids = kmeans.cluster_centers_","72e45897":"centroids","8e575dba":"centroid_df = pd.DataFrame(centroids, columns = list(df_scaled) )","e1502439":"centroid_df","7e7d5b60":"kmeans.inertia_","d097c631":"## creating a new dataframe only for labels and converting it into categorical variable\ndf_labels = pd.DataFrame(kmeans.labels_ , columns = list(['labels']))\n\ndf_labels['labels'] = df_labels['labels'].astype('category')\n\ndf_labels","bb3eba75":"df_countries['labels'] =kmeans.labels_","822c85af":"df_countries.head()","d36da673":"df_countries['labels'].value_counts()","d5de5042":"df_countries.tail(8)","0d5a4851":"fig = plt.figure(figsize=(8, 6))\nax = Axes3D(fig, rect=[0, 0, .95, 1], elev=20, azim=100)\nkmeans.fit(df_scaled)\nlabels = kmeans.labels_\nax.scatter(df_scaled.iloc[:, 0], df_scaled.iloc[:, 1], df_scaled.iloc[:, 3],c=labels.astype(np.float), edgecolor='k')\nax.w_xaxis.set_ticklabels([])\nax.w_yaxis.set_ticklabels([])\nax.w_zaxis.set_ticklabels([])\nax.set_xlabel('Length')\nax.set_ylabel('Height')\nax.set_zlabel('Weight')\nax.set_title('3D plot of KMeans Clustering')","813f46ed":"#silhouette analysis\nfrom sklearn.metrics import silhouette_score\nscore = []\nfor n_clusters in range(2,20):\n    kmeans = KMeans(n_clusters = n_clusters)\n    kmeans.fit(df_scaled)\n    labels = kmeans.labels_\n    centroids = kmeans.cluster_centers_\n    score.append(silhouette_score(df_scaled,labels,metric='euclidean'))\n    \nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nplt.plot(score)\nplt.grid(True)\nplt.ylabel('silhouette score')\nplt.xlabel('k')\nplt.title('silhouette for kmeans')","08eaed6a":"centroid_df","79052e99":"According to the production of food items 'China' and 'India' are producing in large numbers","ca36fef3":"From the above Silhoutte scores we could infer that The Silhoutte score for K=2 is coming around 0.82 where as the Silhoutte score for k=4 is 0.4 Hence we can go for 2 clusters","bad35877":"From the above analysis we found that the countries 'China','India' and 'USA' their production and utilisation rate is high, so if we perform clustering technique we we could separate countries based on their productivity scale\n\nLet's do it!!!","074dcc6f":"In our dataset we have more amount of NULL values like more than 15% in some columns so we can drop those values to perform EDA and Clustering","90db72c1":"### Now check the growth of the top 3 countries over the given periods","d68fb4a8":"From the above centroid value label 0 belong to the countries where there food production and consumption rate is low as compared to label1","eab6376a":"### Top 3 countries concentraion over food or feed?","aa3b5a50":"Top 3 countries are more concentrated on prooduction of food items rather than the utilisation","e5dd1b0f":"#### Now checking the NULL values of each column using HeatMap","fa9cae20":"### Loading Libraries","23215562":"#### Overall food items are produced from 1961-2013 compared to the food itmes get consumed","ebe1c461":"From all other other countries 'China's growth is increasing rapidly where as growth of 'India' is also increasing not as like 'China' but the growth of 'USA' is stationary","688ccb37":"Null values are dropped Lets visualize it!!!","a158629b":"Lets check the centroids","38200f55":"### Lets find the countries invovled in production of food items","239db019":"If you find this notebook as insightful please upvote it, Thanks in Advance!","961b3165":"From the above statistical summary we found that the average values of last two attributes were in negavtive values we assume that it is a human error, hence we remove that negative sign","18269c37":"From the above we colud infer that 'Milk-Excluding Butter' is most produced food item followed by the 'Cereals-Excluding Beer' and 'Vegetables'","4d43f27f":"Hence Label 0 has 143 countries  \nand label 1 has 3 Countries","ffda75ce":"This dataset contains information about the production and consumption of food items from different countries over the period 1961 to 2013.\n\nThere are 63 variables:\n\n- Area Abbreviation: Country name abbreviation\n- Area code: Code of each countries\n- Area: Country names\n- Item code: Food item code\n- Item: Food item\n- Element code: Food or Feed code\n- Element: Food or Feed (Food - for production, Feed - for consumption)\n- Unit: Unit of measurement (1000 tonnes)\n- Latitude: Latitude number of respective countries\n- Longitude: Longitude number of respective countries\n- Y1961 - Y2013: production years that show the amount of food item produced and consumed in 1000 tonnes","a14c6c6a":"Apart from leaving first 4 columns all other year columns if you look the mean and minimum values are very less compared to the maximum values this could be because of the population increase and requirements of food items in their countries so we can consider that black dots as extreme values","39e692fe":"### Which countries had the biggest overall production?","7cedef25":"Now we could say that 'China','India' and 'USA' form one cluster and other countries form second cluster","ff36800a":"### Loading Dataset","1590f2fc":"### Dataset Attributes","bb896e67":"Lets check the centroids","5c09f48f":"According to the consumption interestingly we could find 'China' and 'USA' are almost consuimg same amount of food items","906236fd":"### Nature of the Data","fa1c3ae1":"#### Elbow plot to select number of clusters","7465e130":"From the above statistical summary we could infer that\n\n* There are 21477 entries are in the dataset but in years columns we could see only 17938 entries in some columns which means there are NULL values\n\n* The average values for the year columns is increasing year by year\n\n* The minimum value and 25 percentile value are same for the years 1961-2011 but in the years 2012 and 2013 there are negative values which we have to look into it","43221e83":"### Pre Processing Data Analysis","c288b2eb":"### Variable categorization (count of numeric and categorical)","58145326":"From this two columns we could say that p-value<0.05 hence there is Granger-Cause effect. so we coud say that the dataset will be helpful for forcasting the future ","88571fa2":"This is the overall production of all countries where 'china','USA' and 'India' are the top three counries","b12cf2fe":"Now try selecting 2 clusters for better results","7fd9dbad":"Here we could say 'Cereals-Excluding Beer' is the most food item to get consumed from the years 1961-2013","207681fe":"### K-Means Algorithm","6ec0b9c9":"The Food and Agriculture Organization (FAO) of the United Nations database has one dataset 'Food Balance Sheets'. It represents a comprehensive picture of the pattern of a country's food supply during a specified reference period (1961-2013). The food dataset shows for each food item the sources of supply and its utilization. This dataset mainly concentrates on two utilizations, they are food and feed","57ced2cd":"### Datatypes of the Attributes","4fa18a08":"In order to analyse the country wise food items production and its consumption we are calculating their total production and consumption values","d24334ea":"### Statistical Overview","f94d26df":"## Dataset Information","bc53e11d":"### Is that outliers or Extreme values? Let's check it","e18a9c5b":"### Which food items were produced in the biggest quantities? And feed items?","6cb4f4b6":"### How the overall production was divided by food and feed in years 1961-2013?","d384dc96":"## Worldwide food\\feed production and consumption, 1961-2013","859e8d45":"Lets check Silhouette score for k=4 and K=2","c4185e51":"From the elbow plot after the cluster 4 the error difference remains the same, We can select 4 clusters"}}