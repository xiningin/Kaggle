{"cell_type":{"463bf1c6":"code","ae3b7f82":"code","7dc8c146":"code","d4471ae2":"code","d225e5f1":"code","bfa5af7d":"code","845ac686":"code","efb62102":"code","e8701149":"code","073eb9d9":"code","a835b293":"code","d47e2497":"code","a3c233ab":"code","56941e48":"markdown","b3140d7f":"markdown","b572ed34":"markdown","2f9856c7":"markdown","c193c815":"markdown","3240b146":"markdown","97486e43":"markdown","5ddeac4a":"markdown","c56935a7":"markdown","ad3ad885":"markdown","7f025a23":"markdown","4935d82a":"markdown","c2db8663":"markdown","b7b6c469":"markdown","0e6e06b3":"markdown"},"source":{"463bf1c6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ae3b7f82":"# This notebook was made on Kaggle. It might not work if input path is different. \n## Please change the _dataPath variable as per needs\n### Change this if needed, can use \".\/scores.csv\"\n\n_dataPath = \"..\/input\/linear-regression-simple\/scores.csv\"   \n\ndata = pd.read_csv(_dataPath)","7dc8c146":"data.head()","d4471ae2":"# Check for null or missing values\ndata.isnull().any()","d225e5f1":"sns.set(style = 'whitegrid')\nsns.pairplot(data, corner =True, kind = 'reg', height = 5);","bfa5af7d":"from scipy.stats import pearsonr\n\nstatistics = pearsonr(data['Hours'], data['Scores'])\nstatistics","845ac686":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score","efb62102":"linearModel = LinearRegression()\n\n## Reshaping is required for sklearn models.\n## -1 indicates that sklearn should automatically calculate this value from the dataset\n\nlinearModel.fit(data['Hours'].values.reshape(-1, 1),\n                data['Scores'].values.reshape(-1, 1));","e8701149":"linearModel.coef_, linearModel.intercept_","073eb9d9":"## Score of the values\nr2_score(data['Scores'].values.reshape(-1, 1),\n         linearModel.predict(data['Hours'].values.reshape(-1, 1)))","a835b293":"preds = linearModel.predict(data['Hours'].values.reshape(-1, 1))\nplt.plot(data['Hours'],preds,'g')\nplt.scatter(data['Hours'], data['Scores']);","d47e2497":"plt.plot(data['Scores'] - preds.flatten(), 'mo');\nplt.plot(np.zeros(25));","a3c233ab":"# Get the intercept and slope and make predictions\nlinearModel.predict(np.array([[9.25]]))  ## The square brackets are to convert the data into a 1x1 matrix","56941e48":"We can conclude that our model is about 95% accurate","b3140d7f":"# Residual Plot","b572ed34":"# EDA","2f9856c7":"We have two columns, hours of studying and score on a particular test. Let us see the data.","c193c815":"About 93 it seems! Great!","3240b146":"# Correlation Test\n\nCorrelation gives the amount of linear dependency betwee two variables. Let us import `pearsonr` from `scipy.stats` to measure how much linearly dependent the variables are.","97486e43":"As we can see, there is high correlation coefficient(first value) between the two values.\n\nThe p-value(second value) is smaller than 0.05, so our hypothesis that there is linear relationship between the data is significant","5ddeac4a":"# Import necessary libraries","c56935a7":"Let us now get the coefficeints and values","ad3ad885":"Seaborn gives us a nice Plot along with the regression lines. The linear trend is very much clear. Our job is now to find an appropriate line and fit a model. ","7f025a23":"As we can see,\n\nThe intercept is about 2.4. It means that with 0 hours of study you can get this Score.\n\nThe coefficient is about 9.77. This means that with each hour of study, your expected score increases by about 10 marks.\n<hr>\n\nNow we will calculate the goodness of fit of the model.","4935d82a":"# Modelling using sklearn","c2db8663":"# Final Plot","b7b6c469":"# How much score will a student score?\nIn this notebook, we will explore the score each student will score based on the number of hours studied.\n\nWe will first explore the dataset, then we will fit a predictive model.","0e6e06b3":"# Final Question Answer\nThe final question is : What will be the final score of someone who studies for about 9.25 hours a day"}}