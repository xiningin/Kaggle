{"cell_type":{"3ed0573e":"code","9006a826":"code","02106ff3":"code","1b727088":"code","8eb50a74":"code","b7277f1b":"code","be84bcec":"code","db7059d0":"code","ed1e2de2":"code","267ceb56":"code","cf33a82a":"code","2c001140":"code","011b70f0":"code","8c82d826":"code","1cabc2a4":"code","8722de3f":"code","17696db2":"markdown","85bd8386":"markdown","19f0100b":"markdown","b3d63342":"markdown","d20b7fbb":"markdown","e18458b1":"markdown","2a5680e2":"markdown","c0325f00":"markdown","e6befe57":"markdown","2a7e975c":"markdown","9f0a92e7":"markdown","69e96458":"markdown","6106f30f":"markdown","bad9e613":"markdown","affaa72f":"markdown","9af5d810":"markdown"},"source":{"3ed0573e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\n\ndata = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')\ndata.drop(['Rank'], axis=1, inplace=True)\ndata['Year'] = data['Year'].fillna(2009.0)","9006a826":"game = data.loc[:,['Name','Global_Sales']]\ngame = game.sort_values('Global_Sales', ascending=False)\ngame = game.head()\n\nfig = plt.figure(figsize=(10,7))\nplt.pie(game['Global_Sales'], labels=game['Name'], autopct='%1.1f%%', shadow=True)\ncentre_circle = plt.Circle((0,0),0.45,color='black', fc='white',linewidth=1.25)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.axis('equal')\nplt.show()","02106ff3":"top_5_platforms = ['DS', 'PS2', 'PS3', 'Wii', 'X360']\nperc = data.loc[:,[\"Year\",\"Platform\",'Global_Sales']]\nperc['total_sales'] = perc.groupby([perc.Platform,perc.Year])['Global_Sales'].transform('sum')\nperc.drop('Global_Sales', axis=1, inplace=True)\nperc = perc.drop_duplicates()\nperc = perc[(perc['Year'].astype('float')>=2006.0) & (perc['Year'].astype('float')<=2011.0)]\nperc = perc.sort_values(\"Year\",ascending = False)\nperc = perc.loc[perc['Platform'].isin(top_5_platforms)]\nperc = perc.sort_values(\"Year\")\nfig=px.bar(perc,x='Platform', y=\"total_sales\", animation_frame=\"Year\", \n           animation_group=\"Platform\", color=\"Platform\", hover_name=\"Platform\")\nfig.show()","1b727088":"sns.kdeplot(data=data['Year'], label='Year', shade=True)\nplt.title('Number of game launches according to years')\nplt.show()","8eb50a74":"plt.figure(figsize=(10,7))\nsns.scatterplot(data=data, x='Year', y='Global_Sales')\nplt.show()","b7277f1b":"genre = data.loc[:,['Genre','Global_Sales']]\ngenre['total_sales'] = genre.groupby('Genre')['Global_Sales'].transform('sum')\ngenre.drop('Global_Sales', axis=1, inplace=True)\ngenre = genre.drop_duplicates()\n\nfig = px.pie(genre, names='Genre', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=[0.2,0.06,0.06,0.06,0.06], textinfo=\"percent+label\")\nfig.show()","be84bcec":"publisher = data.loc[:,['Publisher','Global_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['Global_Sales'].transform('sum')\npublisher.drop('Global_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.head(10)\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=[0.2,0.1,0.1,0.1,0.1], textinfo=\"percent+label\")\nfig.show()","db7059d0":"top_5_publishers = ['Nintendo', 'Electronic Arts', 'Activision', 'Ubisoft', 'Sony Computer Entertainment']\nperc = data.loc[:,[\"Year\",\"Publisher\",'Global_Sales']]\nperc['total_sales'] = perc.groupby([perc.Publisher,perc.Year])['Global_Sales'].transform('sum')\nperc.drop('Global_Sales', axis=1, inplace=True)\nperc = perc.drop_duplicates()\nperc = perc[(perc['Year'].astype('float')>=2006.0)]\nperc = perc.sort_values(\"Year\",ascending = False)\nperc = perc.loc[perc['Publisher'].isin(top_5_publishers)]\nperc = perc.sort_values(\"Year\")\nfig=px.bar(perc,x='Publisher', y=\"total_sales\", animation_frame=\"Year\", \n           animation_group=\"Publisher\", color=\"Publisher\", hover_name=\"Publisher\")\nfig.show()","ed1e2de2":"sns.kdeplot(data=data['Global_Sales'], label='Global_Sales', shade=True)\nplt.title('Sales of various games over the years')\nplt.show()","267ceb56":"genres = data['Genre'].value_counts().reset_index()['index'].tolist()\n\nfor genre,num in zip(genres,range(1,13)):\n    df = data[data['Genre']==genre]\n    df = df.sort_values('Global_Sales', ascending=False)\n    df = df.head(3)\n    plt.figure()\n    sns.barplot(data=df, x='Global_Sales', y='Name')\n    plt.title('Top 5 games in {}'.format(genre))\n    plt.show()","cf33a82a":"game = data.loc[data['Name']!='Wii Sports',['Name','NA_Sales']]\ngame = game.sort_values('NA_Sales', ascending=False)\ngame = game.head()\n\nfig = px.pie(game, names='Name', values='NA_Sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","2c001140":"platform = data.loc[data['Name']!='Wii Sports',['Platform','NA_Sales']]\nplatform['total_sales'] = platform.groupby('Platform')['NA_Sales'].transform('sum')\nplatform.drop('NA_Sales', axis=1, inplace=True)\nplatform = platform.drop_duplicates()\nplatform = platform.sort_values('total_sales', ascending=False)\nplatform = platform.head()\n\nfig = px.pie(platform, names='Platform', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","011b70f0":"genre = data.loc[data['Name']!='Wii Sports',['Genre','NA_Sales']]\ngenre['total_sales'] = genre.groupby('Genre')['NA_Sales'].transform('sum')\ngenre.drop('NA_Sales', axis=1, inplace=True)\ngenre = genre.drop_duplicates()\ngenre = genre.sort_values('total_sales', ascending=False)\ngenre = genre.head()\n\nfig = px.pie(genre, names='Genre', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","8c82d826":"publisher = data.loc[data['Name']!='Wii Sports',['Publisher','NA_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['NA_Sales'].transform('sum')\npublisher.drop('NA_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.sort_values('total_sales', ascending=False)\npublisher = publisher.head()\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","1cabc2a4":"perc = data.loc[:,[\"Year\",'NA_Sales','EU_Sales','JP_Sales','Other_Sales']]\nperc[['NA_mean','EU_mean','JP_mean','Other_mean']] = perc.groupby('Year')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales']].transform('sum')\nperc.drop(['NA_Sales','EU_Sales','JP_Sales','Other_Sales'], axis=1, inplace=True)\nperc = perc.drop_duplicates()\nperc = perc.sort_values(\"Year\")\ndf = pd.DataFrame({'Place': ['NA_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['NA_mean']})\ndf1 = pd.DataFrame({'Place': ['EU_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['EU_mean']})\ndf2 = pd.DataFrame({'Place': ['JP_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['JP_mean']})\ndf3 = pd.DataFrame({'Place': ['Other_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['Other_mean']})\nfinal = pd.concat([df,df1,df2,df3], axis=0)\nfinal = final.sort_values(\"Year\")\nfinal = final[final['Year']<=2016.0]\nfig=px.bar(final,x='Place', y=\"Sales\", animation_frame=\"Year\", \n           animation_group=\"Place\", color=\"Place\", hover_name=\"Place\", range_y=[0,400])\nfig.show()","8722de3f":"df = data.loc[:,['Year','NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales']]\ndf[['NA_sum','EU_sum','JP_sum','Other_sum', 'Global_sum']] = df.groupby('Year')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales']].transform('sum')\ndf.drop(['NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales'], axis=1, inplace=True)\ndf = df.drop_duplicates()\ndf = df.sort_values('Year')\ndf1 = pd.DataFrame({'Place': ['NA_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['NA_sum'], 'Global_Sales': df['Global_sum']})\ndf2 = pd.DataFrame({'Place': ['EU_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['EU_sum'], 'Global_Sales': df['Global_sum']})\ndf3 = pd.DataFrame({'Place': ['JP_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['JP_sum'], 'Global_Sales': df['Global_sum']})\ndf4 = pd.DataFrame({'Place': ['Other_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['Other_sum'], 'Global_Sales': df['Global_sum']})\nfinal = pd.concat([df1,df2,df3,df4], axis=0)\nfinal = final.sort_values(\"Year\")\nfinal = final[(final['Year']>=1994.0) & (final['Year']<=2016.0)]\n\nfig = px.scatter(final, x=\"Global_Sales\", y=\"Sales\", animation_frame=\"Year\", animation_group=\"Place\", color=\"Place\", hover_name=\"Place\", size_max=1000, range_x=[0,768], range_y=[0,400])\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,\n                                        color='DarkSlateGrey')),\n                  selector=dict(mode='markers'))\nfig.show()","17696db2":"# Which genre of games have highest sales? ----> Sports","85bd8386":"# Which game has highest Global Sales? ----> Wii Sports","19f0100b":"# Top 5 publishers per year","b3d63342":"# Which years saw highest game launches?  ----> 2007-2010","d20b7fbb":"# Relation of Global Sales to other places sales","e18458b1":"# Which Publisher of games have highest sales? ---> Nintendo","2a5680e2":"# Relation of Global_sales with year ---> One outlier noticed","c0325f00":"# Most popular publisher in North America ---> Nintendo","e6befe57":"# Which sales range is most games in? ---> (0-10)(in millions)","2a7e975c":"# Top 5 games for each Genre","9f0a92e7":"# Sales in all places every year","69e96458":"# Most popular game in North America ---> Super Mario Bros.","6106f30f":"# Most popular platform in North America ---> X360","bad9e613":"# Most popular Genre in North America ---> Action","affaa72f":"# Top 5 platforms per year","9af5d810":"The same can be analysed for Europe and Japan. I am not going into that."}}