{"cell_type":{"f6e25042":"code","68a17676":"code","81a30c6f":"code","d13dd127":"code","32c914b5":"code","57ab6c85":"code","dbc5a3c7":"code","05373cf6":"code","0928b527":"code","11c49edd":"code","ccd56b01":"code","b5b9f5a9":"code","e6b86196":"code","41d76bd1":"code","8c20b21f":"code","a98e7d9b":"code","04afe8b1":"code","51afe1b3":"code","20eccf37":"code","e16bd127":"code","0c0515c9":"code","6761a27c":"code","94958d70":"code","b3628bae":"code","d044d486":"code","31b099e3":"code","195d3d24":"markdown","7b57f0ba":"markdown","3a8f8bbd":"markdown","257a76d5":"markdown","173e84a1":"markdown","849c5d46":"markdown","c49a6cb7":"markdown","69c2047a":"markdown","e659d10c":"markdown"},"source":{"f6e25042":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nsns.set()\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68a17676":"raw_data = pd.read_csv('..\/input\/student-grade-prediction\/student-mat.csv')\nraw_data.head(8)","81a30c6f":"raw_data.shape","d13dd127":"raw_data.describe()","32c914b5":"raw_data.isnull().sum()","57ab6c85":"data = raw_data.drop(raw_data[['Dalc', 'Walc', 'goout']], axis=1)\ndata.head()","dbc5a3c7":"sns.distplot(data['G3'])","05373cf6":"data.drop(data[data['G3'] < 1].index, inplace = True)\ndata.describe()","0928b527":"sns.distplot(data['G3'])","11c49edd":"data = pd.get_dummies(data, drop_first=True)\ndata.head()","ccd56b01":"targets = data['G3']\ninputs = data.drop(['G3'], axis=1)","b5b9f5a9":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(inputs, targets, test_size=0.2, random_state=80)","e6b86196":"reg = LinearRegression()\nreg.fit(x_train, y_train)","41d76bd1":"y_hat = reg.predict(x_train)","8c20b21f":"plt.scatter(y_train, y_hat)\nplt.xlabel('Targets (y_train)', size=18)\nplt.ylabel('Inputs (y_hat)', size=18)\nplt.xlim(2, 22)\nplt.ylim(2, 22)\nplt.show()","a98e7d9b":"sns.distplot(y_train - y_hat)\nplt.title('Residuals PDF', size=18)","04afe8b1":"reg.score(x_train, y_train)","51afe1b3":"reg_summary = pd.DataFrame(inputs.columns.values, columns=['Features'])\nreg_summary['Weight'] = reg.coef_\nreg_summary","20eccf37":"y_hat_test = reg.predict(x_test)","e16bd127":"plt.scatter(y_test, y_hat_test)\nplt.xlabel('Targets (y_test)', size=18)\nplt.ylabel('Predictions (y_hat_test)', size=18)\nplt.xlim(2, 22)\nplt.ylim(2, 20)\nplt.show()","0c0515c9":"m_pf = pd.DataFrame(y_hat_test, columns=['Prediction'])\nm_pf.head()","6761a27c":"y_test = y_test.reset_index(drop=True)\nm_pf['Targets'] = y_test\nm_pf","94958d70":"m_pf['Residuals'] = m_pf['Targets'] - m_pf['Prediction']\nm_pf","b3628bae":"m_pf['Differences']= np.absolute(m_pf['Residuals']\/m_pf['Targets']*100)\nm_pf","d044d486":"m_pf.describe()","31b099e3":"pd.options.display.max_rows=999\npd.set_option('display.float_format', lambda x: '%.2f' % x)\nm_pf.sort_values('Differences')","195d3d24":"# Explore data","7b57f0ba":"## Searching for missing values","3a8f8bbd":"I am going to drop daily and weekend alcohol consumption, also go out because I think it might be related to freetime.","257a76d5":"# Testing the model","173e84a1":"## Variable of interest","849c5d46":"m_pf = Model Performance","c49a6cb7":"# Load raw data","69c2047a":"# Linear regression","e659d10c":"## Make dummy variables"}}