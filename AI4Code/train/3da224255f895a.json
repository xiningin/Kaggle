{"cell_type":{"eccd8798":"code","f2842d3b":"code","94a695fa":"code","d36eec0d":"code","43623ae3":"code","f394f902":"code","bb0ac0e8":"code","eecffcbe":"code","558baa8e":"code","cc525e9a":"code","c13fb4d6":"code","88c74513":"code","c53d9007":"code","8031b0aa":"code","48ea34e8":"markdown","10969916":"markdown","7dd02aae":"markdown","13644c9f":"markdown","e27ce695":"markdown"},"source":{"eccd8798":"# from google.colab import drive\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nimport pandas as pd\nfrom sklearn import metrics\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom datetime import datetime, date\nimport numpy as np\n\n# drive import\n# drive.mount('\/content\/drive')\ndataset = pd.read_excel(\"\/kaggle\/input\/updated\/dataset.xlsx\")\ndataset_blood = pd.read_excel(\"\/kaggle\/input\/complement\/dataset_blood.xlsx\")\ntest = pd.read_excel(\"\/kaggle\/input\/complement\/teste_covid.xlsx\")  \n\ndataset = dataset.replace(np.nan, 0, regex=True)\ndataset_blood = dataset_blood.replace(np.nan, 0, regex=True)\ntest = test.replace(np.nan, 0, regex=True)\ndataset.head()","f2842d3b":"dataset_blood.head()","94a695fa":"dataset['SARS-Cov-2 exam result'].value_counts()","d36eec0d":"dataset.corr()","43623ae3":"for n,i in enumerate(dataset['SARS-Cov-2 exam result']):\n  if i == 'positive':\n     dataset['SARS-Cov-2 exam result'][n] = 1\n  else:\n    dataset['SARS-Cov-2 exam result'][n] = 0\ndataset['SARS-Cov-2 exam result'].value_counts()\n\nfor n,i in enumerate(dataset_blood['SARS-Cov-2 exam result']):\n  if i == 'positive':\n     dataset_blood['SARS-Cov-2 exam result'][n] = 1\n  else:\n    dataset_blood['SARS-Cov-2 exam result'][n] = 0\ndataset_blood['SARS-Cov-2 exam result'].value_counts()\n\ndataset['SARS-Cov-2 exam result'] = dataset['SARS-Cov-2 exam result'].astype('int')\ndataset_blood['SARS-Cov-2 exam result'] = dataset_blood['SARS-Cov-2 exam result'].astype('int')","f394f902":"kviz_age = KNeighborsClassifier(n_neighbors=2)\nkviz = KNeighborsClassifier(n_neighbors=2)\n\nkviz.fit(dataset_blood[['Patient age quantile','Hematocrit',\t'Hemoglobin',\t'Platelets',\t'Mean platelet volume ',\t'Red blood Cells',\t'Lymphocytes',\t'Mean corpuscular hemoglobin concentration\u00a0(MCHC)',\t'Leukocytes',\t'Basophils',\t'Mean corpuscular hemoglobin (MCH)',\t'Eosinophils',\t'Mean corpuscular volume (MCV)',\t'Monocytes',\t'Red blood cell distribution width (RDW)',\t'Serum Glucose',\t'Neutrophils',\t'Urea',\t'Proteina C reativa mg\/dL',\t'Creatinine',\t'Potassium',\t'Sodium',\t'Influenza B, rapid test',\t'Influenza A, rapid test',\t'Alanine transaminase',\t'Aspartate transaminase',\t'Gamma-glutamyltransferase\u00a0',\t'Total Bilirubin',\t'Direct Bilirubin',\t'Indirect Bilirubin',\t'Alkaline phosphatase',\t'Ionized calcium\u00a0',\t'Strepto A',\t'Magnesium',\t'pCO2 (venous blood gas analysis)',\t'Hb saturation (venous blood gas analysis)',\t'Base excess (venous blood gas analysis)',\t'pO2 (venous blood gas analysis)',\t'Fio2 (venous blood gas analysis)',\t'Total CO2 (venous blood gas analysis)',\t'pH (venous blood gas analysis)',\t'HCO3 (venous blood gas analysis)',\t'Rods #',\t'Segmented',\t'Promyelocytes',\t'Metamyelocytes',\t'Myelocytes',\t'Myeloblasts',\t'Urine - Esterase',\t'Urine - pH',\t'Urine - Bile pigments',\t'Urine - Ketone Bodies',\t'Urine - Nitrite',\t'Urine - Density',\t'Urine - Protein',\t'Urine - Sugar',\t'Urine - Leukocytes',\t'Urine - Red blood cells',\t'Urine - Hyaline cylinders',\t'Urine - Granular cylinders',\t'Urine - Yeasts',\t'Partial thromboplastin time\u00a0(PTT)\u00a0',\t'Relationship (Patient\/Normal)',\t'International normalized ratio (INR)',\t'Lactic Dehydrogenase',\t'Prothrombin time (PT), Activity',\t'Vitamin B12',\t'Creatine phosphokinase\u00a0(CPK)\u00a0',\t'Ferritin',\t'Arterial Lactic Acid',\t'Lipase dosage',\t'D-Dimer',\t'Albumin',\t'Hb saturation (arterial blood gases)',\t'pCO2 (arterial blood gas analysis)',\t'Base excess (arterial blood gas analysis)',\t'pH (arterial blood gas analysis)',\t'Total CO2 (arterial blood gas analysis)',\t'HCO3 (arterial blood gas analysis)',\t'pO2 (arterial blood gas analysis)',\t'Arteiral Fio2',\t'Phosphor',\t'ctO2 (arterial blood gas analysis)']] , dataset_blood['SARS-Cov-2 exam result'])\nkviz_age.fit(dataset[['Patient age quantile']] , dataset_blood['SARS-Cov-2 exam result'])","bb0ac0e8":"kviz.predict(test[['Patient age quantile','Hematocrit',\t'Hemoglobin',\t'Platelets',\t'Mean platelet volume ',\t'Red blood Cells',\t'Lymphocytes',\t'Mean corpuscular hemoglobin concentration\u00a0(MCHC)',\t'Leukocytes',\t'Basophils',\t'Mean corpuscular hemoglobin (MCH)',\t'Eosinophils',\t'Mean corpuscular volume (MCV)',\t'Monocytes',\t'Red blood cell distribution width (RDW)',\t'Serum Glucose',\t'Neutrophils',\t'Urea',\t'Proteina C reativa mg\/dL',\t'Creatinine',\t'Potassium',\t'Sodium',\t'Influenza B, rapid test',\t'Influenza A, rapid test',\t'Alanine transaminase',\t'Aspartate transaminase',\t'Gamma-glutamyltransferase\u00a0',\t'Total Bilirubin',\t'Direct Bilirubin',\t'Indirect Bilirubin',\t'Alkaline phosphatase',\t'Ionized calcium\u00a0',\t'Strepto A',\t'Magnesium',\t'pCO2 (venous blood gas analysis)',\t'Hb saturation (venous blood gas analysis)',\t'Base excess (venous blood gas analysis)',\t'pO2 (venous blood gas analysis)',\t'Fio2 (venous blood gas analysis)',\t'Total CO2 (venous blood gas analysis)',\t'pH (venous blood gas analysis)',\t'HCO3 (venous blood gas analysis)',\t'Rods #',\t'Segmented',\t'Promyelocytes',\t'Metamyelocytes',\t'Myelocytes',\t'Myeloblasts',\t'Urine - Esterase',\t'Urine - pH',\t'Urine - Bile pigments',\t'Urine - Ketone Bodies',\t'Urine - Nitrite',\t'Urine - Density',\t'Urine - Protein',\t'Urine - Sugar',\t'Urine - Leukocytes',\t'Urine - Red blood cells',\t'Urine - Hyaline cylinders',\t'Urine - Granular cylinders',\t'Urine - Yeasts',\t'Partial thromboplastin time\u00a0(PTT)\u00a0',\t'Relationship (Patient\/Normal)',\t'International normalized ratio (INR)',\t'Lactic Dehydrogenase',\t'Prothrombin time (PT), Activity',\t'Vitamin B12',\t'Creatine phosphokinase\u00a0(CPK)\u00a0',\t'Ferritin',\t'Arterial Lactic Acid',\t'Lipase dosage',\t'D-Dimer',\t'Albumin',\t'Hb saturation (arterial blood gases)',\t'pCO2 (arterial blood gas analysis)',\t'Base excess (arterial blood gas analysis)',\t'pH (arterial blood gas analysis)',\t'Total CO2 (arterial blood gas analysis)',\t'HCO3 (arterial blood gas analysis)',\t'pO2 (arterial blood gas analysis)',\t'Arteiral Fio2',\t'Phosphor',\t'ctO2 (arterial blood gas analysis)']])","eecffcbe":"kviz_age.predict(test[['Patient age quantile']])","558baa8e":"from sklearn import tree\n\n# o classificador encontra padr\u00f5es nos dados de treinamento\nclf = tree.DecisionTreeClassifier() # inst\u00e2ncia do classificador\nclf = clf.fit(dataset_blood[['Patient age quantile','Hematocrit',\t'Hemoglobin',\t'Platelets',\t'Mean platelet volume ',\t'Red blood Cells',\t'Lymphocytes',\t'Mean corpuscular hemoglobin concentration\u00a0(MCHC)',\t'Leukocytes',\t'Basophils',\t'Mean corpuscular hemoglobin (MCH)',\t'Eosinophils',\t'Mean corpuscular volume (MCV)',\t'Monocytes',\t'Red blood cell distribution width (RDW)',\t'Serum Glucose',\t'Neutrophils',\t'Urea',\t'Proteina C reativa mg\/dL',\t'Creatinine',\t'Potassium',\t'Sodium',\t'Influenza B, rapid test',\t'Influenza A, rapid test',\t'Alanine transaminase',\t'Aspartate transaminase',\t'Gamma-glutamyltransferase\u00a0',\t'Total Bilirubin',\t'Direct Bilirubin',\t'Indirect Bilirubin',\t'Alkaline phosphatase',\t'Ionized calcium\u00a0',\t'Strepto A',\t'Magnesium',\t'pCO2 (venous blood gas analysis)',\t'Hb saturation (venous blood gas analysis)',\t'Base excess (venous blood gas analysis)',\t'pO2 (venous blood gas analysis)',\t'Fio2 (venous blood gas analysis)',\t'Total CO2 (venous blood gas analysis)',\t'pH (venous blood gas analysis)',\t'HCO3 (venous blood gas analysis)',\t'Rods #',\t'Segmented',\t'Promyelocytes',\t'Metamyelocytes',\t'Myelocytes',\t'Myeloblasts',\t'Urine - Esterase',\t'Urine - pH',\t'Urine - Bile pigments',\t'Urine - Ketone Bodies',\t'Urine - Nitrite',\t'Urine - Density',\t'Urine - Protein',\t'Urine - Sugar',\t'Urine - Leukocytes',\t'Urine - Red blood cells',\t'Urine - Hyaline cylinders',\t'Urine - Granular cylinders',\t'Urine - Yeasts',\t'Partial thromboplastin time\u00a0(PTT)\u00a0',\t'Relationship (Patient\/Normal)',\t'International normalized ratio (INR)',\t'Lactic Dehydrogenase',\t'Prothrombin time (PT), Activity',\t'Vitamin B12',\t'Creatine phosphokinase\u00a0(CPK)\u00a0',\t'Ferritin',\t'Arterial Lactic Acid',\t'Lipase dosage',\t'D-Dimer',\t'Albumin',\t'Hb saturation (arterial blood gases)',\t'pCO2 (arterial blood gas analysis)',\t'Base excess (arterial blood gas analysis)',\t'pH (arterial blood gas analysis)',\t'Total CO2 (arterial blood gas analysis)',\t'HCO3 (arterial blood gas analysis)',\t'pO2 (arterial blood gas analysis)',\t'Arteiral Fio2',\t'Phosphor',\t'ctO2 (arterial blood gas analysis)']] , dataset_blood['SARS-Cov-2 exam result']) # fit encontra padr\u00f5es nos dados\nclf.feature_importances_\n","cc525e9a":"for feature,importancia in zip(dataset_blood.columns,clf.feature_importances_):\n  print (\"{}:{}\".format(feature, importancia))","c13fb4d6":"resultado = clf.predict(test[['Patient age quantile','Hematocrit',\t'Hemoglobin',\t'Platelets',\t'Mean platelet volume ',\t'Red blood Cells',\t'Lymphocytes',\t'Mean corpuscular hemoglobin concentration\u00a0(MCHC)',\t'Leukocytes',\t'Basophils',\t'Mean corpuscular hemoglobin (MCH)',\t'Eosinophils',\t'Mean corpuscular volume (MCV)',\t'Monocytes',\t'Red blood cell distribution width (RDW)',\t'Serum Glucose',\t'Neutrophils',\t'Urea',\t'Proteina C reativa mg\/dL',\t'Creatinine',\t'Potassium',\t'Sodium',\t'Influenza B, rapid test',\t'Influenza A, rapid test',\t'Alanine transaminase',\t'Aspartate transaminase',\t'Gamma-glutamyltransferase\u00a0',\t'Total Bilirubin',\t'Direct Bilirubin',\t'Indirect Bilirubin',\t'Alkaline phosphatase',\t'Ionized calcium\u00a0',\t'Strepto A',\t'Magnesium',\t'pCO2 (venous blood gas analysis)',\t'Hb saturation (venous blood gas analysis)',\t'Base excess (venous blood gas analysis)',\t'pO2 (venous blood gas analysis)',\t'Fio2 (venous blood gas analysis)',\t'Total CO2 (venous blood gas analysis)',\t'pH (venous blood gas analysis)',\t'HCO3 (venous blood gas analysis)',\t'Rods #',\t'Segmented',\t'Promyelocytes',\t'Metamyelocytes',\t'Myelocytes',\t'Myeloblasts',\t'Urine - Esterase',\t'Urine - pH',\t'Urine - Bile pigments',\t'Urine - Ketone Bodies',\t'Urine - Nitrite',\t'Urine - Density',\t'Urine - Protein',\t'Urine - Sugar',\t'Urine - Leukocytes',\t'Urine - Red blood cells',\t'Urine - Hyaline cylinders',\t'Urine - Granular cylinders',\t'Urine - Yeasts',\t'Partial thromboplastin time\u00a0(PTT)\u00a0',\t'Relationship (Patient\/Normal)',\t'International normalized ratio (INR)',\t'Lactic Dehydrogenase',\t'Prothrombin time (PT), Activity',\t'Vitamin B12',\t'Creatine phosphokinase\u00a0(CPK)\u00a0',\t'Ferritin',\t'Arterial Lactic Acid',\t'Lipase dosage',\t'D-Dimer',\t'Albumin',\t'Hb saturation (arterial blood gases)',\t'pCO2 (arterial blood gas analysis)',\t'Base excess (arterial blood gas analysis)',\t'pH (arterial blood gas analysis)',\t'Total CO2 (arterial blood gas analysis)',\t'HCO3 (arterial blood gas analysis)',\t'pO2 (arterial blood gas analysis)',\t'Arteiral Fio2',\t'Phosphor',\t'ctO2 (arterial blood gas analysis)']])\nprint(resultado)","88c74513":"!pip install ipywidgets\n!pip3 install graphviz\n!pip3 install pydot","c53d9007":"import graphviz\nimport pydot\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz","8031b0aa":"dot_data = export_graphviz(\n    clf,\n    out_file = None,\n    feature_names = ['Patient age quantile','Hematocrit',\t'Hemoglobin',\t'Platelets',\t'Mean platelet volume ',\t'Red blood Cells',\t'Lymphocytes',\t'Mean corpuscular hemoglobin concentration\u00a0(MCHC)',\t'Leukocytes',\t'Basophils',\t'Mean corpuscular hemoglobin (MCH)',\t'Eosinophils',\t'Mean corpuscular volume (MCV)',\t'Monocytes',\t'Red blood cell distribution width (RDW)',\t'Serum Glucose',\t'Neutrophils',\t'Urea',\t'Proteina C reativa mg\/dL',\t'Creatinine',\t'Potassium',\t'Sodium',\t'Influenza B, rapid test',\t'Influenza A, rapid test',\t'Alanine transaminase',\t'Aspartate transaminase',\t'Gamma-glutamyltransferase\u00a0',\t'Total Bilirubin',\t'Direct Bilirubin',\t'Indirect Bilirubin',\t'Alkaline phosphatase',\t'Ionized calcium\u00a0',\t'Strepto A',\t'Magnesium',\t'pCO2 (venous blood gas analysis)',\t'Hb saturation (venous blood gas analysis)',\t'Base excess (venous blood gas analysis)',\t'pO2 (venous blood gas analysis)',\t'Fio2 (venous blood gas analysis)',\t'Total CO2 (venous blood gas analysis)',\t'pH (venous blood gas analysis)',\t'HCO3 (venous blood gas analysis)',\t'Rods #',\t'Segmented',\t'Promyelocytes',\t'Metamyelocytes',\t'Myelocytes',\t'Myeloblasts',\t'Urine - Esterase',\t'Urine - pH',\t'Urine - Bile pigments',\t'Urine - Ketone Bodies',\t'Urine - Nitrite',\t'Urine - Density',\t'Urine - Protein',\t'Urine - Sugar',\t'Urine - Leukocytes',\t'Urine - Red blood cells',\t'Urine - Hyaline cylinders',\t'Urine - Granular cylinders',\t'Urine - Yeasts',\t'Partial thromboplastin time\u00a0(PTT)\u00a0',\t'Relationship (Patient\/Normal)',\t'International normalized ratio (INR)',\t'Lactic Dehydrogenase',\t'Prothrombin time (PT), Activity',\t'Vitamin B12',\t'Creatine phosphokinase\u00a0(CPK)\u00a0',\t'Ferritin',\t'Arterial Lactic Acid',\t'Lipase dosage',\t'D-Dimer',\t'Albumin',\t'Hb saturation (arterial blood gases)',\t'pCO2 (arterial blood gas analysis)',\t'Base excess (arterial blood gas analysis)',\t'pH (arterial blood gas analysis)',\t'Total CO2 (arterial blood gas analysis)',\t'HCO3 (arterial blood gas analysis)',\t'pO2 (arterial blood gas analysis)',\t'Arteiral Fio2',\t'Phosphor',\t'ctO2 (arterial blood gas analysis)'],\n    class_names = ['0','1'],\n    filled = True, rounded = True,\n    proportion = True,\n    node_ids = True,\n    rotate = False,\n    label = 'all',\n    special_characters = True\n)\n\ngraph = graphviz.Source(dot_data)\ngraph","48ea34e8":"Verification by exam result for decision tree","10969916":"replace values for use predict method","7dd02aae":"Data explore","13644c9f":"Check de correlation between variables","e27ce695":"predict by blood exam with KNeighbors"}}