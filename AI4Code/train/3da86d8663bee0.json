{"cell_type":{"e8506e7e":"code","d0512d72":"code","10b57c60":"code","d5e0ccdb":"code","7217440a":"code","e4b36eb5":"code","a0ba3427":"code","63a8ab3f":"code","96c23026":"code","5e0e8089":"code","bd23d0ae":"code","bc9bdd11":"code","f0bce4d9":"code","9acc8c42":"code","bbb68306":"code","282c9d36":"code","f301b6fb":"code","d1f67018":"code","a349731e":"code","5f256531":"code","2359d92c":"code","3ba06d41":"code","24618dd6":"code","3249f735":"markdown","2040d85a":"markdown","96b8f774":"markdown","97f5ab01":"markdown"},"source":{"e8506e7e":"# Imports\n# manipula\u00e7\u00e3o de dados\nimport pandas as pd\nimport numpy as np\n# gr\u00e1ficos\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n# elimina\u00e7\u00e3o recursiva de atributos\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression\n# Preprocessamento\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import StandardScaler\n# Cross Validation\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\n# Modelo XGBoost\nfrom sklearn.metrics import accuracy_score\nfrom xgboost import XGBClassifier\n# evitar avisos de warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d0512d72":"# Importando dados de treino\ntreino = pd.read_csv(\"..\/input\/santander-customer-satisfaction\/train.csv\")\nteste = pd.read_csv(\"..\/input\/santander-customer-satisfaction\/test.csv\")","10b57c60":"# Observando as primeiras linhas\ntreino.head()","d5e0ccdb":"# Tipo dos dados\ntreino.dtypes","7217440a":"# Tamanho do banco de dados treino\nlen(treino)","e4b36eb5":"# Resumo dos dados de treino\ntreino.describe()","a0ba3427":"# Verificando a propor\u00e7\u00e3o da vari\u00e1vel TARGET\n# 0 = Clientes satisfeitos e 1 = Clientes insatisfeitos\ndf = pd.DataFrame(treino.TARGET.value_counts())\ndf['Prop'] = 100 * df['TARGET'] \/ treino.shape[0]\ndf['Prop'].plot(kind = 'bar', title = 'Propor\u00e7\u00e3o (Target)', color = ['#1F77B4', '#FF7F0E']);","63a8ab3f":"# \u00c9 poss\u00edvel observar o valor -999999, o que caracteriza um valor missing\ntreino.var3.value_counts()","96c23026":"# Substituindo os -999999 por 2 e inserindo ao banco de dados\nvar3_1 = treino.var3.replace(-999999, 2)\ntreino.insert(2, 'var3_1', var3_1)","5e0e8089":"treino.var3_1.value_counts()","bd23d0ae":"treino.describe()","bc9bdd11":"# Histograma da vari\u00e1vel var15 - possivelmente \u00e9 a idade de cada cliente\nsns.distplot(treino.var15, fit = stats.norm);","f0bce4d9":"# Boxplot\nsns.boxplot(x = \"TARGET\", y = \"var15\", data = treino);","9acc8c42":"# vari\u00e1vel TARGET pela var15\nsns.stripplot(x = \"TARGET\", y = \"var15\", data = treino, jitter = True);","bbb68306":"# Contar Classes\nconte_classe_0, conte_classe_1 = treino.TARGET.value_counts()\n\n# Dividindo por classe\ndf_classe_0 = treino[treino['TARGET'] == 0]\ndf_classe_1 = treino[treino['TARGET'] == 1]\ndf_classe_0_UnderS = df_classe_0.sample(conte_classe_1)\ndf_treino_UnderS = pd.concat([df_classe_0_UnderS, df_classe_1], axis = 0)\n\n# Mostrando como ficou a contagem da vari\u00e1vel TARGET\nprint('Under Sampling Aleat\u00f3rio:')\nprint(df_treino_UnderS.TARGET.value_counts())\ndf_treino_UnderS.TARGET.value_counts().plot(kind = 'bar', title = 'Contagem (target)', color = ['#1F77B4', '#FF7F0E']);","282c9d36":"# Separando a vari\u00e1vel TARGET\narray = df_treino_UnderS.values\n\nX = array[:,1:371]\nY = array[:,371]\n\n# Semente\n\nseed = 123\n\n# Cria\u00e7\u00e3o do modelo\nmodelo = LogisticRegression(random_state = seed)\n\n# RFE - Elimina\u00e7\u00e3o Recursiva de Atributos\nrfe = RFE(modelo, 10) # Os 10 mais importantes\nfit = rfe.fit(X, Y)\n\n# Print dos resultados\nprint('Vari\u00e1veis Preditoras:', treino.columns[1:371])\nprint('Vari\u00e1veis Selecionadas: %s' % fit.support_)\n# o n\u00famero 1 s\u00e3o as vari\u00e1veis que apresentaram melhor resultado\nprint('Ranking dos Atributos: %s' % fit.ranking_)\nprint('N\u00famero de Melhores Atributos: %d' % fit.n_features_)","f301b6fb":"# Vari\u00e1veis selecionadas\n\nvar_selec_treino = df_treino_UnderS[['ind_var30', 'ind_var30_0','num_var5','num_var8_0','num_var13_0', 'num_var13_corto_0', 'num_var13_corto',\n                              'num_var42', 'num_meses_var5_ult3', 'num_meses_var8_ult3']]","d1f67018":"# Transformando os dados para a mesma escala (entre 0 e 1)\n# Dados\nX_treino = var_selec_treino\n\n# Gerando a nova escala (normalizando os dados entre 0 e 1)\nX_treino = MinMaxScaler().fit_transform(X_treino)\n\n# Padronizando os dados\nX_treino = StandardScaler().fit_transform(X_treino)","a349731e":"# Carregando os dados\n\nY_treino = df_treino_UnderS['TARGET'].values\n\n# Definindo os valores para o n\u00famero de folds\nnum_folds = 10\nseed = 7\n\n# Separando os dados em folds\nkfold = KFold(num_folds, True, random_state = seed)\n\n# Criando o modelo\nmodelo = XGBClassifier().fit(X_treino, Y_treino)\n\n# Cross Validation\nresultado = cross_val_score(modelo, X_treino, Y_treino, cv = kfold)","5f256531":"#Vari\u00e1veis de teste selecionadas\n\nvar_selec_teste = teste[['ind_var30', 'ind_var30_0','num_var5','num_var8_0','num_var13_0', 'num_var13_corto_0', 'num_var13_corto',\n                              'num_var42', 'num_meses_var5_ult3', 'num_meses_var8_ult3']]","2359d92c":"# Dados de teste\nX_test = var_selec_teste\n\n# Normalizando os dados\nX_test = MinMaxScaler().fit_transform(X_test)\n\n# Padronizando os dados\nX_test = StandardScaler().fit_transform(X_test)\n\n# Previs\u00f5es com os dados de teste\npred = modelo.predict(X_test)","3ba06d41":"# Dados de submiss\u00e3o\nsubmission = pd.DataFrame()\nsubmission['ID'] = teste[\"ID\"]\nsubmission['TARGET'] = pred\n\nsubmission.to_csv('submission.csv', index = False)","24618dd6":"print(submission)","3249f735":"****Elimina\u00e7\u00e3o Recursiva de Atributos****","2040d85a":"Olhando para figura acima, fica f\u00e1cil perceber que o banco de dados est\u00e1 desbalanciado em rela\u00e7\u00e3o a vari\u00e1vel TARGET.","96b8f774":"**Balanciando os Dados**\n\nM\u00e9todo UNDERSAMPLING\n\nAntes de fazer uma sele\u00e7\u00e3o das vari\u00e1veis mais importantes para o modelo,\nser\u00e1 feito o balanciamento dos dados pelo m\u00e9todo UNDERSAMPLING. T\u00e9cnica\nbastante utilizada, na qual iguala a categoria mais alta em rela\u00e7\u00e3o \u00e0 mais baixa da \nvari\u00e1vel target.","97f5ab01":"****An\u00e1lise Explorat\u00f3ria****"}}