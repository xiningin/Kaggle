{"cell_type":{"08f71894":"code","63189db9":"code","07f584ba":"code","c04de56c":"code","b079b1a6":"code","a5112717":"code","903ee9ee":"code","b92219c4":"code","ffc9e56e":"code","abfb3585":"code","bb3b145e":"code","032ff049":"code","44d2908e":"code","006396c6":"code","043d27b5":"code","854b5401":"code","1cddd9a9":"markdown","f4dcf1a2":"markdown","fc75bfb4":"markdown","a2aab207":"markdown","d7e93b0b":"markdown","71433e25":"markdown","b990f475":"markdown","bee772b7":"markdown","c0503bb2":"markdown","a33c54a8":"markdown","48911484":"markdown","25052f4a":"markdown","05a02798":"markdown","51b262dd":"markdown","b1fe460b":"markdown","3a07de64":"markdown","a8821a4a":"markdown"},"source":{"08f71894":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns; sns.set()\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport pycountry","63189db9":"os.popen('cd ..\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018; ls').read()\npath = r'..\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018\/data-final.csv'\ndf_full = pd.read_csv(path, sep='\\t')\npd.options.display.max_columns = 999\ndf_full.tail()","07f584ba":"df = df_full.copy()","c04de56c":"start_rows = len(df)\ndf = df.replace(0, np.nan).dropna(axis=0).reset_index(drop=True)\nremove_rows = start_rows - len(df)\n\nprint('Information:\\n')\nprint(f'Removed {remove_rows:,} rows that had incomplete pieces of data.')\nprint(f'This was {round(remove_rows\/start_rows * 100,2)}% of the total data.')\nprint(f'\\nNumber of countries: {len(set(df.country.values))}')","b079b1a6":"df_zeros = df_full[(df_full == 0).any(1)]","a5112717":"country_dict = {i.alpha_2: i.alpha_3 for i in pycountry.countries}\ncountries = (\n  pd.DataFrame(df.country.value_counts())\n  .T\n  .drop('NONE', axis=1)\n  .rename(columns=country_dict, index={'country': 'count'})\n)\n\ncountries","903ee9ee":"countries_rank = countries.T.rename_axis('iso_a3').reset_index()\ncountries_rank['count_log'] = np.log(countries_rank['count'])\ncountries_rank['rank'] = countries_rank['count'].rank()\ncountries_rank.T","b92219c4":"sns.set_style(\"white\")\n\nfile = gpd.datasets.get_path('naturalearth_lowres')\nworld = gpd.read_file(file)\nworld = world[world.continent != 'Antarctica']\nworld_map = pd.merge(world, right=countries_rank, how='left', on='iso_a3').fillna(0)\n\nfig, ax = plt.subplots(figsize=(20,10))\nax.set_xticks([])\nax.set_yticks([])\nax.set_title('Assessment Counts of each Country (log scaled)', size=16)\nworld_map.drop(159).plot(column='count_log', cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8'); sns.set()\nplt.box(on=None)","ffc9e56e":"pos_questions = [ # positive questions adding to the trait.\n    'EXT1','EXT3','EXT5','EXT7','EXT9',\n    'EST1','EST3','EST5','EST6','EST7','EST8','EST9','EST10',\n    'AGR2','AGR4','AGR6','AGR8','AGR9','AGR10',\n    'CSN1','CSN3','CSN5','CSN7','CSN9','CSN10',\n    'OPN1','OPN3','OPN5','OPN7','OPN8','OPN9','OPN10',\n]\nneg_questions = [ # negative (negating) questions subtracting from the trait.\n    'EXT2','EXT4','EXT6','EXT8','EXT10',\n    'EST2','EST4',\n    'AGR1','AGR3','AGR5','AGR7',\n    'CSN2','CSN4','CSN6','CSN8',\n    'OPN2','OPN4','OPN6',\n]\n\ndf[pos_questions] = df[pos_questions].replace({1:-2, 2:-1, 3:0, 4:1, 5:2})\ndf[neg_questions] = df[neg_questions].replace({1:2, 2:1, 3:0, 4:-1, 5:-2})\ncols = pos_questions + neg_questions\ndf = df[sorted(cols) + ['country']]\ndf.tail()","abfb3585":"traits = ['EXT', 'EST', 'AGR', 'CSN', 'OPN']\ntrait_labels = ['Extroversion', 'Neuroticism', 'Agreeableness', 'Conscientiousness', 'Openness']\n\nfor trait in traits:\n    trait_cols = sorted([col for col in df.columns if trait in col and '_E' not in col])\n    df[trait] = df[trait_cols].sum(axis=1)\n\ndf = df.rename(columns={k:v for k,v in zip(traits, trait_labels)})\ndf[trait_labels].tail()","bb3b145e":"fig, axs = plt.subplots(ncols=2, nrows=3, figsize=(18,9))\nplt.subplots_adjust(left=None, bottom=None, right=None, top=1.3, wspace=None, hspace=None)\nrow = -1; col = 2\nfor i, trait in enumerate(trait_labels):\n    if not i % 2:\n        row += 1\n    if not i % 2:\n        col -= 2\n    i += col\n    sns.distplot(df[trait], ax=axs[row][i], axlabel='', kde=False, bins=40).set_title(trait, pad=10)\nfig.delaxes(axs[2][1])","032ff049":"df_corr = df[trait_labels].corr().round(3).replace(1, '')\nfor i in range(5):\n    df_corr.iloc[i, i:] = ''\ndf_corr.iloc[1:, :-1]","44d2908e":"pp = sns.pairplot(df[trait_labels].sample(10000), diag_kind='kde', kind='reg', markers='', corner=True)\npp.fig.set_size_inches(10,10)","006396c6":"plt.style.use('default')\nfig, axs = plt.subplots(ncols=3, nrows=2, figsize=(18,3))\nplt.subplots_adjust(left=None, bottom=None, right=None, top=3.5, wspace=None, hspace=None)\nrow = -1; col = 3\ncolors = ['#de425b', '#ec9c9d', '#f1f1f1', '#9fc08f', '#488f31']\nfor i, (trait, label) in enumerate(zip(traits, trait_labels)):\n    if not i % 3:\n        row += 1\n    if not i % 3:\n        col -= 3\n    i += col\n    trait_cols = sorted([col for col in cols if trait in col and '_E' not in col])\n    trait_cols.pop(1)\n    trait_cols += [trait +'10']\n    g = df[trait_cols].apply(lambda col: col.value_counts()).T.plot(kind='bar', stacked=True, ax=axs[row][i], color=colors)\n    g.set(yticklabels=[], title = label + ' Responses')\n    g.legend_.remove()\nfig.delaxes(axs[1][2])","043d27b5":"top_countries = countries_rank[countries_rank['count'] > 1000].iso_a3\n\ncountry_medians = df[trait_labels + ['country']].copy()\ncountry_medians['country'] = country_medians['country'].replace(country_dict)\ncountry_medians = country_medians[country_medians.country.isin(top_countries)].groupby('country').median()\n\nmin_val, max_val = min(country_medians.min()), max(country_medians.max())\n\ncountry_medians = country_medians.reset_index().rename(columns={'country': 'iso_a3'})","854b5401":"world_map_medians = pd.merge(world, right=country_medians, how='left', on='iso_a3')\n\nfor trait in trait_labels:\n    fig, ax = plt.subplots(figsize=(10,5))\n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_title(f'\\n\\nMedian Values for {trait}', size=16)\n    world_map_medians.fillna(0).plot(column=trait, cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8', vmin=min_val, vmax=max_val); sns.set()\n    plt.box(on=None)","1cddd9a9":"#### Querying the personality quiz results.","f4dcf1a2":"The data source and questions can be found here: https:\/\/www.kaggle.com\/tunguz\/big-five-personality-test#codebook.txt <br>\nA brief analysis of the company that pulled the data: https:\/\/openpsychometrics.org\/printable\/big-five-personality-test.pdf","fc75bfb4":"#### Imports","a2aab207":"#### We can plot the median values of each personality trait for all countries above 1,000 quizes complete.","d7e93b0b":"#### We can also see how each trait correlates with another.","71433e25":"#### Now we can plot each trait's distribution.","b990f475":"## Question mappings","bee772b7":"#### Incase we want to analyze the rows that we removed","c0503bb2":"#### We can map each question's distribution as well.\n#### The red color represents \"strongly disagree\" and green represents \"strongly agree\".\n#### Since we remapped the questions, the green color means the response contributes points towards that trait.","a33c54a8":"#### The questions are phrased in a way to add or subtract points from a particular personality traint\n#### Consequently, we need to standardize the results by a simple remap.","48911484":"#### Log scaling the country counts to make the map vizualization's color smoother; the US makes up over half of the quiz results.","25052f4a":"#### Pairplots are useful to visualize correlations and distributions, too.\n#### Although, these are expensive computation so we must use a sample of the data.","05a02798":"|Label|Phrased|Prompt|\n|:---|:----|:----|\n|EXT1|P|I am the life of the party.|\n|EXT2|N|I don't talk a lot.|\n|EXT3|P|I feel comfortable around people.|\n|EXT4|N|I keep in the background.|\n|EXT5|P|I start conversations.|\n|EXT6|N|I have little to say.|\n|EXT7|P|I talk to a lot of different people at parties.|\n|EXT8|N|I don't like to draw attention to myself.|\n|EXT9|P|I don't mind being the center of attention.|\n|EXT10|N|I am quiet around strangers.|\n|EST1|P|I get stressed out easily.|\n|EST2|N|I am relaxed most of the time.|\n|EST3|P|I worry about things.|\n|EST4|N|I seldom feel blue.|\n|EST5|P|I am easily disturbed.|\n|EST6|P|I get upset easily.|\n|EST7|P|I change my mood a lot.|\n|EST8|P|I have frequent mood swings.|\n|EST9|P|I get irritated easily.|\n|EST10|P|I often feel blue.|\n|AGR1|N|I feel little concern for others.|\n|AGR2|P|I am interested in people.|\n|AGR3|N|I insult people.|\n|AGR4|P|I sympathize with others' feelings.|\n|AGR5|N|I am not interested in other people's problems.|\n|AGR6|P|I have a soft heart.|\n|AGR7|N|I am not really interested in others.|\n|AGR8|P|I take time out for others.|\n|AGR9|P|I feel others' emotions.|\n|AGR10|P|I make people feel at ease.|\n|CSN1|P|I am always prepared.|\n|CSN2|N|I leave my belongings around.|\n|CSN3|P|I pay attention to details.|\n|CSN4|N|I make a mess of things.|\n|CSN5|P|I get chores done right away.|\n|CSN6|N|I often forget to put things back in their proper place.|\n|CSN7|P|I like order.|\n|CSN8|N|I shirk my duties.|\n|CSN9|P|I follow a schedule.|\n|CSN10|P|I am exacting in my work.|\n|OPN1|P|I have a rich vocabulary.|\n|OPN2|N|I have difficulty understanding abstract ideas.|\n|OPN3|P|I have a vivid imagination.|\n|OPN4|N|I am not interested in abstract ideas.|\n|OPN5|P|I have excellent ideas.|\n|OPN6|N|I do not have a good imagination.|\n|OPN7|P|I am quick to understand things.|\n|OPN8|P|I use difficult words.|\n|OPN9|P|I spend time reflecting on things.|\n|OPN10|P|I am full of ideas.|","51b262dd":"#### Removing rows with null values.","b1fe460b":"#### \"P\" means the prompt is positively phrased whereas \"N\" means it is negetively phrased.\n#### This is why we had to remap the questions above.","3a07de64":"#### Counting the quizes from each country","a8821a4a":"#### Now that we have the questions standardize, we can sum the results of each row.\n#### For each of the 5 traits, the 10 question results add to one sum, resulting in the only 5 columns."}}