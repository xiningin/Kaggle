{"cell_type":{"207af84f":"code","c02aaa75":"code","830ceb60":"code","ad329d2f":"code","ee1e1b12":"code","0f3d25f0":"code","4d8ae5c5":"code","730c1f9a":"code","5ee1f0da":"code","6266997c":"code","61d8b2cb":"code","8c0f40b8":"code","7906bd7f":"code","92d5e370":"code","7d0d153f":"code","5fef8c22":"code","0a3cad04":"code","ae60de44":"code","fa846e38":"code","3f78005d":"code","aed50b2b":"code","3aac1dd5":"code","72651a33":"code","a841b294":"code","877879b6":"markdown","05e23e42":"markdown","0ec70087":"markdown","fb2ab8c3":"markdown","14106cb7":"markdown"},"source":{"207af84f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c02aaa75":"# Libraries\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","830ceb60":"from sklearn.datasets import load_digits","ad329d2f":"digits = load_digits() #Data set about images the 0 to 9 numbers","ee1e1b12":"digits","0f3d25f0":"digits.data.shape","4d8ae5c5":"digits_sample = digits.data[0]\ndigits_sample","730c1f9a":"# This is a problem about supervised learning, so we have labbels data for target results\ndigits.target.shape","5ee1f0da":"digits.target[0] # the image in the postion 0 represent to 0 number :)","6266997c":"digit_reshape = digits_sample.reshape(8, 8) # digits_sample is one dimension array\ndigit_reshape # This have dimension of 8 x 8","61d8b2cb":"plt.imshow( digit_reshape )","8c0f40b8":"numbers_sample = list(zip(digits.data[30:40], digits.target[30:40]))\nnumbers_sample","7906bd7f":"# graph more images \nplt.figure(figsize = (20,20))\nfor index, (image, labbel) in enumerate(numbers_sample):\n    temp_reshape = image.reshape(8,8)\n    plt.subplot(1, len(numbers_sample), index+1)\n    plt.imshow(temp_reshape)\n    plt.title(f\" value {labbel}\")\n    ","92d5e370":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size = 0.2, random_state = 42)","7d0d153f":"print(\"len Train\", len(x_train))\nprint(\"Len test\", len(x_test))","5fef8c22":"from sklearn.linear_model import LogisticRegression","0a3cad04":"# Create our pipeline\n\nfrom sklearn.pipeline import make_pipeline\n\nfrom sklearn.preprocessing import StandardScaler\n\npipe = make_pipeline(StandardScaler(), LogisticRegression())\n","ae60de44":"# Train Model \n\npipe.fit(x_train, y_train)","fa846e38":"score = pipe.score(x_test, y_test)\nscore\n\n# presicion = numero de prediciones correctas \/ numero total de predicciones\n# 97% correct","3f78005d":"guinea_pig = x_test[0].reshape(1, -1) # like to tensor\npipe.predict(guinea_pig)\n\n","aed50b2b":"plt.imshow(guinea_pig.reshape(8, 8))","3aac1dd5":"# To do all preditions\n\npredictions = pipe.predict(x_test)\n\npredictions","72651a33":"from sklearn import metrics\ncm = metrics.confusion_matrix(y_test, predictions)\ncm\n","a841b294":"plt.figure(figsize = (9, 9))\nsns.heatmap(cm, annot = True, lineWidths = 1.5, square = True, cmap = \"Blues_r\")\nplt.title(f\"Score: {score}\", fontsize = 15)\nplt.xlabel(f\"Prediction Value\")\nplt.ylabel(f\"\")","877879b6":"# Regression logistics with Scikit Learn","05e23e42":"## Create matrix of confusion","0ec70087":"### Load and explore our data set","fb2ab8c3":"### Model","14106cb7":"### Graph our image"}}