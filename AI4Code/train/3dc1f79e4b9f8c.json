{"cell_type":{"f63e26ba":"code","39aa9238":"code","fa329f80":"code","813cd4cf":"code","73811b28":"code","95b1625d":"code","80a10eec":"code","e066a72c":"code","d8728c80":"code","361ee4c1":"code","298da5cb":"code","56a2bd86":"code","1537fe21":"code","958f3055":"code","7ec01829":"code","bf724eb3":"code","63d40be8":"code","9af276d0":"code","face94d2":"code","c818cce9":"code","dce0386a":"code","7231736e":"code","b62fbfdd":"code","667c2e33":"code","c4d8b953":"code","beff395d":"code","40eb668f":"code","0e4a67e0":"code","25f13129":"code","7972b6f0":"code","575dfbe1":"code","ff87ebd8":"code","030568eb":"code","21827b68":"code","df11214a":"code","070cadf3":"code","6e9422f6":"code","3b498574":"code","c627005a":"code","9796179f":"code","851b8cfc":"code","6b0c0235":"code","86aa03cb":"code","60e9e304":"code","04e64463":"code","7ea14618":"code","8a971949":"code","e466c441":"markdown","5c03e06c":"markdown","f37c0a6c":"markdown","ac3c6658":"markdown","a44c8b57":"markdown"},"source":{"f63e26ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39aa9238":"#load the data\ndata=pd.read_csv('..\/input\/churn-banking-prediction-analysis\/Churn_Modelling.csv')","fa329f80":"#check the dataset\ndata","813cd4cf":"#check the first 5 rows\ndata.head()","73811b28":"#check the last 5 rows\ndata.tail()","95b1625d":"data.info()","80a10eec":"data.describe(include='all')","e066a72c":"data.isnull().sum()","d8728c80":"sns.pairplot(data)\nplt.show()","361ee4c1":"corr=data.corr()\nplt.figure(figsize=(12,5))\nsns.heatmap(corr,annot=True,cmap=\"coolwarm\")\nplt.show()","298da5cb":"#drop the unrelevant columns\ndata.drop(['RowNumber','CustomerId','Surname'],axis=1,inplace=True)","56a2bd86":"sns.countplot(x=data.Exited)\nplt.show()","1537fe21":"sns.countplot(x=data.Geography[data.Exited==1])\nplt.show()","958f3055":"sns.countplot(x=data.Geography[data.Exited==0])\nplt.show()","7ec01829":"sns.countplot(x=data.Gender[data.Exited==0])\nplt.show()","bf724eb3":"sns.countplot(x=data.Gender[data.Exited==1])\nplt.show()","63d40be8":"#distplot\nplt.figure(figsize=(12,5))\nsns.histplot(data.CreditScore[data.Exited==0])\nsns.histplot(data.CreditScore[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","9af276d0":"sns.distplot(data.Age[data.Exited==0])\nsns.distplot(data.Age[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","face94d2":"sns.histplot(data.Age[data.Exited==0])\nsns.histplot(data.Age[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","c818cce9":"sns.histplot(data.Tenure[data.Exited==0])\nsns.histplot(data.Tenure[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","dce0386a":"sns.histplot(data.Tenure[data.Exited==0])\nsns.histplot(data.Tenure[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()\n","7231736e":"\nsns.histplot(data.Balance[data.Exited==0])\nsns.histplot(data.Balance[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()\n","b62fbfdd":"\nsns.histplot(data.NumOfProducts[data.Exited==0])\nsns.histplot(data.NumOfProducts[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","667c2e33":"sns.histplot(data.HasCrCard[data.Exited==0])\nsns.histplot(data.HasCrCard[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()\n","c4d8b953":"\n\nsns.histplot(data.IsActiveMember[data.Exited==0])\nsns.histplot(data.IsActiveMember[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()\n","beff395d":"\nsns.histplot(data.EstimatedSalary[data.Exited==0])\nsns.histplot(data.EstimatedSalary[data.Exited==1])\nplt.legend(['leaving','Not living'])\nplt.show()","40eb668f":"sns.swarmplot(x=data.Geography,y=data.Age,hue=data.Exited)\nplt.show()","0e4a67e0":"sns.swarmplot(x=data.Gender,y=data.Age,size=6)\nplt.show()","25f13129":"sns.countplot(data.Geography,hue=data.Gender)\nplt.show()","7972b6f0":"#label encoding\nfrom sklearn.preprocessing import LabelEncoder\nle1 = LabelEncoder()\ndata.Geography = le1.fit_transform(data.Geography)\n\nle2 = LabelEncoder()\ndata.Gender = le2.fit_transform(data.Gender)","575dfbe1":"data","ff87ebd8":"#i\/p o\/p selection\n\nip=data.drop(['Exited'],axis=1)\nop=data['Exited']","030568eb":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer([('Geography',OneHotEncoder(),[1])],remainder='passthrough')\n\nip = np.array(ct.fit_transform(ip),dtype = np.str)","21827b68":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.2)","df11214a":"\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","070cadf3":"from sklearn.linear_model import LogisticRegression\nalg=LogisticRegression()","6e9422f6":"#train the algorithm with the training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)","3b498574":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","c627005a":"accuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","9796179f":"precission=metrics.precision_score(yts,yp)\nprint(precission)","851b8cfc":"recall=metrics.recall_score(yts,yp)\nprint(recall)","6b0c0235":"from sklearn import svm\n\nalg=svm.SVC(C=100,gamma=0.01)","86aa03cb":"\n#train the algorithm with training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)\n","60e9e304":"\nfrom sklearn import metrics\naccuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)\n","04e64463":"\nrecall = metrics.recall_score(yts,yp,average='macro')\nprint(recall)","7ea14618":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=3)\nknn.fit(xtr,ytr)\nyp=knn.predict(xts)\n","8a971949":"\nfrom sklearn import metrics\naccuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)\n\nrecall = metrics.recall_score(yts,yp,average='macro')\nprint(recall)\n","e466c441":"#  THANK YOU\n","5c03e06c":"# Analyzing the dataset ","f37c0a6c":"# KNN","ac3c6658":"# SVM","a44c8b57":"If it is understood well !!!! please upvoted"}}