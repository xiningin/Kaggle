{"cell_type":{"7f32e444":"code","77a3f79e":"code","15259db4":"code","b52f8714":"code","328f1c6b":"code","442aaf6a":"code","c0b76e88":"code","b7d649c9":"code","b566bdb2":"code","63c2a6ab":"code","261099e8":"code","7bb93916":"code","27cab721":"code","1ae0600a":"code","3b13e097":"code","b6b4048f":"code","0f157398":"code","cf6f1e40":"code","900015d1":"code","93d16b4b":"code","a09e5177":"code","b53af360":"code","3a99131f":"code","451948a8":"code","fece7acd":"code","8e2f49b3":"code","996ab59c":"code","a9d81cb4":"code","84e88aae":"code","13b94189":"code","3206992b":"code","47564f55":"code","8f864cd4":"code","4ee85bf0":"code","03bdaeb4":"code","d2af1b95":"markdown","9ff42ffa":"markdown","4ed37961":"markdown","406bd299":"markdown","754533bd":"markdown","8582b607":"markdown","5e76bea6":"markdown","c7885d2b":"markdown","c11cc963":"markdown","386233fc":"markdown","12e614ac":"markdown","5fd7d0cb":"markdown","9b40b2fc":"markdown","8f19a014":"markdown","c308256e":"markdown","44bfd55a":"markdown","59a8c8da":"markdown","ed463ba6":"markdown","44117875":"markdown","3329a748":"markdown","fec62872":"markdown","38da8938":"markdown","5f333725":"markdown","3d0f8a4f":"markdown","456430fc":"markdown","48b0b724":"markdown","986cbd53":"markdown","01de9617":"markdown","e3c94f6f":"markdown","d0ddbda8":"markdown","d071e5a2":"markdown","ba722603":"markdown","67951a94":"markdown","7ce9fe9d":"markdown","ef81ff8a":"markdown","78ef69d1":"markdown","97e34712":"markdown"},"source":{"7f32e444":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","77a3f79e":"#importing library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score,f1_score,classification_report,plot_confusion_matrix,confusion_matrix\nfrom sklearn.preprocessing import OneHotEncoder,OrdinalEncoder,StandardScaler,MinMaxScaler,PowerTransformer,FunctionTransformer\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.linear_model import LogisticRegression,RidgeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier,GradientBoostingClassifier,RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom xgboost.sklearn import XGBClassifier\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\nimport cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\nfrom plotly import tools\n\n\n%matplotlib inline \n","15259db4":"#Load the dataset and check the data head.\ndf=pd.read_csv(\"..\/input\/heart-attack\/Heart Attack Data Set.csv\")\ndf.head()","b52f8714":"#check the rows and columns number.\nprint(f\"number of rows:--> {df.shape[0]} and number of columns:--> {df.shape[1]}\")","328f1c6b":"#chack the data information\ndf.info()","442aaf6a":"#check for missing values \ndef checking_m(df):\n    null_v = df.isnull().sum().sort_values(ascending=False)\n    null_percent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\n    null_v = pd.concat([null_v, null_percent], axis=1, keys=['Missing_Number', 'Missing_Percent'])\n    return null_v\n\nchecking_m(df)","c0b76e88":"#check for dublicated rows\nprint(\"Numbers of duplicated rows :\",df.duplicated().sum())","b7d649c9":"#dropping the duplicated rows \ndf=df.drop_duplicates(keep=\"first\")\nprint(\"After removing,now number of duplicated rows are:\",df.duplicated().sum())","b566bdb2":"#check data description\ndf.describe().T.style.bar(subset=['mean'], color='#205ff2').background_gradient(subset=['std'], cmap='mako').background_gradient(subset=['50%'], cmap='coolwarm')","63c2a6ab":"#check the correlation between terget and each of columns\ndf.corr()[\"target\"]","261099e8":"plt.figure(figsize=(20,10))\n\n#plot heat map\nsns.heatmap(df.corr(),annot=True,cmap=\"gist_heat\",linecolor='black')","7bb93916":"numeric_col=[\"age\",\"trestbps\",\"chol\",\"thalach\",\"oldpeak\"]","27cab721":"df[numeric_col].iplot(kind='histogram',subplots=True)","1ae0600a":"i=1\nfor col in numeric_col:\n    fig = px.box(df, x=col, points=\"all\",template=\"plotly_dark\",width=500,height=250)\n\n    fig.show()","3b13e097":"i=1\nplt.figure(figsize=(25,90))\nfor col in numeric_col:\n    plt.subplot(11,2,i)\n    sns.kdeplot(data=df,hue=\"target\",x=col,shade = \"fill\")\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"count\",fontsize=25)\n    i=i+1\n    plt.subplot(11,2,i)\n    sns.boxplot(df[\"target\"],df[col])\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(\"Heart atteck\",fontsize=25)\n    plt.ylabel(col,fontsize=25)\n    i=i+1\n\nplt.show()","b6b4048f":"pd.DataFrame(df['target'].value_counts()).rename({\"HeartAttack\":\"Counts\"}, axis = 1).rename_axis(\"HeartAttack\")","0f157398":"fig = px.pie(df, names = \"target\",\n             title = \"<b>Counts in HeartAttack<\/b>\",\n             hole = 0.4, template = \"plotly_dark\",\n            width=600,\n            height=400)\n\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 2)))\n\n\nfig.show()","cf6f1e40":"encoded_cat=[\"sex\",'cp','fbs','restecg','exang','slope','ca','thal']","900015d1":"i=1 \ncolors=[\"#00FFFF\",\"#FFA500\",\"#ADD8E6\",\"#ED00D9\",\"#ED1400\"]\ntextprops = {\"fontsize\":22}\nplt.figure(figsize=(25,120))\nfor col in encoded_cat:\n    plt.subplot(11,3,i)\n    df[col].value_counts().plot(kind=\"pie\",autopct=\"%.2f%%\",colors=colors,textprops=textprops,shadow=True, radius = 1.2)\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"count\",fontsize=25)\n    i=i+1\n    ","93d16b4b":"i=1\nplt.figure(figsize=(25,90))\nfor col in encoded_cat:\n    plt.subplot(11,2,i)\n    sns.kdeplot(data=df,hue=\"target\",x=col,shade = \"fill\")\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"\",fontsize=25)\n    i=i+1\n    plt.subplot(11,2,i)\n    sns.histplot(data=df,hue=\"target\",x=col)\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    plt.ylabel(\"\",fontsize=25)\n    i=i+1\n\nplt.show()","a09e5177":"# Get the features and terget columns\nX=df.iloc[:,0:-1]\ny=df.target","b53af360":"#let find the skewed col and fix them\n    \nskew_limit=0.75 # limit for skewed col\nskew_vals=X[numeric_col].skew()\nskew_col=skew_vals[abs(skew_vals)>skew_limit].sort_values(ascending =False)\n\n#graphically represent the skewed col\ni=1    \nprint(\"Columns names: \",skew_col.index)\nprint(\"\\n\")\nprint(\"skewed value:--->>\\n\",skew_col)\nplt.figure(figsize=(40,60))\nfor col in skew_col.index:\n    plt.subplot(8,2,i)\n    sns.distplot(X[col],color=\"r\")\n    plt.xticks(fontsize=25)\n    plt.yticks(fontsize=25)\n    plt.xlabel(col,fontsize=25)\n    i=i+1\n        \n\nplt.show()","3a99131f":"#fix the skewness using function transformer\nft=FunctionTransformer(func=np.log1p)\nskew=['oldpeak',\"chol\"]\nX[skew]=ft.fit_transform(X[skew])","451948a8":"X.head()","fece7acd":"#It is a good practise to split the data to avoiding the data leakage \n#train test split  \nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)\nprint(\"X_train shape: \",x_train.shape)\nprint(\"X_test shape: \",x_test.shape)\nprint()\nprint(\"Y_train shape: \",y_train.shape)\nprint(\"Y_test shape: \",y_test.shape)\n","8e2f49b3":"# Using standard scaler\nsc=StandardScaler()\nm=MinMaxScaler()\nx_train_scaled=sc.fit_transform(x_train)\nx_test_scaled=sc.transform(x_test)\n\nx_train = pd.DataFrame(x_train_scaled, columns = x_train.columns[:])\nx_test = pd.DataFrame(x_test_scaled, columns = x_test.columns[:])\nx_train.head()","996ab59c":"#this function used to evalute the models with features and terget.\ndef models_score(models, X_train, X_test, y_train, y_test):    \n    \n    scores = {}\n    \n    for name, model in models.items():\n        model.fit(X_train, y_train)\n        y_pred=model.predict(X_test) \n        scores[name] = model.score(X_test,y_test)\n        #printing the model name and accuracy !!!!!\n        print(\"Model name: \",model)\n        print(\"Accuracy :--->>\",accuracy_score(y_test,y_pred))\n        print()\n        print(classification_report(y_test,y_pred))\n        print(\"Confusion matrix:--->>\\n\",confusion_matrix(y_test,y_pred)) \n        print(\"\\n<<<<------------------------------------------------------------->>>>\\n\")\n           \n   \n    model_scores = pd.DataFrame(scores, index=['Score']).transpose()\n    model_scores = model_scores.sort_values('Score',ascending=False)\n    return model_scores","a9d81cb4":"#initialize the models \nmodels = {\"LogisticRegression\":LogisticRegression(),\n          \"SVC\":SVC(random_state=42),\n          \"Ridge\":RidgeClassifier(),\n          \"DecisionTree\":DecisionTreeClassifier(),\n          \"GradiantBoost\":GradientBoostingClassifier(),\n         \"RandomForest\":RandomForestClassifier(random_state=42),\n         \"XgBoost\": XGBClassifier(),\n         \"KNeighborsClassifier\":KNeighborsClassifier()}","84e88aae":"#Calling the function\nmodel_scores = models_score(models, x_train, x_test, y_train, y_test)","13b94189":"model_scores","3206992b":"model_scores = model_scores.reset_index().rename({\"index\":\"Algorithms\"}, axis = 1)\n\nmodel_scores.style.bar()","47564f55":"fig = px.bar(data_frame = model_scores,\n             x=\"Algorithms\",\n             y=\"Score\",\n             color=\"Algorithms\", title = \"<b>Models Score<\/b>\", template = 'plotly_dark')\n\nfig.update_layout(bargap=0.2)\n\nfig.show()","8f864cd4":"label = model_scores['Algorithms']\nvalue = model_scores['Score']\n\nfig = go.Figure(data=[go.Pie(labels = label, values = value, rotation = 90)])\n\nfig.update_traces(textposition='inside',\n                  textinfo='percent+label',\n                  marker=dict(line=dict(color='#000000', width = 1.5)))\n\nfig.update_layout(title_x=0.5,\n                  title_font=dict(size=20),\n                  uniformtext_minsize=15)\n\nfig.show()","4ee85bf0":"#knn classifier.\nknn=KNeighborsClassifier()\nknn.fit(x_train,y_train)\nprint(\"Confusion matrix:------>>>>\\n\")\nplot_confusion_matrix(knn,\n                      x_test, y_test,\n                      cmap=\"cool\",\n                      display_labels = ['0', '1'])\nplt.grid(False)\nplt.show();","03bdaeb4":"#Random forest classifier.\nrf=RandomForestClassifier(random_state=42)\nrf.fit(x_train,y_train)\nprint(\"Confusion matrix:---------->>>\\n\")\nplot_confusion_matrix(rf,\n                      x_test, y_test,\n                      cmap=\"cool\",\n                      display_labels = ['0', '1'])\nplt.grid(False)\nplt.show();","d2af1b95":"<a id=\"10\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcca Visualize Model Score<\/p>","9ff42ffa":"<b>No missing or Nan values found , great \ud83d\ude01","4ed37961":"<b>\ud83d\ude4b\u200d\u2642\ufe0f\ud83d\ude4b\u200d\u2640\ufe0f Hi all !!! we are going to work with heart attack classifiction dataset,If you like this notebook then plz consider a upvote for me and if don't plz drop your advise or comment so that i improve my skill \ud83d\ude0e\ud83d\ude0e","406bd299":"<a id=\"7.2\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83d\udc31\u200d\ud83c\udfcdTrain test split<\/p>","754533bd":"<a id=\"\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\"> \ud83d\udea2Data Story<\/p>","8582b607":"There are 13 attributes: \n1. Age: Age (in years) .\n2. Sex: gender (1 = male; 0 = female).\n3.ChestPain: Chest Pain type -- 1: typical angina (all criteria present) -- 2: atypical angina (two of three criteria satisfied) -- 3: non-anginal pain (less than one criteria satisfied) -- 4: asymptomatic (none of the criteria are satisfied).\n\n4. Restbps: Resting Blood pressure (in mmHg, upon admission to the hospital). \n5. Chol: serum cholesterol in mg\/dL. \n6. Fbs: fasting blood sugar > 120 mg\/dL (likely to be diabetic) 1 = true; 0 = false .\n7. RestECG: Resting electrocardiogram results -- Value 0: normal -- Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV) -- Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria .\n8. MaxHR: Greatest number of beats per minute your heart can possibly reach during all-out strenuous exercise.\n9.Exang: exercise induced angina (1 = yes; 0 = no).\n10. Oldpeak: ST depression induced by exercise relative to rest (in mm, achieved by subtracting the lowest ST segment points during exercise and rest).\n\n11. Slope: the slope of the peak exercise ST segment, ST-T abnormalities are considered to be a crucial indicator for identifying presence of ischaemia -- Value 1: upsloping -- Value 2: flat -- Value 3: downsloping .\n12.Ca: number of major vessels (0-3) colored by fluoroscopy. Major cardial vessels are as goes: aorta, superior vena cava, inferior vena cava, pulmonary artery (oxygen-poor blood --> lungs), pulmonary veins (oxygen-rich blood --> heart), and coronary arteries (supplies blood to heart tissue).\n13. AHD: 0 = normal; 1 = fixed defect (heart tissue can't absorb thallium both under stress and in rest); 2 = reversible defect (heart tissue is unable to absorb thallium only under the exercise portion of the test)\n14.Target: 0 = no disease, 1 = disease.\n\n\nReference :   https:\/\/www.kaggle.com\/pritsheta\/heart-attack","5e76bea6":"<b>The classes of target columns is balanced or no imbalanced data or classes ,great\ud83e\udd29\ud83e\udd29","c7885d2b":"<a id=\"6.1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udd25 Numerical columns EDA<\/p>","c11cc963":"<a id=\"6\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udd25 EDA & Visualization<\/p>","386233fc":"<b> No highly correlated independent features or no multicolinarity problems \ud83d\ude0e","12e614ac":"<a id=\"4\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcc8 Statistical information of Dataframe <\/p>","5fd7d0cb":"<b> we got some columns contain outliers ,I think it's will be fine so we keep this outliers .","9b40b2fc":"<b>yahoooooo ! we done all the steps ,now our features are ready to fit in the models \ud83d\ude1c","8f19a014":"<a id=\"7\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\ude82Features Engineering<\/p>","c308256e":"<a id=\"7.1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83c\udfafNormalized skewed columns <\/p>","44bfd55a":"<b>Analysis of encoded categorical columns:\n    \n   Higher chance of getting heart atteck if these staisfied:\n    \n       1.sex==female (That's interesting \ud83e\udd23). \n    \n       2.chest pain types==non-anginal pain .\n    \n       3.fasting blood sugar > 120 mg\/dL (likely to be diabetic) == 1 or true.\n    \n       4.Resting electrocardiogram results ==1 or having ST-T wave abnormality.\n    \n       5.exercise induced angina == 0 or no.\n    \n       6.slope== 3 or downsloping.\n    \n       7.number of major vessels == superior vena cava.\n      ","59a8c8da":"<a id=\"11\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83c\udf08Confusion matrix of top two models<\/p>","ed463ba6":"<a id=\"8\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83e\udd16 Create & Train Model<\/p>","44117875":"<b> Analysis of numerical col:\n    \n    1.we got some skewed columns such as oldpeak.\n    2.Higher chance of getting heart atteck if these staisfied:\n        1.->45-55 years ages peoples.\n        2.->120-140 (mmHG) resting bps .\n        3.->200-300(mg\/dL) cholesterol.\n        4.->Higher the thalach values higher the heart attck chances.\n        5.->lower the oldpeak vakues higher the heart attack chances.","3329a748":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n          text-align: center; font-size:250%;border-radius:20px 80px;\">Heart Attack Prediction<\/p>","fec62872":"<a id=\"3.1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83e\udd3c\u200d\u2640\ufe0fDuplicated rows <\/p>","38da8938":"<b> we mathemetically transform the skewed columns , great !!!","5f333725":"<a id=\"9\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83e\uddee Models Score<\/p>","3d0f8a4f":"<b> Damn\ud83e\udd75 ! 2 skewed col found , we should fix it !","456430fc":"<a id=\"\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udccb TABLE OF CONTENTS<\/p>","48b0b724":"<b>\n    \n 1.All columns looks good but old peak column is right skewed.we fix it later !!! ","986cbd53":"<a id=\"\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83c\udf08Thank you \ud83c\udf83 Happy kaggling\ud83d\udc45<\/p>","01de9617":"![h.jpg](attachment:h.jpg)","e3c94f6f":"<a id=\"1\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83c\udfb0 Importing Libraries<\/p>","d0ddbda8":"<b> Oh no , 1 duplicated rows found \ud83e\udd75,let's remove it \ud83d\ude19","d071e5a2":"<a id=\"3\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\uded2Missing values <\/p>","ba722603":"<a id=\"7.3\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\"> \ud83c\udfafScaling the features<\/p>","67951a94":"* [1. Importing Libraries](#1)\n    \n* [2. Meta information of dataframe](#2)\n    \n* [3.Missing values.](#3)\n\n* [3.1 Duplicated rows.](#3.1)\n    \n* [4.Statistical information of Dataframe](#4) \n\n* [5.Visualize correlation of independent features and check multicolinarity problems](#5)\n    \n* [6. EDA & Visualization](#6)\n\n    * [6.1. Numerical EDA](#6.1)\n    \n    * [6.2. Terget EDA](#6.2)\n    \n    * [6.3. Categorical EDA](#6.3)\n        \n    \n* [7. \ud83c\udfcdFeature Engineering](#7)\n\n    * [7.1.\ud83c\udfcdNormalized skewed col](#7.1)\n    \n    * [7.2.\ud83c\udfcdTrain test split](#7.2)\n       \n    * [7.3. Scaling Features](#7.3)\n       \n    \n\n* [8. Create & Train Model](#8)\n\n* [9. Models Score](#9)\n\n* [10. Visualize Models Score](#10)\n\n* [11. Plot Confusion Matrix for best 2 models](#11)\n\n\n","7ce9fe9d":"<a id=\"6.2\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:250%;border-radius:20px 80px;\">\ud83d\udd25 Target column EDA<\/p>","ef81ff8a":"<a id=\"5\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:150%;border-radius:20px 80px;\">\ud83c\udfb0 Visualize correlation of independent features and check multicolinarity problems <\/p>","78ef69d1":"<a id=\"6.3\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udd25 Encoded categorical columns EDA<\/p>","97e34712":"<a id=\"2\"><\/a>\n<div class=\"list-group\" id=\"1\" role=\"tablist\">\n<p style=\"padding: 20px; background-color:#7FDBFF;color: Black;font-weight: bold;\n              text-align: center; font-size:220%;border-radius:20px 80px;\">\ud83d\udcdd Meta information \n    about Dataframe<\/p>"}}