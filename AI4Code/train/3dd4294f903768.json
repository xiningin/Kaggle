{"cell_type":{"fa075d18":"code","a438de9a":"code","caca8d81":"code","5398cf2f":"code","0a27973e":"code","1f7affd7":"code","1d54660a":"code","29e2085b":"code","71166e1f":"code","311d9018":"code","e6dc6635":"code","a52887d0":"code","4d487911":"code","5290a883":"code","77428b09":"code","61034ffd":"code","3f48605c":"code","52b2c24b":"code","e07ff7f7":"code","a935f1fc":"code","8765499f":"code","57fcace1":"code","887086e1":"code","c47ebe88":"code","b4e44c38":"code","ac94968b":"code","43a09d21":"code","83ca4871":"code","e92177d0":"code","beb6e747":"code","50961c43":"code","d7b240bf":"code","4c5e9304":"code","803714b6":"code","5052db27":"code","4b1d601a":"code","2f533a9f":"code","206f9343":"code","5f59683a":"code","5048a0ec":"code","d999bef3":"code","e145b283":"markdown","0373ed2b":"markdown","bd4073ac":"markdown","6b5b6a0e":"markdown","3dce81c9":"markdown","60f37e74":"markdown","71bab32e":"markdown","3bddc159":"markdown","3d74b3fa":"markdown","54efcaf4":"markdown","6f453315":"markdown","f0edec9b":"markdown","34b2ae24":"markdown","2c7c067e":"markdown","b43a09c0":"markdown","be3f4b56":"markdown","60e3b43d":"markdown","8e2a8eb0":"markdown","c74631a5":"markdown","41afb61f":"markdown","9833c950":"markdown","ca452c70":"markdown","65c1a0b2":"markdown","9eda6df5":"markdown","65b7e098":"markdown","a62fcff7":"markdown","726cfc34":"markdown","dbcc5674":"markdown","4d724aba":"markdown","76eca1f9":"markdown","bd7dd0b5":"markdown","86005220":"markdown","169bc0e1":"markdown","20a52d8b":"markdown","fbddc3af":"markdown","c8588e49":"markdown","b3abcde5":"markdown","1dd23326":"markdown","4fc324ab":"markdown"},"source":{"fa075d18":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","a438de9a":"df = pd.read_csv('..\/input\/zomato.csv', encoding='iso-8859-1')","caca8d81":"df.head(2)","5398cf2f":"df.columns","0a27973e":"df.shape","1f7affd7":"df.info()","1d54660a":"df.describe()","29e2085b":"sns.set(rc={'figure.figsize':(9,7)})\nsns.countplot(x='Has Table booking',data=df,palette='viridis')","71166e1f":"sns.countplot(x='Has Online delivery',data=df,palette='viridis',order=['Yes','No'])","311d9018":"sns.countplot(x='Is delivering now',data=df,palette='viridis',order=['Yes','No'])","e6dc6635":"df['Is delivering now'].value_counts()","a52887d0":"df['Switch to order menu'].value_counts()","4d487911":"sns.countplot(x='Price range',data=df,palette='viridis')","5290a883":"sns.countplot(x='Rating text',data=df,palette='viridis')","77428b09":"sns.countplot(x='Rating color',data=df,palette='viridis')","61034ffd":"sns.distplot(df['Aggregate rating'], hist=True,kde=False,bins=20,color = 'blue',hist_kws={'edgecolor':'black'})","3f48605c":"df['Currency'].unique()","52b2c24b":"df['new cost'] = 0","e07ff7f7":"df['Currency'].unique()","a935f1fc":"d = {'Botswana Pula(P)':0.095, 'Brazilian Real(R$)':0.266,'Dollar($)':1,'Emirati Diram(AED)':0.272,\n    'Indian Rupees(Rs.)':0.014,'Indonesian Rupiah(IDR)':0.00007,'NewZealand($)':0.688,'Pounds(\\x8c\u00a3)':1.314,\n    'Qatari Rial(QR)':0.274,'Rand(R)':0.072,'Sri Lankan Rupee(LKR)':0.0055,'Turkish Lira(TL)':0.188}\n\ndf['new cost'] = df['Average Cost for two'] * df['Currency'].map(d) ","8765499f":"df.head(2)","57fcace1":"sns.heatmap(data=df.corr(),cmap='coolwarm',annot=True)","887086e1":"df['new Rating'] = 0","c47ebe88":"mask1 = (df['Aggregate rating'] < 1)\nmask2 = (df['Aggregate rating'] >= 1) & (df['Aggregate rating'] < 2)\nmask3 = (df['Aggregate rating'] >= 2) &(df['Aggregate rating'] < 3)\nmask4 = (df['Aggregate rating'] >= 3) & (df['Aggregate rating'] < 4)\nmask5 = (df['Aggregate rating'] >= 4)\n\ndf['new Rating'] = df['new Rating'].mask(mask1, 'Low')\ndf['new Rating'] = df['new Rating'].mask(mask2, 'Medium -')\ndf['new Rating'] = df['new Rating'].mask(mask3, 'Medium')\ndf['new Rating'] = df['new Rating'].mask(mask4, 'Medium +')\ndf['new Rating'] = df['new Rating'].mask(mask5, 'High')","b4e44c38":"sns.set(rc={'figure.figsize':(18,6)})\nsns.countplot(data=df,x='new Rating',order=['Low','Medium -','Medium','Medium +','High'])","ac94968b":"sns.set(rc={'figure.figsize':(18,6)})\nsns.scatterplot(data=df,x='Aggregate rating',y='Votes')\nplt.ylim(0,1000)\nplt.xlim(1,5)","43a09d21":"sns.countplot(data=df,x='Aggregate rating',hue='Has Table booking',palette='viridis')","83ca4871":"sns.countplot(data=df,x='Aggregate rating',hue='Has Online delivery',palette='viridis')","e92177d0":"df.head(2)","beb6e747":"new_df = df[['Has Table booking','Has Online delivery','Price range','Rating text','Votes','new cost','Aggregate rating']]\nnew_df.head()","50961c43":"new_df = pd.get_dummies(new_df, columns=['Has Table booking','Has Online delivery','Price range','Rating text'])","d7b240bf":"new_df.head()","4c5e9304":"X = new_df.drop(['Aggregate rating'], axis=1)\ny = new_df['Aggregate rating']","803714b6":"from sklearn import model_selection\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","5052db27":"# implementation of Linear Regression model using scikit-learn and K-fold for stable model\nfrom sklearn.linear_model import LinearRegression\nkfold = model_selection.KFold(n_splits=10)\nlr = LinearRegression()\nscoring = 'r2'\nresults = model_selection.cross_val_score(lr, X, y, cv=kfold, scoring=scoring)\nlr.fit(X_train,y_train)\nlr_predictions = lr.predict(X_test)\nprint('Coefficients: \\n', lr.coef_,'\\n')\nprint(results)\nprint(results.sum()\/10)","4b1d601a":"from sklearn import metrics\n\nprint('MAE:', metrics.mean_absolute_error(y_test, lr_predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, lr_predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, lr_predictions)))","2f533a9f":"from sklearn.metrics import r2_score\nprint(\"R_square score: \", r2_score(y_test,lr_predictions))","206f9343":"from sklearn.tree import DecisionTreeRegressor\ndtr = DecisionTreeRegressor(random_state = 42)\ndtr.fit(X_train,y_train)\ndtr_predictions = dtr.predict(X_test) \nresults = model_selection.cross_val_score(dtr, X, y, cv=kfold, scoring='r2')\nprint(results)\nprint(results.sum()\/10)\n\n# R^2 Score\nprint(\"R_square score: \", r2_score(y_test,dtr_predictions))","5f59683a":"from sklearn.ensemble import RandomForestRegressor\nrfr = RandomForestRegressor(n_estimators = 100)\nrfr.fit(X_train,y_train)\nrfr_predicitions = rfr.predict(X_test) \nresults = model_selection.cross_val_score(dtr, X, y, cv=kfold, scoring='r2')\nprint(results)\nprint(results.sum()\/10)\n\n# R^2 Score\nprint(\"R_square score: \", r2_score(y_test,rfr_predicitions))","5048a0ec":"from sklearn import ensemble\nclf = ensemble.GradientBoostingRegressor(n_estimators = 400, max_depth = 5, min_samples_split = 2,\n          learning_rate = 0.1, loss = 'ls')\nclf.fit(X_train, y_train)\nclf_predicitions = clf.predict(X_test) \nresults = model_selection.cross_val_score(dtr, X, y, cv=kfold, scoring='r2')\nprint(results)\nprint(results.sum()\/10)\nprint(\"R_square score: \", r2_score(y_test,clf_predicitions))","d999bef3":"y = np.array([r2_score(y_test,lr_predictions),r2_score(y_test,dtr_predictions),r2_score(y_test,rfr_predicitions),\n           r2_score(y_test,clf_predicitions)])\nx = [\"LinearRegression\",\"RandomForest\",\"DecisionTree\",\"Grdient Boost\"]\nplt.bar(x,y)\nplt.title(\"Comparison of Regression Algorithms\")\nplt.ylabel(\"r2_score\")\nplt.show()","e145b283":"We can see that most of the data is distributed in a normal distribution, but there are also restaurants who got a rating of 0.","0373ed2b":"We can see that most of the tables havn't been booked.","bd4073ac":"We can see that the 'price range', 'votes' and the 'new cost' correlated with our target, so we will use them in our model. ","6b5b6a0e":"We can see that we have some features that have to be encoded in order to fit the machine learning algorithms (the scikit-learn library can't get any text).","3dce81c9":"We can see that most of the restaurants have aggregate rating between 3 to 4.","60f37e74":"We can see that from all the price category, the low price category has most of the restaurants.","71bab32e":"***","3bddc159":"***","3d74b3fa":"***","54efcaf4":"We can see correlation between the number of votes and the aggregate rating, but we can see that it isn't strong.","6f453315":"# Random Forest","f0edec9b":"First, we have to change the cost column. Let's look at how many currencies we have.","34b2ae24":"Then we will upload our data to a DataFrame.","2c7c067e":"# Desicion Trees","b43a09c0":"Now we will make some visualizations to get a better understanding of our data.","be3f4b56":"We can see that there are 21 columns in our dataset. In addition, in this kernel we are not going to use the text columns, so we won't consider them at our machine learning model. ","60e3b43d":"Now, after we deecided which columns we will use, we have to create subset from our dataset.","8e2a8eb0":"In this column there is only one option, so we will not use this column also.","c74631a5":"***","41afb61f":"# Gardient Boost","9833c950":"# Linear Regression","ca452c70":"We can see that there are text columns, categorical columns, and numerical columns.\nLet's take a deeper look at our columns properties.","65c1a0b2":"We can see that there are only 34 restaurants who make deliveries. Because of this imbalance in the data, we will not use this feature.","9eda6df5":"So we have 12 different currencies. We have to treat each currency different. The currency rate was taken from www.XE.com.\nWe will convert each cost to dollars.","65b7e098":"We can see that there is a bigger correlation between the delivery feature than the table booking feature. But, we can see that both of them can help the model, so we will use them both.","a62fcff7":"***","726cfc34":"***","dbcc5674":"We can also see some information about our target: the mean of 'Aggragate rating' is 2.66 and the standart diviation is 1.51. The min score is 0 and the max score is 4.9.","4d724aba":"We can see that in this column the data is in a normal distribution.","76eca1f9":"It looks like this data here is just the same as the 'Rating text', so we will use the Rating text column.","bd7dd0b5":"**First we will import some important libraries which we will use in the pre-processing and EDA**","86005220":"With this plot, it seems that there are no deliveries. Let's take a look at the numbers.","169bc0e1":"Now we will try to do some **Exploratory data analysis** in order to get a better understanding of the connection between our features, and between the features and the target.","20a52d8b":"Now our data is ready for prediction models. Let's start.","fbddc3af":"Now, we will do some **feature engineering** and try to get more from our dataset.","c8588e49":"In this kernel, we will try to predict the 'Aggregate rating' based on the other features.","b3abcde5":"We will first add new feature from our target to understand it better.","1dd23326":"***","4fc324ab":"Let's take a look at the 2 first rows of our dataset:"}}