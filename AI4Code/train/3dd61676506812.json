{"cell_type":{"3d074f5f":"code","ed181be7":"code","d169d5b6":"code","cc919590":"code","13349d97":"code","06868f5b":"code","9106bce9":"code","b19fef8a":"code","149af946":"code","453593d5":"markdown","b3a96944":"markdown"},"source":{"3d074f5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed181be7":"coaches_path = '\/kaggle\/input\/tokyo-2020-olympics\/coaches.csv'\nofficials_path = '\/kaggle\/input\/tokyo-2020-olympics\/technical_officials.csv'\nathletes_path = '\/kaggle\/input\/tokyo-2020-olympics\/athletes.csv'\nmedals_total_path = '\/kaggle\/input\/tokyo-2020-olympics\/medals_total.csv'\nmedals_path = '\/kaggle\/input\/tokyo-2020-olympics\/medals.csv'","d169d5b6":"df_coaches = pd.read_csv(coaches_path)\nprint(df_coaches.shape)\ndf_coaches.head()","cc919590":"df_officials = pd.read_csv(officials_path)\nprint(df_officials.shape)\ndf_officials.head()","13349d97":"df_athletes = pd.read_csv(athletes_path)\nprint(df_athletes.shape)\ndf_athletes.head()","06868f5b":"df_medals = pd.read_csv(medals_path)\nprint(df_medals.shape)\ndf_medals.head()","9106bce9":"groupby_columns = ['medal_date', 'discipline_code', 'event', 'medal_code', 'medal_type', 'country_code']\ndf_medals_true = df_medals.groupby(groupby_columns)['athlete_name'].apply(list).reset_index()\nprint(df_medals_true.shape)\ndf_medals_true.head(10)","b19fef8a":"df_medals_gr = df_medals_true.groupby(['country_code', 'medal_type'])['medal_code'].count().reset_index()\ndf_medals_gr.head(10)","149af946":"df_medals_country = df_medals_gr.pivot('country_code', 'medal_type', 'medal_code').fillna(0).astype(int)\ndf_medals_country['Total'] = df_medals_country.sum(axis=1).astype(int)\ndf_medals_country = df_medals_country.reset_index().sort_values(['Gold Medal', 'Silver Medal', 'Bronze Medal'], \n                                                                ascending=[False, False, False])\ndf_medals_country.columns.name='index'\ndf_medals_country = df_medals_country.rename(columns={'country_code': 'Country Code'})\ndf_medals_country['Rank'] = list(range(1, df_medals_country.shape[0]+1))\ndf_medals_country = df_medals_country[['Rank', 'Country Code', 'Gold Medal', 'Silver Medal', 'Bronze Medal', 'Total']]\ndf_medals_country = df_medals_country.reset_index(drop=True)\ndf_medals_country","453593d5":"## How is data look like?","b3a96944":"## How get the total medals by country?"}}