{"cell_type":{"ecd07645":"code","62f3e0d5":"code","ad4a265d":"code","0fc0146b":"code","3c01b1b3":"code","4b5d2d7e":"code","3a31ed82":"code","247b2799":"code","3268c686":"markdown","f04ca3cf":"markdown","98eb0e39":"markdown","48fab4cc":"markdown","4fb922ad":"markdown","7a8d9b8a":"markdown"},"source":{"ecd07645":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()","62f3e0d5":"import rx\nfrom rx import of,Observable,operators as op","ad4a265d":"DATA = of(\"apple\",\"melon\",\"kiwi\",\"banana\",\"orange\")\n\nDATA_LIST = of([\"apple\",\"melon\",\"kiwi\",\"banana\",\"orange\"])\n\nDATA_NUM = of(123,456,789)","0fc0146b":"DATA.pipe(\n    op.flat_map(lambda x: x),\n).subscribe(\n    on_next = lambda x : print(\"result = {0}\".format(x)),\n    on_error = lambda e : print(\"error = {0}\".format(e)),\n    on_completed = lambda : print(\"completed\")\n)","3c01b1b3":"DATA_LIST.pipe(\n    op.flat_map(lambda x: x),\n).subscribe(\n    on_next = lambda x : print(\"result = {0}\".format(x)),\n    on_error = lambda e : print(\"error = {0}\".format(e)),\n    on_completed = lambda : print(\"completed\")\n)","4b5d2d7e":"DATA_NUM.pipe(\n    op.map(lambda x : str(x)),\n    op.flat_map(lambda x: x),\n).subscribe(\n    on_next = lambda x : print(\"result = {0}\".format(x)),\n    on_error = lambda e : print(\"error = {0}\".format(e)),\n    on_completed = lambda : print(\"completed\")\n)","3a31ed82":"DATA.pipe(\n    op.group_by(lambda x: x),\n    op.flat_map(lambda group: group.pipe(op.to_list()))  \n).subscribe(\n    on_next = lambda x : print(\"result = {0}\".format(x)),\n    on_error = lambda e : print(\"error = {0}\".format(e)),\n    on_completed = lambda : print(\"completed\")\n)","247b2799":"DATA.pipe(\n    op.group_by(lambda x: len(x)),\n    op.flat_map(lambda group: group.pipe(op.to_list()))  \n).subscribe(\n    on_next = lambda x : print(\"result = {0}\".format(x)),\n    on_error = lambda e : print(\"error = {0}\".format(e)),\n    on_completed = lambda : print(\"completed\")\n)","3268c686":"# flat_map (string list => string)","f04ca3cf":"# number => stringify  + flat_map","98eb0e39":"group by same string length words","48fab4cc":"# group_by (by element) + flat_map \n\ninput and output is same","4fb922ad":"# flat_map (string => character)","7a8d9b8a":"# group_by (by length) + flat_map"}}