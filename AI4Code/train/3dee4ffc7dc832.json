{"cell_type":{"022a07ee":"code","8e79009e":"code","545e01fc":"code","ee86121a":"code","e6b4511c":"code","7ad50ee8":"code","9df109e8":"code","d21a717c":"code","47dfd6d8":"code","c624ade6":"code","31fe9d39":"code","f75fc3a0":"code","8fe79a92":"code","836b6131":"code","2d49db9b":"code","c4d9cf4d":"code","812df000":"code","365176ae":"code","7f622d4c":"code","f2c34e75":"code","da2e462d":"code","dedf9121":"code","6966a81e":"code","84e8c7f4":"code","b2935152":"code","ff72c78d":"code","01d6b1e8":"code","42dd760c":"code","572f6a03":"markdown","8b3314dc":"markdown","3f52f4c1":"markdown","6d153658":"markdown","3265d040":"markdown","13f79158":"markdown","3e1cf8d4":"markdown","8239353a":"markdown","7c2590eb":"markdown","e7cbbff7":"markdown","b65d48f0":"markdown","4753ee6f":"markdown"},"source":{"022a07ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e79009e":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId= test_df[\"PassengerId\"]","545e01fc":"train_df.columns","ee86121a":"train_df.head()","e6b4511c":"train_df.describe()","7ad50ee8":"train_df.info()","9df109e8":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue= var.value_counts()\n    \n    #visualize\n    plt.figure(figsize= (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","d21a717c":"category1=[\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","47dfd6d8":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n \" .format(train_df[c].value_counts()))","c624ade6":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","31fe9d39":"numericVar=[\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)\n    ","f75fc3a0":"# Pclass vs Survived\ntrain_df [[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","8fe79a92":"# Sex vs Survived\ntrain_df [[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","836b6131":"# SibSp vs Survived\ntrain_df [[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","2d49db9b":"# Parch vs Survived\ntrain_df [[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","c4d9cf4d":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25) \n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        \n        # IQR\n        IQR = Q3 - Q1\n      \n        # Outlier step\n        outlier_step = IQR * 1.5\n        \n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        \n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n        \n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","812df000":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","365176ae":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]), axis = 0).reset_index(drop = True)","7f622d4c":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df], axis = 0).reset_index(drop = True)\n","f2c34e75":"train_df.head()","da2e462d":"train_df.columns[train_df.isnull().any()]","dedf9121":"train_df.isnull().sum()","6966a81e":"train_df[train_df[\"Embarked\"].isnull()]","84e8c7f4":"train_df.boxplot(column= \"Fare\",by  = \"Embarked\")\nplt.show()","b2935152":"train_df[\"Embarked\"] =train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","ff72c78d":"train_df[train_df[\"Fare\"].isnull()]","01d6b1e8":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","42dd760c":"train_df[train_df[\"Fare\"].isnull()]","572f6a03":"<a id = \"1\"><\/a><br>\n# Load and Check Data","8b3314dc":"<a id = \"4\"><\/a><br>\n## Categorical Variable","3f52f4c1":"# Introduction\nThe sinking of Titanic is one of the most notorious shipwrecks in the history.In 1912, during her voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew.\n\n<font color ='purple'>\nContent:\n    \n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2) \n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4) \n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)","6d153658":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","3265d040":"<a id = \"7\"><\/a><br>\n# Outlier Detection","13f79158":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable : Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n* Numerical Variable : Fare, age and passengerId","3e1cf8d4":"<a id = \"9\"><\/a><br>\n## Find Missing Value","8239353a":" <a id = \"2\"><\/a><br>\n # Variable Description\n 1. PassengerId : unique id number to each passenger\n 1. Survived : passenger survive(1) or died(0)\n 1. Pclass : passenger class\n 1. Name :name\n 1. Sex : gender of passenger\n 1. Age : gender of age\n 1. SibSp : number of siblings\/spouses \n 1. Parch : number of parents\/children\n 1. Ticket : ticket number\n 1. Fare : amount of money spent on ticket\n 1. Cabin : cabin category\n 1. Embarked : port where passenger embarked(C= Cherbourg, Q= Queenstown, S= Southampton)\n\n ","7c2590eb":"<a id = \"5\"><\/a><br>\n## Numerical Variable","e7cbbff7":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp -Survived\n* Parch - Survived","b65d48f0":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1","4753ee6f":"* float64(2) : Fare and Age\n* int64(5) : Pclass, sibsp, parch, passngerId and survived\n* object(5): Cabin, embarked,  ticket, name and sex "}}