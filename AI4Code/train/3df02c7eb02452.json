{"cell_type":{"3019a950":"code","ab68df6a":"code","f7de5d6e":"code","d6c656e6":"code","ad004dd9":"code","f1ea99e5":"code","12bc5e2d":"code","2ab5664f":"code","ea86e7aa":"code","8e6af43b":"code","f4dcc98c":"code","9a2346e8":"code","80a74906":"code","ec7d8b9e":"code","9d6ba25e":"code","b8651b78":"code","3c8ea815":"code","a01a8a64":"code","6af312ba":"code","cd2e65c5":"code","e2ae8756":"code","e9da0b22":"code","a82fddde":"code","d6ee7945":"code","7da9ef2e":"code","239af5a8":"code","b83e0b59":"code","39c215a5":"markdown","8b266f6e":"markdown","c8d7677e":"markdown","835d7632":"markdown","ffa50067":"markdown","9eb24ac9":"markdown","d1eee0c5":"markdown","1a001da9":"markdown","ba8c91e7":"markdown","e79d9505":"markdown","b0ba0376":"markdown","f9e29ed5":"markdown","720d0acd":"markdown","675e2b88":"markdown","69eb0db6":"markdown","309ceeb5":"markdown","b2a5b5ee":"markdown","c2b01f99":"markdown","8d653b4d":"markdown"},"source":{"3019a950":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2","ab68df6a":"print(f\"Files and folders: {os.listdir('\/kaggle\/input\/happy-whale-and-dolphin')}\")","f7de5d6e":"train_df = pd.read_csv('\/kaggle\/input\/happy-whale-and-dolphin\/train.csv')\nsubmission_df = pd.read_csv('\/kaggle\/input\/happy-whale-and-dolphin\/sample_submission.csv')","d6c656e6":"train_df.head()","ad004dd9":"submission_df.head()","f1ea99e5":"print(f\"Images in train index file: {train_df.image.nunique()}\")\nprint(f\"Species in train index file: {train_df.species.nunique()}\")\nprint(f\"Individual IDs in train index file: {train_df.individual_id.nunique()}\")\n\nprint(f\"Images in train images folder: {len(os.listdir('\/kaggle\/input\/happy-whale-and-dolphin\/train_images'))}\")\nprint(f\"Images in test images folder: {len(os.listdir('\/kaggle\/input\/happy-whale-and-dolphin\/test_images'))}\")","12bc5e2d":"print(\"Top 10 individual_id\")\ntrain_df.individual_id.value_counts().head(10)","2ab5664f":"fig, ax = plt.subplots(1, 1, figsize=(7, 7))\nsns.kdeplot(np.log(train_df.individual_id.value_counts()))\nplt.title(\"Logaritmic distribution of individual_id frequency in images\")\nplt.show()","ea86e7aa":"temp = train_df[\"species\"].value_counts()\ndf = pd.DataFrame({'Species': temp.index,\n                   'Images': temp.values\n                  })\nplt.figure(figsize = (12,6))\nplt.title('Species distribution - images per each species - train dataset')\nsns.set_color_codes(\"pastel\")\ns = sns.barplot(x = 'Species', y=\"Images\", data=df)\ns.set_xticklabels(s.get_xticklabels(),rotation=90)\nlocs, labels = plt.xticks()\nplt.show()","8e6af43b":"temp = train_df.groupby([\"species\"])[\"individual_id\"].nunique()\ndf = pd.DataFrame({'Species': temp.index,\n                   'Unique ID Count': temp.values\n                  })\ndf = df.sort_values(['Unique ID Count'], ascending=False)\nplt.figure(figsize = (12,6))\nplt.title('Species distribution - Individual IDs per each species - train dataset')\nsns.set_color_codes(\"pastel\")\ns = sns.barplot(x = 'Species', y=\"Unique ID Count\", data=df)\ns.set_xticklabels(s.get_xticklabels(),rotation=90)\nlocs, labels = plt.xticks()\nplt.show()","f4dcc98c":"train_df_list = list(train_df.image.unique())\ntrain_images_list = list(os.listdir('\/kaggle\/input\/happy-whale-and-dolphin\/train_images'))\ndelta = set(train_df_list) & set(train_images_list)\nminus = set(train_df_list) - set(train_images_list)\nprint(f\"Images in train dataset: {len(train_df_list)}\\nImages in train folder: {len(train_images_list)}\\nIntersection: {len(delta)}\\nDifference: {len(minus)}\")","9a2346e8":"def read_image_sizes(file_name):\n    image = cv2.imread('\/kaggle\/input\/happy-whale-and-dolphin\/train_images\/' + file_name)\n    return list(image.shape)","80a74906":"import time\nsample_size = 2500\nstart_time = time.time()\ntrain_sample_df = train_df.sample(sample_size)\nm = np.stack(train_sample_df['image'].apply(read_image_sizes))\ndf = pd.DataFrame(m,columns=['w','h','c'])\nprint(f\"Total processing time for {sample_size} images: {round(time.time()-start_time, 2)} sec.\")","ec7d8b9e":"train_img_df = pd.concat([train_sample_df, df], axis=1, sort=False)\nprint(f\"Number of different image size ( images samples): {train_img_df.groupby(['w','h', 'c']).count().shape[0]}\")","9d6ba25e":"plt.figure(figsize = (12,6))\nplt.title('Species distribution - width per each species - train dataset (5% random data sample)')\nsns.set_color_codes(\"pastel\")\ns = sns.boxplot(x = 'species', y=\"w\", data=train_img_df)\ns.set_xticklabels(s.get_xticklabels(),rotation=90)\nlocs, labels = plt.xticks()\nplt.show()","b8651b78":"plt.figure(figsize = (12,6))\nplt.title('Species distribution - height per each species - train dataset (5% random data sample)')\nsns.set_color_codes(\"pastel\")\ns = sns.boxplot(x = 'species', y=\"h\", data=train_img_df)\ns.set_xticklabels(s.get_xticklabels(),rotation=90)\nlocs, labels = plt.xticks()\nplt.show()","3c8ea815":"def plot_image_samples(species):\n    root_path = \"\/kaggle\/input\/happy-whale-and-dolphin\/\"\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    images_folder=\"train_images\/\"\n    df = train_df[train_df['species']==species].copy()\n    df.index = range(len(df.index))\n\n    f, ax = plt.subplots(4, 4, figsize=(16,16))\n\n    for i in range(16):\n        file = df.loc[i, 'image']\n        species = df.loc[i, 'species']\n        identifier = df.loc[i, 'individual_id']\n        img = cv2.imread(root_path+images_folder+file)\n        ax[i\/\/4, i%4].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n        ax[i\/\/4, i%4].set_title(identifier+\" (\"+species+\")\")\n        ax[i\/\/4, i%4].axis('off')","a01a8a64":"plot_image_samples(\"bottlenose_dolphin\")","6af312ba":"plot_image_samples(\"beluga\")","cd2e65c5":"plot_image_samples(\"humpback_whale\")","e2ae8756":"plot_image_samples(\"blue_whale\")","e9da0b22":"def plot_image_samples_test():\n    root_path = \"\/kaggle\/input\/happy-whale-and-dolphin\/\"\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    images_folder=\"test_images\/\"\n\n    f, ax = plt.subplots(4, 4, figsize=(16,16))\n    file_list = list(os.listdir(root_path+images_folder))\n    for i in range(16):\n        file = file_list[i]\n        img = cv2.imread(root_path+images_folder+file)\n        ax[i\/\/4, i%4].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n        ax[i\/\/4, i%4].set_title(\"Test image: \"+file)\n        ax[i\/\/4, i%4].axis('off')","a82fddde":"plot_image_samples_test()","d6ee7945":"def rotate_values(x):\n    xcopy = x.split()\n    temp = xcopy[4]\n    xcopy[4] = xcopy[0]\n    xcopy[0] = temp\n    xcopy = \" \".join(xcopy)\n    return xcopy","7da9ef2e":"submission_df[\"predictions\"] = submission_df[\"predictions\"].apply(lambda x: rotate_values(x))","239af5a8":"submission_df.head()","b83e0b59":"submission_df.to_csv('submission.csv', index=False)","39c215a5":"# Images data exploration","8b266f6e":"Let's see now how many individual ids are per each species.","c8d7677e":"# Introduction\n\n\nThis Kernel explores the **Happywhale - Whale and Dolphin Identification competition** dataset.\n\n<img src=\"https:\/\/images.unsplash.com\/photo-1570913179118-f3d24be1d1f7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2143&q=80\" width=500><\/img>","835d7632":"Let's also look to a sample of test images.","ffa50067":"# Preliminary submission\n\n<img src=\"https:\/\/images.unsplash.com\/photo-1602264985195-52b338cb937b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\" width=500><\/img>\n\nLet's rotate the identifiers so that`new_individual` became the first option.","9eb24ac9":"Because the processing of images to get images dimmension, we will only process a sample of 2500 images.","d1eee0c5":"Let's check as well frequency of species in train dataset.","1a001da9":"Let's check if set of images listed in `train_df` is identical with set of images in folder `train_images` ","ba8c91e7":"# Data exploration\n\n<img src=\"https:\/\/images.unsplash.com\/photo-1611890129309-31e797820019?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\" width=500><\/img>","e79d9505":"Let's load `train.csv` and `sample_submission.csv` first","b0ba0376":"We output the prepared submission file.","f9e29ed5":"All images indexed in `train_df` are present in the images folder and viceversa.","720d0acd":"Let's get some more insight into the train data and train and test images.","675e2b88":"# Analysis preparation\n\nLet's load the data and explore it preliminarly.\n\n<img src=\"https:\/\/images.unsplash.com\/photo-1568430328012-21ed450453ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1174&q=80\" width=500><\/img>","69eb0db6":"Let's check more details about the column `individual_id` from `train_df` values distribution.","309ceeb5":"\n\nLet's sample few of the train images, grouped on species.  \n\nWe create first a plotting function.","b2a5b5ee":"It appears that there are many images sizes (we only sampled less than 5% of the total number of images).\n\nLet's visualize the distribution of width\/height and colors per species.","c2b01f99":"The number of colors seems to be allways 3 for the 5% random sample used.","8d653b4d":"Let's check now the image sizes in train and test images datasets."}}