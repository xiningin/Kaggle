{"cell_type":{"13e60779":"code","9b43d39f":"code","e40407f1":"code","29b5144c":"code","132e50f1":"code","c0e93a5a":"code","623afb2b":"code","aae5bb62":"code","8bd31d69":"code","441d5f23":"markdown","283611ac":"markdown","68f14dd8":"markdown","90ccb699":"markdown","69b496cd":"markdown","f594953d":"markdown","97d1cf3b":"markdown","9011f157":"markdown"},"source":{"13e60779":"!pip install openpyxl","9b43d39f":"import pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go","e40407f1":"path_to_data = '\/kaggle\/input\/2021-olympics-in-tokyo\/'\n\ndf_athletes = pd.read_excel(path_to_data + 'Athletes.xlsx')\ndf_gender = pd.read_excel(path_to_data + 'EntriesGender.xlsx')\ndf_medals = pd.read_excel(path_to_data + 'Medals.xlsx')\ndf_teams = pd.read_excel(path_to_data + 'Teams.xlsx')","29b5144c":"print('Missing values on Athletes.xlsx column NOC: {}'.format(df_athletes['NOC'].isna().sum()))\nprint('Missing values on Athletes.xlsx column Discipline: {}'.format(df_athletes['Discipline'].isna().sum()))\nprint('Missing values on EntriesGender.xlsx column Discipline: {}'.format(df_gender['Discipline'].isna().sum()))\nprint('Missing values on EntriesGender.xlsx column Female: {}'.format(df_gender['Female'].isna().sum()))\nprint('Missing values on EntriesGender.xlsx column Male: {}'.format(df_gender['Male'].isna().sum()))\nprint('Missing values on Medals.xlsx column Team\/NOC: {}'.format(df_medals['Team\/NOC'].isna().sum()))\nprint('Missing values on Medals.xlsx column Gold: {}'.format(df_medals['Gold'].isna().sum()))\nprint('Missing values on Medals.xlsx column Silver: {}'.format(df_medals['Silver'].isna().sum()))\nprint('Missing values on Medals.xlsx column Bronze: {}'.format(df_medals['Bronze'].isna().sum()))","132e50f1":"fig = go.Figure([go.Bar(x=df_athletes['NOC'].value_counts().index[:20],\n                        y=df_athletes['NOC'].value_counts().values[:20],\n                        text=df_athletes['NOC'].value_counts().values[:20],\n                        textposition='auto')\n                ]\n               )\n\nfig.update_layout(title_text=\"Top 20 country with the most athletes in the competition\")\n\nfig.show()","c0e93a5a":"fig = go.Figure([go.Bar(x=df_athletes['Discipline'].value_counts().index[:20],\n                        y=df_athletes['Discipline'].value_counts().values[:20],\n                        text=df_athletes['Discipline'].value_counts().values[:20],\n                        textposition='auto')\n                ]\n               )\n                 \nfig.update_layout(title_text=\"Top 20 disciplines with the most athletes in the competition\")\n    \nfig.show()","623afb2b":"fig = go.Figure(data=[\n    go.Bar(name='Male', x=df_gender['Discipline'], y=df_gender['Male']),\n    go.Bar(name='Female', x=df_gender['Discipline'], y=df_gender['Female']),\n])\n# Change the bar mode\nfig.update_layout(barmode='group', title_text=\"Gender distribution on each discipline\")\nfig.show()","aae5bb62":"fig = go.Figure()\nfig.add_trace(go.Bar(name='Male',\n                     x=df_gender['Male'] \/ df_gender['Total'],\n                     y=df_gender['Discipline'],\n                     orientation='h'\n                    ))\n\nfig.add_trace(go.Bar(name='Female',\n                     x=df_gender['Female'] \/ df_gender['Total'],\n                     y=df_gender['Discipline'],\n                     orientation='h'\n                    ))\n\nfig.update_layout(barmode=\"relative\",\n                  width=1000,\n                  height=1000,\n                  bargap=0.30,\n                  title_text=\"Gender distribution on each discipline\",\n                  legend_orientation='h')\nfig.show()","8bd31d69":"fig = go.Figure()\nfig.add_trace(go.Bar(name='Gold',\n                     x=df_medals[df_medals['Rank'] <= 20]['Gold'],\n                     y=df_medals[df_medals['Rank'] <= 20]['Team\/NOC'],\n                     orientation='h',\n                     marker_color='gold'\n                    ))\n\nfig.add_trace(go.Bar(name='Silver',\n                     x=df_medals[df_medals['Rank'] <= 20]['Silver'],\n                     y=df_medals[df_medals['Rank'] <= 20]['Team\/NOC'],\n                     orientation='h',\n                     marker_color='silver'\n                    ))\n\nfig.add_trace(go.Bar(name='Bronze',\n                     x=df_medals[df_medals['Rank'] <= 20]['Bronze'],\n                     y=df_medals[df_medals['Rank'] <= 20]['Team\/NOC'],\n                     orientation='h',\n                     marker_color='brown'\n                    ))\n\nfig.update_layout(barmode=\"stack\",\n                  width=1000,\n                  height=1000,\n                  bargap=0.30,\n                  legend_orientation='h')\nfig.show()","441d5f23":"# Medals won by country","283611ac":"# Number of athletes by dicsipline","68f14dd8":"# How is the different of distribution between male and female athletes in each discipline?","90ccb699":"# Introduction\n\nHello,\n\nIn this notebooks I am doing EDA on 2021 olympics athletes. I am using plolty graph objects for visualization purpose. The details about the data can be seen here: https:\/\/www.kaggle.com\/arjunprasadsarkhel\/2021-olympics-in-tokyo","69b496cd":"# Number of athletes by country ","f594953d":"# Gender distribution per discpline","97d1cf3b":"# Clean the data\n\nFirst, we need to make sure that the data free from any missing values.","9011f157":"## Thank you for reading! if you like the work please upvote!"}}