{"cell_type":{"adccc8f0":"code","f4c4ded7":"code","04f18553":"code","67fe5022":"code","2bd43333":"code","c76e2659":"code","b047a9c4":"code","638a3c2b":"code","3ccb1dff":"code","73062395":"code","8059cd53":"code","befe1b14":"code","062b327b":"code","328c9474":"code","2551611a":"code","e39f2529":"code","fee9b82d":"code","cbd37a05":"code","d29ea3e2":"code","26cb2075":"code","2ae0ca86":"code","04e0b700":"code","d857fd17":"code","81d43fc3":"code","22dbb8c9":"code","bfc69bb5":"code","b331fd9a":"markdown","00c1649b":"markdown","24d55cf1":"markdown","4a12922b":"markdown","0c1cf312":"markdown","a1106b8f":"markdown","71b9be7e":"markdown","63708273":"markdown","c9e17c93":"markdown","84d71df3":"markdown","cae2245c":"markdown","cc991105":"markdown","870e47b9":"markdown","c83ab784":"markdown","3f6afd45":"markdown","f37564a5":"markdown","03e3985f":"markdown","6c4e7c3d":"markdown","aace43a1":"markdown","007eaecb":"markdown","360f5b73":"markdown","8a1862af":"markdown","e7595851":"markdown","79d7a785":"markdown","af7c2b71":"markdown","da0c63fc":"markdown","bde44faa":"markdown","6237359b":"markdown","26ac13e8":"markdown","26bea1d6":"markdown","8d39becc":"markdown","757608ba":"markdown","8f88680d":"markdown","dd0076e4":"markdown","88727ffa":"markdown","48387a92":"markdown","1ecd9d51":"markdown","3a124306":"markdown","6f7504dc":"markdown","d057db7c":"markdown","75f4b216":"markdown"},"source":{"adccc8f0":"#Basic needed libraries\nimport numpy as np\nimport pandas as pd\n\n#visualization libraries\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\n#Processing:\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder","f4c4ded7":"# I had noticed that the dataframe had commas for decimal, pandas automatically can handle it during loading with the decimal field. \ndf =  pd.read_csv(\"..\/input\/beer-consumption-sao-paulo\/Consumo_cerveja.csv\",  decimal=\",\")\n","04f18553":"#Finding Number of rows and columns\nprint(\"Dataset contains {} rows and {} columns\".format(df.shape[0], df.shape[1]))","67fe5022":"df.head()","2bd43333":"df.columns = ['Date', 'Temp_Median', 'Temp_Min', 'Temp_Max', 'Precipitation', 'Weekend', 'Consumption_Litres']","c76e2659":"df.head()","b047a9c4":"df.isnull().sum()","638a3c2b":"# Dropping rows as after the year ends, there is no information provided, only null values\ndf =  df.dropna()","3ccb1dff":"df['Consumption_Litres'] = pd.to_numeric(df['Consumption_Litres'])","73062395":"weekdays = sum(df[df.Weekend == 0]['Consumption_Litres'])\nweekend = sum(df[df.Weekend==1]['Consumption_Litres'])\n\nlabels = ['Weekdays','Weekend']\nvalues = [weekdays, weekend]\ncolors = ['crimson']\n\nfig = go.Figure(data=[go.Bar(\n    x=labels, y=values, marker_color= colors\n)])\nfig.show()","8059cd53":"df['Date'] = pd.to_datetime(df['Date'])\n","befe1b14":"#Extracting day and month from the datetime object:\n\ndf['Months'] = df['Date'].apply(lambda x: x.strftime('%B'))\ndf['Day'] = df['Date'].apply(lambda x: x.strftime('%A'))","062b327b":"df.head()","328c9474":"fig = px.box(df, x=\"Day\", y=\"Consumption_Litres\", color=\"Day\", orientation='v', notched=True, title = 'Beer Consumption by day of the week' )\n\nfig.show()","2551611a":"fig = px.box(df, x=\"Months\", y=\"Consumption_Litres\", color=\"Months\", orientation='v', notched=True, title = 'Beer Consumption by Months of the year' )\n\nfig.show()","e39f2529":"\n\nfig = go.Figure()\n# Create and style traces\nfig.add_trace(go.Scatter(x=df['Date'], y=df['Temp_Min'], name='Minimum Temperature',\n                         line=dict(color='royalblue', width=3)))\nfig.add_trace(go.Scatter(x=df['Date'], y=df['Temp_Max'], name = 'Max Temperature',\n                         line=dict(color='crimson', width=3)))\nfig.add_trace(go.Scatter(x=df['Date'], y=df['Temp_Median'], name='Median Temperature',\n                         line=dict(color='orange', width=3,\n                              dash='dash') \n))\n\n\n# Edit the layout\nfig.update_layout(title='Temperature throughout Brazil',\n                   xaxis_title='Dates',\n                   yaxis_title='Temperature (degrees C)')\n\n\nfig.show()","fee9b82d":"seasons_map = {\n    'January': 'Summer',\n    'February': 'Summer',\n    'March': 'Summer',\n    'April': 'Autumn',\n    'May': 'Autumn',\n    'June': 'Winter',\n    'July': 'Winter',\n    'August': 'Winter',\n    'September': 'Winter',\n    'October': 'Spring',\n    'November': 'Spring',\n    'December': 'Summer'\n    \n}\n\n\ndf['Season'] = df['Months'].apply(lambda x: seasons_map[x])","cbd37a05":"fig = px.box(df, x=\"Season\", y=\"Consumption_Litres\", color=\"Season\", orientation='v', notched=True, title = 'Beer Consumption by Seasons of the year' )\n\nfig.show()","d29ea3e2":"\n\nfig = go.Figure()\n# Create and style traces\nfig.add_trace(go.Scatter(x=df['Date'], y=df['Precipitation'], name='Rainfall for the year',\n                         line=dict(color='blue', width=3)))\n\n\n\n# Edit the layout\nfig.update_layout(title='Rainfall throughout Brazil',\n                   xaxis_title='Dates',\n                   yaxis_title='Precipitation')\n\n\nfig.show()","26cb2075":"df","2ae0ca86":"label_encoder = LabelEncoder()\n\ndf['Months'] = label_encoder.fit_transform(df['Months'])\ndf['Day'] = label_encoder.fit_transform(df['Day'])\ndf['Season'] = label_encoder.fit_transform(df['Season'])","04e0b700":"X, y = df.drop('Consumption_Litres', axis=1), df['Consumption_Litres']","d857fd17":"\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","81d43fc3":"X, y = df['Temp_Median'], df['Consumption_Litres']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","22dbb8c9":"def Simple_Linear_Regression(x, y): \n    n = len(x)\n    x_mean = x.mean()\n    y_mean = y.mean()\n    \n    B1_numerator = sum(((x-x_mean) * (y-y_mean)))\n    B1_denominator = sum((x-x_mean)**2)\n    \n    B1_hat = B1_numerator\/B1_denominator\n    \n    B0_hat = y_mean - B1_hat * x_mean\n    \n    regression_line = f'y = {B0_hat} + {B1_hat}X'\n    \n    return B0_hat, B1_hat, regression_line","bfc69bb5":"Simple_Linear_Regression(X, y)","b331fd9a":"## [Linear Regression Mathematics]()<a id=\"14\"><\/a> <br>","00c1649b":"We can observe that on an average, the beer consumed on weekdays was more than the beer consumed on the weekend. But, since this is just an aggregate for how much was consumed overall, we can understand that weekends are less in number. Thus, let's create a chart for per day, where we can observe how much beer was consumed on an average for each day. ","24d55cf1":"#### Ensuring that the data is split into train and test dataset, to see how our model will perform. ","4a12922b":"First, we will need to add the days into the dataframe. While we are doing this, let's also add the month of the year too. ","0c1cf312":"We can observe that the most beer was consumed on Saturdays, with Sunday following it. This gives rise to the conclusion that on an average, beer was consumed most during the weekends. ","a1106b8f":"## [Brief Data Outlook]()<a id=\"3\"><\/a> <br>","71b9be7e":"We can observe that the highest beer consumption is during Summer and Spring, followed by winter, which is surprising as I had expected Winter to have the least amount of beer consumption. ","63708273":"We can now see the Months and the Days of the year 2015. ","c9e17c93":"### [Understanding Data]()<a id=\"5\"><\/a> <br>","84d71df3":"# Contents: \n1. [What is Linear Regression? ](#1) \n    1. [ELI5: Linear Regression, as simple as possible](#2)\n3. [Brief Data Outlook](#3)\n    1. [Loading Libraries and Data](#4)\n    2. [Understanding Data](#5)\n3. [Exploratory Data Analysis](#6)\n    1. [How much beer was consumed overall on weekend and weekdays??](#7) \n    2. [How much beer was consumed on an average for each day?](#8)\n    3. [How much beer was consumed each month?](#9)\n    4. [How was the temperature for the year?](#10)\n    5. [How much beer was consumed each season?](#11)\n    6. [How is the rainfall for the year?](#12)\n    \n4. [Preparing Data](#13)","cae2245c":"Simple Linear Regression is a very straightforward algorithm to predict the quantative response Y on the basis of a single predictor X. It assumes that there is a mathematical relation between X and Y.\n\n$$ Y = \\beta_0 + \\beta_1X  $$\n\nHere $$ \\beta_0, \\beta_1 $$ can be considered as the model coefficents or the parameters. ","cc991105":"## [Preparing Data]()<a id=\"13\"><\/a> <br>","870e47b9":"### [Loading Libraries and Data]()<a id=\"4\"><\/a> <br>","c83ab784":"## [Exploratory Data Analysis]()<a id=\"6\"><\/a> <br>","3f6afd45":"### [Simple Linear Regression Data Prep ]()<a id=\"16\"><\/a> <br>","f37564a5":"# Introduction\n\nOver the past few years, Data Science has been rising in popularity. With such advancements, automation of all the tough methods from yesteryear began to occur. \nInstead of writing a hashed out algorithm in C++, a data science pracitioner only had to call a wrapper for the model to run. It certainly has made life easy for a lot of people in the last couple of years. It did the same for me. \n\nA popular saying goes along the lines of, _The important thing is not to stop questioning. Curiosity has its own reason for existence. One cannot help but be in awe when he contemplates the mysteries of eternity._\n\nI was stuck with the same mindset. Calling .fit on a model did run perfectly, but how did it actually run? \n\nAfter a lot of careful pondering over that question, I dredged up the trusty ol' internet and began studying on how the actually worked. \n\nThis series, a from scratch series, is meant to implement all the popular machine learning algorithms from scratch based on their mathematics principle. \n","03e3985f":"Before we head on to the math, let's go through the regular steps:\n- Brief Data Outlook\n- EDA\n- Data Cleaning and Preprocessing\n- Data Modelling\n- Results and Evaluation","6c4e7c3d":"Having gone through the basic EDA, let's head into the crux of this notebook: Linear regression from scratch.","aace43a1":"Let's begin the journey, there seems to be a few features provided for the dataset. Yet, it all seems to be in a different language. Being only familiar with English, my first step would be to translate them into English and then proceed forward. \n\n","007eaecb":"#### Columns Description\n\n- **Date**: The date, of the year 2015. This seems to be a daily date tracking. \n- **Temp Median**: Median temperature for the day.\n- **Temp Min**: Min temperature for that day. \n- **Temp Max**: Max temperature for that day.\n- **Precipitation**: Chance of rain for that day. \n- **Weekend**: Bool, 1: Weekend, 0: Weekday. \n- **Consumption Litres**: The amount of beer consumed for that day.","360f5b73":"##### Encoding categorical variables into numerical data for calculation","8a1862af":"#### [How was the temperature for the year?]()<a id=\"10\"><\/a> <br>","e7595851":"#### [How much beer was consumed each season?]()<a id=\"11\"><\/a> <br>","79d7a785":"## [What is Linear Regression?]()<a id=\"1\"><\/a> <br>\n#### [ELI5: Linear Regression, as simple as possible.]()<a id=\"2\"><\/a> <br>","af7c2b71":"Applying the Simple_Linear_Regression function to the feature:","da0c63fc":"#### [How much beer was consumed each month?]()<a id=\"9\"><\/a> <br>","bde44faa":"Let \n\n$$ (x_1, y_1), (x_2,y_2) ... (x_n, y_n)$$\n\nrepresent n observation pairs, each of which contains a measurement of X and a measurement of Y. \n\nHere, X represents the set of features apart from Consumption litres and Y represents the Consumption Litres, the variable that we are tyring to predict. ","6237359b":"### [Simple Linear Regression Math ]()<a id=\"15\"><\/a> <br>","26ac13e8":"From this, we can observe that the seasons really have been changed. \n\nAfter researching on the web, we can observe: (https:\/\/www.frommers.com\/destinations\/brazil\/planning-a-trip\/when-to-go)\n\n- Summer Months: December to March\n- Autumn Months: April-May\n- Winter Months: June - September\n- Spring: October-November\n\nUsing that data, we can assign seasons to the dataset. \n\nThis idea was taken after going through the graph here: kaggle.com\/michau96\/when-brazilian-students-drink-beer\/data\n","26bea1d6":"#### Converting features to numeric values","8d39becc":"#### [How is the rainfall for the year?]()<a id=\"12\"><\/a> <br>","757608ba":"It doesn't seem that the rainfall had a tremendous effect on beer consumption. It is highest during the summer months, but since beer is meant to defeat the heat, it could be a case of correlation doesn't equal causality. ","8f88680d":"#### [How much beer was consumed on an average for each day?]()<a id=\"8\"><\/a> <br>","dd0076e4":"Checking for null values","88727ffa":"#### [Simple Linear Regression Function]()<a id=\"17\"><\/a> <br>","48387a92":"# To be Continued with: \n- Pearson correlation to check accuracy\n- Plotting Regression Line\n- Multiple Linear Regression (New Kernel) ","1ecd9d51":"#### [How much beer was consumed overall on weekend and weekdays?]()<a id=\"7\"><\/a> <br>","3a124306":"Let's consider that we have two sets of data. Let's try to be as silly as possible for this. \n- Height (X)\n- Income (Y)\n\nWe are holding an assumption that the data is continuous, i.e, scales up in a specific order as:\n- 100, 200, 300.....\n\nSince both height and income can follow this pattern, this would be a satisfactory dataset. \n\nOur aim, with linear regression, is to find relations between the two datasets. Our entire approach revolves around the question:\n- Is income related to the height of the person? \n- Do taller people earn more? \n- If it really does, can we predict it? \n\nConsidering our dataset for a 1000 people, our dataset would consist of these datapoints: \n- 145 cm, 51000 USD\n- 184 cm, 62000 USD\n- 152 cm, 59000 USD\n\nAnd so on. \n\nLinear regression lets us do some math on these data points and describes the correlation between these datasets. That is, how strongly does height really relate with high income.\n\nSince correlation, in this example, has a range 0f 0-1, the correlation would confirm the following hypothesis: \n- A correlation of 1 would mean being tall always means you have a higher income.\n\n- A correlation of 0 would mean there is no relationship between height and income.\n\n- A negative value means a negative correlation, that is, taller people tend to have lower incomes. A correlation of -1 would mean taller people always make less money than shorter people.\n\n\nThis allows us to understand the relation between two variables, or two types of data. \nAlso, once we have the relation, we can use linear regression for prediction. If we know the rough relationship between X and Y, then we can use this relationship to predict values of Y for a value of X we want.\n\nFor this example, it would be: prediciting income for the height of the person\n","6f7504dc":"We can observe that the Beer consumption was higher in the end of the year: December to March, while it decreased around the mid, June and July. \nConsidering that the southern hemisphere has a different time for seasons, the temperature should be checked. \n","d057db7c":"**Least Squares**\n\nThis is a method to calculate the predicitons by minimizing the parameters. At this point, simple linear regression only considers one pair. So, for our example, for this, we will just consider **Temperature_Median** to predict against. \n\nLeast squares assumes:\n\n$$ \\hat y = \\hat \\beta_0 + \\hat \\beta_1X $$\n\nAnd based on that formula, the error or the resuidual is calculated as: \n\n$$ e = y_i - \\hat y_i $$\n\n\nLeast squares is the method of plotting a line with the least Residual Sum of Squares or RSS: \n\n$$ RSS = e_1^2 + e_2^2 .... + e_n^2 $$\n\nor \n\n$$ RSS = ( y_1 - \\hat \\beta_0 - \\hat \\beta_1 X_1) + ..... + (y_n - \\hat \\beta_n - \\hat \\beta_n X_n) $$\n\nThe least square approach uses the parameters to minimize the RSS. \n\nUsing calculus, we can show how to minimize the parameters\n\n$$ \\hat \\beta_1 = \\frac {\\hat \\sum_{i=1}^{n} (x_i - \\bar x) (y_i - \\bar y)}  {\\sum_{i=1}^n (x_i - \\bar x)^2} $$\n\n\nTo estimate the intercept $$ \\hat \\beta_0 $$ we can use the formula $$ \\hat \\beta_0 =  \\hat y - \\hat \\beta_1 \\bar x $$","75f4b216":"Based on the math displayed above, we will now write the function to calculate the simple linear regression. "}}