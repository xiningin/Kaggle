{"cell_type":{"a036e344":"code","c22979cd":"code","f3d84f24":"code","6d29c744":"markdown","c175b8fd":"markdown","714d1e27":"markdown"},"source":{"a036e344":"!git clone http:\/\/github.com\/AIStream-Peelout\/flow-forecast -b fix_up_infe_2 # You can use a custom branch\nimport os \nos.chdir('flow-forecast')\n!pip install -r requirements.txt\n!python setup.py install develop\nfrom flood_forecast.trainer import train_function","c22979cd":"import json\nimport os\nimport subprocess as subp\nfrom flood_forecast.trainer import train_function\nimport traceback\nfrom flood_forecast.long_train import split_on_letter\n\n#!gsutil cp -r add_thing2 gs:\/\/predict_cfs\/day_addition\n# if you would like to use Wandb please swap this block back for where wandb is set to False\n\"\"\"\n\"wandb\":{\n        \"name\":\"example_black_run\",\n        \"project\": \"stream_new\",\n        \"tags\":[\"black_river\"]\n        \n    },\n\"\"\"\ndef make_config_file(file_path, train_end, valid_end, test_end):\n  # run = wandb.init(project=\"covi-core\")\n  # wandb_config = wandb.config\n  config_default={                 \n    \"model_name\": \"Informer\",\n    \"use_decoder\": True,\n    \"model_type\": \"PyTorch\",\n    \"model_params\": {\n      \"n_time_series\":3,\n      \"dec_in\":3,\n      \"c_out\": 2,\n      \"seq_len\":10,\n      \"label_len\":10, \n      \"out_len\":2,\n      \"factor\":2\n     },\n   \"n_targets\":2,\n    \"dataset_params\":\n    {  \"class\": \"TemporalLoader\",\n      \"temporal_feats\": [\"month\", \"day\", \"day_of_week\", \"hour\"],\n       \"training_path\": file_path,\n       \"validation_path\": file_path,\n       \"test_path\": file_path,\n       \"batch_size\":90,\n      \"forecast_history\":10,\n       \"forecast_length\":2,\n       \"train_end\": train_end,\n       \"valid_start\":int(train_end+1),\n       \"valid_end\": int(valid_end),\n       \"test_start\":int(valid_end) + 1,\n       \"test_end\": test_end,\n       \"target_col\": [\"height\", \"cfs\"],\n       \"relevant_cols\": [\"height\", \"cfs\", \"p01m\"],\n       \"scaler\": \"StandardScaler\", \n      \"sort_column\":\"datetime\",\n       \"interpolate\":{\n           \"method\":\"back_forward_generic\",\n           \"params\":{\n               \"relevant_columns\":[\"cfs\", \"height\", \"tmpf\", \"p01m\", \"dwpf\"]\n           }},\n       \"feature_param\":\n     {\n         \"datetime_params\":{\n            \"month\": \"numerical\",\n            \"day\": \"numerical\",\n            \"day_of_week\": \"numerical\",\n            \"hour\":\"numerical\"\n         }\n     }\n    },\n    \"early_stopping\":\n    {\n       \"patience\":2\n\n    },\n    \"training_params\":\n    {\n       \"criterion\":\"MSE\",\n       \"optimizer\": \"Adam\",\n       \"optim_params\":\n       {\n\n       },\n       \"lr\": 0.3,\n       \"epochs\": 1,\n       \"batch_size\":4\n    },\n    \"GCS\": False,\n    \"wandb\": False,\n    \"forward_params\":{},\n   \"metrics\":[\"MSE\"],\n   \"inference_params\":\n   {\n         \"datetime_start\":\"2019-06-04\",\n          \"hours_to_forecast\":336, \n          \"num_prediction_samples\": 20,\n          \"test_csv_path\":file_path,\n          \"decoder_params\":{\n              \"decoder_function\": \"greedy_decode\", \n            \"unsqueeze_dim\": 1\n          },\n          \"dataset_params\":{\n             \"file_path\": file_path,\n            \"forecast_history\":10,\n             \"forecast_length\":2,\n             \"relevant_cols\": [\"height\", \"cfs\", \"p01m\"],\n             \"target_col\": [\"height\", \"cfs\"],\n             \"scaling\": \"StandardScaler\",\n             \"interpolate_param\":{\n           \"method\":\"back_forward_generic\",\n           \"params\":{\n               \"relevant_columns\":[\"cfs\", \"height\", \"tmpf\", \"p01m\", \"dwpf\"]\n           }},\n             \"feature_params\":\n             {\n                 \"datetime_params\":{\n                    \"month\": \"numerical\",\n                    \"day\": \"numerical\",\n                    \"day_of_week\": \"numerical\",\n                    \"hour\":\"numerical\"\n                 }\n             },\n             \"sort_column\":\"datetime\"\n          }\n      }\n  }\n  return config_default\n  \n","f3d84f24":"from flood_forecast.trainer import train_function\nimport wandb\nimport pandas as pd\n# sweep_id = wandb.sweep(sweep_config, entity=\"igodfried\",  project=\"covi-core\" )\n# os.environ[\"SWEEP_ID\"] = sweep_id\nN = 59128\ndf = pd.read_csv(\"\/kaggle\/input\/flowdb-sample\/flowdb\/0101007040B_flow\")\ndf[\"datetime\"] = df[\"hour_updated\"]\ndf.dropna(subset=[\"cfs\", \"p01m\"]).to_csv(\"final.csv\")\ntrain_function(\"PyTorch\", make_config_file(\"final.csv\", int(0.7*N), int(0.85*N), N))","6d29c744":"## Defining the configuration file\n\nBelow we have a configuration file for training an Informer Model to forecast the flow and height of the Big Black River. First lets go over what some of these parameters mean: \n- `n_time_series` like with most FF models is the total number of time series we are passing to the model. In this case three (cfs, height, and precip)\n- `dec_in` this is the input dimension to the decoder. In almost all cases this will be the same as n_time_series.\n- `c_out` this is the output size from the deocder (e.g. the number of targets). In this case we are forecasting cfs and height.\n- `seq_len` seq_len (e.g. the forecast_history)\n- `label_len` This is the length of the target sequence passed to the decoder\n- `out_len` The number of time steps forecasted (e.g. forecast_length)\n- `factor` This is the factor for the ProbablisticAttention mechanism\n\nThe rest of the configuration file is fairly standard FF stuff.","c175b8fd":"## Running with Weights and Biases","714d1e27":"# Informer for Time Series Forecasting\n\nIn this tutorial we will use [Flow Forecast, a deep learning for time series forecasting framework built in PyTorch,](https:\/\/github.com\/AIStream-Peelout\/flow-forecast) to forecast stream the flow of the Big Black River in Maine. In the [previous notebook](https:\/\/www.kaggle.com\/isaacmg\/big-black-river-analysis) we analyzed some of the basic facts about the Big Black River. Here we will train an Informer model to forecasts its river flow."}}