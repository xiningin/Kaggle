{"cell_type":{"fc985a95":"code","dcbe9737":"code","c9c98c2f":"code","175a2a87":"code","01e7b24c":"code","d90baf20":"code","d48367b2":"code","43490b57":"code","82b0c180":"code","5779d346":"code","ad4cf83b":"code","7b0e902c":"code","9b5856dc":"code","6f1132fc":"code","c206802a":"code","da1e79e9":"code","daef25c4":"code","530ea5e5":"code","a2a52c5b":"code","1f716d33":"code","695686c7":"code","9939c7a0":"code","b72c7615":"code","757ffdd3":"code","de972288":"code","4753d68a":"code","3b18454b":"code","dbb34a96":"code","e3ab0e8a":"code","91765e8f":"code","f2a42905":"code","e8e57bd8":"code","3f11f540":"code","26832735":"code","8d139ed5":"code","a1e3af74":"code","8369c7ca":"code","43e7e852":"code","59fd1dda":"code","3cc78122":"code","2701bf18":"code","40fd19d5":"markdown","86d5f399":"markdown","799482dd":"markdown","35a7b75d":"markdown","9ac5233d":"markdown","b4313420":"markdown","94e621c0":"markdown"},"source":{"fc985a95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcbe9737":"!pip install vaderSentiment\n!pip install contextualSpellCheck","c9c98c2f":"import random\nimport re\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\nanalyser = SentimentIntensityAnalyzer()\n\nimport spacy\n\n#loading english module\nnlp = spacy.load('en')\n\nimport warnings\nwarnings.filterwarnings('ignore')","175a2a87":"FILEPATH = '\/kaggle\/input\/amazon-alexa-reviews\/amazon_alexa.tsv'","01e7b24c":"df = pd.read_csv(FILEPATH, delimiter = '\\t')","d90baf20":"df.sample(3)","d48367b2":"df.describe()","43490b57":"df.info()","82b0c180":"df.shape","5779d346":"df.isnull().sum()","ad4cf83b":"df['variation'].sample(3)","7b0e902c":"import emoji\n\ndef get_emojis(content):\n    return ''.join(c for c in content if c in emoji.UNICODE_EMOJI)\n\ndef get_emojis_count(content):\n    content_gen = (c for c in content if c in emoji.UNICODE_EMOJI)\n    return sum(1 for _ in content_gen)","9b5856dc":"content = '\ud83e\udd14 \ud83d\ude48 me as\u00ed, bla es se \ud83d\ude0c ds \ud83d\udc95\ud83d\udc6d'","6f1132fc":"content","c206802a":"get_emojis(content)","da1e79e9":"df['emojis_count'] = df['verified_reviews'].apply(get_emojis_count)","daef25c4":"df.sample(2)","530ea5e5":"df['emojis_count'].unique()","a2a52c5b":"df['feedback'].unique()","1f716d33":"df[df['emojis_count'] > 1]","695686c7":"df['variation'].unique()","9939c7a0":"# Which user collected the most?\nemoji_df = df[df['emojis_count'] > 0]\nemoji_df = pd.DataFrame(emoji_df['emojis_count'].value_counts().head(10)).reset_index()\n\nemoji_df.sample(2)","b72c7615":"state_fig = go.Figure(data=[go.Pie(labels=emoji_df['index'],\n                             values=emoji_df['emojis_count'],\n                             hole=.7,\n                             title = 'Count by Emojis (more than zero)',\n                             marker_colors = px.colors.sequential.Blues_r,\n                            )\n                     ])\nstate_fig.update_layout(title = '% by Number of Emoji')\nstate_fig.show()","757ffdd3":"fig = px.scatter(df, x = \"rating\", y = \"emojis_count\",\n                 color = \"emojis_count\", size='emojis_count', color_continuous_scale = 'Inferno')\n\nfig.show()","de972288":"# Get random review\ndef get_random_review(df, col = 'verified_reviews'):\n    \n    df = df.sample(n = 1)[col].item()\n    \n    return df","4753d68a":"get_random_review(df)","3b18454b":"# Get Sentiment Analysis by using Vader\n\ndef get_sentiment_score(sentence):\n    \n    score = analyser.polarity_scores(sentence)\n    \n    compound_score = int(float(score['compound']) * 10)\n    \n    return compound_score","dbb34a96":"get_sentiment_score(get_random_review(df))","e3ab0e8a":"df['sentiment_score'] = df['verified_reviews'].apply(get_sentiment_score)","91765e8f":"df.sample(4)","f2a42905":"def get_sentiment(content):\n    \n    score = analyser.polarity_scores(content)\n    \n    # {'neg': 0.0, 'neu': 0.326, 'pos': 0.674, 'compound': 0.7351}\n    \n    positive_score = (float(score['pos']) * 10)\n    negative_score = (float(score['neg']) * 10)\n    neutral_score = (float(score['neu']) * 10)\n    compound_score = (float(score['compound']) * 10)\n    \n    return pd.Series([positive_score, negative_score, neutral_score, compound_score])","e8e57bd8":"df[['sentiment_positive_score', 'sentiment_negative_score', 'sentiment_neutral_score', 'sentiment_compound_score']] = df['verified_reviews'].apply(get_sentiment)","3f11f540":"df.sample(4)","26832735":"# df['sentiment_score'].unique()","8d139ed5":"fig = px.scatter(df, x = \"rating\", y = \"sentiment_compound_score\",\n                 color = \"sentiment_compound_score\", size='emojis_count', color_continuous_scale = 'Viridis')\n\nfig.show()","a1e3af74":"fig = px.scatter(df, x = \"sentiment_compound_score\", y = \"emojis_count\",\n                 color = \"emojis_count\", size='emojis_count', color_continuous_scale = 'inferno')\n\nfig.show()","8369c7ca":"# import re\n\ndef get_words_count(content):\n    \"\"\"\n        Get wordsc count excluding more than 2 letters\n    \"\"\"\n\n    words = re.findall(r'\\w{3,}', content.lower())\n    \n    return len(words)","43e7e852":"df['words_count'] = df['verified_reviews'].apply(get_words_count)","59fd1dda":"df.sample(3)","3cc78122":"fig = px.scatter(df, x = \"sentiment_compound_score\", y = \"words_count\",\n                 color = \"words_count\", size='words_count', color_continuous_scale = 'inferno')\n\nfig.show()","2701bf18":"from spacy import displacy\n\ndef print_text_entities(text):\n    \n    print('review :')\n    print(text)\n    doc = nlp(text)\n    for ent in doc.ents:\n        print(f'\\nEntity: {ent}, Label: {ent.label_}, {spacy.explain(ent.label_)}')\n    \ndef show_ner():\n    \n    for i in range(5):\n        df_item = df['verified_reviews'].sample(1)\n        print('index: ', df_item.index.item())\n        \n        review_line = df_item.item()\n        print_text_entities(review_line)\n        doc = nlp(review_line)\n\n        displacy.render(doc, style='ent', jupyter=True)\n\nshow_ner()","40fd19d5":"**Observation:**\n\n* People tend to express positive with more words in the review. So, more words better rating, huh!\n* We have got some negative complaints as well with much words to express their complaints. However, these are anomalies, so we could easily spot them.","86d5f399":"## Understanding Data","799482dd":"To do:\n\n* Bring NLP libraries to analyze more things\n* Try to find grammatical mistakes in the reviews\n* Try to find spelling mistakes in the reviews\n* Find Custom NER\n* Find the positive and negative review count","35a7b75d":"## Find Entities with Spacy","9ac5233d":"## Find Emojis","b4313420":"It seems there a lot of emojis available in the reviews. Our guess was right!","94e621c0":"**Observation:**\n\n* More emojis are related to better feedback and higher rating."}}