{"cell_type":{"9fed3458":"code","9d1c9f2c":"code","b9a7ed16":"code","e6d6701f":"code","e7b0e81a":"code","6f0a7b94":"code","f4254ce1":"code","abc44164":"code","2e6a35de":"code","ddc98226":"code","294aa005":"code","73dfc75a":"code","23828337":"markdown"},"source":{"9fed3458":"test=pd.read_csv(\"\/kaggle\/input\/anomaly-detection\/test.csv\")\ntrain=pd.read_csv(\"\/kaggle\/input\/anomaly-detection\/train.csv\")","9d1c9f2c":"from sklearn.preprocessing import LabelEncoder\ny_train=train[\"is_anomaly\"]\ny_lab=LabelEncoder()\ny_train=y_lab.fit_transform(y_train)\ny_train","b9a7ed16":"test","e6d6701f":"features=[\"value\",\"predicted\"]\nx_train=train[features]\n","e7b0e81a":"import matplotlib.pyplot as plt\nplt.plot(x_train[\"value\"][y_train==0],x_train[\"predicted\"][y_train==0],\"b^\")\nplt.plot(x_train[\"value\"][y_train==1],x_train[\"predicted\"][y_train==1],\"go\")\nplt.show()","6f0a7b94":"from sklearn.ensemble import RandomForestClassifier\nrnd_clf=RandomForestClassifier(n_jobs=-1)\nrnd_clf.fit(x_train,y_train)","f4254ce1":"x_test=test[features]\nprediction=rnd_clf.predict(x_test)\nprediction","abc44164":"submission=pd.read_csv(\"\/kaggle\/input\/anomaly-detection\/Submission.csv\")\nsubmission","2e6a35de":"inv_transform=y_lab.inverse_transform(prediction)\ninv_transform","ddc98226":"data={\"timestamp\":[],\"is_anomaly\":[]}\nfor id,pred in zip(test[\"timestamp\"].unique(),inv_transform):\n  data[\"timestamp\"].append(id)\n  data[\"is_anomaly\"].append(pred)\n","294aa005":"results=pd.DataFrame(data,columns=[\"timestamp\",\"is_anomaly\"])\nresults","73dfc75a":"results.to_csv(\"Submission.csv\",index=False)","23828337":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}