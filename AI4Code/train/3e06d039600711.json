{"cell_type":{"90d81da7":"code","8f2e0ebd":"code","30c58b1f":"code","e05afd70":"code","2e244b61":"code","3ea41058":"code","1620fdeb":"code","cbcd0787":"code","607f5977":"code","de1eb7d6":"code","93ccafd5":"code","d174f689":"code","48874d48":"code","fcfc6746":"code","178ef89a":"code","7a729b9f":"code","f18875aa":"code","9c3c94d9":"code","8ded5aac":"code","30d7aa10":"code","64b10a41":"code","b537b22d":"code","7a55bd2f":"code","ef9a2aa6":"code","98d8bedc":"code","88ab80c7":"code","7a52ec58":"code","940e405e":"code","30682341":"code","3983b42b":"code","f860e0a1":"code","840634d0":"code","745f0ea7":"code","b46b57d7":"code","b8349b2a":"code","99471c5f":"code","34f64b26":"code","9f85999d":"code","4fc26d34":"code","8c47e568":"code","345861d6":"code","8cc12c43":"code","d1202d77":"code","5c573aec":"code","7d16e7be":"code","6f894b0b":"code","f00b5474":"code","31ca1e49":"code","c4bb130e":"code","e6b68655":"code","8c91abaa":"code","3caa9626":"code","24ea064e":"code","4f1d3b7b":"code","8be8a619":"code","d9cd578b":"code","24e96196":"code","b6c77313":"code","3e5d008d":"code","30b2e77c":"code","ff72a6c1":"code","6df8eced":"code","b9eeb0ab":"code","8543f9bd":"code","64d236da":"code","652f0781":"code","3d144360":"code","6e8b4777":"code","3c3b8e71":"code","029d4629":"code","03cfad97":"code","50d5bb06":"code","1d82e3a9":"code","128c5ce0":"code","227ada78":"code","2742383d":"code","aed458f2":"code","20291d07":"code","a9cec3ba":"code","b0de50c4":"code","cbe1ee97":"code","d0b4f775":"code","0c6bc6c4":"code","1085b863":"code","e06bbd82":"code","9bbe368c":"code","bda8a90a":"code","b54f8b31":"code","04b67cc9":"code","7035c9f7":"code","5596e4fe":"code","0732aaf4":"code","981e6474":"code","6e77d93a":"code","d8394f40":"code","d7e5ba36":"code","53b26ad7":"code","c620decf":"code","12b2b34f":"code","a0a398a4":"code","991b7a37":"code","190b62b9":"code","d8f320e6":"code","78487475":"code","17f2570e":"code","b8ae14e2":"code","d42d64aa":"code","d6d7d1ca":"code","282ca0f5":"code","cddb7439":"code","7c4ce99d":"code","1c45352f":"code","165cfaa1":"code","6e5366f0":"code","5778119f":"code","ea023eee":"code","57f3497c":"code","344e9b30":"code","58708f04":"code","5a1a90d4":"code","0ceb8df4":"code","77b7e7eb":"code","779963ba":"code","d3b88503":"code","f63df2b9":"code","1ee25cc2":"code","8deb37ed":"code","b4407935":"code","454fc23a":"code","a2cf1a53":"code","a0d35774":"code","b0250d8d":"code","ac28a64d":"code","cdcb8736":"code","f93b9cb7":"code","ac0c907a":"code","ea031b5d":"code","351651f1":"code","40211c69":"markdown","7b98123e":"markdown","b8e29be5":"markdown","d93ed007":"markdown","5c766d1f":"markdown","0578529c":"markdown","21b68163":"markdown","9d83503b":"markdown","aba6944f":"markdown","4845561d":"markdown","22873987":"markdown","a65ef225":"markdown","b49c1c4b":"markdown","d2ad8ef9":"markdown","c7f87e18":"markdown","e47f0dd1":"markdown","27051d1b":"markdown","ba3f21f3":"markdown","81784051":"markdown","92837b97":"markdown","0fa65799":"markdown","8279933c":"markdown","e545ced0":"markdown","cb596660":"markdown","ac959121":"markdown","aa07e44f":"markdown","3420a346":"markdown","fe977f55":"markdown","2cb5fec0":"markdown","d24d635b":"markdown","742d4b1c":"markdown","2011b657":"markdown","4b400df7":"markdown","c9c66d1f":"markdown","0aa3f1f4":"markdown","9e1f0fa2":"markdown","342794a4":"markdown","41ab060b":"markdown","4a11f224":"markdown","c3951b1d":"markdown","cd376a01":"markdown","921d5f09":"markdown","4e1fddb2":"markdown","f86f96e1":"markdown","fc1c6107":"markdown","6073680b":"markdown","d9faadcc":"markdown","1e55df2b":"markdown","26297fc8":"markdown","40bcfb4d":"markdown","8d9ea3c8":"markdown","5c4d505f":"markdown","160f8877":"markdown","9da45dfb":"markdown","fec58571":"markdown","4e24a62d":"markdown","07c88b4b":"markdown","c3db1642":"markdown","58cfaf7a":"markdown","385c0d58":"markdown","01064fd6":"markdown","89e4e698":"markdown","a88b8ddf":"markdown","d5b0e247":"markdown","45ddcd31":"markdown","6314274e":"markdown","c7761c17":"markdown","33515554":"markdown","d4b0e9d8":"markdown","68bd36e4":"markdown","e908f0d1":"markdown","16b5765d":"markdown","ebe53233":"markdown","8e38a0ce":"markdown","a47d9af4":"markdown","d8ebd186":"markdown","5a24e8d2":"markdown","d676d2ec":"markdown"},"source":{"90d81da7":"import pandas as pd\n\nimport sklearn\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import MinMaxScaler\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport numpy as np\n\n%config InlineBackend.figure_format = 'svg' # Graphics in SVG format are more sharp and legible\nmpl.rcParams['figure.dpi'] = 300\nplt.rcParams['font.size'] = 12\n\n","8f2e0ebd":"adult_train = pd.read_csv(\"..\/input\/ucirepo\/adult_data.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","30c58b1f":"adult_train.head()","e05afd70":"adult_train.shape","2e244b61":"adult_train.columns","3ea41058":"adult_train.info()","1620fdeb":"adult_train.describe()","cbcd0787":"adult_train.describe(include=['object'])","607f5977":"adult_train[\"Education\"].value_counts()","de1eb7d6":"adult_train[\"Education\"].value_counts().plot(kind = \"bar\")","93ccafd5":"adult_train[\"Workclass\"].value_counts().plot(kind = \"bar\")","d174f689":"adult_train[\"Marital Status\"].value_counts().plot(kind = \"bar\")","48874d48":"adult_train[\"Occupation\"].value_counts().plot(kind = \"bar\")","fcfc6746":"adult_train[\"Relationship\"].value_counts().plot(kind = \"bar\")","178ef89a":"adult_train[\"Race\"].value_counts().plot(kind = \"bar\")","7a729b9f":"adult_train[\"Sex\"].value_counts().plot(kind = \"bar\")","f18875aa":"adult_train[\"Target\"].value_counts().plot(kind = 'bar');","9c3c94d9":"adult_train[\"Age\"].plot(kind = 'hist', bins = 73);","8ded5aac":"adult_train[\"Education-Num\"].plot(kind = 'hist', bins = 15);","30d7aa10":"adult_train[\"Capital Gain\"].plot(kind = 'hist', bins = 50);","64b10a41":"adult_train[\"Capital Loss\"].plot(kind = 'hist', bins = 50);","b537b22d":"adult_train[\"Hours per week\"].plot(kind = 'hist');","7a55bd2f":"df = adult_train.groupby([\"Target\",\"Sex\"]).mean()\ndf['Age'].plot(kind = \"bar\")\nplt.ylabel('Age');","ef9a2aa6":"df = adult_train.groupby([\"Target\",\"Sex\"]).mean()\ndf['Hours per week'].plot(kind = \"bar\")\nplt.ylabel('Hours per week');","98d8bedc":"df = adult_train.groupby([\"Target\",\"Sex\"]).mean()\ndf['Education-Num'].plot(kind = \"bar\")\nplt.ylabel('Education-Num');","88ab80c7":"df = adult_train.groupby([\"Target\",\"Sex\"]).mean()\ndf['Capital Gain'].plot(kind=\"bar\")\nplt.ylabel('Capital Gain');","7a52ec58":"df = adult_train.groupby([\"Target\",\"Sex\"]).mean()\ndf['Capital Loss'].plot(kind = \"bar\")\nplt.ylabel('Capital Loss');","940e405e":"pd.crosstab(adult_train[\"Target\"], adult_train[\"Sex\"])","30682341":"pd.crosstab(adult_train[\"Target\"], adult_train[\"Education\"])","3983b42b":"pd.crosstab(adult_train[\"Target\"], adult_train[\"Workclass\"])","f860e0a1":"pd.crosstab(adult_train[\"Target\"], adult_train[\"Country\"])","840634d0":"train_data = adult_train.dropna()","745f0ea7":"train_data.shape","b46b57d7":"train_data","b8349b2a":"train_data_analysis = train_data\ntrain_data_analysis = train_data_analysis.apply(preprocessing.LabelEncoder().fit_transform)","99471c5f":"train_data_analysis.corr()","34f64b26":"train_data_analysis.corr().Target.sort_values()","9f85999d":"abs(train_data_analysis.corr().Target).sort_values(ascending=False)","4fc26d34":"test_data = pd.read_csv(\"..\/input\/ucirepo\/adult_test.csv\",\n        names=[\n        \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\",\n        \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n        \"Hours per week\", \"Country\", \"Target\"],\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\").dropna()","8c47e568":"test_data.shape","345861d6":"test_data.head()","8cc12c43":"x_train = train_data[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\ny_train = train_data.Target\nx_test = test_data[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\ny_test = test_data.Target","d1202d77":"knn = KNeighborsClassifier(n_neighbors = 3)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","5c573aec":"scores","7d16e7be":"knn.fit(x_train,y_train)","6f894b0b":"y_predict = knn.predict(x_test)","f00b5474":"y_predict","31ca1e49":"accuracy_score(y_test,y_predict)","c4bb130e":"knn = KNeighborsClassifier(n_neighbors = 30)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","e6b68655":"scores","8c91abaa":"knn.fit(x_train,y_train)","3caa9626":"y_predict = knn.predict(x_test)","24ea064e":"accuracy_score(y_test,y_predict)","4f1d3b7b":"knn = KNeighborsClassifier(n_neighbors = 16, p = 1)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","8be8a619":"scores","d9cd578b":"knn.fit(x_train,y_train)","24e96196":"y_predict = knn.predict(x_test)","b6c77313":"accuracy_score(y_test,y_predict)","3e5d008d":"k_range = list(range(1, 31))\nweight_options = ['uniform', 'distance']\np_options = list(range(1,3))\nparam_grid = dict(n_neighbors=k_range, p=p_options)","30b2e77c":"knn = KNeighborsClassifier(n_neighbors=1)\n\ngrid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy', n_jobs = -2)","ff72a6c1":"grid.fit(x_train, y_train)\nprint(grid.best_estimator_)\nprint(grid.best_score_)","6df8eced":"knn = KNeighborsClassifier(n_neighbors = 18, p = 1)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","b9eeb0ab":"scores","8543f9bd":"knn.fit(x_train,y_train)","64d236da":"y_predict = knn.predict(x_test)","652f0781":"accuracy_score(y_test,y_predict)","3d144360":"scaler = MinMaxScaler()\n\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","6e8b4777":"k_range = list(range(1, 41))\nweight_options = ['uniform', 'distance']\np_options = list(range(1,3))\nparam_grid = dict(n_neighbors=k_range, p=p_options)","3c3b8e71":"knn = KNeighborsClassifier(n_neighbors=1)\n\ngrid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy', n_jobs = -2)","029d4629":"grid.fit(x_train, y_train)\nprint(grid.best_estimator_)\nprint(grid.best_score_)","03cfad97":"knn = KNeighborsClassifier(n_neighbors = 36, p = 2)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","50d5bb06":"scores","1d82e3a9":"knn.fit(x_train,y_train)","128c5ce0":"y_predict = knn.predict(x_test)","227ada78":"accuracy_score(y_test,y_predict)","2742383d":"x_train = train_data[[\"Capital Gain\", \"Education-Num\", \"Relationship\", \"Age\", \"Hours per week\", \"Sex\", \"Marital Status\", \n                      \"Capital Loss\"]].apply(preprocessing.LabelEncoder().fit_transform)\ny_train = train_data.Target\nx_test = test_data[[\"Capital Gain\", \"Education-Num\", \"Relationship\", \"Age\", \"Hours per week\", \"Sex\", \"Marital Status\", \n                      \"Capital Loss\"]].apply(preprocessing.LabelEncoder().fit_transform)\ny_test = test_data.Target","aed458f2":"knn = KNeighborsClassifier(n_neighbors = 39)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","20291d07":"scores","a9cec3ba":"knn.fit(x_train,y_train)","b0de50c4":"y_predict = knn.predict(x_test)","cbe1ee97":"accuracy_score(y_test,y_predict)","d0b4f775":"k_range = list(range(1, 41))\nweight_options = ['uniform', 'distance']\np_options = list(range(1,3))\nparam_grid = dict(n_neighbors=k_range, p=p_options)","0c6bc6c4":"knn = KNeighborsClassifier(n_neighbors=1)\n\ngrid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy', n_jobs = -2)","1085b863":"grid.fit(x_train, y_train)\nprint(grid.best_estimator_)\nprint(grid.best_score_)","e06bbd82":"knn = KNeighborsClassifier(n_neighbors = 23, p = 1)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","9bbe368c":"knn.fit(x_train,y_train)","bda8a90a":"y_predict = knn.predict(x_test)","b54f8b31":"accuracy_score(y_test,y_predict)","04b67cc9":"scaler = MinMaxScaler()\n\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","7035c9f7":"k_range = list(range(1, 41))\nweight_options = ['uniform', 'distance']\np_options = list(range(1,3))\nparam_grid = dict(n_neighbors=k_range, p=p_options)","5596e4fe":"knn = KNeighborsClassifier(n_neighbors=1)\n\ngrid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy', n_jobs = -2)","0732aaf4":"grid.fit(x_train, y_train)\nprint(grid.best_estimator_)\nprint(grid.best_score_)","981e6474":"knn = KNeighborsClassifier(n_neighbors = 23, p = 1)\nscores = cross_val_score(knn, x_train, y_train, cv = 10)","6e77d93a":"scores","d8394f40":"knn.fit(x_train,y_train)","d7e5ba36":"y_predict = knn.predict(x_test)","53b26ad7":"accuracy_score(y_test,y_predict)","c620decf":"df_pred_out = pd.DataFrame({'income':y_predict})","12b2b34f":"df_pred_out.head()","a0a398a4":"df_pred_out.to_csv(\"submission.csv\", index = True, index_label = 'Id')","991b7a37":"pd.options.display.max_columns = 150\n\nhousehold_train = pd.read_csv('..\/input\/householddata\/train.csv')\nhousehold_test = pd.read_csv('..\/input\/householddata\/test.csv')\n\nhousehold_train.head()","190b62b9":"household_train.info()","d8f320e6":"household_train.select_dtypes(np.int64).nunique().value_counts().sort_index().plot.bar(color = 'blue', \n                                                                             figsize = (8, 6));\n                                                                            \nplt.xlabel('N\u00famero de Unique Values'); plt.ylabel('Contagem');\nplt.title('Contagem de unique values em colunas de inteiros');","78487475":"from collections import OrderedDict\n\nplt.figure(figsize = (20, 16))\n\n  \ncolors = OrderedDict({1: 'red', 2: 'orange', 3: 'blue', 4: 'green'})  # Mapeamento das cores\npoverty_mapping = OrderedDict({1: 'extreme', 2: 'moderate', 3: 'vulnerable', 4: 'non vulnerable'})  # Mapeamento n\u00edveis pobreza\n\n  # Iterar pelas colunas com vari\u00e1veis tipo float\nfor i, col in enumerate(household_train.select_dtypes('float')):\n    ax = plt.subplot(4, 2, i+1)\n    # Iterate through the poverty levels\n    for poverty_level, color in colors.items():\n        # Plot each poverty level as a separate line\n        sns.kdeplot(household_train.loc[household_train['Target'] == poverty_level, col].dropna(), \n                    ax = ax, color = color, label = poverty_mapping[poverty_level])\n        \n    plt.title(f'Distribui\u00e7\u00e3o de {col.capitalize()}'); plt.xlabel(f'{col}'); plt.ylabel('Densidade')\n\nplt.subplots_adjust(top = 2)","17f2570e":"household_train.select_dtypes('object').head()","b8ae14e2":"mapping = {\"yes\": 1, \"no\": 0}  # Mapeamento para convers\u00e3o das vari\u00e1veis\n\n\nfor df in [household_train, household_test]:  # Aplicar a mesma opera\u00e7\u00e3o para bases de treino e de teste\n    # Substituir valores de acordo com o mapeamento (convers\u00e3o para vari\u00e1vel do tipo float)\n    df['dependency'] = df['dependency'].replace(mapping).astype(np.float64) \n    df['edjefa'] = df['edjefa'].replace(mapping).astype(np.float64)\n    df['edjefe'] = df['edjefe'].replace(mapping).astype(np.float64)\n\nhousehold_train[['dependency', 'edjefa', 'edjefe']].describe()","d42d64aa":"plt.figure(figsize = (12, 8))\n\n# Itera pelas colunas com vari\u00e1veis de tipo float\nfor i, col in enumerate(['dependency', 'edjefa', 'edjefe']):\n    ax = plt.subplot(3, 1, i + 1)\n    # Itera pelos n\u00edveis de pobreza\n    for poverty_level, color in colors.items():\n        # Desenha cada n\u00edvel de pobreza como uma linha separada\n        sns.kdeplot(household_train.loc[household_train['Target'] == poverty_level, col].dropna(), \n                    ax = ax, color = color, label = poverty_mapping[poverty_level])\n        \n    plt.title(f'Distribui\u00e7\u00e3o de {col.capitalize()}'); plt.xlabel(f'{col}'); plt.ylabel('Densidade')\n\nplt.subplots_adjust(top = 3)","d6d7d1ca":"household_test['Target'] = np.nan  # Adiciona coluna Target nula \u00e0 base de teste\ndata = household_train.append(household_test, ignore_index = True)","282ca0f5":"# Chefes de fam\u00edlia\nheads = data.loc[data['parentesco1'] == 1].copy()\n\n# Labels para treino\ntrain_labels = data.loc[(data['Target'].notnull()) & (data['parentesco1'] == 1), ['Target', 'idhogar']]\n\n# Contagem de valores da vari\u00e1vel Target\nlabel_counts = train_labels['Target'].value_counts().sort_index()\n\n# Gr\u00e1fico de barras das ocorr\u00eancias para cada label\nlabel_counts.plot.bar(figsize = (8, 6), \n                      color = colors.values(),\n                      edgecolor = 'k', linewidth = 2)\n\nplt.xlabel('N\u00edvel de pobreza'); plt.ylabel('Contagem'); \nplt.xticks([x - 1 for x in poverty_mapping.keys()], \n           list(poverty_mapping.values()), rotation = 60)\nplt.title('An\u00e1lise do n\u00edvel de pobreza');\n\nlabel_counts","cddb7439":"# Agrupar a fam\u00edlia e descobrir o n\u00famero de unique values\nall_equal = household_train.groupby('idhogar')['Target'].apply(lambda x: x.nunique() == 1)\n\nnot_equal = all_equal[all_equal != True]  # Fam\u00edlias em que os valores da vari\u00e1vel Target n\u00e3o s\u00e3o iguais\nprint('Existem {} fam\u00edlias cujos membros n\u00e3o apresentam o mesmo valor para a vari\u00e1vel Target.'.format(len(not_equal)))\n","7c4ce99d":"household_train[household_train['idhogar'] == not_equal.index[20]][['idhogar', 'parentesco1', 'Target']]","1c45352f":"missing = pd.DataFrame(data.isnull().sum()).rename(columns = {0: 'total'})  # N\u00famero de dados faltantes em cada coluna\n\nmissing['percentual'] = missing['total'] \/ len(data)  # Percentual de dados faltantes\n\nmissing.sort_values('percentual', ascending = False).head(10).drop('Target')","165cfaa1":"heads[\"v18q1\"].value_counts()","6e5366f0":"heads.groupby('v18q')['v18q1'].apply(lambda x: x.isnull().sum())","5778119f":"data['v18q1'] = data['v18q1'].fillna(0)","ea023eee":"own_variables = [x for x in data if x.startswith('tipo')]  # Vari\u00e1veis indicadores de status de propriedade da casa\n\n\n  # Gr\u00e1fico representativo das vari\u00e1veis de status de propriedade para paguamentos de aluguel faltantes\ndata.loc[data['v2a1'].isnull(), own_variables].sum().plot.bar(figsize = (10, 8),\n                                                                        color = 'purple',\n                                                              edgecolor = 'k', linewidth = 2);\nplt.xticks([0, 1, 2, 3, 4],\n           ['Owns and Paid Off', 'Owns and Paying', 'Rented', 'Precarious', 'Other'],\n          rotation = 60)\nplt.title('Status de Propriedade da Casa para Fam\u00edlias com Pagamentos de Aluguel Faltantes', size = 15);","57f3497c":"data.loc[(data['tipovivi1'] == 1), 'v2a1'] = 0  # Preencher pagamento de aluguel com zeros para fam\u00edlias com casa pr\u00f3pria","344e9b30":"data.loc[data['rez_esc'].notnull()]['age'].describe()","58708f04":"data.loc[data['rez_esc'].isnull()]['age'].describe()","5a1a90d4":"# Se o indiv\u00edduo \u00e9 maior de 19 ou menor de 7 anos e houver dados faltantes, completar com zero\ndata.loc[((data['age'] > 19) | (data['age'] < 7)) & (data['rez_esc'].isnull()), 'rez_esc'] = 0","0ceb8df4":"id_ = ['Id', 'idhogar', 'Target']","77b7e7eb":"ind_bool = ['v18q', 'dis', 'male', 'female', 'estadocivil1', 'estadocivil2', 'estadocivil3', \n            'estadocivil4', 'estadocivil5', 'estadocivil6', 'estadocivil7', \n            'parentesco1', 'parentesco2',  'parentesco3', 'parentesco4', 'parentesco5', \n            'parentesco6', 'parentesco7', 'parentesco8',  'parentesco9', 'parentesco10', \n            'parentesco11', 'parentesco12', 'instlevel1', 'instlevel2', 'instlevel3', \n            'instlevel4', 'instlevel5', 'instlevel6', 'instlevel7', 'instlevel8', \n            'instlevel9', 'mobilephone']\n\nind_ordered = ['rez_esc', 'escolari', 'age']","779963ba":"hh_bool = ['hacdor', 'hacapo', 'v14a', 'refrig', 'paredblolad', 'paredzocalo', \n           'paredpreb','pisocemento', 'pareddes', 'paredmad',\n           'paredzinc', 'paredfibras', 'paredother', 'pisomoscer', 'pisoother', \n           'pisonatur', 'pisonotiene', 'pisomadera',\n           'techozinc', 'techoentrepiso', 'techocane', 'techootro', 'cielorazo', \n           'abastaguadentro', 'abastaguafuera', 'abastaguano',\n            'public', 'planpri', 'noelec', 'coopele', 'sanitario1', \n           'sanitario2', 'sanitario3', 'sanitario5',   'sanitario6',\n           'energcocinar1', 'energcocinar2', 'energcocinar3', 'energcocinar4', \n           'elimbasu1', 'elimbasu2', 'elimbasu3', 'elimbasu4', \n           'elimbasu5', 'elimbasu6', 'epared1', 'epared2', 'epared3',\n           'etecho1', 'etecho2', 'etecho3', 'eviv1', 'eviv2', 'eviv3', \n           'tipovivi1', 'tipovivi2', 'tipovivi3', 'tipovivi4', 'tipovivi5', \n           'computer', 'television', 'lugar1', 'lugar2', 'lugar3',\n           'lugar4', 'lugar5', 'lugar6', 'area1', 'area2']\n\nhh_ordered = [ 'rooms', 'r4h1', 'r4h2', 'r4h3', 'r4m1','r4m2','r4m3', 'r4t1',  'r4t2', \n              'r4t3', 'v18q1', 'tamhog','tamviv','hhsize','hogar_nin',\n              'hogar_adul','hogar_mayor','hogar_total',  'bedrooms', 'qmobilephone']\n\nhh_cont = ['v2a1', 'dependency', 'edjefe', 'edjefa', 'meaneduc', 'overcrowding']","d3b88503":"sqr_ = ['SQBescolari', 'SQBage', 'SQBhogar_total', 'SQBedjefe', \n        'SQBhogar_nin', 'SQBovercrowding', 'SQBdependency', 'SQBmeaned', 'agesq']","f63df2b9":"x = ind_bool + ind_ordered + id_ + hh_bool + hh_ordered + hh_cont + sqr_\n\nfrom collections import Counter\n\nprint('N\u00e3o h\u00e1 repeti\u00e7\u00f5es: ', np.all(np.array(list(Counter(x).values())) == 1))\nprint('Cobrimos todas as vari\u00e1veis: ', len(x) == data.shape[1])","1ee25cc2":"data = data.drop(columns = sqr_)\ndata.shape","8deb37ed":"heads = data.loc[data['parentesco1'] == 1, :]\nheads = heads[id_ + hh_bool + hh_cont + hh_ordered]\nheads.shape","b4407935":"  # Create correlation matrix\ncorr_matrix = heads.corr()  # Cria matriz de correla\u00e7\u00e3o\n\n  # Seleciona tri\u00e2ngulo superior da matriz de correla\u00e7\u00e3o\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\n\n  # Encontra \u00edndice das colunas de features com correla\u00e7\u00e3 maior que 0.95\nto_drop = [column for column in upper.columns if any(abs(upper[column]) > 0.95)]\n\nto_drop","454fc23a":"corr_matrix.loc[corr_matrix['tamhog'].abs() > 0.9, corr_matrix['tamhog'].abs() > 0.9]","a2cf1a53":"sns.heatmap(corr_matrix.loc[corr_matrix['tamhog'].abs() > 0.9, corr_matrix['tamhog'].abs() > 0.9],\n            annot=True, cmap = plt.cm.autumn_r, fmt='.3f');","a0d35774":"heads = heads.drop(columns = ['tamhog', 'hogar_total', 'r4t3'])","b0250d8d":"heads = heads.drop(columns = 'area2')\n\nheads.groupby('area1')['Target'].value_counts(normalize = True)","ac28a64d":"# Usando apenas a base de treino\ntrain_heads = heads.loc[heads['Target'].notnull(), :].copy()\n\npcorrs = pd.DataFrame(train_heads.corr()['Target'].sort_values()).rename(columns = {'Target': 'pcorr'}).reset_index()\npcorrs = pcorrs.rename(columns = {'index': 'feature'})\n\nprint('Vari\u00e1veis mais negativamente correlacionadas:')\nprint(pcorrs.head())\n\nprint('\\nVari\u00e1veis mais positivamente correlacionadas:')\nprint(pcorrs.dropna().tail())","cdcb8736":"heads.shape","f93b9cb7":"  # Labels para treino\ntrain_labels = np.array(list(heads[heads['Target'].notnull()]['Target'].astype(np.uint8)))\n\n  # Conjuntos de treino e de teste\ntrain_set = heads[heads['Target'].notnull()].drop(columns = ['Id', 'idhogar', 'Target'])\ntest_set = heads[heads['Target'].isnull()].drop(columns = ['Id', 'idhogar', 'Target'])\n\n  # Base de submiss\u00e3o\nsubmission_base = household_test[['Id', 'idhogar']].copy()","ac0c907a":"train_set = train_set.apply(preprocessing.LabelEncoder().fit_transform)\ny_train_set = heads.Target.dropna()","ea031b5d":"knn = KNeighborsClassifier(n_neighbors = 3)\nscores = cross_val_score(knn, train_set, y_train_set, cv = 10)","351651f1":"scores","40211c69":"tipovivi1 = 1, own and fully paid house;\n tipovivi2 = 1, own paying in installments;\n tipovivi3 = 1, rented;\n tipovivi4 = 1, precarious;\n tipovivi5 = 1, other(assigned, borrowed);","7b98123e":"Significado das vari\u00e1veis: ","b8e29be5":"Como a quantidade de classes neste caso \u00e9 maior, acaba sendo mais dif\u00edcil visualizar quais s\u00e3o as tend\u00eancias. Uma alternativa seria tra\u00e7ar um gr\u00e1fico para ver em que propor\u00e7\u00e3o o pa\u00eds de origem est\u00e1 associado aos ganhos de uma pessoa. Tentaremos outra estrat\u00e9gia mais adiante, mas com a tabela j\u00e1 \u00e9 poss\u00edvel notar discrep\u00e2ncias associadas ao pa\u00eds da pessoa.","d93ed007":"## Explora\u00e7\u00e3o dos dados","5c766d1f":"A partir apenas disso n\u00e3o \u00e9 poss\u00edvel tirar muitas conclus\u00f5es, mas nas discuss\u00f5es da competi\u00e7\u00e3o podemos ver que essa vari\u00e1vel est\u00e1 definida apenas para indiv\u00edduos entre 7 e 19 anos. Fora desse intervalo podemos considerar <code>rez_esc == 0<\/code>.","0578529c":"A primeira tentativa ser\u00e1 realizada com k = 3 vizinhos mais pr\u00f3ximos.","21b68163":"Tentativa com k = 30 vizinhos:","9d83503b":"Encontrando os pares das vari\u00e1veis:","aba6944f":"## Sele\u00e7\u00e3o do parametro k (do kNN)","4845561d":"Podemos ver que 7 atributos s\u00e3o do tipo <code>int64<\/code> e 9 s\u00e3o do tipo <code>object<\/code>. Tamb\u00e9m \u00e9 poss\u00edvel ver onde h\u00e1 dados faltantes.","22873987":"## Explora\u00e7\u00e3o dos Dados","a65ef225":"Realizemos uma limpeza nos dados pelo descarte de valores faltantes:","b49c1c4b":"Fica expl\u00edcito que o maior conjunto de fam\u00edlias \u00e9 o que se encontra em situa\u00e7\u00e3o n\u00e3o vulner\u00e1vel, ao passo que o menor conjunto \u00e9 o de extrema pobreza. Devemos ter em mente que num problema desbalanceado como esse, o classificador pode ter dificuldade de realizar predi\u00e7\u00f5es para os conjuntos de menor tamanho, pois h\u00e1 menos exemplos para trein\u00e1-lo.","d2ad8ef9":"O m\u00e9todo <code>info()<\/code> fornece algumas informa\u00e7\u00f5es gerais sobre o DataFrame:","c7f87e18":"Tentativa com k = 16 vizinhos, p = 1 (minkowski metric):","e47f0dd1":"Mais \u00e0 frente, verificaremos a correla\u00e7\u00e3o entre as demais vari\u00e1veis e a <i>Target<\/i>, mas aqui j\u00e1 \u00e9 poss\u00edvel notar que, por exemplo, um maior n\u00edvel de educa\u00e7\u00e3o, expresso pela vari\u00e1vel <b>meaneduc<\/b>, est\u00e1 associado a menores n\u00edveis de pobreza.","27051d1b":"Conseguimos melhorar ainda mais a acur\u00e1cia. Poder\u00edamos continuar testando melhorias exaustivamente, mas uma hora \u00e9 necess\u00e1rio encerrar a an\u00e1lise. O resultado alcan\u00e7ado \u00e9 bastante razo\u00e1vel se comparado ao desempenho alcan\u00e7ado por testes mais sofisticados, cujos resultados foram publicados pela UCI.","ba3f21f3":"Hip\u00f3tese: Quando h\u00e1 um dado faltante, significa que n\u00e3o h\u00e1 <i>tablets<\/i> de propriedade da fam\u00edlia.","81784051":"Olhemos para um exemplo:","92837b97":"O resultado \u00e9 pr\u00f3ximo ao que conseguimos anteriormente, mas um pouco melhor, definindo k = 39. Podemos ainda fazer outras tentativas de melhorar a acur\u00e1cia da predi\u00e7\u00e3o.","0fa65799":"H\u00e1 uma s\u00e9rie de vari\u00e1veis que est\u00e3o associadas ao tamanho da casa\/fam\u00edlia. <b>hhsize<\/b> est\u00e1 perfeitamente correlacionada com <b>tamhog<\/b> e <b>hogar_total<\/b>. Removeremos essas vari\u00e1veis por serem redundantes. Tamb\u00e9m podemos remover <b>r4t3<\/b>.","8279933c":"### Testes com os atributos de maior correla\u00e7\u00e3o","e545ced0":"H\u00e1 tr\u00eas vari\u00e1veis que apresentam um percentual alto de valores faltantes. Teremos que olhar mais de perto cada uma delas e tomar decis\u00f5es.","cb596660":"Agora vamos identificar alguns problemas nos dados. H\u00e1 fam\u00edlias que apresentam mais de um valor de n\u00edvel de pobreza entre seus membros. Isso pode ser feito verificando se h\u00e1 apenas um <i>unique value<\/i> para a variavel <i>Target<\/i> para cada fam\u00edlia:","ac959121":"<b>v2a1<\/b>: Pagamento de aluguel mensal - A an\u00e1lise desta vari\u00e1vel pode ser simplificada se olharmos para a distribui\u00e7\u00e3o das vari\u00e1veis <b>tipovivi<\/b>-, que mostram o <i>status<\/i> de propriedade\/aluguel das casas.","aa07e44f":"H\u00e1 algo mais importante para tratar: encontrar os valores faltantes e decidir com o que fazer com eles. Pode ser que encontremos alguma solu\u00e7\u00e3o razo\u00e1vel para preench\u00ea-los (o que seria desej\u00e1vel). Primeiro, vamos ver o percentual de valores faltantes para cada coluna:","3420a346":"Para realizar o treino do modelo, precisamos agrupar os indiv\u00edduos em fam\u00edlias para termos dados consolidados em n\u00edvel familiar. Usaremos as descri\u00e7\u00f5es dos dados para distinguir colunas que se referem a indiv\u00edduos de colunas que se referem ao n\u00facleo familiar.","fe977f55":"# PMR 3508 -  Trabalho 1: Base Adult\n\nNotebook com a explora\u00e7\u00e3o dos dados da base Adult, avalia\u00e7\u00e3o do impacto da sele\u00e7\u00e3o de vari\u00e1veis e sele\u00e7\u00e3o do par\u00e2metro k do algoritmo kNN.","2cb5fec0":"O m\u00e9todo adotado ser\u00e1: identificar pares vari\u00e1veis com correla\u00e7\u00e3o maior que um certo limite (0.95), das quais poderemos (talvez) dispensar uma que comp\u00f5e o par devido \u00e0 sua redund\u00e2ncia.","d24d635b":"## Sele\u00e7\u00e3o do par\u00e2metro k (do kNN)","742d4b1c":"A exibi\u00e7\u00e3o de estat\u00edsticas b\u00e1sicas dos atributos num\u00e9ricos \u00e9 de nosso interesse, bem como dos atributos categ\u00f3ricos, que ser\u00e3o exibidos desde que sejam indicados.","2011b657":"Agora vamos testar o <b>GridSearchCV<\/b> com <code>MinMaxScaler()<\/code>:","4b400df7":"Subconjunto dos chefes de fam\u00edlia:","c9c66d1f":"Podemos remover a coluna <b>area2<\/b> porque ela diz se a casa est\u00e1 numa zona rural, mas j\u00e1 existe outra vari\u00e1vel que diz se est\u00e1 numa zona urbana.","0aa3f1f4":"Utilizando <b>GridSearchCV<\/b> para sele\u00e7\u00e3o de hiperpar\u00e2metros:","9e1f0fa2":"Agora os dados que foram tratados anteriormente est\u00e3o representados de forma correta por n\u00fameros podem ser utilizados para treinar um classificador. ","342794a4":"## Feature engineering","41ab060b":"Verificando se n\u00e3o h\u00e1 repeti\u00e7\u00f5es e se n\u00e3o esquecemos de nenhuma vari\u00e1vel:","4a11f224":"A pessoa mais velha que n\u00e3o apresenta um dado faltante nessa coluna tem 17 anos. Agora vejamos a idade para aqueles que apresentam dados faltantes:","c3951b1d":"<b>GridSearchCV<\/b> com <code>MinMaxScaler()<\/code>:","cd376a01":"Algumas categorias parecem estar associadas a maior ganho, como <i>Bachelors<\/i>, <i>Doctorate<\/i>, <i>Masters<\/i>, <i>Prof-School<\/i>...","921d5f09":"Por algum motivo incerto (possivelmente dados sobreajustados), n\u00e3o foram selecionados k = 16, p = 1, que apresentaram o melhor resultado testado.","4e1fddb2":"Podemos seguir de modo semelhante para os demais atributos categ\u00f3ricos para facilitar sua visualiza\u00e7\u00e3o:","f86f96e1":"Para a maioria das vari\u00e1veis referentes ao n\u00facleo familiar, podemos deix\u00e1-las como est\u00e3o, porque nosso objetivo \u00e9 realizar predi\u00e7\u00f5es nesse n\u00edvel particular, e ent\u00e3o as usaremos como <i>features<\/i>. No entanto, tamb\u00e9m podemos remover vari\u00e1veis redundantes. ","fc1c6107":"Isso resolve grande parte do problema, pois as fam\u00edlias que n\u00e3o pagam aluguel mensalmente em sua maioria t\u00eam casa pr\u00f3pria. Para uma parcela menor, n\u00e3o sabemos a raz\u00e3o pela qual falta a informa\u00e7\u00e3o. Ou seja, para o primeiro grupo, podemos garantir que o valor do aluguel \u00e9 zero.","6073680b":"### Testes apenas com atributos num\u00e9ricos","d9faadcc":"Uma imensa maioria das pessoas apresenta <i>Capital Gain<\/i> baixo, o que provavelmente est\u00e1 associado ao fato de que a maioria das pessoas apresenta <i>Income<\/i> <= 50k.","1e55df2b":"Estamos interessados em atributos que apresentam maior correla\u00e7\u00e3o com a vari\u00e1vel <i>Target<\/i>. Em seguida, listamos os valores de interesse em ordem descrescente:","26297fc8":"Sabendo que <b>v18q<\/b> indica indica se a fam\u00edlia tem um <i>tablet<\/i> ou n\u00e3o, podemos agrupar seu valor e contar o n\u00famero de valores nulos para <b>v18q1<\/b> e testar a hip\u00f3tese.","40bcfb4d":"A hip\u00f3tese foi confirmada. Ou seja, podemos preencher os dados faltantes, para esta vari\u00e1vel, com zeros:","8d9ea3c8":"Os organizadores da competi\u00e7\u00e3o deram a informa\u00e7\u00e3o de que o n\u00edvel de pobreza correto \u00e9 o do chefe de fam\u00edlia. Portanto, todos os indiv\u00edduos que comp\u00f5em a fam\u00edlia deste exemplo deveriam apresentar <code>Target == 3<\/code>. Este problema poderia ser corrigido pela atribui\u00e7\u00e3o do n\u00edvel de pobreza do chefe de fam\u00edlia a todos os membros da fam\u00edlia (e ainda seria necess\u00e1rio verificar se h\u00e1 fam\u00edlias sem chefe que apresentam discrep\u00e2ncias no n\u00edvel de pobreza). No entanto, isso n\u00e3o ser\u00e1 necess\u00e1rio pois, como s\u00f3 queremos realizar predi\u00e7\u00f5es no n\u00edvel da fam\u00edlia, basta considerar o n\u00edvel de pobreza do chefe (quando houver um).","5c4d505f":"\n# Atividade extra: <i>Costa Rican Household Poverty Level Prediction<\/i>","160f8877":"## Escolha das vari\u00e1veis para realizar a predi\u00e7\u00e3o","9da45dfb":"Vamos agrupar alguns atributos categ\u00f3ricos e ver a rela\u00e7\u00e3o com atributos num\u00e9ricos:","fec58571":"Vamos tra\u00e7ar um gr\u00e1fico de barras a partir da tabela:","4e24a62d":"Outra op\u00e7\u00e3o \u00e9 utilizar <b>GridSearchCV<\/b> para sele\u00e7\u00e3o de hiperpar\u00e2metros.","07c88b4b":"Podemos representar graficamente a distribui\u00e7\u00e3o das vari\u00e1vies do tipo <i>float<\/i> coloridas de acordo com o valor da vari\u00e1vel <i>Target<\/i> para visualizar como se comportam essas vari\u00e1veis cont\u00ednuas:","c3db1642":"Vamos verificar a distribui\u00e7\u00e3o de <i>labels<\/i> para termos no\u00e7\u00e3o do qu\u00e3o desbalanceado \u00e9 a base. Estamos interessados apenas linhas em que <code>parentesco1 == 1<\/code> porque esse \u00e9 o chefe de fam\u00edlia, ou seja, seu n\u00edvel de pobreza representa o n\u00edvel de pobreza da fam\u00edlia","58cfaf7a":"As duas primeiras colunas s\u00e3o identificadores, mas as outras apresentam misturas de n\u00fameros e strings. Defini\u00e7\u00f5es das vari\u00e1veis:\n\n<b>dependency<\/b>: Dependency rate, calculated = (number of members of the household younger than 19 or older than 64)\/(number of member of household between 19 and 64)\n\n<b>edjefe<\/b>: years of education of male head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0\n\n<b>edjefa<\/b>: years of education of female head of household, based on the interaction of escolari (years of education), head of household and gender, yes=1 and no=0\n\nCom essas informa\u00e7\u00f5es, podemos converter os valores dessas vari\u00e1veis:\n","385c0d58":"A maioria das pessoas apresenta idade entre 30 e 40 anos.","01064fd6":"Comecemos pela importa\u00e7\u00e3o da base de teste:","89e4e698":"Para dados quantitativos, vamos tra\u00e7ar histogramas.","a88b8ddf":"Embora a melhora em rela\u00e7\u00e3o aos resultados anteriores tenha sido modesta, houve algum progresso.","d5b0e247":"Primeiramente vamos separar os dados de treino e de teste:","45ddcd31":"Foram realizados diversos outros testes, dentre os quais escolhemos os de melhor resultado.","6314274e":"Verificando as dimens\u00f5es, os nomes dos atributos e seus tipos de dados:","c7761c17":"Antes de realizar o treino a partir dos atributos que apresentam maior correla\u00e7\u00e3o com a vari\u00e1vel de interesse, faremos uma tentativa com algo mais simples para ter uma refer\u00eancia. Come\u00e7aremos escolhendo apenas os atributos num\u00e9ricos para realizar o treino variando o n\u00famero de vizinhos.","33515554":"Para facilitar nosso trabalho de <i>feature engineering<\/i> mais adiante, vamos juntar os <i>dataframes<\/i> de treino e de teste em apenas um, porque as mesmas opera\u00e7\u00f5es dever\u00e3o ser realizadas sobre ambos:","d4b0e9d8":"Podemos explorar os dados para al\u00e9m do que j\u00e1 fora realizado acima, mas um jeito mais simples de prosseguir com a an\u00e1lise \u00e9 calcular a correla\u00e7\u00e3o entre os atributos e a vari\u00e1vel <i>Target<\/i> (<i>Income<\/i>) selecionar as mais adequadas para o classificador. Para isso, usaremos label encoding para tratar as vari\u00e1veis categ\u00f3ricas:","68bd36e4":"<b>v18q1<\/b>: N\u00famero de <i>tablets<\/i> (da fam\u00edlia)","e908f0d1":"Conclui-se que, neste caso, o resultado \u00e9 pior ao incluir a segunda t\u00e9cnica.","16b5765d":"Colunas com 2 <i>unique values<\/i> representam vari\u00e1veis booleanas. Algumas delas j\u00e1 se referem a <i>household<\/i> e n\u00e3o a indiv\u00edduos, como a coluna <b>refrig<\/b>. As que se referem a indiv\u00edduos devem ser agrupadas.","ebe53233":"O m\u00e9todo <code>value_counts()<\/code> auxilia na visualiza\u00e7\u00e3o da distribui\u00e7\u00e3o dos atributos pela gera\u00e7\u00e3o de uma tabela de frequ\u00eancia:","8e38a0ce":"Maiores correla\u00e7\u00f5es entre <i>Target<\/i> e: <i>Capital Gain<\/i>, <i>Education-Num<\/i>, <i>Relationship<\/i>, <i>Age<\/i>, <i>Hours per week<\/i>, <i>Sex<\/i>, <i>Marital Status<\/i>, <i>Capital Loss<\/i>. As demais vari\u00e1veis parecem influenciar muito pouco.","a47d9af4":"Usaremos DataFrames para representar os dados. Come\u00e7aremos pela leitura da base (usando <code>read_csv<\/code>) e pela visualiza\u00e7\u00e3o das primeiras 5 linhas usando o m\u00e9todo <code>head()<\/code>:","d8ebd186":"Vamos remover vari\u00e1veis quadr\u00e1ticas, assumindo que elas s\u00e3o redundantes, pois n\u00e3o usaremos um modelo linear e sua maior utilidade estaria em capturar n\u00e3o linearidades nos dados. Al\u00e9m disso, como elas est\u00e3o altamente correlacionadas com as vari\u00e1veis n\u00e3o-quadr\u00e1ticas, podem acabar nos atrapalhando mais do que ajudando.","5a24e8d2":"<b>rez_esc<\/b>: anos de atraso na escola - Vamos verificar as idades das pessoas que n\u00e3o apresentam dados faltantes nessa coluna e tamb\u00e9m das que apresentam:","d676d2ec":"Neste caso, devido a pequena quantidade de categorias, \u00e9 mais f\u00e1cil ver como h\u00e1 uma rela\u00e7\u00e3o entre os ganhos de uma pessoa e o seu sexo. Homens tendem a ganhar mais que mulheres."}}