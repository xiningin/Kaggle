{"cell_type":{"f3ea2c22":"code","334d1539":"code","84b2b8ac":"code","d26da513":"code","ab4e627a":"code","91af0226":"code","47c9cb10":"code","77097bd6":"markdown","5910ff34":"markdown","0e8fe900":"markdown","47672fec":"markdown"},"source":{"f3ea2c22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","334d1539":"\n# Load libraries\nimport pandas\nfrom pandas.plotting import scatter_matrix\nimport matplotlib.pyplot as plt\nfrom sklearn import model_selection\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\ninfo=pd.read_csv(\"\/kaggle\/input\/iris-flower-dataset\/IRIS.csv\",sep=',')\narray = info.values\nX = array[:,0:4] # This will select first 4 columns which have data \nY = array[:,4] # This will select Last column which includes the class\/species\nvalidation_size = 0.20\nseed = 7\nX_train, X_validation, Y_train, Y_validation = model_selection.train_test_split(X, Y, test_size=validation_size, random_state=seed)\ninfo","84b2b8ac":"models = []\nscoring = 'accuracy'\nmodels.append(('LR', LogisticRegression(solver='liblinear', multi_class='ovr')))\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC(gamma='auto')))\nresults = []\nnames = []\nfor name, model in models:\n\tkfold = model_selection.KFold(n_splits=10, random_state=seed)\n\tcv_results = model_selection.cross_val_score(model, X_train, Y_train, cv=kfold, scoring=scoring)\n\tresults.append(cv_results)\n\tnames.append(name)\n\tmsg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.std())\n\tprint(msg)","d26da513":"fig = plt.figure()\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","ab4e627a":"knn = KNeighborsClassifier()\nknn.fit(X_train, Y_train)\npredictions = knn.predict(X_validation)\nprint(accuracy_score(Y_validation, predictions))\nprint(confusion_matrix(Y_validation, predictions))\nprint(classification_report(Y_validation, predictions))","91af0226":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(color_codes=True)\nimport pandas as pd\n%matplotlib inline\n# violinplots on petal-length for each species\nsns.violinplot(data=info,x=\"species\", y=\"petal_length\")\ninfo.hist(edgecolor='black', linewidth=1.2)\n","47c9cb10":"sns.pairplot(info, hue=\"species\")","77097bd6":"Some Visualisation of the data distribution","5910ff34":"#Build Model\nLet\u2019s evaluate 6 different algorithms:\n\n    Logistic Regression (LR)\n    Linear Discriminant Analysis (LDA)\n    K-Nearest Neighbors (KNN).\n    Classification and Regression Trees (CART).\n    Gaussian Naive Bayes (NB).\n    Support Vector Machines (SVM).\n","0e8fe900":"#Compare Algorithm","47672fec":"Validation of the model (Example for KNN)"}}