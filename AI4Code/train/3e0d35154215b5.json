{"cell_type":{"585d867f":"code","22d8783e":"code","a9189395":"code","09cd1c8e":"code","5bebadd6":"code","03fc8d59":"code","1c166a5a":"code","d2dcac51":"code","67626edc":"code","6c2d0056":"code","866c572c":"code","7cc92e52":"code","b569e95a":"markdown","38d75db2":"markdown","61054a47":"markdown","2bac4d24":"markdown","4c68dcb9":"markdown","97f3a711":"markdown","f37619f8":"markdown","683be0a5":"markdown","ee8c6a6a":"markdown","f5348bb8":"markdown","98caf86d":"markdown","772fbbbb":"markdown","46cfe4f9":"markdown","c96f64da":"markdown","0c93050d":"markdown","394dbd7b":"markdown","9fa1f258":"markdown","02a5e997":"markdown"},"source":{"585d867f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# load libs\nimport sys\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# General\npd.set_option('display.max_columns', 500)\nnp.set_printoptions(sys.maxsize)\npd.set_option('display.float_format', lambda x: '%.2f' % x)\npd.options.display.float_format = '{:,}'.format\n\n# plot style\nmatplotlib.style.use('seaborn-pastel')\n\n# common functions\ndef add_comma(value):\n    return '{:,d}'.format(int(value))\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        # print(os.path.join(dirname, filename))\n        pass\n\n# Any results you write to the current directory are saved as output.\n\n# load full data set\nloan =  pd.read_csv('\/kaggle\/input\/lending-club-loan-data\/loan.csv')\n\n# drop all columns with all null values \nloan_no_nan = loan.dropna(axis=1, how = 'all')","22d8783e":"cols = ['loan_amnt','funded_amnt','funded_amnt_inv']\ncompare_df = loan_no_nan[cols]\n\nlabels = [ \"[0, 4450.0]\", \"[4450.0, 8400.0]\", \"[8400.0, 12350.0]\", \"[12350.0, 16300.0]\", \"[16300.0, 20250.0]\",   \n\"[20250.0, 24200.0]\", \"[24200.0, 28150.0]\", \"[28150.0, 32100.0]\",\"[32100.0, 36050.0]\", \"[36050.0, 40000.0]\" ]\n\nloan_amnt_cat = pd.cut( compare_df['loan_amnt'], 10, labels=labels )\nloan_amnt_cat_asc = loan_amnt_cat.value_counts().sort_index()\n\nfunded_amnt_cat = pd.cut( compare_df['funded_amnt'], 10, labels=labels )\nfunded_amnt_cat_asc = funded_amnt_cat.value_counts().sort_index()\n\nfunded_amnt_inv_cat = pd.cut( compare_df['funded_amnt_inv'], 10, labels=labels )\nfunded_amnt_inv_cat_asc = funded_amnt_inv_cat.value_counts().sort_index()\n\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(18,12), sharex=True)\nax.set_title(\"Fig 1: Distribution of loan amounts vs loan amount invested\",y=-.14,fontsize=18)\n\nbarWidth = 0.27\n\nax.grid(linestyle='-', linewidth=.5, alpha=0.5)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n\n# Set position of bar on X axis\nr1 = np.arange(len(labels))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n\n# Create blue bars\nbar1 = plt.bar(r1, loan_amnt_cat_asc, width = barWidth, color = '#D4BEBE', edgecolor = 'black', capsize=7, label='loan_amnt')\nbar2 = plt.bar(r2, funded_amnt_cat_asc, width = barWidth, color = '#ADA0A6', edgecolor = 'black', capsize=7, label='funded_amnt')\nbar3 = plt.bar(r3, funded_amnt_inv_cat_asc, width = barWidth, color = '#CF8BA9', edgecolor = 'black', capsize=7, label='funded_amnt_inv')\n\nh = []\ndef autolabel(rects):\n    for rect in rects:\n        ax.text(rect.get_x()+.10, rect.get_height() + 23000, str(add_comma(rect.get_height())), fontsize=10, rotation=50)\n\n        \nautolabel(bar1)\nautolabel(bar2)\nautolabel(bar3)\n\n# general layout\nplt.ylabel('Loan Amount')\nplt.xticks([r + barWidth for r in range(len(labels))], labels, rotation=12)\nplt.legend()\n \n# Show graphic\nplt.show()","a9189395":"features = ['loan_amnt','funded_amnt','funded_amnt_inv']\nsub_df_3a = loan_no_nan.filter(items=features)\n\nf_VS_finv = sub_df_3a.funded_amnt - sub_df_3a.funded_amnt_inv\nbins = [1,100,200,300,400,500,1000,5000,10000,20000,max(f_VS_finv)]\n# index = f_VS_finv > 10\n# f_VS_finv = f_VS_finv.loc[index]\nf_VS_finv_cat = pd.cut(f_VS_finv,bins=bins,include_lowest=True,precision=1)\nf_VS_finv_cat_asc = f_VS_finv_cat.value_counts().sort_index()\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(20,10), sharex=True)\nax.set_title(\"Fig 2: Distribution of difference in loan amounts requested & funded\",y=-.24,fontsize=18)\n\nax.grid(linestyle='-', linewidth=.5, alpha=0.5)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# plot\nf_VS_finv_asc = f_VS_finv.value_counts(bins=bins).sort_index(ascending=True)\nf_VS_finv_asc.plot(kind='bar', rot=25, fontsize=14, ax=ax)\n\n# annotation\nfor p in ax.patches:\n    ax.annotate(str(add_comma(p.get_height())), (p.get_x() * 1.010, p.get_height() + 1000))\n\nplt.show()","09cd1c8e":"# Fig 3: Distribution of loan amounts asked by borrowers\n\n# loan_amnt\nloan_amnt = loan_no_nan.loan_amnt\n\n# sort\nloan_amnt_asc = loan_amnt.sort_values(ascending=True)\n\n# Styling plot\nf, ax = plt.subplots(figsize=(15,9))\nax.set_title(\"Fig 3: Distribution of loan amounts asked by borrowers\",y=-.20,fontsize=18)\n\nax.grid(linestyle='-', linewidth=.5, alpha=0.5)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# plot\nloan_amnt_asc = loan_amnt.value_counts(bins=10).sort_index(ascending=True)\nprint(loan_amnt_asc)\nloan_amnt_asc.plot(kind='bar', rot=12, fontsize=14)\n\n# annotation\nfor p in ax.patches:\n    ax.annotate(str(add_comma(p.get_height())), (p.get_x() * 1.010, p.get_height() + 4000))","5bebadd6":"# Fig 4: Loan amount & loan term\n\nfeatures  = ['term','funded_amnt_inv']\nsub_df_4a = loan_no_nan.filter(items=features)\n\nsub_df_4a.term = sub_df_4a.term.str.extract('(\\d+)')\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(12,7))\nax.set_title(\"Fig 4: Loan amount & loan term\",y=-.16,fontsize=18)\n\n\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# plot\nsns.boxplot(x=\"term\", y=\"funded_amnt_inv\", data=sub_df_4a,width=0.3, ax=ax)","03fc8d59":" # Fig 5: Loan Grades \n    \ngrade = loan_no_nan.grade.value_counts(normalize=False).rename_axis('type').to_frame('counts').reset_index()\nprint(grade)\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(10,10), sharex=False)\nax.set_title(\"Fig 6: Loan Grades\",y=-.11,fontsize=18)\n\n# Data to plot\nlabels = grade.type.unique()\nsizes = grade.counts\nexplode = (0.0,0,0,0,0,0,0)  # explode 1st slice\n\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%', shadow=False, startangle=45)\n\nplt.axis('equal')\nplt.show()\n","1c166a5a":"## Fig x: Purpose of Loan \n\ntitle = ['Debt Consolidation','Credit Card Refinancing','Home Improvement','Other Reasons']\ncounts = ['1194386','482211','141151','350398']\npercentage = [55.02,22.21,6.50,16.14]\n\npurpose_of_loan = pd.DataFrame({'title':title,'counts':counts})\nprint(purpose_of_loan)         \n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(10,10), sharex=False)\nax.set_title(\"Fig 7: Purpose of loan\",y=-.11,fontsize=18)\n\n# Data to plot\nlabels = purpose_of_loan.title.unique()\nsizes = purpose_of_loan.counts\nexplode = (0.0,0,0,0)\n\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%', shadow=False, startangle=270)\n\nplt.axis('equal')\nplt.show()","d2dcac51":"# Fig 7: Home ownership\/rent\/mortgage Vs employee length\n\nfeatures  = ['emp_length','home_ownership']\nsub_df_5a = loan_no_nan.filter(items=features)\n\n#label = {idx:labels for labels,idx in enumerate(sub_df_5a.emp_length.unique())}\nlabels = {'10+ years': 10.0, '6 years': 6.0, '4 years': 4.0, '< 1 year': 0.9, '2 years': 2.0,'9 years': 9.0,\n         'nan': 0, '5 years': 5.0, '3 years': 3.0, '7 years': 7.0, '1 year': 1.0,'8 years': 8.0}\n\nsub_df_5a.emp_length = sub_df_5a.emp_length.map(labels)\n\nbins = [0.9,5,9,10]\nre_grouped = sub_df_5a.groupby([pd.cut(sub_df_5a.emp_length, bins),'home_ownership']).size()\nre_grouped = re_grouped.reset_index()\nre_grouped.columns = ['emp_length', 'home_ownership', 'counts']\nre_grouped.drop(re_grouped.loc[re_grouped['home_ownership'].isin(['ANY','NONE','OTHER'])].index, inplace=True)\nre_grouped = re_grouped.pivot(index='emp_length', columns='home_ownership', values='counts')\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(16,10), sharex=False)\nax.set_title(\"Fig 7: Home ownership\/rent\/mortgage Vs employee length\",y=-.14,fontsize=18)\n\nax.grid(linestyle='-', linewidth=.2, alpha=0.1)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n#re_grouped = re_grouped.sort_values(by='emp_length', ascending=True)\nre_grouped.plot(kind='bar',ax=ax, rot=0)\n\n# annotation\nfor p in ax.patches:\n    ax.annotate(str(add_comma(p.get_height())), (p.get_x() * 1.012, p.get_height() + 2500))","67626edc":"# Fig 8: Heatmap of Borrowers\n\nimport plotly.offline as plot\n\nfeatures = ['addr_state','funded_amnt_inv']\nsub_df_6a = loan_no_nan.filter(items=features)\n\n# Data pre processing\nstates_funded = sub_df_6a.groupby(['addr_state']).sum().reset_index()\nstates_count = sub_df_6a.addr_state.value_counts().rename_axis('code').to_frame('counts').reset_index()\nstates = pd.merge(left=states_funded, right=states_count, left_on='addr_state', right_on='code')\n\n# states.round(2)\n\n\n# Plotting\nstates['text']= 'Amount : '+states['funded_amnt_inv'].astype(str)\n\n# print('gia tri cua states',states)\ndata=[dict(type='choropleth',autocolorscale=False,locations=states['code'], z = states['counts']\n           ,locationmode='USA-states',text= states['text'], colorscale='burgyl'\n           ,colorbar=dict(title='Total Loans'))]\n\n# print('gia tri data',data)\n\nlayout=dict(title='Fig 8: Heatmap of Borrowers', geo=dict(scope='usa'\n        ,projection=dict(type='albers usa'),showlakes=True, lakecolor='rgb(66,165,245)',),)\n# print('gia tri layout',layout)\n\nfig = dict(data=data, layout = layout)\nplot.iplot(fig, filename='d3-choropleth-map')","6c2d0056":"# Fig 0: Heatmap of Population Density","866c572c":"# Fig 10: Distribution of Debt to Income Ratios\n\n\nfeatures = ['dti']\nsub_df_8 = loan_no_nan.filter(items=features)\nprint(\"median : {}\".format(sub_df_8.dti.median()))\n\n# remove outliers\nfrom scipy import stats\nz = (sub_df_8.dti - sub_df_8.dti.mean())\/sub_df_8.dti.std(ddof=0)\nsub_df_8.dti = sub_df_8.dti.loc[(z < 2)]\nsub_df_8.describe().round(2)\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(12,7), sharex=True)\nax.set_title('Fig 10: Heatmap of Population Density',y=-0.16,fontsize=18)\n\nax.grid(linestyle='-', linewidth=.2, alpha=0.3)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nplt.legend(prop={'size': 16})\n\n# plot\nsns.distplot(sub_df_8.dti,norm_hist=True)","7cc92e52":"# Fig 11 : Distribution of loan amounts for borrowers with annual income > $100k\n\nfeatures = ['annual_inc','loan_amnt']\nsub_df_7a = loan_no_nan.filter(items=features)\n\npd.set_option('precision', 2)\nlsr_than_1million = sub_df_7a[sub_df_7a['annual_inc'] > 100000]\nlsr_than_1million.describe().round(2)\n\nbins = [min(lsr_than_1million.loan_amnt),10000,20000,30000,max(lsr_than_1million.loan_amnt)]\nloan_amnt_cat = pd.cut(lsr_than_1million.loan_amnt,bins=bins,include_lowest=True,precision=1,duplicates='drop')\nloan_amnt_cat_asc = loan_amnt_cat.value_counts().sort_index().rename_axis('loan_amnt').to_frame('count')\n\nprint(loan_amnt_cat_asc)\n\n\n# Styling plot\nf, ax = plt.subplots(1,1,figsize=(12,7), sharex=False)\nax.set_title('Fig 11 : Distribution of loan amounts for borrowers with annual income > $100k',y=-0.14,fontsize=18)\n\nax.grid(linestyle='-', linewidth=.2, alpha=0.1)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nplt.legend(prop={'size': 16})\nplt.title('')\nplt.xlabel('Loan amount')\nplt.ylabel('No of Loan availed')\n\n# Plot\nax = loan_amnt_cat_asc.plot(ax=ax,linestyle='-',color='DarkOrange',legend=False, marker='x',alpha=0.7)\nloan_amnt_cat_asc.plot(kind='bar', rot=0, fontsize=14, ax=ax, alpha=0.5)\n\n\n# annotation\nfor p in ax.patches:\n    ax.annotate(str(add_comma(p.get_height())), (p.get_x() * 1.010, p.get_height() + 1500))\n","b569e95a":"Borrowers with high annual income\n\nAccording to a 2019 CNBC survey, about 60% of people above \\$100k annual income considered themselves Rich, so we created a subset to understand behavior of borrowers with annual income above \\$100k.\n\n- 7% of the borrowers have an annual income of more than \\$100k\n- 75% of these borrowers are less than \\$161k\n- Average loan amount is \\$21,671 and median is \\$21,000","38d75db2":"Loans Split across US states \n\n1. 14% of the borrowers are from California \n1. 8.25% of the borrowers from each Texas & New York \n1. 7% from Florida \n1. These 4 states make up for 37.5% of the total loan borrowers & total loan quantum \n","61054a47":"Interestingly, the loan split heat map above almost mirrors the population heat map as below\n","2bac4d24":"| **Grade** | **A** | **B** | **C** | **D** | **E** | **F** | **G** |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Average Interest Rate | 7.08 | 10.68 | 14.14 | 18.14 | 21.83 | 25.45 | 28.07 |\n| Interest Rate for 75% of borrowers is below | 7.89 | 11.49 | 15.02 | 19.03 | 23.99 | 28.69 | 30.79 |\n| Interest Rate Range as per LC website currently | 8.46 to 10.81 | 13.33 to 16.08 | 17.3 to 20.74 | 22.62 to 30.99 | 28.90 to 29 | 29.35 to 30.75 | 30.79 to 30.99 |","4c68dcb9":"Loan Grades \n1. The loan grade is the result of credit score & several indicators of credit risk from the credit report and loan application. \n1. Each loan is assigned a grade from between A to G and subgrade of 1 to 5\n1. Loan grades A,B,C,D contribute to 91% totally\n1. LC has discontinued lending to profiles with grades F & G from Sept 2017 and discontinued grade E from July 2019 due to higher charge off rates & delinquencies leading to high volatility in investor returns. \n1. Also, a borrower with earlier credit history (having started the credit line early is also an indication of age) did not necessarily have better grades assigned. We observed a low correlation between the two variables. \n","97f3a711":"The distribution of loan amounts is: \n1. Average of the loan amounts was \\$15,023 and the median is \\$12,800\n1. 75% of the borrowers requested for loans less than \\$20,000 \n1. 50% of the borrowers requested for loans below $12,800\n","f37619f8":"Interest Rates \n1. 13.09% is the average interest rate (same as last quarter\u2019s average as quoted on LC\u2019s website) \n1. Median interest rate is at 12.62%\n1. 75% of the loans are less than 16% interest rate \n1. Highest interest rate is 31% & Lowest interest rate is 5.31%\n1. Grade wise interest rate is as follows: \n","683be0a5":"Joint Vs Individual Applicants \n\n1. Only 5.3% of the loans have Joint applicants\n1. Borrowers who had a joint applicant had lesser % of people with accounts due > 120 days\n    ","ee8c6a6a":"Purpose of Loan\n\n1. About 77% of the people borrowed for Debt consolidation or credit card refinancing\n1. This trend indicates that either these borrowers are out of regular banking options or the hassles of borrowing are lower on LC\n1. Other reasons include: Car buying, Wedding, Medical, Business Vacation, etc\n1. Interesting reasons:\n    - 782 people for building\/repairing swimming pool\n    - 146 people for buying a boat\n    - 121 people for buying Engagement Ring\n    - 41 people for buying ATV","f5348bb8":"| | **No. Of Borrowers** | **%** | **No. Of ppl who had accounts due >120 days** | **%** |\n| --- | --- | --- | --- | --- |\n| **Individual** | 2139958 | 94.66% | 432409 | 20.21% |\n| **Joint Applicant** | 120710 | 5.34% | 20961 | 17.36% |","98caf86d":"Distribution of home ownership\/rent\/mortgage Vs employee length\n\n- We tested to identify if there is a dependency on the employee length\n- As expected, borrowers with less than 5 years experience were the maximum ones who lived in rented homes\n- Interestingly borrowers with less than 5 years also had more mortgage loans than people with 5 to 9 years experience. These less than 5 years borrowers could&#39;ve taken mortgage loans early in their careers and hence the need to borrow from LC.","772fbbbb":"### ***Based on the sample provided by Lending Club (LC)***\n\nThe purpose of this study is to offer some insights to any potential investor looking to invest in Lending club\u2019s notes or loans. The viewpoints are purely based on inferences arrived from the sample of 2.2 mn loan cases totalling to USD 34 bn out of the total loan cases since inception being 4.5 mn loan cases totalling to USD 57 bn i.e. 48% of the total loan cases & about 60% of the total loan quantum.\n\n#### **Lending Club:**\nLending Club is an American peer-to-peer lending company which enables borrowers to create loan listings by posting their loan requirement and investors get to choose individual borrowers to lend to or notes to invest. Individual loan amounts are up to $40,000. \n\n#### **Investors can invest in 2 forms:**\n1. Look for the loans listed on LC platform and manually pick the borrowers one wishes to lend to. The profile, credit background and loan information for each listing is provided. This is a manual process & the investor must find the suitable borrower \n\n1. Invest in Notes which are securities that correspond to fractions of loans. Investors are not providing loans directly to the borrower, instead, they are investing in SEC-registered securities. This can be automated by setting the investment criteria (like grade, term etc) and the system will place orders for matching Notes. The minimum value of notes is $25 and is not insured by Federal Deposit Insurance Corporation (FDIC)\n\n#### **An investor perspective**\n\nPrior to choosing the mode of investment, the investor has multiple resources on the LC website to verify and understand the borrower characteristics. We have attempted to analyze those details & offer an independent view. \n \n#### **Basic stats on the borrowers** \n\nWe tested if all the loans requested by borrowers were funded and realised that:\n\n1. 96.5% of the borrowers preferred to receive the loan amount as a cash deposit in their account rather than direct payments to a 3rd party. \n1. 99.84% of the total loan amount requested by borrowers were funded on LC. \n1. 93.3% of the borrowers received the full amount requested. \n1. The difference in loan amount requested to the amount funded was less than $300 for 94% of the borrowers. \n1. This is a clear indication that all loans get funded irrespective of the grade, profile or other parameters. \n1. Basically risky profiles are offered loans at higher interest rates.  \n","46cfe4f9":"Debt to Income Ratio \n1. A ratio calculated using the borrower\u2019s total monthly debt payments on the total debt obligations, excluding mortgage and the requested LC loan, divided by the borrower\u2019s self-reported monthly income.\n1. An extremely key parameter to consider before lending a non-secured loan and helps the investor assess if the borrower is over-leveraged or not. \n1. Also helps in assessing the kind of borrower to whom loans are being issued and LC maintains a good ratio on this. \n1. Average is about 18.82% and the median is about 17.84%\n1. 75% of the borrowers are below 24.42% ratio which means most borrowers debt obligations only up to 25% of their annual income\n","c96f64da":"Predicting delinquencies based on borrower profile could help the investor and if one intends to predict or expect low charge off, the following parameters of the borrower are key to evaluate:\n\n| **Loan Parameters** | **Borrower Parameters** |\n| --- | --- |\n| Loan Amount | Employee Length |\n| Term of the loan | Home Ownership |\n| Interest Rate | Annual Income |\n| Grade \/ Subgrade | Verification Status |\n|\n | Purpose of Loan |\n|\n | Debt to Income Ratio |","0c93050d":"| **% of Borrowers** | **Verified** | **Not Verified** |\n| --- | --- | --- |\n| W.r.t. total sample size | 67.1% | 32.9% |\n| Who Charged off within 12 months | 0.86% | 0.56% |\n| who had accounts due \\&gt;120 days | 23.2% | 20.2% |\n| With Tax liens | 3.29% | 1.97% |\n| With at Least One Delinquency in the last 2 years | 19.4% | 17.1% |","394dbd7b":"# Lending Club - notes for a potential investor ","9fa1f258":"Terms of the loans \n1. LC offers only 2 terms - 3 year & 5year loans. \n1. We tested to understand for a given loan amount, what could be the loan term and determined the following with 95% confidence. \n1. The horizontal line inside each box represents mean for each loan term\n","02a5e997":"Verification of Annual Income\n\nLC&#39;s website claims that annual income or the source of income is verified for 69.6% of the loans issued. Also the not verified category has the lowest charge off rate compared to income verified or source verified categories. Since 2010, the unverified category of borrowers have lower charge off rates.\n\nOur inferences on these are as follows:\n\n- 1% of the profiles are either income or source of income verified\n- As mentioned in the website, charge off rate, tax liens, overdue accounts, delinquencies% were lower for &quot;Not Verified&quot; cases.\n- While this is counter intuitive, the reason is due to LC&#39;s matching algorithm which chooses the profiles which do not require verification"}}