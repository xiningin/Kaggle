{"cell_type":{"1a94f8d7":"code","2962ee9a":"code","87c18c08":"code","5730a1f8":"code","b51f24fc":"code","9384618d":"code","17b6d605":"code","54ae30fa":"code","f1cc646e":"code","bf1c430d":"code","419c07b4":"code","0ce74bed":"code","d523a428":"code","f9914c63":"code","38e5fbd9":"code","3369aa93":"code","fb15f785":"code","a713d7fe":"code","6d39cf55":"code","214b5655":"code","5d50a69c":"code","06670a84":"code","b87c90db":"code","d0bfc7c8":"code","6cdf4eba":"code","0d6e2559":"code","406c0633":"code","69a07df1":"code","945bfb5f":"code","e2c2fbc6":"code","d9364419":"code","4e805997":"code","2779e78d":"code","70a0473e":"code","6b662985":"code","ab2131d3":"code","b63fae71":"code","be196774":"code","b31f032e":"code","f9e88fa3":"code","667f7e7f":"code","d47b3fde":"markdown","8f83aa14":"markdown","9641167a":"markdown","dd28f1a6":"markdown","6f59a853":"markdown","3abb6b44":"markdown","631572be":"markdown","8bbbd13b":"markdown","b6efe3aa":"markdown","5dc58ca3":"markdown","2fcced14":"markdown","e4f17a5b":"markdown","722c1bef":"markdown","31075774":"markdown","1b874d6a":"markdown"},"source":{"1a94f8d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2962ee9a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","87c18c08":"train=pd.read_csv('\/kaggle\/input\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/test.csv')","5730a1f8":"print(train.shape[0],train.shape[1])","b51f24fc":"print(test.shape[0],test.shape[1])","9384618d":"train.head()","17b6d605":"test.head()","54ae30fa":"sns.heatmap(train.corr(),annot=True)","f1cc646e":"train.isna().sum()","bf1c430d":"meanvalue=train['Number_Weeks_Used'].mean()\ntrain['Number_Weeks_Used']=train['Number_Weeks_Used'].fillna(meanvalue)\ntrain.isna().sum()","419c07b4":"test.isna().sum()","0ce74bed":"meanvalue=test['Number_Weeks_Used'].mean()\ntest['Number_Weeks_Used']=test['Number_Weeks_Used'].fillna(meanvalue)\ntest.isna().sum()","d523a428":"train.Crop_Damage.value_counts().plot.pie(autopct=\"%0.2f%%\")","f9914c63":"train.Crop_Damage.value_counts()","38e5fbd9":"plt.title('Estimated_Insects_Count vs Crop_Damage')\nsns.boxplot(x='Crop_Damage',y='Estimated_Insects_Count',data=train)","3369aa93":"plt.figure(figsize=(12,8))\nplt.title('Estimated Insects count vs crop damage')\nsns.distplot(train['Estimated_Insects_Count'][train['Crop_Damage']==0],bins=30,kde=True,hist=False,kde_kws={\"color\": \"red\", \"label\": \"0-Alive\"})\nsns.distplot(train['Estimated_Insects_Count'][train['Crop_Damage']==1],bins=30,kde=True,hist=False,kde_kws={\"color\": \"green\", \"label\": \"1-Damage due to other reasons\"})\nsns.distplot(train['Estimated_Insects_Count'][train['Crop_Damage']==2],bins=30,kde=True,hist=False,kde_kws={\"color\": \"blue\", \"label\": \"2-Damage due to pesticides\"})","fb15f785":"for i,row in train.iterrows():\n    if(train['Estimated_Insects_Count'][i]<=1100):\n        train['Estimated_Insects_Count'][i]=0;\n    elif (train['Estimated_Insects_Count'][i]>1100 and train['Estimated_Insects_Count'][i]<=2250):\n        train['Estimated_Insects_Count'][i]=1;\n    else:\n        train['Estimated_Insects_Count'][i]=2;\n\n        \n        \nfor i,row in test.iterrows():\n    if(test['Estimated_Insects_Count'][i]<=1100):\n        test['Estimated_Insects_Count'][i]=0;\n    elif (test['Estimated_Insects_Count'][i]>1100 and test['Estimated_Insects_Count'][i]<=2250):\n        test['Estimated_Insects_Count'][i]=1;\n    else:\n        test['Estimated_Insects_Count'][i]=2;\n","a713d7fe":"plt.title('Number of doses per week vs Crop_Damage')\nsns.boxplot(x='Crop_Damage',y='Number_Doses_Week',data=train)","6d39cf55":"plt.figure(figsize=(12,8))\nplt.title('Number of doses per week vs crop damage')\nsns.distplot(train['Number_Doses_Week'][train['Crop_Damage']==0],bins=30,kde=True,hist=False,kde_kws={\"color\": \"red\", \"label\": \"0-Alive\"})\nsns.distplot(train['Number_Doses_Week'][train['Crop_Damage']==1],bins=30,kde=True,hist=False,kde_kws={\"color\": \"green\", \"label\": \"1-Damage due to other reasons\"})\nsns.distplot(train['Number_Doses_Week'][train['Crop_Damage']==2],bins=30,kde=True,hist=False,kde_kws={\"color\": \"blue\", \"label\": \"2-Damage due to pesticides\"})","214b5655":"plt.title('Weeks used vs Crop_Damage')\nsns.boxplot(x='Crop_Damage',y='Number_Weeks_Used',data=train)","5d50a69c":"plt.figure(figsize=(12,8))\nplt.title('Number of weeks used vs crop damage')\nsns.distplot(train['Number_Weeks_Used'][train['Crop_Damage']==0],bins=10,kde=True,hist=False,kde_kws={\"color\": \"red\", \"label\": \"0-Alive\"})\nsns.distplot(train['Number_Weeks_Used'][train['Crop_Damage']==1],bins=10,kde=True,hist=False,kde_kws={\"color\": \"green\", \"label\": \"1-Damage due to other reasons\"})\nsns.distplot(train['Number_Weeks_Used'][train['Crop_Damage']==2],bins=10,kde=True,hist=False,kde_kws={\"color\": \"blue\", \"label\": \"2-Damage due to pesticides\"})","06670a84":"for i,row in train.iterrows():\n    if(train['Number_Weeks_Used'][i]<=5):\n        train['Number_Weeks_Used'][i]=0;\n    elif (train['Number_Weeks_Used'][i]>5 and train['Number_Weeks_Used'][i]<=30):\n        train['Number_Weeks_Used'][i]=1;\n    elif(train['Number_Weeks_Used'][i] >30 and train['Number_Weeks_Used'][i] <35):\n        train['Number_Weeks_Used'][i]=2;\n    else:\n        train['Number_Weeks_Used'][i]=3;\n\n        \nfor i,row in test.iterrows():\n    if(test['Number_Weeks_Used'][i]<=5):\n        test['Number_Weeks_Used'][i]=0;\n    elif (test['Number_Weeks_Used'][i]>5 and test['Number_Weeks_Used'][i]<=30):\n        test['Number_Weeks_Used'][i]=1;\n    elif(test['Number_Weeks_Used'][i] >30 and test['Number_Weeks_Used'][i] <35):\n        test['Number_Weeks_Used'][i]=2;\n    else:\n        test['Number_Weeks_Used'][i]=3;","b87c90db":"plt.title('Weeks Quit vs Crop_Damage')\nsns.boxplot(x='Crop_Damage',y='Number_Weeks_Quit',data=train)","d0bfc7c8":"plt.figure(figsize=(12,8))\nplt.title('Weeks Quit vs crop damage')\nsns.distplot(train['Number_Weeks_Quit'][train['Crop_Damage']==0],bins=10,kde=True,hist=False,kde_kws={\"color\": \"red\", \"label\": \"0-Alive\"})\nsns.distplot(train['Number_Weeks_Quit'][train['Crop_Damage']==1],bins=10,kde=True,hist=False,kde_kws={\"color\": \"green\", \"label\": \"1-Damage due to other reasons\"})\nsns.distplot(train['Number_Weeks_Quit'][train['Crop_Damage']==2],bins=10,kde=True,hist=False,kde_kws={\"color\": \"blue\", \"label\": \"2-Damage due to pesticides\"})","6cdf4eba":"plt.figure(figsize=(12,4))\nplt.subplot(121)\nplt.title('Soil type vs crop damage')\nsns.countplot(x='Crop_Damage',data=train,hue='Soil_Type')\nplt.subplot(122)\nplt.title('Crop type vs crop damage')\nsns.countplot(x='Crop_Damage',data=train,hue='Crop_Type')","0d6e2559":"plt.figure(figsize=(12,4))\nplt.subplot(121)\nplt.title('Season vs crop damage')\nsns.countplot(x='Crop_Damage',data=train,hue='Season')\nplt.subplot(122)\nplt.title('Pesticide vs crop damage')\nsns.countplot(x='Crop_Damage',data=train,hue='Pesticide_Use_Category')","406c0633":"train['Total_Doses']=train['Number_Doses_Week']*train['Number_Weeks_Used']\ntest['Total_Doses']=test['Number_Doses_Week']*test['Number_Weeks_Used']","69a07df1":"plt.title('Total doses vs Crop_Damage')\nsns.boxplot(x='Crop_Damage',y='Total_Doses',data=train)","945bfb5f":"plt.figure(figsize=(12,8))\nplt.title('Total_Doses vs crop damage')\nsns.distplot(train['Total_Doses'][train['Crop_Damage']==0],bins=30,kde=True,hist=False,kde_kws={\"color\": \"red\", \"label\": \"0-Alive\"})\nsns.distplot(train['Total_Doses'][train['Crop_Damage']==1],bins=30,kde=True,hist=False,kde_kws={\"color\": \"green\", \"label\": \"1-Damage due to other reasons\"})\nsns.distplot(train['Total_Doses'][train['Crop_Damage']==2],bins=30,kde=True,hist=False,kde_kws={\"color\": \"blue\", \"label\": \"2-Damage due to pesticides\"})","e2c2fbc6":"train.head()","d9364419":"test.head()","4e805997":"traindata=train.drop(['ID','Soil_Type','Number_Weeks_Quit','Crop_Damage'],axis=1)\ntestdata=test.drop(['ID','Soil_Type','Number_Weeks_Quit'],axis=1)","2779e78d":"traindata.head()","70a0473e":"testdata.head()","6b662985":"traindata['Crop_Type']=traindata.Crop_Type.astype(str)\ntraindata['Pesticide_Use_Category']=traindata.Pesticide_Use_Category.astype(str)\ntraindata['Season']=traindata.Season.astype(str)\ntraindata['Estimated_Insects_Count']=traindata.Estimated_Insects_Count.astype(str)\ntraindata['Number_Weeks_Used']=traindata.Number_Weeks_Used.astype(str)\n\ntestdata['Crop_Type']=testdata.Crop_Type.astype(str)\ntestdata['Pesticide_Use_Category']=testdata.Pesticide_Use_Category.astype(str)\ntestdata['Season']=testdata.Season.astype(str)\ntestdata['Estimated_Insects_Count']=testdata.Estimated_Insects_Count.astype(str)\ntestdata['Number_Weeks_Used']=testdata.Number_Weeks_Used.astype(str)","ab2131d3":"X=traindata.iloc[:,:]\nX=pd.get_dummies(X,['Crop_Type','Pesticide_Used_Category','Season','Estimated_Insects_Count','Number_Weeks_Used'])\n\nX_test=testdata.iloc[:,:]\nX_test=pd.get_dummies(X_test,['Crop_Type','Pesticide_Used_Category','Season','Estimated_Insects_Count','Number_Weeks_Used'])","b63fae71":"y=train.iloc[:,9]","be196774":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(criterion='entropy',random_state=0,max_depth=8)\nclassifier.fit(X,y)","b31f032e":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix,roc_auc_score\nfrom sklearn.model_selection import cross_val_score,GridSearchCV\naccuracies=cross_val_score(estimator=classifier,X=X,y=y,cv=10)\nprint(accuracies.mean())\nprint(accuracies.std())","f9e88fa3":"predictions=classifier.predict(X_test)","667f7e7f":"output = pd.DataFrame({'ID': test.ID, 'Crop_Damage': predictions})\noutput.to_csv('random.csv', index=False)\nprint(\"Your submission was successfully saved!\")","d47b3fde":"# reading train and test set","8f83aa14":"# Problem Statement of the Hackathon\n## The Toxic Pesticides\nThough, many of us don't appreciate much, but a farmer's job is real test of endurance and determination. Once the seeds are sown, he works days and nights to make sure that he cultivates a good harvest at the end of season. A good harvest is ensured by several factors such as availability of water, soil fertility, protecting crops from rodents, timely use of pesticides & other useful chemicals and nature. While a lot of these factors are difficult to control for, the amount and frequency of pesticides is something the farmer can control.\n\nPesticides are also special, because while they protect the crop with the right dosage. But, if you add more than required, they may spoil the entire harvest. A high level of pesticide can deem the crop dead \/ unsuitable for consumption among many outcomes. This data is based on crops harvested by various farmers at the end of harvest season. To simplify the problem, you can assume that all other factors like variations in farming techniques have been controlled for.\n\nYou need to daetermine the outcome of the harvest season, i.e. whether the crop would be healthy (alive), damaged by pesticides or damaged by other reasons.","9641167a":"### Being a beginner in the field of data science, I managed to get a public LB rank of 293 out of 500+ participants","dd28f1a6":"Season and pesticides are also good predictors.","6f59a853":"We will create a new feature called total number of doses which Number_of_Doses\/week x Number of Weeks used","3abb6b44":"Crop type seems to be a fairly decent predictor while soil type doesnt vary much in crop damage.","631572be":"# Exploring variables ","8bbbd13b":"# checking for missing values and replacing them","b6efe3aa":"## Training model","5dc58ca3":"Here also we can create bins:\n1. less than = 5, crop damage category =2\n2. greatee than 5 less than = 30, crop damage category =0\n3. greater than 30 less than equal to 35, crop damage category =1\n4. greater than 35, crop damage category =2","2fcced14":"This is a highly imbalanced dataset with 83% of one class and very less presence of other classes","e4f17a5b":"# Data Description\n\n* ID:\tUniqueID\n* Estimated_Insects_Count:\tEstimated insects count per square meter\n* Crop_Type:\tCategory of Crop(0,1)\n* Soil_Type:\tCategory of Soil (0,1)\n* Pesticide_Use_Category:\tType of pesticides uses (1- Never, 2-Previously Used, 3-Currently Using)\n* Number_Doses_Week:\tNumber of doses per week\n* Number_Weeks_Used:\tNumber of weeks used\n* Number_Weeks_Quit:\tNumber of weeks quit\n* Season:\tSeason Category (1,2,3)\n* Crop_Damage:\tCrop Damage Category (0=alive, 1=Damage due to other causes, 2=Damage due to Pesticides)","722c1bef":"# Basic viz","31075774":"We can create various bins based on this plot and simplify our data. We observe that:\n1. for values <=1100 crop damage category =0\n2. for values >1100 and <=2250, crop damage category =1 \n3. for values >2250 crop damage category = 2\nBased on these bins we will modify the Estimated Insects Count column in test set and train set","1b874d6a":"# Importing basic libraries"}}