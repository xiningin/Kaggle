{"cell_type":{"f02c8b05":"code","56c2c43a":"code","e4d77ecd":"code","fe1d500a":"code","5a289ab8":"code","17cb43f0":"code","204983d2":"code","cd3172a1":"code","1328b9d6":"markdown","8080c16a":"markdown","5a8bcb1e":"markdown","fd589c20":"markdown","4ae30965":"markdown","dbe5fed4":"markdown","ee7736cf":"markdown"},"source":{"f02c8b05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","56c2c43a":"from mpl_toolkits.mplot3d import Axes3D\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","e4d77ecd":"def datanormalizer(data):\n    a = 1\n    b = 0\n    c = 0\n    newData = pd.DataFrame(index=np.arange(0,60),columns=['FP1_x','FP2_x','FP1_y','FP2_y','FP1_z','FP2_z'])\n    for each in data.index:\n        a = a+1\n        if a%1000 == 0:\n            newData.iloc[c] = data.iloc[b:a,:].sum()\/1000\n            b = a\n            c = c+1\n    return newData\ndata = pd.read_csv('\/kaggle\/input\/human-gait-phase-dataset\/data\/GP1_0.6_force.csv')\ndata.head()","fe1d500a":"timer = np.arange(0,60000)\nplt.scatter(timer,data['FP1_x'],color=\"red\")\nplt.scatter(timer,data['FP2_x'],color=\"blue\")\nplt.xlabel('mS(time)')\nplt.ylabel('Force')\nplt.title('x-axis force change relative to time')\nplt.grid()\nplt.show()","5a289ab8":"plt.scatter(timer,data['FP1_y'],color=\"red\")\nplt.scatter(timer,data['FP2_y'],color=\"blue\")\nplt.xlabel('mS')\nplt.ylabel('Force')\nplt.title('y-axis force change due to time')\nplt.grid()\nplt.show()","17cb43f0":"plt.scatter(timer,data['FP1_z'],color=\"red\")\nplt.scatter(timer,data['FP2_z'],color=\"blue\")\nplt.xlabel('mS')\nplt.ylabel('Force')\nplt.title('z-axis force change due to time')\nplt.grid()\nplt.show()","204983d2":"fig = plt.figure()\nax = fig.add_subplot(111,projection='3d')\nax.scatter(data['FP1_x'],data['FP1_y'], data['FP1_z'], color='red', marker='o')\nax.scatter(data['FP2_x'],data['FP2_y'], data['FP2_z'], color='blue', marker='.')\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\nplt.title(\"3D Left-Right Foot Point Cloud\")\nplt.show()","cd3172a1":"q = datanormalizer(data=data)\n\nplt.scatter(np.arange(0,60),q['FP1_x'])\nplt.scatter(np.arange(0,60),q['FP2_x'])\nplt.title('reduced data')\nplt.xlabel('S')\nplt.ylabel('x_basinc')\nplt.show()","1328b9d6":"**We visualize the x,y and z axis of force.Also we can visualize the axis in a graph together too :)**","8080c16a":"**It's so normal that the right and left foot looks reflection of each other.So, let's check z axis too.**","5a8bcb1e":"**I also write a function to visualize data with lower samples to see more basicly.**","fd589c20":"**As you see above, the right and left foots are work reversible.Lets look y-axis**","4ae30965":"***So, as we see figures above the data is well!! :)***","dbe5fed4":"**Hi all,**\n\n**Human Gait Analysys with Machine Learning is a good topic nowadays.I write this notebook to visualize the data and see \"if it is a well-data\" or \"do we need pre-processing?\".\nThe results of graphs says: We do not need to pre-process data beacuse it's already done :)**","ee7736cf":"**Lets visualize the force data in x direction **"}}