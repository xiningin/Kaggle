{"cell_type":{"3ff4a4f9":"code","37412fa4":"code","1c09f158":"code","65159196":"code","f940fc80":"code","c1b18d21":"code","146dc23e":"code","7216aea2":"code","6f84bf53":"code","c15bdc54":"code","22a8e490":"code","1ad7d742":"code","1635124d":"code","9fe8f464":"code","a022591d":"code","7b181b90":"code","71f876c8":"code","9e76d36f":"code","8d70d27a":"code","1d66d611":"markdown","2fdc2428":"markdown","371bc4fa":"markdown","2d0c42fc":"markdown","0d9b0b4c":"markdown","160986cf":"markdown","4a21496e":"markdown","07332a7e":"markdown","3836002e":"markdown","312b16fc":"markdown"},"source":{"3ff4a4f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings('ignore') # hatalar\u0131 kapat\u0131r\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37412fa4":"plt.style.available","1c09f158":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_passengerId = test_df[\"PassengerId\"]","65159196":"train_df.columns","f940fc80":"train_df.head()","c1b18d21":"train_df.describe()","146dc23e":"train_df.info()","7216aea2":"def bar_plot(variable):\n    \"\"\"\n    input : variable ex: \"Sex\"\n    output : bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visulaze\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{} \\n {}\".format(variable,varValue))\n    \n    ","6f84bf53":"category1 = ['Survived','Sex','Pclass','Embarked','SibSp','Parch']\nfor c in category1:\n    bar_plot(c)","c15bdc54":"category2 = ['Cabin', 'Name','Ticket']\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","22a8e490":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable],bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()\n","1ad7d742":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","1635124d":"# Pclass vs Survived\ntrain_df[['Pclass','Survived']].groupby(['Pclass'], as_index = False).mean().sort_values(by='Survived',ascending = False)","9fe8f464":"# Sex vs Survived\ntrain_df[['Sex','Survived']].groupby(['Sex'], as_index = False).mean().sort_values(by='Survived',ascending = False)","a022591d":"# SibSp vs Survived\ntrain_df[['SibSp','Survived']].groupby(['SibSp'],as_index = False).mean().sort_values(by = 'Survived', ascending = False)","7b181b90":"train_df[['Parch','Survived']].groupby(['Parch'],as_index = False).mean().sort_values(by = 'Survived', ascending = False)","71f876c8":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # firs quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indices\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indices\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers\n        \n        \n        ","9e76d36f":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","8d70d27a":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","1d66d611":"# \u0130ntroduction\nThe sinking of Titanic is one the most notorios shipwrecks in the history. In 1912, during her voyage, the Titanic sank after colliding with an icebarg, killing 1502 out of 2224 pessengers and crew.\n\n<font color = 'blue'>\nContent:\n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n         * [Categorical Variable](#4)\n         * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)","2fdc2428":" * [Univariate Variable Analysis](#3)\n         * [Categorical Variable Analysis](#4)\n         * [Numerical Variable Analysis](#5)  ","371bc4fa":"<a id = '4'><\/a><br>\n## Categorical Variable Analysis","2d0c42fc":"<a id = '1'><\/a><br>\n# Load and Check Data","0d9b0b4c":"<a id = '3'><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable Analysis: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticked, Sibsb and Parch\n* Numerical Variable Analysis: Age, PassengerId and Fare","160986cf":"<a id = '5'><\/a><br>\n## Numerical Variable Analysis","4a21496e":"<a id = '7'><\/a><br>\n# Outlier Detection","07332a7e":"<a id = '6'><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","3836002e":"<a id = '2'><\/a><br>\n# Variable Description\n\n1. PassengerId: unique id number to each passenger\n2. Survived: passenger survive(1) or died(0)\n3. Pclass: passenger class\n4. Name: name\n5. Sex: gender of passenger\n6. Age: age of passenger\n7. SibSp: number of siblings\/spouses\n8. Parch: number of parents\/children\n9. Ticket: ticket number\n10. Fare: amount of money spend on ticket\n11. Cabin: cabin category\n12. Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)\n","312b16fc":"* float64(2): Fare and Age\n* int64(5): Pclass, SibSp, Parch, PassengerId and Survived\n* object(5): Cabin, Embarked, Ticked, Name and Sex"}}