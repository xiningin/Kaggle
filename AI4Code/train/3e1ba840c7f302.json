{"cell_type":{"ea2ffd00":"code","e4cef86d":"code","e64dc424":"code","ffd2949e":"code","11113abb":"code","9f67f03c":"code","9a0cb226":"code","28a3d627":"code","a4b8fb13":"code","49e99763":"code","2595d5a6":"code","c63ab4b3":"code","4246dc40":"code","0d666ff8":"code","53403eaa":"code","38730aa6":"code","099c45b2":"code","e37abdf1":"code","cd23c340":"code","5f0a481d":"code","12777045":"code","0e1be314":"code","8cc6dd20":"code","0c233076":"code","add1ccd1":"code","5eac8dff":"markdown","0ace0a0e":"markdown","b462d7da":"markdown","bf9d9a75":"markdown","a4a3aacf":"markdown","4b8402ae":"markdown","61eaaac9":"markdown","602849e4":"markdown","368f0e51":"markdown","019e3b89":"markdown","d82f5c53":"markdown","3cd52053":"markdown","36b53a2b":"markdown"},"source":{"ea2ffd00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport tensorflow\nfrom tensorflow import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4cef86d":"train_df = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ntrain_df.head(5)","e64dc424":"train_df.isnull().sum()","ffd2949e":"train_df.isna().sum()","11113abb":"corr = train_df.corr()\ncorr.values","9f67f03c":"plt.figure(figsize=(17,7))\nsns.heatmap(corr)","9a0cb226":"plt.figure(figsize=(17,7))\nplt.subplot(2,2,1)\nsns.boxplot(train_df['Outcome'],train_df['BloodPressure'])\nplt.subplot(2,2,2)\nsns.boxplot(train_df['Outcome'],train_df['Glucose'])","28a3d627":"plt.figure(figsize=(17,7))\nsns.boxplot(train_df['Outcome'],train_df['Age'])","a4b8fb13":"X = train_df.drop(['Outcome'], axis =1).values\ny = train_df['Outcome'].values","49e99763":"X[0:5]","2595d5a6":"y[0:5]","c63ab4b3":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=40)\nprint('training data : ',X_train.shape, y_train.shape)\nprint('testing data : ',X_test.shape, y_test.shape)","4246dc40":"dtc = DecisionTreeClassifier()\ndtc = dtc.fit(X_train, y_train)\ndtc","0d666ff8":"y_pred = dtc.predict(X_test)","53403eaa":"acc = accuracy_score(y_pred, y_test)\nprint('Accuracy is : ',acc)","38730aa6":"from sklearn.decomposition import PCA\n\npca = PCA(3)\nX_pca = pca.fit_transform(X_train)","099c45b2":"print(pca.explained_variance_ratio_)","e37abdf1":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)","cd23c340":"y_preds = rfc.predict(X_test)\nacc_rfc = accuracy_score(y_preds,y_test)\nacc_rfc","5f0a481d":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X)","12777045":"X_transform = scaler.transform(X)","0e1be314":"classifier =Sequential()\n\n# create input layer\nclassifier.add(Dense(units=6,kernel_initializer='uniform' , activation='tanh' , input_dim=8))\n\n# create hidden layer\nclassifier.add(Dense(units=6,kernel_initializer='uniform' , activation='tanh'))\n# create hidden layer\n\n# create output layer\nclassifier.add(Dense(units=1 , kernel_initializer='uniform' , activation='sigmoid'))\n\n#compiling the ANN\nclassifier.compile(optimizer='adam' , loss='binary_crossentropy' , metrics=['accuracy'])","8cc6dd20":"classifier.fit(X_train, y_train, batch_size = 10, nb_epoch = 100)","0c233076":"y_pred = classifier.predict(X_test)","add1ccd1":"print(accuracy_score(y_preds,y_test))","5eac8dff":"Prediction part","0ace0a0e":"# Random Forrest","b462d7da":"# Checking the Missing values","bf9d9a75":"The simple DecisionTreeClassifier is demonstrated do upvote it if you liked it and you can edit it for modifications that you think is necessary and do comment if any changes can be made.\nCheers!!","a4a3aacf":"# Model development","4b8402ae":"# Data Visualization\nlet's try some data visualization techniques here, first lets analyze the correlation among the values","61eaaac9":"Lets calcluate the accuracy score!!","602849e4":"# PCA","368f0e51":"# Neural networks approach","019e3b89":"correlation between Blood pressure, Glucose and outcome","d82f5c53":"# Load the Data","3cd52053":"# Loading the Decision Tree model","36b53a2b":"# Import Libraries"}}