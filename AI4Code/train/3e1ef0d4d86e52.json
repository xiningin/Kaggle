{"cell_type":{"9567710d":"code","721ab116":"code","89a57dca":"code","aae9309a":"code","898c9bc7":"code","74415269":"code","2a5c1b08":"code","6ee1954b":"code","cd3295fa":"code","19b820d5":"code","6c0bf348":"code","ebc37ef9":"code","8ab84725":"code","5a54eb42":"code","6fc3b7c0":"markdown","5f49b046":"markdown","aaa0434c":"markdown","d7ff306b":"markdown","9d5c4c1e":"markdown","d914ab43":"markdown","447c7f18":"markdown","6311df88":"markdown","6a6cbeb7":"markdown","7170ea44":"markdown"},"source":{"9567710d":"import requests\nimport numpy as np \nimport os \nimport pickle\nimport pandas as pd\nfrom collections import defaultdict\n\nimport ee \nimport matplotlib.pyplot as plt \nimport folium\nimport branca.colormap as cmp\nfrom scipy import optimize\nfrom folium.plugins import MarkerCluster,HeatMap,HeatMapWithTime\nfrom IPython import display","721ab116":"ee.Authenticate()","89a57dca":"ee.Initialize()","aae9309a":"\n# setup to add ee layer to folium\n\ndef add_ee_layer(self, ee_image_object, vis_params, name,opacity=0.75):\n    map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n    folium.raster_layers.TileLayer(\n      tiles=map_id_dict['tile_fetcher'].url_format,\n      attr='Map Data &copy; <a href=\"https:\/\/earthengine.google.com\/\">Google Earth Engine<\/a>',\n      name=name,\n      opacity=opacity,\n      overlay=True,\n      control=True\n    ).add_to(self)\n\nfolium.Map.add_ee_layer = add_ee_layer\n\n\ndef show_layer_on_folium(\n                        layer,\n                        title,\n                        viz_params,\n                        location=None,\n                        map_bounds=None,\n                        colormap=None,\n                        download=False,\n                        opacity=0.90,\n                        basemap= 'OpenStreetMap',\n                        zoom_start=9,\n                        max_zoom=None,\n                        min_zoom=6):\n    \n    #initiate a map\n    map_1=folium.Map(location,tiles=basemap,min_zoom=min_zoom,max_zoom=max_zoom,zoom_start=zoom_start)\n    \n    if map_bounds: \n        #fit map to our geometry\n        folium.FitBounds(bounds=map_bounds).add_to(map_1)\n\n    #add ee layer \n    map_1.add_ee_layer(ee_image_object=layer,\n                       vis_params=viz_params,\n                       name=title,\n                      opacity=opacity)\n    \n    #add layer control\n    map_1.add_child(folium.LayerControl())\n    \n    if download:\n        map_1.save(f'{title}.html')\n        return None\n    else:\n        return map_1\n\n\ndef get_coordinates(address,return_json=False,return_bb= False):\n    '''Get lat-long for a given address\n    SRC : https:\/\/stackoverflow.com\/questions\/25888396\/how-to-get-latitude-longitude-with-python'''\n    \n    import requests\n    from urllib import parse\n    \n    response = requests.get('https:\/\/nominatim.openstreetmap.org\/search\/' + parse.quote(address) + '?format=json')\n\n    resp= response.json()\n    \n    #return complete response file \n    if return_json:\n        return resp\n    \n    if return_bb:\n        return [(float(resp[0]['boundingbox'][i]),float(resp[0]['boundingbox'][i+2])) for i in range(len(resp[0]['boundingbox'])\/\/2)]\n    \n#   'returns LAT -  LONG'\n    \n    return [float(resp[0]['lat']),float(resp[0]['lon'])]\n\n\n\ndef get_best_image(image_collection,\n                   year,\n                   area_of_interest,\n                   month=10):\n    '''filter the best image( with the least cloud cover value) for the given year and given month'''\n\n    start_date = ee.Date.fromYMD(**{\n        'day':1 ,\n        'month': month,\n        'year' : year})\n    end_date = ee.Date.fromYMD(**{\n        'day':30 ,\n        'month': month,\n        'year' : year})\n    \n    \n    if not area_of_interest:\n        # sort image by asc order of cloud pixel values\n        img = image_collection.filterDate(start_date,end_date).sort('CLOUD_COVER').first()\n    else:\n        img = image_collection.filterDate(start_date,end_date).sort('CLOUD_COVER').first().clip(area_of_interest)\n        \n    \n    return img ","898c9bc7":"#get location coordinates \ntonga_coord = get_coordinates('Tonga Volcano')\n\n# international boundaries dataset\ncountries = ee.FeatureCollection('USDOS\/LSIB_SIMPLE\/2017')\n#get geometry bounds for tonga\ntonga_geom = countries.filter(ee.Filter.eq('country_na','Tonga'))\n\n#boundaries for fitting map\ntonga_bounds=[(i[1],i[0]) for i in tonga_geom.geometry().getInfo().get('coordinates')[0]]\n\narea = ee.Number(tonga_geom.geometry().area()).divide(1e+6).round().getInfo()\n\nprint(f'Total administrative area of Tonga Islands is {area} Sqkm')","74415269":"#get a buffer of 1500 km around AOI \nbuff= tonga_geom.geometry().buffer(1500000)\n\n#location of volcano\nvol = ee.geometry.Geometry.Point(tonga_coord).buffer(35000)","2a5c1b08":"import rasterio as rio  \nfrom IPython.display import Image \n\n\n\ndef scale(band):\n    '''scale a image by max value'''\n    return band\/np.max(band)\n\nimg = rio.open('..\/input\/tonga-image\/859a7a8417c9b4d22e7c4d8a6c433d31-a17c86d9aa797e3c7693609b284f38ad getPixels.tif')\n","6ee1954b":"b=scale(img.read(1))\ng=scale(img.read(2))\nr=scale(img.read(3))\n\nrgb_im = np.dstack((b,g,r))\n#save image to display\nplt.imsave('tonga_atoll.jpeg',rgb_im)","cd3295fa":"\n\nm1= folium.Map(location=tonga_coord,zoom_start=9)\n\nfolium.CircleMarker(tonga_coord,radius=15,popup = '<b>Approx location of Tonga Volcano<\/b>').add_to(m1)\n\nprint('Approximate location to look into')\n\nm1","19b820d5":"#dates to check for Images \ndates_bf = ('2022-01-01', '2022-01-14')\ndates_af = ('2022-01-15', '2022-01-18')\n","6c0bf348":"#get the mean of so2 concentration layer\n\nimage1=ee.ImageCollection('COPERNICUS\/S5P\/NRTI\/L3_SO2')\\\n  .select('SO2_column_number_density')\\\n  .filterDate(dates_bf[0],dates_bf[1]).mean().clip(buff)\n\nimage2=ee.ImageCollection('COPERNICUS\/S5P\/NRTI\/L3_SO2')\\\n  .select('SO2_column_number_density')\\\n  .filterDate(dates_af[0],dates_af[1]).mean().clip(buff)\n","ebc37ef9":"\nimage_viz_params = {'min': - 0.0005, 'max': 0.005,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']\n}\n#initiate a dual map\nmap_1=folium.plugins.DualMap(layout='horizontal',location = tonga_coord,zoom_start=6)\n\n#fit map to our geometry\n# folium.FitBounds(bounds=tonga_bounds).add_to(map_1)\n\n#add ee layer \nmap_1.m1.add_ee_layer(ee_image_object=image1,\n                     vis_params=image_viz_params,\n                     name='Mean SO2 Concentration',\n                     opacity=0.75)\n\n\n#add ee layer \nmap_1.m2.add_ee_layer(ee_image_object=image2,\n                     vis_params=image_viz_params,\n                     name='Mean SO2 Concentration',\n                     opacity=0.75)\n\nfolium.Marker(tonga_coord,popup = '<b>Approx location of Tonga<\/b>').add_to(map_1.m1)\nfolium.Marker(tonga_coord,popup = '<b>Approx location of Tonga<\/b>').add_to(map_1.m2)\n\n\n\ncbar = cmp.StepColormap(\n image_viz_params['palette'],\n vmin=image_viz_params['min'], vmax=image_viz_params['max'],\n caption='SO2 Concentration'\n)\n\n#add colorbar\ncbar.add_to(map_1.m1)\n\n\n#add layer control\nmap_1.add_child(folium.LayerControl())\n\n\nprint('Sulphur dioxide layer (left-before,right-after)')\n\ndisplay.display_html(map_1)","8ab84725":"#get the mean of aerosol index layer\n\nim1=ee.ImageCollection(\"COPERNICUS\/S5P\/NRTI\/L3_AER_AI\").\\\n                            select('absorbing_aerosol_index').\\\n                            filterDate('2022-01-10', '2022-01-14').mean().clip(buff)\n\nim2=ee.ImageCollection(\"COPERNICUS\/S5P\/NRTI\/L3_AER_AI\").\\\n                            select('absorbing_aerosol_index').\\\n                            filterDate('2022-01-15', '2022-01-18').mean().clip(buff)\n","5a54eb42":"\nimage_viz_params = {'min': -1, 'max': 1,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']\n}\n#initiate a dual map\nmap_1=folium.plugins.DualMap(layout='horizontal',location = tonga_coord,zoom_start=6)\n\n#fit map to our geometry\n# folium.FitBounds(bounds=tonga_bounds).add_to(map_1)\n\n#add ee layer \nmap_1.m1.add_ee_layer(ee_image_object=im1,\n                     vis_params=image_viz_params,\n                     name='Mean SO2 Concentration',\n                     opacity=0.75)\n\n\n#add ee layer \nmap_1.m2.add_ee_layer(ee_image_object=im2,\n                     vis_params=image_viz_params,\n                     name='Mean SO2 Concentration',\n                     opacity=0.75)\n\nfolium.Marker(tonga_coord,popup = '<b>Approx location of Volcano<\/b>').add_to(map_1.m1)\nfolium.Marker(tonga_coord,popup = '<b>Approx location of Volcano<\/b>').add_to(map_1.m2)\n\n\n\ncbar = cmp.StepColormap(\n image_viz_params['palette'],\n vmin=image_viz_params['min'], vmax=image_viz_params['max'],\n caption='Aerosol Index '\n)\n\n#add colorbar\ncbar.add_to(map_1.m1)\n\n\n#add layer control\nmap_1.add_child(folium.LayerControl())\n\nprint('Mean Aerosol Index layer (left-before,right-after)')\n\ndisplay.display_html(map_1)","6fc3b7c0":"![](.\/tonga_atoll.jpeg)","5f49b046":"# Checking the Sulphur Dioxide emissions around the area\n    Volcanoes Emit a lot os SO2 into the atmosphere. We can expect the concentration of SO2 to go up drastically in and around the region.","aaa0434c":"# Checking Dust and Aerosol Emissions\n\n\n**Sentinel 5p: Aerosol Index**\n\n    Absorbing aerosols, such as smoke from biomass burning, desert dust, volcanic ash, and anthropogenically produced soot, absorb radiation and have a warming effect on the climate. Scattering aerosols, like sulfate particles and clouds, scatter solar light and usually have a cooling effect on the climate. Aerosols also act as condensation nuclei in the process of cloud formation, potentially altering the optical properties of these clouds.\n    \n    \n    The AAI is traditionally defined as the positive values of the reflectance residue between an absorbing-aerosol-loaded atmosphere and a clear atmosphere. Negative values are associated with an atmosphere that contains more scattering particles than a clear atmosphere. SRC: https:\/\/amt.copernicus.org\/articles\/13\/6407\/2020\/\n\n","d7ff306b":"**Eruption from satellite images**\n![](https:\/\/cdn.cnn.com\/cnnnext\/dam\/assets\/220116193237-tonga-volcanic-eruption-explainer-super-tease.jpg)\n\n**Sequence of Explosion**\n![](https:\/\/i0.wp.com\/media.techeblog.com\/images\/tonga-volcano-eruption-space.jpg?w=1200&ssl=1)","9d5c4c1e":"# Note:\n\n    The layers on top of folium maps will dissapear in couple of days. Please re-run the notebook on your end to visualize the results.\n\n","d914ab43":"# Authenticate and initialize EE","447c7f18":"# Imports","6311df88":"# Visualizing Images ","6a6cbeb7":"# References and Resources \n* https:\/\/www.nytimes.com\/2022\/01\/16\/world\/asia\/tonga-tsunami-peru.html\n* https:\/\/en.wikipedia.org\/wiki\/Tonga","7170ea44":"# Helper functions"}}