{"cell_type":{"71ca4103":"code","c774fabb":"code","3fc905ea":"code","344956c9":"code","300b67cb":"code","28d330a2":"code","44b83677":"code","a8ce04c2":"code","d2cc2f3e":"code","ea80d50e":"code","53276542":"code","793a1f34":"code","6654b404":"code","deb0885a":"code","22ea878a":"code","4fb3b701":"code","733b050b":"code","42dc1f84":"code","164491e0":"markdown","ac744761":"markdown","d0811910":"markdown","70c04331":"markdown","c1f60da5":"markdown","590e0dcd":"markdown"},"source":{"71ca4103":"!pip install autokeras","c774fabb":"import numpy as np\nimport tensorflow as tf\nimport pandas as pd\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\nimport autokeras as ak","3fc905ea":"X_train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\nX_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\n\ny_train = X_train.label\nX_train = X_train.drop(['label'], axis=1)\n\nX_train \/= 255\nX_test \/= 255\n\nX_train = X_train.to_numpy()\nX_original_test = X_test.to_numpy()\n\nX_train = np.reshape(X_train, (-1, 28, 28, 1))\nX_original_test = np.reshape(X_original_test, (-1, 28, 28, 1))","344956c9":"from sklearn.model_selection import train_test_split\n\nX_train, X_valid, y_train, y_valid = train_test_split(\n    X_train, y_train, test_size=0.2, random_state=42)","300b67cb":"y_train = y_train.to_numpy()","28d330a2":"fig = plt.figure(figsize=(8,8))\nfig.suptitle('Our training data', fontsize=16)\nfor i in range(0,9):\n    ax = plt.subplot(3, 3, i+1)\n    plt.imshow(X_train[i])\n    ax.set_title(y_train[i])\n\nfig.show()","44b83677":"# Initialize the image classifier.\nclf = ak.ImageClassifier(overwrite=True, max_trials=1)\n# Feed the image classifier with training data.\nhistory = clf.fit(X_train, y_train, validation_data=(X_valid, y_valid), epochs=10)","a8ce04c2":"predictions_valid = clf.predict(X_valid)\nprint(clf.evaluate(X_valid, y_valid))","d2cc2f3e":"y_valid = y_valid.to_numpy()","ea80d50e":"fig = plt.figure(figsize=(8,8))\nfig.suptitle('Our validation predictions', fontsize=16)\nfor i in range(0,9):\n    ax = plt.subplot(3, 3, i+1)\n    plt.imshow(X_valid[i])\n    ax.set_title(y_valid[i])\n    predicted_str = predictions_valid[i]\n    ax.set_title(predicted_str)\n\nfig.show()","53276542":"import matplotlib.pyplot as plt\n\nplt.figure(num=0)\nplt.title('loss')\nplt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='validation')\nplt.legend()\n\nplt.figure(num=1)\nplt.title('accuracy')\nplt.plot(history.history['accuracy'], label='train')\nplt.plot(history.history['val_accuracy'], label='validation')\nplt.legend()","793a1f34":"print(history.history.keys())","6654b404":"predictions = clf.predict(X_original_test)","deb0885a":"predictions = predictions.astype('int')","22ea878a":"predictions = predictions.reshape(-1,)","4fb3b701":"indexes = np.linspace(1, len(X_original_test), len(X_original_test), dtype='int')","733b050b":"predictions.shape","42dc1f84":"output = pd.DataFrame({'ImageId': indexes,\n                       'Label': predictions})\noutput.to_csv('submission.csv', index=False)","164491e0":"# Imports","ac744761":"# Exhibition of the Data","d0811910":"# Reading the Data","70c04331":"# Define the AutoKeras model","c1f60da5":"# Submission of our Results","590e0dcd":"# Exhibition of our validation predictions"}}