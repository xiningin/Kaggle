{"cell_type":{"da5551ec":"code","2c30fdf7":"code","5d85fa00":"markdown"},"source":{"da5551ec":"def minflips(l):\n    flips = 0\n    f = []\n    \n    i = 0\n    while i < len(l)-1:\n        if l[i+1] == l[i] + 1  or l[i+1] == l[i] - 1:\n            i += 2\n        else:\n            if l[i] %2 == 1:\n                index = l.index(l[i] - 1)\n                l[i+1],l[index] = l[index], l[i+1]\n                flips += 1\n                f.append([i+1,index])\n                i += 2\n            else:\n                index = l.index(l[i] + 1)\n                l[i+1],l[index] = l[index], l[i+1]\n                flips += 1\n                f.append([i+1,index])\n                i += 2\n    return flips, f\n                \n            ","2c30fdf7":"l = [0,1,2,5,3,4]\nminflips(l)","5d85fa00":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Spotify.\n\nThere are N couples sitting in a row of length 2 * N. They are currently ordered randomly, but would like to rearrange themselves so that each couple's partners can sit side by side.\n\nWhat is the minimum number of swaps necessary for this to happen?\n"}}