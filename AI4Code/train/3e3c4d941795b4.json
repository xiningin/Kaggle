{"cell_type":{"99fff0ff":"code","7615a20d":"code","0faa9497":"code","851da074":"code","de0b4d4c":"code","7db12f4e":"code","02b5794e":"code","e606c235":"code","e380e12a":"code","1f47047a":"code","d5fdca66":"code","46cc34fe":"code","a0fc2b87":"code","57872b67":"markdown","6814e8aa":"markdown","1f8bf1e6":"markdown","fa927844":"markdown","a341eebf":"markdown","cd2d1cc7":"markdown","21f8aece":"markdown","e4ab8ba5":"markdown","6bd37cc5":"markdown","f3f0ff96":"markdown","6fabc505":"markdown"},"source":{"99fff0ff":"# Import the English language class\nfrom spacy.lang.en import English\n\n# Create the nlp object\nnlp = English()\n\n# Process a text\ndoc = nlp(\"This is a sentence.\")\n\n# Print the document text\nprint(doc.text)","7615a20d":"# Import the German language class\nfrom spacy.lang.de import German\n\n# Create the nlp object\nnlp = German()\n\n# Process a text (this is German for: \"Kind regards!\")\ndoc = nlp(\"Liebe Gr\u00fc\u00dfe!\")\n\n# Print the document text\nprint(doc.text)","0faa9497":"# Import the spannish language class\nfrom spacy.lang.es import Spanish\n\n# Create the nlp object\nnlp = Spanish()\n\n# Process a text (this is a Spanish for: )\ndoc = nlp(\"\u00bfC\u00f3mo est\u00e1s?\")\nprint(doc)","851da074":"# Import the English language class and create the nlp object\nfrom spacy.lang.en import English\n\nnlp = English()\n\n# Process the text \ndoc = nlp('I like tree kangaroos and narwhals.')\nprint(doc)\n\n# Select the first token\nfirst_token = doc[0]\n# Print the first token\nprint(\"First word: \", first_token.text)\n\n# A slice of the Doc for \"tree kangaroos\"\ntree_kangaroos = doc[2:4]\nprint(\"Tree Kangarous slice: \", tree_kangaroos.text)\n\n# A slice of the Doc for \"tree kangaroos and narwhales\" (without the '.')\ntree_kangaroos_and_narwhals = doc[2:6]\nprint(\"Tree Kangaroos and Narwhals: \", tree_kangaroos_and_narwhals)","de0b4d4c":"# In this example we will be looking for two subsequent tokens: a number and a percent sign\n\nfrom spacy.lang.en import English\n\nnlp = English()\n\n# Process the text\ndoc = nlp(\n    \"In 1990, more than 60% of people in East Asia were in extreme poverty. \"\n    \"Now less than 4% are.\"\n)\n\n# Iterate over the tokens in the doc\nfor token in doc:\n    # Check if the token resembles a number using `like_num` token attribute\n    if token.like_num: \n        # Get the next token in the document\n        # The index of the next token in the `doc` is `token.i + 1`\n        next_token = doc[token.i + 1]\n        # Check if the next token's text equals \"%\"\n        if next_token.text == \"%\":\n            print(f\"Percentage found: {token.text}%\")","7db12f4e":"import spacy\n\n# Load the \"en_core_web_sm\"\nnlp = spacy.load('en_core_web_sm')\n\ntext = \"It's official: Apple is the first U.S. puplic company to reach a $1 trillion market value\"\n\n# Process the text\ndoc = nlp(text)\n\n# Print the document text\nprint(doc.text)","02b5794e":"for token in doc:\n    token_text = token.text\n    token_pos = token.pos_\n    token_dep = token.dep_\n    \n    print(f\"{token_text:<12}{token_pos:<10}{token_dep:<10}\")","e606c235":"for ent in doc.ents:\n    print(ent.text, ent.label_)","e380e12a":"import spacy\n\nnlp = spacy.load('en_core_web_sm')\ntext = \"Upcoming iPhone X release date leaked as Apple reveals pre-orders\"\n\ndoc = nlp(text)\nfor ent in doc.ents:\n    print(ent.text, ent.label_)","1f47047a":"import spacy\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load(\"en_core_web_sm\")\ndoc = nlp(\"Upcoming iPhone X release date leaked as Apple reveals pre-orders\")\n\nmatcher = Matcher(nlp.vocab)\n\npattern = [{'TEXT': 'iPhone'}, {'TEXT': 'X'}]\nmatcher.add('IPHONE_X_PATTERN', None, pattern)\n\nmatches = matcher(doc)\nprint(\"Matches:\", [doc[start:end].text for match_id, start, end in matches])","d5fdca66":"import spacy\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load(\"en_core_web_sm\")\nmatcher = Matcher(nlp.vocab)\n\ndoc = nlp(\n    \"After making the iOS update you won't notice a radical system-wide \"\n    \"redesign: nothing like the aesthetic upheaval we got with iOS 7. Most of \"\n    \"iOS 11's furniture remains the same as in iOS 10. But you will discover \"\n    \"some tweaks once you delve a little deeper.\"\n)\n\npattern = [{\"TEXT\": \"iOS\"}, {\"IS_DIGIT\": True}]\n\nmatcher.add(\"IOS_VERSION_PATTERN\", None, pattern)\nmatches = matcher(doc)\nprint(\"Total matches found: \", len(matches))\n\nfor match_id, start, end in matches:\n    print(\"Match Found: \", doc[start:end].text)","46cc34fe":"import spacy\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load(\"en_core_web_sm\")\nmatcher = Matcher(nlp.vocab)\n\ndoc = nlp(\n    \"i downloaded Fortnite on my laptop and can't open the game at all. Help? \"\n    \"so when I was downloading Minecraft, I got the Windows version where it \"\n    \"is the '.zip' folder and I used the default program to unpack it... do \"\n    \"I also need to download Winzip?\"\n)\n\npattern = [{'LEMMA': 'download'}, {'POS': 'PROPN'}]\nmatcher.add('DOWNLOAD_THINGS_PATTERN', None, pattern)\nmatches = matcher(doc)\n\nprint(\"Total matches found: \", len(matches))\n\nfor match_id, start, end in matches:\n    print(\"Match Found: \", doc[start:end].text)","a0fc2b87":"import spacy\nfrom spacy.matcher import Matcher\n\nnlp = spacy.load('en_core_web_sm')\nmatcher = Matcher(nlp.vocab)\n\ndoc = nlp(\n    \"Features of the app include a beautiful design, smart search, automatic \"\n    \"labels and optional voice responses.\"\n)\n\npattern = [{\"POS\": \"ADJ\"}, {\"POS\": \"NOUN\"}, {\"POS\": \"NOUN\", \"OP\":\"?\"}]\nmatcher.add(\"ADJ_NOUN_PATTERN\", None, pattern)\nmatches = matcher(doc)\n\nprint(\"Total matches found: \", len(matches))\n\nfor match_id, start, end in matches:\n    print(\"Match Found: \", doc[start:end].text)","57872b67":"# 3. Lexical Attributes\n\nWe can use spaCy's `Doc` and `Token` objects, and lexical attributes to find a pattern in a text.","6814e8aa":"# 7. Using the Matcher","1f8bf1e6":"## Additional Token Attributes\nWe'll see these again in upcoming lectures. For now we just want to illustrate some of the other information that spaCy assigns to tokens:\n\n|Tag|Description|doc2[0].tag|\n|:------|:------:|:------|\n|`.text`|The original word text<!-- .element: style=\"text-align:left;\" -->|`Tesla`|\n|`.lemma_`|The base form of the word|`tesla`|\n|`.pos_`|The simple part-of-speech tag|`PROPN`\/`proper noun`|\n|`.tag_`|The detailed part-of-speech tag|`NNP`\/`noun, proper singular`|\n|`.shape_`|The word shape \u2013 capitalization, punctuation, digits|`Xxxxx`|\n|`.is_alpha`|Is the token an alpha character?|`True`|\n|`.is_stop`|Is the token part of a stop list, i.e. the most common words of the language?|`False`|","fa927844":"# 5. Predicting linguistic annotations\n\nWe will get to try one of spaCy's pre-trained model packages and see its predictions in action.","a341eebf":"# 6. Predicting named entities in context\n\nModels are statistical and not always right. Whether their predictions are correct depends on the training data and the text you're processing.","cd2d1cc7":"- Write one pattern that matches adjectives (`\"ADJ\"`) followed by one or two `\"NOUN\"`s (one noun and one optional name).","21f8aece":"# 4. Loading models\n    \nYou can install spaCy models using this command: `python -m spacy download en_core_web_sm`","e4ab8ba5":"# 1. Getting Started\n\nSpacy is available in 55+ languages.\n\n[Language Available in spaCy](https:\/\/spacy.io\/usage\/models\/#languages)\n\nThe general syntax to import a language is: `from spacy.lang.__ import Language`","6bd37cc5":"# 2. Documents, spans and tokens\n\nWhen you call `nlp` on a string, spaCy first tokenizes the text and creates a document object.","f3f0ff96":"# 8. Writing match patterns\n\n- Write one pattern that only matches mentions of full iOS versions: \"iOS 7\", \"iOS 11\" and \"iOS 10\".","6fabc505":"- Write one pattern that only matches forms of \"download\" (tokens with the lemma \"download\"), followed by a token with the part-of-speech tag `PROPN` (proper noun)"}}