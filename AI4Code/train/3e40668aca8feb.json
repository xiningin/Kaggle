{"cell_type":{"28503a09":"code","6f3d8b9e":"code","0368a2e8":"code","2bbbba4e":"code","ea259970":"code","3890acf0":"code","ca425a7b":"code","beafea66":"code","2a1c0d16":"code","4ee5d782":"code","78042840":"code","8c0b114d":"code","a5e69c40":"code","33b30d08":"code","af2cfbfe":"code","b8b625d4":"code","f620a7ca":"code","e7f2cc36":"code","9a91e9a6":"code","dbfb7dc1":"code","bc5cb4ab":"code","cd9896c1":"code","ffcae247":"code","2e342367":"code","45016034":"code","057ba4f1":"code","d6e789d3":"code","e36010fb":"code","8e4211f8":"code","eb676e0b":"code","5fda42b3":"markdown","8a2d4c1d":"markdown","d3edd130":"markdown","3d73d2fb":"markdown","0aeaf372":"markdown","e58a678e":"markdown","8cdbcd71":"markdown","7189b8dc":"markdown","9c04e5ba":"markdown","7d563179":"markdown","3dbdcb17":"markdown","65296d44":"markdown","f853cc54":"markdown","6241c14e":"markdown","ee02917e":"markdown"},"source":{"28503a09":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f3d8b9e":"import pandas as pd\nimport numpy as np\nfrom tensorflow import keras\nfrom kerastuner.tuners import RandomSearch\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix, classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nimport tensorflow as tf\nimport tensorflow.keras.layers \nfrom tensorflow.keras import optimizers, Sequential, Model\nfrom tensorflow.keras.layers import LSTM, Dense, Dropout, RepeatVector, TimeDistributed\nfrom keras.optimizers import Adam\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler\nfrom tensorflow.keras import callbacks\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom sklearn.linear_model import LogisticRegression","0368a2e8":"data=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\ndata.head()","2bbbba4e":"sns.countplot(data['Potability'])","ea259970":"data[data['Potability']==1].describe().T.style.background_gradient(subset=['mean','std','50%','count']\n            , cmap='RdPu')","3890acf0":"data[data['Potability']==0].describe().T.style.background_gradient(subset=['mean','std','50%','count']\n                                                , cmap='RdPu')","ca425a7b":"plt.figure(figsize=(10,8))\nsns.heatmap(data.corr(), annot=True)","beafea66":"sns.pairplot(data, hue='Potability')","2a1c0d16":"data.isnull().sum()","4ee5d782":"df1=data[data['Potability']==1].copy()\ndf2=data[data['Potability']==0].copy()\ndf1['ph']=df1['ph'].replace(np.nan, df1['ph'].median())\ndf2['ph']=df2['ph'].replace(np.nan, df2['ph'].median())\ndf1['Sulfate']=df1['Sulfate'].replace(np.nan, df1['Sulfate'].median())\ndf2['Sulfate']=df2['Sulfate'].replace(np.nan, df2['Sulfate'].median())\ndf1['Trihalomethanes']=df1['Trihalomethanes'].replace(np.nan, df1['Trihalomethanes'].median())\ndf2['Trihalomethanes']=df2['Trihalomethanes'].replace(np.nan, df2['Trihalomethanes'].median())\ndata1=pd.concat([df1,df2], axis=0, ignore_index=True)\ndata1.isnull().sum()","78042840":"data1['ph'] = data1['ph'].round(decimals = 1)\ndef water_type(x):\n    if x>8:\n        y='Alkaline'\n    elif x<=8 and x>7.5:\n        y='Seawater'\n    elif x==7.5:\n        y='Tap'\n    elif x< 7.5 and x>=6.5:\n        y='Bottled'\n    elif x<6.5 and x>=5.5:\n        y='Distilled'\n    else:\n        y='Acidic'\n    return y\n        \ndata1['Type'] = data1['ph'].apply(lambda x: water_type(x))","8c0b114d":"plt.figure(figsize=(7,5))\n\ndata1['Type'].value_counts().plot(kind='pie',labels = ['','','','','',''], autopct='%1.1f%%', colors = ['blue','yellow','salmon','green','red','purple'],  textprops = {\"fontsize\":15})\n\nplt.legend(labels=['Alkaline', 'Seawater','Tap','Bottled','Distilled','Acidic'])\nplt.show()","a5e69c40":"def hard_type(x):\n    if x>=0 and x<17.1:\n        y='Soft'\n    elif x>=17.1 and x<120:\n        y='Medium hard'\n    elif x>=120 and x<180:\n        y='Hard'\n    else:\n        y='Very hard'\n    return y\n        \ndata1['Hard_type'] = data1['Hardness'].apply(lambda x: hard_type(x))","33b30d08":"\nplt.figure(figsize=(7,5))\n\ndata1['Hard_type'].value_counts().plot(kind='pie',labels = ['','','',''], autopct='%1.1f%%', colors = ['blue','yellow','salmon','green'],  textprops = {\"fontsize\":15})\nplt.legend(labels=['Soft', 'Medium hard','Hard','Very hard'])\nplt.show()\n","af2cfbfe":"data2 = pd.get_dummies(data1, columns = ['Type', 'Hard_type'])\ndata2.head()","b8b625d4":"X= data2.drop('Potability', axis=1)\ny=data2['Potability']","f620a7ca":"extra_tree_forest = ExtraTreesClassifier(n_estimators = 5,criterion ='entropy', max_features = 2)  \nextra_tree_forest.fit(X, y)\nfeature_importance = extra_tree_forest.feature_importances_\nfeature_importance_normalized = np.std([tree.feature_importances_ for tree in \n                                        extra_tree_forest.estimators_],\n                                        axis = 0)\nplt.barh(X.columns, feature_importance_normalized)\nplt.show()","e7f2cc36":"abs(data.corr()['Potability']).sort_values(ascending=False)","9a91e9a6":"X_train, X_test, y_train, y_test =train_test_split(X,y,test_size=0.2, random_state=49)\nscale=StandardScaler()\nX_train1=scale.fit_transform(X_train)\nX_test1=scale.transform(X_test)","dbfb7dc1":"y_train=y_train.values\ny_test=y_test.values","bc5cb4ab":"def predict(model,X_train1, X_test1, y_train, y_test):\n    model.fit(X_train,y_train )\n    preds=model.predict(X_test)\n    print(accuracy_score(y_test,preds))\n    print(confusion_matrix(y_test,preds))\n    print(classification_report(y_test,preds))\n    ","cd9896c1":"predict(XGBClassifier(),X_train1, X_test1, y_train, y_test) ","ffcae247":"rf=RandomForestClassifier()\nrf_par = {'n_estimators':[25,50, 100], 'min_samples_leaf':[2, 5, 3]}\ngrid_rf = GridSearchCV(rf, param_grid=rf_par, cv=3)\ngrid_rf.fit(X_train1, y_train)\ngrid_rf.best_params_","2e342367":"rf1=RandomForestClassifier(min_samples_leaf=grid_rf.best_params_['min_samples_leaf'], n_estimators=grid_rf.best_params_['n_estimators'])\npredict(rf1,X_train1, X_test1, y_train, y_test) ","45016034":"gb=GradientBoostingClassifier()\ngb_par = {'n_estimators':[100,500, 1000], 'max_depth':[3, 5, 7], 'learning_rate': [0.3, 0.5]}\ngrid_gb = GridSearchCV(gb, param_grid=gb_par, cv=3)\ngrid_gb.fit(X_train1, y_train)\ngrid_gb.best_params_","057ba4f1":"gb1=GradientBoostingClassifier(max_depth=grid_gb.best_params_['max_depth'], n_estimators=grid_gb.best_params_['n_estimators'], learning_rate=grid_gb.best_params_['learning_rate'])\npredict(gb1,X_train1, X_test1, y_train, y_test) ","d6e789d3":"def model_tuned(x):\n    model = Sequential()\n    for i in range(x.Int('num_layers', 3, 10)):\n        model.add(Dense(units=x.Int('units_' + str(i),\n                                            min_value=9,\n                                            max_value=128,\n                                            step=16),\n                               activation='relu'))\n    model.add(Dense(1, activation='sigmoid'))\n    model.compile(\n        optimizer=keras.optimizers.Adam(\n            x.Choice('learning_rate', [0.01, 0.001, 0.0001])),\n        loss='binary_crossentropy',\n        metrics=['accuracy'])\n    return model","e36010fb":"tuner1 = RandomSearch(\n    model_tuned,\n    objective='val_accuracy',\n    max_trials=5,\n    executions_per_trial=3,\n    directory='project',\n    project_name='Water consumption'\n)","8e4211f8":"tuner1.search(X_train, y_train, epochs = 50, validation_data=(X_test, y_test))","eb676e0b":"tuner1.results_summary()","5fda42b3":"Creating additional features including type of water and degree of hardness. ","8a2d4c1d":"Feature Engineering","d3edd130":"Replacing NANs with median as mean gets pulled in the direction of outliers. ","3d73d2fb":"# Gradient Boosting","0aeaf372":"# Data Preprocessing","e58a678e":"Feature importance","8cdbcd71":"# EDA","7189b8dc":"# Random Forest","9c04e5ba":"# XGBoost","7d563179":"Features\n\npH value: PH is an important parameter in evaluating the acid\u2013base balance of water. It is also the indicator of acidic or alkaline condition of water status. WHO has recommended maximum permissible limit of pH from 6.5 to 8.5. The current investigation ranges were 6.52\u20136.83 which are in the range of WHO standards.\n\nHardness: Hardness is mainly caused by calcium and magnesium salts. These salts are dissolved from geologic deposits through which water travels. The length of time water is in contact with hardness producing material helps determine how much hardness there is in raw water. Hardness was originally defined as the capacity of water to precipitate soap caused by Calcium and Magnesium.\n\nSolids (Total dissolved solids - TDS): Water has the ability to dissolve a wide range of inorganic and some organic minerals or salts such as potassium, calcium, sodium, bicarbonates, chlorides, magnesium, sulfates etc. These minerals produced un-wanted taste and diluted color in appearance of water. This is the important parameter for the use of water. The water with high TDS value indicates that water is highly mineralized. Desirable limit for TDS is 500 mg\/l and maximum limit is 1000 mg\/l which prescribed for drinking purpose.\n\nChloramines: Chlorine and chloramine are the major disinfectants used in public water systems. Chloramines are most commonly formed when ammonia is added to chlorine to treat drinking water. Chlorine levels up to 4 milligrams per liter (mg\/L or 4 parts per million (ppm)) are considered safe in drinking water.\n\nSulfate: Sulfates are naturally occurring substances that are found in minerals, soil, and rocks. They are present in ambient air, groundwater, plants, and food. The principal commercial use of sulfate is in the chemical industry. Sulfate concentration in seawater is about 2,700 milligrams per liter (mg\/L). It ranges from 3 to 30 mg\/L in most freshwater supplies, although much higher concentrations (1000 mg\/L) are found in some geographic locations.\n\nConductivity: Pure water is not a good conductor of electric current rather\u2019s a good insulator. Increase in ions concentration enhances the electrical conductivity of water. Generally, the amount of dissolved solids in water determines the electrical conductivity. Electrical conductivity (EC) actually measures the ionic process of a solution that enables it to transmit current. According to WHO standards, EC value should not exceeded 400 \u03bcS\/cm.\n\nOrganic_carbon: Total Organic Carbon (TOC) in source waters comes from decaying natural organic matter (NOM) as well as synthetic sources. TOC is a measure of the total amount of carbon in organic compounds in pure water. According to US EPA < 2 mg\/L as TOC in treated \/ drinking water, and < 4 mg\/Lit in source water which is use for treatment.\n\nTrihalomethanes: THMs are chemicals which may be found in water treated with chlorine. The concentration of THMs in drinking water varies according to the level of organic material in the water, the amount of chlorine required to treat the water, and the temperature of the water that is being treated. THM levels up to 80 ppm is considered safe in drinking water.\n\nTurbidity: The turbidity of water depends on the quantity of solid matter present in the suspended state. It is a measure of light emitting properties of water and the test is used to indicate the quality of waste discharge with respect to colloidal matter. The mean turbidity value obtained for Wondo Genet Campus (0.98 NTU) is lower than the WHO recommended value of 5.00 NTU.\n\nPotability: Indicates if water is safe for human consumption where 1 means Potable and 0 means Not potable.","3dbdcb17":"It can be concluded that ANN does not perform better than ML algorithms for the given problem statement.","65296d44":"Missing Values","f853cc54":"# ANN","6241c14e":"Water potability \n\n\u201cPotable water\u201d simply means water that is safe to drink, and it is becoming scarcer in the world. Increasing use is stressing freshwater resources worldwide, and a seemingly endless list of contaminants can turn once potable water into a health hazard or simply make it unacceptable aesthetically.\n\nDrinking water is normally water treated before consumption, but, unless the water is nanofiltered, microplastics, with their adsorbed mercury species, can remain in the treated drinking water.\n\n","ee02917e":"# Overview"}}