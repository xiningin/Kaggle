{"cell_type":{"a586acc6":"code","08695082":"code","179419bb":"code","387dc1b5":"code","a83a6d16":"code","7fed76b6":"code","a6c3ac6a":"code","70c64352":"code","364edd3b":"code","3050bb49":"code","12420c75":"code","18bee9c7":"code","31222336":"code","a329b28b":"code","b567c90f":"code","b2d5228d":"code","d45732f8":"code","496b59d7":"code","5985c3a9":"code","0610e162":"code","2563de04":"code","23b7c28b":"code","504f7baf":"code","e1e7a5e6":"code","8358f9df":"code","0eed3346":"markdown","f9892940":"markdown","31af4c5e":"markdown","14aaf51a":"markdown","b9dd9b86":"markdown","4aacf068":"markdown","6859f8ea":"markdown","57227a8e":"markdown","566d4443":"markdown","2e5b9e7d":"markdown"},"source":{"a586acc6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","08695082":"df = pd.read_csv('..\/input\/weatherAUS.csv')","179419bb":"df.head()","387dc1b5":"df.describe()","a83a6d16":"df.shape","7fed76b6":"df = df.dropna()\ndf.shape","a6c3ac6a":"plt.figure(figsize=(15, 10))\np = sns.heatmap(df.corr(), annot=True)","70c64352":"# dropping the features which are not useful for predictions\ndf = df.drop(['Location','Date','Evaporation','Sunshine', 'Cloud9am','Cloud3pm',\n                           'WindGustDir','WindGustSpeed','WindDir9am','WindDir3pm','WindSpeed9am',\n                           'WindSpeed3pm'], axis=1)","364edd3b":"# creating the lables\nY = df[\"RainTomorrow\"]\nX = df.drop([\"RainTomorrow\"], axis=1)","3050bb49":"X = X.replace({\"No\":0, \"Yes\":1})\nX = X.fillna(0)\nY = Y.replace({\"No\":0, \"Yes\":1})\nY = Y.fillna(0)","12420c75":"from sklearn import preprocessing","18bee9c7":"min_max_scaler = preprocessing.MinMaxScaler()","31222336":"X_scaled = pd.DataFrame(min_max_scaler.fit_transform(X), columns=X.columns)","a329b28b":"# Splitting the data\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X_scaled, Y, test_size=0.3, random_state=42)","b567c90f":"from sklearn.svm import SVC\n\nclf = SVC(gamma='scale')","b2d5228d":"clf.fit(X_scaled, Y)","d45732f8":"predictions = clf.predict(X_test)","496b59d7":"from sklearn.metrics import accuracy_score\n\naccuracy = accuracy_score(predictions, Y_test)","5985c3a9":"accuracy","0610e162":"from sklearn.ensemble import RandomForestClassifier","2563de04":"clf_rfc = RandomForestClassifier(n_estimators=10)","23b7c28b":"clf_rfc.fit(X_train, Y_train)","504f7baf":"predictions_rfc = clf_rfc.predict(X_test)","e1e7a5e6":"accuracy_rfc = accuracy_score(predictions_rfc, Y_test)","8358f9df":"accuracy_rfc","0eed3346":"## Getting the Data","f9892940":"## Scaling the Data","31af4c5e":"## Importing Libraries","14aaf51a":"### Random Forest Classifier","b9dd9b86":" ### SVM","4aacf068":"## Exploring the data","6859f8ea":"## Training a Model","57227a8e":"# Rain predction","566d4443":"## Visualizing the data","2e5b9e7d":"## Feature Extraction"}}