{"cell_type":{"2458884b":"code","25d30393":"code","56e7dc36":"code","3b4e933c":"code","5fbbc9e0":"code","5fce0005":"code","11880254":"code","45ebe8a3":"code","c64ae0bd":"code","f1095954":"code","d391fc54":"code","7268dc4c":"code","edf2fc1f":"code","7a0d5513":"code","bd4403da":"code","44b2ad23":"code","cc60abb5":"code","196ff891":"code","6c60ae47":"code","bbc85cc0":"code","1c8ebe74":"code","9ef6e726":"code","6138268e":"code","3dad9b11":"code","092ffe6a":"markdown","7c2128d1":"markdown","fb2552d8":"markdown","8664a639":"markdown"},"source":{"2458884b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/\"))\n\n# Any results you write to the current directory are saved as output.","25d30393":"data = pd.read_csv(\"..\/input\/general_data.csv\",sep=\",\")","56e7dc36":"data.info()","3b4e933c":"data.columns","5fbbc9e0":"data.isnull().sum()","5fce0005":"data.dropna(inplace=True)","11880254":"#drop the useless columns:\n\ndf.drop(['EmployeeCount','EmployeeID','StandardHours'],axis=1, inplace = True)","45ebe8a3":"# import library for corr graph (heatmap)\n\nimport seaborn as sns\ncorr = data.corr()\nplt.figure(figsize=(16,7))\nsns.heatmap(corr)\nplt.show()","c64ae0bd":"print(len(data[data['Attrition']=='Yes']))\nprint(len(data[data['Attrition']=='No']))\nprint(\"percentage of leave the company is:\",(len(data[data['Attrition']=='Yes'])\/len(data))*100,\"%\")\nprint(\"percentage of continue the company is:\",(len(data[data['Attrition']=='No'])\/len(data))*100,\"%\")","f1095954":"print(data['BusinessTravel'].unique())\nprint(data['Department'].unique())\nprint(data['EducationField'].unique())\nprint(data['Gender'].unique())\nprint(data['JobRole'].unique())\nprint(data['MaritalStatus'].unique())\nprint(data['Over18'].unique())","d391fc54":"# a = data['BusinessTravel'].astype(\"category\")\n# a.value_counts()\n# a.cat.codes.value_counts()\n# def codei(column):\n#     column.astype(\"category\")\n#     return column.cat.codes.value_counts()","7268dc4c":"from sklearn.preprocessing import LabelEncoder\nlE_X = LabelEncoder()\ndata['BusinessTravel'] = lE_X.fit_transform(data['BusinessTravel'])\ndata['Department'] = lE_X.fit_transform(data['Department'])\ndata['EducationField'] = lE_X.fit_transform(data['EducationField'])\ndata['Gender'] = lE_X.fit_transform(data['Gender'])\ndata['JobRole'] = lE_X.fit_transform(data['JobRole'])\ndata['MaritalStatus'] = lE_X.fit_transform(data['MaritalStatus'])\ndata['Over18'] = lE_X.fit_transform(data['Over18'])","edf2fc1f":"# Our dependent variable is \"Attriton\"\n\nfrom sklearn.preprocessing import LabelEncoder\nlE_Y=LabelEncoder()\ndata['Attrition']=lE_Y.fit_transform(data['Attrition'])","7a0d5513":"data.head()","bd4403da":"# checking the type & nullvalues of data\n\ndata.info()","44b2ad23":"corr = data.corr()\nplt.figure(figsize=(18,7))\nsns.heatmap(corr)\nplt.show()","cc60abb5":"y = data['Attrition']\nx = data.drop('Attrition', axis = 1)","196ff891":"from sklearn.model_selection import train_test_split\nX_train,X_test, y_train, y_test = train_test_split(x,y, test_size = 0.20, random_state=42)","6c60ae47":"from sklearn.preprocessing import StandardScaler\nScaler_X = StandardScaler()\nX_train = Scaler_X.fit_transform(X_train)\nX_test = Scaler_X.transform(X_test)","bbc85cc0":"#import some comman libs:\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nprint(accuracy_score(y_test,y_pred))\nprint(confusion_matrix(y_test,y_pred))","1c8ebe74":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(X_train,y_train)\ny_pred = lr.predict(X_test)","9ef6e726":"y_pred","6138268e":"lr.score(X_test,y_test)","3dad9b11":"#import some comman libs:\nfrom sklearn.metrics import confusion_matrix, accuracy_score\n\nprint(\"Accuracy of model is:\",accuracy_score(y_test,y_pred))\nprint()\nprint(\"Confusion matrix: \\n\",confusion_matrix(y_test,y_pred))","092ffe6a":" ### Find the correlation between all the columns:","7c2128d1":"## Convert all the string\/object data into numerical data ","fb2552d8":"# Split data into training and Testing set:","8664a639":"# Logistic Regression:"}}