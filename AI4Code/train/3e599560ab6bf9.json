{"cell_type":{"9cd4be06":"code","9c453874":"code","c6911fd1":"code","27698e6b":"code","1ef53176":"code","b5f09858":"code","1e55111b":"code","098e20a8":"code","77e522ce":"code","e78977d7":"code","657c7044":"code","ea1795e0":"code","df19c314":"code","1a5ef374":"code","3e94eccb":"code","883c801f":"code","43d2d2f3":"code","79db7d23":"code","75a48e60":"code","79c87ef9":"code","96e5503a":"code","af019278":"code","c5cdeb90":"code","4199cdce":"code","6029b63c":"code","2661ce48":"code","4920e29b":"code","1dedf048":"code","3e023133":"code","345bfdb8":"code","e9a52501":"code","00b1088b":"code","f61c3102":"code","3effe1a7":"code","ebf41e03":"code","f95e7afc":"code","d76655f1":"code","237c2f12":"code","473e964f":"code","1667db04":"code","f3286ee3":"code","d67bb164":"code","1a34446f":"code","6f925181":"code","09418493":"code","fa21fbdd":"code","234068e0":"code","b99abec8":"code","ac0978bd":"code","c173f9f2":"code","a0bed26c":"code","505e50c7":"code","f7ab88a6":"code","bff5806d":"code","a1450aa3":"code","dbec5f60":"code","01015444":"code","a74c2768":"code","1d2cbca5":"code","23d945d0":"code","5384b484":"code","d2f1e8bf":"code","286032ef":"code","de6e2ff5":"code","1acf48d2":"code","a050c326":"code","ccb6657d":"code","1d7bdf8d":"code","1a14d305":"code","02f7443e":"code","bd793bce":"code","81275002":"code","8b169302":"code","49959fa7":"code","672f1bc2":"code","13fdd749":"code","38a47bac":"code","b068e210":"code","29f98ac3":"code","9667e1d9":"code","1c3b87c9":"code","f9cbf1df":"code","9c395d04":"code","138756a6":"code","d5eef794":"code","14d295f3":"code","8935ae2d":"code","7b8d65c3":"code","dd5e9bf9":"code","3510e65d":"code","b6e14c32":"code","9724a76d":"code","9790a8ff":"code","eaff8f27":"code","b8ccb0b2":"code","f8f0f3d5":"code","61dc94fc":"code","04185d7f":"code","cf72fdf6":"code","cc3315d0":"code","a5eb97f6":"code","efea7268":"code","760b9c98":"code","ecbd1113":"code","0b8237e1":"code","16c46136":"code","a4e4eb03":"code","bad9e5cf":"markdown","fcb3db81":"markdown","40cfd6f1":"markdown","a2a88f4f":"markdown","8fad82d4":"markdown","60b1fe5f":"markdown","d3f35f3f":"markdown","7a30a90c":"markdown","f6d3862a":"markdown","6d43921b":"markdown","5c6ad191":"markdown","71c69340":"markdown","df76abdd":"markdown","03014036":"markdown","c961be7b":"markdown","efbb5f6c":"markdown","7bdbb6e5":"markdown","5f1e8c28":"markdown","951bbeef":"markdown","a7d156c5":"markdown","b0d5cdeb":"markdown","4fd36dec":"markdown","4da07f21":"markdown","5e39b4e7":"markdown","cb8d6c84":"markdown","0ccbd742":"markdown","09c9a4d7":"markdown","29e95338":"markdown","ac0037c6":"markdown","9ad4f1d6":"markdown","a13756ca":"markdown","db8fc9f8":"markdown","58bae509":"markdown","9695fc30":"markdown","e4718a78":"markdown","0f7d01f0":"markdown","91c5338f":"markdown","6646db58":"markdown","4bb2a05e":"markdown","9f4bf302":"markdown","63d4035e":"markdown"},"source":{"9cd4be06":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings                        # To ignore any warnings\nwarnings.filterwarnings(\"ignore\")","9c453874":"df_test=pd.read_csv(\"..\/input\/adult-test.csv\")\ndf_train=pd.read_csv(\"..\/input\/adult-training.csv\")\nprint(df_test.shape)\nprint(df_train.shape)","c6911fd1":"df_train.head()","27698e6b":"df_test.head()","1ef53176":"column=[\"age\",\"workclass\",\"fnlwgt\",\"education\",\"education_num\",\"marital_status\",\"occupation\",\"relationship\",\"race\",\"gender\",\n        \"capital_gain\",\"capital_loss\",\"hours_per_week\",\"native_country\",\"income_bracket\"]\nlen(column)","b5f09858":"df_train.columns=column\ndf_train.columns","1e55111b":"df_test=pd.read_csv(\"..\/input\/adult-test.csv\",names=column)\ndf_test=df_test.drop(0)\ndf_test.head()","098e20a8":"df_test_org=df_test.copy()\ndf_train_org=df_train.copy()","77e522ce":"df_train.dtypes","e78977d7":"df_test.dtypes","657c7044":"df_test[\"age\"]=df_test[\"age\"].astype(\"int64\")","ea1795e0":"def aa(x):\n    #print(x)\n    return x==' ?'","df19c314":"#df_test.apply(aa).sum()","1a5ef374":"#df_train.apply(aa)","3e94eccb":"#df_train.apply(aa).mean()","883c801f":"for variable in [\"workclass\",\"occupation\",\"native_country\"]:\n    group=df_train.groupby([variable])\n    group[variable].count().plot.bar()\n    plt.show()","43d2d2f3":"df_train[\"workclass\"].mode()","79db7d23":"df_train[\"workclass\"].replace(' ?',\" Private\",inplace=True)","75a48e60":"df_train[\"native_country\"].mode()","79c87ef9":"df_train[\"native_country\"].replace(' ?',\" United-States\",inplace=True)","96e5503a":"df_train[\"occupation\"].mode()","af019278":"df_train[\"occupation\"].replace(' ?',\" Prof-specialty\",inplace=True)","c5cdeb90":"#df_train.apply(aa).mean()","4199cdce":"# test data set\ndf_test[\"workclass\"].replace(' ?',\" Private\",inplace=True)\ndf_test[\"native_country\"].replace(' ?',\" United-States\",inplace=True)\ndf_test[\"occupation\"].replace(' ?',\" Prof-specialty\",inplace=True)\n#df_test.apply(aa).mean()","6029b63c":"for col in df_train.columns:\n    if df_train[col].dtype!= 'int64':\n        #print(col)\n        df_train[col]=df_train[col].apply(lambda x: x.replace(\" \",\"\"))\n        df_test[col]=df_test[col].apply(lambda x: x.replace(\" \",\"\"))\n        df_test[col]=df_test[col].apply(lambda x: x.replace(\".\",\"\"))","2661ce48":"for col in df_train:\n    if df_train[col].dtype!='int64':\n        print(col, end=\": \")\n        print(df_train[col].unique())","4920e29b":"plt.hist(df_train[\"age\"])","1dedf048":"#Normalization of train\ndf_train[\"age\"]=(df_train[\"age\"]-df_train[\"age\"].min())\/(df_train[\"age\"].max()-df_train[\"age\"].min())\nplt.hist(df_train[\"age\"])","3e023133":"#Normalization of train\ndf_test[\"age\"]=(df_test[\"age\"]-df_test[\"age\"].min())\/(df_test[\"age\"].max()-df_test[\"age\"].min())\nplt.hist(df_test[\"age\"])","345bfdb8":"df_train[\"workclass\"].value_counts()","e9a52501":"# never worked and without pay both are similer class so we mearge them\ndf_train[\"workclass\"].replace(\"Never-worked\",\"Without-pay\",inplace=True)\ndf_test[\"workclass\"].replace(\"Never-worked\",\"Without-pay\",inplace=True)","00b1088b":"sns.distplot(df_train[\"fnlwgt\"])","f61c3102":"df_train[\"fnlwgt\"].describe()","3effe1a7":"#it have large SD so we should take log for resuce SD\ndf_train[\"fnlwgt\"]=np.log(df_train[\"fnlwgt\"])\nsns.distplot(df_train[\"fnlwgt\"])","ebf41e03":"# in test\ndf_test[\"fnlwgt\"]=np.log(df_test[\"fnlwgt\"])\nsns.distplot(df_test[\"fnlwgt\"])","f95e7afc":"df_train[\"education\"].value_counts().plot.bar()","d76655f1":"Edu=pd.crosstab(df_train[\"education\"],df_train[\"income_bracket\"])\nEdu.plot(kind='bar',figsize=(10,5))","237c2f12":"df_train[\"education\"]=df_train[\"education\"].apply(lambda x: \"Primary\" if x in ['1st-4th','5th-6th','7th-8th','9th','10th','11th','12th'] else x)","473e964f":"Edu=pd.crosstab(df_train[\"education\"],df_train[\"income_bracket\"])\nEdu.plot(kind='bar',figsize=(10,5))","1667db04":"# chnage is test\ndf_test[\"education\"]=df_test[\"education\"].apply(lambda x: \"Primary\" if x in ['1st-4th','5th-6th','7th-8th','9th','10th','11th','12th'] else x)","f3286ee3":"#df_train[\"education_num\"]=df_train[\"education_num\"].astype(\"int64\")\n#df_test[\"education_num\"]=df_test[\"education_num\"].astype(\"int64\")","d67bb164":"Edu=pd.crosstab(df_train[\"education_num\"],df_train[\"income_bracket\"])\nEdu.plot(kind='bar',figsize=(10,5))","1a34446f":"mar=pd.crosstab(df_train[\"marital_status\"],df_train[\"income_bracket\"])\nmar.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"marital_status\"].value_counts())","6f925181":"occ=pd.crosstab(df_train[\"occupation\"],df_train[\"income_bracket\"])\nocc.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"occupation\"].value_counts())","09418493":"rel=pd.crosstab(df_train[\"relationship\"],df_train[\"income_bracket\"])\nrel.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"relationship\"].value_counts())","fa21fbdd":"race=pd.crosstab(df_train[\"race\"],df_train[\"income_bracket\"])\nrace.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"race\"].value_counts())","234068e0":"sex=pd.crosstab(df_train[\"gender\"],df_train[\"income_bracket\"])\nsex.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"gender\"].value_counts())","b99abec8":"plt.hist(df_train[\"hours_per_week\"])\nplt.show()\n\nplt.hist(df_train[\"capital_gain\"])\nplt.show()\n\nplt.hist(df_train[\"capital_loss\"])\nplt.show()","ac0978bd":"#capital gain train Normalization\ndf_train[\"capital_gain\"]=(df_train[\"capital_gain\"]-df_train[\"capital_gain\"].min())\/(df_train[\"capital_gain\"].max()-df_train[\"capital_gain\"].min())\nplt.hist(df_train[\"capital_gain\"])","c173f9f2":"#test\ndf_test[\"capital_gain\"]=(df_test[\"capital_gain\"]-df_test[\"capital_gain\"].min())\/(df_test[\"capital_gain\"].max()-df_test[\"capital_gain\"].min())","a0bed26c":"#capital_loss normalization train\ndf_train[\"capital_loss\"]=(df_train[\"capital_loss\"]-df_train[\"capital_loss\"].min())\/(df_train[\"capital_loss\"].max()-df_train[\"capital_loss\"].min())\nplt.hist(df_train[\"capital_loss\"])","505e50c7":"#test\ndf_test[\"capital_loss\"]=(df_test[\"capital_loss\"]-df_test[\"capital_loss\"].min())\/(df_test[\"capital_loss\"].max()-df_test[\"capital_loss\"].min())","f7ab88a6":"#hour_per_week normalization train\ndf_train[\"hours_per_week\"]=(df_train[\"hours_per_week\"]-df_train[\"hours_per_week\"].min())\/(df_train[\"hours_per_week\"].max()-df_train[\"hours_per_week\"].min())\nplt.hist(df_train[\"hours_per_week\"])","bff5806d":"# test\ndf_test[\"hours_per_week\"]=(df_test[\"hours_per_week\"]-df_test[\"hours_per_week\"].min())\/(df_test[\"hours_per_week\"].max()-df_test[\"hours_per_week\"].min())\nplt.hist(df_test[\"hours_per_week\"])","a1450aa3":"df_train[\"fnlwgt\"]=(df_train[\"fnlwgt\"]-df_train[\"fnlwgt\"].min())\/(df_train[\"fnlwgt\"].max()-df_train[\"fnlwgt\"].min())\nplt.hist(df_train[\"fnlwgt\"])\nplt.show()\n\ndf_test[\"fnlwgt\"]=(df_test[\"fnlwgt\"]-df_test[\"fnlwgt\"].min())\/(df_test[\"fnlwgt\"].max()-df_test[\"fnlwgt\"].min())\nplt.hist(df_test[\"fnlwgt\"])\nplt.show()\n","dbec5f60":"df_train[\"education_num\"]=(df_train[\"education_num\"]-df_train[\"education_num\"].min())\/(df_train[\"education_num\"].max()-df_train[\"education_num\"].min())\nplt.hist(df_train[\"education_num\"])\nplt.show()\n\n\ndf_test[\"education_num\"]=(df_test[\"education_num\"]-df_test[\"education_num\"].min())\/(df_test[\"education_num\"].max()-df_test[\"education_num\"].min())\nplt.hist(df_test[\"education_num\"])\nplt.show()","01015444":"country=pd.crosstab(df_train[\"native_country\"],df_train[\"income_bracket\"])\ncountry.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"native_country\"].value_counts())","a74c2768":"def native(country):\n    if country in ['England', 'Germany', 'Canada', 'Italy', 'France', 'Greece', 'Philippines']:\n        return 'Western'\n    elif country in ['Mexico', 'Puerto-Rico', 'Honduras', 'Jamaica', 'Columbia', 'Laos', 'Portugal', 'Haiti',\n                     'Dominican-Republic', 'El-Salvador', 'Guatemala', 'Peru', \n                     'Trinadad&Tobago', 'Outlying-US(Guam-USVI-etc)', 'Nicaragua', 'Vietnam', 'Holand-Netherlands','Cuba']:\n        return 'Poor'\n    elif country in ['India', 'Iran', 'Cambodia', 'Taiwan', 'Japan', 'Yugoslavia', 'China', 'Hong']:\n        return 'Eastern'\n    elif country in ['South', 'Poland', 'Ireland', 'Hungary', 'Scotland', 'Thailand', 'Ecuador']:\n        return 'Poland_country'\n    elif country in ['United-States']:\n        return 'US'\n    else: \n        return country ","1d2cbca5":"df_train[\"native_country\"]=df_train[\"native_country\"].apply(native)\ndf_test[\"native_country\"]=df_test[\"native_country\"].apply(native)","23d945d0":"country=pd.crosstab(df_train[\"native_country\"],df_train[\"income_bracket\"])\ncountry.plot(kind='bar',figsize=(10,5))\nprint(df_train[\"native_country\"].value_counts())","5384b484":"df_train.head()","d2f1e8bf":"df_test.head()","286032ef":"from sklearn import preprocessing","de6e2ff5":"catagorial_df_train=df_train.select_dtypes(\"object\")\ncatagorial_df_train.head()","1acf48d2":"# apply Label encoder to df_categorical\nle=preprocessing.LabelEncoder()","a050c326":"catagorial_df_train=catagorial_df_train.apply(le.fit_transform)","ccb6657d":"catagorial_df_train.head()","1d7bdf8d":"#concat catagorial_df_train to df_train\ntrain=df_train.drop(catagorial_df_train.columns,axis=1)\ntrain=pd.concat([train,catagorial_df_train],axis=1)","1a14d305":"catagorial_df_test=df_test.select_dtypes(\"object\")\ncatagorial_df_test=catagorial_df_test.apply(le.fit_transform)\ntest=df_test.drop(catagorial_df_train.columns,axis=1)\ntest=pd.concat([test,catagorial_df_test],axis=1)\ntest.head()","02f7443e":"train.head()","bd793bce":"train.dtypes","81275002":"train[\"income_bracket\"]=train[\"income_bracket\"].astype(\"int64\")","8b169302":"X_trainD=train.drop(\"income_bracket\",axis=1)\nY_trainD=train[\"income_bracket\"]\n\nX_testD=test.drop(\"income_bracket\",axis=1)\nY_testD=test[\"income_bracket\"]","49959fa7":"print(X_trainD.shape)\nprint(Y_trainD.shape)\nprint(X_testD.shape)\nprint(Y_testD.shape)","672f1bc2":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score","13fdd749":"accuracy_list_train=[]\naccuracy_list_test=[]\nfor i in range(1,10):\n    dt_default = DecisionTreeClassifier(criterion='gini',max_depth=i)\n    dt_default.fit(X_trainD, Y_trainD)\n    Y_trainD_pred=dt_default.predict(X_trainD)\n    Y_testD_pred=dt_default.predict(X_testD)\n    accuracy_list_train.append(accuracy_score(Y_trainD_pred,Y_trainD))\n    accuracy_list_test.append(accuracy_score(Y_testD_pred,Y_testD))\nplt.plot(accuracy_list_train)\nplt.title(\"train\")\nplt.plot(accuracy_list_test)\nplt.show()","38a47bac":"dt_default = DecisionTreeClassifier(max_depth=4)\ndt_default.fit(X_trainD, Y_trainD)","b068e210":"Y_trainD_pred=dt_default.predict(X_trainD)\nY_testD_pred=dt_default.predict(X_testD)","29f98ac3":"accuracy_score(Y_trainD_pred,Y_trainD)","9667e1d9":"confusion_matrix(Y_trainD_pred,Y_trainD)","1c3b87c9":"accuracy_score(Y_testD_pred,Y_testD)","f9cbf1df":"# Confusion Matrix\nconfusion_matrix(Y_testD_pred,Y_testD)","9c395d04":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=10,criterion='entropy',max_depth=5)  # n_estimators : no. of tree","138756a6":"rf.fit(X_trainD, Y_trainD)","d5eef794":"Y_trainD_pred=rf.predict(X_trainD)\nY_testD_pred=rf.predict(X_testD)\nprint(accuracy_score(Y_trainD_pred,Y_trainD))\nprint(accuracy_score(Y_testD_pred,Y_testD))","14d295f3":"from sklearn.model_selection import cross_val_score\nacc=cross_val_score(RandomForestClassifier(n_estimators=10,criterion='entropy',max_depth=5),X_trainD,Y_trainD,cv=5).mean()","8935ae2d":"print(acc)","7b8d65c3":"acc_list=[]\nfor i in range(1,10):\n    acc = cross_val_score(RandomForestClassifier(n_estimators=i,max_depth=5),X_trainD,Y_trainD,cv=5).mean()\n    acc_list.append(acc)","dd5e9bf9":"plt.plot(acc_list)\nplt.show()","3510e65d":"print(np.argmax(acc_list))","b6e14c32":"rf = RandomForestClassifier(n_estimators=30,max_depth=5,criterion='entropy')\nrf.fit(X_trainD,Y_trainD)\nprint(rf.score(X_trainD,Y_trainD))\nprint(rf.score(X_testD,Y_testD))","9724a76d":"df_train[\"income_bracket\"]=df_train[\"income_bracket\"].apply(lambda x: 0 if x ==\"<=50K\" else 1)","9790a8ff":"df_train[\"income_bracket\"]=df_train[\"income_bracket\"].astype(\"object\")","eaff8f27":"df_test[\"income_bracket\"]=df_test[\"income_bracket\"].apply(lambda x: 0 if x ==\"<=50K\" else 1)\ndf_test[\"income_bracket\"]=df_test[\"income_bracket\"].astype(\"object\")","b8ccb0b2":"catagorial_df_train=df_train.select_dtypes(\"object\")\ncatagorial_df_train.drop(\"income_bracket\",axis=1,inplace=True)","f8f0f3d5":"#train\ntrain_dummies=df_train.drop(catagorial_df_train.columns,axis=1)\ntrain_dummies=pd.concat([train_dummies,pd.get_dummies(catagorial_df_train)],axis=1)\ntrain_dummies.head()","61dc94fc":"train_dummies.income_bracket=train_dummies[\"income_bracket\"].astype(\"uint8\")","04185d7f":"len(test_dummies.columns)","cf72fdf6":"#test\ncatagorial_df_test=df_test.select_dtypes(\"object\")\ncatagorial_df_test.drop(\"income_bracket\",axis=1,inplace=True)\ntest_dummies=df_test.drop(catagorial_df_test.columns,axis=1)\ntest_dummies=pd.concat([test_dummies,pd.get_dummies(catagorial_df_test)],axis=1)\ntest_dummies.head()","cc3315d0":"test_dummies.income_bracket=test_dummies[\"income_bracket\"].astype(\"uint8\")","a5eb97f6":"X_train=train_dummies.drop(\"income_bracket\",axis=1)\nY_train=train_dummies[\"income_bracket\"]\n\nX_test=test_dummies.drop(\"income_bracket\",axis=1)\nY_test=test_dummies[\"income_bracket\"]","efea7268":"print(X_train.shape)\nprint(Y_train.shape)\nprint(X_test.shape)\nprint(Y_test.shape)","760b9c98":"from sklearn.linear_model import LogisticRegression","ecbd1113":"logistic_model=LogisticRegression()\nlogistic_model.fit(X_train,Y_train)","0b8237e1":"Y_test_pred=logistic_model.predict(X_test)","16c46136":"accuracy_score(Y_test_pred,Y_test)","a4e4eb03":"Y_train_pred=logistic_model.predict(X_train)\naccuracy_score(Y_train,Y_train_pred)","bad9e5cf":"#### fnlwgt ","fcb3db81":"# Data pre processing  \n 1) Missing value \n 2) Feature Engineering","40cfd6f1":"No such need for any changes","a2a88f4f":"#### Education ","8fad82d4":"## 1. Missing  value Treatment","60b1fe5f":"### encoding by dummies","d3f35f3f":"#### RandomForestClassifier ","7a30a90c":"#### Education Number ","f6d3862a":"#### marital_status ","6d43921b":"### Import Library","5c6ad191":"## 2) Feature Engineering","71c69340":"No need","df76abdd":"We can see there max depth around 4 is giving good performance","03014036":"This is solved by cross validation with RandomForest","c961be7b":"Get X_trainD,Y_trainD,X_testD,Y_testD","efbb5f6c":"Missing data in percentage:\n   - workclass= 5.6%\n   - occupation=5.6%\n   - native_country=1.7%","7bdbb6e5":"Now feature Engineering is done\n\nLet's start label encoding of catagorial variable","5f1e8c28":"### apply Label encoder\n","951bbeef":"####  Relationship","a7d156c5":"In test data set age is object.","b0d5cdeb":"### Data Set","4fd36dec":"in Data set have space so remove extra space","4da07f21":"#### native_country\n","5e39b4e7":"there have lost of class and most of the class has less info. We need to be counter of these class. So we will do combine country based on there region","cb8d6c84":"#### workclass","0ccbd742":"#### Age","09c9a4d7":"Need to be Standarized\n","29e95338":"So we solved missing value by most frequent","ac0037c6":"No need","9ad4f1d6":"## Model Building and Evaluation","a13756ca":"Get X_train, Y_train","db8fc9f8":"All primary education('1st-4th', '5th-6th', '7th-8th', '9th', '10th', '11th', '12th') have less data ad almost same result. So we can combine all in one","58bae509":"Now its looking good ","9695fc30":"####  gender","e4718a78":"Now we do another algo for solve classification problem : Logistic Regrassion","0f7d01f0":"Means 30 tree gives best result ","91c5338f":"####  Race","6646db58":"#### Occupation ","4bb2a05e":"Logistic","9f4bf302":"#### hours_per_week","63d4035e":"All thing is well"}}