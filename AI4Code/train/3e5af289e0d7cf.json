{"cell_type":{"778dbb1d":"code","40adae74":"code","e6bd2d9f":"code","0b87dd97":"code","23b4e071":"code","4578e18d":"code","2f35e477":"code","2f10b365":"code","261bde38":"code","f6171bb2":"code","bda73b00":"code","e772729e":"code","168af74a":"code","ad59da23":"code","5c73df64":"code","50786d4d":"code","6204ca89":"code","95d7f17b":"code","7d0e1a1f":"code","4df0b898":"markdown","f2ad795b":"markdown"},"source":{"778dbb1d":"import pandas as pd\nimport numpy as np                       \nimport matplotlib.pyplot as plt      \nimport seaborn as sns\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction import DictVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import MultinomialNB","40adae74":"df = pd.read_csv('\/content\/X_train_K.txt')","e6bd2d9f":"df_test = pd.read_csv('\/content\/Train_K.txt')","0b87dd97":"df_ind = df[df['Race']==\"Indian\"]\ndf_ind","23b4e071":"Xfeatures =df_ind['Name']","4578e18d":"cv = CountVectorizer()\nX = cv.fit_transform(Xfeatures)","2f35e477":"Y = df_ind['Gender']","2f10b365":"clf = MultinomialNB()\nclf.fit(X,Y)\n","261bde38":"def genderpredictor_ind(a):\n    test_name = [a]\n    vector = cv.transform(test_name).toarray()\n    if clf.predict(vector) == 1:\n        return 1;\n    else:\n        return 0;","f6171bb2":"df_usa = df[df['Race']==\"USA\"]\ndf_usa","bda73b00":"def features(name, count):\n    name = name.lower()\n    return {\n        'count': count,\n        'first-letter': name[0], # First letter\n        'first2-letters': name[0:2], # First 2 letters\n        'first3-letters': name[0:3], # First 3 letters\n        'last-letter': name[-1],\n        'last2-letters': name[-2:],\n        'last3-letters': name[-3:],\n        'length': len(name)\n    }","e772729e":"features = np.vectorize(features)","168af74a":"df_X = features(df_usa['Name'],df_usa['Count'])\ndf_Y = df_usa['Gender']","ad59da23":"dv = DictVectorizer()","5c73df64":"dv = DictVectorizer()\ndv.fit_transform(df_X)","50786d4d":"dclf = DecisionTreeClassifier()\nmy_xfeatures =dv.transform(df_X)\ndclf.fit(my_xfeatures, df_Y)","6204ca89":"def genderpredictor_usa(a,n):\n    test_name1 = [a]\n    count = [n]\n    transform_dv =dv.transform(features(test_name1,count))\n    vector = transform_dv.toarray()\n    if dclf.predict(vector) == 1:\n        return 1;\n    else:\n        return 0;","95d7f17b":"Gender = []\nfor i in df_test.index:\n  Race = df_test['Race'][i]\n  if Race == 'Indian' :\n    Name = df_test['Name'][i] \n    Id = df_test['Id'][i]\n    gender = genderpredictor_ind(Name)\n  elif Race == 'USA' :\n    Name = df_test['Name'][i]\n    count = df_test['Count'][i] \n    Id = df_test['Id'][i]\n    gender = genderpredictor_usa(Name, count)\n  Gender.append(gender)\n  #print(Id, ':' ,Name , ':' , gender)\n  ","7d0e1a1f":"outputpredictions=df_test.copy()\noutputpredictions['Gender'] = Gender\noutputpredictions = outputpredictions.drop(['Name', 'Count', 'Race'], axis = 1)\n\noutputpredictions.to_csv('Sample_Solution_K.csv' ,index = False, header = True)\nprint(\"Saved\")","4df0b898":"predicting\n","f2ad795b":"USA\n"}}