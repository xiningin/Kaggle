{"cell_type":{"c0522aef":"code","baaf86d2":"code","f36a3619":"code","2ae0659c":"code","f00b83b0":"code","efb1f51e":"code","70c63c12":"code","20fce4c7":"code","3a9a6c92":"code","de7a3ef7":"code","43c65050":"code","2fdc91d7":"code","c4a9e7a3":"code","9809b57c":"code","ceb32a29":"code","c58738ea":"code","59935889":"code","d535d064":"code","bcd190d8":"code","74d7cc4e":"code","fcec7298":"code","96b78b27":"code","f69203de":"code","fcd4d804":"code","b32bae2d":"code","4a032a01":"code","bc54d465":"code","42c4a518":"code","51465bad":"code","2194d786":"code","18d0d5e1":"code","656014ee":"code","f55eb374":"code","1c54e90b":"code","a30843dd":"code","89019265":"code","294571c1":"code","a4e4df65":"code","54b0bd74":"code","b5e131bf":"code","eff381e3":"code","013af4c4":"code","3258ef67":"code","01ced0d1":"code","b0fb9ec9":"markdown","021e232c":"markdown","2601d682":"markdown","e24968f1":"markdown","e20b221d":"markdown","8fba51de":"markdown","b548aa2c":"markdown","5ddbbc5d":"markdown","cbac6926":"markdown"},"source":{"c0522aef":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport datetime\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","baaf86d2":"# Lendo o arquivo contendo todos os voos\nvoos = pd.read_parquet('\/kaggle\/input\/voo-regular-ativo-vra-anac\/arquivo_limpo.parquet.gzip')","f36a3619":"# Limpando voos que n\u00e3o tem partida prevista e nem chegada prevista\n\n# Primeiro limpando aqueles sem partida prevista\nvoos = voos[~(voos['Partida Prevista'].isnull())]\n# Removendo os sem Partida Real\nvoos = voos[~(voos['Partida Real'].isnull())]\n\n# Removendo os sem Chegada Prevista\nvoos = voos[~(voos['Chegada Prevista'].isnull())]\n\n# Removendo os sem Chegada Real\nvoos = voos[~(voos['Chegada Real'].isnull())]","2ae0659c":"# Separando Ano, mes e dia\n# Ano\nvoos['ano'] = voos['Partida Prevista'].dt.year\n# Mes \nvoos['mes'] = voos['Partida Prevista'].dt.month\n# Dia\nvoos['dia'] = voos['Partida Prevista'].dt.day\n\n# Classificando o dia da semana\nvoos['dia_da_semana'] = voos['Partida Prevista'].dt.dayofweek","f00b83b0":"# Modificando para letras minusculas\nvoos['Situa\u00e7\u00e3o'] = voos['Situa\u00e7\u00e3o'].str.lower()\nvoos['Pa\u00eds_origem'] = voos['Pa\u00eds_origem'].str.lower()\nvoos['Pa\u00eds_destino'] = voos['Pa\u00eds_destino'].str.lower()\nvoos['Cidade_origem'] = voos['Cidade_origem'].str.lower()\nvoos['Cidade_destino'] = voos['Cidade_destino'].str.lower()\n\n# Limpando acentua\u00e7\u00e3o\nvoos['Cidade_origem'] = voos['Cidade_origem'].apply(lambda x: unidecode.unidecode(x))\nvoos['Cidade_destino'] = voos['Cidade_destino'].apply(lambda x: unidecode.unidecode(x))\nvoos['Situa\u00e7\u00e3o'] = voos['Situa\u00e7\u00e3o'].apply(lambda x: unidecode.unidecode(x))","efb1f51e":"# Lendo o arquivo de descri\u00e7\u00e3o de siglas de aeroportos\naeroportos = pd.read_excel('..\/input\/voo-regular-ativo-vra-anac\/glossario_de_aerodromo.xls', header=3)\naeroportos = aeroportos.drop('Unnamed: 0', axis=1)","70c63c12":"# Verificando 10 primeiros aeroportos da lista\naeroportos.head(10)","20fce4c7":"# Verificando estrutura da tabela de voos\nvoos.info()","3a9a6c92":"# Uni\u00e3o das tabelas, primeiro aeroporto de origem e depois o de destino\nvoos = voos.merge(aeroportos, how='left', left_on='Aeroporto Origem', right_on='Sigla OACI')\nvoos = voos.merge(aeroportos, how='left', left_on='Aeroporto Destino', right_on='Sigla OACI', suffixes=('_origem', '_destino'))\n","de7a3ef7":"voos['Partida Prevista'].value_counts()","43c65050":"voos.head()","2fdc91d7":"## Quantidade de VRA \nvoos.shape[0]","c4a9e7a3":"## Quantidade de VRA por ano\nvoos['Partida Prevista'].dt.year.value_counts().to_frame()","9809b57c":"voos['Tipo de Linha'].value_counts().to_frame()","ceb32a29":"temp = voos[voos['Tipo de Linha']=='N']\nvoos=[]\naeroportos=[]","c58738ea":"temp['Situa\u00e7\u00e3o'] = temp['Situa\u00e7\u00e3o'].str.lower()\ntemp['Pa\u00eds_origem'] = temp['Pa\u00eds_origem'].str.lower()\ntemp['Pa\u00eds_destino'] = temp['Pa\u00eds_destino'].str.lower()\ntemp['Cidade_origem'] = temp['Cidade_origem'].str.lower()\ntemp['Cidade_destino'] = temp['Cidade_destino'].str.lower()","59935889":"# Eliminando voos externos do Brasil\ntemp = temp[(temp['Pa\u00eds_origem']=='brasil')&(temp['Pa\u00eds_destino']=='brasil')]\n\n# Resetando o indice ap\u00f3s a remo\u00e7\u00e3o de voos desnecess\u00e1rios\ntemp = temp.reset_index(drop=True)","d535d064":"temp['Partida Prevista'].dt.year.value_counts().to_frame()","bcd190d8":"temp['UF_origem'].value_counts().to_frame()","74d7cc4e":"temp['UF_destino'].value_counts().to_frame()","fcec7298":"temp['Cidade_origem'].value_counts().to_frame().head(10)","96b78b27":"temp['Cidade_destino'].value_counts().to_frame().head(10)","f69203de":"temp['Situa\u00e7\u00e3o'].value_counts().to_frame()","fcd4d804":"temp['Sigla  da Empresa'].value_counts().to_frame()","b32bae2d":"# Eliminando voos externos do Brasil\nvoos = voos[(voos['Pa\u00eds_origem']=='BRASIL')&(voos['Pa\u00eds_destino']=='BRASIL')]\n\n# Resetando o indice ap\u00f3s a remo\u00e7\u00e3o de voos desnecess\u00e1rios\nvoos = voos.reset_index(drop=True)","4a032a01":"voos['Situa\u00e7\u00e3o'] = voos['Situa\u00e7\u00e3o'].str.lower()\nvoos['Pa\u00eds_origem'] = voos['Pa\u00eds_origem'].str.lower()\nvoos['Pa\u00eds_destino'] = voos['Pa\u00eds_destino'].str.lower()\nvoos['Cidade_origem'] = voos['Cidade_origem'].str.lower()\nvoos['Cidade_destino'] = voos['Cidade_destino'].str.lower()","bc54d465":"# Verificando as situa\u00e7\u00f5es que existem na tabela\nvoos['Situa\u00e7\u00e3o'].value_counts()","42c4a518":"voos['Descri\u00e7\u00e3o_destino'].value_counts()","51465bad":"# Calculando os atrasos na partida e chegada\nvoos['Atraso Partida'] = voos['Partida Real'] - voos['Partida Prevista']\nvoos['Atraso Chegada'] = voos['Chegada Real'] - voos['Chegada Prevista']","2194d786":"# Classificando aqueles acima de 30 minutos\nvoos['Atrasados Partida'] = 0\nvoos.loc[voos['Atraso Partida'] > datetime.timedelta(minutes=30), 'Atrasados Partida'] = 1\n\nvoos['Atrasados Chegada'] = 0\nvoos.loc[voos['Atraso Chegada'] > datetime.timedelta(minutes=30), 'Atrasados Chegada'] = 1","18d0d5e1":"# Verificando o total\nprint('Atrasados Partida: ', voos['Atrasados Partida'].sum())\nprint('Atrasados Chegada: ', voos['Atrasados Chegada'].sum())","656014ee":"# Colocando como indice o hor\u00e1rio da partida prevista para gerar uma s\u00e9rie temporal\nvoos = voos.set_index('Partida Prevista')","f55eb374":"# Todos os voos atrasados na partida por m\u00eas (2000-2020)\natrasos_por_mes_partida = voos['Atrasados Partida'].groupby(pd.Grouper(freq='M')).sum()\n# atrasos_por_mes_partida.plot(figsize=(20,10))","1c54e90b":"# Todos os voos atrasados na chegada agrupados por mes (2000-2020)\natrasos_por_mes_chegada = voos['Atrasados Chegada'].groupby(pd.Grouper(freq='M')).sum()\n# atrasos_por_mes_chegada.plot(figsize=(20,10))","a30843dd":"# Todos os voos cancelados\ncancelados = voos[voos['Situa\u00e7\u00e3o']=='cancelado']['Situa\u00e7\u00e3o'].groupby(pd.Grouper(freq='M')).count()\n# cancelados.plot(figsize=(20,10))","89019265":"atrasos_por_mes_partida.index[172]","294571c1":"# Unifica\u00e7\u00e3o dos gr\u00e1ficos dos c\u00e1lculos acima\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport datetime as dt\n\nplt.figure(figsize=(20,10))\n\natrasos_por_mes_partida.plot()\natrasos_por_mes_chegada.plot()\ncancelados.plot(label=(\"Cancelados\"))\n\nplt.annotate('In\u00edcio Apag\u00e3o Controladores A\u00e9reos',\n             (atrasos_por_mes_partida.index[80], atrasos_por_mes_partida[80]),\n             xytext=(5, -80), \n             textcoords='offset points',\n             arrowprops=dict(arrowstyle='-|>'))\n\nplt.annotate('Copa do Mundo',\n             (atrasos_por_mes_partida.index[173], atrasos_por_mes_partida[173]),\n             xytext=(10, -25), \n             textcoords='offset points',\n             arrowprops=dict(arrowstyle='-|>'))\n\n\nplt.title('Situa\u00e7\u00e3o por M\u00eas')\nplt.ylabel('Atrasos')\nplt.xlabel('Ano\/M\u00eas')\nplt.legend()\nplt.show()","a4e4df65":"atrasos_por_mes_bsb_origem = voos.loc[voos['Cidade_origem']=='bras\u00edlia','Atrasados Partida'].groupby(pd.Grouper(freq='M')).sum()\natrasos_por_mes_bsb_origem.plot(figsize=(20,10))","54b0bd74":"# Exemplo de filtro de uma cidade destino: Bras\u00edlia\natrasos_por_mes_bsb_destino = voos.loc[voos['Cidade_destino']=='bras\u00edlia','Atrasados Partida'].groupby(pd.Grouper(freq='M')).sum()\natrasos_por_mes_bsb_destino.plot(figsize=(20,10))","b5e131bf":"# Exemplo de filtro de uma cidade destino, com uma data inicial: Bras\u00edlia, a partir de 2010\n\natrasos_por_mes_bsb_destino = voos.loc[(voos['Cidade_destino']=='bras\u00edlia')&(voos['Partida Real']>'2010-01-01'),'Atrasados Partida'].groupby(pd.Grouper(freq='M')).sum()\natrasos_por_mes_bsb_destino.plot(figsize=(20,10))","eff381e3":"# Exemplo de filtro de uma cidade origem, com uma data inicial: Bras\u00edlia, a partir de 2010\natrasos_por_mes_bsb_origem = voos.loc[(voos['Cidade_origem']=='bras\u00edlia')&(voos['Partida Real']>'2010-01-01'),'Atrasados Partida'].groupby(pd.Grouper(freq='M')).sum()\natrasos_por_mes_bsb_origem.plot(figsize=(20,10))","013af4c4":"from sklearn.model_selection import TimeSeriesSplit\n\nimport statsmodels.api as sm\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.graphics.tsaplots import plot_pacf, plot_acf\nfrom statsmodels.tsa.arima_model import ARMA","3258ef67":"# C\u00e1lculo ACF e PACF \n\n# Partida\n\nsns.set(style=\"whitegrid\")\n\nfig, ax = plt.subplots(figsize=(12, 3))\nplot_acf(atrasos_por_mes_partida, ax=ax, lags=12)\n\nfig, ax = plt.subplots(figsize=(12, 3))\nplot_pacf(atrasos_por_mes_partida, ax=ax, lags=12)","01ced0d1":"# Chegada\n\nsns.set(style=\"whitegrid\")\n\nfig, ax = plt.subplots(figsize=(12, 3))\nplot_acf(atrasos_por_mes_chegada, ax=ax, lags=12)\n\nfig, ax = plt.subplots(figsize=(12, 3))\nplot_pacf(atrasos_por_mes_chegada, ax=ax, lags=12)","b0fb9ec9":"# An\u00e1lise da S\u00e9rie Temporal de Voos Atrasados no Brasil\n\nTrabalho de an\u00e1lise dos dados de voos regurlares no Brasil disponibilidados pela ANAC.\n\n## Objetivo\n\nObter informa\u00e7\u00f5es de s\u00e9ries temporais analisando o quantitativo de atrasos por m\u00eas dos voos regulares civis no Brasil, do per\u00edodo de 2000 a 2020.\n\n\n## Dados\n\nDados de voos civis regulares disponibilidados pela ANAC, constando do per\u00edodo de janeiro de 2000 at\u00e9 agosto de 2020. \n\n### Vari\u00e1veis\n\nDescri\u00e7\u00e3o das vari\u00e1veis:\n\n* Sigla da Empresa\n* N\u00famero do Voo\n* D I\n* Tipo de Linha\n* Aeroporto Origem\n* Aeroporto Destino\n* Partida Prevista\n* Partida Real\n* Chegada Prevista\n* Chegada Real\n* Situa\u00e7\u00e3o\n* Justificativa\n\nhttps:\/\/www.anac.gov.br\/assuntos\/dados-e-estatisticas\/historico-de-voos\n\n\nhttps:\/\/www.anac.gov.br\/assuntos\/setor-regulado\/empresas\/envio-de-informacoes\/descricao-de-variaveis","021e232c":"# Verifica\u00e7\u00e3o, ajustes e uni\u00e3o dos dados\n\nVerificando o conte\u00fado dos arquivos e fazendo alguns ajustes.","2601d682":"### Realizando a uni\u00e3o das tabelas de voos com a de siglas de aeroportos\n\nA fim de obter dados como cidades, estados e pa\u00edses das siglas dos aeroportos, s\u00e3o feitas duas uni\u00f5es entre as tabelas pegando as cidades de origem e destino.","e24968f1":"## Classifica\u00e7\u00f5es das Situa\u00e7\u00f5es\n\nExistem as seguintes situa\u00e7\u00f5es na tabela.","e20b221d":"# C\u00e1lculos de s\u00e9ries temporais","8fba51de":"# Estatisticas e Gr\u00e1ficos\n\nEstatisticas geradas a partir dos dados calculados nos passos anteriores. ","b548aa2c":"## Classificando os Atrasados\n\nConforme resolu\u00e7\u00e3o XYZ da ANAC, s\u00e3o declarados atrasados, os voos acima de 30 minutos.","5ddbbc5d":"# Carregamento de bibliotecas e arquivos","cbac6926":"### Padronizando vari\u00e1veis\n\nAjustando para minusculo as vari\u00e1veis descritivas."}}