{"cell_type":{"3ed6b1ba":"code","21069377":"code","593ae6ca":"code","a44496e1":"code","228ff2a5":"code","a418e279":"code","ce93f15f":"code","3ec6b834":"markdown","ee82626b":"markdown","7ed0f2af":"markdown","a3948dcf":"markdown","7d00748b":"markdown","ed39cb72":"markdown"},"source":{"3ed6b1ba":"import re \nimport os \nimport pandas as pd ","21069377":"DIR = '..\/input\/chai-time-data-science\/Raw Subtitles\/'\nL_fname_txt = os.listdir(DIR)\nL_fname_csv = [k.replace('.txt','.csv') for k in L_fname_txt]   # create a list of same files with .csv ext","593ae6ca":"#Just a function to write one line to a file - not the efficient way, but yeah works \ndef Fn_write_line(sLine,fname):\n    fname = '..\/working\/'+fname\n    target = open(fname, 'a')\n    target.write(sLine)\n    target.close()","a44496e1":"for fname_txt in L_fname_txt:\n    fname = open(DIR+fname_txt, 'r') \n    Lines = fname.readlines() \n    pattern1 = \"  [0-9]+:[0-9]+  \"   # time pattern eg: 10:43\n    pattern2 = \"  [0-9]+:[0-9]+:[0-9]+  \" # time pattern eg: 1:00:14  \n\n    for line in Lines: \n        if (re.search(pattern1,line)) or (re.search(pattern2,line) ):  # line [8]\n            line = line.replace(\"  \",\"_-_\").replace(\"\\n\",\"\")  # line [9] - See comments below\n        if len(line) >1 :    # Line [10]\n            Fn_write_line(line,fname_txt)\n            df = pd.read_csv( '..\/working\/'+fname_txt,sep = \"_-_\" , header = None)\n            df.columns = ['speaker','time','text']\n            df = df[1:-1:]   # line [14]\n            df.to_csv('..\/working\/'+fname_txt.replace('.txt','.csv'),index=False)    ","228ff2a5":"L_fname_csv","a418e279":"L_fname_csv[18]","ce93f15f":"df = pd.read_csv( '..\/working\/'+ L_fname_csv[18] )\ndf.head()","3ec6b834":"Create a list of all the raw files","ee82626b":"eg : In E1.csv , we got back that missing lines at 0:46 and 1:38 into the dataframe","7ed0f2af":"#### Comments for above code block\nLine [8] if any of the pattern occurs, do some replacements\nLine [9] if the line has any 'time' pattern, remove the \\n and replace \"  \" with _-_ ( or something unique) <br>\nLine [10] Skip that weird empty line ( which has a carriage return \/ newline) <br>\nline [14] Skip the first line in every txt file ( which seems to be common across all files )","a3948dcf":"Read all the txt files (loop) in 'Raw Subtitles' and write them to '\/working' as csv files.","7d00748b":"This file is in reference to discussion topic : \nhttps:\/\/www.kaggle.com\/rohanrao\/chai-time-data-science\/discussion\/163343\n( Since  the 2nd and 3rd line for every file ( in \"Cleaned Subtitles\" ) ( E(1-45).csv has been merged with the 1st line, ending up with 2 lines missing from every E*.csv file. \n\nBelow is a quick and dirty way to create csv files with all lines present. \nAnd removing the first line . ( which is common across all subtitles files ) \n","ed39cb72":"Check a random file , here 'E1.csv' , to see the output"}}