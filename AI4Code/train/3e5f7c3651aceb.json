{"cell_type":{"79221d9e":"code","6c0a1c0f":"code","e22d6dde":"code","3fa6fa40":"code","ad0b18c4":"code","67542817":"code","a786c29e":"code","ba46cd9e":"code","cbb8cd38":"code","c64219a3":"code","ecd224bf":"code","e534e8ce":"code","5f7c2916":"code","04afc2ae":"code","a016fd6c":"code","37fd4867":"code","65d267e2":"code","1a7baf9e":"code","953bedae":"code","903b5017":"code","f5042cd0":"code","9335c067":"markdown","f88d73f6":"markdown","223ca096":"markdown","f96eee04":"markdown","208657b4":"markdown","45403127":"markdown","767d0496":"markdown","5effdd4f":"markdown","5beacee5":"markdown","bfd8b322":"markdown","c5d678d4":"markdown","d5fa7853":"markdown","2cccf73c":"markdown","5413a515":"markdown","7efd287b":"markdown","0774fa83":"markdown","3b2fc7cb":"markdown","79cfe5dc":"markdown","d31bc0ed":"markdown","05107cd4":"markdown","ba5ed6b4":"markdown","79e88e8c":"markdown","cb07e196":"markdown","e09db58d":"markdown","f5c8bf2d":"markdown","4f8c32e3":"markdown","5b5307b7":"markdown","770318e7":"markdown","a948fc9f":"markdown","29cb52f9":"markdown","b6abace5":"markdown","60d45005":"markdown","aa52f910":"markdown","f9648e9c":"markdown"},"source":{"79221d9e":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans, AgglomerativeClustering, AffinityPropagation, DBSCAN\nimport scipy.cluster.hierarchy as sch\nimport plotly.figure_factory as ff\nimport plotly.express as px\nimport plotly.graph_objects as go\nsns.set()\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n%matplotlib inline","6c0a1c0f":"dataset = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndataset.head()","e22d6dde":"dataset.describe().T","3fa6fa40":"print(pd.isnull(dataset).sum())","ad0b18c4":"dataset2 = dataset.copy()\ndataset2 = dataset2.drop(['CustomerID'], axis = 1)","67542817":"fig = px.scatter_matrix(dataset2,\n    dimensions=[\"Age\", \"Annual Income (k$)\", \"Spending Score (1-100)\"],\n    color=\"Gender\", symbol=\"Gender\",\n    title=\"Scatter matrix\",\n    labels={col:col.replace('_', ' ') for col in dataset2.columns}) # remove underscore\n\nfig.update_traces(diagonal_visible=False)\nfig.show()","a786c29e":"x = [\"Age\", \"Annual Income (k$)\", \"Spending Score (1-100)\"]\nheat = go.Heatmap(z =dataset2.corr(),\n                  x = x,\n                  y=x,\n                  xgap=1, ygap=1,\n                  colorbar_thickness=20,\n                  colorbar_ticklen=3,\n                  hovertext = dataset2.corr(),\n                  hoverinfo='text'\n                   )\n\ntitle = 'Correlation Matrix'               \n\nlayout = go.Layout(title_text=title, title_x=0.5, \n                   width=600, height=600,\n                   xaxis_showgrid=False,\n                   yaxis_showgrid=False,\n                   yaxis_autorange='reversed')\n   \nfig=go.Figure(data=[heat], layout=layout)        \nfig.show() ","ba46cd9e":"hist_data = [dataset2['Age'], dataset2['Annual Income (k$)'], dataset2['Spending Score (1-100)']]\ngroup_labels = ['Age', 'Annual Income (k$)', 'Spending Score (1-100)']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=[5, 10, 8])\nfig.update_layout(title_text='Age, Income and Score distribution')\nfig.show()","cbb8cd38":"fig = px.scatter(dataset2, x=\"Annual Income (k$)\", y = \"Spending Score (1-100)\",size='Age', color=\"Gender\")\nfig.show()","c64219a3":"Genre = pd.DataFrame(dataset2['Gender'].value_counts()).reset_index()\nGenre.columns = ['Gender','Total']\nfig = px.pie(Genre, values = 'Total', names = 'Gender', title='Gender', hole=.4, color = 'Gender',width=800, height=400)\nfig.show()","ecd224bf":"fig = px.bar(Genre, x = 'Gender', y='Total', color='Gender',width=600, height=500)\nfig.show()","e534e8ce":"Male = dataset2[dataset2[\"Gender\"] == 'Male'][['Gender','Age']]\ntemp = pd.DataFrame(Male['Age'].value_counts().reset_index())\ntemp.columns = ['Age','Total']\n\nFemale = dataset2[dataset2[\"Gender\"] == 'Female'][['Gender','Age']]\ntemp2 = pd.DataFrame(Female['Age'].value_counts().reset_index())\ntemp2.columns = ['Age','Total']","5f7c2916":"import plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x = temp['Age'],\n    y = temp['Total'],\n    name='Male',\n    marker_color='rgba(94, 144, 175, 0.8)'\n))\nfig.add_trace(go.Bar(\n    x = temp2['Age'],\n    y = temp2['Total'],\n    name='Female',\n    marker_color='rgba(249, 70, 10, 0.9)'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = 'Age per genre', barmode = 'group', xaxis_tickangle=-45)\nfig.show()\n","04afc2ae":"X = dataset2.iloc[:,2:4].values","a016fd6c":"wcss = []\nfor i in range(1, 10):\n    kmeans = KMeans(n_clusters = i, init = \"k-means++\", max_iter = 500, n_init = 10, random_state = 123)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\n    \nfig = go.Figure(data = go.Scatter(x = [1,2,3,4,5,6,7,8,9,10], y = wcss))\n\n\nfig.update_layout(title='WCSS vs. Cluster number',\n                   xaxis_title='Clusters',\n                   yaxis_title='WCSS')\nfig.show()","37fd4867":"kmeans = KMeans(n_clusters = 5, init=\"k-means++\", max_iter = 500, n_init = 10, random_state = 123)\nidentified_clusters = kmeans.fit_predict(X)\n\n\ndata_with_clusters = dataset2.copy()\ndata_with_clusters['Cluster'] = identified_clusters","65d267e2":"fig = px.scatter_3d(data_with_clusters, x = 'Age', y='Annual Income (k$)', z='Spending Score (1-100)',\n              color='Cluster', opacity = 0.8, size='Age', size_max=30)\nfig.show()","1a7baf9e":"fig = ff.create_dendrogram(X,\n                           linkagefun = lambda x: sch.linkage(x, \"ward\"),)\n\n# Ward minimizes the variance of the points inside a cluster.\n\nfig.update_layout(title = 'Hierarchical Clustering', xaxis_title='Customers',\n                   yaxis_title='Euclidean Distance', width=700, height=700)\n\nfig.show()","953bedae":"hc = AgglomerativeClustering(n_clusters = 5, affinity = \"euclidean\", linkage = \"ward\")\nidentified_clusters = hc.fit_predict(X)\n\ndata_with_clusters = dataset2.copy()\ndata_with_clusters['Cluster'] = identified_clusters\n\nfig = px.scatter_3d(data_with_clusters, x = 'Age', y='Annual Income (k$)', z='Spending Score (1-100)',\n              color='Cluster', opacity = 0.8, size='Age', size_max=30)\nfig.show()","903b5017":"ap = AffinityPropagation(random_state = 0)\nidentified_clusters = ap.fit_predict(X)\n\ndata_with_clusters = dataset2.copy()\ndata_with_clusters['Cluster'] = identified_clusters\n\nfig = px.scatter_3d(data_with_clusters, x = 'Age', y='Annual Income (k$)', z='Spending Score (1-100)',\n              color='Cluster', opacity = 0.8, size='Age', size_max=30)\nfig.show()","f5042cd0":"DBS = DBSCAN(eps = 9, min_samples = 5)\n\nidentified_clusters = DBS.fit_predict(X)\n\ndata_with_clusters = dataset2.copy()\ndata_with_clusters['Cluster'] = identified_clusters\n\nfig = px.scatter_3d(data_with_clusters, x = 'Age', y='Annual Income (k$)', z='Spending Score (1-100)',\n              color='Cluster', opacity = 0.8, size='Age', size_max=30)\nfig.show()","9335c067":"The number of clusters is 10. It doesn't seem like a good result, but could be an useful algorithm with others datasets, or maybe studying how Age relates to the other variables.","f88d73f6":"There is no clear correlation between Annual income and Spending score, let's see later what clustering analysis can tell us","223ca096":"**EDA**","f96eee04":"**Loading and getting to know the dataset**","208657b4":"I'll do some comparison with different clustering algorithms:\n- K-Means\n- Hierarchical clustering\n- Affinity propagation\n- DBSCAN","45403127":"The objective of the proyect is to use different clustering algorithms to come up with conclusions about the dataset, as well as comparing the different used models.","767d0496":"**Conclusion:** \n- By using the Elbow method, the most accurate cluster number may be 3 or 5\n- Taking a look at the Dendrogram, we see that cutting horizontally the largest vertical line (the second blue from the left), 5 clusters seem to be the best option.\n- In both cases as we made the clusters, the same conclusions could be made. These two algorithms seem to have worked really well.","5effdd4f":"In the hierarchichal agglomerative clustering, each point starts being an individual cluster, and they group taking into account the distance between each one (first the closer ones). I can set the distance I want to evaluate.\nTo get a better idea of the number of clusters, I'll make use of a dendrogram.","5beacee5":"**Affinity propagation**","bfd8b322":"**Conclusions:**\n- There are more women than men evaluated, and both average age is around 33 years.\n- There are more older men than women in the dataset.\n- There is no correlation between age with income or spending score.","c5d678d4":"- There are 200 observations in total.\n- The customers range from 18 to 70 years old.\n- The annual income ranges from 15000 USD to 137000 USD.","d5fa7853":"**DBSCAN**","2cccf73c":"We can see that the clusters could be labeled as:\n- Low income and low spending score (blue)\n- Low income and hig spending score (yellow)\n- Mid income and mid spending score (pink): Seems to be the most populated one\n- High annual income and low spending score (purple)\n- High annual income and high spending score (orange)\n\nAs the mall marketing department, we would like to move every observation upward so people spend more money. We should focus on the pink and purple clusters as they represent either a whole lot of people or high annual income to be spent. We may offer some discounts studying what pople in the pink cluster mostly buy, and offer some premium items for people in the purple one.","5413a515":"**Clustering analysis**","7efd287b":"K-means starts with allocating cluster centers randomly and then looks for \"better\" solutions. One thing about this algorithm is that I have to give the number of clusters beforehand, so I'll be using the WCSS (elbow method) to come up with a more accurate idea.","0774fa83":"Makes the same clusters as K-Means, having just slight","3b2fc7cb":"## Mall Customers Clustering","79cfe5dc":"There seems to only be a slight correlation between 'Age' and 'Spending score' for the set. People tend to spend less as they get older.","d31bc0ed":"**Correlations**","05107cd4":"**Importing Modules**","ba5ed6b4":"*Checking for missing values*","79e88e8c":"It is a density based clustering algorithm. For each observation, the algorithm will form a shape around it and count how many fata points are within this shape (cluster). After there are no more nearby points, it will procede to make another cluster.\nI'll define the minimum number of data points to determine a cluster and the max distance for points to be part of the same cluster. I don't have to set the number of clusters beforehand.","cb07e196":"Although many relations could be analyzed, I'll focus on the Annual Income vs. Spending Score.","e09db58d":"**WCSS**","f5c8bf2d":"## K-Means","4f8c32e3":"This algorithm doesn't require a preset cluster number. It takes as input measures of similarity between pair of data points. As they have similarities, they can belong to the same cluster. I'll use default settings.","5b5307b7":"**What about age feature?**","770318e7":"**The dataset has:**\n- Numerical columns: CustomerID, Age, Annual Income and Spending Score.\n- Categorical column: Gender    ","a948fc9f":"Thanks for reaching the end!! Upvote if you liked it!","29cb52f9":"There are no missing values in the set.","b6abace5":"First I'll drop the ID column, as it doesn't give any useful information","60d45005":"Although the result isn't as accurate as K-Means, DBSCAN is a great algorithm for tuning an try to come up with different conclusions. In this case we achieve the same amount of clusters but they are not as informative or representative (might get better with some more tuning).","aa52f910":"## Hierarchical Clustering","f9648e9c":"**Let's see how numerical columns are distributed**"}}