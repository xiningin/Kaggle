{"cell_type":{"8077c873":"code","a4b6bd67":"code","5fd18a8a":"code","561bfdc0":"code","0c8aef3c":"code","3d109011":"code","23ab7cfe":"code","3077ea93":"code","f4cc34fd":"code","d9996e43":"code","84ed7172":"code","da18f726":"code","0b5302fb":"code","052cc56f":"code","2b92fc4d":"code","c688f7be":"code","ed0f0d74":"code","91472dca":"markdown","f529f00e":"markdown","1901b323":"markdown","912c682d":"markdown"},"source":{"8077c873":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom scipy import stats\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a4b6bd67":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","5fd18a8a":"df_train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\ndf_features = pd.read_csv('..\/input\/jane-street-market-prediction\/features.csv')\n#df_exp_test = pd.read_csv('..\/input\/jane-street-market-prediction\/example_test.csv')\ndf_exp_sub = pd.read_csv('..\/input\/jane-street-market-prediction\/example_sample_submission.csv')","561bfdc0":"df_train.head()","0c8aef3c":"df_train.drop(columns=['weight', 'resp_1', 'resp_2', 'resp_3', 'resp_4', 'resp'], inplace = True)","3d109011":"def resumetable(df):\n    print(f\"Dataset Shape: {df.shape}\")\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    summary['First Value'] = df.loc[0].values\n    summary['Second Value'] = df.loc[1].values\n    summary['Third Value'] = df.loc[2].values\n\n    for name in summary['Name'].value_counts().index:\n        summary.loc[summary['Name'] == name, 'Entropy'] = round(stats.entropy(df[name].value_counts(normalize=True), base=2),2) \n\n    return summary","23ab7cfe":"resumetable(df_train[:])[:]","3077ea93":"#dataframe after dropping ['weight', 'resp_1', 'resp_2', 'resp_3', 'resp_4', 'resp']\ndf_train.head()","f4cc34fd":"col_list = df_train.columns.to_list()","d9996e43":"col_list","84ed7172":"df_train['date-ts-id'] = df_train['date'].astype(str) + \"-\" + df_train['ts_id'].astype(str)","da18f726":"df_train['date-ts-id'].tail()","0b5302fb":"df_train.set_index('date-ts-id', inplace=True)","052cc56f":"df_train.head()","2b92fc4d":"df_train.feature_1.plot()","c688f7be":"total = len(df_train)\n\nplt.figure(figsize = (108,6))\n\ng = sns.countplot(x=\"date\", data=df_train, \n                  color='blue')\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_xlabel(\"Date Status Categories\", fontsize=12)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_title(\"Date Status Types Distribution\", fontsize=20)\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}%'.format(height\/total*100),\n            ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\n\nplt.show()","ed0f0d74":"#df_train.date.value_counts().reset_index(name='Number of entries for each date')\ndf_train.groupby('date').size().sort_values(ascending=False).reset_index(name='Count on each date')","91472dca":"### Import data","f529f00e":"![image.png](attachment:image.png)","1901b323":"## Introduction","912c682d":"### Libraries"}}