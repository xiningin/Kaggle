{"cell_type":{"5ccbeab3":"code","db094c3d":"code","3609093a":"code","b598dd9f":"code","fdabf8e1":"code","c3707492":"code","40a62422":"code","a5b3eb1c":"code","5519b656":"code","b59c4f94":"code","85d01b20":"code","1542efc3":"code","725b433c":"code","f8b052d8":"code","8a1cf892":"code","61658070":"code","af48a874":"code","0196974d":"code","a3c5245f":"code","f3f125f9":"code","a974f89d":"code","5e2c79e5":"code","56599ce9":"code","148f4f18":"code","4b28be6b":"markdown"},"source":{"5ccbeab3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","db094c3d":"df = pd.read_csv(\"..\/input\/CreditCardUsage.csv\")","3609093a":"df.head(5)","b598dd9f":"df.columns","fdabf8e1":"df.describe().T","c3707492":"df.info()","40a62422":"df.isna().sum()","a5b3eb1c":"df[\"MINIMUM_PAYMENTS\"]","5519b656":"df[\"MINIMUM_PAYMENTS\"].median()","b59c4f94":"df[\"MINIMUM_PAYMENTS\"].fillna(df[\"MINIMUM_PAYMENTS\"].median(),inplace=True)","85d01b20":"df[\"CREDIT_LIMIT\"]","1542efc3":"df[\"CREDIT_LIMIT\"].median()","725b433c":"df[\"CREDIT_LIMIT\"].fillna(df[\"CREDIT_LIMIT\"].median(),inplace=True)","f8b052d8":"df.duplicated().sum()","8a1cf892":"df.drop(columns={'CUST_ID'}, inplace = True)\ndf.columns","61658070":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","af48a874":"sns.heatmap(df.corr())","0196974d":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaled_df = scaler.fit_transform(df)\ndf_scaled = pd.DataFrame(scaled_df,columns=df.columns)\ndf_scaled.head()","a3c5245f":"from sklearn.cluster import KMeans\nimport pylab as pl\nimport random","f3f125f9":"k_means = KMeans(init = \"k-means++\", n_clusters = 8, n_init = 12)","a974f89d":"k_means.fit(scaled_df)","5e2c79e5":"k_means.labels_","56599ce9":"k_means.cluster_centers_","148f4f18":"Sum_of_squared_distances = []\nK = range(1,21)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(df_scaled)\n    Sum_of_squared_distances.append(km.inertia_)\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","4b28be6b":"K-Means"}}