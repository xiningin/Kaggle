{"cell_type":{"c437980f":"code","79d5cba6":"code","d7f3d8b2":"code","e981f1ea":"code","0efa361f":"code","23bc1626":"code","8436b912":"code","e1690bcb":"code","cf768a30":"code","ee700bb1":"code","158433e9":"code","b63e42f8":"code","a136e0dd":"code","1fa331f1":"code","70d13b5f":"code","b12fbe16":"code","6c8bdf73":"code","22175017":"code","04cadddd":"code","9b9c34bc":"code","cac1ea79":"code","82787ce0":"code","c47135d8":"code","e6d43784":"code","81cbad6b":"code","6e4d5fc2":"code","4aafade7":"code","d77b4723":"code","6d7f15b9":"code","f7450ae5":"code","5b075cf1":"code","1034f003":"code","5d3b7113":"code","02413c75":"code","00116bbf":"code","02214766":"code","3885a87f":"code","ebe31d10":"code","9e80c217":"code","d7075f89":"code","ecf2414c":"code","285fd171":"code","6f5a54c8":"code","2f365f00":"code","6877f102":"code","ddad5474":"code","6c3c32b0":"code","9a0e1397":"code","99065d58":"code","a8adaaa9":"code","e1fb0375":"code","0ddcb84f":"code","36dfd7e9":"code","db5bfe2d":"code","7785f209":"code","a4232d32":"code","2921a694":"code","4b06cf30":"code","2a4635f5":"code","b56edde3":"code","90261467":"code","602453b8":"code","d30e0c36":"code","8afb5caf":"code","24ad0a5f":"code","467adccc":"code","8f03ccc5":"code","711df1dc":"code","8185d1f0":"code","ef67890f":"code","791ac957":"code","a1de87c2":"code","a05420e5":"code","93a2ff36":"code","0d6142c8":"code","2c81de81":"code","676738e7":"code","2d13c337":"code","d3156d4d":"code","a59227a3":"code","afee9918":"code","c508d3ee":"code","8c873c33":"code","7b91fc48":"code","6761b18b":"code","61c57374":"code","106de764":"code","02ed1237":"code","a7e163aa":"code","eb10b83f":"code","18c177a4":"code","ebae92bf":"code","f33fdc56":"code","02e37d6e":"code","2d555363":"code","073751d8":"code","07fe2503":"code","3013f7ed":"markdown","77c9a65b":"markdown","d633e4b6":"markdown","d657a0ed":"markdown","d3307a1d":"markdown","6bfc6ae5":"markdown","f580f1f4":"markdown","c54e2eba":"markdown","dba60a35":"markdown","48cb82d8":"markdown","f589e6ea":"markdown","874951fe":"markdown","dcdd117c":"markdown","af5c8d9a":"markdown","08d74e39":"markdown","74729540":"markdown","4ec24820":"markdown","2982664e":"markdown","22e19d88":"markdown","890ab1cd":"markdown","49dd5ce3":"markdown","186e0ac9":"markdown"},"source":{"c437980f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79d5cba6":"df = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","d7f3d8b2":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","e981f1ea":"df.head()","0efa361f":"df = df.drop(columns=['Unnamed: 0','Photo','Club Logo','Flag'],axis=1)","23bc1626":"df.head()","8436b912":"df.columns","e1690bcb":"df.info()","cf768a30":"df.describe()","ee700bb1":"\ndf.isna().sum()","158433e9":"df['Club'] = df['Club'].replace(np.nan,'No Club')\ndf['Preferred Foot']=df['Preferred Foot'].replace(np.nan,'Right')","b63e42f8":"df['International Reputation'].fillna(df['International Reputation'].mode()[0],inplace=True)\ndf['Weak Foot'].fillna(df['Weak Foot'].mode()[0],inplace=True)\ndf['Skill Moves'].fillna(df['Skill Moves'].mode()[0],inplace=True)","a136e0dd":"df['Work Rate'].value_counts()\n\n","1fa331f1":"df['Work Rate'] = df['Work Rate'].replace(np.nan,'Medium\/Medium')","70d13b5f":"print(df['Body Type'].value_counts())                 \nprint(df['Real Face'].value_counts())","b12fbe16":"df['Body Type'] = df['Body Type'].replace(np.nan,'Normal')\ndf['Real Face'] = df['Real Face'].replace(np.nan,'No')","6c8bdf73":"print(df['Position'].value_counts())","22175017":"df['Position'] = df['Position'].replace(np.nan,'ST')","04cadddd":"print(df['Jersey Number'].value_counts())","9b9c34bc":"df['Jersey Number'].fillna(df['Jersey Number'].mode()[0],inplace=True)","cac1ea79":"print(df['Joined'].value_counts())","82787ce0":"df['Joined'] = df['Joined'].replace(np.nan,'Jul 1, 2018')","c47135d8":"df['Contract Valid Until'].value_counts()","e6d43784":"df['Contract Valid Until'] = df['Contract Valid Until'].replace(np.nan,'2019')","81cbad6b":"print(df['Height'].value_counts())\nprint(df['Weight'].value_counts())","6e4d5fc2":"df['Height']= df['Height'].replace(np.nan,\"6'0\")\ndf['Weight']=df['Weight'].replace(np.nan,'165lbs')","4aafade7":"cols=['Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing',\n       'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing',\n       'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions',\n       'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes']\n","d77b4723":"for c in cols:\n    df[c].fillna(df[c].median(),inplace=True)","6d7f15b9":"df.info()","f7450ae5":"df = df.drop(columns=['Release Clause','Loaned From'])","5b075cf1":"cols = ['LS', 'ST','RS', 'LW', 'LF', 'CF', 'RF', 'RW', 'LAM', 'CAM', 'RAM', 'LM', 'LCM',\n       'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB','RCB', 'RB']\nfor c in cols:\n    df[c] = df[c].replace(np.nan,'0+0')","1034f003":"df.info()","5d3b7113":"len(df['Nationality'].unique())","02413c75":"df['Nationality'].value_counts().nlargest(5)","00116bbf":"nations_count = df['Nationality'].value_counts().nlargest(20)\nnations_count = nations_count.reset_index()\nnations_count.columns=['Nationality','Count']\n","02214766":"nations_count.head()","3885a87f":"fig = plt.figure(figsize=(20,10))\nplt.bar(x=nations_count['Nationality'],height=nations_count['Count'])\nplt.xlabel('Nations')\nplt.ylabel('Count')","ebe31d10":"len(df['Club'].unique())","9e80c217":"df['Club'].value_counts().nlargest(7)","d7075f89":"players = df['Name']\npotential = df['Potential']\nOverall = df['Overall']\n\n\n","ecf2414c":"pl = {'Name':players,'Potential':potential,'Overall':Overall}\npotential_p = pd.DataFrame(pl,columns=['Name','Potential','Overall'])","285fd171":"potentail_p=potential_p.set_index('Name',inplace=True,drop=True)\npotential_p.head()\n","6f5a54c8":"potential_p[potential_p['Potential'] > 85]","2f365f00":"potential_p[potential_p['Overall']>85]","6877f102":"potential_p.idxmax(axis=0)","ddad5474":"rep = df['International Reputation'].value_counts()\nrep","6c3c32b0":"labels=[1,2,3,4,5]","9a0e1397":"sns.barplot(x=labels,y=rep)","99065d58":"plt.figure(figsize=(10,10))\nplt.pie(rep,labels=labels,autopct='%1.1f%%',startangle=180)","a8adaaa9":"values= df['Preferred Foot'].value_counts()\nlabels = ['Right','Left']\nplt.figure(figsize=(12,5))\nsns.barplot(x=labels,y=values,palette='pastel')\nplt.xlabel('Preferred Foot')\nplt.ylabel('Count')","e1fb0375":"wr = df['Work Rate'].value_counts()\nwr = wr.reset_index()\nwr.columns=['Work Rate','Count']","0ddcb84f":"fig = plt.figure(figsize=(15,10))\nplt.bar(x=wr['Work Rate'],height=wr['Count'])\nplt.xlabel('Nations')\nplt.ylabel('Count')","36dfd7e9":"df['Weights'] = [i[:3] for i in df['Weight']]","db5bfe2d":"plt.figure(figsize=(10,7))\nsns.distplot(df['Weights'],kde=True)","7785f209":"df['Height'].head(1)","a4232d32":"df['Heights']=[i.replace(\"'\",'.') for i in df['Height']]","2921a694":"df['Heights'] = df['Heights'].astype('float32')","4b06cf30":"plt.figure(figsize=(10,7))\nsns.distplot(df['Heights'],kde=True)","2a4635f5":"df['Contract Valid Until'].value_counts()","b56edde3":"plt.figure(figsize=(12,7))\nsns.distplot(df['Age'],kde=True)","90261467":"Age=df['Age'].value_counts()","602453b8":"Age = Age.reset_index()\nAge.columns=['Age','Count']","d30e0c36":"plt.figure(figsize=(14,9))\nsns.barplot(x=Age['Age'],y=Age['Count'])","8afb5caf":"Age['Age'].mean()","24ad0a5f":"df['Wage']= [x.replace('\u20ac','') for x in df['Wage']]","467adccc":"def money_flt(st):\n    if st.endswith('K'):\n        st = st[:-1]\n        st = st+('*1e3')\n    elif st.endswith('M'):\n        st = st[:-1]\n        st = st+('*1e6')\n    return st","8f03ccc5":"df['Wage'] = df['Wage'].apply(money_flt)","711df1dc":"df['Wage'] = [ eval(i) for i in df['Wage']]","8185d1f0":"df['Value'] = [x.replace('\u20ac','') for x in df['Value']]","ef67890f":"df['Value'] = df['Value'].apply(money_flt)\ndf['Value'] = [ eval(i) for i in df['Value']]","791ac957":"wage = df['Wage']\nvalue = df['Value']\npl = {'Name':players,'Wage':wage,'Value':value}\npl_v = pd.DataFrame(pl,columns=['Name','Wage','Value'])","a1de87c2":"pl_v.head()","a05420e5":"pl_v.sort_values(by=['Wage'],ascending=False).head(10)","93a2ff36":"pl_v.sort_values(by=['Value'],ascending=False).head(10)","0d6142c8":"print('Mean wage in Euros',pl_v['Wage'].mean())\nprint('Mean Value in Euros',pl_v['Value'].mean())","2c81de81":"pl_v=pl_v.set_index('Name')","676738e7":"print('Player with max wage in Euros ',pl_v['Wage'].idxmax())\nprint('Player with max Value in Euros ',pl_v['Value'].idxmax())","2d13c337":"pl_v=pl_v.reset_index()","d3156d4d":"pl_v.head()","a59227a3":"pl_v['age'] = df['Age']","afee9918":"pl_v.head()","c508d3ee":"plt.figure(figsize=(15,8))\nsns.scatterplot(x='age',y='Wage',data=pl_v,palette='pastel')","8c873c33":"plt.figure(figsize=(15,8))\nsns.scatterplot(x='age',y='Value',data=pl_v,palette='pastel')","7b91fc48":"position = df['Position'].value_counts()\nposition = position.reset_index()\nposition.columns=['Position','Count']","6761b18b":"position.head()","61c57374":"plt.figure(figsize=(14,9))\nsns.barplot(x=position['Position'],y=position['Count'])","106de764":"cols = ['LS', 'ST','RS', 'LW', 'LF', 'CF', 'RF', 'RW', 'LAM', 'CAM', 'RAM', 'LM', 'LCM',\n       'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB','RCB', 'RB']\nfor c in cols:\n    df[c] = [eval(i) for i in df[c]]","02ed1237":"df.head()","a7e163aa":"df=df.set_index('Name')\nfor c in cols:\n    print('Best at position '+c+' ',df[c].idxmax())","eb10b83f":"df.columns","18c177a4":"kols = ['Crossing', 'Finishing','HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve',\n       'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration','SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression','Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling','GKKicking', 'GKPositioning', 'GKReflexes']","ebae92bf":"for k in kols:\n    print('Best at attribute '+k+' ',df[k].idxmax())","f33fdc56":"pl_attributes = ('Crossing', 'Finishing','HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve',\n       'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration','SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression','Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling','GKKicking', 'GKPositioning', 'GKReflexes')","02e37d6e":"attrib = df.groupby(df['Position'])[pl_attributes].mean()","2d555363":"attrib","073751d8":"from math import pi\nidx = 1\n\nplt.figure(figsize=(15,45))\nfor position, features in attrib.iterrows():\n      \n        \n    top_features = dict(features.nlargest(5))\n    categories=top_features.keys()\n    N = len(categories)\n\n   \n    values = list(top_features.values())\n    values += values[:1]\n\n    \n    angles = [n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n\n   \n    ax = plt.subplot(10, 3, idx, polar=True)\n\n   \n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n  \n    ax.set_rlabel_position(0)\n    plt.yticks([25,50,75], [\"25\",\"50\",\"75\"], color=\"grey\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    # Plot data\n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    # Fill area\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(position, size=11, y=1.1)\n    \n    idx += 1","07fe2503":"#More to do handle Contract Expiration Date and some regression analysis on some attributes","3013f7ed":"# Loading Data ","77c9a65b":"**Players with Potential > 85**","d633e4b6":"# Handling Null Values","d657a0ed":"**Players with Overall > 85**","d3307a1d":"Checking for the count of Nationality of Players","6bfc6ae5":"# Data Analysis","f580f1f4":"**Sorting by Player Value**","c54e2eba":"**Player height Distribution**","dba60a35":"**Best Player at attributes**","48cb82d8":"***Count of player in specific age groups***","f589e6ea":"**Player Age Distribution**","874951fe":"**Sorting by Wage**","dcdd117c":"**Player count per position**","af5c8d9a":"Count of International Reputation ","08d74e39":"**Spider plot for attributes**","74729540":"**Distribution Plot for Player Weights**","4ec24820":"**Right Foot Vs Left Foot**","2982664e":"**Work Rate Count**","22e19d88":"**Best player at positions**","890ab1cd":"**Checking for NULLS**","49dd5ce3":"**Age VS Wage**","186e0ac9":"**Age vs Value**"}}