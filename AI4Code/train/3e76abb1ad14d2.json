{"cell_type":{"6e0cdc21":"code","f2689f2c":"code","c7653923":"code","e4d72dc2":"code","f795aad2":"code","968cf593":"code","e4394ff0":"code","1d13e3f3":"code","fbb32150":"code","c677e743":"code","c1e4b613":"code","13db138c":"code","4b3f2d7f":"code","fa77ed17":"code","d84a45e1":"code","d87750f6":"code","d9122e73":"code","a5b17ac2":"code","21eba33a":"code","731d39f7":"markdown","2bc5994d":"markdown","61d08bdd":"markdown","4eaf6c2d":"markdown","958e821c":"markdown","1d8467aa":"markdown","970a9b78":"markdown","bb3c0f17":"markdown","1ab8ca1d":"markdown","7b592c0b":"markdown","d45529de":"markdown"},"source":{"6e0cdc21":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math\nimport plotly.express as px\n\npd.set_option('display.max_colwidth', None)","f2689f2c":"header = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv', nrows=0).columns\nlist(header)","c7653923":"cols = ['country', 'date', 'total_vaccinations', 'daily_vaccinations', 'total_vaccinations_per_hundred',\n        'people_vaccinated_per_hundred', 'people_fully_vaccinated_per_hundred', 'vaccines']\n\ndata = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv', usecols=cols)\ndata","e4d72dc2":"data.info()","f795aad2":"pd.DataFrame(data['vaccines'].value_counts())","968cf593":"data = data.fillna(0)\ndata","e4394ff0":"subdata = data[['country', 'date', 'daily_vaccinations', 'vaccines']]\naveraged_data = []\n\nfor row in subdata.itertuples():\n    vaccines = row.vaccines.split(',')\n    number = len(vaccines)\n    count = 0\n    total_vaccinations = row.daily_vaccinations\n    average = float(math.ceil(row.daily_vaccinations \/ number))\n    remain = row.daily_vaccinations - average * (number - 1)\n    \n    for vac in vaccines:\n        if (vac != vaccines[number - 1]):\n            averaged_data.append((row.country, row.date, average, vac.strip()))\n        else:\n            averaged_data.append((row.country, row.date, remain, vac.strip()))\n        \naveraged_data = pd.DataFrame(averaged_data, columns = ['country', 'date', 'daily_vaccinations', 'vaccines'])\naveraged_data","1d13e3f3":"vaccine_data  = averaged_data.groupby('vaccines')['daily_vaccinations'].sum()\nvaccine_data = pd.DataFrame(vaccine_data)\nvaccine_data = vaccine_data.sort_values(ascending=False, by='daily_vaccinations')\n\nnumber_list = []\nname_list = []\nfor name in vaccine_data.index:\n    countries = averaged_data[averaged_data['country'].notnull() & (averaged_data['vaccines'] == name)]['country'].unique()\n    name_list.append(', '.join(countries))\n    number_list.append(countries.size)\n    \nvaccine_data['total_countries'] = number_list\nvaccine_data['countries'] = name_list\nvaccine_data","fbb32150":"fig = px.bar(x=vaccine_data.index, y=vaccine_data['daily_vaccinations'],\n             color=vaccine_data.index,\n             title='How Many Vaccinations With a Certain Vaccine',\n             labels={\"x\": \"Vaccine\", \"y\": \"Number of Vaccinations\"},\n             color_discrete_sequence=px.colors.sequential.Electric)\nfig.show()","c677e743":"fig = px.bar(x=vaccine_data.index, y=vaccine_data['total_countries'],\n             color=vaccine_data.index,\n             title='How Many Countries With a certain Vaccine',\n             labels={\"x\": \"Vaccine\", \"y\": \"Number of Countries\"},\n             color_discrete_sequence=px.colors.sequential.Electric)\nfig.show()","c1e4b613":"dates = averaged_data.date.unique()\nvaccines = vaccine_data.index\nvaccine_daily_data = pd.DataFrame(index = dates, columns = vaccines)\nvaccine_daily_data = vaccine_daily_data.sort_index()\n\nfor date in dates:\n    daily_data  = averaged_data[averaged_data['date'] == date].groupby('vaccines')['daily_vaccinations'].sum()\n    vaccine_daily_data.loc[date] = daily_data","13db138c":"fig = px.line(vaccine_daily_data,\n              x=vaccine_daily_data.index, y=vaccine_daily_data.columns,\n              title='Daily Vaccinations Trend - Against Each Vaccine')\n\nfig.update_layout(xaxis_title='Date', yaxis_title='Number of Daily Vaccinations')\nfig.show()","4b3f2d7f":"vaccine_cumulative_data = vaccine_daily_data\ndates = np.sort(dates)\n\nfor i in range(len(dates)):\n    if (i > 0):\n        vaccine_cumulative_data.loc[dates[i]] = vaccine_cumulative_data.loc[dates[i - 1]].add(vaccine_daily_data.loc[dates[i]], fill_value = 0)","fa77ed17":"fig = px.line(vaccine_cumulative_data,\n              x=vaccine_cumulative_data.index, y=vaccine_daily_data.columns,\n              title='Cumulative Vaccinations Trend - Against Each Vaccine')\n\nfig.update_layout(xaxis_title='Date', yaxis_title='Number of Cumulative Vaccinations')\nfig.show()","d84a45e1":"top = 30\n\nvaccinations_data = data.groupby('country')['total_vaccinations'].max()\nvaccinations_data = pd.DataFrame(vaccinations_data)\nvaccinations_data = vaccinations_data.sort_values(ascending=False, by='total_vaccinations').iloc[:top]","d87750f6":"fig = px.bar(x=vaccinations_data.index, y=vaccinations_data['total_vaccinations'],\n             color=vaccinations_data.index,\n             title=f'Top {top} Countries - Total Vaccinations',\n             labels={\"x\": \"Country\", \"y\": \"Number of Vaccinations\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","d9122e73":"vaccinations_ratio_data = data.groupby('country')['total_vaccinations_per_hundred'].max()\nvaccinations_ratio_data = pd.DataFrame(vaccinations_ratio_data)\nvaccinations_ratio_data = vaccinations_ratio_data.sort_values(ascending=False, by='total_vaccinations_per_hundred').iloc[:top]\n\nfig = px.bar(x=vaccinations_ratio_data.index, y=vaccinations_ratio_data['total_vaccinations_per_hundred'],\n             color=vaccinations_ratio_data.index,\n             title=f'Top {top} Countries - Vaccinations Per Hundred',\n             labels={\"x\": \"Country\", \"y\": \"Vaccinations Per Hundred\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","a5b17ac2":"vaccinated_ratio_data = data.groupby('country')['people_vaccinated_per_hundred'].max()\nvaccinated_ratio_data = pd.DataFrame(vaccinated_ratio_data)\nvaccinated_ratio_data = vaccinated_ratio_data.sort_values(ascending=False, by='people_vaccinated_per_hundred').iloc[:top]\n\nfig = px.bar(x=vaccinated_ratio_data.index, y=vaccinated_ratio_data['people_vaccinated_per_hundred'],\n             color=vaccinated_ratio_data.index,\n             title=f'Top {top} Countries - Peple Vaccinated Per Hundred',\n             labels={\"x\": \"Country\", \"y\": \"Peple Vaccinated Per Hundred\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","21eba33a":"fully_vaccinated_ratio_data = data.groupby('country')['people_fully_vaccinated_per_hundred'].max()\nfully_vaccinated_ratio_data = pd.DataFrame(fully_vaccinated_ratio_data)\nfully_vaccinated_ratio_data = fully_vaccinated_ratio_data.sort_values(ascending=False, by='people_fully_vaccinated_per_hundred').iloc[:top]\n\nfig = px.bar(x=fully_vaccinated_ratio_data.index, y=fully_vaccinated_ratio_data['people_fully_vaccinated_per_hundred'],\n             color=fully_vaccinated_ratio_data.index,\n             title=f'Top {top} Countries - People Fully Vaccinated Per Hundred',\n             labels={\"x\": \"Country\", \"y\": \"People Fully Vaccinated Per Hundred\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","731d39f7":"## Visualization","2bc5994d":"## Explore the dataset","61d08bdd":"![](https:\/\/1gew6o3qn6vx9kp3s42ge0y1-wpengine.netdna-ssl.com\/wp-content\/uploads\/prod\/2020\/12\/GettyImages-1248797862-scaled.jpg)","4eaf6c2d":"Only load some columns from the original csv. The below table shows how a record looks like.","958e821c":"Figure out the total vaccinations for each vaccine from the daily vaccinations data. Moreover, how many countries and what countries are using a certain vaccine can be figured out based on the averaged data. \n\n","1d8467aa":"## Process vaccines data","970a9b78":"The data information shows there are many '*NaN*' in the dataset.","bb3c0f17":"What Columns dose the dataset include","1ab8ca1d":"The '*vaccines*' column have many values combinated with multiple vaccines seperated by comma.","7b592c0b":"Firstly, let's replace all '*NaN*' with 0.","d45529de":"Prepare a small dataset with only 4 columns as: '*country*', '*date*', '*daily_vaccinations*' and '*vaccines*'.\n\nFor each row of this dataset, if the '*vaccines*' field includes multiple vaccines, then create new row for each vaccine, and assign an average '*daily_vaccinations*' value to the '*daily_vaccinations*' field of a new row. At last, put the new rows to the new data set - '*averaged_data*'.\n\n**Note**: This average method is not very reasonable and just for showing the statistics of each single vaccine."}}