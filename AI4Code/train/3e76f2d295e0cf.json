{"cell_type":{"6af541dd":"code","720e719d":"code","a9fea9dc":"code","0a2b6402":"code","8e20fdd3":"code","dbb4b30d":"code","fba57130":"code","9e19cb06":"code","dd365f9c":"code","b4d0bfbd":"code","ecff988d":"code","788217a3":"code","80e13adf":"code","9ccdae8d":"code","800a726a":"code","58739ad1":"code","a82e76d0":"code","4b23054a":"code","c55b4f80":"code","7959403c":"code","b75e0597":"code","2440d545":"code","6a7de382":"code","da72a049":"code","0722dc7c":"code","a5d47924":"code","9e694886":"code","f759baa2":"code","15d08147":"code","714504ee":"code","942294b3":"code","11135790":"code","cca0db16":"code","3003500a":"code","d9de103e":"code","18337e74":"code","abb65e82":"code","443a7361":"code","e7a0e056":"code","06f72c83":"code","e859e20a":"code","0effacac":"code","fc865dc3":"code","f4b141c1":"code","41886765":"code","f9e12126":"code","9e5c9b84":"code","81a9555c":"code","1c630b58":"code","85f2f0ee":"code","80f109cc":"code","1fa288a1":"code","42da8f6c":"code","cbe800c5":"code","fc0d0632":"code","d600a0df":"code","a9c077ab":"markdown","716ae6aa":"markdown","2762e583":"markdown","bb924dfc":"markdown","869f8957":"markdown","fd477716":"markdown","992c8e71":"markdown"},"source":{"6af541dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","720e719d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')","a9fea9dc":"df=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv\")","0a2b6402":"df.head()","8e20fdd3":"# for i in range(1,100):\nsns.kdeplot(df.loc[:,df.columns[1]])","dbb4b30d":"fig, axes=plt.subplots(10,10,figsize=(40,35))\nj=0\ni=0\nfor k in range(1,100):\n    if j==10:\n        i+=1\n        j=0\n    sns.kdeplot(df.loc[:,df.columns[k]],ax=axes[i,j])\n    plt.gca().set_title(f\"{df.columns[k]}\")\n    j+=1\n    ","fba57130":"fig.savefig('myimage.svg', format='svg', dpi=1200)","9e19cb06":"fig_out, axes_out=plt.subplots(10,10,figsize=(40,35))\nj=0\ni=0\nfor k in range(1,100):\n    if j==10:\n        i+=1\n        j=0\n    sns.boxplot(y=df.columns[k],x=df.columns[-1],data=df,ax=axes_out[i,j])\n    #sns.kdeplot(df.loc[:,df.columns[k]],ax=axes[i,j])\n    plt.gca().set_title(f\"{df.columns[k]}\")\n    j+=1\n\n","dd365f9c":"fig_out.savefig('outlier.svg', format='svg', dpi=1200)","b4d0bfbd":"from sklearn.preprocessing import RobustScaler","ecff988d":"X_train=df.loc[:,df.columns[1:-1]].values\ny_train=df.iloc[:,-1].values","788217a3":"scaler=RobustScaler()\nX_train=scaler.fit_transform(X_train)","80e13adf":"df_train=pd.DataFrame(X_train)","9ccdae8d":"df_train.columns=df.columns[1:-1]","800a726a":"df_train.reset_index(inplace=True)","58739ad1":"df_train.columns=df.columns[:-1]","a82e76d0":"df_train.iloc[:,0]+=1","4b23054a":"df_train.set_index(\"id\",inplace=True)","c55b4f80":"df_train.head()","7959403c":"df_train_full=pd.concat([df_train,pd.DataFrame(y_train)],axis=1)","b75e0597":"df_train_full.drop(0,inplace=True)","2440d545":"df_train_full.columns=df.columns[1:]","6a7de382":"df_train_full.reset_index(inplace=True)","da72a049":"df_train_full.columns=df.columns","0722dc7c":"df_train_full.id-=1","a5d47924":"df_train_full.head()","9e694886":"df_train_full.to_csv(\"new_train.csv\",index=False)","f759baa2":"df_test=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")","15d08147":"df_test.head()","714504ee":"df_test.shape","942294b3":"df_test.columns[1:]","11135790":"X_test=df_test.loc[:,df_test.columns[1:]].values","cca0db16":"X_test[:,:].shape","3003500a":"X_test=scaler.transform(X_test)","d9de103e":"test=pd.DataFrame(X_test)","18337e74":"test.reset_index(inplace=True)","abb65e82":"test.head()","443a7361":"test.columns=df_test.columns","e7a0e056":"test.id+=600000","06f72c83":"test.head()","e859e20a":"test.head()","0effacac":"test.to_csv(\"new_test.csv\",index=False)","fc865dc3":"import h2o\nprint(h2o.__version__)\nfrom h2o.automl import H2OAutoML\n\nh2o.init(max_mem_size='11G')","f4b141c1":"train = h2o.import_file(\".\/new_train.csv\")\n","41886765":"test = h2o.import_file(\".\/new_test.csv\")","f9e12126":"train.head()","9e5c9b84":"print(f'Size of training set: {train.shape[0]} rows and {train.shape[1]} columns')","81a9555c":"x = train.columns\ny = 'target'\nx.remove(y)","1c630b58":"aml = H2OAutoML(max_runtime_secs = 3500*2, seed = 1, project_name = \"lb_frame\")\naml.train(x = x, y = y, training_frame = train)","85f2f0ee":"# import time \n# while True:\n#     print(\"5\")\n#     time.sleep(60)\n","80f109cc":"lb = aml.leaderboard\nlb.head()  ","1fa288a1":"aml.leader","42da8f6c":"pred = aml.predict(test)\npred.head()","cbe800c5":"pred.shape","fc0d0632":"sample_submission = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv')\nsample_submission.shape","d600a0df":"sample_submission['target'] = pred.as_data_frame().values\nsample_submission.to_csv('h2o_automl_submission_4.csv', index=False)","a9c077ab":"# As the Data contains outliers, so using RobusScaler","716ae6aa":"# Modeling using AutoML","2762e583":"# Checking for skeqness in data","bb924dfc":"## Creating new Data for AutoML to ML to work on","869f8957":"# Preprocessing Data","fd477716":"# Looking for Outliers","992c8e71":"# Reading the Data"}}