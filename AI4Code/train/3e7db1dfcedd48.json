{"cell_type":{"eb0397bd":"code","367ca7b5":"code","8060a8b2":"code","864b14e1":"code","cfdfa7c5":"code","dc9edf3b":"code","0174f836":"code","d8943f6c":"code","79a98f58":"code","03e4700b":"code","b53574d1":"code","aa953d32":"code","3d01e4a5":"code","ede0af1e":"code","80d4767b":"code","acf230cf":"code","c42f02a6":"code","e1e213ee":"code","ff4ebbf5":"code","3a42311c":"code","303576ea":"code","0b40bfac":"code","c2528de4":"code","6f612fd9":"code","97664f49":"code","b5c0f108":"code","2300b6b9":"code","11c1047f":"code","0fd15654":"code","401706e9":"code","5fe57552":"code","f6af2301":"code","a41b5f32":"code","ebe86593":"code","4273375f":"code","a5d9bb15":"markdown","32b310d6":"markdown","cb9a13c6":"markdown","a68d5fd2":"markdown","47adf62c":"markdown","c2ddb890":"markdown","f84c029d":"markdown","646d3d11":"markdown","b9d07cf5":"markdown","8060e38d":"markdown","e1391813":"markdown","50d38b6c":"markdown","d92314f1":"markdown","f3893aa8":"markdown","a5729e97":"markdown","a7cce3c1":"markdown","c811567c":"markdown","784e4d5a":"markdown","d4844257":"markdown","90728019":"markdown","6f1eefd2":"markdown","01d41a58":"markdown","6cb5fc32":"markdown","2c6c2371":"markdown","237e10c2":"markdown","d1b802fc":"markdown","ffb10e8d":"markdown","63c5ae9d":"markdown","74b0358b":"markdown","a54f1c0c":"markdown","fc29cddd":"markdown","391ba3ef":"markdown","0c0427b4":"markdown","e7902c12":"markdown","a8332197":"markdown","659bcf58":"markdown","c247d925":"markdown","457673bd":"markdown","d0676ae9":"markdown","59ca1180":"markdown"},"source":{"eb0397bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","367ca7b5":"# import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\n\n# classification models\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nimport xgboost\n\n# metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import roc_auc_score\n\n\n# display options\npd.set_option(\"display.max_rows\", None)\npd.set_option(\"display.max_columns\", None)","8060a8b2":"BASE_PATH='..\/input\/among-us-gameplay\/'","864b14e1":"player_record=pd.read_csv(os.path.join(BASE_PATH, 'player_record.csv'))\ncrewmate_voting=pd.read_csv(os.path.join(BASE_PATH, 'crewmate_voting.csv'))\nplayer_analysis=pd.read_csv(os.path.join(BASE_PATH, 'player_analysis.csv'))\ngame_feed=pd.read_csv(os.path.join(BASE_PATH, 'game_feed.csv'))","cfdfa7c5":"player_record.head()","dc9edf3b":"crewmate_voting.head()","0174f836":"player_analysis.head()","d8943f6c":"game_feed.head()","79a98f58":"# filtering columns\n\n# we can remove the crew columns from here since they don't seem to hold much information concerning an impostor's behaviour\nplayer_record_cols=[i for i in player_record.columns if ('crew' in i.lower() and 'death' not in i.lower())]\nplayer_record_cols2=['Impostor_Games', 'Killed_On_Day', 'Deaths_Murdered', 'Deaths_Total', \n                     'Deaths_Voted_Off_As_Crew', 'Total_Bodies_Found', 'Times_Found_As_Body', \n                     'Killed_On_Day', 'Total_Wins', 'Total_Losses', 'Deaths_Total', 'Impostor_Losses']\nplayer_record_cols=player_record_cols+player_record_cols2\nplayer_record.drop(columns=player_record_cols, inplace=True)\n\nplayer_analysis_cols=['Index', 'Total_Games', 'Crew_Games', 'Combined_Win_Percentage', 'Voted_Off_As_Crew', \n                      'Voted_Off_In_Total', 'Crew_Win_Percentage', 'Team_Reports_Per_Life', 'Impostor_Deaths_Per_Life',\n                      'Crew_Deaths_Per_Life', 'Crew_Voted_Off_Per_Life', 'Crew_Death_On_Day_One', 'Impostor_Win_Percentage',\n                      'Crew_Bondies_Found_Per_Life', 'Crew_Voting_Accuracy_Per_Life', 'Overall_Skill',\n                      'Crew_Impostor_Win_Rate_Delta', 'Impostor_Rate']\nplayer_analysis.drop(columns=player_analysis_cols, inplace=True)\n\n\n# removing some columns that seem to hold much information regarding an impostor's wins\ngame_feed_cols=['Concat1', 'Map', 'Outcome', 'Game', 'Event', 'Player_Team',\n                'Concat', 'Game_Feed', 'Getting_Voted_Off', 'Getting_Killed', \n                'Vote_ID', 'Votes_Off_Code', 'Game_Player_That_Died', 'Dying_Feed',\n                'Killing_Feed', 'Finding_Bodies_Feed', 'Body_Found_Feed', 'Meeting_Called_Feed',\n                'First_Kill_Feed', 'Self_Report_Code', 'Self_Report_Feed', 'Voted_Off_As_Crew_Feed',\n                'Body_Skipped_Feed', 'Day_1_Vote', 'Crew_Alive', 'Day', 'Impostors_Alive',\n    'Score', 'Crew_1', 'Is_Crew_1_Alive_1', 'Vote1', 'Action',\n       'Crew_2', 'Is_Crew_1_Alive_2', 'Vote2', 'Crew_3', 'Is_Crew_3_Alive',\n       'Vote3', 'Crew_4', 'Is_Crew_4_Alive?', 'Vote4', 'Crew_5',\n       'Is_Crew_5_alive?', 'Vote5', 'Crew_6', 'Is_Crew_6_Alive?', 'Vote6',\n       'Crew_7', 'Is_Crew_7_Alive?', 'Vote7', 'Crew_8', 'Is_Crew_8_Alive?',\n       'Vote8']\ngame_feed.drop(columns=game_feed_cols, inplace=True)","03e4700b":"combined_df=player_record.merge(player_analysis, on='Players', how='left') \\\n.merge(game_feed, left_on='Players', right_on='Player').drop(columns=['Player', 'Role'])\n\ncombined_df.head(10)","b53574d1":"# let's filter down to impostor roles only\ncombined_df['Role1']=combined_df['Role1'].fillna('unknown')\ncombined_df['Role1']=combined_df['Role1'].apply(lambda x: x.replace(\"(\", \"\").replace(\")\", \"\")).str.lower()\ncombined_df=combined_df[combined_df['Role1']=='impostor']","aa953d32":"# let's drop duplicates\ncombined_df=combined_df.drop_duplicates()","3d01e4a5":"combined_df.head()","ede0af1e":"combined_df.isnull().sum()","80d4767b":"combined_df.fillna(0, inplace=True)","acf230cf":"combined_df['KDR_above_average']=combined_df['KDR'].apply(lambda x: 1 if x>combined_df['KDR'].mean() else 0)","c42f02a6":"combined_df.drop(columns=['Players', 'Role1', 'KDR'], inplace=True)\n\nX=combined_df.drop(columns=['KDR_above_average'])\ny=combined_df['KDR_above_average']\n\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","e1e213ee":"dt=DecisionTreeClassifier(random_state=42)\nsvc=SVC(random_state=42)\nknn=KNeighborsClassifier()\nrf=RandomForestClassifier(random_state=42)\ngb=GradientBoostingClassifier(random_state=42)\nxb=xgboost.XGBClassifier()\nmodels=[('Decision Tree', dt), \n        ('SVC', svc), ('KNN', knn), \n        ('Random Forest', rf), ('Gradient Boosting', gb), \n        ('Xgboost',xb)]\n\ndef model_testing(models):\n    model_names=[]\n    accuracy=[]\n    for name, classifier in models:\n        model_names.append(name)\n        classifier.fit(x_train, y_train)\n        preds=classifier.predict(x_test)\n        accuracy.append(accuracy_score(y_test, preds))\n        \n    model_score_df=pd.DataFrame(data={'model':model_names, \n                                      'accuracy':accuracy}).sort_values(by=['accuracy'], ascending=False)\n    return model_score_df\n\nmodel_testing(models)","ff4ebbf5":"def get_feature_importance_df(models):\n    df=pd.DataFrame(X.columns).set_index(0)\n    df_temp=[]\n    for name, model in models:\n        df_temp=pd.DataFrame(model.feature_importances_, index=X.columns).rename(columns={0:name})\n        df=df.merge(df_temp, left_index=True, right_index=True)\n    return df\n\ntop3_models=[('Decision Tree', dt), ('Gradient Boosting', gb), ('Random Forest', rf)]\nget_feature_importance_df(top3_models)","3a42311c":"feature_imp_df=get_feature_importance_df(top3_models)\ntop_10_features=feature_imp_df.mean(axis=1).sort_values(ascending=False).head(10)\ntop_10_features","303576ea":"top_10_features.keys()","0b40bfac":"good_impostor=combined_df[combined_df['KDR_above_average']==1]","c2528de4":"good_impostor['Kills'].describe()","6f612fd9":"good_impostor['Voted_Off_As_Impostor'].describe()","97664f49":"good_impostor['Impostor_Kills_Per_Life'].describe()","b5c0f108":"good_impostor['Deaths_Voted_off_as_Impostor'].describe()","2300b6b9":"combined_df[combined_df['KDR_above_average']==0]['Deaths_Voted_off_as_Impostor'].describe()","11c1047f":"good_impostor['Impostor_Aggression'].describe()","0fd15654":"good_impostor['Impostor_Games'].describe()","401706e9":"combined_df[combined_df['KDR_above_average']==0]['Impostor_Games'].describe()","5fe57552":"good_impostor['Impostor_Voted_Off_On_Day_One'].describe()","f6af2301":"good_impostor['Impostor_Wins_Kills'].describe()","a41b5f32":"good_impostor['Voting_Aggression'].describe()","ebe86593":"good_impostor['Times_Killed_Day_One'].describe()","4273375f":"combined_df[combined_df['KDR_above_average']==0]['Times_Killed_Day_One'].describe()","a5d9bb15":"## 2. Voted_Off_As_Impostor","32b310d6":"## 1. Kills","cb9a13c6":"## 4. Deaths_Voted_off_as_Impostor","a68d5fd2":"So a good impostor is voted off as impostor just once.","47adf62c":"## 8. Impostor_Wins_Kills","c2ddb890":"## 10. Times_Killed_Day_One","f84c029d":"So a good impostor has a higher aggression where they kill more than 2 crewmates on average compared to a poor impostor. ","646d3d11":"This means that a good impostor has an average of atleast 32 kills and a minimum of 3 kills (this is assumed to be throughout a life).","b9d07cf5":"Interesting, so a good impostor has died more than 9 times on average. Let's compare it with a poor impostor.","8060e38d":"A good impostor has more than 5 wins by kills on average. ","e1391813":"This is a rough interpretation based on what I could gather from the data. Please leave a comment and suggest any new and interesting finds, this will help improve on the analysis. Thanks. ","50d38b6c":"## 3. Impostor_Kills_Per_Life","d92314f1":"A good impostor impostor kills more than 2 crewmates on average.","f3893aa8":"The average is almost 0, which means that they are elusive enough to almost never be voted.","a5729e97":"Please Note: A lot of the columns I have droppped off because I feel that they will not add much value. ","a7cce3c1":"# Data Modelling","c811567c":"We can filter the dataframes to columns concerning impostor related features. These are features important to understand what a player may have been upto when they were an impostor.","784e4d5a":"Let's get the average importance importance across all models and check the top 10 features.","d4844257":"# Interpreting the top 10 features","90728019":"I have decided not to use the `crewmate_voting` for now because I feel the aggregated features are already represented in the other dataframes.","6f1eefd2":"Let's take a look at the data","01d41a58":"Let's merge the remaining dataframes into a combined dataframe","6cb5fc32":"A poor impostor doesn't seem to have that many deaths but it may be that the impostor has learnt from the number of deaths.","2c6c2371":"Alright, now that we have all the columns that we need. Let's start cleaning up the data.","237e10c2":"So a good impostor has more than 14 plays as an impostor on average. Let's see how it holds with a poor impostor.","d1b802fc":"Before this though, I want to get a target variable. The best impostor will have a good Kill to Death Ratio (KDR), so I will call this my target variable. However a good impostor must have a KDR above average so we could check if this the case per player.","ffb10e8d":"Let's pick the top 3 highest performing models and see what the top 10 important features are.","63c5ae9d":"## 6. Impostor_Games","74b0358b":"## Data Pre-processing","a54f1c0c":"\nThis makes sense because a good impostor plays more games and learns the dynamics required to make several successful.","fc29cddd":"## 9. Voting_Aggression","391ba3ef":"For the next step, I will fit a bunch of models and try to obtain the top 10 features of each model. The idea is to see what features are considered for an impostor.","0c0427b4":"A good impostor is about 50% more likely to vote someone on average.","e7902c12":"## 5. Impostor_Aggression","a8332197":"For the time-being let's fill all these values with zero since they are all numeric columns.","659bcf58":"So we have all the variables which are marked as important by the models, let's take a look at how each variable determines a good impostor.","c247d925":"## 7. Impostor_Voted_Off_On_Day_One","457673bd":"Now let's see how it compares with a poor impostor.","d0676ae9":"# Reading Data","59ca1180":"Now it makes sense that a good impostor has been killed more times on average because they have played more games in the first place."}}