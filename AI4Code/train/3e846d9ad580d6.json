{"cell_type":{"8107a3a5":"code","9a290d79":"code","dd15b556":"code","81f1aa60":"code","3db70063":"code","d87ac155":"code","f63a5aa0":"code","60503bcf":"code","aaf74ece":"markdown","2ae636cc":"markdown","8720fedf":"markdown"},"source":{"8107a3a5":"import numpy as np\nimport pandas as pd\ndf = pd.read_csv('..\/input\/mtcars\/mtcars.csv')\ndf.head()","9a290d79":"df.describe()","dd15b556":"df.isna().sum()","81f1aa60":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ndf['qsec'] = scaler.fit_transform(df[['qsec']])","3db70063":"len(df[df['qsec']>0.5])","d87ac155":"df = pd.read_csv('..\/input\/mtcars\/mtcars.csv')\n\n#minmax\nminmax = (df['qsec']-min(df['qsec']))\/(max(df['qsec'])-min(df['qsec']))\nsum(minmax>0.5)","f63a5aa0":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\nimport pandas as pd\nfrom sklearn.preprocessing import minmax_scale\n\n# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\ndata = pd.read_csv('..\/input\/mtcars\/mtcars.csv')\nprint('minmax \ubcc0\ud658 \uc804: \\n',data['qsec'].head())\n\n# min-max scale\ndata['qsec'] = minmax_scale(data['qsec'])\nprint('minmax \ubcc0\ud658 \ud6c4: \\n',data['qsec'].head())\n\n# 0.5\ubcf4\ub2e4 \ud070 \uac12 \/ \ubc29\ubc951,2 \uc911\uc5d0 \uc120\ud0dd\nprint(sum(data['qsec'] > 0.5)) #\ubc29\ubc951 (True\ub97c \ub354 \ud568)\nprint(len(data[data['qsec']>0.5])) #\ubc29\ubc952 (\ub370\uc774\ud130 \uc218\ub97c \uad6c\ud568)","60503bcf":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\nimport pandas as pd\n\n# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\ndata = pd.read_csv('..\/input\/mtcars\/mtcars.csv')\nprint('minmax \ubcc0\ud658 \uc804: \\n',data['qsec'].head())\n\n# min-max scale\ndef minmax(data):\n    data = (data - min(data)) \/ (max(data) - min(data))\n    return data\n\ndata['qsec'] = minmax(data['qsec'])\nprint('minmax \ubcc0\ud658 \ud6c4: \\n',data['qsec'].head())\n\n# 0.5\ubcf4\ub2e4 \ud070 \uac12 (row \uc218 \ud30c\uc545)\nprint(len(data[data['qsec']>0.5]))","aaf74ece":"### \ubc29\ubc951","2ae636cc":"### \ubc29\ubc952","8720fedf":"# \uc791\uc5c5\ud6151 \uc608\uc2dc\ubb38\uc81c\n\uc790\ub3d9\ucc28 \ub370\uc774\ud130 \uc14b\uc5d0\uc11c \ud2b9\uc815 \uceec\ub7fc\uc744 Min-Max Scale\ub85c \ubcc0\ud658 \ud6c4 0.5\ubcf4\ub2e4 \ud070 \uac12\uc744 \uac00\uc9c0\ub294 \ub808\ucf54\ub4dc(row) \uc218\ub97c \ubb3b\ub294 \ubb38\uc81c\uc785\ub2c8\ub2e4.\n- data \ucd9c\ucc98: https:\/\/www.kaggle.com\/ruiromanini\/mtcars\n- data \ucd94\uac00\ubc29\ubc95 : \uc6b0\uce21 \uba54\ub274 -> +Add data -> mtcar(ruiromanini) ADD\n- \uc601\uc0c1 \ub9c1\ud06c : https:\/\/youtu.be\/E86QFVXPm5Q"}}