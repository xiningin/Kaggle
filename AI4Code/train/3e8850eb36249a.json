{"cell_type":{"216937a4":"code","687cda5a":"code","405f296f":"code","0c929ecd":"code","0b89e823":"code","5300213e":"code","f622c8d5":"code","e23035dc":"code","cccf2b53":"code","2e248a3e":"code","34f9bd74":"code","380dc410":"code","2d1402a1":"code","9aaac275":"code","6f7f34c7":"markdown","3e4189c4":"markdown","43e51d51":"markdown","05fc7159":"markdown","8fdf8ec4":"markdown","1e2d1d22":"markdown","3c4e2616":"markdown","658b13ae":"markdown","f7992c45":"markdown","568d85f6":"markdown","82ddaf35":"markdown","b9454880":"markdown","28d67c22":"markdown","250bb321":"markdown"},"source":{"216937a4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","687cda5a":"train_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data=pd.read_csv('..\/input\/titanic\/test.csv')","405f296f":"#viewing the top columns of the train set\ntrain_data.head()\n","0c929ecd":"#Viewing the top columns of the test set\ntest_data.head()","0b89e823":"train_data.describe()","5300213e":"train_data.info()","f622c8d5":"print((train_data.isna().sum()*100\/len(train_data)).sort_values(ascending=False))","e23035dc":"features=['Sex','Pclass','Embarked','SibSp','Parch']\ndf=pd.DataFrame()\nfor i in features:\n    df=train_data[[i,'Survived']].groupby([i]).count().rename(columns={'Survived':'Count'})\n    df['Survived']=train_data[[i,'Survived']].groupby([i]).sum()\n    df['Percent']=df['Survived']\/df['Count']\n    print(df)\n    print('')\n","cccf2b53":"fig,axes=plt.subplots(nrows=1,ncols=3,figsize=(14,4))\nax=sns.barplot(x='Pclass',y='Survived',data=train_data,ax=axes[0])\nax=sns.barplot(x='Embarked',y='Survived',data=train_data,ax=axes[1])\nax=sns.barplot(x='Sex',y='Survived',data=train_data,ax=axes[2])","2e248a3e":"g=sns.FacetGrid(train_data,col='Embarked')\ng.map_dataframe(sns.barplot,'Pclass','Survived','Sex',palette='deep')\ng.add_legend()","34f9bd74":"ax=sns.displot(x='Age',hue='Survived',data=train_data)","380dc410":"\nax=sns.displot(x='Age',hue='Survived',data=train_data[train_data['Sex']=='female'],label='Female')\n\nax=sns.displot(x='Age',hue='Survived',data=train_data[train_data['Sex']=='male'],label='Male')\n","2d1402a1":"datas=[train_data,test_data]\nfor data in datas:\n    \n    data.loc[(data['Age']<17),'Age']=0\n    \n    data.loc[(data['Age']>=17) & (data['Age']<25),'Age']=1\n    data.loc[(data['Age']>=25) & (data['Age']<36),'Age']=2\n    data.loc[(data['Age']>=36),'Age']=3\n    data.loc[(data['Age'].isna()==True),'Age']=4\n\n    data.loc[(data['Sex']=='female'),'Sex']=0\n    data.loc[(data['Sex']=='male'),'Sex']=1\n\n    data.loc[(data['Embarked']=='S'),'Embarked']=0\n    data.loc[(data['Embarked']=='C'),'Embarked']=1\n    data.loc[(data['Embarked']=='Q'),'Embarked']=2\n    data.loc[(data['Embarked'].isna()==True),'Embarked']=3\n\ntrain_data=train_data.drop(columns=['Name','Ticket','Fare','Cabin'])\ntest_data=test_data.drop(columns=['Name','Ticket','Fare','Cabin'])\ntest_data.head()","9aaac275":"from sklearn.ensemble import RandomForestClassifier\nfeatures=['Pclass','Sex','Embarked','SibSp','Parch','Age']\n\ny=train_data['Survived']\n\n\nX=train_data[features]\nX_test=test_data[features].fillna(0)\n\nmodel=RandomForestClassifier(n_estimators=100,max_depth=10,random_state=1)\nmodel.fit(X,y)\nY_pred =model.predict(X)\n\naccuracy = round(model.score(X, y) * 100, 2)\naccuracy\n#predictions=model.predict(X_test)\n\n#output=pd.DataFrame({'PassengerId':test_data.PassengerId,'Survived':predictions})\n#output.to_csv('submission.csv',index=False)\n\n","6f7f34c7":"Below is the graphics for visualizing the percent of passengers survived in each sub categories of Pclass, Embarked, and Sex.","3e4189c4":"The code below shows the distribution of Age and the distribution of survived passengers in each age range.","43e51d51":"The age distribution for male and female separately.","05fc7159":"Lets get the percent of null values in each of the features.","8fdf8ec4":"Now we will get our titanic dataset from Kaggle. You can either download directly using the Kaggle API or you can save the file in your local device first and import it into the notebook. Here, I am importing the files that were already downloaded in my local device.","1e2d1d22":"Using Random Forest Classifier, the accuracy in training set is 87.43","3c4e2616":"Using describe(), we can get the basic information about the data.","658b13ae":"Now lets check if we read the data successfully by printing the top columns from both the train and test set. ","f7992c45":"Lets get started by importing the necessary libraries needed to visualize the data. ","568d85f6":"The next code plots three bar plots which will show the relationship between features 'Survived', 'Embarked', 'Pclass', and 'Sex'. From figures, it is clear that the percentage of male passengers that survived the crash is higher if the Embarked was C than in S and Q.","82ddaf35":"We will use the following command to get the information about different features of the data. The information includes the columns' names, the data type in each column and count of null values in each columns. From the table below, it can be seen that there are 11 features or columns in the train set and the feature Cabin has the most null values.","b9454880":"The code below will find the total number of passengers in each subcategories of different features, the number of survived passengers and the percentage.\n","28d67c22":"More data processing can still be done and model can be trained using different classifiers to get better results in train and test set.","250bb321":"In the code below, I am modifying the data so that it become easier to train the model. Here, I am changing the age range into to 5 different range. I am also converting the Sex, Embarked values into numbers. The next things, I am doing is dropping the columns Name, Ticket, Fare, Cabin. We could convert the fare into different ranges like in Age but I am not doing that in this notebook. In both Age, and Embarked, I put the null values into separate category."}}