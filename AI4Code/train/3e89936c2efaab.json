{"cell_type":{"4bc4fe3d":"code","8689811b":"code","07a19d8f":"code","6265cf7f":"code","c2d795f9":"code","2245ba2b":"code","3603882a":"code","d267eb8c":"code","9c6117d4":"code","9ffc16b0":"code","0af35669":"code","0f184783":"code","aa717b4b":"code","0c917501":"code","c3091851":"code","e17a1680":"code","3f3f59d0":"code","d9b320cd":"code","e1637b37":"code","1f1b8b0a":"code","856f166c":"code","e0d87e52":"code","1b6821b3":"code","7f660fd2":"code","2a3e2689":"code","bf919aa7":"code","6a01240a":"code","59e5d9f9":"code","323ee236":"code","2464f5e5":"code","de9cf185":"code","43eb3a3d":"code","2420d91e":"code","bf8d1150":"code","37d0eeab":"code","effbc9b0":"code","cd8f4df7":"code","0e4c3f64":"code","5002c3ca":"code","a77d0570":"code","04ebc3b7":"code","65e62c57":"code","df72bccb":"code","5fd9a400":"code","091ba173":"code","bdf0242d":"code","eb736567":"code","5604e754":"code","3833bb74":"code","10895fc8":"code","617024af":"code","3dd0d63f":"code","c2400d07":"code","3ce126f5":"markdown","5d894672":"markdown","d1a8e068":"markdown","d6127ea3":"markdown","f9f2ce43":"markdown"},"source":{"4bc4fe3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8689811b":"df=pd.read_csv('\/kaggle\/input\/bigmart-sales-data\/Train.csv')\ndf.head(10)","07a19d8f":"df.columns","6265cf7f":"df.dtypes\n# fetures having \"object\" dtype\n# ['Item_Identifier','Item_Fat_Content','Item_Type','Outlet_Identifier','Outlet_Size,'Outlet_Location_Type','Outlet_Type']\n\n# remaining all are of float or int dtype","c2d795f9":"df['Item_Fat_Content'].unique()","2245ba2b":"df['Item_Fat_Content'].value_counts()\n\n\n# Low Fat    5089\n# Regular    2889\n# LF          316\n# reg         117\n# low fat     112","3603882a":"df['Item_Type'].unique()","d267eb8c":"df['Item_Type'].value_counts()","9c6117d4":"df['Outlet_Identifier'].value_counts()","9ffc16b0":"df['Outlet_Size'].value_counts()","0af35669":"df['Outlet_Location_Type'].value_counts()","0f184783":"df['Outlet_Type'].value_counts()","aa717b4b":"df.isna().sum()","0c917501":"df.shape","c3091851":"df.describe()","e17a1680":"df.info()","3f3f59d0":"import matplotlib.pyplot as plt\nimport seaborn as sns","d9b320cd":"df.head(2)","e1637b37":"f,axes=plt.subplots(1,2,figsize=[14,6])\nsns.distplot(df['Item_MRP'],ax=axes[0])\nsns.violinplot(df['Item_MRP'],ax=axes[1])\n","1f1b8b0a":"f,axes=plt.subplots(1,2,figsize=[14,6])\nsns.distplot(df['Item_Visibility'],ax=axes[0])\nsns.violinplot(df['Item_Visibility'],ax=axes[1])","856f166c":"f,axes=plt.subplots(1,2,figsize=[14,7])\nsns.countplot('Item_Fat_Content',data=df,ax=axes[0])\nchart=sns.countplot('Item_Type',data=df,ax=axes[1])\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45,horizontalalignment='right')","e0d87e52":"f,axes=plt.subplots(1,2,figsize=[15,6])\nchart=sns.countplot('Outlet_Establishment_Year',data=df,ax=axes[1])\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45,horizontalalignment='right')\n\nsns.countplot('Outlet_Location_Type',data=df,ax=axes[0])\n","1b6821b3":" df['Outlet_Location_Type'] ","7f660fd2":"df.drop(['Item_Weight','Outlet_Size'],axis=1,inplace=True)","2a3e2689":"df=pd.get_dummies(df,columns=['Item_Fat_Content','Item_Type','Outlet_Location_Type','Outlet_Type'],drop_first=True)","bf919aa7":"df.corr()","6a01240a":"df","59e5d9f9":"df.drop(['Item_Fat_Content_low fat','Item_Fat_Content_reg'],axis=1,inplace=True)","323ee236":"df.columns","2464f5e5":"df.drop([ 'Item_Type_Breads', 'Item_Type_Breakfast', 'Item_Type_Canned',\n       'Item_Type_Dairy',\n        'Item_Type_Hard Drinks',\n       'Item_Type_Health and Hygiene', 'Item_Type_Meat',\n       'Item_Type_Others', 'Item_Type_Seafood', \n       'Item_Type_Soft Drinks', 'Item_Type_Starchy Foods',],axis=1,inplace=True)","de9cf185":"df.columns","43eb3a3d":"df.corr()","2420d91e":"plt.figure(figsize=(16,10))\nsns.heatmap(df.corr(),annot=True)","bf8d1150":"df.drop(['Outlet_Type_Supermarket Type2','Item_Type_Frozen Foods','Item_Fat_Content_Low Fat','Item_Visibility','Outlet_Establishment_Year','Item_Identifier','Outlet_Identifier'],axis=1,inplace=True)","37d0eeab":"df.isna().sum()","effbc9b0":"df.columns","cd8f4df7":"X=df.drop('Item_Outlet_Sales',axis=1)\nX=X.values\nX.shape\n","0e4c3f64":"y=df['Item_Outlet_Sales']\ny.shape","5002c3ca":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)","a77d0570":"X_train.shape,y_train.shape","04ebc3b7":"X_test.shape,y_test.shape","65e62c57":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit_transform(X,y)","df72bccb":"import numpy as np\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\nrandom_classifier = RandomForestRegressor()\nparameters = { 'max_features':np.arange(4,7),'n_estimators':np.arange(50,150,7),'min_samples_leaf': [5,10,15]}\nrandom_grid = GridSearchCV(random_classifier, parameters, cv = 7)","5fd9a400":"random_grid.fit(X_train,y_train)","091ba173":"random_grid.best_params_","bdf0242d":"y_pred_test=random_grid.predict(X_test)","eb736567":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, y_pred_test)","5604e754":"print('RMSE:', np.sqrt(mean_squared_error(y_test, y_pred_test)))","3833bb74":"y_pred_train=random_grid.predict(X_train)\nmean_squared_error(y_train, y_pred_train)","10895fc8":"from sklearn.linear_model import LinearRegression","617024af":"reg=LinearRegression()\nreg.fit(X_train,y_train)","3dd0d63f":"y_pred=reg.predict(X_test)\nmean_squared_error(y_test, y_pred)","c2400d07":"print('RMSE:', np.sqrt(mean_squared_error(y_test, y_pred)))","3ce126f5":"# **EDA(Exploratory Data Analysis)**","5d894672":"drop these columns due to negligible corelation with target value","d1a8e068":"# Feature Scaling","d6127ea3":"drop these columns due to less contribution ","f9f2ce43":"drop 'Item_Fat_Content_low fat' and 'Item_Fat_Content_reg' because their value is very less "}}