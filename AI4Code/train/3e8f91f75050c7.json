{"cell_type":{"25679cdb":"code","1e5b6443":"code","5876b956":"code","3891fa12":"code","ad6cbe3a":"code","5d00ae2b":"code","b0fd7ca2":"code","7865fd91":"code","db1a8db4":"code","22cc0d78":"code","021807d7":"code","21599a28":"code","4c2eec02":"code","31c9c4f4":"code","c189eaef":"code","d8ec7896":"code","0b721ed3":"code","4669d581":"code","f3f822c1":"code","d1e32267":"code","9095e417":"code","08fe9c5c":"markdown","2bfb8e6e":"markdown","f51fff98":"markdown","df43c69c":"markdown","9c268228":"markdown","f9f9d72f":"markdown","9d71f9be":"markdown","418ff878":"markdown","895201bd":"markdown","cd46a8a3":"markdown","69450d5a":"markdown","1c8c9ecf":"markdown","4c59af90":"markdown","3b736b19":"markdown","7ec934d5":"markdown","f6924d00":"markdown","537a2ed0":"markdown","0dd7476c":"markdown","5e677644":"markdown","080366de":"markdown"},"source":{"25679cdb":"import warnings\nwarnings.filterwarnings('ignore', category=DeprecationWarning)\nwarnings.filterwarnings('ignore', category=FutureWarning)\n\nimport os\nimport re\nimport json\nimport glob\nfrom collections import defaultdict\nfrom textblob import TextBlob\nfrom functools import partial\n\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\n\nimport nltk\nimport spacy\nnlp = spacy.load('en_core_web_lg', disable=['parser', 'ner'])\nnlp.max_length = 4000000\nfrom nltk.probability import FreqDist\nfrom wordcloud import WordCloud, STOPWORDS\n\nfrom tqdm.autonotebook import tqdm\nimport string\n\n%matplotlib inline\n\nos.listdir('\/kaggle\/input\/coleridgeinitiative-show-us-the-data\/')","1e5b6443":"# reading csv files and train & test file paths\ntrain_df = pd.read_csv('..\/input\/coleridgeinitiative-show-us-the-data\/train.csv')\nsample_sub = pd.read_csv('..\/input\/coleridgeinitiative-show-us-the-data\/sample_submission.csv')\ntrain_files_path = '..\/input\/coleridgeinitiative-show-us-the-data\/train'\ntest_files_path = '..\/input\/coleridgeinitiative-show-us-the-data\/test'","5876b956":"train_df.head(6)","3891fa12":"train_df.info()","ad6cbe3a":"[print(f\"{col}:{len(train_df[col].unique())}\") for col in train_df.columns]   #finding unique values in each column","5d00ae2b":"def read_append_return(filename, train_files_path=train_files_path, output='text'):\n    \"\"\"\n    Function to read json file and then return the text data from them and append to the dataframe\n    \"\"\"\n    json_path = os.path.join(train_files_path, (filename+'.json'))\n    headings = []\n    contents = []\n    combined = []\n    with open(json_path, 'r') as f:\n        json_decode = json.load(f)\n        for data in json_decode:\n            headings.append(data.get('section_title'))\n            contents.append(data.get('text'))\n            combined.append(data.get('section_title'))\n            combined.append(data.get('text'))\n    \n    all_headings = ' '.join(headings)\n    all_contents = ' '.join(contents)\n    all_data = '. '.join(combined)\n    \n    if output == 'text':\n        return all_contents\n    elif output == 'head':\n        return all_headings\n    else:\n        return all_data","b0fd7ca2":"%%time\ntqdm.pandas()   #tqdm is used to show any code running with a progress bar. \ntrain_df['text'] = train_df['Id'].progress_apply(read_append_return)","7865fd91":"train_df.head()","db1a8db4":"%%time\ntqdm.pandas()\nsample_sub['text'] = sample_sub['Id'].progress_apply(partial(read_append_return, train_files_path=test_files_path))","22cc0d78":"def text_cleaning(text):\n    '''\n    Converts all text to lower case, Removes special charecters, emojis and multiple spaces\n    text - Sentence that needs to be cleaned\n    '''\n    text = ''.join([k for k in text if k not in string.punctuation])\n    text = re.sub('[^A-Za-z0-9]+', ' ', str(text).lower()).strip()\n#     text = re.sub('r[^\\w\\s]', ' ', str(text).lower()).strip()\n#     lem = nltk.stem.wordnet.WordNetLemmatizer()\n#     text = lem.lemmatize(text)\n#     text = re.sub(\"\/'+\/g\", ' ', text)\n    return text","021807d7":"%%time\ntqdm.pandas()\ntrain_df['text'] = train_df['text'].progress_apply(text_cleaning)","21599a28":"%%time\ntqdm.pandas()\nsample_sub['text'] = sample_sub['text'].progress_apply(text_cleaning)","4c2eec02":"# words =list( train_df['cleaned_label'].values)\n# stopwords=['ourselves', 'hers','the','of','and','in', 'between', 'yourself', 'but', 'again','of', 'there', 'about', 'once', 'during', 'out', 'very', 'having', 'with', 'they', 'own', 'an', 'be', 'some', 'for', 'do', 'its', 'yours', 'such', 'into', 'of', 'most', 'itself', 'other', 'off', 'is', 's', 'am', 'or', 'who', 'as', 'from', 'him', 'each', 'the', 'themselves', 'until', 'below', 'are', 'we', 'these', 'your', 'his', 'through', 'don', 'nor', 'me', 'were', 'her', 'more', 'himself', 'this', 'down', 'should', 'our', 'their', 'while', 'above', 'both', 'up', 'to', 'ours', 'had', 'she', 'all', 'no', 'when', 'at', 'any', 'before', 'them', 'same', 'and', 'been', 'have', 'in', 'will', 'on', 'does', 'yourselves', 'then', 'that', 'because', 'what', 'over', 'why', 'so', 'can', 'did', 'not', 'now', 'under', 'he', 'you', 'herself', 'has', 'just', 'where', 'too', 'only', 'myself', 'which', 'those', 'i', 'after', 'few', 'whom', 't', 'being', 'if', 'theirs', 'my', 'against', 'a', 'by', 'doing', 'it', 'how', 'further', 'was', 'here', 'than']\n# split_words=[]\n# for word in words:\n#     lo_w=[]\n#     list_of_words=str(word).split()\n#     for w in list_of_words:\n#         if w not in stopwords:\n#             lo_w.append(w)\n#     split_words.append(lo_w)\n# allwords = []\n# for wordlist in split_words:\n#     allwords += wordlist","31c9c4f4":"# mostcommon = FreqDist(allwords).most_common(100)\n# wordcloud = WordCloud(width=1600, height=800, background_color='white', stopwords=STOPWORDS).generate(str(mostcommon))\n# fig = plt.figure(figsize=(30,10), facecolor='white')\n# plt.imshow(wordcloud, interpolation=\"bilinear\")\n# plt.axis('off')\n# plt.title('Top 100 Most Common Words in cleaned_label', fontsize=50)\n# plt.tight_layout(pad=0)\n# plt.show()\n\n# mostcommon_small = FreqDist(allwords).most_common(25)\n# x, y = zip(*mostcommon_small)\n# plt.figure(figsize=(50,30))\n# plt.margins(0.02)\n# plt.bar(x, y)\n# plt.xlabel('Words', fontsize=50)\n# plt.ylabel('Frequency of Words', fontsize=50)\n# plt.yticks(fontsize=40)\n# plt.xticks(rotation=60, fontsize=40)\n# plt.tight_layout(pad=0)\n# plt.title('Freq of 25 Most Common Words in cleaned_label', fontsize=60)\n# plt.show()","c189eaef":"# def prepare_text(text, nlp=nlp):\n#     '''\n#     Returns the text after stop-word removal and lemmatization.\n#     text - Sentence to be processed\n#     nlp - Spacy NLP model\n#     '''\n#     doc = nlp(text)\n#     lemma_list = [token.lemma_ for token in doc if not token.is_stop]\n#     lemmatized_sentence = ' '.join(lemma_list)\n    \n#     return lemmatized_sentence","d8ec7896":"def clean_text(txt):\n    return re.sub('[^A-Za-z0-9]+', ' ', str(txt).lower()).strip()","0b721ed3":"# %%time\n# tqdm.pandas()\n# train_df['text'] = train_df['text'].progress_apply(prepare_text)","4669d581":"temp_1 = [x.lower() for x in train_df['dataset_label'].unique()]\ntemp_2 = [x.lower() for x in train_df['dataset_title'].unique()]\ntemp_3 = [x.lower() for x in train_df['cleaned_label'].unique()]\n\nexisting_labels = set(temp_1 + temp_2 + temp_3)\nid_list = []\nlables_list = []\nfor index, row in tqdm(sample_sub.iterrows(), total=len(sample_sub)):\n    sample_text = row['text']\n    row_id = row['Id']\n    temp_df = train_df[train_df['text'] == clean_text(sample_text)]\n    cleaned_labels = temp_df['cleaned_label'].to_list()\n    for known_label in existing_labels:\n        if known_label in sample_text.lower():\n            cleaned_labels.append(clean_text(known_label))\n    cleaned_labels = [clean_text(x) for x in cleaned_labels]\n    cleaned_labels = set(cleaned_labels)\n    lables_list.append('|'.join(cleaned_labels))\n    id_list.append(row_id)","f3f822c1":"submission = pd.DataFrame()\nsubmission['Id'] = id_list\nsubmission['PredictionString'] = lables_list","d1e32267":"# pd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\nsubmission","9095e417":"submission.to_csv('submission.csv', index=False)","08fe9c5c":"### 100 Most common words (cleaned_label) - WordCloud","2bfb8e6e":"## Hey There! \ud83d\ude4c\ud83c\udffb\ud83d\ude4b\ud83c\udffb\u200d\u2642\ufe0f\nIn this notebook basically we have to predict text for some strings by using nlp techniques.\n*** \n>The objective of the competition is to identify the mention of datasets within scientific publications.\n\nThis competition challenges data scientists to show how publicly funded data are used to serve science and society. Evidence through data is critical if government is to address the many threats facing society, including; pandemics, climate change, Alzheimer\u2019s disease, child hunger, increasing food production, maintaining biodiversity, and addressing many other challenges. Yet much of the information about data necessary to inform evidence and science is locked inside publications.\n\nThe Coleridge Initiative is a not-for-profit organization originally established at New York University. It was set up in order to inform the decision-making of the Commission on Evidence-based Policymaking and has since worked with dozens of government agencies at the federal, state, and local levels to ensure that data are more effectively used for public decision-making.\n\nIt achieves this goal by working with the agencies to create value for the taxpayer from the careful use of data by building new technologies to enable secure access to and sharing of confidential microdata and by training agency staff to acquire modern data skills.","f51fff98":"# <p style=\"font-family:newtimeroman; text-align:center; fontsize:150%\">Coleridge Initiative - Show US the Data<br>Discover how data is used for the public good<\/p>\n![CI_logo.jpg](attachment:CI_logo.jpg)","df43c69c":"<a id='5'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 50px;\">5. Baseline model and Submission\ud83d\udcdd<\/p>","9c268228":"<a id='0'><\/a>\n# <p style=\"background-color:blue; font-family:newtimeroman; font-size:100%; text-align:center; border-radius: 15px 50px; color:white;\">Please upvote the notebook as well if you find it useful and forking the notebook\ud83c\udfaf <\/p>","f9f9d72f":"We are provided with 4 main pieces of data:\n\n* `train.csv:` The CSV file containing all the metadata of the publications, such as their title and the dataset they utilize.\n* `train:` The directory containing the actual publications that are referenced in train.csvin JSON format.\n* `test:` The directory containing the actual publications that will be used for testing purposes (thus, with no ground truth CSV file available).\n* `sample_submission.csv:` The CSV file containing all the publications IDs in the test set, for which we'll have to populate the prediction column.","9d71f9be":"<a id='2'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 50px;\">2. Data Exploration\ud83d\udd0d<\/p>","418ff878":"<a id='1'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">1. Importing necessary modules and libraries\ud83d\udcda<\/p>","895201bd":"### Special thanks to helper notebooks \ud83d\ude4f\ud83c\udffb:- \n1. [Tabular Data Preparation, Basic EDA and Baseline](https:\/\/www.kaggle.com\/manabendrarout\/tabular-data-preparation-basic-eda-and-baseline)\n2. [Coleridge - Data Loading, EDA & Simple Submission](https:\/\/www.kaggle.com\/poornap\/coleridge-data-loading-eda-simple-submission)\n3. [Coleridge Initiative - EDA + Na\u00efve Submission \ud83d\udcda](https:\/\/www.kaggle.com\/josephassaker\/coleridge-initiative-eda-na-ve-submission\/data)","cd46a8a3":"It takes time!\ud83d\ude44","69450d5a":"We have our text appended in our train dataframe.","1c8c9ecf":"Great! we don't have any null values.","4c59af90":"<a id='4'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 50px;\">4. Data Vizualization\ud83c\udfa8<\/p>","3b736b19":"## Hurray! We are done with the submission and model. Hope you like this kernel. If so, don't forget to upvote and leave your valuable comment. Thank you\ud83d\ude0a","7ec934d5":"We have our data cleaned!","f6924d00":"<a id='1'><\/a>\n## <p style=\"text-align:center;\">Data Description<\/p>\ntrain.csv - labels and metadata for the training set train\/test directory - the full text of the training\/test set's publications in JSON format, broken into sections with section titles\n\n* `id` - publication id - note that there are multiple rows for some training documents, indicating multiple mentioned datasets.\n* `pub_title` - title of the publication (a small number of publications have the same title).\n* `dataset_title` - the title of the dataset that is mentioned within the publication.\n* `dataset_label` - a portion of the text that indicates the dataset.\n* `cleaned_label` - the dataset_label, as passed through the clean_text function from the Evaluation page.\n\nsample_submission.csv - a sample submission file in the correct format.\n* `Id` - publication id.\n* `PredictionString` - To be filled with equivalent of cleaned_label of train data.","537a2ed0":"Also, we have the text of for the sample_submission file","0dd7476c":"<a id='0'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">Coleridge Initiative\ud83d\udd8b\ud83d\udcdd - EDA\ud83d\udcda & Baseline Model\ud83c\udfaf <\/p>","5e677644":"<a id='3'><\/a>\n# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 50px;\">3. Data Cleaning\ud83d\udd27<\/p>","080366de":"<a id='1'><\/a>\n# <p style=\"background-color:red; font-family:newtimeroman; font-size:120%; text-align:center; border-radius: 10px 25px;\">Table of Content<\/p>\n* [1. Importing necessary modules and libraries\ud83d\udcda](#1)\n* [2. Data Exploration\ud83d\udd0d](#2)\n* [3. Data Cleaning\ud83d\udd27](#3)\n* [4. Data Vizualization\ud83c\udfa8](#4)\n* [5. Baseline model and Submission\ud83d\udcdd](#5)"}}