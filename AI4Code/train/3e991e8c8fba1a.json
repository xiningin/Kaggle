{"cell_type":{"69eee519":"code","e7836b56":"code","8d2260c4":"code","36eda0db":"code","706fcf45":"code","be55ce5e":"code","69239d22":"code","8136dc1d":"code","54440340":"code","f1578d1c":"code","0a4b9693":"code","0e995f3e":"code","be392abd":"code","fa9a7e60":"code","6dd30140":"code","b5244fa7":"code","c5de12c2":"code","75ff41e6":"code","eadbc0a3":"code","5087d4cb":"code","8591bd1e":"code","acc8e17e":"code","bb5178ff":"code","f3b0922b":"code","09fe4aad":"code","38daaf1f":"code","99286a73":"code","635ca462":"code","cd72ec8d":"markdown","9269d4d3":"markdown","9d87f82d":"markdown","61feb4b5":"markdown","6d3c68f8":"markdown","11666bf1":"markdown"},"source":{"69eee519":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import iplot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e7836b56":"df = pd.read_csv(\"..\/input\/case-vaccination-covid19-indonesia-dataset\/Vaccination Data\/Vaksinasi Jawa Timur.csv\", delimiter=',')\ndf.tail()","8d2260c4":"df.shape","36eda0db":"df.isnull().sum()","706fcf45":"#Correlation map to see how features are correlated with each other and with target\ncorrmat = df.corr(method='kendall')\nplt.subplots(figsize=(12,9))\nsns.heatmap(corrmat, vmax=0.9, square=True)","be55ce5e":"fig = px.parallel_categories(df, color=\"Vaccinated\", color_continuous_scale=px.colors.sequential.OrRd)\nfig.show()","69239d22":"fig = px.bar(df, \n             x='Date', y='Vaccinated',color_discrete_sequence=['blue'],\n             title='Covid Vaccination in Indonesia', text='City_or_Regency')\nfig.show()","8136dc1d":"fig = px.line(df, x=\"Date\", y=\"Fully_Vaccinated\", color_discrete_sequence=['darksalmon'], \n              title=\"Covid Fully Vaccinated\")\nfig.show()","54440340":"fig = px.scatter(df, x=\"Date\", y=\"Total\",color_discrete_sequence=['#4257f5'], title=\"Covid Total Vaccinated\" )\nfig.show()","f1578d1c":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.City_or_Regency)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","0a4b9693":"surabaya = df[(df['City_or_Regency']=='KOTA SURABAYA')].reset_index(drop=True)\nsurabaya.head()","0e995f3e":"fig = px.bar(surabaya, \n             x='Date', y='Vaccinated',color_discrete_sequence=['crimson'],\n             title='Covid Vaccination in Surabaya', text='City_or_Regency')\nfig.show()","be392abd":"fig = px.line(surabaya, x=\"Date\", y=\"Fully_Vaccinated\", color_discrete_sequence=['darksalmon'], \n              title=\"Fully Vaccinated in Surabaya\")\nfig.show()","fa9a7e60":"fig = px.scatter(surabaya, x=\"Date\", y=\"Total\",color_discrete_sequence=['#DC143C'], title=\"Total Vaccinated in Surabaya\" )\nfig.show()","6dd30140":"fig = px.bar(surabaya,\n             y='Date',\n             x='Total',\n             orientation='h',\n             color='Fully_Vaccinated',\n             title='Total Vaccinated in Surabaya',\n             opacity=0.8,\n             color_discrete_sequence=px.colors.diverging.RdBu,\n             template='plotly_white'\n            )\nfig.update_xaxes(range=[0,35])\nfig.show()","b5244fa7":"fig, ax = plt.subplots(1,3, figsize = (20,6), sharex=True)\nplt.xticks(rotation=45)\nsns.countplot(x='Vaccinated',data=surabaya, palette=\"copper\", ax=ax[0])\nplt.xticks(rotation=45)\nsns.countplot(x='Fully_Vaccinated', palette=\"ocean\", data=surabaya,ax=ax[1])\nplt.xticks(rotation=45)\nsns.countplot(x='Total', palette=\"cubehelix\", data=surabaya,ax=ax[2])\nplt.xticks(rotation=45)\nax[0].title.set_text('Covid Vaccinated in Surabaya')\nplt.xticks(rotation=45)\nax[1].title.set_text('Covid Fully Vaccinated in Surabaya')\nplt.xticks(rotation=45)\nax[2].title.set_text('Total Vaccinated in Surabaya')\nplt.show()","c5de12c2":"!pip install klib","75ff41e6":"import sys\n\nsys.path.append('..\/input\/klib-library-python')","eadbc0a3":"import klib","5087d4cb":"klib.cat_plot(surabaya, figsize=(50,15))","8591bd1e":"surabaya_cleaned = klib.data_cleaning(surabaya)","acc8e17e":"klib.corr_plot(surabaya_cleaned, annot=False)","bb5178ff":"#Display only positive correlation\n\nklib.corr_plot(surabaya_cleaned, split='pos', annot=False)","f3b0922b":"#Correlation data matrix\n\nklib.corr_mat(surabaya_cleaned)","09fe4aad":"klib.dist_plot(surabaya_cleaned['fully_vaccinated'])","38daaf1f":"klib.dist_plot(surabaya_cleaned['vaccinated'])","99286a73":"klib.dist_plot(surabaya_cleaned['total'])","635ca462":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in surabaya.City_or_Regency)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Reds', background_color=\"Red\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","cd72ec8d":"![](https:\/\/i.ytimg.com\/vi\/fUBnB4PcHnA\/maxresdefault.jpg)youtube.com","9269d4d3":"#References\n\nhttps:\/\/www.kaggle.com\/sripaadsrinivasan\/speed-up-your-data-science-projects-using-klib\/comments\n\nhttps:\/\/klib.readthedocs.io\/en\/latest\/\n\nhttps:\/\/towardsdatascience.com\/speed-up-your-data-cleaning-and-preprocessing-with-klib-97191d320f80","9d87f82d":"#I don't know why the rotation of the xticks worked only in the 3rd countplot. Any hint?","61feb4b5":"Surabaya is the capital of the Indonesian province of East Java and the second-largest city in Indonesia after Jakarta. Located on northeastern border of Java island, on the Madura Strait, it is one of the earliest port cities in Southeast Asia.\n\nAccording to the National Development Planning Agency, Surabaya is one of the four main central cities of Indonesia, alongside Jakarta, Medan, and Makassar. The city has a population of 2.89 million within its city limits in 2019 and 9.5 million in the extended Surabaya metropolitan area, making it the second-largest metropolitan area in Indonesia.\n\nhttps:\/\/en.wikipedia.org\/wiki\/Surabaya","6d3c68f8":"#Display all correlations data","11666bf1":"#Data Cleaning"}}