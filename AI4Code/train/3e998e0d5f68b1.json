{"cell_type":{"9e526956":"code","62be2c41":"code","f13009bb":"code","76be99ad":"code","bb8569ba":"code","ee70ad05":"code","740c3927":"code","ed65c9fd":"code","ca3cc466":"code","37830839":"code","68189939":"code","8b83de56":"code","ab1a70f2":"code","537ad2a4":"code","222047b6":"code","e0b687b4":"code","6a83fd4a":"code","8b79561b":"code","7e9b180c":"code","fedf51db":"code","4f802f57":"code","262bdfc6":"code","54875f2f":"code","a5c96679":"code","053f5dc5":"code","4f6f2b0a":"code","de3726fe":"code","2b99cf40":"code","9f61f4ef":"code","14f6da8e":"code","728cf4c5":"code","45377c27":"code","ca636ee6":"code","78432fe3":"code","4610d150":"code","5df38344":"code","740a69d7":"code","bf9e1f7d":"code","f7059a90":"code","39ad9484":"code","c0b18481":"code","4daea798":"code","eebc5307":"code","88140d42":"code","4654913f":"code","c44ee45b":"code","e63b6549":"code","71d35845":"code","57e9523d":"markdown","f281e3bd":"markdown","bc050a66":"markdown","de828ac9":"markdown","c7644757":"markdown","9a01642d":"markdown","162c0798":"markdown","114056a8":"markdown","d2e7dfe2":"markdown"},"source":{"9e526956":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","62be2c41":"#load the dataset\ndataset = pd.read_csv(\"\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")","f13009bb":"#first 5 rows\ndataset.head()","76be99ad":"#check if there is any null value\ndataset.isnull().sum()","bb8569ba":"#datatypes\ndataset.dtypes","ee70ad05":"#dropping the null values\ndataset = dataset.drop(['name', 'host_name', 'last_review', 'reviews_per_month'], axis = 1)","740c3927":"#checking the dataset\ndataset.isnull().sum()","ed65c9fd":"#description of the dataset\ndataset.describe().T","ca3cc466":"#different types of rooms\ndataset.room_type.unique()","37830839":"#different neighbourhoods\ndataset.neighbourhood.unique()","68189939":"#number of different neighbourhoods\nd = dataset.neighbourhood.unique()\nlen(d)","8b83de56":"#different neighbourhood groups\ndataset.neighbourhood_group.unique()","ab1a70f2":"#count plot for neighbourhood grouos\nsns.countplot(dataset.neighbourhood_group, data = dataset)","537ad2a4":"#countplot for types of room\nsns.countplot(dataset.room_type, data = dataset)","222047b6":"#room type based on the neighbourhood\nsns.countplot(x = 'room_type', hue = 'neighbourhood_group', data = dataset)","e0b687b4":"#distplot to see price\n#distplot for availability\n#distplot for minimum nights\ndf1 = dataset[dataset.price < 500]\ndf2 = dataset[dataset.availability_365 < 370]\ndf3 = dataset[dataset.minimum_nights < 200]\nf, axes = plt.subplots(3, 1, figsize=(7, 7), sharex=True)\nsns.despine(left=True)\nsns.distplot(df1.price, ax = axes[0])\nsns.distplot(df2.availability_365, ax = axes[1])\nsns.distplot(df3.minimum_nights, ax=axes[2])\nplt.setp(axes, yticks=[])\nplt.tight_layout()","6a83fd4a":"#each neighbourhood group price variation\nf, axes = plt.subplots(3,2, figsize=(7, 7), sharex=True)\nsns.despine(left=True)\nsns.distplot(df1[(df1.neighbourhood_group == 'Brooklyn')]['price'],color='k', axlabel = 'Brooklyn Price', ax = axes[0,0])\nsns.distplot(df1[(df1.neighbourhood_group == 'Manhattan')]['price'],color='k', axlabel = 'Manhattan Price', ax = axes[0,1])\nsns.distplot(df1[(df1.neighbourhood_group == 'Queens')]['price'],color='k', axlabel = 'Queens Price', ax = axes[1,0])\nsns.distplot(df1[(df1.neighbourhood_group == 'Staten Island')]['price'],color='k', axlabel = 'Staten Island Price', ax = axes[1,1])\nsns.distplot(df1[(df1.neighbourhood_group == 'Bronx')]['price'],color='k', axlabel = 'Bronx Price', ax = axes[2,0])\n","8b79561b":"#price in each neighbourhood group\nsns.set(style=\"ticks\", palette=\"pastel\")\nsns.boxplot(x = dataset.neighbourhood_group, y = dataset.price,  data = dataset)\nsns.despine(offset=10, trim=True)","7e9b180c":"#price distribution wrt minimum nights\nsns.jointplot(y = dataset.price, x = dataset.minimum_nights)","fedf51db":"#price and availability\nsns.jointplot(y = dataset.price, x = dataset.availability_365)","4f802f57":"\n#availability wrt price and neighbourhood groups\nsns.scatterplot(x = dataset.availability_365, y = dataset.price, hue = dataset.neighbourhood_group, data = dataset)","262bdfc6":"#price with respect to neighbourhood group\nsns.scatterplot(x = dataset.price, y = dataset.neighbourhood_group, data = dataset)","54875f2f":"#violin plot for neighbourhood group with price and room type\nsns.catplot(x=\"neighbourhood_group\", y=\"price\", hue=\"room_type\",\n            kind=\"violin\", data=df1)\n","a5c96679":"#top 5 neighbouhoods\nplt.figure(figsize = (6,6))\ndf4 = dataset.neighbourhood.value_counts().head(5)\nsns.barplot(x = df4.index, y = df4.values)","053f5dc5":"#top 5 host id\nplt.figure(figsize = (6,6))\ndf5 = dataset.host_id.value_counts().head(5)\nsns.barplot(x = df5.index, y = df5.values)","4f6f2b0a":"#latitude and longitude\nplt.figure(figsize = (10,10))\nsns.scatterplot(dataset.longitude, dataset.latitude, hue = dataset.neighbourhood_group)\nplt.ioff()","de3726fe":"#based on room type\nplt.figure(figsize = (10,10))\nsns.scatterplot(dataset.longitude, dataset.latitude, hue = dataset.room_type)\nplt.ioff()","2b99cf40":"#check the dataset\ndataset","9f61f4ef":"#check datatypes\ndataset.dtypes","14f6da8e":"#label encoding\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndataset.neighbourhood_group = le.fit_transform(dataset.neighbourhood_group)\ndataset.neighbourhood = le.fit_transform(dataset.neighbourhood)\ndataset.room_type = le.fit_transform(dataset.room_type)","728cf4c5":"#check correlation with respect to price\ndataset.corr()['price'].sort_values","45377c27":"#visual display of correlation\nplt.figure( figsize = (10,10))\nsns.heatmap(dataset.corr(), annot = True)","ca636ee6":"#split the dataset into X and y\nX = dataset.drop(['price'], axis = 1).values\ny = dataset.price.values","78432fe3":"#p value calculation\n#backward elimination model used to determine the best features\nimport statsmodels.api as sm\nX = np.append(arr = np.ones((48895,1)).astype(int), values = X, axis = 1)\nX_opt = X[:, [0,1,2,3,4,5,6,7,8,9,10,11]]\nreg_OLS = sm.OLS(y,X_opt).fit()\nreg_OLS.summary()","4610d150":"#removing 8 - minimum_nights\nX_opt = X[:, [0,1,2,3,4,5,6,7,9,10,11]]\nreg_OLS = sm.OLS(y,X_opt).fit()\nreg_OLS.summary()","5df38344":"#removing 1 - host_id\nX_opt = X[:, [0,2,3,4,5,6,7,9,10,11]]\nreg_OLS = sm.OLS(y,X_opt).fit()\nreg_OLS.summary()\n#best features","740a69d7":"#updating the values of X\nX = X_opt[:,1:]","bf9e1f7d":"#split into train and test\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","f7059a90":"#Multivariate Linear Regression\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\n#predict the value\ny_pred = regressor.predict(X_test)","39ad9484":"#check metrics\nfrom sklearn.metrics import r2_score, mean_squared_error\nr2_score(y_test, y_pred)","c0b18481":"#mse value\nmean_squared_error(y_test, y_pred)","4daea798":"#SVM\nfrom sklearn.svm import SVR\nregressor = SVR(kernel = 'rbf')\nregressor.fit(X_train, y_train)\n#predict the value\ny_pred = regressor.predict(X_test)","eebc5307":"#r2 score\nr2_score(y_test, y_pred)","88140d42":"#mse value\nmean_squared_error(y_test, y_pred)","4654913f":"#random forest \nfrom sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 50)\nregressor.fit(X_train, y_train)\n#predict the value\ny_pred = regressor.predict(X_test)","c44ee45b":"r2_score(y_test, y_pred)","e63b6549":"#mse value\nmean_squared_error(y_test, y_pred)","71d35845":"#regression plot of random forest\nsns.regplot(y = y_test, x = y_pred, color = 'blue')","57e9523d":"# Part 1 - Data Analysis and Visualization","f281e3bd":"**Support Vector Machine Regression**","bc050a66":"The Random Forest Regression gives the model with the most accuracy for the given dataset.","de828ac9":"# Part 2 - Regression Models\n\nDifferent regression models are used to determine the model with the best accuracy. The models are\n1. Multivariate Linear Regression\n1. SVM Regression\n1. Random Forest Regression","c7644757":"*Lets now analyze the data*","9a01642d":"*I hope this notebook was helpful!*","162c0798":"**Multivariate Linear Regression**","114056a8":"**Random Forest Regression**","d2e7dfe2":"![190921_07_40_09_5DS27847.0.jpg](attachment:190921_07_40_09_5DS27847.0.jpg)\n\n**This notebook has two parts,**\n\n**Part1 - Data Analysis and Visualization**\nHere the data is analyzed with respect to the features to obtain a meaningful visualization which can be used to tella story and define the relationship that exists.\n\n**Part2 - Regression Model**\nIn this part the features are measured for their p value using Ordinary Least Square method and manually removing the features having a p value higher than the significance value which in this case is 0.05. After which the best features are used to train regression models and their accuracy is compared.\n\nSo, lets begin!"}}