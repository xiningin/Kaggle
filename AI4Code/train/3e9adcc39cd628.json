{"cell_type":{"22ed6787":"code","6c522347":"code","71fe2d9e":"code","cee8f5a2":"code","d63ca763":"code","10ef6896":"code","3f46677b":"code","97614af8":"code","afed2769":"code","d20554bd":"code","9f2990ff":"code","b1c3f1df":"code","cb4d0de7":"code","b43fa6b0":"code","d4b62889":"code","d69eec68":"code","19c3757d":"code","25121570":"code","5b91def4":"code","8814ecc1":"code","f19979b7":"code","20fb0785":"code","b7d0f2c6":"code","b6f63204":"code","8e025286":"code","c65c3372":"code","c590b33f":"code","2d0381bb":"code","b9989f63":"code","6128de89":"code","2e849945":"code","60be8b08":"code","184fe6da":"code","4cf75dfa":"code","5180f4c2":"code","3c7bcf9f":"code","b4126a01":"code","e11fc970":"code","deb35659":"code","a7119056":"code","3860a532":"code","98cf686a":"code","3f1995c2":"code","3496dda8":"code","7a5d0eb3":"code","56a51246":"code","2bf16f0d":"code","01e67694":"code","72cbefd0":"code","ad591c98":"code","d7b02568":"code","69a45dee":"code","bd41adda":"code","d63a08fb":"code","4c18bfb0":"code","75958509":"code","5cfa8c59":"code","b7be5069":"code","3b6d6690":"code","da79aea5":"code","799ea72f":"code","768d9548":"code","617e1920":"code","00d8f648":"code","8ee0fe7d":"code","39d9b958":"code","a5c50255":"code","72e371e5":"code","7f02e006":"code","ea018bc9":"code","7709e6fb":"code","267c3f9d":"code","f124544e":"code","db091441":"code","e76ec94e":"markdown","93e26856":"markdown","4f2dc808":"markdown","0c3dc8f1":"markdown","66bcfa65":"markdown","ce0ae89c":"markdown","ca68c8aa":"markdown","a075a30c":"markdown","bc1e95ad":"markdown","a837b516":"markdown","129b9bf8":"markdown","c8676426":"markdown","b8e41239":"markdown","526239d5":"markdown","f2ead6c3":"markdown","e96d9f9c":"markdown","1ec3a92d":"markdown","20ea55f7":"markdown","a0e979ae":"markdown","baa19f90":"markdown","7c59bab7":"markdown","0b103b7f":"markdown","ae792912":"markdown","df0738f1":"markdown","a2f2efdd":"markdown","a7b9420b":"markdown","8b6b0a1b":"markdown","63c776a1":"markdown","9d963fd3":"markdown","f76c7856":"markdown","14a28cc3":"markdown","e13e507b":"markdown","57fef4d8":"markdown","12986b49":"markdown"},"source":{"22ed6787":"import numpy as np","6c522347":"#array de dimension 1 (vecteur)\nv = np.array([1, 2, 3])\nv","71fe2d9e":"#array (tableau) de dimension 2, nombre de lignes : 4, nombre de colonnes : 3\na = np.array([[1, 2, 3], [4, 5, 6],[7,8,9],[10,11,12]])\na","cee8f5a2":"a[1,2]","d63ca763":"a[1::]","10ef6896":"#tableau contient les nombres entre 3 (inclus) et 15 (exclus) avec un pas de 2\nm = np.arange(3, 15, 2)\nm","3f46677b":"n = range(3, 15, 2)\nn","97614af8":"type(m),type(n)","afed2769":"list(range(3, 15, 2))","d20554bd":"x = np.linspace(-np.pi\/2, np.pi\/2, 3)\nx","9f2990ff":"y = np.sin(x)\ny","b1c3f1df":"#vecteur de 10 nombres entiers entre 1 et 5 (exclus)\nnp.random.randint(1, 5, 10)","cb4d0de7":"#array de dimension 2, nombre de lignes : 3, nombre de colonnes : 4 de nombres entiers al\u00e9atoires entre 1 et 100\nnp.random.randint(1,100,size=(3,4))","b43fa6b0":"#array de dimension 1 de 10 valeurs d'une distribution gaussienne standard (moyenne 0, \u00e9cart-type 1).\nnp.random.randn(10) ","d4b62889":"np.array([1, np.nan, 2])","d69eec68":"import pandas as pd","19c3757d":"#cr\u00e9ation d'une s\u00e9rie\ns = pd.Series([1.61,1.75,np.nan,1.61,2,1.75,1.55],name='taille')","25121570":"#afficher les valeurs de la serie\ns.values","5b91def4":"#type\ns.dtype","8814ecc1":"#premier element\ns[0]","f19979b7":"#les elements d'index entre 2 et 4 exclus\ns[2:4]","20fb0785":"#les elements d'une liste d'index\ns[[0, 2, 3]]","b7d0f2c6":"s<1.7","b6f63204":"#Attention, quand on a extrait une sous-s\u00e9rie, les num\u00e9ros d'index n'ont pas chang\u00e9 !\ns[s<1.7]","8e025286":"#personnaliser l'index\ns = pd.Series([21,19,25],name='age',index=['Emma','Louise','Alice'])\ns","c65c3372":"s+s","c590b33f":"s*2","2d0381bb":"s.sum()","b9989f63":"# Supprimer Donn\u00e9es num\u00e9riques manquantes\ns1=s.dropna()\ns1","6128de89":"#nombre d'occurrence\ns.value_counts()","2e849945":"#les valeurs nan\ns.isna() ","60be8b08":"#nomre des valeurs nan\ns.isna().sum()","184fe6da":"s2 = pd.Series([5,2,8])","4cf75dfa":"# renvoie les index dans l'ordre croissant des valeurs \ns2.argsort() ","5180f4c2":"#  trier dans l'ordre croissant\ns2[s2.argsort()] ","3c7bcf9f":"s1","b4126a01":"# appliquer une fonction pour chaque element de la s\u00e9rie\ns.apply(lambda x: 2 * x + 1) ","e11fc970":"s1.apply(int)","deb35659":"s=pd.Series([\"Paris\",\"Budapest\",\"Berlin\"],name='Capital')\ns","a7119056":"s.str.startswith('B') # renvoie une s\u00e9rie de bool\u00e9ens","3860a532":"s.str.len() # renvoie une s\u00e9rie avec les longueurs des cha\u00eenes.","98cf686a":"s.name='Capitale'\ns.to_frame() ","3f1995c2":"#Construire DataFrame \u00e0 partir d'un dictionnaire.\nd = {'col1': [1, 2], 'col2': [3, 4]}\ndf = pd.DataFrame(data=d)#ou bien df=pd.DataFrame.from_dict(d)\ndf","3496dda8":"#Construire DataFrame \u00e0 partir d'un np array\nar = np.random.randint(1,100,size=(3,4))\ndf = pd.DataFrame(ar, index =['a1', 'a2', 'a3'], columns = ['A', 'B', 'C', 'D'])\ndf","7a5d0eb3":"df.describe()","56a51246":"#liste des colonne\ndf.columns","2bf16f0d":"#dimention\ndf.shape","01e67694":"for x in df:\n    print(x) # imprime le nom de la colonne","72cbefd0":"df['A']","ad591c98":"df.A","d7b02568":"df.loc['a2']","69a45dee":"df.loc[['a2', 'a3'], ['A', 'C']] ","bd41adda":"df.loc[['a2', 'a3'],:]","d63a08fb":"s=df.A<50\ns","4c18bfb0":"df.loc[df.A<50]","75958509":"df[df.A<50]","5cfa8c59":"df = pd.DataFrame(ar, columns = ['A', 'B', 'C', 'D'])\ndf","b7be5069":"df.iloc[1:3]","3b6d6690":"d = {\n    'Name':['Alisa','Bobby','Cathrine','Alisa','Bobby','Cathrine',\n            'Alisa','Bobby','Cathrine','Alisa','Bobby','Cathrine'],\n    'Exam':['Semester 1','Semester 1','Semester 1','Semester 1','Semester 1','Semester 1',\n            'Semester 2','Semester 2','Semester 2','Semester 2','Semester 2','Semester 2'],\n     \n    'Subject':['Mathematics','Mathematics','Mathematics','Science','Science','Science',\n               'Mathematics','Mathematics','Mathematics','Science','Science','Science'],\n   'Score':[62,47,55,74,31,77,85,63,42,67,89,81]}\n \ndf = pd.DataFrame(d)\ndf","da79aea5":"d1=df.Score.groupby(df['Name']).sum()\nd1","799ea72f":"d2=df.Name.value_counts() \nd2","768d9548":"d2=d2.to_frame() \nd2","617e1920":"d2.rename(columns={'Name': 'count'},inplace=True)","00d8f648":"d1=d1.to_frame() \nd1","8ee0fe7d":"d1.join(d2)","39d9b958":"s1=df.groupby(['Name','Exam']).sum()\ns1","a5c50255":"df1 = pd.DataFrame({'a': [1, 3, 4], 'b': [5, 3, 1]}, columns = ['a', 'b']) \ndf1","72e371e5":"df2 = pd.DataFrame({'b': [5, 2, 0], 'a': [1, 2, 8]}, columns = ['b', 'a'], index = [2, 1, 0])\ndf2","7f02e006":"df1 + df2","ea018bc9":"df1 = pd.DataFrame({'A': [3, 5], 'B': [1, 2]})\ndf1","7709e6fb":"df2 = pd.DataFrame({'A': [5, 3, 7], 'C': [9, 2, 0]})\ndf2","267c3f9d":"pd.merge(df1, df2)","f124544e":"pd.merge(df1, df2, how = 'outer')","db091441":"d = {\n    'Name':['Alisa','Bobby','Cathrine','Alisa','Bobby','Cathrine',\n            'Alisa','Bobby','Cathrine','Alisa','Bobby','Cathrine'],\n    'Exam':['Semester 1','Semester 1','Semester 1','Semester 1','Semester 1','Semester 1',\n            'Semester 2','Semester 2','Semester 2','Semester 2','Semester 2','Semester 2'],\n     \n    'Subject':['Mathematics','Mathematics','Mathematics','Science','Science','Science',\n               'Mathematics','Mathematics','Mathematics','Science','Science','Science'],\n   'Score':[62,47,55,74,31,77,85,63,42,67,89,81]}\ndf = pd.DataFrame(d)\ndf","e76ec94e":"#### La fonction numpy.linspace()\npermet d\u2019obtenir un vecteur de valeurs allant d\u2019une valeur de d\u00e9part \u00e0 une valeur de fin avec un nombre donn\u00e9 d\u2019\u00e9l\u00e9ments.","93e26856":"#### La fonction numpy.arange()","4f2dc808":"Renvoyer un dataframe avec un sous-ensemble des lignes et des colonnes :","0c3dc8f1":"5) Afficher les notes de Alisa","66bcfa65":"On peut renvoyer un dataframe donnant des statistiques sur les valeurs (nombres de valeurs, moyenne, \u00e9cart-type, ...), mais uniquement sur les colonnes num\u00e9riques(faire df.describe(include = 'all') pour avoir toutes les colonnes) ","ce0ae89c":"2) Afficher les donn\u00e9es qui correspondent au Sujet **Mathematics**","ca68c8aa":"#### Indexation\nQuand on boucle sur un dataframe, on boucle sur les noms des colonnes : ","a075a30c":"#### G\u00e9n\u00e9ration de nombres al\u00e9atoires avec numpy\nOn peut g\u00e9n\u00e9rer une array de valeurs al\u00e9atoire.\nhttp:\/\/www.python-simple.com\/python-numpy\/random-numpy.php","bc1e95ad":"**NB** : numpy.arange() retourne un objet de type numpy.ndarray alors que range() retourne un objet de type range","a837b516":"# Exercices","129b9bf8":"#### Merge","c8676426":"#### Op\u00e9rations sur les Dataframes","b8e41239":"### S\u00e9ries\nUne s\u00e9rie est un tableau unidimensionnel (vecteur) permet de stocker des donn\u00e9es en fonction d'un index. ","526239d5":"#### Groupby","f2ead6c3":"#### Serie de chaine de caracteres","e96d9f9c":"Renvoyer la Series correspondant \u00e0 la colonne A :","1ec3a92d":"### Tableaux (array)\nOn peut cr\u00e9er un tableaux de nombre en utilisant la m\u00e9thode array() de la biblioth\u00e8que numpy:","20ea55f7":"### DataFrames \nDataFrame est un tableau de dimension 2 (lignes et colonnes) qui se comporte comme un dictionnaire dont les clefs sont les noms des colonnes et les valeurs sont des s\u00e9ries.","a0e979ae":"### Convertit la s\u00e9rie en DataFrame \nConvertit la s\u00e9rie en DataFrame \u00e0 une seule colonne (dont le nom est le nom de la s\u00e9rie)","baa19f90":"#### Op\u00e9rations sur les s\u00e9ries\nOn peut utiliser les op\u00e9rations comme sur les array numpy ","7c59bab7":"**NB** : Toutes les m\u00e9thodes des series pandas, peuvent \u00eatre utilis\u00e9es sur chaque ligne et colonne de la dataframe.","0b103b7f":"Tester\ns.min(), s.max(), s.mean(), s.median(), s.sum(), s.idxmax()","ae792912":"## Numpy\nhttps:\/\/courspython.com\/apprendre-numpy.html   \nLa biblioth\u00e8que Numpy permet d\u2019effectuer des calculs num\u00e9riques avec Python. Il faut au d\u00e9part importer le package numpy avec l\u2019instruction suivante :","df0738f1":"Afficher le score total par personne et par semestre:","a2f2efdd":"Renvoyer la Series correspondant \u00e0 la ligne d'index a2 :\n","a7b9420b":"1) Calculer le score moyen des deux semestre pour chaque sujet et chaque etudiant:","8b6b0a1b":"## Pandas\n\nPandas est une librairie python qui permet de manipuler facilement des donn\u00e9es \u00e0 analyser. Elle propose en particulier des structures de donn\u00e9es et des op\u00e9rations de manipulation de tableaux num\u00e9riques. \n","63c776a1":"#### Indexation","9d963fd3":"Il est possible d\u2019obtenir des listes en combinant list et range().","f76c7856":"3) Afficher la liste des \u00e9l\u00e9ves qui ont eu au moin un score inferieur \u00e0 45","14a28cc3":"Utiliser les conditions et renvoyer un dataframe avec seulement les lignes o\u00f9 la condition est v\u00e9rifi\u00e9e :","e13e507b":"On peut acc\u00e9der \u00e0  un sous-ensemble des lignes et des colonnes en utilisant **iloc**. N\u00e9anmoins, cette fonction ne prend que des entiers (pour les positions) ou un vecteur bool\u00e9en","57fef4d8":"#### Indexation","12986b49":"#### Les valeurs manquantes"}}