{"cell_type":{"698b2ca5":"code","76db1f6b":"code","2d25abd6":"code","51499f48":"code","8f62b8c4":"code","c9e7e0f1":"code","eebf7502":"code","a4bce9a8":"code","a4de9f1b":"code","1bd940a4":"code","ba5a3a8c":"markdown","183651b4":"markdown","3e7ad993":"markdown","3568f26f":"markdown","19788a76":"markdown","b5bd88ab":"markdown","eb93187c":"markdown","a45a50f7":"markdown","4f21a191":"markdown","7bdb936d":"markdown","aa2fbad5":"markdown"},"source":{"698b2ca5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76db1f6b":"df = pd.read_csv(\"\/kaggle\/input\/2020-us-general-election-turnout-rates\/2020 November General Election - Turnout Rates.csv\")\ndf_usa = df[df['State']=='United States']\nprint (df.shape)\ndf.head()","2d25abd6":"df.isna().sum()\/df.shape[0]*100","51499f48":"df.drop(columns=['Source','Official\/Unofficial','Vote for Highest Office (President)','Overseas Eligible','State Abv'],\n        inplace=True)\ndf.drop(index=[0], inplace=True)","8f62b8c4":"list_count = ['Total Ballots Counted (Estimate)', 'Voting-Eligible Population (VEP)', 'Voting-Age Population (VAP)',\n            'Prison', 'Probation', 'Parole', 'Total Ineligible Felon']\nlist_perc = ['VEP Turnout Rate', '% Non-citizen']\nfor col in list_count:\n    df[col] = df[col].str.replace(',', '')\nfor col in list_perc:\n    df[col] = df[col].str.replace('%', '')\n    \ndf[list_count] = df[list_count].astype('int')\ndf[list_perc] = df[list_perc].astype('float')","c9e7e0f1":"df_temp = df.set_index('State')\ncorr = df_temp.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, mask=mask, center=0, annot=True,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","eebf7502":"df_temp = df.set_index('State')\nsns.set(style='darkgrid')\nplt.figure(figsize=(12,6))\nsns.barplot(x='State', y='VEP Turnout Rate', data=df, \n            order=df_temp['VEP Turnout Rate'].sort_values(ascending=False).index[:15])\nplt.xticks(rotation=90)\nplt.xlabel('State', weight='bold')\nplt.ylabel('VEP Turnout Rate (%)', weight='bold')\nplt.show()","a4bce9a8":"df_temp = df.set_index('State')\nsns.set(style='darkgrid')\nplt.figure(figsize=(12,6))\nsns.barplot(x='State', y='Voting-Age Population (VAP)', data=df, label = 'Voting Age Population (VAP)',\n            order=df_temp['Voting-Age Population (VAP)'].sort_values(ascending=False).index[:15], color='orange')\nsns.barplot(x='State', y='Voting-Eligible Population (VEP)', data=df, label = 'Voting Eligible Population (VEP)',\n            order=df_temp['Voting-Age Population (VAP)'].sort_values(ascending=False).index[:15], color='green')\nplt.xticks(rotation=90)\nplt.xlabel('State', weight='bold')\nplt.ylabel('Population', weight='bold')\nplt.gcf().axes[0].yaxis.get_major_formatter().set_scientific(False)\nplt.legend(shadow=True, facecolor='lightyellow')\nplt.show()","a4de9f1b":"df_temp = df.set_index('State')\nfig, ax = plt.subplots(2, 2, figsize=(16,16))\nfor col, ax in zip(['Prison','Probation','Parole','Total Ineligible Felon'], ax.flat):\n    dict_ = df_temp[col].sort_values(ascending=False).head(10).to_dict()\n    ax.pie(x=list(dict_.values()), labels=dict_.keys(), shadow=True, startangle=90)\n    ax.set_title(col, weight='bold')\nplt.show()","1bd940a4":"df_temp = df.set_index('State')\ndf_temp = df_temp.sort_values('Voting-Eligible Population (VEP)', ascending=False).head(10)\nsns.set(style='darkgrid')\ndf_temp[['Prison','Probation','Parole','Total Ineligible Felon']].plot(kind=\"bar\", figsize=(14,8), width=0.7)\nplt.xticks(rotation=90)\nplt.xlabel('State', weight='bold')\nplt.ylabel('Population', weight='bold')\nplt.gcf().axes[0].yaxis.get_major_formatter().set_scientific(False)\nplt.legend(shadow=True, facecolor='lightyellow')\nplt.show()","ba5a3a8c":"# **Feel free to Upvote and provide Feedback**","183651b4":"### **Heatmap (correlation) among various features**","3e7ad993":"### **Top 10 US states with population in different scenarios**","3568f26f":"## **% of NA values in each column**","19788a76":"# **EDA of US Election Turnout**","b5bd88ab":"## **Pre-processing of the data**","eb93187c":"### **Top 15 US states showing variation in VAP and VEP**","a45a50f7":"### **Top 15 US states with maximum VEP Turnout Rate**","4f21a191":"### **Top 10 US states with highest VEP in different scenarios**","7bdb936d":"# **Visualisation**","aa2fbad5":"## **Load the dataset**"}}