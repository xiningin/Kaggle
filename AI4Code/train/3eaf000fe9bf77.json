{"cell_type":{"c3df9932":"code","e1f610aa":"code","4eda5e18":"code","a0e06d4d":"code","9a5140a1":"code","3563ec1d":"code","1a8c61ca":"code","c7b3a478":"code","b2f323cf":"code","d686e2d5":"code","1466422c":"code","eda795ed":"code","1294a372":"code","80c9145a":"code","a42ba820":"code","c3746185":"code","08d9f1d4":"code","282f9f06":"code","6bb15318":"code","d6245a7d":"code","55f0b2de":"code","728de323":"code","3dba18bb":"code","6a9fe20e":"code","6ecb4463":"code","438e32f4":"code","7a9ab717":"code","7b13ab73":"code","3aa6f35f":"code","40fb29e6":"code","3f1ab7c2":"code","20881fa9":"code","5856ffa6":"code","e84f7fa1":"code","111d2b94":"markdown","8192189e":"markdown","38ad57da":"markdown","68cef579":"markdown","7c9f0888":"markdown","20e10977":"markdown","03897ea2":"markdown","c862fdda":"markdown","e2a5dcec":"markdown","9b3ca6ea":"markdown","58948185":"markdown","38de7fe8":"markdown","1546f09c":"markdown","6007e151":"markdown","1e100ef0":"markdown","60a0f7bf":"markdown"},"source":{"c3df9932":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","e1f610aa":"labels = ['id', 'Clump Thickness', 'Uniformity of Cell Size', \n       'Uniformity of Cell Shape', 'Marginal Adhesion', \n       'Single Epithelial Cell Size', 'Bare Nuclei', 'Bland Chromatin',\n       'Normal Nucleoli', 'Mitoses', 'Class']\ndf = pd.read_csv('..\/input\/breast-cancer-wisconsin.data.txt')\ndf.columns = labels\n#data.set_index('id', inplace=True)\ndf.head()","4eda5e18":"df.columns[1:10]","a0e06d4d":"print(np.where(df.isnull()))\nprint(df.describe())","9a5140a1":"df.info()","3563ec1d":"df['Bare Nuclei'].describe()","1a8c61ca":"df['Bare Nuclei'].value_counts()","c7b3a478":"bare_index = df[df['Bare Nuclei'] == '?'].index\nb = np.array(bare_index)","b2f323cf":"df.loc[b,'Bare Nuclei'] = 0","d686e2d5":"df['Class'].value_counts()","1466422c":"df['Class'] = df['Class'] \/ 2 - 1","eda795ed":"df['Class'].value_counts()","1294a372":"features = df[['Clump Thickness', 'Uniformity of Cell Size', \n       'Uniformity of Cell Shape', 'Marginal Adhesion', \n       'Single Epithelial Cell Size', 'Bare Nuclei', 'Bland Chromatin',\n       'Normal Nucleoli', 'Mitoses']]\ntarget = df['Class']","80c9145a":"from sklearn.preprocessing import StandardScaler","a42ba820":"scaler = StandardScaler()","c3746185":"scaler_feature = scaler.fit_transform(features)","08d9f1d4":"df_feature = pd.DataFrame(scaler_feature,columns=df.columns[1:10])","282f9f06":"df_feature.iloc[1:3]","6bb15318":"X = df_feature\ny = target","d6245a7d":"from sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier","55f0b2de":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)","728de323":"error_rate = []\n\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    y_pred = knn.predict(X_test)\n    error_rate.append(np.mean(y_pred != y_test))","3dba18bb":"plt.figure(figsize=(10,5))\nplt.xlabel('K')\nplt.ylabel('Error Rate')\nplt.title('Error Rate vs. K')\nplt.plot(range(1,40),error_rate,color='blue',marker='o',markerfacecolor='pink',markersize=5,ls='--')","6a9fe20e":"knn = KNeighborsClassifier(n_neighbors=24)","6ecb4463":"knn.fit(X_train,y_train)","438e32f4":"y_pred = knn.predict(X_test)","7a9ab717":"from sklearn.metrics import classification_report,confusion_matrix","7b13ab73":"print(classification_report(y_test,y_pred))","3aa6f35f":"tn,fp,fn,tp = confusion_matrix(y_test,y_pred).ravel()\nprint(tn,fp,fn,tp)","40fb29e6":"from sklearn.metrics import accuracy_score","3f1ab7c2":"# inbuilt function\nprint('Accuracy Score :',accuracy_score(y_test,y_pred))","20881fa9":"#own calculation\ntotal = sum(sum(confusion_matrix(y_test,y_pred)))\naccuracy = (tn + tp)\/total\nprint(\"Accuracy : \",accuracy)","5856ffa6":"# recall(ACTUAL) and sensitivity (TPR)\nsensitivity = tp \/ (tp + fn)\nprint('Sensitivity : ', sensitivity )","e84f7fa1":"#precision(PREDICT) and specificity (TNR)\nspecificity = tn \/(tn + fp )\nprint('Specificity : ', specificity)","111d2b94":"## Get the Features and Target variable","8192189e":"# Data Preprocessing","38ad57da":"## Standard Scaler","68cef579":"### 0.0 is assign to 2 class & 0.1 is assign to 4 class","7c9f0888":"### Train data fit in model","20e10977":"Scaled value Assign to DataFrame","03897ea2":"Attribute Information: (class attribute has been moved to last column)\n   #  Attribute                     Domain\n   -- -----------------------------------------\n   1. Sample code number            id number\n   2. Clump Thickness               1 - 10\n   3. Uniformity of Cell Size       1 - 10\n   4. Uniformity of Cell Shape      1 - 10\n   5. Marginal Adhesion             1 - 10\n   6. Single Epithelial Cell Size   1 - 10\n   7. Bare Nuclei                   1 - 10\n   8. Bland Chromatin               1 - 10\n   9. Normal Nucleoli               1 - 10\n  10. Mitoses                       1 - 10\n>   11. Class:                        (2 for benign, 4 for malignant)","c862fdda":"# Find Sensitivity and Specificity","e2a5dcec":"Above plot we take the k value is 24 beacuse the after 24 all value can be continues mean no fluctuation","9b3ca6ea":"### Split dataset into 4 parts X_train,X_test,y_train,y_test","58948185":"Please is there any mistake or any imporvment then comment here. \nPlease leave me a comment and upvote the kernel if you liked.\n\nThank you for your time.","38de7fe8":"## Accuracy of Model","1546f09c":"## Assigning the 0 to '?' in Bare Nuclei Column","6007e151":"\n## Applying ELBOW Method : for finding K value","1e100ef0":"### Let's do Predict","60a0f7bf":"# KNN ALGORITHM "}}