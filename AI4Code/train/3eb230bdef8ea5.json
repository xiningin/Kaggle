{"cell_type":{"259c6ae9":"code","22f8385a":"code","5aaa7398":"code","5bcda662":"code","55f816d8":"code","1cddba23":"code","aae6921d":"code","af9c8524":"code","948988e0":"code","d6db83f9":"code","fc500d99":"code","9433dac5":"code","c511c210":"code","0c986c02":"code","de55a65c":"code","193d965b":"code","3efbd387":"markdown","c945af51":"markdown","5f57c264":"markdown","796e598a":"markdown","bbd7a0a2":"markdown","5de7475d":"markdown","6e5534b4":"markdown","946c2e42":"markdown","cd709181":"markdown","18de2b82":"markdown","1cc7cd91":"markdown"},"source":{"259c6ae9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom sklearn import utils\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","22f8385a":"hd = pd.read_csv(\"..\/input\/heart.csv\")\nhd.head(20)","5aaa7398":"hd[hd.target == 0]","5bcda662":"print(hd.dtypes)","55f816d8":"hd.info()","1cddba23":"pd.value_counts(hd['target'].values, sort=False)","aae6921d":"sns.heatmap(hd.corr())","af9c8524":"X = hd.iloc[:,:-1].values\ny = hd.iloc[:,13].values\n","948988e0":"\nX_train,X_test,y_train,y_test  = train_test_split(X,y,test_size = 0.2,random_state= 0)","d6db83f9":"#Logistic regression\n\nLR = LogisticRegression()\nLR.fit(X_train,y_train)","fc500d99":"#Predicting for the entire dataset\n\ny_pred = LR.predict(X_test)\n","9433dac5":"#Accuracy of the model\n\nscore = LR.score(X_test,y_test)\nprint(score)","c511c210":"#Now we will apply confusion matrix\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","0c986c02":"#Let us apply KNN now\n\n\nKNN = KNeighborsClassifier(n_neighbors=3)\nKNN.fit(X_train,y_train)","de55a65c":"y_pred = KNN.predict(X_test)","193d965b":"print(accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))","3efbd387":"Now lets extract the dataset into independent and dependent variable\n\n","c945af51":"2. Now let us see if there is any null value in all the columns or rows","5f57c264":"It looks like a nice distribution.\n\nNow lets create a heatmap to check the how the corresponds to each other.","796e598a":"Recall: Recall gives us an idea about when it\u2019s actually yes, how often does it predict yes.\n\nPrecision: Precsion tells us about when it predicts yes, how often is it correct.\n\nF-score :This is a weighted average of the true positive rate (recall) and precision","bbd7a0a2":"1.Now lets see if the data types of all the colums are same are not","5de7475d":"So, applying logistic regression we are getting 85.2 % accuracy","6e5534b4":"3. Now let us see number of people who has heart disease and who doesn't","946c2e42":"    So, after comparing confusion matrix of LR and KNN we can see that LR is better","cd709181":"Fitting the data to the Training set","18de2b82":"Lets split the data into Train and Test set\n\n","1cc7cd91":"Data contains; \n\nage - age in years \nsex - (1 = male; 0 = female) \ncp - chest pain type \ntrestbps - resting blood pressure (in mm Hg on admission to the hospital) \nchol - serum cholestoral in mg\/dl \nfbs - (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false) \nrestecg - resting electrocardiographic results \nthalach - maximum heart rate achieved \nexang - exercise induced angina (1 = yes; 0 = no) \noldpeak - ST depression induced by exercise relative to rest \nslope - the slope of the peak exercise ST segment \nca - number of major vessels (0-3) colored by flourosopy \nthal - 3 = normal; 6 = fixed defect; 7 = reversable defect \ntarget - have disease or not (1=yes, 0=no)"}}