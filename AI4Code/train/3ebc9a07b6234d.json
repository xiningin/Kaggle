{"cell_type":{"d54a24ce":"code","d3b4d276":"code","2f05e146":"code","d5049d71":"code","2d17d2f5":"code","6c842b0a":"code","9efb9824":"code","02f016f0":"code","c4c1b52b":"code","098fc2f5":"code","e801e02b":"code","a3779a36":"code","8da7fd83":"markdown","19f3b91b":"markdown","e5632a58":"markdown","95bdbbb2":"markdown","43d87d3e":"markdown","f98ac639":"markdown","c40e3d54":"markdown","22cb9dc2":"markdown"},"source":{"d54a24ce":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.linear_model import LogisticRegression\n","d3b4d276":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain_test= train.append(test, ignore_index=True)\n\ntraindesc=train.describe()\ntestdesc=test.describe()\n\ntrain.info()\n\ntrain.isnull().sum()\n","2f05e146":"print(train[['Pclass', 'Survived']].groupby(['Pclass']).mean().sort_values(by=\"Survived\"))\n\nprint(train.Pclass.value_counts())\n\nsns.barplot(x='Pclass', y='Survived',hue=\"Sex\", data=train)","d5049d71":"print(train[[\"Sex\",\"Survived\"]].groupby([\"Sex\"]).mean().sort_values(by=\"Survived\"))\n\nprint(train.Sex.value_counts())\n\ntrain[\"Sex\"] = train[\"Sex\"].replace({\"male\":1, \"female\":0})\ntest[\"Sex\"] = test[\"Sex\"].replace({\"male\":1, \"female\":0})\n\nsns.barplot(x='Sex', y='Survived', data=train)","2d17d2f5":"train.Age.fillna(train.Age.mean(), inplace=True)\ntest.Age.fillna(test.Age.mean(), inplace=True)\nsns.catplot(x = 'Sex', y = 'Age', kind = 'box', data = train, height = 5, aspect = 2)\nplt.show()\nsns.distplot(train.Age)\nplt.show()\n\nplt.scatter(train[\"Age\"],train[\"Survived\"])\nplt.show()","6c842b0a":"print(train[['SibSp', 'Survived']].groupby(['SibSp']).mean().sort_values(by=\"Survived\"))\nprint(train[['Parch', 'Survived']].groupby(['Parch']).mean().sort_values(by=\"Survived\"))\n\nsns.catplot(x=\"SibSp\", y=\"Age\", kind=\"strip\", col=\"Survived\", data=train)\nsns.factorplot('Parch','Survived',data=train)\n","9efb9824":"train.Cabin.fillna(\"N\", inplace=True)\ntrain.Cabin = [i[0] for i in train.Cabin]\ntrain.value_counts(\"Cabin\").plot.pie()\n","02f016f0":"train['Embarked']= train['Embarked'].fillna(train['Embarked'].sort_values(ascending=False).values[0])\ntrain[\"Embarked\"] = train[\"Embarked\"].map({\"C\":3, \"Q\":2,\"S\":1})\n\ntest['Embarked']= test['Embarked'].fillna(test['Embarked'].sort_values(ascending=False).values[0])\ntest[\"Embarked\"] = test[\"Embarked\"].map({\"C\":3, \"Q\":2,\"S\":1})\n\nsns.barplot(x='Embarked', y='Survived',hue=\"Sex\", data=train)\nplt.show()\nprint(train[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"]).mean().sort_values(by=\"Survived\"))","c4c1b52b":"train.Fare.fillna(train[\"Fare\"].mean(),inplace=True)\ntest.Fare.fillna(test[\"Fare\"].mean(),inplace=True)","098fc2f5":"cols=[ 'Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']\n\nX_train=train[cols]\ny_train= train.Survived\n\nX_test=test[cols]","e801e02b":"Ensemble =LogisticRegression()","a3779a36":"Ensemble.fit(X_train,y_train)\npredict = Ensemble.predict(X_test)\nsubmit = pd.DataFrame({\"PassengerId\":test.PassengerId, 'Survived':predict})\nsubmit.to_csv(\"gender_submission.csv\",index = False)","8da7fd83":"**Age**","19f3b91b":"**SibSp-Parch**","e5632a58":"**Pclass**","95bdbbb2":"Further inspection of features:\n\nPassengerId - I am shure the survival of passangers is not related to their id in this dataset --> drop it\nSurvived --> label, we have to separate it anyway\nPclass - extremely important and already numeric-just keep it\nName - don't think we need this feature --> drop it\nSex - extremely important but not encoded -encode and keep it\nAge-important but a lot of missing values-fill it and keep it\nSibSp - may be useful and already numeric --> just keep it\nParch - may be useful and already numeric --> just keep it\nTicket - don't think it is useful --> drop it\nFare - related to class, important --> keep it\nCabin - too much missing --> drop it\nEmbark-may be useful but have to encode it-encode and keep it","43d87d3e":"**Cabin**","f98ac639":"**Embarked**","c40e3d54":"**Sex**","22cb9dc2":"**Fare**"}}