{"cell_type":{"53444b01":"code","57957101":"code","9e855b30":"code","551b0123":"code","1b5c68dc":"code","d48d5086":"code","b5711edf":"code","5c184404":"code","0e099d3f":"code","5b51eb67":"code","9b131be3":"code","6dfdffe8":"code","51ba4f1f":"code","ffef8766":"code","1030d492":"code","9a11bad3":"code","14d700c3":"code","93369a5e":"code","54eb7920":"code","20e000f9":"code","fa46f201":"code","a42a21be":"code","fe7f4e67":"code","a7e0fa54":"code","00ff1d20":"code","2272e051":"code","5d095b77":"code","e2fbd57b":"code","6a1d7446":"code","58e67eed":"code","dd9b2fa8":"code","90f3b502":"code","4c5e6223":"code","ef716810":"code","5a98519d":"code","1c6e87a6":"code","59c89e4d":"code","36c89c56":"code","34c7250a":"code","ba0b1c85":"code","d3a7b7bb":"code","3ff94686":"code","f111c775":"code","02e2c682":"code","06bd27eb":"code","72acfd83":"code","53879102":"code","3978c8a0":"code","062cf73d":"code","ee6c1451":"code","bd009519":"code","56c4c84e":"code","7cbf38e3":"code","4ca56c20":"code","9482cbad":"markdown","d4b2c871":"markdown","881fcf75":"markdown","c402cbad":"markdown","5637e139":"markdown","9ce99d9f":"markdown","1281a460":"markdown","2537465a":"markdown","6016b8c6":"markdown"},"source":{"53444b01":"# import libraries \nimport pandas as pd # Import Pandas for data manipulation using dataframes\nimport numpy as np # Import Numpy for data statistical analysis \nimport matplotlib.pyplot as plt # Import matplotlib for data visualisation\nimport seaborn as sns # Statistical data visualization\n# %matplotlib inline","57957101":"# Import Cancer data drom the Sklearn library\nfrom sklearn.datasets import load_breast_cancer\ncancer = load_breast_cancer()","9e855b30":"cancer","551b0123":"cancer.keys()","1b5c68dc":"print(cancer['DESCR'])","d48d5086":"print(cancer['target_names'])","b5711edf":"print(cancer['target'])","5c184404":"print(cancer['feature_names'])","0e099d3f":"print(cancer['data'])\n","5b51eb67":"cancer['data'].shape","9b131be3":"df_cancer = pd.DataFrame(np.c_[cancer['data'], cancer['target']], columns = np.append(cancer['feature_names'], ['target']))\n","6dfdffe8":"df_cancer.head()","51ba4f1f":"df_cancer.tail()","ffef8766":"x = np.array([1,2,3])\nx.shape","1030d492":"Example = np.c_[np.array([1,2,3]), np.array([4,5,6])]\nExample.shape","9a11bad3":"sns.pairplot(df_cancer, hue = 'target', vars = ['mean radius', 'mean texture', 'mean area', 'mean perimeter', 'mean smoothness'] )","14d700c3":"sns.countplot(df_cancer['target'], label = \"Count\") ","93369a5e":"sns.scatterplot(x = 'mean area', y = 'mean smoothness', hue = 'target', data = df_cancer)\n","54eb7920":"#sns.lmplot('mean area', 'mean smoothness', hue ='target', data = df_cancer_all, fit_reg=False)","20e000f9":"# Let's check the correlation between the variables \n# Strong correlation between the mean radius and mean perimeter, mean area and mean primeter\nplt.figure(figsize=(20,10)) \nsns.heatmap(df_cancer.corr(), annot=True) ","fa46f201":"\n# Let's drop the target label coloumns\nX = df_cancer.drop(['target'],axis=1)\n","a42a21be":"X","fe7f4e67":"y = df_cancer['target']\ny","a7e0fa54":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state=5)","00ff1d20":"X_train.shape","2272e051":"X_test.shape","5d095b77":"y_train.shape","e2fbd57b":"y_test.shape","6a1d7446":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train, y_train)","58e67eed":"y_predict = svc_model.predict(X_test)\ncm = confusion_matrix(y_test, y_predict)","dd9b2fa8":"cm","90f3b502":"sns.heatmap(cm, annot=True)","4c5e6223":"print(classification_report(y_test, y_predict))","ef716810":"min_train = X_train.min()\nmin_train","5a98519d":"range_train = (X_train - min_train).max()\nrange_train","1c6e87a6":"X_train_scaled = (X_train - min_train)\/range_train","59c89e4d":"X_train_scaled","36c89c56":"sns.scatterplot(x = X_train['mean area'], y = X_train['mean smoothness'], hue = y_train)","34c7250a":"sns.scatterplot(x = X_train_scaled['mean area'], y = X_train_scaled['mean smoothness'], hue = y_train)","ba0b1c85":"min_test = X_test.min()\nrange_test = (X_test - min_test).max()\nX_test_scaled = (X_test - min_test)\/range_test","d3a7b7bb":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train_scaled, y_train)","3ff94686":"y_predict = svc_model.predict(X_test_scaled)\ncm = confusion_matrix(y_test, y_predict)\n\nsns.heatmap(cm,annot=True,fmt=\"d\")","f111c775":"print(classification_report(y_test,y_predict))","02e2c682":"param_grid = {'C': [0.1, 1, 10, 100], 'gamma': [1, 0.1, 0.01, 0.001], 'kernel': ['rbf']} ","06bd27eb":"from sklearn.model_selection import GridSearchCV","72acfd83":"grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=4)","53879102":"grid.fit(X_train_scaled,y_train)","3978c8a0":"grid.best_params_","062cf73d":"grid.best_estimator_","ee6c1451":"grid_predictions = grid.predict(X_test_scaled)","bd009519":"cm = confusion_matrix(y_test, grid_predictions)","56c4c84e":"sns.heatmap(cm, annot=True)","7cbf38e3":"print(classification_report(y_test,grid_predictions))","4ca56c20":"#So the model predict 97% accuracy","9482cbad":"# IMPROVING THE MODEL - PART 2","d4b2c871":"# STEP #6: IMPROVING THE MODEL","881fcf75":"# CASE STUDY: BREAST CANCER CLASSIFICATION\n","c402cbad":"# STEP #3: VISUALIZING THE DATA","5637e139":"# STEP #5: EVALUATING THE MODEL","9ce99d9f":"\n- Predicting if the cancer diagnosis is benign or malignant based on several observations\/features \n- 30 features are used, examples:\n        - radius (mean of distances from center to points on the perimeter)\n        - texture (standard deviation of gray-scale values)\n        - perimeter\n        - area\n        - smoothness (local variation in radius lengths)\n        - compactness (perimeter^2 \/ area - 1.0)\n        - concavity (severity of concave portions of the contour)\n        - concave points (number of concave portions of the contour)\n        - symmetry \n        - fractal dimension (\"coastline approximation\" - 1)\n\n- Datasets are linearly separable using all 30 input features\n- Number of Instances: 569\n- Class Distribution: 212 Malignant, 357 Benign\n- Target class:\n         - Malignant\n         - Benign\n\n\nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+(Diagnostic)\n\n","1281a460":"# STEP #2: IMPORTING DATA","2537465a":"# STEP #4: MODEL TRAINING (FINDING A PROBLEM SOLUTION)","6016b8c6":"# STEP #1: PROBLEM STATEMENT"}}