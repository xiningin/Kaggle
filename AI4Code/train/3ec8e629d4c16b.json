{"cell_type":{"32e01a0b":"code","b35e79fc":"code","d7b299fe":"code","2d2b3b55":"code","55ccf161":"code","6aa3b168":"code","697899ed":"code","c580c91a":"code","2cc202f7":"code","9374ca90":"code","5db77ca3":"code","1fafeeb0":"code","bbad02fd":"code","d783d679":"markdown","1f18a4c1":"markdown","ff45f471":"markdown","89de9e90":"markdown","234b3e05":"markdown","1a1a7f00":"markdown","d4361f44":"markdown","bdcd651f":"markdown"},"source":{"32e01a0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b35e79fc":"raw_data = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\nraw_data.head(10)","d7b299fe":"raw_data.corr()","2d2b3b55":"raw_data.describe()","55ccf161":"raw_data.dtypes","6aa3b168":"print(\"Unique values in Gender are\",raw_data.gender.unique())\nprint(\"Unique values in SSC Board are\",raw_data.ssc_b.unique())\nprint(\"Unique values in HSC Board are\",raw_data.hsc_b.unique())\nprint(\"Unique values in Degree type are\",raw_data.degree_t.unique())\nprint(\"Unique values in Work Experience are\",raw_data.workex.unique())\nprint(\"Unique values in Degree Specialisation are\",raw_data.specialisation.unique())\nprint(\"Unique values in Placement status are\",raw_data.status.unique())","697899ed":"droped_data = raw_data.drop(['sl_no'],axis = 1)\ndroped_data['Gender'] = droped_data.gender.map({'M': 0,'F' : 1})\ndroped_data['SSC_board'] = droped_data.ssc_b.map({'Others': 0,'Central' : 1})\ndroped_data['HSC_board'] = droped_data.hsc_b.map({'Others': 0,'Central' : 1})\ndroped_data['Degree_type'] = droped_data.degree_t.map({'Sci&Tech': 0,'Comm&Mgmt' : 1, 'Others': 2})\ndroped_data['Work_exp'] = droped_data.workex.map({'No': 0,'Yes' : 1})\ndroped_data['Specialisation'] = droped_data.specialisation.map({'Mkt&HR': 0,'Mkt&Fin' : 1})                                    \ndroped_data['Status'] = droped_data.status.map({'Placed': 1,'Not Placed' : 0}) \ndroped_data.head()","c580c91a":"ready_data = droped_data.drop(['gender','ssc_b','hsc_b','hsc_s','degree_t','status','workex','specialisation'], axis = 1)\nready_data['Salary'] = ready_data['salary'].fillna(0)\nready_data = ready_data.drop(['salary'], axis = 1)\nready_data.head()","2cc202f7":"#The test scores that the candidate has scored in his academics.\ntest_scores = ready_data[['ssc_p','hsc_p','degree_p','etest_p','mba_p']]\ntest_scores.head()","9374ca90":"#The final verdict and salary that the candidate achivied based on his\/her scores.\nverdict = ready_data[['ssc_p','hsc_p','degree_p','etest_p','mba_p','Status','Salary']]\nverdict.head()","5db77ca3":"salary = verdict['Salary']\nsalary = salary[salary != 0] #Remove all unplaced students\n\nsalary.hist(bins = 100)\nplt.grid()","1fafeeb0":"sns.boxplot(salary)","bbad02fd":"g = sns.PairGrid(verdict)\ng.map(plt.scatter);","d783d679":"### Split the ready-data dataframe into 2 different dataframes","1f18a4c1":" # Explore Data","ff45f471":"# Clean Data","89de9e90":"### Salary Analysis","234b3e05":"# Wrangle Data\nChange the variable types by removing all the strings and converting them into numeric values","1a1a7f00":"# Understand Raw Data","d4361f44":"### Score Analysis","bdcd651f":"# Load Data"}}