{"cell_type":{"4d4bfd3f":"code","5b87f8fd":"code","8f9d2d6a":"code","9ea46a18":"code","e1e10edb":"code","8d09bc4c":"code","1a9d130b":"code","9a099eed":"code","784e1f4e":"code","8ebe8d62":"code","80325bb3":"code","3f758d28":"code","c5aa02ed":"code","8e203c41":"code","9ee05cec":"code","d8faa8fc":"code","3c7702db":"code","9488230b":"code","b4e1f232":"code","b7de3c64":"code","fa8539b7":"code","526f5cb8":"code","10f23721":"code","14aae285":"code","30c339cb":"code","670085f1":"code","f972a957":"code","a202ee0f":"code","8e80910e":"code","8cb014e6":"code","ff2b3027":"code","419cdefd":"code","2b8f09d3":"code","72ca60d5":"code","2402ad77":"code","f617f796":"code","a344c706":"code","b70dd14b":"code","b7839bef":"code","dac107ac":"code","370448c8":"code","0939b773":"code","ce64c876":"markdown","5f6fb9f2":"markdown","bee9d607":"markdown","4fc241a7":"markdown","4280971e":"markdown","01a93003":"markdown","847de247":"markdown","57ac1aef":"markdown","6be615ec":"markdown"},"source":{"4d4bfd3f":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5b87f8fd":"db = pd.read_csv('\/kaggle\/input\/bank-marketing\/bank-additional-full.csv', sep=';')","8f9d2d6a":"#overview\n\ndb.head()","9ea46a18":"#checking variables type\n\ndb.info()","e1e10edb":"#Checking null values\ndb.isnull().sum()","8d09bc4c":"#Checking age dispersion\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='age')","1a9d130b":"#Count customers age > 60\n\ndb[db['age'] > 60].count()['age']","9a099eed":"#Age > 69 in %\na = db[db['age'] > 60].count()['age']\nb = db.count()['age']\n\nprint('The % of customers with age > 60 is', round((a\/b)*100, 2))","784e1f4e":"#Age < 60 in %\nc = db[db['age'] < 60].count()['age']\nb = db.count()['age']\n\nprint('The % of customers with age < 60 is', round((c\/b)*100, 2))","8ebe8d62":"#Checking age dispersion\n\nplt.figure(figsize=[20, 8])\npx.histogram(db[db['age'] > 60], x='age', color='marital')","80325bb3":"#Checking personal loan per age\n\nplt.figure(figsize=[20, 8])\npx.histogram(db[db['age'] > 60], x='age', color='loan')","3f758d28":"#Checking housing loan per age\n\nplt.figure(figsize=[20, 8])\npx.histogram(db[db['age'] > 60], x='age', color='housing')","c5aa02ed":"# Checking Total of Jobs\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='job')","8e203c41":"# Checking marital status\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='marital')","9ee05cec":"# Checking Education\n\nplt.figure(figsize=[20, 8])\npx.pie(db, names='education')","d8faa8fc":"# has credit in default?\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='default')","3c7702db":"#has personal loan?\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='loan')","9488230b":"db['month'].unique()","b4e1f232":"# converting month to date\n# creating dict to map\n#month_to_class = {'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6, 'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12}\n\n#replacing\n#db['month_n'] = db['month'].map(month_to_class)","b7de3c64":"# last contact month of year\n\nplt.figure(figsize=[20, 8])\npx.histogram(db, x='month')","fa8539b7":"db.head()","526f5cb8":"dbm = db[db['age'] < 66]","10f23721":"# Categoric count of unique values\ndbm[['job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'poutcome']].nunique()","14aae285":"dbm.columns","30c339cb":"dbm.head()","670085f1":"dbm['y'].value_counts()","f972a957":"# Converting target to numeric\nyconverter = {'no': 0, 'yes': 1}\n\n# replacing\ndbm['y'] = dbm['y'].map(yconverter)","a202ee0f":"dbmf = pd.get_dummies(dbm)","8e80910e":"dbmf.head()","8cb014e6":"from sklearn.model_selection import train_test_split\nfrom xgboost import XGBClassifier\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\n","ff2b3027":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, precision_score, recall_score, r2_score","419cdefd":"x = dbmf.drop('y', axis=1)\ny = dbmf['y']","2b8f09d3":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1)","72ca60d5":"# target variable balancing\n\nplt.subplots(figsize=(10,8))\n\nsns.countplot(dbmf['y'])\nplt.title('data balancing')\nplt.show()\n\n# counting\ndbmf['y'].value_counts()\n\n#0 if costumer subscribed a term deposit, 1 if not subscribed","2402ad77":"#balancing dataset for fitting\n\nfrom imblearn.under_sampling import RandomUnderSampler\nrus = RandomUnderSampler()\n\nx_rus, y_rus = rus.fit_resample(x_train, y_train)\n\nplt.figure(figsize=[10, 8])\nsns.countplot(y_rus)","f617f796":"# training the models\n\nrfc = RandomForestClassifier(random_state=1, n_estimators=1000)\nlr = LogisticRegression(random_state=1, solver='liblinear')\nxgbc = XGBClassifier(random_state=1, scale_pos_weight=8) #scale pos weight = 39491\/4969 = 8\n\nrfc.fit(x_rus, y_rus)\nlr.fit(x_rus, y_rus)\nxgbc.fit(x_train.values, y_train.values)\n\nrfc_pred = rfc.predict(x_test) #Random Forest Classifier\nlr_pred = lr.predict(x_test) #Logistic Regression\nxgbc_pred = xgbc.predict(x_test.values) #XGBoost Classifier","a344c706":"# creating baseline\nbaseline_preds = np.random.choice([0,1], size = len(y_test))\n\nbaseline_preds","b70dd14b":"rep = classification_report(y_test, baseline_preds)\nprint(f'Baseline report: \\n {rep}')\n\nbaseline_matrix = confusion_matrix(y_test, baseline_preds)\nsns.heatmap(baseline_matrix\/np.sum(baseline_matrix), annot=True, fmt='.2%')","b7839bef":"rep = classification_report(y_test, rfc_pred)\nprint(f'Random Forest Classifier report: \\n {rep}')\n\nrfc_matrix = confusion_matrix(y_test, rfc_pred)\nsns.heatmap(rfc_matrix\/np.sum(rfc_matrix), annot=True, fmt='.2%')","dac107ac":"rep = classification_report(y_test, lr_pred)\nprint(f'Logistic Regression report: \\n {rep}')\n\nlr_matrix = confusion_matrix(y_test, lr_pred)\nsns.heatmap(lr_matrix\/np.sum(lr_matrix), annot=True, fmt='.2%')","370448c8":"rep = classification_report(y_test, xgbc_pred)\nprint(f'XGBoost Classifier report: \\n {rep}')\n\nxgbc_matrix = confusion_matrix(y_test, xgbc_pred)\nsns.heatmap(xgbc_matrix\/np.sum(xgbc_matrix), annot=True, fmt='.2%')","0939b773":"print('Random Forest Recall: ', recall_score(y_test, rfc_pred))\nprint('Logistic Regression Recall: ', recall_score(y_test, lr_pred))\nprint('XGBoost Classifier Recall: ', recall_score(y_test, xgbc_pred))\nprint('Baseline Recall: ', recall_score(y_test, baseline_preds))\n\nprint('\\n')\n\nprint('XGBoost Classifier Precision: ', precision_score(y_test, xgbc_pred))\nprint('Logistic Regression Precision: ', precision_score(y_test, lr_pred))\nprint('Random Forest Precision: ', precision_score(y_test, rfc_pred))\nprint('Baseline Precision: ', precision_score(y_test, baseline_preds))\n\nprint('\\n')\n\nprint('XGBoost Classifier Accuracy: ', accuracy_score(y_test, xgbc_pred))\nprint('Logistic Regression Accuracy: ', accuracy_score(y_test, lr_pred))\nprint('Random Forest Accuracy: ', accuracy_score(y_test, rfc_pred))\nprint('Baseline Accuracy: ', accuracy_score(y_test, baseline_preds))","ce64c876":"# Bank Marketing\nThe data is related with direct marketing campaigns of a Portuguese banking institution. The marketing campaigns were based on phone calls. Often, more than one contact to the same client was required, in order to access if the product (bank term deposit) would be (or not) subscribed.\n\n**The classification goal is to predict if the client will subscribe a term deposit (variable y).**\n\nA term deposit is a **fixed-term investment** that includes the deposit of money into an account at a financial institution. Term deposit investments usually carry short-term maturities ranging from one month to a few years and will have varying levels of required minimum deposits.\n\n**NOTE**\n1.   This notebook aims at data analysis and model construction in general, the variables of the context in which the data were collected will NOT be used. Ex: Euribor (average interest rate on eurozone unsecured interbank loans), consumer price index, consumer confidence index, etc.\n\n2.   The 'bank-full' dataset has more data than the 'bank-additional-full'.","5f6fb9f2":"[According to the Portuguese Securities Market Commission (CMVM)](https:\/\/www.cmvm.pt\/pt\/EstatisticasEstudosEPublicacoes\/Estudos\/Pages\/O%20Perfil%20do%20Investidor%20Particular%20Portugu%C3%AAs.aspx?v=#:~:text=Em%20termos%20de%20idade%20(Painel,de%20idades%20e%20aquela%20percentagem.) (headquarters of the Bank), only approximately 7% of the population, over 65 years of age, invest in time deposit financial products and similar products. This will be our cut-off age of outliers for model creation.","bee9d607":"## Comparing Models","4fc241a7":"## Imports","4280971e":"## Model","01a93003":"## EDA","847de247":"Considering the character of fixed investment time, it is worth a detailed investigation of the variables in relation to age","57ac1aef":"## Valuation","6be615ec":"Available on UCI Dataset Repository\nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Bank+Marketing"}}