{"cell_type":{"b1141d6b":"code","d9bc17fa":"code","db16224b":"code","19cdafda":"code","b206c59e":"code","167b903c":"code","e0e0eb86":"code","a560756d":"code","48be8511":"code","fd5d8cd9":"code","ba9fb2bb":"code","21dc745d":"code","14a6d91e":"code","8c10f68e":"code","930a011e":"code","2aa73eac":"code","6c174193":"code","6fcf9325":"code","ae9f6d9d":"code","80d001cf":"code","b4d76896":"code","56d344b5":"code","70620a8b":"code","8322117b":"code","5403d588":"code","bd368c73":"code","3959e925":"code","9c773212":"code","6301a5bb":"code","5ff42abf":"code","f82f96fd":"code","06f873c7":"code","6a23572a":"code","6ff2cce3":"code","f720de96":"code","2d76c725":"code","c545536e":"code","59fe2ef6":"code","20dab5a1":"code","d00b9f78":"code","fa6d2eba":"code","3feb70f3":"code","11c80252":"code","bb3d9a9a":"code","527f6894":"code","f0bfa258":"code","8cd6eee0":"code","b09405d9":"code","c08f6639":"markdown","bc528154":"markdown","bdc76674":"markdown","abec8710":"markdown","7d930cc7":"markdown","11c32ae4":"markdown","89386dfc":"markdown","58446a12":"markdown","ab9d21fe":"markdown","ddb86023":"markdown","5bf7e901":"markdown","17031746":"markdown","bc62708e":"markdown","46a5b850":"markdown","8d53fbd4":"markdown","a18dcbb9":"markdown","ddbb0f56":"markdown","4fed3fb9":"markdown"},"source":{"b1141d6b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport seaborn as sns\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d9bc17fa":"#Import CV19 vaccination dataset\ndf = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv',engine='python')\ndf.head()","db16224b":"#Import economic dataset\ngm = pd.read_csv('\/kaggle\/input\/gap-minder-gdpgrowth\/gapminder_tidy.csv',engine='python')\ngm.head()","19cdafda":"#how many countries are present in the dataset\ndf['country'].nunique()","b206c59e":"#Number of countries\ndf.country.unique()","167b903c":"#get most recent year available from gapminder data \ngm_max_year = gm.groupby(['Country'])['Year'].max().reset_index()","e0e0eb86":"gm_max_year","a560756d":"#Join back to iteself to get the latest year available in economic data\ngm_max = gm.merge(gm_max_year,how='inner',on=['Country','Year'])","48be8511":"#Join to main dataset\ndf_gm = df.merge(gm_max,how='left',left_on='country',right_on='Country')","fd5d8cd9":"df_gm.head()","ba9fb2bb":"#GDP per capita\ndf_gm['gdp_per_capita'] = df_gm['gdp'] \/ df_gm['population']","21dc745d":"df_gm.isna().sum()","14a6d91e":"df_gm['region'] = df_gm['region'].fillna('Other')\ndf_gm['population'] = df_gm['population'].fillna(df_gm['population'].mean())\ndf_gm['life'] = df_gm['life'].fillna(df_gm['life'].mean())\ndf_gm['gdp'] = df_gm['gdp'].fillna(df_gm['gdp'].mean())","8c10f68e":"#Some data quality issues with null data\ndf_gm[df_gm['country']=='China'].tail()","930a011e":"#Fill NaN values for 'people_vaccinated_per_hundred'\n#Assume that people require 2 vaccinations\ndf_gm['people_fully_vaccinated_per_hundred'] =  np.where(df_gm['people_fully_vaccinated_per_hundred'].isna(),\n                                                   (df_gm['total_vaccinations_per_hundred'] \/2)  ,\n                                                   df_gm['people_fully_vaccinated_per_hundred'])","2aa73eac":"df_gm[df_gm['country']=='China'].tail()","6c174193":"#Region plot\ngraph = sns.lineplot(data=df_gm.sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='region')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","6fcf9325":"#GDP plot\ndf_gm['gdp_grp'] = pd.qcut(df_gm['gdp'],q=5)\ngraph = sns.lineplot(data=df_gm.sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='gdp_grp')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","ae9f6d9d":"#Life expectancy plot\ndf_gm['life_grp'] = pd.qcut(df_gm['life'],q=5)\ngraph = sns.lineplot(data=df_gm.sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='life_grp')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","80d001cf":"#Population plot\ndf_gm['population_grp'] = pd.qcut(df_gm['population'],q=5)\ngraph = sns.lineplot(data=df_gm.sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='population_grp')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","b4d76896":"#Top 10 GDP countries in the world vaccination rates\ngraph = sns.lineplot(data=df_gm[df_gm['iso_code'].isin(['GBR','IDN','BRA','RUS','DEU','JPN','IND','USA','CHN'])]\n                     .sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='country')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","56d344b5":"#Overall plot\nimport matplotlib.dates as mdates\ngraph = sns.lineplot(data=df.sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\")\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","70620a8b":"df_gm['vaccines'].unique()","8322117b":"#Origin of Vaccine, noting some are collaborations between nations\/ continents, notably Pfizer\/BioNTech is counted against both European\/ American.\ndf_gm['American_Vaccine'] = np.where(df_gm['vaccines'].str.contains('Johnson&Johnson|Moderna|Pfizer'),1,0)\ndf_gm['Russian_Vaccine'] = np.where(df_gm['vaccines'].str.contains('Sputnik V|EpiVacCorona'),1,0)\ndf_gm['Chinese_Vaccine'] = np.where(df_gm['vaccines'].str.contains('Sinopharm\/Beijing|Sinopharm\/Wuhan|Sinovac'),1,0)\ndf_gm['Indian_Vaccine'] = np.where(df_gm['vaccines'].str.contains('Covaxin'),1,0)\ndf_gm['European_Vaccine'] = np.where(df_gm['vaccines'].str.contains('Oxford|AstraZeneca|BioNTech'),1,0)","5403d588":"#import geo data\nimport geopandas as gpd\n## map plot based on country map\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nworld.head()","bd368c73":"#join new map data to existing CV19 vaccine dataframe\nmapped = world.set_index('iso_a3').join(df_gm.set_index('iso_code')).reset_index()","3959e925":"#mapped[mapped['iso_a3']=='USA']","9c773212":"#function to create map graph\ndef graph_world(feature):\n    to_be_mapped = feature\n    vmin, vmax = 0,100\n    fig, ax = plt.subplots(1, figsize=(25,25))\n\n    mapped.plot(column=to_be_mapped, cmap='Blues', linewidth=0.8, ax=ax, edgecolors='0.8')\n    ax.set_title('x', fontdict={'fontsize':30})\n    ax.set_axis_off()\n\n    sm = plt.cm.ScalarMappable(cmap='Blues', norm=plt.Normalize(vmin=vmin, vmax=vmax))\n    sm._A = []\n\n    cbar = fig.colorbar(sm, orientation='horizontal')\n","6301a5bb":"# Compare visually vaccination rates across world\ngraph_world('people_fully_vaccinated_per_hundred')","5ff42abf":"#Where are the American produced vaccines being used?\ngraph_world('American_Vaccine')","f82f96fd":"#Where are the Russian produced vaccines being used?\ngraph_world('Russian_Vaccine')","06f873c7":"#Where are the Chinese produced vaccines being used?\ngraph_world('Chinese_Vaccine')","6a23572a":"#Where are the Eurpean produced vaccines being used?\ngraph_world('European_Vaccine')","6ff2cce3":"#Where are the Indian produced vaccines being used?\ngraph_world('Indian_Vaccine')","f720de96":"top_10_vacc = list(df_gm[(~df_gm['people_fully_vaccinated_per_hundred'].isna())&(df_gm['date']=='2021-03-28')].sort_values(by='people_fully_vaccinated_per_hundred',ascending=False).head(10)['iso_code'])","2d76c725":"top_10_vacc","c545536e":"#Top 10 GDP countries in the world vaccination rates\ngraph = sns.lineplot(data=df_gm[df_gm['iso_code'].isin(top_10_vacc)]\n                     .sort_values(by=\"date\"), x=\"date\", y=\"people_fully_vaccinated_per_hundred\",hue='country')\ngraph.xaxis.set_major_locator(mdates.DayLocator(interval = 7))\n# graph.xaxis.set_major_formatter(mdates.DateFormatter('%Y:%M:%D'))\nplt.xticks(rotation = 90)\n\nplt.show()","59fe2ef6":"from fbprophet import Prophet\ndef fcast(cntry):\n    p = df_gm[df_gm['iso_code'].isin([cntry])].sort_values(by=\"date\")[['date',\"people_fully_vaccinated_per_hundred\"]]\n    p.columns = ['ds', 'y']\n    # define the model\n    model = Prophet()\n    # # fit the model\n    model.fit(p)\n    # define the period for which we want a prediction\n    future = list()\n    for i in range(1, 13):\n        date = '2021-%02d' % i\n        future.append([date])\n    for i in range(1, 13):\n        date = '2022-%02d' % i\n        future.append([date])    \n    future = pd.DataFrame(future)\n    future.columns = ['ds']\n    future['ds']= pd.to_datetime(future['ds'])\n    \n    # use the model to make a forecast\n    forecast = model.predict(future)\n    # summarize the forecast\n    print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head(10))\n    # plot forecast\n    model.plot(forecast)\n    plt.ylim(0, 100)\n    n_lower=forecast['yhat_lower'].sub(100).abs().idxmin()\n    n_upper=forecast['yhat_upper'].sub(100).abs().idxmin()\n    plt.title(cntry \n              + ' forecast of people_fully_vaccinated_per_hundred: 100% expected between ' \n              + forecast[n_upper:n_upper+1]['ds'].iloc[0].strftime('%Y-%m-%d') \n              + ' and ' \n              + forecast[n_lower:n_lower+1]['ds'].iloc[0].strftime('%Y-%m-%d'))\n    plt.show()","20dab5a1":"fcast('GIB')\n","d00b9f78":"fcast('ISR')","fa6d2eba":"fcast('ARE')","3feb70f3":"fcast('MDV')","11c80252":"fcast('CHL')","bb3d9a9a":"fcast('USA')","527f6894":"fcast('BHR')","f0bfa258":"fcast('SRB')","8cd6eee0":"fcast('OWID_WLS')","b09405d9":"fcast('QAT')","c08f6639":"Not perfect, but please upvote if you found this useful so that others may view to share thoughts, learnings and help me with feedback. Thanks ","bc528154":"4.1 Forecast with Prophet","bdc76674":"> #### 2.2 GDP","abec8710":"![image.png](attachment:image.png)","7d930cc7":"#### 2.1 Region","11c32ae4":"#### 2.4 Population","89386dfc":"## CV19 Vaccine Progress ","58446a12":"### 1. Import Data","ab9d21fe":"#### 2.5 Top 10 GDP countries in the world vaccination rates","ddb86023":"#### 2.3 Life Expectancy","5bf7e901":"### 3. World Map Plots","17031746":"#### 2.6 Overall","bc62708e":"### 4. Forecast ","46a5b850":"Looking to predict when people_vaccinated_per_hundred would potentially reach 100% coverage for certain countries. Let's go with the top 10 countries vaccinated to date to give us a decent history to forecast from. Let's plot the top 10 to remind ourselves:","8d53fbd4":"<b>Purpose:<\/b> To explore the CV19 Vaccination dataset with the below ideas<br>\n* Split into segments and view vaccincation progress\n* View mapping of world charts as above and what countries are using what vaccines\n* Time to threshold (e.g. 50%, 75%) vaccincated population, based on forecast, assuming same trends continue.\n\n","a18dcbb9":"There would clearly be many factors that will influence actuals to deviate from the forecasted rate or even the reliability of this data as we encountered some NaN's. It will be interesting to monitor this over the coming months, such as:\n* How far along a country is in the vaccination process, e.g. if they have only just begun vaccination, we may only have a tiny sample of data, meaning forecasting is difficult or not appropriate just yet.\n* Anti-vax movement.\n* Any health side-effects e.g. the pausing AstraZeneca due to potential blood clot investigation.\n* Ramping up\/ down of production\/ supply in various countries, including hoarding and restricting exports of vaccines, or countries that reach a saturation point in vaccinations will then be able to supply more to others.\n* We wouldn't likely ever reach 100% levels, not everyone is recommended to take the vaccine for example, due to other existing health conditions or by choice as above.\n","ddbb0f56":"\"I'd much rather have a vaccine than this virus' - Paul A Voldenburg MD <br>\n\"We were standing on one side of a massive river of uncertainty and hardship... we\u2019re now seeing the other side of the river\u201d Christine LaGarde, President ECB","4fed3fb9":"### 2. Vaccination rates by region, by gdp, by life expectancy etc."}}