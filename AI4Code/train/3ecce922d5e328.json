{"cell_type":{"e8747628":"code","c7318804":"code","b1e244b2":"code","ce26a73c":"code","22db434a":"code","6a98e983":"code","37960b33":"code","155b727b":"code","31f166e2":"code","cb3ad159":"code","1e93d62b":"code","45900a6e":"code","a076751d":"code","9ef2771d":"code","200d6fbd":"code","64e9bf11":"code","52cd0b68":"code","7dff66d9":"code","4444641f":"code","716892bd":"code","78655adc":"code","316fb212":"code","f0a45ed8":"code","ce2a81d8":"code","7e38b90b":"markdown","b4dc90be":"markdown","a4c0c81d":"markdown","ebe15a28":"markdown","d87d07cd":"markdown","aad58ddd":"markdown"},"source":{"e8747628":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math as ma\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c7318804":"df=pd.read_csv('..\/input\/iris\/Iris.csv')","b1e244b2":"df.head()","ce26a73c":"df.shape","22db434a":"df.info()","6a98e983":"plt.subplot(221)\nsns.distplot(df['SepalLengthCm'])\nplt.subplot(222)\nsns.distplot(df['SepalWidthCm'])\nplt.subplot(223)\nsns.distplot(df['PetalLengthCm'])\n\nplt.subplot(224)\nsns.distplot(df['PetalWidthCm'])\nplt.show()","37960b33":"df['Species'].value_counts()","155b727b":"P=50\/100","31f166e2":"df[df['Species']=='Iris-setosa'].std() \n","cb3ad159":"df[df['Species']=='Iris-versicolor'].std() \n","1e93d62b":"df[df['Species']=='Iris-virginica'].std() ","45900a6e":"df[df['Species']=='Iris-setosa'].mean() ","a076751d":"df[df['Species']=='Iris-versicolor'].mean() \n","9ef2771d":"df[df['Species']=='Iris-virginica'].mean() ","200d6fbd":"def cal(x,m,s):\n    num = ma.exp(-0.5*np.square((x-m)\/s))\n    den = s*ma.sqrt(2*ma.pi)\n                              \n    return(num\/den)","64e9bf11":"## Iris-setosa\n                   #std(s)   #mean(m)\n#SepalLengthCm     0.352490   5.006\n#SepalWidthCm      0.381024   3.418\n#PetalLengthCm     0.173511   1.464\n#PetalWidthCm      0.107210   0.244","52cd0b68":"P_Setosa=cal(4.7,5.006,0.352490)*cal(3.7,3.418,0.381024)*cal(2,1.464,1.173511)*cal(0.3,0.244,0.107210)*P\nP_Setosa","7dff66d9":"## Iris-versicolor\n                   #std(s)   #mean(m)\n#SepalLengthCm     0.516171   5.936     \n#SepalWidthCm      0.313798   2.770\n#PetalLengthCm     0.469911   4.260\n#PetalWidthCm      0.197753   1.326","4444641f":"P_Versicolor=cal(4.7,5.936,0.516171)*cal(3.7,2.770,0.313798)*cal(2,4.260,0.469911)*cal(0.3,1.326, 0.197753)*P\nP_Versicolor","716892bd":"## Iris-virginica\n                  #std(s)    #mean(m)\n#SepalLengthCm     0.635880   6.588\n#SepalWidthCm      0.322497   2.974\n#PetalLengthCm     0.551895   5.552\n#PetalWidthCm      0.274650   2.026","78655adc":"P_Virginica=cal(4.7,6.588,0.635880)*cal(3.7,2.974,0.322497)*cal(2,5.552,0.551895)*cal(0.3,2.026,0.274650)*P\nP_Virginica","316fb212":"P_Setosa>P_Virginica","f0a45ed8":"P_Setosa>P_Versicolor","ce2a81d8":"probability,species = [P_Setosa,P_Versicolor,P_Virginica],['Iris-setosa','Iris-versicolor','Iris-virginica']\nprint('Predicted species is : {}'.format(species[probability.index(max(probability))]))","7e38b90b":"## Mean Determination","b4dc90be":"## Here, I have to predicted the species of a flower by training our model on the Iris Dataset with the given input points using Naive Bayes.\n\n## Input Points\n\n## {SL=4.7, SW=3.7,PL=2,PW=0.3}","a4c0c81d":"## Let's see the model's prediction","ebe15a28":"## P(Species\/SL=4.7, SW=3.7,PL=2,PW=0.3)=P(SL=4.7\/Species)P(SW=3.7\/Species)P(PL=2\/Species)P(PW=0.3\/Species)P(Species)","d87d07cd":"## SD Determination","aad58ddd":"## So, according to Naive Bayes the flower is Setosa"}}