{"cell_type":{"e3915501":"code","44da68fa":"code","d6551c8c":"code","0cad4d44":"code","8384dfdc":"code","098afccf":"code","1509015d":"code","0b55a865":"code","14cac96d":"code","fec524e1":"code","ba1bd5d4":"code","25d0aec9":"code","41b11fb8":"code","c700329b":"code","c1336911":"code","86f0939d":"code","7fa833d8":"code","1698ab28":"code","dd4669a7":"code","a9333aac":"code","3fd24439":"code","484f45f7":"code","da2539d3":"code","0e5f4b1e":"code","be428434":"code","c970146b":"code","e4fd9d8b":"code","b23b9dc6":"code","37ed1a2c":"code","3d881290":"code","d9db048c":"code","7d181581":"code","e7512edd":"code","f96eb9d0":"code","55a8da21":"code","f07dda18":"code","ceac6b93":"code","23e255d9":"code","5f72d4fd":"code","0484541f":"code","77f18fa8":"code","5fe3cafa":"code","b14a1c0d":"code","18b26ea4":"code","e32f8bde":"code","66407b34":"code","1edd1e68":"code","3a2c9476":"code","e5d9fb9f":"code","b4b37508":"code","22462198":"code","4a15f22a":"code","9484c595":"code","c0aa3f46":"code","ea7b7200":"code","c66bf852":"code","4f566643":"code","72ddd28c":"code","30224d24":"code","3b7e89d1":"code","147645ac":"code","f6eb7462":"code","97b3d239":"code","8dbc08da":"code","b7080830":"code","ebbcafff":"markdown","7f67d8b1":"markdown","9fb03548":"markdown","744507b2":"markdown","ea9d1d74":"markdown","618dc5fe":"markdown","e95cda6d":"markdown","fb209e9a":"markdown","befd5fdf":"markdown","e8d7c3cb":"markdown","69cb728c":"markdown","9bf9b52b":"markdown","ab57025a":"markdown","e6d34e97":"markdown","f861f9d7":"markdown","ba9e8802":"markdown","222007aa":"markdown","02a6a897":"markdown","ddc0373a":"markdown","971d328e":"markdown","81ec1f87":"markdown","1e653796":"markdown","37e99b8c":"markdown","84a114cd":"markdown","ceaef0ba":"markdown","90a971dd":"markdown","9da3e74d":"markdown","ea0b63df":"markdown","ee923dcb":"markdown","8a572a6c":"markdown","4dbc94c8":"markdown","651593e4":"markdown","52342986":"markdown","18473335":"markdown","d1d58083":"markdown","892e38a5":"markdown","966d7b0b":"markdown","969d47e6":"markdown","bc49ea1f":"markdown","8e835dca":"markdown","d9ed6c83":"markdown","ffeb4b88":"markdown","748f903e":"markdown","b35735bb":"markdown","f0a851a6":"markdown","9dc553c8":"markdown","a6d05334":"markdown","958047e0":"markdown","ae9d0bc5":"markdown"},"source":{"e3915501":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV\nimport xgboost as xgb\nfrom sklearn.metrics import confusion_matrix, classification_report,accuracy_score\nimport plotly.io as pio\npio.renderers.default='notebook'","44da68fa":"df=pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')","d6551c8c":"df.head()","0cad4d44":"df.shape","8384dfdc":"df.info()","098afccf":"100*df.isnull().sum()\/df.shape[0]","1509015d":"pd.get_dummies(df['Gender'].dropna(), drop_first=True).median()","0b55a865":"df['Gender']=df['Gender'].fillna('Male')   ","14cac96d":"df['Dependents'].unique()","fec524e1":"df['Dependents'].dtypes","ba1bd5d4":"le=LabelEncoder()\nle.fit(df['Dependents'].dropna())\npd.Series(le.transform(df['Dependents'].dropna())).median()","25d0aec9":"df['Dependents']=df['Dependents'].fillna('0')   ","41b11fb8":"df['Self_Employed'].unique()","c700329b":"pd.get_dummies(df['Self_Employed'].dropna(), drop_first=True).median()","c1336911":"df['Self_Employed']=df['Self_Employed'].fillna('No')   ","86f0939d":"df['LoanAmount']=df['LoanAmount'].fillna(df['LoanAmount'].mean())   ","7fa833d8":"df['Loan_Amount_Term'].unique()","1698ab28":"df['Loan_Amount_Term']=df['Loan_Amount_Term'].fillna(df['Loan_Amount_Term'].median())   ","dd4669a7":"df['Credit_History'].unique()","a9333aac":"df['Credit_History']=df['Credit_History'].fillna(df['Credit_History'].median())   ","3fd24439":"df.dropna(inplace=True)","484f45f7":"df.isnull().sum()","da2539d3":"df.columns=df.columns.str.lower()","0e5f4b1e":"df.columns=['loan_id', 'gender', 'married', 'dependents', 'education','self_employed', 'applicant_income', 'co-applicant_income', 'loan_amount', 'loan_amount_term', 'credit_history', 'property_area', 'loan_status']","be428434":"df.head(2)","c970146b":"df.shape","e4fd9d8b":"df.describe()","b23b9dc6":"df[df['loan_status']=='Y'].count()['loan_status']","37ed1a2c":"df[df['loan_status']=='N'].count()['loan_status']","3d881290":"plt.figure(figsize=(10,10))\nplt.pie(x=[419,192], labels=['Yes','No'], autopct='%1.0f%%', pctdistance=0.5,labeldistance=0.7,shadow=True, startangle=90, colors=['limegreen', 'deeppink'], textprops={'fontsize':14})\nplt.title('Distribution of Loan Status', fontsize=18)\nplt.show()","d9db048c":"plt.figure(figsize=(15,10))\n\nplt.subplot(2,3,1)\nsns.countplot(x='gender' ,hue='loan_status', data=df,palette='plasma')\nplt.xlabel('Gender', fontsize=14)\nplt.ylabel('Number', fontsize=14)\n\nplt.subplot(2,3,2)\nsns.countplot(x='married',hue='loan_status',data=df,palette='viridis')\nplt.ylabel(' ')\nplt.yticks([ ])\nplt.xlabel('Married', fontsize=14)\nplt.title('The Impacts Of Different Factors On Loan Status\\n', fontsize=18)\n\nplt.subplot(2,3,3)\nsns.countplot(x='education',hue='loan_status',data=df,palette='copper')\nplt.xlabel('Education', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\n\nplt.subplot(2,3,4)\nsns.countplot(x='credit_history', data=df,hue='loan_status',palette='summer')\nplt.xlabel('Credit History', fontsize=14)\nplt.ylabel('Number', fontsize=14)\n\nplt.subplot(2,3,5)\nsns.countplot(x='self_employed',hue='loan_status',data=df,palette='autumn')\nplt.xlabel('Self Employed', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\n\nplt.subplot(2,3,6)\nsns.countplot(x='property_area',hue='loan_status',data=df,palette='PuBuGn')\nplt.xlabel('Property Area', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\nplt.show()","7d181581":"df['married_revised']=df['married'].apply(lambda x: 'Married' if x=='Yes' else 'Single')","e7512edd":"df['loan_status_revised']=df['loan_status'].apply(lambda x: 'Receive Loan' if x=='Y' else 'Not Receive Loan')","f96eb9d0":"fig=px.sunburst( data_frame=df,path=['gender','married_revised','education','loan_status_revised'], color='loan_amount', color_continuous_scale='rainbow', height=800, width=800)\nfig.update_layout(\n    title={\n        'text': 'Loan Status Versus Gender, Marrital Status And Education \\n',\n        'y':0.92,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","55a8da21":"df.drop(['married_revised','loan_status_revised'], axis=1, inplace=True)","f07dda18":"plt.figure(figsize=(15,10))\n\nplt.subplot(2,3,1)\nsns.violinplot(x='gender', y='loan_amount',hue='loan_status', data=df,palette='plasma')\nplt.xlabel('Gender', fontsize=14)\nplt.ylabel('Loan Amount', fontsize=14)\n\nplt.subplot(2,3,2)\nsns.violinplot(x='married',y='loan_amount',hue='loan_status',data=df,palette='viridis')\nplt.xlabel('Married', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\nplt.title('The Impacts Of Different Factors On The Amount Of Loans\\n', fontsize=18)\n\nplt.subplot(2,3,3)\nsns.violinplot(x='education',y='loan_amount',hue='loan_status',data=df,palette='copper')\nplt.xlabel('Education', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\n\nplt.subplot(2,3,4)\nsns.violinplot(x='credit_history',y='loan_amount', data=df,hue='loan_status',palette='summer')\nplt.xlabel('Credit History', fontsize=14)\nplt.ylabel('Loan Amount', fontsize=14)\n\nplt.subplot(2,3,5)\nsns.violinplot(x='self_employed',y='loan_amount',hue='loan_status',data=df,palette='autumn')\nplt.xlabel('Self Employed', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\n\nplt.subplot(2,3,6)\nsns.violinplot(x='property_area', y='loan_amount',data=df,hue='loan_status',palette='PuBuGn')\nplt.xlabel('Property Area', fontsize=14)\nplt.ylabel(' ')\nplt.yticks([ ])\nplt.show()","ceac6b93":"plt.figure(figsize=(18,5))\n\nplt.subplot(1,3,1)\nsns.distplot(df['applicant_income'],bins=30,color='deeppink',hist_kws=dict(edgecolor='black'))\nplt.xlabel('Applicant Income', fontsize=14)\nplt.ylabel('Frequency', fontsize=14)\n\nplt.subplot(1,3,2)\nsns.distplot(df['co-applicant_income'],bins=30,color='cyan',hist_kws=dict(edgecolor='black'))\nplt.xlabel('Co-Applicant Income', fontsize=14)\nplt.title('Distribution Of Applicant Income, Co-Applicant Income and Loan Ammount\\n', fontsize=18)\n\nplt.subplot(1,3,3)\nsns.distplot(df['loan_amount'],bins=30,color='lime',hist_kws=dict(edgecolor='black'))\nplt.xlabel('Loan Ammount', fontsize=14)\nplt.show()","23e255d9":"fig=px.scatter_3d(data_frame=df,x='applicant_income',y='co-applicant_income',z='loan_amount',color='loan_status')\nfig.update_layout(\n    title={\n        'text': 'Relationship Between Applicant Income, Co-Applicant Income and Loan Ammount',\n        'y':0.92,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","5f72d4fd":"le1=LabelEncoder()\nle1.fit(df['gender'])\ndf['gender']=le1.transform(df['gender'])","0484541f":"le2=LabelEncoder()\nle2.fit(df['married'])\ndf['married']=le2.transform(df['married'])","77f18fa8":"le3=LabelEncoder()\nle3.fit(df['education'])\ndf['education']=le3.transform(df['education'])","5fe3cafa":"le4=LabelEncoder()\nle4.fit(df['self_employed'])\ndf['self_employed']=le4.transform(df['self_employed'])","b14a1c0d":"le5=LabelEncoder()\nle5.fit(df['property_area'])\ndf['property_area']=le5.transform(df['property_area'])","18b26ea4":"le6=LabelEncoder()\nle6.fit(df['dependents'])\ndf['dependents']=le6.transform(df['dependents'])","e32f8bde":"X=df.drop(['loan_id','loan_status'],axis=1)\ny=df['loan_status']","66407b34":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state=0)","1edd1e68":"lr=LogisticRegression()\nlr.fit(X,y)\npredictions_lr=lr.predict(X_test)","3a2c9476":"print(confusion_matrix(y_test,predictions_lr))\nprint('\\n')\nprint(classification_report(y_test,predictions_lr))","e5d9fb9f":"dtc=DecisionTreeClassifier()\ndtc.fit(X_train,y_train)\npredictions_dtc=dtc.predict(X_test)","b4b37508":"print(confusion_matrix(y_test,predictions_dtc))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions_dtc))","22462198":"rfc=RandomForestClassifier(n_estimators=200)\nrfc.fit(X_train,y_train)\npredictions_rfc=rfc.predict(X_test)","4a15f22a":"print(confusion_matrix(y_test,predictions_rfc))\nprint('\\n')\nprint(classification_report(y_test,predictions_rfc))","9484c595":"error_rate=[]\nfor n in range(1,40):\n    knn=KNeighborsClassifier(n_neighbors=n)\n    knn.fit(X_train, y_train)\n    predictions_knn=knn.predict(X_test)\n    error_rate.append(np.mean(predictions_knn!=y_test))","c0aa3f46":"plt.figure(figsize=(10,7))\nsns.set_style('whitegrid')\nplt.plot(list(range(1,40)),error_rate,color='royalblue', marker='o', linewidth=2, markersize=12, markerfacecolor='deeppink', markeredgecolor='deeppink')\nplt.xlabel('Number of Neighbors', fontsize=14)\nplt.ylabel('Error Rate', fontsize=14)\nplt.title('Elbow Method', fontsize=18)\nplt.show()","ea7b7200":"knn=KNeighborsClassifier(n_neighbors=10)\nknn.fit(X_train, y_train)\npredictions_knn=knn.predict(X_test)","c66bf852":"print(confusion_matrix(y_test,predictions_knn))\nprint('\\n')\nprint(classification_report(y_test,predictions_knn))","4f566643":"svc=SVC()\nsvc.fit(X_train,y_train)\npredictions_svc=svc.predict(X_test)","72ddd28c":"print(confusion_matrix(y_test,predictions_svc))\nprint('\\n')\nprint(classification_report(y_test,predictions_svc))","30224d24":"param_grid={'C':[0.1,1,10,100,1000], 'gamma':[1,0.1,0.01,0.001], 'kernel':['rbf']}","3b7e89d1":"gs=GridSearchCV(SVC(),param_grid, verbose=3)\ngs.fit(X_train,y_train)\npredictions_gs=gs.predict(X_test)","147645ac":"print(confusion_matrix(y_test,predictions_gs))\nprint('\\n')\nprint(classification_report(y_test,predictions_gs))","f6eb7462":"xgbc=xgb.XGBClassifier(n_estimators=200, learning_rate=0.08, gamma=0, subsample=0.5,colsample_bytree=1, max_depth=8)\nxgbc.fit(X_train,y_train)","97b3d239":"predictions_xgbc=xgbc.predict(X_test)","8dbc08da":"print(confusion_matrix(y_test,predictions_xgbc))\nprint('\\n')\nprint(classification_report(y_test,predictions_xgbc))","b7080830":"print('Accuracy Score, Logistic Regression: ', round(accuracy_score(y_test,predictions_lr),ndigits=4))\nprint('Accuracy Score, Decision Tree Classifier: ', round(accuracy_score(y_test,predictions_dtc),ndigits=4))\nprint('Accuracy Score, Random Forest Classifier: ', round(accuracy_score(y_test,predictions_rfc),ndigits=4))\nprint('Accuracy Score, K-Nearest Neighbors Classifier: ', round(accuracy_score(y_test,predictions_knn),ndigits=4))\nprint('Accuracy Score, Support Vector Classifier: ', round(accuracy_score(y_test,predictions_gs),ndigits=4))\nprint('Accuracy Score, XGBoost Classifier: ', round(accuracy_score(y_test,predictions_xgbc), ndigits=4))","ebbcafff":"### XGBoost Classifier","7f67d8b1":"We rename some of the columns.","9fb03548":"So we conclude that Logistic Regression with the accuracy of 82.11% is the best model to predict whether the bank will approve the loan or not.","744507b2":"## Importing Libraries","ea9d1d74":"**Married**","618dc5fe":"**Married**","e95cda6d":"**Gender**","fb209e9a":"Now we analyze the distribution of applicant_income, co-applicant_income and loan_amount.","befd5fdf":"## Exploratory Data Analysis","e8d7c3cb":"**Loan_Amount_Term**","69cb728c":"We can see that even optimization of SVC model by Grid Search does not improve the accuracy.","9bf9b52b":"**Self Employed**","ab57025a":"Now we visualize the impacts of different factors on the amount of loans.","e6d34e97":"To improve the results obtained by SVC, we use GridSearchCV and define C and gamma parameters.","f861f9d7":"**Dependents**","ba9e8802":"### Decision Tree Classifier","222007aa":"From the above analysis, it can be concluded that:\n\n- Male Individuals have more chance of receiving the Loan.\n\n- Married Individuals have more chance of receiving the Loan.\n   \n- Graduate Individuals have more chance of receiving the Loan.\n    \n- Not Self-Employed have more chance of receiving the Loan.\n\n- Individuals with a credit history have more chance of receiving the Loan.\n    \n- People living in Semi-Urban Area have more chance to receive the Loan.","02a6a897":"Here we visualize the relationship between applicant_income, co-applicant_income and loan_amount.","ddc0373a":"### Support Vector Classifier","971d328e":"## Data Cleaning","81ec1f87":"The dataset used this project is retrieved from kaggle, the home of Data Science. There are three parts to our report, as follows:\n\n-  Data Cleaning and Feature Engineering \n-  Exploratory Data Analysis \n-  Prediction of Loan Status \n\nThe major objective of this project is to predict whether the bank will approve the loan based on certain information. Therefore, this is a supervised classification problem to be trained. Algorithms tested for this project include Logistic Regression, Decision Tree Classifier, Random Forest Classifier, KNearest Neighbors, Support Vector Classifier and XGBoost Classifier. Hyperparametric tuning will be performed by sklearn's GridSearchCV. We will compare the results of these models to discover which algorithm works better for this specific dataset.","1e653796":"Now we illustrate the loan status versus the gender, marrital status and education of individuals.","37e99b8c":"**Property Area**","84a114cd":"We can see that bank approves loans requested by 69% of applicants and does not approve loans requested by 39% of applicants.","ceaef0ba":"**Credit_History**","90a971dd":"**Dependents**","9da3e74d":"Let's find visualize the impacts of different factors on loan status.","ea0b63df":"## Feature Engineering","ee923dcb":"**Education**","8a572a6c":"### K-Nearest Neighbors Classifier","4dbc94c8":"Fianlly the Married column that contain less than 0.5% null values is remained, and we drop the rows of df that contain these null values.","651593e4":"# ![2.jpg](attachment:2.jpg)","52342986":"#  <center>  Predicting Loan Eligibility By Machine Learning Algorithms <center> ","18473335":"### Splitting the Data","d1d58083":"## Conclusion","892e38a5":"## Introduction","966d7b0b":"We want to figure out how many applicants are eligible for loan.","969d47e6":"## Loading Dataset","bc49ea1f":"-  We performed Data Cleaning and Feature Engineering to convert the dataset to an acceptable format.\n\n-  We performed Exploratory Data Analysis and visualized the loan status versus different features.\n\n- Logistic Regression algorithm with the accuracy of 82.11% was the best model for predicting whether the bank will approve the requested loans.","8e835dca":"## Predicting Loan Status","d9ed6c83":"**LoanAmount**","ffeb4b88":"First we create a dataframe that shows the percentage of null values in each column of df.","748f903e":"Now we select the columns that contain between 0.5% and 70% null values, and replace the null values with the mean (for numerical columns) or median (for categorical columns) of each column.","b35735bb":"### Random Forest Classifier","f0a851a6":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Introduction<\/a><\/span><\/li><li><span><a href=\"#Importing-Libraries\" data-toc-modified-id=\"Importing-Libraries-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Importing Libraries<\/a><\/span><\/li><li><span><a href=\"#Loading-Dataset\" data-toc-modified-id=\"Loading-Dataset-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Loading Dataset<\/a><\/span><\/li><li><span><a href=\"#Data-Cleaning\" data-toc-modified-id=\"Data-Cleaning-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Data Cleaning<\/a><\/span><\/li><li><span><a href=\"#Feature-Engineering\" data-toc-modified-id=\"Feature-Engineering-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;<\/span>Feature Engineering<\/a><\/span><\/li><li><span><a href=\"#Exploratory-Data-Analysis\" data-toc-modified-id=\"Exploratory-Data-Analysis-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;<\/span>Exploratory Data Analysis<\/a><\/span><\/li><li><span><a href=\"#Predicting-Loan-Status\" data-toc-modified-id=\"Predicting-Loan-Status-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;<\/span>Predicting Loan Status<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Encoding-Categorical-Variables\" data-toc-modified-id=\"Encoding-Categorical-Variables-7.1\"><span class=\"toc-item-num\">7.1&nbsp;&nbsp;<\/span>Encoding Categorical Variables<\/a><\/span><\/li><li><span><a href=\"#Splitting-the-Data\" data-toc-modified-id=\"Splitting-the-Data-7.2\"><span class=\"toc-item-num\">7.2&nbsp;&nbsp;<\/span>Splitting the Data<\/a><\/span><\/li><li><span><a href=\"#Logistic-Regression\" data-toc-modified-id=\"Logistic-Regression-7.3\"><span class=\"toc-item-num\">7.3&nbsp;&nbsp;<\/span>Logistic Regression<\/a><\/span><\/li><li><span><a href=\"#Decision-Tree-Classifier\" data-toc-modified-id=\"Decision-Tree-Classifier-7.4\"><span class=\"toc-item-num\">7.4&nbsp;&nbsp;<\/span>Decision Tree Classifier<\/a><\/span><\/li><li><span><a href=\"#Random-Forest-Classifier\" data-toc-modified-id=\"Random-Forest-Classifier-7.5\"><span class=\"toc-item-num\">7.5&nbsp;&nbsp;<\/span>Random Forest Classifier<\/a><\/span><\/li><li><span><a href=\"#K-Nearest-Neighbors-Classifier\" data-toc-modified-id=\"K-Nearest-Neighbors-Classifier-7.6\"><span class=\"toc-item-num\">7.6&nbsp;&nbsp;<\/span>K-Nearest Neighbors Classifier<\/a><\/span><\/li><li><span><a href=\"#Support-Vector-Classifier\" data-toc-modified-id=\"Support-Vector-Classifier-7.7\"><span class=\"toc-item-num\">7.7&nbsp;&nbsp;<\/span>Support Vector Classifier<\/a><\/span><\/li><li><span><a href=\"#XGBoost-Classifier\" data-toc-modified-id=\"XGBoost-Classifier-7.8\"><span class=\"toc-item-num\">7.8&nbsp;&nbsp;<\/span>XGBoost Classifier<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Conclusion\" data-toc-modified-id=\"Conclusion-8\"><span class=\"toc-item-num\">8&nbsp;&nbsp;<\/span>Conclusion<\/a><\/span><\/li><\/ul><\/div>","9dc553c8":"### Logistic Regression","a6d05334":"**Self_Employed**","958047e0":"### Encoding Categorical Variables","ae9d0bc5":"**Gender**"}}