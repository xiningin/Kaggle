{"cell_type":{"c7c8f501":"code","e8aa93b9":"code","a13705e8":"code","be6f2b80":"code","e28976bf":"code","aeb4f3e5":"code","b8fe32df":"code","27bbf89a":"code","eca0eccd":"code","bba1b169":"code","3b7842bb":"code","be019cdd":"code","3e9b2297":"code","b9fad9dc":"code","9574e837":"code","425a5219":"code","2ffc51ac":"code","5b12eb7e":"code","fd0b4493":"code","5be281e3":"code","c6746be8":"code","3eb95dcc":"code","ecfc0e15":"code","47c5be86":"code","95d7fb66":"code","68df24f5":"code","477c68b0":"code","9d77c609":"code","1199dffc":"code","7652b743":"code","db305157":"code","7f21ced7":"code","64abccbf":"code","5dc3b5e2":"code","cfbfd0e1":"code","09f239d8":"code","b1b1a0db":"code","7947d5b4":"code","e11e644d":"code","7b9d3abe":"code","0f5fe164":"code","a81d51d7":"code","ad63b702":"code","4c978ad4":"code","1790b320":"code","88701e62":"code","6c8925fc":"code","796d3ddc":"code","ad1cbda8":"code","05593a09":"code","40f439f6":"code","d9d1d571":"code","005daf03":"code","306cc16f":"code","d8bbbed2":"code","ce5b2286":"markdown","0ae71762":"markdown","1f32af78":"markdown","030211bc":"markdown","4fa01c52":"markdown","98b82eb0":"markdown"},"source":{"c7c8f501":"#drive.mount('\/content\/drive')","e8aa93b9":"import seaborn as sns\nimport numpy as np\nfrom sklearn.metrics import log_loss\nimport pandas as pd\nfrom scipy.stats import skew,kurtosis,zscore\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\n","a13705e8":"df = pd.read_csv(\"..\/input\/machinehack-ml-merchandise-popularity-prediction\/MPP_Dataset\/Train.csv\")","be6f2b80":"df.head(5)","e28976bf":"df['hour'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.hour\ndf['month'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.month\ndf['day'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.day\ndf['year'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.year\ndf['minute'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.minute","aeb4f3e5":"# '''if df.week.all() < 5:\n\n#   df['week'] = 0\n# else:\n#   df['week'] = 1'''","b8fe32df":"df.head(2)","27bbf89a":"df.info()","eca0eccd":"df.skew()","bba1b169":"def distribution_check(df,Cols):\n    plt.figure(figsize=(12,7))\n    fig = 1\n    i = (len(Cols)\/\/3)+1\n    for col in Cols:\n        sk = \" Skewness : \" + str(skew(df[col])) +\"\\nKurtosis :\" + str(kurtosis(df[col]))\n        plt.subplot(i, 3, fig)\n        sns.distplot(df[col]).set_title(sk)\n        fig = fig+1","3b7842bb":"distribution_check(df,['Score_2'])","be019cdd":"#df['Score_2'] = np.log(df['Score_2'])","3e9b2297":"distribution_check(df,['time'])","b9fad9dc":"df.isnull().sum()","9574e837":"df.popularity.nunique()","425a5219":"y = df[['popularity']]\ndf = df.drop([\"popularity\",\"time\",\"Basket_Ratio\"],1)","2ffc51ac":"X = df","5b12eb7e":"import seaborn as sns\ncorr = X.corr()\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True), square=True)","fd0b4493":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()","5be281e3":"#y = np.array(y)","c6746be8":"from sklearn import preprocessing\n#y = preprocessing.label_binarize(y, classes=[0, 1, 3,4,5])","3eb95dcc":"X = scaler.fit_transform(X,1)\nX","ecfc0e15":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.05, random_state = 42)","47c5be86":"from imblearn.over_sampling import ADASYN\nfrom collections import Counter","95d7fb66":"counter = Counter(y_train)","68df24f5":"smt = ADASYN()\nX_train_sm,y_train_sm = smt.fit_resample(X_train,y_train)","477c68b0":"counter = Counter(y_train_sm)","9d77c609":"print(counter)","1199dffc":"class_weight=dict({4:60,0:100,3:85,5:90,1:90})","7652b743":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier(n_estimators = 1000,class_weight=class_weight,verbose = 1,n_jobs = -1,random_state = 42)","db305157":"%%time\n\nclf.fit(X_train, y_train)\n\npred_new = clf.predict(X_test)","7f21ced7":"pred_new = clf.predict(X_test)","64abccbf":"print (\"Accuracy of test set\",accuracy_score(y_test, pred_new)*100,\"%\")","5dc3b5e2":"pred_log = clf.predict_proba(X_test)\nprint (\"log loss of test set\",log_loss(y_test, pred_log))","cfbfd0e1":"0.3362938412561886","09f239d8":"param_grid = { \n    'n_estimators': [200, 500,300],\n    'max_features': ['auto', 'sqrt', 'log2'],\n    'max_depth' : [4,5,6,7,8,10],\n    'criterion' :['gini', 'entropy']\n}\nfrom sklearn.model_selection import GridSearchCV","b1b1a0db":"CV_rfc = GridSearchCV(estimator=clf, param_grid=param_grid, cv= 3)\nCV_rfc.fit(X_train, y_train)","7947d5b4":"CV_rfc.best_params_","e11e644d":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\n\nlr.fit(X_train, y_train)","7b9d3abe":"pred = lr.predict(X_test)\npred1 = lr.predict(X_train)","0f5fe164":"print (\"Accuracy of test set\",accuracy_score(y_test, pred)*100,\"%\")\nprint (\"Accuracy of training set\",accuracy_score(y_train, pred1)*100,\"%\")","a81d51d7":"import lightgbm as lgb\ntrain = lgb.Dataset(X_train, label=y_train)\ntest = lgb.Dataset(X_test, label=y_test)","ad63b702":"param = {'objective': 'multiclass',\n         'num_iterations': 1000,\n         'learning_rate': 0.01,  \n         'num_leaves': 23,\n         'verbose':0,\n         'max_depth': 15, \n         'min_data_in_leaf': 25, \n         'max_bin': 10, \n         'min_data_in_bin': 2,   \n         'num_class': 6,\n         'metric': 'multi_logloss'\n         }","4c978ad4":"lgbm = lgb.train(params=param,\n                 train_set=train,\n                 num_boost_round=200,\n                 valid_sets=[test])\n\ny_pred_class = lgbm.predict(X_test)","1790b320":"predictions = []\nfor x in y_pred_class:\n    predictions.append(np.argmax(x))\n\nprint('accuracy:', accuracy_score(y_test, predictions)*100)","88701e62":"df = pd.read_csv(\"..\/input\/machinehack-ml-merchandise-popularity-prediction\/MPP_Dataset\/Test.csv\")","6c8925fc":"#df['time'] = np.log(df['time'])","796d3ddc":"df['hour'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.hour\ndf['month'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.month\ndf['day'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.day\ndf['year'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.year\n#df['minute'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.minute\ndf = df.drop([\"time\"],1)","ad1cbda8":"X = df","05593a09":"df","40f439f6":"X = scaler.transform(X)\nX","d9d1d571":"pred_log = clf.predict_proba(X)","005daf03":"pred_log","306cc16f":"prediction  = pd.DataFrame(pred_log,columns =['0','1','3','4','5'])\nprediction","d8bbbed2":"prediction.to_csv('result_MP.csv',index=False)","ce5b2286":"# Fitting on Test set","0ae71762":"# RF","1f32af78":"Hyper parameter tuning","030211bc":"SMOTE","4fa01c52":"# Feature selection","98b82eb0":"Light gbm"}}