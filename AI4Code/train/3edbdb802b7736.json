{"cell_type":{"1eb3c929":"code","d6fa0e07":"code","0ccb5878":"code","a6044093":"code","b6a02c19":"code","67cc6492":"code","d0b5de8e":"code","fc3aabd8":"code","2031dc15":"code","892960b4":"code","3c4c8043":"code","6d3b1674":"code","d645b969":"code","2c55e8a5":"code","2c2ffd7f":"markdown","b0cae6e6":"markdown","77086fed":"markdown","68d5f093":"markdown","0be2ac52":"markdown","1cbfb34e":"markdown","be598737":"markdown"},"source":{"1eb3c929":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d6fa0e07":"import pandas as pd\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\nimport matplotlib.pyplot as plt\n\nplt.style.use('ggplot')\nimport matplotlib.cm as cm\nimport seaborn as sns\n\nimport pandas_profiling\nimport numpy as np\nfrom numpy import percentile\nfrom scipy import stats\nfrom scipy.stats import skew\nfrom scipy.special import boxcox1p\n\n#import reverse_geocoder as rg\n\nimport os, sys\nimport calendar\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.rc('font', size=18)        \nplt.rc('axes', titlesize=22)      \nplt.rc('axes', labelsize=18)      \nplt.rc('xtick', labelsize=12)     \nplt.rc('ytick', labelsize=12)     \nplt.rc('legend', fontsize=12)   \n\nplt.rcParams['font.sans-serif'] = ['Verdana']\n\n# function that converts to thousands\n# optimizes visual consistence if we plot several graphs on top of each other\ndef format_1000(value, tick_number):\n    return int(value \/ 1_000)\n\npd.options.mode.chained_assignment = None\npd.options.display.max_seq_items = 500\npd.options.display.max_rows = 500\npd.set_option('display.float_format', lambda x: '%.5f' % x)\n\n","0ccb5878":"US_Accidents_Dec19 = pd.read_csv(\"..\/input\/us-accidents\/US_Accidents_Dec19.csv\")","a6044093":"US_Accidents_Dec19.columns","b6a02c19":"def has_null(df):\n    missing = [(c, df[c].isna().mean()*100) for c in df]\n    missing = pd.DataFrame(missing, columns=[\"column_name\", \"percentage\"])\n    missing = missing[missing.percentage > 0]\n    display(missing.sort_values(\"percentage\", ascending=False))","67cc6492":"has_null(US_Accidents_Dec19)","d0b5de8e":"accidents_by_state = US_Accidents_Dec19.groupby('State')['ID'].count().sort_values(ascending=False)","fc3aabd8":"plt.xticks(rotation='vertical')\nplt.bar(x = accidents_by_state.index[accidents_by_state.values>100000],height=accidents_by_state.values[accidents_by_state.values>100000])","2031dc15":"licensed_drivers = pd.read_excel(\"..\/input\/licensesdriverbystate\/dl1.xlsx\",index_col='State')","892960b4":"us_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Palau': 'PW',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY',\n}\n\n\nlicensed_drivers.rename(index={'New York2':'New York'},inplace=True)\nlicensed_drivers.rename(index= us_state_abbrev,inplace=True)\nlicensed_drivers.drop(index='United States, total',inplace=True)","3c4c8043":"normalized_accident_by_state = accidents_by_state\/licensed_drivers['Number of licensed drivers1']","6d3b1674":"normalized_accident_by_state.dropna(inplace=True)\nnormalized_accident_by_state.sort_values(ascending=False,inplace=True)","d645b969":"plt.xticks(rotation='vertical')\nplt.xlabel('State')\nplt.ylabel('Accident per registered driver')\nplt.bar(x = normalized_accident_by_state.index[normalized_accident_by_state.values>.01],height=normalized_accident_by_state.values[normalized_accident_by_state.values>.01])","2c55e8a5":"\nfig, (ax1, ax2) = plt.subplots(1, 2)\nfig.tight_layout(pad=3.0)\nylabels = ['Number of accidents per driver','Total Number of Accidents']\nfor num,ax in enumerate(fig.axes):\n    plt.sca(ax)\n    plt.xticks(rotation=90)\n    plt.ylabel(ylabels[num])\n    plt.xlabel('State')\n#plt.ylabel('Accident per registered driver')\nax1.bar(x = normalized_accident_by_state.head(5).index,height=normalized_accident_by_state.head(5).values)\nax2.bar(x = accidents_by_state.head(5).index,height=accidents_by_state.head(5).values)","2c2ffd7f":" More information will can be drawn from the data if we normalize by # of registered drivers in each state","b0cae6e6":"This notebook is a work in progress. Please feel free to comment with <span style='color:blue'> questions<\/span>, <span style='color:green'>suggestions<\/span>, or <span style=\"color:red\">concerns <\/span>!","77086fed":"When we normalize by the number of registered drivers in a state, the states with the most accidents\/driver are not the same as the states with the most overall accidents.","68d5f093":"## Plot number of accidents by state","0be2ac52":"# Causes of Accidents","1cbfb34e":"# Introduction","be598737":" **** I missed that the data was already partitioned by state (somehow). Working on updating ****"}}