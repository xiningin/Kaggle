{"cell_type":{"ab641a3a":"code","af8f90c7":"code","9574f93f":"code","1600fcb9":"code","be1f61f9":"code","386cc148":"code","e955db61":"code","8c2126f2":"code","5bd3e86d":"code","7a6dcc9f":"code","52f1a913":"code","18ca042b":"code","7512d22a":"code","eab577bf":"code","081a029c":"code","dc6083af":"code","98747783":"code","15581a8f":"code","835f4df1":"code","c96e6568":"code","150ca324":"code","b8fd815c":"code","26f4bf10":"code","60eb7751":"code","dc5d0aea":"code","82b06eea":"code","678dc11c":"code","1c2bcfc6":"code","977042e1":"code","958e86aa":"code","10f9fda9":"code","e4a0dd35":"code","60120153":"markdown","e956ce91":"markdown"},"source":{"ab641a3a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af8f90c7":"df = pd.read_csv(\"..\/input\/income-dataset-itu-project\/income_dataset_ITU_project.csv\")","9574f93f":"df.head()","1600fcb9":"sns.heatmap(df.isnull())","be1f61f9":"sns.countplot(df[\"income >50K\"])","386cc148":"sns.axes_style(\"whitegrid\")\nsns.countplot(x=df[\"income >50K\"],data=df,hue=\"sex\")","e955db61":"df[\"sex\"].value_counts()","8c2126f2":"sns.axes_style(\"whitegrid\")\nsns.countplot(x=df[\"income >50K\"],data=df,hue=\"relationship\")","5bd3e86d":"sns.axes_style(\"whitegrid\")\nsns.countplot(x=df[\"income >50K\"],data=df,hue=\"race\")","7a6dcc9f":"df[\"race\"].value_counts()","52f1a913":"# df = df[df[\"native-country\"]!=\"United-States\"]","18ca042b":"sns.axes_style(\"whitegrid\")\nsns.countplot(x=df[\"income >50K\"],data=df,hue=\"native-country\")","7512d22a":"df[\"native-country\"].value_counts()","eab577bf":"x = df[df[\"age\"]!=np.NaN][\"age\"]\nsns.boxplot(y=x ,x=df[\"income >50K\"],data=df)","081a029c":"sns.axes_style(\"whitegrid\")\nsns.boxplot(x=x ,y=df[\"workclass\"],data=df)","dc6083af":"sns.countplot(x=df[\"income >50K\"],data=df,hue=\"workclass\")","98747783":"df[\"workclass\"].value_counts()","15581a8f":"sns.countplot(x=df[\"income >50K\"],data=df,hue=\"marital-status\")\n# df[\"marital-status\"]","835f4df1":"sns.boxplot(x=x ,y=df[\"marital-status\"],data=df,palette=\"rainbow\")","c96e6568":"sns.boxplot(x=x ,y=df[\"marital-status\"],data=df,palette=\"RdBu_r\")","150ca324":"df.info()","b8fd815c":"df = pd.get_dummies(data = df,columns=[\"workclass\",\"education\",\"marital-status\",\"occupation\",\"relationship\",\"race\",\"sex\",\"native-country\"],drop_first=True)","26f4bf10":"from sklearn.impute import KNNImputer\nmodel = KNNImputer(n_neighbors=4)\ndf = pd.DataFrame(model.fit_transform(df),columns = df.columns)\ndf","60eb7751":"df.info()","dc5d0aea":"from sklearn import preprocessing\n\ncol=[]\nfor i in df.columns\n\n\nx = df[col].vales#returns a numpy array\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf = pd.DataFrame(x_scaled,columns=df.columns)","82b06eea":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score","678dc11c":"X_train,X_test,y_train,y_test = train_test_split(df.drop(\"income >50K\",axis=1),df[\"income >50K\"],test_size=0.25)","1c2bcfc6":"model = LogisticRegression()\nmodel.fit(X_train,y_train)\naccuracy_score(model.predict(X_test),y_test)","977042e1":"model = RandomForestClassifier()\nmodel.fit(X_train,y_train)\naccuracy_score(model.predict(X_test),y_test)","958e86aa":"model = XGBClassifier()\nmodel.fit(X_train,y_train)\naccuracy_score(model.predict(X_test),y_test)","10f9fda9":"model = KNeighborsClassifier(n_neighbors=4)\nmodel.fit(X_train,y_train)\naccuracy_score(model.predict(X_test),y_test)","e4a0dd35":"model = DecisionTreeClassifier(max_depth=3)\nmodel.fit(X_train,y_train)\naccuracy_score(model.predict(X_test),y_test)","60120153":"# Data Prep Done\n\nExplorations and handeling missing values is done for the dataset.Data ready for models now. ","e956ce91":"# Final Report\nAfter performing the exploratorary data analysis and sucessfully removed the null values in workclass, occupation and native-country using KNNImputer. Then done some hit and trails with machine learning models like randomforest, knn, etc.. and got max accuracy of 87.77 from XGBClassifier."}}