{"cell_type":{"a958fb8a":"code","485b58e0":"code","c27fe691":"code","5a44b253":"code","dbcb3954":"code","586ef44d":"code","5db73cd5":"code","c3bb8b63":"code","c8458548":"code","9b5fa383":"code","0a85154e":"code","bf9f5709":"code","4171b85c":"code","1ed89816":"code","69d86d50":"code","176c4adb":"code","75738b68":"code","c7875b9a":"code","343402d8":"code","6f41ea6d":"code","2a0ecfe7":"code","6f09a98c":"code","629ecea5":"code","7e5ec17e":"code","28dd207b":"code","4441e6ef":"code","169725d1":"code","caa5d23c":"code","626a1553":"code","0b8425d6":"code","62554d1d":"code","4e5f97a3":"code","1ebe71c4":"code","990d0d13":"code","0ddd61d7":"code","9e8dbb0f":"code","84ea5ceb":"code","bc757e76":"code","430210b1":"code","882dbd77":"markdown","f44bb32f":"markdown","4d2032ab":"markdown","7c18055d":"markdown","83fe51fc":"markdown","38537e8e":"markdown","bb271660":"markdown","88d6dc04":"markdown","b0b37dd2":"markdown","8c8e07c5":"markdown","9b71d531":"markdown","9d3cb3cc":"markdown","06c2d2b1":"markdown","b386ec45":"markdown","a31df56f":"markdown","6cdeddd1":"markdown","c4aa5e2d":"markdown","19f19488":"markdown","1c737c35":"markdown","88673ae1":"markdown","8b8bc66e":"markdown","3076686d":"markdown","88ba315a":"markdown"},"source":{"a958fb8a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\nplt.style.use('ggplot')","485b58e0":"# Importing Essential Packages\nimport numpy as np\nimport pylab as pl\n# Printing Numpy Version\nprint(\"Numpy Version : \",np.__version__)","c27fe691":"# Simple Line Plot\nyear = [1950, 1970, 1990, 2010]\npop = [2.519, 3.692, 5.263, 6.972]\nplt.plot(year, pop)\n#Show\nplt.show()","5a44b253":"# Simple Line Plot with Axis Labels and Title\nimport matplotlib.pyplot as plt\nyear = [1950, 1970, 1990, 2010]\npop = [2.519, 3.692, 5.263, 6.972]\nplt.plot(year, pop)\n#Adding Axis Labels\nplt.xlabel('Year')\nplt.ylabel('Population')\nplt.title('World Population Projections')\n#Show\nplt.show()","dbcb3954":"# Adding Ticks to above Graph\n# Simple Line Plot with Axis Labels and Title\nimport matplotlib.pyplot as plt\nyear = [1950, 1970, 1990, 2010]\npop = [2.519, 3.692, 5.263, 6.972]\nplt.plot(year, pop)\n#Adding Axis Labels\nplt.xlabel('Year')\nplt.ylabel('Population')\nplt.title('World Population Projections')\n# plt.yticks([0,2,4,6,8,10])\n#Show\nplt.show()","586ef44d":"import matplotlib.pyplot as plt\nyear = [1950, 1970, 1990, 2010]\npop = [2.519, 3.692, 5.263, 6.972]\nplt.scatter (year, pop)\nplt.show()\n","5db73cd5":"import matplotlib.pyplot as plt\nvalues = [0,0.6,1.4,1.6,2.2,2.5,2.6,3.2,3.5,3.9,4.2,6]\nplt.hist(values, bins = 3)\nplt.show()\n","c3bb8b63":"d = {'user':'bozo', 'pswd':1234}\nprint(d['user'])\n# Removing one element\ndel(d['user'])\nprint(d)\n# Removing all elements\nd.clear()\nprint(d)\n#adding a new element\nd['id'] = 45\nprint(d)\n","c8458548":"d = {'user':'bozo', 'p':1234, 'i':34}\n# List of keys.\nprint('List of keys \\n ',d.keys()) \n# List of values.\nprint('List of values \\n ',d.values()) \n# List of item tuples.\nprint('List of item tuples \\n ',d.items()) \n","9b5fa383":"import pandas as pd\nimport numpy as np\n# Create a dataframe\nraw_data = {'first_name': ['Jason', 'Molly', np.nan, np.nan, np.nan], \n        'nationality': ['USA', 'USA', 'France', 'UK', 'UK'], \n        'age': [42, 52, 36, 24, 70]}\ndf = pd.DataFrame(raw_data, columns = ['first_name', 'nationality', 'age'])\nprint(df)","0a85154e":"# Pre-defined lists\nnames = ['United States', 'Australia', 'Japan', 'India', 'Russia', 'Morocco', 'Egypt']\ndr =  [True, False, False, False, True, True, True]\ncpc = [809, 731, 588, 18, 200, 70, 45]\n\n# Import pandas as pd\nimport pandas as pd\n\n# Create dictionary my_dict with three key:value pairs: my_dict\nmy_dict={'country':names,'drives_right':dr,'cars_per_cap':cpc}\n\n# Build a DataFrame cars from my_dict: cars\ncars= pd.DataFrame(my_dict)\n\n# Print cars\nprint(cars)\n","bf9f5709":"import pandas as pd\n# Build cars DataFrame\nnames = ['United States', 'Australia', 'Japan', 'India', 'Russia', 'Morocco', 'Egypt']\ndr =  [True, False, False, False, True, True, True]\ncpc = [809, 731, 588, 18, 200, 70, 45]\ndict = { 'country':names, 'drives_right':dr, 'cars_per_cap':cpc }\ncars = pd.DataFrame(dict)\nprint(cars)\n# Definition of row_labels\nrow_labels = ['US', 'AUS', 'JAP', 'IN', 'RU', 'MOR', 'EG']\n# Specify row labels of cars\ncars.index=row_labels\n# Print cars again\nprint(cars)\n","4171b85c":"# Import pandas as pd\nimport pandas as pd\n\n# Fix import by including index_col\ncars = pd.read_csv('..\/input\/basics\/cars.csv',index_col=0)\n\n# Print out cars\nprint(cars)\n","1ed89816":"import pandas as pd\nbrics = pd.read_csv('..\/input\/basics\/brics.csv', index_col = 0)\nprint(brics)\nprint('Country Column Type as Series : ',type(brics['country']))\nprint('Country Column Type as Dataframe : ',type(brics[['country']]))\nprint('Country, Capital as Dataframe :\\n ',brics[['country','capital']])\nprint('Row Access :\\n ',brics[1:4])","69d86d50":"# Row Access using loc\nprint('Row Access using loc\\n')\nprint(brics.loc[[\"RU\", \"IN\", \"CH\"]])\nprint('\\n Column access \\n') \nprint(brics.loc[:, [\"country\", \"capital\"]])\nprint('\\n Row & Column access \\n') \nprint(brics.loc[[\"RU\", \"IN\", \"CH\"], [\"country\", \"capital\"]])","176c4adb":"print('Row access : \\n') \nprint(brics.iloc[[1]])\nprint('\\n Multiple Rows \\n',brics.iloc[[1,2,3]])\nprint('\\n Row & Column access : \\n')\nprint(brics.iloc[[1,2,3], [0, 1]])","75738b68":"print(\"Retrieving all the rows and some columns\")\nbrics.iloc[:,[1,2]]","c7875b9a":"import pandas as pd\nimport numpy as np\n\ndates = pd.date_range('1\/1\/2000', periods=8)\nprint(dates)\ndf = pd.DataFrame(np.random.randn(8, 4),index=dates, columns=['A', 'B', 'C', 'D'])\nprint(df)","343402d8":"s = df['A']\ns[dates[5]]","6f41ea6d":"df[['B', 'A']] = df[['A', 'B']]","2a0ecfe7":"a = pd.Index(['c', 'b', 'a'])\nb = pd.Index(['c', 'e', 'd'])\nprint(a|b)\nprint(a&b)\nprint(a.difference(b))","6f09a98c":"s.iat[5]","629ecea5":"df.at[dates[5],'A']","7e5ec17e":"import pandas as pd\n\nl_1d = [0, 1, 2]\n\ns = pd.Series(l_1d)\nprint(s)\n\ns = pd.Series(l_1d, index=['row1', 'row2', 'row3'])\nprint(s)","28dd207b":"l_2d = [[0, 1, 2], [3, 4, 5]]\n\ndf = pd.DataFrame(l_2d)\nprint(df)\n\ndf = pd.DataFrame(l_2d,\n                  index=['row1', 'row2'],\n                  columns=['col1', 'col2', 'col3'])\nprint(df)","4441e6ef":"import pandas as pd\niris_data = pd.read_csv(\"..\/input\/iris-dataset\/iris.data.csv\")","169725d1":"#import the pandas library and aliasing as pd\nimport pandas as pd\ns = pd.Series()\nprint(s)","caa5d23c":"#import the pandas library and aliasing as pd\nimport pandas as pd\nimport numpy as np\ndata = np.array(['a','b','c','d'])\ns = pd.Series(data)\nprint(s)","626a1553":"#import the pandas library and aliasing as pd\nimport pandas as pd\nimport numpy as np\ndata = np.array(['a','b','c','d'])\ns = pd.Series(data,index=[100,101,102,103])\nprint(s)","0b8425d6":"#import the pandas library and aliasing as pd\nimport pandas as pd\nimport numpy as np\ndata = {'a' : 0., 'b' : 1., 'c' : 2.}\ns = pd.Series(data)\nprint(s)\n","62554d1d":"#import the pandas library and aliasing as pd\nimport pandas as pd\nimport numpy as np\ns = pd.Series(5, index=[0, 1, 2, 3])\nprint(s)","4e5f97a3":"import pandas as pd\ns = pd.Series([1,2,3,4,5],index = ['a','b','c','d','e'])\n\n#retrieve the first element\nprint(s[0])","1ebe71c4":"import pandas as pd\ns = pd.Series([1,2,3,4,5],index = ['a','b','c','d','e'])\n\n#retrieve the first three element\nprint(s[:3])","990d0d13":"import pandas as pd\ns = pd.Series([1,2,3,4,5],index = ['a','b','c','d','e'])\n\n#retrieve the last three element\nprint(s[-3:])","0ddd61d7":"# importing pandas module  \nimport pandas as pd  \n  \n# importing regex module \nimport re \n    \n# making data frame  \ndata = pd.read_csv(\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/nba.csv\")  \n    \n# removing null values to avoid errors  \ndata.dropna(inplace = True)  \n  \n# storing dtype before operation \ndtype_before = type(data[\"Salary\"]) \n  \n# converting to list \nsalary_list = data[\"Salary\"].tolist() \n  \n# storing dtype after operation \ndtype_after = type(salary_list) \n  \n# printing dtype \nprint(\"Data type before converting = {}\\nData type after converting = {}\".format(dtype_before, dtype_after)) \n  \n# displaying list \nsalary_list ","9e8dbb0f":"import re\n\ntxt = \"The rain in Spain\"\nx = re.search(\"^The.*Spain$\", txt)\nprint(x)","84ea5ceb":"import re\n\ntxt = \"The rain in Spain\"\nx = re.findall(\"ai\", txt)\nprint(x)\n","bc757e76":"import re\n\ntxt = \"The rain in Spain\"\n\n#Check if the string starts with \"The\":\n\nx = re.findall(\"\\AThe\", txt)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is a match!\")\nelse:\n  print(\"No match\")\n","430210b1":"import re\n\ntxt = \"The rain in Spain\"\n\n#Check if the string contains any digits (numbers from 0-9):\n\nx = re.findall(\"\\d\", txt)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")\n","882dbd77":"## Adding Ticks to the Graph","f44bb32f":"## Adding Row Labels to DataFrames","4d2032ab":"## Dictionary\n\nDictionaries store a mapping between a set of keys\u000band a set of values.\n\nKeys can be any immutable type.\n* Values can be any type\n* A single dictionary can store values of different types\n\nYou can define, modify, view, lookup, and delete\u000bthe key-value pairs in the dictionary. ","7c18055d":"## Create a Series from Scalar","83fe51fc":"## Creating Series from List","38537e8e":"## Simple Line Plot Using MatplotLib","bb271660":"## Creating an Empty Series","88d6dc04":"## Creating DataFrame from 2D List","b0b37dd2":"## Data Visualization\n\nIn this section, we learn about basic plotting with Matplotlib. ","8c8e07c5":"## Adding Axis Labels and Title","9b71d531":"## Creating Scatter Plot Using MatplotLib","9d3cb3cc":"## Introduction\n\nThis session covers some important essentials of Python Data Science deveopment including data visualization in Python using Matplotlib, understanding and using useful data structures such as series,dictionary and dataframes.","06c2d2b1":"## Indexing","b386ec45":"## Regular Expression","a31df56f":"## Loading Iris Dataset from CSV","6cdeddd1":"# Converting Column Data Type from Series to List","c4aa5e2d":"## Indexing and Selecting Data in Dataframe","19f19488":"## CSV to Dataframe\n\nPutting data in a dictionary and then building a DataFrame works, but it's not very efficient. \n\nWhat if you're dealing with millions of observations? \n\nIn those cases, the data is typically available as files with a regular structure. One of those file types is the CSV file, which is short for \"comma-separated values\". To import CSV data into Python as a Pandas DataFrame you can use\u00a0read_csv().\n","1c737c35":"## Please upvote to show your appreciation","88673ae1":"## Create a Series from ndarray\n\nIf data is an ndarray, then index passed must be of the same length. If no index is passed, then by default index will be range(n) where n is array length","8b8bc66e":"## Creating Dataframe from Dictionary\n\nPandas is an open source library, providing high-performance, easy-to-use data structures and data analysis tools for Python\nThe DataFrame is one of Pandas' most important data structures. It's basically a way to store tabular data where you can label the rows and the columns\/ One way to build a DataFrame is from a dictionary.\n\nA DataFrame is composed of three different components, index,\u00a0columns, and the\u00a0data. \nThe data is also known as the\u00a0values.\n\n","3076686d":"## Creating Histogram using MatplotLib","88ba315a":"# Creating Series from Dictionary"}}