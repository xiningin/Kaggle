{"cell_type":{"aa0c2c0d":"code","a5ef7a56":"code","4af4b06b":"code","6d94b426":"code","1ac97b48":"code","a437d438":"code","ae76efa8":"code","8d2f1b62":"code","a068d99e":"code","9e94d718":"code","f909796e":"code","3d8a7564":"code","3e21e5da":"markdown","583231f7":"markdown","dd62f11d":"markdown","d42a58e8":"markdown","cb20b796":"markdown","3e63efe8":"markdown","0f599e5b":"markdown","ae072fa7":"markdown","fd88dc1e":"markdown","a8ba6d3b":"markdown","410a1c6e":"markdown","33730542":"markdown"},"source":{"aa0c2c0d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a5ef7a56":"file_path = '\/kaggle\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv'\ncovid_data = pd.read_csv(file_path)","4af4b06b":"# Checking first few rows of data -\ncovid_data.head()","6d94b426":"covid_data.isnull().sum()","1ac97b48":"for i in covid_data.columns:\n    print(i)","a437d438":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","ae76efa8":"# sorting the list in descending order (by population) -\nstate_population = covid_data.sort_values(by=['Population'], ascending=False)\nprint(state_population)","8d2f1b62":"# Visualizing the population of each state - \nplt.figure(figsize=(12,10))\npopulation_cnt = sns.barplot(state_population['Population'],state_population['State\/UTs'], palette=\"Blues_d\")\nplt.title('State\/UTs vs. Population')\nplt.show()","a068d99e":"# Sorting the list in descending order of total number of cases -\ntotal_cases_desc = covid_data.sort_values(by=['Total Cases'], ascending=False)\nprint(total_cases_desc)","9e94d718":"# Visualizing the number of total cases -\nplt.figure(figsize=(12,8))\nmax_cnt = sns.barplot(total_cases_desc['Total Cases'], total_cases_desc['State\/UTs'])\nplt.title('Number of Total Cases (Statewise)')\nplt.show()","f909796e":"plt.figure(figsize=(12,8))\nmax_cnt = sns.barplot(total_cases_desc['Total Cases'].head(15), total_cases_desc['State\/UTs'].head(15), color='yellow')\nactive_cases_cnt = sns.barplot(total_cases_desc['Active'].head(15), total_cases_desc['State\/UTs'].head(15), color='red')\nplt.title('Number of Active Cases (Statewise)')\nplt.show()","3d8a7564":"fig = px.pie(values=covid_data['Deaths'], names=covid_data['State\/UTs'], title='Percent of deaths (Statewise)', width=1000, height=800, color_discrete_sequence=px.colors.sequential.Agsunset)\nfig.show()","3e21e5da":"Let us take a look at the columns in the dataset -","583231f7":"### Deaths -\nTaking a look at the number of deaths occured in each state - ","dd62f11d":"### Total Cases -\nAfter taking a look at the population of each state, we will take a look at the total number of cases in each state.","d42a58e8":"# Exploratory Data Analysis of Covid-19 Data (India)\n\nThe world is facing the COVID-19 pandemic since 2019. The coronavirus is a deadly virus which is rapidly spreading in all parts of the world. As the number of cases have been increasing, there has been addition to the data regarding the virus. It would be extremely helpful if we are able to use this data and gain insights from it (maybe even make predictions!).\n\nThis project has aimed at giving a visual representation of the COVID-19 situation in India. I have tried to explore various aspects of the data to understand the patterns in the dataset. I have tried to make the graphs\/charts as visually comprehensive as possible, so as to allow the viewer to grasp the information at a glance.\n\nLink to the dataset - https:\/\/www.kaggle.com\/anandhuh\/latest-covid19-india-statewise-data\n\nI am of course, open to any comments, suggestions, or feedback on this project. Feel free to upvote if you like it.","cb20b796":"Importing pyplot (from matplotlib), seaborn, and plotly libraries -","3e63efe8":"### Population -\nAs population is an important criteria while considering any pandemic situation, it becomes necessary to take a look at the population of each state. The number of cases is most likely to be higher in states with higher population. Similarly, in states with low population, the number of cases may also be low. \n\nIn the following codeblocks, we will see the list of statewise population.","0f599e5b":"## Conclusion: \n* From the above analysis, we can conclude that the higher the population, higher the number of cases. The states in which the population is low, the cases are also less.\n* Out of the total deaths in the country, Maharashtra has the highest percentage of deaths (29.2%), followed by Kerala (10.4%), and Karnataka (7.91%).\n* Overall, the worst affected states seem to be Maharashtra, Kerala, and Karnataka. The less affected states seem to be the islands (Lakshadweep, Andaman and Nicobar, Dadra and Nagar Haveli and Daman and Diu).\n\n\nPlease Note: The above conclusions are considering only the above data, no external factors have been taken into considered.","ae072fa7":"## Checking for null values -","fd88dc1e":"## Importing data -","a8ba6d3b":"From the above code block we can infer that there are no null values.","410a1c6e":"### Ratio of Total Cases to Active cases - \nIn the following figure, the yellow colored bars show the total number of cases while the red portion of the bar show the active cases.","33730542":"## Visualizations of data -"}}