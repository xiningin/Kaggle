{"cell_type":{"38b740b8":"code","c5862ad9":"code","d582677f":"code","4082c989":"code","e3920d7b":"code","c978e8c5":"code","a30a6ab1":"code","6dba727d":"code","9e90703c":"code","48378f2f":"code","d33d243f":"code","a19e98d6":"code","2d5f9ba6":"code","e8145c26":"code","40b7d638":"code","9be3b6ef":"code","1fb45a38":"code","26cfc8be":"code","4cd86b03":"code","58c1e1ad":"markdown","e42d7ca1":"markdown","7b737d46":"markdown","11f3090e":"markdown","ea64667b":"markdown","1a44f56c":"markdown","8374f31e":"markdown","0fcf5e0b":"markdown","b4616696":"markdown","1436c701":"markdown","71a97d8c":"markdown","5845ef6b":"markdown","1400fc5a":"markdown"},"source":{"38b740b8":"# Load packages\n\nimport numpy as np\nimport pandas as pd\nimport os\n\n# Load Queary Packages\n\nfrom google.cloud import bigquery\nclient = bigquery.Client()\nfrom bq_helper import BigQueryHelper\ndataset_ref = client.dataset('ncaa_basketball', project='bigquery-public-data')\nncaa_dataset = client.get_dataset(dataset_ref)\n\n# Load ploting packages\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotnine as p9\nplt.style.use('fivethirtyeight')\n\n# import plotly\nimport chart_studio as plotly\nplotly.tools.set_config_file(world_readable=True, sharing='public')\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.figure_factory as fig_fact\nfrom plotly.subplots import make_subplots\n\n\n%matplotlib inline","c5862ad9":"[x.table_id for x in client.list_tables(ncaa_dataset)]","d582677f":"ncaa_mbb_pbp_sr = client.get_table(ncaa_dataset.table('mbb_pbp_sr'))","4082c989":"\nquery=\"\"\"SELECT\n  event_type,\n  season,\n  type,\n  team_alias,\n  team_market,\n  team_name,\n  team_basket,\n  event_coord_x,\n  event_coord_y,\n  three_point_shot,\n  shot_made\nFROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`\nWHERE season > 2012 AND type = \"fieldgoal\"\nORDER BY season\"\"\"\n\n# Set up the query\nquery_job = client.query(query)\n# API request - run the query, and return a pandas DataFrame\ndf_shots = query_job.to_dataframe()\ndf_shots","e3920d7b":"query=\"\"\"SELECT\n  #first 35 minutes of regulation\n  COUNTIF(event_type = \"threepointmade\"\n    AND elapsed_time_sec < 2100) AS threes_made_first35,\n  COUNTIF((event_type = \"threepointmade\"\n      OR event_type = \"threepointmiss\")\n    AND elapsed_time_sec < 2100) AS threes_att_first35,\n  COUNTIF(event_type = \"threepointmade\"\n    AND elapsed_time_sec < 2100) \/ COUNTIF((event_type = \"threepointmade\"\n      OR event_type = \"threepointmiss\")\n    AND elapsed_time_sec < 2100) AS three_pt_pct_first35,\n  #last five minutes of regulation\n  COUNTIF(event_type = \"threepointmade\"\n    AND elapsed_time_sec >= 2100) AS threes_made_last5,\n  COUNTIF((event_type = \"threepointmade\"\n      OR event_type = \"threepointmiss\")\n    AND elapsed_time_sec >= 2100) AS threes_att_last5,\n  COUNTIF(event_type = \"threepointmade\"\n    AND elapsed_time_sec >= 2100) \/ COUNTIF((event_type = \"threepointmade\"\n      OR event_type = \"threepointmiss\")\n    AND elapsed_time_sec >= 2100) AS three_pt_pct_last5\nFROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`\nWHERE home_division_alias = \"D1\"\n  AND away_division_alias = \"D1\"\n  \"\"\"\n\n# Set up the query\nquery_job = client.query(query)\n# API request - run the query, and return a pandas DataFrame\ndf_end_game = query_job.to_dataframe()\ndf_end_game","c978e8c5":"query=\"\"\"SELECT\n  season,\n  count(CASE WHEN shot_made = True THEN 1 END) as total_made,\n  count(type) as total_shots\nFROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`\nWHERE season > 1990 AND type = \"fieldgoal\"\nGROUP BY season\nORDER BY season\"\"\"\n\n# Set up the query\nquery_job = client.query(query)\n# API request - run the query, and return a pandas DataFrame\ndf_shots_made = query_job.to_dataframe()\ndf_shots_made\n\n# calculate the fieldgoal %\n\ndf_shots_made['acc'] = df_shots_made['total_made']\/df_shots_made['total_shots']\ndf_shots_made\n","a30a6ab1":"acc_plot = p9.ggplot()\nacc_plot = acc_plot + p9.geom_point(df_shots_made, mapping=p9.aes( x = 'season', y = 'acc'))\nacc_plot = acc_plot + p9.ggtitle('Shot Accuracy vs Season')\nacc_plot","6dba727d":"query=\"\"\"SELECT\n  season,\n  three_point_shot,\n  count(CASE WHEN shot_made = True THEN 1 END) as total_made,\n  count(type) as total_shots\nFROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`\nWHERE season > 1990 AND type = \"fieldgoal\"\nGROUP BY season,\n   three_point_shot\nORDER BY season, \n   three_point_shot\"\"\"\n\n# Set up the query\nquery_job = client.query(query)\n# API request - run the query, and return a pandas DataFrame\ndf_shots_made_three = query_job.to_dataframe()\ndf_shots_made_three\n\n# calculate the fieldgoal %\n\ndf_shots_made_three['acc'] = df_shots_made_three['total_made']\/df_shots_made_three['total_shots']\ndf_shots_made_three","9e90703c":"acc_plot = p9.ggplot()\nacc_plot = acc_plot + p9.geom_point(df_shots_made_three, mapping=p9.aes( x = 'season', y = 'acc',color = 'three_point_shot'))\nacc_plot = acc_plot + p9.ggtitle('Shot Accuracy vs Season')\nacc_plot","48378f2f":"# update the x,y coordinates to half court\n\nmask = (df_shots['team_basket'] == 'right')\nz_valid = df_shots[mask]\n\ndf_shots['coord_x'] = df_shots['event_coord_x']\ndf_shots.loc[mask, 'coord_x'] = (94*12) - z_valid['event_coord_x'] \n\ndf_shots['coord_y'] = df_shots['event_coord_y']\ndf_shots.loc[mask, 'coord_y'] = (50*12) - z_valid['event_coord_y'] \n\ndf_shots","d33d243f":"# convert and rotate 90 degrees counter clockwise\ndf_shots['coord_x'] = (df_shots['coord_x']\/12)\ndf_shots['coord_y'] = 25 - (df_shots['coord_y']\/12)\ndf_shots['x'] = -1*(df_shots['coord_y'])\ndf_shots['y'] = (df_shots['coord_x']) - 5.25","a19e98d6":"# create shot distance and shot angle\n\ndf_shots['shot_distance'] = np.floor(np.sqrt(np.multiply(df_shots['x'],df_shots['x']) + np.multiply(df_shots['y'],df_shots['y'])))\ndf_shots['shot_angle'] = np.arccos(np.divide(df_shots['x'],df_shots['shot_distance'])) * 180\/np.pi","2d5f9ba6":"def circle_points(center = np.array([0,0]), radius = 1, npoints = 360):\n    angles = np.linspace(start = 0, stop = 360, num = npoints,)\n    xx = np.repeat(center[0],npoints) + radius * np.cos(angles * np.pi\/180)\n    yy = np.repeat(center[1],npoints) + radius*np.sin(angles * np.pi\/180)\n    data = {'x':xx,'y':yy}\n    df = pd.DataFrame(data)\n    return df","e8145c26":"# Court plot\n\nwidth = 50\nheight = 94 \/ 2\nkey_height = 19\ninner_key_width = 12\nouter_key_width = 16\nbackboard_width = 6\nbackboard_offset = 4\nneck_length = 0.5\nhoop_radius = 0.75\nhoop_center_y = backboard_offset + neck_length + hoop_radius\nthree_point_radius = 23.75\nthree_point_side_radius = 22\nthree_point_side_height = 14\ncollege_three_radius = 20.75\n\ndata = {'x':[width \/ 2, width \/ 2, -width \/ 2, -width \/ 2, width \/ 2] , 'y':[height, 0, 0, height, height]}\ncourt_points = pd.DataFrame(data)\ncourt_points['desc'] = np.repeat('perimeter',len(court_points.index))\ncourt_points['y'] = court_points['y'] - 5.25\n\ndata = {'x':[outer_key_width \/ 2, outer_key_width \/ 2, -outer_key_width \/ 2, -outer_key_width \/ 2] , 'y':[0, key_height, key_height, 0]}\nouter_key = pd.DataFrame(data)\nouter_key['desc'] = np.repeat('outer_key',len(outer_key.index))\nouter_key['y'] = outer_key['y'] - 5.25\n\n#court_points = court_points.append(temp, ignore_index=True)\n\ndata = {'x':[-backboard_width \/ 2, backboard_width \/ 2] , 'y':[backboard_offset, backboard_offset]}\nbackboard = pd.DataFrame(data)\nbackboard['desc'] = np.repeat('backboard',len(backboard.index))\nbackboard['y'] = backboard['y'] - 5.25\n#court_points = court_points.append(temp, ignore_index=True)\n\ndata = {'x':[0, 0] , 'y':[backboard_offset, backboard_offset + neck_length]}\nneck = pd.DataFrame(data)\nneck['desc'] = np.repeat('neck',len(neck.index))\nneck['y'] = neck['y'] - 5.25\n#court_points = court_points.append(temp, ignore_index=True)\n\nfoul_circle = circle_points(center = [0,key_height], radius = inner_key_width \/ 2)\nfoul_circle['desc'] = np.repeat('foul_circle_top',len(foul_circle.index))\nfoul_circle.loc[foul_circle['y'] < key_height,'desc'] = 'foul_circle_bottom'\nfoul_circle['y'] = foul_circle['y'] - 5.25\n\nhoop = circle_points(center = [0,hoop_center_y], radius = hoop_radius)\nhoop['desc'] = np.repeat('hoop',len(hoop.index))\nhoop['y'] = hoop['y'] - 5.25\n\nrestricted = circle_points(center = [0,hoop_center_y], radius = 4)\nrestricted = restricted[restricted.y >= hoop_center_y]\nrestricted['desc'] = np.repeat('restricted',len(restricted.index))\nrestricted['y'] = restricted['y'] - 5.25\n\ncollege_three_circle = circle_points(center = [0,hoop_center_y], radius = college_three_radius)\ncollege_three_circle = college_three_circle[college_three_circle.y >= hoop_center_y]\ncollege_three_circle['y'] = college_three_circle['y'] - 5.25\n\ndata = {'x':[ -college_three_radius, -college_three_radius] , 'y':[ hoop_center_y, 0]}\ncollege_three_line = pd.DataFrame(data)\ncollege_three_line['y'] = college_three_line['y'] - 5.25\n\ndata = {'x':[ college_three_radius, college_three_radius] , 'y':[ hoop_center_y, 0]}\ncollege_three_linea = pd.DataFrame(data)\ncollege_three_linea['y'] = college_three_linea['y'] - 5.25\n\n\ncollege_key = pd.DataFrame()\ndata = {'x':[inner_key_width \/ 2, inner_key_width \/ 2, -inner_key_width \/ 2, -inner_key_width \/ 2] , 'y':[0, key_height, key_height, 0]}\ntemp = pd.DataFrame(data)\ntemp['desc'] = np.repeat('college_key',len(temp.index))\n\ncollege_key = college_key.append(temp, ignore_index=True)\ncollege_key['y'] = college_key['y'] - 5.25","40b7d638":"college_court = p9.ggplot()\ncollege_court = college_court + p9.geom_path(court_points, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(outer_key, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(backboard, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(foul_circle, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(hoop, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(restricted, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(college_three_circle, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(college_key, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(college_three_line, mapping=p9.aes(x='x',y='y'))\ncollege_court = college_court + p9.geom_path(college_three_linea, mapping=p9.aes(x='x',y='y'))\n\ncollege_court","9be3b6ef":"# show some team shot maps add points\n\ndf_plot_shot = df_shots[(df_shots['team_alias'] == 'UVA') | (df_shots['team_alias'] == 'MSU') |(df_shots['team_alias'] == 'MICH')|(df_shots['team_alias'] == 'DUKE')|(df_shots['team_alias'] == 'KU')]\ndf_plot_shot = df_plot_shot[df_plot_shot['y'] < 50 ]\n\nshot_map = college_court + p9.geom_point(df_plot_shot, mapping=p9.aes( x= 'x', y= 'y', color = 'shot_made'),alpha =0.5)\nshot_map = shot_map + p9.theme_bw(12) + p9.facet_grid('team_alias ~ season') + p9.ggtitle('Shot Maps') + p9.theme(aspect_ratio=1,figure_size=(12, 12))\nshot_map","1fb45a38":"avg_shot_distance = np.mean(df_shots['shot_distance'])\navg_shot_distance","26cfc8be":"df_fg = df_shots[df_shots.type.isin(['fieldgoal'])& (df_shots['shot_distance'] < 50)].groupby([\"shot_distance\"]).agg({\"shot_made\":\"count\"}).rename(columns={\"shot_made\":\"fga\"})\ndf_fgm = df_shots[df_shots.type.isin(['fieldgoal'])& (df_shots['shot_distance'] < 50) & (df_shots['shot_made'] == True)].groupby([\"shot_distance\"]).agg({\"shot_made\":\"count\"}).rename(columns={\"shot_made\":\"fgm\"})\ndf_fg_dist = pd.merge(left=df_fg,right=df_fgm, left_on='shot_distance', right_on='shot_distance')\n#df_fg_dist['distance'] = np.arange(0,50)\ndf_fg_dist.reset_index(inplace=True)\n\ndf_fg_dist['acc'] = df_fg_dist['fgm']\/df_fg_dist['fga']\ndf_fg_dist\n\nacc_plot = p9.ggplot()\nacc_plot = acc_plot + p9.geom_point(df_fg_dist, mapping=p9.aes( x = 'shot_distance', y = 'acc'))\nacc_plot = acc_plot + p9.ggtitle('Shot Accuracy vs Shot Distance')\nacc_plot","4cd86b03":"df_fg = df_shots[df_shots.type.isin(['fieldgoal'])& (df_shots['shot_distance'] < 30)].groupby([\"shot_distance\",\"season\"]).agg({\"shot_made\":\"count\"}).rename(columns={\"shot_made\":\"fga\"})\ndf_fgm = df_shots[df_shots.type.isin(['fieldgoal'])& (df_shots['shot_distance'] < 30) & (df_shots['shot_made'] == True)].groupby([\"shot_distance\",\"season\"]).agg({\"shot_made\":\"count\"}).rename(columns={\"shot_made\":\"fgm\"})\ndf_fg_dist = pd.merge(left=df_fg,right=df_fgm, how = 'left', left_on=['shot_distance','season'], right_on=['shot_distance','season'])\ndf_fg_dist.reset_index(inplace=True)\n\ndf_fg_dist['acc'] = df_fg_dist['fgm']\/df_fg_dist['fga']\n\nacc_plot = p9.ggplot()\nacc_plot = acc_plot + p9.geom_point(df_fg_dist, mapping=p9.aes( x = 'shot_distance', y = 'acc'))\nacc_plot = acc_plot +  p9.facet_grid('. ~ season') + p9.ggtitle('Shot Accuracy vs Shot Distance By Year') + p9.theme(figure_size=(24, 8))\nacc_plot","58c1e1ad":"The sample size becomes small and the data starting to show a lot a variation for shots over 30'","e42d7ca1":"Quick look at the NCAA total shots made vs total shots by year. ","7b737d46":"Unit conversions and rotate the shots data 90 degrees counter clockwise to align with the court plot data created below:","11f3090e":"Plot for the court","ea64667b":"**Shot Charts**\n\nSelect a few teams and make the shot charts.","1a44f56c":"****NCAA Shot Charts****\n\nGoal of this notebook was to do the following:\n\n* Query the bigquery public ncaa basketball data base using Python.\n* Use ggplot to draw the college basketball court\n* Create shot charts using the play by play data.\n\nPlease visit https:\/\/toddwschneider.com\/.  He has written many excellent articles.  His article comparing the NCAA and NBA was the main reference for this notebook.\n\nThe next steps will be to create plots looking at shot accuracy vs. distance, and accuracy over time.\n\n","8374f31e":"Queary the play by play database. The event type fieldgoal indicates if a shot was taken, and shot_made if the the shot was made.","0fcf5e0b":"Comparison of three point accuracy during the first 35 minutes of play vs. the last 5 minutes of play.","b4616696":"The basketball court dimensions and data frames for ploting.  Ref https:\/\/toddwschneider.com\/","1436c701":"Code to convert the data to half court from full court.","71a97d8c":"Look at shot accuracy vs distance","5845ef6b":"Interesting, some teams appear to focus on taking a three point shots and two point shots mainly inside the key.  (Duke, Kansas, Michigan)  vs. a more even distribution of two point and three point shots.","1400fc5a":"Quick look at the NCAA total shots made vs total shots by year and look at three point shots.   2013 to 2014 is interesting, note the increase in three point shots."}}