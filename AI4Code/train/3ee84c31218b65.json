{"cell_type":{"0ec65a88":"code","f4f91ecb":"code","57f2c7f7":"code","572bfd3d":"code","1c3b8bf1":"code","78916aa4":"code","a5dfe2ca":"code","3b60970a":"code","a5d63b85":"code","ad8a4204":"code","7430b1f1":"code","dc3d0b17":"code","8409da1f":"code","adb4f8a9":"code","8b0ef65f":"code","c8db9f8d":"code","9de26288":"markdown","fa4e4c67":"markdown"},"source":{"0ec65a88":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4f91ecb":"!pip install pycaret","57f2c7f7":"import pycaret\nimport pandas as pd\nimport seaborn as sns\npd.set_option('display.max_columns', 500)\nprint(pycaret.__version__)","572bfd3d":"df = pd.read_csv('\/kaggle\/input\/credit-card-customers\/BankChurners.csv')\ndf = df[df.columns[:-2]]\ndf.head()","1c3b8bf1":"print('Check Null Values')\ndf.isnull().sum()","78916aa4":"ax = sns.countplot(y=\"Attrition_Flag\", data=df)\nprint('Table of Churn Counts\\n',df['Attrition_Flag'].value_counts())","a5dfe2ca":"ax = sns.countplot(y=\"Education_Level\", data=df)\nprint('Table of Education Level Counts\\n',df['Education_Level'].value_counts())","3b60970a":"ax = sns.countplot(y=\"Marital_Status\", data=df)\nprint('Table of Marital Status Counts\\n',df['Marital_Status'].value_counts())","a5d63b85":"ax = sns.countplot(y=\"Income_Category\", data=df)\nprint('Table of Income Categories Counts\\n',df['Income_Category'].value_counts())","ad8a4204":"ax = sns.countplot(y=\"Card_Category\", data=df)\nprint('Table of Card Categories Counts\\n',df['Card_Category'].value_counts())","7430b1f1":"from pycaret.classification import *\n#set feature types \nignore_features = ['CLIENTNUM']\ncategorical_features = ['Gender',\n                        'Education_Level',\n                        'Marital_Status',\n                        'Income_Category',\n                        'Card_Category']\nnumeric_features = ['Customer_Age',\n                    'Dependent_count',\n                    'Months_on_book',\n                    'Total_Relationship_Count',\n                    'Months_Inactive_12_mon',\n                    'Contacts_Count_12_mon',\n                    'Credit_Limit',\n                    'Total_Revolving_Bal',\n                    'Avg_Open_To_Buy',\n                    'Total_Amt_Chng_Q4_Q1',\n                    'Total_Trans_Amt',\n                    'Total_Trans_Ct',\n                    'Total_Ct_Chng_Q4_Q1',\n                    'Avg_Utilization_Ratio' ]\n","dc3d0b17":"clf1 = setup(df,\n            target = 'Attrition_Flag',\n            categorical_features = categorical_features,\n            numeric_features = numeric_features,\n            ignore_features = ignore_features,\n            silent = True)","8409da1f":"best = compare_models(sort='AUC')","adb4f8a9":"plot_model(best, 'confusion_matrix')","8b0ef65f":"plot_model(best, 'class_report')","c8db9f8d":"plot_model(best, 'feature')","9de26288":"> **Confusion Matrix of Test Set**","fa4e4c67":"> Feature Importance Plot"}}