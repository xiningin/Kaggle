{"cell_type":{"499bf756":"code","f0becdca":"code","2b72ea71":"code","766147c1":"code","808f6ce5":"code","b9fbcc7a":"code","2274d9f1":"code","ccd5d5bf":"code","d49945dc":"code","e5fc8d76":"code","5a9a34cf":"code","ac943f75":"code","34dce2a5":"code","b513133c":"code","f2eeed1d":"code","44dd69db":"code","4c3fe633":"code","144e2bdc":"code","4d014206":"code","dd8fc4d3":"code","4bac248f":"code","aa847ca2":"markdown","34e6569e":"markdown","b4c21248":"markdown","9b3a6a4d":"markdown","af2e80bc":"markdown"},"source":{"499bf756":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","f0becdca":"df = pd.read_csv('..\/input\/pga-tour-golf-data-2017-season\/PGATOUR_data2.csv')","2b72ea71":"df.tail()","766147c1":"df.dropna(\n    axis=0,\n    how='any',\n    thresh=None,\n    subset=None,\n    inplace=True\n)","808f6ce5":"df.info()","b9fbcc7a":"df.describe()","2274d9f1":"df2 = df.drop(['FAIRWAYS_HIT', 'Player', 'TOTAL_DRIVES'], axis = 1)","ccd5d5bf":"df2.info()","d49945dc":"X = df2.values\nfrom sklearn.preprocessing import StandardScaler\nX = StandardScaler().fit_transform(X)","e5fc8d76":"X","5a9a34cf":"from sklearn.decomposition import PCA\npca = PCA(n_components=2)\nprincipalComponents1 = pca.fit_transform(X)","ac943f75":"principalComponents1","34dce2a5":"PCA_dataset1 = pd.DataFrame(data = principalComponents1, columns = ['component1', 'component2'] )\nPCA_dataset1.head()","b513133c":"principal_component1 = PCA_dataset1['component1']\nprincipal_component2 = PCA_dataset1['component2']","f2eeed1d":"plt.figure()\nplt.figure(figsize=(10,10))\nplt.xlabel('Component 1')\nplt.ylabel('Component 2')\nplt.title('2 Component PCA')\nplt.scatter(PCA_dataset1['component1'], PCA_dataset1['component2'])","44dd69db":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters = 20, init = 'k-means++', random_state = 1)\ny_kmeans = kmeans.fit_predict(principalComponents1)","4c3fe633":"from matplotlib import colors as mcolors","144e2bdc":"plt.scatter(principalComponents1[y_kmeans == 0, 0], principalComponents1[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(principalComponents1[y_kmeans == 1, 0], principalComponents1[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(principalComponents1[y_kmeans == 2, 0], principalComponents1[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(principalComponents1[y_kmeans == 3, 0], principalComponents1[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(principalComponents1[y_kmeans == 4, 0], principalComponents1[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(principalComponents1[y_kmeans == 5, 0], principalComponents1[y_kmeans == 5, 1], s = 100, c = 'limegreen', label = 'Cluster 6')\nplt.scatter(principalComponents1[y_kmeans == 6, 0], principalComponents1[y_kmeans == 6, 1], s = 100, c = 'lavender', label = 'Cluster 7')\nplt.scatter(principalComponents1[y_kmeans == 7, 0], principalComponents1[y_kmeans == 7, 1], s = 100, c = 'black', label = 'Cluster 8')\nplt.scatter(principalComponents1[y_kmeans == 8, 0], principalComponents1[y_kmeans == 8, 1], s = 100, c = 'dimgray', label = 'Cluster 9')\nplt.scatter(principalComponents1[y_kmeans == 9, 0], principalComponents1[y_kmeans == 9, 1], s = 100, c = 'silver', label = 'Cluster 10')\nplt.scatter(principalComponents1[y_kmeans == 10, 0], principalComponents1[y_kmeans == 10, 1], s = 100, c = 'gainsboro', label = 'Cluster 11')\nplt.scatter(principalComponents1[y_kmeans == 11, 0], principalComponents1[y_kmeans == 11, 1], s = 100, c = 'white', label = 'Cluster 12')\nplt.scatter(principalComponents1[y_kmeans == 12, 0], principalComponents1[y_kmeans == 12, 1], s = 100, c = 'whitesmoke', label = 'Cluster 13')\nplt.scatter(principalComponents1[y_kmeans == 13, 0], principalComponents1[y_kmeans == 13, 1], s = 100, c = 'rosybrown', label = 'Cluster 14')\nplt.scatter(principalComponents1[y_kmeans == 14, 0], principalComponents1[y_kmeans == 14, 1], s = 100, c = 'indianred', label = 'Cluster 15')\nplt.scatter(principalComponents1[y_kmeans == 15, 0], principalComponents1[y_kmeans == 15, 1], s = 100, c = 'firebrick', label = 'Cluster 16')\nplt.scatter(principalComponents1[y_kmeans == 16, 0], principalComponents1[y_kmeans == 16, 1], s = 100, c = 'red', label = 'Cluster 17')\nplt.scatter(principalComponents1[y_kmeans == 17, 0], principalComponents1[y_kmeans == 17, 1], s = 100, c = 'mistyrose', label = 'Cluster 18')\nplt.scatter(principalComponents1[y_kmeans == 18, 0], principalComponents1[y_kmeans == 18, 1], s = 100, c = 'salmon', label = 'Cluster 19')\nplt.scatter(principalComponents1[y_kmeans == 19, 0], principalComponents1[y_kmeans == 19, 1], s = 100, c = 'darksalmon', label = 'Cluster 20')","4d014206":"import scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(principalComponents1, method = 'ward'))\nplt.title('Dendrogram')\nplt.xlabel('Compounds')\nplt.ylabel('Euclidean distances')\nplt.show()","dd8fc4d3":"# Implementing the Hierachical Clustering.\nfrom sklearn.cluster import AgglomerativeClustering\nhc2 = AgglomerativeClustering(n_clusters = 20, affinity = 'euclidean', linkage = 'ward')\ny_hc2 = hc2.fit_predict(principalComponents1)","4bac248f":"plt.scatter(principalComponents1[y_hc2 == 0, 0], principalComponents1[y_hc2 == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(principalComponents1[y_hc2 == 1, 0], principalComponents1[y_hc2 == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(principalComponents1[y_hc2 == 2, 0], principalComponents1[y_hc2 == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(principalComponents1[y_hc2 == 3, 0], principalComponents1[y_hc2 == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(principalComponents1[y_hc2 == 4, 0], principalComponents1[y_hc2 == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(principalComponents1[y_hc2 == 5, 0], principalComponents1[y_hc2 == 5, 1], s = 100, c = 'limegreen', label = 'Cluster 6')\nplt.scatter(principalComponents1[y_hc2 == 6, 0], principalComponents1[y_hc2 == 6, 1], s = 100, c = 'lavender', label = 'Cluster 7')\nplt.scatter(principalComponents1[y_hc2 == 7, 0], principalComponents1[y_hc2 == 7, 1], s = 100, c = 'black', label = 'Cluster 8')\nplt.scatter(principalComponents1[y_hc2 == 8, 0], principalComponents1[y_hc2 == 8, 1], s = 100, c = 'dimgray', label = 'Cluster 9')\nplt.scatter(principalComponents1[y_hc2 == 9, 0], principalComponents1[y_hc2 == 9, 1], s = 100, c = 'silver', label = 'Cluster 10')\nplt.scatter(principalComponents1[y_hc2 == 10, 0], principalComponents1[y_hc2 == 10, 1], s = 100, c = 'gainsboro', label = 'Cluster 11')\nplt.scatter(principalComponents1[y_hc2 == 11, 0], principalComponents1[y_hc2 == 11, 1], s = 100, c = 'white', label = 'Cluster 12')\nplt.scatter(principalComponents1[y_hc2 == 12, 0], principalComponents1[y_hc2 == 12, 1], s = 100, c = 'whitesmoke', label = 'Cluster 13')\nplt.scatter(principalComponents1[y_hc2 == 13, 0], principalComponents1[y_hc2 == 13, 1], s = 100, c = 'rosybrown', label = 'Cluster 14')\nplt.scatter(principalComponents1[y_hc2 == 14, 0], principalComponents1[y_hc2 == 14, 1], s = 100, c = 'indianred', label = 'Cluster 15')\nplt.scatter(principalComponents1[y_hc2 == 15, 0], principalComponents1[y_hc2 == 15, 1], s = 100, c = 'firebrick', label = 'Cluster 16')\nplt.scatter(principalComponents1[y_hc2 == 16, 0], principalComponents1[y_hc2 == 16, 1], s = 100, c = 'red', label = 'Cluster 17')\nplt.scatter(principalComponents1[y_hc2 == 17, 0], principalComponents1[y_hc2 == 17, 1], s = 100, c = 'mistyrose', label = 'Cluster 18')\nplt.scatter(principalComponents1[y_hc2 == 18, 0], principalComponents1[y_hc2 == 18, 1], s = 100, c = 'salmon', label = 'Cluster 19')","aa847ca2":"# Cricket Players - KMeans versus Hierarchical Clustering","34e6569e":"In this notebook I try to splice cricket player data using two clustering algorithms - KMeans and Hierarchical. I hope you enjoy!","b4c21248":"# Importing Libraries","9b3a6a4d":"# PCA and Standardization","af2e80bc":"# Data"}}