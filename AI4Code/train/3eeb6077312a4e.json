{"cell_type":{"d06382d1":"code","0ffc2bb6":"code","fa906bfb":"code","1d26371e":"code","369470d0":"code","d7bedabd":"code","2a84db6f":"code","5b01d863":"code","4a593c89":"code","bb706ab2":"code","3f03c196":"code","24897117":"code","0f2b61c2":"code","66a16636":"code","0c1c1699":"code","3cf92487":"code","ef576f67":"code","7f019ae5":"code","9bd65823":"code","4fbe2165":"code","23a3efa2":"code","23fb595d":"code","04169a7e":"code","abd589ba":"code","fc13764e":"code","24883f1d":"code","6afff26d":"code","b3f64c5c":"code","b77b4e98":"code","f9cf4285":"code","e637608c":"code","1061eaa4":"code","642c52c8":"code","380c1eb2":"code","c9a3d85e":"code","bc73e19e":"code","c1715504":"code","dd7d729e":"code","e98a797e":"markdown","cadb52cc":"markdown","517cbf0c":"markdown","39503e9e":"markdown","056a6d87":"markdown","13fd6a6c":"markdown","a7303c6a":"markdown","6a7d8843":"markdown","32141117":"markdown","0e234ff1":"markdown","7d6e48ae":"markdown","49ff4967":"markdown","2d1bdee7":"markdown","8e094e12":"markdown","b46fb9db":"markdown","575fffd7":"markdown","3dbd978e":"markdown","c4c17f91":"markdown","08fcfc97":"markdown"},"source":{"d06382d1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0ffc2bb6":"df = pd.read_csv('..\/input\/penguins-size\/penguins_size.csv')","fa906bfb":"df.head()","1d26371e":"df.info()","369470d0":"\ndf.isna().sum()","d7bedabd":"df = df.dropna()","2a84db6f":"df.info()","5b01d863":"df['sex'].unique()","4a593c89":"df = df[df['sex']!='.']","bb706ab2":"df['sex'].unique()","3f03c196":"sns.scatterplot(data=df, x='culmen_length_mm',y='culmen_depth_mm',hue='species',palette='Dark2')","24897117":"sns.pairplot(df,hue='species',palette='Dark2')","0f2b61c2":"sns.catplot(data=df, x='species',y='culmen_length_mm',kind='box',col='sex',palette='Dark2')","66a16636":"pd.get_dummies(df)","0c1c1699":"pd.get_dummies(df.drop('species',axis=1),drop_first=True)","3cf92487":"X = pd.get_dummies(df.drop('species',axis=1),drop_first=True)\ny = df['species']","ef576f67":"from sklearn.model_selection import train_test_split","7f019ae5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","9bd65823":"from sklearn.tree import DecisionTreeClassifier","4fbe2165":"model = DecisionTreeClassifier()","23a3efa2":"model.fit(X_train,y_train)","23fb595d":"y_pred = model.predict(X_test)","04169a7e":"from sklearn.metrics import confusion_matrix,classification_report","abd589ba":"confusion_matrix(y_test,y_pred)","fc13764e":"print(classification_report(y_test,y_pred))","24883f1d":"model.feature_importances_","6afff26d":"pd.DataFrame(index=X.columns,data=model.feature_importances_,columns=['Feature Importance'])","b3f64c5c":"from sklearn.tree import plot_tree","b77b4e98":"plt.figure(figsize=(12,8))\nplot_tree(model);","f9cf4285":"plt.figure(figsize=(12,8),dpi=150)\nplot_tree(model,filled=True,feature_names=X.columns);","e637608c":"def report_model(model):\n    model_preds = model.predict(X_test)\n    print(classification_report(y_test,model_preds))\n    print('\\n')\n    plt.figure(figsize=(12,8),dpi=150)\n    plot_tree(model,filled=True,feature_names=X.columns);","1061eaa4":"help(DecisionTreeClassifier)","642c52c8":"pruned_tree = DecisionTreeClassifier(max_depth=2)\npruned_tree.fit(X_train,y_train)","380c1eb2":"report_model(pruned_tree)","c9a3d85e":"pruned_tree = DecisionTreeClassifier(max_leaf_nodes=3)\npruned_tree.fit(X_train,y_train)","bc73e19e":"report_model(pruned_tree)","c1715504":"entropy_tree = DecisionTreeClassifier(criterion='entropy')\nentropy_tree.fit(X_train,y_train)","dd7d729e":"report_model(entropy_tree)","e98a797e":"## Step4: EDA ","cadb52cc":"## Step5: Feature Engineering","517cbf0c":"## Criterion","39503e9e":"# Visualize the Tree\n","056a6d87":"## Step1: Import all Necessary Libraries","13fd6a6c":"# Reporting Model Results\n\nTo begin experimenting with hyperparameters, let's create a function that reports back classification results and plots out the tree.","a7303c6a":"## Step8: Train the Model","6a7d8843":"## Step7: Split the Dataset to Train & Test set","32141117":"## Step3: Data Overview","0e234ff1":"## Step9: Predicting Test Data","7d6e48ae":"## Step2: Import the Dataset","49ff4967":"---","2d1bdee7":"## Step6: Determine the Features & Target Variable","8e094e12":"## Max Leaf Nodes","b46fb9db":"### Dealing with missing Data","575fffd7":"## Step3: Data Cleaning","3dbd978e":"### About the Data\n\n\n\n**We will work with the \"Palmer Penguins\" dataset**\n\n\n\nData were collected and made available by Dr. Kristen Gorman and the Palmer Station, Antarctica LTER, a member of the Long Term Ecological Research Network.\n\nGorman KB, Williams TD, Fraser WR (2014) Ecological Sexual Dimorphism and Environmental Variability within a Community of Antarctic Penguins (Genus Pygoscelis). PLoS ONE 9(3): e90081. doi:10.1371\/journal.pone.0090081\n\n\n\n* penguins_size.csv: Simplified data from original penguin data sets. Contains variables:\n\n    * species: penguin species (Chinstrap, Ad\u00e9lie, or Gentoo)\n    * culmen_length_mm: culmen length (mm)\n    * culmen_depth_mm: culmen depth (mm)\n    * flipper_length_mm: flipper length (mm)\n    * body_mass_g: body mass (g)\n    * island: island name (Dream, Torgersen, or Biscoe) in the Palmer Archipelago (Antarctica)\n    * sex: penguin sex\n\n  \n\nNote: The culmen is \"the upper ridge of a bird's beak\" \n\n**Our goal is to create a model that can help predict a species of a penguin based on physical attributes, then we can use that model to help researchers classify penguins in the field, instead of needing an experienced biologist**","c4c17f91":"## Step10: Evaluating the Model","08fcfc97":"# Understanding Hyperparameters\n\n### Max Depth"}}