{"cell_type":{"2467e85d":"code","c79f1637":"code","2a83780c":"code","a20292f9":"code","c31f50ed":"code","c7c4dbb7":"code","cfbb7c25":"code","007e6b97":"code","c20d55e0":"code","a20996c0":"code","13326f7e":"code","a829721d":"code","df6a6aef":"code","dc510a58":"code","5d7558fb":"code","3701f689":"code","2b39ca8f":"code","4c4ed41d":"code","2939c689":"code","1718031e":"code","3b325256":"code","08b1b514":"code","abf098e1":"code","49493bde":"code","9899912d":"code","c3c83162":"code","de6fe3aa":"code","bf5fb272":"code","6ab871ef":"code","8a1a47f6":"code","01a27681":"code","1fe92986":"code","c48e7a53":"code","48fe6434":"code","7457abc4":"code","90a00089":"code","e6ef45da":"code","7b844cce":"code","65b7c8c3":"code","e11d6c0c":"code","ba9bdc53":"code","b251c5b0":"code","5b1ccd62":"code","da243183":"code","a638bf26":"code","646cd945":"code","53aad52f":"code","7bda132d":"code","87c43a49":"code","7afee479":"code","c05be7b1":"code","ea014d0b":"code","5835db4f":"code","5c74aff5":"code","13c87efd":"code","29edc815":"code","00e3eabb":"code","bc355fac":"code","e85c430c":"code","b76da630":"code","a3cc2854":"code","85295e81":"markdown","390cc9a9":"markdown","7e002ab6":"markdown","ccfb298a":"markdown","45de57b6":"markdown","b09adcf8":"markdown","841fe5bb":"markdown","a36322a3":"markdown","8d1a39c6":"markdown","651f57f6":"markdown","fec5e7bd":"markdown","c8659c89":"markdown","0f5cd024":"markdown","aa6f88bf":"markdown","5731ec2a":"markdown","448fac40":"markdown","f360b651":"markdown","f54f68ac":"markdown","fbd844ea":"markdown","7141e5d4":"markdown","027e7a1a":"markdown","69c7ed20":"markdown","63078b31":"markdown","65057373":"markdown","af78b7ae":"markdown","36e1441b":"markdown","ab59151d":"markdown","80376b42":"markdown","7882b7e7":"markdown","afd21db5":"markdown","e3b7ea2f":"markdown"},"source":{"2467e85d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c79f1637":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","2a83780c":"data = pd.read_csv(\"\/kaggle\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv\")\ndata.head()","a20292f9":"data.info()","c31f50ed":"data.shape","c7c4dbb7":"data.describe()","cfbb7c25":" data[\"Education\"].value_counts()","007e6b97":"data[\"EnvironmentSatisfaction\"].value_counts()","c20d55e0":"data[\"HourlyRate\"].value_counts()","a20996c0":"pd.set_option('max_columns', 35)","13326f7e":"data.head()","a829721d":"data[\"BusinessTravel\"].value_counts()","df6a6aef":"data[\"Department\"].value_counts()","dc510a58":"data[\"EducationField\"].value_counts()","5d7558fb":"data['Attrition'].value_counts()","3701f689":"data['JobRole'].value_counts()","2b39ca8f":"data['JobLevel'].value_counts()","4c4ed41d":"data['JobInvolvement'].value_counts()","2939c689":"data['JobSatisfaction'].value_counts()","1718031e":"data['MaritalStatus'].value_counts()","3b325256":"data['JobRole'].value_counts()","08b1b514":"data['Attrition'].value_counts()","abf098e1":"data['Attrition'].replace({'No':0,'Yes':1},inplace=True)\ndata['Attrition'].value_counts()","49493bde":"data[['JobInvolvement', 'Attrition']].groupby(['JobInvolvement'], as_index=False).mean().sort_values(by='Attrition', ascending=False)","9899912d":"c = data[['JobSatisfaction', 'Attrition']].groupby(['JobSatisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","c3c83162":"c = data[['JobRole', 'Attrition']].groupby(['JobRole'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","de6fe3aa":"c = data[['Gender', 'Attrition']].groupby(['Gender'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","bf5fb272":"c = data[['EnvironmentSatisfaction', 'Attrition']].groupby(['EnvironmentSatisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","6ab871ef":"c = data[['JobLevel', 'Attrition']].groupby(['JobLevel'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","8a1a47f6":"import seaborn as sns\ng = sns.FacetGrid(data, col='Attrition')\ng.map(plt.hist, 'MonthlyIncome', bins=20)","01a27681":"grid = sns.FacetGrid(data, col='Attrition', row='JobLevel', size=2.2, aspect=1.6)\ngrid.map(plt.hist, 'MonthlyIncome', alpha=.5, bins=20)\ngrid.add_legend();","1fe92986":"grid = sns.FacetGrid(data, col='Attrition', row='JobRole', size=2.2, aspect=1.6)\ngrid.map(plt.hist, 'MonthlyIncome', alpha=.5, bins=20)\ngrid.add_legend();","c48e7a53":"grid = sns.FacetGrid(data, col='Attrition', row='EnvironmentSatisfaction', size=2.2, aspect=1.6)\ngrid.map(plt.hist, 'MonthlyIncome', alpha=.5, bins=20)\ngrid.add_legend();","48fe6434":"print(data[['JobSatisfaction', 'Attrition']].groupby(['JobSatisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False))\nprint(data[['RelationshipSatisfaction', 'Attrition']].groupby(['RelationshipSatisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False))\nprint(data[['EnvironmentSatisfaction', 'Attrition']].groupby(['EnvironmentSatisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False))\nprint(data[['WorkLifeBalance', 'Attrition']].groupby(['WorkLifeBalance'], as_index=False).mean().sort_values(by='Attrition', ascending=False))","7457abc4":"data[\"Satisfaction\"] = (data[\"EnvironmentSatisfaction\"]+data[\"JobSatisfaction\"]+data[\"RelationshipSatisfaction\"]+data[\"WorkLifeBalance\"])\/\/4\ndata.head()","90a00089":"print(data[['Satisfaction', 'Attrition']].groupby(['Satisfaction'], as_index=False).mean().sort_values(by='Attrition', ascending=False))","e6ef45da":"data = data.drop(columns=['StandardHours','EmployeeCount', 'Over18',])\npd.set_option('max_columns', 35)\ndata.head()","7b844cce":"d = {'Sales Representative':0,'Laboratory Technician':1,'Humon Resources':2, 'Sales Executive':3, 'Research Scientist':4,'Manufacturing Director':5,'Healthcare Representative':6,'Manager':7,'Research Director':8}\ndata['JobRole'].replace(d,inplace=True)\ndata.head()","65b7c8c3":"data['Gender'].replace({'Male':0,'Female':1},inplace = True)\ndata.head()","e11d6c0c":"d = {'Research & Development':0,'Sales':1,'Humon Resources':2}\ndata['Department'].replace(d,inplace=True)\ndata.head()","ba9bdc53":"d = {'Travel_Rarely':0,'Travel_Frequently':1,'Non-Travel':2}\ndata['BusinessTravel'].replace(d,inplace=True)\ndata.head()","b251c5b0":"data[\"Satisfaction\"] = (data[\"EnvironmentSatisfaction\"]+data[\"JobSatisfaction\"]+data[\"RelationshipSatisfaction\"]+data[\"WorkLifeBalance\"])\/\/4\ndata.head()","5b1ccd62":"data[\"Years\"] = (data[\"YearsAtCompany\"]+data[\"YearsInCurrentRole\"]+ data[\"YearsSinceLastPromotion\"]+ data[\"YearsWithCurrManager\"])\/\/4\nprint(data.head())\ndata.corr()","da243183":"data['OverTime'].replace({'No':0,'Yes':1},inplace=True)\ndata['OverTime'].value_counts()","a638bf26":"data.corr()","646cd945":"data[\"NumCompaniesWorked\"].value_counts()","53aad52f":"c = data[['NumCompaniesWorked', 'Attrition']].groupby(['NumCompaniesWorked'], as_index=False).mean().sort_values(by='Attrition', ascending=False)\nprint(c)","7bda132d":"def fn(n):\n    a = []\n    for i in n:\n        if i>4:\n            a.append(1)\n        else:\n            a.append(0)\n    return a","87c43a49":"data[\"NumComp\"] = fn(data[\"NumCompaniesWorked\"])\ndata.head()","7afee479":"data.corr()","c05be7b1":"plt.figure(figsize= (30,20))\nsns.heatmap(data.corr(),cmap = 'Dark2',annot = True,linewidths=1.0,linecolor='black')","ea014d0b":"plt.figure(figsize= (30,20))\nsns.heatmap(np.abs(data.corr()),cmap = 'Dark2',annot = True,linewidths=1.0,linecolor='black')","5835db4f":"from sklearn.linear_model import LogisticRegression   \nfrom sklearn.model_selection import KFold \nfrom sklearn.ensemble import RandomForestClassifier \nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score , f1_score","5c74aff5":"def classification_model(model, data, predictors, outcome):  \n    #Fit the model:  \n    model.fit(data[predictors],data[outcome])    \n    #Make predictions on training set:  \n    predictions = model.predict(data[predictors])    \n    #Print accuracy  \n    accuracy = metrics.accuracy_score(predictions,data[outcome])  \n    print(\"Accuracy : %s\" % \"{0:.3%}\".format(accuracy))\n    #Perform k-fold cross-validation with 5 folds  \n    kf = KFold(5,shuffle=True)  \n    error = []  \n    for train, test in kf.split(data):\n        # Filter training data    \n        train_predictors = (data[predictors].iloc[train,:])        \n        # The target we're using to train the algorithm.    \n        train_target = data[outcome].iloc[train]        \n        # Training the algorithm using the predictors and target.    \n        model.fit(train_predictors, train_target)\n        #Record error from each cross-validation run    \n        error.append(model.score(data[predictors].iloc[test,:], data[outcome].iloc[test]))\n     \n    score = f1_score(data[outcome], predictions, average=\"macro\")\n    print('F-Measure: %.3f' % score)\n    print(\"Cross-Validation Score : %s\" % \"{0:.3%}\".format(np.mean(error))) \n    # %s is placeholder for data from format, next % is used to conert it into percentage\n    #.3% is no. of decimals\n    return model","13c87efd":"output = 'Attrition'\nmodel = RandomForestClassifier()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","29edc815":"from sklearn.linear_model import LogisticRegression\noutput = 'Attrition'\nmodel = LogisticRegression()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","00e3eabb":"from sklearn.naive_bayes import GaussianNB\noutput = 'Attrition'\nmodel = GaussianNB()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","bc355fac":"from sklearn.neighbors import KNeighborsClassifier\noutput = 'Attrition'\nmodel = KNeighborsClassifier()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","e85c430c":"from sklearn import svm\noutput = 'Attrition'\nmodel = svm.SVC()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","b76da630":"from sklearn.linear_model import Perceptron\noutput = 'Attrition'\nmodel = Perceptron()\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\n           #,'StockOptionLevel']#,'TotalWorkingYears'] monthlyincome job level years overtime ,'TotalWorkingYears'\nclassification_model(model,data,predict,output)\nm = classification_model(model,data,predict,output)","a3cc2854":"import xgboost as xgb\nfrom sklearn.model_selection import train_test_split\n\noutput = 'Attrition'\npredict = ['Age','Satisfaction','JobInvolvement','JobLevel','MonthlyIncome']\nX_train, X_test, Y_train, Y_test = train_test_split(data[predict], data[output], test_size=0.3)\nD_train = xgb.DMatrix(X_train, label=Y_train)\nD_test = xgb.DMatrix(X_test, label=Y_test)\nparam = {\n    'eta': 0.3, \n    'max_depth': 3,  \n    'objective': 'multi:softprob',  \n    'num_class': 3} \n\nsteps = 20\nmodel = xgb.train(param, D_train, steps)\npreds = model.predict(D_test)\nbest_preds = np.asarray([np.argmax(line) for line in preds])\n\nprint(\"Accuracy = {}\".format(accuracy_score(Y_test, best_preds)))\nprint(\"f1 score = {}\".format(f1_score(Y_test, best_preds)))\n","85295e81":"We get to see that the new feature \"Years\" is not as important for attrition as YearsInCurrentRole or YearsWithCurrManager is. Hence while modelling, we can neglect this feature.","390cc9a9":"Here we can see that EnvironmentSatisfaction isn't really affecting attrition. Employees with low satisfaction and high salary tend to stay while ones who have high satisfaction but low salary, tend to leave. ","7e002ab6":"Another key factor, according to me, is the role of the job an employee has. An employee,may leave if he or she gets a better role in another company. This is mainly because normally a better role means higher salary. ","ccfb298a":"The results are in sync with our hypothesis. Employees with the lowest job involvement, that is one have the highest probability of leaving the company, that is 0.33 . For a job involvement, waiting to almost 0.189 is the probability of attrition taking place. For job involvement rating 3 and 4, we can see that the probability of attrition for an employee is very less, which is 0.1 and 0.09 respectively. Hence, this is again in sync with our hypothesis that if people are more involved in jobs, then they are more likely to stay in the company.","45de57b6":"From the above output we can see that the roles which are normally of a higher position,such as \"Scientist\",\"Manager\" and \"Director\" have the lowest probability of Attrition. Similarly, Sales Representatives are the most in number and by the looks of it, it is the lowest role. Hence, it has almost 0.4 probability of attrition.","b09adcf8":"Generic classification function","841fe5bb":"Support Vector Classifier","a36322a3":"Perceptron","8d1a39c6":"The results we obtain are quite expected. Environment satisfaction 1 is the lowest and has the highest probability of attrition.","651f57f6":"# MODEL CREATION","fec5e7bd":"Again, the results are as we expected. 1 is the lowest level of job satisfaction. Employees with level 1 job satisfaction have the highest probability i.e. 0.22 of leaving the company, while the employees with highest job satisfaction 4, have the lowest probability of attrition.","c8659c89":"Let us check if the Job level affects attrition.","0f5cd024":"Will create more features later","aa6f88bf":"We can see that the new feature NumComp is much more correlated than NumCompaniesWorked. Although the value isn't very high, it can be used.","5731ec2a":"We can see that attrition is most in case of Laboratory Technicians and Sales Executives. For positions such as Director, attrition is almost nil. ","448fac40":"Random Forest Classifier","f360b651":"# FEATURE ENGINEERING","f54f68ac":"# WHY DOES ATTRITION TAKE PLACE?","fbd844ea":"# ENCODING CATEGORICAL FEATURES","7141e5d4":"As expected, the employees at the higher levels have lower probavility of leaving the company.","027e7a1a":"As expected, the gender doesn't really matter. Both gender's have almost equal probabilty of leaving the company.","69c7ed20":"Naive Bayes Classifier","63078b31":"There is a lot of information to unpack here - \n\na. Let us first look at Attrition = 0, which means that attrition does not take place:- \n    1. For all the job levels, it is clearly visible that most of the employees of the company do not leave the company, i.e attrtion does not take place.\n    2. As we move from left to right in a certain graph, we also get to know that the number of employees decrease as we go higher up the income ladder.\n\nb. Now, looking at Attrition = 1\n    1. Most of the attrition takes place in the job levels 1 and 2. \n    2. Job level 3 has attrition but has lower attrition. This can be because the people of this job level, with certain amount of experience, can move into a new company and get a higher pay and move into a higher job level\n    3. Employees at Job levels 4 and 5 are generally very stable.This is why attrition is low. This is because employees at these levels, have high respect and most importantly, high pay.\n    \n\n","65057373":"K-Neighbors Classifier","af78b7ae":"Logistic Regression","36e1441b":"It is said that the environment of work matters a lot. If the work environment is stressful then people should be more prone towards attrition.","ab59151d":"Now, let us check if the gender of the employee has any affect on attrition.","80376b42":"Employees in a certain company may not be given tasks over a period of time just because they are not skilled enough or maybe because their previous record is poor. Hence, their job involvement will be very less, which is denoted by 1 and 2 in the job involvement column. People or employees with more job involvement, which is shown by 3 and for the job involvement column. Work more for the company, and as they have worked, they also might get paid better. Hence they have more motivation to stay and work for the company. If an employee isn't giving any job over the period of time, although the employee is earning money, the employee would like to leave because that would be a waste of time for their career.","7882b7e7":"The new feature Satisfaction, is more meaningful than the features with which it is made. It is also more correlated with the Attrition column","afd21db5":"It is very human for people to go to places where they get more satisfaction and it is the same with employees. If they do not feel satisfied, they will not stay in the company. Let us check the validity of this statement.","e3b7ea2f":"# CREATING MEANINGFUL FEATURES"}}