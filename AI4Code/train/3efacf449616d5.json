{"cell_type":{"0a507498":"code","ef20e057":"code","cfd80c59":"code","290368e6":"code","514f9ea4":"code","0c3d51a7":"code","8f031dd7":"code","27def111":"code","9cde7fc4":"code","e6638372":"code","46f1cce5":"code","b237e6ab":"code","150253b7":"code","197a52f8":"code","e7df3248":"code","e4ed93eb":"code","75a2778f":"code","aa97b85d":"code","c5b7b12f":"code","ceeb98a8":"code","d665296d":"code","51c4cd05":"code","651b6118":"code","8390ddc1":"code","8bf861f3":"code","2233a68a":"code","60f2f002":"code","1e6908b8":"code","a1badf4d":"code","df87863e":"code","f467cf9b":"code","24352c38":"code","02c38431":"code","13e9d711":"code","4288d11a":"code","9a52c12d":"code","c2c6c16f":"code","14394327":"code","09ddede9":"code","a5080d50":"code","471d4e1b":"code","c9e6f6bd":"code","c8152063":"code","ae26f525":"code","619ca576":"code","3c13275b":"code","2056d599":"code","c6687d12":"code","742e343d":"code","ef27c8d2":"code","a3681cf5":"code","918b3e10":"code","159d5109":"code","82836778":"markdown","b07faedb":"markdown","cf921215":"markdown","bc0f113a":"markdown","ea8cb8c4":"markdown","6802064c":"markdown","303dd450":"markdown","4b2fbe2a":"markdown","3cbf5f0d":"markdown","3f8e409c":"markdown","3d6f6ad9":"markdown","8eb3969e":"markdown","7ac93f66":"markdown","c45d586b":"markdown","019841f2":"markdown","5785a351":"markdown","b5bd8b2c":"markdown","ca321c6d":"markdown","9e17554c":"markdown","8395f8be":"markdown","8a12e05c":"markdown","7083d61b":"markdown","b4ecf386":"markdown","3fe8d42d":"markdown","f35b1d83":"markdown","1f216fdc":"markdown","c2161514":"markdown","0249b5b5":"markdown","dc8cb4cb":"markdown","d0ec0fb5":"markdown","26aec023":"markdown","23620fc6":"markdown","c79b978e":"markdown","2b8f499f":"markdown","81b529f6":"markdown","f0553f69":"markdown","acbc00a8":"markdown","48250794":"markdown","e0ac4b79":"markdown","4bb0783f":"markdown","00fc2202":"markdown","73f08117":"markdown","2b6d1b04":"markdown","492c3f0c":"markdown","2064c8a6":"markdown","4e037eca":"markdown","e48fe0c3":"markdown","34599154":"markdown","ed695742":"markdown"},"source":{"0a507498":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\n\nimport collections\nfrom scipy.stats import shapiro","ef20e057":"data = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndata","cfd80c59":"data.shape","290368e6":"data.describe().T","514f9ea4":"data.dtypes","0c3d51a7":"data.Genre = data.Genre.astype('category')","8f031dd7":"data.dtypes","27def111":"data.isnull().sum()","9cde7fc4":"data.duplicated(subset=['Name']).sum()","e6638372":"data.duplicated(subset=['Author']).sum()","46f1cce5":"data.duplicated().sum()","b237e6ab":"#with pd.option_context('display.max_rows', None):\ndisplay(data[data['Name'].duplicated() == True].sort_values(by=['Name']))\n","150253b7":"count_books = collections.Counter(data['Name'].tolist())\ncount_books.most_common(50)","197a52f8":"authors = data['Author'].sort_values().unique()\nauthors","e7df3248":"authors = data['Author'].unique()\nauthors.size","e4ed93eb":"data = data.replace('George R. R. Martin', 'George R.R. Martin')\ndata = data.replace('J. K. Rowling', 'J.K. Rowling')","75a2778f":"authors = data['Author'].unique()\nauthors.size","aa97b85d":"genre = data['Genre'].unique()\ngenre","c5b7b12f":"years = list(data['Year'].unique())\nsorted(years)","ceeb98a8":"data[data['Name'].duplicated() == True]","d665296d":"data_without_year = data.drop(['Year'], axis = 1)\ndata_without_year","51c4cd05":"data_without_year = data_without_year.drop_duplicates(keep='first')\ndata_without_year.info()","651b6118":"count_books = collections.Counter(data_without_year['Name'].tolist())\ncount_books.most_common(10)","8390ddc1":"data_without_year[data_without_year['Name'] == 'Gone Girl']","8bf861f3":"data_without_year_dup = data_without_year.drop_duplicates(subset='Name', keep='first')\ndata_without_year_dup","2233a68a":"top_authors = data_without_year_dup.groupby('Author')[['User Rating']].mean()\\\n                                                                .sort_values('User Rating', ascending=False).head(15)\n\ntop_authors","60f2f002":"count_author_freq = collections.Counter(data['Author'].tolist())\ncount_author_freq = count_author_freq.most_common(15)\ncount_author_freq","1e6908b8":"count_author_freq = pd.DataFrame.from_dict(count_author_freq)\ncount_author_freq.columns =['Name', 'Books']\ncount_author_freq.plot.bar(x='Name', y='Books')","a1badf4d":"books_highest_reviews = data_without_year_dup.groupby('Name')[['Reviews']].sum()\\\n                                                                        .sort_values('Reviews', ascending=False).head(10)\nbooks_highest_reviews","df87863e":"books_highest_reviews.plot.bar()","f467cf9b":"number_of_books_by_genre = data_without_year_dup.groupby('Genre')[['Name']].count()\\\n                                                                 .sort_values('Name', ascending=False).head(10)\n\nnumber_of_books_by_genre","24352c38":"number_of_books_by_genre.plot.pie(y='Name', figsize=(5, 5), autopct=\"%.1f%%\")","02c38431":"data_without_year_dup.describe().T","13e9d711":"sns.boxplot(x=data_without_year_dup['User Rating'])","4288d11a":"sns.boxplot(x=data_without_year_dup['Reviews'])","9a52c12d":"sns.boxplot(x=data_without_year_dup['Price'])","c2c6c16f":"data_without_year_dup.corr()","14394327":"sns.heatmap(data_without_year_dup.corr())","09ddede9":"sns.scatterplot(x=data_without_year_dup['User Rating'], y=data_without_year_dup['Reviews'])","a5080d50":"sns.scatterplot(x=data_without_year_dup['User Rating'], y=data_without_year_dup['Price'])","471d4e1b":"sns.scatterplot(x=data_without_year_dup['Price'], y=data_without_year_dup['Reviews'])","c9e6f6bd":"alpha=0.05\n\nstat, pval = shapiro(data_without_year_dup['User Rating'])\n\nprint('P-Value:', f'{pval:.20f}')\n\nif pval > alpha:\n    print('Accept H0 - Data is distributed normally.')\nif pval < alpha:\n    print('Reject H0 - Data is not distributed normally.')","c8152063":"from sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt","ae26f525":"# chaging the name of the dataframe\ndata_for_cluster = data_without_year_dup.drop(columns=['Name','Author'])","619ca576":"data_for_cluster.head(2)","3c13275b":"data_for_cluster.Genre = data_for_cluster.Genre.astype('object')\ndata_for_cluster.dtypes","2056d599":"data_for_cluster['Genre'].replace(['Fiction','Non Fiction'],[0,1],inplace=True)\ndata_for_cluster.head(2)","c6687d12":"X = data_for_cluster.values\nX","742e343d":"wcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters=i,max_iter=300,random_state=0)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss,'bo-')\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","ef27c8d2":"#choosing number of clusters as 4\nkmeans = KMeans(n_clusters=3,init = 'k-means++', random_state = 100)\ny = kmeans.fit_predict(X)","a3681cf5":"kmeans.cluster_centers_","918b3e10":"kmeans.labels_","159d5109":"f, (ax1, ax2) = plt.subplots(1, 2, sharey=True,figsize=(14,6))\n\nax1.set_title('K Means Review\/Rating')\nax1.scatter(data_for_cluster['Reviews'],data_for_cluster['User Rating'],c=kmeans.labels_,cmap='rainbow')\n\nax2.set_title(\"K Means Price\/Rating \")\nax2.scatter(data_for_cluster['Price'],data_for_cluster['User Rating'],c=kmeans.labels_,cmap ='rainbow')","82836778":"<u>There are 199 duplicates in Name columns. And, 302 duplicate author values. <\/u>","b07faedb":"## <mark>3.1. Chaging of Datatypes<\/mark>","cf921215":"# <mark> 6.Clustering <\/mark>","bc0f113a":"###### INSIGHT: By analyzing the categorical data:\n\n1. <b>The following 10 authors have the highest rating: <\/b><br>\nNathan W. Pyle, Patrick Thorpe, Eric Carle, Emily Winfield Martin, Chip Gaines, Jill Twiss, Rush Limbaugh, Sherri Duskey Rinker, Alice Schertle, Pete Souza, Sarah Young. The average rating for their works was 4.9. When buying a new book, you should pay attention to these authors.\n\n2. <b> Authors who have written more bestsellers: <\/b><br>\nJeff Kinney - 12 books, Rick Riordan - 10 books, J.K. Rowling - 8 books, Stephenie Meyer - 7 books, Dav Pilkey - 6 books, Bill O'Reilly - 6 books, John Grisham - 5 books, E L James - 5 books, Suzanne Collins - 5 books, Charlaine Harris - 4 books. These authors always have something to read.\n\n3. <b>Books with the most reviews: <\/b><br>\nWhere The Crawdads Sing - 87841 Reviews, The Girl On The Train - 79446 Reviews, Becoming - 61133 Reviews, Gone Girl - 57271 Reviews, The Fault In Our Stars - 50482 Reviews. It's definitely worth reading the book Where The Crawdads Sing, it is the most talked about.\n\n4. <b> Non-fiction is more likely to become a bestseller. <\/b>","ea8cb8c4":"-> <u><b>CONCLUSION: Thus, the data contains 351 different books written by 246 authors. All books are presented in two categories (Non Fiction, Fiction). <\/b><\/u>","6802064c":"The null-hypothesis of this test is that the population is normally distributed. Thus, if the p value is less than the chosen alpha level, then the null hypothesis is rejected and there is evidence that the data tested are not normally distributed.","303dd450":"<u> Books with highest reviews: <\/u>","4b2fbe2a":"# <mark>2. Data Description <\/mark>","3cbf5f0d":"<u>There are no duplicates in Genre. No duplicates in Years. <\/u>\n\n---","3f8e409c":"<u>Although, there are no duplicate rows entirely. <b>This is possibly becuase some books remained bestselling throughout many years.<\/b><\/u>\n\n---","3d6f6ad9":"<u>As we can see, total numbers of unique values have decreased by 2.<\/u>","8eb3969e":"-> <u> There are no missing values <\/u>","7ac93f66":"<a id='section2'><\/a>","c45d586b":"###### -> Names of authors George R. R. Martin, George R.R. Martin and J. K. Rowling, J.K. Rowling have different spellings although they are the same authors. \n\nAlthough, this is a tedious task, and we should never check duplicates like this. There are high possibilities of human error. There is a method in fuzzywuzzy package for python, which is used for sting matching. Basically it uses Levenshtein Distance to calculate the differences between sequences.","019841f2":"<a id='section3.3'><\/a>","5785a351":"## <mark>3.2. Missing Values<\/mark>","b5bd8b2c":"<u> Duplicates are still there. But Why!? <\/u>","ca321c6d":"<u><b>INSIGHT: Based on the constructed correlation matrix as well as the constructed visualizations, it can be seen that the data does not contain any positive or negative linear relationship between the rating, reviews and the price of books. <\/b><\/u>","9e17554c":"<b>Contents:<\/b>\n\n1. <a href='#section1'> Importing libraries & reading data <\/a>\n2. <a href='#section2'>Data Description <\/a>\n3. <a href='#section3'>Data Cleaning  <\/a><br>\n    <a href='#section3.1'>3.1. Changing of datatypes  <\/a><br>\n    <a href='#section3.2'>3.2. Missing Values  <\/a><br>\n    <a href='#section3.3'>3.3. Dealing with duplicates  <\/a><br>\n4. <a href='#section4'>Visualisation <\/a><br>\n    <a href='#section4.1'>4.1. Visualising Categorical Variables <\/a><br>\n    <a href='#section4.2'>4.2. Visualising Numerical Variables <\/a><br>\n5. <a href='#section5'>Correlation  <\/a> <br>\n6. <a href='#section6'>Clustering  <\/a> ","8395f8be":"<a id='section4.2'><\/a>","8a12e05c":"<u> Checking if there are same author names with different spellings:<\/u>","7083d61b":"<u> Checking whether the duplicates are completely removed or not. <\/u>\n\n<u>For this I'm using collections library. It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values. <\/u>","b4ecf386":"## <mark>3.3. Dealing with duplicates <\/mark>","3fe8d42d":"-> <u> Records are duplicated by price. Apparently, in different years the book costs differently, which is quite logical taking into account inflation, demand, etc. Let's leave only the first entries. <\/u> ","f35b1d83":"<a id='section3.2'><\/a>","1f216fdc":"-> <u>Datatypes of columns: <\/u>","c2161514":"<u>Checking top 15 best authors according to user rating. <\/u>","0249b5b5":"<a id='section3.1'><\/a>","dc8cb4cb":"# <mark> 5. Corelation <\/mark>","d0ec0fb5":"<a id='section3'><\/a>","26aec023":"<u>As we know, some of the books remained bestselling throughtout the years. We will remove the year column, and store the datafame in 'data_without_year' variable. <\/u>","23620fc6":"<a id='section5'><\/a>","c79b978e":"<img src=\"http:\/\/s3-us-west-2.amazonaws.com\/lndr-landorcom-assets-prd\/app\/uploads\/2018\/05\/22233704\/Amazon-Books_Flickr-Shinya-Suzuki_2-e1527064849416-1160x809.jpg\" width=\"90%\" align=\"left\">","2b8f499f":"<a id='section6'><\/a>","81b529f6":"<u> Earlier there were 550 books, now we have only 361. <\/u>\n\n---","f0553f69":"<u> Removing duplicates to check how many books are left in the data <\/u>","acbc00a8":"<a id='section4'><\/a>","48250794":"<u> Categorising & plotting genres: <\/u>","e0ac4b79":"##### INSIGHT: By analyzing the numeric data:\n\n1. <b>User Rating: <\/b> \n\n- Data is not distributed normally. Asymmetry is observed.\n- Average and median book ratings are 4.6.\n- There are outliers in the data. There are a small number of books in the data below the 4.1 rating.\n\n2. <b>Reviews: <\/b>\n\n- Data is not distributed normally. Asymmetry is observed.\n\n3. <b>Price:<\/b>\n\n- Data is not distributed normally. Asymmetry is observed.\n- There are books that cost much higher than the average, as well as books with a cost of 0!. Either the book is given for free or this error.","4bb0783f":"#### Testing Hypothesis","00fc2202":"# <mark>1. Importing required libs & reading data <\/mark>","73f08117":"## <mark>4.1. Visualising Categorical Variables<\/mark>","2b6d1b04":"## <mark>4.2. Visualising Numerical Variables<\/mark>","492c3f0c":"<u> Authors who have written most books <\/u>","2064c8a6":"-> <u> Using a category datatype (for Genre variable) as there is lots of repetition (it saves memory), and we want to categorize the data further. <\/u>","4e037eca":"<a id='section1'><\/a>","e48fe0c3":"# <mark>4. Visualisation <\/mark>\n\nNow that we are done with data cleaning, lets begin with visualisations.","34599154":"<a id='section4.1'><\/a>","ed695742":"# <mark>3. Data Cleaning <\/mark>\n\n( of data types, missing values, duplicates)"}}