{"cell_type":{"3d64965a":"code","4276a0ec":"code","5a07a54b":"code","b136137b":"code","783f649d":"code","fa20d95f":"code","e993512a":"code","e4626967":"code","a8963b27":"code","281688af":"code","8d07989e":"code","600f901e":"code","f6e6b46f":"code","3ca5a748":"code","3fa4ac2f":"code","4b464992":"code","8cfdbc15":"code","484f9020":"code","066b9146":"code","e5ef0202":"code","0cc6e6da":"code","9444a52c":"markdown","25025029":"markdown","8f3dba38":"markdown","4660db2a":"markdown","8a4828af":"markdown","c0f32192":"markdown","3f2a358c":"markdown","9ad00da7":"markdown","dd694d83":"markdown","759ef6af":"markdown","0cb69e2a":"markdown","87719639":"markdown","c30c2d25":"markdown"},"source":{"3d64965a":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# PCA \/ Clustering\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans","4276a0ec":"# import data and show full table\ndf = pd.read_csv('..\/input\/argentina-provincial-data\/argentina.csv')\ndf","5a07a54b":"# list all features\nfeatures_orig = ['gdp', 'illiteracy', 'poverty', 'deficient_infra',\n                 'school_dropout', 'no_healthcare', 'birth_mortal', 'pop',\n                 'movie_theatres_per_cap', 'doctors_per_cap']","b136137b":"# summary statistics\ndf[features_orig].describe()","783f649d":"# barplot of all the features\nfor f in features_orig:\n    fig = plt.figure(figsize = (12,4))\n    sns.barplot(x='province', y=f, data=df)\n    plt.xticks(rotation=90) \n    plt.grid()\n    plt.title(f)\n    plt.show()","fa20d95f":"# GDP per capita\ndf['gdp_per_cap'] = np.round(df['gdp'] \/ df['pop'],3)\n\n# population in percent\nsum_pop = df['pop'].sum()\nprint('Overall population: ',sum_pop)\n\ndf['pop_perc'] = np.round(100 * df['pop'] \/ sum_pop,4)\n\nfeatures_new = ['gdp_per_cap', 'pop_perc']","e993512a":"# barplots of additional features\nfor f in features_new:\n    fig = plt.figure(figsize = (12,4))\n    sns.barplot(x='province', y=f, data=df)\n    plt.xticks(rotation=90) \n    plt.grid()\n    plt.title(f)\n    plt.show()","e4626967":"# collect all features\nfeatures = features_orig + features_new","a8963b27":"# calc RANK correlation of features\ncorr_mat = df[features].corr(method='spearman')\n# plot (rank) correlation matrix\nfig = plt.figure(figsize = (12,9))\nsns.heatmap(corr_mat, annot=True, cmap=\"RdYlGn\")\nplt.title('Spearman (rank) correlation')\nplt.show()","281688af":"# select features\nfeatures4pca = features.copy()\nfeatures4pca.remove('pop_perc') # use population data only once\nfeatures4pca.remove('gdp') # use GDP only in relative version (per capita)\nprint('Using the following features:')\nprint(features4pca)","8d07989e":"# use only selected features for PCA\ndf4pca = df[features4pca]\n# standardize first\ndf4pca_std = StandardScaler().fit_transform(df4pca)\n# define 3D PCA\npc_model = PCA(n_components=3)\n# calc PCA\npc = pc_model.fit_transform(df4pca_std)\n# add PCA results to original data frame\ndf['pc_1'] = pc[:,0]\ndf['pc_2'] = pc[:,1]\ndf['pc_3'] = pc[:,2]","600f901e":"# interactive plot of top 3 principal components\nfig = px.scatter_3d(df, x='pc_1', y='pc_2', z='pc_3',\n                    color='province',\n                    hover_data=['province'],\n                    opacity=0.5)\nfig.update_layout(title='PCA 3D')\nfig.show()","f6e6b46f":"# define cluster algorithm and parameters\nn_cl = 4 # number of clusters\nkmeans = KMeans(init='random', n_clusters=n_cl, n_init=10, max_iter=300, random_state=99)\n\n# and run it on scaled data (we will simply re-use the data from the PCA excercise)\nkmeans.fit(df4pca_std);","3ca5a748":"# append cluster variable to data frame\ndf['cluster'] = kmeans.labels_.astype('object')","3fa4ac2f":"# show provinces of each cluster\nfor c in range(4):\n    print('Cluster ' + str(c) + ':')\n    print(df[df.cluster==c].province.value_counts().index.tolist())\n    print()","4b464992":"# visualize clusters using PCA components\nfig = px.scatter_3d(df, x='pc_1', y='pc_2', z='pc_3',\n                    color='cluster',\n                    hover_data=['province'],\n                    opacity=0.5)\nfig.update_layout(title='Clusters')\nfig.show()","8cfdbc15":"# use groupby to calc means per cluster\nmean_features = ['illiteracy', 'poverty', 'deficient_infra', 'school_dropout',\n                 'no_healthcare', 'birth_mortal', 'movie_theatres_per_cap',\n                 'doctors_per_cap', 'gdp_per_cap', 'pc_1', 'pc_2', 'pc_3']\n\ncluster_stats_mean = df.groupby(['cluster'])[mean_features].mean()\ncluster_stats_mean","484f9020":"# use groupby to calc sum for each cluster\ncluster_stats_sum = df.groupby(['cluster'])[['gdp','pop','pop_perc']].sum()\ncluster_stats_sum['gdp_per_cap'] = np.round(cluster_stats_sum['gdp'] \/ cluster_stats_sum['pop'],2)\ncluster_stats_sum","066b9146":"# parallel plot showing the original features by cluster\nfig = px.parallel_coordinates(df[features4pca+['cluster']], color='cluster')\nfig.show()","e5ef0202":"# look at the full table including all the new columns\ndf","0cc6e6da":"# save data frame in CSV file\ndf.to_csv('df_prep.csv')","9444a52c":"### Another option to visualize the clusters is a parallel plot:","25025029":"# Table of contents\n* [Basic EDA](#1)\n* [Derive Additional Features](#2)\n* [Correlation of Features](#3)\n* [Principal Component Analysis](#4)\n* [Clustering with k-means and Interpretation](#5)\n* [Overview of Data and Export](#6)","8f3dba38":"<a id='4'><\/a>\n# Principal Component Analysis (PCA)","4660db2a":"<a id='1'><\/a>\n# Basic EDA","8a4828af":"### Now let's visualize the PCA results:","c0f32192":"<a id='2'><\/a>\n# Derive Additional Features","3f2a358c":"<a id='3'><\/a>\n# Correlation","9ad00da7":"### Show the clusters","dd694d83":"### Let's try an interpretation of the clusters now:\n* Cluster 0: Buenos Aires - Province around the capital and by far largest city\n* Cluster 1: Richer provinces\n* Cluster 2: Poorer provinces\n* Cluster 3: Rich provinces (high GDP per capita) with low population, very low illiteracy and school dropout. High healthcare quality and \"cultural value\" (measured by movies\/theatres per capita)","759ef6af":"<a id='6'><\/a>\n# Overview of data and export","0cb69e2a":"### Buenos Aires seems to be a class of its own.\n### In order to get a better understanding of the other clusters let's check the feature means for each cluster:","87719639":"<a id='5'><\/a>\n# Clustering with k-means","c30c2d25":"### For some features it makes more sense to look at the sum:"}}