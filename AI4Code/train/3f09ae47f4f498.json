{"cell_type":{"58470521":"code","ff8b90d8":"code","65c9b29d":"code","298acaea":"code","966b4e29":"code","1791f582":"code","0f1245b8":"code","555ff99b":"code","f6e9b086":"code","3958525f":"code","bad71653":"code","8736ffe4":"code","efc9b788":"code","3ffed02a":"code","9efcee94":"code","b6cfe11b":"code","c87b7b5b":"code","e7c92d89":"code","06dc6294":"code","9910d372":"markdown","f565ae7e":"markdown","439eb934":"markdown","f5f0c84b":"markdown","5833590b":"markdown"},"source":{"58470521":"!pip install ..\/input\/python-datatable\/datatable-0.11.0-cp37-cp37m-manylinux2010_x86_64.whl\n!mkdir ..\/tmp\/","ff8b90d8":"from time import time\nfrom contextlib import contextmanager\nimport pandas as pd\nfrom tqdm.auto import tqdm\nimport gc\nimport pickle\nimport datatable as dt\n\ngc.enable()\n\n@contextmanager\ndef timer(name):\n    t0 = time()\n    yield\n    print(f'[{name}] done in {time() - t0:.2f} s')\n\ndef sizeof_fmt(num, suffix='B'):\n    for unit in ['','Ki','Mi','Gi','Ti','Pi','Ei','Zi']:\n        if abs(num) < 1024.0:\n            return \"%3.1f%s%s\" % (num, unit, suffix)\n        num \/= 1024.0\n    return \"%.1f%s%s\" % (num, 'Yi', suffix)","65c9b29d":"!du -h ..\/input\/riiid-feather-format\/train.feather","298acaea":"# read the feather format 10 times.\nwith timer('feather'):\n    for _ in tqdm(range(10)):\n        train_df = pd.read_feather('..\/input\/riiid-feather-format\/train.feather')","966b4e29":"print(sizeof_fmt(train_df.memory_usage().sum()))","1791f582":"with timer('feather save'):\n    train_df.to_feather('..\/tmp\/train.feather')","0f1245b8":"with timer('pickle save'):\n    with open('..\/tmp\/train.pickle', 'wb') as f:\n        pickle.dump(train_df, f)","555ff99b":"!du -h ..\/tmp\/train.pickle","f6e9b086":"with timer('pickle load'):\n    for _ in tqdm(range(10)):\n        with open('..\/tmp\/train.pickle', 'rb') as f:\n            train_df = pickle.load(f)","3958525f":"with timer('DataFrame save'):\n    dt.Frame(train_df).to_jay(\"train.jay\")","bad71653":"del train_df","8736ffe4":"with timer('Datatable'):\n    for _ in tqdm(range(10)):\n        train_dt = dt.fread('train.jay')","efc9b788":"with timer('Datatable.Frame save'):\n    train_dt.to_jay('train.jay')","3ffed02a":"type(train_dt)","9efcee94":"!du -h train.jay","b6cfe11b":"import sys\nprint(sizeof_fmt(sys.getsizeof(train_dt)))\ndel train_dt","c87b7b5b":"with timer('Datatable to pd.DataFrame'):\n    for _ in tqdm(range(10)):\n        train_df = dt.fread('train.jay').to_pandas()","e7c92d89":"type(train_df)","06dc6294":"train_df.dtypes","9910d372":"# pickle","f565ae7e":"# conclusion\n\nDatatable loads really fast. However, the conversion from Datatable to pandas.DataFrame is not fast.  \nThe feather format was able to load in about 2 seconds.  ","439eb934":"# feather","f5f0c84b":"# Datatable\n\nhttps:\/\/datatable.readthedocs.io\/en\/latest\/index.html","5833590b":"Reading a csv file with pd.read_csv can take a long time.\nLoading With feather and Datatable very fast.\n\nThe feather format uses the following notebook output file.  \nhttps:\/\/www.kaggle.com\/yamsam\/riiid-feather-format\n\nI also found the following NOTEBOOK very helpful.  \nhttps:\/\/www.kaggle.com\/rohanrao\/tutorial-on-reading-large-datasets  \nhttps:\/\/www.kaggle.com\/yihdarshieh\/riiid-verifying-private-test-dataset-properties  "}}