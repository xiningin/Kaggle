{"cell_type":{"adc72a45":"code","d99838ee":"code","879581a2":"code","b2a682c4":"code","00827da6":"code","6e7fc4de":"code","2d948305":"code","6fd8b8ec":"code","b3e29e83":"code","f5a64f8c":"code","44db713a":"code","36bdacad":"markdown","57107e6e":"markdown","5805c773":"markdown"},"source":{"adc72a45":"import datetime\nimport warnings\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n\n%matplotlib inline","d99838ee":"warnings.simplefilter(action='ignore')\n\nsns.set(rc={'figure.figsize':(15, 6)})\n\nsns.set_style('white', {\n    'axes.spines.left': True,\n    'axes.spines.bottom': True,\n    'axes.spines.right': False,\n    'axes.spines.top': False\n})","879581a2":"df = pd.read_csv('\/kaggle\/input\/sp-air-quality\/sp_air_quality.csv', parse_dates=['Datetime'])","b2a682c4":"df.shape","00827da6":"df.tail()","6e7fc4de":"pd.unique(df['Station'])","2d948305":"pollutants = ['Benzene', 'CO', 'PM10', 'PM2.5', 'NO2', 'O3', 'SO2', 'Toluene', 'TRS']","6fd8b8ec":"# Thresholds of good quality air [https:\/\/cetesb.sp.gov.br\/ar\/padroes-de-qualidade-do-ar\/]\nthresholds = {\n    'PM10': 50,\n    'PM2.5': 25,\n    'O3': 100,\n    'CO': 9,\n    'NO2': 200,\n    'SO2': 20\n}","b3e29e83":"# S\u00e3o Paulo city stations\nsaopaulo_stations = ['Cerqueira C\u00e9sar', 'Cid.Universit\u00e1ria-USP-Ipen', 'Ibirapuera', 'Interlagos',\n        'Itaim Paulista', 'Itaquera', 'Marg.Tiet\u00ea-Pte Rem\u00e9dios', 'Mooca', 'N.Senhora do \u00d3', \n        'Parque D.Pedro II', 'Pinheiros', 'Santana', 'Santo Amaro', 'Pico do Jaragu\u00e1', 'Perus']","f5a64f8c":"for pollutant in pollutants:\n    filtered = df[df['Station'].isin(saopaulo_stations)][['Datetime', pollutant]].dropna()\n    grouped = filtered.groupby('Datetime').mean().reset_index()\n    grouped = grouped.resample('d', on='Datetime').mean().reset_index()\n\n    ax = sns.lineplot(x='Datetime', y=pollutant, data=grouped)\n    \n    plt.title('Mean of ' + pollutant + ' in a day in S\u00e3o Paulo')\n\n    plt.xlabel('')\n    \n    max_lim = np.max(grouped[pollutant] + 10)\n    \n    plt.xlim(datetime.date(2013, 1, 1), datetime.date(2020, 12, 31))\n    plt.ylim(0, max_lim)\n    \n    if pollutant in thresholds and thresholds[pollutant] < max_lim:\n        ax.axhline(thresholds[pollutant], ls='--', label='Good quality threshold', c=sns.color_palette('Greys')[1])\n\n        plt.legend(frameon=False)\n\n    plt.show()","44db713a":"for pollutant in pollutants:\n    filtered = df[df['Station'].isin(saopaulo_stations)][['Datetime', pollutant]].dropna()\n    grouped = filtered.groupby('Datetime').mean().reset_index()\n    grouped = grouped.resample('m', on='Datetime').mean().reset_index()\n\n    series = pd.Series(grouped[pollutant])\n    series.index = grouped['Datetime']\n\n    result = seasonal_decompose(series, model='linear')\n    result.plot()\n    plt.show()\n    ","36bdacad":"## Air quality in the city of S\u00e3o Paulo","57107e6e":"## Decomposing the time series of the pollutants in the city of S\u00e3o Paulo between 2013 and 2020","5805c773":"# Air Quality in S\u00e3o Paulo state between 2013 and 2020"}}