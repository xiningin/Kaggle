{"cell_type":{"719dc58e":"code","c61a36b1":"code","91b1d6a3":"code","7c64ab79":"code","c8b8d95e":"code","27cec052":"code","76b83722":"code","b81bf852":"code","4e124057":"code","7ddb3340":"code","a628979d":"code","1e197d85":"code","55e355d8":"code","265bf59b":"code","35f2724a":"code","7da72ceb":"code","04b3fac3":"code","f58c60ba":"code","ef537b84":"code","89c02957":"code","496b922e":"code","5def9b33":"code","7c76e0ed":"code","2dde8ff4":"code","23cf1ea1":"code","746a628f":"code","9d61107f":"code","ae80e72a":"code","06ca7f82":"code","47f78790":"code","56f90e3f":"code","e13060f1":"code","d6ea9488":"code","26fb3335":"code","b80cbb7b":"code","fe29d7bb":"code","41f64afa":"code","a2d553b4":"code","0ea53614":"code","acdae6aa":"markdown","6c096525":"markdown","faa17e04":"markdown","7b3b02ad":"markdown","c7e4760f":"markdown","00f47df3":"markdown"},"source":{"719dc58e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pymc3 as pm\nimport arviz as az\n\npd.options.display.max_columns = 999\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","c61a36b1":"play_data = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv')","91b1d6a3":"field_goal_data = play_data[play_data.specialTeamsPlayType == 'Field Goal'][['gameId','playId','absoluteYardlineNumber','specialTeamsResult']]","7c64ab79":"pff_data = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')","c8b8d95e":"tracking_data = []\n\nfor year in range(2018,2021):\n    data = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking'+str(year) + '.csv')\n    data = data[data.event == 'field_goal_attempt']\n    tracking_data.append(data)\ntracking_data = pd.concat(tracking_data)\n","27cec052":"del data","76b83722":"tracking_data = pd.merge(tracking_data,field_goal_data)","b81bf852":"tracking_data.loc[tracking_data.playDirection == 'left','x'] = 120-tracking_data['x']\ntracking_data.loc[tracking_data.playDirection == 'left','y'] = 53.33-tracking_data['y']","4e124057":"field_goal_ball_df = tracking_data[tracking_data.team == 'football']","7ddb3340":"ba = np.array(np.array([120,23.583])-field_goal_ball_df[['x','y']])\nbc = np.array(np.array([120,29.75])-field_goal_ball_df[['x','y']])\n\nfield_goal_ball_df['angle'] =  np.degrees(np.arccos(np.array([np.dot(a,b) for a,b in zip(ba,bc)])\/(np.linalg.norm(ba,axis=1)  * np.linalg.norm(bc,axis=1) )))","a628979d":"field_goal_ball_df['fg_dist'] = ((field_goal_ball_df['x'] - 120)**2 + (field_goal_ball_df['y'] - 26.33)**2)**0.5","1e197d85":"field_goal_ball_df = field_goal_ball_df[field_goal_ball_df.fg_dist <= 70]","55e355d8":"field_goal_ball_df['fg_make'] = np.array(field_goal_ball_df[\"specialTeamsResult\"] == 'Kick Attempt Good').astype(int)","265bf59b":"y = field_goal_ball_df['fg_make']\nn = np.ones_like(field_goal_ball_df['fg_make'])","35f2724a":"def plot_kick_data(df, ax=None):\n    \n    if ax is None:\n        _, ax = plt.subplots(1, 1, figsize=(12,8))\n    sns.regplot(x=\"fg_dist\", y=\"fg_make\", data=df, label=\"observed\", ax=ax, logistic=True);\n    \n    vals = ax.get_yticks()\n    _ = ax.set_yticklabels(['{:,.1%}'.format(x) for x in vals])\n    ax.set_xlabel(\"Yards Kicked\")\n    ax.set_ylabel(\"Field Goal Success %\")\n    _ = ax.set_title(\"Field Goal % by Yards Kicked\")\n    \n    return ax","7da72ceb":"_ = plot_kick_data(field_goal_ball_df)","04b3fac3":"X = np.array(field_goal_ball_df[\"fg_dist\"])\n\nwith pm.Model() as model_logit_yards:\n    \n    \u03b1 = pm.Normal(\"\u03b1\", mu=0, sd=1)\n    \u03b2 = pm.Normal(\"\u03b2\", mu=0, sd=1)\n\n    z = \u03b1 + \u03b2 * X\n    p = pm.Deterministic(\"p\", pm.math.invlogit(z))\n\n    y_obs = pm.Binomial(\"y_obs\",n=n, p=p, observed=y)","f58c60ba":"pm.model_to_graphviz(model_logit_yards)","ef537b84":"with model_logit_yards:\n    trace_logit_yards = pm.sample(2000, tune=2000, chains=2, target_accept=0.95, return_inferencedata=True)","89c02957":"az.summary(trace_logit_yards,var_names=[\"\u03b1\",\"\u03b2\"])","496b922e":"az.plot_trace(trace_logit_yards,var_names=[\"\u03b1\",\"\u03b2\"])","5def9b33":"\n\ndef plot_probs_yard(df, probas_posterior, model_name, ax=None):\n    \n    if ax is None:\n        _, ax = plt.subplots(1, 1, figsize=(12,8))\n    \n    az.plot_hdi(x=np.array(field_goal_ball_df[\"fg_dist\"]), y=probas_posterior, hdi_prob=.95, ax=ax, fill_kwargs={'alpha': .2})\n    \n    _ = plot_kick_data(df, ax)\n    ax.set_title(f\"{ax.get_title()} - {model_name}\") ;\n    \n    return ax\n\n","7c76e0ed":"plot_probs_yard(field_goal_ball_df, trace_logit_yards.posterior[\"p\"], \"Logistic Model: Distance\")","2dde8ff4":"X = np.array(field_goal_ball_df[[\"fg_dist\",'angle']])\n","23cf1ea1":"with pm.Model() as model_logit_yards_angle:\n\n    \u03b1 = pm.Normal(\"\u03b1\", mu=0, sd=.1)\n    \u03b2 = pm.Normal(\"\u03b2\", mu=0, sd=.1, shape=X.shape[1])\n\n    z = \u03b1 + pm.math.dot(X, \u03b2)\n\n    p = pm.Deterministic(\"p\", pm.math.invlogit(z))\n\n    y_obs = pm.Binomial(\"y_obs\", n=n, p=p, observed=y)\n","746a628f":"pm.model_to_graphviz(model_logit_yards_angle)","9d61107f":"with model_logit_yards_angle:\n    trace_logit_yards_angle = pm.sample(2000, tune=2000, chains=2, target_accept=0.95, return_inferencedata=True)","ae80e72a":"az.summary(trace_logit_yards_angle,var_names=[\"\u03b1\",\"\u03b2\"])","06ca7f82":"az.plot_trace(trace_logit_yards_angle,var_names=[\"\u03b1\",\"\u03b2\"])","47f78790":"plot_probs_yard(field_goal_ball_df, trace_logit_yards_angle.posterior[\"p\"], \"Logistic Model: Yards + Angle\")","56f90e3f":"field_goal_ball_df[\"fg_dist_angle\"] = field_goal_ball_df[\"fg_dist\"] * field_goal_ball_df[\"angle\"]\nX = field_goal_ball_df[[\"fg_dist\",'angle',\"fg_dist_angle\"]]\n","e13060f1":"with pm.Model() as model_logit_yards_angle_interactions:\n\n    \u03b1 = pm.Normal(\"\u03b1\", mu=0, sd=.1)\n    \u03b2 = pm.Normal(\"\u03b2\", mu=0, sd=.1, shape=X.shape[1])\n\n    z = \u03b1 + pm.math.dot(X, \u03b2)\n\n    p = pm.Deterministic(\"p\", pm.math.invlogit(z))\n\n    y_obs = pm.Binomial(\"y_obs\", n=n, p=p, observed=y)","d6ea9488":"pm.model_to_graphviz(model_logit_yards_angle_interactions)","26fb3335":"with model_logit_yards_angle_interactions:\n    trace_logit_yards_angle_interactions = pm.sample(2000, tune=2000, chains=2, target_accept=0.95, return_inferencedata=True)\n","b80cbb7b":"az.summary(trace_logit_yards_angle_interactions,var_names=[\"\u03b1\",\"\u03b2\"])","fe29d7bb":"az.plot_trace(trace_logit_yards_angle_interactions,var_names=[\"\u03b1\",\"\u03b2\"])","41f64afa":"plot_probs_yard(field_goal_ball_df, trace_logit_yards_angle_interactions.posterior[\"p\"], \"Logistic Model: Yards + Angle + Yards:Angle\")","a2d553b4":"compare_dict = {\"Logistic Model: Distance\": trace_logit_yards, \n                \"Logistic Model: Distance + Angle\": trace_logit_yards_angle,\n                \"Logistic Model: Distance + Angle + Distance*Angle)\": trace_logit_yards_angle_interactions\n\n               }\ndf_compare = az.compare(compare_dict, ic=\"loo\")\ndf_compare","0ea53614":"_, ax = plt.subplots(1, 1, figsize=(10, 5))\naz.plot_compare(df_compare, ax=ax);","acdae6aa":"Similarly instead of using yardsline mark for field goal distance in traditional way, here field goal distance is measured from ball to center of goalpost","6c096525":"After using real tracking data for modelling, all three models are not significantly different from others and so the simplist model with field goal distance only could've be considered for further modelling.","faa17e04":"Three models are considered: field goal distance only, distance & angle and interaction between distance and angle.","7b3b02ad":"As stated in the blog post, the specification of model is as followed:\n\n$\\large \\alpha\\sim Normal(0,1)$\n\n$\\large \\beta\\sim Normal(0,1)$\n\n$\\large z = a + b \\ast X_i$\n\n$\\large p_i = sigmoid(z)$\n\n$\\large y\\sim Binomial(n, p_i)$","c7e4760f":"The following code use the idea from Claus Herther's blogpost on Bayesian modelling of field goal https:\/\/calogica.com\/pymc3\/python\/2020\/01\/10\/nfl-field-goals-bayes.html and apply to tracking data of field goals. The following code would be a brief outline of model only and more details are in the blogpost.","00f47df3":"To find the angle between the ball and two side of goalpost the formula is given by $\\theta=\\arccos(\\frac{\\vec{AB}\\cdot\\vec{BC}}{\\vec{|AB|}\\vec{|BC|}})$ where AB and BC are two line from goalpost to ball. \n\nNFL goalpost width is 18.5 feet (6 1\/6 yards) and the width of whole field is 160 feet (53 1\/3 yards), which makes the goalpost coordinate be $26\\frac{1}{6} \\pm 3\\frac{1}{12}$ yards"}}