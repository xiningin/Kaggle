{"cell_type":{"996d11e8":"code","b5557f3c":"code","d02f5c8d":"code","25c87dff":"code","97186383":"code","c52ea99b":"code","8cd9cb89":"code","a74a1816":"code","171b74b5":"code","aafc9407":"code","bb515a79":"code","45d088ad":"code","70bab504":"code","731ddedd":"code","9b69fc3c":"code","bd55876b":"code","a5cb0b51":"code","3ddca4ff":"code","2c97e511":"markdown","b633edb8":"markdown","07d113bb":"markdown","97ce6964":"markdown","f4973c24":"markdown"},"source":{"996d11e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b5557f3c":"movie_train_path = '..\/input\/train.csv'\nmovie_test_path = '..\/input\/test.csv'\nmovie_data = pd.read_csv(movie_train_path)\ntest_data = pd.read_csv(movie_test_path)","d02f5c8d":"movie_data.head()","25c87dff":"movie_data.drop(['homepage','imdb_id','original_title','overview','poster_path','crew'], axis= 1 , inplace = True)","97186383":"movie_data[['release_month','release_day','release_year']]=df['release_date'].str.split('\/',expand=True).replace(np.nan, 0).astype(int)\nmovie_data['release_year'] = df['release_year']\nmovie_data.loc[ (df['release_year'] <= 18) & (df['release_year'] < 100), \"release_year\"] += 2000\nmovie_data.loc[ (df['release_year'] > 18)  & (df['release_year'] < 100), \"release_year\"] += 1900\n\nmovie_data.drop('release_date',axis= 1 , inplace = True)","c52ea99b":"movie_data.head()","8cd9cb89":"movie_data['belongs_to_collection'].apply(lambda x: 1 if x != {} else 0)","a74a1816":"categorical_cols = [cname for cname in movie_data.columns if movie_data[cname].dtype=='object']\n\nnumerical_cols = [cname for cname in movie_data.columns if movie_data[cname].dtype in ['int64', 'float64']]\n\nmy_cols = categorical_cols + numerical_cols","171b74b5":"categorical_cols","aafc9407":"X = movie_data[my_cols]\ny = movie_data.revenue\nfrom sklearn.model_selection import train_test_split\nX_train,X_valid,y_train,y_valid = train_test_split(X,y,random_state=1)","bb515a79":"X.isnull().sum()","45d088ad":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder","70bab504":"numerical_transformer = SimpleImputer(strategy='mean')\ncategorical_transformer= Pipeline(steps=[('imputer',SimpleImputer(strategy='most_frequent')), \n                                       ('onehot', OneHotEncoder(handle_unknown='ignore'))])\npreprocessor = ColumnTransformer(transformers=[('num',numerical_transformer,numerical_cols),\n                                              ('cat',categorical_transformer, categorical_cols)])","731ddedd":"from xgboost import XGBRegressor\nmodel = XGBRegressor(n_estimators=100,learning_rate = 0.05)","9b69fc3c":"from sklearn.metrics import mean_absolute_error\nmy_pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('model', model)\n                             ])\nmy_pipeline.fit(X_train,y_train)\nprediction1 = my_pipeline.predict(X_valid)\nMAE = mean_absolute_error(prediction1,y_valid)\nprint('MAE: ', MAE)","bd55876b":"my_pipeline.fit(X,y)\nprediction=my_pipeline.predict(test_data)","a5cb0b51":"submission = pd.DataFrame({'id':test_data['id'],\n                          'revenue':prediction})","3ddca4ff":"submission.to_csv('submission.csv',index=False)","2c97e511":"# 2. Feature Engineering","b633edb8":"## \tbelongs_to_collection","07d113bb":"## drop useless columns","97ce6964":"# 1. Read Data","f4973c24":"## release date and language"}}