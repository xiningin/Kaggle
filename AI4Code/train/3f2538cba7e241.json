{"cell_type":{"c00fca07":"code","7e5ae322":"code","59ea821f":"code","c4679630":"code","1591a4a1":"code","d6e368c5":"code","bd349f8a":"code","653b196e":"code","cc223402":"code","f9300579":"code","038143b1":"code","beb8fe2b":"code","8a485782":"code","98e7024a":"code","6bf0ff6d":"code","34f9a30f":"code","3909bef7":"code","870a8cd7":"code","d948a5d2":"code","bc900266":"code","9caa3026":"code","352a0f23":"code","4a0069dc":"code","97a55c01":"code","a92e4c9c":"code","8affa5a0":"code","7b27bb28":"code","41c30be2":"code","e7101d1f":"code","7878807f":"code","9fe1f3c1":"code","40e9dcde":"code","844ad1fa":"code","67c64348":"code","b71f7a9f":"code","bb7204b5":"code","3f427b69":"code","ce7f254c":"code","51631909":"code","b2f92133":"code","221a83e0":"code","efd4d3ca":"code","642f3b93":"code","ba478b92":"code","5a41b9df":"code","1ec6e2f4":"code","cc0cadbc":"code","45cae216":"code","c04cb461":"code","a4f3bfc7":"code","446c1b7f":"code","7903cb02":"code","e4efa0bf":"code","7efb3c5e":"code","db65bb13":"code","b4c7b812":"code","21554427":"code","280a91c8":"code","3cab5dda":"code","afd409d9":"code","18f27659":"code","fdf0211d":"code","d5f3b2a5":"code","120389ff":"code","64ab36fe":"code","220c64df":"code","63696620":"code","8e5821ec":"code","1dbd9992":"code","a8ca7259":"code","73f95d60":"code","ed1d5d9c":"code","7dd7977d":"code","a6c5048f":"code","215e97b2":"code","6e45b250":"code","7b6caa03":"code","741abf03":"code","91ed7757":"code","09dacec9":"code","0af55ac8":"code","b13424b6":"code","49094bb3":"code","c2d5cfd3":"code","d86c4390":"code","eb3f61ca":"code","d8a2cfb0":"code","275dc0e4":"code","df620a04":"code","74507308":"code","1921bf29":"code","97888bf8":"code","daea91a2":"code","590ab639":"code","01242a97":"code","82ca7475":"code","dea16da2":"code","081bae01":"code","8812c103":"code","94d01345":"code","4195ca89":"code","bb409600":"code","a4aace98":"code","e67383a4":"code","533c156c":"code","ef77af54":"code","e332ff5a":"code","44246ea5":"code","8999fda3":"code","b5be7eed":"code","13651e07":"code","3157c4e4":"code","e391ff5f":"code","3f0b7c17":"code","7741dd0a":"code","c8dff993":"code","c3756dca":"code","de2ca805":"code","20e51193":"code","31e302f0":"code","f074ac46":"code","9cd27451":"code","3aa80706":"code","d248ed18":"code","d67a1e71":"code","a824d4c4":"code","51b4ed04":"code","cff3fc68":"code","7582f4b1":"markdown","d4a760a1":"markdown","3ad67891":"markdown","07b92023":"markdown","7b7f0445":"markdown","dd41d0d9":"markdown","0ad83538":"markdown","1b081a8c":"markdown","7499e7e1":"markdown","83dce69b":"markdown","90782ff6":"markdown","3b76c9f4":"markdown","d221aca7":"markdown","ef33bac4":"markdown","1c97ae74":"markdown","b8b4f3c3":"markdown","d9c5b165":"markdown","ad5e92d5":"markdown","461f46cd":"markdown","c06efbfe":"markdown","2bccae17":"markdown","7876aa7c":"markdown","4808be2a":"markdown","e0b7757c":"markdown","917cc882":"markdown","e7578830":"markdown","28fa9065":"markdown","f0294887":"markdown","dc54d308":"markdown","7b22ce6d":"markdown","c9fff7c9":"markdown","29f06648":"markdown","bac0f80d":"markdown","aca73004":"markdown","bf630ea5":"markdown","66134edb":"markdown","f94e1d4d":"markdown","96ce654f":"markdown","79f85491":"markdown","74815bc3":"markdown","468e7a70":"markdown","6fc9e0c1":"markdown","fb11631c":"markdown","241f16bf":"markdown","a83d85e8":"markdown","e905d900":"markdown","560017b8":"markdown","6462aa72":"markdown","63a13e06":"markdown","ab507fce":"markdown","9e67f2c8":"markdown","e8333aa1":"markdown","c0c56b97":"markdown","7a33a5e2":"markdown","58f97c8e":"markdown","c8c474a1":"markdown","bb803e60":"markdown","2bdc7acb":"markdown","4c4945cd":"markdown","43ed6468":"markdown","e90341eb":"markdown","ed414617":"markdown","94dfcfee":"markdown","b8d50e7a":"markdown","e12f92ff":"markdown","dd6236b5":"markdown","67a9fdbd":"markdown","ec8fd556":"markdown","73c32719":"markdown","7eeaaa0a":"markdown","d0df3383":"markdown","ee6e3194":"markdown","708eaaa3":"markdown","159ad2d7":"markdown","20185939":"markdown","ab659862":"markdown","fec67d4a":"markdown","c12c4bd0":"markdown","9c01fd10":"markdown","4afea90d":"markdown","6ebd3f8a":"markdown","a175f778":"markdown","8ee73972":"markdown","13ab5ca4":"markdown","0270dbd0":"markdown"},"source":{"c00fca07":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option(\"display.max_columns\",500)","7e5ae322":"app_data0 = pd.read_csv('..\/input\/bank-loan-default\/application_data.csv')\nprint(app_data0.shape)\napp_data0.head()","59ea821f":"app_data0.info()","c4679630":"app_data0.isnull().sum()","1591a4a1":"app_data0.isnull().sum().sum()","d6e368c5":"# nullPresent() gives the percentage of the nulls present in each column i.e total number of nulls divided by toal number of values present\ndef nullPersent(x):\n    percent = x.isnull().sum()\/x.shape[0]\n    return percent","bd349f8a":"percentOfNullsInCols = app_data0.apply(nullPersent, axis=0)*100\npercentOfNullsInCols","653b196e":"columnsWithNulls = percentOfNullsInCols[percentOfNullsInCols>0]\ncolumnsWithNulls.shape","cc223402":"columnsWithNulls.describe()","f9300579":"sns.set_theme()\ncolumnsWithNulls.sort_values().plot.bar(figsize=[18,6])\nplt.show()","038143b1":"columnsWithNulls.quantile([0.3, 0.4])","beb8fe2b":"columnsWithNulls[columnsWithNulls>40]","8a485782":"app_data1 = app_data0.drop(columnsWithNulls[columnsWithNulls>40].index, axis=1)\nprint(app_data1.shape)\napp_data1.head()","98e7024a":"removeCols = app_data1.loc[1,'FLAG_DOCUMENT_2':'FLAG_DOCUMENT_20'].index\nremoveCols","6bf0ff6d":"app_data1.drop('FLAG_DOCUMENT_21', axis=1, inplace=True) ","34f9a30f":"app_data1.drop(removeCols, axis=1, inplace=True) \nprint(app_data1.shape)\napp_data1.head()","3909bef7":"percentOfNullsInCols = app_data1.apply(nullPersent,axis=0)*100\npercentOfNullsInCols","870a8cd7":"columnsWithNulls = percentOfNullsInCols[percentOfNullsInCols>0]\ncolumnsWithNulls.describe()","d948a5d2":"columnsWithNulls.sort_values().plot.bar()\nplt.show()","bc900266":"app_data1[['OCCUPATION_TYPE', 'EXT_SOURCE_3']].head(10)","9caa3026":"app_data1['OCCUPATION_TYPE'].value_counts()","352a0f23":"app_data1['OCCUPATION_TYPE'].isnull().sum()\/len(app_data1['OCCUPATION_TYPE'].index)*100","4a0069dc":"app_data1['OCCUPATION_TYPE'].fillna('Missing', inplace=True)\napp_data1['OCCUPATION_TYPE'].isnull().sum()","97a55c01":"app_data1.head()","a92e4c9c":"app_data1['EXT_SOURCE_3'].isnull().sum()\/len(app_data1['EXT_SOURCE_3'].index)*100","8affa5a0":"app_data1['EXT_SOURCE_3'].plot.box()\nplt.show()","7b27bb28":"app_data1['EXT_SOURCE_3'].fillna(app_data1['EXT_SOURCE_3'].median(), inplace=True)\nprint(app_data1['EXT_SOURCE_3'].describe())\napp_data1['EXT_SOURCE_3'].isnull().sum()","41c30be2":"columnsWithNulls[columnsWithNulls<15]","e7101d1f":"app_data1[columnsWithNulls[-6:].index].head()","7878807f":"app_data1[columnsWithNulls[-6:].index].describe()","9fe1f3c1":"reqCols = columnsWithNulls[-6:].index\nfor i in range(len(reqCols)):\n    plt.subplot(3, 3, i+1)\n    app_data1[reqCols[i]].plot.box(figsize=[16,8])\nplt.show()","40e9dcde":"for col in reqCols:\n    app_data1[col].fillna(app_data1[col].median(), inplace=True)\napp_data1[reqCols].isnull().sum()","844ad1fa":"columnsWithNulls[columnsWithNulls<13]","67c64348":"app_data1.shape","b71f7a9f":"app_data1[columnsWithNulls[columnsWithNulls<13].index].isnull().sum().sum()","bb7204b5":"for col in columnsWithNulls[columnsWithNulls<13].index:\n    app_data1 = app_data1[~(app_data1[col].isnull())]\napp_data1.shape","3f427b69":"app_data1.head()","ce7f254c":"app_data1.isnull().sum().sum()","51631909":"app_data1.info(-1)","b2f92133":"app_data1['TARGET'].value_counts()","221a83e0":"app_data1['DAYS_BIRTH'].describe()","efd4d3ca":"app_data1['CODE_GENDER'].value_counts()","642f3b93":"app_data1.shape","ba478b92":"app_data1 = app_data1[app_data1['CODE_GENDER']!='XNA']\nprint(app_data1.shape)\napp_data1.head()","5a41b9df":"objCols = app_data1.dtypes[app_data1.dtypes=='object'].index\nobjCols","1ec6e2f4":"for col in objCols:\n    if 'XNA' in app_data1[col].value_counts().index:\n        print(col, end=', ')","cc0cadbc":"app_data1['ORGANIZATION_TYPE'].value_counts()","45cae216":"app_data1[app_data1['ORGANIZATION_TYPE']=='XNA']['ORGANIZATION_TYPE'].count()\/app_data1['ORGANIZATION_TYPE'].count()*100","c04cb461":"app_data1['ORGANIZATION_TYPE'].replace('XNA','Missing', inplace=True)\napp_data1.head()","a4f3bfc7":"colsWithNeg = ['DAYS_BIRTH','DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH', 'DAYS_LAST_PHONE_CHANGE']","446c1b7f":"app_data1[colsWithNeg].dtypes","7903cb02":"for col in colsWithNeg:\n    app_data1[col] = app_data1[col].astype(int).abs()\napp_data1.head()","e4efa0bf":"app_data1.dtypes[app_data1.dtypes!='object']","7efb3c5e":"reqCols = ['AMT_INCOME_TOTAL' , 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE']\nplt.figure(figsize=[18, 12])\nfor i in range(len(reqCols)):\n    plt.subplot(3, 2, i+1)\n    sns.boxplot(app_data1[reqCols[i]])","db65bb13":"app_data1[app_data1['AMT_INCOME_TOTAL']>(10**8)]","b4c7b812":"app_data1 = app_data1[~(app_data1['AMT_INCOME_TOTAL']>(10**8))]\napp_data1.shape","21554427":"plt.figure(figsize=[12, 6])\nsns.boxplot(app_data1['AMT_INCOME_TOTAL'])\nplt.show()","280a91c8":"app_data1['AMT_INCOME_TOTAL'].describe()","3cab5dda":"app_data1['AMT_INCOME_TOTAL'].head(10)","afd409d9":"app_data1['AMT_INCOME_GROUP'] = pd.cut(app_data1['AMT_INCOME_TOTAL'],[0,100000,200000,300000,400000,100000000], labels=['<100K', '100k-200k', '200k-300k', '300k-400k', '>400k'])\napp_data1['AMT_INCOME_GROUP'].head(10)","18f27659":"app_data1['AMT_INCOME_GROUP'].value_counts()","fdf0211d":"reqCols = ['DAYS_BIRTH', 'DAYS_EMPLOYED', 'DAYS_REGISTRATION', 'DAYS_LAST_PHONE_CHANGE', 'DAYS_ID_PUBLISH']\nplt.figure(figsize=[18, 12])\nfor i in range(len(reqCols)):\n    plt.subplot(3, 2, i+1)\n    sns.boxplot(app_data1[reqCols[i]])\nplt.show()","d5f3b2a5":"app_data1[(app_data1['DAYS_EMPLOYED']>50000)].shape","120389ff":"sns.boxplot(app_data1[app_data1['DAYS_EMPLOYED']<50000]['DAYS_EMPLOYED'])","64ab36fe":"reqCols = ['CNT_CHILDREN', 'CNT_FAM_MEMBERS']\nplt.figure(figsize=[10, 8])\nfor i in range(len(reqCols)):\n    plt.subplot(2, 1, i+1)\n    sns.boxplot(app_data1[reqCols[i]])\nplt.show()","220c64df":"app_data1['CNT_CHILDREN'].describe()","63696620":"app_data1[app_data1['CNT_CHILDREN']>12]","8e5821ec":"app_data1[app_data1['CNT_FAM_MEMBERS']>16]","1dbd9992":"app_data1.shape","a8ca7259":"app_data1 = app_data1[~(app_data1['CNT_FAM_MEMBERS']>16)]\napp_data1 = app_data1[~(app_data1['CNT_CHILDREN']>12)]\nprint(app_data1.shape)\napp_data1.head()","73f95d60":"# Calculating the percentage of each category in target variable\napp_data1['TARGET'].value_counts(normalize=True)*100","ed1d5d9c":"imbalanceRatio = (app_data1['TARGET'].value_counts(normalize=True)*100)[0]\/(app_data1['TARGET'].value_counts(normalize=True)*100)[1]\nprint('Imbalance Ratio:', round(imbalanceRatio,1))","7dd7977d":"CatUnOrList = ['NAME_CONTRACT_TYPE', 'CODE_GENDER', 'NAME_INCOME_TYPE', 'NAME_FAMILY_STATUS', 'OCCUPATION_TYPE', 'NAME_HOUSING_TYPE']\nplt.figure(figsize=[20,20])\nfor i in range(len(CatUnOrList)):\n    plt.subplot(3,2, i+1)\n    sns.countplot(app_data1[CatUnOrList[i]])\n    plt.subplots_adjust(hspace=0.5)\n    plt.xticks(rotation=90)\nplt.show()","a6c5048f":"CatOrList = ['FLAG_OWN_CAR', 'FLAG_OWN_REALTY', 'NAME_EDUCATION_TYPE', 'AMT_INCOME_GROUP']\nplt.figure(figsize=[16,10])\nfor i in range(len(CatOrList)):\n    plt.subplot(2,2, i+1)\n    app_data1[CatOrList[i]].value_counts(normalize=True).plot(kind='bar',stacked=True)\n    plt.subplots_adjust(hspace=0.2)\n    plt.xlabel(CatOrList[i])\n    plt.ylabel('%')\n    plt.xticks(rotation=90)","215e97b2":"reqCols = ['DAYS_BIRTH', 'AMT_CREDIT', 'AMT_GOODS_PRICE', 'CNT_FAM_MEMBERS', 'CNT_CHILDREN']\nplt.figure(figsize=[20,15])\nfor i in range(len(reqCols)):\n    plt.subplot(4,2, i+1)\n    sns.boxplot(app_data1[reqCols[i]])\n    plt.subplots_adjust(hspace=0.5)\n    plt.xticks(rotation=90)","6e45b250":"o1,bins,o2 = plt.hist(app_data1[\"AMT_CREDIT\"], bins=20)\nplt.xlabel('AMT_CREDIT')\nplt.xticks(bins, rotation=90)\nplt.show()","7b6caa03":"app_data1['AMT_CREDIT'].head()","741abf03":"app_data1['AMT_CREDIT_GROUP'] = pd.cut(app_data1['AMT_CREDIT'], [0, 200000, 400000, 600000, 800000, 1000000, 9999999999], labels=['<200k', '200k-400k', '400k-600k', '600k-800k', '800k-1000k', '>1000k'])\napp_data1['AMT_CREDIT_GROUP'].head()","91ed7757":"# Taken log scale for better visualization, since clients with difficult in payment are very less in number\n# Ordered vs Unordered\nCatUnOrList = ['NAME_CONTRACT_TYPE', 'NAME_INCOME_TYPE', 'NAME_FAMILY_STATUS', 'OCCUPATION_TYPE']\nplt.figure(figsize=[20,20])\nfor i in range(len(CatUnOrList)):\n    plt.subplot(3,2, i+1)\n    plt.yscale('log')\n    sns.countplot(data=app_data1, x=CatUnOrList[i], hue='TARGET')\n    plt.subplots_adjust(hspace=0.5)\n    plt.xticks(rotation=90)\nplt.show()","09dacec9":"plt.figure(figsize=[14,6])\nplt.subplot(1,2, 1)\napp_data1.groupby('NAME_INCOME_TYPE')['TARGET'].mean().plot.bar()\nplt.ylabel('Defaulter %')\n\nplt.subplot(1,2, 2)\napp_data1.groupby('NAME_FAMILY_STATUS')['TARGET'].mean().plot.bar()\nplt.ylabel('Defaulter %')\n\nplt.show()","0af55ac8":"# Ordered vs Ordered\nCatOrList = ['FLAG_OWN_CAR', 'FLAG_OWN_REALTY', 'AMT_INCOME_GROUP', 'AMT_CREDIT_GROUP', 'NAME_EDUCATION_TYPE', 'CODE_GENDER']\nplt.figure(figsize=[20,20])\nfor i in range(len(CatOrList)):\n    plt.subplot(3,2, i+1)\n    plt.yscale('log')\n    sns.countplot(data=app_data1, x=CatOrList[i], hue='TARGET')\n    plt.subplots_adjust(hspace=0.5)\n    plt.xticks(rotation=90)\nplt.show()","b13424b6":"CatOrList = ['AMT_CREDIT_GROUP', 'CODE_GENDER', 'NAME_EDUCATION_TYPE']\nplt.figure(figsize=[20,20])\nfor i in range(len(CatOrList)):\n    plt.subplot(3,2, i+1)\n    app_data1.groupby(CatOrList[i])['TARGET'].mean().plot.bar()\n    plt.subplots_adjust(hspace=0.5)\n    plt.xticks(rotation=90)\n    plt.ylabel('Defaulter %')\n    \nplt.show()","49094bb3":"numCols = ['CNT_CHILDREN', 'CNT_FAM_MEMBERS', 'DAYS_BIRTH', 'DAYS_ID_PUBLISH', 'AMT_GOODS_PRICE', 'EXT_SOURCE_2']\nplt.figure(figsize=[20,30])\nfor i in range(len(numCols)):\n    plt.subplot(4,2, i+1)\n    sns.boxplot(data=app_data1, y=numCols[i], x='TARGET')\n    plt.xticks(rotation=90)\nplt.show()","c2d5cfd3":"target1 = app_data1[app_data1['TARGET'] == 1]\ntarget0 = app_data1[app_data1['TARGET'] == 0]\n\nprint(target1.shape)\nprint(target0.shape)","d86c4390":"plt.figure(figsize=[22, 18])\n\nplt.subplot(3,2,1)\nsns.boxplot(x='NAME_EDUCATION_TYPE',y='AMT_CREDIT', data=target0)\nplt.title('Target 0', fontsize='20')\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,2)\nsns.boxplot(x='NAME_EDUCATION_TYPE',y='AMT_CREDIT', data=target1)\nplt.title('Target 1', fontsize='20')\nplt.xticks(rotation=90)\nplt.show()\n\nplt.figure(figsize=[22, 18])\n\nplt.subplot(3,2,3)\nsns.boxplot(x='NAME_FAMILY_STATUS',y='DAYS_BIRTH', data=target0)\nplt.title('Target 0', fontsize='20')\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,4)\nsns.boxplot(x='NAME_FAMILY_STATUS',y='DAYS_BIRTH', data=target1)\nplt.title('Target 1', fontsize='20')\nplt.xticks(rotation=90)\nplt.show()\n\nplt.figure(figsize=[22, 21])\n\n\nplt.subplot(3,2,5)\nsns.boxplot(x='CODE_GENDER',y='DAYS_ID_PUBLISH', data=target0, hue='NAME_EDUCATION_TYPE')\nplt.title('Target 0', fontsize='20')\nplt.legend(loc='upper right')\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,6)\nsns.boxplot(x='CODE_GENDER',y='DAYS_ID_PUBLISH', data=target1, hue='NAME_EDUCATION_TYPE')\nplt.title('Target 1', fontsize='20')\nplt.legend(loc='upper right')\nplt.xticks(rotation=90)\n\nplt.show()\n","eb3f61ca":"app_data1.pivot_table(index='NAME_EDUCATION_TYPE', columns='AMT_INCOME_GROUP', values='TARGET', aggfunc='mean').plot.bar(figsize=[10,6])\nplt.ylabel('Percentage of defaulters')\nplt.show()","d8a2cfb0":"app_data1.pivot_table(index='NAME_EDUCATION_TYPE', columns='CODE_GENDER', values='TARGET', aggfunc='mean').plot.bar(figsize=[10,6])\nplt.ylabel('Percentage of defaulters')\nplt.show()","275dc0e4":"app_data1.pivot_table(index='NAME_EDUCATION_TYPE', columns='AMT_CREDIT_GROUP', values='TARGET', aggfunc='mean').plot.bar(figsize=[10,6])\nplt.ylabel('Percentage of defaulters')\nplt.show()","df620a04":"app_data1.pivot_table(index='NAME_FAMILY_STATUS', columns='AMT_INCOME_GROUP', values='TARGET', aggfunc='mean').plot.bar(figsize=[10,6])\nplt.ylabel('Percentage of defaulters')\nplt.show()","74507308":"app_data1.dtypes[(app_data1.dtypes!=object) & (app_data1.dtypes!='category')]","1921bf29":"# Taking only the continious variables\nnumCols = app_data1.dtypes[(app_data1.dtypes!=object) & (app_data1.dtypes!='category')].index.drop(['TARGET', 'SK_ID_CURR', 'FLAG_MOBIL'])\nnumCols","97888bf8":"corrTar0 = target0[numCols].corr()\ncorrTar0.head()","daea91a2":"d = {\n    'var1':[],\n    'var2':[],\n    'value':[]\n}\n\nfor col in numCols:\n    cor = corrTar0[(corrTar0[col]>0.44)][col].drop(col,axis=0)# >0.44 give top 10 entries\n    length = len(cor.index)\n    if length>0:\n        d['var2'].extend([cor.name]*length)\n        d['var1'].extend(cor.index)\n        d['value'].extend(round(abs(cor[cor.index]),2))\n        \ncorr_df0 = pd.DataFrame(d)\ncorr_df0.drop_duplicates(subset=['value'], inplace=True)\ncorr_df0.sort_values(by='value', ascending=False).reset_index(drop=True)","590ab639":"corrTar1 = target1[numCols].corr()\ncorrTar1.head()","01242a97":"d1 = {\n    'var1':[],\n    'var2':[],\n    'value':[]\n}\n\nfor col in numCols:\n    cor = corrTar1[(corrTar1[col]>0.48)][col].drop(col,axis=0)# >0.48 give top 10 entries\n    length = len(cor.index)\n    if length>0:\n        d1['var2'].extend([cor.name]*length)\n        d1['var1'].extend(cor.index)\n        d1['value'].extend(round(abs(cor[cor.index]),2))\n\ncorr_df1 = pd.DataFrame(d1)\ncorr_df1.drop_duplicates(subset=['value'], inplace=True)\ncorr_df1.sort_values(by='value', ascending=False).reset_index(drop=True)","82ca7475":"pre_app0 = pd.read_csv('..\/input\/bank-loan-default\/previous_application.csv')\nprint(pre_app0.shape)\npre_app0.head()","dea16da2":"pre_app0.info()","081bae01":"pre_app0.isnull().sum()","8812c103":"nullPerCols = pre_app0.apply(nullPersent, axis=0)*100\nnullPerCols","94d01345":"colWithNulls = nullPerCols[nullPerCols>0]\ncolWithNulls","4195ca89":"colWithNulls.describe()","bb409600":"colWithNulls.sort_values().plot.bar()","a4aace98":"colWithNulls[(colWithNulls>40) & (colWithNulls<45)]","e67383a4":"pre_app0[colWithNulls[(colWithNulls>40) & (colWithNulls<45)].index].describe()","533c156c":"colWithNulls[colWithNulls>40].index","ef77af54":"pre_app0.shape","e332ff5a":"pre_app1 = pre_app0.drop(colWithNulls[colWithNulls>40].index, axis=1)\npre_app1.shape","44246ea5":"colWithNulls = colWithNulls[colWithNulls<40]\ncolWithNulls","8999fda3":"pre_app1[colWithNulls[colWithNulls>20].index].head()","b5be7eed":"pre_app1[colWithNulls[colWithNulls<1].index].head()","13651e07":"pre_app1['AMT_CREDIT'].plot.box()","3157c4e4":"pre_app1[\"AMT_CREDIT\"].median()","e391ff5f":"pre_app1['AMT_CREDIT'].fillna(pre_app1[\"AMT_CREDIT\"].median(), inplace=True)\npre_app1[\"AMT_CREDIT\"].isnull().sum()","3f0b7c17":"pre_app1['PRODUCT_COMBINATION'].mode()[0]","7741dd0a":"pre_app1['PRODUCT_COMBINATION'].fillna(pre_app1[\"PRODUCT_COMBINATION\"].mode()[0], inplace=True)\npre_app1[\"PRODUCT_COMBINATION\"].isnull().sum()","c8dff993":"pre_app1.shape","c3756dca":"app_data1.shape","de2ca805":"comb_data0 = app_data1.merge(pre_app1, on='SK_ID_CURR', how='inner', suffixes=['_CUR', '_PRE'])\nprint(comb_data0.shape)\ncomb_data0.head()","20e51193":"comb_data0.shape","31e302f0":"# On categorical variables taken from previous_application\nplt.figure(figsize=[18, 16])\nreqCol = ['NAME_CONTRACT_STATUS', 'NAME_CLIENT_TYPE', 'CHANNEL_TYPE', 'NAME_PAYMENT_TYPE']\nfor i in range(len(reqCol)):\n    plt.subplot(3,2, i+1)\n    sns.countplot(comb_data0[reqCol[i]])\n    plt.subplots_adjust(hspace=0.8)\n    plt.xticks(rotation=90)","f074ac46":"plt.figure(figsize=[18, 12])\n\nplt.subplot(2, 2, 1)\nsns.countplot(data=comb_data0, x='NAME_CONTRACT_STATUS', hue='TARGET')\nplt.yscale('log')\n\nplt.subplot(2, 2, 2)\nsns.countplot(data=comb_data0, x='NAME_CLIENT_TYPE', hue='TARGET')\n\nplt.subplot(2, 2, 3)\nsns.boxplot(data=comb_data0, x='NAME_CONTRACT_STATUS', y='DAYS_BIRTH')\n\n\nplt.subplot(2, 2, 4)\nsns.boxplot(data=comb_data0, x='NAME_CONTRACT_STATUS', y='AMT_CREDIT_PRE')\n\n\nplt.show()","9cd27451":"plt.figure(figsize=[16, 8])\n\nplt.subplot(2, 2, 1)\ncomb_data0.groupby('NAME_CONTRACT_STATUS')['TARGET'].mean().plot.bar()\nplt.ylabel('Defaulter %')\n\nplt.subplot(2, 2, 2)\ncomb_data0.groupby('NAME_CLIENT_TYPE')['TARGET'].mean().plot.bar()\nplt.ylabel('Defaulter %')\n\nplt.subplot(2, 2, 3)\ncomb_data0.groupby('NAME_CASH_LOAN_PURPOSE')['TARGET'].mean().plot.bar()\nplt.ylabel('Defaulter %')\nplt.subplots_adjust(hspace=0.8)\n\nplt.show()","3aa80706":"comb_target0 = comb_data0[comb_data0['TARGET'] == 0]\ncomb_target1 = comb_data0[comb_data0['TARGET'] == 1]\nprint(comb_target0.shape)\ncomb_target1.shape","d248ed18":"plt.figure(figsize=[22, 18])\n\nplt.subplot(3,2,1)\nsns.countplot(x='NAME_CONTRACT_STATUS',hue='NAME_CLIENT_TYPE', data=comb_target0)\nplt.title('Target 0', fontsize='20')\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,2)\nsns.countplot(x='NAME_CONTRACT_STATUS',hue='NAME_CLIENT_TYPE', data=comb_target1)\nplt.title('Target 1', fontsize='20')\nplt.show()\n\nplt.figure(figsize=[22, 18])\n\nplt.subplot(3,2,3)\nsns.countplot(x='NAME_CLIENT_TYPE',hue='NAME_EDUCATION_TYPE', data=comb_target0)\nplt.title('Target 0', fontsize='20')\nplt.legend(loc='upper right')\n\nplt.subplot(3,2,4)\nsns.countplot(x='NAME_CLIENT_TYPE',hue='NAME_EDUCATION_TYPE', data=comb_target1)\nplt.title('Target 1', fontsize='20')\nplt.legend(loc='upper right')\n\nplt.subplots_adjust(hspace=0.3)\nplt.show()","d67a1e71":"# Target vs NAME_CLIENT_TYPE vs NAME_EDUCATION_TYPE\ncomb_data0.pivot_table(columns='NAME_EDUCATION_TYPE', index='NAME_CLIENT_TYPE', values='TARGET').plot.bar(figsize=[12,6])\nplt.show()","a824d4c4":"comb_data0.pivot_table(columns='NAME_EDUCATION_TYPE', index='NAME_CONTRACT_STATUS', values='TARGET').plot.bar(figsize=[12,6])\nplt.show()","51b4ed04":"comb_data0[(comb_data0['NAME_CONTRACT_STATUS']=='Unused offer')&(comb_data0['NAME_EDUCATION_TYPE']=='Academic degree')].shape","cff3fc68":"comb_data0.pivot_table(columns='CODE_GENDER', index='NAME_CASH_LOAN_PURPOSE', values='TARGET').plot.bar(figsize=[20,8])\nplt.ylabel('Defaulter %')\nplt.show()","7582f4b1":"#### Based on the graph above, columns occupation_type and ext_source_3 have more then 15% of the null values\n- Check the type of these variables","d4a760a1":"### 9. Segmented analysis\n- Splitting the dataset into target 1 and target 0 w.r.t target variable","3ad67891":"#### There are around 55000 records which have days  employed more than 20000\n- This might indicate that employee has more number of experience or has been working for long time\n- Not to drop these columns for now","07b92023":"#### Imputing null values of AMT_CREDIT with median","7b7f0445":"#### Cnt_Children have outliers, which is continious till 12. Also for Cnt_Fam_Memebers the outliers are continious till 16\n- Cnt_Children does have lower fence or whisker indicating that min value and quartile 1 (Q1) are same i.e is zero.\n- Dropping the records of Cnt_Children above 12 and Cnt_Fam_Members above 16","dd41d0d9":"### Business objective\n#### The loan providing companies find it hard to give loans to the people due to their insufficient or non-existent credit history. Because of that, some consumers use it as their advantage by becoming a defaulter.\n- This case study aims to identify patterns which indicate if a client has difficulty paying their instalments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. \n- In other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default. \u00a0The company can utilise this knowledge for its portfolio and risk assessment.\n- This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.","0ad83538":"#### Taking the bottom columns from the list above with prefix AMT\n- These columns are continious type\n- These columns gives info on number of enquiries to Credit Bureau about the client ","1b081a8c":"#### 6.3. Imbalance Ratio is 11.4","7499e7e1":"#### Now that the null percentage of each of the column is known, taking the columns that have null values","83dce69b":"#### Inference on the above graphs\n- CNT_CHILDREN and CNT_FAM_MEMBERS: No proper trend is seen\n- DAYS_BIRTH: If the days_birth (age of client) is more than 15000 (around 40 years of age) then chances of becoming defaulter is less. Or 40+ age client are most likely to repay the loan\n- DAYS_ID_PUBLISH: If the change of the ID is done few days before the application chances are that he becomes a defaulter\n- AMT_GOODS_PRICE: Clients with loan taken above 35,00,000 goods price are less defaulters. (But this is not a strong trend because of the outliers)\n- EXT_SOURCE_2: Low score indicates signs of defaulter. Score above 0.55 have high chance of repayment","90782ff6":"### 13. Performing the data cleaning","3b76c9f4":"### 16. Bivariate analysis on the combined data\n- Target vs NAME_CONTRACT_STATUS\n- Target vs NAME_CLIENT_TYPE\n- NAME_CONTRACT_STATUS vs AMT_CREDIT_PRE\n- DAYS_BIRTH vs NAME_CONTRACT_STATUS","d221aca7":"#### These columns have outliers in it, imputing the missing values with median","ef33bac4":"#### 7.3 Numerical Variables Univariate Analysis\n- Columns taken DAYS_BIRTH, DAYS_EMPLOYED, AMT_ANNUITY, AMT_CREDIT, AMT_GOODS_PRICE, CNT_FAM_MEMBERS and CNT_CHILDREN","1c97ae74":"#### 6.1. 0 means client has no problem in paying the installments or the loan amount, 1 means has difficulties in paying\n- 92% of the customers have no problem in paying the amount (non-defaulter)\n- 8% of the clients have problem in paying (defaulter)\n- Clearly it shows there is imbalance in the data","b8b4f3c3":"#### 6.2. Imbalance ratio is calculated as the ratio of the sample size of the largest majority class and that of the smallest minority class","d9c5b165":"#### 11.2 For target 1 (Defaulters)","ad5e92d5":"#### Taking percentage of nulls in the dataset","461f46cd":"#### 7.2 Categorical Ordered Univariate Analysis\n- Columns taken NAME_EDUCATION_TYPE, FLAG_OWN_CAR, AMT_INCOME_GROUP and FLAG_OWN_REALTY","c06efbfe":"#### Lets visualize these columns using bar plot for better understanding","2bccae17":"#### Columns with prefix DAYS have values in -ve, changing them in to +ve","7876aa7c":"### 3. Check for null values and missing values\n","4808be2a":"#### Inference on the above graphs\n- More than 60% of the clients dont have a car\n- Around 70% of them own a property\n- Most of the clients have done only secondary education\n- Income group of 100000 - 200000 are highest among the category who have have taken the loans","e0b7757c":"#### Taking numerical variables which are continious\n- AMT_INCOME_TOTAL , AMT_CREDIT, AMT_ANNUITY and AMT_GOODS_PRICE\n- DAYS_BIRTH, DAYS_EMPLOYED, DAYS_REGISTRATION, DAYS_LAST_PHONE_CHANGE and DAYS_ID_PUBLISH\n- CNT_CHILDREN andCNT_FAM_MEMBERS\n- Plotting boxplot for these variables","917cc882":"#### 8.1 Target vs Categorical variable\n- Target vs 'NAME_CONTRACT_TYPE', 'NAME_INCOME_TYPE', 'NAME_FAMILY_STATUS', 'OCCUPATION_TYPE'\n- Target vs 'FLAG_OWN_CAR', 'FLAG_OWN_REALTY', 'NAME_EDUCATION_TYPE', 'AMT_INCOME_GROUP', 'AMT_CREDIT_GROUP'","e7578830":"### 12. Loading the previous_application.csv using pandas","28fa9065":"#### Organization_Type is the other column with XNA value in it","f0294887":"#### 11.1 For target 0 (Non Defaulters)","dc54d308":"### 17. Segmented analysis\n- Splitting the datasets into target 0 and target 1 w.r.t to target variable","7b22ce6d":"#### Inference from the above graphs\n- NAME_CONTRACT_TYPE: Revolving loan type has less number of defaulters.\n- NAME_INCOME_TYPE: Business man and students groups have higher chances of repaying the loans. Chances that an unemployed become a defaulter is more\n- NAME_FAMILY_STATUS: Widow category has less chances of becoming defaulter whereas married has high chances. Civil marriage category have less defaulters compared to the single\n- OCCUPATION_TYPE: IT staff, HR staff and Realty agents have less defaulters whereas sales staff, laborers and drivers have more defaulters","c9fff7c9":"### 1. Importing the required libraries","29f06648":"### 5. Check outliers for the numerical variables","bac0f80d":"#### Imputing null values of PRODUCT_COMBINATION with mode","aca73004":"#### Among 67 columns, 50% of the columns have around 51% of the data missing in it (or having null values more than 51%)\n- The graph shows that the most of the columns have missing values more than 40%\n- 30% quantile shows, 70% of the columns have more than 48% of the missing values\n- Checking columns that have missing values more than 40%","bf630ea5":"#### The percentage of the missing value is more (18%), impute the missing values with 'Missing' category (for better meaning)","66134edb":"#### XNA has second highest frequency in this column\n- Check the percentage of missing value","f94e1d4d":"### 7. Univariate Analysis\n1. Categorical Unordered Variables\n2. Categorical Ordered Variables\n3. Numerical Variables","96ce654f":"### 15. Univariate analysis on the combined data","79f85491":"### 4 .Sanity checks like:\n- Check if the target has only 0 and 1\n- Gender column check\n- Days_Birth should have values less than 36500","74815bc3":"### 11. Correlation matrix for target 1 and target 0\n- Finding the top 10 correlation for the Client with payment difficulties and all other cases","468e7a70":"#### XNA represents missing value in this column\n- There is no meaning given for XNA in the columns_description.csv\n- There are very few entries with XNA\n- Dropping these values","6fc9e0c1":"#### Out of 122 columns, 67 columns have null values in it\n- Using describe to get more info on the null values\n- Plotting a graph, to understand visually","fb11631c":"#### Inference on the above graphs\n- Days birth is almost evenly distributed, in other words clients of different age groups are seen.\n- 50% of the clients do not have a child (this may indicate that most of them are young or may be single)\n- Chances of loan being taken by client who has no child is more\n- Most of the clients have taken loan amount of 10,00,000 and below","241f16bf":"#### Checking if any other columns have XNA present in it\n- XNA will most likely to be present in object type variables","a83d85e8":"#### Handling missing values in Ext_Source_3 column","e905d900":"#### Binning the AMT_INCOME_TOTAL\n- 0-100000 to 0-100K\n- 100000-200000 to 100k-200k\n- 200000-300000 to 200k-300k\n- 300000-400000 to 300k-400k\n- 400000 and above to >400k","560017b8":"#### Removing the above entry","6462aa72":"#### 31% of the data in the column have the null values, impute the null value with 'Missing' category\n- Nulls can also be replaced with mode, but the percentage of missing values being more, replacing it with 'Missing' category.\n- Also occupation type is expected to have some impact on the target variable.","63a13e06":"#### Looking at some of columns (based on the description of columns in columns_description.csv), i.e flag_document_2 to flag_document _21 are not providing any meaningfull information\n- These columns does not sepcify what the document is about or have any meaning in it\n- Dropping these columns to avoid confusion","ab507fce":"#### The above columns are continious and have more than 20% null values\n- Better to not impute these values","9e67f2c8":"#### Inference on the graphs above\n- NAME_CONTRACT_STATUS: The number of application cancelled and refused are almost equal\n- NAME_PAYMENT_TYPE: Most of the payments are done through cash\n- CHANNEL_TYPE: Most the application are through credit and cash offices\n- NAME_CLIENT_TYPE: Most the loans were given to the exsisting clients","e8333aa1":"#### Binning the AMT_Credit for futher analysis\n- For better understanding","c0c56b97":"#### Inference from the graphs:\n- Revolving loan* type are taken by very few clients\n- The number of female clients are almost twice the male\n- Number of loans taken by working professionals is more followed by commercial associate\n- Higher number of loans are taken by married clients\n- Laborers have more chances of taking loan\n- Most of the clients live in their own house\/apartment\n<br> *A revolving loan facility is a form of credit issued by a financial institution that provides the borrower with the ability to draw down or withdraw, repay, and withdraw again","7a33a5e2":"#### Most of the columns above are related to the normalized information about building where client lives and have many missing values\n- These columns have lot of missing data and can impact the analysis. Dropping these columns for better understading of the dataset\n- Null values in OWN_CAR_AGE can indicate that the clients does not have a car and does the age of it. Removing this column","58f97c8e":"#### Inference from the above graph\n- NAME_CONTRACT_STATUS: Loan given to the client whose previous application has been refused have more chances of defaulter\n- NAME_CLIENT_TYPE: New and repeater have equal chances of becoming defaulters\n- NAME_CASH_LOAN_PURPOSE: 20%  of clients who have taken loan with no purpose became defaulters","c8c474a1":"### 2. Loading the dataset using pandas","bb803e60":"#### Dropping columns with more than 40% null values\n- Columns above with prefix 'DAYS_' have both +ve and -ve values and also have number of days like 365243 which is practically not possible\n- Dropping these columns","2bdc7acb":"#### All the columns above have less than 1% of null values present, dropping these entries","4c4945cd":"#### 7.1 Categorical Unordered Univariate Analysis\n- Columns taken NAME_CONTRACT_TYPE, CODE_GENDER, NAME_INCOME_TYPE, NAME_FAMILY_STATUS, OCCUPATION_TYPE and ORGANIZATION_TYPE","43ed6468":"#### Columns with null values less than 13%","e90341eb":"#### Inference on the above graphs\n- Target vs NAME_CONTRACT_STATUS: Loans approved on the previous application have high number of defaulters followed by the refused ones.\n- Target vs NAME_CLIENT_TYPE: Exsisting clients have more number of defaulters\n- DAYS_BIRTH vs NAME_CONTRACT_STATUS: Higher age group client are more likely to cancel their application\n- NAME_CONTRACT_STATUS vs AMT_CREDIT_PRE: Higher loan amounts tends to be refused","ed414617":"#### Inference from the above graph\n- Target vs NAME_CLIENT_TYPE vs NAME_EDUCATION_TYPE: New clients with Lower secondary education has highest percentage of defaulters\n- Target vs NAME_EDUCATION_TYPE vs NAME_CONTRACT_STATUS: Clients whose previously got refused and have lower secondary have high percentage of defaulters\n- Target vs CODE_GENDER vs NAME_CASH_LOAN_PURPOSE: More than 50% of the male clients who have taken loan for a third person became defaulters","94dfcfee":"#### Checking the null values present in the dataset","b8d50e7a":"### 14. Combining the datasets application_data and previous_application","e12f92ff":"#### The two graphs side by side are w.r.t to target variables i.e target 0 and target 1\n- NAME_EDUCATION_TYPE vs AMT_CREDIT: Clients with higher education and academic degree find hard to pay the loan if the loan amount is above 5,00,000\n- NAME_FAMILY_STATUS vs DAYS_BIRTH: If the client is single and has days birth (or age) below 12500 days (35 years age) has more chances of becoming defaulter.\n- CODE_GENDER vs DAYS_ID_PUBLISH: Female clients with incomplete higer education and have changed their identity document below 2000 days before the application have high number of defaulters","dd6236b5":"#### Looking at the columns with less than 15% of null values","67a9fdbd":"#### Since the dataset has many columns, taking percentage of the missing values in each column.","ec8fd556":"### The above table has top 10 correlation for the Client with payment difficulties i.e for target 1","73c32719":"#### Info on the dataset\n- The dataset has 307511 rows with 122 columns\n- dtypes: float64(65), int64(41), object(16)","7eeaaa0a":"### The above table has top 10 correlation for the Client with no payment difficulties i.e for target 0","d0df3383":"### 6. Imbalance check\n- Imbalance means that the number of data points available for different the classes is different:\nIf there are two classes, then balanced data would mean 50% points for each of the class. ","ee6e3194":"### 18. Multivariate Analysis","708eaaa3":"#### Columns with 20% null values","159ad2d7":"#### Taking percentage again on the dataset after dropping some columns\n- Lets take look at the columns having more than one missing value","20185939":"#### Imputing the missing values with the median for the above column\n- It has some outliers in it imputing missing values with median","ab659862":"#### Inference on the above graphs\n- AMT_INCOME_TOTAL vs NAME_EDUCATION_TYPE vs Target: Clients with academic degree in the income range of 3,00,000-4,00,000 have higher defaulters. Clients with lower scondary education in the income range of 1,00,000-2,00,000 have higher defaulters.\n- NAME_EDUCATION_TYPE vs CODE_GENDER vs TARGET: Male and Female with lower secondary have high percentage of defaulters whereas Male and Female with academic degree the lowest\n- NAME_EDUCATION_TYPE vs AMT_CREDIT_GROUP vs Target: More than 14% of the clients with lower secondary education and have taken loan amount between 4,00,000-6,00,000 are defaulters\n- NAME_FAMILY_STATUS vs AMT_INCOME_GROUP vs Target: Clients with civil marriage or who is single find hard to repay the loan","fec67d4a":"#### 8.2 Target vs Numerical\n- Target vs 'CNT_CHILDREN', 'CNT_FAM_MEMBERS', 'DAYS_BIRTH', 'DAYS_ID_PUBLISH', 'AMT_GOODS_PRICE', 'DAYS_REGISTRATION', 'EXT_SOURCE_2'","c12c4bd0":"#### Inference from the above graph\n- NAME_CONTRACT_STATUS vs NAME_CLIENT_TYPE: Existing clients (Repeater) whose previous loan is approved have more number of defaulters\n- NAME_CONTRACT_STATUS vs NAME_CLIENT_TYPE: Existing clients (Repeater) who have done higher education have more number of defaulters","9c01fd10":"#### Ocuupation_Type is categorial and Ext_Source_3 is numerical \/ continious type\n- Handling the missing values in Occupation_Type","4afea90d":"#### Inference of the above graphs\n- NAME_INCOME_TYPE: Around 40% of the clients who are unemployed or on maternity leave are defaulters\n- NAME_FAMILY_STATUS: 10% of clients with civil marriage or single are defaulters\n- Example; Out of 100 unemployed clients, around 40 clients fail to pay the loan","6ebd3f8a":"#### Inference from the above graphs\n- AMT_CREDIT_GROUP: 10% of the clients who have taken loan amount in the range of 4,00,000-5,00,000 became defaulters\n- CODE_GENDER: 10% of Male clients become defaulters\n- NAME_EDUCATION_TYPE: More than 10% of the clients with lower secondary education become defaulters\n- Explanation: Example- Out of 100 male clients, 10 male fail to repay the loan. Same follows for the AMT_CREDIT_GROUP and NAME_EDUCATION_TYPE","a175f778":"#### Inference from the above graphs\n- FLAG_OWN_CAR: Clients having a car have comparatively less number of defaulters\n- FLAG_OWN_REALTY: Clients with no property have lesser chance to become defaulters\n- AMT_INCOME_GROUP: Income group of 1,00,000-2,00,000 has higher number of defaulters whereas >4,00,000 has least\n- AMT_CREDIT_GROUP: Credit Groups 2,00,000-4,00,000 and 4,00,000-6,00,000 have higher number of defaulters whereas 8,00,000-10,00,000 have less number of defaulters\n- NAME_EDUCATION_TYPE: Academic degree group has lowest number of defaulters","8ee73972":"### 10. Multivariate analysis\n- AMT_INCOME_TOTAL vs NAME_EDUCATION_TYPE vs Target\n- AMT_INCOME_TOTAL vs CODE_GENDER vs Target\n- NAME_EDUCATION_TYPE vs AMT_CREDIT_GROUP vs Target\n- NAME_FAMILY_STATUS vs AMT_INCOME_GROUP vs Target","13ab5ca4":"#### The above analysis includes both the client type i.e those who have the payment issues (Defaulter) and who dont have any issue (Non-Defaulter)\n### 8. Bivariate analysis","0270dbd0":"#### Columns with less than 1% null values\n- These entries can be dropped, but merging with application data can be affected\n- Imputing these values based on type of the variable"}}