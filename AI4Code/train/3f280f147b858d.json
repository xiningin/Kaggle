{"cell_type":{"38c21e93":"code","f759b8cb":"code","645ccb65":"code","f873a89b":"code","fd2b9926":"code","f7bc0845":"code","2c7f2414":"code","f6f0854a":"code","4f4f3e46":"code","922eaaa9":"code","b2918370":"code","f25fb7f0":"code","5ced356c":"code","6e28e731":"code","a4457164":"code","f074501c":"code","de10a8dd":"code","e8dbd54e":"markdown","1135bab0":"markdown","b2a6113e":"markdown"},"source":{"38c21e93":"# Just checking if we have a GPU\n!nvidia-smi","f759b8cb":"# Cloning the monk repository as we are going to use the MonkAI Library\n!git clone https:\/\/github.com\/Tessellate-Imaging\/monk_v1.git","645ccb65":"# Installing the dependencies for Kaggle required by Monk\n!pip install -r monk_v1\/installation\/Misc\/requirements_kaggle.txt","f873a89b":"! rm -r monk_v1\/.git\n! rm -r monk_v1\/installation\n! rm -r monk_v1\/study_roadmaps\n! rm -r monk_v1\/webinars_lectures","fd2b9926":"# Appending the Monk repo to our working directory\nimport sys\nsys.path.append(\"\/kaggle\/working\/monk_v1\/monk\/\")","f7bc0845":"import os\n\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/siim-isic-melanoma-classification\/train.csv\")\n\ncombined = [];\nfrom tqdm.notebook import tqdm\nfor i in tqdm(range(len(df))):\n    img_name = df[\"image_name\"][i] + \".jpg\";\n    if(df[\"benign_malignant\"][i] == 'benign'):\n        label = \"0\";\n    elif(df[\"benign_malignant\"][i] == 'malignant'):\n        label = \"1\"; \n    combined.append([img_name, label]);\n    \ndf2 = pd.DataFrame(combined, columns = ['ID', 'Label']) \ndf2.to_csv(\"train.csv\", index=False);\n","2c7f2414":"# Using mxnet backend\nfrom gluon_prototype import prototype","f6f0854a":"# Defining path for training and validation dataset\ntrain_path = '..\/input\/siim-isic-melanoma-classification\/jpeg\/train'\ncsv_train = 'train.csv'","4f4f3e46":"# Initialize the protoype model and setup project directory\ngtf=prototype(verbose=1)\ngtf.Prototype(\"Melanoma-Detection\", \"Hyperparameter-Analyser\")","922eaaa9":"# Define the prototype with default parameters\ngtf.Default(dataset_path=train_path,\n            path_to_csv=csv_train,\n           model_name=\"se_resnext101_64x4d\",\n           freeze_base_network=False,\n           num_epochs=5)","b2918370":"gtf.Train()","f25fb7f0":"! rm pylg.log train.csv","5ced356c":"gtf = prototype(verbose=1)\ngtf.Prototype(\"Melanoma-Detection\", \"Hyperparameter-Analyser\",eval_infer = True)","6e28e731":"import pandas as pd\nfrom tqdm.notebook import tqdm\nfrom scipy.special import softmax\ndf = pd.read_csv(\"..\/input\/siim-isic-melanoma-classification\/sample_submission.csv\")","a4457164":"import numpy as np\nimport os\nfrom IPython.display import FileLink\nfor i in tqdm(range(len(df))):\n    img_name = \"..\/input\/siim-isic-melanoma-classification\/jpeg\/test\/\" + df['image_name'][i] + \".jpg\";\n    \n    #Invoking Monk's inferencing engine inside a loop\n    predictions = gtf.Infer(img_name=img_name, return_raw=True);\n    out = predictions['raw']\n    prob_mal = ((np.exp(out[1]))\/(np.exp(out[0])+np.exp(out[1])))\n    df['target'][i] = str(prob_mal)\n    print(\"Probability: \", df['target'][i])\n\nos.chdir(r'kaggle\/working')\ndf.to_csv(\"submission.csv\", index=False)\nFileLink(r'submission.csv')","f074501c":"df.to_csv(\"submission.csv\", index=False)","de10a8dd":"! rm -r monk_v1\n! rm -r workspace","e8dbd54e":"# Setting up the Model\n Here we will import the desired backend and base network on which we want our model to run the classification dataset\n \n\n---","1135bab0":"## Inference\nRunning inference on test dataset\n\n---","b2a6113e":"# Setup\n\n\nThis involves importing necessary libraries and data for us to run our model\n\n\n---\n"}}