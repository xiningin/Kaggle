{"cell_type":{"7d69ce3d":"code","aa673018":"code","61a1be62":"code","253214d8":"code","a654238f":"code","c6d7da6e":"code","c4122e00":"code","3f69be5c":"code","c4cac036":"code","f23ed395":"code","1a5f5ead":"code","815eb8ca":"code","365f11d5":"markdown","1af5f05f":"markdown","2e81628b":"markdown","4e460082":"markdown","178bf3f4":"markdown","3f30c613":"markdown","294b1c2c":"markdown","6343a1f3":"markdown","3a10cfbd":"markdown"},"source":{"7d69ce3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.patches as mpatches\nimport collections\nfrom collections import defaultdict\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa673018":"matches=pd.read_csv(\"\/kaggle\/input\/ipldata\/matches.csv\")","61a1be62":"#Data Cleaning\n\n#Replacing duplicate team name\nmatches=matches.replace(to_replace =\"Rising Pune Supergiant\", value =\"Rising Pune Supergiants\") \n\n#Filling Null values in winner column\nmatches['winner'] = matches['winner'].fillna(\"No Result\")\n\n#Merging similar name of stadiums into one\nmatches=matches.replace(to_replace =\"MA Chidambaram Stadium, Chepauk\", value =\"M. A. Chidambaram Stadium\") \nmatches=matches.replace(to_replace =\"Punjab Cricket Association IS Bindra Stadium, Mohali\", value =\"Punjab Cricket Association Stadium, Mohali\") \nmatches=matches.replace(to_replace =\"M. Chinnaswamy Stadium\", value =\"M Chinnaswamy Stadium\") \nmatches=matches.replace(to_replace =\"ACA-VDCA Stadium\", value =\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\") \nmatches=matches.replace(to_replace =\"Rajiv Gandhi International Stadium, Uppal\", value =\"Rajiv Gandhi Intl. Cricket Stadium\") \n","253214d8":"#Analysis of Mom Won by Indian And Foreign Player.\n\"\"\"\nThe logic used here is that i found csv file on Github having more than 1400 indian surnames.So if the\nsurname of player is in the csv file than he is Indian else he is a foreign player.\n\n\"\"\"\n\ns_names=pd.read_csv(\"\/kaggle\/input\/indina-caste-data\/indian_caste_data.csv\")\ns_names=list(s_names['caste'])\nbefore_2013=list(matches[matches.season<=2013]['player_of_match'])\nafter_2013=list(matches[matches.season>2013]['player_of_match'])\nindian_before=[]   # indian players won before 2013\nindian_after=[]    #indian players won after 2013\nforeign_before=[]\nforeign_after=[]\n\n#Checking if the player who won MOM is indian or not\nfor i in range(0,len(before_2013)):\n    temp=str(before_2013[i]).split(\" \")\n    if temp[-1].lower() in s_names:\n        indian_before.append(before_2013[i])\n    else:\n        foreign_before.append(before_2013[i])\n\nfor i in range(0,len(after_2013)):\n    temp=str(after_2013[i]).split(\" \")\n    if temp[-1].lower() in s_names:\n        indian_after.append(after_2013[i])\n    else:\n        foreign_after.append(after_2013[i])\n\n#print(len(indian_after),len(indian_before))\n#print(len(foreign_after),len(foreign_before))\nX=[\"Before 2013\",\"After 2013\"]\nY=[len(indian_before),len(foreign_before)]\nZ=[len(indian_after),len(foreign_after)]\n\n#Plotting \n_X = np.arange(len(X))\nplt.style.use('ggplot')\nplt.figure(figsize=(12,12))\nplt.bar(_X - 0.2, Y, 0.4)\nplt.bar(_X + 0.2, Z, 0.4)\nplt.title(\"No. of MOM's camparison between indian and foreign players before and after 2013\")\nplt.xticks(_X, X) \n\n# seting labels manually\nlabel_1 = mpatches.Patch(color='red', label='Indian Players')\nlabel_2 = mpatches.Patch(color='blue', label='Foreign Players')\nplt.legend(handles=[label_1,label_2], loc=2)\nplt.show()","a654238f":"#Analysis of capains Decision\ntoss_won_and_field=len(matches['toss_winner'][matches['toss_decision']=='field'])\ntoss_won_and_bat=len(matches['toss_winner'][matches['toss_decision']=='bat'])\nlabels=[\"Field\",\"Bat\"]\ntotal=toss_won_and_bat+toss_won_and_field  #total Matches\nresult=[(toss_won_and_field\/total)*100,(toss_won_and_bat\/total)*100]\n\n#plotting\nfig=plt.gcf()\nplt.style.use('ggplot')\nfig.set_size_inches(12.5,10.5)\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.title(\"Captain Decision after wining toss\",fontsize=20)\nax=sns.barplot(labels,result)\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.3,str(round(result[count],2))+\"%\",ha=\"center\") \n    count+=1","c6d7da6e":"#Analysis of teams won batting first Vs Fielding first\nteam=list(matches.team1.unique())\nbat_first=0                       #Teams won batting first\nbowl_first=0                      #Teams won bowling first\ndraw=0                            #No Result\nfor i in range(len(matches)):\n    if matches['team1'].iloc[i] in team or matches['team2'].iloc[i] in team:\n        t1=matches['team1'].iloc[i]\n        t2=matches['team2'].iloc[i]\n        if matches.toss_winner.iloc[i]==t1 and matches.toss_decision.iloc[i]=='field':\n            if matches.winner.iloc[i]==\"No Result\":\n                draw+=1\n            if matches.winner.iloc[i]==t1:\n                bowl_first+=1\n            else:\n                bat_first+=1\n        elif matches.toss_winner.iloc[i]==t1 and matches.toss_decision.iloc[i]=='bat':\n            if matches.winner.iloc[i]==\"No Result\":\n                draw+=1\n            if matches.winner.iloc[i]==t1:\n                bat_first+=1\n            else:\n                bowl_first+=1\n        elif matches.toss_winner.iloc[i]==t2 and matches.toss_decision.iloc[i]=='field':\n            if matches.winner.iloc[i]==\"No Result\":\n                draw+=1\n            if matches.winner.iloc[i]==t2:\n                bowl_first+=1\n            else:\n                bat_first+=1  \n        elif matches.toss_winner.iloc[i]==t2 and matches.toss_decision.iloc[i]=='bat':\n            if matches.winner.iloc[i]==\"No Result\":\n                draw+=1\n            if matches.winner.iloc[i]==t2:\n                bat_first+=1\n            else:\n                bowl_first+=1  \n                \n#plotting\nlabels=[\"No Result\",'bat First',\"Bowl First\"]\nresult=[draw,bat_first,bowl_first]\nfig=plt.gcf()\nplt.style.use('ggplot')\nfig.set_size_inches(20,10)\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.title(\"Teams won Batting First Vs Fielding First\",fontsize=22)\nsns.barplot(labels,result)","c4122e00":"#Home grounds of top 4 teams\nmi_ground=[\"Wankhede Stadium\"]\ncsk_ground=[\"M. A. Chidambaram Stadium\",\"MA Chidambaram Stadium, Chepauk\"]\nkkr_ground=[\"Eden Gardens\"]\nrcb_ground=[\"M Chinnaswamy Stadium\",\"M. Chinnaswamy Stadium\"]\n\n#calcualting win percentage in their home grounds\nmi,csk,rcb,kkr=0,0,0,0\nmi_total,csk_total,kkr_total,rcb_total=0,0,0,0\nfor i in range(len(matches)):\n    if matches.season.iloc[i]>=2007:\n        if matches.venue.iloc[i] in mi_ground:\n            mi_total+=1\n            if matches.winner.iloc[i]=='Mumbai Indians':\n                mi+=1\n        elif matches.venue.iloc[i] in csk_ground:\n            csk_total+=1\n            if matches.winner.iloc[i]=='Chennai Super Kings':\n                csk+=1\n        elif matches.venue.iloc[i] in rcb_ground:\n            rcb_total+=1\n            if matches.winner.iloc[i]=='Royal Challengers Bangalore':\n                rcb+=1\n        elif matches.venue.iloc[i] in kkr_ground: \n            kkr_total+=1\n            if matches.winner.iloc[i]=='Kolkata Knight Riders':\n                kkr+=1\n#print(mi,csk,kkr,rcb)\n#print(mi_total,csk_total,kkr_total,rcb_total)\nteam=[\"MI\",\"CSK\",\"KKR\",\"RCB\"]\nresult=[mi\/mi_total,csk\/csk_total,kkr\/kkr_total,rcb\/rcb_total]\nfor i in range(0,len(result)):\n    result[i]*=100\n\n#plotting\nfig=plt.gcf()\nplt.style.use('ggplot')\nfig.set_size_inches(18.5,10.5)\nplt.xticks(fontsize=18)\nplt.yticks(fontsize=16)\nplt.title(\"Win percentage of Top 4 teams in their Home Ground\",fontsize=20)\nax=sns.barplot(team,result)\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.3,str(round(result[count],2))+\"%\",ha=\"center\") \n    count+=1","3f69be5c":"#Team with most wins\nwins=pd.DataFrame(matches['winner'].value_counts(),index=None)\nplt.style.use('ggplot')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\n#wins=pd.DataFrame(matches['winner'].value_counts())\nwins['name']=wins.index\n\n#plotting\nplt.xticks(rotation=90,fontsize=15)\nplt.yticks(fontsize=16)\nplt.title(\"Most Number of Wins in IPL\",fontsize=20)\nax=sns.barplot(wins['name'],wins['winner'])\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.5,wins['winner'].iloc[count],ha=\"center\") \n    count+=1","c4cac036":"#With most mom awards in IPL\nmom = pd.DataFrame()\nmom['Awards']=matches['player_of_match'].value_counts()\nmom['Player'] =mom.index\nmom=mom[:20]           #Choosing only Top 20 for ploting\n\n#plotting\nplt.style.use('ggplot')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nplt.xticks(rotation=90,fontsize=15)\nplt.yticks(fontsize=16)\nplt.title(\"Most MoM's in IPL (All Seasons)\",fontsize=20)\nax=sns.barplot(mom['Player'],mom['Awards'])\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.3,mom['Awards'].iloc[count],ha=\"center\") \n    count+=1","f23ed395":"\ndic=defaultdict(list)\nfor i in range(0,len(matches)):\n    #if matches.season.iloc[i] not in dic.keys():\n    dic[matches.season.iloc[i]].append(matches.player_of_match.iloc[i])\nplayer=[]         # Player names\nmatch=[]          # Mom's\nyear=[]     \nfor i in sorted(dic.keys()):\n    ctr=collections.Counter(dic[i])\n    d={k: v for k, v in sorted(ctr.items(), key=lambda item: item[1],reverse=True)}\n    player.append(list(d.keys())[0])\n    match.append(list(d.values())[0])\n    year.append(i)\n    \n#plotting\nplt.style.use('ggplot')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)\nplt.title(\"Most MOM awards won by player each season\",fontsize=20)\nax=sns.barplot(year,match)\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.15,player[count],ha=\"center\") \n    count+=1","1a5f5ead":"std = pd.DataFrame()\nstd['Count']=matches['venue'].value_counts()\nstd['Venue'] =std.index\nstd=std[:20]               #Top 20 Stadiums\n\n#plotting\nplt.style.use('ggplot')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.title(\"Matches Played in Different Stadiums\",fontsize=20)\nax=sns.barplot(std['Venue'],std['Count'])\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.3,std['Count'].iloc[count],ha=\"center\") \n    count+=1","815eb8ca":"venue = pd.DataFrame()\nvenue['Count']=matches['city'].value_counts()\nvenue['Venue'] =venue.index\nvenue=venue[:15]      #Top 15 venues\n\n#plotting\nplt.style.use('ggplot')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.title(\"Matches Played in Different Cities\",fontsize=20)\nax=sns.barplot(venue['Venue'],venue['Count'])\ncount=0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,height + 0.3,venue['Count'].iloc[count],ha=\"center\") \n    count+=1","365f11d5":"**Players with most MOM awards in IPL**","1af5f05f":"**Analysis of teams won batting first Vs Fielding first**","2e81628b":"**Analysis of capain's Decision after winning toss**","4e460082":"**Matches Played in Different Cities**","178bf3f4":"**Analysis of win percentage if top 4 teams in their home ground**","3f30c613":"**Most MOM awards won by player each season**","294b1c2c":"**Analysis of Teams having most number of wins in IPL**","6343a1f3":"**Analysis of Number of Mom Awards Won by Indian And Foreign Player.**","3a10cfbd":"**Matches Played in Different Stadiums**"}}