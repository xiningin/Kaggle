{"cell_type":{"c2d2a21d":"code","9d8e7d68":"code","834f3eb6":"code","9c75a940":"code","263445c1":"code","fd21d838":"code","d2120bba":"code","a564dd88":"code","bfeecb33":"code","1429c320":"code","1a786e32":"code","1abae018":"code","310f39a4":"code","11388b9e":"code","ded6b71d":"code","d7193dfc":"code","cebbfc15":"code","5225fd01":"markdown","f9684877":"markdown","f0a5a633":"markdown","739e7cac":"markdown","65347a86":"markdown","2f3461d9":"markdown","5a3f678f":"markdown","85f05cc1":"markdown","14485b7a":"markdown"},"source":{"c2d2a21d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d8e7d68":"raw_data = pd.read_csv('\/kaggle\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018\/data-final.csv',sep='\\t')","834f3eb6":"pd.options.display.max_columns = 200\nprint('First 5 values of raw_data')\nraw_data.head()","9c75a940":"df = raw_data.copy()\ndf.drop(df.columns[108:], axis = 1, inplace = True)\ndf.dropna(inplace=True)\ndf.drop(df.columns[100:107],axis = 1, inplace = True)\ndf = df.loc[(df!=0).all(axis=1)] #remove entries with all 0 values on the questions\ndf.drop(df.columns[50:100],axis = 1, inplace = True)\ndf.drop(df[ df['country'] == 'NONE' ].index, inplace = True)\nprint('First 5 values in the data')\ndf.head()","263445c1":"# Groups and Questions\next_questions = {'EXT1' : 'I am the life of the party',\n                 'EXT2' : 'I dont talk a lot',\n                 'EXT3' : 'I feel comfortable around people',\n                 'EXT4' : 'I keep in the background',\n                 'EXT5' : 'I start conversations',\n                 'EXT6' : 'I have little to say',\n                 'EXT7' : 'I talk to a lot of different people at parties',\n                 'EXT8' : 'I dont like to draw attention to myself',\n                 'EXT9' : 'I dont mind being the center of attention',\n                 'EXT10': 'I am quiet around strangers'}\n\nneu_questions = {'EST1' : 'I get stressed out easily',\n                 'EST2' : 'I am relaxed most of the time',\n                 'EST3' : 'I worry about things',\n                 'EST4' : 'I seldom feel blue',\n                 'EST5' : 'I am easily disturbed',\n                 'EST6' : 'I get upset easily',\n                 'EST7' : 'I change my mood a lot',\n                 'EST8' : 'I have frequent mood swings',\n                 'EST9' : 'I get irritated easily',\n                 'EST10': 'I often feel blue'}\n\nagr_questions = {'AGR1' : 'I feel little concern for others',\n                 'AGR2' : 'I am interested in people',\n                 'AGR3' : 'I insult people',\n                 'AGR4' : 'I sympathize with others feelings',\n                 'AGR5' : 'I am not interested in other peoples problems',\n                 'AGR6' : 'I have a soft heart',\n                 'AGR7' : 'I am not really interested in others',\n                 'AGR8' : 'I take time out for others',\n                 'AGR9' : 'I feel others emotions',\n                 'AGR10': 'I make people feel at ease'}\n\ncsn_questions = {'CSN1' : 'I am always prepared',\n                 'CSN2' : 'I leave my belongings around',\n                 'CSN3' : 'I pay attention to details',\n                 'CSN4' : 'I make a mess of things',\n                 'CSN5' : 'I get chores done right away',\n                 'CSN6' : 'I often forget to put things back in their proper place',\n                 'CSN7' : 'I like order',\n                 'CSN8' : 'I shirk my duties',\n                 'CSN9' : 'I follow a schedule',\n                 'CSN10' : 'I am exacting in my work'}\n\nopn_questions = {'OPN1' : 'I have a rich vocabulary',\n                 'OPN2' : 'I have difficulty understanding abstract ideas',\n                 'OPN3' : 'I have a vivid imagination',\n                 'OPN4' : 'I am not interested in abstract ideas',\n                 'OPN5' : 'I have excellent ideas',\n                 'OPN6' : 'I do not have a good imagination',\n                 'OPN7' : 'I am quick to understand things',\n                 'OPN8' : 'I use difficult words',\n                 'OPN9' : 'I spend time reflecting on things',\n                 'OPN10': 'I am full of ideas'}\n\n# Group Names and Columns\nExtroversion = [column for column in df if (column.startswith('EXT') and not(column.__contains__('_E')))]\nNeuroticism = [column for column in df if (column.startswith('EST') and not(column.__contains__('_E')))]\nAgreeableness = [column for column in df if (column.startswith('AGR') and not(column.__contains__('_E')))]\nConscientiousness = [column for column in df if (column.startswith('CSN') and not(column.__contains__('_E')))]\nOpenness = [column for column in df if (column.startswith('OPN') and not(column.__contains__('_E')))]","fd21d838":"# Defining a function to visualize the questions and answers distribution\ndef vis_questions(groupname, questions, color):\n    plt.figure(figsize=(40,60))\n    for i in range(1, 11):\n        plt.subplot(10,5,i)\n        plt.hist(df[groupname[i-1]], bins=10, color= color, alpha=0.6)\n        plt.title(str(questions[groupname[i-1]]), fontsize=18)\n        plt.xticks([1,2,3,4,5])\n        plt.xlabel('Strongly Disagree   -   Disagree   -   Neutral   -   Agree   -   Strongly Agree')\n        plt.ylabel('Number of Respondents')\n        plt.subplots_adjust(hspace = 0.4)\n\n\nprint('Q&As Related to Extroversion')\nvis_questions(Extroversion, ext_questions, 'blue')\n","d2120bba":"print('Q&As Related to Neuroticism')\nvis_questions(Neuroticism, neu_questions, 'green')","a564dd88":"print('Q&As Related to Agreeableness')\nvis_questions(Agreeableness, agr_questions, 'red')\n","bfeecb33":"print('Q&As Related to Conscientiousness')\nvis_questions(Conscientiousness, csn_questions, 'orange')","1429c320":"print('Q&As Related to Openness')\nvis_questions(Openness, opn_questions, 'brown')","1a786e32":"pd.options.display.max_rows = 250\nprint('Number of countries of the participants: ',len(df.country.value_counts()))\nprint(df.country.value_counts().head(20))\nprint('...')\n","1abae018":"change_scale =['EXT2','EXT4','EXT6','EXT10','EXT8','EST2','EST4','AGR1','AGR3','AGR5','AGR7','CSN2','CSN4','CSN6','CSN8','OPN2',\\\n               'OPN4','OPN6'] \n#we change the scale for those columns because for those questions, high score actually means the individual\/participant is low on the trait that \n#the question is related to or vice versa, for example, for the question EST2 'I am relaxed most of the time', individuals who score high (4 or 5)\n#on the question is actually showing traits of low neuroticsm\n\ndf_excl = df.groupby('country', as_index = False, group_keys = False).filter(lambda x: len(x) >= 1000) \n#remove countries where value count is less than 1000\nsample = df_excl.groupby('country',as_index = False,group_keys=False).apply(lambda s: s.sample(1000,replace = True, random_state = 1))\n#sample 1000 values from each country\n\nsample[change_scale] = 6 - sample[change_scale]\nsample.head()","310f39a4":"sample_averaged = sample.groupby('country',as_index = True,group_keys=False).mean()\nsample_stddev = sample.groupby('country',as_index = True,group_keys=False).std()\n\nquestions = {'EXT1' : 'I am the life of the party',\n                 'EXT2' : 'I dont talk a lot',\n                 'EXT3' : 'I feel comfortable around people',\n                 'EXT4' : 'I keep in the background',\n                 'EXT5' : 'I start conversations',\n                 'EXT6' : 'I have little to say',\n                 'EXT7' : 'I talk to a lot of different people at parties',\n                 'EXT8' : 'I dont like to draw attention to myself',\n                 'EXT9' : 'I dont mind being the center of attention',\n                 'EXT10': 'I am quiet around strangers',\n                 'EST1' : 'I get stressed out easily',\n                 'EST2' : 'I am relaxed most of the time',\n                 'EST3' : 'I worry about things',\n                 'EST4' : 'I seldom feel blue',\n                 'EST5' : 'I am easily disturbed',\n                 'EST6' : 'I get upset easily',\n                 'EST7' : 'I change my mood a lot',\n                 'EST8' : 'I have frequent mood swings',\n                 'EST9' : 'I get irritated easily',\n                 'EST10': 'I often feel blue',\n                 'AGR1' : 'I feel little concern for others',\n                 'AGR2' : 'I am interested in people',\n                 'AGR3' : 'I insult people',\n                 'AGR4' : 'I sympathize with others feelings',\n                 'AGR5' : 'I am not interested in other peoples problems',\n                 'AGR6' : 'I have a soft heart',\n                 'AGR7' : 'I am not really interested in others',\n                 'AGR8' : 'I take time out for others',\n                 'AGR9' : 'I feel others emotions',\n                 'AGR10': 'I make people feel at ease',\n                 'CSN1' : 'I am always prepared',\n                 'CSN2' : 'I leave my belongings around',\n                 'CSN3' : 'I pay attention to details',\n                 'CSN4' : 'I make a mess of things',\n                 'CSN5' : 'I get chores done right away',\n                 'CSN6' : 'I often forget to put things back in their proper place',\n                 'CSN7' : 'I like order',\n                 'CSN8' : 'I shirk my duties',\n                 'CSN9' : 'I follow a schedule',\n                 'CSN10' : 'I am exacting in my work',\n                 'OPN1' : 'I have a rich vocabulary',\n                 'OPN2' : 'I have difficulty understanding abstract ideas',\n                 'OPN3' : 'I have a vivid imagination',\n                 'OPN4' : 'I am not interested in abstract ideas',\n                 'OPN5' : 'I have excellent ideas',\n                 'OPN6' : 'I do not have a good imagination',\n                 'OPN7' : 'I am quick to understand things',\n                 'OPN8' : 'I use difficult words',\n                 'OPN9' : 'I spend time reflecting on things',\n                 'OPN10': 'I am full of ideas'}\n\ncolors = ['blue', 'green', 'red', 'orange', 'brown']\n\nplt.figure(figsize=(20,200))\nfor i in range(1,len(sample_averaged.columns)):\n    plt.subplot(50,1,i)\n    plt.plot(sample_averaged.index, sample_averaged[sample_averaged.columns[i]], color = colors[(i-1)\/\/10],alpha = .7,\\\n             marker='s',linewidth=3, markersize=6)\n    plt.errorbar(sample_averaged.index, sample_averaged[sample_averaged.columns[i]],sample_stddev[sample_stddev.columns[i]])\n    plt.yticks([1,2,3,4,5])\n    plt.xlabel('Country Code')\n    plt.title(questions[sample_averaged.columns[i]], fontsize=18);\n    plt.grid(axis='y',b=True, which='major', color='#666666', linestyle='-')\n    plt.subplots_adjust(hspace = 0.4)\n      \nplt.savefig('QuestionsbyCountries.pdf')","11388b9e":" #we want to see the correlation between questions\nquestions_corr = pd.DataFrame.corr(sample)\nprint('Questions Mapping')\nprint('1 to 10 is regarding Extroversion')\nprint('11 to 20 is regarding Neuroticism')\nprint('21 to 30 is regarding Agreeableness')\nprint('31 to 40 is regarding Conscientiousness')\nprint('41 to 50 is regarding Openness')\n\n    \nplt.figure(figsize = (10,8.5))\nplt.pcolor(questions_corr, cmap='plasma');\nplt.grid(b=True, which='major', color='k', linestyle='-');\nplt.colorbar();\nplt.title('Questions Correlation Matrix', fontsize = 18)\nplt.xlabel('Extroversion   -   Neuroticism   -   Agreeableness   -   Conscientiousness   -   Openness')\nplt.ylabel('Extroversion   -   Neuroticism   -   Agreeableness   -   Conscientiousness   -   Openness')\nplt.savefig('Question_correlation.pdf')","ded6b71d":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = StandardScaler()\ndata = sample.drop('country', axis = 1)\ndata_scaled = scaler.fit_transform(data)\n\n# fitting multiple k-means algorithms and storing the values in an empty list\nSSE = []\nfor cluster in range(1,20):\n    kmeans = KMeans(n_jobs = -1, n_clusters = cluster, init='k-means++')\n    kmeans.fit(data_scaled)\n    SSE.append(kmeans.inertia_)\n\n# converting the results into a dataframe and plotting them\nframe = pd.DataFrame({'Cluster':range(1,20), 'SSE':SSE})\nplt.figure(figsize=(12,6))\nplt.plot(frame['Cluster'], frame['SSE'], marker='o')\nplt.xlabel('Number of clusters')\nplt.ylabel('Loss Function (Inertia)')","d7193dfc":"# k means using 9 clusters and k-means++ initialization\nkmeans = KMeans(n_jobs = -1, n_clusters = 9, init='k-means++')\nkmeans.fit(data_scaled)\npred = kmeans.predict(data_scaled)\n\ndata['Cluster'] = pred\ndata_clustered = data.groupby('Cluster').mean()\n\nprint('X-axis Mapping')\nprint('1 to 10 is the region of Extroversion')\nprint('11 to 20 is the region of Neuroticism')\nprint('21 to 30 is the region of Agreeableness')\nprint('31 to 40 is the region of Conscientiousness')\nprint('41 to 50 is the region of Openness')\n\nplt.figure(figsize=(20,20))\nfor i in data_clustered.index:\n    plt.subplot(len(data_clustered.index),1,i+1)\n    plt.bar(range(1,51), data_clustered.iloc[i], color = colors[i%5],alpha = .6)\n    plt.plot(range(1,51), data_clustered.iloc[i], color='black')\n    plt.yticks([1,2,3,4,5])\n    plt.title('Cluster ' + str(i+1), fontsize=18);\n    plt.grid(b=True, which='major', color='#666666', linestyle='-')\n    plt.subplots_adjust(hspace = 0.4)\n    \nplt.savefig('Clusters.pdf')","cebbfc15":"col_list = list(data_clustered.columns)\next = col_list[0:10]\nest = col_list[10:20]\nagr = col_list[20:30]\ncsn = col_list[30:40]\nopn = col_list[40:50]\n\ndata_sums = pd.DataFrame()\ndata_sums['extroversion'] = data_clustered[ext].sum(axis=1)\ndata_sums['neuroticism'] = data_clustered[est].sum(axis=1)\ndata_sums['agreeableness'] = data_clustered[agr].sum(axis=1)\ndata_sums['conscientiousness'] = data_clustered[csn].sum(axis=1)\ndata_sums['openness'] = data_clustered[opn].sum(axis=1)\ndata_sums\n\n# Visualizing the means for each cluster\nplt.figure(figsize=(23,3.5))\nfor i in range(0, len(data_sums.index)):\n    plt.subplot(1, len(data_sums.index),i+1)\n    plt.bar(data_sums.columns, data_sums.iloc[i], color='green', alpha=0.2)\n    plt.plot(data_sums.columns, data_sums.iloc[i], color='red')\n    plt.title('Cluster ' + str(i+1))\n    plt.xticks(rotation=45)\n    plt.ylim(0,50);\nplt.tight_layout()\n    \nplt.savefig('Cluster_traits.pdf');","5225fd01":"Above we can see the mean and standard deviation of the countries for the questions in the test. As we can see, for the purpose of this analysis, since the mean across countries for the answer to the questions are relatively similar, we would assume that countries would not be a determining variable to our clustering of the participants\n\n# **Next, we would like to see the correlation between the questions in the study**","f9684877":"You can think of the Loss Function as the accuracy of the classifier.\n\nAs we can see above, the optimal number of cluster is difficult to see since there is no distinct 'elbow' or point which signifies where the decrease of loss function become significantly lesser. However, we do see that after 9 cluster the change in Loss Function started to decrease less and became more linear, and 9 cluster corresponds to the 'bend' before it, therefore let's select the number of cluster to be 9","f0a5a633":"Above we can see raw data of the study that we are going to use in this notebook. \nthe columns EXT1 to OPN10 corresponds to the score chosen by the participants for the questions in the study\n\nHere is the mapping for the values in EXT1 to OPN10 column:\n\n* 1.0 corresponds to the answer of 'Strongly Disagree'\n* 2.0 corresponds to the answer of 'Disagree'\n* 3.0 corresponds to the answer of 'Neutral'\n* 4.0 corresponds to the answer of 'Agree'\n* 5.0 corresponds to the answer of 'Strongly Agree'\n\nColumns ending with '_E' corresponds to the time it takes for the participant to asnwer the respective questions\n\nFor the purpose of our analysis, we will select only columns EXT to OPN as well as 'country' ","739e7cac":"# Finding Clusters of Personality Types Based on OCEAN Model Online Study\n\nHello guys, this time we will try to examine the data collected from a study of Big 5 or OCEAN model online study. \nYou can find the link to the test here: https:\/\/openpsychometrics.org\/tests\/IPIP-BFFM\/\n\nIn this notebook, we will try to\n1. Find clusters of personality types of the participants of the study\n2. Find the correlation between one trait and another\n\nBut before, what is Big Five \/ OCEAN model? It is a model of psychology which aims to classify a person's personality based on five major traits namely,\n* Openness (O) : Openness of the person to new things, experience and ideas \n* Conscientiousness (C) : Dilligency and studiousness of the person\n* Extroversion (E) : The degree in which the person likes to meet people \/ new people \n* Agreeableness (A) : The propensity of the person to agree to other's argument to avoid confrontation\n* Neuroticism (N) : Anxiety, restlessness of the person\n\nIf you are interested about the Big Five \/ OCEAN model, more details can be found in this link https:\/\/en.wikipedia.org\/wiki\/Big_Five_personality_traits\n\n","65347a86":"**We can see that there is:**\n\nA correlation of around 0.4 between Agreeableness and Extroversion (x axis of 21-30, y axis of 1-10), \n\naround -0.1 correlation between Conscientiousness and Neuroticism (x axis of 31-40, y axis of 11-20),\n\n0.1 correlation between Openness (x axis of 41 -50) and Extroversion (y axis of 1-10).\n\n# **Now let's do the clustering using KNearest Neighbor clustering to find out the different types of the participants in this study**\n\nBut how many clusters are we expecting? let's find the optimum number of clusters","2f3461d9":"We can see above the Clusters of the participants of this study.\n\nHow to interpret the result?\n\nYou can think of the y-axis as the scale for the traits. With 50 being the highest, 10 being the lowest, and 30 as the mean.\n\nFor example: \n\nWe can classify participants who belong in Cluster 7 as individuals who are low in Extroversion, average on Neuroticism, high on Agreeableness, Conscientiousness, and Openness.\n","5a3f678f":"We can see that the participants come from 222 countries, with most of the participants coming from the US. \n\nFor the purpose of our classification, we would only select the countries in which the number of participants is higher than 1000 for our sample.\nFor each country we will be taking 1000 sample each.","85f05cc1":"Above we can see the profile for the 9 types of participants we classify using the KNeighbor classifier, however, it is difficult to make out of the traits because of the numerous of questions (1-50 on the X-axis), hence let us sum those values above based on their questions grouping.\n","14485b7a":"# **Now let's visualize the Questions and Answers in the study.**\n\n*The code for the visualization is inspired by Melih Akdag's notebook (https:\/\/www.kaggle.com\/akdagmelih\/five-personality-clusters-k-means).*"}}