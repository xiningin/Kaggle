{"cell_type":{"fca1a169":"code","81b7d195":"code","131709a5":"code","d5f7b902":"code","63b3610e":"code","64356693":"code","0529929e":"code","2443b25f":"code","7ac32675":"code","0360be12":"code","4c7eea38":"code","95db9f09":"code","1bda766e":"code","7682208f":"code","f509e439":"code","f7d946a8":"code","381a263f":"code","cc06e48a":"code","a98752c1":"code","39b933cd":"code","e88bf7c4":"code","ae12aa99":"code","f2682b85":"code","1ca3ce74":"code","58c2ec86":"code","9cb1b32c":"code","e64a9331":"code","964aa0c9":"code","5d70a86c":"code","db85b56c":"code","6fce0587":"code","45ae6373":"code","3d20fa91":"markdown","8b347497":"markdown","d41c3143":"markdown","eecbd6e3":"markdown","47f18999":"markdown","fc853f0d":"markdown","ce56938c":"markdown","b04ae2cb":"markdown","d6e10f80":"markdown","fedc3129":"markdown","c9b0b02a":"markdown","98dcaa2b":"markdown","08a63e35":"markdown","5c2b71dd":"markdown","bbaf6751":"markdown","fe27b3e7":"markdown","8037bf67":"markdown","f8bf42b4":"markdown"},"source":{"fca1a169":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport warnings\nfrom sklearn.metrics import accuracy_score,classification_report\n\n%matplotlib inline\nwarnings.filterwarnings('ignore')","81b7d195":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","131709a5":"data.head()","d5f7b902":"data.shape","63b3610e":"data.info()","64356693":"data.columns","0529929e":"sns.heatmap(data.isnull())","2443b25f":"data =data.drop(\"Unnamed: 32\",axis=1)\ndata =data.drop('id',axis=1)","7ac32675":"data = pd.concat([pd.get_dummies(data['diagnosis']),data],axis=1)\ndata = data.drop('diagnosis',axis=1)\ndata = data.drop('B',axis=1)\ndata.head()","0360be12":"plt.figure(figsize=(30,20))\nsns.heatmap(data.corr(method='spearman'),annot=True)","4c7eea38":"data.corr(method='spearman')['M'].sort_values().tail()","95db9f09":"data.corr(method='spearman')['radius_mean'].drop('radius_mean',axis=0).sort_values().tail()","1bda766e":"data = data.drop(['perimeter_mean','area_mean','perimeter_worst', 'area_worst','perimeter_se', 'area_se'],axis=1)","7682208f":"data.corr(method='spearman')['radius_mean'].drop(['radius_mean','M'],axis=0).sort_values().tail(1)","f509e439":"data.corr(method='spearman')['smoothness_mean'].drop(['smoothness_mean','M'],axis=0).sort_values().tail(1)","f7d946a8":"data.corr(method='spearman')['texture_mean'].drop(['texture_mean','M'],axis=0).sort_values().tail(1)","381a263f":"#data = data.drop(['radius_worst', 'texture_worst','smoothness_worst', 'compactness_worst', 'concavity_worst','concave points_worst', 'symmetry_worst', 'fractal_dimension_worst'],axis=1)","cc06e48a":"sns.pairplot(data,hue='M',palette = 'tab10')","a98752c1":"plt.figure(figsize=(10,10))\nfig = px.scatter_3d(data, x='radius_mean', y='texture_mean', z='concavity_mean',color='M')\nfig.show()","39b933cd":"plt.figure(figsize=(10,8),num=1)\nplt.subplot(2,2,1)\nsns.scatterplot(x='radius_mean',y='texture_mean',hue='M',palette='CMRmap',data=data)\nplt.subplot(2,2,2)\nsns.scatterplot(x='radius_mean',y='concavity_mean',hue='M',palette='CMRmap',data=data)\nplt.subplot(2,2,3)\nsns.scatterplot(x='fractal_dimension_mean',y='texture_mean',hue='M',palette='CMRmap',data=data)\nplt.subplot(2,2,4)\nsns.scatterplot(x='fractal_dimension_mean',y='concavity_mean',hue='M',palette='CMRmap', data=data)","e88bf7c4":"plt.figure(figsize=(10,8),num=1)\nplt.subplot(2,2,1)\nsns.boxplot(x='M',y='concave points_mean',palette='CMRmap',data=data)\nplt.subplot(2,2,2)\nsns.boxplot(x='M',y='symmetry_mean',palette='CMRmap',data=data)\nplt.subplot(2,2,3)\nsns.boxplot(x='M',y='smoothness_mean',palette='CMRmap',data=data)\nplt.subplot(2,2,4)\nsns.boxplot(x='M',y='compactness_mean',palette='CMRmap', data=data)","ae12aa99":"X = data.drop('M',axis=1)\nY = data['M']","f2682b85":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=54)","1ca3ce74":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()","58c2ec86":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()","9cb1b32c":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)","e64a9331":"accuracy = []\nfor i in range(1,200):    \n    kn = KNeighborsClassifier(n_neighbors=i)\n    kn.fit(X_train,Y_train)\n    predK = kn.predict(X_test)\n    accuracy.append([accuracy_score(Y_test,predK),i])\ntemp = accuracy[0]\nfor m in accuracy:\n    if temp[0] < m[0]:\n        temp=m\nkno = KNeighborsClassifier(n_neighbors=temp[1])","964aa0c9":"from sklearn.svm import SVC\nsvc = SVC()","5d70a86c":"from sklearn.model_selection import GridSearchCV\nparam_grid = {'C': [0.1,1, 10, 100, 1000,2000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} \ngrid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)","db85b56c":"from sklearn.metrics import accuracy_score,classification_report\naccuracy = []\nmodels = [lr,rfc,knn,kno,svc,grid]\nfor m in models:\n    m.fit(X_train,Y_train)\n    prediction = m.predict(X_test)\n    accuracy.append([m,accuracy_score(Y_test,prediction)])","6fce0587":"temp = accuracy[0]\nfor m in accuracy:\n    if temp[1]<m[1]:\n        temp=m\nprint(temp)","45ae6373":"print(classification_report(Y_test,temp[0].predict(X_test)))\nprint(\"Accuracy of this model: \",round(accuracy_score(Y_test,temp[0].predict(X_test))*100,2),'%')","3d20fa91":"## Data Split","8b347497":"#### Note: A value of 1 in the M column represents a malignant cancer","d41c3143":"### Converting cancer type to boolean","eecbd6e3":"# <center> Breast Cancer Evaluation <\/center>","47f18999":"#### Note: here we see that the area, perimeter and radius are highly correlated. In essence this could be due to the fact that they are mathematical fns of each other. We will thus eliminate them to make the model more efficient","fc853f0d":"### Correlation Coeffs","ce56938c":"## Importing the data","b04ae2cb":"### Dropping id and unnamed columns","d6e10f80":"## Model Creation","fedc3129":"## Checking the data","c9b0b02a":"## EDA","98dcaa2b":"## Aim","08a63e35":"### The best method is thus a Logistic regression as it gives us an accuracy of 97%","5c2b71dd":"Now what we have is a much simpler and effective dataset","bbaf6751":"Now we knwo that we dont have any null values","fe27b3e7":"## Importing the libraries","8037bf67":"## Data Cleaning","f8bf42b4":"The aim of this research is to predict the intensity of the cancer nased ons given medical parameters. We will be using 6 ML models and the best of these will be chosen"}}