{"cell_type":{"d70b5cc3":"code","5786f9fa":"code","0c852fa9":"code","5c7fd746":"code","a3ac6a51":"code","d577a9f8":"code","502f04a1":"code","8d9971a3":"code","489f3629":"code","a6b04aa4":"code","948f026c":"code","76679f91":"code","5b4c7731":"code","88e368bc":"code","09d73b87":"code","a4f7bbe7":"code","85be1209":"code","8f90f82a":"code","90c151e4":"code","a3b43977":"code","9d9d8d25":"code","a16772db":"code","cddb062c":"code","b433d0d8":"code","ea5a7904":"code","cf96db71":"code","86fc817b":"code","b288dcf3":"code","5fea0bff":"code","c3924de4":"code","b437e202":"code","a1561744":"code","7b4426be":"code","421c490e":"code","bd87797a":"code","acd63579":"code","567d3525":"code","5b7296d7":"code","8c104afb":"code","b7ff6158":"code","94e28d87":"code","8a75aadd":"code","275c68c8":"code","32e7c3a7":"code","f4142ce6":"code","868d8f65":"code","1412098d":"code","8a8a91fd":"code","fd51e6fa":"code","36e36f41":"code","b7ee8089":"code","19195374":"code","9b32aa2b":"code","c0af6675":"code","33006b81":"code","80536080":"code","84d438aa":"code","fb344002":"code","bee3433f":"code","4f9a488b":"code","5e6b7cb3":"markdown","0a323b9a":"markdown","95646528":"markdown","cc20b0a4":"markdown","2189feda":"markdown","d73091bb":"markdown","88de56ec":"markdown","5065b8c9":"markdown","a6b6f60f":"markdown","c7115f9a":"markdown","ca94de3b":"markdown","83e578cc":"markdown","3ed6e307":"markdown","384a5270":"markdown","86749e49":"markdown","4f1f248d":"markdown","b1cfd093":"markdown","5725cedd":"markdown","0d7356af":"markdown","5cf83ba7":"markdown","460235b9":"markdown","53ae83ec":"markdown","9684dc22":"markdown","913bf26d":"markdown","c4185ae4":"markdown","b5275dc4":"markdown","e3acf4f3":"markdown","a3b71989":"markdown","50e98321":"markdown","6c7ec93d":"markdown","c8251d12":"markdown","2110c727":"markdown","1b926f0a":"markdown","56e586de":"markdown","77052895":"markdown","e66eb9f0":"markdown","0cb4ce33":"markdown","3266a578":"markdown","343fe5b5":"markdown"},"source":{"d70b5cc3":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5786f9fa":"Import_dataset = pd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_import.csv')\nExport_dataset = pd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_export.csv')","0c852fa9":"#Visualising top 5 rows of our DataFrame\nImport_dataset.head(5)","5c7fd746":"#Info of dataset\nImport_dataset.info()","a3ac6a51":"#Checking for stats of this Import Data\nImport_dataset.describe()","d577a9f8":"#Checking For Duplicate rows\nImport_dataset[Import_dataset.duplicated()].shape","502f04a1":"#Droping Duplicate values\nImport_dataset.drop_duplicates(keep='first', inplace=True)\nImport_dataset.shape","8d9971a3":"#Checking for null values\nImport_dataset.isnull().sum()","489f3629":"Import_dataset.groupby('country').agg( {'value': 'median'}).head(20)","a6b04aa4":"t = Import_dataset.groupby('country').agg( {'value': 'median'})\nt[t['value'] > 4.9]","948f026c":"Country_lst = []\nTotal_count_lst = []\nNull_count_lst = []\nMedian_lst = []\nfor country in t[t['value'] > 4.9].index:\n    Null_count = Import_dataset[Import_dataset['country'] == country].value.isnull().sum()\n    Total_count = Import_dataset[Import_dataset['country']  == country].shape[0]\n    Median = Import_dataset[Import_dataset['country']  == country].value.median()\n    Country_lst.append(country)\n    Total_count_lst.append(Total_count)\n    Null_count_lst.append(Null_count)\n    Median_lst.append(Median)\n    \ndf = pd.DataFrame({'Country' : Country_lst, 'Total_count':Total_count_lst, 'Null_count': Null_count_lst, \n                   'Median': Median_lst})\ndf","76679f91":"#Since the null value corressponds to different countries, so will replace null values of a country with median value of import of that country\n#Importing all country name in a array country\n\n#country = Import_dataset['country'].unique()\ncountry = df['Country'].unique()\n\n#defing a temporary dataframe similar to original dataframe\nimp_d_1 = pd.DataFrame(columns=Import_dataset.columns)\ntmp = pd.DataFrame(columns=Import_dataset.columns)\n\n#for loop to fill na values country wise with median of that country\nfor i in country:\n    for cmdty in Import_dataset[Import_dataset['country'] == i]['Commodity'].unique():\n        median = Import_dataset[(Import_dataset['country'] == i) & (Import_dataset['Commodity'] == cmdty)].value.median()\n        tmp1 = Import_dataset[(Import_dataset['country'] == i) & (Import_dataset['Commodity'] == cmdty)].fillna(median)\n        tmp = pd.concat([tmp, tmp1], axis=0)\n    \nimp_d_1 = tmp\nimp_d_1.head()","5b4c7731":"#Filling null values for rest countries\nfilled_countries = imp_d_1['country'].unique()\nall_countries = Import_dataset['country'].unique()\nrest_countries=list(set(filled_countries)^set(all_countries))\n\n\n#defing a temporary dataframe similar to original dataframe\ntmp = pd.DataFrame(columns=Import_dataset.columns)\n\n#for loop to fill na values country wise with median of that country\nfor i in rest_countries:\n    median = Import_dataset[Import_dataset['country'] == i].value.median()\n    tmp1 = Import_dataset[Import_dataset['country'] == i].fillna(median)\n    tmp = pd.concat([tmp, tmp1], axis=0)\n    \nimp_d_2 = tmp\nimp_d_2.head()","88e368bc":"#Combining the two DataFrame for a complete Import DataFrame\n\nImport = pd.concat([imp_d_1, imp_d_2])\nImport.sort_values([\"country\", \"Commodity\"], ascending=[True, True], inplace=True)","09d73b87":"#Checking for null values\nImport.isnull().sum()","a4f7bbe7":"Import[Import.value.isnull()]","85be1209":"Import.dropna(inplace=True)","8f90f82a":"#Checking for null values\nImport.isnull().sum()","90c151e4":"Import.drop(Import[Import['country'] == 'UNSPECIFIED'].index, inplace=True)","a3b43977":"Import_data = Import","9d9d8d25":"#Visualising top 5 rows of our DataFrame\nExport_dataset.head(5)","a16772db":"#Info of dataset\nExport_dataset.info()","cddb062c":"#Checking for stats of this Import Data\nExport_dataset.describe()","b433d0d8":"#Checking For Duplicate rows\nExport_dataset[Export_dataset.duplicated()].shape","ea5a7904":"#Checking for null values\nExport_dataset.isnull().sum()","cf96db71":"Export_dataset.groupby('country').agg( {'value': 'median'}).head(20)","86fc817b":"t = Export_dataset.groupby('country').agg( {'value': 'median'})\nt[t['value'] > 10]","b288dcf3":"Country_lst = []\nTotal_count_lst = []\nNull_count_lst = []\nMedian_lst = []\nfor country in t[t['value'] > 10].index:\n    Null_count = Export_dataset[Export_dataset['country'] == country].value.isnull().sum()\n    Total_count = Export_dataset[Export_dataset['country']  == country].shape[0]\n    Median = Export_dataset[Export_dataset['country']  == country].value.median()\n    Country_lst.append(country)\n    Total_count_lst.append(Total_count)\n    Null_count_lst.append(Null_count)\n    Median_lst.append(Median)\n    \ndf = pd.DataFrame({'Country' : Country_lst, 'Total_count':Total_count_lst, 'Null_count': Null_count_lst, \n                   'Median': Median_lst})\ndf","5fea0bff":"df['Country'].unique()","c3924de4":"#Since the null value corressponds to different countries, so will replace null values of a country with median value of exmport of that country\n#Importing all country name in a array country\n\n\n\n#defing a temporary dataframe similar to original dataframe\nexp_d = pd.DataFrame(columns=Export_dataset.columns)\ntmp = pd.DataFrame(columns=Export_dataset.columns)\n\n#for loop to fill na values country wise with median of that country\nfor i in df['Country'].unique():\n    for cmdty in Export_dataset[Export_dataset['country'] == i]['Commodity'].unique():\n        median = Export_dataset[(Export_dataset['country'] == i) & (Export_dataset['Commodity'] == cmdty)].value.median()\n        tmp1 = Export_dataset[(Export_dataset['country'] == i) & (Export_dataset['Commodity'] == cmdty)].fillna(median)\n        tmp = pd.concat([tmp, tmp1], axis=0)\n    \nexp_d_1 = tmp\nexp_d_1.head()","b437e202":"#Filling null values for rest countries\nfilled_countries = exp_d_1['country'].unique()\nall_countries = Export_dataset['country'].unique()\nrest_countries=list(set(filled_countries)^set(all_countries))\n\n\n#defing a temporary dataframe similar to original dataframe\ntmp = pd.DataFrame(columns=Export_dataset.columns)\n\n#for loop to fill na values country wise with median of that country\nfor i in rest_countries:\n    median = Export_dataset[Export_dataset['country'] == i].value.median()\n    tmp1 = Export_dataset[Export_dataset['country'] == i].fillna(median)\n    tmp = pd.concat([tmp, tmp1], axis=0)\n    \nexp_d_2 = tmp\nexp_d_2.head()","a1561744":"#Combining the two DataFrame for a complete Export DataFrame\n\nExport = pd.concat([exp_d_1, exp_d_2])\nExport.sort_values([\"country\", \"Commodity\", \"year\"], ascending=[True, True, True], inplace=True)","7b4426be":"Export.drop(Export[Export['country'] == 'UNSPECIFIED'].index, inplace=True)","421c490e":"Export_data = Export\n","bd87797a":"Export.isnull().sum()","acd63579":"#Generating Import Data\nimp_d = Import\ncountry = imp_d['country'].unique()\nyear = imp_d['year'].unique()\ntmp_cntry = pd.DataFrame(columns=imp_d.columns)\ntmp_yer = pd.DataFrame(columns=imp_d.columns)\ncountry_list = []\nyear_list = []\nvalue_list = []\n#Loop for segrigating country wise data\nfor cntry in country:\n    tmp_cntry = imp_d[imp_d['country'] == cntry]\n    #Loop for segrigating Contry wise data further into year wise\n    for yer in year:\n        tmp_yer =tmp_cntry[tmp_cntry['year'] == yer]\n        tmp_total_year_value = tmp_yer['value'].sum()\n        tmp_country = cntry\n        tmp_year = yer\n        year_list.append(tmp_year)\n        country_list.append(tmp_country)\n        value_list.append(tmp_total_year_value)\n        \nConsolidated_data = {'Country' : country_list, 'Year' : year_list ,'ImportValue' : value_list}\nimp_yearly_Consolidated = pd.DataFrame(Consolidated_data)\nimp_yearly_Consolidated.sort_values(['Country', 'Year'], inplace=True)","567d3525":"#Generating Export Data\nexp_d = Export\ncountry = exp_d['country'].unique()\nyear = exp_d['year'].unique()\ntmp_cntry = pd.DataFrame(columns=exp_d.columns)\ntmp_yer = pd.DataFrame(columns=exp_d.columns)\ncountry_list = []\nyear_list = []\nvalue_list = []\n#Loop for segrigating country wise data\nfor cntry in country:\n    tmp_cntry = exp_d[exp_d['country'] == cntry]\n    #Loop for segrigating Contry wise data further into year wise\n    for yer in year:\n        tmp_yer =tmp_cntry[tmp_cntry['year'] == yer]\n        tmp_total_year_value = tmp_yer['value'].sum()\n        tmp_country = cntry\n        tmp_year = yer\n        year_list.append(tmp_year)\n        country_list.append(tmp_country)\n        value_list.append(tmp_total_year_value)\n        \nConsolidated_data = {'Country' : country_list, 'Year' : year_list ,'ExportValue' : value_list}\nexp_yearly_Consolidated = pd.DataFrame(Consolidated_data)\nexp_yearly_Consolidated.sort_values(['Country', 'Year'], inplace=True)\n\n","5b7296d7":"imp_yearly_Consolidated.set_index('Country')         #Setting Index as Country\nexp_yearly_Consolidated.set_index('Country')         #Setting Index as Country\nIndia_imp_exp_data = pd.merge(imp_yearly_Consolidated, exp_yearly_Consolidated, how='outer')\nIndia_imp_exp_data.head()","8c104afb":"# The new dataframe India_imp_exp_data can have null values because it is not necessary that from a country we have exported and imported simultaneously\n#So we can fill those null values with 0\nIndia_imp_exp_data.fillna(0, inplace=True)\n#Checking for null values\nIndia_imp_exp_data.isnull().sum()","b7ff6158":"#Creating a new column of Trade deficit in India_imp_exp_data\nIndia_imp_exp_data['TradeDeficit'] = India_imp_exp_data['ImportValue'] - India_imp_exp_data['ExportValue'] \nIndia_imp_exp_data.head()\n","94e28d87":"#Consolidating data Year Wise\nYear = India_imp_exp_data['Year'].unique()\nyear = []\nimport_value = []\nexport_value = []\nexp_imp_diff = []\nfor yer in Year:\n    tmp = India_imp_exp_data[India_imp_exp_data['Year'] == yer]\n    total_import_in_year = tmp['ImportValue'].values.sum()\n    total_export_in_year = tmp['ExportValue'].values.sum()\n    total_exp_imp_diff = tmp['TradeDeficit'].values.sum()\n    year.append(yer)\n    import_value.append(total_import_in_year)\n    export_value.append(total_export_in_year)\n    exp_imp_diff.append(total_exp_imp_diff)\n        \nYearly_Imp_Exp = pd.DataFrame({'Year' : year, 'Import': import_value, 'Export': export_value, 'TradeDeficit' : exp_imp_diff })\nYearly_Imp_Exp.sort_values(\"Year\", inplace=True)\nYearly_Imp_Exp","8a75aadd":"#Import Export Growth Chart\n\nplt.plot('Year', 'Import', data=Yearly_Imp_Exp,marker='o', label='Import')\nplt.plot('Year', 'Export', data=Yearly_Imp_Exp,marker='^', label='Export')\nplt.plot('Year', 'TradeDeficit', data=Yearly_Imp_Exp,marker='|', label='TradeDeficit')\nplt.legend()\nplt.title('Yearly Import & Export and Trade Defict')\nplt.xlabel('Year')\nplt.ylabel('Value')\nplt.show()","275c68c8":"#Bar Plot\nYear = Yearly_Imp_Exp['Year'].values\nImport = Yearly_Imp_Exp['Import'].values\nExport = Yearly_Imp_Exp['Export'].values\nTradeDeficit = Yearly_Imp_Exp['TradeDeficit'].values\nindex = np.arange(len(Year))\nwidth = 0.25\nplt.bar(index, Import, width, label='Import')\nplt.bar(index + width, Export, width,label='Export')\nplt.bar(index + width + width, TradeDeficit, width,label='Deficit')\n\nplt.ylabel('Value')\nplt.title('Import & Export')\n\nplt.xticks(index + width \/ 2, Year)\nplt.legend(loc='upper center')\nplt.show()\n    ","32e7c3a7":"#Seaborn\nYearly_top_5_import = pd.DataFrame(columns=India_imp_exp_data.columns)\nYearly_top_5_export = pd.DataFrame(columns=India_imp_exp_data.columns)\nYearly_top_5_deficit = pd.DataFrame(columns=India_imp_exp_data.columns)\nfor yer in India_imp_exp_data['Year'].unique():\n    temp = India_imp_exp_data[India_imp_exp_data['Year'] == yer]\n    top5_import = temp.sort_values('ImportValue', ascending=False).iloc[:5, :]\n    Yearly_top_5_import = pd.concat([Yearly_top_5_import, top5_import])\n    top5_export = temp.sort_values('ExportValue', ascending=False).iloc[:5, :]\n    Yearly_top_5_export = pd.concat([Yearly_top_5_export, top5_export])\n    top5_deficit = temp.sort_values('TradeDeficit', ascending=False).iloc[:5, :]\n    Yearly_top_5_deficit = pd.concat([Yearly_top_5_deficit, top5_deficit])\n    \n\nsns.relplot(x='Year', y='ImportValue', data=Yearly_top_5_import.sort_values(\"Year\"), hue='Country', size='ImportValue', sizes=(50,200))\nsns.relplot(x='Year', y='ExportValue', data=Yearly_top_5_export.sort_values(\"Year\"), hue='Country', size='ExportValue', sizes=(50,200))\nsns.relplot(x='Year', y='TradeDeficit', data=Yearly_top_5_deficit.sort_values(\"Year\"), hue='Country', size='TradeDeficit', sizes=(50,200))","f4142ce6":"#Pie Chart\n# Ploting top 6 countries from which India Imported Year on Year\nYear = India_imp_exp_data['Year'].unique()\ntop_6 = pd.DataFrame(columns=India_imp_exp_data.columns)\nFinal_Import = pd.DataFrame(columns=India_imp_exp_data.columns)\nfig, ax = plt.subplots(3,3, constrained_layout=True)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(18.5, 10.5)     #Setting Figure Size\nfig.suptitle('Yearly % Import from top 6 Countries',  fontsize=16, y=1.02) #Setting Main Title\ni = 0\nj = 0\nfor yer in Year:\n    tmp = India_imp_exp_data[India_imp_exp_data['Year'] == yer]\n    top_5 = tmp.sort_values(\"ImportValue\",ascending=False).iloc[:6, :]\n    temp = tmp.sort_values(\"ImportValue\",ascending=False).iloc[6:, :]\n    other_Valuesum = temp['ImportValue'].values.sum()\n    sixth = pd.DataFrame({'Country': \"Other\", 'Year': yer , 'ImportValue': other_Valuesum}, index=['6'])\n    top_6 = pd.concat([top_5,sixth], sort=True)\n    Final_Import = pd.concat([Final_Import,top_6], sort=True)\n    #top_6.plot.pie(y='ImportValue')\n    label_name = top_6['Country'].values.tolist()\n    sizes = top_6['ImportValue'].values\n    ax[i,j].pie(sizes,labels=label_name, autopct='%1.1f%%',shadow=True, startangle=90,wedgeprops = {'linewidth': 8}, counterclock = False, labeldistance = 1.2)\n    ax[i,j].axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n    ax[i,j].title.set_text(yer)\n    j = j + 1\n    if j > 2:\n        i = i + 1\n        j = 0\nplt.show() \n#Final_Import.drop(['ExportValue'], axis=1, inplace=True)\n","868d8f65":"#Pie Chart\n# Ploting top 6 countries to which India Exported Year on Year\n\nYear = India_imp_exp_data['Year'].unique()\ntop_6 = pd.DataFrame(columns=India_imp_exp_data.columns)\nFinal_Export = pd.DataFrame(columns=India_imp_exp_data.columns)\nfig, ax = plt.subplots(3,3, constrained_layout=True)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(18.5, 10.5)     #Setting Figure Size\nfig.suptitle('Yearly % Export to top 6 Countries', fontsize=16, y=1.02) #Setting Main Title\ni = 0\nj = 0\nfor yer in Year:\n    tmp = India_imp_exp_data[India_imp_exp_data['Year'] == yer]\n    top_5 = tmp.sort_values(\"ExportValue\",ascending=False).iloc[:6, :]\n    temp = tmp.sort_values(\"ExportValue\",ascending=False).iloc[6:, :]\n    other_Valuesum = temp['ExportValue'].values.sum()\n    sixth = pd.DataFrame({'Country': \"Other\", 'Year': yer , 'ExportValue': other_Valuesum}, index=['6'])\n    top_6 = pd.concat([top_5,sixth], sort=True)\n    Final_Export = pd.concat([Final_Export,top_6], sort = True)\n    #top_6.plot.pie(y='ImportValue')\n    label_name = top_6['Country'].values.tolist()\n    sizes = top_6['ExportValue'].values\n    ax[i,j].pie(sizes,labels=label_name, autopct='%1.1f%%',shadow=True, startangle=90,wedgeprops = {'linewidth': 8}, counterclock = False, labeldistance = 1.2)\n    ax[i,j].axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n    ax[i,j].title.set_text(yer)\n    j = j + 1\n    if j > 2:\n        i = i + 1\n        j = 0\nplt.show()\n#Final_Export.drop(['ImportValue'], axis=1, inplace=True)   \n    \n\n","1412098d":"def top_x_import_in_year(no_of_country, year):\n    data = India_imp_exp_data[India_imp_exp_data['Year'] == year ].sort_values(\"ImportValue\", ascending=False).iloc[:no_of_country, [0,2]].values\n    return pd.DataFrame({'Country' : data[:, 0], 'ImportValue' : data[:, 1] })\n \nfig, ax = plt.subplots(3,3)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(18.5, 24.5)     #Setting Figure Size\nfig.suptitle('Yearly Import from top 10 Countries '  , fontsize=16, y=1.02) #Setting Main Title\ni = 0\nj = 0 \nfor Year in India_imp_exp_data['Year'].unique():\n    df = top_x_import_in_year(10, Year)\n    Country = df['Country'].values\n    Import = df['ImportValue'].values\n    Index = np.arange(len(Import))\n    yr = Year\n    ax[i,j].bar(Index, Import)\n    ax[i,j].title.set_text(yr)\n    ax[i,j].set_xlabel('Country', fontsize=10)\n    ax[i,j].set_xticks(Index)\n    ax[i,j].set_xticklabels(Country,fontsize=10, rotation=30)\n    ax[i,j].set_ylabel('Import Value', fontsize=10)\n    j = j + 1\n    if j > 2:\n        i = i + 1\n        j = 0\n    \n#fig.delaxes(ax[4, 1]) \nplt.tight_layout()\nplt.show()","8a8a91fd":"def top_x_export_in_year(no_of_country, year):\n    data = India_imp_exp_data[India_imp_exp_data['Year'] == year ].sort_values(\"ExportValue\", ascending=False).iloc[:no_of_country, [0,3]].values\n    return pd.DataFrame({'Country' : data[:, 0], 'ExportValue' : data[:, 1] })\n \nfig, ax = plt.subplots(3,3)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(18.5, 24.5)     #Setting Figure Size\nfig.suptitle('Yearly Export to top 10 Countries '  , fontsize=16, y=1.02) #Setting Main Title\ni = 0\nj = 0 \nfor Year in India_imp_exp_data['Year'].unique():\n    df = top_x_export_in_year(10, Year)\n    Country = df['Country'].values\n    Export = df['ExportValue'].values\n    Index = np.arange(len(Import))\n    yr = Year\n    ax[i,j].bar(Index, Export)\n    ax[i,j].title.set_text(yr)\n    ax[i,j].set_xlabel('Country', fontsize=10)\n    ax[i,j].set_xticks(Index)\n    ax[i,j].set_xticklabels(Country,fontsize=10, rotation=30)\n    ax[i,j].set_ylabel('Export Value', fontsize=10)\n    j = j + 1\n    if j > 2:\n        i = i + 1\n        j = 0\n    \n#fig.delaxes(ax[4, 1]) \nplt.tight_layout()\nplt.show()\n\n    \n\n","fd51e6fa":"def top_x_import_in_year(no_of_country, year):\n    data = India_imp_exp_data[India_imp_exp_data['Year'] == year ].sort_values(\"ImportValue\", ascending=False).iloc[:no_of_country, [0,2]].values\n    return pd.DataFrame({'Year' : year, 'Country' : data[:, 0], 'ImportValue' : data[:, 1] })\ndef bottom_sum(indices, year):\n    index = np.arange(indices)\n    export_array = df[df.Year == year].ImportValue.values\n    return export_array[index].sum()\ndef color_selection(country):\n    color = ['tab:blue', 'tab:orange', 'tab:green', 'tab:red', 'tab:purple', 'tab:pink', 'tab:olive', 'tab:cyan', 'black', 'grey', 'lime','lightgray','teal' ]\n    Country = df['Country'].unique().tolist()\n    l = np.arange(len(Country))\n    index = Country.index(country)\n    return color[index]\ndf = pd.DataFrame(columns=India_imp_exp_data.columns)\n#df.drop('ExportValue', axis=1, inplace=True)\nfor year in India_imp_exp_data['Year'].unique():\n    df = pd.concat([df, top_x_import_in_year(5, year)], sort=True)\ncountries = df['Country'].unique()\nyear_df = pd.DataFrame(columns=df.columns)\nfor year in df['Year'].unique():\n    Country = []\n    Export = []\n    Year = []\n    temp = df[df['Year'] == year]\n    temp_cntry = countries\n    not_in_list = list(set(temp_cntry)^set(df[df['Year'] == year].Country))\n    for cntry in not_in_list:\n        Country.append(cntry)\n        Export.append(1.00)\n        Year.append(year)\n    year_df = pd.DataFrame({'Country': Country, 'ImportValue': Export, 'Year': Year})\n    df = pd.concat([df, year_df], axis=0, sort=True)\n    \ndf.sort_values(['Year','ImportValue'], ascending=[True, False], inplace=True)\nfig = plt.figure(figsize=(20, 12))\nindex = np.arange(len(df['Year'].unique()))\nwidth = 0.25\nfor year in df['Year'].unique():\n    for position in np.arange(len(df['Country'].unique().tolist())):\n        if position == 0:\n            plt.bar(index[df['Year'].unique().tolist().index(year)], df[df.Year == year].ImportValue.values[position], width, color=color_selection(df[df.Year == year].Country.values[position]))\n        if position > 0:\n            plt.bar(index[df['Year'].unique().tolist().index(year)], df[df.Year == year].ImportValue.values[position], width, bottom=bottom_sum(position, year), color=color_selection(df[df.Year == year].Country.values[position]))\n    \nplt.ylabel('Value')\nplt.title('Yearly Top 5  Importer')\nplt.xticks(index + width \/ 2, df['Year'].unique())     \nplt.legend(df['Country'].unique(),loc=2)\nplt.show()","36e36f41":"def top_x_export_in_year(no_of_country, year):\n    data = India_imp_exp_data[India_imp_exp_data['Year'] == year ].sort_values(\"ExportValue\", ascending=False).iloc[:no_of_country, [0,3]].values\n    return pd.DataFrame({'Year' : year, 'Country' : data[:, 0], 'ExportValue' : data[:, 1] })\ndef bottom_sum(indices, year):\n    index = np.arange(indices)\n    export_array = df[df.Year == year].ExportValue.values\n    return export_array[index].sum()\ndef color_selection(country):\n    color = ['tab:blue', 'tab:orange', 'tab:green', 'tab:red', 'tab:purple', 'tab:pink', 'tab:olive', 'tab:cyan']\n    Country = df['Country'].unique().tolist()\n    l = np.arange(len(Country))\n    index = Country.index(country)\n    return color[index]\n#top_x_export_in_year(5,2016)\ndf = pd.DataFrame(columns=India_imp_exp_data.columns)\n#df.drop('ImportValue', axis=1, inplace=True)\nfor year in India_imp_exp_data['Year'].unique():\n    df = pd.concat([df, top_x_export_in_year(5, year)], sort=True)\ncountries = df['Country'].unique()\nyear_df = pd.DataFrame(columns=df.columns)\nfor year in df['Year'].unique():\n    Country = []\n    Export = []\n    Year = []\n    temp = df[df['Year'] == year]\n    temp_cntry = countries\n    not_in_list = list(set(temp_cntry)^set(df[df['Year'] == year].Country))\n    for cntry in not_in_list:\n        Country.append(cntry)\n        Export.append(1.00)\n        Year.append(year)\n    year_df = pd.DataFrame({'Country': Country, 'ExportValue': Export, 'Year': Year})\n    df = pd.concat([df, year_df], axis=0, sort=True)\n    \ndf.sort_values(['Year','ExportValue'], ascending=[True, False], inplace=True)\nfig = plt.figure(figsize=(20, 10))\nindex = np.arange(len(df['Year'].unique()))\nwidth = 0.25\nfor year in df['Year'].unique():\n    for position in np.arange(len(df['Country'].unique().tolist())):\n        if position == 0:\n            plt.bar(index[df['Year'].unique().tolist().index(year)], df[df.Year == year].ExportValue.values[position], width, color=color_selection(df[df.Year == year].Country.values[position]))\n        if position > 0:\n            plt.bar(index[df['Year'].unique().tolist().index(year)], df[df.Year == year].ExportValue.values[position], width, bottom=bottom_sum(position, year), color=color_selection(df[df.Year == year].Country.values[position]))\n    \nplt.ylabel('Value')\nplt.title('Yearly Top 5  Exporter')\nplt.xticks(index + width \/ 2, df['Year'].unique())     \nplt.legend(df['Country'].unique(),loc=2)\nplt.show()","b7ee8089":"#Generating Import Commodity wise data\nImport_list = []\ncommodity_list = []\nyear_list = []\nfor cmdty in Import_data['Commodity'].unique():\n    for year in Import_data['year'].unique():\n        Import_value = Import_data[(Import_data['Commodity'] == cmdty) & (Import_data['year'] == year)].value.sum()\n        commodity_list.append(cmdty)\n        year_list.append(year)\n        Import_list.append(Import_value)\nImport_Commodity = pd.DataFrame({'Year': year_list, 'Commodity' : commodity_list, 'Import' : Import_list})\nImport_Commodity.sort_values([ \"Commodity\", \"Year\"], inplace=True)\nImport_Commodity.head()","19195374":"#Generating Import Commodity wise data\nExport_list = []\ncommodity_list = []\nyear_list = []\nfor cmdty in Export_data['Commodity'].unique():\n    for year in Export_data['year'].unique():\n        Export_value = Export_data[(Export_data['Commodity'] == cmdty) & (Export_data['year'] == year)].value.sum()\n        commodity_list.append(cmdty)\n        year_list.append(year)\n        Export_list.append(Export_value)\nExport_commodity = pd.DataFrame({'Year': year_list, 'Commodity' : commodity_list, 'Export' : Export_list})\nExport_commodity.sort_values([ \"Commodity\", \"Year\"], inplace=True)\nExport_commodity.head()","9b32aa2b":"#Merging Import and Export data into a common dataframe\nImport_Commodity.set_index('Commodity')\nExport_commodity.set_index('Commodity')\n\nImp_Exp_Commodity_data = pd.merge(Import_Commodity, Export_commodity, how='outer')","c0af6675":"Imp_Exp_Commodity_data.head()","33006b81":"yearly_top10_import = pd.DataFrame(columns=Imp_Exp_Commodity_data.columns)\nfor year in Imp_Exp_Commodity_data['Year'].unique():\n    temp = Imp_Exp_Commodity_data[Imp_Exp_Commodity_data['Year'] == year]\n    top_10_import = temp.sort_values('Import', ascending=False).iloc[:10, :]\n    yearly_top10_import = pd.concat([yearly_top10_import, top_10_import])\n\n","80536080":"def top_10_commodity_in_year( year):\n    return yearly_top10_import[yearly_top10_import['Year'] == year]\n\nfig, ax = plt.subplots(9,1)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(9.5, 50.5)     #Setting Figure Size\nfig.suptitle('Top 10 Commodiities Imported Yearly'  , fontsize=16) #Setting Main Title\nj = 0 \nfor Year in yearly_top10_import['Year'].unique():\n    df = top_10_commodity_in_year(Year)\n    Commodity = df['Commodity'].values\n    Import = df['Import'].values\n    Index = np.arange(len(Import))\n    yr = Year\n    ax[j].barh(Index, Import)\n    ax[j].title.set_text(yr)\n    ax[j].set_ylabel('Commodity', fontsize=10)\n    ax[j].set_yticks(Index)\n    ax[j].set_yticklabels(Commodity,fontsize=10)\n    j = j + 1\nplt.show()","84d438aa":"yearly_top10_export = pd.DataFrame(columns=Imp_Exp_Commodity_data.columns)\nfor year in Imp_Exp_Commodity_data['Year'].unique():\n    temp = Imp_Exp_Commodity_data[Imp_Exp_Commodity_data['Year'] == year]\n    top_10_export = temp.sort_values('Import', ascending=False).iloc[:10, :]\n    yearly_top10_export = pd.concat([yearly_top10_export, top_10_export])","fb344002":"def top_10_commodity_in_year( year):\n    return yearly_top10_export[yearly_top10_export['Year'] == year]\n\nfig, ax = plt.subplots(9,1)   #Defining Figure 3X3 Subplot\nfig.set_size_inches(9.5, 50.5)     #Setting Figure Size\nfig.suptitle('Top 10 Commodiities Exported Yearly'  , fontsize=16) #Setting Main Title\nj = 0 \nfor Year in yearly_top10_import['Year'].unique():\n    df = top_10_commodity_in_year(Year)\n    Commodity = df['Commodity'].values\n    Export = df['Export'].values\n    Index = np.arange(len(Export))\n    yr = Year\n    ax[j].barh(Index, Export)\n    ax[j].title.set_text(yr)\n    ax[j].set_ylabel('Commodity', fontsize=10)\n    ax[j].set_yticks(Index)\n    ax[j].set_yticklabels(Commodity,fontsize=10)\n    j = j + 1\nplt.show()","bee3433f":"#Data Only for 2018\nhscode = [27, 71, 84]\nFinal = pd.DataFrame(columns=['HSCode', 'Commodity', 'Country', 'Import', 'Export'])\nfor hs in hscode:\n    I_temp = Import_data[(Import_data['HSCode'] == hs) & (Import_data['year'] == 2018)].sort_values(\"value\", ascending=False).head(10)\n    I_temp = I_temp[['HSCode', 'Commodity' , 'country', 'value']]\n    I_temp.columns = ['HSCode', 'Commodity', 'Country', 'Import']\n    I_temp.set_index('Country')\n    E_temp = Export_data[(Export_data['HSCode'] == hs) & (Export_data['year'] == 2018)].sort_values(\"value\", ascending=False).head(10)\n    E_temp = E_temp[['HSCode' , 'Commodity','country', 'value']]\n    E_temp.columns = ['HSCode', 'Commodity', 'Country', 'Export']\n    E_temp.set_index('Country')\n    data_temp = pd.merge(I_temp, E_temp, how='outer')\n    Final = pd.concat([Final , data_temp])\n    \nFinal.fillna(0, inplace=True)\nFinal[(Final['Import'] > 0) & (Final['Export'] > 0)]\n","4f9a488b":"country = ['CHINA P RP', 'U S A']\nTop_2= pd.DataFrame(columns=['HSCode', 'Commodity', 'Country', 'Import', 'Export'])\nfor cntry in country:\n    I_temp = Import_data[(Import_data['country'] == cntry ) & (Import_data['year'] == 2018) \n                         & (Import_data['value'] >  500)].sort_values('value', ascending=False)\n    I_temp = I_temp[['HSCode', 'Commodity' , 'country', 'value']]\n    I_temp.columns = ['HSCode', 'Commodity', 'Country', 'Import']\n    I_temp.set_index('Country')\n    E_temp = Export_data[(Export_data['country'] == cntry ) & (Export_data['year'] == 2018) \n                         & (Export_data['value'] >  300)].sort_values('value', ascending=False)\n    E_temp = E_temp[['HSCode' , 'Commodity','country', 'value']]\n    E_temp.columns = ['HSCode', 'Commodity', 'Country', 'Export']\n    E_temp.set_index('Country')\n    data_temp = pd.merge(I_temp, E_temp, how='outer')\n    Top_2 = pd.concat([Top_2 , data_temp])\n    \nTop_2.fillna(0, inplace=True)\nTop_2\n#Final[(Final['Import'] > 0) & (Final['Export'] > 0)]","5e6b7cb3":"# Yearly Top 10 Exported Commodities","0a323b9a":"# Year Wise Data Analysis","95646528":"Minerals Fuels, Minerals Oils ; Natural or Cultured Pearls ; Nuclear Reactor are top 3 products in Import and Export list, lets analyse from where these are imported and to where they are exported\nHS Code for these are 27, 71 and 84","cc20b0a4":"Creating a dataset with total import and export for different countries in different years","2189feda":"counting Null values for each country in the above list along with median and total no of records for that country","d73091bb":"From the above table it can be infered that we are importing and exporting these 3 commodities to same country that too having huge value\nIt might be possible that we are importing\/exporting raw commodity and exporting\/importing processed commodity\n","88de56ec":"From the above graph it can be seen that over the years the value of import from other top 5 countries has either decreased or remained const while that OF china has continuously increased. ","5065b8c9":"A toatal of 137022 entries in Import Data","a6b6f60f":"counting Null values for each country in the above list along with median and total no of records for that country","c7115f9a":"From the above table it can be seen that, some of them has high median value and some have almost similar count of total values and that of null values and thus we will replace the null values of a country with median of Commodities for that country and for rest  we can replace null values median of their country","ca94de3b":"From the above table it can be infered:\n* China\n    * For multiple commodities we only import and export minimal or none\n    * The commodities that we export are in small amount and thus have a hude trade deficit with china\n\n* USA\n    * USA import multiple commodities from us and export a very few (But the few commodities that it export has high value)\n    * Overall it seems that we mentain a trade surplus with USA","83e578cc":"Merging import and export data into a common datafram","3ed6e307":"# Yearly Top 10 Imported Commodities","384a5270":"From above values It can be observed that the median of each country is very small and we can replace null values with these median for each country\nHowever we can check the countries that have median above 4.9","86749e49":"From the above two graphs it can be infered that:\n* Import\n    * China is the top most country from which India import from 2010 and still the value import is rising\n    * We can also see the import from other countries is decreasing and we are heavily relying on china for our consuption, and this is not a good sign \n\n* Export\n    * Export to USA is continiously rising whereas export to UAE is falling, these two countries are also our top 2 exporting countries\n    * There was a sligh dip in Export to China in 2015 and 2016, however it is again rising\n    \n* Trade Deficit\n    * Trade Deficit with china is increasing and that is not a good sign\n    * Besides china, deficit with Saudi Arabia and Switzeraaland is also very high","4f1f248d":"It can be seen from above graphs over the years for Import and export that top 6 importing and exporting countries covers almost 40% of import and export resp.","b1cfd093":"There are 18002 entries that are duplicate hence removing them","5725cedd":"There is an extry with name Unspecified, deoping the same","0d7356af":"We will replace the null values of a country with median of Commodities for that country and for rest  we can replace null values median of their country\n","5cf83ba7":"**EDA For Export Dataset**","460235b9":"**EDA on Import Data**","53ae83ec":"Import - Export Data Visualization","9684dc22":"**Observation from stats**\n\n* Since 50% of observation under value are below 0.38 thus it can be infered that their are many coomodities that India Import in very low ammount from various countries... These commodities can also be very cheap\n* Since Only 25% of observations are above 4.9 and the max observation value is laso very huge so we can say that some items are very expensive\/Or our consuption for these are very high\n    ","913bf26d":"From above values It can be observed that the median of each country is very small and we can replace null values with these median for each country\nHowever we can check the countries that have median above 10","c4185ae4":"From the above two plots it can be clearly seen that their was a slight dip in Import, Export and Deficit in years 2015 and 2016 and are again Increasing from then\nThe major reason for this dip can be assumed to be the drop in crude oil prices in those years and after that they again started rising.\nWe will be verifing this assumption later on when we will be performing commodity wise analysis","b5275dc4":"**Observation from stats**\n\n* Since 50% of observation under value are below 0.36 thus it can be infered that their are many coomodities that India Export in very low ammount to various countries... These commodities can also be very cheap\n* Since Only 25% of observations are above 3.7 and the max observation value is also very huge so we can say that some items are very expensive\n","e3acf4f3":"A toatal of 93095 entries in Import Data","a3b71989":"From the above graph it can be seen that  USA and UAE captures 50% market of top 5 countries\nAmong the top 5 the export to USA is only increasing for rest it is either constant or decreasing\nFrom above two points it can be infered that since the total export of India is rising and so this rise is due to \n* Increase of export to USA \n* Increase in export to other countries to which we either not exported or exported very little\n","50e98321":"From above graphs it can be visualized that the top 5 products that we import are also the onces that we export","6c7ec93d":"**USA and China are two countries which are in the list of top importers as well as top exporters, lets analyze what we import and export from them**","c8251d12":"**Importing the Libraries**","2110c727":"**Loading Data into Pandas Dataframe**","1b926f0a":"# Country Wise Analysis","56e586de":"we have no info for these as they didn't got covered in step 1 because no category specific info is present for then hence droping them","77052895":"# Data Cleaning Finished","e66eb9f0":"If we see the bar graph from 2014 - 2018, we observer that the top 5 countries to which we export are same only their position changes\nBut the good thing is the presence of our neighours Bangladesh, Nepal, Vietnam, Srilanka in top 10 list, which shows the neighbour first policy of govt has started yielding fruits and their confidence in India is increasing and thus can be assumed that their dependence on china is decreasing which is good from point of geopolitics.","0cb4ce33":"**Import Dataset Cleanup**","3266a578":"# Commodity Wise Analysis","343fe5b5":"14038 null values found"}}