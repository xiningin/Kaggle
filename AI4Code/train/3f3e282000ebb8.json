{"cell_type":{"72aea21f":"code","5b06fb45":"code","09eba552":"code","a59c36cb":"code","ccd1784b":"code","ef27b3f4":"markdown"},"source":{"72aea21f":"import torch\nimport pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nimport torch.nn as nn\nfrom torch.utils.data import DataLoader, TensorDataset\nimport random\n\ndevice = 'cuda' if torch.cuda.is_available() else 'cpu'\nif device == 'cuda':\n  torch.cuda.manual_seed_all(777)\n\ntrain = pd.read_csv('..\/input\/predict-number-of-asthma-patient\/train_disease.csv', header=None, skiprows=1)\n\ntrain","5b06fb45":"\nxtrain = train.loc[:,[i for i in train.keys()[1:-1]]]\nytrain = train[train.keys()[-1]]\n\nscaler = preprocessing.MinMaxScaler()\nxtrain = np.array(xtrain)\nxtrain = scaler.fit_transform(xtrain) #\uc2a4\ucf00\uc77c \uc870\uc815\nxtrain = torch.FloatTensor(xtrain).to(device)\n\nytrain = np.array(ytrain)\nytrain = torch.FloatTensor(ytrain).view(-1,1).to(device)\n\nxtrain","09eba552":"#random seed \uc124\uc815\ntorch.manual_seed(1)\nrandom.seed(1)\n\ndataset = TensorDataset(xtrain, ytrain)\ndataloader = DataLoader(dataset, batch_size=16, shuffle=True)\n\nmodel = nn.Linear(4,1)\noptimizer = torch.optim.SGD(model.parameters(), lr=1e-4, momentum=0.9) #\uc635\ud2f0\ub9c8\uc774\uc800 SGD\nloss = nn.MSELoss().to(device)\n\nnb_epochs = 500\nfor epoch in range(nb_epochs + 1):\n  for batch_idx, samples in enumerate(dataloader):\n    x, y = samples\n\n    H = model(x)\n    cost = loss(H, y)\n\n    optimizer.zero_grad()\n    cost.backward()\n    optimizer.step()\n\n  if epoch%50 == 0:\n      print('Epoch {}  Cost {}'.format(epoch, cost.item()))\n\nprint('Learning Finished')","a59c36cb":"test = pd.read_csv('..\/input\/predict-number-of-asthma-patient\/test_disease.csv')\ntest['Data'] = test['Data'] % 10000 \/ 100\nxtest = test.loc[:,[i for i in test.keys()[1:]]]\nxtest = np.array(xtest)\nxtest = scaler.transform(xtest)\nxtest = torch.from_numpy(xtest).float().to(device)\n\nxtest","ccd1784b":"H = model(xtest)\n\nH = H.cpu().detach().numpy().reshape(-1,1)\n\nsubmit = pd.read_csv('..\/input\/predict-number-of-asthma-patient\/submission.csv')\n\nfor i in range(len(submit)):\n  submit['Expect'][i] = H[i].astype(int)\n\nsubmit.to_csv('sub.csv', index = None, header=True)\n\nsubmit","ef27b3f4":"baseline\uacfc \ub2e4\ub978 \uc810\n\n* \ub370\uc774\ud130 \uc2a4\ucf00\uc77c \uc870\uc815\n* \uc635\ud2f0\ub9c8\uc774\uc800 RMSprop\uc5d0\uc11c SGD\ub85c \ubcc0\uacbd\n* \ubbf8\ub2c8\ubc30\uce58\ud559\uc2b5\n\n[\uc720\ud29c\ube0c \ub9c1\ud06c](https:\/\/youtu.be\/rRAW3ORHP_U)"}}