{"cell_type":{"a355a90a":"code","5398df0a":"code","f681dfca":"code","7f202526":"code","960cb0c4":"code","a10a4afe":"code","ace5d298":"code","8411d2ca":"code","cd63ccbc":"code","bfac136e":"code","c90c8d23":"code","5b6b46e8":"code","12cb1d32":"code","7b7af1fa":"code","827a0ca3":"code","bf733791":"code","54894d52":"code","bc0c3902":"code","76c630dc":"code","2f7c3430":"code","eed6d569":"code","d6d289d1":"code","324cd32f":"code","b179a4de":"code","5f2b2eb5":"code","e10cd2d0":"code","16eb3494":"code","b415ed49":"code","5825c830":"code","b522903a":"markdown","3107dd6d":"markdown","be802d6c":"markdown","ba9aae83":"markdown"},"source":{"a355a90a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5398df0a":"import matplotlib.pyplot as plt\n","f681dfca":"# einfacher Graph\nfrom random import random\n\nx = np.arange(10)\n\ny = np.array([2*i  + random() for i in range(10)])\n\nplt.plot(x, y)\nplt.show()","7f202526":"# Scatter - Plot\nfrom random import random\n\nx = np.arange(10)\n\ny = np.array([2*i  + random() for i in range(10)])\n\nplt.scatter(x, y)\nplt.show()","960cb0c4":"# S\u00e4ulendiagramm\nfrom random import random\n\nx = np.arange(10)\n\ny = np.array([2*i  + random() for i in range(10)])\n\nplt.bar(x, y)\nplt.show()","a10a4afe":"# Histogramm\nfrom random import normalvariate\n\nx = [normalvariate(1, 0.2) for i in range(10000)]\n\nplt.hist(x)\nplt.show()","ace5d298":"# Laden des Datensatzes VORSICHT: Statt mit Kommata sind die Daten mit Semicolon getrennt\n\ndata = pd.read_csv('\/kaggle\/input\/cusersmarildownloadsearningcsv\/earning.csv', delimiter=\";\")\n\ndata.head()","8411d2ca":"# ein paar Informationen\n\ndata.info()","cd63ccbc":"# ein paar statistische Informationen\n\ndata.describe()","bfac136e":"data.head()","c90c8d23":"# Speichert die Jahre in der Variable x\n\nx = data.year","5b6b46e8":"# Speichert die Werte f\u00fcr\n\ny = data.femaleprofessionals","12cb1d32":"plt.plot(x,y)\nplt.show()","7b7af1fa":"plt.plot(x,y)\n\nplt.title(\"Stundenlohn von 2004 - 2017\")\nplt.xlabel(\"Jahre\")\nplt.ylabel(\"Stundenlohn\")\n\n\nplt.show()","827a0ca3":"x = data.year\ny1 = data.femaleprofessionals\ny2 = data.femalesmanagers\n\nplt.plot(x,y1, color=\"r\", label=\"Professionals (f)\")\nplt.plot(x, y2, color=\"k\", label=\"Managers (f)\")\n\nplt.title(\"Stundenlohn von 2004 - 2017\")\nplt.xlabel(\"Jahre\")\nplt.ylabel(\"Stundenlohn\")\nplt.legend()\n\n\nplt.show()","bf733791":"x = data.year\ny1 = data.malemanagers\ny2 = data.femalesmanagers\n\nplt.plot(x,y1, color=\"r\", label=\"Managers (m)\")\nplt.plot(x, y2, color=\"k\", label=\"Managers (f)\")\n\nplt.title(\"Stundenlohn von 2004 - 2017\")\nplt.xlabel(\"Jahre\")\nplt.ylabel(\"Stundenlohn\")\nplt.legend()\n\n\nplt.show()","54894d52":"x = data.year\ny1 = data.malemanagers\ny2 = data.femalesmanagers\n\nplt.bar(x+ 0.4, y2, color=\"k\", label=\"Managers (f)\", width=0.4)\nplt.bar(x,y1, color=\"r\", label=\"Managers (m)\", width=0.4)\n\n\nplt.title(\"Stundenlohn von 2004 - 2017\")\nplt.xlabel(\"Jahre\")\nplt.ylabel(\"Stundenlohn\")\nplt.legend()\n\n\nplt.show()","bc0c3902":"diff_managers = data.malemanagers - data.femalesmanagers\n\ndiff_managers","76c630dc":"plt.plot(x, diff_managers )\nplt.show()","2f7c3430":"diff_professionals = data.maleprofessionals - data.femaleprofessionals\ndiff_managers = data.malemanagers - data.femalesmanagers\n\nyear = data.year","eed6d569":"plt.plot(year, diff_professionals, label=\"Professionals\")\nplt.plot(year, diff_managers, label= \"Managers\")\n\nplt.title(\"Stundenlohndifferenz von 2004-2017\")\nplt.xlabel(\"Jahre\")\nplt.ylabel(\"Stundenlohndifferenz\")\nplt.legend()\n\nplt.show()","d6d289d1":"data.info()","324cd32f":"female = list(data.columns[2:10])\nmale = list(data.columns[11:19])\n","b179a4de":"diff = np.array([data[m] - data[f] for m, f in zip(male, female)])","5f2b2eb5":"diff.T[0]","e10cd2d0":"data.head()\n","16eb3494":"plt.bar(['managers',\n 'professionals',\n 'technicians',\n 'serviceworkers',\n 'clerical',\n 'workers',\n 'drivers',\n 'labourers'], diff.T[0] )\n\nplt.title(\"Jahr 2004\")\n\nplt.xticks(rotation=90)\nplt.show()","b415ed49":"summe = np.array([(data[m] + data[f])\/2 for m, f in zip(male, female)])\n\n","5825c830":"# Lohndifferenz 2017\n\ndiff_2017 = diff.T[-1]   # Lohndifferenz 2017 sortiert nach Beruf (absolute Wert)\nsumme_2017 = summe.T[-1] # Durchschnittslohn beider Gruppen f\u00fcr 2017\n\n\nberufe = ['managers',\n 'professionals',\n 'technicians',\n 'serviceworkers',\n 'clerical',\n 'workers',\n 'drivers',\n 'labourers']\n\n\n","b522903a":"# Aufgabe\n\nF\u00fcllt die Grafik mit den differenz der Professionals und versch\u00f6nert das ganze","3107dd6d":"# matplotlibbasics","be802d6c":"# Hausaufgabe \n\nWie sieht die prozentuale Lohndifferenz im Jahr 2017 aus und erstellt ein S\u00e4ulendiagramm (das ein wenig aufgeh\u00fcbscht)","ba9aae83":"# Aufgabe\n\nErstellt einen Graphen der Managern (m\u00e4nnlich und weiblich) "}}