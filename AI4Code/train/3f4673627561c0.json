{"cell_type":{"92a05458":"code","f0b742eb":"code","5132ee03":"code","5d020ddf":"code","0a166b19":"code","c1efc7ab":"code","4dec39ae":"code","67ad88d7":"code","f45a8c34":"code","b8f55106":"code","17661fa0":"code","b9b2211a":"code","2c4507cf":"code","f4f40e90":"code","33bc34ea":"code","b9fb494a":"code","dca4489a":"code","43d744f9":"code","dd4f0bf8":"code","bc46afb7":"code","5c02a356":"code","ba40eecf":"markdown"},"source":{"92a05458":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f0b742eb":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","5132ee03":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline\n","5d020ddf":"df = pd.read_csv('..\/input\/voicegender\/voice.csv')","0a166b19":"df.head(30)","c1efc7ab":"df.columns","4dec39ae":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\ndisplay(HTML(df.head(10).to_html()))","67ad88d7":"df.shape","f45a8c34":"df.describe()","b8f55106":"df['label'] = df['label'].map({\"male\":1, \"female\":0})","17661fa0":"y = df['label'].values\nX = df.drop(['label'], axis=1).values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","b9b2211a":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","2c4507cf":"model = Sequential()\nmodel.add(Dense(1, activation=\"sigmoid\"))","f4f40e90":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","33bc34ea":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=100, verbose=1)","b9fb494a":"y_ann = model.predict(X_test).flatten()","dca4489a":"for i in range(len(y_ann)):\n    if y_ann[i] > 0.5:\n        y_ann[i] = 1\n    else:\n        y_ann[i] = 0","43d744f9":"accuracy_score(y_test, y_ann)","dd4f0bf8":"confusion_matrix(y_test, y_ann)","bc46afb7":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()","5c02a356":"plot_scores(train)","ba40eecf":"# Deep Learning"}}