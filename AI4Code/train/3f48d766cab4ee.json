{"cell_type":{"415e206b":"code","e24481f2":"code","06b82f85":"code","a49dac3c":"code","2147eb3f":"code","219650be":"code","83cad979":"code","b67a197f":"code","8f62fe42":"code","41cd6935":"code","67aaa3af":"code","91be2a41":"code","e6168edd":"code","89036656":"code","9593a35a":"code","b1897902":"code","f9a51a8b":"code","27f3f23c":"code","a7421f99":"code","c3a5f215":"code","6e74e291":"code","4a56ac3b":"code","a3272da4":"code","e2d3fa50":"code","79f56b58":"code","26f4d58e":"code","7d0c3d30":"code","8e8fcb48":"code","6341e971":"code","c759c064":"code","98f287b2":"code","fee24815":"code","5f24121e":"code","6a5f4ef7":"code","4d41e08a":"code","505eed2e":"code","3d84bd38":"code","1c5ba01b":"code","96b934a4":"code","9524760c":"code","c3df17f0":"markdown","bff3360b":"markdown","25d68ca3":"markdown","d978ef07":"markdown","f0bca7f0":"markdown","ad2c3e06":"markdown","a93e1972":"markdown","1d5cdb46":"markdown","8bfa3c74":"markdown","157c2168":"markdown","ef8b842a":"markdown"},"source":{"415e206b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e24481f2":"# importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\n","06b82f85":"# reading data into the dataframe\ndf=pd.read_csv('\/kaggle\/input\/fish-market\/Fish.csv')\ndf.head()","a49dac3c":"# different types of species\ndf['Species'].value_counts().plot(kind='bar')","2147eb3f":"# checking the shape\ndf.shape","219650be":"# statistical properties\ndf.describe()","83cad979":"df.info()","b67a197f":"# visualizing the data using pandas profiling\nProfileReport(df).to_widgets()","8f62fe42":"# checking for zero values\ndf.all()","41cd6935":"df.loc[df.Weight==0]","67aaa3af":"def calc_mean(df,cols):\n    sum=0\n    for i in cols:\n        sum+=df[i]\n    return sum\/len(cols)\n    ","91be2a41":"cols=df.columns[2:]\ncols,len(cols)","e6168edd":"\ndf['mean']=df.apply(lambda x:calc_mean(x,cols),axis=1)\ndf.head()","89036656":"sorted_df=df.sort_values(by='mean',ascending=True)\nsorted_df.head()","9593a35a":"sorted_df.reset_index(drop=True,inplace=True)\nsorted_df.head()","b1897902":"sorted_df.loc[sorted_df['Weight']==0]","f9a51a8b":"sorted_df.iloc[30:42]","27f3f23c":"sorted_df.loc[sorted_df.Weight==0,'Weight']=110","a7421f99":"sorted_df.all()","c3a5f215":"sorted_df.head()","6e74e291":"def plot_hist_box(df,col):\n    plt.figure(figsize=(25,8))\n    plt.subplot(1,2,1)\n    plt.title(f'{col} Distribution plot')\n    sns.histplot(data=sorted_df,x=col,kde=True)\n    plt.axvline(mean_values[col],color='red')\n    \n    plt.subplot(1,2,2)\n    plt.title(f'box plot for {col}')\n    sns.boxplot(y=sorted_df[col])","4a56ac3b":"for col in sorted_df.columns[1:-1]:\n    plot_hist_box(sorted_df,col)","a3272da4":"# correlation matrix\nplt.figure(figsize=(15,8))\nsns.heatmap(sorted_df.corr(),annot=True)","e2d3fa50":"sorted_df.drop(['Length2','Length3'],axis=1,inplace=True)","79f56b58":"# mean was just introduced to help in inputation\nsorted_df.drop(['mean'],axis=1,inplace=True)","26f4d58e":"sorted_df.head()","7d0c3d30":"# standardize the  numerical features\nX=sorted_df.drop(['Weight','Species'],axis=1)\nX.head()","8e8fcb48":"from sklearn.preprocessing import RobustScaler\nrc=RobustScaler()\nX_=rc.fit_transform(X)","6341e971":"X_.shape[1]","c759c064":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvif=pd.DataFrame()\nvif['vif']=[variance_inflation_factor(X_,i) for i in range(X_.shape[1])]\nvif['features']=X.columns\nvif\n","98f287b2":"X1=pd.DataFrame(X_,columns=X.columns)\nX1.head()","fee24815":"X1['Species']=sorted_df['Species']\nX1.drop('Width',axis=1,inplace=True)\nX1.head()","5f24121e":"sns.pairplot(X1,height=4,aspect=1.5)","6a5f4ef7":"final_df=pd.get_dummies(X1,drop_first=True)\nfinal_df.head()","4d41e08a":"y=sorted_df['Weight']\ny[:5]","505eed2e":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(final_df,y,test_size=0.25)","3d84bd38":"len(X_train),len(X_test)","1c5ba01b":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(X_train,y_train)","96b934a4":"# train score\nmodel.score(X_train,y_train)","9524760c":"# test score\nmodel.score(X_test,y_test)","c3df17f0":"## 4.Variance Inflation Factor ","bff3360b":"**Inference:Model performs very good**","25d68ca3":"## 1. Importing Data","d978ef07":"## 2.Data Cleaning","f0bca7f0":"* inference:all features are positively related to the target (weight)\n*           length1,lenght2,length3 are multi-corelated among themselves,so to prevent data leakage,we need to drop two features from these three.\n*droping length2 and lenght3","ad2c3e06":"**inference:**Since vif of width is greater than 5 ,it says that it is highly correlated to other features,so we should drop it to prevent data leakage","a93e1972":"**inference:**features Length1,Length2,Length3,Height and Width are posivitely correlated to the target weight","1d5cdb46":"## 5.Encodeing Categorical Column","8bfa3c74":"## 6.Splitting data into train and test","157c2168":"there are no missing values","ef8b842a":"## 3.Visualizing the Data"}}