{"cell_type":{"2fcd67b9":"code","242576ee":"code","fc5eadb9":"code","81232723":"code","c2798339":"code","2c3974df":"code","d830dfc2":"code","03d5d5cb":"code","c172b5db":"code","597d2094":"code","9b62bd45":"code","04266c8d":"code","137203c2":"code","8838b104":"code","8b931135":"code","d441a43c":"code","93580906":"code","81fa58a1":"code","48f922be":"code","3da11ab5":"code","d7830db4":"code","cf273140":"code","a12ba442":"code","84c19110":"code","920f6bb2":"code","4355b2c0":"code","0cc868d2":"code","405c9cb6":"code","7b33b757":"code","73f7b800":"code","c948e0e5":"code","6680e85e":"code","5c1d1304":"code","3dbf2bcd":"code","6f683127":"code","c2f363e4":"code","2e999e5d":"code","d60bf229":"code","4e28aaa5":"code","fa1be66f":"markdown","16e320ea":"markdown","49686983":"markdown","91756a45":"markdown","2d82cc42":"markdown","31a09e84":"markdown","3997f06e":"markdown","17ddfcf1":"markdown","5e523531":"markdown","f6003c60":"markdown","324236ad":"markdown","6145e634":"markdown","672c9778":"markdown"},"source":{"2fcd67b9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\nimport random","242576ee":"activities = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv\")\ncalories = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv\")\nintensities = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv\")\nsleep = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/sleepDay_merged.csv\")\nweight = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/weightLogInfo_merged.csv\")","fc5eadb9":"activities.head()","81232723":"# converting type from object -to-> datetime\nactivities['ActivityDate'] = pd.to_datetime(activities['ActivityDate'], dayfirst = True)","c2798339":"activities = activities[['Id', 'TotalSteps', 'TotalDistance', 'SedentaryMinutes', 'Calories']]","2c3974df":"calories.head()","d830dfc2":"calories['ActivityDay'] = pd.to_datetime(calories['ActivityDay'], dayfirst = True)","03d5d5cb":"intensities.head()","c172b5db":"intensities['ActivityDay'] = pd.to_datetime(intensities['ActivityDay'], dayfirst = True)","597d2094":"sleep.head()","9b62bd45":"# we remove time od sleep since all rows have the same time (12:00:00 AM)\nsleep['SleepDay'] = pd.to_datetime(sleep['SleepDay'], dayfirst = True)\nsleep.head()","04266c8d":"weight.head()","137203c2":"# we keep only useful columns\nweight = weight[['Id', 'Date', 'WeightKg', 'BMI']]\nweight['Date'] = pd.to_datetime(weight['Date'], dayfirst = True, utc = True)\nweight.head()","8838b104":"# Number of participants in each dataset\n\nprint(\"Number of people tested for activities\" + \" is: \" + str(activities['Id'].nunique()))\nprint(\"Number of people tested for calories\" + \" is: \" + str(calories['Id'].nunique()))\nprint(\"Number of people tested for intensities\" + \" is: \" + str(intensities['Id'].nunique()))\nprint(\"Number of people tested for sleep\" + \" is: \" + str(sleep['Id'].nunique()))\nprint(\"Number of people tested for weight\" + \" is: \" + str(weight['Id'].nunique()))","8b931135":"activities[['TotalSteps', 'TotalDistance', 'SedentaryMinutes', 'Calories']].describe()","d441a43c":"# Since calories burnt by a human body through out the day cannot be 0, we need to remove those rows\nactivities[activities['Calories'] == 0]","93580906":"activities.drop(labels = [30, 653, 817, 879],axis = 0, inplace = True)\nactivities[['TotalSteps', 'TotalDistance', 'SedentaryMinutes', 'Calories']].describe()","81fa58a1":"# Similarly we remove other \nempty_rows = list(activities[activities['TotalSteps'] == 0].index) + list(activities[activities['TotalDistance'] == 0].index)\\\n                + list(activities[activities['SedentaryMinutes'] == 0].index)\nlen(empty_rows)","48f922be":"activities.drop(labels = empty_rows,axis = 0, inplace = True)\nactivities.describe()\n","3da11ab5":"# What percentage of Women do not burn enough calories\n\nmin_calories_burn = 2000\nnum_people_cal_burn = len(activities[activities['Calories'] < min_calories_burn])\ntotal_people = len(activities)\n\nprint(\"Percentage of Women that burn less than \" + str(min_calories_burn) + \" calories everyday = \" + str(round(num_people_cal_burn*100\/total_people, 2)))","d7830db4":"# What percentage of Women do not complete required number of steps each day\n\nmin_steps = 5000\nnum_people_lacking = len(activities[activities['TotalSteps'] < min_steps])\ntotal_people = len(activities)\n\nprint(\"Percentage of Women that do not complete \" + str(min_steps) + \" steps everyday = \" + str(round(num_people_lacking*100\/total_people, 2)))","cf273140":"# Converting id type: int -to-> str\nactivities['Id'] = activities['Id'].astype(str)\nactivities.dtypes","a12ba442":"# Converting id type: int -to-> str\ncalories['Id'] = calories['Id'].astype(str)\n\n# remove rows with calories = 0\nempty_rows = list(calories[calories['Calories'] == 0].index)\ncalories.drop(labels = empty_rows,axis = 0, inplace = True)\n","84c19110":"calories.describe()","920f6bb2":"# Converting id type: int -to-> str\nsleep['Id'] = sleep['Id'].astype(str)\n\nsleep.describe()","4355b2c0":"# Converting id type: int -to-> str\nweight['Id'] = weight['Id'].astype(str)\nweight.describe()","0cc868d2":"weight['Month'] = weight['Date'].apply(lambda x: x.month)","405c9cb6":"weight.head()","7b33b757":"# How BMI of the participants have changed over a period of time (in months)\n\npeople_wt = list(weight['Id'].unique())\n\nfor person in people_wt:\n    df = weight[weight['Id'] == person]\n    sns.lineplot(x='Month', y = 'BMI', data = df)\n    plt.ylim([20,30])","73f7b800":"# Comparison between total distance travelled and calories burnt\n\nsns.set_theme(color_codes = True)\nx = activities['Calories']\ny = activities['TotalDistance']\nplt.figure(figsize = (12, 8))\nsns.regplot(x = x, y=y, data=activities, marker = \"+\")\nplt.title(\"Calories burnt vs. Total distance travelled\")\nplt.show()","c948e0e5":"activities.head()","6680e85e":"# Adding a column called weekday\n\nactivities = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv\")\nactivities['ActivityDate'] = pd.to_datetime(activities['ActivityDate'], dayfirst = True)\n\ndef weekday_name(x):\n    daynames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n    return daynames[x]\n\nactivities[\"Weekday\"] = activities[\"ActivityDate\"].map(lambda x: x.weekday()).map(lambda x: weekday_name(x))","5c1d1304":"steps_by_weekday = activities.groupby(['Weekday'])['TotalSteps'].mean()\nsteps_by_weekday = steps_by_weekday[['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']]\nsteps_by_weekday","3dbf2bcd":"\nplt.figure(figsize = (12, 8))\nsns.lineplot(x = steps_by_weekday.index, y = steps_by_weekday.values, data = steps_by_weekday)\nplt.ylabel(\"Average No. of steps taken\")\nplt.title(\"Steps taken by weekday\", fontsize = 16)","6f683127":"# Finding the No. of times users logged in app across the week\n\nnum_weekday = activities.groupby([\"Weekday\"])[\"Weekday\"].count()\nnum_weekday = num_weekday[['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']]\n\nplt.figure(figsize = (10, 7))\nsns.barplot(x =num_weekday.index, y = num_weekday.values, color = 'teal')\nplt.ylabel(\"Frequency\")\nplt.title(\"No. of times users logged in app across the week\", fontsize = 16)","c2f363e4":"activemins = activities.groupby([\"Weekday\"])[['VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes', 'SedentaryMinutes']].sum()\nactivemins = activemins.reindex(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\nactivemins","2e999e5d":"fig, axes = plt.subplots(3,2, figsize = (14, 16))\n\nfor i, (idx, row) in enumerate(activemins[:-1].iterrows()):\n    \n    ax = axes[i\/\/2, i%2]\n    colors = [\"lightcoral\", \"yellowgreen\", \"lightskyblue\", \"darkorange\"]\n    explode = [0, 0, 0, 0.1]\n    row = row[row.gt(row.sum() * .01)]\n    ax.pie(row, colors = colors, autopct = \"%1.1f%%\", wedgeprops = {\"edgecolor\":\"black\"})\n    ax.set_title(idx)\n    ax.legend(row.index)\n    \nfig.subplots_adjust(wspace = 0.1)","d60bf229":"activities[\"Total_hours\"] = (activities[\"VeryActiveMinutes\"] + activities[\"FairlyActiveMinutes\"] + \nactivities[\"LightlyActiveMinutes\"] + activities[\"SedentaryMinutes\"]) \/ 60","4e28aaa5":"plt.style.use(\"default\")\nplt.figure(figsize=(8,6)) # Specify size of the chart\nplt.scatter(activities.Total_hours, activities.Calories, \n            alpha = 0.8, c = activities.Calories, \n            cmap = \"Spectral\")\n\n# adding annotations and visuals\nmedian_calories = 2303\nmedian_hours = 20\nmedian_sedentary = 991 \/ 60\n\nplt.colorbar(orientation = \"vertical\")\nplt.axvline(median_hours, color = \"Blue\", label = \"Median steps\")\nplt.axvline(median_sedentary, color = \"Purple\", label = \"Median sedentary\")\nplt.axhline(median_calories, color = \"Red\", label = \"Median hours\")\nplt.xlabel(\"Hours logged\")\nplt.ylabel(\"Calories burned\")\nplt.title(\"Calories burned for every hour logged\")\nplt.legend()\nplt.grid(True)\nplt.show()","fa1be66f":"### Data Exploration ","16e320ea":"### Data cleaning ","49686983":"# Bellabeat: How Can A Wellness Technology Company Play It Smart?\n\n## STEP 1: ASK\n\n**Background**\nBellabeat is a high-tech manufacturer of beautifully-designed health-focused smart products for women since 2013. Inspiring and empowering women with knowledge about their own health and habits, Bellabeat has grown rapidly and quickly positioned itself as a tech-driven wellness company for females.\n\nThe co-founder and Chief Creative Officer, Ur\u0161ka Sr\u0161en is confident that an analysis of non-Bellebeat consumer data (ie. FitBit fitness tracker usage data) would reveal more opportunities for growth. \n\n**Business Task**\nAnalyze FitBit Fitness Tracker Data to gain insights into how consumers are using the FitBit app and discover trends and insights for Bellabeat marketing strategy.\n\n**Business Objectives:**\n\n* What are the trends identified?\n* How could these trends apply to Bellabeat customers?\n* How could these trends help influence Bellabeat marketing strategy?\n\n**Key Stakeholders:**\n* Ur\u0161ka Sr\u0161en: Bellabeat\u2019s cofounder and Chief Creative Officer\n* Sando Mur: Mathematician, Bellabeat\u2019s cofounder and key member of the Bellabeat executive team\n* Bellabeat marketing analytics team: A team of data analysts guiding Bellabeat's marketing strategy.","91756a45":"### Summary of  some interesting descriptive statistics:\n\n* Average sedentary time = 16 hours. This definitely need to be reduced\n* On average, participants sleep only once a day for 7 hours (appropriate)\n* Almost 40% women do not burn enough calories everyday (less than 2000 calories)\n* Almost 68% women do not lead an active lifestyle (10000 steps each day is considered an active lifestyle. <br>\n  This is recommended by the Center of Disease Control and prevention (CDC) )\n* Almost 32% women lead a sedentary lifestyle (less than 5000 steps each day)","2d82cc42":"## Summarizing our Analysis ","31a09e84":"In the final step, we will be delivering our insights and providing recommendations based on our analysis.\n\nHere, we revisit our business questions and share with you our high-level business recommendations.\n\n1. **What are the trends identified?**\n\nMajority of the time (~ 80%) the users are using the FitBit app while doing sedentary activities and not for tracking their health habits.\n\nUsers prefer to track their activities during weekdays as compared to weekends - perhaps because they spend more time outside on weekdays and stay in on weekends.\n\n* Almost 40% women do not burn enough calories everyday (less than 2000 calories)\n* Almost 68% women do not lead an active lifestyle (10000 steps each day is considered an active lifestyle. <br>\n  This is recommended by the Center of Disease Control and prevention (CDC) )\n* Almost 32% women lead a sedentary lifestyle (less than 5000 steps each day)\n\n2. **How could these trends apply to Bellabeat customers?**\n\nThe company should focus on developing and including features for their app that helps their users to stay motivated\nto remain fit and active when they are the lowest on motivation.<br>\nThis can be done using a reward points based system, where a person gets rewarded for burning more calories, remaining consistent in their workout routine for the longest number of days etc.\n\n\n3. **How could these trends help influence Bellabeat marketing strategy?**\n\nBellabeat marketing team can encourage users by educating and equipping them with knowledge about their own fitness and routine activity habits, fitness benefits, suggest different types of exercise (ie. simple 10 minutes exercise on weekday, especially Monday and a more intense exercise on weekends). The app can make the users aware of their calory intake and burnt rate information to be vigilant about their habits.","3997f06e":"* Above is a breakdown of how much activity do people do by percentage time <br>of the day\n  throughout the week.\n  <br><br>\n* Saturday has the least sedentary time while Monday has the most sendentary time.\n<br><br>\n* Similarly Saturday has the highest fairly active minutes (people <br>spending the time to roam around)\n  while Monday has the least.","17ddfcf1":"### Importing datasets ","5e523531":"**From the scatter plot, we discovered that:**\n\nIt is a positive correlation.\n\nWe observed that intensity of calories burned increase when users are at the range of > 0 to 15,000 steps with calories burn rate cooling down from 15,000 steps onwards.\n\n**Noted a few outliers:**\n\nZero steps with zero to minimal calories burned.\n1 observation of > 35,000 steps with < 3,000 calories burned.\nDeduced that outliers could be due to natural variation of data, change in user's usage or errors in data collection (ie. miscalculations, data contamination or human error). ","f6003c60":"* People use the fitness app, least on Monday and mid-week.\n* Providing extra notifications on these days may motivate the users to be active.","324236ad":"### Data Analysis and Vizualization","6145e634":"### What the data says?\n* Participants walked the highest number of steps on Saturday while the least number of<br> \n  steps were walked on Monday followed by Friday, Tuesday and Sunday.<br>\n\n### How can we use this data?\n* We can add a feature in the Bellabeat app that notifies the users to walk more on the less active <br>\n  days in advance while also quoting the highest number of steps they took on a day (mostly Saturday) **to motivate them**.","672c9778":"## STEP 2: PREPARE\n\n**Information on Data Source:**<br>\nThe data is publicly available on Kaggle: FitBit Fitness Tracker Data and stored in 18 csv files.\nGenerated by respondents from a distributed survey via Amazon Mechanical Turk between 12 March 2016 to 12 May 2016.\n30 FitBit users who consented to the submission of personal tracker data.\nData collected includes:<br>\n(1) physical activity recorded in minutes, <br>\n(2) heart rate, <br>\n(3) sleep monitoring,<br> \n(4) daily activity and <br>\n(5) steps.<br>\n\n**Limitations of Data Set:**<br>\nData collected from year 2016. Users' daily activity, fitness and sleeping habits, <br>diet and food consumption may have changed since then, hence data may not be timely or relevant.\n<br><br>\nSample size of 30 female FitBit users is not representative of the entire female population.\nAs data is collected in a survey, hence unable to ascertain the integrity or accuracy of data.\n\n**Is Data ROCCC?**<br>\nA good data source is ROCCC which stands for Reliable, Original, Comprehensive, Current, and Cited.<br>\n\n1) Reliable - LOW - Not reliable as it only has 30 respondents<br>\n2) Original - LOW - Third party provider (Amazon Mechanical Turk)<br>\n3) Comprehensive - MED - Parameters match most of Bellabeat's products' parameters<br>\n4) Current - LOW - Data is 5 years old and is not relevant<br>\n5) Cited - LOW - Data collected from third party, hence unknown<br>\n6) Overall, the dataset is considered bad quality data and it is not recommended <br>to produce business recommendations based    on this data.<br>"}}