{"cell_type":{"95949b96":"code","5e1066a8":"code","2a8a048c":"code","3e37e3b1":"code","4c1c5b73":"code","22ffd00a":"code","bc99d094":"code","cec7a317":"code","4866384c":"code","5834e695":"code","0db7d8a1":"code","6beba664":"code","8789ffc1":"code","cfe69d68":"markdown","2649ed3e":"markdown","3adc04cd":"markdown","78cd6e2e":"markdown","419e880b":"markdown","a8908196":"markdown","6e946111":"markdown","1dec5e5c":"markdown","d54da1d2":"markdown","e3525723":"markdown","4358a934":"markdown"},"source":{"95949b96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e1066a8":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\ndf.head()","2a8a048c":"print('There are ',len(df.App.unique()),'unique apps')","3e37e3b1":"df.loc[10472, :] = df.loc[10472, :].shift(1) \ndf.iloc[10472,0] = df.iloc[10472,1]\ndf.iloc[10472,1] = 'LIFESTYLE'\n\ndf.Installs = df.loc[:, 'Installs'].map(lambda x: x.rstrip('+'))\ndf.Installs = df['Installs'].replace(',','', regex=True)\ndf.Installs = df['Installs'].astype(int)\n\ndf.Price = df.loc[:, 'Price'].map(lambda x: x.lstrip('$'))\ndf.Price = df['Price'].astype(float)\n\ndf.Size = df['Size'].str.replace('M','')\ndf.Size = pd.to_numeric(df['Size'], errors= 'coerce')\n\ndf.Type = df['Type'].str.replace('0','Free')\n\n#print(df['Rating'].info())\ndf.Rating = df.Rating.astype(float)\n\n","4c1c5b73":"total_downloads = df.Installs.sum()\nprint('Total number of downloads of all applications: ' + str(total_downloads) + '+')","22ffd00a":"df['Total_money'] = df['Installs'] * df['Price']\nprint('Total money spent for all paid applications: $' + str(df.Total_money.sum()))","bc99d094":"print('Percentages of number of installs by category')\ndata_category = df.groupby('Category').sum()['Installs'].sort_values(ascending= False)\n#(100. * data_category \/ data_category.sum()).round(0)\nlabels = data_category.index.values\nfig, ax = plt.subplots(figsize = (15,8))\nsns.barplot(data_category, labels, ax= ax)","cec7a317":"downloads = df.groupby('Category').sum().Installs.sort_values(ascending= False)\nlabels = downloads.index.values\ndownloads.plot.pie( y = 'Category', subplots = True, autopct='%.1f%%', \n startangle=90, shadow=False, labels=labels, legend = False, fontsize=15, figsize=(15,15))","4866384c":"df_install_percent = df.groupby(['Category'])['Installs'].sum()\nfor category in df_install_percent.index:\n    df_ratio_app_by_cat = pd.DataFrame(columns = ['App', 'Installs'])\n    df_ratio_app_by_cat = df[df['Category'] == category][['App', 'Installs']]\n    df_ratio_app_by_cat['Install_ratio'] = df_ratio_app_by_cat['Installs'] \/ df_ratio_app_by_cat['Installs'].sum() * 100\n    print('Percentages of number of Installs of apps in category ' + str(category))\n    print(df_ratio_app_by_cat[['App','Install_ratio']])","5834e695":"for category in df_install_percent.index:\n    df_ratio_app_by_cat = pd.DataFrame(columns = ['App', 'Installs'])\n    df_ratio_app_by_cat = df[df['Category'] == category][['App', 'Installs']]\n    df_ratio_app_by_cat['Install_ratio'] = df_ratio_app_by_cat['Installs'] \/ df_ratio_app_by_cat['Installs'].sum() * 100\n    largest5 = df_ratio_app_by_cat.nlargest(5, \"Install_ratio\") \n    print(category)\n    print(largest5)\n    print(\"-\"*80)","0db7d8a1":"print(\"Average rating is \" + str(df[\"Rating\"].mean()))","6beba664":"df['Rating'].plot.hist(bins=20, alpha = 0.8)\n","8789ffc1":"print('Average ratings of apps by categories')\ndf_cat_mean_rating = df.groupby(['Category'])['Rating'].mean()\nprint(df_cat_mean_rating)\nprint('-'*40)\nprint('Top-5 high-rated categories')\nprint(df_cat_mean_rating.nlargest(5))\nprint('-'*40)\nprint('Top-5 low-rated categories')\nprint(df_cat_mean_rating.nsmallest(5))","cfe69d68":"### 3.2. Ratio of downloads of apps by categories\n\n*Ratio of downloads of apps by categories are shown below:*","2649ed3e":"*Top 5 most downloaded apps by categories, and their number of installs with ratios by those categories are shown below:*","3adc04cd":"## 3. Market size (Total number of downloads and money spent)","78cd6e2e":"### 3.1. Market size per category\n\n\"Game\" and \"communication\" apps have the highest number of installs, and owns 20.93% and 19.48% among all categories, respectively.\n\nApps in \"Family\" category have the highest income from the users by downloading those apps. They have 47.87% of all app incomes from downloading them. The next categories with high incomes are \"Lifestyle\" and \"Game\", which own 14.82% and 10.55%, respectively. ","419e880b":"![](http:\/\/)","a8908196":"## 2. Data Cleaning\n- shift 10472nd row to the right\n- set category of 10472nd row to \"LIFESTYLE\" \n- remove \"+\" and \",\" signs in Installs column\n- change Installs column to int type\n- remove \"$\" sign in Price column\n- change Price column to float type\n- remove 'M' from 'Size' column","6e946111":"## 4.1. Average ratings by categories\n\n- High-rated categories are \"Events\", \"Education\", \"Art and Design\", \"Books and References\" and \"Personalization\"\n- Low-rated categories are \"Dating\", \"Tools\", \"Maps and Navigation\", \"Video Players\" and \"Lifestyle\"","1dec5e5c":"## 1. Data Preview","d54da1d2":"The objective of this notebook is to research on app market in Google Play Store. Questions that this report will focus on are as follows:\n- What is the size of the market? numbers of download and $\n- Same question but per category? (percentages please)\n- Depending on each category, what are the ratio of download per app?\n- and others","e3525723":"# My MobApp Studio Project","4358a934":"## 4. Rating analysis\n- Rating average of all apps is 4.19"}}