{"cell_type":{"627e8b38":"code","46d2af42":"code","175886c6":"code","969cf65d":"code","e81c6c44":"code","0910ad1e":"code","96135f83":"code","f2449171":"code","c0506b40":"markdown","e546c7a5":"markdown","5d32a45c":"markdown","1a1b1a96":"markdown","88683d6e":"markdown","1fac71ab":"markdown"},"source":{"627e8b38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","46d2af42":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\n","175886c6":"# reading file from data source\nfile_path = \"..\/input\/international-football-results-from-1872-to-2017\/results.csv\"\ndata = pd.read_csv(file_path)\n# added an extra column named year to the dataset for further analytics \ndata[\"year\"] = data['date'].str[:4].astype(int)\n# printing the first five rows or observations\ndata.head()\n","969cf65d":"# functions for determining win,lose and draw for both home and away performances\ndef home_performance(s):\n    if (s.home_score > s.away_score):\n        return \"Win\"\n    elif (s.home_score < s.away_score):\n        return \"Lose\"        \n    else:\n        return \"Draw\"\ndef away_performance(s):\n    if (s.away_score > s.home_score):\n        return \"Win\"\n    elif (s.away_score < s.home_score):\n        return \"Lose\"        \n    else:\n        return \"Draw\"\n    \n# adding two columns to dataset named home and away performance for getting the result\ndata['home_performance'] = data.apply(home_performance,axis=1)\ndata['away_performance'] = data.apply(away_performance,axis=1)\n\n# seggregating argentina and brazil data\nargentina_stat = data[(data.home_team == 'Argentina') | (data.away_team == 'Argentina')]\nbrazil_stat = data[(data.home_team == 'Brazil') | (data.away_team == 'Brazil')]\n\n# getting count for win,lose and draw for both home and away\nhome_perf_arg = argentina_stat[argentina_stat.home_team == 'Argentina'].home_performance.value_counts()\naway_perf_arg = argentina_stat[argentina_stat.away_team == 'Argentina'].away_performance.value_counts()\nhome_perf_brz = brazil_stat[brazil_stat.home_team == 'Brazil'].home_performance.value_counts()\naway_perf_brz = brazil_stat[brazil_stat.away_team == 'Brazil'].away_performance.value_counts()\n\n# creating a figure object to plot the bar graph. We have created four axes to show four bar graph for both the team\nfig, ax = plt.subplots(2,2, figsize=(8,4), sharey=True, dpi=120)\nplt.subplots_adjust(top=1.5,bottom = .1)\n\n# setting up the title for the axes.\nax[0,0].set_title(\"Argentina Home Performance: \" + str(home_perf_arg.values.sum()) + \" games\", fontsize = 10)\nax[0,1].set_title(\"Argentina Away Performance: \" + str(away_perf_arg.values.sum()) + \" games\", fontsize = 10)\nax[1,0].set_title(\"Brazil Home Performance: \" + str(home_perf_brz.values.sum()) + \" games\", fontsize = 10)\nax[1,1].set_title(\"Brazil Away Performance: \"  + str(away_perf_brz.values.sum()) + \" games\", fontsize = 10)\n\n# setting style for the graph\nplt.style.use(['seaborn-dark-palette','ggplot'])\n\n# plotting data in seaborn plot\nsns.barplot(x = home_perf_arg.keys(), y = home_perf_arg.values, ax = ax[0,0],palette=(\"Blues_d\"))\nsns.barplot(x = away_perf_arg.keys(), y = away_perf_arg.values, ax = ax[0,1],palette=(\"Blues_d\"))\nsns.barplot(x = home_perf_brz.keys(), y = home_perf_brz.values, ax = ax[1,0],palette=(\"Blues_d\"))\nsns.barplot(x = away_perf_brz.keys(), y = away_perf_brz.values, ax = ax[1,1],palette=(\"Blues_d\"))\n","e81c6c44":"# this function returns a list containing performance data which looks like\n# [['Friendly','100','20','30'],['World Cup','100','20','30'],['Copa','100','20','30']]\ndef calculate_results(team_data, team):\n#     sorting out tournament category\n    keys = team_data.tournament.value_counts().keys()\n    performance_data = []\n    for each in keys:\n        a = []\n        win = team_data[((team_data.tournament == each) & (((team_data.home_team == team) & (team_data.home_performance == 'Win')) | \n                           ((team_data.away_team == team) & (team_data.away_performance == 'Win'))))].home_team.count()\n        lose =  team_data[((team_data.tournament == each) & (((team_data.home_team == team) & (team_data.home_performance == 'Lose')) | \n                           ((team_data.away_team == team) & (team_data.away_performance == 'Lose'))))].away_team.count()\n        draw = team_data[((team_data.tournament == each) & (team_data.home_performance == \"Draw\"))].home_team.count()\n        a.extend([each,win,lose,draw])\n        performance_data.append(a)\n    return performance_data\n# creating dataframe with the result got from the function for both the team\ndf_arg = pd.DataFrame(columns = ['Tournament','Win','Lose','Draw'],data=calculate_results(argentina_stat, \"Argentina\"))\ndf_brz = pd.DataFrame(columns = ['Tournament','Win','Lose','Draw'],data=calculate_results(brazil_stat, \"Brazil\"))\ndf_arg.set_index('Tournament',inplace = True)\ndf_brz.set_index('Tournament',inplace = True)\n# creating figure object which contains two columns in a single row for plotting both team's result\nfig, (ax1, ax2) = plt.subplots(1,2, figsize=(15,3), sharey=True, dpi=200)\nplt.subplots_adjust(top=1.5,bottom = .05)\n# setting style for the graph\nplt.style.use(['seaborn-deep','dark_background','ggplot','seaborn-dark-palette'])\ndf_arg.plot.bar(ax = ax1)\n# setting the first column title , xlabel and ylabel\nax1.set_title(\"Argentina Stat\")\nax1.set_xlabel(\"Tournament\")\nax1.set_ylabel(\"Count\")\nax1.set_xticklabels(argentina_stat.tournament.value_counts().keys(),rotation=90)\n\ndf_brz.plot.bar(ax = ax2)\n# setting the first column title , xlabel and ylabel\nax2.set_title(\"Brazil Stat\")\nax2.set_xlabel(\"Tournament\")\nax2.set_ylabel(\"Count\")\nax2.set_xticklabels(brazil_stat.tournament.value_counts().keys(),rotation=90)\nplt.show()","0910ad1e":"# this function is quite similliar to the previous one. It's also returns a list \n# but contains city information in place of tournament\ndef home_field_ratio(data,team_name):\n    home_field_count = data[(data.home_team == team_name) & \n                                      (data.neutral == False)].city.value_counts()[:7]\n    home_performance_result = []\n    for each in home_field_count.keys():\n        a = []\n        win = data[(data.home_team == team_name) & (data.neutral == False) &\n                            (data.home_performance == 'Win') & (data.city == each)].city.count()\n        lose = data[(data.home_team == team_name) & (data.neutral == False) &\n                            (data.home_performance == 'Lose') & (data.city == each)].city.count()\n        draw = data[(data.home_team == team_name) & (data.neutral == False) &\n                            (data.home_performance == 'Draw') & (data.city == each)].city.count()\n        win_percentage = (win\/home_field_count[each])* 100\n        lose_percentage = (lose\/home_field_count[each])* 100\n        draw_percentage = (draw\/home_field_count[each])* 100\n\n        a.extend([each,win_percentage,lose_percentage,draw_percentage])\n        home_performance_result.append(a)\n    return home_performance_result\n\n# setting up dataframe for argentina with the list obtained from the above function\ndf_arg_home_perf = pd.DataFrame(home_field_ratio(argentina_stat,'Argentina'),\n                                columns = [\"city\",\"win\",\"lose\",\"draw\"])\ndf_arg_home_perf.set_index('city',inplace = True)\n\n# setting up dataframe for brazil with the list obtained from the above function\ndf_brz_home_perf = pd.DataFrame(home_field_ratio(brazil_stat,'Brazil'),\n                                columns = [\"city\",\"win\",\"lose\",\"draw\"])\ndf_brz_home_perf.set_index('city',inplace = True)\n\n# creating figure object, quite similar to the previous one \nfig, (ax1, ax2) = plt.subplots(1,2, figsize=(10,5), sharey=True, dpi=200)\nplt.style.use(['seaborn-deep','dark_background','ggplot','seaborn-dark-palette'])\ndf_arg_home_perf.plot.bar(ax = ax1)\ndf_brz_home_perf.plot.bar(ax = ax2)\nax1.set_title(\"Home Performance Argentina\")\nax2.set_title(\"Home Performance Brazil\")","96135f83":"def win_percentage(data,team):    \n    match_count_year = data.year.value_counts()\n    foo = match_count_year[match_count_year>=10]\n    final_result = []\n    for each in foo.keys():\n        ls = []\n        win = data[((data.home_team == team) & (data.home_performance == 'Win') &\n                            (data.year == each)) | ((data.away_team == team) & (data.away_performance == 'Win') &\n                            (data.year == each))].year.count()\n        win_percentage = (win\/foo[each])*100\n        ls.extend([each,win_percentage])\n        final_result.append(ls)\n    return final_result\nwin_curve_arg = pd.DataFrame(win_percentage(argentina_stat, 'Argentina'),columns=['Year','Win_Percentage'])\nwin_curve_brz = pd.DataFrame(win_percentage(brazil_stat, 'Brazil'),columns=['Year','Win_Percentage'])\n# win_curve.set_index('Year',inplace = True)\nfig, (ax1,ax2) = plt.subplots(1,2, figsize=(16,5))\nsns.lineplot(x = win_curve_arg.Year, y = win_curve_arg.Win_Percentage,ax = ax1)\nsns.lineplot(x = win_curve_brz.Year, y = win_curve_brz.Win_Percentage,ax = ax2)","f2449171":"comp = data.copy()\ncomp = comp[((comp.home_team == 'Argentina') & (comp.away_team == 'Brazil')) | \n            ((comp.home_team == 'Brazil') & (comp.away_team == 'Argentina'))]\ncomp_arg = pd.DataFrame(calculate_results(comp,'Argentina'),columns = ['Tournament','Arg_win','Brazil_win','Draw'])\ncomp_arg.set_index('Tournament',inplace = True)\nplt.style.use(['seaborn-deep','dark_background','seaborn-dark-palette'])\ncomp_arg.plot.bar(figsize=(15,5),rot = 90)\n","c0506b40":"Football is an amazing sport and when it comes to Barzil and Argentina, it takes another shape. So, let's see some statistics of brazil and argentina over the year in international football. ","e546c7a5":"Let's break down their performances. Following graph shows performances of both the team on different tournament inlcluding freindly matches.","5d32a45c":"Let's look at the home and away performances for both the team.  ","1a1b1a96":"It's quite strange. Though argentina win the world cup in 1978 and 1986, their performance form 1980 to 1990 is quite bad. Now it's time to see some head to head stat over different tournaments including friendly matches.","88683d6e":"Stat shows why brazil has won 5 world cup. Let's see the performnace of both team in different cities. ","1fac71ab":"Argentina's performance is quite poor in Mar Del Plata city. Let's see the win curve over the year for both the team."}}