{"cell_type":{"58fdb108":"code","1695c028":"code","40da1f20":"code","7d96081c":"code","4ec2b36e":"code","b575e395":"code","3a2f8544":"code","f1ca7d82":"code","46535fc9":"code","9c7364e1":"code","6fa49180":"code","9eb3a5b1":"code","e9ab51c1":"code","33b49026":"code","4a7ea5f6":"code","79aa0ba3":"code","dc2aec8e":"code","025ce777":"code","e7f1121c":"code","2b8c77a3":"code","61641f67":"code","c4d82536":"code","30232819":"code","6236cc7d":"code","c5913f46":"code","68f6c912":"code","8ba0b41c":"code","58754a03":"code","5bdc2f8d":"code","3424d7c2":"code","c707ae5d":"code","6bcff23b":"code","5bf46117":"code","49024da6":"code","94262750":"code","ef991762":"code","a57e867c":"code","0b91350b":"code","63f6a9b1":"code","c6a238de":"code","a72f8a22":"code","99a8d424":"code","94353e54":"code","32cf7510":"code","51fc7a98":"code","7c888404":"code","cbf03294":"code","ad227edb":"code","ede7f1c0":"code","ce1d78a3":"code","96308941":"code","79b97f7e":"code","388c6552":"code","8f069fba":"code","b93eb559":"code","61816d9e":"code","2c1c02b1":"code","fba2a3cd":"code","2aeb43dd":"code","05443db0":"code","4d3de168":"code","1f3a1634":"code","350415f9":"code","a3f61f7c":"code","fbe207b2":"code","31782a66":"code","ab6bf977":"code","a1a7e7e5":"code","b28bd381":"code","3cf45fa1":"code","d86cd0ed":"code","56b044d1":"code","f7600f56":"code","a7a7e7d5":"code","5ef6b77e":"code","0949b519":"code","038dd8e9":"code","0d281c76":"code","2e7ad2da":"code","60d85b04":"code","49075434":"markdown","092d95b7":"markdown","1da42327":"markdown","90dc53c9":"markdown","d376205a":"markdown","ac439220":"markdown","9a0662b9":"markdown"},"source":{"58fdb108":"import os \n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.image import imread\n\nimport seaborn as sns\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dense, Dropout\n\nfrom tensorflow.keras.callbacks import EarlyStopping\n\nfrom tensorflow.keras.preprocessing import image\n\nfrom sklearn.metrics import classification_report, confusion_matrix","1695c028":"data_dir = '..\/input\/malaria-cell-images-dataset\/cell_images'","40da1f20":"print(os.listdir(data_dir))","7d96081c":"test_path = data_dir + \"\/test\/\"\ntrain_path = data_dir + \"\/train\/\"","4ec2b36e":"test_path","b575e395":"train_path","3a2f8544":"print(os.listdir(test_path))","f1ca7d82":"print(os.listdir(train_path))","46535fc9":"# os.listdir(test_path + \"\/parasitized\/\")","9c7364e1":"len(os.listdir(test_path + \"\/parasitized\/\")) ","6fa49180":"# os.listdir(test_path + \"\/uninfected\/\")","9eb3a5b1":"len(os.listdir(test_path + \"\/uninfected\/\")) ","e9ab51c1":"# os.listdir(train_path + \"\/parasitized\/\")","33b49026":"len(os.listdir(train_path + \"\/parasitized\/\"))   ","4a7ea5f6":"# os.listdir(train_path + \"\/uninfected\/\")","79aa0ba3":"len(os.listdir(train_path + \"\/uninfected\/\"))  ","dc2aec8e":"os.listdir(train_path + \"\/parasitized\/\")[0]","025ce777":"os.listdir(test_path + \"\/parasitized\/\")[0]","e7f1121c":"para_cell = test_path + \"parasitized\/\" + \"C68P29N_ThinF_IMG_20150819_134712_cell_55.png\"","2b8c77a3":"para_cell","61641f67":"# imread(para_cell)","c4d82536":"imread(para_cell).max()","30232819":"imread(para_cell).min()","6236cc7d":"imread(para_cell).shape","c5913f46":"plt.imshow(imread(para_cell))","68f6c912":"os.listdir(test_path + \"\/uninfected\/\")[0]","8ba0b41c":"uninfected_cell = test_path + \"uninfected\/\" + \"C181P142ThinF_IMG_20151127_155722_cell_78.png\"","58754a03":"plt.imshow(imread(uninfected_cell))","5bdc2f8d":"dim1 = []\ndim2 = []\n\nfor img_filename in os.listdir(test_path + \"uninfected\"):\n    img = imread(test_path + \"uninfected\/\" + img_filename)\n    d1, d2, colors = img.shape\n    dim1.append(d1)\n    dim2.append(d2)","3424d7c2":"# dim1","c707ae5d":"# dim2","6bcff23b":"np.mean(dim1)","5bf46117":"np.mean(dim2)","49024da6":"image_shape = (130, 130, 3)   # 130 * 130 * 3","94262750":"sns.jointplot(x=dim1, y=dim2)","ef991762":"# help(ImageDataGenerator)","a57e867c":"image_gen = ImageDataGenerator(rotation_range=20,\n                              width_shift_range=0.1,\n                              height_shift_range=0.1,\n                              shear_range=0.1,\n                              zoom_range=0.1,\n                              horizontal_flip=True,\n                              fill_mode='nearest')","0b91350b":"para_img = imread(para_cell)\nplt.imshow(para_img)","63f6a9b1":"plt.imshow(image_gen.random_transform(para_img))","c6a238de":"image_gen.flow_from_directory(train_path)","a72f8a22":"image_gen.flow_from_directory(test_path)","99a8d424":"image_shape = (130, 130, 3)","94353e54":"model = Sequential()\n\nmodel.add(Conv2D(filters=32, kernel_size=(3,3), input_shape=image_shape, activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(filters=64, kernel_size=(3,3), input_shape=image_shape, activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(filters=64, kernel_size=(3,3), input_shape=image_shape, activation='relu'))\nmodel.add(MaxPool2D(pool_size=(2, 2)))\n\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","32cf7510":"model.summary()","51fc7a98":"batch_size = 16","7c888404":"image_shape[:2]","cbf03294":"train_image_gen = image_gen.flow_from_directory(train_path,\n                                               target_size=image_shape[:2],\n                                               color_mode='rgb',\n                                               batch_size=batch_size,\n                                               class_mode='binary')","ad227edb":"test_image_gen = image_gen.flow_from_directory(test_path,\n                                               target_size=image_shape[:2],\n                                               color_mode='rgb',\n                                               batch_size=batch_size,\n                                               class_mode='binary',\n                                               shuffle=False)","ede7f1c0":"train_image_gen.class_indices","ce1d78a3":"# from tensorflow.keras.callbacks import EarlyStopping","96308941":"early_stop = EarlyStopping(monitor='val_loss', patience=2)","79b97f7e":"results = model.fit(train_image_gen, epochs=20,\n                    validation_data=test_image_gen,\n                    callbacks=[early_stop])","388c6552":"model.save('malaria_detector.h5')","8f069fba":"model.history.history","b93eb559":"losses = pd.DataFrame(model.history.history)\nlosses[['loss', 'val_loss']].plot()","61816d9e":"model.evaluate(test_image_gen)","2c1c02b1":"model.metrics_names","fba2a3cd":"pred = model.predict(test_image_gen)","2aeb43dd":"pred","05443db0":"predictions = pred > 0.5","4d3de168":"predictions","1f3a1634":"len(pred)","350415f9":"# from sklearn.metrics import classification_report, confusion_matrix","a3f61f7c":"test_image_gen.classes","fbe207b2":"print(classification_report(test_image_gen.classes, predictions))","31782a66":"print(confusion_matrix(test_image_gen.classes, predictions))","ab6bf977":"# How to predict on a single image ","a1a7e7e5":"para_cell","b28bd381":"image.load_img(para_cell)","3cf45fa1":"type(image.load_img(para_cell))","d86cd0ed":"my_image = image.load_img(para_cell, target_size=image_shape)","56b044d1":"my_image","f7600f56":"my_image_arr = image.img_to_array(my_image)","a7a7e7d5":"my_image","5ef6b77e":"# my_image_arr","0949b519":"my_image_arr.shape   # one image (1, 130, 130, 3)","038dd8e9":"my_image_arr = np.expand_dims(my_image_arr, axis=0)","0d281c76":"my_image_arr.shape","2e7ad2da":"model.predict(my_image_arr)   # parasitized","60d85b04":"test_image_gen.class_indices","49075434":"**Importing Modules**","092d95b7":"# Detecting Malaria cells using Convolutional Neural Network","1da42327":"**Data Processing**","90dc53c9":"**Evaluating the Model**","d376205a":"**Reading Data**","ac439220":"# Happy Learning :)","9a0662b9":"**Create the Mode**"}}