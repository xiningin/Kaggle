{"cell_type":{"c2abcf56":"code","6af78ce1":"code","a6deafab":"code","627b9511":"code","7494f875":"code","3c6f6c5d":"code","a45131e2":"code","672c4d84":"code","de37f935":"markdown","bdb48ac5":"markdown","bf66fd2b":"markdown","914cb27e":"markdown","10a5a90b":"markdown","383d7e4d":"markdown","480cde9b":"markdown","9bc0e42d":"markdown","339bcac4":"markdown"},"source":{"c2abcf56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\njson_data=open('..\/input\/cleaned_twitter_elections_data.json').read()\njson_text=json.loads(json_data)\n# Any results you write to the current directory are saved as output.","6af78ce1":"hashtags=[]\nfor iterator in json_text:\n    for a in iterator['entities']['hashtags']:\n        hashtags.append(a['text'])\nunique_hashtags=list(set(hashtags))\ncount_of_hashtags={'hashtags':unique_hashtags,'count':[0 for a in range(len(unique_hashtags))]}\nfor a in range(len(unique_hashtags)):\n    count_of_hashtags['count'][a]=hashtags.count(unique_hashtags[a])    \nfor a in range(4):\n    print(count_of_hashtags['hashtags'][a],count_of_hashtags['count'][a])\n\n","a6deafab":"df=pd.DataFrame(count_of_hashtags)\ndf.head()","627b9511":"df.sort_values(by='count',ascending=False).head(20)\n","7494f875":"map_plot = df.sort_values(by='count',ascending=False).head(10)","3c6f6c5d":"objects= map_plot['hashtags']\ny_pos = np.arange(len(map_plot['hashtags']))\nplt.bar(y_pos, map_plot['count'], align='center', alpha=0.5)\nplt.xticks(y_pos, objects, rotation='vertical')\nplt.ylabel('Retweets')\nplt.title('Top 10 Hashtag with Highest Retweets')\n\nplt.show()\n","a45131e2":"hashtag=[]\nmention=[]\ncreated_at=[]\nlang=[]\ndescription=[]\nfavourites_count=[]\nfriends_count=[]\nname=[]\ntweet=[]\nretweet_count=[]\nfollowers_count=[]\nlocation=[]\nname=[]\nid_str=[]\nretweeted=[]\nfor iterator in json_text:\n    hashtag.append(' '.join([a['text'] for a in iterator['entities']['hashtags']]))\n    mention.append(' '.join([a['name'] for a in iterator['entities']['user_mentions']]))\n    created_at.append(iterator['created_at'])\n    lang.append(iterator['lang'])\n    if 'retweeted_status' in  iterator:\n        retweet_count.append(iterator['retweeted_status']['retweet_count'])\n    else:\n        retweet_count.append(0)\n    \n    description.append(iterator['user']['description'])\n    favourites_count.append(iterator['user']['favourites_count'])\n    followers_count.append(iterator['user']['followers_count'])\n    friends_count.append(iterator['user']['friends_count'])\n    location.append(iterator['user']['location'])\n    name.append(iterator['user']['name'])\n    tweet.append(iterator['text'])\n    retweeted.append(iterator['retweeted'])\n\ndf_dict={'hashtag':hashtag,\n'mention':mention,\n'created_at':created_at,\n'lang':lang,\n'description':description,\n'favourites_count':favourites_count,\n'friends_count':friends_count,\n'name':name,\n'tweet':tweet,\n'retweet_count':retweet_count,\n'followers_count':followers_count,\n'location':location,\n'retweeted':retweeted\n}\ndf_all=pd.DataFrame(df_dict)\ndf_all.head(5)","672c4d84":"tweet_loc  = df_all.groupby('location')['location'].count().sort_values(ascending=False).head(20)\ntl_df = pd.DataFrame({'location':tweet_loc.index, 'count': tweet_loc.values})\ny_pos = np.arange(len(tl_df['location']))\n\nplt.bar(y_pos, tl_df['count'], align='center', alpha=0.2)\nplt.xticks(y_pos, tl_df['location'],rotation='vertical')\n#plt.text(v + 9, i + .25, str(v), color='blue', fontweight='bold')\nfor index,data in enumerate(tl_df['count']):\n    plt.text(x=index , y =data+5 , s=f\"{data}\" ,horizontalalignment='center', fontdict=dict(fontsize=7))\nplt.ylabel('Count')\nplt.title('Locations')\nplt.show()","de37f935":"We already have hashtags with count, let prepare DataFrame()","bdb48ac5":"Analysis Conclusion:\n1. In the election 2018 the Karachi city post highest tweets\n2. Overall the people support General election hashtag but PML(N) hashtag has higher tweet compare to hashtag PTI.\n3. In the election campaign International community also retweeted the tweets.","bf66fd2b":"To start working on it, the first step to process the data for the analysis, as the data is in JSON, I am using import json lib.","914cb27e":"We have all the required data now let's visulize with respect to location (Country & City)","10a5a90b":"In the general election of Pakistan 2018, the author share the tweets dataset of 4 days, The Analysis start but before start, there still some normalization require to analyse the data, so let's extract some further nested details :)","383d7e4d":"As we have JSON format file, we require more data processing to get more details related to each tweet, below is code to prepare twitter JSON data in array","480cde9b":"**AND the top 20 hashtags ARE**","9bc0e42d":"Let's visualize what we have done so far with top 30 tweets that has highest retweet","339bcac4":"Now we are only working on top 10 tweets with highest retweet and hashtags"}}