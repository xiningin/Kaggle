{"cell_type":{"6bb3e818":"code","7465a1d4":"code","e5cb7bc7":"code","e0feae18":"code","544f79d1":"code","4aa4fcb5":"code","baec2e9b":"code","37b0e151":"code","981acbe3":"code","3bd99d74":"code","265d7f5a":"code","e54c8bce":"code","030a0e15":"code","d9060650":"code","0173a822":"code","18457b4f":"code","22d51983":"code","6c79975b":"code","73e17b9f":"code","da026911":"markdown","80b1c190":"markdown","ecf0265a":"markdown","0902ef98":"markdown","cc29adde":"markdown","3129fd92":"markdown","f76871cb":"markdown","7753e467":"markdown","8b7a08dc":"markdown","c2c937e9":"markdown","3cfa6849":"markdown","b6056f9c":"markdown","2a4b2b14":"markdown","82e2ec52":"markdown","76b5384a":"markdown","a2969c71":"markdown"},"source":{"6bb3e818":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7465a1d4":"df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')","e5cb7bc7":"df.shape","e0feae18":"df.info()","544f79d1":"df.sample(5)","4aa4fcb5":"df.describe()","baec2e9b":"df.isna().sum()","37b0e151":"df = df.iloc[:,1:9]","981acbe3":"df=df.rename(columns = {'Chance of Admit ':'Chance of Admit'})","3bd99d74":"df['CGPA'] = df['CGPA']*4\/10","265d7f5a":"df.head()","e54c8bce":"corr = df.corr(method=\"pearson\")\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nwith sns.axes_style(\"white\"):\n    f, ax = plt.subplots(figsize=(9, 7))\n    ax = sns.heatmap(corr,mask=mask,square=True,annot=True,fmt='0.2f',linewidths=.8,cmap=\"hsv\")","030a0e15":"X = df.iloc[:, :-1]\ny = df.iloc[:, -1]","d9060650":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=100)","0173a822":"print(X_train.shape, X_test.shape)","18457b4f":"regressors=[['Linear Regression',LinearRegression()],\n       ['Decision Tree Regression',DecisionTreeRegressor()],\n       ['Random Forest Regression',RandomForestRegressor()],\n       ['Gradient Boosting Regression', GradientBoostingRegressor()],\n       ['Ada Boosting Regression',AdaBoostRegressor()],\n       ['Extra Tree Regression', ExtraTreesRegressor()],\n       ['K-Neighbors Regression',KNeighborsRegressor()],\n       ['Support Vector Regression',SVR()]]\nreg_pred=[]\nreg_acc = {'Metrics': [], 'Score': []}\nfor name, model in regressors:\n    model=model\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    rms=np.sqrt(mean_squared_error(y_test, predictions))\n    reg_pred.append(rms)\n    reg_acc['Metrics'].append(name)\n    reg_acc['Score'].append(rms)","22d51983":"reg_acc_df = pd.DataFrame(reg_acc)\nreg_acc_df.style.set_table_styles([{\n   'selector': '',\n   'props': [('border', '2px solid #555')]\n}])","6c79975b":"y_ax=['Linear Regression' ,'Decision Tree Regression', 'Random Forest Regression','Gradient Boosting Regression', 'Ada Boosting Regression','Extra Tree Regression' ,'K-Neighbors Regression', 'Support Vector Regression' ]\nx_ax=reg_pred","73e17b9f":"sns_plot = sns.barplot(x=x_ax, y=y_ax, linewidth=1.5)","da026911":"#### Checking for NA values","80b1c190":"#### Removing space from  `Chance of Admit `","ecf0265a":"I fixed some columns which had some inconsistency in name and values. The dataset had no null values but it had some feature to be altered, for instance, the GPA was in Indian standard (i.e., on a scale of 10.0) which I later converted on a 4.0 scale before training the model as per the supervisor\u2019s permission. Similarly, there were issues with column names.","0902ef98":"#### Splitting the dataset for training model","cc29adde":"#### Excluding Serial No. as it is an unnecessary column for us","3129fd92":"#### Importing required libraries","f76871cb":"#### Exploring Dataset","7753e467":"#### Finding Correlation among the features","8b7a08dc":"**Root Mean Squared Error (MSE)** is a commonly used metric for Regression algorithms. It measures the root average of the squares of errors between predicted value and actual value. The lower RMSE, the better algorithm is meant to be performed","c2c937e9":"#### Creating dataframe","3cfa6849":"The above dataset is divided into training inputs, testing inputs, test outputs and training outputs by using `train_test_split` methods and we have not specific the size to divide. we can define by `test_size = 0.2` means 20%.","b6056f9c":"Training and evaluating model with different regression algorithms and `mean squared error` as the accuracy factor:","2a4b2b14":"## Graduate Admission - Finding the best regression model","82e2ec52":"Out of all regression algorithms, Linear Regression yielded the best accuracy score with a mean square error of just 0.057.","76b5384a":"Now the dataset is ready to be processed for making visualization and developing the model.","a2969c71":"#### Visual Representation of model accuracy"}}