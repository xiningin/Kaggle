{"cell_type":{"e663e5ba":"code","9e648843":"code","9835e2f3":"code","66f4729e":"code","109b7264":"code","e019e98b":"code","110ebf4d":"code","c82a318f":"code","cbf695c5":"code","b147a27f":"code","1a397e03":"code","b7a37cf9":"code","c0de50de":"code","c766947a":"code","4791ff82":"code","cf657f6f":"code","7a77e716":"code","588f5dca":"code","d796cdd7":"code","08c6ad9c":"markdown","398b3125":"markdown","0669c5cf":"markdown","784d3c2b":"markdown","0260a540":"markdown","704d8f1f":"markdown","f15a6d4b":"markdown","3ce73c83":"markdown"},"source":{"e663e5ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9e648843":"train_users_game1 = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/train_users_game1.csv')\ntrain_users_game2 = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/train_users_game2.csv')\ntest_users_game1 = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/test_users_game1.csv')\ntest_user_ids = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/test_user_ids.csv')\ngame_group2 = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/game_group2.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/ds2019uec-task2\/sample_submission.csv')","9835e2f3":"users_game1 = pd.concat([train_users_game1, test_users_game1]).drop(['play_hour'], axis=1).drop_duplicates()\nusers_game1['label'] = 1","66f4729e":"users_game1","109b7264":"user_ids = pd.concat([train_users_game1['user_id'], train_users_game2['user_id'], test_user_ids['user_id']]).unique()","e019e98b":"users_game1_matrix = users_game1.set_index(['user_id', 'game_title'])['label'].unstack().reindex(user_ids).fillna(0)","110ebf4d":"users_game1_matrix","c82a318f":"train_user_ids = pd.concat([train_users_game1['user_id'], train_users_game2['user_id']]).unique()\ntest_user_ids = test_user_ids['user_id'].values","cbf695c5":"from sklearn.metrics.pairwise import cosine_distances\nusers_similarity = 1 - cosine_distances(users_game1_matrix.loc[test_user_ids], users_game1_matrix.loc[train_user_ids])","b147a27f":"users_similarity.shape","1a397e03":"users_game2 = train_users_game2.drop(['play_hour', 'predict_game_id'], axis=1).drop_duplicates()\nusers_game2['label'] = 1","b7a37cf9":"users_game2","c0de50de":"users_game2_matrix = users_game2.set_index(['user_id', 'game_title'])['label'].unstack().reindex(user_ids).fillna(0)\nusers_game2_matrix.columns = users_game2_matrix.columns.map(game_group2.set_index('game_title')['predict_game_id'])","c766947a":"users_game2_matrix","4791ff82":"test_users_game2_matrix = (users_similarity @ users_game2_matrix.loc[train_user_ids])","cf657f6f":"test_users_game2_matrix","7a77e716":"sample_submission['purchased_games'] = test_users_game2_matrix.apply(lambda x: ' '.join(x.sort_values(ascending=False)[:10].index.astype('str')), axis=1)","588f5dca":"sample_submission.loc[test_users_game2_matrix.sum(axis=1) == 0, 'purchased_games'] = ' '.join(train_users_game2['predict_game_id'].value_counts(normalize=True).index.astype('str')[:10])","d796cdd7":"sample_submission.to_csv('submission.csv', index=None)","08c6ad9c":"### \u4f55\u3082\u8cb7\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u30e6\u30fc\u30b6\u306ftrain\u30e6\u30fc\u30b6\u306e\u8cfc\u8cb7\u6570\u4e0a\u4f4d10\u4ef6\u3067\u57cb\u3081\u308b","398b3125":"## \u5024\u304c\u5927\u304d\u3044\u4e0a\u4f4d10\u4ef6\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3059\u308b","0669c5cf":"## \u5168\u30e6\u30fc\u30b6\u00d7\u30b2\u30fc\u30e02\u306e\u884c\u5217\u3092\u4f5c\u308b","784d3c2b":"## \u985e\u4f3c\u5ea6\u884c\u5217\u3092\u4f7f\u3063\u3066train\u30e6\u30fc\u30b6\u00d7\u30b2\u30fc\u30e02\u306e\u884c\u5217\u304b\u3089test\u30e6\u30fc\u30b6\u00d7\u30b2\u30fc\u30e02\u306e\u884c\u5217\u3092\u4f5c\u308b","0260a540":"## train\u30e6\u30fc\u30b6\u3068test\u30e6\u30fc\u30b6\u306e\u985e\u4f3c\u5ea6\u884c\u5217\u3092\u4f5c\u308b","704d8f1f":"## \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f","f15a6d4b":"# \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u89e3\u3044\u3066\u307f\u308b","3ce73c83":"## \u5168\u30e6\u30fc\u30b6\u00d7\u30b2\u30fc\u30e01\u306e\u884c\u5217\u3092\u4f5c\u308b"}}