{"cell_type":{"d5d4474e":"code","3e1ae0fc":"code","a414a984":"code","cb5da499":"code","a99c10a2":"code","34e8e848":"code","362bbad5":"code","278392ad":"code","4fbfcfed":"code","d0da6647":"code","fed47e35":"code","65ea7b4b":"code","145d0b01":"code","61bd31af":"code","e1dacc6d":"code","14daed04":"code","1a6ed21f":"code","28895891":"code","2b133f4c":"code","1e3ce011":"code","613204d3":"code","a2853ab1":"code","76c9b033":"code","9b60c6cb":"code","2d723406":"code","f5935c44":"code","4b18e5f6":"code","131cb5d8":"code","c6c35210":"code","a2b21ab9":"code","5116cb64":"code","98eb6afc":"markdown","b0192e5b":"markdown","c7c4228b":"markdown","b191c309":"markdown","3525e677":"markdown","d37bce18":"markdown","f17751a2":"markdown","d01da701":"markdown","d2a37354":"markdown","3540432b":"markdown","f2458126":"markdown","abcd3b43":"markdown","dee77276":"markdown","e681ae2a":"markdown","48a0e4a6":"markdown","e18ed09d":"markdown","af519c87":"markdown","4bd838dc":"markdown","06e7e051":"markdown"},"source":{"d5d4474e":"# Importing the necessary libraries.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","3e1ae0fc":"# reading the data from the repository. \n\nlocation = \"..\/input\/covid19dataset\/COVID_Data_Basic.csv\"\ndata = pd.read_csv(location)\ndata","a414a984":"# Looking at the key features of our dataset.\n\ndata.describe()","cb5da499":"#Checking the datatypes of each column.\n\ndata.dtypes","a99c10a2":"# Converting the datatype of Date to datatime format. \n\ndata[\"Date\"] = pd.to_datetime(data[\"Date\"])","34e8e848":"# Cross-checking whether we got the required datatype.\n\ndata.dtypes","362bbad5":"# Checking for null values.\n\ndata.isnull().any()","278392ad":"# Checking for india's data. \n\ndata[\"Country\"].unique()","4fbfcfed":"# Creating a dataframe with required features.\n\ndata_date = data.groupby(\"Date\", as_index=False).Confirmed.sum()\ndata_date\n","d0da6647":"# Looking at the datatypes.(in case they need to be astyped)\n\ndata_date.dtypes","fed47e35":"# Creating a line-graph with above data.\n\nplt.figure(figsize=(10,10))\nsns.lineplot(x=data_date[\"Date\"], y=data_date[\"Confirmed\"])\nplt.title(\"No of confirmed cases with time.\")\nplt.xticks(rotation=45)","65ea7b4b":"# Creating a dataframe with the neccesary features\/columns.\n\ndata_death = data.groupby(\"Country\", as_index=False).Death.max()\ndata_death","145d0b01":"# plotting a bargraph with the above dataframe. \n\nplt.figure(figsize=(15,40))\nsns.barplot(x=data_death[\"Death\"], y=data_death[\"Country\"])\nplt.yticks(size=10)\nplt.xticks(size=20)","61bd31af":"# Creating a dataframe of top 10 countries.\n\ndeath = data_death.sort_values(by=\"Death\", ascending=False)\ndeath_top10 = death.head(10)\ndeath_top10","e1dacc6d":"# plotting a bargraph with the above dataframe.\n\nplt.figure(figsize=(10,5))\nsns.barplot(x=death_top10[\"Death\"], y=death_top10[\"Country\"])\nplt.title(\"top countries with the most death cases\")","14daed04":"# Creating a dataframe of countries vs recovered cases.\n\ndata_recover = data.groupby(\"Country\", as_index=False).Recovered.max()\ndata_recover","1a6ed21f":"# Creating a dataframe of countries vs confirmed cases.\n\ndata_confirmed = data.groupby(\"Country\", as_index=False).Confirmed.max()\ndata_confirmed","28895891":"# Merging the above 2 Dataframes.\ndata_fight = pd.merge(data_recover, data_confirmed, on='Country')\ndata_fight","2b133f4c":"# Creating the ratios by dividing confirmed cases\/ recovered cases.\n\nratio = data_fight[\"Confirmed\"]\/data_fight[\"Recovered\"]\nratio","1e3ce011":"# Adding the above ration to the existing dataframe for easier evaluation.\n\ndata_fight[\"Ratio\"] = ratio\ndata_fight","613204d3":"# checking the datatype of ratio column. \n\ndata_fight.dtypes","a2853ab1":"# plotting a bargraph with the above dataframe.\n\nplt.figure(figsize=(15,40))\nsns.barplot(x=data_fight[\"Ratio\"], y=data_fight[\"Country\"])\nplt.yticks(size=10)\nplt.xticks(size=20)","76c9b033":"# sorting the dataframe with the least ratios.\n\ndata_top10 = data_fight.sort_values(by=\"Ratio\", ascending=True)\ndata_top10.head(10)","9b60c6cb":"# Here, we need to drop \"Diamond Princess\" beacause that's a cruising ship and and not a country. \n\ndata_top10 = data_top10.drop(index=[49])\ndata_top10 = data_top10.head(10)","2d723406":"plt.figure(figsize=(10,10))\nsns.barplot(x=data_top10[\"Country\"], y=data_top10[\"Ratio\"])\nplt.title(\"Countries vs ratio of confirmed cases to recoveries\")","f5935c44":"# Extracting country specific data.\n\ndata_india = data[data['Country']==\"India\"]\ndata_india","4b18e5f6":"# Confirmed cases in India in each day from 2019-12-31 to 2020-4-22.\n\nindia_confirmed = data_india.groupby(\"Date\", as_index=False).Confirmed.sum()\nindia_confirmed","131cb5d8":"# Plotting the above dataframe in a line graph.\n\nplt.figure(figsize=(10,10))\nsns.lineplot(x=india_confirmed[\"Date\"], y=india_confirmed[\"Confirmed\"])\nplt.xticks(rotation=45)\nplt.title(\"India's rising covid-19 cases\")","c6c35210":"# # Recovered cases in India in each day from 2019-12-31 to 2020-4-22.\n\nindia_recover = data_india.groupby(\"Date\", as_index=False).Recovered.sum()\nindia_recover","a2b21ab9":"india_death = data_india.groupby(\"Date\", as_index=False).Death.sum()\nindia_death","5116cb64":"# plotting the above dataframes in a line graph. \n\nplt.figure(figsize=(10,10))\nsns.lineplot(x=india_recover[\"Date\"], y=india_recover[\"Recovered\"], label=\"recovered cases\")\nsns.lineplot(x=india_confirmed[\"Date\"], y=india_confirmed[\"Confirmed\"], label=\"confirmed cases\")\nsns.lineplot(x=india_death[\"Date\"], y=india_death[\"Death\"], label=\"Death cases\")\nplt.xticks(rotation=45)\nplt.ylabel(\"no of cases\")","98eb6afc":"So, this ratio tells us which country is fighting covid-19 successfully.\n\nLesser the ratio the more successfull they have been.","b0192e5b":"We see a steep rise in no of cases with time across all countries.","c7c4228b":"# Throughout history, nothing has killed more human beings than infectious disease. Covid-19 is climbing up the same ladder.\n\nThe following is an analysis of covid-19. This analysis will address some of the questions which everyone should be aware of.\n\nThe summary of this notebook\/kernel:\n\n* A graph showing confirmed cases with time across all the countries.\n* Countries with maximum deaths.\n* Countries which are successfully fighting against covid-19.(comparing the ratios of confirmed cases by recovered cases.)\n* Pattern of rising cases in India.\n* Comparision of confirmed, recovered and death curves.","b191c309":"# Global_analysis on confirmed cases with time. ","3525e677":"We will do country specific analysis on India.\n\nBut before that we will do some global analysis.","d37bce18":"We see a steep rise in confirmed cases from 2020-03-15.\n\nIt seems like recovery rate is low but we need to consider the fact that a patient needs time to recover.\n\nAlso, the death rate is a lot low than the recovery rate.","f17751a2":"# Analysing India's data: ","d01da701":"To make thing a bit easier to visualize, we consider the top 10 affected countries and plot the values ina similar graph.","d2a37354":"# Countries with maximum death cases.","3540432b":"Yes, India is there. Few countries seem to be missing from the dataset. So, it's good to cross-check. ","f2458126":"Now, things are more clean and clear.","abcd3b43":"So, here we get the top countries with the most death cases.","dee77276":"These countries have maximium of their patients recovered.\n\nSaint Lucia leading the list. Followed by China and Cambodia. ","e681ae2a":"#  Countries who are successfully fighting against covid-19:","48a0e4a6":"Since the \"Date\" is in object datatype, we need to convert it. ","e18ed09d":"To know which country is performing better, we need to compare their ratios of deaths is to recoveries.","af519c87":"US is seen as the country with the highest death cases. Followed by Italy and Spain.","4bd838dc":"# Data Cleaning: ","06e7e051":"We need to create a dataframe with the necessary features\/columns."}}