{"cell_type":{"1786e5f7":"code","11ddf466":"code","ebf02904":"code","200e8614":"code","3d4b8d35":"code","a0553f2d":"code","c6f68102":"code","bc6a4f4f":"code","3fcaea92":"code","5cb2f20f":"code","f0d8c523":"code","c695ef02":"code","e4998fc7":"code","6da0464b":"code","71424f16":"code","45b73234":"code","b1070633":"code","72b1dae4":"code","db8bdb78":"code","57922f1c":"code","877d836a":"code","33d6d84a":"code","da619edf":"code","7c8f4353":"code","8a6baba3":"code","c9d9025f":"code","a27cd813":"code","4e95b9a1":"code","67ad075b":"code","eaffa9ec":"code","0d6ae49d":"code","355dfb34":"code","82c10021":"code","669a7ba5":"code","402d289c":"code","99c263d5":"code","6c4bd633":"code","a14b1695":"code","0e247a0e":"code","8f18bdda":"code","abc0c9fc":"code","2999d02a":"code","b79eae76":"code","3a7dbe06":"code","596cbb24":"code","bb6d64a7":"code","52948760":"code","90428173":"code","d90b8e73":"code","771a2d81":"code","ceeb4901":"code","9bef3f59":"code","ea251f8f":"code","e9f1cd13":"code","a0d0dabe":"code","4eee0c29":"code","af2b21c5":"code","89e1bb66":"code","3b1f17ce":"code","d2e9e1a4":"code","fef7d391":"code","0bd34ed1":"code","c2c23dd9":"code","9e823697":"code","ead91c87":"code","b28a6a6c":"code","9108e0ec":"code","1a4f2af4":"code","d839d57d":"code","30f3fd98":"code","95021025":"code","bba9ccdb":"code","6d065bca":"code","cf9797ab":"code","41cca31a":"code","07c98e6d":"markdown","4ca0963a":"markdown","285bd254":"markdown","bb3c124f":"markdown","de7ef142":"markdown","74f11a09":"markdown","f3d2d383":"markdown","ed4ca3e7":"markdown","babaed2b":"markdown","e35e249e":"markdown","718caa6d":"markdown","7e6fd671":"markdown","67ebaf42":"markdown","4e9b3d6c":"markdown","5de1a6d5":"markdown","76178655":"markdown","69dd97dd":"markdown","73d50e6e":"markdown","12208264":"markdown"},"source":{"1786e5f7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","11ddf466":"from PIL import Image","ebf02904":"img = np.array(Image.open('\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'))","200e8614":"print(img.dtype)\n","3d4b8d35":"def im2double(im):\n    min_val = np.min(im.ravel())\n    max_val = np.max(im.ravel())\n    out = (im.astype('float') - min_val) \/ (max_val - min_val)\n    return out","a0553f2d":"img = im2double(img)","c6f68102":"print(img.dtype)\n","bc6a4f4f":"img","3fcaea92":"import matplotlib.pyplot ","5cb2f20f":"matplotlib.pyplot.imshow(img)","f0d8c523":"R = img[:,:,0]\nG = img[:,:,1]\nB = img[:,:,2]\n","c695ef02":"R.shape","e4998fc7":"R","6da0464b":"np.amax(R)","71424f16":"matplotlib.pyplot.imshow(R)","45b73234":"matplotlib.pyplot.imshow(G)","b1070633":"matplotlib.pyplot.imshow(B)","72b1dae4":"R.shape","db8bdb78":"img.shape","57922f1c":"R.flatten().shape","877d836a":"  \nnp.reshape(R, R.flatten().shape)","33d6d84a":"X = np.transpose(np.array([R.flatten() , G.flatten() ,B.flatten() ]))","da619edf":"X","7c8f4353":"X.shape","8a6baba3":"np.savetxt(\"RGB.csv\", X, delimiter=\",\")","c9d9025f":"np.amax(X)","a27cd813":"from sklearn.cluster import KMeans","4e95b9a1":"k=25","67ad075b":"kmeans = KMeans(n_clusters=k,random_state=0 ).fit(X)","eaffa9ec":"IDX = kmeans.labels_\nIDX ","0d6ae49d":"IDX.max()","355dfb34":"np.savetxt(\"IDX.csv\", IDX, delimiter=\",\")","82c10021":"C = kmeans.cluster_centers_\nC","669a7ba5":"C.shape","402d289c":"X2 = C[IDX,:]\nX2","99c263d5":"X2.shape","6c4bd633":"R2=np.reshape(X2[:,0], R.shape)\nG2=np.reshape(X2[:,1], G.shape)\nB2=np.reshape(X2[:,2], B.shape)\nR2","a14b1695":"R2.shape","0e247a0e":"img2 = np.zeros(img.shape)\nimg2.shape","8f18bdda":"img2[:,:,0]= R2\nimg2[:,:,1]= G2\nimg2[:,:,2]= B2\n","abc0c9fc":"img2","2999d02a":"matplotlib.pyplot.imshow(img2)","b79eae76":"fig=matplotlib.pyplot.figure(figsize = (15,7))\nfig.add_subplot(1,2,1)\nmatplotlib.pyplot.imshow(img,aspect='auto')\nfig.add_subplot(1,2,2)\nmatplotlib.pyplot.imshow(img2,aspect='auto')\n ","3a7dbe06":"k=50\nkmeans = KMeans(n_clusters=k,random_state=0 ).fit(X)\nIDX = kmeans.labels_\nC = kmeans.cluster_centers_\nX3 = C[IDX,:]\nR3=np.reshape(X3[:,0], R.shape)\nG3=np.reshape(X3[:,1], G.shape)\nB3=np.reshape(X3[:,2], B.shape)\nimg3 = np.zeros(img.shape)\nimg3[:,:,0]= R3\nimg3[:,:,1]= G3\nimg3[:,:,2]= B3\nfig=matplotlib.pyplot.figure(figsize = (18,7))\nfig.add_subplot(1,3,1)\nmatplotlib.pyplot.imshow(img,aspect='auto')\nfig.add_subplot(1,3,2)\nmatplotlib.pyplot.imshow(img2,aspect='auto')\nfig.add_subplot(1,3,3)\nmatplotlib.pyplot.imshow(img3,aspect='auto')","596cbb24":"def color_reduction_withKmeans (imgaddress, k):\n    imgage = np.array(Image.open(imgaddress))\n    img = im2double(imgage)\n    R = img[:,:,0]\n    G = img[:,:,1]\n    B = img[:,:,2]\n    X = np.transpose(np.array([R.flatten() , G.flatten() ,B.flatten() ]))\n    kmeans = KMeans(n_clusters=k,random_state=0 ).fit(X)\n    IDX = kmeans.labels_\n    C = kmeans.cluster_centers_\n    X2 = C[IDX,:]\n    R2=np.reshape(X2[:,0], R.shape)\n    G2=np.reshape(X2[:,1], G.shape)\n    B2=np.reshape(X2[:,2], B.shape)\n    img2 = np.zeros(img.shape)\n    img2[:,:,0]= R2\n    img2[:,:,1]= G2\n    img2[:,:,2]= B2\n    fig=matplotlib.pyplot.figure(figsize = (15,7))\n    fig.add_subplot(1,2,1)\n    matplotlib.pyplot.imshow(img,aspect='auto')\n    fig.add_subplot(1,2,2)\n    matplotlib.pyplot.imshow(img2,aspect='auto')\n    \n    \n    ","bb6d64a7":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=25\ncolor_reduction_withKmeans (imgaddress, k)","52948760":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=50\ncolor_reduction_withKmeans (imgaddress, k)","90428173":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=50\ncolor_reduction_withKmeans (imgaddress, k)","d90b8e73":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=25\ncolor_reduction_withKmeans (imgaddress, k)","771a2d81":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=10\ncolor_reduction_withKmeans (imgaddress, k)","ceeb4901":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=5\ncolor_reduction_withKmeans (imgaddress, k)","9bef3f59":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=3\ncolor_reduction_withKmeans (imgaddress, k)","ea251f8f":"import colorsys\n","e9f1cd13":"def convert_RGB_Matrice_to_HSV(X):\n    Y =  np.zeros(X.shape)\n    for i in range(len(X)):\n        Z = colorsys.rgb_to_hsv(X[i][0],X[i][1],X[i][2])\n        Y[i][0] =Z[0]\n        Y[i][1] =Z[1]\n        Y[i][2] =Z[2]\n        \n    return Y","a0d0dabe":"def convert_HSV_Matrice_to_RGB(Y):\n    X =  np.zeros(Y.shape)\n    for i in range(len(Y)):\n        Z = colorsys.hsv_to_rgb(Y[i][0],Y[i][1],Y[i][2])\n        X[i][0] =Z[0]\n        X[i][1] =Z[1]\n        X[i][2] =Z[2]\n        \n    return X","4eee0c29":"\ndef color_reduction_withKmeans_RGB2HSV (imgaddress, k):\n    imgage = np.array(Image.open(imgaddress))\n    img = im2double(imgage)\n    R = img[:,:,0]\n    G = img[:,:,1]\n    B = img[:,:,2]\n    X = np.transpose(np.array([R.flatten() , G.flatten() ,B.flatten() ]))\n    Y = convert_RGB_Matrice_to_HSV(X)\n    kmeans = KMeans(n_clusters=k,random_state=0 ).fit(Y)\n    IDX = kmeans.labels_\n    C = kmeans.cluster_centers_\n    Y2= C[IDX,:]\n    X2 = convert_HSV_Matrice_to_RGB(Y2)\n    R2=np.reshape(X2[:,0], R.shape)\n    G2=np.reshape(X2[:,1], G.shape)\n    B2=np.reshape(X2[:,2], B.shape)\n    img2 = np.zeros(img.shape)\n    img2[:,:,0]= R2\n    img2[:,:,1]= G2\n    img2[:,:,2]= B2\n    fig=matplotlib.pyplot.figure(figsize = (15,7))\n    fig.add_subplot(1,2,1)\n    matplotlib.pyplot.imshow(img,aspect='auto')\n    fig.add_subplot(1,2,2)\n    matplotlib.pyplot.imshow(img2,aspect='auto')\n    \n    ","af2b21c5":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=20\ncolor_reduction_withKmeans_RGB2HSV (imgaddress, k)","89e1bb66":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=20\ncolor_reduction_withKmeans_RGB2HSV (imgaddress, k)","3b1f17ce":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=30\ncolor_reduction_withKmeans_RGB2HSV (imgaddress, k)","d2e9e1a4":"def color_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw):\n    imgage = np.array(Image.open(imgaddress))\n    img = im2double(imgage)\n    R = img[:,:,0]\n    G = img[:,:,1]\n    B = img[:,:,2]\n    X = np.transpose(np.array([R.flatten() , G.flatten() ,B.flatten() ]))\n    Y = convert_RGB_Matrice_to_HSV(X)\n    W = [hw,sw,vw]\n    Y[:,0]=W[0]* Y[:,0]\n    Y[:,1]=W[1]* Y[:,1]\n    Y[:,2]=W[2]* Y[:,2]\n    \n    kmeans = KMeans(n_clusters=k,random_state=0 ).fit(Y)\n    IDX = kmeans.labels_\n    C = kmeans.cluster_centers_\n    Y2= C[IDX,:]\n    Y2[:,0]=Y2[:,0]\/W[0]  \n    Y2[:,1]=Y2[:,1]\/W[1]  \n    Y2[:,2]=Y2[:,2]\/W[2]  \n    X2 = convert_HSV_Matrice_to_RGB(Y2)\n    R2=np.reshape(X2[:,0], R.shape)\n    G2=np.reshape(X2[:,1], G.shape)\n    B2=np.reshape(X2[:,2], B.shape)\n    img2 = np.zeros(img.shape)\n    img2[:,:,0]= R2\n    img2[:,:,1]= G2\n    img2[:,:,2]= B2\n    fig=matplotlib.pyplot.figure(figsize = (15,7))\n    fig.add_subplot(1,2,1)\n    matplotlib.pyplot.imshow(img,aspect='auto')\n    fig.add_subplot(1,2,2)\n    matplotlib.pyplot.imshow(img2,aspect='auto')","fef7d391":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=30\nhw=5\nsw=1\nvw=2\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","0bd34ed1":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=30\nhw=0.1\nsw=1\nvw=2\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","c2c23dd9":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=20\nhw=40\nsw=1\nvw=2\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","9e823697":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/rainbow_rect.jpg'\nk=20\nhw=5\nsw=1\nvw=3\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","ead91c87":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=20\nhw=5\nsw=1\nvw=3\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","b28a6a6c":"imgaddress = '\/kaggle\/input\/reduce-the-number-of-colors-unsupervised-learning\/maghbaratoshoara_tabriz.jpeg'\nk=20\nhw=4\nsw=1\nvw=3\ncolor_reduction_withKmeans_RGB2HSV_with_whight (imgaddress, k,hw,sw,vw)","9108e0ec":"!pip install -U scikit-fuzzy\nimport skfuzzy as fuzz\n","1a4f2af4":"!pip install -U  fuzzy-c-means\nfrom fcmeans import FCM","d839d57d":"K=30\nfcm = FCM(n_clusters=K)\nfcm.fit(X)","30f3fd98":"# outputs\nC = fcm.centers\nU  = fcm.u ","95021025":"U.shape","bba9ccdb":"M=np.amax(U,axis=1)","6d065bca":"M.shape","cf9797ab":"M","41cca31a":"M.transpose()","07c98e6d":"# Results","4ca0963a":"# K-Means","285bd254":"## Steps to reduce the number of colors by clustering:\n1. Get the color information in the image\n2. Perform clustering on color information\n3. Get the center coordinates of the clusters\n4. Replace each color in the original image with the corresponding cluster center\n","bb3c124f":"FCM--->","de7ef142":"# Create Reduce Image","74f11a09":"# Load Image","f3d2d383":"Imagine we have 1 picture\u00a0from your anniversary\u00a0and you want to order it for one\u00a0Carpet weaver. The\u00a0Carpet weaver has limitations to choose a number of colors So he needs to reduce the number of your picture color to at least 20 colors to make Carpet for you. In this Notebook, I will show you some good ways to reduce the number of colors but the picture has at least good quality for carpet","ed4ca3e7":"# * COLOR Reduction\n# * COLOR Quantization","babaed2b":"# In Cumputer environment colors will calculate with bits","e35e249e":"* K-Means clustering algorithm (or Lloyd's algorithm)\n* FCM fuzzy clustering algorithm\n* Self-organized mapping or SOM","718caa6d":"This number of colors is impossible for any carpet weaver to warehouse them. So they need to learn AI and NN to reduce the number of colors \n ","7e6fd671":"# Perform Clustering","67ebaf42":"![image.png](attachment:image.png)","4e9b3d6c":"![image.png](attachment:image.png)","5de1a6d5":"--------------\n","76178655":"![image.png](attachment:image.png)","69dd97dd":"**Resource**\n[FARADARS](https:\/\/faradars.org\/courses\/fvrp104-color-reduction-and-quantization-of-images-using-intelligent-clustering-methods-video-tutorial)","73d50e6e":"# **Learn to reduce the number of colors of images using intelligent clustering methods**","12208264":"# It is unsupervised problem"}}