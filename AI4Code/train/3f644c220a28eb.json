{"cell_type":{"bc523461":"code","6a009dc6":"code","b6eac75a":"code","c9473286":"code","9663c025":"code","6303bcc7":"code","272cc7eb":"code","6b14b228":"code","09d2c8b6":"code","b9ade60c":"code","3bf307ca":"code","fd9c58c8":"code","a8793551":"code","bca86d10":"code","740b76a2":"code","5d8c9fe6":"code","9dab7d25":"code","48b26730":"code","48593e22":"code","cdf20983":"code","bb86443f":"markdown","de2ccab0":"markdown","646de999":"markdown"},"source":{"bc523461":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6a009dc6":"from IPython.display import display\nfrom sklearn.datasets import load_iris","b6eac75a":"iris_dataset = load_iris()\nprint('keys of iris dataset\\n{}\\nlets see how format works'.format(iris_dataset.keys()))","c9473286":"print('Dataset Description\\n{}'.format(iris_dataset['DESCR'][:193]+'\\n'))# prints first 193 characters and then a new line","9663c025":"print('Target names{}'.format(iris_dataset['target_names']))","6303bcc7":"print('Feature names{}'.format(iris_dataset['feature_names']))","272cc7eb":"print('Target\\n{}'.format(iris_dataset['target'])\n     +'\\n\\nType of target{}'.format(type(iris_dataset['target']))\n     +'\\n\\nShape of Target{}'.format(iris_dataset['target'].shape))","6b14b228":"print('Data\\n{}'.format(iris_dataset['data'][:5]) #first 5 rows\/samples of data\n     +'\\n\\nType of data{}'.format(type(iris_dataset['data']))\n     +'\\n\\nSize of data{}'.format(iris_dataset['data'].shape)) ","09d2c8b6":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\n    iris_dataset['data'], iris_dataset['target'], random_state=0)","b9ade60c":"print('X_train shape:{}'.format(X_train.shape))\nprint('y_train shape:{}'.format(y_train.shape))","3bf307ca":"print('X_test shape:{}'.format(X_test.shape))\nprint('y_test shape:{}'.format(y_test.shape))","fd9c58c8":"# Convert into dataframe and plot scatter plot using pandas\niris_df = pd.DataFrame(X_train, columns=iris_dataset.feature_names)\ngrr = pd.plotting.scatter_matrix(iris_df, c = y_train, figsize=(15, 15), marker='o',\n                                 hist_kwds={'bins':20}, s = 60, alpha = 0.8)","a8793551":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)","bca86d10":"knn.fit(X_train, y_train)","740b76a2":"X_new = np.array([[5, 2.9, 1, 0.2]])\nprint('Shape of X_new:{}'.format(X_new.shape))","5d8c9fe6":"prediction=knn.predict(X_new)\nprint('Prediction:{}'.format(prediction)\n     +'\\nPrecdicted target name:{}'.format(iris_dataset['target_names'][prediction]))","9dab7d25":"y_preds = knn.predict(X_test)\nprint('Test set predictions:\\n{}'.format(y_preds))","48b26730":"print('Test set score:{:.2f}'.format(np.mean(y_preds==y_test)))","48593e22":"# using 'score' method of KNN\nprint('Test set score:{:.2f}'.format(knn.score(X_test, y_test)))","cdf20983":"data = {'Name':[\"abir\", 'fatema', 'zakir', 'eva'],\n       'age':['24', '20', '60', '50']}\ndf = pd.DataFrame(data)\ndisplay(df)","bb86443f":"# Chapter 1\nBook name: Introduction to Machine Learning with Python\n\nAuthors: Andreas C Muller, & Sarah Guido","de2ccab0":"# Building a Model: KNN","646de999":"# Prediction and Evaluation"}}