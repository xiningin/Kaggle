{"cell_type":{"07d3cefa":"code","e25804c8":"code","adc3ea88":"code","81720dc6":"code","f8752b06":"code","20c9406e":"code","a2934b5b":"code","97089607":"code","64c441c9":"code","840af2e4":"code","25a745b1":"code","0f41964d":"code","379588a1":"code","aae164c0":"markdown","1be86440":"markdown","23dc7a8c":"markdown","4ce559a3":"markdown","49ad942e":"markdown","d1edd42c":"markdown"},"source":{"07d3cefa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n","e25804c8":"df=pd.read_csv(\"..\/input\/brasilian-houses-to-rent\/houses_to_rent.csv\")","adc3ea88":"df.head()","81720dc6":"df.dtypes","f8752b06":"list=[]\nfor i in df[\"total\"]:\n    x=i[2:]\n    x=x.replace(\",\",\"\")\n    list.append(x)\ndf=df.drop(\"total\",axis=1)\ndf[\"total rent\"]=list   \ndf[\"total rent\"]=df[\"total rent\"].astype(int)\ndf['animal'] = df['animal'].map({'acept': 1, 'not acept': 0})\ndf['furniture'] = df['furniture'].map({'furnished': 1, 'not furnished': 0})\ndf.head()","20c9406e":"df=df.drop([\"Unnamed: 0\",\"hoa\",\"rent amount\",\"property tax\",\"fire insurance\"],axis=1)\ndf[\"floor\"]=df[\"floor\"].replace(\"-\",\"0\")\ndf[\"floor\"]=df[\"floor\"].astype(int)\ndf.head()","a2934b5b":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),annot=True)","97089607":"column_list=[\"city\",\"area\",\"rooms\",\"bathroom\",\"parking spaces\",\"floor\",\"animal\",\"furniture\"]","64c441c9":"for i in column_list:\n    plt.subplots()\n    plt.scatter(df[i]\/df[i].max(),df[\"total rent\"]\/df[\"total rent\"].max())\n    plt.xlabel(i)\n    plt.ylabel(\"total rent\")\n\n    ","840af2e4":"y=df[\"total rent\"]\nx=df[[\"city\",\"area\",\"rooms\",\"bathroom\",\"parking spaces\",\"floor\",\"animal\",\"furniture\"]]","25a745b1":"\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nlr=LinearRegression()\nfor a in np.arange(1,6):\n    pl=PolynomialFeatures(degree=a)\n    x_train_polly=pl.fit_transform(x_train)\n    lr.fit(x_train_polly,y_train)\n    x_test_polly=pl.fit_transform(x_test)\n    y_head=lr.predict(x_test_polly)\n    from sklearn.metrics import r2_score\n    print(\"for {}. degree r^2 score is\".format(a),r2_score(y_test,y_head))\n    plt.subplots()\n    plt.figure(figsize=(15,10))\n    ax1=sns.distplot(y_test,hist=False,color=\"r\",label=\"Actual value\")\n    sns.distplot(y_head,hist=False,color=\"g\",label=\"Predicted Value\")\n    plt.title(\"{}.degree\".format(a))\n    ","0f41964d":"from sklearn.ensemble import RandomForestRegressor\nrf= RandomForestRegressor(n_estimators=100,random_state=42)\nrf.fit(x_train,y_train)\ny_head=rf.predict(x_test)\nprint(\"r^2 score is \",r2_score(y_test,y_head))\nplt.figure(figsize=(15,10))\nax1=sns.distplot(y_test,hist=False,color=\"r\",label=\"Actual value\")\nsns.distplot(y_head,hist=False,color=\"g\",label=\"Predicted Value\")","379588a1":"value_list=[]\nfor i in [\"city\",\"area\",\"rooms\",\"bathroom\",\"parking spaces\",\"floor\",\"animal\",\"furniture\"]:\n    value=int(input(\"{} number please:\".format(i)))\n    value_list.append(value)\nvalue_list\nprint(\"the rent is\",rf.predict([value_list]),\"$\")    ","aae164c0":"Linear or polynomial regressions are not efficient for this dataset as we can see.So lets use random forest.","1be86440":"It will be first time that I use ML models, I hope you will like it :)\n\nLoading data and looking details","23dc7a8c":"As soon as possible I will split data as test and train then I will write all the code again.","4ce559a3":"Now we can look the correlations","49ad942e":"Lets predict","d1edd42c":"It is not bad I think we can use this model."}}