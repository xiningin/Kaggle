{"cell_type":{"8000d2de":"code","1e4b84f9":"code","71a5cdaa":"code","94e601cd":"code","aaf99d22":"code","51b237f3":"code","2b261c08":"code","98b681a6":"code","0235a822":"code","c2cdd78c":"code","ba3cc286":"code","79da4ddd":"code","a8e22f0f":"code","80c96767":"code","b15a5134":"code","0cc2b1a4":"code","1127e36f":"code","5f3e7615":"code","efce2f10":"code","ad61cefe":"code","58cc4e0c":"code","16983326":"code","a7711c58":"code","bfe42573":"code","3f0029aa":"code","b9719e65":"code","1a31bd69":"code","6b597ac7":"code","9bb6b021":"code","5a609827":"code","695c3728":"code","785825d8":"code","1dc29399":"code","74d1bd3a":"code","95037628":"code","cb715b07":"code","2b0f4f64":"code","b6f5709c":"code","6f1d58f2":"code","0cfa809a":"code","725402c8":"markdown","a34a4e08":"markdown","2b6fde79":"markdown","3a1d3d58":"markdown"},"source":{"8000d2de":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","1e4b84f9":"def fetch_data():\n    train_df = pd.read_csv('..\/input\/train.csv')\n    test_df = pd.read_csv('..\/input\/test.csv')\n    samp_df = pd.read_csv('..\/input\/sample_submission.csv')\n    return train_df, test_df, samp_df\ntrain_df,test_df,samp_df = fetch_data()","71a5cdaa":"train_df.head()","94e601cd":"train_df.shape, test_df.shape","aaf99d22":"train_df.info()","51b237f3":"train_df.loc[:, train_df.dtypes == object].columns","2b261c08":"train_df.describe()","98b681a6":"train_df['target'].hist(bins=40)","0235a822":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.preprocessing import StandardScaler","c2cdd78c":"train_x = train_df.iloc[:,2:]\ntrain_y = train_df.iloc[:,1]\ntrain_x.shape, train_y.shape","ba3cc286":"train_x.describe()","79da4ddd":"train_y.head()","a8e22f0f":"pipeline = Pipeline([\n    ('imputer', Imputer(strategy='median')),\n    ('scaler', StandardScaler()),\n])","80c96767":"train_x_prepared = pipeline.fit_transform(train_x).astype('float64')\ntrain_x_prepared","b15a5134":"train_y_prepared = train_y.values.astype('float64')\ntrain_y_prepared","0cc2b1a4":"train_x_prepared.shape, train_y_prepared.shape","1127e36f":"from sklearn.model_selection import cross_val_score","5f3e7615":"def display_scores(scores):\n    print(\"Scores:\", scores)\n    print(\"Mean:\", scores.mean())\n    print(\"Standard deviation:\", scores.std())","efce2f10":"def rmsle(y, y0):\n    assert len(y) == len(y0)\n    return np.sqrt(np.mean(np.power(np.log1p(y)-np.log1p(y0), 2)))\n\ny1 = np.random.rand(1000000)\ny2 = np.random.rand(1000000)\nerr = rmsle(y1,y2)\nerr","ad61cefe":"from sklearn.metrics import make_scorer\n\nrmsle_score = make_scorer(rmsle, greater_is_better=False)","58cc4e0c":"from sklearn.svm import SVR\n\nsvm_reg = SVR()\nsvm_scores = cross_val_score(svm_reg,train_x_prepared,train_y_prepared,scoring=rmsle_score,cv=5)","16983326":"svm_rmsle_scores = -svm_scores\ndisplay_scores(svm_rmsle_scores)","a7711c58":"from sklearn.ensemble import RandomForestRegressor\n\nforest_reg = RandomForestRegressor(random_state=42)\nforest_scores = cross_val_score(forest_reg, train_x_prepared, train_y_prepared, scoring=rmsle_score, cv=5)","bfe42573":"forest_rmsle_scores = -forest_scores\ndisplay_scores(forest_rmsle_scores)","3f0029aa":"from sklearn.model_selection import GridSearchCV\n\nparam_grid = [\n    {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6, 8]},\n    {'bootstrap': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]},\n  ]\n\nforest_reg = RandomForestRegressor(random_state=42)\ngrid_search = GridSearchCV(forest_reg, param_grid, cv=5,\n                           scoring=rmsle_score, return_train_score=True)\ngrid_search.fit(train_x_prepared, train_y_prepared)","b9719e65":"grid_search.best_params_","1a31bd69":"grid_search.best_estimator_","6b597ac7":"cvres = grid_search.cv_results_\nfor mean_score, params in zip(cvres[\"mean_test_score\"], cvres[\"params\"]):\n    print((-mean_score), params)","9bb6b021":"-grid_search.best_score_","5a609827":"test_df.head()","695c3728":"test_x = test_df.iloc[:,1:]\ntest_x.shape","785825d8":"test_x_prepared = pipeline.fit_transform(test_x).astype('float64')","1dc29399":"preds = grid_search.best_estimator_.predict(test_x_prepared)","74d1bd3a":"preds.shape","95037628":"samp_df.head()","cb715b07":"subm_df = samp_df.copy()","2b0f4f64":"subm_df.shape","b6f5709c":"subm_df['target'] = preds","6f1d58f2":"subm_df.head()","0cfa809a":"subm_df.to_csv('submission.csv',index=False)","725402c8":"## Submit predictions","a34a4e08":"## Run models","2b6fde79":"## Data preparation","3a1d3d58":"## Data exploration"}}