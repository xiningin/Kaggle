{"cell_type":{"3aa3841f":"code","af74d9c4":"code","6b0be6e9":"code","5f3273a2":"code","bc527976":"code","0781b2cf":"code","98d811a6":"code","6c02729e":"code","50291294":"code","e9c09eb0":"code","e93fb7a5":"code","87b3e5f6":"code","a6a2c3a0":"code","7e2b25b8":"code","a3328349":"code","040ef907":"code","8c32f7b9":"code","4f4756d7":"code","73222298":"code","659286d0":"code","87a36672":"code","bb26ab3b":"code","58367edb":"code","60a040b8":"markdown","9f4b425e":"markdown","e2a38201":"markdown","3dec37e9":"markdown","8a4a67eb":"markdown"},"source":{"3aa3841f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af74d9c4":"data = pd.read_csv(\"\/kaggle\/input\/bmw-used-car-listing\/bmw.csv\")\ndata.head()","6b0be6e9":"data.info()","5f3273a2":"data.corr()","bc527976":"f,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.4f',ax=ax)\nplt.show() ","0781b2cf":"data.head(10)","98d811a6":"data.columns","6c02729e":"#Line Plot\n#color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = style of line\ndata.price.plot(kind = \"line\", color = \"g\", label = 'price', linewidth = 1, alpha = 0.7, grid = True, linestyle = \"-\")\ndata.mileage.plot(color = \"r\", label = \"mileage\", linewidth = 1, alpha = 0.7, grid = True, linestyle = \":\")\nplt.legend(loc=\"upper right\")     #legend = puts label into plot\nplt.xlabel(\"price\")         #label = name of label\nplt.ylabel(\"mileage\")\nplt.title(\"Line Plot\")            #title = title of plot\nplt.show()","50291294":"#Scatter Plot\n# x = tax , y = engineSize\ndata.plot.scatter(\"tax\",\"engineSize\")\nplt.xlabel(\"tax\")\nplt.ylabel(\"engineSize\")\nplt.show()","e9c09eb0":"#Histogram\n#bins = number of bar in figure\ndata.mileage.plot(kind = \"hist\", bins = 60)\nplt.show()","e93fb7a5":"#clf() = cleans it up again you can start a fresh\ndata.mileage.plot(kind = \"hist\", bins = 50)\nplt.clf()\n#We cannot see plot due to clf()","87b3e5f6":"#create dictionary and look its keys and values\ndictionary = {\"turkey\" : \"istanbul\", \"germany\" : \"berlin\", \"spain\" : \"madrid\", \"usa\": \"newyork\"}\nprint(dictionary.keys())\nprint(dictionary.values())","a6a2c3a0":"#Keys have to be immutable objects like string, boolean, float, integer or tubles\n#List is not immutable\n#Keys are unique\ndictionary[\"turkey\"] = \"tekirda\u011f\"\nprint(dictionary)\ndictionary[\"russia\"] = \"moscow\"\nprint(dictionary)\n#del dictionary[\"usa\"]\nprint(dictionary)\nprint(\"germany\" in dictionary)\ndictionary.clear()\nprint(dictionary)","7e2b25b8":"#In order to run all code you need to take comment this line\n#del dictionary         #delete entire dictionary\nprint(dictionary)       #it gives error because dictionary is deleted","a3328349":"data = pd.read_csv(\"\/kaggle\/input\/bmw-used-car-listing\/bmw.csv\")","040ef907":"series = data[\"price\"]\nprint(type(series))\ndata_frame = data[[\"price\"]]\nprint(type(data_frame))","8c32f7b9":"#Comparison operator\nprint(3 < 2)\nprint(3!=2)\n#Boolean operators\nprint(True and False)\nprint(True or False)","4f4756d7":"# 1 - Filtering Pandas data frame\nx = data[\"price\"] > 80000          #There are only 7 cars who have higher price value than 80000\ndata[x]","73222298":"# 2 - Filtering pandas with logical_and\n# There are only 2 cars who have higher price value than 80000 and higher mileage value than 3000\ndata[np.logical_and(data[\"price\"]>80000, data[\"mileage\"]>3000)]\n","659286d0":"#This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['price']>80000) & (data[\"mileage\"]>3000)]","87a36672":"#Stay in loop if condition(i is not equal 5) is true\ni = 0\nwhile i != 5:\n    print(\"i is: \", i)\n    i= i+1\n    \nprint(i, \"is equal to 5\")","bb26ab3b":"#Stay in loop if condition(i is not euqal 5) is true\nlis = [1,2,3,4,5]\n\nfor i in lis:\n    print(\"i is : \", i)\nprint(\"\")\n\n#Enumerate index and value of list\n#index : value = 0:1, 1:2 , 2:3 ,3:4 ,4:5\nfor index , value in enumerate(lis):\n    print(index, \" : \", value)\n    print(\"\")\n    \n    \n#For dictionaries\n#We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {\"spain\":\"madrid\",\"france\":\"paris\"}\nfor key,value in dictionary.items():\n    print(key,\":\",value)\nprint(\"\")\n\n","58367edb":"averageWage = sum(data.price)\/len(data.price)\ndata[\"price_level\"] = [ \"To Expensive\" if i > averageWage else \"Cheap\" for i in data.price]\ndata.loc[:10,[\"price_level\",\"price\",\"year\"]]","60a040b8":"Before continuing with pandas, we need to learn logic,control flow and filtering.\nComparison operator : ==, < , > ,<=\nBoolean operators: and,or,not\nFiltering pandas","9f4b425e":"**WHILE AND FOR LOOPS**\n\nWe will learn the most basic while and for loops","e2a38201":"**DICTIONARY**\nWhy do we need dictionary ? \n\n* It has \" key \" and \" value \"\n* Faster than lists (What is key and value ? Example:\n* dictionary = {\"spain\" : \"madrid\"}\n* Key is spain\n* value is madrid\n\n**It's that easy**\nLets practice some other properties like keys(),values(),update,add,check,remove key,remove all entries and remove dictionary.","3dec37e9":"**PANDAS**\n\nWhat do we need to know about pandas ? \n* CSV: comma - separated values\n","8a4a67eb":"In this part, you learn:\n\n* How to import csv file\n* plotting line,scatter, and histogram\n* basic dictionary features\n* basic pandas features like filtering that is actually something always used and main for being data scientist\n* While and for loops"}}