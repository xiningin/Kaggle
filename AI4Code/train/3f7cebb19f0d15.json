{"cell_type":{"f1fd9027":"code","4cbdc831":"code","5f686115":"code","ceaf4ed0":"code","4a83ecfe":"code","1176e744":"code","53b4b718":"code","a76aa788":"code","6c66a5e6":"code","96866211":"code","038a48d9":"code","666cb1b0":"code","262794f2":"code","c53c3249":"code","15381480":"code","23ac7412":"code","caba3567":"code","88dbb6e3":"code","b708204d":"code","88362986":"code","217e45b7":"code","9e8ce893":"code","47b30934":"code","4dbce071":"code","bcf76c1b":"code","76e6a58e":"code","12e08e92":"code","726bd46f":"code","f5d706bd":"code","2d3db10a":"code","d8f7ade4":"code","2680d754":"code","6b64ac2d":"code","23c6dab0":"code","2a2fb2d4":"code","3eb4a497":"code","2acfbe03":"code","890976c5":"code","0a69a757":"code","197a1866":"code","55ee3bba":"code","b7268aed":"code","c8a5a586":"code","a5f0c4cf":"code","2016859b":"code","cb427860":"code","73ffc46b":"code","185c385a":"code","ae9b1dfd":"code","42ca9229":"code","06072d19":"code","12ef857b":"code","d94aaafa":"code","a44070d5":"code","91caf79a":"code","030f9cab":"code","2a23ec80":"code","66883780":"code","ceab67a0":"code","0caeb72f":"code","92979b08":"code","258cc906":"markdown","b9a3de0b":"markdown","dde9c680":"markdown","2053a29a":"markdown","4a6803f4":"markdown","6c3bfc1c":"markdown","752951dc":"markdown","16d3a56d":"markdown","827d6cfd":"markdown","80b89c83":"markdown","2052f8d0":"markdown","9ab33ce0":"markdown","6e9f1d66":"markdown","dfb77d04":"markdown","74b71637":"markdown","66c962b2":"markdown","801cc7a4":"markdown","619a31ce":"markdown","d27863bf":"markdown","03db7e45":"markdown","3c90b9c8":"markdown"},"source":{"f1fd9027":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4cbdc831":"data = pd.read_excel('\/kaggle\/input\/covid19\/dataset.xlsx')","5f686115":"data.shape","ceaf4ed0":"data.describe","4a83ecfe":"data.tail()","1176e744":"data.columns = [x.lower().strip().replace(',','').replace(' ','_') for x in data.columns]\ndata.columns","53b4b718":"data.isnull().sum()","a76aa788":"total_cells = np.product(data.shape)\ntotal_missing = data.isnull().sum()\n\n\npercentage_missing = (total_missing\/total_cells)*100\npercentage_missing","6c66a5e6":"missing_values_count = data.isnull().sum()\ntotal_missing = missing_values_count.sum()\n\n# total of % data missing\n(total_missing\/total_cells)*100","96866211":"#50 is just a random value\npercentage_missing.sort_values(ascending=True).head(50)","038a48d9":"correlations = data.corr(method='pearson')\ncorrelations","666cb1b0":"import seaborn as sb\nplt.figure(figsize = (20, 8))\nsns.heatmap(correlations, cmap = plt.cm.RdYlBu_r, vmin = -0.25, annot = False, vmax = 0.8)","262794f2":"s = (data.dtypes == 'object')\nobject_cols = list(s[s].index)\nobject_cols","c53c3249":"for col in object_cols:\n    data[col] = data[col].astype('category')\n    data[col] = data[col].cat.codes","15381480":"data.tail()","23ac7412":"correlations = data.corr(method='pearson')\ncorrelations","caba3567":"cor_target = abs(correlations['sars-cov-2_exam_result'])\ncor_target.sort_values(ascending=False).head(50)","88dbb6e3":"data = data.fillna(data.median())","b708204d":"data.tail()","88362986":"#22 features. Just a random number\ndata_model = data[['sars-cov-2_exam_result', 'patient_age_quantile', 'patient_addmited_to_regular_ward_(1=yes_0=no)', 'patient_addmited_to_semi-intensive_unit_(1=yes_0=no)', 'patient_addmited_to_intensive_care_unit_(1=yes_0=no)', 'influenza_b', 'respiratory_syncytial_virus', 'influenza_a', 'rhinovirus\/enterovirus', 'inf_a_h1n1_2009', 'coronavirusoc43', 'coronavirus229e', 'parainfluenza_4', 'adenovirus', 'chlamydophila_pneumoniae', 'parainfluenza_3', 'coronavirus_hku1', 'coronavirusnl63', 'parainfluenza_1', 'bordetella_pertussis', 'parainfluenza_2', 'metapneumovirus']]\ndata_model.isnull().sum()","217e45b7":"data_model.shape","9e8ce893":"data_model['sars-cov-2_exam_result'].value_counts()","47b30934":"data_model['sars-cov-2_exam_result'].value_counts().plot(kind='bar', title='Count (target)')","4dbce071":"# Class count\ncount_class_0, count_class_1 = data_model['sars-cov-2_exam_result'].value_counts()\n\n# Divide by class\nclass_0 = data_model[data_model['sars-cov-2_exam_result'] == 0]\nclass_1 = data_model[data_model['sars-cov-2_exam_result'] == 1]","bcf76c1b":"class_0_under = class_0.sample(count_class_1)\nnew_data_under = pd.concat([class_0_under, class_1], axis=0)\n\nprint('Under-sampling:')\nprint(new_data_under['sars-cov-2_exam_result'].value_counts())\n\nnew_data_under['sars-cov-2_exam_result'].value_counts().plot(kind='bar', title='Count (target)')","76e6a58e":"data_model = new_data_under\ndata_model['sars-cov-2_exam_result'].value_counts()","12e08e92":"from sklearn.model_selection import cross_val_score, KFold, train_test_split\nX = data_model.drop(['sars-cov-2_exam_result'], axis=1)\ny = data_model['sars-cov-2_exam_result'].copy()","726bd46f":"X.shape","f5d706bd":"y.shape","2d3db10a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)","d8f7ade4":"X_train.shape","2680d754":"X_test.shape","6b64ac2d":"results_dict = {}","23c6dab0":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn.naive_bayes import GaussianNB\nkf = KFold(n_splits=10, random_state=0, shuffle=True)","2a2fb2d4":"lr = LogisticRegression(C=0.5, random_state=1)\nmean_auc_lr = cross_val_score(lr, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nresults_dict['Logistic Regression'] = mean_auc_lr\nresults_dict","3eb4a497":"knn = KNeighborsClassifier(n_neighbors=5)\nmean_auc_knn = cross_val_score(knn, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nresults_dict['KNN'] = mean_auc_knn\nresults_dict","2acfbe03":"svm = svm.SVC()\nmean_auc_svm = cross_val_score(svm, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nresults_dict['SVM'] = mean_auc_svm\nresults_dict","890976c5":"nb = GaussianNB()\nmean_auc_nb = cross_val_score(nb, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nresults_dict['NB'] = mean_auc_nb\nresults_dict","0a69a757":"x = ['Logistic Regression', 'KNN', 'SVM', 'NB']\ny = [results_dict['Logistic Regression'], results_dict['KNN'], results_dict['SVM'], results_dict['NB']]\nplt.title(\"AUC comparison\")\nplt.ylabel(\"AUC\")\nplt.bar(x,y)","197a1866":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import mean_absolute_error\nnb.fit(X_train, y_train)\npredicted = nb.predict(X_test)\nroc_auc = roc_auc_score(y_test, predicted)\nmae = mean_absolute_error(y_test, predicted)\n\nprint(\"Mean Absolute Error: {} | ROC AUC: {}\".format(mae, roc_auc))","55ee3bba":"from sklearn.metrics import plot_confusion_matrix\n\ndisp = plot_confusion_matrix(nb, X_test, y_test,\n                                 display_labels=data_model['sars-cov-2_exam_result'],\n                                 cmap=plt.cm.Blues)\n\ndisp.ax_.set_title(\"Confusion Matrix\")\ndisp.confusion_matrix\nplt.show()","b7268aed":"from sklearn.metrics import confusion_matrix\nconfusion = confusion_matrix(y_test, predicted)\nconfusion","c8a5a586":"TP = confusion[1, 1]\nTN = confusion[0, 0]\nFP = confusion[0, 1]\nFN = confusion[1, 0]","a5f0c4cf":"sensitivity = TP\/(TP+FN)\nspecificity = TN\/(TN+FP)\n\n\"Sensitivity: {} | Specifictity: {}\".format(sensitivity, specificity)","2016859b":"#17 features. Just a random number\nnew_data_model = data[['sars-cov-2_exam_result', 'pco2_(arterial_blood_gas_analysis)', 'ph_(arterial_blood_gas_analysis)', 'po2_(arterial_blood_gas_analysis)', 'arteiral_fio2', 'ionized_calcium', 'leukocytes', 'platelets', 'cto2_(arterial_blood_gas_analysis)', 'total_co2_(arterial_blood_gas_analysis)', 'hco3_(arterial_blood_gas_analysis)', 'monocytes', 'eosinophils', 'lipase_dosage', 'segmented', 'ferritin', 'urine_-_density']]","cb427860":"new_data_model.shape","73ffc46b":"correlations = new_data_model.corr(method='pearson')\ncorrelations","185c385a":"plt.figure(figsize = (20, 8))\nsns.heatmap(correlations, cmap = plt.cm.RdYlBu_r, vmin = -0.25, annot = True, vmax = 0.8)","ae9b1dfd":"X = new_data_model.drop(['sars-cov-2_exam_result'], axis=1)\ny = new_data_model['sars-cov-2_exam_result'].copy()","42ca9229":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)","06072d19":"new_result_dict = {}","12ef857b":"mean_auc_lr = cross_val_score(lr, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nnew_result_dict['Logistic Regression'] = mean_auc_lr\nnew_result_dict","d94aaafa":"mean_auc_knn = cross_val_score(knn, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nnew_result_dict['KNN'] = mean_auc_knn\nnew_result_dict","a44070d5":"mean_auc_svm = cross_val_score(svm, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nnew_result_dict['SVM'] = mean_auc_svm\nnew_result_dict","91caf79a":"mean_auc_nb = cross_val_score(nb, X_train, y_train, n_jobs=-1, cv=kf, scoring='roc_auc').mean()\nnew_result_dict['NB'] = mean_auc_nb\nnew_result_dict","030f9cab":"x = ['Logistic Regression', 'KNN', 'SVM', 'NB']\ny = [new_result_dict['Logistic Regression'], new_result_dict['KNN'], new_result_dict['SVM'], new_result_dict['NB']]\nplt.title(\"AUC comparison\")\nplt.ylabel(\"AUC\")\nplt.bar(x,y)","2a23ec80":"lr.fit(X_train, y_train)\npredicted = lr.predict(X_test)\nroc_auc = roc_auc_score(y_test, predicted)\nmae = mean_absolute_error(y_test, predicted)\n\nprint(\"Mean Absolute Error: {} | ROC AUC: {}\".format(mae, roc_auc))","66883780":"disp = plot_confusion_matrix(lr, X_test, y_test,\n                                 display_labels=new_data_model['sars-cov-2_exam_result'],\n                                 cmap=plt.cm.Blues)\n\ndisp.ax_.set_title(\"Confusion Matrix\")\ndisp.confusion_matrix\nplt.show()","ceab67a0":"confusion = confusion_matrix(y_test, predicted)\nconfusion","0caeb72f":"TP = confusion[1, 1]\nTN = confusion[0, 0]\nFP = confusion[0, 1]\nFN = confusion[1, 0]","92979b08":"sensitivity = TP\/(TP+FN)\nspecificity = TN\/(TN+FP)\n\n\"Sensitivity: {} | Specifictity: {}\".format(sensitivity, specificity)","258cc906":"## Under-sampling. Based on: https:\/\/www.kaggle.com\/rafjaa\/resampling-strategies-for-imbalanced-datasets","b9a3de0b":"## Encoding the category values","dde9c680":"## Total % of missing values","2053a29a":"## Defining X and y","4a6803f4":"## We are going to use 4 different classifiers:\n* Logistic Regression\n* KNN\n* SVM\n* Naive Bayes","6c3bfc1c":"### We create a dictionary to save the classifiers results","752951dc":"## % of missing values for each column","16d3a56d":"## Checking the features correation","827d6cfd":"## We fill the Nan values with the features median","80b89c83":"### The correlation between the new features","2052f8d0":"## Sorting by missing values (%)","9ab33ce0":"## Checking the features correlation after the encodding","6e9f1d66":"## Notbook overview\n### This notebook features an analysis of the dataset provided by the Hospital Israelita Albert Einstein. The dataset contains anonymized data from patients seen at the Hospital Israelita Albert Einstein, at S\u00e3o Paulo, Brazil, and who had samples collected to perform the SARS-CoV-2 RT-PCR and additional laboratory tests during a visit to the hospital.","dfb77d04":"## Finding the category values","74b71637":"## Checking the correlation between the features and the target (exam result)","66c962b2":"![](https:\/\/www.health.qld.gov.au\/__data\/assets\/image\/0033\/947454\/varieties\/800-lg.jpg)","801cc7a4":"## Conclusion\n\n### Here we try 2 approaches. First, selecting the features with less missing values. Second, selecting the features with the highest correlation with the target. \n\n### We fill the missing values with the features median and tested 4 different classifiers using k-fold cross-validation, with k = 10.\n\n### Both approaches achieve similar results, therefore the main issue are in the features. The number of missing values are high, making it necessary to try different strategies.\n\n### Despite the feature problems, the classifiers achieved good specificity values","619a31ce":"## First, let's try those features that had less missing values","d27863bf":"## The data is highly imbalanced","03db7e45":"## Let's test new features. These are the most correlated with the target (sars-cov-2_exam_result), as seen previously","3c90b9c8":"## In the medical domain, two measures are widely used: **Sensitivity** and **Specificity**. To calculate them we need:\n* True Positive (TP)\n* True Negative (TN)\n* False Positive (FP)\n* Flase Negative (FN)\n* Sensitivity = TP\/(TP+FN)\n* Specificity = TN\/(TN+FP)"}}