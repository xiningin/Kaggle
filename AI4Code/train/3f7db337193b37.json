{"cell_type":{"9ea735fe":"code","5b8626ff":"code","630f17e3":"code","fca96eb1":"code","660c9a87":"code","8c15f16b":"code","44709a36":"code","af61df1a":"code","6c01f0d8":"code","72568a5c":"code","dab5d431":"code","e2a4c6bb":"code","65b4b501":"markdown","698e1e7d":"markdown","43240fb0":"markdown","a225210d":"markdown","cbd18fa8":"markdown","3d0e02cb":"markdown","012328b6":"markdown","0e4535d9":"markdown","b70db911":"markdown","7aa85fb7":"markdown","654b0254":"markdown","7bf45506":"markdown","df7b3f9a":"markdown","f7bf9016":"markdown","d17300a4":"markdown","b69733e4":"markdown"},"source":{"9ea735fe":"# Setup environment \nimport pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\n# Set matplotlib config\n%matplotlib inline\nplt.style.use('seaborn')\nprint(\"Setup Complete\")","5b8626ff":"# Load data\ndata = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\ndata.head()\n","630f17e3":"# Aggregate data  \ndata_year = data.groupby([\"release_year\",\"type\"],as_index = False).size()\n\n# Filter to the recent movies and series (newest than 2000)\ndata_year = data_year[data_year.release_year >= 2000]\n\n# Set size\nplt.figure(figsize=(20,6))\n\n# Print a lineplot\nsns.lineplot(x=\"release_year\", y=\"size\", hue=\"type\", data=data_year)\n# Set some features\nplt.xlabel(\"Release year\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Release of Movies and TV Shows\", size=24); # Use semicolon when you want to avoid warning message\n\n# We go to add a special text in the final of the line marking that something special happened here\nplt.annotate('COVID effect?', xy=(2020, 30), xytext=(2016, 50), arrowprops={'facecolor':'red', 'shrink':0.05}); ","fca96eb1":"# To know the countries where are produced most movies and TV shows\ncountries = data[['country','type']].copy()\n\n# We can see that in some cases, many countries produce movies and tv shows\n#print(countries)\n\n# We can split data by country. First we can create a list of strings, to after use explode\ncountries['country'] = countries['country'].str.split(',')\ncountries_split = countries.explode('country')\n\n# We can see the result\nprint(countries_split)","660c9a87":"# We can group based on country column\ndata_country = countries_split.groupby(['country','type'],as_index = False).size()\n\n# We go to create two barplot with about movies and other with respect tv series\ncountry_tv = data_country[data_country['type'] == 'TV Show'].sort_values('size',ascending = False).reset_index()[0:10]\ncountry_series = data_country[data_country['type'] == 'Movie'].sort_values('size',ascending = False).reset_index()[0:10]\n\n# We back to build data_country with the countries with more movies and tv shows\ndata_country = pd.concat([country_tv,country_series])\n\n#Set size\nplt.figure(figsize=(20,6))\n\n# Create a barplot\nsns.barplot(x='country', y=\"size\", hue=\"type\", data=data_country);\nplt.xlabel('Country')\nplt.ylabel('Number')\nplt.title('Numbers of Movies and TV shows by country', size=24);\nplt.legend(loc='upper right');","8c15f16b":"# Now, I want to identify the mainstream genders. This information is available in the column \"listed_in\" in an grouped way. Thus, we need to carry out a process to ungroup it.\n\n# To ungroup\ndata_genders = data[\"listed_in\"]\ndata_list = data_genders.str.split(\",\",expand = True)\ndata_list = data_list.rename(columns={0: \"First\", 1: \"Second\",2 :\"Third\"})\n\n# Create a dictionary with genders and frequency\ngender_list = pd.concat([data_list[\"First\"],data_list[\"Second\"],data_list[\"Third\"]],ignore_index = True).dropna()\nungrouped = gender_list.groupby(gender_list).size().sort_values(ascending = False)\n#print(ungrouped)\n\n# It was detected a problem with \"Dramas\" and \" Dramas\".  There is a whitespace in the beginning of the word.\ngender_list2 = gender_list.map(lambda p: p.strip())\nungrouped2 = gender_list.groupby(gender_list2).size().sort_values(ascending = False)\n#print(ungrouped2)\n\n# Here is the code for our plit\n\n# Set size\nplt.figure(figsize=(20,6))\n\n# We have a barplot\nungrouped2.plot.bar(x='lab', y='val', rot=0);\nplt.xticks(rotation=90);\nplt.xlabel('Genders')\nplt.ylabel('Frequency')\nplt.title('Genders in Movies and TV shows', size=24);","44709a36":"# Finally, I will create a Wordcloud with the text given in description. We go to use all the descriptions. \n\n# First, we create a text with the entire information\ntext = \" \".join(review for review in data.description)\n# We can see the length of our variable\nprint(len(text))\n\n# Create and generate a word cloud image\nwordcloud = WordCloud(background_color=\"white\").generate(text)\n\n# Display the generated image\nplt.figure(figsize=(20,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title('Most popular words according description of Movies and TV shows', size=24);\nplt.show()","af61df1a":"# We transform data\ndata_rating = data[['rating']].groupby('rating',as_index = False).size()\nprint(data_rating.head())\n\n# We can create a pieplot\nplt.figure(figsize=(20,6))\n\n# We consider the creation of a special legend because we have many labels\npatches, texts = plt.pie(data_rating['size'], startangle=90, radius=1.2)\nlabels = ['{0} - {1:1.2f} %'.format(i,j) for i,j in zip(data_rating['rating'], (data_rating['size']\/data_rating['size'].sum())*100)]\n\n# We add a legend to show data\nsort_legend = True\nif sort_legend:\n    patches, labels, dummy =  zip(*sorted(zip(patches, labels, data_rating['size']),\n                                          key=lambda x: x[2],\n                                          reverse=True))\n\nplt.legend(patches, labels, loc='best', bbox_to_anchor=(-0.1, 1.),\n           fontsize=12)\nplt.title('Proportion of Movies and TV shows based on rating', size=24);\nplt.show()","6c01f0d8":"# As the same case of countries, sometimes we have more than one director per movie.\ndata_directors = data[data['type'] == 'Movie'][['director']]\n#print(data_directors)\n\n# We need to split them\ndata_directors['director'] = data_directors['director'].str.split(',')\ndata_directors = data_directors.explode('director')\n#print(data_directors)\n\n# We obtain the final dataset\ndirectors = data_directors.groupby('director',as_index = False).size().sort_values('size',ascending = False)\n\n# Create the barplot with the 10 most popular directors\nplt.figure(figsize=(20,6))\nsns.barplot(x='director', y=\"size\", data=directors.iloc[0:10]);\nplt.title(\"Most popular directors of Netflix's Movies\", fontsize=24)\nplt.xlabel('Directors')\nplt.ylabel('Number of movies')\nplt.show()","72568a5c":"# Handle data. We only consider Movies\ndata_duration_movie = data[data['type'] == 'Movie'][['duration','release_year']]\n\n# We have data in minutes\n#print(data_duration.head())\n\n# We go to ensure that data has only minute format\n#print(data_duration[~data_duration['duration'].str.contains(\"min\")]) # We obtain an empty dataframe\n\n# Now, we convert column in integer\ndata_duration_movie['duration'] = data_duration_movie['duration'].str.replace(' min', '').astype(int)\n\n# We will do the same with tv shows data.\ndata_duration_tv = data[data['type'] == 'TV Show'][['duration','release_year']]\n\n# We have data in seasons\n#print(data_duration_tv.head())\n\n# Now, we convert column in integer. Keep in mind that we have \"Season\" and \"Seasons\". We need to remove both cases\ndata_duration_tv['duration'] = data_duration_tv['duration'].str.replace('Season.*', '',regex=True).astype(int)\n\n# Finally, we can create a histogram and a barplot to show data\nfig, ax = plt.subplots(1,2, figsize=(20, 6))\n\n# First plot\nf1 = sns.histplot(x = data_duration_movie['duration'],kde = True,bins = 20,ax = ax[0]);\nf1.set_title(\"Duration of Movies\", fontsize=24)\nf1.set_xlabel('Minutes')\nf1.set_ylabel('Frequency')\n\n# Second plot\nf2 = sns.barplot(x='duration', y=\"size\", data=data_duration_tv.groupby('duration',as_index = False).size(),ax = ax[1]);\nf2.set_title(\"Duration of Movies\", fontsize=24)\nf2.set_xlabel('Number of seasons')\nf2.set_ylabel('Frequency')\nfig.show()","dab5d431":"# Also, we can create a violin plot to see the distribution of duration of movies based on the last 10 years\ndata_duration_movie_year = data_duration_movie[data_duration_movie['release_year']>= 2010]\n\n# Create the plot\nplt.figure(figsize=(20,6))\nsns.violinplot(x=\"release_year\", y=\"duration\", data=data_duration_movie_year) \nplt.title(\"Duration of Movies according the last 10 years\", fontsize=24)\nplt.xlabel('Release year')\nplt.ylabel('Minutes')\nplt.show()","e2a4c6bb":"# Now we can explore the trend of duration of TV shows in the last 10 years\ndata_duration_tv_year = data_duration_tv[data_duration_tv['release_year']>= 2010]\n\n# Create the plot\nplt.figure(figsize=(20,6))\nsns.violinplot(x=\"release_year\", y=\"duration\", data=data_duration_tv_year) \nplt.title(\"Number of seasons of TV shows according the last 10 years\", fontsize=24)\nplt.xlabel('Release year')\nplt.ylabel('Number of seasons')\nplt.show()","65b4b501":"Overall, Movies have a duration of 100 minutes and the general trend is decreasing under slightly. ","698e1e7d":"We can see that \"life\", \"family\", \"find\", \"love\" and \"world\" are the most popular words in these set of Movies and TV shows.","43240fb0":"As we can see, Jan Suter and Raul Campos are the most popular directors in Netflix platform.","a225210d":"How has the evolution of Movies and TV shows been during the last twenty years?","cbd18fa8":"Based on this graph, we can observe that 'International Movies', 'Dramas' and 'Comedies' are the most popular classes. However, the first option could not be considered as a gender, thereby we can say that Drama and Comedy are the most popular genders. Maybe, someone would want to assess deeper and reclass some categoties to give more clarity to the result.","3d0e02cb":"Another interesting aspect is the analysis of the most popular directors. Who are the most popular directors of movies?","012328b6":"Some references used to the creation of this notebook:\n* https:\/\/www.kaggle.com\/radmirzosimov\/netflix-eda-with-plotly-seaborn\n* https:\/\/stackoverflow.com\/questions\/13682044\/remove-unwanted-parts-from-strings-in-a-column\n* https:\/\/seaborn.pydata.org\/generated\/seaborn.violinplot.html\n* https:\/\/towardsdatascience.com\/complete-guide-to-data-visualization-with-python-2dd74df12b5e","0e4535d9":"What are the countries which produce more Movies and TV shows?","b70db911":"We can observe a trend wheren movies turned out be more popular than TV shows, however, 0a sharp decrease of the number of movies is showed in 2020, likely associated to COVID19.","7aa85fb7":"What are the most popular genders?","654b0254":"Now, a little more complex assessing, is the evaluation of the duration of Movies and how this has changed during the last years. We can handle our data to get the right information","7bf45506":"Rating is a classification used to mention that is the target public of each Movie or TV Serie. Some movies are focused of a general public, while others are addressed to people older than 18 years. Based on this, we can ask: What is the proportion of Movies and TV shows according their rating?","df7b3f9a":"# Examples using Pandas and Seabord\n\nIn this notebook, some visualizations are built using Python and seaborn package. For this, it will be utilised [Netflix Dataset](https:\/\/www.kaggle.com\/shivamb\/netflix-shows) available in Kaggle-Datasets. Using Pandas and Seaborn,we can build useful plots to answer some general question behind this dataset.\n\n<img src=\"https:\/\/www.ksat.com\/resizer\/6elnlC7JWa-cqF4kuu6Imx2AKPI=\/1600x900\/smart\/filters:format(jpeg):strip_exif(true):strip_icc(true):no_upscale(true):quality(65)\/cloudfront-us-east-1.images.arcpublishing.com\/gmg\/6AKDZZENWRHF5OGJGDCCMID5LY.jpg\">","f7bf9016":"In this case, we can see that the trend of the duration of TV shows is relatively neutral during the last years. For me is amazing that a TV show has 17 seasons :O.","d17300a4":"The most popular classes are TV-14 and TV-MA.","b69733e4":"We see that Uniter States and India are the countries with more movies. With respect to TV shows, United Sates and United Kingdom are the leaders."}}