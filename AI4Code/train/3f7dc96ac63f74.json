{"cell_type":{"b15d014c":"code","03fe7360":"code","968e115b":"code","adca478e":"code","1e419533":"code","da940823":"code","357a6601":"code","7932efd8":"code","35facd09":"code","432eac07":"code","910776b7":"code","4d824c94":"code","1cd02dfe":"code","0821bbb3":"code","c5927d69":"code","050ddccb":"code","d5086dae":"code","ada0ac55":"code","08f82820":"code","fe24ebc3":"code","13635595":"code","0e097836":"code","fddedce9":"code","bf7dbe85":"code","b1a2bd49":"code","a15d712e":"code","d57242e3":"code","35125a1c":"code","ca094490":"code","72fed6b5":"code","52965c34":"code","73874482":"code","0801b45f":"markdown","beb9cf79":"markdown","0fd74214":"markdown","69c5eee8":"markdown","09af0296":"markdown","30e056ab":"markdown","3c99ac6d":"markdown","c818b3b7":"markdown","0fe167af":"markdown","e989b41b":"markdown","f3252b11":"markdown"},"source":{"b15d014c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","03fe7360":"ipl_squad = pd.read_csv('..\/input\/ipl-2020-player-performance\/IPL 2020 Squads.csv',encoding='latin1')\nmatches_all = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2008-2019.csv')\nmatches_2020 = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2020.csv')\ntraining_df =pd.read_csv('..\/input\/ipl-2020-player-performance\/Training.csv')","968e115b":"training_df.head()","adca478e":"training_df.isna().any() #Output shows that there are no null values, so no null values treatment is required here.","1e419533":"training_df.describe()","da940823":"import seaborn as sns \nimport matplotlib.pyplot as plt\nplt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nsns.scatterplot(x='Batting_Points',y='Total Points',data=training_df)\nplt.subplot(1,2,2)\nsns.scatterplot(x='Total Points',y='Bowling_Points',data=training_df)\n# There are some outliers possibly. Using univariant method next","357a6601":"\nplt.figure(figsize=(30,10))\nplt.subplot(2,3,1)\nsns.scatterplot(x='Runs',y='Batting_Points',data=training_df)\nplt.subplot(2,3,2)\nsns.scatterplot(x='Boundaries',y='Batting_Points',data=training_df)\nplt.subplot(2,3,3)\nsns.scatterplot(x='Six',y='Batting_Points',data=training_df)\nplt.subplot(2,3,4)\nsns.barplot(x='Fifty',y='Batting_Points',data=training_df)\nplt.subplot(2,3,5)\nsns.barplot(x='Hundred',y='Batting_Points',data=training_df)\nplt.subplot(2,3,6)\nsns.barplot(x='Duck',y='Batting_Points',data=training_df)","7932efd8":"plt.figure(figsize=(20,10))\nplt.subplot(2,2,1)\nsns.scatterplot(x='Wickets',y='Bowling_Points',data=training_df)\nplt.subplot(2,2,2)\nsns.barplot(x='4W_Haul',y='Bowling_Points',data=training_df)\nplt.subplot(2,2,3)\nsns.barplot(x='5W_Haul',y='Bowling_Points',data=training_df)\nplt.subplot(2,2,4)\nsns.barplot(x='Maidens',y='Bowling_Points',data=training_df)\n","35facd09":"plt.figure(figsize=(40,20))\nplt.subplot(3,3,1)\nsns.boxplot(x='Runs',data=training_df)\nplt.subplot(3,3,2)\nsns.boxplot(x='Boundaries',data=training_df)\nplt.subplot(3,3,3)\nsns.boxplot(x='Six',data=training_df)\nplt.subplot(3,3,4)\nsns.boxplot(x='Batting_Points',data=training_df)\nplt.subplot(3,3,5)\nsns.boxplot(x='Wickets',data=training_df)\nplt.subplot(3,3,6)\nsns.boxplot(x='Bowling_Points',data=training_df)\nplt.subplot(3,3,7)\nsns.boxplot(x='Total Points',data=training_df)\n#No need to plot for binary data (i.e, the columns having values 0 or 1)\n#We observe various outlier values so we need to do outlier treatment","432eac07":"Q1 = training_df.quantile(0.5)\nQ3 = training_df.quantile(0.90)\nIQR = Q3 - Q1\n#Range for quantile that i'm aceepting is between 5-90","910776b7":"training_out = training_df[~((training_df < (Q1 - 1.5 * IQR)) |(training_df > (Q3 + 1.5 * IQR))).any(axis=1)]","4d824c94":"training_out.head()","1cd02dfe":"training_df['players'] = training_df['Id']\ntraining_df['number'] =  training_df['Id']\nfor i in range(0, len( training_df)):\n    training_df['players'][i] =  training_df['Id'][i].split(\"_\")[-1]\n    training_df['number'][i] = int( training_df['Id'][i].split('_')[:1][0])\ntraining_df.number = training_df.number.astype(int)","0821bbb3":"df = pd.DataFrame()\ndf['match_number'] = training_df['number']\ndf['total_score'] = training_df['Total Points']\ndf['Id']    = training_df['Id']\ndf.head()\ndf= df.iloc[:1283]\ndf.shape","c5927d69":"df.match_number=  df.match_number.astype(int)\ncol_1 =df.select_dtypes(include='object')\ncol_rest = df.select_dtypes(exclude='object')","050ddccb":"col_1 = pd.get_dummies(col_1,drop_first=True)","d5086dae":"df = pd.concat([col_1,col_rest],axis = 1)","ada0ac55":"x= df.drop(['total_score'],axis=1)\ny= df.total_score","08f82820":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=100)","fe24ebc3":"from sklearn.preprocessing import StandardScaler\ns_scalar = StandardScaler()\ns_scalar.fit(x_train)\nx_train = s_scalar.transform(x_train)\nx_test = s_scalar.transform(x_test)","13635595":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.svm import SVR\nfrom math import sqrt","0e097836":"lr = LinearRegression()\nlr.fit(x_train,y_train)\ny_pred = lr.predict(x_test)","fddedce9":"rmse = np.sqrt(mean_squared_error(y_test,y_pred))\nrmse","bf7dbe85":"submissions =pd.read_csv('..\/input\/ipl-2020-player-performance\/sample_submission.csv')","b1a2bd49":"submissions['players'] = submissions['Id']\nsubmissions['number'] =  submissions['Id']\nfor i in range(0, len(submissions)):\n    submissions['players'][i] =  submissions['Id'][i].split(\"_\")[-1]\n    submissions['number'][i] = int(submissions['Id'][i].split('_')[:1][0])\nsubmissions.head()","a15d712e":"total_points = submissions.drop(['Total Points','players'],axis=1)\ntotal_points.number = total_points.number.astype(int)\ntotal_points.number.dtypes\ncol_1 = total_points.select_dtypes(include='object') \ncol_rest = total_points.select_dtypes(exclude='object')\n\ncol_1= pd.get_dummies(col_1,drop_first=True)","d57242e3":"total_points = pd.concat([col_1,col_rest],axis=1)\n\ntotal_points.head()","35125a1c":"s_scalar.fit(total_points)\ntotal_points = s_scalar.transform(total_points)","ca094490":"y_pred = lr.predict(total_points)\ny_pred = np.round(y_pred)","72fed6b5":"submissions['Total Points'] = y_pred\nsubmissions = submissions.drop(['players','number'],axis = 1)\nsubmissions.head()","52965c34":"submissions.to_csv('FINAL_SUBMISSION',index = False)","73874482":"Prediction =pd.read_csv(\".\/FINAL_SUBMISSION\")\n","0801b45f":"### Using Linear Regression ","beb9cf79":"# EXPLOITARY DATA ANALYSIS\n###### Performing the data analysis to see the trend of data and possibly identifying any outliers","0fd74214":"## Getting an overall idea of all the features","69c5eee8":"## CHECKING IF THERE'S ANY NULL VALUES","09af0296":"### 1. Multivariate Method (Multiple Variables used for data analysis)\n","30e056ab":"### 2. Univariate Method\n#### Using Box Plot for individual columns","3c99ac6d":"## For Batting","c818b3b7":"## Outlier Treatment using Interquantile Range Method","0fe167af":"## For Total Points","e989b41b":"## For Bowling","f3252b11":"## Since submission file has no features of training data beacause matches of 2020 are yet to be played according to the data, so we'll have to create a relevant training data out of available data"}}