{"cell_type":{"7bf8019d":"code","74b77658":"code","7b1238f9":"code","63e969cc":"code","afa776c1":"code","748bbf06":"code","f09be8ae":"code","c3d9a64f":"code","7a62e1bc":"code","83aa1c5c":"code","c7e82602":"code","28832b8f":"code","0e902e75":"code","0caf7346":"code","93d9135e":"code","f445fcf2":"code","0e61fee2":"code","b9e476b0":"code","1baf0d99":"markdown","7e2a51a0":"markdown","aee9e1fb":"markdown","876fb5fd":"markdown","ddf1f4fb":"markdown","1fc7ef64":"markdown","b96528ae":"markdown","50954862":"markdown","188a7571":"markdown","9c9f4c50":"markdown","161476da":"markdown","e9489b75":"markdown","c13e6848":"markdown","acc2df15":"markdown","5308ca1a":"markdown","0d9f4399":"markdown"},"source":{"7bf8019d":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom fastai.vision.all import *","74b77658":"dataset_path = Path('..\/input\/seti-breakthrough-listen')","7b1238f9":"dataset_path.ls()","63e969cc":"train_path = dataset_path\/'train'\ntrain_df = pd.read_csv(dataset_path\/'train_labels.csv')","afa776c1":"train_df.head(30)","748bbf06":"train_df.hist()","f09be8ae":"print(f\"There are {len(train_df[train_df.target==1])} 'needles' in the training set\")","c3d9a64f":"train_files = get_files(dataset_path\/'train',extensions='.npy')","7a62e1bc":"len(train_files)","83aa1c5c":"example_npy = np.load(sorted(train_files)[0])","c7e82602":"example_npy.shape","28832b8f":"def show_data(arr):\n    assert arr.shape == (6, 273, 256)\n    fig = plt.figure(figsize=(16, 10))\n    for i in range(arr.shape[0]):\n        plt.subplot(arr.shape[0], 1, i+1)\n        plt.imshow(arr[i].astype(float), aspect='auto')\n    fig.text(0.5, 0.04, 'Frequency \u27a1', ha='center', fontsize=16)\n    fig.text(0.04, 0.5, '\u2b05 Time', va='center', rotation='vertical', fontsize=16)\n    plt.show()","0e902e75":"show_data(example_npy)\n","0caf7346":"example_npy = np.load(train_path\/'0'\/'001c619bdf53.npy')","93d9135e":"show_data(example_npy)\n","f445fcf2":"submission_df = pd.read_csv(dataset_path\/'sample_submission.csv')","0e61fee2":"submission_df.head()","b9e476b0":"submission_df[\"target\"] = 0.51\nsubmission_df.to_csv(\"submission.csv\", index=False)","1baf0d99":"Let's check what data is available to us:","7e2a51a0":"We can plot all of the spectrograms in the cadence:","aee9e1fb":"All the spectrograms are saved as numpy arrays. Typically, the data comes with extra metadata, but the organizes said that:\n\n> For the purposes of the Kaggle challenge, we have discarded the majority of the metadata and are simply presenting numpy arrays consisting of small regions of the spectrograms that we refer to as \u201csnippets\u201d","876fb5fd":"As you can see, the each spectrogram has a shape of `(6,273,256)`. Let's talk a little bit more about the spectrograms generated in this dataset. As an example, let's look at an actual extraterrestrial signal, from the interplanetary [Voyager 1](https:\/\/en.wikipedia.org\/wiki\/Voyager_1) spacecraft:\n\n![image.png](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/SETI-Berkeley\/Screen%20Shot%202021-05-03%20at%2011.39.42.png)\n\nHere you can see that that we have a radio telescope looking at a particular area in the sky, and we get a spectrogram of radio signals from a range of frequencies over a given amount of time. Then the telescope is aimed at a different location and the spectrogram is recorded again. The telescope alternates between the desired location in the sky (in this case the location of the spacecraft) and some other location in the sky, generating a total of 6 spectrograms. One set of 6 observations is referred to as a _cadence_. A potential extraterrestrial signal likely is only occuring in a specific location in the sky, and likely isn't a signal with a constant frequency.\n\n\nMore information about the spectrograms are provided [here](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/overview\/data-information).\n","ddf1f4fb":"You can see the signal is present in alternating spectrograms of the cadence (when the radio telescope is looking at the desired region of the sky), and the signal does not have a constant radio frequency.","1fc7ef64":"# SETI Breakthrough Listen - E.T. Signal Search: A Simple EDA \n\nIn this competition, we are provided with radio spectrograms and we are asked to use machine learning to classify the presence of simulated extraterrestial signals in the spectrograms. It\u2019s hard to search for a faint needle of alien transmission in the huge haystack of detections from modern technology, and we hope that machine learning can speed up the search!\n\nI'll provide a quick and simple EDA to help you get started with this fun competition! ","b96528ae":"We can see we just have to submit the probably for the presence of the extraterrestrial signal for each of the spectrograms, as indicated by their ID.","50954862":"Now, **WE ARE DONE!**\n\nIf you enjoyed this notebook, **please give it an upvote.** If you have any questions or suggestions, please leave a comment!\n\nIf you want a simple CNN training+inference starter notebook for this competition, please check out my notebook [here](https:\/\/www.kaggle.com\/tanlikesmath\/seti-et-signal-detection-a-simple-cnn-starter\/).\n\nGood luck, fellow participants! \n\n![image.png](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAoHCBUWFRgVFRYZGBgYGhocHBoYHBgeGhkaHBwcGhwcGhgcIy4lHx8rHxoYJzomKy8xNTU1HCQ7QDszPy40NjEBDAwMEA8QHhISHjQrJSw2NDQ1NjQ0NjY2NDQ0NDQ9PTY1PTQ0NDQ0NDQ2NDQ0PTQ0NDQ0NDQ0NDQxNDQ0NjE0NP\/AABEIAOEA4QMBIgACEQEDEQH\/xAAcAAEAAQUBAQAAAAAAAAAAAAAABgEDBAUHAgj\/xAA\/EAACAQICBgYIBQIFBQAAAAABAgADEQQhBRIxQVFhBhMicYGRBzJCUnKhscEUI9Hh8GKiFUOCsvEWJDNTkv\/EABoBAQADAQEBAAAAAAAAAAAAAAACAwQFAQb\/xAAqEQACAgEEAAYCAQUAAAAAAAAAAQIDEQQSITEFEyJBUWEygdEUI0KRsf\/aAAwDAQACEQMRAD8A7NERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBESl4BWIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCUJlt3tkMyd383Tx1e9s+W4fr4wCvW39UX57vPfBQnax7hl85psd0mpKSlIGq+yyeqDzb9JpqzYmrnVrFB7lLIeLbTMV+vqq4zl\/RGU0iW1XpL6zAfE36mWfxuGvbrKV\/iX9ZFF0PT2nWJO0liT5zy+hqR3HzmB+LvPESHmE1QI2at4qbj7ieyGGwg94+4\/SQAaDCG9Ko6NuIP6WnoaQ0jQ9oVl5gE5eR+s01+Jwl+Sweqxe6J71pG0EcxmJcVgcwbyJ6M6a02ISshpNsvtW\/PeJJwoPaUgXzuMwR\/N83V2wsWYvJNNPoyIllKmdiLH5HuMvS09EREAREQBERAEREAREQBERAEREAREQBLVSpbIZk7P17p7ZrC53SyhsC7ZZXz3DbAPFastJS7tYDMsf55CRTGY2ribjW1KBy1R6zgcTuBnnE438W+sLiihsoz7bbyeV9kyZw9Xq5Tk4xfH\/AEonPPCLdCiqAKoAAl0ykrOZNe5WhESkrWD1lRERJ7eMo8LGJwiOLOgbv2+BmBQxGIwRuhNShvVvZ7ju79k20oRfIy2qyUHmLwM45RvtH46niKYdDcHzU8DwMy6THYdo+Y4zn9Ou2CrB1v1LmzLuHcOPDxEnhYMquueQYHiCL\/MT6DS6hXR+12aYy3IyonhWuARvnuayQiIgCIiAIiIAiIgCIiAIiIAiIgFirmQPE9w\/e0j3TDGNqph0PaqntHgg2+f2MkKZsx4WH3+\/ykNqVesxdZxmEsi+GR+YPnMWutcKsLt8ELJYiXsPRVFCLsUWEuRKE2znCSMp6lJg0dIXfVZHQNfVZhkxG7keRmdPHHBIrEpEqcfgAyspKz1ASk1tTANUYtUqOo9lEbVCj+o+03ymfSUhQCSxAtc7TzPOWqJ42eMXQDoyHePnu+czOhONJptRbbTOXwknLwIMszXYCr1ONU3stXskc2yH9wHnL9HN12p+z4J1ywydUciy8Dcdx\/e8vSw+TKeN1+4+h85fn0ZpEREAREQBERAEREAREQBERAERKGAYuvZGbhrH6mQnQRJpljtZ2Ml2kWthXNr\/AJbf7TInoIg0Vtxb6zk+IP1JfTKLvY2ETWab05Rwq61VszkqLYsx5DhzkNxfpKYZpQW39bH7CY4UTn+KKlGUujohErIBor0m0HIFem1I5dpTrL4+0PIydYbErUUOjK6NmGU3B8RFtFlf5I9cXHsuxBiZ9vBEREs4vErTRqjsFVRdmOwCexhl4QL01+I03hkbVevTVhtBZbjvF8pD6b4\/TDMuF\/7fCKSpqNcFu+2bfCMhvMs6a9E9ahQesmIWoUQuyapUkAXbVYsdw3zpV+HvGZvH0XKrPZPcJj6VXOnUR7e4wP0ms6SnVFNxtVvHiM\/CcTwOkalOor0mKsuYKm3geI5Trn+LjFYFKoFm1wrgeywyPhsI75VqNM6uV0RlDbydQFTWphhvCt9D9JlTUaEN8HT3\/lD\/AGzarsE7MHmKf0aF0e4iJM9EREAREQBERAEREAREQBPLbJ6lCIBhV6RagyjayEDxXKQLoxXujocijfX9xOi0D2RyFvLKc2t+Hx1RDkrsbX4MdZT87Tm+IQ6l+im5cZOZdNMe1bGVCx7KMUVeCpl8zcySeiHBUKmJqCsqOyUwUVwCL61mNjtIFvORLplhimOxCnYX1h3OA\/3kn9GHR84k1K9PEdTiKDLqKArXuDdnU5lTmuXOaYR9Cx8Isj0sHaMdoLDV0KVaFN1O4quRta4Nrg8xOX6e6O19DscVgy1XCk\/mUWJJS\/tX4btbaMr3EkWgvSfhWJpYojD1UZlJzakxUkEq4GQuN9pv9I9I9HPh6gfE4dqbIysOsQ6wKm6gXuTbdtl2FJbZI9aysM1OidJ08RSWtSN1YeKnercCJmTiXo\/0+2HxCUyfyqrBWBOQJyVhwN7A8p2ycTU0eVPHt7GWcdrKznuk6h0npGno9GIoUyWrFfa1c28skHMkyV9K8caGEr1VOqyqQp4M1lX5mcj6A9Kf8PxJrshqKyMjKCAcyGBBO+6jzM0+H0ptzftwiymOeT6ZwWESki06aqiKLKqiwAHKRrp5pZkoHD0AamJxCslOmmbWIsztn2VAPrHK5E59pr001GBXC0Al\/bqNrEdyCwv3k90ivRrp9Xw2Kq4qqPxL1U1CXaxGYI1WANlFvVAt3TqNZLyNVcM9Ko1N1KOhIZWFipG0GdB6IOf8PrHcKwt\/8reQHS2kamIrVK9QjXqMWawsByA4AWHhOm6D0cyaNpIfWxFRWt8Xq\/2hfOY9bjZj5ZXb0dX0OmrhKYP\/AKl+a\/vNqNkxEpatJUG4IvlYTMmuCxFImuisREkeiIiAIiIAiIgCIiAIiIAlCZWY6rrdptm4brcYBSi4uwBvmD5\/uDIX6QtHEFMSu6ytyzurfUeUkD9J8Ir6hqC97XAOqDssWtabDSODSvSem2autr8OBHcbGZrVG6DjFp\/yRklJYOIekDAddQTGoM1ASqBuG4nuOXcwnOKOIqU21kZkaxGspKmx2i43TtWiQaFZ8JWAIYlc9hNvoy\/ac86cdE2wj66Xagx7J2lCfZb7H7yjR3Y\/tT79iuuX+LIojylQCW5W8345Liqmxy3T6I6P47r8NRrHayKT8Qyb5gz52neOgaWwGH+Fj5ux+8w+IJbE\/sov\/FM13pUxBXAhR7dVVPcAzfVROLzufpDwnWYGrYZoVff7Jz\/tLThknoGnV+z2h5iIibHQ2iK2JqCnRTWY7dyqOLHcJsbSWWXGw6HaAbF4hU9hbNUOeS39W43nYPHhO14eiHxuHpKOxSBcgDIWFk7rECY3RrQdPBUNRTdvWd9ms1s+4DYBNp0Hw5d6uLYW1zqp8I2\/RR4Gcnzf6i9JfiijO6S+CXVVJK2tkb534ZRrMNoB7jn85o+kOmXRlo0ADVYaxLbEXied5g6M07XSqtLE6rK5AR1FrNwbdNr1VcZ7G+S1yWcEtRwdniN4lyWGyYHjkfqPvL80khERAEREAREQBERAES1Ue1uJNhPPVnex8LAfSAe6hyPcZqekNYphKjKbHUAB4XsPvNk1NrZOfEA\/S0xNMYM1MO9IbWSw+IC48LgSu3LreO8M8fRGKWBQUwhUFbZ3AzNsz3zY9EsWy6+FdtY07FCTm1M7B\/p2eImDga2vTR+Ki44EZEed5axNbqqtLEDYjarfA3ZJ8Ns+d0VzqtWenwyiMsPJndNejxrr1tIWqpnltdRnb4huml0bi1xNEq6hstV0YXB7wdxnRQbyD9JtBvRqHF4dbg51UG8b2UfbxnU1mnbW+HZ7bDPqRzvpF6OQSXwjAcabE2\/0ufofOQjF9HsVTNmoVL8lJHgRcGd4w2KWogdDcH5cjzlwNM1WvsgsS5M0dTKPD5OG6I6KYqu4UU2Rb5u4IVRvOeZ7hO36Nwy0aSUlN1RFUE7Tqi1\/HbPRMwdN4irTpa9FdZlZSy2uSlxrBRva15C7UT1DUeEiM73Y8Gzq01dWRhdWBBB2EEWInMtLejJ9YnD1FKE5K9wwHC4BvJ3pLGVVaitJb69QB7g5UwLsb7iMvObBWkIXzp5i+xG2UOmc20d6LmuDXrqBvWmCSf8AUch5GdB0Tomhhk1KKBRvO1mPFmOZMyw0sY7FLTRnbYN3E7gJG3U228N\/om7ZSNdp\/EM5TDU83qsAeQv\/AA9wMn+isCtCklJdiKB3nefE3kU6C6LZmbG1R2nuEB3LvYfQchzkwxuJWmjOxsFUknuE6mjp8uG59s01Rwssg9Gp1lfEVrkgvqKT7qZZcriV0z\/4tYbVZGHeCJ50QhFNS3rNd2vtuxvnK6R7RpUh6z1FFv6QbmcVuU7sr3ZSpZkThrlAQM+ybeV\/vPRVjtNuQ\/Uy1j8alFC7mwHmTuAG8yI4nHYnEZ6xoU87KvrsP6j+lp3rtVClLd38GqUlEmYU7m8wPtPVN7jmMiOch\/R3E1KeIFB3Z1dCyliSVIz38gflJcB2zzA+R\/4llFyujuSPYy3LJfiIl56IiIAiIgFk+sOSn6iQ3pKzVcUKBYqiIGIBtrEnb9PIyY1MiD4Hx\/cCRnpbo9wVxVIXamLOo9pL3+Vz4HlMmtjJ0vaRmm48GFh1r0M6NUsPcq9pT3NtXwm60Z0jR26uqpo1Pdc9lvhbYe6afCYtKiB0NxvG8Hgec84rDo41XUMOe7mDunGo1ltTw+V8Mz+ZtL2OoGjXK\/5dcsy\/01Nrr3H1h4zWaTx\/a6hU6xmB1hfsqD7xnilo0q6s1V3RM0RiSFPnbyEpoAXRqh9ao7EnfYEgDukLZRlNzisfyVzmm+DIw1THIiqldAFFgpUNYbhrEXM2ugOklRqn4fFKq1DmjL6jjh3\/AF5TGZwBdiABvJsPOYGmRrUi6HtJZ0Ybip1rgjkJoo1dkZLLyhG5p8sv6e0Q2Ec16ClqLn8ymPYPvrwH0+lMNVV1Dqbqdhk1wWIWrSRxmHVW8GAP3kT010cekxrYMXBzehuPEpwPL\/iatVo93rh\/oldp1L1RLYE8Vq6oVDMAWJCgm2sQL2HO0x9H6RSpkOy42o2TDjkZcx+CSshp1F1lO7eCNhB2gjcROakk8SMSilwy47gAkkADaTkB3ytKoGUMpuCAQRvB2GR7\/pljZKuJq1KKm4ptbPeA7bWHIzfGyjgAO4ACe2KK6eSMmo9PJeLgAkmwGdzsAmmwOEbSGIAGWHpm7Hjy7z8hK0VfG1OopXFMWNSputwHfu4906Lo7R9Oggp01CqPMneSd5mzR6Vye+XRt09TfqkaPpFpk0NTDYcAVGXs+7TQZXI7gbDlI0+jXYdvEVXY5m7HVJ+A5Wnqm2ticVUaxbrSgPBUyAHgBPbaQph9QuA3A3G3ZmcpTqr5zm4xfCKb75ObjH2PBqVqJ1nbrKdxdrWdOZA2iZmE0hTpV2rOrP8AlqKWqNYXNy1juJyz4Xnu4Km+yxv3Wzmu0FVPUAsbAE2Jy7N\/+Znrk4NTXaPYW4W4z6tWpiGD1gFVb6tMbBzbiZl3yvNcdK0QbFx4XPzEt4bD1ca2rTulEbXINj3cTy84UZ3Tz22WQlKx8mz6ML12JauB2EXVU\/1Nw8NbzEmC5seQA88\/0ljC4ZKKKiLYDIAbSeJ58TMiklhntOZ759BpqfJrUTbGO1YLsRE0EhERAEREA8OoIsd8tq1sm8DuPfzl+eWAORgEW0n0WBZquGfqqhzK\/wCW3eu6\/EeUjS4zFMzIqIGRiruSSusNwtOkURbWG4HLkLD95z3Agr+IUC7JWq9m+\/WuB4icjxCqEEpxXLMt8UllIsvjcQnr0Q440yfptmJgalQa\/wCGZGQkko+TITutw\/SbzD4pXXWQ8iN4O8EbjNdpkimUrKQr6wUj31O0HjbbObH4wZU+cIuUtHkkPXbrG93Yi9y7+8zMxtQKjk7Ap+kuXmJ1P4muuHU9kEPVIvkqn1b8TJVxlOSSIR3TltRL+jCFcJQDbRTXytcfK0zlqnaR2TsI3DmJ6q7Ao35W5b\/lL9p9LFYikdZLCwR3T3ReliO2p6uruqJv7xv79sieLfE4Q2xCGpTGyomw9\/Pvt4zpBpEZqbctx8N08s4tZhbwuD\/Ocz3aSFnPTK7KYz7ObnT9DVLBjf3bZn7Tzg8JXx5so6ugD2mN+1xA3MeWyTipoPBsSxo0rnabAfSbGmVUBUUWGQC5ADv2Wmevw9RlmTyUw0sYvLLGjtH0sNTCU1sB4sx4k7zMulUvtFiNo+kJT3k3PyHICUq5EN4Hu4+E6KSSwjWc+rYbq8ViKZy1n61eavt+dxK4jAJUFmUHnv8AAySdKNDtWVatKwrU814Op9ZCeBF7c5HcDjVqLcZMMmU5MrbwR5zg6ul12N+zOVqKXGe9e5rMVoynSUszvqDamtkTuE9YXBNU1WqiyWGpTF9VRu1uJl\/TtFmQFRrarqxX3gL3lKemqJW+tY+6Qda\/C0zctcFTcmuDNFCkLKUTO9hYZ8bTbdB6pAr0Tsp1OzyVs7eYPnI5gQzua7jVUAhFO0Dex4Xkg6B4dilXENl1z9m\/uLcA+ZPlNmgT83j9mrS53EopC7MTtBsOQmRLND2jxY\/p9pencOgIiIAiIgCIiAIiIBY2NyYfMft9JEOkWBahWbEopanUA60KLlGUWD2HskbfOTKolxb+A8Zb6y2TDxGw\/pKbqo2wcWRnFSjhnOnwyOeto1NRjtZLFW+JZZ\/CojCpXra7Ls1ioUHksm2L6OYOsdZqS3O0qSpPfqkX8YwvRzB0jdaSX4sdY\/3E8JzV4dNPG5YMv9M\/kieGFfEHVw6FV31agKqB\/SPaMmWhtE08LT1VzY5u59ZzzPjkJnipuCk\/ISqUze7G53DcO6bqNLCrlcv5LqqY19CkpuSdp2DgJfiJqLhERAPBQcBPUrEASkrEAxvVyPq7jw5HlNPpno1TrHrEbqqu6ogGfxLsaSCWTS90lfp5SE4RksSWTyUVJYZCauischtqJWUe0rBGPg2+YTpXBB\/BVL9ynP4h4fwTonaHunzH6yms3u\/3TG9BW3xlGd6WDIThejuJxB\/P\/JpXuUUgu3IsMgJM1RUUIgAsAFA2ADLZwE99o8F+ZnpKYHfvJ2maaaI1LCLoVxgsRR6RLAAbp7iJcTEREAREQBERAEREAREQC21IHaAfCFpAbAB4S5EAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAP\/2Q==)","188a7571":"Okay, let's examine some of these spectrograms!","9c9f4c50":"Let's check the `train.csv` file:","161476da":"Clearly a very imbalanced dataset! This must be accounted for during modeling. For example, the dataset may have to be over\/undersampled or the loss function must be adjusted to account for the imbalance. \n\nBelow, I print exactly how many spectrograms in the training set have \"needles\".","e9489b75":"We can see that we have: \n- a `train_labels.csv` file, which has our labels indicating the presence of an E.T. signal (referred to as needles) for each of the spectrograms (refered to as our haystack)\n- `train` folder contains `.npy` files with the spectrograms stored as arrays\n- Similarly, `test` folder also contains `.npy` files with the test spectrograms stored as arrays \n- Of course, we are provided with a `sample_submission.csv` file!","c13e6848":"## A look at the data\n\nLet's start out by setting up our environment by importing the required modules:","acc2df15":"Here, I have presented a postive example:","5308ca1a":"Seems like having a \"needle\" is quite a rare occurance in this dataset! Let's create a histogram of the label frequencies:","0d9f4399":"## Evaluation and Submission\n\nThe submissions are evaluated using the Area Under the Receiver-Operating Characteristic (AUROC) curve. Let's look at the sample submission file to see how we are supposed to submit our predictions:"}}