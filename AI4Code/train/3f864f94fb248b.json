{"cell_type":{"56fc75a5":"code","5c976676":"code","dcdd79d2":"code","031252f3":"code","d3bee1da":"code","6723af28":"code","5f19b4cd":"markdown","1b33d358":"markdown","64cd3b9f":"markdown","97f9a3f8":"markdown","9818785a":"markdown","063be467":"markdown","fcd4edff":"markdown"},"source":{"56fc75a5":"!pip install --upgrade git+https:\/\/github.com\/zalandoresearch\/flair.git","5c976676":"import pandas as pd\nfrom pathlib import Path\nfrom flair.data import Corpus\nfrom flair.datasets import ClassificationCorpus\nfrom flair.datasets import CSVClassificationCorpus\nfrom flair.embeddings import DocumentLSTMEmbeddings, BertEmbeddings, BytePairEmbeddings\nfrom flair.models import TextClassifier\nfrom flair.trainers import ModelTrainer\nfrom flair.visual.training_curves import Plotter\nimport string","dcdd79d2":"data = pd.read_csv(\"..\/input\/tweet-sentiment-extraction\/train.csv\", encoding='latin-1', na_filter=False)\ndata = data.rename(columns={\"sentiment\":\"label\", \"text\":\"text\"})\ndata.replace({\"label\":{\"positive\":2, \"neutral\":1, \"negative\":0}}, inplace=True)\ndata[\"text\"] = data[\"text\"].astype(str)\ndata[\"text\"] = data[\"text\"].replace('[{}]'.format(string.punctuation), '')\ndata[\"text\"].apply(lambda s: s.strip())\ndata = data.loc[:, [\"label\", \"text\"]]\ndata = data.reset_index(drop=True)\n\nPath(\"flair_data\").mkdir(parents=True, exist_ok=True)\n \ndata['label'] = '__label__' + data['label'].astype(str)\ndata.iloc[0:int(len(data)*0.8)].to_csv('flair_data\/train.csv', sep='\\t', index = False, header = False)\ndata.iloc[int(len(data)*0.8):int(len(data)*0.9)].to_csv('flair_data\/test.csv', sep='\\t', index = False, header = False)\ndata.iloc[int(len(data)*0.9):].to_csv('flair_data\/dev.csv', sep='\\t', index = False, header = False)","031252f3":"data_folder = \"flair_data\"\ncorpus: Corpus = ClassificationCorpus(data_folder)\nstats = corpus.obtain_statistics()\nprint(stats)","d3bee1da":"sentence_embeddings = [BytePairEmbeddings(language=\"en\"), BertEmbeddings('bert-base-multilingual-uncased')]\n\ndocument_embeddings = DocumentLSTMEmbeddings(sentence_embeddings, hidden_size=512, reproject_words=True, reproject_words_dimension=256)\n\nclassifier = TextClassifier(document_embeddings, label_dictionary=corpus.make_label_dictionary(), multi_label=False)\n\ntrainer = ModelTrainer(classifier, corpus)\n\ntrainer.train('.\/', embeddings_storage_mode='gpu', max_epochs=5)","6723af28":"%matplotlib inline\n\nplotter = Plotter()\nplotter.plot_training_curves('loss.tsv')","5f19b4cd":"### Import modules","1b33d358":"![](https:\/\/github.com\/flairNLP\/flair\/blob\/master\/resources\/docs\/flair_logo_2020.png?raw=true)\n\nIn this notebook, I show how to implement document classifier using Flair, a framework that allows you to easily experiment with SOTA method. Flair is my favorite framework because it can train from building model in just a few lines. If you look at this code, you will probably like it.\n\nFlair github source: https:\/\/github.com\/flairNLP\/flair","64cd3b9f":"### Load data and convert to Flair format","97f9a3f8":"### Show log as figure","9818785a":"### Install","063be467":"### Build model and training","fcd4edff":"### Build corpus"}}