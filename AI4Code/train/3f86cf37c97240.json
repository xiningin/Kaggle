{"cell_type":{"f39a6741":"code","7b274c5a":"code","73fa560a":"code","48d0e3ec":"code","111b50cc":"code","d06d7f62":"code","f7643d0a":"code","bde03393":"code","f9d7be31":"code","0df62310":"code","b1d38541":"code","47f93a25":"code","955bcf3a":"code","4e477e7a":"code","7e4079ca":"code","eb2aaadd":"code","0d27089d":"code","e73690b7":"code","0e39e497":"code","46ee9abc":"code","70361a2d":"code","53362c0e":"code","aba98c6c":"code","bd8ea9ed":"code","7f6205f8":"code","3a5a3c5e":"code","67f89613":"code","6ae26ec0":"code","b3e8c654":"code","812ad1fd":"code","3ed610c3":"code","ca0ed770":"code","b1cbceb4":"code","ff0589f2":"code","6586580a":"code","904e43e7":"code","21e6c5a5":"code","084bd02a":"code","8613685f":"markdown","9f3b15ca":"markdown","21f9b8ba":"markdown","843e46d7":"markdown","0b72990e":"markdown","f833f4a3":"markdown","009bea1d":"markdown","7ba8194a":"markdown","7f1571d4":"markdown","92b97e89":"markdown","b73d0039":"markdown","fd85be9d":"markdown","35ef4038":"markdown","dd4143b3":"markdown","0d369938":"markdown","0200bdf8":"markdown","986facee":"markdown","8cd4b4f5":"markdown","a7105e92":"markdown","4809d4f0":"markdown","0735e3c6":"markdown","ca6ce9dd":"markdown","680fa273":"markdown","eba626d4":"markdown"},"source":{"f39a6741":"\n#importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport geopandas as gpd\nfrom matplotlib import cm\nimport matplotlib\nimport plotly.graph_objects as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)    #THIS LINE IS MOST IMPORTANT AS THIS WILL DISPLAY PLOT ON \n#NOTEBOOK WHILE KERNEL IS RUNNING\n\n\nfrom IPython.display import HTML,display\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","7b274c5a":"sc1 = pd.read_csv('..\/input\/crime-in-india\/crime\/crime\/02_01_District_wise_crimes_committed_against_SC_2001_2012.csv')\n\nsc13= pd.read_csv(\"..\/input\/crime-in-india\/crime\/02_01_District_wise_crimes_committed_against_SC_2013.csv\")\nsc13.columns\n\nsc13 = sc13[['STATE\/UT', 'DISTRICT', 'Year', 'Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt','Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act',\n        'Other Crimes Against SCs']]\n#combining 2 CSV files\n\nframes = [sc1 , sc13]\n\nsc = pd.concat(frames)\n\nsc['STATE\/UT'] = sc['STATE\/UT'].str.capitalize()\nsc['DISTRICT'] = sc['DISTRICT'].str.capitalize()\n\n\nsc['STATE\/UT'].unique()\n","73fa560a":"\nsc['STATE\/UT'].replace(\n    to_replace='Delhi ut',\n    value='Delhi',\n    inplace=True\n)\n\nsc['STATE\/UT'].replace(\n    to_replace='A&n islands',\n    value='A & n islands',\n    inplace=True\n)\n\n\n\n\nsc['STATE\/UT'].replace(\n    to_replace='D&n haveli',\n    value='D & n haveli',\n    inplace=True\n)\nsc['STATE\/UT'].unique()","48d0e3ec":"sc.head()","111b50cc":"yearw = sc[sc.DISTRICT == 'Total']\nyearw = yearw.groupby(['Year'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\nyearw['sum'] = yearw.drop('Year', axis=1).sum(axis=1)\nyearw = yearw[['Year','sum']]","d06d7f62":"scy = sc[sc.DISTRICT == 'Total']\nscy = scy.groupby(['Year'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\n\ncrimes = ['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs']\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Murder'],\n                    name='Murder',line=dict(color='pink', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Rape'],\n                    name='Rape',line=dict(color='green', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Kidnapping and Abduction'],\n                    name='Kidnapping and Abduction',line=dict(color='orange', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Dacoity'],\n                    name='Dacoity',line=dict(color='yellow', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Robbery'],\n                    name='Robbery',line=dict(color='black', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Arson'],\n                    name='Arson',line=dict(color='skyblue', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Hurt'],\n                    name='Hurt',line=dict(color='royalblue', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Prevention of atrocities (POA) Act'],\n                    name='Atrocities',line=dict(color='firebrick', width=4)))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Protection of Civil Rights (PCR) Act'],\n                    mode='lines+markers',\n                    name='Civil Rights Violations'))\nfig.add_trace(go.Scatter(x= scy['Year'], y= scy['Other Crimes Against SCs'],\n                    name='Other Crimes',line=dict(color='red', width=4)))\n\nfig.update_layout(uniformtext_minsize= 20,\n    title_text=\"Total Crimes Against Scs 2001-2013\",\n    \n                 )\n    \nfig.show()\n\n","f7643d0a":"scy2 = sc[sc.DISTRICT == 'Total']\nscy2 = scy2.groupby(['Year'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\n\n#Plotting Graphs\nimport itertools\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\npalette = itertools.cycle(sns.color_palette(\"dark\"))\ncolumns = ['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs']\nplt.figure(figsize=(20,30))\nplt.style.use('fivethirtyeight')\nfor i,column in enumerate(columns):\n    plt.subplot(5,2,i+1)\n    ax= sns.barplot(data= scy2,x='Year',y= column ,color=next(palette) )\n    plt.xlabel('')\n    plt.ylabel('')\n    plt.title(column,size = 20)\n    for p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')\n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()\n","bde03393":"scy = scy.append(scy.sum().rename('total'))\nscy['Year'].replace(26091, 'Total', inplace=True)\nscy = scy[scy['Year'] == 'Total']\nscy_t = scy.T.reset_index()\nscy_t","f9d7be31":"import plotly.graph_objects as go\n\nlabels = ['Murder', 'Rape','Kidnapping', 'Dacoity', 'Robbery', 'Arson', 'Hurt','Atrocities  Act',\n         'Civil Rights Act', 'Other Crimes']\nvalues = [8576, 17991, 5305, 440,1015,2906, 54055 , 138533, 4332,176488]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values ,textinfo='label+percent',\n                              )])\nfig.update_layout(\n    uniformtext_minsize= 20,\n    title_text=\"Distribution of Crimes Against Scs 2001-2013\",\n    paper_bgcolor='rgb(233,233,233)',\n    autosize=False,\n    width=700,\n    height=700)\nfig.show()\n","0df62310":"stateyr = sc[sc.DISTRICT == 'Total']\nstateyr = stateyr.groupby(['Year','STATE\/UT'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()","b1d38541":"stateyr['sum'] =  stateyr.iloc[:, 2:].sum(axis=1)","47f93a25":"stateyr2 = stateyr.groupby('STATE\/UT')['sum'].sum().reset_index()","955bcf3a":"stateyr2 = stateyr2.sort_values('sum', ascending = False)","4e477e7a":"plt.figure(figsize = (12,12))\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nax = sns.barplot(x = 'sum', y = 'STATE\/UT', data = stateyr2, palette = 'bright', edgecolor = 'black')\nplt.title('Total crimes against SCs (2001- 2013)')\nfor p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         ","7e4079ca":"states = ['Uttar pradesh','Rajasthan' ,'Madhya pradesh' , 'Andhra pradesh', 'Bihar', 'Karnataka' , 'Odisha' , 'Tamil nadu','Gujarat', 'Maharashtra']\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (23,28))\n\nfor i, s in enumerate(states):\n    plt.subplot(5,2,i+1)\n    stateyr3 = stateyr[stateyr['STATE\/UT'] == s]\n    ax = sns.barplot(x = 'Year' , y = 'sum' , data = stateyr3,ci=None , palette = 'colorblind' , edgecolor = 'blue')\n    plt.title(s , size = 25)\n    for p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')\nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\n","eb2aaadd":"scs = sc[sc.DISTRICT == 'Total']\nscs = scs.groupby(['STATE\/UT'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\n\nscs1 = scs[(scs.Murder > 100) & (scs.Rape > 100)]\nsns.set_context(\"talk\")\n\nplt.figure(figsize=(20,30))\nplt.style.use('fivethirtyeight')\n\nfor i,column in enumerate(columns):\n    scs1 = scs1.sort_values(column,ascending = False)\n    plt.subplot(5,2,i+1)\n    ax = sns.barplot(data= scs1,x= column ,y='STATE\/UT',palette = 'dark' )\n    plt.xlabel('')\n    plt.ylabel('')\n    plt.title(column,size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \n   \n    \n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()\n","0d27089d":"scs['sum'] = scs.sum(axis = 1)\n","e73690b7":"new_row = scs.iloc[[1]]\nscs = scs.append(new_row, ignore_index = True)\nscs.at[35, 'STATE\/UT']= 'Telangana'\nscs.at[9,'STATE\/UT'] = 'Nct of Delhi'\n\ngdf = gpd.read_file(\"..\/input\/india-states\/Igismap\/Indian_States.shp\")\n\ngdf.st_nm = gdf.st_nm.str.lower()\nscs['STATE\/UT'] = scs['STATE\/UT'].str.lower()\n\nmerged = gdf.merge(scs , left_on='st_nm', right_on='STATE\/UT')\nmerged1 = merged.drop(['STATE\/UT'], axis=1)\n","0e39e497":"import pysal.viz.mapclassify \nimport mapclassify\nfigsize = (25, 23)\nmerged1['coords'] = merged1['geometry'].apply(lambda x: x.representative_point().coords[:])\nmerged1['coords'] = [coords[0] for coords in merged1['coords']]\ncolors = 8\n\nimport pylab as plot\nparams = {'legend.fontsize': 20,\n          'legend.handlelength': 2}\nplot.rcParams.update(params)\n\nax= merged1.dropna().plot(column= 'sum', figsize=figsize, scheme= 'User_Defined',cmap = 'YlGn',edgecolor='black',k = colors,legend = True, classification_kwds=dict(bins=[5000,10000,20000,40000,60000,90000]) )\nax.set_title(\" Total Cases\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['sum'], horizontalalignment='center', bbox={'facecolor': 'yellow', 'alpha':0.8, 'pad': 2, 'edgecolor':'black'})\n\nax.get_legend().set_bbox_to_anchor((0.8, 0.4))\nax.get_legend().set_title('Number of cases')\n\nax.set_title(\"Total cases\" , size = 30)\nax.axis('off')\nleg = ax.get_legend()\nfor lbl in leg.get_texts():\n    label_text = lbl.get_text()\n    lower = label_text.split()[0]\n    upper = label_text.split()[2]\n    new_text = f'{float(lower):,.0f} - {float(upper):,.0f}'\n    lbl.set_text(new_text)\n\n\nplt.axis('equal')\n\nplt.show()","46ee9abc":"figsize = (25, 20)\n\ncmap = 'YlGn'\nax= merged1.dropna().plot(column= 'Murder', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Murder Cases\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Murder'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = matplotlib.colors.Normalize(vmin=merged1['Murder'].min(), vmax= merged1['Murder'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","70361a2d":"from matplotlib.colors import Normalize\nfrom matplotlib import cm\n\nsns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\nplt.style.use('fivethirtyeight')\n\nfigsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Rape', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Cases of Rape\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Rape'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Rape'].min(), vmax= merged1['Rape'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","53362c0e":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Kidnapping and Abduction', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Kidnapping and Abduction Cases\" , size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Kidnapping and Abduction'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Kidnapping and Abduction'].min(), vmax= merged1['Kidnapping and Abduction'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","aba98c6c":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Dacoity', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\"Dacoity Cases\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Dacoity'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Dacoity'].min(), vmax= merged1['Dacoity'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","bd8ea9ed":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Robbery', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Robbery Cases\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Robbery'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Robbery'].min(), vmax= merged1['Robbery'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","7f6205f8":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Arson', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Arson Cases\", size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Arson'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Arson'].min(), vmax= merged1['Arson'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","3a5a3c5e":"figsize = (25, 20)\nplt.style.use(\"fivethirtyeight\")\ncmap1 = 'cool'\nax= merged1.dropna().plot(column= 'Hurt', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Hurt Cases\" , size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Hurt'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Hurt'].min(), vmax= merged1['Hurt'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","67f89613":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Protection of Civil Rights (PCR) Act', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\" Protection of Civil Rights (PCR) Act Cases\" , size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Protection of Civil Rights (PCR) Act'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Protection of Civil Rights (PCR) Act'].min(), vmax= merged1['Protection of Civil Rights (PCR) Act'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","6ae26ec0":"figsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Prevention of atrocities (POA) Act', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\n\nax.set_title(\" Prevention of atrocities (POA) Act Cases\" , size = 25)\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Prevention of atrocities (POA) Act'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\nnorm = Normalize(vmin=merged1['Prevention of atrocities (POA) Act'].min(), vmax= merged1['Prevention of atrocities (POA) Act'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","b3e8c654":"merged1['coords'] = merged1['geometry'].apply(lambda x: x.representative_point().coords[:])\nmerged1['coords'] = [coords[0] for coords in merged1['coords']]\nfigsize = (25, 20)\n\n\nax= merged1.dropna().plot(column= 'Other Crimes Against SCs', cmap= cmap, figsize=figsize, scheme='equal_interval' ,edgecolor='black')\nfor idx, row in merged1.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Other Crimes Against SCs'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'none'})\n\n\nax.set_title(\" Other Crimes Against SCs cases\" , size = 25)\n\n\nnorm = Normalize(vmin=merged1['Other Crimes Against SCs'].min(), vmax= merged1['Other Crimes Against SCs'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","812ad1fd":"scd = sc[sc.DISTRICT != 'Total']\nscd = scd.groupby(['DISTRICT'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\n\n\nsns.set_context(\"talk\")\n\nplt.figure(figsize=(20,30))\nplt.style.use('fivethirtyeight')\n\nfor i,column in enumerate(columns):\n    scd1 = scd.sort_values(column,ascending = False)\n    scd1 = scd1.head(10)\n    plt.subplot(5,2,i+1)\n    ax= sns.barplot(data= scd1,x= column ,y='DISTRICT' )\n    plt.xlabel('')\n    plt.ylabel('')\n    plt.title(column,size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()\n","3ed610c3":"\nscd['sum'] = scd['Murder']+scd['Rape']+scd['Kidnapping and Abduction']+scd['Dacoity']+scd['Robbery']+scd['Arson']+scd['Hurt']+scd['Prevention of atrocities (POA) Act']+scd['Protection of Civil Rights (PCR) Act']+scd['Other Crimes Against SCs']","ca0ed770":"mostviolent = scd.groupby(['DISTRICT'])['sum'].sum().sort_values(ascending = False).reset_index()\nmostviolent = mostviolent.head(15)","b1cbceb4":"import plotly.graph_objects as go\n\n\n# Use textposition='auto' for direct text\nfig = go.Figure(data=[go.Bar(\n            x= mostviolent['DISTRICT'], y= mostviolent['sum'],\n            text= mostviolent['sum'],\n            textposition='auto',marker_color='rgb(255, 22, 22)'\n        )])\nfig.update_layout(title_text='Most Violent Districts')\n\nfig.show()","ff0589f2":"scsd = sc[sc.DISTRICT!= 'Total']\nscsd = scsd.groupby(['STATE\/UT', 'DISTRICT'])['Murder', 'Rape',\n       'Kidnapping and Abduction', 'Dacoity', 'Robbery', 'Arson', 'Hurt',\n       'Prevention of atrocities (POA) Act',\n       'Protection of Civil Rights (PCR) Act', 'Other Crimes Against SCs'].sum().reset_index()\n\n\nstates = ['Rajasthan', 'Maharashtra', 'Andhra pradesh', 'Uttar pradesh', 'Bihar','Madhya pradesh']\nsns.set_context(\"talk\")\nsns.set_style(\"darkgrid\")\nplt.style.use('fivethirtyeight')\nplt.figure(figsize=(20,20))\nfor i , state in enumerate(states):\n    scsd1 = scsd[scsd['STATE\/UT'] == state].sort_values('Rape', ascending = False)\n    scsd1 = scsd1.head(10)\n    plt.subplot(3,2,i+1)\n    ax = sns.barplot(data= scsd1,x= 'Rape' ,y= 'DISTRICT',palette = 'bright' )\n    plt.xlabel('Rape Cases')\n    plt.ylabel('')\n    plt.title(state.capitalize(),size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()\n    ","6586580a":"plt.figure(figsize=(20,20))\nplt.style.use('fivethirtyeight')\nfor i , state in enumerate(states):\n    scsd1 = scsd[scsd['STATE\/UT'] == state].sort_values('Murder', ascending = False)\n    scsd1 = scsd1.head(10)\n    plt.subplot(3,2,i+1)\n    ax = sns.barplot(data= scsd1,x= 'Murder' ,y= 'DISTRICT',palette = 'colorblind' )\n    plt.xlabel('Murders')\n    plt.ylabel('')\n    plt.title(state.capitalize(),size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","904e43e7":"plt.figure(figsize=(20,20))\nplt.style.use('fivethirtyeight')\nfor i , state in enumerate(states):\n    scsd1 = scsd[scsd['STATE\/UT'] == state].sort_values('Hurt', ascending = False)\n    scsd1 = scsd1.head(10)\n    plt.subplot(3,2,i+1)\n    ax = sns.barplot(data= scsd1,x= 'Hurt' ,y= 'DISTRICT', palette = 'bright')\n    plt.xlabel('Hurts')\n    plt.ylabel('')\n    plt.title(state.capitalize(),size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","21e6c5a5":"plt.style.use('Solarize_Light2')\nplt.figure(figsize=(20,20))\nfor i , state in enumerate(states):\n    scsd1 = scsd[scsd['STATE\/UT'] == state].sort_values('Prevention of atrocities (POA) Act', ascending = False)\n    scsd1 = scsd1.head(10)\n    plt.subplot(3,2,i+1)\n    ax = sns.barplot(data= scsd1,x= 'Prevention of atrocities (POA) Act' ,y= 'DISTRICT', palette = 'dark' )\n    plt.xlabel('Prevention of atrocities (POA) Act')\n    plt.ylabel('')\n    plt.title(state.capitalize(),size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","084bd02a":"plt.figure(figsize=(20,20))\nplt.style.use('classic')\nfor i , state in enumerate(states):\n    scsd1 = scsd[scsd['STATE\/UT'] == state].sort_values('Other Crimes Against SCs', ascending = False)\n    scsd1 = scsd1.head(10)\n    plt.subplot(3,2,i+1)\n    ax = sns.barplot(data= scsd1,x= 'Other Crimes Against SCs' ,y= 'DISTRICT', palette = 'bright' )\n    plt.xlabel('Other Crimes Against SCs')\n    plt.ylabel('')\n    plt.title(state.capitalize(),size = 20)\n    for p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n         \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","8613685f":"# Crime Over The Years","9f3b15ca":"**Number of cases of murder in 6 states**","21f9b8ba":"**Number of cases of Atrocities in 6 states**","843e46d7":"StateWise Yearly Crimes","0b72990e":"**Total Crimes **\n\n**Which is the most violent District in India?**","f833f4a3":"**Uttarpradesh , Rajasthan , Madhyapradesh , Andhrapradesh , Bihar , Karnatka , Odisha , Tamilnadu , Gujrat , Maharashtra has the more number of cases of crime against SC. Lets see the crimes in these states yearwise.**","009bea1d":"Above graph reveals that over the years the number of reported  cases of Hurt , Atrocity , Rape and other Crimes are increased whereas the rate of reporting other crimes has stayed the almost same.","7ba8194a":"# Crimes Against SC yearwise","7f1571d4":"Lets see the representation of this data on the Indian map","92b97e89":"**Number of cases of Hurts in 6 states**","b73d0039":"**Crime head-wise cases reveals that other crimes with 43.1% (1,76,488 cases) registered the\nhighest number of cases of crimes\/atrocities against Scheduled Castes (SCs) followed by SC\/ST\n(Prevention of Atrocities) Act  with 33.8% (1,38,533 cases) **","fd85be9d":"# **Introduction**\n\n\n   Indian caste system is hierarchical superimposition of classes.Despite caste discrimination being outlawed it still exists in Indian society  because of this Scheduled caste and Scheduled Tribe  who are the lowest strata of this hierarchy are **weaker economically and politically as compared to General and Other Backward Classes who are at the top of this hierarchy. \n**\n   Caste related  violence has occurred and occurs in India in various forms. According to a report by Human Rights Watch, **\"Discriminatory and cruel, inhuman, and degrading treatment of over 165 million people in India has been justified on the basis of caste.** Caste is descent-based and hereditary in nature. It is a characteristic determined by one's birth into a particular caste, irrespective of the faith practiced by the individual. Caste denotes a traditional system of rigid social stratification into ranked groups defined by descent and occupation. **Caste divisions in India dominate in housing, marriage, employment, and general social interaction-divisions that are reinforced through the practice and threat of social ostracism, economic boycotts, and physical violence.**\n\n\n**Atrocity Act**:\n       The Scheduled Castes and Tribes (Prevention of Atrocities) Act, 1989 is an Act of the Parliament of India enacted to prevent atrocities against scheduled castes and scheduled tribes. The Act is popularly known as the SC\/ST Act, POA, the Prevention of Atrocities Act, or simply the Atrocities Act.Thus objectives of the Act clearly emphasise the intention of the government to deliver justice to these communities through proactive efforts to enable them to live in society with dignity and self-esteem and without fear or violence or suppression from the dominant castes. The practice of untouchability, in its overt and covert form was made a cognizable and non compoundable offence, and strict punishment is provided for any such offence.\n\n*##reference wikipedia*\n","35ef4038":"![ari-spada-V1y6si3fOho-unsplash%20%281%29.jpg](attachment:ari-spada-V1y6si3fOho-unsplash%20%281%29.jpg)","dd4143b3":"Lets see the list of districts which have high count of caste crimes according to the crime category","0d369938":"# Crime Against SCs states & District Wise\n\n\nFor this we will look into number of crime cases from six states . Rajasthan , Maharashtra , Bihar , Uttar Pradesh , Andhra Pradesh and Madhya pradesh.","0200bdf8":"# Crimes Against SC StateWise","986facee":"# Conclusion\n\n Despite governments best effort the number of atrocities and hurt cases are increasing over the years. **Rajasthan ,Uttarpradesh , Bihar ,Maharashtra and Rajasthan** seem to be hotspot for crimes against Scs. ","8cd4b4f5":"When it comes to the total number of cases **Bharatpur **of Rajasthan has the highest number of caste crimes in these 13 years. ","a7105e92":"Lets look at the data. This dataset is provide by National Crime Record Bureau of India. Dataset contains information about no of cases reported of  ten crimes commited against Scheduled Castes from 2001 to 2013. In dataset POA act and PCR act refer to the no of cases reported according to these acts.","4809d4f0":"**Number of Rape cases in 6 States**","0735e3c6":"# Crime Against SCs District Wise","ca6ce9dd":"Statewise graphs shows that Uttarpradesh , Rajasthan , Maharashtra and Madhyapradesh are the states where the number of reported cases of violence against scheduled caste is higher .","680fa273":"**Number of cases of Hurt in 6 states**","eba626d4":"Crime Distribution"}}