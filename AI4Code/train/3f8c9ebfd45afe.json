{"cell_type":{"5c8cdce8":"code","62f0b517":"code","245f1ef1":"code","81926e43":"code","4615c2fb":"code","8e5e8d6e":"code","49a07a84":"code","1d9029b6":"code","721002a5":"code","a2d69c30":"code","4b765ae4":"code","0d310d99":"code","b69dfa9f":"code","075f8e0a":"code","405784f0":"code","81385bb3":"code","61388895":"code","8819e575":"code","464ac01d":"code","59bf49f5":"code","e15ee3ce":"code","d05572b5":"code","377f381c":"code","3304ad6c":"code","4e86fd5a":"code","c6cf515d":"code","d3db7d3c":"code","328f2ff8":"code","11f1b066":"code","8b540be5":"code","ac4b92aa":"code","a2d6bd0d":"code","53172cb6":"code","55712731":"code","66db864e":"code","99b2b687":"code","51eee539":"code","4820a296":"code","78324f22":"code","d840f557":"code","b54ca56e":"code","fa7a1581":"code","19b5801c":"code","342fa1ac":"code","2ad5d67a":"code","9cf1ae24":"code","a6f8bade":"code","633a9359":"code","64cb0e23":"code","9e1210e2":"code","8bccd0f4":"code","89bf4f7b":"code","802717bd":"code","7c8d60ab":"code","6dce08f3":"code","408c7a11":"code","3b1dba63":"code","cff9e2de":"code","13a228aa":"code","3420e918":"code","2d6775d5":"code","4ed907eb":"code","c1c3404d":"code","c433ee20":"code","6912687d":"code","77b0129a":"code","bba8200f":"code","67394f8f":"code","29093f0d":"code","c1324838":"code","bf670232":"code","eab27e33":"code","057f7184":"code","80c65cff":"code","6219ba1d":"code","9170e316":"code","7b117505":"code","a1f50e4b":"code","9c70b6a8":"code","5947d7fc":"code","3e15968e":"code","784a6dcc":"code","cb0bae02":"code","c3759b51":"code","c0b31cb6":"code","36043229":"code","16062b25":"code","67751b12":"code","0b62b876":"code","47522e52":"code","55c6bd25":"code","677e991f":"code","4d8f1993":"code","86bd399c":"code","b86e361a":"code","93e25124":"code","f8bfb357":"code","319c7df3":"code","028cade4":"code","61e0cdf6":"code","84bafba1":"code","90d1858b":"code","fa293eae":"code","03d170e1":"code","259da1a5":"code","9ef68969":"code","8d5ed3f7":"code","e205088d":"code","bba3478c":"code","309f6610":"code","60c938c4":"code","7775bdb2":"code","88b5f0f3":"code","267792cf":"code","cb10e18b":"code","a1ccdf42":"code","84075a29":"code","54d62e01":"code","4c3a5bcc":"code","b673e695":"code","c6a07ede":"code","394d93f9":"code","dc88f506":"code","284c7abc":"code","8fc9aec3":"code","d00769ce":"code","a9f317e8":"code","1f146100":"code","1cbc1af0":"code","423b2243":"code","3d13c6cd":"code","bb889ab6":"code","dbf4923f":"code","37d7a775":"code","af30af74":"code","5fad4cca":"code","77e889a0":"code","3ec61348":"code","07dfbe8e":"code","03e772b0":"code","dd61b8a5":"code","7b3696a5":"code","7a3d4d36":"code","3282cf04":"code","22a41a68":"code","6b23e753":"code","2542348b":"code","a34046ce":"code","897bbf26":"code","c22b9e31":"code","6eadfd4d":"code","0d0a272b":"code","13b2285f":"code","aaf498d5":"code","8adbaa53":"code","4c923d94":"code","e9d4be6d":"code","bff5f0dd":"code","030e7b5b":"code","577a8955":"code","0707f6f6":"code","d78f7856":"code","a808ce18":"code","6fa4af44":"code","cfe1e062":"code","477002da":"code","81b097f3":"code","2a246aaf":"code","89562d5c":"code","20ec0a6f":"code","caa870f6":"code","d53f1513":"code","c38b90f3":"code","50e2ad16":"code","190c0112":"code","b3641615":"code","ff34b1a6":"code","b432f469":"code","fec64b28":"code","2a3d09ba":"code","06bf2060":"code","cbd1dc52":"markdown","336f728b":"markdown","58832ace":"markdown","6ac95174":"markdown","aa24a797":"markdown","79e58708":"markdown","d48af102":"markdown","81718e6d":"markdown","19b1cd76":"markdown","935336ad":"markdown","889f3a63":"markdown","79a38069":"markdown","9fbe3d3e":"markdown","d0a6b30e":"markdown","f2a208b3":"markdown","c83ef503":"markdown","331c996f":"markdown","50354cd1":"markdown","969bc520":"markdown","902eb097":"markdown","edbf0b27":"markdown","90ed66f4":"markdown","74979dc4":"markdown","41c38804":"markdown","4de8d852":"markdown","5bbdc82a":"markdown","3bd0353b":"markdown","8e88c8b5":"markdown","cf99d3b8":"markdown","c1296860":"markdown","a5efeaa0":"markdown","417597aa":"markdown","743fe119":"markdown","10e2e1c0":"markdown","3a71df40":"markdown","daf4d3aa":"markdown","9e054565":"markdown","4a6f0679":"markdown","7bf4acb8":"markdown","805aeef5":"markdown","dc9d6dfa":"markdown","dd1bf6cb":"markdown","35afb23f":"markdown","8cc28642":"markdown","458f9a26":"markdown","4204fccb":"markdown","f8671188":"markdown","9b3c3500":"markdown","5cfbc6b6":"markdown","a8ccdcb7":"markdown","22b972d8":"markdown","d08d8ae2":"markdown","180fed09":"markdown","14ba1779":"markdown","0e1c7082":"markdown","25e4e06d":"markdown","d1492543":"markdown","d01c3948":"markdown","1379341a":"markdown","e6791073":"markdown","1cff1174":"markdown","c3a7bfd7":"markdown","cd329bc5":"markdown","9a7310bb":"markdown","760cef19":"markdown","f5a99665":"markdown","bb9f30f2":"markdown","a5983c94":"markdown","10756695":"markdown","6d45a2ae":"markdown","385fac1d":"markdown","e9ddd26f":"markdown","551a5b25":"markdown","b1ba8732":"markdown","43a33adc":"markdown","d5c38352":"markdown","29374cd7":"markdown","12ddcb71":"markdown","f076aad9":"markdown","ca314a35":"markdown","ef341dfd":"markdown","50981da1":"markdown","2abdc925":"markdown","4f9bd118":"markdown","206c13ff":"markdown","2baf3c93":"markdown","17bc93f0":"markdown","3bbe2921":"markdown","a424ca01":"markdown","069ac29a":"markdown","89d916e5":"markdown","4bd71782":"markdown","63588ed5":"markdown","f032b47d":"markdown","e5f9139e":"markdown","7082442d":"markdown","d1694c72":"markdown","21f458c1":"markdown","44171c86":"markdown","ccd04249":"markdown","419c0e33":"markdown","8358f7ea":"markdown","9364fe9e":"markdown","f2811d7f":"markdown","d75c5084":"markdown","d4e0f01b":"markdown","543462eb":"markdown","311d8650":"markdown","bedc0e0b":"markdown","e4d1732c":"markdown","c04ca7ae":"markdown","ed09c979":"markdown","bd13391b":"markdown","04206617":"markdown","d70716c5":"markdown","978998f6":"markdown","4a457785":"markdown","04b8c6b4":"markdown","76620ad6":"markdown","5b7f479e":"markdown","76ae3d34":"markdown","475e05f9":"markdown","82f29492":"markdown","0569da3a":"markdown","5481e83e":"markdown","9b6db783":"markdown","8118f2d9":"markdown","695c3b8e":"markdown","a7f07f89":"markdown","632931d1":"markdown","202b2960":"markdown","51256b6c":"markdown","33211ded":"markdown","028d5f97":"markdown","cb98f11d":"markdown","b6bb8c95":"markdown","0e74e39e":"markdown","37ee8c7b":"markdown","776f40e9":"markdown","21de6b22":"markdown","6a061562":"markdown","1cf3c329":"markdown","c455a99c":"markdown","d0beb425":"markdown","66210160":"markdown","ffcd7e10":"markdown","49704eb7":"markdown","f47bbc7c":"markdown","d4e085b1":"markdown","1dd35d39":"markdown","98bcd987":"markdown","e2a69561":"markdown","ba033537":"markdown","0e78473c":"markdown","35ce99ed":"markdown","8a16accf":"markdown","e36def2a":"markdown","3a22ec30":"markdown","99986287":"markdown","c2dc6ef7":"markdown","e979ba25":"markdown","26244f95":"markdown","f4a66ca7":"markdown","42192a40":"markdown","791c0250":"markdown","bcbae22b":"markdown","f33178c2":"markdown","7d978889":"markdown","7294b7ad":"markdown","451e9ff2":"markdown","5e774b5f":"markdown","def7cad1":"markdown","e77c88ce":"markdown","afef7744":"markdown","33ecb56b":"markdown","f5004dbf":"markdown","ef512685":"markdown","8a9f9272":"markdown","7b483573":"markdown","35b9c1fb":"markdown","c4eec49c":"markdown","935ceef8":"markdown","bf5715d0":"markdown","29c7c495":"markdown","e7c0b0de":"markdown","15a4305a":"markdown","c0f3cc52":"markdown","878d7055":"markdown","fb58939b":"markdown","2b7d9d1d":"markdown","a981eebe":"markdown","a463fbfc":"markdown","372d8f72":"markdown","d81675cb":"markdown","fc1e1549":"markdown","ab68ce1c":"markdown","56b041a2":"markdown","dbaa3516":"markdown","73d01b53":"markdown","98f20469":"markdown","b1f30fd3":"markdown","371a9e40":"markdown","8cd164c3":"markdown","418f1322":"markdown","44927652":"markdown","6b4362e5":"markdown","1d94ac0d":"markdown","708e73c8":"markdown","6e78e5c0":"markdown","fc19ea0d":"markdown","9bec892e":"markdown","48bb8b06":"markdown","7542a563":"markdown","acba5531":"markdown","43e55575":"markdown","81827bff":"markdown","8bc86aae":"markdown","b39b6fd1":"markdown","43d09042":"markdown","ec9cd100":"markdown","18076625":"markdown","11e3c582":"markdown","bef1f1d6":"markdown","cb34ff82":"markdown","dfa25a71":"markdown","588e1c4a":"markdown","66ffffe1":"markdown","2b7db996":"markdown","1ab83b70":"markdown","438849e0":"markdown","e7bdaf51":"markdown","cd42306e":"markdown","d5e1ecd7":"markdown","eacd1a17":"markdown","659ea4b4":"markdown","597d36b3":"markdown","6a0408a9":"markdown","107943d5":"markdown","f8f137a8":"markdown","fcf0e2aa":"markdown","3b3481dd":"markdown","66c93d3a":"markdown","ff5c00a9":"markdown","02ed55b6":"markdown","3de53960":"markdown","170a552e":"markdown","b370884d":"markdown","3cc450b3":"markdown","7e91f9c0":"markdown","76e3d62b":"markdown","480d4dfe":"markdown","515b9100":"markdown","8587c469":"markdown","0aebd003":"markdown","7f0e9c2b":"markdown","bad24ace":"markdown","ec0a6272":"markdown","482e9b31":"markdown","338f0db8":"markdown","2fb5cd83":"markdown","bf60721d":"markdown","a37916ac":"markdown","f0cfcd33":"markdown","e464c38c":"markdown","26d665f1":"markdown","ea2221ae":"markdown","32897647":"markdown"},"source":{"5c8cdce8":"x = 10","62f0b517":"x","245f1ef1":"y = 5","81926e43":"x + y ","4615c2fb":"nome = 'Jos\u00e9'","8e5e8d6e":"sobrenome = 'da Silva'","49a07a84":"nome_completo = nome + ' ' + sobrenome","1d9029b6":"nome_completo","721002a5":"import pandas as pd\nimport seaborn as sns","a2d69c30":"igm = pd.read_csv('..\/input\/igm_modificado.csv')","4b765ae4":"igm","0d310d99":"igm.head()","b69dfa9f":"igm.tail()","075f8e0a":"igm.sample(5)","405784f0":"igm.sample(5).T","81385bb3":"igm[0:5].T","61388895":"igm[-5:].T","8819e575":"igm[20:30].T","464ac01d":"igm['porte']","59bf49f5":"igm[['municipio', 'indice_governanca']]","e15ee3ce":"type(igm['porte'])","d05572b5":"igm['porte'].value_counts()","377f381c":"%matplotlib inline","3304ad6c":"igm['porte'].value_counts().plot.bar()","4e86fd5a":"ind_des = igm['indice_governanca']","c6cf515d":"ind_des.count()","d3db7d3c":"ind_des.size","328f2ff8":"ind_des.isnull()","11f1b066":"ind_des.isnull().sum()","8b540be5":"ind_des.dropna()","ac4b92aa":"ind_des.isnull().sum()","a2d6bd0d":"ind_des.dropna(inplace=True)","53172cb6":"ind_des.isnull().sum()","55712731":"ind_des.min()","66db864e":"ind_des.max()","99b2b687":"ind_des.mean()","51eee539":"ind_des.std()","4820a296":"ind_des.describe()","78324f22":"igm.describe()","d840f557":"ind_des.hist()","b54ca56e":"sns.kdeplot(ind_des)","fa7a1581":"sns.distplot(ind_des.dropna())","19b5801c":"igm[igm['regiao']=='NORDESTE']","342fa1ac":"igm['regiao']=='NORDESTE'","2ad5d67a":"filtro = igm['regiao']=='NORDESTE'","9cf1ae24":"igm[filtro].T","a6f8bade":"nordeste = igm[filtro]","633a9359":"nordeste.sample(5).T","64cb0e23":"nordeste['perc_pop_econ_ativa'].describe()","9e1210e2":"nordeste['perc_pop_econ_ativa'].hist(bins=50)","8bccd0f4":"filtro_nordeste = ~nordeste['perc_pop_econ_ativa'].isnull()","89bf4f7b":"nordeste[filtro_nordeste].sort_values(by='perc_pop_econ_ativa', ascending=False)[0:5].T","802717bd":"filtro_2 = ~igm['perc_pop_econ_ativa'].isnull()","7c8d60ab":"igm[filtro & filtro_2].sort_values(by='perc_pop_econ_ativa', ascending=False)[0:5].T","6dce08f3":"igm.shape","408c7a11":"nordeste.shape","3b1dba63":"igm['municipio'].shape","cff9e2de":"igm[['municipio']].shape","13a228aa":"filtro.shape","3420e918":"filtro_nordeste.shape","2d6775d5":"filtro_2.shape","4ed907eb":"nordeste[filtro_2]","c1c3404d":"igm.info()","c433ee20":"igm['area'].sample(5)","6912687d":"igm['area'].astype(float)","77b0129a":"igm['area'].str.replace(',','').astype(float).sample(10)","bba8200f":"igm['area'] = igm['area'].str.replace(',','').astype(float)","67394f8f":"igm['populacao'].sample(10)","29093f0d":"igm['populacao'] = igm['populacao'].str.replace(',','')","c1324838":"igm['populacao'] = igm['populacao'].astype(float)","bf670232":"igm['populacao'] = igm['populacao'].str.replace('.','')","eab27e33":"valor_problema = '41.487(1)'","057f7184":"valor_problema.split('(')","80c65cff":"valor_problema.split('(')[0]","6219ba1d":"igm['populacao'] = igm['populacao'].str.split('(')","9170e316":"igm['populacao'].sample(10)","7b117505":"igm['populacao'] = igm['populacao'].str[0]","a1f50e4b":"igm['populacao'].sample(10)","9c70b6a8":"igm['populacao'] = igm['populacao'].astype(float)","5947d7fc":"igm['populacao'] \/ igm['area']","3e15968e":"igm['densidade_2'] = igm['populacao'] \/ igm['area']","784a6dcc":"igm[['municipio','populacao','area','densidade_dem', 'densidade_2']].sample(10)","cb0bae02":"igm['densidade_dem'] = igm['densidade_2']","c3759b51":"igm.drop(columns='densidade_2', inplace=True)","c0b31cb6":"igm['comissionados_por_servidor'] = igm['comissionados']\/igm['servidores']","36043229":"!pip install plotly","16062b25":"import plotly.offline as plotly\nimport plotly.graph_objs as go","67751b12":"plotly.init_notebook_mode(connected=True)","0b62b876":"pyplot_data = [go.Histogram(x=igm['exp_vida'])]","47522e52":"plotly.iplot(pyplot_data)","55c6bd25":"pyplot_data_norm = [go.Histogram(x=igm['exp_vida'], histnorm='probability')]","677e991f":"plotly.iplot(pyplot_data_norm)","4d8f1993":"igm.to_csv('igm_virgula.csv', index=False, sep=';', decimal=',')","86bd399c":"pd.read_csv('igm_virgula.csv',  sep=';').info()","b86e361a":"pd.read_csv('igm_virgula.csv', sep=';', decimal=',').info()","93e25124":"pd.read_excel('..\/input\/exemplo_1.xls')","f8bfb357":"pd.read_excel('..\/input\/exemplo_1.xls', sheet_name='Munic\u00edpios')","319c7df3":"pd.read_excel('..\/input\/exemplo_1.xls', sheet_name='Munic\u00edpios', header=1)","028cade4":"pd.read_excel('..\/input\/exemplo_1.xls', sheet_name='Munic\u00edpios', header=1, skip_footer=14)","61e0cdf6":"df = pd.read_excel('..\/input\/exemplo_1.xls', sheet_name='Munic\u00edpios', header=[1], skip_footer=14)","84bafba1":"df.info()","90d1858b":"df['codigo'] = df['COD. UF'] * 100000 + df['COD. MUNIC']","fa293eae":"df.sample(5)","03d170e1":"sns.distplot(igm[igm['regiao'] == 'NORDESTE']['indice_governanca'].dropna(), label='NORDESTE')","259da1a5":"sns.distplot(igm[igm['regiao'] == 'SUDESTE']['indice_governanca'].dropna(), label='SUDESTE')","9ef68969":"import matplotlib.pyplot as plt","8d5ed3f7":"sns.distplot(igm[igm['regiao'] == 'NORDESTE']['indice_governanca'].dropna(), label='NORDESTE')\nsns.distplot(igm[igm['regiao'] == 'SUDESTE']['indice_governanca'].dropna(), label='SUDESTE')\nplt.legend()","e205088d":"sns.distplot(igm[igm['regiao'] == 'NORDESTE']['indice_governanca'].dropna(), label='NORDESTE')\nsns.distplot(igm[igm['regiao'] == 'SUDESTE']['indice_governanca'].dropna(), label='SUDESTE')\nsns.distplot(igm[igm['regiao'] == 'CENTRO-OESTE']['indice_governanca'].dropna(), label='CENTRO-OESTE')\nplt.legend()","bba3478c":"sns.distplot(igm[igm['regiao'] == 'NORDESTE']['indice_governanca'].dropna(), label='NORDESTE')\nsns.distplot(igm[igm['regiao'] == 'SUDESTE']['indice_governanca'].dropna(), label='SUDESTE')\nsns.distplot(igm[igm['regiao'] == 'NORTE']['indice_governanca'].dropna(), label='NORTE')\nsns.distplot(igm[igm['regiao'] == 'SUL']['indice_governanca'].dropna(), label='SUL')\nsns.distplot(igm[igm['regiao'] == 'CENTRO-OESTE']['indice_governanca'].dropna(), label='CENTRO-OESTE')\nplt.legend()","309f6610":"igm.nunique()","60c938c4":"sns.boxplot(x=\"regiao\", y=\"indice_governanca\", data=igm)","7775bdb2":"sns.violinplot(x=\"regiao\", y=\"indice_governanca\", data=igm)","88b5f0f3":"sns.violinplot(x=\"regiao\", y=\"indice_governanca\", data=igm, hue='capital')","267792cf":"sns.violinplot(x=\"regiao\", y=\"indice_governanca\", data=igm, hue='porte')","cb10e18b":"sns.factorplot(x=\"regiao\", y=\"indice_governanca\", data=igm, col='porte', kind='violin')","a1ccdf42":"sns.countplot(x='regiao', data=igm)","84075a29":"sns.countplot(x='regiao', hue='porte', data=igm)","54d62e01":"sns.factorplot(x=\"regiao\", data=igm, col='porte', kind='count')","4c3a5bcc":"igm['regiao'].value_counts().plot.pie()","b673e695":"igm['regiao'].value_counts().index","c6a07ede":"pie_chart = go.Pie(labels=igm['regiao'].value_counts().index, values=igm['regiao'].value_counts())\nplotly.iplot([pie_chart])","394d93f9":"igm.isnull().sum()","dc88f506":"igm['sem_igm'] = igm['indice_governanca'].isnull()","284c7abc":"sns.violinplot(x=\"regiao\", y=\"gasto_pc_educacao\", data=igm, hue='sem_igm')","8fc9aec3":"igm['sem_gasto_pc_saude'] = igm['gasto_pc_saude'].isnull()","d00769ce":"sns.violinplot(x=\"regiao\", y=\"nota_mat\", data=igm, hue='sem_gasto_pc_saude')","a9f317e8":"pd.qcut(igm['taxa_empreendedorismo'], 3)","1f146100":"igm['cat_te'] = pd.qcut(igm['taxa_empreendedorismo'], 3)","1cbc1af0":"sns.violinplot(x=\"regiao\", y=\"exp_vida\", data=igm, hue='cat_te')","423b2243":"sns.swarmplot(x=\"regiao\", y=\"indice_governanca\", hue='porte', data=igm)","3d13c6cd":"# sns.set(rc={'figure.figsize':(16.7,8.27)})","bb889ab6":"sns.barplot(x=\"regiao\", y=\"indice_governanca\", hue='porte', data=igm)","dbf4923f":"sns.barplot(x=\"regiao\", y=\"taxa_empreendedorismo\",  data=igm)","37d7a775":"sns.barplot(x=\"regiao\", y=\"anos_estudo_empreendedor\",  data=igm)","af30af74":"sns.barplot(x=\"regiao\", y=\"pib_pc\",  data=igm)","5fad4cca":"igm.groupby('regiao')['pib_pc'].mean()","77e889a0":"sns.pairplot(x_vars=['gasto_pc_educacao'], y_vars=['nota_mat'], data=igm, hue=\"regiao\", size=5)","3ec61348":"sns.pairplot(x_vars=['gasto_pc_educacao'], y_vars=['nota_mat'], data=igm, hue=\"regiao\", kind='reg', size=5)","07dfbe8e":"igm['nome_len'] = igm['municipio'].str.len()","03e772b0":"sns.pairplot(x_vars=['nome_len'], y_vars=['idhm'], data=igm, kind='reg', size=5)","dd61b8a5":"temp_df = igm[['nota_mat','exp_vida', 'gasto_pc_saude', 'gasto_pc_educacao', 'regiao']]","7b3696a5":"sns.pairplot(temp_df, hue='regiao', kind='reg')","7a3d4d36":"sns.pairplot(temp_df.dropna(), hue='regiao', kind='reg')","3282cf04":"sns.pairplot(x_vars=['populacao'], y_vars=['indice_governanca'], data=igm, hue=\"regiao\", kind='reg', size=5)","22a41a68":"import numpy as np","6b23e753":"igm['log_pop'] = np.log(igm['populacao'])","2542348b":"sns.pairplot(x_vars=['log_pop'], y_vars=['indice_governanca'], data=igm, hue=\"regiao\", kind='reg', size=5)","a34046ce":"format_dict = {'perc_pop_econ_ativa' :'{:.2%}'}","897bbf26":"igm.sample(5).style.format(format_dict)","c22b9e31":"igm.info()","6eadfd4d":"format_dict = {'perc_pop_econ_ativa' :'{:.0%}', 'taxa_empreendedorismo' :'{:.0%}'}","0d0a272b":"igm.sample(5).style.format(format_dict)","13b2285f":"igf = pd.read_excel('..\/input\/exemplo_2.xls', header=[0], skiprows=8, skip_footer=2)","aaf498d5":"igf","8adbaa53":"igf = igf[1:].copy()","4c923d94":"igf.rename(columns={'Unnamed: 1':'Ranking Estadual'}, inplace=True)","e9d4be6d":"igf.rename(columns={'Munic\u00edpio':'mun'}, inplace=True)\ndf.rename(columns={'NOME DO MUNIC\u00cdPIO':'mun'}, inplace=True)","bff5f0dd":"df.merge(igf)","030e7b5b":"df.merge(igf).shape","577a8955":"df.shape","0707f6f6":"igf.shape","d78f7856":"df['Munic\u00edpio'] = df['mun']","a808ce18":"igf['mun'] = igf['mun'].str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')\ndf['mun'] = df['mun'].str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')","6fa4af44":"df.merge(igf).shape","cfe1e062":"igf['mun'] = igf['mun'].str.replace(' ','')\ndf['mun'] = df['mun'].str.replace(' ','')","477002da":"df.merge(igf).shape","81b097f3":"df_mun = df[~df.mun.isin(igf['mun'])]['mun'].values","2a246aaf":"igf_mun = igf[~igf.mun.isin(df['mun'])]['mun'].values","89562d5c":"from difflib import SequenceMatcher","20ec0a6f":"for municipio_1 in df_mun:\n    score = 0\n    var_names = ''\n    for municipio_2 in igf_mun:\n        tmp = SequenceMatcher(None, municipio_1, municipio_2).ratio()\n        if tmp > score:\n            score = tmp\n            municipios_proximos = municipio_1, municipio_2\n    print(score, municipios_proximos)\n    if score > 0.8:\n        idx = igf[igf['mun']==municipios_proximos[1]].index[0]\n        igf.at[idx, 'mun'] = municipios_proximos[0]       ","caa870f6":"df.merge(igf).shape","d53f1513":"df[~df.mun.isin(igf.mun)]","c38b90f3":"igf[~igf.mun.isin(df.mun)]","50e2ad16":"igf.at[2911,'mun'] = 'EmbudasArtes'","190c0112":"df[~df.mun.isin(igf.mun)]","b3641615":"igf[~igf.mun.isin(df.mun)]","ff34b1a6":"igf.at[4702, 'mun'] = 'SaoValerio'","b432f469":"igf.at[4962, 'mun'] = 'SaoVicentedoSerido'","fec64b28":"df[~df.mun.isin(igf.mun)]","2a3d09ba":"igf[~igf.mun.isin(df.mun)]","06bf2060":"df.merge(igf).shape","cbd1dc52":"##  `Exerc\u00edcios: Explorando Vari\u00e1veis Cont\u00ednuas`\n\n1. Fazer um pairplot usando `taxa_empreendedorismo` e `nota_mat` usando `hue=porte` (apenas 1 gr\u00e1fico e n\u00e3o 4)\n2. Fazer um pairplot usando `taxa_empreendedorismo` e `nota_mat` usando `hue=porte` (4 gr\u00e1ficos)\n3. Fazer um pairplot usando `taxa_empreendedorismo`, `anos_estudo_empreendedor`, `nota_mat` e `idhm`, usando `hue=porte`","336f728b":"Vamos criar um novo filtro para o `DataFrame` inteiro e n\u00e3o s\u00f3 para o Nordeste.","58832ace":"# Primeiro Contato com os Dados","6ac95174":"Uma forma de melhor utilizarmos essa informa\u00e7\u00e3o \u00e9 contabilizando o total de valores em branco, note que `True` tem valor `1` e `False` tem valor `0`, portanto se somarmos todos os elementos, teremos o total de valores em branco.","aa24a797":"Como n\u00e3o temos c\u00f3digos em ambos os `DataFrames` com nomes de `df` e `igf`, vamos fazer a jun\u00e7\u00e3o deles por meio dos nomes dos munic\u00edpios, para isso vamos deixar o nome da coluna referente aos nomes dos munic\u00edpios iguais nos 2 `DataFrames`.","79e58708":"Outra forma de vermos os cinco \u00faltimos comandos \u00e9:","d48af102":"## Dicas de Jupyter Notebook\n\nEste programa que estamos usando no navegado se chama Jupyter Notebook e \u00e9 um interpretador de Python interativo, podemos digitar um comando de Python e apertar _Shift + Enter_ e esse comando \u00e9 executado e seu resultado \u00e9 impresso na tela.\n\nExistem alguns atalhos bastante \u00fateis para trabalhar com Jupyter Notebook:\n    0. 'Esc' - Sa\u00ed do modo edi\u00e7\u00e3o da c\u00e9lula atual\n    1. 'Enter' - Edita a c\u00e9lula selecionada\n    2. 'Shift + Enter' - Executa a c\u00e9lula selecionada\n    3. 'A' - Adiciona uma nova c\u00e9lula acima da c\u00e9lula atual (n\u00e3o pode estar em modo de edi\u00e7\u00e3o)\n    4. 'B' - Adiciona uma nova c\u00e9lula abaixo da c\u00e9lula atual (n\u00e3o pode estar em modo de edi\u00e7\u00e3o) \n    5. 'X' - Deleta a c\u00e9lula selecionada (n\u00e3o pode estar em modo de edi\u00e7\u00e3o)\n    6. 'Z' - Desfaz a dele\u00e7\u00e3o de uma c\u00e9lula (n\u00e3o pode estar em modo de edi\u00e7\u00e3o)\n    7. 'Ctrl + Z' - Desfaz as \u00faltimas edi\u00e7\u00f5es\n    8. 'Ctrl + Shift + Z' - Refaz o \u00faltimo comando de desfazer\n    9. 'H' - Abre um arquivo de ajuda com todos os atalhos (n\u00e3o pode estar em modo de edi\u00e7\u00e3o)\n    10. 'Tab' - Faz sugest\u00f5es para completar o c\u00f3digo\n    11. '?fun\u00e7\u00e3o' - Mostra a documenta\u00e7\u00e3o de uma dada fun\u00e7\u00e3o\n    \n    (Modo de edi\u00e7\u00e3o \u00e9 verde ao lado, e modo de sele\u00e7\u00e3o \u00e9 azul ao lado)","81718e6d":"E vamos usar o `pairplot()` com `hue=regiao` e `kind=reg`:","19b1cd76":"A visualiza\u00e7\u00e3o do DataFrame acima \u00e9 composta pelos seguintes elementos:\n    \n    1. Index\n    2. Elemento do Index\n    3. Colunas\n    4. Nome da coluna (pode ter espa\u00e7o, acento e etc, mas nome curto, simples, e representativo facilita o c\u00f3digo)\n    5. '...'\n    6. C\u00e9lulas (Dados)\n    7. NaNs","935336ad":"Vamos plotar 3 gr\u00e1ficos ao mesmo tempo:","889f3a63":"1. Crie um filtro chamado `meu_filtro` para selecionar apenas as linhas onde os valores da coluna `pib_pc` sejam maiores do que 50000\n2. Crie um novo `DataFrame` chamado `igm_filtrado_pib_pc` aplicando o `meu_filtro` no `igm`\n3. Utilize o m\u00e9todo `.describe()` na coluna `pib_pc` do `igm_filtrado_pib_pc`\n4. Plote um histograma da coluna `pib_pc` do `igm_filtrado_pib_pc`","79a38069":"# Visualizando Categorias","9fbe3d3e":"\u00c9 bastante comum na ci\u00eancia de dados se classificar v\u00e1riaveis em: \n    1. Categ\u00f3ricas - Poucas op\u00e7\u00f5es de variabilidade\n    2. Cont\u00ednuas - Muitas op\u00e7\u00f5es de variabilidade\n    \nUma forma muito boa de entender as suas vari\u00e1veis categ\u00f3ricas \u00e9 utilizando o comando `nunique()`, ele ir\u00e1 te mostrar quantos valores \u00fanicos existem para cada coluna. ","d0a6b30e":"Para criarmos ela basta rodarmos m\u00e9todo `.isnull()` e assinalar os valores ao uma nova coluna `sem_igm`:","f2a208b3":"Podemos plotar essa distribui\u00e7\u00e3o para o Nordeste:","c83ef503":"## Plotando Nosso Primeiro Gr\u00e1fico","331c996f":"Tamb\u00e9m temos valores com v\u00edrgula, vamos substitu\u00ed-los por um valor em branco:","50354cd1":"Note que o `.count()` n\u00e3o contabiliza valores em branco, se quisermos ver os valores em branco temos que usar o atributo `.size`, que n\u00e3o tem paranteses","969bc520":"## Avaliando o tamanho dos DataFrames e Series","902eb097":"##  `Exerc\u00edcios: Series`","edbf0b27":"## O que vamos aprender neste caderno?\n\nVamos aprender o b\u00e1sico de manipula\u00e7\u00e3o e visualiza\u00e7\u00e3o de dados para conseguirmos fazer por conta pr\u00f3prias as nossas pr\u00f3prias an\u00e1lises.","90ed66f4":"N\u00e3o mudou, por que isso aconteceu? Uma s\u00e9rie de fun\u00e7\u00f5es no pandas n\u00e3o alteram o objeto em quest\u00e3o, porque muitas vezes estamos fazendo transforma\u00e7\u00f5es tempor\u00e1rias para gerar uma visualiza\u00e7\u00e3o ou an\u00e1lise, para mudar o objeto temos que passar um par\u00e2metro a mais que \u00e9 o `inplace=True`.","74979dc4":"## Plotando M\u00faltiplos Gr\u00e1ficos","41c38804":"## Explorando Dados do Nordeste","4de8d852":"Vamos terminar de substituir outros mun\u00edcipios que fa\u00e7am sentido:","5bbdc82a":"Seguem os anos de estudo do empreendedor por regi\u00e3o:","3bd0353b":"Vamos selecionar o elemento da posi\u00e7\u00e3o zero para os casos de termos um `(` no elemento e atualizar os valores da coluna com isso.","8e88c8b5":"## Usando o .describe() em um DataFrame","cf99d3b8":"Uma forma interessante de facilitar a nossa visualiza\u00e7\u00e3o o DataFrame \u00e9 selecionando apenas algumas colunas que nos interessam, como no caso da densidade demogr\u00e1fica: `municipio`, `populacao`, `area`, `densidade_dem` e `densidade_2`, para isso basta colocarmos `igm[[]]` com os nomes das colunas dentro separados por v\u00edrgula (lembrando das aspas para identificar que \u00e9 um texto).","c1296860":"# Fazendo Opera\u00e7\u00f5es de Agregamento:","a5efeaa0":"Podemos adicionar mais um agrupamento no gr\u00e1fico com o comando `hue`:","417597aa":"[20:30] vai selecionar exatamente 10 elementos (30 - 20). O n\u00famero da direita menos o n\u00famero da esquerda \u00e9 sempre o total de elementos que ser\u00e3o selecionados, e isso \u00e9 uma conven\u00e7\u00e3o no Python.\n\nO n\u00famero 20 \u00e9 selecionado por ser um intervalo fechado na esquerda, e o n\u00famero 30 n\u00e3o \u00e9 selecionado por ser um intervalo aberto na direita. O que \u00e9 outra conven\u00e7\u00e3o do Python.","743fe119":"Vamos imprimir os valores da coluna e ver que j\u00e1 temos algo com cara de n\u00famero, mas que ainda \u00e9 um `object`","10e2e1c0":"Para criarmos uma nova coluna basta colocarmos `igm[]` e dentro do colchetes botar o nome da nova coluna entre aspas. Temos que cuidar cuidado pois se esse nome j\u00e1 existir, iremos sobreescrever o que est\u00e1 l\u00e1.","3a71df40":"Para facilitar nossa vida, vamos criar uma vari\u00e1vel j\u00e1 filtrada chamada `nordeste`:","daf4d3aa":"## Violin plot","9e054565":"Podemos juntar diversos comando na mesma linha, isto \u00e9, logo ap\u00f3s o `sample(5)`, pode usar o `.T`, e essas funcionalidades ir\u00e3o funcionar em cascata e de forma sequ\u00eancial, primeiro o `sample(5)`, e depois o `.T`","4a6f0679":"Para garantir que nossos gr\u00e1ficos v\u00e3o ser plotados em todas as vers\u00f5es do `Jupyter Notebook` precisamos rodar o comando abaixo:","7bf4acb8":"## Comparando Densidades","805aeef5":"Podemos conferir que a atualiza\u00e7\u00e3o foi efetuada de forma correta:","dc9d6dfa":"## Criando novas vari\u00e1veis categ\u00f3ricas a partir de agrupamentos","dd1bf6cb":"E vamos plotar um gr\u00e1fico os utilizando como filtro:","35afb23f":"## Encadeamento de funcionalidades","8cc28642":"Podemos guardar esse resultado dentro de uma vari\u00e1vel:","458f9a26":"Para lermos o arquivo, vamos usar o `read_csv()` novamente, mas dessa vez precisamos usar o comando `sep=;`. Podemos usar o `.info()` em seguida para averiguarmos os tipos de dados:","4204fccb":"E executar o filtro em seguida:","f8671188":"## Histograma: Trocando Valores Absolutos por Probabilidades","9b3c3500":"##  `Exerc\u00edcios: Visualizando Categorias`\n\n1. Criar uma coluna `sem_gasto_pc_saude` a partir dos valores em branco da coluna `gasto_pc_saude`\n2. Criar uma coluna `cat_te` separando os valores em 3 categorias pra `qcut`\n3. Criar um `factorplot` do tipo `box` com `porte` no eixo `x` e `exp_vida` no eixo `y` e `col='regiao'` e `row='cat_te`\n4. Facilite a leitura dos nomes das regi\u00f5es. Dica: `g.set_xticklabels(rotation=30)`","5cfbc6b6":"Vamos primeiro dar uma olhada na coluna `populacao`","a8ccdcb7":"Temos uma vari\u00e1vel chamada `igm` que est\u00e1 guardando algo, para descobrirmos basta digitar `igm` e apertar `Shift + Enter`:","22b972d8":"Importante notar, que diferente dos gr\u00e1ficos do `pandas` e do `seaborn`, se voc\u00ea salvar esse arquivo e abrir depois, o gr\u00e1fico gerado pelo `plotly` n\u00e3o estar\u00e1 l\u00e1 para ser visualizado (nem de form n\u00e3o interativa).","d08d8ae2":"Podemos ver que ganhamos mais alguns itens no nosso merge, mas ainda falta um pouco:","180fed09":"##  `Exerc\u00edcios: Agrega\u00e7\u00f5es N\u00famericas`","14ba1779":"## Retirando acentos e caracteres especiais:","0e1c7082":"Vai acontecer de termos alguns gr\u00e1ficos que n\u00e3o ficam em uma escala adequada, para isso podemos tentar converter para uma escala logar\u00edtimica.","25e4e06d":"Se observamos cuidadosamente, veremos que no final do nosso arquivo temos uma s\u00e9rie de linhas que distoam dos dados coletados, para pularmos a importa\u00e7\u00e3o de algumas linhas no final do arquivo, podemos usar o par\u00e2metro `skip_footer`.","d1492543":"Podemos converter v\u00e1rias colunas ao mesmo tempo criando um dicion\u00e1rio com v\u00e1rios valores:","d01c3948":"Um gr\u00e1fico bastante \u00fatil de plotarmos \u00e9 o gr\u00e1fico de pizza, podemos fazer isso com o `pandas`:","1379341a":"Quando selecionamos uma coluna, o nosso resultado \u00e9 um objeto do tipo `Series`, que \u00e9 basicamente a forma do pandas representar uma coluna. Uma `Series` \u00e9 composta pelos seguintes elementos:\n    1. Index\n    2. Index label\n    3. Hidden values\n    4. Series Name\n    5. Lenght\n    6. dtype","e6791073":"Depois podemos executar o `.style.format()` em uma parte do `DataFrame` (ou todo ele se quis\u00e9ssemos):","1cff1174":"## B\u00f4nus: Mostrando Valores como um Percentual","c3a7bfd7":"Um jeito bem interessante de fazermos histogramas \u00e9 com gr\u00e1ficos interativos, um boa biblioteca para fazer isso \u00e9 a `plotly`, para instalarmos ela, basta usarmos o comando `!pip install plotly`","cd329bc5":"O `DataFrame` chamado `df` tem 5568 mun\u00edcipios e com 10 colunas:","9a7310bb":"Vamos avaliar as diferen\u00e7as:","760cef19":"Podemos usar o `.shape` em uma `Series` tamb\u00e9m, que nos retornar\u00e1 apenas 1 dimens\u00e3o.","f5a99665":"# Explorando vari\u00e1veis cont\u00ednuas","bb9f30f2":"## Dissecando Series (Tipo de Dados)","a5983c94":"## Ordenando um DataFrame que possui uma coluna com NaNs","10756695":"O `DataFrame` chamado `df` tem 5570 mun\u00edcipios e com 6 colunas:","6d45a2ae":"Selecionando o valor m\u00e1ximo do \u00edndice de desempenho","385fac1d":"E podemos executar o `.style.format()` novamente","e9ddd26f":"Vamos olhar os tipos de dados que est\u00e3o no nosso `DataFrame`","551a5b25":"Para for\u00e7ar a convers\u00e3o para um n\u00famero podemos usar o comando `.astype(float)`","b1ba8732":"Vamos salvar o nosso `igm` de volta no disco. Mas dessa vez vamos separar os campos por `;` (ponto e v\u00edrgula) em vez da `,` (v\u00edrgula) que era utilizada no nosso arquivo original, e vamos usar a `,` (v\u00edrgula) como separador decimal em vez do `.` (ponto)","43a33adc":"Vamos tentar juntar os `DataFrames` e ver o que acontece:","d5c38352":"Outra forma de escrever isso \u00e9 utilizando dois filtros ao mesmo tempo, para isso temos que usar o operador l\u00f3gico `&` que representa `E`, tamb\u00e9m temos a oportunidade usar o operador l\u00f3gico `|`, que significa `OU`:","29374cd7":"Para vermos apenas uma pequena parte, temos o comando `.head()` ir\u00e1 mostrar por padr\u00e3o as 5 primeiras linhas do que existe dentro de um conjunto de dados dentro de um objeto do pandas.","12ddcb71":"Vamos avaliar como cada `regiao` se sai em rela\u00e7\u00e3o ao `indice_governanca`","f076aad9":"## Criando novas vari\u00e1veis categ\u00f3ricas a partir de valores em branco","ca314a35":"O nosso `DataFrame` ap\u00f3s o `merge()` ficou com 5526 linhas, o que significa que 44 mun\u00edcipios n\u00e3o est\u00e3o com nomes iguais entre os DataFrames","ef341dfd":"Se olharmos o `.info()`, veremos que `perc_pop_econ_ativa` ainda \u00e9 num\u00e9rico:","50981da1":"Um tipo de gr\u00e1fico interessante \u00e9 o swarm plot que nos permite ver de forma granular os pontos que comp\u00f5e uma distribui\u00e7\u00e3o, e nos d\u00e3o a possibilidade de an\u00e1lises com a abaixo:","2abdc925":"Vamos importar o `SequenceMatcher` para compararmos dois textos e gerarmos um score de qu\u00e3o pr\u00f3ximos eles s\u00e3o (1 \u00e9 id\u00eantico e 0 \u00e9 nada similar).","4f9bd118":"##  `Exerc\u00edcios: Filtros`","206c13ff":"O `DataFrame` feito a partir do `filtro` \u00e9 menor como de se esperar:","2baf3c93":"Vamos importar uma segunda base de exemplos:","17bc93f0":"Jo\u00e3o Ferreira - https:\/\/www.linkedin.com\/in\/joaoavf\/\n\nMarcos Guim\u00e3raes - https:\/\/twitter.com\/marcosvafg","3bbe2921":"Note que o segundo filtro que utilizamos tem o mesmo tamanho do primeiro filtro e do `DataFrame` original","a424ca01":"Para vermos a probabilidade de dado valor acontecer em vez de quantos valores daquele tipo aconteceram, basta usar o par\u00e2metro `histnorm='probability'`:","069ac29a":"# Autores","89d916e5":"Note que o `filtro_nordeste` tem o mesmo n\u00famero de linhas do `DataFrame` que o originou","4bd71782":"1. Selecionar as 10 primeiras linhas mostrando as colunas `municipio`, `estado` e `idhm`.\n2. Selecionar das linhas 15 a 24 os valores da coluna `municipio`","63588ed5":"O `seaborn` de forma autom\u00e1tica agrupa de acordo com as vari\u00e1veis categ\u00f3ricas que voc\u00ea coloca no eixo `x` e tira as m\u00e9dias das vari\u00e1veis que voc\u00ea coloca no eixo `y`.\n\nSegue um \u00edndice de governan\u00e7a por regi\u00e3o e por porte de cidade:","f032b47d":"Vamos ver se essa coluna atende aos nossos objetivos:","e5f9139e":"Vamos criar uma coluna chamada `Mun\u00edcipio` para guardar os nomes originais dos mun\u00edcipios.","7082442d":"# Preparando o Ambiente\n\nImportando as bibliotecas que iremos usar no treinamento:","d1694c72":"## Plotando um Histograma do \u00cdndice de Governan\u00e7a","21f458c1":"Para substituirmos uma c\u00e9lula em espec\u00edfico \u00e9 ideal usar o comando `.at[]`","44171c86":"A coluna `densidade_2` se tornou obsoleta, podemos delet\u00e1-la com o seguinte comando:","ccd04249":"Selecionando o valor m\u00ednimo do \u00edndice de desempenho","419c0e33":"## Usando v\u00e1rios filtros ao mesmo tempo","8358f7ea":"Com bastante facilidade podemos plotar um gr\u00e1fico com os valores acima, basta colocar `.plot.bar()` na sequ\u00eancia.","9364fe9e":"Para ordernamos um dataframe por uma coluna basta usarmos o comando `.sort_values()` com o par\u00e2metro `by=nome_da_coluna`. O par\u00e2metro `ascending=False` serve para pegarmos os itens em ordem decrescente.","f2811d7f":"Vamos converter isso para `float`:","d75c5084":"Basicamente as tr\u00eas vari\u00e1veis categ\u00f3ricas com poucas op\u00e7\u00f5es que temos s\u00e3o `regi\u00e3o`, `capital` e `porte`.\n\nAl\u00e9m disso temos `estado`, mas que n\u00e3o iria ficar t\u00e3o bom para plotar gr\u00e1ficos. `participacao_transf_receita` e `taxa_empreendedorismo` tamb\u00e9m podem ser trabalhadas como vari\u00e1veis categ\u00f3ricas j\u00e1 que apesar de serem uma porcentagem, os decimals se perderam e acabamos tendo poucas op\u00e7\u00f5es de variabilidade.","d4e0f01b":"Vamos testar todos os valores contidos nas vari\u00e1veis `df_mun` e `igf_mun` para saber quais s\u00e3o os valores na coluna `mun` de cada `DataFrame` que mais se assemelham, e substituir esses valores caso eles tenham uma semelhan\u00e7a maior do que 80%.","543462eb":"Para pegarmos o valor negativo de uma sequ\u00eancia de `True` ou `False`, podemos usar o `~`","311d8650":"## M\u00faltiplas Regress\u00f5es Lineares","bedc0e0b":"E finalmente vamos plotar 5 gr\u00e1ficos ao mesmo tempo:","e4d1732c":"Uma forma mais elaborada de fazer isso \u00e9 com o violin plot, que al\u00e9m de fazer os quartis, plota em seu lado as distribui\u00e7\u00f5es dos valores.","c04ca7ae":"Para plotarmos o gr\u00e1fico, podemos fazer um pairplot, com o par\u00e2metro `kind` para vermos uma regress\u00e3o linear.","ed09c979":"## Retirando os espa\u00e7os","bd13391b":"## Opera\u00e7\u00f5es matem\u00e1ticas entre colunas","04206617":"Atr\u00e1ves do comando `isin()` conseguimos se os valores de uma coluna est\u00e3o contidos em outra coluna. Com o `~` conseguimos saber quais os valores n\u00e3o est\u00e3o contidos.","d70716c5":"A op\u00e7\u00e3o mais recomendada \u00e9 usar o `.style.format()`, que ir\u00e1 mexer apenas na exibi\u00e7\u00e3o dos dados e n\u00e3o ir\u00e1 alterar a estrutura dos dados em si.\n\nPara usarmos o `.style.format()`, primeiro precisamos de criar um `dict` com o nome da coluna e o tipo de formata\u00e7\u00e3o que desejamos:","978998f6":"Podemos remover esses valores em branco com um simples comando, o `dropna()`.","4a457785":"## Comparando proximidade de strings:","04b8c6b4":"Abaixo segue um comando opcional para aumentar todos os gr\u00e1ficos que ser\u00e3o gerados:\n\nO `#` \u00e9 um coment\u00e1rio e significa que o c\u00f3digo a seguir dele n\u00e3o ser\u00e1 executado.","76620ad6":"## B\u00f4nus: Juntando DataFrames ","5b7f479e":"Para prepararmos os dados, usamos o comando a seguir:","76ae3d34":"Para plotar o gr\u00e1fico usamos o `plotly.iplot()`","475e05f9":"## Tendo uma vis\u00e3o geral do \u00cdndice de Governan\u00e7a","82f29492":"**Dados: Indice de Governan\u00e7a Municipal **   \n\nImportando os dados a partir de um arquivo '<i>.csv<\/i>' contendo dados do IGM preparado especificamente para usarmos neste treinamento.\n\nEm nosso c\u00f3digo esse arquivo ficar\u00e1 salvo com o nome de `igm`\n\nEsse arquivo foi constru\u00eddo a partir de uma s\u00e9rie de colunas que comp\u00f5e o IGM e tamb\u00e9m de notas do ENEM.","0569da3a":"## An\u00e1lisando Frequ\u00eancia:\n\nPara contarmos quantas ocorr\u00eancias temos por cada categoria podemos usar o `.countplot()`","5481e83e":"Para tirar o `('1')`, uma forma \u00e9 quebrando a string em v\u00e1rios peda\u00e7os, para isso usamos o `split()`. Vamos come\u00e7ar com um exemplo fora do `DataFrame` para ilustrar melhor o conceito:","9b6db783":"Outra forma de vermos os 5 primeiros registros podemos usar o comando:","8118f2d9":"A vantagem da forma explicitada acima \u00e9 que podemos selecionar qualquer local da tabela, n\u00e3o estando restritos as primeiras linhas. Por exemplo, o comando a seguir seleciona as linhas 20 at\u00e9 29:","695c3b8e":"Vamos salvar esse resultado:","a7f07f89":"Vamos observar como est\u00e3o nossos dados:","632931d1":"# Iniciando com Python","202b2960":"Vamos precisar importar duas sub-bibliotecas da `plotly`, importante notar que estamos usando o modo `offline` para facilitar a nossa vida e n\u00e3o necessitarmos de autentica\u00e7\u00e3o no site deles.","51256b6c":"# O que \u00e9 o pandas?\n\nO `pandas` \u00e9 uma biblioteca de an\u00e1lise de dados gratuita e de c\u00f3digo aberto para Python, que \u00e9 a linguagem de programa\u00e7\u00e3o mais popular da atualidade segundo o site `StackOverflow` \n\nCom o `Python` e o `pandas` voc\u00ea pode manipular uma grande quantidade de dados de forma muito r\u00e1pida e eficiente estando em um ambiente de programa\u00e7\u00e3o, o que te d\u00e1 poder para trabalhar de forma extremamente personalizada no seu problema.","33211ded":"Um comando muito \u00fatil para avaliar uma `Series` \u00e9 o `.describe()`, que ir\u00e1 calcular os quartis, valores m\u00e1ximo, m\u00ednimo, a m\u00e9dia e o desvio padr\u00e3o.","028d5f97":"## Projeto:\n\nPegue algum dataset de sua escolha ou v\u00e1 em http:\/\/dados.gov.br\/ e escolha algum conjunto de dados que te interesse.\n\nDe posse desses conjunto de dados fa\u00e7a os seguintes passos:\n1. Importe o seu conjunto de dados como um `DataFrame`\n2. Fa\u00e7a a convers\u00e3o das colunas que estiverem com formato inadequado (n\u00fameros que est\u00e3o em formato de `str`)\n3. Fa\u00e7a 8 gr\u00e1ficos a partir dos seus dados\n4. Fa\u00e7a um resumo dos principais pontos encontrados nos gr\u00e1ficos avaliados","cb98f11d":"## Avaliando os tipos do nosso DataFrame","b6bb8c95":"##  `Exerc\u00edcios: Plots usando Escala logar\u00edtimica`\n\n1. Plote um `pairplot` de `anos_estudo_empreendedor` por `pib_pc`\n2. Crie uma nova vari\u00e1vel chamada `log_pib_pc` com o log de `pib_pc`\n3. Plote um `pairplot` de `anos_estudo_empreendedor` por `log_pib_pc`","0e74e39e":"##  `Exerc\u00edcios: Mais Gr\u00e1ficos Categ\u00f3ricos`\n\n1. Fazer um gr\u00e1fico a partir do agrupamento de `porte` avaliando `gasto_pc_saude`\n2. Fazer o exerc\u00edcio 1 a partir de um `groupby()`\n3. Fazer um `swarmplot` usando `y=\"gasto_pc_saude\"`, `hue='porte'`","37ee8c7b":"Para verificarmos quais s\u00e3o os valores em branco podemos usar o `isnull()`, que nos retornar uma `Series` com valores `True` ou `False` de acordo com se os valores estiverem em branco ou n\u00e3o.","776f40e9":"A seguir vamos selecionar os valores da coluna `mun` de `igf` que n\u00e3o est\u00e3o contidos na coluna `mun` de `df`.","21de6b22":"## Manipula\u00e7\u00e3o de Strings","6a061562":"Para conseguirmos plotar os gr\u00e1ficos no `Jupyter Notebook` no modo `offline` tamb\u00e9m precisamos executar o comando abaixo:","1cf3c329":"Apesar da conven\u00e7\u00e3o no Python ser utilizar o `.head()` ou o `.tail()` para olhar um DataFrame novo, algo muito mais inteligente de se fazer para ter uma ideia representativa do DataFrame \u00e9 utilizar o `sample(5)`, que seleciona 5 linhas aleat\u00f3rias do seu `DataFrame`. Se voc\u00ea executar o comando algumas vezes vai obter resultados diferentes a cada itera\u00e7\u00e3o.","c455a99c":"# Primeiros Gr\u00e1ficos com o Seaborn\n\nO Python tem diversas ferramentas para plotar gr\u00e1ficos, uma das mais f\u00e1ceis e poderosas de usar \u00e9 o __seaborn__ que foi importado no come\u00e7o do nosso c\u00f3digo com o comando <i>import seaborn as sns<\/i>.","d0beb425":"## Avalia\u00e7\u00e3o de uma vari\u00e1vel cont\u00ednua dada uma vari\u00e1vel categ\u00f3rica","66210160":"Agora temos um `DataFrame` apenas com cidades do Nordeste.","ffcd7e10":"Em `labels` colocamos os nomes das regi\u00f5es, e em `values` colocamos os valores:","49704eb7":"Segue a taxa de empreendedorismo por regi\u00e3o:","f47bbc7c":"## Plots usando Escala logar\u00edtimica","d4e085b1":"1. Utilize o `.min()`, `.max()`, e `.mean()` para avaliar os dados da coluna `exp_vida`\n2. Utilize o `.describe()` para avaliar os dados da coluna `idhm`","1dd35d39":"## Slicing no Pandas","98bcd987":"# Curso de Introdu\u00e7\u00e3o a An\u00e1lise de Dados","e2a69561":"O bom \u00e9 que o `describe()` tamb\u00e9m funciona em um `DataFrame`, e por padr\u00e3o apenas para as colunas num\u00e9ricas:","ba033537":"### Importando Valores com V\u00edrgula","0e78473c":"Vamos contar a quantidade de elementos em `ind_des`","35ce99ed":"Olhando a m\u00e9dia dos valores:","8a16accf":"O nome dessa opera\u00e7\u00e3o de colocar algo entre colchetes \u00e9 slicing, e isso como conven\u00e7\u00e3o geral \u00e9 uma forma de selecionar um subconjunto de dados.","e36def2a":"Existe uma fun\u00e7\u00e3o bastante \u00fatil no `pandas` que \u00e9 o `qcut` que nos permite criar categorias a partir de valores cont\u00ednuos (ou de muitas categorias). Basta voc\u00ea partir de um princ\u00edpio de ordenamento e selecionar a quantidade de categorias final que deseja. No nosso caso escolhemos 3.","3a22ec30":"Um gr\u00e1fico ligeiramente diferente, mas que a al\u00e9m da linha plota as `bins` do histograma.","99986287":"## Opera\u00e7\u00f5es de Agregamento Num\u00e9ricas\n","c2dc6ef7":"Podemos fazermos m\u00faltiplas regress\u00f5es lineares e histogramas ao mesmo tempo com o `sns.pairplot()`:\n    \nPara isso vamos criar um `DataFrame` tempor\u00e1rio:","e979ba25":"### Gr\u00e1ficos Mais Elaborados","26244f95":"# Mais Gr\u00e1ficos Categ\u00f3ricos","f4a66ca7":"##  `Exerc\u00edcios: Importando Arquivos`\n\n1. Importe o arquivo `dados_inpe.xlsx` usando a fun\u00e7\u00e3o `pd.read_excel()`.\n2. Importe novamente o arquivo ajustando os par\u00e2metros `header` e `skip_footer`\n3. Averigue o `DataFrame` gerado no item 2. Use o comando `.info()`.\n4. Importe o arquivo `anexo-V.csv`, usando o `read_csv()` e o par\u00e2metro `encoding='latin1'`. (Ignore o `DTypeWarning` caso aconte\u00e7a, ou use o par\u00e2metro `low_memory=False`) \n5. Importe novamente o arquivo ajustando o par\u00e2metro `header` e salve o `DataFrame` em uma vari\u00e1vel com o nome de `anexo`.\n6. Averigue a vari\u00e1vel `anexo` com o comando `.info()`.","42192a40":"Uma das primeiras coisas a se fazer quando se pega um conjunto de dados novo \u00e9 uma r\u00e1pida visualiza\u00e7\u00e3o a fim de entender melhor o que tem dentro dele. ","791c0250":"## Fazendo Filtros com Valores Negativos","bcbae22b":"Podemos usar tamb\u00e9m o `hue` para fazermos uma contagem levando em considera\u00e7\u00e3o outra dimens\u00e3o.","f33178c2":"Se utilizarmos uma sele\u00e7\u00e3o de coluna `indice_governanca` e o `.describe()`, iremos ver o detalhamento dos dados dessa coluna de acordo com o m\u00e9todo `.describe()`","7d978889":"Como vemos acima, n\u00e3o fica t\u00e3o bom esse gr\u00e1fico. Uma possibilidade melhor \u00e9 usarmos a biblioteca `plotly`. \n\nPara isso iremos precisar dos nomes das regi\u00f5es quando fazemos o comando `.value_counts()`:","7294b7ad":"Podemos selecionar multiplas colunas com o comando `igm[['municipio', 'indice_governanca']]`:","451e9ff2":"Vamos salvar os nossos dados em uma vari\u00e1vel chamada `df`:","5e774b5f":"## Outras formas de selecionar uma pequena amostra de dados:","def7cad1":"##  `Exerc\u00edcios: Visualizando Categorias`\n\n1. Fazer um `boxplot` de `porte` no eixo `x` e `exp_vida` no eixo `y`\n2. Fazer um `violinplot` de `porte` no eixo `x` e `exp_vida` no eixo `y` com `hue=regiao`\n3. Criar um `factorplot`  do tipo `box` com `porte` no eixo `x` e `exp_vida` no eixo `y` e `col='regiao'`\n4. Pegar o `factorplot` do item 1 e substituir `col='regiao'` por `row='regiao'`\n5. Fazer um `factorplot` usando `kind='count'`, `hue='porte'` e `x='regiao'`","e77c88ce":"## Importandos Arquivos do Excel (Caso de uso real)","afef7744":"Os gr\u00e1ficos acima est\u00e3o pegando uma vari\u00e1vel cont\u00ednua e claculando a m\u00e9dia dela para uma dada regi\u00e3o, para replicarmos o gr\u00e1fico acima em n\u00fameros poder\u00edamos utilizar o seguinte comando:","33ecb56b":"##  `Exerc\u00edcios: Mais Filtros e Shape`\n\n1. Crie um filtro chamado `filtro_com_idhm` que selecione as cidades que n\u00e3o tenham o `idhm` em branco.\n2. Crie um filtro chamado `filtro_trabalho` que selecione as cidades que o valor de `jornada_trabalho` seja maior do que 50 \n3. Crie um novo `DataFrame` chamado `igm_idhm_e_trabalho` que use os filtros `filtro_com_idhm` e `filtro_trabalho` com o operador `E` - `&`\n4. Crie um novo `DataFrame` chamado `igm_idhm_ou_trabalho` que use os filtros `filtro_com_idhm` e `filtro_trabalho` com o operador `OU` - `|`\n5. Pegue o `.shape` dos `DataFrames` dos itens `3` e `4`","f5004dbf":"Vamos criar uma vari\u00e1vel chamada `ind_des` para guarda a nossa `Series` relativa a coluna `indice_governanca`","ef512685":"Neste ponto as diferen\u00e7as s\u00e3o m\u00ednimas, e a quest\u00e3o \u00e9 realmente uma interven\u00e7\u00e3o humana de caso a caso para decidir qual caminho vai ser dado para a jun\u00e7\u00e3o entre tabelas.","8a9f9272":"## Boxplot","7b483573":"De prefer\u00eancia devemos usar um filtro do mesmo tamanho que um `DataFrame` para fazer as sele\u00e7\u00f5es. Mas se jogarmos um filtro maior em um `DataFrame` que \u00e9 um subconjunto do `DataFrame` original, ir\u00e1 funcionar porque ele ir\u00e1 se guiar pelo `index`, mas ir\u00e1 retornar um aviso.\n\nSe algum aviso desse tipo acontecer, voc\u00ea j\u00e1 tem uma boa ideia do que pode ter acontecido.","35b9c1fb":"##  `Exerc\u00edcios: Sele\u00e7\u00f5es B\u00e1sicas`","c4eec49c":"### Convertendo a coluna de popula\u00e7\u00e3o","935ceef8":"Ele retornou os valores, e podemos ver que n\u00e3o tem nenhum valor em branco, mas vamos verificar de fato para ver se mudamos os nossos valores:","bf5715d0":"As vari\u00e1veis podem conter n\u00fameros `int` e `float`, textos `str`, valores booleanos `bool`, entre outras.","29c7c495":"Abaixo iremos plotar em apenas uma linha de c\u00f3digo, um gr\u00e1fico que mostra a rela\u00e7\u00e3o entre __'Gastos em sa\u00fade e educa\u00e7\u00e3o per capita'__ com o __'\u00cdndice de Desempenho'__.","e7c0b0de":"## O comando `.at[]`","15a4305a":"Vamos verificar novamente se temos valores em branco no nosso conjunto de dados:","c0f3cc52":"## Selecionando Linhas no pandas","878d7055":"Vamos contar quantos valores da coluna `porte` temos para cada tipo com o comando `value_counts()`:","fb58939b":"Fazer revis\u00e3o do que foi visto.","2b7d9d1d":"1. Plote um histograma do `gasto_pc_educacao`\n2. Plote um `sns.kdeplot()` do `gasto_pc_educacao`\n3. Plote um `sns.distplot()` do `gasto_pc_educacao`\n4. Utilize o `.describe()` para ver os valores num\u00e9ricos do `gasto_pc_educacao`","a981eebe":"## `Exerc\u00edcios: Histogramas Interativos`\n\n1. Plote um histograma interativo de 2 colunas da sua escolha.","a463fbfc":"Vamos criar uma nova coluna com esses valores:","372d8f72":"Por padr\u00e3o o cabe\u00e7alho do nosso arquivo vai ser a primeira linha de texto, para alteramos isso podemos usar o par\u00e2metro `header`:","d81675cb":"Para plotarmos o Histograma, usamos o m\u00e9todo `pyplot`:","fc1e1549":"Quando rodamos o comando _igm['Regi\u00e3o']=='NORDESTE'_ temos um resultado (em forma de Series) de _True_ (Verdadeiro) ou _False_ (Falso) de acordo com o \u00edndice do elemento.","ab68ce1c":"Uma funcionalidade bem legal das bibliotecas gr\u00e1ficas do Python \u00e9 que podemos plotar um gr\u00e1fico em cima do outro.\n\nPara isso vamos come\u00e7ar plotando um gr\u00e1fico simples.","56b041a2":"## Conte\u00fados Adicionais","dbaa3516":"## Revis\u00e3o","73d01b53":"## Dissecando o DataFrame (Tipo de Dados)","98f20469":"## Salvando um resultado em uma nova coluna","b1f30fd3":"Para selecionarmos colunas no pandas, basta dizermos o nome do DataFrame seguido por colchetes com o nome da coluna dentro:\n\n__Nome do Dataframe:__ `igm`\n\n__Colchetes com a coluna dentro:__ `['Porte do Munic\u00edpio']`\n\n__Comando completo:__ `igm['Porte do Munic\u00edpio']`","371a9e40":"Como vimos anteriormente, a maioria dos nossos n\u00fameros objetos foi interpretado como objeto, o que na pr\u00e1tica significa que \u00e9 texto.\n\nPara conseguirmos importar os n\u00fameros no formato correto precisamos usar o comando `decimal=','`.","8cd164c3":"Por padr\u00e3o o `read_excel()` vai abrir a primeira aba da planilha do `Excel`, para selecionarmos uma diferente, precisamos do par\u00e2metro `sheet_name`:","418f1322":"Vamos imprimir novamente os valores:","44927652":"Vamos avaliar as diferen\u00e7as que ainda restam:","6b4362e5":"Vamos plotar o gr\u00e1fico de novo substituindo `populacao` por `log_pop`","1d94ac0d":"Como podemos notar, temos algumas colunas que s\u00e3o n\u00fameircas mas que est\u00e3o como `object`, o que normalmente ir\u00e1 significar que s\u00e3o texto. Vamos avaliar o que est\u00e1 acontecendo.","708e73c8":"Al\u00e9m de importarmos arquivos `.csv`, tamb\u00e9m podemos ler de forma f\u00e1cil arquivos do `Excel`:","6e78e5c0":"Agora vamos fazer a mesma coisa no `DataFrame`, vamos precisar de chamar o `str` para acessar os m\u00e9todos de texto.","fc19ea0d":"Tem alguns jeitos de selecionar subconjuntos, podemos escolher todas as cidades que perten\u00e7am a regi\u00e3o nordeste utilizando o comando abaixo:","9bec892e":"### Gr\u00e1ficos Interativos","48bb8b06":"## Selecionando M\u00faltiplas Colunas","7542a563":"## Gr\u00e1ficos de Pizza","acba5531":"### An\u00e1lise do Tamanho do Nome do Munic\u00edpio\n\nUma an\u00e1lise simples, mas interessante \u00e9 vermos se o tamanho do nome de um `municipio` em n\u00famero de caracteres influencia o `idhm`\n\nPara computar o n\u00famero de caracteres, basta usar o m\u00e9todo `.len()`","43e55575":"Podemos multiplicar, somar, dividir, subtrair entre colunas, para isso basta usar os respectivos sinais.","81827bff":"Agora plotamos o gr\u00e1fico e podemos observar, que a falta de um IGM, indica uma menor expectativa de vida na maioria das regi\u00f5es.","8bc86aae":"1. Criar as vari\u00e1veis `nome` e `idade` e atribuir valores a elas\n2. Juntar as vari\u00e1veis por meio do comando: `nome + ' ' + idade`","b39b6fd1":"## `Exerc\u00edcios: Python B\u00e1sico`","43d09042":"Vamos gerar uma nova coluna chamada c\u00f3digo:","ec9cd100":"Vamos remover a primeira linha. Usamos o m\u00e9todo `.copy()` para evitarmos avisos no futuro.","18076625":"## Deletando colunas","11e3c582":"Para converter para `log` podemos usar o `numpy` que \u00e9 uma biblioteca bastante importante para manipula\u00e7\u00e3o de dados, e \u00e9 a base do `pandas`.","bef1f1d6":"Vamos criar uma coluna nova `log_pop` com os valores logar\u00edtimicos da `populacao` por meio da fun\u00e7\u00e3o `.log()` do `numpy`:","cb34ff82":"## Alterando colunas no DataFrame","dfa25a71":"Um truque para visualizar melhor os dados \u00e9 invertendo as linhas pelas colunas (matrix transposta), para isso basta colocar um `.T` depois do nosso comando que gera uma visualiza\u00e7\u00e3o de DataFrame.","588e1c4a":"E vamos converter em n\u00famero e salvar o resultado","66ffffe1":"## Swarm plot","2b7db996":"1. Contar o n\u00famero de mun\u00edcipios por estado\n2. Plotar gr\u00e1fico de n\u00famero de mun\u00edcipios por estado","1ab83b70":"Vamos plotar os dois gr\u00e1ficos que plotamos anteriormente, s\u00f3 que agora ao mesmo tempo, note como eles ficaram diferentes:","438849e0":"Uma forma para facilitar a visualiza\u00e7\u00e3o dos gr\u00e1ficos acima \u00e9 usando o `factorplot`, que funciona tanto com linhas quant com colunas.","e7bdaf51":"Podemos ver que ganhamos mais algumas convers\u00f5es, mas ainda foram poucas.","cd42306e":"Podemos abrir esse arquivo no notepad para ver como os dados est\u00e3o salvos.","d5e1ecd7":"Desta vez n\u00e3o funcionou, porque de acordo com a mensagem de erro, al\u00e9m de v\u00edrgulas temos `.` e temos um `(1)` solto de acordo com a nossa mensagem de erro.\n\nVamos tirar o `.`","eacd1a17":"Note pelo comando a seguir como o shape \u00e9 diferente entre a sele\u00e7\u00e3o com:\n1. `[]` - `Series` - 1 dimens\u00e3o\n2. `[[]]` - `DataFrame` - 2 dimens\u00f5es","659ea4b4":"O erro aconteceu porque tinhamos valores `NaN` no nosso DataFrame, podemos resolver isso da seguinte forma:","597d36b3":"Para selcionar o que tinha antes basta selecionarmos a posi\u00e7\u00e3o 0 por meio do comando `[0]`","6a0408a9":"Um tipo de vari\u00e1vel categ\u00f3rica bastante interessante de avaliar s\u00e3o os valores em branco:","107943d5":"Vamos renomear a coluna `Unnamed: 1':'Ranking Estadual`, para isso vamos usar o comando `rename()`:","f8f137a8":"## Selecionando colunas","fcf0e2aa":"Agora n\u00f3s iremos atualizar a densidade demogr\u00e1fica da tabela com um valor mais recente. Para isso temos que transformar as colunas de area e de populacao em n\u00fameros (`float` ou `int`), atualmente elas est\u00e3o em forma de texto (`str`)","3b3481dd":"Podemos fazer o `.shape` de uma `Series`","66c93d3a":"##  `Exerc\u00edcios: Manipula\u00e7\u00e3o de Strings`\n\n1. Transforme a coluna `ranking_igm` para uma coluna num\u00e9rica\n2. Crie uma coluna `comissionados_por_servidor_2` a partir das colunas `comissionados` e `servidores`\n3. Substitua a coluna `comissionados_por_servidor` se for o caso\n4. Delete a coluna `comissionados_por_servidor_2`","ff5c00a9":"Com o simples par\u00e2metro <i>hue=\"Regi\u00e3o\"<\/i> conseguimos gerar um gr\u00e1fico colorido de acordo com as regi\u00f5es do Brasil, que s\u00e3o uma coluna na tabela original.\n\n## Regress\u00f5es Lineares\n\nDe forma extremamente simples, podemos plotar <i>regress\u00f5es lineares<\/i> no gr\u00e1fico acima. Bastante adicionarmos o par\u00e2metro <i>kind='reg'<\/i> no c\u00f3digo acima.","02ed55b6":"Para sabermos o tamanho de um `DataFrame` usamos o comando `.shape`","3de53960":"Vamos usar o split:","170a552e":"### Convertendo a coluna de \u00e1rea","b370884d":"O comando inverso ao `head()` \u00e9 o `tail()`, que ir\u00e1 mostrar as 5 __\u00faltimas__ linhas do DataFrame por padr\u00e3o:","3cc450b3":"Para plotar v\u00e1rios gr\u00e1ficos ao mesmo tempo com legenda, vamos precisar importar uma parte do `matplotlib`:","7e91f9c0":"## `Exerc\u00edcios: Revis\u00e3o`\n\n1. Plotar um histograma da coluna `exp_vida`\n2. Usar o m\u00e9todo `.describe` na coluna `exp_vida`\n3. Usar o m\u00e9todo `.describe` na coluna `exp_vida` onde os munic\u00edpios sejam apenas da regi\u00e3o `NORTE`\n4. Usar o m\u00e9todo `.value_counts()` na coluna `estado` filtrando os mun\u00edcipios que tenham `pib_pc` > 50000\n5. Plotar um gr\u00e1fico de barras do resultado gerado pelo item 4","76e3d62b":"Podemos usar o m\u00e9todo `str.normalize...` para retirar os acentos e outros caracteres especiais:","480d4dfe":"Olhando o desvio padr\u00e3o dos valores:","515b9100":"## Melhorando a visualiza\u00e7\u00e3o da tabela","8587c469":"E inclusive plotar 20 pequenos gr\u00e1ficos de violino ao mesmo tempo:","0aebd003":"##  `Exerc\u00edcios: Histogramas`","7f0e9c2b":"Vamos plotar outro gr\u00e1fico simples.","bad24ace":"## O Comando `isin()`:","ec0a6272":"## Fazendo Filtros","482e9b31":"O split separou o nosso elemento original em dois elementos, o que tinha antes da `(` e o que tinha depois:","338f0db8":"Engra\u00e7ado, que temos 10 colunas em um `DataFrame` e 6 colunas em outro, mas o nosso resultado do merge \u00e9 de 14 colunas, por que isso?","2fb5cd83":"##  `Exerc\u00edcios: Plotando M\u00faltiplos Gr\u00e1ficos`\n\n1. Plote os gr\u00e1ficos de `exp_vida`de acordo com o `porte`\n2. Adicione legendas ao gr\u00e1fico","bf60721d":"## \u00cdndice de Governan\u00e7a por Regi\u00e3o","a37916ac":"A seguir vamos selecionar os valores da coluna `mun` de `df` que n\u00e3o est\u00e3o contidos na coluna `mun` de `igf`.","f0cfcd33":"Valores est\u00e3o ligeiramente diferentes, provavelmente \u00e9 por conta de estarmos usando valores mais recentes para a populacao do que os que foram utilizados no c\u00e1lculo original da densidade demogr\u00e1fica.\n\nPara atualizar os valores, basta executar o seguinte comando:","e464c38c":"Segue o pib_pc por regi\u00e3o. Note que n\u00e3o \u00e9 uma m\u00e9dia ponderada e sim apenas a m\u00e9dia dos mun\u00edcipios sem levar em conta a popula\u00e7\u00e3o de cada um.","26d665f1":"Vamos usar o comando `str.replace(' ','')` para remover os espa\u00e7os em branco dos mun\u00edcipios","ea2221ae":"O comando n\u00e3o funciona porque temos valores que ele n\u00e3o sabe o que fazer, em espec\u00edfico a v\u00edrgula separando os milhares. Para corrigir isso basta usar o comando `.str.replace()`","32897647":"## Groupby"}}