{"cell_type":{"5a5e844d":"code","79960447":"code","17337bc9":"code","b1fc32b9":"code","d5072817":"code","21e921c2":"code","b2f06556":"code","719cc5b6":"code","95c8d261":"code","ff6595a4":"code","834e1896":"code","03633cc8":"code","998359a3":"code","289e31dc":"code","0f7c1a06":"code","9136f0e1":"code","58da9532":"code","7b291dcb":"code","ed1a2b16":"code","db9f17ce":"code","aa3c38dc":"code","ba5caf61":"code","bd9ca7f2":"code","bb257dfc":"code","7f8e2a45":"code","9c5b8950":"markdown","84b886c2":"markdown","6d90f10a":"markdown","fe1bfd0c":"markdown","b2495790":"markdown","640a0ed1":"markdown","70039744":"markdown","47f1bffe":"markdown","396408ea":"markdown","047ddf41":"markdown","9a5d070e":"markdown","7baeac20":"markdown"},"source":{"5a5e844d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt","79960447":"df2015 = pd.read_csv('..\/input\/world-happiness\/2015.csv')\ndf2016 = pd.read_csv('..\/input\/world-happiness\/2016.csv')","17337bc9":"df2015.head()","b1fc32b9":"print(df2015.columns)\n\nprint(df2015.shape)","d5072817":"print(df2016.columns)\n\nprint(df2016.shape)","21e921c2":"\"\"\"solo hay 11 Columnas en comun  ('Country', 'Region', 'Happiness Rank', 'Happiness Score',\n'Economy (GDP per Capita)','Family', 'Health (Life Expectancy)', 'Freedom', 'Trust (Government \nCorruption)','Generosity', 'Dystopia Residual' \"\"\"","b2f06556":"uniondf = pd.concat([df2016, df2015], ignore_index=True, join='outer')\nuniondf.head(5)","719cc5b6":"print(\"CANTIDAD de datos nulos por columna en el dataframe\") \nprint(uniondf.isnull().sum())\nprint(\"----------------------------------\")\nprint(\"PORCENTAJE de datos nulos por columna en el dataframe\") \nprint(uniondf.isnull().sum()\/len(uniondf)*100)\n \n\n","95c8d261":"#Maximo de Lower Confidence Interval\nprint(uniondf.iloc[:, 4].max())\n\n","ff6595a4":"#Minimo de Lower Confidence Interval\nprint(uniondf.iloc[:, 4].min())","834e1896":"#Maximo de Upper Confidence Interval\nprint(uniondf.iloc[:, 5].max())","03633cc8":"#Minimo de Upper Confidence Interval\nprint(uniondf.iloc[:, 5].min())","998359a3":"## obtener un numero aleatorio para ambos intervalos\nimport random","289e31dc":"import math\ndef truncate(number, digits) -> float:\n    stepper = 10.0 ** digits\n    return math.trunc(stepper * number) \/ stepper\n\n#obtener float aleatorio para Lower Confidence\nrandom.uniform(2.7319999999999998, 7.46)\n#valor aleatorio para Lower Confidence\naleatorioLower = truncate(6.167839783480675, 2)\n\n\n#obtener float aleatorio para Upper Confidence\nrandom.uniform(3.0780000000000003, 7.669)\n#valor aleatorio para reemplazar en Upper Confidence\naleatorioUpper = truncate(3.4782926731390473, 2)","0f7c1a06":"#Reemplazar valores nulos por valores obtenidos entre los rangos Max y Min\nuniondf['Lower Confidence Interval'] = uniondf['Lower Confidence Interval'].fillna(aleatorioLower)\nuniondf['Upper Confidence Interval'] = uniondf['Upper Confidence Interval'].fillna(aleatorioUpper)","9136f0e1":"uniondf.isnull().sum()","58da9532":"# obtener media al cuadrado de \"Standar Error\"\n\nunion_df_sin_nulos = uniondf[\"Standard Error\"].dropna()\nudfsn = union_df_sin_nulos.mean()**2\nudfsn","7b291dcb":"uniondf2 = uniondf.fillna(udfsn)","ed1a2b16":"uniondf2.describe","db9f17ce":"\n\nuniondf2.plot(kind='scatter', x='Family', color = \"g\", y='Health (Life Expectancy)')\nplt.title('Relaci\u00f3n entre Familia y Salud')\n\nsns.lmplot(x=\"Family\", y = 'Health (Life Expectancy)', data = uniondf2)\n\n#par= sns.pairplot(faithful)","aa3c38dc":"uniondf2.plot(kind='scatter', x='Happiness Score', color = \"b\", y='Trust (Government Corruption)')\nplt.title('Relaci\u00f3n entre Score de felicidad y Confianza en el gobierno')\n\nsns.lmplot(x=\"Happiness Score\", y = 'Trust (Government Corruption)', data = uniondf2)","ba5caf61":"\"\"\"\" Segun la grafica expuesta, no existir\u00eda una fuerte relacion estadistica entre ambas variables, existiendo una gran \ncantidad de paises con bajos indices de confianza en su gobierno pero altos score en felicidad.\"\"\" ","bd9ca7f2":"sns.heatmap(uniondf2.corr(), cmap='Oranges')","bb257dfc":"uniondf3 = uniondf2.sort_values(['Country', 'Happiness Score',])\nuniondf3.head()","7f8e2a45":"sns.violinplot(x='Region', y='Dystopia Residual', data=uniondf2)\nplt.xticks(rotation=90)  \nplt.ylabel('Valor Distopia Residual') \nplt.xlabel('Region')\nplt.title('Distribuci\u00f3n del grado de distopia por regi\u00f3n')\nplt.show()","9c5b8950":"### 11.- Tras unir los dataframes, los pa\u00edses aparecer\u00e1n m\u00e1s de una vez. Muestra agrupado el dataframe por pa\u00eds con el valor m\u00e1ximo de felicidad, sin importar el a\u00f1o.","84b886c2":"### 2.- Identificar las columnas de ambos datasets: \u00bfhay diferencias entre ambos?","6d90f10a":"### 8.-Muestra de forma gr\u00e1fica la relaci\u00f3n entre la familia y la salud.","fe1bfd0c":"### 5.- Cambiar los valores nulos de las columnas \"Lower Confidence Interval\" y \"Upper Confidence Interval\" por un n\u00famero aleatorio entre el valor m\u00ednimo y m\u00e1ximo de la misma columna (un \u00fanico n\u00famero, no es necesario uno diferente para cada fila con valor nulo).","b2495790":"1.- Cargar los dos CSV (2015, 2016) como datasets.","640a0ed1":"### 9.- Muestra de forma gr\u00e1fica la relaci\u00f3n entre la puntuaci\u00f3n de felicidad y la confianza (corrupci\u00f3n del gobierno).","70039744":"### 12.- Muestra la distribuci\u00f3n del grado de distop\u00eda en funci\u00f3n de la regi\u00f3n. ","47f1bffe":"### 3.- Unir ambos dataframes, sin importar que los dos compartan las mismas diferencias.","396408ea":"### 6.-Cambia los valores nulos de la columna \"Standard Error\" por su media al cuadrado.","047ddf41":"### 10.- Muestra la matriz de correlaci\u00f3n del dataframe","9a5d070e":"### 7.-Obt\u00e9n un resumen estad\u00edstico del dataframe sin valores nulos.","7baeac20":"### 4.-Revisar el n\u00famero de nulos que hay por cada columna, as\u00ed como su porcentaje."}}