{"cell_type":{"c47a33e4":"code","f0343e36":"code","b7164d53":"code","8bedbca8":"code","7969dda3":"code","cd1d51bc":"code","90ee5789":"code","a438a12a":"code","eb30f2b3":"code","6552cea4":"code","8d2a70ca":"code","73e0bee1":"code","071b1ccb":"code","e4a9ef69":"code","361d622f":"code","d5463c48":"code","e6d3a2f3":"code","ab8f2217":"code","7af5a877":"code","630f5974":"code","88be4593":"code","677bfac0":"code","8b2d809c":"code","9301665b":"code","185a4eca":"code","b06f285e":"code","e8587d95":"code","62072c21":"code","783b60e9":"code","6f574b68":"code","f77582b3":"code","7de1a3fd":"code","73df75c4":"code","3ba4c6bb":"code","70759c10":"code","69ae0e12":"code","a904b2f5":"code","5e446333":"code","03fa2821":"code","d2a97d43":"code","073e37fa":"code","4fa8e1a7":"code","e3bcd31d":"code","000e5edc":"code","a821e328":"code","94b42075":"code","8cec6dce":"code","e8745f6d":"markdown","bf183bb7":"markdown","6f23ab01":"markdown","b7de46e4":"markdown","70320b65":"markdown","f5cfbfb3":"markdown","07b772a6":"markdown"},"source":{"c47a33e4":"# importando librerias\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport collections\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport xgboost\nimport math as mt\nimport warnings\n\n# Ploting styles\n# styles: 'fivethirtyeight', 'classic', 'ggplot', 'seaborn-notebook'\n# styles: 'seaborn-poster', 'bmh', 'grayscale', 'seaborn-whitegrid'\nmatplotlib.style.use('bmh')\n%matplotlib inline\npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n#print(plt.style.available)\nwarnings.filterwarnings(\"ignore\")","f0343e36":"# dataset de entrenamiento a nivel de transacciones\nTrainTrx = pd.read_csv('..\/input\/bbvadata\/01dataBaseTrainTrxRec.csv')\n\nTrainTrx.info()","b7164d53":"# eliminando columnas no relevantes\nTrainTrx.drop(['fechaOper', 'ctdTrx'], axis=1, inplace=True)\n\n# ordenando por cliente y establecimiento\nTrainTrx.sort_values(by=['codCliente','codEstab']).head()","8bedbca8":"# dataset del perfil de cliente\nTrainPer = pd.read_csv('..\/input\/bbvadata\/02dataBasePerfilRec.csv')\n\nTrainPer.info()","7969dda3":"# ordenando por cliente\nTrainPer.sort_values(by=['codCliente']).head()","cd1d51bc":"# fusionando datos de transacciones y clientes\nTrainTot = pd.merge(TrainTrx, TrainPer, on='codCliente')\n\nTrainTot.info()","90ee5789":"# ordenando por cliente y establecimiento\nTrainTot.sort_values(by=['codCliente','codEstab']).head()","a438a12a":"# descriptive statistics summary\nTrainTot['ratingMonto'].describe()","eb30f2b3":"# boxplot\nsns.boxplot(x=TrainTot['ratingMonto']);","6552cea4":"# definiendo un nuevo data frame con ratingMonto<0.02\nTrainTot1 = TrainTot[TrainTot['ratingMonto'] < 0.02]","8d2a70ca":"# boxplot\nsns.boxplot(x=TrainTot1['ratingMonto']);","73e0bee1":"TrainTot1.flagGenero.plot.hist();","071b1ccb":"TrainTot1.flagLimaProvEstab.plot.hist();","e4a9ef69":"TrainTot1.flagLimaProvCliente.plot.hist();","361d622f":"TrainTot1.flagBxi.plot.hist();","d5463c48":"sns.jointplot(x='codCliente', y='ratingMonto', data=TrainTot1, kind=\"hex\");","e6d3a2f3":"sns.jointplot(x='codGiro', y='ratingMonto', data=TrainTot1, kind=\"hex\");","ab8f2217":"sns.jointplot(x='codEstab', y='ratingMonto', data=TrainTot1, kind=\"hex\");","7af5a877":"sns.jointplot(x='ubigeoEstab', y='ratingMonto', data=TrainTot1, kind=\"hex\");","630f5974":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='rangoEdad', y='ratingMonto', data=TrainTot1);","88be4593":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='rangoIngreso', y='ratingMonto', data=TrainTot1);","677bfac0":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='rangoCtdProdAct', y='ratingMonto', data=TrainTot1);","8b2d809c":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='rangoCtdProdPas', y='ratingMonto', data=TrainTot1);","9301665b":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='rangoCtdProdSeg', y='ratingMonto', data=TrainTot1);","185a4eca":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='saldoTcEntidad1', y='ratingMonto', data=TrainTot1);","b06f285e":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='saldoTcEntidad2', y='ratingMonto', data=TrainTot1);","e8587d95":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='saldoTcEntidad3', y='ratingMonto', data=TrainTot1);","62072c21":"f, ax = plt.subplots(figsize=(12, 5))\nsns.boxplot(x='saldoTcEntidad4', y='ratingMonto', data=TrainTot1);","783b60e9":"# dataset de prueba para base a nivel de clientes-establecimientos\nBaseSub = pd.read_csv('..\/input\/bbvadata\/03dataBaseTestRec.csv')\n\nBaseSub.info()","6f574b68":"# desagregado el campo [codClienteCodEstab] en \"codCliente\" y \"codEstab\"\nBasePred = pd.read_csv('..\/input\/bbvadata\/05dataBaseTestKeyRec.csv')\n\nBasePred.sort_values(by=['codCliente', 'codEstab']).head()","f77582b3":"BasePred.info()","7de1a3fd":"# aislando los features de establecimientos\nFeatEstab = TrainTrx.drop(['codCliente','ratingMonto'], axis=1)\n\n# eliminando duplicados\nFeatEstab = FeatEstab.drop_duplicates()\n\nFeatEstab.info()","73df75c4":"# ordenando por establecimiento\nFeatEstab.sort_values(by=['codEstab']).head()","3ba4c6bb":"# generando features para data de test\nTesTot = pd.merge(BasePred, TrainPer, how='left', on=['codCliente'])\n\nTesTot = pd.merge(TesTot, FeatEstab, how='left', on=['codEstab'])\n\nTesTot.sort_values(by=['codCliente', 'codEstab']).head()","70759c10":"TesTot.info()","69ae0e12":"# concatenando features de train y test\nTrainTest = pd.concat((TrainTot.drop(['ratingMonto'],axis=1),\n                                   TesTot))\n\nTrainTest.info()","a904b2f5":"# conversion de variables categoricas\nTrainTest = pd.get_dummies(TrainTest)\n\nTrainTest.sort_values(by=['codCliente','codEstab']).head()                        ","5e446333":"# datos de entrenamiento\nX = TrainTest[:TrainTot.shape[0]]\ny = TrainTot.ratingMonto\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=1)\n\n# datos de validacion\nX_val = TrainTest[TrainTot.shape[0]:]","03fa2821":"# xgboost\nxgb = xgboost.XGBRegressor(n_jobs=-1,n_estimators=300,subsample=0.75,max_depth=10)","d2a97d43":"# ajuste de modelo\nxgb.fit(X_train,y_train)","073e37fa":"# RMSE para datos de entrenamiento\ny_p_train = xgb.predict(X_train)\nprint('RSME',mt.sqrt(mean_squared_error(y_train, y_p_train)))","4fa8e1a7":"# RMSE para datos de test\ny_p_test = xgb.predict(X_test)\nprint('RSME',mt.sqrt(mean_squared_error(y_test, y_p_test)))","e3bcd31d":"# prediccion para datos de validacion\ny_val = xgb.predict(X_val)\n\ny_val = pd.DataFrame(y_val,columns=['ratingMonto'])\n\ny_val.info()","000e5edc":"y_sub = BasePred.copy()\n\ny_sub['ratingMonto'] = y_val\n\ny_sub.info()","a821e328":"# fusion de columnas\ncol = (y_sub['codCliente'].map(str) + y_sub['codEstab'].map(str))\n\ny_sub['codClienteCodEstab'] = col\n\n# reordenando columnas\ny_sub = y_sub[['codClienteCodEstab','ratingMonto']]\n\n# convirtiendo a enteros columna codClienteCodEstab\ny_sub['codClienteCodEstab']=y_sub['codClienteCodEstab'].apply(int)\n\ny_sub.info()","94b42075":"# reordenamiento de resultados\ny_fin = pd.merge(BaseSub,y_sub,on=['codClienteCodEstab'])\n\ny_fin.info()","8cec6dce":"# generacion de archivo de submision\ny_fin.to_csv('BBVA.csv', index=False)","e8745f6d":"## Modelo","bf183bb7":"## Datos para submision","6f23ab01":"Dado que la gran cantidad de valores **ratingMonto** son muy pequenos, solo consideraremos inicialmente aquellos menores a 0.02","b7de46e4":"## Preparacion de datos","70320b65":"# BBVA recomendation system\n\n## Importando librerias y cargando datos","f5cfbfb3":"Esta vez si se pueden apreciar mejor la mayoria de valores de **ratingMonto**","07b772a6":"## Analisis exploratorio"}}