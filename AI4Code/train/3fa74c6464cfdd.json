{"cell_type":{"354c7a78":"code","4fde6cc6":"code","3de2b82d":"code","bbb17a24":"code","97731c06":"code","6a6b95e7":"code","c2798759":"code","ef36945d":"code","4f805ea9":"code","c705af26":"code","2c7c17ef":"code","fcab6ae4":"code","971b62a5":"code","a7b82940":"code","1ec4274f":"code","c2bcda40":"code","0556a6cb":"code","7278c7a0":"code","b2c78211":"markdown","81cfe5ba":"markdown","674b4a03":"markdown","184ad7f0":"markdown","d1ac89bb":"markdown","37b26b68":"markdown","eb7d3f4f":"markdown"},"source":{"354c7a78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.metrics import confusion_matrix\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","4fde6cc6":"DATA_DIR='..\/input\/brain_tumor_dataset'","3de2b82d":"os.listdir(f'{DATA_DIR}')","bbb17a24":"data = ImageDataBunch.from_folder(DATA_DIR, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                  size=224,bs=10, \n                                  num_workers=0).normalize(imagenet_stats)","97731c06":"print(f'Classes: \\n {data.classes}')","6a6b95e7":"data.show_batch(rows=3, figsize=(7,6))","c2798759":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","ef36945d":"learn.lr_find()\nlearn.recorder.plot()","4f805ea9":"learn.fit_one_cycle(6,1e-2)","c705af26":"learn.save('stage-1')","2c7c17ef":"learn.unfreeze()","fcab6ae4":"learn.lr_find()\nlearn.recorder.plot()","971b62a5":"learn.fit_one_cycle(6,1e-6)","a7b82940":"learn.save('stage-2')","1ec4274f":"learn.recorder.plot_losses()","c2bcda40":"interp = ClassificationInterpretation.from_learner(learn)","0556a6cb":"interp.plot_top_losses(9, figsize=(15,11))","7278c7a0":"interp.plot_confusion_matrix(figsize=(8,8), dpi=60)","b2c78211":"## Please upvote if you like it ;)","81cfe5ba":"# Check Result","674b4a03":"# Make Data","184ad7f0":"# Model Build","d1ac89bb":"# Import Libraries","37b26b68":"## Please upvote if you like it ;)","eb7d3f4f":"# Train"}}