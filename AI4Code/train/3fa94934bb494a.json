{"cell_type":{"0acf7e07":"code","d56cfb75":"code","00e6d391":"code","725f540b":"code","fb3d8cf7":"code","4f7d74fc":"code","7701b917":"code","8ad09374":"markdown","3b5dcea6":"markdown","c6e84673":"markdown","179c5802":"markdown","fcc273f9":"markdown"},"source":{"0acf7e07":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport os\nprint(os.listdir(\"..\/input\"))","d56cfb75":"df=pd.read_csv('..\/input\/insurance.csv')\nd={'yes': 1, 'no': 0}\ndf['smoker']=df['smoker'].map(d)\nd2={'female': 1, 'male':0}\ndf['sex']=df['sex'].map(d2)\nprint(df.head())\nprint(df.info())","00e6d391":"normal=np.logical_and(25.0>df['bmi'].values, df['bmi'].values>20.0)\noverweight=np.logical_and(30>df['bmi'].values, df['bmi'].values>25)\nobese=np.logical_and(60>df['bmi'].values, df['bmi'].values>30)\nobese_and_smoker=np.logical_and(df['smoker']==1, df['bmi']>30)\nprint(\"number of normal: \", normal.sum())\nprint(\"number of overweight: \", overweight.sum())\nprint(\"number of obese: \", obese.sum())\nprint(\"most unhealthy: \", obese_and_smoker.sum())","725f540b":"print(df.corr())#charges and smoker has a high positive correlation here as seen.","fb3d8cf7":"from sklearn.ensemble import RandomForestRegressor\n\nrfc=RandomForestRegressor(n_estimators=15)\n\ntrainx=df[[ 'bmi', 'age']].iloc[:1070].values\ntrainy=df[['charges']].iloc[:1070].values\ntestx=df[['bmi', 'age']].iloc[1070:]\ntesty=df[['charges']].iloc[1070:]\n\nprint(trainx.shape, trainy.shape,  testy.shape, testx.shape)\n\nrfc.fit(trainx, trainy)\npred_cost=rfc.predict(testx)\n\nprint(rfc.score(trainx, trainy))\n","4f7d74fc":"X=testy\nY=pred_cost\nZ=df['bmi'].iloc[1070:]\nT=df['age'].iloc[1070:]\nplt.subplots(figsize=(20, 10))\nplt.scatter(Z, X, color='red')#real costs\nplt.plot(Z, Y, color='blue', marker='*', linewidth=0)#predicted costs\nplt.xlabel(\"bmi\")\nplt.ylabel(\"cost\")\nplt.title(\"Comparison of prediction and real values on the graph\")\nplt.show()\n","7701b917":"fig = plt.figure(figsize=(15, 12))\nax = fig.add_subplot(111, projection='3d')\n\nfor c, m, zlow, zhigh in [('r', 'o', -50, -25), ('b', '^', -30, -5)]:\n    xs=df['bmi'].iloc[1070:]#pred_cost\n    ys=df['age'].iloc[1070:]\n    zs=pred_cost\n    ax.scatter(xs, ys, zs, c=c, marker=m)\n\nax.set_xlabel('bmi')\nax.set_ylabel('age')\nax.set_zlabel('predicted costs')\n\nplt.show()\n","8ad09374":"To see the corellation of bmi,  age and predicted cost we will plot a 3D graph.","3b5dcea6":"We will use RandomForestRegressor here since our problem is a regression problem. Random forest is basically works like Desicion Tree but the only Difference here is you use multiple desicion which you can speciffy on it.","c6e84673":"Plotting the values of prediction and real values.","179c5802":"**CONCLUS\u0130ON**\n\nIn this project once more i try to make some visualization after prediction. The EDA and Machine Learning parts are important but it is also important to use predicted values to how our algorithm performs. I try some other algorithm such as SVR but RFR is still a life saver and will be for a few more years.\n  \n","fcc273f9":"Lets check bmi values, as seen below , most of them ara obose"}}