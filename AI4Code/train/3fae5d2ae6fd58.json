{"cell_type":{"5310d676":"code","34989333":"code","133bdded":"code","6f84618c":"code","6677663e":"code","2d928441":"code","2f11b88b":"code","80978730":"code","899144a3":"code","0a3ae388":"code","d4688d50":"code","b367a01e":"markdown","cf47d51f":"markdown","912d3653":"markdown","c500e8dc":"markdown"},"source":{"5310d676":"import numpy as np\nimport matplotlib.pyplot as plt \nimport pandas as pd  \nimport seaborn as sns \nfrom sklearn.datasets import load_boston\nimport warnings\nwarnings.filterwarnings('ignore')","34989333":"train = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')\nprint('train shape:',train.shape)\nprint('test shape:',test.shape)","133bdded":"train.head()","6f84618c":"# Train data\nX=train.drop(columns = ['loss','id'])\ny=train['loss'].values\n# Test data\nX_test=test.drop(columns = ['id'])\nprint('Train set:', X.shape)\nprint('Test set:', X_test.shape)","6677663e":"# from sklearn.model_selection import train_test_split\n\n# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","2d928441":"import xgboost as xgb\n\nxgbrModel=xgb.XGBRegressor()\nxgbrModel.fit(X,y)","2f11b88b":"from sklearn import metrics\n\nprint('R2 score: ', xgbrModel.score(X, y))\npredicted=xgbrModel.predict(X)\nrmse = metrics.mean_squared_error(y, predicted, squared=False)\nprint('MSE score: ', rmse)","80978730":"from xgboost import plot_importance\nfrom xgboost import plot_tree\n\nplt.rcParams[\"figure.figsize\"] = (10, 7)\nplot_importance(xgbrModel)\nprint('Feature importances: ',xgbrModel.feature_importances_)","899144a3":"y_pred=xgbrModel.predict(X_test)","0a3ae388":"preds = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")\npreds.loss = y_pred\npreds.head()","d4688d50":"preds.to_csv('submission.csv', index=False)","b367a01e":"## Feature importances","cf47d51f":"## 2) Train Model","912d3653":"## 1) Load Data","c500e8dc":"## Test Predict"}}