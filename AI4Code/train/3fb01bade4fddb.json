{"cell_type":{"eb99e97c":"code","7dec1d5f":"code","313c756a":"code","7db69ea2":"code","2bdb54ca":"code","ab12ff88":"code","14335b17":"code","90c2c4b7":"code","1e688c64":"code","5ebfae23":"code","e487c57c":"code","6919ca14":"code","9a0de990":"code","1f7a95f5":"code","2a464f42":"code","195069a1":"code","9339964e":"code","27bec66f":"code","5427ec8b":"code","cb19d41c":"code","e5b900a6":"code","21395afd":"code","243c2d47":"code","a74c7fcd":"code","e625648d":"code","dc917b8f":"code","2e4c0bf9":"code","d63b270e":"code","df2373af":"code","ed8430a7":"code","8318d628":"code","7deef0eb":"code","04339755":"code","2dac347f":"markdown","60ee3d1f":"markdown","6f6b63c6":"markdown","2d12d22a":"markdown","ad9100c1":"markdown","61fef32f":"markdown","71724e7f":"markdown","96cacf7b":"markdown","d22e5252":"markdown"},"source":{"eb99e97c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7dec1d5f":"# getting train and test data\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","313c756a":"train.head()","7db69ea2":"# As Name of the passenger,Ticket and Fare are not needed to create model\n# We will drop the three columns Name,Ticket and Fare from both train and test data\ntrain.drop(['Name','Ticket','Fare'],axis = 1,inplace=True)\ntest.drop(['Name','Ticket','Fare'],axis = 1, inplace=True)","2bdb54ca":"train.info()","ab12ff88":"test.info()","14335b17":"# For both train and test dataset, Cabin column has lots of null value.\n# We can also drop this column from both the data set\ntrain.drop('Cabin',axis = 1,inplace=True)\ntest.drop('Cabin',axis=1,inplace=True)","90c2c4b7":"# Lets see how many male and female were there on the ship (train dataset)\nprint(train['Sex'].value_counts())\n\nsns.set_style('darkgrid')\nsns.countplot(x='Sex',data=train)","1e688c64":"# Lets see if being a male or female had an impact on survival of the passenger\nsns.countplot(x='Sex',data=train,hue='Survived')","5ebfae23":"# Lets see what percentage of female and male survived\nfemale_survivor = np.round((len(train[(train['Sex']=='female') & (train['Survived']==1)])\/len(train[train['Sex']=='female']))*100,2)\nmale_survivor = np.round((len(train[(train['Sex']=='male') & (train['Survived']==1)])\/len(train[train['Sex']=='male']))*100,2)\n\nprint(f'{female_survivor}% of female present on the ship survived')\nprint(f'{male_survivor}% of male present on the ship survived')","e487c57c":"# Lets see the number of passengers from each class:\nprint(train['Pclass'].value_counts())\n\nsns.catplot(x='Pclass',data=train,kind='count')","6919ca14":"class_1_survived = np.round(len(train[(train['Pclass']==1) & (train['Survived']==1)])\/len(train[train['Pclass']==1])*100,2)\nclass_2_survived = np.round(len(train[(train['Pclass']==2) & (train['Survived']==1)])\/len(train[train['Pclass']==2])*100,2)\nclass_3_survived = np.round(len(train[(train['Pclass']==3) & (train['Survived']==1)])\/len(train[train['Pclass']==3])*100,2)\n\nprint(f'{class_1_survived}% of passenger from Upper class survived')\nprint(f'{class_2_survived}% of passenger from Middle class survived')\nprint(f'{class_3_survived}% of passenger from Lower class survived')\n\nsns.set_style('darkgrid')\nsns.catplot(x='Pclass',data=train,hue='Survived',kind='count')","9a0de990":"train['SibSp'].value_counts()","1f7a95f5":"train['Parch'].value_counts()","2a464f42":"# We can combine both the columns to make a new column 'Family' which will tell us if the passengle was alone or with family\n\ntrain['Family'] = train['SibSp']+train['Parch']\n\ntrain['Family'].loc[train['Family']>0]='With Family'\ntrain['Family'].loc[train['Family']==0] ='Alone'","195069a1":"# Lets explore the Family column\nprint(train['Family'].value_counts())\n\nsns.countplot(x='Family',data=train)","9339964e":"# Let see if being with family has any impact on survival of the passenger\nsns.countplot(x='Family',data=train,hue='Survived')","27bec66f":"# Lets explore the Age column\nsns.histplot(x='Age',data=train,bins=30)","5427ec8b":"# Lets check the number of null values in age column\ntrain['Age'].isnull().sum()","cb19d41c":"# We can handle these missing values by replacing them with the avg age\navg_age = train['Age'].mean()\n\n# function to find and replace the null value\ndef change(age):\n    if np.isnan(age):\n        return avg_age\n    return age\n\n# applying the change function to update 'Age' column\ntrain['Age'] = train['Age'].apply(change)\n\n# we can use the same function and same avg_age to replace the null values in test['Age'] if any.\ntest['Age'] = test['Age'].apply(change)","e5b900a6":"# we can combine the Age and Sex column to create a new column 'Adult' which will tell if the passenger is adult(male or female) or child\n\n# function to determine if passenger is male,female,child\ndef combine(passenger):\n    sex,age = passenger\n    if age<18:\n        return 'child'\n    return sex\n\n# using the combine function to create 'Adult' column\ntrain['Adult'] = train[['Sex','Age']].apply(combine,axis=1)        ","21395afd":"# Lets explore the new column\nprint(train['Adult'].value_counts())\n\nsns.countplot(x='Adult',data=train)","243c2d47":"# Lets plot the Adult and Survived column\nsns.countplot(x='Adult',data=train,hue='Survived')","a74c7fcd":"# Lets divide the data into X i.e features and y i.e output\n# will will use five features - Pclass,Sex,Age,SibSp,Parch \nX_train = train[['Pclass','Sex','Age','SibSp','Parch']]\ny = train['Survived']\nX_test = test[['Pclass','Sex','Age','SibSp','Parch']]","e625648d":"# One hot encoding on the categorical column\nX_train = pd.get_dummies(X_train,drop_first=True)\nX_test = pd.get_dummies(X_test,drop_first= True)","dc917b8f":"# Feature scaling to bring the scale of Age column as same as other column\n# we will use MinMaxscaler to perform Feature Scaling\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\n\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","2e4c0bf9":"# importing the keras libraries to build ANN model\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","d63b270e":"model = Sequential()\n\n# 1st Hidden layer\nmodel.add(Dense(10,activation='relu',input_shape=[5]))\n\n# 2nd Hidden layer\nmodel.add(Dense(5,activation='relu'))\n\n\n# output layer\nmodel.add(Dense(1,activation='sigmoid'))\n\n# compiling the model\nmodel.compile(loss='binary_crossentropy',optimizer='adam')\n\nmodel.summary()","df2373af":"# Let's fit the model\nmodel.fit(X_train,y,epochs=500)","ed8430a7":"# predicting the y on test data\ny_predict = model.predict(X_test)","8318d628":"y_predict = pd.Series(y_predict.reshape(-1,)).apply(lambda x: 1 if x>=0.5 else 0)","7deef0eb":"final_output = pd.concat([test['PassengerId'],pd.Series(y_predict)],axis = 1)\nfinal_output.columns = ['PassengerId','Survived']\nfinal_output.head()","04339755":"# saving the ouput file\nfinal_output.to_csv('my_submission_ann.csv',index=False)","2dac347f":"* Lets explore the SibSp and Parch column which basically tells us whether passenger were alone or with there family.\n* SibSp tells about Sibling and Spouse\n* Parch tells about Parents and Child\n* If any of the value is 1 then it means passenger was with his\/her family","60ee3d1f":"As we can see above in the graph, majority of passengers in the ship were male","6f6b63c6":"**Lets check how being in Upper,Middle or Lower class effected the passenger's survival**","2d12d22a":"Most of the passengers were between 20-40 years","ad9100c1":"# ANN model","61fef32f":"**As given in the description, if value of Survived is 0 means passenger didn't survived and if the value is 1 it means passenger survived.\nAs shown in the above graph, majority of female survived as compared to male**","71724e7f":" **As we saw in above graphs, majority of female passengers and Upper class passengers survived. We can say that Pclass and Sex are the most important feature.**","96cacf7b":"Clearly, most of the upper class passengers survived","d22e5252":"Maximum passenger on the ship belonged to Lower class"}}