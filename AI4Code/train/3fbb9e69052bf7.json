{"cell_type":{"1ff88d09":"code","3bd73517":"code","18fe36c3":"code","7790f408":"code","91f949df":"code","96f3b2b4":"code","320fef70":"code","2bce05ff":"code","ffcf5603":"code","a5a0ce70":"code","b0010f9a":"code","e108f70b":"code","9230e013":"code","11f45f1c":"code","d21692b5":"markdown"},"source":{"1ff88d09":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.utils import shuffle\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3bd73517":"train = pd.read_csv(\"..\/input\/predict-who-is-more-influential-in-a-social-network\/train.csv\")\ntest = pd.read_csv(\"..\/input\/predict-who-is-more-influential-in-a-social-network\/test.csv\")","18fe36c3":"train.info()\ntrain[0:10]","7790f408":"display(train[[\"Choice\",\"A_follower_count\",\"A_posts\",]].groupby([\"Choice\",\"A_follower_count\"]).agg([\"min\",'mean',\"max\"]).style.background_gradient(cmap=\"autumn\"))","91f949df":"test.info()\ntest[0:10]","96f3b2b4":"print(\"Any missing sample in training set:\",train.isnull().values.any())\nprint(\"Any missing sample in test set:\",test.isnull().values.any(), \"\\n\")","320fef70":"#Frequency distribution of classes\"\ntrain_outcome = pd.crosstab(index=train[\"Choice\"],  # Make a crosstab\n                              columns=\"count\")      # Name the count column\n\ntrain_outcome","2bce05ff":"#Select feature column names and target variable we are going to use for training\nfeatures=['A_follower_count','A_listed_count','A_mentions_received','A_retweets_received','A_posts','A_network_feature_1','A_network_feature_2','A_network_feature_3','B_follower_count','B_following_count','B_listed_count','B_mentions_received','B_retweets_received','B_posts','B_network_feature_1','B_network_feature_2','B_network_feature_3']\ntarget = 'Choice'","ffcf5603":"#This is input which our classifier will use as an input.\ntrain[features].head(10)","a5a0ce70":"#Display first 10 target variables\ntrain[target].head(10).values","b0010f9a":"from sklearn.ensemble import RandomForestClassifier\n\n# We define the model\nrfcla = RandomForestClassifier(n_estimators=100,random_state=168,n_jobs=-1)\n\n# We train model\nrfcla.fit(train[features],train[target])\n\n","e108f70b":"#Make predictions using the features from the test data set\npredictions = rfcla .predict(test[features])\n\n#Display our predictions\npredictions","9230e013":"#Create a  DataFrame\nsubmission = pd.DataFrame({\"Id\": list(range(1,len(predictions)+1)),\n                         \"Choice\":predictions})\n\n#Visualize the first 5 rows\nsubmission.head()","11f45f1c":"#Convert DataFrame to a csv file that can be uploaded\n#This is saved in the same directory as your notebook\nfilename = 'submission.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","d21692b5":"Group the Choice and A_follower_count, then get the max, min, and mean of A_posts"}}