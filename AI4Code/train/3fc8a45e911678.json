{"cell_type":{"ef337b47":"code","df797ef7":"code","d3cf1452":"code","54e84361":"code","6c3cf80c":"code","dd02829f":"code","edfdfdb7":"code","c811d056":"code","f6a2dc6f":"code","8c0cb144":"code","cec42beb":"code","3170803a":"code","9d3fc1be":"code","1a598ee5":"code","c2f9f1e7":"code","fdf868f2":"code","c4970813":"code","4a7e2212":"code","fe50d0b3":"code","3d7b01f8":"code","ca1cbc26":"code","8619e742":"code","a81a663e":"code","9a866aa2":"code","79d1806e":"code","d36aa440":"code","7cc94766":"code","a87ddd83":"code","c02a6ae1":"code","85545615":"code","33b09f97":"code","ceda2a39":"code","42f1dfe2":"code","6ee25a72":"code","18d70821":"code","69390de9":"markdown","ac5360f5":"markdown","bcbf98a0":"markdown","ae9903ba":"markdown","931870ff":"markdown","2008ccef":"markdown","b5e70801":"markdown","a7a999e9":"markdown","fb875f2c":"markdown"},"source":{"ef337b47":"# import needed libraries:\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","df797ef7":"# read the dataset:\n\ndf = pd.read_csv('\/kaggle\/input\/2020-it-salary-survey-for-eu-region\/IT Salary Survey EU  2020.csv')","d3cf1452":"# show the first five rows of the dataframe:\n\ndf.head()","54e84361":"# the count of the missing values in the dataframe:\n\ndf.isnull().sum()","6c3cf80c":"# dorp unuseful columns:\n\ndf = df.drop(columns = ['Annual bonus+stocks one year ago. Only answer if staying in same country',\n                        'Have you lost your job due to the coronavirus outbreak?', \n                        'Have you been forced to have a shorter working week (Kurzarbeit)? If yes, how many hours per week',\n                        'Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR',\n                        'Timestamp','Years of experience in Germany',\n                        'Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country',\n                        'Annual bonus+stocks one year ago. Only answer if staying in same country','Yearly bonus + stocks in EUR'])\n\n# rename columns:\n\ndf.rename(columns = {'Your main technology \/ programming language': 'Main technology', 'Position ': 'Position',\n                     'Other technologies\/programming languages you use often': 'Other technologies', \n                     'Yearly brutto salary (without bonus and stocks) in EUR': 'Yearly salary', 'Number of vacation days': 'Vacation days', \n                     'Main language at work': 'Language at work','Yearly bonus + stocks in EUR':'Yearly bonus',\n                     'Total years of experience': 'Years of experience' }, inplace = True)","dd02829f":"df['Vacation days'] = pd.to_numeric(df['Vacation days'], errors = 'coerce').fillna(0).astype(int)\ndf['Years of experience'] = pd.to_numeric(df['Years of experience'], errors = 'coerce').fillna(0).astype(int)\ndf['Age'] = df['Age'].fillna(0).astype(int)\ndf['Yearly salary'] = df['Yearly salary'].astype(int)","edfdfdb7":"# the distribution of the values:\n\nfig = plt.figure(figsize= (15, 8))\nplt.title('The distribution of the values:', fontsize= 16)\naxs = fig.subplots(nrows=2, ncols= 2)\nsns.boxplot(data = df, x= 'Age', ax = axs[0,0])\nsns.boxplot(data = df, x= 'Years of experience',ax = axs[0,1])\nsns.boxplot(data = df, x= 'Yearly salary',ax = axs[1,0])\nsns.boxplot(data = df, x= 'Vacation days', ax= axs[1,1])\nplt.show()","c811d056":"# in the yearly salary column we have nigative and exterme values, so we will detect them and delete them\n\ndf['Yearly salary'].sort_values()","f6a2dc6f":"# delete the exterme outliers by their index\n\ndf = df.drop(index = [473, 778, 853])","8c0cb144":"# define a function to determine the outliers and exclude them (interquartile range method):\n\ndef outliers(dataframe, column):\n    Q1 = dataframe[column].quantile(0.25)\n    Q3 = dataframe[column].quantile(0.75)\n    IQR = Q3 - Q1\n    lower_boundary = Q1 - 1.5 * IQR\n    upper_boundary = Q3 + 1.5 * IQR\n    df_new = dataframe.loc[(dataframe[column] >= lower_boundary) & (dataframe[column] <= upper_boundary)]\n    return df_new","cec42beb":"# the values distribution after excluding the outliers\n\nage = outliers(df, 'Age')\nexperience = outliers(df, 'Years of experience')\nsalary = outliers(df, 'Yearly salary')\nvacation = outliers(df, 'Vacation days')","3170803a":"# the distribution of the values after excluding the outliers:\n\nfig = plt.figure(figsize= (15, 8))\nplt.title('The distribution of the values after excluding the outliers:', fontsize= 16)\naxs = fig.subplots(nrows=2, ncols= 2)\nsns.boxplot(data = age, x= 'Age', ax = axs[0,0])\nsns.boxplot(data = experience, x= 'Years of experience',ax = axs[0,1])\nsns.boxplot(data = salary, x= 'Yearly salary',ax = axs[1,0])\nsns.boxplot(data = vacation, x= 'Vacation days', ax= axs[1,1])\nplt.show()","9d3fc1be":"# the distribution of the ages of the participants:\n\nplt.figure(figsize=(18,6))\nsns.countplot(data= age, x='Age')\nplt.title('The distribution of the ages of the participants:', fontsize= 16)\nplt.xlabel('Age', fontsize= 14)\nplt.ylabel('Count', fontsize = 14)\nplt.show()","1a598ee5":"# the Average salary for each age\n\nage_salary = age.groupby('Age', as_index = False).median()\nplt.figure(figsize=(18, 6))\nsns.barplot(data= age_salary, x= 'Age', y= 'Yearly salary',palette= 'flare')\nplt.title('The Average salary for each age:', fontsize= 16)\nplt.xlabel('Age', fontsize= 14)\nplt.ylabel('Yearly Salary', fontsize = 14)\nplt.xticks(fontsize= 12)\nplt.show()","c2f9f1e7":"# the gender of participants:\n\nplt.figure(figsize= (18, 8))\ndf['Gender'].value_counts().plot.pie(autopct= '%1.2F%%', fontsize= 14, startangle= 240, explode= [0.07]*3, shadow= True, colors = ['c','m','k'])\nplt.title('The Gender of participants:',fontsize = 16)\nplt.ylabel('')\nplt.show()","fdf868f2":"# The gender and the age:\n\nplt.figure(figsize=(16,8))\nsns.boxplot(data= age, x= age['Gender'], y= age['Age'], palette= 'deep')\nplt.title('The gender and the age:', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Age', fontsize= 16)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nplt.show()","c4970813":"# the distribution of yearly salary:\n\nplt.figure(figsize=(18,6))\nsns.histplot(data= salary, x= 'Yearly salary', hue= 'Gender', palette= 'magma', kde= True, bins = 30)\nplt.title('The distribution of the yearly salary:',fontsize= 16)\nplt.xlabel('Yearly Salary', fontsize= 14)\nplt.ylabel('Count', fontsize= 14)\nplt.xticks(fontsize= 12)\nplt.yticks(fontsize = 12)\nplt.show()","4a7e2212":"# The cities of participants:\n\nplt.figure(figsize= (18,8))\nplt.pie(df['City'].value_counts().head(5), labels=df['City'].value_counts().head(5).index ,textprops ={'fontsize' : 14}, \n        explode= [0.08]*5, shadow= True, startangle= 50, autopct= '%1.2F%%')\nplt.title('The top 5 cities:', fontsize= 16)\nplt.show()","fe50d0b3":"# The top 10 cities pay the higher salary:\n\nsalary_city = salary.groupby('City', as_index= False).mean().sort_values('Yearly salary', ascending = False) # sort cities according to the salary\n\n# two values in top 10 are not cities so droped them:\n\nsalary_city = salary_city.drop(index= [81, 15])\n\nsalary_city = salary_city.head(10)\nplt.figure(figsize = (16,6))\nax = sns.barplot(data= salary_city, x= 'City', y= 'Yearly salary',palette= 'magma')\nplt.title('The top 10 cities pay higher salary', fontsize= 16)\nplt.xlabel('City', fontsize = 14)\nplt.ylabel('Average yearly salary', fontsize= 14)\nplt.xticks(fontsize= 12, rotation= 45)\nplt.yticks(fontsize = 12)\nplt.bar_label(ax.containers[0], label_type = 'edge',fontsize = 12)\nplt.show()","3d7b01f8":"# the realation between the seniority level and years of experience:\n\nexperience['Seniority level'].value_counts()","ca1cbc26":"# We noticed that there are 5 main seniority level so we will exclude the others:\n\nexperience_seniority = experience.loc[experience['Seniority level'].isin(['Senior', 'Middle','Lead', 'Junior', 'Head'])]\n\n\nplt.figure(figsize=(22, 8))\nsns.swarmplot(data= experience_seniority, x='Seniority level', y= 'Years of experience',s = 3, hue= 'Gender')\nplt.title('The relationship between the seniority level, the years of experience and the gender :', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Years of experience' ,fontsize= 14)\nplt.xticks(fontsize= 14)\nplt.yticks(fontsize = 14)\nplt.show()","8619e742":"# the distribution of programing languages:\n\n# We noticed that there are many repeated values in different forms (for example we have :javascript, Javascript, JavaScript, Js, js)\n# so we will unify them:\n\ndf = df.replace(['javascript','Javascript', 'js', 'JS'], 'JavaScript')\ndf = df.replace(['python', 'Python '], 'Python')\ndf = df.replace('c++', 'C++')\ndf = df.replace(['.net', '.Net'], '.NET')\ndf = df.replace(['Sql', 'sql'], 'SQL')\ndf = df.replace(['php','Php'], 'PHP')\ndf = df.replace('java', 'Java')\ndf = df.replace(['typescript', 'Typescript'], 'TypeScript')","a81a663e":"# top 10 programming languages and technologies:\n\nplt.figure(figsize=(16, 6))\nax = df['Main technology'].value_counts().head(10).plot(kind = 'bar', color = 'royalblue')\nplt.title('Top 10 used programming languages and technologies:', fontsize = 20)\nplt.ylabel('Count', fontsize = 16)\nplt.xticks(fontsize = 14, rotation = 45)\nplt.bar_label(ax.containers[0], label_type = 'center',fontsize = 16, rotation = 90, color = 'w')\nplt.show()","9a866aa2":"# the relationship between the programming languages , gender and the yearly salary:\n\nsalary_language = salary.loc[salary['Main technology'].isin(['Python', 'Java', 'JavaScript', 'PHP', 'C++', 'Scala', 'Swift', '.NET', 'Go'])]\n\nplt.figure(figsize = (16,8))\nsns.boxplot(data = salary_language, x = 'Main technology', y= 'Yearly salary', hue = 'Gender', palette = 'viridis')\nplt.title('The relationship between the top used programming languages , gender and the yearly salary:', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Yearly salary', fontsize= 14)\nplt.xticks(fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.show()","79d1806e":"# top 10 positons get the highest salaries\n\nposition = df.groupby('Position', as_index= False).median().sort_values('Yearly salary', ascending = False).head(15)\n\nplt.figure(figsize= (16 , 6))\nsns.barplot(data = position, y = 'Position', x = 'Yearly salary', palette = 'viridis')\nplt.xlabel('Yearly salary', fontsize= 14)\nplt.ylabel('Job title', fontsize = 14)\nplt.xticks(fontsize = 12)\nplt.yticks(fontsize = 12)\nplt.show()","d36aa440":"# top programming languages and technologies used by data scientists:\n\nds = df.loc[df['Position'] == 'Data Scientist']\n\nplt.figure(figsize= (16,6))\nsns.barplot(x= ds['Main technology'].value_counts()[:3] , y= ds['Main technology'].value_counts()[:3].index, palette = 'inferno_r')\nplt.title('Top programming languages used by data scientists:' ,fontsize = 16)\nplt.yticks(fontsize = 14)\nplt.xticks(fontsize = 14)\nplt.xlabel('')\nplt.show()","7cc94766":"# the distribution of the employment status of the participants:\n\ndf['Employment status'].value_counts()","a87ddd83":"# we noticed that there are three main employment status so we will exclude the others:\n\nstatus = salary.loc[salary['Employment status'].isin(['Full-time employee','Self-employed (freelancer)','Part-time employee'])]\nstatus.shape\nplt.figure(figsize= (20,8))\nplt.pie(status['Employment status'].value_counts(), labels= status['Employment status'].value_counts().index, explode = [0.2]*3,\n       textprops = {'fontsize' : 12}, shadow = True)\nplt.title('The distribution of the employment status of the participants:', fontsize = 16)\nplt.show()","c02a6ae1":"# the relationship between the employment status and the yearly salary:\n\nplt.figure(figsize = (18, 6))\nsns.violinplot(data = status, x= 'Employment status', y= 'Yearly salary', palette = 'bright')\nplt.title('The relationship between the employment status and the yearly salary:', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Yearly salary', fontsize = 14)\nplt.xticks(fontsize = 14)\nplt.show()","85545615":"# the relationship between the contract duration and the years of experienceaa:\n\ndf['\u0421ontract duration'].value_counts()","33b09f97":"# we noticed that there is a wrong value so we will exclude it:\ncontract = experience.loc[experience['\u0421ontract duration'] !=  '0']\n\nplt.figure(figsize= (18, 8))\nsns.boxplot(data = contract, x= '\u0421ontract duration', y = 'Years of experience')\nsns.swarmplot(data = contract, x= '\u0421ontract duration', y = 'Years of experience',s = 3, color= 'black')\nplt.title('The relationship between contract duration and the years of experience:', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Years of experience', fontsize = 14)\nplt.xticks(fontsize= 14)\nplt.show()","ceda2a39":"# the distribution of the company types:\n\ndf['Company type'].value_counts()","42f1dfe2":"# we noticed that there are three main company types so we will exclude the others:\n\ncompany = df.loc[df['Company type'].isin(['Product', 'Startup', 'Consulting \/ Agency'])]\n\nplt.figure(figsize= (16,6))\nax = sns.countplot(data = company, x = 'Company type', palette = 'viridis')\nplt.title('The distribution of companies type:', fontsize = 16)\nplt.xlabel('')\nplt.ylabel('Count', fontsize = 14)\nplt.xticks(fontsize = 14)\nplt.bar_label(ax.containers[0], label_type = 'center',fontsize = 22, color = 'w')\nplt.show()","6ee25a72":"# the relationship between the company type and the other features:\n\ncompany_type = company.groupby('Company type', as_index= False).mean()\n\nfig = plt.figure(figsize= (16, 8))\naxs = fig.subplots(nrows=2, ncols= 2)\nsns.barplot(data = company_type, x= 'Company type', y = 'Yearly salary', ax = axs[0,1], palette= 'magma')\nsns.barplot(data = company_type, x= 'Company type', y = 'Years of experience', ax = axs[0,0], palette = 'viridis')\nsns.barplot(data = company_type, x= 'Company type', y = 'Vacation days', ax = axs[1,0], palette = 'magma')\nsns.barplot(data = company_type, x= 'Company type', y = 'Age', ax = axs[1,1], palette = 'viridis')\nplt.show()","18d70821":"company_size = df.groupby('Company size', as_index = False).mean()\n\nfig = plt.figure(figsize= (18, 12))\naxs = fig.subplots(nrows=2, ncols= 2)\nsns.barplot(data = company_size, x= 'Company size', y = 'Yearly salary', ax = axs[0,1], palette= 'rocket')\nsns.barplot(data = company_size, x= 'Company size', y = 'Years of experience', ax = axs[0,0], palette = 'deep')\nsns.barplot(data = company_size, x= 'Company size', y = 'Vacation days', ax = axs[1,0], palette = 'rocket')\nsns.barplot(data = company_size, x= 'Company size', y = 'Age', ax = axs[1,1], palette = 'deep')\nplt.show()","69390de9":"## General Information:\n\nAn anonymous salary survey has been conducted in 2020 among European IT specialists with a stronger focus on Germany.\n1253 respondents volunteered to participate in the survey.\nThe dataset contains rich information about the salary patterns among the IT professionals in the EU region and offers some great insights.","ac5360f5":"# Data cleaning and prepration","bcbf98a0":"### The 'vacation days' and 'years of experience' columns contain some non-numerical values, so we will change them to numerical values and change the columns types to integer.","ae9903ba":"### Some insights we can get from the figure:\n#### - The 'Consulting\/Agency' companies require higher years of experience and pay the lowest salary.\n#### - The Startups require lower years of experience and give lower vacation days.\n#### - The 'Product' companyies pay higher salary and give higer vacation days.\n","931870ff":"### We noticed that some columns contains many missing values or not useful so we will drop it, and make some long columns names shorter\n","2008ccef":"# Data Visualization","b5e70801":"## Outliers detection","a7a999e9":"### some insights we can get form the figure :\n#### - The 'Up to 10' companies require lower years of experience and give lower vacation days.\n#### - The '11-50' companies requier higer years of experience and pay lower salary\n#### - The '1000+' compnaies give higer salary and higer vacation days.","fb875f2c":"##  As we can see in the figure there are some extreme outliers so we will exclude them"}}