{"cell_type":{"a5815d91":"code","f913cc84":"code","6abf3571":"code","e5a1de0b":"code","632ee884":"code","b2fc02aa":"code","14f8abca":"code","fd5626c4":"code","5a5a6c6e":"code","311183ac":"code","7e216d77":"code","0dc02877":"code","e2f873db":"code","502b000d":"code","7873f43c":"code","ef35fc70":"code","ff76615d":"code","5e4f2aee":"code","b294f496":"code","54f8bffc":"code","906f3924":"code","171569b4":"code","5a9dc0bc":"code","710b85d5":"code","5008e500":"code","bd86a248":"code","7be72412":"code","88a92eab":"code","d653ef18":"code","53fb8174":"code","7e85537e":"code","afced726":"code","6826ede5":"code","078fe94c":"code","2a1a387d":"code","ad8a679b":"code","26a0baa7":"code","ce3341d1":"code","bb1af273":"code","38092480":"code","de867b56":"code","7dc3661a":"markdown","5a2c9f11":"markdown","0810a219":"markdown","a768fdc9":"markdown","809b4610":"markdown","7f53d63e":"markdown","a17b54d6":"markdown","a34f4a60":"markdown","efc8ee0d":"markdown","308bfed0":"markdown","cf80975c":"markdown","0b7f39df":"markdown","4c845303":"markdown","044d6188":"markdown","0e21a71c":"markdown","3d8e9d4d":"markdown","f897539e":"markdown","9b58cf16":"markdown","a16ecbe0":"markdown"},"source":{"a5815d91":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","f913cc84":"df = pd.read_csv(\"..\/input\/crop-recommendation-dataset\/Crop_recommendation.csv\")\ndf.head()","6abf3571":"# Statistical info\ndf.describe()","e5a1de0b":"# Datatypes of Attributes\ndf.info()","632ee884":"# Check the unique values in dataset\ndf.apply(lambda x: len(x.unique()))","b2fc02aa":"df.isnull().sum()","14f8abca":"df['label'].unique()","fd5626c4":"df['label'].value_counts()","5a5a6c6e":"sns.distplot(df['N'])","311183ac":"sns.distplot(df['P'])","7e216d77":"sns.distplot(df['K'])","0dc02877":"sns.distplot(df['temperature'])","e2f873db":"sns.distplot(df['humidity'])","502b000d":"sns.distplot(df['ph'])","7873f43c":"sns.distplot(df['rainfall'])","ef35fc70":"sns.heatmap(df.corr(), annot=True, cmap='coolwarm')","ff76615d":"X = df.iloc[:, :-1].values\ny = df.iloc[:, -1].values","5e4f2aee":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","b294f496":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","54f8bffc":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Logistic Regression's Accuracy :\", acc)","906f3924":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","171569b4":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","5a9dc0bc":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear', random_state = 0)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Support Vector Machine's Accuracy :\", acc)","710b85d5":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","5008e500":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","bd86a248":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=10, metric='minkowski', p=2)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"K-Nearest Neighbours's Accuracy :\", acc)","7be72412":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","88a92eab":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","d653ef18":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'rbf', random_state = 0)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Kernel SVM's Accuracy :\", acc)","53fb8174":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","7e85537e":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","afced726":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Naive Bayes's Accuracy :\", acc)","6826ede5":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","078fe94c":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","2a1a387d":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Decision Tree Classification's Accuracy :\", acc)","ad8a679b":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","26a0baa7":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","ce3341d1":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators=100, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n\n# Accuracy \nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(y_test, y_pred)\n\nprint(\"Random Forest Classification's Accuracy :\", acc)","bb1af273":"# Cross validation score\nfrom sklearn.model_selection import cross_val_score\nscore = cross_val_score(classifier, X, y, cv=5)\nscore","38092480":"# Classification Report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","de867b56":"print(classifier.predict(sc.transform([[90,42,43,20.82312,82.00284,6.50232,202.93536]])))","7dc3661a":"### Predicting a new result","5a2c9f11":"## Decision Tree Classification","0810a219":"### Input split","a768fdc9":"* Attributes Description\n\nVariable | Description\n----------|-------------\nN | Ratio of Nitrogen content in soil\nP | Ratio of Phosphorous content in soil\nK | Ratio of Potassium content in soil\ntemperature | Temperature in degree Celsius\nhumidity | Relative humidity in %\nph | Ph value of the soil\nrainfall | Rainfall in mm\nlabel | Various types of Crops","809b4610":"### Importing the Libraries","7f53d63e":"### Exploratory Data Analysis","a17b54d6":"# Crop Recommendations","a34f4a60":"## K-Nearest Neighbours","efc8ee0d":"## Kernel SVM","308bfed0":"### Training the  Model on the Training set based","cf80975c":"## Naive Bayes","0b7f39df":"### Preprocessing the Dataset","4c845303":"### Correlation Matrix","044d6188":"### Feature Scaling","0e21a71c":"## Support Vector Machine (SVM)","3d8e9d4d":"## Logistic Regresion","f897539e":"## Random Forest Classification","9b58cf16":"### Importing the Dataset","a16ecbe0":"### Splitting the dataset into the Training set and Test set"}}