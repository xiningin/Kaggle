{"cell_type":{"0f572144":"code","880edb33":"code","a5a8874f":"code","b4934e76":"code","40bbc90a":"code","a1e3ba67":"code","ce1a9091":"code","010623bb":"code","358d4477":"code","70d317ad":"code","1a03e0f2":"code","6e52d5db":"code","a0ebd220":"code","bce535a2":"code","12cdb900":"code","a0e0caff":"code","4bea96c8":"code","fcfc894a":"code","cc5eb28b":"code","5a6380a4":"code","252ac51c":"code","fb7640f8":"code","f82de17e":"code","a2e05fc0":"code","3cd44ece":"code","20f8de13":"code","ef82c6aa":"code","6427a73f":"code","cd9d27a3":"code","22067663":"code","b7a3cdab":"code","5e4ff972":"code","4b447ba3":"code","ef0c3bd3":"code","a7db627c":"code","c41318ee":"code","2d3d1185":"code","962b2abf":"code","857117aa":"code","16f4fedd":"code","8dcf94eb":"code","fa9728ab":"code","afab7d7c":"code","e5c39fc2":"code","13dd8ca4":"code","4a34235d":"code","c522cb22":"code","4837ec35":"code","6f48edee":"code","5874d304":"markdown","b2da2018":"markdown","677b0ccb":"markdown","01490695":"markdown","4d745b42":"markdown","ee5779ba":"markdown","c2ab7f68":"markdown","9105087a":"markdown","c36d83e7":"markdown"},"source":{"0f572144":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","880edb33":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","a5a8874f":"df = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","b4934e76":"df.info()","40bbc90a":"df.head()","a1e3ba67":"#id is unecessary\ndf = df.drop('id', axis = 1)","ce1a9091":"df.isnull().sum()","010623bb":"sns.countplot(df['gender'])","358d4477":"sns.countplot(df['smoking_status'])","70d317ad":"#very few people in dataset with stroke\nsns.countplot(df['stroke'])","1a03e0f2":"plt.figure(figsize=(8,6))\nsns.heatmap(df.corr(), cmap = 'viridis')","6e52d5db":"sns.countplot(df['heart_disease'])","a0ebd220":"sns.countplot(df['ever_married'])","bce535a2":"#Filled empty bmi with mean value\ndf['bmi'].fillna(df['bmi'].mean(), inplace = True)","12cdb900":"df.isnull().sum()","a0e0caff":"df['smoking_status'].value_counts()","4bea96c8":"df['smoking_status'].replace('Unknown', df['smoking_status'].mode()[0], inplace = True)","fcfc894a":"df['smoking_status'].value_counts()","cc5eb28b":"df.head()","5a6380a4":"#creating dummy variables for categorical data\ndf = pd.get_dummies(df, columns=['gender'], drop_first=True)\ndf = pd.get_dummies(df, columns=['ever_married'], drop_first=True)\ndf = pd.get_dummies(df, columns=['Residence_type'], drop_first=True)\ndf = pd.get_dummies(df, columns=['work_type'], drop_first=True)\ndf = pd.get_dummies(df, columns=['smoking_status'], drop_first=True)\ndf.head()","252ac51c":"X = df.drop('stroke', axis = 1).values\ny = df['stroke'].values","fb7640f8":"#split data into training and testing\nfrom sklearn.model_selection import train_test_split","f82de17e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","a2e05fc0":"#Scale and Fit the data\nfrom sklearn.preprocessing import MinMaxScaler","3cd44ece":"scaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","20f8de13":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation,Dropout","ef82c6aa":"X_train.shape","6427a73f":"#ANN MODEL\nmodel = Sequential()\n\nmodel.add(Dense(units = 15, activation = 'relu'))\nmodel.add(Dropout(.1))\nmodel.add(Dense(units = 10, activation = 'relu'))\nmodel.add(Dropout(.1))\nmodel.add(Dense(units = 5, activation = 'relu'))\nmodel.add(Dropout(.1))\nmodel.add(Dense(units = 1, activation = 'sigmoid'))\n\nmodel.compile(loss = 'binary_crossentropy', optimizer = 'adam')","cd9d27a3":"from tensorflow.keras.callbacks import EarlyStopping","22067663":"#stops when validation loss is not dropping for 3 epochs\nearly_stop = EarlyStopping(monitor = 'val_loss', mode = 'min', patience = 10, verbose = 1)","b7a3cdab":"#Fitting model\nmodel.fit(X_train, y_train, \n          epochs = 800,\n         validation_data=(X_test, y_test),\n         verbose = 1, \n         callbacks=[early_stop])","5e4ff972":"model_loss = pd.DataFrame(model.history.history)\nmodel_loss.plot()","4b447ba3":"#Predictions\nprediction = model.predict_classes(X_test)","ef0c3bd3":"from sklearn.metrics import classification_report, confusion_matrix\n\nprint(classification_report(y_test,prediction))\nprint()\nprint(confusion_matrix(y_test,prediction))","a7db627c":"# Was not able to predict any of the people with stroke (not enough data with people who have stroke)","c41318ee":"from sklearn.svm import SVC","2d3d1185":"model = SVC()","962b2abf":"model.fit(X_train, y_train)","857117aa":"predictions = model.predict(X_test)","16f4fedd":"print(classification_report(y_test,prediction))\nprint()\nprint(confusion_matrix(y_test,prediction))","8dcf94eb":"# Same results as ANN \n# Lets try tuning the SVM model with GridSearch","fa9728ab":"from sklearn.model_selection import GridSearchCV","afab7d7c":"param_grid = {'C': [0.1, 1, 10, 1000], 'gamma':[1, 0.1, 0.01, 0.001]}\ngrid = GridSearchCV(SVC(), param_grid, verbose=3)","e5c39fc2":"#Fit the data\ngrid.fit(X_train, y_train)","13dd8ca4":"#Best Paramaters based on param grid\ngrid.best_params_","4a34235d":"#Grid Model With Best Paramaters\ngrid.best_estimator_","c522cb22":"# Predictions with Grid Tuned SVM model\npredictions = grid.predict(X_test)","4837ec35":"print(classification_report(y_test,prediction))\nprint()\nprint(confusion_matrix(y_test,prediction))","6f48edee":"# Summary\n# Models are not able to accurately predict if someone has Stroke based on too little data in the data set\nprint(\"People with stroke is {} % of the dataset\".format((df['stroke'].value_counts()[1])\/len(df)* 100))","5874d304":"# Thanks!!!","b2da2018":"#  Accuracy Reports\n","677b0ccb":"# **Exploratory Data Analysis**","01490695":"# Data Manipulation ","4d745b42":"# **GRID SEARCH TUNING**","ee5779ba":"# Let Me Know What You Think!","c2ab7f68":"# **ANN Classification Model**","9105087a":"# **Conclusion**","c36d83e7":"# **SVM MODEL**"}}