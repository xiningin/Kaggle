{"cell_type":{"6ab0f7e6":"code","29b9b732":"code","f056a6df":"code","e1c22104":"code","264d707e":"code","797a14e1":"code","2364986e":"code","94f412c9":"code","ef6709f9":"code","6267a8aa":"code","8959d8fb":"code","7889531a":"code","cedab3a3":"code","db2f21fa":"code","05589c84":"code","fc202a85":"code","4a4a4d1c":"code","37a37d25":"code","e3242466":"code","98ce7972":"markdown","dcf8d730":"markdown","55553319":"markdown","1f5d8e30":"markdown","0c0d62c7":"markdown"},"source":{"6ab0f7e6":"import tensorflow as tf\nfrom tensorflow import keras\n\nimport os\nimport tempfile\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\n\nimport sklearn\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nmpl.rcParams['figure.figsize'] = (12, 10)\ncolors = plt.rcParams['axes.prop_cycle'].by_key()['color']","29b9b732":"df = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')\ndf.head()","f056a6df":"colors = ['#835AF1']\n\nfig = ff.create_distplot([df['Age']], ['Age'], colors=colors,\n                         show_curve=True, show_hist=True)\n\n# Add title\nfig.update(layout_title_text='Distribution of Age')\nfig.show()","e1c22104":"df['Response'].value_counts()","264d707e":"# Preprocess Block\n\ngender = {'Male': 0, 'Female': 1}\ndriving_license = {0: 0, 1: 1}\npreviously_insured = {0: 1, 1: 0}\nvehicle_age = {'> 2 Years': 3, '1-2 Year': 2, '< 1 Year': 1}\nvehicle_damage = {'Yes': 1, 'No': 0}\n\ndef preprocess(df):\n    df['Gender'] = df['Gender'].map(gender)\n    df['Driving_License'] = df['Driving_License'].map(driving_license)\n    df['Previously_Insured'] = df['Previously_Insured'].map(previously_insured)\n    df['Vehicle_Age'] = df['Vehicle_Age'].map(vehicle_age)\n    df['Vehicle_Damage'] = df['Vehicle_Damage'].map(vehicle_damage)\n\n    df['Policy_Sales_Channel'] = df['Policy_Sales_Channel'].apply(lambda x: np.int(x))\n    df['Region_Code'] = df['Region_Code'].apply(lambda x: np.int(x))\n\n    return df.drop('id', axis = 1)","797a14e1":"df = preprocess(df)","2364986e":"df.describe()","94f412c9":"train, val = train_test_split(df, test_size=0.1)\nprint(len(train), 'train examples')\nprint(len(val), 'validation examples')","ef6709f9":"train_labels = np.array(train['Response'])\nval_labels = np.array(val['Response'])\ntrain = train.drop('Response', axis = 1)\nval = val.drop('Response', axis = 1)\nbool_train_labels = train_labels != 0","6267a8aa":"scaler = StandardScaler()\ntrain_features = scaler.fit_transform(train)\nval_features = scaler.transform(val)","8959d8fb":"METRICS = [\n      keras.metrics.TruePositives(name='tp'),\n      keras.metrics.FalsePositives(name='fp'),\n      keras.metrics.TrueNegatives(name='tn'),\n      keras.metrics.FalseNegatives(name='fn'), \n      keras.metrics.BinaryAccuracy(name='accuracy'),\n      keras.metrics.Precision(name='precision'),\n      keras.metrics.Recall(name='recall'),\n      keras.metrics.AUC(name='auc'),\n]\n\ndef make_model(metrics = METRICS, output_bias=None):\n  if output_bias is not None:\n    output_bias = tf.keras.initializers.Constant(output_bias)\n  model = keras.Sequential([\n      keras.layers.Dense(\n          16, activation='relu',\n          input_shape=(train_features.shape[-1],)),\n      keras.layers.Dense(\n          32, activation='relu'),\n      keras.layers.Dropout(0.5),\n      keras.layers.Dense(1, activation='sigmoid',\n                         bias_initializer=output_bias),\n  ])\n\n  model.compile(\n      optimizer=keras.optimizers.Adam(lr=1e-3),\n      loss=keras.losses.BinaryCrossentropy(),\n      metrics=metrics)\n\n  return model","7889531a":"EPOCHS = 100\nBATCH_SIZE = 2048\n\nearly_stopping = tf.keras.callbacks.EarlyStopping(\n    monitor='val_auc', \n    verbose=1,\n    patience=10,\n    mode='max',\n    restore_best_weights=True)","cedab3a3":"model = make_model()\nmodel.summary()","db2f21fa":"baseline_history = model.fit(\n    train_features,\n    train_labels,\n    batch_size=BATCH_SIZE,\n    epochs=EPOCHS,\n    callbacks = [early_stopping],\n    validation_data=(val_features, val_labels))","05589c84":"def plot_metrics(history):\n  metrics =  ['loss', 'auc', 'precision', 'recall']\n  for n, metric in enumerate(metrics):\n    name = metric.replace(\"_\",\" \").capitalize()\n    plt.subplot(2,2,n+1)\n    plt.plot(history.epoch,  history.history[metric], color=colors[0], label='Train')\n    plt.plot(history.epoch, history.history['val_'+metric],\n             color=colors[0], linestyle=\"--\", label='Val')\n    plt.xlabel('Epoch')\n    plt.ylabel(name)\n    if metric == 'loss':\n      plt.ylim([0, plt.ylim()[1]])\n    elif metric == 'auc':\n      plt.ylim([0.8,1])\n    else:\n      plt.ylim([0,1])\n\n    plt.legend()","fc202a85":"plot_metrics(baseline_history)","4a4a4d1c":"test = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/test.csv')\ntest = preprocess(test)\ntest_features = scaler.fit_transform(test)\npreds = model.predict(test_features, batch_size=BATCH_SIZE)","37a37d25":"prediction = pd.read_csv('..\/input\/health-insurance-cross-sell-prediction\/sample_submission.csv')\nprediction['Response'] = preds","e3242466":"prediction.to_csv('submission.csv',index=False)\nprediction.head()","98ce7972":"### Dataset Looks well structured. Target column is '**Response**' which indicates the truth value if that health insurance owner will buy a vehicle insurance or not.","dcf8d730":"Check [here](https:\/\/www.kaggle.com\/anmolkumar\/vehicle-insurance-cross-sell-roc-auc-85-6) for reference to this.","55553319":"## Clearly this is a case for imbalance classes.","1f5d8e30":"### The relatively small model has a val_auc of 85.06 with a small training time. \n### Stay tuned for updates.","0c0d62c7":"<center><h1>Insurance Cross Sell Prediction TF Keras<\/h1><\/center>\n<br>\n<center><img src = 'https:\/\/static.wixstatic.com\/media\/5758c6_14a8fd304c2a4ad1831ff6259a352424~mv2.png\/v1\/fill\/w_567,h_297,al_c,q_85,usm_0.66_1.00_0.01\/5758c6_14a8fd304c2a4ad1831ff6259a352424~mv2.webp'><\/center>\n<br>\n<center><h3>About the Dataset<\/h3><\/center>\n<br>\n<center>Our client is an Insurance company that has provided Health Insurance to its customers now they need your help in building a model to predict whether the policyholders (customers) from past year will also be interested in Vehicle Insurance provided by the company.\n    \n\nAn insurance policy is an arrangement by which a company undertakes to provide a guarantee of compensation for specified loss, damage, illness, or death in return for the payment of a specified premium. A premium is a sum of money that the customer needs to pay regularly to an insurance company for this guarantee.\n\nFor example, you may pay a premium of Rs. 5000 each year for a health insurance cover of Rs. 200,000\/- so that if, God forbid, you fall ill and need to be hospitalised in that year, the insurance provider company will bear the cost of hospitalisation etc. for upto Rs. 200,000. Now if you are wondering how can company bear such high hospitalisation cost when it charges a premium of only Rs. 5000\/-, that is where the concept of probabilities comes in picture. For example, like you, there may be 100 customers who would be paying a premium of Rs. 5000 every year, but only a few of them (say 2-3) would get hospitalised that year and not everyone. This way everyone shares the risk of everyone else.\n\nJust like medical insurance, there is vehicle insurance where every year customer needs to pay a premium of certain amount to insurance provider company so that in case of unfortunate accident by the vehicle, the insurance provider company will provide a compensation (called \u2018sum assured\u2019) to the customer.\n\nBuilding a model to predict whether a customer would be interested in Vehicle Insurance is extremely helpful for the company because it can then accordingly plan its communication strategy to reach out to those customers and optimise its business model and revenue.\n\nNow, in order to predict, whether the customer would be interested in Vehicle insurance, you have information about demographics (gender, age, region code type), Vehicles (Vehicle Age, Damage), Policy (Premium, sourcing channel) etc.<\/center>\n<br>\n- More Info - [HERE](https:\/\/www.kaggle.com\/anmolkumar\/health-insurance-cross-sell-prediction)\n- Owner - [ANMOL KUMAR](https:\/\/www.kaggle.com\/anmolkumar\/health-insurance-cross-sell-prediction)"}}