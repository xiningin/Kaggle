{"cell_type":{"8a8990e4":"code","6c21bd1c":"code","d0b6c665":"code","43177658":"code","b3499caf":"code","5f7f0084":"code","f35438ab":"code","0d9a0207":"code","0c14b7e5":"code","c90dc44c":"code","c48edf37":"code","aeaa5179":"code","eae3af4f":"code","d6f77175":"code","6d0d65f6":"code","23d2dc6f":"code","05ea691e":"code","6327b085":"code","578d786a":"code","f6eae20f":"code","e9eac7c7":"code","de846719":"code","3a5fd5c5":"code","c6548434":"code","befd288f":"code","184146e5":"code","ebc6528a":"code","33a61fd9":"code","e7b7592a":"code","7b539418":"code","34fb00f6":"code","9b70f85b":"code","563c6817":"code","15966885":"markdown","2bf42eca":"markdown","9322119e":"markdown","8d4f5e40":"markdown","26a46399":"markdown","4368d3bc":"markdown","5eef837a":"markdown","58cea4bd":"markdown","c6361508":"markdown","e8a7e655":"markdown","6cdb200f":"markdown","1d597212":"markdown","49407e16":"markdown","3955a8f2":"markdown","9795db35":"markdown","bab91311":"markdown","dcb5bc2a":"markdown"},"source":{"8a8990e4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n\nsns.set()\n%matplotlib inline","6c21bd1c":"df = pd.read_csv(\"..\/input\/salary-data\/Salary_Data.csv\")","d0b6c665":"df.head()","43177658":"df.shape","b3499caf":"df.isnull().values.any()","5f7f0084":"train_set, test_set = train_test_split(df, test_size=0.2, random_state=42)","f35438ab":"df_copy = train_set.copy()","0d9a0207":"df_copy.shape","0c14b7e5":"df_copy.head()","c90dc44c":"df_copy.describe()","c48edf37":"df_copy.corr()","aeaa5179":"df_copy.plot.scatter(x='YearsExperience', y='Salary')","eae3af4f":"# Regression plot\nsns.regplot('YearsExperience', # Horizontal axis\n           'Salary', # Vertical axis\n           data=df_copy)","d6f77175":"test_set_full = test_set.copy()\n\ntest_set = test_set.drop([\"Salary\"], axis=1)","6d0d65f6":"test_set.head()","23d2dc6f":"train_labels = train_set[\"Salary\"]","05ea691e":"train_labels.head()","6327b085":"train_set_full = train_set.copy()\n\ntrain_set = train_set.drop([\"Salary\"], axis=1)","578d786a":"train_set.head()","f6eae20f":"lin_reg = LinearRegression()\n\nlin_reg.fit(train_set, train_labels)","e9eac7c7":"salary_pred = lin_reg.predict(test_set)\n\nsalary_pred","de846719":"print(\"Coefficients: \", lin_reg.coef_)\nprint(\"Intercept: \", lin_reg.intercept_)","3a5fd5c5":"print(salary_pred)\nprint(test_set_full[\"Salary\"])","c6548434":"lin_reg.score(test_set, test_set_full[\"Salary\"])","befd288f":"r2_score(test_set_full[\"Salary\"], salary_pred)","184146e5":"plt.scatter(test_set_full[\"YearsExperience\"], test_set_full[\"Salary\"], color='blue')\nplt.plot(test_set_full[\"YearsExperience\"], salary_pred, color='red', linewidth=2)","ebc6528a":"# imports\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# this allows plots to appear directly in the notebook\n%matplotlib inline\n\n# read data into a DataFrame\ndata = pd.read_csv('..\/input\/salary-data\/Salary_Data.csv', index_col=0)\ndata.head()","33a61fd9":"# print the shape of the DataFrame\ndata.shape","e7b7592a":"data.hist()\nplt.show()","7b539418":"data.plot(kind='density', subplots=True, layout=(1,1), sharex=False)\nplt.show()","34fb00f6":"data.plot(kind='box', subplots=True, layout=(1,1), sharex=False, sharey=False)\nplt.show()","9b70f85b":"import numpy as np","563c6817":"import matplotlib.pyplot as plt\n\nfrom pandas.plotting import scatter_matrix\nscatter_matrix(data)\nplt.show()","15966885":"Models in `scikit-learn` have a `score` method. Depending on the model, this method will do a different calculation. For `LinearRegression` it calculates the $r^2$.","2bf42eca":"There's also a separate `r2_score` method that will calculate the $r^2$.","9322119e":"## Exploratory Data Analysis\n\nExplore the data to find trends. Using the `describe` method to get descriptive statistics on numerical columns of our data. The `corr` method to calculate correlations between the columns of our data. And plotting with `matplotlib` via the `plot` method to get a visual of the data. Also using `seaborn`'s `regplot` to give us what a linear regression line of our data may look like and to verify that our data looks linear.","8d4f5e40":"## Imports and load data","26a46399":"## Predict\n\nWe're making three other data sets for the `LinearRegression` model:\n- `test_set` that is just the `YearsExperience` column (dropping the `Salary` column) that will be used for analyzing and scoring our model.\n- `train_labels` that is just the `Salary` column to train the `LinearRegression` model what the answers are when passing in the years of experience input.\n- `train_set` that is also just the `YearsExperience` column (dropping the `Salary` column) that will be passed into the `LinearRegression`'s `fit` method as the `x` parameter.","4368d3bc":"$$y=mx+b$$","5eef837a":"Now that we have our data in the correct form, we pass in the `train_set` and `train_labels` into the `fit` method to train the model.","58cea4bd":"Now we have a model and can call the `predict` function on it with inputs. ","c6361508":"2nd code for the same task : ","e8a7e655":"With that information we can build our line formula - $y=9423.81532303x + 25321.5830118$\n\nWe can compare our predictions to our testing set label columns.","6cdb200f":"We can also plot our test data as a scatter plot and, with our predicted salary that we got from our model, plot a line to see how well it fits the data.","1d597212":"## Analyze Results","49407e16":"Before continuing, check if there are any missing data in the data set.\n\nIn order to check null values in Pandas Dataframe, we use notnull() function this function return dataframe of Boolean values which are False for NaN values.","3955a8f2":"We can get the coefficients and intercept from our model.","9795db35":"# Simple Linear Regression\n\n[Linear regression](https:\/\/en.wikipedia.org\/wiki\/Linear_regression) is perhaps the most simple of all of the models. Do you remember the linear formula where `m` is the slope and `b` is where the line starts on the y-axis?","bab91311":"## Split data\n\nSplitting the depedent variable (`Salary`) out from the indepedent variable (`YearsExperience`) so we can build our model.\n\nWe use the `train_test_split` method from `scikit-learn` to split our data. The `test_size` is used to tell it what percentage of the data to use for our testing data set and the `random_state` is used as a seed for the random splitting of the data. The seed will randomize the split in the same way each time for reproducability.","dcb5bc2a":"This is a simple linear model since there is only one coefficient - `mx`."}}