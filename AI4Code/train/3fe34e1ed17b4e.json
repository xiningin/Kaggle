{"cell_type":{"02aecfc2":"code","2d47e3a7":"code","c12413d0":"code","9a81fd92":"code","3a1c2f89":"code","0a0a8ec4":"code","7de2b9a7":"code","9e7553fe":"code","941bd52c":"code","0f3b7030":"code","f684252d":"code","c9060fea":"code","fbd7fb41":"code","ba9d66b2":"code","c7699797":"code","ac5bd8a9":"code","37a8ffe7":"code","ff2141bc":"code","453f9ca5":"code","a3f44463":"code","bc27ee6f":"code","4efb23c0":"code","4a05701a":"code","ad6ed06f":"code","34867067":"code","7d19851f":"code","7391ca81":"code","3c76632c":"code","b2039947":"code","b21791e2":"code","cb4c2f6f":"code","b3a9a5a0":"code","5372774b":"code","fb455011":"code","f962001a":"code","52c12ce8":"code","d03d25c6":"code","f4912b6c":"code","fea5abbf":"markdown","1ff4505f":"markdown","e70b704b":"markdown","1955ddac":"markdown","3e7b6d91":"markdown","4b700ee8":"markdown","73955abd":"markdown","7707d3b6":"markdown","d206dc5f":"markdown","24b60340":"markdown","dea96d1b":"markdown","7955129e":"markdown","5b68ef00":"markdown","388f20cb":"markdown","666ff4e5":"markdown","7fb8a053":"markdown","591d25d3":"markdown","ada54756":"markdown","d6697c4a":"markdown","03417474":"markdown","a67e03c1":"markdown","082f4d3d":"markdown","41fb50ec":"markdown","9b77e9df":"markdown","56b863b0":"markdown","788fdae3":"markdown","102ea6f8":"markdown","7bf5fb1b":"markdown","7eb3c0c5":"markdown","01be8974":"markdown","5bb05d6c":"markdown","2e5782c7":"markdown","905c16cf":"markdown","7e69d1d0":"markdown","974563ad":"markdown","2e711e17":"markdown","0afbda5d":"markdown","f42c5b67":"markdown","42851c4e":"markdown","e8eef76a":"markdown","7540bd1e":"markdown","6da1b7cb":"markdown","646e0527":"markdown","5fc6297f":"markdown","6629043b":"markdown","d70ef668":"markdown","298f56a0":"markdown","5b62d14d":"markdown","bc7d6ac0":"markdown","9d0a7061":"markdown"},"source":{"02aecfc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# matplotlib\nimport matplotlib.pyplot as plt\n\n# seaborn\nimport seaborn as sns\n\n#plotly\nimport plotly.io as pio\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected = True)\nimport plotly.graph_objs as go\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d47e3a7":"# reading data\ndata = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndata","c12413d0":"data.columns","9a81fd92":"data.head()","3a1c2f89":"data[\"Species\"].unique()","0a0a8ec4":"data[\"Species\"].value_counts()","7de2b9a7":"data.describe()","9e7553fe":"data.info()","941bd52c":"# get feature\ncat_var = data[\"Species\"]\ncat_var\n\n# count number of categoricaal variable (value\/sample)\nvar_value = cat_var.value_counts()\nvar_value","0f3b7030":"# visualize\n\nplt.figure(figsize = (8,8))\nplt.bar(var_value.index,var_value)\nplt.xticks(var_value.index,var_value.index.values)\nplt.ylabel(\"Frequency\")\nplt.title(\"Species' Frequency\")\nplt.show()","f684252d":"# Coding a simple function to make a plot for each numerical variable\ndef plot_hist(variable):\n    plt.figure(figsize = (6,6))\n    plt.hist(data[variable],bins = 40)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution\".format(variable))\n    plt.show()","c9060fea":"# visualizing for each numerical variable\nnum_var = [\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"]\nfor i in num_var:\n    plot_hist(i)","fbd7fb41":"# Sepal Length - iris-setosa \/ iris-versicolor \/ iris-virginica\n\ndata[[\"SepalLengthCm\",\"Species\"]].groupby([\"Species\"],as_index = False).mean().sort_values(by = \"Species\",ascending = False)","ba9d66b2":"# Sepal Width - iris-setosa \/ iris-versicolor \/ iris-virginica\n\ndata[[\"SepalWidthCm\",\"Species\"]].groupby([\"Species\"],as_index = False).mean().sort_values(by = \"Species\",ascending = False)","c7699797":"# Petal Length - iris-setosa \/ iris-versicolor \/ iris-virginica\n\ndata[[\"PetalLengthCm\",\"Species\"]].groupby([\"Species\"],as_index = False).mean().sort_values(by = \"Species\",ascending = False)","ac5bd8a9":"# Petal Width - iris-setosa \/ iris-versicolor \/ iris-virginica\n\ndata[[\"PetalWidthCm\",\"Species\"]].groupby([\"Species\"],as_index = False).mean().sort_values(by = \"Species\",ascending = False)","37a8ffe7":"data.describe()","ff2141bc":"# coding a simple function for detecting outliers\n\ndef detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indexes\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indexes\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i,v in  outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","453f9ca5":"data.loc[detect_outliers(data,[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"])]","a3f44463":"data.columns[data.isnull().any()]","bc27ee6f":"column_list = [\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"]\nf,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(data[column_list].corr(),annot = True,fmt = \".2f\")\nplt.show()","4efb23c0":"# drop Id columns for better dataframe\ndata.drop([\"Id\"],axis = 1,inplace = True)","4a05701a":"# prepare data frames\ndata_setosa_s = data[data.Species == \"Iris-setosa\"].iloc[:,:]\ndata_versicolor_s = data[data.Species == \"Iris-versicolor\"].iloc[:,:]\ndata_virginica_s = data[data.Species == \"Iris-virginica\"].iloc[:,:]\n\n# Creating trace 1\ntrace1 = go.Scatter(\n                    x = data_setosa_s.SepalLengthCm,\n                    y = data_setosa_s.SepalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-setosa\",\n                    marker_color = \"red\",\n                    )\n# Creating trace 2\ntrace2 = go.Scatter(\n                    x = data_versicolor_s.SepalLengthCm,\n                    y = data_versicolor_s.SepalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-versicolor\",\n                    marker_color = \"blue\",\n                    )\n# Creating trace 3\ntrace3 = go.Scatter(\n                    x = data_virginica_s.SepalLengthCm,\n                    y = data_virginica_s.SepalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-virginica\",\n                    marker_color = \"yellow\",\n                    )\ndata1 = [trace1,trace2,trace3]\nlayout = dict(\n            title = \"Sepal Length vs Sepal Width of All Three Iris Species\",\n            xaxis = dict(title = \"Sepal Length\",ticklen = 5,zeroline = False),\n            yaxis = dict(title = \"Sepal Width\",ticklen = 5,zeroline = False)\n            )\nfig = dict(data = data1,layout = layout)\niplot(fig)","ad6ed06f":"# prepare data frames\ndata_setosa_p = data[data.Species == \"Iris-setosa\"].iloc[:,:]\ndata_versicolor_p = data[data.Species == \"Iris-versicolor\"].iloc[:,:]\ndata_virginica_p = data[data.Species == \"Iris-virginica\"].iloc[:,:]\n\n# Creating trace 1\ntrace1 = go.Scatter(\n                    x = data_setosa_p.PetalLengthCm,\n                    y = data_setosa_p.PetalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-setosa\",\n                    marker_color = \"purple\",\n                    )\n# Creating trace 2\ntrace2 = go.Scatter(\n                    x = data_versicolor_p.PetalLengthCm,\n                    y = data_versicolor_p.PetalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-versicolor\",\n                    marker_color = \"cyan\",\n                    )\n# Creating trace 3\ntrace3 = go.Scatter(\n                    x = data_virginica_p.PetalLengthCm,\n                    y = data_virginica_p.PetalWidthCm,\n                    mode = \"markers\",\n                    name = \"iris-virginica\",\n                    marker_color = \"orange\",\n                    )\ndata2 = [trace1,trace2,trace3]\nlayout = dict(\n            title = \"Petal Length vs Petal Width of All Three Iris Species\",\n            xaxis = dict(title = \"Petal Length\",ticklen = 5,zeroline = False),\n            yaxis = dict(title = \"Petal Width\",ticklen = 5,zeroline = False)\n            )\nfig = dict(data = data2,layout = layout)\niplot(fig)","34867067":"# Show sepal length distribution with violin plot\npal = sns.color_palette(\"RdBu\", n_colors=3)\nf,ax = plt.subplots(figsize = (10,10))\nsns.violinplot(x = \"Species\",y = \"SepalLengthCm\",data = data,palette = pal,scale = \"count\",inner = \"point\")\nplt.show()","7d19851f":"# Show sepal width distribution with violin plot\npal = sns.color_palette(\"Set2\", n_colors=3)\nf,ax = plt.subplots(figsize = (10,10))\nsns.violinplot(x = \"Species\",y = \"SepalWidthCm\",data = data,palette = pal,scale = \"count\",inner = \"point\")\nplt.show()","7391ca81":"# Show petal length distribution with violin plot\npal = sns.color_palette(\"rainbow\", n_colors=3)\nf,ax = plt.subplots(figsize = (10,10))\nsns.violinplot(x = \"Species\",y = \"PetalLengthCm\",data = data,palette = pal,scale = \"count\",inner = \"point\")\nplt.show()","3c76632c":"# Show petal width distribution with violin plot\npal = sns.color_palette(\"prism\", n_colors=3)\nf,ax = plt.subplots(figsize = (10,10))\nsns.violinplot(x = \"Species\",y = \"PetalWidthCm\",data = data,palette = pal,scale = \"count\",inner = \"point\")\nplt.show()","b2039947":"column_list = [\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"]\nf,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(data[column_list].corr(),annot = True,fmt = \".2f\")\nplt.show()","b21791e2":"# plotting data\nplt.scatter(data.PetalLengthCm,data.PetalWidthCm)\nplt.xlabel(\"Petal Length Cm\")\nplt.ylabel(\"Petal Width Cm\")\nplt.show()","cb4c2f6f":"# import sklearn and prepare data\nfrom sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\nx = data.PetalLengthCm.values.reshape(-1,1)\ny = data.PetalWidthCm.values.reshape(-1,1)\n\n# line fit and prediciton\nlinear_reg.fit(x,y)\ny_head = linear_reg.predict(x)\n\n# plotting line fit\nplt.scatter(data.PetalLengthCm,data.PetalWidthCm)\nplt.xlabel(\"Petal Length Cm\")\nplt.ylabel(\"Petal Width Cm\")\nplt.plot(x,y_head,color=\"red\")\nplt.show()","b3a9a5a0":"# r^2 score\nfrom sklearn.metrics import r2_score\nprint(\"r_square score : \",r2_score(y,y_head))","5372774b":"from sklearn.preprocessing import PolynomialFeatures\npolynomial_reg = PolynomialFeatures(degree = 2)\nx = data.PetalLengthCm.values.reshape(-1,1)\ny = data.PetalWidthCm.values.reshape(-1,1)\n\nx_polynomial = polynomial_reg.fit_transform(x)\nlinear_reg2 = LinearRegression()\nlinear_reg2.fit(x_polynomial,y)\n\ny_head2 = linear_reg2.predict(x_polynomial)\n\n# visualize\nplt.scatter(x,y)\nplt.xlabel(\"Petal Length Cm\")\nplt.ylabel(\"Petal Width Cm\")\nplt.plot(x,y_head2,color = \"orange\")\nplt.show()","fb455011":"# r^2 score\nfrom sklearn.metrics import r2_score\nprint(\"r_square score : \",r2_score(y,y_head2))","f962001a":"# decision tree regression\nfrom sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor() # random state = 0\nx = data.PetalLengthCm.values.reshape(-1,1)\ny = data.PetalWidthCm.values.reshape(-1,1)\n\n# fit and predict\ntree_reg.fit(x,y)\ny_head3 = tree_reg.predict(x)\n\n#visualize\nf,ax = plt.subplots(figsize = (10,10))\nplt.scatter(x,y_head3,color =\"red\")\nplt.xlabel(\"Petal Length Cm\")\nplt.ylabel(\"Petal Width Cm\")\nplt.plot(x,y_head3,color = \"blue\")\nplt.show()","52c12ce8":"# r^2 score\nfrom sklearn.metrics import r2_score\nprint(\"r_square score : \",r2_score(y,y_head3))","d03d25c6":"# random forest regression\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 100,random_state = 42)\nx = data.PetalLengthCm.values.reshape(-1,1)\ny = data.PetalWidthCm.values.reshape(-1,1)\nrf.fit(x,y)\ny_head4 = rf.predict(x)\n\n# visualize\nf,ax = plt.subplots(figsize = (10,10))\nplt.scatter(x,y,color = \"purple\")\nplt.plot(x,y_head4,color = \"green\")\nplt.xlabel(\"Petal Length Cm\")\nplt.ylabel(\"Petal Width Cm\")\nplt.show()","f4912b6c":"# r^2 score\nfrom sklearn.metrics import r2_score\nprint(\"r_square score : \",r2_score(y,y_head3))","fea5abbf":"  As you can see, we have five columns.\n  \n  - SepalLengthCm\n  - SepalWidthCm\n  - PetalLengthCm\n  - PetalWidthCm\n  - Species","1ff4505f":"As you can see there is no values that has outlier more than 2. Some of outliers may be ignored...","e70b704b":"<a id =\"5\"><\/a>\n## Numerical Variable","1955ddac":"As you can we have zero NaN values in data, \"type of sepal length,sepal width,petal length and petal width\" columns is float and type of \"species\" column is string.","3e7b6d91":"<a id=\"17\"><\/a>\n## Petal Width vs Species","4b700ee8":" We have three iris species :\n \n - Iris-setosa : generally grows in Alaska,Maine,Canada,Russia,China,Korea and Japan (in a word it grows near Arctic Ocean)\n - Iris-versicolor : it is endemic in North America.\n - Iris-virginica : generally grows in land that from America to Georgia ","73955abd":"As you can see in heatmap:\n * Sepal Length and Sepal Width has a negative correlation,\n * Petal Length and Petal Width has a positive correlation,\n\nIf we crosscheck petal and sepal feature : \n * Sepal Length and Petal Length has a positive correlation\n * Sepal Width and Petal Width has a negative correlation\n * Sepal Length and Petal Width has a positive correlation\n * Sepal Width and Petal Petal Length has a negative correlation","7707d3b6":"<a id=\"13\"><\/a>\n## Petal Length vs Petal Width","d206dc5f":"<a id = \"1\"><\/a>\n# Load and Check Data","24b60340":"Maybe for getting better prediction accuracy,we can also try polynomial linear regression model.","dea96d1b":"<a id=\"14\"><\/a>\n## Sepal Length vs Species","7955129e":"Visualizing Categorical Variable","5b68ef00":"For Iris Setosa:\n\n  - Distribution of Petal Length is between 1 cm - 2 cm\n  - Distribuiton of Petal Width is between 0.1 cm - 0.6 cm\n\nFor Iris Versicolor:\n\n  - Distribution of Petal Length is between 3.5 cm - 5 cm\n  - Distribuiton of Petal Width is between 1 cm - 1.8 cm\n\nFor Iris Virginica:\n\n  - Distribution of Petal Length is between 4.5 cm - 7 cm\n  - Distribuiton of Petal Width is between 1.4 cm - 2.4 cm","388f20cb":"<a id=\"18\"><\/a>\n# Machine Learning","666ff4e5":"<a id =\"4\"><\/a>\n## Categorical Variable","7fb8a053":"As you can see in heatmap,Sepal Length and Sepal Width has a negative correlation.\n\nAlso Petal Length ana Petal Width has a positive and high correlation\n\nFor better accuracy, we use these Petal features.\n","591d25d3":"We can show the distribution of features with violin plot.","ada54756":"<a id=\"9\"><\/a>\n## Find Missing Value","d6697c4a":"<a id=\"15\"><\/a>\n## Sepal Width vs Species","03417474":"As you can see iris-virginica has a larger petal width on average than other species.\n\n\nIf we look at the results of basic data analysis, we can say that iris-virginica has the largest spcies on according to average values of features. ","a67e03c1":"Let's look at correlation between features","082f4d3d":"<a id=\"2\"><\/a>\n# Variable Description\n\n1. Id : ID\n2. SepalLengthCm : length of sepal leaf that under petal leaf.Sepal is the green leaves.\n3. SepalWidthCm : width of sepal leaf that under petal leaf.\n4. PetalLengthCm : length of petal leaf. Petal is the leaves that the colored leafs when you look at the iris flower.\n5. PetalWidthCm : width of petal leaf.\n6. Species : species of iris flower.","41fb50ec":"As you can see, iris-setosa has a larger sepal width on average than other species.","9b77e9df":"# INTRODUCTION\n\n   Iris is a genus of 260\u2013300 species of flowering plants with showy flowers. \n\n   It takes its name from the Greek word for a rainbow, which is also the name for the Greek goddess of the rainbow, Iris. \n   \n   Some authors state that the name refers to the wide variety of flower colors found among the many species.\n\n   As well as being the scientific name, iris is also widely used as a common name for all Iris species, as well as some belonging to other closely related genera.\n   \n   After a little information of iris, let's see notebooks content.\n   \n   Content:\n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missing Value](#9)\n6. [Exploratory Data Analysis with Visualization](#10)\n    * [Correlation Between Features](#11)\n    * [Sepal Length vs Sepal Width](#12)\n    * [Petal Length vs Petal Width](#13)\n    * [Sepal Length vs Species](#14)\n    * [Sepal Width vs Species](#15)\n    * [Petal Length vs Species](#16)\n    * [Petal Width vs Species](#17)\n7. [Machine Learning](#18)\n    * [Linear Regression](#19)\n    * [Polynomial Linear Regression](#20)\n    * [Decision Tree Regression](#21)\n    * [Random Forest Regression](#22)\n8. [Conclusion](#23)","56b863b0":"In this kernel:\n\n* We've made exploratory data analysis with Iris Species data.\n* We've use four features of data : Sepal Length, Sepal Width,Petal Length, Petal Width\n* Using scatter plot and violin plot, we've tried to see distribution of features' value for each species.\n* At the end, we've tried to predict petal width according to petal length,with using four regression model\n* We've found r2_score accuracy such as 0.92 for linear regression,0.92 for polynomial linear regression, 0.95 for decision tree regression, 0.95 for random forest regression\n* All of four regression, we couldn't pass 0.95 r2_score.Because of this results,we've learnt that we have to try other machine learning algorithms for better prediction accuracy.\n\nI hope that you can find my notebook exploratory and good.\n\nStay healthy..Stay safe..","788fdae3":"We've seen sepal length of species in scatter plot above, and we could have said that distribution of Sepal Length for Iris-setosa is between 4.5 cm - 5.5 cm, distribution of Sepal Length for Iris-versicolor is between 5.5 cm - 6.5 cm, distribution of Sepal Length for Iris-virginica is between 6 cm - 7.5 cm.\n\nWhen we look at the violin plot,we can see distributions more clearly than scatter plot,as you can see too.\n   \n","102ea6f8":"Maybe for getting better prediction accuracy,we can also try decision tree regression model.","7bf5fb1b":"<a id=\"20\"><\/a>\n## Polynomial Linear Regression","7eb3c0c5":"<a id=\"21\"><\/a>\n## Decision Tree Regression","01be8974":"<a id=\"8\"><\/a>\n# Missing Value","5bb05d6c":"As you can see, if we search data for missing value,we can see that there is no missing value in Iris data.","2e5782c7":"<a id=\"12\"><\/a>\n## Sepal Length vs Sepal Width","905c16cf":"<a id=\"22\"><\/a>\n## Random Forest Regression","7e69d1d0":"We've seen sepal width of species in scatter plot above, and we could have said that distribuiton of Petal Width for Iris-setosa is between 0.1 cm - 0.6 cm, distribuiton of Petal Width for Iris-versicolor is between 1 cm - 1.8 cm, distribuiton of Petal Width for Iris-virginica is between 1.4 cm - 2.4 cm.\n\nWhen we look at the violin plot,we can see distributions more clearly than scatter plot,as you can see too.","974563ad":"Maybe for getting better prediction accuracy,we can also try random forest regression model.","2e711e17":"<a id = \"3\"><\/a>\n# Univariate Variable Analysis\n\n* Categorical Variable : Species\n* Numerical Variable : SepalLengthCm,SepalWidthCm,PetalLengthCm,PetalWidthCm","0afbda5d":"We've seen sepal width of species in scatter plot above, and we could have said that distribution of Petal Length for Iris-setosa is between 1 cm - 2 cm, distribution of Petal Length for Iris-versicolor is between 3.5 cm - 5 cm, distribution of Petal Length for Iris-virginica is between 4.5 cm - 7 cm\n\nWhen we look at the violin plot,we can see distributions more clearly than scatter plot,as you can see too.","f42c5b67":"<a id=\"7\"><\/a>\n# Outlier Detection","42851c4e":"As you can see, iris-virginica has a larger sepal length on average than other species.","e8eef76a":"<a id=\"19\"><\/a>\n## Linear Regression","7540bd1e":"<a id=\"11\"><\/a>\n## Correlation Between Features","6da1b7cb":"<a id=\"6\"><\/a>\n# Basic Data Analysis\n* Sepal Length - iris-setosa \/ iris-versicolor \/ iris-virginica\n* Sepal Width - iris-setosa \/ iris-versicolor \/ iris-virginica\n* Petal Length  - iris-setosa \/ iris-versicolor \/ iris-virginica\n* Petal Width - iris-setosa \/ iris-versicolor \/ iris-virginica","646e0527":"<a id=\"10\"><\/a>\n# Exploratory Data Analysis with Visualization","5fc6297f":"As you can see, iris-virginica has a larger petal length on average than other species","6629043b":"We've seen sepal width of species in scatter plot above, and we could have said that distribuiton of Sepal Width for Iris-setosa is between 3 cm - 4 cm, distribuiton of Sepal Width for Iris-versicolor is between 2.2 cm - 3.2 cm, distribuiton of Sepal Width for Iris-virginica is between 2.4 cm - 3.4 cm.\n\nWhen we look at the violin plot,we can see distributions more clearly than scatter plot,as you can see too.","d70ef668":" As you can see in the bar plot, each species in data have equal number of values.","298f56a0":"For Iris Setosa:\n\n  - Distribution of Sepal Length is between 4.5 cm - 5.5 cm\n  - Distribuiton of Sepal Width is between 3 cm - 4 cm\n\nFor Iris Versicolor:\n\n  - Distribution of Sepal Length is between 5.5 cm - 6.5 cm\n  - Distribuiton of Sepal Width is between 2.2 cm - 3.2 cm\n\nFor Iris Virginica:\n\n  - Distribution of Sepal Length is between 6 cm - 7.5 cm\n  - Distribuiton of Sepal Width is between 2.4 cm - 3.4 cm","5b62d14d":"<a id=\"23\"><\/a>\n# Conclusion","bc7d6ac0":"In the data we have 50 values per each species.","9d0a7061":"<a id=\"16\"><\/a>\n## Petal Length vs Species"}}