{"cell_type":{"35f0b6af":"code","9ffb5068":"code","271654d7":"code","0443c283":"code","ed66c6a8":"code","2076b3eb":"code","26085fb1":"code","2204002a":"code","c0e06a82":"code","da3ccd4c":"code","03ac09e0":"markdown","3e23dd6e":"markdown","8866ea83":"markdown","5a21be5b":"markdown","7e5492d2":"markdown"},"source":{"35f0b6af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ffb5068":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","271654d7":"print(train.shape)\ntrain.info()","0443c283":"print(train['Cabin'].isnull().sum()) #Most of the Entries in the Cabin is NULL so it is not that useful for the model.\nprint(train['Sex'].value_counts())   #We can also encode male->0 and female->1","ed66c6a8":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","2076b3eb":"print(test.shape)\ntest.info()","26085fb1":"women = train.loc[train.Sex == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint(\"The % of women that survived are : \", rate_women*100)","2204002a":"men = train.loc[train.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint(\"The % of men that survived are : \", rate_men*100)","c0e06a82":"from sklearn.ensemble import RandomForestClassifier\n\nfeatures = ['Pclass','Sex','SibSp','Parch']\nx = pd.get_dummies(train[features])  #Converting categorical values into dummy int values \ny = train['Survived'] \nX = pd.get_dummies(test[features])\n\nmodel = RandomForestClassifier(n_estimators=100,max_depth=3,random_state=2)\nmodel.fit(x,y)\n\nresult = model.predict(X)\nresult\n","da3ccd4c":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': result})\noutput.to_csv('My_submission.csv',index=False)\n","03ac09e0":"# Looks for Pattern in Train ","3e23dd6e":"# Train Dataset\n","8866ea83":"# Store Output in CSV ","5a21be5b":"# Model - Random Forest ","7e5492d2":"# Test Dataset"}}