{"cell_type":{"66423a0c":"code","97b95b5d":"code","0f6a4d62":"code","3602d83b":"code","4b15e4a5":"code","8d7804cb":"code","4602119f":"code","650a03ad":"code","fb32e2b1":"code","10e55630":"code","bf720d82":"code","5f89f779":"code","cea50038":"code","99819f2c":"code","8c2e269e":"code","448a0a33":"code","ba660d98":"code","c1a1b7f8":"code","7b0791e1":"code","d7bc4d6f":"code","deec69b7":"code","fa31a3c5":"code","baa29d17":"code","d0902567":"code","3bd1ff80":"code","68b681e7":"code","38458972":"code","791ae69f":"code","93a61af4":"code","87336500":"code","ff3d09e3":"code","fd91b204":"code","3c52dbb9":"code","4e89aa85":"code","4803bda8":"markdown","2efd677f":"markdown","88e4be67":"markdown","bc91112a":"markdown","5fc02614":"markdown","805fa742":"markdown","81b7c320":"markdown","8b8a8fec":"markdown","cc1135b7":"markdown","684c9fd7":"markdown","75e9fc47":"markdown"},"source":{"66423a0c":"#preamble\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","97b95b5d":"#load modules\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate\nimport os\nimport pandas as pd","0f6a4d62":"#let's start with bs = 16\n bs = 16   ","3602d83b":"#file paths\nprint('files in folder',os.listdir(\"..\/input\/covid-chest-xray\/\"))\npath=\"..\/input\/covid-chest-xray\/\"\npath_anno=path + 'annotations\/'\npath_img=path + 'images\/'\nprint('annotation directory:',path_anno,'\\nimage directory',path_img)","4b15e4a5":"fnames=get_image_files(path_img)\nfnames[:5]","8d7804cb":"#explore the data and filter the images we want\nmetadf=pd.read_csv(path + 'metadata.csv' )\nprint(metadf.columns)\nmetadf.head()","4602119f":"#let's see how many of each different type of scan we have \nmetadf.groupby(['modality','view']).describe()","650a03ad":"xray_PA_fnames=path_img + metadf[(metadf.modality=='X-ray')&(metadf.view=='PA')].filename\nlabels=metadf[(metadf.modality=='X-ray')&(metadf.view=='PA')].finding\nmetadf[(metadf.modality=='X-ray')&(metadf.view=='PA')].groupby('finding').describe()","fb32e2b1":"class_labels=labels.copy()\nclass_labels.replace(to_replace=['COVID-19','ARDS','COVID-19, ARDS'], value='COVID_ARDS',inplace=True)\nclass_labels.replace(class_labels[class_labels!='COVID_ARDS'],value='Other',inplace=True)\nclass_labels.unique()","10e55630":"data = ImageDataBunch.from_lists(path_img, xray_PA_fnames, labels=class_labels, ds_tfms=get_transforms(), \n                                 size=224, bs=bs).normalize(imagenet_stats)\n\ndata.show_batch(rows=4, figsize=(15,11))","bf720d82":"print(data.classes)\nlen(data.classes),data.c","5f89f779":"data","cea50038":"learn=cnn_learner(data, models.resnet34, metrics=accuracy)\nlearn.model","99819f2c":"learn.fit_one_cycle(4)","8c2e269e":"learn.model_dir='\/kaggle\/working\/'\nlearn.save('stage-1')","448a0a33":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","ba660d98":"interp.plot_top_losses(9, figsize=(15,11))","c1a1b7f8":"interp.plot_confusion_matrix(figsize=(10,10), dpi=100)","7b0791e1":"interp.most_confused(min_val=2)","d7bc4d6f":"learn.unfreeze()","deec69b7":"learn.fit_one_cycle(1)","fa31a3c5":"learn.load('stage-1')","baa29d17":"learn.lr_find()","d0902567":"learn.recorder.plot()","3bd1ff80":"learn.fit_one_cycle(2, max_lr=slice(3e-5,3e-4))","68b681e7":"data = ImageDataBunch.from_lists(path_img, xray_PA_fnames, labels=class_labels, ds_tfms=get_transforms(), \n                                 size=224, bs=bs).normalize(imagenet_stats)\nlearn = cnn_learner(data, models.resnet50, metrics=accuracy)","38458972":"learn.model_dir='\/kaggle\/working\/'\nlearn.lr_find()\nlearn.recorder.plot()","791ae69f":"learn.fit_one_cycle(10)","93a61af4":"learn.save('stage-1-50')","87336500":"learn.load('stage-1-50')","ff3d09e3":"learn.unfreeze()\nlearn.fit_one_cycle(3, max_lr=slice(3e-5,3e-4))","fd91b204":"learn.load('stage-1-50')","3c52dbb9":"interp = ClassificationInterpretation.from_learner(learn)","4e89aa85":"interp.plot_confusion_matrix(figsize=(10,10), dpi=100)","4803bda8":"### Make the databunch and visualize","2efd677f":"### Train the model","88e4be67":"### Unfreezing, fine-tuning, and learning rates\nOur model is somewhat working as we expect. Let's train the model some more. ","bc91112a":"### To give a consistent view to our machine learning algorithm, let's do just X-rays with a PA view.\n\nPA stands for back (Posterior) to front (Anterior) \n\nThis next cell gives us all the file names, which is what we set out to do with this data filtering step.\n\nAlso, let's get the labels associated with these xrays, and count up how many we have of each case.","5fc02614":"### Results","805fa742":"### Conclusion\nThere is a little bit less confusion with resnet50. But overall, the network at this stage can classify COVID_ARDS the majority of the time, but not to a level that would be satisfactory for clinical implementation.\n\nPossible areas of improvement: \n* supplement this with more images in the \"Other\" category to balance the representatives in the training and validation sets\n* at least one image is mislabeled (not a PA view); check for others \n* subject matter expertise would be helpful to understand what features are unique to COVID_ARDS vs. the other categories. in other words, is it reasonable for any network to do better than this, and what are the features we would expect it to find ","81b7c320":"### Data Description\nBrowsing through the [COVID Chest Xray data preview on the Kaggle page](https:\/\/www.kaggle.com\/bachrr\/covid-chest-xray), I noticed there are coronal and axial scans in this dataset. \n\nSee: https:\/\/en.wikipedia.org\/wiki\/Anatomical_plane\n\nLet's just look at the coronal X ray images. \n\nFirst, we'll look at the metadata file to filter out the images we don't want. \nBy the end of this next few blocks, we'll have a list of only the image files of interest. ","8b8a8fec":"### The majority of images in this database are of COVID-19 patients. \n\nPlus, we can expect there could be an issue with distinguishing COVID-19 from Acute Respiratory Disease Syndrome (ARDS). There is some debate in the medical community currently whether COVID-19 presents as ARDS or if the symptoms currently being classified as ARDS in association with COVID-19 is a unique illness. \n\nWith that in mind, let's train the neural network to distinguish between {ARDS, COVID-19, COVID-19,ARDS} vs everything else. \n\nAs I make my databunch, I'm going to change the labels so that it reflects the two classes that I want to train: \"COVID_ARDS\" and \"Other\"","cc1135b7":"### The goal of this notebook is to train a learning algorithm to classify COVID vs. non-COVID lung X-rays using fastai for PyTorch. It is an adaptation of [Lesson 1](https:\/\/github.com\/fastai\/course-v3\/blob\/master\/nbs\/dl1\/lesson1-pets.ipynb) in the fast.ai course.  ","684c9fd7":"The error rate has stabilized. Given this network, these parameters, and dataset, perhaps that is the best it will do. ","75e9fc47":"### Let's try training with resnet50\nto achieve better performance"}}