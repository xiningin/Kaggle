{"cell_type":{"4efc2163":"code","85c0da2b":"code","5245380a":"code","f97fe36e":"code","c5a1873a":"code","6d0cf28f":"code","7735dccb":"code","837a51c1":"code","8e0ed3ed":"code","5003c232":"code","78d3f547":"code","a8d3fe94":"code","2af1dede":"code","67f02c21":"code","29a898d8":"code","119e5f45":"code","9f1a8e1e":"code","5352eefb":"code","dd1bb51a":"code","a59b329d":"code","62f182ec":"code","12f01e6f":"code","1d034026":"code","703779f4":"code","b4a2f7fe":"code","baf86381":"code","b107783c":"code","62365ffe":"code","284d3bf6":"code","d9e85b32":"code","d8fe965f":"code","eb97c9bc":"code","816d094b":"code","9b62c346":"code","93c58143":"code","e293416d":"code","6fd5d29b":"code","93c79a69":"code","b00388c5":"code","4d9d538d":"code","454e9376":"code","a0e8bbb3":"markdown"},"source":{"4efc2163":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))","85c0da2b":"from sklearn import preprocessing\nimport xgboost as xgb","5245380a":"train_transaction = pd.read_csv('..\/input\/train_transaction.csv', index_col='TransactionID')\ntest_transaction = pd.read_csv('..\/input\/test_transaction.csv', index_col='TransactionID')\n\ntrain_identity = pd.read_csv('..\/input\/train_identity.csv', index_col='TransactionID')\ntest_identity = pd.read_csv('..\/input\/test_identity.csv', index_col='TransactionID')\n\nsample_submission = pd.read_csv('..\/input\/sample_submission.csv', index_col='TransactionID')","f97fe36e":"train = train_transaction.merge(train_identity, how='left', left_index=True, right_index=True)\ntest = test_transaction.merge(test_identity, how='left', left_index=True, right_index=True)\n\nprint(train.shape)\nprint(test.shape)","c5a1873a":"train.head()","6d0cf28f":"train.shape\ndel train_transaction, train_identity, test_identity, test_transaction","7735dccb":"pd.DataFrame(train.dtypes)","837a51c1":"filter_col = [col for col in train if col.startswith(('addr', 'M', 'card', 'id_1', 'id_2', 'id_3'))]","8e0ed3ed":"filter_col","5003c232":"train[filter_col] = train[filter_col].astype('category')","78d3f547":"# convert_dict = {\n#     'DeviceType': \"category\",\n#     'DeviceInfo': \"category\",\n#     'ProductCD': \"category\",\n#     'P_emaildomain':\"category\",\n#     'R_emaildomain':\"category\",\n#     'isFraud':\"category\",\n#     'id_10': 'float',\n#     'id_11': 'float'\n# }\nconvert_dict = {\n    'DeviceType': \"category\",\n    'DeviceInfo': \"category\",\n    'ProductCD': \"category\",\n    'P_emaildomain':\"category\",\n    'R_emaildomain':\"category\",\n    'isFraud': \"float\",\n    'id_10': 'float',\n    'id_11': 'float'\n}","a8d3fe94":"tr = train.astype(convert_dict)","2af1dede":"pd.DataFrame(tr.dtypes)","67f02c21":"# All Numeric Cols only\nnum_tr_ = tr._get_numeric_data()\nnum_tr_.shape","29a898d8":"pd.set_option('display.float_format', lambda x: '%.3f' % x)\nmean_summary = num_tr_.groupby(['isFraud']).mean().transpose()","119e5f45":"mean_summary.head()","9f1a8e1e":"mean_summary['times_fraud'] = mean_summary[mean_summary.columns[1]]\/mean_summary[mean_summary.columns[0]]","5352eefb":"print(mean_summary.shape)\nmean_summary.head()","dd1bb51a":"filtr = mean_summary.loc[mean_summary['times_fraud'] > 2]\nprint(filtr.shape)\nfiltr.sort_values('times_fraud', ascending = False)","a59b329d":"# convert is fraud to category\ntr['isFraud'] = tr.isFraud.astype('category')\ntr_fraud_ = tr.loc[tr['isFraud'] == 1]\ntr_notfraud_ = tr.loc[tr['isFraud'] == 0]","62f182ec":"from IPython.display import display_html\ndef display_side_by_side(*args):\n    html_str=''\n    for df in args:\n        html_str+=df.to_html()\n    display_html(html_str.replace('table','table style=\"display:inline\"'),raw=True)\n\n    # tr_fraud_.describe(include=['category']).transpose()\n    \ndisplay_side_by_side(tr_notfraud_.describe(include=['category']).transpose(), tr_fraud_.describe(include=['category']).transpose())","12f01e6f":"tr['id_10'].plot.box(vert = False)","1d034026":"tr.boxplot(by='isFraud', column = ['V147', 'V146'], vert = False)","703779f4":"tr.plot.scatter(x = 'V147', y = 'V146', c = 'isFraud')","b4a2f7fe":"short_tr = tr.head(1000)","baf86381":"import matplotlib.pyplot as plt\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 15, 10\nplt.figure();\nbp_ = tr.boxplot(by='isFraud', column = ['id_10', 'id_11'], vert = False)","b107783c":"tr['isFraud'].value_counts().plot.bar()","62365ffe":"short_tr.plot.scatter(x='id_11', y='id_10', c = 'id_01');","284d3bf6":"short_tr['id_01'].plot.kde()","d9e85b32":"from pandas.plotting import parallel_coordinates","d8fe965f":"shrt_ = short_tr[['isFraud', 'TransactionDT', 'TransactionAmt', 'V147']]","eb97c9bc":"shrt_.nunique()\nshrt_.shape","816d094b":"fraud_shrt_ = shrt_[shrt_.isFraud == 1]\nprint(fraud_shrt_.shape)\n# print(fraud_shrt_.isna().sum())\n# print(fraud_shrt_.dropna().isna().sum())\nfraud_shrt_ = fraud_shrt_.dropna()\nprint(fraud_shrt_.shape)\n# print(fraud_shrt_.dropna().isna().sum())","9b62c346":"fdad_long = train[['isFraud', 'TransactionDT', 'TransactionAmt', 'dist1']]\nfdad_long_fraud_only = fdad_long[fdad_long.isFraud == 1]\nprint(fdad_long.shape)\nprint(fdad_long_fraud_only.shape)","93c58143":"print(fraud_shrt_.shape)\nfraud_shrt_","e293416d":"plt.figure()\nparallel_coordinates(shrt_, 'isFraud', color = 'gr')","6fd5d29b":"plt.figure()\nparallel_coordinates(fraud_shrt_, 'isFraud', color = 'r')","93c79a69":"plt.figure()\nparallel_coordinates(fdad_long_fraud_only, 'isFraud', color = 'r')","b00388c5":"from pandas.plotting import radviz\nradviz(shrt_, 'isFraud', color = 'gr')","4d9d538d":"radviz(fraud_shrt_, 'isFraud', color = 'r')","454e9376":"radviz(fdad_long_fraud_only, 'isFraud', color = 'r')","a0e8bbb3":"Summary Statistics"}}