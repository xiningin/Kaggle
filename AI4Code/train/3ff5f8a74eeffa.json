{"cell_type":{"728d7051":"code","db3f5e9a":"code","8dc8e345":"code","95f56114":"code","debb837f":"code","1288055a":"code","1ec47a8d":"code","a3592862":"code","90e25945":"code","5a370e93":"code","4259ff49":"code","283069e1":"code","fdde5fab":"code","5fd21453":"code","052fa8c8":"code","a396001d":"markdown","a162c5bd":"markdown","e9c3df25":"markdown","baf4ba5d":"markdown","20c038b6":"markdown","3d1aa351":"markdown","bd38f168":"markdown","6fb0eea4":"markdown","f21a7ddf":"markdown","c45ef9f1":"markdown","c002b91c":"markdown","65eaff1c":"markdown","6543ed98":"markdown","eeb53650":"markdown"},"source":{"728d7051":"from sklearn.datasets import load_digits\ndigits = load_digits()","db3f5e9a":"digits.data.shape","8dc8e345":"digits.target.shape","95f56114":"import numpy as np\nimport matplotlib.pyplot as plt\n\n\nplt.figure(figsize=(16,9))\nfor index, (image, label) in enumerate(zip(digits.data[0:5],digits.target[0:5])):\n    plt.subplot(1,5, index + 1)\n    plt.imshow(np.reshape(image, (8,8)), cmap = plt.cm.gray)\n    plt.title('Training: %i\\n' % label, fontsize = 18)","debb837f":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(digits.data, digits.target,\n                                                    test_size=0.25, random_state=0)","1288055a":"from sklearn.linear_model import LogisticRegression","1ec47a8d":"log_reg = LogisticRegression()","a3592862":"log_reg.fit(x_train,y_train)","90e25945":"log_reg.predict(x_test[0:10])","5a370e93":"# make prediction on entire data\nprediction = log_reg.predict(x_test)","4259ff49":"# use score method to get accuracy of model\nscore = log_reg.score(x_test,y_test)\nprint(score)","283069e1":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import metrics \nfrom past.builtins import xrange","fdde5fab":"cm = metrics.confusion_matrix(y_test, prediction)\nprint(cm)","5fd21453":"plt.figure(figsize=(16,9))\nsns.heatmap(cm, annot=True, fmt='.3f', linewidths=.5, square=True, cmap= 'Oranges_r')\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')\nall_sample_title = 'Accuracy Score : {0}'.format(score)\nplt.title(all_sample_title, size = 15)","052fa8c8":"plt.figure(figsize=(16,9))\nplt.imshow(cm, interpolation='nearest', cmap='Pastel1')\nplt.title('Confusion matrix', size= 15)\nplt.colorbar()\ntick_marks = np.arange(10)\nplt.xticks(tick_marks, [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], rotation=45, size = 10)\nplt.yticks(tick_marks, [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], size = 10)\nplt.tight_layout()\nplt.ylabel('Actual label', size = 15)\nplt.xlabel('Predicted label', size = 15)\nwidth, height = cm.shape\nfor x in xrange(width):\n    for y in xrange(height):\n        plt.annotate(str(cm[x][y]), xy=(y, x),\n        horizontalalignment='center',\n        verticalalignment='center')","a396001d":"### Step 3: Train the model","a162c5bd":"## Measuring Model Performance (Digits Dataset)","e9c3df25":"**Our accuracy was 95.3% .**","baf4ba5d":"## Confusion Matrix (Digits Dataset)\n\nA confusion matrix is a table that is often used to describe the performance of a classification model (or \u201cclassifier\u201d) on a set of test data for which the true values are known.","20c038b6":"### Step 2: Make an instance of the model","3d1aa351":"## Matplotlib","bd38f168":"## 4-steps Digits Dataset Modeling Pattern[](http:\/\/)","6fb0eea4":"### Step 4:Predicit Labels for new data","f21a7ddf":"## Showing the Images and the Labels (Digits Dataset)\n\nshowing what the images and labels look like.It usually helps to visualize data","c45ef9f1":"### Step 1: Import the model","c002b91c":"## Seaborn","65eaff1c":"We load the dataset properly","6543ed98":"## Splitting Data into Training and Test Sets (Digits Dataset)\n\nMake training and test sets to make sure that after we train our classification algorithm, it is able to generalize well to new data.","eeb53650":"The digits dataset is one of datasets scikit-learn comes with that do not require the downloading of any file from external website. the code below will load the digits dtatset."}}