{"cell_type":{"61906e23":"code","f2c506ca":"code","d73d0921":"code","048194f1":"code","431bc51c":"code","ea64efd7":"code","4867628c":"code","33a33aab":"code","66ef0f31":"code","3c12507e":"markdown","29cea635":"markdown","3028a324":"markdown","56f90fcf":"markdown","f297d3c1":"markdown"},"source":{"61906e23":"import numpy as np\nimport pandas as pd","f2c506ca":"data = pd.read_csv('..\/input\/reviews.csv', delimiter=',')","d73d0921":"def func(x):\n    if x == 'True':\n        return 1.0\n    if x == 'False':\n        return 0.0\n\ndata['Recommends'] = data['Recommends'].apply(func)","048194f1":"def is_good(review, recommends):\n    if recommends == 1.0 or review > 3:\n        return 1\n    return 0\n\ndata['Good'] = list(map(is_good, data['Review'], data['Recommends']))","431bc51c":"from sklearn import model_selection\n\nfeatures_train, features_test, labels_train, labels_test = model_selection.train_test_split(data['Review Text'], data['Good'], test_size=0.1, random_state=42)","ea64efd7":"from sklearn.feature_extraction.text import TfidfVectorizer\n\nvectorizer = TfidfVectorizer(sublinear_tf=True, max_df=0.5, ngram_range=(1,3), stop_words='english')\n\nfeatures_train = vectorizer.fit_transform(features_train)\nfeatures_test  = vectorizer.transform(features_test)","4867628c":"from sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier(n_estimators=100, n_jobs=5)\nclf.fit(features_train, labels_train)","33a33aab":"pred = clf.predict(features_test)","66ef0f31":"from sklearn.metrics import accuracy_score\n\naccuracy_score(labels_test, pred)","3c12507e":"## Converting into numeric values","29cea635":"## Splitting the training and testing data","3028a324":"## Reading the file","56f90fcf":"## TD-IDF","f297d3c1":"## Populating an artifical Good column\n\nIf a restaurant is recommended or the review is more than 3, then it is considered a good restaurant. This feature was created to simplify the classification problem into a binary classification problem."}}