{"cell_type":{"b1f000b6":"code","d820a9bc":"code","08f7e5ce":"code","68a008d1":"code","370075f8":"code","54601420":"code","32155dc2":"code","4e5f2814":"code","1d0f94d4":"code","45b19b91":"code","b8c530a0":"code","af9282b6":"code","82356379":"code","12e7b154":"markdown","6e9a8648":"markdown","74576824":"markdown","775ba3fb":"markdown","d42b0314":"markdown","39ae295d":"markdown","dba2576f":"markdown","7ac1f994":"markdown"},"source":{"b1f000b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix,f1_score,accuracy_score\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d820a9bc":"diadf=pd.read_csv('..\/input\/diabetes.csv')\n#print(len(diadf))\ndiadf.head()","08f7e5ce":"diadf.isna().sum()","68a008d1":"#Replace zeroes\nzero_not_accepted=['Glucose','BloodPressure','SkinThickness','BMI','Insulin']\nfor column in zero_not_accepted:\n    diadf[column]=diadf[column].replace(0,np.NaN)\n    mean=int(diadf[column].mean(skipna=True))\n    diadf[column]=diadf[column].replace(np.NaN,mean)","370075f8":"X=diadf.iloc[:,0:8]\ny=diadf.iloc[:,8]\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.2)\n","54601420":"sc_X=StandardScaler()\nX_train=sc_X.fit_transform(X_train)\nX_test=sc_X.transform(X_test)","32155dc2":"import math\nmath.sqrt(len(y_test))","4e5f2814":"#Define the model: Init K-NN\nclassifier=KNeighborsClassifier(n_neighbors=11,p=2,metric='euclidean')","1d0f94d4":"#fit the model\nclassifier.fit(X_train,y_train)","45b19b91":"#predict the test set results\ny_pred=classifier.predict(X_test)\ny_pred","b8c530a0":"#evaluate the model\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","af9282b6":"print(f1_score(y_test,y_pred))","82356379":"print(accuracy_score(y_test,y_pred))","12e7b154":"Evaluate the model, use Confusion Matrix","6e9a8648":"Columns like 'Glucose','bloodpressure' cannot be accepted as zeroes because it will affect the outcomes. We can replace such values with the mean of the respective columns.","74576824":"Since we got even number as 12 we will reduce 1 and use k=11","775ba3fb":"Split the Dataset.","d42b0314":"Libraries:\ntrain_test_split --> For splitting the data. Part of it for Training the model and other for Testing how good it is.\nPreprocessing --> To do the scaling using standardScaler as there should not be any bias\nNeighbors --> We will be using KNeighborsClassifier\nMetrics --> For Testing the model","39ae295d":"Define the model using KNeighborsClassifier and fit the train data in the model.","dba2576f":"**Objective: KNN - Predict whether a person will be diagnosed with Diabetes or not.****","7ac1f994":"**Feature scaling**\nWe scale only the data which is going in (i.e.,)Independent data.\nWe dont need to scale Target variable"}}