{"cell_type":{"9fd1c88e":"code","1b06b880":"code","abb34f55":"code","0b6dd178":"code","cee8f470":"code","4de45a4f":"code","bf30314b":"code","9edd9204":"code","77c2d7fc":"code","b13817ca":"code","9ed3e73f":"code","d9fef93a":"code","1f1a274b":"code","a3a5ebc2":"code","5ae9b02c":"code","4a465a40":"code","7130afa2":"code","f9f4ba72":"code","3164d633":"markdown","d68a143b":"markdown","bc988721":"markdown","d375649b":"markdown","0770e03e":"markdown","ce98446c":"markdown"},"source":{"9fd1c88e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b06b880":"#import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression","abb34f55":"#import the dataset\ndata = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndata.head()","0b6dd178":"data.shape","cee8f470":"# the predictor variables\ndata_features = ['ssc_p','hsc_p']\nX = data[data_features]","4de45a4f":"#the response variable\ny = data.mba_p","bf30314b":"model = LinearRegression()\nmodel.fit(X,y)\nr2 = model.score(X,y)","9edd9204":"#print the coefficients\nprint(f'alpha = {model.intercept_}')\nprint(f'Betas = {model.coef_}')","77c2d7fc":"import statsmodels.api as sm\nmod = sm.OLS(y,X)\nfitmodel = mod.fit()\nfitmodel.pvalues","b13817ca":"data_features_1 = ['ssc_p','degree_p']\nX1 = data[data_features_1]\ndata_features_2 = ['hsc_p','degree_p']\nX2 = data[data_features_2]","9ed3e73f":"#fitting the model\nMR = model.fit(X1,y)\nMR2 = model.fit(X2,y)\nr2_MR = model.score(X1,y)\nr2_MR2 = model.score(X2,y)\nprint(r2, r2_MR, r2_MR2)","d9fef93a":"data_features_3 = ['ssc_p','hsc_p','degree_p']\nX3 = data[data_features_3]","1f1a274b":"train_X, test_X, train_y, test_y = train_test_split(X3, y, test_size=0.2, random_state=1)","a3a5ebc2":"model.fit(train_X, train_y)","5ae9b02c":"print(f'alpha = {model.intercept_}')\nprint(f'betas = {model.coef_}')","4a465a40":"mod2 = sm.OLS(train_y,train_X)\nfitmodel2 = mod2.fit()\nfitmodel2.pvalues","7130afa2":"data_features_3 = ['hsc_p','degree_p']\nX3 = data[data_features_3]\ntrain_X, test_X, train_y, test_y = train_test_split(X3, y, test_size=0.2, random_state=1)\nmodel.fit(train_X, train_y)","f9f4ba72":"pred = model.predict(test_X)\nresult = pd.DataFrame({'Actual': test_y, 'Predicted': pred})\nresult.head()","3164d633":"The p-value for `ssc_p` is approximately `0.09`. This is greater than the usual significant level of `0.05`, making it insignificant. \n\nWe therefore, remove `ssc_p` and rebuild the model","d68a143b":"#### Interpreting coefficients\n\n`mba_p = 44.61 + 0.15 ssc_p + 0.11 hsc_p`\n\nThe coefficients show that there is a positive relationship between the response variable and predictor variables. \n\nThe two predictor variables are also statistically significant since their p-values are less than the usual significance level of 0.05.","bc988721":"### Q1.\n\nDevelop an estimated multiple linear regression equation with `mba_p` as response variable and `ssc_p` & `hsc_p` as the two predictor variables. \n\n- Interpret the regression coefficients and check whether they are significant based on the summary output ","d375649b":"### Q3.\n\nShow the functional form of a multiple regression model.\n\n - Build a regression model with `mba_p` as dependent variable and `ssc_p`, `hsc_p` and `degree_p` as three independent variables. \n - Divide the dataset in the ratio of 80:20 for train and test set (set seed as 1001) and use the train set to build the model. \n - Show the model summary and interpret the p-values of the regression coefficients. \n - Remove any insignificant variables and rebuild the model. \n - Use this model for prediction on the test set and show the first few observations\u2019 actual value of the test set in comparison to the predicted value.","0770e03e":"### Q2.\n\nEstimate a multiple regression equation for each of the below scenarios and based on the model\u2019s R-square comment which model is better.\n\n- Use mba_p as outcome variable and ssc_p & degree_p as the two predictor variables.\n\n- Use mba_p as outcome variable and hsc_p & degree_p as the two predictor variables.","ce98446c":"Usually, the larger the $R^2$ value, the better the regression model fits the observations. It stands to reason from $R^2$ values above that, the model fits better to `mba_p` as a response variable and `ssc_p` & `degree_p` as predictor variables"}}