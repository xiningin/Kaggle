{"cell_type":{"55eb406b":"code","544a3e89":"code","20c70724":"code","1de7fb3e":"code","5529d112":"code","9ed400b7":"code","e9eaa673":"code","abd8770d":"code","b0353142":"code","39fc8523":"code","bffec721":"code","bbce03d6":"code","7bd1e7d4":"code","9b3b553b":"code","8ee7eaf0":"code","bf3848c5":"code","44013ed6":"code","6a0e5621":"code","cf8c1156":"code","740e6812":"code","96bc67ca":"code","9c08a4e8":"code","5f1915f3":"code","aa0c5a02":"code","a8f8133f":"code","3ed48eac":"code","c9dc32e4":"code","adabca73":"code","2aa2e0c4":"code","14f3fa81":"markdown"},"source":{"55eb406b":"# Importing the libraries \nimport pandas as pd\nimport numpy as np # data manupulation\nfrom sklearn import metrics #metrics mse rme\nimport matplotlib.pyplot as plt\nimport seaborn as sns #visulization\n%matplotlib inline","544a3e89":"# Importing the Boston Housing dataset\nfrom sklearn.datasets import load_boston #\nboston = load_boston()\n# Initializing the dataframe\ndata = pd.DataFrame(boston.data)\n# See head of the dataset\ndata.head()","20c70724":"#Adding the feature names to the dataframe\ndata.columns = boston.feature_names\ndata.head()","1de7fb3e":"#Adding target variable to dataframe\ndata['PRICE'] = boston.target \n# Median value of owner-occupied homes in $1000s","5529d112":"data.shape","9ed400b7":"data.columns","e9eaa673":"data.dtypes","abd8770d":"# Identifying the unique number of values in the dataset\ndata.nunique()","b0353142":"# Check for missing values\ndata.isnull().sum()","39fc8523":"# See rows with missing values\ndata[data.isnull().any(axis=1)]","bffec721":"# Viewing the data statistics\ndata.describe()","bbce03d6":"# Finding out the correlation between the features\ncorr = data.corr()\ncorr.shape","7bd1e7d4":"# Plotting the heatmap of correlation between features\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, cbar=False, square= True, fmt='.1f', annot=True, annot_kws={'size':10}, cmap='Greens')","9b3b553b":"# Import library for Linear Regression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","8ee7eaf0":"# Spliting target variable and independent variables\nX = data.drop(['PRICE'], axis = 1)\ny = data['PRICE']","bf3848c5":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 42)","44013ed6":"# Create a Linear regressor\nlm = LinearRegression()\n\n# Train the model using the training sets \nlm.fit(X_train, y_train)","6a0e5621":"# Value of y intercept\nlm.intercept_","cf8c1156":"#Converting the coefficient values to a dataframe\ncoeffcients = pd.DataFrame([X_train.columns,lm.coef_]).T\ncoeffcients = coeffcients.rename(columns={0: 'Attribute', 1: 'Coefficients'})\ncoeffcients","740e6812":"# Model prediction on train data\ny_pred= lm.predict(X_train)","96bc67ca":"# Model Evaluation on train data\nprint('R^2:',metrics.r2_score(y_train, y_pred))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_train, y_pred))*(len(y_train)-1)\/(len(y_train)-X_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_train, y_pred))\nprint('MSE:',metrics.mean_squared_error(y_train, y_pred))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_train, y_pred)))","9c08a4e8":"# Model prediction on test data\ny_pred_test= lm.predict(X_test)","5f1915f3":"# Model Evaluation on test data\nprint('R^2:',metrics.r2_score(y_test, y_pred_test))\nprint('Adjusted R^2:',1 - (1-metrics.r2_score(y_test, y_pred_test))*(len(y_test)-1)\/(len(y_test)-X_train.shape[1]-1))\nprint('MAE:',metrics.mean_absolute_error(y_test, y_pred_test))\nprint('MSE:',metrics.mean_squared_error(y_test, y_pred_test))\nprint('RMSE:',np.sqrt(metrics.mean_squared_error(y_test, y_pred_test)))","aa0c5a02":"# Visualizing the differences between actual prices(train data) and predicted values\nplt.scatter(y_train, y_pred)\nplt.xlabel(\"Prices\")\nplt.ylabel(\"Predicted prices\")\nplt.title(\"Prices vs Predicted prices\")\nplt.show()","a8f8133f":"# Visualizing the differences between actual prices(test data) and predicted values\nplt.scatter(y_test, y_pred_test)\nplt.xlabel(\"Prices\")\nplt.ylabel(\"Predicted prices\")\nplt.title(\"Prices vs Predicted prices\")\nplt.show()","3ed48eac":"# Checking residuals train data\nplt.scatter(y_pred,y_train-y_pred)\nplt.title(\"Predicted vs residuals\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Residuals\")\nplt.show()","c9dc32e4":"# Checking residuals test data\nplt.scatter(y_pred_test,y_test-y_pred_test)\nplt.title(\"Predicted vs residuals\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Residuals\")\nplt.show()","adabca73":"# Checking Normality of errors for train data\nsns.distplot(y_train-y_pred)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","2aa2e0c4":"# Checking Normality of errors for test data\nsns.distplot(y_test-y_pred_test)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","14f3fa81":"# Linear Regression"}}