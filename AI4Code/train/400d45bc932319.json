{"cell_type":{"7bfdea5f":"code","82c0bf25":"code","c9a5c0f9":"code","9f991903":"code","417fa6ae":"code","2493e07a":"code","963051e8":"code","b7c3e9b0":"code","2252f45f":"code","c9ab9628":"code","6d6642e4":"code","c2ed84bc":"code","ab733f62":"code","8ed60a43":"code","176d5dcc":"code","fa632060":"code","d416872f":"code","a73bbbd4":"code","a391259f":"code","5e0913c4":"code","ea2b61c0":"code","ba62b997":"code","6ce4f656":"code","d291dd51":"code","98c3b3bc":"code","a716f8b3":"code","e1b2ee10":"code","af71e511":"code","dbfc0001":"code","fba07bf6":"code","0ae857c5":"code","290acf09":"code","579f8218":"code","b3a1a715":"code","f5c51029":"code","43356cae":"code","54f20cf8":"code","e6676583":"code","830d0e1b":"code","ed314a8d":"code","a056ed9a":"code","481204ca":"code","e4b28141":"code","403153d6":"code","b1ec79ce":"code","9b24d5b9":"code","537a76ee":"code","3e6b1f71":"code","0eb975ca":"code","de13eed6":"code","60175e41":"code","69e7e183":"code","6098f8f9":"code","e4af595d":"code","ca19df42":"code","8809edbb":"code","7c2677ba":"code","122e9b29":"code","00598402":"code","e02bfadf":"code","0a8d4ec2":"code","b83123d6":"code","06b37afb":"code","4e9a8705":"code","d5b973c4":"code","05481306":"code","cac61874":"code","1f743506":"code","ef042d8f":"code","5938a411":"code","21285309":"code","985e20b8":"code","be3944f8":"code","2073aa88":"code","7e328336":"code","880f1809":"code","6e93741e":"code","7cc0a439":"code","56a86844":"code","da673ae1":"code","e10dbe8a":"code","df6c2e73":"code","71a11ba7":"code","a8ebc374":"code","ef74b541":"code","2c29886e":"code","32061ec2":"code","b7d9a360":"code","005da752":"code","7ea55a59":"code","86826b99":"code","1058e04f":"code","0f192010":"code","09201c47":"code","8d06bd29":"code","2b06ab3a":"code","3906126d":"code","17fe2bd1":"code","2c4e7f92":"code","e06ef2a9":"code","4a43e94c":"code","c1b3374c":"code","e6a7b191":"code","2d507abe":"code","d0fc06e0":"code","5886315b":"code","3948d22e":"code","a8e399ca":"code","db7201bf":"code","d9c5ec24":"code","fb822116":"code","e55540ba":"code","21adad66":"code","6449807e":"code","1bcae0e4":"code","2dd09e7f":"code","0940ae1d":"code","3f97816f":"code","01f06225":"code","a6858f09":"code","0e6850cd":"code","c21e4184":"code","01e0675b":"code","bce08fd4":"code","42dad456":"code","2fcfb3fd":"code","90d0587a":"code","3409aaf2":"code","b993b4e8":"code","eeac1755":"code","c1e7efea":"code","1dc821b1":"code","07550014":"code","702660ed":"code","8a17fd9b":"code","55b1dc9e":"code","2155e0fe":"code","6a5594ea":"code","7efd2583":"code","a3c0689f":"code","77667fda":"code","c6cb984b":"code","2d62d4e4":"markdown","01b833c7":"markdown","a3ab0a61":"markdown","5f913de7":"markdown","4bac33c7":"markdown","ffe5ab94":"markdown","1f1dc457":"markdown","6308bfdd":"markdown","841111f3":"markdown","b036c5b8":"markdown","39ef6dda":"markdown","d11d8e64":"markdown","58103068":"markdown","a27eae90":"markdown","cf4b7bdf":"markdown","c8ce06c0":"markdown","1b7bfce0":"markdown","ad573be6":"markdown","09b744d3":"markdown","ebebe5f0":"markdown","bdad59ef":"markdown","3af1ab15":"markdown","125e3b1f":"markdown","2dad99e4":"markdown","ef8d7998":"markdown","2d91cbaf":"markdown","f9a26cdf":"markdown","f9c283a4":"markdown","2d4d63df":"markdown","c0b22196":"markdown","05c8fd61":"markdown","0f606eff":"markdown"},"source":{"7bfdea5f":"import datetime\n# ULTIMA EXECUCAO:\nprint(f'ultima execucao: {datetime.datetime.now().strftime(\"%d\/%m\/%Y %H:%M:%S\")}')\n","82c0bf25":"import numpy as np\nimport pandas as pd\nimport itertools    \nimport IPython\nfrom datetime import timedelta\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mtick\nimport matplotlib\nimport bokeh \nfrom bokeh.layouts import gridplot\nfrom bokeh.plotting import figure, show, output_file\nfrom bokeh.layouts import row, column\nfrom bokeh.resources import INLINE\nfrom bokeh.io import output_notebook\nfrom bokeh.models import Span\nfrom bokeh.io import output_notebook\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.graph_objs import *\nplt.style.use('seaborn-darkgrid')\noutput_notebook(resources=INLINE)","c9a5c0f9":"url_confirmados = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv\"\nurl_mortes = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv\"\nurl_recuperados = \"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv\"\ndf_confirmados = pd.read_csv(url_confirmados)\ndf_mortes = pd.read_csv(url_mortes)\ndf_recuperados = pd.read_csv(url_recuperados)","9f991903":"df_confirmados.head()","417fa6ae":"# Separing in locals dataframes\n\ndf_confirmados_brasil = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Brazil'].copy()\ndf_confirmados_italia = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Italy'].copy()\ndf_confirmados_eua = df_confirmados.loc[df_confirmados['Country\/Region'] == 'US'].copy()\ndf_confirmados_suecia = df_confirmados.loc[df_confirmados['Country\/Region'] == 'Sweden'].copy()\n#-----------------------------------------------------------------------------------------------\ndf_mortes_brasil = df_mortes.loc[df_mortes['Country\/Region'] == 'Brazil'].copy()\ndf_mortes_italia = df_mortes.loc[df_mortes['Country\/Region'] == 'Italy'].copy()\ndf_mortes_eua = df_mortes.loc[df_mortes['Country\/Region'] == 'US'].copy()\ndf_mortes_suecia = df_mortes.loc[df_mortes['Country\/Region'] == 'Sweden'].copy()\n#-----------------------------------------------------------------------------------------------\ndf_recuperados_brasil = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Brazil'].copy()\ndf_recuperados_italia = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Italy'].copy()\ndf_recuperados_eua = df_recuperados.loc[df_recuperados['Country\/Region'] == 'US'].copy()\ndf_recuperados_suecia = df_recuperados.loc[df_recuperados['Country\/Region'] == 'Sweden'].copy()","2493e07a":"df_confirmados_brasil.head()","963051e8":"df_confirmados_italia.head()","b7c3e9b0":"df_confirmados_eua.head()","2252f45f":"df_confirmados_suecia.head()","c9ab9628":"# Fazendo com que todos os df comecem apenas 1 dia antes do 1\u00ba casi de covid \ndf_confirmados_brasil = df_confirmados_brasil.iloc[:,39:]\ndf_confirmados_eua = df_confirmados_eua.iloc[:,4:]\ndf_confirmados_italia = df_confirmados_italia.iloc[:,12:]\ndf_confirmados_suecia = df_confirmados_suecia.iloc[:,13:]\n# -------------------------------------------------------------\ndf_mortes_brasil = df_mortes_brasil.iloc[:,39:]\ndf_mortes_eua = df_mortes_eua.iloc[:,4:]\ndf_mortes_italia = df_mortes_italia.iloc[:,12:]\ndf_mortes_suecia = df_mortes_suecia.iloc[:,13:]\n# -------------------------------------------------------------\ndf_recuperados_brasil = df_recuperados_brasil.iloc[:,39:]\ndf_recuperados_eua = df_recuperados_eua.iloc[:,4:]\ndf_recuperados_italia = df_recuperados_italia.iloc[:,12:]\ndf_recuperados_suecia = df_recuperados_suecia.iloc[:,13:]","6d6642e4":"# pegando o indice das colunas:\nindex_brasil = list(df_confirmados_brasil.columns.values) \nindex_italia = list(df_confirmados_italia.columns.values) \nindex_eua = list(df_confirmados_eua.columns.values) \nindex_suecia = list(df_confirmados_suecia.columns.values) ","c2ed84bc":"# pegando os valores de todos df do brasil para auxiliar em constru\u00e7\u00f5es de graficos:\ncasos_brasil = []\nmortes_brasil = []\nrecuperados_brasil = []\nfor i in index_brasil:\n    confirmados_brasil = df_confirmados_brasil[i].sum()\n    casos_brasil.append(confirmados_brasil)\n    \n    mortos_brasil = df_mortes_brasil[i].sum()\n    mortes_brasil.append(mortos_brasil)\n    \n    recupera_brasil = df_recuperados_brasil[i].sum()\n    recuperados_brasil.append(recupera_brasil)","ab733f62":"# realizando o mesmo processo anterior para o eua\ncasos_eua = []\nmortes_eua = []\nrecuperados_eua = []\n\nfor i in index_eua:\n    confirmados_eua = df_confirmados_eua[i].sum()\n    casos_eua.append(confirmados_eua)\n    \n    mortos_eua = df_mortes_eua[i].sum()\n    mortes_eua.append(mortos_eua)\n\n    recupera_eua = df_recuperados_eua[i].sum()\n    recuperados_eua.append(recupera_eua)\n","8ed60a43":"# realizando o mesmo processo anterior para a italia\ncasos_italia = []\nmortes_italia = []\nrecuperados_italia = []\n\nfor i in index_italia:\n\n    confirmados_italia = df_confirmados_italia[i].sum()\n    casos_italia.append(confirmados_italia)\n    \n    mortos_italia = df_mortes_italia[i].sum()\n    mortes_italia.append(mortos_italia)\n    \n    recupera_italia = df_recuperados_italia[i].sum()\n    recuperados_italia.append(recupera_italia)\n   \n    \n    ","176d5dcc":"# realizando o mesmo processo anterior para a suecia\ncasos_suecia  = []\nmortes_suecia  = []\nrecuperados_suecia  = []\nfor i in index_suecia:\n    confirmados_suecia = df_confirmados_suecia[i].sum()\n    casos_suecia.append(confirmados_suecia)\n    \n    mortos_suecia = df_mortes_suecia[i].sum()\n    mortes_suecia.append(mortos_suecia)\n\n    recupera_suecia = df_recuperados_suecia[i].sum()\n    recuperados_suecia.append(recupera_suecia)","fa632060":"# transformando as datas em um numpy array de dias corridos:\ndias_brasil = np.array([i for i in range(len(index_brasil))]).reshape(-1, 1)\ndias_eua = np.array([i for i in range(len(index_eua))]).reshape(-1, 1)\ndias_italia = np.array([i for i in range(len(index_italia))]).reshape(-1, 1)\ndias_suecia = np.array([i for i in range(len(index_suecia))]).reshape(-1, 1)","d416872f":"futuro = 60 # essa variavel define quantos dias para frente a partir de hoje queremos prever.\n# fazendo  datas futuras em numpy array de dias corridos \nfuturo_brasil = np.array([i for i in range(len(index_brasil) + futuro)]).reshape(-1, 1)\nfuturo_eua = np.array([i for i in range(len(index_eua) + futuro)]).reshape(-1, 1)\nfuturo_italia = np.array([i for i in range(len(index_italia) + futuro)]).reshape(-1, 1)\nfuturo_suecia = np.array([i for i in range(len(index_suecia) + futuro)]).reshape(-1, 1)","a73bbbd4":"# transformando datas futuras corridas em datas de formato mm\/dd\/yy\nstart_br = '2\/26\/20'\nstart_br = datetime.datetime.strptime(start_br,\"%m\/%d\/%y\")\ndatas_futuras_br = []\nfor i in range(len(futuro_brasil)):\n    datas_futuras_br.append((start_br + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_us = '1\/22\/20'\nstart_us = datetime.datetime.strptime(start_us,\"%m\/%d\/%y\")\ndatas_futuras_us = []\nfor i in range(len(futuro_eua)):\n    datas_futuras_us.append((start_us + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_it = '1\/30\/20'\nstart_it = datetime.datetime.strptime(start_it,\"%m\/%d\/%y\")\ndatas_futuras_it = []\nfor i in range(len(futuro_italia)):\n    datas_futuras_it.append((start_it + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))\n#---------------------------------------------------------------------------------------------------\nstart_su = '1\/31\/20'\nstart_su = datetime.datetime.strptime(start_su,\"%m\/%d\/%y\")\ndatas_futuras_su = []\nfor i in range(len(futuro_suecia)):\n    datas_futuras_su.append((start_su + datetime.timedelta(days=i)).strftime('%m\/%d\/%y'))","a391259f":"# transpondo todos os dataframes\ndf_confirmados_brasil = df_confirmados_brasil.T\ndf_confirmados_brasil['dates'] = index_brasil\n\ndf_mortes_brasil = df_mortes_brasil.T\ndf_mortes_brasil['dates'] = index_brasil\n\ndf_recuperados_brasil = df_recuperados_brasil.T\ndf_recuperados_brasil['dates'] = index_brasil\n\nnew_index_br = [x for x in range(len(index_brasil))]\n#----------------------------------------------------\ndf_confirmados_eua = df_confirmados_eua.T\ndf_confirmados_eua['dates'] = index_eua\n\ndf_mortes_eua = df_mortes_eua.T\ndf_mortes_eua['dates'] = index_eua\n\ndf_recuperados_eua = df_recuperados_eua.T\ndf_recuperados_eua['dates'] = index_eua\n\nnew_index_eua = [x for x in range(len(index_eua))]\n#----------------------------------------------------\ndf_confirmados_italia = df_confirmados_italia.T\ndf_confirmados_italia['dates'] = index_italia\n\ndf_mortes_italia = df_mortes_italia.T\ndf_mortes_italia['dates'] = index_italia\n\ndf_recuperados_italia = df_recuperados_italia.T\ndf_recuperados_italia['dates'] = index_italia\n\nnew_index_it = [x for x in range(len(index_italia))]\n#----------------------------------------------------\ndf_confirmados_suecia = df_confirmados_suecia.T\ndf_confirmados_suecia['dates'] = index_suecia\n\ndf_mortes_suecia = df_mortes_suecia.T\ndf_mortes_suecia['dates'] = index_suecia\n\ndf_recuperados_suecia = df_recuperados_suecia.T\ndf_recuperados_suecia['dates'] = index_suecia\nnew_index_su = [x for x in range(len(index_suecia))]\n","5e0913c4":"df_confirmados_brasil.head()\n","ea2b61c0":"# como vimos os index est\u00e3o errados, iremos arrumar-los agora.\ndf_confirmados_brasil['index'] = new_index_br\ndf_confirmados_brasil = df_confirmados_brasil.set_index('index')\ndf_confirmados_brasil.rename(columns={28:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_brasil.index.name = None\ndf_confirmados_brasil['dates'] = dias_brasil\n\ndf_mortes_brasil['index'] = new_index_br\ndf_mortes_brasil = df_mortes_brasil.set_index('index')\ndf_mortes_brasil.rename(columns={28:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_brasil.index.name = None\ndf_mortes_brasil['dates'] = dias_brasil\n\ndf_recuperados_brasil['index'] = new_index_br\ndf_recuperados_brasil = df_recuperados_brasil.set_index('index')\ndf_recuperados_brasil.rename(columns={29:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_brasil.index.name = None\ndf_recuperados_brasil['dates'] = dias_brasil\n\n#------------------------------------------------\ndf_confirmados_eua['index'] = new_index_eua\ndf_confirmados_eua = df_confirmados_eua.set_index('index')\ndf_confirmados_eua.rename(columns={225:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_eua.index.name = None\ndf_confirmados_eua['dates'] = dias_eua\n\ndf_mortes_eua['index'] = new_index_eua\ndf_mortes_eua = df_mortes_eua.set_index('index')\ndf_mortes_eua.rename(columns={225:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_eua.index.name = None\ndf_mortes_eua['dates'] = dias_eua\n\ndf_recuperados_eua['index'] = new_index_eua\ndf_recuperados_eua = df_recuperados_eua.set_index('index')\ndf_recuperados_eua.rename(columns={225:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_eua.index.name = None\ndf_recuperados_eua['dates'] = dias_eua\n#------------------------------------------------\ndf_confirmados_italia['index'] = new_index_it\ndf_confirmados_italia = df_confirmados_italia.set_index('index')\ndf_confirmados_italia.rename(columns={137:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_italia.index.name = None\ndf_confirmados_italia['dates'] = dias_italia\n\ndf_mortes_italia['index'] = new_index_it\ndf_mortes_italia = df_mortes_italia.set_index('index')\ndf_mortes_italia.rename(columns={137:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_italia.index.name = None\ndf_mortes_italia['dates'] = dias_italia\n\ndf_recuperados_italia['index'] = new_index_it\ndf_recuperados_italia = df_recuperados_italia.set_index('index')\ndf_recuperados_italia.rename(columns={131:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_italia.index.name = None\ndf_recuperados_italia['dates'] = dias_italia\n#------------------------------------------------\ndf_confirmados_suecia['index'] = new_index_su\ndf_confirmados_suecia = df_confirmados_suecia.set_index('index')\ndf_confirmados_suecia.rename(columns={205:'cases',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_confirmados_suecia.index.name = None\ndf_confirmados_suecia['dates'] = dias_suecia\n\ndf_mortes_suecia['index'] = new_index_su\ndf_mortes_suecia = df_mortes_suecia.set_index('index')\ndf_mortes_suecia.rename(columns={205:'deaths',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_mortes_suecia.index.name = None\ndf_mortes_suecia['dates'] = dias_suecia\n\ndf_recuperados_suecia['index'] = new_index_su\ndf_recuperados_suecia = df_recuperados_suecia.set_index('index')\ndf_recuperados_suecia.rename(columns={203:'recovery',\n                   'dates':'dates'}, \n                 inplace=True)\ndf_recuperados_suecia.index.name = None\ndf_recuperados_suecia['dates'] = dias_suecia","ba62b997":"df_confirmados_brasil.head()","6ce4f656":"df_mortes_eua.head()","d291dd51":"df_recuperados_suecia.head()","98c3b3bc":"df_mortes_italia.head()","a716f8b3":"hoje = datetime.datetime.now() - timedelta(days=1)\nhoje = hoje.strftime(\"%d\/%m\/%y\")\npop_eua = 331002651\npop_br = 212559417\npop_it = 60461826\npop_sw = 10099265","e1b2ee10":"\nfig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [confirmados_eua,confirmados_italia,confirmados_brasil,confirmados_suecia]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Numero de casos', size = 20)\nplt.title('NUMERO DE CASOS DE COVID-19 NO DIA ' + hoje, size=20)\nplt.show()","af71e511":"print('compara\u00e7\u00e3o casos nos 4 paises')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2200988\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2200988\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","dbfc0001":"fig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [(confirmados_eua\/pop_eua)*1000000, (confirmados_italia\/pop_it) *1000000, \n           (confirmados_brasil\/pop_br)*1000000, (confirmados_suecia\/pop_sw)*1000000]\nnumeros = [round(num, 0) for num in numeros]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Numero de casos', size = 20)\nplt.title('NUMERO DE CASOS POR MILH\u00c3O DE HABITANTE NO DIA ' + hoje, size=20)\nplt.show()","fba07bf6":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, color='blue')\nplt.plot(dias_eua, casos_eua, color='red')\nplt.plot(dias_italia, casos_italia, color='green')\nplt.plot(dias_suecia, casos_suecia, color='yellow')\nplt.title('COMPARACAO DE PROGRESSAO DE CASOS EM DIFERENTES PAISES', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","0ae857c5":"conf_eua1, conf_eua2 = itertools.tee(iter(list(casos_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(casos_italia)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(casos_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(casos_suecia)))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\n\n\n\nantes_30_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 30:\n        antes_30_eua.append(index)\neua_day = [i for i in range(len(antes_30_eua))]\n\nantes_30_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 30:\n        antes_30_br.append(index)\nbr_day = [i for i in range(len(antes_30_br))]\n\nantes_30_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 30:\n        antes_30_su.append(index)\nsu_day = [i for i in range(len(antes_30_su))]\n\nantes_30_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 30:\n        antes_30_it.append(index)\nit_day = [i for i in range(len(antes_30_it))]\n","290acf09":"p1 = figure(plot_width=800, plot_height=550, title=\"Tragetoria do covid-19 logaritmica\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias apos ter aumento de 30 casos diarios'\np1.yaxis.axis_label = 'Progressao casos(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(br_day, casos_brasil[18:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(br_day[-1], casos_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, casos_eua[41:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(eua_day[-1], casos_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, casos_suecia[35:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(su_day[-1], casos_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, casos_italia[23:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], casos_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","579f8218":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o', color='blue')\nplt.plot(dias_suecia, casos_suecia, marker='o', color='yellow')\n\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O BRASIL VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Brasil', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","b3a1a715":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o', color='blue')\nplt.plot(dias_italia, casos_italia, marker='o', color='green')\n\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O BRASIL VS ITALIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Brasil', 'Italia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","f5c51029":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, casos_brasil, marker='o',  color='blue')\nplt.plot(dias_eua, casos_eua, marker='o',  color='red')\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O BRASIL VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Brasil', 'EUA'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","43356cae":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, casos_italia, marker='o', color='green')\nplt.plot(dias_suecia, casos_suecia, marker='o',  color='yellow')\n\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O ITALIA VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","54f20cf8":"plt.figure(figsize=(20, 9))\nplt.plot(dias_eua, casos_eua, marker='o', color='red')\nplt.plot(dias_suecia, casos_suecia, marker='o',  color='yellow')\n\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O  EUA VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['EUA', 'Suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","e6676583":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, casos_italia, marker='o',  color='green')\nplt.plot(dias_eua, casos_eua, marker='o', color='red')\n\n\nplt.title('COMPARACAO DE PROGRESS\u00c3O ITALIA VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['Italia', 'Eua'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","830d0e1b":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in casos_eua:\n  porc = (i \/ pop_eua)*1000000\n  eua_porc.append(porc)\nfor i in casos_brasil:\n  porc = (i \/ pop_br)*1000000\n  br_porc.append(porc)\nfor i in casos_italia:\n  porc = (i \/ pop_it)*1000000\n  it_porc.append(porc)\nfor i in casos_suecia:\n  porc = (i \/ pop_sw)*1000000\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, br_porc, color='blue')\nplt.plot(dias_eua, eua_porc, color='red')\nplt.plot(dias_italia, it_porc, color='green')\nplt.plot(dias_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESS\u00c3O DE CASOS POR MILH\u00c3O', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Casos por milh\u00e3o', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ed314a8d":"conf_eua1, conf_eua2 = itertools.tee(iter(list(casos_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(casos_italia)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(casos_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(casos_suecia)))\nnext(conf_su2)\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndiferenca_eua_media = np.array(diferenca_eua).mean()\ndiferenca_italia_media = np.array(diferenca_italia).mean()\ndiferenca_brasil_media = np.array(diferenca_brasil).mean()\ndiferenca_suecia_media = np.array(diferenca_suecia).mean()\n\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [diferenca_eua_media, diferenca_italia_media, diferenca_brasil_media, diferenca_suecia_media]\nnumeros = [round(m, 2) for m in numeros]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(paises, numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Media de Aumento diario', size = 20)\nplt.title('Media Aumento diario de confirmacoes do covid-19', size=20)\nplt.show()","a056ed9a":"ax = plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil[1:], diferenca_brasil, color='blue')\nplt.plot(dias_eua[1:], diferenca_eua, color='red')\nplt.plot(dias_italia[1:], diferenca_italia, color='green')\nplt.plot(dias_suecia[1:], diferenca_suecia, color='yellow')\n\nplt.title('AUMENTO DIARIO', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Aumento dos casos', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'Suecia'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","481204ca":"diferenca_eua =[int(r) - int(p) for p,r in zip(casos_eua, mortes_eua)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(casos_italia, mortes_italia)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(casos_brasil, mortes_brasil)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(casos_suecia, mortes_suecia)]\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(diferenca_eua, recuperados_eua)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(diferenca_italia, recuperados_italia)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(diferenca_brasil, recuperados_brasil)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(diferenca_suecia, recuperados_suecia)]\n\nantes_30_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 30:\n        antes_30_eua.append(index)\neua_day = [i for i in range(len(antes_30_eua))]\n\nantes_30_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 30:\n        antes_30_br.append(index)\nbr_day = [i for i in range(len(antes_30_br))]\n\nantes_30_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 30:\n        antes_30_su.append(index)\nsu_day = [i for i in range(len(antes_30_su))]\n\nantes_30_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 30:\n        antes_30_it.append(index)\nit_day = [i for i in range(len(antes_30_it))]","e4b28141":"p1 = figure(plot_width=800, plot_height=550, title=\"Casos ativos (Totais - (recuperados+ mortos))\",\n             x_range=(0, 100))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias desde inicio covid'\np1.yaxis.axis_label = 'Casos ativos'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day, diferenca_brasil[13:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(br_day[-1], diferenca_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, diferenca_eua[33:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(eua_day[-1], diferenca_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, diferenca_suecia[33:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(su_day[-1], diferenca_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, diferenca_italia[23:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], diferenca_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","403153d6":"p1 = figure(plot_width=800, plot_height=550, title=\"Casos ativos (Totais - (recuperados+ mortos))\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias desde inicio covid'\np1.yaxis.axis_label = 'Casos Ativos(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day, diferenca_brasil[13:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(br_day[-1], diferenca_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, diferenca_eua[33:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(eua_day[-1], diferenca_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, diferenca_suecia[33:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(su_day[-1], diferenca_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, diferenca_italia[23:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], diferenca_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","b1ec79ce":"fig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [mortos_eua, mortos_italia, mortos_brasil, mortos_suecia]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'])\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height , label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('n\u00ba de mortes', size = 20)\nplt.title('N\u00ba Mortes por COVID-19 at\u00e9 o dia: ' + hoje, size=20)\nplt.show()","9b24d5b9":"fig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [(mortos_eua\/confirmados_eua)*100, (mortos_italia\/confirmados_italia) *100, \n           (mortos_brasil\/confirmados_brasil)*100, (mortos_suecia\/confirmados_suecia)*100]\nnumeros = [round(num, 2) for num in numeros]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'])\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height , label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('% LETALIDADE', size = 20)\nplt.title('LETALIDADE EM % DO COVID NO DIA : ' + hoje, size=20)\nplt.show()","537a76ee":"plt.figure(figsize=(20, 9))\nmort_br = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_brasil, casos_brasil)]\nmort_eua = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_eua, casos_eua)]\nmort_it = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_italia, casos_italia)]\nmort_su = [round(abs((float(p) \/ float(r))), 2)*100 if p != 0 and r != 0 else 0 for p,r in zip(mortes_suecia, casos_suecia)]\n\n\nplt.plot(dias_brasil, mort_br, color='blue')\nplt.plot(dias_eua, mort_eua, color='red')\nplt.plot(dias_italia, mort_it, color='green')\nplt.plot(dias_suecia, mort_su, color='yellow')\n\n\nplt.title('Evolu\u00e7\u00e3o da taxa de mortalidade', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Taxa de mortalidade (em %)', size = 30)\nplt.legend(['Brasil', 'EUA','Italia','Suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","3e6b1f71":"print('compara\u00e7\u00e3o morte 4 paises:')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2201203\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2201203\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","0eb975ca":"fig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [(mortos_eua\/pop_eua)*1000000, (mortos_italia\/pop_it) *1000000, \n           (mortos_brasil\/pop_br)*1000000, (mortos_suecia\/pop_sw)*1000000]\nnumeros = [round(num, 0) for num in numeros]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Numero de casos', size = 20)\nplt.title('NUMERO DE MORTES POR MILH\u00c3O DE HABITANTE NO DIA ' + hoje, size=20)\nplt.show()","de13eed6":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, mortes_brasil, color='blue')\nplt.plot(dias_eua, mortes_eua, color='red')\nplt.plot(dias_italia, mortes_italia, color='green')\nplt.plot(dias_suecia, mortes_suecia, color='yellow')\n\nplt.title('COMPARACAO DE PROGRESSAO DE MORTE EM DIFERENTES PAISES', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de mortes', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","60175e41":"conf_eua1, conf_eua2 = itertools.tee(iter(list(mortes_eua)))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(mortes_eua)))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(mortes_brasil)))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(mortes_suecia)))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\n\n\n\nantes_5_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 5:\n        antes_5_eua.append(index)\neua_day = [i for i in range(len(antes_5_eua))]\n\nantes_5_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 5:\n        antes_5_br.append(index)\nbr_day = [i for i in range(len(antes_5_br))]\n\nantes_5_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 5:\n        antes_5_su.append(index)\nsu_day = [i for i in range(len(antes_5_su))]\n\nantes_5_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 5:\n        antes_5_it.append(index)\nit_day = [i for i in range(len(antes_5_it))]\n\n","69e7e183":"p1 = figure(plot_width=800, plot_height=550, title=\"Tragetoria de mortes do  covid-19 logaritmica\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias apos ter aumento de 5 casos diarios'\np1.yaxis.axis_label = 'Progressao casos(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(br_day, mortes_brasil[24:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(br_day[-1], mortes_brasil[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day, mortes_eua[47:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(eua_day[-1], mortes_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day, mortes_suecia[54:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(su_day[-1], mortes_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day, mortes_italia[39:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], mortes_italia[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","6098f8f9":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, mortes_brasil, marker='o', color='blue')\nplt.plot(dias_suecia, mortes_suecia, marker='o', color='yellow')\n\n\nplt.title('COMPARACAO DE MORTES BRASIL VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de mortos', size = 30)\nplt.legend(['Brasil', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","e4af595d":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, mortes_italia, marker='o', color='green')\nplt.plot(dias_eua, mortes_eua, marker='o', color='red')\n\nplt.title('COMPARACAO DE MORTES ITALIA VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de mortos', size = 30)\nplt.legend(['Italia', 'Eua'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ca19df42":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in mortes_eua:\n  porc = (i \/ pop_eua)*1000000\n  eua_porc.append(porc)\nfor i in mortes_brasil:\n  porc = (i \/ pop_br)*1000000\n  br_porc.append(porc)\nfor i in mortes_italia:\n  porc = (i \/ pop_it)*1000000\n  it_porc.append(porc)\nfor i in mortes_suecia:\n  porc = (i \/ pop_sw)*1000000\n  su_porc.append(porc)\n\nplt.figure(figsize=(15, 9))\nplt.plot(dias_brasil, br_porc, color='blue')\nplt.plot(dias_eua, eua_porc, color='red')\nplt.plot(dias_italia, it_porc, color='green')\nplt.plot(dias_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESS\u00c3O DE MORTES POR MILH\u00c3O DE HABITANTE', size=20)\nplt.xlabel('Dias desde o inicio do covid', size = 20)\nplt.ylabel('mortes por milh\u00e3o', size = 20)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","8809edbb":"conf_eua1, conf_eua2 = itertools.tee(iter(list(mortes_eua[38:])))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(mortes_italia[22:])))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(mortes_brasil[20:])))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(mortes_suecia[40:])))\nnext(conf_su2)\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndiferenca_eua_media = np.array(diferenca_eua).mean()\ndiferenca_italia_media = np.array(diferenca_italia).mean()\ndiferenca_brasil_media = np.array(diferenca_brasil).mean()\ndiferenca_suecia_media = np.array(diferenca_suecia).mean()\n\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [diferenca_eua_media, diferenca_italia_media, diferenca_brasil_media, diferenca_suecia_media]\nnumeros = [round(m, 2) for m in numeros]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(paises, numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Media de Aumento diario', size = 20)\nplt.title('Media Aumento diario de Mortes do covid 19 DESDE A CONFIRMA\u00c7\u00c3O DA 1\u00ba MORTE', size=20)\nplt.show()","7c2677ba":"ax = plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil[21:], diferenca_brasil, color='blue')\nplt.plot(dias_eua[39:], diferenca_eua, color='red')\nplt.plot(dias_italia[23:], diferenca_italia, color='green')\nplt.plot(dias_suecia[41:], diferenca_suecia, color='yellow')\n\nplt.title('AUMENTO DIARIO DE MORTES', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Aumento dos casos', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'Suecia'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","122e9b29":"#@markdown Codigo mto grande, dois cliques para abrir-lo\n#@markdown ---\nconf_eua1, conf_eua2 = itertools.tee(iter(mortes_eua))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(mortes_italia))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(mortes_brasil))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(mortes_suecia))\nnext(conf_su2)\n\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1,\n                                            conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1\n                                              ,conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1,\n                                              conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1,\n                                              conf_su2)]\n\ndepois_5_eua = []\nfor index,conteudo in enumerate(diferenca_eua):\n    if conteudo >= 5:\n        depois_5_eua.append(index)\neua_day = [i for i in range(len(depois_5_eua))]\n\ndepois_5_br = []\nfor index,conteudo in enumerate(diferenca_brasil):\n    if conteudo >= 5:\n        depois_5_br.append(index)\nbr_day = [i for i in range(len(depois_5_br))]\n\ndepois_5_su = []\nfor index,conteudo in enumerate(diferenca_suecia):\n    if conteudo >= 5:\n        depois_5_su.append(index)\nsu_day = [i for i in range(len(depois_5_su))]\n\ndepois_5_it = []\nfor index,conteudo in enumerate(diferenca_italia):\n    if conteudo >= 5:\n        depois_5_it.append(index)\nit_day = [i for i in range(len(depois_5_it))]\n\ndef moving_average(a, n=7) :\n    ret = np.cumsum(a, dtype=float)\n    ret[n:] = ret[n:] - ret[:-n]\n    return ret[n - 1:] \/ n\nmoving_eua = moving_average(diferenca_eua[47:])\nmoving_br = moving_average(diferenca_brasil[24:])\nmoving_it = moving_average(diferenca_italia[29:])\nmoving_su = moving_average(diferenca_suecia[52:])","00598402":"p1 = figure(plot_width=800, plot_height=550, title=\"Estamos conseguindo achatar  a curva?\",\n             x_range=(0, 100), y_axis_type=\"log\")\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias apos ter aumento de 5 mortes confirmadas'\np1.yaxis.axis_label = 'Progressao mortes(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 10\n\n\n\np1.line(br_day[7:], moving_br, color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(br_day[-1], moving_br[-1], fill_color=\"white\", size=5)\n\np1.line(eua_day[7:], moving_eua, color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(eua_day[-1], moving_eua[-1], fill_color=\"white\", size=5)\n\np1.line(su_day[5:], moving_su, color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(su_day[-1], moving_su[-1], fill_color=\"white\", size=5)\n\n\np1.line(it_day[6:], moving_it, color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(it_day[-1], moving_it[-1], fill_color=\"white\", size=5)\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","e02bfadf":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Casos e mortes Brasil at\u00e9 o dia:\" + hoje\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Casos'\n           , x=index_brasil\n           , y=casos_brasil),\n    \n    go.Bar(name='Mortes'\n           , x=index_brasil\n           , y=mortes_brasil\n           , text= mortes_brasil\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\nfig.show()\n","0a8d4ec2":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Casos e mortes EUA at\u00e9 o dia:\" + hoje\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Casos'\n           , x=index_eua\n           , y=casos_eua),\n    \n    go.Bar(name='Mortes'\n           , x=index_eua\n           , y=mortes_eua\n           , text= mortes_eua\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","b83123d6":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Casos e mortes Italia at\u00e9 o dia:\" + hoje\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Casos'\n           , x=index_italia\n           , y=casos_italia),\n    \n    go.Bar(name='Mortes'\n           , x=index_italia\n           , y=mortes_italia\n           , text= mortes_italia\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","06b37afb":"layout = Layout(\n    paper_bgcolor='lightsteelblue',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title=\"Casos e mortes Su\u00e9cia at\u00e9 o dia:\" + hoje\n)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='Casos'\n           , x=index_suecia\n           , y=casos_suecia),\n    \n    go.Bar(name='Mortes'\n           , x=index_suecia\n           , y=mortes_suecia\n           , text= mortes_suecia\n           , textposition='outside')\n])\n\nfig.update_layout(barmode='stack')\nfig['layout'].update(layout)\n\nfig.show()\n","4e9a8705":"plt.figure(figsize=(20, 9))\nplt.plot(dias_brasil, recuperados_brasil, marker='o', color='green')\nplt.plot(dias_brasil, mortes_brasil, marker='o', color='red')\n\n\nplt.title('COMPARACAO DE RECUPERADOS VS MORTES BRASIL', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['recuperados', 'mortos'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","d5b973c4":"plt.figure(figsize=(20, 9))\nplt.plot(dias_italia, recuperados_italia, marker='o', color='green')\nplt.plot(dias_italia, mortes_italia, marker='o', color='red')\n\n\nplt.title('COMPARACAO DE RECUPERADOS VS MORTES ITALIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['recuperados', 'mortos'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","05481306":"plt.figure(figsize=(20, 9))\nplt.plot(dias_eua, recuperados_eua, marker='o', color='green')\nplt.plot(dias_eua, mortes_eua, marker='o', color='red')\n\n\nplt.title('COMPARACAO DE RECUPERADOS VS MORTES EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['recuperados', 'mortos'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","cac61874":"plt.figure(figsize=(20, 9))\nplt.plot(dias_suecia, recuperados_suecia, marker='o', color='green')\nplt.plot(dias_suecia, mortes_suecia, marker='o', color='red')\n\n\nplt.title('COMPARACAO DE RECUPERADOS VS MORTES SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['recuperados', 'mortos'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","1f743506":"#separando o target(valor a ser previsto) das datas\ntarget_confirmado_br = df_confirmados_brasil['cases'].copy()\ndf_confirmados_brasil.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_br = df_mortes_brasil['deaths'].copy()\ndf_mortes_brasil.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_br = df_recuperados_brasil['recovery']\ndf_recuperados_brasil.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_eua = df_confirmados_eua['cases'].copy()\ndf_confirmados_eua.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_eua = df_mortes_eua['deaths'].copy()\ndf_mortes_eua.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_eua = df_recuperados_eua['recovery']\ndf_recuperados_eua.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_italia = df_confirmados_italia['cases'].copy()\ndf_confirmados_italia.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_italia = df_mortes_italia['deaths'].copy()\ndf_mortes_italia.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_italia = df_recuperados_italia['recovery']\ndf_recuperados_italia.drop('recovery', axis = 1, inplace= True)\n#-------------------------------------------------------------------------\ntarget_confirmado_suecia = df_confirmados_suecia['cases'].copy()\ndf_confirmados_suecia.drop('cases', axis = 1, inplace= True)\n\ntarget_mortos_suecia = df_mortes_suecia['deaths'].copy()\ndf_mortes_suecia.drop('deaths', axis = 1, inplace= True)\n\ntarget_recuperado_suecia = df_recuperados_suecia['recovery']\ndf_recuperados_suecia.drop('recovery', axis = 1, inplace= True)\n\n","ef042d8f":"#COMECAREMOS PELO BRASIL:","5938a411":"#Casos Brasil\nX_train, X_test, y_train, y_test = train_test_split(df_confirmados_brasil, target_confirmado_br, test_size=0.1, random_state=42)\npoly = PolynomialFeatures(degree=4, include_bias=False)\nX_poly = poly.fit_transform(X_train)\nsvm = LinearRegression()\nprint(\"fitting..\")\nsvm.fit(X_poly,y_train)","21285309":"pred_caso_br = svm.predict(poly.fit_transform(futuro_brasil))","985e20b8":"plt.figure(figsize=(20, 12))\nplt.plot(dias_brasil, casos_brasil, marker='x')\nplt.plot(futuro_brasil[0:len(dias_brasil)],pred_caso_br[0:len(casos_brasil)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O BRASIL CASOS CONFIRMADOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias desde 27\/02\/20', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['casos confirmados', 'predi\u00e7\u00e3o por Regress\u00e3o Polinomial'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","be3944f8":"# predicao mortes brasil\nX_train, X_test, y_train, y_test = train_test_split(df_mortes_brasil, target_mortos_br, test_size=0.1, random_state=42)\npoly = PolynomialFeatures(degree=5, include_bias=False)\nX_poly = poly.fit_transform(X_train)\nsvm = LinearRegression()\nprint('fitting...')\nsvm.fit(X_poly,y_train)","2073aa88":"pred_mortes_br = svm.predict(poly.fit_transform(futuro_brasil))","7e328336":"plt.figure(figsize=(20, 12))\nplt.plot(dias_brasil, mortes_brasil, marker='x')\nplt.plot(futuro_brasil[0:len(dias_brasil)], pred_mortes_br[0:len(mortes_brasil)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O BRASIL  MORTES CONFIRMADAS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias desde 27\/02\/20', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['mortes confirmadas', 'predi\u00e7\u00e3o por regress\u00e3o polinomial'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","880f1809":"# predicao casos EUA\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_eua, target_confirmado_eua)","6e93741e":"pred_caso_eua = mlp.predict(futuro_eua)","7cc0a439":"plt.figure(figsize=(20, 12))\nplt.plot(dias_eua, casos_eua, marker='x')\nplt.plot(futuro_eua[0:len(dias_eua)],pred_caso_eua[0:len(casos_eua)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O EUA CASOS CONFIRMADOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['casos confirmados', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","56a86844":"mlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_eua, target_mortos_eua)","da673ae1":"pred_mortes_eua = mlp.predict(futuro_eua)","e10dbe8a":"plt.figure(figsize=(20, 12))\nplt.plot(dias_eua, mortes_eua, marker='x')\nplt.plot(futuro_eua[0:len(dias_eua)],pred_mortes_eua[0:len(mortes_eua)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O EUA MORTES CONFIRMADAS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['mortes confirmados', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()","df6c2e73":"# predicao casos ITALIA\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=30000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_italia, target_confirmado_italia)","71a11ba7":"pred_caso_italia = mlp.predict(futuro_italia)","a8ebc374":"plt.figure(figsize=(20, 12))\nplt.plot(dias_italia, casos_italia, marker='x')\nplt.plot(futuro_italia[0:len(casos_italia)],pred_caso_italia[0:len(casos_italia)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O ITALIA CASOS CONFIRMADOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['casos confirmados', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","ef74b541":"#previsao morte italia\nmlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=30000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_italia, target_mortos_italia)","2c29886e":"pred_mortes_italia = mlp.predict(futuro_italia)","32061ec2":"plt.figure(figsize=(20, 12))\nplt.plot(dias_italia, mortes_italia, marker='x')\nplt.plot(futuro_italia[0:len(mortes_italia)],pred_mortes_italia[0:len(mortes_italia)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O ITALIA: MORTOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de mortos', size = 30)\nplt.legend(['mortes confirmadas', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","b7d9a360":"mlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_confirmados_suecia, target_confirmado_suecia)","005da752":"pred_caso_suecia = mlp.predict(futuro_suecia)","7ea55a59":"plt.figure(figsize=(20, 12))\nplt.plot(dias_suecia, casos_suecia, marker='x')\nplt.plot(futuro_suecia[0:len(dias_suecia)], pred_caso_suecia[0:len(casos_suecia)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O SUECIA CASOS CONFIRMADOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de casos', size = 30)\nplt.legend(['casos confirmados', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","86826b99":"mlp = MLPRegressor(hidden_layer_sizes=(1000,1000,1000,1000),activation='relu',solver='lbfgs',max_iter=3000, shuffle=True)\nprint('fitting...')\nmlp.fit(df_mortes_suecia, target_mortos_suecia)","1058e04f":"pred_mortes_suecia = mlp.predict(futuro_suecia)","0f192010":"plt.figure(figsize=(20, 12))\nplt.plot(dias_suecia, mortes_suecia,marker='x')\nplt.plot(futuro_suecia[0:len(dias_suecia)],pred_mortes_suecia[0:len(mortes_suecia)], linestyle = 'dashed', color='purple')\nplt.title('COMPARA\u00c7\u00c3O SUECIA MORTOS: CONFIRMADOS VS PREVIS\u00c3O', size=30)\nplt.xlabel('Dias corridos', size = 30)\nplt.ylabel('Numero de mortes', size = 30)\nplt.legend(['mortes confirmadas', 'predi\u00e7\u00e3o por MLP'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","09201c47":"index = ['previsoes', 'real', 'diferenca percentual', 'diferenca bruta']\npd.set_option('display.max_columns', 250)","8d06bd29":"colunas =[i for i in datas_futuras_br]\nprevisto = [round(i, 0) for i in pred_caso_br]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_caso_br, casos_brasil)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(diferenca, casos_brasil) ]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_caso_br = pd.DataFrame([previsto[40:], casos_brasil[40:], diferenca_percentual_formatada[40:], diferenca[40:]],\n                          columns=colunas[40:], index = index)\n","2b06ab3a":"diferenca = np.array(diferenca[40:])\ndiferenca_percentual = np.array(diferenca_percentual[40:])\nprint(f\"A media de erro bruto para casos confirmados no Brasil eh: {round(np.absolute(diferenca).mean(), 0 )}\")\nprint(f'A media de erro percentual para casos confirmados no Brasil eh: {round(np.absolute(diferenca_percentual).mean(), 2)}%')","3906126d":"print('CASOS CONFIRMADOS PARA O BRASIL: ')\npd.set_option('display.max_columns', 250)\ndf_caso_br","17fe2bd1":"colunas =[i for i in datas_futuras_br]\nprevisto = [round(i, 0)  for i in pred_mortes_br]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_mortes_br, mortes_brasil)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r != 0 else 0 for p,r in zip(diferenca, mortes_brasil)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_morto_br = pd.DataFrame([previsto[40:], mortes_brasil[40:], diferenca_percentual_formatada[40:], diferenca[40:]], columns=colunas[40:], index = index)\n","2c4e7f92":"diferenca = np.array(diferenca[40:])\ndiferenca_percentual = np.array(diferenca_percentual[40:])\nprint(f'A media de erro bruto para mortes no Brasil eh: {round(np.absolute(diferenca).mean(), 0)}')\nprint(f'A media de erro percentual mortes no Brasil eh: {round (np.absolute(diferenca_percentual).mean() , 2)}%')","e06ef2a9":"print('MORTES PARA O BRASIL: ')\ndf_morto_br","4a43e94c":"colunas =[i for i in datas_futuras_us]\nprevisto = [round(i, 0) for i in pred_caso_eua]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_caso_eua, casos_eua)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, casos_eua)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_caso_eua = pd.DataFrame([previsto[75:], casos_eua[75:], diferenca_percentual_formatada[75:], diferenca[75:]],\n                           columns=colunas[75:], index = index)\n","c1b3374c":"diferenca = np.array(diferenca[75:])\ndiferenca_percentual = np.array(diferenca_percentual[75:])\nprint(f'A media de erro bruto para casos confirmados nos EUA eh: {round(np.absolute(diferenca).mean(), 0 )}')\nprint(f'A media de erro percentual para casos confirmados nos EUA eh: {round(np.absolute(diferenca_percentual).mean(), 2)}%')","e6a7b191":"print('CASOS CONFIRMADOS PARA OS ESTADOS UNIDOS: ')\ndf_caso_eua","2d507abe":"colunas =[i for i in datas_futuras_us]\nprevisto = [round(i, 0) for i in pred_mortes_eua]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_mortes_eua, mortes_eua)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, mortes_eua)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_morto_eua = pd.DataFrame([previsto[75:], mortes_eua[75:], diferenca_percentual_formatada[75:], diferenca[75:]], \n                            columns=colunas[75:], index = index)\n","d0fc06e0":"diferenca = np.array(diferenca[75:])\ndiferenca_percentual = np.array(diferenca_percentual[75:])\nprint(f'A media de erro bruto para mortes nos EUA eh: {round(np.absolute(diferenca).mean(), 0)}')\nprint(f'A media de erro percentual mortes nos EUA eh: {round(np.absolute(diferenca_percentual).mean(), 2)}%')","5886315b":"print('MORTES PARA OS ESTADOS UNIDOS: ')\ndf_morto_eua","3948d22e":"colunas =[i for i in datas_futuras_it]\nprevisto = [round(i, 0) for i in pred_caso_italia]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_caso_italia, casos_italia)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, casos_italia)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_caso_italia = pd.DataFrame([previsto[67:], casos_italia[67:], diferenca_percentual_formatada[67:], diferenca[67:]], \n                              columns=colunas[67:], index = index)","a8e399ca":"diferenca = np.array(diferenca[67:])\ndiferenca_percentual = np.array(diferenca_percentual[67:])\nprint(f'A media de erro bruto para casos confirmados na Italia eh: {round(np.absolute(diferenca).mean(), 0)}')\nprint(f'A media de erro percentual para casos confirmados na Italia eh: {round(np.absolute(diferenca_percentual).mean(), 2)}%')","db7201bf":"print('CASOS CONFIRMADOS PARA A ITALIA: ')\ndf_caso_italia","d9c5ec24":"colunas =[i for i in datas_futuras_it]\nprevisto = [round(i, 0) for i in pred_mortes_italia]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_mortes_italia, mortes_italia)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, mortes_italia)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_morto_italia = pd.DataFrame([previsto[67:], mortes_italia[67:], diferenca_percentual_formatada[67:], diferenca[67:]], \n                               columns=colunas[67:], index = index)","fb822116":"diferenca = np.array(diferenca[67:])\ndiferenca_percentual = np.array(diferenca_percentual[67:])\nprint(f'A media de erro bruto para mortes na Italia eh: {round(np.absolute(diferenca).mean() ,0)}')\nprint(f'A media de erro percentual mortes na Italia eh: {round(np.absolute(diferenca_percentual).mean(),2)}%')","e55540ba":"print('MORTES CONFIRMADOS DA ITALIA: ')\ndf_morto_italia","21adad66":"colunas =[i for i in datas_futuras_su]\nprevisto = [round(i, 0) for i in pred_caso_suecia]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_caso_suecia, casos_suecia)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, casos_suecia)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_caso_suecia = pd.DataFrame([previsto[66:], casos_suecia[66:], diferenca_percentual_formatada[66:], diferenca[66:]],\n                              columns=colunas[66:],  index = index)","6449807e":"diferenca = np.array(diferenca[66:])\ndiferenca_percentual = np.array(diferenca_percentual[66:])\nprint(f'A media de erro bruto para casos confirmados na Suecia eh: {round(np.absolute(diferenca).mean(), 0)}')\nprint(f'A media de erro percentual para casos confirmados na Suecia eh: {round(np.absolute(diferenca_percentual).mean(), 2)}%')","1bcae0e4":"print('CASOS CONFIRMADOS PARA A SUECIA: ')\ndf_caso_suecia","2dd09e7f":"colunas =[i for i in datas_futuras_su]\nprevisto = [round(i, 0) for i in pred_mortes_suecia]\ndiferenca =[int(p) - int(r) for p,r in zip(pred_mortes_suecia, mortes_suecia)]\ndiferenca_percentual = [(int(p) \/ int(r))*100 if r !=0 else 0 for p,r in zip(diferenca, mortes_suecia)]\ndiferenca_percentual = [round(m, 2) for m in diferenca_percentual]\ndiferenca_percentual_formatada = [f'{i}%' for i in diferenca_percentual]\ndf_morto_suecia = pd.DataFrame([previsto[66:], mortes_suecia[66:],  diferenca_percentual_formatada[66:], diferenca[66:]],\n                               columns=colunas[66:], index = index)","0940ae1d":"diferenca = np.array(diferenca[66:])\ndiferenca_percentual = np.array(diferenca_percentual[66:])\nprint(f'A media de erro bruto para mortes na Suecia eh: {round(np.absolute(diferenca).mean(),0)}')\nprint(f'A media de erro percentual mortes na Suecia eh: {round(np.absolute(diferenca_percentual).mean(),2)}%')","3f97816f":"print('MORTES SUECIA: ')\ndf_morto_suecia","01f06225":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, color='blue')\nplt.plot(futuro_eua, pred_caso_eua, color='red')\nplt.plot(futuro_italia, pred_caso_italia, color='green')\nplt.plot(futuro_suecia, pred_caso_suecia, color='yellow')\n\nplt.title('COMPARACAO DA PREVISAO DE CASOS EM DIFERENTES PAISES', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero previsto de  casos', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","a6858f09":"labels = ['EUA', 'Italia', 'Brasil', 'Suecia']\natualmente = [confirmados_eua,confirmados_italia,confirmados_brasil,confirmados_suecia]\napos_40 = [pred_caso_eua[-1], pred_caso_italia[-1], pred_caso_br[-1],  pred_caso_suecia[-1]]\napos_40 = [round(m, 0) for m in apos_40]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Atualmente')\nrects2 = ax.bar(x + width\/2, apos_40, width, label= datas_futuras_br[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Casos')\nax.set_title('Casos atual vs previstos')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","0e6850cd":"print('compara\u00e7\u00e3o previsao de casos nos 4 paises')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2208057\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2208057\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","c21e4184":"eua_porc = round(((pred_caso_eua[-1] - confirmados_eua)\/ confirmados_eua)*100 , 2)\nbr_porc =  round(((pred_caso_br[-1] - confirmados_brasil)\/ confirmados_brasil)*100, 2)\nit_porc =  round(((pred_caso_italia[-1] - confirmados_italia)\/ confirmados_italia)*100, 2)\nsu_porc =  round(((pred_caso_suecia[-1] - confirmados_suecia)\/ confirmados_suecia)*100, 2)\n\n\nfig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Brasil', 'Italia', 'Suecia']\nnumeros = [eua_porc,br_porc,it_porc,su_porc]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'blue', 'green', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Quantos aumentou em 40 dias', size = 20)\nplt.title('% aumento', size=20)\nplt.show()\n","01e0675b":"fig = plt.figure(figsize=(12, 7))\nlabels = ['EUA', 'Italia', 'Brasil', 'Suecia']\n\natualmente = [(confirmados_eua\/pop_eua)*1000000, (confirmados_italia\/pop_it) *1000000, \n           (confirmados_brasil\/pop_br)*1000000, (confirmados_suecia\/pop_sw)*1000000]\natualmente = [round(num, 0) for num in atualmente]\napos_40 = [(pred_caso_eua[-1]\/pop_eua)*1000000, (pred_caso_italia[-1]\/pop_it)*1000000,\n           (pred_caso_br[-1]\/ pop_br)*1000000, (pred_caso_suecia[-1]\/pop_sw)*1000000]\napos_40 = [round(num, 0) for num in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Atualmente')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' Previsao para o dia ' + colunas[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Casos por milh\u00e3o')\nax.set_title('Casos por milh\u00e3o atual vs prevista ')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","bce08fd4":"p1 = figure(plot_width=800, plot_height=550, title=\"Tragetoria Prevista para covid-19 logaritmica\",\n             y_axis_type=\"linear\", x_range=(80,190))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias Previstos'\np1.yaxis.axis_label = 'Progressao casos(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(np.squeeze(futuro_brasil)[40:], pred_caso_br[40:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(futuro_brasil[-1], pred_caso_br[-1], fill_color=\"white\", size=5)\n\np1.line(np.squeeze(futuro_eua)[75:], pred_caso_eua[75:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(futuro_eua[-1], pred_caso_eua[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_suecia)[66:], pred_caso_suecia[66:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(futuro_suecia[-1], pred_caso_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_italia)[67:], pred_caso_italia[67:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(futuro_italia[-1], pred_caso_italia[-1], fill_color=\"white\", size=5)\n\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","42dad456":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, marker='o', color='blue')\nplt.plot(futuro_suecia, pred_caso_suecia, marker='o',  color='yellow')\n\n\nplt.title('COMPARACAO DE PREVISAO BRASIL VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Numero  previsto de casos', size = 30)\nplt.legend(['Brasil', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","2fcfb3fd":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_caso_br, marker='o',  color='blue')\nplt.plot(futuro_eua, pred_caso_eua, marker='o',  color='red')\n\nplt.title('COMPARACAO DE PREVISAO BRASIL VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao de casos', size = 30)\nplt.legend(['Brasil', 'EUA'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","90d0587a":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_eua, pred_caso_eua, marker='o',  color='red')\nplt.plot(futuro_italia, pred_caso_italia, marker='o',  color='green')\n\n\nplt.title('COMPARACAO DE PREVISAO ITALIA VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao de casos', size = 30)\nplt.legend(['Eua', 'Italia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","3409aaf2":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in pred_caso_eua:\n  porc = (i \/ pop_eua)*1000000\n  eua_porc.append(porc)\nfor i in pred_caso_br:\n  porc = (i \/ 217089238)*1000000\n  br_porc.append(porc)\nfor i in pred_caso_italia:\n  porc = (i \/ 60017348)*1000000\n  it_porc.append(porc)\nfor i in pred_caso_suecia:\n  porc = (i \/ 10174790)*1000000\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, br_porc, color='blue')\nplt.plot(futuro_eua, eua_porc, color='red')\nplt.plot(futuro_italia, it_porc, color='green')\nplt.plot(futuro_suecia, su_porc, color='yellow')\n\nplt.title('PREVISAO CASOS POR MILH\u00c3O ', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('casos por milh\u00e3o', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","b993b4e8":"conf_eua1, conf_eua2 = itertools.tee(iter(list(pred_caso_eua[75:])))\nnext(conf_eua2)\nconf_it1, conf_it2 = itertools.tee(iter(list(pred_caso_italia[67:])))\nnext(conf_it2)\nconf_br1, conf_br2 = itertools.tee(iter(list(pred_caso_br[40:])))\nnext(conf_br2)\nconf_su1, conf_su2 = itertools.tee(iter(list(pred_caso_suecia[66:])))\nnext(conf_su2)\ndiferenca_eua =[int(r) - int(p) for p,r in zip(conf_eua1, conf_eua2)]\ndiferenca_italia =[int(r) - int(p) for p,r in zip(conf_it1, conf_it2)]\ndiferenca_brasil =[int(r) - int(p) for p,r in zip(conf_br1, conf_br2)]\ndiferenca_suecia =[int(r) - int(p) for p,r in zip(conf_su1, conf_su2)]\ndiferenca_eua_media = np.array(diferenca_eua).mean()\ndiferenca_italia_media = np.array(diferenca_italia).mean()\ndiferenca_brasil_media = np.array(diferenca_brasil).mean()\ndiferenca_suecia_media = np.array(diferenca_suecia).mean()\n\npaises = ['EUA', 'Italia', 'Brasil', 'Suecia']\nnumeros = [diferenca_eua_media, diferenca_italia_media, diferenca_brasil_media, diferenca_suecia_media]\nnumeros = [round(m, 0) for m in numeros]\nfig = plt.figure(figsize=(12, 7))\nrects = plt.bar(paises, numeros, align='center', color=['red', 'green', 'blue', 'yellow'], width=0.5)\nax = rects.patches\n\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('Media de Aumento diario PREVISTO', size = 20)\nplt.title('Media Aumento diario de confirmacoes do covid-19', size=20)\nplt.show()","eeac1755":"ax = plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil[76:], diferenca_brasil[35:], color='blue')\nplt.plot(futuro_eua[76:], diferenca_eua, color='red')\nplt.plot(futuro_italia[76:], diferenca_italia[8:], color='green')\nplt.plot(futuro_suecia[76:], diferenca_suecia[9:], color='yellow')\n\nplt.title('AUMENTO DIARIO PREVISTOS', size=30)\nplt.xlabel('Dias desde o inicio da previsao', size = 30)\nplt.ylabel('Aumento dos casos', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'Suecia'],  prop={'size': 20}, loc=\"upper left\")\nplt.xticks(size=15)\n\nplt.yticks(size=15)\nplt.show()","c1e7efea":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, color='blue')\nplt.plot(futuro_eua, pred_mortes_eua, color='red')\nplt.plot(futuro_italia, pred_mortes_italia, color='green')\nplt.plot(futuro_suecia, pred_mortes_suecia , color='yellow')\n\nplt.title('COMPARACAO DE PREVISAO DE MORTE EM DIFERENTES PAISES', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao de mortes', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","1dc821b1":"labels = ['EUA', 'Italia', 'Brasil', 'Suecia']\natualmente = [mortos_eua, mortos_italia, mortos_brasil, mortos_suecia]\napos_40 = [pred_mortes_eua[-1], pred_mortes_italia[-1], pred_mortes_br[-1],  pred_mortes_suecia[-1]]\napos_40 = [round(m, 0) for m in apos_40]\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Atualmente')\nrects2 = ax.bar(x + width\/2, apos_40, width, label= 'Previs\u00e3o para :' + datas_futuras_br[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Mortes')\nax.set_title('Mortes atual vs previstos')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","07550014":"print('compara\u00e7\u00e3o previsao de Mortes nos 4 paises')\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2288388\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2288388\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","702660ed":"eua_porc = round(((pred_mortes_eua[-1] - mortos_eua)\/ mortos_eua)*100 , 2)\nbr_porc =  round(((pred_mortes_br[-1] - mortos_brasil)\/ mortos_brasil)*100, 2)\nit_porc =  round(((pred_mortes_italia[-1] - mortos_italia)\/ mortos_italia)*100, 2)\nsu_porc =  round(((pred_mortes_suecia[-1] - mortos_suecia)\/ mortos_suecia)*100, 2)\n\n\nfig = plt.figure(figsize=(12, 7))\npaises = ['EUA', 'Brasil', 'Italia', 'Suecia']\nnumeros = [eua_porc,br_porc,it_porc,su_porc]\nrects = plt.bar(paises,numeros, align='center', color=['red', 'blue', 'green', 'yellow'], width=0.5)\n\nax = rects.patches\nfor rect, label in zip(ax, numeros):\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width() \/ 2, height + 5, label,\n            ha='center', va='bottom', fontsize=15)\n    \nplt.ylabel('% de aumento das mortes em 40 dias', size = 20)\nplt.title('% aumento', size=20)\nplt.show()","8a17fd9b":"fig = plt.figure(figsize=(12, 7))\nlabels = ['EUA', 'Italia', 'Brasil', 'Suecia']\n\natualmente = [(mortos_eua\/pop_eua)*1000000, (mortos_italia\/pop_it) *1000000, \n           (mortos_brasil\/pop_br)*1000000, (mortos_suecia\/pop_sw)*1000000]\natualmente = [round(num, 0) for num in atualmente]\napos_40 = [(pred_mortes_eua[-1]\/pop_eua)*1000000, (pred_mortes_italia[-1]\/pop_it)*1000000,\n           (pred_mortes_br[-1]\/ pop_br)*1000000, (pred_mortes_suecia[-1]\/pop_sw)*1000000]\napos_40 = [round(num, 0) for num in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Atualmente')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' Previsao para o dia ' + colunas[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Morte por milh\u00e3o')\nax.set_title('Morte por milh\u00e3o atual vs prevista ')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","55b1dc9e":"p1 = figure(plot_width=800, plot_height=550, title=\"Tragetoria Prevista para mortes de  covid-19 logaritmica\",\n             y_axis_type=\"linear\", x_range=(75,190))\np1.grid.grid_line_alpha=1\np1.ygrid.band_fill_color = \"#4682B4\"\np1.ygrid.band_fill_alpha = 0.1\np1.xaxis.axis_label = 'Dias Previstos'\np1.yaxis.axis_label = 'Progressao mortes(escala logaritmica)'\np1.xaxis.minor_tick_line_width = 0\n\n\np1.line(np.squeeze(futuro_brasil)[40:], pred_mortes_br[40:], color='#3E4CC3', \n        legend_label='Brasil', line_width=1)\np1.circle(futuro_brasil[-1], pred_mortes_br[-1], fill_color=\"white\", size=5)\n\np1.line(np.squeeze(futuro_eua)[75:], pred_mortes_eua[75:], color='#F54138', \n        legend_label='Estados Unidos', line_width=1)\np1.circle(futuro_eua[-1], pred_mortes_eua[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_suecia)[66:], pred_mortes_suecia[66:], color='#DBAE23', \n        legend_label='Suecia', line_width=1)\np1.circle(futuro_suecia[-1], pred_mortes_suecia[-1], fill_color=\"white\", size=5)\n\n\np1.line(np.squeeze(futuro_italia)[67:], pred_mortes_italia[67:], color='#3EC358', \n        legend_label='Italia', line_width=1)\np1.circle(futuro_italia[-1], pred_mortes_italia[-1], fill_color=\"white\", size=5)\n\n\n\np1.legend.location = \"bottom_right\"\noutput_notebook()\nshow(p1)\n\n","2155e0fe":"fig = plt.figure(figsize=(12, 7))\nlabels = ['EUA', 'Italia', 'Brasil', 'Suecia']\natualmente = [(mortos_eua\/confirmados_eua)*100, (mortos_italia\/confirmados_italia) *100, \n           (mortos_brasil\/confirmados_brasil)*100, (mortos_suecia\/confirmados_suecia)*100]\natualmente = [round(num, 2) for num in atualmente]\napos_40 = [(pred_mortes_eua[-1]\/pred_caso_eua[-1])*100, (pred_mortes_italia[-1]\/pred_caso_italia[-1])*100,\n           (pred_mortes_br[-1]\/ pred_caso_br[-1])*100, (pred_mortes_suecia[-1]\/pred_caso_suecia[-1])*100]\napos_40 = [round(m, 2) for m in apos_40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(12, 7))\nrects1 = ax.bar(x - width\/2, atualmente, width, label='Atualmente')\nrects2 = ax.bar(x + width\/2, apos_40, width, label=' Previsao para o dia ' + colunas[-1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('% mortalidade')\nax.set_title('Mortalidade atual vs prevista em %')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nfig.tight_layout()\nplt.show()","6a5594ea":"plt.figure(figsize=(20, 9))\nmort_br = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_br, pred_caso_br)]\nmort_eua = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_eua, pred_caso_eua)]\nmort_it = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_italia, pred_caso_italia)]\nmort_su = [round(abs((float(p) \/ float(r))), 2) if p != 0 and r != 0 else 0 for p,r in zip(pred_mortes_suecia, pred_caso_suecia)]\n\n\nplt.plot(futuro_brasil, mort_br, color='blue')\n#plt.plot(futuro_eua, mort_eua, color='red')\nplt.plot(futuro_italia, mort_it, color='green')\nplt.plot(futuro_suecia, mort_su, color='yellow')\n\n\nplt.title('Evolu\u00e7\u00e3o da taxa de mortalidade', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Taxa de mortalidade', size = 30)\nplt.legend(['Brasil','Italia','suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","7efd2583":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, marker='o', color='blue')\nplt.plot(futuro_suecia, pred_mortes_suecia, marker='o', color='yellow')\n\nplt.title('COMPARACAO PREVISAO DE  MORTES BRASIL VS SUECIA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao de mortes', size = 30)\nplt.legend(['Brasil', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","a3c0689f":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_italia, pred_mortes_italia, marker='o',  color='green')\nplt.plot(futuro_eua, pred_mortes_eua, marker='o',  color='red')\n\nplt.title('COMPARACAO PREVISAO DE  MORTES ITALIA VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao mortes', size = 30)\nplt.legend(['Italia', 'Eua'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","77667fda":"plt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, pred_mortes_br, marker='o',  color='blue')\nplt.plot(futuro_eua, pred_mortes_eua, marker='o',  color='red')\n\nplt.title('COMPARACAO PREVISAO DE  MORTES Brasil VS EUA', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('Previsao mortes', size = 30)\nplt.legend(['Brasil', 'Eua'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","c6cb984b":"eua_porc = []\nbr_porc = []\nit_porc = []\nsu_porc = []\n\nfor i in pred_mortes_eua:\n  porc = (i \/ 333545145)*1000000\n  eua_porc.append(porc)\nfor i in pred_mortes_br:\n  porc = (i \/ 217089238)*1000000\n  br_porc.append(porc)\nfor i in pred_mortes_italia:\n  porc = (i \/ 60017348)*1000000\n  it_porc.append(porc)\nfor i in pred_mortes_suecia:\n  porc = (i \/ 10174790)*1000000\n  su_porc.append(porc)\n\nplt.figure(figsize=(20, 9))\nplt.plot(futuro_brasil, br_porc, color='blue')\nplt.plot(futuro_eua, eua_porc, color='red')\nplt.plot(futuro_italia, it_porc, color='green')\nplt.plot(futuro_suecia, su_porc, color='yellow')\n\nplt.title('PROGRESS\u00c3O  DE MORTES PREVISTAS POR MILH\u00c3O DE POP', size=30)\nplt.xlabel('Dias desde o inicio do covid', size = 30)\nplt.ylabel('% de mortes em rela\u00e7\u00e3o a pop', size = 30)\nplt.legend(['Brasil', 'EUA','Italia', 'suecia'],  prop={'size': 20}, loc=\"upper left\")\n\n\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.show()\n","2d62d4e4":"a parte de separar target de dados, e de separar em train e test ser\u00e1 feita na secao de predicao","01b833c7":"Nao podemos esquecer que o brasil tem populacao maior que a da italia, para numeros reais precisariamos do percentual, que sera realizado mais para frente.","a3ab0a61":"## Mortes","5f913de7":"# Previs\u00f5es","4bac33c7":"## Mortes vs confirmados bar chart ","ffe5ab94":"Tendo em vista que o algoritmo de aprendizado de maquina n\u00e3o aceita datas no formato MM\/DD\/AA, nos iremos realizar alguns tratamentos nesses dataframes para conseguir o que queremos, realizaremos os seguinte passos:\n\n\n*   Extrairemos os index das colunas\n*   Extrairemos os numeros de casos de cada pa\u00eds\n*   transformaremos as datas em dias corridos, 1\u00ba dia do covid = 0, segundo = 1,etc..\n*   Escolheremos em quantos dias corridos no futuro queremos fazer a predi\u00e7\u00e3o\n*   transformaremos os dias corridos em datas mm\/dd\/yy\n*   Transpor todos os dataframes\n\n\n\n\n\n\n\n","1f1dc457":"Nessa se\u00e7\u00e3o apenas sera apresentados alguns graficos que nos ajudara a entender como anda a situacao do covid-19 nos 4 paises selecionados","6308bfdd":"Nesta secao construiremos 8 dataframes(tabelas), um de casos confirmados e um de mortes para cada pais. Nesses dataframes nos teremos os casos oficiais e os que nosso programa previu, e ele sera atualizado diretamente.\nAlem desses dataframes iremos refazer os graficos feitos na secao de graficos, porem agora com as previsoes, para ver se o cenario dos paises mudam em rela\u00e7ao um ao outro ","841111f3":"Quando vemos as mortes em relacao a % de populacao reparamos algumas coisas\n\n\n*   A italia ainda eh disparada na frente com mais numeros de mortes\n*   A italia esta indo ao achatamento da curva, enquanto os outros paises estao na subida da curva\n*   A suecia e maior que o dos  EUA\n*   O Brasil esta crescendo de forma mais rapida que os EUA e a Suecia\n\n\n\n\n","b036c5b8":"Ol\u00e1, sou Lucas Marchiori e atualmente(04\/2020) estou cursando o 3\u00ba semestre de Engenharia de Computa\u00e7\u00e3o na Universidade Federal de S\u00e3o Carlos (UFSCar), e me encontro no ramo da computa\u00e7\u00e3o desde o ensino m\u00e9dio, onde fiz tecnico em informatica na Etec de Nova Odessa.\n\nApesar de estar na area de computa\u00e7\u00e3o a um bom tempo ja, eu s\u00f3 fui me encontrar na area de ciencia de dados recentemente,tanto que esse \u00e9 meu primeiro projeto nessa area, onde resolvi usar o tempo livre da quarentena para aprender um pouco dessa area t\u00e3o vasta que vem me interessando cada vez mais.\n\nAtualmente venho procurando estudar mais  sobre ciencia de dados, machine learning e suas \"sub divis\u00f5es\"\n\nAlgus links:\n\nMeu github: https:\/\/bit.ly\/GitLucas    \nMeu Linkedin: https:\/\/bit.ly\/2XJR5Z0\n\nemail para duvidas ou sugest\u00f5es: lucas@estudante.ufscar.br\n","39ef6dda":"Nesta secao nos aplicaremos o algoritmo MLP e regress\u00e3o lienar\ntentar prever o numero de mortes e casos e dos 4 paises nos proximos 60 dias.\n\n\n---\n\nOBS: \nAlgoritmos diferentes est\u00e3o sendo testados para ver qual \u00e9 mais efetivo","d11d8e64":"Nessa parte ser\u00e3o realizados os seguintes passos:\n\n\n*   Transformar os csv disponivel no Git em um dataframe do pandas\n*   Separar em  4 dataframes diferentes: \n      1.   Brasil\n      2.   Estados Unidos\n      3.   Su\u00e9cia\n      4.   It\u00e1lia\n\n\n*   Remover partes do dataframe que n\u00e3o ser\u00e3o usadas\n*   iremos utilizar 3 dataframe para cada pa\u00eds: Confirmados, Mortes e Recuperados\n\n\n\n\n\n\n","58103068":"mesmo caso da italia, precisamos de um percentual para saber como realmente esta","a27eae90":"A suecia parece quase que uma linha reta ao se comparar com EUA e italia, a frente iremos ver em log e  comparar esses paises 2 a 2","cf4b7bdf":"# Leitura de Dados\n\n---\n\n","c8ce06c0":"abaixo, visualizaremos os dataframes transposto","1b7bfce0":" **O QUE PODE-SE REPARAR ATRAVEZ DESSES GRAFICOS DE CASOS:**\n*   A italia esta partindo para a estabiliza\u00e7\u00e3o\n*   Estados unidos Parte para a estabiliza\u00e7\u00e3o\n*   O Brasil assim como a suecia, tendem a ter mais casos percentuais doq os Estados Unidos\n*   O Brasil se encaminha para ser o pais com mais casos\n*   Brasil esta em uma crescente muito grande\n*   A Italia cresceu de forma muito grande percentualmente\n\n\n\n\n","ad573be6":"## Recuperados vs mortos","09b744d3":"Abaixo a media de erro de nossa previsao para os casos \nconfirmados do  brasil e a tabela com as previsoes, casos reais e a diferenca entre os dois.\npor se tratar de previsoes, ha tabelas que nao ha diferencas ainda, pois nosso programa preve 40 dias a frente. \nordem das tabelas:\n\n\n1.  Confirmados Brasil\n2.  Mortos Brasil\n3.  Confirmados EUA\n4.  Mortos EUA\n5.  Confirmados Italia\n6.  Mortos Italia\n7.  Confirmados Suecia\n8.  Mortos Suecia\n\n\n\n\n\n\n\n\n\n","ebebe5f0":"# Introdu\u00e7\u00e3o","bdad59ef":"vemos que a italia esta diminuindo os casos de morte, sua curva esta sendo \"achatada\", enquanto os eua estao so aumentando","3af1ab15":"## Casos","125e3b1f":"repetiremos os mesmos graficos para mortes, e depois faremos graficos de mortes vs recuperados","2dad99e4":"english version: TBD \n\nDataset  disponibilizado por: [CSSEGISandData](https:\/\/github.com\/CSSEGISandData\/COVID-19\/tree\/master\/csse_covid_19_data\/csse_covid_19_time_series)\n\n\n\n\n---\n\n\n**OBS**: Novos algoritmos de previsoes estao sendo constantemente testados\n\n\n---\n\n\n\n---\nobs: a previs\u00e3o da taxa de mortalidade para alguns paises apresentam inconscistencias, por isso nao foi apresentada no grafico\n\n","ef8d7998":"### Estamos conseguindo achatar a curva?","2d91cbaf":"# Apresenta\u00e7\u00e3o dos resultados das previs\u00f5es","f9a26cdf":"# Tratando os dados\n\n","f9c283a4":"\n\n# Apresenta\u00e7\u00e3o de Graficos","2d4d63df":"# Sobre Mim","c0b22196":"controle de vers\u00f5es pelo GIT, clicar no numero da versao levara ao repositorio correspondente a ela\n\n---\n\n\nv1.0 \n\n*   Vers\u00e3o inicial\n\n\n\n[v1.0.1](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/V1.0.1)\n\n\n*   Corre\u00e7\u00e3o de bugs   \n\n[v1.1](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/v1.1.x) \n*   Melhora na previs\u00e3o de casos e mortes no Brasil\n*   Textos traduzidos para o ingles(link acima)\n*   Imports desnecessarios foram excluidos\n*   Corre\u00e7\u00e3o de bugs\n\n[v2.0](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/v2.0.x)\n*   Melhora em alguns graficos\n*   Novos Graficos\n*   Melhora nas tabelas de apresenta\u00e7\u00e3o de resultado\n*   Melhora na previs\u00e3o de casos e mortes nos EUA\n*   Adicionada se\u00e7\u00e3o \"Sobre Mim\"\n\n[v3.0](https:\/\/github.com\/Luscahm\/covid_prediction\/tree\/v3.0.x)\n\n* Melhoras em alguns graficos\n* Visualiza\u00e7\u00f5es do tipo \"Bar Chart race\"\n* grafico em escala log para evolu\u00e7\u00e3o de mortes e casos\n* grafico de mortalidade \n* grafico de novos casos por dia\n* grafico de novas mortes por dia \n* Troca do algoritmo de previs\u00e3o para morte e casos em todos os paises\n* Mais graficos\n* Adicionado Introdu\u00e7\u00e3o\n* Corre\u00e7\u00e3o de bugs\n","05c8fd61":"# Changelog","0f606eff":"No inicio do m\u00eas de mar\u00e7o o Brasil registrou seu primeiro caso de covid-19, o que muitos acharam ser apenas uma doen\u00e7a asiatica, finalmente chegou em meu territorio, e de la at\u00e9 hoje, a situa\u00e7\u00e3o no Brasil s\u00f3 vem piorando, com recordes e recordes de mortes e casos.\n\nLogo no inicio da pandemia no Brasil, universidades pararam, e venho a incerteza que paira no ar at\u00e9 hoje \"com o que estamos lhe dando e at\u00e9 onde pode chegar?\" \u00e9 com essa duvida em mente, que resolvi analisar os dados disponiveis n\u00e3o s\u00f3 para o Brasil, mas tamb\u00e9m paises que sofreram muito com o virus e que eu julguei parecido com o Brasil, por isso aqui iremos analizar e comparar Brasil,EUA,Italia e Suecia,e apos essa pequena analise tentar prever os proximos numeros da doen\u00e7a para esses 4 paises, e comparar eles, para assim, tentar ao menos dar uma clareada na duvida que ja esta a meses pairando no ar.\n\n\n---\n\n\nDisclaimer\/Aviso Legal: Essas informa\u00e7\u00f5es devem servir aos interessados como uma primeira orienta\u00e7\u00e3o. As informa\u00e7\u00f5es gerais aqui contidas, no entanto, n\u00e3o fornecem qualquer garantia. Desse modo, est\u00e1 exclu\u00edda a garantia ou responsabilidade de qualquer tipo, por exemplo, de precis\u00e3o, confiabilidade, completude e atualidade das informa\u00e7\u00f5s\n\n\n---\n\n\n\n---\n\n\n"}}