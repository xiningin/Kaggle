{"cell_type":{"ab7b7ded":"code","050dde8a":"code","8ebe79c4":"code","57e1ad46":"code","361a8dd9":"code","043bb30c":"code","ed860b99":"code","bfa6e191":"code","bdf4ad7e":"code","9fbc8578":"code","330f300d":"code","00712cba":"code","641e1374":"code","2b011605":"code","f285d026":"markdown","0a5f8ae6":"markdown","8cec73b3":"markdown","9c0f1b98":"markdown"},"source":{"ab7b7ded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","050dde8a":"import matplotlib.pyplot as plt","8ebe79c4":"df = pd.read_csv('\/kaggle\/input\/simple-linear-regression-placement-data\/placement.csv')","57e1ad46":"df.head()","361a8dd9":"#Scatter ploting \nplt.figure(figsize=(9,8))\nplt.scatter(df['cgpa'],df['package'])\nplt.xlabel('CGPA')\nplt.ylabel('Package (LPA)')","043bb30c":"# value assigning \nx = df.iloc[:,0:1]\ny = df.iloc[:,-1]","ed860b99":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 2)","bfa6e191":"# importing LineatRegression Model\n\nfrom sklearn.linear_model import LinearRegression\nlr =LinearRegression()","bdf4ad7e":"# Model Training\n\nlr.fit(x_train, y_train)","9fbc8578":"# Predicting the package based on cgpa\n# whith the help of example predictin the output\n\nlr.predict(x_test.iloc[0].values.reshape(1,1))           #shape of our model is 1,1 so we reshape it using reshape function.","330f300d":"# Ploting  Regression Line\n\nplt.figure(figsize=(9,8))\nplt.scatter(df['cgpa'],df['package'])\nplt.plot(x_train,lr.predict(x_train),color = 'red')\nplt.xlabel('CGPA')\nplt.ylabel('Package (LPA)')","00712cba":"# Slope calculation\nm = lr.coef_   ","641e1374":"# Y intercept calculation\nb = lr.intercept_","2b011605":"# y = mx +b \n\nm * 8.58  + b","f285d026":"**Example**","0a5f8ae6":"# Importing Dependencies","8cec73b3":"**Thank You**\n\nPlease UPVOTE if you like my work.","9c0f1b98":"**Verification of above example with the line equation**\n* **y = mx +b**"}}