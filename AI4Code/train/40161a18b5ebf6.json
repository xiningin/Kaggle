{"cell_type":{"32c80d2e":"code","15d995b9":"code","66469a72":"code","ce2b171f":"code","8fd99fd9":"code","3ce297a6":"code","5cd2031f":"code","cc78c4ba":"code","1ae6d597":"code","13ab0599":"code","0bed6dc8":"code","1ca761cc":"code","76ab08f1":"code","adfdb417":"code","2d9c3e45":"code","3e42bae4":"code","c3f82a58":"code","b88f6d83":"code","b1d9347e":"code","f5671215":"code","2bca7748":"code","f622a377":"code","58a2e4dd":"code","c2ba96c0":"markdown","8efb2765":"markdown","a50470af":"markdown","4ac2c753":"markdown","bc81384c":"markdown","1448ad10":"markdown","fcdc9d12":"markdown","00e477d4":"markdown","be470894":"markdown","ce222451":"markdown","38c81646":"markdown","c254f8e6":"markdown","010a9b58":"markdown","0adbc5b2":"markdown","7374c0a4":"markdown","a26c5553":"markdown","c71a6c7c":"markdown","962c80c2":"markdown","e231eaf0":"markdown","c1eda1c0":"markdown"},"source":{"32c80d2e":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n\n%matplotlib inline \nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import InputLayer\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nfrom tensorflow.keras.utils import plot_model\n\n\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report, accuracy_score\n\n!pip install mlxtend\nimport mlxtend as ml\nfrom mlxtend.plotting import plot_confusion_matrix","15d995b9":"# fashion MNIST dataset \nfashion_mnist = keras.datasets.fashion_mnist","66469a72":"# train and test \n(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()","ce2b171f":"# class \nclass_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat','Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","8fd99fd9":"# shap of train  \nX_train.shape","3ce297a6":"# shape labels \ny_train.shape","5cd2031f":"# images\nplt.figure()\nplt.imshow(X_train[0])\nplt.colorbar()\nplt.grid(False)\nplt.show()","cc78c4ba":"# plotting images \nfor i in range(1,4):\n  plt.figure(figsize=(12,6))\n  plt.imshow(X_train[i])\n  plt.colorbar()\n  plt.grid(False)\n  plt.show","1ae6d597":"# preprocessing\nX_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","13ab0599":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(X_train[i],  cmap=plt.cm.binary) #cmap=GnBu\n    plt.xlabel(class_names[y_train[i]])\nplt.show()","0bed6dc8":"model = Sequential([\n                  InputLayer(input_shape=(28,28), name='input_layer'), # input layer\n                  Flatten(name='Flatten'), # Flatten 1D array \n                  Dense(units=128, activation='relu', name='hidden_layer_1'),  # hidden layer 1\n                  Dense(units=54, activation='relu', name='hidden_layer_2'),  # hidden layer 2 \n                  Dense(units=10, activation='softmax', name='output_layer') # output layer (predictions)\n                    ])","1ca761cc":"# summary \nprint(model.summary())","76ab08f1":"model.compile(optimizer=SGD(learning_rate=0.001),\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","adfdb417":"np.random.seed(seed=42)\n\nhistory = model.fit(X_train, y_train, epochs=30, batch_size=64, validation_split=0.20)","2d9c3e45":"# evaluation \ntest_loss, test_acc = model.evaluate(X_test,  y_test, verbose=2)","3e42bae4":"# first metrics the Neural network \nprint('Binary CrossEntropy: {}'.format(test_loss))\nprint('Accuracy: {}'.format(test_acc))","c3f82a58":"# prediction \npredictions = model.predict(X_test)\npredictions","b88f6d83":"# Predict class\nnp.argmax(predictions[0])","b1d9347e":"# metrics for each class \n\ny_pred = model.predict_classes(X_test)\ny_proba = model.predict_proba(X_test)[:,1]\nprint('Acur\u00e1cia: {}'.format(accuracy_score(y_test, y_pred)))\nprint('\\n')\nprint(classification_report(y_test, y_pred))","f5671215":"history.history","2bca7748":"# Accuracy \n\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Accuracy', fontsize=14)\nplt.xlabel('Epoch', fontsize=14)\nplt.ylabel('Accuracy',fontsize=14)\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\n\nprint('\\n')\nprint('\\n')\n\n\n# Cross Entropy  \nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('LogLoss', fontsize=14)\nplt.xlabel('Epoch', fontsize=14)\nplt.ylabel('Loss',fontsize=14)\nplt.legend(['Train', 'Teste'], loc='upper left')\nplt.show()","f622a377":"cm = confusion_matrix(y_test, y_pred)\nplot_confusion_matrix(conf_mat=cm, figsize=(8,8)) # test argument called:  \"class_names\"\nplt.title('Confusion Matrix', fontsize=14)\nplt.tight_layout()","58a2e4dd":"plot_model(model, \"multi_layer_perceptron.png\", show_shapes=True)","c2ba96c0":"<br>\n<hr>\n<br>\n\n\n### 1. Fundamental frameworks \n\n\n<br>","8efb2765":"<br>\n<br>\n\n\n\n### Visualize Architecture\n\nLastly, Finally, we will visualize our neural network and its structure through a summary that shows, each layer that makes up the neural network made by you.\n\n\n<br>","a50470af":"<br>\n\nHistory is an object that stores the entire training history of the Neural Network\nStoring Epochs and their errors. The \"historical\" object returned keeps a record of loss values and metrics during training\n\n\n<br>","4ac2c753":"<br>\n<br>\n\n### Confusion Matrix \n\n\nFor MultiClass problems is very importante analyze, all metrics for each of the classes. \n\n<br>","bc81384c":"Let's go to the code, let's use the <b> Fashion MNITS <\/b> dataset is well known as it is a test suite.","1448ad10":"<br>\n\n\n<b> Functioning of artificial neural networks<\/b>\n\nHaving a neural network assembled, a series of values can be applied to a neuron, which is connected to others by the network. These values (or inputs) are multiplied in the neuron by the value of the weight of its synapse. Then, these values are added up. If this sum exceeds an established limit value, a signal is propagated through the output (axon) of this neuron. Then, this same step takes place with the other neurons in the network. This means that neurons will face some type of activation, depending on the inputs and synaptic weights.\n\nThere are several ways to develop a neural network. It must be assembled according to the problem (s) to be solved. Its architecture determines the number of layers used (the layers are made up of neurons), the number of neurons in each layer, the type of synapse used, etc.\n\nthe gif below shows how a 4 layer multilayer perceptron neural network works.\n\n\n\n\n\n\n<br>\n<br>\n\n\n <center><img src=\"https:\/\/cdn.lowgif.com\/full\/a8440c540b7ccbfc-will-capsule-networks-replace-traditional-neural-networks.gif\"><\/center>\n\n\n\n\n<br>\n<br>\n\n\nThe learning process of neural networks takes place when there are several significant changes in the synapses of neurons. These changes occur according to the activation of neurons. If certain connections are used more, they are reinforced while the others are weakened. That is why when an artificial neural network is implanted for a given application, it takes time for it to be trained.\n\n\n","fcdc9d12":"<br>\n<hr>\n<br>\n<br>\n\n<b>Thank you for following this notebook and good studies! soon we will cover more advanced topics in Deep learning and other neural network architectures, until reaching the State of the art. <\/b> \n\n\n\n<br>\n\n","00e477d4":"<br>\n\n\nWe will scale these values in the range of 0 and 1 before before feeding the neural network model. To do this, we divide the values by 255. It is important that the training set and the test set can be pre-processed in the same way:\n\n\n<br>","be470894":"<br>\n\nThe images are 28x28 NumPy arrays, with pixel values between 0 to 255. The labels (target of classification) are an array of integers, in the range 0 to 9. This corresponds with the class of clothes that each image represents:\n\n* 0\tT-shirt\/top\n* 1\tTrouser\n* 2\tPullover\n* 3 Dress\n* 4\tCoat\n* 5\tSandal\n* 6\tShirt\n* 7 Sneaker\n* 8 Bag\n* 9\tAnkle boot","ce222451":"<br>\n<br>\n<hr>\n\n\n\n### Learning curve\n\nWe will plotting the learning curve for analyze the behavior the Neural network.\n\n\n<br>","38c81646":"<br>\n\nIn this next step, We will compile the model, Let's insert some more parameters.\n\n* <b>Optmizer<\/b>: We will use Stochastic Gradient descent with Optimizer in our Network, We called the SGD, Responsible for calculating the gradients of the layers. \n\n\n* <b>Loss<\/b>: The loss function is the function, That we want to minimize, in multiclass classification we use Softmax. \n\n\n* <b>Metric<\/b>: This is metric, where model will be guided, most metrics for classification, We will use the Accuracy. \n\n\n<br>","c254f8e6":"<br> \n\nIt is a problem originated from Computer Vision that we want to solve, which will be to classify the garments through their representations\n\n<br>","010a9b58":"<br>\n\nlater I will speak to serve the Historical object\n\n<br>","0adbc5b2":"<br>\n\nBelow is just a demonstration of how to view images in black and white\n\n\n<br>","7374c0a4":"<br>\n\nAnd Finally, We will can train our model! let's go\n\n\n* <b> Epoch <\/b>: An epoch is a measure of the number of times all of the training vectors are used once to update the weights. For batch training all of the training samples pass through the learning algorithm simultaneously in one epoch before weights are updated.\n\n<br>\n\n\n* <b> Batch_size <\/b>: The batch size is a number of samples processed before the model is updated. The number of epochs is the number of complete passes through the training dataset. The size of a batch must be more than or equal to one and less than or equal to the number of samples in the training dataset.\n\n<br> \n\nOnce again I will use random values, as our goal is for a didactic purpose\n\n<br>","a26c5553":"<br>\n<br>\n\n\nAt first we will plot some images and check the classes (you can check this in the dataset) I will not focus on exploration, but on the part of the construction of the neural network and its specific attributes.\n\n\n<br>\n<br>","c71a6c7c":"<hr>\n<br>\n\n\n\n### <b>Building Neural Network<\/b>\n\n\nOk in this step, We will build the architecture of Neural Network.\n\nArchitecture: \n\n* <b>InputLayer<\/b>: This layer is responsible to receive The features of the data set, in the case of our problem the images have 3 dimensions (60000, 28.28) are 28x28 images in the case we should have 28 * 28 = 784, input neurons\n(the amount depends on the format and the number of features of your problem)\n\n<br>\n\n* <b> Flatten<\/b>: This layer is specific, because We use for reshape features into 1D array, Flattens the input, Does not affect the batch size, serialize the tensor for the next layer.\n\n<br>\n\n* <b> Hidden Layer 1 <\/b>: This is first hidden layer on our network, it will consist of 128 neurons and will use an activation function called \"reLu\" (there are other activation functions available)\nI put 128 neurons in a playful way and without any reference, the goal is to understand the structure of a neural network built using TensorFlow.\n\n<br>\n\n* <b> Hidden Layer 2 <\/b>: This is ours second hidden layer, it will consist of 54 neurons and also will use activation function \"reLu\"\n\n<br>\n\n* <b> Output Layer <\/b>: Finally, ours last layer in neural network the output layer is found by 10 neurons representing the 10 classes we have (in a playful way you can think of, as a specific final neuron for that class) your activation function is \"Softmax\" this activation fuction is specific for MultiClass problems. \n\n<br>\n<br>\n\n\n\n\n\n\n","962c80c2":"## Neural networks\n\n<br>\n\nHi everyone, In this notebook We will study about Neural networks and small introduction in Deep learning and its concepts. We will using the Tensorflow, as principal framework for the studies. \n\n\nTensorFlow is the library Deep learning of Google.\n\n<br>\n\n\n<b> What is Neural Networks ? <\/b> \n\nNeural Networks are the main models in the area of \u200b\u200bDeep Learning, \ndefinitely are most popular models in Deep learning. The neural network are based in the human brain, with structure the artificial neurons, That are \nwhat do the network learn from the data. Artificial Neural Networks are computational techniques that present a mathematical model inspired by the neural structure of intelligent organisms and that acquire knowledge through experience. A large artificial neural network can have hundreds or thousands of processing units; a mammalian brain can have many billions of neurons.\n\nThe nervous system is made up of an extremely complex set of cells, neurons. They play an essential role in determining the functioning and behavior of the human body and reasoning. Neurons are formed by dendrites, which are a set of input terminals, by the central body, and by axons, which are long output terminals.\n\n<br>\n\n\n<b> Neural Network and your Structured <\/b>  \n\nNeurons communicate through synapses. Synapse is the region where two neurons come into contact and through which nerve impulses are transmitted between them. The impulses received by a neuron A, at a given moment, are processed, and reaching a given action threshold, neuron A fires, producing a neurotransmitter substance that flows from the cell body to the axon, which can be connected to a dendrite of another B neuron. The neurotransmitter can decrease or increase the polarity of the postsynaptic membrane, inhibiting or exciting the generation of pulses in neuron B. This process depends on several factors, such as the geometry of the synapse and the type of neurotransmitter.\n\nOn average, each neuron forms between one thousand and ten thousand synapses. The human brain has about 10 E11 neurons, and the number of synapses is more than 10 E14, enabling the formation of very complex networks.\n\n<br>\n\n<p align=center>\n<img src=\"https:\/\/miro.medium.com\/max\/1220\/1*mzWqY5snL5pYrKo7r5-HZg.png\" width=\"70%\"><\/p>\n\n\n\n\n\n\n\n<br>\n<br>\n<br>\n<hr>\n<br>\n","e231eaf0":"<br>\n\nStarting this metrics, We got analyze the Overfitting and understand behavior the neural network. \n\n\nThey are widely used after the creation and evaluation of the network\n\n<br>","c1eda1c0":"<br>\n\nSummary fo the built neural network, with him We can visualize the complete architecture.\n\n<br>"}}