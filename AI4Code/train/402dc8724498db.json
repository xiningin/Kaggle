{"cell_type":{"3d292f21":"code","1be76196":"code","8f353d05":"code","132dfec5":"code","63e7034c":"code","b6cf0c27":"code","1fac3ae8":"code","7284ea56":"code","ab33e5f4":"code","21c9c484":"code","6be7fa68":"code","45878825":"code","f40533f4":"code","dcf3b0f7":"code","29f16f89":"code","0fc0f9f8":"code","a34d90df":"code","68d42977":"code","7701599e":"code","208e21c6":"code","a686fd5e":"code","0d01162d":"code","4d19c7a1":"code","e02d7402":"code","30d72b3d":"code","04569fa4":"code","5ecdc8c5":"code","13d81eff":"code","4115637b":"code","4584c92c":"code","ed76ef5e":"code","8e94b405":"code","67a1f631":"code","3e2ecb30":"code","3c443014":"code","aef1e454":"code","cd2a07f9":"code","0e85ed2b":"code","a84e8fc2":"code","2f9e436e":"code","957d5950":"code","4fa67aad":"code","819b2dae":"code","7ed64bd3":"code","b65bcc94":"code","6dd6cfc3":"code","a00ac9a7":"code","d96c81c5":"code","87333cfe":"code","f8238e24":"code","b997c737":"code","7d8427c5":"code","ad05a18e":"code","d05b345d":"code","14731362":"code","5723b2bb":"code","1f030e49":"code","199c6fe9":"code","f402bfa5":"code","ec2d5ea9":"code","0d602366":"code","59ffc7a4":"code","b6c12fd4":"code","b6595e35":"code","ee88218e":"code","473609a0":"code","7c74fd02":"code","c4dfbf31":"code","144233f3":"code","a69d788a":"code","839e7321":"code","109baeb8":"code","f129cc27":"code","bc01e2a4":"code","5fb9c5c5":"code","5a35d94a":"code","009abbb9":"code","88fba1c5":"code","aa33c295":"code","b62e687f":"code","ec3e04ab":"code","8a476a0e":"code","854f844f":"code","016f0768":"code","4dbe53e0":"code","8513d704":"code","30e53fd7":"code","b55564ac":"code","89e2bd5a":"code","2695bfcc":"code","2699214e":"code","1b56d7ec":"code","ca51a026":"code","789e38a9":"code","fa97fa77":"code","65054801":"code","ce776c59":"code","4907a65f":"code","fd4cce68":"code","8ba55531":"code","e81e0b8a":"code","802e8276":"code","65fff392":"code","aaf84ff1":"code","9f987719":"code","9f1dded0":"code","c685554e":"code","37e01c20":"code","a5a497eb":"code","679465af":"code","fea57b27":"code","a98966f3":"code","b011fdf6":"code","aefca222":"code","0631b8ad":"code","dbade148":"code","cbd3a18b":"code","ba13d53e":"code","26f68123":"markdown","f74d36ac":"markdown","c86da98e":"markdown","8c168a32":"markdown","6e64b491":"markdown","a7c0293b":"markdown","d2b7d969":"markdown","7b274423":"markdown","ed1f97a1":"markdown","0fa55ac9":"markdown","7e7db570":"markdown","8bab3a48":"markdown","ef62b0ab":"markdown","be264a15":"markdown","79b4b65b":"markdown","cfdb8783":"markdown","d70912c9":"markdown","023f2ffe":"markdown","cc9ef0bb":"markdown","2d8370ea":"markdown","8761975d":"markdown"},"source":{"3d292f21":"print(\"Hello World\")","1be76196":"v_message = \"H\u0130 FR\u0130ENDS!\"\nprint(\"Hi\")","8f353d05":"print(v_message)","132dfec5":"v_name = \"ilayda\"\nv_surname = \"tepeyurt\"\nv_fullname = v_name + v_surname\nprint(v_fullname)","63e7034c":"v_fullname = v_name + \" \" + v_surname\nprint(v_fullname)","b6cf0c27":"v_num1 = \"100\"\nv_num2 = \"200\"\nv_numsum1 = v_num1 + v_num2\nprint(v_numsum1)","1fac3ae8":"#lenght\nv_lenfull = len(v_fullname)\nprint(\"v_fullname : \" , v_fullname , \"and lengt is : \" , v_lenfull)","7284ea56":"v_titleF = v_fullname.title()\nprint(\"v_fullname : \" , v_fullname , \"and title is : \" , v_titleF)","ab33e5f4":"#upper\nv_upperF = v_fullname.upper()\nprint(\"v_fullname : \" , v_fullname , \"and upper is : \" , v_upperF)\n\n#lower\nv_lowerF = v_fullname.lower()\nprint(\"v_fullname : \" , v_fullname , \"and lower is : \" , v_lowerF)","21c9c484":"v_2ch = v_fullname[7]\nprint(v_2ch)","6be7fa68":"v_num1 = 100\nv_num2 = 200\nv_sum1 = v_num1 + v_num2\nprint(v_num1 , \"and type is:\" , type(v_sum1))\n","45878825":"v_num1 = v_num1 + 50\nv_num2 = v_num2 - 25.5\nv_sum1 = v_num1 + v_num2\n\nprint(v_num1)","f40533f4":"print(\"v_sum1 :\" , v_sum1 , \"and type is: \" , type(v_sum1))","dcf3b0f7":"v_fl1 = 25.5\nv_fl2 = 15.5\nv_s3 = v_fl1 + v_fl2\nprint(v_s3, type(v_s3))","29f16f89":"def f_SayHello():\n    print(\"hi. I am from f_SayHello\")\n    \ndef f_SayHello2():\n        print(\"hi. I am from f_SayHello2\")\n        print(\"Good\")\n        \nf_SayHello()","0fc0f9f8":"f_SayHello2()\n","a34d90df":"def f_saymessage(v_message1):\n    print(v_message1 , \"came from 'f_saymessage'\")\n    \ndef f_getfullname(v_firstname , v_surname , v_age):\n    print(\"welcome\" , v_firstname ,\" \" , v_surname ,\"your age :\" , v_age)\n    ","68d42977":"f_saymessage(\"what about you?\")","7701599e":"f_getfullname(\"\u0130LAYDA\" , \"TEPEYURT\" , 16)\n","208e21c6":"def f_calc1(f_num1 , f_num2 , f_num3):\n    v_sonuc = f_num1 + f_num2 + f_num3\n    print(\"sonuc = \" , v_sonuc)\n    ","a686fd5e":"f_calc1(80 , 50 , 50)","0d01162d":"#return fonction\ndef f_calc2(v_num1 , v_num2 , v_num3):\n    v_out = v_num1 + v_num2 + v_num3*3\n    print(\"hi from f_calc2\")\n    return v_out\n","4d19c7a1":"v_gelen = f_calc2(1,2,4)\nprint(\"score is :\" , v_gelen)","e02d7402":"#default functions :\ndef f_getschool\u0131nfo(v_name , v_studentcount , v_city = \"istanbul\"):\n    print(\"name : \" , v_name , \"st count : \" , v_studentcount ,\"city : \" , v_city)\n    \n","30d72b3d":"f_getschool\u0131nfo(\"AAIHL\" , \"380\")\nf_getschool\u0131nfo(\"AAIHL\" , \"380\" , \"G\u0130RESUN\")\nf_getschool\u0131nfo(\"AA\u0130HL\" , \" \" , \"ANKARA\")","04569fa4":"\n#flexible functions :\ndef f_flex1(v_name , *v_messages):\n    print(\"hi\" , v_name , \"your first message : \" , v_messages[2])\n    ","5ecdc8c5":"f_flex1(\"ilayda\" , \"hello\" , \"what's up\" , \"what about you\")\n","13d81eff":"#lambda function\nv_result = lambda x : x*3\nprint(\"result is : \" , v_result(6))","4115637b":"def f_alan(v_kenar1,v_kenar2):\n    print(v_kenar1*v_kenar2)","4584c92c":"f_alan(2,2)","ed76ef5e":"l_list=[1,2,3,4,5,6,7]\nprint(l_list)\nprint(\"the type of l_list : \" , type(l_list))\n","8e94b405":"l_list2=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nprint(l_list2)\nprint(\"type of'l_list2':\" ,type(l_list))","67a1f631":"i_list2_4=l_list2[4]\nprint(i_list2_4)\nprint(\"type of 'i_list2_4'is:\",type(i_list2_4))","3e2ecb30":"i_list_3=l_list2[-4]\nprint(i_list_3)","3c443014":"i_list_2=l_list2[0:5]\nprint(i_list_2)\n","aef1e454":"#Len\nr_len_i_list_2=len(i_list_2)\nprint(\"size of'i_list_2' is:\", r_len_i_list_2)\nprint(i_list_2)","cd2a07f9":"#Append\ni_list_2.append(\"Saturday\")\nprint(i_list_2)\n\ni_list_2.append(\"Sunday\")\nprint(i_list_2)","0e85ed2b":"#Reverse\ni_list_2.reverse()\nprint(i_list_2)","a84e8fc2":"#Sort\ni_list_2.sort()\nprint(i_list_2)","2f9e436e":"#Remove\n#firs add 'saturday' then remove 'saturday'\ni_list_2.append(\"Saturday\")\nprint(i_list_2)","957d5950":"i_list_2.remove(\"Saturday\")\nprint(i_list_2)","4fa67aad":"i_dict = {\"Home\":\"Ev\" , \"Color\":\"Renk\" , \"Table\":\"Masa\" , \"Mirror\":\"Ayna\"}\n\nprint(i_dict)\nprint(type(i_dict))","819b2dae":"v_color = i_dict[\"Color\"]\nprint(v_color)\nprint(type(v_color))","7ed64bd3":"#keys and values\nv_keys = i_dict.keys()\nv_values = i_dict.values()\n\n\nprint(v_keys , \"and type is :\",type(v_keys))\nprint(v_values , \"and type is :\", type(v_values))","b65bcc94":"v_var1 = 10\nv_var2 = 30\nif v_var1 > v_var2:\n    print(v_var1 , \"is greater then\" , v_var2)\n    \nelif v_var1 < v_var2:\n    print(v_var1 , \"is smiller then\" , v_var2)\n    \nelse :\n    print(\"this 2 variables are equel\")\n    \n    ","6dd6cfc3":"#< , > , <= , >= , == , <>\ndef f_Comparison1(v_comp1 , v_comp2):\n    if v_comp1 > v_comp2:\n        print(v_comp1 , \"is greater then\" , v_comp2)\n    \n    elif v_comp1 < v_comp2:\n        print(v_comp1 , \"is smiller then\" , v_comp2)\n    \n    else :\n        print(\"this\" , v_comp1 , \"variables are equel\")\n        \nf_Comparison1(22,35)\nf_Comparison1(22,15)\nf_Comparison1(13,13)\n\n    ","a00ac9a7":"#using \"\u0130N\" with list\n\ndef f_includeornot(v_search , v_searchList) :\n    if v_search in v_searchList :\n        print(\"good news !\" , v_search , \"is in list.\")\n    else : \n        print(v_search , \"is not in list. Sorry!\")\n        \nl_list = list(i_dict.keys())\nprint(l_list)\nprint(type(l_list))\n\nf_includeornot(\"Home\",l_list)\nf_includeornot(\"Pencil\",l_list)","d96c81c5":"for a in range(0,5):\n    print(a,\"TH\u0130S \u0130S MY PYTHON\")","87333cfe":"fav_song=\"DUSK T\u0130LL DAWN\"\nprint(fav_song)","f8238e24":"for v_font in fav_song:\n    print(v_font)\n    print(\"------\")","b997c737":"for v_font in fav_song.split():\n    print(v_font)","7d8427c5":"i_list3=[1,2,3,4,5,6]\nprint(i_list3)","ad05a18e":"print(i_list3)\ni_sum_list3= sum(i_list3)\nprint(\"sum of i_list3 is : \" , i_sum_list3)\n\nprint()\ni_cumlist3=0\ni_loopindex=0\n\nfor v_current in i_list3:\n    i_cumlist3=i_cumlist3 + v_current\n    print(i_loopindex , \"nd value is : \" , v_current)\n    print(\"cumulative is : \" , i_cumlist3)\n    \n    i_loopindex= i_loopindex + 1\n    print(\"------\")","d05b345d":"i = 0\nwhile(i < 3) :\n    print(\"YOU W\u0130LL WR\u0130TE\" ,i, \"SENTENCES\")\n    \n    i=i+2\n\n","14731362":"print(i_list3)\nprint()\n\ni=0\nx=len(i_list3)\n\nwhile(i<x):\n    print(i_list3[i])\n    i=i+1","5723b2bb":"#let's find minimum and maximum number in list\n\ni_list4=[11,-35,700,60,-55]\n\nv_min=0\nv_max=0\n\nv_index=0\nv_len=len(i_list4)\n\nwhile(v_index<v_len):\n    v_current=i_list4[v_index]\n    \n    if v_current>v_max:\n        v_max=v_current\n        \n    if v_current<v_min:\n        v_min=v_current\n        \n        \n    v_index=v_index+1\n    \n    \nprint(\"max. number is : \" , v_max)\nprint(\"min. number is : \" , v_min)\n        ","1f030e49":"#import library to use\nimport numpy as np","199c6fe9":"v_array1=[1,2,3,4,5,6,7,8,9,10]\nv_array2_np=np.array([1,2,3,4,5,6,7,8,9,10])","f402bfa5":"print(\"v_array1:\", v_array1)\nprint(\"the type is : \", type(v_array1))","ec2d5ea9":"print(\"v_array2_np:\", v_array2_np)\nprint(\"the type is:\",type(v_array2_np))","0d602366":"#shape\nr_shape1=v_array2_np.shape\nprint(\"r_shape is:\" , r_shape1,\"and type is :\" , type(r_shape1))","59ffc7a4":"#reshape\nv_reshape1=v_array2_np.reshape(2,5)\nprint(v_reshape1)","b6c12fd4":"v_reshape2=v_reshape1.shape\nprint(\"v_reshape2:\", v_reshape2, \"and type is:\", type(v_reshape2))","b6595e35":"#dimension\nr_dimen1=v_array2_np.ndim\nprint(\"r_dimen1:\",r_dimen1, type(r_dimen1) )","ee88218e":"#dtype.name\nr_dtype1=v_array2_np.dtype.name\nprint(\"r_dtype1:\",r_dtype1,\"the type of:\", type(r_dtype1))","473609a0":"#size\nr_size1=v_array2_np.size\nprint(\"r_size1:\",r_size1,\"the type of:\",type(r_size1))","7c74fd02":"#let's create 3x4 array\nv_array3_np=np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(v_array3_np)\nprint(\"--------\")\nprint(\"shape is:\",v_array3_np.shape)","c4dfbf31":"#zeros\nv_array4_np=np.zeros((3,6))\nprint(v_array4_np)","144233f3":"#Update an item on this array\nv_array4_np[0,5]=21\nprint(v_array4_np)","a69d788a":"v_array5_np=np.ones((4,4))\nprint(v_array5_np)","839e7321":"#empty\nv_array6_np=np.empty((2,4))\nprint(v_array6_np)","109baeb8":"#arrange\nv_array7_np=np.arange(10,40,10)\nprint(v_array7_np)\nprint(v_array7_np.shape)","f129cc27":"#linspace\nv_array8_np=np.linspace(10,40,5)\nv_array9_np=np.linspace(4,32,4)\n\nprint(v_array8_np)\nprint(v_array8_np.shape)\nprint(\"the type is:\",type(v_array8_np))\nprint(\"--------\")\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"the type is:\",type(v_array9_np))","bc01e2a4":"#SUM,SUBTRACT,SQUARE\nv_np1=np.array([2,4,6])\nv_np2=np.array([3,6,9])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** v_np2)","5fb9c5c5":"#sinus\nprint(np.sin(v_np2))","5a35d94a":"#true \/ false\nv_np2_TF=v_np2<7\nprint(v_np2_TF)\nprint(v_np2.dtype.name)","009abbb9":"#element wise product\nv_np1=np.array([1,2,3])\nv_np2=np.array([2,4,6])\nprint(v_np1 * v_np2)\nprint(\"the type is:\",type(v_np1 * v_np2))","88fba1c5":"#Transpose\nv_np4=np.array([[1,2,3,4,5],[6,7,8,9,10]])\nv_np4Transpose=v_np4.T\nprint(v_np4)\nprint(v_np4.shape)\nprint()\nprint(v_np4Transpose)\nprint(v_np4Transpose.shape)","aa33c295":"# Matrix Multiplication\nv_np5 = v_np4.dot(v_np4Transpose)\nprint(v_np5)","b62e687f":"# Exponential --> We will use on Statistics Lesson\nv_np4Exp= np.exp(v_np4)\nprint(v_np4)\nprint(v_np4Exp)","ec3e04ab":"# Random \nv_np7 = np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(v_np7)","8a476a0e":"#sum , max , min\nv_np7sum=v_np7.sum()\nprint(\"Sum of array : \", v_np7sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", v_np7.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", v_np7.min()) #--> Remember ! If you get min of array we can use that :  min(array1)\nprint(\"the type of v_np7sum:\", type(v_np7sum))","854f844f":"# Sum with Column or Row\nprint(\"Sum of Columns :\")\nprint(v_np7.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(v_np7.sum(axis=1)) #Sum of Rows","016f0768":"# Square , Sqrt\nprint(v_np7)\nprint()\nprint(np.sqrt(v_np7))\nprint()\nprint(np.square(v_np7))","4dbe53e0":"# Add\nv_np9 = np.array([2,4,6,8,10])\nv_np10 = np.array([10,30,40,60,70])\n\nprint(np.add(v_np9,v_np10))","8513d704":"v_np10 = np.array([2,4,6,8])\n\nprint(\"First item is : \" , v_np10[0])\nprint(\"Third item is : \" , v_np10[2])","30e53fd7":"# Get top 3 rows :\nprint(v_np10[0:3])","b55564ac":"# Reverse\nv_np10_Rev = v_np10[::-1]\nprint(v_np10_Rev)","89e2bd5a":"v_np11 = np.array([[1,2,3,4],[11,12,13,14]])\nprint(v_np11)\nprint()\nprint(v_np11[1,3]) #--> Get a row\n\nprint()\nv_np11[1,3] = 314 #--> Update a row\nprint(v_np11)","2695bfcc":"# Get all rows but 3rd columns :\nprint(v_np11[:,2])","2699214e":"#Get 2nd row but 2,3,4th columns\nprint(v_np11[1,1:4])\n","1b56d7ec":"# Get last row all columns\nprint(v_np11[-1,:])","ca51a026":"# Get last columns but all rows\nprint(v_np11[:,-1])","789e38a9":"#Flatten\nv_np12 = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])\nv_np13 = v_np12.ravel()\n\nprint(v_np12)\nprint(\"Shape of v_np12 is : \" ,v_np12.shape)\nprint()\nprint(v_np13)\nprint(\"Shape of v_np13 is : \" ,v_np13.shape)\nprint()","fa97fa77":"# Reshape\nv_np15 = v_np13.reshape(3,4)\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)","65054801":"v_np16 = np.array([[1,2],[3,4],[5,6]])\n\nprint(v_np16)\nprint()\nprint(v_np16.reshape(2,3))\n\nprint()\nprint(v_np16) #--> It has not changed !!","ce776c59":"# Resize\nv_np16.resize((2,3))\nprint(v_np16) # --> Now it changed !  Resize can change its shape","4907a65f":"v_np17 = np.array([[1,2],[3,4]])\nv_np18 = np.array([[5,6],[7,8]])\n\nprint(v_np17)\nprint()\nprint(v_np18)","fd4cce68":"# Vertical Stack\nv_np19 = np.vstack((v_np17,v_np18))\nv_np20 = np.vstack((v_np18,v_np17))\n\nprint(v_np19)\nprint()\nprint(v_np20)\n","8ba55531":"# Horizontal Stack\nv_np21 = np.hstack((v_np17,v_np18))\nv_np22 = np.hstack((v_np18,v_np17))\n\nprint(v_np21)\nprint()\nprint(v_np22)","e81e0b8a":"v_list1 = [1,2,3,4]\nv_np23 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np23)\nprint(\"Type of v_np23 : \" , type(v_np23))","802e8276":"v_list2 = list(v_np23)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","65fff392":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","aaf84ff1":"v_list2[0] = 30\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","9f987719":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","9f1dded0":"v_list2[0] = 88\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","c685554e":"# Import Library\nimport pandas as pd","37e01c20":"# Let's create Data Frame from Dictionary\nv_dict1 = { \"LESSON\" : [\"MATH\",\"HISTORY.\",\"CHEM\u0130STRY\",\"BIYOLOGY\"],\n            \"PO\u0130NT\":[\"85\",\"90\",\"80\",\"86\"],\n            \"HOUR\":[\"6\",\"2\",\"2\",\"2\"]}\n\nv_dataFrame1 = pd.DataFrame(v_dict1)\n\nprint(v_dataFrame1)\nprint()\nprint(\"Type of v_dataFrame1 is : \" , type(v_dataFrame1))","a5a497eb":"# get top 5 rows\nv_head1 = v_dataFrame1.head()\nprint(v_head1)\nprint()\nprint(\"Type of v_head1 is :\" ,type(v_head1))","679465af":"# get top 100 rows\nprint(v_dataFrame1.head(100))","fea57b27":"# get last 5 rows\nv_tail1 = v_dataFrame1.tail()\nprint(v_tail1)\nprint()\nprint(\"Type of v_tail1 is :\" ,type(v_tail1))","a98966f3":"# Columns\nv_columns1 = v_dataFrame1.columns\nprint(v_columns1)\nprint()\nprint(\"Type of v_columns is : \" , type(v_columns1))","b011fdf6":"v_info1 = v_dataFrame1.info()\nprint(v_info1)\nprint()\nprint(\"Type of v_info1 is : \" , type(v_info1))","aefca222":"v_dtypes1 = v_dataFrame1.dtypes\nprint(v_dtypes1)\nprint()\nprint(\"Type of v_dtypes1 is : \" , type(v_dtypes1))","0631b8ad":"v_descr1 = v_dataFrame1.describe()\nprint(v_descr1)\nprint()\nprint(\"Type of v_descr1 is : \" , type(v_descr1))","dbade148":"v_lesson1 = v_dataFrame1[\"LESSON\"]\nprint(v_lesson1)\nprint()\nprint(\"Type of v_lesson1 is : \" , type(v_lesson1))","cbd3a18b":"#add new columns\nv_topic1 = [\"NUMBERS\",\"WAR\",\"ATOMS\",\"CELL\"]\nv_dataFrame1[\"TOPIC\"] = v_topic1\nprint(v_dataFrame1.head())","ba13d53e":"# Get all rows ,  1 column\n\ne_city=e_dataframe.loc[:,\"City\"]\nprint(e_city)\nprint()\nprint(\"type of e_city is:\",type(e_city))","26f68123":"*\n8.5.Stacking Arrays*","f74d36ac":"**7)WH\u0130LE LOOP**","c86da98e":"**4)D\u0130CT\u0130ONARY**","8c168a32":"**6)FOR LOOP**","6e64b491":"*\n8.2. Indexing and Slicing*","a7c0293b":"*8.6.Convert and Copy Array*","d2b7d969":"**9.2.Basic Methods**","7b274423":"BASIC","ed1f97a1":"**2)FUNCTIONS**","0fa55ac9":"**\u0130NTRODUCT\u0130ON**","7e7db570":"*8.1)BAS\u0130C*","8bab3a48":"*2.2)NUMBERS*","ef62b0ab":"**9.3.Indexing and Slicing**","be264a15":"*8.1)BAS\u0130C OPERAT\u0130ONS*","79b4b65b":"*8.4.Shape Manipulation*","cfdb8783":"**5)IF ELSE**","d70912c9":"**1)VARIABLES**","023f2ffe":"**3)L\u0130ST**","cc9ef0bb":"**9. Pandas**","2d8370ea":"*1.1)Strings*","8761975d":"### **8)NUMPY**"}}