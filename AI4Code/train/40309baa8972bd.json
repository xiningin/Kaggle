{"cell_type":{"ea9ad1e4":"code","2d0bbd6f":"code","e17215ed":"code","647565c5":"code","f129f364":"code","2239fb49":"code","ec4b0788":"code","f7f9187b":"code","8cf8645c":"code","e6eba8db":"code","d409ba22":"code","8ab1450d":"code","39b941b3":"markdown","a05c725f":"markdown","4b17da6b":"markdown","86a95f9a":"markdown","8e2826a5":"markdown","6708709d":"markdown","e6c4dbbf":"markdown","9a130779":"markdown","110268dc":"markdown","1a3f5ca6":"markdown"},"source":{"ea9ad1e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2d0bbd6f":"data=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")","e17215ed":"data.info()","647565c5":"data.head(10)","f129f364":"data[\"class\"] = [1 if each == \"Abnormal\" else 0 for each in data[\"class\"]]","2239fb49":"data.head()","ec4b0788":"y=data[\"class\"].values\nx_data=data.drop([\"class\"],axis=1)","f7f9187b":"#normalization\nx=(x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))","8cf8645c":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","e6eba8db":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)","d409ba22":"print(\"{}, nn accuracy {}\".format(3,knn.score(x_test,y_test)))","8ab1450d":"score_list = []\nfor each in range(1,15):\n    knn2=KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n\n #visualization   \nplt.figure(figsize=(10,10))\nplt.plot(range(1,15),score_list,color=\"black\")\nplt.legend()\nplt.xlabel=('n_neigbors values')\nplt.ylabel=('accuracy')\nplt.show()\n    ","39b941b3":"I split my data beacuse I trained my machine some data then I will correlate my test data ","a05c725f":"Firstly, I register the data into data variable","4b17da6b":"I did normalization here because of better correlation","86a95f9a":"I created y and x variables for make train and test split ","8e2826a5":"I trained my machine here and wanted that it can predict by x_test","6708709d":"we see above a graphic.What are it saying us. It says us the points are 5 and 7 for the prediction must be the best ","e6c4dbbf":"I observe data here","9a130779":"I get information here about data ","110268dc":"I changed Abnormal = 1 and Normal=0 for machine train because skleran works categorical type or integer type ","1a3f5ca6":"I learned here that how long make prediction errorless but in your opinion the machine make prediction better that acorrding to old prediction. We see"}}