{"cell_type":{"71cf0949":"code","599dac8f":"code","86cca154":"code","0aaa12a5":"code","49b43874":"code","2a0e654b":"code","7f129cd4":"code","f3f64dc2":"code","2db7ce73":"code","346313ab":"code","3af42a5e":"code","ca3b9dd2":"code","393b8367":"code","16372dc9":"code","9c5326fb":"code","e6b6aa9f":"code","8e2dc4d7":"code","a7ed5cea":"code","35051239":"code","d0966403":"code","3e4d833a":"code","6d23542d":"code","52f8cbca":"code","91c5b845":"code","c8225c91":"code","d7b28608":"code","74241cce":"code","e2c4422a":"code","be451fe9":"code","ac00c122":"code","172cd051":"code","c8503cdd":"code","9c9f3388":"code","e6bee5e0":"code","1e9b11e5":"code","4fa3b148":"code","c4c58132":"code","da4c66db":"code","8faf920a":"code","efa0ef88":"code","ea56bf22":"code","5047bf5e":"code","d3253f0c":"code","ad9aac2a":"code","d0d9570f":"code","04cab030":"code","b43314b2":"code","6513e845":"code","d8913867":"code","b60d667b":"code","f54d7ef8":"code","5912450b":"code","21243495":"code","b63ff7b4":"code","9a1355f5":"code","851295bb":"code","2d4fa7d3":"code","6f76a580":"code","54b1742d":"code","49340e8d":"code","f434f780":"code","6ec2e451":"code","89a5d81a":"code","1371e119":"code","b706e1a8":"code","12949780":"code","77ffea83":"code","e76620ad":"code","b9a150ea":"code","23e995cb":"code","a231f87d":"code","ccb007a7":"code","ce05c403":"code","3c4a8345":"code","c6eed325":"code","6b4b872b":"code","5f2b7706":"code","f4c55d06":"code","03b2fa55":"code","a6ea589c":"code","fc1c4e8a":"code","6b061d29":"code","3360955d":"code","22038906":"code","5d4805e5":"code","49ce9834":"code","de6c3f08":"code","14cbf134":"code","c159c96c":"code","09057977":"code","0b080ed7":"code","0dfd822f":"code","7e22fdf2":"code","beee035c":"code","4168c9fa":"code","796cb0d7":"code","b1a279f2":"code","7edb4d43":"code","b8f9dcfd":"code","93ed35c7":"code","068ac9ac":"code","7e0069a3":"markdown","848531d4":"markdown","49880192":"markdown","a9489e7d":"markdown","0d709c63":"markdown","44b9c831":"markdown","0cacdbe4":"markdown","0558c908":"markdown","68e6316a":"markdown","fa3f0be6":"markdown","72705303":"markdown","cf5ccede":"markdown","901c139e":"markdown","9b62555b":"markdown","250d7a07":"markdown","ac17c6bd":"markdown","a61d6ebd":"markdown","abb5b62b":"markdown","0297ac6c":"markdown","821e9089":"markdown","a5a6e2c6":"markdown","cc606d7b":"markdown","fe08d788":"markdown","296c6b35":"markdown","7a702362":"markdown","15ff47f3":"markdown","3d4d3d9d":"markdown","d1aa789c":"markdown","c6c20f61":"markdown","be573cba":"markdown","abc200a3":"markdown","dc47ca85":"markdown","f0f9fe97":"markdown","d95c2571":"markdown","c9507899":"markdown","f4a0dbbd":"markdown","3d6ecec8":"markdown","6c4f3d4a":"markdown","3857db04":"markdown","35ad1ce1":"markdown","b3e5c6c2":"markdown","16ca8719":"markdown","9baa8d77":"markdown","60d2701a":"markdown","97a85da7":"markdown","dfef4ce8":"markdown","cc46b3cf":"markdown","a203e6f1":"markdown","1411a067":"markdown"},"source":{"71cf0949":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy import stats\nfrom calendar import month_name, day_name\n\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\nfrom statsmodels.graphics.factorplots import interaction_plot\n\nimport warnings\nwarnings.filterwarnings('ignore')","599dac8f":"df = pd.read_csv('..\/input\/absenteeism-at-work-uci-ml-repositiory\/Absenteeism_at_work.csv',\n                sep=';')\ndf.head()","86cca154":"df.shape","0aaa12a5":"## checking null values\n\ndf.isna().sum().sum()","49b43874":"## changing column names\n\ndf.columns = df.columns.str.strip().str.replace(' ', '_').str.lower()\n\ndf.columns","2a0e654b":"df.info()","7f129cd4":"df.describe().T","f3f64dc2":"# make a copy of data for preprocessing\n\npreprocessed_df = df.copy()","2db7ce73":"## Mapping categorical values in categorical features\n\nmonth_map = dict(zip(range(1,13), month_name[1:13]))\nday_map = dict(zip(range(2,7), day_name[:5]))\nseason_map = dict(zip([1,2,3,4], ['Spring', 'Summer', 'Fall', 'Winter']))\neducation_map = dict(zip([1,2,3,4], ['High_School', 'Graduate', 'Postgraduate', 'Master_Phd']))\nyes_no_map = {0:'No', 1:'Yes'}\n\n\npreprocessed_df.month_of_absence = preprocessed_df.month_of_absence.map(month_map)\npreprocessed_df.day_of_the_week = preprocessed_df.day_of_the_week.map(day_map)\npreprocessed_df.seasons = preprocessed_df.seasons.map(season_map)\npreprocessed_df.education = preprocessed_df.education.map(education_map)\npreprocessed_df.disciplinary_failure = preprocessed_df.disciplinary_failure.map(yes_no_map)\npreprocessed_df.social_drinker = preprocessed_df.social_drinker.map(yes_no_map)\npreprocessed_df.social_smoker = preprocessed_df.social_smoker.map(yes_no_map)\n\n\npreprocessed_df.head()","346313ab":"disease_arr = preprocessed_df.reason_for_absence.apply(lambda x: 'Yes' if x>=1 and x<=21 else 'No')\n\npreprocessed_df.insert(loc=2, column='disease', value=disease_arr)","3af42a5e":"preprocessed_df.head()","ca3b9dd2":"def plot_countplot(df, column, figsize=(10,6)):\n    plt.figure(figsize=figsize)\n    sns.countplot(x=column, data=df)\n    plt.title(f\"Count plot of feature - {column}\")\n    plt.show()","393b8367":"plot_countplot(df=preprocessed_df, column='reason_for_absence')","16372dc9":"preprocessed_df.reason_for_absence.value_counts(normalize=True)","9c5326fb":"plot_countplot(df=preprocessed_df, column='disease')","e6b6aa9f":"preprocessed_df.disease.value_counts(normalize=True)","8e2dc4d7":"plt.figure(figsize=(15,6))\nsns.countplot(x='month_of_absence', data=preprocessed_df, order=month_name[1:13])\n\nplt.show()","a7ed5cea":"preprocessed_df.month_of_absence.value_counts()","35051239":"plot_countplot(preprocessed_df, 'day_of_the_week')","d0966403":"plot_countplot(preprocessed_df, 'seasons')","3e4d833a":"plot_countplot(preprocessed_df, 'disciplinary_failure')","6d23542d":"preprocessed_df.disciplinary_failure.value_counts(normalize=True)","52f8cbca":"plot_countplot(preprocessed_df, 'education')","91c5b845":"preprocessed_df.education.value_counts()","c8225c91":"plot_countplot(preprocessed_df, 'son')","d7b28608":"plot_countplot(preprocessed_df, 'social_smoker')","74241cce":"plot_countplot(preprocessed_df, 'social_drinker')","e2c4422a":"plot_countplot(preprocessed_df, 'pet')","be451fe9":"sns.displot(data=preprocessed_df, x='transportation_expense', kind='kde', fill=True)\nplt.show()","ac00c122":"sns.displot(data=preprocessed_df, x='distance_from_residence_to_work', kind='kde', fill=True)\nplt.show()","172cd051":"sns.displot(data=preprocessed_df, x='hit_target', kind='kde', fill=True)\nplt.show()","c8503cdd":"sns.displot(data=preprocessed_df, x='body_mass_index', kind='kde', fill=True)\nplt.show()","9c9f3388":"sns.displot(data=preprocessed_df, x='absenteeism_time_in_hours', kind='kde', fill=True)\nplt.show()","e6bee5e0":"preprocessed_df.head()","1e9b11e5":"preprocessed_df.columns","4fa3b148":"plt.figure(figsize=(15,8))\n\nsns.countplot(x='reason_for_absence', data=preprocessed_df, hue='social_drinker')\n\nplt.show()","c4c58132":"plt.figure(figsize=(15,8))\n\nsns.countplot(x='reason_for_absence', data=preprocessed_df, hue='social_smoker', hue_order=['Yes', 'No'])\n\nplt.show()","da4c66db":"preprocessed_df.social_drinker.value_counts(normalize=True)","8faf920a":"preprocessed_df.social_smoker.value_counts(normalize=True)","efa0ef88":"# probability of being a social drinker and social smoker\n\nprobability = df[['social_drinker', 'social_smoker']].mean()\nprobability","ea56bf22":"probability_of_social_drinker = probability[0]\nprobability_of_social_smoker = probability[1]\n\nprint(probability_of_social_drinker, probability_of_social_smoker)","5047bf5e":"## probability--> P(Social Drinker | Absense for reason)\n\ndf1 = df.groupby('reason_for_absence')[['social_drinker', 'social_smoker']].agg('mean')\n\ndf1.plot.bar(figsize=(15, 8), rot=0)\nplt.ylabel('Probability')\nplt.xlabel(\"Reason for Absense\")\nplt.title('P(social drinker or social smoker | Reason for absense)')\n\nplt.legend(labels=['P(social_drinker | Reason for absense)', 'P(social_smoker | Reason for absense)'])\nplt.show()","d3253f0c":"reason_probability = df.groupby('reason_for_absence')['reason_for_absence'].count() \/ len(df)\nreason_probability","ad9aac2a":"dataframe1 = df1.social_drinker * reason_probability \/ probability_of_social_drinker\ndataframe2 = df1.social_smoker * reason_probability \/ probability_of_social_smoker\n\n\npd.DataFrame({'P(Reason | Social Drinker)':dataframe1.tolist(),\n             'P(Reason | Social Smoker)':dataframe2.tolist()}).plot.bar(figsize=(15, 8), rot=0)\n\nplt.show()","d0d9570f":"plt.figure(figsize=(15,8))\nsns.boxplot(x='reason_for_absence', y='absenteeism_time_in_hours', data=preprocessed_df)\nplt.show()","04cab030":"plt.figure(figsize=(10,6))\nsns.violinplot(x='disease', y='absenteeism_time_in_hours', data=preprocessed_df)\nplt.show()","b43314b2":"disease_yes = preprocessed_df.loc[preprocessed_df.disease=='Yes']['absenteeism_time_in_hours']\ndisease_no = preprocessed_df.loc[preprocessed_df.disease=='No']['absenteeism_time_in_hours']\n\ntest_results = stats.ttest_ind(disease_yes, disease_no)\n\nprint(f\"Test statistic: {test_results[0]:.3f}\")\nprint(f\"P-value: {test_results[1]:.3f}\")","6513e845":"test_results = stats.ks_2samp(disease_yes, disease_no)\n\nprint(f\"Test statistic: {test_results[0]:.3f}\")\nprint(f\"P-value: {test_results[1]:.3f}\")","d8913867":"plt.figure(figsize=(15,6))\nsns.violinplot(x='month_of_absence', y='absenteeism_time_in_hours', \n               data=preprocessed_df, order=month_name[1:13])\nplt.show()","b60d667b":"formula = 'absenteeism_time_in_hours ~ C(month_of_absence)'\n\ndata2 = preprocessed_df[['absenteeism_time_in_hours', 'month_of_absence']]\n\nmodel = ols(formula, data=data2).fit()\n\nanova_table = sm.stats.anova_lm(model, typ=1)\nanova_table","f54d7ef8":"## Anova assumptions tests\n\n# 1. resiual follows the normal distribution\n# Shaprio-wilks test\n\ndef shaprio_test(model=model):\n    \"\"\"\n    Null hypothesis: data drawn from normal distribution\n    \"\"\"\n    results = stats.shapiro(model.resid)\n    \n    if results[1]<0.05:\n        print(\"Reject null hypothesis - Residual does not follow normal distribution \ud83d\udc4e\")\n    else:\n        print(\"Falied to reject the null hypothesis\")\n        print(\"Residuals Follow normal distribution \ud83d\udc4c\")\n\n\n# 2. Homogeneity of variance\n# if data drawn from normal distribution than we can use the Bartlett's test otherwise Levene's test\n","5912450b":"shaprio_test(model)","21243495":"formula = 'absenteeism_time_in_hours ~ C(reason_for_absence) + C(month_of_absence) + C(reason_for_absence):C(month_of_absence)'\n\ndata2 = preprocessed_df[['absenteeism_time_in_hours', 'reason_for_absence', 'month_of_absence']]\n\nmodel = ols(formula, data=data2).fit()\n\nanova_table = sm.stats.anova_lm(model, typ=2)\nanova_table","b63ff7b4":"shaprio_test(model)","9a1355f5":"formula2 = 'absenteeism_time_in_hours ~ C(disease) + C(month_of_absence) + C(disease):C(month_of_absence)'\n\ndata3 = preprocessed_df[['absenteeism_time_in_hours', 'disease', 'month_of_absence']]\n\nmodel2 = ols(formula2, data=data3).fit()\n\nanova_table2 = sm.stats.anova_lm(model2, typ=2)\nanova_table2","851295bb":"shaprio_test(model2)","2d4fa7d3":"preprocessed_df.groupby('month_of_absence')['absenteeism_time_in_hours'].agg(['mean', 'std'])","6f76a580":"# maximum average hours in july and minimum hours in february\n# Hypothesis test\n\njuly_data = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.month_of_absence=='July']\n\nno_july_data = preprocessed_df.absenteeism_time_in_hours[~(preprocessed_df.month_of_absence=='July')]\n\n## t-test for july month and remaining months\nres = stats.ttest_ind(july_data, no_july_data)\n\nprint(f\"Test statistic: {res[0]:.3f}\\np-value: {res[1]:.3f}\")","54b1742d":"plt.figure(figsize=(15,6))\nsns.violinplot(x='day_of_the_week', y='absenteeism_time_in_hours', \n               data=preprocessed_df, order=day_name[:5])\nplt.show()","49340e8d":"formula = 'absenteeism_time_in_hours ~ C(day_of_the_week)'\n\ndata2 = preprocessed_df[['absenteeism_time_in_hours', 'day_of_the_week']]\n\nmodel = ols(formula, data=data2).fit()\n\nanova_table = sm.stats.anova_lm(model, typ=1)\nanova_table","f434f780":"shaprio_test(model)","6ec2e451":"preprocessed_df.groupby('day_of_the_week')['absenteeism_time_in_hours'].agg(['mean', 'std'])","89a5d81a":"# maximum average hours on monday and minimum hours on thursday\n# Hypothesis test\n\nthursday_data = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.day_of_the_week=='Thursday']\n\nno_thursday_data = preprocessed_df.absenteeism_time_in_hours[~(preprocessed_df.day_of_the_week=='Thursday')]\n\nres1 = stats.ttest_ind(thursday_data, no_thursday_data)\n\nprint(f\"Test statistic: {res1[0]:.3f}\\np-value: {res1[1]:.3f}\")","1371e119":"plt.figure(figsize=(15,6))\nsns.violinplot(x='seasons', y='absenteeism_time_in_hours', \n               data=preprocessed_df)\nplt.show()","b706e1a8":"## One-way anova test for reasons and seasons\n\nformula = 'absenteeism_time_in_hours ~ C(seasons)'\n\ndata2 = preprocessed_df[['absenteeism_time_in_hours', 'seasons']]\n\nmodel = ols(formula, data=data2).fit()\n\nanova_table = sm.stats.anova_lm(model, typ=2)\nanova_table","12949780":"shaprio_test(model)","77ffea83":"## Two-way anova test for seasons\n\nformula = 'absenteeism_time_in_hours ~ C(seasons) + C(reason_for_absence) + C(reason_for_absence):C(seasons)'\n\ndata2 = preprocessed_df[['absenteeism_time_in_hours','reason_for_absence', 'seasons']]\n\nmodel = ols(formula, data=data2).fit()\n\nanova_table = sm.stats.anova_lm(model, typ=1)\nanova_table","e76620ad":"shaprio_test(model)","b9a150ea":"preprocessed_df.groupby('seasons')['absenteeism_time_in_hours'].agg(['mean', 'std'])","23e995cb":"# maximum average hours on Fall and minimum hours on summer\n# Hypothesis test\n\nsummer_data = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.seasons=='Summer']\n\nno_summer_data = preprocessed_df.absenteeism_time_in_hours[~(preprocessed_df.seasons=='Summer')]\n\nres1 = stats.ttest_ind(summer_data, no_summer_data)\n\nprint(f\"Test statistic: {res1[0]:.3f}\\np-value: {res1[1]:.3f}\")","a231f87d":"# plt.figure(figsize=(15,6))\nsns.violinplot(x='disciplinary_failure', y='absenteeism_time_in_hours', \n               data=preprocessed_df)\nplt.show()","ccb007a7":"preprocessed_df.disciplinary_failure.value_counts()","ce05c403":"preprocessed_df.groupby('disciplinary_failure')['absenteeism_time_in_hours'].agg(['mean', 'std'])","3c4a8345":"plt.figure(figsize=(10,6))\nsns.violinplot(x='social_drinker', y='absenteeism_time_in_hours', data=preprocessed_df)\nplt.show()","c6eed325":"plt.figure(figsize=(10,6))\nsns.violinplot(x='social_smoker', y='absenteeism_time_in_hours', data=preprocessed_df)\nplt.show()","6b4b872b":"hours_drinkers = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.social_drinker=='Yes']\nhours_non_drinkers = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.social_drinker=='No']","5f2b7706":"result = stats.ttest_ind(hours_drinkers, hours_non_drinkers)\n\nprint(\"Test Statistic:\", result[0])\nprint(\"p-value:\", result[1])","f4c55d06":"hours_smokers = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.social_smoker=='Yes']\nhours_non_smokers = preprocessed_df.absenteeism_time_in_hours[preprocessed_df.social_smoker=='No']","03b2fa55":"result = stats.ttest_ind(hours_smokers, hours_non_smokers)\n\nprint(\"Test Statistic:\", result[0])\nprint(\"p-value:\", result[1])","a6ea589c":"from scipy.stats import ks_2samp","fc1c4e8a":"drinkers_result = ks_2samp(hours_drinkers, hours_non_drinkers)\nsmokers_result = ks_2samp(hours_smokers, hours_non_smokers)\n\nprint(f\"Dinkers' statistic is {drinkers_result[0]} and p-value {drinkers_result[1]}\")\nprint(f\"Smokers' statistic is {smokers_result[0]} and p-value {smokers_result[1]}\")","6b061d29":"def get_bmi_category(bmi):\n    if bmi < 18.5:\n        category = \"underweight\"\n    elif bmi >= 18.5 and bmi < 25:\n        category = \"healthy weight\"\n    elif bmi >= 25 and bmi < 30:\n        category = \"overweight\"\n    else:\n        category = \"obese\"\n    return category\n\n\npreprocessed_df['bmi_category'] = preprocessed_df.body_mass_index.apply(get_bmi_category)","3360955d":"preprocessed_df.head()","22038906":"sns.countplot(x='bmi_category', data=preprocessed_df, \n              order=['underweight', 'healthy weight', 'overweight', 'obese'])\nplt.show()","5d4805e5":"plt.figure(figsize=(15, 8))\nsns.countplot(x='reason_for_absence', data=preprocessed_df, hue='bmi_category',\n             hue_order=['underweight', 'healthy weight', 'overweight', 'obese'],\n             palette='Set2')\n\nplt.show()","49ce9834":"plt.figure(figsize=(10,6))\nsns.violinplot(data=preprocessed_df, x='bmi_category', y='absenteeism_time_in_hours')\nplt.show()","de6c3f08":"plt.figure(figsize=(10,6))\nsns.violinplot(data=preprocessed_df, x='education', y='absenteeism_time_in_hours')\nplt.show()","14cbf134":"preprocessed_df.groupby('education')['absenteeism_time_in_hours'].agg(['count','mean', 'std'])","c159c96c":"sns.jointplot(data=preprocessed_df, x='age', y='absenteeism_time_in_hours',\n             kind='reg')\nplt.show()","09057977":"## Because the absent hours feature has outliers\n## let's normalize it's distribution by using Power transformation method---> Box-Cox or Yeo-Johnson\n\n# box-cox requires input data only positive\n# yeo-johnson can take any data\n\nhours = stats.yeojohnson(preprocessed_df.absenteeism_time_in_hours)[0]\n\ng = sns.jointplot(x=preprocessed_df.age, y=hours, kind='reg')\ng.set_axis_labels(xlabel=\"Age\", ylabel=\"Absenteeism Hours (Power-transformed)\")\nplt.show()","0b080ed7":"print(\"Correlation Age and Absent Hours = \", preprocessed_df.age.corr(preprocessed_df.absenteeism_time_in_hours))\nprint(\"Correlation Age and Hours (Power Transformed) = \", preprocessed_df.age.corr(pd.Series(hours)))","0dfd822f":"sns.violinplot(data=preprocessed_df, x='disease', y='age')\nplt.show()","7e22fdf2":"# hypothesis test for equality of means\n\nage_disease = preprocessed_df.age[preprocessed_df.disease=='Yes']\nage_no_disease = preprocessed_df.age[preprocessed_df.disease=='No']\n\ntest_result = stats.ttest_ind(age_disease, age_no_disease)\n\nprint('Test statistic', test_result[0])\nprint(\"p-value\", test_result[1])\n\n\n# distribution test\n\nks_result = stats.ks_2samp(age_disease, age_no_disease)\n\nprint('KS - Test statistic', ks_result[0])\nprint(\"KS - p-value\", ks_result[1])","beee035c":"sns.jointplot(data=preprocessed_df, x='distance_from_residence_to_work', y='absenteeism_time_in_hours',\n             kind='reg')\nplt.show()","4168c9fa":"print(\"Correlation\")\npreprocessed_df.distance_from_residence_to_work.corr(preprocessed_df.absenteeism_time_in_hours)","796cb0d7":"g = sns.jointplot(x=preprocessed_df.distance_from_residence_to_work, y=hours, kind='reg')\ng.set_axis_labels(xlabel=\"Distance\", ylabel=\"Absenteeism Hours (Power-transformed)\")\nplt.show()","b1a279f2":"pval, coef = stats.pearsonr(preprocessed_df.distance_from_residence_to_work, hours)\n\npval, coef","7edb4d43":"sns.jointplot(data=preprocessed_df, x='transportation_expense', y='absenteeism_time_in_hours',\n             kind='reg')\nplt.show()","b8f9dcfd":"preprocessed_df.distance_from_residence_to_work.corr(preprocessed_df.absenteeism_time_in_hours)","93ed35c7":"g = sns.jointplot(x=preprocessed_df.transportation_expense, y=hours, kind='reg')\ng.set_axis_labels(xlabel=\"Transportation Expense\", ylabel=\"Absenteeism Hours (Power-transformed)\")\nplt.show()","068ac9ac":"pval, coef = stats.pearsonr(preprocessed_df.transportation_expense, hours)\n\npval, coef","7e0069a3":"## Analyzing Numerical features","848531d4":"- 56% employees are social drinkers and only 7% are social smoker\n>As the number of social smokers is quite small (only 7% of the entries), it is very hard to say whether there is actually a relationship between the absence reasons and smoking. So we'll use the conditional probabilities for this relationship.","49880192":"### Analyzing social drinkers and social smokers","a9489e7d":"- ***The p-value for the drinkers dataset is lower than the critical 0.05, which is strong evidence against the null hypothesis of the two distributions being equal. On the other hand, as the p-value for the smokers dataset is higher than 0.05, we cannot reject the null hypothesis.***","0d709c63":"***Source of used data is [here](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Absenteeism+at+work)***","44b9c831":"## Analyzing Categorical Columns - Bivariate Analysis","0cacdbe4":"## Loading and Preprocessing Data","0558c908":"### Education","68e6316a":"- **To assess the difference in the distributions of two samples**","fa3f0be6":"- Distribution of disease and no_disease with absenteeism time seems pretty different.\n- Let's check the hypothesis test for average hours","72705303":"- Alone disease affects the absent hours but disease and month together does not affect it.","cf5ccede":"- **Two-way Anova test** for checking the impact of months and disease on absenteeism hours","901c139e":"- Yes, our test result shows that there is difference in distribution also.","9b62555b":"### Analyzing Seasons","250d7a07":"- In the reason_for_absence feature only the 1-21 are listed in International code of disease (ICD). The remaining are not disease.","ac17c6bd":"$\n   \\\\ H_0 : \\text{Average time of absenteeism is same for disease and no-disease}\n   \\\\ H_a : \\text{Average time is different}\n$","a61d6ebd":"- Month March has the highest number of absentees and December has the lowest.","abb5b62b":"- There are some outliers in the absenteeism hours feature","0297ac6c":"### Age","821e9089":"### Transportation Costs and Distance to Work Factors","a5a6e2c6":"- Months March, April, July, and November have long hours of absent with some outliers. It means few employees had the very long hours of absenteeism.","cc606d7b":"### Analyzing Day of week","fe08d788":"- **One-way Anova test** - checking the impact of months on absenteeism hours","296c6b35":"### BMI Category","7a702362":"$\n   \\\\ H_0 : \\text{Both disease and no-disease are drawn from same distribution}\n   \\\\ H_a : \\text{Not drawn from same distribution}\n$","15ff47f3":"- This result is highly skewed towards High School employees.\n- One reason for this skewness could be that almost all business have more High-Schooled employees than higher educated employees.","3d4d3d9d":"### Reason and Disease vs absent hours","d1aa789c":"- A significant difference is present in between absent hours for employees with disciplinary failure and not failure.","c6c20f61":"- Thursday has the lowest number of data-points of absentees.","be573cba":"- **Two-way Anova test** for checking the impact of months and reasons on absenteeism hours","abc200a3":"- Only 5% of absentees have disciplinary failure","dc47ca85":"- From the above figure it seems there is no difference among seasons for absent hours","f0f9fe97":"### Conditional Probability","d95c2571":"- The number of reasons for absence that are not listed in the ICD table is almost twice the number of listed ones.","c9507899":"- We can clearly see that both the mean and standard deviation of the hours of absence are decreasing, meaning that highly educated employees tend to have shorter absences. Of course, a higher degree of education is not a cause for such a phenomenon and is more of an indication of it.\n- Note that only 4 employees have phd degree.","f4a0dbbd":"- This result confirms that there is a slight positive correlation between Transportation expense and Absenteeism time in hours.","3d6ecec8":"- As we can see, the p-value of both tests is above the critical value of 0.05, which means that we cannot reject the null hypothesis. In other words, we cannot say that there is a statistically significant difference in the absenteeism hours between drinkers (and smokers) and non-drinkers (and non-smokers).\n\n>  **Nevertheless, the average hours may still be equal, but their distributions may be different.**","6c4f3d4a":"### Absence month and Absent Hours","3857db04":"- As the p-value is less than 0.05 we can reject the null hypothesis and conclude that there is statistically significant difference between the average absent hours of person with disease and no disease.","35ad1ce1":"- **The distribution also seems different. Let's check is by using Kolmogorov-Smirnov test.**","b3e5c6c2":"- Most common reason for absence is `medical consultation (23)` followed by `dental consultation (28)` with 20% and 15%.\n- Top 5 reasons for absence are `medical consultation (23), dental consultation (28), physiotherapy (27), musculoskeletal system (13), Unknown (0)`.\n- Only one reason out of top-5 is in the ICD disease table. \n- More than 57% of the data has reason for absence in top-5 reasons.","16ca8719":"- There is statistically significant difference among days of week","9baa8d77":"- bmi category does not affect the absenteeism hours","60d2701a":"- The above result yields that month (alone) does not afftects the absenteeism hours ","97a85da7":"## Univariate Analysis","dfef4ce8":"- Despite some differences in the outliers between smokers and non-smokers, there is no substantial difference in the distribution of absenteeism hours in drinkers and smokers.\n- To assess this statement in a rigorous statistical way, perform hypothesis testing on the absenteeism hours (with a null hypothesis stating that the average absenteeism time in hours is the same for drinkers and non-drinkers)","cc46b3cf":"- Reason for absence does not affect the absent hours\n- Month has significant effect on absent hours\n- Interaction of both month and reason significantly affects the absent hours.","a203e6f1":"### Disciplinary Failure","1411a067":"### Reason for absence Vs Social Drinkers and Social Smokers"}}