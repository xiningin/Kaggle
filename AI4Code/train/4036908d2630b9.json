{"cell_type":{"a39f2060":"code","bba0f131":"code","67ea2d8b":"code","2a650bcd":"code","a3a0029d":"code","9203c355":"code","decd8348":"code","f0366eed":"code","80361fbe":"code","3094561f":"code","c7d81265":"code","18c3b2fe":"code","fbbf20f9":"code","0424c9cc":"code","dc2397aa":"code","496a603d":"code","dfa082ee":"code","000d00e1":"code","589f0e88":"code","573d4962":"code","468f57b1":"code","0a3a1e71":"code","75daad0f":"code","16bec6a5":"code","b0197795":"code","8d9f6298":"code","dcfb756e":"code","41bf600c":"code","e8f53b2e":"code","2c9869fe":"code","8dfb38b5":"code","e28ccdfa":"code","9ab67c25":"code","c59503d6":"code","b0f282aa":"code","1f4b77b6":"markdown","c1c7cde6":"markdown"},"source":{"a39f2060":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bba0f131":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","67ea2d8b":"df=pd.read_csv('..\/input\/sp-500-companies-with-financial-information\/financials.csv')\ndf.head()","2a650bcd":"df.info()","a3a0029d":"df.describe()","9203c355":"df.corr()","decd8348":"new=df.groupby('Sector')","f0366eed":"new.first()","80361fbe":"df.max()","3094561f":"df.min()","c7d81265":"sns.heatmap(df.corr(),data=df,annot=True)","18c3b2fe":"fig=plt.figure(figsize=(20,5))\nsns.barplot(x='Sector',y='Earnings\/Share',data=df)","fbbf20f9":"fig=plt.figure(figsize=(20,5))\nsns.barplot(x='Sector',y='Price',data=df,palette='rainbow')\n","0424c9cc":"sns.jointplot(x='Price',y='Dividend Yield',data=df,kind='reg')","dc2397aa":"sns.jointplot(x='Earnings\/Share',y='Dividend Yield',data=df,kind='reg')","496a603d":"sns.pairplot(df)","dfa082ee":"fig=plt.figure(figsize=(20,10))\nsns.countplot(x='Sector',data=df)","000d00e1":"df['Price\/Share']=df['Price\/Earnings']*df['Earnings\/Share']","589f0e88":"df.head()","573d4962":"import cufflinks as cf ","468f57b1":"from plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()","0a3a1e71":"newdata=df.drop(['Symbol','SEC Filings','52 Week High','52 Week Low','Name','Sector','Price\/Share','Market Cap','EBITDA'],axis=1)\nnewdata.iplot()","75daad0f":"df['Number of Shares Outstanding']=df['Market Cap']\/df['Price']","16bec6a5":"X=df[['Earnings\/Share','EBITDA','Dividend Yield','Number of Shares Outstanding','52 Week High','52 Week Low']]\ny=df['Price']","b0197795":"df.head()","8d9f6298":"df[['Number of Shares Outstanding','Price']].corr()","dcfb756e":"from sklearn.model_selection import train_test_split","41bf600c":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=101)","e8f53b2e":"from sklearn.linear_model import LinearRegression","2c9869fe":"lm=LinearRegression()\nlm.fit(X_train,y_train)\nprint(lm.intercept_)","8dfb38b5":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","e28ccdfa":"predictions=lm.predict(X_test)","9ab67c25":"plt.scatter(y_test,predictions)","c59503d6":"from sklearn import metrics","b0f282aa":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","1f4b77b6":"## Import Libraries ","c1c7cde6":"## Thanks "}}