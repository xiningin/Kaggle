{"cell_type":{"2bbd0257":"code","5800d8dd":"code","10ad1131":"code","69d67d48":"code","2d90ecc1":"code","f1b29fa4":"markdown","3f504741":"markdown","66e33ba8":"markdown","301d4d15":"markdown","3aa9b50f":"markdown","31f95c66":"markdown","8384a47a":"markdown"},"source":{"2bbd0257":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport pickle\nfrom tqdm.auto import tqdm\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nid_2_path = dict()\nfor dirname, _, filenames in tqdm(os.walk('\/kaggle\/input\/g2net-gravitational-wave-detection\/train\/'), total=4369, desc='Checking filepath for each ID...'):\n    for filename in filenames:\n        if not os.path.isdir(filename):\n            id_2_path[os.path.splitext(filename)[0]] = os.path.join(dirname, filename)","5800d8dd":"with open('id_2_path.pkl', 'wb') as f:\n    pickle.dump(id_2_path, f)","10ad1131":"training_labels = pd.read_csv('..\/input\/g2net-gravitational-wave-detection\/training_labels.csv')\ntraining_labels['filepath'] = training_labels['id'].map(id_2_path)","69d67d48":"training_labels.to_csv('training_labels_with_paths.csv', index=None)","2d90ecc1":"_, axs = plt.subplots(10, 2, figsize=(12, 30), sharex=True, sharey=True)\n\npos_subsample = training_labels.loc[training_labels['target'] == 1, 'filepath'].sample(10)\nneg_subsample = training_labels.loc[training_labels['target'] == 0, 'filepath'].sample(10)\n\nfor row_i, pos_filepath in enumerate(pos_subsample):\n    pos_data = np.load(pos_filepath)\n    axs[row_i, 0].plot(pos_data[0], c='r')\n    \nfor row_i, neg_filepath in enumerate(neg_subsample):\n    neg_data = np.load(neg_filepath)\n    axs[row_i, 1].plot(neg_data[0], c='b')\n\naxs[0, 0].set_title('Positives', fontsize=15)\naxs[0, 1].set_title('Negatives', fontsize=15)\nplt.suptitle('Visual comparison of randomly sampled positive and negative samples', fontsize=19)","f1b29fa4":"# Storing results","3f504741":"There is a complex system of subfolders, while in the `training_labels.csv` each data point is referenced by an ID which corresponds to the file name. \n\nIn this notebook I map each ID to the full file path. I store both the corresponding dictionary mapping the ID to the full file path, as well as the enriched file `training_labels_with_paths.csv`.","66e33ba8":"# Demonstration","301d4d15":"## Getting a subsample of positive data points","3aa9b50f":"# Intro","31f95c66":"# Mapping","8384a47a":"## Raw time series from LIGO Hanford"}}