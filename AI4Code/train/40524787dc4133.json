{"cell_type":{"3a08133e":"code","25cfa82d":"code","a0707b32":"code","15ad9c03":"code","7673ce60":"code","bcdc827b":"code","c5e583db":"markdown","512f2d82":"markdown","94ca1f73":"markdown","572f30bb":"markdown","10a258d5":"markdown","79d04155":"markdown"},"source":{"3a08133e":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","25cfa82d":"dataset=pd.read_csv('..\/input\/Data.csv')\nx=dataset.iloc[:,:-1].values\ny=dataset.iloc[:,3].values","a0707b32":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values = np.nan, strategy = 'mean',verbose=0)\nimputer = imputer.fit(x[:, 1:3])\nx[:, 1:3] = imputer.transform(x[:, 1:3])","15ad9c03":"from sklearn.preprocessing import LabelEncoder,OneHotEncoder\nlabelencoder_x=LabelEncoder()\nx[:,0]=labelencoder_x.fit_transform(x[:,0])\nonehotencoder=OneHotEncoder(categorical_features=[0])\nx=onehotencoder.fit_transform(x).toarray()\nlabelencoder_y=LabelEncoder()\ny=labelencoder_y.fit_transform(y)","7673ce60":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_teast=train_test_split(x,y,test_size=0.2,random_state=0)","bcdc827b":"from sklearn.preprocessing import StandardScaler\nsc_x=StandardScaler()\nx_train=sc_x.fit_transform(x_train)\nx_test=sc_x.transform(x_test)","c5e583db":"importing dataset to x and y","512f2d82":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","94ca1f73":"fixing missing data","572f30bb":" Feature Scaling is done by StandardScaler","10a258d5":" LabelEncoder,OneHotEncoder used for convert categorical data, or text data, into numbers, which our predictive models can better understand.\n*  note:\n  FutureWarning: The handling of integer data will change in version 0.22.\n  thats why alternative method\n  from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer(\n    [('one_hot_encoder', OneHotEncoder(), [0])],    \n    remainder='passthrough'                         # Leave the rest of the columns untouched\n)\nx = np.array(ct.fit_transform(x), dtype=np.float)","79d04155":"Splitting the dataset into the Training set and Test set\n* note: early its was in sklearn.cross_validation for new version it will be in sklearn.model_selection"}}