{"cell_type":{"b19d0fe9":"code","4d39db4e":"code","97287ac8":"code","5288b316":"code","ba568f16":"code","c12631ce":"code","0cacb6fa":"code","3f28f219":"code","f4a9dd1f":"code","cc80ad72":"markdown","eed6eb03":"markdown","db7966da":"markdown","49d1baba":"markdown","1edfebd9":"markdown","c2524418":"markdown","0ca6c94e":"markdown","ef5980d7":"markdown","3b59e497":"markdown","497bd050":"markdown"},"source":{"b19d0fe9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d39db4e":"#Entering basic data input\ntrain=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')  #train\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')  #test\nsubmission=pd.DataFrame(test['PassengerId'])   \ny=train['Survived']  #output","97287ac8":"dataset=pd.concat([train.drop(['PassengerId','Survived'],axis=1),test.drop('PassengerId',axis=1)])","5288b316":"dataset['Age'].fillna(dataset['Age'].mean(),inplace=True)\ndataset['Fare'].fillna(dataset['Fare'].median(),inplace=True)\ndataset['Embarked'].fillna('S',inplace=True)\ndataset.drop(['Cabin','Name','Ticket'],axis=1,inplace=True)","ba568f16":"from sklearn.preprocessing import LabelEncoder\nlabel=LabelEncoder()\ndataset['Sex']=label.fit_transform(dataset['Sex'])\ndataset['Age']=dataset['Age'].astype(int)","c12631ce":"dataset['familyno']=dataset['SibSp']+dataset['Parch']+1","0cacb6fa":"dataset=pd.get_dummies(dataset,columns=['Pclass','Embarked'])\ndataset.drop(['SibSp','Parch'],axis=1,inplace=True)\nxtrain=dataset[:len(train)]\ntest=dataset[len(train):]\nxtrain","3f28f219":"from sklearn.ensemble import GradientBoostingClassifier\nsky=GradientBoostingClassifier()\nsky.fit(xtrain,y)\nc=sky.predict(test)\nsubmission['Survived']=c","f4a9dd1f":"submission.to_csv('ver1.csv',index=False)","cc80ad72":"Using just basic modelling we get an accuracy of 79% .\nLater we try to add mor columns to increase the fuctionality. ","eed6eb03":"# This notebook is a very basic approach to solve the model","db7966da":"# Filling the missing values","49d1baba":"# Categorical values uffff..\n","1edfebd9":"![](https:\/\/th.bing.com\/th\/id\/OIP.qKHGSOIZWuimKsQFc3svJQHaDF?pid=Api&rs=1)","c2524418":"# *In titanic we all saw the end but there is still hope to find if jack is still alive or not","0ca6c94e":"# Getting dummies to pass the test","ef5980d7":"# If you liked the model please give it a one like,\n# Help jack in titanic.....\n\n\n![](https:\/\/www.quirkybyte.com\/wp-content\/uploads\/2017\/05\/t.jpg)\n\n\n","3b59e497":"# Combining the dataset","497bd050":"# Finally building a machine to predict Jack is alive"}}