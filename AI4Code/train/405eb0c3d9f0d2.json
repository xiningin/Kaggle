{"cell_type":{"589ccc24":"code","a91f972e":"code","62b14a04":"code","31c4bdcb":"code","d43c4ac7":"code","50e35681":"code","bf7a8474":"code","3998d1ed":"code","59a18ea8":"code","10cb8daf":"code","b46182a5":"code","7640c36f":"code","ce6d6b0e":"code","88df6ec5":"code","dcd5c662":"code","6e137ab2":"code","b1731aca":"code","61b0ab63":"code","5de2bdda":"code","367e9994":"code","225031a1":"code","f1ad82d3":"code","f29e3d80":"code","203f8855":"code","69b60724":"code","9e2e1749":"markdown","cb17d454":"markdown","ee769f1c":"markdown","33c6c9cc":"markdown","b8dcd7d3":"markdown","d5503875":"markdown","4b34fece":"markdown","16a9c2b6":"markdown","ffd750f8":"markdown","75539b13":"markdown","dfc7137e":"markdown","b67e6caf":"markdown","166772f6":"markdown","7d5c9ba6":"markdown","383c9ecc":"markdown","8fb3b802":"markdown","7d6d7173":"markdown","291d82da":"markdown","0a3a3a46":"markdown","227162e7":"markdown","f76d8185":"markdown","a483f616":"markdown","510f8208":"markdown","9f143d46":"markdown","c4707614":"markdown","ef087da0":"markdown","10497b68":"markdown","6bb8f135":"markdown","bb72083f":"markdown","25a15b09":"markdown","f7e5aa6a":"markdown","f379f25e":"markdown","d4e86a7c":"markdown","90caf80b":"markdown","3e129f5a":"markdown"},"source":{"589ccc24":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a91f972e":"%time data=pd.read_csv(\"\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")\nprint(data.shape)","62b14a04":"data.head()","31c4bdcb":"data.isnull().sum()","d43c4ac7":"data.info()","50e35681":"data.describe()","bf7a8474":"print(\"Dataset contains {} row and {} colums\".format(data.shape[0],data.shape[1]))","3998d1ed":"plt.figure(figsize=(14,6))\nplt.style.use('fivethirtyeight')\nax= sns.countplot('Gender', data=data , palette = 'copper')\nax.set_xlabel(xlabel= \"Gender\",fontsize=18)\nax.set_ylabel(ylabel = \"Gender count\", fontsize = 18)\nax.set_title(label = \"Gender count in supermarket\", fontsize = 20)\nplt.show()","59a18ea8":"data.groupby(['Gender']). agg({'Total':'sum'})","10cb8daf":"plt.figure(figsize= (14,6))\nax = sns.countplot(x = \"Customer type\", data = data, palette = \"rocket_r\")\nax.set_title(\"Type of customers\", fontsize = 25)\nax.set_xlabel(\"Customer type\", fontsize = 16)\nax.set_ylabel(\"Customer Count\", fontsize = 16)\n","b46182a5":"data.groupby(['Customer type']). agg({'Total':'sum'})","7640c36f":"plt.figure(figsize=(14,6))\nax = sns.countplot(x = \"Customer type\", hue = \"Branch\", data = data, palette= \"rocket_r\")\nax.set_title(label = \"Customer type in different branch\", fontsize = 25)\nax.set_xlabel(xlabel = \"Branches\", fontsize = 16)\nax.set_ylabel(ylabel = \"Customer Count\", fontsize = 16)","ce6d6b0e":"plt.figure(figsize = (14,6))\nax = sns.countplot(x = \"Payment\", data = data, palette = \"tab20\")\nax.set_title(label = \"Payment methods of customers \", fontsize= 25)\nax.set_xlabel(xlabel = \"Payment method\", fontsize = 16)\nax.set_ylabel(ylabel = \" Customer Count\", fontsize = 16)\n","88df6ec5":"plt.figure(figsize = (14,6))\nax = sns.countplot(x=\"Payment\", hue = \"Branch\", data = data, palette= \"tab20\")\nax.set_title(label = \"Payment distribution in all branches\", fontsize= 25)\nax.set_xlabel(xlabel = \"Payment method\", fontsize = 16)\nax.set_ylabel(ylabel = \"Peple Count\", fontsize = 16)","dcd5c662":"plt.figure(figsize=(14,6)) \nax = sns.boxplot(x=\"Branch\", y = \"Rating\" ,data =data, palette= \"RdYlBu\")\nax.set_title(\"Rating distribution between branches\", fontsize = 25)\nax.set_xlabel(xlabel = \"Branches\", fontsize = 16)\nax.set_ylabel(ylabel = \"Rating distribution\", fontsize = 16)\n","6e137ab2":"data[\"Time\"]= pd.to_datetime(data[\"Time\"])","b1731aca":"data[\"Hour\"]= (data[\"Time\"]).dt.hour","61b0ab63":"plt.figure(figsize=(14,6)) \nSalesTime = sns.lineplot(x=\"Hour\", y =\"Quantity\", data = data).set_title(\"product sales per Hour\")","5de2bdda":"plt.figure(figsize=(14,6)) \nrating_vs_sales = sns.lineplot(x=\"Total\", y= \"Rating\", data=data)","367e9994":"plt.figure(figsize=(10,6)) \nax = sns.boxenplot(x = \"Quantity\", y = \"Product line\", data = data,)\nax.set_title(label = \"Average sales of different lines of products\", fontsize = 25)\nax.set_xlabel(xlabel = \"Qunatity Sales\",fontsize = 16)\nax.set_ylabel(ylabel = \"Product Line\", fontsize = 16)","225031a1":"plt.figure(figsize=(14,6))\nax = sns.countplot(y='Product line', data=data, order = data['Product line'].value_counts().index)\nax.set_title(label = \"Sales count of products\", fontsize = 25)\nax.set_xlabel(xlabel = \"Sales count\", fontsize = 16)\nax.set_ylabel(ylabel= \"Product Line\", fontsize = 16)","f1ad82d3":"plt.figure(figsize=(14,6))\nax = sns.boxenplot(y= \"Product line\", x= \"Total\", data = data)\nax.set_title(label = \" Total sales of product\", fontsize = 25)\nax.set_xlabel(xlabel = \"Total sales\", fontsize = 16)\nax.set_ylabel(ylabel = \"Product Line\", fontsize = 16)\n","f29e3d80":"plt.figure(figsize = (14,6))\nax = sns.boxenplot(y = \"Product line\", x = \"Rating\", data = data)\nax.set_title(\"Average rating of product line\", fontsize = 25)\nax.set_xlabel(\"Rating\", fontsize = 16)\nax.set_ylabel(\"Product line\", fontsize = 16)","203f8855":"plt.figure(figsize = (14,6))\nax= sns.stripplot(y= \"Product line\", x = \"Total\", hue = \"Gender\", data = data)\nax.set_title(label = \"Product sales on the basis of gender\")\nax.set_xlabel(xlabel = \" Total sales of products\")\nax.set_ylabel(ylabel = \"Product Line\")","69b60724":"plt.figure(figsize = (14,6))\nax = sns.relplot(y= \"Product line\", x = \"gross income\", data = data)\n# ax.set_title(label = \"Products and Gross income\")\n# ax.set_xlabel(xlabel = \"Total gross income\")\n# ax.set_ylabel(ylabel = \"Product line\")","9e2e1749":"<h3> Let's see the sales count of these products.<\/h3> ","cb17d454":"<h3> Visualization<\/h3>","ee769f1c":"<h3> Checking number of rows and columns<\/h3>","33c6c9cc":"<h3> Here we can see the gross income of different product line <\/h3> ","b8dcd7d3":"<h3> Data Cleaning<\/h3>","d5503875":"<h3> Payment method distribution in all branches<\/h3>","4b34fece":"We can see that the supermarket makes most of it's sells in 14:00 hrs local time.","16a9c2b6":"There are no missing value and the data set is clean so we will continue with data visualization.","ffd750f8":"<h3> Checking information of data set.<\/h3>","75539b13":"<h3>Product sales on the basis of gender<\/h3>","dfc7137e":"<h3> Customer type<\/h3>","b67e6caf":"<h3> Checking the different payment methods used.<\/h3>","166772f6":"<h3> Here I have used different techniques to viaualize the data set of supermarket.<br>\nWhat will you discover from this analysis?<p><\/h3>\n1.Relation of customers with SuperMarket<br>\n2.Payment methods used in supermarket.<br>\n3.Products relation with quantities.<br>\n4.Types of product and their sales.<br>\n5.Products and their ratings.<br>\n","7d5c9ba6":"We can see the top sold products form the above figure.","383c9ecc":"<img src = \"https:\/\/www.bereketinvestment.com\/images\/111X1250X600X1\/1.1939257985995600424afa.jpg\">","8fb3b802":"<h3> Total sales of product using boxenplot<\/h3> ","7d6d7173":"<b>Seems about right","291d82da":"<img src = \"https:\/\/media.mehrnews.com\/d\/2019\/07\/31\/4\/3194094.jpg\" >","0a3a3a46":"<h3> Rating vs sales<\/h3>","227162e7":"<h3> Above we can see the type of customer in all branch combined now let's check for different branch.<\/h3>","f76d8185":"The visualization looks suspicious let's check numeric data.\n","a483f616":"<h3> Max sells time<h3>","510f8208":"<h3>Product and gross income<\/h3> ","9f143d46":"We can see that the average rating of branch A and C is more than seven and branch B is less than 7.\n","c4707614":"Here we can see that the average sales of different lines of products. Health and beauty making the highest sales whereas Fashon accessories making the lowest sales.","ef087da0":"<h3> Using boxen plot<\/h3>","10497b68":"<h1> <i> <b> Super Market Data Analysis. <\/i> <\/b> <\/h1>","6bb8f135":"<h3> Let's start with gender count<\/h3>","bb72083f":"<h3> Now let's see average ratings of products.<\/h3>","25a15b09":"The visualization looks good. Let's carry on","f7e5aa6a":"Here we can see that the number of males and females entering the store is almost equal. But the visulaization looks suspicious. Let's check numeric data. ","f379f25e":"<h3> Loading dataset with computation time.<\/h3>","d4e86a7c":"<h3>A supermarket is self-service shop offering a wide variety of food, beverages and household products, organized into sections. It is larger and has a wider selection than earlier grocery stores, but is smaller and more limited in the range of merchandise than a hypermarket or big-box market.<br><\/br>","90caf80b":"<h3>Now let's see the rating distribution in 3 branches<\/h3>","3e129f5a":"<h3><i> Now we use different visualization tools to check different aspects of Supermarket sales.<\/i> <\/h3>"}}