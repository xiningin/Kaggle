{"cell_type":{"d9390816":"code","8b01dec5":"code","b90db104":"code","b38b0e0d":"code","899d0aa2":"code","6bcc6f63":"code","af3e2d42":"code","92d5536f":"code","e028c1ba":"code","3f69d715":"code","f955b7fa":"code","4abe232c":"code","8190c7c9":"code","090501c4":"code","33f14d15":"code","e116f1f7":"code","ff685824":"code","ac298b6b":"code","d0c24074":"code","057d1544":"code","43209421":"markdown","28f2c4a8":"markdown","48ea8817":"markdown","2fedad3e":"markdown","b5260c71":"markdown","0f163838":"markdown","ee83bf8c":"markdown","69c1f80f":"markdown","ce585764":"markdown","cc3ecf83":"markdown","7280630d":"markdown","6fb8c84e":"markdown","4359550a":"markdown","cdf6b4e3":"markdown","e0b8f627":"markdown","103675f3":"markdown","c4297924":"markdown"},"source":{"d9390816":"from IPython.display import Image\nImage(filename=\"..\/input\/kaggle\/kaggle-logo-transparent-300.png\")","8b01dec5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport folium\n\nfrom wordcloud import WordCloud, STOPWORDS\nfrom collections import defaultdict\n\npd.set_option('display.max_colwidth', -1)\n\nimport os\nprint(os.listdir(\"..\/input\/kaggle-survey-2018\"))","b90db104":"schema = pd.read_csv('..\/input\/kaggle-survey-2018\/SurveySchema.csv', low_memory=False)\nfreeform = pd.read_csv('..\/input\/kaggle-survey-2018\/freeFormResponses.csv', low_memory=False)\nmultiple = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv', low_memory=False)\n\nprint('Schema data: \\nRows: {}\\nCols: {}'.format(schema.shape[0],schema.shape[1]))\nprint(schema.columns)\n\nprint('\\Free form responses data: \\nRows: {}\\nCols: {}'.format(freeform.shape[0],freeform.shape[1]))\nprint(freeform.columns)\n\nprint('\\nMultiple choice responses data: \\nRows: {}\\nCols: {}'.format(multiple.shape[0],multiple.shape[1]))\nprint(multiple.columns)\n\nfree = freeform[1:]\nfreeform_df = free.copy()\n\nresponses = multiple[1:]\nresponses_df = responses.copy()","b38b0e0d":"responses_df['Time from Start to Finish (seconds)'] = responses_df['Time from Start to Finish (seconds)'].astype('float')\nresponses_df['Time from Start to Finish (minutes)'] = responses_df['Time from Start to Finish (seconds)'] \/ 60\n\ntemp1 = responses_df['Q1'].value_counts().reset_index()\ntemp3 = responses_df['Q1'].value_counts(normalize=True) * 100\ntemp3 = temp3.reset_index()\ntemp2 = responses_df.groupby(['Q1'])['Time from Start to Finish (seconds)'].mean().reset_index()\ntemp = pd.merge(temp1, temp2, how='inner', left_on='index', right_on='Q1')\ntemp = temp[['index','Q1_x','Time from Start to Finish (seconds)']]\ntemp = pd.merge(temp, temp3, how='inner', on='index')\ntemp.columns = ['Gender','Number of respondents','Time to finish the survey in seconds','% Number of respondents']\n\nf, ax = plt.subplots(figsize=(10, 2))\nsns.barplot(x=\"% Number of respondents\", y=\"Gender\", data=temp, label=\"% Number of respondents\", color=\"palegreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + 3,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"green\")\nax.set_ylabel('Gender', size=10, color=\"green\")\nax.set_title('[Horizontal Bar Plot] % of respondents across gender', size=12, color=\"green\")\nplt.show()","899d0aa2":"def ngram_extractor(text, n_gram):\n    token = [token for token in text.lower().split(\" \") if token != \"\" if token not in STOPWORDS]\n    ngrams = zip(*[token[i:] for i in range(n_gram)])\n    return [\" \".join(ngram) for ngram in ngrams]\n\n# Function to generate a dataframe with n_gram and top max_row frequencies\ndef generate_ngrams(df, col, n_gram, max_row):\n    temp_dict = defaultdict(int)\n    for question in df[col].dropna():\n        for word in ngram_extractor(question, n_gram):\n            temp_dict[word] += 1\n    temp_df = pd.DataFrame(sorted(temp_dict.items(), key=lambda x: x[1])[::-1]).head(max_row)\n    temp_df.columns = [\"word\", \"wordcount\"]\n    return temp_df","6bcc6f63":"temp = generate_ngrams(freeform_df,'Q1_OTHER_TEXT',1,10)\n\nf, ax = plt.subplots(figsize=(10, 4))\nsns.barplot(x=\"wordcount\", y=\"word\", data=temp, label=\"wordcount\", color=\"palegreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + .2,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.0f}'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('Count of word', size=10, color=\"green\")\nax.set_ylabel('Word', size=10, color=\"green\")\nax.set_title('[Horizontal Bar Plot] Count of words in self described answers for gender', size=12, color=\"green\")\nplt.show()","af3e2d42":"freeform_df[freeform_df['Q1_OTHER_TEXT'].str.len()>50]['Q1_OTHER_TEXT']","92d5536f":"fig, ax = plt.subplots(figsize=(15,3))\nsns.boxplot(x=\"Time from Start to Finish (minutes)\", y=\"Q1\", data=responses_df[responses_df['Time from Start to Finish (minutes)']<responses_df['Time from Start to Finish (minutes)'].quantile(.8)], ax=ax, palette=sns.color_palette(\"RdYlGn\", 4))\nax.set_xlabel('Time from Start to Finish (minutes)', size=10, color=\"#0D47A1\")\nax.set_ylabel('Gender', size=10, color=\"#0D47A1\")\nax.set_title('[Box Plot] Time taken by each gender to fill the survey', size=12, color=\"#0D47A1\")\nplt.gca().xaxis.grid(True)\nplt.show()","e028c1ba":"temp = responses_df['Q2'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10, 4))\nsns.barplot(x=\"Q2\", y=\"index\", data=temp, label=\"index\", color=\"palegreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+1,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"green\")\nax.set_ylabel('Age group', size=10, color=\"green\")\nax.set_title('[Horizontal Bar Plot] % of respondents across age groups', size=12, color=\"green\")\nplt.show()","3f69d715":"fig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(x=\"Time from Start to Finish (minutes)\", y=\"Q2\", data=responses_df[responses_df['Time from Start to Finish (minutes)']<responses_df['Time from Start to Finish (minutes)'].quantile(.8)], ax=ax, palette=sns.color_palette(\"RdYlGn\", 12), order=np.sort(responses_df['Q2'].unique()))\nax.set_xlabel('Time from Start to Finish (minutes)', size=10, color=\"#0D47A1\")\nax.set_ylabel('Age group', size=10, color=\"#0D47A1\")\nax.set_title('[Box Plot] Time taken by each age group to fill the survey', size=12, color=\"#0D47A1\")\nplt.gca().xaxis.grid(True)\nplt.show()","f955b7fa":"temp = responses_df['Q3'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10, 6))\nsns.barplot(x=\"Q3\", y=\"index\", data=temp.head(20), label=\"index\", color=\"aqua\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+.6,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"darkcyan\")\nax.set_ylabel('Country', size=10, color=\"darkcyan\")\nax.set_title('[Horizontal Bar Plot] % of respondents across countries', size=12, color=\"darkcyan\")\nplt.show()","4abe232c":"temp['index'] = temp['index'].replace(\"United States of America\", \"United States\")\ntemp['index'] = temp['index'].replace(\"United Kingdom of Great Britain and Northern Ireland\", \"United Kingdom\")\ntemp['index'] = temp['index'].replace(\"Viet Nam\", \"Vietnam\")\ntemp['index'] = temp['index'].replace(\"Republic of Korea\", \"North Korea\")\ntemp['index'] = temp['index'].replace(\"Iran, Islamic Republic of...\", \"Iran\")\n\ncountry_geo = os.path.join(\"..\/input\/worldcountries1\/\", 'world-countries.json')\n\nm = folium.Map(location=[20, 0], zoom_start=1.5)\nm = folium.Map(location=[48.85, 2.35], tiles=\"Mapbox Bright\", zoom_start=1.5)\n\nm.choropleth(\n    geo_data=country_geo,\n    name='Choropleth',\n    data=temp,\n    columns=['index', 'Q3'],\n    key_on='feature.properties.name',\n    fill_color='YlGn',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='% of respondents'\n)\nfolium.LayerControl().add_to(m)\nm","8190c7c9":"temp = responses_df['Q4'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,3))\nsns.barplot(x=\"Q4\", y=\"index\", data=temp, label=\"index\", color=\"silver\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+1.5,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Education', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by education', size=12, color=\"black\")\nplt.show()","090501c4":"temp = responses_df['Q5'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,6))\nsns.barplot(x=\"Q5\", y=\"index\", data=temp, label=\"index\", color=\"peachpuff\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+1.5,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Undergraduate major', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by undergraduate major', size=12, color=\"black\")\nplt.show()","33f14d15":"temp = responses_df['Q6'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,8))\nsns.barplot(x=\"Q6\", y=\"index\", data=temp, label=\"index\", color=\"mediumspringgreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+.75,\n            p.get_y() + (p.get_height()\/2) + .05,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Job', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by job', size=12, color=\"black\")\nplt.show()","e116f1f7":"temp = generate_ngrams(freeform_df,'Q6_OTHER_TEXT',1,10)\n\nf, ax = plt.subplots(figsize=(10, 4))\nsns.barplot(x=\"wordcount\", y=\"word\", data=temp, label=\"wordcount\", color=\"palegreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + 4,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.0f}'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('Count of word', size=10, color=\"green\")\nax.set_ylabel('Word', size=10, color=\"green\")\nax.set_title('[Horizontal Bar Plot] Count of words in self described answers for role', size=12, color=\"green\")\nplt.show()","ff685824":"temp = responses_df['Q7'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,8))\nsns.barplot(x=\"Q7\", y=\"index\", data=temp, label=\"index\", color=\"mediumspringgreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+.75,\n            p.get_y() + (p.get_height()\/2) + .05,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Industry', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by industry', size=12, color=\"black\")\nplt.show()","ac298b6b":"temp = generate_ngrams(freeform_df,'Q7_OTHER_TEXT',1,10)\n\nf, ax = plt.subplots(figsize=(10, 4))\nsns.barplot(x=\"wordcount\", y=\"word\", data=temp, label=\"wordcount\", color=\"palegreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + 2,\n            p.get_y() + (p.get_height()\/2) + .1,\n            '{:1.0f}'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('Count of word', size=10, color=\"green\")\nax.set_ylabel('Word', size=10, color=\"green\")\nax.set_title('[Horizontal Bar Plot] Count of words in self described answers for industry', size=12, color=\"green\")\nplt.show()","d0c24074":"temp = responses_df['Q8'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,4))\nsns.barplot(x=\"Q8\", y=\"index\", data=temp, label=\"index\", color=\"mediumspringgreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+.75,\n            p.get_y() + (p.get_height()\/2) + .05,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Years of experience in current role', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by current experience', size=12, color=\"black\")\nplt.show()","057d1544":"temp = responses_df['Q9'].value_counts(normalize=True) * 100\ntemp = temp.reset_index()\n\nf, ax = plt.subplots(figsize=(10,8))\nsns.barplot(x=\"Q9\", y=\"index\", data=temp, label=\"index\", color=\"mediumspringgreen\")\n\nfor p in ax.patches:\n    ax.text(p.get_width()+.75,\n            p.get_y() + (p.get_height()\/2) + .05,\n            '{:1.1f}%'.format(p.get_width()),\n            ha=\"center\")\n\nax.set_xlabel('% of respondents', size=10, color=\"black\")\nax.set_ylabel('Yearly compensation in USD', size=10, color=\"black\")\nax.set_title('[Horizontal Bar Plot] % of respondents by current compensation', size=12, color=\"black\")\nplt.show()","43209421":"**Engineers, analysts, professors, teachers, architects and developers are the most respondents with self-described answers**","28f2c4a8":"**Question: What is your gender?**\n* 81.4% of the respondents are Male\n* 16.8% of the respondents are Female\n* Only 1.4% and 0.3% of respondents didn't divulge gender information and self-described respectively","48ea8817":"**Thanks for viewing my Kernel! If you like my work and find it useful, please leave an upvote! :)**\n\n**Key insights:**\n\n***1. Demographic information of respondents:***\n* 81.4% of the respondents are Male\n* Most used words when people self-described sex are **helicopter, non-binary, male, attack and transgender.** Non-binary options should be provided as well. \n* 75% of the respondents are from the age group of 18-34\n* USA and India represents almost 2 in every 5 respondents\n* 2 in 5 respondents are from Computer Science background\n* Almost half of the respondents have a master's degree\n* 90% of the respondents have either a bachelor's, master's or doctoral degree\n* More than 1 in 5 respondents are students\n* Engineers, analysts, professors, teachers, architects and developers are the most respondents with self-described answers\n* A quarter of the respondents are from Computers\/Technology industry.","2fedad3e":"* 2 in 5 respondents are from Computer Science background\n* 1.2% and 0.4% of the respondents have humanities and fine arts background respectively. It will be fascinating to know how they use data science in their fields","b5260c71":"**Consulting industry needs to be an option in next years' survey!**","0f163838":"**A quarter of the respondents are from Computers\/Technology industry. Next comes students and academics from education industry. Then comes people from accounting\/finance industry. These industries represent 70% in this survey**","ee83bf8c":"* Almost half of the respondents have a master's degree\n* 90% of the respondents have either a bachelor's, master's or doctoral degree\n* Only 4% of the respondents are college\/university students\n* 1% didn't have formal education past high school. I will be interested to know what they feel about ML. ","69c1f80f":"**Question: In which country do you currently reside?**\n* 1.7% of the respondents didn't wish to disclose their country\n* USA and India represents almost 2 in every 5 respondents\n* China, Russia and Brazil are the other 3 countries in top 5\n* European countries line up after that. African countries have the least representation in the survey. ","ce585764":"Using word count generator function from my [kernel](https:\/\/www.kaggle.com\/arunsankar\/key-insights-from-quora-insincere-questions), we understand that the most used words when people self-described sex are helicopter, non-binary, male, attack and transgender. Non-binary genders should be provided as options. ","cc3ecf83":"**Question 9: What is your current yearly compensation (approximate $USD)?**\n* 1\/4th of the survey respondents do not wish to disclose their salary\n* Half of the survey respondents have a yearly compensation of less than 60,000 USD","7280630d":"**More to come!!!**","6fb8c84e":"**Question 8: How many years of experience do you have in your current role?**\n* 58% of the survey respondents are in their current role only for 3 years or less\n* 7.5% of the survey respondents are in their current role for more than 15 years","4359550a":"**The respondents who preferred not to divulge their gender were the fastest to complete the survey. Were they in a hurry? Or not so interested?**","cdf6b4e3":"**More than 1 in 5 survey participants are students.**","e0b8f627":"**Till the age of 70, the time taken to finish the survey shows an upward trend and then drops drastically for 80+. What would be an ideal time to finish this survey?**","103675f3":"**Some good suggestions on survey design for Kaggle next time**","c4297924":"**75% of the respondents are from the age group of 18-34**"}}