{"cell_type":{"1aaca61e":"code","21bef6ce":"code","07198742":"code","0df31585":"code","faafb5af":"code","b1609966":"code","e3171304":"code","70ab23dd":"code","b816e374":"code","3d88e705":"code","8296def4":"code","02bf52de":"code","06adf2bf":"code","487a9644":"code","7eb67e72":"code","4eb149c8":"code","482aff25":"code","e99fa1a5":"code","ff8b4ab1":"code","600a2f62":"code","acc3961a":"code","a656ca8c":"markdown","6eacb560":"markdown"},"source":{"1aaca61e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nimport pandas\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom keras.utils import np_utils\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21bef6ce":"df = pd.read_csv(\"..\/input\/abalone-dataset\/abalone.csv\")","07198742":"df.head(10).T","0df31585":"df.columns","faafb5af":"df.shape","b1609966":"df.describe()","e3171304":"df.info()","70ab23dd":"df['Sex'] = df['Sex'].map({\"M\":0, \"F\":1, \"I\":2})","b816e374":"tabcorr = df.corr()\nplt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","3d88e705":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","8296def4":"correlations = tabcorr.Sex\nprint(correlations)","02bf52de":"correlations = correlations.drop(['Sex'],axis=0)","06adf2bf":"print(abs(correlations).sort_values(ascending=False))","487a9644":"from tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","7eb67e72":"y = df['Sex']\nX = df.drop(['Sex'], axis=1).values.astype(float)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\ny_test_ = y_test\ny_train = to_categorical(y_train, 3)\ny_test = to_categorical(y_test, 3)","4eb149c8":"model = Sequential()\nmodel.add(Dense(16,input_dim=8, activation=\"tanh\"))\nmodel.add(Dense(3, activation=\"softmax\"))\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","482aff25":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=100, verbose=1)","e99fa1a5":"predict_x=model.predict(X_test)\ny_ann=np.argmax(predict_x,axis=1)","ff8b4ab1":"accuracy_score(y_test_, y_ann)","600a2f62":"confusion_matrix(y_test_, y_ann)","acc3961a":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()\n\nplot_scores(train)","a656ca8c":"# Deep Learning","6eacb560":"## Correlations entre les colonnes"}}