{"cell_type":{"8e9153ee":"code","fa36d83a":"code","1712ebd8":"code","3d359781":"code","f11b23b6":"code","926926ff":"code","5fb60556":"code","ffe66024":"code","45869e77":"markdown","2f918b63":"markdown","9e844699":"markdown","e37288fa":"markdown","c0e7cc0e":"markdown","7dfb2c90":"markdown","441ed852":"markdown"},"source":{"8e9153ee":"from IPython.display import clear_output\n!pip install autogluon --user\nclear_output()","fa36d83a":"import numpy as np\nimport pandas as pd \nimport os \nimport random\nfrom autogluon.tabular import TabularDataset, TabularPredictor","1712ebd8":"TRAIN_PATH = \"..\/input\/titanic\/train.csv\"\nTEST_PATH = \"..\/input\/titanic\/test.csv\"\nSAMPLE_SUBMISSION_PATH = \"..\/input\/titanic\/gender_submission.csv\"\nSUMISSION_PATH = \"submission.csv\"\n\nTARGET = 'Survived'\nEVAL_METRIC = \"roc_auc\"\n\n\nSAVE_PATH = 'agModels-predictClass' \nDEFAULT_RANDOM_SEED = 2021\n\n\ndef seedBasic(seed=DEFAULT_RANDOM_SEED):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nseedBasic()","3d359781":"train = TabularDataset(TRAIN_PATH)\ntest = TabularDataset(TEST_PATH)","f11b23b6":"def removeAutoOutlier(df,minPercent,maxPercent):\n    begin_size = len(df)\n\n    outlier_cols = []\n    for colname, colvalue in df.iteritems():\n        if type(colvalue[1]) != str and colvalue.nunique() >= 10: # continuous column \n            outlier_cols.append(colname)\n\n    def drop_outliers(df, field_name):\n        iqr = 1.5 * (np.percentile(df[field_name], maxPercent) - np.percentile(df[field_name], minPercent))\n        df.drop(df[df[field_name] > (iqr + np.percentile(df[field_name],maxPercent))].index, inplace=True)\n        df.drop(df[df[field_name] < (np.percentile(df[field_name], minPercent) - iqr)].index, inplace=True)\n\n    for col in outlier_cols:\n        drop_outliers(df,col)\n\n    after_size = len(df)\n\n    print(\"begin size=\",begin_size)\n    print(\"after size=\",after_size)\n    print(\"outler size=\",after_size - begin_size)\n    \n    \nremoveAutoOutlier(train,10,90)","926926ff":"predictor = TabularPredictor(label=TARGET,eval_metric=EVAL_METRIC, path=SAVE_PATH).fit(train)","5fb60556":"y_pred = predictor.predict(test)","ffe66024":"submission = pd.read_csv(SAMPLE_SUBMISSION_PATH)\nsubmission[TARGET] = y_pred\nsubmission.to_csv(SUMISSION_PATH,index=False)\nsubmission.head()","45869e77":"# import libraries","2f918b63":"# define global Vairiables","9e844699":"# install autogluon","e37288fa":"# predict test data using model","c0e7cc0e":"# submission","7dfb2c90":"# load data ","441ed852":"# build model"}}