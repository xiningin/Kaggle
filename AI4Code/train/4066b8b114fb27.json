{"cell_type":{"a9e62b6a":"code","79c80ecf":"code","5c2bcd72":"code","a8cf5921":"code","5bf865d6":"code","ff7eaad5":"code","0655a06b":"code","9fd92a3a":"code","9543c68d":"code","022a795d":"markdown","b996d45c":"markdown","fd982b59":"markdown","ade71a4b":"markdown","8bf5fb09":"markdown","a7bbbd74":"markdown","91662611":"markdown","ade50734":"markdown","ad30712c":"markdown","a549cd0c":"markdown","60c2ddf9":"markdown","c5f50c90":"markdown","06d50c40":"markdown"},"source":{"a9e62b6a":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport copy\nimport os\n\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource, HoverTool, Select, Slider, CustomJS\nfrom bokeh.layouts import column\nfrom bokeh.io import output_notebook, show\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path_var = os.path.join(dirname, filename)\n\ninit_df = pd.read_csv(path_var, encoding='latin1')","79c80ecf":"col_list = list(init_df.columns)\ncol_remove = ['Area Abbreviation','Area Code','Item Code','Element Code','latitude','longitude']\nfor i in col_remove:\n    col_list.remove(i)\n\nrename_dict = dict()\nfor i in range(1961,2014):\n    rename_dict.update({'Y'+str(i):i})\n    \ndf = init_df[col_list]\ndf.rename(columns=rename_dict,inplace=True)\n\n# CLEANED DATAFRAME\ndf","5c2bcd72":"f_total_df = pd.DataFrame(columns=['year','type','total'])\nind=0\nfor i in ['Food','Feed']:\n    f_total = df[df.Element == i].sum(axis=0)\n    f_total.drop(f_total.head(4).index,inplace=True)\n    f_total.to_dict()\n    for k,v in f_total.items():\n        f_total_df.loc[ind] = np.nan\n        f_total_df['year'][ind] = k\n        f_total_df['type'][ind] = i\n        f_total_df['total'][ind] = v\n        ind +=1\nf_total_df['total'] = f_total_df['total'].astype('float')\n\n# RESHAPED DATAFRAME FOR FIRST GRAPH\nf_total_df.head()","a8cf5921":"fig = plt.gcf()\nfig.set_size_inches(10,5)\n\nsns.set_style('whitegrid')\nsns.lineplot(x='year',y='total',hue='type',data=f_total_df)\n\nplt.xticks(rotation=90)\nplt.show()","5bf865d6":"# DISPLAY BOKEH PLOTS INLINE\noutput_notebook()","ff7eaad5":"ctry_list = list(df.Area.unique())\nyr_list = list(df.columns)\ncol_remove = ['Area','Item','Element','Unit']\nfor i in col_remove:\n    yr_list.remove(i)\n\ntemp_df = pd.DataFrame(columns=yr_list,index=['country','food','feed'])\nfor yr in yr_list:\n    ctry_var = []; food_var = []; feed_var = []\n    for ctry in ctry_list:\n        ctry_var.append(ctry)\n        for type in ['Food','Feed']:\n            temp=df[['Area','Element',yr]][(df['Area']==ctry)&(df['Element']==type)]          \n            if type == 'Food':\n                food_var.append(temp[yr].sum())\n            else:\n                feed_var.append(temp[yr].sum())\n    temp_df[yr]['country'] = ctry_var\n    temp_df[yr]['food'] = food_var\n    temp_df[yr]['feed'] = feed_var\n    \n# RESHAPED DATAFRAME FOR SECOND GRAPH\ntemp_df.head()","0655a06b":"temp_dict = temp_df.to_dict()\nsource = ColumnDataSource(temp_dict[2013])\n\n# DEFINE AND CREATE THE PLOT\nplot = figure(title='Food vs Feed per Country',plot_height=300,x_axis_label='Food',y_axis_label='Feed')\nplot.circle(x='food',y='feed',source=source,alpha=0.5,size=15)\n\n# CREATE HOVER ITEMS\nhover = HoverTool(tooltips=[('Country','@country'),('Food Total','@food'),('Feed Total','@feed')])\nplot.add_tools(hover)\n\n# CREATE SLIDER ITEM\nslider = Slider(start=1961,end=2013,step=1,value=2013,title='Year (1961-2013)')\n\n# CREATE JAVASCRIPT CALLBACK\ncallback = CustomJS(args={'source':source,'temp_dict':temp_dict}, code=\"\"\"\n            console.log('changed selected option', cb_obj.value);\n            var new_data = temp_dict[cb_obj.value]\n            source.data = new_data\n            source.change.emit();\n\"\"\")\nslider.js_on_change('value',callback)\n\n\n# SHOW LAYOUT AND PLOT\nshow(column(plot,slider))","9fd92a3a":"item_list = list(df.Item.unique())\ntemp_df = pd.DataFrame(columns=yr_list,index=ctry_list)\nfor ctry in ctry_list:\n    for yr in yr_list:\n        item_var = []; count_var = []; element_var = []\n        for i in item_list:\n            temp = df[['Area','Item','Element',yr]][(df['Area']==ctry)&(df['Item']==i)]\n            item_var.append(i)\n            count_var.append(temp[yr].sum())\n            element_var.append(temp)\n        temp_complete = {\n            'item' : item_var,\n            'count': count_var\n        }\n        temp_complete_df = pd.DataFrame(temp_complete).sort_values(by='count',ascending=False).head(20)\n        temp_df[yr][ctry] = {\n            'item' : list(temp_complete_df['item']),\n            'count': list(temp_complete_df['count'])\n        }\n        \n# RESHAPED DATAFRAME FOR 3RD GRAPH        \ntemp_df.head()","9543c68d":"temp_dict = temp_df.to_dict()\nsource = ColumnDataSource(temp_dict[2013]['Philippines'])\n\n# DEFINE AND CREATE PLOT\nsorted_cat = sorted(source.data['item'],key=lambda y:source.data['count'][source.data['item'].index(y)],reverse=True)\nplot = figure(title='Top 20 Food Items per Country\/ per year',plot_height=400,y_range=sorted_cat)\nplot.hbar(y='item',right='count',height=0.8,source=source)\n\n# CREATE HOVER ITEMS\nhover = HoverTool(tooltips=[('Item','@item'),('Total','@count')])\nplot.add_tools(hover)\n\n# CREATE SLIDER AND SELECT ITEMS\nslider = Slider(start=1961,end=2013,step=1,value=2013,title='Year (1961-2013)')\nselect = Select(title='Country',value='Philippines',options=ctry_list)\n\n# CREATE JAVASCRIPT CALLBACK\ncallback = CustomJS(args={'source':source,'temp_dict':temp_dict,'plot':plot,\n                          'slider':slider,'select':select}, code=\"\"\"\n           var new_data = temp_dict[slider.value][select.value]\n           plot.y_range.factors = new_data['item']\n           plot.change.emit();\n           source.data = new_data\n           source.change.emit();\n\"\"\")\nslider.js_on_change('value',callback)\nselect.js_on_change('value',callback)\n\n# SHOW LAYOUT AND PLOT\nshow(column(select,plot,slider))","022a795d":"<a id='Introduction'><\/a>\n# About this Kernel\n\nThis notebook contains visualizations regarding global food production. The data here came from the Food and Agriculture Organization of the United Nations group, and it is mostly focused on two utilizations of each food item available: \n> * Food - refers to the total amount of the food item available as human food during the reference period.\n> * Feed - refers to the quantity of the food item available for feeding to the livestock and poultry during the reference period.\n\n\nSummary Content:\n* Number of countries involved: 174\n* Time period: 1961 till 2013\n* Unit of measurement: Unit\/ 1000 tonnes or 1,000,000 Kg\n* File: FAO.csv \n\nI will be creating static and dynamic graphs for visualization, mainly using these 2 python libraries: seaborn and bokeh.","b996d45c":"It seems there is a large gap between the 'food' for humans and 'feed' for livestock consumption. Both are at an upward trend as the years progress. Do note that there is a sharp upward trend after the year 90's.","fd982b59":"The second graph below shows an interactive scatterplot of Food vs Feed per country per year. \nThe year can be changed via the slider item, and we can hover over the datapoints to display the country and the total count of food items generated per year.","ade71a4b":"Some noticeable observations:\n* Since 1961 up to 2013, mainland China was the lead producer of 'food' items for human consumption. Do take note that they have the biggest population worldwide. 'Feed' production for livestock is also relatively high since the start of 1970s.\n* Since 1975 till 2013, India is the 2nd lead producer of 'food' items for human consumption, though they produce relatively low 'feed' items for livestock compared to other countries. India ranks 2nd on the biggest population worldwide.\n* US was the biggest 'feed' producer from 1961 till 1992. Their 'food' production was also high eversince, ranking 3rd after China and India. ","8bf5fb09":"That's all folks for the Global Food Production Visualization. Do leave a note for feedback and improvement. Thank you for reading and spending some time on this kernel. :-)","a7bbbd74":"Some noticeable observations:\n* Philippines\n    * The top produced food item is cereals. Rice only comes in second.\n    * Fruits and veggies are the next top items. \n    * From what I know, Filipinos are meat-eaters, but it seems the meat production is not included in the top 5.\n* India\n    * Milk is the top produced item, followed by cereals.\n    * Rice, veggies, fruits and rootcrops are the next highest items.\n    * No meat or fish items are seen all throughout the years. \n* United States\n    * The top produced food item in the US is cereals.\n    * It is followed by milk and maize products. \n    * I can see some poultry, bovine, and pig meat being at the top 20.\n    * Surprisingly, I see beer and alcoholic beverages too.\n* Mainland China\n    * Their top products are veggies and cereals.\n    * Rice and rootcrops are the second largest items being produced here.\n    * They also produce alcoholic beverages and beer, and is included in the top 20.","91662611":"<a id='static-food-feed'><\/a>\n# Static: Food vs Feed Time-Series Graph","ade50734":"Below is a graph showing the total 'food' and 'feed' count worldwide in time-series, using seaborn's lineplot. I've reshaped the dataframe to sum up all food - feed items per year.","ad30712c":"# Table of Contents\n* [About this Kernel](#Introduction)\n* [Data Preparation](#Data-Preparation)\n* [Static: Food vs Feed Time-Series Graph](#static-food-feed)\n* [Dynamic: Food vs Feed per Country Scatterplot](#dynamic-food-feed)\n* [Dynamic: Top Food Items Bar graph](#dynamic-food-items)","a549cd0c":"For the 3rd graph, it displays an interactive barplot of the top 20 food items being produced in a country per year. The year can be changed via the slider item, the country can be changed via the dropdown selection, and we can hover over the datapoints to display the food name and its total production count generated per year.","60c2ddf9":"<a id='Data-Preparation'><\/a>\n# Data Preparation\n\nSince there are 63 variables involved in the original dataset, we will trim it down and retain only those that are relevant to our plot: Area(country), Item(food item), Element(food type), Unit(for base measurement only), and the year columns. \n\nI'll be renaming the year columns to remove the 'Y' string infront (ie: 'Y2013' to '2013'), so that it will be easier to navigate upon using the Slider item. \n\nNaN values were seen all throughout the year columns, but since we'll be using the sum method for most of the count values, it automatically addresses NaN values to zero. \n\nThe graphs are mostly interactive, so I'll be doing a lot of dataframe reshaping for each chart.\n","c5f50c90":"<a id='dynamic-food-feed'><\/a>\n# Dynamic: Food vs Feed per Country Scatterplot","06d50c40":"<a id='dynamic-food-items'><\/a>\n# Dynamic: Top Food Items Bar graph"}}