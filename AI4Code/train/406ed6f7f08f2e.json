{"cell_type":{"458e3f94":"code","08c5c1c2":"code","3b9d521b":"code","712a7fd2":"code","2361d56c":"code","efca7997":"code","23614c34":"code","7cd712d1":"code","f5326fd8":"code","6d938a4a":"code","5758141a":"code","78e9a37f":"code","5f70fbe3":"code","4ea43801":"code","9e780788":"code","e3bd4fd9":"code","47f20d4a":"code","89d1201f":"markdown","e1387643":"markdown","2e37bb77":"markdown","7d30045a":"markdown","e4ecca76":"markdown"},"source":{"458e3f94":"import pandas as pd\nimport numpy as np\nimport random\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.io as pio\nimport plotly.express as px\npio.templates.default = \"plotly_dark\"","08c5c1c2":"df = pd.read_csv('..\/input\/twitchdata\/twitchdata-update.csv')\ndf.head()","3b9d521b":"#changing minutes to hours\ndf['Watch time(Minutes)'] = (df['Watch time(Minutes)'] \/ 60).astype(int)\ndf['Stream time(minutes)'] = (df['Stream time(minutes)'] \/ 60).astype(int)\ndf.rename(columns={'Watch time(Minutes)': 'Watch time(hours)', 'Stream time(minutes)': 'Stream time(hours)'}, inplace=True)\ndf.head()","712a7fd2":"languages = df['Language'].value_counts(ascending=True, normalize=True) * 100","2361d56c":"fig1 = go.Figure()\n\nfig1.add_trace(go.Bar(\n     x= languages.index.to_list(),\n     y= languages.to_list(),\n     marker={'color': 'skyblue',\n            'line':{'color':'black', 'width': 1}}))\n\nfig1.update_layout(title='Percentage of Streamers by language',\n                           xaxis=dict(title='Streamers language'),\n                           yaxis=dict(title='Percentage'))\nfig1.show()","efca7997":"colors = px.colors.sequential.Rainbow # create a list with all the colors of Rainbow palette","23614c34":"def plot_px(y, title, df):\n    random.shuffle(colors) # shuffle the colors for giving diferente colors to our plot every time we call our funciton\n    col = df[y].sort_values(ascending=False)[:25] # Select top 25 stremers from a select column\n    fig = px.bar(df, x=df.iloc[col.index]['Channel'].to_list(),\n                     y=col.value_counts().index.to_list(),\n                     color=df.iloc[col.index]['Language'].to_list(),\n                     color_discrete_sequence = colors,\n                     title=title,\n                     labels={'color':'Languages'})\n    fig.update_layout(xaxis=dict(title='Streamers'),\n                      yaxis=dict(title=y))\n    return fig.show()","7cd712d1":"plot_px('Followers gained', 'Top 25 Streamers by Followers gained', df)","f5326fd8":"plot_px('Followers', 'Top 25 Streamers by Followers', df)","6d938a4a":"plot_px('Watch time(hours)', 'Top 25 Most Watched Streamers', df)","5758141a":"plot_px('Average viewers', 'Top 25 Streamers by Average viewers', df)","78e9a37f":"plot_px('Peak viewers', 'Top 25 Streamers by Peak viewers', df)","5f70fbe3":"mature = pd.Series(np.where(df['Mature'] == 0, 'No', 'Yes')).value_counts()\npartnered = pd.Series(np.where(df['Partnered'] == 0, 'No', 'Yes')).value_counts()","4ea43801":"f1 = go.Bar(\n     x= mature.index.to_list(),\n     y= mature.to_list(),\n     name='Twitch Mature',\n     marker={'color': '#51ff0d'})\nf2 = go.Bar(\n     x= partnered.index.to_list(),\n     y= partnered.to_list(),\n     name='Twitch Partnered',\n     marker={'color': 'skyblue'})\ndata = [f1, f2]\nlayout = go.Layout(barmode='group')\nfig = go.Figure(data=data, layout=layout)\nfig.update_layout(title='Streamers Matura and Partnered', yaxis=dict(title='Count'), autosize=False)\nfig.show()","9e780788":"cols = ['Peak viewers', 'Followers', 'Followers gained', 'Views gained']\na = df.groupby('Language')[cols].mean()\ntop_6 = df['Language'].value_counts()[:6].index.to_list()","e3bd4fd9":"fig1 = go.Bar(\n     x= list(a.loc[top_6[0]].index),\n     y= list(a.loc[top_6[0]].values),\n     name='English',\n     marker={'color': '#ff0dff'})\nfig2 = go.Bar(\n     x= list(a.loc[top_6[1]].index),\n     y= list(a.loc[top_6[1]].values),\n     name='Korean',\n     marker={'color': '#f5ff0d'})\nfig3 = go.Bar(\n     x= list(a.loc[top_6[2]].index),\n     y= list(a.loc[top_6[2]].values),\n     name='Russian',\n     marker={'color': '#1ac1dd'})\nfig4 = go.Bar(\n     x= list(a.loc[top_6[3]].index),\n     y= list(a.loc[top_6[3]].values),\n     name='Spanish',\n     marker={'color': '#3eff0d'})\nfig5 = go.Bar(\n     x= list(a.loc[top_6[4]].index),\n     y= list(a.loc[top_6[4]].values),\n     name='French',\n     marker={'color': '#d0748b'})\nfig6 = go.Bar(\n     x= list(a.loc[top_6[5]].index),\n     y= list(a.loc[top_6[5]].values),\n     name='Portuguese',\n     marker={'color': '#0d60ff'})","47f20d4a":"data = [fig1, fig2, fig3, fig4, fig5, fig6]\nrandom.shuffle(data)\nlayout = go.Layout(barmode='group')\nfig = go.Figure(data=data, layout=layout)\nfig.update_layout(title='Average values by languages')\nfig.show()","89d1201f":"We can see twitch is dominate by english streamers almost half the users are english speakers","e1387643":"Plot the average values from the top 6 languages.","2e37bb77":"## The values are little low, but it's plotly you can zoom in \ud83e\udd23\ud83e\udd23\ud83e\udd23\ud83e\udd23","7d30045a":"![](https:\/\/cf-images.us-east-1.prod.boltdns.net\/v1\/static\/769341148\/eb08e88d-650c-4aed-9782-b3275ac6e17d\/33b4909c-c5df-451a-9d23-eba4c8481078\/1280x720\/match\/image.jpg)\n\n# Twitch Simple Visualization with Plotly!\n\nFirst of all, I would like to thanks @aayushmishra1512 to bring this dataset to kaggle and for his notebook, that give me some thoughts to work with mine.\nCheck his notebook [Here.](https:\/\/www.kaggle.com\/aayushmishra1512\/twitch-top-streamers-data-eda)","e4ecca76":"## Importing"}}