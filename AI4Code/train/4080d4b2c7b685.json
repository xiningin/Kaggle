{"cell_type":{"6b42e418":"code","12ec09c7":"code","9de92789":"code","04945da1":"code","30a8b352":"code","9073bb40":"code","3a73ff3f":"code","01bd68dd":"code","3636ca9c":"code","a1ca8cd6":"code","4b2ee9e5":"code","44b6aa85":"code","4eff6279":"code","464d7206":"code","b7687427":"code","0bf1ff62":"code","ed8a3ebd":"code","328f540f":"code","32935371":"code","1e5dc21b":"code","a1474c12":"markdown","db79dc06":"markdown","8235065f":"markdown","8bf5a040":"markdown","60ea5d28":"markdown","781eb68c":"markdown","d6840b85":"markdown","d395595c":"markdown","220005fc":"markdown","1441d9a0":"markdown","0a801959":"markdown","bad83689":"markdown","acd9edaa":"markdown","65a762b0":"markdown","c230994a":"markdown","6cc8f88f":"markdown","be4eaad3":"markdown"},"source":{"6b42e418":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/usa-housing\/USA_Housing.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","12ec09c7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nsns.set_style(\"whitegrid\")\nplt.style.use(\"fivethirtyeight\")","9de92789":"\nHousing_data = pd.read_csv('\/kaggle\/input\/usa-housing\/USA_Housing.csv')#reading the csv file\nHousing_data.head()\n","04945da1":"Housing_data.info()","30a8b352":"Housing_data.describe()","9073bb40":"Housing_data.columns","3a73ff3f":"sns.pairplot(Housing_data)","01bd68dd":"sns.distplot(Housing_data['Price'])","3636ca9c":"sns.heatmap(Housing_data.corr(), annot=True)","a1ca8cd6":"Housing_data.corr()","4b2ee9e5":"X = Housing_data[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n               'Avg. Area Number of Bedrooms', 'Area Population']]\nY =Housing_data['Price']\n","44b6aa85":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n","4eff6279":"from sklearn import metrics\nfrom sklearn.model_selection import cross_val_score\n\ndef cross_val(model):\n    pred = cross_val_score(model, X, Y, cv=10)\n    return pred.mean()\n\ndef print_evaluate(true, predicted):  \n    mae = metrics.mean_absolute_error(true, predicted)\n    mse = metrics.mean_squared_error(true, predicted)\n    rmse = np.sqrt(metrics.mean_squared_error(true, predicted))\n    r2_square = metrics.r2_score(true, predicted)\n    print('MAE:', mae)\n    print('MSE:', mse)\n    print('RMSE:', rmse)\n    print('R2 Square', r2_square)\n    print('__________________________________')\n    \ndef evaluate(true, predicted):\n    mae = metrics.mean_absolute_error(true, predicted)\n    mse = metrics.mean_squared_error(true, predicted)\n    rmse = np.sqrt(metrics.mean_squared_error(true, predicted))\n    r2_square = metrics.r2_score(true, predicted)\n    return mae, mse, rmse, r2_square","464d7206":"from sklearn.linear_model import LinearRegression\n\nlin_reg = LinearRegression(normalize=True)\nlin_reg.fit(X_train,Y_train)","b7687427":"# print the intercept\nprint(lin_reg.intercept_)","0bf1ff62":"coeff_df = pd.DataFrame(lin_reg.coef_, X.columns, columns=['Coefficient'])\ncoeff_df ","ed8a3ebd":"Y_pred = lin_reg.predict(X_test)\nplt.scatter(Y_test,Y_pred)","328f540f":"sns.distplot((Y_test -Y_pred), bins=50);","32935371":"Y_Test_pred = lin_reg.predict(X_test)\nY_Train_pred = lin_reg.predict(X_train)\n\nprint('Test set evaluation:\\n_____________________________________')\nprint_evaluate(Y_test, Y_Test_pred)\nprint('Train set evaluation:\\n_____________________________________')\nprint_evaluate(Y_train,Y_Train_pred)","1e5dc21b":"res_df=pd.DataFrame(data=[[\"Linear Regression\", *evaluate(Y_test,Y_Test_pred),cross_val(LinearRegression())]] ,columns=['Model','MAE','MSE','RMSE','R2 square','Cross validation'])\nres_df                 \n                   ","a1474c12":"# **TRAINING A LINEAR REGRESSION MODEL**","db79dc06":"# **GETTING THE TOTAL INFORMATION AND DESCIPTION ABOUT THE WHOLE DATASET**","8235065f":"# **LINEAR REGRESSION USING PYTHON**","8bf5a040":"# **DATA**\n\nWE ARE GOING TO USE USA_HOUSING DATASET FOR OUR MODEL CREATION BELOW\nSINCE HOUSE PRICES ARE CONTINUOS VARIABLE , WE CAN APPLY LINEAR REGRESSION OVER HERE \nTHE STEPS AND PROCEDURES ARE GIVEN BELOW","60ea5d28":"# **EXPLORATORY DATA ANALYSIS (EDA)**","781eb68c":"# **RESIDUAL HISTOGRAM**","d6840b85":"# **CHECKING OUT DATA**\n","d395595c":"# **TOTAL COLUMNS IN THE SET**","220005fc":"# **LINEAR REGRESSION**","1441d9a0":"# **EVALUATION AND CALCULATION OF R2 MSE RMSE MAE FROM ACTUAL AND PREDICTED VALUES**","0a801959":"# **REGRESSION EVALUATION METRICS**","bad83689":"# **MODEL EVALUATION PROCESS**","acd9edaa":"# **RESULTS FROM MODEL CREATION**","65a762b0":"# **TRAIN AND TEST SPLIT**","c230994a":"# **IMPORT LIBRARIES**","6cc8f88f":"# **CALCULATING THE mean median standard deviation maximum and minimum values  OF THE DATA SET**","be4eaad3":"# **PREDICTIONS FROM MY MODEL**"}}