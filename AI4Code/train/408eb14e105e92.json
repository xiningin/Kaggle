{"cell_type":{"88e233ed":"code","9d1a7df9":"code","c9d98a2f":"code","ca933fed":"code","b7b8dd21":"code","897957a2":"code","bf175f54":"code","c665e8e5":"code","5696f8a8":"code","ab8179f0":"markdown","15a81ad6":"markdown"},"source":{"88e233ed":"\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport warnings as w\nw.filterwarnings('ignore')","9d1a7df9":"\ndataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\ndataset.sample(10)","c9d98a2f":"X = dataset.iloc[:, [2, 3]].values\ny = dataset.iloc[:, 4].values","ca933fed":"\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","b7b8dd21":"\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","897957a2":"\nfrom sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)","bf175f54":"# Predicting the Test set results\ny_pred = classifier.predict(X_test)","c665e8e5":"# Making the Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","5696f8a8":"from sklearn.metrics import fbeta_score\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfb = fbeta_score(y_test, y_pred, average='macro', beta=0.5)\nf1 = f1_score(y_test, y_pred, average= None)\nac = accuracy_score(y_test, y_pred)\n\nfb, acs, fs = [], [], []\n\nprint(\"Accuracy\", ac)\nprint(\"F1 score\", f1)\nprint(\"F beta score\", ac)","ab8179f0":"### Gaussian Naive Bayes Classifier","15a81ad6":"### Feature Scaling"}}