{"cell_type":{"7ab17568":"code","1699055a":"code","deace4b4":"code","21a034f3":"code","feee56da":"code","cdbebd34":"code","ad7523b8":"code","bd385cc0":"code","60700660":"code","8279716c":"code","54b6d252":"code","cdd72db0":"code","e6229555":"code","faf0cecf":"code","8c841c20":"code","2cbbfb0f":"code","1e6d4a77":"code","c453201f":"code","dbcb06c5":"code","85156fc8":"code","8ded4da5":"code","1360d26a":"code","089681e9":"code","f0d00a10":"code","184c6990":"code","a69f9fd9":"code","e0013680":"code","31c49489":"code","fb7ae42f":"code","e1c915f2":"code","655b57de":"code","374c6801":"code","2f12618f":"code","926d20c5":"code","598fe10d":"code","39d619db":"code","3b00c04a":"code","fcb771df":"code","6269e18f":"code","8d695d9b":"code","4d4aecf5":"code","cab5ecb3":"code","cd28da93":"code","e37629f9":"code","4b14be16":"code","6f22ef13":"code","e61bb258":"code","cb43cc87":"code","e11bba93":"code","40cf5be4":"markdown","a54e0b29":"markdown","a8dfaacd":"markdown","0bc2459e":"markdown","7cf80fa2":"markdown","277c56c1":"markdown","a2acfe40":"markdown","6050b5bc":"markdown","4a7d767e":"markdown","6602f8dd":"markdown","59537dba":"markdown","17967123":"markdown","6c39c00a":"markdown","57712b35":"markdown","f9247205":"markdown","f262f907":"markdown","b8dadf81":"markdown","cfbfe570":"markdown","5cdab7af":"markdown","5be3148a":"markdown","6a13e91f":"markdown","b6fe5884":"markdown"},"source":{"7ab17568":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1699055a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","deace4b4":"sns.set(color_codes=True)\npal = sns.color_palette(\"viridis\", 10)\nsns.set_palette('muted')","21a034f3":"df = pd.read_csv('..\/input\/relevel-analytics-intern-assignment-data\/Dataset - Sheet1.csv')","feee56da":"df.info()","cdbebd34":"df.head(40)","ad7523b8":"df['Registered At'] = pd.to_datetime(df['Registered At'], format='%d\/%m\/%y %H:%M')\ndf['Purchased At'] = pd.to_datetime(df['Purchased At'], format='%d\/%m\/%y %H:%M')\n","bd385cc0":"df['reg_month'] = df['Registered At'].apply(lambda x: x.month)\ndf['reg_day'] = df['Registered At'].apply(lambda x: x.day)\ndf['reg_year'] = df['Registered At'].apply(lambda x: x.year)\ndf['reg_hour'] = df['Registered At'].apply(lambda x: x.hour)\ndf['reg_minute'] = df['Registered At'].apply(lambda x: x.minute)\n\ndf['pur_month'] = df['Purchased At'].apply(lambda x: x.month)\ndf['pur_day'] = df['Purchased At'].apply(lambda x: x.day)\ndf['pur_year'] = df['Purchased At'].apply(lambda x: x.year)\ndf['pur_hour'] = df['Purchased At'].apply(lambda x: x.hour)\ndf['pur_minute'] = df['Purchased At'].apply(lambda x: x.minute)","60700660":"df['reg_to_pur_conversion'] = 30*(df['pur_month'] - df['reg_month'] - 1)+(30 - df['pur_day']+df['reg_day']) ","8279716c":"df","54b6d252":"df.drop(['Registered At','Purchased At'],axis=1, inplace=True)","cdd72db0":"df","e6229555":"df.groupby(['Customer Name'])['Customer Name'].count().sort_values(ascending=False)","faf0cecf":"df.groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',title = 'No.of sales vs Product', ylabel= 'No. of Sales')\n","8c841c20":"df.groupby('Product')[\"Sales ('000, USD)\"].sum().sort_values(ascending=False).plot(kind='bar', title=\"Total sales(1000s) vs Product\",ylabel= 'Total Sales')","2cbbfb0f":"df.groupby('Product')[\"Sales ('000, USD)\"].mean().sort_values(ascending=False).plot(kind='bar', title=\"Avg sales(1000s) vs Product\", ylabel= 'Avg Sales')","1e6d4a77":"df.groupby('Product')[\"Sales ('000, USD)\"].agg(['mean' ,'count']).sort_values(by='mean',ascending=False)","c453201f":"refund_ratio_df = df.groupby('Product').Product.agg(['count'])\ndf[df['Refunded']==True].groupby('Product').Product.count()","dbcb06c5":"l = [1,3,1,0,0,2,0]\nrefund_ratio_df['Refund Ratio'] = l\/refund_ratio_df['count']\nrefund_ratio_df","85156fc8":"df.groupby('Product').Product.count().plot(kind='bar',color='teal', title = 'Refund Ratio')\ndf[df['Refunded']==True].groupby('Product').Product.count().plot(kind='bar',color='red')\n","8ded4da5":"sns.boxplot(data=df, x= 'Product', y='reg_to_pur_conversion')\nplt.title('Days took to purchase')\nplt.ylabel('Days')","1360d26a":"\ndf.groupby('Product')['reg_to_pur_conversion'].agg(['max','min','mean']).sort_values(by='max',ascending=False).plot(kind='bar',ylabel = 'Days to Purchase ', title = 'Product Purchase Comparison',figsize=(12,8))\n","089681e9":"df.groupby('Region').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales', title = 'Region vs Sales')","f0d00a10":"df[df.Region=='North'].groupby(['Product'])['Product'].count().sort_values(ascending=False).plot(kind='bar', ylabel = 'No. of Sales',title='North sales',color='teal')","184c6990":"df[df.Region=='East'].groupby(['Product'])['Product'].count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='East sales',color='blue')","a69f9fd9":"df[df.Region=='South'].groupby(['Product'])['Product'].count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='South sales', color='brown')","e0013680":"df[df.Region=='West'].groupby(['Product'])['Product'].count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='West sales', color='purple')","31c49489":"df[df.Region=='Central'].groupby(['Product'])['Product'].count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='Central sales')","fb7ae42f":"df.groupby('Origin')['Product'].count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='Origin vs Sales')","e1c915f2":"df[df.Origin=='organic_search'].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title = 'Organic Search')","655b57de":"df[df.Origin=='paid_search'].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='Paid Search')","374c6801":"df[df.Origin=='social'].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel = 'No. of Sales',title='Social Media')","2f12618f":"df[df.Origin=='email'].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar', ylabel = 'No. of Sales',title='Emails')","926d20c5":"df[df.Product=='B'].groupby(['Origin']).Origin.count().sort_values(ascending=False).plot(kind='bar')","598fe10d":"df.groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Month vs Sales')","39d619db":"df[df.Product == 'A'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product A Trend ')","3b00c04a":"df[df.Product == 'B'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product B Trend ')","fcb771df":"df[df.Product == 'C'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product C Trend ')","6269e18f":"df[df.Product == 'D'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product D Trend ')","8d695d9b":"df[df.Product == 'E'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product E Trend ')","4d4aecf5":"df[df.Product == 'F'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product F Trend ')","cab5ecb3":"df[df.Product == 'G'].groupby('pur_month').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='Month',title='Product G Trend ')","cd28da93":"df.groupby('pur_hour').Product.count().plot(kind='bar',ylabel = 'No. of Sales', xlabel ='hour',title='Hour vs Sales ')","e37629f9":"df[df.Product=='B'].groupby('Customer Name').Product.count().sort_values(ascending=False)","4b14be16":"df[((df['Customer Name']=='Smith')|(df['Customer Name']=='Gill')|(df['Customer Name']=='Kivell')|(df['Customer Name']=='Thomson'))&(df['Product']!='B')].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel='No. of sales', title='Top customers of B also bought')","6f22ef13":"df[df.Product=='D'].groupby('Customer Name').Product.count().sort_values(ascending=False)","e61bb258":"df[((df['Customer Name']=='Jack')|(df['Customer Name']=='Andrew')|(df['Customer Name']=='Morgan'))&(df['Product']!='D')].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel='No. of sales', title='Top customers of D also bought')","cb43cc87":"df[df.Product=='C'].groupby('Customer Name').Product.count().sort_values(ascending=False)","e11bba93":"df[((df['Customer Name']=='Thompson')|(df['Customer Name']=='Jack')|(df['Customer Name']=='Smith'))&(df['Product']!='C')].groupby('Product').Product.count().sort_values(ascending=False).plot(kind='bar',ylabel='No. of sales', title='Top customers of C also bought')","40cf5be4":"### Total Sales","a54e0b29":"## Month Analysis","a8dfaacd":"## Analysis by Customer","0bc2459e":"### A and D should be more promoted through paid searches or ads as they have more organinc search","7cf80fa2":"# Product Analysis","277c56c1":"### Let's find each region's popular product","a2acfe40":"### Most buying customers are:","6050b5bc":"## Customer Analysis and Recomendations","4a7d767e":"## What product has least Registered to Purchase conversion rate?","6602f8dd":"> #### As sample size is small we cannot draw conclusions but still B has more chances of refund","59537dba":"## Which product has most Refund chances?","17967123":"### So we can promote the product which is popular in one region but not in other as the people tend to match trends","6c39c00a":"## Which product has more Sales price?","57712b35":"### Average","f9247205":"## Regional Analysis","f262f907":">####  B is most popular, and mostly saled","b8dadf81":"### The boxplot shows how the values in the distribution varies , We can see that C takes Most time to get purchased!","cfbfe570":"## Adding a feature Registered to purchase conversion","5cdab7af":"## Which product is more popular in General?","5be3148a":"## Origin Analysis","6a13e91f":"> ### 1. G and D are lower as expected because of their lower average prices\n> ### 2. C surprisingly take smore time to be purchased, even more than A which has higher sales price","b6fe5884":"### As per trends we can see that , there is similarity between the trends of :\n1. North and West\n2. South and East"}}