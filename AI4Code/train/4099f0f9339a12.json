{"cell_type":{"5c0fa983":"code","87512334":"code","1cb96041":"code","fa672433":"code","3cef6f64":"code","0cb638ac":"code","5e77d1e5":"code","a36eaf19":"code","91cf679c":"code","f01e55c6":"code","30644eff":"code","d1757d73":"code","8483a96d":"code","a7209c99":"code","cf823319":"code","ed249e7f":"code","67c57309":"code","5d387308":"code","282d2492":"code","f8d869c4":"code","7fcc8245":"code","8fc53671":"markdown","51e8c75f":"markdown","6b35bb8a":"markdown","e95e13d0":"markdown","8e43ed4c":"markdown","f7f2c2c4":"markdown","fdb722de":"markdown","f83cf248":"markdown","d29b6141":"markdown","dd078e3d":"markdown","69a262e7":"markdown","8b5736fa":"markdown","82129751":"markdown","6e6d7372":"markdown","f502cf77":"markdown","a4a5ab0f":"markdown","ece0ea0d":"markdown","f1b50824":"markdown","0c4b2bb4":"markdown","12cbb12d":"markdown","5f884651":"markdown"},"source":{"5c0fa983":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt # graphs pyplot\nimport seaborn as sns # graphs\nimport geopandas as gpd # map\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom sklearn.linear_model import LogisticRegression # regression logistique\nfrom sklearn.model_selection import train_test_split","87512334":"# lecture du dataset\ndf = pd.read_csv('..\/input\/CHERNAIRedited.csv')","1cb96041":"# affichage bref du dataframe\ndf","fa672433":"# exemples des premieres lignes\ndf.head()","3cef6f64":"# comptage du nombre de valeurs pour chaque colonne\ndf.count()","0cb638ac":"# r\u00e9cup\u00e9ration des labels des colonnes\ndf.columns","5e77d1e5":"# description en termes de moyenne mini maxi des colonnes num\u00e9riques\ndf.describe()","a36eaf19":"# qq infos\ndf.info","91cf679c":"df['Cs 134 (Bq\/m3)'] = pd.to_numeric(df['Cs 134 (Bq\/m3)'],errors='coerce')\nsns.jointplot(\"I 131 (Bq\/m3)\", \"Cs 134 (Bq\/m3)\", df, kind='kde')","f01e55c6":"df['I 131 (Bq\/m3)'] = pd.to_numeric(df['I 131 (Bq\/m3)'],errors='coerce')\nsns.distplot(df['I 131 (Bq\/m3)'], color='blue')","30644eff":"df['Cs 134 (Bq\/m3)'] = pd.to_numeric(df['Cs 134 (Bq\/m3)'],errors='coerce')\nsns.distplot(df['Cs 134 (Bq\/m3)'], color='blue')","d1757d73":"df['Cs 137 (Bq\/m3)'] = pd.to_numeric(df['Cs 137 (Bq\/m3)'],errors='coerce')\nsns.distplot(df['Cs 137 (Bq\/m3)'], color='blue')","8483a96d":"print(\"La longitude mini est de : \")\nprint(df.X.min())\n\nprint(\"La longitude maxi est de : \")\nprint(df.X.max())\n\nprint(\"La latitude mini est de : \")\nprint(df.Y.min())\n\nprint(\"La latitude maxi est de :\")\nprint(df.Y.max())","a7209c99":"df.plot(kind=\"scatter\", x=\"X\", y=\"Y\", c=\"I 131 (Bq\/m3)\", cmap=\"rainbow\", s=3, figsize=(12,12))\n","cf823319":"df.groupby(['Date'])['I 131 (Bq\/m3)'].mean().plot(kind = 'bar', figsize=(12,8))","ed249e7f":"df.groupby(['Date'])['Cs 134 (Bq\/m3)'].mean().plot(kind = 'bar', figsize=(12,8))","67c57309":"df.groupby(['Date'])['Cs 137 (Bq\/m3)'].mean().plot(kind = 'bar', figsize=(12,8))","5d387308":"df1 = df.drop(['PAYS','Ville','Date','End of sampling','Duration(h.min)'], axis=1)\nX = df1.drop(['I 131 (Bq\/m3)'], axis=1)\ny = df1['I 131 (Bq\/m3)']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","282d2492":"from sklearn import ensemble\nrf = ensemble.RandomForestRegressor()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\nprint(rf.score(X_test,y_test))","f8d869c4":"import folium\nfrom folium.plugins import MarkerCluster","7fcc8245":"#Define coordinates of where we want to center our map\nboulder_coords = [47.583042, 12.70]\n\n#Create the map\ncher_map = folium.Map(location = boulder_coords, zoom_start = 5)\n\n# Make an empty map\nm = folium.Map(location=[20, 0], tiles=\"Mapbox Bright\", zoom_start=2)\n\n# I can add marker one by one on the cher_map\nfor i in range(0,len(df)):\n    folium.Marker([df.iloc[i]['Y'], df.iloc[i]['X']], popup=df.iloc[i]['Ville']).add_to(cher_map)\n\n#Display the map\ncher_map","8fc53671":"Il est difficile d'utiliser les m\u00e9thodes de pr\u00e9diction avec aussi peu de colonnes, nous devons enlever trop de param\u00e8tres...","51e8c75f":"## R\u00e9gression par for\u00eats al\u00e9atoires","6b35bb8a":"## Faisons plutot une map avec Leaflet","e95e13d0":"On va utiliser les for\u00eats al\u00e9atoires pour la r\u00e9gression. On conserve l'ensemble des caract\u00e9ristiques","8e43ed4c":"On affiche un graphique montrant l'\u00e9volution de la concentration en Iode 131 fonction de la fin de la date :","f7f2c2c4":"# Le dataset :","fdb722de":"Le but \u00e9tant de pr\u00e9dire l'endroit o\u00f9 l'air est le plus pollu\u00e9.","f83cf248":"On affiche un graphique montrant l'\u00e9volution de la concentration en C\u00e9sium 134 fonction de la fin de la date :","d29b6141":"On remarque qu'on a moins de donn\u00e9es sur le C\u00e9sium 134 & 137 que sur l'iode 131.","dd078e3d":"## Visualisation des donn\u00e9es","69a262e7":"## Tentatives de graphiques avec sns","8b5736fa":"On en conclue que l'iode 131 est plus concentr\u00e9e que les autres et a eu un pic de concentration le 30 avril 1986, soit 4 jours apr\u00e8s la catastrophe.","82129751":"Context\nThe Chernobyl disaster was a nuclear accident that occurred on 26 April 1986 at the No. 4 nuclear reactor in the Chernobyl Nuclear Power Plant, near the city of Pripyat in the north of the Ukrainian SSR. It is considered the worst nuclear disaster in history and is one of only two nuclear energy disasters rated at seven - the maximum severity - on the International Nuclear Event Scale, the other being the 2011 Fukushima Daiichi nuclear disaster in Japan.\n\nContent\nThis dataset presents concentration of Iodine-131 (I-131), Caesium-134 (Cs-134) and Caesium-137 (radiocaesium, Cs-137) as anaerosol particles which were measured in specific location and date.\nOn each line, following information is given:\n\n* country code\n* locality name\n* lattitude (degrees.hundredths of degrees)\n* longitude (degrees.hundredths of degrees)\n* date (year\/month\/day)\n* hour of end of sampling (hours:minutes)\n* duration (hours.minutes)\n* I-131 concentration in Bq\/m3 (aerosol particles)\n* Cs-134 concentration in Bq\/m3 (aerosol particles)\n* Cs-137 concentration in Bq\/m3 (aerosol particles)","6e6d7372":"## Tentons de cr\u00e9er une carte","f502cf77":"On regarde la r\u00e9partition dans les concentrations en Iode 131 et en C\u00e9sium 134 :","a4a5ab0f":"On sait qu'on a plus de valeurs pour l'iode 131 mais les valeurs en C\u00e9sium 137 sont plus concentr\u00e9s.","ece0ea0d":"On a une latitude et une longitude, nous allons essayer de faire une carte.","f1b50824":"On regarde maintenant la distribution en Iode 131, C\u00e9sium 134 et 137 :","0c4b2bb4":"# Initialisation ","12cbb12d":"On va faire une carte avec les diff\u00e9rents endroits qui ont servi \u00e0 des pr\u00e9l\u00e8vements :","5f884651":"On affiche un graphique montrant l'\u00e9volution de la concentration en C\u00e9sium 137 fonction de la fin de la date :"}}