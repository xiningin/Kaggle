{"cell_type":{"5aea3190":"code","d3ddb1e7":"code","6541aff5":"code","9509baa1":"code","7c377e61":"code","4aaddfa4":"code","ebda0756":"code","11d22b78":"code","e6953a03":"code","84fa591b":"code","c38ed353":"code","ec3d35fe":"code","0fb7b444":"code","cd37fe99":"code","374dc540":"code","d32acd61":"code","9eb76c40":"code","c6c599e7":"code","01c3b374":"code","4379a7f3":"code","2d225119":"code","43d34556":"code","2005d20f":"code","b97a30c0":"code","46e4f22d":"code","e413133e":"code","ed2b4974":"code","1f341ed2":"code","e4ba2cd3":"code","ad82653c":"code","f50cb94c":"code","ba37a506":"code","d8a33cd4":"code","61a56458":"code","7aaaeb56":"code","b3ad2d0e":"code","e7c03c50":"code","6a8398f2":"code","459278f6":"code","af44777f":"code","678ad53d":"code","6bfd3d36":"code","2164ea42":"code","ca0d6ecc":"markdown","e0737b94":"markdown","2632497f":"markdown","e860d3de":"markdown","1e257b64":"markdown","b9bc8b74":"markdown","3daaa3f8":"markdown","94ae6aaf":"markdown","c72aac88":"markdown","76c274e6":"markdown","7b543ed0":"markdown","3514acc4":"markdown","e1421063":"markdown","699f6778":"markdown","09ec0589":"markdown","51b985a0":"markdown"},"source":{"5aea3190":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n\nimport seaborn as sns\nimport plotly.graph_objects as go\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3ddb1e7":"data = pd.read_csv(\"\/kaggle\/input\/homicide-reports\/database.csv\")\ndf = data.copy()\ndf.head()","6541aff5":"df.tail()","9509baa1":"df.info()","7c377e61":"df.describe().T","4aaddfa4":"# df[df[\"Incident\"]>900].sort_values(by=\"Incident\")\n# incident s\u00fctununda 900l\u00fc say\u0131lar neden var bunu anlamaya \u00e7al\u0131\u015f\u0131yorum.","ebda0756":"df[(df[\"Agency Name\"]==\"Los Angeles\") & (df[\"Agency Type\"]==\"Sheriff\") & (df[\"Year\"]==1980) & (df[\"Month\"]==\"August\")].sort_values(by=\"Incident\")","11d22b78":"df[(df[\"Agency Name\"]==\"Miami\") & (df[\"Agency Type\"]==\"Municipal Police\") & (df[\"Year\"]==2006) & (df[\"Month\"]==\"December\")].sort_values(by=\"Incident\")","e6953a03":"#df[(df[\"Agency Name\"]==\"Orange County\") & (df[\"Year\"]==2013) & (df[\"Month\"]==\"April\")].sort_values(by=\"Incident\")","84fa591b":"df[\"Incident\"] = 1","c38ed353":"df[\"Victim Sex\"].value_counts()\n#df[\"Victim Sex\"].value_counts().plot.bar();","ec3d35fe":"df[\"Perpetrator Sex\"].value_counts()\n#df[\"Perpetrator Sex\"].value_counts().plot.bar();","0fb7b444":"def bar_plot(variable):\n    \n    var = df[variable]\n    \n    varValue = var.value_counts()\n        \n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show\n    #print(\"{}: \\n {}\".format(variable, varValue))\n    \ncategory1=[\"Victim Sex\",\"Perpetrator Sex\"]\nlist(map(lambda x:bar_plot(x), category1))\nplt.show()\n\n# Kategorik de\u011fi\u015fkenler i\u00e7in","cd37fe99":"df_known = df[(df['Victim Sex'] != 'Unknown') & (df['Perpetrator Sex'] != 'Unknown')]\ndf_gender = df_known.groupby(['Perpetrator Sex','Victim Sex']).size()\ndf_gender_df = df_gender.to_frame(name='Count')\ndf_gender_df.reset_index(inplace=True)\ndf_gender_df","374dc540":"plt.figure(figsize = (9,3))\nclrs = ['#EE99AC',\"#6890F0\"]\nsns.barplot(x='Perpetrator Sex', y=\"Count\", hue='Victim Sex', palette=clrs, data=df_gender_df);\nplt.title(\"A Comparison of Men and Women Who are Perpetrator and Victim\");\n\n\n# plt.figure(figsize = (9,3))\n# sns.countplot(x='Perpetrator Sex', data=df, hue='Victim Sex');\n# plt.title(\"A Comparison of Men and Women Who are Perpetrator and Victim\");","d32acd61":"def hist_plot(variable):\n    \n    plt.figure(figsize=(9,3))\n    plt.hist(df[variable],bins = 50)\n    \n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} Distribution with histogram\". format(variable))\n    plt.show\nnumericalVariables=[\"Victim Age\", \"Victim Count\"]\nlist(map(lambda x: hist_plot(x), numericalVariables))\nplt.show()\n\n#Say\u0131sal de\u011fi\u015fkenler i\u00e7in.","9eb76c40":"df[\"Incident\"] = 1\nage = pd.cut(df[\"Victim Age\"],[0,18,36,54,90])\n\ndf_age = df.pivot_table([\"Incident\"], index =[\"Victim Sex\",age], aggfunc=sum)\ndf_age","c6c599e7":"df_age_f = pd.DataFrame({\"0-18\":df_age.iloc[0],\n                         \"18-36\":df_age.iloc[1],\n                        \"36-54\":df_age.iloc[2],\n                        \"54-90\":df_age.iloc[3]})\n\n                                    \ndf_age_f = df_age_f.T\ndf_age_f.columns = [\"Incident\"]\n\nplt.figure(figsize = (9,6))\nplt.subplot(2,2,1)\nsns.barplot(x=df_age_f.index, y=\"Incident\",data=df_age_f);\nplt.title(\"Ages of Female Victims\");\nplt.xlabel(\"Age Groups\");\n\n##\ndf_age_m = pd.DataFrame({\"0-18\":df_age.iloc[4],\n                         \"18-36\":df_age.iloc[5],\n                        \"36-54\":df_age.iloc[6],\n                        \"54-90\":df_age.iloc[7]})\ndf_age_m = df_age_m.T\ndf_age_m.columns = [\"Incident\"]\n\nplt.figure(figsize = (9,6))\nplt.subplot(2,2,2)\nsns.barplot(x=df_age_m.index, y=\"Incident\",data=df_age_m);\nplt.title(\"Ages of Male Victims\");\nplt.xlabel(\"Age Groups\");","01c3b374":"df_age_b = pd.concat([df_age_m,df_age_f],axis=1)\ndf_age_b.columns = [\"Male\", \"Female\"]\ndf_age_b.plot.bar();\nplt.title(\"Ages of Victims\");","4379a7f3":"df[\"Weapon\"].value_counts()","2d225119":"df_we = df.pivot_table(index=\"Year\", columns=\"Weapon\", aggfunc=sum)[\"Incident\"]\ndf_we","43d34556":"plt.figure(figsize=(9,3))\nsns.barplot(data=df_we);\nplt.xticks(rotation=90);\n\n# df[\"Weapon\"].value_counts().plot.pie();","2005d20f":"labels = df.groupby('Weapon').sum().index\n\nexplode = [0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5]\nsizes = df.groupby('Weapon').sum()['Incident']\n\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, labeldistance=1.5, autopct='%1.1f%%')\nplt.title('Weapons',fontsize = 15);","b97a30c0":"w = df.groupby('Weapon').sum()['Incident']\nw = pd.DataFrame(w)\n#w\nweapons = list(df[\"Weapon\"].unique())\n\nothers = []\nfor i in weapons:\n    if w.loc[i].values < 7000:\n        others.append(w.loc[i].values)    \n    \nw.loc[\"Others\"] = sum(others)\nw_elim = w[w.Incident > 7000] \n#w_elim #eliminated\n\nlabels = w_elim.index\nexplode = [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1]\nsizes = w_elim['Incident']\n\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%')\nplt.title('Weapons',fontsize = 15);","46e4f22d":"plt.figure(figsize = (18,8))\n# df[\"State\"].value_counts().plot.bar();\n\nstates_vis = sns.countplot(x='State', order=df['State'].value_counts().index, data=df);\n\nfor item in states_vis.get_xticklabels():\n    item.set_rotation(90)","e413133e":"city_usa = pd.read_csv(\"\/kaggle\/input\/usa-cities\/usa.txt\")\n#city_usa.head()\n\nnew = []\nfor i in list(city_usa.name):\n    new.append(i.strip())\n    \ncity_usa[\"name\"] = new\ncity_usa.head()","ed2b4974":"cities = df.groupby(\"City\").size()\ncities_df = cities.to_frame(name='count')\ncities_df.reset_index(inplace=True)\ncities_df.columns=([\"name\",\"count\"])\ncities_df.head()\n\n# cities = df.groupby(\"City\")[\"Incident\"].sum()\n# cities_df = pd.DataFrame(cities)\n# cities_df","1f341ed2":"df_map = pd.merge(cities_df, city_usa, on = \"name\", how='inner')\ndf_map.head()","e4ba2cd3":"df_map['text'] = df_map['name'] + ' - Number of Incident: ' + (df_map['count'].astype(str)) \nlimits = [0,100,500,1000,50000]\ncolors = [\"royalblue\",\"crimson\",\"lightseagreen\",\"orange\",\"lightgrey\"]\ncities = []\n\nfig = go.Figure()\na= -4\nfor i in range(len(limits)):\n\n    df_sub = df_map[(df_map[\"count\"]>limits[i]) & (df_map[\"count\"]<limits[a])]\n     \n    fig.add_trace(go.Scattergeo(\n        locationmode = 'USA-states',\n        lon = df_sub['lon'],\n        lat = df_sub['lat'],\n        text = df_sub['text'],\n        marker = dict(\n            size = df_map[\"count\"],\n            color = colors[i],\n            line_color='rgb(40,40,40)',\n            line_width=0.5,\n            sizemode = 'area'\n        ),\n        name = '{0} - {1}'.format(limits[i],limits[a])))\n    a +=1\nfig.update_layout(\n        title_text = 'Homicide Numbers of USA Cities',\n        showlegend = True,\n        geo = dict(\n            scope = 'usa',\n            landcolor = 'rgb(217, 217, 217)',\n        )\n    )\n\nfig.show()","ad82653c":"df[\"Relationship\"].value_counts()","f50cb94c":"a = df[\"Relationship\"].replace('Unknown', np.nan)\na.value_counts().plot.barh();\n\n# sns.countplot(x='Relationship', data=df.replace('Unknown', np.nan), order=df[\"Relationship\"].value_counts().index)\n\n#df[\"Relationship\"].value_counts().plot.barh();\n# bu \u015fekilde yap\u0131nca unknown lar \u00e7ok oldu\u011fu i\u00e7in anlams\u0131z g\u00f6r\u00fcn\u00fcyor.","ba37a506":"df[\"Perpetrator Race\"].value_counts().plot.bar();","d8a33cd4":"df_race_pv = df.pivot_table(index=[\"Perpetrator Race\",\"Victim Race\"], aggfunc=sum)[\"Incident\"]\ndf_race_pv = pd.DataFrame(df_race_pv)\ndf_race_pv.head()","61a56458":"df_race = pd.DataFrame({\"White-White\":df_race_pv.loc[\"White\",\"White\"].values,\n                 \"White-Black\":df_race_pv.loc[\"White\",\"Black\"].values,\n                 \"Black-White\":df_race_pv.loc[\"Black\",\"White\"].values,\n                 \"Black-Black\":df_race_pv.loc[\"Black\",\"Black\"].values})\n\ndf_race = df_race.T\ndf_race.columns = [\"Incident\"]\n\nsns.barplot(x=df_race.index, y=\"Incident\", data=df_race);\nplt.title(\"Relationship Between Black and White Races\");\nplt.xlabel(\"Perpetrator Race - Victim Race\");","7aaaeb56":"df.groupby(\"Year\")[\"Month\"].value_counts()\n# her ay ka\u00e7 cinayet i\u015flenmi\u015f onu buluyoruz.\n\n# df.groupby(\"Year\")[\"Month\"].value_counts().sum() \n# sa\u011flamas\u0131n\u0131 yapm\u0131\u015f oldu. toplam sat\u0131r say\u0131s\u0131na e\u015fit oluyor.","b3ad2d0e":"df_pv = df.pivot_table(index=[\"Year\"], columns=[\"Month\"], aggfunc=(lambda x : x.count()), margins = True)[\"Incident\"]\n# s\u00fctunlar\u0131 alfabetik s\u0131raya g\u00f6re s\u0131ral\u0131yordu onu de\u011fi\u015ftirdik.\ndf_pv = df_pv.reindex(columns=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"All\"])\ndf_pv","e7c03c50":"df_pv = df.pivot_table(index=[\"Year\"], columns=[\"Month\"],aggfunc=(lambda x : x.count()))[\"Incident\"]\ndf_pv = df_pv.reindex(columns=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"])\n\ndf_pv.plot();\n#zaman serisi grafi\u011fi \u00e7izme","6a8398f2":"sns.heatmap(df_pv);","459278f6":"df_year = df.groupby(\"Year\")[\"Incident\"].sum()\ndf_year = pd.DataFrame(df_year)\n\nplt.title(\"Number of Homicide by Years\");\nsns.lineplot(x=df_year.index, y= \"Incident\", data=df_year);","af44777f":"df_s_y = df.pivot_table(index=[\"Victim Sex\",\"Year\"], aggfunc=sum)[\"Incident\"]\ndf_s_y = pd.DataFrame(df_s_y)\ndf_s_y.head()\n# df_s_y.loc[\"Female\",1980].values\n# df_s_y.loc[\"Female\",1980].index","678ad53d":"def gender_plot(sex):\n    data = df_s_y.loc[sex]\n\n    plt.plot(data.index, data.values)\n    \n# gender_plot(\"Female\")\ngenders = [\"Male\",\"Female\"]\n\nplt.figure(figsize = (18, 8))\nfor i in genders:\n    gender_plot(i)\n\nplt.title(\"Homicide Victims by Years and Genders\");\nplt.legend(genders);","6bfd3d36":"df_s_r_y = df.pivot_table(index=[\"Victim Sex\",\"Relationship\",\"Year\"], aggfunc=sum)[\"Incident\"]\ndf_s_r_y = pd.DataFrame(df_s_r_y)\ndf_s_r_y.head()","2164ea42":"plt.figure(figsize = (18, 8))\n\ndef sex_rel(sex, relation):\n    data = df_s_r_y.loc[sex, relation]\n\n    plt.plot(data.index, data.values)\n    \nrelations = [\"Wife\",\"Ex-Wife\",\"Girlfriend\",\"Mother\",\"Sister\",\"Daughter\"]\n             \nfor relation in relations:\n    sex_rel(\"Female\", relation)\n\nplt.title(\"Number of Female Homicide Victims by Years\");\nplt.xlabel(\"Year\");\nplt.ylabel(\"Numbers of Incident\");\nplt.legend(relations);","ca0d6ecc":"## 6 - Relationships of homicides by races","e0737b94":"## The End.","2632497f":"Erkeklerin \u00f6ld\u00fcrme say\u0131s\u0131 da \u00f6ld\u00fcr\u00fclme say\u0131s\u0131 da y\u00fcksek iken, kad\u0131nlar\u0131n \u00f6ld\u00fcrme say\u0131s\u0131 \u00f6ld\u00fcr\u00fclme say\u0131s\u0131na g\u00f6re \u00e7ok d\u00fc\u015f\u00fck.","e860d3de":"Baz\u0131 ya\u015flar\u0131n yanl\u0131\u015f girildi\u011fini g\u00f6r\u00fcyoruz. \"900\" k\u00fcs\u00fcrl\u00fc ya\u015flar var. Ya\u015f aral\u0131\u011f\u0131n\u0131 g\u00f6rmek i\u00e7in daha \u00f6zelle\u015ftirilmi\u015f bir tabloya ihtiya\u00e7 var.\n\nVictim Count s\u00fctununun ise neredeyse tamam\u0131n\u0131n \"0\" olarak girildi\u011fini g\u00f6r\u00fcyoruz.","1e257b64":"## 2 - Distribution of homicides by age","b9bc8b74":"## Basic Visual Examination\n\n1. Distribution of homicides by gender,\n1. Distribution of homicides by age,\n1. Weapons used in homicides,\n1. Distribution of homicides by States and Cities,\n1. Relationship between Perpetrator and Victim,\n1. Relationships of homicides by races,\n1. Distribution of homicides by years,\n1. Women homicides by years.","3daaa3f8":"## 3 - Weapons used in homicides","94ae6aaf":"## 8 - Women homicides by years","c72aac88":"## 7 - Distribution of homicides by years","76c274e6":"## 1 - Distribution of homicides by gender","7b543ed0":"anla\u015f\u0131lan o ki; her \u015fehirde, agency name'e ve agency type'a g\u00f6re, her ay 0'dan ba\u015flan\u0131larak, ger\u00e7ekle\u015fen her olay i\u00e7in \"incident\" numaras\u0131 verilmi\u015f. ama m\u00fckerrer kay\u0131tlar var g\u00f6r\u00fcn\u00fcyor.\n\nYukar\u0131daki tabloda \"los angeles\" te\u015fkilat\u0131, \"sheriff\" biriminin 1980 a\u011fustos ay\u0131ndaki cinayet dosyalar\u0131 g\u00f6r\u00fcn\u00fcyor. Toplam 20 tane.\n\nFakat baz\u0131 yerlerde 900 k\u00fcs\u00fcrlerden ba\u015flayarak numara verilmi\u015f. (A\u015fa\u011f\u0131daki iki tabloda g\u00f6r\u00fcn\u00fcyor). Ancak biz verilen numaralarla ingilenmeyip, ka\u00e7 sat\u0131r varsa o kadar cinayet dosyas\u0131 var diyerek i\u015fleme devam edece\u011fiz.","3514acc4":"Pasta ne kadar b\u00fcy\u00fcrse b\u00fcy\u00fcs\u00fcn veya yaz\u0131lar istedi\u011fi kadar k\u00fc\u00e7\u00fcls\u00fcn veya uzakla\u015fs\u0131n istedi\u011fim g\u00f6r\u00fcnt\u00fcy\u00fc yakalayam\u0131yorum, bu y\u00fczden belli bir de\u011ferden k\u00fc\u00e7\u00fck olanlar\u0131 di\u011ferleri olarak s\u0131n\u0131flayaca\u011f\u0131m.","e1421063":"### The meaning of the \"incident\" column","699f6778":"## 4 - Distribution of homicides by States and Cities","09ec0589":"Boyut eklemeden \u00f6nce, erkeklerin 400 bin cinayet i\u015fledi\u011fini g\u00f6r\u00fcyoruz. Boyut ekledikten sonra kurbanlar\u0131n 300 bininin erkek 100 bininin ise kad\u0131n oldu\u011funu g\u00f6r\u00fcyoruz.","51b985a0":"## 5 - Relationships between Perpetrator and Victim"}}