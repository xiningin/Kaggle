{"cell_type":{"50a3d573":"code","f8efba27":"code","cca81dc8":"code","70daa297":"code","559a9516":"code","c4537522":"code","9668d76d":"code","d6020479":"code","8bea97fe":"code","f280de4f":"code","3e8b987b":"code","0786b8e6":"code","d4fa43e9":"code","9338e5a8":"code","fc174eab":"code","3abb4a6c":"code","0ac53212":"markdown","0f333600":"markdown","f999155a":"markdown","6ce57d3e":"markdown","a0b702e0":"markdown","0d3a3862":"markdown","f4999c45":"markdown","3d519667":"markdown","63970d38":"markdown","a2f8aafc":"markdown","fb1d2db4":"markdown","bafcee4a":"markdown"},"source":{"50a3d573":"\"\"\"import Image\nmyImage = Image.open(\"\/Users\/fta\/Desktop\/GADataScience\/Projects\/SARS-CoV-2_Virus_Genetics\/ProteinAnalysis\/images\");\nmyImage.show();\n\"\"\"","f8efba27":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\ncolor = sns.color_palette()\nfrom tqdm import tqdm # progress bar\n\n# Increase default figure and font sizes for easier viewing.\nplt.rcParams['figure.figsize'] = (8, 6)\nplt.rcParams['font.size'] = 14\n\nplt.style.use('fivethirtyeight')\n%matplotlib inline ","cca81dc8":"# Loading Complementary DNA Sequence into an alignable file\n# pip3 install biopython\n\n\"\"\"import sys\nsys.path.append(\"\/usr\/local\/lib\/python3.7\/site-packages\")\n\"\"\"\n\nimport Bio\nfrom Bio import SeqIO\nDNAseq = SeqIO.read('..\/input\/coronavirus-genome-sequence\/MN908947.fna', \"fasta\") # This is DNA Sequence\n","70daa297":"DNAseq","559a9516":"DNA = DNAseq.seq\nprint('DNA', DNA[:10], '...')\n\nmRNA = DNA.transcribe()\nprint('RNA', mRNA[:10], '...')\n\nprint('Total Nucleotides: ', len(mRNA))\n\n# Get amino acid sequence from mRNA (translation)\namino_acids = mRNA.translate(table = 1, cds = False)\nprint('Amino Acid', amino_acids[:30])\nprint('Total Amino Acids: ', len(amino_acids))","c4537522":"amino_acids","9668d76d":"proteins = amino_acids.split('*') # * is translated stop codon\ndataframe = pd.DataFrame(proteins)\ndataframe.describe()\n\nprint('Total Proteins: ', len(dataframe))","d6020479":"dataframe.describe()","8bea97fe":"def conv(item):\n    return len(item)\n\n\ndef to_str(item):\n    return str(item)\n\ndataframe['sequence_str'] = dataframe[0].apply(to_str)\ndataframe['length'] = dataframe[0].apply(conv)\n\ndataframe.rename(columns={0 : \"sequence\"}, inplace = True)\ndataframe.head()","f280de4f":"# Take only longer than 20\nfunctional_proteins = dataframe.loc[dataframe['length'] >= 20]\n\nprint('Total functional proteins:', len(functional_proteins))\nfunctional_proteins.describe()","3e8b987b":"# Plot lengths:\n\nplt.figure(figsize=(20,5))\n\nplt.subplot(111)\nplt.hist(functional_proteins['length'])\nplt.title('Length of Proteins (Histogram)')\n\n\n# Remove extremes:\n\nplt.figure(figsize=(20,5))\nwo_extreme = functional_proteins.loc[functional_proteins['length'] < 60]\nplt.subplot(121)\nplt.hist(wo_extreme['length'])\nplt.title('Length of Proteins (< 60)')\n\nwo_extreme = functional_proteins.loc[functional_proteins['length'] < 1000]\nplt.subplot(122)\nplt.hist(wo_extreme['length'])\nplt.title('Length of Proteins (< 1000)')","0786b8e6":"# Investigate large protein (<1000)\n\nlarge_protein = functional_proteins.loc[functional_proteins['length'] > 2700]\n\nseq_sample = large_protein['sequence'].tolist()[0]\nprint('Sequence Sample: ', '...', seq_sample[1000:1150],'...')","d4fa43e9":"from Bio import pairwise2","9338e5a8":"SARS = SeqIO.read('..\/input\/coronavirus-accession-sars-mers-cov2\/sars.fasta','fasta')\n\nMERS = SeqIO.read('..\/input\/coronavirus-accession-sars-mers-cov2\/mers.fasta','fasta')\n\nCOV2 = SeqIO.read('..\/input\/coronavirus-accession-sars-mers-cov2\/cov2.fasta','fasta')\n\n\nprint('Sequence Lengths:')\nprint('SARS:', len(SARS.seq))\nprint('COV2:', len(COV2.seq))\nprint('MERS:', len(MERS.seq))","fc174eab":"# http:\/\/biopython.org\/DIST\/docs\/api\/Bio.pairwise2-module.html\n\nSARS_COV = pairwise2.align.globalxx(SARS.seq, COV2.seq, one_alignment_only = True, score_only = True)\nprint('SARS\/COV Similarity (%): ', SARS_COV \/ len(SARS.seq) * 100)\n\nMERS_COV = pairwise2.align.globalxx(MERS.seq, COV2.seq, one_alignment_only = True, score_only = True)\nprint('MERS\/COV Similarity (%): ', MERS_COV \/ len(MERS.seq) * 100)\n\nMERS_SARS = pairwise2.align.globalxx(MERS.seq, SARS.seq, one_alignment_only = True, score_only = True)\nprint('MERS\/COV Similarity (%): ', MERS_SARS \/ len(SARS.seq) * 100)\n\n","3abb4a6c":"X = ['SARS\/COV2', 'MERS\/COV2', 'MERS\/SARS']\nY = [SARS_COV\/ len(SARS.seq) * 100, MERS_COV\/ len(MERS.seq)*100, MERS_SARS\/len(SARS.seq)*100]\nplt.title('Sequence Identity (%)')\nplt.bar(X,Y)","0ac53212":"### Objectives :\n- BLAST charts & SEQ Alignment","0f333600":"https:\/\/www.ncbi.nlm.nih.gov\/nuccore\/MN908947.3?report=genbank&log$=seqview","f999155a":"### Comparing Human Coronavirus RNA\n- Pairwise alignment to discover similarities between variants.","6ce57d3e":"#### Identify all the Proteins (chains of amino acids)","a0b702e0":"- There's a presence of a large protein observed in the last histogram.","0d3a3862":"#### Define Sequences to be Aligned","f4999c45":"#### Alignments using 'pairwise2' Algorithm","3d519667":"##  RNA Similarity_SARS_MERS_COV2","63970d38":"### Data :\n- Genome sequences for SARS MERS & SARS-CoV-2 (https:\/\/www.kaggle.com\/radenkovic\/coronavirus-accession-sars-mers-cov2)\n    - cov2.fasta\n    - mers.fasta\n    - sars.fasta\n- Coronavirus Genome Sequence (https:\/\/www.kaggle.com\/paultimothymooney\/coronavirus-genome-sequence)\n    - MN908947.txt\n    - A_new_coronavirus_associated_with_human_respirator.pdf\n    - MN908947.fna","a2f8aafc":"### Content\n- Metagenomic RNA sequencing of a sample of bronchoalveolar lavage fluid from the patient identified a new RNA virus strain from the family Coronaviridae, which is designated here \u2018WH-Human 1\u2019 coronavirus (and has also been referred to as \u20182019-nCoV\u2019). Phylogenetic analysis of the complete viral genome (29,903 nucleotides) revealed that the virus was most closely related (89.1% nucleotide similarity) to a group of SARS-like coronaviruses (genus Betacoronavirus, subgenus Sarbecovirus) that had previously been found in bats in China.","fb1d2db4":"#### Plot Lengths (excluding extremes\/outliers)","bafcee4a":"#### Transcribe and Translate Ultimately to Amino-Acid Sequence\n- FASTA (input DNA sequence) & Coronavirus (RNA type of virus)\n    - Transcribe DNA to RNA\n    - Translate RNA to Amino Acid sequence\n- Call transcribe() to convert T (thymine) to U (uracil)\n- Then call translate() RNA sequence to amino-acid sequence\n    - IKGLYLPR*Q (stop codon used as protein separator)\n    - IKGLYLPR * QTNQLSISCRSVL * TNFKICV\n        - IKGLYLPR (1st protein)\n        - QTNQLSISCRSVL (2nd protein)\n"}}