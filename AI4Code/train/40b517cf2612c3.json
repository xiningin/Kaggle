{"cell_type":{"e6ecdc09":"code","b38018dd":"code","b02d3198":"code","91002cae":"code","dcd5f55f":"code","1b6aa0ae":"code","ef151885":"code","0cc230d8":"code","983080d6":"code","e3c7099d":"code","cdcb32ca":"code","999c215c":"code","10037dbf":"code","de1860cc":"code","03823922":"code","f84aeb61":"code","2fcc0f4f":"code","40aea26c":"code","99b7c169":"code","13119b32":"code","8aeec14f":"markdown","818aadeb":"markdown","f5bbb441":"markdown"},"source":{"e6ecdc09":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b38018dd":"#Loading the Data again\ndata= pd.read_csv('..\/input\/ml-challenge-turkiye-is-bankasi-2\/train.csv')\ntest = pd.read_csv('..\/input\/ml-challenge-turkiye-is-bankasi-2\/test_set.csv')\nguvenendexi=pd.read_excel('..\/input\/guvenednx\/ekonomikgvenendexi.xls')\n#t\u00fcfe=pd.read_excel('..\/input\/tufedegerleri\/TFE.xls')","b02d3198":"# Import label encoder \nfrom sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()\ndata['ISLEM_TURU']= label_encoder.fit_transform(data.ISLEM_TURU) ","91002cae":"data['YIL_AY'] = pd.to_datetime(data['YIL_AY'], format='%Y%m')\ntest['YIL_AY'] = pd.to_datetime(test['YIL_AY'], format='%Y%m')\n#t\u00fcfe['YIL_AY'] = pd.to_datetime(t\u00fcfe['YIL_AY'], format='%m-%Y')","dcd5f55f":"data['y\u0131l'] = data['YIL_AY'].dt.year\ntest['y\u0131l'] = test['YIL_AY'].dt.year\ndata['ay'] = data['YIL_AY'].dt.month\ntest['ay'] = test['YIL_AY'].dt.month\n#t\u00fcfe['y\u0131l'] = t\u00fcfe['YIL_AY'].dt.year\n#t\u00fcfe['ay'] = t\u00fcfe['YIL_AY'].dt.month","1b6aa0ae":"#t\u00fcfe.drop('YIL_AY',axis=1,inplace=True)","ef151885":"gvenendexi=guvenendexi.drop(['T\u00fcketici g\u00fcven endeksi','Ekonomik \\ng\u00fcven\\nendeksi','Genel\\ngidi\u015fat'],axis=1,inplace=False)","0cc230d8":"train=data.merge(gvenendexi)","983080d6":"train= train.drop_duplicates()\n","e3c7099d":"#train=data.merge(t\u00fcfe)","cdcb32ca":"from sklearn.model_selection import train_test_split\nX=train.drop(['ISLEM_TUTARI','ISLEM_TURU','ISLEM_ADEDI','YIL_AY','SEKTOR','Record_Count','y\u0131l','ay'], axis='columns' ,inplace=False)\ny=train.ISLEM_TUTARI\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2,\n                                                                random_state=0)\n","999c215c":"from xgboost import XGBRegressor\nfrom sklearn.model_selection import GridSearchCV\n\n\nmy_model = XGBRegressor(learning_rate=0.5,max_depth=10)\nmy_model.fit(X_train, y_train)","10037dbf":"from sklearn.metrics import mean_absolute_error\npredictions = my_model.predict(X_valid)\nprint(\"Mean Absolute Error: \" + str(mean_absolute_error(predictions, y_valid)))\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\nprint(\"Mean Squared Error: \" + str(sqrt(mean_squared_error(predictions, y_valid))))","de1860cc":"# Import label encoder \nfrom sklearn import preprocessing\n# label_encoder object knows how to understand word labels. \nlabel_encoder = preprocessing.LabelEncoder()\n# Encode labels in column 'Country'. \ntest['ISLEM_TURU']= label_encoder.fit_transform(test.ISLEM_TURU) ","03823922":"test=test.merge(gvenendexi)","f84aeb61":"test= test.drop_duplicates()","2fcc0f4f":"#test=test.merge(t\u00fcfe)","40aea26c":"X_test_prep=test.drop(['ISLEM_TUTARI','ISLEM_TURU','ISLEM_ADEDI','YIL_AY','SEKTOR','Record_Count','y\u0131l','ay'], axis='columns' ,inplace=False)","99b7c169":"test_preds = my_model.predict(X_test_prep)","13119b32":"output = pd.DataFrame({'Sektor_Id': test.Id, 'Expected': test_preds}) \ndf = output.groupby(['Sektor_Id'])[\"Expected\"].sum().reset_index()\ndf.to_csv('submission.csv', index=False)","8aeec14f":"parameters = {\n    'booster'='gbtree'\n    'max_depth': range (2, 15, 1),\n    'n_estimators': range(60, 220, 40),\n    'learning_rate': [0.4,0.5,0.6,0.7,0.8,0.9]\n    'min_child_weight': [1,]\n    'gamma':\n    'importance_type': gain\n    \n}\ngrid_search = GridSearchCV(\n    estimator=estimator,\n    param_grid=parameters,\n    scoring = 'roc_auc',\n    n_jobs = 10,\n    cv = 10,\n    verbose=True\n)\ngrid_search.fit(X, Y)","818aadeb":"Bir bankan\u0131n pazarlama b\u00f6l\u00fcm\u00fc, 2019 y\u0131l\u0131n\u0131n \u015eubat ay\u0131ndaki kampanyalarda kullanmak \u00fczere 1 milyon TL'lik b\u00fct\u00e7eye sahiptir.\n\nBu b\u00fct\u00e7eyi ortakla\u015fa kampanya d\u00fczenleyecekleri i\u015f ortaklar\u0131yla (firmalar) kampanya maliyeti olarak payla\u015fmak istemektedir. Ancak bu b\u00fct\u00e7eyi ilgili sekt\u00f6rlere payla\u015ft\u0131rabilmek i\u00e7in,\n> ** \u015eubat ay\u0131 i\u00e7in m\u00fc\u015fterilerimizin yapacaklar\u0131 al\u0131\u015fveri\u015fin sekt\u00f6rel da\u011f\u0131l\u0131mlar\u0131n\u0131 \u00f6ng\u00f6rme ihtiyac\u0131 vard\u0131r**.\n\nSizden istenen 2019 y\u0131l\u0131 \u015eubat ay\u0131 i\u00e7in toplam al\u0131\u015fveri\u015flerin sekt\u00f6rel bazda toplam ISLEM_TUTARI'n\u0131 tahmin etmenizdir.","f5bbb441":"A\u00e7\u0131klamalar\nYIL_AY -harcamalar\u0131n yap\u0131ld\u0131\u011f\u0131 tarih (YIL ve AY format\u0131nda)\nISLEM_TURU -harcamalar\u0131n t\u00fcr\u00fc (pe\u015fin ya da taksitli)\nSEKTOR -harcamalar\u0131n yap\u0131ld\u0131\u011f\u0131 sekt\u00f6r\nCUSTOMER -her m\u00fc\u015fterinin unique m\u00fc\u015fteri numaras\u0131\nISLEM_ADEDI -ilgili tarih, t\u00fcr ve sekt\u00f6rde m\u00fc\u015fterinin yapt\u0131\u011f\u0131 i\u015flem adedi\nISLEM_TUTARI -m\u00fc\u015fterinin ilgili tarih, t\u00fcr ve sekt\u00f6rde yapt\u0131\u011f\u0131 i\u015flemlerin toplam tutar\u0131\nID sekt\u00f6r\u00fcn ID'si (submission dosyas\u0131ndaki sektor_id)\nD\u0131\u015f Veri Kullan\u0131m\u0131\nD\u00f6nemsel enflasyon verisi, maa\u015f \u00f6denme g\u00fcnleri, (SGK ve devlet memurlar\u0131n\u0131n maa\u015f g\u00fcnleri vb...), resmi ve dini bayramlara ili\u015fkin veriler, d\u00f6viz kurlar\u0131, mevsime g\u00f6re \u00fclkemizde g\u00f6r\u00fclen ortalama s\u0131cakl\u0131k verileri gibi modelin kurulumunda size faydal\u0131 olabilece\u011fini d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcn\u00fcz her t\u00fcrl\u00fc d\u0131\u015f veriyi kullanabilirsiniz."}}