{"cell_type":{"b6d658d3":"code","dc609c2c":"code","6bd2557e":"code","558fea43":"code","282732d8":"code","9fc175a8":"code","67ec0ea8":"code","3efa955f":"code","aeb3b548":"code","286932f8":"code","5055ccf1":"code","26389060":"code","0b1e5762":"code","d40830b0":"code","3cb96887":"code","2b0e8e2e":"code","6aeda8c2":"code","f3ba53c4":"code","2f7c4c5a":"code","efe48e93":"code","5984cc06":"code","3be407f2":"code","811e97d0":"code","8a0c00b9":"code","d396747d":"code","b3842ac0":"code","fa387a78":"code","0d10ce64":"code","d00060d7":"code","3fc6c369":"code","90bdbf84":"code","1ccaaabf":"code","a015bbf9":"code","6577495a":"code","d9173831":"code","17395ba2":"code","6449aef1":"code","8ce0d643":"code","91db5223":"code","d906cb67":"code","6e6523f7":"code","defe7449":"code","c55c916f":"code","d522e576":"code","0afc2002":"code","42564ca9":"code","66c2825b":"code","0c2aac59":"code","e91076ad":"code","0f506165":"code","928467b5":"code","483c314e":"code","d1ecc724":"code","5ea5f1b4":"code","ffda9a80":"code","323338cd":"code","91f08bc4":"code","f014ac92":"code","0b89259a":"code","724ddbfa":"code","1bb37121":"code","7355f611":"code","0e16a410":"code","e397d21d":"code","00969a90":"code","27654016":"code","5fd60c58":"code","b4fab965":"code","7baa956d":"code","736c3ae2":"code","46c6e986":"code","c3adb006":"code","64dc3d00":"code","e1b657c9":"code","2fd01fdb":"code","47d9c9f0":"code","b159446d":"code","efa896d6":"code","ed4fc216":"code","b504405c":"code","320a2df4":"code","7eb2b93f":"markdown","c80bf682":"markdown","a85b2b20":"markdown","e60ce923":"markdown","a5a5da82":"markdown","8a60a166":"markdown","5f66b682":"markdown","b7e142dd":"markdown","dc37c091":"markdown","baccb74c":"markdown","43fd2a4d":"markdown","b9943b49":"markdown","74c6ffdc":"markdown","a6532c05":"markdown","a50a3850":"markdown","af5aef9d":"markdown","e774fe0a":"markdown","9fca7a62":"markdown","373d7b67":"markdown","2f57140a":"markdown","390ab4f0":"markdown","31614be0":"markdown","f0c12458":"markdown","4ba4c3f3":"markdown","e2fcc38d":"markdown","bdb7c751":"markdown","133f08d0":"markdown","a92315f1":"markdown","9a9e999b":"markdown","ca579e8b":"markdown","bd623e77":"markdown","6161ccf7":"markdown","0e82b509":"markdown","e9ba528c":"markdown","2c79a514":"markdown","56abf0b1":"markdown","bd86fce9":"markdown","e12a568b":"markdown","508caeb8":"markdown","b996bcfc":"markdown","a4c417a6":"markdown","89ad97ec":"markdown","9f43ddad":"markdown","3d2214af":"markdown","bb0ee1e7":"markdown","379dffab":"markdown","e3ce125f":"markdown","d2081ffc":"markdown","d5f9da96":"markdown","4b5c5573":"markdown","b35c22a6":"markdown","3f30b4cc":"markdown","de286eac":"markdown","5b667b13":"markdown","c387e48e":"markdown","0e61d1e9":"markdown","eab538cd":"markdown","493d9208":"markdown","f5a8514c":"markdown","cb5e47bb":"markdown","e8e375a9":"markdown","4581885e":"markdown","6193aab8":"markdown","110c4b51":"markdown","1cc2f8d0":"markdown","06d1cdaf":"markdown","3f44c730":"markdown","a3071e79":"markdown","73eb042a":"markdown","6a36a852":"markdown","b6859a8f":"markdown","35bce2b1":"markdown","412c7c62":"markdown"},"source":{"b6d658d3":"# Import the required packages for analysis and model building\nimport pandas as pd\nimport numpy as np \n\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n\nimport warnings\nwarnings.filterwarnings('ignore')","dc609c2c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6bd2557e":"df = pd.read_csv('\/kaggle\/input\/help-international\/Country-data.csv')","558fea43":"df.head()","282732d8":"df.info()","9fc175a8":"df.describe(percentiles= [.1, .05, .25, .5, .75, .95, .99])","67ec0ea8":"# Check if there are any missing values\ndf.isnull().sum()","3efa955f":"# Change the variables from percentage of Total GDPP to actual values\n\ndf['exports']=(df['exports']*df['gdpp'])\/100\ndf['health']=(df['health']*df['gdpp'])\/100\ndf['imports']=(df['imports']*df['gdpp'])\/100\n\n#Set the index value as Country to do analysis of numerical columns\ndf.set_index('country',inplace=True)\n\ndf.head()","aeb3b548":"plt.figure(figsize = (25,25))\nsns.pairplot(df)","286932f8":"# Heatmap to determine the correlation between the features. \nsns.heatmap(df.corr(), annot = True, cmap=\"YlGnBu\")","5055ccf1":"def plotdata(data):\n    color = data.life_expec\n    area = 5e-2 * data.gdpp\n    data.plot.scatter('child_mort','income',\n                      s=area,c=color,\n                      colormap=matplotlib.cm.get_cmap('Purples_r'), vmin=45, vmax=90,\n                      linewidths=1,edgecolors='k',\n                      figsize=(20,15))\n    \n    # labeling different cluster points with country names \n    for i, txt in enumerate(data.index):\n        if txt == 'India':\n            plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=25, ha='left', rotation=25)\n        plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=10, ha='left', rotation=25)\n    \n    plt.title('Countries based on child_mort, income, gdpp and life_expec',fontsize=20)\n    plt.xlabel('child_mort',  fontsize=20)\n    plt.ylabel('income', fontsize=20)\n    plt.tight_layout()    \n    plt.show()","26389060":"plotdata(df)","0b1e5762":"# Distplot to see the distribution of the features\nplt.figure(figsize = (15,15))\nfeatures = df.columns[:-1]\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(df[i[1]])","d40830b0":"# Box plot to identify the outliers\nplt.figure(figsize=(20, 15))\nfor i, x_var in enumerate(df.columns[:-1]):\n    plt.subplot(3,3,i+1)\n    sns.boxplot(x = x_var, data = df)","3cb96887":"# To find out the one outlier Country for the inflation feature. \ndf.sort_values('inflation', ascending=False).head(10)","2b0e8e2e":"# Copy the original dataset to a different dataset to cap the Outliers. This is essential to keep the original dataset\ndf_capped = df.copy()\ncap_outliers = ['exports', 'health', 'imports', 'income', 'gdpp', 'inflation']","6aeda8c2":"# For each of the features in remove_outlier, cap the outliers in the upper end. \n# Only the outliers in the upper end need to be capped. \nfor i, var in enumerate(cap_outliers):\n    q4 = df[var].quantile(0.95)\n    df_capped[var][df_capped[var]>=q4] = q4","f3ba53c4":"df_capped.describe()","2f7c4c5a":"# Plot the boxplot for the features \nplt.figure(figsize=(20, 15))\nfor i, x_var in enumerate(df_capped.columns[:-1]):\n    plt.subplot(3,3,i+1)\n    sns.boxplot(x = x_var, data = df_capped)","efe48e93":"# Importing the scaling library - StandardScaler\nfrom sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()","5984cc06":"# Scaling the dataset with Standard Scaler \ndf_scaled=pd.DataFrame(scaler.fit_transform(df_capped),columns=df_capped.columns, index=df_capped.index)\ndf_scaled.head()","3be407f2":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1] # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","811e97d0":"hopkins(df_capped)","8a0c00b9":"hopkins(df_scaled)","d396747d":"# Elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(df_scaled)\n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters starting from 2 clusters\nxi = list(range(len(range_n_clusters)))\nplt.plot(xi, ssd) \nplt.xlabel('Number of clusters')\nplt.ylabel('Sum of squared distances') \nplt.xticks(xi, range_n_clusters)\nplt.title('Elbow-curve Analysis')\nplt.show()","b3842ac0":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\ns_score = []\n\nfor num_clusters in range_n_clusters:\n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(df_scaled)\n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(df_scaled, cluster_labels)\n    s_score.append(silhouette_avg)\n    \n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg)) \n    \n# plot the Silhouette score for each n_clusters starting from 2 clusters\nxi = list(range(len(range_n_clusters)))\nplt.plot(xi, s_score) \nplt.xlabel('Number of clusters')\nplt.ylabel('Silhoutte scores') \nplt.xticks(xi, range_n_clusters)\nplt.title('Silhoutte Score Analysis')\nplt.show()","fa387a78":"# This function is to plot the scatter plot of countries based on child_mort, income and gdpp. \n# The child_mort is along the x-axis, income along the y-axis and the size of the points relational to the gdpp\n\ndef plotdata_cluster(data, title):\n    area = 5e-2 * data.gdpp\n    colors = data.cluster_id.map({0: 'skyblue', 1: 'gold', 2: 'coral', 3: 'palegreen'})\n    \n    data.plot.scatter('child_mort','income',\n                      s=area, c=colors,\n                      linewidths=1,edgecolors='k',\n                      figsize=(20,15))\n        \n    # labeling different cluster points with country names \n    for i, txt in enumerate(data.index):\n        if txt == 'India':\n            plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=25, ha='left', rotation=25)\n        plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=12, ha='left', rotation=25)\n    \n    #plt.title('Countries clusters based on child_mort, income and gdpp after Outlier removal',fontsize=20)\n    plt.title(plot_title,fontsize=20)\n    plt.xlabel('child_mort',  fontsize=20)\n    plt.ylabel('income', fontsize=20)\n    plt.tight_layout()","0d10ce64":"# This function is to plot the scatter plot of countries based on child_mort, life_expec and health (expenditure). \n# The child_mort is along the x-axis, life_expec along the y-axis and the size of the points relational to the health.\n\ndef plotdata_health(data, plot_title):\n    area = 50e-1 * data.health\n    colors = data.cluster_id.map({0: 'skyblue', 1: 'gold', 2: 'coral', 3: 'palegreen'})\n    \n    data.plot.scatter('child_mort','life_expec',\n                      s=area, c=colors,\n                      linewidths=1,edgecolors='k',\n                      figsize=(20,15))\n        \n    # labeling different cluster points with country names \n    for i, txt in enumerate(data.index):\n        if txt == 'India':\n            plt.annotate(txt, (data.child_mort[i],data.life_expec[i]), fontsize=25, ha='left', rotation=25)\n        plt.annotate(txt, (data.child_mort[i],data.life_expec[i]), fontsize=12, ha='left', rotation=25)\n    \n    #plt.title('Countries clusters based on child_mort, life_expec and health expenditure',fontsize=20)\n    plt.title(plot_title,fontsize=20)\n    plt.xlabel('child_mort',  fontsize=20)\n    plt.ylabel('life_expec', fontsize=20)\n    plt.tight_layout()","d00060d7":"# K-Means clustering with 3 clusters\n# Set the random_state to a fixed value so that the labels do not change for each iteration\nkmeans_3=KMeans(n_clusters=3, max_iter=100, random_state=50)    # k=3 and iteration=100\nkmeans_3.fit(df_scaled)                                         # fitting the dataset","3fc6c369":"kmeans_3.labels_","90bdbf84":"# Appending the cluster labels to the original capped dataset \ndf_cap_kmeans3 = df_capped.copy()\ndf_cap_kmeans3['cluster_id']=kmeans_3.labels_\n#df_cap_kmeans3.head()","1ccaaabf":"# Plot the scatter plot of countries for Kmeans clustering with 3 clusters\n# child_mort along the x axis, income along the y-axis and size of the scatter point relative to the gdpp \nplot_title = 'Countries based on child_mort, income and gdpp'\nplotdata_cluster(df_cap_kmeans3, plot_title)","a015bbf9":"# Final model: K Means clustering with k=4\nkmeans_4=KMeans(n_clusters=4, max_iter=100, random_state=50)    # k=4 and iteration=500\nkmeans_4.fit(df_scaled) # fitting the dataset","6577495a":"# Cluster labels for Kmeans with k=4\nkmeans_4.labels_","d9173831":"# Appending the cluster labels to the original capped dataset  \ndf_cap_kmeans4 = df_capped.copy()\ndf_cap_kmeans4['cluster_id']=kmeans_4.labels_","17395ba2":"# Plot the scatter plot of countries for Kmeans clustering with 3 clusters\n# child_mort along the x axis, income along the y-axis and size of the scatter point relative to the gdpp \nplot_title = 'Countries based on child_mort, income and gdpp - 4 Clusters'\nplotdata_cluster(df_cap_kmeans4, plot_title)","6449aef1":"# This function is to plot the scatter plot of countries based on child_mort, life_expec and health (expenditure). \n# The child_mort is along the x-axis, life_expec along the y-axis and the size of the points relational to the health.\n\nplot_title = 'Countries based on child_mort, life_expec and health expenditure - 4 Clusters'\nplotdata_health(df_cap_kmeans4, plot_title)","8ce0d643":"# Define a function to create the snake plots for segment analysis\ndef snake_plot(data, plot_title):\n    sns.set_style('whitegrid')\n    df_melt = pd.melt(data.reset_index(), id_vars = ['country','cluster_id'], \n                      var_name = 'Feature', value_name = 'Value')\n\n    plt.figure(figsize = (12,6))\n    sns.lineplot(x = 'Feature', y = 'Value', data = df_melt,\n                 hue = 'cluster_id', palette = \"muted\")\n    \n    plt.title(plot_title,fontsize=20)\n    plt.xlabel('Features',  fontsize=20)\n    plt.ylabel('Scaled Values', fontsize=20)\n    plt.tight_layout()    \n    \n    # To print the number of Countries falling under each clusters\n    print (title)\n    print (df_sp.cluster_id.value_counts())","91db5223":"# Create Dataset for Snake plots - Scaled dataset should be used for the snake plot\ndf_sp = df_scaled.copy()","d906cb67":"# Use the labels from the KMeans clustering with 3 clusters for snake plot\ndf_sp['cluster_id'] = kmeans_3.labels_ \n\n# snake plot for 3 clusters\ntitle = 'Segment Analysis - KMeans with 3 clusters'\nsnake_plot(df_sp, title)","6e6523f7":"# Use the labels from the KMeans clustering with 4 clusters for snake plot\ndf_sp['cluster_id'] = kmeans_4.labels_ \n\n# snake plot for 3 clusters\nplot_title = 'Segment Analysis - KMeans with 4 clusters'\nsnake_plot(df_sp, plot_title)","defe7449":"# Relative Importance plot to get the relative importance of each feature for the clusters \ndef relative_imp_plot(data, plot_title):\n    cluster_mean = data.groupby(['cluster_id']).mean()\n    pop_mean = data.mean()\n    relative_imp = cluster_mean \/ pop_mean - 1\n    \n    plt.figure(figsize=(10, 4))\n    plt.title(plot_title, fontsize=20)\n    sns.heatmap(data=relative_imp, annot=True, fmt='.2f', cmap='RdBu', vmin=-4, vmax=4)\n    plt.show()","c55c916f":"# Relative Importance plot to get the relative importance of each feature for the clusters - Kmeans 4 clusters\nplot_title = 'Relative Importance plot - KMeans with 4 clusters'\nrelative_imp_plot(df_cap_kmeans4, plot_title)","d522e576":"# Relative Importance plot to get the relative importance of each feature for the clusters - Kmeans 3 clusters\nplot_title = 'Relative Importance plot - KMeans with 3 clusters'\nrelative_imp_plot(df_cap_kmeans3, plot_title)","0afc2002":"cluster_analysis = df_cap_kmeans4.groupby('cluster_id').agg({'child_mort': 'mean', 'exports': 'mean', \n                             'health': 'mean','imports': 'mean', 'income': 'mean', 'inflation': 'mean', \n                             'life_expec': 'mean', 'total_fer': 'mean', 'gdpp': ['mean', 'count']}).round(0)\ncluster_analysis","42564ca9":"# Analyse the following features for the summary and boxplot analysis\nsummary_cols = ['gdpp', 'income', 'life_expec',\n                'child_mort', 'total_fer','inflation' ]","66c2825b":"# Summary Analysis for mean of the features for each of the clusters\nsns.set(style='whitegrid')\nplt.figure(figsize=(20, 10))\nfor i, x_var in enumerate(summary_cols):\n    plt.subplot(2,3,i+1)\n    sns.barplot(x = cluster_analysis.reset_index().cluster_id, \n                y = cluster_analysis[x_var]['mean'])\n    plt.ylabel(x_var, fontsize=15)\n    plt.xlabel('cluster_id', fontsize=15)\nplt.tight_layout()    \nplt.show()    ","0c2aac59":"profiling_cols = ['gdpp', 'income', 'child_mort']\n\nsns.set(style='white')\n# plt.title('Cluster Profiling based on gdpp, income and child_mort')\nplt.figure(figsize=(12,6))\n\nfor i, x_var in enumerate(profiling_cols):\n    plt.subplot(1,3,i+1)\n    sns.boxplot(x = df_cap_kmeans4.cluster_id, \n                y = df_cap_kmeans4[x_var])\n    plt.ylabel(x_var, fontsize=20)\n    plt.xlabel('cluster_id', fontsize=20)\n    plt.tight_layout()    \nplt.show()    ","e91076ad":"# This function is to plot the scatter plot of countries based on child_mort, income and gdpp. \n# The child_mort is along the x-axis, income along the y-axis and the size of the points proportionalto the gdpp\ndef plotdata_aid(data, plot_title):\n    area = 50e-2 * data.gdpp\n    colors = data.cluster_id.map({0: 'skyblue', 1: 'gold', 2: 'coral', 3: 'palegreen'})\n    \n    data.plot.scatter('child_mort','income',\n                      s=area,c=colors,\n                      linewidths=1,edgecolors='k',\n                      figsize=(20,15))\n        \n    # labeling different cluster points with country names \n    for i, txt in enumerate(data.index):\n        if txt == 'India':\n            plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=20, ha='left', rotation=25)\n        plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=12, ha='left', rotation=25)\n    \n    plt.title(plot_title,fontsize=20)\n    plt.xlabel('child_mort',fontsize=20)\n    plt.ylabel('income',fontsize=20)","0f506165":"# Plot the scatter plot for the Countries in need of financial aid \n# The child_mort is along the x-axis, income along the y-axis and the size of the points relational to the gdpp\n\nplot_title = 'Socio-economically poor and developing Countries - KMeans Clusters 2 and 0'\nplotdata_aid(df_cap_kmeans4[(df_cap_kmeans4.cluster_id == 2) | (df_cap_kmeans4.cluster_id == 0)], plot_title)","928467b5":"# Get the countries that are in need of aid\ndf_aid = df.copy()\ndf_aid['cluster_id'] = kmeans_4.labels_","483c314e":"# Get the countries from Cluster 2 (Poor Countries)\ndf_aid = df_aid.query('cluster_id == 2').sort_values(['child_mort', 'gdpp', 'income', 'life_expec' ], \n                                                   ascending = (False, True, True, True))\ndf_aid.head()","d1ecc724":"# Get the rank for individal features for each Country\ndf_aid['cmrank'] = df_aid.child_mort.rank(method='dense',ascending = False).astype(int)\ndf_aid['lerank'] = df_aid.life_expec.rank(method='dense',ascending = True).astype(int)\ndf_aid['gdrank'] = df_aid.gdpp.rank(method='dense',ascending = True).astype(int)\ndf_aid['inrank'] = df_aid.income.rank(method='dense',ascending = True).astype(int)\ndf_aid['ifrank'] = df_aid.inflation.rank(method='dense',ascending = False).astype(int)","5ea5f1b4":"df_aid.head(5)","ffda9a80":"# * **'child_mort' - Top 5 Countries with highest child mortality rate**\n# * **'life_expec' - Top 3 Countries with lowest life expectancy**\n# * **'gdpp'       - Top 3 countries with lowest gdpp**\n# * **'income'     - Top 3 countries with lowest income**\n# * **'inflation'  - Nigeria has abnormally high inflation rate.** \n\ndf_final = df_aid[(df_aid.cmrank <=5) | (df_aid.lerank <=3) | \n                  (df_aid.gdrank <=3) | (df_aid.inrank <=3) | (df_aid.ifrank <=1)]\ndf_final","323338cd":"df_final.index","91f08bc4":"# Plot the Hierarchical Clustering Dendrogram for Single linkage\ndef plot_dendrogram_single(data):\n    plt.figure(figsize=(15,8))             # Setting the size of the figure\n    sns.set_style('white')                  # Setting style\n\n    # setting the labels on axes and title\n    plt.title('Hierarchical Clustering Dendrogram - Single linkage',fontsize=20)\n    plt.xlabel('Country',fontsize=20)\n    plt.ylabel('Values',fontsize=20)\n\n    mergings_s = linkage(data, method = \"single\", metric='euclidean') # Use the df_scaled dataset\n    dendrogram(mergings_s, labels=data.index, leaf_rotation=90, leaf_font_size=6)\n    plt.show()\n    return mergings_s","f014ac92":"# Plot the Hierarchical Clustering Dendrogram for Complete linkage\ndef plot_dendrogram_complete(data):\n    plt.figure(figsize=(15,8))             # Setting the size of the figure\n    sns.set_style('white')                  # Setting style\n\n    # setting the labels on axes and title\n    plt.title('Hierarchical Clustering Dendrogram - Complete linkage',fontsize=20)\n    plt.xlabel('Country',fontsize=20)\n    plt.ylabel('Values',fontsize=20)\n\n    mergings_c = linkage(data, method = \"complete\", metric='euclidean')\n    dendrogram(mergings_c, labels=data.index, leaf_rotation=90, leaf_font_size=6)\n    plt.show()\n    return mergings_c","0b89259a":"# Plot the dendrogram for the normalized dataset with single linkage\nmergings_s = plot_dendrogram_single(df_scaled)","724ddbfa":"# Plot the dendrogram for the normalized dataset with single linkage\nmergings_c = plot_dendrogram_complete(df_scaled)","1bb37121":"cap_outliers","7355f611":"# Let us cap the outliers for both the upper and lower ends and then do the Hierarchical clusering\ndf_capped1 = df.copy()\n\nfor i, var in enumerate(cap_outliers):\n    q1 = df[var].quantile(0.05)\n    q4 = df[var].quantile(0.95)\n    df_capped1[var][df_capped1[var]<=q1] = q1\n    df_capped1[var][df_capped1[var]>=q4] = q4\n\ndf_scaled1=pd.DataFrame(scaler.fit_transform(df_capped1),columns=df_capped1.columns, index=df_capped1.index)\ndf_scaled1.head()","0e16a410":"mergings_cc = plot_dendrogram_complete(df_scaled1)","e397d21d":"# 3 clusters - use the mergings from Complete linkage\ncluster_labels_3 = cut_tree(mergings_cc, n_clusters=3).reshape(-1, )\ncluster_labels_3","00969a90":"# To visualise let us use the df_capped1 dataset with the Outliers capped for upper outliers and lower outliers \ndf_cap_hier3 = df_capped1.copy()\n\n# assign cluster labels\ndf_cap_hier3['cluster_id'] = cluster_labels_3\ndf_cap_hier3.head()","27654016":"# Cluster plot for Hierarchical cluster - 3 Clusters\nplot_title = 'Cluster plot for Hierarchical cluster - 3 Clusters'\nplotdata_cluster(df_cap_hier3, plot_title)","5fd60c58":"# 4 clusters - use the mergings from Complete linkage\ncluster_labels_4 = cut_tree(mergings_cc, n_clusters=4).reshape(-1, )\ncluster_labels_4","b4fab965":"# To visualise let us use the df_capped1 dataset with the Outliers capped for upper outliers and lower outliers \ndf_cap_hier4 = df_capped1.copy()\n\n# assign cluster labels\ndf_cap_hier4['cluster_id'] = cluster_labels_4\ndf_cap_hier4.head()","7baa956d":"# Cluster plot for Hierarchical cluster - 3 Clusters\nplot_title = 'Cluster plot for Hierarchical cluster - 4 Clusters'\nplotdata_cluster(df_cap_hier4, plot_title)","736c3ae2":"# Snake plot for Hierarchical clustering with 3 clusters \n# Use the labels from the Hierarchical clustering with 3 clusters for snake plot\ndf_sp['cluster_id'] = cluster_labels_3\n\n# snake plot for 3 clusters\ntitle = 'Segment Analysis - Hierarchical with 3 clusters'\nsnake_plot(df_sp, title)","46c6e986":"# Snake plot for Hierarchical clustering with 4 clusters \n# Use the labels from the Hierarchical clustering with 4 clusters for snake plot\ndf_sp['cluster_id'] = cluster_labels_4\n\n# snake plot for 3 clusters\ntitle = 'Segment Analysis - Hierarchical with 4 clusters'\nsnake_plot(df_sp, title)","c3adb006":"# Relative importance plot for the Hierarchical clustering with 4 clusters\nplot_title = 'Relative importance plot for the Hierarchical clustering with 4 clusters'\nrelative_imp_plot(df_cap_hier4, plot_title)","64dc3d00":"# Relative importance plot for the Hierarchical clustering with 4 clusters\nplot_title = 'Relative importance plot for the Hierarchical clustering with 3 clusters'\nrelative_imp_plot(df_cap_hier3, plot_title)","e1b657c9":"# The Countries in need of aid (Poor Countries) are in Cluster 0 \ndf_aid_hier4 = df.copy()\ndf_aid_hier4['cluster_id'] = cluster_labels_4\ndf_aid_hier4 = df_aid_hier4.query('cluster_id == 0').sort_values(['child_mort', 'life_expec', 'income', 'gdpp' ], \n                                                   ascending = (False, True, True, True))\ndf_aid_hier4.head(20)","2fd01fdb":"# Get the rank for individal features for each Country\ndf_aid_hier4['cmrank'] = df_aid_hier4.child_mort.rank(method='dense',ascending = False).astype(int)\ndf_aid_hier4['lerank'] = df_aid_hier4.life_expec.rank(method='dense',ascending = True).astype(int)\ndf_aid_hier4['gdrank'] = df_aid_hier4.gdpp.rank(method='dense',ascending = True).astype(int)\ndf_aid_hier4['inrank'] = df_aid_hier4.income.rank(method='dense',ascending = True).astype(int)\ndf_aid_hier4['ifrank'] = df_aid_hier4.inflation.rank(method='dense',ascending = False).astype(int)","47d9c9f0":"df_aid_hier4.head()","b159446d":"# * **'child_mort' - Top 5 Countries with highest child mortality rate**\n# * **'life_expec' - Top 3 Countries with lowest life expectancy**\n# * **'gdpp'       - Top 3 countries with lowest gdpp**\n# * **'income'     - Top 3 countries with lowest income**\n# * **'inflation'  - Nigeria has abnormally high inflation rate.** \n\ndf_final_hier4 = df_aid_hier4[(df_aid_hier4.cmrank <=5) | (df_aid_hier4.lerank <=3) | \n                              (df_aid_hier4.gdrank <=3) | (df_aid_hier4.inrank <=3) | (df_aid_hier4.ifrank <=1)]\ndf_final_hier4","efa896d6":"print (f'The following {len(df_final.index)} countries are ranked after KMeans clustering')\ndf_final.index","ed4fc216":"print (f'The following {len(df_final_hier4.index)} countries are ranked after Hierarchical clustering')\ndf_final_hier4.index","b504405c":"# This function is to plot the scatter plot of countries based on child_mort, income and gdpp. \n# The child_mort is along the x-axis, income along the y-axis and the size of the points proportionalto the gdpp\ndef plotdata_aid_final(data, plot_title):\n    area = 50e-2 * data.gdpp\n    colors = data.cluster_id.map({0: 'skyblue', 1: 'gold', 2: 'coral', 3: 'palegreen'})\n    \n    aid_countries = ['Haiti', 'Sierra Leone', 'Chad', 'Central African Republic', 'Mali',\n                     'Nigeria', 'Congo, Dem. Rep.', 'Lesotho', 'Burundi', 'Liberia']\n    data.plot.scatter('child_mort','income',\n                      s=area,c=colors,\n                      linewidths=1,edgecolors='k',\n                      figsize=(20,15))\n        \n    # labeling different cluster points with country names \n    for i, txt in enumerate(data.index):\n        if txt in aid_countries:\n            plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=20, ha='left', rotation=25)\n        #plt.annotate(txt, (data.child_mort[i],data.income[i]), fontsize=12, ha='left', rotation=25)\n    \n    plt.title(plot_title,fontsize=20)\n    plt.xlabel('child_mort',fontsize=20)\n    plt.ylabel('income',fontsize=20)","320a2df4":"# Plot the scatter plot for the Countries in need of financial aid \n# The child_mort is along the x-axis, income along the y-axis and the size of the points relational to the gdpp\n\nplot_title = 'Final list of countries recommended for aid'\nplotdata_aid_final(df_cap_kmeans4[(df_cap_kmeans4.cluster_id == 2) | (df_cap_kmeans4.cluster_id == 0)], plot_title)","7eb2b93f":"### 4.2 A special case of Outlier - inflation\n\n* As we can see from the figure below, there is a special case of outlier for inflation with only one Country - Nigeria with an inflation of more than 100.  \n* When a model was built for clustering without removing the outlier for inflation, Nigeria was clustered in a separate cluster of its own as the inflation is abnormally high. \n* For our analysis purposes, we can cap the inflation outlier also to bring Nigeria on par with the other socio-economically weak countries. But we have to consider this during the final recommendation. ","c80bf682":"### 10.7 Final list of Recommended Countries - Hierarchical clustering\n\n1. Copy the original dataset without outlier capping\n2. Assign the labels from hierarchical clustering with n_clusters=4\n3. Use the Cluster with under developed countries (cluster 0)\n4. Rank the countries based on the socio-economic factors and sort to get the final list of poorest countries","a85b2b20":"The following are the steps needed to prepare the dataset for model building:\n 1. Perform scaling on the dataset \n 2. Verify Hopkins Statistics to determine the cluster tendency of the dataset\n 3. Determine the optimum number of K using Elbow-curve method and Silhouette analysis. ","e60ce923":"## <span style=\"color:navy\"> 1. Import Data and Initial Analysis\n    \n### 1.1 Data Import","a5a5da82":"**Final Recommended Countries from Hierarchical Clustering**","8a60a166":"### 10.4  Build model with n_clusters as 4 - Complete linkage","5f66b682":"### 2.1 Missing Values Analysis","b7e142dd":"### 9.1 List of countries from Cluster 2\n\nThe Countries are sorted in the following order - \n* 'child_mort' - Descending\n* 'life_expec' - Ascending\n* 'gdpp' - Ascending\n* 'income' - Ascending","dc37c091":"### 3.4 Distplot to see the distribution of the features","baccb74c":"### 11.2 Here are the steps we followed: \n\n1. Initial data analysis and Outlier handling\n2. Determined the optimal number of clusters using visual method (elbow curve) and statistical method (Silhouette score)\n3. Build KMeans clustering model with n_clusters = 3 and n_clusters = 4\n4. Segment Analysis and Summary analysis for KMeans clustering model with n_clusters = 3 and n_clusters = 4\n5. Build Hierarchical clustering model with n_clusters = 3 and n_clusters = 4\n6. Segment Analysis and Summary analysis for Hierarchical clustering model with n_clusters = 3 and n_clusters = 4\n7. Identified and Visualized the final cluster of Countries in need of Financial aid. \n8. From the cluster, arrived at the final list of Countries based on the below ranking. \n\n    * **'child_mort' - Top 5 Countries with highest child mortality rate**\n    * **'life_expec' - Top 3 Countries with lowest life expectancy**\n    * **'gdpp'       - Top 3 countries with lowest gdpp**\n    * **'income'     - Top 3 countries with lowest income**\n    * **'inflation'  - Nigeria has abnormally high inflation rate.**               ","43fd2a4d":"## <span style=\"color:navy\"> 6. K-Means Clustering \n    \nK-Means clustering is done for 3 clusters and 4 clusters. ","b9943b49":"## <span style=\"color:navy\"> 4. Outlier analysis","74c6ffdc":"#### 6.2.1 Observations for Kmeans clustering - 3 Clusters\n* The Rich Countries have high income, low child_mort and high gdpp (based on the size of the scatter points)\n* The cluster that is of interest to us for the Foundation is the cluster 2 in the bottom right side of the curve - with very low income, very high child_mort and very low gdpp\n* Child Mortality rate seem to be an important factor seeing from Equatorial Guinea which is placed in Group 2 even though the income and gdpp seem to be relatively high\n* Can you plot India in the curve? - The gdpp is very less indicating the economic disparity between the rich and poor in the country ","a6532c05":"### 7.3 Choosing the number of K based on experimentation: \n\n* We have built the model for clusters = 3 and clusters = 4. \n* From the above snake plots, we can see that the majority of the countries fall under Group 0 - the developing countries\n* The group of interest to us is the Group 2 - which has the poorest countries in terms of both economy and health\n* There are no major differences between clustering with k = 3 or k = 4 in terms of the developing and poor countries. \n* **We will use k = 4 for our final model** as it helps to understand the effect of outliers better\n* Cluster size of 4 also will help understand the differences between rich and very rich countries ","a50a3850":"### 7.1 Snake plots to understand and compare segments\n* Snake plot is an important Market research technique to compare different segments\n* It provides a Visual representation of each segment's attributes\n* The data should first be normalizes (center & scale)\n* Plot each cluster's average normalized values of each attribute","af5aef9d":"### 5.3 Finding the Optimal Number of Clusters\n\nMethods to define the number of clusters\n* Visual methods - Elbow criterion\n* Mathematical methods - Silhouette coefficient\n* Experimentation and interpretation","e774fe0a":"## <span style=\"color:navy\"> 11. Conclusion and Final Recommendations:","9fca7a62":"### 8.3 Profiling based on columns - 'gdpp', 'income' and 'child_mort'\n\nBased on the three features, we can arrive at the below profiling for the countries\n1. **<span style=\"color:blue\">Cluster 0 - Developing Countries** - Have low gdpp, low income and low child_mort.\n2. **<span style=\"color:blue\">Cluster 1 - Developed Countries** - Have high gdpp, high income and low child_mort.\n3. **<span style=\"color:blue\">Cluster 2 - Under-Developed or Poor Countries** - Have very low gdpp, very low income and very high child_mort.\n4. **<span style=\"color:blue\">Cluster 3 - Very Rich Countries** - Have very high gdpp, very high income and very low child_mort. ","373d7b67":"### 9.1 Scatter plot of countries from Clusters 2 and 0\n\nGet the countries from Cluster 2 (Poor Countries) and clusters 0 (Developing Countries) for comparision","2f57140a":"Since there are no missing values, we can proceed to Data Preparation","390ab4f0":"**5.3.3 Experimental approach - Analyze segments**\n* Build clustering at and around elbow solution (k=3 or k=4 in our case)\n* Analyze their properties - Build models with multiple k's and analyse the results \n* Compare against each other and choose one which makes most business sense","31614be0":"### 11.3 Important Observations: \n\n* Developed Countries have high exports, imports, health, gdpp, income and life expectancy.\n  This includes the rich and very rich countries (clusters 1 and 3)\n* Developing Countries have low exports, imports, health, gdpp and income. But what is different from the poor countries    is that the Developing countries have lower child mortality rate and total fertility and higher life expectancy compared to the poor countries\n* Under Developed or poor countries have very low exports, imports, health, gdpp, income and life_expectancy.\n* For the under developed countries, the child_mort is proportionalto the total_fer\n    This clearly indicates that the survival rate of the children under 5 years of age is greatly affected by the total children birthed by the mother. Providing affordable contraceptives could help in tackling this issue.\n* Haiti has very high child_mort as well as very low life expectancy\n* Haiti and Lesotho have very very low life expectancy\n* Nigeria has abnormally high inflation rate. A very high inflation rate can be detrimental to the Development of a Country. It also means financial struggle for the poorest people in the country. so, Nigeria can be included in the final list to cater to the needs of the poorest people in the country because of the very high inflation.   ","f0c12458":"### 11.1 Here are the final list of Countries recommended: \n\n**The final list of 10 Countries recommended for financial aid from KMeans clusters and Hierarchical clusters are:**\n\n**<span style=\"color:blue\">'Haiti', 'Sierra Leone', 'Chad', 'Central African Republic', 'Mali',\n       'Nigeria', 'Congo, Dem. Rep.', 'Lesotho', 'Burundi', 'Liberia'**","4ba4c3f3":"#### 6.3.1 Observations for Kmeans clustering - 4 Clusters\n\n* It is interesting to note from the scatter plot that although countries in cluster 0 (Developing countries) have similar gdpp to countries in cluster 2 (poor countries), the child_mort rate is very much less. ","e2fcc38d":"## <span style=\"color:navy\"> 8. Further analysis with Final K-Means Model - 4 Clusters\n\nWe can further our analysis with number of clusters as 4. \nOur next step is to analyse the individual features for the 4 clusters to do the profiling in addition to section 7.","bdb7c751":"### 3.2 Heatmap to see the correlation between features","133f08d0":"### 5.2 Hopkins Statistics:\n\nThe Hopkins statistic, is a statistic which gives a value which indicates the cluster tendency, in other words: how well the data can be clustered.\n\n* If the value is between {0.01, ...,0.3}, the data is regularly spaced.\n* If the value is around 0.5, it is random.\n* If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.","a92315f1":"### 6.1 Create functions to plot the cluster visualizations\n*  Once we define the functions for plotting, we can use the same function to plot for multiple datasets based on the k.","9a9e999b":"### 3.1 Pairplot to see the distribution of the features","ca579e8b":"#### <span style=\"color:navy\"> Data Dictionary\n* **country**\t\tName of the country\n* **child_mort**\tDeath of children under 5 years of age per 1000 live births\n* **exports** Exports of goods and services. Given as %age of the Total GDP\n* **health**\t\tTotal health spending as %age of Total GDP\n* **imports**\t\tImports of goods and services. Given as %age of the Total GDP\n* **Income**\t\tNet income per person\n* **Inflation**\tThe measurement of the annual growth rate of the Total GDP\n* **life_expec**\tThe average number of years a new born child would live if the current mortality patterns are to remain the same\n* **total_fer**\tThe number of children that would be born to each woman if the current age-fertility rates remain the same.\n* **gdpp**\t\tThe GDP per capita. Calculated as the Total GDP divided by the total population.\n","bd623e77":"### 10.5 Snake plots to analyze segments","6161ccf7":"**Let us now plot the final recommended countries in the graph for developing and under-developed countries**","0e82b509":"## <span style=\"color:navy\"> 2. Initial Data Analysis\n\nThe second step is to do the initial analysis on the data. The following points should be taken care of before proceeding \nwith the model building. \n* Find Missing values if any\n* Drop the unnecessary variables\n* Identify the Categorical and Continuous Features\n* Check the data types of all the columns and make changes if needed","e9ba528c":"### 4.1 Box plot to identify outliers (Before capping the outliers)","2c79a514":"### 2.2 Data Preparation \n\n* Change the columns 'health', 'imports' and 'exports' from a percentage of Total GDPP into actual value of 'health', 'imports' and 'exports'.\n* Set the index of the dataset to 'country' to enable better data visualiztion and to remove the categorical variable for analysis","56abf0b1":"### 8.1 Analysis of means for all features","bd86fce9":"### 8.2 Box plot of features for Profiling columns - 'gdpp', 'income' and 'child_mort'","e12a568b":"### <span style=\"color:navy\"> Problem Statement\nHELP International is an international humanitarian NGO that is committed to fighting poverty and \nproviding the people of backward countries with basic amenities and relief during the time of disasters and \nnatural calamities. It runs a lot of operational projects from time to time along with advocacy drives to \nraise awareness as well as for funding purposes.\n\nAfter the recent funding programmes, they have been able to raise around $10 million. \nNow the CEO of the NGO needs to decide how to use this money strategically and effectively. \nThe significant issues that come while making this decision are mostly related to choosing the countries \nthat are in the direst need of aid. \n\nThe case study is to categorise the countries using some socio-economic and health factors that determine the\noverall development of the country and to suggest the countries which the CEO needs to focus on the most.  ","508caeb8":"### 10.5  Build model with n_clusters as 3 - Complete linkage","b996bcfc":"### 4.3 Handle Outliers - Capping the upper limit","a4c417a6":"### 10.1  Define common functions for Plotting Hierarchical Clustering Dendrogram","89ad97ec":"**Final Recommended Countries from KMeans Clustering**","9f43ddad":"**Observations from the Dendrograms:**\n* As we can see from the above dendrograms, the outliers seem to have affected the output for the clustering to a large extent. \n* We have capped the outliers for the upper end for the features - cap_outliers = ['exports', 'health', 'imports', 'income', 'gdpp', 'inflation']\n* We can now **cap the outliers for both upper and lower ends** and then do the hierarchical clustering. ","3d2214af":"### 9.2 Final List of Recommended Countries: K Means Clustering\n\n**The final list of 10 Countries recommended for financial aid by KMeans clustering are:**\n\n**<span style=\"color:blue\">'Haiti', 'Sierra Leone', 'Chad', 'Central African Republic', 'Mali',\n       'Nigeria', 'Congo, Dem. Rep.', 'Lesotho', 'Burundi', 'Liberia'**\n       \nTo get the final list of Countries to provide financial aid, we can rank the Countries based on the important features \n\nwe can ignore some of the features \n* health, exports and imports as they are a ratio of gdpp\n* total_fer can be ignored as we can see that this affects the child_mort and we have included child_mort\n\nThe ranks for the following features for each Country can be obtained and the Countries in need can be ordered according to these ranks.  \n* **'child_mort' - Top 5 Countries with highest child mortality rate**\n* **'life_expec' - Top 3 Countries with lowest life expectancy**\n* **'gdpp'       - Top 3 countries with lowest gdpp**\n* **'income'     - Top 3 countries with lowest income**\n* **'inflation'  - Nigeria has abnormally high inflation rate.** \nA very high inflation rate can be detrimental to the Development of a Country. It also means financial struggle for the poorest people in the country. so, Nigeria can be included in the final list to cater to the needs of the poorest people in the country because of the very high inflation.                  ","bb0ee1e7":"## <span style=\"color:navy\"> 7. Segment Profiling and analysis\n    \nWe can use the following methods to compare the segments and do profiling\n* Snake Plots\n* Relative importance heat map","379dffab":"### Observations: \n* The Distribution plot highlights the presence of outliers at both the upper and lower ends of the socio-economic spectrum \n* The Distribution plot also highlights the general skewness in the data implying that there is a wide disparity between the two extremes \u2013 wealthy and poor countries.","e3ce125f":"### 10.4  Plot Hierarchical Clustering Dendrogram - Complete linkage after capping lower ranges\n\nLet us now plot the Hierarchical Clustering Dendrogram for Complete linkage after capping outliers at both lower and upper ends. \n\nAs we can see from the dendrogram, the clustering is now similar to the results we got with KMeans clustering and gives a clear picture. ","d2081ffc":"## <span style=\"color:navy\"> 10. Hierarchical Clustering\n    \nWe will follow similar process for Hierarchical clustering as we did for KMeans clustering\n\nFollowing steps will be followed: \n* Plot Hierarchical Clustering Dendrogram - Single linkage\n* Plot Hierarchical Clustering Dendrogram - Complete linkage\n* Build model with n_clusters = 3 (Use clusters derived from Complete linkage)\n* Build model with n_clusters = 4 (Use clusters derived from Complete linkage)\n* Scatter plot visualization for n_clusters = 3 and n_clusters = 4 \n* Snanke Plots for Segmenting analysis for n_clusters = 3 and n_clusters = 4\n* Final Recommendations for Countries in need of aid","d5f9da96":"### 7.2 Relative importance of segment attributes\n* Useful technique to identify relative importance of each segment's attribute\n* Calculate mean values of each cluster\n* Calculate mean values of population\n* Calculate importance score by dividing them and subtracting 1 (ensures 0 is returned when cluster mean = population mean)\n* Analyze and plot relative importance\n* The further a ratio is from 0, the more important that attribute is for a segment relative to the total population.","4b5c5573":"* We can see that after the ranking of Countries based on socio-economic factor, the countries recommended for Financial aid by the KMeans algorithm and Hierarchical clustering are the same.","b35c22a6":"#### 6.3.2 Observations for Kmeans clustering - 4 Clusters - Health Plot\n* The Rich Countries have high life_expec, low child_mort and high health expenditure (based on the size of the scatter points)\n* The cluster that is of interest to us for the Foundation is the cluster 2 in the centre and bottom right side of the curve - with very low life_expec, very high child_mort and very low health expenditure.\n* Haiti is an Outlier Country with a child_mort greater than 200 and a very low life expectancy as well. \n* Lesotho is next to Haiti in terms of worst life expectany.\n* Again can you plot India in the curve? - The amount spent on Health per capita is still very less. ","3f30b4cc":"### 4.4 Box plot after capping the outliers","de286eac":"### 6.2 K-means with 3 clusters","5b667b13":"**5.3.4 Observations**\n* We can see that the Silhouette score is high for cluster numbers 3 and 4 after which the score is reduced. \n* From Analysis perspective also, to provide a good recommendation dividing the countries into 3 or 4 clusters. \n* Lesser than 3 clusters will not help us make good recommendation as many countries will be lumped together\n* Having More than 4 clusters will be difficult to do the profiling based on the features ","c387e48e":"As a next step, we have to remove the outliers. As our objective is to find the Countries that are in need of financial need, we can **cap the outliers for the Countries that have higher gdpp, income, exports, imports and health**. These are essentially rich countries that will not need aid, and hence can be capped. \n\n**Capping the Outliers**:\n* The outliers are capped in the upper end for the following features - **gdpp, income, exports, imports and health**\n* The outliers on the lower end for the features - **child_mort, life_expec and total_fer** should **NOT** be capped as these are essential for our analysis   ","0e61d1e9":"## <span style=\"color:navy\"> 5. Preparing for the model building","eab538cd":"# <span style=\"color:navy\"> HELP International - Humanitarian NGO \n#### <span style=\"color:navy\"> Clustering case study to identify the countries in need of Financial aid","493d9208":"### 10.8 Final List of Recommended Countries: Hierarchical Clustering\n\n**The list of 10 Countries recommended for financial id by Hierarchical clustering after ranking are:**\n\n**<span style=\"color:blue\">'Haiti', 'Sierra Leone', 'Chad', 'Central African Republic', 'Mali',\n       'Nigeria', 'Congo, Dem. Rep.', 'Lesotho', 'Burundi', 'Liberia'**","f5a8514c":"We can define a function to plot the scatter plot of countries based on child_mort, income, gdpp and life_expec\n* child_mort is along the x_axis\n* income is along the y_axis\n* The size of the scatter point is based on the gdpp (higher the gdpp, bigger are the points)\n* The color of the scatter point is based on the life_expec (higher the life_expec, lighter the shade)","cb5e47bb":"#### 7.1.1 Observations from Snake plot - 4 clusters \n\nThe observations from the snake plot are very clear - \n\n* Developed Countries have high exports, imports, health, gdpp, income and life expectancy\n  This includes the rich and very rich countries (clusters 1 and 3)\n* Developing Countries have low exports, imports, health, gdpp and income. But what is different from the poor countries    is that the Developing countries have lower child mortality rate, and total fertility and higher life expectancy compared to the poor countries\n* Under Developed or poor countries have very low exports, imports, health, gdpp, income and life_expectancy.\n* For the under developed countries, the child_mort is proportionalto the total_fer\n    This clearly indicates that the survival rate of the children under 5 years of age is greatly affected by the total children birthed by the mother. Providing affordable contraceptives could help in tackling this issue. ","e8e375a9":"### 1.2 Data Inspection","4581885e":"Notes: The following dataframes were used for the analysis and visualizations:\n* df - original dataframe\n* df_capped - copy of df with the upper outliers capped\n* df_scaled - copy of df_capped normalized using StandardScaler\n* df_cap_kmeans3 - copy of df_capped with labels added from KMeans clusering with 3 clusters\n* df_cap_kmeans4 - copy of df_capped with labels added from KMeans clusering with 4 clusters\n* df_sp - copy of df_scaled with labels added for snake plots\n* df_aid - origial dataframe with labels copied from k means with 4 clusters for plotting countries in need of aid\n* df_capped1 - Original dataframe capped at both upper and lower ends for imports, exports, health, income, inflation and gdpp columns\n* df_scaled1 - copy of the df_capped1 dataset normalized using StandardScaler\n* df_cap_hier3 - copy of df_capped1 with labels added from Hierarchical clusering with 3 clusters\n* df_cap_hier4 - copy of df_capped1 with labels added from Hierarchical clusering with 4 clusters\n* df_final - Final dataframe with only the final list of countries recommended","6193aab8":"**5.3.1 Elbow criterion method - Visual method**\n* Plot the number of clusters against within-cluster sum-of-squared-errors (SSE)\n* Sum of squared distances from every data point to their cluster center\n* Identify an \"elbow\" in the plot (Elbow - a point representing an \"optimal\" number of clusters)","110c4b51":"## <span style=\"color:navy\"> 3. Visualising the Data\n\nThe next step is to visualise the data using `matplotlib` and `seaborn`.\n\nThis is one of the most important step - **understanding the data**. This step will help us understand the properties of data. \n- Helps to identify any outliers. \n- If there is some obvious multicollinearity going on, this can be identified here. \n- Here's where we can also identify if some predictors directly have a strong association with the outcome variable","1cc2f8d0":"### 5.1 Rescaling the dataset ","06d1cdaf":"## <span style=\"color:navy\"> 9. Recommended list of Countries in need of aid - KMeans Clustering\n    \nFrom the analysis in section 7 and 8, we can conclude that the **Countries which are in dire need of financial aid are\nfrom cluster 2**  \n    \n**For the final list of recommended countries, we will get the data based on original dataset and not the scaled dataset**","3f44c730":"### 6.3 K-means with 4 clusters","a3071e79":"#### 8.1.1 Observations from the Summary Analysis (Mean)\nWe can make the follwing observations from the Mean summary analysis above:\n* For the cluster of interest - Cluster 2 (Poor Countries), we can see that \n    * gdpp, income and life_expec are very less\n    * child_mort, total_infer and inflation are very high  ","73eb042a":"### 10.2  Plot Hierarchical Clustering Dendrogram - Single linkage","6a36a852":"### 3.3 Scatter plot to see the distribution of the Countries","b6859a8f":"**5.3.2 Silhouette coefficient - Statistical method**\n\n$$\\text{silhouette score}=\\frac{p-q}{max(p,q)}$$\n\n$p$ is the mean distance to the points in the nearest cluster that the data point is not a part of\n$q$ is the mean intra-cluster distance to all the points in its own cluster.\n\n* The value of the silhouette score range lies between -1 to 1. \n* A score closer to 1 indicates that the data point is very similar to other data points in the cluster, \n* A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","35bce2b1":"### 10.3  Plot Hierarchical Clustering Dendrogram - Complete linkage","412c7c62":"### 10.6 Relative Importance plots to analyse segments"}}