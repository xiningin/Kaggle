{"cell_type":{"b3f08ac4":"code","98a7580b":"code","0ccffc36":"code","4dc4e116":"code","a8977e2a":"code","bca6039f":"code","e92decaa":"code","7d2cd2b5":"code","19de2172":"code","1bf886ad":"code","f8efb958":"code","da827317":"code","ed72903c":"code","47564ec7":"code","78cd0668":"markdown","b8ab4747":"markdown","6741f19b":"markdown","fdabdb32":"markdown"},"source":{"b3f08ac4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","98a7580b":"!pip install jieba","0ccffc36":"import jieba\nimport re\n\ndef remove_emoji(text):\n    emoji_pattern = re.compile(\"[\"\n        u\"\\U0001F600-\\U0001F64F\"  # emoticons\n        u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n        u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n        u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           \"]+\", flags=re.UNICODE)\n\n    return emoji_pattern.sub(r'', text)","4dc4e116":"with open(\"train_tcn_cut.txt\", \"w\") as text_file:\n    for line in open(r'\/kaggle\/input\/shopee-product-title-translation-open\/train_tcn.csv', encoding=\"utf-8\"):\n        product_title = line.rsplit(',', 1)[0]\n        sentence = remove_emoji(product_title).replace('\\\\n',' ')\n        sentence = re.sub('[!@#$]', '', sentence)\n\n        words = jieba.cut(sentence, cut_all=False)\n        print(' '.join(x for x in words), file=text_file)","a8977e2a":"!pip install fasttext","bca6039f":"import fasttext\ndim = 300","e92decaa":"model = fasttext.train_unsupervised('\/kaggle\/working\/train_tcn_cut.txt',dim=dim)","7d2cd2b5":"model.words[:20]","19de2172":"with open(\"shopee_tcn.vec\", \"w\") as text_file:\n    print(f'{len(model.words)} {dim}', file=text_file)\n    for w in model.words:\n        stri = model.get_word_vector(w)\n        vec_str = ' '.join(str(x) for x in stri)\n        print(f\"{w} {vec_str}\", file=text_file)","1bf886ad":"with open(\"train_en_cut.txt\", \"w\") as text_file:\n    for line in open(r'\/kaggle\/input\/shopee-product-title-translation-open\/train_en.csv', encoding=\"utf-8\"):\n        product_title = line.rsplit(',', 1)[0]\n        sentence = remove_emoji(product_title).replace('\\\\n',' ')\n        print(sentence, file=text_file)","f8efb958":"model = fasttext.train_unsupervised('\/kaggle\/working\/train_en_cut.txt',dim=dim)","da827317":"model.words[:20]","ed72903c":"model.get_word_vector(model.words[0]).shape","47564ec7":"with open(\"shopee_eng.vec\", \"w\") as text_file:\n    print(f'{len(model.words)} {dim}', file=text_file)\n    for w in model.words:\n        stri = model.get_word_vector(w)\n        vec_str = ' '.join(str(x) for x in stri)\n        print(f\"{w} {vec_str}\", file=text_file)\n    ","78cd0668":"# Build monolingual with fastText","b8ab4747":"## for Chinese","6741f19b":"## for English","fdabdb32":"# Cut Chinese sentences with Jieba"}}