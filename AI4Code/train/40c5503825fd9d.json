{"cell_type":{"194e8880":"code","5c5ef568":"code","7ec79821":"code","b2ac70b2":"code","abdc92b8":"code","0988a45d":"code","09d799ea":"code","a119dc31":"code","60640efe":"code","2474fc55":"code","2e751c5b":"code","3a488b22":"code","8df407e5":"code","45e53622":"code","fc52c920":"code","c77b1247":"code","e5bc5340":"code","e0a9ab01":"code","47f19f4c":"code","2834f08e":"code","c3aded00":"code","65c89cfa":"code","3ef0fc59":"code","9ad19079":"code","25ece663":"code","5321a15c":"code","76abebb2":"code","6bfc4111":"markdown","e6318104":"markdown","657d1187":"markdown","c7c77c77":"markdown","c779b0b0":"markdown","9b1a4ba5":"markdown","e550496d":"markdown","5870f336":"markdown","788bcb01":"markdown","882abab7":"markdown","5c0bd139":"markdown","ae51de13":"markdown","572dc1a6":"markdown","caedf0a0":"markdown","fe2de4a3":"markdown","f2042970":"markdown","6945ae21":"markdown","584d98db":"markdown","928957d8":"markdown","9f857cf4":"markdown"},"source":{"194e8880":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        os.path.join(dirname, filename)","5c5ef568":"import os\nfrom tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob\nimport matplotlib.pyplot as plt","7ec79821":"IMAGE_SIZE = [224, 224]\n\ntrain_path = \"\/kaggle\/input\/waste-classification-data\/DATASET\/TRAIN\/\"\nvalid_path = \"\/kaggle\/input\/waste-classification-data\/DATASET\/TEST\/\"","b2ac70b2":"# Import the Resnet50 architecture\nresnet = ResNet50(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)","abdc92b8":"for layer in resnet.layers:\n    layer.trainable = False","0988a45d":"folders = glob('\/kaggle\/input\/waste-classification-data\/DATASET\/TRAIN\/*')","09d799ea":"x = Flatten()(resnet.output)","a119dc31":"prediction = Dense(len(folders), activation='softmax')(x)\n\nmodel = Model(inputs=resnet.input, outputs=prediction)","60640efe":"model.summary()","2474fc55":"model.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)","2e751c5b":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","3a488b22":"training_set = train_datagen.flow_from_directory('\/kaggle\/input\/waste-classification-data\/DATASET\/TRAIN',\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","8df407e5":"test_set = test_datagen.flow_from_directory('\/kaggle\/input\/waste-classification-data\/DATASET\/TEST',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","45e53622":"from tensorflow.keras.callbacks import ModelCheckpoint\nMODEL_DIR = \"\/kaggle\/input\/waste-classification-data\"\n\nif not os.path.exists(MODEL_DIR):  #If the directory does not exist, create it.\n    os.makedirs(MODEL_DIR)\ncheckpoint = ModelCheckpoint(filepath=os.path.join(MODEL_DIR, \"model-{epoch:02d}.h5\"), save_best_only=True) ","fc52c920":"#fit the model\nr = model.fit_generator(\n  training_set,\n  validation_data=test_set,\n  epochs=20,\n  steps_per_epoch=len(training_set),\n  validation_steps=len(test_set)\n)","c77b1247":"# loss\nplt.plot(r.history['loss'], label='train loss')\nplt.plot(r.history['val_loss'], label='val loss')\nplt.legend()\nplt.show()\n#plt.savefig('LossVal_loss_eff')\n\n# accuracy\nplt.plot(r.history['accuracy'], label='train acc')\nplt.plot(r.history['val_accuracy'], label='val acc')\nplt.legend()\nplt.show()\n#plt.savefig('AccVal_acc_eff')","e5bc5340":"from keras.models import Sequential \nfrom keras.layers import Conv2D, MaxPooling2D, Activation, Dropout, Flatten, Dense, BatchNormalization\nfrom keras.preprocessing.image import ImageDataGenerator, img_to_array, load_img\nfrom keras.utils.vis_utils import plot_model\nfrom glob import glob\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nimport cv2\n","e0a9ab01":"from tensorflow.keras.models import load_model\n\nmodel.save('resnet.h5')","47f19f4c":"y_pred = model.predict(test_set)\ny_pred","2834f08e":"import numpy as np\ny_pred = np.argmax(y_pred, axis=1)","c3aded00":"from tensorflow.keras.models import load_model\nfrom tensorflow.keras.preprocessing import image","65c89cfa":"model=load_model('resnet.h5')","3ef0fc59":"# test data to check model and predict \nimg = image.load_img('..\/input\/waste-classification-data\/DATASET\/TEST\/O\/O_12577.jpg', target_size = (224, 224))","9ad19079":"img = image.img_to_array(img)\nimg = np.expand_dims(img, axis = 0)\nresult = model.predict(img)","25ece663":"training_set.class_indices","5321a15c":"if result[0][0] == 1:\n    prediction = 'Recyclable'\nelse:\n    prediction = 'Organic'","76abebb2":"prediction","6bfc4111":"<p style=\"background-color:#CABFC1;font-family:newtimeroman;font-size:200%;text-align:left;\"> \ud83d\udcccThis notebook is beginner friendly and contains an end to end deployed project.\n<\/p>\n\n*  **https:\/\/github.com\/raj-gupta1\/Automatic-Waste-Classification-using-Deep-Learning-ResNet50-architecture** \n\n* **Architecture used**<br>\n    1. ResNet50\n    2. No. of classes: 2\n    3. Classes: Organic and Recyclable waste\n    <br><br>","e6318104":"# Loading the model to do predictions","657d1187":" \n# <a id=\"1\"><\/a> <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">ResNet50 Transfer Learning Model creation<\/p>","c7c77c77":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Fitting the model<\/p>\n","c779b0b0":"<p style=\"background-color:#CABFC1;font-family:newtimeroman;font-size:200%;text-align:left;\"> \ud83d\udcccTools for project deployment.\n<\/p>\n\n* **Libraries used**<br>\n    1. Flask==1.1.2\n    2. numpy==1.18.4\n    3. tensorflow==2.2.0\n    4. Werkzeug==1.0.1\n    <br><br>\n\n* **Tools used**<br>\n    1. Pycharm\n    2. Google Colab\n    3. git\n    <br><br>","9b1a4ba5":"# Checking the Predictions using validation dataset","e550496d":"# Enter Image size and shape (preferrably use the image shape based upon the paper you are using.)","5870f336":"\n<img src=\"https:\/\/i.ibb.co\/bdWGLcj\/Screenshot-2021-12-14-232222.png\"> \n<img src=\"https:\/\/i.ibb.co\/C1CWmzL\/Screenshot-2021-12-14-232416.png\">  ","788bcb01":"# Training the model on 20 epochs","882abab7":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Creating testing dataset<\/p>\n","5c0bd139":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Splitting the data into train and validate<\/p>\n","ae51de13":"# Finding the number of classes","572dc1a6":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Saving the model<\/p>\n","caedf0a0":"<a id=\"1\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Importing the library<\/p>","fe2de4a3":"# Creating a model checkpoint","f2042970":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Creating training dataset<\/p>\n","6945ae21":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Data Augumentation<\/p>\n","584d98db":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:250%;text-align:center;border-radius:40px 40px;\">Keep Learning and Keep Upvoting\n<\/p>","928957d8":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:250%;text-align:center;border-radius:40px 40px;\">\u267b\ufe0fWaste classification(ResNet50)\u267b\ufe0f<\/p>","9f857cf4":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#615154;font-family:newtimeroman;color:#CABFC1;font-size:150%;text-align:center;border-radius:40px 40px;\">Predicting the model<\/p>\n"}}