{"cell_type":{"3aca84e7":"code","61ccd518":"code","92a35092":"code","78d1d5fa":"code","996eb968":"code","35d6bd88":"code","c6e0f3aa":"code","27779e68":"code","dd5053b0":"code","0cf80674":"code","75cdcecf":"code","0ec1e9ca":"code","05487671":"code","10d4bc31":"code","476a9969":"code","0f8c0cbb":"code","710d83a0":"code","b25746db":"code","96ff5433":"code","7260a3c6":"code","0804fee1":"code","85ff35f9":"code","416e5250":"code","8e6ff853":"code","96ae61fc":"code","ec285442":"code","a1c52db0":"code","101d3c9d":"code","9cc17911":"code","b6e3e81a":"code","fc75e324":"code","b4a169eb":"markdown","9b078b75":"markdown","6a97cfa6":"markdown","4f63169e":"markdown"},"source":{"3aca84e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","61ccd518":"# Veri Setini okuma\ndata = pd.read_csv(\"\/kaggle\/input\/groceries-dataset\/Groceries_dataset.csv\")","92a35092":"# verinin ilk bak\u0131\u015f\ndata.head()","78d1d5fa":"# Boyut bilgisi veri setimiz 38765 sat\u0131r ve 3 s\u00fctundan olu\u015fmaktad\u0131r\ndata.shape","996eb968":"# veri seti hakk\u0131nda bilgiler\ndata.info()","35d6bd88":"# Veri setinde eksik g\u00f6zlem olup olmad\u0131g\u0131n\u0131 kontrol etme -> Hi\u00e7 eksik g\u00f6zlem yokmu\u015f\ndata.isnull().values.any()","c6e0f3aa":"# Veri setine yeni sutun ekleme\ndata[\"Date\"] = data[\"Date\"].apply(pd.to_datetime)\ndata[\"day\"] = data.Date.dt.dayofweek\ndata[\"day_name\"] = data.Date.dt.day_name()\ndata[\"weekday\"] = np.where(data[\"day\"].isin([5,6]), 1,0)","27779e68":"data.head(10)","dd5053b0":"# 728 benzersiz tarih var veri setimizde\nlen(data.Date.unique())","0cf80674":"# Veri setimizde 3898 tane \u00fcyemiz varm\u0131\u015f\nlen(data[\"Member_number\"].unique())","75cdcecf":"# veri setinde toplamda 167 \u00e7e\u015fit \u00fcr\u00fcn var\nlen(data[\"itemDescription\"].unique())","0ec1e9ca":"# hangi g\u00fcn toplam ne kadar i\u015f oldu\u011funu bulma\ngunluk_satis = data.groupby([\"day_name\"])[\"itemDescription\"].agg([\"count\"]).reset_index()\ngunluk_satis.sort_values(\"day_name\",ascending = True)","05487671":"plt.figure(figsize = (12,8))\nsns.barplot(x =\"day_name\", y =\"count\",data = gunluk_satis,color = \"Blue\",label = \"count\")\nplt.xlabel(\"G\u00fcnler\")\nplt.ylabel(\"Adet\")\nplt.title(\"G\u00fcnlere g\u00f6re Sat\u0131\u015f\")\nplt.xticks(rotation = 60)\nplt.legend()\nplt.show()","10d4bc31":"# Haftai\u00e7i ve haftasonu sat\u0131\u015f miktarlar\u0131\ndata.groupby([\"weekday\"])[\"itemDescription\"].agg([\"count\"])","476a9969":"# Haftai\u00e7i ve Haftasonuna g\u00f6re yap\u0131lan sat\u0131\u015flar\u0131n toplam\u0131\ndata.groupby([\"weekday\"])[\"itemDescription\"].agg([\"count\"]).plot(figsize=(12,5),kind = \"bar\",color = \"red\")\nplt.title(\"Haftai\u00e7i ve Haftasonuna  G\u00f6re Sat\u0131lan Toplam \u00dcr\u00fcn Say\u0131s\u0131\")\nplt.xlabel(\"Haftai\u00e7i-Haftasonu\")\nplt.ylabel(\"Sat\u0131lan Toplam \u00dcr\u00fcn Say\u0131s\u0131\")\nplt.show()","0f8c0cbb":"# Tarihe G\u00f6re Sat\u0131lan Toplam \u00dcr\u00fcn say\u0131s\u0131\ntarih_satis = data.groupby([\"Date\"])[\"itemDescription\"].agg([\"count\"]).reset_index()\ntarih_satis","710d83a0":"plt.figure(figsize= (12,5))\nsns.lineplot(x=\"Date\", y=\"count\", data=tarih_satis)\nplt.xticks(rotation=60)\nplt.grid()\nplt.xlabel(\"Tarih\")\nplt.ylabel(\"Adet\")\nplt.title(\"Tarihe G\u00f6re Sat\u0131\u015flar\")\nplt.show()","b25746db":"tarih_satis = tarih_satis.sort_values(by=\"count\",ascending=False)\ntarih_satis[0:10]","96ff5433":"# Veri setimizde her bir \u00fcr\u00fcn\u00fcn frekans\u0131 \ndata[\"itemDescription\"].value_counts()","7260a3c6":"# \u00dcr\u00fcnlerin Frekanslar\u0131\nplt.figure(figsize = (30,10))\nplt.grid()\nsns.barplot(x = data.itemDescription.value_counts().keys(),y = data.itemDescription.value_counts().values,color=\"Blue\")\nplt.title(\"Her Bir \u00dcr\u00fcn\u00fcn Veri Setindeki Frekans Say\u0131s\u0131\")\nplt.xlabel(\"\u00dcr\u00fcnler\")\nplt.ylabel(\"Frekans\")\nplt.xticks(rotation=90)\nplt.show()","0804fee1":"apriori_data = data.groupby([\"Member_number\",\"Date\"])[\"itemDescription\"].unique()\napriori_data","85ff35f9":"transactions_encoder = TransactionEncoder()\ntransactions_encoder_array = transactions_encoder.fit(apriori_data).transform(apriori_data)\ntransactions = pd.DataFrame(transactions_encoder_array, columns=transactions_encoder.columns_)","416e5250":"transactions_encoder_array","8e6ff853":"transactions_encoder.columns_","96ae61fc":"transactions","ec285442":"# Veri setindeki \u00fcr\u00fcnlerin support de\u011ferlerinin hesaplanmas\u0131 support de\u011feri 0.003 ten k\u00fc\u00e7\u00fck olanlar\u0131 almaz\nitems = apriori(transactions, min_support=0.003, use_colnames=True, verbose=1)\na = items.sort_values(\"support\",ascending = False)\na.head(10)","a1c52db0":"rules = association_rules(items, metric=\"confidence\", min_threshold=0.001)\nrules.head()","101d3c9d":"sns.heatmap(rules.corr(),annot = True,linewidths=2,linecolor = \"red\", fmt = '.1f')\nplt.show()","9cc17911":"rules.sort_values('confidence', ascending = False, inplace=True)\nrules.head(10)","b6e3e81a":"rules.sort_values('lift', ascending = False, inplace=True)\nrules.head(10)","fc75e324":"rules.sort_values('support', ascending = False, inplace=True)\nrules.head(10)","b4a169eb":"# Visualization","9b078b75":"# Apriori","6a97cfa6":"Not -> Yukar\u0131daki sat\u0131rda bir \u00fcyenin hangi tarihte neler alm\u0131\u015f onlar\u0131 ayr\u0131 ayr\u0131 sat\u0131rlarda tutmak yerine bir m\u00fc\u015fterinin ayn\u0131 tarihte ald\u0131\u011f\u0131 \u00fcr\u00fcnleri toplam olarak \ntek bir sat\u0131rda tuttuk.Bir m\u00fc\u015fteri ayn\u0131 g\u00fcn i\u00e7erisinde iki veya daha fazla kez al\u0131\u015fveri\u015fe gelmi\u015f olabilir ama biz bunu g\u00f6z ard\u0131 edip tek bir al\u0131\u015fveri\u015fmi\u015f gibi d\u00fc\u015f\u00fcn\u00fcp\ntopluca tek sat\u0131rda g\u00f6sterdik.","4f63169e":"yukar\u0131daki i\u015flemde Date sutunun tipini datetime \u00e7evirdik ve daha sonra veri setinde iki tane sutun ekledik.Birinci s\u00fctun day s\u00fctunu ikincisi ise g\u00fcn\u00fcn haftai\u00e7i veya haftasonuna denk geldi\u011fini bulan sutun"}}