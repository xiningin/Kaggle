{"cell_type":{"45aba54f":"code","00bc265f":"code","7d08fd11":"code","5e50c3a9":"code","3ceb89b4":"code","750b58b8":"code","1af7f9b9":"code","aac5005a":"code","1db8b8d1":"code","9919d109":"code","b454405b":"code","83684fb0":"code","14ffba1e":"code","abe34dab":"code","41811fcb":"code","cc175027":"code","0ad9d178":"code","afb51309":"code","abaf978a":"code","8996b9f2":"code","8d2b53d7":"markdown","06e8f0db":"markdown","679ed382":"markdown","e06c1c80":"markdown","e8e02134":"markdown","4fd77251":"markdown","3be79f2c":"markdown","b9f5a71d":"markdown","3392bcf2":"markdown","a6637fb4":"markdown","738b549e":"markdown","d17b7cc0":"markdown","38fd2027":"markdown","221a623e":"markdown","5f2e36e5":"markdown","c94be4f2":"markdown","4896f651":"markdown","d33e2718":"markdown","0fb9e807":"markdown","0e7d3bc5":"markdown","d5341dee":"markdown","4e30ba96":"markdown","13a2a9a7":"markdown"},"source":{"45aba54f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","00bc265f":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndata.head(1).T","7d08fd11":"data.shape","5e50c3a9":"data.diagnosis.value_counts()","3ceb89b4":"data.dtypes.value_counts()","750b58b8":"[col for col in data.select_dtypes(include = 'object')]","1af7f9b9":"data.columns[data.isnull().any()]","aac5005a":"data['Unnamed: 32']","1db8b8d1":"data.drop('Unnamed: 32', axis = 1, inplace = True)\ndata.drop('id', axis=1,inplace = True)\ndata.columns","9919d109":"data.duplicated().any()","b454405b":"num_cols = [col for col in data.select_dtypes(exclude = 'object').columns]\nprint(num_cols)","83684fb0":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\n\ndata[num_cols] = scaler.fit_transform(data[num_cols])\n\ndata.head()","14ffba1e":"dummies = pd.get_dummies(data['diagnosis'], drop_first = True)\nprint(dummies.shape)\ndummies.head(2)","abe34dab":"data = pd.concat([data,dummies], axis=1)\n\ndata.drop('diagnosis', axis = 1, inplace = True)\ndata.head()","41811fcb":"data.M.value_counts()","cc175027":"data.rename(columns={\"M\": \"target\"}, inplace = True)\ndata.head(2)","0ad9d178":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","afb51309":"corr = data.corr(method = 'pearson')\nf, ax = plt.subplots(figsize=(11, 9))\ncmap = sns.diverging_palette(10, 275, as_cmap=True)\n\nsns.heatmap(corr, cmap=cmap, square=True,\n            linewidths=0.5, cbar_kws={\"shrink\": 0.5}, ax=ax)\nplt.show()","abaf978a":"#drop those related features\ndrop_features = ['perimeter_mean','radius_mean','compactness_mean','concave points_mean','radius_se',\n              'perimeter_se','radius_worst','perimeter_worst','compactness_worst','concave points_worst',\n              'compactness_se','concave points_se','texture_worst','area_worst']\ndata.drop(drop_features, axis = 1, inplace = True)","8996b9f2":"data.head()","8d2b53d7":"## Using MinMaxScaling method from sklearn that has values ranging from 0 to 1","06e8f0db":"## Thus, we have gone through the dataset and done all the necessary Data Preprocessing required","679ed382":"thus, we see that there are two instances of breast cancer that can be found in the dataset :\n<ol>\n    <li><strong>Benign<\/strong> : 357<\/li>\n    <li><strong>Malignant<\/strong> : 212<\/li>\n<\/ol>","e06c1c80":"# Data Scaling","e8e02134":"thus, there are 32 numerical attributes and 1 categorical attribute","4fd77251":"# Creating Dummy Variable for ['diagnosis'] as it is object type","3be79f2c":"# Finding the number of Attributes","b9f5a71d":"thus, there are no duplicate rows in the dataset.","3392bcf2":"## Dropping highly related features and keeping one of them","a6637fb4":"here, we found all those features that have int\/float datatype","738b549e":"## Finding the Attributes that have object\/string dtype","d17b7cc0":"the dataset contains 569 columns and 33 rows.","38fd2027":"# Checking for Missing Values","221a623e":"# Data Visualization","5f2e36e5":"here, 1 represents <strong>malignant<\/strong> and 0 represents <strong>benign<\/strong><br>\nsince, it is also the target variable, let us rename 'M' as 'target'","c94be4f2":"we can go ahead and drop this column as it in not related to the dataset at all, there are no other column that having missing data other than this","4896f651":"# Dropping irrelevant columns","d33e2718":"Some features show strong correlation with each other. In order to reduce the dimensions, some features are dropped. For features radius, perimeter and area, I choose area. For concavity, concave point and compatiness, I choose concavity. For [texture_worst, texture_mean] and [area_worst, area_mean], I choose texture_mean and texture_mean. Therefore, 17 features are left.","0fb9e807":"# Loading the Breast Cancer Dataset from Kaggle","0e7d3bc5":"# Checking Duplicate rows","d5341dee":"thus, diagnosis is the only categorical column","4e30ba96":"## Plotting the Correlation Heatmap","13a2a9a7":"# Finding the number of Instances of Target Variable"}}