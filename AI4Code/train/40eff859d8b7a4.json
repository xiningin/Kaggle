{"cell_type":{"d32f85d9":"code","8996ba1e":"code","ea95a96a":"code","15d102d3":"code","fd150ced":"code","6c7e4332":"code","49a4057c":"code","b0ed3bfa":"code","ad2e02f6":"code","ce1e5a0f":"code","82d1b945":"code","b316d398":"code","64d760b2":"code","014aa235":"code","d39c4e1e":"code","735c5225":"code","2c320723":"code","7973d98c":"code","617f60f4":"code","dae4c1b3":"code","8b6c3b91":"code","50a4bb9c":"code","3f577720":"code","45702713":"code","a0356296":"code","57146d59":"code","2d99a5e0":"code","07ea12b8":"code","1213cf86":"code","ca9289c1":"code","9f891bfe":"code","efab3c39":"code","b82c8bfb":"code","4fee44cd":"code","01bb739e":"code","8b416fcc":"code","d542683b":"code","227fe999":"code","e4fdc17b":"code","38db6a99":"code","9106319c":"code","209ffc8a":"code","510ff512":"code","01cb8f92":"code","a19a44a2":"code","beb29781":"code","5dc95750":"code","a6b84391":"code","3f47e3aa":"code","067b3843":"code","cf2e4b67":"code","56ea7d56":"code","efd03582":"code","1ba3a348":"code","280ff69a":"code","d14a7914":"code","712e7e5b":"code","d907c4d0":"code","d518b0d8":"code","14de6748":"code","6694c332":"code","e6e0dae6":"code","6bb8a1be":"code","163ab2f3":"code","e71ecac7":"markdown"},"source":{"d32f85d9":"import pandas as pd\nbank=pd.read_csv(\"..\/input\/cusersmarildownloadsgermancsv\/german.csv\",sep=';' )\nbank.head()","8996ba1e":"bank.info()","ea95a96a":"bank.Account_Balance.value_counts()*100 \/ len(bank)","15d102d3":"bank=bank.replace({'Account_Balance' : { 1 : 'No Account', 2 : 'None',3: 'Below 200 DM',4:'200 DM or Above'}})\nbank.Account_Balance.value_counts()*100 \/ len(bank)","fd150ced":"bank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","6c7e4332":"bank=bank.replace({'Payment_Status_of_Previous_Credit' : {0:'Delayed',1 : 'Other Credits', 2 : 'Paid Up',\n                                                          3: 'No Problem with Current Credits',4:'Previous Credits Paid'}})\nbank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","49a4057c":"bank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","b0ed3bfa":"bank=bank.replace({'Value_Savings_Stocks' : {1 : 'None', 2 : 'Below 100 DM',\n                                                          3: '[100, 500)',4:'[500, 1000)',5:'Above 1000'}})\nbank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","ad2e02f6":"bank.Length_of_current_employment.value_counts()*100 \/ len(bank)","ce1e5a0f":"bank=bank.replace({'Length_of_current_employment' : {1 : 'Unemployed', 2 : '<1 Year',\n                                                          3: '[1, 4)',4:'[4, 7)',5:'Above 7'}})\nbank.Length_of_current_employment.value_counts()*100 \/ len(bank)","82d1b945":"bank.Instalment_per_cent.value_counts()*100 \/ len(bank)","b316d398":"bank=bank.replace({'Instalment_per_cent' : {1 : 'Above 35%', 2 : '(25%, 35%)',\n                                                          3: '[20%, 25%)',4:'Below 20%'}})\nbank.Instalment_per_cent.value_counts()*100 \/ len(bank)","64d760b2":"bank.Occupation.value_counts()*100 \/ len(bank)","014aa235":"bank=bank.replace({'Occupation' : {1 : 'Unemployed, unskilled', 2 : 'Unskilled Permanent Resident',\n                                                          3: 'Skilled',4:'Executive'}})\nbank.Occupation.value_counts()*100 \/ len(bank)","d39c4e1e":"bank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","735c5225":"bank=bank.replace({'Sex_Marital_Status' : {1 : 'Male, Divorced', 2 : 'Male, Single',\n                                                          3: 'Male, Married\/Widowed',4:'Female'}})\nbank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","2c320723":"bank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","7973d98c":"bank=bank.replace({'Duration_in_Current_address' : {1 : '<1 Year', 2 : '[1, 4)',\n                                                          3: '[4, 7)',4:'Above 7'}})\nbank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","617f60f4":"bank.Type_of_apartment.value_counts()*100 \/ len(bank)","dae4c1b3":"bank=bank.replace({'Type_of_apartment' : {1 : 'Free', 2 : 'Rented',\n                                                          3: 'Owned'}})\nbank.Type_of_apartment.value_counts()*100 \/ len(bank)","8b6c3b91":"bank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","50a4bb9c":"bank=bank.replace({'Most_valuable_available_asset' : {1 : 'None', 2 : 'Car',\n                                                          3: 'Life Insurance',4:'Real Estate'}})\nbank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","3f577720":"bank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","45702713":"bank=bank.replace({'No_of_Credits_at_this_Bank' : {1 : '1', 2 : '2 or 3',\n                                                          3: '4 or 5',4:'Above 6'}})\nbank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","a0356296":"bank.Guarantors.value_counts()*100 \/ len(bank)","57146d59":"bank=bank.replace({'Guarantors' : {1 : 'None', 2 : 'Co-applicant',\n                                                          3: 'Guarantor'}})\nbank.Guarantors.value_counts()*100 \/ len(bank)","2d99a5e0":"bank.Concurrent_Credits.value_counts()*100 \/ len(bank)","07ea12b8":"bank=bank.replace({'Concurrent_Credits' : {1 : 'Other Banks', 2 : 'Dept. Store',\n                                                          3: 'None'}})\nbank.Concurrent_Credits.value_counts()*100 \/ len(bank)","1213cf86":"bank.No_of_dependents.value_counts()*100 \/ len(bank)","ca9289c1":"bank=bank.replace({'No_of_dependents' : {1 : '3 or More', 2 : 'Less than 3'}})\nbank.No_of_dependents.value_counts()*100 \/ len(bank)","9f891bfe":"bank.Telephone.value_counts()*100 \/ len(bank)","efab3c39":"bank=bank.replace({'Telephone' : {1 : 'No', 2 : 'Yes'}})\nbank.Telephone.value_counts()*100 \/ len(bank)","b82c8bfb":"bank.Foreign_Worker.value_counts()*100 \/ len(bank)","4fee44cd":"bank=bank.replace({'Foreign_Worker' : {1 : 'No', 2 : 'Yes'}})\nbank.Foreign_Worker.value_counts()*100 \/ len(bank)","01bb739e":"bank.Purpose.value_counts()*100 \/ len(bank)","8b416fcc":"bank=bank.replace({'Purpose' : {0:'Other',1 : 'New Car', 2 : 'Used Car',\n                               3:'Furniture',4:'Radio\/TV',5:'Appliances',\n                               6:'Repair',8:'Vacation',9:'Retraining',10:'Business'}})\nbank.Purpose.value_counts()*100 \/ len(bank)","d542683b":"bank.info()","227fe999":"bank.nunique()","e4fdc17b":"!pip install pandas-profiling","38db6a99":"from pandas_profiling import ProfileReport\nProfileReport(bank, title=\"EDA Report\")","9106319c":"data = bank.sample(frac=0.95, random_state=42)\ndata_unseen = bank.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","209ffc8a":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","510ff512":"!pip install pycaret","01cb8f92":"from pycaret.classification import *","a19a44a2":"data.head()","beb29781":"def extract_cat_num(data):\n    cat_col=[col for col in data.columns if data[col].dtype=='object']\n    num_col=[col for col in data.columns if data[col].dtype!='object']\n    return cat_col,num_col\ncat_col,num_col=extract_cat_num(data)","5dc95750":"for i in cat_col:\n    print(i)\n    print(data[i].value_counts()*100\/len(data))\n    print(\" \")","a6b84391":"data[cat_col].nunique().sort_values(ascending=False)","3f47e3aa":"data.Creditability.value_counts()*100\/len(data)","067b3843":"data[num_col].nunique()","cf2e4b67":"num_col.remove('Creditability')\nnum_col","56ea7d56":"bank = setup(data = data, target = 'Creditability', \n                  normalize = True, \n                  transformation = True,\n               train_size = 0.8, # training over 80% of available data\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n            ordinal_features = {'Account_Balance':['No Account','None','Below 200 DM','200 DM or Above'],\n                               'Value_Savings_Stocks':['None','Below 100 DM','[100, 500)','[500, 1000)','Above 1000'],\n                               'Length_of_current_employment':['Unemployed','<1 Year','[1, 4)','[4, 7)','Above 7'],\n                               'Instalment_per_cent':['Below 20%','[20%, 25%)','(25%, 35%)','Above 35%'],\n                               'Occupation':['Unemployed, unskilled','Unskilled Permanent Resident','Skilled','Executive'],\n                                'No_of_Credits_at_this_Bank':['1','2 or 3','4 or 5','Above 6'],\n                                'No_of_dependents':['Less than 3','3 or More']\n                               },\n            fix_imbalance = True,\n            numeric_features=num_col,\n             session_id=1,)","efd03582":"best = compare_models()","1ba3a348":"lda = create_model('lda')","280ff69a":"print(lda)","d14a7914":"tuned_lda = tune_model(lda,optimize = 'Precision')","712e7e5b":"plot_model(tuned_lda, plot = 'auc')","d907c4d0":"plot_model(tuned_lda, plot = 'pr')","d518b0d8":"plot_model(tuned_lda, plot = 'confusion_matrix')","14de6748":"evaluate_model(tuned_lda)","6694c332":"predict_model(tuned_lda)","e6e0dae6":"unseen_predictions = predict_model(tuned_lda, data=data_unseen)\nunseen_predictions.head()","6bb8a1be":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","163ab2f3":"from pycaret.utils import check_metric\ncheck_metric(unseen_predictions['Creditability'], unseen_predictions['Label'], metric = 'Precision')","e71ecac7":"# Mapping of values"}}