{"cell_type":{"d3073933":"code","512761ab":"code","6d0d3dce":"code","2ec0745a":"code","090826b4":"code","8e7a0a26":"code","d45e5102":"code","2bd52e05":"code","6f06aa8f":"code","173febfa":"code","1fa447b5":"code","9b42d55c":"code","e3441ae6":"code","a8bd7929":"code","aa926036":"code","0da2b05d":"code","e03618db":"code","29a9ff58":"code","d3048751":"code","6784123c":"code","5574fc42":"code","6010f4d2":"code","27455cb0":"code","756277f1":"code","0a6c115b":"markdown","acf04a12":"markdown"},"source":{"d3073933":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","512761ab":"#Data Processing\nimport pandas as pd\nimport numpy as np\n\n#Data Visulaisation\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\n\nimport os","6d0d3dce":"files=os.listdir(r'..\/input\/corona-virus-report')\nfiles","2ec0745a":"#Function to read the data","090826b4":"def read_data(path,file):\n     return pd.read_csv(path+\"\/\"+file)\n    \npath=r'..\/input\/corona-virus-report'\nworld =read_data(path,'worldometer_data.csv')","8e7a0a26":"world.head()","d45e5102":"world.columns","2bd52e05":"# Countries with highest number of Cases","6f06aa8f":"features=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\n#tab_colors=['#03201A','#042823','#05302D','#073838','#0C4043','#13484F','#1C505B','#275868','#345F74','#426680','#516D8C','#627498','#737AA2','#8680AC','#9A86B5','#AE8BBD','#C390C4','#D995C9','#EE99CD','#000000'\n#]\n\ntab_colors=['#1D2533','#242838','#2B2B3C','#322E41','#3A3145','#423349','#4B364C','#53384F','#5C3B52','#653D54','#6E3F55','#764257','#7F4457','#874758','#904A57','#984D57','#9F5056','#A65455','#AD5853','#B35D51'\n]\n\n\nfor i in features:\n    fig=px.treemap(world.iloc[0:20],\n               values=i,\n               path=['Country\/Region'],\n               template='plotly_dark',\n               title=\"Tree Map depicting Impact of Covid-19 w.r.t {}\".format(i),\n               color_discrete_sequence=tab_colors)\n    fig.show()","173febfa":"#A quick view of the daily trends","1fa447b5":"daily_records=read_data(path,'day_wise.csv')\ndaily_records.head()","9b42d55c":"daily_records.columns","e3441ae6":"line_col=['#DDA2D2','#C53595','#2D6EAC','#409BC5']\n\npx.line(daily_records,\n       x='Date',\n       y=['Confirmed', 'Deaths', 'Recovered','Active'],\n       template='plotly_dark',\n       title='Daily trends of Covid-19 cases',\n       labels={'Date':'Month','value':'Statistics'},\n       color_discrete_sequence=line_col)","a8bd7929":"#% of Population tested in countries with highest number of cases","aa926036":"pop_test_ratio=((world['TotalTests']\/world['Population'])*100).iloc[0:20]","0da2b05d":"fig1=px.bar(world.iloc[0:20],\n      x='Country\/Region',\n      y=pop_test_ratio,\n      template='plotly_dark',\n      color='Country\/Region',\n      title='% of Population tested',\n      labels={'y':'Test to Population Ratio'},\n      text=pop_test_ratio,\n      color_discrete_sequence=['#1D2533','#242838','#2B2B3C','#322E41','#3A3145','#423349','#4B364C','#53384F','#5C3B52','#653D54','#6E3F55','#764257','#7F4457','#874758','#904A57','#984D57','#9F5056','#A65455','#AD5853','#B35D51'\n])\nfig1.update_traces(texttemplate='%{text:0.1fs%}', textposition='outside')\nfig1.update_xaxes(tickangle=270)\nfig1.show()\n","e03618db":"# Countries that are most severly affected by Covid-19","29a9ff58":"world.columns","d3048751":"bar_color=['#574C69','#825879','#AF6380','#D9707E','#FA8476'][::-1]\nfig2=px.bar(world.iloc[0:20][::-1],\n      y='Country\/Region',\n      x=['TotalCases','TotalRecovered', 'ActiveCases','TotalDeaths','Serious,Critical'],\n      template='plotly_dark',\n      title='Severly Hit Countries',\n      color_discrete_sequence=bar_color,\n      height=800)\nfig2.update_xaxes(tickangle=270)\nfig2.show()","6784123c":"px.pie(world.iloc[0:20],\n       names='Country\/Region',\n       values='TotalCases',\n       color_discrete_sequence=px.colors.sequential.Brwnyl[::-1],\n      template='plotly_dark',\n      opacity=0.8,\n      title='Distribution of Total Cases ')","5574fc42":"grouped_data=read_data(path,'full_grouped.csv')\ngrouped_data.head()","6010f4d2":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go","27455cb0":"def country_visualisations(df,country):\n    data_group=df[df['Country\/Region']==country]\n    data=data_group.loc[:,['Date','Confirmed','Deaths','Recovered','Active']]\n    figure1=make_subplots(rows=1,cols=4,subplot_titles=('Confirmed','Active','Recovered','Deaths'))\n    \n    figure1.add_trace(go.Scatter(name='Confirmed',x=data['Date'],y=data['Confirmed']),row=1,col=1)\n    \n    figure1.add_trace(go.Scatter(name='Active',x=data['Date'],y=data['Active']),row=1,col=2)\n        \n    figure1.add_trace(go.Scatter(name='Recovered',x=data['Date'],y=data['Recovered']),row=1,col=3)\n    \n    figure1.add_trace(go.Scatter(name='Deaths',x=data['Date'],y=data['Deaths']),row=1,col=4)\n    \n    figure1.update_layout(height=500,\n                         width=2000,\n                         title_text='Recorded Cases in {}'.format(country),\n                         template='plotly_dark')\n    figure1.show()","756277f1":"country_visualisations(grouped_data,'United Kingdom')","0a6c115b":"# Importing Libraries","acf04a12":"# Loading Data"}}