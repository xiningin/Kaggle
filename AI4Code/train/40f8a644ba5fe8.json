{"cell_type":{"f2ff7663":"code","44c9369c":"code","c66577b5":"code","19c43664":"code","636aed5a":"code","002e6004":"code","9e08e939":"markdown"},"source":{"f2ff7663":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","44c9369c":"df =pd.read_csv('\/kaggle\/input\/nyc-motor-vehicle-collisions-to-person\/NYC_Motor_Vehicle_Collisions_to_Person.csv')\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf['CRASH_DATE'] = pd.to_datetime(df['CRASH_DATE'])\n\ndfp= df['CRASH_DATE'].dt.month.value_counts().sort_index()\nplt.bar(dfp.index,dfp.values)\nplt.xticks(range(1,13))\nplt.xlabel('month')\nplt.ylabel('Count')\nplt.title('2021 Collisions Each Month')\nplt.show()","c66577b5":"dfp= df['CRASH_TIME'].str.split(':').str[0].astype('int').value_counts().sort_index()\nplt.bar(dfp.index,dfp.values)\n\nplt.xticks(range(0,24,6),[str(x)+\":00\" for x in range(0,24,6)])\nplt.xlabel('Hour')\nplt.ylabel('Count')\nplt.title('2021 Collisions Each Hours')\nplt.show()","19c43664":"df.PERSON_AGE.describe()","636aed5a":"import numpy as np\ndf.PERSON_AGE = df.PERSON_AGE.map(lambda x: np.nan if x <0 or x >100 else x)","002e6004":"killed = df[df.PERSON_INJURY =='Killed']\ninju   =df[~(df.PERSON_INJURY =='Killed')]\n\nplt.hist(killed.PERSON_AGE,bins=30)\nplt.title('Killed Age Histogram')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()\nplt.hist(inju.PERSON_AGE,bins=30)\nplt.title('Injured Age Histogram')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()\n","9e08e939":"## Missing age values \u200b\u200bappear to be replaced by larger or smaller values."}}