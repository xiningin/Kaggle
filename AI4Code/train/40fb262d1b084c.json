{"cell_type":{"4409f3da":"code","f9bc0296":"code","64896ec6":"code","b491808e":"code","04b4bece":"code","7d983c29":"code","bc9e66c6":"code","607a1a24":"code","4fcc6734":"code","647515ee":"code","47b6298a":"code","b5a71eb5":"code","a1693f49":"code","0fcb18c7":"code","f5c3e0d7":"code","26166464":"code","0b9070a8":"code","882c3a03":"code","aaacb6ab":"markdown"},"source":{"4409f3da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\ndf=pd.read_csv('..\/input\/jobathon-may-2021-credit-card-lead-prediction\/train.csv')","f9bc0296":"df","64896ec6":"df.describe()","b491808e":"df.info()","04b4bece":"df=df.dropna()","7d983c29":"df.info()","bc9e66c6":"import seaborn as sns","607a1a24":"sns.kdeplot(data=df,x=\"Age\")","4fcc6734":"sns.boxplot(data=df,y=\"Age\")","647515ee":"sns.kdeplot(data=df,x=\"Avg_Account_Balance\")","47b6298a":"sns.boxplot(data=df,y=\"Avg_Account_Balance\")","b5a71eb5":"sns.boxplot(data=df,y=\"Vintage\")","a1693f49":"sns.kdeplot(data=df,x=\"Vintage\")","0fcb18c7":"df.corr()","f5c3e0d7":"df.skew()","26166464":"df.tail()","0b9070a8":"df=df.drop(columns=['ID','Channel_Code','Region_Code'])","882c3a03":"x=pd.get_dummies(df[\"Gender\"])","aaacb6ab":"# Outlier Detection"}}