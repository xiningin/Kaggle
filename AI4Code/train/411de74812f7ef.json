{"cell_type":{"07919c9a":"code","93fd8031":"code","916705dc":"code","ba2befdf":"code","274cb3bd":"code","598cf897":"code","27ca0d26":"code","e6218368":"code","79504bbb":"code","35c67c69":"code","f0a387f5":"code","46c55472":"code","a8553f8f":"code","ec6565d4":"markdown","30233015":"markdown"},"source":{"07919c9a":"import gc\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np\nimport scipy as sp\nimport pandas as pd\nfrom pandas import DataFrame, Series\n\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor, RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import roc_auc_score, mean_squared_error, mean_squared_log_error, log_loss, roc_curve, confusion_matrix, plot_roc_curve\nfrom sklearn.model_selection import StratifiedKFold, GroupKFold, KFold, train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom tqdm import tqdm_notebook as tqdm\nfrom category_encoders import OrdinalEncoder\n\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\n\nimport lightgbm as lgb\nfrom lightgbm import LGBMClassifier","93fd8031":"import numpy as np\n\ndef mean_absolute_percentage_error(y_true, y_pred): \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","916705dc":"#\u6559\u5e2b\u30c7\u30fc\u30bf\u8aad\u8fbc\u3068\u539f\u59cb\u7684\u306a\u30af\u30ea\u30fc\u30f3\u30ca\u30c3\u30d7\ndf_train = pd.read_csv('..\/input\/sales-prediction-of-clothes-in-e-commerce\/train.csv', index_col=0)\ndf_train = df_train.drop([182,969,1048]) #rating_one_count\u306b\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u524a\u9664\n\n#\u6559\u5e2b\u30c7\u30fc\u30bf\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6e96\u5099\ny_train = df_train.units_sold\nX_train = df_train.drop(['units_sold'], axis=1)\nX_test = pd.read_csv('..\/input\/sales-prediction-of-clothes-in-e-commerce\/test.csv', index_col=0)","ba2befdf":"X_train = X_train[y_train.isnull()==False]\ny_train = y_train[y_train.isnull()==False]","274cb3bd":"# \u30c6\u30ad\u30b9\u30c8\u306f\u9664\u3044\u3066\u304a\u304f\u3002\nX_train.drop(['title','merchant_id'], axis=1, inplace=True) #\u2605marchant_title\u306fid\u304c\u3042\u308b\u304b\u3089\u4e0d\u8981\u306a\u7b48\u3002\nX_test.drop(['title','merchant_id'], axis=1, inplace=True)","598cf897":"#OE\u306e\u524d\u51e6\u7406\n#\u2605\u8272\u306e\u8868\u8a18\u3092\u63c3\u3048\u308b(PL\u306f\u4e0b\u304c\u3063\u3061\u3083\u3046\u3051\u3069\u3001\u672c\u8cea\u7684\u306b\u306f\u3084\u308b\u3079\u304d\u306a\u306f\u305a)\nX_train['product_color'] = X_train['product_color'].str.replace(' ','').str.replace('&','').str.lower()\nX_test['product_color'] = X_test['product_color'].str.replace(' ','').str.replace('&','').str.lower()\n#\u2605\u30bf\u30b0\u306f\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u306f\u4f7f\u308f\u306a\u3044\u3051\u3069\u7279\u5fb4\u91cf\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u308b\u3002\u30ab\u30f3\u30de\u6570\u2192\u30c0\u30e1\u3002\u9577\u3055\u2192\u6025\u6fc0\u306b\u4e0a\u6607\u3002\u602a\u3057\u3044\u3051\u3069\u4f7f\u3046\nX_train['tags'] = X_train['tags'].str.len()\nX_test['tags'] = X_test['tags'].str.len()\n\n#OE\u306e\u5b9f\u884c\nfrom category_encoders import OrdinalEncoder\ncats = []\n\nfor col in X_train.columns:\n    if X_train[col].dtype == 'object':\n        cats.append(col)\n        \noe = OrdinalEncoder(cols=cats)\n\nX_train = oe.fit_transform(X_train)\nX_test  = oe.transform(X_test)\n","27ca0d26":"cats","e6218368":"X_train.fillna(-99999, inplace=True)\nX_test.fillna(-99999, inplace=True)","79504bbb":"X_train.head()","35c67c69":"X_test.head()","f0a387f5":"%%time\n# CV\u3057\u3066\u30b9\u30b3\u30a2\u3092\u898b\u3066\u307f\u308b\n# \u306a\u304a\u3001\u305d\u3082\u305d\u3082StratifiedKFold\u304c\u9069\u5207\u306a\u306e\u304b\u306f\u5225\u9014\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\nscores = []\n\nskf = KFold(n_splits=5, random_state=71, shuffle=True)\n\n\n#################\u2605\u30cf\u30a4\u30d1\u30e9\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u2605##############\nclf = RandomForestClassifier()\n\n#################\u2605\u30cf\u30a4\u30d1\u30e9\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u2605###############\n\nfor i, (train_ix, test_ix) in enumerate(tqdm(skf.split(X_train, y_train))):\n    X_train_, y_train_ = X_train.values[train_ix], y_train.values[train_ix]\n    X_val, y_val = X_train.values[test_ix], y_train.values[test_ix]\n    \n    #clf = GradientBoostingRegressor()  #\u2605randam forest classfier\u3092\u8a66\u3057\u3066\u307f\u308b\n    #clf = RandomForestClassifier() \n    \n    clf.fit(X_train_, y_train_)\n    y_pred = clf.predict(X_val)\n    score = mean_absolute_percentage_error(y_val, y_pred)   #**0.5  \u2605\u3082\u3068\u3082\u3068\u3042\u3063\u305f\u4fc2\u6570\u5927\u4e08\u592b\u304b\uff1f \u2605\u8a08\u7b97\u5f0f\u306feval\u901a\u308a\u304b\uff1f\n    scores.append(score)\n    heikin = np.array(scores).mean()\n    \n    print('CV Score of Fold_%d is %f' % (i, score))\nprint('heikin is %f' % (heikin))\n    \n    ","46c55472":"# Fold_4\u306eactual vs pred\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u3088\u3046\nplt.figure(figsize=[7,7])\nplt.scatter(y_val, y_pred, s=5)\nplt.xlabel('y_true')\nplt.ylabel('y_pred')\nplt.show()","a8553f8f":"#\u63d0\u51fa\nclf.fit(X_train, y_train)\npre_val = clf.predict(X_test)\n\nsubmission = pd.read_csv('..\/input\/sales-prediction-of-clothes-in-e-commerce\/sample_submission.csv', index_col=0)\nsubmission.units_sold = pre_val\nsubmission.to_csv('submission.csv')\nsubmission.head()","ec6565d4":"\u30bf\u30b0\u3092\u9577\u3055\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u305f\u2192 30.853706 PL\u304c\u6025\u6fc0\u306b\u4e0a\u6607\u3057\u305f\u304c\u3001\u8a71\u3057\u304c\u3046\u307e\u3059\u304e\u308b\u3002\u8272\u306e\u8868\u8a18\u7d71\u4e00\u306e\u30c0\u30a6\u30f3\u3082\u3044\u3063\u304d\u306b\u53d6\u308a\u8fd4\u3055\u308c\u305f\u306e\u304c\u3069\u3046\u3082\u304a\u304b\u3057\u3044\u30fb\u30fb\u30fb\u304c\u9b45\u529b\u7684\n\n\u30bf\u30a4\u30c8\u30eb\u3092\u9577\u3055\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u305f \u2192 30.465747\n","30233015":"# \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u78ba\u8a8d"}}