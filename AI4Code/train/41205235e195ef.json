{"cell_type":{"1861da0f":"code","7151ab81":"code","f61664b7":"code","faed32a5":"code","955dcb93":"code","46157e10":"code","6ccc3ba5":"code","e22d5100":"code","fbce99e6":"code","12166ccc":"code","a9644a92":"code","e4435d6f":"code","0aa728c3":"code","bdc33d82":"code","87be8e5a":"code","c561991e":"code","6f4eff3c":"code","f01012aa":"code","4dbc19ed":"code","c2874966":"code","f5692eca":"code","689f14e6":"code","6e69b234":"code","4e3b2399":"code","06a7aa8f":"code","53395df9":"code","59bba1ad":"code","d87d4551":"code","b7411777":"code","c801d878":"code","735e7c06":"code","c41c1334":"code","d72bc0cc":"code","73413c6b":"code","070aa35b":"code","a63e4b74":"code","ad9b0b51":"code","91547726":"code","0ebb9634":"code","a958c303":"code","32aca75e":"code","bdb7e672":"code","66991b7c":"code","55b9e9e8":"code","f356b81a":"code","5ebbabd1":"code","33de89e6":"code","1a6a66af":"code","9d6aad22":"code","9025af69":"code","76aa94ea":"code","d30790b6":"code","e25aca4f":"code","bfbaa5b5":"code","7a04e8d5":"code","37a4d428":"code","634e5dde":"code","2b59091f":"code","814159a7":"code","4660a4cf":"code","29be4bf2":"code","78bd0324":"code","94235ba2":"code","f9c0433c":"code","4b3f8346":"code","3eb80ec1":"code","2cfcbb09":"code","1b543361":"code","73e18fc0":"code","3a74ef0d":"code","6afe324d":"code","c8bef684":"code","a6295b64":"code","c999b467":"code","6f54398e":"code","0e3fa1f0":"code","8f82b235":"code","b6f0bcac":"code","e8f6eb70":"code","b802f260":"code","f30db840":"code","1b33de5d":"code","d27f257c":"code","1d2ce147":"code","827603a4":"code","6a1a3796":"code","865a5f7e":"code","ed0e41ce":"code","33f8f53c":"code","bc7177d8":"code","73bcf5fe":"code","68af0b7b":"code","e13c2df2":"code","0963b570":"code","0eb2aa6a":"code","5740fc7f":"code","6ed528f6":"code","07dfc74d":"code","5e2f33de":"code","e1177878":"code","57578807":"code","c5292de7":"code","7b16c973":"code","feb17597":"code","5d040f95":"code","dae55ff8":"code","b69f15e6":"code","c291bb89":"code","a451f879":"code","1e7fef35":"code","718cf909":"code","26a553ac":"code","1dc6f39c":"code","756fd4c5":"code","2a680c8c":"code","28eae39c":"code","95c915ba":"code","bd72e78c":"code","934780a2":"code","7726bacf":"code","f1cc7677":"code","ecafb24f":"code","60897223":"code","69add443":"code","0f92df7f":"code","d30af64c":"code","47ec6f96":"code","475dceab":"code","107b0efb":"code","c2a7a9f0":"code","a355c4b2":"code","be1e2adb":"code","a2881018":"code","9cf38299":"code","46830e83":"code","9d7b09f6":"code","9d8dede2":"code","6ff69b35":"code","bb9c416c":"code","38869587":"markdown","f17d1f48":"markdown","f9824e95":"markdown","d2e59edb":"markdown","436c6e77":"markdown","223bee2c":"markdown","ced74f05":"markdown","605dbe26":"markdown","ffcd106c":"markdown","93f0eaac":"markdown","9123e4e5":"markdown","1968c63c":"markdown","03c45bba":"markdown","68e0c372":"markdown","4350ecd1":"markdown","e26c79da":"markdown","91ba2819":"markdown","68ab5d29":"markdown","b1ce5f3e":"markdown","5298066e":"markdown","7b5f67cd":"markdown","1819b959":"markdown","8a2e9451":"markdown","15e27005":"markdown","b1c2e835":"markdown","428295f1":"markdown"},"source":{"1861da0f":"print(\"Hello World\")","7151ab81":"v_message=\"hello world\"\nprint(\"Hi\")","f61664b7":"print(v_message)","faed32a5":"v_name=\"r\u00fcveyda\"\nv_surname=\"karaca\"\nv_fullname=v_name+v_surname\n\nprint(v_fullname)","955dcb93":"v_fullname=v_name+\" \"+v_surname\n\nprint(v_fullname)","46157e10":"#length\nv_lenFull=len(v_fullname)\n\nprint(\"v_fullname :\" ,v_fullname,\"and length is :\",v_lenFull )\n            ","6ccc3ba5":"v_titleF=v_fullname.title()\n\nprint(\"v_fullname:\",v_fullname,\"and title is:\",v_titleF)","e22d5100":"#upper:\nv_upperF=v_fullname.upper()\n#lower\nv_lowerF=v_fullname.lower()\n\nprint(\"v_fullname:\",v_fullname,\"Upper:\",v_upperF,\"Lower:\",v_lowerF)\n    ","fbce99e6":"v_2ch=v_fullname[5]\n\nprint(v_2ch)","12166ccc":"v_num1=\"100\"\nv_num2=\"200\"\nv_numSum1=v_num1+v_num2\n\nprint(v_numSum1)","a9644a92":"v_num1=100\nv_num2=200\nv_sum1=v_num1+v_num2\n\nprint(v_sum1,\"and type:\",type(v_sum1))","e4435d6f":"v_num1=v_num1+50\nv_num2=v_num2-25.5\nv_sum1=v_num1+v_num2\n\nprint(v_num1)","0aa728c3":"print(\"v_sum1:\",v_sum1,\"type:\",type(v_sum1))","bdc33d82":"v_fl1=25.5\nv_fl2=15.5\nv_s3=v_fl1+v_fl2\n\nprint(v_s3,type(v_s3))","87be8e5a":"def f_SayHello():\n    print(\"Hi.My pretty robot f_SayHello\")\ndef f_SayHello2():\n    print(\"Hi.My pretty robot f_SayHello2\")\n    print(\"Yes,it's me\")\nf_SayHello()","c561991e":"f_SayHello2()","6f4eff3c":"def f_sayMessage(v_Message1):\n    print(v_Message1,\"I'm NextGen 'f_sayMessage'\")\ndef f_getfullname(v_Name , v_Surname , v_Age):\n    print(\"Welcome \" , v_Name , \" \" , v_Surname , \" your age : \" , v_Age)","f01012aa":"f_sayMessage(\"How are you ?\")","4dbc19ed":"f_getfullname(\"R\u00dcVEYDA\",\"KARACA\",14)","c2874966":"def f_Calc1(f_Num1 , f_Num2 , f_Num3):\n    v_Result = f_Num1 + f_Num2 + f_Num3\n    print(\"Result = \" ,\" \" , v_Result)","f5692eca":"f_Calc1(30 , 40 , 50)","689f14e6":"# return function\ndef f_Calc2(v_Num1 , v_Num2 , v_Num3):\n    v_Out = v_Num1+v_Num2+v_Num3*2\n    print(\"Hi from f_Calc2\")\n    return v_Out","6e69b234":"v_gelen = f_Calc2 (2,4,3)\nprint(\"Score is :\",v_gelen )\n        ","4e3b2399":"# Default Functions :\ndef f_getSchoolInfo(v_Name,v_StudentCount,v_City = \"ISTANBUL\"):\n    print(\"Name : \" , v_Name , \" St Count : \" , v_StudentCount , \" City : \" , v_City)","06a7aa8f":"f_getSchoolInfo(\"AAIHL\" , 333)\nf_getSchoolInfo(\"KAL\" , 333 , \"KOCAEL\u0130\")","53395df9":"# Flexible Functions :\n\ndef f_Flex1(v_Name , *v_messages):\n    print(\"Hi \" , v_Name , \" your first message is : \" , v_messages[2])","59bba1ad":"f_Flex1(\"NextGen\" , \"hi\" , \"how are you\" ,\"deleting all memories\" )","d87d4551":"# Lambda Function :\n\nv_result1 = lambda x : x*4\nprint(\"Result is : \" , v_result1(33))","b7411777":"def f_alan(kenar1,kenar2):\n    print(kenar1*kenar2)","c801d878":"f_alan(5,8)","735e7c06":"l_list1 = [1,5,3,4,9,2,6,0]\nprint(l_list1)\nprint(\"Type of 'l_list1' is : \" , type(l_list1))","c41c1334":"v_list1_4 = l_list1[7]\nprint(v_list1_4)\nprint(\"Type of 'v_list1_4' is : \" , type(v_list1_4))","d72bc0cc":"l_list2 = [\"Slytherin\",\"Gryffindor\",\"Hufflepuff\",\"Ravenclaw\"]\nprint(l_list2)\nprint(\"Type of 'l_list2' is : \" , type(l_list1))\n","73413c6b":"v_list2_4 = l_list2[0]\nprint(v_list2_4)\nprint(\"Type of 'v_list2_4' is : \" , type(v_list2_4))","070aa35b":"v_list2_x3 = l_list2[-3]\nprint(v_list2_x3)","a63e4b74":"l_list2_2 = l_list2[0:2]\nprint(l_list2_2)","ad9b0b51":"#Len\nv_len_l_list2_2 = len(l_list2_2)\nprint(\"Size of 'l_list2_2' is : \",v_len_l_list2_2)\nprint(l_list2_2)","91547726":"#Append\nl_list2_2.append(\"Slytherin\")\nprint(l_list2_2)\n\nl_list2_2.append(\"Gryffindor\")\nprint(l_list2_2)","0ebb9634":"#Reverse\nl_list2_2.reverse()\nprint(l_list2_2)","a958c303":"#Sort\nl_list2_2.sort()\nprint(l_list2_2)\n","32aca75e":"#Remove\n\n#First add 'Huflepuff' then Remove 'Huflepuff'\nl_list2_2.append(\"Huflepuff\")\nprint(l_list2_2)","bdb7e672":"l_list2_2.remove(\"Slytherin\")\nprint(l_list2_2)\n                  \n","66991b7c":"d_dict1 = {\"Gryffindor\":\"Lion\" , \"Slytherin\" : \"Snake\" , \"Hufflepuff\": \"Badger\",\"Ravenclaw\":\"Eagle\"}\n\nprint(d_dict1)\nprint(type(d_dict1))","55b9e9e8":"v_school = d_dict1[\"Slytherin\"]\nprint(v_school)\nprint(type(v_school))\n          \n        ","f356b81a":"v_keys = d_dict1.keys()\nv_values = d_dict1.values()\n\n\nprint(v_keys)\nprint(type(v_keys))\n\nprint()\nprint(v_values)\nprint(type(v_values))","5ebbabd1":"v_var1 = 23.3\nv_var2 = 98.6\n\nif v_var1 > v_var2:\n    print(v_var1 , \" is greater then \" , v_var2)\nelif v_var1 < v_var2:\n    print(v_var1 , \" is smaller then \" , v_var2)\nelse :\n    print(\"This 2 variables are equal\")\n","33de89e6":"def f_Comparison1(v_Comp1 , v_Comp2):\n    if v_Comp1 > v_Comp2:\n        print(v_Comp1 , \" is greater then \" , v_Comp2)\n    elif v_Comp1 < v_Comp2:\n        print(v_Comp1 , \" is smaller then \" , v_Comp2)\n    else :\n        print(\"These \" , v_Comp1 , \" variables are equal\")\n        \nf_Comparison1(33,64)\nf_Comparison1(28,22)\nf_Comparison1(333,333)","1a6a66af":"def f_IncludeOrNot(v_search, v_searchList):\n    if v_search in v_searchList :\n        print(\"surprise ! \",v_search , \" is in list.\")\n    else :\n        print(v_search , \" is not in list. Sorry :(\")\n\nl_list = list(d_dict1.keys())\nprint(l_list)\nprint(type(l_list))\n\nf_IncludeOrNot(\"REK\" , l_list)\nf_IncludeOrNot(\":)\" , l_list)\n","9d6aad22":"for a in range(1904):\n    print(\"BJK \" , a)\n","9025af69":"v_turkMessage = \"B\u0130R \u00d6L\u00dcR B\u0130N D\u0130R\u0130L\u0130R\u0130Z\"\nprint(v_turkMessage)","76aa94ea":"for v_chrs in v_turkMessage:\n    print(v_chrs)\n    print(\"------\")","d30790b6":"for v_chrs in v_turkMessage.split():\n    print(v_chrs)","e25aca4f":"v_list2 = [3,0,160,1903,2443,188]\nprint(v_list2)","bfbaa5b5":"print(v_list2)\nv_sum_list2 = sum(v_list2)\nprint(\"Sum of v_list2 is : \" , v_sum_list2)\n\nprint()\nv_cum_list2 = 0\nv_loopindex = 0\n\nfor v_current in v_list2:\n    \n    v_cum_list2 = v_cum_list2 + v_current\n    \n    print(v_loopindex , \" nd value is : \" , v_current)\n    print(\"Cumulative is : \" , v_cum_list2)\n    \n    v_loopindex = v_loopindex + 1\n    print(\"------\")","7a04e8d5":"i = 0\nwhile(i < 9):\n    print(\"REK\" , i)\n    i = i+1","37a4d428":"m = 0\nwhile(m < 10):\n    \n    print(\"first game\", m ,\"level\"  )\n    \n    m = m+2","634e5dde":"print(v_list2)\nprint()\n\nm= 0\nx = len(v_list2)\n\nwhile(m<x):\n    print(v_list2[m])\n    m=m+1","2b59091f":"#Let's find minimum and maximum number in list\n\nv_list3 = [100,445,7,-10,00,297,-18,390,-267]\n\nv_min = 0\nv_max = 0\n\nv_index = 0\nv_len = len(v_list3)\n\nwhile (v_index < v_len):\n    v_current = v_list3[v_index]\n    \n    if v_current > v_max:\n        v_max = v_current\n    \n    if v_current < v_min:\n        v_min = v_current\n    \n    v_index = v_index+1\n\nprint (\"Max. number is : \" , v_max)\nprint (\"Min. number is : \" , v_min)","814159a7":"# Import library to use\nimport numpy as np","4660a4cf":"v_array1 = [2,4,6,8,10,12,14,16,18,20]\nv_array2_np = np.array([2,4,6,8,10,12,14,16,18,20])","29be4bf2":"print(\"v_array1 : \" , v_array1)\nprint(\"Type of v_array1 : \" , type(v_array1))","78bd0324":"print(\"v_array2_np : \" , v_array2_np)\nprint(\"Type of v_array2_np : \" , type(v_array2_np))","94235ba2":"# shape\nv_shape1 = v_array2_np.shape\nprint(\"v_shape1 : \" , v_shape1 , \" and type is : \" , type(v_shape1))","f9c0433c":"# Reshape\nv_array3_np = v_array2_np.reshape(2,5)\nprint(v_array3_np)","4b3f8346":"v_shape2 = v_array3_np.shape\nprint(\"v_shape2 : \" , v_shape2 , \" and type is : \" , type(v_shape2))","3eb80ec1":"# Dimension\nv_dimen1 = v_array3_np.ndim\nprint(\"v_dimen1 : \" , v_dimen1 , \" type is : \" , type(v_dimen1))","2cfcbb09":"# Dtype.name\nv_dtype1 = v_array3_np.dtype.name\nprint(\"v_dtype1 : \" , v_dtype1 , \" and type is : \" , type(v_dtype1))","1b543361":"# Size\nv_size1 = v_array3_np.size\nprint(\"v_size1 : \" , v_size1 , \" and type : \" , type(v_size1))","73e18fc0":"# Let's create 3x4 array\nv_array4_np = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(v_array4_np)\nprint(\">>>>>>>><<<<<<<<<\")\nprint(\"Shape is : \" , v_array4_np.shape)","3a74ef0d":"# Zeros\nv_array5_np = np.zeros((6,2))\nprint(v_array5_np)","6afe324d":"# Update an item on this array \nv_array4_np[2,3] = 8\nprint(v_array4_np)","c8bef684":"# Ones\nv_array6_np = np.ones((5,8))\nprint(v_array6_np)","a6295b64":"# Empty\nv_array6_np = np.empty((5,4))\nprint(v_array6_np)","c999b467":"# Arrange\nv_array8_np = np.arange(12,36,5)\nprint(v_array8_np)\nprint(v_array8_np.shape)","6f54398e":"# Linspace\nv_array9_np = np.linspace(14,30,5)\nv_array10_np = np.linspace(14,30,20)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\">>>>><<<<<\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","0e3fa1f0":"# Sum , Subtract , Square\nv_np1 = np.array([6,7,8])\nv_np2 = np.array([8,7,6])\n\nprint(v_np1 + v_np2) #--> We can not addition of 2 arrays\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","8f82b235":"# Sinus\nprint(np.sin(v_np2))","b6f0bcac":"# True \/ False\nv_np2_TF = v_np2 < 6\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)","e8f6eb70":"# Element wise Prodcut\nv_np1 = np.array([3,6,9])\nv_np2 = np.array([2,4,6])\nprint(v_np1 * v_np2)","b802f260":"# Transpose\nv_np5 = np.array([[1,3,5],[4,6,8]])\nv_np5Transpose = v_np5.T\nprint(v_np5)\nprint(v_np5.shape)\nprint()\nprint(v_np5Transpose)\nprint(v_np5Transpose.shape)\n","f30db840":"v_np6 = v_np5.dot(v_np5Transpose)\nprint(v_np6)","1b33de5d":"v_np5Exp = np.exp(v_np5)\n\nprint(v_np5)\nprint(v_np5Exp)","d27f257c":"v_np8 = np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(v_np8)","1d2ce147":"v_np8Sum = v_np8.sum()\nprint(\"Sum of array : \", v_np8Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", v_np8.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", v_np8.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","827603a4":"print(np.sqrt(v_np8))\nprint()\nprint(np.square(v_np8))","6a1a3796":"v_np10 = np.array([2,4,6,8,10])\nv_np11 = np.array([10,20,30,40,50])\n\nprint(np.add(v_np10,v_np11))","865a5f7e":"v_np12 = np.array([1,3,5,7,9])\n\nprint(\"First item is : \" , v_np12[1])\nprint(\"Third item is : \" , v_np12[3])","ed0e41ce":"print(v_np12[0:7])","33f8f53c":"v_np12_Rev = v_np12[::-3]\nprint(v_np12_Rev)","bc7177d8":"v_np13 = np.array([[3,4,5,6,7],[11,12,13,14,15]])\nprint(v_np13)\nprint()\nprint(v_np13[1,3]) #--> Get a row\n\nprint()\nv_np13[1,3] = 314 #--> Update a row\nprint(v_np13)","73bcf5fe":"print(v_np13[:,1])","68af0b7b":"print(v_np13[1,1:4])","e13c2df2":"print(v_np13[-2,:])","0963b570":"print(v_np13[:,-2])","0eb2aa6a":"v_np14 = np.array([[3,6,9],[2,4,6],[4,8,12],[5,10,15]])\nv_np15 = v_np14.ravel()\n\nprint(v_np14)\nprint(\"Shape of v_np14 is : \" ,v_np14.shape)\nprint()\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)\nprint()","5740fc7f":"v_np16 = v_np15.reshape(3,4)\nprint(v_np16)\nprint(\"Shape of v_np16 is : \" ,v_np16.shape)","6ed528f6":"v_np17 = v_np16.T\nprint(v_np17)\nprint(\"Shape of v_np17 is : \" ,v_np17.shape)","07dfc74d":"v_np20 = np.array([[8,0],[0,8],[8,0]])\n\nprint(v_np20)\nprint()\nprint(v_np20.reshape(2,3))\n\nprint()\nprint(v_np20) #--> It has not changed !!","5e2f33de":"# Resize\nv_np20.resize((2,3))\nprint(v_np20) # --> Now it changed !  Resize can change its shape","e1177878":"v_np21 = np.array([[1,2],[3,4]])\nv_np22 = np.array([[5,6],[7,8]])\n\nprint(v_np21)\nprint()\nprint(v_np22)","57578807":"# Vertical Stack\nv_np23 = np.vstack((v_np21,v_np22))\nv_np24 = np.vstack((v_np22,v_np21))\n\nprint(v_np23)\nprint()\nprint(v_np24)","c5292de7":"# Horizontal Stack\nv_np25 = np.hstack((v_np21,v_np22))\nv_np26 = np.hstack((v_np22,v_np21))\n\nprint(v_np25)\nprint()\nprint(v_np26)","7b16c973":"v_list1 = [0,00,000]\nv_np30 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np30)\nprint(\"Type of v_np30 : \" , type(v_np30))","feb17597":"v_list2 = list(v_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))\n","5d040f95":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","dae55ff8":"v_list2[0] = 00\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","b69f15e6":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","c291bb89":"v_list2[1] =00\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","a451f879":"# Import Library\nimport pandas as pd","1e7fef35":"# Let's create Data Frame from Dictionary\n\nv_dict1 = { \"COUNTRY\" : [\"TURKEY\",\"RUSSIA\",\"U.S.A\",\"NEW ZELAND\",\"PALESTINIAN\"],\n            \"CAPITAL\":[\"ISTANBUL\",\"MOSCOVA\",\"WASHINGNTON\",\"WELLINGTON\",\"KUDUS\"],\n            \"POPULATION\":[13.03,15.08,21.06,19.01,42]}\n\nv_dataFrame1 = pd.DataFrame(v_dict1)\n\nprint(v_dataFrame1)\nprint()\nprint(\"Type of v_dataFrame1 is : \" , type(v_dataFrame1))","718cf909":"#get top 5 rows\n\nv_head1 = v_dataFrame1.head()\n\nprint(v_head1)\n\nprint()\n\nprint(\"Type of v_head1 is :\" ,type(v_head1))","26a553ac":"# get top 100 rows\n\nprint(v_dataFrame1.head(100))","1dc6f39c":"# get last 5 rows\n\nv_tail1 = v_dataFrame1.tail()\n\nprint(v_tail1)\n\nprint()\n\nprint(\"Type of v_tail1 is :\" ,type(v_tail1))","756fd4c5":"# Columns\n\nv_columns1 = v_dataFrame1.columns\n\nprint(v_columns1)\n\nprint()\n\nprint(\"Type of v_columns is : \" , type(v_columns1))","2a680c8c":"v_info1 = v_dataFrame1.info()\n\nprint(v_info1)\n\nprint()\n\nprint(\"Type of v_info1 is : \" , type(v_info1))","28eae39c":"v_dtypes1 = v_dataFrame1.dtypes\n\nprint(v_dtypes1)\n\nprint()\n\nprint(\"Type of v_dtypes1 is : \" , type(v_dtypes1))","95c915ba":"v_descr1 = v_dataFrame1.describe()\n\nprint(v_descr1)\n\nprint()\n\nprint(\"Type of v_descr1 is : \" , type(v_descr1))","bd72e78c":"v_country1 = v_dataFrame1[\"COUNTRY\"]\n\nprint(v_country1)\n\nprint()\n\nprint(\"Type of v_country1 is : \" , type(v_country1))","934780a2":"v_currenyList1 = [\"TRY\",\"RUB\",\"EUR\",\"NZD\",\"ILS\"]\n\nv_dataFrame1[\"CURRENCY\"] = v_currenyList1\n\nprint(v_dataFrame1.head())","7726bacf":"v_AllCapital = v_dataFrame1.loc[:,\"CAPITAL\"]\nprint(v_AllCapital)\nprint()\nprint(\"Type of v_AllCapital is : \" , type(v_AllCapital))","f1cc7677":"v_top3Currency = v_dataFrame1.loc[0:2,\"CURRENCY\"]\nprint(v_top3Currency)","ecafb24f":"v_CityCountry = v_dataFrame1.loc[:,[\"CAPITAL\",\"COUNTRY\",\"Helbet caan\u0131\u011fm\"]] #---> Helbet caan\u0131\u011fmnot defined !!!\nprint(v_CityCountry)","60897223":"v_Reverse1 = v_dataFrame1.loc[::-2,:]\nprint(v_Reverse1)","69add443":"print(v_dataFrame1.loc[:,:\"POPULATION\"])\nprint()\nprint(v_dataFrame1.loc[:,\"POPULATION\":])","0f92df7f":"print(v_dataFrame1.iloc[:,3])","d30af64c":"v_filter1 = v_dataFrame1.POPULATION > 4\nprint(v_filter1)","47ec6f96":"v_filter2 = v_dataFrame1[\"POPULATION\"] < 20\nprint(v_filter2)","475dceab":"print(v_dataFrame1[v_filter1 & v_filter2])","107b0efb":"print(v_dataFrame1[v_dataFrame1[\"CURRENCY\"] == \"ILS\"])","c2a7a9f0":"v_meanPop =v_dataFrame1[\"POPULATION\"].mean()\nprint(v_meanPop)\n\nv_meanPopNP = np.mean(v_dataFrame1[\"POPULATION\"])\nprint(v_meanPopNP)","a355c4b2":"for a in v_dataFrame1[\"POPULATION\"]:\n    print(a)","be1e2adb":"v_dataFrame1[\"POP LEVEL\"] = [\"Low\" if v_meanPop > a else \"HIGH\" for a in v_dataFrame1[\"POPULATION\"]]\nprint(v_dataFrame1)","a2881018":"print(v_dataFrame1.columns)\n\nv_dataFrame1.columns = [a.lower() for a in v_dataFrame1.columns]\n\nprint(v_dataFrame1.columns)\n","9cf38299":"v_dataFrame1.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>2) else a for a in v_dataFrame1.columns]\nprint(v_dataFrame1.columns)","46830e83":"v_data1 = v_dataFrame1.head()\nv_data2 = v_dataFrame1.tail()\n\nprint(v_data1)\nprint()\nprint(v_data2)\n","9d7b09f6":"v_dataConcat1 = pd.concat([v_data1,v_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nv_dataConcat2 = pd.concat([v_data2,v_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(v_dataConcat1)\nprint()\nprint(v_dataConcat2)","9d8dede2":"v_CAPITAL = v_dataFrame1[\"capital\"]\nv_POPULATION = v_dataFrame1[\"population\"]\n\nv_dataConcat3 = pd.concat([v_CAPITAL,v_POPULATION],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nv_dataConcat4 = pd.concat([v_POPULATION,v_CAPITAL],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(v_dataConcat3)\nprint()\nprint(v_dataConcat4)\n","6ff69b35":"v_dataFrame1[\"test1\"] = [a*2 for a in v_dataFrame1[\"population\"]]\nprint(v_dataFrame1)","bb9c416c":"def f_multiply(v_population):\n    return v_population*3\n\nv_dataFrame1[\"test2\"] = v_dataFrame1[\"population\"].apply(f_multiply)\nprint(v_dataFrame1)","38869587":"****4. Dictionary****","f17d1f48":"**8.6.Convert and Copy Array**","f9824e95":"****9.2.Basic Methods****","d2e59edb":" ****2)FUNCTIONS****","436c6e77":"****3)L\u0130ST****","223bee2c":"**9.3.Indexing and Slicing**","ced74f05":"**9.5.List Comprehension**","605dbe26":"**9.4.Filtering**","ffcd106c":"*2.1) Strings :*","93f0eaac":"**9.6.Drop and Concatenating Data**","9123e4e5":"** INTRODUCTION**","1968c63c":"****8. Numpy****","03c45bba":"*2.2) NUMBERS :*","68e0c372":"**8.5.Stacking Arrays**","4350ecd1":"****6.FOR LOOP****","e26c79da":"****7. WHILE LOOP****","91ba2819":"****9.PANDAS****","68ab5d29":"****2) VARIABLES****","b1ce5f3e":"****5. If Else****","5298066e":"**9.7.Transforming Data**","7b5f67cd":"9.1 Introduction","1819b959":"**8.2. Basic Operations**","8a2e9451":"8.1. Basic","15e27005":"**8.4.Shape Manipulation**","b1c2e835":"**8.3. Indexing and Slicing**","428295f1":"**1)Bas\u0131c**"}}