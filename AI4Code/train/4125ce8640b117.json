{"cell_type":{"712258cc":"code","8771b79a":"code","6311d779":"code","bc26ac61":"code","5b8c69ed":"code","1c0dfedf":"code","75e3db81":"code","2c69e67f":"code","001ac05a":"code","d93386e4":"code","9e94d52c":"markdown","8b4730c4":"markdown","c1f6dbea":"markdown","f07ad023":"markdown","3d4cba40":"markdown","da52b18c":"markdown","09ee8b78":"markdown","a64beddd":"markdown","2fba4e73":"markdown","f388aa01":"markdown"},"source":{"712258cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8771b79a":"import json, sys, random\nimport numpy as np","6311d779":"# download dataset from json object\nf = open(r'..\/input\/ships-in-satellite-imagery\/shipsnet.json')\ndataset = json.load(f)\nf.close()","bc26ac61":"data = np.array(dataset['data']).astype('uint8')\nlabels = np.array(dataset['labels']).astype('uint8')","5b8c69ed":"data.shape","1c0dfedf":"print(labels.shape)\nprint(labels[0:10])","75e3db81":"n_spectrum = 3 # color chanel (RGB)\nwidth = 80\nheight = 80\nX = data.reshape([-1, n_spectrum, width, height])\n\nX.shape","2c69e67f":"# Your code here...","001ac05a":"# Your code here...","d93386e4":"# Your code here...","9e94d52c":"# Exploring ship images\n\nIn this exercise, we're going to explore a dataset of images of ships and manipulate some of the data.","8b4730c4":"The entire dataset is available as a JSON file.","c1f6dbea":"## Task 1 \n\nDisplay 20 images with ships in them, and 20 images with no ships.","f07ad023":"So now we have 4000 images, each with 3 channels and 80x80 pixels.","3d4cba40":"The images are stored as the `data` key, and the labels are stored as the `label` key (1 = \"ship\", 0 = \"no ship\").","da52b18c":"## Task 2\n\ncreate histogram of R, B, G channel means and standard deviations","09ee8b78":"From the dataset description, we know that each image has 3 color channels (RGB), and is 80x80 pixels.","a64beddd":"## Task 3\n\nNormalize each image so that R, B, and G channels have mean = 0 and standard deviation = 1, create histograms again.","2fba4e73":"The dataset includes 4000 labels, corresponding to each image.","f388aa01":"The dataset contains 4000 images. One image is represented as a vector of length 19200 elements."}}