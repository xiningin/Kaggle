{"cell_type":{"3f846d92":"code","a84ecfc1":"code","3d501b7a":"code","2f056fd7":"code","a019bb11":"code","c63c4c99":"code","42fa04f5":"code","0c41a56a":"code","c97910b0":"code","6ea5dd90":"code","1d08830c":"code","679d58fe":"code","a98c3cda":"code","e6fbc754":"code","f4fd53f8":"code","5e78f027":"code","2ef56b92":"code","4e52a393":"code","2c0e1424":"code","458aef88":"code","522a6c43":"code","f2aef9b2":"code","e11cb876":"code","a0729112":"code","bba372ce":"code","8fac3ff3":"code","5199541f":"code","eb3ee3ea":"code","eeace77a":"code","6a2e1015":"code","c0020e4d":"code","e24ae7f3":"code","3e4f4cd5":"markdown","5b425efd":"markdown","f8c3bf5f":"markdown","42f409e0":"markdown","7d7fe3cd":"markdown","f544235a":"markdown","dc2ab9e4":"markdown","ad4e18e9":"markdown","560e50d2":"markdown","005a546b":"markdown","1613451d":"markdown","1a1985e6":"markdown","9734b41a":"markdown","b4fc00c0":"markdown"},"source":{"3f846d92":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib","a84ecfc1":"import sklearn\nfrom sklearn import metrics\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom scipy.cluster.vq import kmeans, vq, whiten\nfrom scipy.spatial.distance import cdist\nimport numpy as np\nfrom datetime import datetime","3d501b7a":"elec_all_data = pd.read_csv(\"..\/input\/buildingdatagenomeproject2\/electricity_cleaned.csv\", index_col='timestamp', parse_dates=True)","2f056fd7":"elec_all_data.info()","a019bb11":"buildingname = 'Panther_office_Hannah'","c63c4c99":"office_example_prediction_data = pd.DataFrame(elec_all_data[buildingname].truncate(before='2017-01-01')).fillna(method='ffill')","42fa04f5":"office_example_prediction_data.info()","0c41a56a":"office_example_prediction_data.plot()","c97910b0":"weather_data = pd.read_csv(\"..\/input\/buildingdatagenomeproject2\/weather.csv\", index_col='timestamp', parse_dates=True)","6ea5dd90":"weather_data_site = weather_data[weather_data.site_id == 'Panther'].truncate(before='2017-01-01')","1d08830c":"weather_data_site.info()","679d58fe":"weather_hourly = weather_data_site.resample(\"H\").mean()\nweather_hourly_nooutlier = weather_hourly[weather_hourly > -40]\nweather_hourly_nooutlier_nogaps = weather_hourly_nooutlier.fillna(method='ffill')","a98c3cda":"temperature = weather_hourly_nooutlier_nogaps[\"airTemperature\"]","e6fbc754":"temperature.plot()","f4fd53f8":"training_months = [4,5,6]\ntest_months = [7]","5e78f027":"trainingdata = office_example_prediction_data[office_example_prediction_data.index.month.isin(training_months)]\ntestdata = office_example_prediction_data[office_example_prediction_data.index.month.isin(test_months)]","2ef56b92":"trainingdata.info()","4e52a393":"testdata.info()","2c0e1424":"train_features = pd.concat([pd.get_dummies(trainingdata.index.hour), \n                                     pd.get_dummies(trainingdata.index.dayofweek), \n                                     pd.DataFrame(temperature[temperature.index.month.isin(training_months)].values)], axis=1).dropna()\n","458aef88":"train_features.head()","522a6c43":"model = KNeighborsRegressor().fit(np.array(train_features), np.array(trainingdata.values));\n","f2aef9b2":"test_features = np.array(pd.concat([pd.get_dummies(testdata.index.hour),\n                                    pd.get_dummies(testdata.index.dayofweek),\n                                    pd.DataFrame(temperature[temperature.index.month.isin(test_months)].values)], axis=1).dropna())","e11cb876":"predictions = model.predict(test_features)","a0729112":"predicted_vs_actual = pd.concat([testdata, pd.DataFrame(predictions, index=testdata.index)], axis=1)","bba372ce":"predicted_vs_actual.columns = [\"Actual\", \"Predicted\"]","8fac3ff3":"predicted_vs_actual.head()","5199541f":"predicted_vs_actual.plot()","eb3ee3ea":"trainingdata.columns = [\"Actual\"]","eeace77a":"predicted_vs_actual_plus_training = pd.concat([trainingdata, predicted_vs_actual], sort=True)","6a2e1015":"predicted_vs_actual_plus_training.plot()","c0020e4d":"# Calculate the absolute errors\nerrors = abs(predicted_vs_actual['Predicted'] - predicted_vs_actual['Actual'])\n# Calculate mean absolute percentage error (MAPE) and add to list\nMAPE = 100 * np.mean((errors \/ predicted_vs_actual['Actual']))","e24ae7f3":"MAPE","3e4f4cd5":"## Scikit-Learn Cheat Sheet\n\nA handy flow chart is available open source from the scikit-learn community from: https:\/\/scikit-learn.org\/stable\/tutorial\/machine_learning_map\/index.html\n\n![alt text](https:\/\/raw.githubusercontent.com\/buds-lab\/the-building-data-genome-project\/master\/docs\/edx-graphics\/EDX-ML-ScikitLearn-1.png)\n","5b425efd":"## Regression evaluation metrics\n\nIn order to understand quanitatively how the model performed, we can use various evaluation metrics to understand how well the model compared to reality. \n\nIn this situation, let's use the error metric [Mean Absolute Percentage Error (MAPE)](https:\/\/en.wikipedia.org\/wiki\/Mean_absolute_percentage_error) ","f8c3bf5f":"## Train a K-Neighbor Regressor Model\n\nThis model was chosen after following the process in the cheat sheet until a model that worked and provided good results was found.","42f409e0":"## Load electricity data and weather data\n\nFirst we can load the data from the BDG in the same as our previous weather analysis influence notebook from the Construction Phase videos","7d7fe3cd":"Next let's load all the packages we will need for the clustering and regression analysis","f544235a":"We can divide the data set by using the `datetime index` of the data frame and a function known as `.isin` to extract the months for the model","dc2ab9e4":"## The Scikit Learn Machine Learning Library\n\nIn this series of videos, we will learn a new library called Scikit-Learn that includes various Machine Learning Models:\n\n### https:\/\/scikit-learn.org\/stable\/\n\n![alt text](https:\/\/raw.githubusercontent.com\/buds-lab\/the-building-data-genome-project\/master\/docs\/edx-graphics\/EDX-ML-ScikitLearn-2.png)\n\n","ad4e18e9":"## Prediction for Measurement and Verification\n\n![alt text](https:\/\/raw.githubusercontent.com\/buds-lab\/the-building-data-genome-project\/master\/docs\/edx-graphics\/EDX-ML-ScikitLearn-3.png)\n\nThere is an open publication that gives more information on how prediction in this realm can be approached: https:\/\/www.mdpi.com\/2504-4990\/1\/3\/56\n\nThere is an entire Kaggle Machine Learning competition also focused on this application: https:\/\/www.kaggle.com\/c\/ashrae-energy-prediction\n\n","560e50d2":"## Using the Building Data Genome Project Data Set for Clustering and Regression Prediction\n\nLet's use the lectrical meter data to create clusters of typical load profiles for analysis. First we can load our conventional packages","005a546b":"# Introduction to Machine Learning for the Built Environment - Supervised Prediction using Regression\n\n- Created by Clayton Miller - clayton@nus.edu.sg - miller.clayton@gmail.com\n\nThis notebook is an introduction to the machine learning concepts of clustering and preduction using regression. We will use the Building Data Genome Project data set to analyze electrical meter data from non-residential buildings.","1613451d":"## Create Train and Test Datasets for Supervsed Learning\n\nWith **supervised learning**, the model is given a set of data that will be used to **train** the model to predict a specific objectice. In this case, we will use a few simple time series features as well as outdoor air temperature to predict how much energy a building uses.\n\nFor this demonstration, we will use three months of data from April, May, and June to prediction July.","1a1985e6":"We can extract the training input data features that will go into the model and the training **label** data which is what are are targeting to predict. \n\n## Encoding Categorical Variables \n\nWe use the pandas `.get_dummies()` function to change the temporal variables of *time of day* and *day of week* into categories that the model can use more effectively. This process is known as [enconding](https:\/\/machinelearningmastery.com\/why-one-hot-encode-data-in-machine-learning\/)","9734b41a":"\n\n## Use the Model to predict for the *Test* period\n\nThen the model is given the `test_features` from the period which we want to predict. We can then merge those results and see how the model did","b4fc00c0":"# Electricity Prediction using Regression for Measurement and Verification\n\nPrediction is a common machine learning (ML) technique used on building energy consumption data. This process is valuable for anomaly detection, load profile-based building control and measurement and verification procedures. \n\nThe graphic below comes from the IPMVP to show how prediction can be used for M&V to calculate how much energy **would have** been consumed if an energy savings intervention had not been implemented. \n\n"}}