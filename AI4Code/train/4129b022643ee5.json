{"cell_type":{"3b8b03e3":"code","dd42e2de":"code","888df2f2":"code","160c1b2f":"code","f040f9af":"code","7fa1b453":"code","ff1f8edf":"code","2b27ca3e":"code","d63b05ac":"code","ee8f1804":"code","a1b3a4e7":"code","d0edde7e":"code","78e2d087":"code","31bcce13":"code","c6ffbce5":"code","23e41c92":"code","3646f369":"code","3f418e00":"code","334c8e8a":"code","6665b371":"code","6bf23016":"code","870b65b7":"code","b65cbcc4":"code","392e58f6":"code","2b9d6c0c":"code","b70323aa":"code","09ed7e65":"code","bf6672c6":"code","e556e29b":"code","6998bb18":"code","073c1596":"code","6606ff12":"code","4697e73d":"code","67238652":"code","299e7d25":"markdown","5dc7d784":"markdown","568a3e38":"markdown","76cf1085":"markdown","d0d29846":"markdown","5af5b633":"markdown","8ef7e198":"markdown","309be880":"markdown","27760a0d":"markdown","3f8ab8a7":"markdown","800fcd70":"markdown","d08cd429":"markdown","b3159c2f":"markdown","5c0698a5":"markdown","0256dc2d":"markdown","b60085a0":"markdown","b95aec06":"markdown","a3b4fb51":"markdown"},"source":{"3b8b03e3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nimport gc\nimport glob\n\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\n\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True) \nimport plotly.graph_objs as go\n\nfrom plotnine import *\n\n%matplotlib inline","dd42e2de":"input_dir = \"..\/input\/learnplatform-covid19-impact-on-digital-learning\"","888df2f2":"!ls $input_dir","160c1b2f":"district_df = pd.read_csv(os.path.join(input_dir, \"districts_info.csv\"))\ndistrict_df.shape","f040f9af":"district_df.head()","7fa1b453":"plt.figure(figsize=(20,8))\nstate_stat = district_df['state'].value_counts()\nbar_plot = sns.barplot(x=state_stat.index, y=state_stat)\nplt.xlabel('State')\nplt.ylabel('Counts')\nplt.title(\"State Freq Chart in District Information data\")\nt = plt.xticks(rotation=90)","ff1f8edf":"locale_stats = district_df['locale'].value_counts(dropna=False)\nfig = go.Figure(data=[go.Pie(labels=locale_stats.index, values=locale_stats, title=\"Locale Distribution in District Data\")])\nfig.update_layout(\n    font_family=\"Courier New\",\n    font_size=18\n)\nfig.show()","2b27ca3e":"def get_tuples_from_limits(x):\n    if isinstance(x, str):\n        ll = float(x.split(',')[0][1:])\n        ul = float(x.split(',')[1][:-1])\n        return (ll, ul)\n    return x\n    \ndef get_avg_in_limit(x):\n    if isinstance(x, str):\n        ll = float(x.split(',')[0][1:])\n        ul = float(x.split(',')[1][:-1])\n        return (ll + ul)*0.5\n    if isinstance(x, tuple):\n        return (x[0] + x[1])*0.5\n    return x","d63b05ac":"interval_cols = ['pct_black\/hispanic', 'pct_free\/reduced', 'county_connections_ratio', 'pp_total_raw']\n\nfor col in interval_cols:\n    district_df[col] = district_df[col].apply(get_tuples_from_limits)\n    \ndistrict_df['pp_total_raw_mean'] = district_df['pp_total_raw'].apply(get_avg_in_limit)","ee8f1804":"local_pp_total_median = district_df.groupby(['locale'])['pp_total_raw_mean'].median()\nlocal_pp_total_mean = district_df.groupby(['locale'])['pp_total_raw_mean'].mean()\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 7))\nfig.suptitle('pp_total_raw average for different locale')\nsns.barplot(x=local_pp_total_median.index, y=local_pp_total_median, ax=ax1)\nax1.set_ylabel('local_pp_total_median')\nsns.barplot(x=local_pp_total_mean.index, y=local_pp_total_mean, ax=ax2)\nax2.set_ylabel('local_pp_total_mean')","a1b3a4e7":"product_df = pd.read_csv(os.path.join(input_dir, \"products_info.csv\"))\nproduct_df.shape","d0edde7e":"product_df.head()","78e2d087":"def get_product_fn_cat(x):\n    if isinstance(x, str):\n        return x.split('-')[0].strip()\n    return x\n\ndef get_product_fn_subcat(x):\n    if isinstance(x, str):\n        return x.split('-')[1].strip()\n    return x\n\nproduct_df['product_fn_category'] = product_df['Primary Essential Function'].apply(get_product_fn_cat)\nproduct_df['product_fn_sub_category'] = product_df['Primary Essential Function'].apply(get_product_fn_subcat)","31bcce13":"product_df.head()","c6ffbce5":"product_fn_cat_stat = product_df['product_fn_category'].value_counts()\n\nfig = go.Figure(data=[go.Pie(\n    labels=product_fn_cat_stat.index, \n    values=product_fn_cat_stat,\n    title=\"Product function category distribution in products data\")])\nfig.update_layout(\n    font_family=\"Courier New\",\n    font_size=18\n)\nfig.show()","23e41c92":"product_fn_sub_cat_stat = product_df['product_fn_sub_category'].value_counts()\n\nplt.figure(figsize=(15,8))\nbar_plot = sns.barplot(x=product_fn_sub_cat_stat, y=product_fn_sub_cat_stat.index, orient='h')\nplt.xlabel('Counts')\nplt.ylabel('Subcategory of Product Primary Function')\nplt.title(\"Subcategory of Product Primary Function Distribution\")\nt = plt.xticks(rotation=90)","3646f369":"product_sector_stat = product_df['Sector(s)'].value_counts()\n\nfig = go.Figure(data=[go.Pie(\n    labels=product_sector_stat.index, \n    values=product_sector_stat,\n    title=\"Product sector distribution in products data\")])\nfig.update_layout(\n    font_family=\"Courier New\",\n    font_size=18\n)\nfig.show()","3f418e00":"N = 20\n\ncompany_stat = product_df[['Provider\/Company Name', 'Product Name']].drop_duplicates()['Provider\/Company Name'].value_counts()[:N]\n\nplt.figure(figsize=(15,8))\nbar_plot = sns.barplot(x=company_stat, y=company_stat.index, orient='h')\nplt.xlabel('Number of Products')\nplt.ylabel('Company\/Provider Name')\nplt.title(\"Number of Products provided by a company\/provider\")\nt = plt.xticks(rotation=90)","334c8e8a":"engagement_df_example = pd.read_csv(os.path.join(input_dir, \"engagement_data\", \"1000.csv\"))\nengagement_df_example.head()","6665b371":"engagement_df_example['time'].min(), engagement_df_example['time'].max()","6bf23016":"engagement_data_path = os.path.join(input_dir, \"engagement_data\")\nall_files = glob.glob(engagement_data_path + \"\/*.csv\")\n\nli = []\n\nfor filename in tqdm(all_files):\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \nengagement_df = pd.concat(li)\nengagement_df = engagement_df.reset_index(drop=True)\nengagement_df.shape","870b65b7":"engagement_df.head()","b65cbcc4":"products_engagement_data = pd.merge(product_df, engagement_df, left_on='LP ID', right_on='lp_id')\nproducts_engagement_data.head()","392e58f6":"engagement_df[\"district_id\"] = engagement_df[\"district_id\"].astype(str).astype(int)\ndistricts_engagement_data = pd.merge(district_df, engagement_df, left_on='district_id', right_on='district_id')\ndistricts_engagement_data.head()","2b9d6c0c":"products_engagement_data.shape, districts_engagement_data.shape","b70323aa":"products_engagement_data['time'] = pd.to_datetime(products_engagement_data['time'])\ndistricts_engagement_data['time'] = pd.to_datetime(districts_engagement_data['time'])","09ed7e65":"products_engagement_data['month'] = products_engagement_data['time'].dt.month\ndistricts_engagement_data['month'] = districts_engagement_data['time'].dt.month","bf6672c6":"top_20_products = products_engagement_data[['Product Name', 'pct_access']]\\\n        .groupby(['Product Name'])['pct_access'].mean()\\\n        .sort_values(ascending=False).index[:20].tolist()\ntop_20_products","e556e29b":"plot_df = products_engagement_data[products_engagement_data['Product Name'].isin(top_20_products)]\\\n                .reset_index(drop=True)[['Product Name', 'time', 'pct_access']]\n\nplot_df.head()","6998bb18":"time_series_df = plot_df.pivot_table(index='time', columns='Product Name', values='pct_access')\nfig = px.area(time_series_df, facet_col=\"Product Name\", facet_col_wrap=2, width=1600, height=2000)\nfig.show()","073c1596":"top_10_states = districts_engagement_data[['state', 'pct_access']]\\\n        .groupby(['state'])['pct_access'].mean()\\\n        .sort_values(ascending=False).index[:10].tolist()\ntop_10_states","6606ff12":"plot_df = districts_engagement_data[districts_engagement_data['state'].isin(top_10_states)]\\\n                .reset_index(drop=True)[['state', 'time', 'pct_access']]\n\nplot_df.head()","4697e73d":"time_series_df = plot_df.pivot_table(index='time', columns='state', values='pct_access')\nfig = px.area(time_series_df, facet_col=\"state\", facet_col_wrap=2, width=1600, height=1000)\nfig.show()","67238652":"# districts_engagement_data.to_csv(\"districts_engagement_data.csv\", index=False)\n# products_engagement_data.to_csv(\"products_engagement_data.csv\", index=False)","299e7d25":"### Engagement data\nThe engagement data are aggregated at school district level, and each file in the folder `engagement_data` represents data from one school district. The 4-digit file name represents `district_id` which can be used to link to district information in `district_info.csv`. The `lp_id` can be used to link to product information in `product_info.csv`.\n\n| Name | Description |\n| :--- | :----------- |\n| time | date in \"YYYY-MM-DD\" |\n| lp_id | The unique identifier of the product |\n| pct_access | Percentage of students in the district have at least one page-load event of a given product and on a given day |\n| engagement_index | Total page-load events per one thousand students of a given product and on a given day |\n\nsource: README.md","5dc7d784":"Trends of engagement of a product on an average demographics","568a3e38":"Majority of the district data belongs to suburbial locale","76cf1085":"Getting top 20 products on per day `pct_access` basis","d0d29846":"### Districts Information Data\n\nThe district file `districts_info.csv` includes information about the characteristics of school districts, including data from [NCES](https:\/\/nces.ed.gov\/) (2018-19), [FCC](https:\/\/www.fcc.gov\/) (Dec 2018), and [Edunomics Lab](https:\/\/edunomicslab.org\/). In this data set, we removed the identifiable information about the school districts. We also used an open source tool [ARX](https:\/\/arx.deidentifier.org\/) [(Prasser et al. 2020)](https:\/\/onlinelibrary.wiley.com\/doi\/full\/10.1002\/spe.2812) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset. \n\n| Name | Description |\n| :--- | :----------- |\n| district_id | The unique identifier of the school district |\n| state | The state where the district resides in |\n| locale | NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See [Locale Boundaries User's Manual](https:\/\/eric.ed.gov\/?id=ED577162) for more information. |\n| pct_black\/hispanic | Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data |\n| pct_free\/reduced | Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data |\n| county_connections_ratio | `ratio` (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See [FCC data](https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services) for more information. |\n| pp_total_raw | Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district. |\n\nsource: README.md","5af5b633":"Common Observations in trends\n\n* There is a clear `weekday` and `weekend` trend, where every engagement dips during the weekend (very intuitive)\n\n* Most engagements flatten out from June to August, probably a vacation\n\n* State Arizona has appreciably high average engagements `pct_access`\n\n* Some products of Google LLC are show predominant engagement compared to other products form other providers","8ef7e198":"1 year of engagement data seems to be present for a typical product","309be880":"# Loading Datasets","27760a0d":"Code reference from [here](https:\/\/www.kaggle.com\/ruchi798\/learnplatform-covid-19-impact-on-digital-learning)","3f8ab8a7":"### Product information data\n\nThe product file `products_info.csv` includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n| Name | Description |\n| :--- | :----------- |\n| LP ID| The unique identifier of the product |\n| URL | Web Link to the specific product |\n| Product Name | Name of the specific product |\n| Provider\/Company Name | Name of the product provider |\n| Sector(s) | Sector of education where the product is used |\n| Primary Essential Function | The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled |\n\nSource: README.md","800fcd70":"### Engagement trends on state level","d08cd429":"# Importing Libraries","b3159c2f":"# Observations from trends","5c0698a5":"Let's see the engagement for top 10 states","0256dc2d":"## Joining Data","b60085a0":"Predominantly `Learning & Curriculum` based products","b95aec06":"##### Top 5% companies (as for the number of products provided)","a3b4fb51":"# Writing the joined data"}}