{"cell_type":{"945adc68":"code","3fbb4854":"code","51939056":"code","eaa354b4":"code","c589fc43":"code","24cf7625":"code","78c5af70":"code","f2b4d47f":"code","ccf85ee9":"code","373e8aea":"code","baeac0c1":"code","1d74f7f6":"markdown","e9f10d01":"markdown","0cfca1f3":"markdown","5e2febb5":"markdown","d5628594":"markdown","8214b334":"markdown","1047f266":"markdown"},"source":{"945adc68":"import numpy as np\nimport pandas as pd\n\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 3000)\npd.set_option('display.width', 3000)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3fbb4854":"# Per player, per season, per statistic\nyear_averages = pd.read_csv('\/kaggle\/input\/pga-tour-20102018-data\/PGA_Data_Historical.csv')\n\n\n# Weekly numbers - consolidate 2 datasets into 1\ndata2020 = pd.read_csv('\/kaggle\/input\/pga-tour-20102018-data\/2020_data.csv')\ndata2019 = pd.read_csv('\/kaggle\/input\/pga-tour-20102018-data\/2019_data.csv')\ndata = pd.concat([data2019, data2020])\ndata = data[~data['player_name'].isna()]\ndata.head()","51939056":"#data['statistic'].unique()","eaa354b4":"player_cols = [#'Top 10 Finishes', \n               #'Club Head Speed', 'Ball Speed', 'Smash Factor', 'Launch Angle', 'Spin Rate',\n       #'Distance to Apex', 'Apex Height', 'Hang Time', 'Carry Distance',\n       #'Carry Efficiency', 'Power Rating',\n       #'Accuracy Rating', 'Short Game Rating',\n       #'Last 5 Events - Putting', 'Last 5 Events - Scoring',\n       #'Last 15 Events - Putting', 'Last 15 Events - Scoring',\n              'SG: Off-the-Tee',\n    'SG: Approach the Green',\n       'SG: Total',\n       'SG: Around-the-Green',\n       'SG: Putting', \n 'SG: Tee-to-Green',\n    'Percentage of potential money won',\n'Official Money',\n'Stroke Differential Field Average',\n'Scoring Average']\n","c589fc43":"# Revised dataset\ndata = data[data['statistic'].isin(player_cols)]\ndata = data[data['variable'] != 'RANK THIS WEEK']\ndata = data.drop(columns = ['variable'])\ndata.head()","24cf7625":"data.head()","78c5af70":"data = data.set_index(['player_name', 'date', 'tournament','statistic'])['value'].unstack('statistic').reset_index()\ndata.head()","f2b4d47f":"# Approach, around green, off the tee\ndata.rename(columns = {'SG: Approach the Green':'Approach',\n                       'SG: Around-the-Green':'Around_green',\n                       'SG: Off-the-Tee':'Tee',\n                      'SG: Putting':'Putting',\n                      'SG: Tee-to-Green':'Tee2Green',\n                      'SG: Total':'Total',\n                      'Official Money': 'Money',\n                      'Percentage of potential money won' : 'Money Pct',\n                      \"Stroke Differential Field Average\": 'Better than Avg'}, inplace = True)\n","ccf85ee9":"data.head()","373e8aea":"wide = 7; tall = 7\nfig = plt.figure(figsize = [wide, tall])\nfig.suptitle(\"Avg Strokes Gained\", fontsize=14)\n\n\nax1 = fig.add_subplot(2,2,1)\nsns.distplot(data[\"Approach\"], \n                hist = False, \n                kde = True, \n                kde_kws = {'shade':True}, \n                rug = False, \n                bins = 10,\n                hist_kws = dict(alpha=1))\nax1.set_title(\"Approach\")\nax1.set_xlabel(\"\")\nax1.set_xticks(range(-4,5,2)) \nax1.set_xticklabels(range(-4,5,2), fontsize=12)\nax1.set_ylabel(\"\")\n\n\n\nax2 = fig.add_subplot(2,2,2)\nsns.distplot(data[\"Around_green\"], \n                hist = False, \n                kde = True, \n                kde_kws = {'shade':True}, \n                rug = False, \n                bins = 10,\n                hist_kws = dict(alpha=1))\nax2.set_title(\"Around_green\")\nax2.set_xlabel(\"\")\nax2.set_xticks(range(-4,5,2)) \nax2.set_xticklabels(range(-4,5,2), fontsize=12)\nax2.set_ylabel(\"\")\n\n\nax3 = fig.add_subplot(2,2,3)\nsns.distplot(data[\"Tee\"], \n                hist = False, \n                kde = True, \n                kde_kws = {'shade':True}, \n                rug = False, \n                bins = 10,\n                hist_kws = dict(alpha=1))\nax3.set_title(\"Tee\")\nax3.set_xlabel(\"\")\nax3.set_xticks(range(-4,5,2)) \nax3.set_xticklabels(range(-4,5,2), fontsize=12)\nax3.set_ylabel(\"\")\n\n\nax4 = fig.add_subplot(2,2,4)\nsns.distplot(data[\"Putting\"], \n                hist = False, \n                kde = True, \n                kde_kws = {'shade':True}, \n                rug = False, \n                bins = 10,\n                hist_kws = dict(alpha=1))\nax4.set_title(\"Putting\")\nax4.set_xlabel(\"\")\nax4.set_xticks(range(-4,5,2)) \nax4.set_xticklabels(range(-4,5,2), fontsize=12)\nax4.set_ylabel(\"\")\n\nfig.subplots_adjust(hspace=0.5, wspace=0.3)","baeac0c1":"data.to_csv('golf.csv',index=False)","1d74f7f6":"# Reading in","e9f10d01":"# Removing unnecessary data","0cfca1f3":"Here we are selecting only the relevant values from the *Statistic* column.","5e2febb5":"These are the SG columns that have already been averaged.","d5628594":"Here we are selecting only the relevant columns - SG","8214b334":"**Ideal Training Dataset Columns (Per Player, Per Event)**\n\n1. (Target) Total Score\n2. Name\n3. Event\n4. Year\n5. Month\n6. Day \n7. Number of Days Since Event","1047f266":"# Data Cleaning"}}