{"cell_type":{"ddd4b15f":"code","7c479f32":"code","eb143b0c":"code","3abc2752":"code","2f8489e6":"code","e912ca6f":"code","d0270379":"code","37708213":"code","b97e6ab9":"code","55fe3a77":"markdown","e73fc672":"markdown","cd5eda33":"markdown","29100680":"markdown","d79b7426":"markdown","892706d5":"markdown","2e00ba82":"markdown","ab3f1953":"markdown","ddf989e4":"markdown"},"source":{"ddd4b15f":"import numpy as np\nimport pandas as pd","7c479f32":"def answer_one():\n    fraud=pd.read_csv('..\/input\/fraud-data\/fraud_data.csv')\n    fraud_instances=fraud[fraud['Class']==1]\n    return len(fraud_instances)\/len(fraud)\nprint('Approximately ' + str (100*round(answer_one(),2))+' % of the observations in dataset are fraud.')","eb143b0c":"# Use X_train, X_test, y_train, y_test for all of the following questions\nfrom sklearn.model_selection import train_test_split\n\ndf = pd.read_csv('..\/input\/fraud-data\/fraud_data.csv')\n\nX = df.iloc[:,:-1]\ny = df.iloc[:,-1]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)","3abc2752":"def answer_two():\n    from sklearn.dummy import DummyClassifier\n    from sklearn.metrics import recall_score,accuracy_score,recall_score\n    dummy_clf=DummyClassifier(strategy='most_frequent').fit(X_train,y_train)\n    y_predicted=dummy_clf.predict(X_test)\n    \n    return print('Accuracy Score: ',accuracy_score(y_test,y_predicted), '\\nRecall Score: ',recall_score(y_test,y_predicted))\nanswer_two()","2f8489e6":"def answer_three():\n    from sklearn.metrics import recall_score, precision_score\n    from sklearn.svm import SVC\n    svc_clf=SVC().fit(X_train,y_train)\n    y_pred_svc=svc_clf.predict(X_test)\n    \n    return print('Accuracy Score: ',svc_clf.score(X_test,y_test),'\\nRecall Score: ',recall_score(y_test,y_pred_svc),'\\nPrecision Score: ',precision_score(y_test,y_pred_svc))\nanswer_three()","e912ca6f":"def answer_four():\n    from sklearn.metrics import confusion_matrix\n    from sklearn.svm import SVC\n    svc_clf=SVC(C= 1e9, gamma= 1e-07).fit(X_train,y_train)\n    decision=svc_clf.decision_function(X_test)\n    y_pred_thrh=np.where(decision>-220,1,0)\n    confusion=confusion_matrix(y_test,y_pred_thrh)\n    return confusion\nanswer_four()","d0270379":"def answer_five():\n    from sklearn.linear_model import LogisticRegression\n    from sklearn.metrics import precision_recall_curve,roc_curve\n    from sklearn.svm import SVC\n    import matplotlib.pyplot  as plt\n    log_reg=LogisticRegression().fit(X_train,y_train)\n    y_prob=log_reg.predict_proba(X_test)\n    precision,recall,thresholds=precision_recall_curve(y_test,y_prob[:,1])\n    plt.figure()\n    plt.plot(precision,recall,label='PRC')\n    plt.xlabel('precision')\n    plt.ylabel('recall')\n    fpr, tpr,mm=roc_curve(y_test,y_prob[:,1])\n    plt.figure()\n    plt.plot(fpr,tpr,label='ROC curve')\n    plt.xlabel('false positive rate')\n    plt.ylabel('true positiv rate')\n    plt.show()\n    \n    return  (0.8,0.9)\n#answer_five()","37708213":"def answer_six():    \n    import warnings\n    #from astropy.io import fits\n    warnings.filterwarnings('ignore', category=UserWarning, append=False)\n    from sklearn.model_selection import GridSearchCV\n    from sklearn.linear_model import LogisticRegression\n    log_reg=LogisticRegression()\n    param_grid={'penalty': ['l1', 'l2'],'C':[0.01, 0.1, 1, 10, 100]}\n    log_grid=GridSearchCV(log_reg,param_grid=param_grid,cv=3, scoring='recall')\n    log_reg_fit=log_grid.fit(X_train,y_train)\n    \n    return log_grid.cv_results_['mean_test_score'].reshape(5,2)\n#answer_six()","b97e6ab9":"\ndef GridSearch_Heatmap(scores):\n    %matplotlib notebook\n    import seaborn as sns\n    import matplotlib.pyplot as plt\n    plt.figure()\n    sns.heatmap(scores.reshape(5,2), xticklabels=['l1','l2'], yticklabels=[0.01, 0.1, 1, 10, 100])\n    plt.yticks(rotation=0);\n\n#GridSearch_Heatmap(answer_six())","55fe3a77":"### Training a SVC classifer using the default parameters. What is the accuracy, recall, and precision of this classifier?","e73fc672":"### What percentage of the observations in the dataset are instances of fraud?","cd5eda33":"### Using the SVC classifier with parameters `{'C': 1e9, 'gamma': 1e-07}`, what is the confusion matrix when using a threshold of -220 on the decision function. Use X_test and y_test.","29100680":"### Spit data into train and test dataset","d79b7426":"### Visualization of grid search on heatmap","892706d5":"### Train a logisitic regression classifier.\n\nFor the logisitic regression classifier, create a precision recall curve and a roc curve using y_test and the probability estimates for X_test (probability it is fraud).\n\nLooking at the precision recall curve, what is the recall when the precision is `0.75`?\n\nLooking at the roc curve, what is the true positive rate when the false positive rate is `0.16`?","2e00ba82":"# Evaluate Fraud Data Detection\n\nIn this assignment you will train several models and evaluate how effectively they predict instances of fraud using data based on [this dataset from Kaggle](https:\/\/www.kaggle.com\/dalpozz\/creditcardfraud).\n\u00a0\nEach row in `fraud_data.csv` corresponds to a credit card transaction. Features include confidential variables `V1` through `V28` as well as `Amount` which is the amount of the transaction.\u00a0\n\u00a0\nThe target is stored in the `class` column, where a value of 1 corresponds to an instance of fraud and 0 corresponds to an instance of not fraud.","ab3f1953":"### Performing a grid search over the parameters listed below for a Logisitic Regression classifier, using recall for scoring and the default 3-fold cross validation.\n\n`'penalty': ['l1', 'l2']`\n\n`'C':[0.01, 0.1, 1, 10, 100]`\n\nFrom `.cv_results_`, create an array of the mean test scores of each parameter combination. i.e.\n\n|      \t| `l1` \t| `l2` \t|\n|:----:\t|----\t|----\t|\n| **`0.01`** \t|    ?\t|   ? \t|\n| **`0.1`**  \t|    ?\t|   ? \t|\n| **`1`**    \t|    ?\t|   ? \t|\n| **`10`**   \t|    ?\t|   ? \t|\n| **`100`**   \t|    ?\t|   ? \t|\n\n<br>","ddf989e4":"### Training a dummy classifier that classifies everything as the majority class of the training data. What is the accuracy of this classifier? What is the recall?\n"}}