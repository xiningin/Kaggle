{"cell_type":{"a3343776":"code","bf8f741a":"code","4ada07cb":"code","f51302eb":"code","d0062654":"code","ec511feb":"code","7e8473f8":"code","53c6b07a":"code","ab27425a":"code","5f7326b0":"markdown","ae1e1360":"markdown","b3e65ed0":"markdown","6d9d8e5c":"markdown","2a377ecd":"markdown"},"source":{"a3343776":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport sys\nfrom scipy import misc\nfrom glob import glob\n\nfrom PIL import Image, ImageOps\nimport cv2\n\nfrom tqdm.notebook import tqdm\n\nimport albumentations as albu\nfrom albumentations.pytorch import ToTensor\n\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.utils.data import DataLoader, Dataset, sampler\n\nsys.path.append('\/kaggle\/input\/srnet-model-weight\/')\n\nfrom model import Srnet","bf8f741a":"BATCH_SIZE = 40\nTESTPATH = '\/kaggle\/input\/alaska2-image-steganalysis\/Test\/'\nCHKPT = '\/kaggle\/input\/srnet-model-weight\/SRNet_model_weights.pt'\n\ndf_sub = pd.read_csv('\/kaggle\/input\/alaska2-image-steganalysis\/sample_submission.csv')","4ada07cb":"def transform_test():\n    transform = albu.Compose([\n        albu.Normalize(mean=(0.485,0.456,0.406), std=(0.229,0.224,0.225)),\n        ToTensor()\n    ])\n    return transform","f51302eb":"class AlaskaDataset(Dataset):\n    def __init__(self, df, data_folder, transform):\n        self.df = df\n        self.root = data_folder\n        self._transorm = transform\n\n    def __getitem__(self, idx):\n        image_id = self.df.Id.iloc[idx]\n        image_path = os.path.join(self.root, image_id)\n        img = cv2.imread(image_path)\n        augment = self._transorm(image=img)\n        img = augment['image']\n        img = torch.mean(img, axis=0, keepdim=True) # SRNet requres input image to be one channel\n        return img\n\n    def __len__(self):\n        return len(self.df)","d0062654":"# build dataset\ntest_transform = transform_test()\ntest_dataset = AlaskaDataset(df_sub, TESTPATH, test_transform)\ntest_data = DataLoader(\n    test_dataset,\n    batch_size = BATCH_SIZE,\n    num_workers=2,\n    shuffle=False\n    )","ec511feb":"model = Srnet().cuda()\nckpt = torch.load(CHKPT)\nmodel.load_state_dict(ckpt['model_state_dict'])","7e8473f8":"all_outputs = []\nmodel.eval()\nwith torch.no_grad():\n    for inputs in tqdm(test_data):\n        inputs = inputs.cuda()\n        outputs = model(inputs)\n        pred = outputs.data.cpu().numpy()\n        # the output of SRNet is log_softmax, convert it to probability\n        pred = np.exp(pred[:, 1])\/ (np.exp(pred[:, 0]) + np.exp(pred[:, 1]))\n        all_outputs.append(pred)\nall_outputs = np.concatenate(all_outputs)","53c6b07a":"df_sub['Label']= all_outputs\ndf_sub.to_csv('submission.csv', index=None)","ab27425a":"df_sub.head()","5f7326b0":"# What to do next?\n\n1. Try to finetune SRNet on the provided dataset. \n2. Design your own network structure! ","ae1e1360":"## Dataset and transform","b3e65ed0":"# Model","6d9d8e5c":"# Predict","2a377ecd":"# Introduction\n\nAs mentioned [here](https:\/\/www.kaggle.com\/c\/alaska2-image-steganalysis\/discussion\/146610#823749), SRNet is a top NN for steganalysis. I would like to check the out-of-box performance of SRNet on this dataset. You can find the model and pretrained weight [here](https:\/\/www.kaggle.com\/naivelamb\/srnet-model-weight).\n\nIf you like it, please upvote the notebook and the dataset. "}}