{"cell_type":{"78d885d4":"code","cb98420b":"code","a9908868":"code","eafb8a14":"code","5af1d2fe":"code","a3000672":"code","4b257209":"code","f97407bf":"code","62ada7c3":"code","a37d2511":"code","db16e12d":"code","aa5bdcac":"code","c7711a2b":"code","3e78385e":"code","d6d6b28b":"code","5c4e2fe8":"code","e725a662":"code","077cb50f":"code","52f93783":"code","0af5859b":"code","5d2c8ee8":"code","e12073bb":"code","d8413dbc":"code","a5cf07c8":"markdown","c522377c":"markdown","2ab74f05":"markdown","60ab85df":"markdown","da479ebe":"markdown","022f9bf4":"markdown","f5845a44":"markdown","5f20637d":"markdown","d0b9f098":"markdown","f73e1a74":"markdown","8cc97cef":"markdown","1a2a4fc5":"markdown"},"source":{"78d885d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #for data visualizing\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb98420b":"#initialize the program\nfrom matplotlib.ticker import StrMethodFormatter\n\npd.options.display.float_format = '{:,.2f}'.format","a9908868":"print(type(np))\nprint(type(pd))\nprint(type(os))","eafb8a14":"#missing xlrd library for Excel? check it...\n!pip3 list | grep pandas\n!pip3 install xlrd\n!pip3 list | grep xlrd","5af1d2fe":"excel_file = 'https:\/\/dq-blog-files.s3.amazonaws.com\/movies.xls'\nmovies = pd.read_excel(excel_file)","a3000672":"movies.info()\nmovies.head(5)","4b257209":"#movies_sheet2 = pd.read_excel(excel_file, sheet_name=1, index_col=0)\nmovies_sheet2 = pd.read_excel(excel_file, sheet_name=1)\nmovies_sheet1 = pd.read_excel(excel_file, sheet_name=0)\nmovies_sheet3 = pd.read_excel(excel_file, sheet_name=2)\nmovies = pd.concat([movies_sheet1, movies_sheet2, movies_sheet3])\nmovies.shape","f97407bf":"#movies.info()\n#movies.tail()\ndata = movies.copy()","62ada7c3":"data.columns","a37d2511":"#movies[['Title', 'Year', 'Gross Earnings']][0:10]\nview = data[['Title', 'Year', 'Gross Earnings']].copy()\nview[0:5]","db16e12d":"sorted_by_gross = view.sort_values (by=['Gross Earnings'], ascending=False)\nsorted_by_gross[0:5]","aa5bdcac":"#sorted_by_gross['Gross Earnings'].head(10).plot(kind=\"barh\")\nax = sorted_by_gross.head(10).plot(kind=\"bar\", x=\"Title\", y=\"Gross Earnings\", figsize=(10,5), rot=20, position=1)\nax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.0f}'))\nplt.show()","c7711a2b":"view = data[['Title', 'Year', 'IMDB Score']].copy()","3e78385e":"#data[0:10]\n#data['IMDB Score'].plot(kind=\"hist\")\nview['IMDB Score'].hist(bins=[2, 5, 7, 9, 10])\nplt.show()","d6d6b28b":"data.describe()","5c4e2fe8":"data[\"Net Earnings\"] = data[\"Gross Earnings\"] - data[\"Budget\"]","e725a662":"#data[\"Net Earnings\"].head(10)\nview = data[['Title', 'Year', 'Net Earnings', 'Gross Earnings', 'Budget']].copy()\nearnings_by_year = view.pivot_table(index=['Year'])\nearnings_by_year.head()","077cb50f":"earnings_by_year.plot(figsize=(15,7))\nplt.show()","52f93783":"view = data[['Country', 'Language', 'Gross Earnings', 'Net Earnings', 'Budget']].copy()","0af5859b":"earnings_by_co_lang = view.pivot_table(index=['Country', 'Language'])\nearnings_by_co_lang.head()","5d2c8ee8":"earnings_by_co_lang.head(10).plot(kind='bar', figsize=(15,7))\nplt.show()","e12073bb":"#missing xlrd library for Excel? check it...\n!pip3 list | grep openpyxl\n!pip3 install openpyxl\n!pip3 list | grep openpyxl","d8413dbc":"movies.to_excel('movies.xlsx')","a5cf07c8":"### Checking earning by countries","c522377c":"### How many movies has IMDB score > 7.0?","2ab74f05":"## 3. Playing with the data","60ab85df":"**Data:**\n* Example: [IMDB movies Excels](https:\/\/dq-blog-files.s3.amazonaws.com\/movies.xls)","da479ebe":"### Find top 10 movies which have highest gross earning.","022f9bf4":"## 4. Save data to Excel","f5845a44":"## 2. Start readding the Excel file","5f20637d":"### Try to visualize the data","d0b9f098":"### Check data statistics","f73e1a74":"**Libraries**:\n* numpy: linear algebra\n  * https:\/\/numpy.org\/doc\/stable\/user\/quickstart.html\n* pandas: data processing, CSV\/Excel, table data\n  * https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/10min.html\n* os: operator system: for file\/folder on my computer","8cc97cef":"### Calculate net earning","1a2a4fc5":"## 1. What are we having?"}}