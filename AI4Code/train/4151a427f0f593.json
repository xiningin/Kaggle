{"cell_type":{"b532a125":"code","d9daca09":"code","3591e209":"code","2add1e01":"code","504b23fe":"code","d4bea9c5":"code","4ded14a5":"code","a7ab4c16":"code","549a1fac":"code","9552d640":"code","8f88f05c":"code","cfce4a29":"code","5b89823c":"code","cda19f69":"code","a884053c":"code","dfb6aa57":"code","fadf31c6":"code","26f98be4":"code","7bb96898":"code","18c48f42":"code","f1248071":"code","36963c07":"code","43b69de3":"code","2b482852":"code","0b229228":"code","42a36c12":"code","99be49c6":"code","99899668":"code","b995dba7":"code","e52d90c4":"code","b2d7fa80":"code","c7a49acc":"code","85fa5b49":"code","a49233f5":"code","5aac061f":"code","75d34074":"code","7c07fa06":"code","df5cc8de":"markdown","70b13010":"markdown","54b49e33":"markdown","b8ea6b5e":"markdown","2d4a7ca3":"markdown","b293084b":"markdown","bd56b14a":"markdown","c9c43664":"markdown","ee3bfaf7":"markdown","c6422bf8":"markdown","3cc8aa5f":"markdown","accd3c9a":"markdown","b2b51a34":"markdown","6997de46":"markdown","cb9be13e":"markdown","2f63f101":"markdown","3692013d":"markdown","7a94d0c4":"markdown","942846c0":"markdown","33d5f00e":"markdown","981e23d1":"markdown","8bf7c235":"markdown","1dbfe746":"markdown","b493945c":"markdown","d7dd7785":"markdown","0afb6634":"markdown","56ce9877":"markdown","9a290472":"markdown","0897903b":"markdown"},"source":{"b532a125":"import numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\n#import category_encoders as ce #encoding\nfrom sklearn import metrics\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA #dim red\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.svm import SVR \n\n\n\n%matplotlib inline","d9daca09":"GenReg_ds = pd.read_csv('https:\/\/raw.githubusercontent.com\/insaid2018\/Term-3\/master\/Projects\/gender_recognition_by_voice.csv')","3591e209":"GenReg_ds.head(10)","2add1e01":"GenReg_ds.shape","504b23fe":"GenReg_ds.info()","d4bea9c5":"GenReg_ds.describe()","4ded14a5":"GenReg_ds.isnull().sum()","a7ab4c16":"GenReg_ds.select_dtypes(include=['object']).head()","549a1fac":"print(\"Total number of labels : {} \".format(GenReg_ds.shape[0]))\nprint(\"Total number of males : {}\".format(GenReg_ds[GenReg_ds.label=='male'].shape[0]))\nprint(\"Total number of females : {}\".format(GenReg_ds[GenReg_ds.label=='female'].shape[0]))","9552d640":"GenReg_ds.corr()","8f88f05c":"sb.heatmap( GenReg_ds.corr());","cfce4a29":"GenReg_ds.drop(['centroid'], axis=1, inplace=True)","5b89823c":"GenReg_ds.drop(['dfrange'], axis=1, inplace=True)","cda19f69":"GenReg_ds.columns","a884053c":"GenReg_ds['label'].value_counts().plot(kind='bar',figsize = (12,5),fontsize = 14,colormap='Dark2', yticks=np.arange(0, 19, 2))\nplt.xlabel('Gender')\nplt.ylabel('No. of persons')","dfb6aa57":"Male_df = GenReg_ds.loc[GenReg_ds.label == \"male\"]\nFemale_df = GenReg_ds.loc[GenReg_ds.label == \"female\"]\nprint(Male_df.shape)\nprint(Female_df.shape)","fadf31c6":"Male_df['meanfreq'].plot(kind='line', figsize=(12,5), color='blue', fontsize=13, linestyle='-.')\nplt.ylabel('Meanfreq')\nplt.title('Mean Frequency for Male persons')","26f98be4":"Female_df['meanfreq'].plot(kind='line', figsize=(12,5), color='blue', fontsize=13, linestyle='-.')\nplt.ylabel('Meanfreq')\nplt.title('Mean Frequency for Female persons')","7bb96898":"stdcol = GenReg_ds['modindx'].std()==0     \nstdcol","18c48f42":"X = GenReg_ds.loc[:,GenReg_ds.columns != 'label']\nX.head()","f1248071":"drop_cols=[]\nfor cols in X.columns:\n    if X[cols].std()==0:\n        drop_cols.append(cols)\nprint(\"Number of constant columns to be dropped: \", len(drop_cols))\nprint(drop_cols)\nX.drop(drop_cols,axis=1, inplace = True)","36963c07":"Y = GenReg_ds.loc[:,GenReg_ds.columns == 'label']\nY.head()","43b69de3":"gender_encoder = LabelEncoder()\nY = gender_encoder.fit_transform(Y)\nY","2b482852":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X)\nX = scaler.transform(X)\n","0b229228":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.2 , random_state = 1)","42a36c12":"X_train","99be49c6":"from sklearn.svm import SVC\nfrom sklearn import metrics\nsvc=SVC()\nsvc.fit(X_train,Y_train)\nY_pred = svc.predict(X_test)\nprint('Accuracy Score : ')\nprint(metrics.accuracy_score(Y_test,Y_pred))","99899668":"svc = SVC(kernel='linear')\nsvc.fit(X_train,Y_train)\nY_pred = svc.predict(X_test)\nprint('Accuracy Score : ')\nprint(metrics.accuracy_score(Y_test,Y_pred))","b995dba7":"svc=SVC(kernel='rbf')\nsvc.fit(X_train,Y_train)\nY_pred=svc.predict(X_test)\nprint('Accuracy Score:')\nprint(metrics.accuracy_score(Y_test,Y_pred))","e52d90c4":"svc=SVC(kernel='poly')\nsvc.fit(X_train,Y_train)\nY_pred=svc.predict(X_test)\nprint('Accuracy Score : ')\nprint(metrics.accuracy_score(Y_test,Y_pred))","b2d7fa80":"Y","c7a49acc":"from sklearn.model_selection import cross_val_score\nsvc=SVC(kernel='linear')\nscores = cross_val_score(svc, X, Y, cv=10, scoring='accuracy') #cv is cross validation\nprint(scores)","85fa5b49":"print(scores.mean())","a49233f5":"from sklearn.model_selection import cross_val_score\nsvc=SVC(kernel='rbf')\nscores = cross_val_score(svc, X, Y, cv=10, scoring='accuracy') #cv is cross validation\nprint(scores)","5aac061f":"print(scores.mean())","75d34074":"from sklearn.model_selection import cross_val_score\nsvc=SVC(kernel='poly')\nscores = cross_val_score(svc, X, Y, cv=10, scoring='accuracy') #cv is cross validation\nprint(scores)","7c07fa06":"print(scores.mean())","df5cc8de":" There is no null values in this dataset.","70b13010":"Centroid and dfrange both are having more correlated. So, we are going to drop both features.","54b49e33":"### Problem Statement","b8ea6b5e":"   The dataset consists of 3,168 recorded voice samples, collected from male and female speakers. The voice samples are pre-processed by acoustic analysis in R using the seewave and tuneR packages, with an analyzed frequency range of 0hz-280hz","2d4a7ca3":"### Default Polynomial kernel","b293084b":"When K-fold cross validation is done we can see different score in each iteration.This happens because when we use train_test_split method,the dataset get split in random manner into testing and training dataset.Thus it depends on how the dataset got split and which samples are training set and which samples are in testing set.\n\nWith K-fold cross validation we can see that the dataset got split into 10 equal parts thus covering all the data into training as well into testing set.This is the reason we got 10 different accuracy score.","bd56b14a":"### Default Linear kernel","c9c43664":"#### To find count of Null values","ee3bfaf7":"### Running SVM with default hyperparameter","c6422bf8":"### To findout the features which are standard deviation equals zero","3cc8aa5f":"### Label Encoding","accd3c9a":"Polynomial kernel is performing poorly. The reasonbbehind this maybe it is overfitting the training dataset. ","b2b51a34":"### Cross validation with different kernels","6997de46":"#### CV for RBF kernel","cb9be13e":"##### Gender Recognition by Voice and Speech Analysis\n\n##### This database was created to identify a voice as male or female, based upon acoustic properties of the voice and speech","2f63f101":"### Data Standardisation\n\nStandardization refers to shifting the distribution of each attribute to have a mean of zero and a standard deviation of one (unit variance). It is useful to standardize attributes for a model. Standardization of datasets is a common requirement for many machine learning estimators implemented in scikit-learn; they might behave badly if the individual features do not more or less look like standard normally distributed data.","3692013d":"<img src=\"https:\/\/d1sr9z1pdl3mb7.cloudfront.net\/wp-content\/uploads\/2018\/01\/09162655\/voice-biometrics-large1-1024x448.jpg\"  width=\"700\" height=\"100\" \/>","7a94d0c4":"#### CV for Linear kernel","942846c0":"#### CV for polynomial kernel","33d5f00e":"We do not have constant columns in this dataset.","981e23d1":"### To find the category type features","8bf7c235":"We can see from above accuracy score that svm default parameter for kernel is \"rbf\" ","1dbfe746":"### Defining X and Y values","b493945c":"### Checking the correlation between each feature","d7dd7785":"### Reading the comma separated values file into the dataframe","0afb6634":"### Default RBF kernel","56ce9877":"### Splitting dataset into training set and testing set for better generalisation","9a290472":"### Import Data","0897903b":"# Gender Recognition by voice"}}