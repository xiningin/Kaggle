{"cell_type":{"092b6cad":"code","4a6b42dd":"code","e67b12a5":"code","186aa298":"code","976998a5":"code","32f125ae":"code","c77384e0":"code","cfcee45c":"code","068151a3":"code","2cc11e0c":"code","cbbb3f73":"code","32bb9fdc":"code","165b4927":"code","f1cba87d":"code","ec8d7fe3":"code","ab4df1ab":"code","0d75cc67":"code","c2947511":"code","b8b6a6e5":"code","4af1af7d":"code","d3102b3d":"code","8b53cbbf":"code","ad61e6a7":"code","182ac850":"code","ac1e0859":"code","b23ce4f6":"code","e7c5c2a4":"code","23e09134":"code","e072abe1":"code","19755dbd":"code","1e39e3dc":"code","fa97bb84":"code","4ce51659":"code","5674a09f":"code","af0e46be":"code","27950e3b":"code","23e5a53a":"code","b58b5ae3":"code","5e0df450":"code","91cc3228":"code","52a7d96e":"code","4be7ce70":"code","95e87b62":"code","ed4944c3":"code","8e95d758":"code","9b894d31":"code","965dafb7":"code","9983ac66":"code","73041698":"code","61d0f251":"code","f8d1704f":"code","ea817a53":"code","966c641d":"code","f2477062":"code","188bdfba":"code","9c5f40e0":"code","1250670b":"code","c8ed776b":"markdown","0704045b":"markdown","4a79dca0":"markdown","11d2b2d4":"markdown","6e3d98ad":"markdown","b96de57a":"markdown","4e04aaf7":"markdown","2680a294":"markdown","2839cb27":"markdown","054b5f6d":"markdown","47b9f41f":"markdown","6433dbf4":"markdown","6bb9bcb6":"markdown","aa3d7cd6":"markdown","6d3d5c40":"markdown","c72f295b":"markdown","52504106":"markdown","901dca8e":"markdown","0e554fe4":"markdown","b718448f":"markdown","fde21722":"markdown","365b97ac":"markdown","bc9b3225":"markdown","6fe6e75d":"markdown","d3d88535":"markdown","eae7ac74":"markdown","bfd6c6f2":"markdown","e826fbaa":"markdown","34020327":"markdown","4e987255":"markdown","20d4f1f1":"markdown","62ec06fe":"markdown","85775794":"markdown","eb7556dc":"markdown","8f5f86ef":"markdown","ead328ca":"markdown","f36dc8e4":"markdown","e59a7126":"markdown","4d2d378c":"markdown","d4476928":"markdown","2d4c3e4e":"markdown","021a5b68":"markdown","f29244be":"markdown","9d8f965d":"markdown","9eead9ef":"markdown","c9169da2":"markdown","33804284":"markdown","8eb9ad0e":"markdown"},"source":{"092b6cad":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4a6b42dd":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np\nimport seaborn as sns\nimport sklearn.linear_model as lm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics","e67b12a5":"aapl = pd.read_csv('\/kaggle\/input\/itstocksdjia\/AAPL.csv')\ncsco = pd.read_csv('\/kaggle\/input\/itstocksdjia\/CSCO.csv')\nibm = pd.read_csv('\/kaggle\/input\/itstocksdjia\/IBM.csv')\nintc = pd.read_csv('\/kaggle\/input\/itstocksdjia\/INTC.csv')\nmsft = pd.read_csv('\/kaggle\/input\/itstocksdjia\/MSFT.csv')\nmsft","186aa298":"stocks = [aapl, csco, ibm, intc, msft]\n\nfor i in stocks:\n    print(i.shape)","976998a5":"for i in stocks:\n    print(\"Checking NaN values for each Stock: \\n\")\n    print(i.isna().sum())","32f125ae":"aapl.describe()","c77384e0":"csco.describe()","cfcee45c":"ibm.describe()","068151a3":"intc.describe()","2cc11e0c":"msft.describe()","cbbb3f73":"closingdf = pd.concat([aapl['close'], csco['close'], ibm['close'], intc['close'], msft['close']], axis=1)\nclosingdf.columns=['AAPLclose', 'CSCOclose', 'IBMclose', 'INTCclose', 'MSFTclose']\nclosingdf.head()","32bb9fdc":"closingdf.describe()","165b4927":"for stock in closingdf.columns.values:\n    plt.plot(np.arange(0,len(closingdf[stock])), closingdf[stock], label=stock)\n\nplt.xlabel(\"Trading Days from Feb. 2014-2019\")\nplt.ylabel(\"Closing Price of Stock in $\")\nplt.legend()\nplt.figure(figsize=(10,10))","f1cba87d":"sns.pairplot(closingdf)","ec8d7fe3":"changedf = pd.concat([aapl['changePercent'], csco['changePercent'], ibm['changePercent'], intc['changePercent'], msft['changePercent']], axis=1)\nchangedf.columns=['AAPLchange', 'CSCOchange', 'IBMchange', 'INTCchange', 'MSFTchange']\nchangedf.head()","ab4df1ab":"changedf.describe()","0d75cc67":"for stock in changedf.columns.values:\n    plt.plot(np.arange(0,len(changedf[stock])), changedf[stock], label=stock)\n\nplt.xlabel(\"Trading Days from Feb. 2014-2019\")\nplt.ylabel(\"Change of Stocks in %\")\nplt.legend()\nplt.figure(figsize=(10,25))","c2947511":"sns.pairplot(changedf)","b8b6a6e5":"volumedf = pd.concat([aapl['volume'], csco['volume'], ibm['volume'], intc['volume'], msft['volume']], axis=1)\nvolumedf.columns=['AAPLvolume', 'CSCOvolume', 'IBMvolume', 'INTCvolume', 'MSFTvolume']\nvolumedf.head()","4af1af7d":"volumedf.describe()","d3102b3d":"for stock in volumedf.columns.values:\n    plt.plot(np.arange(0,len(volumedf[stock])), volumedf[stock], label=stock)\n\nplt.xlabel(\"Trading Days from Feb. 2014-2019\")\nplt.ylabel(\"Volume of Stocks in Hundreds of Millions\")\nplt.legend()\nplt.figure(figsize=(20,20))","8b53cbbf":"sns.pairplot(volumedf)","ad61e6a7":"vwapdf = pd.concat([aapl['vwap'], csco['vwap'], ibm['vwap'], intc['vwap'], msft['vwap']], axis=1)\nvwapdf.columns=['AAPLvwap', 'CSCOvwap', 'IBMvwap', 'INTCvwap', 'MSFTvwap']\nvwapdf.head()","182ac850":"vwapdf.describe()","ac1e0859":"for stock in vwapdf.columns.values:\n    plt.plot(np.arange(0,len(vwapdf[stock])), vwapdf[stock], label=stock)\n\nplt.xlabel(\"Trading Days from Feb. 2014-2019\")\nplt.ylabel(\"VWAP of Stocks in $\")\nplt.legend()\nplt.figure(figsize=(20,20))","b23ce4f6":"sns.pairplot(vwapdf)","e7c5c2a4":"# Create an average of the 5 stocks percent change %\n\navgCol = changedf.sum(axis=1)\/5\nchangedf[\"AverageChange\"] = avgCol\nchangedf","23e09134":"# Create an average of the 5 stocks volume\n\navgVol = volumedf.sum(axis=1)\/5\nvolumedf[\"AverageVolume\"] = avgVol\nvolumedf","e072abe1":"tempOne = pd.DataFrame(volumedf.AverageVolume)\ntempTwo = pd.DataFrame(changedf.AverageChange)\n\nITstocks = tempOne.join(tempTwo)\nITstocks","19755dbd":"sns.jointplot('AverageVolume', 'AverageChange', ITstocks, kind='reg', color='seagreen');","1e39e3dc":"# Scatterplot of Intel and Cisco by VWAP\nsns.jointplot('INTCvwap', 'CSCOvwap', vwapdf, kind='reg', color='seagreen');","fa97bb84":"# Scatterplot of Microsoft and Cisco by VWAP\nsns.jointplot('MSFTvwap', 'CSCOvwap', vwapdf, kind='reg', color='red');","4ce51659":"# Scatterplot of Microsoft and Intel by VWAP\nsns.jointplot('MSFTvwap', 'INTCvwap', vwapdf, kind='reg', color='orange');","5674a09f":"# 3D Scatterplot of Volume of MSFT, CSCO, and INTC\nsns.set(style=\"whitegrid\", palette=\"muted\", color_codes=True)\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection = '3d')\n\nx = volumedf['MSFTvolume']\ny = volumedf['CSCOvolume']\nz = volumedf['INTCvolume']\n\nax.set_xlabel(\"MSFT Volume\")\nax.set_ylabel(\"CSCO Volume\")\nax.set_zlabel(\"INTC Volume\")\n\nax.scatter(x, y, z)\n\nplt.show()","af0e46be":"# 3D Scatterplot of VWAP of MSFT, CSCO, and INTC\nsns.set(style=\"whitegrid\", palette=\"muted\", color_codes=True)\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection = '3d')\n\nx = vwapdf['MSFTvwap']\ny = vwapdf['CSCOvwap']\nz = vwapdf['INTCvwap']\n\nax.set_xlabel(\"MSFT VWAP\")\nax.set_ylabel(\"CSCO VWAP\")\nax.set_zlabel(\"INTC VWAP\")\n\nax.scatter(x, y, z)\n\nplt.show()","27950e3b":"vwapSet = vwapdf[['MSFTvwap','CSCOvwap','INTCvwap']]\nvwapSet","23e5a53a":"# First we must establish our linear regression modeling tools\nregr = lm.LinearRegression()\n\n# Create X and y dataframes and series\nX = vwapSet[['MSFTvwap', 'CSCOvwap']] #features\ny = vwapSet.INTCvwap   #label\nprint(X.shape, y.shape)","b58b5ae3":"plt.subplot(1,2,1) \nplt.subplots_adjust(hspace=0.4,wspace=0.8)\nplt.scatter(X.MSFTvwap, y, alpha=0.1)\nplt.xlabel('MSFTvwap')\nplt.ylabel('INTCvwap')\n\nplt.subplot(1,2,2)\nplt.scatter(X.CSCOvwap, y, alpha=0.1)\nplt.xlabel('CSCOvwap')\nplt.ylabel('INTCvwap')","5e0df450":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)\nprint(X_train.shape, y_train.shape, X_test.shape, y_test.shape)","91cc3228":"regr = regr.fit(X_train, y_train)","52a7d96e":"coeff = pd.DataFrame(regr.coef_, X.columns, columns=['Coefficient'])\ncoeff","4be7ce70":"y_pred = regr.predict(X_test)\ndf = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","95e87b62":"RMSE = np.sqrt(metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:',RMSE)\nINTCmean = np.mean(vwapSet.INTCvwap)\nprint('VWAP of INTC mean:', INTCmean)\nprint('Percent error:', RMSE\/INTCmean*100)\nprint('R^2:', regr.score(X,y))","ed4944c3":"X = vwapSet[['MSFTvwap', 'INTCvwap']]\ny = vwapSet.CSCOvwap\nprint(X.shape, y.shape)","8e95d758":"plt.subplot(1,2,1)\nplt.subplots_adjust(hspace=0.4,wspace=0.8)\nplt.scatter(X.MSFTvwap, y, color='r', alpha=0.1)\nplt.xlabel('MSFTvwap')\nplt.ylabel('CSCOvwap')\n\nplt.subplot(1,2,2)\nplt.scatter(X.INTCvwap, y, color='r', alpha=0.1)\nplt.xlabel('INTCvwap')\nplt.ylabel('CSCOvwap')","9b894d31":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)\nprint(X_train.shape, y_train.shape, X_test.shape, y_test.shape)","965dafb7":"regr = regr.fit(X_train, y_train)","9983ac66":"coeff = pd.DataFrame(regr.coef_, X.columns, columns=['Coefficient'])\ncoeff","73041698":"y_pred = regr.predict(X_test)\ndf = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","61d0f251":"RMSE = np.sqrt(metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:',RMSE)\nCSCOmean = np.mean(vwapSet.CSCOvwap)\nprint('VWAP of CSCO mean:', CSCOmean)\nprint('Percent error:', RMSE\/CSCOmean*100)\nprint('R^2:', regr.score(X,y))","f8d1704f":"X = vwapSet[['CSCOvwap', 'INTCvwap']]\ny = vwapSet.MSFTvwap\nprint(X.shape, y.shape)","ea817a53":"plt.subplot(1,2,1)  \nplt.subplots_adjust(hspace=0.4,wspace=0.8)\nplt.scatter(X.CSCOvwap, y, color='g', alpha=0.1)\nplt.xlabel('CSCOvwap')\nplt.ylabel('MSFTvwap')\n\nplt.subplot(1,2,2) \nplt.scatter(X.INTCvwap, y, color='g', alpha=0.1)\nplt.xlabel('INTCvwap')\nplt.ylabel('MSFTvwap')","966c641d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)\nprint(X_train.shape, y_train.shape, X_test.shape, y_test.shape)","f2477062":"regr = regr.fit(X_train, y_train)","188bdfba":"coeff = pd.DataFrame(regr.coef_, X.columns, columns=['Coefficient'])\ncoeff","9c5f40e0":"y_pred = regr.predict(X_test)\ndf = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","1250670b":"RMSE = np.sqrt(metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:',RMSE)\nMSFTmean = np.mean(vwapSet.MSFTvwap)\nprint('VWAP of MSFT mean:', MSFTmean)\nprint('Percent error:', RMSE\/MSFTmean*100)\nprint('R^2:', regr.score(X,y))","c8ed776b":"22.) Show the RMSE and R-squared values calculating the error of the model","0704045b":"9.3 ) Now we can see generally how each stocks price changes by day based on volume over the last 5 years. \n\nWe can use Seaborn pairplots to look for trends and relationships relating to the VWAP of each stock traded in a day.\n\nThe pairplots show us that we can see linear relationships between the VWAP prices of CSCO, INTC, MSFT, and to a lesser extent - AAPL. The pairplot also shows us that IBM's VWAP prices do not seem to show any cohesive linear relationships between IBM and any other IT stock in the Dow Jones. It is worth noting here that while AAPL does seem to also show a linear relationship with the closing prices of CSCO, INTC, and MSFT - AAPL typically traded at a 2.5-3x higher price than other IT stocks.","4a79dca0":"17.) Plot the relationships between each feature and label","11d2b2d4":"8.3 ) Now we can see generally how each stock changes in volume over the last 5 years. Due to the nature of how much data we are analyzing over 5 years, this plot is not very helpful in gaining new insights. However, we can note that IBM does trade at a noticeably lower volume than the other 4 stocks.\n\nWe can use Seaborn pairplots to look for trends and relationships relating to the volume of each stock traded in a day.\n\nThe pairplots show us more of what we see in the above line graph - that IBM traded in lower volume than other IT stocks and that generally volume usually remained somewhat constant over time.","6e3d98ad":"26.) Train the estimator","b96de57a":"7.3 ) Now we can see generally how each stock changes in price by percent over the last 5 years.  We are looking at change in price by percent rather than by $ dollar amount as we are trying to look for overall trends in the industry and are not concerned with the price fluctuations of individual stocks.\n\nWe can use Seaborn pairplots to look for trends and relationships between the change in price by percentage of each stock.\n\nThe pairplots show us that generally all these stocks are very stable and do not frequently grow or fall by more than 5%. We can also see from the scatterplots below that most IT stocks grow or fall together due to the presence of more datapoints in quadrant 1 and 3 of each scatterplot.","4e04aaf7":"16.) We will try to predict the VWAP of INTC stock given the historical VWAPs of MSFT and CSCO","2680a294":"6.3 )  Now we see generally how the closing prices of each stock changed over 5 years. We can now use Seaborn \npairplots to look for trends and relationships between the closing prices of each stock.\n\nThe pairplots show us that we can see linear relationships between the closing prices of CSCO, INTC, MSFT, and to a lesser extent - AAPL.  The pairplot also shows us that IBM's closing prices do not seem to show any cohesive linear relationships between IBM and any other IT stock in the Dow Jones. It is worth noting here that while AAPL does seem to also show a linear relationship with the closing prices of CSCO, INTC, and MSFT - AAPL typically traded at a 2.5-3x higher price than other IT stocks.","2839cb27":"28.) Train the estimator and show the results","054b5f6d":"# Analysis of Information Technology Stocks in the Dow Jones Industrial Average from February 2014 - February 2019\n\n\nDescription:  This project set out to explore patterns in the stock prices of all the Information Technology stocks (Apple, Microsoft, IBM, Intel, and Cisco) that were included in the Dow Jones Industrial Average from February 2014 to February 2019.  Further, this project set out to explore if a machine learning model could be developed to provide insights on future stock prices or trading trends given a certain amount of historical data. I chose this project because I have recently become more interested in investing and stock trading trends - particularly with the recent explosion of growth that has occurred in the Information Technology sector during the last year. I wanted to look at historical data from the years leading up to 2020 to gain a better understanding of what kinds of volatility and trends IT stocks experienced prior to the COVID-19 pandemic.  \n\nThe following analysis can be retraced step by step through Steps 1-36.  See Step 37 for the results and conclusion. ","47b9f41f":"19.) Train the estimator","6433dbf4":"35.) Train the estimator and show the results","6bb9bcb6":"36.) Show the RMSE and R-squared values calculating the error of the model","aa3d7cd6":"9.1 ) Next, we will aggregate and explore the volume weighted average price (VWAP) for IT stocks. VWAP gives us the average price of a stock through out the day, adjusted for volume by the number of shares traded that day.","6d3d5c40":"Dataset Source: https:\/\/www.kaggle.com\/timoboz\/stock-data-dow-jones\n\nOther knowledge sources:\n\nhttps:\/\/finbox.com\/ARCA:DIA\/explorer\/asset_price_vwap\n\nhttps:\/\/iexcloud.io\/docs\/api\/#chart\n\nhttps:\/\/en.wikipedia.org\/wiki\/Dow_Jones_Industrial_Average\n","c72f295b":"10.) Since we want to look at trends across the IT sector stocks in the Dow Jones - we will look at the average of the 5 stocks to look for further trends that do not just appear in single stocks.","52504106":"6.1) Our goal is to look for trends across the IT sector - not just individual stocks.  So we will aggregate some important features of the stock data sheets and look for trends across the industry. First, we will aggregate and explore the closing prices for IT stocks.","901dca8e":"2.) Read in data for Information Technology Stocks in the Dow Jones Industrial Average from our dataset source (Apple - AAPL, Cisco - CSCO, IBM - IBM, Intel - INTC, Microsoft - MSFT).","0e554fe4":"8.2 ) Plot the volume of each IT stock from our dataset for each trading day from February 2014-2019","b718448f":"12.) Returning our focus back to VWAP - we noticed strong linear relationships between CSCO, INTC, and MSFT.  We explore these further with jointplots.","fde21722":"15.) Aggregate the VWAP of relevant stocks to one dataframe","365b97ac":"9.2 ) Plot the VWAP of each IT stock from our dataset for each trading day from February 2014-2019","bc9b3225":"25.) Split the training and test sets","6fe6e75d":"29.) Show the RMSE and R-squared values calculating the error of the model","d3d88535":"7.2 ) Plot the change in percentage points of each IT stock from our dataset for each trading day from February 2014-2019","eae7ac74":"6.2 ) Plot the closing price of each IT stock from our dataset for each trading day from February 2014-2019","bfd6c6f2":"4.) Check our stock data sheets for NaN values if any exist.","e826fbaa":"30.) Now we will use the VWAP of CSCO and INTC to try to predict the VWAP of MSFT","34020327":"34.) Check to see what coefficients the estimator has chosen as the most optimal coefficients for X attributes.","4e987255":"10.1) Combine Average Volume and Average Change in % of all 5 IT stocks to look for trends in the data.","20d4f1f1":"11.) Use a jointplot scatterplot from the Seaborn library to see if any relationship can be found between volume and changes in stock value. Due to the nature of most of the stocks in the Dow Jones Industrial Average being very stable - looking at percent change and average change is not very helpful in deriving new insights from the data.","62ec06fe":"13.) We have established that strong linear relationships exist between at least 3 of the 5 IT stocks in DJIA.  We can explore these further by observing if the data is skewed when looking at the volume and VWAP of MSFT, CSCO, and INTC in 3D scatterplots.","85775794":"32.) Split the training and test sets","eb7556dc":"23.) We will try to predict the VWAP of INTC stock given the historical VWAPs of MSFT and CSCO","8f5f86ef":"1.) Import libraries","ead328ca":"27.) Check to see what coefficients the estimator has chosen as the most optimal coefficients for X attributes.","f36dc8e4":"31.) Plot the relationships between each feature and label","e59a7126":"7.1 ) Next, we will aggregate and explore the change (by percentage) for IT stocks.","4d2d378c":"37.) \n\nResults:\n\nOverall, when test size was set to around 0.9, the model was able to return roughly the following Percent Error for each multivariate linear regression estimate:  \n\nFeatures: INTC & CSCO - Label: MSFT ----- ~8% error\nFeatures: INTC & MSFT - Label: CSCO ----- ~5.5%% error\nFeatures: MSFT & CSCO - Label: INTC ----- ~8% error\n\nThis seemed to be be fairly accurate and means that when attempting to estimate what Volume Weighted Average Price one of these three stocks will reach, we can expect our model to be about 90-95% accurate if we have historical data about the other two stocks.\n\nVolume Weighted Average Price is a useful metric for day traders and is often used as a benchmark for what pricepoint a stock \"should\" be trading at. Meaning that a stock that is being sold or bought higher or lower than the VWAP presents and opportunity to either buy or short that stock that is not near that VWAP pricepoint. \n\nImprovements:\n\nSelecting a different dataset would probably have resulted in better insights and perhaps a model that did not only build off of one key feature (VWAP).  I realized that when attempting to look at market trends across an industry - that looking at opening prices, closing prices, highs, and lows is not very useful - as the numbers themselves are largely irrelevant.  What is important to us is the ability to predict a trend or change in percentage, of whether the stock price will grow or fall.\n\nAnother issue with analyzing stock data for a specific industry sector was that changes or fluctuations in stock price are most likely caused by events or news that can affect the entire stock market, not just one industry.  Therefore, I think it may have been more helpful to look at the entirety of the Dow Jones Industrial Average and attempted to build a model based more so around the fluctuations of supply and demand rather than honing in on specifically what factors can affect the value of IT stocks.","d4476928":"24.) Plot the relationships between each feature and label","2d4c3e4e":"21.) Train the estimator and show the results","021a5b68":"5.) Time for some Exploratory Data Analysis (EDA) - take a look at each stocks data and statistics to look for \nany interesting finds or trends.","f29244be":"3.) Check that the shapes of our stock data sheets match one another for the correct number of trading days.","9d8f965d":"8.1 ) Next, we will aggregate and explore the volume (amount of stock traded in a day) for IT stocks.","9eead9ef":"14.) We clearly see that the Volume Weighted Average Price (VWAP) of CSCO, MSFT, and INTC are correlated. We can now attempt to build a machine learning model that will try to predict the VWAP of one of the three stocks given the VWAP of the other 2 stocks.\n\nThis problem can be framed as a Multivariate Linear Regression problem.  We will attempt to build our model and see which 2 stocks function as the best features for predicting the VWAP of the third stock.","c9169da2":"20.) Check to see what coefficients the estimator has chosen as the most optimal coefficients for X attributes.","33804284":"18.) Split the training and test sets","8eb9ad0e":"33.) Train the estimator"}}