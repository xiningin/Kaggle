{"cell_type":{"526bdef7":"code","a7567186":"code","c601c9d3":"code","6a9f45e2":"code","21554b46":"code","27539d65":"code","35e20392":"code","e37bbeac":"code","63a747f6":"code","8cc5bc23":"code","981bdd34":"code","d240ef7e":"code","6ad28f1f":"code","1e6f5377":"markdown","25b7c368":"markdown","8ad52798":"markdown","6ca9dc7f":"markdown","a718e60f":"markdown"},"source":{"526bdef7":"import pandas as pd\nimport numpy as np\nimport altair as alt\nalt.renderers.enable('kaggle')","a7567186":"\npd.set_option('display.max_rows', 500)\nfile = \"\/kaggle\/input\/apache-software-foundation-contribution-statistics\/jira.csv\"\nissues = pd.read_csv(file,names=[\"key\",\"id\",\"summary\",\"author\",\"assignee\",\"created\",\"updated\",\"resolved\",\"resolution\",\"status\" ])\nissues.resolved = pd.to_datetime(issues.resolved)\nissues.created = pd.to_datetime(issues.created)\n\nissues[\"project\"] = issues.key.apply(lambda key: key.split(\"-\")[0])\n","c601c9d3":"resolved = issues[issues[\"resolved\"].notnull()]\nresolved = resolved[resolved[\"status\"].isin([\"Closed\",\"Done\",\"Resolved\"])]\nresolved = resolved[resolved[\"resolution\"].isin([\"Done\",\"Fixed\",\"Resolved\",\"Implemented\",\"Information Provided\",\"Workaround\",\"Delivered\"])]\n\nresolved_hadoop_combined = resolved.copy()\nresolved_hadoop_combined.loc[resolved_hadoop_combined[\"project\"].isin([\"HDDS\",\"HDFS\",\"MAPREDUCE\",\"YARN\",\"SUBMARINE\"]),\"project\"] = \"HADOOP\"","6a9f45e2":"def projects_monthly(dataset, from_date, project_list):\n    resolved2019 = dataset[dataset[\"resolved\"] > from_date]\n\n    top_resolved_2019 = resolved2019[resolved2019[\"project\"].isin(project_list)]\n\n    monthly_project = top_resolved_2019[[\"key\",\"project\"]].groupby([top_resolved_2019[\"resolved\"].dt.to_period(\"M\"),\"project\"]).count();\n    monthly_project = monthly_project.reset_index().set_index(\"resolved\").to_timestamp().reset_index()\n    return monthly_project\n    \n    \n\n","21554b46":"#Users with the most contribution\nuser_contrib = resolved[[\"key\",\"assignee\"]].groupby([\"assignee\"]).count().sort_values(\"key\", ascending=False)\nuser_contrib.head(40).reset_index()","27539d65":"#Users who contributed to the most project\nuser_project = issues[[\"key\",\"assignee\",\"project\"]].groupby([\"project\",\"assignee\"]).count().sort_values(\"key\", ascending=False).reset_index()\nuser_project.groupby(\"assignee\").count().sort_values(\"key\", ascending=False).head(30)\n","35e20392":"#contribution timeline (time between first and last resolved jira)\nby_assignee = issues.groupby(\"assignee\")\nresult = by_assignee.agg({\"resolved\":[np.min,np.max]})\nresult.columns\nresult[\"contribution_time\"] = result[('resolved', 'amax')] - result[('resolved', 'amin')]\nresult = result.drop(\"resolved\", axis=1)\nresult.sort_values(\"contribution_time\", ascending=False).dropna().head(100)","e37bbeac":"monthly = resolved[[\"key\",\"resolved\"]].groupby([resolved[\"resolved\"].dt.to_period(\"M\")]).count();\ndel monthly[\"resolved\"]\nmonthly = monthly.to_timestamp().reset_index()\nalt.Chart(monthly).mark_line().encode(\n    x='resolved:T',\n    y='key:Q'\n).configure_view(\n    height=400,\n    width=800,\n)","63a747f6":"show = projects_monthly(resolved, \"2017-01-01\",[\"FLINK\",\"SPARK\"])\n\nalt.Chart(show).mark_area().encode(\n    x=alt.X(\"resolved:T\",axis=alt.Axis(title=\"month\")),\n    y=alt.Y(\"key:Q\",axis=alt.Axis(title='# of resolved issues')),\n    color=\"project:N\"\n)","8cc5bc23":"not_infra = resolved[resolved[\"project\"] != \"INFRA\"]\ntop_projects_2019 = not_infra[not_infra[\"resolved\"] > \"2019-01-01\"][[\"project\",\"resolved\"]] \\\n   .groupby(\"project\") \\\n   .count() \\\n   .sort_values(\"resolved\", ascending=False) \\\n   .reset_index() \\\n   .head(10)\ntop_projects_2019","981bdd34":"resolved_hadoop_combined = resolved.copy()\nresolved_hadoop_combined.loc[resolved_hadoop_combined[\"project\"].isin([\"HDDS\",\"HDFS\",\"MAPREDUCE\",\"YARN\",\"SUBMARINE\"]),\"project\"] = \"HADOOP\"\nnot_infra = resolved_hadoop_combined[resolved_hadoop_combined[\"project\"] != \"INFRA\"]\n\ntop_projects_2019_hadoop_combined = not_infra[not_infra[\"resolved\"] > \"2019-01-01\"][[\"project\",\"resolved\"]] \\\n   .groupby(\"project\") \\\n   .count() \\\n   .sort_values(\"resolved\", ascending=False) \\\n   .reset_index() \\\n   .head(10)\ntop_projects_2019_hadoop_combined","d240ef7e":"hadoop_combined = issues.copy()\nhadoop_combined.loc[hadoop_combined[\"project\"].isin([\"HDDS\",\"HDFS\",\"MAPREDUCE\",\"YARN\",\"SUBMARINE\"]),\"project\"] = \"HADOOP\"\n\nresolved_hadoop_combined = resolved.copy()\nresolved_hadoop_combined.loc[resolved_hadoop_combined[\"project\"].isin([\"HDDS\",\"HDFS\",\"MAPREDUCE\",\"YARN\",\"SUBMARINE\"]),\"project\"] = \"HADOOP\"\n\nresolved_stat = resolved_h doop_combined[[\"project\",\"resolved\"]] \\\n   .groupby(\"project\") \\\n   .count() \\\n   .sort_values(\"resolved\", ascending=False)\nresolved_stat\n\nissue_stat = hadoop_combined[[\"project\",\"key\"]] \\\n   .groupby(\"project\") \\\n   .count() \\\n   .sort_values(\"key\", ascending=False) \\\n   .rename(columns={\"key\":\"created\"})\n\n\ncontributor_stat = resolved_hadoop_combined[resolved_hadoop_combined[\"assignee\"].notnull()] \\\n   .groupby([\"project\",\"assignee\"]) \\\n   .count().reset_index()\ncontributor_stat = contributor_stat[[\"project\",\"assignee\"]].groupby(\"project\").count().sort_values(\"assignee\",ascending=False)\n\nprojects = contributor_stat.join(resolved_stat).join(issue_stat).head(15)","6ad28f1f":"projects = contributor_stat.join(resolved_stat).join(issue_stat).head(20)\npoints = alt.Chart(projects.reset_index()).mark_circle().encode(\n    alt.X('resolved', scale=alt.Scale(type=\"log\"),axis=alt.Axis(title=\"Number of resolved JIRAs\")),\n    alt.Y('assignee', scale=alt.Scale(type=\"log\"),axis=alt.Axis(title=\"Number of unique conributors\")),\n    color='project'\n)\npoints\ntext = points.mark_text(\n    align='left',\n    baseline='middle',\n    dx=4,\n    fontSize=16,\n).encode(\n    text='project',\n    size = alt.NumericFieldDefWithCondition(type=\"quantitative\")\n)\n(points + text).configure_view(\n    height=768,\n    width=1024,\n)","1e6f5377":"## Flink vs Spark in the last 2 years","25b7c368":"# Top projects in 2019\n\nHadoop subprojects are combined","8ad52798":"## Number of resolved (Jira) issues per month","6ca9dc7f":"## Top projects in 2019 (except INFRA)","a718e60f":"## Users with the most contribution (resolved Jira)"}}