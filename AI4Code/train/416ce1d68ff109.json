{"cell_type":{"1ebcb86e":"code","be7a28c9":"code","aac49e5e":"code","24a23fd0":"code","288df7f0":"code","d4b7e495":"code","3538335b":"code","2cf559e1":"code","030ebb86":"code","935a8e65":"code","773abf5f":"code","dca53321":"code","e1b4b290":"code","3a3db8fd":"code","0e34053c":"code","8ac9df11":"code","a54bfd75":"code","f27fb956":"code","07d6aa95":"code","839cafdd":"code","3d836af5":"code","1805e92e":"code","cdd78229":"code","47486b27":"code","8c72548f":"code","5bce2f26":"code","a582e7eb":"code","ba2102de":"code","9b5aa45e":"code","3f877ae3":"code","0658753b":"code","d0181e84":"code","cbf1903e":"code","1318f016":"code","8e5af9f7":"code","6f180026":"code","e29ebb24":"code","6090faab":"code","f0a40aab":"code","59e53a2e":"code","14a4b7ac":"code","d59f8c25":"code","25cfd3b2":"code","5464c3f0":"code","0e1513a7":"code","81194813":"code","f2921323":"code","8e977570":"code","a02a9c7a":"code","b05a2012":"code","109e4974":"code","312b9ee5":"code","44f5cacf":"code","ced9ef3e":"code","22c15bdc":"code","37045a9c":"code","60274d4f":"code","69001d74":"code","430fe7ec":"code","f5e683ab":"code","2ad4889e":"code","c7326c37":"code","16cb34e8":"code","4d88731f":"code","06f03d10":"code","1deb0122":"code","7f14021c":"code","d8a0e2d8":"code","0a591fe6":"code","51165a45":"code","5b904c97":"code","6e388b29":"code","8b45d4ef":"code","0bc47f0b":"code","4b1b8624":"code","ab7b83b1":"code","ec84478e":"code","f0c23060":"code","2f3c743e":"code","5666e350":"code","9ff0999b":"code","8758aafd":"code","2188048a":"code","2bef8bb6":"code","35314601":"code","58fd0df8":"code","b5781f55":"code","3085fe06":"code","cb366851":"code","f1783264":"code","ecbcbdb3":"code","8ae52016":"code","00161bfc":"code","bc92f401":"code","0be0defd":"code","e78b6084":"code","85f16b01":"code","9fcb95d3":"code","ef67b9b1":"code","d0bad069":"code","8b3b2943":"code","96a95b7b":"code","1a7d0e46":"code","77086ed0":"code","db1692b2":"code","699e2ebb":"code","e1d04a05":"code","95f81977":"code","afe820c0":"code","98c98ce3":"code","137032fa":"code","94306378":"markdown","8618ca21":"markdown","9d10868f":"markdown","004bbaa8":"markdown","0dff93fe":"markdown","7b83901a":"markdown","a84d76ba":"markdown","cccbf360":"markdown","3160aef5":"markdown","40532591":"markdown","3a7c1194":"markdown","39e8e1bd":"markdown","ac5835d5":"markdown","80f66473":"markdown","789701cb":"markdown","b928c61d":"markdown","27dedaff":"markdown","88e06366":"markdown","d5c6eb81":"markdown","12a4a0e2":"markdown","2e0905d3":"markdown","66aa2100":"markdown","7c1b5394":"markdown","d21e11cc":"markdown"},"source":{"1ebcb86e":"import pandas as pd\nimport numpy as np","be7a28c9":"pd.set_option('max_columns', 8, 'max_rows', 10)\n","aac49e5e":"movie = pd.read_csv('..\/input\/pandas-cookbook-data\/data\/movie.csv')\nmovie.head()","24a23fd0":"columns = movie.columns\nindex = movie.index\ndata = movie.values","288df7f0":"columns","d4b7e495":"index","3538335b":"data","2cf559e1":"type(index)","030ebb86":"type(columns)","935a8e65":"type(data)","773abf5f":"issubclass(pd.RangeIndex, pd.Index)","dca53321":"index.values","e1b4b290":"columns.values","3a3db8fd":"movie = pd.read_csv('..\/input\/pandas-cookbook-data\/data\/movie.csv')","0e34053c":"movie.dtypes","8ac9df11":"movie.dtypes.value_counts()","a54bfd75":"movie = pd.read_csv('..\/input\/pandas-cookbook-data\/data\/movie.csv')\nmovie.columns","f27fb956":"movie['director_name']","07d6aa95":"movie.director_name","839cafdd":"type(movie['director_name'])","3d836af5":"director = movie['director_name'] # save Series to variable\ntype(director)","1805e92e":"director_df = director.to_frame().head(5)\ndirector_df","cdd78229":"s_attr_methods = set(dir(pd.Series))\nlen(s_attr_methods)","47486b27":"df_attr_methods = set(dir(pd.DataFrame))\nlen(df_attr_methods)","8c72548f":"len(s_attr_methods & df_attr_methods)","5bce2f26":"director = movie['director_name']\nactor_1_fb_likes = movie['actor_1_facebook_likes']","a582e7eb":"director.head()","ba2102de":"actor_1_fb_likes.head()","9b5aa45e":"pd.set_option('max_rows', 10)\ndirector.value_counts()","3f877ae3":"actor_1_fb_likes.value_counts()","0658753b":"director.size","d0181e84":"director.shape","cbf1903e":"len(director)","1318f016":"director.count()","8e5af9f7":"actor_1_fb_likes.count()","6f180026":"actor_1_fb_likes.quantile()","e29ebb24":"actor_1_fb_likes.min(), actor_1_fb_likes.max(), \\\nactor_1_fb_likes.mean(), actor_1_fb_likes.median(), \\\nactor_1_fb_likes.std(), actor_1_fb_likes.sum()","6090faab":"actor_1_fb_likes.describe()","f0a40aab":"director.describe()","59e53a2e":"actor_1_fb_likes.quantile(.2)","14a4b7ac":"actor_1_fb_likes.quantile([.1, .2, .3, .4, .5, .6, .7, .8, .9])","d59f8c25":"director.isnull()\n\ntemp_df = pd.DataFrame({'A':[None,2,3]})\ntemp_df.A.hasnans","25cfd3b2":"actor_1_fb_likes_filled = actor_1_fb_likes.fillna(0)\nactor_1_fb_likes_filled.count()","5464c3f0":"actor_1_fb_likes_dropped = actor_1_fb_likes.dropna()\nactor_1_fb_likes_dropped.size","0e1513a7":"director.value_counts(normalize=True)","81194813":"director.hasnans","f2921323":"director.notnull()","8e977570":"pd.options.display.max_rows = 6","a02a9c7a":"5 + 9    # plus operator example. Adds 5 and 9","b05a2012":"4 ** 2   # exponentiation operator. Raises 4 to the second power","109e4974":"a = 10   # assignment operator.","312b9ee5":"5 <= 9   # less than or equal to operator","44f5cacf":"'abcde' + 'fg'    # plus operator for strings. C","ced9ef3e":"not (5 <= 9)      # not is an operator that is a reserved keyword and reverse a boolean","22c15bdc":"7 in [1, 2, 6]    # in operator checks for membership of a list","37045a9c":"set([1,2,3]) & set([2,3,4])","60274d4f":"[1, 2, 3] - 3\n","69001d74":"a = set([1,2,3])     \na[0]                 # the indexing operator does not work with sets","430fe7ec":"imdb_score = movie['imdb_score']\nimdb_score","f5e683ab":"imdb_score + 1","2ad4889e":"imdb_score * 2.5","c7326c37":"imdb_score \/\/ 7","16cb34e8":"imdb_score > 7","4d88731f":"director = movie['director_name']","06f03d10":"director == 'James Cameron'","1deb0122":"imdb_score.add(1)              # imdb_score + 1","7f14021c":"imdb_score.mul(2.5)            # imdb_score * 2.5","d8a0e2d8":"imdb_score.floordiv(7)         # imdb_score \/\/ 7","0a591fe6":"imdb_score.gt(7)               # imdb_score > 7","51165a45":"director.eq('James Cameron')   # director == 'James Cameron'","5b904c97":"imdb_score.astype(int).mod(5)","6e388b29":"a = type(1)","8b45d4ef":"type(a)","0bc47f0b":"a = type(imdb_score)\nprint(a)","4b1b8624":"a([1,2,3])","ab7b83b1":"actor_1_fb_likes = movie['actor_1_facebook_likes']\ndirector = movie['director_name']","ec84478e":"director.value_counts().head(3)","f0c23060":"actor_1_fb_likes.isnull().sum()","2f3c743e":"actor_1_fb_likes.notnull().sum()","5666e350":"actor_1_fb_likes.dtype","9ff0999b":"actor_1_fb_likes.fillna(0)\\\n                .astype(int)\\\n                .head()","8758aafd":"actor_1_fb_likes.isnull().mean()","2188048a":"(actor_1_fb_likes.fillna(0)\n                 .astype(int)\n                 .head())","2bef8bb6":"movie.shape","35314601":"movie2 = movie.set_index('movie_title')\nmovie2","58fd0df8":"pd.read_csv('..\/input\/pandas-cookbook-data\/data\/movie.csv', index_col='movie_title')","b5781f55":"movie2.reset_index()","3085fe06":"movie = pd.read_csv('..\/input\/pandas-cookbook-data\/data\/movie.csv', index_col='movie_title')","cb366851":"idx_rename = {'Avatar':'Ratava', 'Spectre': 'Ertceps'} \ncol_rename = {'director_name':'Director Name', \n              'num_critic_for_reviews': 'Critical Reviews'} \n\ntemp_df = pd.DataFrame({'A':[1,2,3] , 'B' : ['Vijay','vij','vj']})\ntemp_df = temp_df.set_index('B')\nrename_idx = {'Vijay' : 'Vijay1'}\nrename_col = {'A' : 'Rank' , 'B' : 'Name'}\ntemp_df = temp_df.rename(index = rename_idx , columns = rename_col)\ntemp_df.reset_index()\n","f1783264":"movie.rename(index=idx_rename, \n             columns=col_rename).head()","ecbcbdb3":"index = movie.index\ncolumns = movie.columns\n\nindex_list = index.tolist()\ncolumn_list = columns.tolist()\n\nindex_list[0] = 'Ratava'\nindex_list[2] = 'Ertceps'\ncolumn_list[1] = 'Director Name'\ncolumn_list[2] = 'Critical Reviews'","8ae52016":"print(index_list[:5])","00161bfc":"print(column_list)","bc92f401":"movie.index = index_list\nmovie.columns = column_list","0be0defd":"movie.head()","e78b6084":"movie['has_seen'] = 0\nmovie.head(3)","85f16b01":"movie.columns","9fcb95d3":"movie['actor_director_facebook_likes'] = (movie['actor_1_facebook_likes'] + \n                                              movie['actor_2_facebook_likes'] + \n                                              movie['actor_3_facebook_likes'] + \n                                              movie['director_facebook_likes'])","ef67b9b1":"movie['actor_director_facebook_likes'].isnull().sum()","d0bad069":"movie['actor_director_facebook_likes'] = movie['actor_director_facebook_likes'].fillna(0)","8b3b2943":"movie['is_cast_likes_more'] = (movie['cast_total_facebook_likes'] >= \n                                  movie['actor_director_facebook_likes'])","96a95b7b":"movie['is_cast_likes_more'].all()","1a7d0e46":"movie = movie.drop('actor_director_facebook_likes', axis='columns')\n","77086ed0":"movie['actor_total_facebook_likes'] = (movie['actor_1_facebook_likes'] + \n                                       movie['actor_2_facebook_likes'] + \n                                       movie['actor_3_facebook_likes'])\n\nmovie['actor_total_facebook_likes'] = movie['actor_total_facebook_likes'].fillna(0)","db1692b2":"movie['is_cast_likes_more'] = movie['cast_total_facebook_likes'] >= \\\n                                  movie['actor_total_facebook_likes']\n    \nmovie['is_cast_likes_more'].all()\n\ntemp_df.all()","699e2ebb":"movie['pct_actor_cast_like'] = (movie['actor_total_facebook_likes'] \/ \n                                movie['cast_total_facebook_likes'])","e1d04a05":"movie['pct_actor_cast_like'].min(), movie['pct_actor_cast_like'].max() ","95f81977":"movie.set_index('movie_title')['pct_actor_cast_like'].head()","afe820c0":"profit_index = movie.columns.get_loc('gross') + 1\nprofit_index","98c98ce3":"movie.insert(loc=profit_index,\n                 column='profit',\n                 value=movie['gross'] - movie['budget'])","137032fa":"movie.head()","94306378":"# Calling Series methods","8618ca21":"# Accessing the main DataFrame components","9d10868f":"# Dissecting the anatomy of a DataFrame","004bbaa8":"# There's more...","0dff93fe":"# There's more","7b83901a":"## How to do it...","a84d76ba":"## There's more...","cccbf360":"## There's more...","3160aef5":"![dataframe anatomy](.\/images\/ch01_dataframe_anatomy.png)","40532591":"# Understanding data types","3a7c1194":"# Chapter 1: Pandas Foundations\n\n## Recipes\n* [Dissecting the anatomy of a DataFrame](#Dissecting-the-anatomy-of-a-DataFrame)\n* [Accessing the main DataFrame components](#Accessing-the-main-DataFrame-components)\n* [Understanding data types](#Understanding-data-types)\n* [Selecting a single column of data as a Series](#Selecting-a-single-column-of-data-as-a-Series)\n* [Calling Series methods](#Calling-Series-methods)\n* [Working with operators on a Series](#Working-with-operators-on-a-Series)\n* [Chaining Series methods together](#Chaining-Series-methods-together)\n* [Making the index meaningful](#Making-the-index-meaningful)\n* [Renaming row and column names](#Renaming-row-and-column-names)\n* [Creating and deleting columns](#Creating-and-deleting-columns)","39e8e1bd":"#### Change options to get specific output for book","ac5835d5":"# Chaining Series methods together","80f66473":"## There's more","789701cb":"## Getting ready...","b928c61d":"# Creating and deleting columns","27dedaff":"# Renaming row and column names","88e06366":"# Selecting a single column of data as a Series","d5c6eb81":"## Getting ready...","12a4a0e2":"# Working with operators on a Series","2e0905d3":"## There's more","66aa2100":"# Making the index meaningful","7c1b5394":"## There's more...","d21e11cc":"## There's more..."}}