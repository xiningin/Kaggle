{"cell_type":{"6d975948":"code","8348f588":"code","ccdc40b6":"code","f7e25e9e":"code","d1a6a7e8":"code","63cbe374":"code","a2140ba6":"code","eb95a283":"code","1a301962":"code","c16d103b":"markdown","bbc56291":"markdown","4bcef5a8":"markdown","ecb1bd8e":"markdown","e53d01f0":"markdown","fd811976":"markdown","c983d0e3":"markdown","508e47ed":"markdown"},"source":{"6d975948":"#Your code goes here\n\n###Defining a function\n\n###Calling a function  \n\n\n###Creating a function - traditional way\n\n\n\n\n###Optimized way\n\n\n\n","8348f588":"#Your code here test the function you created \n\n\n","ccdc40b6":"#Your code here - storing the return value into a variable\n\n","f7e25e9e":"#Your code goes here copy paste the above function you created an take out return\n\n","d1a6a7e8":"#Your code goes here","63cbe374":"#Your code goes here\n","a2140ba6":"#Your code goes here\n","eb95a283":"#Your code goes here\n","1a301962":"#Set Up Code\n\nlist_of_numbers = [70,4,102,88]\n\n#Your code goes here start by defining a function that takes 1 arguement\n\n### Without Bonus\n\n\n\n### With Bonus \n","c16d103b":"# Functions that return\nWhen we use `return` , you specify the value you want the function to give you. That way, we can call a function and store it in a variable. ","bbc56291":"# Defining functions\nYou've already seen and used functions that are builtin to python such as `print()` and `type()`. But Python has many more functions, and defining your own functions is a big part of python programming.\n\nIn this lesson you will learn more about using and defining functions.\n\nA function is a block of code which only runs when it is called.\nYou can pass data, known as parameters, into a function.\nA function can return data as a result.\nIt Can be executed multiple times, without needing to constantly rewrite the entire block of code.\n\nCreating clean repeatable code is a key part of becoming an effective programmer.\n\nIn a nutshell, while a variable stores data, a function stores code\n\n# Parameters\nInformation can be passed to functions as parameter.\n\nParameters are specified after the function name, inside the parentheses. \n\nYou can add as many parameters as you want, just separate them with a comma.\n\n\n# Return\nSend back the result of the function, instead of just print it out\nreturn allows us to assign the output of the function to a new variable","4bcef5a8":"# Local Variables x Global Variables\n\nIt is extremely import to understand the difference between them to avoid ambiguity\n\nA global variable is defined outside of a subroutine or function. The global variable will hold its value throughout the lifetime of a program. They can be accessed within any function defined for the program\n\nA local variable is either a variable declared within the function or is an argument passed to a function. As you may have encountered in your programming, if we declare variables in a function then we can only use them within that function","ecb1bd8e":"\nIn some cases, you may not need to store a value but want a function to execute some block of code as part of your program. Let's try an example of that!\n\nAlong without a return, this function comes with a `default` value. This is what happens when you assign a value to the arguement name in the function's brackets. If we don't pass the function a value, since we gave it the default value \"World\" the function still works.","e53d01f0":"# Calling a function\n\nTo call a function we simple need to write the name of it and give the correct arguements (with the correct types) and it will execute that block of code. \n\nLet's try it! ","fd811976":"The above example creates a function called least_difference, which takes three arguments, `a`, `b`, and `c`.\n\nFunctions start with a header introduced by the `def` keyword. The indented block of code following the `:` is run when the function is called.\n\n`return` is another keyword uniquely associated with functions. When Python encounters a return statement, it exits the function immediately, and passes the value on the right hand side to the calling context.\n\nIs it clear what least_difference() does from the source code? If we're not sure, we can always try it out on a few examples:","c983d0e3":"# Putting it all together\n\nLet's try to create a function ourselves! Define a function that takes a list of integers as an arguement. It looks through the list for the largest integer and then returns the largest int. Call the function and store it in a variable. Print the variable. \n\nBONUS: Functions are responsible for testing the arguement they receive. Check if you actually received a list (otherwise your code shouldn't work) and check if each element in the list is an integer (otherwise you might be checking on the wrong type).","508e47ed":"# Functions that don't return\n\nSometimes you need a function to do some piece of code but don't need a value to come out from it. \n\nLet's see what would happen if we took return out of the function we created:"}}