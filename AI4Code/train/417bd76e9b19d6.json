{"cell_type":{"8384b966":"code","acd31c7d":"code","98b2ea08":"code","b0588fa7":"code","f1593e9a":"code","7e2a6dba":"code","19d3b1b7":"code","d69df4a9":"code","7b5330b7":"code","86051969":"code","406b6546":"code","e2dd52f2":"code","841f38a9":"code","e24f0455":"code","c3de4526":"code","2295a185":"code","45e0ed81":"code","0ebeaf15":"code","ad0ac40c":"code","fdf4a049":"code","7909a017":"code","f9268215":"code","40a4f79e":"code","b861f6a6":"code","b60a764b":"code","2558839c":"code","f8ed7c8f":"code","8c451277":"code","19e274fc":"code","3e55735b":"code","bcab22b8":"code","c99927ce":"code","a6fd38e1":"markdown","8f922ff9":"markdown","b09a0009":"markdown","7a194950":"markdown","42df707c":"markdown","34229d7b":"markdown","78e64418":"markdown","2f8160af":"markdown","4b1e04db":"markdown","2135eac2":"markdown","97a8004a":"markdown","f07e20ba":"markdown"},"source":{"8384b966":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt # visualization lib\nplt.style.use(\"seaborn-whitegrid\") \n\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","acd31c7d":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","98b2ea08":"train_df.columns","b0588fa7":"train_df.head()","f1593e9a":"train_df.describe()","7e2a6dba":"train_df.info()","19d3b1b7":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count    \n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of catagorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    \n    # visualization\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: {}\".format(variable,varValue))\n    ","d69df4a9":"category1 = ['Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']\nfor i in category1:\n    bar_plot(i)","7b5330b7":"catagory2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor i in catagory2:\n    print(\"{} \\n\".format(train_df[i].value_counts()))","86051969":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable], bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","406b6546":"numericVar = [\"Fare\", \"Age\", \"PassengerId\", \"Pclass\"]\nfor i in numericVar:\n    plot_hist(i)","e2dd52f2":"# Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"] , as_index = False).mean().sort_values(by=\"Survived\",ascending= False)","841f38a9":"# Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"] , as_index = False).mean().sort_values(by=\"Survived\",ascending= False)","e24f0455":"# SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"] , as_index = False).mean().sort_values(by=\"Survived\",ascending= False)","c3de4526":"# Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"] , as_index = False).mean().sort_values(by=\"Survived\",ascending= False)","2295a185":"# Embarked vs Survived\ntrain_df[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"] , as_index = False).mean().sort_values(by=\"Survived\",ascending= False)","45e0ed81":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for i in features:\n        # 1st quartile\n        Q1 = np.percentile(df[i],25)\n        # 3rd quertile\n        Q3 = np.percentile(df[i],75)\n        # IQR \n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[i] < Q1 - outlier_step) | (df[i] > Q3 + outlier_step)].index\n        # strore indeces\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","0ebeaf15":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","ad0ac40c":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop=True)","fdf4a049":"train_df.head(30)","7909a017":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df])","f9268215":"train_df_len","40a4f79e":"train_df.head(10)","b861f6a6":"train_df.columns[train_df.isnull().any()]","b60a764b":"train_df.isnull().sum()","2558839c":"train_df[train_df[\"Embarked\"].isnull()]","f8ed7c8f":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()","8c451277":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")","19e274fc":"train_df[train_df[\"Embarked\"].isnull()]","3e55735b":"train_df[train_df[\"Fare\"].isnull()]","bcab22b8":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","c99927ce":"train_df[train_df[\"Fare\"].isnull()]","a6fd38e1":"<a id='10' ><\/a> <br>\n## Find Missing Value \n* Embarket has 2 missing value\n* Fare has only 1","8f922ff9":"<a id='8' ><\/a> <br>\n# Missing Value\n* Find Missing Value\n* Find Missing Value","b09a0009":"<a id =\"4\" ><\/a> <br>\n## Categorical Varible Analysis","7a194950":"<a id =\"2\"><\/a><br>\n# Varible Description\n1. PassengerId: uniqe id number to each passenger\n2. Survived: passenger survave(1) or died(0)\n3. Pclass: passenger class\n4. Name: name of passenger\n5. Sex: gender or passenger\n6. Age: age of passenger\n7. SibSp: number of siblings\/spouse\n8. Parch: number of parents\/children\n9. Ticket: ticked number\n10. Fare: amount of maney spent on ticket\n11. Cabin: cabin category\n12. Embarked: port where passenger embarked (C = Cherbourg, Q = Quennstown, S = Southampton","42df707c":"<a id =\"1\" ><\/a> <br>\n# Load and Chech Data","34229d7b":"<a id='6' ><\/a> <br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","78e64418":"<a id =\"4\" ><\/a> <br>\n## Numerical Varible Analysis","2f8160af":"<a id='9' ><\/a> <br>\n## Find Missing Value","4b1e04db":"<a id =\"3\" ><\/a> <br>\n#  Univarible Varible Analysis\n* Categorical Varible Analysis: Survived, Sex, Pclass, SibSp, Parch, Embarked, Cabin, Ticked, Name\n* Numerical Varible Analysis: Fare, Age and PassengerId","2135eac2":"<a id='7' ><\/a> <br>\n# Outlies Detection","97a8004a":"* float64(2): Fare and Age\n* int64(5): Pclass, sibsp, parch, passengerId and survived\n* object(5): Cabin, embarked, ticked, name and sex","f07e20ba":"# Introduction\nTitanic is a famous ship sunk in 1912 in a bad accident. There were 2224 people on board with the crew, 1502 of them could not survive.\n\n\nContect:\n    \n1. [Load and Chech Data](#1)\n2. [Varible Description](#2)\n    * [Univarible Varible Analysis](#3)\n        * [Categorical Varible Analysis](#4)\n        * [Numerical Varible Analysis](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlies Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Find Missing Value](#10)"}}