{"cell_type":{"95c528fc":"code","48f05d0b":"code","034ff28f":"code","c6d6c4b5":"code","9364ba2f":"code","af837106":"code","d5a6c25a":"code","692d36b2":"code","fd09cae2":"code","831fe589":"code","bdac6fd1":"code","4732e85a":"code","c6b283d1":"code","a1a4593c":"code","e0f53efc":"code","de1ec4ec":"code","d899300b":"code","c8ab223e":"code","eadb2254":"code","4e2261e7":"code","da0a110e":"code","15536acb":"code","436edbd1":"code","1eab5d95":"code","8c1f98a1":"code","e43f9732":"code","bb79b91d":"code","0191e5ea":"code","7a4ec28f":"code","a5e41098":"code","e8c2ff5a":"code","97bad1bd":"code","914a8e65":"code","ee4975f6":"code","e87fb892":"code","64a830aa":"code","649f78db":"code","55fc3eb9":"code","99dde6ea":"code","7dd1ac96":"code","a5ed1168":"markdown"},"source":{"95c528fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","48f05d0b":"des=pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')","034ff28f":"des","c6d6c4b5":"##obtaining statistics of the above dataset\ndes.describe()","9364ba2f":"m=des[['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin']].replace(0,np.nan)","af837106":"##filling missing values with the means of their respective columns\nm.fillna(des.mean(),inplace=True)\n","d5a6c25a":"m","692d36b2":"m.isnull().sum()","fd09cae2":"##Join the columns in one dataframe ","831fe589":"m1=des['BMI']","bdac6fd1":"m1","4732e85a":"m2=des['DiabetesPedigreeFunction']\nm2","c6b283d1":"m3=des['Age']\nm3","a1a4593c":"m4=des['Outcome']\nm4","e0f53efc":"ds=pd.concat([m,m1,m2,m3,m4],axis=1)","de1ec4ec":"ds","d899300b":"##checking the null values\nds.isnull().sum()","c8ab223e":"##Again obtaining statistics of the new dataset with no missing values","eadb2254":"ds.describe()","4e2261e7":"##checking of null values \nsns.heatmap(ds.isnull(),cmap='viridis')","da0a110e":"##obtaining correlation matrix of the data\nds.corr()","15536acb":"## Visualisation of the correlation matrix \nplt.figure(figsize=(10,8))\nsns.heatmap(ds.corr(),cmap='coolwarm',annot=True)","436edbd1":"sns.pairplot(ds)","1eab5d95":"ds['Glucose'].hist(bins=20)","8c1f98a1":"ds['BloodPressure'].hist()","e43f9732":"##Training The model using Logistics Regression ","bb79b91d":"##droping the outcome column from the rest of the columns \nx=ds.drop(['Outcome'],axis=1)","0191e5ea":"x","7a4ec28f":"y=ds['Outcome']\ny","a5e41098":"from sklearn.model_selection import train_test_split","e8c2ff5a":"##spliting the dataset into train and test set data\nX_train, X_test, y_train, y_test =train_test_split(x, y, test_size=0.30, random_state=101)","97bad1bd":"X_train.shape","914a8e65":"X_test.shape","ee4975f6":"##importing Logistic regression model from the scikit learn library of the python\nfrom sklearn.linear_model import LogisticRegression","e87fb892":"model=LogisticRegression()","64a830aa":"##fitting of the model\nmodel.fit(X_train,y_train)","649f78db":"##predicting the model\npredictions=model.predict(X_test)","55fc3eb9":"from sklearn.metrics import confusion_matrix,classification_report","99dde6ea":"##Obtaining confusion matrix to get corrected and incorrected values\nconfusion_matrix(y_test,predictions)","7dd1ac96":"##classification report give overall accuracy of the model .It gives precision values ,f1 score and accuracy\n#the model has 77% percent accuracy \nprint(classification_report(y_test,predictions))","a5ed1168":"Handling missing values****"}}