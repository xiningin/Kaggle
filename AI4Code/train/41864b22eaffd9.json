{"cell_type":{"a8f4e3bf":"code","3e6649c9":"code","515a0d1a":"code","9b930e20":"code","ac8b0753":"code","09868b8f":"code","668ae171":"code","89348896":"code","ac354e51":"code","bee853d5":"code","f64bb43f":"code","407f43bc":"code","4a4916ac":"code","1d211d79":"code","4fc58053":"code","7f6d3e35":"code","e535b6c8":"code","9dcf0b12":"code","5d7c6adc":"code","d1b49c05":"code","b1ac652e":"code","2c4cf431":"code","14919e92":"code","83bc68ce":"code","151ddbeb":"code","5088c9f8":"code","ff665cbd":"code","1ad059ac":"code","f7da39ab":"code","62265fb9":"code","a7fcf06f":"code","d96e209b":"code","03d32124":"code","a3538c06":"code","99746c9b":"code","b73c901e":"code","29021a88":"code","26f4231d":"code","85d551ce":"code","3b8fa335":"code","90fd2114":"markdown","f95f6fe2":"markdown","ad4ce1b2":"markdown","8478292b":"markdown","165bb02e":"markdown"},"source":{"a8f4e3bf":"# Import Main Libraries for Dataframe and Visualisation\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport seaborn as sns\n","3e6649c9":"df = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")\n\ndf.head()","515a0d1a":"# Check the Shape of the Data \ndf.shape","9b930e20":"# Check the Column Names of the Data\ndf.columns","ac8b0753":"# check the Stats of the Data \ndf.describe().transpose() # i have transpose because length of columns more","09868b8f":"# Lets Check for the NULL Values in the Data \n\ndf.isnull().sum()","668ae171":"# Lets Visualize Price Column to understand more \nplt.figure(figsize=(10,6))\nsns.distplot(df['price'])","89348896":"sns.countplot(df['bedrooms']) # Highest Sold bedrooms are 3","ac354e51":"df.sort_values('price',ascending=False).head(20) # Max price 7700000","bee853d5":"len(df)*(0.01)","f64bb43f":"non_top_1_perc = df.sort_values('price',ascending=False).iloc[216:]","407f43bc":"plt.figure(figsize=(12,8))\nsns.scatterplot(x='long',y='lat',\n                data=non_top_1_perc,hue='price',\n                palette='RdYlGn',edgecolor=None,alpha=0.2)","4a4916ac":"sns.boxplot(x='waterfront',y='price',data=df)","1d211d79":"df = df.drop('id',axis=1)","4fc58053":"df['date'] = pd.to_datetime(df['date'])","7f6d3e35":"df['month'] = df['date'].apply(lambda date:date.month)\ndf['year'] = df['date'].apply(lambda date:date.year)\n","e535b6c8":"sns.boxplot(x='year',y='price',data=df)","9dcf0b12":"df = df.drop('date',axis=1)","5d7c6adc":"df = df.drop('zipcode',axis=1)","d1b49c05":"# could make sense due to scaling, higher should correlate to more value\ndf['yr_renovated'].value_counts()","b1ac652e":"df['sqft_basement'].value_counts()","2c4cf431":"X = df.iloc[:,df.columns != 'price']\ny = df.iloc[:,df.columns == 'price']","14919e92":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler","83bc68ce":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=42)","151ddbeb":"scaler = MinMaxScaler()","5088c9f8":"X_train= scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\nprint(X_train.shape)\nprint(X_test.shape)","ff665cbd":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation\nfrom tensorflow.keras.optimizers import Adam","1ad059ac":"model = Sequential()\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='adam',loss='mse')","f7da39ab":"model.fit(x=X_train,y=y_train.values,\n          validation_data=(X_test,y_test.values),\n          batch_size=128,epochs=200)","62265fb9":"losses = pd.DataFrame(model.history.history)\nlosses.plot()","a7fcf06f":"from sklearn.metrics import mean_squared_error,mean_absolute_error,explained_variance_score\n","d96e209b":"predictions = model.predict(X_test)\n","03d32124":"mean_absolute_error(y_test,predictions)","a3538c06":"np.sqrt(mean_squared_error(y_test,predictions))","99746c9b":"explained_variance_score(y_test,predictions)","b73c901e":"df['price'].mean()","29021a88":"df['price'].median()","26f4231d":"# Our predictions\nplt.scatter(y_test,predictions)\n\n# Perfect predictions\nplt.plot(y_test,y_test,'r')","85d551ce":"errors = y_test.values.reshape(6484, 1) - predictions","3b8fa335":"sns.distplot(errors)","90fd2114":"By Srinivasa V\n### House Sales in King County, USA, Using Deep Learning \n","f95f6fe2":"in the above code we can compare between \n* mean and Sd and mean and median for outliers \n* min value and max value \n* Exp : when mean = median = mode are equal means data normally distributed\n","ad4ce1b2":"* In the Above plot we analyze that most data between 0 to 1000000 ","8478292b":"### Lets Go through All the Features Available\n* id - Unique ID for each home sold\n* date - Date of the home sale\n* price - Price of each home sold\n* bedrooms - Number of bedrooms\n* bathrooms - Number of bathrooms, where .5 accounts for a room with a toilet but no shower\n* sqft_living - Square footage of the apartments interior living space\n* sqft_lot - Square footage of the land space\n* floors - Number of floors\n* waterfront - A dummy variable for whether the apartment was overlooking the waterfront or not\n* view - An index from 0 to 4 of how good the view of the property was\n* condition - An index from 1 to 5 on the condition of the apartment,\n* grade - An index from 1 to 13, where 1-3 falls short of building construction and design, 7 has an average level of construction and design, and 11-13 have a high quality level of construction and design.\n* sqft_above - The square footage of the interior housing space that is above ground level\n* sqft_basement - The square footage of the interior housing space that is below ground level\n* yr_built - The year the house was initially built\n* yr_renovated - The year of the house\u2019s last renovation\n* zipcode - What zipcode area the house is in\n* lat - Lattitude\n* long - Longitude\n* sqft_living15 - The square footage of interior housing living space for the nearest 15 neighbors\n* sqft_lot15 - The square footage of the land lots of the nearest 15 neighbors","165bb02e":"### Exploratory Data Analysis"}}