{"cell_type":{"1d9175bb":"code","546f63af":"code","79bdcea7":"code","98fa8dc8":"code","bd4d4ef5":"code","33cdd3d5":"code","2ab42302":"code","83bbd536":"code","c598ab94":"code","930aef64":"code","9b977260":"code","f5e3b82b":"code","2930ceba":"code","d7868579":"code","ad543d42":"code","2bcdc4a6":"code","bc143426":"markdown","ec5339ca":"markdown","a78f2bc4":"markdown","d9413cc8":"markdown","9ea70948":"markdown","f3139988":"markdown","867f9af8":"markdown"},"source":{"1d9175bb":"from pathlib import Path\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","546f63af":"data_dir = Path(\"\/kaggle\/input\/imdb-extensive-dataset\/\")","79bdcea7":"principals = pd.read_csv(data_dir\/'IMDb title_principals.csv')\nnames = pd.read_csv(data_dir\/'IMDb names.csv')\nmovies = pd.read_csv(data_dir\/'IMDb movies.csv')\nratings = pd.read_csv(data_dir\/'IMDb ratings.csv')","98fa8dc8":"uk_people = names[names['place_of_birth'].str.endswith(\"UK\").fillna(False)]['imdb_name_id'].unique().tolist()\nusa_people = names[names['place_of_birth'].str.endswith(\"USA\").fillna(False)]['imdb_name_id'].unique().tolist()","bd4d4ef5":"uk_directors = principals.query(\"imdb_name_id in @uk_people and category == 'director'\")['imdb_name_id'].unique().tolist()\nusa_directors = principals.query(\"imdb_name_id in @usa_people and category == 'director'\")['imdb_name_id'].unique().tolist()","33cdd3d5":"uk_directors_movies = principals.query(\"imdb_name_id in @uk_directors\")['imdb_title_id'].unique().tolist()\nusa_directors_movies = principals.query(\"imdb_name_id in @usa_directors\")['imdb_title_id'].unique().tolist()\n\nprint(len(uk_directors_movies), len(usa_directors_movies))","2ab42302":"movies['year'] = movies['year'].astype(str).str[-4:].astype(int)\nsubset_movies = movies.query(\"year > 1979 and year < 2020 and language == 'English'\")\nsubset_movies = subset_movies[subset_movies['country'].str.contains(\"USA\").fillna(False)]\n\nprint(subset_movies.shape)","83bbd536":"uk_directors_movies = subset_movies.query(\"imdb_title_id in @uk_directors_movies\")['imdb_title_id'].unique().tolist()\nusa_directors_movies = subset_movies.query(\"imdb_title_id in @usa_directors_movies\")['imdb_title_id'].unique().tolist()\n\nprint(len(uk_directors_movies), len(usa_directors_movies))          ","c598ab94":"rating_columns = ['imdb_title_id', 'weighted_average_vote', 'total_votes', 'mean_vote', 'median_vote', \n                  'us_voters_rating', 'us_voters_votes', 'non_us_voters_rating', 'non_us_voters_votes']\n\n# ratings[rating_columns]","930aef64":"uk_directors_ratings = ratings.query(\"imdb_title_id in @uk_directors_movies\")[rating_columns]\nusa_directors_ratings = ratings.query(\"imdb_title_id in @usa_directors_movies\")[rating_columns]\n\nuk_directors_ratings['director_country'] = 'UK'\nusa_directors_ratings['director_country'] = 'USA'\nall_ratings = pd.concat([uk_directors_ratings, usa_directors_ratings])","9b977260":"sns.displot(data=all_ratings, x='mean_vote', kind='kde', rug=True, hue='director_country');","f5e3b82b":"# fig, ax = plt.subplots(1,2)\n# sns.histplot(data=uk_directors_ratings, x='mean_vote',  kde=True, ax=ax[0]);\n# sns.histplot(data=usa_directors_ratings, x='mean_vote', kde=True, ax=ax[1]);\n# fig.show()","2930ceba":"from statsmodels.stats.power import tt_ind_solve_power\n\nalpha = 0.01\nbeta = 0.01\npower = 1 - beta\nd = 0.5\n\nN = int(tt_ind_solve_power(effect_size=d, nobs1=None, alpha=alpha, power=power, ratio=1.0, alternative='two-sided')) + 1\nprint(N)","d7868579":"from statsmodels.stats.weightstats import ttost_ind\n\nx1 = all_ratings.query(\"director_country == 'UK'\")['mean_vote']\nx2 = all_ratings.query(\"director_country == 'USA'\")['mean_vote']\n\nprint(len(x1), len(x2))          ","ad543d42":"from statsmodels.stats.power import tt_ind_solve_power\n\nalpha = 0.01\nd = 0.5\nnobs1 = len(x1)\nratio = len(x2)\/nobs1\n\npower = tt_ind_solve_power(effect_size=d, nobs1=nobs1, alpha=alpha, power=None, ratio=ratio, alternative='two-sided')\nprint(power)","2bcdc4a6":"p, _low, _upp = ttost_ind(x1=x1, x2=x2, low=-0.5, upp=0.5, usevar='unequal')\n\nif p < alpha:\n    print(\"Ratings for British and American directors are equivalent\")\nelse:\n    print(\"Ratings for British and American directors are significantly different\")","bc143426":"# Data Preparation","ec5339ca":"# Inference","a78f2bc4":"#### Q3) Justify your sample size.\n\nTo achieve an $\\alpha$ = 0.05 and $\\beta$ = 0.05 for a two-sided equivalence test, $N$ = 105","d9413cc8":"#### Q1) Write down your theoretical hypothesis.\nThere is no difference in the average rating garnered by movies made by British and American directors.","9ea70948":"Q4) Specify the statistical test you will conduct. \n\nEquivalence test with equivalence interval of $d$ = [-0.5, 0.5]","f3139988":"Data dictionary: https:\/\/www.imdb.com\/interfaces\/","867f9af8":"#### Q2) Write down which dependent variables you will measure.\nThe mean of ratings for movies released in the USA between 1980 and 2019, made by British verus American directors."}}