{"cell_type":{"934e4fbc":"code","1b5209d2":"code","c5ebe773":"code","d57e55e4":"code","33064465":"code","7d90e2b8":"code","b125f675":"code","0c98c76c":"code","a6622cdf":"code","cea73289":"code","4e8e4845":"code","6fe60991":"code","cc590f12":"markdown","b1ee433e":"markdown","d521ee1f":"markdown"},"source":{"934e4fbc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.preprocessing import StandardScaler\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","1b5209d2":"train_df=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","c5ebe773":"plt.figure(figsize=(5,5))\nsns.set_style('darkgrid')\nsns.countplot(x='Survived',hue='Embarked',data=train_df)\n","d57e55e4":"sns.countplot(x='Survived',hue='Pclass',data=train_df)\nprint(train_df.columns)","33064465":"train_df.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)\ntest_df.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)","7d90e2b8":"train_df['Total_mem']=train_df['SibSp']+train_df['Parch']\ntest_df['Total_mem']=test_df['SibSp']+test_df['Parch']\n\ntest_df.isna().sum()","b125f675":"train_df.drop(['SibSp','Parch'],axis=1,inplace=True)\ntest_df.drop(['SibSp','Parch'],axis=1,inplace=True)\n\n\ntrain_df[['Embarked']]=train_df[['Embarked']].fillna(train_df.mode()['Embarked'][0])\ntrain_df[['Age']]=train_df[['Age']].fillna(train_df['Age'].mean())\n\n\ntest_df[['Fare']]=test_df[['Fare']].fillna(test_df.mode()['Fare'][0])\ntest_df[['Age']]=test_df[['Age']].fillna(test_df['Age'].mean())","0c98c76c":"sex=pd.get_dummies(train_df['Sex'])\nembarked=pd.get_dummies(train_df['Embarked'])\ntrain_df=pd.concat([train_df,sex,embarked],axis=1)\n\nsex=pd.get_dummies(test_df['Sex'])\nembarked=pd.get_dummies(test_df['Embarked'])\ntest_df=pd.concat([test_df,sex,embarked],axis=1)","a6622cdf":"train_df.drop(['Sex','Embarked'],axis=1,inplace=True)\ntest_df.drop(['Sex','Embarked'],axis=1,inplace=True)","cea73289":"X=np.array(train_df.drop(['Survived'],axis=1))\ny=np.array(train_df['Survived'])\nX=StandardScaler().fit_transform(X)\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=.2)\n\ndf=test_df['PassengerId']\ntest_df.drop(['PassengerId'],axis=1,inplace=True)\npred=np.array(test_df)\npred=StandardScaler().fit_transform(pred)","4e8e4845":"clf=RandomForestClassifier(criterion='gini', n_estimators=700,\n                             min_samples_split=10,min_samples_leaf=1,\n                             max_features='auto',oob_score=True,\n                             n_jobs=-1)\n\n\n\nclf.fit(X,y)\nprediction=clf.predict(pred)","6fe60991":"final={'PassengerId':df,\n        'Survived':prediction}\n\nsubmission=pd.DataFrame(data=final)\nsubmission.to_csv('final_prediction.csv',index=False)","cc590f12":"# Plotting and dropping features.","b1ee433e":"# Merging features and encoding categorical features.","d521ee1f":"# Model Training and Prediction."}}