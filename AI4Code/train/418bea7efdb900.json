{"cell_type":{"f5726704":"code","122f45e8":"code","f447e443":"code","e9bcbedc":"code","f49a1241":"code","8ee73a93":"code","055d4260":"code","6b98dd02":"code","c1bf7bf1":"code","8110d534":"code","c3718190":"markdown","439dca4d":"markdown","c6b10845":"markdown","c44b46ce":"markdown","2eb34fa9":"markdown","fdf9b6ba":"markdown","4b594e16":"markdown","3fd53df0":"markdown","e8d1ced7":"markdown","c9800f57":"markdown","9176512f":"markdown","302dc971":"markdown","73924948":"markdown","ece19129":"markdown","a8ad3f8d":"markdown","0ab2f89d":"markdown","0552376a":"markdown","98bf4069":"markdown"},"source":{"f5726704":"import pandas as pd # pandas is used to read and manipulate data \nimport os\ndata_path = '\/kaggle\/input\/google-smartphone-decimeter-challenge' # specifying the data path\nprint(os.listdir(data_path))","122f45e8":"train_location = pd.read_csv(data_path+'\/baseline_locations_train.csv') # read_csv is used to read the csv files\ntest_location = pd.read_csv(data_path+'\/baseline_locations_test.csv')","f447e443":"train_location.columns # .columns is used to print features in our dataset","e9bcbedc":"train_location.head() # head is used print first five rows in data","f49a1241":"train_location.isna().any() # isna is used to check for nan values","8ee73a93":"train_location.collectionName.nunique() # nunique is used to find the total number of unique items ","055d4260":"import plotly.express as pe # plotly.express is used for beautiful visualization\nparent_folder = train_location.groupby(\"collectionName\")['collectionName'].count().reset_index(name = 'Count of files in each folder')\nbar_chart = pe.bar(parent_folder, x='collectionName', y='Count of files in each folder', title = 'Number of files in each folder',color_discrete_sequence =['orange']*len(train_location))\nbar_chart.show()","6b98dd02":"train_location.phoneName.nunique() # nunique is used to find the total number of unique items ","c1bf7bf1":"import plotly.express as pe # plotly.express is used for beautiful visualization\nphones = train_location.groupby('phoneName')['phoneName'].count().reset_index(name='count of phone used')\npie_chart = pe.pie(phones, values='count of phone used', names='phoneName', title='Phones used in data collection')\npie_chart.show()","8110d534":"# Reference code : https:\/\/www.kaggle.com\/tomwarrens\/first-eda-with-geocoordinates  by Tommaso Guerrini\nimport folium # folium is easy to visualize\nmaps = folium.Map(location=[37.453128,-122.154313], tiles='openstreetmap', zoom_start = 10) # creating a map within the specified locations\nsample_locations = train_location.sample(200).reset_index(drop = True) # randomly sampling 1000 data points\nfor j in range(len(sample_locations)): # for every data point \n    try:\n        folium.Marker(location=[sample_locations['latDeg'][j], # marking the location\n                                sample_locations['lngDeg'][j]],\n                        popup=sample_locations['collectionName'][j],\n                        icon = folium.Icon(prefix = 'fa', icon = \"map-pin\", color = 'blue'),\n                        fill_color='#132b5e', num_sides=3, radius=5).add_to(maps)\n    except:\n        continue\n        \nmaps","c3718190":"        Pixel4 phone is used most , around 36.7 % to collect the data.","439dca4d":"        We can see features such as latitude and longitude are present","c6b10845":"<h3><font color='#42d7f5'>Reading data<\/font><\/h3>","c44b46ce":"<h3><font color='#42d7f5'>Exploring phoneName features<\/font><\/h3>","2eb34fa9":"        Latitude and longitude are present in decimal degress","fdf9b6ba":"        Most of the parent folders has more than 4000 files , 2021-01-04-us-rwc-1 file has most number of files \n        \n        check below links\n        \n        *. https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.groupby.html\n        *. https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.count.html","4b594e16":"<h3><font color='#32a89e'>More work in progress, If you like my kernel , please upvote it !....<\/font><\/h3>","3fd53df0":"<h3><font color='#42d7f5'>Exploring latitude and longitude features<\/font><\/h3>","e8d1ced7":"<h3><font color='#42d7f5'>Checking for nan values<\/font><\/h3>","c9800f57":"        collectionName is the name of the grandparent folder","9176512f":"    There are around 29 folders ","302dc971":"<h3><font color='#f54251'> General information<\/font><\/h3>\n\n    Global Navigation Satellite System (GNSS) provides raw signals, which the GPS chipset uses to compute a position. Current mobile phones only offer 3-5 meters of positioning accuracy. While useful in many cases, it can create a \u201cjumpy\u201d experience. For many use cases the results are not fine nor stable enough to be reliable. Machine learning algorithms and precision GNSS algorithms are expected to improve the accuracy and provide billions of Android phone users with a more fine-tuned positioning experience.\n        ","73924948":"<h3><font color='#42d7f5'>Exploring collectionName features<\/font><\/h3>","ece19129":"        Most of the locations are in us only.","a8ad3f8d":"<h3><font color='#42f5c5'>Exploring data<\/font><\/h3>","0ab2f89d":"    There are no null values in our datasets \n    \n    check this link : https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.isna.html for more details","0552376a":"    There are 7 unique phones used for this data collection","98bf4069":"<h3><font color='#f54251'> Data description<\/font><\/h3>\n\n    We will use data collected from the host team\u2019s own Android phones to compute location down to decimeter or even centimeter resolution, if possible. we will have access to precise ground truth, raw GPS measurements, and assistance data from nearby GPS stations, in order to train and test our submissions.\n    \n    This challenge provides data from a variety of instruments useful for determining a phone's position: signals from GPS satellites, accelerometer readings, gyroscope readings, and more.\n\n    As this challenge\u2019s design is focused on post-processing applications such as lane-level mapping, future data along a route will be available to generate positions as precisely as possible. You may also make use of information from neighboring phones to aid your estimation, as many routes may be represented by multiple phones. In order to encourage the development of a general GNSS positioning algorithm, in-phone GPS chipset locations will not be provided, as they are derived from a manufacturer proprietary algorithm that varies by phone model and other factors.\n    \n       Please check this link : https:\/\/www.kaggle.com\/c\/google-smartphone-decimeter-challenge\/data to know more about data.\n"}}