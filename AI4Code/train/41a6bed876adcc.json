{"cell_type":{"588da0e4":"code","6d399e94":"code","869c7659":"code","e166aa22":"code","fbe9c07b":"code","7dacfab8":"code","e6b8e360":"code","8a73540c":"code","4f313ccb":"code","8982d7da":"code","8a9260e7":"code","50348e51":"code","c1f2ef5d":"code","32a501c2":"code","7cf83644":"code","88557928":"code","ff9a4f91":"code","2befa1f0":"code","8477bdf9":"code","ae4e319e":"code","0913202a":"code","2aeea85a":"code","9103954e":"code","fba279a8":"markdown","0808106b":"markdown","5fc0a98c":"markdown","b9b96622":"markdown","6eb28d48":"markdown","50dff24d":"markdown","57cebf23":"markdown","700e011c":"markdown","127a9c6e":"markdown","1dfb8873":"markdown","cecfedc2":"markdown","63f9518a":"markdown"},"source":{"588da0e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndf = pd.read_csv(\"..\/input\/titanic\/train.csv\")\n\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d399e94":"df.loc[:5,[\"SibSp\", \"Parch\"] ]","869c7659":"df.loc[:5,[\"Age\", \"Fare\"] ]","e166aa22":"df.loc[:5,[\"Survived\", \"Embarked\", \"Sex\"] ]","fbe9c07b":"df.loc[:5,[\"Pclass\"] ]","7dacfab8":"dis = 5\nprint(type(dis)) # Discreate Data\nprint(dis)","e6b8e360":"dis = 1.59\nprint(type(dis)) # Discreate Data\nprint(dis)","8a73540c":"print(3\/5)\nprint(type(3\/5))","4f313ccb":"#bool\nif 3 > 2:\n    print(\"Yes\")\nprint(type(True))","8982d7da":"# None\ns = None\nprint(s)\nprint(type(s))","8a9260e7":"#List \na = [1, 1.4, \"THis is a list\", True, None]\nprint(a)\nprint(type(a))","50348e51":"import pandas as pd","c1f2ef5d":"# Storeing the exact data path in data_path variable\ndata_path = \"..\/input\/titanic\/train.csv\"\n#read data form .csv and store it to pandas data frame\ndf = pd.read_csv(data_path)","32a501c2":"# .head() will return first five rows\ndf.head()","7cf83644":"#we can view also prefered rows we want.\ndf.head(6)","88557928":"df.columns","ff9a4f91":"# return all rows for Name column\ndf.loc[:, \"Name\"]","2befa1f0":"#return first ten rows for Name, Survived and PassengerId columns\ndf.loc[:3, [\"Name\", \"Survived\", \"PassengerId\"]]","8477bdf9":"#return 10 to 20 rows for Name, Survived and PassergerId columns\ndf.loc[20:25, [\"Name\", \"Survived\", \"PassengerId\"]]","ae4e319e":"#show all rows and column\ndf.iloc[:,:]","0913202a":"df.iloc[1:4, 1:4]","2aeea85a":"# show Name , Survived and PassegerId column\ndf.iloc[:5, [3,1,2]]","9103954e":"pd.isnull(df.Cabin).sum()","fba279a8":"**Ordinal Data:** Ordinal data are those which represent a distinct value but also maintain an order. Ex: Tshirt size Small, Medium, Large.   \nIn titanic data base **Pclass**(ticket class, 1 = 1st, 2 = 2nd and 3 = 3rd )","0808106b":"### .iloc()\n.iloc() is a integer based slicing. Like .loc() it take input two operator row and column. Difference between .loc() is it can take column number as input.","5fc0a98c":"# Thinking in Python\nFrom now on we will think like python.\n### Data Types in Python \nSome of the data types in python are.\n*     Integer\n*     boolean\n*     string\n*     float\n*     set\n*     list\n*     None etc.\n>Now I will try to use my previous knowledge of **types of data** and will try put python datatypes in  those categories.\n### Quantitative Data:\n*      Discrete: integer\n*      Continuous: float.\n","b9b96622":"### Qualitative Data:\n*       Nominal: boolean, string, None.\n*       Ordinal: list(it can hold ordinal information like visual, string data etc).","6eb28d48":"# Missing values\nWhen reading a dataset using Pandas, there is a set of values including 'NA', 'NULL', and 'NaN' that are taken by default to represent a missing value. The full list of default missing value codes is in the [read_csv](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.read_csv.html) documentation. This document also explains how to change the way that 'read_csv' decides whether a variable's value is missing.","50dff24d":"### Qualitative\/ Categorical Data:\n   > Qualitative\/ Categorical variable deal with characteristic of the data. It can\u2019t be measured by a metric. Ex: Gender, Hair color, Language etc.\n    \n**Nominal Data:** When a data is labeled or assigned is called nominal data. Nominal doesn\u2019t have ordered so if we change the order it doesn\u2019t change the data meaning. Ex: Suppose tell us the list of  natural hair color? Blonde, Black, Red etc. \nIn titanic database **Survived**, **Embarked**, **Sex** are Nominal Qualitative Data.\n\u200b","57cebf23":"# Summary\nThis notebook is inspired from the course [Understanding and Visualizing Data](https:\/\/www.coursera.org\/learn\/understanding-visualization-data) which I have taken. I wanted to share my knowledge. If I tried to put all my knowledge about data visualization in here I think It will be a large notebook and ambiguous for beginners to understand. That\u2019s why I am going to write four notebook to maintain continuity.\nIn this notebook I will give some **definition**, **data type** with example and I will introduce to **python libraries**. \n### What is Statistics?\nStatistics is a methodology which help us to answer important question about data. The reason to develop data analysis is to get sight of a data when they are misleading.\n\n### Difference Between Statistic and Statistics?\n**Statistic** is numerical or graphical summery of a collection of data. Suppose from 1000 employee in a company we choose 100 employee to get average salary of the company.\nOther Ex:\n     *       Population increase in a country over a decade.\n     *       Minimum score of student in final Exam.\nSo if we give a proper look on the example we can see the data was already there. We just to tried to find out numerical answer like average or minimum. \n\n**Statistics** is focus on methodology. Finding out tools to deal with data collection, organization, data interpretation etc. Statistics always start with a question. Like,\n     *    Does students school distance hamper their GPA?\n If the data doesn\u2019t exist statistician collect data then by developing tools, method they find out the asked question.  \n\n### Method of Statistics.\n\nStatistics Method is divided into two categories.\n![image.png](attachment:image.png)\n**Descriptive Statistics**: It try to describe find out the feature of the data and then summaries the data by raw observation. Ex: mean, standard deviation.\n\n**Inferential Statistics**: It try to study from a sample of data to give the answer. Inferential Statistics framework is under probability theory.","700e011c":"# View Data in Python\nPython programming language is rich with awesome library. In this notebook I will focus on **pandas** and **numpy** library. Here is the link of python document to know about python library more: [Python Documentation](https:\/\/docs.python.org\/3\/).\n*     **Importing Libraries**:\n>When we use python we always has to declare the libraries at the beginning of python script.","127a9c6e":"### Different Perspective of Statistic:\n    \u2022 Decision Making \u2013 Company should by the stock or not\n    \u2022 Forecasting \u2013 Weather \n    \u2022 Summarizing data.\n    \u2022 Uncertainty of data etc.\n    \n### What is data?\nData are information.Data can be word, numerical value, observation, voice etc.\n# Types of Data.\nThe main intention of data visualization is to find out a summary of the data. Our data summer will be different depending on the data type. Suppose let\u2019s see our data titanic.  Here we easily can see that data all is not numeric. Here **Age**, Fair is numerical value but **Sex**, **Embarked** is not numerical value. If we want to know the average age of the passenger we easily find out by adding the Age column. But If we can\u2019t do the same thing for **Sex**, or **Embarked** column. So for different types of data we need to come up with approach. \n There are two types of variables:\n![image.png](attachment:image.png)\n### Quantitative Data:   \n   > Data which deal with number or which we can measure is quantitative data. Ex: Age, Height, Salary.\n\n**Discrete Data:** Just like the name Discrete data are distinct or individual value. We can count Discrete data but we can\u2019t measure it. Discrete data are integer value. Ex: Suppose How many children do you have. The answer can be 0,1 3, 5. But you can\u2019t have 2.5 children. It has to distinct value. \nIn titanic database **SibSp**(# of sibling\/ spouses), **Parch** (#of children\/ parents) are Discrete Quantitative data.\n","1dfb8873":" **Continuous Data:** Continuous data are those numerical data which can be measured but can not be counted. This type of data can be divided or reduced.Ex : Height, Weight. \nIn titanic database **Age**, **Fare** are Continuous Quantitative Data.","cecfedc2":"### .loc()\n.loc() is a label based searching. It takes 2 operator which is separated by \u201c,\u201d. The first one indicates row and the second one indicates column. Column name doesn\u2019t need to be in order.\n","63f9518a":"To gather information about column name and data types we will use the following function.Let\u2019s say we want to see specific column. We can do it using this three way.\n*     .loc()\n*     .iloc()\n*     .ix()"}}