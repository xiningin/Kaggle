{"cell_type":{"a387ebf8":"code","cdd0c3ad":"code","21d8f76b":"code","b2067c32":"code","4ee9d83f":"code","c545e869":"code","cfa4ca9e":"code","e84d1649":"code","b3eb04b4":"code","919c1fcf":"code","015fcaaa":"code","69608926":"code","f88b8c38":"code","0525f888":"code","877ce84c":"code","48017406":"code","1f8bb8ef":"code","52d3499b":"code","0a6f9213":"code","123f6726":"markdown","07c86da0":"markdown","10442bbb":"markdown","022805be":"markdown","57f92e96":"markdown","7bdeae80":"markdown","68263d39":"markdown","089cfe74":"markdown","1c4c99a3":"markdown","96ba0fc4":"markdown","73367062":"markdown","0d26593d":"markdown","e61f90e8":"markdown","99d901ba":"markdown","7d06dbfb":"markdown"},"source":{"a387ebf8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nos.chdir(\"\/kaggle\/input\/seattle-airbnb-data-preprocessing\/\")\nlisting = pd.read_csv(\"listings.csv\", \n                      parse_dates=['host_since', 'first_review', 'last_review'])\ncalendar = pd.read_csv(\"calendar.csv\", parse_dates=['date'])","cdd0c3ad":"calendar","21d8f76b":"listing","b2067c32":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('white')\nfig, ax1 = plt.subplots(figsize=(15,6))\nax2 = ax1.twinx()\ncalendar_available = calendar.groupby('date').apply(lambda x: 100 * len(x[x['available']=='t']) \/ len(x)).to_frame().rename(columns={0:'available'})\ncalendar_avgPrice = calendar.groupby('date').apply(lambda x: x.loc[x['available']=='t', 'price'].mean()).to_frame().rename(columns={0:'avgPrice'})\nsns.lineplot(x = calendar_available.index, y = 'available', ax=ax1,\n             data = calendar_available,color='r')\nsns.lineplot(x = calendar_avgPrice.index, y = 'avgPrice', ax=ax2,\n             data = calendar_avgPrice,color='b')\nax1.set_ylabel(\"% available\")\nax2.set_ylabel(\"average price\")\nfor tl in ax1.get_yticklabels():\n    tl.set_color('r')\nfor tl in ax2.get_yticklabels():\n    tl.set_color('b')\nax1.yaxis.label.set_color('r')\nax2.yaxis.label.set_color('b')\nsns.despine(left=True)\nplt.title(\"Percentage of Available Listings & Average Listing Price\")","4ee9d83f":"# listing[['host_id', 'host_since', 'num_days_as_host']]\nhost_growth = listing.groupby('host_id').apply(lambda x: x[['host_since', 'num_days_as_host']].iloc[0]).reset_index().sort_values('host_since')\nhost_growth = host_growth[host_growth['host_since'].notnull()]\nhost_count = host_growth.groupby('host_since').apply(len).to_frame().rename(columns={0:'host_count'})\nhost_count['cum_host'] = host_count['host_count'].cumsum()\nfig, ax = plt.subplots(figsize=(13, 6))\nsns.lineplot(x = host_count.index, y = 'cum_host', ax=ax,\n             data = host_count)\nax.set_title(\"Number of Hosts in the Seattle Area\")\nsns.despine(left=True)","c545e869":"host_growth.num_days_as_host.plot.hist()\nplt.xlabel(\"# of days since being an Airbnb Host\")","cfa4ca9e":"district_listing = listing[['id', 'host_id', 'host_since', 'host_listings_count', 'calculated_host_listings_count', 'neighbourhood_group_cleansed']]\ndistrict_listing","e84d1649":"fig, ax = plt.subplots(figsize=(13, 6))\ndistrict_listing.groupby('neighbourhood_group_cleansed').apply(len).sort_values().plot.barh(ax=ax)\nsns.despine(left=True)\nax.set_ylabel(\"Neighborhood\")\nax.set_xlabel(\"# of listings\")","b3eb04b4":"from pandas.tseries.offsets import MonthEnd\ndistrict_review = listing[['id', 'neighbourhood_group_cleansed', 'number_of_reviews', 'first_review']]\ndistrict_review = district_review[district_review['number_of_reviews']!=0].sort_values('first_review')\n\ndef get_cum_listing(district_group):\n    '''\n    Return monthly number of Airbnb listings by district\n    '''\n    return district_group.groupby(district_group['first_review'] + MonthEnd(0)).apply(len).asfreq('M').fillna(0).cumsum()\n\ndistrict_ts = district_review.groupby('neighbourhood_group_cleansed').apply(get_cum_listing).unstack().T.ffill().fillna(0)\ndistrict_ts['total'] = district_ts.sum(axis=1)\ndistrict_ts","919c1fcf":"fig, ax = plt.subplots(figsize=(13,6))\ndistrict_ts[['total', 'Other neighborhoods', 'Capitol Hill', 'Downtown', 'Central Area']].plot(ax=ax)\nax.set_ylabel(\"Number of Airbnb Listings\")\nax.set_xlabel(\"Date\")\nax.set_title(\"Growth in New Airbnb Listings by District\")\nsns.despine(left=True)","015fcaaa":"fig, ax = plt.subplots(figsize=(13,13))\nsns.heatmap(district_ts.iloc[:, :-1].T, cmap=\"Blues\", ax=ax)\nax.set_xticklabels(district_ts.index.strftime('%Y-%m'));\nax.set_xlabel(\"Date\")\nax.set_ylabel(\"District\")\nax.set_title(\"Airbnb Listing Growth by District\")","69608926":"price_rating = listing[['id', 'host_id', 'number_of_reviews','reviews_per_month',\n                        'review_scores_rating', 'review_scores_accuracy', 'review_scores_cleanliness', \n                        'review_scores_checkin', 'review_scores_communication', \n                        'review_scores_location', 'review_scores_value', 'price']]\nprice_rating = price_rating[price_rating['number_of_reviews']!=0]\nprice_rating['review_metric'] = (price_rating['review_scores_rating'] + price_rating[['review_scores_accuracy', 'review_scores_cleanliness', \n                                                                                      'review_scores_checkin', 'review_scores_communication', \n                                                                                      'review_scores_location', 'review_scores_value']].mean(axis=1) * 10) \/ 2\nprice_rating = price_rating[['id', 'host_id', 'number_of_reviews','reviews_per_month',\n                             'review_metric', 'price']]\nprice_rating","f88b8c38":"fig, ax = plt.subplots(figsize=(13,6))\np = ax.scatter(price_rating['review_metric'], price_rating['price'], s=10, c=price_rating['number_of_reviews'], cmap=\"Reds\")\ncolorbar = fig.colorbar(p)\ncolorbar.set_label(\"Number of Reviews\")\nsns.despine(left=True)\nax.set_xlabel(\"Review Score\")\nax.set_ylabel(\"Price\")\nax.set_title(\"Price vs Review Score\")","0525f888":"numeric_cols = ['room_type', 'accommodates', 'bathrooms', 'beds', 'bed_type', \n                'square_feet', 'guests_included']\ncat_cols = ['host_is_superhost', 'instant_bookable',\n            'has_Wireless_Internet', 'has_Essentials',\n            'has_Wheelchair_Accessible', 'has_Indoor_Fireplace',\n            'has_Carbon_Monoxide_Detector', 'has_Cats', 'has_Safety_Card',\n            'has_Shampoo', 'has_Hot_Tub', 'has_Other_pets', 'has_Pets_Allowed',\n            'has_Gym', 'has_First_Aid_Kit', 'has_BuzzerWireless_Intercom',\n            'has_Doorman', 'has_Suitable_for_Events', 'has_Fire_Extinguisher',\n            'has_Dogs', 'has_Pets_live_on_this_property', 'has_Breakfast',\n            'has_Heating', 'has_Laptop_Friendly_Workspace', 'has_Smoking_Allowed',\n            'has_Internet', 'has_Air_Conditioning', 'has_24-Hour_Check-in',\n            'has_TV', 'has_Elevator_in_Building', 'has_Pool', 'has_Cable_TV',\n            'has_Free_Parking_on_Premises', 'has_Washer', 'has_Iron',\n            'has_FamilyKid_Friendly', 'has_Kitchen', 'has_Dryer',\n            'has_Smoke_Detector', 'has_Hair_Dryer', 'has_Lock_on_Bedroom_Door',\n            'has_Hangers', 'property_type', 'neighbourhood_group_cleansed']","877ce84c":"from statsmodels.tsa.seasonal import seasonal_decompose\nplt.rcParams[\"figure.figsize\"] = (13,6)\nresult = seasonal_decompose(calendar_avgPrice, model='multiplicative', freq=7)\nfig = result.plot();","48017406":"result.seasonal.groupby(result.seasonal.index.dayofweek+1).mean().plot()\nplt.xlabel(\"Day of Week\")\nplt.title(\"Day of Week Effect (Multiplicative Effect on Price)\")\nsns.despine(left=True)","1f8bb8ef":"fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15,6))\nfig.suptitle(\"Average vs Median Price by District\", fontsize=20)\nrank = listing.groupby('neighbourhood_group_cleansed')['price'].mean().sort_values(ascending=False).index\nsns.barplot(x='price', y='neighbourhood_group_cleansed', data=listing, order=rank, ax=ax1)\nax1.set_ylabel(\"Neighborhood\")\nax1.set_xlabel(\"Average Price\")\nrank = listing.groupby('neighbourhood_group_cleansed')['price'].median().sort_values(ascending=False).index\nsns.barplot(x='price', y='neighbourhood_group_cleansed', data=listing, estimator=np.median, order=rank, ax=ax2)\nax2.set_ylabel(\"\")\nax2.set_xlabel(\"Median Price\")\nsns.despine(left=True)","52d3499b":"sns.boxplot(x='price', y='neighbourhood_group_cleansed', data=listing, order=rank)\nsns.despine(left=True)","0a6f9213":"listing[numeric_cols]","123f6726":"## I. Seasonality Effect on Price","07c86da0":"### Insight: \n1. Fridays and Saturdays have the highest price on average\n2. From the residual plot, price volatility are relatively low during winter","10442bbb":"## Q3: How do price and rating relate with each other?","022805be":"### For each house listing, we could likely use column ```first_review``` as our proxy for the time when the house is listed on Airbnb. It roughly gives us the date when the house first generated profit","57f92e96":"### II. Location Effect on Price","7bdeae80":"### Insights\n- Generally speaking, listings with low review scores have low price, while high ratings do not necessarily means high price. \n- Listings with many reviews usually have review scores greater than 85.\n- High price listings generally do not have many reviews","68263d39":"## Q2: What\u2019s the business growth trend?\n\n### 1. Analyze growth trend for # of hosts joining the platform","089cfe74":"# Seattle Airbnb Open Data EDA\nCredit goes to https:\/\/www.kaggle.com\/haataa\/interesting-facts-about-airbnb-boston-data for thoughtgful ressearch questions!","1c4c99a3":"### 2. Analyze # of listings broken down by district","96ba0fc4":"### Insight:\n- Top 5 Most Expensive: Downtown, Magnolia, Queen Anne, Cascade, West Seattle\n- Magnolia and Interbay have wide error bar in the bootstrap estimate; possibly because sample size is small, or the variances of price within those districts are high","73367062":"**Key Findings:**\n1. Percentage of available listing grows steadily at the beginning of year from Jan to April; and second half of year.\n2. There are two sharp drops of availability: April and July. There might be some famous annual events in the city that cause the sharp dop in availability.\n3. Price shows weekly seasonality, with sharp spike on weekends.\n4. Price grows for the first half of the year, and peaks around summer, then decrease steadily.","0d26593d":"### We could quickly identify districts with the highest growth: **Capitol Hill**, **Downtown** and **Central Area**. Later we can analyze the price level broken down by district","e61f90e8":"**Key Findings**\n - The growth in the number of hosts on the platform shows exponential trend","99d901ba":"## Q4: What are the major factors that influence price and ratings?\nCredit to https:\/\/www.kaggle.com\/aleksandradeis\/airbnb-seattle-reservation-prices-analysis\n\n**Factors that influence price:**\n- Time of the year, when reservation is made, affects the price;\n- Amenities offered like Wi-Fi and TV should be considered in the analysis, as they also might have great influence on price;\n- Neighborhood","7d06dbfb":"## Q1: What\u2019s the home availability pattern?"}}