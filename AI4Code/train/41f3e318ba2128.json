{"cell_type":{"128011e5":"code","dbb43cbf":"code","86e1c085":"code","e222985f":"code","e202d156":"code","63ef2084":"code","2ded922c":"code","26bde8ac":"code","7b084dfe":"code","8890b2f5":"code","935276ee":"code","7a18e2d0":"code","0650a358":"code","f13879b4":"code","354a7e49":"code","57e12f1f":"code","06679b3d":"code","0aef39a2":"code","12ed5374":"code","342a0f4a":"code","6e2a14f4":"code","b4ecaad8":"code","8dd0fa42":"code","05deca0f":"code","c56c5242":"code","3fa5f2e2":"code","6cef4f70":"code","2ff37fb9":"code","55b6fe6a":"code","435351bd":"code","8d220770":"code","dfa65715":"code","a5ee40b2":"code","c807e378":"code","d356133b":"code","589209ad":"code","c34459ba":"code","3eff84c8":"code","9fb74164":"code","1ee48209":"code","57496bce":"code","6cd595ab":"code","1f25483d":"code","9ea75ab0":"code","38ff66dc":"code","618b5ab5":"code","3e76cc2c":"code","cf2ef62b":"code","36294a94":"code","7f0aa3e3":"code","93fd0443":"code","51facc34":"code","b50aa81d":"code","92db1615":"code","d3c87f9f":"code","a387fe07":"code","9733d77c":"code","868062ab":"code","0db1fb56":"code","d1442196":"code","26fbbd2f":"code","1a084abe":"markdown","c11611c0":"markdown","76eed137":"markdown","70937ef9":"markdown","d31119ba":"markdown","0cdf8f94":"markdown","5f5b8949":"markdown","7c003662":"markdown","6d4e508a":"markdown","8e0f0a2a":"markdown","95a60259":"markdown","6915abac":"markdown","9bea2df3":"markdown","466c75a9":"markdown","dbf1f1f1":"markdown","2ecf0f4a":"markdown","d81b2c33":"markdown","6ce91dae":"markdown","7d13cbc5":"markdown","124d7750":"markdown","48d5263a":"markdown","4528e525":"markdown","80ed7be9":"markdown","876c04f6":"markdown","4a3acac9":"markdown","bd8ebd5b":"markdown","a05dd85f":"markdown","5292730f":"markdown","4394250a":"markdown","b67a3efc":"markdown","4379bde0":"markdown","de7d8f9c":"markdown","cd13efcf":"markdown","e362730a":"markdown","b155248d":"markdown","5fae76b8":"markdown","f5f9d488":"markdown","1a45b7d5":"markdown","f697b65a":"markdown","3eb8a2a2":"markdown","0b1189d9":"markdown","ec43ac38":"markdown","540158e8":"markdown","2ad253bc":"markdown","dd1b5a7d":"markdown","a8b0d4a8":"markdown","635be632":"markdown","f7e39be1":"markdown","ac8ef581":"markdown","b8263023":"markdown","08ff385e":"markdown","df0951ed":"markdown","0b3a91dd":"markdown","7533c777":"markdown","8ab38d28":"markdown","a97b852c":"markdown","4f0177b8":"markdown","d0a2e84a":"markdown","69db7845":"markdown"},"source":{"128011e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt #data visualization\nimport seaborn as sns\n\nfrom datetime import datetime # date type\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dbb43cbf":"train = pd.read_csv('..\/input\/train.csv')  # training dataframe\ntest = pd.read_csv('..\/input\/test.csv')  # testing dataframe","86e1c085":"print(\"train.csv. Shape: \",train.shape)\nprint(\"test.csv. Shape: \",test.shape)","e222985f":"pd.DataFrame({'null_count' : train.isnull().sum()})","e202d156":"pd.DataFrame({'null_count' : test.isnull().sum()})","63ef2084":"train.head()","2ded922c":"train['price'].describe()","26bde8ac":"f, ax = plt.subplots(figsize = (8,6))\nsns.distplot(train['price'])\nprint(\"%s -> Skewness: %f, Kurtosis: %f\" %  ('price',train['price'].skew(), \n                                                     train['price'].kurt()))","7b084dfe":"#id\ub294 \uc608\uce21\ud558\ub294\ub370 \ud544\uc694 \uc5c6\uc73c\ubbc0\ub85c \uc0ad\uc81c\ud558\uaca0\uc2b5\ub2c8\ub2e4.\ntrain_id = train['id']\ndel train['id']","8890b2f5":"#\uc0c1\uad00\uad00\uacc4 \ud655\uc778\nk=20 #\ud788\ud2b8\ub9f5 \ubcc0\uc218 \uac2f\uc218\ncorrmat = train.corr() #\ubcc0\uc218\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ncols = corrmat.nlargest(k, 'price')['price'].index #price\uae30\uc900\uc73c\ub85c \uc81c\uc77c \ud070\uc21c\uc11c\ub300\ub85c 20\uac1c\ub97c \ubf51\uc544\ub0c4\ncm = np.corrcoef(train[cols].values.T)\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(data = cm, annot=True, square=True, fmt = '.2f', linewidths=.5, cmap='Reds', \n            yticklabels = cols.values, xticklabels = cols.values)","935276ee":"train['date'].describe()","7a18e2d0":"f, ax = plt.subplots(3, 2, figsize = (20,20))\n\ncolumns = ['sqft_living', 'sqft_living15', 'sqft_lot', 'sqft_lot15','sqft_above', 'sqft_basement']\n\ncount = 0\nfor row in range(3):\n    for col in range(2):\n        sns.distplot(train[columns[count]], ax=ax[row][col])\n        print(\"%s -> Skewness: %f, Kurtosis: %f\" %  (columns[count],train[columns[count]].skew(), \n                                                     train[columns[count]].kurt()))\n        count += 1","0650a358":"train[train['sqft_living']>=6000]","f13879b4":"f, ax = plt.subplots(figsize=(8,6))\nsns.regplot(x='sqft_living', y='sqft_living15', data=train[['sqft_living','sqft_living15']])","354a7e49":"# sqft_living15\uc5d0 \ube44\ud574 \uc0c1\ub2f9\ud788 \uc8fc\uac70\uacf5\uac04\uc774 \ud070\uacbd\uc6b0\ub294 \ub300\uc800\ud0dd\uc77c \uac83\uac19\uc2b5\ub2c8\ub2e4.\n# \uc774\ub7f0 \ub300\uc800\ud0dd\ub4e4\uc774 \ub300\ubd80\ubd84\uc758 \uc8fc\ud0dd\ub4e4\uc758 \uac00\uaca9\uc744 \ub300\ubcc0\ud560 \uc218 \uc788\uc744\uae4c...?\ntrain[(train['sqft_living']>10000) ]","57e12f1f":"f, ax = plt.subplots(1, 2, figsize=(20,6))\nsns.regplot(x='sqft_living', y='price', data=train[['sqft_living','price']], ax=ax[0])\nsns.regplot(x='sqft_living15', y='price', data=train[['sqft_living15','price']], ax=ax[1])","06679b3d":"train[train['sqft_living']>7500].sort_values('sqft_living', ascending = False)","0aef39a2":"train[train['sqft_lot']>=900000]","12ed5374":"f, ax = plt.subplots(1, 3, figsize=(20,6))\nsns.regplot(x='sqft_lot', y='price', data=train[['sqft_lot','price']], ax=ax[0])\nsns.regplot(x='sqft_lot15', y='price', data=train[['sqft_lot15','price']], ax=ax[1])\nsns.regplot(x='sqft_lot', y='sqft_lot15', data=train[['sqft_lot','sqft_lot15']], ax=ax[2])","342a0f4a":"train[train['price']>4000000].sort_values(['sqft_lot','sqft_lot15'])","6e2a14f4":"len(train[train['sqft_living']!=(train['sqft_above']+train['sqft_basement'])])","b4ecaad8":"base_zero = len(train[train['sqft_basement']==0])\nbase_zero_not = len(train[train['sqft_basement']!=0])\ntotal_base = len(train['sqft_basement'])\n\nbasement_count = pd.Series([base_zero, base_zero_not])\nbasement_pnt = basement_count\/total_base*100\nbasement = pd.concat([basement_count, basement_pnt], axis=1, keys = ['Count', '%'])\nbasement.index = ['0\uc758\uac12', '0\uc744 \uc81c\uc678\ud55c \uac12']\nbasement","8dd0fa42":"f, ax = plt.subplots(figsize=(8,6))\nsns.regplot(x='sqft_basement', y='price', data=train[train['sqft_basement']!=0][['sqft_basement','price']])","05deca0f":"train[train['price']>4000000]","c56c5242":"data = pd.concat([train['price'], train['grade']], axis = 1)\nf, ax = plt.subplots(figsize = (8,6))\nfig = sns.boxplot(x='grade', y='price', data=data)","3fa5f2e2":"train[(train['grade'] == 11) & (train['price']>3000000)]","6cef4f70":"train[(train['price']>7000000)].sort_values('grade')","2ff37fb9":"train[(train['grade']== 13)].sort_values('price')","55b6fe6a":"f, ax = plt.subplots(figsize = (10,6))\nsns.boxplot(x='bathrooms', y='price', data=train[['bathrooms', 'price']])","435351bd":"train[(train['bathrooms'] == 4.5) & (train['price']>7000000)]","8d220770":"train[(train['bathrooms']>=6.25) & (train['bathrooms']<=7.5)].sort_values('bathrooms')","dfa65715":"train[(train['grade'] == 13) & (train['price']>= 2000000)].sort_values('price')","a5ee40b2":"train[(train['sqft_living']>=7000) & (train['grade'] >= 11)].sort_values('price')","c807e378":"train[(train['sqft_living']>=3500) & (train['grade'] == 7)].sort_values('price')","d356133b":"f, ax = plt.subplots(figsize = (8,6))\nsns.boxplot(x='bedrooms', y='price', data=train[['bedrooms', 'price']])","589209ad":"train[((train['bedrooms']==5) | (train['bedrooms'] == 6)) & (train['price']>=4000000)]","c34459ba":"f, ax = plt.subplots(figsize=(20,6))\nsns.boxplot(x = train['zipcode'], y= train['price'])","3eff84c8":"train = train.drop((train[train['sqft_living']>13000]).index, axis=0)\ntrain = train.drop((train[train['grade']== 3]).index, axis=0)\ntrain = train.drop((train[(train['bathrooms']== 6.75)]).index, axis=0)\ntrain = train.drop((train[(train['bathrooms']== 7.5)]).index, axis=0)","9fb74164":"train_test_data = [train, test]","1ee48209":"for dataset in train_test_data:\n    #date -> \ub144, \uc6d4, \uc77c \ub2e8\uc704\ub85c \uc0c8\ub85c\uc6b4 \uce7c\ub7fc \ub9cc\ub4e6\n    dataset['year'] = dataset['date'].str[:4]\n    dataset['year'] = dataset['year'].astype(int)\n    dataset['month'] = dataset['date'].str[4:6]\n    dataset['month'] = dataset['month'].astype(int)\n    dataset['day'] = dataset['date'].str[6:8]\n    dataset['day'] = dataset['day'].astype(int)\n    \n    # \ubd80\uc9c0 \uba74\uc801 \ub300\ube44 \uc2e4\uc81c \uc0ac\uc6a9 \uba74\uc801 \ube44\uc728\n    dataset['sqft_ratio'] = dataset['sqft_living'] \/ dataset['sqft_lot']\n        \n    # 15\uac1c\uc758 \ubd80\uc9c0 \uba74\uc801 \ub300\ube44 \uc2e4\uc81c \uc0ac\uc6a9 \uba74\uc801 \ud3c9\uade0 \ube44\uc728\n    dataset['sqft_ratio15'] = dataset['sqft_living15'] \/ dataset['sqft_lot15'] \n    \n    #\uc9c0\ud558\uc2e4 \uc720\ubb34\n    dataset['is_basement'] = dataset['sqft_basement'].map(lambda x: 1 if x != 0 else 0)\n    \n    #\uc7ac\uac74\ucd95 \uc5ec\ubd80\n    dataset['is_renovated'] = dataset['yr_renovated'].apply(lambda x: 0 if x == 0 else 1)\n    \n    #\uc7ac\uac74\ucd95 \ub144\ub3c4 \uc218\uc815\n    dataset['yr_renovated'] = dataset['yr_renovated'].apply(lambda x: np.nan if x == 0 else x)\n    dataset['yr_renovated'] = dataset['yr_renovated'].fillna(dataset['yr_built'])\n\n    #\uad6c\ub9e4\ud588\uc744 \ub54c \uc9d1\uc758 \ub144\uc2dd (\ub9ac\ubaa8\ub378\ub9c1\ud55c\uacbd\uc6b0\ub294 \ub9ac\ubaa8\ub378\ub9c1 \ud55c \ub0a0 \ubd80\ud130)\n    dataset['age'] = dataset['year']-dataset['yr_renovated']\n    \n    #\uad6c\ub9e4\ub2f9\uc2dc \uc9d1\uc744 \uc9c0\uc5c8\ub294\uc9c0 \uc5ec\ubd80\n    dataset['new_built'] = dataset['year']-dataset['yr_built']\n    dataset['new_built'] = dataset['new_built'].apply(lambda x : 1 if x==0 else 0)\n    \n    #year\ub294 \ub370\uc774\ud130\uac00 \ub450\uac1c\ub77c\uc11c 0\uacfc 1\ub85c \ubc14\uafd4\uc90c\n    dataset['year'] = dataset['year'].apply(lambda x : 0 if x == 2014 else 1)","57496bce":"#zipcode \uc218\uc815\ntrain_zipcode = train[['zipcode','price']].groupby('zipcode', as_index = False).mean().sort_values('price')\ntrain_zipcode.head()","6cd595ab":"zipcode_num = {}\nfor i in range(0, 70):\n    zipcode = train_zipcode['zipcode'].iloc[i]\n    zipcode_num[zipcode] = i\n    \nzipcode_num","1f25483d":"train_test_data = [train, test]","9ea75ab0":"for dataset in train_test_data:\n    dataset['zipcode_num'] = dataset['zipcode'].map(zipcode_num)","38ff66dc":"train.head()","618b5ab5":"#above\ub294 \uc0ad\uc81c \uc2dc \uc131\ub2a5 \ub354 \uc88b\uc544\uc9d0\ndrop_columns = ['date', 'sqft_above']\ntrain = train.drop(drop_columns, axis = 1)\ntest = test.drop(drop_columns, axis = 1)\ntrain.head()","3e76cc2c":"#\uc0c1\uad00\uad00\uacc4 \ud655\uc778\nk=30 #\ud788\ud2b8\ub9f5 \ubcc0\uc218 \uac2f\uc218\ncorrmat = train.corr()\ncols = corrmat.nlargest(k, 'price')['price'].index\ncm = np.corrcoef(train[cols].values.T)\nf, ax = plt.subplots(figsize=(20, 10))\nsns.heatmap(data = cm, annot=True, square=True, fmt = '.2f', linewidths=.5, cmap='Reds', \n            yticklabels = cols.values, xticklabels = cols.values)","cf2ef62b":"train_columns = []\nfor column in train.columns:\n    if train[column].skew() >= 1:\n        print(\"%s -> Skewness: %f, Kurtosis: %f\" %  (column,train[column].skew(), \n                                                 train[column].kurt()))\n        train_columns.append(column)\n    elif train[column].kurt() >= 3:\n        print(\"%s -> Skewness: %f, Kurtosis: %f\" %  (column,train[column].skew(), \n                                                 train[column].kurt()))\n        train_columns.append(column)","36294a94":"#\uc815\uaddc\ubd84\ud3ec\ubaa8\ud615\uc744 \uac00\uc9c8 \uc218 \uc788\ub3c4\ub85d \ucca8\ub3c4\uc640 \uc65c\ub3c4\ub97c \uc870\uc815\n#\uc870\uc815\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 square root, quarter root, log \ub4f1\uc774 \uc788\ub2e4.\n#log\uc5d0\uc11c 0\uc758 \uac12\uc774 \ub4e4\uc5b4\uc654\uc744 \ub54c \ubb34\ud55c\uc73c\ub85c \uac00\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\ub3c4\ub85d 1 \ub354\ud574\uc8fc\ub294 log1p\ub97c \uc0ac\uc6a9\n\n# columns = ['sqft_living', 'sqft_living15', 'sqft_lot', 'sqft_lot15', 'sqft_above']\n\ntrain['price'] = np.log1p(train['price'])\nprint(\"%s -> Skewness: %f, Kurtosis: %f\" % ('price', train['price'].skew(), train['price'].kurt()))\n\nfor column in train_columns[1:]:\n    train[column] = np.log1p(train[column])\n    test[column] = np.log1p(test[column])\n    print(\"%s -> Skewness: %f, Kurtosis: %f\" %  (column,train[column].skew(), \n                                                 train[column].kurt()))","7f0aa3e3":"#\ub2e8\uc21c\uc120\ud615\ud68c\uadc0\ubaa8\ud615\n\nfrom sklearn.linear_model import LinearRegression\nimport statsmodels.api as sm\n\ntrain_columns = [c for c in train.columns if c not in ['price']]\n\nmodel = sm.OLS(train['price'], train[train_columns])\nresult = model.fit()\nprint(result.summary())","93fd0443":"from sklearn.linear_model import ElasticNet, Lasso\nfrom sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport xgboost as xgb\nimport lightgbm as lgb","51facc34":"lasso = make_pipeline(RobustScaler(), Lasso(alpha = 0.0005, random_state=631))\nENet = make_pipeline(RobustScaler(), ElasticNet(alpha=0.0005, l1_ratio=.9, random_state=631))\nforest = RandomForestRegressor(n_estimators = 150, n_jobs = -1, random_state=42)\ngboost = GradientBoostingRegressor(n_estimators = 350, learning_rate = 0.1, max_depth = 4, random_state=42)\nxgboost = xgb.XGBRegressor(min_child_weight = 8, max_depth = 8, gamma = 0, random_state=42)\nlightgbm = lgb.LGBMRegressor(num_leaves = 50, max_depth = -1, min_data_in_leaf = 30, random_state=42)\n\nmodels = [{'model':gboost, 'name':'GradientBoosting'}, {'model':xgboost, 'name':'XGBoost'},\n          {'model':lightgbm, 'name':'LightGBM'}, {'model' : lasso, 'name' : 'LASSO Regression'}, \n          {'model' : ENet, 'name' : 'Elastic Net Regression'}, {'model' : forest, 'name' : 'RandomForset'}]","b50aa81d":"target = train['price']\ndel train['price']","92db1615":"#cross validation score\nn_folds = 5\n\ndef cv_score(models):\n    kfold = KFold(n_splits=n_folds, shuffle=True ,random_state=42).get_n_splits(train.values)\n    for m in models:\n        print(\"Model {} CV score : {:.4f}\".format(m['name'], \n                                                  np.mean(cross_val_score(m['model'], \n                                                                          train.values, target, cv=kfold))))","d3c87f9f":"cv_score(models)","a387fe07":"#x.values \ub294 \ubc30\uc5f4\ub85c \ub370\uc774\ud130\ub97c \ubf51\uc544\uc634\n#3\uac1c\uc758 \ubaa8\ub378\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 predict \ub370\uc774\ud130\ub4e4\uc758 \ud3c9\uade0\uc744 \uad6c\ud55c\ub2e4.\n\nmodels = [{'model':gboost, 'name':'GradientBoosting'}, {'model':xgboost, 'name':'XGBoost'},\n          {'model':lightgbm, 'name':'LightGBM'}]\n\ndef AveragingBlending(models, x, y, sub_x):\n    for m in models : \n        m['model'].fit(x.values, y)\n    \n    predictions = np.column_stack([m['model'].predict(sub_x.values) for m in models])\n    return np.mean(predictions, axis=1)","9733d77c":"test_id = test['id']\ndel test['id']","868062ab":"y_pred = AveragingBlending(models, train, target, test)","0db1fb56":"sub = pd.DataFrame(data={'id':test_id,'price':np.expm1(y_pred)})","d1442196":"sub.head()","26fbbd2f":"sub.to_csv('submission.csv', index=False)","1a084abe":"sqft_ \uc5f4\ub4e4 \uc989, \uc9d1\uc758 \ud06c\uae30\uac00 \uac00\uaca9\uc5d0 \uc81c\uc77c \uc601\ud5a5\uc744 \ub9ce\uc774 \ubc1b\uc73c\uba70, \uc9d1\uc758 \ub4f1\uae09\uc744 \ub9e4\uae34 grade\uc5ed\uc2dc \ub192\uc2b5\ub2c8\ub2e4.\n\n\ubd80\uac00\uc801\uc778 \ubc29\uc758 \uac2f\uc218, \ud654\uc7a5\uc2e4, \ubdf0, lat(\uc704\ub3c4) \uae4c\uc9c0 0.3 \uc774\uc0c1\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.\n\ndate\ub294 String\uc73c\ub85c \ub418\uc5b4\uc788\uae30 \ub54c\ubb38\uc5d0 \uc704\ud45c\uc5d0\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","c11611c0":"* sqft_basement\uac00 \uc5c6\ub294 \uacbd\uc6b0\uac00 60%\uc774\uc0c1\uc774\ubbc0\ub85c \uadf8\ub300\ub85c \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uae30\uc5d4 \ubd80\uc801\uc808\ud574 \ubcf4\uc785\ub2c8\ub2e4.\n* \ub370\uc774\ud130\ub97c \uc9c0\ud558\uc2e4\uc758 \uc720\ubb34\ub85c 0\uacfc 1\ub85c \ubc14\uafd4\uc8fc\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n* \ubc14\uafb8\uae30 \uc804\uc5d0 \ub370\uc774\ud130\uc758 \uc774\uc0c1\uc720\ubb34\ub3c4 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","76eed137":"* \uc65c\ub3c4(Skewness) : \uc67c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838 \uc788\uc744\uc218\ub85d \uac12\uc774\ud06c\uace0, \uc624\ub978\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838 \uc788\uc744 \uc218\ub85d \uac12\uc774 \uc791\uc544\uc9c4\ub2e4. \uc989, 0\uc5d0 \uac00\uae4c\uc6b8\uc218\ub85d \uc88b\uc740 \ud615\ud0dc\n* \ucca8\ub3c4(Kurtosis) : \ucca8\ub3c4 \uac12\uc774 3\uc5d0 \uac00\uae4c\uc6b8 \uacbd\uc6b0 \uc815\uaddc\ubd84\ud3ec\uc5d0 \uac00\uae4c\uc6b0\uba70, \ucca8\ub3c4 \uac12\uc774 \ud074\uc218\ub85d \ubfb0\uc871\ud558\uace0 \uac12\uc774 \uc791\uc744 \uc218\ub85d \uc644\ub9cc\ud574\uc9c4\ub2e4","70937ef9":"## 3. Data Preprocessing (Feature Engineering)","d31119ba":"# 2. Data Explore (Exploratory Data Analysis)","0cdf8f94":"* sqft_lot\ub294 \ud070 \uc0c1\uad00\uad00\uacc4\uac00 \uc5c6\uc5b4\ubcf4\uc774\uba70, \ubcc0\uc218\ub97c \uc0ad\uc81c\ud560\uc9c0 \uc544\ub2c8\uba74 lot\uc640 lot15\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc904\uc774\ub294 \ubc29\ud5a5\uc73c\ub85c \uac08\uc9c0 \uc0dd\uac01\ud574\ubd10\uc57c\ud569\ub2c8\ub2e4.\n* sqft_living\uc5d0\uc11c 13000\uc758 \uac12\uc5d0\uc11c \uc774\uc0c1\uce58\uac00 \ubcf4\uc785\ub2c8\ub2e4. \uc9c0\uae08\uc740 \uc0ad\uc81c\ud558\ub294 \ubc29\ud5a5\uc73c\ub85c \uac00\uba70, \ud6c4\uc5d0 long\uc744 \ubd84\uc11d\ud558\uc5ec \uc7ac \uac80\ud1a0\ud574\uc57c \ud569\ub2c8\ub2e4.\n* sqft_living\uacfc sqft_living15\uac04\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uac8c \ub098\uc654\uae30 \ub54c\ubb38\uc5d0 \uc0c1\uad00\uad00\uacc4\ub97c \uc904\uc5ec\uc8fc\ub294 \ubc29\ud5a5\ub3c4 \uc0dd\uac01\ud574\ubcfc \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n* sqft_above\uc640 sqft_living\uacfc\uc758 \uc0c1\uad00\uad00\uacc4\ub3c4 \ub192\uac8c \ub098\uc628 \ubd80\ubd84\uc5d0 \ub300\ud574 \uc0dd\uac01\ud574\ubcfc\ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n* sqft_basement\ub294 \uc9c0\ud558\uc2e4\uc774 \uc5c6\ub294 \uacbd\uc6b0\uac00 60%\uac00 \ub118\uae30\ub54c\ubb38\uc5d0 \uc9c0\ud558\uc2e4\uc774 \uc788\uace0 \uc5c6\uace0\uc758 \uc720\ubb34\ub85c \ubc14\uafbc\ud6c4 \ud310\ub2e8\ud574\uc57c \ub420\uac83\uac19\uc2b5\ub2c8\ub2e4.","5f5b8949":"* \ubd80\uc9c0\uac00 2\ub9cc\uc5d0\uc11c 4\ub9cc\ub300\ub85c \ub2e4\ub978\uac83\uc5d0 \ube44\ud574 \uc791\uc9c0\ub9cc \uadf8\uc678\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uc740 feature\uc5d0 \ub300\ud574\uc11c\ub294 \ud070 \ubb38\uc81c\uac00 \uc5c6\uc5b4\ubcf4\uc785\ub2c8\ub2e4.","7c003662":"#### sqft_living, sqft_living15 \ubd84\uc11d","6d4e508a":"5\uc640 6\uc758 \uc774\uc0c1\uce58\ub4e4\uc744 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub9c8 bathrooms\uc640 \uac19\uc740 \uc0c1\ud669\uc77c \uac83 \uac19\uc2b5\ub2c8\ub2e4.","8e0f0a2a":"\uc774 \uacbd\uc6b0\ub3c4 \uac00\uaca9\uc774 \uc5c4\uccad \uc791\uc744 \uc774\uc720\uac00 \ud06c\uac8c \uc5c6\uc73c\ubbc0\ub85c, \uc774\uc0c1\uce58\ub85c \ud310\ub2e8\ud569\ub2c8\ub2e4.","95a60259":"zipcode\uc5d0 \ub530\ub77c \uac00\uaca9\uc774 \uc5c4\uccad \ud070 \ub370\uc774\ud130\ub4e4\ub3c4 \uc788\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\uac00\uaca9\uc774 \ud070 \uacbd\uc6b0\uc640 \uc791\uc740 \uacbd\uc6b0\ub85c \ud574\uc11c \uac12\uc758 \uc21c\uc704\ub97c \uc8fc\ub294 \ubc29\ud5a5\uc73c\ub85c \uc218\uc815\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","6915abac":"\uc544\uc9c1 \ub300\ud559\uad50 4\ud559\ub144 1\ud559\uae30\ub85c \ub370\uc774\ud130\ubd84\uc11d \uacf5\ubd80\ub97c \uc2dc\uc791\ud55c\uc9c0 1\ub144 \ubc16\uc5d0 \ub418\uc9c0 \uc54a\uc544 \ubd80\uc871\ud55c\uc810\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.\n\n\uc9c4\ub85c\ub97c \ub370\uc774\ud130 \ubd84\uc11d, \uba38\uc2e0\ub7ec\ub2dd, \ub525\ub7ec\ub2dd\uc73c\ub85c \uacb0\uc815\ud55c \uc774\ud6c4\ub85c \uacc4\uc18d \uacf5\ubd80 \uc911\uc785\ub2c8\ub2e4.\n\n\ucc38\uace0 \ucee4\ub110\uc740 - [House Price Prediction EDA](https:\/\/www.kaggle.com\/chocozzz\/house-price-prediction-eda-updated-2019-03-12), [2019 ML month 2nd baseline](https:\/\/www.kaggle.com\/kcs93023\/2019-ml-month-2nd-baseline) \uc785\ub2c8\ub2e4.","9bea2df3":"## 2.1 Target Variable (Dependent Variable)\n### price : \uc9d1\uc758 \uac00\uaca9","466c75a9":"### \ubd84\uc11d\uacb0\uacfc\n* bathrooms 6.75\uc640 7.5 \ub370\uc774\ud130\ub97c \uc81c\uac70\ud558\uaca0\uc2b5\ub2c8\ub2e4.","dbf1f1f1":"#### Data fields\n* id : \uc9d1\uc744 \uad6c\ubd84\ud558\ub294 \ubc88\ud638\n* date : \uc9d1\uc744 \uad6c\ub9e4\ud55c \ub0a0\uc9dc\n* price : \uc9d1\uc758 \uac00\uaca9(Target variable)\n* bedrooms : \uce68\uc2e4\uc758 \uc218\n* bathrooms : \ud654\uc7a5\uc2e4\uc758 \uc218\n* sqft_living : \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_lot : \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* floors : \uc9d1\uc758 \uce35 \uc218\n* waterfront : \uc9d1\uc758 \uc804\ubc29\uc5d0 \uac15\uc774 \ud750\ub974\ub294\uc9c0 \uc720\ubb34 (a.k.a. \ub9ac\ubc84\ubdf0)\n* view : \uc9d1\uc5d0\uc11c \ubcf4\ub294 \uc804\ub9dd\n* condition : \uc9d1\uc758 \uc804\ubc18\uc801\uc778 \uc0c1\ud0dc\n* grade : King County grading \uc2dc\uc2a4\ud15c \uae30\uc900\uc73c\ub85c \ub9e4\uae34 \uc9d1\uc758 \ub4f1\uae09\n* sqft_above : \uc9c0\ud558\uc2e4\uc744 \uc81c\uc678\ud55c \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_basement : \uc9c0\ud558\uc2e4\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* yr_built : \uc9c0\uc5b4\uc9c4 \ub144\ub3c4\n* yr_renovated : \uc9d1\uc744 \uc7ac\uac74\ucd95\ud55c \ub144\ub3c4\n* zipcode : \uc6b0\ud3b8\ubc88\ud638\n* lat : \uc704\ub3c4\n* long : \uacbd\ub3c4\n* sqft_living15 : \uac00\uae4c\uc6b4 15\uac1c \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\uade0 \ud3c9\ubc29 \ud53c\ud2b8(\uc544\ud30c\ud2b8\ub77c\uba74 sqft_living\uacfc \uac19\uc744 \uc218 \uc788\uc74c)\n* sqft_lot15 : \uac00\uae4c\uc6b4 15\uac1c \uc8fc\uac70\uc9c0\uc758 \ud3c9\uade0 \ubd80\uc9c0 \ud3c9\ubc29 \ud53c\ud2b8","2ecf0f4a":"### 2.2.5 zipcode","d81b2c33":"* 4.5\uc5d0\uc11c \ud070 \uc774\uc0c1\uce58\uac00 \ubcf4\uc784\n* 6.25, 6.75, 7.5\uc5d0\uc11c \ub0ae\uc740 \uac12\uc774 \ud558\ub098\ub9cc \uc874\uc7ac\ud568.","6ce91dae":"## 4. Modeling","7d13cbc5":"sqft_living\uc774 700\ub9cc\uc774 \ub118\ub294 \ub370\uc774\ud130\uc640 \ube44\uad50\ud558\uc600\uc744 \ub54c sqft_living\uc758 \ud06c\uae30\uac00 \ube44\uc2b7\ud55c \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc774\uc0c1\uce58\ub77c\uace0 \uc81c\uac70\ud558\uae30\uc5d4 \uc5b4\ub824\uc6cc \ubcf4\uc785\ub2c8\ub2e4.","124d7750":"* bathrooms 6.25\uc778 \uacbd\uc6b0\ub294 grade\uac00 13\uc774\uace0, sqft_living\ub3c4 8670\uc785\ub2c8\ub2e4. \uc774\uc640 \ube44\uc2b7\ud55c \uac12\ub4e4\uc744 \ube44\uad50\ud574\ubcf4\uace0 price\uac00 \uc5b4\ub5a4\uc9c0 \ud655\uc778\ud574\ubd10\uc57c \ud560 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n* bathrooms 6.75\uc778 \uacbd\uc6b0\ub3c4 grade\uac00 11\ub85c \ub192\uc740 \ud3b8\uc774\uba70, sqft_living\ub3c4 7480\uc73c\ub85c \ub192\uc740 \ud3b8\uc785\ub2c8\ub2e4.\n* bathrooms 7.50\uc740 grade\uac00 7\ub85c \ubcf4\ud1b5\uc758 \uc218\uc900\uacfc, sqft_living\ub294 4050\uc785\ub2c8\ub2e4. \uc720\uc0ac\ud55c \uac12\ub4e4\uacfc \ube44\uad50\ud558\uc5ec \ud310\ub2e8\ud574\uc57c\ub420 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","48d5263a":"### \ubd84\uc11d\uacb0\uacfc\n* \uc804\ucc98\ub9ac \uacfc\uc815\uc5d0\uc11c \uc65c\ub3c4\uc640 \ucca8\ub3c4\ub97c \uc870\uc815\ud574 \uc904 \ud544\uc694\uac00 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","4528e525":"* full bath (1) : \ud654\uc7a5\uc2e4, \uc138\uba74\ub300, \uc0e4\uc6cc\uc2e4, \uc695\uc870\n* 3\/4 bath (0.75) : \ud654\uc7a5\uc2e4, \uc138\uba74\ub300, \uc0e4\uc6cc\uc2e4\n* half bath (0.5) : \ud654\uc7a5\uc2e4, \uc138\uba74\ub300\n\n\ud558\uc9c0\ub9cc \uc218\uce58\uc5d0 \ub530\ub77c \ud654\uc7a5\uc2e4, \uc138\uba74\ub300, \uc0e4\uc6cc\uc2e4, \uc695\uc870\uc758 \uac2f\uc218\ub294 \uc815\ud655\ud788 \uc54c \uc218 \uc5c6\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\ucc38\uace0 - [Discussion (bathrooms\uac12\uc5d0 \uc18c\uc218\uc810\uc758 \uc758\ubbf8)](https:\/\/www.kaggle.com\/c\/2019-2nd-ml-month-with-kakr\/discussion\/83533#latest-499792)","80ed7be9":"#### bedrooms \ubd84\uc11d","876c04f6":"\ubaa8\ub4e0 \ubcc0\uc218\uc5d0 \uacb0\uce21\uce58\uac00 \uc5c6\uc73c\uba70, date\ub97c \uc81c\uc678\ud55c \ub098\uba38\uc9c0 columns\uc740 numeric\uc785\ub2c8\ub2e4.","4a3acac9":"### 3.2 \ubcc0\uc218 \uc218\uc815","bd8ebd5b":"grade\uac00 11, price\uac00 700\ub9cc\uc774 \ub118\ub294 \ub370\uc774\ud130\uc640 \uadf8\ubc14\ub85c \ub2e4\uc74c \ub370\uc774\ud130\ub97c \ube44\uad50\ud574\ubcf4\uba74, sqft_living\uac12\uc774 \uc0c1\ub2f9\ud788 \ud070 \uac83\uc73c\ub85c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uaca9\uc774 sqft_living\uc758 \uc601\ud5a5\uc744 \ubc1b\uace0, \uadf8\uc678\uc758 \uc635\uc158\uc5d0\uc11c \ud06c\uae30\uc5d0 \ube44\ud574 grade\uac00 \ub0ae\uac8c \ud3c9\uac00 \ub41c \uac83 \uac19\uc2b5\ub2c8\ub2e4.","a05dd85f":"* \ubcc0\uc218\uac04\uc758 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\uac04\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uc744 \uc2dc \ubaa8\ub378\ub9c1\uc5d0 \ubb38\uc81c\ub97c \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubd80\ubd84\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc0dd\uac01\ud574\ubcfc\ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.","5292730f":"### 2.2.1 date","4394250a":"\uc720\uc77c\ud55c string\ud615\ud0dc \uc774\uba70, \ub4b7\ubd80\ubd84\uc778 date\uc758 T000000\ubd80\ubd84\uc740 \ud544\uc694 \uc5c6\uc5b4 \ubcf4\uc5ec \uc5c6\uc560 \uc904 \uac83\uc774\uba70, \ub144\uc6d4\uc77c\ub2e8\uc704 \uae4c\uc9c0 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e8 \ub144, \uc6d4, \uc77c \uac01\uac01 \ub098\ub220\uc11c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.\n\n\uc804\ucc98\ub9ac \uacfc\uc815\uc5d0\uc11c \uce7c\ub7fc\uc744 3\uac1c\ub85c \ub9cc\ub4e4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","b67a3efc":"## 2.2 Independent Variable","4379bde0":"\uc57d 15000\uac1c\uc758 row\uc640 \uc608\uce21\ud558\uace0\uc790\ud558\ub294 price\ub97c \uc81c\uc678\ud558\uace0 20\uac1c\uc758 columns\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4.","de7d8f9c":"sqft_living\uc740 6000\uc774\uc0c1\uc758 \uac12\ub4e4\uc774 \ub300\ubd80\ubd84 \uc0ac\ub77c\uc838\uc11c, 6000\uc774\uc0c1\uc758 \uac12\ub4e4\ub9cc \uba3c\uc800 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","cd13efcf":"* above\uc640 basement\ub294 basement\uac00 sqft_living - basement = above\ub77c\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc798 \ubabb \uacc4\uc0b0 \ub41c\uac83\ub3c4 \uc5c6\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uadf8\ub807\uc9c0\ub9cc \uc774\ub7f0 \uacbd\uc6b0\uc5d0 basement\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\ub3c4 \ub9ce\uc744 \uac83\uc774\uba70 price\uc5d0 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\ub2e4\uba74 \uc601\ud5a5\uc744 \ub07c\uce60 \uc218 \uc788\ub2e4.","e362730a":"# 1. Data Set \ubd88\ub7ec\uc624\uae30","b155248d":"### \ubd84\uc11d\uacb0\uacfc\n\n* grade\uac00 3\uc778 \ub370\uc774\ud130\uac00 \uac2f\uc218\uac00 \uc801\uae30 \ub54c\ubb38\uc5d0 \ud3b8\ud5a5\uc774 \uc77c\uc5b4\ub0a0\uc218\ub3c4 \uc788\uc73c\ubbc0\ub85c \uc81c\uac70\ud558\uaca0\uc2b5\ub2c8\ub2e4.","5fae76b8":"### \ubd84\uc11d\uacb0\uacfc","f5f9d488":"* sqft_lot\uc758 \ud06c\uae30\uac00 100\ubc30 \uc5d0\uc11c 2\ubc30\uae4c\uc9c0 \ub4e4\uc465\ub0a0\uc465\ud558\uac8c \ud06c\uae30\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc0c1\uad00\uad00\uacc4\ub294 \ub192\ub2e4\uace0 \ub098\uc635\ub2c8\ub2e4. \ud655\uc778\ud574\ubcfc\ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.","1a45b7d5":"### 3.3 \uc65c\ub3c4 \uc870\uc815","f697b65a":"bathrooms\uac00 6.75 \uc778 \uacbd\uc6b0\ub294 sqft_living15\ub97c \uc81c\uc678\ud55c \uac00\uaca9\uc774 \uc791\uc744 \uc774\uc720 \uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uc774\uc0c1\uce58\ub85c \ud310\ub2e8\ud569\ub2c8\ub2e4.","3eb8a2a2":"sqft_living\uc774 \ud074 \uc218\ub85d \uae30\ud558\uae09\uc218\uc801\uc73c\ub85c \uac00\uaca9\uc774 \ucee4\uc9d0\uc5d0 \ub530\ub77c grade 13\uc5d0\uc11c\ub294 \uc804\uccb4\uc801\uc73c\ub85c \uac12\uc774 \ud070 \uad6c\uac04\uc73c\ub85c \ub098\uc654\uc2b5\ub2c8\ub2e4.","0b1189d9":"* sqft_living\uc740 15\ub144 \uc774\ud6c4\ub85c 6000\uc774\uc0c1\uc758 \ub370\uc774\ud130\ub4e4\uc774 \ub300\ubd80\ubd84 \uc5c6\uc5b4\uc84c\uc2b5\ub2c8\ub2e4.\n\n* sqft_lot\ub3c4 15\ub144 \uc774\ud6c4\ub85c 900000\uc774\uc0c1\uc758 \ub370\uc774\ud130\ub4e4\uc774 \uc5c6\uc5b4\uc84c\uc2b5\ub2c8\ub2e4.\n* sqft_living\uc740 \uac70\uc758 14000\uc774 \uc81c\uc77c \ud070 \ubd80\ubd84\uc774\uba70, \uadf8\uc5d0 \ube44\ud574 sqft_lot\ub294 150\ub9cc \uc774\uc0c1\uc758 \ub370\uc774\ud130\ub4e4 \uae4c\uc9c0 \uc874\uc7ac\ud569\ub2c8\ub2e4.\n\n* sqft_above\uac00 10000\uc778\uac83\uc744 \ubcf4\ub2c8 sqft_living 10000\uc774\uc0c1\uc778 \ubd80\ubd84\uc740 \uc9c0\ud558\uc2e4\uc774 \ucc28\uc9c0\ub97c \ud55c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n* sqft_basement\ub294 \uc81c\uc77c \ud070 \uac83\uc774 4000\uc774\uba70, 0\uc758 \uac12\uc774 \uc874\uc7ac\ud558\ub294 \uac83\uc740 \uc9c0\ud558\uc2e4\uc774 \uc5c6\ub294 \uacf3\uc73c\ub85c \ubcf4\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4.","ec43ac38":"* \ub300\ucda9\ubcf4\ub2c8 \ube44\uc2b7\ud55c \ud06c\uae30\ub85c sqft_living\uc774 \uc904\uc5b4\ub4e0\uac83 \uac19\uc2b5\ub2c8\ub2e4. \uc0c1\uad00\uad00\uacc4\ub97c \uc0b0\uc810\ub3c4\ub85c \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","540158e8":"### 2.2.4 bathrooms, bedrooms","2ad253bc":"* \uc9d1\uc758 \ud06c\uae30\uac00 \ud074 \uc218\ub85d \uac00\uaca9\uc740 \uc5c4\uccad \ub6f0\ub294 \ubc18\uba74\uc5d0 \uc0dd\uac01 \ubcf4\ub2e4 \uc5c4\uccad \uc791\uc740 \uac12\uc774 \uc874\uc7ac \ud569\ub2c8\ub2e4. \ud655\uc778\ud574\ubcfc\ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.","dd1b5a7d":"* 3\uc5d0\uc11c \uc18c\uc218\uc758 \uac12\uc774 \uc774\uc0c1\ud55c \uc810\uc774 \ubcf4\uc778\ub2e4.\n* 11\uc5d0\uc11c \ucc28\uc774\uac00 \ud070 \uc774\uc0c1\uce58\uac00 \ub098\ud0c0\ub09c\ub2e4\n* 13\uc5d0\uc11c \uac12\ub4e4\uc774 \uac11\uc790\uae30 \uc5c4\uccad \ucee4\uc9c4\ub2e4","a8b0d4a8":"### 2.2.2 sqft_living, sqft_above, sqft_living15, sqft_basement, sqft_lot, sqft_lot15 (\uc0c1\uad00\uad00\uacc4\ub192\uc740\uc21c)\n\nsqft\ub294 Square Feet\ub85c \ud3c9\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \uac83\uc73c\ub85c \ub2e4\uac19\uc774 \ube44\uad50\ud558\uba74\uc11c \ubd84\uc11d\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n* sqft_living : \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_lot : \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_above : \uc9c0\ud558\uc2e4\uc744 \uc81c\uc678\ud55c \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_basement : \uc9c0\ud558\uc2e4\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* sqft_living15 : 2015\ub144 \uae30\uc900 \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)\n* sqft_lot15 : 2015\ub144 \uae30\uc900 \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)","635be632":"* \ubaa8\ub4e0 \uba74\uc5d0\uc11c \uc6b0\uc218\ud55c\ub370\uc5d0 \ube44\ud574 \uc9d1 \uac00\uaca9\uc774 \ub108\ubb34 \ub0ae\uc2b5\ub2c8\ub2e4. long\uc5d0\uc11c\uc758 \ucc28\uc774\uac00 \ubcf4\uc774\uace0, \uc9c0\uc5ed\uc801 \ud2b9\uc131\uc744 \ud655\uc778\ud574\ubcfc\ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uae08\uc740 \uc774\uc0c1\uce58\ub85c \uc0dd\uac01\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","f7e39be1":"* \uc0b0\uc810\ub3c4\ub97c \ubcf4\ub2c8 \ubd80\uc9c0\ud06c\uae30\uac00 \uc904\uc5b4\ub4e4\uc5c8\uc9c0\ub9cc \uc804\uccb4\uc801\uc778 \ud615\ud0dc\ub294 \ube44\uc2b7\ud569\ub2c8\ub2e4. \n* \ubd80\uc9c0\uac00 \ud070\uac83\uc5d0 \ube44\ud574 \uc791\uc740 \uacbd\uc6b0\uc5d0 \uac00\uaca9\uc774 \uc5c4\uccad \ud070\uac12\uc774 \ubc00\uc9d1\ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 feature\ub4e4\uc744 \ubcf4\uba70 \uc774\uc720\ub97c \uc54c\uc544\ubcfc \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc120\ud615\uc2dd\uc758 \uc624\ucc28\ub294 \uc0c1\ub2f9\ud788 \ud070\uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.\n* sqft_lot\uc640 sqft_lot15\ub294 \ub458\ub2e4 \ubcc0\uc218\ub97c \uc0ad\uc81c\ud560\uc9c0, \uc544\ub2c8\uba74 \ubcc0\uc218\uc758 \ub192\uc740 \uac12\ub4e4\uc744 \uc0ad\uc81c\ub97c \ud560\uc9c0, \ubcc0\uc218\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ub0ae\ucd94\ub294 \ubc29\ud5a5\uc73c\ub85c \uac00\uc57c\ud560\uc9c0 \ubd84\uc11d\ud574\ubcfc \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.","ac8ef581":"#### sqft_lot, lot15\ubd84\uc11d\n\n\uba3c\uc800, sqft_lot15\uac00 900000\uc774\uc0c1\uc73c\ub85c \ub370\uc774\ud130\uac00 \uc0ac\ub77c\uc84c\uc73c\ubbc0\ub85c sqft_lot\uc758 900000\uc774\uc0c1\uc758 \ub370\uc774\ud130\ub97c \ud655\uc778 \ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","b8263023":"\uc774 \uad6c\uac04\uc5d0\uc11c\ub294 sqft_living\uc5d0 \ub530\ub77c \uac12\uc758 \ucc28\uc774\uac00 \uc5c4\uccad \ucee4\uc838 \uc774\uc0c1\ud558\uac8c \ubcf4\uc774\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. bathrooms 6.25\uc778 \uacbd\uc6b0\ub294 \uc774\uc0c1\ud558\ub2e4\uace0 \ubcf4\uae30 \ud798\ub4e4 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","08ff385e":"4.5 \uc774\uc0c1\uce58\ub294 \uc880 \uc804\uc758 grade\uac00 11\uc778 \uacbd\uc6b0\uc640 \uac19\uc740 \uacbd\uc6b0\uc778 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","df0951ed":"* \ucd1d 15035\uac1c\uc758 \ub370\uc774\ud130 \n* \ud3c9\uade0 : 540682.7\n* \ud45c\uc900\ud3b8\ucc28 : 371524.7\n* min : 78000\n* max : 7700000\n\ud3c9\uade0\uc774 50\ub9cc\uc778\ub370 \ucd5c\ub300\uac00\uaca9\uc774 770\ub9cc\uc778\uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ","0b3a91dd":"#### sqft_above, sqft_basement\ubd84\uc11d","7533c777":"### 2.2.3 grade","8ab38d28":"### 3.1 \uc774\uc0c1\uce58 \uc81c\uac70 ","a97b852c":"### 2.2.1 column \uc0c1\uad00\uad00\uacc4","4f0177b8":"* 1~3 : \ucd5c\uc18c \uac74\ucd95 \uae30\uc900\uc5d0 \ubbf8\uce58\uc9c0 \ubabb\ud568. \ubcf4\ud1b5 \uc624\ub450\ub9c9 \ub610\ub294 \uc5f4\ub4f1\ud55c \uad6c\uc870\n* 4 : \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub798 \ub418\uac70\ub098, \ud488\uc9c8\uc774 \ub0ae\uc740 \uac74\ucd95\ubb3c\n* 5 : \ub0ae\uc740 \uac74\ucd95\ube44\uc6a9\uacfc \uc19c\uc528. \uc791\uace0 \uc2ec\ud50c\ud55c \ub514\uc790\uc778\n* 6 : \ud3c9\uade0\uc5d0\uc11c \ubc14\ub85c \ubc11, \ud488\uc9c8\uc774 \ub0ae\uc740 \uc7ac\ub8cc\uc640 \uc2ec\ud50c\ud55c \ub514\uc790\uc778\n* 7 : \ud3c9\uade0\n* 8 : \ud3c9\uade0 \uc774\uc0c1\uc758 \uac74\ucd95\ubb3c\uacfc \ub514\uc790\uc778, \ubcf4\ud1b5 \uc678\uad00\uacfc \ub0b4\uad00\uc758 \ub9c8\ubb34\ub9ac \uc791\uc5c5\uc5d0\uc11c \uc88b\uc740 \uc7ac\ub8cc \uc0ac\uc6a9\n* 9 : \ucd94\uac00\ub85c \ub0b4\ubd80 \uc678\ubd80 \ub514\uc790\uc778\uacfc \ud488\uc9c8\uc774 \ub354 \uc88b\uc740 \uac74\ucd95 \ub514\uc790\uc778\n* 10 : \uc774 \ud488\uc9c8\uc758 \uc8fc\ud0dd\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ub192\uc740 \ud488\uc9c8\uc758 \ud2b9\uc9d5\uc744 \uac00\uc9c0\uace0 \uc788\uc74c. \ub9c8\uac10\uc791\uc5c5\uc774 \ub354 \uc88b\uace0 \uc124\uacc4\ud488\uc9c8\uc774 \ubc14\ub2e5 \ud3c9\uba74\uc5d0 \ud45c\uc2dc\ub428. \ud3c9\ubc29 \ud53c\ud2b8\uac00 \ud06c\ub2e4\n* 11 : \uc0ac\uc6a9\uc790\uac00 \ub514\uc790\uc778\ud558\uace0 \ub192\uc740 \ud488\uc9c8\uc758 \ub9c8\uac10\uc791\uc5c5\uacfc\ucd94\uac00\ub85c \ub2e8\ub2e8\ud55c \ubaa9\uc7ac \uc2dc\uc124, \uc695\uc2e4 \ube44\ud488 \ubc0f \uace0\uae09\uc2a4\ub7ec\uc6b4 \uc635\uc158\uc744 \uc81c\uacf5\n* 12 : \uc0ac\uc6a9\uc790\uac00 \ub514\uc790\uc778\ud558\uace0 \ud6cc\ub96d\ud55c \uac74\ucd95\uac00\ub4e4. \ubaa8\ub4e0 \uc7ac\ub8cc\ub4e4\uc740 \uc544\uc8fc \ub192\uc740 \ud488\uc9c8\uc774\uace0 \ubaa8\ub4e0 \ud3b8\uc758 \uc2dc\uc124 \uc874\uc7ac\n* 13 : \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\uc790\uac00 \ub514\uc790\uc778\uacfc \uc124\uacc4. \uc800\ud0dd \uc218\uc900. \ub2e4\ub7c9\uc758 \uace0\ud488\uc9c8 \uce90\ube44\ub2db, \ubaa9\uc7ac\uc7a5\uc2dd, \ub300\ub9ac\uc11d, \uc9c4\uc785 \ubc29\ubc95 \ub4f1\n\n\ucc38\uace0 - [Discussion (More information about housing grades)](https:\/\/www.kaggle.com\/c\/2019-2nd-ml-month-with-kakr\/discussion\/84029#latest-490045)\n\n\uc8fc\ub85c \ub514\uc790\uc778\uc744 \ubcf4\uba70, \ub0b4 \uc678\ubd80, \uc0ac\uc6a9\uc790\uac00 \ub514\uc790\uc778, \ubc29\ud06c\uae30, \uace0\uae09\uc2a4\ub7ec\uc6c0, \uc635\uc158\uc2dd\uc73c\ub85c grade\ub97c \ub9e4\uae30\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","d0a2e84a":"#### bathrooms \ubd84\uc11d","69db7845":"* basement\uac00 \uc791\uc740 \ub370\uc5d0 \ube44\ud574 \uac00\uaca9\uc774 \ud070 \uc774\uc720\uc5d0 \ub300\ud574 \ud070 \uc774\uc0c1\ud55c \uc810\uc744 \ucc3e\uc9c0 \ubabb\ud558\uc600\uc2b5\ub2c8\ub2e4."}}