{"cell_type":{"a5c07f89":"code","ebeed735":"code","4e514167":"code","045d1699":"code","64b3302d":"code","568668ea":"code","ffeddad3":"code","a32f30b7":"code","2ea73fb5":"code","2bb2e0f1":"code","1a70c943":"code","0854e84b":"code","6c0cafce":"code","b6c6f4e1":"markdown","c7d86915":"markdown","7a006ba7":"markdown","932ed7fa":"markdown","4189dee1":"markdown","aad3b1f6":"markdown","25e61f76":"markdown","b8d35bca":"markdown","7f02de5c":"markdown","61c55eec":"markdown","6e34a2dd":"markdown","0c836aca":"markdown"},"source":{"a5c07f89":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebeed735":"import datetime as dt\nfrom datetime import timedelta\ndata = pd.read_csv('..\/input\/logistics-shopee-code-league\/delivery_orders_march.csv')\ndata","4e514167":"for x in ['pick', '1st_deliver_attempt','2nd_deliver_attempt']:\n    data[x] = data[x].apply(lambda y: y + 28800)\n    data[x] = pd.to_datetime(data[x], unit = 's')\n    data[x] = data[x].dt.date\ndata","045d1699":"data['dest'] = data['buyeraddress'].apply(lambda x: x.split()[-1].lower())\ndata['origin'] = data['selleraddress'].apply(lambda x: x.split()[-1].lower())\ndata","64b3302d":"matrix = pd.read_excel('..\/input\/logistics-shopee-code-league\/SLA_matrix.xlsx')\nmatrix","568668ea":"data['is_late']=[0]*len(data)\ndata['duration']=[7]*len(data)","ffeddad3":"data.loc[((data['origin']=='luzon') & (data['dest']=='luzon')) | ((data['origin']=='luzon') & (data['dest']=='manila')) | ((data['origin']=='manila') & (data['dest']=='luzon')), 'duration'] = 5\ndata.loc[(data['origin']=='manila') & (data['dest']=='manila'), 'duration'] = 3","a32f30b7":"def add_bus_days(date, days):\n    def today_is_holiday(somedate):\n        return ((somedate.weekday() == 6) or (somedate == dt.date(2020,3,25)) or (somedate == dt.date(2020,3,30)) or (somedate == dt.date(2020,3,31)) )\n    while days!=0:\n        while today_is_holiday(date):\n            date = date + timedelta(days=1)\n        date = date + timedelta(days=1)\n        days = days-1\n    while today_is_holiday(date):\n        date = date + timedelta(days=1)\n    return date","2ea73fb5":"data['1st_deliver_deadline']=data.apply(lambda x: add_bus_days(x['pick'], x['duration']), axis=1)","2bb2e0f1":"data.loc[(data['1st_deliver_attempt'] > data['1st_deliver_deadline']), 'is_late'] = 1\ndata[data['is_late']==1]","1a70c943":"data.loc[(data['2nd_deliver_attempt'].notnull() & (data['2nd_deliver_attempt']>data.apply(lambda x: add_bus_days(x['1st_deliver_attempt'], 3),axis=1))), 'is_late']=1\ndata[data['is_late']==1]","0854e84b":"submission = pd.DataFrame({'orderid':data['orderid'],'is_late':data['is_late']})\nsubmission","6c0cafce":"submission.to_csv('submission.csv', index = False)","b6c6f4e1":"Here, we label shippings that have '2nd_deliver_attempt' and their '2nd_deliver_attempt' are later than 3 days after '1st_deliver_attempt' as late shipping.","c7d86915":"# Main Algorithm","7a006ba7":"Let's give a quick look on our data. Notice that column 'pick', '1st_deliver_attempt', and '2nd_deliver_attempt' are in UNIX time.","932ed7fa":"# Prepare to Submit","4189dee1":"Take the last word from column 'buyeradrress' and store it to new column 'dest', this will be the shipping destination. Do the same step to 'selleraddress' and store it to new column 'origin', this will be the shipping origin.","aad3b1f6":"Create new column '1st_deliver_deadline'. Shippings which its '1st_deliver_attempt' is later than '1st_deliver_deadline' are considered as late.","25e61f76":"Here is how our SLA Matrix looks like.","b8d35bca":"# Prepare the Data","7f02de5c":"Then, change 'duration' value to 5 for shipping from manila to luzon, from luzon to manila, and from luzon to luzon. We also change 'duration' value to 3 for shipping from manila to manila.","61c55eec":"First, we need to convert those three columns to datetime data type. Then, we add 28800 seconds to convert it to GMT +8 time zone. Lastly, we only took the date and ignore the hour, minute, and second.","6e34a2dd":"Below we define a function 'add_bus_days'. Function add_bus_days(date1, 7) will return a date which is 7 business days after date1.","0c836aca":"Create new column 'is_late' and initiate it with value 0. We also create new column 'duration' which tell us for how many days should a shipping is done. Initiate that column with value 7, since the majority of the route need 7 days to ship based on SLA Matrix."}}