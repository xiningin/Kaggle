{"cell_type":{"4df560fe":"code","c69f07cf":"code","b74e4405":"code","333809d6":"code","ac052020":"code","67a624ea":"code","f0b01720":"code","a00a0da5":"code","44ab8851":"code","def7a058":"code","8125be3e":"code","6713631b":"code","f3aa5f75":"code","a582638a":"code","0a6b364f":"code","a61ef108":"code","d9aa3d92":"code","a6900b31":"code","7ead3fc3":"code","941c90be":"code","c4c435b4":"code","3acf1f95":"code","3aa8eb4d":"code","9a3c2dd3":"code","bc0920c7":"code","1cc14137":"code","a2b3b274":"code","284cae35":"code","6eaca65e":"code","5a634080":"code","ee058017":"code","92419f29":"code","4c847d91":"code","e46b2b71":"code","759b1def":"code","deceb5eb":"code","406583ca":"code","a2b3cebf":"code","52369e34":"code","26a834f5":"code","44bcad26":"code","a590ad00":"code","ed68c629":"code","b1de408a":"code","9216eb1e":"markdown","a58a7b95":"markdown","e70c3e9b":"markdown","d186a942":"markdown","1aa93e5f":"markdown","aa7aca01":"markdown","1e6014c9":"markdown","60dac563":"markdown","3652ace6":"markdown","005249f3":"markdown","a19797e1":"markdown","d1683481":"markdown","f9aafbb3":"markdown","e6fffd31":"markdown","3c10e123":"markdown","d09ae276":"markdown","e2bb04d4":"markdown","e461cab4":"markdown"},"source":{"4df560fe":"# Importing important libraries\nimport pandas as pd\nimport numpy as np\nimport sys\nimport re\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","c69f07cf":"# Import datasets and read them into Dataframe\n\nrounds2 = pd.read_csv('..\/input\/sparkfunds\/rounds2.csv', encoding = 'ISO 8859-1')\ncompanies = pd.read_csv('..\/input\/sparkfunds\/companies.txt',sep = '\\t', encoding = 'ISO 8859-1')","b74e4405":"# Lets try inspecting the datasets one by one, and see if the encoding and values are correct\ncompanies","333809d6":"rounds2.tail()","ac052020":"#As seen above the columns 'permalink' and 'name' still has encoding issue, we need to encode the column with 'utf-8' encoding and then decode by 'ascii'\n\ncompanies['permalink'] = companies['permalink'].str.encode('utf-8').str.decode('ascii', 'ignore').str.lower()\ncompanies['name'] = companies['name'].str.encode('utf-8').str.decode('ascii', 'ignore').str.lower()","67a624ea":"companies.tail()","f0b01720":"# Inspecting and correcting the rounds2 dataframe\nrounds2.tail()","a00a0da5":"# The rounds2 dataframe also has the same encoding issue.\nrounds2['company_permalink'] = rounds2['company_permalink'].str.encode('utf-8').str.decode('ascii','ignore').str.lower()\nrounds2","44ab8851":"#Checkpoint 1: Question 1 (how many unique companies are present in rounds2 dataset?)\n\nrounds2_companies = rounds2['company_permalink'].nunique()\nprint(rounds2_companies)","def7a058":"#Checkpoint 1: Question 2 (how many unique companies are present in companies dataset?)\n\nunique_companies = companies['permalink'].nunique()\nprint(unique_companies)","8125be3e":"#Checkpoint 1: Question 4 (Are there any companies in the rounds2 file which are not present in companies?)\n\ndef check_company(rounds2, companies):\n    for companies in rounds2:\n        for company in companies:\n            if companies == company:\n                return True\n            else:\n                return False","6713631b":"check_company(rounds2,companies)","f3aa5f75":"#Checkpoint 1: Question 5 (Merge the two data frames so that all variables (columns) in the companies frame are added to the rounds2 data frame. Name the merged frame master_frame. How many observations are present in master_frame?)\n\nmaster_frame = companies.merge(rounds2, how = 'inner', left_on = 'permalink', right_on = 'company_permalink')","a582638a":"master_frame","0a6b364f":"#Inspecting data\n\nmaster_frame","a61ef108":"# Obtaining number of null values for each column\n\nmaster_frame.isnull().sum()","d9aa3d92":"# Representational value of investment types before cleaning the data(before handling nan and 0 values)\n\npd.set_option('display.float_format', lambda x: '%.2f' % x)\nmaster_frame.groupby('funding_round_type')['raised_amount_usd'].mean().sort_values(ascending = False)","a6900b31":"# Checking NAN values for the four investment types\n\nnan_count = pd.DataFrame(master_frame.groupby(['funding_round_type'])['raised_amount_usd'].value_counts(dropna = False))\n\nventure = nan_count.loc['venture'].iloc[0]\nangel = nan_count.loc['angel'].iloc[0]\nprivate_equity = nan_count.loc['private_equity'].iloc[0]\nseed = nan_count.loc['seed'].iloc[0]\n\n# Print the NAN values for the types of investment\n\nprint(f\" The NAN value count for Seed investment type is: {seed[0]}\",\n      f\"\\n The NAN value count for Venture investment type is: {venture[0]}\",\n      f\"\\n The NAN value count for Angel investment type is: {angel[0]}\",\n      f\"\\n The NAN value count for Private Equity investment type is: {private_equity[0]}\")","7ead3fc3":"# Drop the NAN values and 0 values from the raised_amunt_usd column\n\nmaster_frame.drop(master_frame[master_frame['raised_amount_usd'].isnull()].index, inplace = True)\nmaster_frame.drop(master_frame[master_frame['raised_amount_usd'] == 0].index, inplace = True)","941c90be":"# After Cleaning\n\nmaster_frame.shape","c4c435b4":"# Representational value of investment types after cleaning\n\nmaster_frame.groupby('funding_round_type').mean().loc[['venture','angel','seed','private_equity']]","3acf1f95":"# Filter master_frame so that it only contains venture capital data\n\nventure_frame = master_frame.loc[master_frame['funding_round_type'] == 'venture']\nventure_frame","3aa8eb4d":"# Finding the top9 funded countries\n\ntop9 = pd.DataFrame(venture_frame.groupby('country_code')['raised_amount_usd'].sum().sort_values(ascending = False))\ntop9 = top9.head(9) #.reset_index(inplace = True)","9a3c2dd3":"print(top9)","bc0920c7":"venture_frame['primary_sector'] = venture_frame['category_list'].str.split('|').str[0]\nventure_frame","1cc14137":"# Import and clean the mapping.csv file\n\nmapping = pd.read_csv('..\/input\/sparkfunds\/mapping.csv')\n\nmapping.set_index('category_list')\nmapping.replace({'category_list' : '0'}, {'category_list' : 'na'},regex = True, inplace = True)\nmapping = mapping.dropna()\n\n#Unpivot mapping dataframe on category_list column\nmapping = mapping.melt(id_vars=\"category_list\",var_name=\"main_sectors\")\n\n#Map the category_list to main_sectors where value is not = 0\nmapping = mapping.loc[~(mapping[\"value\"]==0)]\n\n\n#check if we can fetch a row for a category\n#mapping.loc[mapping['category_list'].isin(['Advice'])]","a2b3b274":"venture_frame","284cae35":"# Merge the venture_frame dataframe and mapping dataframe\n\nventure_mapping_frame = pd.merge(venture_frame, mapping, how = 'inner', left_on = 'primary_sector', right_on = 'category_list')\nventure_mapping_frame.drop(['value', 'category_list_y', 'category_list_x'], axis = 1, inplace = True)\n\nventure_mapping_frame","6eaca65e":"\n# D1 dataframe for country_code = USA\nD1 = venture_mapping_frame[(venture_mapping_frame['country_code'] == 'USA') & (venture_mapping_frame['raised_amount_usd'] >= 5000000) & (venture_mapping_frame['raised_amount_usd'] <= 15000000)] \n\n#top9_df[(top9_df['country_code'] == 'IND'\n\n# D2 dataframe for country_code = GBR\nD2 = venture_mapping_frame[(venture_mapping_frame['country_code'] == 'GBR') & (venture_mapping_frame['raised_amount_usd'] >= 5000000) & (venture_mapping_frame['raised_amount_usd'] <= 15000000)] \n\n# D3 dataframe for country_code = IND\nD3 = venture_mapping_frame[(venture_mapping_frame['country_code'] == 'IND') & (venture_mapping_frame['raised_amount_usd'] >= 5000000) & (venture_mapping_frame['raised_amount_usd'] <= 15000000)] ","5a634080":"# Total number of Investment count for D1 that is USA\nprint(\" Total Investment count for D1:\",D1.raised_amount_usd.count())\n\n# Total number of Investment count for D2 that is GBR\nprint(\"\\n\",\"Total Investment count for D2:\",D2.raised_amount_usd.count())\n\n# Total number of Investment count for D3 that is IND\nprint(\"\\n\",\"Total Investment count for D3:\",D3.raised_amount_usd.count())","ee058017":"# Create total investment count dataframes for each country that we wll use for ploting.\n\nTIC_D1=pd.DataFrame(D1.groupby(by='main_sectors')['main_sectors'].count().\n                     rename('Total_Investment_Count').sort_values(ascending = False))\n\nTIC_D2=pd.DataFrame(D2.groupby(by='main_sectors')['main_sectors'].count().\n                     rename('Total_Investment_Count').sort_values(ascending = False))\n\n\nTIC_D3=pd.DataFrame(D3.groupby(by='main_sectors')['main_sectors'].count().\n                     rename('Total_Investment_Count').sort_values(ascending = False))\n","92419f29":"# Total amount of investment (USD)\nprint(\"Total amount invested in USA (D1):\",D1.raised_amount_usd.sum())\n\nprint(\"Total amount invested in GBR (D2):\",D2.raised_amount_usd.sum())\n\nprint(\"Total amount invested in USA (D3):\",D3.raised_amount_usd.sum())","4c847d91":"# Top sectors based on count on investment for D1\nD1.groupby('main_sectors')['raised_amount_usd'].count().sort_values(ascending = False)","e46b2b71":"# Top sectors based on count on investment for D2\nD2.groupby('main_sectors')['raised_amount_usd'].count().sort_values(ascending = False)","759b1def":"# Top sectors based on count on investment for D2\nD3.groupby('main_sectors')['raised_amount_usd'].count().sort_values(ascending = False)","deceb5eb":"# Top Company to receive highest investment for the best performing sector in USA\nD1.where(D1.main_sectors == 'Others').groupby('name').raised_amount_usd.sum().sort_values(ascending = False)","406583ca":"# Top Company to receive highest investment for the best performing sector in GBR\nD2.where(D2.main_sectors == 'Others').groupby('name').raised_amount_usd.sum().sort_values(ascending = False)","a2b3cebf":"# Top Company to receive highest investment for the best performing sector in IND\nD3.where(D3.main_sectors == 'Others').groupby('name').raised_amount_usd.sum().sort_values(ascending = False)","52369e34":"# Preprocessing plotting data\nplot_frame = pd.DataFrame(master_frame.loc[(master_frame['funding_round_type'] == 'seed') | (master_frame['funding_round_type'] == 'angel') | (master_frame['funding_round_type'] == 'venture') | (master_frame['funding_round_type'] == 'private_equity')])\nplot_frame = plot_frame.groupby('funding_round_type')['raised_amount_usd'].sum()\n\nplot_frame","26a834f5":"import matplotlib.pyplot as plt\n\n# subplot 1 - Piechart\nplt.figure(figsize=[10,10], dpi = 100)\nplt.subplot(221)\nplt.title('Division of total investment type', loc = 'right')\n\nlabels = 'angle', 'venture', 'seed', 'private_equity'\na=np.random.random(40)\ncs = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\nexplode = (0, 0.1, 0, 0)\n# Plot\nplt.pie(plot_frame,explode = explode,colors = cs, labels=labels,autopct='%1.2f%%', startangle=110)\n\n# subplot 2- donut chart\nplt.subplot(222)\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\nexplode = (0.05,0.05,0.05,0.05)\n\nplt.pie(plot_frame, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.85, explode = explode)\n\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n# Equal aspect ratio\n#ax1.axis('equal')  \nplt.tight_layout()","44bcad26":"Eng_speaking_country=pd.DataFrame({'country_code': ['USA','CHN','GBR','IND','CAN','FRA','ISR','DEU','JPN'],\n                        'English_Speaking_Flag': ['Yes','No','Yes','Yes','Yes','No','Yes','No','No']})\n\ntop9=pd.merge(top9,Eng_speaking_country,how='inner',on='country_code')","a590ad00":"plt.figure(figsize=[10.0,5.0],dpi=120,frameon=True)\nsns.barplot(x=top9['country_code'],y=top9['raised_amount_usd']\/1000000,hue=top9['English_Speaking_Flag'],ci=None)\nplt.ylabel(\"raised_amount_usd (in millions)\")\nplt.title(\"Total Amount of Investement for Top 9 Countries\") \nplt.show()\n","ed68c629":"TIC_D1.reset_index(inplace=True)\nTIC_D2.reset_index(inplace=True)\nTIC_D3.reset_index(inplace=True)\n\nTIC_D1 = TIC_D1.sort_values(by='Total_Investment_Count',ascending = False).head(n=3)\nTIC_D1['Country'] = 'USA'\nTIC_D2 = TIC_D2.sort_values(by='Total_Investment_Count',ascending = False).head(n=3)\nTIC_D2['Country'] = 'GBR'\nTIC_D3 = TIC_D3.sort_values(by='Total_Investment_Count',ascending = False).head(n=3)\nTIC_D3['Country'] = 'IND'\n\nTIC=pd.merge(pd.merge(TIC_D1,TIC_D2,how='outer'),TIC_D3,how='outer')\n\nTIC","b1de408a":"plt.figure(figsize=[10.0,5.0],dpi=120,frameon=True)\nsns.barplot(x='Country', y='Total_Investment_Count', hue='main_sectors',data=TIC)\nplt.ylabel(\"Total Investment Count\")\nplt.xlabel(\"Top 3 Countries\")\nplt.title(\"Number of Investments in the Top 3 Sectors of the Top 3 Countries\") \nplt.show()","9216eb1e":"# Checkpoint 3: Country Analysis","a58a7b95":"# Spark Funds Investment EDA\n\nYou work for Spark Funds, an asset management company. Spark Funds wants to make investments in a few companies. The CEO of Spark Funds wants to understand the global trends in investments so that she can take the investment decisions effectively.","e70c3e9b":"# Checkpoint 6: Plots","d186a942":"`plot 2:` A plot showing the top 9 countries against the total amount of investments of funding type FT. This should make the top 3 countries (Country 1, Country 2, and Country 3) very clear.        ","1aa93e5f":"Plot 2: A plot showing the top 9 countries against the total amount of investments of funding type FT. This should make the top 3 countries (Country 1, Country 2, and Country 3) very clear.        ","aa7aca01":"Create three separate data frames D1, D2 and D3 for each of the three countries ","1e6014c9":"# Business and Data Understanding\n\nSpark Funds has two minor constraints for investments:\n\n- It wants to invest between 5 to 15 million USD per round of investment\n\n- It wants to invest only in English-speaking countries because of the ease of communication with the companies it would invest in\n\n- For your analysis, consider a country to be English speaking only if English is one of the official languages in that country\n\nYou may use this list: Click here \" https:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_territories_where_English_is_an_official_language \" for a list of countries where English is an official language.","60dac563":"#  Checkpoint 2: Funding Type Analysis","3652ace6":"Base on the constraints applied by Sparks Funds we can say that only `venture` funding type's investment amount is between 5 million and 15 million","005249f3":"# Checkpoint 4: Sector Analysis 1","a19797e1":"Task 1: Extract the `primary sector` from category_list in venture_frame dataframe by extracting the set of characters before the first '|'","d1683481":"# CheckPoint 1","f9aafbb3":"`Plot 3:` A plot showing the number of investments in the top 3 sectors of the top 3 countries on one chart (for the chosen investment type FT). This plot should clearly display the top 3 sectors each in Country 1, Country 2, and Country 3.","e6fffd31":"Calculate the most representative value of the investment amount for each of the four funding types (venture, angel, seed, and private equity)","3c10e123":"# Checkpoint 5: Sector Analysis 2","d09ae276":"Task 2: Use the mapping file `mapping.csv` to map each primary sector to one of the eight main sectors (Note that \u2018Others\u2019 is also considered one of the main sectors)","e2bb04d4":"`Plot 1:` A plot showing the representative amount of investment in each funding type. This chart should make it clear that a certain funding type (FT) is best suited for Spark Funds.   ","e461cab4":"We can identify the english speaking country from the wiki link - \n https:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_territories_where_English_is_an_official_language\n\n##### So, the top 3 english speaking companies are for our analysis are - USA,GBR,IND"}}