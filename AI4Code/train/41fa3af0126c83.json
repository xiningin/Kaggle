{"cell_type":{"07a47c1d":"code","f2fd62c0":"code","c6e3e572":"code","8c01e898":"code","160b866c":"code","b6db1e3f":"code","34e5ee1a":"code","f025af5f":"code","ac22dab3":"code","e26a7412":"code","d2f905fa":"code","b6d31512":"code","64f0bd02":"code","4bea1a09":"code","d183b93b":"code","8aedd06b":"code","94e365c2":"code","c9c141ae":"code","92be4dae":"code","ddd38dd7":"code","13e9dc22":"code","694a596a":"markdown","309ebca7":"markdown","6c12c2c4":"markdown","f343064b":"markdown","9fe0e2b8":"markdown"},"source":{"07a47c1d":"import numpy as np \nimport os\nimport random\nimport cv2","f2fd62c0":"list_directory_classes = ['black_dress', 'blue_dress', 'green_pants', 'brown_pants']","c6e3e572":"labels = []\nfor label in os.listdir('..\/input\/apparel-images-dataset'):\n    if label in list_directory_classes:\n        labels.append(label)","8c01e898":"paths = []\nfor label in labels:\n    current_label = label\n    org_paths = os.path.join('..\/input\/apparel-images-dataset' + ('\/' + current_label) )\n    #print(org_paths) >>>>> ..\/input\/apparel-images-dataset\/black_dress\n    for img in os.listdir(org_paths):\n        #print(img)\n        main_path = os.path.join(org_paths, img)\n        paths.append(main_path)","160b866c":"random.shuffle(paths)","b6db1e3f":"x = []\ny = []\nfor path in paths:\n        label = path.split('\/')[3].split('_')\n        img = cv2.imread(path)\n        img = cv2.resize(img, (96, 96))\n        x.append(img)\n        y.append(label)","34e5ee1a":"from sklearn.preprocessing import MultiLabelBinarizer\nimport matplotlib.pyplot as plt","f025af5f":"mlb = MultiLabelBinarizer()\ny = mlb.fit_transform(y)","ac22dab3":"y[:15]","e26a7412":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","d2f905fa":"y = np.array(y)","b6d31512":"std = StandardScaler()\nx = std.fit_transform(np.array(x).reshape(-1, 1))\nx = x.reshape(1490, 96, 96, 3)","64f0bd02":"x.shape","4bea1a09":"train_x, val_x, train_y, val_y = train_test_split(x, y, test_size = 0.3, random_state = 1)","d183b93b":"from tensorflow.keras.layers import Dense, Conv2D, BatchNormalization, Dropout, Flatten, MaxPooling2D\nfrom tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.optimizers import Adam","8aedd06b":"aug = ImageDataGenerator(rotation_range=20, width_shift_range=0.2,\n    height_shift_range=0.2, zoom_range=0.2,\n    horizontal_flip=True)","94e365c2":"model = Sequential()\n\nmodel.add(Conv2D(32, 3, padding = 'same', input_shape = (96, 96, 3), kernel_initializer = 'he_normal', activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(2))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(64, 3, padding = 'same', kernel_initializer = 'he_normal', activation = 'relu'))\nmodel.add(BatchNormalization())\n\nmodel.add(Conv2D(64, 3, padding = 'same', kernel_initializer = 'he_normal', activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.25))\n\n\nmodel.add(Flatten())\nmodel.add(Dense(512, activation = 'relu', kernel_initializer = 'he_normal'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(6, activation = 'sigmoid'))","c9c141ae":"model.summary()","92be4dae":"model.compile(loss=\"binary_crossentropy\", optimizer = Adam(learning_rate=1e-3) ,metrics=[\"accuracy\"])","ddd38dd7":"history = model.fit_generator(aug.flow(train_x, train_y, batch_size = 64),\n                            steps_per_epoch=len(train_x) \/\/ 64,\n                             validation_data = (val_x, val_y), epochs = 20, verbose = 1)","13e9dc22":"import pandas as pd\npd.DataFrame(history.history).plot()","694a596a":"### Seprate Just Four File As Our Labels:","309ebca7":"# Read File:","6c12c2c4":"### Now We Shuffle The Path:","f343064b":"### Our LAbels Looks Like This:\n### \n ['blue', 'dress'],\n ['blue', 'dress'],\n ['blue', 'dress'],\n ['brown', 'pants'],\n ['blue', 'dress'],\n ['blue', 'dress'],\n ['black', 'dress']","9fe0e2b8":"# Creat Model:"}}