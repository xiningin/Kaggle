{"cell_type":{"3c85a398":"code","092950fa":"code","1e5ca5ba":"code","579c0029":"code","e6a04330":"code","7041fde5":"code","0e22762b":"code","774efead":"code","da18f277":"code","a2934720":"code","de2a5003":"code","e35454c3":"code","549fa99d":"code","91cce931":"code","bb0434ad":"code","e8f79503":"code","41a4ee74":"code","5acd90ab":"code","45f3fad8":"code","b3f9aa73":"code","0204014b":"markdown","62115a31":"markdown","d8638452":"markdown","70273866":"markdown","683b0005":"markdown","519c093a":"markdown","6b0cd6c4":"markdown","70f31c42":"markdown","c6955d7f":"markdown","3763a000":"markdown","094c201a":"markdown"},"source":{"3c85a398":"import numpy as np \nimport pandas as pd \nimport warnings\nimport seaborn as sns\nfrom matplotlib_venn import venn3\nfrom matplotlib_venn import venn2\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.pylab as plt\nimport squarify    ","092950fa":"mcr = pd.read_csv('..\/input\/multipleChoiceResponses.csv')\nffr = pd.read_csv('..\/input\/freeFormResponses.csv')\nss = pd.read_csv('..\/input\/SurveySchema.csv')","1e5ca5ba":"mcr.head()","579c0029":"time = mcr['Time from Start to Finish (seconds)']\ntime.pop(0)\nminutes = [round(int(i)\/60) for i in time]","e6a04330":"print(\"Maximum Time Taken By a User to fill the survey is:\",max(minutes), 'Minutes' )\nprint(\"Minimum Time Taken By a User to fill the survey is:\",min(minutes), 'Minutes' )\nprint(\"Average Time Taken By a User to fill the survey is:\",sum(minutes)\/len(minutes), 'Minutes' )","7041fde5":"gender = mcr['Q1']\ngender.pop(0)\nnames= mcr['Q1'].value_counts().index\nnames = np.array(names).tolist()\ncolors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral']\nexplode = (0, 0.1, 0, 0) \nsize= mcr['Q1'].value_counts().values\nplt.pie(size,explode=explode,labels=names,colors=colors,autopct='%1.1f%%', shadow=True)\nplt.style.use('classic')\nplt.show()","0e22762b":"val = mcr.groupby(\"Q2\").filter(lambda x: len(x) > 1)\nsns.countplot(x='Q2', palette=\"Pastel2\",data = val);\nplt.xticks(rotation=45)","774efead":"k = []\nfor i in val['Q7'].value_counts().index: \n    k.append(val[(val['Q7'] == i)]['Q10'].value_counts())","da18f277":"exploring = [k[i]['We are exploring ML methods (and may one day put a model into production)'] for i in range(0,19)]\nstarted = [k[i]['We recently started using ML methods (i.e., models in production for less than 2 years)'] for i in range(0,19)]\nestablished = [k[i]['We have well established ML methods (i.e., models in production for more than 2 years)'] for i in range(0,19)]\nnot_using = [k[i]['No (we do not use ML methods)'] for i in range(0,19)]\nusing = [k[i]['We use ML methods for generating insights (but do not put working models into production)'] for i in range(0,19)]\nno = [k[i]['I do not know'] for i in range(0,19)]","a2934720":"barWidth = 0.25\nplt.figure(figsize=(20,10))\nr1 = np.arange(len(exploring))\nplt.bar(r1,exploring, width=barWidth, edgecolor='white', label='Exploring ML methods')\nplt.bar(r1,started, width=barWidth, edgecolor='white', label='Started using ML methods')\nplt.bar(r1,established, width=barWidth, edgecolor='white', label='Have been using ML')\nplt.bar(r1,not_using, width=barWidth, edgecolor='white', label='We dont use ML')\nplt.bar(r1,using, width=barWidth, edgecolor='white', label='Use ML for insights not production')\nplt.bar(r1,no, width=barWidth, edgecolor='white', label='I dont know')\nparams = {'legend.fontsize': 20,\n          'legend.handlelength': 2}\nplt.xlabel('group', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(exploring))], list(val['Q7'].value_counts().index))\nplt.legend()\nplt.rcParams.update(params)\nplt.xlabel('Industry Type',fontsize=20)\nplt.xticks(fontsize=20,rotation=90)\nplt.style.use('ggplot')\nplt.show()","de2a5003":"coun = val[(val['Q3'] == 'United States of America') |( val['Q3'] == 'India')|( val['Q3'] == 'China')|( val['Q3'] == 'Russia')]\nplt.figure(figsize=(10,6))\nparams = {'legend.fontsize': 7,\n          'legend.handlelength': 2}\nplt.rcParams.update(params)\n\nsns.countplot(x=\"Q3\",hue=\"Q4\", data=coun)\nplt.show()","e35454c3":"#val['Q8'].value_counts()\nplt.figure(figsize=(10,6))\nsns.countplot(x=\"Q3\",hue=\"Q8\", data=coun)\nplt.title('Experience of ML practitioners')\nplt.show()","549fa99d":"plt.figure(figsize=(10,40))\nsns.countplot(y=\"Q6\",hue=\"Q2\", data=val, palette ='muted')\nparams = {'legend.fontsize': 10,\n          'legend.handlelength': 2}\nplt.rcParams.update(params)\nplt.show()","91cce931":"val['Q12_MULTIPLE_CHOICE'].value_counts()\nl = ['Jupyter\/Rstudio','Statistical software(Excel etc)','Other','SAS,SPSS etc','Cloud based','BI software']\nsquarify.plot(sizes=val['Q12_MULTIPLE_CHOICE'].value_counts().values, label=l, alpha=.8 )\nplt.axis('off')\nplt.show() ","bb0434ad":"jupyter = val['Q13_Part_1'].count()\nrstudio = val['Q13_Part_2'].count()\nmatlab = val['Q13_Part_7'].count()\njup_r = len(val[(val['Q13_Part_1']=='Jupyter\/IPython') & (val['Q13_Part_2']=='RStudio')])\njup_mat = len(val[(val['Q13_Part_1']=='Jupyter\/IPython') & (val['Q13_Part_7']=='MATLAB')])\nr_mat = len(val[(val['Q13_Part_2']=='RStudio') & (val['Q13_Part_7']=='MATLAB')])\njup_r_mat = len(val[(val['Q13_Part_1']=='Jupyter\/IPython') & (val['Q13_Part_2']=='RStudio')& (val['Q13_Part_7']=='MATLAB')])","e8f79503":"v=venn3(subsets = (jupyter, rstudio, jup_r, matlab,jup_mat,r_mat,jup_r_mat), set_labels = ('Jupyter Notebook', 'R studio', 'Matlab'))\nplt.title(\"ML and DL\")\nplt.show()","41a4ee74":"spy = val['Q13_Part_13'].count()\npyc = val['Q13_Part_3'].count()\ns_p = len(val[(val['Q13_Part_13']=='Spyder') & (val['Q13_Part_3']=='PyCharm')])","5acd90ab":"v = venn2(subsets = (spy, pyc, s_p), set_labels = ('Spyder', 'Pycharm'))\nplt.title(\"Python IDE's Pycharm vs Spyder\")\nplt.show()","45f3fad8":"sublime = val['Q13_Part_1'].count()\natom = val['Q13_Part_6'].count()\nnote = val['Q13_Part_7'].count()\nsub_atom = len(val[(val['Q13_Part_10']=='Sublime Text') & (val['Q13_Part_6']=='Atom')])\nsub_note = len(val[(val['Q13_Part_9']=='Notepad++') & (val['Q13_Part_7']=='MATLAB')])\natom_note = len(val[(val['Q13_Part_6']=='Atom') & (val['Q13_Part_9']=='Notepad++')])\nsub_at_not = len(val[(val['Q13_Part_10']=='Sublime Text') & (val['Q13_Part_6']=='Atom')& (val['Q13_Part_9']=='Notepad++')])","b3f9aa73":"v=venn3(subsets = (sublime, atom, sub_atom, note,sub_note,atom_note,sub_at_not), set_labels = ('Sublime ', 'Atom', 'Notepad++'))\nplt.title(\"Source code editors\")\nplt.show()","0204014b":"## Usage of machine learning  in Various industries ","62115a31":"## Venn Diagram of the Programming Languages\/IDE's used ","d8638452":"# ANALYSIS OF 2018 KAGGLE ML & DS SURVEY ","70273866":"## Age of Survey participants with respect to their designation\n\n- Most of the data scientists, analysts and consultants are in their 20s and early 30s\n- As expected Students are between 18- 24 (Undergraduates and Postgraduates)\n- Managers , Chief officers, Business analysts and Statisicians tend to be older\n","683b0005":"## Age Distribution of users who filled the Survey \n> Most of the survey participants are between 25-29","519c093a":"## Gender Distribution of users who filled the Survey \n\n> Looks like only 17% of the survey participant are females, Gotta pump those Numbers up","6b0cd6c4":"## Time Taken by users to fill the Survey ","70f31c42":"## Analysis with respect to Experience in USA, India, Russia and China\n- India has Highest numbers Noobs.....No suprise given the craze\n-  China has the best balance between Noobs\/Experts","c6955d7f":"##  Comparison of Data science students in India vs USA vs China vs Russia \n\n- Majority of the American, Chinese and Russian data scientists hold a masters degreee\n-  Only in India majority of data scientists have a bachelors degree","3763a000":"![img](https:\/\/www.kaggle.com\/static\/images\/home\/computer.png)","094c201a":"**Primary Tools of Data scientists**"}}