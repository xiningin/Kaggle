{"cell_type":{"8b0a0419":"code","3c685350":"code","f5727226":"code","53622184":"code","150b58be":"code","08a5409e":"code","384d30ed":"code","be7669c5":"code","8b2a1f50":"code","0bf3e08a":"code","bca4aac9":"code","2fc459f6":"code","6e2836d5":"code","0f2c115a":"code","a9689738":"code","31f4f825":"code","ae1c24b5":"code","4863712f":"code","23dad42c":"code","d323bfa3":"code","e7e78c33":"markdown","9a5511b7":"markdown","9507f76f":"markdown","dfe46c9b":"markdown","8043e325":"markdown","9a4ea990":"markdown","31eac3f1":"markdown","abef0354":"markdown","b98df682":"markdown","b8ec3622":"markdown","a60046b5":"markdown","6cdbbcf4":"markdown","edb5db45":"markdown","3c4877e3":"markdown","de8a552a":"markdown"},"source":{"8b0a0419":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3c685350":"import numpy as np \nimport pandas as pd \nimport tensorflow as tf\nimport matplotlib.pyplot as plt","f5727226":"train_data = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_train.csv')\ntest_data = pd.read_csv('..\/input\/fashionmnist\/fashion-mnist_test.csv')","53622184":"print(train_data.shape)\nprint(test_data.shape)","150b58be":"train_data.head()","08a5409e":"train_data.sample(5)","384d30ed":"train_data['label'].value_counts()","be7669c5":"test_data[\"label\"].value_counts()","8b2a1f50":"train_data.isnull().sum()","0bf3e08a":"import missingno as msno\nmsno.matrix(train_data)","bca4aac9":"for i in range (5):\n    x=train_data.iloc[i,1:]   \n    plt.figure()  \n    plt.imshow(np.squeeze(x.values.reshape(28,28,1)))","2fc459f6":"train_df = np.array(train_data, dtype = 'float32')\ntest_df = np.array(test_data, dtype='float32')","6e2836d5":"X_train = train_df[:,1:]\ny_train = train_df[:,0]   \nX_test= test_df[:,1:]\ny_test=test_df[:,0]       ","0f2c115a":"X_train = X_train.reshape(X_train.shape[0], 28, 28, 1)\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1)","a9689738":"X_train = X_train \/ 255.0\nX_test= X_test \/ 255.0","31f4f825":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(64, (3, 3), activation='relu',\n                           input_shape=(28, 28, 1)),\n    tf.keras.layers.MaxPooling2D(2, 2),\n    tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(128, activation=tf.nn.relu),\n    tf.keras.layers.Dense(10, activation=tf.nn.softmax)\n])","ae1c24b5":"model.summary()","4863712f":"model.compile(optimizer='adam',\n loss='sparse_categorical_crossentropy',\n metrics=['accuracy'])","23dad42c":"model.fit(X_train, y_train, \n          epochs=15, \n          batch_size=50, \n          shuffle=True, \n          validation_split=0.1)","d323bfa3":"score = model.evaluate(X_test, y_test)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])","e7e78c33":"## Evaluating the model","9a5511b7":"### Let's arrange shape of images","9507f76f":"# Convolutional Neural Network (CNN) using Fashion MNIST","dfe46c9b":"## Read Dataset","8043e325":"### Let's list all files under the input directory.","9a4ea990":"## Data Preprocessing","31eac3f1":"### Let's normalize train and test datasets","abef0354":"![](https:\/\/github.com\/zalandoresearch\/fashion-mnist\/raw\/master\/doc\/img\/fashion-mnist-sprite.png)","b98df682":"### Let's split into datasets","b8ec3622":"### Convert datasets into numpy structure","a60046b5":"## Data exploration","6cdbbcf4":"## Building the model","edb5db45":"## Check missing data","3c4877e3":"## Import libraries","de8a552a":"## Data Visualization"}}