{"cell_type":{"545856ba":"code","a9feba50":"code","751e3a6d":"code","f64f9a4e":"code","d3fc0017":"code","439d7a45":"code","4d6a2392":"code","a3461120":"code","90e6ca5d":"code","94aaf5a1":"code","a259e95a":"code","2c7322b6":"code","5b62a22a":"code","5ead49e3":"code","98b3b5eb":"code","c451bb62":"code","24dffffe":"code","ec2521ad":"markdown","4be2319b":"markdown","cbb312d6":"markdown","bf9b61b8":"markdown","41d7488a":"markdown","6dffbb29":"markdown","4789504f":"markdown","7b995991":"markdown","a1cb1d22":"markdown","c3b9bc98":"markdown","41b2e957":"markdown","5a43ff27":"markdown"},"source":{"545856ba":"import numpy as np\nimport pandas as pd \nfrom sklearn.ensemble import RandomForestClassifier\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a9feba50":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n#train_df.head()\n\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n#test_df.head()\n\ntraintest_df = [train_df, test_df]","751e3a6d":"print(train_df.columns.values)","f64f9a4e":"women = train_df.loc[train_df.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"Percent of women who survived:\", rate_women)","d3fc0017":"men = train_df.loc[train_df.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"Percent of men who survived:\", rate_men)","439d7a45":"train_df.describe(include=['O'])","4d6a2392":"train_df[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)","a3461120":"for dataset in traintest_df:\n    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\npd.crosstab(train_df['Title'], train_df['Sex'])","90e6ca5d":"for dataset in traintest_df:\n    dataset['Title'] = dataset['Title'].replace(['Capt', 'Col','Countess','Lady','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Other')\n\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n    \ntrain_df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()","94aaf5a1":"title_clear = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Other\": 5}\nfor dataset in traintest_df:\n    dataset['Title'] = dataset['Title'].map(title_clear)\n    dataset['Title'] = dataset['Title'].fillna(0)\n\ntrain_df.head()","a259e95a":"train_df = train_df.drop(['Name', 'PassengerId'], axis=1)\ntest_df = test_df.drop(['Name'], axis=1)\ntraintest_df = [train_df, test_df]\ntrain_df.shape, test_df.shape","2c7322b6":"for dataset in traintest_df:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ntrain_df.head()","5b62a22a":"train_df = train_df.drop(['Age', 'SibSp', 'Parch','Ticket', 'Fare','Cabin','Embarked'], axis=1)\ntraintest_df = [train_df, test_df]\ntrain_df.head()","5ead49e3":"test_df = test_df.drop(['Age', 'SibSp', 'Parch','Ticket', 'Fare','Cabin','Embarked'], axis=1)\ntraintest_df = [train_df, test_df]\ntest_df.head()","98b3b5eb":"df1_train = train_df.drop(\"Survived\", axis=1)\ndf2_train = train_df[\"Survived\"]\ndf1_test  = test_df.drop(\"PassengerId\", axis=1).copy()\ndf1_train.shape, df2_train.shape, df1_test.shape","c451bb62":"random_forest_1 = RandomForestClassifier(n_estimators=100)\nrandom_forest_1.fit(df1_train, df2_train)\ndf2_pred = random_forest_1.predict(df1_test)\nrandom_forest_1.score(df1_train, df2_train)\nrate_random_forest = round(random_forest_1.score(df1_train, df2_train) * 100, 2)\nrate_random_forest","24dffffe":"my_submission = pd.DataFrame({\"PassengerId\": test_df[\"PassengerId\"],\"Survived\": df2_pred})\nmy_submission.to_csv('my_submission_AG5.csv', index=False)\nprint('Submission was successfully!')","ec2521ad":"**Which features are obviously available in the dataset \"train_df?**","4be2319b":"**Actions: **\n1. drop the Name feature from training and testing datasets\n2. drop PassengerId feature in the training dataset","cbb312d6":"**What is the percentage of women who have survived?**","bf9b61b8":"**Checks II based on the problem description and the first data checks:**\n\n1. Women (Sex=female) survived with 75% rate (0.7420382165605095)\n2. 1st class passengers (Pclass=1) survived with 63% rate (0.629630)\n3. If Title == Master survival with 58% rate (0.575000)\n","41d7488a":"**Prediction model with Random Forest Classifier: **","6dffbb29":"**Action: **\n1. drop feature \"Age\" \n2. drop feature \"SibSp\"\n3. drop feature \"Parch\"\n4. drop feature \"Ticket\" \n5. drop feature \"Fare\" \n6. drop feature \"Cabin\" \n7. drop feature \"Embarked\"","4789504f":"**Preparation of a dataframe for the train and test data:**","7b995991":"**Checks based on the problem description and the first data checks:**\n\n1.\tWomen (Sex=female) survived with 75% rate (0.7420382165605095)\n3.\t1st class passengers (Pclass=1) survived with 63% rate (0.629630)","a1cb1d22":"**Group name and titels:**","c3b9bc98":"**Play around with the names and titels:**","41b2e957":"**Action: **\n\n1. converting Sex feature to a new feature called Sex where female=1 and male=0.","5a43ff27":"**What is the percentage of men who have survived?**"}}