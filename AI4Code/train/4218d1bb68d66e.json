{"cell_type":{"03466c71":"code","bed180ed":"code","8c78cc5d":"code","5c36de24":"code","539e5862":"code","6c8bc87d":"code","ec106e4d":"code","bbf96f07":"code","3f40a935":"code","e4ed61bb":"code","81eff42c":"code","1a26f8f7":"code","686d2f9e":"code","54008335":"code","0334261a":"code","937addbd":"code","1524d2ee":"code","d43e1011":"code","71a84a14":"code","df825658":"code","e6324262":"code","68d1458a":"code","26534318":"code","6174cdaa":"code","fbc04c4f":"code","7a3933d1":"code","19c7bca0":"code","777f4b67":"code","a0c80dd4":"markdown","0eb24959":"markdown","3bf186a9":"markdown","482ee673":"markdown","8f8659ad":"markdown","59906df5":"markdown","195b1735":"markdown","bd0a4344":"markdown","e156407d":"markdown","a85ca7dd":"markdown","b0d12cc6":"markdown","8e9c1f99":"markdown"},"source":{"03466c71":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bed180ed":"df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict.csv')","8c78cc5d":"df.head()","5c36de24":"df.drop(columns='Serial No.', inplace=True)\ndf.head()","539e5862":"df.columns = ['GRE','TOEFL','Rating','SOP','LOR','CGPA','Research','Chance']","6c8bc87d":"df.head()","ec106e4d":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","bbf96f07":"df.describe()","3f40a935":"df.isnull().sum()","e4ed61bb":"plt.figure(figsize=(8,8))\nsns.heatmap(df.corr(), annot=True, cmap='Blues')","81eff42c":"f,(ax1,ax2) = plt.subplots(1,2, figsize=(20,5))\nax1.set_title(\"Admission Chance vs GRE Score\")\nax2.set_title(\"Admission Chance vs TOEFL Score\")\nsns.regplot(x=df.GRE, y=df.Chance, ax=ax1)\nsns.regplot(x=df.TOEFL, y=df.Chance, ax=ax2)\n","1a26f8f7":"f,(ax1,ax2) = plt.subplots(1,2, figsize=(20,5))\nax1.set_title(\"Admission Chance vs GRE (Research)\")\nax2.set_title(\"Admission Chance vs TOEFL (Research)\")\nsns.scatterplot(x=df.GRE, y=df.Chance, hue=df.Research, ax=ax1)\nsns.scatterplot(x=df.TOEFL, y=df.Chance, hue=df.Research, ax=ax2)","686d2f9e":"sns.lmplot(x='GRE', y='Chance', hue='Research', data=df)\nplt.title(\"Admission Chance vs GRE Score (Research)\")","54008335":"sns.lmplot(x='TOEFL', y='Chance', hue='Research', data=df)\nplt.title(\"Admission Chance vs TOEFL Score (Research)\")","0334261a":"sns.lmplot(x='CGPA', y='Chance', hue='Research', data=df)\nplt.title(\"Admission Chance vs CGPA\")","937addbd":"f,(ax1,ax2,ax3) = plt.subplots(1,3, figsize=(20,5))\nax1.set_title(\"Admission Chance vs LOR\")\nax2.set_title(\"Admission Chance vs SOP\")\nax3.set_title(\"Admission Chance vs School Rating\")\nsns.scatterplot(x=df.LOR, y=df.Chance,ax=ax1)\nsns.scatterplot(x=df.SOP, y=df.Chance,ax=ax2)\nsns.scatterplot(x=df.Rating, y=df.Chance, ax=ax3)\n","1524d2ee":"features=['GRE','TOEFL','CGPA','Research']","d43e1011":"X=df[features]\ny=df['Chance']","71a84a14":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import mean_squared_error","df825658":"scaler = StandardScaler()\nscaler.fit(X)","e6324262":"X_scaled = scaler.transform(X)","68d1458a":"X_train,X_test,y_train,y_test = train_test_split(X_scaled,y,test_size=0.25, random_state=0)","26534318":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","6174cdaa":"lr = LinearRegression()","fbc04c4f":"lr.fit(X_train,y_train)","7a3933d1":"y_hat=lr.predict(X_test)","19c7bca0":"print(\"R2: \",lr.score(X_test,y_test))","777f4b67":"print(\"RMSE: \",np.sqrt(mean_squared_error(y_test,y_hat)))","a0c80dd4":"Starting to look better already","0eb24959":"<h1>Background<\/h1>\n<p>We are going to explore some graduate admissions data for Post-Graduate Acceptance Probablilities based upon the following features:<ol>\n    <li>GRE Scores<\/li>\n    <li>TOEFL Scores<\/li>\n    <li>Undergraduate School Rating<\/li>\n    <li>Application Letter (SOP)<\/li>\n    <li>Letters of Recommendation(LOR)<\/li>\n    <li>Undergraduate GPA (CGPA)<\/li>\n    <li> Undergraduate Research<\/li>\n<\/ol>\n<\/p>","3bf186a9":"Now let's rename those columns for ease of referencing.","482ee673":"Now to drop some of unnecessary info. We can refer to the in-built indexing rather than using the provided Serial No. Makes calling data much simpler.","8f8659ad":"Certainly a point can be made for a positive trend for increases in LOR, SOP, and Rating scores. However, for the sake of developing a quick and simple initial Linear Regression Model, let's emit these for the initial run and see what happens!","59906df5":"<h1>Correlation<\/h1>\n<p>Taking a look at our correlation matrix, let's see some of the largest relators to Chance:<\/p>\n<ul>\n    <li>CGPA<\/li>\n    <li>GRE<\/li>\n    <li>TOEFL<\/li>\n    <\/ul>\n   ","195b1735":"<p>Now we have our data scaled and split into the appropriate training and testing sets. Now it's time to develop our Linear Regression Model<\/p>","bd0a4344":"Wow did we luck out! Clean looking so far.","e156407d":"<h1>Conclusion<\/h1>\n<p>Using some quick feature selection and evaluation, we came up with a linear model using only 4 features (GRE, TOEFL, CGPA, and Research) to produce an effective first attempt model. This should always be a good starting point. Produce something, evaluate, and iterate!<\/p>\n\n<p>Please provide feedback and insight below. Always looking to improve!<\/p>","a85ca7dd":"<h1>Data Exploration<\/h1>","b0d12cc6":"<p>Let's unpack some of the visuals that were just presented:<\/p>\n<ul>\n    <li>A visually apparent linear relationship between CGPA, GRE, and TOEFL with Acceptance Chance<\/li>\n    <li>A higher Chance based on research in conjunction with GRE and TOEFL scores<\/li>\n<\/ul>\n<p>Certainly a point can be made for a positive trend for increases in LOR, SOP, and Rating scores. However, for the sake of developing a quick and simple initial Linear Regression Model, let's emit these for the initial run and see what happens!<\/p>","8e9c1f99":"Let's take a look for any missing values that may require imputing."}}