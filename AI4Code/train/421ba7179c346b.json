{"cell_type":{"fd942f6c":"code","e043a825":"code","ce0e9e94":"code","6029873f":"code","af61c434":"code","7bbc2ff6":"code","2422f4f2":"code","7e66b2dc":"code","baac818a":"code","0a30b451":"code","e22945c2":"code","396333f9":"code","e80269c6":"code","28225dc7":"code","668f1a75":"code","ebb26a76":"code","89768197":"code","6e9b1aff":"code","073cfbcb":"code","dcef3cb6":"code","9884d3e8":"code","77212035":"code","98d1a5f0":"code","63dcbbdd":"code","03d68338":"code","e2d9d8c4":"code","ca038f94":"code","f6bf6fb5":"code","6a703d5f":"code","9b5ef849":"code","c94e5ac6":"code","a144d991":"code","f09b88a8":"code","24189faf":"code","45405463":"code","87c46137":"code","4c887285":"code","c50513ac":"code","36992b1f":"code","edaf2276":"code","6271be94":"code","b07c6124":"code","426bf57c":"code","2904727a":"code","49a9c9f7":"code","d3343b96":"code","34e37011":"code","74d757cf":"code","636bd1c6":"code","36d6c583":"code","a1da48f2":"code","48fb9ab2":"code","8d7ea8dc":"code","27ecc75e":"code","8d12471b":"code","957cd10e":"code","226253df":"code","f7b06e08":"code","987cc146":"code","fa0f096e":"code","faf32828":"code","b5283822":"code","9cd94931":"code","6481bfda":"code","ad292e38":"code","275f44b8":"code","c421881b":"code","3b9ee705":"code","1ee4aa05":"code","06d53283":"code","4ded5201":"code","4ac126b0":"code","c6c9305f":"code","c2a57c61":"code","27951708":"code","164f78a8":"code","d12ae437":"code","40d6751e":"code","f259eb09":"code","e51f1aee":"code","f4ca99b3":"code","ffcaf244":"code","1d87ef98":"code","883939ea":"markdown","93039ba4":"markdown","67ae8fe9":"markdown","37196e17":"markdown","6584420b":"markdown","69256376":"markdown","cb82ae16":"markdown","0ff6625a":"markdown","bf9418f4":"markdown","bbde6d19":"markdown","6adb8db0":"markdown","55af0b37":"markdown","9ee8adbf":"markdown","5d9f6ac5":"markdown","17943855":"markdown","a2f5facc":"markdown","f33e265b":"markdown","45606c9a":"markdown","4933a777":"markdown","afd70aba":"markdown","87a25aed":"markdown","fb54fb0d":"markdown","de90e7b4":"markdown","e89a2039":"markdown","0bf8af90":"markdown","e2210614":"markdown","0f166505":"markdown","696c3d9b":"markdown","010ba158":"markdown"},"source":{"fd942f6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e043a825":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt \n#import sidetable\nimport scipy.cluster.hierarchy as sch\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import LabelEncoder\nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn import metrics\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score","ce0e9e94":"df=pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')","6029873f":"df.head()","af61c434":"indices=df.loc[df['total_vaccinations']< (df['people_vaccinated'] + df['people_fully_vaccinated'] )].index\nindices","7bbc2ff6":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_vaccinated']+df.loc[df.index,'people_fully_vaccinated']","2422f4f2":"indices=df.loc[ (df['total_vaccinations']< df['people_vaccinated']) & df['people_fully_vaccinated'].isnull()].index\nindices","7e66b2dc":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_vaccinated']","baac818a":"indices=df.loc[ (df['total_vaccinations']< df['people_fully_vaccinated']) & df['people_vaccinated'].isnull()].index\nindices","0a30b451":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_fully_vaccinated']","e22945c2":"indices=df.loc[df['total_vaccinations']> (df['people_vaccinated'] + df['people_fully_vaccinated'] )].index\nindices","396333f9":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_vaccinated']+df.loc[df.index,'people_fully_vaccinated']","e80269c6":"df.isnull().sum()","28225dc7":"df_N=df.dropna()","668f1a75":"df_N.head()","ebb26a76":"indices= df.loc[(df['daily_vaccinations_raw'].isnull()) & (df['daily_vaccinations'].notnull())].index\nindices","89768197":"df.loc[df.index.isin(indices),'daily_vaccinations_raw'] = df.loc[df.index,'daily_vaccinations']","6e9b1aff":"indices= df.loc[(df['total_vaccinations'].isnull()) & (df['people_vaccinated'].notnull()) & (df['people_fully_vaccinated'].notnull())].index\nindices","073cfbcb":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_vaccinated']+df.loc[df.index,'people_fully_vaccinated']","dcef3cb6":"indices= df.loc[(df['total_vaccinations']>0) & (df['people_vaccinated'].notnull()) & (df['people_fully_vaccinated'].isnull())].index\nindices","9884d3e8":"df.loc[df.index.isin(indices),'people_fully_vaccinated'] = df.loc[df.index,'total_vaccinations']-df.loc[df.index,'people_vaccinated']","77212035":"indices= df.loc[(df['total_vaccinations']>0) & (df['people_vaccinated'].isnull()) & (df['people_fully_vaccinated'].notnull())].index\nindices","98d1a5f0":"df.loc[df.index.isin(indices),'people_vaccinated'] = df.loc[df.index,'total_vaccinations']-df.loc[df.index,'people_fully_vaccinated']","63dcbbdd":"df['Prev_vacc'] = df['total_vaccinations'].shift()\ndf['Prev_code'] = df['iso_code'].shift()","03d68338":"indices=df.loc[(df['total_vaccinations'].isnull()) & (df['Prev_vacc'].notnull()) & (df['daily_vaccinations_raw'].notnull()) & (df['Prev_code'] == df['iso_code'])].index\nwhile (len(indices)>0):\n   df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'Prev_vacc']+df.loc[df.index,'daily_vaccinations_raw']\n   df['Prev_vacc'] = df['total_vaccinations'].shift()\n   indices=df.loc[(df['total_vaccinations'].isnull()) & (df['Prev_vacc'].notnull()) & (df['daily_vaccinations_raw'].notnull())  & (df['Prev_code'] == df['iso_code'])].index","e2d9d8c4":"df['Prev_vacc_full'] = df['people_fully_vaccinated'].shift()","ca038f94":"indices=df.loc[(df['people_fully_vaccinated'].isnull()) & (df['Prev_vacc_full'].notnull())  & (df['Prev_code'] == df['iso_code'])].index\nwhile (len(indices)>0):\n   df.loc[df.index.isin(indices),'people_fully_vaccinated'] = df.loc[df.index,'Prev_vacc_full']\n   df['Prev_vacc_full'] = df['people_fully_vaccinated'].shift()\n   indices=df.loc[(df['people_fully_vaccinated'].isnull()) & (df['Prev_vacc_full'].notnull())  & (df['Prev_code'] == df['iso_code'])].index","f6bf6fb5":"indices= df.loc[(df['total_vaccinations']>0) & (df['people_vaccinated'].isnull()) & (df['people_fully_vaccinated'].notnull())].index\nindices\ndf.loc[df.index.isin(indices),'people_vaccinated'] = df.loc[df.index,'total_vaccinations']-df.loc[df.index,'people_fully_vaccinated']","6a703d5f":"df.isnull().sum()","9b5ef849":"df['day'] =pd.DatetimeIndex(df['date']).day\ndf['month'] = pd.DatetimeIndex(df['date']).month\n#df['year'] = pd.DatetimeIndex(df['date']).year\ndf['week_of_year'] =pd.DatetimeIndex(df['date']).weekofyear\ndf['day_of_year'] =pd.DatetimeIndex(df['date']).dayofyear\ndf['day_of_week'] =pd.DatetimeIndex(df['date']).dayofweek\n","c94e5ac6":"#df.loc[df['iso_code']=='TUN'][[\"total_vaccinations_per_hundred\",\"people_vaccinated_per_hundred\",\"people_fully_vaccinated_per_hundred\"]]\ndf.loc[df['iso_code']=='TUN']","a144d991":"df['Prev_total_vaccinations_per_hundred'] = df['total_vaccinations_per_hundred'].shift()","f09b88a8":"indices=df.loc[(df['total_vaccinations_per_hundred'].isnull()) & (df['Prev_total_vaccinations_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index\nwhile (len(indices)>0):\n   df.loc[df.index.isin(indices),'total_vaccinations_per_hundred'] = df.loc[df.index,'Prev_total_vaccinations_per_hundred']\n   df['Prev_total_vaccinations_per_hundred'] = df['total_vaccinations_per_hundred'].shift()\n   indices=df.loc[(df['total_vaccinations_per_hundred'].isnull()) & (df['Prev_total_vaccinations_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index","24189faf":"df['Prev_people_vaccinated_per_hundred'] = df['people_vaccinated_per_hundred'].shift()","45405463":"indices=df.loc[(df['people_vaccinated_per_hundred'].isnull()) & (df['Prev_people_vaccinated_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index\nwhile (len(indices)>0):\n   df.loc[df.index.isin(indices),'people_vaccinated_per_hundred'] = df.loc[df.index,'Prev_people_vaccinated_per_hundred']\n   df['Prev_people_vaccinated_per_hundred'] = df['people_vaccinated_per_hundred'].shift()\n   indices=df.loc[(df['people_vaccinated_per_hundred'].isnull()) & (df['Prev_people_vaccinated_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index","87c46137":"df.isnull().sum()","4c887285":"\ndf['Prev_people_fully_vaccinated_per_hundred'] = df['people_fully_vaccinated_per_hundred'].shift()","c50513ac":"indices=df.loc[(df['people_fully_vaccinated_per_hundred'].isnull()) & (df['Prev_people_fully_vaccinated_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index\nwhile (len(indices)>0):\n   df.loc[df.index.isin(indices),'people_fully_vaccinated_per_hundred'] = df.loc[df.index,'Prev_people_fully_vaccinated_per_hundred']\n   df['Prev_people_fully_vaccinated_per_hundred'] = df['people_fully_vaccinated_per_hundred'].shift()\n   indices=df.loc[(df['people_fully_vaccinated_per_hundred'].isnull()) & (df['Prev_people_fully_vaccinated_per_hundred'].notnull())  & (df['Prev_code'] == df['iso_code'])].index","36992b1f":"df.isnull().sum()","edaf2276":"df.loc[(df['daily_vaccinations_raw'].isnull()) & (df['daily_vaccinations'].isnull())]","6271be94":"indices=df.loc[(df['total_vaccinations']>0) & (df['Prev_vacc'].notnull()) & (df['daily_vaccinations_raw'].isnull()) &  (df['Prev_code'] == df['iso_code']) ].index\nindices","b07c6124":"df.loc[df.index.isin(indices),'daily_vaccinations_raw'] = df.loc[df.index,'total_vaccinations']-df.loc[df.index,'Prev_vacc']","426bf57c":"indices=df.loc[(df['total_vaccinations'].isnull()) & (df['people_vaccinated'].notnull()) & (df['people_fully_vaccinated'].notnull())].index\nindices","2904727a":"df.loc[df.index.isin(indices),'total_vaccinations'] = df.loc[df.index,'people_vaccinated']+df.loc[df.index,'people_fully_vaccinated']","49a9c9f7":"df.isnull().sum()","d3343b96":"indices=df.loc[(df['total_vaccinations']==0) & df['daily_vaccinations_raw'].isnull() & df['daily_vaccinations'].isnull()].index\nindices","34e37011":"df.loc[df.index.isin(indices),'daily_vaccinations_raw'] = df['total_vaccinations']\ndf.loc[df.index.isin(indices),'daily_vaccinations'] = df['total_vaccinations']","74d757cf":"indices=df.loc[(df['total_vaccinations']==0) & df['daily_vaccinations_raw']==0 & df['daily_vaccinations'].isnull()].index\nindices","636bd1c6":"df.loc[df.index.isin(indices),'daily_vaccinations'] = df['total_vaccinations']","36d6c583":"indices=df.loc[(df['total_vaccinations']==0) & df['daily_vaccinations']==0 & df['daily_vaccinations_raw'].isnull()].index\nindices","a1da48f2":"df.loc[df.index.isin(indices),'daily_vaccinations_raw'] = df['total_vaccinations']","48fb9ab2":"df.loc[(df['daily_vaccinations'].isnull())]","8d7ea8dc":"df.isnull().sum()","27ecc75e":"df=df.drop([\"country\",\"date\",\"Prev_vacc\",\"Prev_code\",\"Prev_vacc_full\",\"Prev_total_vaccinations_per_hundred\",\"Prev_people_vaccinated_per_hundred\",\"Prev_people_fully_vaccinated_per_hundred\"],axis=1)","8d12471b":"df.loc[df['iso_code']=='TUN'][[\"total_vaccinations\",\"people_vaccinated\",\"people_fully_vaccinated\",\"total_vaccinations_per_hundred\",\"people_vaccinated_per_hundred\",\"people_fully_vaccinated_per_hundred\",\"daily_vaccinations_per_million\"]]","957cd10e":"indices=df.loc[(df['people_fully_vaccinated']==0) & df['people_fully_vaccinated_per_hundred'].isnull()].index\nindices","226253df":"df.loc[df.index.isin(indices),'people_fully_vaccinated_per_hundred'] = 0","f7b06e08":"import missingno as msno\n%matplotlib inline\nmsno.matrix(df)","987cc146":"df.loc[(df['daily_vaccinations'].isnull()) | (df['people_vaccinated'].isnull()) ]","fa0f096e":"df.isnull().sum()","faf32828":"df['vaccines'].unique()","b5283822":"df['Johnson']= 0\ndf['Moderna']= 0\ndf['AstraZeneca']=0\ndf['Pfizer']=0\ndf['Sputnik']=0\ndf['Sinovac']=0\ndf['Sinopharm']=0\nfor i,n in enumerate(df['vaccines']):\n  if n.find(\"Johnson\")> -1:\n    df.loc[i,'Johnson']=1\n  if n.find(\"Moderna\")> -1:\n    df.loc[i,'Moderna']=1\n  if n.find(\"AstraZeneca\")> -1:\n    df.loc[i,'AstraZeneca']=1\n  if n.find(\"Pfizer\")> -1:\n    df.loc[i,'Pfizer']=1\n  if n.find(\"Sputnik\")> -1:\n    df.loc[i,'Sputnik']=1\n  if n.find(\"Sinopharm\")> -1:\n    df.loc[i,'Sinopharm']=1\n  if n.find(\"Sinovac\")> -1:\n    df.loc[i,'Sinovac']=1 ","9cd94931":"df=df.dropna()","6481bfda":"plt.subplots(figsize=(12, 12))\nsns.heatmap(df.corr(), annot=True, square=True)\nplt.show()","ad292e38":"d1= pd.DataFrame(df.groupby('Moderna').size())\nd1[\"type\"]=\"Moderna\"\n\nd2=  pd.DataFrame(df.groupby('Pfizer').size())\nd2[\"type\"]=\"Pfizer\"\n\nd3=  pd.DataFrame(df.groupby('Johnson').size())\nd3[\"type\"]=\"Johnson\"\n\nd4=  pd.DataFrame(df.groupby('AstraZeneca').size())\nd4[\"type\"]=\"AstraZeneca\"\n\nd5=  pd.DataFrame(df.groupby('Sputnik').size())\nd5[\"type\"]=\"Sputnik\"\n\n\n\nd6=  pd.DataFrame(df.groupby('Sinovac').size())\nd6[\"type\"]=\"Sinovac\"\n\nd7=  pd.DataFrame(df.groupby('Sinopharm').size())\nd7[\"type\"]=\"Sinopharm\"\n\nframes = [d1, d2,d3,d4,d5,d6,d7]\ndf_vacc = pd.concat(frames)\ndf_vacc","275f44b8":"df_vacc[\"value\"]= df_vacc.index\ndf_vacc","c421881b":"dfvacc=df_vacc.loc[df_vacc['value']==1]\ndfvacc=dfvacc.rename(columns={dfvacc.columns[0]: 'count'})\ndfvacc","3b9ee705":"\n\ndfvacc.plot.bar(x=\"type\", y=\"count\", rot=70, title=\"Number of records citing each vaccin type\");\n\n","1ee4aa05":"d11= pd.DataFrame(df.groupby(['iso_code','Moderna']).size())\nd11[\"type\"]=\"Moderna\"\n\nd22=  pd.DataFrame(df.groupby(['iso_code','Pfizer']).size())\nd22[\"type\"]=\"Pfizer\"\n\nd33=  pd.DataFrame(df.groupby(['iso_code','Johnson']).size())\nd33[\"type\"]=\"Johnson\"\n\nd44=  pd.DataFrame(df.groupby(['iso_code','AstraZeneca']).size())\nd44[\"type\"]=\"AstraZeneca\"\n\nd55=  pd.DataFrame(df.groupby(['iso_code','Sputnik']).size())\nd55[\"type\"]=\"Sputnik\"\n\nd66=  pd.DataFrame(df.groupby(['iso_code','Sinopharm']).size())\nd66[\"type\"]=\"Sinopharm\"\n\nd77=  pd.DataFrame(df.groupby(['iso_code','Sinovac']).size())\nd77[\"type\"]=\"Sinovac\"\n\nframes2 = [d11, d22,d33,d44,d55,d66, d77]\ndf_vacc2 = pd.concat(frames2)\nfilter1 = df_vacc2.index.get_level_values(\"iso_code\") \nfilter2= df_vacc2.index.get_level_values(\"Moderna\")\ndf_vacc2[\"iso_code\"]=filter1\ndf_vacc2[\"used\"]=filter2\n#df_vacc2\ndf_vacc3=df_vacc2.loc[df_vacc2[\"iso_code\"].isin([\"USA\",\"CHN\",\"FRA\",\"GER\",\"TUN\",\"AFG\",\"BRA\",\"JPN\"])]\ndf_vacc3=df_vacc3.loc[df_vacc3['used']==1]\ndf_vacc3=df_vacc3.rename(columns={df_vacc3.columns[0]: 'count'})\ndf_vacc3.reset_index(drop=True, inplace=True)\ndf_vacc3","06d53283":"df_vacc3.groupby(['iso_code','type'])['count'].sum().unstack().plot(kind=\"bar\", stacked=True)","4ded5201":"crossCountryVaccin = pd.crosstab(df_vacc3.iso_code, df_vacc3.type)\ncrossCountryVaccin ","4ac126b0":"pd.pivot_table(df_vacc3, index=[  'iso_code','type'],values=[\"count\"] )","c6c9305f":"sns.lineplot(x=\"month\", y=\"total_vaccinations\", data=df)\n","c2a57c61":"sns.lineplot(x=\"day_of_year\", y=\"total_vaccinations\", data=df)\n","27951708":"sns.lineplot(x=\"day\", y=\"total_vaccinations\", data=df)","164f78a8":"total = df.groupby('iso_code')['total_vaccinations'].max().reset_index()\nfhc = total.sort_values('total_vaccinations', ascending=False).head(5)\npd.set_option('display.float_format', lambda x: '%.0f'% x)\nfhc","d12ae437":"import plotly.express as px\nfig = px.bar(fhc, \n             x='iso_code', \n             y='total_vaccinations',\n             labels = {'country' : 'Country', 'total_vaccinations' : 'Total Vaccinations'},\n             title = \"Top 5 Countries With Biggest Vaccinations Progress\"\n            )\nfig.show()","40d6751e":"# Top 5 smallest countries with vaccinations progress\nflc = total.sort_values('total_vaccinations', ascending=False).tail(5)\nflc","f259eb09":"fig = px.bar(flc, \n             x='iso_code', \n             y='total_vaccinations',\n             labels = {'country' : 'Country', 'total_vaccinations' : 'Total Vaccinations'},\n             title = \"Top 5 Countries With Lowest Vaccinations Progress\"\n            )\nfig.show()","e51f1aee":"totalFull = df.groupby('iso_code')['people_fully_vaccinated'].max().reset_index()\nfhcFull = totalFull.sort_values('people_fully_vaccinated', ascending=False).head(5)\npd.set_option('display.float_format', lambda x: '%.0f'% x)\nfhcFull","f4ca99b3":"import plotly.express as px\nfig = px.bar(fhcFull, \n             x='iso_code', \n             y='people_fully_vaccinated',\n             labels = {'country' : 'Country', 'people_fully_vaccinated' : 'People_fully_vaccinated'},\n             title = \"Top 5 Countries With Biggest Full Vaccinations Number\"\n            )\nfig.show()","ffcaf244":"flcFull = totalFull.sort_values('people_fully_vaccinated', ascending=False).tail(5)\nflcFull","1d87ef98":"fig = px.bar(flcFull, \n             x='iso_code', \n             y='people_fully_vaccinated',\n             labels = {'country' : 'Country', 'people_fully_vaccinated' : 'People_fully_vaccinated'},\n             title = \"Top 5 Countries With Lowest Fully Vaccinated People\"\n            )\nfig.show()","883939ea":"evolution of vaccinations per day of week","93039ba4":"## data cleaning","67ae8fe9":"New rule adopted here\nif the total_vaccinated number is empty for the day D, then total_vaccinated (of day D)= total_vaccinated(day D-1) + daily_vaccinations_raw (day D)","37196e17":"I will remove all remaining rows with empty value","6584420b":"***new rule \nif people_fully_vaccinated is null, take the value from previous line","69256376":"number of entries where each type of vaccin was used","cb82ae16":"We will visualize number of records citing each vaccin type","0ff6625a":"Based on rules above inferred, we will autocomple now some columns","bf9418f4":"## Top 5 countries with slowest vaccinations number ","bbde6d19":"Let's remove all unnecessarz columns e.g., those that we added for computation or columns with redundant information like country and date","6adb8db0":"## VISUALIZATIONS","55af0b37":"Now we check again the values of columns \"people_fully_vaccinated_per_hundred\",\"daily_vaccinations_per_million\"","9ee8adbf":"Observation: if the number of people fully vaccinated is 0, so the value of \"people_fully_vaccinated_per_hundred\" will be obviously equals to 0","5d9f6ac5":"evolution of vaccinations per month","17943855":"data correlation","a2f5facc":"## Five Highest Countries in terms of total vaccinations number","f33e265b":"let's take a look how data look after the set of transofrmations above made","45606c9a":"based on dataframe above: we find out some relationships between columns.\nexamples are:\\\n . total_vaccinated= people_vaccinated+ people_fully_vaccinated\\\n . total_vaccinated= total_vaccinated in previous day+ daily_vaccinations_raw","4933a777":"if \"total_vaccinations_per_hundred\",\"people_vaccinated_per_hundred\", and \"people_fully_vaccinated_per_hundred\" are empty we will fill them with values of previous rows","afd70aba":"## which vaccines are used in some specific countries","87a25aed":"## evolution  total vaccinations","fb54fb0d":"## top 5 countries with lowest number of people fully vaccinated","de90e7b4":"## Study of people fully vaccinated","e89a2039":"we will assign a boolean value to each vaccin (1 if the vaccin was used, 0 if not used)","0bf8af90":"for all rows having total_vaccination equals to 0 we will assign a 0 value for \"daily_vaccinations_raw\" and \"daily_vaccinations\"","e2210614":"## study complete data","0f166505":"let's analyze the vaccines information","696c3d9b":"let's correct wrong results.  \nFor instance total_vaccinations should be the sum of the two columns 'people_vaccinated' and  people_fully_vaccinated'","010ba158":"evolution of vaccinations per day of year"}}