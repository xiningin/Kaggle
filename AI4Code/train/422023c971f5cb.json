{"cell_type":{"c3c1441b":"code","1166a8ef":"code","808bf096":"code","17dec435":"code","7d1a76a7":"code","b8d49549":"code","d1497706":"code","2cc798d5":"code","1963c0c9":"code","17c9a207":"code","685eecc5":"code","d8b1d304":"code","dbee0027":"code","c5dfd11c":"code","186866af":"code","7a763c37":"code","f6e33b28":"code","745581c2":"code","f80ffbf0":"code","733d66aa":"code","b157e53a":"code","adf80219":"code","8f5232cd":"code","7467e31c":"code","2e6c6ad6":"code","831ce936":"code","967363f8":"code","b4c3d33d":"code","19291206":"code","f6ccfbc0":"code","7cf3c93c":"code","32113b3b":"code","fa34e58d":"markdown"},"source":{"c3c1441b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1166a8ef":"im= pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv')","808bf096":"im.head()","17dec435":"im.shape","7d1a76a7":"im.describe()\n#data.describe() function will only display numarical data\n#here we can see counts, max value etc and we can see the missing values also in count section ","b8d49549":"im.info()\n#data.info provides counts of all columns and also display type of data","d1497706":"sns.heatmap(im.isnull())\n#visually we see the missing values using heatmap ","2cc798d5":"sns.countplot(x='Netflix', data=im)","1963c0c9":"im[\"Netflix\"].value_counts()\n# counts of values\n","17c9a207":"sns.countplot(x='Hulu', data=im)","685eecc5":"im[\"Hulu\"].value_counts()","d8b1d304":"sns.countplot(x='Prime Video', data=im)","dbee0027":"im[\"Prime Video\"].value_counts()","c5dfd11c":"sns.countplot(x='Disney+', data=im)","186866af":"im[\"Disney+\"].value_counts()","7a763c37":"sns.countplot(x='Age', data=im)","f6e33b28":"sns.pairplot(im)\nfig=plt.gcf()\nfig.set_size_inches(20,20)\n#as most of them are just categorical data so correlation is not there ","745581c2":"sns.scatterplot(x=\"Year\", y=\"Runtime\", hue=\"Age\",data=im)\nfig=plt.gcf()\nfig.set_size_inches(10,10)\n#we can see the outlier and the hue is Age. we can see that more films are made as time proceeds, this can be VISUALIZED using distribution graph\n","f80ffbf0":"sns.distplot(im['Year'])\n#by seeing the distribution graph we can say that most movies are made in period of 2000 to 2020 than 1940 to 2000\n","733d66aa":"plt.figure(figsize=(15,7))\nchains=im['Language'].value_counts()[:20]#change this value to see more result\nsns.barplot(x=chains,y=chains.index,palette='Set2')\nplt.title(\"Languages most commonly made \",size=20,pad=20)\nplt.xlabel(\"Counts\",size=15)\n# English movies are made more in world and it followed by Hindi movies ","b157e53a":"plt.figure(figsize=(15,7))\nchains=im['Directors'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most movies made by Director \",size=20,pad=20)\nplt.xlabel(\"Counts\",size=15)","adf80219":"plt.figure(figsize=(15,7))\nchains=im['Genres'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set2')\nplt.title(\"Genres\",size=20,pad=20)\nplt.xlabel(\"Counts\",size=15)\n#it looks like people like more Drama movies compared to action movies","8f5232cd":"plt.figure(figsize=(15,7))\nchains=im['Country'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set3')\nplt.title(\"Most movies made by Country\",size=20,pad=20)\nplt.xlabel(\"Counts\",size=15)\n#here we can see that USA makes more movies and follwed by India","7467e31c":"sns.distplot(im['IMDb'], bins=20)\n#this is the distribution graph of IMDb rating but we cant campare to Rotten Tomatoes because if see the heatmap\n#there are so missing values, so we drop NaN values and compare.\n\n#so about this distribution graph we can see avrage is about 6 rating","2e6c6ad6":"# Here Rotten Tomatoes is object value so we have to convert it to float. we do that by removing % symbol ","831ce936":"im_copy = im.copy(deep = True)","967363f8":"im_copy['Rotten Tomatoes'].unique()\nim_copy= im_copy.loc[im_copy['Rotten Tomatoes'] !='NEW']\nim_copy=im_copy.loc[im_copy['Rotten Tomatoes'] !='-'].reset_index(drop=True)\nremove_slash = lambda x:x.replace('%','') if type(x)==np.str else x\nim_copy['Rotten Tomatoes']=im_copy['Rotten Tomatoes'].apply(remove_slash).str.strip().astype('float')\nim_copy['Rotten Tomatoes'].head()","b4c3d33d":"im_copy.isnull().sum()\nim_copy.dropna(how='any', inplace=True)","19291206":"im_copy.shape\n# initally 16744 rows, after dropna there are only 3301","f6ccfbc0":"sns.distplot(im_copy['IMDb'])","7cf3c93c":"sns.distplot(im_copy['Rotten Tomatoes'])","32113b3b":"# clearly we can see that distribution graph are not same that means rating differs for same movies","fa34e58d":"# Data Visualization"}}