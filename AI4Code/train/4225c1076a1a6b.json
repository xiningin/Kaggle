{"cell_type":{"63c26600":"code","b51ec9e6":"code","0cee4bc0":"code","cf636172":"code","2ddb2c17":"code","4ce353ea":"code","27169e0f":"code","d5d6b4a1":"code","2413f746":"code","8267868b":"code","25fd6285":"code","6bbe16e5":"code","c38a2e69":"code","bbcb104e":"code","169e159e":"code","0baf2c8e":"code","c09c5082":"code","e443effe":"code","e8762c32":"code","9a81d939":"code","079a531a":"code","862d0f0a":"code","7a1f193c":"code","9d292eb7":"code","de490cb2":"code","a14b7bc8":"code","8361adf6":"code","47140b84":"code","6c3493d3":"code","f5546938":"code","f03d5c74":"code","fe4b0bd4":"code","4e74c324":"code","3305c121":"code","4a68c079":"code","abdaeec4":"code","6472162b":"code","6d0846c8":"code","1932f8d1":"code","33d15192":"code","4631680e":"code","052aa7f5":"code","b569fa1a":"code","c51115bb":"code","c507d9cd":"code","eefb0c7b":"code","116bfb2b":"code","1b7735c8":"code","b20bb03f":"code","6455d504":"code","d2bbc7ad":"code","de5bd6a9":"code","905da086":"code","30990589":"code","fed07b79":"code","285dc871":"code","eb1c1468":"code","fdd5c4ce":"code","7337a9be":"code","26eee7d4":"code","8fe11434":"code","8df25d8a":"code","20a54d5d":"code","739e87eb":"code","03e9c6a8":"code","ecf731a4":"code","8bc02ab3":"code","5844465e":"code","ee251f34":"code","179eeb98":"code","5f92db04":"code","bf5e8ab8":"code","e00421d0":"code","c8c4032f":"code","bbfad783":"code","c061822a":"code","04cddaba":"code","343ab4f7":"code","449de316":"code","0667e3b8":"code","adb20409":"code","4f297db3":"code","6a5b7699":"code","e9eeb2f5":"code","62123854":"code","034e73b3":"code","314cfbc7":"code","e6a38077":"code","83444a0a":"code","0c973f62":"code","f2cf5909":"code","734ec8cb":"code","53164e88":"code","0d0247b7":"code","0c6c7d95":"code","4e161880":"code","140da4e9":"code","f26dc51d":"code","88e13bfa":"code","719eef09":"code","872b9537":"code","d1a1ade0":"code","97ff2c52":"code","003e71a2":"code","ea21b10d":"code","7954b969":"code","d5c38b5c":"code","9d0fe5c8":"code","248ad09b":"code","b80cd7d0":"code","ff93a1c3":"code","e31f7d92":"code","c3658d68":"code","76d80e17":"code","f1573f30":"code","64b68173":"code","50cf0e5d":"code","4b769236":"code","cb7f1651":"code","3a6f73c8":"code","b9c77139":"code","d7eb1e12":"code","38a6d46f":"code","0474f2e6":"code","c5259b8c":"code","a77c00fa":"code","26358e5a":"code","3ade4c18":"code","11b0cb9f":"code","6228668e":"code","5f6682a7":"code","7507f87e":"code","6242164d":"code","1b53492b":"code","aca5b627":"code","93a4c5a2":"code","243690ab":"code","eb80cbbd":"code","570153e6":"code","6c0a94cc":"code","af25fc45":"code","1cc15476":"markdown","f059c188":"markdown","07849783":"markdown","259039fc":"markdown","72e4b0c9":"markdown","4325e4c0":"markdown","fdc0cafb":"markdown","63bcd148":"markdown","21a359e6":"markdown","7ab6883d":"markdown","bc26e87c":"markdown","d692a0c5":"markdown","b6863591":"markdown","a14bfdf7":"markdown","4ae8b633":"markdown","01b834a5":"markdown","c7f0c650":"markdown","111d8281":"markdown","bc345477":"markdown","ef5779d4":"markdown","f4a27260":"markdown","40f7fafa":"markdown","edc9f2da":"markdown","5f947907":"markdown","0ddd162d":"markdown"},"source":{"63c26600":"v_message = \"hello world\"\nprint(\"Hi\")","b51ec9e6":"print(v_message)","0cee4bc0":"v_name = \"miray\"\nv_surname = \"t\u00fcrky\u0131lmaz\"\n\nv_fullname = v_name + v_surname\nprint(v_fullname)","cf636172":"v_fullname = v_name + \" \" + v_surname\n\nprint(v_fullname)","2ddb2c17":"v_num1 = \"150\"\nv_num2 = \"200\"\nv_numSum1 = v_num1 + v_num2\nprint(v_numSum1)","4ce353ea":"#length\n\nv_lenFull = len(v_fullname)\nprint(\"v_fullname : \" , v_fullname , \"and length is :\" ,v_lenFull)","27169e0f":"v_titleF = v_fullname.title()\nprint(\"v_fullname :\" , v_fullname , \"and title is :\" , v_titleF)","d5d6b4a1":"#upper  :\nv_upperF = v_fullname.upper()\n\n#lower\nv_lowerF = v_fullname.lower()\nprint(\"v_fullname :\" , v_fullname , \"Upper :\" , v_upperF , \"Lower : \" , v_lowerF)","2413f746":"v_2ch = v_fullname[9]\nprint(v_2ch)","8267868b":"v_num1 = 150\nv_num2 = 200\nv_sum1 = v_num1 + v_num2  \n\nprint(v_sum1 , \"and type : \" , type(v_sum1))","25fd6285":"v_num1 = v_num1 + 50\nv_num2 = v_num2 - 20.5\nv_sum1 = v_num1 + v_num2\nprint(v_num1)","6bbe16e5":"print(\"v_sum1 : \",v_sum1 , \"type : \" , type(v_sum1))","c38a2e69":"v_fl1 = 25.5\nv_fl2 = 15.5\nv_s3  = v_fl1 + v_fl2\n\nprint(v_s3 , type (v_s3))","bbcb104e":"def f_SayHello():\n    print(\"Hi.I am coming from f_SayHello\")\n    \ndef f_SayHello2():\n    print(\"Hi.I am coming from f_SayHello2\")\n    print(\"Good\")\n    \nf_SayHello()","169e159e":"f_SayHello2()","0baf2c8e":"\ndef f_sayMessage(v_Message1):\n    print(v_Message1 , \" came from 'f_sayMessage'\")\n    \ndef f_getFullName(v_FirstName , v_Surname , v_Age):\n    print(\"Welcome \" , v_FirstName , \" \" , v_Surname , \" your age : \" , v_Age)\n","c09c5082":"f_sayMessage(\"How are you?\")","e443effe":"f_getFullName(\"Miray\",\"T\u00dcRKYILMAZ\",16)","e8762c32":"def f_Calc1(f_Num1 , f_Num2 ,f_Num3):\n    v_Sonuc = f_Num1 + f_Num2 +f_Num3\n    print(\"Sonu\u00e7 = \",\" \",v_Sonuc)","9a81d939":"f_Calc1(10,20,30)","079a531a":"#return funct\u0131on\ndef f_Calc2(v_Num1,v_Num2,v_Num3):\n    v_Out = v_Num1 + v_Num2 + v_Num3*2\n    print(\"Hi from f_Calc2\")\n    return v_Out","862d0f0a":"v_gelen = f_Calc2(1,2,3)\nprint(\"Score is :\",v_gelen)","7a1f193c":"#Default functions :\ndef f_getSchoolInfo(v_Name,v_StudentCount,v_City = \"ISTANBUL\"):\n    print(\"Name .\",v_Name,\"St Count:\" ,v_StudentCount,\"City:\",v_City)","9d292eb7":"f_getSchoolInfo(\"AAIHL\",521)\nf_getSchoolInfo(\"Ankara Fen\",521,\"ANKARA\")","de490cb2":"#Flexible Functions :\n\ndef f_Flex1(v_Name,*v_messages):\n    print(\"Hi\",v_Name,\"your first message is:\",v_messages[2])","a14b7bc8":"f_Flex1(\"Miray\",\"Selam\",\"Naber\",\"\u0130yisindir \u0130n\u015fAllah\")","8361adf6":"#Lambda Function :\n\nv_result =lambda x : x*3\nprint(\"Result is :\",v_result(6))","47140b84":"def f_alan(kenar1,kenar2):\n    print(kenar1*kenar2)","6c3493d3":"f_alan(5,6)","f5546938":"l_list1 = [1,2,3,4,5,6]\nprint(l_list1)\nprint(\"type of'l_list1' is:\",type(l_list1))","f03d5c74":"v_list1_4 = l_list1[3]\nprint(v_list1_4)\nprint(\"type of 'l_list_4'is:\",type(v_list1_4))","fe4b0bd4":"l_list2 =[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\nprint(l_list2)\nprint(\"type of 'l_list2' is: \",type(l_list2))","4e74c324":"v_list2_4 = l_list2[3]\nprint(v_list2_4)\nprint(\"type of 'v_list2_4' is:\",type(v_list2_4))","3305c121":"v_list2_x3 =l_list2[-3]\nprint(v_list2_x3)","4a68c079":"l_list2_2 = l_list2[0:3]\nprint(l_list2_2)","abdaeec4":"#Len\nv_len_l_list2_2 =len(l_list2_2)\nprint(\"size of 'l_list2_2'is:\",v_len_l_list2_2)\nprint(l_list2_2)","6472162b":"#Append\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)\nl_list2_2.append(\"Tuesday\")\nprint(l_list2_2)","6d0846c8":"#Reverse\nl_list2_2.reverse()\nprint(l_list2_2)","1932f8d1":"#Sort\nl_list2_2.sort()\nprint(l_list2_2)","33d15192":"#Remove\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)","4631680e":"l_list2_2.remove(\"Saturday\")\nprint(l_list2_2)","052aa7f5":"d_dict1 = {\"Turkey\":\"Ankara\",\"Spain\":\"Madrid\",\"Russia\":\"Moskow\"}\nprint(d_dict1)\nprint(type(d_dict1))","b569fa1a":"v_Spain = d_dict1[\"Spain\"]\nprint(v_Spain)\nprint(type(v_Spain))","c51115bb":"#Keys & Values\n\nv_keys = d_dict1.keys()\nv_values = d_dict1.values()\n\nprint(v_keys)\nprint(type(v_keys))\n\nprint(v_values)\nprint(type(v_values))","c507d9cd":"v_var1 = 16\nv_var2 = 17\n\nif v_var1 > v_var2:\n    print(v_var1,\"is greater then\",v_var2)\nelif v_var1 < v_var2:\n    print(v_var1,\"is smaller then\",v_var2)\nelse:\n    print(\"This 2 variables are equal\")\n","eefb0c7b":"# < , <= , > , >= , == , <>\n\ndef f_Comparison1(v_Comp1 , v_Comp2):\n    if v_Comp1 > v_Comp2:\n        print(v_Comp1 , \" is greater then \" , v_Comp2)\n    elif v_Comp1 < v_Comp2:\n        print(v_Comp1 , \" is smaller then \" , v_Comp2)\n    else :\n        print(\"These \" , v_Comp1 , \" variables are equal\")\n\nf_Comparison1(12,13)\nf_Comparison1(13,12)\nf_Comparison1(10,10)\n\n","116bfb2b":"# using 'IN' with LIST\n\ndef f_IncludeOrNot(v_search,v_searchList):\n    if v_search in v_searchList :\n        print(\"Good news !\",v_search,\"is in list.\")\n    else :\n            print(v_search,\"is not in list.Sorry :(\")\n        \n        \nl_list = list(d_dict1.keys())\nprint(l_list)\nprint(type(l_list))\n\nf_IncludeOrNot(\"Turkey\",l_list)\nf_IncludeOrNot(\"Serbia\",l_list)\n","1b7735c8":"for a in range(1,8):\n    print(\"Studied\",a,\"hour in the weekend\")\n    ","b20bb03f":"v_warningMessage = \"Warning! You should work harder\"\nprint(v_warningMessage)","6455d504":"for v_chrs in v_warningMessage:\n    print(v_chrs)\n    print(\"----\")","d2bbc7ad":"for v_chrs in v_warningMessage.split():\n    print(v_chrs)","de5bd6a9":"print(l_list1)\nv_sum_list1 = sum(l_list1)\nprint(\"Sum of l_list1 is:\",v_sum_list1)\n\nprint()\nv_cum_list1 = 0\nv_loopindex = 0\n\nfor v_current in l_list1:\n    v_cum_list1 = v_cum_list1 + v_current\n    print(v_loopindex , \" nd value is : \" , v_current)\n    print(\"Cumulative is : \" , v_cum_list1)\n    v_loopindex = v_loopindex + 1\nprint(\"---\")\n","905da086":"i = 0\nwhile(i < 8):\n    print(\"Hello World\",i)\n    i = i + 1","30990589":"print(l_list1)\nprint()\n\ni = 0\nk = len(l_list1)\n\nwhile(i < k):\n    print(l_list1[i])\n    i = i + 1","fed07b79":"#Let's find minimum and maximum number in list\n\nl_list2 = [1,3,5,8,0,-8,-5,-3,-5]\n\nv_min = 0\nv_max = 0\n\nv_index = 0\nv_len = len(l_list2)\n\nwhile (v_index < v_len):\n    v_current = l_list2[v_index]\n    \n    if v_current > v_max:\n        v_max = v_current\n    \n    if v_current < v_min:\n        v_min = v_current\n    \n    v_index = v_index+1\n\nprint (\"Maximum number is : \" , v_max)\nprint (\"Minimum number is : \" , v_min)\n","285dc871":"# Import library to use\nimport numpy as np","eb1c1468":"v_array1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nv_array2_np = np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])","fdd5c4ce":"print(\"v_array1 : \" , v_array1)\nprint(\"Type of v_array1 : \" , type(v_array1))","7337a9be":"print(\"v_array2_np : \" , v_array2_np)\nprint(\"Type of v_array2_np : \" , type(v_array2_np))","26eee7d4":"# shape\nv_shape1 = v_array2_np.shape\nprint(\"v_shape1 : \" , v_shape1 , \" and type is : \" , type(v_shape1))","8fe11434":"#Reshape\n\nv_array3_np = v_array2_np.reshape(3,5)\nprint(v_array3_np)","8df25d8a":"v_shape2 = v_array3_np.shape\nprint(\"v_shape2 : \" , v_shape2 , \" and type is : \" , type(v_shape2))","20a54d5d":"#Dimension\n\nv_dimen1 = v_array3_np.ndim\nprint(\"v_dimen1 :\" , v_dimen1 , \"type is :\", type(v_dimen1))","739e87eb":"# Dtype.name\n\nv_dtype1 = v_array3_np.dtype.name\nprint(\"v_dtype1 : \" , v_dtype1 , \" and type is : \" , type(v_dtype1))","03e9c6a8":"# Size\n\nv_size1 = v_array3_np.size\nprint(\"v_size1 :\",\"an type :\",type(v_size1))","ecf731a4":"# Let's create 3x4 array\n\nv_array4_np = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(v_array4_np)\nprint(\"--------------\")\nprint(\"Shape is : \" , v_array4_np.shape)","8bc02ab3":"#Zeros\n\nv_array5_np = np.zeros((3,4))\nprint(v_array5_np)","5844465e":"# Update an item on this array \n\nv_array5_np[0,3] = 21\nprint(v_array5_np)","ee251f34":"# Ones\n\nv_array6_np = np.ones((3,4))\nprint(v_array6_np)","179eeb98":"# Empty\n\nv_array7_np = np.empty((2,3))\nprint(v_array7_np)","5f92db04":"#Arrange\n\nv_array8_np = np.arange(10,45,5)\nprint(v_array8_np)\nprint(v_array8_np.shape)","bf5e8ab8":"# Linspace\n\nv_array9_np = np.linspace(10,30,5)\nv_array10_np= np.linspace(10,20,30)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"----------\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","e00421d0":"# Sum , Subtract , Square\n\nv_np1 = np.array([1,2,3])\nv_np2 = np.array([7,8,9])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","c8c4032f":"#Sinus\n\nprint(np.sin(v_np2))","bbfad783":"#True \/ False\n\nv_np2_TF = v_np2 < 8\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)","c061822a":"# Element wise Prodcut\n\nv_np1 = np.array([3,5,9])\nv_np2 = np.array([4,7,2])\nprint(v_np1 * v_np2)","04cddaba":"v_np5 = np.array([[3,5,9],[4,7,2]])\nv_np5Transpose = v_np5.T\nprint(v_np5)\nprint(v_np5.shape)\nprint()\nprint(v_np5Transpose)\nprint(v_np5Transpose.shape)","343ab4f7":"# Matrix Multiplication\nv_np6 = v_np5.dot(v_np5Transpose)\nprint(v_np6)","449de316":"# Exponential --> We will use on Statistics Lesson\n\nv_np5Exp = np.exp(v_np5)\n\nprint(v_np5)\nprint(v_np5Exp)","0667e3b8":"# Random \n\nv_np8 = np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(v_np8)","adb20409":"#Sum , Max ,Min\n\nv_np8Sum = v_np8.sum()\nprint(\"Sum of array : \", v_np8Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", v_np8.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", v_np8.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","4f297db3":"# Sum with Column or Row\n\nprint(\"Sum of Columns :\")\nprint(v_np8.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(v_np8.sum(axis=1)) #Sum of Rows","6a5b7699":"# Square , Sqrt\n\nprint(np.sqrt(v_np8))\nprint()\nprint(np.square(v_np8))","e9eeb2f5":"# Add\n\nv_np10 = np.array([1,3,5,7,9])\nv_np11 = np.array([10,30,50,70,90])\n\nprint(np.add(v_np10,v_np11))","62123854":"v_np12 = np.array([1,2,3,4,5,6,7,8,9])\n\nprint(\"First item is : \" , v_np12[0])\nprint(\"Third item is : \" , v_np12[2])","034e73b3":"# Get top 4 rows :\n\nprint(v_np12[0:4])","314cfbc7":"# Reverse\n\nv_np12_Rev = v_np12[::-1]\nprint(v_np12_Rev)","e6a38077":"v_np13 = np.array([[1,2,3,4,5],[11,12,13,14,15]])\nprint(v_np13)\nprint()\nprint(v_np13[1,3]) #--> Get a row\n\nprint()\nv_np13[1,3] = 314 #--> Update a row\nprint(v_np13)","83444a0a":"# Get all rows but 3rd columns :\n\nprint(v_np13[:,2])","0c973f62":"#Get 2nd row but 2,3,4th columns\n\nprint(v_np13[1,1:4])","f2cf5909":"# Get last row all columns\n\nprint(v_np13[-1,:])","734ec8cb":"# Get last columns but all rows\n\nprint(v_np13[:,-1])","53164e88":"#Flatten\n\nv_np14 = np.array([[2,4,6],[8,10,12],[14,16,18],[20,22,24]])\nv_np15 = v_np14.ravel()\n\nprint(v_np14)\nprint(\"Shape of v_np14 is : \" ,v_np14.shape)\nprint()\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)\nprint()","0d0247b7":"# Reshape\n\nv_np16 = v_np15.reshape(3,4)\nprint(v_np16)\nprint(\"Shape of v_np16 is : \" ,v_np16.shape)","0c6c7d95":"v_np17 = v_np16.T\nprint(v_np17)\nprint(\"Shape of v_np17 is : \" ,v_np17.shape)","4e161880":"v_np20 = np.array([[1,2],[3,4],[5,6]])\n\nprint(v_np20)\nprint()\nprint(v_np20.reshape(2,3))\n\nprint()\nprint(v_np20) #--> It has not changed !!","140da4e9":" #Resize\n\nv_np20.resize((2,3))\nprint(v_np20) # --> Now it changed !  Resize can change its shape","f26dc51d":"v_np21 = np.array([[1,2],[3,4]])\nv_np22 = np.array([[5,6],[7,8]])\n\nprint(v_np21)\nprint()\nprint(v_np22)","88e13bfa":"# Vertical Stack\n\nv_np23 = np.vstack((v_np21,v_np22))\nv_np24 = np.vstack((v_np22,v_np21))\n\nprint(v_np23)\nprint()\nprint(v_np24)","719eef09":"# Horizontal Stack\n\nv_np25 = np.hstack((v_np21,v_np22))\nv_np26 = np.hstack((v_np22,v_np21))\n\nprint(v_np25)\nprint()\nprint(v_np26)","872b9537":"v_list1 = [3,5,8,9]\nv_np30 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np30)\nprint(\"Type of v_np30 : \" , type(v_np30))","d1a1ade0":"v_list2 = list(v_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","97ff2c52":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","003e71a2":"v_list2[0] = 16\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","ea21b10d":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","7954b969":"v_list2[0] = 17\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","d5c38b5c":"# Import Library\nimport pandas as pd","9d0fe5c8":"v_dict1 = {\"LESSON\":[\"MATH\",\"BIOLOGY\",\"PHYSICS\",\"CHEMISTRY\",\"BIOLOGY\",\"CHEMISTRY\"],\"HOUR\":[6,2,4,4,2,4],\"NOTE\":[88.2,92.3,75.4,83.6,92.3,83.6]}\n\nv_dataFrame1 = pd.DataFrame(v_dict1)\nprint(v_dataFrame1)\nprint()\nprint(\"type of v_dataFrame1 is:\",type(v_dataFrame1))","248ad09b":"v_head1 = v_dataFrame1.head()\nprint(v_head1)\nprint()\nprint(\"type of v_head1 is:\",type(v_head1))","b80cd7d0":"print(v_dataFrame1.head(100))","ff93a1c3":"v_tail1 = v_dataFrame1.tail()\nprint(v_tail1)\nprint()\nprint(\"type of v_tail1 is:\",type(v_tail1))","e31f7d92":"v_columns1 = v_dataFrame1.columns\nprint(v_columns1)\nprint()\nprint(\"type of v_columns1:\",type(v_columns1))","c3658d68":"v_info1 = v_dataFrame1.info()\nprint(v_info1)\nprint()\nprint(\"type of v_info1 is:\",type(v_info1))","76d80e17":"v_dtypes1 = v_dataFrame1.dtypes\nprint(v_dtypes1)\nprint()\nprint(\"type of v_dtypes is:\",type(v_dtypes1))","f1573f30":"v_descr1 = v_dataFrame1.describe()\nprint(v_descr1)\nprint()\nprint(\"type of v_dscr1 is:\",type(v_descr1))","64b68173":"v_lesson1 = v_dataFrame1[\"LESSON\"]\nprint(v_lesson1)\nprint()\nprint(\"type of v_lesson1 is:\",type(v_lesson1))","50cf0e5d":"#add new columns\nv_topic1 = [\"NUMBERS\",\"CELL\",\"VECTORS\",\"ATOMS\",\"COMMUNITY\",\"GASES\"]\nv_dataFrame1[\"TOPIC\"] = v_topic1\nprint(v_dataFrame1.head())","4b769236":"v_Allhour = v_dataFrame1.loc[:,\"HOUR\"]\nprint(v_Allhour)\nprint()\nprint(\"type of v_Allhour is:\",type(v_Allhour))","cb7f1651":"v_Alltopic = v_dataFrame1.loc[:,\"TOPIC\"]\nprint(v_Alltopic)\nprint()\nprint(\"type of v_Alltopic is:\",type(v_Alltopic))","3a6f73c8":"v_top3topic = v_dataFrame1.loc[0:3,\"TOPIC\"]\nprint(v_top3topic)","b9c77139":"v_top1note = v_dataFrame1.loc[0:1,\"NOTE\"]\nprint(v_top1note)","d7eb1e12":"v_lessonhour = v_dataFrame1.loc[:,[\"LESSON\",\"HOUR\",\"UNKNOWN\"]] #--> BLABLA not defined !!!\nprint(v_lessonhour)","38a6d46f":"v_reserve1 = v_dataFrame1.loc[::-1,:]\nprint(v_reserve1)","0474f2e6":"print(v_dataFrame1.loc[:,:\"NOTE\"])\nprint()\nprint(v_dataFrame1.loc[:,\"NOTE\":])","c5259b8c":"print(v_dataFrame1.iloc[:,2])","a77c00fa":"v_filter1 = v_dataFrame1.HOUR > 2\nprint(v_filter1)","26358e5a":"v_filter2 = v_dataFrame1.HOUR < 3\nprint(v_filter2)","3ade4c18":"print(v_dataFrame1[v_filter1 & v_filter2])","11b0cb9f":"print(v_dataFrame1[v_dataFrame1[\"LESSON\"]==\"HOUR\"])","6228668e":"v_meanPop =v_dataFrame1[\"NOTE\"].mean()\nprint(v_meanPop)\n\nv_meanPopNP = np.mean(v_dataFrame1[\"NOTE\"])\nprint(v_meanPopNP)\n","5f6682a7":"for a in v_dataFrame1[\"NOTE\"]:\n    print(a)","7507f87e":"v_dataFrame1[\"POP LEVEL\"] = [\"Low\" if v_meanPop > a else \"HIGH\" for a in v_dataFrame1[\"NOTE\"]]\nprint(v_dataFrame1)","6242164d":"print(v_dataFrame1.columns)\n\nv_dataFrame1.columns = [a.lower() for a in v_dataFrame1.columns]\n\nprint(v_dataFrame1.columns)","1b53492b":"v_dataFrame1.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>1) else a for a in v_dataFrame1.columns]\n\nprint(v_dataFrame1.columns)","aca5b627":"v_dataFrame1[\"test1\"] = [-1,-2,-3,-4,-5,-6]\n\nprint(v_dataFrame1)","93a4c5a2":"v_dataFrame1.drop([\"test1\"],axis=1,inplace = True) #--> inplace = True must be written\nprint(v_dataFrame1)","243690ab":"v_data1 = v_dataFrame1.head()\nv_data2 = v_dataFrame1.tail()\n\nprint(v_data1)\nprint()\nprint(v_data2)","eb80cbbd":"v_dataConcat1 = pd.concat([v_data1,v_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nv_dataConcat2 = pd.concat([v_data2,v_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(v_dataConcat1)\nprint()\nprint(v_dataConcat2)","570153e6":"v_LESSON = v_dataFrame1[\"lesson\"]\nv_HOUR = v_dataFrame1[\"hour\"]\n\nv_dataConcat3 = pd.concat([v_LESSON,v_HOUR],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nv_dataConcat4 = pd.concat([v_HOUR,v_LESSON],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(v_dataConcat3)\nprint()\nprint(v_dataConcat4)","6c0a94cc":"v_dataFrame1[\"test1\"] = [a*2 for a in v_dataFrame1[\"hour\"]]\nprint(v_dataFrame1)","af25fc45":"def f_multiply(v_hour):\n    return v_hour*3\nv_dataFrame1[\"test2\"] = v_dataFrame1[\"hour\"].apply(f_multiply)\nprint(v_dataFrame1)","1cc15476":"**6)For Loop**","f059c188":"8.5.Stacking Arrays\n\n","07849783":"**9.2.Basic Methods**","259039fc":"**9.Pandas**","72e4b0c9":"**9.6.Drop and Concatenating Data**","4325e4c0":"8.3. Indexing and Slicing","fdc0cafb":"**5) IF ELSE**","63bcd148":"**8.1)Basic**","21a359e6":"****1)VARIABLES****","7ab6883d":"**7) WH\u0130LE LOOP**\n","bc26e87c":"**8) NUMPY**","d692a0c5":"**2)FUNCTIONS**","b6863591":"**9.1)Introduct\u0131on**","a14bfdf7":"****9.7.Transforming Data****","4ae8b633":"**9.4)Filtering**","01b834a5":"8.4.Shape Manipulation","c7f0c650":"**4)Dictionary**","111d8281":"**9.5.List Comprehension**","bc345477":"8.6.Convert and Copy Array","ef5779d4":"**3.L\u0130ST**","f4a27260":"1.2)Numbers :","40f7fafa":"****INTRODUCTION****\n\n* 1. VARIABLES\n* 2. FUNCTIONS\n* 3. L\u0130ST\n* 4. DICTIONARY\n* 5. IF ELSE\n* 6. FOR LOOP\n* 7. WHILE LOOP\n* 8. NUMPY\n*    8.1.Basic\n*    8.2.Basic Operations\n*    8.3.Indexing and Slicing\n*    8.4.Shape manipulation\n*    8.5.Stacking Arrays\n*    8.6.Convert and Copy Array\n* 9. PANDAS\n*    9.1.Introduction\n*    9.2.Basic methods\n*    9.3.Indexing and Slicing\n*    9.4.Filtering\n*    9.5.List Comprehension\n*    9.6.Drop and Concatenating Data\n*    9.7.Transforming Data\n\n","edc9f2da":"**8.2)Basic Operation**","5f947907":"1.1)Strings:","0ddd162d":"**9.3.Indexing and Slicing**"}}