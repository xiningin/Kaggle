{"cell_type":{"ce299eb7":"code","8d6e6ad0":"code","a87b23f9":"code","8463412d":"code","83259333":"code","39980479":"code","23b6e51e":"code","6b2894a8":"code","fdc8834e":"code","57df63cb":"code","0a539b0f":"code","ca8acef7":"code","8464a56a":"code","9ee6795e":"code","3b0c9b64":"markdown"},"source":{"ce299eb7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport scipy\nimport sklearn\nimport hmmlearn\nimport simplejson\n!pip install pydub\n!pip install eyed3\nimport eyed3\nimport pydub\n","8d6e6ad0":"import os\nprint(os.listdir(\"..\/input\/latestwav\/latestwav\/\"))\nos.chdir(\"..\/input\/latestwav\/latestwav\/\")\nos.getcwd()","a87b23f9":"#convert to wav\n#Number of channels 2\n#Sample width 2\n#Frame rate. 44100\n#Number of frames 873792\n#parameters: _wave_params(nchannels=2, sampwidth=2, framerate=44100, nframes=873792, comptype='NONE', compname='not compressed')\n\nfrom os import path\nimport wave, struct, math, random\nfrom pydub import AudioSegment\n\n\n# files                                                                         \naudio_files = os.listdir()\nobj = wave.open(audio_files[2], mode='rb')\nprint( \"Number of channels\",obj.getnchannels())\nprint ( \"Sample width\",obj.getsampwidth())\nprint ( \"Frame rate.\",obj.getframerate())\nprint (\"Number of frames\",obj.getnframes())\nprint ( \"parameters:\",obj.getparams())","8463412d":"!pip install pyAudioAnalysis\nimport pyAudioAnalysis\n\n","83259333":"from pyAudioAnalysis import audioBasicIO\nfrom pyAudioAnalysis import ShortTermFeatures\nimport matplotlib.pyplot as plt\n\n","39980479":"#dont run this\n#import matplotlib.pyplot as plt\n#from pyAudioAnalysis import audioBasicIO\n#from pyAudioAnalysis import audioFeatureExtraction\n\n","23b6e51e":"#https:\/\/medium.com\/heuristics\/audio-signal-feature-extraction-and-clustering-935319d2225\n\ndef preProcess( fileName ):\n    [Fs, x] = audioBasicIO.read_audio_file(fileName) #A\n\n    #B\n    if( len( x.shape ) > 1 and  x.shape[1] == 2 ):\n        x = np.mean( x, axis = 1, keepdims = True )\n    else:\n        x = x.reshape( x.shape[0], 1 )\n    #C\n    F, f_names = ShortTermFeatures.feature_extraction(\n        x[ :, 0 ],\n        Fs, 0.050*Fs,\n        0.025*Fs\n    )\n    \n    return (f_names, F)","6b2894a8":"import os\nos.chdir(\"\/kaggle\/input\/editedcoughs\/outdir - Copy\")\nprint(os.listdir(\"\/kaggle\/input\/editedcoughs\/outdir - Copy\"))\n","fdc8834e":"audio = pd.read_csv(\"audioonly.csv\")","57df63cb":"df = audio.drop('Unnamed: 0', axis=1)\ndf = df.drop('filename', axis=1)\ndf = df.drop('output', axis=1)","0a539b0f":"audio_exploded = pd.concat([pd.DataFrame(df[col].str.split().values.tolist())\\\n                              .add_prefix(f'{col}_')\n                            for col in df.columns],\n                            axis=1)","ca8acef7":"audio_final = pd.concat([audio_exploded.reset_index(drop=True),audio['filename'],audio['output']], axis=1)","8464a56a":"audio_final = audio_final.replace(',|\\[|\\]', '', regex=True)","9ee6795e":"audio_final.to_csv(\"audio_final.csv\", sep=',', encoding='utf-8')","3b0c9b64":"#audio analysis"}}