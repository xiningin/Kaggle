{"cell_type":{"58fcee89":"code","d1fe246a":"code","0ea7fe62":"code","4a52743b":"code","7b63c4b3":"code","003e33a3":"code","22dd3308":"code","089deea3":"code","a63ac455":"code","795bab55":"code","6e80e4d6":"code","3dd2a54e":"code","b0073956":"code","501dfdd6":"code","ae252c3e":"code","30d98ff0":"code","cff87879":"code","dd1fb69b":"code","6190dd68":"code","d7b3ec8e":"code","67d45ccb":"code","02cd69e1":"code","5949c554":"code","488eece8":"code","3feed6fb":"code","e0c51835":"code","0247e4e2":"code","40c19ba1":"code","8ea7b416":"code","bd3cb948":"code","1af583e7":"code","e9ffc46f":"code","51b7dd2d":"code","94b9939e":"code","f60a7663":"code","e76de561":"code","21fb3686":"code","ef9b8a62":"code","de0d26c0":"code","3d733205":"code","a9236c91":"code","9a5eec0a":"code","a0a32d58":"code","4bffce32":"code","1435b542":"code","be84a148":"code","cf4d9bf7":"code","7f58d073":"code","d78ba92b":"code","32825d3d":"code","72191a80":"code","c5be85cf":"code","4e807f50":"code","f5f3e09e":"code","733d9b17":"code","aa9bfed6":"code","0b59f1ef":"code","b1048ca7":"code","53a86663":"code","c97417da":"code","24e6703b":"code","d80be560":"code","cef19f76":"code","5ca968c1":"code","b5888351":"code","36ef9430":"code","01645527":"code","ade72196":"code","623ea6da":"code","d25cac59":"code","68e97cbb":"code","eb73202c":"code","ed8cba23":"code","b7288079":"code","b613a4b6":"code","66883135":"code","1b5e5b90":"code","68f8a0d6":"code","ebdf212c":"code","56ed9698":"code","066dddd2":"code","88044761":"code","e9f15c97":"code","02205fff":"code","3ec272c2":"code","aa1214a9":"code","7634825b":"code","6b32f02f":"code","c7292ce2":"code","e1e23908":"code","7b7748db":"code","6ace4fc9":"code","0355613a":"code","f121b190":"code","e80d326d":"code","c0ddb80f":"code","b130cef0":"code","ae36f8dc":"code","b83e7089":"code","cb473bae":"code","af02d0bc":"code","340bce96":"code","1b2c19ae":"code","42abd8df":"code","899b4df0":"code","b9c69227":"code","ba178738":"code","9a5af4e0":"code","19ccae3d":"code","7d139e1c":"code","0fbccbfb":"code","9e7094f4":"code","aef524b6":"code","8452b269":"code","99563470":"code","047dc0a7":"code","9fde42df":"code","13b598e7":"code","ab5c2792":"code","1f8a05d8":"code","6d1448a8":"code","46ee68ef":"markdown","eb309111":"markdown","77a67a93":"markdown","a931388f":"markdown","c2e5ab04":"markdown","bc698663":"markdown"},"source":{"58fcee89":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d1fe246a":"import matplotlib.pyplot as plt\nimport seaborn as sns","0ea7fe62":"data = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")","4a52743b":"data.head()","7b63c4b3":"data.shape","003e33a3":"data.info()","22dd3308":"data.columns","089deea3":"data.mean()","a63ac455":"data.median()","795bab55":"data.var()","6e80e4d6":"data.sum()","3dd2a54e":"passmark = 40","b0073956":"#data.isnull().sum()\ndata.isnull().any()","501dfdd6":"plt.figure(figsize=(20,10))\nsns.countplot(x =\"math score\", data= data,palette=\"muted\")","ae252c3e":"plt.figure(figsize=(20,10))\nsns.countplot(x =\"reading score\", data= data,palette=\"muted\")","30d98ff0":"plt.figure(figsize=(20,10))\nsns.countplot(x =\"writing score\", data= data,palette=\"muted\")\n","cff87879":"sns.countplot(data['gender'])","dd1fb69b":"plt.figure(figsize=(10,6))\nsns.countplot(x =\"race\/ethnicity\", data= data,palette=\"muted\")","6190dd68":"plt.figure(figsize=(10,6))\nsns.countplot(x =\"parental level of education\", data= data,palette=\"muted\")","d7b3ec8e":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'math score' ,hue =\"parental level of education\", data= data,palette=\"muted\")","67d45ccb":"plt.figure(figsize=(10,6))\nsns.countplot(x =\"lunch\", data= data,palette=\"muted\")\n","02cd69e1":"plt.figure(figsize=(10,6))\nsns.countplot(x =\"test preparation course\", data= data,palette=\"muted\")","5949c554":"data['Math_Pass'] = np.where(data['math score'] < passmark,'Fail', 'Pass')","488eece8":"data['Reading_Pass'] = np.where(data['reading score'] < passmark,'Fail', 'Pass')","3feed6fb":"data['Writing_Pass'] = np.where(data['writing score'] < passmark,'Fail', 'Pass')","e0c51835":"del data['writing_pass']\ndel data['reading_Pass']\ndata.head()","0247e4e2":"plt.figure(figsize=(10,6))\nsns.countplot(data['Math_Pass'])","40c19ba1":"plt.figure(figsize=(10,6))\nsns.countplot(data['Reading_Pass'])","8ea7b416":"plt.figure(figsize=(10,6))\nsns.countplot(data['Writing_Pass'])","bd3cb948":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'parental level of education' , hue = 'Math_Pass', data=data)","1af583e7":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'parental level of education' , hue = 'Reading_Pass', data=data)","e9ffc46f":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'parental level of education' , hue = 'Writing_Pass', data=data)","51b7dd2d":"plt.figure(figsize=(10,6))\nsns.stripplot(x = 'parental level of education' , hue = 'Math_Pass', data=data) #swarmplot","94b9939e":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'race\/ethnicity' , hue = 'Writing_Pass', data=data)","f60a7663":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'race\/ethnicity' , hue = 'Reading_Pass', data=data)","e76de561":"plt.figure(figsize=(10,6))\nsns.countplot(x = 'race\/ethnicity' , hue = 'Math_Pass', data=data)","21fb3686":"x = data['reading score'] > 40","ef9b8a62":"sns.countplot(x)\n","de0d26c0":"print(data['Math_Pass'].value_counts())\nprint('_' * 30)\nprint(data['Reading_Pass'].value_counts())\nprint('_' * 30)\nprint(data['Writing_Pass'].value_counts())","3d733205":"plt.figure(figsize=(15,10))\nx = data['math score']\nsns.distplot(x)","a9236c91":"plt.figure(figsize=(15,10))\nx = data['reading score']\nsns.distplot(x)","9a5eec0a":"plt.figure(figsize=(15,10))\nx = data['writing score']\nsns.distplot(x)","a0a32d58":"plt.figure(figsize=(15,10))\nsns.regplot(x='math score',y ='reading score', data=data, color='red')","4bffce32":"plt.figure(figsize=(25,10))\nsns.jointplot(x='Total_Marks',y ='reading score', data=data, color='red',kind='reg')","1435b542":"plt.figure(figsize=(25,10))\nsns.boxplot(data['math score'],data['reading score'], data=data)\nsns.stripplot(data['math score'],data['reading score'], data=data,  jitter=True, edgecolor=\"gray\")","be84a148":"sns.heatmap(df.corr(),annot = True,linewidths = 0.5,cmap='cubehelix_r');","cf4d9bf7":"plt.figure(figsize=(15,10))\nsns.regplot(x='math score',y ='writing score', data=data, color='green')","7f58d073":"data['OverAll_Pass'] = data.apply(lambda x : 'Fail' if x['Math_Pass'] == 'Fail' or \n                                    x['Reading_Pass'] == 'Fail' or x['Writing_Pass'] == 'Fail' else 'Pass', axis =1)\n\ndata.OverAll_Pass.value_counts()","d78ba92b":"plt.figure(figsize=(18,10))\nsns.countplot(x='parental level of education', data = data, hue='OverAll_Pass', palette='bright')","32825d3d":"data['Total_Marks'] = data['math score'] + data['reading score'] + data['writing score']","72191a80":"data['Percentage'] = data['Total_Marks'] \/ 3","c5be85cf":"data.head()","4e807f50":"\nplt.figure(figsize=(18,6))\nsns.distplot(data['Percentage'])","f5f3e09e":"def getGrade(Percentage, Overall_Pass):\n    if(Overall_Pass == 'Fail'):\n        return 'Fail'\n    if(Percentage >= 90):\n        return \"A+\"\n    if(Percentage >= 80):\n        return \"A\"\n    if(Percentage >= 70):\n        return \"B\"\n    if(Percentage >= 60):\n        return \"C\"\n    if(Percentage >= 50):\n        return \"D\"\n    if(Percentage >= 40):\n        return \"E\"\n    else:\n        return 'Fail'\n    \ndata['Grade'] = data.apply(lambda x:  getGrade(x['Percentage'], x['OverAll_Pass']), axis=1)\n    ","733d9b17":"data.Grade.value_counts()","aa9bfed6":"plt.figure(figsize=(18,7))\nsns.countplot(x='Grade', data=data,order=['A+','A','B','C','D','E','Fail'],  palette=\"muted\")","0b59f1ef":"data.head()","b1048ca7":"plt.figure(figsize=(18,7))\nsns.countplot(x='parental level of education', data = data, hue='Grade', palette='bright')","53a86663":"\n# loading pakages for model. \nfrom sklearn.linear_model import ElasticNet, Lasso\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import cross_val_score, train_test_split\nfrom sklearn.metrics import make_scorer\nfrom sklearn.kernel_ridge import KernelRidge\n\nfrom sklearn import linear_model, model_selection, ensemble, preprocessing\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet,SGDRegressor\nfrom sklearn.ensemble import RandomForestRegressor,BaggingRegressor, GradientBoostingRegressor, AdaBoostRegressor","c97417da":"y = data['Total_Marks']","24e6703b":"X = data[['math score','reading score','writing score']]","d80be560":"y.head()","cef19f76":"X.head()","5ca968c1":"# X_train, y_train, X_test, y_test = train_test_split(X,y, test_size=0.2, random_state=42)","b5888351":" from sklearn.metrics import accuracy_score,classification_report,mean_squared_error, mean_absolute_error","36ef9430":"# print(\"X Train: \" ,X_train.shape)\n# print(\"X Test: \" ,X_test.shape)\n# print(\"Y Train: \" ,y_train.shape)\n# print(\"Y Test: \" ,y_test.shape)","01645527":"# model_Lasso= make_pipeline(RobustScaler(), Lasso(alpha =0.000327, random_state=18))\n\n# model_ENet = make_pipeline(RobustScaler(), ElasticNet(alpha=0.00052, l1_ratio=0.70654, random_state=18))\n\n# model_KRR = make_pipeline(RobustScaler(), KernelRidge(alpha=0.029963, kernel='polynomial', degree=1.103746, coef0=5.442672))\n# model_GBoost = GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05,\n#                                    max_depth=4, max_features='sqrt',\n#                                    min_samples_leaf=15, min_samples_split=10, \n#                                    loss='huber', random_state =18)\n\n# model_KRR = make_pipeline(RobustScaler(), KernelRidge(alpha=0.029963, kernel='polynomial', degree=1.103746, coef0=5.442672))\n# forest_reg = RandomForestRegressor(bootstrap=False, criterion='mse', max_depth=None,\n#            max_features=60, max_leaf_nodes=None, min_impurity_decrease=0.0,\n#            min_impurity_split=None, min_samples_leaf=1,\n#            min_samples_split=2, min_weight_fraction_leaf=0.0,\n#            n_estimators=70, n_jobs=1, oob_score=False, random_state=42,\n#            verbose=0, warm_start=False)","ade72196":"# Gender distribution\nplt.figure(figsize=(8,7))\nplt.title('Gender Distribution')\nsns.countplot(data['gender'], palette='rainbow')","623ea6da":"# race\/ethinicity distribution\nplt.figure(figsize=(8,7))\nplt.title('Race\/Ethinicity distribution')\nsns.countplot(data['race\/ethnicity'], palette='rainbow', hue=data['gender'])","d25cac59":"#parental level of education\nplt.figure(figsize=(12,6))\nplt.title('Parental Level of Education')\nsns.countplot(data['parental level of education'], palette='rainbow', hue=data['gender'])","68e97cbb":"# test prep course\nplt.figure(figsize=(8,7))\nplt.title('Test Preparation course')\nsns.countplot(data['test preparation course'], palette='rainbow', hue=data['gender'])","eb73202c":"# students with highest score in math\nmath_df = data[data['math score']==data['math score'].max()]\nmath_df","ed8cba23":"plt.figure(figsize=(8,7))\nplt.title('Grades of students with gender distribution')\nsns.countplot(data['Grade'], hue=data['gender'], palette='Set1')","b7288079":"plt.figure(figsize=(8,7))\nplt.title('Grades of students with gender distribution')\nsns.countplot(data['Grade'], hue=data['race\/ethnicity'], palette='Set1')","b613a4b6":"plt.figure(figsize=(15,7))\nplt.title('Grades of students with parental lvl of education distribution')\nsns.countplot(data['Grade'], hue=data['parental level of education'], palette='Set1')","66883135":"plt.figure(figsize=(15,7))\nplt.title('Grades of students with parental lvl of education distribution')\nsns.countplot(data['Grade'], hue=data['test preparation course'], palette='Set1')","1b5e5b90":"df=data.rename(columns={'parental level of education':'parental_level_of_education',\n                      'test preparation course':'test_preparation_course',\n                     'math score':'math_score','reading score':'reading_score','writing score':'writing_score'})\ndf.head()","68f8a0d6":"df.parental_level_of_education.unique()","ebdf212c":"df.lunch.unique()","56ed9698":"df.test_preparation_course.unique()","066dddd2":"df=df.replace(['group A','group B','group C','group D','group E'],[0,1,2,3,4])\ndf=df.replace([\"bachelor's degree\", 'some college', \"master's degree\",\"associate's degree\", 'high school', 'some high school'],\n             [0,1,2,3,4,5])\ndf=df.replace(['standard', 'free\/reduced'],[0,1])\ndf=df.replace(['none', 'completed'],[0,1])\ndf=df.replace(['male','female'],[0,1])\ndf.head()","88044761":"\ndf['Percentage']=df['Percentage'].astype(int)\ndf.head()","e9f15c97":"x=sns.PairGrid(df,palette='coolwarm')\nx=x.map_diag(plt.hist)\nx=x.map_offdiag(plt.scatter,color='red',edgecolor='black')","02205fff":"plt.figure(figsize=(15,8))\nsns.regplot('Total_Marks','math_score', data=df ,marker=\"d\")","3ec272c2":"plt.figure(figsize=(15,8))\nsns.regplot('Total_Marks','reading_score', data=df, color='red',marker=\"+\" )","aa1214a9":"plt.figure(figsize=(15,8))\nsns.regplot('Total_Marks','writing_score', data=df, color='green',marker=\"^\" )","7634825b":"\nplt.figure(figsize = (15,15))\nsns.heatmap(df.corr(),annot = True,linewidths = 0.5,cmap='cubehelix_r');\nplt.savefig('Correlation Heatmap.png')","6b32f02f":"x=df[['gender','race\/ethnicity','parental_level_of_education','lunch','test_preparation_course','math_score','reading_score','writing_score']]\ny=df['Percentage']","c7292ce2":"x.shape,y.shape","e1e23908":"from sklearn.model_selection import train_test_split","7b7748db":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=7)","6ace4fc9":"print(\"X Train: \" ,x_train.shape)\nprint(\"X Test: \" ,x_test.shape)\nprint(\"Y Train: \" ,y_train.shape)\nprint(\"Y Test: \" ,y_test.shape)","0355613a":"from sklearn.linear_model import LinearRegression","f121b190":"model=LinearRegression()\nmodel.fit(x_train,y_train)\n#prediction=model.predict(x_test)\n#mean_absolute_error(y_test, prediction)","e80d326d":"prediction=model.predict(x_test)","c0ddb80f":"from sklearn.metrics import accuracy_score,classification_report,mean_squared_error, mean_absolute_error\nmean_absolute_error(y_test, prediction)","b130cef0":"mean_squared_error(y_test, prediction)","ae36f8dc":"plt.figure(figsize=(11,6))\nplt.scatter(y_test,prediction,edgecolors='black',c='red',vmin=30,vmax=70)\n#x.set_yticklabels([30,35,40,45,50])","b83e7089":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction, color='green' )","cb473bae":"model.coef_","af02d0bc":"model.intercept_","340bce96":"from sklearn import metrics\nmean_sq=metrics.mean_squared_error(y_test,prediction)\nRMSE=np.sqrt(mean_sq)\nRMSE","1b2c19ae":"from sklearn.metrics import r2_score\nr2_score(y_test,prediction)","42abd8df":"model1= KernelRidge(alpha=0.029963, kernel='polynomial', degree=1.103746, coef0=5.442672)\nmodel1.fit(x_train,y_train)\nprediction1=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction1))\nprint(r2_score(y_test,prediction1))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction1)))","899b4df0":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction1, color='green' )","b9c69227":"import xgboost as xgb\nmodel1= xgb.XGBRegressor(n_jobs=-1, n_estimators=849, learning_rate=0.015876, \n                           max_depth=58, colsample_bytree=0.599653, colsample_bylevel=0.287441, subsample=0.154134, seed=18)\nmodel1.fit(x_train,y_train)\nprediction2=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction2))\nprint(r2_score(y_test,prediction2))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction2)))","ba178738":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction2, color='green' )","9a5af4e0":"import lightgbm as lgb\nmodel1= lgb.LGBMRegressor(objective='regression',num_leaves=5,\n                              learning_rate=0.05, n_estimators=720,\n                              max_bin = 55, bagging_fraction = 0.8,\n                              bagging_freq = 5, feature_fraction = 0.2319,\n                              feature_fraction_seed=9, bagging_seed=9,\n                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\nmodel1.fit(x_train,y_train)\nprediction3=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction3))\nprint(r2_score(y_test,prediction3))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction3)))","19ccae3d":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction3, color='green' )","7d139e1c":"model1= Lasso(alpha =0.000327, random_state=18)\nmodel1.fit(x_train,y_train)\nprediction4=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction4))\nprint(r2_score(y_test,prediction4))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction4)))","0fbccbfb":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction4, color='green' )","9e7094f4":"model1= ElasticNet(alpha=0.00052, l1_ratio=0.70654, random_state=18)\nmodel1.fit(x_train,y_train)\nprediction5=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction5))\nprint(r2_score(y_test,prediction5))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction5)))","aef524b6":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction5, color='green' )","8452b269":"from sklearn.neighbors import KNeighborsRegressor\nmodel1= KNeighborsRegressor(n_neighbors=18)\nmodel1.fit(x_train,y_train)\nprediction6=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction6))\nprint(r2_score(y_test,prediction6))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction6)))","99563470":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction6, color='green' )","047dc0a7":"model1= SGDRegressor(alpha=0.00052, l1_ratio=0.70654, random_state=18)\nmodel1.fit(x_train,y_train)\nprediction7=model1.predict(x_test)\nprint(mean_absolute_error(y_test, prediction7))\nprint(r2_score(y_test,prediction7))\nprint(np.sqrt(metrics.mean_squared_error(y_test,prediction7)))","9fde42df":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction7, color='green' )","13b598e7":"model1= Ridge(alpha=0.00052, random_state=24)\nmodel1.fit(x_train,y_train)\nprediction8=model1.predict(x_test)\np81 = mean_absolute_error(y_test, prediction8)\np82 = r2_score(y_test,prediction8)\np83 = np.sqrt(metrics.mean_squared_error(y_test,prediction8))\nprint(p81)\nprint(p82)\nprint(p83)","ab5c2792":"plt.figure(figsize=(15,6))\nsns.regplot(y_test,prediction8, color='green' )","1f8a05d8":"\n# def score(model):\n#     score = cross_val_score(model, X_train, y_train, cv=5, scoring=rmse_score).mean()\n#     return score","6d1448a8":"# scores['Liner Reg'] = lg\n# scores['Random_forest'] = rnd","46ee68ef":"## Check Null Data","eb309111":"# Prediction","77a67a93":"# Rename","a931388f":"### Explore Math Score","c2e5ab04":"## Assign The Grades\n\n### Grading\n\n### #Above 90 = A+ Grade\n\n### Above 80 = A Grade\n\n### 70 to 80 = B Grade\n\n### 60 to 70 = C Grade\n\n### 50 to 60 = D Grade\n\n### 40 to 50 = E Grade\n\n### below 40 = F Grade ( means Fail )","bc698663":"## Pass And fail in Reading, writing and Math Score "}}