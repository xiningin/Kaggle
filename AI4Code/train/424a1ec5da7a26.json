{"cell_type":{"1ed2f1db":"code","34b2163b":"code","5ccded76":"code","1195f2f0":"code","16f7f380":"code","ee5a400f":"code","5ba11c16":"code","65678aef":"code","95f860ee":"code","a6c45bfe":"code","359ab206":"code","22f2425f":"code","9ccc4679":"code","5dea6d6f":"code","1d1e8b68":"code","559b5b52":"code","08944482":"code","1a9fb312":"code","f745e89d":"markdown","d90cc266":"markdown","09a8e1b6":"markdown","97f48bdb":"markdown","e3513fc2":"markdown","9824aa5c":"markdown","0847efca":"markdown","94d578db":"markdown","0230e605":"markdown","fa01933c":"markdown","adcb8b37":"markdown"},"source":{"1ed2f1db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34b2163b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","5ccded76":"df=pd.read_csv('..\/input\/advertising\/Advertising.csv')","1195f2f0":"df.head()","16f7f380":"df.shape","ee5a400f":"df.info()","5ba11c16":"sns.pairplot(df , diag_kind='kde')","65678aef":"df.corr()","95f860ee":"X=df.drop('sales', axis=1)\ny=df['sales']","a6c45bfe":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n","359ab206":"from sklearn.linear_model import LinearRegression\n\nmodel=LinearRegression()\n\nmodel.fit(X_train , y_train)","22f2425f":"y_pred = model.predict(X_test)","9ccc4679":"\nfrom sklearn import metrics\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)","5dea6d6f":"pd.DataFrame([MAE,MSE,RMSE] ,index=['MAE','MSE','RMSE'],columns=['metrics'])","1d1e8b68":"test_Residuals =y_test- y_pred","559b5b52":"sns.scatterplot(x=y_test , y=y_pred)\nplt.xlabel('y_Test')\nplt.ylabel('y_pred')","08944482":"sns.distplot(test_Residuals , bins =25 , kde = True)","1a9fb312":"sns.scatterplot(x=y_test , y=test_Residuals)\nplt.axhline(y=0 , color='r' , ls='--')","f745e89d":"### Step1: Import  necessary ","d90cc266":"creat DataFrame","09a8e1b6":"****Step8: Predicting Test Data\n****\n","97f48bdb":"### Step 6: Split the Dataset to Train & Test","e3513fc2":"### Step5: Determine the Features & Target Variable\n","9824aa5c":"### Step3: Data overview\n","0847efca":"### Step9: Evalutaing the Model","94d578db":"### Step7: Train the Model","0230e605":"### Step4: Exploratory Data Analysis","fa01933c":"### \nStep2: Import the Data","adcb8b37":"### Step10: Residuals\n"}}