{"cell_type":{"f4e97054":"code","1aff306b":"code","466aa1b2":"markdown"},"source":{"f4e97054":"import collections\nimport re\nimport matplotlib.pyplot as plt\n# % matplotlib inline\nfile = open('..\/input\/cumulativesong\/la-feria-de-cepillin.txt', 'r')\nfile = file.read()\nstopwords = set(line.strip() for line in open('..\/input\/cumulativesong\/stopwords.txt'))\nstopwords = stopwords.union(set(['a', 'i', 'mr', 'ms', 'mrs', 'one', 'two', 'said']))\nwordcount = collections.defaultdict(int)\n# \\W is regex for characters that are not alphanumerics.\npattern = r\"\\W\"\nfor word in file.lower().split():\n    # all non-alphanumerics are replaced with a blank space using re.sub\n    word = re.sub(pattern, '', word)\n    if word not in stopwords:\n        wordcount[word] += 1\nmost_common = sorted(wordcount.items(), key=lambda k_v: k_v[1], reverse=True)\nfor word, count in most_common:\n    print(word, \":\", count)\n# Draw the bart chart\nmost_common = dict(most_common)\nnames = list(most_common.keys())\nvalues = list(most_common.values())\nplt.xticks(rotation='vertical')\nplt.bar(range(len(most_common)),values,tick_label=names)\nplt.savefig('bar.png')\nplt.show()","1aff306b":"from wordcloud import WordCloud\nwc = WordCloud().generate_from_frequencies(wordcount)\nplt.figure()\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","466aa1b2":"# Cumulative songs\nA cumulative song is a song with a simple verse structure modified by progressive addition so that each verse is longer than the verse before. \n\nCumulative songs are popular for group singing, in part because they require relatively little memorization of lyrics, and because remembering the previous verse to concatenate it to form the current verse can become a kind of game.\n\nInspired by agrimabahl\n\n\nhttps:\/\/medium.com\/@agrimabahl\/elegant-python-code-reproduction-of-most-common-words-from-a-story-25f5e28e0f8c"}}