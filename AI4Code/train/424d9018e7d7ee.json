{"cell_type":{"cdea2134":"code","36b6b665":"code","671ff7ea":"code","df8b48f9":"code","6866262e":"code","9e1ecb44":"code","2fe8a9a7":"code","ef8b208a":"code","42727407":"code","af0a88d8":"code","f5d5364c":"code","390179c9":"code","b34b6716":"code","9a2b8aed":"code","754d255c":"code","2864f5ba":"code","5af34823":"code","e5542630":"code","63393e7a":"code","72c7c7ff":"code","dd3831de":"code","0e4169e8":"code","bbb73a07":"code","9536d239":"code","3aa78453":"code","a327ce1c":"markdown","8cf9e6db":"markdown","6ba8e321":"markdown","58cc4b90":"markdown","974c59a5":"markdown","b2726b97":"markdown","09c56841":"markdown","de3fddeb":"markdown","3daed4d4":"markdown","3ebf13c7":"markdown","44fa4ee1":"markdown","78711591":"markdown","bcbd44b3":"markdown","f4519b68":"markdown","bf59c00c":"markdown","07196a91":"markdown","668eea4c":"markdown","28259d97":"markdown","37c98681":"markdown","b86662dc":"markdown","7dd6d5cd":"markdown","2a34bab9":"markdown","bf427334":"markdown","1ceb67b6":"markdown","f3fb7552":"markdown","676dbfd6":"markdown","3036a337":"markdown","bb3765e5":"markdown","b35dc6bd":"markdown","6b931e21":"markdown","c2631904":"markdown","eaac09a0":"markdown","cef26835":"markdown","deea5a6e":"markdown","69c32c76":"markdown","2713a7d0":"markdown","e98b2f96":"markdown","b7850d96":"markdown","92c11ad1":"markdown","5c48e0fe":"markdown","6b56603c":"markdown","f46a670d":"markdown","0630f848":"markdown","131a081f":"markdown","6192d8da":"markdown","d569ae28":"markdown","fc53fa37":"markdown","81e4b965":"markdown","a2e1a03b":"markdown","2199ce65":"markdown","61537c09":"markdown","18569d5e":"markdown","642c8346":"markdown","6d140167":"markdown","70214e34":"markdown","f46d114c":"markdown","d16e067a":"markdown","ed2bacf8":"markdown","e466edb5":"markdown","d199a7b7":"markdown","2c342e98":"markdown","bed925dc":"markdown","f5b03a4c":"markdown"},"source":{"cdea2134":"#imports\n\nfrom ast import literal_eval\nimport pandas as pd\nimport networkx as nx\nfrom datetime import datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport community\nfrom collections import defaultdict\n","36b6b665":"#read house_members_116 from csv: members\nmembers = pd.read_csv('\/kaggle\/input\/house-of-representatives-congress-116\/house_members_116.csv', index_col = 0)\n\n#converts values of relevant columns to lists of strings rather than strings\nmembers.committee_assignments = members.committee_assignments.apply(literal_eval)\n\nmembers.head()","671ff7ea":"#read house_legislation_116 from csv: bills\nbills = pd.read_csv('\/kaggle\/input\/house-of-representatives-congress-116\/house_legislation_116.csv', index_col = 0, parse_dates=[\"date_introduced\"])\n\n#converts values of relevant columns to lists of strings rather than strings\nbills.cosponsors=bills.cosponsors.apply(literal_eval)\nbills.subjects = bills.subjects.apply(literal_eval)\nbills.committees = bills.committees.apply(literal_eval)\nbills.related_bills = bills.related_bills.apply(literal_eval)\n\nbills.head()","df8b48f9":"#areas: list of unique policy areas in bills\nareas = bills.policy_area.unique()\n\n#dic: dictionary with keys corresponding to unique policy areas with values initialized to 0\ndic = {area: [0,0,0,0] for area in areas}\n\n\n#iterate through bills and tally the bills by policy area\nfor index, row in bills.iterrows():\n    #capture bills that were introduced by Democrats\n    if members.loc[row.sponsor].current_party == 'Democratic':\n        dic[row.policy_area][0] += 1\n        #capture bills passed by Democrats\n        if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n                dic[row.policy_area][1]+=1 \n    #capture bills introduced by Republicans   \n    elif members.loc[row.sponsor].current_party == 'Republican':\n        dic[row.policy_area][2] += 1\n        #capture bills passed by Republicans\n        if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n                dic[row.policy_area][3]+=1 \n    \n#create dataframe from dictionary with rows representing policy_areas and columns representing bills introduced\/passed by Democrats and Republicans\ndf = pd.DataFrame(dic.values(), index = dic.keys(), columns = ['Democratic', 'Democrats_Passed','Republican', 'Republicans_Passed']).sort_values('Democratic', ascending = False)\n\ndf.drop(np.nan, inplace = True)\n\n#add row for 'Total' representing all bills regardless of policy area\ndf.loc['Total'] = [sum(df[x]) for x in df.columns]\n\n#add column 'Total'representing the total bills introduced by policy area\ndf['Total'] = df.Democratic +df.Republican\n\n#add column 'Total_Passed' represengint the total bills passed by policy area\ndf['Total_Passed'] = df.Democrats_Passed+df.Republicans_Passed\n\n#add columns representing percentages of bills passed\/introduced by Democrats, Republicans and overall \ndf['D%_passed']=df.Democrats_Passed\/df.Total_Passed\ndf['R%_passed']=df.Republicans_Passed\/df.Total_Passed\ndf['D%_introduced'] = df['Democratic']\/df['Total'] \ndf['R%_introduced'] = df['Republican']\/df['Total']\ndf['%_passed'] = 100*(df['Total_Passed']\/df['Total'])\n\n#fill nan values with 0\ndf.fillna(0, inplace=True)\n\n#sort df by total introduced by policy area\ndf.sort_values(by=['Total'], ascending = False, inplace= True)\n\n#limits the plots to the 25 most prolific polify areas as measured by number of bills introduced in the policy area\nn=25\nx= df.head(n).index\ny1= df.head(n)['D%_introduced']\ny2= df.head(n)['R%_introduced']\ntotal = df.head(n)['Total']\n\n#creates two subplots one for bills introduced and one for bills passed\nfig, (ax1) = plt.subplots(nrows =1, ncols =1, figsize=(12, 4), squeeze = True)\n\n#plot democrats\/republican_introduced on ax1\nax1.bar(x, y1, label='Democrats_Introduced', alpha = .5)\nax1.bar(x, y2 ,bottom= y1,label= 'Republicans_Introduced', alpha = .5)\n\n\n# add text annotation corresponding to the percentages introduced in each policy by Republicans and Democrats.\nfor xpos, ypos, yval in zip(x, y1\/2, y1):\n    if yval>0:\n        ax1.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation=90)\nfor xpos, ypos, yval in zip(x, y1+y2\/2, y2):\n    if yval>0:\n        ax1.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation= 90)\n# add text annotation corresponding to the number of total bills introduced in each policy area\nfor xpos, ypos, total in zip(x, y1+y2, total):\n    ax1.text(xpos, ypos +.05, total, ha=\"center\", va=\"bottom\", rotation= 90)\n\n#rotate x_tick labels 90 degrees for ax1\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)    \n\n#set title and legend for ax1\nax1.set_title('Bills Introduced by Party and Policy Area (%)')\nax1.legend(loc = 'upper right')\n\n#set y_lim for ax1 and hide the y-axis of ax1\nax1.set_ylim(0,1.5)\nax1.yaxis.set_visible(False)\n\n#create a second y-axis on the first subplot ax3\nax3 = ax1.twinx()\n#plot a line graph for total introduced by policy area using ax3\nax3.plot(x, df.head(n).Total, label = 'Total_introduced')\nax3.set_ylim(0,641)\nax3.legend(loc = 'upper left')\nax3.yaxis.set_visible(True)\nax3.set_ylabel('Bills Introduced')\n\n#show plot\nplt.show()","6866262e":"#creates two subplots one for bills introduced and one for bills passed\nfig, (ax2) = plt.subplots(nrows =1, ncols =1, figsize=(12, 4), squeeze = True)\n\n#resort df by total passed by policy area\ndf.sort_values(by=['Total_Passed'], ascending = False, inplace= True)\n\n#limits plot to the 25 most prolific policy areas as measured by the total number of bills passed\nx= df.head(n).index\ny1= df.head(n)['D%_passed']\ny2= df.head(n)['R%_passed']\ny3= df.head(n)['Democratic']+ df.head(n)['Republican']\ntotal = df.head(n)['Total_Passed']\n\n#plot bars representing the number of bills passed by Democrats\/Republicans by policy area\nax2.bar(x, y1, label='Democrats_Passed', alpha=.5)\nax2.bar(x, y2 ,bottom= y1,label= 'Republicans_Passed', alpha=.5)\n\n#create a second axis on the second subplot for a line plot representing the percentage of bills pased by policy area\nax4 = ax2.twinx()\nax4.plot(x, df.head(n)['%_passed'], label = 'Percent_Passed')\nax4.set_ylim(0,30)\nax4.legend(loc = 'upper left')\nax4.yaxis.set_visible(True)\nax4.set_ylabel(\"Bills Passed (%)\")\n\n# add text annotation corresponding to the percentage passed by Democrats and Republicans.\nfor xpos, ypos, yval in zip(x, y1\/2, y1):\n    if yval>0:\n        ax2.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation=90)\nfor xpos, ypos, yval in zip(x, y1+y2\/2, y2):\n    if yval>0:\n        ax2.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation= 90)\n# add text annotation corresponding to the total number of bills passed in each policy area\nfor xpos, ypos, total in zip(x, y1+y2, total):\n    ax2.text(xpos, ypos +.05, total, ha=\"center\", va=\"bottom\", rotation= 90)\n    \n#rotate xlabels 90 degrees on second subplot\nfor tick in ax2.get_xticklabels():\n    tick.set_rotation(90) \n#set title legend for ax2\nax2.set_title('Bills Passed by Party and Policy Area (%)')\nax2.legend(loc = 'upper right')\n\n#set y limit and y_axis visibiity for ax2\nax2.set_ylim(0,1.5)\nax2.yaxis.set_visible(False)\n\n\n#show plot\nplt.show()","9e1ecb44":"#committees: list of unique committees in the House of Representatives\ncommittees =[]\nDems=[]\nReps=[]\nD_passed = []\nR_passed = []\n\n#iterate through bills and append unique House committees to list: committees\nfor bill, row in bills.iterrows():\n    for committee in row.committees:\n        if (committee not in committees) and ('House' in committee):\n            committees.append(committee)\n    \n\n#dic: dictionary with keys corresponding to unique committees with values initialized to 0\ndic = {committee: [0,0,0,0] for committee in committees}\n\n\n#iterate through bills and based on committees\nfor index, row in bills.iterrows():\n    #iterate through committees associated with bill\n    for committee in row.committees:\n        #only consider House committees, exclude Senate committees\n        if ('House' in committee): \n            if members.loc[row.sponsor].current_party == 'Democratic':\n                #capture bills referrered to committee that are sponsored by Democrats\n                dic[committee][0] += 1\n                #capture bill name\n                if index not in Dems:\n                    Dems.append(index)\n                #capture bills referred to committee sponsored by Democrats that have passed the House\n                if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n                    dic[committee][1]+=1\n                    #capture bill name\n                    if index not in D_passed:\n                        D_passed.append(index)\n                    \n                    \n            elif members.loc[row.sponsor].current_party == 'Republican':\n                #capture bills referred to committee that were sponsored by Republicans\n                dic[committee][2] += 1\n                #capture bill name\n                if index not in Reps:\n                    Reps.append(index)\n                #capture bills referred to committee that were sponsored by Republicans which passed the House\n                if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n                    dic[committee][3]+=1\n                    if index not in R_passed:\n                        R_passed.append(index)\n    \n        \n#create Dataframe: df from dic with rows representing House committees and columns representing bills introduced\/passed by Democrats or Republicans                 \ndf = pd.DataFrame(dic.values(), index = dic.keys(), columns = ['Democratic', 'Democrats_Passed','Republican', 'Republicans_Passed']).sort_values('Democratic', ascending = False)\n\n#add row representing all bills regardless of committee to which they were referred\ndf.loc['Total'] = [len(Dems), len(D_passed), len(Reps), len(R_passed)]\n\n# add column 'Total' representing all bills introduced regardless of the party of the bill sponsor\ndf['Total'] = df.Democratic +df.Republican\n\n# add column 'Total_Passed' representing all bills passed regardless of the party of the bill sponsor\ndf['Total_Passed'] = df.Democrats_Passed+df.Republicans_Passed\n\n#add percentage columns\ndf['D%_passed']=df.Democrats_Passed\/df.Total_Passed\ndf['R%_passed']=df.Republicans_Passed\/df.Total_Passed\ndf['D%_introduced'] = df['Democratic']\/df['Total'] \ndf['R%_introduced'] = df['Republican']\/df['Total']\ndf['%_passed'] = 100*(df['Total_Passed']\/df['Total'])\n\n#fill nan values with 0\ndf.fillna(0, inplace=True)\n\n#sort df by 'Total' column\ndf.sort_values(by=['Total'], ascending = False, inplace= True)\n\n\nn=25\nx= df.head(n).index\n\ny1= df.head(n)['D%_introduced']\ny2= df.head(n)['R%_introduced']\n\ntotal = df.head(n)['Total']\n\n\n\nfig, (ax1) = plt.subplots(nrows =1, ncols =1, figsize=(12, 4), squeeze = True)\n\n\nax1.bar(x, y1, label='Democrats_Introduced', alpha = .5)\nax1.bar(x, y2 ,bottom= y1,label= 'Republicans_Introduced', alpha = .5)\n\n\n# add text annotation corresponding to the values of each bar.\nfor xpos, ypos, yval in zip(x, y1\/2, y1):\n    if yval>0:\n        ax1.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation=90)\nfor xpos, ypos, yval in zip(x, y1+y2\/2, y2):\n    if yval>0:\n        ax1.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation= 90)\n# add text annotation corresponding to the \"total\" value of each bar\nfor xpos, ypos, total in zip(x, y1+y2, total):\n    ax1.text(xpos, ypos +.05, total, ha=\"center\", va=\"bottom\", rotation= 90)\n\n#rotate tick labels to 90 degrees\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)    \n\n#set title and legend for first subplot\nax1.set_title('Bills Introduced by Party and Committee (%)')\nax1.legend(loc = 'upper right')\n\n#set y_lim and y_axis visibility\nax1.set_ylim(0,1.5)\nax1.yaxis.set_visible(False)\n\n#add second y_axis to first subplot\nax3 = ax1.twinx()\n\n#plot line graph representing total bills referred to each committee\nax3.plot(x, df.head(n).Total, label = 'Total_introduced')\nax3.set_ylim(0,641)\nax3.legend(loc = 'upper left')\nax3.yaxis.set_visible(True)\nax3.set_ylabel('Bills Referred to Committee')\n\n\n#show plot\nplt.show()","2fe8a9a7":"fig, (ax2) = plt.subplots(nrows =1, ncols =1, figsize=(12, 4), squeeze = True)\n\n\n#sort df by total bills passed by committee\ndf.sort_values(by=['Total_Passed'], ascending = False, inplace= True)\n\n#limits plot to the top 25 committees\nx= df.head(n).index\n\n#calculate passage percentages\ny1= df.head(n)['D%_passed']\ny2= df.head(n)['R%_passed']\ny3= df.head(n)['Democratic']+ df.head(n)['Republican']\ntotal = df.head(n)['Total_Passed']\n\n#plot bar graph for second subplot for bills bassed by committee\nax2.bar(x, y1, label='Democrats_Passed', alpha=.5)\nax2.bar(x, y2 ,bottom= y1,label= 'Republicans_Passed', alpha=.5)\n\n#create second second y_axis for the second subplot for line plot\nax4 = ax2.twinx()\n\n#plot line plot for number of bills passed by committee\nax4.plot(x, df.head(n)['%_passed'], label = 'Percent_Passed')\n\n#set y_limit, legebd location, visibility and label for the ax4\nax4.set_ylim(0,30)\nax4.legend(loc = 'upper left')\nax4.yaxis.set_visible(True)\nax4.set_ylabel('Bills Passed %')\n\n# add text annotation corresponding to the percentages of bills passed that were referred to each committee by Democrats or Republicans\nfor xpos, ypos, yval in zip(x, y1\/2, y1):\n    if yval>0:\n        ax2.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation=90)\nfor xpos, ypos, yval in zip(x, y1+y2\/2, y2):\n    if yval>0:\n        ax2.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation= 90)\n        \n# add text annotation corresponding to the number of bills passed that were also referred to each of the different committees\nfor xpos, ypos, total in zip(x, y1+y2, total):\n    ax2.text(xpos, ypos +.05, total, ha=\"center\", va=\"bottom\", rotation= 90)\n    \n#rotate x_tick labels by 90 degrees\nfor tick in ax2.get_xticklabels():\n    tick.set_rotation(90)\n    \n#set title and legend location for the second subplot\nax2.set_title('Bills Passed by Party and Committee (%)')\nax2.legend(loc = 'upper right')\n\n#set y limit and y_axis visibiity for ax2\nax2.set_ylim(0,1.5)\nax2.yaxis.set_visible(False)\n\nplt.show()","ef8b208a":"#create subplots, in this case just 1\nfig, (ax5) = plt.subplots(nrows =1, ncols =1, figsize=(12, 4), squeeze = True)\n\n#committees: list of unique committees in the House of Representatives\ncommittees =[]\n\n#iterate through members dataframe to capture all unique committees\nfor member, row in members.iterrows():\n    #iterate through each committee assignment for each member\n    for committee in row.committee_assignments:\n        #capture committee if not already within list committees\n        if (committee not in committees):\n            committees.append(committee)\n            \n#create dictionary having keys corresponding to values in list committees\ndic = {committee: [0,0,0] for committee in committees}\n\n\n#iterate through dataframe members and tally the number of Democrats and Republicans in each committee\nfor index, row in members.iterrows():\n    #iterate through committee assignments for each member\n    for committee in row.committee_assignments:\n        #for each committee in dic add 1 to the 1st value of the list if member is a Democrat\n        if row.current_party == 'Democratic':\n            dic[committee][0] += 1\n        # else add 1 to the 2nd value of the list if member is a Democrat\n        elif row.current_party == 'Republican':\n            dic[committee][1] += 1\n        # otherwise add 1 to the 3rd value of the list to capture independents\n        else:\n            dic[committee][2] += 1\n\n\n#count: series storing the total number of Democrats, Republicans and Independents in the House\ncount = members.groupby('current_party').count().name     \n    \n# df: dataframe storing the number of Democrats, Republicans and Independents in each committee\ndf = pd.DataFrame(dic.values(), index = dic.keys(), columns = ['Democratic', 'Republican', 'Independent']).sort_values(by = 'Democratic', ascending = False).head(23)\n\n#add row to df for total number of Democrats, Republicans and Independents in the House\ndf.loc['Total'] = [count.loc['Democratic'],  count.loc['Republican'], count.loc['Independent']]\n\n#add column to df representng the total number of members of each committee\ndf['Total'] = df['Democratic']+df['Republican']+df['Independent']\n\n#add columns representing fraction of each of the parties by committee\ndf['D%'] = df['Democratic']\/df['Total']\ndf['R%'] = df['Republican']\/df['Total']\ndf['I%'] = df['Independent']\/df['Total']\n\n#sort df in descending order by the percentage of Democrats within each committee\ndf.sort_values(by='D%', ascending = False, inplace= True)\n\n#define variables for plotting and annotations\nn=25\nx= df.head(n).index\ny1= df.head(n)['D%']\ny2= df.head(n)['R%']\ny3= df.head(n)['I%']\ntotal = df.head(n)['Total']\n\n\n#Plot bars for Democrats, Republicans and Independents with shared axis ax5\nax5.bar(x, y1, label='Democrats', alpha=.5)\nax5.bar(x, y2 ,bottom= y1,label= 'Republican', alpha=.5)\nax5.bar(x, y3 ,bottom= y1+y2,label= 'Independent', alpha=.5)\n\n# add text annotation corresponding to the values of each bar.\nfor xpos, ypos, yval in zip(x, y1\/2, y1):\n    ax5.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation=90)\nfor xpos, ypos, yval in zip(x, y1+y2\/2, y2):\n    ax5.text(xpos, ypos, str(round(yval*100,0))+ \"%\", ha=\"center\", va=\"center\", rotation= 90)\n\n# add text annotation corresponding to the \"total\" value of each bar\nfor xpos, ypos, total in zip(x, y1+y2, total):\n    ax5.text(xpos, ypos, total, ha=\"center\", va=\"bottom\",)\n\n#set y_limit\nax5.set_ylim(0,1.5)\n\n#rotate x_tick labels by 90 degrees\nfor tick in ax5.get_xticklabels():\n    tick.set_rotation(90)   \n\n#set title, legend location and y_axis visibility\nax5.set_title('Committee Membership by Party (%)')\nax5.legend(loc = 'upper right')\nax5.yaxis.set_visible(False)\n\n#show plot\nplt.show()","42727407":"# dic: with keys corresponding to members_ids from members dataframe and list for storing count of bills introduced and passed by a member\ndic = {k:[0,0] for k in members.index}\n\n#iterrate through bills and add count number of bills introduced\/passed by each member\nfor index, row in bills.iterrows():\n    dic[row.sponsor][1]+=1\n    if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n        dic[row.sponsor][0]+=1\n\n#num_passed: dataframe created from dic with index correpodning to member_id and columns representing the number of bills introduced\/passed by eac member\nnum_passed = pd.DataFrame.from_dict(dic, orient = 'index',columns = ['num_passed', 'total_introduced'])\n\n#create column for percentage of bills passed by each member\nnum_passed['percent_passed'] =( num_passed['num_passed']\/num_passed['total_introduced'])*100\n\n#sort num_passed\nnum_passed.sort_values(by = ['num_passed','percent_passed'], ascending = False, inplace = True)\n\n#merge num_passed with members dataframe\nnum_passed.merge(members[['name', 'current_party', 'committee_assignments']], how = 'inner', left_index= True, right_index =True).head(10)","af0a88d8":"#set policy_area to focus on for second part of analysis\npolicy_area = 'Crime and Law Enforcement'\n\n\n# MD: graph with directed edges from bill cosponsors to a bill sponsor\nMD = nx.MultiDiGraph()\nMD.add_nodes_from(members.index)\nfor index, row in bills.iterrows():\n    sponsor = [row.sponsor for i in range(len(row.cosponsors))]\n    zipped = zip(row.cosponsors, sponsor)\n    zipped = list(zipped)\n    \n    #set edge attribute related to bill policy_area\n    MD.add_edges_from(zipped, bill = index, policy_area = row.policy_area, bill_progress = row.bill_progress)\n\n#drop nodes representing non-voting members, former members and the Speaker of the House\nto_drop =['G000582', 'R000600', 'N000147', 'P000610', 'S001177', 'S001204', 'P000197', 'J000255']\nMD.remove_nodes_from(to_drop)\n\n# set node attrbute 'party'\nnx.set_node_attributes(MD,  members.current_party.to_dict(), 'party')\n\n\n#convert MD from a multi-directed graph to graph with weighted edges, with weights representing the number of edges between two nodes\nG = nx.Graph()\n\nfor n, nbrs in MD.adjacency():\n    for nbr, edict in nbrs.items():\n        if (G.has_edge(n,nbr)) :\n            G[n][nbr]['weight'] +=len(edict)\n        else:\n             G.add_edge(n, nbr, weight=len(edict))\n\n#MDs: subgraph limited to edges filtered by a policy area == 'Crime and Law Enforcement'\nMDs = nx.MultiDiGraph()\n\nfor u,v,d in MD.edges(data = True):\n    if d['policy_area'] ==  policy_area:\n        MDs.add_edge(u,v,bill = d['bill'])\n\n\n#convert MDs from a multi-directed graph to graph with weighted edges, with weights representing the number of edges between the nodes\nGs = nx.Graph()\n\nfor n, nbrs in MDs.adjacency():\n    for nbr, edict in nbrs.items():\n        if (Gs.has_edge(n,nbr)) :\n            Gs[n][nbr]['weight'] +=len(edict)\n        else:\n             Gs.add_edge(n, nbr, weight=len(edict))\n                \n","f5d5364c":"# function for setting colors of nodes and edges\ndef get_paired_color_palette(size):\n    palette = []\n    for i in range(size*2):\n        palette.append(plt.cm.Paired(i))\n    return palette\n\n\n#use louvain community detection algorithm to detect communities in G\ncommunities =[]\nlouvain = community.best_partition(G, weight = 'weight', random_state=42)\nfor i in set(louvain.values()):\n    nodelist = [n for n in G.nodes if (louvain[n]==i)]\n    communities.append(nodelist)\n\n#make plot using matplotlib, networkx spring_layout, set_colors using cluster_count and get_paired_color_pallette\nclusters_count = len(set(louvain.values()))\nplt.figure(figsize=(10, 10))\nlight_colors = get_paired_color_palette(clusters_count)[0::2]\ndark_colors = get_paired_color_palette(clusters_count)[1::2]\ng = nx.drawing.layout.spring_layout(G, weight = 'weight', seed = 42, threshold = .0000000001)\n\n#iterate through each of the communities found by the Louvain algorithm and plot\nfor i in set(louvain.values()):\n    nodelist = [n for n in G.nodes if (louvain[n]==i)]\n    edgelist = [e for e in G.edges if ((louvain[e[0]]==i) or (louvain[e[1]]==i))]\n    node_color = [light_colors[i] for _ in range(len(nodelist))]\n    edge_color = [dark_colors[i] for _ in range(len(edgelist))]\n    nx.draw_networkx_nodes(G, g, nodelist=nodelist, node_color=node_color, edgecolors='k', label = i)                                                                                                           \n    nx.draw_networkx_edges(G, g, edgelist=edgelist, alpha=.2, edge_color=edge_color)\n\n#set title, legend and show plot\nplt.title('Louvain clustering: House of Representatives', fontdict={'fontsize': 25})\nplt.legend()\nplt.axis('off')\nplt.show()","390179c9":"# instantiate dictionaries\ncommunity_members = defaultdict()\ncommunity_bills = defaultdict()\n\n# iterate through each community found by Louvain algorithm\nfor i in range(3):\n    dic ={}\n    index = []\n    #set community_of_interest\n    community_of_interest = i\n\n    #create subgraph with nodes limited to the community_of_interest\n    subgraph = MD.subgraph(communities[community_of_interest])\n\n    #create dataframe for each community with index corresponding to member_id and a column representing the in_degree centrality of each member, merge with members dataframe\n    community_members[i] = pd.DataFrame.from_dict(nx.algorithms.centrality.in_degree_centrality(subgraph), orient = 'index', columns = ['centrality']).merge(members[['name','current_party', 'committee_assignments']], how = 'left', left_index = True, right_index = True).sort_values(by= 'centrality',ascending = False)\n    \n    \n    # community_bills[i] is a subset of bills dataframe having a sponsor within the given community i\n    community_bills[i] = bills.loc[[row.sponsor in communities[i] for index, row in bills.iterrows()]]\n    \n    # iterate through community_bills[i]\n    for bill, row in community_bills[i].iterrows():\n        #append bill to list index\n        index.append(bill)\n        #create dic key related to each bill and set initial value to 0\n        dic[bill] = 0\n        #iterate through cosponsors of each bill\n        for cosponsor in row.cosponsors:\n            #count number of bill cosponsors which are within the given community\n            if cosponsor in community_members[i].index:\n                dic[bill] += 1\n        \n    \n\n    #create data frame from dic with bill as index and column representing the number of in_community cosponsor for each bill\n    tally = pd.DataFrame.from_dict(dic, orient = 'index',columns = ['in_community_cosponsors'])\n    \n    #merge tally with community_bills[i]\n    community_bills[i] = tally.merge(community_bills[i][['title', 'bill_progress']],how = 'outer', left_index =True, right_index= True)\n\n#instantiate lists\nl = []\nindex = []\n\n# iterate through each community found by Louvain algorithm\nfor i in range(3):\n    # community_i is a subset of members limited to members of the given community\n    community_i = members.loc[communities[i]]\n    #democrats: stores the number of democrats within the given community\n    democrats = len(community_i.loc[community_i.current_party == 'Democratic'])\n    #republicans: stores the number of republicans in the given community\n    republicans = len(community_i.loc[community_i.current_party == 'Republican'])\n    #indepenents: stores the number of independents in teh given community\n    independents = len(community_i.loc[community_i.current_party == 'Independent'])\n    #total_members: is the total number of members in the given community\n    total_members = len(community_i)\n    #total_bills: the total number of bills introduced by members of the given community\n    total_bills = len(community_bills[i])\n    #bills_passed: is the total number of bills which passed the house which were introduced by members of the given community\n    bills_passed = len(community_bills[i].loc[community_bills[i].bill_progress ==  ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate')])\n    #append list containing all values to list l\n    l.append([democrats, republicans, independents, total_members, total_bills, bills_passed])\n    #append index string to list index\n    index.append('community_' +str(i))\n    \n    \n#create dataframe df from lists l and index\ndf = pd.DataFrame(l, columns = ['democrats', 'republicans', 'independents', 'total_members', 'total_bills', 'bills_passed'],index = index)  \n#caculate passage percentage for each community\ndf['percent_passed'] = (df['bills_passed']\/df['total_bills'])*100\ndf.head()\n\n","b34b6716":"#democrats: subset of community_0 which are Democrats\ndemocrats = members.loc[communities[0]]\ndemocrats = democrats.loc[democrats.current_party == 'Democratic']\ndemocrats","9a2b8aed":"#dataframe lists subsets of communities 1 and 2 which are Republican \ncom_1 = members.loc[communities[1]]\ncom_2 = members.loc[communities[2]]\n\npd.concat([com_1.loc[com_1.current_party=='Republican'], com_2.loc[com_2.current_party=='Republican']], keys = [1,2])\n","754d255c":"#dataframe lists the ten members of each community with the largest in_degree centralities\ndf = pd.concat([community_members[0], community_members[1], community_members[2]], keys =\n         [0,1,2])\n\ndf.index.rename(['community','member'], inplace = True)\n\ndf= df.merge(num_passed, how = 'inner', left_on = 'member', right_index=True).sort_values(['community','centrality'], ascending = False)\n\npd.concat([df.loc[2].head(10), df.loc[1].head(10), df.loc[0].head(10)], keys =\n         [2,1,0])\n\n","2864f5ba":"#dataframe list the top ten members of each community with the highest number of bills passed\ndf = pd.concat([community_members[0], community_members[1], community_members[2]], keys =\n         [0,1,2])\n\ndf.index.rename(['community','member'], inplace = True)\n\ndf= df.merge(num_passed, how = 'inner', left_on = 'member', right_index=True).sort_values(['community','num_passed','percent_passed', 'total_introduced'], ascending = False)\n\npd.concat([df.loc[2].head(5), df.loc[1].head(5), df.loc[0].head(5)], keys =\n         [2,1,0])\n\n","5af34823":"#iterate through each community\nfor i in range(3):\n    #sort bills introduced by each community by the number of in_community cosponsors\n    community_bills[i].sort_values(by='in_community_cosponsors', ascending = False, inplace = True)\n#concatenate the ten most supported bills of each community into one dataframe    \npd.concat([community_bills[0].head(10), community_bills[1].head(10), community_bills[2].head(10)], keys =\n         ['community_0', 'community_1', 'community_2'])","e5542630":"# function for setting colors of nodes and edges\ndef get_paired_color_palette(size):\n    palette = []\n    for i in range(size*2):\n        palette.append(plt.cm.Paired(i))\n    return palette\n\n\n#use louvain community detection algorithm to detect communities in Gs, network of bills limited to Crime and Law Enforcement\ncommunities =[]\nlouvain = community.best_partition(Gs, weight = 'weight', random_state=42)\nfor i in set(louvain.values()):\n    nodelist = [n for n in Gs.nodes if (louvain[n]==i)]\n    communities.append(nodelist)\n\n#make plot using matplotlib, networkx spring_layout, set_colors using cluster_count and get_paired_color_pallette\nclusters_count = len(set(louvain.values()))\nplt.figure(figsize=(10, 10))\nlight_colors = get_paired_color_palette(clusters_count)[0::2]\ndark_colors = get_paired_color_palette(clusters_count)[1::2]\ng = nx.drawing.layout.spring_layout(Gs, weight = 'weight', seed = 42, threshold = .0000000001)\n\n#iterate through each of the communities found by the Louvain algorithm and plot\nfor i in set(louvain.values()):\n    nodelist = [n for n in Gs.nodes if (louvain[n]==i)]\n    edgelist = [e for e in Gs.edges if ((louvain[e[0]]==i) or (louvain[e[1]]==i))]\n    node_color = [light_colors[i] for _ in range(len(nodelist))]\n    edge_color = [dark_colors[i] for _ in range(len(edgelist))]\n    nx.draw_networkx_nodes(Gs, g, nodelist=nodelist, node_color=node_color, edgecolors='k', label = i)                                                                                                           \n    nx.draw_networkx_edges(Gs, g, edgelist=edgelist, alpha=.5, edge_color=edge_color)\n\n#set title, legend and show plot\nplt.title('Policy Area: Crime and Law Enforcement', fontdict={'fontsize': 25})\nplt.legend()\nplt.axis('off')\nplt.show()","63393e7a":"#instantiate dictionaries\ncommunity_members = defaultdict()\ncommunity_bills = defaultdict()\n\n#iterate through communities found by Louvain algorithm\nfor i in range(3):\n    dic ={}\n    index = []\n    #set community_of_interest\n    community_of_interest = i\n\n    #create subgraph with nodes limited to the community_of_interest\n    subgraph = MDs.subgraph(communities[community_of_interest])\n\n    #sort members of community_of_interest by in_degree centality\n    community_members[i] = pd.DataFrame.from_dict(nx.algorithms.centrality.in_degree_centrality(subgraph), orient = 'index', columns = ['centrality']).merge(members[['name','current_party', 'committee_assignments', 'state']], how = 'left', left_index = True, right_index = True).sort_values(by= 'centrality',ascending = False)\n    \n    \n    # Tally bills introduced by members of each community\n    community_bills[i] = bills.loc[[(row.sponsor in communities[i] and row.policy_area == 'Crime and Law Enforcement') for index, row in bills.iterrows() ]]\n    \n    # iterate through community_bills[i]\n    for bill, row in community_bills[i].iterrows():\n        #append bill to list index\n        index.append(bill)\n        #create dic key related to each bill and set initial value to 0\n        dic[bill] = 0\n        #iterate through cosponsors of each bill\n        for cosponsor in row.cosponsors:\n            #count number of bill cosponsors which are within the given community\n            if cosponsor in community_members[i].index:\n                dic[bill] += 1\n        \n    \n\n    #create data frame from dic with bill as index and column representing the number of in_community cosponsor for each bill\n    tally = pd.DataFrame.from_dict(dic, orient = 'index',columns = ['in_community_cosponsors'])\n    \n    #merge tally with community_bills[i]\n    community_bills[i] = tally.merge(community_bills[i][['title', 'bill_progress']],how = 'outer', left_index =True, right_index= True)\n\n    \n#instantiate lists\nl = []\nindex = []\n\n# iterate through each community found by Louvain algorithm\nfor i in range(3):\n    \n    # community_i is a subset of members limited to members of the given community\n    community_i = members.loc[communities[i]]\n    #democrats: stores the number of democrats within the given community\n    democrats = len(community_i.loc[community_i.current_party == 'Democratic'])\n    #republicans: stores the number of republicans in the given community\n    republicans = len(community_i.loc[community_i.current_party == 'Republican'])\n    #indepenents: stores the number of independents in teh given community\n    independents = len(community_i.loc[community_i.current_party == 'Independent'])\n    #total_members: is the total number of members in the given community\n    total_members = len(community_i)\n    #total_bills: the total number of bills introduced by members of the given community\n    total_bills = len(community_bills[i])\n    #bills_passed: is the total number of bills which passed the house which were introduced by members of the given community\n    bills_passed = len(community_bills[i].loc[community_bills[i].bill_progress ==  ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate')])\n    #append list containing all values to list l \n    l.append([democrats, republicans, independents, total_members, total_bills, bills_passed])\n    #append index string to list index\n    index.append('community_' +str(i))\n    \n    \n#create dataframe df from lists l and index\ndf = pd.DataFrame(l, columns = ['democrats', 'republicans', 'independents', 'total_members', 'total_bills', 'bills_passed'],index = index)  \n#caculate passage percentage for each community\ndf['percent_passed'] = (df['bills_passed']\/df['total_bills'])*100\ndf.head()\n\n","72c7c7ff":"#democrats: subset of community_0 which are Democrats\ndemocrats = members.loc[communities[0]]\ndemocrats = democrats.loc[democrats.current_party == 'Democratic']\ndemocrats","dd3831de":"#subsets of members which are limited to the members of communities 1 and 2\ncom_1 = members.loc[communities[1]]\ncom_2 = members.loc[communities[2]]\n\n#concatenate Republican members of communities 1 and 2 into a single datafame\npd.concat([com_1.loc[com_1.current_party=='Republican'], com_2.loc[com_2.current_party=='Republican']], keys = [1,2])\n","0e4169e8":"#concatenate members of communites 1,2 and 3 into a single dataframe\ndf = pd.concat([community_members[0], community_members[1], community_members[2]], keys =\n         [0,1,2])\n#rename index\ndf.index.rename(['community','member'], inplace = True)\n#sort values in each community by in_degree centrality\ndf.sort_values(['community','centrality'], ascending = False, inplace = True)\n#limit each community to the only the ten most central members\npd.concat([df.loc[0].head(10), df.loc[1].head(10), df.loc[2].head(10)], keys =\n         [0,1,2])\n","bbb73a07":"# dic: dictionary with keys corresponding to members_ids from members dataframe and list for storing count of bills introduced and passed by a member\ndic = {k:[0,0] for k in members.index}\n\n#iterate through bills and count number of bills introduced\/passed by each member in the policy area of Crime and Law Enforcement\nfor index, row in bills.iterrows():\n    if row.policy_area == 'Crime and Law Enforcement':\n        dic[row.sponsor][1]+=1\n        if row.bill_progress == ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate'):\n            dic[row.sponsor][0]+=1\n#num_passed: dataframe created from dic with index correpodning to member_id and columns representing the number of bills introduced\/passed by each member\nnum_passed = pd.DataFrame.from_dict(dic, orient = 'index',columns = ['num_passed', 'total_introduced'])\n#add column representing bill passage rates for each member\nnum_passed['percent_passed'] =( num_passed['num_passed']\/num_passed['total_introduced'])*100\n#sort num_passed by columns num_passed and percent_passed\nnum_passed.sort_values(by = ['num_passed','percent_passed'], ascending = False, inplace = True)\n\n#df: concatenate members of communities 0,1 and 3 in a single dataframe\ndf = pd.concat([community_members[0], community_members[1], community_members[2]], keys =\n         [0,1,2])\n\n#rename index\ndf.index.rename(['community','member'], inplace = True)\n#merge df with num_passed and sort values\ndf= df.merge(num_passed, how = 'inner', left_on = 'member', right_index=True).sort_values(['num_passed','percent_passed', 'total_introduced'], ascending =False)\n\n#limit each community to top members as previously sorted\npd.concat([df.loc[1].head(6), df.loc[2].head(5), df.loc[0].head(5)], keys =\n         [1,2,0])","9536d239":"#iterate through each community\nfor i in range(3):\n    #sort bills of each community by in_community_cosponsors \n    community_bills[i].sort_values(by='in_community_cosponsors', ascending = False, inplace = True)\n#concatenate most supported bills from each community to into a single dataframe   \npd.concat([community_bills[0].head(5), community_bills[1].head(5), community_bills[2].head(5)], keys =\n         ['community_0', 'community_1', 'community_2'])","3aa78453":"passed = ('Passed House' or 'Passed Senate' or 'Became Law' or 'To President' or 'Agreed to in House' or 'Agreed to in Senate')\n\n#concatenate passed bills from each community into a single dataframe    \npd.concat([community_bills[i].loc[community_bills[i].bill_progress == passed] for i in range(3)], keys =\n         ['community_0', 'community_1', 'community_2'])","a327ce1c":"The table above shows the distribution of Democrats, Republicans an Independents by community. It also tallies the number of bills introduced\/passed by community and calculates each communities' passage rate in %. As before, the community partitions are mostly divided among party lines with a couple of exceptions. Also we can assess community_1 to be the most effective community in this policy area with 9 bills passing the House and an overall passage rate of 9%. \n\n* Community_0 comprises 206 members with 195 Republicans, 10 democrats and 1 independent. While this community has introduced 117 bills in this policy area only 1 has successfully passed the House.\n* Community_1 comprises 150 members with 148 Democrats and 2 Republicans. This community is the most successful in terms of bills passed, with 99 bills introduced, 9 bills passed and a passage rate of 9%.\n* Community_2 comprises 77 members with 76 Democrats and 1 Republican. This community has introduced 111 bills and passed 5 with a passage rate of 4.5%.","8cf9e6db":"Table of community members sorted in descending order based on the number of passed bills by each member. These can be seen as the most effective members of each community. ","6ba8e321":"### Committee Membership by Party <a id = 'committee_membership'><\/a>","58cc4b90":"### Most Supported Bills by Community <a id = 'most_supported_bills_crime'><\/a>","974c59a5":"Now lets take a look at the core members of each community as measured by in-community in-degree centrality. ","b2726b97":"Now let's look at the the most effective members of each community in terms of bills actually passed. ","09c56841":"Takeaways:\n\n* Committees with the most number of bills referred include Energy and Commerce (1121), Judiciary (1101), Ways and Means (969) and Education and Labor (707).\n* Committees having particularly high bill passage rates for bills referred to them include Financial Services (12%), Foreign Affairs (9.5%), Homeland Security (23%), , Science, Space and Technology (13%), Small Business (26%), Appropriations (13%), Budget (9%), Intelligence (10%).\n* Committees having particularly low bill passage rates include Agriculture (.5%), Armed Services (2%), House Administration (3%), Transportation and Infrastructure (3%), Education and Labor (2%), Natural Resources (3.7%), Ways and Means (2%), Energy and Commerce (3%), Judiciary (4%).\n* Committees particularly controlled by Democrats in terms of bills passed include Judiciary (88%), Ways and Means (90%), Education and Labor (100%), Appropriations (100%), Budget (88%), Administration (100%), Armed Services (100%) and Intelligence (100%).\n* Commitees with higher than average Republican passage rates include Foreign Affairs (36%), Homeland Security (28%), Natural Resources (37%), Small Business (33%) and Transportation and Infrastructure (42%) \n\n\n\n\n","de3fddeb":"\n\n* For the most part committee precentages by party are roughly commensurate with total party percentages in the House (although slightly skewed towards Democrats), with a few exceptions.\n* Rules, House Administrations and Budget are particularly stacked in Democratic favor, while Moderniztion of Congress and Ethics are evenly split.\n* The Rules committee is especially stacked in Democratic favor with 73% Democratic majority. This committee is considered one of the most powerful in Congress since it determines the rules by which a bill is considered in the House.\n* The Budget committee is responsible for assigning each committee with an allocation of new budget authority. If a bill increases spending over these budget allocations it is subject to a point of order which could potentially prevent consideration of the bill. Considering that budget committee has power over aggregate spending limits, it is no suprise that the majority party would assert a higher level of control over this committee. \n* The ethics committee is usually 50\/50 between the majority and minority parties. This prevents the majority party from controlling ethics investigations, by giving the minority party an effective veto. The data seems to be missing a data point since there should be 10 members if the ethics committee split evenly between parties.  \n* Justin Amash, the only independent in the House is effectively shut out of the committee system since committee membership is determined by party leadership, one of the ways parties entrench themselves into the political system. \n\n(Data does not take into account resignations and deaths of Representatives)","3daed4d4":"Next lets look at the most supported community bills as measured by the number of in_community cosponsors. Here a community bill means a bill introduced\/sponsored by a member of the given community.","3ebf13c7":"The most effective representatives in terms of number of bills passed inlcude Eliot Engel, Elijah Cummings, Sheila Jackson Lee etc. Democrats being the majority party have a clear advantage. The most effective Republican is Michael Mccaul.","44fa4ee1":"Last we look at community bills which actually passed the house. ","78711591":"This table comprises the 10 Democrats associated with Republican dominated community_0.\n\n* 6 of those listed are members of Blue Dog Coalition which comprises Democrats who identify as centrist or fiscally conservative. These include Jim Costa, Kendra Horn,  Anthony Brindisi, Henry Cueller, Collin Peterson and Xochitl Torres Small. \n* Jefferson Van Drew since the last update has actually switched parties and is now Republican.\n* According to Wikipedia Henry Cuellar 'allies closely with the National Rifle Association, which gave him a 93% score for 2018.'\n* According to Wikipedia Collin Peterson 'has an \"A\" rating from the National Rifle Association (NRA) and is a \"staunch\" supporter of gun rights.'\n* According to Wikipedia Anthony 'Brindisi voted against the NY SAFE Act, a 2013 gun control law written in response to the Sandy Hook Elementary School shooting. He was endorsed by the National Rifle Association in 2016, and the NRA also gave him a 100% rating in 2017. The NRA downgraded his rating to an F during his 2018 campaign for Congress.'\n\nTherefore it appears the algorithm has included Democrats in community_0 who are more conservative and likely align with Republicans on at least some issues related to Crime and Law Enforcement.","bcbd44b3":"From the table, above, it is clear that the communities are mostly divided among party lines with community_0 mostly composed of Republicans and communities 1 and 2 mostly composed of Democrats. Yet the alogrithm also categorized nine Democrats into community_0, and six Republicans into communities 1 and 2. Lets take a look at these cross-over members.  ","f4519b68":"The table, above, comprises the ten most supported members of each community as measured by in-community in-degree centrality. One question we can ask is why did the community detection algorithm split the Democrats into two separate communities and whether this reflects a difference in political view within the Democratic party? One thing about community 1 that is apparent with a little bit of sleuthing is that many of the top members of community 1 are strong gun control advocates. For instance:\n\n* According to Wikipedia about David Cicilline, \"On a domestic level, he is a strong anti-gun advocate and was a founding member of the bipartisan coalition Mayors Against Illegal Guns ... in 2000, the National Rifle Association awarded him an F- lifetime score.\"\n* According to Wikipedia about Theodore Deutch \"Deutch has an \"F\" rating from the NRA, indicating that it does not believe he adequately supports gun rights. After the Stoneman Douglas High School shooting, Deutch endorsed several gun control measures.\"\n* About Mike Thompson, Wikipedia states, \"He is the Chairman of the House Gun Violence Prevention Task Force.\"\n* About Karen Bass, Wikipedia states, \"Bass is a very strong supporter of gun control. Her National Rifle Association Political Victory Fund Lifetime Score is an F.\n* About Lucy Mcbath Wikipedia states, \"McBath initially decided to run for Congress because she believed the government was not doing enough to prevent gun violence.\"\n* About Rosa Delauro, Wikipedia states, \"She has voted in support of stronger regulation of firearms in the United States...  She has an F rating from the NRA.\"\n\nAnother interesting pattern pertaining to community 2 is that many of the most supported members of community 2 are members of the congressional black caucus including Anthony Brown, Bobby Rush, Elijah Cummings, Sheila Jackson Lee, Donald Payne and Hakeem Jeffries.\n\nOne working hypothesis is that community_1's primary focus is passing gun control measures while community_2's primary focus is criminal justice reform.  ","bf59c00c":"The table above lists bills associated with each community which actually passed the House of Representatives.\n\n* Community_0 was the least successful community in this policy area only passing one bill. Further, this bill is far off topic from the main priorities of community_0 and repeals a couple of random sections of the crminal code including prohibitions against the interstate transport of specific species of plants and the unauthorized use of the Woodsy Owl character. Therefore, this bill can hardly be considered an accomplishement of community_0.\n* Community_1 was the most successful community in terms of bills actually passed in this policy area including H.R. 8, which establishes new background check requirements for firearm transfers between private parties, H.R. 724 which prohibits knowing creating or distributing videos of 'animal crushing', H.R. 1585 which reauthorizes the 'Violence Against Women Act' of 1994 and H.R. 886 which authorizes grants to court systems that have adopted the Veteran Treatment Court Program.\n* Community_2 was successful in passing five measures through the House including H.R. 3106 which authorizes the Department of Homeland Security to conduct research on current trends in domestic terrorism (e.g. hate groups), H.R. 835 which imposes criminal sactions against persons involved in doping fraud conspiracies,and H.R. 1112 which imposes new requirements on the background check procedure followed before a licensed gun dealer can transfer a firearm to an unlicensed individual.\n* Community_1 passed two (H.R. 8, H.R. 724) out of five of its most supported provisions, while communities 0 and 2 did not pass any of their five most supported provisions.","07196a91":"### Bills Passed by Community <a id = 'passed_crime'><\/a>","668eea4c":"### Detect Communities and Plot Total Graph Unfiltered by Policy Area <a id = 'total_network_plot'><\/a>","28259d97":"\nThe Louvain clustering algorithm detects three communities. Two relatively large communities 0 and 1 are color-coded blue and green respectively and form two poles of the plot. A third smaller community, labeled 2, is color-coded red and is located near the interface between communities 0 and 1. ","37c98681":"## Plot Network Filtered by Policy Area: Crime and Law Enforcement <a id = 'crime'><\/a>\n\n","b86662dc":"Next we look at the most supported community bills as measured by the number of in-community cosponsors. By community bills we mean bills introduced\/sponsored by a community member. ","7dd6d5cd":"Table sorted in descending order of in-community cosponsors for bills introduced by members of the given community. Bills with higher levels of in-community cosponsors are seen to have a higher level of support within the given community.","2a34bab9":"Here two sponsor\/cosponor networks are created. The first is a network which comprises all bills regardless of policy area and the second is limited to bills within the policy area of Crime and Law Enforcement. The networks are created by iterating through the <code>bills<\/code> dataframe and creating directed edges pointing from bill cosponsors to bill sponsors. However, since many algorithms are not defined for multidirected networks we convert the multidirected network into a weighted undirected network. We do this by counting the number of edges between each node pair in the multidirected network and setting a weight attribute of an edge between the same node pair in a newly created undirected network to this counted value.","bf427334":"### Most Effective Members by Community <a id = 'most_effective'><\/a>","1ceb67b6":"### Most Supported Bills by Community <a id = 'most_supported_bills'><\/a>\n\n","f3fb7552":"The table above, lists the Democrats associated with Republican community_0. These likely include Democrats who are more conservative\/centrist or at least work more closely with Republicans on common issues.\n\n* Four of the listed Democrats are members of the Blue Dog Coalition (Collin Peterson, Vincent Gonzalez, Joe Cunningham and Henry Cuellar), which supports fiscal responsibilty and strong national security. Blue Dog democrats therefore may be considered more conservative than Democrats as a whole.\n* All except Peterson are members of the New Democrat Coalition, another centrist democratic caucus similar to the Blue Dog Coalition. \n* Henry Cuellar, Collin Peterson and Ron Kind were 4, 6 and 19 most bipartisan members of the House during the 115th congress as measured by the Luger Index.\n* About Collin Peterson Wikipedia states, 'He is one of the most conservative Democrats in Congress and frequently crosses the party line.'\n* About Henry Cuellar Wikipedia states, \"During the 115th Congress, he voted with President Donald Trump nearly 70% of the time, and he has advocated that more Democrats should embrace a more conservative voting record.\"\n\n\n","676dbfd6":"Below is a normalized bar plot of committee membership by party. The plot is annotated above each bar with the total number of committee members and within each bar stack with the percentage of committee members by party.  ","3036a337":"Lets take a look at cross-over members, i.e. Democrats associated with Republican community_0 and Republicans associated with Democratic communities 1 and 2.","bb3765e5":"Using the total sponsor\/cosponsor network, the Louvain community detection algorithm is applied to detect the best partition of communities. The network is then plotted color coded by the community labels. The plot below uses networkx's <code>spring_layout<\/code>. This layout uses a spring analogy to determine the location of the nodes on the plot. Node pairs with higher weighted edges have a stronger spring force connecting them and thus are more closely clustered than nodes with lower weighted edges. This allows for decent a visualization of the different community clusters.   ","b35dc6bd":"The plot above is similar to the one previous only it exclusively considers a network of sponsors and cosponosors for bills associated with a particular policy area, in this case 'Crime and Law Enforcement'. This allows for inspection of factions within congress related to any particular policy area. Notice that the clustering of the different communities is fairly well defined as compared to the previous graph, indicating that this particular policy area is highly factionalized. As before, the community detection algorithm partitions representatives into three distinct communities. ","6b931e21":"Takeaways:\n\n* Democrats have introduced 75% of all bills passed in the House.\n* Policy areas with especially low passage rates include Health (%2.3), Immigration (3.7%), Public Lands and Natural Resources (3.2%), Environmental Protection (%3.4), Labor and Employment (4.1%), Taxation (.9%), Congress (.9%), Civil Rights (.9%), Liberties, Minority Issues (1.3%) and Social Welfare (1%).\n* Policy areas with especially high passage rates include Government Operations and Politics (9.4%), International Affairs (11%), Finance and Financial Sector (13.6%), Emergency Management (24%), Commerce (16%), Economics and Public Finance (11%), Housing and Community Development (10%) and Native Americans (11%).\n* Policy areas especially controlled by Democrats in terms of bills passed include Crime and Law Enforcement (93%), Economics and Public Finance (100%), Immigration (100%), Public Lands and Natural Resources (88%), Housing and Community Development (100%), Labor and Employment (100%) and Taxation (100%). These areas might be considered especially partisan policy areas.\n* Policy areas with higher than average Republican passage rates include International Affairs (38%), Finance and Financial Sector (30%), Emergency Management (42%), Transportation and Public Works (50%), Energy (43%) and Native Americans (57%). These areas might be considered policy areas with more bipartisan cooperation. \n\n\n\n\n","c2631904":"Again we do some ground work for later use and calculate some summary statistics for each community shown in the table below.","eaac09a0":"### Exploring Communities: Crime and Law Enforcement <a id = 'exploring_crime'><\/a>\n\n ","cef26835":"### Democrats\/Republicans Associated with Opposite Communities <a id = 'opposite_communities_crime'><\/a>","deea5a6e":"This table comprises Republicans which are associated with Democratic communities 1 and 2. \n\n* According to Wikipedia Peter 'King is pro-gun control.'\n* According to Wikipedia 'In 2018, Fitzpatrick was the only Republican to receive an endorsement from the Giffords Law Center to Prevent Gun Violence, the gun control organization founded by former U.S. Representative Gabrielle Giffords. Fitzpatrick voted to expand background checks and to restrict assault weapon sales. He voted against a bill that would require states to recognize concealed-carry permits issued by other states.'\n\nTherefore, at least King and Fitzpatrick break with their party and support gun control provisions which might explain why they are included in Democratic dominated communities related to Crime and Law Enformcement. ","69c32c76":"For each representative, the total number of bills introduced\/passed are counted and a bill passage percentage calculated. Representatives are then sorted in a hierarchical fashion by the number of bills passed and percentages of bills passed, as shown below.","2713a7d0":"# Community Detection in Congress Using NetworkX","e98b2f96":"### Exploring Communities: Total <a id = 'exploring_total'><\/a>","b7850d96":"### Bills Introduced and Passed by Party and Committee <a id = 'committee'><\/a>","92c11ad1":"The plots below are similar to those above, only exploring the distribution of bills by committees to which they were referred and party of the sponsoring member. The first plot is a normalized bar plot which includes all bills referred to a committee, color coded by party and annotated above each bar with the total number of bills referred, and within each bar-stack by the percentage of bills sponsored by each party. A line plot corresponds to total bills referred to each committee. The second plot is identical only limited to bills which actually passed the House. ","5c48e0fe":"### Most Effective Members by Community <a id = 'most_effective_crime'><\/a>","6b56603c":"## Louvain Community Detection of Total Network <a id = 'total_network'><\/a>","f46a670d":"## Conclusion <a id = 'conclusion'><\/a>\n\n* When considering a sponsor\/cosponsor network of all bills introduced in the House, the Louvain community detection algorithm identified three distinct communities. Community_0 was highly associated with the members of the Republican Party, while communities 1 and 2 were assciated with the progressive and centrist (New Democrats) wings of the Democratic Party.\n* When considering a sponsor\/cosponsor network of a subset of bills limited to the policy area Crime and Law Enforcement, the Louvain community detection algorithm also identified three communities. Community_0 was again highly associated with member of the Republican party, community_1 was associated with gun control advocates within the Democratic party and community_2 was associated with members of the congressional black caucus. From this we might speculate that communities 1 and 2 have different priorities, community_1 being more concerned with passing gun control measures while community_2 is more concerned with issues more pertinent to African Americans, e.g. criminal justice reform. ","0630f848":"Now that the House of Representatives has been partitioned into different communities, we can take a closer look into the nature of these communities. Here we do some ground work for later use. To quantify a community member's importance within the community, in-degree centrality is calculated. To quantify a community bill's (a bill sponsored by a community member) relative importance, the level of in-community support is measured by the number of in-community cosponsors for the given measure. Also for each community, the number of Democrats, Republicans and Independents within each community are tallied. Community bills introduced\/passed are tallied and community passage percentages calculated as shown below. ","131a081f":"### Representatives Sorted by Number of Bills Passed","6192d8da":"The following two plots explore the distribution of bills by the party of the sponsoring member and the policy area of the bill. The first plot \nis a normalized bar plot representing the percentage of bills introduced in each policy area by party. Democrats are coded in blue and Republicans in orange. The plot is also annotated above each bar with the total number of bills introduced in each policy area, and within each bar-stack with percentages of bills introduced by each party. A line plot is included corresponding to the total number of bills introduced in each policy area. \n\nThe second plot is similar to the first plot only limited to bills which actually passed the House of Representatives. Like the first plot it is normalized, color coded by party and annotated in an identical manner. ","d569ae28":"### Most Central Members by Community <a id = 'most_central'><\/a>","fc53fa37":"Table comprises the five most successful members of each community as measured by the number of bills passed, bill passage rate and number of bills introduced within the given policy area. As can be seen from the table above, the most supported members of a community in terms of in-degree centrality are not always the most successful member in terms of bills actually passed.","81e4b965":"### Democrats\/Republicans Associated with Opposite Communities <a id = 'opposite_communities'><\/a>","a2e1a03b":"## Read and Preprocess Data: <a id = 'preprocess'><\/a>","2199ce65":"Now, lets take a look at the most effective community members. These can be considered the members of each community who have passed the most number of provisions through the House. ","61537c09":"<br>\n\n<code>bills<\/code> : dataframe containing information related to bills and resolutions introduced in the 116th House of Representatives as of the latest update","18569d5e":"### Most Central Members by Community <a id = 'most_central_crime'><\/a>","642c8346":"<code>members<\/code>: dataframe containing information related to members of the 116th House of Representatives","6d140167":"Table of community members sorted in descending order based on the in_degree centrality. These can be seen as the members who recieve the highest levels of support from within their communities for measures they introduce. An interesting pattern at least when considering the members with highest in_degree centrality is that community_1 is highly associated with the left wing Congressional Progressive Caucus, while community_2 is highly associated with the more centrist New Democrat Coalition. For instance, seven of the ten most central members of community_1 are members of the Congressional Progressive Caucus including: David Cicilline, Carolyn Maloney, Judy Chu, Barbara Lee, Rosa Delauro, Peter Defazio and Earl Blumenauer. Similarly, six of the ten most central members of community_2 are members of the centrist New Democrat Coalition including: Eliot Engel, Bradley Schnieder, Gerald Connolly, Kathleen Rice, William Pascrell and Derek Kilmer. Therefore, the Louvain algorithm seems to have identified an ideological split within the Democratic party between more left leaning progressives and those with a more centrist outlook. With respect to community_0 six of the ten most central members are members of Republican Study Committee including Andy Biggs, Vicky Hartzler, Joe Wilson, Steve Scalise, Jason Smith and Doug Collins. \n\n\n\n\n ","70214e34":"Now that we have investigated the total sponsor\/cosponsor network, lets focus on a network limited to bills of a specific policy area, in this case Crime and Law Enforcement. As before, we apply the Louvain community detection algorithm to this limited network and plot. ","f46d114c":"\n\n* Community_0 comprises 204 members: 194 Republicans, 9 Democrats and 1 Independent.\n* Community_1 comprises 191 members: 190 Democrats and 1 Republican.\n* Community_2 comprises 40 members: 35 Democrats and 5 Republicans.\n* Community_2 although the smallest community is the most successful in terms of its rate of passage, with 8 percent of its bills ultimately passing the House. ","d16e067a":"Lists the Republicans associated with Democratic communities 0 and 1. These likely include Republicans who are more liberal or at least work more closely with Democrats on common issues.\n\n* All the Republicans listed score high on the Lugar Bipartisan Index for the 115th congress. For instance, in the order presented by the table they score 27, 11, 5, 2, 34 and 3 respectively. The Lugar bipartison index measures the frequency with which a representative co-sponsors a bill introduced by the opposite party and the frequency with which a representatives\u2019s own bills attract co-sponsors from the opposite party.","ed2bacf8":"## Table of Contents:\n* [Read and Preprocess Data](#preprocess)\n* [EDA](#EDA)\n    * [Bills Introduced\/Passed by Party and Policy Area](#policy_area)\n    * [Bills Introduced\/Passed by Party and Committee Referrals](#committee)\n    * [Committee Membership by Party](#committee_membership)\n* [Create Sponsor\/Cosponsor Networks: Total Bills and Bills Subset by Policy Area](#network)\n* [Louvain Community Detection of Total Network](#total_network)\n    * [Network Plot](#total_network_plot)\n    * [Exploring Communities: Total](#exploring_total)\n    * [Democrats\/Republicans Associated with Opposite Communities](#opposite_communities)\n    * [Most Central Members by Community](#most_central)\n    * [Most Effective Members by Community](#most_effective)\n    * [Most Supported Bills by Community](#most_supported_bills)\n* [Sponsor\/Cosponsor Network: Crime and Law Enforcement](#crime)\n    * [Network Plot](#crime)\n    * [Exploring Communities: Crime and Law Enforcement](#exploring_crime)\n    * [Democrats\/Republicans Associated with Opposite Communities](#opposite_communities_crime)\n    * [Most Central Members by Community](#most_central_crime)\n    * [Most Effective Members by Community](#most_effective)\n    * [Most Supported Bills by Community](#most_supported_bills_crime)\n    * [Bills Passed by Community](#passed_crime)\n* [Conclusion](#conclusion)\n","e466edb5":"Now that we have examined cross-over members who are associated with communities of the opposite party, lets take a look at each communities' core members. These can be seen as members who have received the most in-community support for provisions that they have introduced to the House. The metric of interest is a member's in-community in-degree centrality which has previously been calculated for each community. ","d199a7b7":"## Imports:","2c342e98":"The table above, lists the five most supported bills within a community as measured by the number of in-community cosoponsors.\n\n* With regards to community_0 three of the five bills with the highest levels of community support pertain to new restrictions or regulation pertaining to abortions (H.R. 962, H.R. 784, H.R 490) and one to expanding the rights of individuals with concealed carry qualifications (H.R. 38).\n* With regard to community_1, four of the five most supported bills pertain to increasing gun control measures (H.R. 8, H.R. 1296, H.R. 1236 and H.R. 2708), while the remaining bill pertains to expanding criminal provisions related to animal cruelty.\n* With regard to community_2, two of the most supported bills pertain to criminal justice reform (H.R.125, H.R. 4339), one to defining lynching as a hate crime (H.R. 35), one to authorizing a gun buyback program (H.R. 1279), and one to imposing new restrictions on the transfer of semiautomatic firearms to individual's under 21.\n\nThe table above seems to corroborate our hypothesis that community_1 and community_2 have different focuses, one focused mainly on passing stricter gun control measures the other focused on issues important to African Americans e.g. reducing racial profiling and expanding hate crime laws. While two of the bills introduced by community_2 touch on the gun issue, these measures are more moderate than those proposed by community_1. \n","bed925dc":"## Create Sponsor\/Cosponsor Networks <a id = 'network'><\/a>","f5b03a4c":"\n## EDA <a id = 'EDA'><\/a>\n\n### Bills Introduced and Passed by Party and Policy Area <a id = 'policy_area'><\/a>"}}