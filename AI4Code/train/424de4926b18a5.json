{"cell_type":{"11582d37":"code","a87c3559":"code","909cfe59":"code","68c4851a":"code","d66043e8":"code","85c70b1e":"code","7ee098f2":"code","18764abc":"code","8af6385a":"code","574a9739":"code","644471b3":"code","7e961e11":"code","e425d7c4":"code","8d5718a1":"code","f2010555":"code","3bd131af":"code","f952ccf4":"code","02f74f39":"code","5978926b":"code","398f0bd2":"code","06e4b722":"code","b17d03ef":"code","42f9f41e":"code","06aab58c":"code","f157ad7f":"code","f1a3fbdd":"code","928fbed6":"code","fb319e0c":"code","269fa57e":"code","2fe0448f":"code","40d11649":"code","8dc04d5f":"code","96b1dccc":"code","d759eefe":"code","834af027":"code","e50804a1":"code","962ee49c":"code","e6e1059a":"code","675a5100":"code","62bfb341":"code","ec7ee5af":"code","c2389005":"code","3812f821":"code","8e0379e8":"code","2f42e8b8":"code","a5552390":"code","db1c9ba7":"code","1024b2b4":"code","c60469a9":"code","a6f45111":"code","9e9a93e4":"code","f0c3e303":"code","a91a6224":"code","a45467fd":"code","9ab699d9":"code","5db12f03":"code","e6a96378":"markdown","9e82deba":"markdown","09dae381":"markdown","8f6af785":"markdown","22e2e7a1":"markdown","44ee7bd5":"markdown","e10aa47b":"markdown","52d9b6fb":"markdown","f4a8fea8":"markdown","7feafc6e":"markdown","3f1e01cb":"markdown","d6032944":"markdown","192eeeab":"markdown","c0c933a7":"markdown","6ad98f73":"markdown","5d007801":"markdown","40ade0df":"markdown","dcad9999":"markdown","c5390152":"markdown","ff035a28":"markdown","b745b6f5":"markdown","89d409d8":"markdown","52f1d711":"markdown","b66f9d53":"markdown","bd61f888":"markdown"},"source":{"11582d37":"import os\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\nsns.set()","a87c3559":"! pip install google","909cfe59":"# # \u0441\u043f\u043e\u0441\u043e\u0431 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0434\u0438\u0441\u043a\u0430\n# from google.colab import drive\n# drive.mount('\/content\/drive\/')","68c4851a":"# \u0442\u0443\u0442 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432\u0430\u0448\u0430 \u0440\u0430\u0431\u043e\u0447\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\n#os.chdir('C:\/Users\/vanis\/Downloads\/dls_spring_kaggle_1')","d66043e8":"test_df = pd.read_csv('..\/input\/advanced-dls-spring-2021\/test.csv')\ntrain_df = pd.read_csv('..\/input\/advanced-dls-spring-2021\/train.csv')\ntrain_df.head(5)","85c70b1e":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u043b\u0438 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445\ntest_df.dtypes == train_df[train_df.columns[:-1]].dtypes","7ee098f2":"sns.countplot(train_df.Churn)\nprint('Churn rate:', train_df.Churn.mean())","18764abc":"test_df.describe(include='all')","8af6385a":"num_col = ['ClientPeriod', 'MonthlySpending', 'TotalSpent']\ncat_col = [col for col in test_df.columns if not col in num_col]\nnum_col, cat_col","574a9739":"def draw_countplots(df1, df2, cat_col=cat_col):\n  for col in cat_col:\n    fig, ax = plt.subplots(1, 2, figsize=(10, 4))\n    fig.suptitle(col)\n\n    sns.countplot(col, data=df1, ax=ax[0], order=np.unique(df1[col]))\n    \n    sns.countplot(col, data=df2, ax=ax[1], order=np.unique(df2[col]))","644471b3":"draw_countplots(test_df, train_df) # \u043c\u0438\u043d\u0443\u0441 \u0433\u043b\u0430\u0437\u0430","7e961e11":"draw_countplots(train_df[train_df['Churn'] == 0], train_df[train_df['Churn'] == 1])","e425d7c4":"print(np.sum(train_df['TotalSpent'] == ' '), np.sum(test_df['TotalSpent'] == ' '))\ntrain_df[train_df['TotalSpent'] == ' ']","8d5718a1":"train_df[train_df['ClientPeriod'] == 0]","f2010555":"all(test_df[test_df['TotalSpent'] == ' '] == test_df[test_df['ClientPeriod'] == 0])","3bd131af":"2 \/ test_df.shape[0]","f952ccf4":"clear_df_train = train_df[train_df.ClientPeriod != 0]\nclear_df_train[num_col] = clear_df_train[num_col].apply(lambda el: el.astype('float32'))\nclear_df_test = test_df[test_df.ClientPeriod != 0]\nclear_df_train[num_col] = clear_df_train[num_col].apply(lambda el: el.astype('float32'))\n\nclear_df_train","02f74f39":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\n# \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e \u043c\u0435\u0442\u043e\u0434 k-\u0441\u0440\u0435\u0434\u043d\u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0437\u0434\u0435\u0441\u044c:\n# https:\/\/www.youtube.com\/watch?v=cZ-deRKi1n4&list=PLlb7e2G7aSpRb95_Wi7lZ-zA6fOjV3_l7&index=4\n# \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0431\u044b\u043b \u0432\u044b\u0431\u0440\u0430\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0433\u043e \u0437\u043d\u0430\u044e. \u0415\u0441\u043b\u0438 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0435\u0442\u0435 \u0447\u0442\u043e-\u0442\u043e \n# \u043f\u043e\u043b\u0443\u0447\u0448\u0435, \u0438\u043b\u0438 \u0436\u0435 \u0442\u0443\u0442 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442 \u0438\u043c\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 - \u043f\u0438\u0448\u0438\u0442\u0435 \u0432 \u0442\u0433)","5978926b":"# \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u044b \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f, \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e \u0431\u0435\u0437\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u044b\u043c, \u0435\u0441\u043b\u0438 \u043c\u044b \u043d\u0435 \u0437\u0430\u0441\u043a\u0435\u0439\u043b\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\nscaler = StandardScaler()\ncluster_train = scaler.fit_transform(clear_df_train[num_col].astype('float32'))\ncluster_test = scaler.transform(clear_df_test[num_col].astype('float32'))\ncluster_test[2]","398f0bd2":"K = np.arange(2, 12) # \u043f\u0435\u0440\u0435\u0431\u043e\u0440 n_clusters\n\n# \u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u043e\u043c\u0435\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043e\u043f\u044f\u0442\u044c \u0436\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u044f \u0442\u0430\u043a \u0440\u0435\u0448\u0438\u043b\nmodels = [KMeans(n_clusters=k).fit(cluster_train) for k in K]\ndists = [model.inertia_ for model in models]\n\nplt.plot(K, dists, marker='*')\nplt.vlines(5, ymin=1000, ymax=7000, colors=['r'], linestyles=['dashed'])\nplt.vlines(8, ymin=1000, ymax=7000, colors=['g'], linestyles=['dashed'])","06e4b722":"cl_model = KMeans(n_clusters=8, random_state=17)\ncl_model.fit(cluster_train)\n\nclear_df_train['cluster8'] = cl_model.labels_\nclear_df_train.groupby(by='cluster8')[num_col + ['Churn']].mean()","b17d03ef":"clear_df_train.groupby(by='cluster8').size()","42f9f41e":"# from cluster ~0.02\ntrain_df.TotalSpent.replace(' ', 1320, inplace=True)\ntest_df.TotalSpent.replace(' ', 1320, inplace=True)\n\ntrain_df.TotalSpent = train_df.TotalSpent.astype('float32')\ntest_df.TotalSpent = test_df.TotalSpent.astype('float32')\n\n# from cluster ~0.02\ntrain_df.ClientPeriod.replace(0, 54, inplace=True)\ntest_df.ClientPeriod.replace(0, 54, inplace=True)\n\n# \u0440\u0435\u0448\u0438\u043b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f \u0434\u0432\u0430\u0436\u0434\u044b)\nsum(test_df.ClientPeriod == 0), sum(train_df.ClientPeriod == 0),\\\n sum(test_df.TotalSpent == ' '), sum(train_df.TotalSpent == ' '), \\\n train_df.TotalSpent.dtype","06aab58c":"train_df[num_col] = scaler.transform(train_df[num_col])\ntest_df[num_col] = scaler.transform(test_df[num_col])\n\ncl_model = KMeans(n_clusters=8)\ntrain_df['cluster'] = cl_model.fit(train_df[num_col]).labels_\ntest_df['cluster'] = cl_model.predict(test_df[num_col])\n\ncat_col += ['cluster']","f157ad7f":"def log_scale(x):\n  return np.log1p(x) - min(x)","f1a3fbdd":"def draw_hists(df1, df2, num_col=num_col, bins=60, logscale=False):\n  for col in num_col:\n    if logscale:\n      df1[col] = log_scale(df1[col])\n      df2[col] = log_scale(df2[col])\n    fig, ax = plt.subplots(1, 2, figsize=(10, 4))\n    fig.suptitle(col)\n    ax[0].hist(df1[col], bins=bins)\n    ax[1].hist(df2[col], bins=bins)","928fbed6":"draw_hists(train_df, test_df)","fb319e0c":"draw_hists(train_df[train_df.Churn==0], train_df[train_df.Churn==1], bins=30)","269fa57e":"plt.hist(log_scale(train_df[train_df.Churn==0]['TotalSpent']), bins=60); # \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043b\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435?","2fe0448f":"def draw_boxplots(df, target='Churn', num_col=num_col):\n  fig, ax = plt.subplots(1, 3, figsize=(20, 6))\n\n  for i, col in enumerate(num_col):\n    sns.boxplot(x='Churn', y=col, data=df, ax=ax[i])","40d11649":"draw_boxplots(train_df)","8dc04d5f":"def add_quantile_features(df, feature, border1=0.1, border2=0.9):\n    '''returns new feature name'''\n    \n    df[feature + 'Quantile'] = np.ones(df.shape[0]).astype('int')\n    \n    df[feature + 'Quantile'][df[feature] < np.quantile(df[feature], border1)] = 0\n    df[feature + 'Quantile'][df[feature] > np.quantile(df[feature], border2)] = 2\n    \n    return feature + 'Quantile'","96b1dccc":"for col in num_col:\n    #print(col)\n    add_quantile_features(train_df, col)\n    add_quantile_features(test_df, col)\n    cat_col += [col + 'Quantile']\n    \ncat_col","d759eefe":"from sklearn.preprocessing import PolynomialFeatures","834af027":"poly = PolynomialFeatures(degree=2, include_bias=False)\ntrain_poly = pd.DataFrame(data=poly.fit_transform(train_df[num_col]), columns=poly.get_feature_names())\ntest_poly = pd.DataFrame(data=poly.transform(test_df[num_col]), columns=poly.get_feature_names())","e50804a1":"train_poly.head()","962ee49c":"# \u0443\u0436\u0435 \u0438\u043c\u0435\u0435\u043c \u0444\u0438\u0447\u0438 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f\ntrain_poly.drop(['x0', 'x1', 'x2'], axis=1, inplace=True)\ntest_poly.drop(['x0', 'x1', 'x2'], axis=1, inplace=True)","e6e1059a":"train_df = pd.concat((train_df, train_poly), axis=1)\ntest_df = pd.concat((test_df, test_poly), axis=1)","675a5100":"num_col += ['x0^2', 'x0 x1',\t'x0 x2', 'x1^2', 'x1 x2',\t'x2^2']\ntrain_df[num_col].head()","62bfb341":"# scaling \nscaler = StandardScaler()\n\ntrain_df[num_col] = scaler.fit_transform(train_df[num_col])\ntest_df[num_col] = scaler.fit_transform(test_df[num_col])\n\ny = train_df['Churn']\ntrain_df.drop('Churn', axis=1, inplace=True)","ec7ee5af":"test_df","c2389005":"# \u043f\u043e\u0447\u0435\u043c\u0443-\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 get_dummies \u043d\u0435 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043b \u043a\u043e\u043b\u043e\u043d\u043a\u0443 cluster\ndef add_dummies(df, cat_col=cat_col):\n  for col in cat_col:\n    df = pd.concat((df, pd.get_dummies(df[col], drop_first=True)), axis=1)\n    df.drop(col, axis=1, inplace=True)\n\n  return df","3812f821":"train_df_with_dummies = add_dummies(train_df)\ntest_df_with_dummies = add_dummies(test_df)\ntrain_df_with_dummies.head()","8e0379e8":"def write_to_submission_file(preds, file_name, target='Churn', index='Id'):\n    \"\"\"\u0415\u0441\u043b\u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0447\u0442\u043e-\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0435\u0435\u0441\u044f \u043e\u0442 (1761, 1), \u0442\u043e \u0447\u0442\u043e-\u0442\u043e \u044f\u0432\u043d\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a\"\"\"\n    preds = pd.DataFrame(data=preds, columns=[target], index=np.arange(len(preds)))\n    print(preds.shape)\n    preds.to_csv(file_name, index_label=index)","2f42e8b8":"! pip install catboost","a5552390":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV \nfrom catboost import CatBoostClassifier\nfrom sklearn.model_selection import train_test_split","db1c9ba7":"def grid_search(model, param_grid, X, y, cv=5, n_jobs=-1, verbose=False, scoring='roc_auc'):\n  model = GridSearchCV(model, param_grid=param_grid,\n                       cv=cv, n_jobs=n_jobs, verbose=verbose, scoring=scoring)\n  \n  model.fit(X, y)\n  return model.best_estimator_, model.best_score_","1024b2b4":"lr_params = {\n  'penalty': ['l1', 'l2', 'elasticnet', None], \n  'class_weight': [None, 'balanced'], \n  'C': [0.01, 0.05, 0.1, 0.5, 1, 2, 3, 4, 5, 10, 20]\n}","c60469a9":"%%time \n\nlr_estimator, lr_score = grid_search(LogisticRegression(), \n                                     lr_params, train_df_with_dummies, y)","a6f45111":"lr_estimator, lr_score","9e9a93e4":"preds = lr_estimator.predict_proba(test_df_with_dummies)[:, 1]\nwrite_to_submission_file(preds, 'logit_subm.csv')","f0c3e303":"train_df.head()","a91a6224":"X_train, X_test, y_train, y_test = train_test_split(train_df, y)\nX_test.head()","a45467fd":"# https:\/\/neerc.ifmo.ru\/wiki\/index.php?title=CatBoost\ncat_model = CatBoostClassifier(\n   bagging_temperature=1,\n   random_strength=1,\n   thread_count=3,\n   iterations=500,\n   l2_leaf_reg = 4.0, \n   learning_rate = 0.07521709965938336,\n   random_seed=63,\n   od_type='Iter',\n   od_wait=20,\n   custom_loss=['AUC', 'Accuracy'],\n   use_best_model=True\n)","9ab699d9":"cat_model.fit(\n   X_train, y_train,\n   cat_features=cat_col,\n   eval_set=(X_test, y_test),\n   logging_level='Silent',\n   plot=True\n)","5db12f03":"# lb kaggle - 0.85346\n\ncat_preds = cat_model.predict_proba(test_df)[:, 1]\nprint(cat_preds.shape)\nwrite_to_submission_file(cat_preds, 'catboost.csv')","e6a96378":"\u041e\u043f\u044f\u0442\u044c \u0436\u0435, \u043d\u0430 \u0433\u043b\u0430\u0437, test \u0438 train \u043d\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \"\u043f\u043b\u043e\u0445\u043e\" \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b. \u041f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0438\u043c\u043e\u0434\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u0442\u0440\u0435\u0442\u044c\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0442\u0430\u043d\u0435\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u043f\u0440\u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438","9e82deba":"\u041a\u0441\u0442\u0430\u0442\u0438, \u0438\u043c\u0435\u043d\u043d\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0432 \u044d\u0442\u0438\u0445 \u044f\u0449\u0438\u043a\u0438 \u0441 \u0443\u0441\u0430\u043c\u0438 \u043f\u043e\u0434\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438 \u043c\u0435\u043d\u044f \u043d\u0430 \u043c\u044b\u0441\u043b\u044c, \u0447\u0442\u043e \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u0432 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n\u041d\u0443 \u0430 \u0432\u0435\u0446\u043b\u043e\u043c \u043f\u043e \u043f\u0430\u043b\u0430\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u043b \u0442\u0430\u043a\u0438\u0435 \u0442\u0435\u043d\u0434\u0435\u043d\u0446\u0438\u0438:\n- \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 ClientPeriod, \u0442\u0435\u043c \u043c\u0435\u043d\u044c\u0448\u0435 churn rate, \u043d\u043e \u0435\u0441\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b\n- \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 MonthySpending, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 churn rate\n- \u0432 TotalSpent \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u0447\u0442\u043e \u043d\u0435 \u0434\u0430\u0435\u0442 \u043d\u0430\u043c \u043e\u0441\u043e\u0431\u043e \u0441\u0443\u0434\u0438\u0442\u044c \u043e churn rate \u043f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0443","09dae381":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","8f6af785":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043b\u044c\u0448\u0435","22e2e7a1":"## Logistic Regression","44ee7bd5":"wow, max_roc_auc ~ 0.859","e10aa47b":"\u0412\u0438\u0434\u0438\u043c 3 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 *\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435*\n\n---","52d9b6fb":"- \u0412\u0438\u0434\u0438\u043c \u043f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0443, \u0447\u0442\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c 5, (\u0435\u0441\u043b\u0438 \u0432\u043a\u0440\u0430\u0442\u0446\u0435, \u0442\u043e \u0433\u0440\u0430\u0444\u0438\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043c\u0438\u043d\u0438\u0441\u0442\u0430\u044f \u043e\u0441\u044b\u043f\u044c, \u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u043c\u044b \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u0443\u043c\u043c\u0443 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432. \u0415\u0441\u043b\u0438 \u043c\u044b \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u043b\u0438 \u043a\u043e\u043b-\u0432\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u043d\u0430 1, \u0430 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u043b\u043e\u0441\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e (\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0443\u0433\u043e\u043b \u0438\u043b\u0438 dy\/dx), \u0437\u043d\u0430\u0447\u0438\u0442 \u0432 \u0434\u043e \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440 \u0438\u043c\u0435\u043b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u044f\u0449\u0438\u0435\u0441\u044f \u0434\u0430\u043b\u0435\u043a\u043e \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 n_clusters)\n\n- \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u0435 n_clusters \u043c\u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u043b\u043e\u0441\u044c \u0437\u043d\u0430\u0435\u043d\u0438\u0435 8, \u043f\u043e\u0442\u043c\u043e\u0443 \u0447\u0442\u043e \u043e\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0435\u0441\u0442\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \n\n- P.S. \u0415\u0441\u043b\u0438 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u044f \u043d\u0435 \u043f\u0440\u0430\u0432, \u0438 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u0432\u0441\u0435 \u0436\u0435 \u043d\u0435 5 \u0438 \u043d\u0435 8, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \"\u0440\u0430\u0441\u0442\u044f\u043d\u0443\u0442\u044c\" \u0433\u0440\u0430\u0444\u0438\u043a, \u0438\u0437\u043c\u0435\u043d\u0438\u0432 K = np.arange(2, your_value>=12)","f4a8fea8":"\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0435\u043c\u0443, \u0437\u0430\u043c\u0435\u0442\u0435\u0432\u0448\u0435\u043c\u0443 \u043e\u0448\u0438\u0431\u043a\u0443: \u0437\u0434\u0435\u0441\u044c \u043c\u044b \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043d\u043e\u043c\u0435\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c \u0438\u0437 train_df, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u043f\u043e\u0434\u0435\u043b\u044e \u043d\u0430 train \u0438 val. \u0422\u0430\u043a \u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435\u043b\u044c\u0437\u044f \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0443\u0442\u0435\u0447\u043a\u0430 \u0437\u043d\u0430\u043d\u0438\u0439 \u043e \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u0438 (D) \u0438 \u043c\u0430\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438 (E).","7feafc6e":"\u0415\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 public \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434, \u0442\u043e \u0443\u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0431\u043e\u0440\u044c\u0431\u0430 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0438\u0434\u0435\u0442 \u0437\u0430 \u0442\u0440\u0435\u0442\u0438\u0439 \u0437\u043d\u0430\u043a \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043a\u0430\u043a-\u0442\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u0441 \u044d\u0442\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430, \u043e\u0442\u043d\u0435\u0441\u0442\u0438 \u0438\u0445 \u043a \u0442\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 churn.","3f1e01cb":"## \u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \n\n\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043c \u0438\u0437 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430, \u0447\u0442\u043e \u043c\u044b \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 churn_rate \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0434\u0432\u0443\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","d6032944":"\u0422\u0443\u0442 \u0443\u0436\u0435 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u043f\u043e\u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0435\u0435. \u0412\u0441\u0435 \u0432\u0441\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043a\u0440\u043e\u043c\u0435 Sex \u0438 HasPhoneService (\u0447\u0442\u043e \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0437\u0433\u043b\u044f\u0434) \u043d\u0435 \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 Churn, \u0438 \u0442\u0443\u0442 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c 2 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u0441 \u0438 \u0431\u0435\u0437 \u044d\u0442\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445. \u041d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u044f \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u0436\u0435 \u043d\u0435 \u0431\u0443\u0434\u0443. \u0412 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043d\u0430 \u043a\u0430\u0433\u043b\u0435 (\u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u043f\u0430\u043b \u0434\u043e\u0441\u0442\u0443\u043f) \u044d\u0442\u043e \u043d\u0435 \u0434\u0430\u043b\u043e \u043e\u0441\u043e\u0431\u043e \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 (4\u0439 \u0437\u043d\u0430\u043a \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439), \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u0435\u0435 \u0431\u044b\u043b\u043e \u0431\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u043f\u0440\u0438 \u043b\u043e\u0433. \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438","192eeeab":"## CatBoost","c0c933a7":"\u041c\u043e\u0436\u043d\u043e \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u044f \u0432 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0438 ClientPeriod \u0438 MonthlySpent, \u0432\u044b\u0432\u043e\u0434\u044b \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u0438\u0435 \u0436\u0435, \u043a\u0430\u043a \u0438 \u0432 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u043e\u043c \u0430\u043d\u0430\u043b\u0438\u0437\u0435, \u0438 \u043c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a\u0430\u043a\u0438\u0435-\u043b\u0438\u0431\u043e \u0432\u044b\u0432\u043e\u0434\u044b \u043b\u0443\u0447\u0448\u0435 \u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a\u0440\u0430\u0437-\u0442\u0430\u043a\u0438 \u043f\u043e \u043d\u0435\u043c\u0443, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0447\u0435\u043d\u044c \u0433\u0440\u044f\u0437\u043d\u044b\u0435 (\u043c\u043d\u043e\u0433\u043e \u0448\u0443\u043c\u0430, \u0431\u0438\/(\u043c\u0443\u043b\u044c\u0442\u0438)\u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0431\u0435\u0441\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f)","6ad98f73":"\u0412\u044b\u0431\u0440\u043e\u0441\u044b","5d007801":"### \u041a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437","40ade0df":"## Preprocessing","dcad9999":"## Models\n\u0422\u0443\u0442 \u044f \u043e\u043f\u0438\u0448\u0443 2 \u0441\u0430\u043c\u044b\u0445 \u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443 \u043c\u0435\u043d\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438\u0441\u044c","c5390152":"\u0422\u0443\u0442 \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043a\u0430\u043a\u043e\u0439-\u043d\u0438\u0431\u0443\u0434\u044c A\\B \u0442\u0435\u0441\u0442 \u043c\u0435\u0436\u0434\u0443 test \u0438 train, \u0430 \u043c\u043e\u0436\u043d\u043e \u0438 \u043d\u0430 \u0433\u043b\u0430\u0437 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u043e\u0442\u043b\u0438\u0447\u0438\u0439 \u0432 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043d\u0435\u0442) \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \"Churn\"","ff035a28":"\u0412\u043e\u0442 \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0437\u043d\u0430\u0435\u043c, \u0447\u0442\u043e \u0443 \u0432\u0441\u0435\u0445 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 ClientPeriod \u0440\u0430\u0432\u0435\u043d 0. \u041c\u043e\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0430\u043a\u043e\u0432\u043e: \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u043e \u0432\u0440\u043d\u043e\u0432\u044c \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u044b, \u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0442\u0435\u043b\u0435\u043a\u043e\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0430\u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043b\u0430 \u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0435, \u0434\u0430\u0436\u0435 0 (\u043a\u0430\u043a ClientPeriod)\n\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, Churn \u0443 \u044d\u0442\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0440\u0430\u0432\u0435\u043d 0, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u0443\u0441\u043f\u0435\u043b \u0435\u0449\u0435 \u0443\u0439\u0442\u0438. \u041b\u043e\u0433\u0438\u0447\u043d\u043e \u0431\u044b \u0431\u044b\u043b\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0438\u0445 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u043e\u0434\u043d\u0430\u043a\u043e \n1. \u041e\u043d\u0438 \u0435\u0441\u0442\u044c \u0438 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\n2. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0438 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0438\u0437 \u043d\u0438\u0445 \u0442\u0430\u043a\u0438\u043c\u0438 \u0438 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f (\u0432\u0440\u044f\u0434 \u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u043e\u043b)\n\n\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0442\u0435\u043c \u0431\u043e\u043b\u0435\u0435 \u043d\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u0442\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u0430\u043b\u0435\u043a\u043e \u043e\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e, \u0438 \u0432 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0432\u0440\u0435\u0434\u0438\u0442 \u043d\u0430\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0440\u0435\u0448\u0438\u043b \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u044d\u0442\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d \u043d\u0438\u0436\u0435.","b745b6f5":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0430\u043a\u0436\u0435 \u043d\u0430 \u0431\u043e\u043a\u0441\u043f\u043b\u043e\u0442\u044b","89d409d8":"### \u0418\u043d\u0442\u0435\u0440\u043f\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\n\u0434\u0435\u0440\u0436\u0438\u043c \u0432 \u0433\u043e\u043b\u043e\u0432\u0435, \u0447\u0442\u043e churn rate \u043f\u043e \u0432\u044b\u0431\u043e\u0440\u043a\u0435 0.25:\n- \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u0441 \u0431\u043e\u043b\u044c\u0448\u0438\u043c churn_rate ~ 0.63. \u0422\u0443\u0442 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0443\u044e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c: \u041e\u0427\u0415\u041d\u042c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 ClientPeriod \u0438 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0439 MonthlySpent. \u041e\u0431\u044a\u044f\u0441\u043d\u0438\u0442\u044c \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0442\u0430\u043a: \u0435\u0441\u043b\u0438 \u0432\u043d\u043e\u0432\u044c \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0435\u0434\u0436\u0435\u043c\u0435\u0441\u044f\u0447\u043d\u0443\u044e \u043f\u043b\u0430\u0442\u0443, \u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u0441 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0434\u043e\u043b\u0435\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043a\u043e\u043d\u043a\u0443\u0440\u0435\u043d\u0442\u043e\u0432\n- \u0433\u0440\u0443\u043f\u043f\u0430 \u0441 churn_rate ~0.17 - ClientPeriod \u043c\u0430\u043b, \u043d\u043e \u043d\u0435 \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0430 \u0432\u043e\u0442 MonthlySpent \u041e\u0427\u0415\u041d\u042c \u043c\u0430\u043b\u0430. \u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f: \u0432\u043d\u043e\u0432\u044c \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b\u0438 \u0441\u043a\u0438\u0434\u043a\u0443\/\u0430\u043a\u0446\u0438\u044e \u043d\u0430 \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433, \u044d\u0442\u043e \u0438\u0445 \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u043b\u043e, \u0438 \u043e\u043d\u0438 \u0440\u0435\u0448\u0438\u043b\u0438 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u0443 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430\n- \u0433\u0440\u0443\u043f\u043f\u0430 \u0441 churn rate ~0.31. \u041d\u043e\u0432\u0438\u0447\u043a\u0438 (period ~11), \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b\u0438 \u043e\u0441\u043e\u0431\u043e \u0432\u044b\u0433\u043e\u0434\u043d\u044b\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 (monthly spent ~55), \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442\u0442\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u0440\u0430\u0437\u044b \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0448\u0435, \u0447\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u043e \u043f\u0430\u043b\u0430\u0442\u0435\n- churn rate ~ 0.02 - \u0441\u0442\u0430\u0440\u0438\u0447\u043a\u0438 \u0441 \u043d\u0438\u0437\u043a\u043e\u0439 \u0430\u0431\u043e\u043d\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u043f\u043b\u0430\u0442\u043e\u0439\n- churn rate ~ 0.07 - c\u0442\u0430\u0440\u0438\u0447\u043a\u0438 \u0441\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0430\u0431\u043e\u043d\u0435\u043d\u0441\u0442\u043a\u043e\u0439 \u043f\u043b\u0430\u0442\u043e\u0439 \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u043e \u043e\u0434\u0438\u043d \u043a\u043b\u0430\u0441\u0442\u0435\u0440 \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043f\u0443\u043d\u043a\u0442\u043e\u043c, \u043f\u0440\u043e\u0441\u0442\u043e \u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u043b n_clusters, \u0430 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0443\u0436\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u0443, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0435 \u043c\u043e\u0433\u0443 \u0431\u043e\u043b\u044c\u0448\u0435 \u0441\u0430\u0431\u043c\u0438\u0442\u0438\u0442\u044c) \n- churn rate ~ 0.10 - \u043e\u0447\u0435\u043d\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0442\u0435\u0440. \u042d\u0442\u043e \u0441\u0442\u0430\u0440\u044b\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u044b, \u0432\u0435\u0440\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0443 \u043d\u0438\u0445 \u0441\u0430\u043c\u0430\u044f \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043e\u0431\u043e\u043d\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u043f\u043b\u0430\u0442\u0430 \u0432 \u043c\u0435\u0441\u044f\u0446. \u0422\u0443\u0442 2 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430: \u043b\u0438\u0431\u043e \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \u0440\u0435\u0448\u0438\u043b\u0430 \u043d\u0430\u0436\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0438\u0445 \u043a\u043e\u043d\u0441\u0435\u0440\u0432\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0432\u0437\u0433\u043b\u044f\u0434\u0430\u0445, \u043b\u0438\u0431\u043e \u0432 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u0445\u043e\u0434\u0438\u0442 \u0441\u0440\u0430\u0437\u0443 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0443\u0441\u043b\u0443\u0433(\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0432\u0441\u0435\u0439 \u0441\u0435\u043c\u044c\u0438 \u0438\u043b\u0438 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438)\n\n\u042f \u0440\u0435\u0448\u0438\u043b \u043e\u0442\u043d\u0435\u0441\u0442\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u043a \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0443 ~ 0.02 \u0442.\u043a \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0441\u0435\u0433\u043e \u0443 \u0432\u0441\u0435\u0445 \u044d\u0442\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0432 \u0442\u0435\u0441\u0442\u0435 churn \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0432\u0435\u043d 0.","52f1d711":"\u0414\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0435 \u0432 10% \u0441\u0430\u043c\u044b\u0445 \u0431\u043e\u043b\u044c\u0448\u0438\u0445\/\u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0445 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 \u043f\u043e \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c","b66f9d53":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445","bd61f888":"\u0423 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 TotalSpent ClientPeriod \u0440\u0430\u0432\u0435\u043d 0. \u0421\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435? \n\u041d\u0435 \u0434\u0443\u043c\u0430\u044e..."}}