{"cell_type":{"50c82d64":"code","8fc4472b":"code","8382537d":"code","b0e04511":"code","181c2c2d":"code","33ecdcba":"code","1c292963":"code","ce1e9e88":"code","aaaaa1f8":"markdown","f5a06d55":"markdown","149ae9f0":"markdown","914c5a7b":"markdown","9881380c":"markdown","12e2d895":"markdown","1b132087":"markdown","72df18cc":"markdown","b63044ef":"markdown","125a26a1":"markdown","3b827dc5":"markdown"},"source":{"50c82d64":"import pandas as pd\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option('max_rows', 5)","8fc4472b":"reviews.price.dtype","8382537d":"reviews.dtypes","b0e04511":"reviews.points.astype('float64')","181c2c2d":"reviews.index.dtype","33ecdcba":"reviews[reviews.country.isnull()]","1c292963":"reviews.region_2.fillna(\"Unknown\")","ce1e9e88":"reviews.taster_twitter_handle.replace(\"@kerinokeefe\", \"@kerino\")","aaaaa1f8":"A `DataFrame` or `Series` index has its own `dtype`, too:","f5a06d55":"`fillna` supports a few strategies for imputing missing values. For more on that read [the official function documentation](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.fillna.html).\n\nAlternatively, we may have a non-null value that we would like to replace. For example, suppose that since this dataset was published, reviewer Kerin O'Keefe has changed her Twitter handle from `@kerinokeefe` to `@kerino`. One way to reflect this in the dataset is using the `replace` method:","149ae9f0":"Replacing missing values is a common operation.  `pandas` provides a really handy method for this problem: `fillna`. `fillna` provides a few different strategies for mitigating such data. For example, we can simply replace each `NaN` with an `\"Unknown\"`:","914c5a7b":"# Data types and missing data reference\n\nThis is the reference section of the \"Data types and missing data\" section of the tutorial.\n\nIn this short section we will look at two inter-related concepts, data types and missing data. This section draws from the [Intro to data structures](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/dsintro.html) and [Working with missing data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/missing_data.html) sections of the comprehensive official tutorial.","9881380c":"Or we could fill each missing value with the first non-null value that appears sometime after the given record in the database. This is known as the backfill strategy:","12e2d895":"The `replace` method is worth mentioning here because it's handy for replacing missing data which is given some kind of sentinel value in the dataset: things like `\"Unknown\"`, `\"Undisclosed\"`, `\"Invalid\"`, and so on.","1b132087":"## Data types\n\nThe data type for a column in a `DataFrame` or a `Series` is known as the `dtype`.\n\nYou can use the `dtype` property to grab the type of a specific column:","72df18cc":"## Missing data\n\nEntries missing values are given the value `NaN`, short for \"Not a Number\". For technical reasons these `NaN` values are always of the `float64` dtype.\n\n`pandas` provides some methods specific to missing data. To select `NaN` entreis you can use `pd.isnull` (or its companion `pd.notnull`). This is meant to be used thusly:","b63044ef":"`pandas` also supports more exotic data types: categorical data and timeseries data. Because these data types are more rarely used, we will omit them until a much later section of this tutorial.","125a26a1":"Alternatively, the `dtypes` property returns the `dtype` of _every_ column in the dataset:","3b827dc5":"Data types tell us something about how `pandas` is storing the data internally. `float64` means that it's using a 64-bit floating point number; `int64` means a similarly sized integer instead, and so on.\n\nOne peculiarity to keep in mind (and on display very clearly here) is that columns consisting entirely of strings do not get their own type; they are instead given the `object` type.\n\nIt's possible to convert a column of one type into another wherever such a conversion makes sense by using the `astype` function. For example, we may transform the `points` column from its existing `int64` data type into a `float64` data type:"}}