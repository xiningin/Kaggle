{"cell_type":{"82eb0cc1":"code","fc90eb32":"code","c6d9c2c7":"code","c540b30b":"code","f0bffaa2":"markdown"},"source":{"82eb0cc1":"import os\n\nimport cudf\nimport cupy as cp\nimport janestreet\nimport xgboost as xgb","fc90eb32":"# Load and preprocess CSV with cuDF\ntrain = cudf.read_csv('\/kaggle\/input\/jane-street-market-prediction\/train.csv')\ntrain = train.query('weight > 0')\ntrain['action'] = (train['resp'] > 0.002).astype('int')\nfeatures = [c for c in train.columns if 'feature' in c]\nX_train = train.loc[:, features]\ny_train = train.loc[:, 'action']","c6d9c2c7":"# Prepare data and train xgboost on GPU\nparams = dict(\n    objective='binary:logistic',\n    max_depth=11,\n    learning_rate=0.05,\n    subsample=0.9,\n    colsample_bytree=0.7,\n    random_state=42,\n    tree_method='gpu_hist')\ndtrain = xgb.DMatrix(X_train, y_train)\nclf = xgb.train(params, dtrain, num_boost_round=500)","c540b30b":"# Initialize the environment and submit\nenv = janestreet.make_env()\nfor (test_df, pred_df) in env.iter_test():\n    dtest = xgb.DMatrix(test_df.loc[:, features])\n    pred_df.action = clf.predict(dtest).round().astype(int)\n    env.predict(pred_df)","f0bffaa2":"Modified from this excellent notebook: \nhttps:\/\/www.kaggle.com\/hamditarek\/market-prediction-xgboost-with-gpu-fit-in-1min"}}