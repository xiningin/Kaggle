{"cell_type":{"2666c151":"code","192ea9ca":"code","869fd7b1":"code","2509e65b":"code","11722fe0":"code","df07093a":"code","c5046e40":"code","948f200d":"code","3aa36dd8":"code","4ab39f99":"code","c68e7575":"code","b8c8005c":"code","3ac45e08":"code","6240f413":"code","fdda564d":"code","34fa69a3":"code","18f597ae":"code","4a7bde27":"code","0cef5054":"code","6b06bb44":"code","2eab1395":"code","d1144d64":"code","d771c39d":"code","63e58ba4":"code","4403055f":"code","c3067f77":"code","d483de21":"code","1ee309b9":"code","f12a0bcc":"code","cb0d3f37":"code","d54b147c":"code","382c06dd":"markdown","7cadb8e5":"markdown","d5503ba7":"markdown","8963597c":"markdown"},"source":{"2666c151":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","192ea9ca":"vgsales=pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\",sep=\",\")","869fd7b1":"df=vgsales.copy()","2509e65b":"df.head()","11722fe0":"df.info()","df07093a":"df.Year=df.Year.astype(float)","c5046e40":"df.isnull().sum()","948f200d":"df.dropna(inplace=True)","3aa36dd8":"df.isnull().sum()","4ab39f99":"df.Name.value_counts()","c68e7575":"df.Publisher.value_counts()","b8c8005c":"df.Platform.value_counts() # 31","3ac45e08":"df.Year.value_counts()","6240f413":"df.Genre.value_counts() # 12","fdda564d":"genre_list=list(df.Genre.unique())\nyear_list2=list(df.Year.unique())\npublisher_list= list(df.Publisher.unique())\nplatform_list=list(df.Platform.unique())\nname_list=list(df.Name.unique())","34fa69a3":"year_list2","18f597ae":"data1=pd.DataFrame({\"Release_Year\":year_list,\"Num_of_released_game\":df.Year.value_counts().values})","4a7bde27":"data1.sort_values(by=\"Release_Year\",ascending=True,inplace=True)\ndata1.reset_index(drop=True)","0cef5054":"plt.figure(figsize=(15,15))\nsns.pointplot(x='Release_Year',y='Num_of_released_game',data=data1,color='green',alpha=0.8)\nplt.xticks(rotation=90)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Game Released \")\nplt.title(\"Number of Released Game by Year\")\nplt.grid()\n","6b06bb44":"sales_mean=[]\n\nfor i in year_list:\n    x=df[df[\"Year\"]==i]\n    sales_mean.append(x.Global_Sales.sum())\n    \ndata2=pd.DataFrame({\"Year\":year_list,\"Global_Sales\":sales_mean})\ndata2.sort_values(by=\"Year\",ascending=True,inplace=True)\ndata2.reset_index(drop=True)\n\n\nplt.figure(figsize=(15,15))\nsns.pointplot(x='Year',y='Global_Sales',data=data2,color='red',alpha=0.8)\nplt.xticks(rotation=90)\nplt.xlabel(\"Year\")\nplt.ylabel(\" Global Sales in million \")\nplt.title(\"Global Sales in million by Year\")\nplt.grid()\n\n\n\n    ","2eab1395":"labels = df.Genre.value_counts().index\ncolors = ['blue','red','yellow','green','brown',\"purple\",\"pink\",\"gray\",\"orange\",\"darkblue\",\"lime\",\"cyan\"]\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = df.Genre.value_counts().values\n\n# visual\nplt.figure(figsize = (10,10))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Preference of Game Genre',color = 'blue',fontsize = 15)","d1144d64":"plt.figure(figsize=(20,20))\nsns.barplot(x=df.Publisher.value_counts().index[:20],y=df.Publisher.value_counts().values[:20],data=df)\nplt.xticks(rotation=90)\nplt.xlabel(\"Name of Game Company\")\nplt.ylabel(\"Number of released game\")\nplt.title(\"Number of released game from Game companies Top 20\",color=\"blue\",fontsize=15)","d771c39d":"name_lenght=[]\n\nfor i in name_list:\n    name_lenght.append(len(i))\n    \n\ndata3=pd.DataFrame({\"Game_Name\":name_list[:25],\"Name_Lenght\":name_lenght[:25]})\ndata3.sort_values(by=\"Name_Lenght\",ascending=False,inplace=True)\ndata3.reset_index(drop=True,inplace=True)\n\nplt.figure(figsize=(15,15))\nsns.barplot(x=\"Game_Name\",y=\"Name_Lenght\",data=data3,palette = sns.cubehelix_palette(len(x)))\nplt.xticks(rotation=90)\nplt.xlabel(\"Game Name\")\nplt.ylabel(\"Name Lenght\")\nplt.title(\"Game's name lenght Top 25\",fontsize=15,color=\"blue\")","63e58ba4":"year_list=year_list.sort()","4403055f":"\n\nglobal_sales = []\neu_sales = []\njp_sales = []\nna_sales = []\nother_sales = []\nfor i in year_list2:\n    x = df[df['Year']==i]\n    global_sales.append(sum(x.Global_Sales))\n    eu_sales.append(sum(x.EU_Sales)) \n    jp_sales.append(sum(x.JP_Sales))\n    na_sales.append(sum(x.NA_Sales))\n    other_sales.append(sum(x.Other_Sales)) \n    \n    \n#Visualization\n\nf,ax = plt.subplots(figsize = (20,20))\nsns.barplot(x=year_list2,y=global_sales,color='purple',alpha = 0.5,label='Global Sales' ) # alpha =saydaml\u0131k\nsns.barplot(x=year_list2,y=na_sales,color='blue',alpha = 0.7,label='Na Sales')\nsns.barplot(x=year_list2,y=eu_sales,color='cyan',alpha = 0.6,label='EU Sales')\nsns.barplot(x=year_list2,y=jp_sales,color='yellow',alpha = 0.6,label='JP Sales')\nsns.barplot(x=year_list2,y=other_sales,color='red',alpha = 0.6,label='Other Sales')\nplt.xticks(rotation=90)\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu yani sa\u011f alttaki kutucu\u011fum yeri ve \u015fekli\nax.set(xlabel='Year', ylabel='Number of Sales',title = \"Number of Sales in million by Year\")","c3067f77":"sns.lmplot(x=\"Global_Sales\", y=\"EU_Sales\", data=df)\nplt.show()","d483de21":"sns.lmplot(x=\"JP_Sales\", y=\"EU_Sales\", data=df)\nplt.show()","1ee309b9":"sns.jointplot(\"Global_Sales\", \"NA_Sales\", data=df,size=5, ratio=3, color=\"r\")","f12a0bcc":"df3=df.drop(columns=[\"Rank\",\"Year\"])\n\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=df3, palette=pal, inner=\"points\")\nplt.show()","cb0d3f37":"f,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(df3.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","d54b147c":"sns.pairplot(df3)\nplt.show()","382c06dd":"## Bar Plot","7cadb8e5":"## Pie Chart","d5503ba7":"## Other plots","8963597c":"## Point Plot\n"}}