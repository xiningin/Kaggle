{"cell_type":{"3306db30":"code","84634ef7":"code","7909b8a8":"code","7b203899":"code","555b73db":"code","f78811fe":"code","907d0cdb":"code","5e37fdf4":"code","de5cd39f":"code","018b69f0":"code","62fe2864":"code","b8dff995":"code","78a77ffe":"code","bef108a0":"code","d8f2bdb6":"code","6d055a78":"code","ad4ef0c8":"code","b244a50b":"code","54450711":"code","8902b208":"code","b2973f42":"code","a77fe5f9":"code","aa0439a6":"code","c0f27ae0":"code","c0b9d02a":"code","26ecd04e":"code","01352ddb":"code","a856e08a":"code","c40978b4":"code","c4a3b587":"code","5bfc0d89":"code","d7c82b24":"code","3edb2c36":"code","2c70e2b3":"code","0ee67a29":"code","bd413ede":"markdown","1c7c522a":"markdown","69d45712":"markdown","f21814fa":"markdown","a339210b":"markdown","28296c2a":"markdown","79963109":"markdown","78214511":"markdown","b3f71928":"markdown","f0a9f040":"markdown","41128de2":"markdown","7a23a9df":"markdown","12c0bf09":"markdown","557b5c79":"markdown","7ca6423c":"markdown","754b6220":"markdown","0db64720":"markdown","5235f620":"markdown","9207de8a":"markdown"},"source":{"3306db30":"#Necessary library importations and creating the dataframe\nfrom matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport warnings\npd.options.mode.chained_assignment = None\nwarnings.simplefilter(action='ignore', category=FutureWarning)\npd.set_option('display.max_columns', None)\n\ndf = pd.read_csv(\"..\/input\/extended-football-stats-for-european-leagues-xg\/understat_per_game.csv\")\n","84634ef7":"#Getting a general view of the data\nprint(df.head())\ndf.date = pd.to_datetime(df.date)\ndf.describe()\ndf.info()","7909b8a8":"#Definitely not necessary, although I just couldn't bear to see it wrote like \"Fortuna Duesseldorf\" so \n#fixed that\ndf[\"team\"] = df.team.replace(\"Fortuna Duesseldorf\" ,\"Fortuna D\u00fcsseldorf\")\n\n#Simple function to extract a specific year from the year column\ndef season_date(frame, year):\n    new = frame[frame[\"year\"] == year]\n    return new\ndf_2019 = season_date(df, 2019)\nbundesliga = df_2019[df_2019[\"league\"] == \"Bundesliga\"]\ndf_2019.head()","7b203899":"#Plot the cumulative change in total points and therefore the rankings in time\n\nax = plt.subplots(figsize=(15, 10))\nsns.set_context(\"notebook\")\nsns.set_style(\"dark\")\nsns.lineplot(bundesliga.date, bundesliga.groupby(\"team\").pts.cumsum(), hue=\"team\", data=bundesliga, palette = \"Dark2\")\nsns.despine(top=True, bottom=True, right=True)\nplt.title(\"Change in Bundesliga rankings by time\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Points total\")","555b73db":"#Grouped by the team column, then took the means of xG and scored columns \n#in order to compare average xG and goal amounts by team\nbundesliga_expected_actual = df_2019[df_2019[\"league\"] == \"Bundesliga\"].groupby(\"team\")[[\"xG\", \"scored\"]].mean()\n#Reset the index for easier column operations\nbundesliga_expected_actual = bundesliga_expected_actual.reset_index()\n#Sort values by goal expectation\nbundesliga_expected_actual = bundesliga_expected_actual.sort_values(\"xG\", ascending = False)\ndisplay(bundesliga_expected_actual)","f78811fe":"#Again group by the team columns, although this time compare with\n#average successful deep passes per game\nbundesliga_deep = bundesliga.groupby(\"team\").deep.mean()\nbundesliga_deep = bundesliga_deep.reset_index()\nbundesliga_deep = bundesliga_deep.sort_values(\"deep\", ascending = False)\ndisplay(bundesliga_deep)","907d0cdb":"#Same as the above two cells\nbundesliga_points = df_2019[df_2019[\"league\"] == \"Bundesliga\"].groupby(\"team\")[[\"pts\", \"xpts\"]].sum()\nbundesliga_points = bundesliga_points.reset_index()\nbundesliga_points = bundesliga_points.sort_values(\"pts\", ascending = False)\nbundesliga_xpoints = bundesliga_points.sort_values(\"xpts\", ascending = False)\ndisplay(bundesliga_points)","5e37fdf4":"#Create a column named press_eff showing the ratio of passes that teams allowed \n#their opponents to make inside their box before recieving the ball\n\nbundesliga[\"press_eff\"] = bundesliga[\"deep_allowed\"]\/bundesliga[\"ppda_coef\"]\nbundesliga_press = bundesliga.groupby(\"team\").press_eff.mean()\nbundesliga_press = bundesliga_press.reset_index()\nbundesliga_press = bundesliga_press.sort_values(\"press_eff\", ascending = False)\ndisplay(bundesliga_press)","de5cd39f":"#Create a column named peneteration showing the ratio of passes that teams made \n#inside opposition box before their opponents recovered the ball\n\nbundesliga[\"peneteration\"] = bundesliga[\"deep\"]\/bundesliga[\"oppda_coef\"]\nbundesliga_penet = bundesliga.groupby(\"team\").peneteration.mean()\nbundesliga_penet = bundesliga_penet.reset_index()\nbundesliga_penet = bundesliga_penet.sort_values(by = \"peneteration\", ascending = False)\ndisplay(bundesliga_penet)","018b69f0":"#Plot bar graphs of average xpts and deep for each team side-by-side\n\nsns.set_context(\"talk\")\nsns.set_style(\"darkgrid\")\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\nplt.subplots_adjust(wspace = 0.5)\nsns.barplot(x=\"xG\", y=\"team\", palette=\"rocket_r\", data=bundesliga_expected_actual, ax=ax1)\nax1.set(title=(\"Average Goal Expectations per Team\"), xlabel=(\"Goal Expectation\"), ylabel=(\"Teams\"))\n\nsns.barplot(x=\"deep\", y=\"team\", palette=\"rocket_r\", data=bundesliga_deep, ax=ax2)\nplt.title(\"Average Successful Deep Passes per Game\")\nplt.xlabel(\"Successful deep (within 20 yards of goal) passes per game\")\nplt.ylabel(\"Teams\")\nplt.show()","62fe2864":"#Plot bar graphs of total pts and xpts for each team side-by-side\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\nplt.subplots_adjust(wspace = 0.7)\nsns.barplot(x=\"pts\", y=\"team\", palette=\"rocket_r\", data=bundesliga_points, ax=ax1)\nax1.set(title = (\"Total Points Collected by Teams\"), xlabel=(\"Total Points\"), ylabel=(\"Teams\"), xlim=[0, 85])\n\nsns.barplot(x=\"xpts\", y=\"team\", palette=\"rocket_r\", data=bundesliga_xpoints, ax=ax2)\nplt.xlabel(\"Expected Points Total\")\nplt.ylabel(\"Teams\")\nplt.title(\"Total Points Expected to Have Been Collected by Teams\")\nplt.xlim([0, 85])\nplt.show()","b8dff995":"#Create variables that represent overperformance and underperformance\n#in terms of collecting points\nhigh_xpts = bundesliga_points[bundesliga_points[\"xpts\"] >= bundesliga_points[\"pts\"]]\nhigh_pts = bundesliga_points[bundesliga_points[\"pts\"] > bundesliga_points[\"xpts\"]]\n#Create a new column on the dataframe that was grouped by teams and expected points\n#that show the ratio of actual points to expected points\nbundesliga_points[\"pts\/xpts\"] = bundesliga_points[\"pts\"] \/ bundesliga_points[\"xpts\"]","78a77ffe":"#Plot bar graphs of average pts divided by xpts for each team to understand\n#how much each team lived up to expectations in terms of point collection\n\nax = plt.subplots(figsize=(15, 10))\nsns.barplot(\"pts\/xpts\", \"team\", data=bundesliga_points.sort_values(by=\"pts\/xpts\", ascending=False), palette=\"GnBu\")\nplt.title(\"Performance in point collection\")\nplt.xlabel(\"Points to expected points ratio\")\nplt.ylabel(\"Team\")\nplt.show()","bef108a0":"#Create variables that represent overperformance and underperformance\n#in terms of goal scoring\nhigh_xg = bundesliga_expected_actual[bundesliga_expected_actual[\"xG\"] >= bundesliga_expected_actual[\"scored\"]]\nhigh_scoring = bundesliga_expected_actual[bundesliga_expected_actual[\"scored\"] > bundesliga_expected_actual[\"xG\"]]\n#Create a new column on the dataframe that was grouped by teams and goal expectations\n#that show the ratio of goals to xG\nbundesliga_expected_actual[\"goal\/xG\"] = bundesliga_expected_actual[\"scored\"] \/ bundesliga_expected_actual[\"xG\"]","d8f2bdb6":"#Check if all's well\nbundesliga_expected_actual.head()","6d055a78":"#Plot bar graphs of average goals and expected for each team to see\n#how well they performed\n\nax = plt.subplots(figsize=(15, 10))\nsns.barplot(\"goal\/xG\", \"team\", data=bundesliga_expected_actual.sort_values(by=\"goal\/xG\", ascending=False), palette=\"RdYlBu\")\nplt.ylabel(\"Team\")\nplt.xlabel(\"Goal to Goal Expectation Ratio\")\nplt.title(\"Goal\/xG Ratios of Bundesliga Clubs in 19\/20 Season\")","ad4ef0c8":"#Plot a bar graph to show how many passes were allowed \n#before recovery inside a team's penalty box\n\nax = plt.subplots(figsize=(15, 10))\nsns.barplot(\"press_eff\", \"team\", data=bundesliga_press, palette=\"RdYlBu\")\nplt.xlabel(\"Allowed opponent deep passes\")\nplt.ylabel(\"Team\")\nplt.title(\"Passes made inside teams' penalty box until recovery\")","b244a50b":"#Plot a bar graph to show how many passes teams allowed \n#inside their penalty box before recovering the ball \n\nax = plt.subplots(figsize=(15, 10))\nsns.barplot(\"peneteration\", \"team\", data=bundesliga_penet, palette=\"RdYlBu\")\nplt.xlabel(\"Passes made inside oppponent's box before loss of possession\")\nplt.ylabel(\"Team\")\nplt.title(\"Passes made inside opponents' penalty box until loss\")","54450711":"#Create scatter plots side-by-side showing how goal expectation changes\n#by metrics ppda_coef, oppda_coef, deep and deep_allowed\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\nplt.subplots_adjust(wspace = 0.3)\nsns.scatterplot(x=\"ppda_coef\", y=\"xG\", data=bundesliga, ax=ax1, alpha=0.6)\nsns.scatterplot(x=\"oppda_coef\", y=\"xG\", data=bundesliga, ax=ax1, alpha=0.6)\nax1.set(title = (\"Change of xG by OPPDA\/PPDA\"), xlabel=(\"OPPDA\/PPDA\"), ylabel=(\"xG\"))\nax1.legend([\"PPDA\",\"OPPDA\"])\n\nsns.scatterplot(x=\"deep\", y=\"xG\", data=bundesliga, ax=ax2, alpha=0.6)\nsns.scatterplot(x=\"deep_allowed\", y=\"xG\", data=bundesliga, ax=ax2, alpha=0.6)\nplt.xlabel(\"Deep passes made\/allowed\")\nplt.ylabel(\"xG\")\nplt.title(\"Change of xG by deep passes made\/allowed\")\nplt.legend([\"Deep Made\", \"Deep Allowed\"])\nplt.show()","8902b208":"#Create scatter plots side-by-side showing how xpts changes\n#by metrics ppda_coef, oppda_coef, deep and deep_allowed\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\nplt.subplots_adjust(wspace = 0.3)\nsns.scatterplot(x=\"ppda_coef\", y=\"xpts\", data=bundesliga, ax=ax1, alpha=0.6)\nsns.scatterplot(x=\"oppda_coef\", y=\"xpts\", data=bundesliga, ax=ax1, alpha=0.6)\nax1.set(title = (\"Change of expected points by OPPDA\/PPDA\"), xlabel=(\"OPPDA\/PPDA\"), ylabel=(\"Expected Points\"))\nax1.legend([\"PPDA\",\"OPPDA\"])\n\nsns.scatterplot(x=\"deep\", y=\"xpts\", data=bundesliga, ax=ax2, alpha=0.6)\nsns.scatterplot(x=\"deep_allowed\", y=\"xpts\", data=bundesliga, ax=ax2, alpha=0.6)\nplt.xlabel(\"Deep passes made\/allowed\")\nplt.ylabel(\"Expected Points\")\nplt.title(\"Change of expected points by deep passes made\/allowed\")\nplt.legend([\"Deep Made\", \"Deep Allowed\"])\nplt.show()","b2973f42":"#Filter the Bundesliga dataset to get rows that only contain data for RB Leipzig\nleipzig = bundesliga[bundesliga[\"team\"] == \"RasenBallsport Leipzig\"]\nleipzig.head()","a77fe5f9":"#Create a heatmap to visulize the Pearson correlation coefficient for RB Leipzig metrics\nsns.set_context(\"talk\")\nax=plt.subplots(figsize=(10,10))\nsns.heatmap(leipzig.corr())\nplt.title(\"RB Leipzig's 19\/20 season correlation matrix\")\nplt.savefig(\"leipzig_matrix\")","aa0439a6":"#Create variables by filtering which venue the game was played at\nleipzig_home = leipzig[leipzig[\"h_a\"] == \"h\"]\nleipzig_away = leipzig[leipzig[\"h_a\"] == \"a\"]","c0f27ae0":"#Calculate the average goal expectations by venue \nprint(leipzig_home.xG.mean(), leipzig_away.xG.mean())","c0b9d02a":"#See how many games RB Leipzig won, lost or drew\nleipzig[\"result\"].value_counts()","26ecd04e":"#Create a bar plot showing the difference between how much difference\n#there was between goals that were actually scored and should've been\n#scored in average by each result\n\nleipzig_r_xg = leipzig.groupby(\"result\").xG_diff.mean().head()\nleipzig_r_xg = leipzig_r_xg.reset_index()\n\nsns.set_style(\"darkgrid\")\nsns.set_context(\"poster\")\nax = plt.subplots(figsize=(8, 8))\nsns.barplot(\"result\", \"xG_diff\", data=leipzig_r_xg, palette=\"cividis\")\nplt.title(\"Difference of Actual Goals - Expected Goals\")\nplt.ylabel(\"Difference\")\nplt.xlabel(\"Result\")\nplt.show()","01352ddb":"plt.clf()","a856e08a":"#Plot two bar graphs side-by-side, one showing how the average amounts of goals\n#scored per game and the other xG per game depending on the venue played\n\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 8))\n\nsns.set_context(\"poster\")\n\nsns.barplot(\"h_a\", \"scored\", data=leipzig, ax=ax1, ci=False, palette = \"cividis\")\nax1.set(xlabel=(\"Home\/Away\"), ylabel=(\"Goals scored\"), ylim=[0, 2.8])\n\nsns.barplot(\"h_a\", \"xG\", data=leipzig, ax=ax2 , ci=False, palette = \"cividis\")\nplt.ylim([0, 2.8])\nplt.xlabel(\"Home\/Away\")\nplt.ylabel(\"Goal Expectation\")\nplt.show()","c40978b4":"#Create a count plot that visualizes the amounts of wins, draws and losses\n#depending on the venue played\n\nresults_h_a = leipzig.groupby(\"h_a\").result.value_counts()\nax = plt.subplots(figsize = (8, 8))\n\nsns.countplot(\"result\",data=leipzig,hue=\"h_a\", palette = \"cividis\")\nplt.yticks([0, 2, 5, 8, 10])\nplt.title(\"Leipzig 19\/20 game result counts by venue played\")\nplt.xlabel(\"Result\")\nplt.ylabel(\" \")\nplt.legend([\"Away\", \"Home\"])\nplt.show()\nprint(leipzig.groupby(\"h_a\").result.value_counts())","c4a3b587":"#Select rows with only Bayern and Leipzig as teams\nleipzig_bayern = bundesliga[(bundesliga[\"team\"] == \"Bayern Munich\") | (bundesliga[\"team\"] == \"RasenBallsport Leipzig\")]\nleipzig_bayern.head()","5bfc0d89":"#Compare the results of Bayern and Leipzig\nax = plt.subplots(figsize = (8, 8))\nsns.set_context(\"notebook\")\nsns.countplot(\"result\", hue=\"team\", data=leipzig_bayern, palette=\"RdBu\")\nplt.title(\"Result Counts of Bayern Munich vs RB Leipzig\")\nplt.xlabel(\"Result\")\nplt.ylabel(\" \")","d7c82b24":"#Create a scatter plot visualizing how each team performed regarding deep passes\n#under different levels of pressure received \n\nax = plt.subplots(figsize = (10, 10))\nsns.set_context(\"talk\")\nsns.scatterplot(\"oppda_coef\", \"deep\", hue=\"team\", data=leipzig_bayern, palette=\"RdBu\")\nplt.title(\"Change of passes around opposition box by opponent's pressing strength\")\nplt.ylabel(\"Successful passes\")\nplt.xlabel(\"Opposition pressing strength\")\nprint(leipzig_bayern.groupby(\"team\").deep.mean())\nprint(leipzig_bayern.groupby(\"team\").oppda_coef.mean())","3edb2c36":"#Plot a bar graph showing how many passes were made in average before losing the ball \n#inside the opposition box\n\nax = plt.subplots(figsize=(8, 8))\nsns.barplot(\"team\", bundesliga_penet[\"peneteration\"], data=bundesliga_penet[(bundesliga_penet[\"team\"] == \"RasenBallsport Leipzig\") | \n                                                       (bundesliga_penet[\"team\"] == \"Bayern Munich\")], palette=\"RdYlBu\")\nplt.xlabel(\"Passes inside oppponent's box before loss of possession\")\nplt.ylabel(\"Team\")\nplt.title(\"Passes made inside opponents' penalty box until loss\")\nplt.ylim([0, 0.85])","2c70e2b3":"#Create a scatter plot that visualizes how many passes teams allowed inside\n#their own box before recovering the ball\n\nax = plt.subplots(figsize = (10, 10))\nsns.set_context(\"talk\")\nsns.scatterplot(\"ppda_coef\", \"deep_allowed\", hue=\"team\", data=leipzig_bayern, palette=\"RdBu\")\nplt.title(\"Passes inside box vs. pressing strength\")\nplt.ylabel(\"Opposition successful passes\")\nplt.xlabel(\"Pressing strength\")\nprint(leipzig_bayern.groupby(\"team\").deep_allowed.mean())\nprint(leipzig_bayern.groupby(\"team\").ppda_coef.mean())","0ee67a29":"#Plot a bar graph showing how many of the passes were made inside\n#Bayern and Leipzig's box before recovery\n\nax = plt.subplots(figsize=(8, 8))\nsns.barplot(\"team\", \"press_eff\", data=bundesliga_press[(bundesliga_press[\"team\"] == \"RasenBallsport Leipzig\") | \n                                                       (bundesliga_press[\"team\"] == \"Bayern Munich\")], palette=\"RdYlBu_r\")\nplt.xlabel(\"Allowed opponent deep passes\")\nplt.ylabel(\"Team\")\nplt.title(\"The percentage of passes made around teams' penalty box until recovery\")\n\nplt.ylim([0, 0.65])","bd413ede":"There doesn't appear to be a pattern between on how teams' xG change depending on PPDA\/OPPDA or deep passes made\/allowed metrics.","1c7c522a":"# Comparison of goals scored and xG by venue played (home\/away)\nThe plots above allow us to compare the average counts of goals scored and expected per game by whether the game was played at Red Bull Arena or not. \n\nIt appears that Leipzig have performed better at away games in terms of scoring goals and there's just a slight difference between the actual and expected amount of goals for away games. \n\nFor home games however, the difference between actual goals and xG seem to differ roughly by 0.5 goals in average. Basically, Leipzig have (again, roughly) scored a goal more than they should have for each two game played at home. This might've been caused by a variety of factors, such as fan support or opponents shifting to a more reactive style of play since it's an away game. Therefore it could lead to incorrect assumptions if we were to draw conclusions from these graphs alone.","69d45712":"And that trend of no relation seems to follow for expected points aswell. Therefore it would be safe to say that deep passing or PPDA\/OPPDA metrics have no direct effect on the results teams have received.","f21814fa":"In this project, I've tried to make an exploratory data analysis and visualized some key points regarding Bundesliga metrics from the dataset in this link: https:\/\/www.kaggle.com\/slehkyi\/extended-football-stats-for-european-leagues-xg\n\nNote: This dataset only includes domestic league stats, therefore Champions League, Europa League or DFB Pokal performances weren't put into consideration in this project.","a339210b":"This graph shows us that the two teams have shown similar behavior when it came to allowing their opponents pass inside their box. An average of each 0.45 of opposition passes were intercepted around the teams' penalty box. In other words, Bayern and Leipzig have recovered the ball for every 0.45 pass made inside their box.\n\nBasically, both of these teams allowed their opponents to pass inside their box less than they could pass inside their opponents' box in average.","28296c2a":"# Comparison of actual and expected points collected by team in Bundesliga 19\/20 season\nThese couple of plots are more interesting to look at in my opinion mostly since they're metrics in direct correlation with each other. \n\nAs could be seen above, in terms of actual points collected Bayern sit on the top, then come Dortmund and Leipzig. Although on the right-side bar plot, that order changes by Bayern, Leipzig, and Gladbach which have the same expected points as Dortmund. This means that Dortmund overperformed in terms of actual count of total points collected, while Leipzig and Gladbach underperformed. In fact, Bayern also underperformed since they went above 80 points in reality while the expected points metric for them is below that number.\n\nLet's create a ratio of actual points divided by expected points and visualize that for each team, so that we could see much easier which teams underperformed\/overperformed and to what extent.","79963109":"This chart provides insight on how often teams allow their opponents to approach their penalty box by passing. Reading from the bar plot above, Borussia Dortmund were the best at disabling teams from working the ball inside their penalty box. And to counter that, Leipzig appear to be league leaders at penetrating defenses to enter opposition box with the ball and pass the most before losing possession.\n\nThese two plots above show how likely teams are to fill up open spaces and passing lanes inside their own penalty boxes, and how good they are at feeding off from the ones the opponents leave.","78214511":"# Correlation between RB Leipzig data features \nThe correlation matrix is a very intuitive visualization method to discover *linear* relationships between features. Although it must be noted that a low Pearson coefficient doesn't necessarily indicate that the features in question are not correlated at all, this value only informs us of whether if the selected features are *linearly* correlated. Therefore, a very strong polynomial correlation (such as a parabola) between two variables will still return a low Pearson coefficient.","b3f71928":"Leipzig seem to have allowed their opponents pass inside their box 30% more in average compared to Bayern, and again, they let their opponents pass 25% more than Bayern did before intercepting the ball.","f0a9f040":"# Evaluation of whether if the teams could live up to expectations in terms of goals scored\nThis bar plot essentially gives us a visual represantation of the teams' \"goal efficiency\" rates, where 1.0 means similarly to the bar plot above that the team in question scored as many goals as they were expected to. \n\nTherefore the teams with a higher ratio, such as Borussia Dortmund or Werder Bremen, could be said to have overperformed in terms of converting chances to goals compared to those that are located at the lower sections of the graph, like Wolfsburg or Borussia M\u00f6nchengladbach.\n\nInstead of the league in general, let's focus on a single team now. I chose RB Leipzig, since I've been enjoying their playing style and Julian Nagelsmann's display of his managerial skill set.","41128de2":"#  Definition of some metrics according to the original author of the dataset\n\nxG - expected goals metric, it is a statistical measure of the quality of chances created and conceded(from understat.com)\n\nxG_diff - difference between actual goals scored and expected goals.\n\nnpxG - expected goals without penalties and own goals.\n\nxGA - expected goals against.\n\nxGA_diff - difference between actual goals missed and expected goals against.\n\nnpxGA - expected goals against without penalties and own goals.\n\nnpxGD - difference between \"for\" and \"against\" expected goals without penalties and own goals.\n\nppda_coef - passes allowed per defensive action in the opposition half (power of pressure)\n\noppda_coef - opponent passes allowed per defensive action in the opposition half (power of opponent's pressure)\n\ndeep - passes completed within an estimated 20 yards of goal (crosses excluded)\n\ndeep_allowed - opponent passes completed within an estimated 20 yards of goal (crosses excluded)\n\nxpts - expected points\n\nxpts_diff - difference between actual and expected points","7a23a9df":"In average, roughly for each 0.7 pass made inside the opponent's box, Leipzig had their ball intercepted while that number is closer to 0.6 for Bayern. Therefore it could be said that Leipzig were more potent when it came to working the ball inside the box.","12c0bf09":"What this graph and the mean values of oppda_coef and deep metrics tell us is that Leipzig received more pressure (50% tougher) from their opponents, or simply wasn't good enough at passing the ball around under pressure as much as Bayern. \n\nThis might be an indicator of that RB Leipzig, compared to Bayern M\u00fcnchen, had more troubles peneterating through defenses that sit back and focus on leaving no empty spaces.","557b5c79":"# Result counts by venue the game was played\nJust like the bar plots under the above cells which depicted that Leipzig had scored more goals away, the team appears to have also won almost 50% more games away compared to home matches. The significance of their away performance manifests itself further considered that Leipzig has more draws at home than wins. \n\nIt wouldn't be correct to draw any conclusions without further analysis although, on whether if they just overperformed at away games or their home record's an outcome of underperformance. These statements might sound like they are essentially addressing the same thing at first, however it could be seen that is not the case after going over them once more carefully.","7ca6423c":"# Evaluation of whether if the teams could live up to expectations in terms of points collected\nSo, let's try to get a more intuitive view of this bar plot. Numbers on the x-axis represent the ratio that we talked about on the above cell: actual points\/expected points. Setting this as our starting point, a ratio on 1.0 would mean that the actual amount of points gathered by a team were 100% consistent with the expectation metric. So, simply put, it could be said that teams that are above the ratio 1.0 *overperformed*, while those under 1.0 *underperformed*.\n\nLet's try the same thing with the actual amount of goals scored and goal expectations!","754b6220":"# Goals scored - goal expectation difference per result category\nHere's another plot that I find enjoyable to look at. Each bar stands for a result (win\/draw\/lose) and the y-axis represents the mean difference between the actual count of goals scored and the goal expectation metric. Or to mathematically notate:\n\n(The average of actual goal counts for each result category) - (The average of xG for each result category)\n\nAccording to the above graph, Leipzig have exceeded expectations in terms of goal scoring for the games they won, which means that they scored fewer goals than they were supposed to. And interestingly enough, Leipzig apparently have overperformed in the games they couldn't win and scored more goals than they were expected to. This might indicate that Leipzig won the games they bagged 3 points by dominating their opponents, whereas for the ones they couldn't win the team were outperformed on the pitch and couldn't get many scoring opportunities, yet somehow managed to make the ball cross the goal line.","0db64720":"# EDA of Bundesliga Football Data","5235f620":"# Comparison of deep passing and goal expectations (xG) by team \nWe can see on the above left graph that Bayern M\u00fcnchen had the highest average xG per game, while Fortuna D\u00fcsseldorf was last place. \n\nThe metric \"deep\", which I also used for the right plot was defined by the original author of this dataset as:\n\n\"deep - passes completed within an estimated 20 yards of goal (crosses excluded)\"\n\nAccording to the graph, again, Bayern performed best regarding the metric \"deep\", which pretty much stands for passes around and inside the opponent's penalty box. This might offer a general idea on how teams operate in terms of offensive play, as an example Bayern completed a little bit more than three times the amount of passes Paderborn could (which are last place), and we could extract insights such as: \"Bayern have internalized a mentality that mostly employs playing into box with organized passing\", \n\nor: \"Paderborn couldn't complete many passes around the box, therefore it indicates that they emphasize a more direct approach when attacking or cross more often\" \n\nusing this metric alone.","9207de8a":"# What does it take to win the title?\n\nWe looked into RB Leipzig's performance data, and we saw that RB Leipzig should've been second place if Borussia Dortmund didn't overperform in terms of point collected throughout the season, which'd put them right under the reigning champions, Bayern M\u00fcnchen.\n\nLet's compare Leipzig and Bayern to see what differences their seasons had in terms of numbers and try to make sense of it."}}