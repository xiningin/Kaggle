{"cell_type":{"81414885":"code","5876124c":"code","265ee40f":"code","fafdecab":"code","2a55d3da":"code","9faaf2ee":"code","97b8edb7":"code","ac84f6df":"code","c310d9b1":"code","8aacd9c6":"code","da9a93d6":"code","de1463e9":"code","a855b143":"code","8ac119ec":"code","eb118482":"markdown","36a8fea9":"markdown","ef20bee9":"markdown","04bbcafc":"markdown","1d995027":"markdown","c0031644":"markdown","dc1b4e75":"markdown","f863db29":"markdown"},"source":{"81414885":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxEQEhUQEhIVFRUVEBcYGBYVEhgVFhUXFxcYGB4XGhUkHikgGholHhUaITIhJS0sLi4uGCE3ODMsNyotLisBCgoKDg0OGxAQGy4lICYyLTE1LS0yLy0tLS0tLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAOEA4QMBIgACEQEDEQH\/xAAbAAEAAwADAQAAAAAAAAAAAAAAAQUGAwQHAv\/EAEYQAAIBAwMCBAMEBgYGCwAAAAECAwAEEQUSIRMxBhRBUSJhcQcVMoFCUmJykaEjJDWCscEWM1Nzs\/AlJjQ2Q0RjdZKy0f\/EABkBAQEBAQEBAAAAAAAAAAAAAAACAQMFBP\/EACARAQEAAgMAAwEBAQAAAAAAAAABAhESITFBUWGBEyL\/2gAMAwEAAhEDEQA\/APJaUpXqPgKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKkVFSKBSlKBSlbey8HLJo8t7n+sKyzBPUW3xJnHsxVnB9kFTllMfVY42sRSvqJgCCVDAHlSSAfkSCCPyNbrxTpNhb6fZXUVqepdxkndcSssZCjO0Z55Pr\/ADpctWQmO4wdKVvYdJsDo7akbT+lW46W3zEwj5YDdjdns3bNMstGOO2CpUuQSSAAMngZwPlzz\/GoqklK1n2a+H4r67C3HECD4+cbmkOyNM+5Y5H7prP6zpz2s8ts\/wCKKQoT747N9CMH86mZTem8brbp0rc+CNIsbq1vZp7Ys9pAJAUuJE6nDnDDJA\/B3Hv2ri8K2emajMLNreW1lkDdKWO5aZdwUttdHHbCnkH+Hep\/0968Vw\/WLpV1B4YuHvvu1cGUTtGT+iApOZD+yFG73\/OrLWpLCxma1htlujE22Sed5MSOPxCONGUIoPGTk8VXP6Zx+2TpWv1Dw9Dc2J1OyVkETbbm3ZjJ0jxiSNzyU5Bwef4V27LTLBtIm1BrU9aK4EQUXEojbcYwGI3Z7Sds849Kn\/SN4MLSue2mRX3PEJFzyhd14+TA7hj8\/wA61msW2m297cQtbN0YIjtXzMm+aUiMqC+fhHxk8DsD3qrlrrTJjtjKVv8ARNM0640+8vjZMrWxUBBeSlX3c8n0rNalLZSW4aGAwTrcAMpuGmV4mRzuG4DBDKAfqPesme\/htw18qWlKVaA1FSaigUpSgVIqKkUClKUHd0XTWup47dTgyOAW9FXuzn5KoJ\/KvSvC12qamzm4szazx+WEK3kTEQqAsKhM8t8IGB\/tGrD+H7+0gin6huBPNA0SNHFGyRKxG48yqWLKMdhgE1SQ4DAlmUBs7lUMy49Qu4An8x9a5ZY8nTGzGO\/4m0c2V1Nan\/w5CFPuh5Q\/mpH55rX+Ov7I0j\/dN\/gK6XjzxFYak0UyC5jmWNUdmhiKyKP0sCXhhk\/I9vnXJrXiPTbqztLNvOr5VcB1hgO\/IAPwmbjke9Z3ddN67YcCvQYP+7Mn\/uI\/+yVn\/PafBBMtuLp7iWPph5kiSOONiN+ArsdzKNuT7+nNWtr4i09dMOmP5s7p+qZUhhHO4EAIZu2Fx3rct34MZJ8sQBStPpV7pds5mUXksqKTEskUKRiXB2u+JGJCnBwPb1qj0rodVTdGUxgguI1VnfB5XLMoGefi5q+X4jj+tT92yQ2dvHHcW0MryC7k6tykTqQAIBtPOFXL8+sn8LH7XLJZfLapHtZbiLpyGNg6CVBxhhwcjcM\/+nWO8TX8dzdS3EZcrI+4CRFRkHYJhWYEKoUA5Hbt76HSPElkumSabci5ffJ1FZIo9sL8EbcygsMgnkDO4+9c9Waq9y9LD7LmUWerF1LKLRdyhtpYbZcgNg4PzwafZxqumpdIFt5Ibh8pBLJN5iON3G0ZTCcnJGfnjIzVb4S8Q2Nlb3cEnmnN1H0y0cMS7FAcZGZjk\/Hn\/wDa6+hahpVpMlzsvJ3jYNGjrDFHvHZmIdicHBHzHrWXHe\/Wy6013gCyltdeuIrpw8xhkYSDtIXaN9wHplT29MEeleX6mpE0oPfryZ+u85\/nVle+KbiS+OoghJuoGUDlVCjaEx6rt4Pvk+9WOsXenX8puWkls5HIMsfQ68bP6tGysCM+zDvVSXG7rLZlNRffZawWw1Zn\/wBX5dc57Z6c3H15H8q6Omn\/AKuXfy1CP\/G3qq1TxFElr93WSusBffNLJgS3D+mVHCRjAwuc8DPrl4V8RRQwXFjdI7W1zglo8dSKQYw6g8H8I4\/ZHftWcb7+kynjLtWh+0D+0rr\/AHi\/8NKmCLTIW6pnmuQrZWFbYwBiOQJJGY4XtnaM4zVPqN69xLJPIcvI5dsdssc4A9AO1dJ3dpvU03HhD+w9V\/ej\/wABXn1bLQvENnb6fdWL+ZL3WCXWGLbGQAAMGbLDI78fSsfIBk4JIzwSNpI9yMnB+WTWYe0z8j5pSlWgNRUmooFKUoFSKipFApSlB3dH0ua7mW3gQvI54A9B6sT6KPU1dX+jafaMYZ7uWaVThxaQoY42Hdeo7jeQeDgVr\/szh8ppWoamv+t2SIjeqiNAePqz5\/uivKRXOW5W\/jpZMZGrn8KQNZT6hb3glSHYDE0RjlVnkVcONxGMMSCO+KrfDfhua+ZyhWOKJd008h2xRKBnJPqcAnA\/lXSsNQeFZkXlZ4emwz7OrhvqCn8zXpPiCEWfhu3ij4N1JG8hHBbeDLg+4wir9BWW3Hr7JJe2LFppWen5u6z\/ALYWi9LPv0+p1Nv864PE3hqawKFyskUq7oZ4zmKVcZ4PocEHH+NUter+HoxeeG7mOTk2ryvGTyVKKJRj24Zl+hplbhqmOsumc8MeB4b63mulvjGtuMyq9nkqAu7I2zHcMA\/PjtXFong2C\/LR2eoI8yoWEU1s8BcD9Vt7A\/5VpPsniZ9O1REUszR4VQMkkxSAAD1NV3gPw\/Lp9zHqGoYtIYd5HWIV5XKMuxE\/EeGJ7enGc1Nyu72qSddMNdWTwytDMGjZH2uNoZlwecDIDe45APv61rn8C262Cam2oMIXIAHkSXDFiuCBNjuDznFUPjLV1vb6e6QELI42g99qIqAkehITOPnW+uLaSXwxAkaPI3XztRS7YEz5O0DNVnbqMxk3WVl8DNJaNfWVwt3FGT1FEbRTR4GTmIk5wOeD25GaoNE0ie9mW3t03yN+QUDuzN+io9\/8SRn1L7L4n0uzu7y9BhjkChEkG132huyHnLF9oHyPpXU+z6LymiX18mBK6yKrDuqooUAH95mP8KnnZtvCVj7vS9NtnMMt3PM6ttdraBOkhHBAZ3BfHuB6V8a14VaGBb2CUXNq529VUKNG+cbJYySUPp3I+mRWdAr1T7DsTi+sZBuilhQlT2y25GP1I2\/\/ABFVlvGbTjrK6ZPwP4Tj1SU24ujDKIy+1rbepUMFOHEoOfiHcDv64rltfCtnLcG0TUx1eoY16lk8cbOCRtEnUODkYGRzVv8AYpEY9VdCclLWZSfcrJGM\/wAq6UPgy8N4880ZtrdLtpHnnIjRUEpYEZOSTxj61Ny\/6vapOp0zniPQZ9Pna3uFwwAIIOVdT2ZT6jv+YNVdbb7WPE0OoXamD4o4YygftvJYsSB+qOAD681ktNsXuZY7eMfHLIqL9WOMn5DufkK6428d1zyk3qLl\/Cco00apztNz09uP0PwiTP7\/AMNZ2vZ\/DGsw3s15omR5Xywit\/pCux2+rEhx+7Xj15avDI8Mgw8bsjD9pSQfyyKnDK3cqs8ZJuOGlKV0cw1FSaigUpSgVIqKkUClKUHqv2U3SXdje6QzBXkR2jyfxCRApx+6yqT8mry+6tnhdopUKSI21lbgqR\/z+dWGkadf5S5tbe6O1spLDBKwyODh1XB9QR9Qa2NzrWqzgeb0QXLqMCSXTZt\/5kAfwGBXLfG2x11yk2wVtYvIkkgwEiUFmbIGScKg45dj2H1JwATXpVxP95eHlWP4pbFk3p67Y8jcB6jptn+6fasnq9nqtztVrC4SNCSkMNhLFEhPchAnLH9Y5Pzr40aw1ezkE1vaXqP2OLSYhh+qylMMvyNLq97JNdaZuvULS5+7vDzrJxLfu\/TQ\/iKOFTfj22KTn9oe9Umy73dX\/R8dX9byN308+\/l89P8AlVdrGn6veSGa4tb2RyMZNpKAo\/VVQmFX5Cst5eknHxqfswH\/AEZqvt0j\/wAGSuH7P9Tiv7ZtDuzwwJtpD3RhltgPuDkj3GV9q6ejahrFnC9vBpbLHJneDp9y5fI2nczEk8ce3tis+dA1HeJE0+6iIYMojtLgBCuMFdwJHIz379vas1Lbuq7kjo6zpctpO9tMuHjbB9mHoy+6kcg16LeysnhiBlYqRcjBUlSP6Z+xFU+uX2sXwXzWlNKVGA5065WTHfG9SDgn07d6+pdR1hrUWLaU3lwBiP7uuRjBzkNnduzznOfnW271vTJNbYi4uJJCDI7uR2LuXI+hJr0z7NLlbvTr3ScgSskjxAnG4Mo7fR1GfkwrCN4Z1Akn7vuxz2FpPgfIZXNctpoWpwussdneo6HKstrMGU+4Oz8vnVZcbNbTjyl8UzoVJVgQQSCDwQQcEEe4NemfZJOLC3vdUm4jCJHH6dR13MVX35KL9c+1VF09\/O3VudDaaXjMpsruJnIxzIsZVXPHqK6Wtw6xeBFksrpY4xiOGOxljhjH7KBO\/wAzk1OV5TVbJx7i3+xJy2pszHLG0lJPzLxEn+NfPg\/xMlteXNnc4a0ubmZXDcqjM7Lv\/dPCn8j6V0vDT6tpxL2+mSiRl2mR7C5dyuc49gOB2A7DOartV0jULiRpW0ydGdizdKyuFVmY5JKnIB+mO9ZZLbtXciPHHhh9NuWhOTG3xQv6Mh9M\/rL2P5H1rueCpFs4p9TdA\/TAghUkrummHxHcORtjycjn4hXek1DWpLZLObTZJ4oxhetp07OMcDEgwQQOMjBwK4Lp9UktlsjpLCFWLKq6dcqyuRjeHznd8znPrmt31q1nHV3HT0jxPbWk0dxFp0avG2QRdXJI9DgFyDwTweOau\/tj0tRcRahFzFeRBsjtvCjn6shU\/wB01lI\/DV+CCdPu2wRwbSfB+RwoOPoRWnv9U1me3W0k0otCoUKn3bcDZtG0FSDlSAcZBzzS6mUsJuzVYGlSykEggggkEEYII4II9CDUV2cQ1FSaigUpSgVIqKkUClKUFnpN9d5WCG7khXnAN4beJe5PJYKuf5k1fT2OroY0N+S0uzpourBncSEBWVRLkqc\/iHGMmsdWzE6ef0pt64W0sAx3DCle4J9CPXNc85306Y3pUwahqTmULd3OYI3kk\/rcowsZCsfx84LDgd6sZbfVE\/HqIQ7FbY+sKjgMocZQy5BKkHHzr6tdYSQagnl7WLNlcAPGJFdz1E+HLSMDnvgD0qz8QQTSuGis7GZTawATPMglyIEU\/wDmF5U5A+H09ajd+lyfrN6TealdMyR3k4KRNIxkvniVUUgEl2cAfiFdm5XVUMQ83M4nk6cbxagZYmkyBs6iyFQ3I4P+Rrg8HRF2u4gV3Pps6LudUDMWjwNxIGTj3q00uHyaRQTSR9SXVLWUIsqSdKOLeDI7KSq7uoABnspqr6yeOja\/e0hl\/rc6LDIY5JJdQaKJZASNnUaQKW4PAzSYaukjxNc3O5Ldp8i9cq0KDcXRw+1xjttJ7Ed67+pKt4vTiaNng1G7doHmWLrpLKGEiOWAPClTg5AORXYHlonKIY0caPeLIiXLTxxu27ZGkjMRkrglVPcmp5fjdfrpCz1Ux9b7yXp79m\/75TbvI3bd3WxuxzjvVfJc6otst4bm66LymNW83Lywz+jvyB8LDPY7TUW\/xaZ0lK721ZMKWAPNuVz8lycZ7VqJb2xlaTS0eQA2q20cjNH5fq25aRJQe+WkL8k876dys\/rJX2p6jBsEl3cjqQpKv9blOY5BlTw3BI9O9THqOpNC9wLu56cbojHzcmQz5KjG\/J\/CasfEWkTTpazRiNkTS7ZWPmIVKskfxKULhsj2xXFoN+kOn3W6OGUm6t8RzbiCNsnxBVdSSPfOOarc11Gdy+uGKfVX6Gy4u3Nzu6QW7kJbYxVsjf8ACAQeTgYBPauXUfvWCMzNeTPGr7WeHUTOsbHsr7JDsJ+dW0WrQvHbK3Qt+tp19ACm5Y4HllIVmBZmRWxgkn9MntVVb2TWMF2Z3izPbGGOJJklaRjIjdXCsQETaSCcHJ4rN\/jf6+r+LWILpbGS4uRO5XaovZGB3kgHcHxjg\/TBrk8pqw6m++eMRTmFjLqnSHUChioLSANwc8VofEmqRNNPdiRDLazXEEeHBZvMMvTkX3VA9xz6YWvnVHMovBDFa3JOsyNtnlUKE6KjqL\/SpnnjOTU8r9Kk\/WMvtXvoXKNfzMQAd0V+8qcjPDq5B\/yq18lrWP8AtM+\/p7+h94HzOzGd3lup1O3OMZ+VUt8GguleWGJNskchihZWj2qQdoId++08Fj39K0b6dnUPvEXUHlvNi46\/XTcF6gfp9LPU6uPg24q70mK+zOpyxLP94MkbswUzap0SxTAbCvICcZH8arbjW75GZDfXBKsRlLyR1OPVXD4YfMVc3+txra25FtbS77m9fbMrsYlaSMqoCuuMg+v6vFZF2yScAZJOB2HyHyrcJb7E53XlGYkkkkknJJOSSfUn1NRSldHMNRUmooFKUoFSKipFApSlAq6\/0TvdnU6Bx0+pt3x9XZ339Hd1MY57dqqbdwrqxXcFdSV\/WAIJH54xWx1PRpZb2W+W5RLeSWSZbsTJlUfdhQgcSdQA9PYOfyqMsrKrGSs\/pnhy6uEEscY2Ftqs8kcYdh+ihdhvP0pa+G7qQyqIgpgZVlEskcWxmzgHew5O09qtb3TpL+G0a22OIrRYZI2ljjaJ1ZizlWYfC+Q24Z+fIq3v9UhEN1kRXPTj06JizuFmkjV1aRWVlZgDgbs\/o+2Km55fC+MZY+F7vqJD0xukjaRD1ojGyJ+JhLu2YXHPPFH8LXYMY6at1ZRGhjmikUyEZCFlchSRzzithb3MTSQTRLGtn93XgWBW2tHKYm6sbuSWLMdpD+oxjtVFoXiOGOW3jSBbeAX0M0p6rzM2zKjLMOFUOxwB61nLOlxxZy1sZJepsXPSiaR+QNqKVUtyecFhwOeasZfC14sZkaHAWLqMvUj6ix4zvMO7eFwc8jtVrbaXJYpeyTlFSS0eCIrLHIZmkljIKKrEldqliTjFW9xbiV3luBCU6DY1OC46EjDpFV3QBzvduI2TaCcn0rbnfg4Rg7SwklEjRruEURkfkDagIBPJ55YcDmot7GSRJZFXKQoGkOQNqswUHBPPJ9KvvBETSLexLjfJpsiqpZV3MXj+EEkCuSy0+W1tdQSZQjPaR7QXRi39Ovbaxqrl3YyYqmfw7dJcJaPEVmkClELL8QcZBDZ24OD6+lTp\/h26nUyJGNgfZveSOJS47qrOwDH6Zr0OLUorjVBBM6hreeOW2lJG3b0ozJblvY8uvsyketZie186lqYo0nW3SSOW266wsGMsjb8kj4X3A7lzyMGo55N4RnLjR7iMzB4ypt9nVBIBTqMFX15yWHbPBz2r6sdEuJxG0ce4SySInxKNzxIJGHJ4wpByeK1d3BE7XVnBIpkksLUBGuuqvVhlV3gSdjtO1RgDOOOK5\/Dq+Vewtpiiyi4vJmUSI3TR7YIu9gSAzFDgZ9vet53RwjJ6b4au7hFliiBVyQm6WOMyEcEIrMC\/PHA719WPhe6nUtGifCG3BriFHQIxVtyM4ZcEeoq+0S3aa2tVMNveRquCxmFrPaHeSUMnUBKDO8Egjn5V09KMa3OohJTInkbwJI7ZaXLLhix\/Ex759e9OWRxilutFnjG4oCOuIQY5EkBlKBwg2sdxww7epx34rnv\/AAxdwI0skQCpjqYkjdot3bqIrFk\/MCr7wnqEVvb20khAVdZJJ7lA1qFEmO+FY5z+zVVL4duLdJ5JZkiTpMAyTq5uyxGI1CPllbGSW4GOac7tnGOBvC14IzIYeBH1CvUj6ojxneYd28DHPbtVNXo7W4lfq3AhaPoHGpwXPl5cCIqC0IkO+TgIUK5Nebr2H0qsMrfWZY6TSlKtAaipNRQKUpQKkVFKCaVFTQKjA74596UoBAPcVNRSgYFTUUoAUD0pgd8UpQ2kjPeoCgelKUE1BAPcUpQSfaoAHalKAVB9KmopQTUAD2pSgbR3xU0pQKUpQDUUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQf\/2Q==',width=400,height=400)","5876124c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","265ee40f":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxAHEhUQEhIWEBEREBIWEBIVFhsVFhsRGBcZFhgbGRUYKCksGBslJxUULTEiMSkrMC86GCAzODMtNzQuLisBCgoKDg0OGxAQGC4lHyU1LS03Li0rMC0tLTMrNy8tLi8tLTUrNS03NS0tKystMjYtMC4tKy83Ly0tKy0rLS0vNf\/AABEIAKgBKwMBIgACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAAAwUCBAYBB\/\/EADkQAAICAQMCBQMDAwIEBwEAAAECAAMRBBIhBTETIkFRkQYyYRQjcUKBoVJiMzRyklNkdIK0wcIk\/8QAGQEBAQEBAQEAAAAAAAAAAAAAAAECAwYE\/8QAKxEBAAIBAgMGBgMAAAAAAAAAAAERAgMhEjFBUWFxodHwEyIykbHhUsHx\/9oADAMBAAIRAxEAPwD5vERI9aREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREDojoOnjT\/qd2qwbzVtxVncED5\/jmQ9T+nbaFW2utmqOk09zMSM5elLLCq8EopY8gED1M1zqU\/Qind+5+tZ9vrsNSrn5BljX1Kr9XTYXHhp06uonnAcaE1Ff+8kf3h83z4zcd6p0vRdTq08VKiyebByAW2\/dsUnL49cA4nnQ9COp3pSWKhxYcjk+VGf\/wDM6PSdWQ16ayttJXZpaVRvHWw2K6O7hk2AhlO4HHfJbPvKP6Z1SaXVJbYwRQLtx9AWqcDgfkiGuPOYy2RaXoeq1VYtSlmRkZkIx5gpZW2DOXIKNkAEjGe081XRtTo9geoqbW2pyDl+PKcHyt5h5TgjMtOkdSr093TWazaunqItPPkY6rUP87XrPHuJF0TUr4NVRb9w9U09m312bSpPziDjzi9ve7S1vQ9VoF32UsihgrdiVY9gyg5XOOMgZ9Jhr+j6jpy77ayi7tucq2Hxna20nY3B4ODwZ0HUzRoLNdv1C2jVXFNlYbxAP1IsdnDABWUIQOTknjI5kmq1uj6fVYtR07L+s0tlNdPil2oraw\/uNb\/Vhhx6ZPpiGI1s9tvLwULfT2rQoGqKeI6qNzKMMwyA4z+2cA8NjtIet9Ls6Nc9NmCUZwGBBBVWK54J25x2PIm51uqpbn1K6iu4W6lrERQ\/iFGcvlwwAQjIyMnk8e8h+ptjaq6yuxLkuuttQpn7XsZgGDAYbBGR6Q6YZZTMX+Ed3Q9VRX4zVMKwqsxyNwRsbWZAdyqcjBIA5E3eudGHSaKCUPiXIrvZ4qFQSX8gqXngKp3Z95va3U0JfqtaNSti6qvVCqkbvF3ahWUK6kYUV785zj9tcSn63qU1A02whvD0VaP+HD2Ej\/I+YZxyzymElPT9Ppqq7dS9oN4Zqq6VUsK1YpvcuR3KthQOducjjMWm6Lbry36dTdWr7VsbbVknkDDnG8\/6QSZuOtXWaaP369Pdp6jS63bwrVh2dHRlVsn9wgjg8Z9ZnbVRr9PXp11NSHTXajLWh0WxLNhDqApORsI2nBwF\/sOOY8fDaFbpOi6nWF1SpiamC25wmxjuwHLEbfsfv7Y74klf09q7UFgpYqULqcjLKMklFzl8YOcA4lh1zq9euXV7GP72r0RQHIL11U6hGdh+SayQfVhLLFWls6dqn1CINPpKHeohvEIWyxgEAGG3cjuMc594SdXOOnl3X+nM9P6LqepLvqqLru2g5Vdzd9qbiN7cjgZPIjSdG1OsVnSolEYq7EhQrAAkEsRg8jiWI8HqdWm\/\/pTSnTCxbUffkBr3uFlQUHecWAY4Oax6YnvXerV9Rpu2Ha1vVLrxWe\/hsmFJ9M8n\/MNced1XlyVuq6NqdJX4r1FU8uTlSV3fbvUHKZ9MgTLpXT01CWX3OyUU7A2wBnaxydqICQAcK5JPYL2PaX2vv0Wl0+qroajbbXSNOE8U3sq3VOTcX4VsAkgY5zjjvUdIsq1FF2lssFJssptpscHZ4lYdSrlQSoItODjuISM8ssZnv7OmzzVdLrurW\/Ss7o160tXYFFi2sNycqcMrYbB4wVI\/Mr20di+IShxQQLv9pLbBn+\/E6XS1J07Tft3Val69bTqNUtbYK00g7dgsC+Jku2SucYH5kfUbKKa9cV1NdraqxGoRA2dnjeJltwG1sH7fwfxkmOpN1zU2t6NqdFX4r1lUyATlSVJGVDqCSmceoE3usdEXS2311CxvCv09dZJXbm1WOHY4wSRx6cHMsepX6PTabV1UNRttFX6YJ4rXMi2q2bi\/CtjkgY5zjjvB9Q9Sp1Q12xw3janRtV38ypXcrkfwWX5kSNTPKeXv5fWVd1v6ev6O9isA6VOFaxSpHmJCkgElc7T39pXX6d9Pt3qV3oHTPqhzg\/wcGdaPD6lr7a0tR6epo65XcTWxAsraxSBgo6KT+A05vretXqF72KMV5C0r7UoAlY\/7VX\/MrennlO09l+\/NoxEQ7kREBERAREQEREBETZ6bXXbdUthxU11YsOcYrLAMc+nGYSZqLa2YzOv163WrrU1NIqpoRv0+KVrFd3jItaVuACQyluMnIBb0zJ+oXeNfqNKUrFKdPNiqtaAi1NKlofeBnfkd89iR2hw+P3efh6uV6b0y7qhcUpvNVTWuAQD4akA4B+48jgcyEaVzUbsftixayc\/1spYDH8KZbfTOofSLq7UJV69KjIw9GXU0EH\/Eu7tLp9RRVbwml1fVdK1ig4FZKWLfXn0C8kf7WQwuWrOOVdHEZntbmshgcEEFSO4I5BE636otQVX1NTdurtUVFtLXRXThiCoesklSuQAe+FM96j0xq7uq2GnbUotNTbcIA+pravYe3KnIx6GCNaJjePe3q5K2w2ksx3MxJYk5JJOSSZLoNI2ubYpGfDtfnttqra1u3rhDj+06jfbq76tPX4dSVaDS3HFCWMWGhrsd9pBNlh3HAz6A8EZm1qKh4mmtIbxLendTLvZUtLuFo1AUsiEjtjDdyAItmdeo5dP3\/Tkuk9Mu6xYKaV32MGIXIXhRk8mQ6PSvrLFqRS1jsFVe3mPHOewHqT2wZZ\/SrGt7ipKsNBrCCOCCKWIIPoZa9SC6dLOpLgHX1haQP6b7crrMD027bAPxesNZ6k45TH28XLazTtorHqcbXrsdHGc4dSVYZHfkGRdp3b0W1arV3KW2v1bU1BK9MmosZg5Yhi+NqEEcZ83PHE1tbQ\/Tf1J0dQLr1bU0sVrW0pQuPBQKwbarE2enOwD0hI1+jlX0jJSt5I2PbZWB67kWtzn8YtX\/ADI\/BOzxMrjftxuG7ON2dnfb+e06Juo3dL0alUSuw9S1m8GpDtIq025ArAhFzwQB\/SB2yDbXaCqi7YtahR9QVIBtHFZGdn\/Tz27RZOtMc47fJweZnbe1+3cxbYoVMnOEGSAPYcn5nTam4dRq1QtCKmn1VAp2Vqnh1vZYjqCoyVIA4OeVB75m99TtVpxqaPCuNdfGmH6Wuuqv9xdjrepLFWGRk\/fvyecYL8beIrf\/AD1c10volvVB+29IPm8j3Ij4UbmO1jnAAJz+DNTW6Y6NthZHOAc1uti8\/wC5eM\/iWP0l\/wAyP\/T6v\/41syr1raLQIEVA12q1i2OUVn8NadL5AzA4U7yf7CFnLKMq99fRS5jM7fq2hajS6yq3NjaVaNrDSpTUlhtrU+FauCwIZvQBvu9p71WwXX6vSlKxTXomsRVrRSLUprcPuAzuznJz2JHbiGY176e9vVxempOpdaxjc7qoz2yxAGfme6ug6R3rYjdW7I2O2VJU4\/HE67S1vqa6CqtQmns0Pi02UKoLM6oLarsZYuTuIOD5jgkDjZ6bprE1Dvkmu\/ql9RrTSpeW2upcWu+NleHHlyf6jiS0nXq3D+C2zxNp2b9m70343Y\/nEaio6c7SVPlU5VgwwyhhyPXnkehyJ1Ortt0+i1NNQ\/br6lZWQEDbatlndiCR2PmznjvJLKTQdTbRWG1FWm6UUwgcpU+mQ3WKhBGc+GC2MjeffMq\/G7ve3q5Gm5qDuVip2suQcHaylWGfYgsD\/JmAnZ2t+mR73qrXVHpQe1GqXAsOuqRLDVjAsKFT254JHJzS\/UD\/AKivS3sB4l2nc2sqhdzJfZWGIXA3YVQT64hrDV4p5dymiIh2IiICIiAiIgIiICIiBLbqbLlVGd3VBhFZiVUdvKD2mJucknc2SME5OSuMYJ9RjjEwiEqHquVyASARhsHuM5wfccD4nu8425O3OdueN2MZx7\/mYxCprdXbcqo1jsifYjMSo9OFPAh9VZYApscqq7VUsSAmQcAeg4HH4EhiEqEi3OjBwzBlxtYEhhtGBg+mAAB\/E9s1Vlh3NY7N5vMWJPm4bk++Tn3zIogqHqOU7EjIIODjg8EfwYLkgDJwCSBngE98D0zgfE8gwqZdVYm\/Fjjxc+LhiN+c53f6u57+8U6y2hiyWOjNneysQTnk5I7zo00\/TrQPOis9NCY3EBbR4Ztsyc4JDY9QNtnHaRvpdBUCqkP5sFjYm7Bejhc4AIV7\/NnHk5MOHxMf4z9nN7jjbk7QSQueMnAJx78D4EkOocnO9s7t2dx+\/wD1f9X57y5Gl0emuq84sr3XeLlwwwudh8uMKeMZwTg8YwTvPR01wx3KP3q2RQ2CavOWBbBK+Ug49wFB7Qs6sdkuV8RuRk4YgsM9yO2ffuZI2rtdBWbHNa\/bWWJQfwvYS4t0WiRd29id1+UW1CPKLSiA8k520+bBB3kZz2rerU1aewrU25NqkeYMQSOQWXgn+CRDUZRlPJqo5rOQSDgjIODgjB5H8mebiQBk4BJA9MnAJx7navwJ5EOiazVWWKEax2VV2qpYlQuQcAHsOBx+BMDc5JO5ssMMcnJGMYJ9RMIhKhM+rtdVQ2OVrOa1LEhT\/tH9P9or1dte4LY6h\/vAYjcf92Pu\/vIYgqEqamxN2HYeIMWYYjcP93+r+8V6mypg6uyuAAHDEMABtGGHI44kUQVDNrmcsSzEv95JJLcg+Y+vIB\/sJiXLAAkkKMKM8AZzx7ckzyICIiFIiICIiAiIgIiICIiAiIgIiICIiAiJuWdLurQWFMIdu07lydyowwucniyv0\/q\/mEmYjm04k\/6K7BbwnwpAY7DwSSBn\/tPwZiNPYf6G+7b9p+72\/n8QXCKbHT9ONXalbMUFjqu4LuILHA8pIzyR6yM0OucowwMnKnhfc+w\/MzOnto2vtYZCurD0BJCnI+05U49eIJnvWtf094oLLZhFavLOu0BGsuqyQpY53VKAOfv9BzNXq3R36ZyxUqXZVGfPtBYKSvsdp7E44zjiYKdXpcMDfXwxBBdeFLBjkexazP8A1N7mRWfqLxsbxXC+YKdzAbjnOD2zk8+sOccV\/Vs1Yk1Wkst4Cns\/fj7FLMMn1AB47zYXo+pZQwqY7tu0DBbzYC+QHIByOceo9xDc5RHVoxNuvpt1pVVQsbG2oBg+bCMQf9OBbXnOMZ\/BxDVpnuIUKdzKWUHjKBSxIz3GFPxC8UdqKJ6yle4I\/nj1x\/8AR+J5CkREBERAREQEREBERAREQEREBERAREQEREBERAREQB5l0PqOytlZVHk8NvNn\/iL+nYnjGAW0qn8bz+JSxDM4xPNd0\/U11KhdqkqijeS28lQQCTnnAZsD0+J6v1PcEZAiAupVrBu3\/wDC8HOc98ZOfcyn07BHUnGA6k7huXAIPK\/1D8es6c6jp2rfLAFmcmx3Zwowg+wADKZDDBKt27nmHLPHHGfptoW\/U91wtVlU+MHBPm3De1p4JPYeO4x7YmNP1I+nUotVajaqqRu3Kqv4gAbPvjn8Tbt1fTnXAqXcqMBw6AvnJO4bjg5OzPbGDjiZafX9OqcEVBMF8Niw8Heo3At2wwzjB4hn5a+iWs31TdxtREwwOF3AYDl9pGcYyTn3zI7\/AKmusztVaga9mELDjbevv\/5lz\/7V\/OZ9RqenKAUqBYeJuybMF\/DsC4X\/AMMsaj92Rg5HfOPRNfTpK1FjKx8fcUZCdoCMFIYA\/cWGTnKheAT2FY1cYMbPqey7G9VG1rXG3jLuLduc5zg3Mf8AElv+rbH2bUClHVmBOQSGV8DABUEqPUnjv3Jxq1VFWsN4sC1tvfbsyM7jitgAcBsDJxnDds8SVuo6exVXci4ouTJqOFLadKwowpJzYGbd6D1ySIJjH+H5aul+prNMQQiELtwMv\/SKFXLA5P8AyyceuWz6Yw1X1BZqSrMiblrdFI3ADehrYgA8Egj4EfUOup1gp8IY2V7W8u30XGeODw3lGVHoeTKeG8cMZi+Gm31TqD9TfxHABwBhRgdyzHHuzM7H8sZqREOsRERUEREKREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQMth9j8RsPsfiIhmzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiCzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiCzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiCzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiCzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiCzYfY\/EbD7H4iILNh9j8RsPsfiIgs2H2PxGw+x+IiC3\/\/Z',width=400,height=400)","fafdecab":"df = pd.read_csv('..\/input\/old-newspapers\/old-newspaper.tsv', sep='\\t', error_bad_lines=False)","2a55d3da":"df.head()","9faaf2ee":"df.dtypes","97b8edb7":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/image.slidesharecdn.com\/calpercorporainlanguageteachingbluemel-140211135554-phpapp01\/95\/how-to-use-corpora-in-language-teaching-3-638.jpg?cb=1392826645',width=400,height=400)","ac84f6df":"languages = df['Language'].unique()\nlanguages","c310d9b1":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('Language').size()\/df['Source'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","8aacd9c6":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSOISgc5rCQ0axyOcX5mv71sW1H3Ei3wfrLFWM9Hob6QcYlDBeW',width=400,height=400)","da9a93d6":"sns.countplot(df[\"Language\"])\nplt.xticks(rotation=90)\nplt.show()","de1463e9":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Language)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","a855b143":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQjqb_ONwh4_EnYcZkUtA2DXMcJ-bED_nSScSuNyxtv8Bae95TA',width=400,height=400)","8ac119ec":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcT17WJhydrgMiFRGqqH_YFqO32yhDJURHPAonij1mLcfJdM5KqX',width=400,height=400)","eb118482":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","36a8fea9":"Image nplforhackers.io","ef20bee9":"Image pt.slideshare.net","04bbcafc":"Image crcpress.com","1d995027":"Image routledge.com - Oh my, They're already data driven. And I don't drive anything else. ","c0031644":"In linguistics, a corpus (plural corpora) or text corpus is a large and structured set of texts (nowadays usually electronically stored and processed). In corpus linguistics, they are used to do statistical analysis and hypothesis testing, checking occurrences or validating linguistic rules within a specific language territory. https:\/\/en.wikipedia.org\/wiki\/Text_corpus","dc1b4e75":"Image slideshare.net","f863db29":"Image twitter.com"}}