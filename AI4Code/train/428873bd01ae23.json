{"cell_type":{"ea18b847":"code","9d9967dc":"code","6724a40b":"code","db69368f":"code","50e6bcae":"code","03d0a78e":"code","8fe03100":"code","131de941":"code","842186bc":"code","900dc8d3":"code","5b1101a9":"code","226fce40":"code","eb6d1e76":"code","a88522d9":"code","84cd7c06":"code","0dfe5c66":"code","6e8c0454":"code","dd5e4465":"code","c076dd18":"code","8a8c23fb":"code","b3ac0f39":"code","999c39c1":"code","7c6b8a98":"code","796db7d8":"code","83115676":"code","91866b32":"code","4a08e544":"code","50a6834b":"code","10ef2a87":"code","24aa2512":"code","eadcf9dd":"code","ed26b172":"code","e2face17":"code","2ac38493":"code","899a90b3":"code","0e7e924b":"code","c1625013":"code","2051f4d8":"code","c21e7273":"code","7dde6ec9":"code","9d423a69":"code","4f5c379e":"markdown","1088e624":"markdown","e88e56b1":"markdown","7eb9a54f":"markdown","412f4536":"markdown","cd1cd7e1":"markdown","505b496d":"markdown","03fa0b7f":"markdown","7dcbe5fb":"markdown","8048a9c4":"markdown","e1189e41":"markdown","cd91d042":"markdown","344b24cb":"markdown","17cb55cb":"markdown","105c9101":"markdown","67709f1b":"markdown","25c2665d":"markdown","80ab8723":"markdown","f6e397d5":"markdown","cadcfab5":"markdown","5f8b8d03":"markdown","eff38ebd":"markdown","544a0bf6":"markdown","83173ec0":"markdown","1f60bea3":"markdown","2327ff39":"markdown","daedf9ab":"markdown","90126890":"markdown","bd67b768":"markdown","57c687cd":"markdown","1c2a860c":"markdown"},"source":{"ea18b847":"import pandas as pd\nimport numpy as np\nimport ast\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport re\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport warnings\nwarnings.filterwarnings('ignore')","9d9967dc":"districts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\nproducts_info = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")","6724a40b":"districts_info.shape","db69368f":"districts_info.head()","50e6bcae":"# missing values in the dataset?\ndef percent_missing(dm):\n\n    # Calculate total number of cells in dataframe\n    totalCells = np.product(dm.shape)\n\n    # Count number of missing values per column\n    missingCount = dm.isnull().sum()\n\n    # Calculate total number of missing values\n    totalMissing = missingCount.sum()\n\n    # Calculate percentage of missing values\n    print(\"The dataset contains\", round(((totalMissing\/totalCells) * 100), 2), \"%\", \"missing values.\")\n\npercent_missing(districts_info)\n   ","03d0a78e":"products_info.shape","8fe03100":"products_info.head()","131de941":"percent_missing(products_info)","842186bc":"#overview of all engagement files as one file\nfrom pathlib import Path\n\n# create a Path instance and filter for only csv files\nfiles = Path(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\").rglob(\"*.csv\")\n\n# read in all the csv files\nall_eng = [pd.read_csv(file) for file in files]\n\n# lump into one table\nall_eng = pd.concat(all_eng)\n\nall_eng","900dc8d3":"all_eng.shape","5b1101a9":"percent_missing(all_eng)","226fce40":"districts_info.info()","eb6d1e76":"districts_info = districts_info[districts_info.state.notna()].reset_index(drop=True)","a88522d9":"districts_info.shape","84cd7c06":"temp_sectors = products_info['Sector(s)'].str.get_dummies(sep=\"; \")\ntemp_sectors.columns = [f\"sector_{re.sub(' ', '', c)}\" for c in temp_sectors.columns]\nproducts_info = products_info.join(temp_sectors)\nproducts_info.drop(\"Sector(s)\", axis=1, inplace=True)\n\ndel temp_sectors","0dfe5c66":"products_info['primary_function_main'] = products_info['Primary Essential Function'].apply(lambda x: x.split(' - ')[0] if x == x else x)\nproducts_info['primary_function_sub'] = products_info['Primary Essential Function'].apply(lambda x: x.split(' - ')[1] if x == x else x)\n\n# Synchronize similar values\nproducts_info['primary_function_sub'] = products_info['primary_function_sub'].replace({'Sites, Resources & References' : 'Sites, Resources & Reference'})\nproducts_info.drop(\"Primary Essential Function\", axis=1, inplace=True)","6e8c0454":"products_info","dd5e4465":"PATH = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \n\ntemp = []\n\nfor district in districts_info.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    temp.append(df)\n    \n    \nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)","c076dd18":"engagement.shape","8a8c23fb":"fig, ax = plt.subplots(1, 1, figsize=(8,4))\n\nsns.histplot(engagement.groupby('district_id').time.nunique(), bins=30)\nax.set_title('Unique Days of Engagement Data per District')\nplt.show()","b3ac0f39":"# Delete previously created engagement dataframe and create a new one\ndel engagement\n\ntemp = []\n\nfor district in districts_info.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    if df.time.nunique() == 366:\n        temp.append(df)\n\nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)\n\n# Only consider districts with full 2020 engagement data\ndistricts_info = districts_info[districts_info.district_id.isin(engagement.district_id.unique())].reset_index(drop=True)\nproducts_info = products_info[products_info['LP ID'].isin(engagement.lp_id.unique())].reset_index(drop=True)","999c39c1":"for district in districts_info.district_id.unique()[:10]:\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    print(f'District {district} uses {df.lp_id.nunique()} unique products.')\n    \nprint(f'\\nConcatenated engagement data contains {engagement.lp_id.nunique()} unique products.')","7c6b8a98":"print(len(engagement))\nengagement = engagement[engagement.lp_id.isin(products_info['LP ID'].unique())]\nprint(len(engagement))","796db7d8":"product_eng=pd.merge(left=engagement, right=products_info,\n         on=None, left_on='lp_id', right_on='LP ID') \n\nproduct_eng.head()","83115676":"product_eng.shape","91866b32":"percent_missing(engagement)\npercent_missing(product_eng)","4a08e544":"def fill_mean(dataframe,column):\n    #replace missing values with mean \n    dataframe[column].fillna(dataframe[column].mean(), inplace = True)\n    ","50a6834b":"#checking for skewness\ndistricts_info.skew()\nproducts_info.skew()\nengagement.skew()","10ef2a87":"us_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}\n\ndistricts_info['state_abbrev'] = districts_info['state'].replace(us_state_abbrev)\ndistricts_info_by_state = districts_info['state_abbrev'].value_counts().to_frame().reset_index(drop=False)\ndistricts_info_by_state.columns = ['state_abbrev', 'num_districts']\n\nfig = go.Figure()\nlayout = dict(\n    title_text = \"Number of Available School Districts per State\",\n    geo_scope='usa',\n)\n\nfig.add_trace(\n    go.Choropleth(\n        locations=districts_info_by_state.state_abbrev,\n        zmax=1,\n        z = districts_info_by_state.num_districts,\n        locationmode = 'USA-states', # set of locations match entries in `locations`\n        marker_line_color='orange',\n        geo='geo',\n        colorscale=px.colors.sequential.Teal, \n    )\n)\n            \nfig.update_layout(layout)   \nfig.show()","24aa2512":"districts_info.pp_total_raw.unique()\ntemp = districts_info.groupby('locale').pp_total_raw.value_counts().to_frame()\ntemp.columns = ['amount']\n\ntemp = temp.reset_index(drop=False)\n\ntemp = temp.pivot(index='locale', columns='pp_total_raw')['amount']\ntemp = temp[['[4000, 6000[', '[6000, 8000[', '[8000, 10000[', '[10000, 12000[',\n       '[12000, 14000[', '[14000, 16000[', '[16000, 18000[', \n       '[18000, 20000[', '[20000, 22000[', '[22000, 24000[', ]]\n\n\nfig, ax = plt.subplots(1, 2, figsize=(24,4))\n\nsns.countplot(data=districts_info, x='locale', ax=ax[0], palette='GnBu')\n\nsns.heatmap(temp, annot=True,  cmap='GnBu', ax=ax[1])\nax[1].set_title('Heatmap of Districts According To locale and pp_total_raw')\nplt.show()","eadcf9dd":"fig, ax = plt.subplots(2, 2, figsize=(16,8))\n\nsns.countplot(data=districts_info, x='pct_black\/hispanic', order=['[0, 0.2[', '[0.2, 0.4[', '[0.4, 0.6[', '[0.6, 0.8[','[0.8, 1[', ], palette='GnBu', ax=ax[0,0])\nax[0,0].set_ylim([0,135])\nsns.countplot(data=districts_info, x='pct_free\/reduced', order=['[0, 0.2[', '[0.2, 0.4[', '[0.4, 0.6[', '[0.6, 0.8[','[0.8, 1[', ], palette='GnBu', ax=ax[0,1])\nax[0,1].set_ylim([0,135])\n\nsns.countplot(data=districts_info, x='county_connections_ratio', palette='GnBu', ax=ax[1,0])\nax[1,0].set_ylim([0,135])\nsns.countplot(data=districts_info, x='pp_total_raw', order=['[4000, 6000[', '[6000, 8000[', '[8000, 10000[', '[10000, 12000[',\n       '[12000, 14000[', '[14000, 16000[', '[16000, 18000[', \n       '[18000, 20000[', '[20000, 22000[', '[22000, 24000[', ], palette='GnBu', ax=ax[1,1])\nax[1,1].set_ylim([0,135])\nax[1,1].set_xticklabels(ax[1,1].get_xticklabels(), rotation=90)\n\nplt.tight_layout()\nplt.show()\n","ed26b172":"def replace_ranges_pct(range_str):\n    if range_str == '[0, 0.2[':\n        return 0.1\n    elif range_str == '[0.2, 0.4[':\n        return 0.3\n    elif range_str == '[0.4, 0.6[':\n        return 0.5\n    elif range_str == '[0.6, 0.8[':\n        return 0.7\n    elif range_str == '[0.8, 1[':\n        return 0.9\n    else:\n        return np.nan\n    \ndef replace_ranges_raw(range_str):\n    if range_str == '[4000, 6000[':\n        return 5000\n    elif range_str == '[6000, 8000[':\n        return 7000\n    elif range_str == '[8000, 10000[':\n        return 9000\n    elif range_str == '[10000, 12000[':\n        return 11000\n    elif range_str ==  '[12000, 14000[':\n        return 13000\n    elif range_str ==  '[14000, 16000[':\n        return 15000\n    elif range_str == '[16000, 18000[':\n        return 17000\n    elif range_str ==  '[18000, 20000[':\n        return 19000\n    elif range_str ==  '[20000, 22000[':\n        return 21000\n    elif range_str ==  '[22000, 24000[':\n        return 21000\n    else: \n        return np.nan\n    \ndistricts_info['pct_black_hispanic_num'] = districts_info['pct_black\/hispanic'].apply(lambda x: replace_ranges_pct(x))\ndistricts_info['pct_free_reduced_num'] = districts_info['pct_free\/reduced'].apply(lambda x: replace_ranges_pct(x))\ndistricts_info['pp_total_raw_num'] = districts_info['pp_total_raw'].apply(lambda x: replace_ranges_raw(x))\n\ndef plot_state_mean_for_var(col):\n    temp = districts_info.groupby('state_abbrev')[col].mean().to_frame().reset_index(drop=False)\n\n    fig = go.Figure()\n    layout = dict(\n        title_text = f\"Mean {col} per State\",\n        geo_scope='usa',\n    )\n\n    fig.add_trace(\n        go.Choropleth(\n            locations=temp.state_abbrev,\n            zmax=1,\n            z = temp[col],\n            locationmode = 'USA-states', # set of locations match entries in `locations`\n            marker_line_color='red',\n            geo='geo',\n            colorscale=px.colors.sequential.Teal, \n        )\n    )\n\n    fig.update_layout(layout)   \n    fig.show()\n\nplot_state_mean_for_var('pct_black_hispanic_num')\nplot_state_mean_for_var('pct_free_reduced_num')\nplot_state_mean_for_var('pp_total_raw_num')","e2face17":"## Ploting\ndef bar_plot(df, x_col, y_col, title=''):\n    plt.figure(figsize=(20, 7))\n    sns.barplot(data = df, x=x_col, y=y_col)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(x_col, fontsize=16)\n    plt.ylabel(y_col, fontsize=16)\n    plt.show()\n    \ndef count_plot(df, col, title, hue=None):\n    plt.figure(figsize=(20, 7))\n    sns.countplot(data = df, y=col, hue=hue, order=df[col].value_counts().index)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(col, fontsize=16)\n    plt.ylabel(\"Count\", fontsize=16)\n    plt.show()\n    \ndef pie_plot(df, col, title=''):\n    count = df[col].value_counts()\n    plt.figure(figsize=(20, 7))\n    plt.pie(list(count), labels=count.index, autopct='%1.2f%%')\n    plt.title(title, size=20)\n    plt.show()\n    \n    \ndef time_plot(df, x_col, y_col, title=''):\n    plt.figure(figsize=(20, 7))\n    sns.lineplot(data=df, x=x_col, y=y_col)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(x_col, fontsize=16)\n    plt.ylabel(y_col, fontsize=16)\n    plt.show()","2ac38493":"count_plot(districts_info, 'state', 'State Distribution')","899a90b3":"pie_plot(districts_info, 'locale', 'Local Distribution')","0e7e924b":"count_plot(districts_info, 'pct_black\/hispanic', 'Black\/Hispanic Distribution', hue='locale')","c1625013":"pie_plot(districts_info, 'pct_free\/reduced', \"Free or Reduced Distribution\")","2051f4d8":"result = products_info['Provider\/Company Name'].value_counts()\nresult = result.head(10)\ntop_providers = pd.DataFrame({'Company': result.index, 'Count': result})\nbar_plot(top_providers, \"Count\", \"Company\", title='Top 10 Providers\/Companies')","c21e7273":"def plot_hist(df:pd.DataFrame, column:str, color:str)->None:\n    sns.displot(data=df, x=column,color=color, kde=True, height=7, aspect=2)\n    plt.title(f'Distribution of {column}', size=20, fontweight='bold')\n    plt.xticks(rotation=90)\n    plt.show()\n    \ndef plot_count(df:pd.DataFrame, column:str) -> None:\n    plt.figure(figsize=(12, 7))\n    sns.countplot(data=df, x=column,order=df[column].value_counts().index)\n    plt.title(f'Distribution of {column}', size=20, fontweight='bold')\n    plt.xticks(rotation=90)\n    plt.show()\n    \ndef plot_bar(df:pd.DataFrame, x_col:str, y_col:str, title:str, xlabel:str, ylabel:str)->None:\n    plt.figure(figsize=(12, 7))\n    sns.barplot(data = df,x=x_col,y=y_col)\n    plt.title(title, size=20)\n    plt.xticks(rotation=90, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(xlabel, fontsize=16)\n    plt.ylabel(ylabel, fontsize=16)\n    plt.show()\n    \ndef correlation(df:pd.DataFrame):\n    corr=df.corr()\n    sns.heatmap(corr,annot=True,square=True)\n    fig=plt.gcf()\n    figsize=fig.get_size_inches()\n    fig.set_size_inches(figsize*4)\n    plt.show()","7dde6ec9":"plot_hist(districts_info,'state','lightblue')","9d423a69":"plot_count(districts_info,'locale')","4f5c379e":"<p style=\"color:purple;font-size:150%;\">dropping 57 school districts with NaN states (57\/233 ~ 25%) <\/p> ","1088e624":"<h3> <p style=\"color:blue; font-size:100%;\">Loding and Getting An Overview of the Dataset<\/p>\n <\/h3>","e88e56b1":" <p style=\"color:purple; font-size:200%;\">all engagement dataset folder shows that it contains (22324190 rows and 4 column. with missing values of 6.04% <\/p>","7eb9a54f":"<h3><p style=\"color:blue;font-size:100%;\">Preprocessing<h3><\/p>\n    <p style=\"color:purple; font-size:100%;\"> Handling Outliners<\/p><p style=\"color:purple;font-size:100%;\"> either Drop Null values or use other methods  <\/p> \n","412f4536":"<h3><p style=\"color:blue; font-size:200%;\">Problem Statement<\/h3>\nThe COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow.\n\n","cd1cd7e1":"<p style=\"color:blue; font-size:200%;\">Loading The datasets<\/p>","505b496d":"<p style=\"color:purple; font-size:100%;\">Places Provide from 20% - 40% of Aid for their students, and some school provide aid more than that. It seems Most students get Aid In some way from the school. it could be a free lunch or payment.<\/p>","03fa0b7f":"<b>features of the Product Dataset<\/b><br>\n<b>lp_id:<\/b> The unique identifier of the product\n\n<b>pct_access <\/b>: Percentage of students in the district have at least one page-load event of a given product and on a given day\n\n<b>engagement_index<\/b>: Total page-load events per one thousand students of a given product and on a given day","7dcbe5fb":"<p style=\"color:purple; font-size:100%;\">top 3 school district are Connecticut, Utah and Massachusets<\/p>","8048a9c4":"<p style=color:purple>product_engagement datasets cointain 1169158  rows and 11  features.<\/p>","e1189e41":" <p style=\"color:purple; font-size:200%;\">Districts dataset  shows that it contains  233 rows and 7 column   with 27.1% missing values<\/p>","cd91d042":"<p style=color:purple>the original engagement datasets cointain 22324190 rows and 5  features. here we have 17435744 row and 5 columns<\/p>","344b24cb":"<h2><p style=\"color:blue; font-size:200%;\">Data sets <\/p> <\/h2> \n    <br>\n<p> The data provided are a set of daily edtech engagement data from diffrent school districts in 2020,include three basic sets of files <br>\n    <b>1,district_info.csv<\/b> - which gives information about the educational district.<br>\n<b>2,Products_info.csv<\/b> -Which contains more description on the platforms used.<br>\n<b>3,Engagement data <\/b>-This is a folder that holds datasets that explain the enagement of the user and the varius platforms based on their distrcits.<br>\n    collected comprised of 233 school districts toatllying 22 M datapoints to investiagte. The data gives insights to educational\/ learning platforoms used within the period of 1st January 2020 to 31st Decemeber 2020 which is  begining,first and second wave of global spread of covid 19.\n\n <\/p>","17cb55cb":"![corona19.jpeg](attachment:de4e07bf-d016-47b8-883d-ff4e05975d3f.jpeg)\n","105c9101":"school districts (133) there are 366 unique days available.but for 43 school districts there are less than 366 unique days of data available. ","67709f1b":"<p style=\"color:blue; font-size:200%;\"> finding % of missing values in the datasets<\/p>","25c2665d":"<b>features of the Product Dataset<\/b><br>\n<b>LP ID:<\/b> The unique identifier of the product\n\n<b>URL<\/b> : Web Link to the specific product\n\n<b>Product Name<\/b> :Name of the specific product\n\n<b>Provider\/Company Name<\/b> : Name of the product provider\n\n<b>Sector(s)<\/b>; Sector of education where the product is used\n\n<b>Primary Essential Function<\/b>: The basic function of the product. There are two layers of labels here:\n\nProducts are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations.\nEach of these categories have multiple sub-categories with which the products were labeled","80ab8723":"<h2><p style=\"color:blue;\">what is covid 19 ? and how it impacts the education system form current over views and Citations <\/h2>\n<br>\n\nCoronavirus disease 2019 (COVID-19) is defined as illness caused by a novel coronavirus now called severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2; formerly called 2019-nCoV), which was first identified amid an outbreak of respiratory illness cases in Wuhan City, Hubei Province, China. It was initially reported to the WHO on December 31, 2019. On January 30, 2020, the WHO declared the COVID-19 outbreak a global health emergency. On March 11, 2020, the WHO declared COVID-19 a global pandemic, its first such designation since declaring H1N1 influenza a pandemic in 2009. \n<br>\n    <br>\n\nThe COVID-19 pandemic has created the\nlargest disruption of education systems in\nhistory, affecting nearly 1.6 billion learners\nin more than 190 countries and all continents. Closures of schools and other learning spaces have impacted 94 per cent of the\nworld\u2019s student population, up to 99 per cent\nin low and lower-middle income countries. \n\n\n","f6e397d5":"<p style=\"color:blue; font-size:200%;\">Exploratory Data Analysis\ud83d\udcca <\/p>","cadcfab5":"<b>features of the Districts Dataset<\/b>\n\n<b>district_id<\/b>: The unique identifier of the school district\n\n<b>state <\/b>: The state where the district resides in\n\n<b>locale<\/b>: NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural.\n\n<b>pct_black\/hispanic <\/b>: Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n\n<b>pct_free\/reduced <\/b>; Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n\n<b>county_connections_ratio <\/b>: ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households)\n\n<b>pp_total_raw <\/b>: Per-pupil total expenditure (sum of local and federal expenditure). The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district.","5f8b8d03":"<p style=\"color:blue; font-size:200%;\"> Acknowledgment  <h2>","eff38ebd":"<h3><p style=\"color:blue; font-size:200%;\">Business Need<\/h3> \n\n<p>This analaysis aims to answers questions below so that we can come up with a solutions to inequality in the education system in the time of covid 19,so looming with analaysis that will set educated ,statistically  caltivated policies and suggest better solutions to the government.\n<\/p>\n<p> With the Help of Learnplatform and world wide data analysist  diffrent solutions will be expected that will change the way how education is giving through the time of the pandamic.<\/p>\n<b>What is the state of digital learning in 2020?<br>\n   how does the engagement of digital learning relate to factors such as <br>\n    1,district demographics <br>\n    2,broadband access<br>\n    3,state\/national level policies and events? <\/b>\n","544a0bf6":" <p style=\"color:purple; font-size:100%;\">  overview of all engagement files as one  <\/p>","83173ec0":"<p style=\"color:blue; font-size:200%;\">libraries ","1f60bea3":"<h1> <u> <p style=\"color:blue; font-size:200%;\">COVID-19 Impact on Digital Learning with LearnPlatform <\/p><\/u><\/h1>","2327ff39":"<p style=\"color:purple; font-size:100%;\">my acknowledgment goes to <br>\n1,10 Academy  for getting me to this competetion<br>\n2,iamleonie\nLeonie\nKaggle Master\nFrankfurt, Hesse\nTechnical Project Lead\nthat shared \"How To Approach Analytics Challenges<br>\"\n3,everyone in the kaggle community that share their experineces knowledge!<\/p>","daedf9ab":" <p style=\"color:purple; font-size:200%;\">product dataset  shows that it contains  372 rows and 6 column. with missing values of 1.84% <\/p>","90126890":" <p style=\"color:blue; font-size:150%;\">use district_id to extract and concatenate the files in the engagement folder<\/p>","bd67b768":"<p style=\"color:purple;font-size:150%;\">Splitting up the Primary Essential Function<\/p>","57c687cd":"<h3> <p style=\"color:blue; font-size:200%;\">About  LearnPlatform  <\/h3>\n\n<br>\nLearnPlatform is an edtech effectiveness system that equips education organizations to control their \"Wild West\" ecosystem by empowering them to organize, streamline, and analyze their technology to save time, save money, and improve outcomes.<br>\n<br>\n LearnPlatform helps educators manage all aspects of their EdTech ecosystem with a single system to organize, streamline and analyze all teaching and learning tools. ... LearnPlatform empowers educators and their organizations to determine, manage and measure the best technology for their classrooms.\n <br>\n <br>\nLearnPlatform connects the largest network of educators, administrators and organizations improving student outcomes through data-driven instructional, budget and resource decisions.","1c2a860c":" <p style=\"color:purple; font-size:200%;\">product_Engagement dataset  shows that it contains  372 rows and 6 column. with missing values of 2.02 % <\/p>"}}