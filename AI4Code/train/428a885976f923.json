{"cell_type":{"4d50ee4a":"code","368e3fd9":"code","12c4cd4b":"code","3359d18a":"code","2bc01500":"code","5269b76b":"code","9a734635":"code","36d333d7":"code","7c806ab5":"code","fe0a274f":"code","908513ff":"code","018f4649":"markdown","71feb084":"markdown","fe392f8f":"markdown","4940969e":"markdown","8fdcb4ef":"markdown","e2bcc8ec":"markdown","5ec0c5ec":"markdown","a679771f":"markdown","5c48306d":"markdown"},"source":{"4d50ee4a":"import numpy as np \nimport pandas as pd\n#import gc\n#import sklearn\nfrom sklearn.model_selection import train_test_split\nfrom keras.utils import to_categorical\nfrom tqdm import tqdm\nfrom keras.preprocessing import image\nfrom keras.preprocessing.image import img_to_array, load_img, ImageDataGenerator\nimport cv2\nfrom random import shuffle\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten, Dense, Activation, BatchNormalization\n\n\ndata = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')\n###Converting Image label as string from integer.\n","368e3fd9":"data['label'] = data['label'].astype('string')\n\nframe  =[\n        data[data['label']=='3'].sample(n=900,replace=True),\n        data[data['label']=='1'].sample(n=900,replace=True),\n        data[data['label']=='2'].sample(n=900,replace=True),\n        data[data['label']=='4'].sample(n=900,replace=True),\n        data[data['label']=='0'].sample(n=900,replace=True)]\n\n\ndf = pd.concat(frame)","12c4cd4b":"\nimages_train = []\nlabel_image = []\n\nfor (file,label) in tqdm(zip(df['image_id'],df['label'])):\n    img = cv2.imread('..\/input\/cassava-leaf-disease-classification\/train_images\/'+file, cv2.IMREAD_COLOR)       \n    img = cv2.resize(img, (100,100))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    imgs = img.reshape((1,) + img.shape)\n    img = image.img_to_array(img)\n    data_generator = ImageDataGenerator(rotation_range=45, \n                                        brightness_range=(0.5, 1.2),\n                                        width_shift_range=0.2,\n                                        height_shift_range=0.2,\n                                        shear_range=10,\n                                        horizontal_flip=True,\n                                        vertical_flip=True,\n                                        zoom_range=[.1, .8])\n    data_generator.fit(imgs)\n    image_iterator = data_generator.flow(imgs)\n    for x in range(3):\n        img_transformed=image_iterator.next()[0].astype('int')\/255\n        images_train.append(img_transformed)\n        label_image.append(label)","3359d18a":"train = np.array(images_train)","2bc01500":"\nxtrain, xtest, ytrain, ytest = train_test_split(train,label_image, test_size=0.2, random_state = 42 )\n\n","5269b76b":"Y = ytrain\nYtrain = to_categorical(Y)\n\nz = ytest\nYtest = to_categorical(z)\n\n#del ytrain,ytest\n#gc.collect()","9a734635":"from keras.preprocessing import image\n\nimg = cv2.imread('..\/input\/cassava-leaf-disease-classification\/test_images\/2216849948.jpg', cv2.IMREAD_COLOR)\nimg = cv2.resize(img, (100, 100))\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nimg = image.img_to_array(img)\nimg = img\/255.0\nTest = np.array(img)\nTest = Test.reshape(1,Test.shape[0],Test.shape[1],Test.shape[2])","36d333d7":"model = Sequential()\nmodel.add(Conv2D(32, (3, 3), activation='relu', input_shape=(100, 100, 3)))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(128, (3, 3), activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(512, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\nmodel.add(Dense(5, activation='sigmoid'))\n\n\nmodel.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy'])\n\nmodel.summary()","7c806ab5":"model.fit(xtrain, Ytrain,epochs=40, batch_size = 40, validation_data=(xtest, Ytest))","fe0a274f":"pred = model.predict(Test)\nlabel_predicted=np.argmax(pred, axis=1)\n\nlabel_predicted\n","908513ff":"submission = pd.DataFrame({'image_id':'2216849948.jpg' ,'label':label_predicted})\nsubmission.to_csv(\"submission.csv\", index = False, header = True)","018f4649":"## Image Processing","71feb084":"### Image Processing Submission test file","fe392f8f":"### Splitting the data into train and test","4940969e":"### Also used 'del' & 'gc.collect()' free up some RAM memory.","8fdcb4ef":"### I decided to cut down some training Images also their was imbalance of dataset as code '3' is in majority, thus, adjusted random sampling ","e2bcc8ec":"# Keras Model for Casava Leaf Disease Classification","5ec0c5ec":"## Building the Model","a679771f":"### Categorisation","5c48306d":"### Importing Required Library for the classification"}}