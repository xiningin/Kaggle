{"cell_type":{"02cddbb4":"code","61e5d76e":"code","70f27225":"code","482a7461":"code","1d320989":"code","bc4197ac":"code","930f55c9":"code","506d1ce2":"code","36c4560c":"code","81bb87e3":"code","dcad2796":"code","1155dc88":"code","290925cc":"code","d5247330":"code","28d99969":"code","6ee54c20":"code","b9deb29d":"code","8a1ed0f9":"code","1a677423":"code","40bd1522":"code","d07667ec":"code","a85b8fae":"code","af17974d":"code","126f6ba5":"code","aba8d00d":"code","50abb7c0":"code","c83f9816":"code","4df0af54":"code","6d8f8fdf":"code","7a89b8c1":"code","9e06a593":"code","8523e84e":"code","8c35c49f":"code","eac0e819":"code","a5b14f29":"code","be61c4d2":"code","1d5c3c89":"code","2f7e02c8":"code","1d28e970":"code","a431c0fb":"code","d46b6869":"code","577f66aa":"code","36323c20":"code","921b2f24":"code","5fb46d46":"code","adffe88b":"code","b1cddfa0":"code","24141666":"code","314d3102":"code","d04b91a7":"code","e2b9b164":"code","d0bc9b24":"code","30647fcf":"code","b136ba58":"code","f71a1608":"code","7ceb68cc":"code","9a563c9d":"code","f842b2a3":"code","978811c2":"code","01214f58":"code","58a4a9b2":"code","d178b4ec":"code","e6566f3b":"code","b2ec7462":"code","affb8a78":"code","ae13e638":"code","3e1ba7aa":"code","e080007f":"code","12bf08fb":"code","f9a2c434":"code","a25225e8":"code","60b50e70":"code","36715344":"code","39611188":"code","033e8122":"markdown","ee206dcd":"markdown","2050489f":"markdown","d9c19de1":"markdown","6b79a159":"markdown","62d932be":"markdown","7d30e2b7":"markdown","bd233541":"markdown","4ed7c2ff":"markdown","eb7434fc":"markdown","9ff1b3cf":"markdown","23d5cf4d":"markdown","536f6473":"markdown","02c676aa":"markdown","262a86f9":"markdown","8add9c91":"markdown","98d2192e":"markdown","1a898bf3":"markdown","2ab93969":"markdown","ef1e2f60":"markdown","1cd8e1a7":"markdown","832b9b25":"markdown","3e6ae523":"markdown","532fa4e4":"markdown","6dd7c230":"markdown","2ba8a0ea":"markdown","c8466e9b":"markdown","9a18c1a1":"markdown"},"source":{"02cddbb4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","61e5d76e":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","70f27225":"df = pd.read_csv(\"..\/input\/insurance.csv\")","482a7461":"df.shape","1d320989":"df.columns","bc4197ac":"df.info()","930f55c9":"df.head(5).T    ","506d1ce2":"df.tail(10).T","36c4560c":"df.isna().sum()","81bb87e3":"all_columns         = list(df)\nnumeric_columns     = ['age', 'bmi', 'children', 'expenses']\ncategorical_columns = [x for x in all_columns if x not in numeric_columns ]\n\nprint('\\nNumeric columns')\nprint(numeric_columns)\nprint('\\nCategorical columns')\nprint(categorical_columns)","dcad2796":"df.isnull().apply(lambda x : [ sum(x), (sum(x) * 100) \/ df.shape[0]] )","1155dc88":"df.describe().T","290925cc":"from scipy.stats import kurtosis, skew, stats","d5247330":"print(\"Summary Statistics of Medical Costs\")\nprint(df['expenses'].describe())\nprint(\"skew:  {}\".format(skew(df['expenses'])))\nprint(\"kurtosis:  {}\".format(kurtosis(df['expenses'])))\nprint(\"missing charges values: {}\".format(df['expenses'].isnull().sum()))\nprint(\"missing smoker values: {}\".format(df['smoker'].isnull().sum()))","28d99969":"f, axes = plt.subplots(1, 2)\nsns.kdeplot(df['expenses'], ax=axes[0])\nsns.boxplot(df['expenses'], ax=axes[1])\nplt.show()","6ee54c20":"insur_corr=df.corr()\ninsur_corr","b9deb29d":"insur_cov=df.cov()\ninsur_cov","8a1ed0f9":"ax = sns.boxplot(data = df, orient = \"h\", color = \"violet\", palette = \"Set1\")\nplt.show()","1a677423":"def outlier_detect(df):\n    for i in df.describe().columns:\n        Q1=df.describe().at['25%',i]\n        Q3=df.describe().at['75%',i]\n        IQR=Q3 - Q1\n        LTV=Q1 - 1.5 * IQR\n        UTV=Q3 + 1.5 * IQR\n        x=np.array(df[i])\n        p=[]\n        for j in x:\n            if j < LTV or j>UTV:\n               p.append(j)\n        print('\\n Outliers for Column : ', i, ' Outliers count ', len(p))\n        print(p)","40bd1522":"x=df[numeric_columns]\noutlier_detect(x)","d07667ec":"df.nunique()","a85b8fae":"df.smoker.value_counts()","af17974d":"df.rename(columns={'sex': 'gender'}, inplace=True, level=None)","126f6ba5":"df.gender.value_counts()","aba8d00d":"df.duplicated().sum()","50abb7c0":"df = df.drop_duplicates()","c83f9816":"df.duplicated().sum()","4df0af54":"df.age.plot(kind=\"hist\")","6d8f8fdf":"df.smoker.count()","7a89b8c1":"plt.figure(figsize = (12,8))\ng = sns.countplot(x=\"smoker\",data=df,palette='hls')\ng.set_title(\"Smokers and Non-Smokers\", fontsize=20)\ng.set_xlabel(\"smoker\", fontsize=15)\ng.set_ylabel(\"count\", fontsize=20)","9e06a593":"plt.figure(figsize = (12,8))\ng = sns.countplot(x=\"age\",data=df,palette='hls')\ng.set_title(\"different age groups\", fontsize=20)\ng.set_xlabel(\"age\", fontsize=15)\ng.set_ylabel(\"count\", fontsize=20)","8523e84e":"plt.figure(figsize=(12,6))\ng = sns.distplot(df[\"bmi\"])\ng.set_xlabel(\"bmi\", fontsize=12)\ng.set_ylabel(\"Frequency\", fontsize=12)\ng.set_title(\"Frequency Distribuition- bmi\", fontsize=20)","8c35c49f":"plt.figure(figsize = (20,8))\nax = sns.boxplot(x=\"bmi\" ,y=\"region\", data=df, linewidth=2.5)\nplt.show()","eac0e819":"plt.figure(figsize = (20,8))\nax = sns.boxplot(x=\"gender\" ,y=\"bmi\", data=df, linewidth=2.5)\nplt.show()","a5b14f29":"df.age.plot(kind=\"hist\")","be61c4d2":"df.expenses.plot(kind=\"hist\")","1d5c3c89":"df.bmi.plot(kind=\"hist\")","2f7e02c8":"df.children.plot(kind=\"hist\")","1d28e970":"df.region.value_counts().plot(kind=\"pie\")","a431c0fb":"df.smoker.value_counts().plot(kind=\"pie\")","d46b6869":"df.groupby(\"smoker\").expenses.agg([\"mean\",\"median\",\"count\"])","577f66aa":"df.groupby(\"gender\").expenses.agg([\"mean\",\"median\",\"count\"])","36323c20":"df.groupby(\"smoker\").age.mean()","921b2f24":"# Set the width and height of the figure\nplt.figure(figsize=(10,5))\n\ncorr = df.corr()\nax = sns.heatmap(corr,vmin=-1,vmax=1,center=0,annot=True)","5fb46d46":"sns.scatterplot(x=df['bmi'], y=df['expenses'])","adffe88b":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['bmi'], y=df['expenses'],hue=df['children'],size=df['age'])","b1cddfa0":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['age'], y=df['expenses'],hue=df['region'],size=df['bmi'])","24141666":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['bmi'], y=df['expenses'],hue=df['region'],size=df['age'])","314d3102":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['age'], y=df['expenses'],hue=df['smoker'],size=df['bmi'])","d04b91a7":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['bmi'], y=df['expenses'],hue=df['smoker'],size=df['age'])","e2b9b164":"plt.figure(figsize=(14, 7))\nsns.scatterplot(x=df['bmi'], y=df['expenses'],hue=df['gender'],size=df['age'])","d0bc9b24":"sns.pairplot(data=df,hue='gender')","30647fcf":"sns.pairplot(data=df,hue='smoker')","b136ba58":"sns.pairplot(data=df,hue='region')","f71a1608":"sns.regplot(x=df['bmi'], y=df['expenses'])","7ceb68cc":"sns.scatterplot(x=df['bmi'], y=df['expenses'], hue=df['smoker'])","9a563c9d":"This scatter plot shows that nonsmokers tend to pay slightly more with increasing BMI, smokers pay MUCH more.\n\nTo further emphasize, Use the sns.lmplot command to add two regression lines, corresponding to smokers and nonsmokers. \n( The below plot shows the regression line of smokers has a much steeper slope when compared to line of nonsmokers!)","f842b2a3":"sns.lmplot(x=\"bmi\", y=\"expenses\", hue=\"smoker\", data=df)","978811c2":"sns.swarmplot(x=df['smoker'],\n              y=df['expenses'])","01214f58":"The Swarm plot shows us that: on average, non-smokers are charged less than smokers, and\nthe customers who pay the most are smokers; whereas the customers who pay the least are non-smokers.","58a4a9b2":"import seaborn as sns\ng = sns.pairplot(df)\ng.set(xticklabels=[])","d178b4ec":"sns.pairplot(data=df,hue='children')","e6566f3b":"# Importing necessary package for creating model\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error,r2_score","b2ec7462":"cat_col=['smoker','region','gender']\nnum_col=[i for i in df.columns if i not in cat_col]\nnum_col","affb8a78":"# one-hot encoding\none_hot=pd.get_dummies(df[cat_col])\ninsur_procsd_df=pd.concat([df[num_col],one_hot],axis=1)\ninsur_procsd_df.head(10)","ae13e638":"#label encoding\ninsr_procsd_df_label=df\nfrom sklearn.preprocessing import LabelEncoder\nlabel_encoder = LabelEncoder()\nfor i in cat_col:\n    insr_procsd_df_label[i] = label_encoder.fit_transform(insr_procsd_df_label[i])\ninsr_procsd_df_label.head(10)","3e1ba7aa":"#using one hot encoding\nX=insur_procsd_df.drop(columns='expenses')\ny=df[['expenses']]","e080007f":"train_X, test_X, train_y, test_y = train_test_split(X,y,test_size=0.3,random_state=1234)","12bf08fb":"model = LinearRegression()\nmodel.fit(train_X,train_y)","f9a2c434":"# Print Model intercept and co-efficent\nprint(\"Model intercept\",model.intercept_,\"Model co-efficent\",model.coef_)","a25225e8":"cdf = pd.DataFrame(data=model.coef_.T, index=X.columns, columns=[\"Coefficients\"])\ncdf","60b50e70":"# Print various metrics\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error,r2_score\n\nprint(\"Predicting the train data\")\ntrain_predict = model.predict(train_X)\nprint(\"Predicting the test data\")\ntest_predict = model.predict(test_X)\nprint(\"MAE\")\nprint(\"Train : \",mean_absolute_error(train_y,train_predict))\nprint(\"Test  : \",mean_absolute_error(test_y,test_predict))\nprint(\"====================================\")\nprint(\"MSE\")\nprint(\"Train : \",mean_squared_error(train_y,train_predict))\nprint(\"Test  : \",mean_squared_error(test_y,test_predict))\nprint(\"====================================\")\nimport numpy as np\nprint(\"RMSE\")\nprint(\"Train : \",np.sqrt(mean_squared_error(train_y,train_predict)))\nprint(\"Test  : \",np.sqrt(mean_squared_error(test_y,test_predict)))\nprint(\"====================================\")\nprint(\"R^2\")\nprint(\"Train : \",r2_score(train_y,train_predict))\nprint(\"Test  : \",r2_score(test_y,test_predict))\nprint(\"MAPE\")\nprint(\"Train : \",np.mean(np.abs((train_y - train_predict) \/ train_y)) * 100)\nprint(\"Test  : \",np.mean(np.abs((test_y - test_predict) \/ test_y)) * 100)","36715344":"#Plot actual vs predicted value\nplt.figure(figsize=(10,7))\nplt.title(\"Actual vs. predicted expenses\",fontsize=25)\nplt.xlabel(\"Actual expenses\",fontsize=18)\nplt.ylabel(\"Predicted expenses\", fontsize=18)\nplt.scatter(x=test_y,y=test_predict)","39611188":"print(\"MAPE\")\nprint(\"Train : \",np.mean(np.abs((train_y - train_predict) \/ train_y)) * 100)\nprint(\"Test  : \",np.mean(np.abs((test_y - test_predict) \/ test_y)) * 100)","033e8122":"Expenses for male and female","ee206dcd":"Both the boxplot and kernel density estimation plot reveal that the expenses data is right skewed. Furthermore, there are some outliers but no missing charges and smoker values\n","2050489f":"**In this Dataset Kurtosis is Platykurtic:        (Kurtosis < 3) bcoz no Out Liers ****","d9c19de1":"**Above correlation and covariance value inform that there exist strong relationship between expenses. AGE (0.3) and BMI(0.2) for numerical variables**","6b79a159":"Mean of Smokers and Non Smokers","62d932be":"**Color-coded scatter plots**\nWe can use scatter plots to display the relationships between not two, but even three variables. One way of doing this is by color-coding the points.\n\nFor instance, to understand how smoking affects the relationship between BMI and insurance expenses, we can color-code the points by 'smoker', and plot the other two columns ('bmi', 'expenses') on the axes.","7d30e2b7":"**Kurtosis**\n\nKurtosis is all about the tails of the distribution\u200a\u2014\u200anot the peakedness or flatness. It is used to describe the extreme values in one versus the other tail. It is actually the measure of outliers present in the distribution.\n\nMesokurtic : It means that the extreme values of the distribution are similar to that of a normal distribution characteristic.\n\nLeptokurtic (Kurtosis > 3): Distribution is longer, tails are fatter which means that data are heavy-tailed or profusion of outliers.\n\nPlatykurtic: (Kurtosis < 3): Distribution is shorter, tails are thinner than the normal distribution which means that data are light-tailed or lack of outliers.","bd233541":"**Load the data into pandas dataframe**","4ed7c2ff":"Check how many duplicated data is there?","eb7434fc":"**Examining the data**","9ff1b3cf":"**Finding the Overall Distribution of Insurance Premium Data**","23d5cf4d":"BOX PLOT Using SeaBorn\n","536f6473":"The scatterplot above suggests that body mass index (BMI) and expenses are positively correlated, where customers with higher BMI typically also tend to pay more in insurance premium (This pattern makes sense, since high BMI is typically associated with higher risk of chronic disease.)\n\nTo double-check the strength of this relationship, you might like to add a regression line, or the line that best fits the data. We do this by changing the command to sns.regplot.","02c676aa":"Remove all duplicated data","262a86f9":"**There is no major difference between using label encoding and one-hot encoding. Also predicted expenses are not linear with actual expenses**","8add9c91":"**PLOT THE INSURANCE PREMIUM DATASET**","98d2192e":"**Observation**: The mean, median and count differences between Smokers and Non Smokers is very large.**","1a898bf3":"There are no Null Values in the insurance dataset","2ab93969":"\n**Skewness**\n\nI am Getting positive Skewness , it means when the tail on the right side of the distribution is longer or fatter. The mean and median will be greater than the mode. *Negative Skewness is when the tail of the left side of the distribution is longer or fatter than the tail on the right side. The mean and median will be less than the mode.\n\n*If the skewness is between -0.5 and 0.5, the data are fairly symmetrical.\n    *If the skewness is between -1 and -0.5(negatively skewed) or between 0.5 and 1(positively skewed), the data are moderately skewed.\n*If the skewness is less than -1(negatively skewed) or greater than 1(positively skewed), the data are highly skewed.\n\n*So here My data is Highly Skewed. My Skew value is 1.51\n\n","ef1e2f60":"**KERNEL DENSITY PLOT - BMI**","1cd8e1a7":"Scatter plots\nTo create a simple scatter plot, we use the sns.scatterplot command","832b9b25":"Change the column 'Sex' to 'Gender'","3e6ae523":"\n**Observations**\n\nThere are 1338 observations and 7 columns for insurance dataset.\n","532fa4e4":"Correlation Heatmap\n\nFind the correlation of the dataframe and plot it as the heat map","6dd7c230":"Columns in data frame","2ba8a0ea":"Mean Expenses for Smokers is more than Non Smokers","c8466e9b":"**OBSERVATION**: The curve shows the density plot which is essentially a smooth version of the histogram. The y-axis is in terms of density and the histogram is normalized by default so that it has the same y-scale as the density plot.","9a18c1a1":"**Observation**: The Shape of the Expenses Data is Right Skewed Distribution "}}