{"cell_type":{"8ba352d7":"code","6a5bf8f6":"code","7e20c6e1":"code","d12cfc42":"code","04714eee":"code","da4d9f30":"code","0bb1f91b":"code","145e6b0d":"code","22f859a9":"code","674e41cb":"code","bfb96515":"code","24af4cfe":"code","a234b77a":"code","0efb3ca6":"code","44bf0096":"code","b9b1f726":"code","42f8a807":"code","b9a12ca2":"code","36290e3b":"code","96a87c67":"code","6d5ba06a":"markdown","ac7591b5":"markdown","371f70d9":"markdown","140937a0":"markdown","11d04db1":"markdown","a3b70f20":"markdown","85f5ab60":"markdown","6791bb11":"markdown","3b533a2e":"markdown"},"source":{"8ba352d7":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()\nimport statsmodels.api as sm\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.express as px","6a5bf8f6":"# First of all, I am imoprting csv file and checking data which I have.\nvirus_data=pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\nvirus_data.head()\n","7e20c6e1":"# dropping columns which are not useful for my analysis. It is SNo, Province\/State\nvirus_data = virus_data.drop(columns = ['Last Update', 'SNo', 'Province\/State'])\nfor_baltics = virus_data.copy()\nvirus_data","d12cfc42":"# Creating a new column for active cases. It show as number of cases minus deaths and recovered cases. It let's us analize \n# every country deals with COVID-19. \n\nvirus_data['Active cases'] = virus_data['Confirmed'] - virus_data['Deaths'] - virus_data['Recovered']\nvirus_data","04714eee":"# After data preparation I am checking if there are empty rows. From results we can conclude that all filled with data.\n# In active cases column we can see that min active cases is -164015. US reports recovered cases as cummulative number.\n# So it means that in US now it is recovered 164015, but it doesn't mean that those people recovered the last day.\n# Also from data we can see that 75 % of confirmed cases is down to 855.\n\nvirus_data.describe()","da4d9f30":"# Taking from data only last day results for evaluating currently situation. Grouping by country to know how many cases\n# in every country we have.\n\nby_date = virus_data[virus_data['ObservationDate']==virus_data.iloc[-1,0]]","0bb1f91b":"# Summing cases of each category worldwide.\n\nconf_world = int(by_date['Confirmed'].sum())\ndeath_world = int(by_date['Deaths'].sum())\nrecov_world = int(by_date['Recovered'].sum())\nactive_cases = int(by_date['Active cases'].sum())","145e6b0d":"# Ploting results of confirmed, active cases, recovered, deaths categories.\n\nnames=['Confirmed', ' Active cases', 'Recovered', 'Deaths']\nvariables = [conf_world, active_cases, recov_world, death_world]\n\nplt.figure(figsize=(15, 5))\n\nplt.subplot(131)\nplt.bar(names, variables)\nplt.title('COVID-19 cases', fontsize=16)\nplt.ylabel('Number of cases')\nplt.show()\n\n# From results we can see that confirmed cases is near 3.5 million limit. Active cases is about 2 million.","22f859a9":"\n# Printing results of worldwide cases.\nprint('Confirmed cases: {}'.format(conf_world))\nprint('Active cases: {}'.format(active_cases))\nprint('Death cases: {}'.format(death_world))\nprint('Recovered: {}'.format(recov_world))","674e41cb":"# Now moving from worldwide view to countries. First line of code grouping coutries and summing last day results.\nby_country = by_date.groupby(by=['Country\/Region'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\n\n# Visual presentation of cases.\ncolored = by_country.style.background_gradient(cmap='Reds')\ncolored","bfb96515":"# taking last day data and choosing countries which have biggest number of active cases.\n# Few insights:\n# 1. In UK there we can see very low recovery rate. It could be because of not confirmed order when and how confirm full recovery.\n# 2. In Russia death cases is 24 times less than in Italy which have same number of active cases like Russia. It could be \n# that Russia not taking test after patiets die. \n\nmost_affected = by_country.sort_values(['Active cases'], ascending = False).head()\nmost_affected","24af4cfe":"# Creating a new table with every category percentegies taking confirmed cases as 100 %. \nmost_affected_perc = most_affected.copy()\nmost_affected_perc['Active, %'] = most_affected_perc['Active cases'] * 100 \/ most_affected_perc['Confirmed']\nmost_affected_perc['Recovered, %'] = most_affected_perc['Recovered'] * 100 \/ most_affected_perc['Confirmed']\nmost_affected_perc['Death, %'] = most_affected_perc['Deaths'] * 100 \/ most_affected_perc['Confirmed']\nmost_affected_perc = most_affected_perc.drop(['Confirmed', 'Deaths', 'Recovered', 'Active cases'], axis = 1)\nmost_affected_perc = most_affected_perc.T\nmost_affected_perc = round(most_affected_perc,2)","a234b77a":"# Picking size of plot and taking variables for bar chart\nf, ax = plt.subplots(figsize=(8,4))\nactive_cases = most_affected['Deaths']\nrecovered = most_affected['Recovered']\ndeaths = most_affected['Confirmed']\n\n# Number of all most affected countries\nN = 5\n\n # Position of every of 5 country\nnumber = np.arange(N) \n\n# The width of bars\nwidth = 0.45 \n\n# Ploting every category one by one\np1 = ax.bar(number, deaths, width)\np2 = ax.bar(number, recovered, width)\np3 = ax.bar(number, active_cases, width)\n\n# The main information about graph\nplt.ylabel('Number of cases')\nplt.title('Most affected countries by active cases', fontsize = 16)\nplt.xticks([])\nplt.legend((p1[0], p2[0], p3[0]), ('Active cases', 'Recovered', 'Deaths'))\n\n# Adding table of percentages bellow main graph\ndata = most_affected_perc.values\ncolumns = most_affected_perc.columns\nrows = ['Active, %', 'Recovered, %', 'Death, %']\nthe_table = plt.table(cellText = data, rowLabels = rows, colLabels = columns, cellLoc = 'center', loc = 'bottom')\nplt.subplots_adjust(hspace=0.7)\n\nplt.show()","0efb3ca6":"# For better visualisations, it is valueable convert ObservationDate from string to datetime. Also date set as index.\nvirus_data ['ObservationDate']= pd.to_datetime(virus_data['ObservationDate'])\nvirus_data.set_index('ObservationDate', inplace = True)","44bf0096":"# Taking most affected countries. Although China is not in most affected countries by cases, but I am taking data from \n# this country because it was first affected and it is a good model for future predictions for other countries. \n# Also later I will visualize Lithuania data set, so now I also preparing and our coutry dataset.\n\nchina_data = virus_data.loc[virus_data['Country\/Region']=='Mainland China']\nlithuania_data = virus_data.loc[virus_data['Country\/Region']=='Lithuania']\nfirst_data = virus_data.loc[virus_data['Country\/Region']== most_affected.index[0]]\nsecound_data = virus_data.loc[virus_data['Country\/Region']== most_affected.index[1]]\nthird_data = virus_data.loc[virus_data['Country\/Region']== most_affected.index[2]]\nfourth_data = virus_data.loc[virus_data['Country\/Region']== most_affected.index[3]]\nfifth_data = virus_data.loc[virus_data['Country\/Region']==  most_affected.index[4]]","b9b1f726":"# Taking sum of cases for each day.\n\nchina_data = china_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nfirst_data = first_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nsecound_data = secound_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nthird_data = third_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nfourth_data = fourth_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nfifth_data = fifth_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()\nlithuania_data = lithuania_data.groupby(by=['ObservationDate'])['Confirmed', 'Deaths', 'Recovered', 'Active cases'].sum()","42f8a807":"fig = make_subplots(rows=3, cols=2,\n                       subplot_titles=('China', most_affected.index[0], most_affected.index[1], most_affected.index[2],\n                                       most_affected.index[3], most_affected.index[4]))\n\n\nfig.add_trace(go.Bar(x = china_data.index, y = china_data['Active cases']), 1, 1)\nfig.add_trace(go.Bar(x = first_data.index, y = first_data['Active cases']), 1, 2)\nfig.add_trace(go.Bar(x = secound_data.index, y = secound_data['Active cases']), 2, 1)\nfig.add_trace(go.Bar(x = third_data.index, y = third_data['Active cases']), 2, 2)\nfig.add_trace(go.Bar(x = fourth_data.index, y = fourth_data['Active cases']), 3, 1)\nfig.add_trace(go.Bar(x = fifth_data.index, y = fifth_data['Active cases']), 3, 2)\n\n\n\nfig.update_layout(height=1000, width=1000, title_text='Active cases in most affected countries', showlegend=False)\nfig.show()\n\n# Few insights:\n# 1. China february 13: added new confirmation test for COVID-19. Read more: \n# https:\/\/www.worldometers.info\/coronavirus\/how-to-interpret-feb-12-case-surge\/\n# 2. Only in China active cases decresed. In US, UK and Russia active cases still rising. It is suspected\n# that France and Italy reached Plateau phase of logistic growth.","b9a12ca2":"# Calculating moving average of most affected countries. Moving average shows The moving average is mostly \n#used with time series data to capture the short-term fluctuations while focusing on longer trends.\n\n#Moving average interval choosen for a week. And data are taking\n# from that point when death cases is 3 or more. \n# First code line sorts 3 or more death cases. Secound code line is calculating moving average.\n\n\nchina_data = china_data[china_data['Deaths']>=3]\nchina_data['Moving average of deaths'] = china_data.iloc[:, 1].rolling(window = 7).mean()\n\nfirst_data = first_data[first_data['Deaths']>=3]\nfirst_data['Moving average of deaths'] = first_data.iloc[:, 1].rolling(window = 7).mean()\n\nsecound_data = secound_data[secound_data['Deaths']>=3]\nsecound_data['Moving average of deaths'] = secound_data.iloc[:, 1].rolling(window = 7).mean()\n\nthird_data = third_data[third_data['Deaths']>=3]\nthird_data['Moving average of deaths'] = third_data.iloc[:, 1].rolling(window = 7).mean()\n\nfourth_data = fourth_data[fourth_data['Deaths']>=3]\nfourth_data['Moving average of deaths'] = fourth_data.iloc[:, 1].rolling(window = 7).mean()\n\nfifth_data = fifth_data[fifth_data['Deaths']>=3]\nfifth_data['Moving average of deaths'] = fifth_data.iloc[:, 1].rolling(window = 7).mean()\n","36290e3b":"fig = go.Figure()\n\nfig.add_trace(go.Line(x = china_data.index, y = china_data['Moving average of deaths'], name = 'China' ))\nfig.add_trace(go.Line(x = first_data.index, y = first_data['Moving average of deaths'], name = most_affected.index[0]))\nfig.add_trace(go.Line(x = secound_data.index, y = secound_data['Moving average of deaths'], name = most_affected.index[1]))\nfig.add_trace(go.Line(x = third_data.index, y = third_data['Moving average of deaths'], name = most_affected.index[2]))\nfig.add_trace(go.Line(x = fourth_data.index, y = fourth_data['Moving average of deaths'], name = most_affected.index[3]))\nfig.add_trace(go.Line(x = fifth_data.index, y = fifth_data['Moving average of deaths'], name = most_affected.index[4]))\n\nfig.update_layout(height = 500, width = 500, title_text='Week moving avg. of deaths in most affected countries', \n                  xaxis_title = 'Date',\n                  yaxis_title = 'Average death cases'\n                 )\nfig.show()","96a87c67":"fig = make_subplots(rows=2, cols=2,\n                       subplot_titles=('Confirmed', 'Deaths', 'Recovered', 'Active cases'))\n\nfig.add_trace(go.Bar(x = lithuania_data.index, y = lithuania_data['Confirmed']), 1, 1)\nfig.add_trace(go.Bar(x = lithuania_data.index, y = lithuania_data['Deaths']), 1, 2)\nfig.add_trace(go.Bar(x = lithuania_data.index, y = lithuania_data['Recovered']), 2, 1)\nfig.add_trace(go.Bar(x = lithuania_data.index, y = lithuania_data['Active cases']), 2, 2)\n\nfig.update_layout(height = 1000, width = 1000, title_text ='COVID-19 cases by categories in Lithuania', showlegend = False)\nfig.show()\n\n# After Easter we can see a slight rising of new cases. \n# Till april 10th, Lithuanian goverment addmited that is difficult to draw a line between active and recovery cases.\n# In Lithuania we also can suspect that active cases reached Plateu phase and number of case will be decreasing.\n","6d5ba06a":"# Choosing TOP5 countries by active cases","ac7591b5":"# COVID-19 transmission","371f70d9":"# Conclusions:\n## 1. Now in global scale we have 3506729 confirmed cases, 2134023 active cases, 247470 death cases, 1125236 recovery cases.\n## 2. Most affected countries by active cases: US, UK, Russia, Italy, France.\n## 3. Biggest death numbers we can see in US, least deaths in Russia.\n## 4. In Lithuania we have 729 active cases, now we can see decreasing in cases. ","140937a0":"## Basic acpects analyzed in work\n1. How many cases we have in worldwide?\n2. Which 5 countries are most affected?\n3. How looks growth of death cases in those countries?\n4. What is currently situation in Lithuania?","11d04db1":"# Situation in Lithuania","a3b70f20":"# Calculating sum of cases, deaths and recover cases in all world","85f5ab60":"![Timeline%20of%20COVID-19%20in%20Lithuania.png](attachment:Timeline%20of%20COVID-19%20in%20Lithuania.png)","6791bb11":"2019 Novel Coronavirus (2019-nCoV) is a RNA virus. It is a new virus, because of that every person has a chance to be infected. The COVID-19 virus spreads primarily through droplets of saliva or discharge from the nose when an infected person coughs or sneezes, so it\u2019s important that you also practice respiratory etiquette (for example, by coughing into a flexed elbow).","3b533a2e":"# Cases in most affected countries by time"}}