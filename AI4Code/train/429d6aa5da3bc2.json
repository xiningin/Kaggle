{"cell_type":{"839e4313":"code","3905ecde":"code","4d00c620":"code","8cb1bac5":"code","9d789a20":"code","a06e73b0":"code","694c0aa7":"code","79fed66c":"code","d53b0d80":"code","a04e926f":"code","e391bbb5":"code","85bd7c2b":"code","bbc95440":"code","bb72586b":"code","aeb7397f":"code","41b39b6e":"code","d1c99c17":"code","a622e9ea":"code","68c891c4":"code","bb129aa4":"code","e94d913e":"markdown","97e51127":"markdown","8f413722":"markdown","63e4678e":"markdown","d51efb79":"markdown","c833daf8":"markdown","1d3d98d1":"markdown","1704de98":"markdown","2684665e":"markdown","5467f21c":"markdown","097dd4bc":"markdown","ab011e83":"markdown","6aa89b49":"markdown","928f1393":"markdown","9559a673":"markdown","9a764508":"markdown","154ce422":"markdown","b547c13c":"markdown","1709b12b":"markdown","76914cf2":"markdown","66af31d8":"markdown","ecfeb2e1":"markdown","452cb21a":"markdown","e24df05f":"markdown","b442fd91":"markdown","0c74dbb9":"markdown","06f58a0e":"markdown","a6c7a18a":"markdown","9ccf68cc":"markdown"},"source":{"839e4313":"import pandas as pd \nfrom datetime import datetime\nimport numpy as np \nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt","3905ecde":"SPY_data = pd.read_csv(\"..\/input\/data-science-project-lifecycle\/SPY_2015.csv\")\n \n# Change the Date column from object to datetime object \nSPY_data[\"Date\"] = pd.to_datetime(SPY_data[\"Date\"])\n \n# Preview the data\nSPY_data.head(10)","4d00c620":"# Set Date as index\nSPY_data.set_index('Date',inplace=True)\n \n# Reverse the order of the dataframe in order to have oldest values at top\nSPY_data.sort_values('Date',ascending=True)","8cb1bac5":"# Take the name of the columns of the SPY_data to see if null values exists\nvariables = SPY_data.columns \nSPY_data.isnull().sum().loc[variables]","9d789a20":"jet= plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0,1,10)))\n \ndef correlation(df,variables, n_rows, n_cols):\n    fig = plt.figure(figsize=(8,6))\n    #fig = plt.figure(figsize=(14,9))\n    for i, var in enumerate(variables):\n        ax = fig.add_subplot(n_rows,n_cols,i+1)\n        asset = df.loc[:,var]\n        ax.scatter(df[\"Adj Close\"], asset, c = next(colors))\n        ax.set_xlabel(\"Adj Close\")\n        ax.set_ylabel(\"{}\".format(var))\n        ax.set_title(var +\" vs price\")\n    fig.tight_layout() \n    plt.show()","a06e73b0":"# Is there any correlation between Volume and Adj Close price?\nvariables =SPY_data.columns[-1:] # read last column name\ncorrelation(SPY_data,variables,1,1)","694c0aa7":"# Is there any correlation between Adj Close price vs. Open, High, Low, Close?\nvariables =SPY_data.columns#[0:6]   \ncorrelation(SPY_data,variables,3,3)","79fed66c":"SPY_data.corr()['Adj Close'].loc[variables]","d53b0d80":"SPY_data['High-Low_pct'] = (SPY_data['High'] - SPY_data['Low']).pct_change()\nSPY_data['ewm_5'] = SPY_data[\"Close\"].ewm(span=5).mean().shift(periods=1)\nSPY_data['price_std_5'] = SPY_data[\"Close\"].rolling(center=False,window= 30).std().shift(periods=1)\n \nSPY_data['volume Change'] = SPY_data['Volume'].pct_change()\nSPY_data['volume_avg_5'] = SPY_data[\"Volume\"].rolling(center=False,window=5).mean().shift(periods=1)\nSPY_data['volume Close'] = SPY_data[\"Volume\"].rolling(center=False,window=5).std().shift(periods=1)","a04e926f":"jet= plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0,1,10)))\n\n# Take the name of the last 6 columns of the SPY_data which are the model features\nvariables = SPY_data.columns[-6:]  \n \ncorrelation(SPY_data,variables,3,3)","e391bbb5":"SPY_data.corr()['Adj Close'].loc[variables]","85bd7c2b":"SPY_data.head(5)","bbc95440":"SPY_data.isnull().sum().loc[variables]","bb72586b":"# To train a model, it is necessary to drop missing values.\nSPY_data = SPY_data.dropna(axis=0)","aeb7397f":"# Generate the train and test sets\ntrain = SPY_data[SPY_data.index < datetime(year=2015, month=1, day=1)]\n\ntest = SPY_data[SPY_data.index >= datetime(year=2015, month=1, day=1)]\ndates = test.index","41b39b6e":"lr = LinearRegression()\nX_train = train[[\"High-Low_pct\",\"ewm_5\",\"price_std_5\",\"volume_avg_5\",\"volume Change\",\"volume Close\"]]\n \nY_train = train[\"Adj Close\"]\n \nlr.fit(X_train,Y_train) ","d1c99c17":"# Create the test features dataset (X_test) which will be used to make the predictions.\nX_test = test[[\"High-Low_pct\",\"ewm_5\",\"price_std_5\",\"volume_avg_5\",\"volume Change\",\"volume Close\"]].values \n\n# The labels of the model\nY_test = test[\"Adj Close\"].values # will be used for comparison","a622e9ea":"close_predictions = lr.predict(X_test) ","68c891c4":"mae = sum(abs(close_predictions - test[\"Adj Close\"].values)) \/ test.shape[0]\nprint(mae)","bb129aa4":"# Create a dataframe that output the Date, the Actual and the predicted values\ndf = pd.DataFrame({'Date':dates,'Actual': Y_test, 'Predicted': close_predictions})\ndf1 = df.tail(25)\n \n# set the date with string format for plotting\ndf1['Date'] = df1['Date'].dt.strftime('%Y-%m-%d')\n \ndf1.set_index('Date',inplace=True)\n \nerror = df1['Actual'] - df1['Predicted']\n \n# Plot the error term between the actual and predicted values for the last 25 days\n \nerror.plot(kind='bar',figsize=(8,6))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.xticks(rotation=45)\nplt.show()","e94d913e":"# ****Data Set: Yahoo Stock Price*****","97e51127":"**Import following Libraries**","8f413722":"***Check Null values***","63e4678e":"# **Error Graph for last 25 days**","d51efb79":"Simple error (Actual - Predicted) computered and ploted for last 25 days.","c833daf8":"# **Step 2: Data Exploration**","1d3d98d1":"# Check Null Values","1704de98":"# **Is there any correlation between Adj Close price vs. Open, High, Low, Close ?**","2684665e":"# **Building Regression Model**","5467f21c":"# **Drop\/Remove NA records**","097dd4bc":"# **Model Evaluation**","ab011e83":"# **Prediction**","6aa89b49":"**Mean Absolute Error (MAE):**","928f1393":"# **Step 4: Exploratory Data Analysis**","9559a673":"# Correlation with New features","9a764508":"# **Step 1: Busines Understanding**","154ce422":"The problem we are facing is what will be the value of Yahoo's assets in the near future? At this stage some additional questions also need to be reviewed to get a better and more useful data set. For example, what are the factors that can be overlooked in asset prices? Isn't the price dependent on the depreciation of competing companies? Do foreign policies affect asset value? Is inflation not the reason for the rise in asset prices? Etc etc\n","b547c13c":"The MAE value is approx. 18.","1709b12b":"# **Step 6: Build Predictive Model**","76914cf2":"# **Test Dataset**","66af31d8":"# Is there any correlation between Volume and Adj Close price?","ecfeb2e1":"**Indexing and Sorting**","452cb21a":"# **Step 5: Featuer Engineering**","e24df05f":"# **Step 3: Data Cleansing and Transformation**","b442fd91":"# **Correlation**","0c74dbb9":"# **Problem Statement: Prediction of Yahoo Stock Market**","06f58a0e":"In statistics, mean absolute error (MAE) is a measure of errors between paired observations expressing the same phenomenon. Examples of Y versus X include comparisons of predicted versus observed, subsequent time versus initial time, and one technique of measurement versus an alternative technique of measurement. MAE is calculated as:\n![..\/input\/data-science-project-lifecycle\/mae_eq.PNG](http:\/\/)\nThe mean absolute error is a common measure of forecast error in time series analysis.","a6c7a18a":"# **Train & Test Dataset Distribution**","9ccf68cc":"**Read this Dataset**"}}