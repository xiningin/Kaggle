{"cell_type":{"431d9342":"code","970e997e":"code","a435090a":"code","2da7ad4f":"code","8a7ef543":"code","f8ba9196":"code","9e621f2e":"code","4f1e9db3":"code","c3ae7d29":"code","5b2808b1":"code","1902d5b3":"code","45ef4459":"code","c11bdd2d":"code","d204b21c":"code","ab32258a":"code","26ba5bc1":"code","55f0c3b0":"code","ad48199b":"code","71d45f4d":"code","70333517":"code","f1ff68b3":"code","e8a1bc7b":"code","0b25608f":"code","ebb7fcdb":"code","ce5a6284":"code","5cfd1c43":"code","5905630d":"code","65ca313a":"code","edf6f53d":"code","7bcb7d72":"code","4a14330d":"code","436a58de":"markdown","d7548d7d":"markdown","a5147f06":"markdown","0fecf765":"markdown","993461b2":"markdown","a83e61d6":"markdown","59e3f0f6":"markdown","3f7005d3":"markdown","90004309":"markdown","e742aebb":"markdown","cdd99573":"markdown","accebd6d":"markdown","ae681667":"markdown","a7694856":"markdown","880c502c":"markdown","37ba02a7":"markdown","1a7d22cc":"markdown","b038961e":"markdown","638591a5":"markdown","b110b770":"markdown","59f7cbe0":"markdown","5f2e61e2":"markdown","19bfdff6":"markdown","381fbc1c":"markdown","98b011a7":"markdown","6109ec42":"markdown","628afa2a":"markdown","71a17ff0":"markdown","3aad46d5":"markdown","21e5c8d1":"markdown","1da33847":"markdown","a6824978":"markdown","c77d2de9":"markdown"},"source":{"431d9342":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport requests\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\npd.options.mode.chained_assignment = None  # default='warn'\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n%matplotlib inline\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\npalette = ['#F5DF4D', '#939597', '#0F4C81', '#FF6F61', '#5F4B8B', '#88B04B', '#92A8D1', '#F7CAC9', '#955251',\\\n           '#B163A3', '#009473']\npalette.reverse()\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current sessione current session","970e997e":"cons = pd.read_csv('\/kaggle\/input\/fia-f1-19502019-data\/constructors_championship_1958-2020.csv')\ncons.head()","a435090a":"cons.isna().any()","2da7ad4f":"cons[\"Points\"].describe()","8a7ef543":"# Let's delete all teams that have never win championship\ngry=cons\ngry['Position'] = pd.to_numeric(gry['Position'], errors='coerce')\ngry = gry[gry.Position == 1]\n\nteam_win_c= gry.groupby('Team')['Team'].count()\nteam_win_c = pd.DataFrame(team_win_c)\nteam_win_c.columns = ['Wins']\nteam_win_c.reset_index(level=0, inplace=True)\n\nteam_win_c.sort_values(by=['Wins'], inplace=True, ascending=False)\nteam_win_c = team_win_c.head(10)\nteam_win_c = team_win_c[::-1]\n\nfig = px.bar(team_win_c, x='Team', y='Wins',color='Wins',width=750, height=500)\nfig.update_layout(title={'text': 'Teams with The Most Grand Prix Won','y':0.95,'x':0.5})\nfig.show()","f8ba9196":"# Let's count all points won by each team\nteam_points=cons[[\"Points\",\"Team\"]].groupby('Team').sum()\nteam_points.sort_values(by=['Points'], inplace=True, ascending=False)\nprint(team_points)","9e621f2e":"# Let's count all points won by each team\n\n\ncons[\"Points\"] = pd.to_numeric(cons[\"Points\"])\ncons.sort_values(by=['Points'], inplace=True, ascending=False)\ndfp = cons.groupby([\"Team\"]).agg({\"Points\":\"sum\"}).loc[lambda d: d[\"Points\"].gt(100)]\ndfp =dfp.sort_values('Points', ascending=True)\npx.bar(dfp, x=dfp.index, y=\"Points\", color=\"Points\")","4f1e9db3":"# Let's count how many times a driver from a team standed on the podium\ngry1=cons\nteam_points=gry1[[\"Points\",\"Team\"]].groupby('Team').sum()\nteam_points=gry1[gry1['Position'].isin([1,2,3])]\nax= px.treemap(team_points,path=[\"Team\"],title=\"Driver from a team standed on the podium\")\nax.show()","c3ae7d29":"gry3=cons\ngry3[\"Year\"] = pd.to_numeric(cons[\"Year\"])\ngry3=gry3[gry3['Year'].isin([2020])]\ngry3[\"Points\"] = pd.to_numeric(gry3[\"Points\"])\ngry3.sort_values(by=['Points'], inplace=True, ascending=True)\ndfp = gry3.groupby([\"Team\"]).agg({\"Points\":\"sum\"}).loc[lambda d: d[\"Points\"].gt(100)]\ndfp =dfp.sort_values('Points', ascending=True)\npx.bar(dfp, x=dfp.index, y=\"Points\", color=\"Points\")","5b2808b1":"dfer= cons[cons.Team == \"Ferrari\"]\ndfmer= cons[cons.Team == \"Mercedes\"]\ndfwil= cons[cons['Team'].str.contains(\"Williams\")]\ndfrb=cons[cons['Team'].str.contains(\"Red Bull\")]\ndfer =dfer.sort_values('Year', ascending=False)\ndfmer =dfmer.sort_values('Year', ascending=False)\ndfwil =dfwil.sort_values('Year', ascending=False)\ndfrb =dfrb.sort_values('Year', ascending=False)\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(go.Scatter(x=dfer['Year'], y=dfer['Points'], name=\"Ferrari\"),row=1, col=1)\nfig.add_trace(go.Scatter(x=dfmer['Year'], y=dfmer['Points'], name=\"Mercedes\"),row=1, col=2)\nfig.add_trace(go.Scatter(x=dfwil['Year'], y=dfwil['Points'], name=\"Williams\"),row=2, col=1)\nfig.add_trace(go.Scatter(x=dfrb['Year'], y=dfrb['Points'], name=\"Red Bull\"),row=2, col=2)\nfig.update_layout(height=600, width=650, title_text=\"Top 4 constructors\")\nfig.show()","1902d5b3":"driv = pd.read_csv('\/kaggle\/input\/fia-f1-19502019-data\/drivers_championship_1950-2020.csv')\ndriv.head()","45ef4459":"driv.isna().any()","c11bdd2d":"driv[\"Points\"].describe()","d204b21c":"# Let's delete all teams that have never win championship\ngry1=driv\ngry1['Position'] = pd.to_numeric(gry1['Position'], errors='coerce')\ngry1 = gry1[gry1.Position == 1]\n\ndriv_win_c= gry1.groupby('Name')['Name'].count()\ndriv_win_c = pd.DataFrame(driv_win_c)\ndriv_win_c.columns = ['Wins']\ndriv_win_c.reset_index(level=0, inplace=True)\n\ndriv_win_c.sort_values(by=['Wins'], inplace=True, ascending=False)\ndriv_win_c = driv_win_c.head(10)\ndriv_win_c = driv_win_c[::-1]\n\nfig = px.bar(driv_win_c, x='Name', y='Wins',color='Wins',width=750, height=500)\nfig.update_layout(title={'text': 'Drivers with The Most Grand Prix Won','y':0.95,'x':0.5})\nfig.show()","ab32258a":"# Let's count all points won by each team\nteam_points=driv[[\"Points\",\"Name\"]].groupby('Name').sum()\nteam_points.sort_values(by=['Points'], inplace=True, ascending=False)\nprint(team_points)","26ba5bc1":"driv[\"Points\"] = pd.to_numeric(driv[\"Points\"])\ndriv.sort_values(by=['Points'], inplace=True, ascending=False)\ndfp1 = driv.groupby([\"Name\"]).agg({\"Points\":\"sum\"}).loc[lambda d: d[\"Points\"].gt(500)]\ndfp1 =dfp1.sort_values('Points', ascending=True)\nfig2 = px.bar(dfp1, x=dfp1.index, y=\"Points\", color=\"Points\")\nfig2.show()","55f0c3b0":"# Let's count how many times a driver from a team standed on the podium\ngry3=driv\ndriv_points=gry3[[\"Points\",\"Nationality\"]].groupby('Nationality').sum()\ndriv_points=gry3[gry3['Position'].isin([1,2,3])]\nax2= px.treemap(driv_points,path=[\"Nationality\"],title=\"Driver from a team standed on the podium\")\nax2.show()","ad48199b":"\ngry4=driv\ngry4[\"Year\"] = pd.to_numeric(driv[\"Year\"])\ngry4=gry4[gry4['Year'].isin([2020])]\ngry4[\"Points\"] = pd.to_numeric(gry4[\"Points\"])\ngry4.sort_values(by=['Points'], inplace=True, ascending=True)\ndfp = gry4.groupby([\"Name\"]).agg({\"Points\":\"sum\"}).loc[lambda d: d[\"Points\"].gt(50)]\ndfp =dfp.sort_values('Points', ascending=True)\npx.bar(dfp, x=dfp.index, y=\"Points\", color=\"Points\")","71d45f4d":"\ndham= driv[driv.Name == \"Lewis Hamilton\"]\ndvet= driv[driv.Name == \"Sebastian Vettel\"]\ndalo= driv[driv['Name'].str.contains(\"Vettel\")]\ndrai=driv[driv['Name'].str.contains(\"Kimi\")]\ndham =dham.sort_values('Year', ascending=False)\ndvet =dvet.sort_values('Year', ascending=False)\ndalo =dalo.sort_values('Year', ascending=False)\ndrai =drai.sort_values('Year', ascending=False)\nfig = make_subplots(rows=2, cols=2)\nfig.add_trace(go.Scatter(x=dfer['Year'], y=dfer['Points'], name=\"Lewis Hamilton\"),row=1, col=1)\nfig.add_trace(go.Scatter(x=dfmer['Year'], y=dfmer['Points'], name=\"Sebastian Vettel\"),row=1, col=2)\nfig.add_trace(go.Scatter(x=dfwil['Year'], y=dfwil['Points'], name=\"Vettel\"),row=2, col=1)\nfig.add_trace(go.Scatter(x=drai['Year'], y=dfwil['Points'], name=\"Kimi\"),row=2, col=2)\nfig.update_layout(height=600, width=650, title_text=\"Top 4 Drivers all time\")\nfig.show()","70333517":"time = pd.read_csv('\/kaggle\/input\/fia-f1-19502019-data\/fastest_laps_1950-2020.csv')\ntime.head()","f1ff68b3":"time.isna().any()","e8a1bc7b":"time[\"Lap Time\"].describe()","0b25608f":"timekk=time","ebb7fcdb":"track_times1=timekk[[\"Lap Time\",\"Venue\"]].groupby('Venue').sum()\n\ntimekk['date'] = pd.to_datetime(timekk['Lap Time'],errors = 'coerce')\n\ntimekk= timekk[timekk.Venue == \"Monaco\"]\n\ntimekk[\"date2\"]=timekk[\"date\"].dt.time\n\ntimekk = timekk.set_index('date')\ntimekk=timekk.sort_values('date2', ascending=False)\nfig = px.line(x=timekk[\"Year\"], y=timekk[\"date2\"])\n\nfig.show()","ce5a6284":"print(timekk[[\"date2\",'Venue',\"Name\",\"Year\"]].min())","5cfd1c43":"timek=time","5905630d":"track_times1=timek[[\"Lap Time\",\"Venue\"]].groupby('Venue').sum()\n\ntimek['date'] = pd.to_datetime(timek['Lap Time'],errors = 'coerce')\n\ntimek= timek[timek.Venue == \"Bahrain\"]\n\ntimek[\"date2\"]=timek[\"date\"].dt.time\n\ntimek = timek.set_index('date')\ntimek=timek.sort_values('date2', ascending=False)\nfig = px.line(x=timek[\"Year\"], y=timek[\"date2\"])\n\nfig.show()","65ca313a":"print(timek[[\"date2\",'Venue',\"Name\",\"Year\"]].min())","edf6f53d":"timekkk=time","7bcb7d72":"track_times1=timekkk[[\"Lap Time\",\"Venue\"]].groupby('Venue').sum()\n\ntimekkk['date'] = pd.to_datetime(timekkk['Lap Time'],errors = 'coerce')\n\ntimekkk= timekkk[timekkk.Venue == \"Abu Dhabi\"]\n\ntimekkk[\"date2\"]=timekkk[\"date\"].dt.time\n\ntimekkk = timekkk.set_index('date')\ntimekkk=timekkk.sort_values('date2', ascending=False)\nfig = px.line(x=timekkk[\"Year\"], y=timekkk[\"date2\"])\n\nfig.show()","4a14330d":"print(timekkk[[\"date2\",'Venue',\"Name\",\"Year\"]].min())","436a58de":" <h1 style=\"background-color:#D7BDE2;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f Importing data, simple preliminary analysis\n \ud83c\udfce\ufe0f<\/h1>","d7548d7d":"### Lets focus only on drivers with Grand Prix wins:","a5147f06":" <h1 style=\"background-color:#D7BDE2;font-family:newtimeroman;font-size:225%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f F1 Drivers & Teams Achievments with Visualization \ud83c\udfce\ufe0f<\/h1><a id=0><\/a>\n \n ### What is included:\n \n # * [1. Constructors Analyze Begin](#1)\n   [1.1 Grand Prix Wins](#1.1)\n   \n   [1.2 Grand Prix Points Won](#1.2)\n   \n   [1.3 Grand Prix Team Drivers on Podium](#1.3)\n   \n   [1.4 Analyse of 2020 Season ](#1.4)\n    \n   [1.5 Analyse Top 4 Constructors Analyse](#1.5)\n   \n   [1.6 Summary of the constructors analyse](#1.6)\n   \n # * [2. Drivers Analyze Begin](#2)\n   [2.1 Grand Prix Wins](#2.1)\n   \n   [2.2 Grand Prix Points Won](#2.2)\n   \n   [2.3 Grand Prix Drivers Nationality on Podiums](#2.3)\n   \n   [2.4 Analyse of 2020 Season ](#2.4)\n    \n   [2.5 Analyse Top 4 All Time Drivers](#2.5)\n   \n   [2.6 Summary of the drivers analyse](#2.6)\n   \n # * [3. Fastest Lap Times](#3)\n   [2.1 Grand Prix Wins](#3)\n   \n   [3.2 Best times for each track](#3.2)\n   \n   [Grand Prix Monaco Analyze](#3.3)\n   \n   [Grand Prix Monaco Bahrain](#3.4)\n   \n   [Grand Prix Monaco Abu Zhabi](#3.5)\n    \n   [3.3 Summary of the lap times analyse](#3.6)\n   \n\n","0fecf765":"### Best times history for Monaco Grand Prix\n<a id=3.3><\/a>\n \n#### [Back to the top](#0)","993461b2":" <h1 style=\"background-color:#D7BDE2;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f Checking which teams have won the biggest amount of championships and points \n \ud83c\udfce\ufe0f<\/h1><a id=1.1><\/a>\n  \n#### [Back to the top](#0)","a83e61d6":" <h1 style=\"background-color:#FF9AA2;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f Checking which driver have won the biggest amount of championships and points \n \ud83c\udfce\ufe0f<\/h1><a id=2.1><\/a>\n  \n#### [Back to the top](#0)","59e3f0f6":"### Lets see how many drivers from each country  got the podium\n<a id=2.3><\/a>\n \n#### [Back to the top](#0)","3f7005d3":" <h1 style=\"background-color:#FF9AA2;font-family:newtimeroman;font-size:300%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f 2. Drivers Section\n \ud83c\udfce\ufe0f<\/h1><a id=2><\/a>\n  \n#### [Back to the top](#0)","90004309":"\n <h1 style=\"background-color:#DAE795;font-family:newtimeroman;font-size:250%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f Thank you everyone for seeing my analyse, \n <\/h1>\n  <h1 style=\"background-color:#DAE795;font-family:newtimeroman;font-size:250%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f I am just a begginer and would really appriciate any feedback\n <\/h1>\n  <h1 style=\"background-color:#DAE795;font-family:newtimeroman;font-size:250%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f Please leave comments it would help me improve my skills\n <\/h1>\n\n#### [Back to the top](#0)\n","e742aebb":"### Lets focus on the teams points scored:\n<a id=1.2><\/a>\n \n#### [Back to the top](#0)","cdd99573":"### Lets focus on the drivers points scored:\n<a id=2.2><\/a>\n \n#### [Back to the top](#0)","accebd6d":" <h1 style=\"background-color:#D7BDE2;font-family:newtimeroman;font-size:300%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f 1. Constructors Section\n \ud83c\udfce\ufe0f<\/h1> <a id=1><\/a>\n \n#### [Back to the top](#0)","ae681667":"### Lets focus only on the teams Grand Prix wins:","a7694856":" <h1 style=\"background-color:#68D1C5;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f Importing data, simple preliminary analysis\n \ud83c\udfce\ufe0f<\/h1><a id=3.1><\/a>","880c502c":"![](http:\/\/www.thesouthafrican.com\/wp-content\/uploads\/2020\/05\/b6d91930-sebastian-vettel.jpg)","37ba02a7":"#### Fastest time is held by Alain Prost (01:14:15) from 1950","1a7d22cc":"### Best times history for Bahrain Grand Prix\n<a id=3.4><\/a>\n \n#### [Back to the top](#0)","b038961e":" <h1 style=\"background-color:#FF9AA2;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0f Importing data, simple preliminary analysis\n \ud83c\udfce\ufe0f<\/h1><a id=2.1><\/a>","638591a5":"### Lets check top four constructors achievments during years\n<a id=1.5><\/a>\n \n#### [Back to the top](#0)","b110b770":"### Lets check how the teams did in the last 2020 season\n<a id=1.4><\/a>\n \n#### [Back to the top](#0)","59f7cbe0":"### Summary of the drivers analyse\n<a id=2.6><\/a>\n\n ##### * Biggest amount of World Championship wins have both M.Schumacher and L.Hamilton (7 wins)\n ##### * But L.Hamilton has much bigger all time points advantage (2222 points more then M.Schumacher)\n ##### * Most of the Grand Prix podium drivers are from Great Britain\n  ##### * In the 2020 Season we can see a big advantage of L.Hamilton over V.Bottas and M.Versttapen\n   ##### * As we can see We can see that L.Hamilton constantly improves his points gain over next seasons\n   \n    \n#### [Back to the top](#0)","5f2e61e2":"### Lets see how many drivers from each team  got the podium\n<a id=1.3><\/a>\n \n#### [Back to the top](#0)","19bfdff6":"\nLet's check the points stats:","381fbc1c":"### Summary of the lap times analyse\n<a id=3.6><\/a>\n\n#### * Often the best times for tracks are held by drivers from 1950-1980, cars are much better these years but often tracks were shorter and built differently.\n#### * The same reason is with the with the cars speed, in 2008-2010 with F1 V8 cars the speeds were really incredible but we haven't so many safety regulations that are now, you can see it on the picture under\n![](http:\/\/external-preview.redd.it\/AIZqXq3PLmvmgNE_h2K8I1DvfFu5QWbZfqRt-2IAPwc.png?auto=webp&s=684877e64a70c14a149601c42129c48d0e82ec75) \n#### * The diffrence is very easy to see on tracks that are new (f.e. Bahrain previously shown) that because of safe regulation and construction changes the lap time are not getting  proportionally better not but never the less they are changing\n#### * The top speed is now chaning but it is not so visable so much on the full race (hybrid f1 era) but the most on the turns\n   \n    \n","98b011a7":"### Lets check how the drivers did in the last 2020 season\n<a id=2.4><\/a>\n \n#### [Back to the top](#0)","6109ec42":"### Lets check top four all time drivers during years\nLewis Hamilton    3778.0\n\nSebastian Vettel  3018.0\n\nFernando Alonso   1899.0\n<a id=2.5><\/a>\n \n#### [Back to the top](#0)","628afa2a":" <h1 style=\"background-color:#68D1C5;font-family:newtimeroman;font-size:200%;text-align:center;border-radius: 15px 50px;\"> \ud83c\udfce\ufe0fLet's check the fastest laps of some tracks\n \ud83c\udfce\ufe0f<\/h1><a id=3.2><\/a>\n  \n#### [Back to the top](#0)","71a17ff0":"### Summary of the constructors analyse\n<a id=1.6><\/a>\n\n ##### * The best team overall from the beginning of the F1 is Ferrari\n ##### * The second biggest amount has gathered Mercedes altough he started racing in 2010\n ##### * One of the best teams Williams from 2014 significantly drops down his acquirements\n  ##### * Red Bull that is also not racing from long time ago is in top 4 points scorers overall\n   ##### * We can see a huge points advantage in season 2020 from Mercedes\n   \n    \n#### [Back to the top](#0)\n","3aad46d5":"#### Fastest time is held by Charles Leclerc (01:30:15) from 2004","21e5c8d1":" <h1 style=\"background-color:#68D1C5;font-family:newtimeroman;font-size:300%;text-align:left;border-radius: 25px 75px;\"> \ud83c\udfce\ufe0f 3. Lap Times\n \ud83c\udfce\ufe0f<\/h1><a id=3><\/a>\n  \n#### [Back to the top](#0)","1da33847":"![](https:\/\/d3cm515ijfiu6w.cloudfront.net\/wp-content\/uploads\/2020\/08\/21104424\/Max-Verstappen-1.jpg)","a6824978":"#### Fastest time is held by Daniel Ricciardo (01:39:16) from 2009","c77d2de9":"### Best times history for Abu Dhabi Grand Prix\n<a id=3.5><\/a>\n \n#### [Back to the top](#0)"}}