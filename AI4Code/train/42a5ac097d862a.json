{"cell_type":{"f1ff5b79":"code","57969516":"code","5e8cc445":"code","feee58e1":"code","e02deba5":"code","bee7650f":"code","8a34d569":"code","109c2434":"code","42c532bb":"code","9c0a7d83":"code","0f1ff20e":"markdown","c18d252d":"markdown","8c351da1":"markdown","7c71091b":"markdown","6e437ae1":"markdown","b5f53bdb":"markdown","8fb8efa3":"markdown","99f85a7f":"markdown","39ada521":"markdown","7c704e65":"markdown","b6607c99":"markdown","7b708578":"markdown","0b46b7cb":"markdown","6ba82d4d":"markdown"},"source":{"f1ff5b79":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn import preprocessing\nsns.set_style(\"whitegrid\")\n\n#Supress Warnings:\nimport warnings\nwarnings.filterwarnings('ignore')\n","57969516":"dry_beans = pd.read_csv('\/kaggle\/input\/dry-beans-classification-iti-ai-pro-intake01\/train.csv')\ndry_beans = dry_beans.set_index(\"ID\")\ndry_beans.head()","5e8cc445":"#General Info:\ndry_beans.info()","feee58e1":"#Check for duplicate rows:\ndry_beans.duplicated().sum()","e02deba5":"#Statistical Summary:\ndry_beans.describe().T","bee7650f":"dry_beans[\"y\"].value_counts().plot(kind='bar',\n                                   title= \"Bean type counts in the training data\",\n                                   xlabel= 'Bean type',\n                                   ylabel= 'Count');","8a34d569":"fig, axes = plt.subplots(4, 4, figsize=(20, 25))\nfor feature, ax in zip(dry_beans.columns.drop(\"y\"), axes.flatten()):\n    sns.histplot(data=dry_beans[feature],ax=ax)\n    median = dry_beans[feature].median()\n    ax.set_title( f'{feature} ,Median : {median:0.2f}')\n    ax.axvline(median,\n               color ='red', \n               lw=2, \n               alpha=0.5)\nplt.show()","109c2434":"fig, axes = plt.subplots(8, 2, figsize = (20, 40))\nfor feature, ax in zip(dry_beans.columns.drop(\"y\"), axes.flatten()):\n    sns.violinplot(data=dry_beans,\n                   x=\"y\",\n                   y=feature,\n                   inner=\"quartile\",\n                   ax=ax)\n    ax.set(xlabel=None)\nplt.show()","42c532bb":"plt.figure(figsize = [12, 8])\nsns.heatmap(dry_beans.corr(),annot = True, cmap = 'viridis_r', fmt = '.2f');","9c0a7d83":"sns.pairplot(dry_beans, hue=\"y\");","0f1ff20e":"- Many features show skewness and outliers in their distribution, these points may resemble a unique class of dry beans.\n- We should investegate the distribution of each feature with respect to the classes of the dry beans.","c18d252d":"#### - The dataset consists of features describing the shape of the bean and the goal is to predict it's type.\n#### - This dataset is collected using a computer vision system that extracted shape features from beans images.\n#### - In total, 13,611 dry bean samples were obtained, the training data contains 10,834 of them.\n\n#### **Data fields:**\n1. **ID**, an ID for this instance.\n2. **Area - (A)**, The area of a bean zone and the number of pixels within its boundaries.\n3. **Perimeter - (P)**, Bean circumference is defined as the length of its border.\n4. **MajorAxisLength - (L)**, The distance between the ends of the longest line that can be drawn from a bean.\n5. **MinorAxisLength - (l)**, The longest line that can be drawn from the bean while standing perpendicular to the main axis.\n6. **AspectRatio - (K)**, Defines the relationship between L and l : \\\\(K = \\frac{L}{l}\\\\)\n7. **Eccentricity - (Ec)**, Eccentricity of the ellipse having the same moments as the region.\n8. **ConvexArea - (C)**, Number of pixels in the smallest convex polygon that can contain the area of a bean seed.\n9. **EquivDiameter - (Ed)**, The diameter of a circle having the same area as a bean seed area: \\\\(E_{d} = \\sqrt{\\frac{4A}{\\pi}}\\\\)\n10. **Extent - (Ex)**, The ratio of the pixels in the bounding box to the bean area \\\\(Ex = \\frac{A}{A_{B}}\\\\) Where \\\\(A_{B} = \\\\) Area of bounding rectangle.\n11. **Solidity - (S)**, Also known as convexity. The ratio of the pixels in the convex shell to those found in beans: \\\\(S = \\frac{A}{C}\\\\)\n12. **Roundness - (R)**, Calculated with the following formula: \\\\(R = \\frac{4\\pi A}{P^2}\\\\)\n13. **Compactness - (CO)**, Measures the roundness of an object: \\\\(CO = \\frac{E_{d}}{L}\\\\)\n14. **ShapeFactor1** - \\\\((SF_{1})\\\\) Calculated with the following formula: \\\\(SF_{1} = \\frac{L}{A}\\\\)\n15. **ShapeFactor2** - \\\\((SF_{2})\\\\) Calculated with the following formula: \\\\(SF_{2} = \\frac{l}{A}\\\\)\n16. **ShapeFactor3** - \\\\((SF_{3})\\\\) Calculated with the following formula: \\\\(SF_{3} = \\frac{A}{\\frac{L}{2}*\\frac{L}{2}*\\pi}\\\\)\n17. **ShapeFactor4** - \\\\((SF_{4})\\\\) Calculated with the following formula: \\\\(SF_{4} = \\frac{A}{\\frac{L}{2}*\\frac{l}{2}*\\pi}\\\\)\n18. **y**, the class of the bean. It can be any of ***BARBUNYA*, *SIRA*, *HOROZ*, *DERMASON*, *CALI*, *BOMBAY*, and *SEKER***.\n\n#### **The general features of the specified dry beans are as follows:**\n> - **Cali;** It is white in color, its seeds are slightly plump and slightly larger than dry beans and in shape of kidney.\n> - **Horoz;** Dry beans of this type are long, cylindrical, white in color and generally medium in size.\n> - **Dermason;** This type of dry beans, which are fuller flat, is white in color and one end is round and the other ends are round.\n> - **Seker;** Large seeds, white in color, physical shape is round.\n> - **Bombay;** It is white in color, its seeds are very big and its physical structure is oval and bulging.\n> - **Barbunya;** Beige-colored background with red stripes or variegated, speckled color, its seeds are large, physical shape is oval close to the round.\n> - **Sira;** Its seeds are small, white in color, physical structure is flat, one end is flat, and the other end is round.\n\n<center><img src=\"https:\/\/i.ibb.co\/9hb9jKh\/Capture.jpg\" width=600 height=600\/><\/center>","8c351da1":"- We can see a linear trend between many features.\n- Notice that **Bombay** class is mostly separated from other classes in some features, which means that despite having low count in the dataset, a model may still be able to correctly classify it.\n- The classes are clearly clustered within some scatterplots, mainly between the area and perimeter features with all other features.\n- Even though we can see clusters for each class, there's some overlap between them, mainly between **Dermason** and **Sira** classes.\n- Some features **(aspect ration, eccentricity, compactness)** seems to hit a bound when plotted against roundness , which indicates that (in the given data) no outliers occur above that bound.  ","7c71091b":"#### The dataset is clean:  no missing values or duplicated entries were found.","6e437ae1":"<h1><center>Dry Beans Classification<\/center><\/h1>","b5f53bdb":"### **Bivariate\/Multivariate Analysis:**","8fb8efa3":"## **Importing Libraries:**","99f85a7f":" - There's an imbalance between the count of each class.\n - Dermason is the most frequent class. **(2837)**\n - Bombay is the least frequent class. **(418)**\n - There's a big difference between the 2 classes, which should to be taken into account when building a model.","39ada521":"#### The features vary greatly in scales, scaling maybe required.","7c704e65":"## **Training Data EDA:**","b6607c99":"#### Correlation Matrix:","7b708578":"##### - There are a lot of linearly correlated features:\n- area & convex area : **1.00**\n- compactness & shape factor 3 : **1.00**\n- equivalent diameter & perimeter: **0.99**\n- equivalent diameter & convex area: **0.99**\n- major axis length & perimeter: **0.98**\n- area & perimeter: **0.97**\n- convex area & perimeter : **0.97**\n- major axis length & equivalent diameter : **0.96**\n- minor axis length & equivalent diameter : **0.95**\n- minor axis length & convex area : **0.95**\n- minor axis length & shape factor 1 : **-0.95**\n- eccentricity & compactness : **-0.97**\n- eccentricity & shape factor 3 : **-0.98**\n- aspect ration & shape factor 3 : **-0.98**\n- aspect ration & compactness : **-0.99**\n\n##### **- We may try to select features manually, or use PCA to get uncorrelated features.**\n##### **- If a Tree-based model is used, we may not need to drop any features as Tree models don't get affected by correlated features, but the best practice is to remove them when possible.**","0b46b7cb":"- Some features have a very skewed distribution with long tails **(eccentricity, solidity, roundness, shape factor2, shape factor4)**\n- **Bombay** class differs greatly from other classes, it has a larger area and perimeter, and can be clearly distinguished from other classes based on Minor Axis Length **(>310)** and Shape Factor 1 **(<0.0041)**.\n- Both **Barbunya** class and **Cali** class have similar distributions and values in many features **(area, minor axis length, equivalent diameter, extent, shape factor1)**, which may lead to mislabeling one as the other.\n- **Dermason** class is similar to **Seker** class in some features, and **Sira** class in other features. It may be a difficult class to label accurately!","6ba82d4d":"### **Univariate Analysis:**"}}