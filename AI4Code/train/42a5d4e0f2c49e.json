{"cell_type":{"814871f1":"code","8f3232e0":"code","fd254444":"code","14c04fe0":"code","9f7febf0":"code","dcf668ee":"code","b9cbcaa9":"code","24c7279b":"code","c4acb333":"code","6453f217":"code","2b1dd069":"code","5f08728b":"code","4ba7a659":"code","5645cfb8":"code","7703bb5d":"code","1bbed642":"code","4df19c41":"code","50c307b5":"code","c34dd9ba":"code","ce7adb5e":"code","577c17a1":"code","1a719022":"code","682675e6":"code","53ff6b02":"code","d762f041":"code","28a3f184":"code","598fcf75":"code","d8b9cebc":"markdown"},"source":{"814871f1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\npd.set_option('display.max_columns',None)\npd.set_option('display.max_rows',None)","8f3232e0":"train=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')","fd254444":"train.head()","14c04fe0":"test.head()","9f7febf0":"train.info()","dcf668ee":"test.info()","b9cbcaa9":"f,ax=plt.subplots(figsize=(8,6))\nsns.heatmap(train.isnull(),cbar=False)","24c7279b":"print(f'Number of Missing Values in Train: {sum(train.isnull().sum())}')\nprint(f'Number of Missing Values in Test: {sum(test.isnull().sum())}')","c4acb333":"train.describe()","6453f217":"train.dtypes","2b1dd069":"test.dtypes","5f08728b":"train.nunique().sort_values(ascending=True)","4ba7a659":"test.nunique().sort_values(ascending=True)","5645cfb8":"test_1=test.copy()","7703bb5d":"train.drop(['id'],axis=1,inplace=True)\ntest.drop(['id'],axis=1,inplace=True)","1bbed642":"int_columns=['f1','f16','f27','f55','f86']\ntrain_unique = pd.DataFrame(train[int_columns].nunique())\ntrain_unique=train_unique.reset_index(drop=False)\ntrain_unique.columns = ['Features', 'Count']","4df19c41":"test_unique = pd.DataFrame(test[int_columns].nunique())\ntest_unique=test_unique.reset_index(drop=False)\ntest_unique.columns = ['Features', 'Count']","50c307b5":"sns.set_style('darkgrid')\nsns.barplot(x= train_unique.Features, y=train_unique.Count)\nplt.title('Count of Unique Values - Train')\nplt.xlabel('Features')\nplt.ylabel('Count')\nplt.xticks(rotation=30, horizontalalignment=\"center\")\nplt.figure(figsize=(20,20))","c34dd9ba":"sns.set_style('darkgrid')\nsns.barplot(x= test_unique.Features, y=test_unique.Count)\nplt.title('Count of Unique Values - Test')\nplt.xlabel('Features')\nplt.ylabel('Count')\nplt.xticks(rotation=30, horizontalalignment=\"center\")\nplt.figure(figsize=(20,20))","ce7adb5e":"f,axs = plt.subplots(10,10,figsize=(12, 12))\naxs = axs.flatten()\n\nfor idx, ax in enumerate(axs):\n    sns.kdeplot(data=train, x=f'f{idx}', \n                fill=True, \n                ax=ax)\n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(f'f{idx}', loc='right', weight='bold', fontsize=10)\n\n\nf.tight_layout()\nplt.show()","577c17a1":"f,ax=plt.subplots(figsize=(8,6))\nsns.histplot(data=train.loss,kde=True)","1a719022":"train.columns","682675e6":"X=train.iloc[:,:-1]\nY=train['loss']","53ff6b02":"from statsmodels.stats.outliers_influence import variance_inflation_factor as vif\n\nvif_X=pd.DataFrame()\nvif_X['feature']=X.columns\nvif_X['VIF_Factor']=[vif(X.values,i) for i in range(X.shape[1])]\nvif_X.round(2)","d762f041":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX_train=sc.fit_transform(X)\nX_test=sc.transform(test)\ny_train=Y","28a3f184":"from sklearn.metrics import mean_squared_error,mean_absolute_error\nfrom sklearn.linear_model import LinearRegression\nlr=LinearRegression()\n\nlm_1=lr.fit(X_train,y_train)\npred_1=lm_1.predict(X_train)\npred_test=lm_1.predict(X_test)\nrmse_1=mean_squared_error(y_train,pred_1,squared=False)\nrmse_1","598fcf75":"output=pd.DataFrame({'id':test_1.id,'loss':pred_test})\noutput.to_csv('submission.csv', index=False)","d8b9cebc":"If you like my work.Do upvote!"}}