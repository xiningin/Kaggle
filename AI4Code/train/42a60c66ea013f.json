{"cell_type":{"16240a06":"code","d027dd20":"code","7e499195":"code","29cd59a9":"code","e69f8d96":"code","df94294f":"code","baf89171":"code","16edc5c7":"code","52c26cc9":"code","6cf91b76":"code","2a6ba0e1":"code","27749c98":"code","be3ffa70":"code","961e80cb":"code","528e2e44":"code","95375674":"code","3dc3e297":"code","70e1143e":"code","84529008":"code","e8da8078":"code","06174c66":"code","62a1097e":"code","5ed18e06":"code","f7849fbc":"code","2e9eb38c":"markdown","9a51da99":"markdown","aaca8b0f":"markdown","91dfd93f":"markdown","f5a082fc":"markdown","040696a9":"markdown","9e3fc72d":"markdown","1628c411":"markdown","79f2ded1":"markdown","45828306":"markdown","9274115f":"markdown","681b130d":"markdown","2571eb3e":"markdown","5e44c254":"markdown","c7d33605":"markdown","49963e61":"markdown","60167a79":"markdown","63aebc26":"markdown","20713531":"markdown","4c183f54":"markdown","118ad56c":"markdown","863783b5":"markdown","9930129a":"markdown"},"source":{"16240a06":"from mpl_toolkits.mplot3d import Axes3D\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport math\nimport seaborn as sns\n\nprint(os.listdir('..\/input\/google-playstore-apps\/'))","d027dd20":"nRowsRead = None\ndf = pd.read_csv('..\/input\/google-playstore-apps\/Google-Playstore.csv')\n\nprint(df.info())\ndf.head()","7e499195":"df = df.drop(['App Id', 'Currency', 'Developer Website', 'Developer Email', 'Privacy Policy', 'Size', 'Price'], axis=1)","29cd59a9":"df = df[df['Free'] != False]","e69f8d96":"irrelevant_cat = ['Puzzle', \n                  'Arcade', \n                  'Simulation', \n                  'Action', \n                  'Adventure', \n                  'Racing', \n                  'Role Playing', \n                  'Board', \n                  'Strategy', \n                  'Casino', \n                  'Card', \n                  'Word', \n                  'Sports', \n                  'Trivia',\n                  'Casual',\n                  'Music',\n                  'Educational']\n\nfor cat in irrelevant_cat:\n    df = df.drop(df.index[df['Category'] == cat])","df94294f":"df.dropna(inplace=True)","baf89171":"df['Released'] = pd.to_datetime(df['Released'], format='%b %d, %Y',\n                                 infer_datetime_format=True, errors='coerce')","16edc5c7":"plt.rcParams.update({'font.size': 12, 'figure.figsize': (8, 8)})\nplt.ylabel('Number of Installs')\nplt.xlabel('Percentage')\nplus_mill = ['tab:blue' if (x < 1000000.0) else 'tab:green' for x in df['Minimum Installs'].value_counts().sort_index().keys().tolist()]\ndf['Minimum Installs'].value_counts(normalize=True).sort_index().plot(kind=\"barh\", \n                                                                      title='Proportion of the Number of Installs (Non-Games)', \n                                                                      color=plus_mill);\nplt.gca().invert_yaxis()","52c26cc9":"rating_installation = df[['Minimum Installs', 'Rating']]\n\ncorr = rating_installation.corr(method='spearman')\n\nfig, ax = plt.subplots(figsize=(9, 4))\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True,\n    annot=True,\n    fmt=\".1n\",\n    linewidths=.5\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right',\n    \n);\nax.set_yticklabels(\n    ax.get_yticklabels(),\n    rotation=0,\n    horizontalalignment='right',\n);\nplt.title(\"Ratings and Installs Correlation Matrix\")\nax","6cf91b76":"all_apps = df.groupby('Category')['Rating'].mean()\n\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (8, 8)})\nplt.ylabel('Category')\nplt.xlabel('Average Rating')\nall_apps.sort_values(ascending=False).plot(kind=\"barh\", title='Average Rating per Category');\nplt.gca().invert_yaxis()","2a6ba0e1":"million = df[df['Minimum Installs'] >= 1000000]\n\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (10, 12)})\nplt.ylabel('Rating')\nplt.xlabel('Percentage')\nmillion['Rating'].value_counts(normalize=True).sort_index().plot(kind=\"barh\", title='Proportion of Ratings with Apps over 1 Million');\nplt.gca().invert_yaxis()","27749c98":"average = million.groupby('Category')['Rating'].mean()\n\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (10, 12)})\nplt.ylabel('Category')\nplt.xlabel('Average Rating (Mean)')\naverage.sort_values(ascending=False).plot(kind=\"barh\", title='The Average Rating of each Category with over a Million Installs');\nplt.gca().invert_yaxis()","be3ffa70":"pd.set_option(\"display.max.rows\", 1020)\n\n#v_good_rating = million[(million['Rating'] >= 4.8) & (million['Rating'] <= 5.0)]\ngood_rating = million[million['Rating'] >= 4.0]\n#bad_rating = million[(million['Rating'] <= 2.2) & (million['Rating'] >= 0.1)]\n","961e80cb":"plt.rcParams.update({'font.size': 12, 'figure.figsize': (10, 12)})\nplt.ylabel('Category')\nplt.xlabel('Percentage')\ngood_rating['Category'].value_counts(normalize=True).plot(kind=\"barh\", title='Proportion of Categories (High Rating & over a Million Installs)');\nplt.gca().invert_yaxis()","528e2e44":"average_install = good_rating.groupby('Category')['Minimum Installs'].mean()\nplt.axes().set_facecolor(\"white\")\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (6, 8)})\nplt.ylabel('Category')\nplt.xlabel('Installs per 10 million')\n\naverage_install.sort_values().plot(kind=\"barh\", title='Average Number of Installs per Category');\n","95375674":"age_install = good_rating.groupby('Content Rating')['Minimum Installs'].mean()\n\nplt.axes().set_facecolor(\"white\")\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (5, 4)})\nplt.ylabel('Category')\nplt.xlabel('Installs per 10 million')\nage_install.sort_index().plot(kind=\"barh\", title='Average Number of Installs per Content Rating');\nplt.gca().invert_yaxis()\nplt.savefig(\"Age rating\", transparent=False, bbox_inches=\"tight\")","3dc3e297":"good_rating[\"Content Rating\"].value_counts()","70e1143e":"editor_install = good_rating.groupby('Editors Choice')['Minimum Installs'].mean()\n\nplt.axes().set_facecolor(\"white\")\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (10, 4)})\nplt.ylabel('Category')\nplt.xlabel('Installs per 10 million')\neditor_install.sort_index().plot(kind=\"barh\", title='Editors Choice Average Number of Installs');\nplt.gca().invert_yaxis()\nplt.savefig(\"Editors Choice\", facecolor=\"white\", transparent=False, bbox_inches=\"tight\")","84529008":"good_rating[\"Editors Choice\"].value_counts()","e8da8078":"app_editors = good_rating[good_rating['Editors Choice'] != False]\n\nplt.rcParams.update({'font.size': 12, 'figure.figsize': (8, 8)})\nplt.ylabel('Category')\nplt.xlabel('Percentage')\napp_editors['Category'].value_counts().plot(kind=\"barh\", title='Editors Choice (High Rating, over a Million Installs)');\nplt.gca().invert_yaxis()","06174c66":"ad_install = good_rating.groupby('Ad Supported')['Minimum Installs'].mean()\nin_app_install = good_rating.groupby('In App Purchases')['Minimum Installs'].mean()","62a1097e":"plt.rcParams.update({'font.size': 12, 'figure.figsize': (7, 4)})\nplt.ylabel('Category')\nplt.xlabel('Installs per 10 million')\nad_install.sort_index().plot(kind=\"barh\", title='Ad Supported Number of Installs');\nplt.gca().invert_yaxis()","5ed18e06":"plt.rcParams.update({'font.size': 12, 'figure.figsize': (7, 4)})\nplt.ylabel('Category')\nplt.xlabel('Installs per 10 million')\nin_app_install.sort_index().plot(kind=\"barh\", title='In App Purchases Average Number of Installs');\nplt.gca().invert_yaxis()","f7849fbc":"recent_apps = million[(million['Released'] > '2020-10-01') & (million['Released'] < '2020-12-31')]\nrecent_apps.sort_values(by=['Released'], ascending=False)","2e9eb38c":"# Conclusion\n\nOverall it looks like apps with elements of communication or productivity tend to get more downloads on average. However, going for educational or health & fitness apps will make it more likely to get featured as editors choice.\n\nApps with a teen rating tend to be successful, but this may be because communication apps tend to require a teen rating.\n\nApps with in-app purchases tend to be more successful over ad supported apps.","9a51da99":"The fact that 'Tools' apps are dominant, means that when done right, they consistently perform really well.","aaca8b0f":"# Introduction\n\nThis is an investigation on which categories are more likely to make an 'free' app successful. I won't be including games as most games are just rehashes of older ones.","91dfd93f":"## Correlation with ratings and installation\nThere is a positive correlation between app ratings and the number of installs. Looking at the apps with high ratings will help narrow down what makes an app successful.","f5a082fc":"## Ad supported\n\nApps without ads get a higher average number of installs.","040696a9":"# Cleaning","9e3fc72d":"## Removing paid apps\nAs I'm investigating free apps.","1628c411":"## Editors Choice\n\nOf all apps with over 1 million downloads and a rating above 4.0, only 229\/15440 are labeled as editors choice. When an app manages to get set as an editors choice, it\u2019s pretty much guaranteed to be successful.","79f2ded1":"## Average number of installs per category\n\nApps under communication are the highest by far, with an average of 60 million installs. Apps under productivity are also notably high.","45828306":"## In App Purchases\n\nApps without an-app purchases are more likely to get more installs. But the difference is smaller in comparison to enabling ads.","9274115f":"## Fast growing apps\n\nAll apps that managed to achieve over 1 milllion downloads, and were released after October 2020.","681b130d":"## Number of installations\n\nI would consider an app that has achieved over 1 million downloads a successful app. This figure shows that only less than 3% of all free non-game apps achieve this. ","2571eb3e":"## Editors choice apps\n\nThe data shows that there is a bias in the categories of apps that get selected as editors choice. As over 60% of all apps labeled as editors choice fall under the categories 'Education' and \u2018Health & Fitness\u2019.","5e44c254":"## Removing irrelevant columns\nThe remaining categories are sufficient in identifying the app and the characteristics.","c7d33605":"## Ratings over 4.0","49963e61":"## Dropping missling values","60167a79":"Narrowing down the apps which have over 1 million installs, the average rating for those popular apps is around 4.3.","63aebc26":"## Average rating per caregory (Over 1 million installs)\n\nApps with a lot of installs are generally well received.\n\nThose lower rated apps tend to be banking or tv apps. (Congrats to Android TV Home for being the lowest rated app (1.1) that\u2019s brave enough to display it\u2019s rating).\n\nApps with higher ratings tend to be books & reference, health & fitness and educational. (Congrats to Skill Academy by Ruangguru for having over 365,000 ratings and having an average of 5.0) \n \nOf all the successful apps, each category seems to have a decent average rating.\n","20713531":"# Plots","4c183f54":"## Converting date format","118ad56c":"## Average installs per age rating\n\nApps that come under a teen content rating tend to get a larger number of installs.\n\nQuite interesting as there are nearly 10 times more apps with the content rating as \u201cEveryone\u201d over \u201cTeen\u201d.","863783b5":"## Removing irrelevant categories\nThese categories are all related to gaming.","9930129a":"## Average rating per category\n\nNot a lot of insight here. But with 937,442 apps, there\u2019s going to be a lot of variance."}}