{"cell_type":{"40cc020c":"code","b16c74a6":"code","e524501d":"code","67f7d4e1":"code","22c89455":"code","43a572d6":"code","589d4865":"code","7fed1d97":"code","48d59774":"markdown","6ff19e91":"markdown","6a177347":"markdown","89953564":"markdown","3a663c98":"markdown"},"source":{"40cc020c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n\n","b16c74a6":"import spacy\nfrom spacy.lang.en.stop_words import STOP_WORDS\nfrom string import punctuation","e524501d":"file1 = open(\"\/kaggle\/input\/data-testing\/data.txt\",\"r\")\n\ntext=file1.read()\n\nprint(text)","67f7d4e1":"stopword=list(STOP_WORDS)\n\nnlp=spacy.load('en_core_web_sm')\n\ndoc=nlp(text)\n\ntokens=[token.text for token in doc]\n\npunctuation+='\\n'","22c89455":"word_frequencies={}\nfor word in doc:\n    if word.text.lower() not in stopword:\n        if word.text.lower() not in punctuation:\n            if word.text not in word_frequencies.keys():\n                word_frequencies[ word.text]=1\n            else:\n                word_frequencies[ word.text]+=1\n\n\nmax_freq=max(word_frequencies.values())","43a572d6":"for word in word_frequencies.keys():\n    word_frequencies[word]=word_frequencies[word]\/max_freq\n\n\nsentence_token=[sent for sent in doc.sents]","589d4865":"sentence_scores={}\nfor sent in sentence_token:\n    for word in sent:\n        if word.text.lower() in word_frequencies.keys():\n            if sent not in sentence_scores.keys():\n                sentence_scores[sent]=word_frequencies[word.text.lower()]\n            else:\n                 sentence_scores[sent]+=word_frequencies[word.text.lower()]\n    ","7fed1d97":"select_length=int(len(sentence_token)*0.2)\n\nfrom heapq import nlargest\nsummary=nlargest(select_length,sentence_scores,key=sentence_scores.get)\n\n\nfinal_summary=[word.text for word in summary]\n\nsummary=' '.join(final_summary)\n\nprint(summary)","48d59774":"# Find the Frequencies for each word ","6ff19e91":"# Add stop word and puctuation **","6a177347":"# **Import Libaray****","89953564":"# ***Read text and print it ***","3a663c98":"# **Fetch sentacne from the artical **"}}