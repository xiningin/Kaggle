{"cell_type":{"c035ebbd":"code","bc10bcf9":"code","2b0d89e0":"code","caa910c1":"code","0b33e6c4":"code","7615f328":"code","2097ebf9":"code","c92dd723":"code","5424a4ba":"code","630183ec":"code","ee636d98":"code","45e0bc49":"code","9978b8aa":"code","58d7aa36":"code","2a602e7f":"code","9a15f580":"code","4591bc17":"code","17de2393":"code","9d44a026":"code","d76f31af":"code","df7503f6":"code","5110cea7":"code","60602abb":"code","ac31245f":"code","e2486b43":"code","7eb517fe":"code","13157084":"markdown","0b6bddd9":"markdown","696e491d":"markdown","f0fbae04":"markdown","57a3dc1b":"markdown","55a87e68":"markdown","470151ae":"markdown","a237ff6b":"markdown","0095e8a2":"markdown","3d87ae1a":"markdown","77f026f7":"markdown","0340dccc":"markdown","3e9cbc78":"markdown","546ee5f0":"markdown"},"source":{"c035ebbd":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bc10bcf9":"import numpy as np\r\nimport pandas as pd","2b0d89e0":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\r\ntrain.head(5)","caa910c1":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\r\ntest.head(5)\r\n\r\ntest_PassengerId = test.PassengerId","0b33e6c4":"data = [train, test]","7615f328":"print(train.shape)\r\nprint(test.shape)","2097ebf9":"train.isnull().sum()","c92dd723":"test.isnull().sum()","5424a4ba":"from sklearn.impute import SimpleImputer\r\n\r\ndef clean_missing_data(dataset):\r\n    imputer = SimpleImputer(missing_values=np.nan, strategy='mean')\r\n    dataset['Age'] = imputer.fit_transform(dataset[['Age']])\r\n    dataset['Fare'] = imputer.fit_transform(dataset[['Fare']])\r\n\r\n    imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\r\n    dataset['Embarked'] = imputer.fit_transform(dataset[['Embarked']])\r\n\r\n    return dataset\r\n\r\nfor dataset in data:\r\n    clean_missing_data(dataset)","630183ec":"train.isnull().sum()","ee636d98":"test.isnull().sum()","45e0bc49":"for dataset in data:\r\n    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\r\n    \r\n    dataset.drop([\"Cabin\", \"PassengerId\", \"SibSp\", \"Name\", \"Ticket\"], axis=1, inplace=True)","9978b8aa":"train.head()","58d7aa36":"from sklearn.preprocessing import LabelEncoder\r\nle = LabelEncoder()\r\n\r\nfor dataset in data:\r\n    dataset[\"Sex\"] = le.fit_transform(dataset.Sex)\r\n    dataset[\"Embarked\"] = le.fit_transform(dataset.Embarked)","2a602e7f":"train.Title.value_counts()","9a15f580":"for dataset in data:\r\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\r\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\r\n\r\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\r\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\r\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')","4591bc17":"title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\r\nfor dataset in data:\r\n    dataset['Title'] = dataset['Title'].map(title_mapping)\r\n    dataset['Title'] = dataset['Title'].fillna(0)\r\n\r\ntrain.head()","17de2393":"y = train[\"Survived\"]\r\nX = train.drop(columns = [\"Survived\"])","9d44a026":"from sklearn.preprocessing import StandardScaler\r\nsc = StandardScaler()\r\n\r\nX = sc.fit_transform(X)\r\ntest = sc.transform(test)","d76f31af":"from sklearn.model_selection import train_test_split\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)","df7503f6":"from xgboost import XGBClassifier\r\n\r\nclassifier = XGBClassifier()\r\nclassifier.fit(X_train, y_train)","5110cea7":"from sklearn.metrics import confusion_matrix, accuracy_score\r\n\r\ny_pred = classifier.predict(X_test)\r\ncm = confusion_matrix(y_test, y_pred)\r\nprint(cm)\r\n\r\naccuracy_score(y_test, y_pred)","60602abb":"from sklearn.model_selection import cross_val_score\r\n\r\naccuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)","ac31245f":"print(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\r\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","e2486b43":"prediction = classifier.predict(test)\r\nprediction","7eb517fe":"output = pd.DataFrame({'PassengerId': test_PassengerId, 'Survived': prediction})\r\noutput.to_csv('submission-xgbboost.csv', index=False)","13157084":"## LabelEncoding Categorical columns","0b6bddd9":"## Checking Performance of the model","696e491d":"## Creating New Feature and Dropping Some Columns","f0fbae04":"## Importing Basic Library","57a3dc1b":"## Dealing With Missing Data","55a87e68":"## Making Prediction on Test Dataset","470151ae":"## Creating CatBoost Classifier Model","a237ff6b":"## Encoding Other Categorical Columns","0095e8a2":"## Seperating Dependent Variable","3d87ae1a":"## Analysing Dataset","77f026f7":"## Feature Scaling","0340dccc":"## Importing and Viewing Datasets","3e9cbc78":"## Splitting the Data","546ee5f0":"## Using k-Fold Cross Validation for Better Performance"}}