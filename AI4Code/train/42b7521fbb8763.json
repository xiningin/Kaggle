{"cell_type":{"b899301e":"code","601b1f8e":"code","8ef1c3c7":"code","185d9f86":"code","9dd7c9d7":"code","3d9ece68":"code","41906d95":"code","21a1b783":"markdown","497b3e38":"markdown","7fff0db1":"markdown","e7ef6ec0":"markdown","54cecb3c":"markdown","abe16e8d":"markdown","93225107":"markdown","d60d3fda":"markdown"},"source":{"b899301e":"#Import libraries\nimport numpy as np\nimport pandas as pd\n\n#Read in data\ndf = pd.read_csv(\"..\/input\/pga-tour-20102018-data\/PGA_Data_Historical.csv\")\n\n#Number of Rows\nprint(\"Number of Rows: \" + str(len(df)))\n#Number of Columns\nprint(\"Number of Columns: \" + str(len(df.columns)))","601b1f8e":"#Transpose based on key value pairs\nwide_df = df.set_index(['Player Name', 'Variable', 'Season'])['Value'].unstack('Variable').reset_index()\n\n#Number of Rows\nprint(\"Number of Rows: \" + str(len(wide_df)))\n#Number of Columns\nprint(\"Number of Columns: \" + str(len(wide_df.columns)))","8ef1c3c7":"#%% Missing value exploration\n\nnumber_non_missing_row = wide_df.apply(lambda x: x.count(), axis=1)\n\nnumber_of_columns = len(wide_df.columns)\n                                  \n#Creates data frame of above\nmissing_row_value_df = pd.DataFrame({'Player Name': wide_df['Player Name'],'Season': wide_df['Season'],\n                                     'number_non_missing_row': number_non_missing_row, \n                                     'number_of_columns': number_of_columns, \n                                     'percent_missing_row':(1 - (number_non_missing_row\/number_of_columns)) * 100})\n\n#Removes number_non_missing_row & number_of_columns \nmissing_row_value_df.drop(columns=['number_non_missing_row','number_of_columns'],inplace=True)\n\n#Sorts values low percentage to high\nmissing_row_value_df.sort_values('percent_missing_row', inplace=True)\n\n#Plot missing values in rows\nrowplot = missing_row_value_df.plot(x='Player Name', y='percent_missing_row', style='o', \n                                         title='Percent of Statistics Missing For Each Player Per Week', legend=False)\nrowplot.axes.get_xaxis().set_visible(False)\nrowplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row\nprint('Percent of Statistics Missing For Each Player:\\n' + str(missing_row_value_df['percent_missing_row'].describe()))\n\nmissing_row_value_df['percent_missing_row'] = missing_row_value_df['percent_missing_row'].astype(float)\n\n#Missing data columns data frame\nmissing_column_value_df = pd.DataFrame({'column_name': wide_df.columns,\n                                 'percent_missing': wide_df.isnull().sum() *100 \/ len(wide_df)})\n\n#Sorts data low percentage to high\nmissing_column_value_df.sort_values('percent_missing', inplace=True)\n\n#Plot missing values in rows\ncolumnplot = missing_column_value_df.plot(x='column_name', y='percent_missing', style='o', \n                                   title='Percent of Players Missing For Each Statistic', legend=False)\ncolumnplot.axes.get_xaxis().set_visible(False)\ncolumnplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row column\nprint('Percent of Players Missing For Each Statistic:\\n' + str(missing_column_value_df['percent_missing'].describe()))\n\nmissing_column_value_df['percent_missing'] = missing_column_value_df['percent_missing'].astype(float)","185d9f86":"#%% Drops rows with large amounts of missing data\n\n# Sets threshold on data with 40% missing values\nrow_threshold = len(wide_df.columns) - (0.4 * len(wide_df.columns))\n\n# Drops rows with more than 40% missing data\ndf_row_threshold = wide_df.dropna(thresh=row_threshold)","9dd7c9d7":"#%% Missing value exploration after row threshold\n\nnumber_non_missing_row = df_row_threshold.apply(lambda x: x.count(), axis=1)\n\nnumber_of_columns = len(df_row_threshold.columns)\n                                  \n#Creates data frame of above\nmissing_row_value_df = pd.DataFrame({'Player Name': df_row_threshold['Player Name'],'Season': df_row_threshold['Season'],\n                                     'number_non_missing_row': number_non_missing_row, \n                                     'number_of_columns': number_of_columns, \n                                     'percent_missing_row':(1 - (number_non_missing_row\/number_of_columns)) * 100})\n\n#Removes number_non_missing_row & number_of_columns \nmissing_row_value_df.drop(columns=['number_non_missing_row','number_of_columns'],inplace=True)\n\n#Sorts values low percentage to high\nmissing_row_value_df.sort_values('percent_missing_row', inplace=True)\n\n#Plot missing values in rows\nrowplot = missing_row_value_df.plot(x='Player Name', y='percent_missing_row', style='o', \n                                         title='Percent of Statistics Missing For Each Player Per Week', legend=False)\nrowplot.axes.get_xaxis().set_visible(False)\nrowplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row\nprint('Percent of Statistics Missing For Each Player:\\n' + str(missing_row_value_df['percent_missing_row'].describe()))\n\nmissing_row_value_df['percent_missing_row'] = missing_row_value_df['percent_missing_row'].astype(float)\n\n#Missing data columns data frame\nmissing_column_value_df = pd.DataFrame({'column_name': df_row_threshold.columns,\n                                 'percent_missing': df_row_threshold.isnull().sum() *100 \/ len(df_row_threshold)})\n\n#Sorts data low percentage to high\nmissing_column_value_df.sort_values('percent_missing', inplace=True)\n\n#Plot missing values in rows\ncolumnplot = missing_column_value_df.plot(x='column_name', y='percent_missing', style='o', \n                                   title='Percent of Players Missing For Each Statistic', legend=False)\ncolumnplot.axes.get_xaxis().set_visible(False)\ncolumnplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row column\nprint('Percent of Players Missing For Each Statistic:\\n' + str(missing_column_value_df['percent_missing'].describe()))\n\nmissing_column_value_df['percent_missing'] = missing_column_value_df['percent_missing'].astype(float)\n","3d9ece68":"#%% Drops all distance analysis columns and explore missing values\n\ndf_column_threshold = df_row_threshold.drop(df_row_threshold.filter(regex='Distance Analysis').columns, axis=1)\n\nnumber_non_missing_row = df_column_threshold.apply(lambda x: x.count(), axis=1)\n\nnumber_of_columns = len(df_column_threshold.columns)\n                                  \n#Creates data frame of above\nmissing_row_value_df = pd.DataFrame({'Player Name': df_column_threshold['Player Name'],'Season': df_column_threshold['Season'],\n                                     'number_non_missing_row': number_non_missing_row, \n                                     'number_of_columns': number_of_columns, \n                                     'percent_missing_row':(1 - (number_non_missing_row\/number_of_columns)) * 100})\n\n#Removes number_non_missing_row & number_of_columns \nmissing_row_value_df.drop(columns=['number_non_missing_row','number_of_columns'],inplace=True)\n\n#Sorts values low percentage to high\nmissing_row_value_df.sort_values('percent_missing_row', inplace=True)\n\n#Plot missing values in rows\nrowplot = missing_row_value_df.plot(x='Player Name', y='percent_missing_row', style='o', \n                                         title='Percent of Statistics Missing For Each Player Per Week', legend=False)\nrowplot.axes.get_xaxis().set_visible(False)\nrowplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row\nprint('Percent of Statistics Missing For Each Player:\\n' + str(missing_row_value_df['percent_missing_row'].describe()))\n\nmissing_row_value_df['percent_missing_row'] = missing_row_value_df['percent_missing_row'].astype(float)\n\n#Missing data columns data frame\nmissing_column_value_df = pd.DataFrame({'column_name': df_column_threshold.columns,\n                                 'percent_missing': df_column_threshold.isnull().sum() *100 \/ len(df_column_threshold)})\n\n#Sorts data low percentage to high\nmissing_column_value_df.sort_values('percent_missing', inplace=True)\n\n#Plot missing values in rows\ncolumnplot = missing_column_value_df.plot(x='column_name', y='percent_missing', style='o', \n                                   title='Percent of Players Missing For Each Statistic', legend=False)\ncolumnplot.axes.get_xaxis().set_visible(False)\ncolumnplot.set_ylabel('Percent (%)')\n\n#Summary statistics of percent missing row column\nprint('Percent of Players Missing For Each Statistic:\\n' + str(missing_column_value_df['percent_missing'].describe()))\n\nmissing_column_value_df['percent_missing'] = missing_column_value_df['percent_missing'].astype(float)","41906d95":"#Perent of missing values in entire dataframe\nprint(str((df_column_threshold.isnull().sum().sum()) \/ (len(df_column_threshold.columns)*len(df_column_threshold)) * 100) + '%')","21a1b783":"The initial wide formatted dataset consists of 11,223 rows and 2,083 columns. In the wide format, the rows consist of players and the seasons they played on tour. The columns are all of the variables from the PGA Tour website. Analyzing the data after making the transformation, there appears to be plenty of missing values.","497b3e38":"After the threshold has been set, there remains 1,678 rows and 2,083 columns.\n\nAs shown above in the graph \"Percent of Players Missing for Each Statistic\", there is a significant jump from approximately 0% missing data to 95% missing data. After analyzing the columns with more than 95% missing data, a significant number of the columns are of the category \u201cDistance Analysis\u201d. Distance Analysis was a measure used in 2010 to analyze how far athletes would hit a particular club. Due to the discontinuation of the statistic after 2010, a large majority of the statistic is missing. However, I did not want to set a threshold of 95% missing values, because there were some columns in the 95% plus range that are important for further analysis, including statistics measuring Money Leaders. I therefore decided to remove columns if they were the \"Distance Analysis\" statistic, rather than setting a threshold.","7fff0db1":"We will now convert the data from a long format to a wide format.","e7ef6ec0":"Explores data after row threshold has been set.","54cecb3c":"As shown above there appears to be a large amount of missing data. In the statistic \u201cOfficial World Golf Ranking\u201d, players may be assigned values for statistics nearly every year regardless of whether they compete or not. According to an article on [Golfweek.com](http:\/\/golftips.golfweek.com\/world-golf-rankings-work-20650.html), a players Official World Golf Ranking (OWGR) points stay on the players tally for two years. Therefore, it is possible that a very dominate player like Tiger Woods may still be on the OWGR leaderboard even if he does not play on the PGA Tour for a year. Since the data is in a wide format, if there is only one statistic with a value, then every other value in the row will be null. Another reason why certain records are nearly entirely null, is due to the \u201cOfficial World Golf Ranking\u201d statistic taking into consideration 34 tours. Many of these tours are not as prominent as the PGA Tour and often lack data. As a result, nearly all of the statistics for an athlete for the given year will remain blank. As shown by the above graph it is obvious that there is a significant jump from approximately 35% missing data to 92% missing data. If there is greater than 90% of the data missing for a certain athlete, they likely did not compete that year, but are being assigned values for the \u201cOfficial World Golf Ranking\u201d categories.\n\nIn order to reduce the number of missing values, I have set a threshold of 40% percent missing data. The threshold is approximately equal to 1,250 non null values out of a total of 2,083 columns. Meaning if there are less than 1,250 non-null values, the row will be excluded from the dataset.","abe16e8d":" After removing the Distance Analysis columns, the dataset consisted of 1,678 rows and 1,515 columns.","93225107":"# Historical Data Missing Value Analysis\nIn order to get a better understanding of the data we must take a further look into the missing values that exist in the dataset. Getting a better understanding of the missing values is crucial in order to determine how we will deal with them.","d60d3fda":"The final data set now consists of 1,678 rows and 1,515 columns. Where rows are the player in a given season, and columns are the variables. The maximum percent of missing rows is 10.2970%, and the minimum percent of missing rows is 2.1122%.\n \nAfter making the transformations and dropping the columns and rows with a large amount of missing values, there is a total of 5.3880% missing data. Therefore, nearly 95% of the dataset is non-null values."}}