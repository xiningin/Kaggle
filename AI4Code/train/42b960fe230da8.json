{"cell_type":{"99faa895":"code","916c8694":"code","ca60b439":"code","90c4173e":"code","0206d0b1":"code","225c9743":"code","4a315f40":"code","8038bb4f":"code","a3b1d434":"code","cb575860":"markdown","af34e036":"markdown","782eec8f":"markdown"},"source":{"99faa895":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","916c8694":"import pandas as pd\nimport matplotlib.pyplot  as plt\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.utils.np_utils import to_categorical \n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import RMSprop\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau","ca60b439":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(\n        rescale = 1.\/255,\n        featurewise_center=False,  # set input mean to 0 over the dataset\n        samplewise_center=False,  # set each sample mean to 0\n        featurewise_std_normalization=False,  # divide inputs by std of the dataset\n        samplewise_std_normalization=False,  # divide each input by its std\n        zca_whitening=False,  # apply ZCA whitening\n        rotation_range=10,  # randomly rotate images in the range (degrees, 0 to 180)\n        zoom_range = 0.1, # Randomly zoom image \n        width_shift_range=0.1,  # randomly shift images horizontally (fraction of total width)\n        height_shift_range=0.1,  # randomly shift images vertically (fraction of total height)\n        horizontal_flip=False,  # randomly flip images\n        vertical_flip=False)  # randomly flip images\n\n\nvalid_datagen = ImageDataGenerator(rescale = 1.\/255)\n\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)\n","90c4173e":"training_set = train_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/train',\n                                                 target_size = (200, 200),\n                                                 batch_size = 60,\n                                                 class_mode = 'categorical')","0206d0b1":"valid_set = valid_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/val',\n                                            target_size = (200, 200),\n                                            batch_size = 60,\n                                            class_mode = 'categorical')","225c9743":"test_set = test_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/test',\n                                            target_size = (200, 200),\n                                            batch_size = 60,\n                                            class_mode = 'categorical')","4a315f40":"model = Sequential()\n\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu', input_shape = (200,200,3)))\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\n\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = \"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(2, activation = \"sigmoid\"))","8038bb4f":"model.compile(\n             loss = 'categorical_crossentropy',\n             optimizer = 'adam',\n             metrics = ['accuracy'])","a3b1d434":" model.fit_generator(\n  training_set,\n  validation_data=valid_set,\n  epochs=1,\n  steps_per_epoch= len(training_set),\n  validation_steps= len(test_set)\n)","cb575860":"Here our task is to build a model which can predict wheather a person is effected by Pneumonia.","af34e036":"# Introduction:","782eec8f":"We know that data augmentation has a great impact in model accuracy.So,start with augmaenting the training data."}}