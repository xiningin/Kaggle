{"cell_type":{"738318b7":"code","a933a603":"code","3ff878da":"code","f30ba876":"code","296d9d46":"code","ad5481b2":"code","7687a4ba":"code","86df17cb":"code","271fa282":"code","d7fe4429":"code","5719c2e8":"code","8239a8fa":"code","27ccdf39":"code","cb18f5dd":"code","4ef19e93":"code","c6aa2f1a":"code","ee3ea7c9":"markdown","138bb443":"markdown","123608ff":"markdown","4f78b8c9":"markdown","ffe1e2e3":"markdown","aa8d8133":"markdown","567713b9":"markdown","8acec1ae":"markdown","887d696e":"markdown","2c20a7b4":"markdown","efd62862":"markdown","f1950c20":"markdown","90789a96":"markdown","6a65ae30":"markdown","a59d0ed1":"markdown"},"source":{"738318b7":"import pandas as pd\nfrom datetime import datetime as dt\n\nurl = 'http:\/\/ftp.berlinonline.de\/lageso\/corona\/csv\/fallzahlen_und_indikatoren.csv'\n# The parser is needed as the date comes in German format\nparser = lambda date: pd.datetime.strptime(date, '%d.%m.%Y')\n\ndf = pd.read_csv(url\n    , sep = ';'\n    , parse_dates = ['Datum']\n    , date_parser = parser\n)\n\n# To translate the German columns into English columns\ncolumn_name_dict = {\n    'Datum': 'Date', \n    'Fallzahl': 'Number of cases', \n    'Neue Faelle': 'New cases', \n    'Genesene': 'Recovered',\n    'Todesfaelle': 'Deaths',\n    '7-Tage-Inzidenz': '7 day incidence',\n    'rel Veraenderung der 7-Tage-Inzidenz': 'relative change in 7-day incidence',\n    'ITS-Belegung': 'ITS allocation',\n    '4-Tage-R-Wert Berlin (RKI)': '4-day R-value Berlin (RKI)'\n}\n\n# To enforce the data type per column\ndata_type_dict = {\n    'Date': str,\n    'Number of cases': int,\n    'New cases': int,\n    'Recovered': int,\n    'Deaths': int,\n    '7 day incidence': float,\n    'relative change in 7-day incidence': float,\n    'ITS allocation': float,\n    '4-day R-value Berlin (RKI)': float\n}\n\ndf = df.rename(columns = column_name_dict)\n# Clean the data before enforcing the data type to each column\ndf = (df.fillna(0)\n      .replace(',', '.', regex = True)\n     )\ndf = df.astype(data_type_dict)\n\n\n# Extra dates dimensions\ndf['Date'] = pd.to_datetime(df['Date'])\ndf['Week'] = df['Date'].dt.year.astype(str) + '-' + df['Date'].dt.week.astype(str)\ndf['Month'] = df['Date'].dt.year.astype(str) + '-' + df['Date'].dt.month.astype(str)\n\n# Extra metrics\ndf['% Recovery Rate'] = df['Recovered']\/df['Number of cases']\ndf['% Death Rate'] = df['Deaths']\/df['Number of cases']\n\n# Set Date as index and check the latest first 5 rows\ndf = (df\n      .set_index('Date')\n     )\ndf.tail(10)\n","a933a603":"# Basic data quality check here\ndf.info()","3ff878da":"# Basic Statics of the table\ndf[['New cases', '7 day incidence', 'ITS allocation', '4-day R-value Berlin (RKI)']].describe()","f30ba876":"import matplotlib.pylab as plt\nimport seaborn as sns\n\ndf_viz_cum = df[['Number of cases', 'Recovered', 'Deaths']]\n\nfig, scatter = plt.subplots(figsize = (20,5))\n\ng = sns.lineplot(data = df_viz_cum\n                 , linewidth = 3\n                 , dashes = False\n                )\n\nplt.title('Culminative Sum of Confirmed Cases, Recovery and Deaths')\nplt.xlabel('Month')\nplt.xticks(rotation=90)\nplt.ylabel('# Cases')\nplt.show()","296d9d46":"df_viz = df[df.index < '2021-04-01'] # The month just started and could bias the visualziations\nheight = 4\naspect = 4\n\n\n# Daily\ng = (sns.relplot(x = 'Date'\n            , y = 'New cases'\n            , kind = \"line\"\n            , data = df_viz\n            , height = height\n            , aspect = aspect\n           )\n .set_axis_labels('Date', '# Confirmed New Cases')\n)\n\nplt.title('New Confirmed Cases Evolution - Daily')\nplt.xticks(rotation=90)\n\n# Weekly\ng = (sns.relplot(x = 'Week'\n            , y = 'New cases'\n            , kind = \"line\"\n            , data = df_viz\n            , height = height\n            , aspect = aspect\n           )\n .set_axis_labels('Week', '# Confirmed New Cases')\n)\n\nplt.title('New Confirmed Cases Evolution - Weekly')\nplt.xticks(rotation=90)\n\n# Monthly\ng = (sns.relplot(x = 'Month'\n            , y = 'New cases'\n            , kind = \"line\"\n            , data = df_viz\n            , height = height\n            , aspect = aspect\n           )\n .set_axis_labels('Month', '# Confirmed New Cases')\n)\n\nplt.title('New Confirmed Cases Evolution - Monthly')\nplt.xticks(rotation=90)\n\nplt.show()\n","ad5481b2":"df_viz = df[(df.index >= '2020-04-25') & (df.index < '2021-04-01')] # 2020-04-25 is the first date having recovery data\n\nx = 'Month'\n\ng = (sns.relplot(x = x\n            , y = 'Number of cases'\n            , kind = \"line\"\n            , data = df_viz\n            , height = height\n            , aspect = aspect\n           )\n .set_axis_labels(x, '# Total number of cases')\n)\nplt.title('Culminative Confirmed Cases Evolution')\n\ng = (sns.relplot(x = x\n            , y = '% Recovery Rate'\n            , kind = \"line\"\n            , data = df_viz\n            , height = height\n            , aspect = aspect\n           )\n .set_axis_labels(x, '% Recovery Rate')\n)\ng.set(ylim=(0, 1)) # setting the range of Y-axis\nplt.title('% Recovery Rate Evolution')\n\ng = (sns.relplot(x = x\n                 , y = '% Death Rate'\n                 , kind = \"line\"\n                 , data = df_viz\n                 , height = height\n                 , aspect = aspect\n                 , palette = \"flare\"\n           )\n .set_axis_labels(x, '% Death Rate')\n)\ng.set(ylim=(0, 0.03))\nplt.title('% Death Rate Evolution')\n\nplt.show()\n","7687a4ba":"\n\nurl_districts = 'https:\/\/www.berlin.de\/lageso\/gesundheit\/infektionsepidemiologie-infektionsschutz\/corona\/tabelle-bezirke-gesamtuebersicht\/index.php\/index\/all.csv?q='\n\nparser_districts = lambda date: pd.datetime.strptime(date, '%Y-%m-%d')\n\ndf_districts = pd.read_csv(url_districts\n    , sep = ';'\n    , parse_dates = ['datum']\n    , date_parser = parser_districts\n)\n\ndf_districts['Date'] = pd.to_datetime(df_districts['datum'])\ndf_districts['Week'] = df_districts['Date'].dt.year.astype(str) + '-' + df_districts['Date'].dt.week.astype(str)\ndf_districts['Month'] = df_districts['Date'].dt.year.astype(str) + '-' + df_districts['Date'].dt.month.astype(str)\n\ndel df_districts['id'] # removing `id` column as it doesn't give extra insights\ndel df_districts['datum']\n\ndf_districts = (df_districts\n      .set_index('Date')\n     )\n\ndf_districts.head()","86df17cb":"df_districts.info()","271fa282":"(df_districts.describe()\n .sort_values(by= ['mean', '50%']\n              , axis = 1\n              , ascending = False\n             )\n)","d7fe4429":"import matplotlib.pylab as plt\nimport seaborn as sns\n\ntop_3_districts = ['mitte', 'neukoelln', 'tempelhof_schoeneberg']\n\n# top_3_districts = ['mitte', 'friedrichshain_kreuzberg', 'pankow',\n#        'charlottenburg_wilmersdorf', 'spandau', 'steglitz_zehlendorf',\n#        'tempelhof_schoeneberg', 'neukoelln', 'treptow_koepenick',\n#        'marzahn_hellersdorf', 'lichtenberg', 'reinickendorf']\n\ndf_districts_viz = df_districts[top_3_districts]\n\nfig, scatter = plt.subplots(figsize = (20,5))\n\ng = sns.kdeplot(data = df_districts_viz\n                , linewidth = 3\n#                 , kind = 'line'\n#                  , dashes = False\n#                 , height = height\n#                 , aspect = aspect\n#                 , cumulative = True\n#                 , legend = False\n                , fill = True\n                )\n\n# plt.title('Culminative Sum of Confirmed Cases, Recovery and Deaths')\n# plt.xlabel('Month')\nplt.xticks(rotation=90)\nplt.ylabel('# Cases')\nplt.show()","5719c2e8":"df_districts.columns","8239a8fa":"import geopandas as gpd\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\n\ngeojson_path = ('..\/input\/berlin-geojson\/Berlin.geojson')\ngeo_df = gpd.read_file(geojson_path)\n\ngeo_df = geo_df[['spatial_alias', 'geometry']]\ngeo_df.head()","27ccdf39":"geo_df['spatial_alias']\n# .value_counts()","cb18f5dd":"geojson_mapping_dict = {\n    'geo_name': ['Mitte', 'Friedrichshain-Kreuzberg', 'Pankow', 'Charlottenburg-Wilmersdorf', 'Spandau', 'Steglitz-Zehlendorf', 'Tempelhof-Sch\u00f6neberg', 'Neuk\u00f6lln', 'Treptow-K\u00f6penick', 'Marzahn-Hellersdorf', 'Lichtenberg', 'Reinickendorf']\n    , 'data_name': ['mitte', 'friedrichshain_kreuzberg', 'pankow', 'charlottenburg_wilmersdorf', 'spandau', 'steglitz_zehlendorf', 'tempelhof_schoeneberg', 'neukoelln', 'treptow_koepenick', 'marzahn_hellersdorf', 'lichtenberg', 'reinickendorf']\n}\n\ndf_mapping = pd.DataFrame(geojson_mapping_dict)\ndf_mapping","4ef19e93":"geo_df\n","c6aa2f1a":"# geo_df.__geo_interface__\n\nChoropleth(geo_data = geo_df.__geo_interface__, \n#            data=plot_dict, \n#            key_on=\"feature.id\", \n           fill_color = 'YlGnBu'\n#            legend_name='Major criminal incidents (Jan-Aug 2018)'\n          )\n# .add_to(m_6)","ee3ea7c9":"# Small Conclusions (as of 20 Apr 2021)\n\nThe infections of COVID-19 is observed to be fairly contagious yet not exactly very deadly. While comparing the cuminlative growth of the `Number of cases` and `Recovered` to `Deaths`, the growth of `Deaths` is rather flat. It indeicates 2 things:\n1. Most of the confirmed cases would recover eventually; Therefore,\n2. The area between the 2 lines of `Number of cases` and `Recovered` is the Berlin medical system workload. The bigger the area is, the heavier the workload.\n\nAnd, the peak seasons of new confirmed cases in Berlin would be Nov-Dec 2020, then it started dropping. One of the relevant events would be the 1st vaccination center opened in late Dec 2020, 3.5M free medical masks were distributed to the public.","138bb443":"## Daily Confirmed Cases data of COVID-19 in Berlin, Germany\n\nThis notebook is to demostrate one of the use cases of open data from the [daten.berlin.de](https:\/\/daten.berlin.de\/).\n\nBy running all the cells, the notebook would:\n1. Fetch data from the Berlin govnment data; And,\n2. Apply the cleaning logic including translation from German to English for column names; And,\n3. Visualize certain basic information\n\n\nData sources here:\n* [COVID-19 in Berlin, number of cases and indicators - complete overview (COVID-19 in Berlin, Fallzahlen und Indikatoren - Gesamt\u00fcbersicht)](https:\/\/daten.berlin.de\/datensaetze\/covid-19-berlin-fallzahlen-und-indikatoren-gesamt%C3%BCbersicht)\n* [COVID-19 in Berlin, distribution in the districts - complete overview (COVID-19 in Berlin, Verteilung in den Bezirken - Gesamt\u00fcbersicht)](https:\/\/daten.berlin.de\/datensaetze\/covid-19-berlin-verteilung-den-bezirken-gesamt%C3%BCbersicht)\n\n\n","123608ff":"As shown in the graph, it is quite clear that only `Number of cases` and `Recovered` both raise while `Deaths` stay rather low.\n\n>A single death is a tragedy; a million deaths is a statistic.\n\nDeath is indeed tragic - yet by looking the numbers, it could give an impression that the death numbers do not seem as signficant as the growth of confirmed cases and recovered. It explains why certain audience are loosing up the counter-measure of COVID-19.","4f78b8c9":"Juding by the `Mean` (i.e. Average) & `50%` (i.e. Median), Mitte, Neukoelin and Tempelhof-Schoeneberg are the top 3 districts with confirmed cases.","ffe1e2e3":"# Metadata of the data type and data quality","aa8d8133":"Note: Given that 1 row of the record in the DataFrame is 1 day's data, the mean here is basically a daily average of all these metrics.\n\nSince `Number of cases`, `Recovered` and `Deaths` are cumulative, it may not make so much sense to check the stats of them.","567713b9":"# [Next step WIP] New Confirmed Cases per district in Berlin\nBelow is the part still in development - which is pretty much the same set of metrics from above but with breakdowns of districts.","8acec1ae":"As usual, the Daily view is rather fluctuated - hence Weekly and Monthly views are added here.\n\nAll 3 views are showing pretty much the same trend: There has been a growth since **Oct 2020** and peaked at **Nov 2020**, then it graudally declined since Dec 2020. The latest low was **Feb 2020**, and yet it has been increasing since then.\n\nThe growth from Oct to Dec 2020 could be explianed with the winter in Berlin - yet there are no obvious reason why the drop in Jan & Feb 2021, the most possible reason could be [the 1st vaccination center opened](https:\/\/www.berlin.de\/en\/news\/coronavirus\/6397296-6098215-first-vaccination-center-opened-in-berli.en.html) in late Dec 2020, also [the 3.5M free medical masks](https:\/\/www.berlin.de\/en\/news\/coronavirus\/6424496-6098215-3-5-million-free-medical-masks.en.html) could have helped.\n\nNevertheless, the Berlin government is being cautious with the growing trend of newly confirmed cases. Even so, the people in Berlin has accumlated with certain dissatiions with the lockdown measures. The Berlin government appears to be striking a balance as fighting agianst COVID-19 is still a long term battle.","887d696e":"There seem to be a weird drop of `% Recovery Rate` and `% Death Rate` in Nov and Dec 2020 due to the growth of Confirmed Cases (the denominator) while there ain't no such increase of the Recovered nor Deaths (the numerators). That actaully implies a heavier medical system workload as there are would be plenty of medical resouces (e.g. working hours of medical staffs, beds in hosiptal etc.) being occupied.","2c20a7b4":"There are the given metrics and the definations from daten.berlin.de:\n\n***Metrics definations***\n\n1. `Number of cases`: number of cases reported daily by reporting date\n2. `New cases`: Difference in number of cases to the previous reporting date\n3. `Recovered`: recovered daily reported by reporting date\n4. `Deaths`: daily reported deaths by reporting date\n5. `7-day incidence`: calculated by reporting date (number of cases by reporting date see table Complete overview of the districts). The 7-day incidence is not based on case numbers by reporting date. The 7-day incidence is corrected retrospectively for late registrations and delayed submissions.\n6. `Relative change in the 7-day incidence`: Change in the 7-day incidence compared to that 7 days ago in%\n7. `ITS occupancy`: ITS occupancy according to the data from IVENA\n8. `4-day R-value Berlin`: The 4-day R-value reported by the RKI for Berlin\n\nWhere, `Number of cases`, `Recovered` and `Death` are cumulative.\n\nAnd On top of these, there are extra columns added:\n\n* Week: The week derived from `Date` column \n* Month: The month derive from `Date column\n* `% Recovery Rate`: `Recovered` \/ `Number of cases`\n* `% Death Rate`: `Deaths` \/ `Number of cases`\n","efd62862":"# Cuminlative Cases - Confirmed, Recovery and Deaths\n\nTo access the growth of COVID-19 confirmed cases in longer period of time.","f1950c20":"# New Confirmed Cases in Daily, Weekly and Monthly breakdowns\n\nTo access the trend of the New Confirmed Cases.","90789a96":"# Growth of Culminative Confirmed Cases, % Recovery Rate and % Death Rate","6a65ae30":"## Setup Code\nThis snippet would fetch data from open data from Berlin.de, along with simpel data clenaing logic and renaming German column names to English.","a59d0ed1":"# Basic Statistics"}}