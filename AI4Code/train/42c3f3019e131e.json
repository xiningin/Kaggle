{"cell_type":{"b81eaaa5":"code","cc29f140":"code","1f23acd9":"code","ec77a6df":"code","0c59e9a9":"code","985dc54b":"code","f762bc0d":"code","18213130":"code","2e80dc23":"code","e6116266":"code","9be3019f":"code","6a0e3c32":"markdown"},"source":{"b81eaaa5":"import numpy as np \nimport pandas as pd \nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport tensorflow.keras \nfrom keras.preprocessing.image import img_to_array, array_to_img","cc29f140":"data=pd.read_csv('..\/input\/train.csv')\nx_train=data.drop('label',axis=1)\ny_train=data[['label']]\ntest=pd.read_csv('..\/input\/sample_submission.csv')\ny_test=test[['Label']]\nx_test=pd.read_csv('..\/input\/test.csv')","1f23acd9":"image=x_train[:1]\nimage1=image.as_matrix()\nimage2=image1.reshape(28,28)\nplt.figure(28, figsize=(10,10))\nplt.imshow(image2, interpolation='nearest', cmap=plt.cm.gray_r)\nplt.show()","ec77a6df":"image=x_train[3:4]\nimage1=image.as_matrix()\nimage2=image1.reshape(28,28)\nplt.figure(28, figsize=(10,10))\nplt.imshow(image2, interpolation='nearest', cmap=plt.cm.gray_r)\nplt.show()","0c59e9a9":"import keras\nfrom keras.utils import to_categorical\nnum_classes=10\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test=keras.utils.to_categorical(y_test, num_classes)","985dc54b":"def Model():\n    from keras.models import Sequential\n    from keras.layers import  Dense, Dropout\n    model=Sequential()\n    model.add(Dense(50, activation='relu', input_shape=(784,)))\n    model.add(Dense(50, activation='relu'))\n    model.add(Dense(50, activation='relu'))\n    model.add(Dense(10, activation='softmax'))\n    model.summary()\n    return (model)","f762bc0d":"model=Model()\nmodel.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])\nfrom  keras.callbacks import EarlyStopping\nearly_stoping_moniter=EarlyStopping(patience=2)\nbatch_size=500\nepochs=20\npredict=model.fit(x_train,y_train,batch_size=batch_size,epochs=epochs,callbacks=[early_stoping_moniter])","18213130":"predict=model.predict(x_test)","2e80dc23":"test1=np.array(x_test)\nplt.imshow(test1[500].reshape(28,28))","e6116266":"from numpy import argmax\nprediction = [np.argmax(y, axis=None, out=None) for y in predict]\nprediction[500]","9be3019f":"submission = pd.DataFrame({\n        \"ImageId\": test[\"ImageId\"],\n        \"Label\": prediction\n    })\nsubmission.to_csv('submission.csv', index=False)","6a0e3c32":"Now everything is set for building a model and evaluating it.\n\nSo Lets do it."}}