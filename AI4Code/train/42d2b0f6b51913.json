{"cell_type":{"38b5075c":"code","b634701c":"code","2db26146":"code","96743e6c":"code","e3d1c297":"code","95f2566c":"code","0038c142":"code","1e0cbce7":"code","a9c21202":"code","a94d9f05":"code","e55d6eba":"code","55a007d7":"code","c5c21975":"code","96bf5ec7":"code","a55d9c9e":"code","340e09a5":"code","a12e0089":"code","75af42ec":"code","32866407":"code","886a8198":"code","059a21d2":"code","ed95f8bb":"code","f6f59276":"code","e14132cd":"code","b3cd21a5":"code","51d2f4c5":"code","6b7ccc88":"code","7856315a":"code","bfd17611":"code","5090a2d2":"markdown","5f1561ba":"markdown","c44cbf0e":"markdown","b2b69a71":"markdown","bbd7733e":"markdown","69bd27eb":"markdown","f9c44fe3":"markdown","33b98a93":"markdown","53ad21c4":"markdown","d4e81888":"markdown","b1d6eab0":"markdown","22207752":"markdown"},"source":{"38b5075c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b634701c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score\nimport warnings\nwarnings.filterwarnings('ignore')\nimport missingno as msno\n","2db26146":"df = pd.read_csv(\"\/kaggle\/input\/dogecoin-data\/DOGE-USD.csv\")\ndf.head()","96743e6c":"print(f'Shape of Dataframe {df.shape}')","e3d1c297":"df.info()","95f2566c":"df.describe()","0038c142":"df.isnull().sum()","1e0cbce7":"\nmsno.bar(df)","a9c21202":"df=df.dropna()","a94d9f05":"df.isnull().sum()","e55d6eba":"df=df.drop(['Date'],axis=1)","55a007d7":"df.shape","c5c21975":"df.hist(bins=50,figsize=(12,8))","96bf5ec7":"sns.pairplot(data=df)","a55d9c9e":"corr= df.corr()\nsns.heatmap(corr,annot=True)","340e09a5":"scaler = StandardScaler()\nscaler.fit(df.drop(['Volume'],axis=1))","a12e0089":"X=np.array(scaler.transform(df.drop(['Volume'],axis=1)))\n","75af42ec":"y= np.array(df['Volume'])","32866407":"\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=1)","886a8198":"print(f'shape of X_train : {X_train.shape}\\nshape of X_test : {X_test.shape}\\nshape of y_train : {y_train.shape}\\nshape of y_test : {y_test.shape}')","059a21d2":"modelLIN= LinearRegression()\nmodelLIN.fit(X_train,y_train)\nY_predLin=modelLIN.predict(X_test)","ed95f8bb":"print(\"MSE : \",mean_absolute_error(y_test,Y_predLin))\nprint(\"MAE : \",mean_squared_error(y_test,Y_predLin))\nprint(\"R2_Score: \",r2_score(y_test,Y_predLin))","f6f59276":"pd.DataFrame({\"Real Prediction\":y_test,\"Model Prediction\":Y_predLin})","e14132cd":"modelTree = DecisionTreeRegressor()\nmodelTree.fit(X_train,y_train)\nY_predTree= modelTree.predict(X_test)\n","b3cd21a5":"print(\"MSE : \",mean_absolute_error(y_test, Y_predTree))\nprint(\"MAE : \",mean_squared_error(y_test,Y_predTree))\nprint(\"R2_Score: \",r2_score(y_test,Y_predTree))","51d2f4c5":"pd.DataFrame({\"Real Prediction\":y_test,\"Model Prediction\":Y_predTree})","6b7ccc88":"modelEns = RandomForestRegressor()\nmodelEns.fit(X_train,y_train)\nY_predEns = modelEns.predict(X_test)","7856315a":"print(\"MSE : \",mean_absolute_error(y_test, Y_predEns))\nprint(\"MAE : \",mean_squared_error(y_test,Y_predEns))\nprint(\"R2_Score: \",r2_score(y_test,Y_predEns))","bfd17611":"pd.DataFrame({\"Real Prediction\":y_test,\"Model Prediction\":Y_predEns})","5090a2d2":"# Spilt data ","5f1561ba":"## Preprocessing data ","c44cbf0e":"# OverView of DataFrame","b2b69a71":"# What is Dogecoin?\n\n\nDogecoin is a cryptocurrency created by software engineers Billy Markus and Jackson Palmer, who decided to create a payment system as a joke, making fun of the wild speculation in cryptocurrencies at the time. It was introduced on December 6, 2013, and quickly developed its own online community. Elon Musk frequently mentions or talks about Dogecoin on his Twitter account, boosting its popularity a significant amount in recent years.\n","bbd7733e":"# Loadind Dataset","69bd27eb":"# EDA","f9c44fe3":"# Random Forest Regression","33b98a93":"## RandomForestTree Is good Algorithm for this dataframe \n## Accuracy is 82 %","53ad21c4":"# Decision Tree Regression","d4e81888":"# Correlation Between them","b1d6eab0":"# Check any Null Values","22207752":"# Linear Regression"}}