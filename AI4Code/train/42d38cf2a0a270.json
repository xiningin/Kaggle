{"cell_type":{"0a96fe67":"code","6500636f":"code","41f98a51":"code","4014d25e":"code","e6db738a":"code","7e38cd6a":"code","f8bab318":"code","fb68f640":"code","b17e9495":"code","bb19ddb7":"code","81ea23a9":"code","90b24d4b":"code","9f14ad9e":"code","55d849b9":"code","a72718e2":"code","b938deee":"code","f05f4ef3":"code","c6fdcc40":"code","f652fb7a":"code","9ea22d79":"code","0f51c511":"code","6b003ce4":"code","be0793fd":"code","4fb32f36":"code","3ed4dc67":"code","a5563ab1":"code","962f21ac":"code","78b2f204":"code","653b8a85":"code","78ed76ac":"code","0d22fd73":"code","3f2dd4fa":"code","95238fd1":"code","00b7c488":"code","d408e7ec":"code","5f1e0435":"code","750b33cd":"code","2312aa6a":"code","45abc2d0":"code","eb016842":"markdown","3d3bdd4f":"markdown","86b02ca1":"markdown","e7d34385":"markdown","9e6a7e7d":"markdown","82fa5100":"markdown","53598efc":"markdown","3ef292e4":"markdown","3c1d5910":"markdown","45c760be":"markdown","09c5e967":"markdown","7fde3f3d":"markdown","383446e7":"markdown","356e79da":"markdown","485d05be":"markdown"},"source":{"0a96fe67":"# pandas to read our csv file\nimport pandas as pd","6500636f":"# save the csv file into a dataframe 'df'\ndf = pd.read_csv('..\/input\/elon-musk-tweets-2015-to-2020\/elonmusk.csv',low_memory=False, parse_dates=[['date', 'time']])","41f98a51":"# make a copy if you need so that the changes made in original df doesn't affect the copy\ndf_copy = df.copy(deep=True)","4014d25e":"# check the whole df\ndisplay(df)\n\n# check an overview of the df\ndisplay(df.info())\n\n# gives out quick analysis, notice the max retweets_count and min retweets_count and so on\ndisplay(df.describe())","e6db738a":"# I don't need these columns, so dropping them. You can keep them if you want.\ndrop_list = ['id','conversation_id','created_at','name','timezone','user_id','cashtags','place','quote_url','near','geo','source','user_rt_id','user_rt','retweet_id','retweet_date','translate','trans_src','trans_dest','video','retweet']\ndf = df.drop(columns=drop_list)","7e38cd6a":"# have a look again.\ndisplay(df.info())","f8bab318":"# just in case texthero cant remove URLs\ndf['tweet'] = df['tweet'].str.replace('http\\S+|www.\\S+', '',case=False)","fb68f640":"df","b17e9495":"# Check the above link for other installation instructions.\n\n!pip install texthero","bb19ddb7":"# import texthero\n\nimport texthero as hero","81ea23a9":"# let's do text preprocessing\nfrom texthero import preprocessing\n\n# creating a custom pipeline to preprocess the raw text we have\ncustom_pipeline = [preprocessing.fillna\n                   , preprocessing.lowercase\n                  #  , preprocessing.remove_digits # you can uncomment this if you want to remove digits as well.\n                   , preprocessing.remove_punctuation\n                   , preprocessing.remove_diacritics\n                   , preprocessing.remove_stopwords\n                   , preprocessing.remove_whitespace\n                   , preprocessing.stem]\n\n# simply call clean() method to clean the raw text in 'tweet' col and pass the custom_pipeline to pipeline argument\ndf['clean_tweet'] = hero.clean(df['tweet'], pipeline = custom_pipeline)","90b24d4b":"df","9f14ad9e":"# Check the above link for other installation instructions\n\n!pip3 install sweetviz","55d849b9":"# importing sweetviz\nimport sweetviz as sv","a72718e2":"# creating another dataframe df1 for further analysis.\n\ndf1 = df.drop(columns=['date_time'])","b938deee":"#to analyze the data and create a report, simply call analyze() method passing in the dataframe as argument\n\nelonmusk_report = sv.analyze(df1)","f05f4ef3":"#display the report as html\n\nelonmusk_report.show_html('elonmusk.html')","c6fdcc40":"!pip3 install pytz","f652fb7a":"from datetime import datetime\nfrom pytz import timezone","9ea22d79":"# In place of 'UTC', replace it with whatever the current timezone is in your df.\n# In place of 'Asia\/Kolkata', replace it with whatever timezone you want to convert into.\n\ndf['conv_datetime'] = df['date_time'].dt.tz_localize('UTC').dt.tz_convert('Asia\/Kolkata')","0f51c511":"# I don't need the \"+5.30\" localize information in my df.\n\ndf['datetime'] = df['conv_datetime'].dt.tz_localize(None)","6b003ce4":"# dropping the extra columns and setting the datetime as index.\n\ndf = df.drop(columns=['date_time','conv_datetime'])","be0793fd":"df = df.set_index('datetime')","4fb32f36":"df","3ed4dc67":"df1 = df.drop(columns=['tweet','username','link'])","a5563ab1":"import matplotlib.pyplot as plt\n\n# using top_words() method, get the top N words and make a bar plot.\nhero.top_words(df1['clean_tweet']).head(10).plot.bar(figsize=(15,10))\nplt.show()","962f21ac":"# Want to add more stop words to your list? No problem. Follow the below steps.\n\nfrom texthero import stopwords\ndefault_stopwords = stopwords.DEFAULT\n#add a list of stopwords to the stopwords\nstop_w = [\"twitter\",\"pic\",\"com\",\"yes\",\"like\",\"year\",\"need\",\"ok\",\"exact\",\"come soon\",\"yeah\",\n          \"yup\",\"would\",\"much\",\"use\"]\ncustom_stopwords = default_stopwords.union(set(stop_w))\n#Call remove_stopwords and pass the custom_stopwords list\ndf1['clean_tweet'] = hero.remove_stopwords(df1['clean_tweet'], custom_stopwords)","78b2f204":"# Let's visualize again.\n\nhero.top_words(df1['clean_tweet']).head(10).plot.bar(figsize=(15,10))\nplt.show()","653b8a85":"# just checking for any null values\ndf1.clean_tweet.isna().sum()","78ed76ac":"# WordCloud with single line of code.\n\nhero.visualization.wordcloud(df1['clean_tweet'],width = 400, height= 400,background_color='White')","0d22fd73":"#Add pca value to dataframe to use as visualization coordinates\ndf1['pca'] = (\n            df1['clean_tweet']\n            .pipe(hero.tfidf)\n            .pipe(hero.pca)\n   )\n#Add k-means cluster to dataframe \ndf1['kmeans'] = (\n            df1['clean_tweet']\n            .pipe(hero.tfidf)\n            .pipe(hero.kmeans, n_clusters=5)\n   )\ndf1.head()","3f2dd4fa":"# Generate scatter plot for pca and kmeans. Cool isn't it?\nhero.scatterplot(df1, 'pca', color = 'kmeans', hover_data=['clean_tweet'] )","95238fd1":"!pip3 install chart-studio","00b7c488":"import seaborn as sns # visualization library\nimport chart_studio.plotly as py # visualization library\nfrom plotly.offline import init_notebook_mode, iplot # plotly offline mode\ninit_notebook_mode(connected=True) \nimport plotly.graph_objs as go # plotly graphical object","d408e7ec":"df2 = df.drop(columns=['username','tweet','link'])","5f1e0435":"df2.head()","750b33cd":"plt.figure(figsize=(17,10))\nsns.lineplot(data=df2['retweets_count'], dashes=False)\nplt.title(\"Retweets over time\")\nplt.show()","2312aa6a":"plt.figure(figsize=(17,10))\nsns.lineplot(data=df2['replies_count'], dashes=False)\nplt.title(\"Replies over time\")\nplt.show()","45abc2d0":"plt.figure(figsize=(17,10))\nsns.lineplot(data=df2['likes_count'], dashes=False)\nplt.title(\"Likes over time\")\nplt.show()","eb016842":"```python\nimport twint\n\n# Create a function to scrape a user's account.\ndef scrape_user():\n\tprint (\"Fetching Tweets\")\n\tc = twint.Config()\n\t# choose username (optional)\n\tc.Username = input('Username: ') # I used a different account for this project. Changed the username to protect the user's privacy.\n\t# choose beginning time (narrow results)\n\tc.Since = input('Date (format: \"%Y-%m-%d %H:%M:%S\"): ')\n\t# no idea, but makes the csv format properly\n\tc.Store_csv = True\n\t# file name to be saved as\n\tc.Output = input('File name: ')\n\ttwint.run.Search(c)\n```","3d3bdd4f":"# 4. EDA and basic Visualization with Sweetviz\n\n**Question 3:** Why are we using [Sweetviz](https:\/\/github.com\/fbdesignpro\/sweetviz) instead of matplotlib or plotly or bokeh for Exploratory Data Analysis?\n\n**Ans**: Sweetviz is an open source Python library that generates beautiful, high-density visualizations to kickstart EDA (Exploratory Data Analysis) with a single line of code. Output is a fully self-contained HTML application.\n\nThe system is built around quickly visualizing target values and comparing datasets. Its goal is to help quick analysis of target characteristics, training vs testing data, and other such data characterization tasks.\n\n[See example report generated by sweetviz from the titanic dataset HERE\n](http:\/\/cooltiming.com\/SWEETVIZ_REPORT.html)\n","86b02ca1":"A lot of information can be analyzed and understood from just one HTML Report before we do any further analysis.\n\nExample Screenshots:\n\n![Correlation Matrix](https:\/\/drive.google.com\/uc?export=view&id=1-3_ZqGCJ6N_jrzZlt5aXxD5AGa_fyhGJ)\n\n---\n\n![Text Preview](https:\/\/drive.google.com\/uc?export=view&id=1--gKvrfJ1jXPMn70VPZCk1BByLOUnN4S)\n\n","e7d34385":"# What else?\n\nYou can check other libraries like [huggingface](https:\/\/github.com\/huggingface) for NLP, [pendulum](https:\/\/github.com\/sdispater\/pendulum) if you're dealing with dates & time, and [Vaex](https:\/\/github.com\/vaexio\/vaex) if you're dealing with large datasets.","9e6a7e7d":"# 6. Visualizations using TextHero for further insights\n\nThere are some pretty cool visualizations you can explore with TextHero","82fa5100":"```python\n# run the above function\n\nscrape_user()\nprint('Scraping Done!')\n```","53598efc":"# 7. Other Visualizations for further analysis","3ef292e4":"# Next Steps\n\n- Build a Topic Model and check if you can categorize @elonmusk's tweets into different categories.\n- Sentiment Analysis on his tweets\n- How the sentiment is changing over time\n- Take recent stocks data on TSLA and check if his tweets are influencing the TSLA stock or other stocks.\n\nPlease give a star for this repository if it helped you and raise issues if you find any. Thank you!","3c1d5910":"Link to [Colab Notebook](https:\/\/colab.research.google.com\/drive\/17nwWFe478Lc0-xzrMW3lVnwCTCNja5vJ?usp=sharing)\nLink to [GitHub Repo](https:\/\/github.com\/vidyap-xgboost\/DataScience-ML_Projects\/blob\/master\/twitter_data_twint_sweetviz_texthero.ipynb)\n\nPlease don't forget to **Upvote** this notebook if you find it useful and learned something from this! That would really encourage me to keep writing more notebooks. Thank you!","45c760be":"Link to [Colab Notebook](https:\/\/colab.research.google.com\/drive\/17nwWFe478Lc0-xzrMW3lVnwCTCNja5vJ?usp=sharing)\nLink to [GitHub Repo](https:\/\/github.com\/vidyap-xgboost\/DataScience-ML_Projects\/blob\/master\/twitter_data_twint_sweetviz_texthero.ipynb)\n\nPlease don't forget to **Upvote** this notebook if you find it useful and learned something from this! That would really encourage me to keep writing more notebooks. Thank you!\n\n\n# 0. Scraping Data using Twint\n\nLet's collect data from twitter using [twint](https:\/\/github.com\/twintproject\/twint) library.\n\n**Question 1:** Why are we using **twint** instead of **Twitter's Official API**?\n\n**Ans:** Because twint requires no authentication, no API, and importantly no limits.","09c5e967":"# 2. Install and Import TextHero\n\nHere, we will be using [TextHero](https:\/\/github.com\/jbesomi\/texthero), a python package to work efficiently and quickly with text data. You can think of texhero as scikit-learn for text-based dataset.\n\n**Question 2:** Why are we using TextHero instead of doing it from scratch using libraries like Gensim or other tools?\n\n**Ans:** TextHero automates the cleaning process with one method, which is pretty effective. If the text needs to be cleaned further, we can do so by manually writing code to remove those unwanted words. In the backend, it uses libraries like Spacy, Gensim, tqdm,regex, nltk. So you don't have to import all those separately when you use TextHero.","7fde3f3d":"# 1. Reading Data using Pandas","383446e7":"**For more ways to install this library, please visit the above mentioned link.**\n\n```python\n!pip3 install twint\n```","356e79da":"# 3. TextHero for quick cleaning of **raw** text data.","485d05be":"# 5. Convert timezone UTC to IST using pytz\n\nThis step can be avoided if you wish so, however, I would like to show you how you can convert UTC timezone to your local timezone in case you're doing timeseries analysis."}}