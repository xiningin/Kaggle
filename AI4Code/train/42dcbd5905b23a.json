{"cell_type":{"4e084359":"code","3ca7794b":"code","697f86be":"code","57ae3ff8":"code","dab4c29b":"code","a71318fa":"code","ed115f67":"code","f5a3fa99":"code","4a2fc7f3":"code","aa6125b8":"code","d94547f8":"code","34fa067d":"code","e0467a20":"code","742b52e0":"code","8bf81315":"code","48ee7620":"code","cb06b2fe":"code","dea78b0b":"code","a1104762":"code","7aef68a9":"code","c0d78a67":"code","18467c02":"code","0f9faa66":"code","da45344d":"code","4b398bd0":"code","2efcd6c8":"code","a9ad23ab":"code","c55fefee":"code","b64259b6":"code","a84b6840":"code","f1d806d6":"code","63ca5a45":"code","410b4eb2":"code","f536ad0c":"code","dd2edb6f":"code","197b2597":"code","da3043ed":"markdown"},"source":{"4e084359":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport warnings \nwarnings.filterwarnings('ignore')\nfrom scipy import stats\nfrom scipy.stats import norm\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3ca7794b":"df_train=pd.read_csv('..\/input\/train.csv')\ndf_train.shape","697f86be":"df_test=pd.read_csv('..\/input\/test.csv')\ndf_test.shape","57ae3ff8":"df_test.isnull().sum()","dab4c29b":"df_train.head()","a71318fa":"df_train.info()","ed115f67":"df_train.columns","f5a3fa99":"df_test.columns","4a2fc7f3":"df_train.dtypes","aa6125b8":"df_train['SalePrice']=np.log1p(df_train['SalePrice'])\nsns.distplot(df_train['SalePrice'],fit=norm)","d94547f8":"train_null=df_train.isnull().sum()\ntrain_null=train_null[train_null>0].sort_values(ascending=False)\ntrain_null","34fa067d":"test_null=df_test.isnull().sum()\ntest_null=test_null[test_null>0].sort_values(ascending=False)\ntest_null","e0467a20":"plt.figure(figsize=(32,32)) \nsns.heatmap(df_train.corr(),vmin=0, annot=True, cbar=True, cmap=\"RdYlGn\")","742b52e0":"corrmat=df_train.corr()\ntop_features=corrmat.index[abs(corrmat['SalePrice'])>0.5]\nplt.figure(figsize=(12,12)) \nsns.heatmap(df_train[top_features].corr(),vmin=0, annot=True, cbar=True, cmap=\"RdYlGn\")","8bf81315":"sns.pairplot(df_train, hue=\"SalePrice\")","48ee7620":"categorical_feat=df_train.select_dtypes(include=['object']).columns\ncategorical_feat","cb06b2fe":"numerical_feat=df_train.select_dtypes(exclude=['object']).columns\nnumerical_feat","dea78b0b":"numercial_feat=numerical_feat.drop('SalePrice')","a1104762":"str(len(categorical_feat)),str(len(numerical_feat))","7aef68a9":"train_num = df_train[numerical_feat]\ntrain_cat = df_train[categorical_feat]","c0d78a67":"train_num.isnull().values.sum()","18467c02":"train_num=train_num.fillna(train_num.median())\ntrain_num.isnull().values.sum()","0f9faa66":"from scipy.stats import skew\nskewness=train_num.apply(lambda x:skew(x))\nskewness=skewness[abs(skewness>0.5)].index\nskewness.sort_values(ascending=False)","da45344d":"skew_features=df_train[skewness]\nskew_features.columns","4b398bd0":"skew_features = np.log1p(skew_features)","2efcd6c8":"train_cat.shape ","a9ad23ab":"train_cat=pd.get_dummies(train_cat)\ntrain_cat.shape","c55fefee":"train_cat.isnull().values.sum()","b64259b6":"train = pd.concat([train_cat,train_num],axis=1)\ntrain.shape","a84b6840":"x=train\ny=df_train.SalePrice","f1d806d6":"from sklearn.model_selection import train_test_split\nx_train,x_cv,y_train,y_cv=train_test_split(x,y,test_size=0.3)","63ca5a45":"from sklearn.model_selection import KFold\nfrom xgboost import XGBRegressor\nmodel1=XGBRegressor(booster='gblinear', reg_lambda=2,reg_alpha=1,cv=10)\nmodel1.fit(x_train,y_train)\npred_cv=model1.predict(x_cv)","410b4eb2":"rmse_CV_train(model1).mean()","f536ad0c":"pred_test=model1.predict(df_test)","dd2edb6f":"submission=pd.read_csv('..\/input\/sample_submission.csv')","197b2597":"submission['SalePrice']=pred_test\nsubmission['Id']=df_test['Id']\npd.DataFrame(submission,columns=['Id','SalePrice']).to_csv('xgboostregression.csv',index=False)","da3043ed":"**Please UPVOTE for Encouragement**"}}