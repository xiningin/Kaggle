{"cell_type":{"edcdf42a":"code","7f414767":"code","cdf89979":"code","ffdd31df":"code","193cc8e9":"code","9dd88fff":"code","70391fbb":"code","66b632ac":"code","d80d290f":"code","ae0061d9":"code","72756f3f":"code","71bc0fb2":"code","d9382eb5":"code","070e3301":"code","007ca8a9":"code","61df969c":"code","c37156e3":"code","6b7b22f5":"code","a6662099":"code","48a9d34d":"code","9b9abfc7":"code","586df18b":"code","9a97ffee":"code","36d65e99":"code","c35c9ba2":"code","ea20cf90":"code","dda68d27":"code","e537e063":"code","86ab9649":"code","10057566":"code","92839f3c":"code","52d7c13e":"code","397655a7":"code","1b433464":"code","e4be6130":"code","2a4c71dc":"code","1d225076":"code","66b0aef3":"code","9f7d00a4":"code","72bf462a":"code","6f75a788":"code","4d5966e6":"code","6f115ff3":"code","8bdbd01d":"markdown"},"source":{"edcdf42a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7f414767":"# uploading house prediction train dataset and test dataset\ntrain_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","cdf89979":"train_data.head()","ffdd31df":"test_data.head()","193cc8e9":"train_data.shape, test_data.shape","9dd88fff":"data_ids = test_data['Id']\ntrain_data = train_data.drop('Id',axis = 1)\ntest_data = test_data.drop('Id',axis = 1)","70391fbb":"train_data.shape, test_data.shape","66b632ac":"train_data.head()","d80d290f":"test_data.head()","ae0061d9":"train_data.info()","72756f3f":"test_data.info()","71bc0fb2":"train_data.describe().T","d9382eb5":"train_data.duplicated().sum()","070e3301":"train_data.isnull().any().sum()","007ca8a9":"np.array(train_data.isnull().sum())","61df969c":"train_data.drop(['PoolQC', 'Fence','MiscFeature','Alley'],axis = 1, inplace = True)\ntest_data.drop(['PoolQC', 'Fence','MiscFeature','Alley'],axis = 1, inplace = True)","c37156e3":"train_data.shape, test_data.shape","6b7b22f5":"train_data.head()","a6662099":"test_data.head()","48a9d34d":"# replaceing null values in the train_data\ntrain_data['LotFrontage'].replace(np.nan, train_data['LotFrontage'].mean(), inplace = True)\ntrain_data['MasVnrType'].replace(np.nan, train_data['MasVnrType'].mode()[0], inplace = True)\ntrain_data['MasVnrArea'].replace(np.nan, train_data['MasVnrArea'].mode()[0], inplace = True)\ntrain_data['BsmtQual'].replace(np.nan, train_data['BsmtQual'].mode()[0], inplace = True)\ntrain_data['BsmtCond'].replace(np.nan, train_data['BsmtCond'].mode()[0], inplace = True)\ntrain_data['BsmtExposure'].replace(np.nan, train_data['BsmtExposure'].mode()[0], inplace = True)\ntrain_data['BsmtFinType1'].replace(np.nan, train_data['BsmtFinType1'].mode()[0], inplace = True)\ntrain_data['BsmtFinType2'].replace(np.nan, train_data['BsmtFinType2'].mode()[0], inplace = True)\ntrain_data['FireplaceQu'].replace(np.nan, train_data['FireplaceQu'].mode()[0], inplace = True)\ntrain_data['GarageType'].replace(np.nan, train_data['GarageType'].mode()[0], inplace = True)\ntrain_data['GarageYrBlt'].replace(np.nan, train_data['GarageYrBlt'].mean(), inplace = True)\ntrain_data['GarageFinish'].replace(np.nan, train_data['GarageFinish'].mode()[0], inplace = True)\ntrain_data['GarageQual'].replace(np.nan, train_data['GarageQual'].mode()[0], inplace = True)\ntrain_data['GarageCond'].replace(np.nan, train_data['GarageCond'].mode()[0], inplace = True)\ntrain_data['Electrical'].replace(np.nan, train_data['Electrical'].mode()[0], inplace = True)","9b9abfc7":"# replaceing null values in the train_data\ntest_data['LotFrontage'].replace(np.nan,  test_data['LotFrontage'].mean(), inplace = True)\ntest_data['MasVnrType'].replace(np.nan,  test_data['MasVnrType'].mode()[0], inplace = True)\ntest_data['MasVnrArea'].replace(np.nan,  test_data['MasVnrArea'].mode()[0], inplace = True)\ntest_data['BsmtQual'].replace(np.nan,  test_data['BsmtQual'].mode()[0], inplace = True)\ntest_data['BsmtCond'].replace(np.nan,  test_data['BsmtCond'].mode()[0], inplace = True)\ntest_data['BsmtExposure'].replace(np.nan,  test_data['BsmtExposure'].mode()[0], inplace = True)\ntest_data['BsmtFinType1'].replace(np.nan,  test_data['BsmtFinType1'].mode()[0], inplace = True)\ntest_data['BsmtFinType2'].replace(np.nan,  test_data['BsmtFinType2'].mode()[0], inplace = True)\ntest_data['FireplaceQu'].replace(np.nan,  test_data['FireplaceQu'].mode()[0], inplace = True)\ntest_data['GarageType'].replace(np.nan,  test_data['GarageType'].mode()[0], inplace = True)\ntest_data['GarageYrBlt'].replace(np.nan,  test_data['GarageYrBlt'].mean(), inplace = True)\ntest_data['GarageFinish'].replace(np.nan,  test_data['GarageFinish'].mode()[0], inplace = True)\ntest_data['GarageQual'].replace(np.nan,  test_data['GarageQual'].mode()[0], inplace = True)\ntest_data['GarageCond'].replace(np.nan,  test_data['GarageCond'].mode()[0], inplace = True)\ntest_data['Electrical'].replace(np.nan,  test_data['Electrical'].mode()[0], inplace = True)","586df18b":"train_data.isnull().any().sum()","9a97ffee":"test_data.fillna(0, inplace = True)","36d65e99":"test_data.isnull().sum().values","c35c9ba2":"train_data.describe().T","ea20cf90":"train_data.corr()","dda68d27":"columns = [ 'MSSubClass', 'LotFrontage', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', \n        'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', \n        'BsmtFullBath','BsmtHalfBath','FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',\n        'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'EnclosedPorch', 'OpenPorchSF', '3SsnPorch', \n        'PoolArea', 'ScreenPorch', 'MiscVal', 'MoSold', 'YrSold','MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', \n        'Condition1', 'Condition2', 'BldgType', 'HouseStyle','RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', \n        'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1',\n        'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual','Functional', 'FireplaceQu', \n        'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition'    \n]\nX = train_data[columns]\nY = train_data[['SalePrice']]\ntest_X = test_data[columns]","e537e063":"X.shape, Y.shape, test_X.shape","86ab9649":"plt.figure(figsize = (30,10))\nsns.heatmap(train_data.corr(), cmap = 'coolwarm', annot = True)","10057566":"X","92839f3c":"Y","52d7c13e":"from sklearn.preprocessing import StandardScaler , OrdinalEncoder\nsc = StandardScaler()\ncols = ['MSSubClass', 'LotFrontage', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', \n        'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', \n        'BsmtFullBath','BsmtHalfBath','FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',\n        'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'EnclosedPorch', 'OpenPorchSF', '3SsnPorch', \n         'PoolArea', 'ScreenPorch', 'MiscVal', 'MoSold', 'YrSold']\n\nX[cols] = sc.fit_transform(X[cols])","397655a7":"or_encoder = OrdinalEncoder()\ncols = ['MSZoning', 'Street', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', \n        'Condition1', 'Condition2', 'BldgType', 'HouseStyle','RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', \n        'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1',\n        'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual','Functional', 'FireplaceQu', \n        'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition']\nX[cols]= or_encoder.fit_transform(X[cols])\n","1b433464":"X.head()","e4be6130":"# spliting dataset \nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,Y,test_size = 0.3, random_state = 5)","2a4c71dc":"x_train.shape, x_test.shape, y_train.shape, y_test.shape","1d225076":"# creating ensemble model\nfrom sklearn.linear_model import LinearRegression \nmodel_lr = LinearRegression()","66b0aef3":"# train model\nmodel_lr.fit(x_train,y_train)","9f7d00a4":"Y_pred = model_lr.predict(X)","72bf462a":"# ploting graph the output of test dataset\nplt.figure(figsize= (20,5))\nplt.plot( Y, color = 'blue', label = 'Actual output')\nplt.plot( Y_pred,'o', color = 'red', label = 'Predicted output')\nplt.legend()","6f75a788":"output_Dataset = pd.DataFrame( Y_pred, columns = ['SalePrice'])\noutput_Dataset ","4d5966e6":"output_Dataset.insert(0,'id',data_ids)\noutput_Dataset.to_csv('result.csv', index = False)\noutput_Dataset.reset_index()","6f115ff3":"output_Dataset.shape","8bdbd01d":"<h1>Regex software services<\/h1>\n\n<h1>Ashish Chauhan<\/h1>\n\n<h2>task: 7 -2(House Price prediction)<\/h2>\n<h2>Data Science and machine learning internship preogram <\/h2>"}}