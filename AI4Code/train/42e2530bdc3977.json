{"cell_type":{"c4c32485":"code","ac38f9e7":"code","dd7a7733":"code","189cdcbf":"code","72226f4f":"code","5e8157ac":"code","67d31486":"code","06649cde":"code","836e1b51":"code","8b195790":"code","2b5b298d":"code","7c3a0751":"code","073a01c0":"code","968162d3":"code","ea0a904a":"code","2a2c145d":"markdown"},"source":{"c4c32485":"# Import Dependencies\nfrom tensorflow.keras.layers import Input , Lambda  , Dense , Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications import InceptionResNetV2\nfrom tensorflow.keras.applications.inception_v3 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator , load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob","ac38f9e7":"# Resize all the images for InceptionV3 Model\nIMAGE_SIZE = [299, 299]\n\ntrain_path = \"..\/input\/indian-food-classification\/dataset\/Dataset\/train\"\nvalid_path = \"..\/input\/indian-food-classification\/test\"","dd7a7733":"# Import the ResNet152V2 Library as shown below.\ninception_res = InceptionResNetV2(input_shape = IMAGE_SIZE + [3] , weights = \"imagenet\" , include_top = False)","189cdcbf":"# Don't train exiting weights\nfor layer in inception_res.layers:\n    layer.trainable = False","72226f4f":"# Get all the output classes\nfolders = glob(\"..\/input\/indian-food-classification\/dataset\/Dataset\/train\/*\")","5e8157ac":"len(folders)","67d31486":"from keras.layers import GlobalAveragePooling2D , Dropout\n\n# Although this part can be done also with the functional API, I found that for this simple models, this becomes more intuitive\nx =  inception_res.output\ntransfer_model=(GlobalAveragePooling2D())(x)\ntransfer_model=(Dense(824,activation='relu'))(transfer_model)\ntransfer_model=(Dropout(0.4))(transfer_model)\nprediction=(Dense(len(folders), activation=\"softmax\"))(transfer_model)\n\n# create a model object\nmodel = Model(inputs=inception_res.input, outputs=prediction)","06649cde":"model.summary()","836e1b51":"# Compile the model\nmodel.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)","8b195790":"# Use Data Augmentation to Generate more images and helps to avoid overfitting\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","2b5b298d":"training_set = train_datagen.flow_from_directory('..\/input\/indian-food-classification\/dataset\/Dataset\/train',\n                                                 target_size = (299, 299),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","7c3a0751":"test_set = test_datagen.flow_from_directory('..\/input\/indian-food-classification\/test',\n                                            target_size = (299, 299),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","073a01c0":"# Train the model\nhistory = model.fit_generator(\n              training_set,\n              validation_data=test_set,\n              epochs=20,\n              steps_per_epoch=len(training_set),\n              validation_steps=len(test_set)\n)","968162d3":"import matplotlib.pyplot as plt\n\n# plot the loss\nplt.plot(history.history['loss'], label='train loss')\nplt.plot(history.history['val_loss'], label='val loss')\nplt.legend()\nplt.show()\n\n# plot the accuracy\nplt.plot(history.history['accuracy'], label='train acc')\nplt.plot(history.history['val_accuracy'], label='val acc')\nplt.legend()\nplt.show()","ea0a904a":"# Save the model\nfrom tensorflow.keras.models import load_model\n\nmodel.save('model_resnet50.h5')","2a2c145d":"# Indian Food Classification using Transfer Learning\nIn this Project i use Resnet50 Pretrained model to tackle this situation , you can also use any other Pretrained model."}}