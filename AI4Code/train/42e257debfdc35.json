{"cell_type":{"b52ade7f":"code","5967886a":"code","901ae7d8":"code","953f3d27":"code","3d283928":"code","9561aacc":"code","d0739fc4":"code","1914907e":"code","87caa4e1":"markdown","6131b0b6":"markdown","04d1e364":"markdown","a136ec36":"markdown","11e0506b":"markdown"},"source":{"b52ade7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5967886a":"df = pd.read_csv(\"\/kaggle\/input\/the-bread-basket\/bread basket.csv\") \ndf.head()","901ae7d8":"# https:\/\/stackoverflow.com\/questions\/65154530\/how-to-combine-values-having-same-value-in-some-columns\nfrom collections import defaultdict\nrefHash = defaultdict(list)\n\nfor i,id in enumerate(df['Transaction'].values):\n    refHash[id] += [df.loc[i,'Item']]\n\nlst = list(refHash.values())\n","953f3d27":"!pip install apyori","3d283928":"from apyori import apriori\nrules = apriori(transactions= lst, min_support = 0.002, min_lift = 3)\nresults = list(rules)\nresults","9561aacc":"def inspect(results):\n    lhs         = [tuple(result[2][0][0])[0] for result in results]\n    rhs         = [tuple(result[2][0][1])[0] for result in results]\n    supports    = [result[1] for result in results]\n    confidences = [result[2][0][2] for result in results]\n    lifts       = [result[2][0][3] for result in results]\n    return list(zip(lhs, rhs, supports, confidences, lifts))\nresultsinDataFrame = pd.DataFrame(inspect(results), columns = ['Left Hand Side', 'Right Hand Side', 'Support', 'Confidence', 'Lift'])","d0739fc4":"resultsinDataFrame","1914907e":"resultsinDataFrame.nlargest(10, 'Lift')","87caa4e1":"Importing the data set:","6131b0b6":"Displaying the top ten items having the highest lift","04d1e364":"Creating a sub list of items having same transaction id in a list","a136ec36":"Training the APRIORI machine","11e0506b":"Better visualization of the output from the model(RULES)"}}