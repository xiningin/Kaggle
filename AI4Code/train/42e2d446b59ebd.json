{"cell_type":{"b7e2d703":"code","13bfbada":"code","fea3325f":"code","0e312b88":"code","ed755672":"code","22cc6382":"code","c1deda3e":"code","c2bfafc3":"code","7102a708":"code","dd0dc3e7":"code","916fac0c":"code","2d634a82":"code","554a0c93":"code","d1a720d1":"code","51a63f07":"code","fe1598be":"code","67352373":"code","36c13b92":"code","adeede14":"code","65b91d7e":"code","7e12de4e":"code","f0d51d8b":"code","d49f9c3a":"markdown","ddc0388c":"markdown","06e5aed6":"markdown","8ac3d49f":"markdown","dd955e73":"markdown","e126b71f":"markdown","d766aa44":"markdown","54b17acc":"markdown","2e447d9a":"markdown","08f20d78":"markdown","868c9856":"markdown","22c1c820":"markdown"},"source":{"b7e2d703":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13bfbada":"def check_df(dataframe, head=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(head))\n\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n\n    print(\"##################### Quantiles #####################\")\n    print(df.describe().T)\n\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)","fea3325f":"df = pd.read_csv(\"\/kaggle\/input\/persona\/persona.csv\")\n","0e312b88":"check_df(df)\n","ed755672":"# How many unique SOURCE are there? What are their frequencies?\n\nprint(df[\"SOURCE\"].value_counts())\nprint(df[\"SOURCE\"].nunique())","22cc6382":"# How many sales were made at which PRICE?\nprint(df[\"PRICE\"].value_counts())","c1deda3e":"max_weighted_class = df[\"PRICE\"].value_counts().idxmax()\nmax_weighted_class","c2bfafc3":"# How much was earned in total from sales by country?\ndf.groupby(\"COUNTRY\")[\"PRICE\"].agg(\"sum\")","7102a708":"# What are the PRICE averages by country?\ndf.groupby(\"COUNTRY\")[\"PRICE\"].agg(\"mean\")\n","dd0dc3e7":"agg_df = pd.DataFrame(df.groupby([\"COUNTRY\",\"SOURCE\",\"SEX\",\"AGE\"])[\"PRICE\"].agg(\"mean\")).sort_values(\"PRICE\",ascending=False)\n","916fac0c":"agg_df","2d634a82":"agg_df.reset_index(inplace=True)\n","554a0c93":"agg_df","d1a720d1":"agg_df[\"AGE_CAT\"] = pd.cut(agg_df[\"AGE\"], [0, 18, 25, 30,40,50,agg_df[\"AGE\"].max()],\n                           labels=[\"0_18\",\"19_25\",\"26_30\",\"31_40\",\"41_50\",\"50_50+\"])\nagg_df","51a63f07":"import seaborn as sns\nax = sns.barplot(x=\"AGE_CAT\", y=\"PRICE\", data=agg_df)","fe1598be":"agg_df[\"customers_level_based\"] = [row[0].upper() + \"_\" + row[1].upper() + \"_\" + row[2].upper() + \"_\" +\n                                   str(row[5]).upper() for row in agg_df.values]\nagg_df","67352373":"agg_df[\"customers_level_based\"].value_counts()\n","36c13b92":"agg_df_new = agg_df.groupby(\"customers_level_based\")[\"PRICE\"].agg(\"mean\")\nagg_df_new = pd.DataFrame(agg_df_new.reset_index())\nagg_df_new","adeede14":"agg_df_new[\"SEGMENT\"] = pd.qcut(agg_df_new[\"PRICE\"],4,[\"D\",\"C\",\"B\",\"A\"])\nagg_df_new","65b91d7e":"print(agg_df_new[\"SEGMENT\"].value_counts())\nagg_df_new.groupby(\"SEGMENT\")[\"PRICE\"].agg([\"mean\",\"max\",\"sum\"])","7e12de4e":"import seaborn as sns\nax = sns.barplot(x=\"SEGMENT\", y=\"PRICE\", data=agg_df_new)","f0d51d8b":"new_customer1 = \"TUR_ANDROID_FEMALE_31_40\"\n\nagg_df_new[agg_df_new['customers_level_based'] ==new_customer1]","d49f9c3a":"What is the price value with the highest frequency?","ddc0388c":"When the results are analyzed, it is seen that the average prices by countries are close to each other.","06e5aed6":"This is the function we will use to analyse the data set.","8ac3d49f":"Let's create a df with personas and average prices.","dd955e73":"### Read data set.","e126b71f":"Let's estimate the average price and segment for a new customer.","d766aa44":"Let's divide the persona into 4 segments using the price.","54b17acc":"Let's convert age variable to categorical variable and add it to agg_df.\n","2e447d9a":"Analyse segments.","08f20d78":"Let's define new level-based customers (persona).","868c9856":"Let's analyze the data in more detail.","22c1c820":"COUNTRY, SOURCE, SEX, AGE variables are seen as indexes. Let's get out of this situation."}}