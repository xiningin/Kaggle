{"cell_type":{"403877a5":"code","53bff368":"code","d5461af4":"code","9aa03a8c":"code","dd520262":"code","dc150ec1":"code","4e078cf3":"code","49225984":"code","0f4ebcda":"code","f8065bfc":"code","5af26734":"code","f40c0cc5":"code","feac4f44":"code","230dfa51":"code","5e8bd8cb":"code","b84fb886":"code","98709277":"code","fea0a00a":"code","adbdf559":"code","10d40694":"code","758b3eba":"code","bcb34de2":"code","d7b5c9b0":"code","7b99dc9b":"code","f18053f4":"markdown","461dd968":"markdown","e562eac9":"markdown","4aed2010":"markdown","8722e4df":"markdown","ccc920f8":"markdown","c998293f":"markdown","405924e0":"markdown","b672c412":"markdown","b700ae6f":"markdown","4c9b8fbb":"markdown"},"source":{"403877a5":"import pandas as pd\nimport numpy as np","53bff368":"dataset = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')","d5461af4":"dataset.shape","9aa03a8c":"dataset.count()","dd520262":"dataset.isna().sum()","dc150ec1":"dataset.dropna(inplace=True)","4e078cf3":"dataset.isna().sum()","49225984":"dataset.describe()","0f4ebcda":"dataset['Dependents'].value_counts()","f8065bfc":"dataset['Dependents'] = dataset['Dependents'].map({'3+': 3, '1':1, '2':2, '0':0})\ndataset['Dependents'].value_counts()","5af26734":"dataset.head()","f40c0cc5":"from sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nle = LabelEncoder()\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [10])], remainder='passthrough')","feac4f44":"dataset['Gender'] = le.fit_transform(dataset['Gender'])\ndataset['Married'] = le.fit_transform(dataset['Married'])\ndataset['Education'] = le.fit_transform(dataset['Education'])\ndataset['Self_Employed'] = le.fit_transform(dataset['Self_Employed'])\ndataset['Loan_Status'] = le.fit_transform(dataset['Loan_Status'])","230dfa51":"dataset.head()","5e8bd8cb":"X = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","b84fb886":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","98709277":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train[:, 5:9] = sc.fit_transform(X_train[:, 5:9])\nX_test[:, 5:9] = sc.transform(X_test[:, 5:9])","fea0a00a":"X_train","adbdf559":"X_train = ct.fit_transform(X_train)\nX_test = ct.transform(X_test)","10d40694":"X_train","758b3eba":"!pip install catboost","bcb34de2":"from catboost import CatBoostClassifier\nclassifier = CatBoostClassifier()\nclassifier.fit(X_train, y_train)","d7b5c9b0":"from sklearn.metrics import confusion_matrix, accuracy_score\ny_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","7b99dc9b":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\nprint(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","f18053f4":"# Preprocessing","461dd968":"Let's check accuracy using cross validation","e562eac9":"# Applying onehot encoder on categorical data","4aed2010":"Ok. Here we got Accuracy: 80.19 % and Standard Deviation: 6.00 % in cross validation method","8722e4df":"# Training","ccc920f8":"# Label Encoding","c998293f":"# Scalling","405924e0":"# install catboost","b672c412":"# Prediction","b700ae6f":"# Splitting into train and test set","4c9b8fbb":"# Encoders"}}