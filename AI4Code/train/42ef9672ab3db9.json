{"cell_type":{"d194f8a6":"code","029e00f1":"code","589ae597":"code","2c16cf75":"code","17a7d56e":"code","3c255ca5":"code","ebb3535c":"code","e9145e99":"code","63d88b75":"code","6e22f9a4":"code","11db20ac":"code","a1889316":"code","acd9ff35":"code","ad3f8bf2":"code","612ffafd":"code","ce6e1ff1":"code","c0800af8":"code","c5e8ba5f":"markdown","df2a873d":"markdown","bdc74dc3":"markdown","7a42161b":"markdown","2dc67a3d":"markdown","84069606":"markdown","21b4307b":"markdown","e4a64117":"markdown","c9a14de1":"markdown","d84a9352":"markdown","c26361b9":"markdown","00ca1f7e":"markdown","161721e5":"markdown","9debda52":"markdown","84e4ef65":"markdown","6ef84bc3":"markdown","c7f94099":"markdown","0a5d5652":"markdown","57f52bf1":"markdown"},"source":{"d194f8a6":"import os\n\nimport numpy as np \nimport pandas as pd \npd.set_option('colheader_justify', 'center')\nfrom IPython.core.display import HTML\nfrom scipy import stats\nfrom statsmodels.stats.weightstats import _tconfint_generic\nfrom statsmodels.stats.proportion import proportions_ztest, proportion_confint\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.graph_objects as go\n\nfolder = '\/kaggle\/input\/kaggle-survey-2019'\ngender_colors = ['cornflowerblue','lightcoral']\n\ndef calculate_percent(series):\n    return series.value_counts() \/ len(series)\n\ndef create_countplot(data, x, xlabel=None, ylabel=None, edgecolor=None, params=None):\n    sns.countplot(data=data, x=x, order=sorted(data[x].unique()), edgecolor=edgecolor, **params)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    \ndef plot_pie(size, labels, colors, title):\n    plt.title(title, fontsize=14)\n    my_circle=plt.Circle( (0,0), 0.7, color='white')\n    plt.pie(size, labels=labels, colors=colors)\n    p=plt.gcf()\n    p.gca().add_artist(my_circle)\n    \ndef plot_interval_diff(groups, labels, gender_colors, title=''):\n    marker_style = {'marker': 11, 's': 150}\n\n    plt.figure(figsize=(10,5))\n    plt.yticks(ticks=range(1, len(groups)+2, 1), \n               labels=labels)\n    plt.xlim(0, groups.max().max()+10)\n    plt.ylim(-1, len(labels)+1)\n\n    for i,label in enumerate(labels):\n        values = groups.loc[groups.index==label, ].values[0]\n        if np.isnan(np.min(values)):\n            plt.scatter(values[-1], i+1, color=gender_colors[0], **marker_style)\n            plt.hlines(y=i+1, xmin=0, xmax=0)\n        else:\n            plt.scatter(values[1], [i+1], color=gender_colors[0], **marker_style)\n            plt.scatter(values[0], [i+1], color=gender_colors[1], **marker_style)\n            plt.hlines(y=i+0.85, xmin=values.min()+0.5, xmax=values.max()-0.5, linewidth=3, color='grey')\n            diff = round(abs(values[1] - values[0]), 2)\n            plt.text(values.max()+0.8, i+0.7, '\u0394 {}%'.format(diff), fontsize=12)\n    plt.legend(['Male', 'Female'],ncol=2, mode=\"expand\", loc='lower left', \n               borderpad=1, bbox_to_anchor=(0., 0., 0.5, 0.5))\n    plt.xlabel('% in group')\n    plt.title(title+'\\n', fontsize=20)\n    plt.suptitle('\\nThe absolute difference between male and female percentage is printed after interval')\n\ndef create_percentage_df(df, question, labels):\n    groups = df.groupby('Q2')[question].value_counts().unstack().T[['Female','Male']].reindex(labels)\n    return groups \/ groups.sum() * 100\n\ndef proportions_diff_confint_ind(sample1, sample2, alpha = 0.05):\n    # confidence intervals for difference between two Bernulli distributions\n    z = stats.norm.ppf(1 - alpha \/ 2.)\n    p1 = float(sum(sample1)) \/ len(sample1)\n    p2 = float(sum(sample2)) \/ len(sample2)\n    left_boundary = (p1 - p2) - z * np.sqrt(p1 * (1 - p1)\/ len(sample1) + p2 * (1 - p2)\/ len(sample2))\n    right_boundary = (p1 - p2) + z * np.sqrt(p1 * (1 - p1)\/ len(sample1) + p2 * (1 - p2)\/ len(sample2))  \n    return (left_boundary, right_boundary)\n\ndef compute_multiple_choices(df, q_number):\n    columns = [column for column in df.columns if q_number in column and 'OTHER' not in column]\n    gender_n = len(df[df['Q2']=='Female']), len(df[df['Q2']=='Male'])\n    result = pd.DataFrame(data={'Female': df[df['Q2']=='Female'][columns].notnull().sum(),\n                                'Male': df[df['Q2']=='Male'][columns].notnull().sum()})\n    result.index = [df[column].dropna().unique()[0] for column in columns]\n    return result \/ gender_n * 100\n\ndef multiple_choices_to_df(df, q_number):\n    columns = [column for column in df.columns if q_number in column and 'OTHER' not in column]\n    result = pd.DataFrame(data={'Gender': df['Q2'].values})\n    for column in columns:\n        result = result.merge(df[column].str.get_dummies(), left_index=True, right_index=True)\n    return result[result['Gender'].isin(['Male', 'Female'])]\n\ndef survey(results, category_names):\n    \"\"\"\n    Parameters\n    ----------\n    results : dict\n        A mapping from question labels to a list of answers per category.\n        It is assumed all lists contain the same number of entries and that\n        it matches the length of *category_names*.\n    category_names : list of str\n        The category labels.\n    \"\"\"\n    labels = list(results.keys())\n    data = np.array(list(results.values()))\n    data_cum = data.cumsum(axis=1)\n    category_colors = plt.get_cmap('bwr')(\n        np.linspace(0.15, 0.85, data.shape[1]))\n\n    fig, ax = plt.subplots(figsize=(9.2, 3))\n    ax.invert_yaxis()\n    ax.xaxis.set_visible(False)\n    ax.set_xlim(0, np.sum(data, axis=1).max())\n\n    for i, (colname, color) in enumerate(zip(category_names, category_colors)):\n        widths = data[:, i]\n        starts = data_cum[:, i] - widths\n        ax.barh(labels, widths, left=starts, height=0.5,\n                label=colname, color=color)\n        xcenters = starts + widths \/ 2\n\n        r, g, b, _ = color\n        text_color = 'white' if r * g * b < 0.5 else 'darkgrey'\n        for y, (x, c) in enumerate(zip(xcenters, widths)):\n            ax.text(x, y, str(int(c)), ha='center', va='center',\n                    color=text_color)\n    ax.legend(ncol=len(category_names), bbox_to_anchor=(0, 1),\n              loc='lower left', fontsize='small')\n\n    return fig, ax\n\ndef plot_modal_salary(df, role_labels):\n    job_role_modal_salary = {}\n    for job_role in role_labels:\n        if job_role not in ['Student', 'Not employed']:\n            job_role_modal_salary[job_role] = df[df['Q5']==job_role]['coded_salary'].mode().values.tolist()\n    plt.yticks(ticks=range(1, len(job_role_modal_salary.keys())+2, 1), \n                   labels=job_role_modal_salary.keys())\n    plt.xticks(ticks=range(1, len(salary_labels)+2, 1), \n                   labels=salary_labels, rotation=20)\n    i = 1\n    for job, modal_salaries in job_role_modal_salary.items():\n        if len(modal_salaries) > 1:\n            xmin, xmax = [salary_labels.index(salary)+1 for salary in modal_salaries]\n            plt.hlines(y=i, xmin=xmin, xmax=xmax, linestyle='--', color='grey')\n        for salary in modal_salaries:\n            plt.scatter(salary_labels.index(salary)+1, i, color='green', marker='$\\$$', s=300)\n        i+=1\n    plt.xlim(0, 5)","029e00f1":"multiple_choice_responses_2018 = pd.read_csv(\"..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv\", \n                                        low_memory=False).iloc[1:]\nrussian_subset_2018 = multiple_choice_responses_2018[multiple_choice_responses_2018['Q3']=='Russia']\nmultiple_choice_responses_2017 = pd.read_csv(\"..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv\", \n                                        low_memory=False,encoding='ISO-8859-1').iloc[1:]\nrussian_subset_2017 = multiple_choice_responses_2017[multiple_choice_responses_2018['Q3']=='Russia']\n\nsurvey_schema = pd.read_csv(os.path.join(folder, 'survey_schema.csv'))\nquestions = pd.read_csv(os.path.join(folder, 'questions_only.csv'))\nmultiple_choice_responses = pd.read_csv(os.path.join(folder, 'multiple_choice_responses.csv'), \n                                        low_memory=False).iloc[1:]\nsalary_groups = { '$0-999': '<$10 000', '1,000-1,999': '<$10 000', \n                  '2,000-2,999': '<$10 000',  '3,000-3,999': '<$10 000', \n                  '4,000-4,999': '<$10 000', '5,000-7,499': '<$10 000', \n                  '7,500-9,999': '<$10 000', '10,000-14,999': '$10 000-20 000',\n                  '15,000-19,999': '$10 000-20 000', '20,000-24,999': '$20 000-70 000', \n                  '25,000-29,999': '$20 000-70 000', '30,000-39,999': '$20 000-70 000',  \n                  '40,000-49,999': '$20 000-70 000', '50,000-59,999': '$20 000-70 000',\n                  '60,000-69,999': '$20 000-70 000',  '70,000-79,999': '> $70 000', \n                  '80,000-89,999': '> $70 000', '90,000-99,999': '> $70 000', \n                  '100,000-124,999': '> $70 000', '125,000-149,999': '> $70 000',\n                  '150,000-199,999': '> $70 000', '200,000-249,999': '> $70 000', \n                  '250,000-299,999': '> $70 000', '300,000-500,000': '> $70 000',\n                  '> $500,000': '> $70 000'}\nmultiple_choice_responses['coded_salary'] = multiple_choice_responses['Q10'].map(salary_groups)\nexperience_groups = {}\n\nrussian_subset = multiple_choice_responses[multiple_choice_responses['Q3']=='Russia']\n\nfor q, text in zip(questions, questions.values.tolist()[0]):\n    print(q, text)","589ae597":"country_proportion = pd.DataFrame(data={'count': (multiple_choice_responses['Q3'].value_counts().head(6)),\n                                       '%': (calculate_percent(multiple_choice_responses['Q3'])).head(6)}).drop(index='Other')\nstyles = [\n    dict(selector=\"th\", props=[(\"text-align\", \"left\")]),\n    dict(selector=\"row_heading\", props=[(\"text-align\", \"right\")]),\n    dict(selector=\"caption\", props=[(\"font-size\", \"150%\"), (\"text-align\", \"center\"), (\"color\", \"black\")],\n    )\n]\n\ncountry_proportion.style.set_table_styles(styles).set_caption('Survey participants proportion per country, top-5')\\\n                .set_properties(**{'width': '120px'})\\\n                .background_gradient(cmap=sns.light_palette('orange', as_cmap=True), subset='%').format(\"{:.2%}\", subset='%')\\\n                .background_gradient(cmap=sns.light_palette('red', as_cmap=True), subset='count')","2c16cf75":"all_years_number = pd.DataFrame(data={'2017': len(russian_subset_2017)\/len(multiple_choice_responses_2017), \n                                      '2018': len(russian_subset_2018)\/len(multiple_choice_responses_2018), \n                                      '2019': len(russian_subset)\/len(multiple_choice_responses)},\n                               index=['%']).T\nall_years_number.style.set_table_styles(styles).set_caption('Percent participants from Russia')\\\n                .set_properties(**{'width': '230px'}).format(\"{:.2%}\")\\\n                .background_gradient(cmap=sns.light_palette('blue', as_cmap=True))","17a7d56e":"percent_per_country = (calculate_percent(multiple_choice_responses['Q3'])*100).to_frame().reset_index()\\\n                                            .rename(columns={'index': 'country name','Q3': '%'})\n\nfig = go.Figure(data=go.Choropleth(\n    locations=percent_per_country['country name'],\n    z = percent_per_country['%'], \n    locationmode='country names', \n    colorscale='ylorrd', colorbar_title='%',\n    zmax=5\n))\n\nfig.update_layout(title={\n        'text': \"Kaggle survey respondents, % in 2019 sample per country\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},\n)\n\nfig.show()","3c255ca5":"gender_proportion = pd.DataFrame(data={'...worldwide': calculate_percent(multiple_choice_responses['Q2']),\n                                       '...in Russian': calculate_percent(russian_subset['Q2'])})\n\ngender_proportion.style.set_table_styles(styles).set_caption('Gender proportion...')\\\n        .set_properties(**{'width': '120px'}).format(\"{:.2%}\").background_gradient(cmap=sns.light_palette('green', as_cmap=True))","ebb3535c":"names = multiple_choice_responses['Q2'].value_counts().index[:2]\nall_size = multiple_choice_responses['Q2'].value_counts().values[:2]\nall_names = ['{}, {}%'.format(sex, round(value\/sum(all_size)*100, 2)) \n             for sex, value in zip(names, all_size)]\nrussian_size = russian_subset['Q2'].value_counts().values[:2]\nrussian_names = ['{}, {}%'.format(sex, round(value\/sum(russian_size)*100, 2)) \n                 for sex, value in zip(names, russian_size)]\n\nplt.figure(figsize=(12,10))\nplt.suptitle('Gender proportion for kagglers...', fontsize=20)\n\nplt.subplot(1,2,1)\nplot_pie(all_size, all_names, gender_colors, '...worldwide')\n\nplt.subplot(1,2,2)\nplot_pie(russian_size, russian_names, gender_colors, '...in Russia')\n\nplt.subplots_adjust(top=1.25)\nplt.show()","e9145e99":"z_stat_for_proportion = proportions_ztest(russian_subset['Q2'].map({'Female': 1, 'Male': 0}).sum(),\n                                 len(russian_subset['Q2'].map({'Female': 1, 'Male': 0}).dropna()),\n                                 multiple_choice_responses['Q2'].map({'Female': 1, 'Male': 0}).mean())\nprint('Statistic for z-test is {:0.2f} and p-value is {:0.3f}.'.format(*z_stat_for_proportion))\n\nconf_interval_for_difference_in_women = proportions_diff_confint_ind(\n                            multiple_choice_responses['Q2'].map({'Female': 1, 'Male': 0}).dropna(),\n                            russian_subset['Q2'].map({'Female': 1, 'Male': 0}).dropna())\n\nprint('95%% confidence interval for a difference between women worldwide and from Russia: {}-{}%'\n      .format(*[round(el * 100, 2) for el in conf_interval_for_difference_in_women]))","63d88b75":"female_percent_per_country = ((multiple_choice_responses.groupby('Q3')['Q2'].value_counts().unstack()['Female'].sort_index() \/ \n                                multiple_choice_responses['Q3'].value_counts().sort_index()) * 100) \\\n                                .to_frame().reset_index().rename(columns={'Q3': 'country name', 0: 'female %'})\n\nfemale_percent_per_country = female_percent_per_country[female_percent_per_country['country name'].isin(multiple_choice_responses['Q3'].value_counts().reset_index(name=\"count\").query('count >= 100')['index'].values)]\n\nfig = go.Figure(data=go.Choropleth(\n    locations=female_percent_per_country['country name'], # Spatial coordinates\n    z=female_percent_per_country['female %'], # Data to be color-coded\n    locationmode='country names', # set of locations match entries in `locations`\n    colorscale='reds',\n    colorbar=dict(\n        title=\"female %\",\n        titleside=\"top\",\n        tickmode=\"array\",\n        tickvals=list(range(0, 60, 10)),\n        ticks=\"outside\"\n    )\n))\n\nfig.update_layout(title={\n        'text': \"Kaggle survey female respondents, % in 2019 survey sample per country<br>(for countries with 100+ participants)\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n        \nfig.show()","6e22f9a4":"category_names = ['Male', 'Female']\n\ngender_2018 = russian_subset_2018['Q1'].value_counts().values[:2]\ngender_2017 = russian_subset_2017['GenderSelect'].value_counts().values[:2]\n\nresults = {\n    '2017': gender_2017 \/ gender_2017.sum() * 100,\n    '2018':  gender_2018 \/ gender_2018.sum() * 100,\n    '2019':  russian_size \/ russian_size.sum() * 100,\n}\n\nsurvey(results, category_names)\nplt.title('Gender proportion among Russian kagglers\\nfor 2017-2019 surveys\\n', fontsize=20)\nplt.show()","11db20ac":"ageplot_params = {'facecolor': (0, 0, 0, 0),\n                    'linewidth': 5}\n\nages_dist = pd.DataFrame(data={'in general': multiple_choice_responses['Q1'].value_counts()\\\n                                   .sort_index() \/ len(multiple_choice_responses) * 100,\n                              'from Russia': russian_subset['Q1'].value_counts()\\\n                                   .sort_index() \/ len(russian_subset) * 100})\n\nplt.figure(figsize=(15,5))\nplt.suptitle('Age groups for kagglers...', fontsize=20)\n\nplt.subplot(1,2,1)\nplt.title('...worldwide', fontsize=14)\ncreate_countplot(multiple_choice_responses,'Q1', edgecolor='gray', params=ageplot_params)\n\nplt.subplot(1,2,2)\nplt.title('...from Russia', fontsize=14)\ncreate_countplot(russian_subset,'Q1', edgecolor='blue', params=ageplot_params)\n\nplt.subplots_adjust(top=0.8)\nplt.show()\n\ndifferentage_groups = []\n\nprint('Check for statistical significance in percentage for age groups:')\nfor age in sorted(multiple_choice_responses['Q1'].unique()):\n    z_stat_for_age = proportions_ztest(russian_subset['Q1'].map({age: 1}).sum(),\n                                     len(russian_subset['Q1'].dropna()),\n                                     multiple_choice_responses['Q1'].map({age: 1}).fillna(0).mean())\n    if z_stat_for_age[1] < 0.05:\n        differentage_groups.append(age)\n        \nprint('Age groups: {} \u2014 has statistically significant differences in size worldwide and in Russia.'\\\n      .format(', '.join(differentage_groups)))","a1889316":"men_params = {'facecolor': (0, 0, 0, 0),\n              'linewidth': 3}\nwomen_params = {'linewidth': 3,\n                'color': gender_colors[1]}\nage_labels = {'xlabel': 'age category', \n              'ylabel': 'count'}\n\nplt.figure(figsize=(7,5))\ncreate_countplot(russian_subset[russian_subset['Q2']=='Male'], 'Q1', \n                 edgecolor=gender_colors[0], params=men_params, **age_labels)\ncreate_countplot(russian_subset[russian_subset['Q2']=='Female'], 'Q1', \n                 edgecolor='black', params=women_params, **age_labels)\n\nplt.legend(['Men count', 'Women count'])\nplt.title('Proportion for men and women \\nfrom Russia in age groups\\n', fontsize=20)\nplt.show()","acd9ff35":"salary_labels = ['<$10 000', '$10 000-20 000', '$20 000-70 000', '> $70 000']\nsalary_groups = create_percentage_df(russian_subset, 'coded_salary', salary_labels)\n\nplot_interval_diff(salary_groups, salary_labels, gender_colors, \n                   title='Differences in salary for Russian kagglers')\nplt.show()\n\ndifferentage_groups = []\nfor salary in salary_labels[:-1]:\n    z_stat = proportions_ztest(russian_subset['coded_salary'].map({salary: 1}).sum(),\n                               len(russian_subset['coded_salary'].dropna()),\n                               russian_subset['coded_salary'].map({salary: 1}).fillna(0).mean())\n    if z_stat[1] < 0.05:\n        differentage_groups.append(salary)\n        \nprint('Salary groups: {} \u2014 has statistically significant differences in size.'\\\n      .format(', '.join(differentage_groups)))","ad3f8bf2":"education_labels = ['Bachelor\u2019s degree', 'Professional degree', 'Master\u2019s degree', 'Doctoral degree',        \n                   'Some college\/university study without earning a bachelor\u2019s degree',\n                    'No formal education past high school',\n                   'I prefer not to answer']\neducational_groups = create_percentage_df(russian_subset, 'Q4', education_labels)\n\nplot_interval_diff(educational_groups, education_labels[:-3], gender_colors, \n                   title='Differences in education for Russian kaggler')\nplt.show()\n\ndifferentage_groups = []\nfor education in education_labels[:-3]:\n    z_stat = proportions_ztest(russian_subset['Q4'].map({education: 1}).sum(),\n                               len(russian_subset['Q4'].dropna()),\n                               russian_subset['Q4'].map({education: 1}).fillna(0).mean())\n    if z_stat[1] < 0.05:\n        differentage_groups.append(education)\nif len(differentage_groups) == 0:\n    differentage_groups.append('no groups')\n        \nprint('Education groups: {} \u2014 has statistically significant differences in size.'\\\n      .format(', '.join(differentage_groups)))","612ffafd":"role_labels = ['Data Scientist', 'Software Engineer', 'Student', 'Research Scientist',\n       'Data Analyst', 'Other', 'Not employed', 'Business Analyst',\n       'Product\/Project Manager', 'Data Engineer', 'DBA\/Database Engineer',\n       'Statistician']\nrole_groups = create_percentage_df(russian_subset, 'Q5', role_labels)\n\nroles_to_drop = ['DBA\/Database Engineer', 'Statistician', 'Other','Product\/Project Manager']\nrole_groups = role_groups[~role_groups.index.isin(roles_to_drop)]\nrole_labels = [role for role in role_labels if role not in roles_to_drop]\n\nplot_interval_diff(role_groups, role_labels[:-2], gender_colors, \n                   title='Differences in job role for Russian kagglers')\nplt.show()\n\ndifferenage_groups = []\nfor role in role_labels[:-3]:\n    z_stat = proportions_ztest(russian_subset['Q5'].map({role: 1}).sum(),\n                               len(russian_subset['Q5'].dropna()),\n                               russian_subset['Q5'].map({role: 1}).fillna(0).mean())\n    if z_stat[1] < 0.05:\n        differenage_groups.append(role)\nif len(differentage_groups) == 0:\n    differentage_groups.append('no groups') \nprint('Job roles: {} \u2014 has statistically significant differences in size.'\\\n      .format(', '.join(differentage_groups)))","ce6e1ff1":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nplot_modal_salary(multiple_choice_responses, role_labels)\nplt.title('...worldwide', fontsize=14)\nplt.subplot(1,2,2)\nplot_modal_salary(russian_subset, role_labels)\nplt.title('...in Russia', fontsize=14)\n\nplt.subplots_adjust(top=0.8, wspace=0.3)\nplt.suptitle('Modal salary categories for job roles\\n', fontsize=20)\nplt.show()","c0800af8":"experience_labels = ['I have never written code', '< 1 years', '1-2 years', '3-5 years', \n                     '5-10 years', '10-20 years', '20+ years']\nexperience_groups = create_percentage_df(russian_subset, 'Q15', experience_labels)\n\nex_to_sum = ['3-5 years','5-10 years', '10-20 years', '20+ years']\nexperience_groups.loc['3+ years'] = experience_groups[experience_groups.index.isin(ex_to_sum)].sum()\nexperience_groups = experience_groups[~experience_groups.index.isin(ex_to_sum)]\n\nplot_interval_diff(experience_groups, experience_groups.index, gender_colors, \n                   title='Differences in coding experience for Russian kagglers')\nplt.show()","c5e8ba5f":"Is it big differernce or just statistical  casualty? Let's compute the confidence interval for the differences to see if there is a zero (or no difference at all) in it:","df2a873d":"So there is the statistical significance. At least, there are fewer women in Russian data science for 1.53% then worldwide.\n\nIn comparison with other Kaggle country communities it is seen that there are fewer women among Russian kagglers:","bdc74dc3":"Actually proportion for kagglers from Russia in whole data set is the same for several years:","7a42161b":"# Age proportion for kagglers in Russia\n\nModal age category worldwide and in Russian subset is 25-29 years.  In comparison to worldwide dataset we can see that among Russian kagglers there are more from age group \"30-34\".","2dc67a3d":"![](https:\/\/sun9-13.userapi.com\/c858520\/v858520680\/65025\/5k5drYPk6JQ.jpg)\n*Original logo Credits: [widsconference.org](https:\/\/www.widsconference.org). I took the liberty of updating it with something actually Russian.*","84069606":"On the one hand, I want to focus on the characteristics of female data scientists as a group in comparison with male data scientists. On the other hand, the representation of  people with a alternative gender identity is not sufficient for reliable statistic conclusions.\n\n## Gender proportion \n\nThere are fewer women in Russian data science than there are around the world: in Russian subset the female percentage is 4.18% shorter in comparison to worldwide female percentage. ","21b4307b":"After look at the map below it can be said that, though Russian Kaggle community isn't the biggest one, it is among large ones. For example its size is close to Chinese community provided that [China population is almost ten times more](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_dependencies_by_population).\n\nIt is interested to remember the proportion in this plot and compare it with female proportion between data scientists in each country we will examine below.","e4a64117":"# Gender proportion in data science worldwide and in Russia\n\n## Female focus declaration\n\nA few survey participants selected not to say their gender identity or prefer self-describing rather then male\/female choice (see table \"Gender proportion\" below). In this study I leave such participants outside of analysis scope. ","c9a14de1":"# Dataset description\n\nIt is the third time Kaggle conducted the survey conducted among its users. \n\nIt cannot be said that data scientists from all over the world are represented equally: the largest number of participants are from India (24.27%), the second choice is United States of America (15.65%). My home country, Russia, is represented by 3.17% participants (see table \"Survey participants proportion per country, top-5\" below). You can reasonably ask if it is enough sample for comparison.\n\nIn Russia, we haven't a big tradition for answering online survey and usually response rate in online public opinion surveys is low. But it is higher for surveys in professional groups with high group loyalty (and I believe it can be said about data scientists) and especially higher for women rather then men. So theoretically we can find more women than really there are between kaggler. And we can expect that the country proportion is close to real one. Though it is naive theory in some way, we haven't better data for now.","d84a9352":"# Gender salary gap\n\nThe first reasonable question should be if it is really exists. It is easy to check with plotting absolute difference for each salary group for men and women in data science. In case of my study I chose to recode salary categories from original surveys. I must admit that there is no scientific basis behind this (but I hope that one day there will be fresh open data for data scientists' salaries in Russsia). In recoding I relied on my knowledge of the professional field and a rough ideas of the distribution of salaries depending on work experience and skills.\n\nIt is interesting to know that no Russian female data scientist mentioned year compansation more $70 000 though we can't discuss the real reasons for such absence (and I don't wont to speculate).\n\nAs you can see on plot \"Differences in salary for Russian kagglers\" below the salary gap definitely  exists. After test for statistical significance we can say that definitely there are lower and middle paid data scientists between women and men are more likely to be paid better. ","c26361b9":"Can we find any reasons for salary gap?\n\nFirst idea is differences in work experience in general and maybe in educational level in particular. We have already seen that women in Russian data science is more often younger. Maybe, they are just young professionals and that's why are less paid?\n\nMale data scientists seem to have master and professional degrees more often. Though the difference in numbers of kaggler with doctoral degree looks promising, it doesn't pass test for statistical significance in differences. ","00ca1f7e":"# Conclusions\n\n1. Russian Kaggle community has fewer percentage of women members than there are among kagglers worldwide. It is less at least on 1.53% in comparison with general data set.\n2. There is a salary gap connected with gender. \n3. There are several reasons which could explain salary gap (and some theories we can't test for now). Firstly, women from Russia in Kaggle seems to be younger than Russian male data scientists. Secondly, often they aren't professional data scientists, so their professional salary grades can be generally lower. Thirdly, female kagglers from Russia have the lack of coding experience in comparison with their male collegues.\n\nSo I can't say that in this data set we can find evidences for real gender inequality. But still there are just few female data scientists and there is a great opportunity to encourage more women in my home country to try to join the field.","161721e5":"* * *\n\n**Statistical note**: *Although for edication level and in next questions tests do not find a statistically significant difference in the size of the groups \u2014 it cannot be said that there are no difference for sure. Based on the value of p-value we can't reject our null hypothesis \u2014 but it does not mean automatically that null hypothesis about \"no difference\" is true.*\n\n* * *\n\nCan it be that female kaggler are students for now and haven't yet finished their master thesis? \n\nLet's look for job role reported in the survey by men and women from Russia at the 'Differences in job role for Russian kagglers' plot below. We can see vizual differences but can't speak about it from statistical point of view. It has some answers but gives us new questions. Female kagglers aren't data scientists for their job title but more often are research scientists.","9debda52":"It is interesting that in category \"30-34 years\" there are less women than in other age groups. Female data scientists from Russia seems to be more often younger than their male colleagues. ","84e4ef65":"The strange thing is that if we look backwards and compare the gender proportion with 2017-2018 surveys \u2014 we find out that number of Russian female kagglers has decreased.","6ef84bc3":"Unfortunately, in the Russian subset, only a few respondents satisfied the condition for questions about programming languages or ML algorithms they use on a regular basis. So we can't analyze them. I hope in future surveys there will be more data, and we can study regional specifics.","c7f94099":"On the plot \"Modal salary categories for job roles\" below it is shown that Russian data scientists actually have better salaries in comparison to research scientist. There is lack of data for Russian specialist, and it can be a reason for other job titles to have bimodal distribution for salaries. So the general trend is easier to see in worldwide part of plot.","0a5d5652":"I suppose that the one of the important reasons for salary gap could be the difference in coding experience as we can see below on the plot 'Differences in coding experience for Russian kagglers'.","57f52bf1":"# Study Objective\n\nIt is said as common knowledge in all blogs and social medias that there are few women in IT field generally and in data science in particular. We can suppose that if the problem with gender diversity in this field really exists it can have regional traits based on cultural background for country. Usually it is asked in interviews and you can find a lot of expert (but personal) opinion about gender diversity and usually experts are skeptical. \"We did a lot but more should be done\", they sat. But does the real proofs to this opinion exist? I'm actually interested in situation for my home country, Russia.\n\nSo study questions are:\n> \n> ### Does gender diversity in Russian data science differ in any ways from gender diversity in data science worldwide?\n\n> ### Does any inequality based in gender exist between female and male data scientist in Russia?\n\nAs data scientist and women myself I supposed that research this questions from statistical and analytical point of view will by my honor and duty (to declare in some ironic sense;  actually, it's just fun to study something we talk a lot with data and numbers). Such worldwide initiatives to inspire women to learn python and machine learning as PyLadies and Women in Machine Learning (also known as WiDS) are taking places in Russia too. One of large data science conferences in Russia, DataFest, also has WiDS workshops in its schedule. \n\nBut how effective it is? And does it matter at all?"}}