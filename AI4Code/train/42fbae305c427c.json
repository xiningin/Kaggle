{"cell_type":{"ff62fb35":"code","d26a0ed1":"code","f08027a5":"code","2649d70f":"code","96714344":"code","ca901343":"code","48bf57ee":"code","d46d991f":"code","09b480b2":"code","107fd0c3":"code","920934c7":"code","ebbb4b86":"code","67bf5dc9":"code","3ab5c1d5":"markdown","ef79a036":"markdown","bab80080":"markdown","c74edb3f":"markdown","8751d20b":"markdown","db70c79e":"markdown"},"source":{"ff62fb35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n!pip install chart_studio","d26a0ed1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\nplt.style.use('ggplot')\n\nimport cufflinks as cf\nimport plotly.express as px\nimport plotly.offline as py\nfrom plotly.offline import plot\nimport plotly.graph_objs as go","f08027a5":"url = \"..\/input\/government-responses-in-covid19-coronanet\/coronanet_release.csv\"\ndf = pd.read_csv(url)\n\ndf.head()","2649d70f":"#Dropping some useless columns\ndf = df.drop([\"record_id\", \"policy_id\", \"ISO_A3\", \"target_who_what\", \"link\", \"recorded_date\", \"domestic_policy\"], axis=1)\ndf.info()","96714344":"#How many null values ?\ndf.isnull().sum()","ca901343":"#Dropping columns with more than 10% of null values\nfor col in df.columns:\n    if df[col].isnull().mean()*100 > 10:\n        df = df.drop([col], axis=1)\n        \ndf.isnull().sum()","48bf57ee":"df.head()","d46d991f":"#Graph : Correct types by count\nfig = px.bar(df[\"correct_type\"].value_counts(), orientation=\"v\", color=df[\"correct_type\"].value_counts(), color_continuous_scale=px.colors.sequential.Plasma, \n             log_x=False, labels={'value':'Count', \n                                'index':'Correcty type',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Correcty type by count\"\n)\n\nfig.show()","09b480b2":"#Graph : Entry types by count\nfig = px.bar(df[\"entry_type\"].value_counts(), orientation=\"v\", color=df[\"entry_type\"].value_counts(), color_continuous_scale=px.colors.sequential.Plasma, \n             log_x=False, labels={'value':'Count', \n                                'index':'Entry type',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Entry type by count\"\n)\n\nfig.show()","107fd0c3":"#Graph : Ten first countries by count\nfig = px.bar(df[\"country\"].value_counts()[0:20], orientation=\"v\", color=df[\"country\"].value_counts()[0:20], color_continuous_scale=px.colors.sequential.Plasma, \n             log_x=False, labels={'value':'Count', \n                                'index':'Country',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Twenty first country by count\"\n)\n\nfig.show()","920934c7":"#Graph : Twenty last countries by count\nfig = px.bar(df[\"country\"].value_counts()[-21:-1], orientation=\"v\", color=df[\"country\"].value_counts()[-21:-1], color_continuous_scale=px.colors.sequential.Plasma, \n             log_x=False, labels={'value':'Count', \n                                'index':'Country',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Twenty last country by count\"\n)\n\nfig.show()","ebbb4b86":"#Graph : Init country levels by count\nfig = px.bar(df[\"init_country_level\"].value_counts(), orientation=\"v\", color=df[\"init_country_level\"].value_counts(), color_continuous_scale=px.colors.sequential.Plasma, \n             log_y=True, labels={'value':'Count', \n                                'index':'Country',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Init country levels by count by count\"\n)\n\nfig.show()","67bf5dc9":"#Graph : Ten first enforcers by count\nfig = px.bar(df[\"enforcer\"].value_counts()[0:10], orientation=\"v\", color=df[\"enforcer\"].value_counts()[0:10], color_continuous_scale=px.colors.sequential.Plasma, \n             log_x=False, labels={'value':'Count', \n                                'index':'Country',\n                                 'color':'None'\n                                })\n\nfig.update_layout(\n    font_color=\"black\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"green\",\n    title_text=\"Enforcer by count\"\n)\n\nfig.show()","3ab5c1d5":"## Import librairies \ud83d\udcda","ef79a036":"### [](http:\/\/)So, as we can see, more than 75% of entry are \"New_entry\" and USA uis the first country in responses. Opposite of, Jersey is the last country in responses about COVID-19. At least, in most of cases, the responses come from National and State government. Moreover, we have practically the same number of national and provincial initial responses.","bab80080":"### So, we have more original contents than correction contents - 33 226 vs 3912 ","c74edb3f":"## Reading Data \ud83d\udcdd","8751d20b":"If you liked it, don't forget to upvote please ! :D\n\n**More incoming ..**.","db70c79e":"## Graphics & Co \ud83d\udcca"}}