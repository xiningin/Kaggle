{"cell_type":{"980b2dee":"code","31a9c7a7":"code","257098e0":"code","aa1c7218":"code","e80e9f4d":"code","1dcd0b8d":"code","2d95f3ac":"code","5198a43a":"code","e9635781":"code","eb79b967":"code","3d5964a6":"code","bc0db773":"code","9901450f":"code","32d0d1a9":"code","14c14735":"code","eb591b27":"code","0d55bef3":"code","fa6482f2":"code","e084cd69":"code","c6cd987a":"code","048b79b7":"code","f0567e1a":"code","c3959e67":"code","6ce4632f":"code","f7f98c37":"code","758f7b9b":"code","b8bebd0e":"code","59469728":"code","48a25d99":"code","2cff0928":"code","1867df7f":"code","655ec01f":"code","137b7a75":"code","5f1590e9":"code","b800c9b4":"code","886f1ff4":"code","7b9a36c3":"code","1d617696":"code","626d3fc4":"code","09cb8f97":"code","6567a322":"code","7e9b2bd9":"code","881453b3":"code","0baea1ef":"code","5a8ec292":"code","b8a57374":"code","e275d4b9":"code","96f315d5":"code","d91ba87a":"code","335e42db":"code","f6a37054":"code","9ee409a9":"code","bcb97cc9":"code","130c671c":"code","98075738":"code","8376d6c8":"code","92dac5f2":"code","d83224ac":"code","b4702be6":"code","9841e402":"code","a84a122b":"code","c8f84f9e":"code","7dcea9b1":"markdown","2d477afa":"markdown","771bf114":"markdown","5f3492cc":"markdown","b51c530d":"markdown","34fc255e":"markdown","20fa6d86":"markdown","f3f3efe8":"markdown","64e196e0":"markdown","693390bc":"markdown","723a61e4":"markdown","61b0ed68":"markdown","3b3dc9f0":"markdown","2f4155d2":"markdown","b95ad4f1":"markdown","3e59c00d":"markdown","24fd4fb8":"markdown","f75ab6fe":"markdown","f484e279":"markdown","01cb2d81":"markdown","2d73cfff":"markdown","8dc54ac9":"markdown","aacc3457":"markdown","1125fc04":"markdown","f47ff76b":"markdown","74add938":"markdown","c9eeddd7":"markdown","64406933":"markdown","a8c12735":"markdown","e70d676c":"markdown","821a1254":"markdown","b204b51f":"markdown","d4436677":"markdown","6f7faa0a":"markdown","e3c20369":"markdown","91fe9ea9":"markdown","8a981d42":"markdown","52cf1fda":"markdown","5bf46762":"markdown","d5889ff9":"markdown","3930f3a4":"markdown","d8760a5e":"markdown","8f6eac3b":"markdown","5416b37e":"markdown","de64a9f7":"markdown","01cf2794":"markdown","23e636e0":"markdown","287637db":"markdown","92bb9c94":"markdown","9bf00db6":"markdown","ea154991":"markdown","0f6aa22b":"markdown","77a0dc51":"markdown","a0d0c9a6":"markdown","bb707fd8":"markdown","b96399e6":"markdown","68407e37":"markdown","1745f35f":"markdown","0e7ae1d4":"markdown","78d475de":"markdown","5e667353":"markdown","168211d0":"markdown","21aa34a9":"markdown","193d896f":"markdown","90f3250e":"markdown","de374f26":"markdown","525cc1c8":"markdown"},"source":{"980b2dee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n\n# ignore warnings :\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# for visualizations\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# to visualize missing data\nimport missingno as msno\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","31a9c7a7":"# adjust figure size\nplt.rcParams['figure.figsize'] = (12,8)","257098e0":"# check execution time\n%time\n\n\n# import data\ndf = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","aa1c7218":"# shape of the data\ndf.shape","e80e9f4d":"# preview dataset\ndf.head()","1dcd0b8d":"# view column names\ndf.columns","2d95f3ac":"# drop redundant columns\ndf.drop('Unnamed: 0', axis=1, inplace=True)","5198a43a":"# view dataframe summary\ndf.info()","e9635781":"# check for missing values\ndf.isnull().sum()","eb79b967":"# fill missing values for continuous variables for proper data visualization\ndf['ShortPassing'].fillna(df['ShortPassing'].mean(), inplace = True)\ndf['Volleys'].fillna(df['Volleys'].mean(), inplace = True)\ndf['Dribbling'].fillna(df['Dribbling'].mean(), inplace = True)\ndf['Curve'].fillna(df['Curve'].mean(), inplace = True)\ndf['FKAccuracy'].fillna(df['FKAccuracy'], inplace = True)\ndf['LongPassing'].fillna(df['LongPassing'].mean(), inplace = True)\ndf['BallControl'].fillna(df['BallControl'].mean(), inplace = True)\ndf['HeadingAccuracy'].fillna(df['HeadingAccuracy'].mean(), inplace = True)\ndf['Finishing'].fillna(df['Finishing'].mean(), inplace = True)\ndf['Crossing'].fillna(df['Crossing'].mean(), inplace = True)\ndf['Weight'].fillna('200lbs', inplace = True)\ndf['Contract Valid Until'].fillna(2019, inplace = True)\ndf['Height'].fillna(\"5'11\", inplace = True)\ndf['Loaned From'].fillna('None', inplace = True)\ndf['Joined'].fillna('Jul 1, 2018', inplace = True)\ndf['Jersey Number'].fillna(8, inplace = True)\ndf['Body Type'].fillna('Normal', inplace = True)\ndf['Position'].fillna('ST', inplace = True)\ndf['Club'].fillna('No Club', inplace = True)\ndf['Work Rate'].fillna('Medium\/ Medium', inplace = True)\ndf['Skill Moves'].fillna(df['Skill Moves'].median(), inplace = True)\ndf['Weak Foot'].fillna(3, inplace = True)\ndf['Preferred Foot'].fillna('Right', inplace = True)\ndf['International Reputation'].fillna(1, inplace = True)\ndf['Wage'].fillna('\u20ac200K', inplace = True)\n\n","3d5964a6":"df.fillna(0, inplace = True)","bc0db773":"def country(x):\n    return df[df['Nationality'] == x].head()\n\n\n# prepare dataset for Indian players\ncountry('India')","9901450f":"df['Preferred Foot'].value_counts()","32d0d1a9":"plt.figure(figsize=(8,6))\nsns.countplot(df['Preferred Foot'], palette = 'bone')\nplt.title('Preferred Foot of the Players', fontsize = 20)\nplt.show()","14c14735":"fig, ax = plt.subplots(figsize=(8,6))\ngraph = sns.countplot(ax=ax,x=df['Preferred Foot'], data=df, palette = 'bone')\ngraph.set_title('Preferred Foot of the Players', fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","eb591b27":"df['Preferred Foot'].value_counts()\/len(df)","0d55bef3":"labels = df['Preferred Foot'].value_counts().index\nsize = df['Preferred Foot'].value_counts()\ncolors=['cyan','pink']\nplt.pie(size, labels = labels, colors = colors, shadow = True, autopct='%1.1f%%',startangle = 90)\nplt.title('Distribution of Preferred Foot among players', fontsize = 20)\nplt.legend()\nplt.show()","fa6482f2":"df['Weak Foot'].value_counts()","e084cd69":"labels = df['Weak Foot'].value_counts().index\nsize = df['Weak Foot'].value_counts()\ncolors=['cyan','pink','orange','lightgreen','yellow']\nexplode = [0, 0.1, 0.1, 0, 0]\nplt.pie(size, labels = labels, colors = colors, explode = explode, shadow = True, autopct='%1.1f%%',startangle = 90)\nplt.title('Distribution of Weak Foot among players', fontsize = 20)\nplt.legend()\nplt.show()","c6cd987a":"x = df['Age']\nplt.figure(figsize=(18,10))\nax = sns.countplot(x, color='g')\nax.set_xlabel(xlabel = 'Age of the Players', fontsize = 16)\nax.set_title(label = 'Distribution of Age of the Players', fontsize = 20)\nplt.show()","048b79b7":"x = df['Age']\nplt.figure(figsize = (12, 8))\nplt.style.use('ggplot')\nax = sns.distplot(x, bins = 20, kde = True, color='g')\nax.set_xlabel(xlabel = 'Age of the Players', fontsize = 16)\nax.set_title(label = 'Histogram for Age distribution of Players', fontsize = 20)\nplt.show()\n\n","f0567e1a":"df['International Reputation'].value_counts()","c3959e67":"plt.figure(figsize=(12,10))\nsns.countplot(df['International Reputation'], palette = 'husl')\nplt.title('International Reputation of the Players', fontsize = 20)\nplt.show()","6ce4632f":"labels = df['International Reputation'].value_counts().index\nsize = df['International Reputation'].value_counts()\nexplode = [0, 0.1, 0.1, 0, 0]\nplt.pie(size, labels = labels, explode = explode, shadow = True, autopct='%1.1f%%',startangle = 90)\nplt.title('Distribution of International Reputation of players', fontsize = 20)\nplt.legend()\nplt.show()","f7f98c37":"df.groupby('Preferred Foot')['International Reputation'].value_counts()","758f7b9b":"plt.figure(figsize=(12,10))\nsns.countplot(df['International Reputation'], hue=df['Preferred Foot'], palette = 'husl')\nplt.title('International Reputation of Left and Right Footed Players ', fontsize = 20)\nplt.show()","b8bebd0e":"df['Work Rate'].value_counts()","59469728":"fig, ax = plt.subplots(figsize=(12,8))\ngraph = sns.countplot(ax=ax,x=df['Work Rate'], data=df, palette = 'PuBuGn_d')\ngraph.set_title('Work Rate of the Players', fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","48a25d99":"labels = df['Work Rate'].value_counts().index\nsize = df['Work Rate'].value_counts()\nexplode = [0,0,0.1,0,0.1,0,0,0,0]\nplt.pie(size, labels = labels, explode = explode, shadow = True, autopct='%1.1f%%',startangle = 90)\nplt.title('Distribution of Work Rate of players', fontsize = 20)\nplt.legend()\nplt.show()","2cff0928":"fig, ax = plt.subplots(figsize=(12,8))\ngraph = sns.countplot(ax=ax,x=df['Work Rate'], data=df, hue='Preferred Foot', palette = 'PuBuGn_d')\ngraph.set_title('Work Rate of Players segregated by Preferred Foot'  , fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","1867df7f":"df['Skill Moves'].value_counts()","655ec01f":"fig, ax = plt.subplots(figsize=(12,8))\ngraph = sns.countplot(ax=ax,x=df['Skill Moves'], data=df, palette = 'PuBuGn_d')\ngraph.set_title('Skill Moves of the Players', fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","137b7a75":"fig, ax = plt.subplots(figsize=(12,8))\ngraph = sns.countplot(ax=ax,x=df['Skill Moves'], data=df, hue='Preferred Foot', palette = 'PuBuGn_d')\ngraph.set_title('Skill Moves of Players segregated by Preferred Foot'  , fontsize = 20)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation=30)\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","5f1590e9":"x = df['Special']\nplt.figure(figsize=(18,10))\nax = sns.distplot(x)\nax.set_xlabel(xlabel = \"Player's Special Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of Players', fontsize = 16)\nax.set_title(label = 'Distribution of Players Special Scores', fontsize = 20)\nplt.show()","b800c9b4":"x = df['Potential']\nplt.figure(figsize=(18,10))\nax = sns.countplot(x, color='g')\nax.set_xlabel(xlabel = \"Player's Potential Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of Players', fontsize = 16)\nax.set_title(label = 'Distribution of Players Potential Scores', fontsize = 20)\nplt.show()","886f1ff4":"x = df['Overall']\nplt.figure(figsize=(18,10))\nax = sns.countplot(x, palette='rocket')\nax.set_xlabel(xlabel = \"Player's Overall Scores\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of Players', fontsize = 16)\nax.set_title(label = 'Distribution of Players Overall Scores', fontsize = 20)\nplt.show()","7b9a36c3":"df['Position'].value_counts()","1d617696":"# different positions acquired by the players \n\nplt.figure(figsize = (18, 8))\nplt.style.use('ggplot')\nax = sns.countplot('Position', data = df, palette = 'PuBuGn_d')\nax.set_xlabel(xlabel = 'Positions in Football', fontsize = 16)\nax.set_ylabel(ylabel = 'Number of Players', fontsize = 16)\nax.set_title(label = 'Count of Players with Positions', fontsize = 20)   \nplt.show()\n","626d3fc4":"df['Nationality'].nunique()","09cb8f97":"df['Nationality'].unique()","6567a322":"top_countries = df['Nationality'].value_counts().head(10)\n\ntop_countries","7e9b2bd9":"fig, ax = plt.subplots(figsize=(12,8))\nx = top_countries.values\ny = top_countries.index\nax.barh(y, x, align='center', color='green')\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('Number of Players')\nax.set_ylabel('Name of Countries', rotation=0)\nax.set_title('Top 10 Countries with most number of players')\nplt.show()\n","881453b3":"top_countries_name = top_countries.index\n\ntop_countries_name","0baea1ef":"df_country_age = df.loc[df['Nationality'].isin(top_countries_name) & df['Age']]\nplt.figure(1 , figsize = (12,6))\nsns.boxplot(x = 'Nationality' , y = 'Age' , data = df_country_age, palette='rocket')\nplt.title('Age Distribution in top countries')\nplt.xticks(rotation = 50)\nplt.show()","5a8ec292":"df_country_rating = df.loc[df['Nationality'].isin(top_countries_name) & df['Overall']]\nplt.figure(1 , figsize = (12,6))\nsns.barplot(x = 'Nationality' , y = 'Overall' , data = df_country_rating, palette='spring')\nplt.title('Overall Rating Distribution of Players in top countries')\nplt.xticks(rotation = 50)\nplt.show()","b8a57374":"df_country_rating = df.loc[df['Nationality'].isin(top_countries_name) & df['Potential']]\nplt.figure(1 , figsize = (12,6))\nsns.barplot(x = 'Nationality' , y = 'Potential' , data = df_country_rating, palette='PuBuGn_d')\nplt.title('Potential Rating Distribution of Players in top countries')\nplt.xticks(rotation = 50)\nplt.show()","e275d4b9":"df['Club'].nunique()","96f315d5":"df['Club'].unique()","d91ba87a":"clubs = ['FC Barcelona','Real Madrid','Juventus','Liverpool','Manchester United',\n         'Chelsea','Arsenal','Paris Saint-Germain' ,'FC Bayern M\u00fcnchen','Manchester City']","335e42db":"df_club_age = df.loc[df['Club'].isin(clubs) & df['Age']]\nplt.figure(1 , figsize = (12,6))\nsns.boxplot(x = 'Club', y = 'Age' , data = df_club_age, palette='spring')\nplt.title('Age Distribution in famous clubs')\nplt.xticks(rotation = 50)\nplt.show()","f6a37054":"df_club_rating = df.loc[df['Club'].isin(clubs) & df['Overall']]\nplt.figure(1 , figsize = (12,6))\nsns.boxplot(x = 'Club' , y = 'Overall' , data = df_club_rating, palette='PuBuGn_d')\nplt.title('Overall Rating Distribution in famous clubs')\nplt.xticks(rotation = 50)\nplt.show()","9ee409a9":"best_dict = {}\nfor club in df['Club'].unique():\n    overall_rating = df['Overall'][df['Club'] == club].sum()\n    best_dict[club] = overall_rating\nbest_club = pd.DataFrame.from_dict(best_dict, orient='index', columns = ['overall'])\nbest_club['club'] = best_club.index\nbest_club = best_club.sort_values(by = 'overall', ascending =  False)\n\nplt.figure(1 , figsize = (15 , 6))\nsns.barplot(x ='club',y ='overall',data = best_club.head(10),palette='Reds')  \nplt.xticks(rotation = 70)\nplt.xlabel(\"Club\")\nplt.ylabel('Sum of Overall Rating of players in club')\nplt.title('Clubs with best Players (sum of overall ratings of players per club)')\nplt.ylim(2450 , 2600)\nplt.show()","bcb97cc9":"df_best_players = pd.DataFrame.copy(df.sort_values(by ='Overall',ascending = False ).head(10))\nplt.figure(1,figsize = (12,6))\nsns.barplot(x ='Name' , y = 'Overall' , data = df_best_players, palette='PuBuGn_d')\nplt.ylim(85,95)\nplt.show()","130c671c":"def normalizing_wage(x):\n    if '\u20ac' in str(x) and 'M' in str(x):\n        c = str(x).replace('\u20ac' , '')\n        c = str(c).replace('M' , '')\n        c = float(c) * 1000000\n\n    else:\n        c = str(x).replace('\u20ac' , '')\n        c = str(c).replace('K' , '')\n        c = float(c) * 1000\n\n    return c\n\ndf['Normalized_Wage'] = df['Wage'].apply(lambda x : normalizing_wage(x))\ndf.sort_values(by = 'Normalized_Wage' , ascending = False)[['Name','Club','Nationality','Overall',\n'Age','Normalized_Wage','Wage']].head(5)","98075738":"df.sort_values(by = 'Age' , ascending = False)[['Name','Club','Nationality','Overall', 'Age' ]].head()","8376d6c8":"df.sort_values(by = 'Age' , ascending = True)[['Name','Club','Nationality','Overall', 'Age' ]].head()","92dac5f2":"df.sort_values(by = 'FKAccuracy' , ascending = False)[['Name','Club','Nationality','Age','FKAccuracy']].head()","d83224ac":"df.sort_values(by = 'Penalties' , ascending = False)[['Name','Club','Nationality','Age','Penalties']].head()","b4702be6":"df.sort_values(by = 'BallControl' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','BallControl']].head()","9841e402":"df.sort_values(by = 'SprintSpeed' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','SprintSpeed']].head()","a84a122b":"df.sort_values(by = 'Dribbling' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','Dribbling']].head()","c8f84f9e":"df.sort_values(by = 'Finishing' , ascending = False)[['Name','Club','Nationality','Overall', 'Age','Finishing']].head()","7dcea9b1":"## **Visualize International Reputation**\n\n\nQ. How can we track international reputation of players.\n\nA. We can track international reputation of players as follows -","2d477afa":"### **The Best Penalty Kick Taker**\n\nQ. Who are the best penalty kick takers?\n\nA. The best penalty kick takers are given by -","771bf114":"## **Distribution of weak foot**\n\n\nQ. What is the distribution of weak foot ?\n\nA. The distribution of weak foot can be obtained as follows -","5f3492cc":"Q. What is the distribution of Overall Score of Players from top countries?\n\nA. We can draw a barplot to check the distribution of Overall Score of Players from top countries as follows -","b51c530d":"[Go to Top](#0)","34fc255e":"- We can visualize the work rate of the players as follows -","20fa6d86":"## **Distribution of preferred foot**\n\n\nQ. What is the distribution of preferred foot ?\n\nA. The distribution of preferred foot can be obtained as follows -","f3f3efe8":"## **Skill Moves of the Players**\n\n\nQ. What is the different skill moves of the players?\n\nA. The different work rate of the players can be given as follows -","64e196e0":"## **Overall Rating in famous clubs**","693390bc":"- The above countplot is great but it does not show up the exact number of players on top of the bar. To show the exact numbers we can proceed as follows-","723a61e4":"- Now the above countplots are great but they do not show up the exact percentages of players. We can show the exact percentages of players as follows-","61b0ed68":"## **The Best Clubs with Players Overall Rating**","3b3dc9f0":"**Please <font color=\"red\"><b>UPVOTE<\/b><\/font> this kernel, if you find it useful**\n \n","2f4155d2":"Q. What is the international reputation of left and right footed players?\n\nA. The international reputation of left and right footed players can be given as follows -","b95ad4f1":"So, Juventus has the best rating of the players.","3e59c00d":"## **Special Score of the Players**\n\n\nQ. How can we visualize special score of the players?\n\nA. The special score of the players can be visualized with histogram as follows -","24fd4fb8":"## **Potential Score of the Players**\n\n\nQ. How can we visualize potential score of the players?\n\nA. The potential score of the players can be visualized with histogram as follows -","f75ab6fe":"# **1. Introduction to FIFA 19 complete player dataset** <a class=\"anchor\" id=\"1\"><\/a>\n\n[Table of Contents](#0.1)\n\n\n- The dataset includes lastest edition FIFA 2019 players attributes which are as follows - \n\n  - Age, Nationality, Overall, Potential, Club, Value, Wage, Preferred Foot, International Reputation, Weak Foot, Skill Moves, Work Rate, Position, Jersey Number, Joined, Loaned From, Contract Valid Until, Height, Weight, LS, ST, RS, LW, LF, CF, RF, RW, LAM, CAM, RAM, LM, LCM, CM, RCM, RM, LWB, LDM, CDM, RDM, RWB, LB, LCB, CB, RCB, RB, Crossing, Finishing, Heading, Accuracy, ShortPassing, Volleys, Dribbling, Curve, FKAccuracy, LongPassing, BallControl, Acceleration, SprintSpeed, Agility, Reactions, Balance, ShotPower, Jumping, Stamina, Strength, LongShots, Aggression, Interceptions, Positioning, Vision, Penalties, Composure, Marking, StandingTackle, SlidingTackle, GKDiving, GKHandling, GKKicking, GKPositioning, GKReflexes, and Release Clause.\n\n","f484e279":"# **3. Read dataset** <a class=\"anchor\" id=\"3\"><\/a>\n[Table of Contents](#0.1)\n","01cb2d81":"## **The Best Players**\n\n\nQ. Who are the 10 best players?\n\nA. The 10 best players are-","2d73cfff":"Q. How can we visualze skill moves of players segregated by preferred foot?\n\nA. We can visualize skill moves of players segregated by preferred foot as follows-","8dc54ac9":"Q. Which are top 10 countries with most number of players?\n\nA. The top 10 countries with most number of players are as follows -","aacc3457":"## **Age distribution in famous clubs**","1125fc04":"Q. What is the distribution of Potential Score of Players from top countries?\n\nA. We can draw a barplot to check the distribution of Potential Score of Players from top countries as follows -","f47ff76b":"## **Overall Score of the Players**\n\n\nQ. How can we visualize overall score of the players?\n\nA. The overall score of the players can be visualized with histogram as follows -","74add938":"- We can visualize distribution of Weak foot as follows -","c9eeddd7":"## **The Highest Earners**\n\n\nQ. Who are the highest earners?\n\nA. The highest earners are as follows-","64406933":"# **6. Data Visualization** <a class=\"anchor\" id=\"6\"><\/a>\n\n[Table of Contents](#0.1)","a8c12735":"- We can use a pie chart to visualize the exact percentages.","e70d676c":"# **11. References** <a class=\"anchor\" id=\"11\"><\/a>\n\n[Table of Contents](#0.1)\n\n\n\n- https:\/\/matplotlib.org\/gallery.html","821a1254":"Q. How many clubs are there?","b204b51f":"Q. What are some popular clubs?","d4436677":"So, Germany, England and Netherlands have youngest set of players and Argentian and Brazil have eldest set of players.","6f7faa0a":"### **Best players with the Ball Control**\n\n\nQ, Who are the best players with the ball control?\n\nA. The best players with the ball control are given by-","e3c20369":"## **Age distribution from top countries**\n\n\nQ. What is the age distribution from top countries?\n\nA. We can draw a box plot to check the age distribution from top countries.","91fe9ea9":"So, Juventus has the eldest set of players and Real Madrid and Liverpool has youngest set of players.","8a981d42":"Q. Which countries are there in the dataset?\n\nA. The names of countries are as follows -","52cf1fda":"# **2. Import libraries** <a class=\"anchor\" id=\"2\"><\/a>\n\n[Table of Contents](#0.1)\n","5bf46762":"# **10. Data Analysis** <a class=\"anchor\" id=\"10\"><\/a>\n\n[Table of Contents](#0.1)\n\n- In this section, we will answer few common questions.","d5889ff9":"### **The Best Dribbler**\n\n\nQ. Who is the best dribbler?\n\nA. The best dribbler is-","3930f3a4":"Q. How can we visualize the age distribution of players.\n\nA. We can use a histogram to visualize the age distribution of players.","d8760a5e":"<a class=\"anchor\" id=\"0.1\"><\/a>\n# **Table of Contents** \n\n1.\t[Introduction to FIFA 19 complete player dataset](#1)\n2.\t[Import libraries](#2)\n3.\t[Read dataset](#3)\n4.  [Data Exploration](#4)\n5.  [Segregation of Indian Players](#5)\n6.  [Data Visualization](#6)\n7.  [Analyse players based on Nationality](#7)\n8.  [Analyse players based on Club](#8)\n9.  [Profiling top players](#9)\n10. [Data Analysis](#10)\n11. [References](#11)\n\n","8f6eac3b":"## **Potential Rating**","5416b37e":"- We can see that there are 18207 rows and 89 columns in the dataset.","de64a9f7":"### **The Best Finisher**\n\n\nQ. Who is the best finisher?\n\nA. The best finisher is-","01cf2794":"- We can visualize the skill moves of the players as follows-","23e636e0":"![FIFA 19 Data Visualization](https:\/\/media.gamestop.com\/i\/gamestop\/10164242\/FIFA-19-Champions-Edition?$zoom$)","287637db":"# **9. Profiling top players** <a class=\"anchor\" id=\"9\"><\/a>\n[Table of Contents](#0.1)","92bb9c94":"## **Work Rate of the Players**\n\n\nQ. What is the different work rate of the players?\n\nA. The different work rate of the players can be given as follows -","9bf00db6":"### **The Eldest Players**\n\n\nQ. Who are the top 10 eldest players?\n\nA. The top 10 eldest players are given by -\n\n","ea154991":"# **5. Segregation of Indian Players** <a class=\"anchor\" id=\"5\"><\/a>\n\n[Table of Contents](#0.1)","0f6aa22b":"## **Overall Rating**","77a0dc51":"# **8. Analyse players based on club** <a class=\"anchor\" id=\"8\"><\/a>\n[Table of Contents](#0.1)","a0d0c9a6":"### **Fastest Players**\n\nQ. Who are the fastest players on the planet?\n\nA. The fastest players on the planet are -","bb707fd8":"## **Count of Players with Positions**\n\n\nQ. What is the number of players at different positions?\n\nA. The number of players at different positions can be found as follows - ","b96399e6":"# **4. Data Exploration** <a class=\"anchor\" id=\"4\"><\/a>\n[Table of Contents](#0.1)\n\n- Now, let's begin data exploration to gain insights about our data.","68407e37":"## **Age distribution of players**","1745f35f":"- Please see [Seaborn Color Palettes](https:\/\/seaborn.pydata.org\/tutorial\/color_palettes.html) for more information on Seaborn Color Palettes.","0e7ae1d4":"### **The Best Freekick Takers**\n\nQ. Who are the best free-kick takers?\n\nA. The best free-kick takers are given by-\n","78d475de":"- We can visualize number of players at different positions as follows -","5e667353":"Q. How can we visualze work rate of players segregated by preferred foot?\n\nA. We can visualize work rate of players segregated by preferred foot as follows-","168211d0":"Q. What are the club names?","21aa34a9":"<a class=\"anchor\" id=\"0\"><\/a>\n# **Extensive Analysis and Visualization - FIFA19**\n\n\nHello friends,\n\n\nIn this notebook, I will demonstrate data visualizaton techniques using the **FIFA 19 complete player dataset**. I have prepared this notebook in the form of question answers.\n\nSo, let's get started.","193d896f":"# **7. Analyse players based on nationality** <a class=\"anchor\" id=\"7\"><\/a>\n\n[Table of Contents](#0.1)\n\n\nQ. How do we calculate number of countries?\n\n\nA. We can calculate number of countries as follows -\n","90f3250e":"### **The Youngest Players**\n\n\nQ. Who are the top 10 youngest players?\n\nA. The top 10 youngest players are given by -\n\n","de374f26":"- This kernel is inspired from Roshan Sharma's excellent work in his notebook - [FIFA Data Visualization](https:\/\/www.kaggle.com\/roshansharma\/fifa-data-visualization). I congratulate him on his work.\n\n- I have adapted few lines of code from his notebook.","525cc1c8":"- We can see that the dataset contain missing values."}}