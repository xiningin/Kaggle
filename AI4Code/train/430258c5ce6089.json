{"cell_type":{"95a50c2a":"code","1532744b":"code","461d6078":"code","7e694210":"code","c118f1fb":"code","22187660":"code","cec57620":"code","91a52638":"code","d332180b":"markdown","beff5802":"markdown","9df11842":"markdown","5c331769":"markdown","fb91f327":"markdown","dc29d95a":"markdown","6d3e8414":"markdown","d07c622d":"markdown","26e7bb65":"markdown","cf7901c4":"markdown","df3d2428":"markdown","46003278":"markdown","77698d75":"markdown","dfd9930a":"markdown"},"source":{"95a50c2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1532744b":"# Loading Libraries\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# Loading dataset and removing double quotation marks on column names\n\nrm_quote = lambda x: x.replace('\"', '')\n\npollution_raw_df = pd.read_csv(\"\/kaggle\/input\/world-cities-air-quality-and-water-polution\/cities_air_quality_water_pollution.18-10-2021.csv\")\n\npollution_raw_df = pollution_raw_df.rename(columns=rm_quote)\n\npollution_raw_df = pollution_raw_df.rename(columns=lambda x: x.strip())\n\npollution_raw_df.info()","461d6078":"# Checking missing values:\n\nprint(pollution_raw_df.isna().sum())\n\n# Checking duplicated values:\n\nprint(pollution_raw_df.duplicated().sum())","7e694210":"# Dropping Region column\n\npollution_clean_df = pollution_raw_df.drop(columns = [\"Region\"])\n\n# Creating AirPollution column\n\ndef subtraction_100(x):\n    return 100 - x\n\npollution_clean_df[\"AirPollution\"] = pollution_clean_df['AirQuality'].apply(subtraction_100)\n\n# Creating WaterQuality column\n\npollution_clean_df[\"WaterQuality\"] = pollution_clean_df['WaterPollution'].apply(subtraction_100)\n\npollution_clean_df.head()","c118f1fb":"# Which country is the most polluted on average in terms of each air pollution and water pollution?\n\n# Air Pollution\n\naverage_air_pollution = pollution_clean_df.groupby(\"Country\", as_index=False).agg({\"AirPollution\":\"mean\"})\n\ntop_10_air_pollution = average_air_pollution.sort_values(\"AirPollution\", ascending = False).head(10)\n\n# Overall Avg. Air Pollution\noverall_avg_air_pol = average_air_pollution[\"AirPollution\"].mean()\n\nplt.figure(figsize = (10,6))\nsns.set_theme(style=\"whitegrid\")\ny = top_10_air_pollution[\"Country\"]\nax1 = sns.barplot(x = \"AirPollution\", y= y, data=top_10_air_pollution)\nax1.set_title(\"Top 10 Most Polluted Countries in Air Pollution\", fontweight=\"bold\")\nax1.axvline(x = overall_avg_air_pol, ymin = 0, ymax = 100, color = \"red\")\nax1.set_xlabel(\"Air Pollution\")\nax1.set_ylabel(\"\")\nax1.text(x = 50, y = 1.5, s = \"Overall Average:\\n{}\".format(round(overall_avg_air_pol, 2)), color = \"black\")\n\n# Water Pollution\n\naverage_water_pollution = pollution_clean_df.groupby(\"Country\", as_index=False).agg({\"WaterPollution\":\"mean\"})\n\ntop_10_water_pollution = average_water_pollution.sort_values(\"WaterPollution\", ascending = False).head(10)\n\n# Overall Avg. Water Pollution\noverall_avg_water_pol = average_water_pollution[\"WaterPollution\"].mean()\n\nplt.figure(figsize = (10,6))\nsns.set_theme(style=\"whitegrid\")\ny = top_10_water_pollution[\"Country\"]\nax2 = sns.barplot(x = \"WaterPollution\", y= y, data=top_10_water_pollution)\nax2.set_title(\"Top 10 Most Polluted Countries in Water Pollution\", fontweight=\"bold\")\nax2.axvline(x = overall_avg_water_pol, ymin = 0, ymax = 100, color = \"red\")\nax2.set_xlabel(\"Water Pollution\")\nax2.set_ylabel(\"\")\nax2.text(x = 57, y = 1.5, s = \"Overall Average:\\n{}\".format(round(overall_avg_water_pol, 2)), color = \"black\")\n","22187660":"# Which country is the cleanest on average in terms of each air quality and water quality?\n\n# Air Quality\n\naverage_air_quality = pollution_clean_df.groupby(\"Country\", as_index=False).agg({\"AirQuality\":\"mean\"})\n\ntop_10_air_quality = average_air_quality.sort_values(\"AirQuality\", ascending = False).head(10)\n\n# Overall Avg. Air Quality Score\noverall_avg_air_qual = average_air_quality[\"AirQuality\"].mean()\n\nplt.figure(figsize = (10,6))\nsns.set_theme(style=\"whitegrid\")\ny = top_10_air_quality[\"Country\"]\nax3 = sns.barplot(x = \"AirQuality\", y= y, data=top_10_air_quality)\nax3.set_title(\"Top 10 Cleanest Countries in Air Quality\", fontweight=\"bold\")\nax3.axvline(x = overall_avg_air_qual, ymin = 0, ymax = 100, color = \"red\")\nax3.set_xlabel(\"Air Quality Score\")\nax3.set_ylabel(\"\")\nax3.text(x = 55, y = 1.5, s = \"Overall Average:\\n{}\".format(round(overall_avg_air_qual, 2)), color = \"black\")\n\n# Water Quality\n\naverage_water_quality = pollution_clean_df.groupby(\"Country\", as_index=False).agg({\"WaterQuality\":\"mean\"})\n\ntop_10_water_quality = average_water_quality.sort_values(\"WaterQuality\", ascending = False).head(10)\n\n# Overall Avg. Water Quality Score\noverall_avg_water_qual = average_water_quality[\"WaterQuality\"].mean()\n\nplt.figure(figsize = (10,6))\nsns.set_theme(style=\"whitegrid\")\ny = top_10_water_quality[\"Country\"]\nax4 = sns.barplot(x = \"WaterQuality\", y= y, data=top_10_water_quality)\nax4.set_title(\"Top 10 Cleanest Countries in Water Quality\", fontweight=\"bold\")\nax4.axvline(x = overall_avg_water_qual, ymin = 0, ymax = 100, color = \"red\")\nax4.set_xlabel(\"Water Quality Score\")\nax4.set_ylabel(\"\")\nax4.text(x = 48, y = 1.5, s = \"Overall Average:\\n{}\".format(round(overall_avg_water_qual, 2)), color = \"black\")","cec57620":"# Creating boxplots to find outliers\n\naverage_quality_scores = pollution_clean_df.groupby(\"Country\", as_index=False).agg({\"AirQuality\":\"mean\", \"WaterQuality\":\"mean\"})\naverage_quality_scores_pivot = pd.melt(average_quality_scores, id_vars=['Country'], value_vars=['AirQuality', 'WaterQuality'], var_name='Quality_Types', value_name='Avg_Scores')\n\nplt.figure(figsize = (10,6))\nax5 = sns.boxplot(x = \"Quality_Types\", y = \"Avg_Scores\", data = average_quality_scores_pivot, hue = \"Quality_Types\")\nax5.set_title(\"Outliers: Air Quality vs. Water Quality\", fontweight=\"bold\")\nax5.set_xlabel(\"Quality Types\")\nax5.set_ylabel(\"Quality Score\")\nhandles, _ = ax5.get_legend_handles_labels()\nax5.legend(handles, [\"Air Quality\", \"Water Quality\"], loc = \"upper center\")\n","91a52638":"# Finding Linear Relationship\n\nfrom sklearn.linear_model import LinearRegression\n\nair_quality = np.array(average_quality_scores[\"AirQuality\"]).reshape(-1, 1)\nwater_quality = np.array(average_quality_scores[\"WaterQuality\"])\n\nlm = LinearRegression()\nlm.fit(air_quality, water_quality)\n\nprint(\"Intercept: {}\".format(round(lm.intercept_, 4)))\nprint(\"Coefficient: {}\".format(lm.coef_))\n\n\n# Creating LM plot with Seaborn\n\naverage_quality_relationship = sns.lmplot(x=\"AirQuality\", y=\"WaterQuality\", data = average_quality_scores, height=6, aspect=1.4)\nax6 = plt.gca()\nax6.set_title(\"Relationship between Air Quality & Water Quality\", fontweight=\"bold\")\nax6.set_xlabel(\"Avg. Air Quality Score\")\nax6.set_ylabel(\"Avg. Water Quality Score\")\n","d332180b":"Now, let's begin data analysis!","beff5802":"## Introduction\n\n*Note: This is the python version of Worldwide Pollution EDA. If you guys wants to see R version, please follow this link:\n\nhttps:\/\/www.kaggle.com\/jackjaehwankim\/worldwide-pollution-eda\n\nIn this simple analysis, we are going to find out:\n\n1. Which country is the most polluted in terms of each type of pollution: air and water?\n2. What about the most clean countries in terms of both air and water qualities?\n3. Is there any outlier in both air and water qualities?\n4. Is there underlying relationship between air quality and water qualities?","9df11842":"#### Top 10 Cleanest Countries in terms of Air Quality & Water Quality\n\nOn the contrary, both air quality and water quality scores would be vice versa to pollution scores - we've calculated already on the data cleaning.\n\nLet's use quality scores this time!","5c331769":"## Loading Dataset and Data Cleaning","fb91f327":"#### Top 10 Most Polluted Countries in terms of Air Pollution & Water Pollution","dc29d95a":"Findings so far:\n\n1. Average air quality is close to normal distribution.\n2. Average water quality is also somehow close to normal distribution, but has outliers that would be **Liechtenstein** and **Palau**.\n","6d3e8414":"## Data Analysis","d07c622d":"Findings so far:\n\n1. **Avg. Air Quality** and **Avg. Water Quality** somehow have linear relationship and is positive.\n2. This shows that they are correlate mostly - however, there are some outliers, such as **Micronesia**.","26e7bb65":"In Python, it seems that it didn't catch \"\" values on Region column.\n\nIn this analysis, we will get rid of Region column, as each country has its own unique system in terms of naming the region - some countries don't even have such system.\n\nAlso, let's create columns, **AirPollution** and **WaterQuality** by subtracting from 100, as the scale is out of 100.","cf7901c4":"#### Outliers: Air Quality vs. Water Quality","df3d2428":"Findings so far:\n\n1. **Central African Republic** is the most polluted country in terms of air pollution.\n2. **Niger**, **Central African Republic**, **Benin**, **Sierra Leone**, and **Federated State of Micronesia**, are tied as the most polluted countries in terms of water pollution.","46003278":"Findings so far:\n\n1. **Palau** is the cleanest country in both air and water qualities.\n2. On the contrary to water pollution, **Federated States of Micronesia** is one of the top 3 cleanest countries in air quality.\n3. In terms of air quality, **Federated States of Micronesia**, **Eritrea**, and **Palau** are tied as the cleanest countries.\n4. In terms of water quality, **Liechtenstein** and **Palau** are tied as the cleanest countries.\n","77698d75":"#### Conclusion\n\n1. Third world countries that are suffering from civil wars, such as **Sierra Leone**, **Niger**, **Central African Republic**, and **Benin**, suffer from various pollutions due to their unstability. Also, **Federated State of Micronesia** suffer from water pollution due to its industrial and agricultural development - on the contrary, it has clean air.\n2. Many European countries, such as **Norway** and **Finland**, are indicated to have breathable air and clean water.\n3. Thus, the third world countries should start stabilizing their government by ending civil war and taking care of their citizens' sanitation by reducing pollutants. **Be eco-friendly and peaceful!**\n\n**Thanks for checking out my humble analysis with Python. :)**\n\nP.S. It was my second time using Python for data analysis - it was definitely a great opportunity to improve my skills in Python.\n\nPlease let me know what you guys think and feel free to give me feedbacks!\n\nLastly, thank you, **@Yam Peleg**, for giving me this opportunity to conduct data analysis with Python! :)\n\n","dfd9930a":"#### What kind of relationship do Avg. Air Quality and Avg. Water Quality possess?"}}