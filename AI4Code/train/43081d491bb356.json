{"cell_type":{"f41bfdfd":"code","e20b356e":"code","a23e3464":"code","f877d809":"code","33080a13":"code","0f34bfe3":"code","14708880":"code","9961ce8f":"code","7fa24553":"code","41a25556":"code","96d9f2c0":"code","3b69f676":"code","fd4ce491":"markdown","c4273bd9":"markdown","b9fb9fce":"markdown","5d671bc3":"markdown"},"source":{"f41bfdfd":"# import library\nimport pandas as pd","e20b356e":"# save the data into a dataframe named df\ndf = pd.read_json('http:\/\/bechdeltest.com\/api\/v1\/getAllMovies')","a23e3464":"# I want to check the last 5 movies because they are the latest ones\ndf.tail()","f877d809":"# check if there are empty values in the dataset and there is none\n# but I can see that there are already 2 more movies than the time I called this API 2 days ago\n# the data gets outdated quickly\ndf.info()","33080a13":"# save dataframe to a csv file\ndf.to_csv('Bechdel.csv')","0f34bfe3":"# create an empty dataframe\ndf_new = pd.DataFrame(columns=['title', 'year', 'rating', 'dubious', 'imdbid', 'id', 'submitterid', 'date', 'visible'])\ndf_new","14708880":"# call from the latest to the earliest movie, in case the website crashes\ncount = 1\n\n### NOTE: Please be sure to comment out the line below and uncomment the line below that to get all data\nfor imdbid in df['imdbid'][-1:-5:-1]: # this is just a demo of getting 4 movies\n# for imdbid in df['imdbid'][-1::-1]:\n    series = pd.read_json('http:\/\/bechdeltest.com\/api\/v1\/getMovieByImdbId?imdbid=' + str(imdbid), typ='series')\n    # print(series)\n    df_new = df_new.append(series, ignore_index=True)\n    # every 10 movies, we save to a csv file, \n    # so that we wouldn't lose everything when there is an error\n    if count % 10 == 0:\n        df_new.to_csv('Bechdel_detailed_reversed.csv')\n    count += 1\ndf_new.to_csv('Bechdel_detailed_reversed.csv')","9961ce8f":"df_new # if you uncomment the lines as I instructed in the previous cell, you should see 9,300+ movies","7fa24553":"# reverse the indices so that the movie sorts from the earliest to the latest\ndf_new = df_new.iloc[::-1].reset_index(drop=True)\ndf_new.to_csv('Bechdel_detailed.csv', index=False)","41a25556":"df = pd.read_csv('..\/input\/movie-bechdel-test-scores\/Bechdel.csv', index_col=0)\ndf_to_check = pd.read_csv('..\/input\/movie-bechdel-test-scores\/Bechdel_detailed.csv')\ndf_to_check","96d9f2c0":"# functin to check the integrity of the new dataset\ndef check_dataset(df_to_check):\n    lengthFlag = len(df_to_check) == len(df)\n    print(f'Same number of rows? {lengthFlag}, should be {len(df)} movies, got {len(df_to_check)} movies')\n    if lengthFlag:\n        movieFlag = True\n        for i in range(len(df)):\n            if df['imdbid'].iloc[i] != df_to_check['imdbid'].iloc[i]:\n                print(i, df['imdbid'].iloc[i], df_to_check['imdbid'].iloc[i])\n                movieFlag = False\n                break\n    print(f'Same movies? {movieFlag}')","3b69f676":"# check integrity until success\ncheck_dataset(df_to_check)","fd4ce491":"**Here I want to walk you through how I used the API to fetch the data and how I organized the data into tabular format.**","c4273bd9":"## Check data integrity\n\n- check duplicates\n- check row numbers\n- check index","b9fb9fce":"## Get movie by imdbid\n\n- then loop through the imdbid in the previous dataframe to get each movie info\n- create a new dataframe and output the newer csv file\n\nNote: The website is fragile and you may experience timeout error. Make sure to save dataframe to csv so that you don't lose everything.","5d671bc3":"## Read all movies\n\n- get the full movie list and the imdbid"}}