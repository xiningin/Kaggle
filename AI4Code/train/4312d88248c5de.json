{"cell_type":{"31369409":"code","1ad5095f":"code","d2e11116":"code","4a14a114":"code","996de466":"code","beebe119":"code","629a37d6":"code","253656c2":"code","01d6689f":"code","801722fe":"code","1bf63993":"code","fe72459c":"code","e3dcf66f":"code","8c9d3187":"code","38c583e5":"code","25386865":"code","f5106f08":"code","0fd713ed":"code","35c2acef":"code","831cc251":"code","b8ead0ae":"code","773377fe":"code","5c25c3d3":"code","b846ad0a":"code","1d37b443":"code","3e169749":"markdown","89182625":"markdown","cec23318":"markdown"},"source":{"31369409":"# Data manipulation modules\nimport pandas as pd        # R-like data manipulation\nimport numpy as np         # n-dimensional arrays\n\n# For plotting\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt      # For base plotting\n","1ad5095f":"# Seaborn is a library for making statistical graphics\n# in Python. It is built on top of matplotlib and \n#  numpy and pandas data structures.\nimport seaborn as sns                # Easier plotting\n\n# Misc\nimport os\n\n## To Show graphs in same window\n%matplotlib inline\n\nmpl.style.use(\"seaborn\")\nplt.style.use(\"seaborn\")","d2e11116":"# Load the dataset\nGunVoilence_data = pd.read_csv(\"..\/input\/gun-violence-data_01-2013_03-2018.csv\")\n\n# Explore data - First 5 records of Gun Violance data\nGunVoilence_data.head()  ","4a14a114":"#explore data\nGunVoilence_data.shape        # 239677 X 29\n\nGunVoilence_data.columns\nGunVoilence_data.dtypes \n","996de466":"#To describe the data-gun voilence.\nGunVoilence_data.describe\n","beebe119":"# After executions found that isnull and isna gives same counts\/values\n\nGunVoilence_data.isnull().values.any()\nGunVoilence_data.isnull().sum()\nGunVoilence_data.isna().values.any()\n\nmissingdata_sum=GunVoilence_data.isna().sum()\nmissingdata_count=GunVoilence_data.isna().count()\npercentage_missingdata=(missingdata_sum\/missingdata_count) * 100\nmissingdata = pd.concat([missingdata_sum, percentage_missingdata], axis=1)\nmissingdata\ndel(missingdata_sum, missingdata_count, percentage_missingdata)","629a37d6":"# Removing columns for not using of analysis and plotting\nGunVoilence_data.drop([\"incident_characteristics\",\n              \"latitude\",\n              'longitude',\n              \"incident_url\",\n              \"sources\",\n              \"source_url\",\n              \"incident_url_fields_missing\",\n              \"location_description\",\n              \"participant_relationship\",\n              \"notes\",\n    ], axis=1, inplace=True)","253656c2":"GunVoilence_data.shape","01d6689f":"##Converting object datatype to datetime\nGunVoilence_data[\"date\"] = pd.to_datetime(GunVoilence_data[\"date\"])\n\n","801722fe":"## To create column-day,month,year,weekday ,week and quarter.\nGunVoilence_data[\"day\"] = GunVoilence_data[\"date\"].dt.day\nGunVoilence_data[\"month\"] = GunVoilence_data[\"date\"].dt.month\nGunVoilence_data[\"year\"] = GunVoilence_data[\"date\"].dt.year\nGunVoilence_data[\"weekday\"] = GunVoilence_data[\"date\"].dt.weekday\nGunVoilence_data[\"week\"] = GunVoilence_data[\"date\"].dt.week\nGunVoilence_data[\"quarter\"] = GunVoilence_data[\"date\"].dt.quarter","1bf63993":"GunVoilence_data.dtypes # data types creatd for day,month,year,weekday,week and quarter.","fe72459c":"GunVoilence_data[\"participant_gender\"] = GunVoilence_data[\"participant_gender\"].fillna(\"0::Unknown\")\nGunVoilence_data.n_guns_involved\ndef clean_participant_gender(row) :\n    gender_row_values = []\n    gender_row = str(row).split(\"||\")\n    for x in gender_row :\n        gender_row_value = str(x).split(\"::\")\n        if len(gender_row_value) > 1 :\n            gender_row_values.append(gender_row_value[1])\n            \n    return gender_row_values\n\n\nparticipant_genders = GunVoilence_data.participant_gender.apply(clean_participant_gender)\nGunVoilence_data[\"participant_gender_total\"] = participant_genders.apply(lambda x: len(x))\nGunVoilence_data[\"participant_gender_male\"] = participant_genders.apply(lambda x: x.count(\"Male\"))\nGunVoilence_data[\"participant_gender_female\"] = participant_genders.apply(lambda x: x.count(\"Female\"))\nGunVoilence_data[\"participant_gender_unknown\"] = participant_genders.apply(lambda x: x.count(\"Unknown\"))\ndel(participant_genders)","e3dcf66f":"GunVoilence_data[\"n_guns_involved\"] = GunVoilence_data[\"n_guns_involved\"].fillna(0)\nGunVoilence_data[\"gun_stolen\"] = GunVoilence_data[\"gun_stolen\"].fillna(\"0::Unknown\")\n# Prints a lot but gives all the unique values of a column\n#dataset_gunviolence[\"gun_stolen\"].unique()\n\ndef clean_gun_stolen(row) :\n    unknownCount = 0\n    stolenCount = 0\n    notstolenCount = 0\n    gunstolen_row_values = []\n    \n    gunstolen_row = str(row).split(\"||\")\n    for x in gunstolen_row :\n            gunstolen_row_value = str(x).split(\"::\")\n            if len(gunstolen_row_value) > 1 :\n                gunstolen_row_values.append(gunstolen_row_value[1])\n                if \"Stolen\" in gunstolen_row_value :\n                    stolenCount += 1\n                elif \"Not-stolen\" in gunstolen_row_value :\n                    notstolenCount += 1\n                else :\n                    unknownCount += 1\n                    \n    return gunstolen_row_values\n\n\ngunstolenvalues = GunVoilence_data.gun_stolen.apply(clean_gun_stolen)\nGunVoilence_data[\"gun_stolen\"] = gunstolenvalues.apply(lambda x: x.count(\"Stolen\"))\nGunVoilence_data[\"gun_stolen_notstolen\"] = gunstolenvalues.apply(lambda x: x.count(\"Not-stolen\"))\ndel(gunstolenvalues)\n","8c9d3187":"###########################Joint Distribution plots############################\n#To draw plot for number of guns involved vs guns stolen.\nsns.jointplot(x=GunVoilence_data.n_guns_involved, y=GunVoilence_data[\"gun_stolen\"], kind=\"scatter\",color=\"#FF0000\")","38c583e5":"#To draw plot for number of guns involved vs guns not stolen.\nsns.jointplot(x=GunVoilence_data.n_guns_involved, y=GunVoilence_data[\"gun_stolen_notstolen\"], kind=\"scatter\")","25386865":"#To draw plot for number of participant gender total vs number of killed.\n#To draw plot for number of participant gender total vs number of injured.\nsns.jointplot(x=GunVoilence_data.participant_gender_total,\n              y=GunVoilence_data.n_killed, data=GunVoilence_data,\n              space=0, dropna=True, color=\"#D81B60\")\n\nsns.jointplot(x=GunVoilence_data.participant_gender_total,\n              y=GunVoilence_data.n_injured, data=GunVoilence_data,\n              space=0, dropna=True, color=\"#D81B60\")","f5106f08":"###############################  Histograms  #########################\n# Plot a Histogram for Top 10 Cities with maximum incidents of Gun Violence\n\n#for Top 10 states with maximum incidents of Gun Violence\n\nct_state_total = GunVoilence_data[[\"incident_id\"]].groupby(GunVoilence_data.state).count()\ntop_ct_state = ct_state_total.sort_values(by='incident_id', ascending=False).head(10)\nprint(top_ct_state)\n#top_ct_state.plot.barh()\n#statevise\ng = sns.distplot(ct_state_total,bins=50, kde=False,rug=True);\n#g.axvline(0, color=\"red\", linestyle=\"--\");\ndel(top_ct_state)\n","0fd713ed":"#countoryvise\nct_country_total = GunVoilence_data[[\"incident_id\"]].groupby(GunVoilence_data.city_or_county).count()\ntop_ct_country = ct_country_total.sort_values(by='incident_id', ascending=False).head(10)\nprint(top_ct_country)\ng1 = sns.distplot(ct_country_total, kde=False,rug=True,axlabel=\"Country\");\ntop_ct_country.plot.barh()\ndel(top_ct_country)","35c2acef":"#################################Kernal Density plot #######################################\n#To draw plot for yearly incident,injured and killed \nyearly_impact = GunVoilence_data[[\"n_killed\", \"n_injured\",\"incident_id\"]].groupby(GunVoilence_data[\"year\"]).sum()\ndensity_plot=sns.kdeplot(yearly_impact['n_killed'],shade=True,color=\"r\")\ndensity_plot=sns.kdeplot(yearly_impact['n_injured'],shade=True,color=\"b\")\n#density_plot=sns.kdeplot(yearly_impact['incident_id'],shade=True,color=\"y\")\nprint(yearly_impact['n_killed'])\nsns.distplot(yearly_impact['n_killed'], hist=False, rug=True);\n\n#del(yearly_impact)","831cc251":"## Creating multiple columns from Participant's Gender column\nGunVoilence_data[\"participant_gender\"] = GunVoilence_data[\"participant_gender\"].fillna(\"0::Unknown\")\n    \ndef gen(n) :                    \n    gen_rows = []               \n    gen_row = str(n).split(\"||\")    \n    for i in gen_row :              \n        g_row = str(i).split(\"::\")  \n        if len(g_row) > 1 :         \n            gen_rows.append(g_row[1])    \n\n    return gen_rows\n\ngen_series = GunVoilence_data.participant_gender.apply(gen)\nGunVoilence_data[\"total_participant\"] = gen_series.apply(lambda x: len(x))\nGunVoilence_data[\"male_participant\"] = gen_series.apply(lambda i: i.count(\"Male\"))\nGunVoilence_data[\"female_participant\"] = gen_series.apply(lambda i: i.count(\"Female\"))\nGunVoilence_data[\"unknown_participant\"] = gen_series.apply(lambda i: i.count(\"Unknown\"))","b8ead0ae":"# Density plot for gendrwise participant\ngenderwise_total = GunVoilence_data[[\"total_participant\", \"male_participant\", \"female_participant\", \"unknown_participant\"]].groupby(GunVoilence_data[\"year\"]).sum()\n#dp_gen_plot=sns.kdeplot(genderwise_total['male_participant'], shade=True, color=\"r\")\n#dp_gen_plot=sns.kdeplot(genderwise_total['female_participant'], shade=True, color=\"b\")\n#dp_gen_plot=sns.kdeplot(genderwise_total['unknown_participant'], shade=True, color=\"g\")\nsns.distplot(genderwise_total['male_participant'], hist=False, rug=True);\nsns.distplot(genderwise_total['female_participant'], hist=False, rug=True);\nsns.distplot(genderwise_total['unknown_participant'], hist=False, rug=True,axlabel=\"participant\");\n#plt.label(\"Participant\")\n","773377fe":"###########################Violin plot#####################################################\nprint(genderwise_total)\nsns.violinplot( data=genderwise_total, split=True,         # If hue variable has two levels, draw half of a violin for each level.\n               inner=\"box\" );     # x-axis has categorical variable\n#sns.violinplot( \"split_frac\", \"gender\", data=data );    # y-axis has categorical variable\ndel(genderwise_total)","5c25c3d3":"print(yearly_impact)\n\nsns.violinplot(data=yearly_impact[['n_killed','n_injured']],\n               split=True,         # If hue variable has two levels, draw half of a violin for each level.\n               inner=\"quartile\"    #  Options: \u201cbox\u201d, \u201cquartile\u201d, \u201cpoint\u201d, \u201cstick\u201d, None \n               )\n\n \n\n#del(yearly_impact)","b846ad0a":"###############################Box plot###################\nmth_injured_plot = sns.boxplot(GunVoilence_data[\"month\"], \"n_injured\", data=yearly_impact[['n_killed','n_injured']])\nmth_injured_plot.set_title(\"Person injured in injured\/incidents per month\/day\") \nmth_killed_plot = sns.boxplot(GunVoilence_data[\"day\"], \"n_killed\", data=yearly_impact[['n_killed','n_injured']])\nmth_killed_plot.set_title(\"Person killed in injured\/incidents per month\/day\") ","1d37b443":"# Facet Grid Graphh ######################\n#print(GunVoilence_data.weekday)\n#print(GunVoilence_data[['n_killed']])\ng2 = sns.FacetGrid(GunVoilence_data, hue=\"weekday\", palette=\"Set1\", size=5, hue_kws={\"marker\": [\"^\", \"v\"]})\ng2.map(plt.scatter, \"n_killed\", \"n_injured\", s=100, linewidth=.5, edgecolor=\"white\")\ng2.add_legend();","3e169749":"Seaborn library for making statistical graphics","89182625":"# File Descriptions\n\u2022\tgun-violence-data_01-2013_03-2018.csv.\n\nFields available in this dataset are:\n\u2022\t incident_id - ID of the crime report\n\u2022\tdate - Date of crime\n\u2022\tstate - State of crime\n\u2022\tcity_or_county - City\/ County of crime\n\u2022\taddress - Address of the location of the crime\n\u2022\tn_killed - Number of people killed\n\u2022\tn_injured - Number of people injured\n\u2022\tincident_url - URL regarding the incident\n\u2022\tsource_url - Reference to the reporting source\n\u2022\tincident_url_fields_missing - TRUE if the incident_url is present, FALSE otherwise\n\u2022\tcongressional_district - Congressional district id\n\u2022\tgun_stolen - Status of guns involved in the crime (i.e. Unknown, Stolen, etc...)\n\u2022\tgun_type - Typification of guns used in the crime\n\u2022\tincident_characteristics - Characteristics of the incidence\n\u2022\tlatitude - Location of the incident\n\u2022\tlocation_description\n\u2022\tlongitude - Location of the incident\n\u2022\tn_guns_involved - Number of guns involved in incident\n\u2022\tnotes - Additional information of the crime\n\u2022\tparticipant_age - Age of participant(s) at the time of crime\n\u2022\tparticipant_age_group - Age group of participant(s) at the time crime\n\u2022\tparticipant_gender - Gender of participant(s)\n\u2022\tparticipant_name - Name of participant(s) involved in crime\n\u2022\tparticipant_relationship - Relationship of participant to other participant(s)\n\u2022\tparticipant_status - Extent of harm done to the participant\n\u2022\tparticipant_type - Type of participant\n\u2022\tsources\n\u2022\tstate_house_district\n\u2022\tstate_senate_district\n","cec23318":"# To explore, Data preparation and plotting of Gun Violence Incidents in USA\n\nGun violence in the US results in tens of thousands of deaths and injuries annually. In 2013, there were 73,505 nonfatal firearm injuries which included 11,208 homicides, 21,175 suicides, 505 deaths due to accidental or negligent discharge of a firearm, and 281 deaths due to firearms use with \"undetermined intent\".\n\n\n\n"}}