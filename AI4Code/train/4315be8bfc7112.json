{"cell_type":{"65f26e8b":"code","dcaf7566":"code","775075a8":"code","5e702e16":"code","77b6ae86":"code","53fd3d1e":"code","268686ae":"code","46de9689":"code","0b17e7e1":"code","6bde62fa":"code","96decbbe":"code","e6f41d89":"code","682c9366":"code","1e9efb4e":"code","9acc06cb":"code","c1b6febf":"code","9386cc7e":"code","a54e98f6":"code","47ab3c86":"code","19ffcfc5":"code","a855b8e9":"code","9c9c52ca":"code","957b1a63":"code","4ce6a0ee":"code","e471cba7":"code","49819d0a":"code","45b70251":"code","4a08390d":"code","03b0c8b1":"markdown","efd8b793":"markdown","1b30895b":"markdown","c7dfc1d9":"markdown","29edf4ba":"markdown","570725b1":"markdown","3bcdd3b3":"markdown","88fd4dcb":"markdown","305e450c":"markdown","1b5c9e4b":"markdown","444e0843":"markdown","36da8f36":"markdown"},"source":{"65f26e8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n\nplt.style.use(\"seaborn-whitegrid\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dcaf7566":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PessengerId = test_data[\"PassengerId\"]","775075a8":"train_data.columns","5e702e16":"train_data.tail()","77b6ae86":"train_data.describe()","53fd3d1e":"train_data.info()","268686ae":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output: bar plot & value count\n    \n    \"\"\"\n    # get feature\n    var = train_data[variable]\n    \n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{} \\n {}\".format(variable,varValue))","46de9689":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","0b17e7e1":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    \n    print(\"{} \\n\".format(train_data[c].value_counts()))","6bde62fa":"def hist_plot (variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_data[variable], bins =50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with histogram \".format(variable))\n    plt.show()","96decbbe":"numeric_variable = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numeric_variable:\n    hist_plot(n)","e6f41d89":"#Pclass vs Survived\ntrain_data[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by =\"Survived\", ascending = False)","682c9366":"#Parch vs Survived\ntrain_data[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","1e9efb4e":"# Sex vs Survived\ntrain_data[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index=False).mean().sort_values(by = \"Survived\",ascending = False)","9acc06cb":"# SibSp vs Survived\ntrain_data[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","c1b6febf":"def detect_outliers(dframe, features):\n    outlier_indices = []\n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(dframe[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(dframe[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier Step\n        outlier_step = IQR * 1.5\n        # Detect outlier and their indices\n        outlier_list_column = dframe[(dframe[c]< Q1 - outlier_step) | (dframe[c] > Q3 + outlier_step)].index\n        # Store indices\n        outlier_indices.extend(outlier_list_column)\n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    return multiple_outliers","9386cc7e":"train_data.loc[detect_outliers(train_data,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","a54e98f6":"# drop outliers\ntrain_data = train_data.drop(detect_outliers(train_data,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","47ab3c86":"train_data_length = len(train_data)\ntrain_data = pd.concat([train_data, test_data], axis = 0).reset_index(drop = True)","19ffcfc5":"train_data.head()","a855b8e9":"train_data.columns[train_data.isnull().any()]","9c9c52ca":"train_data.isnull().sum()","957b1a63":"train_data[train_data[\"Embarked\"].isnull()]","4ce6a0ee":"train_data.boxplot(column = \"Fare\", by = \"Embarked\")\nplt.show()","e471cba7":"train_data[\"Embarked\"] = train_data[\"Embarked\"].fillna(\"C\")\ntrain_data[train_data[\"Embarked\"].isnull()]","49819d0a":"train_data[train_data[\"Fare\"].isnull()]","45b70251":"train_data[\"Fare\"] = train_data[\"Fare\"].fillna(np.mean(train_data[train_data[\"Pclass\"] == 3][\"Fare\"])) ","4a08390d":"train_data[train_data[\"Fare\"].isnull()]","03b0c8b1":"* float64(2): Fare and Age\n* int64(5): PassengerId, Survived, Pclass, SibSp and ParCh\n* object(5): Name, Sex, Ticket, Cabin and Embarked\n\n","efd8b793":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","1b30895b":"<a id =\"2\"><\/a><br>\n# Variable Description\n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survive(1) or died(0)\n1. Pclass: passenger class\n1. Name: name\n1. Sex: gender of passenger\n1. Age: age of passenger\n1. SibSp: number of Siblings - Spouses\n1. Parch: number of Parents - Children\n1. Ticket: ticket number\n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)\n\n","c7dfc1d9":"<a id = \"5\"><\/a><br>\n## Numerical Variable","29edf4ba":"<a id = \"7\"><\/a><br>\n# Outlier Detection","570725b1":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n*      Categorical Variable: Survived, Sex, Pclass, Cabin, Ticket, Name, ParCh and SibSp\n*      Numerical Variable: Age, PassengerId and Fare\n       ","3bcdd3b3":"<a id = \"4\"><\/a><br>\n## Categorical Variable\n       ","88fd4dcb":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis<br>\nIn this section, we will examine whether the following variables are related to survival.\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","305e450c":"<a id =\"1\"><\/a> <br>\n# Load and Check Data","1b5c9e4b":"<a id = \"9\"><\/a><br>\n## Find Missing Value","444e0843":"# \u0130ntroduction\nSummary and definition: The disaster known as the Sinking of the Titanic occurred at 11.40pm on 15 April 1912 when the British passenger ship struck an iceberg and sank into the North Atlantic Ocean. ... A total of 1523 people perished at sea - there were only 705 survivors on the \"unsinkable\" ship.\n<font color =\"blue\">\nContent:\n\n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n        * [Find Missing Value](#9)\n        * [Fill Missing Value](#10)","36da8f36":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has missing value\n* Fare has only 1"}}