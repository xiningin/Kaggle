{"cell_type":{"826dc996":"code","6ed6e220":"code","8644c5c7":"markdown","84dee2cc":"markdown","b4be2f06":"markdown"},"source":{"826dc996":"import numpy  as np\nimport pandas as pd\n\n# read in the data\ntrain = pd.read_csv(\"..\/input\/store-sales-time-series-forecasting\/train.csv\",parse_dates=['date'])\ntest  = pd.read_csv(\"..\/input\/store-sales-time-series-forecasting\/test.csv\",parse_dates=['date'])\n\n# create a 'day of the week' feature\ntrain['day_of_the_week'] = train['date'].dt.day_name()\ntest['day_of_the_week']  = test['date'].dt.day_name()\n\n# select the very last three weeks of the training data\ntrain_three_weeks = train.query(\"date >= '2017-07-26' \")\n\ndef exp_mean_ln(df):\n    return np.expm1(np.mean(np.log1p(df['sales'])))\n\n# calculate the average values\ntrain_average = train_three_weeks.groupby(['store_nbr','family','day_of_the_week']).apply(exp_mean_ln).to_dict()\ntest['sales'] = test.set_index(['store_nbr','family','day_of_the_week']).index.map(train_average.get)\n\n# create and write out the submission.csv file\nsubmission = pd.DataFrame({'id': test.id, 'sales': test.sales})\nsubmission.to_csv('submission.csv', index=False)","6ed6e220":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nplt.rcParams.update({'font.size': 16})\nfrom datetime import datetime\n\n# take a look at just one of the stores\nstore_number = 1\nstore_n_train_df = train_three_weeks.query('store_nbr == @store_number')\nstore_n_test_df  = test.query('store_nbr == @store_number')\n\nfig, ax = plt.subplots(figsize=(20, 5))\nsns.lineplot(data=store_n_train_df, x=\"date\", y=\"sales\", hue=\"family\", linewidth = 1.5)\nsns.lineplot(data=store_n_test_df,  x=\"date\", y=\"sales\", hue=\"family\", linewidth = 1.5)\nplt.text(datetime.strptime(\"2017-08-04\", '%Y-%m-%d'), 4100, \"training data\")\nplt.text(datetime.strptime(\"2017-08-24\", '%Y-%m-%d'), 4100, \"predictions\")\nplt.legend([],[], frameon=False);","8644c5c7":"### <center style=\"background-color:Gainsboro; width:70%;\">Store Sales: Day of the Week model<\/center>\n\nIn the [Store Sales - Time Series Forecasting](https:\/\/www.kaggle.com\/c\/store-sales-time-series-forecasting) GettingStarted prediction Competition we have been tasked with building a model that predicts the unit sales for thousands of items sold at different Corporaci\u00f3n Favorita stores. Specifically we are asked to predict the sales for 16 days from 2017-08-16 to 2017-08-31. In this short notebook we shall build a very simple model that uses the values of each family of product sold, for each store number. Given that the `sales` seem to very much depend on the day of the week, we shall also create a '*day of the week*' feature. \n\nFor our training data we shall use the very last three weeks of the data we have been given, thus having three examples of each weekday to average over.","84dee2cc":"### <center style=\"background-color:Gainsboro; width:60%;\">Related notebooks<\/center>\n* [Store Sales: Naive one-day model](https:\/\/www.kaggle.com\/carlmcbrideellis\/store-sales-naive-one-day-model)\n* [Store Sales: Using the average of the last 16 days](https:\/\/www.kaggle.com\/carlmcbrideellis\/store-sales-using-the-average-of-the-last-16-days)\n\n### <center style=\"background-color:Gainsboro; width:60%;\">Recommended reading<\/center>\n* [Rob J. Hyndman and George Athanasopoulos \"*Forecasting: Principles and Practice*\", (3rd Edition)](https:\/\/otexts.com\/fpp3\/)\n* [Fotios Petropoulos, *et al. \"Forecasting: Theory and Practice*\", arXiv:2012.03854 (2020)](https:\/\/arxiv.org\/pdf\/2012.03854.pdf)","b4be2f06":"### <center style=\"background-color:Gainsboro; width:60%;\">Visualize the results<\/center>"}}