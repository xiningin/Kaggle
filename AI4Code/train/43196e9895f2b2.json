{"cell_type":{"0df5c753":"code","c7d8bf87":"code","ba422273":"code","30ef0321":"code","a578788a":"code","086458ee":"code","d5aa05ba":"code","146b6863":"code","32ebe5ec":"code","8c8429f5":"code","823525a9":"code","4327033b":"code","df4d8b0d":"code","e0577fee":"code","3496dec4":"code","080f7e05":"markdown","8988e3a2":"markdown","bbc8d0d9":"markdown","16deb246":"markdown","b16fb6af":"markdown","7f15ae72":"markdown","e370d79f":"markdown","60f395ba":"markdown","5225494b":"markdown","ecabfdf2":"markdown","9ce9b267":"markdown","a00b2d4c":"markdown","4804914e":"markdown","a3b9f73d":"markdown","a9a147c0":"markdown","3dc90908":"markdown"},"source":{"0df5c753":"!pip install fastai --upgrade","c7d8bf87":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\nfrom fastai.vision.all import *\nfrom fastai.metrics import error_rate\n\n# additional classic imports\nfrom pathlib import Path\nimport pandas as pd\nimport numpy as np\nimport random","ba422273":"bs = 64 # Batch size\nresize_size = 96 # for training, resize all the images to a square of this size\ntraining_subsample = 0.1 # for development, use a small fraction of the entire dataset rater than full dataset","30ef0321":"bees_vs_wasps_dataset_path=Path('..\/input\/bee-vs-wasp\/kaggle_bee_vs_wasp') # this is relative to the \"example_notebook\" folder. Modify this to reflect your setup\ndf_labels = pd.read_csv(bees_vs_wasps_dataset_path\/'labels.csv')\ndf_labels=df_labels.set_index('id')\ndf_labels.head()","a578788a":"for idx in df_labels.index:    \n    df_labels.loc[idx,'path']=df_labels.loc[idx,'path'].replace('\\\\','\/')    ","086458ee":"df_labels = df_labels.sample(frac=training_subsample, axis=0) ","d5aa05ba":"data = ImageDataLoaders.from_df(\n    df = df_labels,\n    path = Path(bees_vs_wasps_dataset_path),\n    valid_pct=0.2,\n    seed = 42,\n    fn_col='path',\n    folder=None,\n    label_col='label',\n    bs=bs,\n    shuffle_train=True,\n    batch_tfms=aug_transforms(),\n    item_tfms=Resize(resize_size),device='cpu', num_workers=0,\n)","146b6863":"data.show_batch()","32ebe5ec":"learn = cnn_learner(data, resnet18, metrics=error_rate)\nlearn.model_dir='\/kaggle\/temp\/'","8c8429f5":"best_lr=learn.lr_find(start_lr=1e-04, end_lr=1, num_it=30) ","823525a9":"learn.fine_tune(1,base_lr=best_lr[0])","4327033b":"learn.show_results()","df4d8b0d":"learn.save('stage-1')","e0577fee":"interp = ClassificationInterpretation.from_learner(learn)\nlosses,idxs = interp.top_losses()\ninterp.plot_top_losses(12, figsize=(14,14))","3496dec4":"interp.plot_confusion_matrix(figsize=(4,4), dpi=120)","080f7e05":"Initialisation:","8988e3a2":"Run the transfer learning procedure:","bbc8d0d9":"Note: this code requires fastai 2.0+","16deb246":"visualize sample results:","b16fb6af":"# Bee vs wasp dataset preview","7f15ae72":"Display the confusion matrix. \n\nNote that in this example, this is only calculated over the subsampled dataset.","e370d79f":"Training hyperparameters:","60f395ba":"Run the learning rate finder:","5225494b":"configure the fast.ai Image data loader:","ecabfdf2":"convert the paths to linux path:","9ce9b267":"Subsample the dataset to reduce training time for this demonstration only:","a00b2d4c":"## Train a basic classifier\nNote that the settings are rubbish to make it execute quickly; hence, the results are rubbish.","4804914e":"You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \nYou can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a3b9f73d":"preview a few samples from the dataset:","a9a147c0":"---","3dc90908":"Load the labels from `.csv` using pandas:"}}