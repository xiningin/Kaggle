{"cell_type":{"2740b848":"code","0c054a0c":"code","f7232aba":"code","023cb4be":"code","1af9a0c6":"code","f7971e4b":"code","3222a1cc":"code","efbd8175":"code","8369e576":"code","e365baed":"code","8b094e5a":"code","679e13ba":"code","4c50eae6":"markdown","0921bcf4":"markdown","bd6d5186":"markdown","c3c5a65c":"markdown","f21baf52":"markdown","3b05348a":"markdown","1a40ffcf":"markdown","a7774364":"markdown","591fee55":"markdown","6f68e021":"markdown","a38f14fd":"markdown"},"source":{"2740b848":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c054a0c":"import seaborn as sns \nimport matplotlib.pyplot as plt \nfrom wordcloud import WordCloud \nimport re \nimport string \nfrom matplotlib import style \nimport datetime \nfrom  datetime import date \nstyle.use('fivethirtyeight')","f7232aba":"df= pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')","023cb4be":"# we will create a dataset to make changes in the original  dataset \ndf1 = df.copy()","1af9a0c6":"# Getting the countrywise location of the launches\nfor i in range(len(df1['Location'])):\n    example = df1['Location'][i].split()\n    df1['Location'][i] = example[-1]","f7971e4b":"def plot_countries(df):\n    df = df[~df['Location'].isin(['Sea','Canaria','Site','Facility'])]\n    locations  =  df['Location'].value_counts().index\n    index = [ x for x in range(len(locations))]\n    y_vals = df['Location'].value_counts().values\n    \n    plt.figure(figsize=(12,4))\n    plt.bar(index,y_vals)\n    plt.xticks(index,locations,rotation=45)\n    plt.xlabel('Countries',fontsize=17)\n    plt.ylabel('Launches',fontsize=17)\n    plt.plot()\n    \n\nplot_countries(df1)","3222a1cc":"def plot_budget(df):\n    budget = df[' Rocket'].value_counts()\n    plt.figure(figsize=(20,4))\n    budget.plot(kind='hist')\n    index= [x for x in range(len(budget))]\n#     plt.xticks(index,budget.index,rotation=90)\n    plt.xlabel('Budget',fontsize=17)\n    plt.ylabel('Frequency of budget',fontsize=17)\n    plt.show()\n\nplot_budget(df1)","efbd8175":"df1['Status Mission'].value_counts()\nplt.pie(df1['Status Mission'].value_counts(),\n       labels=df1['Status Mission'].value_counts().index,\n       startangle=45,explode=[0.1,0.2,0.3,0.4])\nplt.axis('equal')\nplt.show()","8369e576":"def return_dates(df):\n    df['Datum'].dropna(inplace=True)\n    for i in range(len(df)):\n        word_ls = df1['Datum'][i].split()\n        year = word_ls[3]\n        month  =  word_ls[1]\n        datetime_object = datetime.datetime.strptime(month, \"%b\")\n        month_number = datetime_object.month\n        df['Datum'][i]=  '{}-{}'.format(month_number,year)\n    return df\ndf1 =return_dates(df1)\ndf1['Datum'] = pd.to_datetime(df1['Datum'])\ndf1.Datum.dtype\n","e365baed":"def missions_over_years(df):\n    df1= df.groupby(df['Datum'].dt.year).count()\n    x = df1.index\n    y = df1['Status Mission'].tolist()\n    plt.figure(figsize=(14,8))\n    plt.grid()\n    plt.plot(x,y)\n    plt.xlabel('Years',fontsize=20)\n    plt.ylabel('Number of Missions',fontsize=20)\n    plt.show()\n    \nmissions_over_years(df1)","8b094e5a":"#  Plotting the Details of the rockets \ndef word_cloud1(df):\n    word_ls=[]\n    for i in range(len(df)):\n        word_ls += df['Detail'][i].split()\n    wordcloud = WordCloud(width=350,height=250).generate(''.join(word_ls))\n    plt.figure(figsize=(19,9))\n    plt.axis('off')\n    plt.title('Rocket Names',fontsize=20)\n    plt.imshow(wordcloud)\n    plt.show()\nword_cloud1(df1)","679e13ba":"# plotting the wordcloud of Company names \ndef word_cloud2(df):\n    word_ls=[]\n    for i in range(len(df)):\n        word_ls += df['Company Name'][i]\n    wordcloud = WordCloud(width=250,height=200).generate(''.join(word_ls))\n    plt.figure(figsize=(9,8))\n    plt.axis('off')\n    plt.title('Rocket Companies',fontsize=20)\n    plt.imshow(wordcloud)\n    plt.show()\nword_cloud2(df1)","4c50eae6":"### WordCloud of Rocket details.","0921bcf4":"# Thank You!!!!!","bd6d5186":"### Budget.","c3c5a65c":"### WordCloud of Company names.","f21baf52":"### Frequency of launches over the years.","3b05348a":"### Success-Failure breakdown.","1a40ffcf":"### Country_wise Launches.","a7774364":"#### Creating a temp DataFrame df1.","591fee55":"#### Getting Country Names.","6f68e021":"# Please upvote if you like the notebook.","a38f14fd":"# Space Race "}}