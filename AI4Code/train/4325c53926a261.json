{"cell_type":{"b62f4a95":"code","b5613cc8":"code","3efccb75":"code","000dcce8":"code","925aad39":"code","1015664d":"code","6654f3f5":"code","44fbc535":"code","200df4aa":"code","d0efe281":"code","9f4ec00f":"code","9a635eb5":"code","4dde6c2f":"code","824d1864":"code","419aa746":"code","d967830c":"code","239a3765":"code","5d085eca":"code","3e69433a":"code","0d9a5bb8":"code","ca6ad0d4":"code","19e59619":"code","f1e81269":"code","7f63b798":"code","27848444":"code","6aa6bf26":"code","f738d88e":"code","66c9c21d":"code","638461fa":"markdown","e1c64284":"markdown","3f362d4d":"markdown","8a87a483":"markdown","3ce49846":"markdown","05c592f5":"markdown","60fc9a57":"markdown","c42a968d":"markdown","c6328b37":"markdown","ef23f6c7":"markdown","94592da1":"markdown","bd7fc6ae":"markdown","381deb17":"markdown","635b817a":"markdown","14b13690":"markdown","455e956d":"markdown","64c1cacd":"markdown","7699d03d":"markdown","09e6ec0e":"markdown"},"source":{"b62f4a95":"import pandas as pd\nimport numpy as np\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split #train-test split for validation\nfrom sklearn.metrics import classification_report #metrics\nfrom sklearn.ensemble import RandomForestClassifier # classifier","b5613cc8":"train_df = pd.read_csv(\"\/kaggle\/input\/house-sales-price-classification\/train_data.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/house-sales-price-classification\/test_data.csv\")","3efccb75":"train_df.shape, test_df.shape","000dcce8":"train_df.head()","925aad39":"test_df.head()","1015664d":"sns.countplot(train_df['price_range'], palette='Set3')","6654f3f5":"sns.countplot(train_df['bedrooms'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Train set, bedrooms, grouped by price_range\")\nplt.show()","44fbc535":"sns.countplot(test_df['bedrooms'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Test set, bedrooms, grouped by price_range\")\nplt.show()","200df4aa":"plt.figure(figsize=(12, 4))\nsns.countplot(train_df['bathrooms'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Train set, bathrooms, grouped by price_range\")\nplt.show()","d0efe281":"plt.figure(figsize=(12, 4))\nsns.countplot(test_df['bathrooms'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Test set, bathrooms, grouped by price_range\")\nplt.show()","9f4ec00f":"sns.countplot(train_df['view'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Train set, view, grouped by price_range\")\nplt.show()","9a635eb5":"sns.countplot(test_df['view'], palette='Set3', hue=train_df['price_range'])\nplt.title(\"Test set, view, grouped by price_range\")\nplt.show()","4dde6c2f":"fig, ax = plt.subplots()\nsns.distplot(train_df.loc[train_df.price_range=='large', 'sqft_living'], label=\"train-large\")\nsns.distplot(train_df.loc[train_df.price_range=='small', 'sqft_living'], label=\"train-small\")\nsns.distplot(test_df['sqft_living'], label=\"test\")\nplt.title(\"Train & Test, sqft living distribution, train data grouped by price_range\")\nax.legend()\nplt.show()","824d1864":"plt.figure(figsize=(16, 16))\nheatmap = sns.heatmap(np.round(train_df.corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation\")\nplt.show()","419aa746":"# sqft area \/ floor\ntrain_df['sqft_per_floor'] = train_df['sqft_above'] \/ train_df['floors']\ntest_df['sqft_per_floor'] = test_df['sqft_above'] \/ test_df['floors']","d967830c":"fig, ax = plt.subplots()\nsns.distplot(train_df.loc[train_df.price_range=='large', 'sqft_per_floor'], label=\"train-large\")\nsns.distplot(train_df.loc[train_df.price_range=='small', 'sqft_per_floor'], label=\"train-small\")\nsns.distplot(test_df['sqft_per_floor'], label=\"test\")\nplt.title(\"Train & Test, sqft \/ floor distribution, train data grouped by price_range\")\nax.legend()\nplt.show()","239a3765":"# diff sqft_lot15\ntrain_df['sqft_lot15_delta'] = train_df['sqft_lot'] - train_df['sqft_lot15']\ntest_df['sqft_lot15_delta'] = test_df['sqft_lot'] \/ test_df['sqft_lot15']\n# diff sqft_living15\ntrain_df['sqft_living15_delta'] = train_df['sqft_living'] \/ train_df['sqft_living15']\ntest_df['sqft_living15_delta'] = test_df['sqft_living'] \/ test_df['sqft_living15']","5d085eca":"train_columns_set = ['bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors', 'condition', 'view', \n                     'sqft_per_floor', 'sqft_lot15_delta', 'sqft_living15_delta']","3e69433a":"X = train_df[train_columns_set]\ny = train_df['price_range']","0d9a5bb8":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)","ca6ad0d4":"rfc = RandomForestClassifier(n_estimators=50)","19e59619":"rfc.fit(X_train, y_train)","f1e81269":"y_pred = rfc.predict(X_valid)","7f63b798":"print(classification_report(y_pred, y_valid))","27848444":"submission = pd.read_csv(\"\/kaggle\/input\/house-sales-price-classification\/sample_submission.csv\")","6aa6bf26":"X_test = test_df[train_columns_set]\ny_test = rfc.predict(X_test)","f738d88e":"submission[\"price_range\"] = y_test","66c9c21d":"submission.to_csv(\"submission.csv\", index=False)","638461fa":"Save submission file. You can find it in `Output` section.\n\nAfter runing the Notebook, you can submit this solution file.","e1c64284":"We will create some simple derived features.","3f362d4d":"\n# Recent updates:\n\n* Add more features plots\n* Feature correlation\n* Feature engineering\n\n# What you can do?\n\n* Add more features plots\n* Try to understand what features are important from your from the features plots and features correlations\n* Add more features to your model\n* Play with different models, add and remove features, use validation score to decide which to keep and which to discard\n\n\n# 1. Introduction\n\n\n\n\nObjective of the competition: predict the `price_range` for properties in test set.\n\nYou receive two data files: `train_data.csv` & `test_data.csv`.\nBoth contains a set of features (columns) with informations about properties (houses).\nTrain set contains as well `price_range` values (can be either `small` or `large`) corresponding to the train data.\n\n\nUsing train data features set (columns with houses information) and `price_range` you train a classification model.\n\nThen, you can use the model to predict, for the test set, the corresponding values for `price_range`.\n\nSave the predicted values in `submission.csv` file and then submit this file to the competition.\n\n\n# 2. Load packages\n\nInclude here the libraries you will need for your analysis.","8a87a483":"# 5. Feature engineering\n\n\nSelect features to include in the model.\n\nCreate new features.\n\nWe start with a small, minimal features set.\n\nThen, repeat (iteratively) the next steps: select features set, train the model, validate.\n\nWhen happy with validation results, predict for test set and submit.","3ce49846":"Replace in submission file `price_range` with the predicted values for test set.","05c592f5":"Use train-validation set 80\/20.","60fc9a57":"## 4.1. Plot more features\n\nCan you plot more features yourself? Try to look to features ditribution and decide what features to include in your model, based on this analysis.","c42a968d":"# 3. Load data\n\nThere are 2 files:\n- train - data set reserved for training your model (contains as well `price_range`)\n- test - data set for which you need to predict the `price_range`","c6328b37":"Prepare X, y for test set.","ef23f6c7":"Fit the classifier with train data (X, y).","94592da1":"The following graphs shows us how the number of bedrooms is correlated with the price range.\n\nAlso, is useful to look how this distribution is consistent between train & test set (might differ).","bd7fc6ae":"# 7. Predict test & submit\n\n\nLoad submit file.","381deb17":"Fit a classifier. In this example, I use RandomForestClassifier.","635b817a":"# 4. Data exploration\n\nUse here the techniques for data exploration and data visualization you learn in your Pandas, Intro to Machine Learning and Data Visualization trainings.\n\nWhy you need to explore the data: to understand the predictive value of each feature i.e. what features to include in the model.\n\n\nFirst, let's glimpse a bit the data.","14b13690":"Measurement using classification report. \n\nThe metrics for this competition is Mean F1 score.","455e956d":"How to use correlation matrix?\n\n* Features that are higly correlated with the target feature (not the case here, it is not shown) will improve the model;\n* Remove features that have high correlation (will not add value to the model)","64c1cacd":"Examples of data visualizations:","7699d03d":"Predict for validation set.","09e6ec0e":"# 6. Train model\n\n\nCreate X, y."}}