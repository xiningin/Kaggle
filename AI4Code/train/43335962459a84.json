{"cell_type":{"e39bcd32":"code","437cab7f":"code","03cb119d":"code","7980bbef":"code","03554298":"code","a52eca7a":"code","94e32c8c":"code","3d252305":"code","4aab495c":"code","1a14a2e8":"code","e4035f4c":"code","754c1da6":"code","a6e3ebb8":"code","3f8b2e3c":"code","dbd8feec":"code","8576c29b":"code","ee2aee96":"code","4b3c7bc7":"code","a6d7de7e":"code","567e826b":"code","3ba35f44":"code","60dca52e":"code","06dce031":"code","a63bd16d":"code","63a0a5f7":"code","ec0fb9d9":"code","d8301117":"code","646c5d92":"code","cb46d96f":"code","4be72ed4":"markdown","82249a43":"markdown","238159dd":"markdown","e945b9e2":"markdown","de6b90a2":"markdown","34ea6c60":"markdown","75ace818":"markdown","febdc585":"markdown","3c96c21a":"markdown","2344eef1":"markdown","6d1517bd":"markdown","f995f44f":"markdown","f38af245":"markdown","44563e4a":"markdown"},"source":{"e39bcd32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","437cab7f":"import numpy as np              # used to read and preprocess data\nimport seaborn as sns           # used to working with arrays Single or MultiDiementional\nimport pandas as pd             # Visualisation of data\nimport matplotlib.pyplot as plt # Visualisation of data\n%matplotlib inline","03cb119d":"data=pd.read_csv('\/kaggle\/input\/ipldata\/matches.csv')","7980bbef":"data.head()","03554298":"data.shape","a52eca7a":"# removing unwanted coloumns\ncolumns_to_remove = ['id','umpire1','umpire2','umpire3']\ndata.drop(labels=columns_to_remove,axis=1,inplace=True)","94e32c8c":"data.head()","3d252305":"data['team1'].unique()","4aab495c":"data['team2'].unique()","1a14a2e8":"data.at[data['team1']=='Delhi Daredevils','team1']='Delhi Capitals'\ndata.at[data['team2']=='Delhi Daredevils','team2']='Delhi Capitals'\ndata.at[data['winner']=='Delhi Daredevils','winner']='Delhi Capitals'","e4035f4c":"consistent_teams = ['Royal Challengers Bangalore',\n       'Kolkata Knight Riders', 'Kings XI Punjab',\n       'Sunrisers Hyderabad', 'Mumbai Indians', \n       'Rajasthan Royals', 'Chennai Super Kings',      \n       'Delhi Capitals']","754c1da6":"data = data[(data['team1'].isin(consistent_teams)) & (data['team2'].isin(consistent_teams))]","a6e3ebb8":"print(data['team1'].unique())\nprint(data['team2'].unique())","3f8b2e3c":"data.head()","dbd8feec":"data.shape","8576c29b":"sns.set_style(\"darkgrid\")\nfig=plt.gcf()\nfig.set_size_inches(15,5)\nplt.xticks(rotation=0,fontsize=12)\nplt.yticks(fontsize=16)\nresults=pd.DataFrame(data['result'].value_counts())\nresults['name']=results.index  # store index as ht in name\nplt.bar(results['name'],results['result'],color=['orange','green'])\ncount=0\nfor i in results['result']:\n    plt.text(count-0.10,i+0.1,str(i),size=15,color='black',rotation=0)\n    count+=1\n    \n#  count-0.15 for center align\n#  i+0.1 for Vertical Alignment\n\nplt.title('Final Result',fontsize=20)\nplt.xlabel('Result',fontsize=15)\nplt.ylabel('Total no. of matches (2008-2019)',fontsize=15)","ee2aee96":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nwins=pd.DataFrame(data['winner'].value_counts())\nwins['name']=wins.index\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.bar(wins['name'],\n        wins['winner'],\n        color=['#15244C','#FFFF48','#292734','#EF2920','#CD202D','#ECC5F2',\n               '#294A73','#D4480B','#242307','#FD511F','#158EA6','#E82865',\n               '#005DB7','#C23E25','#E82865']\n        ,alpha=0.8)\ncount=0\nfor i in wins['winner']:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nplt.title('Total wins by each team',fontsize=20)\nplt.xlabel('Teams',fontsize=15)\nplt.ylabel('Total no. of matches won(2008-2019)',fontsize=14)\n#plt.show()","4b3c7bc7":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nM_O_M=pd.DataFrame(data['player_of_match'].value_counts())\nM_O_M['name']=M_O_M.index\nM_O_M=M_O_M.head(10)\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.bar(M_O_M['name'],M_O_M['player_of_match'],\n        color=['#CD202D','#EF2920','#D4480B','#15244C','#FFFF48','#EF2920',\n               '#FFFF48','#FFFF48','#292734','#FFFF48','#ECC5F2','#EF2920',\n               '#292734','#15244C','#005DB7','#005DB7','#292734','#15244C',\n               '#FFFF48','#CD202D'],alpha=0.8)\ncount=0\nfor i in M_O_M['player_of_match']:\n    plt.text(count-0.15,i+0.1,str(i),size=15,color='black',rotation=0)\n    count+=1\n    \n#  count-0.15 for center align\n#  i+0.1 for Vertical Alignment\n\nplt.title('Top 20 Man Of The Match Winners(2008-2019)',fontsize=20)\nplt.xlabel('Players Name',fontsize=15)\nplt.ylabel('Total Awards Count',fontsize=14)","a6d7de7e":"data.at[data['city']=='Bengaluru','city']='Bangalore'","567e826b":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\ncities=pd.DataFrame(data['city'].value_counts())\ncities['name']=cities.index\n#cities=cities.head(10)\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.bar(cities['name'],cities['city'],alpha=0.8)\ncount=0\nfor i in cities['city']:\n    plt.text(count-0.18,i+0.1,str(i),size=15,color='black',rotation=0)\n    count+=1\nplt.title('Total Matches Hosted At Each City ',fontsize=20)\nplt.xlabel('City',fontsize=15)\nplt.ylabel('Total Number Of Matches Hosted',fontsize=14)","3ba35f44":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,10.5)\nVenue=pd.DataFrame(data['venue'].value_counts())\nVenue['name']=Venue.index\nplt.xticks(rotation=90,fontsize=12)\nplt.yticks(fontsize=16)\nplt.bar(Venue['name'],Venue['venue'],alpha=0.8)\ncount=0\nfor i in Venue['venue']:\n    plt.text(count-0.18,i+0.1,str(i),size=15,color='black',rotation=0)\n    count+=1\nplt.title('Total Matches Hosted At Each venue ',fontsize=20)\nplt.xlabel('Venue',fontsize=15)\nplt.ylabel('Total Number Of Matches Hosted',fontsize=14)","60dca52e":"head_to_head = ['Mumbai Indians','Chennai Super Kings',]","06dce031":"# we consider only those matches played bitween MI and CSK\ndata_MIvsCSK = data[(data['team1'].isin(head_to_head)) & (data['team2'].isin(head_to_head))]","a63bd16d":"# we can also use this method to find head to head clash\n# we consider only those matches played bitween MI and CSK\n# data_MIvsCSK=data[np.logical_or\n#       (np.logical_and(data['team1']=='Mumbai Indians',data['team2']=='Chennai Super Kings')\n#                  ,np.logical_and(data['team2']=='Mumbai Indians',data['team1']=='Chennai Super Kings'))]","63a0a5f7":"print(data_MIvsCSK['team1'].unique())\nprint(data_MIvsCSK['team2'].unique())","ec0fb9d9":"sns.set(style='dark')\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nsns.countplot(data_MIvsCSK['winner'],order=data_MIvsCSK['winner'].value_counts().index)\nplt.text(-0.1,15,str(data_MIvsCSK['winner'].value_counts()['Mumbai Indians']),size=29,color='white')\nplt.text(0.9,9,str(data_MIvsCSK['winner'].value_counts()['Chennai Super Kings']),size=29,color='white')\nplt.xlabel('Winner',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.yticks(fontsize=0)\nplt.title('MI vs CSK - head to head')\nplt.show()","d8301117":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,8)\nsns.countplot(data_MIvsCSK['player_of_match'],order=data_MIvsCSK['player_of_match'].value_counts().index,palette='Set2')\nplt.title('All man of the match awards in MI-CSK games',fontsize=15)\nplt.yticks([1,2,3],[1,2,3],fontsize=15)\nplt.xticks(fontsize=15,rotation=90)\nplt.xlabel('Man of the match',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.show()","646c5d92":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,8)\nsns.countplot(data_MIvsCSK['venue'],order=data_MIvsCSK['venue'].value_counts().index,palette='Set2',hue=data['toss_decision'])\nplt.title('Toss decision at each venue in MIvCSK matches',fontsize=15)\nplt.yticks(fontsize=15)\nplt.xticks(fontsize=15,rotation=90)\nplt.xlabel('Venue',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.legend(loc=5,fontsize=15)\nplt.show()","cb46d96f":"sns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(18.5,8)\nsns.countplot(data_MIvsCSK['toss_winner'],order=data_MIvsCSK['toss_winner'].value_counts().index,palette='Set2',hue=data['toss_decision'])\nplt.title('Toss decision statistics for both team',fontsize=15)\nplt.yticks(fontsize=15)\nplt.xticks(fontsize=15)\nplt.xlabel('Toss winner',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.text(-0.25,6,str(int((7\/15)*100)+1)+'%',fontsize=29)\nplt.text(0.15,7,str(int((8\/15)*100))+'%',fontsize=29)\nplt.text(0.75,7,str(int((8\/13)*100)+1)+'%',fontsize=29)\nplt.text(1.15,4,str(int((5\/13)*100))+'%',fontsize=29)\nplt.legend(['Field first','Bat first'],loc='best',fontsize=15)\nplt.show()","4be72ed4":"## Top 10 players with most MOM awards","82249a43":"## Total no.of wins by each Team","238159dd":"#### Here we found that two different names of same city (Bangalore and Bangaluru) so we consider one unique name instead of two","e945b9e2":"## Data Cleaning Process","de6b90a2":"## No. of matches hosted at each stadium","34ea6c60":"## Decision based on toss winning for both teams","75ace818":"## MI vs CSK head to head","febdc585":"## Matches hosted in each city","3c96c21a":"# Exploratory Data Analysis (EDA) IPL Analysis 2008 To 2019","2344eef1":"## Eliminating redundancy\n\n#### There were two entries for the same city as 'Delhi Daredevils' and 'Delhi Capitals' Also we will consider those cities which are regular from first season to last season","6d1517bd":"#### this graph shows that what decision teams takes after winning toss","f995f44f":"## Final Result Of All Season","f38af245":"## MI vs CSK - Best performers","44563e4a":"## Toss decision statistics for all MI vs CSK matches - Venue wise"}}