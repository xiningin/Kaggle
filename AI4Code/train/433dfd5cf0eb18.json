{"cell_type":{"4ea2c976":"code","d6bf5a8a":"code","6d61b071":"code","e8ca0fc6":"code","5fff9415":"code","2eec3546":"code","a40396bc":"code","9fe99e07":"code","11fbd553":"code","6b18fe97":"code","0ac17173":"code","51743086":"code","398342d6":"code","6b35f2f8":"code","1dd389d7":"code","40b390ab":"code","049de53a":"code","8ea86576":"code","12d0101b":"code","832b24c5":"markdown","157ef0aa":"markdown","7e7d6f74":"markdown","f1805374":"markdown","f8d4e94f":"markdown","7c6f6cb6":"markdown","9d65b84a":"markdown","2096c3d9":"markdown","9d2c6012":"markdown","c0e1abcc":"markdown","b4b64aa9":"markdown","24a39a5a":"markdown","6c009b75":"markdown"},"source":{"4ea2c976":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","d6bf5a8a":"df = pd.read_csv('..\/input\/diabetes\/diabetes.csv')","6d61b071":"df.isnull().sum()","e8ca0fc6":"X = df.drop(['Outcome'], axis = 1)\ny = df['Outcome']","5fff9415":"df.plot","2eec3546":"from sklearn.linear_model import LogisticRegression \nfrom sklearn.model_selection import GridSearchCV ","a40396bc":"c_space = np.logspace(-5, 8, 15) \nparam_grid = {'C': c_space}","9fe99e07":"logreg = LogisticRegression()","11fbd553":"logreg_cv = GridSearchCV(logreg, param_grid, cv = 5)","6b18fe97":"logreg_cv.fit(X, y) ","0ac17173":"logreg_cv.best_params_","51743086":"logreg_cv.best_score_","398342d6":"from scipy.stats import randint \nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn.model_selection import RandomizedSearchCV","6b35f2f8":"param_dist = {\"max_depth\": [3, None], \n              \"max_features\": randint(1, 9), \n              \"min_samples_leaf\": randint(1, 9), \n              \"criterion\": [\"gini\", \"entropy\"]}","1dd389d7":"tree = DecisionTreeClassifier()","40b390ab":"tree_cv = RandomizedSearchCV(tree, param_dist, cv = 5)","049de53a":"tree_cv.fit(X, y)","8ea86576":"tree_cv.best_params_","12d0101b":"tree_cv.best_score_","832b24c5":"Necessary imports","157ef0aa":"Instantiating the GridSearchCV object","7e7d6f74":"Necessary imports","f1805374":"##  RandomizedSearchCV","f8d4e94f":"Creating the hyperparameter grid","7c6f6cb6":"Creating the hyperparameter grid","9d65b84a":"Instantiating Decision Tree classifier","2096c3d9":"Reference Links:\nhttps:\/\/www.geeksforgeeks.org\/ml-hyperparameter-tuning\/ ||\nhttps:\/\/towardsdatascience.com\/comparing-modern-scalable-hyperparameter-tuning-methods-dfe9661e947f","9d2c6012":"Print the tuned parameters and score","c0e1abcc":"Instantiating logistic regression classifier","b4b64aa9":"Instantiating RandomizedSearchCV object","24a39a5a":"Print the tuned parameters and score","6c009b75":"## GridSearchCV"}}