{"cell_type":{"6b2c85f6":"code","0d6c6254":"code","1fab04ab":"code","68e102b3":"code","26f23403":"code","3f012bb9":"code","b35f00cf":"code","40ceecfe":"code","c436edb5":"code","e0ee3163":"code","cb298269":"code","4dd5cae9":"code","9f63b680":"code","1fc91866":"code","76646727":"code","1b91fb3a":"code","7a3c17dc":"code","85d187e4":"code","3976eb11":"code","96a25340":"code","6768e609":"code","4c125b7b":"code","d57dd26e":"code","a267664c":"code","f3c2abef":"code","a0195e06":"code","91781e38":"code","8bfb09ca":"code","ca79f9b8":"code","93de5b2c":"code","17fd57a0":"code","bd9ca890":"code","d674c993":"code","833317d2":"code","22b5b100":"code","70175749":"code","780cd2cb":"code","c7bb9122":"code","b6dc5ec6":"code","94c6d8ff":"code","355f0ccd":"code","0a20a19b":"code","c7ba7c72":"code","14b8e04d":"code","c147d3f1":"code","6e7f1539":"code","ab571464":"code","01cd0dbf":"code","c8d21be6":"markdown","ca88a8e0":"markdown","94d0f2b7":"markdown","331162b8":"markdown","4799fff3":"markdown","ea604fc1":"markdown"},"source":{"6b2c85f6":"import gc\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\nimport seaborn as sns\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","0d6c6254":"data0=pd.read_csv('..\/input\/earthquake-in-japan\/japan-20190101_20211203_query.csv')\ndata0[1:2]","1fab04ab":"data0=data0.fillna('N')\ndata1=data0[['time','latitude','longitude','depth','mag',]]\ndata1[0:5]","68e102b3":"data2=pd.DataFrame(columns=data1.columns.tolist())\nfor i,item in enumerate(data1['time']):\n    data2=pd.concat([data2,data1.loc[i:i]])\ndata2=data2.sort_values(['time']).reset_index(drop=True)    ","26f23403":"from datetime import datetime as dt\ndata2a=data2.copy()\ndate=[]\nfor item in data2['time']:\n    date+=[dt.strptime(item[0:-5],'%Y-%m-%dT%H:%M:%S')]\ndata2a['date']=date\ndata2a","3f012bb9":"# 33-37,138-142\ndata4=data2a[data2a['latitude']>33][data2a['latitude']<37][data2a['longitude']>138][data2a['longitude']<142]\ndata4=data4.reset_index(drop=True)\ndata4","b35f00cf":"import plotly.express as px\nfig=px.scatter(x=data4['date'],y=data4['mag'])\nfig=px.scatter(data4, x=\"date\", y=\"mag\")\nfig.update_layout(title='Magnituide of earthquake around Tokyo in 2019-2021')\nfig.show()","40ceecfe":"data4['date2']=data4['date'].apply(lambda x: dt.strptime(str(x)[0:10],'%Y-%m-%d') )\ndata4","c436edb5":"import itertools\nfrom itertools import product\n\nlat=list(range(138*10,143*10+1))  # 138-143\nlong=list(range(33*10,38*10+1))   # 33-38\n\nLL=list(itertools.product(long,lat))\nLLdf=pd.DataFrame(LL)\nLLdf=LLdf\/10                   ######\n\nfor i in range(len(LLdf)):\n    LLdf.loc[i,'LL']=str([LLdf.iloc[i,0],(LLdf.iloc[i,1])])\n    \nLLdf[3]=list(range(len(LLdf)))\nLLdf.columns=['longitude','latitude','LL','location']\nLLdf","e0ee3163":"Name=LLdf['LL'].tolist()\nN=LLdf['location'].tolist()\nnormal_mapping=dict(zip(Name,N)) \nreverse_mapping=dict(zip(N,Name)) \nprint(max(N))","cb298269":"data4['lat2']=data4['latitude'].round(1)\ndata4['lon2']=data4['longitude'].round(1)\nlocation=[]\nfor a,b in zip(data4['lat2'],data4['lon2']):\n    location+=[[a,b]]\ndata4['LL']=location\ndata4['LL']=data4['LL'].astype(str)\ndata4['location']=data4['LL'].map(normal_mapping)\ndata4","4dd5cae9":"data4.info()","9f63b680":"data4['location'].max()","1fc91866":"sns.jointplot(data=data4, x='longitude', y='latitude', kind=\"kde\")\nplt.show()","76646727":"data5=data4[['date2','location']][data4['mag']>4.7].reset_index(drop=True)\ndata5[0:10]","1b91fb3a":"data5.info()","7a3c17dc":"data6=data5.sort_values('date2').reset_index(drop=True)\ndata6[0:10]","85d187e4":"item1=data6\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20,5\nplt.plot(item1.ds, item1.y)","3976eb11":"ph = Prophet()\nph.fit(item1)\nforecast1=ph.predict(item1)\nfigure = ph.plot(forecast1)\nfigure.show()","96a25340":"result1=forecast1[['ds','yhat','yhat_lower','yhat_upper']]\nresult1.tail()","6768e609":"y=item1['y']           #actual value\noof=result1['yhat']    #predicted value\nfig,ax = plt.subplots(figsize=(6,6))\nax.set_title('Prophet Predicts Earthquake Location',fontsize=20)\nax.set_xlabel('Actual location',fontsize=12)\nax.set_ylabel('Predicted location',fontsize=12)\nax.scatter(y,oof)","4c125b7b":"from datetime import timedelta\nstart0 = dt.strptime('2021-01-01','%Y-%m-%d').date()\nend0   = dt.strptime('2023-12-31','%Y-%m-%d').date()\nprint((end0-start0).days)","d57dd26e":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","a267664c":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0[0:30])","f3c2abef":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","a0195e06":"ph = Prophet()\nph.fit(item1)\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","91781e38":"result3=forecast3[['ds','yhat','yhat_lower','yhat_upper']][365:365*2]\nresult3","8bfb09ca":"result3['L0']=result3['yhat'].apply(lambda x: int(round(x)))\nresult3['L1']=result3['L0'].map(reverse_mapping)\nresult3=result3.reset_index(drop=True)\nresult3","ca79f9b8":"for i in range(len(result3)):\n    L0=result3.loc[i,'L0']\n    if L0>2600:\n        L0=2600\nresult3['L0'].max()","93de5b2c":"result3.info()","17fd57a0":"y=result3.loc[51:52,'L1'].tolist()[0]   # no location result predicted\nprint(y)\nprint(type(y))","bd9ca890":"drop1=[]\nfor i in range(len(result3)):\n    y1=result3.loc[i:i+1,'L1'].tolist()[0] \n    if type(y1)== float:\n        drop1+=[i]\nprint(drop1)","d674c993":"result3=result3.drop(index=drop1) #delete rows of no location data\nresult3","833317d2":"yhats=result3['yhat'].apply(lambda x: round(x))\nyhats.max()","22b5b100":"locs=[]\nfor item in yhats:\n    L0=reverse_mapping[item]\n    L1=L0[1:-1].split(', ')\n    L2=[float(L1[0]),float(L1[1])]\n    locs+=[L2]\nprint(locs[0:5])","70175749":"pred_loc=pd.DataFrame(locs)\npred_loc.columns=['latitude','longitude']\npred_loc","780cd2cb":"pred_loc.info()","c7bb9122":"mag_pred=pd.read_csv('..\/input\/earthquake-prediction-in-tokyo-by-prophet\/mag_forcast.csv')\nmag_pred=mag_pred.drop(index=drop1)     #delete rows of no location data\nmag_pred=mag_pred.reset_index(drop=True)\nmag_pred","b6dc5ec6":"mag_pred.info()","94c6d8ff":"mag_pred2=pd.concat([mag_pred,pred_loc],axis=1)\nprint(len(mag_pred2))\nmag_pred2","355f0ccd":"for i in range(len(mag_pred2)):\n    mag_pred2['yhat2']=mag_pred2['yhat'].apply(lambda x: int(x*2)\/2)\nmag_pred2b=mag_pred2[['ds','latitude','longitude','yhat2']]\nmag_pred2b","0a20a19b":"mag_pred2b['yhat2'].value_counts()","c7ba7c72":"#predicted location of the earthquakes in 2022\nsns.jointplot(data = mag_pred2b[mag_pred2b['yhat2']>5.0], x='longitude', y='latitude',  kind=\"kde\")\n#sns.jointplot(data=mag_pred2[mag_pred2['yhat2']>5], x='longitude', y='latitude', kind=\"kde\")\nplt.show()","14b8e04d":"mag_pred3=mag_pred2b[['latitude','longitude']][mag_pred2b['yhat2']>5]\nmag_pred3","c147d3f1":"import folium\nfrom folium import plugins\neq_map = folium.Map(location=[36,139],tiles='Stamen Terrain',zoom_start=7.0,min_zoom=2.0)\neq_map.add_child(plugins.HeatMap(mag_pred3))\neq_map","6e7f1539":"L2=result3[result3['ds']=='2022-05-12']['L1'].tolist()[0]\nL2","ab571464":"L3=L2[1:-1].split(', ')\nL4=[[float(L3[0]),float(L3[1])]]\nprint(L4)","01cd0dbf":"import folium\nfrom folium import plugins\neq_map = folium.Map(location=[36,139],tiles='Stamen Terrain',zoom_start=7.0,min_zoom=2.0)\neq_map.add_child(plugins.HeatMap(L4))\neq_map","c8d21be6":"# Prediction of Location of Huge Earthquake(mag > 5.5) in 2022","ca88a8e0":"# Prediction of Location on Maximum Earthquake in 2022\nMagnitude 6.1 Earthquake might occur on 2022-05-12<br\/>\nhttps:\/\/www.kaggle.com\/stpeteishii\/earthquake-prediction-in-tokyo-by-prophet","94d0f2b7":"# fit past and predict past+future","331162b8":"#### The future magnitude was predicted on the following notebook. Here the location of earthquake will be predicted. \n* https:\/\/www.kaggle.com\/stpeteishii\/earthquake-prediction-in-tokyo-by-prophet\n","4799fff3":"# fit past and predict past","ea604fc1":"## Merge magnitiude prediction result on location prediction"}}