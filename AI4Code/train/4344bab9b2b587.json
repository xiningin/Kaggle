{"cell_type":{"56b4f6fe":"code","a999ca20":"code","3235c0f7":"code","e6fb0df8":"code","46e82aee":"code","2b996795":"code","45aff87c":"code","17c157eb":"code","8ee06980":"code","8fc8f623":"code","c6db82ab":"code","f425be03":"code","2569cb09":"markdown","6cf74d36":"markdown","e78d5e7d":"markdown","b59b6b28":"markdown","ffc77093":"markdown","7738c408":"markdown","aeed27a2":"markdown","46242465":"markdown","12fb7c08":"markdown","66a05694":"markdown"},"source":{"56b4f6fe":"# import libs\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport random\nfrom statsmodels.tsa import stattools as tsat","a999ca20":"# calc autocorr for each asset\n# ignore time-discontinuity of observations\n\ndf_all = pd.read_parquet(f'..\/input\/ubiquant-parquet\/train_low_mem.parquet')\nassets = df_all['investment_id'].values\nassets = random.sample(list(assets), 5) \nRES = []\n\nfor asset in assets:\n    df = df_all[df_all['investment_id'] == asset]\n    x = df['time_id'].values\n    y = df['target'].values\n\n    nlags = min(len(x)-1, 10)\n    ac, qstats, pvals = tsat.acf(y,nlags=nlags, qstat=True, fft=False)\n    pac = tsat.pacf_ols(y, nlags = nlags)\n\n    time_id_min = np.min(x)\n    time_id_max = np.max(x)\n    time_id_span = time_id_max - time_id_min\n    ac_max_lag = np.argmax(np.abs(ac[1:])) + 1\n    ac_max = ac[ac_max_lag]\n    LBtest_pval = pvals[-1]\n    pac_max_lag = np.argmax(np.abs(pac[1:])) + 1\n    pac_max = pac[pac_max_lag]\n\n    res = np.array([asset, time_id_min, time_id_max, time_id_span, ac_max_lag, ac_max, LBtest_pval, pac_max_lag, pac_max])\n    RES.append(res)\n\ncolumns=['asset', 'time_id_min', 'time_id_max', 'time_id_span', 'ac_max_lag', 'ac_max', 'LBtest_pval', 'pac_max_lag', 'pac_max']\nex_res_df = pd.DataFrame(np.stack(RES), columns=columns)","3235c0f7":"ex_res_df.head()","e6fb0df8":"res_df = pd.read_parquet('..\/input\/ubiquantautocorr\/autocorr_analysis.parquet')","46e82aee":"res_df['ac_max'].hist(bins=30, range=[-0.3,0.3])","2b996795":"res_df['ac_max_lag'].hist()","45aff87c":"res_df[res_df['ac_max_lag']==1]['ac_max'].hist(bins=30, range=[-0.3,0.3])","17c157eb":"sgn_res_df = res_df[res_df['LBtest_pval'] <= 0.05]\nsgn_res_df['ac_max'].hist(bins=30, range=[-0.3,0.3])","8ee06980":"sgn_res_df[sgn_res_df['ac_max_lag'] == 1]['ac_max'].hist(bins=30, range=[-0.3,0.3])","8fc8f623":"res_df['pac_max_lag'].hist()","c6db82ab":"res_df['pac_max'].hist(bins=30, range=[-0.3,0.3])","f425be03":"res_df[res_df['pac_max_lag']==1]['pac_max'].hist(bins=30, range=[-0.3,0.3])","2569cb09":"# Details\n- The statistics are calculated by codes like below.","6cf74d36":"- I calculated entire res_df on local.","e78d5e7d":"### Please consider to upvote or comment if you find it interesting :-) ","b59b6b28":"- Partial autocorrelation has a similar property.","ffc77093":"## features in result\n- asset: Investment_id.\n- ac_max_lag: A lag maximize autocorr function.\n- ac_max: Maximum value of autocorr function.\n- LBtest_pval: P-value of Ljung-Box Q-statistic. If sufficiently small (for example, <0.05), we can reject the hypothesis that \"there exist no autocorrelation.\"\n- pac_max_lag: A lag maximize partial autocorr function.\n- pac_max: Maximum value of partial autocorr function.","7738c408":"- The absolute values of the largest autocorrelations are concentrated around 0.1. \n- It seems that there are about the same number of assets with positive autocorrelation and negative autocorrelation.","aeed27a2":"- Similar results can be obtained by taking out only those **assets that are found to have at least one significant autocorrelation in the LB-test**.","46242465":"- The time lag with the highest autocorrelation is **concentrated at 1.**","12fb7c08":"- Look at the distribution of the autocorrelation of assets most autocorrelated with one period ago.\n- Interestingly, **assets most autocorrelated with one period ago** tend to have **positive autocorrelation.**","66a05694":"# Asset-wise Target Autocorrelation\n- In this notebook, we calculated **the autocorrelation of the time series of returns** up to 10 periods ago for each asset.\n- The lags with the largest autocorrelations were tabulated and their properties were examined.\n- About autocorrelation: https:\/\/en.wikipedia.org\/wiki\/Autocorrelation\n\n## Conclusion\n- **There are many assets that have autocorrelation of about +0.1~+0.2 with one period ago**.\n- You can use the statistics: https:\/\/www.kaggle.com\/farcii\/ubiquantautocorr"}}