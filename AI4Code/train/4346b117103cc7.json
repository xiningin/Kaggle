{"cell_type":{"9f81cf98":"code","d138a883":"code","4edf98df":"code","b832180d":"code","1a194b99":"code","e26d56e5":"code","814b37e7":"markdown","4b9768e5":"markdown","75f81418":"markdown","b0714448":"markdown","b3175994":"markdown"},"source":{"9f81cf98":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","d138a883":"def calculate_phi(angle, n=4 \/ 3):\n    \"\"\"\n    \u7403\u5f62\u306e\u6c34\u6ef4\u306b\u5149\u304c\u5165\u5c04\u3057\u305f\u3068\u304d\u306b\u5165\u5c04\u5149\u7dda\u3068\u5c04\u51fa\u5149\u7dda\u304c\u306a\u3059\u78ba\u5ea6\u3092\u8a08\u7b97\u3059\u308b\n    \n    Args:\n        angle: \n            \u5165\u5c04\u5149\u7dda\u306e\u5165\u5c04\u89d2\u5ea6. degress.\n        n: \n            \u7a7a\u6c17\u3068\u6c34\u3068\u306e\u5c48\u6298\u7387. \n            \u5149\u306e\u5834\u5408 1.3 \u7a0b\u5ea6\u3068\u306a\u308b\u304c, \u6ce2\u9577\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u5024\u3092\u53d6\u308b. \n        \n    Returns:\n        phi:\n            \u5c04\u51fa\u3055\u308c\u308b\u5149\u306e\u89d2\u5ea6. Degress.\n    \"\"\"\n    angle = angle \/ 180 * np.pi\n    r = np.arcsin(np.sin(angle) \/ n)\n    phi = 4 * r - 2 * angle\n    \n    # degree \u3078\u5909\u63db\n    phi = phi * 180 \/ np.pi\n    return phi","4edf98df":"inputs = np.linspace(0, 90, 1001)\noutputs = calculate_phi(inputs)","b832180d":"fig, ax = plt.subplots(figsize=(8, 5))\nax.plot(inputs, outputs)\nax.grid()\nax.set_xlabel('Input Degree')\nax.set_ylabel(\"Output Degree\")\nax.set_title(f\"input vs output \/ Max Output: {outputs.max():.3f}[deg]\")\nfig.tight_layout()","1a194b99":"from dataclasses import dataclass\n\n@dataclass\nclass Reflactive:\n    name: str\n    n: float\n    color: str\n\nreflaxtives = [\n    Reflactive(\"blue\", 1.35, color=\"purple\"),\n    Reflactive(\"blue\", 1.34, color=\"b\"),\n    Reflactive(\"yellow\", 1.325, color=\"y\"),\n    Reflactive(\"red\", 1.32, color=\"r\"),\n]","e26d56e5":"fig, ax = plt.subplots(figsize=(8, 5))\n\nfor ref in reflaxtives:\n    outputs = calculate_phi(inputs, n=ref.n)\n    ax.plot(inputs, outputs, label=ref.name, c=ref.color)\n\nax.grid()\nax.set_xlabel('Input Degree')\nax.set_ylabel(\"Output Degree\")\nax.set_title(f\"input vs output \/ Max Output: {outputs.max():.3f}[deg]\")\nax.legend()\nfig.tight_layout()","814b37e7":"# About\n\n![](https:\/\/news.1242.com\/wp-content\/uploads\/2021\/03\/nizi3-1.jpg)\n\n\u592a\u967d\u306e\u5149\u3092\u7a7a\u6c17\u4e2d\u306e\u6c34\u6ef4\u304c\u53cd\u5c04\u3057\u3066\u8d77\u3053\u308b\u306e\u304c\u8679\u3002\u8679\u304c\u898b\u3048\u308b\u78ba\u5ea6\u306f\u3060\u3044\u305f\u3044 42 \u5ea6\u3067\u3042\u308b\u304c\u3001\u305d\u308c\u3092\u5c48\u6298\u306e\u6cd5\u5247\u304b\u3089\u5c0e\u304f\u3002","4b9768e5":"* \u8d64\u8272\u306e\u65b9\u304c\u89d2\u5ea6\u304c\u5927\u304d\u304f\u3001\u9752\u8272\u306b\u306a\u308b\u306b\u5f93\u3063\u3066\u89d2\u5ea6\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u8679\u304c\u898b\u3048\u308b\u3068\u304d\u306b\u306f\u4e0b\u306b\u9752\u8272(\u7d2b) \u304c\u3001\u4e0a\u306b\u8d64\u8272\u304c\u898b\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u3068\u3044\u3046\u308f\u3051\u3067\u5148\u306e\u30a4\u30e9\u30b9\u30c8\u306e\u9806\u756a\u306f\u305f\u3060\u3057\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n![](https:\/\/news.1242.com\/wp-content\/uploads\/2021\/03\/nizi3-1.jpg)","75f81418":"## \u5b9f\u9a131\n\n\u767d\u8272\u5149\u3068\u3057\u3066 n \u3092\u56fa\u5b9a\u3057\u3066\u5165\u5c04\u89d2\u5ea6\u306b\u5bfe\u3057\u3066\u306e\u53cd\u5c04\u78ba\u5ea6\u3092\u6c42\u3081\u308b\u3002","b0714448":"* \u5165\u5c04\u89d2\u304c\u5927\u304d\u304f\u306a\u308b\u306b\u9023\u308c\u3066\u3060\u3093\u3060\u3093\u3068\u5c04\u51fa\u89d2\u5ea6\u306f\u5927\u304d\u304f\u306a\u308a, 42 \u5ea6\u3067\u30d4\u30fc\u30af\u306b\u306a\u308b\u3002\n* \u53cd\u5c04\u3055\u308c\u308b\u3072\u304b\u308a\u3068\u3057\u3066\u76ee\u306b\u5165\u3063\u3066\u304f\u308b\u306e\u306f output \u306e\u89d2\u5ea6\u306b\u306a\u308a\u3001\u4f3c\u305f\u89d2\u5ea6\u304c\u591a\u3044\u9818\u57df\u307b\u3069\u8a8d\u8b58\u3055\u308c\u3084\u3059\u3044\u3002\u30b0\u30e9\u30d5\u3092\u898b\u308b\u3068\u30d4\u30fc\u30af\u3042\u305f\u308a\u3067\u5e73\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u305f\u304f\u3055\u3093\u306e\u5149\u304c42\u5ea6\u524d\u5f8c\u3067\u53cd\u5c04\u3059\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3057\u305f\u304c\u3063\u3066\u8679\u304c\u6fc3\u304f\u898b\u3048\u308b\u306f\u4ef0\u304e\u898b\u306642\u5ea6\u4ed8\u8fd1\u306b\u306a\u308b\u3002","b3175994":"## \u5b9f\u9a132\n\n\u4e0a\u8a18\u3067\u306f\u3072\u3068\u3064\u306e\u5c48\u6298\u7387 $n$ \u3092\u7528\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u306f\u5149\u306e\u8272 (\u6ce2\u9577) \u306b\u3088\u3063\u3066\u5c48\u6298\u7387\u306f\u5909\u5316\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u8272\u306b\u3088\u3063\u3066\u5c04\u51fa\u89d2\u5ea6\u306f\u5909\u308f\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\u3002"}}