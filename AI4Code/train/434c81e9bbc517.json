{"cell_type":{"ebe6a0d8":"code","dfbc4dd1":"code","7e176aaf":"code","de50253a":"code","c889c4ee":"code","d24edf33":"code","5af4b934":"code","780b9c01":"code","2364534b":"markdown","bf110278":"markdown"},"source":{"ebe6a0d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dfbc4dd1":"# merge weather_train & weather_test\nweather_train = pd.read_csv('..\/input\/ashrae-energy-prediction\/weather_train.csv')\nweather_test = pd.read_csv('..\/input\/ashrae-energy-prediction\/weather_test.csv')\nweather_merged = weather_train.append(weather_test)\nweather_merged['timestamp'] = pd.to_datetime(weather_merged['timestamp'])\nweather_merged.set_index('timestamp', inplace=True)\n\nweather_merged","7e176aaf":"#extract temperature from weather data\ndf_temperature_pivot = weather_merged.reset_index().pivot_table(index='timestamp', columns='site_id', values='air_temperature')\ndf_temperature_pivot.columns = 'site_'+df_temperature_pivot.columns.astype('str')\n\ndf_temperature_pivot","de50253a":"#load external temperature data\ntemperature_external = pd.read_csv(\"..\/input\/historical-hourly-weather-data\/temperature.csv\")\ntemperature_external['datetime'] = pd.to_datetime(temperature_external['datetime'])\ntemperature_external.set_index('datetime', inplace=True)\ntemperature_external = temperature_external-273.15\ntemperature_external = temperature_external.merge(df_temperature_pivot, left_index=True, right_index=True, how='inner')\ntemperature_external = temperature_external.dropna()\n\ntemperature_external","c889c4ee":"#calculate correlations between sites\ndf_corr = temperature_external.corr(method='spearman')\nlist_site = df_temperature_pivot.columns\ndf_corr = df_corr[list_site]\ndf_corr = df_corr.drop(list_site)\ndf_corr","d24edf33":"#sns heat map\nfig, ax = plt.subplots(figsize=(30,15))   \nsns.heatmap(df_corr, annot=True, cmap=\"YlGnBu\", vmin=0.8, vmax=1.0)","5af4b934":"#Get cities!\ndf_findCity = pd.concat([df_corr.idxmax(),df_corr.max()], axis=1).reset_index().rename(columns={'index':'site',0:'city',1:'corr'})\ndf_findCity","780b9c01":"#compare sites & cities in plot\nfor city, site, corr in zip(df_findCity['city'],df_findCity['site'],df_findCity['corr']):\n    if corr > 0.9:\n        print('City: ' + city)\n        print('Site: ' + site)   \n        temperature_external[[city,site]].loc['2016'].plot(figsize=(15,8), alpha=0.5)\n        plt.show()        ","2364534b":"According to some discussion and study:\n\nhttps:\/\/www.kaggle.com\/c\/ashrae-energy-prediction\/discussion\/114483#661205\n\nhttps:\/\/www.kaggle.com\/c\/ashrae-energy-prediction\/discussion\/113772#661207\n\nhttps:\/\/www.kaggle.com\/c\/ashrae-energy-prediction\/discussion\/114874\n\nUS sites: 0,2,3,4,6,8,9,10,13,14,15\n\nEU sites: 1,5,12\n\nCA sites: 7,11\n\nMake some correction, and the summary about countries\/cities is as following:\n\n(Cities might not be 100% correct, probably just nearby)\n![image.png](attachment:image.png)","bf110278":"Hey guys!\n\nIn \"External Data Disclosure Thread\", I just found an intersting external dataset of weather data:\nhttps:\/\/www.kaggle.com\/selfishgene\/historical-hourly-weather-data\n\nAfter comparing the dataset with competition ones, amazingly I found those corresponding cites for most sites (not exact but at least very close).\n\nHope this helps and look forward to more findings!"}}