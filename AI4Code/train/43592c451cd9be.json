{"cell_type":{"fa786d38":"code","fd51931b":"code","102e24c5":"code","9abd72a4":"code","0d3017ad":"code","12847092":"code","20b3fcd9":"code","30e5815f":"code","89d1500a":"code","c556e4bd":"code","1ff44c84":"code","8bdc7d1c":"code","2c9c357b":"code","1a6194ad":"code","1fe5f384":"code","a5833ba6":"code","f11163cb":"code","6fd74493":"code","94771b07":"code","92af310f":"code","73d439bc":"code","5f1c0273":"code","1a995005":"code","5a33e7de":"code","2297f5f9":"code","a6fc30e1":"code","196371ef":"code","17f90460":"code","6fa950e6":"code","c2c48d27":"code","b4b94cc6":"code","9bad3b58":"markdown","eae29c20":"markdown","fbd91a31":"markdown","a583b09b":"markdown","3256a7ca":"markdown","db7d1120":"markdown","3b43fe21":"markdown","00896b5c":"markdown","d605fdf2":"markdown","226182ed":"markdown","2b4df1c9":"markdown","e9f4ac20":"markdown","ea963309":"markdown","278e6696":"markdown","f0d27a88":"markdown","3c4b0234":"markdown","fc3beb45":"markdown","5c136a87":"markdown","5f4e5872":"markdown","72906b2d":"markdown","1cfc14bd":"markdown","1dd353f2":"markdown","aa6706e3":"markdown","8bf19fb6":"markdown","fa6a4ecc":"markdown","7f5fef5d":"markdown","a2e1aeaa":"markdown","7b30278b":"markdown","91d404ce":"markdown","18615178":"markdown"},"source":{"fa786d38":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nimport random\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.cluster import KMeans","fd51931b":"data = pd.read_csv(\"..\/input\/bank-customer-segmentation\/bank_transactions.csv\")\ndata","102e24c5":"data.isna().sum()","9abd72a4":"data.drop([\"TransactionID\"],axis=1,inplace=True)","0d3017ad":"data[data.CustomerDOB.isna()]","12847092":"data.CustGender.fillna(data.CustGender.mode().values[0],inplace=True)\ndata.CustLocation.fillna(data.CustLocation.mode().values[0],inplace=True)\ndata.CustAccountBalance.fillna(data.CustAccountBalance.median(),inplace=True)","20b3fcd9":"dy = str(int(pd.Series([int(i.split(\"\/\")[-3]) for i in data.CustomerDOB.dropna().values]).mode().values[0]))\nmn = str(int(pd.Series([int(i.split(\"\/\")[-2]) for i in data.CustomerDOB.dropna().values]).mode().values[0]))\nyr = str(int(pd.Series([int(i.split(\"\/\")[-1]) for i in data.CustomerDOB.dropna().values]).mode().values[0]))","30e5815f":"data.CustomerDOB.fillna(dy + \"\/\" + mn + \"\/\" + yr,inplace=True)","89d1500a":"import datetime\nages = []\nmonths = [int(i.split(\"\/\")[-2]) for i in data.CustomerDOB.values]\nyears = [int(i.split(\"\/\")[-1]) for i in data.CustomerDOB.values]\nfor i in years:\n    if(len(str(i))) == 4:\n        ages.append(2021 - i)\n    else:\n        ages.append(2021 - (1900 + i))","c556e4bd":"plt.hist(ages)\nplt.title(\"Ages distribution\")\nplt.xlabel(\"Bins\")\nplt.ylabel(\"Count\")\nplt.show()","1ff44c84":"for i in range(len(ages)):\n    if ages[i] > 100:\n        ages[i] = 100","8bdc7d1c":"plt.hist(ages)\nplt.title(\"Ages distribution\")\nplt.xlabel(\"Bins\")\nplt.ylabel(\"Count\")\nplt.show()","2c9c357b":"data[\"CustomerAge\"] = ages","1a6194ad":"from datetime import datetime\ntr_d = [i.split(\"\/\")[0] for i in data.TransactionDate.values]\ntr_m = [i.split(\"\/\")[1] for i in data.TransactionDate.values]\ntr_y = [i.split(\"\/\")[2] for i in data.TransactionDate.values]\ndow = [datetime(int(tr_d[i]),int(tr_m[i]),int(tr_y[i])).strftime(\"%A\") for i in range(len(tr_d))]","1fe5f384":"data[\"TransactionDay\"] = tr_d\ndata[\"TransactionMonth\"] = tr_m\ndata[\"TransactionYear\"] = tr_y\ndata[\"TransactionDOW\"] = dow","a5833ba6":"hh = [int(datetime.fromtimestamp(i).strftime(\"%H\")) for i in data.TransactionTime.values]","f11163cb":"time = []\nfor i in hh:\n    if i >=0 and i < 13:\n        time.append(\"Morning\")\n    elif i >= 13 and i<=17:\n        time.append(\"Afternoon\")\n    elif i > 17 and i <= 19:\n        time.append(\"Evening\")\n    elif i > 19:\n        time.append(\"Night\")","6fd74493":"data[\"TransactionHourOfDay\"] = hh\ndata[\"TransactionTimeOfDay\"] = time","94771b07":"data.drop([\"CustomerDOB\"],inplace=True,axis=1)","92af310f":"data","73d439bc":"cnames = {\n'aqua': '#00FFFF',\n'aquamarine': '#7FFFD4',\n'bisque': '#FFE4C4',\n'black': '#000000',\n'blanchedalmond': '#FFEBCD',\n'blue': '#0000FF',\n'blueviolet': '#8A2BE2',\n'brown': '#A52A2A',\n'burlywood': '#DEB887',\n'cadetblue': '#5F9EA0',\n'chartreuse': '#7FFF00',\n'chocolate': '#D2691E',\n'coral': '#FF7F50',\n'cornflowerblue': '#6495ED',\n'crimson': '#DC143C',\n'cyan': '#00FFFF',\n'darkblue': '#00008B',\n'darkcyan': '#008B8B',\n'darkgoldenrod': '#B8860B',\n'darkgray': '#A9A9A9',\n'darkgreen': '#006400',\n'darkkhaki': '#BDB76B',\n'darkmagenta': '#8B008B',\n'darkolivegreen': '#556B2F',\n'darkorange': '#FF8C00',\n'darkorchid': '#9932CC',\n'darkred': '#8B0000',\n'darksalmon': '#E9967A',\n'darkseagreen': '#8FBC8F',\n'darkslateblue': '#483D8B',\n'darkslategray': '#2F4F4F',\n'darkturquoise': '#00CED1',\n'darkviolet': '#9400D3',\n'deeppink': '#FF1493',\n'deepskyblue': '#00BFFF',\n'dodgerblue': '#1E90FF',\n'firebrick': '#B22222',\n'forestgreen': '#228B22',\n'fuchsia': '#FF00FF',\n'gainsboro': '#DCDCDC',\n'gold': '#FFD700',\n'goldenrod': '#DAA520',\n'gray': '#808080',\n'green': '#008000',\n'greenyellow': '#ADFF2F',\n'hotpink': '#FF69B4',\n'indianred': '#CD5C5C',\n'indigo': '#4B0082',\n'khaki': '#F0E68C',\n'lavender': '#E6E6FA',\n'lawngreen': '#7CFC00',\n'lightcoral': '#F08080',\n'lightcyan': '#E0FFFF',\n'lightgreen': '#90EE90',\n'lightsalmon': '#FFA07A',\n'lightseagreen': '#20B2AA',\n'lightskyblue': '#87CEFA',\n'lightsteelblue': '#B0C4DE',\n'lime': '#00FF00',\n'limegreen': '#32CD32',\n'linen': '#FAF0E6',\n'magenta': '#FF00FF',\n'maroon': '#800000',\n'mediumaquamarine': '#66CDAA',\n'mediumblue': '#0000CD',\n'mediumorchid': '#BA55D3',\n'mediumpurple': '#9370DB',\n'mediumseagreen': '#3CB371',\n'mediumslateblue': '#7B68EE',\n'mediumspringgreen': '#00FA9A',\n'mediumturquoise': '#48D1CC',\n'mediumvioletred': '#C71585',\n'midnightblue': '#191970',\n'mistyrose': '#FFE4E1',\n'moccasin': '#FFE4B5',\n'navy': '#000080',\n'olive': '#808000',\n'olivedrab': '#6B8E23',\n'orange': '#FFA500',\n'orangered': '#FF4500',\n'orchid': '#DA70D6',\n'palegoldenrod': '#EEE8AA',\n'palegreen': '#98FB98',\n'paleturquoise': '#AFEEEE',\n'palevioletred': '#DB7093',\n'papayawhip': '#FFEFD5',\n'peachpuff': '#FFDAB9',\n'peru': '#CD853F',\n'pink': '#FFC0CB',\n'plum': '#DDA0DD',\n'powderblue': '#B0E0E6',\n'purple': '#800080',\n'red': '#FF0000',\n'rosybrown': '#BC8F8F',\n'royalblue': '#4169E1',\n'saddlebrown': '#8B4513',\n'salmon': '#FA8072',\n'sandybrown': '#FAA460',\n'seagreen': '#2E8B57',\n'sienna': '#A0522D',\n'silver': '#C0C0C0',\n'skyblue': '#87CEEB',\n'slateblue': '#6A5ACD',\n'slategray': '#708090',\n'springgreen': '#00FF7F',\n'steelblue': '#4682B4',\n'tan': '#D2B48C',\n'teal': '#008080',\n'thistle': '#D8BFD8',\n'tomato': '#FF6347',\n'turquoise': '#40E0D0',\n'violet': '#EE82EE',\n'yellow': '#FFFF00',\n'yellowgreen': '#9ACD32'}\ncolors = list(cnames.keys())","5f1c0273":"plt.rcParams[\"axes.linewidth\"]  = 0\nplt.rcParams.update({'axes.facecolor':'whitesmoke'})","1a995005":"random.shuffle(colors)\nun, count = np.unique(data.CustGender,return_counts=True)\nplt.title(\"Gender Distribution\")\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.bar(un,count,color=colors)\nplt.show()","5a33e7de":"plt.figure(figsize=(10,5))\nplt.title(\"Customer Age Distribution\")\nplt.xlabel(\"Customer Age Bins\")\nplt.ylabel(\"Count\")\nplt.hist(data.CustomerAge,bins=5,color=\"green\")\nplt.tick_params(bottom=False,left=False)\nplt.ticklabel_format(style='plain')\nplt.show()","2297f5f9":"plt.figure(figsize=(10,5))\nplt.title(\"Account Balance Distribution\")\nplt.xlabel(\"Account Balance Bins\")\nplt.ylabel(\"Count\")\nplt.hist(data.CustAccountBalance,bins=5,color=\"aqua\")\nplt.tick_params(bottom=False,left=False)\nplt.ticklabel_format(style='plain')\nplt.show()","a6fc30e1":"plt.figure(figsize=(10,5))\nplt.title(\"Transaction Amount Distribution\")\nplt.xlabel(\"Transaction Amount Bins\")\nplt.ylabel(\"Count\")\nplt.hist(data[\"TransactionAmount (INR)\"],bins=5,color=\"darkgoldenrod\")\nplt.tick_params(bottom=False,left=False)\nplt.ticklabel_format(style='plain')\nplt.show()","196371ef":"random.shuffle(colors)\nplt.figure(figsize=(10,5))\nun, count = np.unique(data.TransactionMonth,return_counts=True)\nplt.title(\"Transaction Month Distribution\")\nplt.xlabel(\"Transaction Month\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.bar(un, count,color=colors)\nplt.show()","17f90460":"plt.figure(figsize=(20,5))\nrandom.shuffle(colors)\nplt.subplot(1,2,1)\nplt.xlabel(\"Day of Month\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.title(\"Transaction Distribution for August Month\")\nun, count = np.unique(data[data.TransactionMonth == '8'].TransactionDay.values,return_counts=True)\nun, count = zip(*sorted(zip([int(i) for i in un], count)))\nplt.bar([str(i) for i in un],count,color=colors)\n\nplt.subplot(1,2,2)\nrandom.shuffle(colors)\nun, count = np.unique(data[data.TransactionMonth == '9'].TransactionDay.values,return_counts=True)\nun, count = zip(*sorted(zip([int(i) for i in un], count)))\nplt.xlabel(\"Day of Month\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.title(\"Transaction Distribution for September Month\")\nplt.bar([str(i) for i in un],count,color=colors)\nplt.tight_layout()\n\nplt.figure(figsize=(20,5))\nrandom.shuffle(colors)\nun, count = np.unique(data[data.TransactionMonth == '10'].TransactionDay.values,return_counts=True)\nun, count = zip(*sorted(zip([int(i) for i in un], count)))\nplt.xlabel(\"Day of Month\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.title(\"Transaction Distribution for October Month\")\nplt.bar([str(i) for i in un],count,color=[\"aqua\",\"green\"])\nplt.show()","6fa950e6":"plt.figure(figsize=(15,5))\nrandom.shuffle(colors)\nun, count = np.unique(data.TransactionDOW.values,return_counts=True)\ncount, un = zip(*sorted(zip(count, un)))\nplt.title(\"Transaction Day of Week Distribution\")\nplt.xlabel(\"Day of Week\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.bar(un, count, color=colors)\nplt.show()","c2c48d27":"plt.figure(figsize=(15,5))\nrandom.shuffle(colors)\nun, count = np.unique(data.TransactionHourOfDay.values.astype('int32'),return_counts=True)\nun, count = zip(*sorted(zip(un, count)))\nplt.title(\"Transaction Hour of Day Distribution\")\nplt.xlabel(\"Hour of Day\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.bar([str(i) for i in un], count, color=colors)\nplt.show()","b4b94cc6":"plt.figure(figsize=(15,5))\nrandom.shuffle(colors)\nun, count = np.unique(data.TransactionTimeOfDay.values,return_counts=True)\ncount, un = zip(*sorted(zip(count, un)))\nplt.title(\"Transaction Time of Day Distribution\")\nplt.xlabel(\"Time of Day\")\nplt.ylabel(\"Count\")\nplt.tick_params(bottom=False,left=False)\nplt.bar(un, count, color=colors)\nplt.show()","9bad3b58":"<p><b>Inference : <\/b>Account balances domainte in the region of <b>2 Cr and above<\/b> showing that the majority of population is <b>Moderately rich<\/b> customers.<\/p>","eae29c20":"<h4>Transaction Month Distribution<\/h4>","fbd91a31":"<h4>Transaction Hour of Day Distribution<\/h4>","a583b09b":"<h4>Gender Distribution<\/h4>","3256a7ca":"<h4>Customer Account Balance<\/h4>","db7d1120":"<p><b>Inference : <\/b>An almost equal graph with slight lowering during <b>Mondays<\/b>, <b>Saturdays<\/b> and <b>Wednesdays<\/b>.<\/p>","3b43fe21":"<p>Date is present in dd\/mm\/yyyy format. Split each field and take mode.<\/p>","00896b5c":"<h1>Data Loading<\/h1>","d605fdf2":"<p><b>Inference : <\/b>Relatively, transactions until later afternoon is higher in number that the transactions after 3pm.<\/p>","226182ed":"<p>Since we obtained Customer Age, drop CustomerDOB column. Transaction Date column was split, hence remove that too. Transaction time column was split into hour of day, hence the unix timestamp can be removed.<\/p>","2b4df1c9":"<p><b>Inference : <\/b><b>August<\/b> followed by <b>September<\/b> and <b>October<\/b> is the order of months in number of transactions.<\/p>","e9f4ac20":"<h1>Bank Transaction Dataset - EDA + Segmentation<\/h1>\n<img style=\"margin:auto;width : 100%;\" src=\"https:\/\/cdn.ihsmarkit.com\/www\/blog\/ra-close-up-image-of-a-stock-market-graph-Getty-1213574690-post.jpg\">","ea963309":"<h4>Customer Age<\/h4>","278e6696":"<h3>Calculating age of each customer<\/h3>","f0d27a88":"<h3>Convert transaction time from unix timestamp to readable date<\/h3>","3c4b0234":"<p>Customer ages range from 22 - 222. Mostly the upper range is a mistake, hence clip those values to 100<\/p>","fc3beb45":"<p><b>Inference : <\/b>Customers with age upto <b>35<\/b> are in majority followed by <b>35 - 50<\/b>.<\/p>","5c136a87":"<h4>Transaction Time of Day Distribution<\/h4>","5f4e5872":"<p><b>Inference : <\/b><b>Male Customers<\/b> are large in number followed by <b>Female<\/b> and <b>Transgender<\/b> customers.<\/p>","72906b2d":"<p><b>Inference : <\/b>Transactions during <b>Morning<\/b> and <b>Afternoon<\/b> are at peak, followed by <b>Night<\/b> and <b>Evening<\/b>.<\/p>","1cfc14bd":"<h3>Filling in missing values<\/h3>","1dd353f2":"<p><b>Inference : <\/b>The Maximum transaction amount is upto <b>3.5 Lacs<\/b> showing <b>Low - Moderate<\/b> transaction amounts.<\/p>","aa6706e3":"<h1>Exploratory Data Analysis<\/h1>","8bf19fb6":"<h1>Data Engineering<\/h1>\n<ul>\n    <li>Remove unnecessary columns<\/li>\n    <li>Fill in missing values<\/li>\n    <li>Calculate age of each customer<\/li>\n    <li>Convert timestamp to fixed date and time<\/li>\n    <li>Split date column into month and year<\/li>\n    <li>Calcualate day of week from date columns<\/li>\n<\/ul>","fa6a4ecc":"<h4>Transaction Amount Distribution<\/h4>","7f5fef5d":"<h3>Split transaction date column<\/h3>","a2e1aeaa":"<h1 style=\"margin:auto;text-align:center;background-color:rgb(232, 230, 223);border-radius : 5px;padding-top : 25px;padding-bottom : 25px; width : 80%;font-size : 25px;\">Thank you for reading! Upvote and share my notebook if you liked it<\/h1>","7b30278b":"<h3>Remove ID columns<\/h3>","91d404ce":"<p><b>Inference : <\/b><b>August<\/b> month showed somewhat equal transactions throughout the month with few peaks during <b>Early<\/b>, <b>Mid<\/b> and <b>End<\/b> of the month.<\/p>","18615178":"<h4>Transaction Day of Week<\/h4>"}}