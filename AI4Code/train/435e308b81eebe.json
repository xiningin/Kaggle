{"cell_type":{"eaac5ebb":"code","3ba9e601":"code","ca05dea0":"code","d535ec9a":"code","0c8719c0":"code","6ba68139":"code","3e9b7c8d":"code","28ff629b":"code","c539908c":"code","75c850e2":"code","f9d451eb":"code","e27ffff8":"code","f03c848e":"code","ac0ce0c7":"code","1c8e47b0":"code","aff87ae0":"code","62deaa5e":"code","5c47e796":"code","a2c9acf6":"code","f60e6aa4":"code","bfe279e2":"code","18b589f1":"code","920c3526":"code","7c636d6f":"code","a7806f90":"code","0e7d8ee7":"code","0d302b2c":"code","c2203471":"markdown"},"source":{"eaac5ebb":"#Data Analysis\n#Understanding data\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\npd.pandas.set_option('display.max_columns',None)","3ba9e601":"dataset = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")","ca05dea0":"dataset.head()","d535ec9a":"print(dataset.shape)","0c8719c0":"# Feature Engineering\n# 1 -step make the list of features which has missing values\nfeatures_with_na=[features for features in dataset.columns if dataset[features].isnull().sum()>1]\n# 2- step print the feature name and the percentage of missing values\n\nfor feature in features_with_na:\n    print(feature, np.round(dataset[feature].isnull().mean(), 4),  ' % missing values')","6ba68139":"# finding the relationship between missing values and Sales price\nfor feature in features_with_na:\n    data = dataset.copy()\n    \n    # Make a variable that indicates 1 if the observation was missing or zero otherwise\n    data[feature] = np.where(data[feature].isnull(), 1, 0)\n    \n    # Calculate the mean SalePrice where the information is missing or present\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.title(feature)\n    plt.show()","3e9b7c8d":"print(\"Id of Houses {}\".format(len(dataset.Id)))","28ff629b":"# list of numerical variables\nnumerical_features = [feature for feature in dataset.columns if dataset[feature].dtypes != 'O']\n\nprint('Number of numerical variables: ', len(numerical_features))\n\n# visualise the numerical variables\ndataset[numerical_features].head()","c539908c":"# list of variables that contain year information\nyear_feature = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature]\n\nyear_feature","75c850e2":"# Explore the content of these year variables\nfor feature in year_feature:\n    print(feature, dataset[feature].unique())","f9d451eb":"#Analyze the Temporal Datetime Variables\n#Check whether there is a relation between year the house is sold and the sales price\n\ndataset.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")","e27ffff8":"year_feature","f03c848e":"#Compare the difference between All years feature with SalePrice\n\nfor feature in year_feature:\n    if feature!='YrSold':\n        data=dataset.copy()\n        ## We will capture the difference between year variable and year the house was sold for\n        data[feature]=data['YrSold']-data[feature]\n\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalePrice')\n        plt.show()","ac0ce0c7":"#Numerical variables: Continous variable and Discrete Variables\n\ndiscrete_feature=[feature for feature in numerical_features if len(dataset[feature].unique())<25 and feature not in year_feature+['Id']]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","1c8e47b0":"discrete_feature","aff87ae0":"dataset[discrete_feature].head()","62deaa5e":"#Find the realtionship between them and Sale PRice\n\nfor feature in discrete_feature:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","5c47e796":"# Continuous variables:\ncontinuous_feature=[feature for feature in numerical_features if feature not in discrete_feature+year_feature+['Id']]\nprint(\"Continuous feature Count {}\".format(len(continuous_feature)))","a2c9acf6":"continuous_feature","f60e6aa4":"#Analyse the continuous values by creating histograms to understand the distribution\n\nfor feature in continuous_feature:\n    data=dataset.copy()\n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"Count\")\n    plt.title(feature)\n    plt.show()","bfe279e2":"#logarithmic transformation:\n\n\nfor feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data['SalePrice']=np.log(data['SalePrice'])\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalesPrice')\n        plt.title(feature)\n        plt.show()","18b589f1":"# Finding Outliers\nfor feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()","920c3526":"# Categorical Values\ncategorical_features=[feature for feature in dataset.columns if data[feature].dtypes=='O']\ncategorical_features","7c636d6f":"dataset[categorical_features].head()","a7806f90":"for feature in categorical_features:\n    print('The feature is {} and number of categories are {}'.format(feature,len(dataset[feature].unique())))","0e7d8ee7":"#Find out the relationship between categorical variable and dependent feature SalesPrice","0d302b2c":"for feature in categorical_features:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","c2203471":"In the Dataset we have 4 year variables. We have extract information from the datetime variables like no of years or no of days. One example in this specific scenario can be difference in years between the year the house was built and the year the house was sold"}}