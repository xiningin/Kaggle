{"cell_type":{"8dda4d08":"code","46033851":"code","4de64a03":"code","1bca6d5e":"code","4863aa6c":"code","bf3b8e5e":"code","ec5ad04e":"code","2d3f3a06":"code","3aa25412":"code","59e1af46":"code","00392745":"code","66c126de":"code","94c9dc3b":"code","50941f55":"code","8b412fc2":"code","f4b2ce60":"code","0dc65975":"code","b994a4f2":"code","1d9f59ec":"code","4cdecdf0":"code","3e9b4087":"markdown","db674e7f":"markdown","6b64a151":"markdown","5518f4a4":"markdown","5cdad05c":"markdown","69ce3e57":"markdown","d3ff3887":"markdown","4e67012b":"markdown","8067d3da":"markdown","159c360b":"markdown","cfc1632d":"markdown","0efd692e":"markdown","19adf640":"markdown","4ec0de9f":"markdown","28285c62":"markdown","49c5ba09":"markdown","263e460f":"markdown"},"source":{"8dda4d08":"import pandas as pd\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.indexing_selecting_and_assigning import *\nprint(\"Setup complete.\")","46033851":"reviews.head()","4de64a03":"# Your code here\ndesc = reviews.description\n\n# Check your answer\nq1.check()","1bca6d5e":"#q1.hint()\n#q1.solution()","4863aa6c":"first_description = reviews.description[0]\n\n# Check your answer\nq2.check()\nfirst_description","bf3b8e5e":"#q2.hint()\n#q2.solution()","ec5ad04e":"first_row = reviews.iloc[0]\n\n# Check your answer\nq3.check()\nfirst_row","2d3f3a06":"#q3.hint()\n#q3.solution()","3aa25412":"first_descriptions = reviews.description.iloc[:10]\n\n# Check your answer\nq4.check()\nfirst_descriptions","59e1af46":"#q4.hint()\n#q4.solution()","00392745":"indices = [1,2,3,5,8]\nsample_reviews = reviews.iloc[indices]\n\n# Check your answer\nq5.check()\nsample_reviews","66c126de":"#q5.hint()\n#q5.solution()","94c9dc3b":"col = ['country','province', 'region_1', 'region_2']\nindexes = [0,1,10,100]\ndf = reviews.loc[indexes,col]\n\n# Check your answer\nq6.check()\ndf","50941f55":"#q6.hint()\n#q6.solution()","8b412fc2":"cols = [\"country\",\"variety\"]\ndf = reviews.loc[0:99, cols]\n\n# Check your answer\nq7.check()\ndf","f4b2ce60":"#q7.hint()\n#q7.solution()","0dc65975":"italian_wines = reviews[reviews.country == 'Italy']\n\n# Check your answer\nq8.check()","b994a4f2":"#q8.hint()\n#q8.solution()","1d9f59ec":"top_oceania_wines = reviews.loc[(reviews.country.isin(['Australia', 'New Zealand']) \n                                 & (reviews.points >= 95))]\n\n# Check your answer\nq9.check()\ntop_oceania_wines","4cdecdf0":"#q9.hint()\n#q9.solution()","3e9b4087":"## 5.\n\nSelect the records with index labels `1`, `2`, `3`, `5`, and `8`, assigning the result to the variable `sample_reviews`.\n\nIn other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","db674e7f":"## 9.\n\nCreate a DataFrame `top_oceania_wines` containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.","6b64a151":"Follow-up question: what type of object is `desc`? If you're not sure, you can check by calling Python's `type` function: `type(desc)`.","5518f4a4":"## 4.\n\nSelect the first 10 values from the `description` column in `reviews`, assigning the result to variable `first_descriptions`.\n\nHint: format your output as a pandas Series.","5cdad05c":"# Introduction\n\nIn this set of exercises we will work with the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). ","69ce3e57":"# Exercises","d3ff3887":"## 7.\n\nCreate a variable `df` containing the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the tutorial:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. \n`loc`, meanwhile, indexes inclusively. \n\n> This is particularly confusing when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 1000 entries, while `df.loc[0:1000]` return 1001 of them! To get 1000 elements using `loc`, you will need to go one lower and ask for `df.iloc[0:999]`. ","4e67012b":"## 8.\n\nCreate a DataFrame `italian_wines` containing reviews of wines made in `Italy`. Hint: `reviews.country` equals what?","8067d3da":"**This notebook is an exercise in the [Pandas](https:\/\/www.kaggle.com\/learn\/pandas) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning).**\n\n---\n","159c360b":"## 3. \n\nSelect the first row of data (the first record) from `reviews`, assigning it to the variable `first_row`.","cfc1632d":"Run the following cell to load your data and some utility functions (including code to check your answers).","0efd692e":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161299) to chat with other Learners.*","19adf640":"## 1.\n\nSelect the `description` column from `reviews` and assign the result to the variable `desc`.","4ec0de9f":"# Keep going\n\nMove on to learn about **[summary functions and maps](https:\/\/www.kaggle.com\/residentmario\/summary-functions-and-maps)**.","28285c62":"Look at an overview of your data by running the following line.","49c5ba09":"## 6.\n\nCreate a variable `df` containing the `country`, `province`, `region_1`, and `region_2` columns of the records with the index labels `0`, `1`, `10`, and `100`. In other words, generate the following DataFrame:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","263e460f":"## 2.\n\nSelect the first value from the description column of `reviews`, assigning it to variable `first_description`."}}