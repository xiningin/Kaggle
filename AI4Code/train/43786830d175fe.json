{"cell_type":{"9a64038e":"code","1cc29965":"code","4c93fed7":"code","1743748a":"code","a5a95760":"code","9b7ba792":"code","68d92ac4":"code","0980885a":"code","7bc902f7":"code","febb3711":"code","50f1a2bc":"code","2b7d06d1":"code","8b61c12f":"code","7b835846":"code","fdcc7e00":"code","3114c837":"code","5182f13f":"code","ecfbd8b2":"code","8742ecf8":"code","23eee0b7":"markdown","fbd5f492":"markdown","3d5c6c35":"markdown","59c69b1c":"markdown","97219e32":"markdown","3e0070bb":"markdown","21e5d2e6":"markdown","25587484":"markdown","7426daf1":"markdown","94cde196":"markdown","d3bfa581":"markdown","734e676d":"markdown","f1df07fa":"markdown","75d3acba":"markdown","ac32d97a":"markdown","cc94c1a1":"markdown","00a13165":"markdown","2706907f":"markdown"},"source":{"9a64038e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib.gridspec import GridSpec\nimport plotly.graph_objs as go\nimport warnings\nfrom plotly.offline import init_notebook_mode,iplot\nimport plotly.graph_objs as go\nimport plotly.plotly as py\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nwarnings.filterwarnings(\"ignore\")\ninit_notebook_mode(connected=True)\npd.set_option('display.max_columns', 5000)\n# Any results you write to the current directory are saved as output.","1cc29965":"multiple_data = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\")","4c93fed7":"#What is the age distribution participating survey? \nages = multiple_data.Q2.value_counts()\nx = list(ages.index)\ny = list(ages.values)\nchart = go.Pie(labels=x, values=y)\nlayout = go.Layout(title='Age Distribution Participating Survey')\nfig = go.Figure(data=[chart], layout=layout)\niplot(fig, filename=\"age\")\n\n","1743748a":"#Gender based IDE usage ratios\ngender_female = multiple_data[multiple_data.Q1 == \"Female\"]\ngender_male = multiple_data[multiple_data.Q1 == \"Male\"]\n\nfemale_dict = {\"Python\":gender_female['Q16_Part_1'].value_counts().values, \"R\":gender_female['Q16_Part_2'].value_counts().values,\"SQL\":gender_female['Q16_Part_3'].value_counts().values,\"Bash\":gender_female['Q16_Part_4'].value_counts().values,\n                   \"Java\":gender_female['Q16_Part_5'].value_counts().values,\"JS\":gender_female['Q16_Part_6'].value_counts().values,\"VBA\":gender_female['Q16_Part_7'].value_counts().values,\"CPlusPlus\":gender_female['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":gender_female['Q16_Part_9'].value_counts().values,\"Scala\":gender_female['Q16_Part_10'].value_counts().values,\"Julia\":gender_female['Q16_Part_11'].value_counts().values,\"Go\":gender_female['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":gender_female['Q16_Part_13'].value_counts().values,\"PHP\":gender_female['Q16_Part_14'].value_counts().values,\"Ruby\":gender_female['Q16_Part_15'].value_counts().values,\"SAS\":gender_female['Q16_Part_16'].value_counts().values,\n                   \"None\":gender_female['Q16_Part_17'].value_counts().values}\nmale_dict = {\"Python\":gender_male['Q16_Part_1'].value_counts().values, \"R\":gender_male['Q16_Part_2'].value_counts().values,\"SQL\":gender_male['Q16_Part_3'].value_counts().values,\"Bash\":gender_male['Q16_Part_4'].value_counts().values,\n                   \"Java\":gender_male['Q16_Part_5'].value_counts().values,\"JS\":gender_male['Q16_Part_6'].value_counts().values,\"VBA\":gender_male['Q16_Part_7'].value_counts().values,\"CPlusPlus\":gender_male['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":gender_male['Q16_Part_9'].value_counts().values,\"Scala\":gender_male['Q16_Part_10'].value_counts().values,\"Julia\":gender_male['Q16_Part_11'].value_counts().values,\"Go\":gender_male['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":gender_male['Q16_Part_13'].value_counts().values,\"PHP\":gender_male['Q16_Part_14'].value_counts().values,\"Ruby\":gender_male['Q16_Part_15'].value_counts().values,\"SAS\":gender_male['Q16_Part_16'].value_counts().values,\n                   \"None\":gender_male['Q16_Part_17'].value_counts().values}\n\nlabels = list(female_dict.keys())\nsizes1 = list(female_dict.values())\nsizes2 = list(male_dict.values())\ndata1 = pd.DataFrame({'labels': labels,'sizes': sizes1})\ndata2 = pd.DataFrame({'labels': labels,'sizes': sizes2})\ndata1['sizes'] = [each[0] for each in data1['sizes']]\ndata2['sizes'] = [each[0] for each in data2['sizes']]\nnew_index = (data1['sizes'].sort_values(ascending=False)).index.values\nsorted_data1 = data1.reindex(new_index)\nnew_index = (data2['sizes'].sort_values(ascending=False)).index.values\nsorted_data2 = data2.reindex(new_index)\n\nf,axes = plt.subplots(figsize = (20,8),nrows=1,ncols=2)\ng1=sns.barplot(x=sorted_data1[\"labels\"],y=sorted_data1[\"sizes\"],color='red',alpha = 0.5,label='Female', ax=axes[0])\ng1.set_xticklabels(sorted_data1[\"labels\"],rotation=45)\ng2=sns.barplot(x=sorted_data2[\"labels\"],y=sorted_data2[\"sizes\"],color='blue',alpha = 0.7,label='Male',ax=axes[1])\ng2.set_xticklabels(sorted_data1[\"labels\"],rotation=45)\n\naxes[0].set(xlabel='Programming Languages', ylabel='Count',title = \"Female Programming Language Usage \")\naxes[1].set(xlabel='Programming Languages', ylabel='Count',title = \"Male Programming Language Usage \")\n\nplt.show()","a5a95760":"#which countries participating survey\ncountries = multiple_data.Q3\nx = list(countries.index)\nx = [str(x) for each in x]\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1200,\n                          height=800\n                         ).generate(\" \".join(countries))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","9b7ba792":"programming_dict = {\"Python\":multiple_data['Q16_Part_1'].value_counts().values, \"R\":multiple_data['Q16_Part_2'].value_counts().values,\"SQL\":multiple_data['Q16_Part_3'].value_counts().values,\"Bash\":multiple_data['Q16_Part_4'].value_counts().values,\n                   \"Java\":multiple_data['Q16_Part_5'].value_counts().values,\"JS\":multiple_data['Q16_Part_6'].value_counts().values,\"VBA\":multiple_data['Q16_Part_7'].value_counts().values,\"CPlusPlus\":multiple_data['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":multiple_data['Q16_Part_9'].value_counts().values,\"Scala\":multiple_data['Q16_Part_10'].value_counts().values,\"Julia\":multiple_data['Q16_Part_11'].value_counts().values,\"Go\":multiple_data['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":multiple_data['Q16_Part_13'].value_counts().values,\"PHP\":multiple_data['Q16_Part_14'].value_counts().values,\"Ruby\":multiple_data['Q16_Part_15'].value_counts().values,\"SAS\":multiple_data['Q16_Part_16'].value_counts().values,\n                   \"None\":multiple_data['Q16_Part_17'].value_counts().values}\nlabels_prog = list(programming_dict.keys())\nsizes_prog = list(programming_dict.values())\ndata = pd.DataFrame({'labels': labels_prog,'sizes': sizes_prog})\ndata['sizes'] = [each[0] for each in data['sizes']]\nnew_index = (data['sizes'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\nplt.figure(figsize=(12,9))\nsns.barplot(x=sorted_data['labels'], y=sorted_data['sizes'])\nplt.xticks(rotation= 45)\nplt.xlabel('Programming Language')\nplt.ylabel('Frequency')\nplt.title('Programming Language Usage')\nplt.show()","68d92ac4":"ide_dict = {\"IPython\":multiple_data['Q13_Part_1'].value_counts().values, \"RStudio\":multiple_data['Q13_Part_2'].value_counts().values,\"PyCharm\":multiple_data['Q13_Part_3'].value_counts().values,\"VisualStudioCode\":multiple_data['Q13_Part_4'].value_counts().values,\n            \"Nteract\":multiple_data['Q13_Part_5'].value_counts().values,\"Atom\":multiple_data['Q13_Part_6'].value_counts().values,\"Matlab\":multiple_data['Q13_Part_7'].value_counts().values,\"VisualStudio\":multiple_data['Q13_Part_8'].value_counts().values,\n            \"NotepadPlusPlus\":multiple_data['Q13_Part_9'].value_counts().values,\"SublimeText\":multiple_data['Q13_Part_10'].value_counts().values,\"Vim\":multiple_data['Q16_Part_11'].value_counts().values,\"IntelliJ\":multiple_data['Q13_Part_12'].value_counts().values,\n            \"Spyder\":multiple_data['Q13_Part_13'].value_counts().values,\"None\":multiple_data['Q13_Part_14'].value_counts().values}\n\nlabels_prog = list(ide_dict.keys())\nsizes_prog = list(ide_dict.values())\ndata = pd.DataFrame({'labels': labels_prog,'sizes': sizes_prog})\ndata['sizes'] = [each[0] for each in data['sizes']]\nnew_index = (data['sizes'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\nplt.figure(figsize=(12,9))\nsns.barplot(x=sorted_data['labels'], y=sorted_data['sizes'])\nplt.xticks(rotation= 45)\nplt.xlabel('IDE')\nplt.ylabel('Frequency')\nplt.title('IDE Usage')\nplt.show()","0980885a":"# industry based programming language distribution\n#top three industry and their programming language distribution\n#First - Computers\/Technology\ncomputers_technology = multiple_data[multiple_data.Q7 == \"Computers\/Technology\"]\nstudents = multiple_data[multiple_data.Q7 == \"I am a student\"]\nacademics = multiple_data[multiple_data.Q7 == \"Academics\/Education\"]\n\nprogramming_dict1 = {\"Python\":computers_technology['Q16_Part_1'].value_counts().values, \"R\":computers_technology['Q16_Part_2'].value_counts().values,\"SQL\":computers_technology['Q16_Part_3'].value_counts().values,\"Bash\":computers_technology['Q16_Part_4'].value_counts().values,\n                   \"Java\":computers_technology['Q16_Part_5'].value_counts().values,\"JS\":computers_technology['Q16_Part_6'].value_counts().values,\"VBA\":computers_technology['Q16_Part_7'].value_counts().values,\"CPlusPlus\":computers_technology['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":computers_technology['Q16_Part_9'].value_counts().values,\"Scala\":computers_technology['Q16_Part_10'].value_counts().values,\"Julia\":computers_technology['Q16_Part_11'].value_counts().values,\"Go\":computers_technology['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":computers_technology['Q16_Part_13'].value_counts().values,\"PHP\":computers_technology['Q16_Part_14'].value_counts().values,\"Ruby\":computers_technology['Q16_Part_15'].value_counts().values,\"SAS\":computers_technology['Q16_Part_16'].value_counts().values,\n                   \"None\":computers_technology['Q16_Part_17'].value_counts().values}\nprogramming_dict2 = {\"Python\":students['Q16_Part_1'].value_counts().values, \"R\":students['Q16_Part_2'].value_counts().values,\"SQL\":students['Q16_Part_3'].value_counts().values,\"Bash\":students['Q16_Part_4'].value_counts().values,\n                   \"Java\":students['Q16_Part_5'].value_counts().values,\"JS\":students['Q16_Part_6'].value_counts().values,\"VBA\":students['Q16_Part_7'].value_counts().values,\"CPlusPlus\":students['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":students['Q16_Part_9'].value_counts().values,\"Scala\":students['Q16_Part_10'].value_counts().values,\"Julia\":students['Q16_Part_11'].value_counts().values,\"Go\":students['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":students['Q16_Part_13'].value_counts().values,\"PHP\":students['Q16_Part_14'].value_counts().values,\"Ruby\":students['Q16_Part_15'].value_counts().values,\"SAS\":students['Q16_Part_16'].value_counts().values,\n                   \"None\":students['Q16_Part_17'].value_counts().values}\nprogramming_dict3 = {\"Python\":academics['Q16_Part_1'].value_counts().values, \"R\":academics['Q16_Part_2'].value_counts().values,\"SQL\":academics['Q16_Part_3'].value_counts().values,\"Bash\":academics['Q16_Part_4'].value_counts().values,\n                   \"Java\":academics['Q16_Part_5'].value_counts().values,\"JS\":academics['Q16_Part_6'].value_counts().values,\"VBA\":academics['Q16_Part_7'].value_counts().values,\"CPlusPlus\":academics['Q16_Part_8'].value_counts().values,\n                   \"MATLAB\":academics['Q16_Part_9'].value_counts().values,\"Scala\":academics['Q16_Part_10'].value_counts().values,\"Julia\":academics['Q16_Part_11'].value_counts().values,\"Go\":academics['Q16_Part_12'].value_counts().values,\n                   \"CSharp\":academics['Q16_Part_13'].value_counts().values,\"PHP\":academics['Q16_Part_14'].value_counts().values,\"Ruby\":academics['Q16_Part_15'].value_counts().values,\"SAS\":academics['Q16_Part_16'].value_counts().values,\n                   \"None\":academics['Q16_Part_17'].value_counts().values}\nlabels = list(programming_dict1.keys())\nsizes1 = list(programming_dict1.values())\nsizes2 = list(programming_dict2.values())\nsizes3 = list(programming_dict3.values())\ndata = pd.DataFrame({'labels': labels,'sizes1': sizes1,'sizes2':sizes2,'sizes3':sizes3})\ndata['sizes1'] = [each[0] for each in data['sizes1']]\ndata['sizes2'] = [each[0] for each in data['sizes2']]\ndata['sizes3'] = [each[0] for each in data['sizes3']]\n\nf,ax = plt.subplots(figsize = (9,12))\nsns.barplot(x=data[\"sizes1\"],y=data[\"labels\"],color='green',alpha = 0.5,label='Computers\/Technology' )\nsns.barplot(x=data[\"sizes2\"],y=data[\"labels\"],color='blue',alpha = 0.7,label='Students')\nsns.barplot(x=data[\"sizes3\"],y=data[\"labels\"],color='cyan',alpha = 0.6,label='Academics')\n\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Count', ylabel='Programming Languages',title = \"Industry Based Programming Language Rates\")\nplt.show()","7bc902f7":"computers_technology = multiple_data[multiple_data.Q7 == \"Computers\/Technology\"]\nstudents = multiple_data[multiple_data.Q7 == \"I am a student\"]\nacademics = multiple_data[multiple_data.Q7 == \"Academics\/Education\"]\n\nprogramming_dict1 = {\"IPython\":computers_technology['Q13_Part_1'].value_counts().values, \"RStudio\":computers_technology['Q13_Part_2'].value_counts().values,\"PyCharm\":computers_technology['Q13_Part_3'].value_counts().values,\"VisualStudioCode\":computers_technology['Q13_Part_4'].value_counts().values,\n                   \"Nteract\":computers_technology['Q13_Part_5'].value_counts().values,\"Atom\":computers_technology['Q13_Part_6'].value_counts().values,\"Matlab\":computers_technology['Q13_Part_7'].value_counts().values,\"VisualStudio\":computers_technology['Q13_Part_8'].value_counts().values,\n                   \"NotepadPlusPlus\":computers_technology['Q13_Part_9'].value_counts().values,\"SublimeText\":computers_technology['Q13_Part_10'].value_counts().values,\"Vim\":computers_technology['Q16_Part_11'].value_counts().values,\"IntelliJ\":computers_technology['Q13_Part_12'].value_counts().values,\n                   \"Spyder\":computers_technology['Q13_Part_13'].value_counts().values,\"None\":computers_technology['Q13_Part_14'].value_counts().values}\nprogramming_dict2 = {\"IPython\":students['Q13_Part_1'].value_counts().values, \"RStudio\":students['Q13_Part_2'].value_counts().values,\"PyCharm\":students['Q13_Part_3'].value_counts().values,\"VisualStudioCode\":students['Q13_Part_4'].value_counts().values,\n                   \"Nteract\":students['Q13_Part_5'].value_counts().values,\"Atom\":students['Q13_Part_6'].value_counts().values,\"Matlab\":students['Q13_Part_7'].value_counts().values,\"VisualStudio\":students['Q13_Part_8'].value_counts().values,\n                   \"NotepadPlusPlus\":students['Q13_Part_9'].value_counts().values,\"SublimeText\":students['Q13_Part_10'].value_counts().values,\"Vim\":students['Q13_Part_11'].value_counts().values,\"IntelliJ\":students['Q13_Part_12'].value_counts().values,\n                   \"Spyder\":students['Q13_Part_13'].value_counts().values,\"None\":students['Q13_Part_14'].value_counts().values}\nprogramming_dict3 = {\"IPython\":academics['Q13_Part_1'].value_counts().values, \"RStudio\":academics['Q13_Part_2'].value_counts().values,\"PyCharm\":academics['Q13_Part_3'].value_counts().values,\"VisualStudioCode\":academics['Q13_Part_4'].value_counts().values,\n                   \"Nteract\":academics['Q13_Part_5'].value_counts().values,\"Atom\":academics['Q13_Part_6'].value_counts().values,\"Matlab\":academics['Q13_Part_7'].value_counts().values,\"VisualStudio\":academics['Q13_Part_8'].value_counts().values,\n                   \"NotepadPlusPlus\":academics['Q13_Part_9'].value_counts().values,\"SublimeText\":academics['Q13_Part_10'].value_counts().values,\"Vim\":academics['Q13_Part_11'].value_counts().values,\"IntelliJ\":academics['Q13_Part_12'].value_counts().values,\n                   \"Spyder\":academics['Q13_Part_13'].value_counts().values,\"None\":academics['Q13_Part_14'].value_counts().values}\n\n\nlabels = list(programming_dict1.keys())\nsizes1 = list(programming_dict1.values())\nsizes2 = list(programming_dict2.values())\nsizes3 = list(programming_dict3.values())\n\ndata = pd.DataFrame({'labels': labels,'sizes1': sizes1,'sizes2':sizes2,'sizes3':sizes3})\ndata['sizes1'] = [each[0] for each in data['sizes1']]\ndata['sizes2'] = [each[0] for each in data['sizes2']]\ndata['sizes3'] = [each[0] for each in data['sizes3']]\n\nf,ax = plt.subplots(figsize = (9,12))\nsns.barplot(x=data[\"sizes1\"],y=data[\"labels\"],color='gray',alpha = 0.5,label='Computers\/Technology' )\nsns.barplot(x=data[\"sizes2\"],y=data[\"labels\"],color='yellow',alpha = 0.7,label='Students')\nsns.barplot(x=data[\"sizes3\"],y=data[\"labels\"],color='black',alpha = 0.6,label='Academics')\n\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Count', ylabel='IDE')\nax.set_title(label = \"Industry Based IDE Usage Rates\")\nplt.show()\n","febb3711":"# General ML Framework Usage\nmultiple_data_copy = multiple_data[1:]\nmlframework_1 = pd.concat([multiple_data_copy[\"Q19_Part_1\"],multiple_data_copy[\"Q19_Part_2\"],multiple_data_copy[\"Q19_Part_3\"],multiple_data_copy[\"Q19_Part_4\"],multiple_data_copy[\"Q19_Part_5\"],\n                           multiple_data_copy[\"Q19_Part_6\"],multiple_data_copy[\"Q19_Part_7\"],multiple_data_copy[\"Q19_Part_8\"],multiple_data_copy[\"Q19_Part_9\"],multiple_data_copy[\"Q19_Part_10\"]])\nmlframework_2 = pd.concat([multiple_data_copy[\"Q19_Part_11\"],multiple_data_copy[\"Q19_Part_12\"],multiple_data_copy[\"Q19_Part_13\"],multiple_data_copy[\"Q19_Part_14\"],multiple_data_copy[\"Q19_Part_15\"],\n                           multiple_data_copy[\"Q19_Part_16\"],multiple_data_copy[\"Q19_Part_17\"]])\nmlframework = pd.concat([mlframework_1,mlframework_2])\nml_counts = mlframework.value_counts()\n\nplt.figure(figsize=(12,9))\nsns.barplot(x=ml_counts.index, y=ml_counts.values)\nplt.xticks(rotation= 45)\nplt.xlabel('ML Framework')\nplt.ylabel('Frequency')\nplt.title('ML Framework Usage')\nplt.show()","50f1a2bc":"# Top 3 Industry Based ML Framework Distribution\nml_computers_data = multiple_data_copy[multiple_data_copy.Q7 == \"Computers\/Technology\"]\nml_students_data = multiple_data_copy[multiple_data_copy.Q7 == \"I am a student\"]\nml_academics_data = multiple_data_copy[multiple_data_copy.Q7 == \"Academics\/Education\"]\n\ncomputers_dict1 = {\"Scikit-Learn\":ml_computers_data['Q19_Part_1'].count(), \"TensorFlow\":ml_computers_data['Q19_Part_2'].count(),\"Keras\":ml_computers_data['Q19_Part_3'].count(),\"PyTorch\":ml_computers_data['Q19_Part_4'].count(),\n                   \"Spark MLlib\":ml_computers_data['Q19_Part_5'].count(),\"H20\":ml_computers_data['Q19_Part_6'].count(),\"Fastai\":ml_computers_data['Q19_Part_7'].count(),\"Mxnet\":ml_computers_data['Q19_Part_8'].count(),\n                   \"Caret\":ml_computers_data['Q19_Part_9'].count(),\"Xgboost\":ml_computers_data['Q19_Part_10'].count(),\"mlr\":ml_computers_data['Q19_Part_11'].count(),\"Prophet\":ml_computers_data['Q19_Part_12'].count(),\n                   \"randomForest\":ml_computers_data['Q19_Part_13'].count(),\"lightgbm\":ml_computers_data['Q19_Part_14'].count(),\"catboost\":ml_computers_data['Q19_Part_15'].count(),\"CNTK\":ml_computers_data['Q19_Part_16'].count(),\n                   \"Caffe\":ml_computers_data['Q19_Part_17'].count()}\nstudents_dict2 = {\"Scikit-Learn\":ml_students_data['Q19_Part_1'].count(), \"TensorFlow\":ml_students_data['Q19_Part_2'].count(),\"Keras\":ml_students_data['Q19_Part_3'].count(),\"PyTorch\":ml_students_data['Q19_Part_4'].count(),\n                   \"Spark MLlib\":ml_students_data['Q19_Part_5'].count(),\"H20\":ml_students_data['Q19_Part_6'].count(),\"Fastai\":ml_students_data['Q19_Part_7'].count(),\"Mxnet\":ml_students_data['Q19_Part_8'].count(),\n                   \"Caret\":ml_students_data['Q19_Part_9'].count(),\"Xgboost\":ml_students_data['Q19_Part_10'].count(),\"mlr\":ml_students_data['Q19_Part_11'].count(),\"Prophet\":ml_students_data['Q19_Part_12'].count(),\n                   \"randomForest\":ml_students_data['Q19_Part_13'].count(),\"lightgbm\":ml_students_data['Q19_Part_14'].count(),\"catboost\":ml_students_data['Q19_Part_15'].count(),\"CNTK\":ml_students_data['Q19_Part_16'].count(),\n                   \"Caffe\":ml_students_data['Q19_Part_17'].count()}\nacademics_dict3 = {\"Scikit-Learn\":ml_academics_data['Q19_Part_1'].count(), \"TensorFlow\":ml_academics_data['Q19_Part_2'].count(),\"Keras\":ml_academics_data['Q19_Part_3'].count(),\"PyTorch\":ml_academics_data['Q19_Part_4'].count(),\n                   \"Spark MLlib\":ml_academics_data['Q19_Part_5'].count(),\"H20\":ml_academics_data['Q19_Part_6'].count(),\"Fastai\":ml_academics_data['Q19_Part_7'].count(),\"Mxnet\":ml_academics_data['Q19_Part_8'].count(),\n                   \"Caret\":ml_academics_data['Q19_Part_9'].count(),\"Xgboost\":ml_academics_data['Q19_Part_10'].count(),\"mlr\":ml_academics_data['Q19_Part_11'].count(),\"Prophet\":ml_academics_data['Q19_Part_12'].count(),\n                   \"randomForest\":ml_academics_data['Q19_Part_13'].count(),\"lightgbm\":ml_academics_data['Q19_Part_14'].count(),\"catboost\":ml_academics_data['Q19_Part_15'].count(),\"CNTK\":ml_academics_data['Q19_Part_16'].count(),\n                   \"Caffe\":ml_academics_data['Q19_Part_17'].count()}\n\nlabels = list(computers_dict1.keys())\nsizes1 = list(computers_dict1.values())\nsizes2 = list(students_dict2.values())\nsizes3 = list(academics_dict3.values())\n\nf,ax = plt.subplots(figsize = (9,12))\nsns.barplot(x=sizes1,y=labels,color='orange',alpha = 0.5,label='Computers\/Technology' )\nsns.barplot(x=sizes2,y=labels,color='gray',alpha = 0.7,label='Students')\nsns.barplot(x=sizes3,y=labels,color='black',alpha = 0.6,label='Academics')\n\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Count', ylabel='ML Framework')\nax.set_title(label = \"Computers\/Technology, Students and Academics Based ML Framework Usage Distribution\")\nplt.show()\n\n","2b7d06d1":"working_periods = multiple_data_copy.Q24.value_counts()\nplt.figure(figsize=(12,9))\nsns.barplot(y=working_periods.index, x=working_periods.values)\nplt.ylabel('Time Periods')\nplt.xlabel('Frequency')\nplt.title('How Long Working on Analyzing Data Issues?')\nplt.show()\n","8b61c12f":"data_spend = multiple_data_copy[(multiple_data_copy.Q24 == \"1-2 years\") | (multiple_data_copy.Q24 ==\"< 1 year\")]\nspend_times = data_spend.Q23.value_counts()\nspend_list = (\"50%-74%\",\"25%-49%\",\"1%-25%\",\"75%-99%\",\"100%\",\"0%\")\n\nfig = {\n  \"data\": [\n    {\n      \"values\": spend_times.values,\n      \"labels\": spend_list,\n      \"domain\": {\"x\": [0, 1]},\n      \"name\": \"Spending Time on Data Analyzing\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Spending Time on Data Analyzing\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Percantage of Time Spent\",\n                \"x\": 5,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)\n","7b835846":"# New people anf their jobs\nnew_people_jobs = data_spend.Q6.value_counts()\nplt.figure(figsize=(15,9))\nsns.barplot(x=new_people_jobs.index, y=new_people_jobs.values)\nplt.xticks(rotation= 45)\nplt.xlabel('Title')\nplt.ylabel('Frequency')\nplt.title('Title of New People')\nplt.show()","fdcc7e00":"#50% - 100% Jobs\nnew_people_75_100 = data_spend.Q6[(data_spend.Q23 == \"75% to 99% of my time\") | (data_spend.Q23 == \"100% of my time\") | (data_spend.Q23 == \"50% to 74% of my time\")]\nnew_people_75_100_counts = new_people_75_100.value_counts()\nplt.figure(figsize=(15,9))\nsns.barplot(x=new_people_75_100_counts.index, y=new_people_75_100_counts.values)\nplt.xticks(rotation= 45)\nplt.xlabel('Title')\nplt.ylabel('Count of People')\nplt.title('Jobs of People Spending Time 50% - 100%')\nplt.show()","3114c837":"# Major of Data analyst and Data scientist\ndata_of_scientist = multiple_data_copy[(multiple_data_copy.Q6 == \"Data Scientist\") | (multiple_data_copy.Q6 == \"Data Analyst\")]\nmajors_list = data_of_scientist.Q5.value_counts()\nplt.figure(figsize=(15,9))\nsns.barplot(x=majors_list.values, y=majors_list.index)\nplt.xlabel('People Graduated')\nplt.ylabel('Undergraduate Majors')\nplt.title('Undergraduate Major of Data Scientist or Data Analyst')\nplt.show()","5182f13f":"country_list = data_of_scientist.Q3.unique()\ncount_list = []\nfor each in country_list:\n    count_list.append(len(data_of_scientist[data_of_scientist.Q3 == each]))\n\ndc = pd.Series(country_list)\ndv = pd.Series(count_list)\ndata = [ dict(\n        type = 'choropleth',\n        autocolorscale = False,\n        reversescale = True,\n        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n            [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n        showscale = False,\n        locations = dc,\n        z = dv,\n        locationmode = 'country names',\n        text = dv,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            tickprefix = 'Count',\n            title = 'Data Scientists\/Analysts Count'),)   \n    ]\n\nlayout = dict(\n    height=800,\n    title = 'Country Distribution of Data Scientists\/Analysts',\n    geo = dict(\n        showframe = True,\n        showocean = True,\n        oceancolor = 'darkgray',\n        projection = dict(\n        type = 'mercator'\n        )),\n        )\nfig = dict(data=data, layout=layout)\niplot(fig)","ecfbd8b2":"df = pd.concat([data_of_scientist[\"Q3\"],data_of_scientist[\"Q9\"]],axis=1)\ncount_USA = df.Q9[df.Q3 == \"United States of America\"].value_counts()\ncount_India = df.Q9[df.Q3 == \"India\"].value_counts()\ncount_China = df.Q9[df.Q3 == \"China\"].value_counts()\n\nf,ax = plt.subplots(figsize = (9,12))\nsns.barplot(x=count_USA.values,y=count_USA.index,color='blue',alpha = 0.5,label='United States Of America' )\nsns.barplot(x=count_India.values,y=count_India.index,color='gray',alpha = 0.7,label='India')\nsns.barplot(x=count_China.values,y=count_China.index,color='yellow',alpha = 0.6,label='China')\n\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Number of People', ylabel='Salary')\nax.set_title(label = \"Salary Of Data Scientists\/Analysts(USA, India and China)\")\nplt.show()\n","8742ecf8":"online_platforms_dict = {\"Udacity\":data_of_scientist.Q36_Part_1.count(),\"Coursera\":data_of_scientist.Q36_Part_2.count(),\n                        \"edX\":data_of_scientist.Q36_Part_3.count(),\"DataCamp\":data_of_scientist.Q36_Part_4.count(),\n                        \"DataQuest\":data_of_scientist.Q36_Part_5.count(),\"Kaggle Learn\":data_of_scientist.Q36_Part_6.count(),\n                        \"Fast.AI \":data_of_scientist.Q36_Part_7.count(),\"developers.google.com\":data_of_scientist.Q36_Part_8.count(),\n                        \"Udemy\":data_of_scientist.Q36_Part_9.count(),\"TheSchool\":data_of_scientist.Q36_Part_10.count(),\n                        \"OnlineUniversityCourses\":data_of_scientist.Q36_Part_11.count(),\"None\":data_of_scientist.Q36_Part_12.count(),\n                        \"Other \":data_of_scientist.Q36_Part_13.count()}\n\nonline_platforms = pd.Series(online_platforms_dict)\nonline_platforms.sort_values(ascending=False, inplace=True)\nfig = {\n  \"data\": [\n    {\n      \"y\": online_platforms.values,\n      \"x\": online_platforms.index,\n      \"marker\":dict(color='darkblue',),\n      \"type\": \"bar\"\n    },],\n  \"layout\": {\n        \"title\":\"Favorite Online Learning Platforms for Data Scientists\/Anlaysts\",\n    }\n}\niplot(fig)","23eee0b7":"<a id=\"4\"><\/a> <br>\n# Programming Language Usage\n* The people interested in ML&DS are mostly writing their codes with **Pyton**, **SQL** and **R**. ","fbd5f492":"# INTRODUCTION\n* In this kernel it is tried to analyze three major topics which are listed below. \n\n\n<br>**CONTENT**\n\n**A. General Information About Participants**\n1. [Age Distribution](#1)\n1. [Gender Based Programming Language Usage](#2)\n1. [Country Distribution](#3)\n\n**B. Programming Language, IDE and ML Framework Usage**\n1. [Programming Language Usage](#4)\n1. [IDE Usage](#5)\n1. [Industry Based Programming Language Distribution](#6)\n1. [Industry Based IDE Distribution](#7)\n1. [ML Framework Usage Rates](#8)\n1. [Industry Based ML Framework Usage Distribution](#9)\n\n**C. More Specific Analyze About Data Analysts and Scientists**\n1. [Is The Data Analyzing New Popular Topic?](#10)\n1. [How Much Time Spend New Learning People?](#11)\n1. [New People & Their Jobs](#12)\n1. [Which Jobs Spending 50% - 100%](#13)\n1. [Undergraduate Major of Data Scientist or Data Analayst](#14)\n1. [Country Distribution of Data Scientist\/Data Analyst](#15)\n1. [Salary Of Data Scientists\/Analysts(USA, India and China)](#16)\n1. [Favorite Online Learning Platforms for Data Scientists\/Anlaysts](#17)\n","3d5c6c35":"<a id=\"16\"><\/a> <br>\n# Salary Of Data Scientists\/Analysts(USA, India and China)\n* Salaries at United States are much bigger than others. \n* There is nearly no one earning much than 100.000$ at India and China.","59c69b1c":"<a id=\"11\"><\/a> <br>\n# How Much Time Spend New Learning People?\n* Is this a hobby for new learning people or they really spend time on data analyzing?\n* Below pie chart is showing us that half of new people are spending most of their time on writing code about data analyzing.","97219e32":"<a id=\"5\"><\/a> <br>\n# IDE Usage\n* The people interested in ML&DS are mostly using **IPyton**, **RStudio** and **NotepadPlusPlus**.","3e0070bb":"<a id=\"2\"><\/a> <br>\n# Gender Based Programming Language Usage\n* According below chart, programming language selection doesn't change based on gender. ","21e5d2e6":"<a id=\"13\"><\/a> <br>\n# Which Jobs Spending 50% - 100%?\n* Nearly half of new students(writing code about data analyzing <2 years ) spent time between 50% and 100% \n* Number of Software Engineer, Data Scientist and Data Analyst is not changed. ","25587484":"<a id=\"17\"><\/a> <br>\n# Favorite Online Learning Platforms for Data Scientists\/Anlaysts\n* Coursera is the leading platform.\n* It seems DA is being muchly learned from online platforms instead of schools or universities. ","7426daf1":"<a id=\"9\"><\/a> <br>\n# Industry Based ML Framework Usage Distribution\n* Based on **Computers\/Technology, Students and Academics**,\n* **Scikit-Learn**, **TensorFlow** and **Keras** is mostly used, \n* Students don't use **SparkMlib**, **H20**, **Mxnet**, **mlr** and **Prophet**.","94cde196":"<a id=\"6\"><\/a> <br>\n# Industry Based Programming Language Distribution\n* Based on **Computers\/Technology, Students and Academics,**\n* **Python** is most popular at these three industry,\n* **CPlusPlus** and **Matlab** is mostly used by academic life,\n* **SAS** is only used by **Academics**.\n","d3bfa581":"<a id=\"12\"><\/a> <br>\n# New People & Their Jobs\n* We said this is a new hot topic and people are trying to learn and spending time on it. What about their jobs? Are these new people getting job related with this or not? \n* Below chart is showing us that top 4 titles are Student, Software Engineer, Data Sceientist and Data Analyst.\n* If we think \"Software Engineer\" is related with data analyzing and \"Students\" will get job about this topic when they are graduated, so this shows us that new people are getting related jobs about data alayzing. ","734e676d":"<a id=\"3\"><\/a> <br>\n# Country Distribution","f1df07fa":"<a id=\"14\"><\/a> <br>\n# Undergraduate Major of Data Scientist\/Data Analyst\n* Top 3 major are expected majors, but the fourth one which is \"A business discipline(accounting, economics, finance, etc.)\" is the interesting point. This shows us that bussiness life will be more integrated with AI in the future. It seems decision mechanisms in the bussiness life will run with analyzed data mostly.","75d3acba":"<a id=\"8\"><\/a> <br>\n# ML Framework Usage Rates\n* **Scikit-Learn**, **TensorFlow** and **Keras** is mostly used.","ac32d97a":"<a id=\"7\"><\/a> <br>\n# Industry Based IDE Distribution\n* Based on **Computers\/Technology, Students and Academics**,\n* **IPyton**, **NotepadPlusPlus** and **PyCharm** is most popular IDE.","cc94c1a1":"<a id=\"15\"><\/a> <br>\n# Country Distribution of Data Scientist\/Data Analyst\n* United States and India is leading in this area. Total Data Scients and Data Analysts working on these countries is nearly bigger than rest of countries. This is interesting. ","00a13165":"<a id=\"10\"><\/a> <br>\n# Is The Data Analyzing New Popular Topic?\n* Nowadays, data analyzing is so popular. As you see below graphic, most of attandees are writing data analyzing code smaller than 5 years. This shows us that this is a new topic and getting more popularity.\n* Let's look at more deeply. Nearly half of participants is writing data analyzing code smaller than 2 years.  This also shows this topic is getting hot.","2706907f":"<a id=\"1\"><\/a> <br>\n# Age Distribution\n* 75,8% of participants is 18-34 years old. It seems youngest people is interested in \"Data Science\" and \"Machine Learning\" mostly."}}