{"cell_type":{"eb64b345":"code","473388d9":"code","cb527e03":"code","e4922ccc":"code","ef1c7657":"code","e1c5ae1e":"code","1b5f94ae":"code","a10c0651":"code","9b5e871d":"code","f2d9a683":"code","677bc56e":"code","60c11827":"code","9937fd80":"code","467fbd91":"code","290dbedd":"code","48992803":"code","872b9de5":"code","7d05c71f":"code","8c784814":"code","7dffc6d6":"code","13fcdd37":"code","677b0b61":"code","a1f952e3":"code","a6c63ff7":"code","6bfa8d23":"code","0ea7f7b8":"code","81a4fd4f":"code","5d012833":"markdown","83bcfc64":"markdown","83c3a271":"markdown"},"source":{"eb64b345":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","473388d9":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport datetime\nimport matplotlib.pyplot as plt","cb527e03":"adv_df = pd.read_csv('..\/input\/my-datasets\/advertising.csv')\nadv_df.head()","e4922ccc":"adv_df.info()\nadv_df.describe()","ef1c7657":"sns.set_style('whitegrid')\nadv_df['Age'].hist(bins = 40)\nplt.xlabel('Age')","e1c5ae1e":"sns.jointplot(x = 'Age', y = 'Area Income', data = adv_df )","1b5f94ae":"sns.jointplot(x = 'Age', y = 'Daily Time Spent on Site', data = adv_df, kind = 'kde', color = 'red')","a10c0651":"sns.jointplot(x = 'Daily Time Spent on Site', y = 'Daily Internet Usage', data = adv_df, color = 'g', xlim = [20,100], ylim = [50,300])","9b5e871d":"sns.pairplot(data = adv_df, hue = 'Clicked on Ad', palette = 'viridis')","f2d9a683":"from sklearn.linear_model import LogisticRegression \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split","677bc56e":"adv_df['Timestamp'] = pd.to_datetime(adv_df['Timestamp'])","60c11827":"def int_convert(time):\n    return int(time.strftime(\"%Y%m%d%H%M%S\"))\nadv_df['Timestamp'] = adv_df['Timestamp'].apply(int_convert)\nadv_df['Timestamp'].head()","9937fd80":"adv_df.head()","467fbd91":"le = LabelEncoder()\nadvcat = adv_df[['Ad Topic Line','City','Country','Timestamp']]","290dbedd":"advcat = advcat.apply(le.fit_transform)\nadvcat.head()","48992803":"advcat.set_index('City')","872b9de5":"adv_df.drop(['Ad Topic Line','City','Country','Timestamp'], axis = 1, inplace = True)","7d05c71f":"adv_df = pd.concat([adv_df,advcat],axis = 1)\nadv_df.head()","8c784814":"adv_df.info()","7dffc6d6":"x_train, x_test, y_train, y_test = train_test_split(adv_df.drop('Clicked on Ad', axis = 1), adv_df['Clicked on Ad'], test_size = 0.30, random_state = 34)","13fcdd37":"adv_df.head()","677b0b61":"adv_df['Timestamp']","a1f952e3":"logmodel = LogisticRegression(solver = 'liblinear')\nlogmodel.fit(x_train, y_train)","a6c63ff7":"pred_y = logmodel.predict(x_test)","6bfa8d23":"from sklearn.metrics import classification_report, confusion_matrix","0ea7f7b8":"print(classification_report(y_test,pred_y))","81a4fd4f":"print(confusion_matrix(y_test, pred_y))","5d012833":"# **Logistic Regression**","83bcfc64":"Note: Incase the Indexing error happens for not getting unique index, then add set_index()","83c3a271":"# **Exploratory Data Analysis**"}}