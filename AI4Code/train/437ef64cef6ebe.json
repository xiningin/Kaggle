{"cell_type":{"6ebe4857":"code","127eb6f5":"code","53c99544":"code","d2467d8a":"code","89a582cd":"code","eccd6648":"code","733188da":"code","5209de11":"code","be165ac9":"code","481115b6":"code","9ef2fc79":"code","52fde460":"code","9c0887d0":"code","35129a7f":"code","76da8fbd":"code","4747b4eb":"code","1de719b7":"code","d2b60c67":"code","12a78033":"code","10ba68cd":"markdown","c4163264":"markdown","3ede48a1":"markdown","867a29d3":"markdown","cfde4816":"markdown","619c07ae":"markdown","17f931c6":"markdown","ada3e450":"markdown","f8b5a7d4":"markdown","307f8d06":"markdown","e445e1dd":"markdown","8a31f27e":"markdown","49b1446e":"markdown"},"source":{"6ebe4857":"#install a few libs\n!pip install sh==1.14.2 sentinelhub==3.3.2 radiant_mlhub -q","127eb6f5":"# for given helper functions \n!git clone https:\/\/github.com\/AI4EO\/tum-planet-radearth-ai4food-challenge","53c99544":"# ensure you have the required python packages\n# import sys\n# !{sys.executable} -m pip install -r requirements.txt","d2467d8a":"#general\nimport os\nimport shutil\n\n#plotting\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom matplotlib.patches import Patch\nfrom matplotlib.colors import ListedColormap\n\n#progressbar\nfrom tqdm.auto import tqdm\n\n\nimport geopandas as gpd\n\nfrom radiant_mlhub import get_session\nfrom radiant_mlhub import Dataset,Collection\n","89a582cd":"#relative imports\nshutil.copy('.\/tum-planet-radearth-ai4food-challenge\/notebook\/utils\/sentinel_1_reader.py','.\/')\n\nfrom sentinel_1_reader import S1Reader","eccd6648":"#get key\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"RadiantEarth_MLHub\")\n\n#authenticate\nos.environ['MLHUB_API_KEY'] = secret_value_0\nsession = get_session()\n\n\n\n# Download the Brandenburg-Germany Dataset\ndataset = Dataset.fetch('dlr_fusion_competition_germany')\n\n\nfor file in dataset.collections:\n    print(f'{file.id}: {file.title}....Size in GB is {file.archive_size\/(1024**3)}')\n    \n    ","733188da":"labels_dir = '.\/labels'\n\nif not os.path.exists(labels_dir):\n    os.mkdir(labels_dir)\n    \n#dowload train labels\nlab_tr = Collection.fetch('dlr_fusion_competition_germany_train_labels')\nprint(f'train labels size in MB {lab_tr.archive_size\/ 1024**2}')\n#download\nlab_tr.download(labels_dir)\n\n\n#dowload test labels\nlab_ts = Collection.fetch('dlr_fusion_competition_germany_test_labels')\nprint(f'test labels size in MB {lab_tr.archive_size\/ 1024**2}')\n#download\nlab_ts.download(labels_dir)\n","5209de11":"shutil.unpack_archive('.\/labels\/dlr_fusion_competition_germany_test_labels.tar.gz')\nshutil.unpack_archive('.\/labels\/dlr_fusion_competition_germany_train_labels.tar.gz')\n\n#remove labels archive\nshutil.rmtree(labels_dir)","be165ac9":"#labels\ntr_labels_dir = '.\/dlr_fusion_competition_germany_train_labels\/dlr_fusion_competition_germany_train_labels_33N_18E_242N\/labels.geojson'\nts_labels_dir = '.\/dlr_fusion_competition_germany_test_labels\/dlr_fusion_competition_germany_test_labels_33N_17E_243N\/labels.geojson'\n\n#s1 dirs \ns1_train = '..\/input\/ai4eo-sentinel-1-tar\/sentinel1_data\/dlr_fusion_competition_germany_train_source_sentinel_1'\ns1_test = '..\/input\/ai4eo-sentinel-1-tar\/sentinel1_data\/dlr_fusion_competition_germany_train_source_sentinel_1'","481115b6":"#load test train labels\ntest_labels = gpd.read_file('.\/dlr_fusion_competition_germany_test_labels\/dlr_fusion_competition_germany_test_labels_33N_17E_243N\/labels.geojson')\ntrain_labels = gpd.read_file('.\/dlr_fusion_competition_germany_train_labels\/dlr_fusion_competition_germany_train_labels_33N_18E_242N\/labels.geojson')\n\ntrain_labels.head()","9ef2fc79":"label_ids= train_labels['crop_id'].unique()\nlabel_names= train_labels['crop_name'].unique()","52fde460":"def plot_hist(arr,\n              label,\n              ax1=None,\n              n_bins=30):\n    \n    if not ax1:\n        ax1=plt.figure(figsize=(8,6))\n        \n    plt.hist(arr,bins=n_bins)\n    plt.title(f'Histogram {label}')\n    plt.ylabel('Count')\n    plt.xlabel(f'{label}')\n    ","9c0887d0":"#set plt style\nplt.style.use('Solarize_Light2')","35129a7f":"plt.figure(figsize=(16,8))\nsns.countplot(x=train_labels['crop_name'],orient='v')\nplt.title('Crop instance Count')","76da8fbd":"ax=plt.figure(figsize=(16,8))\nplt.hist(train_labels['SHAPE_AREA'],bins=100)\n\nprint(f'mean Area of fields {train_labels.SHAPE_AREA.mean()}')\nprint(f'standard deviation Area of fields {train_labels.SHAPE_AREA.std()}')\nprint(f'median Area of fields {train_labels.SHAPE_AREA.median()}')\nplt.title('Crop Area Distribution')","4747b4eb":"plt.subplots(3,3,figsize=(16,3*6))\nfor i,name in enumerate(train_labels['crop_name'].unique()):\n    ax=plt.subplot(3,3,i+1)\n    plot_hist(train_labels[train_labels['crop_name']==name]['SHAPE_AREA'],name+'_AREA',ax1=ax)","1de719b7":"plt.subplots(3,3,figsize=(16,3*6))\nfor i,name in enumerate(train_labels['crop_name'].unique()):\n    ax=plt.subplot(3,3,i+1)\n    plot_hist(train_labels[train_labels['crop_name']==name]['SHAPE_LEN'],name+'_LEN',ax1=ax)","d2b60c67":"#from https:\/\/github.com\/AI4EO\/tum-planet-radearth-ai4food-challenge\/blob\/main\/notebook\/starter-pack.ipynb\n\n\n#DISPLAY TARGET FIELDS of 2018 FOR TRAINING ON THE MAP BY LABEL: \n\n#colors\ncolors_list = ['#78C850','#A8B820','#F8D030','#E0C068', '#F08030', '#C03028', '#F85888','#6890F0','#98D8D8'] \n\nfig, ax = plt.subplots(figsize=(18, 18))\ncounter=0\nlegend_elements = []\nfor name, group in train_labels.groupby('crop_name'):\n    group.plot(ax=ax,color=colors_list[counter], aspect=1)\n    legend_elements.append(Patch(facecolor=colors_list[counter], edgecolor=colors_list[counter],label=name))\n    counter+=1\n\nax.legend(handles=legend_elements,loc='lower right')\nax.title.set_text('BRANDENBURG 2018: GROUND TRUTH POLYGONS WITH CROP LABELS for TRAINING')","12a78033":"\n\n#DISPLAY TARGET FIELDS of 2019 WITHOUT LABELS : \n\nfig, ax = plt.subplots(figsize=(18, 18))\ncounter=0\nlegend_elements = []\nfor name, group in test_labels.groupby('crop_name'):\n    group.plot(ax=ax,color=colors_list[counter], aspect=1)\n    legend_elements.append(Patch(facecolor=colors_list[counter], edgecolor=colors_list[counter],label=name))\n    counter+=1\n\nax.legend(handles=legend_elements,loc='lower right')\nax.title.set_text('BRANDENBURG 2019: GROUND TRUTH POLYGONS WITHOUT CROP LABELS for the EVALUATION')\n\n","10ba68cd":"**Training data**","c4163264":"# Load data","3ede48a1":"# Imports","867a29d3":"**Distribution of Area of Field**","cfde4816":"# unpack labels","619c07ae":"**Download labels**","17f931c6":"# # Reference and Resources \n* AI for EO starter : https:\/\/github.com\/AI4EO\/tum-planet-radearth-ai4food-challenge\/blob\/main\/notebook\/starter-pack.ipynb\n* Data access starter : https:\/\/github.com\/AI4EO\/tum-planet-radearth-ai4food-challenge\/blob\/main\/notebook\/access-data-with-sentinelhub.ipynb\n* DatasetPaper : https:\/\/openreview.net\/pdf?id=uUa4jNMLjrL\n* EO learn : https:\/\/eo-learn.readthedocs.io\/en\/latest\/index.html","ada3e450":"**Distribution of crops**","f8b5a7d4":"**Downloading Labels**","307f8d06":"# Plot of fields.","e445e1dd":"# Exploratory data Analysis","8a31f27e":"# Data Description\n\n* Train and Test Data from sentinel-1 and sentinel-2 is downloaded from Radiant ML Hub.\n* Downloading the test labels in this notebook","49b1446e":"**Helper functions**"}}