{"cell_type":{"5e384bcd":"code","98e6cb70":"code","c91392c1":"code","4a3822f6":"code","1680c5df":"code","57f977c4":"code","b9192c6d":"code","edece479":"code","d26a3207":"code","cd602e70":"code","ac6a330d":"code","a68a04d8":"code","19562830":"code","3ade88d9":"code","fe26c44c":"code","0f467ca2":"code","43c9c8cb":"code","e8ad1a73":"code","cb64d456":"code","42a11fd8":"code","0de3269e":"code","3a932e8b":"code","d2d2cc19":"code","874d6267":"code","1e5c78e0":"code","f8b1f2e1":"code","c2e8560a":"code","1b1680a7":"code","04d647b0":"code","1da764c1":"code","b54ab180":"code","1d6c944f":"code","b389e4ba":"code","28c0905d":"code","e98d704d":"code","0e2b5964":"code","0ecaf080":"code","1e1730df":"code","082b70c1":"code","e7fcf316":"code","73e11845":"code","52358dfa":"code","86754ae8":"code","b00b3949":"code","bdf5cfa6":"code","b70b5c0f":"code","3f45e75e":"code","7112087b":"code","56135271":"code","42b56818":"code","a20b548e":"code","b372b859":"code","cf8c9387":"code","945e68ff":"code","40d022c2":"code","9ef7ec5c":"code","0c6a9224":"code","aad85bba":"code","7013ff05":"markdown","40a9debc":"markdown"},"source":{"5e384bcd":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","98e6cb70":"import os\nprint(os.listdir(\"..\/input\"))","c91392c1":"df=pd.read_csv(r'..\/input\/perrin-freres-monthly-champagne-sales\/perrin-freres-monthly-champagne.csv')","4a3822f6":"df.head()","1680c5df":"df.tail()","57f977c4":"df.shape","b9192c6d":"## Cleaning up the data\ndf.columns=[\"Month\",\"Sales\"]\ndf.head()","edece479":"## Drop last 2 rows\ndf.drop(106,axis=0,inplace=True)","d26a3207":"df.tail()","cd602e70":"df.drop(105,axis=0,inplace=True)","ac6a330d":"df.tail()","a68a04d8":"# Convert Month into Datetime\ndf['Month']=pd.to_datetime(df['Month'])","19562830":"df.head()","3ade88d9":"df.set_index('Month',inplace=True)","fe26c44c":"df.head()","0f467ca2":"df.describe()","43c9c8cb":"df.plot()","e8ad1a73":"#looking this graph,we can say this data is seasonal\n#(seasonal is all about suppose in each yr in christmas sales goes up) and then down","cb64d456":"# we plot,whether test is stationary or not\n#if not stationery then how to make it stationery","42a11fd8":"### Testing For Stationarity\n\nfrom statsmodels.tsa.stattools import adfuller","0de3269e":"test_result=adfuller(df['Sales'])","3a932e8b":"#adfuller gives 5 values ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n#most imp is p-value\n#this is almost similar to Hypothesis testing,whereas Null hypo which says Data is not Stationery\n#whereas Alternate hypo says data is stationery\n\n","d2d2cc19":"###if Pvalue<0.05 ,we reject Null hypo ie alternate hypo is true,ie data is stationery","874d6267":"\n#zip basically combines result,labels\n\ndef adfuller_test(sales):\n    result=adfuller(sales)\n    labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n    for value,label in zip(result,labels):\n        print(label+' : '+str(value) )\n    if result[1] <= 0.05:\n        print(\"strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data has no unit root and is stationary\")\n    else:\n        print(\"weak evidence against null hypothesis, time series has a unit root, indicating it is non-stationary \")\n    ","1e5c78e0":"adfuller_test(df['Sales'])","f8b1f2e1":"#if our data is non-stationery,we have to make it stationery using various techniques such as Differencing & many more","c2e8560a":"df","1b1680a7":"df['Sales'].shift(1)","04d647b0":"df['Sales First Difference'] = df['Sales'] - df['Sales'].shift(1)","1da764c1":"#why taken shift(12),bcz basically year has 12 month cycle\ndf['Seasonal First Difference']=df['Sales']-df['Sales'].shift(12)","b54ab180":"df.head(14)","1d6c944f":"## Again test dickey fuller test on df['Sales First Difference']\nadfuller_test(df['Seasonal First Difference'].dropna())","b389e4ba":"#now our p-value is less than 0.05 which basically says we are rejecting null hypo and accepting alternate hypo\n#ie data is stationery\n#if p-value is almost 0,then we have a wonderful stationery graph","28c0905d":"df['Seasonal First Difference'].plot()","e98d704d":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf\n#Autocorrelation(plot_acf),Partial Autocorrelation(plot_pacf)","0e2b5964":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf","0ecaf080":"\nfig = plt.figure(figsize=(12,8))\nax1 = fig.add_subplot(211)\nfig = plot_acf(df['Seasonal First Difference'].iloc[13:],lags=40,ax=ax1)\nax2 = fig.add_subplot(212)\nfig = plot_pacf(df['Seasonal First Difference'].iloc[13:],lags=40,ax=ax2)","1e1730df":"# For non-seasonal data\n#p=1, d=1, q=0 or 1\nfrom statsmodels.tsa.arima_model import ARIMA","082b70c1":"model=ARIMA(df['Sales'],order=(1,1,1))\nmodel_fit=model.fit()","e7fcf316":"model_fit.summary()","73e11845":"df['forecast']=model_fit.predict(start=90,end=103,dynamic=True)\ndf[['Sales','forecast']].plot(figsize=(12,8))","52358dfa":"## note: when u have seasonal data, use SARIMAX over there..","86754ae8":"import statsmodels.api as sm","b00b3949":"#seasonal_order=(1,1,1,12)\n#(p,d,q,shift_value)","bdf5cfa6":"model=sm.tsa.statespace.SARIMAX(df['Sales'],order=(1, 1, 1),seasonal_order=(1,1,1,12))\nresults=model.fit()","b70b5c0f":"#predicting from index 90 to 103\ndf['forecast']=results.predict(start=90,end=103,dynamic=True)\n","3f45e75e":"#blue line is original data anf orange is a forecasted data\ndf[['Sales','forecast']].plot(figsize=(12,8))","7112087b":"### to see how future predictions\/projections looks like","56135271":"from pandas.tseries.offsets import DateOffset","42b56818":"df.index[-1]","a20b548e":"future_dates=[df.index[-1]+ DateOffset(months=x)for x in range(0,24)]","b372b859":"future_dates","cf8c9387":"from pandas.tseries.offsets import DateOffset\n\n#creating additional dataset for 24 months,\nfuture_dates=[df.index[-1]+ DateOffset(months=x)for x in range(0,24)]","945e68ff":"future_datset_df=pd.DataFrame(index=future_dates[1:],columns=df.columns)","40d022c2":"future_datset_df.tail()","9ef7ec5c":"future_df=pd.concat([df,future_datset_df])","0c6a9224":"#then we can see future predictions","aad85bba":"future_df['forecast'] = results.predict(start = 104, end = 120, dynamic= True)  \nfuture_df[['Sales', 'forecast']].plot(figsize=(12, 8)) ","7013ff05":"## Differencing","40a9debc":"## Step 2: Visualize the Data"}}