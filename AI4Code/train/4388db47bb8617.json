{"cell_type":{"befdfd18":"code","51811725":"code","6d512187":"code","75b45b5d":"code","dc231e23":"code","dfa33fd8":"code","a333e1a1":"code","d71c1085":"code","5d1d6457":"code","40bf0d23":"code","c3477c42":"code","de83df3a":"code","636875b9":"code","a20e9279":"code","954a7e2a":"code","64a7672b":"code","c7fbc0ad":"code","f6179bcd":"code","4d653f92":"code","5e435406":"markdown","59a5070d":"markdown","543ba305":"markdown","d000549d":"markdown","7d57f36d":"markdown","fd0f3c4a":"markdown","7c48bc08":"markdown","52c3347e":"markdown"},"source":{"befdfd18":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51811725":"import matplotlib.pyplot as plt\n# plt.style.use('dark_background')\nimport seaborn as sns\nsns.set_style('darkgrid')","6d512187":"df = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","75b45b5d":"df.info()","dc231e23":"df.isnull().sum()","dfa33fd8":"plt.figure(figsize = (16,6))\nsns.countplot(df['sepal_length'], hue = df['species'], palette = 'inferno')","a333e1a1":"plt.figure(figsize = (16,6))\nsns.countplot(df['sepal_width'], hue = df['species'], palette = 'Reds')","d71c1085":"plt.figure(figsize = (16,6))\nsns.countplot(df['petal_length'], hue = df['species'], palette = 'magma')","5d1d6457":"plt.figure(figsize = (16,6))\nsns.countplot(df['petal_length'], hue = df['species'], palette = 'Blues')","40bf0d23":"plt.figure(figsize = (8,8))\nsns.scatterplot(x = 'sepal_length', y = 'sepal_width' , data = df , hue = 'species', palette = 'inferno' , s = 60)","c3477c42":"plt.figure(figsize = (8,8))\nsns.scatterplot(x = 'petal_length', y = 'petal_width' , data = df , hue = 'species', palette = 'magma' , s=60)","de83df3a":"plt.figure(figsize = (8,8))\nsns.pairplot(df)","636875b9":"x = df.drop(['species'] , axis = 1)\ny = df['species']","a20e9279":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3, random_state = 0)","954a7e2a":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()","64a7672b":"lr.fit(x_train, y_train)\nlr.score(x_train,y_train)","c7fbc0ad":"predictions = lr.predict(x_test)\npredictions","f6179bcd":"y_test","4d653f92":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, predictions)","5e435406":"# # Accuracy = 97.7 %","59a5070d":"Inference - Density of Versicolor is more on lower sepal width and density of sentosa is more on higher sepal width","543ba305":"Inference - Density of Sentosa is more on lower petal length and density of virginica is more on higher petal length","d000549d":"Inference - Density of Sentosa is more on lower sepal length and density of virginica is more on higher sepal length","7d57f36d":"# # Visualising different columns wrt species ","fd0f3c4a":"Inference - Density of Sentosa is more on lower petal length and density of virginica is more on higher petal length","7c48bc08":"# # Logistic Regression Model","52c3347e":"# # Data Analysis and Visualisation"}}