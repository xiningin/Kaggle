{"cell_type":{"2b63fd15":"code","bba689fe":"code","82ce9e34":"code","25384a17":"code","62320e79":"code","47f854e0":"code","b50f3bea":"code","2b6ad636":"code","8ecdae50":"code","b91bf17c":"code","bc0fe81d":"code","a29070e5":"code","9afbf7b3":"code","94a2908c":"code","9d62c5f1":"code","5bd1cd8a":"code","cfd14218":"code","fa144a14":"code","d96136b2":"code","e210faa3":"code","defcc264":"code","26d3a4cb":"code","695928ad":"code","2f208f05":"code","7458d09d":"code","723137bc":"markdown","f19ebe5e":"markdown","14c2230e":"markdown","626a1539":"markdown","d4e4ce6e":"markdown","544211be":"markdown","202e3f94":"markdown","3d4a94e4":"markdown","c94c67c2":"markdown","8217c921":"markdown","3c44af8c":"markdown","b91aa023":"markdown","73ddab63":"markdown","c7583cd5":"markdown","d9fb34b4":"markdown","dacc3159":"markdown","fdf3f0a8":"markdown"},"source":{"2b63fd15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected =True)\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom wordcloud import WordCloud     #word cloud library\nimport matplotlib.pyplot as plt     #matplotlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","bba689fe":"# Prepare Data\nfifa_data = pd.read_csv('..\/input\/CompleteDataset.csv')\nplt.show()\nfifa_data.head()","82ce9e34":"# In order to be able to start our ranking from 1, we have assigned the 'array' variable.\nfifa_data['array'] = fifa_data['Unnamed: 0']+1","25384a17":"# Let's change the names of some columns\nfifa_data.rename(columns={'Ball control':'ball_control','Free kick accuracy':'free_kick',\n                     'Shot power':'shot_power'}, inplace=True)\n# Just take the columns we'll use\nfifa_data= fifa_data[['array','Name','Age','Nationality','Overall','Potential','Club','Value',\n                      'Wage','Special','Acceleration','ball_control','Dribbling','free_kick',\n                      'Penalties','shot_power']]","62320e79":"fifa_data.head()","47f854e0":"fifa_data.info()","b50f3bea":"# Prepare Data Frame\nd_frame = fifa_data.iloc[:100,:]\n\n#Creating trace1\ntrace1 = go.Scatter(\n    x= d_frame.array,\n    y= d_frame.Overall,\n    mode='lines',\n    name='Overall',\n    marker= dict(color='rgba(12, 255, 250,0.9)'),\n    text= d_frame.Name\n)\n#Creating trace2\ntrace2 = go.Scatter(\n    x= d_frame.array,\n    y= d_frame.Potential,\n    mode='lines+markers',\n    name='Potential',\n    \n    text= d_frame.Name\n)\ndata = [trace1,trace2]\nlayout= dict(title=\"Comparing the 'Overall' and 'Potential' of players\",\n            xaxis= dict(title='Player Rank', ticklen=5, zeroline=False)\n            )\nfig= dict(data=data, layout=layout)\niplot(fig)","2b6ad636":"# Prepare Data Frame\nd_frame = fifa_data.iloc[90:100,:]\n\n#create trace1\ntrace1 = go.Bar(\n    x= d_frame.array,\n    y= d_frame.Overall,\n    name= 'Overall',\n    marker= dict(color= 'rgba(255,106,0,0.9)',\n                line= dict(color= 'rgb(0,0,0)', width=1)),\n    text= d_frame.Name\n)\n#Create trace2\ntrace2 = go.Bar(\n    x= d_frame.array,\n    y= d_frame.Potential,\n    name= 'Potential',\n    marker= dict(color= 'rgba(148, 255, 130,0.9)',\n                line= dict(color='rgb(0,0,0)', width=1)),\n)\ndata= [trace1, trace2]\nlayout= go.Layout(barmode= \"group\")\nfig= go.Figure(data=data, layout=layout)\niplot(fig)","8ecdae50":"#Prepare Data Frame\nd_frame = fifa_data.iloc[:5,:]\n\n#Create trace1\ntrace1= {\n    'x': d_frame.array,\n    'y': d_frame.free_kick,\n    'name': 'Free Kick',\n    'type': 'bar',\n    'text': d_frame.Name\n};\n#Create trace2\ntrace2= {\n    'x': d_frame.array,\n    'y': d_frame.Penalties,\n    'name': 'Penalty',\n    'type': 'bar',\n    'text': d_frame.Name,\n    'marker': dict(color= 'rgba(148, 255, 130,0.9)'),\n};\ndata= [trace1, trace2]\nlayout= {\n    'xaxis': {'title':'First 5 Player'},\n    'barmode': 'relative',\n    'title': 'Top 5 Players frikik and penalty strokes comparison'\n};\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","b91bf17c":"#Prepare Data Frame\nd_frame = fifa_data.iloc[:100,:]\ndonut= d_frame.Club.value_counts()\nlabels = d_frame.Club.value_counts().index\n\n#Creat figure\nfig = {\n    \"data\":\n    [\n        {\n            \"values\": donut,\n            \"labels\": labels,\n            \"domain\": {\"x\": [0, 1]},\n            \"name\": \"Clubs Rate\",\n            \"hoverinfo\": \"label+percent+name\",\n            \"hole\": .4,\n            \"type\": \"pie\"\n        }, \n    ],\n    \"layout\":\n    {\n        \"title\":\"Club rates of the top 100 players\",\n        \"annotations\":\n        [\n            { \n                \"font\":{\"size\":20},\n                \"showarrow\":False,\n                \"text\": \"\",\n                \"x\": 0,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","bc0fe81d":"#Prepare Data Frame\nd_frame = fifa_data.iloc[:100,:]\ndonut= d_frame.Nationality.value_counts()\nlabels = d_frame.Nationality.value_counts().index #Country names of the top 100 players\n\n#Creat Figure\nfig = {\n    \"data\":\n    [\n        {\n            \"values\": donut,\n            \"labels\": labels,\n            \"domain\": {\"x\": [0, 1]},\n            \"name\": \"Clubs Rate\",\n            \"hoverinfo\": \"label+percent+name\",\n            \"hole\": .4,\n            \"type\": \"pie\"\n        }, \n    ],\n    \"layout\":\n    {\n        \"title\":\"Nationality rates of the top 100 players\",\n        \"annotations\":\n        [\n            { \n                \"font\":{\"size\":20},\n                \"showarrow\":False,\n                \"text\": \"\",\n                \"x\": 0,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","a29070e5":"#Prepare Data Frame\nd_frame = fifa_data.Name[:50]\n\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                   background_color='White',\n                        width = 700,\n                        height = 400\n    ).generate(\" \".join(d_frame))\n\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')","9afbf7b3":"#Prepare Data Frame\nd_frame = fifa_data.iloc[:10,:]\n\n#Create trace\ntrace = go.Scatter3d(\n    x=d_frame.ball_control,\n    y=d_frame.Dribbling,\n    z=d_frame.shot_power,\n    text= d_frame.Name,\n    mode='markers',\n    marker=dict(\n        size=12,\n        #color= z,          #set color to an array\/list of desired value (plotly.ly)\n#When we enters 'Fork Notebook' he describes 'z'. But why doesn't he recognize this right now? \n        colorscale='Viridis',   #Choose a colorscale\n        opacity=0.8\n    )\n)\ndata = [trace]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","94a2908c":"#We'll edit 'Wage' to compare our values                                       \n#removes \u20ac -> it will be like that: '\u00a3100K' -> '100K'\nwage = fifa_data['Wage'].map(lambda x: x.replace(\"\u20ac\", \"\"))\nwage.head()                                                                \n                                                                                        \n#removes K -> it will be like that: '100K' -> '100'\nwage = wage.map(lambda x: x.replace(\"K\", \"\"))\nwage.head()","9d62c5f1":"#We'll edit 'Value' to compare our values                                                 \n#removes \u20ac -> it will be like that: '\u00a3100M or \u00a3100K' -> '100M or 100K'\nvalue = fifa_data['Value'].map(lambda x: x.replace(\"\u20ac\", \"\"))\n                                                                       \n#removes M -> it will be like that: '100M' -> '100 or 100K'\nvalue = value.map(lambda x: x.replace(\"M\", \"\"))\nvalue.head()\n#removes K -> it will be like that: '100K' -> '100'\nvalue = value.map(lambda x: x.replace(\"K\", \"\"))\nvalue.head()                                                                            ","5bd1cd8a":"#We multiply by '1000' because we remove 'K'\nwage = wage.astype(\"int\")*1000\nwage.head()","cfd14218":"#We multiply by '1000000' because we remove 'M'\nvalue = value.astype(\"float\")*1000000\nvalue.head()","fa144a14":"#Let's create new columns now\nfifa_data['wage']=wage\nfifa_data['value']=value\nfifa_data.head()","d96136b2":"#Now let's see 20 players with the highest 'Wage'\nfifa_data.sort_values(\"wage\", ascending=False).head(20)","e210faa3":"#Prepare Data Frame\nd_frame = fifa_data.sort_values(\"wage\", ascending=False).head(20)\n\n#Create trace1\ntrace1 = go.Bar(\n    x= d_frame.wage,\n    opacity = 0.75,\n    name= 'Wage',\n    text= d_frame.Name,\n    marker = dict(color='rgba(0, 250, 0,0.6)'))\n#Create trace2\ntrace2 = go.Bar(\n    x=d_frame.value,\n    opacity = 0.75,\n    name= \"Value\",\n    text= d_frame.Name,\n    marker= dict(color='rgba(26, 26, 26,0.6)'))\n\ndata = [trace1,trace2]\nlayout = go.Layout(barmode='stack',\n                  title=\"Comparison of 'Wage' and 'Value' Among 20 Players with the Highest Wage\",\n                  xaxis= dict(title= 'Wage - Value'),\n                  yaxis= dict(title='Array'),)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","defcc264":"#Prepare Data Frame\nd_frame = fifa_data.iloc[:100,:]\n\n#Create trace1\ntrace1 = go.Scatter(\n    x=d_frame.array,\n    y=d_frame.value,\n    text= d_frame.Name,\n    name='value',\n    marker= dict(color='rgba(26, 163, 242,0.9)'),\n    mode= 'lines+markers'\n)\n#Create trace2\ntrace2 = go.Scatter(\n    x=d_frame.array,\n    y=d_frame.wage,\n    xaxis='x2',\n    yaxis='y2',\n    text= d_frame.Name,\n    name='wage',\n    marker= dict(color='rgba(70, 71, 71,0.9)'),\n    mode= 'markers'\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    title = \"Top 100 players' wage and values\",\n    xaxis2=dict(\n        domain=[0.3, 1],\n        anchor='y2'\n    ),\n    yaxis2=dict(\n        domain=[0.6, 1],\n        anchor='x2'\n    )\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","26d3a4cb":"fifa_data.groupby(\"Club\")[\"wage\"].mean().sort_values(ascending=False).head(10)","695928ad":"#Prepare Data Frame\nd_frame = fifa_data.groupby(\"Club\")[\"wage\"].mean().sort_values(ascending=False).head(10)\n\n#Create trace\ntrace = go.Bar(\n    x= fifa_data.array,\n    y= d_frame,\n    opacity = 0.75,\n    text= fifa_data.Club,\n    marker = dict(color='rgba(0, 250, 100,0.6)'))\n\ndata = [trace]\nlayout = go.Layout(barmode='group',\n                  title='Top 10 teams paying maximum wage',\n                  xaxis= dict(title= 'Array'),\n                  yaxis= dict(title='Total Wage'),)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2f208f05":"#Now let's see the top 10 countries with the have more players\nfifa_data.groupby(\"Nationality\").Name.count().sort_values(ascending=False).head(10)","7458d09d":"#How many players are from the same country?\ndf = fifa_data['Nationality'].value_counts()\n\niplot([\n    go.Choropleth(\n    locationmode='country names',\n    locations=df.index.values,\n    text= df.index,\n    z=df.values,\n    colorscale= 'Jet'\n    )\n])","723137bc":"<a id=\"13\"><\/a> <br>\n> # Questions1. \n   1. [Why we can't see players from England](#14)\n   2. [When we enters 'Fork Notebook' it describes z. But why doesn't he recognize this right now?](#15)","f19ebe5e":"<a id=\"1\"><\/a> <br>\n## 2) Comparing the 'Overall' and 'Potential' of Players with Scatter Plot ","14c2230e":"<a id=\"4\"><\/a> <br>\n## 5) Club Rates of the Top 100 Players with Pie Plot","626a1539":"<a id=\"8\"><\/a> <br>\n## 9) Wage' and 'Value' Comparisons","d4e4ce6e":"<a id=\"12\"><\/a> <br>\n## 10) How Many Players From Which Country  with World Map <a id=\"14\"><\/a> <br>","544211be":"<a id=\"9\"><\/a> <br>\n###  A) Comparison of 'Wage' and 'Value' Among 20 Players with the Highest Wage","202e3f94":"<a id=\"6\"><\/a> <br>\n## 7) Names of the Top 100 Players with 'Word Cloud'","3d4a94e4":"<a id=\"2\"><\/a> <br>\n## 3) Comparing 'Overall' and 'Potential' Values of Players between 90 and 100 with Bar Plot","c94c67c2":"<a id=\"10\"><\/a> <br>\n### B) Top 100 Players' Wages and Values with Scatter Plot","8217c921":"<a id=\"5\"><\/a> <br>\n## 6) Nationality Rates of the Top 100 Players with Pie Plot","3c44af8c":"> # REFERENCES\n<br> 1. KAAN CAN ( DATAI ) -  Plotly Tutorial for Beginners - https:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners","b91aa023":"<a id=\"3\"><\/a> <br>\n## 4) Top 5 Players Frikik and Penalty Strokes Comparison with Bar Plot\n","73ddab63":"<a id=\"11\"><\/a> <br>\n### C) Top 10 Teams Paying Maximum Wage with Bar Plot","c7583cd5":"# Cihan Yatbaz\n\n### 27 \/ 10 \/ 2018\n\n\n\n1.  [Introduction:](#0)\n2. [Comparing the 'Overall' and 'Potential' of Players with Scatter Plot :](#1)\n3. [Comparing 'Overall' and 'Potential' Values of Players between 90 and 100 with Bar Plot :](#2)\n4. [Top 5 Players Frikik and Penalty Strokes Comparison with Bar Plot :](#3)\n5. [Club Rates of the Top 100 Players with Pie Plot :](#4)\n6. [Nationality Rates of the Top 100 Players with Pie Plot :](#5)\n7. [Names of the Top 100 Players with 'Word Cloud'  :](#6)\n8. [Top 10 Players 'Ball Control', 'Dribbling' and 'Shot Power' Features Comparison with Scatter 3D Plot :](#7)\n9. [Wage' and 'Value' Comparisons :](#8)\n    1. [Comparison of 'Wage' and 'Value' Among 20 Players with the Highest Wage :](#9)\n    2.  [Top 100 Players' Wages and Values with Scatter Plot :](#10)\n    3. [Top 10 Teams Paying Maximum Wage with Bar Plot  :](#11)\n10. [How Many Players From Which Country with World Map :](#12)\n11. [I have some questions. May you help me?](#13)\n11. [CONCLUSION :](#13)","d9fb34b4":"<a id=\"14\"><\/a> <br>\n> # CONCLUSION                                                                                                                                                      \nThank you for your votes and comments                                                                                                                                              \n<br>**If you have any suggest, May you write for me, I will be happy to hear it.**","dacc3159":"<a id=\"7\"><\/a> <br> <a id=\"15\"><\/a> <br>\n## 8) Top 10 Players 'Ball Control', 'Dribbling' and 'Shot Power' Features Comparison with Scatter 3D Plot","fdf3f0a8":"<a id=\"0\"><\/a> <br>\n## 1) Introduction\nThe Kernel contains the Fifa 18 Complete Player Dataset. <br>\nYou can see the data analyses I have done with this Kaggle. If you have any suggestions or my shortcomings, please let me know. I'll be happy about that."}}