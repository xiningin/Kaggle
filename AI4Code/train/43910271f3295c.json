{"cell_type":{"03366bdc":"code","954e6b5b":"code","153e97d1":"code","390c572c":"code","88c1ac0f":"code","539db193":"code","cc9e3e2e":"code","7fe60078":"code","1f596008":"code","aae057e5":"code","4cd655be":"code","b70338e9":"code","f1e77cfb":"code","23fd719c":"code","f55f97cf":"code","58fd2d7e":"code","6bd9ad92":"code","63085f97":"code","3864c2f4":"code","a7fead8f":"code","16d91533":"code","432aaf30":"code","3f2e4ce9":"code","d14c0674":"code","a6d55f87":"code","d7bf81cb":"code","d415a935":"code","d4295bb7":"code","cb20a7b5":"markdown","ed0705fc":"markdown","f0b09789":"markdown","3ea841cb":"markdown","67ecead3":"markdown","54af9705":"markdown","8fb9a8ce":"markdown","dfe1510d":"markdown","3094eaa1":"markdown","67a10f24":"markdown","f8719258":"markdown"},"source":{"03366bdc":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\ndata = pd.read_csv(\"\/kaggle\/input\/disney-movies\/disney_movies.csv\")","954e6b5b":"data.head()","153e97d1":"print(data.shape)\nprint(data.describe())","390c572c":"print(\"-------------max grossing-------------\")\nprint(data[[\"total_gross\", \"inflation_adjusted_gross\", \"movie_title\"]].max())\nprint(\"-------------min grossing-------------\")\nprint(data[[\"total_gross\", \"inflation_adjusted_gross\", \"movie_title\"]].min())","88c1ac0f":"fig=plt.figure()\nax=fig.add_axes([0,0,3,1])\nax = sns.stripplot(x=\"genre\", y=\"total_gross\", data=data, ax=ax)\n\n","539db193":"fig=plt.figure()\nax=fig.add_axes([0,0,3,1])\nax = sns.stripplot(x=\"mpaa_rating\", y=\"total_gross\", data=data, ax=ax)","cc9e3e2e":"data.plot(x=\"release_date\", y=\"total_gross\", kind=\"scatter\")","7fe60078":"data.plot(x=\"release_date\", y=\"total_gross\", kind=\"line\")","1f596008":"data.groupby(\"genre\").describe()","aae057e5":"data.groupby(\"genre\").median().plot(kind=\"bar\", y=\"total_gross\", title=\"Median\")\ndata.groupby(\"genre\").mean().plot(kind=\"bar\", y=\"total_gross\", title=\"Mean\")\ndata.groupby(\"genre\").sum().plot(kind=\"bar\", y=\"total_gross\", title=\"Sum\")","4cd655be":"genre_group = data.groupby(\"genre\")","b70338e9":"for i in set(data[\"genre\"]):\n    print(\"-\"*16, i, \"-\"*16)\n    grp = data.where(data[\"genre\"]==i).dropna()\n    print(\"\\n\\n----MAX----\\n\")\n    print(grp.max())\n    print(\"\\n\\n----MIN----\\n\")\n    print(grp.min())\n    print(\"\\n\\n\")","f1e77cfb":"for i in set(data[\"genre\"]):\n#     print(\"-\"*16, i, \"-\"*16)\n#     fig=plt.figure()\n#     ax=fig.add_axes([0,0,1,1])\n    grp = data.where(data[\"genre\"]==i).dropna()\n    grp.plot(x=\"release_date\", y=\"total_gross\", title=\"Release Date Vs Total Gross For %s Genre\"%(i))\n#    ax.set_title(\"Release Date Vs Total Gross For %s Genre\"%(i))\n#    ax.plot(x=grp[\"release_date\"], y=grp[\"total_gross\"])","23fd719c":"for i in set(data[\"genre\"]):\n#     print(\"-\"*16, i, \"-\"*16)\n#     fig=plt.figure()\n#     ax=fig.add_axes([0,0,1,1])\n    grp = data.where(data[\"genre\"]==i).dropna()\n    grp.plot(kind=\"scatter\", x=\"release_date\", y=\"total_gross\", title=\"Release Date Vs Total Gross For %s Genre\"%(i))\n#    ax.set_title(\"Release Date Vs Total Gross For %s Genre\"%(i))\n#    ax.plot(x=grp[\"release_date\"], y=grp[\"total_gross\"])","f55f97cf":"print(data.groupby(\"genre\")[\"movie_title\"].count())","58fd2d7e":"mpaa_grp = data.groupby(\"mpaa_rating\")","6bd9ad92":"mpaa_grp.describe()","63085f97":"mpaa_grp.plot(x=\"release_date\")","3864c2f4":"from datetime import datetime as dt\no = []\nfor i in list(data[\"release_date\"]):\n    o.append(dt.fromisoformat(i).timestamp())\ndata[\"release_ts\"] = o\nprint(data.head())","a7fead8f":"d2 = data.fillna(0)","16d91533":"import scipy.stats as stats\nl = []\nratings = list(set(d2[\"mpaa_rating\"]))\n# ratings.remove(np.nan)\nfor i in ratings:\n    l.append(list(d2.where(d2[\"mpaa_rating\"]==i).dropna()[\"total_gross\"]))","432aaf30":"stats.f_oneway(*l)","3f2e4ce9":"l = []\ngenres = list(set(d2[\"genre\"]))\n# genres.remove(np.nan)\nfor i in genres:\n    l.append(list(d2.where(d2[\"genre\"]==i).dropna()[\"total_gross\"]))","d14c0674":"stats.f_oneway(*l)","a6d55f87":"def get(st, end):\n    f = d2.where(d2[\"release_ts\"]>=dt.fromisoformat(st).timestamp())\n    f = f.where(d2[\"release_ts\"]<=dt.fromisoformat(end).timestamp()).dropna()\n    return list(f[\"total_gross\"])","d7bf81cb":"d3 = get(\"1931-01-01\", \"1940-12-31\")\nd4 = get(\"1941-01-01\", \"1950-12-31\")\nd5 = get(\"1951-01-01\", \"1960-12-31\")\nd6 = get(\"1961-01-01\", \"1970-12-31\")\nd7 = get(\"1971-01-01\", \"1980-12-31\")\nd8 = get(\"1981-01-01\", \"1990-12-31\")\nd9 = get(\"1991-01-01\", \"2000-12-31\")\nd0 = get(\"2001-01-01\", \"2010-12-31\")\nd1 = get(\"2011-01-01\", \"2020-12-31\")","d415a935":"stats.f_oneway(d3,d4,d5,d6,d7,d8,d9,d0,d1)","d4295bb7":"decs = {'30s':d3, '40s':d4, '50s':d5, '60s':d6, '70s':d7, '80s':d8, '90s':d9, '00s':d0, '10s':d1}\nd_l = {}\nd_s = {}\nfor k in decs:\n    d_l[k] = len(decs[k])\nfor k in decs:\n    d_s[k] = sum(decs[k])\nfig=plt.figure()\nax=fig.add_axes([0,0,1,1])\nax.set_title(\"No of movies each decade\")\nax.plot(d_l.keys(), d_l.values())\nfig=plt.figure()\nax=fig.add_axes([0,0,1,1])\nax.set_title(\"Total gross each decade\")\nax.plot(d_s.keys(), d_s.values())","cb20a7b5":"**Do the total gross across different genres differ?**","ed0705fc":"pvalue < 5%. So yes.","f0b09789":"**Do the total gross across different decades differ?**","3ea841cb":"pvalue < 5%. So yes","67ecead3":"# MAXIMUM AND MINIMUM GROSSING MOVIES","54af9705":"# Relationships Between Total Gross and Other Fields","8fb9a8ce":"**Do the total gross across different mpaa rating differ?**","dfe1510d":"# Some Extra Analysis","3094eaa1":"# Genre","67a10f24":"# MPAA RATING","f8719258":"Yes"}}