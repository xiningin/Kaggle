{"cell_type":{"2194521e":"code","eda40d51":"code","c564f9a1":"code","7603771f":"code","4a862910":"code","0d8cb0a4":"code","49ed2ccd":"code","ed43eec3":"code","770de0d6":"code","182c541d":"code","a199ac55":"code","52121c94":"code","cb164dcf":"code","7c6d7053":"code","6e14a67a":"code","48f48cab":"code","379458f5":"code","8d411454":"code","4087f23a":"code","19cd34d7":"code","84297c10":"code","3e43439d":"code","8f14c74c":"code","94d7a2d8":"code","9f5f112d":"markdown","2bb57807":"markdown","b329bcd4":"markdown","2ab83b54":"markdown","139aad7d":"markdown","b8781e91":"markdown","eeb4e012":"markdown"},"source":{"2194521e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eda40d51":"import pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nimport scipy.stats as st\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nfrom sklearn.metrics import confusion_matrix\nimport matplotlib.mlab as mlab\n%matplotlib inline","c564f9a1":"df=pd.read_csv('..\/input\/standard-metropolitican-area-dataset\/Standard Metropolitan Areas Data.csv')\ndf.head()","7603771f":"df.info()","4a862910":"df.isnull().sum()","0d8cb0a4":"df.mean(axis=0)","49ed2ccd":"df.max(axis=0)","ed43eec3":"df.min(axis=0)","770de0d6":"plt.scatter(df.percent_senior, df.crime_rate)\n\nplt.title('Plot of Crime Rate vs Percent Senior') # Adding a title to the plot\nplt.xlabel(\"Percent Senior\") # Adding the label for the horizontal axis\nplt.ylabel(\"Crime Rate\") # Adding the label for the vertical axis\nplt.show()","182c541d":"plt.plot(df.work_force, df.income, '--ro')  # ro = red circles\nplt.xlabel(\"Work Force\") \nplt.ylabel(\"Income\")\nplt.show()","a199ac55":"\nplt.plot(df.work_force, df.income, color=\"r\", label = 'labor') \nplt.plot(df.physicians, df.income, label='graduates') \n\n# Adding a legend\nplt.legend()\n\nplt.show()","52121c94":"plt.subplot(1,2,1)  \nplt.plot(df.work_force, df.income, \"go\")\nplt.title(\"Income vs Work Force\")\n\n\nplt.subplot(1,2,2).label_outer()\n\nplt.plot(df.hospital_beds, df.income, \"r^\")\nplt.title(\"Income vs Hospital Beds\")\n\nplt.suptitle(\"Sub Plots\") \nplt.show()","cb164dcf":"plt.hist(df.income)\nplt.show()","7c6d7053":"plt.title(\"Histogram\")\nplt.xlabel(\"Percentage of Senior Citizens\")\nplt.ylabel(\"Frequency\")\n\nplt.hist(df.percent_senior)\nplt.show()","6e14a67a":"plt.bar(df.region, df.crime_rate, color=\"green\")\n\nplt.title(\"Bar Graph\")\nplt.xlabel(\"Region\")\nplt.ylabel(\"Crime Rate\")\nplt.show()","48f48cab":"features = ['land_area', 'percent_city', 'percent_senior', 'physicians','hospital_beds', 'graduates', 'work_force', 'income', 'region']\nX = df[features]","379458f5":"y = df.crime_rate \ny.head()","8d411454":"X.describe().transpose()","4087f23a":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=25)","19cd34d7":"from sklearn.tree import DecisionTreeRegressor\nmodel = DecisionTreeRegressor(max_depth=3,random_state=10)\n\nmodel.fit(X_train,y_train)","84297c10":"from sklearn.metrics import mean_squared_error,mean_absolute_error","3e43439d":"print(\"Mean Squared Error: \",mean_squared_error(y_test,model.predict(X_test)))","8f14c74c":"print(\"Root Mean Squared Error: \",np.sqrt(mean_squared_error(y_test,model.predict(X_test))))","94d7a2d8":"print(\"Mean Absolute Error: \",mean_absolute_error(y_test,model.predict(X_test)))","9f5f112d":"#### Scatter plot","2bb57807":"### Data visualizations","b329bcd4":"### I am used Decisiontree classifier as a model and used some data visualization techniques to visualize the data features.","2ab83b54":"#### Histogram","139aad7d":"## Building Model","b8781e91":" #### Bar charts","eeb4e012":"#### Line plot"}}