{"cell_type":{"1b501535":"code","30d3bd55":"code","34e6e3ed":"code","4e4f735f":"code","a3a5f7d8":"code","4fad3828":"code","198b3b16":"code","57bb05ac":"code","ea6f501c":"code","5f57b9ad":"code","0a2e20ce":"code","405dc573":"code","5b251fb6":"code","22a42d5e":"code","dd09e6f5":"code","c276e7ff":"code","eb156ea9":"code","a54aa60b":"code","e50b5b0a":"markdown","08f8d28b":"markdown","fd406725":"markdown","eb969f09":"markdown","4e5a99ed":"markdown"},"source":{"1b501535":"# In this nootbook,We are going to implement Decision Tree Models like single and multi varient classification on Iris data.","30d3bd55":"#Importing Libraries\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix","34e6e3ed":"#Loading Dataset\niris = pd.read_csv('..\/input\/iris\/Iris.csv')","4e4f735f":"iris.head()","a3a5f7d8":"iris.shape","4fad3828":"iris.info()","198b3b16":"#Data Visualization\nsns.pairplot(iris)","57bb05ac":"sns.scatterplot(x='SepalLengthCm',y='PetalLengthCm',data=iris,hue=\"Species\")\nplt.show()","ea6f501c":"sns.set(style=\"whitegrid\")\nsns.barplot(x=\"Species\",y=\"SepalWidthCm\",data=iris,palette='vlag')\nplt.show()","5f57b9ad":"sns.jointplot(x='SepalLengthCm',y='PetalLengthCm',data=iris,color=\"green\")\nplt.show()","0a2e20ce":"sns.scatterplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris,hue=\"PetalLengthCm\")\nplt.show()","405dc573":"# Model-1\n\n# Target(Dependent) variable\ny = iris[['Species']]\n\n# Independent variable\nx = iris[['SepalLengthCm']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\n\ndtc = DecisionTreeClassifier()\n\n#Fitting our Model\ndtc.fit(x_train,y_train)","5b251fb6":"#Predicting Values\ny_pred = dtc.predict(x_test)\n\n#Evaluating Model using confusion_matrix\nconfusion_matrix(y_test,y_pred)","22a42d5e":"#Simplifying confusion_Metrix\n(13+11+7)\/(13+11+7+1+2+1+10)","dd09e6f5":"# Model-2 (Multi varient classification)\n\n# Target(Dependent) variable\ny = iris[['Species']]\n\n# Independent variable\nx = iris[['SepalLengthCm','PetalLengthCm']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.4)\n\ndtc2 = DecisionTreeClassifier()\n\n#Fitting our Model\ndtc2.fit(x_train,y_train)","c276e7ff":"#Predicting Values\ny_pred = dtc2.predict(x_test)\n\n#Evaluating Model using confusion_matrix\nconfusion_matrix(y_test,y_pred)","eb156ea9":"#Simplifying confusion_Metrix\n(20+19+17)\/(20+19+17+3+1)","a54aa60b":"#If you like this notebook, Don't forget to upvote.","e50b5b0a":"### Model-1 has accuracy about 68% which is not really great, So now we are going to improve our model.","08f8d28b":"# Decision Tree Models","fd406725":"# Contents\n\n## Setup\n## Exploratory data analysis\n## Decision Tree algorithms","eb969f09":"# Exploratory data analysis","4e5a99ed":"### Model-2 has accuracy about 93% which is much better than Model-1."}}