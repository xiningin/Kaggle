{"cell_type":{"6660997e":"code","21c54621":"code","0e181e0e":"code","a8588d92":"code","63b306b7":"code","2f423c89":"code","646d5cc0":"code","c4150f84":"markdown","b3d2bd0c":"markdown","534183d0":"markdown","2611be03":"markdown"},"source":{"6660997e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21c54621":"import cv2\nimport matplotlib.pyplot as plt","0e181e0e":"image = cv2.imread('\/kaggle\/input\/input-image-for-image-to-pencil-sketch\/input_image.png')\nplt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\nplt.axis('off')\nplt.show()","a8588d92":"gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nplt.imshow(cv2.cvtColor(gray_image, cv2.COLOR_BGR2RGB))\nplt.axis('off')\nplt.show()","63b306b7":"#Inversion of the image\ninv_image = 255 - gray_image\nplt.imshow(cv2.cvtColor(inv_image, cv2.COLOR_BGR2RGB))\nplt.axis('off')\nplt.show()","2f423c89":"#Blur the image \nblurred = cv2.GaussianBlur(inv_image, (21,21), 0)\n\n#Invert the blurred image\ninv_blur = 255 - blurred\nfinal_image = cv2.divide(gray_image, inv_blur, scale=256.0)\nplt.imshow(cv2.cvtColor(final_image, cv2.COLOR_BGR2RGB))\nplt.axis('off')\nplt.show()","646d5cc0":"print(\"Thus we have successfully completed the conversion\u270dof colour image\u27a1grayscale image\ud83d\udcf8\ud83d\udc41\u200d\ud83c\udfa8\")","c4150f84":"**cv2 GaussianBlur() function :**\n\n* OpenCV provides cv2.gaussianblur() function to apply Gaussian Smoothing on the image.","b3d2bd0c":"**CONVERSION OF COLOUR IMAGE TO GRAYSCALE IMAGE**\n\n* Various color spaces such as RGB, BGR, HSV can be mutually converted using OpenCV function cvtColor().\n* cv2.COLOR_BGR2RGB means BGR is converted to RGB.\n","534183d0":"**IMPORTING LIBRARIES**\n\n* **cv2** is the module import name for openCV-python.\n* OpenCV-Python is a library of Python bindings designed to solve computer vision problems\n\n","2611be03":"**LOAD THE DATA**\n\n* **cv2. imread()** method loads an image from the specified & the required file.\n* The imshow() function in pyplot module of matplotlib library is used to display data as an image"}}