{"cell_type":{"d3b47441":"code","29fe8cce":"code","4f6da15d":"code","ce809985":"code","8e3c1490":"code","c4ca4d83":"code","aed75d4c":"code","51071002":"code","8d1a9810":"code","94270cef":"code","87e49a44":"code","b767a93a":"code","bb5ad319":"code","aa7cae98":"code","a2afc30a":"code","b1aea5bf":"code","537df72d":"code","34d98fd9":"code","aff05bd4":"code","c6963501":"code","9b12a8d1":"code","da4cb59d":"code","39a09a2d":"code","8a735cd3":"code","6b374de5":"code","b7936928":"code","6d20999f":"markdown","6c65cb55":"markdown","11d6bfd2":"markdown","2c7c67fd":"markdown","06ab992a":"markdown","072918ca":"markdown","a1472b49":"markdown","69bfffc0":"markdown","f81f59b5":"markdown","44f9122c":"markdown","48579b89":"markdown","18bd2a36":"markdown","cf56b103":"markdown","947a4348":"markdown","5454d306":"markdown","e497550e":"markdown","8fe944e3":"markdown","3b6028a7":"markdown","d6344921":"markdown","78f4a45a":"markdown","dc183b1b":"markdown","67356427":"markdown","793dd074":"markdown","6f115628":"markdown","e903d58c":"markdown"},"source":{"d3b47441":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport  itertools\nimport scipy.stats as stats\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\n\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import precision_score\n","29fe8cce":"#read the csv file with the 12 features and survival outcome.\ndf1 = pd.read_csv(\"\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","4f6da15d":"df2 = df1.copy()#create a deep copy of df1","ce809985":"df2.rename(columns={'sex':'gender'}, inplace=True) #rename the 'sex' column as 'gender'","8e3c1490":"df2.isnull().sum() #no null values in any of the columns","c4ca4d83":"df2['gender'].value_counts() #the dataset is imbalanced when 'gender' is taken into consideration. 1=male and 0=female. ","aed75d4c":"plt.subplots(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.histplot(x='age', hue='gender', data=df2, kde=True, bins=40)\nplt.subplot(1,2,2)\nsns.histplot(x='age', hue='gender', data=df2,stat=\"density\", common_norm=False, kde=True, bins=40)\nplt.show()","51071002":"plt.subplots(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.histplot(x='age', hue='DEATH_EVENT', data=df2, kde=True, bins=40)\nplt.subplot(1,2,2)\nsns.histplot(x='age', hue='DEATH_EVENT', data=df2, stat=\"density\", common_norm=False, kde=True, bins=40)","8d1a9810":"def mortality_single_risk_factor (df, risk_factor): \n    \"\"\"\n    Input df - dataframe as df\n    Input risk_factor - one of 'anaemia', 'diabetes', 'high_blood_ressure', 'gender' or 'smoking'\n    Outputs - a dictionary containing the mortality fractions in the absence and presence of the risk factor\n    \"\"\"\n    negrf_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor]==0)][risk_factor].count()\n    negrf_posDeath = df[(df['DEATH_EVENT']==1) & (df[risk_factor]==0)][risk_factor].count()\n    posrf_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor]==1)][risk_factor].count()\n    posrf_posDeath = df[(df1['DEATH_EVENT']==1) & (df[risk_factor]==1)][risk_factor].count()\n    \n    frac_without_rf = round(negrf_posDeath\/(negrf_negDeath+negrf_posDeath),2)\n    frac_with_rf = round(posrf_posDeath\/(posrf_negDeath+posrf_posDeath),2)\n    return {'-RF':frac_without_rf, '+RF':frac_with_rf}","94270cef":"single_risk_factor={}\nrisks1= ['anaemia', 'diabetes', 'high_blood_pressure', 'gender', 'smoking']\n\nfor risk in risks1:\n    single_risk_factor[risk] = mortality_single_risk_factor(df2, risk)\nsingle_risk_factor ","87e49a44":"single_risk_df=pd.DataFrame(single_risk_factor)\nsingle_risk_df=single_risk_df.transpose()\nsingle_risk_df=single_risk_df.melt(var_name='+\/-RF', value_name='mort_frac',ignore_index=False)\n\n\nplt.figure(figsize=(10,7))\nsns.barplot(x=single_risk_df.index, y=single_risk_df['mort_frac'], hue=single_risk_df['+\/-RF'])\nplt.title('Mortality Risk in the Presence of One Other Risk Factor')\nplt.ylabel('Mortality Fraction')\nplt.xlabel('Risk Factor')","b767a93a":"def mortality_multiple_risks (df, risk_factor1, risk_factor2):\n    \"\"\"\n    Input df - dataframe as df\n    Input risk_factor1 & 2 - two of 'anaemia', 'diabetes', 'high_blood_ressure', 'gender' or 'smoking'\n    Outputs - a dictionary containing the mortality fractions in the absence and presence of the two risk factors\n    \"\"\"\n    \n    negrfs_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor1]==0) & (df[risk_factor2]==0)][risk_factor1].count()\n    negrfs_posDeath = df[(df['DEATH_EVENT']==1) & (df[risk_factor1]==0) & (df[risk_factor2]==0)][risk_factor1].count()\n    posrfs_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor1]==1) & (df[risk_factor2]==1)][risk_factor2].count()\n    posrfs_posDeath = df[(df['DEATH_EVENT']==1) & (df[risk_factor1]==1) & (df[risk_factor2]==1)][risk_factor2].count()\n    \n    frac_without_rfs = round(negrfs_posDeath\/(negrfs_negDeath+negrfs_posDeath),2)\n    frac_with_rfs = round(posrfs_posDeath\/(posrfs_negDeath+posrfs_posDeath),2)\n\n\n    return {'-RFs':frac_without_rfs, '+RFs':frac_with_rfs}","bb5ad319":"combs=itertools.combinations(risks1, 2) \ndual_risk={}\nfor comb in combs:\n    dual_risk[str(comb[0]+' & '+comb[1])]=mortality_multiple_risks (df2, comb[0], comb[1])\ndual_risk","aa7cae98":"dual_risk_df=pd.DataFrame(dual_risk)\ndual_risk_df=dual_risk_df.transpose()\ndual_risk_df=dual_risk_df.melt(var_name='+\/-RFs', value_name='mort_frac',ignore_index=False)\n\n\nplt.figure(figsize=(10,7))\nsns.barplot(x=dual_risk_df.index, y=dual_risk_df['mort_frac'], hue=dual_risk_df['+\/-RFs'])\nplt.title('Mortality Risk in the Presence of Two Other Risk Factors')\nplt.ylabel('Mortality Fraction')\nplt.xlabel('Risk Factors')\nplt.xticks(rotation=90)\nplt.show()","a2afc30a":"count=1\nplt.subplots(figsize=(12, 10))\nfor marker in ['age','creatinine_phosphokinase','ejection_fraction','platelets','serum_creatinine','serum_sodium', 'time']:\n    plt.subplot(3,3,count)\n    sns.barplot(x=df2['DEATH_EVENT'], y=df2[marker])\n    count+=1\n    plt.tight_layout()\n\nplt.show()","b1aea5bf":"#create a list of features with numeric measurements (i.e. risk markers)\nmarkers=['age','creatinine_phosphokinase','ejection_fraction','platelets','serum_creatinine','serum_sodium', 'time']","537df72d":"#compare the above groups (i.e. survived versus not-survived for each marker) using independent t-tests.\nfor marker in markers:\n    p_val=stats.ttest_ind(a=df1[df1['DEATH_EVENT']==0][marker], b=df1[df1['DEATH_EVENT']==1][marker])\n    if p_val[1]<=0.01:\n        print(marker, 'p =', p_val[1], 'p < 0.01 significant')\n    elif p_val[1]<=0.05: \n        print(marker, 'p =', p_val[1], 'p < 0.05 significant')\n    else: print(marker, 'p =', p_val[1], 'p > 0.05 NOT significant')","34d98fd9":"def blood_marker_vs_mortality (df, risk_factor1, risk_factor2, marker, ax=None):\n    \"\"\"\n    Input df - dataframe as df\n    Input risk_factor1 & 2 - two of 'anaemia', 'diabetes', 'high_blood_ressure', 'gender' or 'smoking'\n    Input marker - Risk marker of interst\n    Outputs - a dictionary containing the mortality fractions in the absence and presence of the two risk factors\n    \"\"\"\n    results_dict={}\n    negrfs_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor1]==0) & (df[risk_factor2]==0)][marker]\n    negrfs_posDeath = df[(df['DEATH_EVENT']==1) & (df[risk_factor1]==0) & (df[risk_factor2]==0)][marker]\n    posrfs_negDeath = df[(df['DEATH_EVENT']==0) & (df[risk_factor1]==1) & (df[risk_factor2]==1)][marker]\n    posrfs_posDeath = df[(df['DEATH_EVENT']==1) & (df[risk_factor1]==1) & (df[risk_factor2]==1)][marker]\n    \n    results_dict['-RF_-D']= negrfs_negDeath\n    results_dict['-RF_+D']= negrfs_posDeath\n    results_dict['+RF_-D']= posrfs_negDeath\n    results_dict['+RF_+D']= posrfs_posDeath\n       \n    results=pd.DataFrame(results_dict)\n    sns.barplot(x=results.columns, y=results[results.columns].mean(), ci=95)\n    plt.errorbar(x=results.columns, y=results[results.columns].mean(), yerr=results[results.columns].std(), fmt='none', capsize=5)\n    plt.xticks(rotation=90)   ","aff05bd4":"print('HPB = High blood pressure')\nprint('+\/- RF = presence or absence of added risk factor (for gender: +RF = male -RF=female)')\nprint('+\/- D = presence or absence of death')\n\nfor risk in ['anaemia', 'diabetes', 'gender', 'smoking']:\n    fig, axes = plt.subplots(nrows=4, ncols=4, figsize=(10,5))\n    ind=1\n    for marker in ['age','ejection_fraction','serum_creatinine', 'serum_sodium']:\n        axes=plt.subplot(1, 4, ind)\n        blood_marker_vs_mortality(df2, 'high_blood_pressure',risk, marker, ax=axes)\n        plt.ylabel('mean '+marker+' (+\/-sd)')\n        plt.title('HBP '+'& '+risk)\n        ind+=1\n        plt.tight_layout()","c6963501":"df2['DEATH_EVENT'].value_counts()","9b12a8d1":"skf=StratifiedKFold(n_splits=5, shuffle=True) #create a StratifiedKFold object with 5 folds since the  \n# survivor\/non-survivor groups are imbalanced\nscaler = StandardScaler() #create a StandardScaler object to scale the data prior to testing and training","da4cb59d":"X=df2.drop(['DEATH_EVENT'], axis=1) #independent variables \nX_scaled=scaler.fit_transform(X)#scale the numeric data in the dataframe\ny=df2['DEATH_EVENT']#dependent variable (outcome) data","39a09a2d":"X_scaled[0] #display first element of the scaled data array","8a735cd3":"df2.head(2)","6b374de5":"pca=PCA(n_components=5) #create a PCA object that retains 5 of the most important features\nX_pca=pca.fit_transform(X_scaled)\nX_pca.shape","b7936928":"# create objects for the models to be tested for their ability to predict mortality due to heart failure.\nmodel_logreg = LogisticRegression(max_iter=3500, C=1)\nmodel_SVC=SVC(kernel='rbf', C=5, gamma='auto')\nmodel_rfc=RandomForestClassifier(n_estimators=100)\nmodel_gbc=GradientBoostingClassifier(learning_rate=0.1, max_depth=3)\nmodel_xgb=XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', n_estimators=100, learning_rate=0.5, max_depth=3)\n\n#create a list of the model objects to be used in the for loop below\nmodels=[model_logreg, model_SVC, model_rfc, model_gbc, model_xgb]\n\n#an empty dictionary for storing average model metric data\nscore_dict = {'Logistic Regression':{},\n              'Support Vector':{},\n              'Random Forest':{},\n              'Gradient Boost':{},\n              'XG Boost':{}\n             }\n#define if the testing rounds should use X_scaled or X_pca created above\ndata=X_scaled\n\n#following function inserts model metrics into the score_dict dictionary\ndef score_dict_edit (model):\n    score_dict[model]['accuracy']=np.mean(accuracy_scores)\n    score_dict[model]['precision']=np.mean(precision_scores)\n    score_dict[model]['recall']=np.mean(recall_scores)\n    score_dict[model]['F1']=np.mean(f1_scores)\n\n#loop through the models list and conduct trainin\/testing runs with each stratified fold\nfor model in models: \n    #create empty lists to store the different testing metrics\n    accuracy_scores =[]\n    precision_scores = []\n    recall_scores = []\n    f1_scores = []\n    for train_index, test_index in skf.split(data, y):        \n        X_train = data[train_index]\n        X_test = data[test_index]\n        y_train = y.iloc[train_index]\n        y_test = y.iloc[test_index]\n        model.fit(X_train, y_train)\n        predict = model.predict(X_test)\n        accuracy_scores.append(accuracy_score(y_test, predict))\n        precision_scores.append(precision_score(y_test, predict, average=None)[1])\n        recall_scores.append(recall_score(y_test, predict, average=None)[1])\n        f1_scores.append(f1_score(y_test, predict, average=None)[1])\n\n        if model==model_logreg:\n            score_dict_edit ('Logistic Regression')\n        elif model==model_SVC:\n            score_dict_edit ('Support Vector')\n        elif model==model_rfc:\n            score_dict_edit ('Random Forest')\n        elif model==model_gbc:\n            score_dict_edit ('Gradient Boost')\n        else:\n            score_dict_edit ('XG Boost')\n        \ndf_data=pd.DataFrame(score_dict).transpose()\ndf_data\n","6d20999f":"Following code plots the means of various markers in those with heart failure who survived versus those who died. ","6c65cb55":"The distribution of survivors and non-survivors are disprpotionate. Hence we will use StratifiedKFold to split the data so that the proportionality is maintained in each fold used in training and testing.","11d6bfd2":"Since it was observed in a previous chart that high blood pressure coupled with male gender, diabetes or smoking \ncan significatly increase the risk of mortality due to heart failure, we will further evaluate how few of the risk markers\nabove, namely age, ejection fraction, serum creatinine and serum sodium that were different between survivors \nand non-survivors can differ in the presence or absence of the associated risk factors (i.e. anaemia, diabetes, gender and smoking). ","2c7c67fd":"When mortality due to heart failure is analyzed in the presence of two other risk factors, the mortality fractions appear augmented compared to in the absence of the same risk factors. With the exception of male or female gender combined with diabetes or smoking, all other coexisting risk factors increased mortality in patients with heart failure. Risk factors that resulted in the largest increases in mortality were anaemia+high blood pressure, diabetes+high blood pressure, male gender+high blood pressure and smoking+high blood pressure. Any risk factor that coexists with anaemia and\/or hypertension can significantly increase the mortality risk due to heart failure.  ","06ab992a":"Histogram plots of the age distribution of show that the proportion of males in the dataset greater at all ages (left plot) indicating the higher prevalence of heart failure in men ( Mehta P.A. and Cowie M.A.). If the bars are normalized, as in the right plot, there is no clear difference of age distribution between males and females.","072918ca":"We can start taking a closer look at the data by plotting mortality fraction in the presence of risk factors such as anaemia, diabetes, high blood pressure, gender or smoking. Mortality fraction is defined as the fraction of those dying in a particular group divided by the total number of patients in that group.  \n(1) Following function returns a dictionary containing the mortality fraction  in patients presenting with a  \nrisk factor in addition to heart failure diagnosis.  \n(2) All these risk factors have binary labels in the dataset. ","a1472b49":"Anaemia or high blood pressure increases the mortality risk of those suffering from heart failure. Otherwise,  mortality is similar between the groups. Note: for gender -RF = female and +RF = male.  \n  \nWhat would this mortality risk look like if the risk factors co-existed? It is not difficult to imagine that some of these risk factors, in addition to heart failure, must coexist in these patients. For example, would smoking AND diabetes increase the mortality risk beyond each risk factor looked at in isolation?  \n  \nSimilar to the previous function, the following function also calculates the mortality fractions but in the presence of multiple risk factors.  ","69bfffc0":"Each plot is labeled with the associated risk factors at the top. Each of the risk marker being evaluated are represented as the y-axis label. +\/-RF denotes the presence and absence of the asscoiated risk factors. +\/-D denotes survivors and non-survivors. The variance of the data is high, especially for ejection fraction and serum creatinine levels as reflected by the large standard deviations (error bars). However, the basic trends between survivors and non-sruvivors are evident and key points observed from the above plots are:  \n(1) Age is higher for non-survivors compared to survivors, regardless of the additional risk factors being associated or not.  \n(2) Mean ejection fraction is lower in non-survivors regardless of the additional risk factors being associated or not. An intersting observation is that with hypertension, mean ejection fraction is higher in surviving males and females as well as in non-surviving females. It was calculated to be much lower in non-surviving males compared to other risk factors.  \n(3) Serum creatinine levels are elevated in non-survivors regardless of the additional risk factors being associated or not.  \n(4) There are no clear differences observed in serum sodium levels in survivors and non-survivors, in the absence or presence of additional risk factors.\n  \nSimilar trends were observed when the data were plotted using anaemia insted of high blood pressure (data not shown but can be verified easily by changing the above block of code). It therefore seems clear that when anaemia and\/or high blood pressure is associated with heart failure, the risk of mortality increases regardless of any other confounding risk factors. Age, ejection fraction and serum creatinine are the risk markers that may indicate increased risk of mortality.  ","f81f59b5":"Thank you for taking the time to look at this note book. I am new to DataScience and to Kaggle. I wanted to be as clear as possible about my thought process and therefore this notebook may seem too long and perhaps confusing at times. I really would appreciate any comments and feedback to improve my future projects.","44f9122c":"In the following block of code, several algorithms were trained and tested for their ability to predict mortality. Each time the cell is exceuted, X_scaled or X_pca can be used to determine the model metrics. Note that only minimal hyperparameter tuning was done and the performance may improve if they can be optimized further. ","48579b89":"Key points from the above plots are:  \n\n(1) Mean age is higher (>60 yrs) in non-survivors compared to survivors (<60 yrs).  \n(2) Circulating creatinine phosphokinase and creatinine levels are elevated in survivors compared to non-survivors.  \n(3) Ejection fraction is abnormally low (i.e. <40%) in survivors but is even lower (approx. 32%) in non-survivors.  \n(4) platelet levels are within the normal range in both groups as are blood sodium levels.  \n(5) not surprisingly, the follow up period for survivors (approx. 5 months) is longer than the non-survivors (approx. 2 months).","18bd2a36":"Plot the mortality fractions in the absence and presence of the additional risk factors in the 'dual_risk' dictionary","cf56b103":"# Data Modeling","947a4348":"# Summary and Concluding Remarks: \n\n(1) Data analysis indicates that heart failure, when associated with hypertension and\/or anaemia, can increase mortality risk.  \n(2) In contrast, coexisting risk factors such as diabetes or smoking or even gender differences do not necessarily increase mortality beyond what is observed in the absence of these risk factors.  \n(3) Age greater than 60 yrs, ejection fraction under 40% as well as elevated blood creatinine levels are strong indicators of mortality from heart failure.  \n(4) A clear increase in mortality is evident in patients with two risk factors that coexist with heart failure.  There is no clear marker and\/or risk factor that predict this increase in mortality.  \n(5) Using the data from 299 heart failure patients, several machine learning algorithms were tested for their ability to predict mortality. Of these, and with minimal hyperparameter optimization, Random Forest and XGBoost Classifiers performed best with an overall accuracy of around 80%. However, when predicting an outcome such as mortality, we would need to minimize false negatives. To this end, the recall and f1-score metrics of the classifier will be most useful. These were approximated to be around70%, indicating acceptable predictive capability of the model without having to negate clinically important risk factors and\/or risk markers.  \n(6) Availability of additional information such as body-mass index, presence of coronary artery disease and other blood markers such as atrial natriuretic peptide may help with better predictive capabilities.  \n(7) Furthermore, a larger dataset similar to that used in the metanalysis by Pocock et. al. (with data from more than 39,000 patients) may help establish a robust model with better performance metrics and predictive capabilities.\n","5454d306":"REFERENCES  \n\nDavide C., Giuseppe J.: Machine learning can predict survival of patients with heart failure from serum creatinine and  \n  ejection fraction alone. BMC Medical Informatics and Decision Making (2020) 20:16.  \nMayoclinic.com https:\/\/www.mayoclinic.org\/diseases-conditions\/heart-failure\/symptoms-causes\/syc-20373142 (1 Jan 2022).  \nMehta P.A. and Cowie M.A., Gender and heart failure: a population perspectiveHeart. 2006 May; 92(Suppl 3): iii14\u2013iii18  \nPocock SJ, Ariti1 CA, McMurray JJV, Maggioni A, K\u00f8ber L, Squire IB, Swedberg K, Dobson J, Poppe KK, Whalley GA, and Doughty RN,   Predicting survival in heart failure: a risk score based on 39 372 patients from 30 studies, European Heart Journal (2013) \n  34,   1404\u20131413. ","e497550e":"Loop through every risk factor and create a dictionary containing the mortality fractions\nin the presence or absence of the risk factor.","8fe944e3":"In an effort to reduce the dimensionality of the features, I used Principal Component Analysis (PCA) to create a separate array that can be used alongside X_scaled to see if predictive properties of the models tested can vary.","3b6028a7":"Random Forest and XGBoost algorithms appear to perform better than the other models tested. Reducing dimensionality by using PCA in several ways only negatively impacted the model metrics. Therefore only the scaled data (X_scaled) with all the features was used to generate the metrics and to measure the model's predictive capabilities. Of the model metrics, of particular interest are the recall score (which is also called the True Positive Rate -TPR) and the f1-score. In a model such as this, recall would be the one metric of utmost importance in predicting mortality in patients with heart failure. We would want to ensure that the model's recall score is as high as possible inorder to reduce false negatives.  F1-score on the other hand provides a measure of how good both precision (True Negative Rate - TNR) and recall metrics are. Clinicians may find such a predictive model useful in guiding their decisions to provide proper care and reduce the risk of mortality. ","d6344921":"Plot the mortality fractions in the absence and presence of the risk factors (using the single_risk_factor dictionary) ","78f4a45a":"(1) Following function plots the levels\/ measurements of various markers when associated with two of the previously described  risk factors in survivors and non-survivors.  \n(2) Output of the function is a bargraph with standard deviation error bars","dc183b1b":"Histogram plots of the age distribution of the data also show that a greater proportion of heart failure survivors are under 65 years of age (left plot) whereas those over 70 (normalized, right plot) are at a greater risk of death. This data is in line with the epidemiological facts of heart failure that being over 65 yrs is a major risk factor for mortality (Mehta P.A. and Cowie M.A.).","67356427":"# Data Analysis and Data Visualizations","793dd074":"Heart failure, sometimes also referred to as congestive heart failure, is a condition where the heart becomes inefficient at pumping blood to the rest of the body, leading to shortness of breath, body weakness, swelling of legs and ankles and weight gain. Often what precipitates heart failure are risk factors such as coronary artery disease, hypertension, diabetes and obesity (Mayoclinic.com). Mortality risk is greater than 50% for those with advanced heart failure within the first 12 months after diagnosis (Poole-Wilson et. al.).  \n  \nIn this notebook, my aim is to take a closer look at the dataset containing 299 patients diagnosed with heart failure in a study that was published recently (Dataset from Davide C., Giuseppe J.: Machine learning can predict survival of patients with heart failure from serum creatinine and ejection fraction alone. Chicco and Jurman BMC Medical Informatics and Decision Making (2020). Machine learning algorithms used in this study to predict the survival outcome had reasonably acceptable results using only a two features (i.e. serum creatinine and ejection fraction). It was of interest to me to see, through simple data analysis, if any other features such as high blood pressure, diabetes, smoking, gender etc. may also point to increased risk of mortality without the help of machine learning. Furthermore, how does the risk of mortality change if two of the risk factors coexisted in the patients? Finally, by using several machine learning algorithms, I wanted to verify if a predictive model using all or most of the clinically important features of the dataset could be developed that performed at least as well as the models described in the above study.  \n   \nBrief descriptions of some of markers\/measurements in the dataset are as follows: (1) Creatinine phosphokinase is an enzyme that converts creatinine to phosphocreatinine (PCr) by transferring a phosphate group from adenosine triphosphate (ATP). PCr acts as an 'energy reservoir' in organs such as the brain and heart muscle that require large quantities of ATP for proper function. An increase in blood levels of creatinine phosphokinase, that is when this enzyme is released into the blood stream, acts as an indicator of underlying muscle damage. Such an increase in the enzyme is observed in patients with heart failure. (2) Blood creatinine levels is a marker for proper kidney function. Kidneys help clear blood creatinine which is a byproduct of energy generation from PCr. Elevated creatinine levels is indicative of poor blood flow to the kidneys as would be observed during heart failure. (3) Platelets, also called thrombocytes, are critically important for the formation of blood clots during tissue injury, creating a protective barrier to the entry of micro organisms that can cause infections and also prevents blood loss when blood vessels are injured. Abnormal clot formation in blood vessels can restrict blood circulation to critical organs causing conditions such as myocardial infarction and stroke. Platelet counts below 150,000 per microlitre of blood can cause severe internal bleeding while a number exceeding 450,000\/uL can increase the risk of blood clots and strokes. In the patients evaluated in this dataset, the platelet counts are within the normal range (150,000 - 450,000\/uL) in the survivors and non-survivors. (4) During heart failure, the ejection fraction, which is a measure of the emptying capacity of the left ventricle, can diminish due to muscle weakness. In a healthy heart, 50-75% of the left ventricular blood volume is pumped out during systole (ventricle contraction). This can drop to 40% or lower during heart failure which can significantly increase risk of mortality. However, it is now evident that about half of those with heart failure have a normal ejection fraction (also called heart failure with preserved ejection fraction). In the patients in this dataset however, the mean ejection fraction is under 40% in survivors and even lower in non-survivors perhaps indicating that patients with preserved ejection fraction were not selected to be part of the dataset. Ejection fraction, along with other risk factors and blood markers may act as predictive indicators of mortality that can be used to inform clinicians to administer the proper therapy and reduce mortality from heart failure.\n","6f115628":"(1) Using itertools, create a list of all combinations of two of the binary labelled  \nrisk factors (i.e. 'anaemia', 'diabetes', 'high_blood_pressure', 'gender' or 'smoking').  \n(2) Then create a complete dictionary containing the mortality fractions  \nin the presence or absence of the two risk factors. ","e903d58c":"Other than blood levels of creatinine phosphokinase and platelets, all other risk markers were significantly different between the survivors and non-survivors indicating that these markers can be used to guide the treatment of heart failure to reduce mortality."}}