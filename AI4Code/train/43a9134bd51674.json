{"cell_type":{"32059403":"code","50b127c5":"code","dca149ea":"code","7f3aeff1":"code","d89c0bcf":"code","bbd9a904":"code","8c1a8f43":"code","65bcdd6d":"code","d2ce0fd7":"code","8b42a969":"code","a128238c":"code","998a4e1e":"code","95d270ec":"code","444d4ed6":"code","c6183cd7":"code","a0bd73db":"code","733b5f8a":"code","a9c13cfd":"code","49a52273":"code","8f1cfa92":"code","d6852d6b":"code","9dcd4601":"code","4b32b4e6":"code","4c2b497a":"code","01723864":"code","2c5fa032":"code","bc5d91d5":"code","bdaec350":"code","b84acf4f":"code","c7317211":"code","397e3d79":"markdown","86e2347e":"markdown","9fe049b2":"markdown","77820536":"markdown","de4ac016":"markdown","942bbacd":"markdown","1af37117":"markdown","0b535bc3":"markdown","8043aa86":"markdown","a7bb1dc5":"markdown","e34aeec7":"markdown","939cf5fa":"markdown"},"source":{"32059403":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec","50b127c5":"#Download Data from kaggle\n\nwhr = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\npopulation = pd.read_csv('\/kaggle\/input\/population-by-country-2020\/population_by_country_2020.csv')\ncountry_codes = pd.read_csv('..\/input\/world-bank-data-1960-to-2016\/country_population.csv')\npolitical_regime = pd.read_csv('..\/input\/democracy-dictatorship-index\/Democracy-Dictatorship_Index.csv')\n#print('DF loaded')","dca149ea":"########################Preprocessing df Population\n\npop = population[['Country (or dependency)', 'Population (2020)','Fert. Rate', 'Med. Age', 'Urban Pop %']]\npop = pop.rename(columns = {'Country (or dependency)':'Country name', 'Population (2020)': 'Population2020' })\n\npop['UrbanPop%'] = pop['Urban Pop %'].str.replace('%','')\npop[pop['Urban Pop %'] == 'N.A.'] = pop[pop['Urban Pop %'] == 'N.A.'].replace({'UrbanPop%':'N.A.'},999)\npop['UrbanPop%'] = pd.to_numeric(pop['UrbanPop%'])\n\npop[pop['Country name'] == 'Venezuela'] = pop[pop['Country name'] == 'Venezuela'].replace({'UrbanPop%':999},88)\npop[pop['Country name'] == 'Hong Kong'] = pop[pop['Country name'] == 'Hong Kong'].replace({'UrbanPop%':999},100)\npop[pop['Country name'] == 'Singapore'] = pop[pop['Country name'] == 'Singapore'].replace({'UrbanPop%':999},100)\npop[pop['Country name'] == 'Kuwait'] = pop[pop['Country name'] == 'Kuwait'].replace({'UrbanPop%':999},100)\n\n\n#Rename county name in Population dataset = 9\n#['Congo (Brazzaville)', 'Czech Republic', 'Hong Kong S.A.R. of China', 'Ivory Coast', #'Kosovo', 'North Cyprus',\n#'Palestinian Territories', 'Swaziland', 'Taiwan Province of China']\n\ncountries_rename = {'Czech Republic (Czechia)':'Czech Republic',\n                    'Hong Kong':'Hong Kong S.A.R. of China',\n                    'DR Congo' : 'Congo (Brazzaville)',\n                    \"C\u00f4te d'Ivoire\": 'Ivory Coast',\n                    'State of Palestine':'Palestinian Territories',\n                    'Eswatini':'Swaziland',\n                    'Taiwan':'Taiwan Province of China'}\n                 \nfor key, value in countries_rename.items():\n    pop['Country name']  = pop['Country name'].replace({key:value})\n    \n    \n#Add new Countries Popul from https:\/\/www.cia.gov\/the-world-factbook\/field\/population \u0444\u0442\u0432\n#add info KOsovo - https:\/\/www.indexmundi.com\/kosovo\/demographics_profile.html\npop = pop.append({'Country name':'North Cyprus', 'Population2020': 326000, \n                              'Fert. Rate': 1.3, 'Med. Age':37  , 'UrbanPop%': 67\n                              }, ignore_index = True)\npop = pop.append({'Country name': 'Kosovo',  'Population2020': 1932774,\n                             'Fert. Rate': 1.95, 'Med. Age':30.5  , 'UrbanPop%': 38\n                             }, ignore_index = True)\n\n#minus population of Noth Cyprus  from Cypus\npop[pop['Country name'] == 'Cyprus'] = pop[pop['Country name'] == 'Cyprus'].replace({'Population2020':1208886},881361)\n\n#add urban rural population in mln people\npop['UrbanPopMln'] = (pop['Population2020']\/1000000 * (pop['UrbanPop%']\/100)).round(3)\npop['RuralPopMln'] = (pop['Population2020']\/1000000 - pop['UrbanPopMln']).round(3)\n\npop = pop[['Country name','Population2020', 'UrbanPop%','UrbanPopMln','RuralPopMln','Fert. Rate', 'Med. Age']]\n\n\n#########Preprocessing Country codes\n\ncodes = country_codes [['Country Name', 'Country Code']]\ncodes = codes.rename(columns = {'Country Name':'Country name', 'Country Code': 'Country code'})\n\n#Change county name in codes\n#['Congo (Brazzaville)', 'Egypt', 'Gambia', 'Hong Kong S.A.R. of China', 'Iran', 'Ivory Coast', 'Kyrgyzstan', 'Laos', \n###'North Cyprus',#### 'Taiwan Province of China',###\n#'North Macedonia','Palestinian Territories', 'Russia', 'Slovakia', 'South Korea', 'Venezuela', 'Yemen']\n\ndf =codes\ncountries_names = {'Congo, Rep.' : 'Congo (Brazzaville)', \n                   'Egypt, Arab Rep.' : 'Egypt',\n                   'Gambia, The': 'Gambia',\n                   'Hong Kong SAR, China':'Hong Kong S.A.R. of China',\n                   'Iran, Islamic Rep.': 'Iran',\n                   \"Cote d'Ivoire\": 'Ivory Coast',  \n                   'Kyrgyz Republic':'Kyrgyzstan',\n                   'Lao PDR': 'Laos',\n                   'Macedonia, FYR' : 'North Macedonia', \n                   'West Bank and Gaza':'Palestinian Territories',\n                   'Russian Federation': 'Russia',   \n                   'Slovak Republic': 'Slovakia',\n                   'Korea, Rep.': 'South Korea',\n                   'Venezuela, RB': 'Venezuela',\n                   'Yemen, Rep.': 'Yemen'    \n                  }\nfor key, value in countries_names.items():\n    df['Country name']  = df['Country name'].replace({key:value})\n\n    \n#add codes ['North Cyprus', 'Taiwan Province of China']\ncodes = codes.append({'Country name':'North Cyprus', 'Country code':'TRNC'}, ignore_index = True)\ncodes = codes.append({'Country name': 'Taiwan Province of China','Country code': 'TWN'}, ignore_index = True)   \n\n\n######Preprocessing  df Political Regime\n\nregime = political_regime[['Regime', 'Type', 'Subtype']]\nregime = regime.rename(columns ={'Regime': 'Country code'})\n\n#add country names to regime (politics) from  codes\nregime = pd.merge(regime, codes, how='left', on= 'Country code')\n\n\n\n#ADD DAta ['Hong Kong S.A.R. of China', 'Kosovo', 'North Cyprus', 'Palestinian Territories']\n#Source  = The Economist Intelligence Unit \n\nregime = regime.append({ 'Country code': 'XKX', 'Type': 'Democracy', 'Subtype': 'Parliamentary Democracy',\\\n                  'Reason for Dictatorship': 'noData', 'Country name': 'Kosovo'}, ignore_index = True)\n                \nregime = regime.append({ 'Country code': 'HKG', 'Type': 'Democracy', 'Subtype': 'Parliamentary Democracy',\\\n                  'Reason for Dictatorship': 'noData', 'Country name': 'Hong Kong S.A.R. of China'}, ignore_index = True)\n\nregime = regime.append({ 'Country code': 'TRNC', 'Type': 'Democracy', 'Subtype': 'Semi-Presidential Democracy',\\\n                  'Reason for Dictatorship': 'noData', 'Country name': 'North Cyprus'}, ignore_index = True)\n\nregime = regime.append({ 'Country code': 'PSE', 'Type': 'Dictatorship', 'Subtype': 'Civilian Dictatorship',\\\n                  'Reason for Dictatorship': 'noData', 'Country name': 'Palestinian Territories'}, ignore_index = True)","7f3aeff1":"# First of all let  choose valuable columns = 6 factors and create new dataset for analyse\nmaincols = ['Country name','Regional indicator', 'Ladder score', \\\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy', \\\n       'Freedom to make life choices', 'Generosity', 'Perceptions of corruption' ]\n\nfactors = ['Ladder score', \\\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy', \\\n       'Freedom to make life choices', 'Generosity', 'Perceptions of corruption']\n\ndata = whr[maincols].copy()\n\n#data.shape\n\n\n#COLOURS AND FONTS FOR ALL TEXT\n\n#sz_head = 18 #fontsize of heads\n#sz_txt = 14 #fontsize of main text\n#sz_com = 14 #fontsize of comments\n#w_head = 'bold' #fontweight of head","d89c0bcf":"## Let's find put MEANS=AVERAGES VALUES FOR ALL DATA & Min Max val for Score ---  Type ==float\n\nmean_score = data['Ladder score'].mean()  #<== 5.532838926174494    \nmax_score = data['Ladder score'].max()     # <== 7.8420000000000005\nmin_score = data['Ladder score'].min()     # <== 2.523\nmean_gdp = data['Logged GDP per capita'].mean() #<== 9.432208053691275\nmean_support = data['Social support'].mean()        #<== 0.8147449664429529\nmean_health = data['Healthy life expectancy'].mean()   #<==  64.99279865771811\nmean_freedom = data['Freedom to make life choices'].mean() #<==  0.7915973154362413\nmean_generosity = data['Generosity'].mean()                  #<== -0.015134228187919468\nmean_corruption = data['Perceptions of corruption'].mean()       #<==  0.7274496644295301\n\n#To analyse the differences between those who are happy and who are not\n#Let's devide all countries into 2 groups: \n#1 - with happiness score above average > 5.5328 and 2 - whoes happiness level is below average score\ndata['groupby meanscore'] = data['Ladder score'].map(lambda x: 2 if x < mean_score else 1)\n#data.shape","bbd9a904":"# General overview of data\n\nfig=plt.figure(figsize=(5,2),dpi=150,facecolor='white')\n\nnum_clr = 'darkblue' #'gold'\ntxt_clr = 'dimgrey'\n\nax0=fig.add_subplot(1,1,1)\nax0.text(1.3,1.2,\"World Happiness Level Survey \\nkey figures\",\n         color='black',fontsize=28, fontweight='bold', fontfamily='monospace', ha='center')\n\nax0.text(0,0.4, \"149\",color=num_clr ,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(0,0.001,\"Countries \\nin the dataset\",color=txt_clr,fontsize=17, fontweight='light', fontfamily='monospace',ha='center')\n\n\nax0.text(0.6,0.4,\"6\",color=num_clr ,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(0.6,0.001,\"Factors of\\n life evaluation\",color=txt_clr,fontsize=17, fontweight='light', fontfamily='monospace',ha='center')\n\n\nax0.text(1.0,0.42,\"-level of GDP \\n-life expectancy \\n-social support\",color=txt_clr,fontsize=12, fontweight='light', fontfamily='monospace',ha='left')\nax0.text(1.0,0.0,\"-generosity \\n-freedom \\n-corruption\",color=txt_clr,fontsize=12, fontweight='light', fontfamily='monospace',ha='left')\n\nax0.text(1.8,0.4,\"2\",color=num_clr,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(1.8,0.15,\"new factors:\",color=txt_clr,fontsize=15, fontweight='light', fontfamily='monospace',ha='center')\nax0.text(1.8,0.00,\"politics & population\",color=txt_clr,fontsize=17, fontweight='light', fontfamily='monospace',ha='center')\n\nax0.text(2.6,0.4,\"{:.4f}\".format(mean_score),color=num_clr,fontsize=25, fontweight='bold', fontfamily='monospace',ha='center')\nax0.text(2.6,0.001,\"Average level\\nof happiness\",color=txt_clr,fontsize=17, fontweight='light', fontfamily='monospace',ha='center')\n\n\nax0.set_yticklabels('')\nax0.set_xticklabels('')\nax0.tick_params(axis='y',length=0)\nax0.tick_params(axis='x',length=0)\n\nfor line in ['top','right','left','bottom']:\n    ax0.spines[line].set_visible(False)\n\nplt.show()","8c1a8f43":"fig, ax = plt.subplots(1,1, figsize=(15, 10),dpi=80)\n\nsns.heatmap(data[maincols].corr(),annot=True)\n\n#plt.title(\"\\nThe correlation between happiness score and 6 life-evaluation factors\\n\",           fontsize = 18, fontweight ='bold' )\n\nax.text(0,-1, \"\\nThe correlation between happiness score and 6 life-evaluation factors\\n\", \n          fontsize = 20, fontweight ='bold')\nax.text(0,-0.3,'The Ladder Score which shows the level of happiness  is strongly correalated with level of GDP, \\\n            \\nSocial Support, Healthy life Expectancy and Freedom to make life choices.\\\n            \\nAlthought such factors as Perception of corruption and Generosity show negative correlation with  Happiness score.',\n        fontsize=15)\n\nplt.show()","65bcdd6d":"#add POPULATION to data and analise it\n\ndata_pop = pd.merge(data, pop, how = 'left', on = 'Country name') \ndata_pop['Population_m'] = (data_pop['Population2020']\/1000000).round(3)\ndata_pop = data_pop.drop(columns = ['Population2020'])\n\n#population data preprocessing\n\n#group by mean score for pieplots - to show not only %% but also value\ngroupby_score_mean_pop = data_pop.groupby('groupby meanscore')['Population_m'].sum().sort_values()\ngroupby_score_mean_cntry = data_pop.groupby('groupby meanscore')['Country name'].count().sort_values(ascending =False)\n\n#add col Population to main cols  &&!&&!&!??? del&\nmaincols_pop = maincols\nmaincols_pop.append('Population_m')\n\n#change columns Med age, Fert rate -type from object to float\ndata_pop = data_pop.astype({'Med. Age': 'float'})\ndata_pop = data_pop.astype({'Fert. Rate': 'float'})\n\n#means to analyze\nmean_urban = data_pop['UrbanPop%'].mean()\nmean_fert = data_pop['Fert. Rate'].mean()\nmean_age = data_pop['Med. Age'].mean()\ntotal_pop = data_pop['Population_m'].sum()\n\n\n#data_pop.info()","d2ce0fd7":"#Pie Chart shows the population in each happiness _group \n\n\n#The mean ladder score is 5.532839 Lets see how many countries and  people live above and below median\n\nfig, axs = plt.subplots(1,3, figsize=(18, 10), dpi = 150 )\n\nlabels = ['happy', 'unhappy']\nexplode=[0.03]*2\ncolors = ['#99ff99', '#ff9999'] #Mint Green, lightsalmonpink\n\ndef fu(pct, allvals):\n    absolute = int(round(pct\/100.*np.sum(allvals))) \n    return \"{:.1f}%\\n({:.0f})\".format(pct, absolute)\n\n\naxs[0].pie(groupby_score_mean_cntry,  explode=explode,  pctdistance=0.5, labels = labels, colors=colors,\n          autopct=lambda pct: fu(pct, groupby_score_mean_cntry) ) #autopct= '%1.1f%%',\naxs[0].set_title('Countries \\ndivided by average happiness score\\n(number of countries)',  fontweight = 'bold')\naxs[1].pie(groupby_score_mean_pop,  explode=explode,  pctdistance=0.5, labels = labels,colors=colors,\n          autopct=lambda pct: fu(pct, groupby_score_mean_pop))  #autopct=\"%.1f%%\",\naxs[1].set_title('World population \\ndivided by average happiness score\\n (million people)', fontweight = 'bold')\n\naxs[2].text(0,0.3,'More than a halth of all countries \\nhave happiness score \\nhigher than average.\\n\\\n    \\nOn the other side \\nalmost 3\/4 of the world population\\nare unhappy.\\n\\\n    \\nTwo most populated countries \\nChina(East Asia) and India(South Asia) \\nhave happiness score below average.\\\n        \\nTheir total population is about 51%  \\nof  all unhappy people in the world.',\\\n                        fontweight='normal',fontsize=14, weight='light',color='black', va ='bottom')\n\n       \n\n\naxs[2].set_yticklabels('')\naxs[2].set_xticklabels('')\naxs[2].tick_params(axis='y',length=0)\naxs[2].tick_params(axis='x',length=0)\nfor line in ['top','right','left','bottom']:\n    axs[2].spines[line].set_visible(False)\n\nplt.show()","8b42a969":"fig, axes = plt.subplots(2, 3, figsize=(15, 6), sharey=True, dpi = 100 )\n\n\nsns.scatterplot(ax = axes[0,0], y ='Ladder score',  x ='Logged GDP per capita', \\\n                hue = 'groupby meanscore', data = data, legend = False)\nsns.scatterplot(ax = axes[0,1], y ='Ladder score',  x ='Social support', \\\n                hue = 'groupby meanscore', data = data, legend = False)\nsns.scatterplot(ax = axes[0,2], y ='Ladder score',  x ='Healthy life expectancy', \\\n                hue = 'groupby meanscore', data = data, legend = False)\nsns.scatterplot(ax = axes[1,0], y ='Ladder score',  x ='Freedom to make life choices', \\\n                hue = 'groupby meanscore', data = data, legend = False)\nsns.scatterplot(ax = axes[1,1], y ='Ladder score',  x ='Generosity', \\\n                hue = 'groupby meanscore', data = data, legend = False)\nsns.scatterplot(ax = axes[1,2], y ='Ladder score',  x ='Perceptions of corruption', \\\n                hue = 'groupby meanscore', data = data, legend = False)\n\n\nfig.legend(loc='upper left', bbox_to_anchor= (0.1,1.1), ncol=2,\\\n           borderaxespad=0, frameon=False, title_fontsize=14, fontsize=12,\n          title='The relationship of happiness Score and 6 life evaluated factors.\\n\\\n          \\nComparison between counties with happiness level below and above average score(5.5328)\\n', \\\n           labels=[\"happy countries\", 'unhappy countries'] )\n\n\nplt.show()","a128238c":"plt.figsize=(20,20)\ndf =data_pop\n\n\ndf.groupby('groupby meanscore')\\\n        .agg(total_urban=('UrbanPopMln','sum'),total_rural=('RuralPopMln','sum'))\\\n        .plot(kind='bar',width = 0.8, color=('gray','gold'))\n\n\nplt.text(-0.7,5500,'Urban and Rural population in happy and unhappy countries.', fontsize = 14, fontweight = 'bold')\n\nplt.text(-0.7,4200,'\\nMore than half of the world\u2019s population live in urban areas, increasingly in highly-dense cities\\\n\\nIn Happy countries - 77% of the population live in urban areas. \\\n\\nIn Unhappy countries - the majority live in rural areas and only 48% of the population live in cities.\\n',\n        fontsize = 12)\n\nplt.legend(loc='upper left', bbox_to_anchor= (1.01,0.99), ncol=1,\\\n           borderaxespad=0, frameon=True, title_fontsize=14, fontsize=12,\n          \n           labels=[\"urban population\", 'rural population'] )\nplt.ylabel('Population million people')\nplt.xlabel('')\n\nplt.yticks([0,1000,2000,3000,4000], [0,1,2,3,4])\nplt.xticks([0,1], ['happy \\ncountries','unhappy \\ncountries'], rotation = 0, fontweight = 'bold')\n\nplt.show()","998a4e1e":"data = data_pop\n\nfig = plt.figure(figsize=(18,7), dpi =100)\n#widths = [2, 2]\n\n\ngs = fig.add_gridspec(ncols = 2, nrows = 1)#, width_ratios=widths)\ngs.update(wspace=0.1, hspace=0.2)  # <--- wwigth between  cells og the fig (figure)\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n# Remove border from plot\n#for s in ['top', 'bottom', 'right']:    \n   # ax0.spines[s].set_visible(False)\n   # ax1.spines[s].set_visible(False)\n    \n# ax labels off\n#ax0.axes.get_xaxis().set_ticks([])\n#ax0.axes.get_yaxis().set_ticks([])\n#ax1.axes.get_xaxis().set_ticks([])\n#ax1.axes.get_yaxis().set_ticks([])\n\n\nsns.scatterplot( ax = ax0, y ='Logged GDP per capita',  x ='Med. Age', \\\n                hue = 'groupby meanscore', data = data, legend = False, palette = 'Paired')\nsns.scatterplot( ax = ax1, y ='Logged GDP per capita',  x ='Fert. Rate', \\\n                hue = 'groupby meanscore', data = data, legend = False, palette = 'Paired')\n\nax0.set_xlabel('Medium age', fontweight = 'bold')     \nax1.set_xlabel('Fertility rate', fontweight = 'bold')     \nax1.set_ylabel('') \n\n\nfig.legend(loc='upper left', bbox_to_anchor= (0.15,1.05), ncol=2,\\\n           borderaxespad=0, frameon=False,  fontsize=12,\n           labels=[\"happy countries\", 'unhappy countries'] )\n\nline_col = 'darkblue'\nax0.axvline(mean_age, ls=':', c=line_col)\nax0.axhline(mean_gdp, ls=':',  c=line_col)\nax1.axvline(mean_fert, ls=':',  c=line_col)\nax1.axhline(mean_gdp, ls=':',  c=line_col)\n\nfig.legend(loc='upper left', bbox_to_anchor= (0.15,1), ncol=1,\\\n           borderaxespad=0, frameon=False, fontsize=12,\n                     labels=[\"medium age and medium fertility lines\"] )\nax0.text(13,14.5,'\\nMedium age and Fertility rate in dependence with country welfare (GDP per capita) and happiness groups\\n', \n         fontsize=14, fontweight ='bold')\nax0.text(13,13.5,\n         'Across most high-income countries \u2013 the average population are 37 years old and the average woman has 1.8 children.\\\n         \\nMost of this counrties are in Happiest group.\\\n         \\nIn low income countries, which are mostly unhappy, population has avarage age 23 and medium fertility rate is 3.6 children per women.',\n        fontsize = 12)\n\nplt.show()","95d270ec":"#lETS CHECK THE CORRELATION WITH POLITICS\n\nall_data = pd.merge(data_pop, regime[['Country name','Type', 'Subtype']], how = 'left', on ='Country name')\nall_data.shape\n\n\n#preprocessing categorical data: Type and Subtype of regime to check their correlation with Happiness score\n\ndef sub_regime_rank(val):    \n    if val   == 'Parliamentary Democracy':       return 6\n    elif val == 'Semi-Presidential Democracy':   return 5\n    elif val == 'Presidential Democracy':        return 4\n    elif val == 'Royal Dictatorship':            return 3\n    elif val == 'Civilian Dictatorship':         return 2\n    elif val == 'Military Dictatorship':         return 1\n    else:                                        return 0\n\ndef regime_rank(val):    \n    if val   == 'Democracy':       return 1\n    elif val == 'Dictatorship':    return 0\n    else:                          return 9999\n\n\nall_data['regime'] = all_data['Type'].apply(regime_rank)\nall_data['sub_regime'] = all_data['Subtype'].apply(sub_regime_rank)\n\n# groups according political regime and mean happiness level\nregime_group = all_data.groupby(['Type','Subtype','groupby meanscore']).agg(count = ('Country name','count'))\nregime_group['%'] = regime_group['count'].div(regime_group['count'].sum(level = 0), level=0)                                   \nregime_group['%'] = (regime_group['%']*100).round(0) \n#regime_group","444d4ed6":"fig = plt.figure(figsize=(15,5),dpi=100)\nwidths = [2, 2]\n\ngs = fig.add_gridspec(ncols = 2, nrows = 1, width_ratios=widths)\ngs.update(wspace=0.05, hspace=0.27)  # <--- wwigth between  cells og the fig (figure)\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n# Remove border from plot\n#for s in ['top', 'bottom', 'left']:\n   # ax0.spines[s].set_visible(False)\n    \nfor s in ['top', 'bottom', 'right']:    \n    ax1.spines[s].set_visible(False)\n    \n\nax1.axes.get_xaxis().set_ticks([])\nax1.axes.get_yaxis().set_ticks([])\n\nsns.swarmplot(x= all_data['Type'],  y= all_data['Ladder score'], ax = ax0)\nax0.axhline(5.532839, ls='--', c='black')\n\n\nax0.text(-0.5,9,'Correlation between political regime and happiness level',\n         fontfamily='sans-serif',fontsize=14,fontweight='bold',color='black',\n        horizontalalignment='left',  verticalalignment='top') \n\nax0.text(0.2,6.5,' 65\\n(70%)',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='darkgreen',\n        horizontalalignment='center',  verticalalignment='top')\n\nax0.text(0.2,4.5,'28\\n(30%)',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='darkgreen',\n        horizontalalignment='center',  verticalalignment='top')\n\nax0.text(0.8,6.5,'10\\n(18%)',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='darkred',\n        horizontalalignment='center',  verticalalignment='top')\n\nax0.text(0.8,4.5,'46\\n(82%)',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='darkred',\n        horizontalalignment='center',  verticalalignment='top')\n\n\n\nax1.text(0.05,0.8,'More than a half countries of the world are democracy.',\n         fontfamily='sans-serif',fontsize=14,fontweight='normal',color='black',\n        horizontalalignment='left',  verticalalignment='top') \n\nax1.text(0.05,0.7,'Democracy:  93 countries = 62%\\\n                \\nDictatorship: 56 countries = 38%',\n         fontfamily='sans-serif',fontsize=12,fontweight='bold',color='gray',\n        horizontalalignment='left',  verticalalignment='top') \n\nax1.text(0.05,0.4,'Countries with  democratic system of government \\nare mainly in the \"happy groupe\"',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='gray',\n        horizontalalignment='left',  verticalalignment='top') \n\nax1.text(0.05,0.2,'Otherwise countries with dictatorship are unhappy',\n         fontfamily='sans-serif',fontsize=12,fontweight='normal',color='gray',\n        horizontalalignment='left',  verticalalignment='top') \n\n\n\nplt.show()","c6183cd7":"all_data = all_data.sort_values('sub_regime', ascending =False)\nfig = plt.figure(figsize=(10,5))\ntypes = sns.swarmplot(x= all_data['Subtype'],\n              y= all_data['Ladder score'])\n\ntypes.axhline(5.532839, ls='--', c='black')\n\ntypes.set_xticklabels(types.get_xticklabels(),rotation=45, horizontalalignment='right')\nplt.text(-0.5, 10, 'Countries by political systems. Correlation with happiness score\\n',fontsize=14,fontweight='bold')\nplt.text(5.5,8.3, '--- mean happiness level (5.5328)',horizontalalignment='right' )\n\n\nplt.text(-0.5,10, 'Military dictatorship seems to be the worst political institution  for people happiness. \\\n                \\nNone of 17 countries are happy. \\\n                \\nContrary Democracy is not the only reason for happiness. \\\n                \\nEven Parlamentary,the best political institution, couldnt make 5 countries happy.',\n        fontfamily='sans-serif',fontsize=12,fontweight='normal',color='black',\n        horizontalalignment='left',  verticalalignment='top')\n\n\nplt.show()","a0bd73db":"\n############################  Regional groups  ######################################","733b5f8a":"#set the order of Regions according to their MEAN happiness score of the group\n\nri = all_data.groupby('Regional indicator',as_index=False).agg(score = (\"Ladder score\",'mean')).sort_values('score',ascending = False)\nreg_list = list(ri['Regional indicator'])\ndataset = {'Regional indicator': reg_list,\n           'order':[1,2,3,4,5,6,7,8,9,10]    }\nregions_order = pd.DataFrame (dataset)\nall_data = pd.merge(all_data, regions_order, on = 'Regional indicator')\n\n# count total population in each regional group\npop_reg = data_pop.groupby('Regional indicator', as_index = False)\\\n                .agg(total_popul =('Population_m','sum'), urbanpop = ('UrbanPopMln','sum'),  ruralpop = ('RuralPopMln','sum'),                     \n                     meanscore = ('Ladder score','mean'),  maxscore = ('Ladder score','max'), minscore = ('Ladder score','min'),\n                     countries = ('Country name', 'count'), GDP = ('Logged GDP per capita','mean'))\\\n                .sort_values(by = 'maxscore', ascending = False)\npop_reg['urban%'] = (pop_reg['urbanpop']\/pop_reg['total_popul']*100).round(0)\npop_reg = pd.merge(pop_reg,regions_order, on = 'Regional indicator') \npop_reg = pop_reg.sort_values('order')\n#pop_reg\n\n\n#POlitical regimes in different regional groups\ndem = all_data[all_data['Type']=='Democracy'].groupby(['Regional indicator'], as_index ='Regional indicator').agg(Democracy = ('Type','count'))\ndic = all_data[all_data['Type']=='Dictatorship'].groupby(['Regional indicator'], as_index ='Regional indicator').agg(Dictatorship = ('Type','count'))\n\nregions_regime = dem.join(dic, on = 'Regional indicator', how = 'outer')\nregions_regime = pd.merge(regions_regime,regions_order, how = 'left', on = 'Regional indicator')\nregions_regime = regions_regime.set_index('Regional indicator')\n#regions_regime\n#pop_reg","a9c13cfd":"fig,ax = plt.subplots(1,1, figsize=(10, 5),dpi=80)\n\nsns.boxplot(data = all_data.sort_values('order'), y = 'Regional indicator',  x = 'Ladder score')\nsns.swarmplot(data = all_data.sort_values('order'), y = 'Regional indicator', x = 'Ladder score', size = 5, color = 'black' )\n\nax.text(0,-2.2, 'Overall distribution of the happiness score at the different regional groups',\\\n        fontfamily='sans-serif',fontsize=14,fontweight='bold',color='black')\nax.text(0,-1,  'Highest happiness score get  Western European, Noth American and ANZ countries.\\\n\\nSouth Asian countries and Sub-Saharan Africa are at the bottom.',\\\n       fontfamily='monospace',fontsize=12,fontweight='light',color='gray')\n\nplt.show()","49a52273":"#  two most populated Countries - China abd India scored lower then 5.53  \n#Their total poppulation is a half of entire population below average score\nfig,ax = plt.subplots(1,1, figsize=(10, 5))\n\nsns.barplot(y = pop_reg['Regional indicator'], x = pop_reg.total_popul)\n\nax.axhline(4.5, ls='--', c='black')\nplt.text(2000,4.5, 'mean happiness score\\n 5.5328', va='center', ha= 'left', fontsize = 12)\n\nax.text(-500,-3.5, '\\nThe total population of regional groups',\\\n        fontfamily='sans-serif',fontsize=14,fontweight='bold',color='black')\nax.text(-500,-2.2,  'Hapiest regions are less populated than  unhappiest.\\\n\\nSouth Asia and Sub-Saharan have the lowest happiness score and hight1 population.',\\\n       fontfamily='monospace',fontsize=12,fontweight='normal',color='gray')\n\nplt.show()","8f1cfa92":"\ndf = pop_reg[['Regional indicator','urbanpop', 'ruralpop','order']]\ndf =df.set_index('Regional indicator').sort_values('order', ascending =False)\n\ndf[['urbanpop', 'ruralpop']].plot(kind='barh',width = 0.8, color =['gray','gold'])\n\nplt.text(-500,13,\"\\nUrban and Rural population in world regions.\\n\",\n        fontsize=14,fontweight='bold')\n\nplt.text(-500,10, \"\\nPeople in most happy regions are basically live in urban area(>70%).\\\n          \\nSouth Asia,Sub-Saharan Africa and Southeast Asia's population is mainly rural, their urbanization is lower than 50%. \\\n          \\nIn other regional groups urbanization is around 60%.\\n\",\n        fontsize=12)\nplt.legend(loc='upper left',bbox_to_anchor= (1.05,1), ncol=1,\\\n           borderaxespad=0, frameon=True, title_fontsize=14, fontsize=12,         \n           labels=[\"urban population\", 'rural population'] )\n\n\nplt.axhline(4.5, ls='--', c='black')\nplt.text(1300,4.5, 'mean happiness score\\n 5.5328', va='center', ha= 'left', fontsize = 12)\nplt.show()","d6852d6b":"regions_regime.sort_values('order', ascending=False)[['Democracy','Dictatorship']].plot(kind='barh',stacked=True, \n                                                            width = 0.8)\nplt.axhline(4.5, ls='--', c='black')\nplt.text(36, 4.5, 'mean happiness score\\n       5.5328', ha='right', va = 'center')\n\nplt.text(-15,12,'\\nRegional groups by political systems\\nCorrelation with happiness score\\n',fontsize=14,fontweight='bold')\nplt.text(-15,10,'\\nRegional groups with domination of democracy has height happiness level\\\n         \\nand politic regime in countries where mean happiness score below average are mainly Dictatorship\\n', fontsize=12)\n\nplt.show()","9dcd4601":"#Finally lets compare countries at the top and the bottom of the rank","4b32b4e6":"\ncols = ['Country name', 'Regional indicator', 'Ladder score', 'Logged GDP per capita', 'Social support', \n      'Healthy life expectancy','Freedom to make life choices', 'Generosity','Perceptions of corruption',\n        'Population_m', 'UrbanPop%', 'UrbanPopMln', 'RuralPopMln', 'Fert. Rate', 'Med. Age',\n        'Type', 'Subtype','regime','sub_regime']\n\ntop = all_data[cols].sort_values(by = 'Ladder score', ascending = False)[:10]\nbottom = all_data[cols].sort_values(by = 'Ladder score',ascending = False)[-10:]\n\n\ntop_bottom = all_data[cols].sort_values(by = 'Ladder score')\ntop_bottom = pd.concat([top_bottom[:10],top_bottom[-10:]]).sort_index()\ntop_bottom = top_bottom.sort_values(by = 'Ladder score', ascending = True)","4c2b497a":"nameslist = list(top_bottom ['Country name'])\nscoreslist = list(top_bottom ['Ladder score']- mean_score)\n#print(scoreslist)  #print(nameslist)\ntxt_clr = 'white'\ntxt_wgh = 'normal'\ntst_fsz = 14\n\n\nfig, ax = plt.subplots(figsize=(8,8), dpi =80)\nwidth = 0.8\n\nbar_colors = ['lightgreen' for _ in range(20)]\nbar_colors[0] = bar_colors[1] = bar_colors[2] =  'red'\nbar_colors[3] = bar_colors[4] = bar_colors[5] = bar_colors[6] = bar_colors[7] = bar_colors[8] =bar_colors[9] ='lightcoral'\nbar_colors[17] = bar_colors[18] = bar_colors[19] = 'green' \n\n\nax.barh(nameslist, scoreslist, width, color=bar_colors)\n\n\n#text in the bars\nfor i in range(10,20):\n    ax.annotate(nameslist[i], \n                   xy=(scoreslist[i]-(scoreslist[i]*0.03), i), #-(scoreslist[i]*0.03) for space at the end\n                   va = 'center', ha='right',fontweight=txt_wgh, fontfamily='monospace', \n                   fontsize=tst_fsz, color=txt_clr,rotation=0)\nfor i in range(0,10):\n    ax.annotate(nameslist[i], \n                   xy=(scoreslist[i]-(scoreslist[i]*0.03), i), #-(scoreslist[i]*0.03) for space at the end\n                   va = 'center', ha='left',fontweight=txt_wgh, fontfamily='monospace', \n                   fontsize=tst_fsz, color=txt_clr,rotation=0)\n\nfor s in [\"top\",\"right\",\"left\"]:\n            ax.spines[s].set_visible(False)\n    \nax.set_yticks([]) \nax.text(0,-3.5,'mean score\\n5.5328', ha = 'center', fontweight = 'bold')\nax.set_title('Top 10 happiest and unhappiest countries in the world\\n',\\\n             fontsize=14,fontweight='bold',color='black')\nplt.show()","01723864":"#name datasets\ntp = top\nbt = bottom\n\n#Plot figure \nrows = 4\ncols = 3\nfactors = ['Logged GDP per capita', 'Social support', 'Healthy life expectancy', \\\n       'Freedom to make life choices', 'Generosity', 'Perceptions of corruption']\n\nfig = plt.figure(figsize=(20, 15), dpi=100) \ngs = fig.add_gridspec(rows,cols)\ngs.update(wspace=0.2, hspace=0.3)\n\nax1 = fig.add_subplot(gs[0,:2])\n#ax1.set_title('ax1')\nax2 = fig.add_subplot(gs[0, 2])\n#ax2.set_title('ax2')\n\nfor s in [\"top\",\"right\"]:\n        ax1.spines[s].set_visible(False)\n        ax2.spines[s].set_visible(False)\n\nsub = 3\nfor r in range(1,rows):\n    for c in range(0,cols):\n        locals()[\"ax\"+str(sub)] = fig.add_subplot(gs[r, c])\n        #locals()[\"ax\"+str(sub)].set_title(sub)\n        for s in [\"top\",\"right\"]:\n            locals()[\"ax\"+str(sub)].spines[s].set_visible(False)        \n        sub += 1\n\n# TITLE the plot\nax1.text(1,2.5, 'Compare all factors life evaluation \\n\\\n         \\nof 10 most happiest countries (shows in green) and 10 unhappiest countries (shows in red) of the world',\\\n         fontweight = 'bold', fontsize = 16)\n\n# fill subplot Ladder score\nsns.kdeplot(data= bt,x='Ladder score',  ax =ax1, shade=True,color='lightcoral')\nsns.kdeplot(data= tp,x='Ladder score',  ax =ax1, shade=True,color='lightgreen') \nax1.set_xlabel('Happiness score', fontweight = 'bold') \n\n\n# fill subplots 6 factors\nsub = 2\nno_ylable = [2,4,5,7]\nfor f in factors:\n    sns.kdeplot(data=bt, x= f, ax=locals()['ax' + str(sub)], shade=True,color='lightcoral')\n    sns.kdeplot(data=tp, x= f, ax=locals()['ax' + str(sub)], shade=True,color='lightgreen')\n    locals()['ax' + str(sub)].set_xlabel(f, fontweight = 'bold')\n    if sub in no_ylable:\n        locals()['ax' + str(sub)].set_ylabel('') \n        \n    sub +=1\n\n    \n#ax8 Politics cut minus\nsns.kdeplot(data=bt,x='sub_regime', ax =ax8, shade=True,color='lightcoral').set(xlim =(1,6))\nsns.kdeplot(data=tp,x='sub_regime', ax =ax8 , shade=True,color='lightgreen')\nax8.set_xlabel('Political regime subtype', fontweight = 'bold')   \nax8.text(01.1,0.37, '1 - Military Dictatorship \\n2 - Civilian Dictatorship \\n3 - Royal Dictatorchip \\\n            \\n4 - Presidential Democracy\\n5 - Semi-Presidential Democracy\\n6 - Parliamentary Democracy')\nax8.set_ylabel('') \n      \n #ax9 Population    cut minus\nsns.kdeplot(data=bt,x='Population_m',  ax =ax9, shade=True,color='lightcoral').set(xlim=(0,60))\nsns.kdeplot(data=tp,x='Population_m',  ax =ax9, shade=True,color='lightgreen') \nax9.set_xlabel('Populuation (millions)', fontweight = 'bold')  \n    \n#ax10 Age    \nsns.kdeplot(data=bt,x= 'Med. Age', ax =ax10, shade=True,color='lightcoral')\nsns.kdeplot(data=tp,x= 'Med. Age', ax =ax10,  shade=True,color='lightgreen')    \nax10.set_xlabel('Medium age', fontweight = 'bold') \nax10.set_ylabel('') \n\n#ax11 Fert    \nsns.kdeplot(data=bt,x='Fert. Rate', ax =ax11, shade=True,color='lightcoral')\nsns.kdeplot(data=tp,x='Fert. Rate', ax =ax11,  shade=True,color='lightgreen')   \nax11.set_xlabel('Fertility rate', fontweight = 'bold')     \nax11.set_ylabel('') \n\nplt.show()","2c5fa032":"# as %%% \ntop_bottom ['% score'] = (top_bottom['Ladder score'] \/ list(top[['Ladder score']].iloc[0]) *100 ).round(0)\ntop_bottom ['% gpd'] = (top_bottom['Logged GDP per capita'] \/ list(top[['Logged GDP per capita']].iloc[0]) *100 ).round(0)\ntop_bottom ['% support'] = (top_bottom['Social support'] \/ list(top[['Social support']].iloc[0]) *100 ).round(0)\ntop_bottom ['% expectancy'] = (top_bottom['Healthy life expectancy'] \/ list(top[['Healthy life expectancy']].iloc[0]) *100 ).round(0)\ntop_bottom ['% freedom'] = (top_bottom['Freedom to make life choices'] \/ list(top[['Freedom to make life choices']].iloc[0])*100 ).round(0)\ntop_bottom ['% generosity'] = (top_bottom['Generosity'] \/ list(top[['Generosity']].iloc[0]) *100 ).round(0)\n\ntop_bottom ['% corruption'] = (((1- top_bottom['Perceptions of corruption']) \/ list(1- top[['Perceptions of corruption']].iloc[0])) *100 ).round(0)\ntop_bottom ['% population'] = (top_bottom['Population_m'] \/ list(top[['Population_m']].iloc[0]) *100 ).round(0)\ntop_bottom ['% urbanization'] = (top_bottom['UrbanPop%'] \/ list(top[['UrbanPop%']].iloc[0]) *100 ).round(0)\ntop_bottom ['% fertility'] = (top_bottom['Fert. Rate'] \/ list(top[['Fert. Rate']].iloc[0]) *100 ).round(0)\ntop_bottom ['% age'] = (top_bottom['Med. Age'] \/ list(top[['Med. Age']].iloc[0]) *100 ).round(0)\ntop_bottom ['% regime'] = (top_bottom['sub_regime'] \/ list(top[['sub_regime']].iloc[0]) *100 ).round(0)\n\n\n\n#lets see the diferensec between the  MOST happiest and umhappies countries\n#Finland and Afganistan\n\nlimits = pd.concat([top_bottom[:1],top_bottom[-1:]]).sort_index(ascending =False)\ncol_lim = ['% score','% gpd', '% support', '% expectancy',  '% freedom','% generosity','% corruption']\ncol_meanlim = ['mean% score','mean% gpd', 'mean% support', 'mean% expectancy',  'mean% freedom']\n\n#limits[col_lim]\n#top_bottom.head()#.columns","bc5d91d5":"plt.figure(figsize=(15,10))\n\ncol_lim = ['% score','% gpd', '% support', '% expectancy',  '% freedom','% generosity','% corruption']\nX = ['happiness score','GDP', 'social support', 'healthy life\\nexpectancy', \\\n     'freedom \\nto make choices', 'Generosity','UNperception of\\ncorruption']\n\nY = limits[col_lim].iloc[0,:].values.tolist()\nZ = limits[col_lim].iloc[1,:].values.tolist()\n\n\nX_axis = np.arange(len(X))\n\n\nplt.bar(X_axis - 0.2, Y, 0.4, label = 'Finland', color = 'lightblue')\nplt.bar(X_axis + 0.2, Z, 0.4, label = 'Afghanistan', color='lightgray')\n\nplt.xticks(X_axis, X)\nplt.yticks(np.arange(10, 110, 10.0))\n\n\nplt.xlabel(\"Factors of life evaluation\", fontweight='bold', fontsize = 14)\nplt.ylabel(\"Percentage from top ranks\")\nplt.text(-1,130, \"Difference between Finland and Afganistan: \\nTop and Bottom of the World Happiness rank\\n\",\n          fontweight = 'bold', fontsize = 14, ha =  'left', va ='bottom'        )\n\nplt.legend(loc='upper right', bbox_to_anchor= (1, 1), ncol=1, frameon=True,# borderaxespad=5,            \n           title='Happiness Score', labels=[\"Finland (top = 100%)\", 'Afganistan'] )\n\n\nplt.text(-1,110, 'Plot shows that happiness level in Afganistan is 3 times lower than in Finland, social support and freedom of choice is twice lower, \\\n                \\nalthough the difference in grand domastic product and happy life expectancy is less than a 30% \\n\\\n                \\nIt is also important to say that Finland political system is demorcatic, while Afganistan is a dictatorship \\n\\\n                \\nThis correlation shows that nominal GDP which is useful in comparing national economies on the international market\\\n                \\ndoesnt measure the effect of the economy on human happiness.',\n        fontsize = 14, ha= 'left', va ='bottom' )\n\n\nplt.axhline(50, ls='--', c='gray')\n\nplt.show()","bdaec350":"plt.figure(figsize=(15,7))\n\ncol_lim2 = ['% population', '% urbanization', '% fertility', '% age']\nX = ['population','urbanization', 'fertility','age']\nY = limits[col_lim2].iloc[0,:].values.tolist()\nZ = limits[col_lim2].iloc[1,:].values.tolist()\n\nX_axis = np.arange(len(X))\n\nplt.bar(X_axis - 0.2, Y, 0.4, label = 'Finland', color = 'lightblue')\nplt.bar(X_axis + 0.2, Z, 0.4, label = 'Afghanistan', color='lightgray')\n\nplt.xticks(X_axis, X)\nplt.yticks(np.arange(0, 350, 50.0))\nplt.ylim([0, 350])\n\nplt.xlabel(\"Population categories \", fontweight='bold')\nplt.ylabel(\"Percentage to top ranks\")\nplt.text(-0.5,430, \"Difference between Finland and Afganistan: \\nTop and Bottom of the World Happiness rank\\n\",\n          fontweight = 'bold', fontsize = 14, ha =  'left'        )\n\nplt.legend(loc='upper right', bbox_to_anchor= (1, 1.2), ncol=1, frameon=True,# borderaxespad=5,            \n           labels=[\"Finland (top = 100%)\", 'Afganistan'] )\nplt.text(-0.5,370, 'Among 40 mln of nation of Afghanistan more than 75% live in rural area.\\\n            \\nPopulation of Finland is 7 times lower and 86% live in urban areas.\\n\\\n            \\nAfganistan is a young nation average person is 18 years old, and the number of children per woman is 4.6\\\n            \\nAvarage Finland citizenship is 43 years old and fertility for one woman no more than 1.5 children.',\n             fontsize = 12 )\n\n\n\nplt.show()","b84acf4f":"col = ['Ladder score', 'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity','Perceptions of corruption',\n       'Population_m', 'UrbanPop%', 'Fert. Rate', 'Med. Age', 'regime','sub_regime']\n\nbottom_trans = bottom[col].describe().T[['mean']].round(2).reset_index()\nbottom_trans = bottom_trans.rename(columns={'mean':'Unhappy country', 'index':'indicator'})\ntop_trans = top[col].describe().T[['mean']].round(2).reset_index()\ntop_trans  = top_trans .rename(columns={'mean':'Happy country',  'index':'indicator'})\n\ngen = pd.merge(top_trans,bottom_trans, on = 'indicator')\n\nzero = [0,1,3,8,10]\none  = [2,4,6,7,9]\ngen.iloc[zero,1:3] = (gen.iloc[zero,1:3]).round(0)\ngen.iloc[one,1:3] = (gen.iloc[one,1:3]).round(1)\ngen.iloc[5,1] = (gen.iloc[5,1]).round(2)\ngen.iloc[5,2] = (gen.iloc[5,2]).round(4)\n\ngen[gen['indicator'] == 'sub_regime'] = gen[gen['indicator'] == 'sub_regime'].replace({'Happy country': 5.5}, 'Parliamentary Democracy')\ngen[gen['indicator'] == 'sub_regime'] = gen[gen['indicator'] == 'sub_regime'].replace({'Unhappy country': 2.0}, 'Civilian Dictatorship')\ngen[gen['indicator'] == 'regime'] = gen[gen['indicator'] == 'regime'].replace({'Happy country': 1}, 'Democracy')\ngen[gen['indicator'] == 'regime'] = gen[gen['indicator'] == 'regime'].replace({'Unhappy country': 0.2}, 'Dictatorship')\n\ngen = gen.astype({'Happy country': 'object'})\n#gen","c7317211":"fig, ax =plt.subplots(1,1, dpi = 100)\n#ax.axis('tight') #Set the limits, just large enough to show all the data, then disable further autoscaling.\nax.axis('off') #Turn off axis lines and labels. Same as ''False''.\n\ndf = gen[['Happy country', 'Unhappy country']]\ncols = ['Happiness score (0-10)', 'GDP per capita', 'Social support',  'Healthy life expectancy',\n 'Freedom to make life choices',  'Generosity',  'Perceptions of corruption',\n 'Population (mln)',  '% of urban population', 'Number of children',  'Medium age',\n 'Political regime', 'Form of government']\nax.table(cellText=df.values,\n        colLabels=df.columns,\n        cellLoc='center',\n        rowLabels=cols,\n        rowColours =[\"lightgray\"] * 13,  \n        colColours =['lightgreen','lightcoral'] ,\n        loc=\"center\", )\n\nplt.show()","397e3d79":"# Regional groups\n\nLet's take a look on happiness distribution along the world. \n\nThe world happines report distinguish 10 regional groups. \n\nWe will analise and vizualise the possible liks between happiness level of the region and 2 life evaluated factors: population and politics.","86e2347e":"***\n\n**Happiness and 6 factors of life evaluation**\n\nHappiness levels depend not just on financial security, but also broader perceptions of one\u2019s social support, personal freedom, and more. \n\nThe plots below show the  extent to which each of six factors  estimated to contribute to making life evaluations higher in every  country.\n\n***","9fe049b2":"# HAPPINESS, POLITICS AND POPULATION","77820536":"# Conclusion\n\nWe have broaded the 6 major factors of World happiness report by population and politics ststistic.\nWe uncover the  scores of 149 countries,  which ones emerged the happiest or unhappiest. \nWe also look at the most and least happy  countries in the world and summurize the features of happiness.\n\nFinally, we may conclude\\ \nSuch clear indicators as health and wealth, can help you live a relatively happy, comfortable life\nHowever, there\u2019s much more to it than that. Happiness levels depend not just on financial security, but also broader perceptions of one\u2019s social support, personal freedom and political regime of the country.","de4ac016":"# Values for avarage happy and unhappy\n***\nFinally lets drow the **general portrait of happy and unhappy countries** of the world.\\\nData is based on average values for top10 and 10 bottom countries in the rank of the world happiness report.\n***","942bbacd":"Trying to find the answer on the question **what makes happiest countries happy** \n\nLet's  find the difference between 6 major factors, population and politics of countries in the top and bottom of the list.\n\nThe plots show:\n* the big gap in happiness level between top and bottom countries, \n* less  differences in GPD, life expectancy and political regime, and \n* miserable correlation in other factors.","1af37117":"# Compare most happiest and most unhappiest countries (Finland and Afghanistan)\n\nWe have compared entire world and top\/bottom 10 countries to find  what makes people happy.\n\nTo find the measurable difference  between happy and unhgappy, we will take a look on lider and antilider of the chart.\n\nLets make  Finlad, the happiest country in the world to be an ethalon of happiness and take all its parameters as 100%. Then count the same factors for Afghanistan as a persentage to ideal.\n\nAs a result we will see the percentage difference for happiness.","0b535bc3":"# Top & Bottom\nFinally its time to dive deep into survey and reveal the names of happiest and unhappiest countries.\nWe will choose **top 10  and 10 bottom** countries from  the report according to their happiness score.\n\n\n\n*Top 10 countries* are mainly Western Europian countries (9 of 10). New Zealand is the only non-European country to make it into the top 10 on the global happiness list. \n7 unhappiest countries in the *Bottom 10* are Sub-Saharan African countries.","8043aa86":"# Happy and Unhappy countries\n\nWorldwide happiness comes in at an average score of\u00a05.5.\n\nTo analyse the differences between those who are happy and who are not.\n\n\n**Let's devide all countries into 2 groups:**\n1. 'happy group' -  countries with happiness score  above average > 5.5328 \n2. 'unhappy group' - countries with happiness score  below average < 5.5328\n\n\n**How many countries and people live above and below median happiness score(5.5328)?**","a7bb1dc5":"# World happiness research\nThe idea of my survey is to find out the reasons of people happiness.\nAlong with the analysing the correlation between happiness level and 6 major factors,chosen by world happiness report, \nI am going to add 2 new factors : politic regime and total population.\n\nThe World Happiness Report marks countries on 6 life evaluated factors have no impact on the total score reported for each country, \nthey are just a way of explaining for each country the implications of the happiness score.\n\nThis study is going to find out, explain and visualize happiness level of nations via coherence  with political regime  and population.","e34aeec7":"***\n**3 dataframes are using in  this research:**\n - World Happiness Report 2021\n - Population by country 2020\n - Democracy-dictatorship index\n\n***\n\n**\"Country name\"** column is chosen as a key-column to all data frames. \n\nAs  there are a mismatch in countries names in different reports we have to preprocess data: rename countries and fill up the missing values. \n\n***","939cf5fa":"# Politics\nOne of the main aim of this stydy is to examine the  role of political institutions in explaining  happiness level.\n\nAll countries are devided into 2 main types: **Democtaracy** and **Dictatorship** and 6 subtypes"}}