{"cell_type":{"110472b5":"code","d8986ff3":"code","9eebf09e":"code","87347f0b":"code","6a31880e":"markdown","fc309b90":"markdown"},"source":{"110472b5":"email = 'put-your-email-here@needsinput.com'","d8986ff3":"pip install biopython","9eebf09e":"from Bio import Entrez, Medline\nEntrez.email = email\nhandle = Entrez.einfo()\nrecord = Entrez.read(handle)\nhandle.close()\nprint(record)\n","87347f0b":"try:\n    from StringIO import StringIO\nexcept ImportError:\n    from io import StringIO\ndef getrecord(id, db):\n    handle = Entrez.efetch(db=db, id=id, rettype='Medline', retmode='text')\n    rec = handle.read()\n    handle.close()\n    return rec\n\ndef search(entrez_istance, terms, db='pubmed', mindate='2019\/12\/01'):\n    handle = entrez_istance.esearch(db = db, term = terms, retmax=10, mindate=mindate)\n    record = entrez_istance.read(handle)\n    record_db = {}\n    for id in record['IdList']:\n        record = getrecord(id,db)\n        recfile = StringIO(record)\n        rec = Medline.read(recfile)\n        record_db[int(id)] = {}\n        if 'AB' in rec and 'AU' in rec and 'LID' in rec and 'TI' in rec:\n            record_db[int(id)] = {}\n            record_db[int(id)]['Authors'] = ' '.join(rec['AU'])\n            record_db[int(id)]['doi'] = rec['LID']\n            record_db[int(id)]['abstract'] = rec['AB']\n            record_db[int(id)]['title'] = rec['TI']\n        \n    return record_db\n\nsearch(Entrez, '2019-nCoV lungs')","6a31880e":"# Enter your email.  PubMed will contact you if your use gets excessive\n\nBiopython limits the search queries for you so that it should not create any DNS problems.  If you have a key to pubmed, you can set that up and search more quickly.","fc309b90":"# Description\n\nJust a quick example of how to use [Biopython](https:\/\/biopython.org\/) to search pubmed just in case you want to try augmenting your analysis with additional data that may not be in the CORD-19 subset."}}