{"cell_type":{"6b449a11":"code","7b9d8bef":"code","36d2aa5d":"code","d5e4daa7":"code","ae87b920":"code","17e717d2":"code","ac477047":"markdown","171638e8":"markdown"},"source":{"6b449a11":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","7b9d8bef":"n1 = '..\/input\/covid-ae-pretrain-gnn-attn-cnn\/submission.csv'\nn2 = '..\/input\/gru-lstm-with-feature-engineering-and-augmentation\/submission.csv'\nn3 = '..\/input\/openvaccine-deepergcn\/submission.csv'\nn4 = '..\/input\/openvaccine-lstm-fastai\/submission.csv'\n\ns1 = pd.read_csv(n1)\ns2 = pd.read_csv(n2)\ns3 = pd.read_csv(n3)\ns4 = pd.read_csv(n4)\n\ns1['id'], s1['seqpos'] = s1['id_seqpos'].str.rsplit('_', 1).str\ns1['seqpos'] = s1['seqpos'].astype(int)\ns1 = s1.sort_values(by=['id', 'seqpos']).reset_index(drop=True)\n\ns2['id'], s2['seqpos'] = s2['id_seqpos'].str.rsplit('_', 1).str\ns2['seqpos'] = s2['seqpos'].astype(int)\ns2 = s2.sort_values(by=['id', 'seqpos']).reset_index(drop=True)\n\ns3['id'], s3['seqpos'] = s3['id_seqpos'].str.rsplit('_', 1).str\ns3['seqpos'] = s3['seqpos'].astype(int)\ns3 = s3.sort_values(by=['id', 'seqpos']).reset_index(drop=True)\n\ns4['id'], s4['seqpos'] = s4['id_seqpos'].str.rsplit('_', 1).str\ns4['seqpos'] = s4['seqpos'].astype(int)\ns4 = s4.sort_values(by=['id', 'seqpos']).reset_index(drop=True)","36d2aa5d":"r1a = s1.groupby('id')['reactivity'].apply(list)[0]\nr1b = s1.groupby('id')['reactivity'].apply(list)[1000]\nr1c = s1.groupby('id')['reactivity'].apply(list)[2000]\nr1d = s1.groupby('id')['reactivity'].apply(list)[3000]\n\nr2a = s2.groupby('id')['reactivity'].apply(list)[0]\nr2b = s2.groupby('id')['reactivity'].apply(list)[1000]\nr2c = s2.groupby('id')['reactivity'].apply(list)[2000]\nr2d = s2.groupby('id')['reactivity'].apply(list)[3000]\n\nr3a = s3.groupby('id')['reactivity'].apply(list)[0]\nr3b = s3.groupby('id')['reactivity'].apply(list)[1000]\nr3c = s3.groupby('id')['reactivity'].apply(list)[2000]\nr3d = s3.groupby('id')['reactivity'].apply(list)[3000]\n\nr4a = s4.groupby('id')['reactivity'].apply(list)[0]\nr4b = s4.groupby('id')['reactivity'].apply(list)[1000]\nr4c = s4.groupby('id')['reactivity'].apply(list)[2000]\nr4d = s4.groupby('id')['reactivity'].apply(list)[3000]","d5e4daa7":"fig, axes = plt.subplots(nrows=4, ncols=4, figsize=(21,15), sharex=True, sharey=True)\nfig.suptitle('Reactivity', fontsize=24, color='blue')\nviz = [r1a, r1b, r1c, r1d, r2a, r2b, r2c,r2d, r3a, r3b,r3c,r3d,r4a,r4b,r4c,r4d]\ntits = ['k1a', 'k1b', 'k1c', 'k1d', 'k2a', 'k2b', 'k2c','k2d', 'k3a', 'k3b','k3c','k3d','k4a','k4b','k4c','k4d']\nfor i, ax in enumerate(axes.flatten()):\n    ax.plot(viz[i])\n    ax.set_title(tits[i], color='blue', fontsize=20)\n    ax.axvline(x=68, color='red')\n    ax.axvline(x=91, color='blue')\n    ax.axvline(x=107, color='green')\nplt.show()","ae87b920":"r1a = s1.groupby('id')['deg_Mg_pH10'].apply(list)[0]\nr1b = s1.groupby('id')['deg_Mg_pH10'].apply(list)[1000]\nr1c = s1.groupby('id')['deg_Mg_pH10'].apply(list)[2000]\nr1d = s1.groupby('id')['deg_Mg_pH10'].apply(list)[3000]\n\nr2a = s2.groupby('id')['deg_Mg_pH10'].apply(list)[0]\nr2b = s2.groupby('id')['deg_Mg_pH10'].apply(list)[1000]\nr2c = s2.groupby('id')['deg_Mg_pH10'].apply(list)[2000]\nr2d = s2.groupby('id')['deg_Mg_pH10'].apply(list)[3000]\n\nr3a = s3.groupby('id')['deg_Mg_pH10'].apply(list)[0]\nr3b = s3.groupby('id')['deg_Mg_pH10'].apply(list)[1000]\nr3c = s3.groupby('id')['deg_Mg_pH10'].apply(list)[2000]\nr3d = s3.groupby('id')['deg_Mg_pH10'].apply(list)[3000]\n\nr4a = s4.groupby('id')['deg_Mg_pH10'].apply(list)[0]\nr4b = s4.groupby('id')['deg_Mg_pH10'].apply(list)[1000]\nr4c = s4.groupby('id')['deg_Mg_pH10'].apply(list)[2000]\nr4d = s4.groupby('id')['deg_Mg_pH10'].apply(list)[3000]\n\nfig, axes = plt.subplots(nrows=4, ncols=4, figsize=(21,15), sharex=True, sharey=True)\nfig.suptitle('deg_Mg_pH10', fontsize=24, color='blue')\nviz = [r1a, r1b, r1c, r1d, r2a, r2b, r2c,r2d, r3a, r3b,r3c,r3d,r4a,r4b,r4c,r4d]\ntits = ['k1a', 'k1b', 'k1c', 'k1d', 'k2a', 'k2b', 'k2c','k2d', 'k3a', 'k3b','k3c','k3d','k4a','k4b','k4c','k4d']\nfor i, ax in enumerate(axes.flatten()):\n    ax.plot(viz[i])\n    ax.set_title(tits[i], color='blue', fontsize=20)\n    ax.axvline(x=68, color='red')\n    ax.axvline(x=91, color='blue')\n    ax.axvline(x=107, color='green')\nplt.show()","17e717d2":"r1a = s1.groupby('id')['deg_Mg_50C'].apply(list)[0]\nr1b = s1.groupby('id')['deg_Mg_50C'].apply(list)[1000]\nr1c = s1.groupby('id')['deg_Mg_50C'].apply(list)[2000]\nr1d = s1.groupby('id')['deg_Mg_50C'].apply(list)[3000]\n\nr2a = s2.groupby('id')['deg_Mg_50C'].apply(list)[0]\nr2b = s2.groupby('id')['deg_Mg_50C'].apply(list)[1000]\nr2c = s2.groupby('id')['deg_Mg_50C'].apply(list)[2000]\nr2d = s2.groupby('id')['deg_Mg_50C'].apply(list)[3000]\n\nr3a = s3.groupby('id')['deg_Mg_50C'].apply(list)[0]\nr3b = s3.groupby('id')['deg_Mg_50C'].apply(list)[1000]\nr3c = s3.groupby('id')['deg_Mg_50C'].apply(list)[2000]\nr3d = s3.groupby('id')['deg_Mg_50C'].apply(list)[3000]\n\nr4a = s4.groupby('id')['deg_Mg_50C'].apply(list)[0]\nr4b = s4.groupby('id')['deg_Mg_50C'].apply(list)[1000]\nr4c = s4.groupby('id')['deg_Mg_50C'].apply(list)[2000]\nr4d = s4.groupby('id')['deg_Mg_50C'].apply(list)[3000]\n\nfig, axes = plt.subplots(nrows=4, ncols=4, figsize=(21,15), sharex=True, sharey=True)\nfig.suptitle('deg_Mg_50C', fontsize=24, color='blue')\nviz = [r1a, r1b, r1c, r1d, r2a, r2b, r2c,r2d, r3a, r3b,r3c,r3d,r4a,r4b,r4c,r4d]\ntits = ['k1a', 'k1b', 'k1c', 'k1d', 'k2a', 'k2b', 'k2c','k2d', 'k3a', 'k3b','k3c','k3d','k4a','k4b','k4c','k4d']\nfor i, ax in enumerate(axes.flatten()):\n    ax.plot(viz[i])\n    ax.set_title(tits[i], color='blue', fontsize=20)\n    ax.axvline(x=68, color='red')\n    ax.axvline(x=91, color='blue')\n    ax.axvline(x=107, color='green')\nplt.show()","ac477047":"# Visualize predictions of popular kernels","171638e8":"- K1: https:\/\/www.kaggle.com\/mrkmakr\/covid-ae-pretrain-gnn-attn-cnn\/\n- K2: https:\/\/www.kaggle.com\/its7171\/gru-lstm-with-feature-engineering-and-augmentation\n- K3: https:\/\/www.kaggle.com\/symyksr\/openvaccine-deepergcn\n- K4: https:\/\/www.kaggle.com\/thedrcat\/openvaccine-lstm-fastai"}}