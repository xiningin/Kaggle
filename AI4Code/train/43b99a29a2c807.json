{"cell_type":{"e6b0fdf4":"code","ee09d44a":"code","38971b8b":"code","080d522b":"code","b1a0c44d":"code","a85bd114":"code","f7354841":"code","0c94bc1f":"code","adb1a562":"code","c71ef063":"code","383eddc1":"markdown","d2fe87e5":"markdown","bf2dbfc9":"markdown","e0f1b179":"markdown"},"source":{"e6b0fdf4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee09d44a":"import pandas as pd\nimport glob\n\npath = r'..\/input\/brazil-fire-points\/BRAZIL_FIRE_POINTS' \nall_files = glob.glob(path + \"\/*.csv\") #array with all csv files\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    li.append(df)\n\nframe = pd.concat(li, axis=0, ignore_index=True)","38971b8b":"list(frame.columns.values)","080d522b":"frame.shape","b1a0c44d":"frame['aaaa'] = frame['datahora'].str.slice(0, 4)\nframe['mm'] = frame['datahora'].str.slice(5, 7)\n\nframe","a85bd114":"frame.to_csv('.\/firepoints.csv')","f7354841":"listaestados=[]\nfor linha in frame['estado']:\n    if [linha] not in listaestados:\n        listaestados.append([linha])\nlista = frame.values.tolist()\nlista\n","0c94bc1f":"dt=[]\nfor mes in range(1,13):\n    for estado in listaestados:\n        for ano in range (2018,2020): #change as your selection\n            soma = 0 #number of fire points per state per month per year\n        \n            for item in lista:            \n                if (item[3]==estado[0]) and (int(item[13])==mes and (int(item[12])==ano)):\n                    soma = soma + 1\n            dt.append([estado[0], ano, mes, soma])\n\ndf=pd.DataFrame(dt)\ndf\n","adb1a562":"df.columns = ['estado', 'ano','mes','count']\ndf","c71ef063":"df.to_csv('processed_fire-dataset.csv')","383eddc1":"* **Merge data**","d2fe87e5":"**Count fire points by Year, Month and State**","bf2dbfc9":"**CALCULATE the monthly average by Month and State**","e0f1b179":"**Create YEAR aaaa and MONTH mm columns**"}}