{"cell_type":{"1a87903b":"code","4edf9e1c":"code","25dfe269":"code","4d1bafca":"code","539a155a":"code","b930cd56":"code","abd310af":"code","8f7aef41":"code","e1a00b85":"code","f836f2f1":"code","a420ec1f":"markdown","56d42141":"markdown","54d88465":"markdown","dc2ea991":"markdown","b5417fe4":"markdown"},"source":{"1a87903b":"import os\nimport re\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\nimport folium\nfrom folium.plugins import FastMarkerCluster","4edf9e1c":"df = pd.read_csv(\"\/kaggle\/input\/sri-lanka-travel-destination-data\/complete_travel_destination_data.csv\")","25dfe269":"df.head()","4d1bafca":"# check stats of dataset\ndf.describe()","539a155a":"# Checking the null values \ndf.isnull().sum()","b930cd56":"# District with most Destinations to visit\n\ntop_d_type = df[[\"Address\", \"District\"]].groupby(\"District\").agg(['count'])['Address']['count'].sort_values(ascending=False)\nax = sns.barplot( x = top_d_type.index, y = top_d_type.values)\nax.set_xticklabels(labels=top_d_type.index , rotation=45)\nfig = plt.gcf()\nfig.set_size_inches(18.5, 10, forward=True)\nax.set_ylabel(\"Number of Destinations\")\nax.set_xlabel(\"District\")\nax.set_title(\"District with most Destinations to visit\");","abd310af":"# Top 20 AGA Division with most Destinations to visit\n\ntop_d_type = df[[\"Address\", \"AGA Division\"]].groupby(\"AGA Division\").agg(['count'])['Address']['count'].sort_values(ascending=False)[:20]\nax = sns.barplot( x = top_d_type.index, y = top_d_type.values)\nax.set_xticklabels(labels=top_d_type.index , rotation=90)\nfig = plt.gcf()\nfig.set_size_inches(18.5, 10, forward=True)\nax.set_ylabel(\"Number of Destinations\")\nax.set_xlabel(\"AGA Division\")\nax.set_title(\"Top 15 AGA Division with most Destinations to visit\");","8f7aef41":"# Disrtribution of Graded Destinations\ncolors = sns.color_palette('pastel')[0:5]\ndf_grade = df[[\"Address\", \"Grade\"]].groupby(\"Grade\").agg(['count'])['Address']['count']\nplt.pie(df_grade, labels = df_grade.index, colors = colors, autopct='%.0f%%')\nfig = plt.gcf()\nfig.set_size_inches(18.5, 10, forward=True)\nplt.title(\"Distribution of Graded Destinations\")\nplt.show()","e1a00b85":"# Disrtribution of Destination Types\ncolors = sns.color_palette('pastel')[0:5]\ndf_dest = df[[\"Address\", \"Type\"]].groupby(\"Type\").agg(['count'])['Address']['count']\nplt.pie(df_dest, labels = df_dest.index, colors = colors, autopct='%.0f%%')\nfig = plt.gcf()\nfig.set_size_inches(18.5, 10, forward=True)\nplt.title(\"Distribution of Destination Types\")\nplt.show()","f836f2f1":"folium_map = folium.Map(location=[7.8731, 80.7718],\n                        zoom_start=8,\n                        tiles='CartoDB dark_matter')\n\ndf_map = df[df['Lat'].notna() & df['Lon'].notna() ]\n\nFastMarkerCluster(data=list(zip(df_map['Lon'].values, df_map['Lat'].values))).add_to(folium_map)\nfolium.LayerControl().add_to(folium_map)\nfolium_map","a420ec1f":"### EDA","56d42141":"### Import Libraries","54d88465":"### Visualize Destinations on a map","dc2ea991":"### Load the Data","b5417fe4":"### Data Viz"}}