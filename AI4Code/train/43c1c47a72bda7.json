{"cell_type":{"2869c337":"code","1b5977b3":"code","6e3c9c69":"code","b4e53867":"code","055938cd":"code","f7904029":"code","ee417603":"code","4c9d0aa2":"code","4b7e7843":"code","46094ee3":"code","22701c93":"code","8bd4f6a5":"code","459d3928":"code","3fca87e3":"code","ba82326d":"code","ebf63db3":"code","4a400021":"code","610957b6":"code","3b288b05":"code","36846c2d":"code","f88ec1f5":"code","aee4ab93":"code","a3bfe6ec":"code","aada4a7e":"code","133288f9":"code","f20623eb":"code","0409e50c":"code","21ce8b3d":"code","ae308287":"markdown","e3474c0b":"markdown"},"source":{"2869c337":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1b5977b3":"CA=pd.read_json('..\/input\/youtube-new\/CA_category_id.json')\nCA.head(5)","6e3c9c69":"CAV=pd.read_csv('..\/input\/youtube-new\/CAvideos.csv',parse_dates=['trending_date','publish_time'])\nCAV.head(5)","b4e53867":"CAV.info()","055938cd":"print(\"description_null\")\nprint(\"-\"*10)\nprint(CAV['description'].isnull().sum())","f7904029":"CAV.describe()","ee417603":"CAV.tail(3)","4c9d0aa2":"CAV=pd.DataFrame(CAV)\nCAV.head(3)","4b7e7843":"CAV.info()\nCAV.shape","46094ee3":"CAV['video_id']=CAV['video_id'].astype(str)","22701c93":"CAV['description'].value_counts()","8bd4f6a5":"CAV['video_id'].value_counts()","459d3928":"print(CAV['trending_date'],['publish_time'])\n","3fca87e3":"import datetime as dt\nCAV['publish_months']=CAV['publish_time'].dt.year*100+CAV['publish_time'].dt.month\nCAV['publish_months']\nCAV['publish_time']\nCAV['trending_date']","ba82326d":"CAV.info()","ebf63db3":"CAV['publish_months'].astype(float).astype(str)\nCAV['trending_date']=CAV['trending_date'].str.replace('.',\"\")","4a400021":"CAV['trending_date']\n","610957b6":"CAV.head(2)","3b288b05":"Likes=CAV['likes'].sum()\nviews=CAV['views'].sum()\nDislikes=CAV['dislikes'].sum()\nComments=CAV['comment_count'].sum()","36846c2d":"from matplotlib import pyplot as plt\nfig=plt.figure(figsize=(10,5))\nplt.plot(CAV[0:12][\"channel_title\"],CAV[0:12][\"views\"]\/1000,c='red')\nplt.plot(CAV[12:24][\"channel_title\"],CAV[12:24][\"views\"]\/1000,c='blue')\nplt.xticks(rotation=90)\nplt.xlabel(\"Channel Title\")\nplt.ylabel(\"Views\")\nplt.show()","f88ec1f5":"print(\"Canadian Videos Summary\")\nprint(\"Likes       Views     Dislikes      Comments\")\nprint(\"-\"*45)\nprint(Likes,  views,  Dislikes,    Comments )\n","aee4ab93":"fig = plt.figure(figsize=(6,15))\nax1 = fig.add_subplot(4,1,1)\nax2 = fig.add_subplot(4,1,2)\nax3 = fig.add_subplot(4,1,3)\nax4 = fig.add_subplot(4,1,4)\nax1.hist(CAV['views']\/1000,bins=20,range=(0,5))\nax1.set_ylim(0,100)\nax1.set_title(\"views['1000]\")\nax2.hist(CAV['comment_count']\/1000,bins=20,range=(0,5))\nax2.set_ylim(0,10000)\nax2.set_title('Comments[\"1000]')\nax3.hist(CAV['likes']\/1000,bins=20,range=(0,5))\nax3.set_ylim(0,10000)\nax3.set_title(\"Likes['1000]\")\nax4.hist(CAV['dislikes']\/1000,bins=20,range=(0,5))\nax4.set_ylim(0,10000)\nax4.set_title(\"Dislikes['1000]\")\nplt.show()","a3bfe6ec":"fig=plt.figure(figsize=(15,15))\nax1 = fig.add_subplot(4,1,1)\nax2 = fig.add_subplot(4,1,2)\nax3 = fig.add_subplot(4,1,3)\nax4 = fig.add_subplot(4,1,4)\nax1.plot(CAV['publish_time'],CAV[\"views\"]\/1000,c=\"blue\")\nax1.set_title(\"Views By Publish Time\")\nax2.plot(CAV['publish_time'],CAV[\"likes\"]\/1000,c=\"green\")\nax2.set_title(\"Likes By Publish Time\")\nax3.plot(CAV['publish_time'],CAV[\"dislikes\"]\/1000,c=\"red\")\nax3.set_title('Dislikes By Publish Time')\nax4.plot(CAV['publish_time'],CAV[\"comment_count\"]\/1000,c=\"maroon\")\nax4.set_title(\"Comment_Counts By Publish Time\")\nplt.show()","aada4a7e":"fig=plt.figure(figsize=(15,20))\nax1 = fig.add_subplot(4,1,1)\nax2 = fig.add_subplot(4,1,2)\nax3 = fig.add_subplot(4,1,3)\nax4 = fig.add_subplot(4,1,4)\nax1.plot(CAV[0:10]['channel_title'],CAV[0:10][\"views\"]\/1000,c=\"blue\")\nax1.set_title(\"Views By Channel Title\")\nax2.plot(CAV[0:10]['channel_title'],CAV[0:10][\"likes\"]\/1000,c=\"green\")\nax2.set_title(\"Likes By Channel_=Title\")\nax3.plot(CAV[0:10]['channel_title'],CAV[0:10][\"dislikes\"]\/1000,c=\"red\")\nax3.set_title('Dislikes By Channel Title')\nax4.plot(CAV[0:10]['channel_title'],CAV[0:10][\"comment_count\"]\/1000,c=\"maroon\")\nax4.set_title(\"Comment_Counts By Channel Title\")\nplt.show()\n","133288f9":"CAVgroup=CAV.groupby('channel_title')\nBy_Views=CAV.sort_values([\"views\",\"channel_title\"],ascending=False).head(10)\nBy_Likes=CAV.sort_values([\"likes\",\"channel_title\"],ascending=False).head(10)\nBy_Dislikes=CAV.sort_values([\"dislikes\",\"channel_title\"],ascending=False).head(10)\nBy_Comments=CAV.sort_values([\"comment_count\",\"channel_title\"],ascending=False).head(10)\n","f20623eb":"By_Dislikes","0409e50c":"fig=plt.figure(figsize=(15,20))\nax1 = fig.add_subplot(4,1,1)\nax2 = fig.add_subplot(4,1,2)\nax3 = fig.add_subplot(4,1,3)\nax4 = fig.add_subplot(4,1,4)\nax1.plot(By_Views['channel_title'],By_Views['views']\/1000,c=\"blue\")\nax1.set_title(\"Views By Channel Title\")\nax2.plot(By_Likes[\"channel_title\"],By_Likes[\"likes\"]\/1000,c=\"green\")\nax2.set_title(\"Likes By Channel_Title\")\nax3.plot(By_Dislikes[\"channel_title\"],By_Dislikes[\"dislikes\"]\/1000,c=\"red\")\nax3.set_title('Dislikes By Channel Title')\nax4.plot(By_Comments[\"channel_title\"],By_Comments[\"comment_count\"]\/1000,c=\"maroon\")\nax4.set_title(\"Comment_Counts By Channel Title\")\nplt.show()","21ce8b3d":"CAVHV=CAV['views']>1000000\nCAV[CAVHV].plot(kind=\"scatter\",x=\"comment_count\",y=\"views\")\nplt.show()","ae308287":"*Looking at infor and descriptive stat of the data*******","e3474c0b":"**Loading Canadian Videos and parse trending date to date format******"}}