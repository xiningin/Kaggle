{"cell_type":{"4c1ed536":"code","214c9957":"code","ced8ab0a":"code","80e57b4b":"code","e5e96369":"code","390cdd02":"code","1424067e":"code","776d373a":"code","79605de9":"code","6d29ee19":"code","d2a2cb7e":"code","8f0fa9ed":"code","8ab2b425":"code","05e6c954":"code","673eeb5d":"code","ad02b2e0":"code","966643de":"code","40024f4b":"code","a726df8a":"code","ff0c5ce6":"code","82f892a5":"code","4fe3a559":"code","19808bca":"code","ef1f2014":"code","3d113a50":"code","3090a957":"code","4cc89540":"code","cb768587":"markdown","154a3055":"markdown","da12b01a":"markdown","42e7fa2e":"markdown","4136579d":"markdown","f1c801fd":"markdown","04417f5d":"markdown","58d0cfc7":"markdown","ca4ab6c0":"markdown","84fe93a6":"markdown","e19861e1":"markdown","5b7f5fbb":"markdown","4beacd07":"markdown","a33fc592":"markdown","dd605135":"markdown","94a1eec9":"markdown","5f44269b":"markdown","e59fa2fe":"markdown","9bb70316":"markdown","07a4662e":"markdown","9d82362b":"markdown","4891cd12":"markdown","b8199b3c":"markdown","b8eac8b7":"markdown","b7c47b2b":"markdown","f152087e":"markdown","ebf793a9":"markdown","84ad27f6":"markdown"},"source":{"4c1ed536":"import os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import SVC","214c9957":"heart_data = pd.read_csv('..\/input\/heart.csv')\nheart_data.head()","ced8ab0a":"heart_data.isnull().sum().any()","80e57b4b":"heart_data.columns = ['Age', 'Gender', 'ChestPain', 'RestingBloodPressure', 'Cholestrol', 'FastingBloodSugar', 'RestingECG', 'MaxHeartRateAchivied',\n       'ExerciseIndusedAngina', 'Oldpeak', 'Slope', 'MajorVessels', 'Thalassemia', 'Target']","e5e96369":"bg_color = (0.25, 0.25, 0.25)\nsns.set(rc={\"font.style\":\"normal\",\n            \"axes.facecolor\":bg_color,\n            \"figure.facecolor\":bg_color,\n            \"text.color\":\"white\",\n            \"xtick.color\":\"white\",\n            \"ytick.color\":\"white\",\n            \"axes.labelcolor\":\"white\",\n            \"axes.grid\":False,\n            'axes.labelsize':25,\n            'figure.figsize':(10.0,5.0),\n            'xtick.labelsize':15,\n            'ytick.labelsize':10})    ","390cdd02":"plt.figure(figsize=(12,12))\ncorrelation_matrix = heart_data.corr()\n\nax = sns.heatmap(\n    correlation_matrix, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(30, 150, n=500),\n    square=True,\n    annot=True,\n)\n\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n)\nax.set_title(\"Correlation Plot\");","1424067e":"heart_data.nunique()","776d373a":"typical_angina_cp = [k for k in heart_data['ChestPain'] if k ==0]\natypical_angina_cp = [k for k in heart_data['ChestPain'] if k ==1]\nnon_anginal_cp = [k for k in heart_data['ChestPain'] if k ==2]\nnone_cp = [k for k in heart_data['ChestPain'] if k ==3]\n\ntypical_angina_cp_total = len(typical_angina_cp)*100\/len(heart_data)\natypical_angina_cp_total = len(atypical_angina_cp)*100\/len(heart_data)\nnon_anginal_cp_total = len(non_anginal_cp)*100\/len(heart_data)\nnone_cp_total = len(none_cp)*100\/len(heart_data)\n\nlabels=['Typical angina','Atypical angina','Non-anginal','Asymptomatic']\nvalues = [typical_angina_cp_total,atypical_angina_cp_total,non_anginal_cp_total,none_cp_total]\n\nplt.pie(values,labels=labels,autopct='%1.1f%%')\n\nplt.title(\"Chest Pain Type Percentage\")    \nplt.show()","79605de9":"result=[]\nfor k in heart_data['ChestPain']:\n    if k == 0:\n        result.append('Typical Angina')\n    elif k == 1:\n        result.append('Atypical Angina')\n    elif k == 2:\n        result.append('Non-Anginal')\n    elif k == 3:\n        result.append('Asymptomatic')\n\nheart_data['Chest Pain Type'] = result\n\nax = sns.countplot(hue=result,x='Gender',data=heart_data,palette='husl')\n\nplt.title(\"Chest Pain Type Vs Gender\")    \nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\n\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.05, p.get_height()+1))\n\nax.set_xticklabels(['Female','Male']);","6d29ee19":"age = []\nfor i in range(len(heart_data)):    \n    if heart_data['ChestPain'][i] == 0:        \n        age.append(heart_data['Age'][i])    \n\nsns.swarmplot(age)\nplt.title(\"Chest Pain across different Age Groups\")    \nplt.xlabel(\"Age\")\nplt.ylabel(\"\")\nplt.yticks([]);","d2a2cb7e":"heart_health=[]\nfor k in heart_data['Target']:\n    if k == 0:\n        heart_health.append('Healthy Heart')\n    elif k == 1:\n        heart_health.append('Heart Disease')","8f0fa9ed":"ax = sns.countplot(x='Gender',hue=heart_health,data=heart_data,palette='mako_r')\n\nplt.title(\"Heart-Health Vs Gender\")    \nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\n\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.15, p.get_height()+1))\nax.set_xticklabels(['Female','Male']);","8ab2b425":"f = ((heart_data['Gender'] == 0) & (heart_data['Target'] == 1)).sum()\nfd =  (heart_data['Target'] == 1).sum()\nprint('Percent of Female having heart disease : {:.2f}%'.format(f\/fd * 100))\n\nm = ((heart_data['Gender'] == 1) & (heart_data['Target'] == 1)).sum()\nmd =  (heart_data['Target'] == 1).sum()\nprint('Percent of Male having heart disease : {:.2f}%'.format(m\/md * 100))","05e6c954":"plt.title(\"Heart-Health Vs Chest Pain Type\")\n    \nax = sns.countplot(x='Chest Pain Type',hue=heart_health,data=heart_data,palette='Set1')\n\nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.15, p.get_height()+0.5))","673eeb5d":"age_group=[]\nfor k in heart_data['Age']:\n    if (k >=29) & (k<40):\n        age_group.append(0)\n    elif (k >=40)&(k<55):\n        age_group.append(1)\n    else:\n        age_group.append(2)\nheart_data['Age-Group'] = age_group\nplt.title(\"Heart-Health Vs Age group\")\nax = sns.countplot(x=age_group,hue=heart_health,palette='bwr')\n\nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.15, p.get_height()+0.5))\n    \nax.set_xticklabels(['Young (29-40)','Mid-Age(40-55)','Old-Age(>55)']);","ad02b2e0":"y = ((heart_data['Age-Group'] == 0) & (heart_data['Target'] == 1)).sum()\nyd =  (heart_data['Target'] == 1).sum()\nprint('Percent of Youth having heart disease   : {:.2f}%'.format(y\/yd * 100))\n\nm = ((heart_data['Age-Group'] == 1) & (heart_data['Target'] == 1)).sum()\nmd =  (heart_data['Target'] == 1).sum()\nprint('Percent of Mid-Age having heart disease : {:.2f}%'.format(m\/md * 100))\n\no = ((heart_data['Age-Group'] == 2) & (heart_data['Target'] == 1)).sum()\nod =  (heart_data['Target'] == 1).sum()\nprint('Percent of Old-Age having heart disease : {:.2f}%'.format(o\/od * 100))\n","966643de":"ax = sns.countplot(x='FastingBloodSugar',data=heart_data)\nplt.title(\"Fasting Blood Sugar\")\nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\n\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.35, p.get_height()+0.5))\nax.set_xticklabels([\"Fasting Blood Sugar < 120 mg\/dl\",\"Fasting Blood Sugar > 120 mg\/dl\"]);","40024f4b":"serum_chol=[]\nfor k in heart_data['Cholestrol']:\n    if k > 200:\n        serum_chol.append(1) #not healthy\n    else:\n        serum_chol.append(0) #healthy\n\nax = sns.countplot(x=serum_chol,palette='bwr')\n\nplt.title(\"Serum Cholestrol\")\nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\n\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.35, p.get_height()+0.5))\nax.set_xticklabels([\"Serum Cholestrol > 200 mg\/dL\",\"Serum Cholestrol < 200 mg\/dL\"]);","a726df8a":"bp=[]\nfor k in heart_data['RestingBloodPressure']:\n    if (k > 130):\n        bp.append(1) #high bp\n    else:\n        bp.append(0) #normal\n\nax = sns.countplot(x=bp,palette='Set3')\n\nplt.title(\"Resting Blood Pressure Count\")\nplt.ylabel(\"\")\nplt.yticks([])\nplt.xlabel(\"\")\n\nfor p in ax.patches:\n    ax.annotate(p.get_height(), (p.get_x()+0.35, p.get_height()+0.5))\n    \nax.set_xticklabels([\"Normal BP\",\"Abnormal BP\"]);","ff0c5ce6":"(heart_data[\n     (heart_data['Age'] > 40) & \n     (heart_data['ChestPain'] == 0) &\n     (heart_data['Cholestrol'] >=250) &\n     (heart_data['RestingBloodPressure'] > 120) &\n     (heart_data['Thalassemia']==2) &\n     (heart_data['RestingECG']==1) &\n     (heart_data['ExerciseIndusedAngina']==0) &\n    (heart_data['MaxHeartRateAchivied']>100)]\n    )","82f892a5":"X_data = heart_data.drop(columns=['Chest Pain Type','Age-Group','Target'], axis=1)\nY = heart_data['Target']\n\n#normalize the data\nY = ((Y - np.min(Y))\/ (np.max(Y) - np.min(Y))).values\nX = ((X_data - np.min(X_data)) \/ (np.max(X_data) - np.min(X_data))).values\n\nx_train, x_test, y_train, y_test = train_test_split(X,Y,test_size = 0.2,random_state=42)","4fe3a559":"lr = LogisticRegression()\nlr.fit(x_train,y_train)\nlr_pred = lr.predict(x_test)\n\nlr_accuracy = accuracy_score(y_test, lr_pred)\nprint('Logistic Regression Accuracy: {:.2f}%'.format(lr_accuracy*100))\n\ncm = confusion_matrix(y_test,lr_pred)\nsns.heatmap(cm,annot=True);","19808bca":"rfc = RandomForestClassifier(n_estimators = 50, max_depth = 3)\n\nrfc.fit(x_train, y_train)\nrfc_pred = rfc.predict(x_test)\nrfc_accuracy = accuracy_score(y_test, rfc_pred)\n \nprint('Random Forest Classifier Accuracy: {:.2f}%'.format(rfc_accuracy*100))\ncm = confusion_matrix(y_test,rfc_pred)\nsns.heatmap(cm,annot=True);","ef1f2014":"knn = KNeighborsClassifier(n_neighbors = 4)  # n_neighbors means k\nknn.fit(x_train, y_train)\nknn_pred = knn.predict(x_test)\nknn_accuracy = accuracy_score(y_test, knn_pred)\nprint('KNeighborsClassifier Accuracy: {:.2f}%'.format(knn_accuracy*100))\n\ncm = confusion_matrix(y_test,knn_pred)\nsns.heatmap(cm,annot=True);","3d113a50":"svm = SVC(random_state = 1)\nsvm.fit(x_train, y_train)\nsvm_pred = svm.predict(x_test)\nsvm_accuracy = accuracy_score(y_test, svm_pred)\n\nprint('SVM Accuracy: {:.2f}%'.format(svm_accuracy*100))\n\ncm = confusion_matrix(y_test,svm_pred)\nsns.heatmap(cm,annot=True);","3090a957":"nb = GaussianNB()\nnb.fit(x_train, y_train)\nnb_pred = nb.predict(x_test)\nnb_accuracy = accuracy_score(y_test, nb_pred)\n\nprint('Naive Bayes Accuracy: {:.2f}%'.format(nb_accuracy*100))\ncm = confusion_matrix(y_test,nb_pred)\nsns.heatmap(cm,annot=True);","4cc89540":"models = ['Logistic Regression','KNeighborsClassifier','Random Forest Classifier','Naive Bayes','SVM']\naccuracy = [lr_accuracy,knn_accuracy,rfc_accuracy,nb_accuracy,svm_accuracy]\n\nax = sns.barplot(models,accuracy)\n\nplt.title(\"Accuracy of differet models\")\n\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right');","cb768587":"**Reading and printing first few rows of the data**","154a3055":"**Prediction**","da12b01a":"**Heart-Health Vs Age group**","42e7fa2e":"**Support Vector Machine **","4136579d":"**K Neighbors Classifier**","f1c801fd":"**Correlation Plot of all the data**","04417f5d":"**People with high risk of a heart disease**\n","58d0cfc7":"**Serum Cholestrol**","ca4ab6c0":"**Percentage of Heart Problem in Male and Female**","84fe93a6":"**Percent of different Age Group having heart disease**","e19861e1":"**Resting Blood Pressure **","5b7f5fbb":"**Unique Values in each column**","4beacd07":"**Logistic Regression**","a33fc592":"**Healthy Heart or Heart Disease**","dd605135":"**Different types of Chest Pain**","94a1eec9":"**Renaming the columns for better understanding**","5f44269b":"![](https:\/\/cdn.pixabay.com\/photo\/2016\/04\/28\/00\/24\/heart-1357923_960_720.png)","e59fa2fe":"\n**DATASET COLUMNS FEATURE EXPLAIN**\n\n1. Age (In years)\n \n2. Sex\n    1 - Male\n    0 - Female\n\n3. CP (Chest Pain Type)\u00a0\n    0 - Typical Angina (Heart related)\n    1 -\u00a0Atypical Angina (Non-heart related)\n    2 -\u00a0Non-Anginal pain (Non-heart related)\n    3 -\u00a0Asymptomatic (No disease)\n\n4. TRESTBPS (Resting Blood Pressure (in mm Hg on admission to the hospital)) \n\n5. CHOL (Serum Cholestoral in mg\/dl)\n     Healthy serum cholesterol is less than 200 mg\/dL\n\n6. FPS (Fasting blood sugar > 120 mg\/dl)\n     1 - True\n     0 - False\n\n7. RESTECH (Resting Electro Cardio Graphic results)\n \n8. THALACH (Maximum heart rate achieved)\n \n9. EXANG (Exercise induced Angina)\n     1 - Yes\n     0 - No\n\n10. OLDPEAK (ST depression induced by exercise relative to rest)\n \n11. SLOPE (Slope of the peak exercise ST segment)\n \n12. CA (Number of major vessels (0-3) colored by Flouroscopy)\n \n13. THAL\n     0 - Normal\n     1 - Fixed defect\n     2 - Reversible defect\n \n14. TARGET\n     1 - Heart Problem\n     0 - No Heart Problem ","9bb70316":"**Heart Attacks in Male and Female**","07a4662e":"**Naive Bayes**","9d82362b":"**Setting up the SeaBorn P[](http:\/\/)lot**","4891cd12":"**Random Forest Classifier**","b8199b3c":"**Check for Null values**","b8eac8b7":"**Chest Pain Types in different Gender**","b7c47b2b":"**Chest Pain across different Age Groups**","f152087e":"**Importing requires libraries**","ebf793a9":"**Fasting Blood Sugar**","84ad27f6":"**Heart-Health Vs Chest Pain Type**"}}