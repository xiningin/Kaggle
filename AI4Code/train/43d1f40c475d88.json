{"cell_type":{"90cd8e8a":"code","3fc0360f":"code","64d8f117":"code","daaba1e5":"code","2a631397":"code","e1f87ff2":"code","942b63d6":"code","3f3a8c0c":"code","b79c7eb3":"markdown","1a61f2b7":"markdown","4dcb0c70":"markdown","5d5922b7":"markdown"},"source":{"90cd8e8a":"import pandas as pd\n","3fc0360f":"test_ids_df = pd.read_csv(\"\/content\/FIFA_test.csv\")\nid_val_df = pd.read_csv(\"\/content\/fifa_outputs_working_well_v2.csv\", index_col='player_ids', usecols=['player_ids', 'value'])\n","64d8f117":"test_ids_list = []\nfor i in range(len(test_ids_df)):\n    str_list = test_ids_df.loc[i, 'player_ids']\n    list_ids_temp = str_list.split(', ')\n    list_ids = []\n    for num in list_ids_temp:\n        list_ids.append(int(num.strip('[').strip(']')))\n    test_ids_list.append(list_ids)","daaba1e5":"max_j = 0\nequal = 0\nmax_corr = 0\nave_corr = 0\nthresh = 0.01      # 1 percent difference.\n\nmax_ids_list = []\nfor i in range(len(test_ids_list)):\n    curr_ids = test_ids_list[i].copy()\n    curr_vals = []\n    curr_ave_vals = []\n    curr_sec_vals = []\n    for id in curr_ids:\n        j = 0\n        val_total = 0\n        max_val_id = 0\n        \n        while True:\n            try:\n                if float(id_val_df.loc[f'{id}_{j}', 'value']) > max_val_id:\n                    max_val_id = float(id_val_df.loc[f'{id}_{j}', 'value'])\n                    \n                val_total += float(id_val_df.loc[f'{id}_{j}', 'value'])\n                    \n                \n            except KeyError:\n                curr_vals.append(max_val_id)\n                curr_sec_vals.append(year)\n                curr_ave_vals.append(val_total\/j)\n                if j > max_j:\n                    max_j = j\n                break\n            j += 1\n    max_val = 0\n    max_id = 0\n    max_ave_val = 0\n    curr_done = \"\"\n    for k in range(len(curr_ids)):\n        if curr_vals[k] > max_val and abs(curr_vals[k] - max_val)\/max_val > thresh:\n            max_val = curr_vals[k]\n            sec_max_val = curr_sec_vals[k]\n            max_id = curr_ids[k]\n            max_ave_val = curr_ave_vals[k]\n            curr_done = \"max\"\n        elif abs(curr_vals[k] - max_val)\/max_val <= thresh:\n            if curr_ave_vals[k] > max_ave_val:\n                max_val = curr_vals[k]\n                sec_max_val = curr_sec_vals[k]\n                max_id = curr_ids[k]\n                max_ave_val = curr_ave_vals[k]\n                curr_done = \"ave\"\n            elif curr_ave_vals[k] == max_ave_val:                \n                curr_done = \"equal\"\n                print(max_id)\n                print(curr_ids[k])\n                print(\"\\n\\n\")\n    if curr_done == \"max\":\n        max_corr += 1\n    elif curr_done == \"ave\":\n        ave_corr += 1\n    else:\n        equal += 1\n\n    max_ids_list.append(max_id)\nprint(max_j, equal)\nprint(max_corr, ave_corr)","2a631397":"len(max_ids_list)","e1f87ff2":"outputs_dict = {\"player_ids\": test_ids_list,\n                \"most_valued_player_id\": max_ids_list}","942b63d6":"outputs_df = pd.DataFrame(outputs_dict)\noutputs_df.head()","3f3a8c0c":"outputs_df.to_csv('fifa_outputs_v16_max_total.csv')","b79c7eb3":"##Saving the outputs","1a61f2b7":"##Loading the Data and Import Modules","4dcb0c70":"The trained model has predicted the values for the CSV file. The model training is in the previous notebook.","5d5922b7":"##Getting the Outputs"}}