{"cell_type":{"87892242":"code","45e2a947":"code","c4ea2038":"code","b02f3845":"code","5a2a438e":"code","ec9d7a34":"code","cc59b44c":"code","75d69094":"code","722e2f61":"code","0f53dc66":"code","bca28871":"code","42c6220a":"code","cf41d7a0":"code","5139207c":"code","eef956da":"code","7f9a19c2":"markdown","05398f01":"markdown","ac92eefa":"markdown"},"source":{"87892242":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","45e2a947":"data=pd.read_csv(\"..\/input\/column_2C_weka.csv\")","c4ea2038":"data.head()","b02f3845":"A=data[data.iloc[:,-1]==\"Abnormal\"]\nN=data[data.iloc[:,-1]==\"Normal\"]","5a2a438e":"A.info()","ec9d7a34":"plt.scatter(A.lumbar_lordosis_angle,A.sacral_slope,color=\"red\",label=\"Anormal\")\nplt.scatter(N.lumbar_lordosis_angle,N.sacral_slope,color=\"green\",label=\"Normal\")\nplt.xlabel(\"lumbar_lordosis_angle\")\nplt.ylabel(\"sacral_slope\")\nplt.show()","cc59b44c":"data[\"class\"]=[1 if each ==\"Abnormal\" else 0 for each in data.iloc[:,-1]]\n\ny=data[\"class\"].values\nx_data=data.drop([\"class\"],axis=1)","75d69094":"y","722e2f61":"#Normalization\nx=(x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data)).values","0f53dc66":"#Split \n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=29)","bca28871":"#KNN Model\nfrom sklearn.neighbors import KNeighborsClassifier\nKNN=KNeighborsClassifier(n_neighbors=14)\nKNN.fit(x_train,y_train)\nprediction=KNN.predict(x_test)","42c6220a":"prediction","cf41d7a0":"#KNN SCORE PR\u0130NT\nprint(\"{} KNN Score: {}\".format(14,KNN.score(x_test,y_test))) ","5139207c":"#MAX Knn Result Search\nscore_list=[]\n\nfor each in range(1,15):\n    knn2=KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n\nplt.plot(range(1,15),score_list)\nplt.show()","eef956da":"## RESULT\n# 14 K good result","7f9a19c2":"# Data import","05398f01":"**Random Scatter **","ac92eefa":"**KNN  **"}}