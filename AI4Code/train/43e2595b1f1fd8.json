{"cell_type":{"6c737e40":"code","b1d5d8f6":"code","ded4d104":"code","fbe0f075":"code","ea7ba85b":"code","9db988b9":"code","b16d1efc":"code","9a298d24":"code","0572d0c9":"code","26112d4b":"code","01f28fe4":"code","0ce9d1db":"code","6a2cd9e4":"code","ae955e11":"code","c34507c3":"code","64b9578a":"code","c02e34af":"code","1c08573f":"code","259a6dfa":"code","d39476a1":"code","5dc9ff7d":"code","69ba85f8":"code","0d58b000":"code","b41b99a4":"code","782a7b02":"code","c16c5bdd":"code","354c69ca":"code","b4402a93":"markdown","c1ed890f":"markdown","b4233b34":"markdown","6c0a4e75":"markdown","e1977f92":"markdown","ce93ccfe":"markdown","b63d28e9":"markdown","f2a43cfa":"markdown","94bfed31":"markdown","e610a11d":"markdown"},"source":{"6c737e40":"from fastai import *\nfrom fastai.vision import *\nfrom tqdm import tqdm_notebook as tqdm\n\nimport random\nimport numpy as np\nimport keras\nfrom random import shuffle\nfrom keras.utils import np_utils\nfrom shutil import unpack_archive\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))","b1d5d8f6":"!pip install imutils","ded4d104":"import os\npath=\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\"\nlabels = os.listdir(\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\")\nprint(\"No. of labels: {}\".format(len(labels)))\nprint(\"-----------------\")\nfor label in labels:\n    print(\"{}, {} files\".format(label, len(os.listdir(\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\"+label))))","fbe0f075":"# import numpy as np\n# import matplotlib.pyplot as plt\n# from PIL import Image\n\n# fig, ax = plt.subplots(nrows=2, ncols=10)\n# fig.tight_layout()\n# cnt = 0\n# for row in ax:\n#     for col in row:\n#         image_name = np.random.choice(os.listdir(path + labels[cnt]))\n#         im = Image.open(path+\"{}\/{}\".format(labels[cnt],image_name))\n#         col.imshow(im)\n#         col.set_title(labels[cnt])\n#         col.axis('off')\n#         cnt += 1\n# plt.show()","ea7ba85b":"size = 224\nbs = 64\npath=\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\"\ndata = ImageDataBunch.from_folder(path, \n                                  ds_tfms=get_transforms(do_flip=True, flip_vert=False),\n                                  valid_pct=0.2, \n                                  size=size, \n                                  num_workers=4,\n                                  bs=bs)\ndata\ndata.normalize(imagenet_stats)","9db988b9":"# import glob\n# path=\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\"\n# np.random.seed(42)\n# data = ImageDataBunch.from_folder(path, train='.', valid_pct=0.2,\n#                                   ds_tfms=get_transforms(), size=224, num_workers=4).normalize(imagenet_stats)\n# data","b16d1efc":"data.show_batch(rows=20, figsize=(15,15))","9a298d24":"from fastai.metrics import error_rate \n\nthresh=0.2\nlearn = cnn_learner(data, models.vgg16_bn , metrics=[accuracy, error_rate])","0572d0c9":"learn.model_dir=\"\/kaggle\/working\/models\"","26112d4b":"learn.lr_find()\nlearn.recorder.plot()","01f28fe4":"#learn.fit_one_cycle(6, max_lr=slice(1e-05, 1e-04))\nlearn.fit_one_cycle(6,1e-2)\nlearn.save('Sign-detection-stage-2')","0ce9d1db":"learn.validate()\nlearn.show_results(ds_type=DatasetType.Train, rows=3, figsize=(20,20))","6a2cd9e4":"interp = ClassificationInterpretation.from_learner(learn)","ae955e11":"interp.plot_top_losses(9, figsize=(15,15))","c34507c3":"from fastai.vision import *\nfrom fastai.metrics import accuracy\nlearner = create_cnn(data, models.resnet18, metrics=[accuracy], callback_fns=ShowGraph)","64b9578a":"learner.model_dir='\/kaggle\/working\/'\nlearner.lr_find()\nlearner.recorder.plot()","c02e34af":"learner.fit_one_cycle(8, max_lr=slice(1e-4, 1e-3))","1c08573f":"interpreter = ClassificationInterpretation.from_learner(learner)\ninterpreter.most_confused(min_val=2)","259a6dfa":"learner.save(\"stage-1\")\n#learner.load(\u2018stage-1\u2019)\nlearner.unfreeze()\nlearner.fit_one_cycle(12, max_lr=slice(1e-6, 1e-7))","d39476a1":"from fastai.widgets import *\n\nds, idxs = DatasetFormatter().from_toplosses(learner)\nImageCleaner(ds, idxs, \"\/kaggle\/working\/\")","5dc9ff7d":"interpreter.plot_top_losses(9, figsize=(15,15))","69ba85f8":"from fastai.widgets import *\nds, idxs = DatasetFormatter().from_similars(learner, layer_ls=[0,7,1], pool=None)","0d58b000":"# # ImageCleaner(ds, idxs, '\/kaggle\/working\/')\n# most_unsure = DatasetFormatter.from_most_unsure(learner)\n# wgt = PredictionsCorrector(*most_unsure)\n","b41b99a4":"# wgt.show_corrections(ncols=6, figsize=(9, 7))","782a7b02":"interpreter.plot_confusion_matrix()","c16c5bdd":"# learner.load(\u2018stage-1\u2019)","354c69ca":"# from keras.preprocessing.image import ImageDataGenerator\n# train_data_dir=\"\/kaggle\/input\/indian-sign-language\/ISL\/Train\/\"\n# img_height=img_width= 224\n# batch_size =50\n\n# train_datagen = ImageDataGenerator(rescale=1.\/255,\n#     rotation_range=60,\n#     shear_range=0.2,\n#     zoom_range=0.2,\n#     horizontal_flip=True,\n#     validation_split=0.2) # set validation split\n\n# train_generator = train_datagen.flow_from_directory(\n#     train_data_dir,\n#     target_size=(img_height, img_height),\n#     batch_size=batch_size,\n#     class_mode='binary',\n#     subset='training') # set as training data\n\n# validation_generator = train_datagen.flow_from_directory(\n#     train_data_dir, # same directory as training data\n#     target_size=(img_height, img_width),\n#     batch_size=batch_size,\n#     class_mode='binary',\n#     subset='validation') # set as validation data\n\n# model.fit_generator(\n#     train_generator,\n#     steps_per_epoch = train_generator.samples \/\/ batch_size,\n#     validation_data = validation_generator, \n#     validation_steps = validation_generator.samples \/\/ batch_size,\n#     epochs = nb_epochs)","b4402a93":"## First fit and evaluation","c1ed890f":"# Creating a ResNET CNN","b4233b34":"### Checking the number of folders","6c0a4e75":"## Converting to a data bunch","e1977f92":"# ISL Classification using FastAI","ce93ccfe":"## Creating a VGG16","b63d28e9":"# Image Cleaning","f2a43cfa":"## Finding the learning rate","94bfed31":"Saving the model","e610a11d":"## Checking the error-prone zone"}}