{"cell_type":{"967a624f":"code","bfb62e02":"code","7c0fea82":"code","b9d05061":"code","21286858":"code","3f370295":"code","6ae8dff8":"markdown","1f04c947":"markdown","4005ec6f":"markdown","08b00c38":"markdown","b064211a":"markdown","5cd62a89":"markdown","e6f5468f":"markdown","07004c7f":"markdown"},"source":{"967a624f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom PIL import Image\nimport imagehash","bfb62e02":"train = pd.read_csv('\/kaggle\/input\/shopee-product-matching\/train.csv')\ntrain.head()\n","7c0fea82":"path  = '\/kaggle\/input\/shopee-product-matching\/train_images\/'\nsrc = path+train.iloc[0].image\ntrain_hash = train.iloc[0].image_phash\n\naverage_hash = imagehash.average_hash(Image.open(src))\n\nprint('train_hash:\\t',train_hash)\nprint('average_hash:\\t',average_hash)","b9d05061":"p_hash = imagehash.phash(Image.open(src))\nprint('phash:\\t\\t',p_hash)\nprint('train_hash:\\t',train_hash)\nprint('average_hash:\\t',average_hash)","21286858":"d_hash = imagehash.dhash(Image.open(src))\nprint('dhash:\\t\\t',d_hash)\nprint('phash:\\t\\t',p_hash)\nprint('train_hash:\\t',train_hash)\nprint('average_hash:\\t',average_hash)","3f370295":"w_hash = imagehash.whash(Image.open(src))\nprint('whash:\\t\\t',w_hash)\nprint('dhash:\\t\\t',d_hash)\nprint('phash:\\t\\t',p_hash)\nprint('train_hash:\\t',train_hash)\nprint('average_hash:\\t',average_hash)","6ae8dff8":"* average hashing (aHash)\n* perception hashing (pHash)\n* difference hashing (dHash)\n* wavelet hashing (wHash)","1f04c947":"### perception hashing ([pHash](https:\/\/fullstackml.com\/wavelet-image-hash-in-python-3504fdd282b5))\nperceptive hash, does the same as aHash, but first it does a Discrete Cosine Transformation and works in the frequency domain.\n","4005ec6f":"### difference hashing (dHash)\ngradient hash, calculate the difference for each of the pixel and compares the difference with the average differences.\n![](https:\/\/miro.medium.com\/fit\/c\/184\/184\/1*8oFOoawtCHeglebMnN9ryA.png)","08b00c38":"# Determine whether 2 images are equal or not\n\nThe pHash (perceptual hash) is a generated hash that is produced by a special algorithm.\n\n<img src='https:\/\/miro.medium.com\/max\/1440\/1*_RT4M10OFKqmA8XYavEN3Q.png' style='width:300px;' \/>\n","b064211a":"### wavelet hashing (wHash)\nwavelet hashing, that I added to the library a couple days back. It works in the frequency domain as pHash but it uses DWT instead of DCT.\n![](https:\/\/www.researchgate.net\/profile\/Mariusz_Jakubowski\/publication\/224067859\/figure\/fig1\/AS:375162487754761@1466457115717\/Random-tiling-of-Lenas-coarse-subband-in-a-threelevel-wavelet-decomposition-using-Haar.png\/)\nrefer: https:\/\/fullstackml.com\/wavelet-image-hash-in-python-3504fdd282b5","5cd62a89":"**This hash is a fingerprint, which can be used to compare images by calculating the Hamming distance.**\n\n<img src='https:\/\/lh3.googleusercontent.com\/proxy\/uBDHlo_Itx9EoM97qU2ifhWMH4ovCBSAHk4d8O98ry_2-R8YuBNDSgrz0Qvt2_0oHuSRdRe98Wr2tfN77el0CopNW8WxDbnzWqj6aRqe3f-QEZPjdTmNuXB-6Yg' style='width:300px;' \/>\n\nThat is the number of different individual bits. \n<br\/>\nIf you use another hash technique to compare images, you will get a smaller change in the image.","e6f5468f":"### [average hashing (aHash)](http:\/\/www.hackerfactor.com\/blog\/index.php?\/archives\/432-Looks-Like-It.html)\naverage hash, for each of the pixels output 1 if the pixel is bigger or equal to the average and 0 otherwise.","07004c7f":"Refer: [phash.org](https:\/\/www.phash.org\/)"}}