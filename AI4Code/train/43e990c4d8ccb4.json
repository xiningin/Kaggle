{"cell_type":{"7fec7e33":"code","aa4ecb0f":"code","f744e051":"code","d60b1ab2":"code","f620f18f":"code","014cc768":"code","714d1be4":"code","926be547":"code","8960f46c":"code","7a433ce9":"code","e930d73a":"code","22419f1d":"code","278f3227":"code","c0d3735b":"code","aed07e52":"code","6912e5c8":"code","6d48a9c2":"markdown","ae33c0b9":"markdown","86e3cfa1":"markdown","64562a3b":"markdown","c3c16012":"markdown","3d3b9108":"markdown","824b97ea":"markdown"},"source":{"7fec7e33":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa4ecb0f":"# Input\ndf = pd.read_csv('..\/input\/asian-countries-by-population\/AsiaPopulation2020.csv')\ndf.head()","f744e051":"!pip install chart_studio","d60b1ab2":"import chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot\ninit_notebook_mode(connected = True)\nimport pandas as pd","f620f18f":"plt.figure(figsize = (10,7))\nimport seaborn as sns\nsns.heatmap(df.isna())","014cc768":"df[df['UrbanPop'].isna()]","714d1be4":"# Since only 4 values were missing in given data, I researched for them manually\ndf.iloc[11, 9] = 7707400 #HongKong\ndf.iloc[20, 9] = 4207083 #Kuwait\ndf.iloc[24, 9] = 670445 #Macao\ndf.iloc[36, 9] = 5703569 #Singapore","926be547":"import pycountry\ndef return_code(country_name):\n    '''Return country code for any country'''\n    details = pycountry.countries.get(name=country_name)\n    if(details):\n        return(details.alpha_2)\n    return np.NaN\n\ndf['Country_Code'] = df['Country'].apply(return_code)","8960f46c":"data = dict(type = 'choropleth',\n            locations = df['Country'],\n            locationmode = 'country names',\n            colorscale = 'ice',\n            text = df['Country'],\n            z = df['Population'],\n            colorbar = {'title': 'Population'})","7a433ce9":"layout = dict(geo ={'scope': 'asia'})\n# passing data dictionary as a list \nchoromap = go.Figure(data = [data], layout = layout)\n  \n# plotting graph\niplot(choromap)","e930d73a":"# Most populous countries\nplt.figure(figsize = (10, 5))\nsns.barplot(x = 'Country', y = 'Population', data = df.sort_values(by='Population', ascending=False).head(5))","22419f1d":"fig = px.bar(\n    df.reset_index(), x=\"Country\", y=\"YearlyChange\", title=\"Yearly Change in Population\"\n)\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","278f3227":"fig = px.line(\n    df.reset_index(), x=\"Country\", y=\"NetChange\", title=\"Net Change in Population\"\n)\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","c0d3735b":"fig = px.bar(\n    df.sort_values(by = 'MedAge', ascending=False), x=\"Country\", y=\"MedAge\", title=\"Median age of people\"\n)\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","aed07e52":"df_land_share = df[['Country', 'LandArea']].sort_values(by = 'LandArea', ascending=False)[:25]\nothers_land_area = df[['LandArea']].sort_values(by = 'LandArea', ascending=False)[25:].sum()['LandArea']\ndf_land_share = df_land_share.append({'Country':'Others', 'LandArea':others_land_area}, ignore_index=True)\nfig = px.pie(\n    df_land_share, names=\"Country\", values=\"LandArea\", title=\"Land Density (Others = 3.93%)\"\n)\nfig.show()","6912e5c8":"asia_share = df['WorldShare'].sum()\nfig = px.pie(\n    df, names=['World', 'Asia'], values=[100-asia_share,asia_share], title=\"Asia's population share in the world\"\n)\nfig.show()","6d48a9c2":"### I am new to DataScience and am learning things. Please review if you want :)","ae33c0b9":"## Start geographic plotting","86e3cfa1":"## Input the data","64562a3b":"## Adding Country codes for easy work with plotly","c3c16012":"## Dealing with missing values","3d3b9108":"## Import viz. libraries","824b97ea":"## Check for missing values"}}