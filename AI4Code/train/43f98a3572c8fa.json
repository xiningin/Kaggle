{"cell_type":{"9cb0f479":"code","fc6dd7b9":"code","3f3759eb":"code","15782b40":"code","6957c85d":"code","1b8f4907":"code","cdd847f0":"code","a4b26e78":"code","c27ce3ab":"code","844c4ca7":"code","61a4dd47":"code","e8c222af":"code","c5bf2bd7":"code","e5512006":"code","4e9d9ee8":"code","dd05ef71":"code","7920b780":"code","87358df6":"code","f43f12d4":"code","9beec6f9":"code","9b411b8f":"code","fb62bf90":"code","0834196f":"code","327c4101":"code","15217844":"code","e6aaac40":"code","e926ce63":"code","f162cf34":"code","8d712f38":"code","c48d757d":"code","cdae6c0f":"code","99ec74db":"markdown","3c7abe6c":"markdown","d894bfd3":"markdown","a8b31da8":"markdown","d61b2400":"markdown","794aeee8":"markdown","2b4642e8":"markdown","dd03afc5":"markdown","044623af":"markdown","758f5c92":"markdown","059b4318":"markdown","5acba8e7":"markdown","5882fefb":"markdown","040c6a3a":"markdown","3a77da27":"markdown","8c1012c8":"markdown","644f9df8":"markdown"},"source":{"9cb0f479":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import  mean_squared_log_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import  mean_squared_log_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV","fc6dd7b9":"data_train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","3f3759eb":"data_train","15782b40":"data_test = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","6957c85d":"data_test","1b8f4907":"data_all = pd.concat([data_train, data_test],keys=['train','test'])","cdd847f0":"data_all","a4b26e78":"data_all=data_all.drop(['Utilities', 'Street', 'MiscVal', 'Condition2', 'Heating',\n               'LowQualFinSF', 'Electrical',\n               'RoofMatl', 'BldgType', 'PavedDrive',\n               '3SsnPorch', 'LandSlope', 'ExterCond', \n               'Foundation', 'Functional', 'SaleType', 'HouseStyle',\n               'HalfBath', 'PoolArea', 'EnclosedPorch', 'KitchenAbvGr', \n               'HeatingQC', 'RoofStyle', 'Condition1', \n               'LotConfig', 'MasVnrType', 'Exterior2nd', 'BedroomAbvGr', \n               'MSZoning', 'LotShape', 'Exterior1st', \n               'CentralAir', 'LandContour'], axis=1)","c27ce3ab":"data_all['Age']=data_all['YrSold']-data_all['YearBuilt']+1\ndata_all['AgeRemodAdd']=data_all['YrSold']-data_all['YearRemodAdd']+1\ndata_all['AgeGarage']=data_all['YrSold']-data_all['GarageYrBlt']+1\n\ndata_all.drop(columns = 'YearBuilt')\ndata_all.drop(columns = 'YearRemodAdd')\ndata_all.drop(columns = 'GarageYrBlt')","844c4ca7":"for i in ['Alley','PoolQC','Fence','MiscFeature','FireplaceQu']:\n    data_all[i].fillna('None', inplace = True)","61a4dd47":"for i in ('GarageType','GarageFinish','GarageQual','GarageCond'):\n    data_all[i].fillna('None',inplace=True)\n\ndata_all['GarageArea'] = (np.where((data_all['GarageType']=='None'), 0, data_all['GarageArea']))\ndata_all['GarageCars'] = (np.where((data_all['GarageType']=='None'), 0, data_all['GarageCars']))\ndata_all['AgeGarage'] = (np.where((data_all['GarageType']=='None'), 0, data_all['AgeGarage']))","e8c222af":"for i in ('BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2'):\n    data_all[i].fillna('None',inplace=True)\nfor i in ('BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF','TotalBsmtSF', 'BsmtFullBath', 'BsmtHalfBath'):\n    data_all[i] = (np.where((data_all['BsmtQual']=='None'), 0, data_all[i]))","c5bf2bd7":"data_all = pd.get_dummies(data_all)\ndata_all.head()","e5512006":"data_all.isnull().sum()","4e9d9ee8":"sns.heatmap(data_all.isnull(),yticklabels=False,cbar=False,cmap='viridis')","dd05ef71":"for i in data_all:\n    val=data_all[i].isnull().sum()\n    if val > 0:\n        data_all[i].fillna(data_all[i].median(), inplace=True)","7920b780":"data_all.isnull().describe()","87358df6":"sns.heatmap(data_all.isnull(),yticklabels=False,cbar=False,cmap='viridis')","f43f12d4":"data_all","9beec6f9":"l=[]\nfor i in data_all.columns:\n    for j in data_all.columns:\n        if i!=j:\n            if data_all[i].corr(data_all[j])>0.9 or data_all[i].corr(data_all[j])<-0.9:\n                l.append(i)\ndata_all = data_all.drop(l, axis = 1)","9b411b8f":"data_all","fb62bf90":"data_test = data_all.loc['test']\ndata_test = data_test.drop(['SalePrice', 'Id'], axis = 1)\ndata_train = data_all.loc['train']","0834196f":"X = data_train.drop(['SalePrice', 'Id'], axis = 1)\ny = data_train.SalePrice","327c4101":"data_test","15217844":"X","e6aaac40":"y","e926ce63":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\n\n\nrf = RandomForestRegressor()\nparam_grid={'max_depth': range(1, 15), \n            'n_estimators': range(600, 650, 50),\n            'random_state' : [100]}\ngreed_rf = GridSearchCV(rf, param_grid, cv = 5, n_jobs = -1)\n\ngreed_rf.fit(X_train, y_train)\nbest_clf = greed_rf.best_estimator_\n\nbest_clf","f162cf34":"y_pred = best_clf.predict(X_test)\nnp.sqrt(mean_squared_log_error(y_pred, y_test))","8d712f38":"r2_score(y_test, y_pred)","c48d757d":"best_clf.fit(X, y)\npred = best_clf.predict(data_test)","cdae6c0f":"submission = pd.DataFrame({\n        \"Id\": list(range(1461, 1461+len(data_test))),\n        \"SalePrice\": pred\n    })\nsubmission.to_csv('.\/submission.csv', index=False)","99ec74db":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e GridSearchCV \u0432\u044b\u044f\u0441\u043d\u0438\u043c \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430(RandomForestRegressor).","3c7abe6c":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445 'Alley','PoolQC','Fence','MiscFeature','FireplaceQu' \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f NaN \u043d\u0430 'None' \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u0438\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435. ","d894bfd3":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c.","a8b31da8":"\u0423\u0431\u0435\u0440\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0441\u0438\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c.","d61b2400":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435.","794aeee8":"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0432\u0441\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438.","2b4642e8":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.","dd03afc5":"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.","044623af":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043d\u0430\u0448\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438.","758f5c92":"\u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043b\u0443\u0447\u0448\u0443\u044e \u0438\u0437 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","059b4318":"\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","5acba8e7":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445 'GarageType','GarageFinish','GarageQual','GarageCond' \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f NaN \u043d\u0430 'None' \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443 \u043f\u0443\u043d\u043a\u0442\u0443, \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u0435 \u043a \u044d\u0442\u043e\u043c\u0443 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b 'GarageArea', 'GarageCars', 'AgeGarage' \u043e\u0431\u043b\u0430\u0434\u0430\u044f \u043d\u043e\u0432\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445.","5882fefb":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u043b\u043e\u0441\u044c \u043d\u0430 17.","040c6a3a":"\u0423\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u043d\u0430\u0438\u043c\u0435\u043d\u0435\u0435 \u0432\u043b\u0438\u044f\u044e\u0449\u0438\u0435 \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438.","3a77da27":"\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0436\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0435\u0433\u043e \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c.","8c1012c8":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. ","644f9df8":"\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u043e\u0448\u043b\u043e\u043c\u0443 \u043f\u0443\u043d\u043a\u0442\u0443 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438."}}