{"cell_type":{"296b2636":"code","08066996":"code","7c02af89":"code","a3418739":"code","f37cb35a":"code","0e8e70a8":"code","975ddc25":"code","179ae553":"code","f80ac51a":"code","85de6185":"code","04a6614c":"markdown"},"source":{"296b2636":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","08066996":"data=pd.read_csv(\"..\/input\/machinelearning\/Data.csv\")\nX=data.iloc[: , :-1].values\nY=data.iloc[: , 3].values","7c02af89":"data.head()","a3418739":"from sklearn.impute import SimpleImputer","f37cb35a":"imputer=  SimpleImputer(missing_values=np.nan, strategy='mean')\n#imputer =SimpleImputer(missing_values=\"NaN\", strategy=\"mean\", axis=0)\nimputer = imputer.fit(X[:,1:3])\nX[:,1:3]= imputer.transform(X[:,1:3])","0e8e70a8":"from sklearn.preprocessing import LabelEncoder, OneHotEncoder","975ddc25":"label_X=LabelEncoder()  # to convert categorical values into numerical values.\nX[:, 0]=label_X.fit_transform(X[:, 0])\n","179ae553":"from sklearn.compose import ColumnTransformer\n#onehotencoder = OneHotEncoder(categorical_features=[0])\n#x=onehotencoder.fit_transform(X).toarray()\nlabel_Y=LabelEncoder()\ny=label_Y.fit_transform(Y)\n\nct = ColumnTransformer([(\"Country\", OneHotEncoder(), [1])], remainder = 'passthrough')\nX = ct.fit_transform(X)\n\n# Male\/Female\n#labelencoder_X = LabelEncoder()\n#X[:, 2] = labelencoder_X.fit_transform(X[:, 2])","f80ac51a":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split( X , Y , test_size = 0.2, random_state = 0)","85de6185":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler(with_mean=False)\nX_train = ss.fit_transform(X_train)\nX_test = ss.fit_transform(X_test)","04a6614c":"DAY-1 of starting Machine Learning Practically.                   \n\n**Data Preprocessing**"}}