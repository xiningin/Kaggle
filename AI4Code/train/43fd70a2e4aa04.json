{"cell_type":{"6055fda5":"code","fbdbee81":"code","8edadc04":"code","40de9844":"code","ad49a980":"code","0970ae05":"code","c17c98a1":"code","18a08f8e":"code","6595ea27":"code","e09c40a4":"code","364029d4":"code","784ac1b9":"code","19201fff":"markdown","b1c0c730":"markdown","0ee16607":"markdown","df24596c":"markdown","255719dc":"markdown","14d81272":"markdown"},"source":{"6055fda5":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.svm import LinearSVR, SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nfrom catboost import CatBoostRegressor","fbdbee81":"data = pd.read_csv('..\/input\/healthcare-investments-and-length-of-hospital-stay\/Healthcare_Investments_and_Hospital_Stay (1).csv')","8edadc04":"data","40de9844":"data.info()","ad49a980":"data","0970ae05":"def onehot_encode(df, column):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column])\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","c17c98a1":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    # One-hot encode Location column\n    df = onehot_encode(df, column='Location')\n    \n    # Split df into X and y\n    y = df['Hospital_Stay'].copy()\n    X = df.drop('Hospital_Stay', axis=1).copy()\n    \n    # Train-test split\n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)\n    \n    # Scale X with a standard scaler\n    scaler = StandardScaler()\n    scaler.fit(X_train)\n    \n    X_train = pd.DataFrame(scaler.transform(X_train), columns=X.columns)\n    X_test = pd.DataFrame(scaler.transform(X_test), columns=X.columns)\n    \n    return X_train, X_test, y_train, y_test","18a08f8e":"X_train, X_test, y_train, y_test = preprocess_inputs(data)","6595ea27":"X_train","e09c40a4":"y_train","364029d4":"models = {\n    \"                     Linear Regression\": LinearRegression(),\n    \"                   K-Nearest Neighbors\": KNeighborsRegressor(),\n    \"                        Neural Network\": MLPRegressor(),\n    \"Support Vector Machine (Linear Kernel)\": LinearSVR(),\n    \"   Support Vector Machine (RBF Kernel)\": SVR(),\n    \"                         Decision Tree\": DecisionTreeRegressor(),\n    \"                         Random Forest\": RandomForestRegressor(),\n    \"                     Gradient Boosting\": GradientBoostingRegressor(),\n    \"                               XGBoost\": XGBRegressor(),\n    \"                              LightGBM\": LGBMRegressor(),\n    \"                              CatBoost\": CatBoostRegressor(verbose=0)\n}\n\nfor name, model in models.items():\n    model.fit(X_train, y_train)\n    print(name + \" trained.\")","784ac1b9":"for name, model in models.items():\n    print(name + \" R^2 Score: {:.5f}\".format(model.score(X_test, y_test)))","19201fff":"# Results","b1c0c730":"# Training","0ee16607":"# Getting Started","df24596c":"# Preprocessing","255719dc":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/qZ8rFbJ9NDI","14d81272":"# Task for Today  \n\n***\n\n## Hospital Stay Length Prediction  \n\nGiven *medical data about different countries from 1990-2018*, let's try to predict a patient's **average hospital stay**.\n\nWe will use various regression models to make our predictions. "}}