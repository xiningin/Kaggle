{"cell_type":{"655e92c9":"code","6f0733b1":"code","a0e8bc0d":"code","5cc57864":"code","2ea3de7b":"code","468f1f6f":"code","8aff115a":"code","c21e0907":"code","73ce1501":"code","619969cd":"code","18e0d77c":"markdown","eb25982f":"markdown","4dfd63dc":"markdown","94e097f7":"markdown"},"source":{"655e92c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestClassifier\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f0733b1":"train_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data=pd.read_csv('..\/input\/titanic\/test.csv')\ntrain_data.info()\n","a0e8bc0d":"train_data.select_dtypes(include='number').fillna(train_data.mean(),inplace=True)\ntrain_data.fillna(0,inplace=True)\ntest_data.select_dtypes(include='number').fillna(test_data.mean(),inplace=True)\ntest_data.fillna(0,inplace=True)","5cc57864":"train_data.drop(['Cabin','Embarked','Ticket','PassengerId','Name'],axis=1,inplace=True)\ntest1=test_data.drop(['Cabin','Embarked','Ticket','PassengerId','Name'],axis=1)\n","2ea3de7b":"train_data.Sex.replace({'male':1,'female':0},inplace=True)\ntest1.Sex.replace({'male':1,'female':0},inplace=True)","468f1f6f":"from sklearn.model_selection import train_test_split\nx_train=train_data.drop(['Survived'],axis=1)\ny_train=train_data['Survived']\nX,X_test,y,y_test=train_test_split(x_train,y_train,test_size=0.2,stratify=y_train)","8aff115a":"model=RandomForestClassifier()\nmodel.fit(X,y)\n\nprediction=model.predict(X_test)\n","c21e0907":"from sklearn.metrics import accuracy_score\nscore=accuracy_score(y_test,prediction)\nprint(score)","73ce1501":"actual_predict=model.predict(test1)\nprint(len(actual_predict))","619969cd":"sub=pd.DataFrame({'PassengerId':test_data.PassengerId,'Survived':actual_predict})\nsub.count()\nsub.to_csv('submission.csv',index=False)\n","18e0d77c":"# Filling null value","eb25982f":"# Dropping clumns","4dfd63dc":"# Model training","94e097f7":"# Loading training and testing files"}}