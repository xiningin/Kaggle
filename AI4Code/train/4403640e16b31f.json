{"cell_type":{"f8aa090d":"code","ed6d855a":"code","81bad16f":"code","8ddfe3c3":"code","6c7d16cb":"code","f3ccfa49":"code","7a1ff474":"code","9c779243":"code","dbdc3256":"code","6879e711":"code","ad2bbb85":"code","a2671231":"code","181ac23b":"code","9b416237":"code","e547feab":"code","75e029e3":"code","7e2322f5":"code","b7b6e974":"code","12d86b3f":"code","8abe97b2":"code","4326a3b3":"code","74d6a45f":"code","8f1f5536":"code","0e333d1e":"code","2eb10c8d":"code","15038cb9":"code","5262f41a":"code","4566bd60":"code","da60c3e4":"code","31fe7685":"code","f2f3c465":"code","08be0ecb":"code","ba5c4319":"code","dc8c7a8d":"code","f38dc530":"code","d78e680e":"markdown"},"source":{"f8aa090d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ed6d855a":"dados = pd.read_csv(\"..\/input\/data.csv\")\n","81bad16f":"dados.head()","8ddfe3c3":"dados.columns","6c7d16cb":"base_dendro = dados[['Strength','Finishing']].copy()\nbase_dendro.dropna(inplace=True)\nbase_dendro = base_dendro.head(100)\nbase_dendro.head(10)","f3ccfa49":"base_dendro.plot.scatter(x='Strength', y='Finishing')","7a1ff474":"from scipy.cluster.hierarchy import linkage, fcluster # linkage criar matriz de dist\u00e3ncia\n                                                      # fcluster roluta cluster ao dado\n\n","9c779243":"distance_matrix = linkage(base_dendro, \n                                method='single', # como calcular a proximidade dos clusteres\n                                metric='euclidean', # m\u00e9trica de dist\u00e2ncia\n                                optimal_ordering=False) # ordena\u00e7\u00e3o dos data points\n\n","dbdc3256":"base_dendro['cluster'] = fcluster(distance_matrix, # output do m\u00e9todo linkage()\n                                 3, # numero de clusteres\n                                 criterion='maxclust') # o crit\u00e9rio do limiar dos clusteres\n","6879e711":"from scipy.cluster.hierarchy import dendrogram\ndn = dendrogram(distance_matrix) # \u00e9 o resultado da fun\u00e7\u00e3o linkage\nplt.show()","ad2bbb85":"from matplotlib import pyplot as plt\nimport seaborn as sns\n\nsns.scatterplot(x='Strength',\n                y='Finishing',\n                hue='cluster',\n                data=base_dendro,\n                legend=False)\n\nplt.show()","a2671231":"base_dendro.cluster.value_counts()","181ac23b":"base_dendro_b = dados[['Agility','Stamina']].copy()\nbase_dendro_b = base_dendro_b.dropna()\nbase_dendro_b = base_dendro_b.head(100)","9b416237":"base_dendro_b.plot.scatter(x='Agility',y='Stamina')","e547feab":"dendrogram(linkage(base_dendro_b, method='single') )\nplt.show()","75e029e3":"Z = linkage(base_dendro_b, method='single')\nbase_dendro_b['single_cluster_inco'] = fcluster(Z,3,criterion='inconsistent')\nbase_dendro_b['single_cluster_dist'] = fcluster(Z,3,criterion='distance')\nbase_dendro_b['single_cluster_maxc'] = fcluster(Z,3,criterion='maxclust')\n# base_dendro_b['single_cluster_mono'] = fcluster(Z,3,criterion='monocrit')\n# base_dendro_b['single_cluster_max_mono'] = fcluster(Z,3,criterion='maxclust_monocrit')","7e2322f5":"sns.scatterplot(x='Agility',\n                y='Stamina',\n                hue='single_cluster_inco',\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()","b7b6e974":"sns.scatterplot(x='Agility',\n                y='Stamina',\n                hue='single_cluster_dist',\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()","12d86b3f":"tipo = 'single_cluster_maxc'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue='single_cluster_maxc',\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","8abe97b2":"dendrogram(linkage(base_dendro_b, method='complete') )\nplt.show()","4326a3b3":"Z = linkage(base_dendro_b, method='complete')\nbase_dendro_b['complete_cluster_inco'] = fcluster(Z,3,criterion='inconsistent')\nbase_dendro_b['complete_cluster_dist'] = fcluster(Z,3,criterion='distance')\nbase_dendro_b['complete_cluster_maxc'] = fcluster(Z,3,criterion='maxclust')\n#base_dendro_b['complete_cluster_mono'] = fcluster(Z,3,criterion='monocrit')\n#base_dendro_b['complete_cluster_max_mono'] = fcluster(Z,3,criterion='maxclust_monocrit')","74d6a45f":"tipo = 'complete_cluster_inco'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue = tipo,\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","8f1f5536":"tipo = 'complete_cluster_dist'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue='complete_cluster_dist',\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","0e333d1e":"tipo = 'complete_cluster_maxc'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue='complete_cluster_maxc',\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","2eb10c8d":"dendrogram(linkage(base_dendro_b, method='average') )\nplt.show()","15038cb9":"Z = linkage(base_dendro_b, method='average')\nbase_dendro_b['average_cluster_inco'] = fcluster(Z,3,criterion='inconsistent')\nbase_dendro_b['average_cluster_dist'] = fcluster(Z,3,criterion='distance')\nbase_dendro_b['average_cluster_maxc'] = fcluster(Z,3,criterion='maxclust')\n#base_dendro_b['average_cluster_mono'] = fcluster(Z,3,criterion='monocrit')\n#base_dendro_b['average_cluster_max_mono'] = fcluster(Z,3,criterion='maxclust_monocrit')","5262f41a":"tipo = 'average_cluster_inco'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue=tipo,\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","4566bd60":"tipo = 'average_cluster_dist'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue=tipo,\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","da60c3e4":"tipo = 'average_cluster_maxc'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue=tipo,\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","31fe7685":"dendrogram(linkage(base_dendro_b, method='weighted') )\nplt.show()","f2f3c465":"Z = linkage(base_dendro_b, method='weighted')\nbase_dendro_b['weighted_cluster_inco'] = fcluster(Z,3,criterion='inconsistent')\nbase_dendro_b['weighted_cluster_dist'] = fcluster(Z,3,criterion='distance')\nbase_dendro_b['weighted_cluster_maxc'] = fcluster(Z,3,criterion='maxclust')\n#base_dendro_b['weighted_cluster_mono'] = fcluster(Z,3,criterion='monocrit')\n#base_dendro_b['weighted_cluster_max_mono'] = fcluster(Z,3,criterion='maxclust_monocrit')","08be0ecb":"tipo = 'average_cluster_maxc'\nsns.scatterplot(x='Agility',\n                y='Stamina',\n                hue=tipo,\n                data=base_dendro_b,\n                legend=False)\n\nplt.show()\nbase_dendro_b[tipo].value_counts()","ba5c4319":"dendrogram(linkage(base_dendro_b, method='centroid') )\nplt.show()","dc8c7a8d":"dendrogram(linkage(base_dendro_b, method='median') )\nplt.show()","f38dc530":"dendrogram(linkage(base_dendro_b, method='ward') )\nplt.show()","d78e680e":"## Novas an\u00e1lises"}}