{"cell_type":{"5d0b30ca":"code","8d903652":"code","042e26d0":"code","c4e4f913":"code","d4fa29fc":"code","0c6a8123":"code","719b9be7":"code","d71a0f6b":"code","9e9160ad":"code","f0266522":"code","e6839452":"markdown","ca0385c6":"markdown","94d767a7":"markdown","431d5c51":"markdown","a6e31264":"markdown","e9b79869":"markdown"},"source":{"5d0b30ca":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport itertools\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import shapiro, levene, ttest_ind, mannwhitneyu\n\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 500)\npd.set_option('display.expand_frame_repr', False)\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d903652":"\nControl_df = pd.read_csv(\"..\/input\/ab-testingtestcontrol\/ab_testing - Control Group.csv\")\nTest_df = pd.read_csv(\"..\/input\/ab-testingtestcontrol\/ab_testing - Test Group.csv\")\nTest_df.head()","042e26d0":"Control_df.head()\n","c4e4f913":"Control_df.describe().T\nTest_df.describe().T\n","d4fa29fc":"\n# AVG.Profit for Purchase\nControl_df.groupby(\"Purchase\", as_index=False).agg({\"Earning\": \"mean\"}).sort_values(by=\"Earning\", ascending=False).head()\nTest_df.groupby(\"Purchase\", as_index=False).agg({\"Earning\": \"mean\"}).sort_values(by=\"Earning\", ascending=False).head()\n\n# AVG.Profit for Clicks\nControl_df.groupby(\"Click\", as_index=False).agg({\"Earning\": \"mean\"}).sort_values(by=\"Earning\", ascending=False).head()\nTest_df.groupby(\"Click\", as_index=False).agg({\"Earning\": \"mean\"}).sort_values(by=\"Earning\", ascending=False).head()","0c6a8123":"Test_df[\"Purchase\"].mean()","719b9be7":"Control_df[\"Purchase\"].mean()\n","d71a0f6b":"test_stat, pvalue = shapiro(Control_df[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))  \n\ntest_stat, pvalue = shapiro(Test_df[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","9e9160ad":"\ntest_stat, pvalue = levene(Control_df[\"Purchase\"],\n                           Test_df[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","f0266522":"test_stat, pvalue = ttest_ind(Control_df[\"Purchase\"],\n                              Test_df[\"Purchase\"],\n                              equal_var=True)\n\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","e6839452":"**See! We can say that with 95% confidence there is no difference in Purchase between control and test group. We can make actions with this scientific hypothesis..**","ca0385c6":"Variance is homogenous, we can not reject again. We should use T test right now.","94d767a7":"# AB Testing is crucial and its very common for decide which campaign or advertisement should we use ? Which one is more profitable? That is why, We will make decisions with 95% confidence! Let's start with importing libraries as usual","431d5c51":"![](http:\/\/www.orderhive.com\/wp-content\/uploads\/2017\/07\/AB-Testing.png)","a6e31264":"########################\n# Building Hypothesis:\n########################\n# H0 : M1=M2 (There is no difference between old and new project.)\n# H1 : M1!=M2 (There is quite difference between each other)\n\n# We can see difference easily but it can be randomly.","e9b79869":"**There is a normal distribution. We can not reject it.**"}}