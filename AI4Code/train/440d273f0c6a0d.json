{"cell_type":{"4b9a2963":"code","2dd36b3f":"code","8ce86db4":"code","478b4f45":"code","a4490b61":"code","fcdb25e9":"code","f79f32f6":"code","4b21e53b":"code","0497da63":"code","4ef44b32":"code","8b430ff5":"code","037452cb":"code","55dd9f1d":"code","1d29f5ff":"code","84c4da77":"code","926c3baf":"code","70bc54af":"code","714249bc":"code","c46bc7b4":"code","584703ea":"code","0f66cde6":"code","95bf2a26":"markdown","a5586ef1":"markdown","79284ea7":"markdown","d01573c0":"markdown","87064a4d":"markdown","aff1b33e":"markdown","7a396e86":"markdown","641d6b13":"markdown"},"source":{"4b9a2963":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.offline as py\nfrom plotly.graph_objs import Scatter, Layout\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n#set the backgroung style sheet\nsns.set_style(\"whitegrid\")\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2dd36b3f":"survey_df = pd.read_csv('..\/input\/SurveySchema.csv')\nfreeFormResp_df = pd.read_csv('..\/input\/freeFormResponses.csv')\nmultiChoice_df = pd.read_csv('..\/input\/multipleChoiceResponses.csv')","8ce86db4":"survey_df.head()","478b4f45":"ss = pd.DataFrame(survey_df.loc[1])\nss = ss.drop(['2018 Kaggle Machine Learning and Data Science Survey','Time from Start to Finish (seconds)'],axis=0)\nss[1] = pd.to_numeric(ss[1])\nss = ss.rename(columns={1:'Number of Responders'})\nss.plot(kind='bar',figsize = (15,6))","a4490b61":"ss = ss.sort_values('Number of Responders')\nprint(\"Questions Which get Least Responce: \")\nprint(ss.head(3))\n\nprint(\"\\nMost Answered Questions: \")\nprint(ss.tail(3))","fcdb25e9":"kp = multiChoice_df['Q1'][1:].value_counts()\nkp","f79f32f6":"data = [\ngo.Bar(\n    x = list(kp.index),\n    y = list(kp.values),\n    marker=dict(color=['rgba(55, 128, 191, 1.0)', 'rgba(219, 64, 82, 0.7)',\n               'rgba(50, 171, 96, 0.7)', 'rgb(128,0,128)'])\n),]\nlayout= go.Layout(\n    title= 'Gender Distribution',\n    yaxis=dict(title='Count', ticklen=5, gridwidth=2),\n    xaxis=dict(title='Gender', ticklen=5, gridwidth=2)\n)\nfig= go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='Q1')","4b21e53b":"age_df = multiChoice_df['Q2'][1:].dropna()\norder= ['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-69', '70-79', '80+']\nplt.figure(figsize=(12,5))\nsns.countplot(age_df,order=order)\nplt.xlabel('Age Group')\nplt.ylabel('Count')\nplt.title('Age Group Distribution')\nplt.show()","0497da63":"DS_df = multiChoice_df['Q26'][1:].dropna()\nplt.figure(figsize=(12,5))\nsns.countplot(DS_df)\nplt.xlabel('Do you consider Your a Data Scientist')\nplt.ylabel('Count')\n#plt.title('Age Group Distribution')\nplt.show()","4ef44b32":"DP_df = multiChoice_df[['Q2','Q26']][1:].dropna()\n#DP_df = DP_df.loc[DP_df['Q3'].isin(country)]\nDP_df = DP_df.groupby(['Q26'])['Q2'].value_counts()\nxp = ['25-29','22-24','30-34','18-21','35-39','40-44','45-49','50-54','55-59','60-69','80+','70-79']\nDP_df","8b430ff5":"trace1 = go.Bar(\n    x=xp,\n    y=DP_df['Definitely not'],\n    name='Definitely not',\n    marker = dict(color=\"rgb(113, 50, 141)\")\n)\ntrace2 = go.Bar(\n    x=xp,\n    y=DP_df['Definitely yes'],\n    name='Definitely yes',\n    marker = dict(color=\"rgb(119, 74, 175)\")\n)\n\ntrace3 = go.Bar(\n    x=xp,\n    y=DP_df['Maybe'],\n    name='Maybe',\n    marker = dict(color=\"rgb(120, 100, 202)\")\n)\n\ntrace4 = go.Bar(\n    x=xp,\n    y=DP_df['Probably not'],\n    name='Probably not',\n    marker = dict(color=\"rgb(117, 127, 221)\")\n)\n\ntrace5 = go.Bar(\n    x=xp,\n    y=DP_df['Probably yes'],\n    name='Probably yes',\n    marker = dict(color=\"rgb(191, 221, 229)\")\n)\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","037452cb":"DP_df = multiChoice_df[['Q1','Q26']][1:].dropna()\nplt.figure(figsize=(16,6))\np = ['Definitely yes','Probably yes', 'Maybe','Probably not','Definitely not']\nsns.countplot(data=DP_df, x='Q1', hue='Q26')\nplt.title('Gender Distribution Vs Data Scientists',fontsize=15)\nplt.xlabel('Gender',fontsize=14)\nplt.ylabel('Count',fontsize=14)\nplt.show()","55dd9f1d":"country = ['United States of Americ', 'India', 'China', 'Brazil',                        \n                'Canada', 'Japan', 'Russia', 'Spain', 'Australia',                     \n                'France', 'Germany']  \nDP_df = multiChoice_df[['Q3','Q26']][1:].dropna()\nDP_df = DP_df.loc[DP_df['Q3'].isin(country)]\nDP_df = DP_df.groupby(['Q26'])['Q3'].value_counts()","1d29f5ff":"trace1 = go.Bar(\n    x=country,\n    y=DP_df['Definitely not'],\n    name='Definitely not',\n    marker = dict(color=\"rgb(113, 50, 141)\")\n)\ntrace2 = go.Bar(\n    x=country,\n    y=DP_df['Definitely yes'],\n    name='Definitely yes',\n    marker = dict(color=\"rgb(119, 74, 175)\")\n)\n\ntrace3 = go.Bar(\n    x=country,\n    y=DP_df['Maybe'],\n    name='Maybe',\n    marker = dict(color=\"rgb(120, 100, 202)\")\n)\n\ntrace4 = go.Bar(\n    x=country,\n    y=DP_df['Probably not'],\n    name='Probably not',\n    marker = dict(color=\"rgb(117, 127, 221)\")\n)\n\ntrace5 = go.Bar(\n    x=country,\n    y=DP_df['Probably yes'],\n    name='Probably yes',\n    marker = dict(color=\"rgb(191, 221, 229)\")\n)\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","84c4da77":"roles = ['Student','Software Engineer', 'Chief Officer', 'Consultant', 'DBA\/Database Engineer', \n         'Data Analyst', 'Data Engineer', 'Data Journalist', 'Data Scientist', \n         'Developer Advocate', 'Manager', 'Marketing Analyst', 'Not employed', \n         'Other', 'Principal Investigator', 'Product\/Project Manager', \n         'Research Assistant', 'Research Scientist', 'Salesperson', 'Software Engineer', \n         'Statistician', ]\nDP_df = multiChoice_df[['Q6','Q26']][1:].dropna()\nDP_df = DP_df.groupby(['Q26'])['Q6'].value_counts()\n\nDP_df","926c3baf":"trace1 = go.Bar(\n    x=roles,\n    y=DP_df['Definitely not'],\n    name='Definitely not',\n    marker = dict(color=\"rgb(113, 50, 141)\")\n)\ntrace2 = go.Bar(\n    x=roles,\n    y=DP_df['Definitely yes'],\n    name='Definitely yes',\n    marker = dict(color=\"rgb(119, 74, 175)\")\n)\n\ntrace3 = go.Bar(\n    x=roles,\n    y=DP_df['Maybe'],\n    name='Maybe',\n    marker = dict(color=\"rgb(120, 100, 202)\")\n)\n\ntrace4 = go.Bar(\n    x=roles,\n    y=DP_df['Probably not'],\n    name='Probably not',\n    marker = dict(color=\"rgb(117, 127, 221)\")\n)\n\ntrace5 = go.Bar(\n    x=roles,\n    y=DP_df['Probably yes'],\n    name='Probably yes',\n    marker = dict(color=\"rgb(191, 221, 229)\")\n)\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","70bc54af":"country_df = multiChoice_df['Q3'][1:].value_counts()\ncountry_df.head(10)","714249bc":"data = [dict(\n        type='choropleth',\n        locations = list(country_df.index),\n        locationmode='country names',\n        z=(country_df.values),\n        text=list(country_df.index),\n        colorscale='Portland',\n        reversescale=True,\n)]\nlayout = dict(\n    title = 'A Map About Population of Data Scientists in Each Country',\n    geo = dict(showframe=False, showcoastlines=True, projection=dict(type='Mercator'))\n)\nfig = dict(data=data, layout=layout)\npy.iplot(fig, validate=False, filename='world-map')","c46bc7b4":"country = ['Australia', 'Brazil', 'Canada','China', 'France', 'Germany',\n                'India','Japan', 'Russia', 'Spain', 'United States of America']\nDP_df = multiChoice_df[['Q3','Q1']][1:].dropna()\nDP_df = DP_df.loc[DP_df['Q3'].isin(country)]\nDP_df = DP_df.groupby(['Q1','Q3'])['Q1'].count()","584703ea":"trace1 = go.Bar(\n    x=country,\n    y=DP_df['Male'],\n    name='Male'\n)\ntrace2 = go.Bar(\n    x=country,\n    y=DP_df['Female'],\n    name='Female'\n)\n\ntrace3 = go.Bar(\n    x=country,\n    y=DP_df['Prefer not to say'],\n    name='Prefer not to say'\n)\n\ntrace4 = go.Bar(\n    x=country,\n    y=DP_df['Prefer to self-describe'],\n    name='Prefer to self-describe'\n)\n\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","0f66cde6":"df = multiChoice_df[['Q1', 'Q2']][1:].dropna()\ndf['Q1'] = df['Q1'].replace(['Prefer not to say', 'Prefer to self-describe'], 'Others')\n\n# Select only those indices where the top 10 countries are there\nplt.figure(figsize=(12,6))\nsns.countplot(data=df, x='Q2', hue='Q1', hue_order=['Female','Male', 'Others'], order=order)\nplt.xlabel('Age-group')\nplt.ylabel('Count')\nplt.title('Gender distribution in different age-groups')\nplt.show()\n","95bf2a26":"## Gender Distribution","a5586ef1":"## **Country**","79284ea7":"\n### Question With Most and Least Number of Responces","d01573c0":"## Age Distribution Vs Data Scientists","87064a4d":"## Age Distribution","aff1b33e":"## Do you consider yourself a Data Scientist?  ","7a396e86":"# Kaggle 2018 ML & DS Survey","641d6b13":"## Country Vs Data Scientists"}}