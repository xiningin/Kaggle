{"cell_type":{"b72dc176":"code","be0c4a11":"code","7475f717":"code","e227850d":"code","3bca6c3a":"code","d02c156a":"code","3b505437":"code","98972dc9":"code","bf189513":"code","ae8ac9aa":"code","ebad36fd":"code","e4a3cdaf":"code","aadd3b33":"code","6f02dd70":"code","5134ff59":"code","c83accd4":"code","cd0c3c5d":"code","dc983ee3":"code","f7dda0e7":"code","1b514a43":"markdown"},"source":{"b72dc176":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be0c4a11":"import pandas as pd\nimport numpy as np","7475f717":"df = pd.read_csv('..\/input\/titanic\/train.csv')\n","e227850d":"df.head()","3bca6c3a":"\nprint(train.shape)","d02c156a":"df.drop('Name', inplace=True, axis=1)\ndf.drop('Cabin', inplace=True, axis=1)\ndf.drop('Embarked', inplace=True, axis=1)\ndf.drop('Ticket', inplace=True, axis=1)\ndf.drop('PassengerId', inplace=True, axis=1)\n","3b505437":"Sex_one_hot_encoded = pd.get_dummies(df.Sex, prefix='Sex')\nprint(Sex_one_hot_encoded.head())","98972dc9":"pd.concat([df, Sex_one_hot_encoded], axis=1)\n","bf189513":"df.drop('Sex', inplace=True, axis=1)\n","ae8ac9aa":"df.head()","ebad36fd":"df.dtypes","e4a3cdaf":"df.Age.fillna(value=df.Age.mean(), inplace=True)\ndf[df['Age'].isnull()]","aadd3b33":"df.head()","6f02dd70":"df.describe(include = 'all')","5134ff59":"x = df.drop(['Survived'], axis=1)\ny = df.Survived","c83accd4":"from sklearn.model_selection import train_test_split \n\nx_train ,x_test,y_train  , y_test =train_test_split(x , y , test_size = .30)\nprint(x_train)\nprint('................................')\nprint(x_train.shape)\nprint('.................................................................')\n\nprint(y_train)\nprint('.................................')\nprint(y_train.shape)\n\n","cd0c3c5d":"from sklearn.svm import SVC\n\nSVC_clf = SVC(C = 30,kernel='rbf')\n","dc983ee3":"SVC_clf=  SVC_clf.fit(x_train,y_train)\n","f7dda0e7":"y_pred = SVC_clf.predict(x_test)\nprint(y_pred)\nprint('................................')\nfrom sklearn.metrics import  accuracy_score\naccuracy_score(y_pred,y_test)\n","1b514a43":"# **CLEANING****\n****"}}