{"cell_type":{"3a3a8872":"code","0d66d035":"code","17ebc5f7":"code","d4c0e07d":"code","c4bc2884":"code","25303cd8":"code","f5fc647e":"code","3870f623":"code","67d58bd8":"code","038ced90":"code","fe492b2d":"code","844bd9ba":"code","a7826bea":"code","f0343700":"code","96e1787e":"code","1a1929ff":"code","e21350f6":"code","7b414f3b":"code","1439b9bf":"markdown"},"source":{"3a3a8872":"#Install:\n#GFootball environment (https:\/\/github.com\/google-research\/football\/),\n#SEED RL for training an agent (https:\/\/github.com\/google-research\/seed_rl\/),\n#Tensorflow 2.2, which is needed by SEED RL.\n\n!apt-get update\n!apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n!pip3 install tensorflow==2.2\n!pip3 install tensorflow_probability==0.9.0\n\n# Update kaggle-environments to the newest version.\n!pip3 install kaggle-environments -U\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone -b v2.3 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .\n\n!git clone https:\/\/github.com\/google-research\/seed_rl.git\n!cd seed_rl && git checkout 34fb2874d41241eb4d5a03344619fb4e34dd9be6\n","0d66d035":"ls","17ebc5f7":"#!ls -la \/kaggle_simulations\/agent","d4c0e07d":"!ls -la ..\/input\/model-upload","c4bc2884":"cp -r ..\/input\/model-upload\/saved_model_p6  saved_model_p6 #\/kaggle_simulations\/agent\/saved_model_p2 ","25303cd8":"!mkdir -p \/kaggle_simulations\/agent\n","f5fc647e":"cp -r ..\/input\/model-upload\/saved_model_p6  \/kaggle_simulations\/agent\/saved_model_p6","3870f623":"ls","67d58bd8":"#mkdir \/kaggle_simulations\/agent\/saved_model_p2\/assets","038ced90":"ls saved_model_p6\/variables\/","fe492b2d":"%%writefile main.py \n#\/kaggle_simulations\/agent\/\nimport collections\nimport gym\nimport numpy as np\nimport os\nimport sys\nimport tensorflow as tf\n\nfrom gfootball.env import observation_preprocessing\nfrom gfootball.env import wrappers\n\nEnvOutput = collections.namedtuple(\n    'EnvOutput', 'reward done observation abandoned episode_step')\n\ndef prepare_agent_input(observation, prev_action, state):\n    # SEED RL agent accepts input in a form of EnvOutput. When not training\n    # only observation is used for generating action, so we use a dummy values\n    # for the rest.\n    env_output = EnvOutput(reward=tf.zeros(shape=[], dtype=tf.float32),\n        done=tf.zeros(shape=[], dtype=tf.bool),\n        observation=observation, abandoned=False,\n        episode_step=tf.zeros(shape=[], dtype=tf.int32))\n    # add batch dimension\n    prev_action, env_output = tf.nest.map_structure(\n        lambda t: tf.expand_dims(t, 0), (prev_action, env_output))\n\n    return (prev_action, env_output, state)\n\n# Previously executed action\nprevious_action = tf.constant(0, dtype=tf.int64)\n# Queue of recent observations (SEED agent we trained uses frame stacking).\nobservations = collections.deque([], maxlen=4)\n# Current state of the agent (used by recurrent agents).\nstate = ()\n\n# Load previously trained Tensorflow model.\npolicy = tf.compat.v2.saved_model.load('\/kaggle_simulations\/agent\/saved_model_p6')#..\/input\/model-upload\/saved_model_p2\n\ndef agent(obs):\n    global step\n    global previous_action\n    global observations\n    global state\n    global policy\n    # Get observations for the first (and only one) player we control.\n    obs = obs['players_raw'][0]\n    # Agent we trained uses Super Mini Map (SMM) representation.\n    # See https:\/\/github.com\/google-research\/seed_rl\/blob\/master\/football\/env.py for details.\n    obs = observation_preprocessing.generate_smm([obs])[0]\n    if not observations:\n        observations.extend([obs] * 4)\n    else:\n        observations.append(obs)\n    \n    # SEED packs observations to reduce transfer times.\n    # See PackedBitsObservation in https:\/\/github.com\/google-research\/seed_rl\/blob\/master\/football\/observation.py\n    obs = np.packbits(obs, axis=-1)\n    if obs.shape[-1] % 2 == 1:\n        obs = np.pad(obs, [(0, 0)] * (obs.ndim - 1) + [(0, 1)], 'constant')\n    obs = obs.view(np.uint16)\n\n    # Execute our agent to obtain action to take.\n    agent_output, state = policy.get_action(*prepare_agent_input(obs, previous_action, state))\n    previous_action = agent_output.action[0]\n    return [int(previous_action)]","844bd9ba":"ls \/kaggle_simulations\/agent","a7826bea":"from kaggle_environments import make\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True})\nenv.run([\"main.py\", \"run_right\"])#\/kaggle_simulations\/agent\/  #\nenv.render(mode=\"human\", width=800, height=600)","f0343700":"#ls","96e1787e":"# !apt-get update\n# !apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n# !pip3 install tensorflow==2.2\n# !pip3 install tensorflow_probability==0.9.0\n\n# # Update kaggle-environments to the newest version.\n# !pip3 install kaggle-environments -U\n\n# # Make sure that the Branch in git clone and in wget call matches !!\n# !git clone -b v2.3 https:\/\/github.com\/google-research\/football.git\n# !mkdir -p football\/third_party\/gfootball_engine\/lib\n\n# !wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n# !cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .\n\n# !git clone https:\/\/github.com\/google-research\/seed_rl.git\n# !cd seed_rl && git checkout 34fb2874d41241eb4d5a03344619fb4e34dd9be6\n# !mkdir \/kaggle_simulations\/agent","1a1929ff":"# from kaggle_environments import make\n# env = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True})\n# env.run([\"..\/input\/model-upload\/main.py\", \"run_right\"])\n# env.render(mode=\"human\", width=800, height=600)","e21350f6":"ls \/kaggle_simulations\/agent\/saved_model_p2\/","7b414f3b":"!tar -czvf \/kaggle\/working\/submit.tar.gz main.py saved_model_p2\n#!cd \/kaggle_simulations\/agent && tar -czvf \/kaggle\/working\/submit.tar.gz main.py saved_model_p2","1439b9bf":"# Submit to Competition\n1. \"Save & Run All\" (commit) this Notebook\n1. Go to the notebook viewer\n1. Go to \"Data\" section and find submit.tar.gz file.\n1. Click \"Submit to Competition\"\n1. Go to [My Submissions](https:\/\/www.kaggle.com\/c\/football\/submissions) to view your score and episodes being played."}}