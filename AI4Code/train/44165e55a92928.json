{"cell_type":{"d6fd0488":"code","95827747":"code","229a0625":"code","7660dea7":"code","2d1dced7":"code","232270cc":"code","9d239c76":"code","a48d1e0a":"code","2eb67f1d":"code","3d521691":"code","683bf9a5":"code","4d57f7e1":"code","aa4605ed":"code","0d6d6796":"code","66bb4bea":"code","ae601751":"code","1221b936":"code","c56bf061":"code","45878f9d":"markdown","683b58b8":"markdown"},"source":{"d6fd0488":"import pandas as pd\n\nmain_file_path = '..\/input\/house-prices-advanced-regression-techniques\/train.csv' # this is the path to the Iowa data that you will use\ndata = pd.read_csv(main_file_path)\n\n# Run this code block with the control-enter keys on your keyboard. Or click the blue botton on the left\nprint('Some output from running this cell')","95827747":"data.describe()","229a0625":"data.columns","7660dea7":"data_price=data.SalePrice","2d1dced7":"two_columns=['Fence','SaleType']","232270cc":"data_of_two=data[two_columns]\ndata_of_two.describe()","9d239c76":"y=data.SalePrice","a48d1e0a":"usa_predictors=['YearBuilt', 'YearRemodAdd', 'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF',  '1stFlrSF', '2ndFlrSF',\n       'LowQualFinSF', 'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath',\n       'HalfBath', 'BedroomAbvGr',  \n        'GarageCars', 'GarageArea', \n     'WoodDeckSF', 'OpenPorchSF',\n        'PoolArea']","2eb67f1d":"x=data[usa_predictors]","3d521691":"\nx.info()","683bf9a5":"from sklearn.tree import DecisionTreeRegressor\nusa_model=DecisionTreeRegressor()\nusa_model.fit(x,y)","4d57f7e1":"print(\"Making prediction for 5 houses\")\nprint(x.head())\nprint(usa_model.predict(x.head()))","aa4605ed":"from sklearn.metrics import mean_absolute_error\npredict_homes_price=usa_model.predict(x)\nmean_absolute_error(y,predict_homes_price)","0d6d6796":"from  sklearn.model_selection import train_test_split\ntrain_x,val_x,train_y,val_y=train_test_split(x,y,random_state=0)\nusa_model.fit(train_x,train_y)","66bb4bea":"val_predict=usa_model.predict(val_x)","ae601751":"print(mean_absolute_error(val_y,val_predict))\n","1221b936":"def get_mae(max_leaf_nodes, predictors_train, predictors_val, targ_train, targ_val):\n    model = DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state=0)\n    model.fit(predictors_train, targ_train)\n    preds_val = model.predict(predictors_val)\n    mae = mean_absolute_error(targ_val, preds_val)\n    return(mae)","c56bf061":"for max_leaf_nodes in [5, 50, 500, 5000]:\n    my_mae = get_mae(max_leaf_nodes, train_x, val_x, train_y, val_y)\n    print(\"Max leaf nodes: %d  \\t\\t Mean Absolute Error:  %d\" %(max_leaf_nodes, my_mae))","45878f9d":"# Introduction\n**This will be your workspace for the [Machine Learning course](https:\/\/www.kaggle.com\/learn\/machine-learning).**\n\nYou will need to translate the concepts to work with the data in this notebook, the Iowa data. Each page in the Machine Learning course includes instructions for what code to write at that step in the course.\n\n# Write Your Code Below","683b58b8":"\n**If you have any questions or hit any problems, come to the [Learn Discussion](https:\/\/www.kaggle.com\/learn-forum) for help. **\n\n**Return to [ML Course Index](https:\/\/www.kaggle.com\/learn\/machine-learning)**"}}