{"cell_type":{"52e60efa":"code","ca10fdd4":"code","0e459a76":"code","d554aa12":"code","0df66dd1":"code","919f1371":"markdown"},"source":{"52e60efa":"import pandas as pd\nimport matplotlib.pyplot as plt\nMETA =\"..\/input\/meta-kaggle\/\"\n\nCOMP = 'lux-ai-2021' # alternative report\n#COMP = 'google-football' # this report\n\nCOMPETITIONS = {\n    'lux-ai-2021': 30067,\n    'hungry-geese': 25401,\n    'rock-paper-scissors': 22838,\n    'santa-2020': 24539,\n    'halite': 18011,\n    'google-football': 21723\n}","ca10fdd4":"episodes_df = pd.read_csv(META + \"Episodes.csv\")\nepisodes_df = episodes_df[episodes_df.CompetitionId == COMPETITIONS[COMP]] # lux\nepisodes_df = episodes_df.set_index(['Id'])\nepisodes_df['CreateTime'] = pd.to_datetime(episodes_df['CreateTime'], format=\"%m\/%d\/%Y %H:%M:%S\")\nepisodes_df['EndTime'] = pd.to_datetime(episodes_df['EndTime'], format=\"%m\/%d\/%Y %H:%M:%S\")\nepisodes_df['RunTime'] = (episodes_df.EndTime-episodes_df.CreateTime) \/ pd.Timedelta(seconds=1)\nmeantime = episodes_df['RunTime'].mean()\nprint(f'Average match time is {int(meantime)} seconds')","0e459a76":"starts = pd.Series(1, episodes_df['CreateTime'])\nends = pd.Series(-1, episodes_df['EndTime'] + pd.Timedelta('1 sec'))\n\nmin_time = episodes_df['CreateTime'].min()\nmax_time = episodes_df['EndTime'].max()\nts_index = pd.date_range(min_time, max_time, freq = 's')\n\nts_changes = pd.concat([starts, ends]).groupby(level=0).sum().cumsum()\nconcurrency = ts_changes.reindex(ts_index, method='ffill')","d554aa12":"concurrency.resample(f'{int(meantime)}S').max()","0df66dd1":"plt.figure(figsize=(10, 10))\nnumber_of_windows = 5\nconcurrency.resample(f'{int(number_of_windows*meantime)}S').max().plot(style='k--', label='Series')\nplt.legend()","919f1371":"Report on runtime concurrency for kaggle simulations"}}