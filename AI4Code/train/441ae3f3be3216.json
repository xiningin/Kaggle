{"cell_type":{"3c2842aa":"code","ee73795f":"code","6d7e2835":"code","67e55bab":"code","33459094":"code","72e700d4":"code","d3d7d0de":"code","59d73849":"code","c6e0f64d":"code","9190e0fc":"code","c848c042":"code","ec7fda77":"code","1a4da43b":"code","351f4c8f":"code","da214960":"code","e024b266":"code","3111269b":"code","a325db22":"code","2a7327b3":"code","12169957":"code","00d8b154":"code","611b5707":"code","e7b6cb9e":"code","e772b5a0":"code","8777460d":"code","27ebe6d1":"code","9cc6dd92":"code","c84463ca":"code","d24b5795":"code","7b927853":"code","d8cac5ac":"code","64ed610f":"markdown","299909a3":"markdown","e0ade5a9":"markdown","a37147eb":"markdown","b8a92074":"markdown","41167772":"markdown"},"source":{"3c2842aa":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ee73795f":"def generate_submission_file(probs_df):\n    \n    submission = pd.read_csv('..\/input\/healthcareanalyticsii\/sample_submission.csv')\n\n    submission['Stay'] =  np.argmax(probs_df.iloc[:,1:].values,axis =1)\n\n    submission['Stay'] = submission['Stay'].map(inv_dic)\n    \n    submission.to_csv('submission.csv',index=False)\n\n    print(submission.head())","6d7e2835":"def get_probs_file_name(fname,model):\n    \n    if model == 'lgb':\n        \n        fpath = '..\/input\/lets-get-rid-of-the-patients\/probs' + fname[10:]\n        \n    if model == 'xgb':\n        \n        fpath = '..\/input\/lets-get-rid-of-the-patients-xgboost\/probs' + fname[10:]\n        \n    if model == 'catboost':\n        \n        fpath = '..\/input\/lets-get-rid-of-the-patients-catboost\/probs' + fname[10:]\n        \n    if model == 'dcn':\n        \n        fpath = '..\/input\/a-model-built-on-garbage-deeptables-dcn\/probs' + fname[10:]\n    \n    if model == 'dnn':\n        \n        fpath = '..\/input\/a-model-built-on-garbage-deeptables\/probs' + fname[10:]\n        \n    if model == 'pnn':\n        \n        fpath = '..\/input\/a-model-built-on-garbage-deeptables-pnn\/probs' + fname[10:]\n        \n    \n    return fpath","67e55bab":"sample_probs_file = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-catboost\/probs_32_0_0.csv')\n\nsample_probs_file.head()","33459094":"inv_dic ={}\n\nfor i in range(len(sample_probs_file.columns[1:])):\n    \n    inv_dic[i] = sample_probs_file.columns[i+1]","72e700d4":"model_stats_catboost = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-catboost\/model_stats.csv')\n\nmodel_stats_lgb = pd.read_csv('..\/input\/lets-get-rid-of-the-patients\/model_stats.csv')\n\nmodel_stats_xgb = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-xgboost\/model_stats.csv')\n\nmodel_stats_dcn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables-dcn\/model_stats.csv')\n\nmodel_stats_dnn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables\/model_stats.csv')\n\nmodel_stats_pnn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables-pnn\/model_stats.csv')","d3d7d0de":"##ALL\nprobs_file_cat = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-catboost\/probs.csv')\n\nprobs_file_lgb = pd.read_csv('..\/input\/lets-get-rid-of-the-patients\/probs.csv')\n\nprobs_file_xgb = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-xgboost\/probs.csv')\n\nprobs_file_dcn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables-dcn\/probs.csv')\n\nprobs_file_dnn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables\/probs.csv')\n\nprobs_file_pnn = pd.read_csv('..\/input\/a-model-built-on-garbage-deeptables-pnn\/probs.csv')","59d73849":"#Public LB==44.2814928313451\n#sample_probs_file.iloc[:,1:] = probs_file_dcn.iloc[:,1:] + probs_file_pnn.iloc[:,1:]\n\n#sample_probs_file.head()","c6e0f64d":"#generate_submission_file(sample_probs_file)","9190e0fc":"min_loss_index_lgb = np.argsort(model_stats_catboost.validation_loss.values)\n\nmin_loss_index_lgb","c848c042":"min_loss_index_xgb = np.argsort(model_stats_xgb.validation_loss.values)\n\nmin_loss_index_xgb","ec7fda77":"min_loss_index_cat = np.argsort(model_stats_catboost.validation_loss.values)\n\nmin_loss_index_cat","1a4da43b":"min_loss_index_dcn = np.argsort(model_stats_dcn.validation_loss.values)\n\nmin_loss_index_dcn","351f4c8f":"min_loss_index_dnn = np.argsort(model_stats_dnn.validation_loss.values)\n\nmin_loss_index_dnn","da214960":"min_loss_index_pnn = np.argsort(model_stats_pnn.validation_loss.values)\n\nmin_loss_index_pnn","e024b266":"max_accuracy_index_catboost = np.argsort(-model_stats_catboost.accuracy.values)\n\nmax_accuracy_index_catboost","3111269b":"max_accuracy_index_lgb = np.argsort(-model_stats_lgb.accuracy.values)\n\nmax_accuracy_index_lgb","a325db22":"max_accuracy_index_xgb = np.argsort(-model_stats_xgb.accuracy.values)\n\nmax_accuracy_index_xgb","2a7327b3":"max_accuracy_index_dcn = np.argsort(-model_stats_dcn.accuracy.values)\n\nmax_accuracy_index_dcn","12169957":"max_accuracy_index_dnn = np.argsort(-model_stats_dnn.accuracy.values)\n\nmax_accuracy_index_dnn","00d8b154":"max_accuracy_index_pnn = np.argsort(-model_stats_pnn.accuracy.values)\n\nmax_accuracy_index_pnn","611b5707":"probs_df_loss = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-catboost\/probs_32_0_0.csv')","e7b6cb9e":"def cal_probs_loss(model_name,model_stats_df,min_loss_idx_arr,model_iter):\n    \n    probs_cal_loss = np.zeros(shape=(137057,11))\n\n    for i,idx in enumerate(min_loss_idx_arr):\n    \n        probs_cal_loss += pd.read_csv(get_probs_file_name(model_stats_df.iloc[idx,0],model_name)).iloc[:,1:]\n    \n        if i == model_iter:\n        \n            break\n        \n    probs_df_loss.iloc[:,1:] = probs_cal_loss\n\n    #print(probs_df_loss.head())\n\n    return probs_cal_loss\n    ","e772b5a0":"probs_df_acc = pd.read_csv('..\/input\/lets-get-rid-of-the-patients-catboost\/probs_32_0_0.csv')","8777460d":"def cal_probs_acc(model_name,model_stats_df,max_accuracy_idx_arr,model_iter):\n    \n    probs_cal_acc = np.zeros(shape=(137057,11))\n\n    for i,idx in enumerate(max_accuracy_idx_arr):\n\n        probs_cal_acc += pd.read_csv(get_probs_file_name(model_stats_df.iloc[idx,0],model_name)).iloc[:,1:]\n\n        if i ==model_iter:\n\n            break\n\n    #print(probs_cal_acc.head())\n    \n    return probs_cal_acc\n    ","27ebe6d1":"#probs_df_acc.iloc[:,1:] = cal_probs_acc('dcn',model_stats_dcn,max_accuracy_index_dcn,75)\n\n#probs_df_acc.head()","9cc6dd92":"#generate_submission_file(probs_df_acc)","c84463ca":"#probs_acc_dcn = cal_probs_acc('dcn',model_stats_dcn,max_accuracy_index_dcn,75) \n    \n#probs_acc_pnn = cal_probs_acc('pnn',model_stats_pnn,max_accuracy_index_pnn,6) \n    \n#probs_acc_lgb = cal_probs_acc('lgb',model_stats_lgb,max_accuracy_index_lgb,1) \n    \n#probs_df_acc.iloc[:,1:] = probs_acc_dcn + probs_acc_pnn #+probs_acc_lgb\n\n#probs_df_acc.head()","d24b5795":"#generate_submission_file(probs_df_acc)","7b927853":"# Best Public LB == 44.3508080698\nprobs_loss_dcn = cal_probs_loss('dcn',model_stats_dcn,min_loss_index_dcn,2) \n    \nprobs_loss_pnn = cal_probs_loss('pnn',model_stats_pnn,min_loss_index_pnn,2)\n\n#probs_loss_dnn = cal_probs_loss('dnn',model_stats_dnn,min_loss_index_dnn,1) \n    \n#probs_loss_cat = cal_probs_loss('catboost',model_stats_catboost,min_loss_index_cat,1) \n    \nprobs_df_loss.iloc[:,1:] = 1.075*probs_loss_dcn + 1.01*probs_loss_pnn #+ probs_loss_cat\n\nprobs_df_loss.head()","d8cac5ac":"generate_submission_file(probs_df_loss)","64ed610f":"https:\/\/www.kaggle.com\/c\/siim-isic-melanoma-classification\/discussion\/175614","299909a3":"# Ensembling based on Min Loss","e0ade5a9":"# Ensembling based on Max Accuracy","a37147eb":"# Get Max Accuracy indices","b8a92074":"# Generate Submission File","41167772":"# Get Min Loss Indices"}}