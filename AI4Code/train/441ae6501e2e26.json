{"cell_type":{"339cfdc0":"code","74cf24aa":"code","b3a8b3d9":"code","fb1902a8":"code","aab9204d":"code","77f373f5":"code","6a25816d":"code","2c2018e0":"code","32e5ccea":"code","2c38ba2b":"code","d3bd3f97":"code","cba3eae7":"code","3937e96a":"code","60dfee0a":"code","63ff5c24":"code","88731e7a":"code","aca3b517":"code","fcbd49d6":"code","b9ea2ffc":"code","225be644":"code","d6eacbb9":"code","c615c438":"code","a6afb966":"code","8646707d":"code","a953165a":"code","cc035d05":"code","f8d2e9cc":"code","8b2de3ed":"code","c80dfb22":"code","2ddb85b6":"code","41330ade":"code","0248928b":"code","9b64fda9":"code","54230ae4":"code","e3b110be":"code","d7fdbdda":"code","062275ed":"code","50d8ff92":"code","bf16dab1":"markdown","317fff9a":"markdown","b98d7f48":"markdown","1e1273f4":"markdown","386d808a":"markdown","c4acf494":"markdown","983e1047":"markdown","72020804":"markdown","f449f6f6":"markdown","c466226f":"markdown","8a7d8492":"markdown","1c70ff52":"markdown","5cc4381a":"markdown","80e61fc7":"markdown","9c10eaa5":"markdown","37fe58bc":"markdown","ab2350a0":"markdown","7f1b30c3":"markdown","a9c3a35a":"markdown","0ebe9d64":"markdown","d42b8fa8":"markdown","76d78f21":"markdown","208c5dd7":"markdown","665af920":"markdown","3f36fb08":"markdown","8b6865df":"markdown","6e557076":"markdown","1bba0ee8":"markdown","85dbe53f":"markdown"},"source":{"339cfdc0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","74cf24aa":"dataset = pd.read_csv('..\/input\/bank-marketing\/bank-additional-full.csv', sep = ';')","b3a8b3d9":"print(dataset.shape)","fb1902a8":"print(dataset.head())","aab9204d":"print(dataset.info())","77f373f5":"dataset = dataset.rename(columns={'y': 'subscribed'})","6a25816d":"print(dataset.duplicated().sum())","2c2018e0":"print(dataset[dataset.duplicated(keep=False)].iloc[:,:7])","32e5ccea":"dataset = dataset.drop_duplicates()","2c38ba2b":"print(dataset.shape)","d3bd3f97":"print('\\033[1mNULL VALUES\\033[0m\\n'+ str(dataset.isnull().values.any()))","cba3eae7":"Subscribed = pd.DataFrame(dataset['subscribed'].value_counts())\nprint(Subscribed.T)\npd.DataFrame(dataset['subscribed'].value_counts()).plot(kind='bar', color='lightgreen')\nplt.show()","3937e96a":"plt.figure(figsize=(16,4))\n\nplt.subplot(1,4,1)\nsns.distplot(dataset['age'])\nplt.title('Age Distribution')\n\nplt.subplot(1,4,2)\nsns.countplot(dataset['job'])\nplt.title('Job Distribution')\nplt.xticks(rotation=90)\n\nplt.subplot(1,4,3)\nsns.countplot(dataset['marital'], color='pink')\nplt.title('Marital Status')\n\nplt.subplot(1,4,4)\nsns.countplot(dataset['education'], color='lightgreen')\nplt.xticks(rotation=90)\nplt.title('Education Level')\n\nplt.show()","60dfee0a":"plt.figure(figsize=(16,5))\n\nplt.subplot(1,3,1)\nsns.countplot(dataset['default'], palette=\"Set3\")\nplt.title('Default Credit')\n\nplt.subplot(1,3,2)\nsns.countplot(dataset['housing'], palette=\"Set3\")\nplt.title('Housing Loan')\n\nplt.subplot(1,3,3)\nsns.countplot(dataset['loan'], palette=\"Set3\")\nplt.title('Loan')\n\nplt.show()","63ff5c24":"plt.figure(figsize=(18,5))\n\nplt.subplot(1,4,1)\nsns.countplot(dataset['contact'], palette=\"vlag\")\nplt.title('Contact Type')\n\nplt.subplot(1,4,2)\nsns.countplot(dataset['month'], palette=\"vlag\",order = ['mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'])\nplt.title('Month')\nplt.xticks(rotation=90)\n\nplt.subplot(1,4,3)\nsns.countplot(dataset['day_of_week'], palette=\"vlag\")\nplt.title('Day Of Week')\n\nplt.subplot(1,4,4)\nsns.distplot(dataset['duration'])\nplt.xticks(rotation=90)\nplt.title('Duration of Calls')\n\nplt.show()","88731e7a":"dataset.drop('day_of_week', axis=1, inplace=True)","aca3b517":"plt.figure(figsize=(16,5))\n\nplt.subplot(1,2,1)\nsns.violinplot(\"contact\", \"campaign\", data=dataset, kind='reg')\nplt.title('Number of Contacts vs Contact Type')\n\nplt.subplot(1,2,2)\nsns.distplot(dataset['campaign'])\nplt.title('Number of Contacts with Customers')\n\nplt.show()","fcbd49d6":"plt.figure(figsize=(16,5))\n\nplt.subplot(1,3,1)\nsns.countplot(dataset['pdays'])\nplt.xticks(rotation=90)\nplt.title('Number of Days Passed Since Previous Campaign')\n\nplt.subplot(1,3,2)\nsns.countplot(dataset['previous'])\nplt.title('Number of Previous Contacts')\n\nplt.subplot(1,3,3)\nsns.countplot(dataset['poutcome'])\nplt.title('Previous Campaign Result')\n\nplt.show()","b9ea2ffc":"dataset.loc[dataset['pdays'] < 999, 'pdays'] = 1\ndataset.loc[dataset['pdays'] == 999, 'pdays'] = 0","225be644":"dataset = dataset.rename(columns={'pdays': 'previouslycontacted', 'previous':'previouscontacts'})","d6eacbb9":"bins= [0,10,20,30,40,50,60,70,80,90,100]\nlabels = [0,1,2,3,4,5,6,7,8,9]\ndataset.insert(1, 'agegroup', pd.cut(dataset['age'], bins=bins, labels=labels, right=False))\ndataset = dataset.drop('age', axis=1)","c615c438":"categorical_columns = dataset.select_dtypes(include='object').columns","a6afb966":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor i in categorical_columns:\n    dataset[i] = le.fit_transform(dataset[i]) ","8646707d":"print(dataset.head())","a953165a":"print(dataset.shape)","cc035d05":"X_train = dataset.iloc[:, :-1].values.astype('float')\ny_train = dataset['subscribed'].values","f8d2e9cc":"pd.DataFrame(X_train[y_train == 1]).plot(kind='density', ind=100, legend=False)\nplt.title('Subscribed Likelihood Plots')\n\nplt.show()","8b2de3ed":"pd.DataFrame(X_train[y_train == 0]).plot(kind='density', ind=100, legend=False)\nplt.title('Not Subscribed Likelihood Plots')\n\nplt.show()","c80dfb22":"from sklearn.preprocessing import StandardScaler\nX_train = pd.DataFrame(StandardScaler().fit_transform(X_train))","2ddb85b6":"X_train[y_train == 1].plot(kind='density', ind=100, legend=False)\nplt.title('Subscribed Likelihood Plot after Standardization')\nplt.show()","41330ade":"X_train[y_train == 0].plot(kind='density', ind=100, legend=False)\nplt.title('Not Subscribed Likelihood Plot after Standardization')\nplt.show()","0248928b":"plt.figure(figsize=(12,10))\nsns.heatmap(dataset.corr(method='spearman'), cbar=True, cmap=\"RdBu_r\")\nplt.title(\"Correlation Matrix\", fontsize=16)\nplt.show()","9b64fda9":"correlation = X_train.corr(method='spearman').abs()\nupper = correlation.where(np.triu(np.ones(correlation.shape), k=1).astype(np.bool))\nto_drop = [column for column in upper.columns if any(upper[column] > 0.40)]\nX_train.drop(X_train[to_drop], axis=1, inplace=True)","54230ae4":"print(X_train.shape)","e3b110be":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size = 0.25, random_state=42)","d7fdbdda":"from sklearn.naive_bayes import GaussianNB\ngb = GaussianNB()\ngb.fit(X_train, y_train)\npred = gb.predict(pd.DataFrame(X_test))","062275ed":"from sklearn.metrics import roc_curve, auc\ngbprob = gb.predict_proba(X_train)[:,1]\nfpr, tpr, thr = roc_curve(y_train, gbprob)\nplt.plot(fpr, tpr)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic Plot')\nprint(auc(fpr, tpr))","50d8ff92":"from sklearn.metrics import confusion_matrix, accuracy_score\nprint('Accuracy score of Gaussian Naive Bayes:' + str(accuracy_score(y_test,pred)))\nprint('Confusion Matrix\\n' + str(confusion_matrix(y_test, pred)))","bf16dab1":"There is a graphic below who subscribe a term deposit or not.","317fff9a":"### Converting to numerical values","b98d7f48":"### Checking Normal Distribution","1e1273f4":"There are no null values in the dataset. On the other hand, there are some categorical variables.","386d808a":"I will change ages as age group and I will drop age column from the dataset.","c4acf494":"# 2. Cleaning The Dataset","983e1047":"* Most people have no credit in default, while almost none of people have credit.\n* The number of people who have housing loan are higher than people who have no housing loan.\n* Most people have no personal loan. ","72020804":"The data points are not normally distributed. I will apply Standard Scaler to get a more normally distributed dataset.","f449f6f6":"There are 12 duplicated values in the dataset. Let's see which data points are duplicated.","c466226f":"Most people do not subscribe to a term deposit.","8a7d8492":"Gaussian Naive Bayes assumes that the predictors take up a continuous value and are not discrete, and these values are sampled from a gaussian distribution. That's why I will check normal distribution.","1c70ff52":"* Most people are generally between 20 - 40 years old. Few people are above 60 years old. \n* Most people are administrator, technician or blue-collar workers.\n* Most people are married.\n* Most people have university degree.","5cc4381a":"There are no null values in the dataset.","80e61fc7":"# 1. Understanding The Data","9c10eaa5":"I will convert categorical variables to numerical variables with Label Encoder from Sklearn.","37fe58bc":"### Checking Correlation Between Features","ab2350a0":"# 4. Data Preparation","7f1b30c3":"I will drop duplicated values from the dataset.","a9c3a35a":"* \"pdays\" show the number of days that passed by after the client was last contacted from a previous campaign (999 means client was not previously contacted). Graphic tells us that almost all of the customers were not contacted for previous campaign. I will change this variable as previously contacted or not, since most of the clients were not previously contacted. \n\n* The number of previous contacts graphic shows that most people were not contacted previously. That's why previous campaign results do not exist for some customers.","0ebe9d64":"There are some highly correlated variables in the dataset. Since Naive Bayes assumes that features are independent of each other, I will drop highly correlated varibles.","d42b8fa8":"# 3. Exploratory Data Analysis","76d78f21":"I will check duplicated values.","208c5dd7":"# 5. Model","665af920":"There are values that go as 1,2,3 ... These values will not have perfectly normal distribution even after standardization. However, it gives better distribution.","3f36fb08":"# 6. Evaluation","8b6865df":"The number of contacts performed during this campaign and for this client are higher with telephone. On the other hand, the number of contacts is around 0-10 range.","6e557076":"The correlation between variables are not linear, that's why I will use spearman correlation method.","1bba0ee8":"The model predicted 383 false positives. It means it predicted as the 383 customers subscribe to a term deposit, but actually it is not true. These customers don't subscribe. This number is actually high. The model should not miss this, othervise they do not call the customer again, and lose the customer.","85dbe53f":"* Customers were contacted almost everyday. It doesn't convey extra infrmation, that's why I will 'drop day_of_week' from the dataset.\n\n* Most people are reached from cellular phones.\n* In may, most calls are made.\n* Duration of calls are generally between 0 - 1000 sn."}}