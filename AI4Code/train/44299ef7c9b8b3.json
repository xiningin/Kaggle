{"cell_type":{"4443d2a6":"code","db2ef3d9":"code","abc28feb":"code","a0b4ed14":"code","35eb8bcd":"markdown"},"source":{"4443d2a6":"import numpy as np\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\nds = pd.read_csv(\"..\/input\/emotion-detection-from-text\/tweet_emotions.csv\")","db2ef3d9":"#data prep\n\na_words = pd.Series(np.hstack(ds.content.str.split(\" \").values))\nwl = a_words.value_counts()[(a_words.value_counts()>100).values].index\nzz = pd.Series(wl)\n\nval = []\nfor i in tqdm(ds.content.str.split(\" \")):\n    val.append(zz.isin(i).values)\n    \nX = np.squeeze(val).astype(int)\n\ny = ds.sentiment.values","abc28feb":"#learn neighbor matrix\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nnbrs = KNeighborsClassifier(n_neighbors=10, algorithm='ball_tree').fit(X,y)\nnn_matrix = nbrs.kneighbors_graph(X).toarray()","a0b4ed14":"#display neighbors of a tweet\n\nnumb = 1000\nprint(\"Neighbors of \"+str(ds.iloc[numb].tweet_id))\nds[nn_matrix[numb]==1.]","35eb8bcd":"# Finding similar tweets with KNN"}}