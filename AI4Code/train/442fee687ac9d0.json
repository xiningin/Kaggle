{"cell_type":{"c2de758c":"code","6bc3b7f7":"code","d10d6276":"code","e8dc71e7":"code","afd480f7":"code","ec6cad79":"code","dcbd1b45":"code","76fc1227":"code","3f865528":"code","9a51da84":"code","524df546":"code","d17e237a":"code","3b3153be":"code","2ae97a47":"code","b97533df":"code","b3e4d0da":"code","a3dc7831":"code","6feacce8":"code","e130da87":"code","33915b41":"code","503da814":"code","d9ba1dac":"markdown","ded98479":"markdown","d1bf630f":"markdown","e7512589":"markdown","147f2a47":"markdown","4eea35c2":"markdown","2c744faf":"markdown","65c7d9fc":"markdown","f753bb04":"markdown","d3958576":"markdown","4bfbd872":"markdown","64e35409":"markdown","668ec188":"markdown","41ca3f08":"markdown","cd401b69":"markdown","81554500":"markdown","ed996073":"markdown"},"source":{"c2de758c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6bc3b7f7":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objects as go\n\nplt.style.use('ggplot')","d10d6276":"df = pd.read_csv('..\/input\/alcohol-comsumption-around-the-world\/drinks.csv')","e8dc71e7":"df.describe()","afd480f7":"sns.pairplot(df, kind='reg')","ec6cad79":"no_alcohol = df.total_litres_of_pure_alcohol == 0\ndfd = df[~no_alcohol]\n\nprint(df.country[no_alcohol])","dcbd1b45":"# Top 10 and smallest 10 alcohol consumers\n\nidx = dfd.total_litres_of_pure_alcohol.argsort().values\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=dfd.total_litres_of_pure_alcohol.iloc[idx[:10]], y=dfd.country.iloc[idx[:10]], orientation='h', name='total_liters', marker=dict(color='indianred')))\nfig.add_trace(go.Bar(x=[0], y=['...'], orientation='h'))\nfig.add_trace(go.Bar(x=dfd.total_litres_of_pure_alcohol.iloc[idx[-10:]], y=dfd.country.iloc[idx[-10:]], orientation='h', name='total_liters', marker=dict(color='indianred')))\nfig.update_layout(showlegend=False, xaxis_title='total_litres_alcohol', title='Top 10 and smallest 10 alcohol consumers')\nfig.show()","76fc1227":"# Top 10 and smallest 10 beer consumers\n\nidx = dfd.beer_servings.argsort().values\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=dfd.beer_servings.iloc[idx[:10]], y=dfd.country.iloc[idx[:10]], orientation='h', name='beer_servings', marker=dict(color='indianred')))\nfig.add_trace(go.Bar(x=[0], y=['...'], orientation='h'))\nfig.add_trace(go.Bar(x=dfd.beer_servings.iloc[idx[-10:]], y=dfd.country.iloc[idx[-10:]], orientation='h', name='beer_servings', marker=dict(color='indianred')))\nfig.update_layout(showlegend=False, xaxis_title='beer_servings', title='Top 10 and smallest 10 beer consumers')\nfig.show()","3f865528":"print(dfd.country[df.beer_servings == 0])","9a51da84":"# Top 10 and smallest 10 spirits consumers\n\nidx = dfd.spirit_servings.argsort().values\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=dfd.spirit_servings.iloc[idx[:10]], y=dfd.country.iloc[idx[:10]], orientation='h', name='spirit_servings', marker=dict(color='indianred')))\nfig.add_trace(go.Bar(x=[0], y=['...'], orientation='h'))\nfig.add_trace(go.Bar(x=dfd.spirit_servings.iloc[idx[-10:]], y=dfd.country.iloc[idx[-10:]], orientation='h', name='spirit_servings', marker=dict(color='indianred')))\nfig.update_layout(showlegend=False, xaxis_title='spirit servings', title='Top 10 and smallest 10 spirits consumers')\nfig.show()","524df546":"print(dfd.country[df.spirit_servings == 0])","d17e237a":"# Top 10 and smallest 10 wine consumers\n\nidx = dfd.wine_servings.argsort().values\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=dfd.wine_servings.iloc[idx[:10]], y=dfd.country.iloc[idx[:10]], orientation='h', name='wine_servings', marker=dict(color='indianred')))\nfig.add_trace(go.Bar(x=[0], y=['...'], orientation='h'))\nfig.add_trace(go.Bar(x=dfd.wine_servings.iloc[idx[-10:]], y=dfd.country.iloc[idx[-10:]], orientation='h', name='wine_servings', marker=dict(color='indianred')))\nfig.update_layout(showlegend=False, xaxis_title='wine_servings', title='Top 10 and smallest 10 wine consumers')\nfig.show()","3b3153be":"print(dfd.country[df.wine_servings == 0])","2ae97a47":"dfsel = df[df.country.isin(['Germany', 'France', 'Russian Federation',  'USA', \n                          'China', 'India', 'Italy', 'United Kingdom', 'Australia', 'South Africa', 'Brasil'])]\n\ndfsel = dfsel.append({'country': 'World', \n                      'beer_servings': df.beer_servings.sum(), \n                      'wine_servings': df.wine_servings.sum(),\n                      'spirit_servings': df.spirit_servings.sum(), \n                      'total_litres_of_pure_alcohol': df.total_litres_of_pure_alcohol.sum()}, ignore_index=True)\ndfsel['total_servings'] = dfsel.beer_servings + dfsel.spirit_servings + dfsel.wine_servings\ndfsel['prop_wine'] = dfsel.wine_servings \/ dfsel.total_servings\ndfsel['prop_beer'] = (dfsel.beer_servings) \/ dfsel.total_servings\ndfsel['prop_spirit'] = dfsel.spirit_servings \/ dfsel.total_servings\ndfsel = dfsel.sort_values(by='country')","b97533df":"colors = ['firebrick', 'yellow', 'cyan']\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=dfsel['prop_wine'], y=dfsel['country'], orientation='h', name='wine',\n                     marker=dict(color=colors[0])))\nfig.add_trace(go.Bar(x=dfsel['prop_beer'], y=dfsel['country'], orientation='h', name='beer',\n                     marker=dict(color=colors[1])))\nfig.add_trace(go.Bar(x=dfsel['prop_spirit'], y=dfsel['country'], orientation='h', name='spirit',\n                     marker=dict(color=colors[2])))\n\nfig.update_layout(barmode='stack', title='Types of alcohol shares')\n\nfig.show()","b3e4d0da":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n\nmod = LinearRegression().fit(df[['beer_servings', 'spirit_servings', 'wine_servings']], df.total_litres_of_pure_alcohol.values)\npred = mod.predict(df[['beer_servings', 'spirit_servings', 'wine_servings']])\nprint(r2_score(df.total_litres_of_pure_alcohol, pred))","a3dc7831":"sns.histplot(pred - df.total_litres_of_pure_alcohol)","6feacce8":"df['total_servings'] = df.beer_servings + df.spirit_servings + df.wine_servings\nsns.scatterplot(data=df, x='total_servings', y='total_litres_of_pure_alcohol')","e130da87":"from sklearn.linear_model import RANSACRegressor\nfrom sklearn.metrics import r2_score\n\nmod = RANSACRegressor(residual_threshold=2).fit(df[['beer_servings', 'spirit_servings', 'wine_servings']], df.total_litres_of_pure_alcohol.values)\n# plt.scatter(data=df.loc[mod.inlier_mask_], x='total_servings', y='total_litres_of_pure_alcohol', c='blue')\n# plt.scatter(data=df.loc[~mod.inlier_mask_], x='total_servings', y='total_litres_of_pure_alcohol', c='red')\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df.loc[mod.inlier_mask_, 'total_servings'], \n                         y=df.loc[mod.inlier_mask_, 'total_litres_of_pure_alcohol'],\n                        mode='markers', name='inliers', text=df.loc[mod.inlier_mask_, 'country']))\nfig.add_trace(go.Scatter(x=df.loc[~mod.inlier_mask_, 'total_servings'], \n                         y=df.loc[~mod.inlier_mask_, 'total_litres_of_pure_alcohol'],\n                        mode='markers', name='outliers', text=df.loc[~mod.inlier_mask_, 'country']))\nfig.show()","33915b41":"df.loc[~mod.inlier_mask_]","503da814":"print(mod.estimator_.coef_)\npred = mod.predict(df.loc[mod.inlier_mask_, ['beer_servings', 'spirit_servings', 'wine_servings']])\nprint(r2_score(df.loc[mod.inlier_mask_, 'total_litres_of_pure_alcohol'], pred))","d9ba1dac":"First notebook here ! Giving it a shot, as an exercise, with this curious dataset containing alcohol consumption patterns over the world. \n\nMany interesting relationships could be explored with other country indicators (GDP per capita, life expectancy, Gini index...) but I will keep it minimal for now.","ded98479":"# Rankings","d1bf630f":"While looking at the data, I found it weird to have different units (servings on the one hand, pure alcohol liters on the other), and was wondering if there was a fixed relationship between those. Let's find out.\n\nNaturally one would imagine a linear formula with a different coefficient for each beverage.","e7512589":"We can see that Slavic and Caribbean countries are the most frequent in the top of this ranking, which can be explained by social inequalities amidst easy access to strong beverages. Grenade, for example, has been grappling with this problem for [many years](https:\/\/www.gov.gd\/sites\/default\/files\/egov\/ncodc\/draft-alcohol-policy.pdf).\n\nAlso, some countries seem to have a zero spirit consumption, namely:","147f2a47":"# Shares by beverage","4eea35c2":"Let us compare the proportion of each alcoholic beverage worldwide and in some selected countries.","2c744faf":"If we look at the direct servings -> liters relationship, the outliers are very apparent.","65c7d9fc":"# Joint distributions","f753bb04":"France is at the first place!  According to this ranking, wine seems to be the elixir of richer countries. I am more surprised to see a lot of countries with zero wine consumption, probably due to the cultural absence of it.","d3958576":"Worldwide, the three types of beverages are quite balanced. ","4bfbd872":"There is a lot more variety than I expected in this top 10. Only 2 countries have a zero beer consumption.","64e35409":"Sadly the linear relationship is not exact. It gets weirder when we look at the residuals' distribution, which suggests the presence of outliers for which the linear relationship underestimates real alcohol.","668ec188":"This is weird. It suggests the use of the [RANSAC regressor](https:\/\/sklearn.org\/modules\/linear_model.html#ransac-regression) to identify these outliers. This is a very interesting method for robust regression, that fits a linear regression to a population of \"inlier\" points and identifies outliers.","41ca3f08":"The robust regressor is a very good predictor of litres of pure alcohol per beverage, although the coefficients are not what I expected (approximately 18 cL of alcohol per serving, for all beverages)\n\nBut looking at who the outliers are, nothing jumps at first sight. Any ideas on where this curious relationship comes from ?","cd401b69":"Before looking at the rankings, one can note that several countries have zero alcohol consumption (at least according to their figures...). Some surprises lie in this list, like Monaco for which I emit [some doubts](https:\/\/youtu.be\/M4AKfRkwT2Q?t=648).\n\nLet us separate them from the rest.","81554500":"Note the presence of several small countries with advantageous fiscality among the top alcohol consumers, like Andorra and Luxembourg where most likely inhabitants from neighboring countries go buy tax-free alcohol.\n\nLet us look at particular beverages.","ed996073":"# Relationship between servings and liters ?"}}