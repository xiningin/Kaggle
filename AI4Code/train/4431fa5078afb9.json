{"cell_type":{"4a09b2ca":"code","446d8473":"code","d97d4dab":"code","4272dbb6":"code","22f08ac4":"code","5ee117b1":"code","71f50a66":"code","c36fd694":"code","9ee5b170":"code","978d9ec2":"code","ad0d949e":"code","c34e3410":"code","8036af35":"code","e17a11de":"code","cf61af23":"code","d20988ab":"code","9e0ee4a1":"code","de418a47":"code","3cb629b6":"markdown","4318ec7a":"markdown","16061cb6":"markdown","dd02d997":"markdown","7537126c":"markdown","73c3724d":"markdown","b8a64c69":"markdown","ce7613f4":"markdown","55716361":"markdown","90375362":"markdown","daa6bcce":"markdown","9dc3de12":"markdown","f0d655e3":"markdown","e914ccfb":"markdown","bbe4c8c6":"markdown","f29248d6":"markdown","bef0ea73":"markdown","d2babc2d":"markdown","1e2e91a9":"markdown","7b406fcf":"markdown","64999b33":"markdown"},"source":{"4a09b2ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","446d8473":"#Javobingizni shu yerga yozing\n","d97d4dab":"# Mening javobim\ndf = pd.read_csv(\"https:\/\/github.com\/anvarnarz\/praktikum_datasets\/blob\/main\/melb_data.csv?raw=true\")\ndf.head()","4272dbb6":"#Javobingizni shu yerga yozing\n","22f08ac4":"#Javobingizni shu yerga yozing\n","5ee117b1":"#Javobingizni shu yerga yozing\n","71f50a66":"print(df['BuildingArea'].mean())\nprint(int(df['YearBuilt'].mean()))","c36fd694":"#Javobingizni shu yerga yozing\n","9ee5b170":"df.fillna({'BuildingArea':df['BuildingArea'].mean(), 'YearBuilt':int(df['YearBuilt'].mean())})","978d9ec2":"#Javobingizni shu yerga yozing\n","ad0d949e":"df.groupby(['Regionname']).YearBuilt.mean().astype(int)","c34e3410":"#Javobingizni shu yerga yozing\n","8036af35":"groups = df.groupby(['Regionname']).YearBuilt.mean() # Bu Series obyekti\nfor idx in groups.index:\n   df[df.Regionname==idx] = df[df.Regionname==idx].fillna({'YearBuilt':groups[idx]})","e17a11de":"df.head()","cf61af23":"#Javobingizni shu yerga yozing\n","d20988ab":"#Javobingizni shu yerga yozing\n","9e0ee4a1":"#Javobingizni shu yerga yozing\n","de418a47":"df.isnull().sum()","3cb629b6":"## 6-VAZIFA. `BuildingArea` ustunidagi `NaN` qiymatlarni to'ldiramiz\n`BuildingArea` bino qurilgan yerning maydonini bildiradi. Bu qiymatlarni tahmin qilish uchun qaysi ustun qiymatlaridan foydalanish to'g'ri deb hisoblaysiz?","4318ec7a":"### 5.2. `df` `YearBuilt` ustunidagi `NaN` qiymatlarni yuqoridagi qiymatlar bilan almashtiring.\n`df[df.Regionname='Eastern Metropolitan']=...`\n\nHar bir `Regionname` uchun qiymatlarni bittalab kiritmaslik uchun for siklidan foydalanishingiz mumkin.","16061cb6":"## 4-VAZIFA: `BuildingArea` va `YearBuilt` ustunlaridagi `NaN` qiymatlarni shu sutun uchun o'rta qiymatlar bilan almashtiring\n**DIQQAT!** `YearBuilt` ustuni qiymatlari butun son bo'lishi kerak","dd02d997":"## 3-VAZIFA. Quyidagi 2 ustun uchun o'rta qiymatlarni hisoblang:\n- BuildingArea\n- YearBuilt (**butun son qaytishi kerak**)","7537126c":"## YAKUNIY JADVAL\nAhamiyat bering, yakuniy jadvalda `NaN` qiymatlar bo'lmasligi kerak.","73c3724d":"**To'g'ri javob:**","b8a64c69":"**To'g'ri javob:**","ce7613f4":"### 6.4 `BuildingArea` ustunidagi mavjud `NaN` qiymatlarni o'zingiz to'g'ri deb bilgan usul bilan to'ldiring.","55716361":"## Avvalgi amaliyotda `GitHub`ga yuklangan `melb_data.csv` faylni `df` ga chaqirib oling","90375362":"### 7-VAZIFA. Yuqoridagi vazifalardan so'ng, bizda faqatgina `CouncilArea` ustunida `NaN` qiymatlar qolishi kerak xolos.\n**Bu ustundagi `NaN` qiymatlarni avvalgi qatordagi qiymatlar bilan to'ldirib keting. Natijani saqlab qoling**","daa6bcce":"**To'g'ri javob:**","9dc3de12":"Yuqoridagi Dataframe Melburn shahri uchun sotuvdagi uylar haqida m'lumotlarni jamlagan.\n\nQuyida jadvalning ba'zi sutunlari tarjimasi berilgan (qolganini o'zingiz Google yordamida tarjima qilishingiz mumkin):\n- `Room` - xonalar soni\n- `Type` - uyning turi (h - villa\/kottej\/hovli; u - kvartira; t - shahardagi hovli)\n- `Price` - narx\n- `Bathroom` - tualet-vanna\n- `Landsize` - yerning maydoni (hovli uchun)\n- `BuildingArea` - Bino qurilgan yerning maydoni\n- `YearBuilt` - qurilgan yili\n- `Lattitude` va `Longitude` - GPS kordinatalar\n- `Regionname` - Region","f0d655e3":"### 6.2 Xonalar va uy turi bo'yicha o'rta qiymatni olib ko'ring.","e914ccfb":"## 1-VAZIFA. `df` dagi barcha ustunlardagi`NaN` qiymatlar sonini chiqaring","bbe4c8c6":"### 6.3 Ahamiyat bering, 10 xonalik uylar uchun o'rta qiymat chiqmayapti. Bu nimadan dalolat beradi? Jami 10 xonalik uylar nechta? Ular bilan qanday yo'l tutishni maslahat berasiz?","f29248d6":"## 2-VAZIFA. `df` barcha `NaN` qiymatlarni 0 bilan almashtiring","bef0ea73":"## 5-VAZIFA. `.groupby()`\nUstun uchun o'rta qiymat har doim ham aniq bo'lavermaydi. Keling avval `YearBuilt` ustuni uchun aniqroq qiymat topishga harakat qilamiz. \n\nBuning uchun `Regionname` ustuni qiymatlaridan foydalanishimiz mumkin, ya'ni bir Regiondagi binolar tahminan bir hil yillarda qurilgan deb tahmin qilsak bo'ladi.\n\n### 5.1 `.groupby()` yordamida `df` qiymatlarini `Regionname` ustuni bo'yicha guruhlang va `YaerBuilt` ustuni uchun o'rta qiymatni hisoblang.","d2babc2d":"**To'g'ri javob**","1e2e91a9":"### 6.1 `df`ni xonalar soni bo'yicha o'rta qiymat olib ko'ring","7b406fcf":"# \ud83d\udd3a DIQQAT! \n#### **Agar alohida aytilmagan bo'lsa, `df`ga kiritilgan o'zgartirishlarni saqlamang (`inplace=False`)**","64999b33":"### `YearBuilt` uchun yana ham aniqroq o'rta qiymat hisoblashning qanday yo'lini taklif qilgan bo'lar edingiz?"}}