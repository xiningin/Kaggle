{"cell_type":{"3d05ce60":"code","7b449db4":"code","25001a99":"code","9942b2a4":"code","8ab5d14c":"code","df812275":"code","5caf1334":"code","44762962":"code","14eb22c4":"code","419594b4":"code","cf093e46":"code","8dc60d0b":"code","aa7fb486":"code","143f4fab":"markdown","a96c8108":"markdown","e05e29d2":"markdown","465351f0":"markdown","0d7d4718":"markdown","fe98991b":"markdown","e003c7a0":"markdown","fb057702":"markdown","9eb35586":"markdown","6495875a":"markdown","fac14056":"markdown","529ae6ac":"markdown","3e745d57":"markdown","04748bfb":"markdown","59a98d46":"markdown"},"source":{"3d05ce60":"import numpy as np\nimport pandas as pd\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport tensorflow as tf","7b449db4":"model = tf.keras.models.load_model('..\/input\/pet-breed-model-tensorflow-2-keras\/petbreed_model\/')\n\npawbreed_df = pd.read_csv('..\/input\/pawpularity-breed-list\/breed_list.csv')\npawbreed_label_df = labels_df = pd.read_csv('..\/input\/pawpularity-breed-list\/petbreed_labels.csv')\npawpularity_df = pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')","25001a99":"cat_ids = []\n\nfor counter in range(10,15):\n    cat_id = pawbreed_label_df[pawbreed_label_df['cat_or_dog'] == 1]['id'].values[counter]\n    print('Cat breed number ' + str(counter) + ' has class ' + str(cat_id))\n\n    cat_ids += [pawbreed_df[pawbreed_df['Breed'] == cat_id]['Id'].values[0]]\n\nprint('First 5 images ids of cats: ' + str(cat_ids))\n\nfor ids in cat_ids:\n    t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n    plt.imshow(np.array(t1_img))\n    plt.show()","9942b2a4":"dog_ids = []\n\nfor counter in range(10,15):\n    dog_id = pawbreed_label_df[pawbreed_label_df['cat_or_dog'] == 0]['id'].values[counter]\n    print('Dog breed number ' + str(counter) + ' has class ' + str(dog_id))\n\n    dog_ids += [pawbreed_df[pawbreed_df['Breed'] == dog_id]['Id'].values[0]]\n\nprint('First 5 images ids of dogs: ' + str(dog_ids))\n\nfor ids in dog_ids:\n    t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n    plt.imshow(np.array(t1_img))\n    plt.show()","8ab5d14c":"persian_breed_id = pawbreed_label_df[pawbreed_label_df['label'] == 'Persian']['id'].values[0]\nprint('Siamese breed id is ' + str(persian_breed_id))\n\npersian_ids = pawbreed_df[pawbreed_df['Breed'] == persian_breed_id]['Id'].values[:5]\n\nprint('First 5 images ids of this breed: ' + str(persian_ids))\n\nfor ids in persian_ids:\n    t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n    plt.imshow(np.array(t1_img))\n    plt.show()","df812275":"poodle_breed_id = pawbreed_label_df[pawbreed_label_df['label'] == 'Poodle']['id'].values[0]\nprint('Poodle breed id is ' + str(poodle_breed_id))\n\npoodle_ids = pawbreed_df[pawbreed_df['Breed'] == poodle_breed_id]['Id'].values[:5]\n\nprint('First 5 images ids of this breed: ' + str(poodle_ids))\n\nfor ids in poodle_ids:\n    t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n    plt.imshow(np.array(t1_img))\n    plt.show()","5caf1334":"model.summary()\n\nimage_size = 299\n\nimg = Image.open('..\/input\/petfinder-pawpularity-score\/train\/063c62c2be5f2f7abfc5e2ff5ba014ab.jpg').resize((image_size, image_size))\nplt.imshow(np.array(img))\nplt.show()\n\nres = model.predict(np.asarray(img).reshape(1, image_size, image_size, 3))\n\nbest_scores = np.argsort(res*-1)[0,:3]\n\nfor i in range(0, 3):\n    print('Confidence: ' + str(res[0,best_scores[i]]))\n    print('Breed: ' + labels_df.iloc[best_scores[i]]['label'])\n    \nimg = Image.open('..\/input\/petfinder-pawpularity-score\/train\/06738f64265a7371bd0788fbfd95b510.jpg').resize((image_size, image_size))\nplt.imshow(np.array(img))\nplt.show()\n\nres = model.predict(np.asarray(img).reshape(1, image_size, image_size, 3))\n\nbest_scores = np.argsort(res*-1)[0,:3]\n\nfor i in range(0, 3):\n    print('Confidence: ' + str(res[0,best_scores[i]]))\n    print('Breed: ' + labels_df.iloc[best_scores[i]]['label'])","44762962":"img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/1a10978f92e91f0a14ede103fbc09e29.jpg').resize((image_size, image_size))\nplt.imshow(np.array(img))\nplt.show()\n\nres = model.predict(np.asarray(img).reshape(1, image_size, image_size, 3))\n\nbest_scores = np.argsort(res*-1)[0,:3]\n\nfor i in range(0, 3):\n    print('Confidence: ' + str(res[0,best_scores[i]]))\n    print('Breed: ' + labels_df.iloc[best_scores[i]]['label'])\n    \nimg = Image.open('..\/input\/petfinder-pawpularity-score\/train\/04fef9f129bc6e4b90644d4290fde8c3.jpg').resize((image_size, image_size))\nplt.imshow(np.array(img))\nplt.show()\n\nres = model.predict(np.asarray(img).reshape(1, image_size, image_size, 3))\n\nbest_scores = np.argsort(res*-1)[0,:3]\n\nfor i in range(0, 3):\n    print('Confidence: ' + str(res[0,best_scores[i]]))\n    print('Breed: ' + labels_df.iloc[best_scores[i]]['label'])","14eb22c4":"counts = pawbreed_df.groupby('Breed')['Pawpularity'].count()\n\nprint('5 smallest groups:')\nprint(counts.nsmallest(5))\n\nprint('5 largest groups:')\nprint(counts.nlargest(5))\n\nfig1, ax1 = plt.subplots()\nax1.pie(counts, shadow=True, startangle=90)\nax1.axis('equal')\n\nplt.show()","419594b4":"median = pawbreed_df.groupby('Breed')['Pawpularity'].median()\n\nprint('3 least pawpular classes by median:')\nleast = median.nsmallest(3)\nprint(least)\n\nfor index, row in least.iteritems():\n    print(index)\n    print('Pawularity: ' + str(row))\n    \n    median_ids = pawbreed_df[pawbreed_df['Breed'] == index]['Id'].values[:3]\n\n    for ids in median_ids:\n        t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n        plt.imshow(np.array(t1_img))\n        plt.show()\n        \nprint('3 most popular classes by median:')\nmost = median.nlargest(3)\nprint(most)\n\nfor index, row in most.iteritems():\n    print(index)\n    print('Pawularity: ' + str(row))\n    \n    median_ids = pawbreed_df[pawbreed_df['Breed'] == index]['Id'].values[:3]\n\n    for ids in median_ids:\n        t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n        plt.imshow(np.array(t1_img))\n        plt.show()\n","cf093e46":"average = pawbreed_df.groupby('Breed')['Pawpularity'].mean()\n\nprint('3 least pawpular classes by average:')\nleast = average.nsmallest(3)\nprint(least)\n\nfor index, row in least.iteritems():\n    print(index)\n    print('Pawularity: ' + str(row))\n    \n    average_ids = pawbreed_df[pawbreed_df['Breed'] == index]['Id'].values[:3]\n\n    for ids in average_ids:\n        t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n        plt.imshow(np.array(t1_img))\n        plt.show()\n        \nprint('3 most popular classes by average:')\nmost = average.nlargest(3)\nprint(most)\n\nfor index, row in most.iteritems():\n    print(index)\n    print('Pawularity: ' + str(row))\n    \n    median_ids = pawbreed_df[pawbreed_df['Breed'] == index]['Id'].values[:3]\n\n    for ids in median_ids:\n        t1_img = Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + ids + '.jpg').resize((400, 400), Image.BICUBIC)\n        plt.imshow(np.array(t1_img))\n        plt.show()\n","8dc60d0b":"print('Sphynx average Pawpularity: ' + str(average[115]))\nprint('American Hairless average Pawpularity: ' + str(average[6]))\n\nprint('Domestic Long Hair average Pawpularity: ' + str(average[52]))\nprint('Maltese average Pawpularity: ' + str(average[78]))","aa7fb486":"print('Chihuahua average Pawpularity: ' + str(average[35]))\nprint('Scots Terrier average Pawpularity: ' + str(average[62]))\n\nprint('Great Dane average Pawpularity: ' + str(average[62]))\nprint('Saint Bernard average Pawpularity: ' + str(average[100]))\n","143f4fab":"Ok... that seemed to work well. How about a dog next? Poodle images?\n\nYep. Looks ok as well.","a96c8108":"I really _do_ think fluffy pets have an unfair advantage to less hairy ones. Let's have a look and see if I am correct.\n\nFirst, let's have a look at Sphynx, a hairless cat breed, and American Hairless and compare them to Domestic Long Hair and Maltese (which we already know is popular).\n\nIt could be a coincidence but it seems like there is something here...","e05e29d2":"How about size? I guess this is mostly a dog-issue since cats don't differ _that_ much in size.\n\nClass 35, Chihuahua and 102, Scotch Terrier against 62, Great Dane and 100, Saint Bernard...\n\nNot much of a pattern in these 4 examples... further investigation could be interesting.","465351f0":"Then import the data files. For now these are in a private dataset while I work on making a decent model, then later I will release the files as well as the model.\n\nFeel free to use them if you want to. :-)","0d7d4718":"So there you have it. The classifications are not perfect (far from it) but I think I am unto something here and this should at least be a starting point for anyone agreeing that this is an attribute that should be taken into consideration.\n\nUnfortunately for some of the pets it seems like they simply have their breed against them which really is not that much of a relevation after all... :-)\n","fe98991b":"Let's have a quick look at the model itself.\n\nInput image size (since it's an Inception model) is 299 by 299 pixels.\n\nLet's put the two falsely classified images through it (the dogs that the model called cats). What we see that the model is not very confident on the first image. It basically tells us that it could be anything. :-)\n\nThe second image the model is fairly confident that it is a hairless cat. Poor dog...","e003c7a0":"Being more a dog person than a cat person all cats look more or less the same to me. Persian seem to stand out however with it's broad, furry head. All 5 look like Persian to me.","fb057702":"First... let's import the libraries","9eb35586":"Let's try something that worked better. First one of the Persian cats and then one of the Poodles. \n\nLooks fine.","6495875a":"First let us see if the classification can distinguish cats from dogs.\n\n5 images classified as cats by my model. 3 correct and two dogs. Hmm...","fac14056":"Ok, let us look for dogs then. That's better. All dogs.","529ae6ac":"Alright then... let's try average pawpularity (knowing that it will at least partly give us the same results).\n\nThe least pawpular are still the same, for the same reasons (small groups and technical qualities of the images probably weighs more than breed here).\n\nFor the most popular ones we now have 82, Nebelung as number 3, which also is a fluffy breed and 78, Maltese again as number 2.\n\nI feel there is a pattern emerging now even though it is not very clear. Maybe someone should make a fluffy-classifier instead. :-)","3e745d57":"What's next? Let's take a look at the amount of images in each class\/breed.\n\nIt seems that there are quite a few classes with only a single image, and a few very big ones with more than 2000 images in the largest class.\n\nThis could be because the breeds are very popular or because the model is wrong (which is likely since the model finds it difficult to discern between the different cat breeds). It is likely that class 116 and 108 is \"generic cat\" rather than \"Siamese\" and \"Tabby\". This would warrant further investigation.","04748bfb":"Ok, let's have a look at the median pawpularity for each breed.\n\nWell... a street dog, a tail-less cat, half the head of a cat drinking milk seem to be some of the least pawpular pets.\n\nIt seems fluffy cats and dogs are most pawpular...","59a98d46":"One obvious fact is that pawpularity could (partly) be determined by pet breed rather than artistic or technical qualities in the images.\n\nSince breed is not part of the metadata I decided to make a quick-and-dirty classification myself. One issue with this is that a lot of these animals are likely not to be purebreeds but still if they have the general caracteristics of a specific breed then that may be enough to influence the pawpularity in a certain direction.\n\nI trained a NN (transfer learning in mobilenet in TensorFlow). The training data came from the the huge \"Cat Breeds Dataset\" (https:\/\/www.kaggle.com\/ma7555\/cat-breeds-dataset) and the awesome \"70 Dog Breeds-Image Data Set\" (https:\/\/www.kaggle.com\/gpiosenka\/70-dog-breedsimage-data-set) dataset. The \"Cat Breeds Dataset\" was unbalanced and noisy which probably influenced quality of my model.\n\nAs you will discover below the model is not very precise at this point but still it should give us some idea wether the hypothesis holds or not."}}