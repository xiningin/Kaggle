{"cell_type":{"b3eea2eb":"code","a928d71f":"code","fafb287e":"code","ea41c809":"code","1ba84c2c":"code","8ae8cb25":"code","4229cbd1":"code","66d46afb":"code","448c7cac":"code","bb73f1f8":"code","c2e26743":"code","56a4b4be":"code","e7694380":"code","c9bfd979":"code","c0e914ad":"code","ffb9fe00":"code","eb99a0be":"markdown","39c1472e":"markdown","a4d63e90":"markdown","6a23df09":"markdown","9d928ea1":"markdown","4f0665d8":"markdown","9c0fddcd":"markdown","d786ef04":"markdown"},"source":{"b3eea2eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a928d71f":"df=pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')","fafb287e":"df","ea41c809":"df.isnull().sum()","1ba84c2c":"df.dtypes","8ae8cb25":"from matplotlib import pyplot as plt\nimport seaborn as sns","4229cbd1":"# Visualise two features based on target\nsns.FacetGrid(df,hue=\"species\").map(plt.scatter,'sepal_length','sepal_width').add_legend()\nplt.gcf().set_size_inches(10,6)\nplt.show()","66d46afb":"sns.FacetGrid(df,hue=\"species\").map(plt.scatter,'petal_length','petal_width').add_legend()\nplt.style.use(\"fivethirtyeight\")\nplt.gcf().set_size_inches(10,6)\nplt.show()","448c7cac":"sns.pairplot(df,hue='species')\nplt.style.use(\"fivethirtyeight\")\nplt.gcf().set_size_inches(12,8)\nplt.show()\n","bb73f1f8":"import graphviz\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report,confusion_matrix,plot_confusion_matrix,accuracy_score\nfrom sklearn.model_selection import train_test_split\n","c2e26743":"X=df.iloc[:,:4]\nY=df.iloc[:,4:]","56a4b4be":"Xtrain,Xtest,Ytrain,Ytest=train_test_split(X,Y,test_size=0.30)\nclf=DecisionTreeClassifier(criterion=\"entropy\", max_depth=4)\nclf.fit(Xtrain,Ytrain)\npred=clf.predict(Xtest)\ndtc=accuracy_score(pred,Ytest);\nprint(\"REPORT: \")\nprint(confusion_matrix(Ytest,pred))\nprint(classification_report(Ytest,pred))\nplot_confusion_matrix(clf,Xtest,Ytest)\nplt.grid(False)\nplt.gcf().set_size_inches(12,6)","e7694380":"dot_data=tree.export_graphviz(clf,out_file=None)\ngraph=graphviz.Source(dot_data)\ngraph","c9bfd979":"df","c0e914ad":"Xtrain,Xtest,Ytrain,Ytest=train_test_split(X,Y,test_size=0.30)\nclf=DecisionTreeClassifier(criterion=\"gini\", max_depth=4)\nclf.fit(Xtrain,Ytrain)\npred=clf.predict(Xtest)\ndtc=accuracy_score(pred,Ytest);\nprint(\"REPORT: \")\nprint(confusion_matrix(Ytest,pred))\nprint(classification_report(Ytest,pred))\nplot_confusion_matrix(clf,Xtest,Ytest)\nplt.grid(False)\nplt.gcf().set_size_inches(12,6)","ffb9fe00":"dot_data=tree.export_graphviz(clf,out_file=None)\ngraph=graphviz.Source(dot_data)\ngraph","eb99a0be":"# DecisionTreeClassifier","39c1472e":"# Building classification model","a4d63e90":"# By using 'gini' attribute selector","6a23df09":"# Visualizing Iris data","9d928ea1":"Observation:  Blueprints(Iris-setosa) are separated perfectly as compared to yellowprints(Iris-virginica) and orangeprints(Iris-versicolor) for features 'Sepal_length' and 'Sepal_width'","4f0665d8":"# By using 'entrophy' attribute selector ","9c0fddcd":"Observation: 1.We clearly say that blueprints are totally separated with other two classes.\n\n             2.Versicolor and virginica are partially overlapping with each other.\n             \n             3.Some features have less overlapping between versicolor and virginica.","d786ef04":"Observation:  In both cases blueprints(Iris-setosa) are perfectly separated as compared to other labels"}}