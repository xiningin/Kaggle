{"cell_type":{"f64cf77a":"code","303873db":"code","4b884059":"code","49614651":"code","9a70aea2":"code","bde32ee8":"code","eaef8e18":"code","2f9c200e":"code","f2f5944a":"code","dd29b946":"code","27f0d332":"code","1ada0c75":"code","97954115":"code","5936a354":"code","90d4c501":"code","eee3560f":"code","6c6ec0e8":"code","efc7bc3d":"code","e750d51f":"code","f6af6139":"code","74df8dfa":"code","60d908d5":"code","15b4c20b":"code","d0c311e1":"markdown","8cfe155d":"markdown","eaffbaa8":"markdown","c4d856b6":"markdown","2fd1c479":"markdown","a561ab64":"markdown","16599be7":"markdown","bddd029b":"markdown","49236e6d":"markdown","191c1cc8":"markdown","258abaa3":"markdown","ee393057":"markdown","4240da8f":"markdown","779b7b34":"markdown","58f6c4a3":"markdown"},"source":{"f64cf77a":"# y = b0 + b1*x1 + b2*x2 + b3*x3 + b4*D1\n\n# multiple independent feature or variable and one dependent variable ","303873db":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sea","4b884059":"data = pd.read_csv('..\/input\/50-startups-dataset\/50_Startups.csv')\ndata.head(10)","49614651":"sea.countplot(x='State',data=data , hue='State')","9a70aea2":"sea.countplot(x='Marketing Spend',data=data)","bde32ee8":"data['R&D Spend'].plot.hist()","eaef8e18":"data['Profit'].plot.hist()","2f9c200e":"sea.pairplot(data=data , corner=True)","f2f5944a":"# simply\ndata.corr()","dd29b946":"data.corr().style.background_gradient(cmap = 'plasma')","27f0d332":"data.isnull().sum()","1ada0c75":"sea.heatmap(data.isnull() , cmap='plasma')","97954115":"sea.boxplot(x='Profit',y='State',data=data)","5936a354":"data.head(4)","90d4c501":"X = data.iloc[: , :-1].values\ny = data.iloc[: , -1].values\nprint(X.shape)\nprint(y.shape)","eee3560f":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\ncol_transformer = ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[3])],remainder='passthrough')\nX = np.array(col_transformer.fit_transform(X))\n\nprint(X)","6c6ec0e8":"from sklearn.model_selection import train_test_split\nX_train , X_test , y_train , y_test = train_test_split(X , y ,train_size=0.8 , random_state=0)","efc7bc3d":"print(X_train.shape)\nprint(X_test.shape)\n\nprint(y_train.shape)\nprint(y_test.shape)","e750d51f":"from sklearn.linear_model import LinearRegression\n\nregressor = LinearRegression()\n\nregressor.fit(X_train,y_train)","f6af6139":"y_pred = regressor.predict(X_test)\ny_pred","74df8dfa":"np.set_printoptions(precision=2)\n\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1 ))","60d908d5":"from sklearn.metrics import r2_score\n\nr2_score(y_test, y_pred)","15b4c20b":"accuracy = regressor.score(X_test,y_test)\nprint(accuracy,\" % \")","d0c311e1":"    if we find categorical column we need to create dummy varibale\n    \n    dummy variable trap - D2 = 1 - D1 , this would be multicolinearity ","8cfe155d":"# 7. Training the Multiple Linear Regression model ","eaffbaa8":"# 8. Predicting The Test Set results","c4d856b6":"# 2. Data Analyzing","2fd1c479":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    To drop col. which has more null or missing values\n    data.drop('Column_name', axis= 1 , inplace=True)\n\n    to drop na values \n    data.dropna(inplace=True)","a561ab64":"# we don't have to applied feature scalling , coefficient Multiple and Compemsate into same space","16599be7":"# 6. Splitting the data into training and Test set","bddd029b":"# 3.Checking for null or missing data","49236e6d":"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    Catogerical variable\n    \n    var = pd.get_dummies(dataset['col_Name'] , drop_first=True)\n    \n    we can get dummies variable single by single if there is  more Categorical data\n    \n    and then concatenate the dummies variable\n    \n    data = pd.concat([dataset,col-1,col-1,col-3,...],axis=1)\n    \n    and then drop the origional column \n    data = pd.drop([dataset, col-1,col-2,...],axis=1,inplace= True)\n    \n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","191c1cc8":"# 1. Import Libraries and Dataset","258abaa3":"# Correlation Matrix\n\n    A correlation matrix is simply a table which displays the correlation. The measure is best used in variables that demonstrate a linear relationship between each other. The fit of the data can be visually represented in a scatterplot. ... A correlation matrix consists of rows and columns that show the variables.","ee393057":"    Statistical Signification\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    Understanding P-value \n    ----------------------\n    \n    ","4240da8f":"# 5. Label Encoding\n    \n    State is Categorial data and in String Formate","779b7b34":"# 9. Check Accuracy Score","58f6c4a3":"# 4. create Matrix of Feature's "}}