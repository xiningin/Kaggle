{"cell_type":{"1334eb0f":"code","ae354bfd":"code","2b1c49a6":"code","29376682":"code","448274a2":"code","9458d1a0":"code","1bbadb9c":"code","e4cd0aaf":"code","a9f2ddfe":"code","944c6285":"code","0adb0b4f":"code","78f8dacf":"code","325d101a":"markdown","e16c661d":"markdown"},"source":{"1334eb0f":"import pandas as pd\nimport numpy as np\nimport plotly_express as px\n\n# Suicide Data\nsuicides = pd.read_csv(\"..\/input\/suicide-rates-overview-1985-to-2016\/master.csv\")\ndel suicides['HDI for year']\ndel suicides['country-year']\n\n# Country ISO Codes\niso_country_map = pd.read_csv(\"..\/input\/countries-iso-codes\/wikipedia-iso-country-codes.csv\")\niso_country_map = iso_country_map.rename(columns = {'English short name lower case':\"country\"})\n\n# Country Continents\nconcap =pd.read_csv(\"..\/input\/country-to-continent\/countryContinent.csv\", encoding='iso-8859-1')[['code_3', 'continent', 'sub_region']]\nconcap = concap.rename(columns = {'code_3':\"Alpha-3 code\"})\n\ncorrect_names = {'Cabo Verde': 'Cape Verde', 'Macau': 'Macao', 'Republic of Korea': \"Korea, Democratic People's Republic of\" , \n 'Russian Federation': 'Russia',\n 'Saint Vincent and Grenadines':'Saint Vincent and the Grenadines' \n , 'United States': 'United States Of America'}\n\ndef correct_country(x):\n    if x in correct_names:\n        return correct_names[x]\n    else:\n        return x\n\nsuicides['country'] = suicides['country'].apply(lambda x : correct_country(x))\n\nsuicides = pd.merge(suicides,iso_country_map,on='country',how='left')\nsuicides = pd.merge(suicides,concap,on='Alpha-3 code',how='left')\nsuicides['gdp'] = suicides['gdp_per_capita ($)']*suicides['population']","ae354bfd":"suicides_gby_Continent = suicides.groupby(['continent','sex','year']).aggregate(np.sum).reset_index()\nsuicides_gby_Continent['gdp_per_capita ($)'] = suicides_gby_Continent['gdp']\/suicides_gby_Continent['population']\nsuicides_gby_Continent['suicides\/100k pop'] = suicides_gby_Continent['suicides_no']*1000\/suicides_gby_Continent['population']\n# 2016 data is not full\nsuicides_gby_Continent=suicides_gby_Continent[suicides_gby_Continent['year']!=2016]\n","2b1c49a6":"suicides_gby_Continent.head()","29376682":"suicides_gby_Continent_2007 = suicides_gby_Continent[suicides_gby_Continent['year']==2007]","448274a2":"px.scatter(suicides_gby_Continent_2007,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)')","9458d1a0":"px.scatter(suicides_gby_Continent_2007,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)',color='continent')","1bbadb9c":"px.scatter(suicides_gby_Continent_2007,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)',color='continent',size ='suicides\/100k pop')","e4cd0aaf":"px.scatter(suicides_gby_Continent_2007,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)', size = 'suicides\/100k pop', color='continent',symbol='sex')","a9f2ddfe":"px.scatter(suicides_gby_Continent_2007,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)', size = 'suicides\/100k pop', color='continent',facet_col='sex')","944c6285":"px.scatter(suicides_gby_Continent,x = 'suicides\/100k pop', y = 'gdp_per_capita ($)',color='continent',\n           size='suicides\/100k pop',symbol='sex',animation_frame='year', animation_group='continent',range_x = [0,0.6],\n          range_y = [0,70000],text='continent')\n","0adb0b4f":"european_suicide_data = suicides[suicides['continent'] =='Europe']\neuropean_suicide_data_gby = european_suicide_data.groupby(['age','sex','year']).aggregate(np.sum).reset_index()\neuropean_suicide_data_gby['suicides\/100k pop'] = european_suicide_data_gby['suicides_no']*1000\/european_suicide_data_gby['population']\n\n# A single line to create an animated Bar chart too.\npx.bar(european_suicide_data_gby,x='age',y='suicides\/100k pop',facet_col='sex',animation_frame='year', \n       animation_group='age', \n       category_orders={'age':['5-14 years', '15-24 years', '25-34 years', '35-54 years', \n       '55-74 years', '75+ years']},range_y=[0,1])","78f8dacf":"suicides_map = suicides.groupby(['year','country','Alpha-3 code']).aggregate(np.sum).reset_index()[['country','Alpha-3 code','suicides_no','population','year']]\nsuicides_map[\"suicides\/100k pop\"]=suicides_map[\"suicides_no\"]*1000\/suicides_map[\"population\"]\npx.choropleth(suicides_map, locations=\"Alpha-3 code\", color=\"suicides\/100k pop\", hover_name=\"country\", animation_frame=\"year\",\n             color_continuous_scale=px.colors.sequential.Plasma)","325d101a":"# Finally Python has its own One Liner graph creation library\n\nI Know, I know. Pandas has the iplot function already provided by Plotly. \n\nThen we have seaborn also. And both of them are pretty good.\n\nI distinctly remember the time when Seaborn came. I was really so fed up with Matplotlib. To create even simple graphs I had to run through so many StackOverflow threads. The time I could have spent in thinking good ideas for presenting my data, was being spent in handling Matplotlib. And it was frustrating. \n\nSeaborn is much better than Matplotlib, yet it also demands a lot of code for a simple **\"good looking\"** graph. \n\nWhen Plotly came it tried to solve that problem. And when conjuncted with Pandas, plotly is a great tool. \n\nJust using the `iplot` function you can do so much with Plotly. \n\nBut still it is not very intuitive. At least for me. \n\nI still didn't switched to Plotly just because I had spent enough time with Seaborn to do things \"quickly\" enough and I didn't want to spend any more time learning a new visualization library. I had created my own functions in Seaborn to create the visualizations I mostly needed. Yet it was still a workaround. I had given up hope of having anything better. \n\nComes ***Plotly Express***  in picture. And is it awesome. \n\nAccording to the crestors of Plotly Express (who also created Plotly obviously), Plotly Express is to Plotly what Seaborn is to Matplotlib. \n> a terse, consistent, high-level wrapper around Plotly.py for rapid data exploration and figure generation.\n\nI just had to try it out. \n\nAnd have the crestors made it easy to start experimenting with it? I am doing a disservice to my blog, but you can actually look up at the notebook provided by the authors to check out pretty much the power of this damn library. \n\nOne liners to do everything you want? Check.\n\nStandardized functions? Learn to create a scatterplot and you have pretty much learned this tool. Check.","e16c661d":"# An Interesting Dataset albeit a little depressing\n\nIn this post I will be using the suicide dataset from 1985-2015\n"}}