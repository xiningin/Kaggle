{"cell_type":{"05ecfe38":"code","174cf40f":"code","fc7a03c1":"code","55c603d2":"code","ead603bb":"code","c6592aaf":"code","9cebbd00":"code","879fcaf7":"code","a84e5022":"code","dfe42d4c":"code","a7a6bb7e":"code","e4c9ca27":"code","8c206143":"code","df6c74df":"code","b841457d":"markdown","8b84ea6e":"markdown","c4e0995e":"markdown","32a9ec81":"markdown","473dbc93":"markdown","28efcaa2":"markdown","b1c481cd":"markdown","d45a6438":"markdown","7c3f4ea3":"markdown","11eed8b5":"markdown"},"source":{"05ecfe38":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","174cf40f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","fc7a03c1":"exercise = pd.read_csv('\/kaggle\/input\/fmendesdat263xdemos\/exercise.csv')\ncalories = pd.read_csv('\/kaggle\/input\/fmendesdat263xdemos\/calories.csv')","55c603d2":"exercise.head()","ead603bb":"calories.head()","c6592aaf":"# Let's merge both the datasets on USER_ID column\n\ndf = pd.merge(exercise, calories, on = 'User_ID')","9cebbd00":"df['Intercept'] = 1","879fcaf7":"df.head()","a84e5022":"# Visualizing the effect of exercise minutes on calories burned\nplt.figure(figsize=(8, 8))\nplt.plot(df['Duration'], df['Calories'], 'go');\nplt.xlabel('Duration (min)', size = 18); plt.ylabel('Calories', size = 18); \nplt.title('Calories burned vs Duration of Exercise', size = 20);","dfe42d4c":"X = df.loc[:, ['Intercept', 'Duration']]\ny = df.loc[:, 'Calories']","a7a6bb7e":"def linear_regression(X,y):\n    _coeffs = np.matmul(np.matmul(np.linalg.inv(np.matmul(X.T, X)), X.T), y)\n    return _coeffs\n\nby_hand_coefs = linear_regression(X.values, y.values)\nprint('Intercept without using library:', by_hand_coefs[0])\nprint('Slope without using library: ', by_hand_coefs[1])","e4c9ca27":"xs = np.linspace(4, 31, 1000)\nys = by_hand_coefs[0] + by_hand_coefs[1] * xs\n\nplt.figure(figsize=(8, 8))\n\nplt.plot(df['Duration'], df['Calories'], 'go',label = 'observations', alpha = 0.8);\nplt.xlabel('Duration (min)', size = 18); plt.ylabel('Calories', size = 18); \nplt.plot(xs, ys, 'r--', label = 'OLS Fit', linewidth = 3)\nplt.legend(prop={'size': 16})\nplt.title('Calories burned vs Duration of Exercise', size = 20);","8c206143":"# Let's predict something\nprint(f'Exercising for 35.5 minutes will burn an estimated \\\n{np.round((by_hand_coefs[0] + by_hand_coefs[1] * 35.5), 2)} calories')","df6c74df":"from sklearn.linear_model import LinearRegression\n\nlinear_regression = LinearRegression()\n\nlinear_regression.fit(np.array(X.Duration).reshape(-1, 1), y)\nprint('Intercept using library:', linear_regression.intercept_)\nprint('Slope using library:', linear_regression.coef_[0])","b841457d":"#### First implementing the linear regression without using any libraries","8b84ea6e":"#### Implementing linear regression with the help of the library","c4e0995e":"### That's it from this notebook and big shoutout for this amazing tutorial to\nhttps:\/\/thecleverprogrammer.com\/2020\/11\/26\/calories-burned-prediction-with-python\/\n","32a9ec81":"#### Now let's create the feature and response variable","473dbc93":"### Still wondering about the intercept column. See this formula for the explanation\n\n![image.png](attachment:image.png)","28efcaa2":"### Let's load the datasets","b1c481cd":"### Let's import the required libraries","d45a6438":"If you are wondering about why this Intercept column with value 1 is added. Just be patient now.","7c3f4ea3":"### Visualizing our data\nAs it is obvious that if we workout more then we will loose more calories","11eed8b5":"## Give an upvote if you found this notebook helpful"}}