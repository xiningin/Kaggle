{"cell_type":{"6c8dec0a":"code","25a1fbe1":"code","81f5ea88":"code","d33c16b5":"code","29c4057c":"code","ed660024":"code","ce6ac1e8":"code","b9814358":"code","ea495308":"code","9196c462":"code","bff7b252":"code","e9fa6b1a":"code","1c88fcf4":"code","6609198d":"code","e508330d":"code","d8d9397d":"code","d1851091":"code","9d551db5":"code","76185696":"code","a9bfb5b3":"code","b78bc860":"code","1d79be76":"markdown","5b9d4328":"markdown","074cb294":"markdown","ff763671":"markdown","dd5d626e":"markdown","84436160":"markdown","2e03336f":"markdown","63c2295c":"markdown","9832dab7":"markdown","5ff0a949":"markdown","3c914c88":"markdown","93abf904":"markdown","c951913a":"markdown","0c6f0af4":"markdown"},"source":{"6c8dec0a":"# Import required libraaries and data from csv file\nimport pandas as pd\nimport numpy as np\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('..\/input\/KaggleV2-May-2016.csv')\ndf.head()","25a1fbe1":"df.isnull().sum()\n# None of the column contents null values\n\ndf.info()\ndf.describe()\ndf.shape\nsum(df.duplicated())\n","81f5ea88":"gender = df['Gender'].value_counts()\ngender","d33c16b5":"noshow = df['No-show'].value_counts()\nnoshow","29c4057c":"df.drop(df[df['Age']<0].index,inplace=True)\n\ndf.describe()","ed660024":"#Check unique values for below columns\n\n#Renaming columns with correct spelling\ndf.rename(columns={'Hipertension': 'Hypertension', 'Handcap': 'Handicap'}, inplace=True)\n\nprint(df['Scholarship'].unique())\n\nprint(df['Hypertension'].unique())\nprint(df['Diabetes'].unique())\n\nprint(df['Alcoholism'].unique())\n\nprint(df['Handicap'].unique())\n\nprint(df['SMS_received'].unique())","ce6ac1e8":"# Convert data type\ndf['PatientId'] = df['PatientId'].astype('int64')\ndf['ScheduledDay'] = pd.to_datetime(df['ScheduledDay'])\ndf['AppointmentDay'] = pd.to_datetime(df['AppointmentDay'])\n\ndf.info()\n","b9814358":"df['Age'].describe()\n# Set  edges that will be used to divide the data into age groups\nedges = [0, 15, 30, 45, 60, 75, 90, 115]\n# Create labels for each age group\nnames = ['<15', '15-29', '30-44', '45-59', '60-74', '75-89', '>=90']\n\ndf['AgeGroup'] = pd.cut(df['Age'], edges, labels=names, right=False, include_lowest=True)\ndf.head()\n","ea495308":"age_group = df.groupby(['AgeGroup', 'No-show']).count()['Age']\nage_group","9196c462":"below_fifteen = age_group['<15', 'No'] \/ df['AgeGroup'].value_counts()['<15']\nfifteen_to_twenty_nine = age_group['15-29', 'No'] \/ df['AgeGroup'].value_counts()['15-29']\nthirty_to_fourty_four = age_group['30-44', 'No'] \/ df['AgeGroup'].value_counts()['30-44']\nfourty_five_to_fifty_nine = age_group['45-59', 'No'] \/ df['AgeGroup'].value_counts()['45-59']\nsixty_and_seventy_four = age_group['60-74', 'No'] \/ df['AgeGroup'].value_counts()['60-74']\nseventy_five_to_ninety = age_group['75-89', 'No'] \/ df['AgeGroup'].value_counts()['75-89']\nmore_than_ninety = age_group['>=90', 'No'] \/ df['AgeGroup'].value_counts()['>=90']\n# Plot the graph \nproportions = [below_fifteen, fifteen_to_twenty_nine, thirty_to_fourty_four, fourty_five_to_fifty_nine, sixty_and_seventy_four, seventy_five_to_ninety, more_than_ninety]\nplt.bar([1, 2, 3, 4, 5,6,7], proportions, width=0.3)\nplt.xlabel('Age Group')\nplt.ylabel('Proportion')\nplt.xticks([1, 2, 3, 4, 5,6,7], ['<15', '15-29', '30-44', '45-59', '60-74', '75-90', '>=90'])\nplt.title('Patients that showed up according to Age Groups');\n\n","bff7b252":"# No-show between males and females\nsns.set(style=\"darkgrid\")\nsns.countplot(x='No-show',hue='Gender',data=df)\nplt.xlabel('Appointment_show according to gender')\n","e9fa6b1a":"# Lets find percentage to get clear idea\n# We can say that, females have more no-show than man do. \nmale_counts_with_noshow=df[(df['Gender']=='M') & (df['No-show']=='Yes')].count()\nfemale_counts_with_noshow=df[(df['Gender']=='F') & (df['No-show']=='Yes')].count()\ntotal_Men=len((df['Gender']=='M'))\ntotal_Women=len((df['Gender']=='F'))\npercentage_of_Women=(female_counts_with_noshow\/total_Women)*100\npercentage_of_men=(male_counts_with_noshow\/total_Men)*100\nprint(\"Percentage of female who did not show up \",np.round(percentage_of_Women['Gender'],0),\"%\")\nprint(\"Percentage of male who did not show up \",np.round(percentage_of_men['Gender'],0),\"%\")\n","1c88fcf4":"#Pie chart will give us more clear picture  \nlabels='Female','Male'\nsizes=[13,7]\nplt.pie(sizes,  labels=labels, autopct='%1.2f%%',\n        shadow=True, startangle=90)\nplt.title(\"Percent of males and females\")\n","6609198d":"scholarship_counts = df.groupby(['Scholarship', 'No-show']).count()['Age']\nscholarship_counts\n","e508330d":"no_scholarship = scholarship_counts[0, 'No'] \/ df['Scholarship'].value_counts()[0]\n\nwith_scholarship = scholarship_counts[1, 'No'] \/ df['Scholarship'].value_counts()[1]\n\nno_scholarship, with_scholarship\n","d8d9397d":"hypertension_counts = df.groupby(['Hypertension', 'No-show']).count()['Age']\nhypertension_yes = hypertension_counts[1, 'No'] \/ df['Hypertension'].value_counts()[1]\nhypertension_no = hypertension_counts[0, 'No'] \/ df['Hypertension'].value_counts()[0]\n\ndiabetes_counts = df.groupby(['Diabetes', 'No-show']).count()['Age']\ndiabetic = diabetes_counts[1, 'No'] \/ df['Diabetes'].value_counts()[1]\nnon_diabetic = diabetes_counts[0, 'No'] \/ df['Diabetes'].value_counts()[0]\n\nalcoholism_counts = df.groupby(['Alcoholism', 'No-show']).count()['Age']\nalcoholic = alcoholism_counts[1, 'No'] \/ df['Alcoholism'].value_counts()[1]\nnon_alcoholic = alcoholism_counts[0, 'No'] \/ df['Alcoholism'].value_counts()[0]\n","d1851091":"index = np.array([1, 2, 3])\nwidth = 0.25\nplt.bar(index, [hypertension_no, non_diabetic, non_alcoholic], width=width, color='orange', label='Without the medical problem')\nplt.bar(index+width, [hypertension_yes, diabetic, alcoholic], width=width, color='blue', label='With the medical problem')\n\nplt.xlabel('Conditions')\nplt.ylabel('Proportion that showed up')\n\nlocations = index + width \/ 2\nplt.xticks(locations, ['Hypertension', 'Diabetes', 'Alcoholism'])\nplt.title('Proportion of Patients that Showed Up, According to medical reasons')\n\nplt.legend();\n","9d551db5":"sms_counts = df.groupby(['SMS_received', 'No-show']).count()['Age']\nno_sms_show_up = sms_counts[0, 'No'] \/ df['SMS_received'].value_counts()[0]\nsms_show_up = sms_counts[1, 'No'] \/ df['SMS_received'].value_counts()[1]\nplt.bar([1, 2], [no_sms_show_up, sms_show_up], width=0.6, color=['teal'])\nplt.xlabel('SMS received')\nplt.ylabel('Proportion')\nplt.xticks([1, 2], ['No', 'Yes'])\nplt.title('Proportion of Patients that Showed Up: SMS vs Without SMS');\n","76185696":"df['day_week_appoitntment'] = df['AppointmentDay'].dt.weekday_name\n\nweekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nfor index,i in enumerate(weekdays):\n    j=df[df.day_week_appoitntment==i]\n    count=len(j)\n    total_count=len(df)\n\n    perc=(count\/total_count)*100\n    print(i,count)\n    plt.bar(index,perc)\n    \nplt.xticks(range(len(weekdays)),weekdays, rotation=45)\nplt.title('Appointments as per day of the week')\nplt.ylabel(\"Percent of appointment\")\nplt.show()\n","a9bfb5b3":"# No show day of the week\nno_Show_Yes=df[df['No-show']=='Yes']\nweekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nfor index,i in enumerate(weekdays):\n    k=no_Show_Yes[no_Show_Yes.day_week_appoitntment==i]\n    count=len(k)\n    total_count=len(no_Show_Yes)\n    perc=(count\/total_count)*100\n    print(i,count,perc)\n    plt.bar(index,perc)\n\nplt.xticks(range(len(weekdays)),weekdays, rotation=60)\nplt.xlabel(\"Days of week\")\nplt.ylabel(\"Percent \")\nplt.title('Percent of No-Show per weekday')\nplt.show()\n","b78bc860":"no_Show_No=df[df['No-show']=='No']\nweekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nfor index,i in enumerate(weekdays):\n    k=no_Show_No[no_Show_No.day_week_appoitntment==i]\n    count=len(k)\n    total_count=len(no_Show_No)\n    perc=(count\/total_count)*100\n    print(i,count,perc)\n    plt.bar(index,perc)\n\nplt.xticks(range(len(weekdays)),weekdays, rotation=45)\nplt.xlabel(\"Days of week\")\nplt.ylabel(\"Percent \")\nplt.title('Percent of Show up per weekday')\nplt.show()\n","1d79be76":"**4**.**Conclusion**\nThere is some association negative\/positive between patients' likelihood of showing up and below variables:\n\nAge Gender Hypertension Diabetes Scholarship SMS\n\nAppointment day doesn't impact turn up rate.\n\nThese findings are provisional.Further tests\/datas are needed to explore these associations closely.","5b9d4328":"Surprisingly,there is no pattern of show and no show considering the day of week\n\n","074cb294":"There is no signficance association between age groups and the show up rate of patients. Roughly we can say that , those who are below 60 and more than 90 are less likely to show up.\n\nDoes the gender of the patient affect the show up rate?\n","ff763671":"Strangely, Patients who had received SMS are less likely to turn up than patients without prior notice.\n\nDoes the day of appointment impact the turn up rate ?\n","dd5d626e":"**1.** **Introduction** -\nThe dataset, retrieved from Kaggle, contains information of more than 100,000 medical appointments, details about the patients, and whether they showed up for their appointments. The purpose of this project is to determine factors that could be associatied with the patients' possibility of showing up for the treatment.\n\nI aimed to find answer for below problems:\n\nDoes the age of the person affects their availability for treatment?\nDoes the gender of the patient affect the show up rate?\nPatients with scolarship are likely to show up more than patients without scholarship ?\nAre the type of medical problems(ex. hypertension,diabetes,alcoholism) associated with show up rate ?\nAre patients more likely to show up if they have receieved SMS beforehand ?\nDoes the day of appointment impact the turn up rate ?","84436160":"There is nothing unusal about any column values except 'Handicap'. Here 0,1,2,3,4 can mean different type of disability or intensity levels of disability.We can't say anything about column 'Handicap' without further analysis.\n\n","2e03336f":"3.Exploratory Data Analysis(EDA)\u00b6\nDoes the age of the person affects their availability for treatment?\n","63c2295c":"Alcoholism does not have much effect on whether patients show up. We can see that patients with hypertension or diabetes are more likely to show up treatments compared to those who do not have those problems.\n\nAre patients more likely to show up if they have receieved SMS beforehand ?\n","9832dab7":"After creating the 'AgeGroup' column, Find out the patients in each group that showed up.\n\n","5ff0a949":"Important columns to analyze data : Age,Gender, Scholarship, Reasons for visiting(ex, Hypertension,Diabetes),sms_received,no-show. We have to clean these columns in order to analyze effectively.\n\nWe can't verify data with PatientId,AppointmentId,Neighbourhood without further details","3c914c88":"Patients with scolarship are likely to show up more than patients without scholarship ?\n","93abf904":"We can say that there is no signficance increase in show up rate for the patients who has scholarships.\n\nAre the type of medical problems(ex. hypertension,diabetes,alcoholism) associated with show up rate ?\n","c951913a":"**2. Data Wrangling\/Cleaning\n**Check for null values\n\n\n","0c6f0af4":"Cleaning Data : Age - we can see that minimum age is -1 , which is not possible. It can be typing mistake, so drop that coloumn.\n\n"}}