{"cell_type":{"5a309e23":"code","93f7f5fa":"code","cd2fc43d":"code","b0408fe9":"code","ba1aa754":"code","42f94cb2":"code","bebefedc":"markdown","5e256418":"markdown"},"source":{"5a309e23":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.options.display.max_columns = 999\nimport codecs\ndecode_hex = codecs.getdecoder(\"hex_codec\")","93f7f5fa":"# Get roster data from nflfastR github repo\nroster_data = pd.read_csv('https:\/\/raw.githubusercontent.com\/guga31bb\/nflfastR-data\/master\/roster-data\/roster.csv', low_memory = False)\nroster_data = roster_data[['teamPlayers.gsisId','teamPlayers.nflId']].drop_duplicates().dropna()\nroster_data.head()","cd2fc43d":"# Get nflfastR play-by-play data from Kaggle page , encoding = 'unicode_escape'\nfastr_18 = pd.read_csv('..\/input\/nflfastr\/play_by_play_2018.csv')\n\n# Convert new ID format to gsis ID\nfastr_18['solo_tackler1_gsis_id'] =  (fastr_18['solo_tackle_1_player_id'].str.split('-').str[2].str[-2:] + fastr_18['solo_tackle_1_player_id'].str.split('-').str[3] + fastr_18['solo_tackle_1_player_id'].str.split('-').str[4].str[:4]).apply(lambda x: decode_hex(x)[0].decode(\"utf-8\") if(pd.notnull(x))  else x )\nfastr_18['solo_tackler1_gsis_id'] ='00-' +  fastr_18.loc[~pd.isna(fastr_18['solo_tackler1_gsis_id']), 'solo_tackler1_gsis_id'].astype(str).str.zfill(7)\n\nfastr_18['assist_tackler1_gsis_id'] =  (fastr_18['assist_tackle_1_player_id'].str.split('-').str[2].str[-2:] + fastr_18['assist_tackle_1_player_id'].str.split('-').str[3] + fastr_18['assist_tackle_1_player_id'].str.split('-').str[4].str[:4]).apply(lambda x: decode_hex(x)[0].decode(\"utf-8\") if(pd.notnull(x))  else x )\nfastr_18['assist_tackler1_gsis_id'] ='00-' +  fastr_18.loc[~pd.isna(fastr_18['assist_tackler1_gsis_id']), 'assist_tackler1_gsis_id'].astype(str).str.zfill(7)\n\nfastr_18['assist_tackler2_gsis_id'] =  (fastr_18['assist_tackle_2_player_id'].str.split('-').str[2].str[-2:] + fastr_18['assist_tackle_1_player_id'].str.split('-').str[3] + fastr_18['assist_tackle_1_player_id'].str.split('-').str[4].str[:4]).apply(lambda x: decode_hex(x)[0].decode(\"utf-8\") if(pd.notnull(x))  else x )\nfastr_18['assist_tackler2_gsis_id'] ='00-' +  fastr_18.loc[~pd.isna(fastr_18['assist_tackler2_gsis_id']), 'assist_tackler2_gsis_id'].astype(str).str.zfill(7)\n\n#join to roster data\nfastr_18['solo1_nflId'] =  pd.merge(fastr_18[['solo_tackler1_gsis_id' ]],roster_data[['teamPlayers.nflId','teamPlayers.gsisId']].dropna(),left_on='solo_tackler1_gsis_id',right_on='teamPlayers.gsisId',how='left')['teamPlayers.nflId']\nfastr_18['assist1_nflId'] =  pd.merge(fastr_18[['assist_tackler1_gsis_id' ]],roster_data[['teamPlayers.nflId','teamPlayers.gsisId']].dropna(),left_on='assist_tackler1_gsis_id',right_on='teamPlayers.gsisId',how='left')['teamPlayers.nflId']\nfastr_18['assist2_nflId'] =  pd.merge(fastr_18[['assist_tackler2_gsis_id' ]],roster_data[['teamPlayers.nflId','teamPlayers.gsisId']].dropna(),left_on='assist_tackler2_gsis_id',right_on='teamPlayers.gsisId',how='left')['teamPlayers.nflId']\n\nfastr_18.head()","b0408fe9":"week1_df = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week1.csv')\nweek1_df.head()","ba1aa754":"week1_df = pd.merge(week1_df,fastr_18[['play_id', 'old_game_id','solo1_nflId','assist1_nflId', 'assist2_nflId']],left_on=['gameId','playId'],right_on=['old_game_id','play_id'],how='left')","42f94cb2":"week1_df.tail()","bebefedc":"Now that you have converted the ID for the desired colums you can join the nflfastR file to the competition data using gameId and playId as your primary keys in the competition data, and old_game_id and play_id as your keys for the nflfastR data.","5e256418":"# **Who Made the Tackle**\n\nThanks to the [nflfastR](https:\/\/www.nflfastr.com\/) project, play by play data is available for seasons dating back to 1999. \nThe data they have available contains significant information that can be derived but is not currently available in the Big Data Bowl dataset for this year's competition. When looking through the data I noticed there was no specific column for which defender made the tackle on a given play. Rather than parse out the names of the defenders who made the tackle from the play description, the nflfastR play-by-play data for 2018 conatins several colums of tackle information including solo tackle player names, and assist tackle player names, etc. In this notebook you'll find some code to join the nflfastR data to the competition data. \n\nThe nflfastR data files and links to more info can be found on kaggle [here](https:\/\/www.kaggle.com\/benbaldwin\/nflfastr).\n\nI am not proficient in Python and was having trouble decoding the player IDs in the nflfastR file in R, so I took the code from [this notebook](https:\/\/www.kaggle.com\/s903124\/getting-passer-and-receiver-identity-from-nfl-data) and adapted for what I needed. \n\nI was interested in only the solo_tackle_1_player, assist_tackle_1_player, and assist_tackle_2_player but you can put in any nflfastR ID column that has the new long format ID and make sure to just replace the variable names in the code."}}