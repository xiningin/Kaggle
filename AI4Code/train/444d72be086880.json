{"cell_type":{"dcbbe59f":"code","bb78a5df":"code","c5eb6ee7":"code","e47fa864":"code","dfaba1e4":"code","1614a04c":"code","20ac8542":"code","fb6ec2e1":"code","7aa1d36f":"code","18c71009":"code","f4aeba25":"markdown","7bdffd0a":"markdown","b41f1c37":"markdown","928a7f42":"markdown","90d110c9":"markdown"},"source":{"dcbbe59f":"# https:\/\/www.kaggle.com\/cdeotte\/rapids\n\nimport sys\n!cp ..\/input\/rapids\/rapids.0.12.0 \/opt\/conda\/envs\/rapids.tar.gz\n!cd \/opt\/conda\/envs\/ && tar -xzvf rapids.tar.gz > \/dev\/null\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.6\/site-packages\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.6\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\"] + sys.path \n!cp \/opt\/conda\/envs\/rapids\/lib\/libxgboost.so \/opt\/conda\/lib\/","bb78a5df":"import os\n\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom cuml.neighbors import KNeighborsClassifier","c5eb6ee7":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e47fa864":"%%time\n\npath_input = Path('\/kaggle\/input\/digit-recognizer\/')\n\ndf_train = pd.read_csv(path_input \/ 'train.csv')\ndf_test  = pd.read_csv(path_input \/ 'test.csv')\n\nX_train = df_train.iloc[:, 1:].values.reshape(-1, 28, 28)\ny_train = df_train.iloc[:, 0 ].values\n\nX_train, X_valid, y_train, y_valid = train_test_split(X_train, y_train, random_state=42)\n\nX_test  = df_test.values.reshape(-1, 28, 28)","dfaba1e4":"fig = plt.figure(figsize=(18, 9))\nfor row in range(5):\n    for col in range(10):\n        ax = fig.add_subplot(5, 10, 1+10*row+col)\n        ax.imshow(X_train[10*row+col])\n        ax.set_axis_off()\n        ax.set_title(y_train[10*row+col])","1614a04c":"%%time\n\nmodel = KNeighborsClassifier(n_neighbors=10)\nmodel.fit(X_train.reshape(-1, 28*28), y_train)","20ac8542":"%%time\n\nh_valid = model.predict(X_valid.reshape((-1, 28*28)))","fb6ec2e1":"confusion_matrix(y_valid, h_valid)","7aa1d36f":"accuracy_score(y_valid, h_valid)","18c71009":"fig = plt.figure(figsize=(18, 9))\nfor row in range(5):\n    for col in range(10):\n        ax = fig.add_subplot(5, 10, 1+10*row+col)\n        ax.imshow(X_valid[y_valid != h_valid][10*row+col])\n        ax.set_axis_off()\n        ax.set_title(h_valid[y_valid != h_valid][10*row+col])","f4aeba25":"# validation","7bdffd0a":"# Load datasets","b41f1c37":"# Predict","928a7f42":"# Import libraries","90d110c9":"# Train"}}