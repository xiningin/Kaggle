{"cell_type":{"b5e969a1":"code","1f55a526":"code","ecae04d6":"code","324df0d2":"code","42e2c55f":"code","b107ac68":"code","84526ca9":"code","22f57095":"code","7952bb30":"code","c5fab5d1":"code","bc6df2a6":"code","b62e6425":"code","60a372be":"code","0e9471ca":"code","a42f9cb8":"code","00c9a657":"code","6557f0ad":"markdown","7c6744c9":"markdown","ea3d0620":"markdown","26cf2eb6":"markdown","e359b20d":"markdown","9e096124":"markdown","c6993d3d":"markdown","907b175e":"markdown","a204261e":"markdown","3fcc381c":"markdown"},"source":{"b5e969a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f55a526":"!pip install lazypredict\n!pip install pandas==1.3.4","ecae04d6":"from lazypredict.Supervised import LazyClassifier\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\n\ndata = load_breast_cancer()\nX = data.data\ny= data.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=.5,random_state =123)\n\nclf = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)\nmodels,predictions = clf.fit(X_train, X_test, y_train, y_test)\n\nprint(models)","324df0d2":"from lazypredict.Supervised import LazyRegressor\nfrom sklearn import datasets\nfrom sklearn.utils import shuffle\nimport numpy as np\n\nboston = datasets.load_boston()\nX, y = shuffle(boston.data, boston.target, random_state=13)\nX = X.astype(np.float32)\n\noffset = int(X.shape[0] * 0.9)\n\nX_train, y_train = X[:offset], y[:offset]\nX_test, y_test = X[offset:], y[offset:]\n\nreg = LazyRegressor(verbose=0, ignore_warnings=False, custom_metric=None)\nmodels, predictions = reg.fit(X_train, X_test, y_train, y_test)\n\nprint(models)","42e2c55f":"import pandas as pd\nimport numpy as np\nimport random\nfrom fastai.tabular.all import *\nfrom lazypredict.Supervised import LazyClassifier","b107ac68":"train_df = pd.read_csv(\"..\/input\/song-popularity-prediction\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/song-popularity-prediction\/test.csv\")\nsubmission = pd.read_csv(\"..\/input\/song-popularity-prediction\/sample_submission.csv\")","84526ca9":"train_df.drop(['id'], axis=1,inplace=True)\ntest_df.drop(['id'], axis=1,inplace=True)","22f57095":"train_df.head()","7952bb30":"dep_var = 'song_popularity'","c5fab5d1":"cont,cat = cont_cat_split(train_df, dep_var=dep_var)","bc6df2a6":"idx = list(range(len(train_df)))\nrandom.shuffle(idx)","b62e6425":"#assign 80% indexes to train and 20% to valid\ntrain_index = idx[:int(0.8*len(train_df))]\nvalid_index = idx[int(0.8*len(train_df)):]\n\nto = TabularPandas(train_df, procs=[Categorify,FillMissing,Normalize],\n                   y_block = CategoryBlock(),\n                   cont_names = cont,\n                   cat_names = cat,\n                   y_names=dep_var,\n                   splits=(list(train_index), list(valid_index)))","60a372be":"x_train = to.train.xs\ny_train = to.train.y\n\nx_valid = to.valid.xs\ny_valid = to.valid.ys","0e9471ca":"clf = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)","a42f9cb8":"models,predictions = clf.fit(x_train, x_valid, y_train, y_valid)","00c9a657":"models","6557f0ad":"**Note:** it can take longer time in prediction as there are multiple model going to be train on the data","7c6744c9":"**More Learning resources on basic of ML:\n**\n* https:\/\/www.kaggle.com\/abhibisht89\/classification-report-sklearn   \n* https:\/\/www.kaggle.com\/abhibisht89\/vector-norm-in-machine-learning\n* https:\/\/www.kaggle.com\/abhibisht89\/eda-the-easy-way-pandas-profilling \n* https:\/\/www.kaggle.com\/abhibisht89\/basic-elements-of-linear-regression-model\n* https:\/\/www.kaggle.com\/abhibisht89\/early-stopping-in-neural-networks\n* https:\/\/www.kaggle.com\/abhibisht89\/write-with-transformer\n* https:\/\/www.kaggle.com\/abhibisht89\/job-title-from-job-description-ner-spacy-format\n* https:\/\/www.kaggle.com\/abhibisht89\/job-title-spacy\n","ea3d0620":"# **Usage**\n\n**To use Lazy Predict in a project:\n**\n\nimport lazypredict","26cf2eb6":"# Now Lets give it a try on our data set","e359b20d":"# Happy Learning","9e096124":"# **Lazy Predict help build a lot of basic models without much code and helps understand which models works better without any parameter tuning**","c6993d3d":"# **Installation**\nTo install Lazy Predict:\n\npip install lazypredict","907b175e":"# **Reference**: https:\/\/github.com\/shankarpandala\/lazypredict\n\n# **Documentation**: https:\/\/lazypredict.readthedocs.io.\n","a204261e":"# **Regression**","3fcc381c":"# **Classification**"}}