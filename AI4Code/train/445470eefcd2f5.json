{"cell_type":{"25188f6d":"code","04524000":"code","f4321485":"code","f1d3bbf1":"code","d45d0ebc":"code","063ee953":"code","75de2f21":"code","b0542851":"code","f5b0a12d":"code","9bdc3133":"code","afb42a1b":"code","64ed6f18":"code","a5bf80c1":"code","edfbbbc5":"code","501f70ff":"code","04bb3d66":"code","df2243b5":"code","0d7904e8":"code","9a6aaf45":"code","61aa1022":"code","b4619a13":"code","617b0fad":"code","25d80539":"code","c828e02d":"markdown","fb221c7d":"markdown","692c6c4b":"markdown","4f5ce18d":"markdown","3c15804e":"markdown","492657f3":"markdown"},"source":{"25188f6d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","04524000":"# Load the dataset\ndataset = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")","f4321485":"# First 5 rows\ndataset.head()","f1d3bbf1":"# Some important information\nprint(dataset.info())\n\nprint(\"---------------------\")\nprint(\"---------------------\")\n\n# Sum of Null values\nprint(dataset.isna().sum())","d45d0ebc":"# fill the null value\ndef fill_null(colname,fillvalue):\n    dataset[colname].fillna(fillvalue, inplace=True)","063ee953":"# Fill director column\nfill_null(\"director\", \"Unknown\")\n# Fill cast column\nfill_null(\"cast\", \"Unknown\")\n# Fill country column\nfill_null(\"country\", \"Unknown\")","75de2f21":"# Frequency for movie and tv series release\ndef yearly_release(MovieOrShow):\n    movie_release = dataset[dataset[\"type\"]==MovieOrShow][[\"release_year\"]]\n    movie_release[\"release_year\"].value_counts()[:20].plot(kind=\"bar\", color=\"#fb732c\", figsize=(15,7))\n    plt.title(f\"Frequency of {MovieOrShow}\", fontweight=\"bold\")","b0542851":"# Movie relsease yearly\nyearly_release(\"Movie\")","f5b0a12d":"# Tv Show release Yearly\nyearly_release(\"TV Show\")","9bdc3133":"#top 20 countries\ncountry_movie = dataset[\"country\"].value_counts()[:20]\nplt.subplots(figsize=(10,8))\nsns.barplot(y=country_movie.index, x=country_movie, palette=\"deep\", data=dataset)","afb42a1b":"# Content Based on Age\n\ndef rating_plot(title, height, h_lim=None):\n    ratofmortv = dataset[dataset[\"type\"]==title]\n    rating_order =  ['G', 'TV-Y', 'TV-G', 'PG', 'TV-Y7', 'TV-Y7-FV', 'TV-PG', 'PG-13', 'TV-14', 'R', 'NC-17', 'TV-MA']\n    movie_rating = ratofmortv['rating'].value_counts()[rating_order]\n\n    fig, ax = plt.subplots(figsize=(10,6), dpi=100)\n    if h_lim:\n        ax.set_ylim(0, h_lim)\n    ax.bar(movie_rating.index, movie_rating, color=\"#e0e0e0\", width=0.52, edgecolor=\"black\")\n    \n    color = [\"green\", \"blue\", \"orange\", \"red\"]\n    span_range = [[0,2], [3,6], [7,8],[9,11]]\n    \n    for idx, sub_title in enumerate([\"Little Kid\", \"Older Kid\", \"Tenns\", \"Mature\"]):\n        ax.annotate(sub_title, xy=(sum(span_range[idx])\/2, height), xytext=(0,0), textcoords=\"offset points\", va=\"center\", ha=\"center\", color=\"b\", fontsize=16, fontweight=\"bold\")\n        ax.axvspan(span_range[idx][0]-0.4,span_range[idx][1]+0.4,  color=color[idx], alpha=0.07)\n        ax.set_title(f'Distribution of {title} Rating', fontsize=15, fontweight='bold', position=(0.20, 1.0+0.03))","64ed6f18":"# For Movie \nrating_plot(\"Movie\", 1200, 1400)","a5bf80c1":"# different countries and their watching rating\n\ndef co_rat(*argv):\n    country1 = argv[0]\n    country2 = argv[1]\n    country3 = argv[2]\n    plt.subplots(figsize=(12,6))\n    plt.xticks(rotation=90)\n\n    newdataset = dataset[(dataset[\"country\"]==country1) | (dataset[\"country\"]==country2) | (dataset[\"country\"]==country3)][[\"country\", \"type\", \"rating\"]]\n    sns.countplot(x=newdataset[\"rating\"], hue=newdataset[\"country\"], data=newdataset)","edfbbbc5":"co_rat(\"United States\", \"India\", \"United Kingdom\")","501f70ff":"# some old movies from 1970 to back\nOldMovie = dataset[(dataset[\"type\"]==\"Movie\") & (dataset[\"release_year\"] <= 1970)].sort_values(by=\"release_year\", ascending=False)[[\"title\", \"duration\", \"rating\", \"release_year\"]]\nOld_Movie = pd.DataFrame(OldMovie)","04bb3d66":"Old_Movie","df2243b5":"# some old TV Show from 1990 to back\nOldTvShow = dataset[(dataset[\"type\"]==\"TV Show\") & (dataset[\"release_year\"] <= 1990)].sort_values(by=\"release_year\", ascending=False)[[\"title\", \"duration\", \"rating\", \"release_year\"]]\nOld_TvShow = pd.DataFrame(OldTvShow)","0d7904e8":"Old_TvShow","9a6aaf45":"# Movie and Director\nmovie_director = dataset[dataset[\"type\"]==\"Movie\"]\ndirectorfilm = movie_director[\"director\"].value_counts()[1:]\ndirector_films = pd.DataFrame(directorfilm)","61aa1022":"director_films[:30].plot(kind=\"bar\",figsize=(10,6))\nplt.title(\"30 Director and their total Movie count\")","b4619a13":"# TV Show and Director\ntv_director = dataset[dataset[\"type\"]==\"TV Show\"]\ndirectortv = tv_director[\"director\"].value_counts()[1:]\ndirector_tv = pd.DataFrame(directortv)","617b0fad":"director_tv[:30].plot(kind=\"bar\", figsize=(10,6))\nplt.title(\"30 Director and their total TV Show count\")","25d80539":"# content of director\n\ndef director_and_movie_tv(name):\n    director = dataset.loc[dataset[\"director\"]==name][[\"country\", \"rating\", \"title\"]]\n    return director\n\ndirector_and_movie_tv(\"Ra\u00fal Campos, Jan Suter\")","c828e02d":"# Most of the movie or show produced from United States. 2nd position India","fb221c7d":"# If you like please upvote","692c6c4b":"# If you like please upvote ","4f5ce18d":"![thibault-penin-AWOl7qqsffM-unsplash-scaled.webp](attachment:thibault-penin-AWOl7qqsffM-unsplash-scaled.webp)\n\n# NETFLIX\nNetflix, Inc. is an American technology & media-services provider and production company headquartered in Los Gatos, California, founded in 1997 by Reed Hastings and Marc Randolph in Scotts Valley, California. The company's primary business is its subscription-based streaming service which offers online streaming of a library of films and television programs, including those produced in-house.[14] As of April 2020, Netflix had over 193 million paid subscriptions worldwide, including 73 million in the United States.[15] It is available worldwide except in the following: mainland China (due to local restrictions), Iran, Syria, North Korea, and Crimea (due to U.S. sanctions)","3c15804e":"# EDA - Exploratory Data Analysis","492657f3":"# Netflix has lot of Mature content\n## \"TV-MA\" is a rating assigned by the TV Parental Guidelines to a television program that was designed for mature audiences only. Using this rating, the TVPG warns viewers that the show's content contains foul language, graphic violence, graphic sexual activity or any combination of these elements.\n\n## \"TV-14\" This rating contains mild to strong realistic violence (including some blood-letting), sexual references (including censored and\/or partial nudity and medium to high-level implied scenes of sexual intercourse), mild to moderate use of language (strong language is usually censored using a \"bleep censor\"), and sexual innuendo.  "}}