{"cell_type":{"a17c1cf1":"code","f88cc68a":"code","33cbed59":"code","6da922b1":"code","2362cf03":"code","3207e19e":"code","e352d07a":"code","de226823":"code","85f30a9f":"code","69349186":"code","1520e3b5":"code","0bfef56b":"code","cb8182b5":"code","201ec0d9":"code","ad9fb07b":"code","fb4f887b":"code","cb4ec453":"code","5c225e3b":"code","0413ecff":"code","57bdeede":"code","224ab51c":"code","d7c2c735":"code","5843e706":"code","51c6c95b":"code","b9d48f68":"code","579b68f6":"code","2af5f387":"code","ac6b8b33":"code","edc5527e":"code","25d9a95d":"code","6052a906":"code","5a25050a":"code","2e628496":"code","9c406400":"code","3aba682d":"code","5158ac37":"code","7c83cd0d":"code","8f245dac":"markdown","3937ad3f":"markdown","75faa5ae":"markdown","00c2dc3f":"markdown","e87cfcba":"markdown","b6979643":"markdown","ba7401fd":"markdown","1b6563dc":"markdown","8c59eaca":"markdown","1570430d":"markdown","98e48a13":"markdown","99fa7598":"markdown","8407bb48":"markdown","8bb4a297":"markdown","af55a981":"markdown","87055d02":"markdown","7defaa57":"markdown","4ab5ce1e":"markdown","b3bb3c82":"markdown","a24b9d40":"markdown","930b9d7c":"markdown","c6b751e9":"markdown","69ce339b":"markdown","f1d030a3":"markdown","49004d8b":"markdown","b34f4c31":"markdown","6c7e1911":"markdown","c0fbb051":"markdown","7f86630f":"markdown","74fecaea":"markdown","caae6bb7":"markdown","3937f45b":"markdown","fd76b936":"markdown"},"source":{"a17c1cf1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f88cc68a":"import seaborn as sns\nimport numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom datetime import datetime\n%matplotlib inline","33cbed59":"train=pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/test.csv\")\ntrain.head()","6da922b1":"test.head()","2362cf03":"train.shape","3207e19e":"test.shape","e352d07a":"train.isnull().sum()","de226823":"test.isnull().sum()","85f30a9f":"ID=train['Id']\nFID=test['ForecastId']\n","69349186":"train=train.drop(columns=['County','Province_State','Id'])\ntest=test.drop(columns=['County','Province_State','ForecastId'])","1520e3b5":"sns.pairplot(train)","0bfef56b":"sns.barplot(y='TargetValue',x='Target',data=train)","cb8182b5":"sns.barplot(x='Target',y='Population',data=train)","201ec0d9":"fig=plt.figure(figsize=(45,30))\nfig=px.pie(train, values='TargetValue', names='Country_Region',color_discrete_sequence=px.colors.sequential.RdBu,hole=.4)\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\nfig.show()","ad9fb07b":"df_grouped=train.groupby(['Country_Region']).sum()\ndf_grouped.TargetValue","fb4f887b":"plot=df_grouped.nlargest(5,'TargetValue')\nplot","cb4ec453":"sns.catplot(y=\"Population\", x=\"TargetValue\",height=5,aspect=1,kind=\"bar\", data=plot)\nplt.title('Top 5 Target Values',size=20)\nplt.show()","5c225e3b":"plot=df_grouped.nlargest(5,'Population')\nplot","0413ecff":"fig = px.treemap(train, path=['Country_Region'], values='TargetValue',\n                  color='Population', hover_data=['Country_Region'],\n                  color_continuous_scale='matter')\nfig.show()","57bdeede":"da= pd.to_datetime(train['Date'], errors='coerce')\ntrain['Date']= da.dt.strftime(\"%Y%m%d\").astype(int)\nda= pd.to_datetime(test['Date'], errors='coerce')\ntest['Date']= da.dt.strftime(\"%Y%m%d\").astype(int)","224ab51c":"plot=train.nlargest(2000,'TargetValue')\nplot","d7c2c735":"fig, ax = plt.subplots(figsize=(10,10))  \nh=pd.pivot_table(plot,values='TargetValue',\nindex=['Country_Region'],\ncolumns='Date')\nsns.heatmap(h,cmap=\"RdYlGn\",linewidths=0.05)","5843e706":"plot=train.nlargest(2000,'Population')\nplot","51c6c95b":"fig, ax = plt.subplots(figsize=(20,10))  \nh=pd.pivot_table(plot,values='TargetValue',\nindex=['Country_Region'],\ncolumns='Date')\nsns.heatmap(h,cmap=\"RdYlGn\",linewidths=0.005)","b9d48f68":"train.select_dtypes(include=['object']).columns","579b68f6":"test.select_dtypes(include=['object']).columns","2af5f387":"from sklearn.preprocessing import LabelEncoder\nl = LabelEncoder()\nX = train.iloc[:,0].values\ntrain.iloc[:,0] = l.fit_transform(X.astype(str))\n\nX = train.iloc[:,4].values\ntrain.iloc[:,4] = l.fit_transform(X)","ac6b8b33":"from sklearn.preprocessing import LabelEncoder\nl = LabelEncoder()\nX = test.iloc[:,0].values\ntest.iloc[:,0] = l.fit_transform(X.astype(str))\n\nX = test.iloc[:,4].values\ntest.iloc[:,4] = l.fit_transform(X)","edc5527e":"train.head()","25d9a95d":"\ny_train=train['TargetValue']\nx_train=train.drop(['TargetValue'],axis=1)\n\nfrom sklearn.model_selection import train_test_split \n\nx_train, x_test, y_train, y_test = train_test_split(x_train, y_train, test_size=0.2, random_state=0)","6052a906":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\npip = Pipeline([('scaler2' , StandardScaler()),\n                        ('RandomForestRegressor: ', RandomForestRegressor())])\npip.fit(x_train , y_train)\nprediction = pip.predict(x_test)","5a25050a":"acc=pip.score(x_test,y_test)\nacc","2e628496":"predict=pip.predict(test)","9c406400":"output=pd.DataFrame({'id':FID,'TargetValue':predict})\noutput","3aba682d":"a=output.groupby(['id'])['TargetValue'].quantile(q=0.05).reset_index()\nb=output.groupby(['id'])['TargetValue'].quantile(q=0.5).reset_index()\nc=output.groupby(['id'])['TargetValue'].quantile(q=0.95).reset_index()\n    \n    ","5158ac37":"a.columns=['Id','q0.05']\nb.columns=['Id','q0.5']\nc.columns=['Id','q0.95']\na=pd.concat([a,b['q0.5'],c['q0.95']],1)\na['q0.05']=a['q0.05']\na['q0.5']=a['q0.5']\na['q0.95']=a['q0.95']\na","7c83cd0d":"sub=pd.melt(a, id_vars=['Id'], value_vars=['q0.05','q0.5','q0.95'])\nsub['variable']=sub['variable'].str.replace(\"q\",\"\", regex=False)\nsub['ForecastId_Quantile']=sub['Id'].astype(str)+'_'+sub['variable']\nsub['TargetValue']=sub['value']\nsub=sub[['ForecastId_Quantile','TargetValue']]\nsub.reset_index(drop=True,inplace=True)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","8f245dac":"**Dropping insignificant attributes which have a lot of missing values**","3937ad3f":"**Setting up our model for prediction!!(fingers crossed)**","75faa5ae":"# CORONA VIRUS PANDEMIC!\ud83e\udda0","00c2dc3f":"![](https:\/\/techcrunch.com\/wp-content\/uploads\/2020\/03\/GettyImages-1209679043.jpg)","e87cfcba":"**Prediction score!!!Seems pretty good**","b6979643":"**Top 5 countries with the higest target value!**","ba7401fd":"**US is pretty bad and almost at an alarming stage.Russia and Brazil are slowly passing to the higher stages.Japan has a huge decline ,which is a good sign!!Indias intensity is growing as well, which we can imply from the color change towards recent times**","1b6563dc":"# How would you know that you have contracted coronavirus?\n\nIt is extremely important that everyone learns to identify the symptoms of coronavirus. And remembering them isn\u2019t difficult because coronavirus symptoms are the same as those of the flu.\n\nYou may have developed coronavirus infection if you notice these symptoms-\n\n\n1)Sore, itchy or swollen throat\n2)Coughing and sneezing   \n3)Fever\n4)Headache and muscle pain that accompany fever\n5)Breathing difficulty\n6)Runny nose\n  \nThere are a few risk factors of coronavirus-\nHaving travelled to or lived in countries that have reported coronavirus outbreaks.\nBeing elderly.\nHaving a history of heart problems and diabetes.\n\n\n# Coronavirus Dos and Don\u2019ts\n\n\nTo help curb the coronavirus pandemic, here is a list of do\u2019s and don\u2019ts that we must all observe \u2013\n\n**Do\u2019s**\n\nDo wash your hands with soap and water or alcoholic hand sanitizer frequently, especially if you are using public facilities like transportation and washrooms.\nDo avoid contact with anyone who looks sick.\nDo use a disposable napkin or a handkerchief to cover your face when you cough or sneeze.\n\n**Don\u2019ts**\n\nDon\u2019t be part of a large gathering. If you are within just a few feet of an infected person, you could contract the virus.\nDon\u2019t touch your face, nose, mouth or eyes with unwashed hands.\nDon\u2019t hide your symptoms for fear of being quarantined.\nDon\u2019t travel abroad especially to countries that are reeling under the coronavirus outbreak.\nCoronavirus is wreaking havoc globally. But you can stop it in its tracks if you follow the precautions strictly. So observe personal hygiene and request your loved ones to do the same to stay safe and protected.","8c59eaca":"**Bringing all the calculated values into the same dataframe i.e values of q0.05 , q0.5 , 0.95 !!**","1570430d":"**Coverting Date to Int format in both test and train dataset!**","98e48a13":"**Visualizations to understand the correlations of attributes with each other and how they function and alter with different distribution**","99fa7598":"**Creating heatmaps for top 2000 entries in terms of Target Value **","8407bb48":"**Population vs target Value**","8bb4a297":"**Reading our test and train datasets**","af55a981":"**Checking out the size of the dataset of both train and test dataset respectively**","87055d02":"**Displaying the table head for seeing the final data forms**","7defaa57":"**Top 5 countries with the highest population**","4ab5ce1e":"**Preprocessing data to transform object data types**","b3bb3c82":"**Checking out the missing values!!So County and Province_State have lots of missing values which will be hard to recover**","a24b9d40":"**So a lot can be depicted from this heatmap we see how it all started in china and slowly infected iran,italy,spain and finally the US in the worse manner possible**","930b9d7c":"**Saving the Train and Test ids for later use onto a new dataframe**","c6b751e9":"**Visualizing Treemaps(nested rectangles)in terms of population,target value of every country. Each group is represented by a rectangle, which area is proportional to its value. Using color schemes, it is possible to represent several dimensions: groups, subgroups**","69ce339b":"**Depicyion of target values country wise **","f1d030a3":"**Lets check out what we can learn from our dataset and fetch some important information!!**","49004d8b":"**Time for making the submission!!**","b34f4c31":"Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\nMost people infected with the COVID-19 virus will experience mild to moderate respiratory illness and recover without requiring special treatment.  Older people, and those with underlying medical problems like cardiovascular disease, diabetes, chronic respiratory disease, and cancer are more likely to develop serious illness.\nThe best way to prevent and slow down transmission is be well informed about the COVID-19 virus, the disease it causes and how it spreads. Protect yourself and others from infection by washing your hands or using an alcohol based rub frequently and not touching your face. \nThe COVID-19 virus spreads primarily through droplets of saliva or discharge from the nose when an infected person coughs or sneezes, so it\u2019s important that you also practice respiratory etiquette (for example, by coughing into a flexed elbow).[source](https:\/\/www.who.int\/health-topics\/coronavirus#tab=tab_1)","6c7e1911":"**Lets calculate the quantile values for the target values.In case you are wondering what is quantile function,here you go: Pandas dataframe.quantile() function return values at the given quantile over requested axis, a numpy.percentile.In each of any set of values of a variate which divide a frequency distribution into equal groups, each containing the same fraction of the total population.**[source](https:\/\/www.geeksforgeeks.org\/python-pandas-dataframe-quantile\/)\n\n Also I would like to mention that since I was strugling to get the final format as specified in the submission file I referred to  [this kernel](https:\/\/www.kaggle.com\/nischaydnk\/covid19-week5-visuals-randomforestregressor)!!","c0fbb051":"# **What is Corona Virus?[](http:\/\/)**","7f86630f":"**Target Value vs Target**","74fecaea":"**Importing important libraries!!**","caae6bb7":"**Displaying the objects present in our dataset **","3937f45b":"**Will be using Random forest regressor for this!!\nA Random Forest is an ensemble technique capable of performing both regression and classification tasks with the use of multiple decision trees and a technique called Bootstrap Aggregation, commonly known as bagging[source](https:\/\/www.google.com\/search?rlz=1C1CHWL_enIN772IN772&ei=HPa4XubeNc6b9QPl7ZTQCQ&q=random+forest+regression&oq=random+forest+regression&gs_lcp=CgZwc3ktYWIQAzICCAAyAggAMgIIADICCAAyAggAMgIIADICCAAyAggAMgIIADICCAA6BAgAEEc6BAgAEENQpQ9YkSlg_itoAXABeAGAAbgEiAG-GZIBCzAuMS44LjEuMS4xmAEAoAEBqgEHZ3dzLXdpeg&sclient=psy-ab&ved=0ahUKEwjm3IjLnKvpAhXOTX0KHeU2BZoQ4dUDCAw&uact=5)**","fd76b936":"**Now lets check out how things are at those countries wihich have the largest population globally like India,USA,China,Bangladesh,Brazil**"}}