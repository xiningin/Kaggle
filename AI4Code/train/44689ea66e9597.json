{"cell_type":{"7850d408":"code","ee559cab":"code","c7515e00":"code","5528945a":"code","f69e30ff":"code","8b263997":"code","3e606e8a":"code","37d420f7":"code","afe61aac":"code","ef95dc73":"markdown","78c541b7":"markdown","c8750a6f":"markdown","a2363784":"markdown","a053e53f":"markdown","1d4ccf58":"markdown","700b068e":"markdown","cae07c14":"markdown","28fd21bc":"markdown","300375bc":"markdown"},"source":{"7850d408":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","ee559cab":"dataset = pd.read_csv('..\/input\/Position_Salaries.csv')\nprint(dataset)\nX = dataset.iloc[:, 1:2].values\ny = dataset.iloc[:, 2].values\nprint(X)","c7515e00":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X, y)","5528945a":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 4)\nX_poly = poly_reg.fit_transform(X)\npoly_reg.fit(X_poly, y)\nlin_reg_2 = LinearRegression()\nlin_reg_2.fit(X_poly, y)","f69e30ff":"\nplt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg.predict(X), color = 'blue')\nplt.title('Truth or Bluff (Linear Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","8b263997":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","3e606e8a":"X_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","37d420f7":"lin_reg.predict([[6.5]])","afe61aac":"lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))","ef95dc73":"* training aimple linear Regression model","78c541b7":"* there will be no Splitting the dataset into the Training set and Test set\n* there will be no feature scaling","c8750a6f":" Fitting Polynomial Regression to the dataset","a2363784":"Visualising the Polynomial Regression results","a053e53f":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","1d4ccf58":"Visualising the Polynomial Regression results (for higher resolution and smoother curve)\n","700b068e":" Visualising the Linear Regression results","cae07c14":" Predicting a new result with Linear Regression","28fd21bc":"importing dataset to x and y","300375bc":"Predicting a new result with Polynomial Regression"}}