{"cell_type":{"471c96c5":"code","bbdcd9c7":"code","6119e0d3":"code","9fecf472":"code","9372bf56":"code","82d354c3":"code","9dd638df":"code","acbed14b":"code","5a8de034":"code","908fbb58":"code","2b03693a":"code","79df65d5":"code","f320e158":"code","b8b039f8":"code","0e1fbd08":"code","8be0a031":"code","32311fdb":"code","10617dfb":"code","853e95af":"code","8aae3068":"code","43ba943b":"code","a717af49":"code","81ed4b79":"code","d820e583":"code","08d6ffe2":"code","2a6f70f8":"code","4f9506bc":"code","c0060828":"code","3ac7bbff":"code","ee0b7701":"code","b15e85be":"code","40811402":"code","1a290947":"code","c69de63e":"code","728bdbd1":"code","ecdd707c":"code","9907ae69":"code","de3b9a8d":"code","a82ce2f7":"code","fc47217a":"code","0b556392":"markdown","7ce4bd64":"markdown","91e85da4":"markdown","0403ff8c":"markdown","0c3317d8":"markdown","b9e1320c":"markdown","6d76f54d":"markdown","728f3e7e":"markdown","a2e34811":"markdown","2ccb8897":"markdown","35083378":"markdown","78dfd921":"markdown","405cefba":"markdown"},"source":{"471c96c5":"import numpy as np\nimport pandas as pd","bbdcd9c7":"cars_data =[\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/audi.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/cclass.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/focus.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/ford.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/hyundi.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/merc.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/skoda.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/toyota.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/unclean cclass.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/unclean focus.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/vauxhall.csv\"),\n    pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/vw.csv\")\n]","6119e0d3":"def select_common_columns(lst=[pd.DataFrame()], last=(cars_data[::-1])[0]):\n    if(len(lst)):\n        return set(lst[0].columns) & select_common_columns(lst[1:])\n    else:\n        return set(last)","9fecf472":"def modifyTables(lst=[pd.DataFrame()], cols=[]):\n    if(len(lst)):\n        lst[0] = lst[0][cols]\n        modifyTables(lst[1:], cols)\n    else:\n        pass","9372bf56":"def writeMark(lst=[pd.DataFrame()], car_marks=[]):\n    if( len(lst) and len(car_marks) ):\n        lst[0][\"mark\"] = car_marks[0]\n        writeMark(lst[1:], car_marks[1:])\n    else:\n        pass","82d354c3":"def calcGeneralLength(lst=[pd.DataFrame()]):\n    if(len(lst)):\n        return len(lst[0]) + calcGeneralLength(lst[1:])\n    else:\n        return 0","9dd638df":"def resultColumn(lst=[pd.DataFrame()], col=\"\"):\n    if(len(lst)):\n        return lst[0][col].to_list() + resultColumn(lst[1:], col)\n    else:\n        return []","acbed14b":"commonColumns = select_common_columns(cars_data)\nprint(commonColumns)","5a8de034":"modifyTables(cars_data, commonColumns)","908fbb58":"marks = [\"audi\", \"bmw\", \"cclass\", \"focus\", \"ford\", \"hyundy\", \"merc\", \"skoda\", \"toyota\", \"unclean cclass\", \"unclean focus\", \n         \"vauxhall\", \"vw\"]","2b03693a":"writeMark(cars_data, marks)","79df65d5":"cars_data[0].head()","f320e158":"data = pd.DataFrame(columns=cars_data[0].columns, index=range(calcGeneralLength(cars_data)))\ndata.head()","b8b039f8":"for column in data.columns:\n    data[column] = resultColumn(cars_data, column)\ndata.head()","0e1fbd08":"data = data.dropna()\ndata.head()\nprint(len(data))","8be0a031":"models        = list( data[\"model\"].unique() )        #to code models of cars\ntransmissions = list( data[\"transmission\"].unique() ) #in code transmission types","32311fdb":"for model in models:\n    data[\"model\"][ data[\"model\"]==model ] = models.index(model)\nfor transmission in transmissions:\n    data[\"transmission\"][ data[\"transmission\"]==transmission ] = transmissions.index(transmission)\nfor mark in marks:\n    data[\"mark\"][ data[\"mark\"]==mark ] = marks.index(mark)\ndata.head()","10617dfb":"data.dtypes","853e95af":"indexes = []\nfor i in data.index:\n    if( type(data.loc[i][\"price\"]) not in [int, float] or type(data.loc[i][\"model\"]) not in [int, float] or\n        type(data.loc[i][\"mileage\"]) not in [int, float] or type(data.loc[i][\"transmission\"]) not in [int, float] or\n        type(data.loc[i][\"mark\"]) not in [int, float]\n      ):\n        indexes.append(i)\ndata = data.drop(indexes)\nprint(len(data))","8aae3068":"data.astype(\"float\")","43ba943b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn import metrics\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","a717af49":"X = data.drop(\"price\", axis=1)\ny = data[\"price\"]","81ed4b79":"predModelDeg1 = LinearRegression().fit(X, y)","d820e583":"print( \"MSE: \"+str(metrics.mean_squared_error(y, predModelDeg1.predict(X))) )","08d6ffe2":"print( \"R^2: \"+str(metrics.r2_score(y, predModelDeg1.predict(X))) )","2a6f70f8":"predModelDeg2 = LinearRegression().fit(PolynomialFeatures(degree=2).fit_transform(X), y)","4f9506bc":"print( \"MSE: \"+str(metrics.mean_squared_error(y, predModelDeg2.predict(PolynomialFeatures(degree=2).fit_transform(X)))) )","c0060828":"print( \"R^2: \"+str(metrics.r2_score(y, predModelDeg2.predict(PolynomialFeatures(degree=2).fit_transform(X)))) )","3ac7bbff":"predModelDeg3 = LinearRegression().fit(PolynomialFeatures(degree=3).fit_transform(X), y)","ee0b7701":"print( \"MSE: \"+str(metrics.mean_squared_error(y, predModelDeg3.predict(PolynomialFeatures(degree=3).fit_transform(X)))) )","b15e85be":"print( \"R^2: \"+str(metrics.r2_score(y, predModelDeg3.predict(PolynomialFeatures(degree=3).fit_transform(X)))) )","40811402":"from sklearn.neural_network import MLPRegressor","1a290947":"predNNModel = MLPRegressor((25, 25), activation=\"tanh\", max_iter=500).fit(X, y)","c69de63e":"print( \"MSE: \"+str(metrics.mean_squared_error( y, predNNModel.predict(X) )) )","728bdbd1":"print( \"R^2: \"+str(metrics.r2_score( y, predNNModel.predict(X) )) )","ecdd707c":"print( \"MSLE: \"+str(metrics.mean_squared_log_error( y, predNNModel.predict(X) )) )","9907ae69":"predNNModel = MLPRegressor((50, 50, 50), activation=\"tanh\", max_iter=1500).fit(PolynomialFeatures(degree=2).fit_transform(X), y)","de3b9a8d":"print( \"MSE: \"+str(metrics.mean_squared_error( y, predNNModel.predict(PolynomialFeatures(degree=2).fit_transform(X)) )) )","a82ce2f7":"print( \"R^2: \"+str(metrics.r2_score( y, predNNModel.predict(PolynomialFeatures(degree=2).fit_transform(X)) )) )","fc47217a":"print( \"MSLE: \"+str(metrics.mean_squared_log_error( y, predNNModel.predict(PolynomialFeatures(degree=2).fit_transform(X)) )) )","0b556392":"Data is read. **Now let's modify read tables to make it all in one table**. Firstly, **we define needed functions**.","7ce4bd64":"Ok, we see implovement of results. Will we see improvement if we will use cubic regression model?","91e85da4":"# Building a prediction model. \nData package is ready. Now let's do final manipulations with data and try to build prediction model.","0403ff8c":"We see improvement again. But is it enough? I think no. So let's try to experiment with neural networks.","0c3317d8":"Firstly, we will build linear regression model and will test it.","b9e1320c":"As we see, it's possible, that prediction model, based in neural network can be enough good to be used, if we use our data. So let's build more bulky newural network to see, is it true or no.","6d76f54d":"As we see, linear model is not very good. So, let's build quadratic regression model and test it.","728f3e7e":"Now we will write a mark of cars for data tables.","a2e34811":"Ok, all parameters have numerical variant. **Let's build prediction model**.","2ccb8897":"# Data preprocessing. \nFirstly, let's make all tables into one and process it.","35083378":"As we see, we can try to build neural network as prediction model to predict price and this model can be not very worse then regression model.","78dfd921":"Now we build general data package.","405cefba":"**Now we modify data tables.** Firstly, let's find common columns."}}