{"cell_type":{"cd442e5b":"code","e7a2757a":"code","58f8f26b":"code","f750b0be":"code","55bfd7a8":"code","bfa203a6":"code","c012fd67":"code","7c6b1e76":"code","3ecc9cb7":"code","aa36c591":"code","3a1fcab7":"markdown","57bf2d60":"markdown","fb52aa50":"markdown","ee4de83d":"markdown","d524aba1":"markdown","09225ec8":"markdown"},"source":{"cd442e5b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns","e7a2757a":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","58f8f26b":"hdata = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\n","f750b0be":"hdata_mean = hdata.SalePrice.mean()\nhdata_median = hdata.SalePrice.median()\nhdata_mean\nhdata_median","55bfd7a8":"sns.scatterplot(x = hdata[\"OverallQual\"], y = hdata[\"SalePrice\"])","bfa203a6":"qualmean3 = hdata.SalePrice.loc[(hdata.OverallQual == 3) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean4= hdata.SalePrice.loc[(hdata.OverallQual == 4) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean5= hdata.SalePrice.loc[(hdata.OverallQual == 5) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean6= hdata.SalePrice.loc[(hdata.OverallQual == 6) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean7= hdata.SalePrice.loc[(hdata.OverallQual == 7) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean8= hdata.SalePrice.loc[(hdata.OverallQual == 8) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean9= hdata.SalePrice.loc[(hdata.OverallQual == 9) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean10 = hdata.SalePrice.loc[(hdata.OverallQual == 10) & (hdata.SalePrice == hdata.SalePrice)]\nqualmean3 = qualmean3.median()\nqualmean4 = qualmean4.median()\nqualmean5 = qualmean5.median()\nqualmean6 = qualmean6.median()\nqualmean7 = qualmean7.median()\nqualmean8 = qualmean8.median()\nqualmean9 = qualmean9.median()\nqualmean10 = qualmean10.median()\nhdata","c012fd67":"htestdata = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\nhtestdata","7c6b1e76":"def predict(row): \n    if row.OverallQual == 3: \n        return qualmean3\n    elif row.OverallQual == 4: \n        return qualmean4\n    elif row.OverallQual == 5: \n        return qualmean5\n    elif row.OverallQual == 6: \n        return qualmean6\n    elif row.OverallQual == 7: \n        return qualmean7\n    elif row.OverallQual == 8: \n        return qualmean8\n    elif row.OverallQual == 9: \n        return qualmean9\n    elif row.OverallQual == 10: \n        return qualmean10\n    else: \n        predict = 80000.0\n        return predict\n\nsubmit_data = htestdata.loc[:,['Id', 'OverallQual']]\nsubmit_data['SalePrice'] = submit_data.apply(predict, axis=\"columns\")\nsubmit_data.index\nsubmit_data","3ecc9cb7":"submit_data.to_csv('Submission-house_data.csv', index=False)","aa36c591":"#Run the code to save predictions in the format used for competition scoring\nhtestdata['Id'] = htestdata.Id.astype('Int32')\noutput = pd.DataFrame({'Id': submit_data.Id,\n                       'SalePrice': submit_data.SalePrice})\noutput.to_csv('submission', index=False)\noutput","3a1fcab7":"In order to beat a score less\nthan 0.41 I will use the median of the quality value to predict the house price\n","57bf2d60":"Combining both the train and test datasets. ","fb52aa50":"Graph for asthetics and validating the median sale price for each of the quality values","ee4de83d":"Turning the stuff into the submission csv","d524aba1":"Messing with finding the median of quality to find somthing to multiply avarage sales price with","09225ec8":"Taking the mean and meadian of the datasets just to get a feel for what I am working with"}}