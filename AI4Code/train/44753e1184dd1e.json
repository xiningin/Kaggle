{"cell_type":{"1c541c13":"code","61947882":"code","c09ba513":"code","13f25dba":"code","78520cd1":"code","fabecc0a":"code","86d00ad8":"code","adff1e02":"code","fa99ba6b":"code","bf6ad1e3":"code","961c7c9a":"code","f0344470":"code","4de5fedb":"code","8106f10a":"code","1d770cfd":"code","08254ff5":"code","90ab7547":"code","fd59b4ca":"code","6805b643":"code","3c7658cf":"code","744d066c":"code","799a1882":"code","fd47e8b2":"code","aae8917e":"code","54166993":"code","2f9fb500":"code","bc75f271":"code","d72b8b8a":"markdown","ce1d1b59":"markdown","f66f43b9":"markdown"},"source":{"1c541c13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","61947882":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c09ba513":"path = '\/kaggle\/input\/learn-together\/'\ntrain_df = pd.read_csv(path+'train.csv',index_col='Id')","13f25dba":"train_df.describe().T","78520cd1":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, roc_auc_score","fabecc0a":"X_train,X_val, y_train,y_val = train_test_split(train_df.drop('Cover_Type',axis=1),train_df['Cover_Type'],random_state=10,test_size=0.3)","86d00ad8":"def print_score(m):\n    res= [accuracy_score(y_train,m.predict(X_train),),accuracy_score(y_val,m.predict(X_val))]\n    print(res)","adff1e02":"rf = RandomForestClassifier(n_jobs=-1,random_state=10)\nrf.fit(X_train,y_train)\nprint_score(rf)","fa99ba6b":"def rf_feat_importances(m,df):\n    return pd.DataFrame({'cols':df.columns.tolist(),'importances':m.feature_importances_}).sort_values('importances',ascending=False)","bf6ad1e3":"fi = rf_feat_importances(rf,X_train)\nfi[:10]","961c7c9a":"def plot_fi(fi): \n    fi.plot('cols','importances','barh',figsize=(12,7),legend=False)","f0344470":"plot_fi(fi[:30])","4de5fedb":"to_keep = fi[fi['importances'] > 0.005]['cols']\ndf_keep = train_df[to_keep]","8106f10a":"X_train,X_val,y_train,y_val = train_test_split(df_keep,train_df['Cover_Type'],test_size=0.3,random_state=10)","1d770cfd":"rf_2 = RandomForestClassifier(n_jobs=-1,random_state=10)\nrf_2.fit(X_train,y_train)\nprint_score(rf_2)","08254ff5":"fi_2 = rf_feat_importances(rf_2,X_train)","90ab7547":"plot_fi(fi_2)","fd59b4ca":"import scipy","6805b643":"from scipy.cluster import hierarchy as hc\ncorr = np.round(scipy.stats.spearmanr(df_keep).correlation, 4)\ncorr_condensed = hc.distance.squareform(1-corr)\nz = hc.linkage(corr_condensed, method='average')\nfig = plt.figure(figsize=(16,12))\ndendrogram = hc.dendrogram(z,labels=df_keep.columns,orientation='left',leaf_font_size=16)\nplt.show()","3c7658cf":"from pdpbox import pdp\nfrom plotnine import *","744d066c":"X_train,X_valid,y_train,y_valid = train_test_split(train_df.drop('Cover_Type',axis=1),train_df['Cover_Type'],test_size=0.3,random_state=10)\nm = RandomForestClassifier(n_estimators=40, n_jobs=-1,random_state=10)\nm.fit(X_train,y_train)","799a1882":"def get_sample(df,n):\n    idxs = sorted(np.random.permutation(len(df))[:n])\n    return df.iloc[idxs].copy()","fd47e8b2":"x = get_sample(X_train,500)","aae8917e":"p = pdp.pdp_isolate(m, x, x.columns, 'Elevation')\npdp.pdp_plot(p,'Elevation',plot_lines=True,)\nplt.show()","54166993":"p = pdp.pdp_isolate(m, x, x.columns, 'Horizontal_Distance_To_Roadways')\npdp.pdp_plot(p,'Horizontal_Distance_To_Roadways',plot_lines=True,)\nplt.show()","2f9fb500":"pi = pdp.pdp_interact(m,x,x.columns,['Elevation','Aspect'])\npdp.pdp_interact_plot(pi,['Elevation','Aspect'])\nplt.show()","bc75f271":"pi = pdp.pdp_interact(m,x,x.columns,['Horizontal_Distance_To_Roadways','Horizontal_Distance_To_Fire_Points'],n_jobs=-1)\npdp.pdp_interact_plot(pi,['Horizontal_Distance_To_Roadways','Horizontal_Distance_To_Fire_Points'])\nplt.show()","d72b8b8a":"Checking for redundant features","ce1d1b59":"Lets try to fit a RandomForest ","f66f43b9":"No features to remove"}}