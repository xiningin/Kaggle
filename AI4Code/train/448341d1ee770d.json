{"cell_type":{"05c726ee":"code","5425ee15":"code","7c362f4d":"code","a0504d6a":"code","db3dddf5":"code","a9cec1ae":"code","388c9403":"code","61226a4f":"markdown","9d71da82":"markdown","7e609e39":"markdown","8a13710e":"markdown","1d5dc017":"markdown","b40b8c2c":"markdown","c844c66b":"markdown","a3f04bea":"markdown","50dc96ff":"markdown","14c89eb5":"markdown","9ab8dc0a":"markdown","b80b641e":"markdown"},"source":{"05c726ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5425ee15":"#clone darknet repo\n!git clone https:\/\/github.com\/AlexeyAB\/darknet","7c362f4d":"#change directory to darknet\n%cd darknet\/\n\n#change makefile to have a gpu and opencv\n%cd darknet\n!sed -i ","a0504d6a":"# make darknet\n! make","db3dddf5":"#download yolov4 weights\n!wget https:\/\/github.com\/AlexeyAB\/darknet\/releases\/download\/darknet_yolo_v3_optimal\/yolov4.weights","a9cec1ae":"!.\/darknet detector test cfg\/coco.data cfg\/yolov4.cfg yolov4.weights data\/horses.jpg\n\n#import libraries\nimport cv2\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\nimage=cv2.imread(\"predictions.jpg\")\nheight,width=image.shape[:2]\nresize_image=cv2.resize(image,(3*width,3*height),interpolation=cv2.INTER_CUBIC)","388c9403":"figure=plt.gcf()\nfigure.set_size_inches(20,15)\nplt.axis(\"off\")\nplt.imshow(cv2.cvtColor(resize_image,cv2.COLOR_BGR2RGB))\nplt.show()","61226a4f":"# Clone and Build Darknet","9d71da82":"In this notebook I am going to do object detection by just writing the basic code and taking the image from the darknet repo itself.If you want to learn more about YOLOv4 you can read these blogs mention below:\n- https:\/\/becominghuman.ai\/explaining-yolov4-a-one-stage-detector-cdac0826cbd7\n- https:\/\/towardsdatascience.com\/pp-yolo-surpasses-yolov4-object-detection-advances-1efc2692aa62\n- https:\/\/towardsdatascience.com\/yolov4-in-google-colab-train-your-custom-dataset-traffic-signs-with-ease-3243ca91c81d\n","7e609e39":"# Run our detection with Darknet and YOLOv4","8a13710e":"**The object detector can be run using the following commands :**","1d5dc017":"![image.png](attachment:image.png)","b40b8c2c":"# Download pre-trained YOLOv4 weights","c844c66b":"![image.png](attachment:image.png)","a3f04bea":"**Now make darknet so that we can use the darknet executable file to run and train object detetction**","50dc96ff":"In this I am taking the horse image from the darknet repository itself.You can take any image which you want to detect.You can check which classes YOLOv4 can detect by visiting this site https:\/\/cocodataset.org\/#explore","14c89eb5":"Above is the image of classes that YOLOv4 can detect.","9ab8dc0a":"# What is YOLO\nYOLO stands for You Only Look Once, it is an object detection system in real-time that recognizes various objects in a single enclosure. Moreover, it identifies objects more rapidly and more precisely than other recognition systems. <BR>\n    \nIt can estimate up to 9000 and even more seen and unseen classes of objects. The real-time recognition system could recognize several objects from a particular image, frame a confined-edge box nearby objects, and quickly trained and implemented in a production system.\n    \nNow getting started towards it","b80b641e":"**YOLOv4 has been trained already on the coco dataset.So we are going to download that weights**"}}