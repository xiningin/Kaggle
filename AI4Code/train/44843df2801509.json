{"cell_type":{"984cddc1":"code","3918bfdb":"code","29b13dd2":"code","30fd339c":"code","04571565":"code","b40c2626":"code","943e6803":"code","59f0e5a7":"markdown","71d2c927":"markdown","9df947b5":"markdown","4669f3b5":"markdown"},"source":{"984cddc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3918bfdb":"june6 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-06-15.csv\")\naug15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-08-15.csv\")\nmar1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-03-01.csv\")\noct1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-10-01.csv\")\njan1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-01-01.csv\")\njan15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-01-15.csv\")\nmay15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-05-15.csv\")\nfeb15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2020-02-15.csv\")\njul15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-07-15.csv\")\nfeb1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-02-01.csv\")\napr15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-04-15.csv\")\njun1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-06-01.csv\")\napr1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-04-01.csv\")\nmar15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-03-15.csv\")\nmar1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2020-03-01.csv\")\nsept15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-09-15.csv\")\ndec16 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2018-12-16.csv\")\njul1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-07-01.csv\")\nmay1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-05-01.csv\")\nfeb15 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-02-15.csv\")\nsept1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-09-01.csv\")\naug1 = pd.read_csv(\"\/kaggle\/input\/search-engine-results-flights-tickets-keywords\/flights_tickets_serp2019-08-01.csv\")\njune6.head(3)","29b13dd2":"june6.displayLink.value_counts()","30fd339c":"all = pd.concat([june6, aug15, mar1, oct1, jan1, jan15, may15, feb15, jul15, feb1, apr15, jun1, apr1 , mar15, mar1, sept15, dec16, jul1, may1, feb15, sept1, aug1])\n","04571565":"most_popular = all.displayLink.value_counts()\n\nmost_popular","b40c2626":"mean_rank = all[['displayLink', 'rank']].groupby(['displayLink'], as_index=False).mean().sort_values(by='rank')\nmean_rank","943e6803":"all.link.value_counts()","59f0e5a7":"Top sites","71d2c927":"The average position of sites","9df947b5":"**Concatenate data frames**\n","4669f3b5":"Top pages"}}