{"cell_type":{"b91ee0f8":"code","9d49187d":"code","c6bce1bf":"code","13a11f1d":"code","0e8d9840":"code","5eafcd65":"code","54acc45c":"code","8ea9bc86":"code","dc517cd4":"code","fa5d7fc5":"code","e51e934d":"code","00802c06":"code","da6a5477":"code","683660df":"code","0b454b9f":"code","a42ee13b":"code","0ee7e621":"code","ecf8dc8f":"code","0e699e21":"code","64352eab":"code","8a794bc2":"code","d3f1ee5e":"code","a61993c6":"code","4f091cb8":"code","9e05fd6a":"code","ddb991c4":"code","7c4c9c61":"code","7b7309e9":"code","8e52d209":"code","f1861246":"code","fc31269f":"code","02171968":"code","2f6fb2c6":"code","30f78bfc":"code","dde50de2":"code","a0ac891c":"code","53a17888":"code","10331c19":"code","ecbb6a6a":"code","266a3d05":"markdown","98a279e1":"markdown","b686fb9a":"markdown","aa04614c":"markdown","66d63b8f":"markdown"},"source":{"b91ee0f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d49187d":"df=pd.read_csv(\"..\/input\/housepricing\/HousePrices_HalfMil.csv\")\ndf.head(10)","c6bce1bf":"df.info","13a11f1d":"df.isnull().sum()","0e8d9840":"import matplotlib.pyplot as plot","5eafcd65":"df.plot.hist()","54acc45c":"X = df['Area']\ny = df['Prices']\nplot.scatter(X,y,c='purple', edgecolor='Black', s=70)\nplot.xlabel('AREA')\nplot.ylabel('DATA VISIBLE')\nplot.title('HOUSE PREDICT')\nplot.show()","8ea9bc86":"import seaborn as sns","dc517cd4":"corrmat = df.corr()\n\ntop_corr_features = corrmat.index\n\nplt.figure(figsize=(20,20))\n\ng=sns.heatmap(df[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","fa5d7fc5":"sns.countplot(df.Area)\nplot.show()","e51e934d":"sns.countplot(df.Prices)\nplot.show()","00802c06":"sns.lineplot(x = df[\"Area\"] , y = df[\"Prices\"])","da6a5477":"plot.scatter(df['Area'].head(40),df['Prices'].head(40))","683660df":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error,median_absolute_error","0b454b9f":"x=df[[\"Area\"]]\ny=df[[\"Prices\"]]","a42ee13b":"x","0ee7e621":"y","ecf8dc8f":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=1)","0e699e21":"print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)","64352eab":"regressor=LinearRegression(normalize=True)\nregressor.fit(x_train ,y_train)","8a794bc2":"regressor.coef_","d3f1ee5e":"regressor.intercept_","a61993c6":"y_pred=regressor.predict(x_test)\ny_pred","4f091cb8":"y_test","9e05fd6a":"matches = (y_pred==y_test)\nprint(matches.sum())","ddb991c4":"plot.scatter(y_test,y_pred)","7c4c9c61":"x=df[[\"Area\",\"Garage\",\"FirePlace\",\"Baths\",\"White Marble\",\"Black Marble\",\"Indian Marble\",\"Floors\",\"City\",\"Solar\",\"Electric\",\"Fiber\",\"Glass Doors\",\"Swiming Pool\",\"Garden\"]]\ny=df[[\"Prices\"]]","7b7309e9":"x","8e52d209":"y","f1861246":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=1)\nprint(x_train.shape, x_test.shape, y_train.shape, y_test.shape)","fc31269f":"regressor=LinearRegression(normalize=True)\nregressor.fit(x_train ,y_train)","02171968":"regressor.coef_","2f6fb2c6":"regressor.intercept_","30f78bfc":"y_pred=regressor.predict(x_test)\ny_pred","dde50de2":"y_test","a0ac891c":"matches = (y_pred==y_test)\nprint(matches.sum())","53a17888":"print(len(matches))","10331c19":"matches.sum() \/ float(len(matches))","ecbb6a6a":"plot.scatter(y_test,y_pred)","266a3d05":"**Reading the Dataset**","98a279e1":"**To Perform Linear regression**","b686fb9a":"I take two dataframes such as Price & Area","aa04614c":"We perform Total dataframes in the linear regression model ","66d63b8f":"**DATA VISUALIZATION**"}}