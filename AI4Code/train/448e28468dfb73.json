{"cell_type":{"82c23697":"code","7881a3a1":"code","0b87b8cb":"code","7babd0c5":"code","cf62e725":"code","b083fb71":"code","c575e500":"code","0b1d34fe":"code","a8715a59":"code","97846cee":"code","7db43e6d":"code","48e6281c":"code","436dd0aa":"code","8aabfe1a":"code","f63fb23d":"code","9e0ec1fd":"code","9f0bd9e3":"code","1550c3c9":"code","f83e61d8":"code","1b825bf5":"code","126c5646":"code","d9cbfd1b":"code","7f54e2b5":"code","d72a5dc6":"code","a218e212":"code","763d4c4f":"code","004be48b":"markdown","2d993b7f":"markdown","25374dec":"markdown","5c5f4d09":"markdown","8a569a4f":"markdown","6ba89612":"markdown"},"source":{"82c23697":"# Importing all necessary libraries.\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","7881a3a1":"# Using data from Apple's stock.\ndf = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/AAPL_data.csv') ","0b87b8cb":"df.head()","7babd0c5":"df.info()","cf62e725":"df.describe()","b083fb71":"df.shape","c575e500":"# Visualizing the opening prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('Opening Price USD ($)')\nplt.plot(df['open'])\nplt.show()","0b1d34fe":"# Visualizing the high prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('High Price USD ($)')\nplt.plot(df['high'])\nplt.show()","a8715a59":"# Visualizing the low prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('Low Price USD ($)')\nplt.plot(df['low'])\nplt.show()","97846cee":"# Visualizing the closing prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('Closing Price USD ($)')\nplt.plot(df['close'])\nplt.show()","7db43e6d":"df2 = df['close']","48e6281c":"df2.tail()","436dd0aa":"df2 = pd.DataFrame(df2)     ","8aabfe1a":"df2.tail()","f63fb23d":"# Prediction 100 days into the future.\nfuture_days = 100\ndf2['Prediction'] = df2['close'].shift(-future_days)","9e0ec1fd":"df2.tail()","9f0bd9e3":"X = np.array(df2.drop(['Prediction'], 1))[:-future_days]\nprint(X)","1550c3c9":"y = np.array(df2['Prediction'])[:-future_days]\nprint(y)","f83e61d8":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","1b825bf5":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression","126c5646":"# Implementing Linear and Decision Tree Regression Algorithms.\ntree = DecisionTreeRegressor().fit(x_train, y_train)\nlr = LinearRegression().fit(x_train, y_train)","d9cbfd1b":"x_future = df2.drop(['Prediction'], 1)[:-future_days]\nx_future = x_future.tail(future_days)\nx_future = np.array(x_future)\nx_future","7f54e2b5":"tree_prediction = tree.predict(x_future)\nprint(tree_prediction)","d72a5dc6":"lr_prediction = lr.predict(x_future)\nprint(lr_prediction)","a218e212":"predictions = tree_prediction \nvalid = df2[X.shape[0]:]\nvalid['Predictions'] = predictions","763d4c4f":"plt.figure(figsize=(16,8))\nplt.title(\"Model\")\nplt.xlabel('Days')\nplt.ylabel('Close Price USD ($)')\nplt.plot(df2['close'])\nplt.plot(valid[['close', 'Predictions']])\nplt.legend([\"Original\", \"Valid\", 'Predicted'])\nplt.show()","004be48b":"# Linear and Decision Tree Regression","2d993b7f":"# Stock Market Prediction using Decision Tree","25374dec":"# Importing Libraries","5c5f4d09":"# EDA","8a569a4f":"# Data","6ba89612":"In this notebook I take a look at stock market prediction using decision tree and linear regression."}}