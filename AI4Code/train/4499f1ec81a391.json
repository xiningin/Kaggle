{"cell_type":{"b740e4a3":"code","508d1d2f":"code","04fdb98d":"code","181dbf8f":"code","36350ccc":"code","e0cfd7a9":"code","67c5f6e3":"markdown","e5f8cdb6":"markdown","fb706021":"markdown","0804d60e":"markdown","83fb5bca":"markdown","3f641445":"markdown","29051d3b":"markdown","45232782":"markdown","dd14768d":"markdown"},"source":{"b740e4a3":"# !pip install d2l > d2l_install.out\nimport torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\nclass Reshape(torch.nn.Module):\n    def forward(self, x):\n        return x.view(-1, 1, 28, 28)\n\nnet = torch.nn.Sequential(Reshape(), nn.Conv2d(1, 6, kernel_size=7,\n                                               padding=3), nn.Sigmoid(),\n                          nn.AvgPool2d(kernel_size=2, stride=2),\n                          nn.Conv2d(6, 16, kernel_size=5), nn.Sigmoid(),\n                          nn.AvgPool2d(kernel_size=2, stride=2), nn.Flatten(),\n                          nn.Linear(16 * 5 * 5, 120), nn.Sigmoid(),\n                          nn.Linear(120, 84), nn.Sigmoid(), nn.Linear(84, 10))","508d1d2f":"X = torch.rand(size=(1, 1, 28, 28), dtype=torch.float32)\nfor layer in net:\n    X = layer(X)\n    print(layer.__class__.__name__, 'output shape: \\t', X.shape)","04fdb98d":"batch_size = 256\ntrain_iter, test_iter = d2l.load_data_fashion_mnist(batch_size=batch_size)","181dbf8f":"def evaluate_accuracy_gpu(net, data_iter, device=None):  #@save\n    \"\"\"\u4f7f\u7528GPU\u8ba1\u7b97\u6a21\u578b\u5728\u6570\u636e\u96c6\u4e0a\u7684\u7cbe\u5ea6\u3002\"\"\"\n    if isinstance(net, torch.nn.Module):\n        net.eval()  # \u8bbe\u7f6e\u4e3a\u8bc4\u4f30\u6a21\u5f0f\n        if not device:\n            device = next(iter(net.parameters())).device\n    # \u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf\uff0c\u603b\u9884\u6d4b\u7684\u6570\u91cf\n    metric = d2l.Accumulator(2)\n    for X, y in data_iter:\n        if isinstance(X, list):\n            # BERT\u5fae\u8c03\u6240\u9700\u7684\uff08\u4e4b\u540e\u5c06\u4ecb\u7ecd\uff09\n            X = [x.to(device) for x in X]\n        else:\n            X = X.to(device)\n        y = y.to(device)\n        metric.add(d2l.accuracy(net(X), y), y.numel())\n    return metric[0] \/ metric[1]","36350ccc":"#@save\ndef train_ch6(net, train_iter, test_iter, num_epochs, lr, device):\n    \"\"\"Train a model with a GPU (defined in Chapter 6).\"\"\"\n    def init_weights(m):\n        if type(m) == nn.Linear or type(m) == nn.Conv2d:\n            nn.init.xavier_uniform_(m.weight)\n\n    net.apply(init_weights)\n    print('training on', device)\n    net.to(device)\n    optimizer = torch.optim.SGD(net.parameters(), lr=lr)\n    loss = nn.CrossEntropyLoss()\n    animator = d2l.Animator(xlabel='epoch', xlim=[1, num_epochs],\n                            legend=['train loss', 'train acc', 'test acc'])\n    timer, num_batches = d2l.Timer(), len(train_iter)\n    for epoch in range(num_epochs):\n        # \u8bad\u7ec3\u635f\u5931\u4e4b\u548c\uff0c\u8bad\u7ec3\u51c6\u786e\u7387\u4e4b\u548c\uff0c\u8303\u4f8b\u6570\n        metric = d2l.Accumulator(3)\n        net.train()\n        for i, (X, y) in enumerate(train_iter):\n            timer.start()\n            optimizer.zero_grad()\n            X, y = X.to(device), y.to(device)\n            y_hat = net(X)\n            l = loss(y_hat, y)\n            l.backward()\n            optimizer.step()\n            with torch.no_grad():\n                metric.add(l * X.shape[0], d2l.accuracy(y_hat, y), X.shape[0])\n            timer.stop()\n            train_l = metric[0] \/ metric[2]\n            train_acc = metric[1] \/ metric[2]\n            if (i + 1) % (num_batches \/\/ 5) == 0 or i == num_batches - 1:\n                animator.add(epoch + (i + 1) \/ num_batches,\n                             (train_l, train_acc, None))\n        test_acc = evaluate_accuracy_gpu(net, test_iter)\n        animator.add(epoch + 1, (None, None, test_acc))\n    print(f'loss {train_l:.3f}, train acc {train_acc:.3f}, '\n          f'test acc {test_acc:.3f}')\n    print(f'{metric[2] * num_epochs \/ timer.sum():.1f} examples\/sec '\n          f'on {str(device)}')","e0cfd7a9":"lr, num_epochs = 0.9, 10\ntrain_ch6(net, train_iter, test_iter, num_epochs, lr, d2l.try_gpu())","67c5f6e3":"\u73b0\u5728\uff0c\u6211\u4eec\u8bad\u7ec3\u548c\u8bc4\u4f30 LeNet-5 \u6a21\u578b\u3002\n","e5f8cdb6":"\u4e3a\u4e86\u8fdb\u884c\u8bc4\u4f30\uff0c\u6211\u4eec\u9700\u8981\u5bf9 :numref:`sec_softmax_scratch` \u4e2d\u63cf\u8ff0\u7684 `evaluate_accuracy` \u51fd\u6570\u8fdb\u884c\u8f7b\u5fae\u7684\u4fee\u6539\u3002\n\u7531\u4e8e\u5b8c\u6574\u7684\u6570\u636e\u96c6\u4f4d\u4e8e\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u5728\u6a21\u578b\u4f7f\u7528 GPU \u8ba1\u7b97\u6570\u636e\u96c6\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u590d\u5236\u5230\u663e\u5b58\u4e2d\u3002\n","fb706021":"\u8bf7\u6ce8\u610f\uff0c\u5728\u6574\u4e2a\u5377\u79ef\u5757\u4e2d\uff0c\u4e0e\u4e0a\u4e00\u5c42\u76f8\u6bd4\uff0c\u6bcf\u4e00\u5c42\u7279\u5f81\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u90fd\u51cf\u5c0f\u4e86\u3002\n\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4f7f\u7528 2 \u4e2a\u50cf\u7d20\u7684\u586b\u5145\uff0c\u6765\u8865\u507f $5 \\times 5$ \u5377\u79ef\u6838\u5bfc\u81f4\u7684\u7279\u5f81\u51cf\u5c11\u3002\n\u76f8\u53cd\uff0c\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\u6ca1\u6709\u586b\u5145\uff0c\u56e0\u6b64\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u90fd\u51cf\u5c11\u4e86 4 \u4e2a\u50cf\u7d20\u3002\n\u968f\u7740\u5c42\u53e0\u7684\u4e0a\u5347\uff0c\u901a\u9053\u7684\u6570\u91cf\u4ece\u8f93\u5165\u65f6\u7684 1 \u4e2a\uff0c\u589e\u52a0\u5230\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\u7684 6 \u4e2a\uff0c\u518d\u5230\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\u7684 16 \u4e2a\u3002\n\u540c\u65f6\uff0c\u6bcf\u4e2a\u6c60\u5316\u5c42\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u90fd\u51cf\u534a\u3002\u6700\u540e\uff0c\u6bcf\u4e2a\u5168\u8fde\u63a5\u5c42\u51cf\u5c11\u7ef4\u6570\uff0c\u6700\u7ec8\u8f93\u51fa\u4e00\u4e2a\u7ef4\u6570\u4e0e\u7ed3\u679c\u5206\u7c7b\u6570\u76f8\u5339\u914d\u7684\u8f93\u51fa\u3002\n\n\n## \u6a21\u578b\u8bad\u7ec3\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86 LeNet \uff0c\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u6a21\u578b\u5728 Fashion-MNIST \u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u3002\n","0804d60e":"# \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08LeNet\uff09\n:label:`sec_lenet`\n\n\n\u901a\u8fc7\u4e4b\u524d\u51e0\u8282\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u6240\u9700\u7ec4\u4ef6\u3002\n\u56de\u60f3\u4e00\u4e0b\uff0c\u4e4b\u524d\u6211\u4eec\u5c06 softmax \u56de\u5f52\u6a21\u578b\uff08 :numref:`sec_softmax_scratch` \uff09\u548c\u591a\u5c42\u611f\u77e5\u673a\u6a21\u578b\uff08 :numref:`sec_mlp_scratch` \uff09\u5e94\u7528\u4e8e Fashion-MNIST \u6570\u636e\u96c6\u4e2d\u7684\u670d\u88c5\u56fe\u7247\u4e0a\u3002\n\u4e3a\u4e86\u80fd\u591f\u5e94\u7528 softmax \u56de\u5f52\u548c\u591a\u5c42\u611f\u77e5\u673a\uff0c\u6211\u4eec\u9996\u5148\u5c06\u6bcf\u4e2a\u5927\u5c0f\u4e3a $28\\times28$ \u7684\u56fe\u50cf\u5c55\u5e73\u4e3a\u4e00\u4e2a 784 \u56fa\u5b9a\u957f\u5ea6\u7684\u4e00\u7ef4\u5411\u91cf\uff0c\u7136\u540e\u7528\u5168\u8fde\u63a5\u5c42\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\n\u800c\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u638c\u63e1\u4e86\u5377\u79ef\u5c42\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u4fdd\u7559\u7a7a\u95f4\u7ed3\u6784\u3002\n\u540c\u65f6\uff0c\u7528\u5377\u79ef\u5c42\u4ee3\u66ff\u5168\u8fde\u63a5\u5c42\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff1a\u66f4\u7b80\u6d01\u7684\u6a21\u578b\u6240\u9700\u7684\u53c2\u6570\u66f4\u5c11\u3002\n\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd LeNet\uff0c\u5b83\u662f\u6700\u65e9\u53d1\u5e03\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e4b\u4e00\uff0c\u56e0\u5176\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\u7684\u9ad8\u6548\u6027\u80fd\u800c\u53d7\u5230\u5e7f\u6cdb\u5173\u6ce8\u3002\n\u8fd9\u4e2a\u6a21\u578b\u662f\u7531 AT&T \u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684\u7814\u7a76\u5458 Yann LeCun \u57281989\u5e74\u63d0\u51fa\u7684\uff08\u5e76\u4ee5\u5176\u547d\u540d\uff09\uff0c\u76ee\u7684\u662f\u8bc6\u522b\u56fe\u50cf :cite:`LeCun.Bottou.Bengio.ea.1998` \u4e2d\u7684\u624b\u5199\u6570\u5b57\u3002\n\u5f53\u65f6\uff0cYann LeCun \u53d1\u8868\u4e86\u7b2c\u4e00\u7bc7\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u6210\u529f\u8bad\u7ec3\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u7a76\uff0c\u8fd9\u9879\u5de5\u4f5c\u4ee3\u8868\u4e86\u5341\u591a\u5e74\u6765\u795e\u7ecf\u7f51\u7edc\u7814\u7a76\u5f00\u53d1\u7684\u6210\u679c\u3002\n\n\u5f53\u65f6\uff0c LeNet \u53d6\u5f97\u4e86\u4e0e\u652f\u6301\u5411\u91cf\u673a\uff08support vector machines\uff09\u6027\u80fd\u76f8\u5ab2\u7f8e\u7684\u6210\u679c\uff0c\u6210\u4e3a\u76d1\u7763\u5b66\u4e60\u7684\u4e3b\u6d41\u65b9\u6cd5\u3002\nLeNet \u88ab\u5e7f\u6cdb\u7528\u4e8e\u81ea\u52a8\u53d6\u6b3e\u673a\uff08ATM\uff09\u673a\u4e2d\uff0c\u5e2e\u52a9\u8bc6\u522b\u5904\u7406\u652f\u7968\u7684\u6570\u5b57\u3002\n\u65f6\u81f3\u4eca\u65e5\uff0c\u4e00\u4e9b\u81ea\u52a8\u53d6\u6b3e\u673a\u4ecd\u5728\u8fd0\u884c Yann LeCun \u548c\u4ed6\u7684\u540c\u4e8b Leon Bottou \u5728\u4e0a\u4e16\u7eaa90\u5e74\u4ee3\u5199\u7684\u4ee3\u7801\u5462\uff01\n\n## LeNet\n\n\u603b\u4f53\u6765\u770b\uff0cLeNet (LeNet-5) \u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\n\n* \u5377\u79ef\u7f16\u7801\u5668\uff1a\u7531\u4e24\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210;\n* \u5168\u8fde\u63a5\u5c42\u5bc6\u96c6\u5757\uff1a\u7531\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u7ec4\u6210\u3002\n\n\u8be5\u7ed3\u6784\u5728 :numref:`img_lenet` \u4e2d\u6240\u5c55\u793a\u3002\n\n![LeNet\u4e2d\u7684\u6570\u636e\u6d41\u3002\u8f93\u5165\u662f\u624b\u5199\u6570\u5b57\uff0c\u8f93\u51fa\u4e3a10\u79cd\u53ef\u80fd\u7ed3\u679c\u7684\u6982\u7387\u3002](..\/img\/lenet.svg)\n:label:`img_lenet`\n\n\u6bcf\u4e2a\u5377\u79ef\u5757\u4e2d\u7684\u57fa\u672c\u5355\u5143\u662f\u4e00\u4e2a\u5377\u79ef\u5c42\u3001\u4e00\u4e2a sigmoid \u6fc0\u6d3b\u51fd\u6570\u548c\u5e73\u5747\u6c60\u5316\u5c42\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136 ReLU \u548c\u6700\u5927\u6c60\u5316\u5c42\u66f4\u6709\u6548\uff0c\u4f46\u5b83\u4eec\u572820\u4e16\u7eaa90\u5e74\u4ee3\u8fd8\u6ca1\u6709\u51fa\u73b0\u3002\u6bcf\u4e2a\u5377\u79ef\u5c42\u4f7f\u7528 $5\\times 5$ \u5377\u79ef\u6838\uff0c\u8fd9\u4e9b\u5c42\u5c06\u8f93\u5165\u6620\u5c04\u5230\u591a\u4e2a\u4e8c\u7ef4\u7279\u5f81\u8f93\u51fa\uff0c\u901a\u5e38\u540c\u65f6\u589e\u52a0\u901a\u9053\u7684\u6570\u91cf\u3002\u7b2c\u4e00\u5377\u79ef\u5c42\u6709 6 \u4e2a\u8f93\u51fa\u901a\u9053\uff0c\u800c\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\u6709 16 \u4e2a\u8f93\u51fa\u901a\u9053\u3002\u6bcf\u4e2a $2\\times2$ \u6c60\u64cd\u4f5c\uff08\u6b65\u9aa42\uff09\u901a\u8fc7\u7a7a\u95f4\u4e0b\u91c7\u6837\u5c06\u7ef4\u6570\u51cf\u5c11 4 \u500d\u3002\u5377\u79ef\u7684\u8f93\u51fa\u5f62\u72b6\u7531\u6279\u91cf\u5927\u5c0f\u3001\u901a\u9053\u6570\u3001\u9ad8\u5ea6\u3001\u5bbd\u5ea6\u51b3\u5b9a\u3002\n\n\u4e3a\u4e86\u5c06\u5377\u79ef\u5757\u7684\u8f93\u51fa\u4f20\u9012\u7ed9\u7a20\u5bc6\u5757\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u5c0f\u6279\u91cf\u4e2d\u5c55\u5e73\u6bcf\u4e2a\u6837\u672c\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u56db\u7ef4\u8f93\u5165\u8f6c\u6362\u6210\u5168\u8fde\u63a5\u5c42\u6240\u671f\u671b\u7684\u4e8c\u7ef4\u8f93\u5165\u3002\u8fd9\u91cc\u7684\u4e8c\u7ef4\u8868\u793a\u7684\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7d22\u5f15\u5c0f\u6279\u91cf\u4e2d\u7684\u6837\u672c\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7ed9\u51fa\u6bcf\u4e2a\u6837\u672c\u7684\u5e73\u9762\u5411\u91cf\u8868\u793a\u3002LeNet \u7684\u7a20\u5bc6\u5757\u6709\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5206\u522b\u6709 120\u300184 \u548c 10 \u4e2a\u8f93\u51fa\u3002\u56e0\u4e3a\u6211\u4eec\u4ecd\u5728\u6267\u884c\u5206\u7c7b\uff0c\u6240\u4ee5\u8f93\u51fa\u5c42\u7684 10 \u7ef4\u5bf9\u5e94\u4e8e\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u6570\u91cf\u3002\n\n\u901a\u8fc7\u4e0b\u9762\u7684 LeNet \u4ee3\u7801\uff0c\u4f60\u4f1a\u76f8\u4fe1\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u6b64\u7c7b\u6a21\u578b\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u4f8b\u5316\u4e00\u4e2a `Sequential` \u5757\u5e76\u5c06\u9700\u8981\u7684\u5c42\u8fde\u63a5\u5728\u4e00\u8d77\u3002\n","83fb5bca":"\u4e3a\u4e86\u4f7f\u7528 GPU\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u70b9\u5c0f\u6539\u52a8\u3002\n\u4e0e :numref:`sec_softmax_scratch` \u4e2d\u5b9a\u4e49\u7684 `train_epoch_ch3` \u4e0d\u540c\uff0c\u5728\u8fdb\u884c\u6b63\u5411\u548c\u53cd\u5411\u4f20\u64ad\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e00\u5c0f\u6279\u91cf\u6570\u636e\u79fb\u52a8\u5230\u6211\u4eec\u6307\u5b9a\u7684\u8bbe\u5907\uff08\u4f8b\u5982 GPU\uff09\u4e0a\u3002\n\n\u5982\u4e0b\u6240\u793a\uff0c\u8bad\u7ec3\u51fd\u6570 `train_ch6` \u4e5f\u7c7b\u4f3c\u4e8e :numref:`sec_softmax_scratch` \u4e2d\u5b9a\u4e49\u7684 `train_ch3` \u3002\n\u7531\u4e8e\u6211\u4eec\u5c06\u5b9e\u73b0\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4e3b\u8981\u4f7f\u7528\u9ad8\u7ea7 API\u3002\n\u4ee5\u4e0b\u8bad\u7ec3\u51fd\u6570\u5047\u5b9a\u4ece\u9ad8\u7ea7 API \u521b\u5efa\u7684\u6a21\u578b\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u4f18\u5316\u3002\n\u6211\u4eec\u4f7f\u7528\u5728 :numref:`subsec_xavier` \u4e2d\u4ecb\u7ecd\u7684 Xavier \u968f\u673a\u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\u3002\n\u4e0e\u5168\u8fde\u63a5\u5c42\u4e00\u6837\uff0c\u6211\u4eec\u4f7f\u7528\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u548c\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002\n","3f641445":"## \u5c0f\u7ed3\n\n* \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u662f\u4e00\u7c7b\u4f7f\u7528\u5377\u79ef\u5c42\u7684\u7f51\u7edc\u3002\n* \u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6211\u4eec\u7ec4\u5408\u4f7f\u7528\u5377\u79ef\u5c42\u3001\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u548c\u6c60\u5316\u5c42\u3002\n* \u4e3a\u4e86\u6784\u9020\u9ad8\u6027\u80fd\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u6211\u4eec\u901a\u5e38\u5bf9\u5377\u79ef\u5c42\u8fdb\u884c\u6392\u5217\uff0c\u9010\u6e10\u964d\u4f4e\u5176\u8868\u793a\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u540c\u65f6\u589e\u52a0\u901a\u9053\u6570\u3002\n* \u5728\u4f20\u7edf\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5377\u79ef\u5757\u7f16\u7801\u5f97\u5230\u7684\u8868\u5f81\u5728\u8f93\u51fa\u4e4b\u524d\u9700\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5904\u7406\u3002\n* LeNet\u662f\u6700\u65e9\u53d1\u5e03\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e4b\u4e00\u3002\n\n## \u7ec3\u4e60\n\n1. \u5c06\u5e73\u5747\u6c60\u5316\u5c42\u66ff\u6362\u4e3a\u6700\u5927\u6c60\u5316\u5c42\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n1. \u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a\u57fa\u4e8e LeNet \u7684\u66f4\u590d\u6742\u7684\u7f51\u7edc\uff0c\u4ee5\u63d0\u9ad8\u5176\u51c6\u786e\u6027\u3002\n    1. \u8c03\u6574\u5377\u79ef\u7a97\u53e3\u5927\u5c0f\u3002\n    1. \u8c03\u6574\u8f93\u51fa\u901a\u9053\u7684\u6570\u91cf\u3002\n    1. \u8c03\u6574\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\uff09\u3002\n    1. \u8c03\u6574\u5377\u79ef\u5c42\u7684\u6570\u91cf\u3002\n    1. \u8c03\u6574\u5168\u8fde\u63a5\u5c42\u7684\u6570\u91cf\u3002\n    1. \u8c03\u6574\u5b66\u4e60\u7387\u548c\u5176\u4ed6\u8bad\u7ec3\u7ec6\u8282\uff08\u4f8b\u5982\uff0c\u521d\u59cb\u5316\u548c\u5468\u671f\u6570\uff09\u3002\n1. \u5728 MNIST \u6570\u636e\u96c6\u4e0a\u5c1d\u8bd5\u4ee5\u4e0a\u6539\u8fdb\u7684\u7f51\u7edc\u3002\n1. \u663e\u793a\u4e0d\u540c\u8f93\u5165\uff08\u4f8b\u5982\u6bdb\u8863\u548c\u5916\u5957\uff09\u65f6\uff0cLeNet \u7b2c\u4e00\u5c42\u548c\u7b2c\u4e8c\u5c42\u7684\u6fc0\u6d3b\u503c\u3002\n","29051d3b":"\u6211\u4eec\u5bf9\u539f\u59cb\u6a21\u578b\u505a\u4e86\u4e00\u70b9\u5c0f\u6539\u52a8\uff0c\u53bb\u6389\u4e86\u6700\u540e\u4e00\u5c42\u7684\u9ad8\u65af\u6fc0\u6d3b\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u4e2a\u7f51\u7edc\u4e0e\u6700\u521d\u7684 LeNet-5 \u4e00\u81f4\u3002\n\n\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u5927\u5c0f\u4e3a $28 \\times 28$ \u7684\u5355\u901a\u9053\uff08\u9ed1\u767d\uff09\u56fe\u50cf\u901a\u8fc7 LeNet\u3002 \u901a\u8fc7\u5728\u6bcf\u4e00\u5c42\u6253\u5370\u8f93\u51fa\u7684\u5f62\u72b6\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u6a21\u578b\uff0c\u4ee5\u786e\u4fdd\u5176\u64cd\u4f5c\u4e0e\u6211\u4eec\u671f\u671b\u7684 :numref:`img_lenet_vert` \u4e00\u81f4\u3002\n\n![LeNet \u7684\u7b80\u5316\u7248\u3002](..\/img\/lenet-vert.svg)\n:label:`img_lenet_vert`\n","45232782":"[Discussions](https:\/\/discuss.d2l.ai\/t\/1860)\n","dd14768d":"\u867d\u7136\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\u8f83\u5c11\uff0c\u4f46\u4e0e\u6df1\u5ea6\u7684\u591a\u5c42\u611f\u77e5\u673a\u76f8\u6bd4\uff0c\u5b83\u4eec\u7684\u8ba1\u7b97\u6210\u672c\u4ecd\u7136\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53c2\u6570\u90fd\u53c2\u4e0e\u66f4\u591a\u7684\u4e58\u6cd5\u3002\n\u5982\u679c\u4f60\u6709\u673a\u4f1a\u4f7f\u7528GPU\uff0c\u53ef\u4ee5\u7528\u5b83\u52a0\u5feb\u8bad\u7ec3\u3002\n"}}