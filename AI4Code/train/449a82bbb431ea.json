{"cell_type":{"651f4fa0":"code","ea15b8b8":"code","e944f56b":"code","57bd4884":"code","01fc5c4e":"code","6fea2a67":"code","8783b7f6":"code","4351f894":"code","6aad811e":"code","7393d55f":"code","db2f953b":"code","9970d0b2":"code","99b7f2b8":"code","62073761":"code","a9c85df5":"code","bf5baf0a":"code","9e76e64a":"code","77bf6690":"code","3c6a7a49":"code","c637c0b4":"code","7af17f83":"code","6a81c99f":"markdown","defc7489":"markdown"},"source":{"651f4fa0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom matplotlib.colors import ListedColormap\nfrom matplotlib.colors import ListedColormap\nprint('basic load')\n","ea15b8b8":"#reading file\ndef convertTxtToList():\n    f=open(\"\/kaggle\/input\/p2hdata\/PH2Dataset\/PH2_dataset.txt\", \"r\")\n    lines = f.readlines()\n    returnList = []\n    for line in lines:\n        line = line.replace('||', '|')\n        line = line.replace('\\n', '')\n        lista = list(str(line))\n        if len(lista) > 0:\n            lista[0] = ''\n            lista[len(lista)-1] = ''\n            newLine = ''.join(lista)\n            arr = newLine.split('|')\n            arr = [x.strip() for x in arr]\n            if len(arr) > 1:\n                returnList.append(arr)\n        \n    f.close()   \n    return returnList","e944f56b":"#loading list\nclearFile = convertTxtToList()","57bd4884":"#convert list to a dataframe\ndf = pd.DataFrame(clearFile[1:-1], columns=clearFile[0])\ndf.head(5)","01fc5c4e":"#number of lines and columns\ndf.shape","6fea2a67":"#creating column ['number colors']\ndef createNumberColors(row):\n    arr = row['Colors'].strip().split(' ')\n    arr = [x for x in arr if x != '']\n    return len(arr)\n\ndf['number colors'] = df.apply(createNumberColors, axis=1)","8783b7f6":"#removing ['Colors']\ndf = df.drop('Colors', 1)\ndf.head(5)\n","4351f894":"#normatize ['Pigment Network']\ndf['Pigment Network'] = df['Pigment Network'].map({'T':1, 'AT':0})\ndf['Pigment Network'].value_counts()","6aad811e":"#normatize ['Dots\/Globules']\ndf['Dots\/Globules'] = df['Dots\/Globules'].map({'T':1, 'AT':0, 'A':2})\ndf['Dots\/Globules'].value_counts()","7393d55f":"#normatize ['Streaks']\ndf['Streaks'] = df['Streaks'].map({'A':1, 'P':0})\ndf['Streaks'].value_counts()","db2f953b":"#normatize ['Regression Areas']\ndf['Regression Areas'] = df['Regression Areas'].map({'A':1, 'P':0})\ndf['Regression Areas'].value_counts()","9970d0b2":"#normatize ['Blue-Whitish Veil']\ndf['Blue-Whitish Veil'] = df['Blue-Whitish Veil'].map({'A':1, 'P':0})\ndf['Blue-Whitish Veil'].value_counts()","99b7f2b8":"df.head(10)","62073761":"#graphic to check clinical diagnosis with number colors\ndf[['Clinical Diagnosis', 'number colors']].plot()","a9c85df5":"#selecting data\nx = df.iloc[:,3:10].values\ny = df.iloc[:,2].values","bf5baf0a":"#creating test and train matriz\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)","9e76e64a":"#using scaling for the matrix\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","77bf6690":"#training the algorithm\nclassifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier.fit(x_train, y_train)","3c6a7a49":"#using KNN to predict\ny_pred = classifier.predict(x_test)","c637c0b4":"#building confuse matrix\nconfusion_matrix(y_test, y_pred)","7af17f83":"#hit %\ndef hitScore(lis1, lis2):    \n    score = 0\n    for i in range(len(lis1)):\n        if lis1[i] == lis2[i]:\n            score += 1\n            \n    return round((score\/len(lis2)) * 100, 2)\nprint('Hit: '+str(hitScore(y_pred, y_test))+'%')","6a81c99f":"After runing the KNN model, it can see that the model hit the mark of 92% of right awnsers. With that its possible to say that this model was successfull to run over this data.<br>\nThe first run of this model was without the column ['number colors'], the model hit the mark of 78% of right anwsers, after the adition of this column it raised to 90%, that because theres a correlation of the quantity in colors to diagnose the melanoma.","defc7489":"This data set is a clinical analise about **melanoma** diagnoses<p>\nLegends for Clinical Diagnosis:<br>\n   0 - Common Nevus;<br>\n   1 - Atypical Nevus;<br>\n   2 - Melanoma.<p>\n\nLegends for Asymmetry:<br>\n   0 - Fully Symmetric;<br>\n   1 - Symetric in 1 axe;<br>\n   2 - Fully Asymmetric;<p>\n\nLegends for Pigment Network, Dots\/Globules, Streaks, Regression Areas, and Blue-Whitish Veil: <br>\n   A  - Absent(2);<br>\n   AT - Atypical(0);<br>\n   P  - Present(0);<br>\n   T  - Typical(1).<p>\n\nLegends for Colors: <br>\n   1 - White;<br>\n   2 - Red;<br>\n   3 - Light-Brown;<br>\n   4 - Dark-Brown;<br>\n   5 - Blue-Gray;<br>\n   6 - Black.<br>"}}