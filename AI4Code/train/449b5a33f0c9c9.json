{"cell_type":{"510ec806":"code","2d426475":"code","4f4c11d7":"code","638d041d":"code","e215e954":"code","5223fdbd":"code","a5ea27ec":"code","9ef772da":"code","b6cde147":"code","13db3935":"code","5a5a2596":"code","3cdeb81a":"code","3987144d":"code","12f6db62":"code","a701fe69":"code","9b40e893":"code","04faff85":"code","2f3a8b9c":"code","5eed15a3":"code","62ff9aeb":"code","7f2d4b0a":"code","37d0072c":"code","d53cf124":"code","25717d92":"code","fe2e0781":"code","33d212aa":"code","5bb449f2":"code","e41952e0":"code","62edec7c":"code","e48f1f7c":"code","bfdb4a09":"markdown","be4a262b":"markdown","e4b61f6e":"markdown","3232666b":"markdown","d81de8cd":"markdown","e4e5c1e4":"markdown","6b750641":"markdown","931f6e61":"markdown","6c944125":"markdown","ebee1bd0":"markdown","5ebcd42d":"markdown","8031db52":"markdown","65ce3039":"markdown","f7ba20de":"markdown","17917a38":"markdown","bccbf522":"markdown","5ba46478":"markdown","8ae9a5cc":"markdown","a7cf018b":"markdown","7025eef0":"markdown","ff54b3d7":"markdown"},"source":{"510ec806":"import numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport dateutil\nimport seaborn as sns\nfrom copy import deepcopy\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        os.path.join(dirname, filename)\nprint(\"setup completed\")","2d426475":"bikes_data_filepath = \"\/kaggle\/input\/bikes-sales-sample-data\/SalesOrders.csv\"\nbikes_brands_filepath = \"\/kaggle\/input\/bikes-sales-sample-data\/SalesOrderItems.csv\"\n\nbikes_sales_data = pd.read_csv(bikes_data_filepath)\nbikes_brands = pd.read_csv(bikes_data_filepath)","4f4c11d7":"#Display first 10 rows\nbikes_sales_data.head(10)","638d041d":"# Display total number of (rows, cols) using shape\nbikes_sales_data.shape","e215e954":"# use isnull() to get the null values\nnull_values = bikes_sales_data.isnull().sum()\nnull_values\n","5223fdbd":"# how many total missing values do we have?\ntotal_cells = np.product(bikes_sales_data.shape)\ntotal_missing = null_values.sum()\n\n# percent of data that is missing\npercent_missing = (total_missing\/total_cells) * 100\n\nprint(\"Total cells in data set: \" + str(total_cells),\n      \"Total of Null values: \" +\n      str(total_missing), \"percent missing: \" +\n      str(percent_missing))\n","a5ea27ec":"#Drop NOTEID column \nbikes_sales_data = bikes_sales_data.drop(['NOTEID'], axis = 1)\n","9ef772da":"# double check if there is any null values after droping NOTEID col\nprint(bikes_sales_data.isnull().sum())","b6cde147":"# declear paython function\n\ndef bar_plot(variable):\n    \"\"\"\n        input: variable e.g. SALES ORG\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = bikes_sales_data[variable]\n    #count numer of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","13db3935":"SALESORG_CATEGORY= [\"SALESORG\"]\nfor cat in SALESORG_CATEGORY:\n    bar_plot(cat)","5a5a2596":"\nsorg_total_sales = bikes_sales_data.groupby('SALESORG')['NETAMOUNT'].sum()\nprint(sorg_total_sales)\n","3cdeb81a":"bikes_sales_data[['SALESORG','NETAMOUNT']].groupby('SALESORG').sum()","3987144d":"plt.figure(figsize=(4, 4)) # you can remove this line chart will be bigger \nplt.title('Sales Total Per Sales Org.')\nsorg_total_sales.plot(kind='bar')","12f6db62":"#sorg_total_sales.plot(kind='pie')\n#sorg_total_sales.plot.pie()\nsorg_total_sales.plot.pie(autopct='%1.1f%%')","a701fe69":"sorg_total_sales = sorg_total_sales.reset_index()\nsorg_total_sales.sort_values(by='NETAMOUNT', ascending=False)\n","9b40e893":"year_total_sales = bikes_sales_data[['CREATEDAT','NETAMOUNT']].groupby('CREATEDAT').sum()\n","04faff85":"year_total_sales","2f3a8b9c":"#Remove index\nyear_total_sales_no_index = bikes_sales_data[['CREATEDAT','NETAMOUNT']]","5eed15a3":"year_total_sales_no_index","62ff9aeb":"#Check column data type\nfor col in year_total_sales_no_index:\n    print (type(year_total_sales_no_index[col][1]))","7f2d4b0a":"# Convert integer to Python string\nyear_total_sales_no_index['CREATEDAT'] = year_total_sales_no_index.CREATEDAT.astype('str')\n#year_total_sales_no_index['NETAMOUNT'] = year_total_sales_no_index.CREATEDAT.astype('float')","37d0072c":"for col in year_total_sales_no_index:\n    print (type(year_total_sales_no_index[col][1]))","d53cf124":"# Substring Year from Date\nfor index_label, row_series in year_total_sales_no_index.iterrows():\n    string = row_series['CREATEDAT']   \n    year_total_sales_no_index.at[index_label , 'CREATEDAT'] = string[0:4]\n    ","25717d92":"year_total_sales_no_index","fe2e0781":"year_total_sales_no_index.NETAMOUNT.hist()\n","33d212aa":"year_total_sales_no_index = year_total_sales_no_index[['CREATEDAT','NETAMOUNT']].groupby('CREATEDAT').sum()\nyear_total_sales_no_index","5bb449f2":"# suppress scientific notation in Pandas 1.184117e+07 to show as 11841174.625\nyear_total_sales_no_index.apply(lambda x: '%.5f' % x, axis=1)\n\n","e41952e0":"year_total_sales_no_index.plot(kind='bar', title=\"Sales Total Per Year\")","62edec7c":"year_total_sales_no_index.plot.pie(autopct='%1.1f%%', subplots=True)","e48f1f7c":"sns.boxplot(year_total_sales_no_index.NETAMOUNT)\n","bfdb4a09":"# Draw Histogram for sales orders amount","be4a262b":"**Get Total (rows, cols) using: shape**","e4b61f6e":"**Convert CREATEDAT values from integer to string**","3232666b":"**Sort data by TOP sales org | **TOP sales value****","d81de8cd":"<table>\n<tr>\n<td><img src=\"https:\/\/i.imgur.com\/skaZPhb.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/gaNttYd.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/pampioh.png\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/OSbuszd.png\"\/><\/td>\n\n<!--<td><img src=\"https:\/\/i.imgur.com\/ydaMhT1.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/WLAqDSV.png\" width=\"350px\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/Tj2y9gH.png\"\/><\/td>\n<td><img src=\"https:\/\/i.imgur.com\/X0qXLCu.png\"\/><\/td>-->\n<\/tr>\n<tr>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Bar Chat<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Line Chart<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Area Chart<\/td>\n<td style=\"font-weight:bold; font-size:16px; text-align:left\">Histogram<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left\">df.plot.bar()<\/td>\n<td style=\"text-align:left\">df.plot.line()<\/td>\n<td style=\"text-align:left\">df.plot.area()<\/td>\n<td style=\"text-align:left\">df.plot.hist()<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left\">Good for nominal and small ordinal categorical data.<\/td>\n<td style=\"text-align:left\">\tGood for ordinal categorical and interval data.<\/td>\n<td style=\"text-align:left\">Good for ordinal categorical and interval data.<\/td>\n<td style=\"text-align:left\">Good for interval data.<\/td>\n<\/tr>\n<\/table>","e4e5c1e4":"Create Sales Org Category","6b750641":"**Conclusion:** EMEA Sales Orgnization is the best sales org. (value + transactions)","931f6e61":"# Data Cleaning\nFind the null values","6c944125":"EMA Sales Orgnization is having more sales transactions than other sales org.","ebee1bd0":"**Please consider upvoting if you found it useful to you :)**\n\n**Thanks.**","5ebcd42d":"**check if the CREATEDAT data type converted to string type**","8031db52":"* **NOTEID filed is empty with no data which means all valus are null.**\n* **Kaggl Advise: waht is null keep it null... it is not important**","65ce3039":"**another way for dispaly .**","f7ba20de":"#  SAP bikes store sales analysis\n* **Dummy sales data (bikes sales)**\n* **Data warehouse cloud content master**","17917a38":"44.2% of sales are coming from EMEA","bccbf522":"# (EDA) Load and explor sales orders data","5ba46478":"****SAP save date as integer :)  2018-01-11 = 20180111","8ae9a5cc":"# Group sales records per sales Orgnization\n\n","a7cf018b":"# Sales Per Sales Org (Top Sales Org).","7025eef0":"# Pie Chart","ff54b3d7":"# Sales Total Per Year (Best Year Sales)."}}