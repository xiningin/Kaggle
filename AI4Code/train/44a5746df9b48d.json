{"cell_type":{"b21de313":"code","4f8947db":"code","e5406200":"code","4df72864":"code","e2b62352":"code","de07b8a4":"code","0c1cd6f8":"code","de7f4059":"code","3de670fb":"code","a1941871":"code","8d1bb547":"code","42aaef2b":"code","a6aa2fe9":"markdown","a9ad546b":"markdown","c39016a9":"markdown","92f151ba":"markdown","393a5d2b":"markdown","c47f28a0":"markdown","6b8c783f":"markdown","bba16f13":"markdown"},"source":{"b21de313":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport shap\n\nshap.initjs()","4f8947db":"np.random.seed(27)\ntf.random.set_seed(27)","e5406200":"df = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")\nprint(f\"Dataset shape: {df.shape}\")\nprint(df.head())\nprint(df.describe())","4df72864":"# quick and dirty one-hot encoding\ndf = pd.get_dummies(df,prefix=['ca','thal','cp'],columns=['ca','thal','cp'], drop_first=True)","e2b62352":"df_train = df.dropna()\ndf_target = df_train.pop('target')\n\nX_train, X_test, y_train, y_test = train_test_split(df_train, df_target, test_size=0.2, random_state=42)\n\nnormalized_X_train=(X_train-X_train.mean())\/X_train.std()\nnormalized_X_test=(X_test-X_train.mean())\/X_train.std()","de07b8a4":"def build_model():\n    inputs = keras.Input(shape=(len(X_train.keys()),))\n    x = layers.Dense(64, activation='tanh')(inputs) \n    x = layers.Dense(64, activation='tanh')(x)\n    x = layers.Dense(32, activation='tanh')(x)\n    outputs = layers.Dense(1, activation='sigmoid')(x)\n\n    model = keras.Model(inputs, outputs, name=\"death_rate_model\")\n\n    optimizer = tf.keras.optimizers.Adam()\n    model.compile(loss='binary_crossentropy',\n                  optimizer=optimizer,\n                  metrics=['accuracy'])\n    return model\n  \nearly_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)   \n\nclass PrintDot(keras.callbacks.Callback):\n    def on_epoch_end(self, epoch, logs):\n        if epoch % 100 == 0: print('')\n        print('.', end='')","0c1cd6f8":"model = build_model()","de7f4059":"model.fit(X_train, y_train, epochs=3000, validation_split=0.2, verbose=0, callbacks=[early_stop, PrintDot()])\nprint(\"\")\ntest_loss, test_acc = model.evaluate(X_test, y_test, verbose=2)","3de670fb":"kernel_explainer = shap.KernelExplainer(model.predict, X_test)\nshap_values = kernel_explainer.shap_values(X_test, nsamples=100, l1_reg=\"aic\")[0]","a1941871":"for i in np.random.choice(range(len(X_test)),5):\n    x = shap.force_plot(kernel_explainer.expected_value, shap_values[i], X_train.iloc[i])\n    display(x)","8d1bb547":"shap.summary_plot(shap_values, X_test)","42aaef2b":"shap.force_plot(kernel_explainer.expected_value, shap_values, X_test)","a6aa2fe9":"## Build a simple neural network","a9ad546b":"## Shapley summary trying to explain the model and give us insights\nClearly a high thalach is an unhealthy ","c39016a9":"# Shapley\nThis is where we let the [Shap python library](https:\/\/github.com\/slundberg\/shap) explain how our model came to a decision of **1 = Heart desease** or **0 = all clear**\nIt can also give a general insight in what contributes to an unhealthy heart","92f151ba":"## Shapley values visualized\nA random selection of sample, rerun the cell to get different samples","393a5d2b":"# Heart Disease UCI\nhttps:\/\/www.kaggle.com\/ronitf\/heart-disease-uci\n\nQuick model to demo [Shap python library](https:\/\/github.com\/slundberg\/shap) it helps get insights in to the models decisions\n","c47f28a0":"### Dynamic plot\nbe sure to check out the combo boxes on the axis","6b8c783f":"## Lets make things reproducable","bba16f13":"## Load the data and create a normalized test\/train set"}}