{"cell_type":{"bece75e6":"code","fe645aa6":"code","a5aa4d20":"code","b4d29086":"code","4bc22d08":"code","490eddff":"code","8c578970":"code","dfa416ce":"code","3d27be3d":"code","e4afc882":"code","2d673815":"code","b6f00ca4":"code","47e43eea":"code","3b34eb1b":"code","d21ea79a":"code","641f3005":"code","bbb7d78d":"code","74bf7c46":"code","493c6133":"code","3f9a3f0e":"code","baa63b46":"code","0cc99cfa":"code","07f78842":"code","c5a56a9f":"code","b1b1e0c4":"code","8c0014c0":"code","bb15f0d2":"code","b76fe343":"code","d08ffa43":"code","b076fa0f":"code","865530fd":"code","9a4740be":"code","82a2710e":"code","c16af00d":"code","261724d7":"code","f763e7e1":"code","ed9c47d2":"code","f6468025":"code","9aebc966":"code","72a43566":"code","3a1000f9":"code","7b727384":"code","14c22cc6":"code","600cc258":"code","5ed1a412":"code","d595ad4f":"code","bbcc0b93":"code","125f931f":"code","f5cd5dd4":"code","4993ca8b":"code","3154b04d":"code","7990dcf4":"code","50c565c0":"code","0a8e556f":"code","bd957225":"code","6487d4f3":"code","ca98fd50":"code","d2130f0e":"code","aff1370d":"code","54be8cca":"code","aaa2b522":"markdown","b6a6f77b":"markdown","293ae219":"markdown"},"source":{"bece75e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe645aa6":"train_df = pd.read_csv('..\/input\/30-days-of-ml\/train.csv',index_col = 'id')\ntest_df = pd.read_csv('..\/input\/30-days-of-ml\/test.csv',index_col = 'id')","a5aa4d20":"train_df.info()","b4d29086":"test_df.info()","4bc22d08":"train_df.head()","490eddff":"test_df.head()","8c578970":"pd.crosstab(index=train_df['cat0'],columns=train_df['cat1'],normalize=True,margins=True)","dfa416ce":"train_df.corr(method='pearson')","3d27be3d":"X = train_df.copy()\ny = X.pop('target')","e4afc882":"from sklearn.preprocessing import OrdinalEncoder\n\ncategorical_transform = OrdinalEncoder()\nX = pd.DataFrame(categorical_transform.fit_transform(X),columns = X.columns)","2d673815":"cont = ['cont0','cont1','cont2','cont3','cont4','cont5','cont6','cont7','cont8','cont9','cont10','cont11','cont12','cont13']\ncat = ['cat0','cat1','cat2','cat3','cat4','cat5','cat6','cat7','cat8','cat9']","b6f00ca4":"X['cat_features'] = X[cat].sum(axis=1)","47e43eea":"X[cat+['cat_features']] = X[cat+['cat_features']].apply(np.int64)","3b34eb1b":"X.head()","d21ea79a":"X_cat = X.drop(cont,axis=1)\nX_cont = X.drop([cat+['cat_features']],axis=1)","641f3005":"X_cont.head()","bbb7d78d":"X_cat.head()","74bf7c46":"X.head()","493c6133":"X.info()","3f9a3f0e":"discrete_features = X.dtypes == 'int64'","baa63b46":"from sklearn.feature_selection import mutual_info_regression\n\nmi_scores = mutual_info_regression(X,y,discrete_features = discrete_features)\nmi_scores = pd.Series(mi_scores, name=\"MI Scores\", index=X.columns)\nmi_scores = mi_scores.sort_values(ascending=False)","0cc99cfa":"mi_scores","07f78842":"import seaborn as sns\n\nsns.lmplot(x='cont12',y='target',hue='cat2',data=train_df)","c5a56a9f":"sns.relplot(x='cont12',y='cont5',data=X)","b1b1e0c4":"X.corr(method='pearson')","8c0014c0":"sns.scatterplot(x=X['cat_features'],y=y)","bb15f0d2":"X_reduced = X.drop(cat,axis=1)","b76fe343":"X_reduced","d08ffa43":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error\nimport math","b076fa0f":"X_reduced_train,X_reduced_valid,y_train,y_valid = train_test_split(X_reduced,y,test_size=0.3,random_state=0)","865530fd":"model1 = LinearRegression(n_jobs=4)\nmodel2 = [KNeighborsRegressor(n_neighbors=i,n_jobs=4) for i in [5,10,15,20,25,30]]\nmodel3 = [RandomForestRegressor(n_estimators=j,min_samples_split=5,n_jobs=4) for j in [10,20,30,40,50,60,70,80,90,100]]\nmodel4 = XGBRegressor(n_estimators = 200, learning_rate = .07, n_jobs = 4)","9a4740be":"model3","82a2710e":"model1.fit(X_reduced_train,y_train)\nprediction1 = model1.predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction1,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction1,y_valid)))","c16af00d":"model2[0].fit(X_reduced_train,y_train)\nprediction20 = model2[0].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction20,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction20,y_valid)))","261724d7":"model2[1].fit(X_reduced_train,y_train)\nprediction21 = model2[1].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction21,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction21,y_valid)))","f763e7e1":"model2[2].fit(X_reduced_train,y_train)\nprediction22 = model2[2].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction22,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction22,y_valid)))","ed9c47d2":"model2[3].fit(X_reduced_train,y_train)\nprediction23 = model2[3].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction23,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction23,y_valid)))","f6468025":"model2[4].fit(X_reduced_train,y_train)\nprediction24 = model2[4].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction24,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction24,y_valid)))","9aebc966":"model2[5].fit(X_reduced_train,y_train)\nprediction25 = model2[5].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction25,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction25,y_valid)))","72a43566":"model3[0].fit(X_reduced_train,y_train)\nprediction30 = model3[0].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction30,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction30,y_valid)))","3a1000f9":"model3[1].fit(X_reduced_train,y_train)\nprediction31 = model3[1].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction31,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction31,y_valid)))","7b727384":"model3[2].fit(X_reduced_train,y_train)\nprediction32 = model3[2].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction32,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction32,y_valid)))","14c22cc6":"model3[3].fit(X_reduced_train,y_train)\nprediction33 = model3[3].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction33,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction33,y_valid)))","600cc258":"model3[4].fit(X_reduced_train,y_train)\nprediction34 = model3[4].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction34,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction34,y_valid)))","5ed1a412":"model3[5].fit(X_reduced_train,y_train)\nprediction35 = model3[5].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction35,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction35,y_valid)))","d595ad4f":"model3[6].fit(X_reduced_train,y_train)\nprediction36 = model3[6].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction36,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction36,y_valid)))","bbcc0b93":"model3[7].fit(X_reduced_train,y_train)\nprediction37 = model3[7].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction37,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction37,y_valid)))","125f931f":"model3[8].fit(X_reduced_train,y_train)\nprediction38 = model3[8].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction38,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction38,y_valid)))","f5cd5dd4":"model3[9].fit(X_reduced_train,y_train)\nprediction39 = model3[9].predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction39,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction39,y_valid)))","4993ca8b":"model4.fit(X_reduced_train,y_train)\nprediction4 = model4.predict(X_reduced_valid)\nprint('MAE: ',mean_absolute_error(prediction4,y_valid))\nprint('RMSE: ',math.sqrt(mean_squared_error(prediction4,y_valid)))","3154b04d":"test_df = pd.read_csv('..\/input\/30-days-of-ml\/test.csv')","7990dcf4":"test_df.head()","50c565c0":"test_df = pd.DataFrame(categorical_transform.fit_transform(test_df),columns = test_df.columns)\ntest_df['cat_features'] = test_df[cat].sum(axis=1)\ntest_df[cat+['cat_features']] = test_df[cat+['cat_features']].apply(np.int64)\ntest_df_reduced = test_df.drop(cat,axis=1)","0a8e556f":"test_df_reduced.head()","bd957225":"test_prediction = model1.predict(test_df_reduced)","6487d4f3":"FirstSubmission = pd.DataFrame({'ID': df1.id, 'TARGET': test_prediction})","ca98fd50":"SecondSubmission = pd.DataFrame({'id': df1.id, 'target': test_prediction})","d2130f0e":"ThirdSubmission = pd.DataFrame({'id': test_df.id, 'target': test_prediction})","aff1370d":"FourthSubmission = pd.DataFrame({'id': test_df.id, 'target': test_prediction})","54be8cca":"FourthSubmission.to_csv('FourthSubmission.csv',index=False)","aaa2b522":"1. Data Investigation","b6a6f77b":"1. Exploratory Data Analysis","293ae219":"1. Data Loading"}}