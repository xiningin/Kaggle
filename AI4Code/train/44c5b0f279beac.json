{"cell_type":{"c6277a37":"code","982cdeac":"code","88600ae3":"code","7459f2fe":"code","2fe6af90":"code","5143089a":"code","64c2f70c":"code","e11eadec":"code","87e55c4d":"code","fc345283":"code","2c5dd867":"markdown","b9cdb501":"markdown","4369922e":"markdown","36a7ad29":"markdown","4601f602":"markdown","9514ee65":"markdown","5510b24b":"markdown","cdcf7ca6":"markdown"},"source":{"c6277a37":"import numpy as np \nimport pandas as pd \nimport os","982cdeac":"weight_aepgc  = 0.2\nsub1 = pd.read_csv('..\/input\/24551-ae-gcn\/submission(3).csv') # @sin lb 24551\nsub2 = pd.read_csv('..\/input\/hawkey-ae-pretrained-gcn-3ensemble\/submission(4).csv') # @hawkey lb 248","88600ae3":"weight_nprg = 0.5\nsub3 = pd.read_csv('..\/input\/gru-5fold-2seeds-knncv-68c7e1\/submission.csv') # @ sin GRU cv 24393 forked from @ hrunic\nsub4 = pd.read_csv('..\/input\/fork-of-lstm-gru-5fold-2seeds-knncv-0a37d7\/submission.csv') # @ sin GRU+LSTM cv 24176 forked from @ hrunic\nsub5 = pd.read_csv('..\/input\/lstm-5fold-2seeds-knncv-775f37\/submission.csv') # @ sin LSTM cv 24376 forked from @ hrunic\nsub6 = pd.read_csv('..\/input\/hawkey-gcn-only-25301\/submission(5).csv') # @ hawkey GCN lb 25301\nsub7 = pd.read_csv('..\/input\/wavenet-final\/submission.csv') # @ sin Wavenet lb 258\nsub8 = pd.read_csv('..\/input\/wavenet2-moa\/wavenet2_249.csv') # @ sin Wavenet lb 249","7459f2fe":"weight_aug = 0.1\nsub9 = pd.read_csv('..\/input\/aug-data-local-training-gru-lstm\/aug_data_training_local.csv') # @ sin cv 2345","2fe6af90":"weight_pt = 0.2\nsub10 = pd.read_csv('..\/input\/open-vaccine-pytorch-pretrain\/submission.csv') # @yirun zhang lb 2420\nsub11 = pd.read_csv('..\/input\/4-ae-pretrained-sin\/submission_4_ae.csv') # @sin lb2448","5143089a":"sub12 = pd.read_csv('..\/input\/blend-of-public\/blend_of_public.csv') # @ public","64c2f70c":"final = pd.read_csv('..\/input\/stanford-covid-vaccine\/sample_submission.csv').set_index('id_seqpos')\nsample_sub = pd.read_csv('..\/input\/stanford-covid-vaccine\/sample_submission.csv')","e11eadec":"sub1 = sub1[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub2 = sub2[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub3 = sub3[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub4 = sub4[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub5 = sub5[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub6 = sub6[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub7 = sub7[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub8 = sub8[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub9 = sub9[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub10 = sub10[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub11 = sub11[sample_sub.columns].set_index('id_seqpos').loc[final.index]\nsub12 = sub12[sample_sub.columns].set_index('id_seqpos').loc[final.index]","87e55c4d":"final = ((sub1 + sub2) \/ 2 * weight_aepgc + ((sub3 + sub4 + sub5 + sub6 + sub7) \/ 5 * 0.85 + sub8 * 0.15) * weight_nprg + sub9 * weight_aug + (sub10 * 0.7 + sub11 * 0.3) * weight_pt) * .93 + sub12 * .07","fc345283":"final.to_csv('final_sub_nopp.csv')","2c5dd867":"## AE Pretrained GNN CNN","b9cdb501":"## AE Pretrained Transformer","4369922e":"## Final Blending","36a7ad29":"## With Aug Data","4601f602":"## Arrange Indices and Columns","9514ee65":"## Non-pretrained RNN GCN","5510b24b":"## Blend of Public Notebooks","cdcf7ca6":"# Final Inference for team \u76ee\u524d\u6ca1\u5565\u601d\u8def(\uff61\u00ec _ \u00ed\uff61)"}}