{"cell_type":{"4638adbd":"code","ff6d5f43":"code","ccc2153a":"code","ffdf8e28":"code","8ec4e97c":"code","a48e64b2":"code","69bd985a":"code","44df582e":"markdown","a470fb14":"markdown","38dfb718":"markdown","f911ab26":"markdown"},"source":{"4638adbd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport cv2\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom sklearn.model_selection import train_test_split\nfrom keras.preprocessing import image\nfrom keras.utils import to_categorical","ff6d5f43":"#load training data \ntrain = pd.read_csv('..\/input\/severstal-steel-defect-detection\/train.csv')\n# get only using defective images\ntrain = train[ train['EncodedPixels'].notnull() ]\n#get the class id\ntrain['ClassId'] = train['ImageId_ClassId'].apply(lambda x: x.split('_')[1])","ccc2153a":"train.head(5)","ffdf8e28":"def markArea(rle, imgshape):\n    W = imgshape[0]\n    H = imgshape[1]\n    \n    mark= np.zeros( W*H ).astype(np.uint8)\n    \n    array = np.asarray([int(x) for x in rle.split()])\n    #print(array)\n    begain = array[0::2]\n    lengths = array[1::2]\n    \n    #print(begain)\n\n    current_position = 0\n    for index, first in enumerate(begain):\n        mark[int(first):int(first+lengths[index])] = 1\n        current_position += lengths[index]\n        \n    return np.flipud( np.rot90( mark.reshape(H,W), k=1 ) )\n\nfig=plt.figure(figsize=(20,100))\ncolumns = 4\nrows = 25\nfor i in range(1, 10+1):\n    fig.add_subplot(rows, columns, i)\n    \n    imgname = train['ImageId_ClassId'].iloc[i].split('_')[0]\n    img = cv2.imread( '..\/input\/severstal-steel-defect-detection\/train_images\/'+imgname )\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    #print(train['EncodedPixels'].iloc[i])\n    #print(img.shape)\n    mark = markArea( train['EncodedPixels'].iloc[i], img.shape  )\n    img[mark==1,0] = 255\n    \n    plt.imshow(img)\nplt.show()","8ec4e97c":"train_image = []\ntrain_label = []\n\nfig=plt.figure(figsize=(20,100))\ncolumns = 4\nrows = 25\n\nfor i in range(1, 10+1):\n    fig.add_subplot(rows, columns, i)\n    \n    imgname = train['ImageId_ClassId'].iloc[i].split('_')[0]\n    imgclass = train['ImageId_ClassId'].iloc[i].split('_')[1]\n    img = cv2.imread( '..\/input\/severstal-steel-defect-detection\/train_images\/'+imgname)\n\n    mark = markArea( train['EncodedPixels'].iloc[i], img.shape  )\n    img[mark==1,0] = 255\n    #plt.imshow(mark)\n    \n    img=image.img_to_array(img)\n    img=img\/255\n    \n    train_image.append(img)\n    train_label.append(imgclass)\n    plt.imshow(img)\n    \nX = np.array(train_image)\ny = np.array(train_label)\ny = to_categorical(y)\n\nprint('done')","a48e64b2":"#print(X)\nprint(X.shape)\nprint(y.shape)\nprint('f')","69bd985a":"#sequential modle is used to train\nmodel = Sequential()\nmodel.add(Conv2D(8, kernel_size=(3, 3),activation='relu',input_shape=(256,1600,3)))\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(5, activation='softmax'))\n\nmodel.compile(loss='categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])\n\n# Creating validation set\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.5)\n\n# Training the model\n#model.fit(X_train, y_train)\n\n#model.fit(X, y ,epochs=2)\n\nmodel.fit(X_train, y_train, epochs=10, verbose=1, validation_split=0.25)\n\nprint('Done')","44df582e":"The challenge is to predict the location and type of defects found in steel manufacturing.\n# \n# Following are my steps I am going to follow to generate the solution.\n# \n# 1. First step is to load the images\n# 2. Since there are images without defeats id that must be removed from the training set\n# 3. Identify and mark the enclosed pixels to identify the defect area.\n# 4. Train identified defect area with the label using Sequential model\n# 5. Evaluate the accuracy of the model\n# 6. Test the model using the test data set\n# 7. predict the defect type and the area\n#","a470fb14":"The data is feed in to the model","38dfb718":"With this the defect areas are marked and plot","f911ab26":"The plotted area is append in array to train the algorithm"}}