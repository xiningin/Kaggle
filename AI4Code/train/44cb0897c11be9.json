{"cell_type":{"ce2b606f":"code","b0370e34":"code","c49a935f":"code","d5038355":"code","1d48c613":"code","8250835b":"code","06259060":"code","25c2416f":"markdown"},"source":{"ce2b606f":"!pip install kaggle-environments --upgrade\n\nimport numpy as np\nfrom kaggle_environments import make","b0370e34":"%%writefile submission.py\n\nimport random\nimport numpy as np\n\ntotal_reward = 0\nlast_action = 0\n\ndef agent_001(observation, configuration):\n    \n    global total_reward, last_action\n    action = random.randrange(configuration.banditCount)\n    \n    # Attempt 1: Keep playing the same machine when winning.\n    if observation.step > 0:\n        this_reward = observation.reward - total_reward\n        total_reward = observation.reward\n        if this_reward == 1:\n            action = last_action\n    \n    last_action = action\n    return action","c49a935f":"%%writefile random_agent.py\n\nimport random\n\ndef random_agent(observation, configuration):\n    return random.randrange(configuration.banditCount)","d5038355":"env = make(\"mab\", debug=True)\n\nenv.reset()\nres = env.run([\"submission.py\", \"submission.py\"])\n","1d48c613":"#download the log if needed\nimport json\n\nwith open(\"log.json\", \"w\") as f:\n    f.write(json.dumps(env.toJSON(), indent=4))\n","8250835b":"# make the agent play itself.\nlst = []\nfor i in range(10):\n    env.reset()\n    res = env.run([\"submission.py\", \"submission.py\"])\n    lst.append(env.toJSON()['rewards'])\n\nx = np.array(lst)    ","06259060":"x\n\n","25c2416f":"Took a bit of effort to debug. View the old versions for something that works in the notebook but not in the submissions.\n\n"}}