{"cell_type":{"58dfa20a":"code","8320a39b":"code","6575fd4c":"code","27f534e4":"code","75599dd7":"code","8af56ced":"code","cc9688c0":"code","dc94c02f":"code","0f355602":"code","16903685":"code","8cc04303":"code","d13244d8":"code","a49526e7":"code","d84c6a20":"code","c8b193bf":"code","4bd6f05f":"code","a3b6fb53":"code","da4b9ac3":"code","b8e5a096":"markdown","8b93b216":"markdown","d326b404":"markdown","e5ecf19a":"markdown","332fb22d":"markdown","a93b4ec4":"markdown","c055ae1f":"markdown","c11ad4bc":"markdown","747f2132":"markdown","fb664e8a":"markdown","6cb3cac1":"markdown","f6a714ab":"markdown","2c814a53":"markdown","43eb98ec":"markdown","6037fdbe":"markdown","bca8e28f":"markdown","acdb84c8":"markdown","a6216fbf":"markdown","af0ce79e":"markdown"},"source":{"58dfa20a":"import sqlite3\nimport pandas as pd\nfrom sqlalchemy import create_engine","8320a39b":"engine = create_engine('sqlite:\/\/', echo=False)","6575fd4c":"car_sales_df = pd.read_csv('\/kaggle\/input\/canada-cars-sales-figures-20192021\/Canadasalesdata.csv')\n\ncar_sales_df.to_sql('car_sales', engine, if_exists='replace', index=False)","27f534e4":"car_sales_df.info()","75599dd7":"pd.read_sql_query(\"\"\"SELECT *\n                     FROM car_sales\n                     LIMIT 10\"\"\", engine)","8af56ced":"car_sales_df.isnull().sum()","cc9688c0":"pd.read_sql_query(\"\"\"SELECT model, jul, sumofsales, year\n                     FROM car_sales\n                     WHERE year = 2021\n                         AND jul != 0\"\"\", engine)","dc94c02f":"car_sales_df['Sumofsales_adj'] = car_sales_df.apply(lambda row: row['Sumofsales'] - row['Jul'] if row['Year'] == 2021 else row['Sumofsales'], axis=1)","0f355602":"car_sales_df.to_sql('car_sales', engine, if_exists='replace', index=False)","16903685":"car_sales_df.head(10)","8cc04303":"pd.read_sql_query(\"\"\"SELECT year, SUM(sumofsales_adj) 'total_sales'\n                     FROM car_sales\n                     GROUP BY 1\n                     ORDER BY 1 DESC\"\"\", engine)","d13244d8":"pd.read_sql_query(\"\"\"SELECT Year, Model, Category, MAX(Sumofsales_adj) Sales\n                     FROM car_sales\n                     GROUP BY 1\n                     ORDER BY 1 DESC\"\"\", engine)","a49526e7":"pd.read_sql_query(\"\"\"SELECT Year, Model, Category, MIN(Sumofsales_adj) Sales\n                     FROM car_sales\n                     GROUP BY 1\n                     ORDER BY 1 DESC\"\"\", engine)","d84c6a20":"pd.read_sql_query(\"\"\"SELECT Year, Category, Model, MAX(Sumofsales_adj) Sales\n                     FROM car_sales\n                     GROUP BY 2, 1\n                     ORDER BY 1 DESC, 4 DESC\"\"\", engine)","c8b193bf":"car_sales_df['Make'] = car_sales_df['Model'].str.split(' ').str.get(0)","4bd6f05f":"car_sales_df.to_sql('car_sales', engine, if_exists='replace', index=False)","a3b6fb53":"car_sales_df.head(10)","da4b9ac3":"pd.read_sql_query(\"\"\"WITH m AS(\n                         SELECT Year, Make, SUM(Sumofsales_adj) S\n                         FROM car_sales\n                         GROUP BY 2, 1\n                         ORDER BY 1 DESC)\n                     SELECT Year, Make, MAX(s) Sales\n                     FROM m\n                     GROUP BY 1\n                     ORDER BY 1 DESC\"\"\", engine)","b8e5a096":"From this, it seems that, consistently over 2019 to 2021 thus far, the order of most to least sold cars by categories are:\n1. MS\n2. SLS\n3. MLS\n4. LS\n5. LLS","8b93b216":"#### Total cars sold in each year","d326b404":"#### Missing values","e5ecf19a":"**Row 7** is one `Model` where there is Jul-2021 numbers. It is important to find out which other rows (if any) there are that is the same as this may affect calculations involving `Sumofsales` for 2021.","332fb22d":"### Cleaning","a93b4ec4":"#### Least sold model each year\nNB: 2021 only includes sales up to 1 July.","c055ae1f":"# Car Sales Analysis (Canada)\nMini-project to analyse [Canada Cars Sales Figures (2019-2021)](https:\/\/www.kaggle.com\/mohamedhanyyy\/canada-cars-sales-figures-20192021); a Kaggle dataset as 2 Sep 2021 (Version 6).\n\nThe purpose is to practice and apply Python (Pandas) & SQL (SQLite) knowledge.\n\nWould love to know what you guys think, so if you have any feedback, please feel free to add it in the \"Issues\" section above!","c11ad4bc":"#### Most sold make each year","747f2132":"Each of the model name has the first word (some with the second as well, e.g. `Alfa Romeo`). I can get the first word of every row in `Model` using:","fb664e8a":"## Conclusion\nThank you for reviewing my code! If you have any suggestions, please feel free to let me know.","6cb3cac1":"### Exploratory Data Analysis","f6a714ab":"#### Most sold model each year, by category\nAlthough all three highest-sold models by year are `MS` (Mid-sized SUV), which model sold the most in each year, in each category?","2c814a53":"## Setup\n### Importing libraries","43eb98ec":"### Importing CSV & converting to SQL","6037fdbe":"### Creating SQL engine","bca8e28f":"To ensure that calculations involving the Total Sales of 2021 thus far are correct, a new column will be created called `Sumofsales_adj`.","acdb84c8":"#### Most sold model each year\nNB: 2021 only includes sales up to 1 July.","a6216fbf":"#### Removing Jul 2021 to ensure consistency","af0ce79e":"## Analysis\n### Initial exploration"}}