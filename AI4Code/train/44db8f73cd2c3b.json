{"cell_type":{"cdc4a065":"code","3919f580":"code","3c006121":"code","47d64df7":"code","89b9c29d":"code","03a73253":"code","10dc8189":"code","c9dac11f":"code","fb26ed8d":"code","f36f5b18":"code","171ee25a":"code","e2ccb470":"code","a7ab5599":"code","9ddb0ddd":"code","f78f6986":"code","84742453":"markdown","71888ea9":"markdown","2298587e":"markdown","9ea79e58":"markdown","f0d070b3":"markdown","39a7a341":"markdown","62fc24e0":"markdown","c096ccd6":"markdown"},"source":{"cdc4a065":"''' Submission From : Akshay Jain '''\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3919f580":"import numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import roc_auc_score","3c006121":"import os\nprint((os.listdir('..\/input\/')))","47d64df7":"df_train = pd.read_csv('..\/input\/wecrec2020\/Train_data.csv')\ndf_test = pd.read_csv('..\/input\/wecrec2020\/Test_data.csv')","89b9c29d":"df_test.head()","03a73253":"df_train.head()","10dc8189":"test_index=df_test['Unnamed: 0']","c9dac11f":"df_train.drop(['F1', 'F2', 'F6', 'F10', 'F14', 'F17'], axis = 1, inplace = True)\ndf_test.drop(['F1', 'F2', 'F6', 'F10', 'F14', 'F17'], axis = 1, inplace = True)","fb26ed8d":"train_X = df_train.loc[:, 'F3':'F16']\ntrain_y = df_train.loc[:, 'O\/P']","f36f5b18":"rf = RandomForestRegressor(n_estimators=55, random_state=43)","171ee25a":"rf.fit(train_X, train_y)","e2ccb470":"df_test = df_test.loc[:, 'F3':'F16']\npred = rf.predict(df_test)","a7ab5599":"print(pred)","9ddb0ddd":"result=pd.DataFrame()\nresult['Id'] = test_index\nresult['PredictedValue'] = pd.DataFrame(pred)\nresult.head(10)","f78f6986":"result.to_csv('output.csv', index=False)\n","84742453":"## Fitting the classifier","71888ea9":"### Dropping F1 as it is just index and F2 is datestamp and Some other variables on the basis of Variable Selection\n","2298587e":"## Initializing a regression model","9ea79e58":"## Separating the input and output fields","f0d070b3":"## Packing it into output file","39a7a341":"## Reading input data","62fc24e0":"## Visualizing input data","c096ccd6":"## Predicting output for test set"}}