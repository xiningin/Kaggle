{"cell_type":{"aca8da7c":"code","bac8ef88":"code","0751597d":"code","7952a02e":"code","9b2ee753":"code","ec56ab71":"code","1fae0229":"code","331c77b0":"code","59e16563":"code","799412f7":"code","594cb7ec":"code","baf03dc3":"code","48b50b76":"code","fd187e1e":"code","33a5738f":"code","54172cd9":"code","08456cd3":"code","011c5a65":"code","785fe25c":"code","c0eec4bd":"code","65a60902":"code","4e44a0b5":"markdown","73c758c1":"markdown","01c08abc":"markdown","4314b3c1":"markdown","f07bc803":"markdown","78c80ee7":"markdown","815e5007":"markdown","f4e2a4e7":"markdown","60d347f9":"markdown","a1bef33f":"markdown","9beb1c30":"markdown","6da6123d":"markdown","e7bb7c3c":"markdown","7ce2ef03":"markdown","4e9aeaae":"markdown","e2677de5":"markdown","a3e1d542":"markdown","e0a3669d":"markdown"},"source":{"aca8da7c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bac8ef88":"df = pd.read_excel(\"\/kaggle\/input\/anz-synthesized-transaction\/anz.xlsx\")","0751597d":"df.head()","7952a02e":"df.describe(include=\"all\")","9b2ee753":"df.info()","ec56ab71":"df.count()","1fae0229":"df.columns","331c77b0":"df_salaries = df[df[\"txn_description\"]==\"PAY\/SALARY\"].groupby(\"customer_id\").mean()\ndf_salaries.head()","59e16563":"df_salaries.nunique()","799412f7":"salaries = []\n\nfor customer_id in df[\"customer_id\"]:\n    salaries.append(int(df_salaries.loc[customer_id][\"amount\"]))\n    \ndf[\"annual_salary\"] = salaries","594cb7ec":"df_cus = df.groupby(\"customer_id\").mean()\ndf_cus.head()","baf03dc3":"plt.figure(figsize=(15, 10))\nsns.regplot(\"balance\", \"annual_salary\", fit_reg=True, data=df_cus, color=\"g\")\nplt.title(\"Regression plot of Annual Salary against Balance\", fontsize=15)\nplt.xlabel(\"Age\", fontsize=15)\nplt.ylabel(\"Annual Salary\", fontsize=15)\nplt.show()","48b50b76":"plt.figure(figsize=(15, 10))\nsns.regplot(\"age\", \"annual_salary\", fit_reg=True, data=df_cus, color=\"g\")\nplt.title(\"Regression plot of Annual Salary against Age\", fontsize=15)\nplt.xlabel(\"Age\", fontsize=15)\nplt.ylabel(\"Annual Salary\", fontsize=15)\nplt.show()","fd187e1e":"plt.figure(figsize=(15, 10))\nsns.regplot(\"amount\", \"annual_salary\", fit_reg=True, data=df_cus, color=\"g\")\nplt.title(\"Regression plot of Annual Salary against Amount\", fontsize=15)\nplt.xlabel(\"Age\", fontsize=15)\nplt.ylabel(\"Annual Salary\", fontsize=15)\nplt.show()","33a5738f":"X = df_cus[['age', 'balance', 'amount']].values\ny = df_cus['annual_salary'].values\n\n# Splitting data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","54172cd9":"# Define model\nlr = LinearRegression()\n\n# Fit the model with training data\nlr.fit(X_train, y_train)\n\nlr.score(X, y)","08456cd3":"# predict with test data\ny_pred = lr.predict(X_test)\n\n# Evaluating model performace\nprint(mean_squared_error(y_test, y_pred)) # mean squarred error\nprint(r2_score(y_test, y_pred)) # r2 score","011c5a65":"# sample test case \nprint(\"The predicted salary by the model is \" + str(lr.predict([[30, 5000, 3000]])[0]))","785fe25c":"# Define model\ndt = DecisionTreeRegressor(max_depth=5,random_state=0)\n\n# fitting model\ndt.fit(X_train, y_train)\n\ndt.score(X, y)","c0eec4bd":"# Predict with test data\ny_pred = dt.predict(X_test)\n\n# Evaluating model performace\nprint(mean_squared_error(y_test, y_pred)) # mean squarred error\nprint(r2_score(y_test, y_pred)) # r2 score","65a60902":"# sample test case \nprint(\"The predicted salary by the model is \" + str(dt.predict([[30, 5000, 3000]])[0]))","4e44a0b5":"# Data Loading","73c758c1":"## Salary and Age correlation","01c08abc":"# Exploratory Data Analysis","4314b3c1":"# Importing libraries","f07bc803":"## Annual salary of each customer","78c80ee7":"The regression plot of Annual Salary against Balance shows a positive correlation","815e5007":"# Task\nUsing the same transaction dataset, identify the annual salary for each customer\n\nExplore correlations between annual salary and various customer attributes (e.g. age). These attributes could be those that are readily available in the data (e.g. age) or those that you construct or derive yourself (e.g. those relating to purchasing behaviour). Visualise any interesting correlations using a scatter plot.\n\nBuild a simple regression model to predict the annual salary for each customer using the attributes you identified above\n\nHow accurate is your model? Should ANZ use it to segment customers (for whom it does not have this data) into income brackets for reporting purposes?\n\nFor a challenge: build a decision-tree based model to predict salary. Does it perform better? How would you accurately test the performance of this model?","f4e2a4e7":"# Data Preparation","60d347f9":"## Annual Salary and Balance correlation","a1bef33f":"## Annual Salary and Amount correlation","9beb1c30":"# Modelling","6da6123d":"Based on the features selected and the models, it can be concluded that the Linear Regresion model performed better than the Decision Tree model as it's mse is lower and it's R2 value is more acceptable. The test case for Linear regression model predicted a more acceptable value as well. However, both models' performace are arbitrary and the features may be biased. I personally think that better features can be selected and a more suitable model can be chosen. ","e7bb7c3c":"## Linear Regression","7ce2ef03":"The regression plot of Annual Salary against Age shows a negative correlation","4e9aeaae":"## Conclusion","e2677de5":"THe regression plot of Annual Salary against Amount shows a positive correlation","a3e1d542":"## Decision Tree","e0a3669d":"# Data Exploration"}}