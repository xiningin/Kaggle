{"cell_type":{"8c28b410":"code","a47bd80a":"code","fca510aa":"code","212352d2":"code","c4aa9848":"code","6f8a3802":"code","5bb663ef":"code","d2b6d931":"code","c1e706f7":"code","b05e990b":"code","99b7ad68":"code","93d79cb5":"code","cb1ad3a5":"code","ca0b5239":"code","ca3e7272":"code","be4a0dfc":"code","ec8f2967":"code","cce3ff23":"code","7e93b6fa":"code","afe17205":"code","df5f71b8":"code","94c0eaa7":"markdown","9a36412c":"markdown","3d9d72dc":"markdown","c109f979":"markdown","9cb15ddb":"markdown","a65897eb":"markdown","f0734b93":"markdown","967a1f3e":"markdown","24b049a9":"markdown","d576175c":"markdown","c7dc1fd2":"markdown","81b15c12":"markdown","988f6238":"markdown","521fb10e":"markdown","fbef65af":"markdown"},"source":{"8c28b410":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a47bd80a":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","fca510aa":"df","212352d2":"# df \ubbf8\ub9ac\ubcf4\uae30\ub294 \ub2f5\ub2f5\ud558\ub2e4.. \uc5b4\ub5a4 \uc9c8\ubb38\ub4e4\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uc790.\nfor col, question in zip(df.columns, df.iloc[0]):\n    print(f'{col} ::: {question}')","c4aa9848":"df.describe()","6f8a3802":"age_x = df.iloc[1:].groupby(by='Q1')['Q1'].count().index\nage_y = df.iloc[1:].groupby(by='Q1')['Q1'].count().values","5bb663ef":"gender_x = df.iloc[1:].groupby(by='Q2')['Q2'].count().index\ngender_y = df.iloc[1:].groupby(by='Q2')['Q2'].count().values","d2b6d931":"role_x = df.iloc[1:].groupby(by='Q5')['Q5'].count().index\nrole_y = df.iloc[1:].groupby(by='Q5')['Q5'].count().values","c1e706f7":"fig, (ax_age, ax_gender) = plt.subplots(1, 2, figsize=(20, 4))\n\nax_age.bar(age_x, age_y)\nax_age.set_title('age count')\n\nax_gender.bar(gender_x, gender_y)\nax_gender.set_title('gender count')\n\nplt.show()","b05e990b":"fig, ax_role = plt.subplots(figsize=(10, 4))\n\ncolors = sns.color_palette('hls', len(role_x)) \nbars = ax_role.bar(role_x, role_y, color=colors)\nax_role.set_title('role count')\nax_role.legend(bars, role_x, loc='upper left', bbox_to_anchor=(1, 1))\nax_role.get_xaxis().set_visible(False)\n\nplt.show()","99b7ad68":"df.loc[:, 'Q7_Part_1':'Q7_OTHER']","93d79cb5":"lang_x = ['Python','R','SQL','C','C++','Java','Javascript','Julia','Swift','Bash','MATLAB','None','Other']\nlang_y = df.loc[:, 'Q7_Part_1':'Q7_OTHER'].count()\n\nfig, ax_lang = plt.subplots(figsize=(10, 4))\n\nax_lang.bar(lang_x, lang_y)\nax_lang.set_title('lang count')\n\nplt.show()","cb1ad3a5":"df.iloc[1:].groupby(['Q5', 'Q8'])['Q8'].count()","ca0b5239":"df.iloc[1:].groupby(['Q5', 'Q8'])['Q8'].count().unstack()","ca3e7272":"lang_by_role_df = df.iloc[1:].groupby(['Q5', 'Q8'])['Q8'].count().unstack()\nper_lang_by_role = lang_by_role_df.div(lang_by_role_df.sum(axis=1), axis=0)","be4a0dfc":"per_lang_by_role","ec8f2967":"fig, ax_lang_role = plt.subplots(figsize=(10, 10))\nax_lang_role = sns.heatmap(per_lang_by_role, vmin=-0.1)\nplt.title('language recommendation', fontsize=20)\nplt.show() ","cce3ff23":"tool_x = ['data augmentation','feature engineering','model selection','model architecture searches','hyperparameter tuning','full ML pipelines','None','Other']\ntool_y = df.loc[:, 'Q33_B_Part_1':'Q33_B_OTHER'].count()\n\nfig, ax_tool = plt.subplots(figsize=(5, 5))\n\ncolors = sns.color_palette('hls', len(tool_x)) \nbars = ax_tool.bar(tool_x, tool_y, color=colors)\nax_tool.set_title('tool count')\nax_tool.legend(bars, tool_x, loc='upper left', bbox_to_anchor=(1, 1))\nax_tool.get_xaxis().set_visible(False)\n\nplt.show()","7e93b6fa":"# \uac01 \ubd84\uc57c\uc758 \uc9c1\ubb34\ubcc4 \ube44\uc728\ndf_tool_and_role = df.loc[1:, ['Q5', 'Q33_B_Part_1', 'Q33_B_Part_2', 'Q33_B_Part_3', 'Q33_B_Part_4', 'Q33_B_Part_5', 'Q33_B_Part_6', 'Q33_B_Part_7', 'Q33_B_OTHER']].groupby('Q5').count()\ndf_tool_and_role = df_tool_and_role.swapaxes(0, 1)\ndf_tool_and_role.index = tool_x\ncolors = sns.color_palette('hls', len(df_tool_and_role.columns)) \ndf_tool_and_role.plot.bar(stacked=True, figsize=(10, 10), color=colors)","afe17205":"per_df_tool_and_role = df_tool_and_role.div(df_tool_and_role.sum(axis=0), axis=1)\nper_df_tool_and_role = per_df_tool_and_role.iloc[:, [0, 3, 4, 5, 6, 8, 9, 10]]\ncolors = sns.color_palette('hls', len(per_df_tool_and_role.columns))\nper_df_tool_and_role.plot.bar(stacked=True, figsize=(10, 10), color=colors)","df5f71b8":"# \uc790\uc5f0\uc5b4\ucc98\ub9ac \ubaa8\ub378\uc740 \ubb58 \uc4f0\ub294\uc9c0\ub3c4 \uad81\uae08\ud558\ub2e4\nmodels_x = ['Word embeddings\/vectors', 'Encoder-decorder models', 'Contextualized embeddings', 'Transformer language models', 'None', 'Other']\nmodels_y = df[1:].loc[:, 'Q19_Part_1':'Q19_OTHER'].count().values\n\nfig, ax = plt.subplots(figsize=(5, 5))\ncolors = sns.color_palette('hls', len(models_x))\nbars = ax.bar(models_x, models_y, color=colors)\nax.legend(bars, models_x, loc='upper left', bbox_to_anchor=(1, 1))\nax.get_xaxis().set_visible(False)\nplt.show()","94c0eaa7":"- \uc608\uc0c1\ub300\ub85c python\uc774 \uc555\ub3c4\uc801, \uce90\uae00 \uc124\ubb38\ub2f5\uac8c SQL\ub3c4 \uc6b0\uc138\n- \uc9c1\ubb34\ubcc4 \ucd94\ucc9c\ud558\ub294 \uc5b8\uc5b4\uac00 \ub2e4\ub97c\uae4c?","9a36412c":"- \uc9c1\ubb34\ubcc4, \uc5b8\uc5b4\ubcc4\ub85c \uc77c\ub2e8 count\ub97c \ud574\ubcf8\ub2e4.\n- multi index\ub85c \ub4e4\uc5b4\uac00\uc788\ub294 \uc5b8\uc5b4\ub97c column\uc73c\ub85c \ub3cc\ub9ac\uae30 \uc704\ud574 unstack\uc744 \ud574\uc900\ub2e4. ","3d9d72dc":"## \uc124\ubb38\uc790 \ub098\uc774\/\uc131\ubcc4\/\uc9c1\ubb34 \ubd84\ud3ec","c109f979":"- \ub2e4\uc911\uc120\ud0dd \uc9c8\ubb38\uc758 \uacbd\uc6b0 \uac01 \uc120\ud0dd\uc9c0\ub9c8\ub2e4 column\uc774 \uc788\uace0, \ud574\ub2f9 \ud56d\ubaa9\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 None\uc774 \uc218\uc9d1\ub41c\ub2e4.\n- \uc774 df\uc5d0 count\ub97c \ud574\uc8fc\uba74 None\uc774 \uc544\ub2cc \uac12\ub9cc count\ub41c\ub2e4. ","9cb15ddb":"## \uc8fc \uc0ac\uc6a9 \uc5b8\uc5b4","a65897eb":"- \uc904\ubb34\ub2ac \ub3c4\ub9c8\ubc40\uac19\ub2e4.\n- \ub300\ubd80\ubd84 \uace0\ub978 \ubd84\ud3ec.. \ubcc4 \ucc28\uc774\ub294 \uc5c6\uc5c8\ub2e4\n- \ubb58 \ubc30\uc6b0\uace0 \uc2f6\uc9c0 \uc54a\uc740 PM\ub4e4\uc774 \ub9ce\ub2e4.\n- ml \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\uc774 \ub2e4\ub978 \uc9c1\ubb34\uc5d0 \ube44\ud574 data augmentation\uc774\ub098 model architecture search\ub97c \ubc30\uc6b0\uace0 \uc2f6\uc5b4\ud558\uace0, None\uc73c\ub85c \uc751\ub2f5\ud55c \ube44\uc728\uc774 \uac00\uc7a5 \uc801\ub2e4. \ud559\uad6c\uc5f4\uc774 \uac00\uc7a5 \ub192\uc740 \uc9d1\ub2e8 \uc544\ub2d0\uae4c? \uc0dd\uc874\uc744 \uc704\ud574 \ubc30\uc6cc\uc57c \ud55c\ub2e4\uac70\ub098","f0734b93":"\uad81\uae08\ud55c \ub0b4\uc6a9\n- \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc5b8\uc5b4\n- \uc9c1\ubb34\ubcc4 \ubc30\uc6b0\uace0\uc2f6\uc740 categories of automated machine learning tools\n- \uc9c1\ubb34\ubcc4\ub85c ML\uc9c1\uc811 \uc0ac\uc6a9\ube44\uc728\/tool \uc0ac\uc6a9\ube44\uc728\uc774 \ub2e4\ub97c\uae4c?","967a1f3e":"- \ud30c\uc774\uc36c\uc774 \uc555\ub3c4\uc801\n- \uc0c1\ub300\uc801\uc73c\ub85c Business analyst, Data analyst, Data scientist, Research scientist\uac00 \ub2e4\ub978 \uc9c1\ubb34\uc5d0 \ube44\ud574 R\uc744 \ucd94\ucc9c\ud558\ub294 \uacbd\ud5a5","24b049a9":"- xticks label\uc774 \uae34 \uacbd\uc6b0 \uadf8\ub0e5 legend\ub85c \ube7c\ubc84\ub9ac\ub294\uac8c \ub098\uc740\uac83\uac19\ub2e4.\n- \ud559\uc0dd\uc774 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\ub2e4..\n- \ud559\uc0dd\uc744 \uc81c\uc678\ud558\uba74 \ub370\uc2f8-\uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5d4\uc9c0\ub2c8\uc5b4-\uae30\ud0c0\ub4f1\ub4f1","d576175c":"- NaN\uac12\uc774 \ub9ce\uace0, \ub2e8\uc21c \uce74\uc6b4\ud2b8\ub294 \uc9c1\ubb34\ubcc4 \uc751\ub2f5\uc790 \uc218 \ucc28\uc774\uac00 \uc788\uc5b4 \uac12\uc744 \uc815\uaddc\ud654\ud574\uc57c \ubcf4\uae30 \uc88b\uc744 \uac83 \uac19\ub2e4.\n- \uac01 \uac12\uc744 \uc9c1\ubb34\ubcc4 \uc751\ub2f5\uc790 \uc218\uc5d0 \ub300\ud55c \ube44\uc728\ub85c \ub9cc\ub4e4\uc5b4\uc8fc\uae30 \uc704\ud574, \uac01 \uc9c1\ubb34\ubcc4 sum\uc744 \uba3c\uc800 \uad6c\ud55c \ud6c4 \uadf8 \uac12\uc73c\ub85c \ub098\ub220\uc900\ub2e4.","c7dc1fd2":"- \uc544\uc9c1\uc740 word embedding\ub3c4 \uc8fd\uc9c0 \uc54a\uc558\ub2e4.. \uac00\uc131\ube44\ub3c4 \uc911\uc694\ud55c\uac83\uac19\ub2e4","81b15c12":"## Tool \uad00\ub828","988f6238":"- \uc9c1\uad70 \uc218\uc5d0 \ucc28\uc774\uac00 \uc788\uc5b4 \ub208\uc5d0 \ub744\uc9c0 \uc54a\ub294\ub2e4. \ube44\uc728\ub85c \ubc14\uafd4\ubcf4\uc790\n- not employed\uc640 Other, student\uc640 \uc218\uac00 \uc801\uc740 statistician, DBA\ub294 \ube7c\ubcf4\uc790","521fb10e":"# 2020 Kaggle Machine Learning & Data Science Survey\n- \uc11c\ubca0\uc774 \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud574 \ud558\ub098\uc758 \uc2a4\ud1a0\ub9ac\ub97c \ub9cc\ub4e4\uc5b4\ub0b4\ub294 \ucef4\ud53c\ud2f0\uc158\uc774\uc9c0\ub9cc EDA \uc5f0\uc2b5\uc6a9\uc73c\ub85c \uc0ac\uc6a9\ud574\ubcf4\uc790.\n- \ud4e8\uccd0\uc2a4\ud0ac \uacfc\uc81c\ub85c \uc9c4\ud589","fbef65af":"- \uc804\ubc18\uc801\uc73c\ub85c \uad00\uc2ec\uc774 \ub192\uc9c0\ub9cc model selection, pipeline\uc5d0 \uad00\uc2ec\ub3c4\uac00 \ub192\ub2e4"}}