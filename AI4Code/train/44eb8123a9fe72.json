{"cell_type":{"ca8a0dc3":"code","76aaf5e9":"code","1d010560":"code","c398d256":"code","d5e8ce2f":"code","3735d460":"code","5cf6d6aa":"code","47ca6878":"code","c986011a":"code","4fef5893":"code","677f6e4a":"code","68c00ec5":"code","e6b33d46":"code","3dc6523f":"code","48a3e279":"code","6a995d1c":"code","9419e4d1":"code","ad842246":"code","970cd1df":"code","09a929af":"code","0f01934c":"code","06cbbd8c":"code","1d416925":"code","b5051573":"code","d28123b8":"code","3baf9eef":"code","2ddf5d53":"code","3045bd63":"code","c5b006d6":"code","6ce4e352":"code","b65a47e5":"code","b9a500f6":"code","9e95e561":"code","980e6ef3":"markdown","6ec4efec":"markdown","ffe7cc06":"markdown","4eeb27d8":"markdown","ace58303":"markdown","d808ddb8":"markdown","27cdcb69":"markdown","55c866cf":"markdown","b1abc8f1":"markdown","59172fef":"markdown","4c259311":"markdown","ad239e9d":"markdown","e713b4cd":"markdown","0fc43cd3":"markdown","3fedfb72":"markdown","ae1c5e8a":"markdown","40b1dbb2":"markdown","f895e4ac":"markdown","b85fd191":"markdown","fb5257c7":"markdown","54c5e6f7":"markdown","7b225006":"markdown","53985a61":"markdown"},"source":{"ca8a0dc3":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n\nfrom wordcloud import WordCloud\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","76aaf5e9":"covid_19 = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")","1d010560":"covid_19.info()","c398d256":"covid_19.head()","d5e8ce2f":"covid_19.corr() # 0.881778 -> Confirmed ve Deaths aras\u0131 ili\u015fki","3735d460":"covid_19.describe()","5cf6d6aa":"covid_19.describe().T","47ca6878":"covid_19_columns_v2 = ['sNo','ObservationDate','Province_State','Country_Region','Last Update',\"Confirmed\",\"Deaths\",\"Recovered\"]\ncovid_19.columns = covid_19_columns_v2\ncovid_19.head()","c986011a":"covid_19_plotly = pd.DataFrame({\"Province_State\":covid_19.Province_State,\n                                \"Confirmed\": covid_19.Confirmed,\n                                \"Deaths\": covid_19.Deaths\n    })                                              ","4fef5893":"covid_19_plotly.head()","677f6e4a":"len(covid_19[\"Province_State\"].unique())","68c00ec5":"plotly_data = covid_19_plotly.groupby(\"Province_State\").sum() \nplotly_data = plotly_data.reset_index() \nplotly_data[\"Confirmed_Deaths_rate\"] = plotly_data[\"Deaths\"] \/ plotly_data[\"Confirmed\"]\nplotly_data[0:10]","e6b33d46":"\n\n# asceding : azalan s\u0131ralama\nnew_index = (plotly_data[\"Confirmed_Deaths_rate\"].sort_values(ascending=False)).index.values\n\n# indexleri de\u011fi\u015ftir\nsorted_data = plotly_data.reindex(new_index)","3dc6523f":"# sorted_data","48a3e279":"# go.Scatter ile tracelerimizin olu\u015fturulmas\u0131\n\ntrace1 = go.Scatter(\n    x=sorted_data[:40].Province_State,\n    y=sorted_data[:40].Confirmed_Deaths_rate,\n    # Domain olu\u015fturmam\u0131za gerek yok ilki i\u00e7in\n    name = \"Confirmed_Deaths_rate\"\n)\ntrace2 = go.Scatter(\n    y=sorted_data[:40].Confirmed,\n    xaxis='x2', # x domain, farkl\u0131 bir alanda grafik olu\u015fuca\u011f\u0131 i\u00e7in\n    yaxis='y2', # y domain\n    name = \"Confirmed\"\n)\ntrace3 = go.Scatter(\n    y=sorted_data[:40].Deaths,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"Deaths\"\n)","6a995d1c":"data = [trace1, trace2, trace3] # tracelerimiz data listetesinde birle\u015fti\n","9419e4d1":"# G\u00f6rselle\u015ftirme stringleri\n\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 1] # Hangisi nereye gelicek konum\n    ),\n    yaxis=dict(\n        domain=[0, 1]\n    ),\n    xaxis2=dict(\n        domain=[0, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 1],\n        \n    ),\n    yaxis1=dict(\n        domain=[0, 0.33],\n        \n    ),\n    yaxis2=dict(\n        domain=[0.33, 0.66],\n        \n    ),\n    yaxis3=dict(\n        domain=[0.66, 1]\n    ),\n    title = 'Plotly ile COVID-19 Analizi'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","ad842246":"\n\n# asceding : azalan s\u0131ralama\nnew_index = (plotly_data[\"Confirmed\"].sort_values(ascending=False)).index.values\n\n# indexleri de\u011fi\u015ftir\nsorted_data2 = plotly_data.reindex(new_index)\n\nsorted_data2.head()","970cd1df":"sorted_data2 =sorted_data2[:40]\nsorted_data2.head()","09a929af":"# asceding : azalan s\u0131ralama\nnew_index = (sorted_data2[\"Confirmed_Deaths_rate\"].sort_values(ascending=False)).index.values\n\n# indexleri de\u011fi\u015ftir\nsorted_data3 = sorted_data2.reindex(new_index)\n\nsorted_data3.head()","0f01934c":"# go.Scatter ile tracelerimizin olu\u015fturulmas\u0131\n\ntrace1 = go.Scatter(\n    x=sorted_data3[:20].Province_State,\n    y=sorted_data3[:20].Confirmed_Deaths_rate,\n    # Domain olu\u015fturmam\u0131za gerek yok ilki i\u00e7in\n    name = \"Confirmed_Deaths_rate\"\n)\ntrace2 = go.Scatter(\n    y=sorted_data3[:40].Confirmed,\n    xaxis='x2', # x domain, farkl\u0131 bir alanda grafik olu\u015fuca\u011f\u0131 i\u00e7in\n    yaxis='y2', # y domain\n    name = \"Confirmed\"\n)\ntrace3 = go.Scatter(\n    y=sorted_data3[:40].Deaths,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"Deaths\"\n)","06cbbd8c":"data = [trace1, trace2, trace3] # tracelerimiz data listetesinde birle\u015fti\n","1d416925":"# G\u00f6rselle\u015ftirme stringleri\n\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 1] # Hangisi nereye gelicek konum\n    ),\n    yaxis=dict(\n        domain=[0, 1]\n    ),\n    xaxis2=dict(\n        domain=[0, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 1],\n        \n    ),\n    yaxis1=dict(\n        domain=[0, 0.33],\n        \n    ),\n    yaxis2=dict(\n        domain=[0.33, 0.66],\n        \n    ),\n    yaxis3=dict(\n        domain=[0.66, 1]\n    ),\n    title = 'Plotly ile COVID-19 Analizi'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","b5051573":"sorted_data3.info() ","d28123b8":"sorted_data3.Confirmed_Deaths_rate = sorted_data3.Confirmed_Deaths_rate.astype(\"float\")\nsorted_data3.Deaths = sorted_data3.Deaths.astype(\"float\")\n\nsorted_data3.info()\n","3baf9eef":"from wordcloud import WordCloud","2ddf5d53":"plt.subplots(figsize=(8,8))\n\nwordcloud = WordCloud(\n    \n    background_color = \"white\", # arkaplan rengi\n    width = 512, #geni\u015flik\n    height = 384, #y\u00fckseklik\n).generate(\" \".join(sorted_data3[:40].Province_State))   # kullan\u0131lan kelimeleri ay\u0131r ve ona g\u00f6re \u00e7ok olanlar\u0131 daha b\u00fcy\u00fck \u015fekilde bast\u0131r\n\nplt.imshow(wordcloud)\nplt.axis(\"off\") # x ve y eksenlerini kapa\n","3045bd63":"import plotly.figure_factory as ff ","c5b006d6":"# Data\n\ndataframe = sorted_data3[:30] # veriyi filitreliyoruz \ndata = dataframe.loc[:,[\"Confirmed\",\"Deaths\", \"Confirmed_Deaths_rate\"]] # kar\u015f\u0131la\u015ft\u0131rmak istedi\u011fimiz featuresler\ndata[\"index\"] = np.arange(1,len(data)+1) # datafremin indexine e\u015fitliyor ve ekliyoruz.\ndata.head()","6ce4e352":"# Scatter Matrix\n\nfig = ff.create_scatterplotmatrix(data, # verimiz\n                                  diag='box', #orta (-x) ekseni\n                                  index='index', # index olarak yeni belirledi\u011fim index\n                                  colormap='Portland', # renk paleti\n                                  \n                                  text = sorted_data3.Province_State,\n                                  colormap_type='cat', \n                                  height=700, width=700) # boyutland\u0131rma\niplot(fig)","b65a47e5":"sorted_data.head()","b9a500f6":"# 3 Boyutun her birini trace 1 de g\u00f6sterebiliriz.\n\ntrace1 = go.Scatter3d( # go k\u00fct\u00fcphanesinden scatter3d yi \u00e7a\u011f\u0131rd\u0131k\n    \n    x=sorted_data[:40].Confirmed_Deaths_rate, # x ekseni de\u011ferlerimiz\n    y=sorted_data[:40].Confirmed, # y ekseni de\u011ferlerimiz\n    z=sorted_data[:40].Deaths, # z ekseni de\u011ferlerimiz\n    \n    text =  sorted_data.Province_State,\n    mode='markers', # noktal\u0131 yap\u0131da olsun\n    marker=dict( # s\u00f6zl\u00fck yap\u0131s\u0131nda boyu ve rengimizi ayarlad\u0131k\n        size=10,\n        color='rgb(255,0,0)',                 \n    )\n)\n\ndata = [trace1] # tek bir tracemizi listeledik\n\n\nlayout = go.Layout( # go k\u00fct\u00fcphanesinden Layout methodu ile\n    margin=dict( # kenarlardan b\u0131rak\u0131lan paylar 0\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","9e95e561":"labels = sorted_data3.Province_State\n\n# figure\n\nfig = {\n    \n  \"data\": [\n    { # Trace \n      \"values\": sorted_data3[:15].Confirmed_Deaths_rate, # de\u011ferler\n      \"labels\": labels,    \n      \"domain\": {\"x\": [0, .5]}, \n      \"name\": \"\u015eehir\/eyalet\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3, # orta yuvarlak \u00e7ap\u0131\n      \"type\": \"pie\" #tip\n    },], \n    \n  \n  # G\u00f6rselle\u015ftirmenin d\u00fczeni\n  \"layout\": {\n        \"title\":\"En \u00e7ok hastas\u0131 olan \u015fehirlerin \u00f6l\u00fcm oran\u0131\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20}, #boyutlar\n              \"showarrow\": False,\n              \"text\": \"\u00d6l\u00fcm Oran\u0131\", \n                \"x\": 0,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","980e6ef3":"## S\u0131ralamay\u0131 de\u011fi\u015ftirmek\n\u0130ncemelerimize g\u00f6re bir\u00e7ok \u015fehir\/eyalet 5-100 hasta aras\u0131nda ve bu durum bizim i\u00e7in \u00e7ok verimli de\u011fil. Bizim i\u00e7in 1000 hasta say\u0131s\u0131ndan az olan t\u00fcm eyaletler pasif olmal\u0131.","6ec4efec":"## WordCloud k\u00fct\u00fcphanesini import edelim","ffe7cc06":"## Veriyi inceliyelim","4eeb27d8":"# K\u00fct\u00fcphaneler","ace58303":"# Plotly ile COVID-19 Analizi 4 :","d808ddb8":"## \u0130\u015fimize yar\u0131yacak s\u00fctunlardan olu\u015fan yeni bir DataFrame","27cdcb69":"## \u0130ncelemem s\u0131ras\u0131nda s\u0131k\u0131nt\u0131 yarat\u0131cak s\u00fctun isimleri ke\u015ffettim.\n\nProvince\/State ve Country\/Region ----> \/ i\u015faretini _ i\u015fareti ile de\u011fi\u015ftirelim","55c866cf":"# Plotly ile COVID-19 Analizi","b1abc8f1":"# Plotly ile COVID-19 Analizi 5: Pie Charts","59172fef":"## 430 adet \u015fehir\/eyalet' imiz olmas\u0131na ra\u011fmen 27165 adet sat\u0131r\u0131m\u0131z var. Demek ki her bir eyalet 10 larca defa kullan\u0131ld\u0131. Gelin Eyaletlerimizi benzersiz \u015fekilde listeliyelim.","4c259311":"# Plotly ile COVID-19 Analizi 1 : Multiple Subplots","ad239e9d":"# Analizler \n\n\n1 - Onaylanm\u0131\u015f hasta say\u0131s\u0131, \u00f6l\u00fcm say\u0131s\u0131 ve \u00f6l\u00fcm oranlar\u0131n\u0131, \u015fehirin \u00f6l\u00fcm oranlar\u0131n\u0131 baz alarak grafikte s\u0131ralamak.  (Multiple Subplots)\n\n2 - En \u00e7ok hastan\u0131n oldu\u011fu  40 \u015fehirin, \u00f6l\u00fcm oran\u0131n\u0131na g\u00f6re \u015fehir ismini ekrana basmak (WordCloud)\n\n3 - Onaylanm\u0131\u015f hasta say\u0131s\u0131, \u00f6l\u00fcm say\u0131s\u0131 ve \u00f6l\u00fcm oranlar\u0131 aras\u0131ndaki korelasyonu incelemek (Scatter Matrix)\n\n4 - Onaylanm\u0131\u015f hasta say\u0131s\u0131, \u00f6l\u00fcm say\u0131s\u0131 ve \u00f6l\u00fcm oranlar\u0131n\u0131 3 boyutlu g\u00f6rsellede incelemek (3D Scatter Plot)\n\n5 - En \u00e7ok hasta bar\u0131nd\u0131ran 15 \u015fehirin \u00f6l\u00fcm oranlar\u0131na y\u00fczdelik \u015fekilde bakmak (Pie Charts)\n","e713b4cd":"# COVID-19\n\nYeni Koronavir\u00fcs Hastal\u0131\u011f\u0131 (COVID-19), ilk olarak \u00c7in\u2019in Vuhan Eyaleti\u2019nde Aral\u0131k ay\u0131n\u0131n sonlar\u0131nda solunum yolu belirtileri (ate\u015f, \u00f6ks\u00fcr\u00fck, nefes darl\u0131\u011f\u0131) geli\u015fen bir grup hastada yap\u0131lan ara\u015ft\u0131rmalar sonucunda 13 Ocak 2020\u2019de tan\u0131mlanan bir vir\u00fcst\u00fcr.\n\nSalg\u0131n ba\u015flang\u0131\u00e7ta bu b\u00f6lgedeki deniz \u00fcr\u00fcnleri ve hayvan pazar\u0131nda bulunanlarda tespit edilmi\u015ftir. Daha sonra insandan insana bula\u015farak Vuhan ba\u015fta olmak \u00fczere Hubei eyaletindeki di\u011fer \u015fehirlere ve \u00c7in Halk Cumhuriyeti\u2019nin di\u011fer eyaletlerine ve di\u011fer d\u00fcnya \u00fclkelerine yay\u0131lm\u0131\u015ft\u0131r.\n\nKoronavir\u00fcsler, hayvanlarda veya insanlarda hastal\u0131\u011fa neden olabilecek b\u00fcy\u00fck bir vir\u00fcs ailesidir. \u0130nsanlarda, birka\u00e7 koronavir\u00fcs\u00fcn so\u011fuk alg\u0131nl\u0131\u011f\u0131ndan Orta Do\u011fu Solunum Sendromu (MERS) ve \u015eiddetli Akut Solunum Sendromu (SARS) gibi daha \u015fiddetli hastal\u0131klara kadar solunum yolu enfeksiyonlar\u0131na neden oldu\u011fu bilinmektedir. Yeni Koronavir\u00fcs Hastal\u0131\u011f\u0131na SAR-CoV-2 vir\u00fcs\u00fc neden olur.\n\nhttps:\/\/covid19bilgi.saglik.gov.tr\/tr\/covid-19-yeni-koronavirus-hastaligi-nedir","0fc43cd3":"## Plotly's Python graphing library \n\n\u0130ngilizceden \u00e7evrilmi\u015ftir-\nPlotly'nin Python grafik k\u00fct\u00fcphanesi etkile\u015fimli, yay\u0131n kalitesinde grafikler yapar. \u00c7izgi grafikleri, sa\u00e7\u0131lma grafikleri, alan grafikleri, \u00e7ubuk grafikler, hata \u00e7ubuklar\u0131, kutu grafikleri, histogramlar, \u0131s\u0131 haritalar\u0131, alt grafikler, \u00e7oklu eksenler, kutup grafikleri ve kabarc\u0131k grafikleri olu\u015fturma \u00f6rnekleri.\n\nhttps:\/\/plotly.com\/python\/","3fedfb72":"# Plotly ile COVID-19 Analizi 3 : Scatter Plot Matrix","ae1c5e8a":"# Dosya okuma ve \u0130lk bak\u0131\u015f","40b1dbb2":"# Plotly\n\n\u0130ngilizceden \u00e7evrilmi\u015ftir-Plotly, merkezi Montreal, Quebec'te bulunan ve \u00e7evrimi\u00e7i veri analizi ve g\u00f6rselle\u015ftirme ara\u00e7lar\u0131 geli\u015ftiren teknik bir bilgi i\u015flem \u015firketidir.\n\nhttps:\/\/g.co\/kgs\/z5oGZn","f895e4ac":"## Ka\u00e7 tane eyaletimiz varm\u0131\u015f \u00f6\u011frenelim.","b85fd191":"# \u0130\u00e7indekiler\n\n* COVID-19\n* Plotly\n* Plotly's Python graphing library\n* Analiz tan\u0131t\u0131m\u0131\n* K\u00fct\u00fcphaneler\n* Dosya okuma ve \u0130lk bak\u0131\u015f\n    * \u0130ncelemem s\u0131ras\u0131nda s\u0131k\u0131nt\u0131 yarat\u0131cak s\u00fctun isimleri ke\u015ffettim.\n    * \u0130\u015fimize yar\u0131yacak s\u00fctunlardan olu\u015fan yeni bir DataFrame\n    * Ka\u00e7 tane eyaletimiz varm\u0131\u015f \u00f6\u011frenelim.\n    * Eyaletlerimizi benzersiz \u015fekilde listeliyelim.\n    * Bo\u015f Confirmed, Deaths ve Confirmed_Deaths_rate de\u011ferlerini doldurmak:\n    * Verimizi \u00d6l\u00fcm oran\u0131na g\u00f6re short edelim\n* Plotly ile COVID-19 Analizi 1 : Multiple Subplots\n    * S\u0131ralamay\u0131 de\u011fi\u015ftirmek ve yeni g\u00f6rsel\n* Plotly ile COVID-19 Analizi 2 : WordCloud\n    * Object de\u011ferleri floata'a \u00e7evirmek\n    * WordCloud k\u00fct\u00fcphanesini import edelim\n* Plotly ile COVID-19 Analizi 3 : Scatter Plot Matrix\n* Plotly ile COVID-19 Analizi 4 : 3D Scatter Plot\n* Plotly ile COVID-19 Analizi 5 : Pie Charts\n* Plotly ile COVID-19 Analizi 6 : Yak\u0131nda...","fb5257c7":"## Sort edilmi\u015f 3. Versiyon datam\u0131z\u0131n (sorted_data3) ilk 40 de\u011ferinin \u015fehirlerini baz alarak g\u00f6rselle\u015ftirelim","54c5e6f7":"## Verimizi \u00d6l\u00fcm oran\u0131na g\u00f6re short edelim","7b225006":"## Plotly ile COV\u0130D-19 Analizi 2 : WordCloud","53985a61":"## Deaths ve Confirmed de\u011ferlerimizi integer de\u011ferlere \u00e7evirelim"}}