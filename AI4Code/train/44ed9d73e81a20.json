{"cell_type":{"ac4ed7e2":"code","f07be609":"code","fea52c78":"code","40a6ecf9":"code","3f8a2a6a":"code","65646199":"code","8a0859b2":"code","05b9911e":"markdown"},"source":{"ac4ed7e2":"def map_at_k(y_true, y_pred, k=2):\n    \"\"\"\n    y_true: list of ground truths\n    y_pred: list of y_predictions\n    k: value to set depending of requirements. Default at 2\n    \"\"\"\n    ap = []\n    for g,p in zip(y_true,y_pred):\n        assert len(p)>=k, f\"Length of each prediction must be equal or greater than {k}!\"\n        for i in range(k):\n            if g == p[i]:\n                ap.append(1\/(i+1))\n                break\n        else:\n            ap.append(0)\n        \n    return(sum(ap)\/len(ap))","f07be609":"# all correct answers in the first try\nground_truth = [1,3,0,3,2]\npredictions = [(1,2),(3,1),(0,3),(3,1),(2,0)]\nmap_at_k(ground_truth, predictions)","fea52c78":"# more correct answers in the first try than second try\nground_truth = [1,3,0,3,2]\npredictions = [(1,3),(3,1),(0,1),(1,3),(0,2)]\nmap_at_k(ground_truth, predictions)","40a6ecf9":"# more correct answers in the second try than first try\nground_truth = [1,3,0,3,2]\npredictions = [(1,3),(3,1),(1,0),(1,3),(0,2)]\nmap_at_k(ground_truth, predictions)","3f8a2a6a":"# all correct answers in the second try\nground_truth = [1,3,0,3,2]\npredictions = [(3,1),(1,3),(2,0),(1,3),(0,2)]\nmap_at_k(ground_truth, predictions)","65646199":"# with mostly inaccurate answers\nground_truth = [1,3,0,3,1]\npredictions = [(1,2),(0,3),(3,1),(2,0),(3,2)]\nmap_at_k(ground_truth, predictions)","8a0859b2":"# no right answers\nground_truth = [1,3,0,3,2]\npredictions = [(3,2),(2,1),(3,1),(2,1),(3,0)]\nmap_at_k(ground_truth, predictions)","05b9911e":"Based on my understanding from the discussion at https:\/\/www.kaggle.com\/c\/ndsc-advanced\/discussion\/81688."}}