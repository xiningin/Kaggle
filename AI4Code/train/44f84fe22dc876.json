{"cell_type":{"5b592ac3":"code","364fcc18":"code","bb3d3122":"code","3a769c87":"code","cc3c6b90":"code","302ae583":"markdown"},"source":{"5b592ac3":"import numpy as np\nimport pandas as pd \nimport os\nimport time\nfrom datetime import date, datetime\nfrom dateutil import parser\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\npolice_pedestrian_stops_and_vehicle_stops = pd.read_csv('..\/input\/police_pedestrian_stops_and_vehicle_stops.csv')","364fcc18":"police_pedestrian_stops_and_vehicle_stops = pd.read_csv('..\/input\/police_pedestrian_stops_and_vehicle_stops.csv',parse_dates=True)\npolice_pedestrian_stops_and_vehicle_stops2 = police_pedestrian_stops_and_vehicle_stops\npolice_pedestrian_stops_and_vehicle_stops2['oldDate'] = police_pedestrian_stops_and_vehicle_stops2['TIME_PHONEPICKUP']\npolice_pedestrian_stops_and_vehicle_stops2['newDate'] = pd.DatetimeIndex(police_pedestrian_stops_and_vehicle_stops2.oldDate).normalize()\ndateCounts = police_pedestrian_stops_and_vehicle_stops2['newDate'].value_counts()\ndateCountsDf = pd.DataFrame(dateCounts)\ndateCountsDf['date2'] = dateCountsDf.index\ndateCountsDf = dateCountsDf.sort_values(by='date2')\ndateCountsDf = dateCountsDf.resample('W', on='date2').sum()\ndateCountsDf = dateCountsDf.reset_index(level='date2')\ndateCountsDf = dateCountsDf[(dateCountsDf['date2'].dt.year > 2014)] \n\ndf = dateCountsDf\ntrace1 = go.Scatter(\n                    x = df.date2,\n                    y = df.newDate,\n                    mode = \"lines+markers\",\n                    name = \"gettingStarted\",\n                    marker = dict(color = 'rgba(0, 0, 255, 0.8)'),)\ndata = [trace1]\nlayout = dict(title = 'Weekly Count of Police Stops in Denver',\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False),yaxis= dict(title= '# of Police Stops',ticklen= 5,zeroline= False),legend=dict(orientation= \"h\",x=0, y= 1.13)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","bb3d3122":"counts = police_pedestrian_stops_and_vehicle_stops['NEIGHBORHOOD_NAME'].value_counts()\ncounts = pd.DataFrame(counts)[0:10]\ntrace1 = go.Bar(\n                x = counts.index,\n                y = counts.NEIGHBORHOOD_NAME,\n                name = \"Kaggle\",\n                marker = dict(color = 'blue',\n                             line=dict(color='black',width=1.5)),\n                text = counts.NEIGHBORHOOD_NAME)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title='Total Incidents by Location')\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","3a769c87":"counts = police_pedestrian_stops_and_vehicle_stops['PROBLEM'].value_counts()\n# print('PROBLEM -- # of Incidents')\n# print(counts.head(10))\ncounts = pd.DataFrame(counts)[0:10]\ntrace1 = go.Bar(\n                x = counts.index,\n                y = counts.PROBLEM,\n                name = \"Kaggle\",\n                marker = dict(color = 'blue',\n                             line=dict(color='black',width=1.5)),\n                text = counts.PROBLEM)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title='Total Incidents by Type')\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","cc3c6b90":"counts = police_pedestrian_stops_and_vehicle_stops['CALL_DISPOSITION'].value_counts()\ncounts = pd.DataFrame(counts)[0:10]\ntrace1 = go.Bar(\n                x = counts.index,\n                y = counts.CALL_DISPOSITION,\n                name = \"Kaggle\",\n                marker = dict(color = 'blue',\n                             line=dict(color='black',width=1.5)),\n                text = counts.CALL_DISPOSITION)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title='Total Incidents by Disposition')\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","302ae583":"**Police Stops in Denver: Dashboard**\n* Note that the dataset updates daily: ([Link #1](https:\/\/www.kaggle.com\/product-feedback\/75341#449911)), ([Link #2](https:\/\/i.imgur.com\/d0poO80.png))\n* And likewise the kernel updates daily as well: ([Link #3](https:\/\/www.kaggle.com\/rtatman\/dashboarding-with-notebooks-day-4))"}}