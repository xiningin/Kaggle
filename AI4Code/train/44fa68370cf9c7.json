{"cell_type":{"6acffb16":"code","b4f1e868":"code","52b1e0a9":"code","2c47fdcd":"code","814a2850":"markdown","1c478553":"markdown","98913beb":"markdown","3932b3ae":"markdown","4e41a524":"markdown"},"source":{"6acffb16":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom torchvision.io import read_image\nimport matplotlib.pyplot as plt","b4f1e868":"dataDir = '\/kaggle\/input\/sartorius-cell-instance-segmentation\/'\ntrain = pd.read_csv(dataDir + 'train.csv')\ntrain.head()","52b1e0a9":"def decodeRLE(annotation, imgShape=(520,704)):\n    s = annotation.split(' ')\n    pixelList = []\n    for i in range(len(s)\/\/2):\n        start = int(s[2*i])\n        increment = int(s[2*i+1])\n        for j in range(start,start+increment):\n            pixelList.append(j)\n    annotation = np.zeros(imgShape).flatten()\n    annotation[pixelList] = 1.\n    annotation = annotation.reshape(imgShape)\n    return annotation","2c47fdcd":"imageID = '0030fd0e6378'\n\nfig, ax = plt.subplots(1, 3, figsize=(20,5))\nplt.subplots_adjust(wspace=0.01)\n\n# Load the image\nimg = read_image('\/kaggle\/input\/sartorius-cell-instance-segmentation\/train\/' + imageID + '.png').squeeze()\nplt.subplot(131)\nplt.imshow(img, cmap='gray')\nplt.title('Original Image')\nplt.axis('off')\n\n# Single Annotation\nsingleAnnotation = decodeRLE(train.iloc[0,1])\nplt.subplot(132)\nplt.imshow(img, cmap='gray')\nplt.imshow(singleAnnotation, cmap='gray', alpha=0.5)\nplt.title('Single Annotation')\nplt.axis('off')\n\n# All annotations\nallAnnotations = np.zeros(img.shape)\ntrain_subset = train[train['id']==imageID]\nfor index, row in train_subset.iterrows():\n    allAnnotations += decodeRLE(row.annotation)\nplt.subplot(133)\nplt.imshow(img, cmap='gray')\nplt.imshow(allAnnotations, cmap='gray', alpha=0.5)\nplt.title('All Annotations')\nplt.axis('off')\n\nplt.show()","814a2850":"# Load the annotation table","1c478553":"This basic notebook decodes the annotation of and visualizes them for a given image","98913beb":"# Visualize the first image and its annotations","3932b3ae":"# Imports","4e41a524":"# Define a function to decode RLE (Run Length Encoding)"}}