{"cell_type":{"aab27c35":"code","9c59a93d":"code","37ebcc28":"code","104fafc7":"code","a36546bf":"code","24247533":"code","34b7812b":"code","1d1bda5d":"code","a3344e08":"code","2ed13e9d":"code","b9d9ed26":"code","2c3f7b38":"code","69c60823":"code","233dade0":"code","33f30db5":"code","002c3f44":"code","31539319":"code","366ba75c":"code","545e3756":"code","5a8407e2":"markdown","ad5a66bb":"markdown","397a2cba":"markdown","fa925256":"markdown","e736a951":"markdown","cb94f02d":"markdown","39324fbd":"markdown","fe8b7831":"markdown","941243d4":"markdown"},"source":{"aab27c35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import NullFormatter\nimport pandas as pd\nimport numpy as np\nimport matplotlib.ticker as ticker\nfrom sklearn import preprocessing\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9c59a93d":"df = pd.read_csv(\"..\/input\/telecustsclasses\/teleCust1000t.csv\")","37ebcc28":"df","104fafc7":"df['custcat'].value_counts()","a36546bf":"df.hist(column='income', bins=50)","24247533":"df.columns","34b7812b":"df.info()","1d1bda5d":"X = df[['region', 'tenure','age', 'marital', 'address', 'income', 'ed', 'employ','retire', 'gender', 'reside']] .values \n","a3344e08":"X[0:5]","2ed13e9d":"y = df['custcat'].values\ny[0:5]","b9d9ed26":"X = preprocessing.StandardScaler().fit(X).transform(X.astype(float))\nX[0:5]","2c3f7b38":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","69c60823":"from sklearn.neighbors import KNeighborsClassifier\nk = 4\n#Training\nneigh = KNeighborsClassifier(n_neighbors = k).fit(X_train,y_train)\nneigh\n","233dade0":"yhat = neigh.predict(X_test)\nyhat[0:5]","33f30db5":"from sklearn import metrics\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, neigh.predict(X_train)))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, yhat))","002c3f44":"k = 6\nneigh6 = KNeighborsClassifier(n_neighbors = k).fit(X_train,y_train)\nyhat6 = neigh6.predict(X_test)\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, neigh6.predict(X_train)))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, yhat6))","31539319":"Ks = 10\nmean_acc = np.zeros((Ks-1))\nstd_acc = np.zeros((Ks-1))\nConfustionMx = [];\nfor n in range(1,Ks):\n    \n    #Train Model and Predict  \n    neigh = KNeighborsClassifier(n_neighbors = n).fit(X_train,y_train)\n    yhat=neigh.predict(X_test)\n    mean_acc[n-1] = metrics.accuracy_score(y_test, yhat)\n\n    \n    std_acc[n-1]=np.std(yhat==y_test)\/np.sqrt(yhat.shape[0])\n\nmean_acc","366ba75c":"plt.plot(range(1,Ks),mean_acc,'g')\nplt.fill_between(range(1,Ks),mean_acc - 1 * std_acc,mean_acc + 1 * std_acc, alpha=0.10)\nplt.legend(('Accuracy ', '+\/- 3xstd'))\nplt.ylabel('Accuracy ')\nplt.xlabel('Number of Nabors (K)')\nplt.tight_layout()\nplt.show()","545e3756":"print( \"The best accuracy was with\", mean_acc.max(), \"with k=\", mean_acc.argmax()+1) ","5a8407e2":"## Informations sur ladataset","ad5a66bb":"#### Imaginez qu'un fournisseur de t\u00e9l\u00e9communications a segment\u00e9 sa client\u00e8le en fonction des mod\u00e8les d'utilisation des services, en classant les clients en quatre groupes. Si les donn\u00e9es d\u00e9mographiques peuvent \u00eatre utilis\u00e9es pour pr\u00e9dire l'appartenance \u00e0 un groupe, l'entreprise peut personnaliser les offres pour des clients potentiels individuels. C'est un probl\u00e8me de classification. Autrement dit, \u00e9tant donn\u00e9 l'ensemble de donn\u00e9es, avec des \u00e9tiquettes pr\u00e9d\u00e9finies, nous devons construire un mod\u00e8le \u00e0 utiliser pour pr\u00e9dire la classe d'un cas nouveau ou inconnu.\n\n#### L'exemple se concentre sur l'utilisation de donn\u00e9es d\u00e9mographiques, telles que la r\u00e9gion, l'\u00e2ge et le mariage, pour pr\u00e9dire les mod\u00e8les d'utilisation.\n\n#### Le champ cible, appel\u00e9 custcat, a quatre valeurs possibles qui correspondent aux quatre groupes de clients, comme suit: 1- Service de base 2- E-Service 3- Plus Service 4- Service total\n\n#### Notre objectif est de construire un classifieur, de pr\u00e9dire la classe des cas inconnus. Nous utiliserons un type de classification sp\u00e9cifique appel\u00e9 K plus proche voisin.","397a2cba":"## Classification","fa925256":"### KNN","e736a951":"## Normalisation ","cb94f02d":"## Train Test Split","39324fbd":"#### avec K=6","fe8b7831":"### Accuracy","941243d4":"#### avec K=4"}}