{"cell_type":{"c08551d8":"code","5c02f454":"code","22e681e4":"code","60e2d066":"code","4e8d9898":"code","756b2bac":"code","1fc23495":"code","2f54d433":"code","9b4a0c93":"code","6598a1a0":"code","cee79dd4":"code","04e5ee5d":"code","8b285e22":"code","932469b9":"code","d3813f5c":"code","1590b578":"code","5094d166":"code","cc70ccbe":"code","853fcd05":"code","299acec8":"code","682a26b4":"code","2bb81755":"code","0263c57f":"code","27171d23":"code","bdd0439f":"code","753246ba":"code","1793663a":"markdown","4b94b0ca":"markdown","09ec8a0c":"markdown","1d7bb5c3":"markdown"},"source":{"c08551d8":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import log_loss\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\nfrom sklearn.metrics import f1_score, roc_auc_score, confusion_matrix\nfrom sklearn.linear_model import SGDClassifier\npd.options.display.max_columns = 80","5c02f454":"TRAIN_PATH='\/kaggle\/input\/tabular-playground-series-jun-2021\/train.csv'\nTEST_PATH='\/kaggle\/input\/tabular-playground-series-jun-2021\/test.csv'\n\n\ntrain=pd.read_csv(TRAIN_PATH,index_col='id')\ntest=pd.read_csv(TEST_PATH,index_col='id')","22e681e4":"train.head()","60e2d066":"train.info()","4e8d9898":"train['target'].value_counts()","756b2bac":"train.hist(figsize=(120,80))","1fc23495":"s=StandardScaler()\ntrain[train.columns[:10]].hist(figsize=(20,15))\nk=s.fit_transform(train[train.columns[:10]])","2f54d433":"plt.hist(k)\nplt.show()","9b4a0c93":"train_X=train.drop('target',axis=1)\ntrain_y=train['target']\nfeatures=list(train_X.columns)\n","6598a1a0":"pipeline=Pipeline([('scaler',StandardScaler())])","cee79dd4":"train_prep=pipeline.fit_transform(train_X)","04e5ee5d":"sgd_class=SGDClassifier(n_jobs=8)\nsgd_class.fit(train_prep,train_y)\npredictions=sgd_class.predict(train_prep)","8b285e22":"cross_val_score(sgd_class,train_prep,train_y,cv=3,scoring='accuracy',n_jobs=8)","932469b9":"f1_score(train_y,predictions,average='weighted')","d3813f5c":"rf_clf=RandomForestClassifier(n_jobs=8,n_estimators=1000,max_depth=4,random_state=41)\nrf_clf.fit(train_prep,train_y)","1590b578":"rf_predictions=rf_clf.predict(train_prep)","5094d166":"f1_score(train_y,rf_predictions,average='weighted')","cc70ccbe":"sorted(zip(features, rf_clf.feature_importances_),key=lambda x: x[1],reverse=True)","853fcd05":"cross_val_score(rf_clf,train_prep,train_y,cv=3,n_jobs=8)","299acec8":"t_train_pred=cross_val_predict(rf_clf,train_prep,train_y,cv=3,n_jobs=8)","682a26b4":"conf_mx=confusion_matrix(train_y,t_train_pred)","2bb81755":"plt.matshow(conf_mx,cmap=plt.cm.gray)","0263c57f":"conf_mx","27171d23":"# predict_proba to get probabilities per class\ny_pred = rf_clf.predict_proba(train_prep)","bdd0439f":"# Evaluation\nlogloss = log_loss(train_y, y_pred)\nprint(f'Log loss: {logloss}')","753246ba":"predictions = rf_clf.predict_proba(pipeline.transform(test))\nsub = pd.DataFrame(predictions, columns=['Class_1','Class_2','Class_3','Class_4','Class_5','Class_6','Class_7','Class_8','Class_9'])\nsub['id']= test.index.to_series().values\n\n# Creating submission\nsub.to_csv('submission.csv', index=False)","1793663a":"Spit attributes and target","4b94b0ca":"Lets have a look at the data\n","09ec8a0c":"Data is 75 features + a target class","1d7bb5c3":"the training set has no missing values."}}