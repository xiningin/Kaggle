{"cell_type":{"9ae1436b":"code","5eeeefd8":"code","8344a24c":"code","31a98e64":"code","4b09738e":"code","23adbc93":"markdown","0da11940":"markdown"},"source":{"9ae1436b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5eeeefd8":"import csv\ncsv_filename = \"\/kaggle\/input\/clash-royale-season-18-dec-0320-dataset\/BattlesStaging_12272020_WL_tagged\/battlesStaging_12272020_WL_tagged.csv\"\nchunk_size = 500000\n\ntext_file_reader = pd.read_csv(csv_filename, engine='python',encoding='utf-8-sig', quoting=csv.QUOTE_MINIMAL, chunksize = chunk_size)","8344a24c":"dfList = []\ncounter = 0\n\nfor df in text_file_reader:\n    dfList.append(df)\n    counter= counter +1\n    print(\"Max rows read: \" + str(chunk_size * counter) )\n\ndf = pd.concat(dfList,sort=False)","31a98e64":"dfList = None\ndel dfList","4b09738e":"import matplotlib.pyplot as plt\nfrom matplotlib.ticker import StrMethodFormatter\n\ndf.set_index('battleTime', drop=False, inplace=True)\ndf.index = pd.to_datetime(df.index)\ndf_hourly_aggregated = df['arena.id'].groupby(pd.Grouper(freq='60Min')).count()\nax = df_hourly_aggregated.plot(kind='bar', grid=False, figsize=(24,8), color='#86bf91', zorder=2, rot=45)\n\nax.set_title(\"Matches Per Hour\")\nax.set_xlabel(\"Date and Hour in UTC\", labelpad=20, weight='bold', size=12)\nax.set_ylabel(\"Matches\", labelpad=20, weight='bold', size=12)\nax.set_yscale('log')\n\n# Format y-axis label\nax.yaxis.set_major_formatter(StrMethodFormatter('{x:,g}'))\nax.set_xticklabels([x.strftime(\"%b %d %Y %H:%M\") for x in df_hourly_aggregated.index])\nplt.show()","23adbc93":"### Plot the Number Of Matches Per Hour, Y-axis is in LOG scale","0da11940":"### Let's Free Up Some Resources"}}