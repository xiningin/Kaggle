{"cell_type":{"7b25c09f":"code","b0a4b86b":"code","674ce695":"code","3acad1ef":"code","26f41663":"code","63d6898f":"code","2d6b8cfa":"code","d1e69d52":"code","bc3bd8c0":"code","cd9af5af":"markdown","ecca7882":"markdown","1b0d4eb8":"markdown","2d3f200f":"markdown","e7341b32":"markdown","c5284a4d":"markdown","3b9db31e":"markdown","131104c7":"markdown","f33784e7":"markdown","3d20e99d":"markdown"},"source":{"7b25c09f":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","b0a4b86b":"dataset = pd.read_csv('..\/input\/restaurant-reviews\/Restaurant_Reviews.tsv', delimiter = '\\t', quoting = 3)","674ce695":"import re\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\ncorpus = []\nfor i in range(0, 1000):\n    review = re.sub('[^a-zA-Z]', ' ', dataset['Review'][i])\n    review = review.lower()\n    review = review.split()\n    ps = PorterStemmer()\n    review = [ps.stem(word) for word in review if not word in set(stopwords.words('english'))]\n    review = ' '.join(review)\n    corpus.append(review)","3acad1ef":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features = 1500)\nX = cv.fit_transform(corpus).toarray()\nprint(X)\ny = dataset.iloc[:, 1].values\nprint(y)","26f41663":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)","63d6898f":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 270, criterion = 'entropy', random_state = 0)\nclassifier.fit(X_train, y_train)","2d6b8cfa":"y_pred = classifier.predict(X_test)\ny_pred","d1e69d52":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","bc3bd8c0":"print(f'{classifier.score(X_test,y_test):0.2%}')","cd9af5af":"## Creating the Bag of Words model","ecca7882":"## Making the Confusion Matrix","1b0d4eb8":"# Natural Language\nNatural language refers to the way we, humans, communicate with each other.\n\nNamely, speech and text.\n\nWe are surrounded by text.\n\nThink about how much text you see each day:\n\n* Signs\n* Menus\n* Email\n* SMS\n* Web Pages\n* and so much more\u2026\n\nThe list is endless.\n\nNow think about speech.\n\nWe may speak to each other, as a species, more than we write. It may even be easier to learn to speak than to write.\n\nVoice and text are how we communicate with each other.\n\nGiven the importance of this type of data, we must have methods to understand and reason about natural language, just like we do for other types of data.\n\n","2d3f200f":"## Predicting the Test set results","e7341b32":"## Cleaning the texts","c5284a4d":"# Natural Language Processing","3b9db31e":"## Importing the dataset","131104c7":"## Training the Naive Bayes model on the Training set","f33784e7":"## Splitting the dataset into the Training set and Test set","3d20e99d":"## Importing the libraries"}}