{"cell_type":{"c8374e55":"code","a667d3a9":"code","23698cdd":"code","449b2e54":"code","4e99cadc":"code","f5362a07":"code","646e9974":"code","d6ce5081":"code","26ff2208":"code","f765fcd4":"code","b0923a2a":"markdown","32085fa7":"markdown","4b6ce470":"markdown","284056c0":"markdown","8008abd7":"markdown","c221cc1c":"markdown"},"source":{"c8374e55":"from google.cloud import bigquery\n\n## client\nclient = bigquery.Client()\n\n## Construct a reference to the nhtsa-traffic-fatalities dataset\ndata_ref = client.dataset(\"nhtsa_traffic_fatalities\", project=\"bigquery-public-data\")\n\n## API request - fetching the dataset\ndataset = client.get_dataset(data_ref)\n\n\n#++++++++ DB ++++++++#\n## Tables\ntables = list(client.list_tables(dataset))\nfor table in tables:\n    print(table.table_id, end=\", \")\n\n## Construct a referencia to the table \"accident_2015\"\ntable_ref = data_ref.table('accident_2015')\n\n# API reuqest - fetch the table\ntable = client.get_table(table_ref)\n\n## table to dataframe\ntb_accident_2015 = client.list_rows(table).to_dataframe()\ntb_accident_2015.columns","a667d3a9":"query1 = \"\"\"\n        SELECT COUNT(consecutive_number) AS num_accidents,\n        EXTRACT(DAYOFWEEK FROM timestamp_of_crash) AS day_of_week\n        FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`\n        GROUP BY day_of_week\n        \"\"\"","23698cdd":"safe_config = bigquery.QueryJobConfig( maximum_bytes_billed=10**10)\nQ1 = client.query(query1, job_config=safe_config)\naccidents_by_day = Q1.to_dataframe()\naccidents_by_day","449b2e54":"import matplotlib.pyplot as plt\ndow = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ns = sum(accidents_by_day.num_accidents)\nperc = []\nday = []\nfor i in range(len(accidents_by_day)):\n    perc.append(accidents_by_day.num_accidents[i]*100\/s)\n    day.append(dow[accidents_by_day.day_of_week[i]-1])\n    \nplt.pie(perc, labels = day, autopct='%1.1f%%', startangle=90)","4e99cadc":"query2 = \"\"\"\n        SELECT latitude, longitude,\n        EXTRACT(DAYOFWEEK FROM timestamp_of_crash) AS day_of_week\n        FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`\n        WHERE day_of_week = 1 or day_of_week = 6\n        \"\"\"","f5362a07":"safe_config = bigquery.QueryJobConfig( maximum_bytes_billed=10**10)\nQ2= client.query(query2, job_config=safe_config)\ndf_place_of_accident_weekend = Q2.to_dataframe()\ndf_place_of_accident_weekend","646e9974":"query3 = \"\"\"\n        SELECT latitude, longitude,\n        EXTRACT(DAYOFWEEK FROM timestamp_of_crash) AS day_of_week\n        FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`\n        WHERE day_of_week != 1 and day_of_week != 6\n        \"\"\"","d6ce5081":"safe_config = bigquery.QueryJobConfig( maximum_bytes_billed=10**10)\nQ3= client.query(query3, job_config=safe_config)\ndf_place_of_accident_w_d = Q3.to_dataframe()\ndf_place_of_accident_w_d","26ff2208":"import folium","f765fcd4":"## Central point\nstart_point = [df_place_of_accident_weekend.latitude[8141], df_place_of_accident_weekend.longitude[8141]]\n## Map\ntraffic_fatality_map = folium.Map(location=start_point, width = '90%', height = '70%', zoom_strt=100, tiles = 'Stamen Toner', position='absolute')\n\n#WEEKEND\n## Mount atributes on the map \nfor i in range(len(df_place_of_accident_weekend)):\n    ## Location\n    loc_1 = [df_place_of_accident_weekend.latitude[i], df_place_of_accident_weekend.longitude[i]]\n    ## Get info popup label    \n    label = f\"\"\"Day: {day[df_place_of_accident_weekend.day_of_week[i]-1]}\\n\n                Lat: {df_place_of_accident_weekend.latitude[i]} \n                Lon: {df_place_of_accident_weekend.longitude[i]}\n                \"\"\"\n    ## Use the location popup to make the maker and add to the map\n    folium.CircleMarker(location=loc_1, popup=label, radius=2, fill=True, color='red').add_to(traffic_fatality_map)\n    \n    \n## WORKING DAY\n## Mount atributes on the map \nfor j in range(len(df_place_of_accident_w_d)):\n    ## Location\n    loc_2 = [df_place_of_accident_w_d.latitude[j], df_place_of_accident_w_d.longitude[j]]\n    ## Get info popup label    \n    label_2 = f\"\"\"Day: {day[df_place_of_accident_w_d.day_of_week[j]-1]}\\n\n                Lat: {df_place_of_accident_w_d.latitude[j]} \n                Lon: {df_place_of_accident_w_d.longitude[j]}\n                \"\"\"\n    ## Use the location popup to make the maker and add to the map\n    folium.CircleMarker(location=loc_2, popup=label_2, radius=2, fill=True, color='blue').add_to(traffic_fatality_map)\n\n##traffic_fatality_map\ntraffic_fatality_map","b0923a2a":"### 2. Location of the fatality in weekend ","32085fa7":"## Queries\n\n### 1. Which day of the week has the most fatal motor accident\n- `consecutive_number` is a unique value (to count)\n- `timestamp_of_crash` to extract the day of the week","4b6ce470":"### 3. Location of the fatality in working day ","284056c0":"### Plot in a map Location Fatality Weekend VS Location Fatality Working day","8008abd7":"# US Traffic Fatality Record - Practice","c221cc1c":"### Plot"}}