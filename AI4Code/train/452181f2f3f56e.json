{"cell_type":{"5fca43da":"code","2134b0ae":"code","c2fd7603":"code","293152bc":"code","15761803":"code","de40c33b":"code","89e4996f":"code","cbaf250e":"code","455e07a0":"code","c25ef927":"code","cde091bd":"code","e5b05388":"code","32780696":"code","59e6990e":"markdown","837374d2":"markdown"},"source":{"5fca43da":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nmodel=KNeighborsClassifier()","2134b0ae":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","c2fd7603":"data.head()","293152bc":"#changing column names accordingly\ndata.columns=[\"id\" , \n             \"SepalLengthCm\",\n             \"SepalWidthCm\" ,\n             \"PetalLengthCm\" ,\n              \"PetalWidthCm\" ,\n              \"Species\"]\ndata.head()                    ","15761803":"# X= given \n# y= to be founded\nX = data.drop([\"Species\"] , axis = 1)   #axis=1 removes Species column\ny = data[\"Species\"]\nprint(X.shape,y.shape)","de40c33b":"print(X,y)","89e4996f":"\n#Data split into train and test\n\nX_train ,X_test , y_train , y_test =train_test_split(X,y,test_size=.25,random_state=100)\nprint (\"Shapes of X_train, X_test , y_train , y_test are :\" )\nprint(\"       \" , X_train.shape , X_test.shape , y_train.shape , y_test.shape)","cbaf250e":"X_test.head()","455e07a0":"print(model)","c25ef927":"model.fit(X_train , y_train)","cde091bd":"till_row = 20\ntemp = X_test[:till_row]\ntemp[\"Species\"] = y_test[ :till_row]\ntemp[\"predicted\"] = model.predict(X_test[ : till_row])\ntemp","e5b05388":"acc = model.score(X_test,y_test)\nprint(acc)\nprint(acc*100)","32780696":"predicted = model.predict(X_test)\noriginal = y_test.values\nwrong = 0\n\nfor i in range (len(predicted)):\n  if predicted[i]!=original[i]:\n    wrong = wrong + 1\nprint(wrong)","59e6990e":"**CALCULATING ACCURACY**","837374d2":"**PREDICTION OF OUTPUT**"}}