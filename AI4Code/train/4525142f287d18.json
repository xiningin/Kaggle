{"cell_type":{"af5b3a0d":"code","9fa4b1b9":"code","7e83af90":"code","c4074a74":"code","b8a8f34b":"code","6470761f":"code","3ea5cef8":"code","43281310":"code","080344fa":"code","1ed44feb":"code","25be2503":"code","3d96de0e":"code","8548e32c":"code","fa9451f9":"code","25042ba4":"code","c7fd0fa3":"code","e2d16d54":"code","2a76dbd9":"code","7a790578":"code","a8f7ff1c":"code","1ad49736":"code","5fad9753":"code","6f8ebd55":"code","8c4db682":"code","8fe18911":"code","530fc170":"code","4b150530":"code","2ec71904":"code","c47a1344":"code","6e9ef95e":"code","34206baf":"code","cdaa0845":"code","8a8a6278":"code","0b1747f2":"code","af45f85a":"code","925cdfe6":"code","28ac7694":"code","662840fb":"code","21f696e4":"code","9a27c071":"code","541923c7":"code","742421cf":"markdown","23ef67d0":"markdown","e9b10794":"markdown","a99f30a6":"markdown","4c6e2e51":"markdown","7e51d8f4":"markdown","9067c729":"markdown","1f57f3d2":"markdown","33837913":"markdown","0bc45585":"markdown","ec400e12":"markdown","915483ad":"markdown","ae3ae816":"markdown","e1805948":"markdown","b989c710":"markdown","6b28bdb7":"markdown","bc7cc301":"markdown","6ffd6575":"markdown","df876ff5":"markdown","e1ab88b4":"markdown","01ab21a8":"markdown","82b00f0e":"markdown","7f1984c6":"markdown","845be529":"markdown","69c50c92":"markdown","02b316c4":"markdown"},"source":{"af5b3a0d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fa4b1b9":"import sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy","7e83af90":"df = pd.read_csv(\"..\/input\/bank-marketing-campaign\/bank.csv\", sep=\";\")","c4074a74":"df.head()","b8a8f34b":"df.describe()","6470761f":"df.info","3ea5cef8":"df.drop(columns = [\"day\"], inplace=True)","43281310":"sns.histplot(x=\"y\",data = df)","080344fa":"sns.histplot(x = \"month\", data=df)","1ed44feb":"sns.barplot(x=\"y\", y=\"age\",data=df)","25be2503":"plt.plot(df[\"balance\"], df[\"y\"], \"o\")","3d96de0e":"plt.plot(df[\"duration\"], df[\"y\"], \"o\")","8548e32c":"sns.barplot(x=\"y\", y=\"balance\", data=df)","fa9451f9":"df.groupby(['y', 'job']).size().plot(kind='bar')","25042ba4":"df.groupby(['y', 'month']).size().plot(kind='bar')","c7fd0fa3":"from sklearn.preprocessing import OrdinalEncoder\nord_enc = OrdinalEncoder(categories = [[\"unknown\",\"primary\", \"secondary\", \"tertiary\"]])\ndf.education = ord_enc.fit_transform(df.loc[:, [\"education\"]])\ndf.head()","e2d16d54":"corr = df.corr()\nsns.heatmap(corr, annot=True)","2a76dbd9":"df.loan = df.loan.replace([\"yes\"], 1)\ndf.loan = df.loan.replace([\"no\"], 0)\ndf.housing = df.housing.replace([\"yes\"], 1)\ndf.housing = df.housing.replace([\"no\"], 0)\ndf.default = df.default.replace([\"yes\"], 1)\ndf.default = df.default.replace([\"no\"],0)\ndf.y = df.y.replace([\"yes\"],1)\ndf.y = df.y.replace([\"no\"],0)","7a790578":"#select the variables to encode first\ncols_to_encode = df.select_dtypes(include=\"object\")\nfor col in cols_to_encode:\n  df = pd.concat([df, pd.get_dummies(df[col], prefix=\"%s\"%col)], axis=1)\n  df.drop([col], axis=1, inplace=True)","a8f7ff1c":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\ndf = pd.DataFrame(scaler.fit_transform(df), columns=df.columns)","1ad49736":"df","5fad9753":"X = df.loc[:, df.columns!=\"y\"]\ny = df[\"y\"]","6f8ebd55":"from sklearn.linear_model import LogisticRegression\nreg = LogisticRegression()","8c4db682":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, stratify=y)","8fe18911":"reg.fit(X_train, y_train)\npred = reg.predict(X_test)","530fc170":"from sklearn.metrics import classification_report, recall_score, accuracy_score","4b150530":"print(classification_report(pred, y_test))","2ec71904":"from sklearn.model_selection import cross_val_score\ncross_val_score(reg, X, y, cv = 10, scoring=\"recall\").mean()","c47a1344":"from sklearn.model_selection import cross_val_score\ncross_val_score(reg, X, y, cv = 10, scoring=\"accuracy\").mean()","6e9ef95e":"from scipy.stats import chi2_contingency\n\ncontingency = pd.crosstab(df[\"y\"], df[\"housing\"])\n\nchi_2, p_val, dof, expected_freq = chi2_contingency(contingency)\nprint(f\"Chi-square score between housing loan and subscription is {chi_2}, p-value is {p_val}\")","34206baf":"print(contingency)","cdaa0845":"contingency = pd.crosstab(df[\"y\"], df[\"default\"])\n\nchi_2, p_val, dof, expected_freq = chi2_contingency(contingency)\nprint(f\"Chi-square score between credit and subscription is {chi_2}, p-value is {p_val}\")","8a8a6278":"contingency = pd.crosstab(df[\"y\"], df[\"loan\"])\n\nchi_2, p_val, dof, expected_freq = chi2_contingency(contingency)\nprint(f\"Chi-square score between loan and subscription is {chi_2}, p-value is {p_val}\")","0b1747f2":"from sklearn.linear_model import Ridge, LinearRegression, PoissonRegressor\nfrom sklearn.metrics import r2_score, mean_squared_error","af45f85a":"y = df[[\"balance\"]]\nX = df.loc[:, df.columns!=\"balance\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1)","925cdfe6":"ridge = Ridge()\nridge.fit(X_train, y_train)\nridge_pred = ridge.predict(X_test)","28ac7694":"cross_val_score(ridge, X, y, cv = 10, scoring=\"r2\")","662840fb":"linear = LinearRegression()\nlinear.fit(X_train, y_train)\nlinear_pred = linear.predict(X_test)\ncross_val_score(linear, X, y, cv = 10, scoring=\"r2\")","21f696e4":"y = df[[\"campaign\"]]\nX = df.loc[:, df.columns!=\"campaign\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1)","9a27c071":"poisson = PoissonRegressor()\npoisson.fit(X_train, y_train)\npoisson_pred = poisson.predict(X_test)","541923c7":"mean_squared_error(poisson_pred, y_test)","742421cf":"## Preprocessing","23ef67d0":"## Bank client data:\n\n- age (numeric)\n- job : type of job (categorical: \"admin.\",\"unknown\",\"unemployed\",\"management\",\"housemaid\",\"entrepreneur\",\"student\",\"blue-collar\",\"self-employed\",\"retired\",\"technician\",\"services\") \n- marital : marital status (categorical: \"married\",\"divorced\",\"single\"; note: \"divorced\" means divorced or widowed)\n- education (categorical: \"unknown\",\"secondary\",\"primary\",\"tertiary\")\n- default: has credit in default? (binary: \"yes\",\"no\")\n- balance: average yearly balance, in euros (numeric) \n- housing: has housing loan? (binary: \"yes\",\"no\")\n- loan: has personal loan? (binary: \"yes\",\"no\")\n\n\n#\u00a0Related with the last contact of the current campaign:\n\n- contact: contact communication type (categorical: \"unknown\",\"telephone\",\"cellular\") \n- day: last contact day of the month (numeric)\n- month: last contact month of year (categorical: \"jan\", \"feb\", \"mar\", \u2026, \"nov\", \"dec\")\n- duration: last contact duration, in seconds (numeric)\n\n##\u00a0other attributes:\n\n- campaign: number of contacts performed during this campaign and for this client (numeric, includes last contact)\n- pdays: number of days that passed by after the client was last contacted from a previous campaign (numeric, -1 means client was not previously contacted)\n- previous: number of contacts performed before this campaign and for this client (numeric)\n- poutcome: outcome of the previous marketing campaign (categorical: \"unknown\",\"other\",\"failure\",\"success\")\n\n## Output variable (desired target):\n- y: has the client subscribed a term deposit? (binary: \"yes\",\"no\")\n- Missing Attribute Values: None","e9b10794":"# Poisson regressor","a99f30a6":"Number of contacts performed for a person predicted with Poisson Regressor.\nThe model uses D^2, explained deviance, generalization for R^2.","4c6e2e51":"Looking at class imbalances and feature values","7e51d8f4":"I will encode the education as ordinal.","9067c729":"Management level workers tend to subscribe more than others.","1f57f3d2":"## Predicting subscriptions with Logistic Regression","33837913":"## Exploratory data analysis","0bc45585":"Does age affect the subscription?","ec400e12":"## Disclaimers\nThis is my applied statistics term project. I haven't optimized this, I haven't done any feature elimination, nor used a state-of-the-art ensemble model, since I was obliged to use GLMs.","915483ad":"## Multivariate linear regression","ae3ae816":"Is there any correlation between the variables?","e1805948":"Can we come up with a function that maps balance or duration of the campaign to target?","b989c710":"Scaling the numerical variables.","6b28bdb7":"* Null hypothesis: There's no relationship between the person currently using a housing loan and the person's subscription.\n* Alternative hypothesis: There's a relationship between the person currently using a housing loan and the person's subscription.\n* I determined the significance level as 0.05","bc7cc301":"I will encode the rest of the variables as dummies.","6ffd6575":"Higher client balance does have a relationship with increase in subscription.","df876ff5":"## Ridge regression on predicting balance","e1ab88b4":"There's a significant relationship between housing loan and the subscription.","01ab21a8":"We do not want to miss false negatives (people who tend to subscribe but are predicted as not subscribing)","82b00f0e":"What about month?\nNote that campaign has been conducted for some of the months, thus resulting in numbers that look higher. ","7f1984c6":"## Chi-square test of independence between housing loan and target","845be529":"What about the occupation of the client?","69c50c92":"Directly replacing binary features with 1 & 0's.","02b316c4":"Housing loan has most effect on subscriptions. Credit has least effect and loan has more effect than credit."}}