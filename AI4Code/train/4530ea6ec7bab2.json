{"cell_type":{"a1d0e395":"code","d6c42cfe":"code","dcddc95e":"code","1fc9b3ac":"code","8a3d78bb":"code","f788f772":"code","b3a8a255":"code","0a0da051":"code","3acf5c07":"markdown","eaccd397":"markdown","5c017ece":"markdown","82c2e1c3":"markdown","65b01ca1":"markdown"},"source":{"a1d0e395":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6c42cfe":"import os\nimport sys\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","dcddc95e":"train_df = pd.read_csv('..\/input\/snack-breed-classification\/dataset\/train.csv')\ntest_df = pd.read_csv('..\/input\/snack-breed-classification\/dataset\/test.csv')","1fc9b3ac":"train_df.head()","8a3d78bb":"test_df.head()","f788f772":"train_df.info(), test_df.info()","b3a8a255":"train_df['breed'].unique()","0a0da051":"len(train_df['breed'].unique())","3acf5c07":"### Looking into CSV file for TOP 5 ROWS","eaccd397":"### Looking for information about CSV file like `datatype`,`is contains null Value or not`,`memory usage`,`total no of entries`","5c017ece":"### Reading CSV files","82c2e1c3":"### List of breeds and total no of unique breeds","65b01ca1":"### Importing important library"}}