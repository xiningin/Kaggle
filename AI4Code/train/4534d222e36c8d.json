{"cell_type":{"90ff4b61":"code","ecee97ef":"code","80b316dd":"code","c5942a96":"code","acd49115":"code","160e5836":"code","1a8f524f":"code","b0600231":"code","79b64a02":"code","82c8375c":"markdown","6d86d236":"markdown","759379f9":"markdown","4f1e995a":"markdown","1a8861d6":"markdown","7e9ea4d1":"markdown"},"source":{"90ff4b61":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ecee97ef":"# Get data\ntrain_alldata=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_alldata=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n#train_alldate.head()\n#test_alldate.head()","80b316dd":"train_X=train_alldata[['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']]\ntrain_Y=train_alldata[['Survived']]\ntest_X=test_alldata[['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']]\ntrain_X.head()\n#train_Y.head()\n#test_X.head()\n#test_Y.head()\n#print(train_X.shape,train_Y.shape)","c5942a96":"sum2=0\nsum_num2=0\nfor i in range(0,len(train_X)) :\n    if(train_X.iloc[i,1]=='male'):\n        train_X.iloc[i,1]=1\n    else:\n        train_X.iloc[i,1]=2\n    if(train_X.iloc[i,6]=='S'):\n        train_X.iloc[i,6]=1 \n    if(train_X.iloc[i,6]=='C'):\n        train_X.iloc[i,6]=2\n    if(train_X.iloc[i,6]=='Q'):\n        train_X.iloc[i,6]=3\n    if np.isnan(train_X.iloc[i,6]):\n        train_X.iloc[i,6]=1\n    if(train_X.iloc[i,2]==train_X.iloc[i,2]):\n        sum_num2=sum_num2+1\n        sum2=sum2+train_X.iloc[i,2]\n    \nfor i in range(0,len(train_X)) :\n    if(train_X.iloc[i,2]!=train_X.iloc[i,2]):\n         train_X.iloc[i,2]=round(sum2\/sum_num2)","acd49115":"sum2=0\nsum_num2=0\ntest_X.iloc[152,5]=8\nfor i in range(0,len(test_X)) :\n    if(test_X.iloc[i,1]=='male'):\n        test_X.iloc[i,1]=1\n    else:\n        test_X.iloc[i,1]=2\n    if(test_X.iloc[i,6]=='S'):\n        test_X.iloc[i,6]=1 \n    if(test_X.iloc[i,6]=='C'):\n        test_X.iloc[i,6]=2\n    if(test_X.iloc[i,6]=='Q'):\n        test_X.iloc[i,6]=3\n    if np.isnan(test_X.iloc[i,6]):\n        test_X.iloc[i,6]=1\n    if(test_X.iloc[i,2]==train_X.iloc[i,2]):\n        sum_num2=sum_num2+1\n        sum2=sum2+train_X.iloc[i,2]\n    \nfor i in range(0,len(test_X)) :\n    if(test_X.iloc[i,2]!=test_X.iloc[i,2]):\n         test_X.iloc[i,2]=round(sum2\/sum_num2)","160e5836":"test_X[test_X.isnull().values==True] \ntrain_X[train_X.isnull().values==True] ","1a8f524f":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()\nrf.fit(train_X,train_Y)","b0600231":"\nre=rf.predict(test_X)\nrf.score(test_X,re)\nre=pd.DataFrame(re)\nre.columns=['Survived']\ntest_Y=test_alldata[['PassengerId']]\nsubmission=pd.concat([test_Y.PassengerId,re.Survived],axis=1)\nsubmission","79b64a02":"filename = 'Titanic Predictions 6.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","82c8375c":"# Find the missing value location","6d86d236":"# train_X pretreatment ","759379f9":"# Get train and test data","4f1e995a":"# test_X pretreatment ","1a8861d6":"# Get the predicted result","7e9ea4d1":"# train"}}