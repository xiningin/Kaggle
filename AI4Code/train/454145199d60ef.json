{"cell_type":{"ebd70194":"code","38a59c7e":"code","798cac4c":"code","250eeb14":"code","fa77fb0e":"code","8ffaa995":"code","18c526b4":"code","12fca58e":"code","ba876cf4":"code","af84a0bd":"code","80934b93":"code","2f713463":"code","4823c8c7":"code","244257f7":"code","f7b1ea00":"code","581105af":"code","6ca625b4":"code","bc4e61df":"code","63f0a7ac":"code","0daa1915":"code","9339822c":"code","28b33d1f":"code","9fba2d26":"code","dfe4e3c0":"code","4e046b09":"code","f657d1c7":"code","c2eb1bee":"code","ef281bc1":"code","d7cd0166":"code","2d453a17":"code","a8fcd268":"code","c943b08d":"code","64934436":"code","1a98108c":"code","158213fd":"code","1f2e516c":"code","68fd6c8d":"code","424b0103":"code","55f15a11":"code","57e5c215":"code","73ad0912":"code","12158bed":"code","348270f3":"code","8d12d3ca":"code","1be6e234":"code","b7f4e4a8":"code","fb2fdb9e":"code","1be56e19":"code","d901e864":"code","2b280b94":"code","f2cdaa83":"code","de09c65b":"code","8f77c494":"code","0e943a9b":"code","a0406911":"code","9f9e3af8":"code","ff310eee":"code","08cd38de":"code","9b0d56e1":"code","1558aee4":"code","c94e4890":"code","66ccce38":"code","52eadd2c":"code","7f7498ec":"code","f794f4b6":"code","465e0990":"code","732c0161":"code","814b393a":"code","c065b210":"code","e5d4e80b":"code","ed7bf3c8":"code","36cc7853":"code","e9b1e012":"code","6dad36cd":"markdown","3f09f3c4":"markdown","e4183710":"markdown","b6c913c6":"markdown","c8d50eaf":"markdown","736cc31e":"markdown","55f535a4":"markdown","ea8212a3":"markdown","a5ebd6ed":"markdown","d3e1a8b5":"markdown","192af2be":"markdown","43cd44d4":"markdown","02483d5f":"markdown","511ddef8":"markdown","bbfc78fe":"markdown","93a20090":"markdown","fd4fdf45":"markdown","b80b3dbb":"markdown","4c1dee87":"markdown","8318a3ac":"markdown","6eb240aa":"markdown","b0e70a17":"markdown","37ea648a":"markdown","901abb46":"markdown","bce33b40":"markdown","9132e580":"markdown","e9ecc259":"markdown","341ab692":"markdown","188b9cd9":"markdown","74fb47d7":"markdown","2183b2b5":"markdown","5c29488f":"markdown","ad4e3b42":"markdown","4ae5b654":"markdown","52f2cad5":"markdown","43ac5f74":"markdown","cbbdeac1":"markdown","343b3d46":"markdown","0ff69473":"markdown","a3c91fa2":"markdown","2a76d639":"markdown","c01b6436":"markdown","bd1f39a3":"markdown","2a30909d":"markdown","75f3f67a":"markdown"},"source":{"ebd70194":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","38a59c7e":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport statsmodels.api as sm\nfrom pylab import rcParams\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.graphics.tsaplots import plot_acf,plot_pacf \nfrom statsmodels.tsa.arima_model import ARIMA\nimport matplotlib.ticker as ticker","798cac4c":"df_train = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/train.csv', parse_dates=['timestamp'])\ndf_weather_train = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/weather_train.csv',parse_dates=['timestamp'])\ndf_meta_data = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/building_metadata.csv')","250eeb14":"df_meta_data.info()","fa77fb0e":"df_weather_train.info()","8ffaa995":"df_train.info()","18c526b4":"df_train.corrwith(df_weather_train.air_temperature)","12fca58e":"df_train.corrwith(df_weather_train.cloud_coverage)","ba876cf4":"df_train.corrwith(df_weather_train.wind_direction)","af84a0bd":"df_train.corrwith(df_weather_train.wind_speed)","80934b93":"df_train.corrwith(df_weather_train.sea_level_pressure)","2f713463":"df_merge_train_md = pd.merge(df_train,df_meta_data, how='left', on='building_id')","4823c8c7":"df_merge_train_md.count()","244257f7":"df_merge_train_md.loc[(df_merge_train_md['site_id'] == 0) & (df_merge_train_md['meter'] == 0),'meter_reading'] = \\\n      df_merge_train_md[(df_merge_train_md['site_id'] == 0) & (df_merge_train_md['meter'] == 0)] \\\n      ['meter_reading'] * 0.293","f7b1ea00":"df_meterType_0_train = df_merge_train_md[(df_merge_train_md.meter == 0) & (df_merge_train_md.meter_reading>0)]\ndf_meterType_1_train = df_merge_train_md[(df_merge_train_md.meter == 1) & (df_merge_train_md.meter_reading>0)]\ndf_meterType_2_train = df_merge_train_md[(df_merge_train_md.meter == 2) & (df_merge_train_md.meter_reading>0)]\ndf_meterType_3_train = df_merge_train_md[(df_merge_train_md.meter == 3) & (df_merge_train_md.meter_reading>0)]","581105af":"df_meterType_3_train.head()","6ca625b4":"df_mt_0_train_ts = df_meterType_0_train[['timestamp','meter_reading']]\ndf_mt_1_train_ts = df_meterType_1_train[['timestamp','meter_reading']]\ndf_mt_2_train_ts = df_meterType_2_train[['timestamp','meter_reading']]\ndf_mt_3_train_ts = df_meterType_3_train[['timestamp','meter_reading']]","bc4e61df":"df_mt_0_train_ts.set_index('timestamp', inplace=True)\ndf_mt_1_train_ts.set_index('timestamp', inplace=True)\ndf_mt_2_train_ts.set_index('timestamp', inplace=True)\ndf_mt_3_train_ts.set_index('timestamp', inplace=True)","63f0a7ac":"df_mt_0_train_ts.plot()","0daa1915":"df_mt_1_train_ts.plot()","9339822c":"df_mt_2_train_ts.plot()","28b33d1f":"df_mt_3_train_ts.plot()","9fba2d26":"df_mt_0_train_ts_w=df_mt_0_train_ts.meter_reading.resample('w').sum()\ndf_mt_1_train_ts_w=df_mt_1_train_ts.meter_reading.resample('w').sum()\ndf_mt_2_train_ts_w=df_mt_2_train_ts.meter_reading.resample('w').sum()\ndf_mt_3_train_ts_w=df_mt_3_train_ts.meter_reading.resample('w').sum()","dfe4e3c0":"df_mt_0_train_ts_w.head()","4e046b09":"df_mt_1_train_ts_w.head()","f657d1c7":"df_mt_2_train_ts_w.head()","c2eb1bee":"df_mt_3_train_ts_w.head()","ef281bc1":"fig, ax = plt.subplots()\nax.plot( df_mt_0_train_ts_w,marker='.', linestyle='-', linewidth=0.5, label='Weekly Meter Type 0',color='green')\nax.plot( df_mt_1_train_ts_w,marker='.', linestyle='-', linewidth=0.5, label='Weekly Meter Type 1',color='red')\nax.plot( df_mt_2_train_ts_w,marker='.', linestyle='-', linewidth=0.5, label='Weekly Meter Type 2',color='blue')\nax.plot( df_mt_3_train_ts_w,marker='.', linestyle='-', linewidth=0.5, label='Weekly Meter Type 3',color='magenta')\nplt.legend()","d7cd0166":"fig, ax2 = plt.subplots()\nax2.plot(df_mt_0_train_ts_w, color='black', label='meter type 0')\ndf_mt_1_train_ts_w.plot(label='meter type 1',color='blue')\ndf_mt_2_train_ts_w.plot(label='meter type 2',color='red')\ndf_mt_3_train_ts_w.plot(label='meter type 3',color='green')\nax2.legend()\nax2.set_ylabel('Weekly Total (KWh)');","2d453a17":"rcParams['figure.figsize'] = 20, 8\ndecomposition = sm.tsa.seasonal_decompose(df_mt_0_train_ts_w, model='additive')\nfig = decomposition.plot()","a8fcd268":"rcParams['figure.figsize'] = 20, 8\ndecomposition1 = sm.tsa.seasonal_decompose(df_mt_1_train_ts_w, model='multiplicative')\nfig1 = decomposition1.plot()","c943b08d":"rcParams['figure.figsize'] = 20, 8\ndecomposition2 = sm.tsa.seasonal_decompose(df_mt_2_train_ts_w, model='additive')\nfig2 = decomposition2.plot()","64934436":"rcParams['figure.figsize'] = 20, 8\ndecomposition3 = sm.tsa.seasonal_decompose(df_mt_3_train_ts_w, model='additive')\nfig3 = decomposition3.plot()","1a98108c":"def test_stationarity(timeseries):\n    \n    #Determing rolling statistics\n    rolmean = timeseries.rolling(7).mean()\n    rolstd = timeseries.rolling(7).std()\n\n    #Plot rolling statistics:\n    orig = plt.plot(timeseries, color='blue',label='Original')\n    mean = plt.plot(rolmean, color='red', label='Rolling Mean')\n    std = plt.plot(rolstd, color='black', label = 'Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show(block=False)\n    \n    #Perform Dickey-Fuller test:\n    print('Results of Dickey-Fuller Test:')\n    dftest = adfuller(timeseries, autolag='AIC')\n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print (dfoutput)","158213fd":"test_stationarity(df_mt_0_train_ts_w)","1f2e516c":"test_stationarity(df_mt_1_train_ts_w)","68fd6c8d":"test_stationarity(df_mt_2_train_ts_w)","424b0103":"test_stationarity(df_mt_3_train_ts_w)","55f15a11":"ts_log_0 = np.log(df_mt_0_train_ts_w)\nts_log_diff_0 = ts_log_0 - df_mt_0_train_ts_w.shift()\nplt.plot(ts_log_diff_0)","57e5c215":"ts_log_1 = np.log(df_mt_1_train_ts_w)\nts_log_diff_1 = ts_log_1 - df_mt_1_train_ts_w.shift()\nplt.plot(ts_log_diff_1)","73ad0912":"ts_log_2 = np.log(df_mt_2_train_ts_w)\nts_log_diff_2 = ts_log_2 - df_mt_2_train_ts_w.shift()\nplt.plot(ts_log_diff_2)","12158bed":"ts_log_3 = np.log(df_mt_3_train_ts_w)\nts_log_diff_3 = ts_log_3 - df_mt_3_train_ts_w.shift()\nplt.plot(ts_log_diff_3)","348270f3":"plot_acf(df_mt_0_train_ts_w,title='Test',lags=50);","8d12d3ca":"lag_acf_0 = acf(df_mt_0_train_ts_w, nlags=20)\nlag_pacf_0 = pacf(df_mt_0_train_ts_w, nlags=20, method='ols')","1be6e234":"#Plot ACF: \nplt.subplot(121) \nplt.plot(lag_acf_0)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_0_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_0_train_ts_w)),linestyle='--',color='gray')\nplt.title('Autocorrelation Function')","b7f4e4a8":"#Plot PACF:\nplt.subplot(122)\nplt.plot(lag_pacf_0)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_0_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_0_train_ts_w)),linestyle='--',color='gray')\nplt.title('Partial Autocorrelation Function')\nplt.tight_layout()","fb2fdb9e":"plot_pacf(df_mt_0_train_ts_w,title='PACF',lags=20);","1be56e19":"plot_acf(df_mt_1_train_ts_w,title='Test',lags=50);","d901e864":"lag_acf_1 = acf(df_mt_1_train_ts_w, nlags=20)\nlag_pacf_1 = pacf(df_mt_1_train_ts_w, nlags=20, method='ols')","2b280b94":"plt.subplot(121) \nplt.plot(lag_acf_1)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_1_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_1_train_ts_w)),linestyle='--',color='gray')\nplt.title('Autocorrelation Function')\nplot_acf(df_mt_1_train_ts_w,title='Test',lags=50);","f2cdaa83":"#PACF\nplt.subplot(122)\nplt.plot(lag_pacf_1)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_1_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_1_train_ts_w)),linestyle='--',color='gray')\nplt.title('Partial Autocorrelation Function')\nplt.tight_layout()\nplot_pacf(df_mt_1_train_ts_w,title='PACF',lags=20);","de09c65b":"lag_acf_2 = acf(df_mt_2_train_ts_w, nlags=20)\nlag_pacf_2 = pacf(df_mt_2_train_ts_w, nlags=20, method='ols')","8f77c494":"plt.subplot(121) \nplt.plot(lag_acf_2)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_2_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_2_train_ts_w)),linestyle='--',color='gray')\nplt.title('Autocorrelation Function')\nplot_acf(df_mt_2_train_ts_w,title='Test',lags=50);","0e943a9b":"#PACF\nplt.subplot(122)\nplt.plot(lag_pacf_2)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_2_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_2_train_ts_w)),linestyle='--',color='gray')\nplt.title('Partial Autocorrelation Function')\nplt.tight_layout()\nplot_pacf(df_mt_2_train_ts_w,title='PACF',lags=20);","a0406911":"lag_acf_3 = acf(df_mt_3_train_ts_w, nlags=20)\nlag_pacf_3 = pacf(df_mt_3_train_ts_w, nlags=20, method='ols')","9f9e3af8":"plt.subplot(121) \nplt.plot(lag_acf_3)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_3_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_3_train_ts_w)),linestyle='--',color='gray')\nplt.title('Autocorrelation Function')\nplot_acf(df_mt_3_train_ts_w,title='Test',lags=50);","ff310eee":"#PACF\nplt.subplot(122)\nplt.plot(lag_pacf_3)\nplt.axhline(y=0,linestyle='--',color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(df_mt_3_train_ts_w)),linestyle='--',color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(df_mt_3_train_ts_w)),linestyle='--',color='gray')\nplt.title('Partial Autocorrelation Function')\nplt.tight_layout()\nplot_pacf(df_mt_3_train_ts_w,title='PACF',lags=20);","08cd38de":"model_0 = ARIMA(df_mt_0_train_ts_w, order=(2, 0, 2))  \nresults_AR_0 = model_0.fit(disp=-1)  \nplt.plot(ts_log_diff_0)\nplt.plot(results_AR_0.fittedvalues, color='red')\nplt.title('RSS: %.4f'% sum((results_AR_0.fittedvalues-ts_log_diff_1)**2))\nresults_AR_0.summary()","9b0d56e1":"fcast_0 = results_AR_0.predict(len(df_mt_0_train_ts_w),len(df_mt_0_train_ts_w)+10)\n\n","1558aee4":"formatter = ticker.StrMethodFormatter('{x:,.0f}')\ntitle = 'Meter Reading of Type - 0'\nylabel='Weekly Meter Reading'\nxlabel='' # we don't really need a label here\n\nax = df_mt_0_train_ts_w.plot(legend=True,figsize=(12,6),title=title)\nfcast_0.plot(legend=True,label='Forecast')\nax.autoscale(axis='x',tight=True)\nax.set(xlabel=xlabel, ylabel=ylabel)\nax.yaxis.set_major_formatter(formatter);","c94e4890":"print(fcast_0)","66ccce38":"model_1 = ARIMA(df_mt_1_train_ts_w, order=(0, 1, 2))  \nresults_AR_1 = model_1.fit(disp=-1)  \nplt.plot(ts_log_diff_1)\nplt.plot(results_AR_1.fittedvalues, color='red')\nplt.title('RSS: %.4f'% sum((results_AR_1.fittedvalues-ts_log_diff_1)**2))\nresults_AR_1.summary()","52eadd2c":"fcast_1 = results_AR_1.predict(len(df_mt_1_train_ts_w),len(df_mt_1_train_ts_w)+10)","7f7498ec":"formatter = ticker.StrMethodFormatter('{x:,.0f}')\ntitle = 'Meter Reading of Type - 1'\nylabel='Weekly Meter Reading'\nxlabel='' # we don't really need a label here\n\nax = df_mt_1_train_ts_w.plot(legend=True,figsize=(12,6),title=title)\nfcast_1.plot(legend=True,label='Forecast')\nax.autoscale(axis='x',tight=True)\nax.set(xlabel=xlabel, ylabel=ylabel)\nax.yaxis.set_major_formatter(formatter);","f794f4b6":"print(fcast_1)","465e0990":"model_2 = ARIMA(df_mt_2_train_ts_w, order=(2, 1, 2))  \nresults_AR_2 = model_2.fit(disp=-1)  \nplt.plot(ts_log_diff_2)\nplt.plot(results_AR_2.fittedvalues, color='red')\nplt.title('RSS: %.4f'% sum((results_AR_2.fittedvalues-ts_log_diff_2)**2))\nresults_AR_2.summary()","732c0161":"fcast_2 = results_AR_2.predict(len(df_mt_2_train_ts_w),len(df_mt_2_train_ts_w)+10)","814b393a":"formatter = ticker.StrMethodFormatter('{x:,.0f}')\ntitle = 'Meter Reading of Type - 1'\nylabel='Weekly Meter Reading'\nxlabel='' # we don't really need a label here\n\nax = df_mt_2_train_ts_w.plot(legend=True,figsize=(12,6),title=title)\nfcast_2.plot(legend=True,label='Forecast')\nax.autoscale(axis='x',tight=True)\nax.set(xlabel=xlabel, ylabel=ylabel)\nax.yaxis.set_major_formatter(formatter);","c065b210":"print(fcast_2)","e5d4e80b":"model_3 = ARIMA(df_mt_3_train_ts_w, order=(2, 0, 2))  \nresults_AR_3 = model_3.fit(disp=-1)  \nplt.plot(ts_log_diff_3)\nplt.plot(results_AR_3.fittedvalues, color='red')\nplt.title('RSS: %.4f'% sum((results_AR_3.fittedvalues-ts_log_diff_3)**2))\nresults_AR_3.summary()","ed7bf3c8":"fcast_3 = results_AR_3.predict(len(df_mt_3_train_ts_w),len(df_mt_3_train_ts_w)+10)","36cc7853":"formatter = ticker.StrMethodFormatter('{x:,.0f}')\ntitle = 'Meter Reading of Type - 3'\nylabel='Weekly Meter Reading'\nxlabel='' # we don't really need a label here\n\nax = df_mt_3_train_ts_w.plot(legend=True,figsize=(12,6),title=title)\nfcast_3.plot(legend=True,label='Forecast')\nax.autoscale(axis='x',tight=True)\nax.set(xlabel=xlabel, ylabel=ylabel)\nax.yaxis.set_major_formatter(formatter);","e9b1e012":"print(fcast_3)","6dad36cd":"Meter Type -2","3f09f3c4":"Meter Type 0","e4183710":"**Forecast**","b6c913c6":"**ACF**","c8d50eaf":"Converting meter reading of site_id \"0\" to kwH","736cc31e":"**Meter Type 0: AREMA Forecast**","55f535a4":"**ACF and PACF plots:**\n","ea8212a3":"**PACF**","a5ebd6ed":"**Time Series Decomposition to review trend , seasonal , Residual etc**","d3e1a8b5":"Meter Type -3 ","192af2be":"Correlation Check","43cd44d4":"Filtering data based on meter type usage like 0,1,2 & 3","02483d5f":"**Meter Type 2: ACF and PACF**","511ddef8":"Forecast ","bbfc78fe":"**Meter Type 0 Transformation **","93a20090":"**Dickey-Fuller Test Function**","fd4fdf45":"**Converting daily to weekly meter reading for each meter type**","b80b3dbb":"**Meter Type 1 Stationary Test**","4c1dee87":"**Transformation and Differencing**","8318a3ac":"**ACF**","6eb240aa":"**Meter Type - 0**","b0e70a17":"**ACF**","37ea648a":"**PACF**","901abb46":"**Meter Type 3: ACF and PACF**","bce33b40":"Correlation looks low between training data and weather data. So continue with Training data only .","9132e580":"Data Analysis.","e9ecc259":"**Meter Type 3: AREMA Forecast**","341ab692":"**Testing for Stationarity**","188b9cd9":"As there is no relation among data, so either we can use non parametric model or time series. Considering time series for now to forecast the meter reading","74fb47d7":"**Meter Type 3 Stationary Test**","2183b2b5":"**Meter Type 3 Transformation**","5c29488f":"Meter Type -1","ad4e3b42":"Merging of Training data with MetaData to include site_id variable","4ae5b654":"**AREMA Model**","52f2cad5":"**Meter Type 1: AREMA Forecast**","43ac5f74":"**TimeSeries Data Exploration**","cbbdeac1":"**Meter Type 1: ACF and PACF**","343b3d46":"**Meter Type 2 Stationary Test**","0ff69473":"**Forecast**","a3c91fa2":"**Meter Type 0 Stationary Test**","2a76d639":"**Meter Type 1 Transformation**","c01b6436":"**Meter Type 2 Transformation**","bd1f39a3":"**Meter Type 2: AREMA Forecast**","2a30909d":"**PACF**","75f3f67a":"**Forecast**"}}