{"cell_type":{"78337077":"code","1a18ec0c":"code","c8aab95a":"code","386528dc":"code","bf2b719b":"code","818e92fd":"code","f22d0a92":"markdown","46b1ea2a":"markdown","6fd6ecc8":"markdown","0d4cf833":"markdown","14aa0a7e":"markdown","4a45303a":"markdown","30a4c829":"markdown"},"source":{"78337077":"import pandas as pd\nimport pickle\n\nDATA_PATH = \"\/kaggle\/input\/defi-ia-insa-toulouse\"\ntrain_df = pd.read_json(DATA_PATH+\"\/train.json\")\ntest_df = pd.read_json(DATA_PATH+\"\/test.json\")\ntrain_label = pd.read_csv(DATA_PATH+\"\/train_label.csv\")","1a18ec0c":"train_df[\"description_lower\"] = [x.lower() for x in train_df.description]\ntest_df[\"description_lower\"] = [x.lower() for x in test_df.description]","c8aab95a":"from sklearn.feature_extraction.text import TfidfVectorizer\ntransformer = TfidfVectorizer().fit(train_df[\"description_lower\"].values)\nprint(\"NB features: %d\" %(len(transformer.vocabulary_)))\nX_train = transformer.transform(train_df[\"description_lower\"].values)\nX_test = transformer.transform(test_df[\"description_lower\"].values)\nX_train","386528dc":"from sklearn.linear_model import LogisticRegression\nY_train = train_label.Category.values\nmodel = LogisticRegression()\nmodel.fit(X_train, Y_train)","bf2b719b":"predictions = model.predict(X_test)\npredictions","818e92fd":"test_df[\"Category\"] = predictions\nbaseline_file = test_df[[\"Id\",\"Category\"]]\nbaseline_file.to_csv(\"\/kaggle\/working\/baseline.csv\", index=False)","f22d0a92":"# Learning\n\nWe use a simple Logistic Regression model with scikit learn default arguments'value to train the baseline model. ","46b1ea2a":"# File Generation","6fd6ecc8":"# Cleaning\n\nThe only cleaning transformation applied here is that we `lower` the data so that all words are lower case. \nHence `research`and `Research` will be considered as similar word.\n\nYou might want to look at other cleaning step such that removing stopwords, stemming words, etc.","0d4cf833":"In this notebook we describe the code use to produce the baseline. ","14aa0a7e":"# Prediction","4a45303a":"# Data and Libraries","30a4c829":"# Vectorization\n\nWe use TfidfVectorizer to transform words from text to numerical vector data.  \n\nMore vectorize are available on scikit-learn -> https:\/\/scikit-learn.org\/stable\/modules\/classes.html#module-sklearn.feature_extraction.text\n\nYou also may want to have a look at words embedding methods (Word2vec, Glove, etc..)"}}