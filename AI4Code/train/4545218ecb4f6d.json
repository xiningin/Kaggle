{"cell_type":{"52a9a412":"code","3ea63b72":"code","0d80f587":"code","c5552f9f":"code","edd77304":"code","589d6a1d":"code","2d6cd714":"code","be342291":"code","2c3d5f3d":"code","78756863":"code","376e4695":"code","7af81a0e":"code","58e91368":"code","b25e762e":"code","51180038":"code","c3cd8291":"code","625de0fb":"code","fa117829":"code","1aa4dca3":"code","3bba20ae":"code","ec0d2161":"code","3333268c":"code","09c0d278":"code","6426d118":"code","bf562ea8":"code","b87711cf":"code","015a1446":"code","46b055ec":"code","abe37114":"code","cd0a2951":"code","abbf5e62":"code","790ad473":"code","c0824405":"code","03314522":"markdown"},"source":{"52a9a412":"import numpy as np \nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix","3ea63b72":"data_train = pd.read_csv('\/kaggle\/input\/udacity-mlcharity-competition\/census.csv')\ndata_test = pd.read_csv('\/kaggle\/input\/udacity-mlcharity-competition\/test_census.csv')\ngoal_test = pd.read_csv('\/kaggle\/input\/udacity-mlcharity-competition\/example_submission.csv')","0d80f587":"data_train.head()","c5552f9f":"data_test.head()","edd77304":"goal_test","589d6a1d":"data_train.income.unique()","2d6cd714":"income=data_train.income.map({'<=50K': 0, '>50K':1})","be342291":"features = pd.get_dummies(data_train.drop(['income'],1))","2c3d5f3d":"scaler = StandardScaler()\nfeatures = scaler.fit_transform(features)","78756863":"x_train , x_test , y_train , y_test = train_test_split(features,income,test_size=0.2,random_state=0)\nlogistic= LogisticRegression(random_state=0)\nlogistic.fit(x_train,y_train)","376e4695":"print('Train score is: ',logistic.score(x_train,y_train))\nprint('Test score is:',logistic.score(x_test,y_test))","7af81a0e":"cm = confusion_matrix(y_test,logistic.predict(x_test))\nprint(logistic.score(x_test,y_test))\npd.DataFrame(cm)","58e91368":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(x_train, y_train)","b25e762e":"print(classifier.score(x_train,y_train))\nprint(classifier.score(x_test,y_test))","51180038":"cm = confusion_matrix(y_test, classifier.predict(x_test))\nprint(classifier.score(x_test, y_test))\npd.DataFrame(cm)","c3cd8291":"x_train , x_test , y_train , y_test = train_test_split(features,income,test_size=0.2,random_state=0)","625de0fb":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=9)\nclassifier.fit(x_train,y_train)","fa117829":"print('Train score is:',classifier.score(x_train,y_train))\nprint('Test score is :', classifier.score(x_test,y_test))","1aa4dca3":"#cm = confusion_matrix(y_test, classifier.predict(x_test))\n#print(classifier.score(x_test, y_test))\n#pd.DataFrame(cm)","3bba20ae":"test = data_test.drop(['Unnamed: 0'] , axis=1)","ec0d2161":"test.head()","3333268c":"test.fillna(method='ffill', inplace=True)","09c0d278":"test = pd.get_dummies(data_test)","6426d118":"test.head()","bf562ea8":"final_test = test.drop(['Unnamed: 0'] , axis=1)","b87711cf":"final_test.fillna(method='ffill', inplace=True)","015a1446":"final_test.head()","46b055ec":"scaler= StandardScaler()\nfinal_test = scaler.fit_transform(final_test)","abe37114":"x_train , x_test , y_train , y_test = train_test_split(features,income,test_size=0.2,random_state=0)\nlogistic= LogisticRegression(random_state=0)\nlogistic.fit(x_train,y_train)\nlogistic.predict(x_test)\nlogistic.predict(final_test)","cd0a2951":"goal_test.head()","abbf5e62":"goal_test['id'] = goal_test.iloc[:,0] \ngoal_test['income'] = logistic.predict(final_test)","790ad473":"goal_test.head()","c0824405":"goal_test.to_csv('example_submission.csv',index=False,header=1)","03314522":"# We will use Logistic Regression"}}