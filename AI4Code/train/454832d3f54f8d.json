{"cell_type":{"f0ca9d71":"code","baf51cac":"code","82967644":"code","77ff3283":"code","e6e681ac":"code","fb1718d9":"code","41b87deb":"code","a8425965":"code","717ac640":"code","5e1c0268":"code","df885f73":"code","849bdddc":"code","87388e36":"code","6f735751":"code","aeb3b343":"code","9f9d9fac":"code","b67a6dc2":"code","a678bef9":"code","7a0c24fb":"code","a4c3bce5":"code","c4ece351":"code","05428941":"code","4d8f0308":"code","6d9c81bf":"code","dd7213e6":"code","00843bc8":"code","90f5c24c":"code","30d130ce":"markdown","ebfdfa2a":"markdown"},"source":{"f0ca9d71":"import numpy as np\nimport pandas as pd\nimport os\nprint(os.listdir(\"\/kaggle\/input\/\"))\n#os.getcwd()","baf51cac":"from fastai import *\nfrom fastai.vision import *\nfrom pathlib import Path\nimport json\ntorch.cuda.set_device(0)","82967644":"MASKS_FN = 'train.csv'\nTRAIN_DN = Path('train\/images\/')\nTEST = Path('test\/images\/')\n\nPATH = Path('\/kaggle\/input\/')\nTMP = Path('\/kaggle\/working\/tmp')\nMODEL = Path('\/kaggle\/working\/model')\nseg = pd.read_csv(PATH\/MASKS_FN).set_index('id')\nseg.head()\n\nsz = 101\nbs = 64\nnw = 4","77ff3283":"train_names_png = [TRAIN_DN\/f for f in os.listdir(PATH\/TRAIN_DN)]\ntrain_names = list(seg.index.values)","e6e681ac":"test_names_png = [TEST\/f for f in os.listdir(PATH\/TEST)]  #not used","fb1718d9":"seg['isSalt'] = seg['rle_mask'].apply(lambda x : type(x)!=float).astype(int)","41b87deb":"salt = seg['isSalt']\nsalt.to_csv('salt.csv')","a8425965":"x_names = [f'{x}.png' for x in train_names if(type(seg.loc[x]['rle_mask'])!=float)]\nx_names_path = np.array([TRAIN_DN\/x for x in x_names])","717ac640":"x_names[0:5]","5e1c0268":"tfms = get_transforms(do_flip=True, max_rotate=10, max_zoom=1.2, max_lighting=0.3, max_warp=0.15)\nmd = image_data_from_csv(path = '\/kaggle\/working\/', folder=PATH\/TRAIN_DN, \n                         ds_tfms = tfms, tfms = imagenet_norm, \n                         suffix= '.png', csv_labels='salt.csv')","df885f73":"x,y = next(iter(md.train_dl))","849bdddc":"x.shape, y","87388e36":"arch = tvm.resnet34\nlearn = ConvLearner(md, arch, metrics=accuracy)","6f735751":"lr_find(learn)\nlearn.recorder.plot()","aeb3b343":"learn.fit_one_cycle(4)","9f9d9fac":"learn.unfreeze()","b67a6dc2":"lr = 1E-3\nlrs = np.array([lr\/10,lr\/3,lr])\nlearn.fit(lrs,2,cycle_len=10,use_clr=(20,5))","a678bef9":"wd = 1E-4\n","7a0c24fb":"learn.fit(lr\/10,2,cycle_len=10, wds = wd, use_clr=(20,5))","a4c3bce5":"learn.sched.plot_loss()","c4ece351":"learn.save('resnet34_issalt')","05428941":"predsTTA, y = learn.TTA();","4d8f0308":"log_preds = predsTTA.mean(0)","6d9c81bf":"accuracy_np(log_preds,y) #Not bad","dd7213e6":"testTTA = learn.TTA(is_test=True);\nprobs = np.exp(testTTA[0].mean(0));\nprobs.shape","00843bc8":"probs[0:5,:]","90f5c24c":"np.save('probs_issalt', probs)","30d130ce":"Detecting Salt in images using FastAI","ebfdfa2a":"# Training Resnet34"}}