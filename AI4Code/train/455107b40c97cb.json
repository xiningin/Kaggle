{"cell_type":{"2098517e":"code","05361c17":"code","19f6b5dc":"code","e2542589":"code","a900946f":"code","8c7ef07b":"code","761c2331":"code","ba263971":"code","a14a6b26":"code","a9c74d69":"code","1b323c60":"code","f3d742aa":"code","959bb7ea":"code","ca7fcc9d":"markdown","2d75a1b4":"markdown","9fbd2a44":"markdown","166c6582":"markdown"},"source":{"2098517e":"import numpy as np\nfrom pathlib import Path\nimport pandas as pd\nimport cv2\nimport matplotlib.pylab as plt\nimport os\nprint(os.listdir(\"..\/input\"))","05361c17":"from pathlib import Path\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nroot = '..\/input'\n\ntrain_dr = Path('..\/input\/10-monkey-species\/training\/training\/')\ntest_dr = Path('..\/input\/10-monkey-species\/validation\/validation\/')","19f6b5dc":"label_df = pd.read_csv('..\/input\/10-monkey-species\/monkey_labels.txt')\nlabel_df","e2542589":"monky = cv2.imread('..\/input\/10-monkey-species\/training\/training\/n8\/n8114.jpg')\nplt.imshow(monky)","a900946f":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","8c7ef07b":"generate_train_data = ImageDataGenerator(rescale=1.\/255)\ntrain_generator = generate_train_data.flow_from_directory(train_dr,target_size=(120,120),batch_size=32,class_mode='categorical') \n\n\ngenerate_test_data = ImageDataGenerator(rescale=1.\/255)\ntest_generator = generate_test_data.flow_from_directory(test_dr,target_size=(120,120),batch_size=32,class_mode='categorical') ","761c2331":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPool2D,Flatten,Dropout","ba263971":"my_model =Sequential()\nmy_model.add(Conv2D(filters=32,kernel_size=(4,4),input_shape=(120,120,3),activation='relu'))\nmy_model.add(MaxPool2D(pool_size=(2,2)))\n\nmy_model.add(Conv2D(filters=32,kernel_size=(4,4),input_shape=(120,120,3),activation='relu'))\nmy_model.add(MaxPool2D(pool_size=(2,2)))\n\n\nmy_model.add(Flatten())\n\nmy_model.add(Dense(128,activation='relu'))\n\nmy_model.add(Dense(10,activation='softmax'))\n\nmy_model.compile(loss = 'categorical_crossentropy', optimizer ='adam', metrics= ['accuracy'])","a14a6b26":"my_model.summary()","a9c74d69":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss',patience=2)","1b323c60":"my_model.fit_generator(train_generator, epochs = 5 , validation_data=train_generator,callbacks = early_stop,verbose = 1)","f3d742aa":"losse = pd.DataFrame(my_model.history.history)\nlosse.head()","959bb7ea":"losse[['accuracy','val_accuracy']].plot()","ca7fcc9d":"______________________________________","2d75a1b4":"# Model","9fbd2a44":"__________________","166c6582":"# Hossam ALaa Abas"}}