{"cell_type":{"410dfbaf":"code","8406e62c":"code","6dfd829f":"code","b548635c":"code","6d065f92":"code","6ba35142":"code","411bac60":"code","e6af8cce":"code","a7efbc3a":"code","13ed882f":"code","97860b30":"code","697478e0":"code","bbcf5a6c":"code","7dd157fc":"code","cccdd466":"code","fdeac622":"code","c9f60194":"code","046e247d":"code","4b4cc662":"code","49ea69e8":"code","71f961cf":"code","74336541":"code","d95924ae":"code","4f04ec76":"code","e3e792c1":"code","6da251cf":"code","bf5532db":"code","ee03a5d6":"code","d259d684":"code","8f7ffa85":"code","15faeebd":"code","75422a85":"code","760512ea":"code","f1a1b1c9":"code","739f1139":"code","b96f6362":"code","95b3751e":"code","11ea6a88":"code","36817995":"code","bb41ac04":"code","78c68b99":"code","83d19fa0":"code","1c78fb32":"code","55cea858":"code","d680a109":"code","09f3fc04":"code","e88608be":"code","b8343dc4":"code","c91ed449":"code","e1994b9b":"code","a8ce9f32":"code","e9c60608":"code","33b8176b":"code","cbe58231":"code","b1e1301e":"code","83f675c6":"code","4156cea4":"code","1c37451a":"code","db8624a5":"code","e27cf31b":"code","968519a6":"code","2340915f":"code","5c87975b":"code","f89887ef":"code","98636c37":"code","01590ed2":"code","0a555268":"code","250be6d5":"code","db59e7d6":"code","3579c135":"code","fbe17722":"code","c01671ba":"code","e01fee25":"code","315094bc":"markdown","e94c69dd":"markdown","955825ad":"markdown","2eab0395":"markdown","83a0d1c5":"markdown","4426c8ac":"markdown","50604908":"markdown","e1290c0b":"markdown","51b9b9da":"markdown","76dbe0fc":"markdown","36479632":"markdown","945c765f":"markdown","b8adbfcc":"markdown","37e840ed":"markdown","49ac1245":"markdown","6835b514":"markdown","32e1508c":"markdown","8e3712d1":"markdown","f242a4fb":"markdown","5df34216":"markdown","9b783231":"markdown","a71b9a2e":"markdown","2fb50c07":"markdown","4fd7bf6e":"markdown","c5ad64a6":"markdown","2a136fe8":"markdown","cce64101":"markdown","3cdc57cb":"markdown","aa6d512d":"markdown","4bf7af5c":"markdown","c3f1114b":"markdown","fb5801eb":"markdown","7dc6a179":"markdown","fe6a1bb8":"markdown","2e35b09b":"markdown","5b203434":"markdown","665ae9c5":"markdown","e915a31c":"markdown","146132b1":"markdown","95f11f4a":"markdown","6fe42c4c":"markdown","f056ab7c":"markdown","ceab6a2a":"markdown","0d30a050":"markdown","8eb24262":"markdown","e0d076e4":"markdown","0d9f7a74":"markdown","e8317bd7":"markdown","e4b94226":"markdown","5e46da4c":"markdown","c90cf0e2":"markdown","6e0edfce":"markdown","ac9ac924":"markdown","6e54430e":"markdown","57301211":"markdown","8572bf68":"markdown","7f2a3951":"markdown","0d16399e":"markdown","791b6954":"markdown","90b3c21c":"markdown","25509c81":"markdown"},"source":{"410dfbaf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","8406e62c":"def import_netflix():\n    return pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\n\nnetflix = import_netflix()\n\nprint(netflix.shape)","6dfd829f":"netflix.head()","b548635c":"print('number of rows and columns in data:')\nprint(netflix.shape)\n\nnot_null_df = pd.DataFrame(netflix.notnull().sum(), columns=['Count of content'])\nnot_null_df.index.name = 'Column Name'\nnot_null_df[ not_null_df['Count of content']>0].sort_values('Count of content', ascending=False)","6d065f92":"null_df = pd.DataFrame(netflix.isnull().sum(), columns=['Count of Nulls'])\nnull_df.index.name = 'Column Name'\nnull_df[ null_df['Count of Nulls']>0].sort_values('Count of Nulls', ascending=False)","6ba35142":"netflix[['show_id']]","411bac60":"netflix.dtypes","e6af8cce":"netflix['date_added'] = pd.to_datetime(netflix.date_added)\nnetflix.dtypes","a7efbc3a":"netflix.fillna({'rating': 'Unavailable', 'cast': 'Unavailable', 'country': 'Unavailable', 'director': 'Unavailable'}, inplace=True)","13ed882f":"null_df = pd.DataFrame(netflix.isnull().sum(), columns=['Count of Nulls'])\nnull_df.index.name = 'Column Name'\nnull_df[ null_df['Count of Nulls']>0].sort_values('Count of Nulls', ascending=False)","97860b30":"netflix[netflix.date_added.isnull()]","697478e0":"most_recent_entry_date=netflix['date_added'].max()\nnetflix.fillna({'date_added': most_recent_entry_date}, inplace=True)","bbcf5a6c":"netflix[netflix.show_id == 's6067']","7dd157fc":"netflix[netflix.duration.isnull()]","cccdd466":"netflix[netflix.director == 'Louis C.K.'].head()","fdeac622":"netflix.loc[netflix['director'] == 'Louis C.K.', 'duration'] = netflix['rating']\nnetflix[netflix.director == 'Louis C.K.'].head()","c9f60194":"netflix.loc[netflix['director'] == 'Louis C.K.', 'rating'] = 'Unavailable'\nnetflix[netflix.director == 'Louis C.K.'].head()","046e247d":"netflix.rating.value_counts()","4b4cc662":"netflix.type.unique()","49ea69e8":"netflix.duration.value_counts()","71f961cf":"netflix['movie_duration_minutes'] = netflix['duration']\n\nnetflix.loc[netflix['type'] == 'Movie', 'movie_duration_minutes'] = netflix['movie_duration_minutes'].str.strip(' min')\n\nnetflix.loc[netflix['type'] == 'TV Show', 'movie_duration_minutes'] = 0\n\nnetflix['movie_duration_minutes'] = netflix['movie_duration_minutes'].astype(int)\n\nnetflix.head()","74336541":"netflix['season_count'] = netflix['duration']\n\nnetflix.loc[netflix['type'] == 'TV Show', 'season_count'] = netflix['season_count'].str.strip(' Seasons')\nnetflix.loc[netflix['type'] == 'TV Show', 'season_count'] = netflix['season_count'].str.strip(' Season')\n\nnetflix.loc[netflix['type'] == 'Movie', 'season_count'] = 0\n\nnetflix['season_count'] = netflix['season_count'].astype(int)\nnetflix.head()","d95924ae":"netflix['year_available'] = netflix.date_added.dt.year\nitems_per_year = netflix.year_available.value_counts().sort_index() ","4f04ec76":"mapping_dict = {'TV Show': 0, 'Movie': 1}\nnetflix['type_as_num'] = netflix['type'].map(mapping_dict)\nnetflix[['type', 'type_as_num']]","e3e792c1":"genres_list = [val.strip() for sublist in netflix.listed_in.str.split(\",\").tolist() for val in sublist]\ngenre_df = pd.DataFrame(genres_list, columns=['genre'])\n","6da251cf":"unique_genres = pd.DataFrame(genre_df['genre'].unique()).rename(columns={0:'unique_genre'})\nprint('The number of genres available on netflix will be the number of rows in unique_genres:')\nunique_genres.shape","bf5532db":"print('original data frame shape')\nprint(netflix.shape)\ngenre_exploded = netflix.set_index('show_id').listed_in.str.split(\", \", expand = True).reset_index(level=0).rename(columns={0:'first', 1:'second', 2:'third'})\nprint('exploded data will have the same number of rows but columns for the show_id and one for each genre:')\nprint(genre_exploded.shape)\ngenre_exploded.head()","ee03a5d6":"genre_combo1 = pd.merge(unique_genres, genre_exploded, left_on=['unique_genre'], right_on=['first'], how='inner')\nprint('The unique_genres shape')\nprint('The number of rows in the genre_exploded should correspond with the netflix dataframe:')\nprint(genre_exploded.shape)\nprint('The number of rows in the genre_combo1 should also correspond with the netflix dataframe:')\nprint(genre_combo1.shape)\ngenre_combo1.head()","d259d684":"genre_combo2 = pd.merge(unique_genres, genre_exploded, left_on=['unique_genre'], right_on=['second'], how='inner')\nprint('The number of rows in the genre_combo2 should be equal to or less than genre_combo1 above:')\nprint(genre_combo2.shape)\ngenre_combo2.head()","8f7ffa85":"genre_combo3 = pd.merge(unique_genres, genre_exploded, left_on=['unique_genre'], right_on=['third'], how='inner')\nprint('The number of rows in the genre_combo3 should be equal to or less than genre_combo2 above:')\nprint(genre_combo3.shape)\ngenre_combo3.head()","15faeebd":"columns_to_drop = [\n    'first',\n    'second',\n    'third'\n]\n\ngenre_combo1.drop(columns_to_drop, axis='columns', inplace=True)\ngenre_combo2.drop(columns_to_drop, axis='columns', inplace=True)\ngenre_combo3.drop(columns_to_drop, axis='columns', inplace=True)\n\nprint('Quick shape check. The row count should be the same as previosly seen but the columns should drop to 2:')\nprint(genre_combo1.shape, genre_combo2.shape, genre_combo3.shape)","75422a85":"master_genre_combo=genre_combo1.append(genre_combo2).append(genre_combo3)\nmaster_genre_combo.reset_index(inplace=True, drop=True);\nmaster_genre_combo.rename(columns={'unique_genre':'genre'},inplace=True)\nprint(master_genre_combo.shape)\nprint(master_genre_combo.dtypes)\nmaster_genre_combo.head()","760512ea":"genre_by_year = master_genre_combo.merge(netflix, on='show_id')\ncolumns_to_drop = ['show_id','type','title','director','cast','country','date_added','release_year','rating','duration','listed_in','description','movie_duration_minutes','season_count','type_as_num']\ngenre_by_year= genre_by_year.drop(columns_to_drop, axis='columns')\nprint(genre_by_year.shape)\ngenre_by_year.head()","f1a1b1c9":"print('Distribution of movies and tv shows on Netflix:')\nprint(netflix.type.value_counts())\nprint('In terms of percent:')\ntype_counts = netflix.type.value_counts()\n((type_counts\/len(netflix))*100).round(2)","739f1139":"n = len(pd.unique(netflix['director']))\n# -1 to exclude 'Unknown' from the count\nprint(n-1, ' unique directors on Netflix')","b96f6362":"netflix.director.value_counts().head(10)\n","95b3751e":"content_per_director = pd.DataFrame(netflix.loc[(netflix['director']!='Unavailable')].director.value_counts())\ncontent_per_director.describe().round(2)","11ea6a88":"netflix.plot(kind='scatter', x='year_available', y='release_year', figsize=(8,8), s=4, c='green')\nplt.title('Netflix Streaming Availability vs Actual Release Year')\nplt.xlabel('Year Available on Netflix')\nplt.ylabel('Year Originally Released')\n;","36817995":"netflix.plot(kind='scatter', x='year_available', y='release_year', figsize=(8,8), s=4, c='type_as_num', colormap='winter')\nplt.title('Netflix Streaming Availability vs Actual Release Year, TV Shows vs Movies')\nplt.xlabel('Year Available on Netflix')\nplt.ylabel('Year Originally Released')\n;","bb41ac04":"movie_times = netflix.loc[netflix['type'] == 'Movie', 'movie_duration_minutes']\nmovie_times.plot(kind='hist', bins = 25)\nplt.title('Movie length distribution')\nplt.xlabel('Length of Movie (min)')\nplt.ylabel('Number of Movies')\n;","78c68b99":"movie_times.describe().round(2)","83d19fa0":"tv_seasons = netflix.loc[netflix['type'] == 'TV Show', 'season_count'].value_counts().sort_index()\ntv_seasons.plot(kind='bar')\nplt.title('Number of Seasons per TV Show')\nplt.xlabel('Number of Seasons')\nplt.ylabel('Count of Shows')\n;","1c78fb32":"tv_seasons = netflix.loc[netflix['type'] == 'TV Show', 'season_count'].value_counts().sort_index()\ntv_seasons","55cea858":"netflix[netflix.title == 'Lucifer']","d680a109":"netflix[netflix.title == 'Coffee Prince']","09f3fc04":"items_per_year.plot()","e88608be":"netflix[netflix['title'].str.contains(r'Black Money(?!$)')]","b8343dc4":"n = len(pd.unique(genre_df['genre']))\nprint('There are ', n, ' unique genres on Netflix')","c91ed449":"count_by_genre = genre_df['genre'].value_counts()\ncount_by_genre","e1994b9b":"netflix[netflix.title == \"Castlevania\"]","a8ce9f32":"genre_df['genre'].value_counts().head(20)\ninternational_count = genre_df[genre_df['genre'].str.contains(r'International(?!$)')].value_counts().sum()\nkorean_count = genre_df[genre_df['genre'].str.contains(r'Korean(?!$)')].value_counts().sum()\nanime_count = genre_df[genre_df['genre'].str.contains(r'Anime(?!$)')].value_counts().sum()\nforeign_proportion = ((international_count + korean_count + anime_count)\/(len(netflix.index))).round(3)*100\nprint('Foreign content makes up for a whopping ', foreign_proportion, '% of Netflix genre listing!')","e9c60608":"netflix[netflix.title == 'Squid Game']","33b8176b":"netflix[netflix.title == 'Chocolate']","cbe58231":"netflix[netflix.title == \"Heaven's Garden\"]","b1e1301e":"korean = genre_by_year[genre_by_year['genre'].str.contains(r'Korea(?!$)')]\nkorean.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('Korean Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","83f675c6":"korean_by_year = korean.groupby(['year_available']).count().rename(columns={'genre':'count'})\nadded_netflix_content_by_year = pd.DataFrame(netflix['year_available'].value_counts()).rename(columns={'year_available':'count'})\n\n((korean_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('Korean Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","4156cea4":"international = genre_by_year[genre_by_year['genre'].str.contains(r'International(?!$)')]\ninternational.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('International Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","1c37451a":"international_by_year = international.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((international_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('International Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","db8624a5":"anime = genre_by_year[genre_by_year['genre'].str.contains(r'Anime(?!$)')]\nanime.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('Anime Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","e27cf31b":"anime_by_year = anime.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((anime_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('Anime Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","968519a6":"foreign=korean.append(international).append(anime)\nforeign.reset_index(inplace=True, drop=True);\nprint('Korean content: ', korean.shape)\nprint('International content: ', international.shape)\nprint('Anime content: ', anime.shape)\nprint('Total foreign content (row count should be sum of the above):', foreign.shape)","2340915f":"foreign.groupby(['year_available']).count().plot(kind='bar',legend=False )\nplt.title('Foreign Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count')\n;","5c87975b":"foreign_by_year = foreign.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((foreign_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('Foreign Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","f89887ef":"null_country =netflix.loc[netflix['country'] == 'Unavailable', 'year_available'].value_counts().sort_index()\nnull_country.plot(kind='bar', legend=False)\nplt.title('Number of Unavailable Country Counts per Added Content by Year')\nplt.xlabel('Year Content made available on Netflix')\nplt.ylabel('Null Country Label')\n;","98636c37":"dramas = genre_by_year[genre_by_year['genre'] == 'Dramas']\ndramas.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('Drama Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","01590ed2":"dramas_by_year = dramas.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((dramas_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('Drama Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","0a555268":"dramas_by_year","250be6d5":"comedies = genre_by_year[genre_by_year['genre'] == 'Comedies']\ncomedies.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('Comedy Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","db59e7d6":"comedies_by_year = comedies.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((comedies_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('Comedy Genre Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","3579c135":"int_shows = genre_by_year[genre_by_year['genre'] == 'International TV Shows']\nint_shows.groupby(['year_available']).count().plot(kind='bar', legend=False)\nplt.title('International TV Shows Genre Content added to Netflix per Year')\nplt.xlabel('Year made available on Netflix')\nplt.ylabel('Added Content Count');","fbe17722":"int_shows_by_year = int_shows.groupby(['year_available']).count().rename(columns={'genre':'count'})\n\n((int_shows_by_year\/added_netflix_content_by_year)*100).round(2).plot(legend=False)\nplt.title('International TV Shows Content as a Percentage of Total New Netflix Content')\nplt.xlabel('Year added on Netflix')\nplt.ylabel('Percentage of Total Added Content(%)');","c01671ba":"netflix.rating.value_counts()","e01fee25":"((netflix.rating.value_counts()\/len(netflix))*100).round(2)","315094bc":"##### Build out movie_duration_minutes\n* Strip ' min' from the end of the string\n* Make any TV Show durations default to 0","e94c69dd":"For nulls in date_added, missing date_added is to be substituted in with the most recent date from date_added. \\\nThis is because Netflix has the tendency to add more content over time, so this would minimally skew analysis results. \\\n\\\nOther viable options would be finding actual dates and inputting them manually or dropping the data from results since the amount of missing data is rather small.","955825ad":"#### 'Foreign' Analysis\n\nFor the sake of data analyis let's widen the scope to be foreign content again (still excluding spanish language and British content).\nAppend the previous content together into one and analyze the sum","2eab0395":"### Index check\nshow_index appears to align with the table index. However, I decided against setting the table index to show_index due to the 's' character in front of the counter.","83a0d1c5":"#### Ratings and Ratings over time\nWith that much content made for older audiences, it probably makes sense that they have parental control options and a section geared just for kids.","4426c8ac":"## Data Cleaning\n\n### Null Analysis\n\nInital checks into the number of total rows compared to the rows with content show the proportion of nulls appears fairly minimal.","50604908":"##### At the top of the list is the null director slot (renamed to 'Unavailable' earlier). Not the most surprising or  interesting find.","e1290c0b":"#### Optional additional buildout for country and director\nThis same method can also be applied to country too. However, country has a lot more countries listed out, unlike genre which appears to have a cap at three. Additionally, there were a fairly sizable number of nulls for country data at the time of this project. Though this may improve in the future, for this project, country will not generally be used in the analysis.\n\nA similar issue applies to directors too, but to be frank, I do not have much interest in directors.","51b9b9da":"#### Sample of Data","76dbe0fc":"Adding an additional column mapping the type (movie or tv show) as a number could be helpful for visualizations.","36479632":"#### Korean Content\nIn regards to mymy parents' watch habits, they started watching K-dramas (and shortly after other subtitled foreign content) around 2017.\n\nThe Korean genre data bounces back and forth year over year, we know of at least one show that has been removed from the historical list, and there are cases of Korean language content not given the corresponding label.\n\nThough it is generally known that Korean entertainment has gotten more popular in the US in recent years (Just look at Squid Games and Korean Music like Hot Pink and BTS), the Netflix data support for the case of my parents being K-drama trend setters is inconclusive.","945c765f":"##### Items per year definition clarification\nThe years indicate when they were made available to stream, so this isn't to say the number has decreased in 2019 and 2020, just that the amound of new content added has decreased somewhat. This does not take into account removed content from netflix.","b8adbfcc":"#### year_available\nHaving the year_available created from the date_added data will make year over year analysis a lot simpler, particularly since the data set already covers a good number of years. \n\nThe date\/years indicates when they were made available to stream, so this isn't to say the amount of content has decreased from 2019 and 2020, just that the amound of new content added has decreased somewhat. This does not take into account removed content from netflix (more on this later).","37e840ed":"#### Quota Fulfilled: One Nice Bell Curve\n##### Histogram displaying movie lengths in minutes \nNot very surprisingly, the peak of the bell curve falls around 100 minutes in length for a movie. The mean also falls close to that. The shortest movie length is 3 minutes, while the longest is 312 minutes!","49ac1245":"#### But wait! This isn't telling the whole story\nThis isn't the most accurate way to determine which genre's may be considered 'up and coming' since the amount of content added per year by Netflix on the whole varies.\nAnother way to slice this data is to look at the genre content added as a percentage of the content added that year.","6835b514":"##### As of the time this project was done, 'International Movies' dominate the genre ranking\n**And thus I had my Hypothesis**: \\\nFind out if my parents are the true trend setters they claimed to be by seeing if they watch certain genres before they became widely available\/popular on Netflix. \\\n**Assumption**: Increase in concentration of a genre over teams correlates to popularity of the genre as there is now view, favorites, or ratings data to work with.","32e1508c":"It was while I was chewing on this unique choice of a binge watch and digging through more of my parent's watch history that I noticed that they had been watching variety of foreign shows and other unique finds.","8e3712d1":"##### Overwrite and Check","f242a4fb":"### Additional data cleansing\n#### Durations data input error\nThe missing durations are all movies by Louis C.K.\nNormally, we would likely fill the duration with the mean duration of movies from the table. If there were any tv shows missing the duration, that would be a bit more challening as the durations for shows are measured in seasons, not minutes. \\\nHowever, in this case it appears that the actual duration was input into the rating column, so one solution is to move the rating data into the duration and make the rating information 'Unavailable' like the other nulls.","5df34216":"With the data used in this analysis, it can only really be speculated as to why the foreign content begins to (proportionally) drop off after 2018. Several variables can be taken into consideration, but one theory that came to mind when looking at the interesting increase in unavailable country labels is that Netflix could have content falling between the cracks in terms of correctly labeling a series as foreign if they don't have the country data immediately available. Though, again, this is just an unsupported theory the information available (unless I wanted to manually go through a large chunk of the content messing country data and label it myself, which I don't.)","9b783231":"#### Merge the first exploded column with the unique_genres data frame made earlier","a71b9a2e":"#### Release Year vs Year Available (on Netflix)\nThe top gradually curves up as it is impossible to post a movie on Netflix that has not been made at that point. \\\nAs Netflix continues to add more content, it appears that they also add a broader range of content in terms of age.\n\nThe reason it probably looks like there are not as many data points on the histogram as there are in the raw data is because there is a ton of overlap between the year_available and the release_year. There may very well be 2, 5, 10, etc. overlapping bubbles for any given point on the graph, especially where the year_available and release_year are close.","2fb50c07":"#### Release Year vs Year Available (on Netflix)\n### Broken out by TV Shows and Movies\nTV Shows = 0\/Blue \\\nMovies = 1\/Green \n\nNetflix's content started off primarily as movies, likely stemming from their roots in mailing cds. \\\nAlthough there have been bursts of TV Shows added over the years, it appears that the lion's share of Netflix's attention is on movies. ","4fd7bf6e":"#### Explosions!\nGenres isn't the most useful for analysis at this point.\nExplode (or expand) each listed genre per movie or show into a column. With that done, they can be merged together with data from the main data frame into a new data frame that will contain every movie or show listed out with each genre. \n\n##### Step one - explode the genre out","c5ad64a6":"One more check for ratings to be sure there are no strange inputs.\\\nNR --> Not Rated \\\nUR --> Unrated \\\nFV --> Fantasy Violence","2a136fe8":"## Setup\nImport libraries \\\nImport date source (https:\/\/www.kaggle.com\/shivamb\/netflix-shows) ","cce64101":"#### Genre\nHaving a compiled list of genres in a separate data frame could be useful for analysis. Each show or movie had the option of have one to three genres listed out under listed_in. To deal with this, split by the commas separating the genres and save them in a variable, it can then be saved into a data frame for later use. It will contain all of the repeating genres. This is good for frequency analysis.","3cdc57cb":"Check to make sure there is no other content with the same director to avoid accidental overwriting (if this changes in the future, the safer but more manual fix would be to change this by show_id).","aa6d512d":"#### Briefly side stepping\nI watched anime since I was a kid. I thought I noticed over the years that Netflix was adding quite a bit of Anime content, but I was never quite sure since I considered I might have a bias from looking for it. They never had a ton, since there is a fairly successful anime specific streaming platform called Crunchyroll, but I found that the Netflix anime content was, if not vast, usually pretty solid content quality.\n\nAnd looking at the over time data for it... maybe *I'm* the trend setter of the family....\n* At the time of this analysis, the anime genre is still a pretty small proportion of the total Netflix content, but at this rate, Crunchyroll might start getting nervous in a few years time.","4bf7af5c":"Looking into a few examples of foreign media, some of the labeling choices seemed a bit inconsistent. \nNetflix's wildly popular show 'Squid Games' was given the generic international label despite it being in the Korean language. Other shows on my parent's recently watched history 'Chocolate' and 'Heaven's Garden' were given both the foreign and korean tags.\nOne possible reason is because it Squid Games is considered a Netflix Original, so this may mean that only content originally produced in Korea for consumption in Korea may be given the tag. This is somewhat inconclusive as at the time of this analysis, the director and country data was also unavailable, so it wouldn't make sense to read too much into it.\n\nThere is also a chance it is simply arbitrary.","c3f1114b":"### General Analysis\nStart off with a general analysis of the content, maybe find a nice bell curve or two.","fb5801eb":"Proof of concept that the date filled in the null date_added from a show_id example that previously was missing the date_added","7dc6a179":"#### If there is extra time\nAdditional analysis on:\n* Other genres\n* ratings","fe6a1bb8":"#### A few side notes regarding how TV Show and seasons data is structured\nWhen a new season to a show is added, the date_added and release_year are updated to that date.\n* This means that historical data for past seasons is overwritten \\\n'Lucifer', a show I enjoyed during the pandemic, is a great example of this. Netflix took it over after it had been dropped by it's original network and released a new season every year or so.","2e35b09b":"#### Year Over Year by Genre\nTake a look at some of the genres by how much new content is added for them by year.","5b203434":"## Data Dictionary\n\n<br \/>\n<br \/>\n\n| Field | Description |\n| :-- | :-- |\n| **show_id** | unique ID for every Movie and TV Show\n| **type** | Identifier, a movie or tv show\n| **title** | Title of the movie or tv show\n| **director** | director of the movie or tv show\n| **cast** | actors involved in the movie or show\n| **country** | the country the movie or tv show was produced\n| **date_added** | Date it was added on Netflix\n| **release_year** | Actual Release year of the move \/ showA\n| **rating** | TV Rating of the movie \/ show (ie PG-13, TV-MA, etc)\n| **duration** | Total Duration - in minutes or number of seasonsTotal Duration - in minutes or number of seasons\n| **listed_in** | the genre, can have multiple listed. Strings separated by commas\n| **description** | a summary description of the movie or tv show\n","665ae9c5":"#### Broaden the analysis to foreign content labels\n\nChanging the analysis to the International label genre, historically there is a massive increase of content added to Netflix over time. In terms of proportionally to the total, the surge really starts after 2015. It starts to relax a bit after 2018.\n\nIt doesn't look good for my parent's trend-setting beliefs.\n","e915a31c":"##### Update date_added to datetime and check","146132b1":"### Agenda\n* Setup (imports, data dictionary)\n* Data Cleaning (Nulls, fixes, checks)\n* Build out additional usability\n* High level Netflix content browsing and light analysis\n* Rolling up our sleeves with Genres\n* Conclusion\n* Extra Analysis on the side (for fun)","95f11f4a":"# Netflix\n\n### Netflix is one of the most commonly used streaming services in the US. There is so much content now that sometimes it is hard to grasp what is even available. The purpose of this project was to get a sense of what is even on Netflix, get an idea of what is being added, see if there are any particularly interesting points in the data, and to poke a little bit of fun at my parents as I have downloaded their watch history.\n\n#### For those of your worries about the privacy of my parents, their data will not be posted on here, I analyzed it separately and will only lightly reference it for the sake of teasing. They are also aware of this project.\n\n#### As for their egos, don't worry they have plenty to spare. They think they are trend setters in content consumption (we'll test this out).","6fe42c4c":"##### Second overwrite and check","f056ab7c":"### Conclusion\nNetflix has a huge amount of content being added over time (even taking into consideration the gradual removal of old content). Foreign content is a massive portion of the overall genre markers and although it apears to be flattening out a bit, It will probably remain a larger proportion of the total content for a some time to come. Though with such spikes in tags during different times, it appears Netflix has the ability to change genre ratios fairly quickly, so no genre lead is safe in the long run. If there is extra time though, see below for extra data supporting this.\n\n##### As for my parents\nAccording to the data, my parents were not late to the game but they can't really be considered content hipsters either. I originally harbored a guess that they just picked whatever the algorithm hands them to watch, but they consume quite a variety of popular series and 'unknowns' as well, so that may not be the case as they do have pretty broad preferences.\nThough this is failry inconclusive, I can't help but take some pride and joy in my parent's range of foreign content consumption from around the world. That said, I'll happily take an 'I told you so' from them the day that Turkish Dramas get their own designated genre tag in Netflix.\n","ceab6a2a":"##### The 'first', 'second', and 'third' columns are no longer needed, so they can be dropped","0d30a050":"'International TV Shows' is another listed genre close to the top of the list. That is not all though, if you look closer at the genres list, there are also more specific foreign and foreign language type listings for 'British TV Shows', 'Spanish-Language TV Shows', 'Korean TV Shows', and 'Anime Series', and 'Anime Features'. \n\nThat got me asking, how much of Netflix's content is actually foreign?\n\nExclude:\n* British TV Shows - it's a bit of a stretch since British media and US media can overlap\n* Spanish-Language TV Shows - can very well be made in the US for the very significant Spanish speaking population.\n\nEven excluding those genres in their entirety, they make up a massive portion of the total genre count consideration.\n\nAnother note of worth is that even though Anime is widely considered a product of Japan, other countries (including the US) have started to produce their own content of the same style. There is a Netflix original anime produced in the US called Castlevania (based on a videogame series of the same name) that is given the genre tag of Anime. This is a relatively negligable portion of the anime tag so it will still be included in the foreign definition.","8eb24262":"### Adjust Data Types and Fill in Missing Values\n\nVerify data types make sense. All except release_year are objects\/strings as expected.\n\nEstablished information from previous test\n\n**The following do not require any fills:** \n* type\n* title\n* release_year\n* listed_in\n* description\n\n**The following are missing data:** \n* duration\n* rating\n* date_added\n* cast\n* country\n* director\n\nCheck data types, update types where needed and proceed.\n* date_added to be updated to datetime\n\n**'Unavailable'** will be substituted in for any nulls of fields with object\/string data types. This applies to everything except for release_year.","e0d076e4":"##### Bar chart displaying show lengths in seasons\nNot as pretty as the movie histogram, there is still a curve to be seen, just a different kind.\n","0d9f7a74":"### Fill Nulls\n\nrating,cast, country, and director have the nulls filled with 'Unavailable'","e8317bd7":"#### Movies and Show\nVerify types consist of Movie and TV Show (no additional surprises here).","e4b94226":"##### Exclude unavailable directors\nRemove the Unavailable directors from the data and get some more interesting overall information about content per director. Suddenly, the top producers look a lot more impressive by comparison. \n\nParticularly interesting (to me at least), are the directors who work together on a considerable number of productions. They must work really well together!","5e46da4c":"\n\n### Additionally\nThere are cases where some shows will have lots of seasons but considered to only have 1 season according to Netflix. With that in consideration, the slope would likely be less severe if the data was more accurate.\n\n### \"But how did you notice this?\"\n### I am so glad you asked...\nWhile looking at my parents watch history, I couldn't help but notice they absolutely blasted through a Turkish Drama called \"Black Money Love\" that was **over 160 episodes long** (And yes, this was during the pandemic). \\\nAnd although the show was clearly divided into seasons when originally released, it looks like it either fell through the cracks or Netflix just didn't want to bother.\n","c90cf0e2":"### Building out data usability\nDuration data is challenging to use due to:\n* Having two different systems of measure (minutes and seasons)\n* Having strings in the column\n\nInstead of overwritting the duration column, building out two new columns would make the data a lot easier to manage and check.\n\n##### Durations sample","6e0edfce":"#### Comedies ","ac9ac924":"#### Unique Genres\nMake an additional data frame with only the unique genres for other analysis purposes.","6e54430e":"##### Front Loaded Content\nThis data only includes currently available shows and movies. Content that was taken down, like my parent's first Korean drama \"Coffee Prince\" (watched in 2018), which is no longer available can not be found in this data. \n\nThis could likely cause Netflix data looking 'front heavy'. As they remove older content and add new content over time, it almost guarantees the appearance of an increased slope for added content over time.\n\nThe increasing slope would likely be more gradual if historical season availability dates were taken into account as well.\n\nFurthermore, the index count adds up to match the show_id, this means that the show_id is probably not reliable for snapshot data or other over time analysis since it likely gets overwritten when shows are removed or added to the list.","57301211":"#### Repeat for exploded columns 2 and 3\nThey will be expected to have fewer columns because not all tv shows or movies will have more than one genre listed","8572bf68":"#### Combined all 3\nAgain, repeat data is fine since we want every movie associated with every genre. Shape confirms the math adds up.  \nThe show_id is good to keep to obtain additional information for analysis as needed.","7f2a3951":"items_per_year.plot()","0d16399e":"##### Build out season_count\n* Strip 'Season ' and 'Seasons ' from the beginning of the string\n* Make any Movie durations default to 0","791b6954":"#### International TV Shows\nOne last chance to my folks, since they primarily watched more international tv shows than movies, did one more analysis on that. Still nothing conclusively in their favor.","90b3c21c":"#### Year Over Year by Genre\nWhile we are at it, over time analysis is fun. Let's set up the genre data to make it usable for year over year analysis too.\nTaking the master_genre_combo data frame and add back on the additional information from the netflix data frame. Then remove the unecessary columns and rename where appropriate.\n ","25509c81":"#### Dramas\n\nDespite being high in the raw count ranking, there were so few (or even no) dramas added in early Netflix data that the line in the percentage of total graph actually disapears until 2015!"}}