{"cell_type":{"9362462f":"code","a35495a9":"code","1a647679":"code","640683f3":"code","253ddad4":"code","07e52d2b":"code","2c60498d":"code","8636aa14":"code","fb58e829":"code","f006b921":"code","34370d96":"code","d35bbe5f":"code","63430902":"code","1148f567":"code","99b2522c":"code","a5da1dba":"code","f35be4f6":"code","469ed121":"code","d2b22d00":"code","67f11f4d":"markdown","93107422":"markdown","1387be52":"markdown","48561af2":"markdown","a24c977a":"markdown","55b4b4b4":"markdown"},"source":{"9362462f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a35495a9":"import pandas as pd\nimport  numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1a647679":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf.sample(2)","640683f3":"df.describe()","253ddad4":"df.info()","07e52d2b":"df.isna().sum()","2c60498d":"import missingno as msno\nmsno.bar(df)   # No data missing","8636aa14":"msno.matrix(df)","fb58e829":"msno.heatmap(df)","f006b921":"msno.dendrogram(df)","34370d96":"plt.figure(figsize = (20, 8))\n\nax = plt.subplot(1, 3, 1)\nsns.histplot(df['Age'])\n\nax = plt.subplot(1, 3, 2)\nsns.histplot(df['Annual Income (k$)'])\n\nax = plt.subplot(1, 3, 3)\nsns.histplot(df['Spending Score (1-100)'])\n\nplt.tight_layout()\nplt.show()","d35bbe5f":"values = df['Gender'].value_counts()\nlabels = ['Male', 'Female']\nexplode = (0, 0.06)\ncolors =sns.color_palette(\"tab10\")[0:5]\n#create pie chart\nplt.pie(values, labels = labels, colors = colors, autopct='%.0f%%',shadow = True,\n                                   startangle = 90, explode = explode)\nplt.show()","63430902":"from sklearn.cluster import KMeans\nX1 = df.loc[:, ['Annual Income (k$)', 'Spending Score (1-100)']].values\n\nwcss= [];score=[]\nfor k in range(1, 11):\n    kmeans = KMeans(n_clusters = k, init = 'k-means++')\n    kmeans.fit_transform(X1)\n    score.append(kmeans.score(X1))\n    wcss.append(kmeans.inertia_)\n\nplt.figure(figsize = (12, 7))\n\nplt.plot(range(1, 11), wcss, linewidth = 5, marker = 'o',color=\"green\", ms = 20, mfc = 'black')\nplt.title('Elbow Plot\\n', fontsize = 20)\nplt.xlabel('K')\nplt.ylabel('WCSS')\nplt.show()\n\ndata1={'k':range(1,11),'score':score,'Inertia':wcss}\ndf1=pd.DataFrame(data1)\ndf1","1148f567":"kmeans = KMeans(n_clusters = 5)\nlabels = kmeans.fit_predict(X1)\n##\nprint('\\nPredict\\n\\n',labels)\n##\nprint('\\ncluster_centers_\\n\\n',kmeans.cluster_centers_)\n##\nprint('\\nLabel\\n\\n',kmeans.labels_)","99b2522c":"plt.figure(figsize = (14, 8))\n##\nage=X1[:, 0]\nSpending=X1[:, 1]\npredict_labels=kmeans.labels_\ncluster_centers_x=kmeans.cluster_centers_[:, 0]\ncluster_centers_y=kmeans.cluster_centers_[:, 1]\n##\nplt.scatter(age,Spending, c = predict_labels, s = 105)\nplt.scatter(cluster_centers_x, cluster_centers_y, color = 'red', s = 250)\nplt.title('Clusters of Customers\\n', fontsize = 20)\nplt.xlabel('Annual Income (k$)', fontsize = 20)\nplt.ylabel('Spending Score (1-100)', fontsize = 20)\nplt.show()","a5da1dba":"##EXAMPLE\n\nfrom scipy.cluster.hierarchy import linkage, fcluster, dendrogram\nfrom sklearn.datasets import make_blobs\nimport matplotlib.pyplot as plt\n\nX, cl = make_blobs(n_samples=20, n_features=2, centers=3, cluster_std=0.5, random_state=0)\nZ = linkage(X, method='ward')\n\nplt.figure()\ndendrogram(Z)\nplt.show()","f35be4f6":"from scipy.cluster.hierarchy import dendrogram,linkage\n\nplt.figure(figsize = (17, 8))\n\ndendo = dendrogram(linkage(X1, method = 'ward'))\nplt.title('Dendrogram', fontsize = 15)\nplt.show()","469ed121":"from sklearn.cluster import AgglomerativeClustering\nagc = AgglomerativeClustering(n_clusters = 4, affinity = 'euclidean', linkage = 'ward')\nlabels = agc.fit_predict(X1)\nlabels","d2b22d00":"plt.figure(figsize = (20, 8))\n\nplt.scatter(X1[labels == 0,0], X1[labels == 0,1], label = 'Cluster 1', s = 100)\nplt.scatter(X1[labels == 1,0], X1[labels == 1,1], label = 'Cluster 2', s = 100)\nplt.scatter(X1[labels == 2,0], X1[labels == 2,1], label = 'Cluster 3', s = 100)\nplt.scatter(X1[labels == 3,0], X1[labels == 3,1], label = 'Cluster 4', s = 100)\n\nplt.legend(loc = 'best')\nplt.title('Clusters of Customers\\n ', fontsize = 20)\nplt.xlabel('Annual Income (k$)', fontsize = 20)\nplt.ylabel('Spending Score (1-100)', fontsize = 20)\nplt.show()","67f11f4d":"# Reference\n\nhttps:\/\/towardsdatascience.com\/using-the-missingno-python-library-to-identify-and-visualise-missing-data-prior-to-machine-learning-34c8c5b5f009\n\nhttps:\/\/www.analyticsvidhya.com\/blog\/2019\/05\/beginners-guide-hierarchical-clustering\/","93107422":"# kmeans clustering using `Age` and `Spending Score` columns\n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html\n\nhttps:\/\/www.w3schools.com\/python\/matplotlib_markers.asp","1387be52":"https:\/\/seaborn.pydata.org\/tutorial\/color_palettes.html","48561af2":"# Dendrogram\n\n**Flat and Hierarchical Clustering | The Dendrogram Explained**\n\nhttps:\/\/youtu.be\/ijUMKMC4f9I\n","a24c977a":"https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.AgglomerativeClustering.html","55b4b4b4":"# Using-the-missingno"}}