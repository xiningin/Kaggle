{"cell_type":{"1405322f":"code","3d54f620":"code","93c7d699":"code","185f0d69":"code","51d870c1":"code","60c481bc":"code","aa066e6f":"code","28bb342a":"code","e7c708a1":"code","d52a01ab":"code","9e5300ce":"markdown","805bd147":"markdown","3dccfc43":"markdown","064f73b1":"markdown"},"source":{"1405322f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n%matplotlib inline\nfrom matplotlib.ticker import FormatStrFormatter\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d54f620":"df = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()","93c7d699":"df.dtypes","185f0d69":"df['Outcome'] = df['Outcome'].astype(bool)  #changing Outcome label to Boolean datatype\n","51d870c1":"df.describe().T","60c481bc":"preg_proportion = np.array(df['Pregnancies'].value_counts())\npreg_month = np.array(df['Pregnancies'].value_counts().index)\npreg_proportion_percentage = np.array(preg_proportion\/sum(preg_proportion)*100,dtype = 'int64')","aa066e6f":"preg = pd.DataFrame({'month':preg_month,'count_of_preg_group':preg_proportion,'proportion':preg_proportion_percentage})\npreg.set_index('month',inplace=True)\npreg.head()","28bb342a":"fig, axes = plt.subplots(nrows=3 , ncols=2, dpi=120,figsize =(10,6))\n\nplot00 = sns.countplot('Pregnancies', data=df, ax=axes[0][0],color='green')\naxes[0][0].set_title('count',fontsize=8)\naxes[0][0].set_xlabel('Month Of pregnant', fontsize=8)\naxes[0][0].set_ylabel('count',fontsize=8)\nplt.tight_layout()\n\nplot01 = sns.countplot('Pregnancies', data=df,hue='Outcome',ax=axes[0][1])\naxes[0][1].set_title('dia Vs.Non-diab',fontsize=8)\naxes[0][0].set_xlabel('Month Of pregnant', fontsize=8)\naxes[0][0].set_ylabel('count',fontsize=8)\nplt.tight_layout()\n\nplot01 = sns.distplot(df['Pregnancies'], ax=axes[1][0])\naxes[0][1].set_title('Pregnancies distribution',fontsize=8)\naxes[0][0].set_xlabel('Month Of pregnant', fontsize=8)\naxes[0][0].set_ylabel('frequency',fontsize=8)\nplt.tight_layout()\n\nplot11_1 = df[df[\"Outcome\"]==False][\"Pregnancies\"].plot.hist(ax=axes[1][1],label='Non-diab')\nplot11_2 = df[df[\"Outcome\"]==True][\"Pregnancies\"].plot.hist(ax=axes[1][1],label='diab')\naxes[1][1].set_title(\"diab Vs.Non Diab\",fontsize=8)\naxes[0][0].set_xlabel('Month Of pregnant', fontsize=8)\naxes[0][0].set_ylabel('count',fontsize=8)\nplot11_1.axes.legend(loc=1)\n# plt.setp(axes[1][1].get_legend().get_texts())\n# plt.setp(axes[1][1].get_legend().get_title())\nplt.tight_layout()\n\nplot20 = sns.boxplot(df['Pregnancies'],ax=axes[2][0],orient='v')\naxes[2][0].set_title('pregnancies')\naxes[2][0].set_xlabel('pregnancy')\naxes[2][1].set_ylabel('five point summary')\nplt.tight_layout()\n\nplot21 = sns.boxplot(x='Outcome',y=\"Pregnancies\", data=df, ax=axes[2][1])\naxes[2][1].set_title('diab Vs.Non Diab')\naxes[2][1].set_xlabel('pregnancy')\naxes[2][1].set_ylabel('five point summary')\nplt.tight_layout()\nplt.show()\n","e7c708a1":"df.Glucose.describe()","d52a01ab":"figure, axes = plt.subplots(nrows=2,ncols=2, dpi=120,figsize=(10,8))\n\nplot00 = sns.distplot(df[\"Glucose\"], ax=axes[0][0], color='green')\naxes[0][0].yaxis.set_major_formatter(FormatStrFormatter('%.3f'))\naxes[0][0].set_title('distribution of glucose')\naxes[0][0].set_xlabel('Glucose')\naxes[0][0].set_ylabel('count')\nplt.tight_layout()\n\nplot01 = sns.distplot(df[df[\"Outcome\"]==True][\"Glucose\"],ax=axes[0][1],label = 'Diabitics')\nsns.distplot(df[df[\"Outcome\"]==False][\"Glucose\"],ax=axes[0][1],label = 'Non Diabitics')\naxes[0][1].set_title('distribution of glucose')\naxes[0][1].set_xlabel('Glucose')\naxes[0][1].set_ylabel('count')\nplot01.axes.legend(loc=1)\nplt.tight_layout()\n\n\nplot10 = sns.boxplot(df[\"Glucose\"],ax=axes[1][0],orient='v')\naxes[1][0].set_title('boxplot of glucose')\naxes[1][0].set_xlabel('Glucose')\naxes[1][0].set_ylabel('five point summary')\n\nplot11 = sns.boxplot(x='Outcome' , y='Glucose', data=df,ax=axes[1][1])\naxes[1][1].set_title(r'Numerical Summary (Outcome)',fontdict={'fontsize':8})\naxes[1][1].set_ylabel(r'Five Point Summary(Glucose)',fontdict={'fontsize':7})\nplt.xticks(ticks=[0,1],labels=['Non-Diab.','Diab.'],fontsize=7)\naxes[1][1].set_xlabel('Category',fontdict={'fontsize':7})\nplt.tight_layout()\n","9e5300ce":"# Glucose","805bd147":"# Pregnancies","3dccfc43":"The distribution of pregnancies is unimodal, skwewd to right, centered at about 1 with most of the data between 0 and 15.\n\nNote: Box plots show that the people with higher months pregnancies have higher risk of diabetes.(there is no statistical evidence)","064f73b1":"BoxPlot of both categories shows that People with higher Glucose level have higher risk of Diabetes (There is not statistical evidence"}}