{"cell_type":{"5b0e177e":"code","af07819c":"code","bda8ea1f":"code","a7d83d19":"code","07647e75":"code","f5a5038f":"code","5a4b3bd1":"code","c42c7bbc":"code","12779937":"code","b42ea9f5":"code","0f4a06ee":"code","75367f10":"code","4d212a59":"code","ee273649":"code","b563a0c1":"code","5ef0cf53":"markdown"},"source":{"5b0e177e":"print(os.listdir(\"..\/input\/accepted_2007_to_2018q4.csv\/\"))","af07819c":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))","bda8ea1f":"subset_cols = [\n 'loan_amnt',\n 'term',\n 'int_rate',\n 'installment',\n 'grade',\n 'emp_title',\n 'emp_length',\n 'home_ownership',\n 'annual_inc',\n 'verification_status',\n 'issue_d',\n 'loan_status',\n 'pymnt_plan',\n 'desc',\n 'purpose',\n 'title',\n 'zip_code',\n 'addr_state',\n 'dti',\n 'delinq_2yrs',\n 'earliest_cr_line',\n 'fico_range_low',\n 'fico_range_high',\n 'inq_last_6mths',\n    \n 'open_acc',\n 'pub_rec',\n 'revol_bal',\n 'revol_util',\n 'total_acc',\n 'initial_list_status',\n 'out_prncp',\n 'total_pymnt',\n 'total_pymnt_inv',\n 'last_fico_range_high',\n 'last_fico_range_low',\n 'mths_since_last_major_derog',\n 'policy_code',\n 'application_type',\n 'annual_inc_joint',\n 'dti_joint',\n 'verification_status_joint',\n 'tot_cur_bal',\n 'open_acc_6m',\n 'max_bal_bc',\n 'all_util',\n 'total_rev_hi_lim',\n 'inq_last_12m',\n 'acc_open_past_24mths',\n 'avg_cur_bal',\n 'mort_acc',\n 'percent_bc_gt_75',\n 'pub_rec_bankruptcies',\n 'tax_liens',\n 'tot_hi_cred_lim',\n 'total_bal_ex_mort',\n 'total_bc_limit',\n 'revol_bal_joint',\n  \"disbursement_method\"]","a7d83d19":"loans = pd.read_csv('..\/input\/accepted_2007_to_2018q4.csv\/accepted_2007_to_2018Q4.csv', usecols=subset_cols)#,nrows=123456\n\nloans = loans.loc[loans['loan_status'].isin(['Fully Paid', 'Charged Off'])].drop_duplicates() #,\"Default\"\n\nloans.issue_d = pd.to_datetime(loans.issue_d,infer_datetime_format=True)\nloans.zip_code = loans.zip_code.str.replace(\"xx\",\"\")\n\nprint(loans.shape)\nprint(loans.columns)\nloans.tail()","07647e75":"# loans.dropna(how=\"any\",thresh=)","f5a5038f":"100*loans.isna().mean()","5a4b3bd1":"print(loans.shape[0])\nprint(loans.loc[(loans.desc!=\"\")|(loans.title!=\"\")].shape[0])\nprint(loans.loc[(~loans.desc.isna())|(~loans.title.isna())].shape[0])","c42c7bbc":"## drop columns with many missing values\nmissing_fractions = loans.isnull().mean().sort_values(ascending=False)\n## https:\/\/www.kaggle.com\/pileatedperch\/predicting-charge-off-from-initial-listing-data\n# drop rows with more than 50% missing\ndrop_list = sorted(list(missing_fractions[missing_fractions > 0.4].index))\nprint(len(drop_list))\nprint(drop_list)","12779937":"loans.drop(drop_list,axis=1,inplace=True)","b42ea9f5":"list(set(['addr_state', 'annual_inc', 'application_type', 'dti',\n             'earliest_cr_line', 'emp_length', 'emp_title', 'fico_range_high', \n             'fico_range_low', 'grade', 'home_ownership', 'initial_list_status',\n             'installment', 'int_rate', 'issue_d', 'loan_amnt', 'loan_status', 'mort_acc', \n             'open_acc', 'pub_rec', 'pub_rec_bankruptcies', 'purpose', 'revol_bal', 'revol_util', \n             'term', 'title', 'total_acc', 'verification_status', 'zip_code',\n 'inq_last_6mths',\n 'open_acc',\n 'pub_rec',\n 'revol_bal',\n 'revol_util',\n 'total_acc',\n               'pymnt_plan',\n 'open_acc',\n 'pub_rec',\n 'revol_bal',\n 'revol_util',\n 'total_acc',\n 'initial_list_status',\n 'delinq_2yrs', 'inq_last_6mths',\n 'earliest_cr_line',]))","0f4a06ee":"### ALT keep list:\n### https:\/\/www.kaggle.com\/pileatedperch\/predicting-charge-off-from-initial-listing-data\nkeep_list = ['application_type',\n 'delinq_2yrs',\n 'issue_d',\n 'open_acc',\n 'revol_util',\n 'zip_code',\n 'loan_amnt',\n 'mort_acc',\n 'initial_list_status',\n 'loan_status',\n 'pub_rec_bankruptcies',\n 'term',\n 'revol_bal',\n 'emp_title',\n 'installment',\n 'pymnt_plan',\n 'dti',\n 'purpose',\n 'addr_state',\n 'grade',\n 'inq_last_6mths',\n 'annual_inc',\n 'verification_status',\n 'fico_range_low',\n 'home_ownership',\n 'earliest_cr_line',\n 'emp_length',\n 'pub_rec',\n 'total_acc',\n 'fico_range_high',\n 'title',\n 'int_rate']\n#'sub_grade', ","75367f10":"## https:\/\/www.kaggle.com\/pileatedperch\/predicting-charge-off-from-initial-listing-data\n### The list of features to drop is any feature not in keep_list:\n\ndrop_list = [col for col in loans.columns if col not in keep_list]\nprint(drop_list)\nprint(loans.shape)\nloans.drop(labels=drop_list, axis=1, inplace=True)\nprint(loans.shape)","4d212a59":"loans['earliest_cr_line'] = pd.to_datetime(loans['earliest_cr_line'],infer_datetime_format=True)","ee273649":"## Convert emp_length to integers:\n\nloans['emp_length'].replace(to_replace='10+ years', value='10 years', inplace=True)\nloans['emp_length'].replace('< 1 year', '0 years', inplace=True)\n\ndef emp_length_to_int(s):\n    if pd.isnull(s):\n        return s\n    else:\n        return np.int8(s.split()[0])\n    \nloans['emp_length'] = loans['emp_length'].apply(emp_length_to_int)","b563a0c1":"loans.to_csv(\"loanDefaults_2018.csv.gz\",index=False,compression=\"gzip\")","5ef0cf53":"* Yet another notebook for removing leaky columns from the lending club data, sampling and predicting loan default"}}