{"cell_type":{"1e5f58a3":"code","25f32015":"code","6024d5ec":"code","e6f5099c":"code","c92f9bc4":"code","ed28501a":"code","a20478a7":"code","5c17b5f3":"code","cc8b71b5":"code","c8ba9383":"code","af6b8b5e":"code","192733d6":"code","eccc57ea":"code","97ed2303":"code","25360bd7":"code","779d2f98":"code","d6395e46":"markdown","b9b12e5c":"markdown","a3af8d32":"markdown","7e88350c":"markdown","b581afba":"markdown","a68009ad":"markdown"},"source":{"1e5f58a3":"# Soluci\u00f3n\ndef fibonacci(limite):\n    fibo_lista = [];\n    limite -= 2;\n    contador = 1;\n    a = 0;\n    b = 1;\n    fibo_lista.append(a);\n    fibo_lista.append(b);\n    while contador <= limite: \n        c = a + b;\n        fibo_lista.append(c);\n        a = b;\n        b = c;\n        contador += 1;\n    return fibo_lista;\n\n#cantidad = int(input(\"Cuantos n\u00fameros de Fibonacci requiere? \"));\nprint(fibonacci(11));","25f32015":"# Soluci\u00f3n\n\ndef crearDiccionario(myString):\n    miLista = myString.split(\", \");\n    miDiccionario = {};\n    for elemento in miLista:\n        miDiccionario[elemento] = miLista.count(elemento);\n    return(miDiccionario);\n\ndef crearTupla(miDiccionario):\n    control = 0;\n    listaTemp = ['Control:' , 0];\n    for clave in miDiccionario:\n        if miDiccionario[clave] > control:\n            listaTemp[0] = clave;\n            listaTemp[1] = miDiccionario[clave];\n            control = miDiccionario[clave];\n    tuplaFinal = (listaTemp[0], listaTemp[1]);\n    return tuplaFinal;\n    \nmiString = \"Pablo, Elisa, Elisa, David, Pablo, David, Diego, Daniel, Carlos, Andres, Andres, Roy, Rafael Maria, Carlos, Esteban, Grettel, Grettel, Betzaida, Stefanie, Stefanie, David, Maria, Karla, Huberth, Memo, Haidy\";\nmiDiccio = crearDiccionario(miString);\nmiTupla= crearTupla(miDiccio);\n\nprint(\"Esta es la lista original: \" + miString + \"\\n\");\nprint(\"Este es el diccionario creado: \" + str(miDiccio) + \"\\n\");\nprint(\"Esta es la tupla final con el nombre m\u00e1s recurrente: \" + str(miTupla) + \"\\n\");\n\n# Si descomenta la linea a continuaci\u00f3n notar\u00e1 que la tupla no puede ser modificada:\n# miTupla = (Pedro, 4);\n","6024d5ec":"import pandas as pd;\n\n# Generando el dataframe\ntitanic = pd.read_csv(\"..\/input\/titanicamla2\/titanic.csv\", index_col=\"PassengerId\");","e6f5099c":"# Conociendo sus dimensiones\ntitanic.ndim","c92f9bc4":"# Cantidad de datos que contiene\ntitanic.size","ed28501a":"# Conociendo cuantos indices y cuantas columnas\ntitanic.shape","a20478a7":"# Conociendo los indices\ntitanic.index","5c17b5f3":"# conociendo las columnas\ntitanic.columns","cc8b71b5":"# Conociendo los tipos de datos de las columnas\ntitanic.info()","c8ba9383":"# Conociendo las 10 primeras filas\ntitanic.head(10)","af6b8b5e":"# Conociendo las 10 \u00faltimas filas\ntitanic.tail(10)","192733d6":"#indexar por etiqueta para conocer al pasajero 148\n\nprint(titanic.loc[148]);","eccc57ea":"# Vamos a filtrar el dataframe seg\u00fan una condici\u00f3n, en este caso la clase en la que viajaba\n# Pero solo vamos a leer el nombre del pasajero\n\ntitanic.loc[titanic.Pclass <= 1, 'Name']","97ed2303":"#creaci\u00f3n de nueva columna en el dataframe y asignaci\u00f3n de valores booleanos a esta columna\n#Por medio una funci\u00f3n\n\ndef menorFunct(edad):\n    if edad > 18.0:\n        return False;\n    else:\n        return True;\n\ntitanic['menorEdad?'] = titanic['Age'].apply(menorFunct);\n\ntitanic.head(30)","25360bd7":"# Sacar los valores mas altos y mas bajos de una columna\n\nprint( \"El tiquete mas caro tuvo el siguiente costo: \" + str(titanic['Fare'].max(axis=0)) + \" D\u00f3lares\");\nprint( \"El m\u00e1s barato cost\u00f3: \" + str(titanic['Fare'].min(axis=0)) + \" D\u00f3lares\");","779d2f98":"# Convertir un dataframe a JSON\njson = titanic.to_json(\"titanicOBJ.json\")","d6395e46":"## B) Pandas","b9b12e5c":"2. Escribir un programa que reciba una cadena de caracteres y devuelva un diccionario con cada palabra que contiene y su frecuencia. Escribir otra funci\u00f3n que reciba el diccionario generado con la funci\u00f3n anterior y devuelva una tupla con la palabra m\u00e1s repetida y su frecuencia.","a3af8d32":"# Tarea Semana 1","7e88350c":"1. Implemente una funci\u00f3n que imprima los primeros n terminos de fibonacci\n\n```python\nfibonacci(5) # debe retornar 0,1,1,2,3\n\nfibonacci(11) # debe retornar 0,1,1,2,3,5,8,13,21,34,55\n\n# y as\u00ed sucesivamente\n```\n\n\n\n","b581afba":"Si yo tuviera que crear un modelo para predecir quien tiene mayor probabilidad de salvarse las columnas a las cuales les pondr\u00eda m\u00e1s atenci\u00f3n son: 'Pclass', 'Name', 'Sex', 'Age'.\n\nEsto porque tomar\u00eda en consideraci\u00f3n si eran de clase alta, si era personas importantes en el momento en que ocurri\u00f3 la tragedia, el genero y la edad tambi\u00e9n ser\u00eda importante porque existe la regla de salvar primero a mujeres y ni\u00f1os.","a68009ad":"Utilizando el archivo `titanic.csv`\n\n1. Generar un DataFrame con los datos del fichero.\n2. Mostrar por pantalla las dimensiones del DataFrame, el n\u00famero de datos que contiene, los nombres de sus columnas y filas, los tipos de datos de las columnas, las 10 primeras filas y las 10 \u00faltimas filas\n3. Mostrar por pantalla los datos del pasajero con identificador 148.\n4. Mostrar por pantalla los nombres de las personas que iban en primera clase.\n5. A\u00f1adir una nueva columna booleana para ver si el pasajero era menor de edad (18) o no.\n6. Cu\u00e1l fu\u00e9 el precio del tiquete mas caro y del mas barato.\n7. Guarde el dataframe como un archivo xml.\n8. Si usted tuviera que adivinar quien sobrevivi\u00f3, \u00bfa que columnas le prestar\u00eda atenci\u00f3n?"}}