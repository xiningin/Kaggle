{"cell_type":{"8c91418d":"code","a3494dbf":"code","cb6c99ea":"code","c823fa15":"code","aee7e179":"code","8d666a5f":"code","89ff7f92":"code","656c0404":"code","0aa9fabf":"code","870bdb61":"code","79d18be1":"code","689a6f35":"code","497d1123":"markdown"},"source":{"8c91418d":"import os\nimport pandas as pd\nimport numpy as np\nfrom keras.models import Sequential, Model\nfrom keras.layers import Dense, Conv2D, Flatten, Activation, Dropout\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras import applications, optimizers","a3494dbf":"img_size = 224\nbatch_size = 32","cb6c99ea":"%%time\ntrain_datagen=ImageDataGenerator(\n        rotation_range=40,\n        width_shift_range=0.2,\n        height_shift_range=0.2,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True,\n        vertical_flip = True\n        )\n\ntrain_generator = train_datagen.flow_from_directory(\n        '..\/input\/plates\/plates\/train',\n        target_size=(img_size, img_size),\n        batch_size=batch_size,\n        class_mode='binary')\n\ntest_datagen = ImageDataGenerator()\ntest_generator = test_datagen.flow_from_directory(  \n        '..\/input\/plates\/plates',\n        classes=['test'],\n        target_size = (img_size, img_size),\n        batch_size = 1,\n        shuffle = False,        \n        class_mode = None)    ","c823fa15":"base_model = applications.InceptionResNetV2(weights='imagenet', \n                          include_top=False, \n                          input_shape=(img_size, img_size, 3))","aee7e179":"base_model.trainable = False","8d666a5f":"x = base_model.output\nx = Flatten()(x)\nx = Dense(1024, activation=\"relu\")(x)\nx = Dropout(0.5)(x)\npredictions = Dense(1, activation=\"sigmoid\")(x)\nmodel = Model(input = base_model.input, output = predictions)\n\nmodel.compile(loss='binary_crossentropy', optimizer = optimizers.rmsprop(lr=0.0001, decay=1e-6), metrics=['accuracy'])","89ff7f92":"%%time\nmodel.fit_generator(\n        train_generator,\n        steps_per_epoch=500,\n        epochs=25,\n        verbose=0)","656c0404":"%%time\ntest_generator.reset()\npredict = model.predict_generator(test_generator, steps = len(test_generator.filenames))\nlen(predict)","0aa9fabf":"sub_df = pd.read_csv('..\/input\/sample_submission.csv')\nsub_df.head()","870bdb61":"sub_df['label'] = predict\nsub_df['label'] = sub_df['label'].apply(lambda x: 'dirty' if x > 0.5 else 'cleaned')\nsub_df.head()","79d18be1":"sub_df['label'].value_counts()","689a6f35":"sub_df.to_csv('sub.csv', index=False)","497d1123":"\u041a\u0443\u0440\u0441 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439! \u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f\u043c! \u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u0440\u0435\u0448\u0438\u0442\u044c \u044d\u0442\u0443 \u0437\u0430\u0434\u0430\u0447\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f Keras."}}