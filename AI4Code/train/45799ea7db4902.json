{"cell_type":{"65b30f28":"code","8f2085c9":"code","50b733a3":"code","cb531734":"code","d1dfa1e2":"code","fbc49c8b":"code","c58588b2":"code","ec17efcb":"code","9f154095":"code","b6362f17":"code","1a6c2747":"code","0461a0b2":"code","ce1509b4":"code","d88a12a7":"code","d6ac7fde":"code","26227ad1":"code","e04db6ff":"code","6130a882":"code","04ddf77d":"code","af0be6b9":"markdown","7832d33f":"markdown","52f1125b":"markdown","bb80ae2c":"markdown","da5fe0ba":"markdown","3a697e87":"markdown","b075251c":"markdown","f6c4f483":"markdown","9b951ed1":"markdown","d3979e48":"markdown","ac82a961":"markdown","b512dece":"markdown","fb5d25c4":"markdown"},"source":{"65b30f28":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f2085c9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","50b733a3":"df=pd.read_csv(\"\/kaggle\/input\/okcupid-profiles\/okcupid_profiles.csv\")\ndf=df.iloc[:,0:21]\ndf.head","cb531734":"df.describe()","d1dfa1e2":"total_nrows = df.shape[0] \ntotal_ncols = df.shape[1]\nprint('Total rows: ', total_nrows, ' Total columns: ', total_ncols)\nprint(df.info())","fbc49c8b":"plt.figure(figsize=(12, 5))\ndf.isna().sum().plot(kind=\"bar\") \nplt.xticks(rotation=50)","c58588b2":"df1 = df.dropna(subset=['diet', 'drugs','education','age','status','sex','orientation','body_type','ethnicity','job','pets'])","ec17efcb":"def rmissingvaluecol(df1,threshold):\n    l = []\n    l = list(df1.drop(df1.loc[:,list((100*(df1.isnull().sum()\/len(df1.index))>=threshold))].columns, 1).columns.values)\n    print(\"# Columns having more than %s percent missing values:\"%threshold,(df1.shape[1] - len(l)))\n    print(\"Columns:\\n\",list(set(list((df1.columns.values))) - set(l)))\n    return l","9f154095":"l = rmissingvaluecol(df1,1)\ndf2 = df1[l]","b6362f17":"df2.head()","1a6c2747":"print('body_type:') \nprint(list(set(df1['body_type']))) \nprint('diet:') \nprint(list(set(df1['diet']))) \nprint('Religion:') \nprint(list(set(df1['religion'])))","0461a0b2":"print('body_type:') \nlist(set(df1['body_type']))","ce1509b4":"def show_percetage(plot, feature): \n    total = len(feature)\n    for p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x()+p.get_width()\/2-0.1\n        y = p.get_y()+p.get_height() \n        ax.annotate(percentage, (x, y), size=10)\n","d88a12a7":"import seaborn as sns\nprofile_age = df1[df1['age']<65]\nax = sns.violinplot(x='sex', y='age',data=profile_age,\npalette=\"mako\", split=True,\nscale=\"count\", inner=\"quartile\")","d6ac7fde":"plt.figure(figsize=(10, 5))\nax = sns.countplot(x='orientation', data=df1,\nhue='sex',\npalette='PRGn',\norder=df1['orientation'].value_counts().iloc[:10].index)\ntotal = float(len(df1))\nshow_percetage(ax, df1)\nplt.show()","26227ad1":"plt.figure(figsize=(12, 7))\nax = sns.countplot(x='body_type', data=df1,\nhue='sex',\npalette='rocket',\norder=df1['body_type'].value_counts().iloc[:10].index)\nax.set_title(\"Body type by gender\")\nax.set(xlabel='Count', ylabel='Body Type')\nshow_percetage(ax, df1)\nplt.show()","e04db6ff":"plt.figure(figsize=(12, 7))\nax = sns.countplot(x='diet', data=df1,\nhue='sex', palette='Paired',\norder = df1['diet'].value_counts().iloc[:10].index)\nplt.xticks(rotation = 30)\nax.set_title(\"Diet by gender\")\nshow_percetage(ax, df1)","6130a882":"plt.figure(figsize=(12, 7))\nsns.countplot(y='job', data=df1,\nhue='sex', palette='Reds',\norder = df1['job'].value_counts().iloc[:10].index)\nplt.show()","04ddf77d":"plt.figure(figsize=(12, 7))\nsns.countplot(y = 'pets', data=df1,\nhue='sex', palette='PuRd',\norder=df1['pets'].value_counts().iloc[:].index)\nplt.show()","af0be6b9":"# Q10. Compare jobs of males and females. Represent using suitable graphs","7832d33f":"# Q3. Find the rows with missing data . Report them","52f1125b":"# https:\/\/www.kaggle.com\/eliteguru12\/gurkiratcncscat-3","bb80ae2c":"# Q1. READ PROFILE","da5fe0ba":"# Q2 Describe Basic Info about Dataset","3a697e87":"# Data Sciences CAT-3\n\n\n# Group member names:\n# Gurkirat singh 18SCSE1140003\n# Gurushabad singh saluja 18SCSE1140008\n# Hemant kr. pathak 18SCSE1050039","b075251c":"# Q11. Compare pets of different gender. Represent using suitable graphs.","f6c4f483":"# Q6. Visualization to show the age distributio of male ad females.","9b951ed1":"# Q9. Different diets by gender. Represent using suitable graph","d3979e48":"# Q4. Make a barplot which shows missing values in differet columns","ac82a961":"# Q8. Percentage of body types by gender. Represent using a suitable graph.","b512dece":"# Q7. Orientation (in percentage) of male and females. Represent using a suitable graph","fb5d25c4":"# Q5. Number of unique values in different columns. Display using suitablr plot"}}