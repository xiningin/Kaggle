{"cell_type":{"6f2045a8":"code","89d7ab14":"code","0ccc2a9d":"code","64e6bbd7":"code","8b31f872":"code","de71a7e0":"code","30a452be":"code","e06f207e":"code","0a91ad98":"code","61596ca0":"code","e21e4d20":"code","254341f2":"code","00484627":"code","9354fe75":"code","7c14c755":"code","42caa60c":"code","3d1394ec":"code","6cbd0bee":"code","950c3091":"code","86b84736":"code","a81e5a22":"code","6a8f1a84":"code","64e4d9df":"code","33d90323":"code","d2024a78":"code","18278448":"code","e9408c38":"code","34236342":"code","24f86285":"markdown","85eefd7b":"markdown","1b0b012d":"markdown","dcc48517":"markdown","de61605c":"markdown","213ef9bf":"markdown","4d1f48bd":"markdown","cdc671f3":"markdown"},"source":{"6f2045a8":"#import libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","89d7ab14":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","0ccc2a9d":"sns.factorplot(x=\"LotArea\", y =\"SalePrice\", data=train_df, kind=\"bar\", size=5)\nplt.show()","64e6bbd7":"train_df.shape","8b31f872":"corrMatrix = train_df.corr()\ncorrMatrix","de71a7e0":"sns.heatmap(train_df.isnull(), yticklabels=False, cbar=False)","30a452be":"train_df['MSZoning'].value_counts()","e06f207e":"train_df.drop(['Alley'], axis=1, inplace=True)\ntrain_df['BsmtCond'] = train_df['BsmtCond'].fillna(train_df['BsmtCond'].mode()[0])\ntrain_df['LotFrontage'] = train_df['LotFrontage'].fillna(train_df['LotFrontage'].mode()[0])\ntrain_df['BsmtQual'] = train_df['BsmtQual'].fillna(train_df['BsmtQual'].mode()[0])\ntrain_df['FireplaceQu'] = train_df['FireplaceQu'].fillna(train_df['FireplaceQu'].mode()[0])\ntrain_df['GarageType'] = train_df['GarageType'].fillna(train_df['GarageType'].mode()[0])\ntrain_df.drop(['GarageYrBlt'], axis=1, inplace=True)\ntrain_df['GarageFinish'] = train_df['GarageFinish'].fillna(train_df['GarageFinish'].mode()[0])\ntrain_df['GarageQual'] = train_df['GarageQual'].fillna(train_df['GarageQual'].mode()[0])\ntrain_df['GarageCond'] = train_df['GarageCond'].fillna(train_df['GarageCond'].mode()[0])\ntrain_df.drop(['PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)\ntrain_df.drop(['Id'], axis =1, inplace =True)\ntrain_df['BsmtExposure'] = train_df['BsmtExposure'].fillna(train_df['BsmtExposure'].mode()[0])\ntrain_df['BsmtFinType1'] = train_df['BsmtFinType1'].fillna(train_df['BsmtFinType1'].mode()[0])\ntrain_df['BsmtFinType2'] = train_df['BsmtFinType2'].fillna(train_df['BsmtFinType2'].mode()[0])\ntrain_df['MasVnrType'] = train_df['MasVnrType'].fillna(train_df['MasVnrType'].mode()[0])\ntrain_df['MasVnrArea'] = train_df['MasVnrArea'].fillna(train_df['MasVnrArea'].mode()[0])","0a91ad98":"train_df.shape","61596ca0":"train_df.isnull().sum()","e21e4d20":"train_df.shape","254341f2":"sns.heatmap(train_df.isnull(), yticklabels=False, cbar=False, cmap='coolwarm')","00484627":"#Missing Values have been handled","9354fe75":"train_df.head()","7c14c755":"test_df.isnull().sum()","42caa60c":"columns=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood',\n         'Condition2','BldgType','Condition1','HouseStyle','SaleType',\n        'SaleCondition','ExterCond',\n         'ExterQual','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2',\n        'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','Heating','HeatingQC',\n         'CentralAir',\n         'Electrical','KitchenQual','Functional',\n         'FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive']","3d1394ec":"train_df.head()","6cbd0bee":"train_df = pd.get_dummies(data=train_df, columns=columns)","950c3091":"test_df.isnull().sum()","86b84736":"test_df.drop(['Alley'], axis=1, inplace=True)\ntest_df['BsmtCond'] = test_df['BsmtCond'].fillna(test_df['BsmtCond'].mode()[0])\ntest_df['LotFrontage'] = test_df['LotFrontage'].fillna(test_df['LotFrontage'].mode()[0])\ntest_df['BsmtQual'] = test_df['BsmtQual'].fillna(test_df['BsmtQual'].mode()[0])\ntest_df['FireplaceQu'] = test_df['FireplaceQu'].fillna(test_df['FireplaceQu'].mode()[0])\ntest_df['GarageType'] = test_df['GarageType'].fillna(test_df['GarageType'].mode()[0])\ntest_df['Fence'] = test_df['Fence'].fillna(test_df['Fence'].mode()[0])\ntest_df.drop(['GarageYrBlt'], axis=1, inplace=True)\ntest_df['GarageFinish'] = test_df['GarageFinish'].fillna(test_df['GarageFinish'].mode()[0])\ntest_df['GarageQual'] = test_df['GarageQual'].fillna(test_df['GarageQual'].mode()[0])\ntest_df['GarageCond'] = test_df['GarageCond'].fillna(test_df['GarageCond'].mode()[0])\ntest_df.drop(['PoolQC', 'Fence', 'MiscFeature'], axis=1, inplace=True)\ntest_df.drop(['Id'], axis =1, inplace =True)\ntest_df['BsmtExposure'] = test_df['BsmtExposure'].fillna(test_df['BsmtExposure'].mode()[0])\ntest_df['BsmtFinType1'] = test_df['BsmtFinType1'].fillna(test_df['BsmtFinType1'].mode()[0])\ntest_df['BsmtFinType2'] = test_df['BsmtFinType2'].fillna(test_df['BsmtFinType2'].mode()[0])\ntest_df['MasVnrType'] = test_df['MasVnrType'].fillna(test_df['MasVnrType'].mode()[0])\ntest_df['MasVnrArea'] = test_df['MasVnrArea'].fillna(test_df['MasVnrArea'].mode()[0])","a81e5a22":"test_df = pd.get_dummies(data=test_df, columns=columns)","6a8f1a84":"test_df.shape","64e4d9df":"test_df.head()","33d90323":"x=train_df.drop(['SalePrice'], axis=1)\ny=train_df['SalePrice']\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split (x, y, test_size = 0.2, random_state = 0)","d2024a78":"import xgboost\nclassifier = xgboost.XGBRegressor()","18278448":"classifier.fit(X_train, Y_train)","e9408c38":"y_pred=classifier.predict(X_test)","34236342":"y_pred","24f86285":"One hot encoding train data using get dummies.","85eefd7b":"This plot shows that as lot area increase, so does the saleprice.","1b0b012d":"one hot encoding test data with get dummies.","dcc48517":"Handling missing values my replacing empty rows with the mode of the column.","de61605c":"The heatmap shows all the null values in the train dataset that we need to handle.","213ef9bf":"Now you can see that no missing values remain.","4d1f48bd":"Storing all catagorical features in one place to make one hot encoding easier. ","cdc671f3":"Handling missing values in test data set."}}