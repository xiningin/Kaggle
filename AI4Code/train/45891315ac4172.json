{"cell_type":{"07e24a68":"code","5a77a311":"code","bcaafe86":"code","bb6f8595":"code","fdb5272a":"code","44c76dd1":"code","50e0d549":"code","bee6fd0d":"code","387a9b94":"code","d52d588f":"code","48e0cec6":"code","754e05a4":"code","167c3f93":"code","8acab110":"code","6dab361b":"code","46e68de5":"code","a01542cc":"code","d7b5e2b6":"code","440e40f5":"code","67193986":"markdown","f734aed0":"markdown","e61fbf4a":"markdown","fcb41694":"markdown","13bb24f7":"markdown","00997fda":"markdown","be494e26":"markdown"},"source":{"07e24a68":"import warnings\nwarnings.filterwarnings('ignore')","5a77a311":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"crypto_bitcoin\" dataset\ndataset_ref = client.dataset(\"crypto_bitcoin\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"transactions\" table\ntable_ref = dataset_ref.table(\"transactions\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the table\nclient.list_rows(table, max_results=5).to_dataframe()","bcaafe86":"import bq_helper\nfrom bq_helper import BigQueryHelper","bb6f8595":"bq_assistant = BigQueryHelper(\"bigquery-public-data\", \"crypto_bitcoin\")","fdb5272a":"bq_assistant.table_schema(\"transactions\")","44c76dd1":"def show_amount_of_data_scanned(query):\n    # dry_run lets us see how much data the query uses without running it\n    dry_run_config = bigquery.QueryJobConfig(dry_run=True)\n    query_job = client.query(query, job_config=dry_run_config)\n    print('Data processed: {} GB'.format(round(query_job.total_bytes_processed \/ 10**9, 3)))","50e0d549":"query = \"\"\"\n            SELECT COUNT(`hash`) AS transactions,\n                EXTRACT(DAY FROM block_timestamp) AS day,\n                EXTRACT(MONTH FROM block_timestamp) AS month,\n                EXTRACT(YEAR FROM block_timestamp) AS year\n            FROM `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n            GROUP BY year, month, day \n            ORDER BY year, month, day\n        \"\"\"\n\nshow_amount_of_data_scanned(query)","bee6fd0d":"query = \"\"\"\n            SELECT COUNT(`hash`) AS transactions,\n                EXTRACT(DAY FROM block_timestamp) AS day,\n                EXTRACT(MONTH FROM block_timestamp) AS month,\n                EXTRACT(YEAR FROM block_timestamp) AS year\n            FROM `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n            GROUP BY year, month, day \n            ORDER BY year, month, day\n        \"\"\"\n\ntransactions6_2021 = client.query(query).result().to_dataframe()\ntransactions6_2021.head()","387a9b94":"avg_transactions = transactions6_2021.transactions.mean()\navg_transactions","d52d588f":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nplt.figure(figsize=(14,6))\nsns.lineplot(data=transactions6_2021.transactions)\nplt.title(\"Bitcoin Transactions in June 2021\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Transactions\")","48e0cec6":"query2 = \"\"\"\n            SELECT\n  FORMAT('%3.2f',MAX(input_value)) AS maximum_value,\n  FORMAT('%3.2f',MIN(input_value)) AS minimum_value,\n  FORMAT('%3.2f',AVG(input_value)) AS avg_value,\n  FORMAT('%3.2f',MAX(fee)) AS maximum_fee,\n  FORMAT('%3.2f',MIN(fee)) AS minimum_fee,\n  FORMAT('%3.2f',AVG(fee)) AS avg_fee\nFROM\n  `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n        \"\"\"\n\nshow_amount_of_data_scanned(query2)","754e05a4":"query2 = \"\"\"\n            SELECT\n  FORMAT('%3.2f',MAX(input_value)) AS maximum_value,\n  FORMAT('%3.2f',MIN(input_value)) AS minimum_value,\n  FORMAT('%3.2f',AVG(input_value)) AS avg_value,\n  FORMAT('%3.2f',MAX(fee)) AS maximum_fee,\n  FORMAT('%3.2f',MIN(fee)) AS minimum_fee,\n  FORMAT('%3.2f',AVG(fee)) AS avg_fee\nFROM\n  `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n        \"\"\"\n\nvalues6_2021 = client.query(query2).result().to_dataframe()\nvalues6_2021","167c3f93":"input_fee_query = \"\"\"\n            SELECT\nFORMAT('%3.2f',input_value) AS input_value,\nFORMAT('%3.2f',fee) AS fee\nFROM \n  `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n        \"\"\"\n\nshow_amount_of_data_scanned(input_fee_query)","8acab110":"input_fee_query = \"\"\"\n            SELECT\nFORMAT('%3.2f',input_value) AS input_value,\nFORMAT('%3.2f',fee) AS fee\nFROM \n  `bigquery-public-data.crypto_bitcoin.transactions`\n            WHERE EXTRACT(YEAR FROM block_timestamp) = 2021  AND EXTRACT(MONTH FROM block_timestamp) = 6\n        \"\"\"\n\ninput_fee_6_2021 = client.query(input_fee_query).result().to_dataframe()\ninput_fee_6_2021","6dab361b":"input_fee_6_2021.dtypes","46e68de5":"input_fee_6_2021 = input_fee_6_2021.apply(pd.to_numeric, errors='coerce')","a01542cc":"input_fee_6_2021.describe()","d7b5e2b6":"list = [35968.99, 34556.84, 34607.29, 32023.97, 31943.14, 34675.45, \n        33702.62, 32507.74, 31711.94, 35787.08, 35581.64, 35881.11, \n        38193.62, 38321.45, 40378.20, 40624.51, 39147.71, 35666.15,\n37289.43, 36903.30, 37553.64, 33557.15, 33451.38, 35834.47, 35546.99, 36938.72, 39151.32, 37685.72, 36680.07, 37340.68]\n\nser = pd.Series(list)\n\navg_price = round(ser.mean())\n\navg_price","440e40f5":"df = pd.DataFrame([(round((input_fee_6_2021['input_value'].max()\/100000000*(avg_price)), 2), round((input_fee_6_2021['fee'].max()\/100000000*(avg_price)), 2)),\n\n                   (round((input_fee_6_2021['input_value'].min()\/100000000*(avg_price)), 2), round((input_fee_6_2021['fee'].min()\/100000000*(avg_price)), 2)),\n\n                   (round((input_fee_6_2021['input_value'].mean()\/100000000*(avg_price)), 2), round((input_fee_6_2021['fee'].mean()\/100000000*(avg_price)), 2)),\n\n                   (round((input_fee_6_2021['input_value'].median()\/100000000*(avg_price)), 2), round((input_fee_6_2021['fee'].median()\/100000000*(avg_price)), 2))],\n\n                  index=['Max', 'Min', 'Avg', 'Median'],\n\n                  columns=('Input value of bitcoin transactions', 'Transaction fees'))\n\ndf = df.applymap(\"${0:.2f}\".format)\n\ndf.style.set_caption(\"Bitcoin transactions in June 2021\").set_table_styles([{\n    'selector': 'caption',\n    'props': [\n        ('color', 'black'),\n        ('font-size', '16px')\n    ]\n}])","67193986":"# Part 1 \/ Teil 1\n\n**How many bitcoin transactions were there each day in June 2021?**\n\n***Wie viele Bitcoin Transaktionen gab es im Juni 2021 durchschnittlich pro Tag?***","f734aed0":"All values are in satoshis, if we want to have them in dollars, we should devide by 100 000 000 and then multiply by the average bitcoin price in June 2021.\n\n*Alle Summen sind in Satoshis, um sie in Dollars zu haben, m\u00fcssen wir mit 100 000 000 dividieren und dann mit dem Bitcoin Durchschnittskurs im Juni zu multiplizieren. *","e61fbf4a":"To double-check the results of this query and to calculate the median (which is easier in pandas than in SQL) we can create another query with all transactions in June 2021.\n\n*Um diese Abfrage zu \u00fcberpr\u00fcfen und auch um einen Medianwert zu berechnen (in Pandas ist es einfacher als in SQL), erstellen wir eine neue SQL-Abfrage mit allen Transaktionen im Juni 2021.*","fcb41694":"In the first part of this notebook we'll see how many bitcoin transactions were made daily in June 2021. In the second part we'll calculate the maximum, minimum, average and median input values and fees of bitcoin transactions in dollars. But let's start by importing necessary tools from biquery and bq_helper and looking at the description of columns, I'll comment my work in both English and German.\n\n*Im ersten Teil werden wir sehen, wie viele Bitcoin Transaktionen es im Juni 2021 gab. Im zweiten Teil berechnen wir Max. - Min. - Durchschnitts - und Medianwerte von Input Values und Bitcoin Transaktionsgeb\u00fchren im Juni 2021. Aber wir starten mit dem Importieren von Werkzeuge aus bigquery und bq_helper. Unterwegs mache ich Kommentare auf Deutsch und Englisch.*","13bb24f7":"We can find how much a bitcoin costed in June on [ycharts](https:\/\/ycharts.com\/indicators\/bitcoin_price), put these prices into a list and calculate the average.\n\n*Wir k\u00f6nnen den Bitcoinkurs auf [ycharts](https:\/\/ycharts.com\/indicators\/bitcoin_price) finden und dann in Pandas den Durchshnittskurs im Juni 2021 berechnen.*","00997fda":"![](https:\/\/images.unsplash.com\/photo-1591994843349-f415893b3a6b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1050&q=80)","be494e26":"# Part 2 \/ Teil 2\n\n**What are the maximum, minimum, average and median input values and fees of bitcoin transactions in June 2021 calculated in dollars?**\n\n***Max. - Min. - Durchschnitts - und Medianwerte von Input Values und Bitcoin Transaktionsgeb\u00fchren im Juni 2021 berechnet in Dollars.***"}}