{"cell_type":{"9c0e3990":"code","83aa6533":"code","f4b3b186":"code","0538262a":"code","6ebff015":"code","ce850706":"code","5b76936e":"code","48795f6d":"code","77472d82":"code","71105ec1":"code","c9f26fbc":"code","41b0003a":"code","ae45695f":"code","b58ecd70":"code","4fb83b5d":"code","1342c677":"code","2c5a056f":"code","03af1afe":"code","a8a9d548":"code","97f1348e":"code","b8650907":"code","3fc3fc85":"code","44528bbc":"markdown"},"source":{"9c0e3990":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport sklearn.cluster\nfrom sklearn.cluster import KMeans\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler","83aa6533":"d=pd.read_csv('..\/input\/carbon-emission-india\/CarbonEmissionIndia.csv')\nd.head()","f4b3b186":"d.describe()","0538262a":"d.shape","6ebff015":"d.columns","ce850706":"corr = d.corr()\ncorr","5b76936e":"fig, ax=plt.subplots(figsize=(10,10))\nsns.heatmap(d.corr(),annot=True, ax=ax)","48795f6d":"from pandas.plotting import scatter_matrix\nscatter_matrix(d,figsize=(20, 20))","77472d82":"X = d[[\"States\",\"per capita CO2 (kg per person)\"]]\n#Visualise data points\nplt.scatter(X[\"per capita CO2 (kg per person)\"],X[\"States\"],c='black')\nplt.xlabel('co2')\nplt.ylabel('states')\nplt.show()","71105ec1":"d.info()","c9f26fbc":"from mpl_toolkits.mplot3d import Axes3D\nd.columns=[\"States\",\"CO2\",\"CO\",\"CH4\"]\nfig = plt.figure(figsize=(26,6))\nax = fig.add_subplot(131, projection='3d')\nax.scatter(d.CO2,d.CO,d.CH4,cmap='rainbow' ,s=10)\nax.set_title(\"Carbon Emission in India\")\nax.set_xlabel('CO2')\nax.set_ylabel('CO')\nax.set_zlabel('CH4')\nplt.show()","41b0003a":"x = d.drop([\"States\",\"CH4\"],axis=1)","ae45695f":"kmeans1 =KMeans(n_clusters=4, random_state=0)\ny_kmeans=kmeans1.fit_predict(x)\nprint(y_kmeans)","b58ecd70":"kmeans1.cluster_centers_","4fb83b5d":"x['cluster'] = kmeans1.fit_predict(x)\nfig = plt.figure(figsize=(26,6))\nax = fig.add_subplot(131, projection='3d')\nax.scatter(x.CO2, x.CO, c=x.cluster, s=15)\nax.set_xlabel('CO2')\nax.set_ylabel('CO')\nplt.show()","1342c677":"all_attributes = d.drop([\"States\"],axis=1)","2c5a056f":"kmeans4 =KMeans(n_clusters=4, random_state=0)\ny_kmeans_1=kmeans4.fit_predict(all_attributes)\nprint(y_kmeans_1)\nkmeans4.cluster_centers_","03af1afe":"X=d.drop([\"States\"],axis=1)","a8a9d548":"all_attributes['cluster'] =y_kmeans_1\nfig = plt.figure(figsize=(26,6))\nax = fig.add_subplot(131, projection='3d')\nax.scatter(all_attributes.CO2,all_attributes.CO,all_attributes.CH4, c=all_attributes.cluster, s=15)\n\nax.set_xlabel('CO2')\nax.set_ylabel('CO')\nax.set_zlabel('CH4')\nplt.show()","97f1348e":"score =[]\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i).fit(X)\n    kmeans.fit(X)\n    score.append(kmeans.inertia_)\nplt.plot(range(1, 11), score,marker=\"o\")\nplt.title('Elbow method')\nplt.xlabel('No of clusters')\nplt.ylabel('score')\nplt.show()","b8650907":"pip install kneed","3fc3fc85":"from kneed import KneeLocator\n\nkl = KneeLocator(range(1,11),score,curve=\"convex\",direction=\"decreasing\")\n\nkl.elbow","44528bbc":"You can pip install the kneed library in your python platform to calculate and see the elbow point\n"}}