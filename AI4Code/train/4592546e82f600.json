{"cell_type":{"d8be1f15":"code","d65a34a6":"code","2210f51c":"code","8018629f":"code","9bba1419":"markdown","e7d28c10":"markdown"},"source":{"d8be1f15":"import warnings;warnings.filterwarnings(\"ignore\")\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","d65a34a6":"data = pd.read_csv('\/kaggle\/input\/daily-covid19-hospitalisation-data\/covid-hospitalizations.csv')\nprint('Entity:',data['entity'].unique())\nprint('Indicator:',data['indicator'].unique())\nprint('From ',data['date'].min(),' to ',data['date'].max())","2210f51c":"tmp = data[data['indicator']=='Daily ICU occupancy'][['entity','value']].groupby('entity').sum().reset_index()\ntmp.columns = ['entity_','value_']\ndata = data.merge(tmp,left_on='entity',right_on='entity_')\ndata['entity_alias'] = data[['entity','value_']].apply(lambda row:row['entity'] if row['value_']>=100000 else 'others',axis=1)\ndata","8018629f":"for key in data['indicator'].unique():\n    tmp = data[data['indicator']==key]\n    date_list = [d for d in sorted(list(tmp['date'].unique()))]\n    entitys = list(tmp['entity_alias'].unique())\n    entity_list = [[tmp[tmp['entity_alias']==entity][tmp['date']==d] for d in date_list] for entity in entitys]\n    entity_list = [[0 if len(entity_list[i][j])<=0 else sum(entity_list[i][j]['value']) for j in range(len(date_list))] for i in range(len(entitys))]\n\n    plt.figure(figsize=(25,10))\n    plt.stackplot(pd.to_datetime(date_list),np.vstack(entity_list),labels=entitys)\n    plt.xticks(rotation=90)\n    plt.legend()\n    plt.title('Stack plot for '+key)\n    plt.show()","9bba1419":"The end.","e7d28c10":"<h2 style = 'font-size:50px; font-family:Garamond;font-weight: normal; background-color:#191970; color:#F0FFF3;text-align: center;border-radius:5px; padding: 5px'>\ud83e\udd16\ud83e\udd16PLEASE UPVOTE!!!\ud83e\udd16\ud83e\udd16<\/h2>"}}