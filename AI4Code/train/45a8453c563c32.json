{"cell_type":{"ec0aa033":"code","56534bbb":"code","e9cbb1ed":"code","9b912b4c":"code","06d59db9":"code","ff879a48":"code","f04150ee":"code","d513899d":"markdown"},"source":{"ec0aa033":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport warnings\nwarnings.filterwarnings(\"ignore\")","56534bbb":"%%time\ntrain_data = pd.read_feather('..\/input\/ubiquant-trainfeather-32-bit\/train32.feather')","e9cbb1ed":"investment_id_ref = 2140","9b912b4c":"train_data_time = train_data[train_data.investment_id == investment_id_ref]","06d59db9":"Target = train_data_time.target","ff879a48":"for i in range(300):\n    feature_name = 'f_'+str(i)\n    \n    if train_data_time[feature_name].nunique() == 1:\n        print('f_'+str(i)+'is constant for a given investment id')","f04150ee":"for i in range(300):\n    feature_name = 'f_'+str(i)\n    \n    if train_data_time[feature_name].nunique() == 1:\n        print('f_'+str(i)+'is constant for a given investment id')\n    else:\n        Feature = train_data_time[feature_name]\n        color = (random.random(), random.random(), random.random())\n        fig, axs = plt.subplots(ncols=2, figsize=(24,8))\n        sns.lineplot(train_data_time.time_id,Feature, color=color, ax=axs[0]).set(title = feature_name+' v.s. strat id '+str(investment_id_ref))\n        sns.regplot(x=Feature,y=Target,color=color, order = 2, line_kws={\"color\": 'black'}, ax=axs[1]).set(title = feature_name+' v.s. strat id '+str(investment_id_ref))\n        plt.show()","d513899d":"Using @slawekbiel Feather dataset: https:\/\/www.kaggle.com\/slawekbiel\/ubiquant-trainfeather-32-bit"}}