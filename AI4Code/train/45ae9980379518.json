{"cell_type":{"9362d695":"code","e8c56ccc":"code","e5b5b5e4":"code","f66b94ef":"code","052e8630":"code","f6b78fa7":"code","53c40a28":"code","7d5f9aa4":"code","6c5bcbd9":"code","8963ffa7":"code","e11e3546":"code","e89e8530":"code","2adcbbab":"code","c51a6f51":"code","eafd26db":"code","7ba280db":"code","6a9801d1":"code","c883b61e":"code","3b600966":"code","757b37a9":"code","f92b2053":"code","3cc881f9":"code","841e006b":"code","fe3e453f":"code","16df4faf":"code","57144f2e":"code","ba8f43cf":"code","f43c2f49":"code","fac529e5":"code","865334a7":"code","3ef89654":"code","91c4f6ec":"code","a92a31b5":"code","9d87da26":"code","6e1d15f1":"code","b9716cc4":"code","33633e6f":"code","6fe3c5b5":"code","2dd4976a":"code","2b77b13b":"code","1f8609b2":"code","d6a3623f":"code","22fcea82":"code","04d5901a":"code","e99afa26":"code","1969b55f":"code","0623cfeb":"code","ec02b7d9":"code","89d8c476":"code","1922cbc3":"code","512b79d9":"code","1488e7fe":"markdown"},"source":{"9362d695":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt \n\nimport nltk \nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.corpus import stopwords\nimport re\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn import metrics\nfrom sklearn.linear_model import PassiveAggressiveClassifier","e8c56ccc":"df = pd.read_csv('..\/input\/fake-news\/train.csv')","e5b5b5e4":"df.head()","f66b94ef":"df.shape","052e8630":"df.isnull().sum()","f6b78fa7":"df.dropna(inplace = True)","53c40a28":"df.shape","7d5f9aa4":"df.dtypes","6c5bcbd9":"df['label'] = df['label'].astype(str)","8963ffa7":"df.dtypes","e11e3546":"def create_distribution(feature):\n    return sns.countplot(df[feature])","e89e8530":"create_distribution('label')","2adcbbab":"df.head(20)","c51a6f51":"message = df.copy()","eafd26db":"message.reset_index(inplace = True)","7ba280db":"message.head(20)","6a9801d1":"message.drop(['index' , 'id'] , axis = 1 ,inplace = True)","c883b61e":"message.head()","3b600966":"data = message['title'][0]\ndata","757b37a9":"re.sub('[^a-zA-Z]' , ' ' , data)","f92b2053":"data = data.lower()\ndata","3cc881f9":"list = data.split()\nlist","841e006b":"import nltk\nnltk.download('stopwords')","fe3e453f":"ps = PorterStemmer()","16df4faf":"review = [ps.stem(words) for words in list if words not in set(stopwords.words('english'))]\nreview","57144f2e":"' '.join(review)","ba8f43cf":"corpus = []\nsentencess = []\n\nfor i in range(0 , len(message)):\n  review = re.sub('[^a-zA-Z]',' ' , message['title'][i])\n  review = review.lower()\n  list   = review.split()\n  review = [ps.stem(words) for words in list if words not in set(stopwords.words('english'))]\n  sentencess = ' '.join(review)\n  corpus.append(sentencess)","f43c2f49":"corpus[0]","fac529e5":"len(corpus)","865334a7":"cv = CountVectorizer(max_features=5000 , ngram_range=(1,3))","3ef89654":"X = cv.fit_transform(corpus).toarray()\nX","91c4f6ec":"X.shape","a92a31b5":"cv.get_feature_names()[0:20]","9d87da26":"message.columns","6e1d15f1":"y = message['label']","b9716cc4":"X_train, X_test, y_train, y_test = train_test_split(X , y , test_size = 0.25 , random_state = 42)","33633e6f":"X_test.shape","6fe3c5b5":"classifier = MultinomialNB()","2dd4976a":"classifier.fit(X_train , y_train)","2b77b13b":"pred = classifier.predict(X_test)\npred","1f8609b2":"metrics.accuracy_score(y_test , pred)","d6a3623f":"cm = metrics.confusion_matrix(y_test , pred)\ncm","22fcea82":"plt.imshow(cm , interpolation = 'nearest' , cmap = plt.cm.Blues )\nplt.colorbar()\nplt.title('Comfusion matrix')\nlabels = ['Positive' , 'Negative']\ntick_marks = np.arange(len(labels))\nplt.xticks(tick_marks , labels)\nplt.yticks(tick_marks , labels)","04d5901a":"def plot_confusion_matrix(cm):\n  plt.imshow(cm , interpolation = 'nearest' , cmap = plt.cm.Blues )\n  plt.colorbar()\n  plt.title('Comfusion matrix')\n  labels = ['Positive' , 'Negative']\n  tick_marks = np.arange(len(labels))\n  plt.xticks(tick_marks , labels)\n  plt.yticks(tick_marks , labels)","e99afa26":"plot_confusion_matrix(cm)","1969b55f":"linear_clf = PassiveAggressiveClassifier()","0623cfeb":"linear_clf.fit(X_train , y_train)","ec02b7d9":"pred = linear_clf.predict(X_test)","89d8c476":"metrics.accuracy_score(y_test , pred)","1922cbc3":"cm2 = metrics.confusion_matrix(y_test ,  pred)\ncm2","512b79d9":"plot_confusion_matrix(cm2)","1488e7fe":"## Fake News Detections\n1. pre-processing\n  1. missing values\n  2. remove special character\n  3. convert data type\n  4. dealing with index\n  5. drop unwanted column\n2. convert text data to countvector using countvectorizer\n3. split our data\n4. create classification model\n5. check accuracy score"}}