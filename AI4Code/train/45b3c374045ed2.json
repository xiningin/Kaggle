{"cell_type":{"c94735ca":"code","82beaf3b":"code","b511c34f":"code","67e3a698":"code","0ce0b483":"code","dd612122":"code","db650cc8":"code","3e88210c":"code","2979092f":"code","7638f633":"code","18990060":"code","090bb288":"code","7def2e9e":"code","c49ea4a6":"code","3ce1388b":"code","b4d28028":"code","3dbaff8b":"code","1f764aae":"code","27544158":"code","9eaaf1d2":"code","98244ff1":"code","4c61bafb":"code","1b0a1514":"code","c4e097f5":"code","4c266b2f":"code","43c42416":"markdown","2f897b5f":"markdown","1a00a3e1":"markdown","0f01d193":"markdown","ba49bf5e":"markdown","97d8713c":"markdown","beb8642a":"markdown","17a3d1c3":"markdown","5745646c":"markdown","5f81d675":"markdown","75c49c9e":"markdown"},"source":{"c94735ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","82beaf3b":"df = pd.read_csv(\"\/kaggle\/input\/books-data-from-an-ecom-site\/books_from_ecom.csv\")\ndf.head()\n","b511c34f":"# If you want to See all the coumns just take the Transpose of the DataFrame\ndf.head(10).T","67e3a698":"# Let's Check the Shape of the DataFrame\ndf.shape","0ce0b483":"#Checks number of Unique enteries in the dataframe\ndf.nunique()","dd612122":"df.dtypes","db650cc8":"#Checking Is there any Null enteries present in the DataFrame\n\ndf.isna().sum()","3e88210c":"df.skew()","2979092f":"df.describe()","7638f633":"cat=[i for i in df.columns if df[i].nunique()<11]\ncont=[i for i in df.columns if df[i].nunique()>=11 and i!='sr_no']\n\nprint(cat, cont)","18990060":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\n\ndf.product_real_price.value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='product_real_price',data=df)\ndf['product_real_price'].value_counts()","090bb288":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\ndf['type'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='type',data=df)\ndf['type'].value_counts()","7def2e9e":"plt.figure(figsize=(25,8))\nplt.subplot(1,2,1)\ndf['language'].value_counts().plot.pie(autopct='%1.1f%%')\ncentre=plt.Circle((0,0),0.7,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre)\nplt.subplot(1,2,2)\nsns.countplot(x='language',data=df)\ndf['language'].value_counts()","c49ea4a6":"df['product_real_price'].describe()","3ce1388b":"plt.figure(figsize=(15,8))\nsns.countplot(x='language',data=df)\ndf['language'].value_counts()","b4d28028":"fig , ax = plt.subplots(figsize=(15,10))\nax = sns.heatmap(df.corr(),\n           annot=True,\n            linewidth=0.5,\n            fmt='.2f',\n            cmap=\"YlGnBu\",\n           )","3dbaff8b":"df.head().T","1f764aae":"df.language.value_counts()","27544158":"df.nunique()\n","9eaaf1d2":"#df_tst.product_real_price = df_tst[x.replace(\",\",\"\") for x in 'product_real_price']:\n\n        \n","98244ff1":"\ndf_tst = df.copy()\ndf_tst['product_real_price'] = df_tst['product_real_price'].str.replace(',', '').astype(int)\ndf_tst['product_disc_price'] = df_tst['product_disc_price'].str.replace(',', '').astype(int)\n\n\ndf_tst.drop('sr_no',inplace=True,axis=1)\ndf_tst.drop('product_name',inplace=True,axis=1)\ndf_tst['on_promotion']=df_tst['on_promotion'].replace(to_replace=['yes','No'],value=[1,0])\n\n#df_tst['product_disc_price']=df_tst['product_disc_price'].astype(int) \ndf_tst=pd.get_dummies(df_tst)\n        \n\n","4c61bafb":"from sklearn.model_selection import train_test_split\nX = df_tst.drop('product_real_price',axis=1)\ny = df_tst['product_real_price']\nX_train , X_test , y_train , y_test = train_test_split(X,y,test_size=0.1,random_state=1)","1b0a1514":"X_train.head()","c4e097f5":"from sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor(n_jobs=-1,random_state=42)\nmodel.fit(X_train,y_train)","4c266b2f":"model.score(X_test,y_test)","43c42416":"### Univariate Analysis","2f897b5f":"Here we can see a visible relation between the discount offer percent and the Product rating. Surely the people will give good rating if the discount is greater on a good product.","1a00a3e1":"Most of the types of the books sold was Paperback type","0f01d193":"Most of the Books sold were in English language and then Hindi.","ba49bf5e":"### MODEL SELETION FOR PRICE PREDICTION","97d8713c":"#### Feature Engineering","beb8642a":"Mostly datatypes of the columns in DataFrame are object","17a3d1c3":"There is one Identifier column sr_no that needs to be removed","5745646c":"Here we simply got the idea that the mostly books has 175 Price.","5f81d675":"Data Set has 934 Rows and 11 Columns","75c49c9e":"#### EDA"}}