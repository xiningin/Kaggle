{"cell_type":{"20d8e796":"code","f7790999":"code","c1622c2f":"code","5c09ebd3":"code","e82fee11":"code","088fe3db":"code","1eef20d7":"code","1620aeab":"code","7e3ae021":"markdown","0f20ccc9":"markdown","4006548b":"markdown","306f002d":"markdown","918aea36":"markdown","9c9ae0a8":"markdown","50ef3b2b":"markdown","a41551cf":"markdown","a78e305f":"markdown","96c85a1d":"markdown","fc126616":"markdown"},"source":{"20d8e796":"import pandas as pd\n\npd.set_option(\"display.max_rows\",600)\n\na=r'..\/input\/ipl-dataset-needables\/Output_modif.xlsx'\n\na=a.replace('\\\\','\/')\n\noutput=pd.read_excel(a)\n\noutput_1_players_for_ag=output.loc[(output['Match No']==13) & (output['Type']=='Batsman'),('Player','For','Against','For History','Against History')]\n\noutput_1_players=output.loc[(output['Match No']==13) & (output['Type']=='Batsman'),'Player']\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\n\na=a.replace('\\\\','\/')\n\niplseason=pd.read_excel(a,sheet_name='Bat')\n\niplseason2019_output_1_players=iplseason[(iplseason.Player.isin(output_1_players))&(iplseason['Season']==max(iplseason['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\n\na=a.replace('\\\\','\/')\n\niplcareer=pd.read_excel(a,sheet_name='Bat')\n\niplcareer_output_1_players=iplcareer[iplcareer.Player.isin(output_1_players)]\n\nplayernocareer=output_1_players[~output_1_players.isin(iplcareer_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/2020-Scorecard(till 36th game).xlsx'\n\na=a.replace('\\\\','\/')\n\nipl2020data=pd.read_excel(a,sheet_name='Bat')\n\nif output_1_players_for_ag.iloc[0,3]>=4:\n    \n    a=output_1_players_for_ag.iloc[0,1]\n    \n    a1=output_1_players_for_ag.iloc[0,3]\n    \nif output_1_players_for_ag.iloc[0,4]>=4:\n    \n    b=output_1_players_for_ag.iloc[0,2]\n    \n    b1=output_1_players_for_ag.iloc[0,4]\n    \nif a1==4:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif a1==5:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif a1==6:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif a1==7:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif a1==8:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif a1==9:\n    \n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-8))|(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-8))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nfirst=output_1_players_for_ag['For'].unique()[0]\n\nsecond=output_1_players_for_ag['For'].unique()[1]\n\nipl2020data_firstteam=ipl2020data_first[ipl2020data_first.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==first,'Player'])]\n\nipl2020data_firstteam['SR']=ipl2020data_firstteam['SR'].astype(int)\n\nipl2020data_firstteam['Inn']=1\n\nipl2020data_firstteamdata=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_firstteamdata['SRavg']=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_firstteamdata=ipl2020data_firstteamdata.drop(axis=1,columns='SR')\n\nif b1==4:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif b1==5:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif b1==6:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif b1==7:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif b1==8:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nelif b1==9:\n    \n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-8))|(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-8))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n    \nipl2020data_secondteam=ipl2020data_second[ipl2020data_second.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==second,'Player'])]                \n\nipl2020data_secondteam['SR']=ipl2020data_secondteam['SR'].astype(int)\n\nipl2020data_secondteam['Inn']=1\n\nipl2020data_secondteamdata=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_secondteamdata['SRavg']=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_secondteamdata=ipl2020data_secondteamdata.drop(axis=1,columns='SR')\n\nipl2020_recentdata=ipl2020data_firstteamdata.append(ipl2020data_secondteamdata)\n\nipl2020_recentdata=ipl2020_recentdata.sort_values(by='BATSMEN',ignore_index=True)\n\nipl2020_recentdata['BatAvg']=1\n\ni=0\n\nwhile i<5:\n    if (ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])!=0:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/(ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])\n    else:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/ipl2020_recentdata['Inn'][i]\n    i+=1\nipl2020_recentdata[\"Boundarypercen\"]=((ipl2020_recentdata['4s']*4+ipl2020_recentdata['6s']*6)\/ipl2020_recentdata['R'])*100\n#ipl2020_recentdata_agg1=ipl2020_recentdata.sort_values(by='SRavg',ascending=False,ignore_index=True).reset_index()\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg1.iloc[:,[0,1]]\n\nipl2020_recentdata_agg3=ipl2020_recentdata.sort_values(by='BatAvg',ascending=False,ignore_index=True).reset_index()\n\nipl2020_recentdata_agg=ipl2020_recentdata_agg3.iloc[:,[0,1]]\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg3.iloc[:,[0,1]])\n\nipl2020_recentdata_agg4=ipl2020_recentdata.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg4.iloc[:,[0,1]])\n\nipl2020recent_results=ipl2020_recentdata_agg.groupby(by='BATSMEN',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplseason2019_slice=iplseason2019_output_1_players.iloc[:,[0,1,2,4,6,8,10,12,13]]\n\niplseason2019_slice[\"InnsByMat\"]=iplseason2019_slice[\"Inns\"]\/iplseason2019_slice[\"Mat\"]*100\n\niplseason2019_slice=iplseason2019_slice[iplseason2019_slice['Player'].isin(ipl2020recent_results.iloc[3:,0])]\n\niplseason2019_slice[\"Boundarypercen\"]=((iplseason2019_slice['4s']*4+iplseason2019_slice['6s']*6)\/iplseason2019_slice['Runs'])*100\n\niplseason2019_agg1=iplseason2019_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\n\niplseason2019_agg2=iplseason2019_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\n\niplseason2019_results=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\npart1=ipl2020recent_results.iloc[0:3]\n\ntrail1=ipl2020recent_results.iloc[3:].sort_values(by='index',ignore_index=True).rename(columns={\"BATSMEN\": \"Player\"})\n\npart2_agg=trail1.reset_index().append(iplseason2019_results.reset_index())\n\npart2_agg=part2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\npart2=part2_agg.iloc[0:3]\n\npart2=part2.rename(columns={\"Player\": \"BATSMEN\"})\n\npart2=part2.drop(axis=1,labels=['level_0','index'])\n\npart1=part1.drop(axis=1,labels='index')\n\nipl202019=part1.append(part2)\n\nfinal1=ipl202019.iloc[0:3]\n\ntrail2=ipl202019.iloc[3:]\n\niplcareer_slice=iplcareer_output_1_players.iloc[:,[0,1,2,4,7,9,10,11,12]]\n\niplcareer_slice[\"InnsByMat\"]=iplcareer_slice[\"Inns\"]\/iplcareer_slice[\"Mat\"]*100\n\niplcareer_slice=iplcareer_slice[iplcareer_slice['Player'].isin(trail2['BATSMEN'])]\n\niplcareer_slice[\"Boundarypercen\"]=((iplcareer_slice['4s']*4+iplcareer_slice['6s']*6)\/iplcareer_slice['Runs'])*100\n\niplcareer_slice_agg1=iplcareer_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\n\niplcareer_slice_agg=iplcareer_slice_agg1.iloc[:,[0,1]]\n\niplcareer_slice_agg4=iplcareer_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg4.iloc[:,[0,1]])\n\niplcareer_results=iplcareer_slice_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\ntrail2=trail2.rename(columns={\"BATSMEN\":\"Player\"})\n\niplcareer_results=iplcareer_results.drop(axis=1,columns='index')\n\nfinal2_agg=trail2.reset_index().append(iplcareer_results.reset_index())\n\nfinal2_agg=final2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\nfinal2_agg=final2_agg.rename(columns={\"Player\":\"BATSMEN\"})\n\nfinal2_agg=final2_agg.drop(axis=1,columns='index')\n\nfinal2=final2_agg\n\nbatsmans_result=final1.append(final2)\n\n","f7790999":"import pandas as pd\n\na=r'..\/input\/ipl-dataset-needables\/Output_modif.xlsx'\n\na=a.replace('\\\\','\/')\n\noutput=pd.read_excel(a)\n\noutput_1_players_for_ag=output.loc[(output['Match No']==13) & (output['Type']=='Keeper'),('Player','For','Against','For History','Against History')]\n\noutput_1_players=output.loc[(output['Match No']==13) & (output['Type']=='Keeper'),'Player']\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\n\na=a.replace('\\\\','\/')\n\niplseason=pd.read_excel(a,sheet_name='Bat')\n\niplseason2019_output_1_players=iplseason[(iplseason.Player.isin(output_1_players))&(iplseason['Season']==max(iplseason['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\n\na=a.replace('\\\\','\/')\n\niplcareer=pd.read_excel(a,sheet_name='Bat')\n\niplcareer_output_1_players=iplcareer[iplcareer.Player.isin(output_1_players)]\n\nplayernocareer=output_1_players[~output_1_players.isin(iplcareer_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/2020-Scorecard(till 36th game).xlsx'\n\na=a.replace('\\\\','\/')\n\nipl2020data=pd.read_excel(a,sheet_name='Bat')\n\nif output_1_players_for_ag.iloc[0,3]>=4:\n    a=output_1_players_for_ag.iloc[0,1]\n    a1=output_1_players_for_ag.iloc[0,3]\nif output_1_players_for_ag.iloc[0,4]>=4:\n    b=output_1_players_for_ag.iloc[0,2]\n    b1=output_1_players_for_ag.iloc[0,4]\nif a1==4:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==5:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==6:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==7:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==8:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==9:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-8))|(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-8))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nfirst=output_1_players_for_ag['For'].unique()[0]\n\nsecond=output_1_players_for_ag['For'].unique()[1]\n\nipl2020data_firstteam=ipl2020data_first[ipl2020data_first.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==first,'Player'])]\n\nipl2020data_firstteam['SR']=ipl2020data_firstteam['SR'].astype(int)\n\nipl2020data_firstteam['Inn']=1\n\nipl2020data_firstteamdata=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_firstteamdata['SRavg']=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_firstteamdata=ipl2020data_firstteamdata.drop(axis=1,columns='SR')\nif b1==4:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==5:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==6:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==7:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==8:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==9:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-8))|(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-8))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nipl2020data_secondteam=ipl2020data_second[ipl2020data_second.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==second,'Player'])]\n\nipl2020data_secondteam['SR']=ipl2020data_secondteam['SR'].astype(int)\n\nipl2020data_secondteam['Inn']=1\n\nipl2020data_secondteamdata=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_secondteamdata['SRavg']=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_secondteamdata=ipl2020data_secondteamdata.drop(axis=1,columns='SR')\n\nipl2020_recentdata=ipl2020data_firstteamdata.append(ipl2020data_secondteamdata)\n\nipl2020_recentdata=ipl2020_recentdata.sort_values(by='BATSMEN',ignore_index=True)\n\nipl2020_recentdata['BatAvg']=1\n\ni=0\nwhile i<(ipl2020_recentdata.shape[0]):\n    if (ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])!=0:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/(ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])\n    else:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/ipl2020_recentdata['Inn'][i]\n    i+=1\n\nipl2020_recentdata[\"Boundarypercen\"]=((ipl2020_recentdata['4s']*4+ipl2020_recentdata['6s']*6)\/ipl2020_recentdata['R'])*100\n\n#ipl2020_recentdata_agg1=ipl2020_recentdata.sort_values(by='SRavg',ascending=False,ignore_index=True).reset_index()\n\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg1.iloc[:,[0,1]]\n\nipl2020_recentdata_agg3=ipl2020_recentdata.sort_values(by='BatAvg',ascending=False,ignore_index=True).reset_index()\n\nipl2020_recentdata_agg=ipl2020_recentdata_agg3.iloc[:,[0,1]]\n\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg3.iloc[:,[0,1]])\n\nipl2020_recentdata_agg4=ipl2020_recentdata.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg4.iloc[:,[0,1]])\n\nipl2020recent_results=ipl2020_recentdata_agg.groupby(by='BATSMEN',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplseason2019_slice=iplseason2019_output_1_players.iloc[:,[0,1,2,4,6,8,10,12,13]]\n\niplseason2019_slice[\"InnsByMat\"]=iplseason2019_slice[\"Inns\"]\/iplseason2019_slice[\"Mat\"]*100\n\niplseason2019_slice=iplseason2019_slice[iplseason2019_slice['Player'].isin(ipl2020recent_results.iloc[2:,0])]\n\niplseason2019_slice[\"Boundarypercen\"]=((iplseason2019_slice['4s']*4+iplseason2019_slice['6s']*6)\/iplseason2019_slice['Runs'])*100\n\niplseason2019_agg1=iplseason2019_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\n\niplseason2019_agg2=iplseason2019_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\n\niplseason2019_results=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\n\na=a.replace('\\\\','\/')\n\niplseason_ball=pd.read_excel(a,sheet_name='Ball')\n\niplseason2019_output_1_players_ball=iplseason_ball[(iplseason_ball.Player.isin(output_1_players))&(iplseason_ball['Season']==max(iplseason_ball['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players_ball['Player'])]\n\niplseason2019ball_slice=iplseason2019_output_1_players_ball.iloc[:,[0,1,12,13]]\n\niplseason2019ball_slice=iplseason2019ball_slice[iplseason2019ball_slice['Player'].isin(ipl2020recent_results.iloc[2:,0])]\n\niplseason2019_agg1=iplseason2019ball_slice.sort_values(by='Ct',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\n\niplseason2019_agg2=iplseason2019ball_slice.sort_values(by='St',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\n\niplseason2019ball_results=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplseason2019agg1_results=iplseason2019_results.reset_index().append(iplseason2019ball_results.reset_index())\n\niplseason2019actual_results=iplseason2019agg1_results.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\niplseason2019actual_results=iplseason2019actual_results.rename(columns={\"Player\": \"BATSMEN\"})\n\npart2=iplseason2019actual_results.drop(axis=1,labels=['level_0','index'])\n\npart1=ipl2020recent_results.iloc[0:2]\n\npart1=part1.drop(axis=1,labels='index')\n\nipl202019=part1.append(part2)\n\nfinal1=ipl202019.iloc[0:2]\n\ntrail2=ipl202019.iloc[2:]\n\niplcareer_slice=iplcareer_output_1_players.iloc[:,[0,1,2,4,7,9,10,11,12]]\n\niplcareer_slice[\"InnsByMat\"]=iplcareer_slice[\"Inns\"]\/iplcareer_slice[\"Mat\"]*100\n\niplcareer_slice=iplcareer_slice[iplcareer_slice['Player'].isin(trail2['BATSMEN'])]\n\niplcareer_slice[\"Boundarypercen\"]=((iplcareer_slice['4s']*4+iplcareer_slice['6s']*6)\/iplcareer_slice['Runs'])*100\n\niplcareer_slice_agg1=iplcareer_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\n\niplcareer_slice_agg=iplcareer_slice_agg1.iloc[:,[0,1]]\n\niplcareer_slice_agg4=iplcareer_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\n\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg4.iloc[:,[0,1]])\n\niplcareer_results=iplcareer_slice_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\n\na=a.replace('\\\\','\/')\n\niplcareer_ball=pd.read_excel(a,sheet_name='Ball')\n\niplcareer_output_1_players_ball=iplcareer_ball[iplcareer_ball.Player.isin(output_1_players)]\n\niplcareerball_slice=iplcareer_output_1_players_ball.iloc[:,[0,1,9,10]]\n\niplcareerball_slice=iplcareerball_slice[iplcareerball_slice['Player'].isin(trail2['BATSMEN'])]\n\niplseason2019_agg1=iplcareerball_slice.sort_values(by='Ct',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\n\niplseason2019_agg2=iplcareerball_slice.sort_values(by='St',ascending=False,ignore_index=True).reset_index()\n\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\n\niplcareer2019ball_results=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplcareeract_results=iplcareer_results.reset_index().append(iplcareer2019ball_results.reset_index())\n\niplcareeract_results=iplcareeract_results.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\niplcareeract_results=iplcareeract_results.drop(axis=1, columns=['level_0','index'])\n\niplcareer_results=iplcareeract_results\n\ntrail2=trail2.rename(columns={\"BATSMEN\":\"Player\"})\n\nfinal2_agg=trail2.reset_index().append(iplcareer_results.reset_index())\n\nfinal2_agg=final2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\nfinal2_agg=final2_agg.rename(columns={\"Player\":\"BATSMEN\"})\n\nfinal2_agg=final2_agg.drop(axis=1,columns='index')\n\nfinal2=final2_agg\n\nWicketKeepersResult=final1.append(final2)","c1622c2f":"import pandas as pd\nimport numpy as np\na=r'..\/input\/ipl-dataset-needables\/Output_modif.xlsx'\na=a.replace('\\\\','\/')\noutput=pd.read_excel(a)\n\noutput_1_players_for_ag=output.loc[(output['Match No']==13) & (output['Type']=='All Rounder'),('Player','For','Against','For History','Against History')]\n\noutput_1_players=output.loc[(output['Match No']==13) & (output['Type']=='All Rounder'),'Player']\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\na=a.replace('\\\\','\/')\niplseason=pd.read_excel(a,sheet_name='Bat')\n\niplseason2019_output_1_players=iplseason[(iplseason.Player.isin(output_1_players))&(iplseason['Season']==max(iplseason['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\na=a.replace('\\\\','\/')\niplcareer=pd.read_excel(a,sheet_name='Bat')\n\niplcareer_output_1_players=iplcareer[iplcareer.Player.isin(output_1_players)]\n\nplayernocareer=output_1_players[~output_1_players.isin(iplcareer_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/2020-Scorecard(till 36th game).xlsx'\na=a.replace('\\\\','\/')\nipl2020data=pd.read_excel(a,sheet_name='Bat')\n\nif output_1_players_for_ag.iloc[0,3]>=4:\n    a=output_1_players_for_ag.iloc[0,1]\n    a1=output_1_players_for_ag.iloc[0,3]\nif output_1_players_for_ag.iloc[0,4]>=4:\n    b=output_1_players_for_ag.iloc[0,2]\n    b1=output_1_players_for_ag.iloc[0,4]\n\nif a1==4:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==5:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==6:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==7:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==8:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif a1==9:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-8))|(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-8))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n                \n\nfirst=output_1_players_for_ag['For'].unique()[0]\nsecond=output_1_players_for_ag['For'].unique()[1]\n\nipl2020data_firstteam=ipl2020data_first[ipl2020data_first.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==first,'Player'])]\n\nipl2020data_firstteam['SR']=ipl2020data_firstteam['SR'].astype(int)\n\nipl2020data_firstteam['Inn']=1\n\nipl2020data_firstteamdata=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_firstteamdata['SRavg']=ipl2020data_firstteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_firstteamdata=ipl2020data_firstteamdata.drop(axis=1,columns='SR')\n\nif b1==4:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==5:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==6:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==7:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==8:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\nelif b1==9:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-8))|(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-8))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BATSMEN','R','B','4s','6s','SR','Not Out')]\n                \n\nipl2020data_secondteam=ipl2020data_second[ipl2020data_second.BATSMEN.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==second,'Player'])]\n\nipl2020data_secondteam['SR']=ipl2020data_secondteam['SR'].astype(int)\n\nipl2020data_secondteam['Inn']=1\n\nipl2020data_secondteamdata=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).sum()\n\nipl2020data_secondteamdata['SRavg']=ipl2020data_secondteam.groupby(by='BATSMEN',as_index=False).mean()['SR']\n\nipl2020data_secondteamdata=ipl2020data_secondteamdata.drop(axis=1,columns='SR')\n\nipl2020_recentdata=ipl2020data_firstteamdata.append(ipl2020data_secondteamdata)\n\nipl2020_recentdata=ipl2020_recentdata.sort_values(by='BATSMEN',ignore_index=True)\n\nipl2020_recentdata['BatAvg']=1\n\ni=0\nwhile i<(ipl2020_recentdata.shape[0]):\n    if (ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])!=0:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/(ipl2020_recentdata['Inn'][i]-ipl2020_recentdata['Not Out'][i])\n    else:\n        ipl2020_recentdata['BatAvg'][i]=ipl2020_recentdata['R'][i]\/ipl2020_recentdata['Inn'][i]\n    i+=1\n\nipl2020_recentdata[\"Boundarypercen\"]=((ipl2020_recentdata['4s']*4+ipl2020_recentdata['6s']*6)\/ipl2020_recentdata['R'])*100\n\n#ipl2020_recentdata_agg1=ipl2020_recentdata.sort_values(by='SRavg',ascending=False,ignore_index=True).reset_index()\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg1.iloc[:,[0,1]]\nipl2020_recentdata_agg3=ipl2020_recentdata.sort_values(by='BatAvg',ascending=False,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg3.iloc[:,[0,1]]\n#ipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg3.iloc[:,[0,1]])\nipl2020_recentdata_agg4=ipl2020_recentdata.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg4.iloc[:,[0,1]])\n\nipl2020recent_results1=ipl2020_recentdata_agg.groupby(by='BATSMEN',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\na=r'..\/input\/ipl-dataset-needables\/2020-Scorecard(till 36th game).xlsx'\na=a.replace('\\\\','\/')\nipl2020data=pd.read_excel(a,sheet_name='Ball')\n\nif output_1_players_for_ag.iloc[0,3]>=4:\n    a=output_1_players_for_ag.iloc[0,1]\n    a1=output_1_players_for_ag.iloc[0,3]\nif output_1_players_for_ag.iloc[0,4]>=4:\n    b=output_1_players_for_ag.iloc[0,2]\n    b1=output_1_players_for_ag.iloc[0,4]\n\nif a1==4:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==5:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==6:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==7:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==8:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==9:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-8))|(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-8))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\n                \n\nfirst=output_1_players_for_ag['For'].unique()[0]\nsecond=output_1_players_for_ag['For'].unique()[1]\n\nipl2020data_firstteam=ipl2020data_first[ipl2020data_first.BOWLING.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==first,'Player'])]\n\nipl2020data_firstteam['SR']=((ipl2020data_firstteam['O']*6)\/(ipl2020data_firstteam['W']))\n\nipl2020data_firstteam=ipl2020data_firstteam.replace([np.inf, -np.inf],100)\n\nipl2020data_firstteamdata=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).sum()\n\nipl2020data_firstteamdata['ECONavg']=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).mean()['ECON']\n\nipl2020data_firstteamdata['SRavg']=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).mean()['SR']\n\nipl2020data_firstteamdata=ipl2020data_firstteamdata.drop(axis=1,columns=['ECON','SR'])\n\nif b1==4:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==5:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==6:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==7:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==8:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==9:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-8))|(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-8))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\n                \n\nipl2020data_secondteam=ipl2020data_second[ipl2020data_second.BOWLING.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==second,'Player'])]\n\nipl2020data_secondteam['SR']=((ipl2020data_secondteam['O']*6)\/(ipl2020data_secondteam['W']))\n\nipl2020data_secondteam=ipl2020data_secondteam.replace([np.inf, -np.inf],100)\n\nipl2020data_secondteamdata=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).sum()\n\nipl2020data_secondteamdata['ECONavg']=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).mean()['ECON']\n\nipl2020data_secondteamdata['SRavg']=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).mean()['SR']\n\nipl2020data_secondteamdata=ipl2020data_secondteamdata.drop(axis=1,columns=['ECON','SR'])\n\nipl2020_recentdata=ipl2020data_firstteamdata.append(ipl2020data_secondteamdata)\n\nipl2020_recentdata=ipl2020_recentdata.sort_values(by='BOWLING',ignore_index=True)\n\nipl2020_recentdata_agg1=ipl2020_recentdata.sort_values(by='W',ascending=False,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg1.iloc[:,[0,1]]\nipl2020_recentdata_agg3=ipl2020_recentdata.sort_values(by='ECONavg',ascending=True,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg3.iloc[:,[0,1]])\nipl2020_recentdata_agg4=ipl2020_recentdata.sort_values(by='SRavg',ascending=True,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg4.iloc[:,[0,1]])\n\nipl2020recent_results2=ipl2020_recentdata_agg.groupby(by='BOWLING',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\nipl2020recent_results2=ipl2020recent_results2.rename(columns={\"BOWLING\":\"BATSMEN\"})\n\nipl2020recent_results=ipl2020recent_results1.reset_index().append(ipl2020recent_results2.reset_index())\n\nipl2020recent_results=ipl2020recent_results.groupby(by='BATSMEN',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\niplseason2019_slice=iplseason2019_output_1_players.iloc[:,[0,1,2,4,6,8,10,12,13]]\n\niplseason2019_slice[\"InnsByMat\"]=iplseason2019_slice[\"Inns\"]\/iplseason2019_slice[\"Mat\"]*100\n\niplseason2019_slice=iplseason2019_slice[iplseason2019_slice['Player'].isin(ipl2020recent_results.iloc[2:,0])]\n\niplseason2019_slice[\"Boundarypercen\"]=((iplseason2019_slice['4s']*4+iplseason2019_slice['6s']*6)\/iplseason2019_slice['Runs'])*100\n\niplseason2019_agg1=iplseason2019_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\niplseason2019_agg2=iplseason2019_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\n\niplseason2019_results1=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\na=a.replace('\\\\','\/')\niplseason=pd.read_excel(a,sheet_name='Ball')\n\niplseason2019_output_1_players=iplseason[(iplseason.Player.isin(output_1_players))&(iplseason['Season']==max(iplseason['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players['Player'])]\n\niplseason2019_slice=iplseason2019_output_1_players.iloc[:,[0,3,6,7,8,9]]\n\niplseason2019_slice=iplseason2019_slice[iplseason2019_slice['Player'].isin(ipl2020recent_results.iloc[2:,0])]\n\niplseason2019_agg1=iplseason2019_slice.sort_values(by='Wkts',ascending=False,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\niplseason2019_agg2=iplseason2019_slice.sort_values(by='Econ',ascending=True,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\niplseason2019_agg3=iplseason2019_slice.sort_values(by='SR',ascending=True,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg3.iloc[:,[0,1]])\n\niplseason2019_results2=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplseason2019_results=iplseason2019_results1.reset_index().append(iplseason2019_results2.reset_index())\n\niplseason2019_results=iplseason2019_results.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\npart1=ipl2020recent_results.iloc[0:2]\n\nipl2020recent_results=ipl2020recent_results.drop(axis=1,columns='level_0')\n\niplseason2019_results=iplseason2019_results.drop(axis=1,columns='level_0')\n\ntrail1=ipl2020recent_results.iloc[2:].sort_values(by='index',ignore_index=True).rename(columns={\"BATSMEN\": \"Player\"})\n\npart2_agg=trail1.reset_index().append(iplseason2019_results.reset_index())\n\npart2_agg=part2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\npart2=part2_agg.iloc[0:3]\n\npart2=part2.rename(columns={\"Player\": \"BATSMEN\"})\n\npart2=part2.drop(axis=1,labels=['level_0','index'])\npart1=part1.drop(axis=1,labels='index')\n\n\nipl202019=part1.append(part2)\n\nfinal1=ipl202019.iloc[0:2]\n\ntrail2=ipl202019.iloc[2:]\n\niplcareer_slice=iplcareer_output_1_players.iloc[:,[0,1,2,4,7,9,10,11,12]]\n\niplcareer_slice[\"InnsByMat\"]=iplcareer_slice[\"Inns\"]\/iplcareer_slice[\"Mat\"]*100\n\niplcareer_slice=iplcareer_slice[iplcareer_slice['Player'].isin(trail2['BATSMEN'])]\n\niplcareer_slice[\"Boundarypercen\"]=((iplcareer_slice['4s']*4+iplcareer_slice['6s']*6)\/iplcareer_slice['Runs'])*100\n\niplcareer_slice_agg1=iplcareer_slice.sort_values(by='Ave',ascending=False,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg1.iloc[:,[0,1]]\niplcareer_slice_agg4=iplcareer_slice.sort_values(by='Boundarypercen',ascending=False,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg4.iloc[:,[0,1]])\n\niplcareer_results1=iplcareer_slice_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\na=a.replace('\\\\','\/')\niplcareer=pd.read_excel(a,sheet_name='Ball')\n\niplcareer_output_1_players=iplcareer[iplcareer.Player.isin(output_1_players)]\n\niplcareer_slice=iplcareer_output_1_players.iloc[:,[0,6,11,12,13]]\n\niplcareer_slice=iplcareer_slice[iplcareer_slice['Player'].isin(trail2['BATSMEN'])]\n\niplcareer_slice_agg1=iplcareer_slice.sort_values(by='Wkts',ascending=False,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg1.iloc[:,[0,1]]\niplcareer_slice_agg4=iplcareer_slice.sort_values(by='SR',ascending=True,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg4.iloc[:,[0,1]])\niplcareer_slice_agg5=iplcareer_slice.sort_values(by='Econ',ascending=True,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg5.iloc[:,[0,1]])\n\niplcareer_results2=iplcareer_slice_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplcareer_results=iplcareer_results1.reset_index().append(iplcareer_results1.reset_index())\n\niplcareer_results=iplcareer_results.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\ntrail2=trail2.rename(columns={\"BATSMEN\":\"Player\"})\n\niplcareer_results=iplcareer_results.drop(axis=1,columns='index')\n\nfinal2_agg=trail2.reset_index().append(iplcareer_results.reset_index())\n\nfinal2_agg=final2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\nfinal2_agg=final2_agg.rename(columns={\"Player\":\"BATSMEN\"})\nfinal2_agg=final2_agg.drop(axis=1,columns='index')\nfinal2=final2_agg\n\nAllrounders_Result=final1.append(final2)\n\nAllrounders_Result=Allrounders_Result.drop(axis=1,columns='level_0')","5c09ebd3":"import pandas as pd\nimport numpy as np\n\na=r'..\/input\/ipl-dataset-needables\/Output_modif.xlsx'\na=a.replace('\\\\','\/')\noutput=pd.read_excel(a)\n\noutput_1_players_for_ag=output.loc[(output['Match No']==13) & (output['Type']=='Bowler'),('Player','For','Against','For History','Against History')]\n\noutput_1_players=output.loc[(output['Match No']==13) & (output['Type']=='Bowler'),'Player']\n\na=r'..\/input\/ipl-dataset-needables\/season.xlsx'\na=a.replace('\\\\','\/')\niplseason=pd.read_excel(a,sheet_name='Ball')\n\niplseason2019_output_1_players=iplseason[(iplseason.Player.isin(output_1_players))&(iplseason['Season']==max(iplseason['Season']))]\n\nplayernotin2019=output_1_players[~output_1_players.isin(iplseason2019_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/career.xlsx'\na=a.replace('\\\\','\/')\niplcareer=pd.read_excel(a,sheet_name='Ball')\n\niplcareer_output_1_players=iplcareer[iplcareer.Player.isin(output_1_players)]\n\nplayernocareer=output_1_players[~output_1_players.isin(iplcareer_output_1_players['Player'])]\n\na=r'..\/input\/ipl-dataset-needables\/2020-Scorecard(till 36th game).xlsx'\na=a.replace('\\\\','\/')\nipl2020data=pd.read_excel(a,sheet_name='Ball')\n\nif output_1_players_for_ag.iloc[0,3]>=4:\n    a=output_1_players_for_ag.iloc[0,1]\n    a1=output_1_players_for_ag.iloc[0,3]\nif output_1_players_for_ag.iloc[0,4]>=4:\n    b=output_1_players_for_ag.iloc[0,2]\n    b1=output_1_players_for_ag.iloc[0,4]\n\nif a1==4:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==5:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==6:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==7:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==8:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\nelif a1==9:\n    ipl2020data_first=ipl2020data.loc[(ipl2020data['For num']==a.lower()+str(a1-8))|(ipl2020data['For num']==a.lower()+str(a1-7))|(ipl2020data['For num']==a.lower()+str(a1-6))|(ipl2020data['For num']==a.lower()+str(a1-5))|(ipl2020data['For num']==a.lower()+str(a1-4))|(ipl2020data['For num']==a.lower()+str(a1-3))|(ipl2020data['For num']==a.lower()+str(a1-2))|(ipl2020data['For num']==a.lower()+str(a1-1))|(ipl2020data['Against num']==a.lower()+str(a1-8))|(ipl2020data['Against num']==a.lower()+str(a1-7))|(ipl2020data['Against num']==a.lower()+str(a1-6))|(ipl2020data['Against num']==a.lower()+str(a1-5))|(ipl2020data['Against num']==a.lower()+str(a1-4))|(ipl2020data['Against num']==a.lower()+str(a1-3))|(ipl2020data['Against num']==a.lower()+str(a1-2))|(ipl2020data['Against num']==a.lower()+str(a1-1)),('BOWLING','O','R','W','ECON')]\n                \n\nfirst=output_1_players_for_ag['For'].unique()[0]\nsecond=output_1_players_for_ag['For'].unique()[1]\n\nipl2020data_firstteam=ipl2020data_first[ipl2020data_first.BOWLING.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==first,'Player'])]\n\nipl2020data_firstteam['SR']=((ipl2020data_firstteam['O']*6)\/(ipl2020data_firstteam['W']))\n\nipl2020data_firstteam=ipl2020data_firstteam.replace([np.inf, -np.inf],100)\n\nipl2020data_firstteamdata=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).sum()\n\nipl2020data_firstteamdata['ECONavg']=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).mean()['ECON']\n\nipl2020data_firstteamdata['SRavg']=ipl2020data_firstteam.groupby(by='BOWLING',as_index=False).mean()['SR']\n\nipl2020data_firstteamdata=ipl2020data_firstteamdata.drop(axis=1,columns=['ECON','SR'])\n\nif b1==4:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==5:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==6:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==7:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==8:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\nelif b1==9:\n    ipl2020data_second=ipl2020data.loc[(ipl2020data['For num']==b.lower()+str(b1-8))|(ipl2020data['For num']==b.lower()+str(b1-7))|(ipl2020data['For num']==b.lower()+str(b1-6))|(ipl2020data['For num']==b.lower()+str(b1-5))|(ipl2020data['For num']==b.lower()+str(b1-4))|(ipl2020data['For num']==b.lower()+str(b1-3))|(ipl2020data['For num']==b.lower()+str(b1-2))|(ipl2020data['For num']==b.lower()+str(b1-1))|(ipl2020data['Against num']==b.lower()+str(b1-8))|(ipl2020data['Against num']==b.lower()+str(b1-7))|(ipl2020data['Against num']==b.lower()+str(b1-6))|(ipl2020data['Against num']==b.lower()+str(b1-5))|(ipl2020data['Against num']==b.lower()+str(b1-4))|(ipl2020data['Against num']==b.lower()+str(b1-3))|(ipl2020data['Against num']==b.lower()+str(b1-2))|(ipl2020data['Against num']==b.lower()+str(b1-1)),('BOWLING','O','R','W','ECON')]\n                \n\nipl2020data_secondteam=ipl2020data_second[ipl2020data_second.BOWLING.isin(output_1_players_for_ag.loc[output_1_players_for_ag['For']==second,'Player'])]\n\nipl2020data_secondteam['SR']=((ipl2020data_secondteam['O']*6)\/(ipl2020data_secondteam['W']))\n\nipl2020data_secondteam=ipl2020data_secondteam.replace([np.inf, -np.inf],100)\n\nipl2020data_secondteamdata=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).sum()\n\nipl2020data_secondteamdata['ECONavg']=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).mean()['ECON']\n\nipl2020data_secondteamdata['SRavg']=ipl2020data_secondteam.groupby(by='BOWLING',as_index=False).mean()['SR']\n\nipl2020data_secondteamdata=ipl2020data_secondteamdata.drop(axis=1,columns=['ECON','SR'])\n\nipl2020_recentdata=ipl2020data_firstteamdata.append(ipl2020data_secondteamdata)\n\nipl2020_recentdata=ipl2020_recentdata.sort_values(by='BOWLING',ignore_index=True)\n\nipl2020_recentdata_agg1=ipl2020_recentdata.sort_values(by='W',ascending=False,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg1.iloc[:,[0,1]]\nipl2020_recentdata_agg3=ipl2020_recentdata.sort_values(by='ECONavg',ascending=True,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg3.iloc[:,[0,1]])\nipl2020_recentdata_agg4=ipl2020_recentdata.sort_values(by='SRavg',ascending=True,ignore_index=True).reset_index()\nipl2020_recentdata_agg=ipl2020_recentdata_agg.append(ipl2020_recentdata_agg4.iloc[:,[0,1]])\n\nipl2020recent_results=ipl2020_recentdata_agg.groupby(by='BOWLING',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplseason2019_slice=iplseason2019_output_1_players.iloc[:,[0,3,6,7,8,9]]\n\niplseason2019_slice=iplseason2019_slice[iplseason2019_slice['Player'].isin(ipl2020recent_results.iloc[3:,0])]\n\niplseason2019_agg1=iplseason2019_slice.sort_values(by='Wkts',ascending=False,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg1.iloc[:,[0,1]]\niplseason2019_agg2=iplseason2019_slice.sort_values(by='Econ',ascending=True,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg2.iloc[:,[0,1]])\niplseason2019_agg3=iplseason2019_slice.sort_values(by='SR',ascending=True,ignore_index=True).reset_index()\niplseason2019_agg=iplseason2019_agg.append(iplseason2019_agg3.iloc[:,[0,1]])\n\niplseason2019_results=iplseason2019_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\npart1=ipl2020recent_results.iloc[0:3]\n\ntrail1=ipl2020recent_results.iloc[3:].sort_values(by='index',ignore_index=True).rename(columns={\"BOWLING\": \"Player\"})\n\npart2_agg=trail1.reset_index().append(iplseason2019_results.reset_index())\n\npart2_agg=part2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='level_0',ignore_index=True)\n\npart2=part2_agg.iloc[0:3]\n\npart2=part2.rename(columns={\"Player\": \"BOWLING\"})\n\npart2=part2.drop(axis=1,labels=['level_0','index'])\npart1=part1.drop(axis=1,labels='index')\n\n\nipl202019=part1.append(part2)\n\nfinal1=ipl202019.iloc[0:3]\n\ntrail2=ipl202019.iloc[3:]\n\niplcareer_slice=iplcareer_output_1_players.iloc[:,[0,6,11,12,13]]\n\niplcareer_slice=iplcareer_slice[iplcareer_slice['Player'].isin(trail2['BOWLING'])]\n\niplcareer_slice_agg1=iplcareer_slice.sort_values(by='Wkts',ascending=False,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg1.iloc[:,[0,1]]\niplcareer_slice_agg4=iplcareer_slice.sort_values(by='SR',ascending=True,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg4.iloc[:,[0,1]])\niplcareer_slice_agg5=iplcareer_slice.sort_values(by='Econ',ascending=True,ignore_index=True).reset_index()\niplcareer_slice_agg=iplcareer_slice_agg.append(iplcareer_slice_agg5.iloc[:,[0,1]])\n\niplcareer_results=iplcareer_slice_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\niplcareer_slice.corr(method='pearson')\n\ntrail2=trail2.rename(columns={\"BOWLING\":\"Player\"})\n\niplcareer_results=iplcareer_results.drop(axis=1,columns='index')\n\niplcareer_results\n\nfinal2_agg=trail2.reset_index().append(iplcareer_results.reset_index())\n\nfinal2_agg=final2_agg.groupby(by='Player',sort=False,as_index=False).sum().sort_values(by='index',ignore_index=True)\n\nfinal2_agg=final2_agg.rename(columns={\"Player\":\"BOWLING\"})\nfinal2_agg=final2_agg.drop(axis=1,columns='index')\nfinal2=final2_agg\n\nBowlers_Result=final1.append(final2)","e82fee11":"batsmans_result","088fe3db":"WicketKeepersResult","1eef20d7":"Allrounders_Result","1620aeab":"Bowlers_Result","7e3ae021":"### This Cell estimates the best 6 batting performers based on Recent, last year and Career Statistics","0f20ccc9":"## This Cell estimates the best 6 Bowling performers based on Recent, last year and Career Statistics","4006548b":"### 1 Execute the below cells","306f002d":"## This Cell estimates the best 4 All Rounder performers based on Recent, last year and Career Statistics","918aea36":"### Execute the below cell by entering a specific match number ","9c9ae0a8":"#### Theory: Batting Statistics or the Variables like Runs, Balls Faced, 4s and 6s hit and etc have high correlation between because when higher the runs scored, definitely the higher in 4s, 6s, batting average and strikerate etc. And when comes to WicketKeeping statistics, we're only left with Catches taken and Stumps taken Stats.\n\n#### So, we've considered, Batting Average as a variable which could be proxy to all Bat-stats variables like Runs, Balls faced, 50's, 100's and etc but there's one problem where a player who played highest number of matches will tweak the model by ranking him at the top position when compared to a player who played less matches. \n\n#### So, we'll be adding Boundary_Percentage as a variable which can actually scales all the players because it only speaks about what is a player performance when given an opportunity irrespective of max no. of matches.\n\n##### This model weighs more towards Bat and WicketKeeping Recent statistics then Last year statistic and then Overall Career statistics","50ef3b2b":"#### Theory: Batting Statistics or the Variables like Runs, Balls Faced, 4s and 6s hit and etc have high correlation between because when higher the runs scored, definitely the higher in 4s, 6s, batting average and strikerate etc. And when comes to WicketKeeping statistics, we're only left with Catches taken and Stumps taken Stats.\n\n#### Theory: Bowling Statistics or the Variables like Runs conceded, Balls , 4W and 5W etc have high correlation between because when higher the Wickets taken definitely the higher in no# of matches played and lower the bowling average and strikerate etc.\n\n#### So, we've considered, Batting Average as a variable which could be proxy to all Bat-stats variables like Runs, Balls faced, 50's, 100's and etc but there's one problem where a player who played highest number of matches will tweak the model by ranking him at the top position when compared to a player who played less matches. So, we'll be adding Boundary_Percentage as a variable which can actually scales all the players because it only speaks about what is a player performance when given an opportunity irrespective of max no. of matches.\n\n#### So, we've considered, Wickets Taken, Economy Average and Strikerate Average as variables for Model building. Wickets taken will tweak the model for players who has played more no# of matches but economy_average and Strikerate_average will limits all players under one Scale and limits outlier conditioning.\n\n##### This model weighs more towards Bat and Bowling Recent statistics then Last year statistic and then Overall Career statistics","a41551cf":"## This Cell estimates the best 4 Wicket Keeper performers based on Recent, last year and Career Statistics","a78e305f":"#### Theory: Bowling Statistics or the Variables like Runs conceded, Balls , 4W and 5W etc have high correlation between because when higher the Wickets taken definitely the higher in no# of matches played and lower the bowling average and strikerate etc.\n\n#### So, we've considered, Wickets Taken, Economy Average and Strikerate Average as variables for Model building. Wickets taken will tweak the model for players who has played more no# of matches but economy_average and Strikerate_average will limits all players under one Scale and limits outlier conditioning.\n\n##### This model weighs more towards Bat and Bowling Recent statistics then Last year statistic and then Overall Career statistics","96c85a1d":"#### Execute below cells for Results","fc126616":"#### Theory: Batting Statistics or the Variables like Runs, Balls Faced, 4s and 6s hit and etc have high correlation between because when higher the runs scored, definitely the higher in 4s, 6s, batting average and strikerate etc. \n\n#### So, we've considered, Batting Average as a variable which could be proxy to all Bat-stats variables like Runs, Balls faced, 50's, 100's and etc but there's one problem where a player who played highest number of matches will tweak the model by ranking him at the top position when compared to a player who played less matches. \n\n#### So, we'll be adding Boundary_Percentage as a variable which can actually scales all the players because it only speaks about what is a player performance when given an opportunity irrespective of max no. of matches.\n\n##### This model weighs more towards Bat Recent statistics then Last year statistic and then Overall Career statistics"}}