{"cell_type":{"70090fbb":"code","9507777c":"code","687c3066":"code","8ac12c1c":"code","e7f06d63":"code","d46dad91":"code","16971bff":"code","3a31fb0b":"code","8d3df8db":"code","ff2e73ea":"code","9eecca33":"code","54ac982c":"code","0fa6a289":"code","1ab2ecfa":"code","38f17dc0":"code","5a63919e":"code","53702681":"code","da176c9f":"markdown","108aec02":"markdown","0bcb3164":"markdown","4070cff4":"markdown","f5af6c5d":"markdown","a7855674":"markdown","be92abac":"markdown","357fdaf2":"markdown","5cbf0624":"markdown","f97d2107":"markdown","73fc5500":"markdown","42506a96":"markdown","c32bd56b":"markdown","63be1ad6":"markdown","967e0766":"markdown","93e32774":"markdown","c37befde":"markdown","8430139a":"markdown","6db36726":"markdown","1f8380e2":"markdown"},"source":{"70090fbb":"import pandas as pd\nimport warnings \nwarnings.filterwarnings(\"ignore\")\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style='white',color_codes=True)","9507777c":"df=pd.read_csv(\"..\/input\/Iris.csv\")\ndf.head()","687c3066":"df['Species'].value_counts()","8ac12c1c":"df.plot(kind='scatter',x=\"SepalLengthCm\", y=\"SepalWidthCm\")\ndf.plot(kind='scatter',x=\"PetalLengthCm\", y=\"PetalWidthCm\")","e7f06d63":"sns.FacetGrid(df, size=5,hue=\"Species\").map(plt.scatter,\"SepalLengthCm\",\"SepalWidthCm\").add_legend()\nsns.FacetGrid(df, size=5,hue=\"Species\").map(plt.scatter,\"PetalLengthCm\",\"PetalWidthCm\").add_legend()","d46dad91":"sns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=df)","16971bff":"sns.boxplot(x=\"Species\", y=\"PetalWidthCm\", data=df)","3a31fb0b":"sns.stripplot(x=\"Species\", y=\"PetalLengthCm\", data=df, jitter=True, edgecolor=\"gray\")","8d3df8db":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=df)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=df)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=df)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=df)","ff2e73ea":"# Distribution density plot KDE (kernel density estimate)\nsns.FacetGrid(df, hue=\"Species\", size=6) \\\n   .map(sns.kdeplot, \"PetalLengthCm\") \\\n   .add_legend()","9eecca33":"sns.pairplot(df.drop(\"Id\", axis=1), hue=\"Species\", size=4)","54ac982c":"import numpy as np\nfrom sklearn.linear_model import LogisticRegression  \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn import metrics","0fa6a289":"df.drop('Id',axis=1,inplace=True)\ntrain, test = train_test_split(df, test_size = 0.3)\nprint(train.shape)\nprint(test.shape)","1ab2ecfa":"train_X=train[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ntrain_y=train.Species\ntest_X=test[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ntest_y=test.Species","38f17dc0":"train_X.head()","5a63919e":"model = LogisticRegression()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Logistic Regression is',metrics.accuracy_score(prediction,test_y)*100 ,'percent')","53702681":"model=KNeighborsClassifier(n_neighbors=3) \nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the KNN is',metrics.accuracy_score(prediction,test_y)*100, 'percent')","da176c9f":"Each species has 50 samples","108aec02":"Dropping the ID axis because it's not of use in training, and splitting the dataset","0bcb3164":"# Training models","4070cff4":"A stripplot with jitter so we can see the distribution of values more clearly.\nJitter=True makes it so the points don't fall in a straight line (in this plot X coord.s don't matter)","f5af6c5d":"Loading the dataset into df and printing the first 5 rows","a7855674":"### We will use Logistic Regression and KNN\n#### Train Test Split splits the data into 70:30 ratio. We will train the model on 70% of the data","be92abac":"Importing files and ignoring seaborn warnings, setting a simple seaborn style","357fdaf2":"Boxplot of Petal Width species-wise","5cbf0624":"Creating the train and test datasets. X will be the input, y the output","f97d2107":"### Uses Seaborn and pandas to explore the Iris dataset and find patterns between data of 150 Iris flowers of 3 different subspecies","73fc5500":"Fitting the data on K Neighbors Classifier with neighbors=3","42506a96":"Making a boxplot to see the distribution of petal length for each species","c32bd56b":"KDE: Kernel Density Estimate.\nThis shows the distribution density more clearly.\nWe use a FacetGrid with hue = 'Species'.\n.add_legend() adds the legend on the top rights.","63be1ad6":"Data distribution in the above graph seems to be split into groups,\nso we use a FacetGrid and set the 'hue' to the 'Species' column\nThis gives a different color to the points in the scatter plot based on their Species value","967e0766":"Fitting the data on Logistic Regression:","93e32774":"Simple scatter plot to see connections between sepal length\/width and petal length\/width","c37befde":"# Exploration and training of the Iris Dataset","8430139a":"So from this plot we can see that Petal length and width play a very important differentiating factor\n(iris setosa has small petal length and width, virginica has the largest)","6db36726":"Plotting bivariate relations between each pair of features (4 features x4 so 16 graphs)with hue = \"Species\"","1f8380e2":"Violin plots are the combination of scatter plots and box plots.\nWe can see the density of distribution of values for the features"}}