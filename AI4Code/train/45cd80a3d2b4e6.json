{"cell_type":{"cb104a4f":"code","9577733a":"code","55681d12":"code","04f76269":"code","1b146c6d":"code","d18994f0":"code","e352ede4":"code","6ef7cf1b":"code","63532993":"code","75cff782":"code","e952bd68":"code","3beaeb97":"code","03d9f72a":"code","0df5b5d5":"code","7c30cd13":"code","fffc8f64":"code","6bbf81b6":"code","ccc1636d":"code","d7b15fc8":"code","3a8e93b0":"code","1e362f30":"code","899be39a":"code","c5e0b580":"code","71abf98b":"markdown","55c9a33d":"markdown","de14eca2":"markdown","c8769f26":"markdown","f0ef9eed":"markdown"},"source":{"cb104a4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9577733a":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud","55681d12":"age_grp_details = pd.read_csv(\"..\/input\/covid19-in-india\/AgeGroupDetails.csv\") \nindividual_details = pd.read_csv(\"..\/input\/covid19-in-india\/IndividualDetails.csv\")","04f76269":"age_grp_details.head()","1b146c6d":"plt.figure(figsize=(10,10))\nax = sns.barplot(x=age_grp_details['AgeGroup'], y=age_grp_details['TotalCases'])\nplt.show()","d18994f0":"individual_details.head()","e352ede4":"# remove columns not used for analysis\nindividual_details = individual_details.drop(['id', 'government_id', 'status_change_date'], axis=1)","6ef7cf1b":"# finding the number of missing values\nindividual_details.isnull().sum()","63532993":"# lets change the missing age with 0\nindividual_details['age'] = individual_details['age'].fillna(0)","75cff782":"# lets change the missing gender to Missing\nindividual_details['gender'] = individual_details['gender'].fillna('Missing')","e952bd68":"# lets change the missing city, district to Missing\nindividual_details['detected_city'] = individual_details['detected_city'].fillna('Missing')\nindividual_details['detected_district'] = individual_details['detected_district'].fillna('Missing')","3beaeb97":"# lets change the missing nationaliuty\nindividual_details['nationality'] = individual_details['nationality'].fillna('Missing')","03d9f72a":"individual_details['nationality'] = individual_details['nationality'].apply(lambda row: 'India' if row.lower() == 'indian' else row)","0df5b5d5":"individual_details.isnull().sum()","7c30cd13":"data = individual_details['gender'].value_counts().reset_index()","fffc8f64":"# plotting the number of males and females who suffered from the disease\ndata = individual_details['gender'].value_counts().reset_index()\ncols = data['index']\nvalues = data['gender']\n\nfig1, ax1 = plt.subplots()\nax1.pie(values, labels=cols, wedgeprops=dict(width=0.6), autopct='%1.1f%%', startangle=90)\nax1.axis('equal')\nplt.show()","6bbf81b6":"# getting the different district people are suffering from the disease\ndistinct_city = ','.join(individual_details[individual_details['detected_city'] != 'Missing']['detected_city'].unique())\n\nwordcloud = WordCloud(max_font_size=40).generate(distinct_city)\nplt.figure(figsize=(20,10))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","ccc1636d":"# getting the count for people with different nationality \nfig, ax1 = plt.subplots(figsize=(10,10))\nax1.set_yscale('log')\nchart = sns.countplot(x=individual_details['nationality'])\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.show()","d7b15fc8":"# getting the count for people with different nationality \nfig, ax1 = plt.subplots(figsize=(20,10))\nax1.set_yscale('log')\nchart = sns.countplot(x=individual_details['detected_state'])\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.show()","3a8e93b0":"# state wise count based on gender lets drop the gender with missing values\ndata = individual_details[individual_details['gender'] != 'Missing']\nfig, ax1 = plt.subplots(figsize=(20,10))\nax1.set_yscale('log')\nchart = sns.countplot(x=data['detected_state'], hue=data['gender'])\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.show()","1e362f30":"individual_details['age'] = individual_details['age'].apply(lambda row: 33 if row == \"28-35\" else row)\nindividual_details['age'] = individual_details['age'].astype(float)","899be39a":"# lets perform the binning for age column\n\ndef getAgeBins(row):\n    if row == 0:\n        return \"0\"\n    elif row > 0 and row <= 9:\n        return \"0-9\"\n    elif row > 9 and row <= 19:\n        return \"10-19\"\n    elif row > 19 and row <= 29:\n        return \"20-29\"\n    elif row > 29 and row <= 39:\n        return \"30-39\"\n    elif row > 39 and row <= 49:\n        return \"40-49\"\n    elif row > 49 and row <= 59:\n        return \"50-59\"\n    elif row > 59 and row <= 69:\n        return \"60-69\"\n    elif row > 69 and row <= 79:\n        return \"70-79\"\n    elif row > 79 and row <= 89:\n        return \"80-89\"\n    else:\n        return \">90\"\n    \nindividual_details['age_bins'] = individual_details['age'].apply(lambda row: getAgeBins(row))\nindividual_details['age_bins'].head()","c5e0b580":"fig, ax1 = plt.subplots(figsize=(10,10))\nax1.set_yscale('log')\nsns.countplot(x=individual_details['age_bins'], order=individual_details['age_bins'].value_counts().sort_values().index)\nplt.show()","71abf98b":"Since for most of the people the nationality is missing. <br>\nFrom the graph it is visible that most of the Non-Indians who are suffering from COVID are from Itlay or Indonesia","55c9a33d":"a lot of data for the column gender is missing","de14eca2":"Top 2 states with highest number of patients are Maharastra, Delhi","c8769f26":"If we neglect the missing values we can see the people with age grp 30-39 have chances of getting the infection. ","f0ef9eed":"### Analyzing the data IndividualDetails.csv"}}