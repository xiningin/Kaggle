{"cell_type":{"5d73aed0":"code","b188d96d":"code","d7915ede":"code","d0232b3f":"code","9de38238":"code","eead7513":"code","67966aea":"code","95f80e02":"code","93391413":"code","6a4c7a6c":"code","2830c244":"code","8f8bdef8":"code","a041361b":"code","3c7ad200":"code","44fdc2b0":"code","70d4066e":"code","a3ee91ea":"code","0b3551ed":"code","9b6d8d45":"code","e3644fee":"code","83b163ca":"code","927ee428":"code","5953dd95":"code","592e4c9f":"code","34167228":"code","556a4cfb":"code","5cf2de0a":"code","a0c2290e":"code","13d5f971":"code","4e98b8e7":"code","6930fcf5":"markdown","fbe9c1a0":"markdown"},"source":{"5d73aed0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport tensorflow as tf\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nimport seaborn as sns","b188d96d":"dataFrame = pd.read_csv('..\/input\/coronavirusdataset\/patient.csv')","d7915ede":"dataFrame.describe()","d0232b3f":"# Mean birth_year = 1972 age = 48 Years Old\n# 75% = 1987 = 33 Years Old","9de38238":"infection_reason=dataFrame['infection_reason'].value_counts()\nprint(infection_reason)\nprint('-------------------')\nprint(infection_reason.describe())\nfig = plt.figure(figsize=(25, 10),dpi=50)\nax = fig.add_axes([0,0,1,1])\nax.bar(infection_reason.keys().to_list(),infection_reason.to_list())\nplt.show()","eead7513":"infection_reason=dataFrame['region'].value_counts()\nprint(infection_reason)\nprint('-------------------')\nprint(infection_reason.describe())\nfig = plt.figure(figsize=(25, 10))\nax = fig.add_axes([0,0,1,1])\nax.bar(infection_reason.keys().to_list(),infection_reason.to_list())\nplt.show()","67966aea":"infection_reason=dataFrame['confirmed_date'].value_counts()\nprint(infection_reason)\nprint('-------------------')\nprint(infection_reason.describe())\nfig = plt.figure(figsize=(25, 10))\nax = fig.add_axes([0,0,1,1])\nax.bar(infection_reason.keys().to_list(),infection_reason.to_list())\nplt.show()","95f80e02":"infection_reason=dataFrame['state'].value_counts()\nprint(infection_reason)\nprint('-------------------')\nprint(infection_reason.describe())\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_axes([0,0,1,1])\nax.bar(infection_reason.keys().to_list(),infection_reason.to_list())\nplt.show()\nprint('Deceased % : '+ str(infection_reason['deceased']\/len(dataFrame['state'])*100))","93391413":"columns=dataFrame['infection_reason'].keys().to_list()\nencode_infection_reason=pd.get_dummies(dataFrame['infection_reason'],columns=columns)","6a4c7a6c":"le = LabelEncoder()","2830c244":"encode_state=le.fit_transform(dataFrame['state'].values)\nencode_state","8f8bdef8":"columns=dataFrame['sex'].keys().to_list()\nencode_sex=pd.get_dummies(dataFrame['sex'],columns=columns)","a041361b":"columns=dataFrame['confirmed_date'].keys().to_list()\nencode_confirmed_date=pd.get_dummies(dataFrame['confirmed_date'],columns=columns)","3c7ad200":"columns=dataFrame['released_date'].keys().to_list()\nencode_released_date=pd.get_dummies(dataFrame['released_date'],columns=columns)","44fdc2b0":"columns=dataFrame['deceased_date'].keys().to_list()\nencode_deceased_date=pd.get_dummies(dataFrame['deceased_date'],columns=columns)","70d4066e":"columns=dataFrame['region'].keys().to_list()\nencode_region=pd.get_dummies(dataFrame['region'],columns=columns)","a3ee91ea":"columns=dataFrame['group'].keys().to_list()\nencode_group=pd.get_dummies(dataFrame['group'],columns=columns)","0b3551ed":"columns=dataFrame['country'].keys().to_list()\nencode_country=pd.get_dummies(dataFrame['country'],columns=columns)","9b6d8d45":"frames=[encode_country,encode_sex,encode_group,encode_region,encode_confirmed_date,encode_released_date,encode_deceased_date,encode_infection_reason]","e3644fee":"keys=[]\nfor i in frames:\n    keys+=i.keys().to_list()","83b163ca":"finalDataFrame = pd.concat(frames,sort=False,ignore_index=False,axis=1)","927ee428":"X_train, X_test, y_train, y_test = train_test_split(finalDataFrame.values, encode_state, test_size=0.33, random_state=1)","5953dd95":"X_train.shape","592e4c9f":"model = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Dense(512,activation='relu',input_shape=(finalDataFrame.shape[1],)))\nmodel.add(tf.keras.layers.Dense(256,activation='relu'))\nmodel.add(tf.keras.layers.Dense(128,activation='relu'))\nmodel.add(tf.keras.layers.Dense(64,activation='relu'))\nmodel.add(tf.keras.layers.Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam', metrics=['accuracy'])","34167228":"model.fit(X_train,y_train,epochs=20,batch_size=20,validation_split=0.3,verbose=1)","556a4cfb":"model.evaluate(X_test,y_test,verbose=0)","5cf2de0a":"y_predicct=model.predict(finalDataFrame.values)","a0c2290e":"con_mat = tf.math.confusion_matrix(labels=encode_state, predictions=y_predicct).numpy()","13d5f971":"classes=list(dataFrame['state'].unique())\ncon_mat_norm = np.around(con_mat.astype('float') \/ con_mat.sum(axis=1)[:, np.newaxis], decimals=2)\ncon_mat_df = pd.DataFrame(con_mat_norm,\n                     index = classes, \n                     columns = classes)","4e98b8e7":"figure = plt.figure(figsize=(4, 4))\nsns.heatmap(con_mat_df, annot=True,cmap=plt.cm.Blues)\nplt.tight_layout()\nplt.ylabel('True label')\nplt.xlabel('Predicted label')\nplt.show()","6930fcf5":"## Predection of COVID-19 with the help of provided dataset","fbe9c1a0":"# Coronavirus DataSet of patients"}}