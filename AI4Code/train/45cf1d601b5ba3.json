{"cell_type":{"48f4a75c":"code","06d9c770":"code","678dd212":"code","c1ac1d86":"code","ac48655e":"code","f75a7068":"code","0390c27d":"code","cab716f0":"code","da8ef37b":"code","aadb6fdd":"code","5584a354":"code","37962f1a":"code","5413c7da":"code","0c5e0717":"code","0ecceb8e":"code","fa1f496e":"code","41d77fa5":"code","3085d440":"code","b055e62d":"code","b6ab556a":"code","4a5b203c":"code","3d5ece46":"code","79d1f699":"code","cd1b6ed4":"code","8fd55fa1":"code","8b2b7e69":"code","1868d687":"code","e4f4694e":"code","54131f1c":"code","40f27692":"code","9683f26b":"code","0d77bdc8":"code","b8619527":"code","2e1a59d2":"code","6ffc7068":"code","816ce723":"code","de4d58fd":"code","aab009ae":"code","ea001649":"code","92505d5b":"code","5ccac075":"code","484cd23d":"markdown","aeb850b9":"markdown","a1735973":"markdown","bcfb28ee":"markdown","6c7b022b":"markdown","9f993dc6":"markdown","c54308da":"markdown","cf42a150":"markdown","e815c641":"markdown","88e43aab":"markdown","1bf786d9":"markdown","5fc8ee83":"markdown","d5210c26":"markdown","5bcd37a1":"markdown","65f6d32a":"markdown","672015f5":"markdown","5e8ceea8":"markdown","6802f855":"markdown","d66d3104":"markdown","b0a404a2":"markdown","716beb44":"markdown","878f2386":"markdown","0c2f05c0":"markdown","a51b9ebd":"markdown","0d03ffab":"markdown","633ad517":"markdown","5bccf30f":"markdown","b938c6f8":"markdown","c08a4fc0":"markdown","361d1e44":"markdown","ed3f894f":"markdown","98a292f2":"markdown","9c00a081":"markdown","19fdefcb":"markdown","356e5c6e":"markdown","24bf5ef2":"markdown","5d3286de":"markdown","c59cefb5":"markdown","d7197107":"markdown","bd35ea67":"markdown","a9bc7068":"markdown"},"source":{"48f4a75c":"!pip install sweetviz","06d9c770":"import numpy as np\nimport pandas as pd\nfrom pandas_profiling import ProfileReport\nimport sweetviz as sv\nimport shap\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","678dd212":"data = pd.read_csv('..\/input\/iris\/Iris.csv', index_col='Id')\ndata","c1ac1d86":"data.info()","ac48655e":"data.describe()","f75a7068":"data.boxplot();","0390c27d":"data['Species'].value_counts()","cab716f0":"from sklearn.model_selection import StratifiedShuffleSplit\n\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\n\nfor train_index, test_index in split.split(data, data['Species']):\n    data_train = data.iloc[train_index]\n    data_test = data.iloc[test_index]","da8ef37b":"print(\"Train: {} \\nTest: {}\".format(data_train.shape, data_test.shape))","aadb6fdd":"print(\"Train: \\n{} \\n\\nTest: \\n{}\".format(data_train['Species'].value_counts(), data_test['Species'].value_counts()))","5584a354":"data_profile = ProfileReport(data, title='Iris Species Profiling Report')","37962f1a":"data_profile.to_widgets()","5413c7da":"data_profile.to_file(\"iris_pandas_profiling.html\")","0c5e0717":"# Pearson's correlation matrix\nplt.figure(figsize=(10,5),dpi=300)\ncorr_matrix = data.corr()\nmask = np.triu(np.ones_like(corr_matrix, dtype=bool))\nsns.heatmap(corr_matrix, cmap='jet', annot=True, mask=mask);","0ecceb8e":"# If target_feat is NUMERICAL or BOOLEAN:\n# data_report = sv.analyze(data, target_feat='qqq')\ndata_report = sv.analyze(data)","fa1f496e":"data_report.show_notebook(filepath=\"iris_sweetviz.html\")","41d77fa5":"data_compare_report = sv.compare([data_train, \"Train\"], [data_test, \"Test\"])","3085d440":"data_compare_report.show_notebook()","b055e62d":"# feature_config = sv.FeatureConfig(skip=\"zzz\", force_num=[\"nnn\"], force_cat=[\"ccc\"], force_text=[\"ttt\"])\n# data_intra_report = sv.compare_intra(data, data[\"xxx\"] == \"yyy\", [\"aaa\", \"bbb\"], feature_config)","b6ab556a":"!pip install pycaret","4a5b203c":"from pycaret.classification import *","3d5ece46":"data_setup = setup(data_train, target='Species', test_data=data_test, session_id=42, silent=True) # profile can be set to True for pandas-profiling's report directly here","79d1f699":"get_config('X_train')","cd1b6ed4":"models()","8fd55fa1":"data_models = compare_models(n_select=3, turbo=False)","8b2b7e69":"data_models","1868d687":"rbfsvm = create_model('rbfsvm')","e4f4694e":"tuned_rbfsvm = tune_model(rbfsvm, n_iter=1000, optimize='Accuracy')","54131f1c":"evaluate_model(tuned_rbfsvm)","40f27692":"plot_model(tuned_rbfsvm, plot='confusion_matrix')","9683f26b":"predict_model(tuned_rbfsvm)","0d77bdc8":"# interpret_model(mmm) # In PyCaret (2.2.3), this function actually supports only tree based models.","b8619527":"shap.initjs()","2e1a59d2":"explainer = shap.KernelExplainer(tuned_rbfsvm.predict_proba, get_config('X_train'))\nshap_values = explainer.shap_values(get_config('X_test'))","6ffc7068":"summary_plot = shap.summary_plot(shap_values, get_config('X_test'))","816ce723":"# Iris-setosa:\nshap.force_plot(explainer.expected_value[0], shap_values[0], get_config('X_test'))","de4d58fd":"# Iris-versicolor: \nshap.force_plot(explainer.expected_value[1], shap_values[1], get_config('X_test'))","aab009ae":"# Iris-virginica:\nshap.force_plot(explainer.expected_value[2], shap_values[2], get_config('X_test'))","ea001649":"final_rbfsvm = finalize_model(tuned_rbfsvm)\nfinal_rbfsvm","92505d5b":"save_model(final_rbfsvm,'iris_rbfsvm_02Jan2021')","5ccac075":"# saved_model = load_model('iris_rbfsvm_02Jan2021')\n# predict_model(saved_model, data=xxx)","484cd23d":"# 5. EDA with Sweetviz <a id=\"5\"><\/a>","aeb850b9":"![Capture%20d%E2%80%99e%CC%81cran%202020-12-31%20a%CC%80%2022.55.24.png](attachment:Capture%20d%E2%80%99e%CC%81cran%202020-12-31%20a%CC%80%2022.55.24.png)","a1735973":"## Tune model <a id=\"6.3\"><\/a> ","bcfb28ee":"### Any suggestions or comments are warmly welcome! \ud83d\ude00","6c7b022b":"## All dataset <a id=\"5.1\"><\/a> ","9f993dc6":"## Train \/ Test dataset <a id=\"5.2\"><\/a> ","c54308da":"### Let's build and analyze a model on this classical dataset with the help of 4 powerful libraries in Python:\n- pandas-profiling\n- Sweetviz\n- PyCaret\n- SHAP","cf42a150":"***","e815c641":"- A SVM with a RBF kernel for muticlass classification have been built and tuned on the iris dataset. It has been saved and is ready for deployment on new data.\n- This model performed 100 % accuracy on an unbiased test set.\n- The strongest discriminative feature for the classification in this model is the length of the petals.\n- One can perform a roughly classification of iris based on the following relationship:  \nlength_petals(Iris-setosa) $<$ length_petals(Iris-versicolor) $<$ length_petals(Iris-virginica)","88e43aab":"<h1 style='background:purple; border:1; color:white'><center>Iris Species<center><h1>","1bf786d9":"# 7. SHAP analysis <a id=\"7\"><\/a>","5fc8ee83":"## Summary: <a id=\"4.2\"><\/a>\n\n- Strong correlation (monotonic and linear) between PetalLengthCm, PetalWidthCm and SepalLengthCm.","d5210c26":"## Individuals feature importance: <a id=\"7.2\"><\/a>","5bcd37a1":"# 2. Import data and gain basic insight with pandas <a id=\"2\"><\/a>","65f6d32a":"## *UCI Machine Learning*\n\n*Notebook made by* S\u00e9bastien BECKER\n\n02.01.2021","672015f5":"***","5e8ceea8":"### As we considered the accuracy as a metric, the confusion matrix is a good graphical representation of the performance of our model.","6802f855":"***","d66d3104":"### The model seems to perform perfectly on the test data. There seems to be no need for further improvements.\n\n### *In fact, if we try, for example, to normalize or standardize the data, the model do not perform as good as it is now.*","b0a404a2":"## Global feature importance: <a id=\"7.1\"><\/a>","716beb44":"## Test model <a id=\"6.4\"><\/a> ","878f2386":"***","0c2f05c0":"### Nearly all models with default hyperparameters seems to perform very good on this dataset. A SVM with a RBF kernel seems to be the best one. Judging from this preliminary results there will be probably no need for ensemble methods.","a51b9ebd":"## Summary: <a id=\"2.1\"><\/a>\n\n- No missing values.\n- The ranges of values for each features are equivalents.\n- Petal's dispersion of data $>$ Sepal's dispersion of data $\\rightarrow$ feature selection?\n- Target = Species: 3 types $\\rightarrow$ multiclass classification.\n- Same frequencies of the target's class $\\rightarrow$ accuracy as evaluation metric.\n- Small size of the dataset + same frequencies of the target's class $\\rightarrow$ stratified random sampling.","0d03ffab":"# 6. PyCaret <a id=\"6\"><\/a>","633ad517":"**Note**: *There seems to be some problems of compatibility between the dependencies of pycaret and pandas-profiling for now. In order for the notebook to run without errors, I had to install pycaret after launching pandas-profiling. To relaunch the notebook, one must perform a restart of the session before.*","5bccf30f":"# 8. Finalize and save model <a id=\"8\"><\/a> ","b938c6f8":"***","c08a4fc0":"***","361d1e44":"***","ed3f894f":"## Preprocessing <a id=\"6.1\"><\/a> ","98a292f2":"<h1 style='background:purple; border:1; color:white'><center>Thanks for reading! <br\/>Please upvote if you find it useful! <br\/>\ud83d\udc4d<center><h1>","9c00a081":"# 3. Generate unbiased train and test sets <a id=\"3\"><\/a>","19fdefcb":"## Select model <a id=\"6.2\"><\/a> ","356e5c6e":"# TOC\n\n- [1. Import libraries](#1)\n- [2. Import data and gain basic insight with pandas](#2)\n    - [Summary](#2.1)\n- [3. Generate unbiased train and test sets](#3)\n- [4. EDA with pandas-profiling](#4)\n    - [All dataset](#4.1)\n    - [Summary](#4.2)\n- [5. EDA with Sweetviz](#5)\n    - [All dataset](#5.1)\n    - [Train \/ Test dataset](#5.2)\n    - [Summary](#5.3)\n- [6. PyCaret](#6)\n    - [Preprocessing](#6.1)\n    - [Select model](#6.2)\n    - [Tune model](#6.3)\n    - [Test model](#6.4)\n- [7. SHAP analysis](#7)\n    - [Global feature importance](#7.1)\n    - [Individuals feature importance](#7.2)\n    - [Summary](#7.3)\n- [8. Finalize and save model](#8)\n- [9. Conclusion](#9)","24bf5ef2":"# 9. Conclusion <a id=\"9\"><\/a>","5d3286de":"## Summary: <a id=\"7.3\"><\/a>\n\nFor this model:\n\n- For each variety of iris, the length of the petals have the strongest discriminative power. This feature greatly drive the probability of affectation of each iris to their true class in the test set. Albeit a little less strongly, it also decrease the probability of affectation to the two other non-true class.\n- We can extract the following rough relationship for the length of the petals: Iris-setosa $<$ Iris-versicolor $<$ Iris-virginica\n- The width of the petals have his strongest discriminative power to separate the Iris-virginica of the others. This variety have the biggest widths of the petals.\n- The length and width of the sepals account for a minor role in the classification.","c59cefb5":"## All dataset <a id=\"4.1\"><\/a>","d7197107":"# 1. Import libraries <a id=\"1\"><\/a>","bd35ea67":"# 4. EDA with pandas-profiling <a id=\"4\"><\/a>","a9bc7068":"## Summary: <a id=\"5.3\"><\/a>\n\n- The distribution of the features's values is roughly equivalent between the train and the test sets."}}