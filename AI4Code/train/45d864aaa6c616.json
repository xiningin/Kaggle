{"cell_type":{"76156abb":"code","63cc684a":"code","c2f4978a":"code","992d396b":"code","04ac65ba":"code","07ff9493":"code","c3fbc99b":"code","31910c47":"code","715c2d05":"code","66208e6a":"code","5a2e510e":"code","9ea8a592":"code","2b339b6d":"code","6793358c":"code","1389394b":"code","a6d24604":"code","7b06f792":"code","0d4fbe41":"code","c6bc409f":"code","b673c6b2":"code","929de173":"code","bbbb2692":"code","b620b451":"code","99a074a9":"code","ebdc2bc7":"code","cd30fb7d":"code","ba7d63e5":"code","a55b19bc":"code","e007b17d":"code","75116e29":"code","8437c725":"code","6a7aa96b":"code","a56e3a6b":"code","99ae49ae":"code","52e54401":"code","d85c999f":"code","98a1609b":"code","d24cad07":"code","398f654d":"code","48f37f34":"code","ec849300":"markdown","79fd4bbb":"markdown","2b5c6f62":"markdown","ca83996b":"markdown","75a14298":"markdown","7e14113b":"markdown","dff8a4c1":"markdown","7ae10da5":"markdown","b80ea2b7":"markdown","f07b281c":"markdown","308d65dc":"markdown","f80b6683":"markdown","61125ec7":"markdown","9945281b":"markdown","3ae0aec8":"markdown","29b2e23d":"markdown"},"source":{"76156abb":"# importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set()\n%matplotlib inline","63cc684a":"data = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')  #import dataset\ndata.head(10)","c2f4978a":"data.shape","992d396b":"data.info()","04ac65ba":"data.describe()","07ff9493":"data.isnull().sum()","c3fbc99b":"import missingno as msno\nmsno.bar(data)\nplt.show()","31910c47":"sns.heatmap(data.corr(),cbar=False,cmap='BuGn',annot=True)","715c2d05":"col=['Glucose' ,'BloodPressure' ,'SkinThickness', 'Insulin' ,'BMI']","66208e6a":"for i in col:\n  data[i].replace(0,data[i].mean(),inplace=True)","5a2e510e":"p=data.hist(figsize = (20,20))","9ea8a592":"sns.pointplot(x='Outcome', y= 'Age', data=data)","2b339b6d":"sns.scatterplot(x='Age',y='Insulin',data=data)","6793358c":"sns.boxplot(x='Outcome',y='Pregnancies',data=data)","1389394b":"sns.pairplot(data,hue='Outcome')","a6d24604":"sns.stripplot(x='Pregnancies',y='Age',data=data)","7b06f792":"sns.regplot(x='SkinThickness', y= 'Insulin', data=data)","0d4fbe41":"f, ax = plt.subplots(figsize=(10, 10))\nax=sns.swarmplot(x=\"Pregnancies\", y=\"Age\", hue=\"Outcome\",\n              palette=\"Dark2\", data=data)\nax=sns.set(style=\"darkgrid\")","c6bc409f":"g = sns.regplot(x='Insulin',y='Age',data=data)","b673c6b2":"data.var()","929de173":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX =  pd.DataFrame(sc_X.fit_transform(data.drop([\"Outcome\"],axis = 1),),\n        columns=['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'DiabetesPedigreeFunction', 'Age'])","bbbb2692":"\ny=data.Outcome","b620b451":"#splitting the dataset\nfrom sklearn.model_selection import train_test_split        \nX_train,X_test,Y_train,Y_test = train_test_split(X,y,test_size=.30,random_state=3)","99a074a9":"from sklearn.linear_model import LogisticRegression\nlog_reg = LogisticRegression(C=1,penalty='l2')\nlog_reg.fit(X_train,Y_train)\n\nlog_acc=accuracy_score(Y_test,log_reg.predict(X_test))\n\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,log_reg.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,log_reg.predict(X_test))*100))","ebdc2bc7":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=9)                #knn classifier\nknn.fit(X_train,Y_train)\n\nknn_acc = accuracy_score(Y_test,knn.predict(X_test))\n\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,knn.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,knn.predict(X_test))*100))\n","cd30fb7d":"from sklearn.svm import SVC\n\nsvm = SVC()\nsvm.fit(X_train,Y_train)    \n\nsvm_acc= accuracy_score(Y_test,svm.predict(X_test))\n\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,svm.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,svm.predict(X_test))*100))","ba7d63e5":"from sklearn.tree import DecisionTreeClassifier\n\ndtc = DecisionTreeClassifier(criterion='entropy',max_depth=5)\ndtc.fit(X_train, Y_train)\n\n\ndtc_acc= accuracy_score(Y_test,dtc.predict(X_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,dtc.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,dtc.predict(X_test))*100))\n","a55b19bc":"from sklearn.ensemble import GradientBoostingClassifier\n\ngbc = GradientBoostingClassifier()\ngbc.fit(X_train, Y_train)\n\n\ngbc_acc=accuracy_score(Y_test,gbc.predict(X_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,gbc.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,gbc.predict(X_test))*100))","e007b17d":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier(booster = 'gbtree', learning_rate = 0.1, max_depth=6,n_estimators = 10)\nxgb.fit(X_train,Y_train)\n\nxgb_acc= accuracy_score(Y_test,xgb.predict(X_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,xgb.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,xgb.predict(X_test))*100))","75116e29":"from sklearn.model_selection import train_test_split                #splitting the dataset\n                                                                 \ntrain,val_train,test,val_test = train_test_split(X,y,test_size=.50,random_state=3)","8437c725":"x_train,x_test,y_train,y_test = train_test_split(train,test,test_size=.20,random_state=3)","6a7aa96b":"#first model\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(x_train, y_train)","a56e3a6b":"# second model\nsvm = SVC()\nsvm.fit(x_train, y_train)","99ae49ae":"pred_1=knn.predict(val_train)\npred_2=svm.predict(val_train)\n\n# addition of 2 predictions\nresult = np.column_stack((pred_1,pred_2))","52e54401":"pred_test1=knn.predict(x_test)\npred_test2=svm.predict(x_test)\n\n\npredict_test=np.column_stack((pred_test1,pred_test2))","d85c999f":"# stacking classifier\n#RandomForestClasifier:- In this prediction of other 2 classification is taken as x value\nfrom sklearn.ensemble import RandomForestClassifier\nrand_clf = RandomForestClassifier()\nrand_clf.fit(result,val_test)                   \n                                                      ","98a1609b":"\nrand_clf.score(result,val_test)","d24cad07":"rand_acc=accuracy_score(y_test ,rand_clf.predict(predict_test))\nrand_acc","398f654d":"models = pd.DataFrame({\n    'Model': ['Logistic','KNN', 'SVC',  'Decision Tree Classifier',\n             'Gradient Boosting Classifier',  'XgBoost','Stacking'],\n    'Score': [ log_acc,knn_acc, svm_acc, dtc_acc, gbc_acc, xgb_acc,rand_acc,]\n})\n\nmodels.sort_values(by = 'Score', ascending = False)","48f37f34":"colors = [\"purple\", \"green\", \"orange\", \"magenta\",\"blue\",\"black\"]\n\nsns.set_style(\"whitegrid\")\nplt.figure(figsize=(16,8))\nplt.ylabel(\"Accuracy %\")\nplt.xlabel(\"Algorithms\")\nsns.barplot(x=models['Model'],y=models['Score'], palette=colors )\nplt.show()","ec849300":"**3.SVC**","79fd4bbb":"**7.Stacking**","2b5c6f62":"**5.GradientBoostingClassifier**","ca83996b":"<p style = \"font-size : 50px; color : #532e1c ; font-family : 'Comic Sans MS'; text-align : center; background-color : #bedcfa; border-radius: 5px 5px;\"><strong>Diabetes Prediction<\/strong><\/p>\n\n\n![image.png](attachment:14e6c730-d1dd-4b8a-869d-08b081c6c849.png)\n\nDiabetes, is a group of metabolic disorders in which there are high blood sugar levels over a prolonged period. Symptoms of high blood sugar include frequent urination, increased thirst, and increased hunger. If left untreated, diabetes can cause many complications. Acute complications can include diabetic ketoacidosis, hyperosmolar hyperglycemic state, or death. Serious long-term complications include cardiovascular disease, stroke, chronic kidney disease, foot ulcers, and damage to the eyes.","75a14298":"**1.Logistic Regression**","7e14113b":"**Correlation Matrix**\n\nVariables within a dataset can be related for lots of reasons. It can be useful in data analysis and modeling to better understand the relationships between variables. The statistical relationship between two variables is referred to as their correlation.\n\nA correlation could be positive, meaning both variables move in the same direction, or negative, meaning that when one variable\u2019s value increases, the other variables\u2019 values decrease. Correlation can also be neural or zero, meaning that the variables are unrelated.\n\n","dff8a4c1":"Can minimum value of below listed columns be zero (0)?\n\nOn these columns, a value of zero does not make sense and thus indicates missing value.\n\nFollowing columns or variables have an invalid zero value:\n\n* Glucose\n* BloodPressure\n* SkinThickness\n* Insulin\n* BMI","7ae10da5":"<a id = '1.0'><\/a>\n<p style = \"font-size : 30px; color : #4e8d7c ; font-family : 'Comic Sans MS';  \"><strong>Data Description :-<\/strong><\/p>\n\n<ul>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Pregnancies: Number of times pregnant<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Glucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>BloodPressure: Diastolic blood pressure (mm Hg)<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>SkinThickness: Triceps skin fold thickness (mm)<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Insulin: 2-Hour serum insulin (mu U\/ml)<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>BMI: Body mass index (weight in kg\/(height in m)^2)<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>DiabetesPedigreeFunction: Diabetes pedigree functionr<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Age: Age (years)<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Cabin : Cabin Number<\/strong><\/li>\n    <li style = \"color : #03506f; font-size : 18px; font-family : 'Comic Sans MS';\"><strong>Outcome: Class variable (0 or 1)<\/strong><\/li>\n<\/ul>\n\n\n\n  \n\n \n\n","b80ea2b7":"**4.DecisionTreeClassifier**","f07b281c":"**Checking Null Values**","308d65dc":"<p style = \"font-size : 50px; color : #532e1c ; font-family : 'Comic Sans MS'; text-align : center; background-color : #bedcfa; border-radius: 5px 5px;\"><strong>Exploratory Data Analysis<\/strong><\/p>","f80b6683":"Stacking is the ensemble technique.In this,two or more classifiers act as base model and the prediction of those will be the x value for the other model(i.e meta-data)\n ","61125ec7":"**2.KNearestNeighbors**","9945281b":"**Pairplot**\n\n**Pair plot is used to understand the best set of features to explain a relationship between two variables or to form the most separated clusters. It also helps to form some simple classification models by drawing some simple lines or make linear separation in our dataset.**","3ae0aec8":"<p style = \"font-size : 50px; color : #532e1c ; font-family : 'Comic Sans MS'; text-align : center; background-color : #bedcfa; border-radius: 5px 5px;\"><strong>Models<\/strong><\/p>","29b2e23d":"**6.XGBClassifier**"}}