{"cell_type":{"4e215b32":"code","61b1025f":"code","5ba74720":"code","c21f91c7":"code","83ea0303":"code","959c6ab5":"code","7fd80e47":"code","8762b95b":"code","81390da2":"code","569ce791":"code","6f47c244":"code","bd73c6ef":"code","612d4945":"code","dcee182d":"code","23d392dd":"code","da0366a4":"code","2a2bfa69":"code","75a57037":"markdown","a5527bbb":"markdown","1e70173f":"markdown","04333c22":"markdown"},"source":{"4e215b32":"# <1> \n# Import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os","61b1025f":"# <2>\n# read the data - only read the needed columns: CONTROL, TUITIONFEE_IN\ncolumn_list= ['CONTROL', 'TUITIONFEE_IN']\ndata = pd.read_csv(\"..\/input\/MERGED2017_18_PP.csv\", usecols=column_list)\ndata.info()","5ba74720":"# <3>\n# Filter the data so you have only public institutions\ndf = data[data['CONTROL']== 1]\nprint(df.head(20))","c21f91c7":"df.info()","83ea0303":"df.describe()","959c6ab5":"# <3>\n# Drop the colleges that either have zero tuition or have missing tuition. The remaining colleges constitute the population.\n\ndf = df.dropna()\ndf.info()","7fd80e47":"# <4> \n# Get a random sample of 100 colleges from the population\n# 1st method\npop = df.sample(100)\npop","8762b95b":"sample_mean = pop[\"TUITIONFEE_IN\"].mean()\nsample_std = pop['TUITIONFEE_IN'].std()\nprint(sample_mean)\nprint(round(sample_std,2))","81390da2":"# <4>\n# Random sample of 100 colleges\n# method 2\nSAMPLE_SIZE = 100         # This variable will be used through out the rest of cells\n\ndf_sample = df.sample(SAMPLE_SIZE)\nsample_mean = df_sample[\"TUITIONFEE_IN\"].mean()\nsample_mean                ","569ce791":"# <5> Calculate the sample mean and sample standard error\nsample_std = df_sample[\"TUITIONFEE_IN\"].std()\nround(sample_std, 2)","6f47c244":"# <6>\n# Calculate the confidence interval of the mean estimate at 68%, 95%. and 99.7%\nimport math\nstd_err = sample_std \/ math.sqrt(SAMPLE_SIZE)       # standard error\nstd_err","bd73c6ef":"# Calculate 68% Confidence Interval (CI) - one standard error from the population mean\n# 68% chances the population mean is within the sample_mean (+ or -) the standard error (SE)\nLCL_68 = sample_mean -  std_err\nUCL_68 = sample_mean +  std_err\n\nprint(\"Lower confidence limit at 68% confidence level = \", round(LCL_68,2))\nprint(\"Upper confidence limit at 68% confidence level = \", round(UCL_68,2))","612d4945":"# Calculate 95% Confidence Interval (CI) - one standard error from the population mean\n# 95% chances the population mean is within the sample_mean + or - 2 * the standard error (SE)\nLCL_95 = sample_mean -  2 * std_err\nUCL_95 = sample_mean +  2 * std_err\nprint(\"Lower confidence limit at 95% confidence level = \", round(LCL_95,2))\nprint(\"Upper confidence limit at 95% confidence level = \", round(UCL_95,2))","dcee182d":"# Calculate 99.7% Confidence Interval (CI) - one standard error from the population mean\n# 99.7% chances the population mean is within the sample_mean + or - 3 * the standard error (SE)\n\nLCL_997 = sample_mean -  3 * std_err\nUCL_997 = sample_mean +  3 * std_err\nprint(\"Lower confidence limit at 99.7% confidence level = \", round(LCL_997,2))\nprint(\"Upper confidence limit at 99.7% confidence level = \", round(UCL_997,2))","23d392dd":"# <7>\n# Calculate the population mean\nmean = df['TUITIONFEE_IN'].mean()\nround(mean,2)","da0366a4":"# Compare the population mean with the sample mean - display the difference\nmean_dif = mean - sample_mean\nround(mean_dif,2)","2a2bfa69":"# Check the confidence intervals and determine if the population mean within the confidence intervals calculated above.\n","75a57037":"The min value of Tuition fee is $480 so we concluded there have no zero tuition.","a5527bbb":"# Now we have a population of 1692 public colleges. ","1e70173f":"# Conclusion: Population mean equals to $5640.53, it is within the confidence interval of 68%, 95%, and 99.7%","04333c22":"There are missing values in Tuition fee. We need to drop the missing values."}}