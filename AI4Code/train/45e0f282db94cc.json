{"cell_type":{"3d3abafe":"code","60ee7499":"code","e3aa6fe8":"code","9a3619cc":"code","44bca330":"code","c32c6c02":"code","da7a8e1b":"code","24256fd6":"code","dfb61282":"code","628ab132":"code","8fa19b40":"code","50bed8a7":"code","fda528d8":"code","a4194479":"code","53998559":"code","8cab1549":"code","93ac09a9":"code","368fdfbb":"code","15dcea4e":"code","88f20556":"code","124525e7":"code","1ba50efc":"code","02a2c86f":"code","dcd6be49":"code","1ae9faf4":"code","554ef114":"code","dbe7b863":"code","c081b0fc":"code","1bff7c7f":"code","de1aaa0d":"code","8bc3a6f0":"code","bb4beed0":"code","f5b75024":"code","d7de18fb":"markdown","09e826d9":"markdown","60d9bac1":"markdown","c2753d8b":"markdown","fcabc454":"markdown","2c64998b":"markdown","1f54fde4":"markdown","0ad59e6c":"markdown","7809cd74":"markdown","415ec425":"markdown","f223ebe8":"markdown","568c0818":"markdown","6187ea14":"markdown","015a4721":"markdown","881dce2c":"markdown","13716a6f":"markdown","5b5d95e1":"markdown","83cecbba":"markdown","7261d722":"markdown","92633aed":"markdown","2abe18fb":"markdown","0b5750bb":"markdown"},"source":{"3d3abafe":"# from google.colab import files\n# upload = files.upload()","60ee7499":"# !pip install category_encoders==2.*","e3aa6fe8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.metrics import mean_absolute_error\nfrom category_encoders import OneHotEncoder\n","9a3619cc":"def wrangle(filepath):\n  df = pd.read_csv(filepath)\n  df.dropna(inplace=True)\n\n\n  # add the average of rooms in a house\n  df['ave_rooms'] = df['total_rooms'] \/ df['households']\n  # add the average bedrooms\n  df['ave_bedrooms'] = df['total_bedrooms']\/ df['households']\n  # add the population per houshold\n  df['pop_per_house'] = df['population'] \/ df['households']\n\n \n  return df\n\nfilename='..\/input\/california-housing-prices\/housing.csv'","44bca330":"df=wrangle(filename)\n\ndf.head()","c32c6c02":"\ndf.info()","da7a8e1b":"df.describe()","24256fd6":"plt.figure(figsize=(10,10))\nplt.scatter(x='latitude', y='longitude',c='population' ,cmap='Spectral', data = df)\nplt.xlabel('Latitude')\nplt.ylabel('Longitude')\nplt.title('Population Magnitude')\nplt.colorbar().set_label('Population')\nplt.show()","dfb61282":"median_hous_mean = df['median_house_value'].mean()\nmedian_hous_median = df['median_house_value'].median()\nplt.figure(figsize=(8,8))\nsns.distplot(df['median_house_value'],bins=60)\nplt.axvline(x=df['median_house_value'].mean(),color='green',label=f'mean: {round(median_hous_mean,2)}')\nplt.axvline(x=df['median_house_value'].median(),color='red',label=f'median: {round(median_hous_median,2)}')\nplt.xlabel('Median House Values')\nplt.ylabel('Number of Houses')\nplt.title('Median House Values for a block')\nplt.legend()\nplt.show();","628ab132":"houshold_mean = df['households'].mean()\nhoushold_median = df['households'].median()\nplt.figure(figsize=(10,10))\nsns.distplot(df['households'],bins=100)\nplt.axvline(x=df['households'].mean(),color='green',label=f'mean: {round(houshold_mean,2)}')\nplt.axvline(x=df['households'].median(),color='red',label=f'median: {round(houshold_median,2)}')\nplt.xlabel('Total number of households in a block')\nplt.ylabel('Number of Houses')\nplt.legend()\nplt.xlim(-100, 2500)\nplt.show()","8fa19b40":"houshold_mean = df['ave_rooms'].mean()\nhoushold_median = df['ave_rooms'].median()\nplt.figure(figsize=(10,10))\nsns.distplot(df['ave_rooms'], bins=100)\nplt.axvline(x=df['ave_rooms'].mean(),color='green',label=f'mean: {round(houshold_mean,2)}')\nplt.axvline(x=df['ave_rooms'].median(),color='red',label=f'median: {round(houshold_median,2)}')\nplt.xlabel('Total number of rooms in a house')\nplt.ylabel('Number of Houses')\nplt.title('number of rooms in the housis in a block')\nplt.legend()\nplt.xlim(0, 13)\nplt.show()","50bed8a7":"plt.figure(figsize=(10,10))\nplt.scatter(x='latitude', y='longitude',c='median_income' ,cmap='Spectral', data = df)\nplt.xlabel('Latitude')\nplt.ylabel('Longitude')\nplt.title('median income per block')\nplt.show()\n\nfig, (ax1,ax2,ax3) = plt.subplots(1,3, figsize=(15,8))\n# median income less than 4\nmask1 = df['median_income'] <=4\nx=df.loc[mask1]\nax1.scatter(x='latitude', y='longitude',c='median_income' ,cmap='Spectral', data = x)\nax1.set_xlabel('Latitude')\nax1.set_ylabel('Longitude')\nax1.set_title('median income per block less than 4')\n\n# median income more than 4 and less than 8\nx2=df.loc[(df['median_income'] >=4) & (df['median_income']<8)]\nax2.scatter(x='latitude', y='longitude',c='median_income' ,cmap='Spectral', data = x2)\nax2.set_xlabel('Latitude')\nax2.set_ylabel('Longitude')\nax2.set_title('median income per block between 4 and 8')\n\n\n# median income more than 8\nmask3 = df['median_income'] >=8\nx3=df.loc[mask3]\nax3.scatter(x='latitude', y='longitude',c='median_income' ,cmap='Spectral', data = x3)\nax3.set_xlabel('Latitude')\nax3.set_ylabel('Longitude')\nax3.set_title('median income per block more than 8')\n","fda528d8":"x= df['ocean_proximity'].value_counts()\nplt.figure(figsize=(8,8))\nplt.bar(x.index, x , width=0.6)\nplt.xlabel('ocean_proximity')\nplt.ylabel('housholds')\n\nfor index,data in enumerate(x):\n    plt.text(x=index , y =data+1 , s=f\"{data}\" , fontdict=dict(fontsize=15))\nplt.tight_layout()\n\nplt.show()","a4194479":"# housing_median_age\n\nhoushold_mean = df['housing_median_age'].mean()\nhoushold_median = df['housing_median_age'].median()\nplt.figure(figsize=(10,10))\nsns.distplot(df['housing_median_age'],bins=40)\nplt.axvline(x=df['housing_median_age'].mean(),color='green',label=f'mean: {round(houshold_mean,2)}')\nplt.axvline(x=df['housing_median_age'].median(),color='red',label=f'median: {round(houshold_median,2)}')\nplt.xlabel('Age')\nplt.ylabel('Number of Houses')\nplt.title('the houses ages')\nplt.legend()\nplt.show()","53998559":"df_corr = df.corr()\nmask = np.triu(np.ones_like(df_corr, dtype=np.bool))\nplt.figure(figsize=(15,10))\nsns.heatmap(df_corr ,mask=mask, linewidth =0.5,vmin=-1, vmax=1, annot=True, cmap = 'coolwarm' )\nplt.show()","8cab1549":"X = df.drop(columns=['median_house_value'])\ny = df['median_house_value']\n\nprint(f'X shape {X.shape}\\ny shape  {y.shape}')","93ac09a9":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state = 42)\n\nprint(f'X_train shape {X_train.shape} ----> y_train shape  {y_train.shape} \\nX_test shape {X_test.shape} ----> y_test shape  {y_test.shape}')","368fdfbb":"baseLine = [y_train.mean()]*y_train.shape[0]\n\nbaseline_mae= mean_absolute_error(y_train, baseLine)","15dcea4e":"print(\"the baseline MAE is \", round(baseline_mae,2))","88f20556":"model = make_pipeline(\n    OneHotEncoder(use_cat_names=True),\n    SimpleImputer(strategy='mean'),\n    StandardScaler(),\n    LinearRegression()\n)\n\nmodel.fit(X_train, y_train)","124525e7":"## train MAE \ntrain_set_MAE= mean_absolute_error(y_train, model.predict(X_train))\nprint(' the MAE for the train set is ', train_set_MAE)\n\n## test MAE\ntest_set_MAE = mean_absolute_error(y_test, model.predict(X_test))\nprint(' the MAE for the test set is ', test_set_MAE)","1ba50efc":"## train R^2 or accuracy \ntrain_set_r2 = model.score(X_train, y_train)\nprint(' the R^2 or accuracy for the train set is ', round(train_set_r2*100,2),'%')\n\n## test R^2\ntest_set_r2 = model.score(X_test, y_test)\nprint(' the R^2 or accuracy for the test set is ', round(test_set_r2*100,2),'%')","02a2c86f":"model_coeff = pd.DataFrame(model.named_steps['linearregression'].coef_, index= model.named_steps['onehotencoder'].get_feature_names(), columns =['coefficients_val'])\n\nmodel_coeff.sort_values(by='coefficients_val', ascending=False).head(4).plot(kind='barh')","dcd6be49":"sns.lmplot(x='median_income' , y= 'median_house_value', data=df, line_kws={'color':'red'}, ci=None)","1ae9faf4":"##the correlation\ndf['median_income'].corr(df['median_house_value'])","554ef114":"df['median_house_value'].skew()","dbe7b863":"df['log_median_house_value']= np.log(df['median_house_value'])","c081b0fc":"sns.lmplot(x='median_income' , y= 'log_median_house_value', data=df, line_kws={'color':'red'}, ci=None)","1bff7c7f":"df['log_median_house_value'].corr(df['median_income'])\n# correlation = column_1. corr(column_2)","de1aaa0d":"y_log = df['log_median_house_value']\nX_train_l, X_test_l, y_train_l, y_test_l = train_test_split(X,y_log,test_size=0.2,random_state = 42)\n\nprint(f'X_train shape {X_train_l.shape} ----> y_train shape  {y_train_l.shape} \\nX_test shape {X_test_l.shape} ----> y_test shape  {y_test_l.shape}')","8bc3a6f0":"model.fit(X_train_l,y_train_l)","bb4beed0":"## train MAE \ntrain_set_MAE= mean_absolute_error(y_train_l, model.predict(X_train_l))\nprint(' the MAE for the train set is ', train_set_MAE)\n\n## test MAE\ntest_set_MAE = mean_absolute_error(y_test_l, model.predict(X_test_l))\nprint(' the MAE for the test set is ', test_set_MAE)","f5b75024":"## train R^2\ntrain_set_r2 = model.score(X_train_l, y_train_l)\nprint(' the R^2 for the train set is ', round(train_set_r2*100,2))\n\n## test R^2\ntest_set_r2 = model.score(X_test_l, y_test_l)\nprint(' the R^2 for the test set is ', round(test_set_r2*100,2))","d7de18fb":"we can see that the correlation of the decreased after using the log function but we can also see that the point in the plot become very close to each other. then we need to fir the mode with the new value of the y and see if the accurase increased","09e826d9":"### Split Data","60d9bac1":"the average number of bedrooms in a block in california is 537.87","c2753d8b":"####Context\nThis is the dataset used in the second chapter of Aur\u00e9lien G\u00e9ron's recent book 'Hands-On Machine learning with Scikit-Learn and TensorFlow'. It serves as an excellent introduction to implementing machine learning algorithms because it requires rudimentary data cleaning, has an easily understandable list of variables and sits at an optimal size between being to toyish and too cumbersome.\n\nThe data contains information from the 1990 California census. So although it may not help you with predicting current housing prices like the Zillow Zestimate dataset, it does provide an accessible introductory dataset for teaching people about the basics of machine learning.\n\n\n#### Detail\n1. longitude: A measure of how far west a house is; a higher value is farther west\n\n2. latitude: A measure of how far north a house is; a higher value is farther north\n\n3. housingMedianAge: Median age of a house within a block; a lower number is a newer building\n\n4. totalRooms: Total number of rooms within a block\n\n5. totalBedrooms: Total number of bedrooms within a block\n\n6. population: Total number of people residing within a block\n\n7. households: Total number of households, a group of people residing within a home unit, for a block\n\n8. medianIncome: Median income for households within a block of houses (measured in tens of thousands of US Dollars)\n\n9. medianHouseValue: Median house value for households within a block (measured in US Dollars)\n\n10. oceanProximity: Location of the house w.r.t ocean\/sea","fcabc454":"### feature Engineering ","2c64998b":"Creating a horizontal barchart that plots the 4 most important coefficients for model, sorted by absolute value.","1f54fde4":"using heatmap to find the corrolation between the features","0ad59e6c":"### Model","7809cd74":"this show us the blocks where the midean income is:\n1. less than 4\n2. between 4 and 8\n3. more than 8","415ec425":"### BaseLine","f223ebe8":"## checking the model\n\nwe use the mean absolute error and the $R^2$ to check the model for train set and test set","568c0818":"### Communicate Results","6187ea14":"### imporoving the model","015a4721":"### imprt libabrires","881dce2c":"### Data Visualization","13716a6f":"### Data Description","5b5d95e1":"the average age of the houses is 28.63 year old","83cecbba":"as we see from the chart the median_income is the most important coeddicient.","7261d722":"checking the new model","92633aed":"## we can see the new model accuracy or R^2 imporoved by 1.72%\n\n","2abe18fb":"we plot the log values to see if ther is an imporovement","0b5750bb":"split data to train and test set"}}