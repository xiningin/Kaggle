{"cell_type":{"1a63792b":"code","af3a9c0e":"code","e41dc25a":"code","233f42bb":"code","535006f3":"code","6f187a34":"code","7338d4c5":"code","8cf2cab2":"code","5f3324fa":"code","28f41804":"code","0a2a4d36":"code","0c067f55":"code","c99a7f47":"code","93579c13":"code","137625aa":"code","9ad75c3b":"code","2e291304":"code","2e46357d":"code","3ffeb6b5":"code","501293a2":"code","2e548ce6":"code","f2576f12":"code","833715d6":"code","2e2f28b2":"code","c0873139":"code","f7c9c57a":"code","520fa0fc":"code","0475e9ba":"code","0d16f117":"code","e9b18a24":"code","227f08f9":"code","83ae19c2":"code","c622d2c7":"code","781f6eba":"code","5c78ce65":"markdown","cc10c80b":"markdown","467ea16f":"markdown","a321ce5d":"markdown","a42fb9af":"markdown","16c3d89c":"markdown","809e64e6":"markdown","6b5b1b63":"markdown","4576fb98":"markdown","4b292e13":"markdown","83e07544":"markdown","f9073179":"markdown","e5edcf79":"markdown","6434f368":"markdown","96a52774":"markdown","abe1f2c5":"markdown","8e555f02":"markdown","5a01a7af":"markdown"},"source":{"1a63792b":"# importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","af3a9c0e":"# reading the dataset\ndata=pd.read_csv(\"..\/input\/Mall_Customers.csv\")","e41dc25a":"# displaying first 5 rows\ndata.head()","233f42bb":"# (no. of rows, no. of columns)\ndata.shape","535006f3":"data.describe()","6f187a34":"# finding any null values in data\ndata.isnull().sum()","7338d4c5":"# Finding the number of males and females in the data\ndata.Gender.value_counts()","8cf2cab2":"# Visualising the number of males and females in the data\nsns.countplot(x=\"Gender\",data=data,palette=\"pastel\")\nplt.show()","5f3324fa":"# Computing minimum and maximum age of customers\nprint(min(data.Age))\nprint(max(data.Age))","28f41804":"# Visualising the age distribution of customers\nplt.figure(figsize=(25,8))\nsns.countplot(x=\"Age\",data=data,palette=\"pastel\")\nplt.show()","0a2a4d36":"# Visualising the income distribution of customers\nplt.figure(figsize=(25,8))\nsns.countplot(x=\"Annual Income (k$)\",data=data,palette=\"pastel\")\nplt.show()","0c067f55":"# Visualising the spending score of customers\nplt.figure(figsize=(25,8))\nsns.countplot(x=\"Spending Score (1-100)\",data=data,palette=\"pastel\")\nplt.show()","c99a7f47":"# Finding correaltion between all the parameters in the dataset.\nfig,ax = plt.subplots(figsize=(11,8))\nsns.heatmap(data.corr(),annot=True,cmap=\"Blues\" ,ax=ax)\nplt.show()","93579c13":"# Taking annual income and spending score in x to make clusters\nx=data.iloc[:,[3,4]]","137625aa":"# displaying first 5 rows of x\nx.head()","9ad75c3b":"# Using elbow method to find the optimal number of clusters.\nfrom sklearn.cluster import KMeans","2e291304":"# WCSS is Within Cluster Sum of Squares\nwcss=[]\nfor i in range (1,11):\n    kmeans=KMeans(n_clusters=i,init=\"k-means++\",max_iter=300,n_init=10,random_state=0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","2e46357d":"# Visualising elbow method\nplt.plot(range(1,11),wcss)\nplt.xlabel(\"No. of Clusters\")\nplt.ylabel(\"WCSS\")\nplt.title(\"Elbow Method\")\nplt.show()","3ffeb6b5":"# creating object kmeans of class KMeans()\nkmeans=KMeans(n_clusters=5,init=\"k-means++\",max_iter=300,n_init=10,random_state=0)","501293a2":"y_kmeans=kmeans.fit_predict(x)\ny_kmeans\n# it tells which data point belongs to which cluster (0,1,2,3,4)","2e548ce6":"y_kmeans.astype","f2576f12":"# converting x into ndarray to avoid errors\nx=np.array(x)","833715d6":"x.astype","2e2f28b2":"fig = plt.figure(figsize=(25, 10))\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","c0873139":"import scipy.cluster.hierarchy as sch","f7c9c57a":"# Visualising the dendrogram\nfig = plt.figure(figsize=(25, 10))\ndendrogram=sch.dendrogram(sch.linkage(x,method='ward'))\nplt.title(\"Dendrogram\")\nplt.xlabel(\"Customers\")\nplt.ylabel(\"Eucledian distance\")\nplt.show()","520fa0fc":"from sklearn.cluster import AgglomerativeClustering","0475e9ba":"# creating object hc of class AgglomerativeClustering()\nhc=AgglomerativeClustering(n_clusters=5,affinity=\"euclidean\",linkage=\"ward\")","0d16f117":"# it gives an array which tells as to which data point belongs to which cluster (0,1,2,3,4)\ny_hc=hc.fit_predict(x)","e9b18a24":"y_hc","227f08f9":"y_hc.astype","83ae19c2":"# converting x into ndarray to avoid errors\nx=np.array(x)","c622d2c7":"x.astype","781f6eba":"# Visualising the clusters\nfig = plt.figure(figsize=(25, 10))\nplt.scatter(x[y_hc == 0, 0], x[y_hc == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(x[y_hc == 1, 0], x[y_hc == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(x[y_hc == 2, 0], x[y_hc == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(x[y_hc == 3, 0], x[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(x[y_hc == 4, 0], x[y_hc == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","5c78ce65":"Customers with annual income of 54k and 78k make for the largest number of customers.","cc10c80b":"# Hierarchial Clustering","467ea16f":"Data Analysis : ","a321ce5d":"Applying K-Means :","a42fb9af":"So the optimal number of custers  = 5","16c3d89c":"So the optimal number of clusters = 5","809e64e6":"# K-Means Clustering","6b5b1b63":"Making clusters based on Annual income and Spending Score.","4576fb98":"Cluster 1 contains customers with high annual income but low spending score.\n\nCluster 2 contains customers with average annual income and average spending score.\n\nCluster 3 contains customers with high annual income and high spending score.\n\nCluster 4 contains customers with low annual income but high spending score.\n\nCluster 5 contains customers with low annual income and low spending score.","4b292e13":"Dendrogram : It is a plot between Euclidean distance (y-axis) and data points (x-axis)","83e07544":"#  Mall Customers Dataset","f9073179":"Applying Agglomerative Hierarchical Clustering : ","e5edcf79":"Visualising the cluster :","6434f368":"The number of females customers is more than the number of male customers","96a52774":"Customers with age 32 make for the largest number of customers.","abe1f2c5":"There is a big mall in a specific city that keeps information of its customers who subscribe to a membership card. In the membetrship card they provide following information : gender, age and annula income. The customers use this membership card to make all the purchases in the mall, so tha mall has the purchase history of all subscribed members and according to that they compute the Spending score of all customers. We have to segment these customers based on the details given. So we will be making clusters of cutomers using two techniques - \n\nK-Means Clustering\n\nHierarchical Clustering","8e555f02":"Elbow Method : ","5a01a7af":"The maximum spending score is 42."}}