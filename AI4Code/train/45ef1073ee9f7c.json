{"cell_type":{"55cdf5b1":"code","f4f07a59":"code","f3f1bdbd":"code","dfddc2f2":"code","ff55ff9c":"code","e66526e8":"code","d789e370":"code","850ec08e":"code","7fc53c6a":"code","201e90d4":"code","a489f0cd":"code","d234c8fd":"code","d056a05c":"code","e79765e5":"code","a5d3d5cf":"code","0fa2ff37":"code","d15d11f0":"code","2d513559":"code","5a826202":"code","e8d4cc2c":"code","26784f09":"code","f148f442":"code","fffde20f":"code","2cc43186":"code","35e1cf85":"code","200a26d8":"code","f82f0891":"code","33f79f02":"code","a57de63f":"code","9a012682":"code","48c68f5c":"code","f6c48b9c":"code","928e2503":"code","e5443423":"code","c739f257":"code","c85d224b":"code","f60f664d":"code","ba3f8d56":"markdown","cdbb12bd":"markdown","e142a4e9":"markdown","7b8f8837":"markdown","5a76e6ad":"markdown","06f12656":"markdown","733db07d":"markdown"},"source":{"55cdf5b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4f07a59":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","f3f1bdbd":"df = pd.read_csv('\/kaggle\/input\/wine-quality-dataset\/WineQT.csv')","dfddc2f2":"df.head()","ff55ff9c":"df.drop(['Id'], axis=1, inplace=True)","e66526e8":"df.head()","d789e370":"df.info()","850ec08e":"df.dtypes","7fc53c6a":"df.isnull().sum()","201e90d4":"df.describe()","a489f0cd":"df['quality'].nunique()  # Six types of qualities of wine","d234c8fd":"df['quality'].unique()","d056a05c":"df['quality'].value_counts()","e79765e5":"(df['quality'].value_counts()\/len(df))*100","a5d3d5cf":"sns.countplot(x='quality', data=df, palette='Set1')\nplt.title('Frequency Distribution of quality variable')\nplt.show()","0fa2ff37":"sns.boxplot(x=df['quality'], y=df['volatile acidity'])","d15d11f0":"df.columns","2d513559":"df.corr().style.format('{:.4}').background_gradient(cmap=plt.get_cmap('coolwarm'), axis=1)","5a826202":"X = df.iloc[:, :11]\ny = df.iloc[:, -1]","e8d4cc2c":"X.shape","26784f09":"y.shape","f148f442":"from imblearn.over_sampling import SMOTE\nsm = SMOTE()\nX_SMOTE, y_SMOTE = sm.fit_resample(X, y)","fffde20f":"X_SMOTE.shape","2cc43186":"y_SMOTE.shape","35e1cf85":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_SMOTE, y_SMOTE, test_size=0.2, random_state=0)","200a26d8":"print('X-train shape: ', X_train.shape)\nprint('y-train shape: ', y_train.shape)","f82f0891":"X_train","33f79f02":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=10, random_state=0)","a57de63f":"rf.fit(X_train, y_train)","9a012682":"y_pred = rf.predict(X_test)","48c68f5c":"from sklearn.metrics import accuracy_score\nprint('Model Accuracy with 10 decision trees: ', accuracy_score(y_test, y_pred))","f6c48b9c":"rfc_100 = RandomForestClassifier(n_estimators=100, random_state=0)\nrfc_100.fit(X_train, y_train)","928e2503":"y_pred = rfc_100.predict(X_test)","e5443423":"print('Model Accuracy with 100 decision trees: ', accuracy_score(y_test, y_pred))","c739f257":"from sklearn.metrics import confusion_matrix, classification_report","c85d224b":"cm = confusion_matrix(y_test, y_pred)\ncm","f60f664d":"print('Classification Report: \\n\\n', classification_report(y_test, y_pred))","ba3f8d56":"## Visualize Dataset","cdbb12bd":"## Confusion Matrix","e142a4e9":"## Random Forest Classifier model with 100 decision trees","7b8f8837":"## Classification Report","5a76e6ad":"## Dataset is not balance. So SMOTE is using for balancedata.","06f12656":"## Random Forest Classifier model with 10 decision trees","733db07d":"+ There are no missing values in any columns."}}