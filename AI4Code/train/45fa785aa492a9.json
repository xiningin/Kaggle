{"cell_type":{"a6a31033":"code","80904004":"code","2872e96d":"code","3d5c7afb":"code","795dd9ef":"code","b65d6159":"code","114c635e":"code","7dcbbbf0":"code","7b11eaba":"code","bd5361f5":"code","daed5dcb":"code","8d979700":"code","0001c30b":"code","96c726ed":"code","59e8853b":"code","98768cd3":"code","f8a6cb9c":"code","f12b15b3":"code","358d3fb8":"code","5dc13528":"code","8c883eb3":"code","93217544":"code","f9c2e5fb":"code","d9badecb":"code","e7e77844":"code","284e096e":"markdown","6b982a7a":"markdown","831de708":"markdown","7f19839a":"markdown","0756c3dd":"markdown","366e2f21":"markdown"},"source":{"a6a31033":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.cluster.hierarchy import linkage, dendrogram\nfrom sklearn.cluster import KMeans, AgglomerativeClustering, AffinityPropagation\nfrom sklearn.mixture import GaussianMixture \n\nimport os\n#print(os.listdir(\"..\/input\"))","80904004":"data = pd.read_csv(\"..\/input\/titanic\/train.csv\",sep=\",\")","2872e96d":"data1 = data[['Survived','Pclass','Age','SibSp','Parch','Fare']]","3d5c7afb":"data1.head()","795dd9ef":"data1.info()","b65d6159":"data2=data1.dropna(axis=0).reset_index(drop=True)","114c635e":"def doAgglomerative(X, nclust=2):\n    model = AgglomerativeClustering(n_clusters=nclust, affinity = 'euclidean', linkage = 'ward')\n    clust_labels1 = model.fit_predict(X)\n    return (clust_labels1)\n\nclust_labels1 = doAgglomerative(data2, 5)\nagglomerative = pd.DataFrame(clust_labels1)\ndata2.insert((data2.shape[1]),'agglomerative',agglomerative)","7dcbbbf0":"data2.groupby('agglomerative').mean()","7b11eaba":"fig = plt.figure()\nax = fig.add_subplot(111)\nscatter = ax.scatter(data2['Age'],data2['Fare'],c=agglomerative[0],s=50)\nax.set_title('Agglomerative Clustering')\nax.set_xlabel('Age')\nax.set_ylabel('Fare')\nplt.colorbar(scatter)","bd5361f5":"del data2\ndata2=data1.dropna(axis=0).reset_index(drop=True)","daed5dcb":"def doKmeans(X, nclust=2):\n    model = KMeans(nclust)\n    model.fit(X)\n    clust_labels = model.predict(X)\n    cent = model.cluster_centers_\n    return (clust_labels, cent)\n\nclust_labels, cent = doKmeans(data2, 5)\nkmeans = pd.DataFrame(clust_labels)\ndata2.insert((data2.shape[1]),'kmeans',kmeans)","8d979700":"data2.groupby('kmeans').mean()","0001c30b":"fig = plt.figure()\nax = fig.add_subplot(111)\nscatter = ax.scatter(data2['Age'],data2['Fare'],c=kmeans[0],s=50)\nax.set_title('K-Means Clustering')\nax.set_xlabel('Age')\nax.set_ylabel('Fare')\nplt.colorbar(scatter)","96c726ed":"del data2\ndata2=data1.dropna(axis=0).reset_index(drop=True)","59e8853b":"def doAffinity(X):\n    model = AffinityPropagation(damping = 0.5, max_iter = 250, affinity = 'euclidean')\n    model.fit(X)\n    clust_labels2 = model.predict(X)\n    cent2 = model.cluster_centers_\n    return (clust_labels2, cent2)\n\nclust_labels2, cent2 = doAffinity(data2)\naffinity = pd.DataFrame(clust_labels2)\ndata2.insert((data2.shape[1]),'affinity',affinity)","98768cd3":"data2.groupby('affinity').mean()","f8a6cb9c":"fig = plt.figure()\nax = fig.add_subplot(111)\nscatter = ax.scatter(data2['Age'],data2['Fare'],c=affinity[0],s=50)\nax.set_title('Affinity Clustering')\nax.set_xlabel('Age')\nax.set_ylabel('Fare')\nplt.colorbar(scatter)","f12b15b3":"del data2\ndata2=data1.dropna(axis=0).reset_index(drop=True)","358d3fb8":"def doGMM(X, nclust=2):\n    model = GaussianMixture(n_components=nclust,init_params='kmeans')\n    model.fit(X)\n    clust_labels3 = model.predict(X)\n    return (clust_labels3)\n\nclust_labels3 = doGMM(data2,5)\ngmm = pd.DataFrame(clust_labels3)\ndata2.insert((data2.shape[1]),'Guassian',gmm)","5dc13528":"data2.groupby('Guassian').mean()","8c883eb3":"fig = plt.figure()\nax = fig.add_subplot(111)\nscatter = ax.scatter(data2['Age'],data2['Fare'],c=gmm[0],s=50)\nax.set_title('Affinity Clustering')\nax.set_xlabel('Age')\nax.set_ylabel('Fare')\nplt.colorbar(scatter)","93217544":"del data2\ndata2=data1.dropna(axis=0).reset_index(drop=True)","f9c2e5fb":"merg = linkage(data2[0:10], method=\"ward\")\nprint(merg)","d9badecb":"fig = plt.figure()\nax = fig.add_subplot(111)\ndendrogram(merg, leaf_rotation = 0)\nax.set_title('Hierarchical Clustering')\nax.set_xlabel('data points')\nax.set_ylabel('euclidean distance')","e7e77844":"data2[0:10]","284e096e":"# Hierarchical Clustering","6b982a7a":"# Affinity Clustering","831de708":"# Guassian Mixture Model Clustering","7f19839a":"# Agglomerative Clustering","0756c3dd":"# K-Menas Clustering","366e2f21":"## Titanic Clustering Collection\n* Agglomerative Clustering\n* K-Menas Clustering\n* Affinity Clustering\n* Guassian Mixture Model Clustering\n* Hierarchical Clustering"}}