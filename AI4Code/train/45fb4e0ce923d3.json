{"cell_type":{"da0d9260":"code","f3316cfe":"code","5dfde0cb":"code","4eaf5cfe":"code","2763621d":"code","36868816":"code","d6fdc8f3":"code","b7201006":"code","e7ba437c":"code","17378dce":"code","e9405271":"code","3e0e7fe9":"code","42768447":"code","69e38c94":"code","59a35e8a":"code","083b46f7":"code","6ac862ea":"code","9dfa4afe":"code","24db70a6":"markdown","c72b4bc5":"markdown","f09fe2ca":"markdown","2024470c":"markdown"},"source":{"da0d9260":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f3316cfe":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler,PolynomialFeatures\n%matplotlib inline","5dfde0cb":"df = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")\ndf.head()","4eaf5cfe":"df.describe()","2763621d":"df.drop('id', axis=1, inplace=True)\ndf.describe()","36868816":"df.isnull().sum()","d6fdc8f3":"df.corr()","b7201006":"def correlation_heatmap(df):\n    _, ax = plt.subplots(figsize = (15, 10))\n    colormap= sns.diverging_palette(220, 10, as_cmap = True)\n    sns.heatmap(df.corr(), annot=True, cmap = colormap)\n\ncorrelation_heatmap(df)  ","e7ba437c":"df.corr()['price'].sort_values()","17378dce":"sns.regplot(x=df['price'], y=df['bedrooms'])","e9405271":"sns.regplot(x=df['price'], y=df['sqft_living'])","3e0e7fe9":"sns.scatterplot(x=df['price'], y=df['bedrooms'], hue=df['waterfront'])","42768447":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]\nX = df[features]\ny = df[['price']]\nlm = LinearRegression()\nlm.fit(X, y)\nlm.predict(X)","69e38c94":"lm.score(X, y)","59a35e8a":"Input=[('scale',StandardScaler()),('polynomial', PolynomialFeatures(include_bias=False)),('model',LinearRegression())]","083b46f7":"pipe=Pipeline(Input)\npipe","6ac862ea":"pipe.fit(X,y)","9dfa4afe":"pipe.score(X,y)","24db70a6":"## Model","c72b4bc5":"## Using Polynomial Regression","f09fe2ca":"## EDA","2024470c":"## Data Wrangling"}}