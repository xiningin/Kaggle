{"cell_type":{"8eb64aa4":"code","4b5fa1fd":"code","9de0aba3":"code","2392412c":"code","3aeab8d5":"code","2b40c45e":"code","eeb6a923":"code","677aeb1c":"code","46f983e2":"code","3fabc53f":"code","6c96b3c6":"code","235adc16":"code","09906cb8":"code","a6a8b19c":"code","d2566e85":"code","7280f93e":"code","915bb79e":"code","405403cf":"code","464e1133":"code","37074f4c":"code","3d439311":"code","dcd99098":"code","abb79ed8":"markdown","f7981730":"markdown","2f05fb4c":"markdown","6e720492":"markdown","097df010":"markdown","b54e1b23":"markdown","017359c8":"markdown","980ec0c8":"markdown","830d9beb":"markdown","e7aa3398":"markdown"},"source":{"8eb64aa4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport numpy as np\nimport os\nimport pandas as pd\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sn; sn.set(font_scale=1)\nfrom sklearn.utils import shuffle\nimport matplotlib.pyplot as plt           \nimport cv2\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Convolution2D, MaxPooling2D, Flatten,Dense,Dropout,BatchNormalization, Input\nfrom tensorflow.keras.models import Sequential, Model\nfrom tqdm import tqdm\nfrom IPython.display import FileLink\n\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b5fa1fd":"import os\nkue_klepon_dir = os.path.join('..\/input\/kue-indonesia\/train\/')\n\nprint('total training kue klepon images:', len(os.listdir(kue_klepon_dir)))\n\nkue_klepon_files = os.listdir(kue_klepon_dir)\nprint(kue_klepon_files[:10])","9de0aba3":"classes = os.listdir(kue_klepon_dir)\nclass_names_label = {class_name:i for i, class_name in enumerate(classes)}","2392412c":"labels = []\nfor folder in os.listdir(kue_klepon_dir):\n    label = class_names_label[folder]\n    for file in tqdm(os.listdir(os.path.join(kue_klepon_dir, folder))):\n        labels.append(label)","3aeab8d5":"no_of_images = []\nfor i in range(8):\n    comp_path = kue_klepon_dir + kue_klepon_files[i]\n    no_of_images.append(len(os.listdir(comp_path)))\nprint(no_of_images)\n","2b40c45e":"plt.figure(figsize = (16,6))\nplt.xticks(rotation = 90)\nplt.bar(kue_klepon_files, no_of_images)","eeb6a923":"label1 = kue_klepon_dir + os.listdir(kue_klepon_dir)[0]","677aeb1c":"img = plt.imread(label1 + '\/' + os.listdir(label1)[3])\nplt.imshow(img)","46f983e2":"img_height = []\nimg_width = []\nfor i in range(len(os.listdir(label1))):\n    img = plt.imread(label1 + '\/' + os.listdir(label1)[i])\n    img_height.append(img.shape[0])\n    img_width.append(img.shape[1])","3fabc53f":"plt.style.use('ggplot')\nplt.figure(figsize = (10,5))\nplt.hist(img_height, bins = 20)","6c96b3c6":"plt.style.use('ggplot')\nplt.figure(figsize = (10,5))\nplt.hist(img_width, bins = 20, color = 'blue')","235adc16":"batch_size = 8\nimg_height = 300\nimg_width = 300","09906cb8":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  kue_klepon_dir,\n  validation_split=0.25,\n  subset=\"training\",\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)","a6a8b19c":"val_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  kue_klepon_dir,\n  validation_split=0.25,\n  subset=\"validation\",\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)","d2566e85":"plt.figure(figsize=(18, 14))\nfor images, labels in train_ds.take(1):\n  for i in range(8):\n    ax = plt.subplot(5, 5, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(classes[labels[i]])\n    plt.axis(\"off\")","7280f93e":"normalization_layer = tf.keras.layers.experimental.preprocessing.Rescaling(1.\/255)","915bb79e":"data_augmentation = tf.keras.Sequential(\n  [\n    tf.keras.layers.experimental.preprocessing.RandomFlip(\"horizontal\", \n                                                 input_shape=(img_height, \n                                                              img_width,\n                                                              3)),\n    tf.keras.layers.experimental.preprocessing.RandomRotation(0.1),\n    tf.keras.layers.experimental.preprocessing.RandomZoom(0.1),\n  ]\n)","405403cf":"base_model=tf.keras.applications.EfficientNetB3(include_top=False, weights=\"imagenet\"\n               ,input_shape=(img_height, img_width, 3), pooling='max')\nx = base_model.output\n\nx = Flatten()(x)\nx = Dense(512, activation=\"relu\")(x)\nx = Dropout(0.5)(x)\npredictions = Dense(107, activation=\"softmax\")(x)\nmodel = Model(base_model.input, predictions)","464e1133":"model.compile(\n  optimizer='adam',\n  loss = 'sparse_categorical_crossentropy',\n  metrics=['accuracy'])","37074f4c":"history = model.fit(train_ds, validation_data=val_ds, epochs=40)","3d439311":"def plotLearningCurve(history,epochs):\n  epochRange = range(1,epochs+1)\n  plt.figure(figsize = (12,6))\n  plt.plot(epochRange,history.history['accuracy'])\n  plt.plot(epochRange,history.history['val_accuracy'])\n  plt.title('Model Accuracy')\n  plt.xlabel('Epoch')\n  plt.ylabel('Accuracy')\n  plt.legend(['Train','Validation'],loc='upper left')\n  plt.show()\n\n  plt.figure(figsize = (12,6))\n  plt.plot(epochRange,history.history['loss'])\n  plt.plot(epochRange,history.history['val_loss'])\n  plt.title('Model Loss')\n  plt.xlabel('Epoch')\n  plt.ylabel('Loss')\n  plt.legend(['Train','Validation'],loc='upper left')\n  plt.show()","dcd99098":"plotLearningCurve(history, 40)","abb79ed8":"Pada code dibawah ini, akan menampilkan plot distribusi, tinggi serta lebar dari kategori gambar yang diambil didalam direktori kue-indonesia.","f7981730":"Pada kode dibawah kali iini, kita akan mengambil nomor images yang ada dengan menggunakan cara looping didalam range yang kemudian akan mengecek kedalam direktori dan isi masing-masing pada direktori tersebut yang kemudian akan di tampilkan hasil tersebut.","2f05fb4c":"dibawah iini kita akan melakukan training untuk setiap gambar kue yang telah dilakukan plotting sebelunya dan dianalisa.","6e720492":"layer dari data tersebut akan dilakukan rescaling dengan cara di normalisasikan menggunakan keras","097df010":"Pada kode dibawah ini, ketika kita sudah mengambil nomor images dengan menggunakan cara looping didalam range, maka akan ditampilkan Barcontainer object yang menampilkan apakah nama-nama kue-indonesia yang ada didalam direktori itu seimbang (balanced) atau tidak.","b54e1b23":"Pada code dibawah ini, kita akan mengambil data train dari dalam direktori kue-indonesia, kemudian menampilkan beberapa jenis kue yang ada, tetapi hanya menampilkan nama filenya saja bukan berupa gambar.","017359c8":"data yang akan dilakukang pengklasifikasian, menggunakan keras preprocessiinig","980ec0c8":"setelah itu, kita akan menggunakan matplotlib.pyplot untuk membuat sebuat mode plotting untuk mengukur setiap axes dari sebuah gambar","830d9beb":"setelah dilakukan preprocessing dengan keras, hasiil dari data tersebut akan coba ditampilkan dengan  plotting untuk menampilkan figure model gambarnya dari hasil train","e7aa3398":"setelah itu, kita akan membuat label dengan cara mengambil directory path dari parent semua kue dan kemudian akan ditambahkan dengan menggunakan list"}}