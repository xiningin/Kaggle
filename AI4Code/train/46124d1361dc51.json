{"cell_type":{"39a9b502":"code","e4168911":"code","99bee81c":"code","f34bcef8":"code","a399af83":"code","242c015d":"code","67f0c18d":"code","17c8b8ba":"code","fa4d2e80":"markdown","70c6a19c":"markdown","b91ee2ca":"markdown","e2c0234a":"markdown","3f9ca62e":"markdown","fb012a9a":"markdown","ffa8252f":"markdown"},"source":{"39a9b502":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport os \nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n\n        ","e4168911":"item_categories = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitems = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nsales_train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv',parse_dates = ['date'])\nsample_submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nshops = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ndata_test = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')\n\nsales_train.info()\nsales_train.head()","99bee81c":"plt.figure(figsize=(10,10))\nplt.scatter(sales_train.item_cnt_day,sales_train.item_price)\nplt.show()","f34bcef8":"sales_train = sales_train[sales_train.item_price<40000]\nsales_train = sales_train[sales_train.item_cnt_day<200]\nsales_train = sales_train[sales_train.item_cnt_day>-1]\ncolumns = ['date', 'date_block_num', 'shop_id', 'item_id','item_price','item_cnt_day']\nsales_train.drop_duplicates(columns,keep='first', inplace=True)\n\n","a399af83":"plt.figure(figsize=(10,10))\nplt.scatter(sales_train.item_cnt_day,sales_train.item_price)\nplt.show()","242c015d":"\ndata = sales_train[['item_cnt_day','item_price']]\ndata.info()\ndata.head()","67f0c18d":"x = data.iloc[:, :-1].values\ny = data.iloc[:, 1].values\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 1\/3, random_state = 123, shuffle=1)\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\n\nplt.scatter(X_train, y_train, color = 'red')\nplt.plot(X_train, model.predict(X_train), color = 'blue')\nplt.xlabel('item_cnt_day')\nplt.ylabel('item_price')\nplt.show()\n\n\n","17c8b8ba":"r2_score(y_test, y_pred)","fa4d2e80":"R^2 skoru ile de\u011ferlendirme","70c6a19c":"Daha ba\u015far\u0131l\u0131 sonu\u00e7 elde etmek i\u00e7in outlinerlar\u0131 ve duplicateleri silme","b91ee2ca":"Verileri csv'den alma ve kullan\u0131lacak verinin bilgileri g\u00f6sterme","e2c0234a":"Silme i\u015fleminden sonraki veri durumu","3f9ca62e":"Kullan\u0131lacak verinin plot grafi\u011fi","fb012a9a":"Lineer regresyon ile tahmin","ffa8252f":"Silme i\u015fleminden sonraki grafik"}}