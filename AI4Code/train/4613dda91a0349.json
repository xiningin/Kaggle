{"cell_type":{"3deb8389":"code","84ac3016":"code","cd0b95e1":"code","f15cf0f3":"code","3d9d75a2":"code","dce51355":"code","02683692":"code","1fbb61dd":"code","2eeb9f8c":"code","ea1a79d8":"code","432b9e8b":"code","c680bdf5":"code","00a22860":"code","272d1d30":"code","723b4ba3":"code","a76433ff":"code","b4cd3ee2":"code","169237b2":"code","107369bb":"markdown","8ef5792b":"markdown","67a25b39":"markdown","57e37188":"markdown","7137c7bc":"markdown","558dddc2":"markdown","d6a69fad":"markdown","6329d11c":"markdown","df291bfb":"markdown","b40215a6":"markdown","4136a291":"markdown","7cc5da58":"markdown","2b2daaeb":"markdown"},"source":{"3deb8389":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport pydicom","84ac3016":"root_dir = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\"\ntrain_dir = os.path.join(root_dir,'train')\ntest_dir = os.path.join(root_dir,'test')\ntrain_csv_path = os.path.join(root_dir,'train.csv')\ntest_csv_path = os.path.join(root_dir,'test.csv')","cd0b95e1":"df_train = pd.read_csv(train_csv_path)\ndf_test = pd.read_csv(test_csv_path)","f15cf0f3":"print(df_train.shape)\nprint(df_test.shape)","3d9d75a2":"for col in df_train.columns:\n    print(\"Number of null values in column {} is {}\".format(col,sum(df_train[col].isnull())))","dce51355":"df_train.groupby(['Patient']).count()","02683692":"list_patient_ids = list(df_train['Patient'].unique())\nprint(\"Number of patients: {}\".format(len(list_patient_ids)))","1fbb61dd":"df_train.columns","2eeb9f8c":"for pat_id in list_patient_ids:    \n    age_unique = len(df_train.loc[df_train['Patient']==pat_id,'Age'].unique())\n    smoke_unique = len(df_train.loc[df_train['Patient']==pat_id,'SmokingStatus'].unique())    \n    sex_unique = len(df_train.loc[df_train['Patient']==pat_id,'Sex'].unique())\n    \n    if sex_unique !=1:\n        print(\"Please check sex column for patient id:\".format(pat_id))\n    if age_unique !=1:\n        print(\"Please check age column for patient id:\".format(pat_id))\n    if smoke_unique !=1:\n        print(\"Please check smoking_status column for patient id:\".format(pat_id))","ea1a79d8":"pat_info_dict = {}\nfor pat_id in list_patient_ids:    \n    pat_info_dict[pat_id] = {}\n    pat_info_dict[pat_id]['age'] = list(df_train.loc[df_train['Patient']==pat_id,'Age'].unique())[0]\n    pat_info_dict[pat_id]['sex'] = list(df_train.loc[df_train['Patient']==pat_id,'Sex'].unique())[0]\n    pat_info_dict[pat_id]['smokingstatus'] = list(df_train.loc[df_train['Patient']==pat_id,'SmokingStatus'].unique())[0]\n    smoke_unique = len(df_train.loc[df_train['Patient']==pat_id,'SmokingStatus'].unique())","432b9e8b":"df_pat_analysis = df_train.loc[:,['Patient','Age','Sex','SmokingStatus']].drop_duplicates()","c680bdf5":"sns.countplot(df_pat_analysis['Sex'])","00a22860":"sns.distplot(df_pat_analysis['Age'])","272d1d30":"sns.countplot(df_pat_analysis['SmokingStatus'])","723b4ba3":"#ax = fig.add_subplot(111)\nfig, ax =plt.subplots(nrows=2,ncols=1,figsize=(16,16),squeeze=False)\n#ax[0,0].scatter(xdf['landmark_id'],xdf['count'],c=xdf['landmark_id'],s=50)\n#ax[0,0].tick_params(axis='x',rotation=45)\n#ax[0,0].title.set_text('scatter plot: landmark_id v\/s count ')\n\nsns.countplot(x=\"Age\", hue=\"SmokingStatus\", data=df_pat_analysis.loc[df_pat_analysis['Sex']==\"Male\"],ax=ax[0,0])\nax[0,0].title.set_text('Plot: Smoking status v\/s Age distribution (Male)')\n\nsns.countplot(x=\"Age\", hue=\"SmokingStatus\", data=df_pat_analysis.loc[df_pat_analysis['Sex']==\"Female\"],ax=ax[1,0])\nax[1,0].title.set_text('Plot: Smoking status v\/s Age distribution (Female)')\n\nfig.tight_layout(pad=3.0)\n\n\nplt.show()","a76433ff":"df_train.columns","b4cd3ee2":"fig, ax = plt.subplots(nrows=1,ncols=1,figsize=(16,8),squeeze=False)\nsns.distplot(df_train['Weeks'],ax =ax[0,0])","169237b2":"patient_id = random.choice(list_patient_ids)\ndf_pat = df_train.loc[df_train['Patient']==patient_id]\n\nplt.figure(figsize=(20,10))\n# Changing default values for parameters individually\nplt.rc('lines', linewidth=2, linestyle='-', marker='.')\nplt.rcParams['lines.markersize'] = 20\nplt.rcParams['font.size'] = '20.0'\n \n#Plot a line graph\nplt.plot(df_pat['Weeks'],df_pat['FVC'])\n\ntypical_fvc=0\nfor x,y in zip(df_pat['Weeks'],df_pat['FVC']):\n    \n    percent_mark = round(list(df_pat.loc[df_pat['Weeks']==x].loc[df_pat['FVC']==y]['Percent'])[0],2)\n    disp_str = \"{} %\".format(percent_mark)\n    typical_fvc = round(y*100\/percent_mark,2)\n    #print(\"Typical FVC value is {}\".format(typical_fvc))\n    plt.text(x,y,disp_str)\n\n\n    \n# Lets plot the CT Scan week \nct_scan_line = range(int(min(df_pat['FVC'])), int(max(df_pat['FVC'])))\nmax_len = len(ct_scan_line)\nplt.plot([0]*max_len,ct_scan_line, marker = '|')\n\n\n# Add labels and title\nplt.title(\"Week wise analysis for \\n Patient: {} \\n Age: {}\\n Sex: {}\\n Smoking Status: {} \\n Typical FVC Value: {}ml\".format(pat_id,pat_info_dict[pat_id]['age'],pat_info_dict[pat_id]['sex'],pat_info_dict[pat_id]['smokingstatus'],typical_fvc))\nplt.xlabel(\"Week#\")\nplt.ylabel(\"FVC\")\n \nplt.show()","107369bb":"As a next step, I will try to add CT Scan analysis on to the above patient card.","8ef5792b":"### Lets first try to find number of patients:","67a25b39":"We dont have any such discrepancies, so 'age', 'smokingstatus' and 'sex' are constant for a given patient id.\n\nSo lets create a patient information dictionary, for future use","57e37188":"Distribution Inferences: \n1. Distibrution of age is following more  or less a gaussian distribution with mean center around the age of 65-70\n2. You have a greater count of male patients and \"Ex-smoker\" patients\n3. You can see a dominance of \"Ex-smoker\" class within male patients, however \"Never-Smoked\" tends to edge out \"Ex-smoker\" in the female patients","7137c7bc":"Yet another meaningful and interesting Kaggle competition, wherein this time the aim is to predict a patient\u2019s severity of decline in lung function.\n\nIn this notebook, we aim to perform an EDA of the given traincsv dataset","558dddc2":"Work in Progress items","d6a69fad":"### Lets check the sanity of the datasets: i.e. null values, shape etc","6329d11c":"# Patient Card","df291bfb":"With a fair understanding of distribution of patient attributes, lets now incorporate the remaining attributes which shed light on the their visits and lung capacity i.e.\n\"Weeks\"\n\"FVC\", and\n\"Percent\"","b40215a6":"### Now lets analyze the distribution","4136a291":"So we have datapoints pertaining to 176 patients. To be specific, we know the below related to these 176 patients:\n\nA. ID  => unique id for each patient - also the name of the DICOM folder in train\n\nB. Weeks => the relative number of weeks before\/after the baseline CT was taken. This is the same baseline CT present in the DICOM folder \n\nC. FVC => the recorded lung capacity in ml\n\nD. Percent => a computed field which approximates the patient's FVC as a percent of the typical FVC for a person of similar characteristics\n\nE. Age => age of the patient\n\nF. Sex => gender of the patient\n\nG. Smoking Status => whether patient smokes or not","7cc5da58":"We will check in the dataset whether for a given patient, is there a change in values for:\n\na. age  - probably during the course, there could have been a change in person's age\n\nb. smokingstatus - checking whether there was any change in smoking status for the patient e.g whether the patient went to 'Never Smokes' to 'Currently Smokes' or 'Ex smoker' to 'Currently Smokes'\n\nc. sex - for data sanity\n\nThis check wouldnt make sense if above patient attributes were only taken once. Since we do not know this, its best to check to eliminate any data discrepancies","2b2daaeb":"# Introduction"}}