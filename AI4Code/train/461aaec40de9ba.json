{"cell_type":{"ad7b518c":"code","a30d61ef":"code","88859ff5":"code","2bf488ff":"code","3b13ce89":"code","b3cf3254":"code","91bfa769":"code","abf5c00e":"code","c9a956d6":"code","61060093":"code","b7afb21f":"code","33129dcf":"code","96605b26":"code","e5f6c94e":"code","92ef8ed6":"code","8b9b35ca":"code","cadac2aa":"code","b394aa6b":"code","0dd04383":"code","e0ad013f":"code","ed3b90da":"code","cea1bc10":"code","a9a04809":"code","39be98aa":"code","f3ec5ab4":"code","afbc1d47":"code","00699697":"code","a928176a":"code","a9fce711":"code","8c904bc0":"code","a7733761":"code","479a4d19":"code","1af34695":"code","a909c161":"code","1c6b580f":"code","6bd909e0":"code","7d2f3ab4":"code","eacb4363":"code","0acd57fd":"markdown","d1e53a25":"markdown","a9a12087":"markdown","66bbc83c":"markdown","1fc8038d":"markdown","b78eb997":"markdown","68cb3a22":"markdown","1873046c":"markdown","0daa5d57":"markdown","10cbcc3d":"markdown","b9ae8d41":"markdown","82523391":"markdown","5ec9112d":"markdown","9c60dfb3":"markdown","d6bcf18d":"markdown","93c8b989":"markdown","ed1da0b5":"markdown","7b413a24":"markdown","74f746c2":"markdown","d09dde62":"markdown","ea37ed14":"markdown","a0ca9ae9":"markdown","a331fae2":"markdown","3a03c175":"markdown","15fa9c0f":"markdown","1dfe9034":"markdown","43bba978":"markdown","7b6f62c1":"markdown","6f541273":"markdown","8fa80865":"markdown","feb0ffd4":"markdown","b547171a":"markdown","f0c86e21":"markdown","ac8f92c7":"markdown","c7cf2f24":"markdown","93e91bac":"markdown","5586e48e":"markdown","6db538c5":"markdown","f276692e":"markdown"},"source":{"ad7b518c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a30d61ef":"heart_full = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\n\nheart_full","88859ff5":"import matplotlib.pyplot as plt\nimport seaborn as sns","2bf488ff":"counts = heart_full['DEATH_EVENT'].value_counts()\n\ncounts","3b13ce89":"counts[1] \/ counts[0] ","b3cf3254":"heart_died = heart_full[heart_full['DEATH_EVENT'] == 1]\nheart_lived = heart_full[heart_full['DEATH_EVENT'] == 0]","91bfa769":"heart_died","abf5c00e":"heart_died.describe()","c9a956d6":"sns.distplot(heart_died['age'])\nsns.distplot(heart_lived['age'].sample(96))\n\nplt.legend(['died', 'lived'])","61060093":"sns.distplot(heart_died['creatinine_phosphokinase'])\nsns.distplot(heart_lived['creatinine_phosphokinase']. sample(96))\n\nplt.legend(['died', 'lived'])","b7afb21f":"sns.distplot(heart_died['ejection_fraction'])\nsns.distplot(heart_lived['ejection_fraction'].sample(96))\n\nplt.legend(['died', 'lived'])","33129dcf":"sns.distplot(heart_died['platelets'])\nsns.distplot(heart_lived['platelets'].sample(96))\n\nplt.legend(['died', 'lived'])","96605b26":"sns.distplot(heart_died['serum_creatinine'])\nsns.distplot(heart_lived['serum_creatinine'].sample(96))\n\nplt.legend(['died', 'lived'])","e5f6c94e":"sns.distplot(heart_died['serum_sodium'])\nsns.distplot(heart_lived['serum_sodium'].sample(96))\n\nplt.legend(['died', 'lived'])","92ef8ed6":"sns.distplot(heart_died['time'])\nsns.distplot(heart_lived['time'].sample(96))\n\nplt.legend(['died', 'lived'])","8b9b35ca":"sns.distplot(heart_lived['diabetes'].sample(96), kde=False)\nsns.distplot(heart_died['diabetes'], kde=False)\n\nplt.legend(['lived', 'died'])","cadac2aa":"'''\nfig, ax = plt.subplots(1,2)\n\nax[0].title.set_text('Diabetes Count: Died')\nax[0].set_xlim()\n\nsns.countplot(x='diabetes', data=heart_died, ax=ax[0])\n\nax[1].title.set_text('Diabetes Count: Lived')\n\nsns.countplot(x='diabetes', data=heart_lived, ax=ax[1])\n'''\n\nsns.distplot(heart_lived['diabetes'].sample(96), kde=False)\nsns.distplot(heart_died['diabetes'], kde=False)\n\n\nplt.legend(['lived', 'died'])","b394aa6b":"sns.distplot(heart_lived['high_blood_pressure'].sample(96), kde=False)\nsns.distplot(heart_died['high_blood_pressure'], kde=False)\n\n\nplt.legend(['lived', 'died'])","0dd04383":"sns.distplot(heart_lived['sex'].sample(96), kde=False)\nsns.distplot(heart_died['sex'], kde=False)\n\n\nplt.legend(['lived', 'died'])","e0ad013f":"sns.distplot(heart_lived['smoking'].sample(96), kde=False)\nsns.distplot(heart_died['smoking'], kde=False)\n\n\nplt.legend(['lived', 'died'])","ed3b90da":"temp_heart = heart_full.drop(['anaemia', 'diabetes'], axis=1)\n\nfig = plt.figure(figsize=(12,8))\n\nheart_corr = temp_heart.corr()\n\nsns.heatmap(heart_corr, annot=True)","cea1bc10":"temp_heart.describe()","a9a04809":"from sklearn.preprocessing import (\n    PowerTransformer,\n    StandardScaler,\n    RobustScaler,\n    QuantileTransformer\n)","39be98aa":"heart_preprocessed = heart_full.drop(['sex', 'anaemia', 'diabetes'], axis=1)\n\nheart_preprocessed","f3ec5ab4":"transformers_1 = {\n    'age': StandardScaler(),\n    'creatinine_phosphokinase': StandardScaler(),\n    'ejection_fraction': StandardScaler(),\n    'platelets': StandardScaler(),\n    'serum_creatinine': StandardScaler(),\n    'serum_sodium': StandardScaler(),\n    'time': StandardScaler()\n}\n\ntransformers_2 = {\n    'age': RobustScaler(unit_variance=True),\n    'creatinine_phosphokinase': RobustScaler(unit_variance=True),\n    'ejection_fraction': RobustScaler(unit_variance=True),\n    'platelets': RobustScaler(unit_variance=True),\n    'serum_creatinine': RobustScaler(unit_variance=True),\n    'serum_sodium': RobustScaler(unit_variance=True),\n    'time': RobustScaler(unit_variance=True)\n}\n\ntransformers_3 = {\n    'age': PowerTransformer(method='yeo-johnson'),\n    'creatinine_phosphokinase': QuantileTransformer(output_distribution='normal'),\n    'ejection_fraction': QuantileTransformer(output_distribution='normal'), #Also need\n    'serum_creatinine': PowerTransformer(method='yeo-johnson'),\n    'serum_sodium': PowerTransformer(method='yeo-johnson'),\n    'time': QuantileTransformer(output_distribution='normal')\n}\n\nfor feature, transformer in transformers_1.items():\n    heart_preprocessed[feature] = transformer.fit_transform(heart_preprocessed[feature].values.reshape(-1,1))\n    \nfor feature, transformer in transformers_2.items():\n    heart_preprocessed[feature] = transformer.fit_transform(heart_preprocessed[feature].values.reshape(-1,1))\n    \nfor feature, transformer in transformers_3.items():\n    heart_preprocessed[feature] = transformer.fit_transform(heart_preprocessed[feature].values.reshape(-1,1))\n\nheart_preprocessed","afbc1d47":"heart_pp_lived = heart_preprocessed[heart_preprocessed['DEATH_EVENT'] == 0]\nheart_pp_died = heart_preprocessed[heart_preprocessed['DEATH_EVENT'] == 1]","00699697":"sns.distplot(heart_pp_lived['age'].sample(96))\nsns.distplot(heart_pp_died['age'])\n\nplt.legend(['lived', 'died'])","a928176a":"sns.distplot(heart_pp_lived['creatinine_phosphokinase'].sample(96))\nsns.distplot(heart_pp_died['creatinine_phosphokinase'])\n\nplt.legend(['lived', 'died'])","a9fce711":"sns.distplot(heart_pp_lived['ejection_fraction'].sample(96))\nsns.distplot(heart_pp_died['ejection_fraction'])\n\nplt.legend(['lived', 'died'])","8c904bc0":"sns.distplot(heart_pp_lived['platelets'].sample(96))\nsns.distplot(heart_pp_died['platelets'])\n\nplt.legend(['lived', 'died'])","a7733761":"sns.distplot(heart_pp_lived['serum_creatinine'].sample(96))\nsns.distplot(heart_pp_died['serum_creatinine'])\n\nplt.legend(['lived', 'died'])","479a4d19":"sns.distplot(heart_pp_lived['serum_sodium'].sample(96))\nsns.distplot(heart_pp_died['serum_sodium'])\n\nplt.legend(['lived', 'died'])","1af34695":"sns.distplot(heart_pp_lived['time'].sample(96))\nsns.distplot(heart_pp_died['time'])\n\nplt.legend(['lived', 'died'])","a909c161":"outliers = {\n    'platelets': [pd.concat([heart_preprocessed[heart_preprocessed['platelets'] > 4], heart_preprocessed[heart_preprocessed['platelets'] < -4]]).index],\n    'creatinine_phosphokinase': [pd.concat([heart_preprocessed[heart_preprocessed['creatinine_phosphokinase'] > 4], heart_preprocessed[heart_preprocessed['creatinine_phosphokinase'] < -4]]).index],\n    'ejection_fraction': [pd.concat([heart_preprocessed[heart_preprocessed['ejection_fraction'] > 4], heart_preprocessed[heart_preprocessed['ejection_fraction'] < -4]]).index],\n    'time': [pd.concat([heart_preprocessed[heart_preprocessed['time'] > 4], heart_preprocessed[heart_preprocessed['time'] < -4]]).index]\n}\n\nfor feature, indices in outliers.items():\n    for i in indices:\n        heart_preprocessed.at[i, feature] = 0\n\nheart_preprocessed","1c6b580f":"heart_preprocessed.reset_index(drop=True, inplace=True)\n\nheart_preprocessed","6bd909e0":"from sklearn.preprocessing import MinMaxScaler\n\nnum = [\n    'age',\n    'creatinine_phosphokinase',\n    'ejection_fraction',\n    'platelets',\n    'serum_creatinine',\n    'serum_sodium',\n    'time'\n]\n\nmmsc = MinMaxScaler()\n\nheart_preprocessed[num] = mmsc.fit_transform(heart_preprocessed[num])\n\nheart_preprocessed","7d2f3ab4":"from sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\n\nfrom imblearn.over_sampling import SMOTE\n\nfrom sklearn.metrics import classification_report","eacb4363":"X = heart_preprocessed.drop('DEATH_EVENT', axis=1)\n\ny = heart_preprocessed['DEATH_EVENT']\n\nskf = StratifiedKFold(shuffle=True, random_state=1)\n\nmodel = CatBoostClassifier(\n    n_estimators=2000,\n    early_stopping_rounds=5,\n    random_state=0,\n    eval_metric='Accuracy',\n    thread_count=-1,\n    bootstrap_type='Bayesian',\n    bagging_temperature=3,\n    verbose=False\n)\n\ncvs_acc = cross_val_score(model, X, y, scoring='accuracy', cv=skf, n_jobs=-1)\n\nprint('cvs acc: ', cvs_acc.mean())","0acd57fd":"<h3> Testing Distributions <\/h3>","d1e53a25":"<h2> Imbalance <\/h2>","a9a12087":"<h3> Distribution of Serum Creatinine <\/h3>","66bbc83c":"<h2> Correlations <\/h2>","1fc8038d":"<h1> Version 1 Accuracy: 86% <\/h1>","b78eb997":"Observations:\n\n1. Smoking is highly correlated with sex. Drop Sex.","68cb3a22":"Observations:\n\n1. Looks like Chi-Square with a lot of outliers.\n2. Need BoxCox and Trimming\n3. Need Scaling and Scaling\n4. People who died tend to have less serum_creatinine?","1873046c":"<h1> Preprocessing <\/h1>","0daa5d57":"Observation:\n\n1. It seems that more people with high blood pressure died. \n2. Keep High_Blood_pressure","10cbcc3d":"<h3> High Blood Pressure Counts <\/h3>","b9ae8d41":"<h3> Distribution of ejection fraction <\/h3>","82523391":"<h3> Diabetes Counts <\/h3>","5ec9112d":"<h3> Distribution of creatinine_phosphokinase <\/h3>","9c60dfb3":"<h2> Setting Outliers to mean<\/h2>","d6bcf18d":"<h3> Sex Counts <\/h3>","93c8b989":"Observations:\n\n1. By Randomly Sampling the majority class, we can more or less get a fair comparison\n2. There seems to be very little variation between those people who had diabetes and those without diabetes\n3. Suggestion: Remove Diabetes.","ed1da0b5":"<h3> Distribution of time <\/h3>","7b413a24":"Observations:\n\n1. Outliers Exist or can be interpreted as a skewed to the left\n2. Need BoxCox\n3. Need Standardization and Scaling","74f746c2":"Observations:\n\n1. People who smoked lived more\n2. Keep ","d09dde62":"<h3> What is the Distribution of Age? <\/h3>","ea37ed14":"Observations:\n\n1. There is a difference in the change, but very small. Nonetheless could be valuable\n2. More women(?) Died than Men\n3. Keep unless needed to remove","a0ca9ae9":"<h3> Smoking Counts <\/h3>","a331fae2":"<h2> Summary: <\/h2>\n\n<h4> Imbalance: <\/h4>\n\n1. There are more people that lived than died\n2. Heavily Imbalanced\n3. SMOTE on the Training Data\n\n<h4> Distributions: <\/h4>\n\nBoxCox:\n\n1. age\n2. creatinine_phosphokinase\n3. serum_creatinine\n4. serum_sodium\n\nQuantile:\n\n1. ejection_fraction\n2. time\n\nTrimming:\n\n1. platelets\n\nDrop:\n\n1. anaemia\n2. diabetes\n\n<h4> Correlation: <\/h4>\n\nDrop:\n\n1. Sex\n","3a03c175":"Observations:\n\n1. By Randomly Sampling, we could give a fair comparison\n2. There seems to be little variation between the people with and without anaemia\n3. Suggestion: Remove Anaemia","15fa9c0f":"Observation:\n\n1. The Data is heavily Imbalanced. Need SMOTE because it is small already\n2. SMOTE only on the training data","1dfe9034":"Observations:\n\n1. Fairly Normal, but there are outliers\n2. No need for BoxCox, but trimming needed\n3. Need Standardization and Scaling","43bba978":"Obeservations:\n\n1. Highly Skewed like a Chi-Square Distribution\n2. Need BoxCox Transformation. Variance is very different between the two. according to shape of curve\n3. Need Standardization and Scaling","7b6f62c1":"<h2> Distributions <\/h2>","6f541273":"<h2> Training with CatBoost <\/h2>","8fa80865":"<h3> Distribution of Serum Sodium <\/h3>","feb0ffd4":"Observations:\n\n1. BiModal and skewed to the left\n2. Need Quantile and\/or boxcox?\n3. Need Standardization and Scaling","b547171a":"Observations:\n\n1. The Distribution is somewhat Normal with some skewness to the right a bit.\n2. Somewhat skewed to the right. Try BoxCox\n3. Need Standardization and Scaling","f0c86e21":"<h3> Distribution of Platelets <\/h3>","ac8f92c7":"<h1> Exploratory Data Analysis <\/h1>","c7cf2f24":"<h1> Modelling <\/h1>","93e91bac":"<h2> Summary Statistics <\/h2>","5586e48e":"Observations:\n\n1. Distribution is Bimodal\n2. Need QuantileTransformation to normal\n3. Need Standardization and Scaler\n4. Need more observation of the Split between death and new","6db538c5":"<h2> Distributions <\/h2>","f276692e":"<h3> Anaemia Counts <\/h3>"}}