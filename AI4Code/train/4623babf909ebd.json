{"cell_type":{"9b256653":"code","77fa10a5":"code","493153d8":"code","d2517f93":"code","3d002408":"code","c4875969":"markdown","53f069a6":"markdown","2fa47822":"markdown","4247e233":"markdown","08bc96dc":"markdown"},"source":{"9b256653":"import os\nprint(os.listdir(\"..\/input\/flowers\/flowers\"))","77fa10a5":"from keras.models import Sequential\nfrom keras.layers import Convolution2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\nfrom keras.preprocessing.image import ImageDataGenerator","493153d8":"# Initialising the CNN\nclassifier = Sequential()\n\n# Step 1 - Convolution\nclassifier.add(Convolution2D(32, (3, 3), input_shape = (64, 64, 3), activation = 'relu'))\n\n# Step 2 - Pooling\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))\n\n# Adding a second convolutional layer\nclassifier.add(Convolution2D(32, (3, 3), activation = 'relu'))\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))\n\n# Step 3 - Flattening\nclassifier.add(Flatten())\n\n# Step 4 - Full connection\nclassifier.add(Dense(units = 128, activation = 'relu'))\nclassifier.add(Dense(units = 5, activation = 'softmax'))\n\n# Model Summary\nclassifier.summary()\n\n# Compiling the CNN\nclassifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n","d2517f93":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range=0.2,\n                                   zoom_range=0.2,\n                                   width_shift_range=0.1,\n                                   height_shift_range=0.1,\n                                   horizontal_flip=True,\n                                   vertical_flip=False)\ntraining_set = train_datagen.flow_from_directory('..\/input\/flowers\/flowers',\n                                                 target_size = (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","3d002408":"classifier.fit_generator(training_set,\n                         steps_per_epoch = 100,\n                         epochs = 100)","c4875969":"## Importing the libraries","53f069a6":"## Preparing the dataset","2fa47822":"## Fitting the dataset to the CNN","4247e233":"## Creating the Convolutional Neural Network","08bc96dc":"# Flower Recognition\n## File Structure"}}