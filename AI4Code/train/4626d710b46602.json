{"cell_type":{"d78c20c1":"code","2ef6b7d6":"code","3f400340":"code","02414052":"code","779f60b4":"code","ed4f4e2b":"code","dac17085":"code","4fc730c8":"code","4ac101f4":"markdown","e610cab0":"markdown","b65c041a":"markdown"},"source":{"d78c20c1":"import os\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/\"]).decode(\"utf8\"))","2ef6b7d6":"from scipy.stats import rankdata\nimport glob\nLABELS = [\"target\"]\nall_files = glob.glob(\"..\/input\/pseudolabelmodels\/*.csv\")","3f400340":"outs = [pd.read_csv(f, index_col=0) for f in all_files]\nconcat_sub = pd.concat(outs, axis=1)\ncols = list(map(lambda x: \"m\" + str(x), range(len(concat_sub.columns))))\nconcat_sub.columns = cols\nconcat_sub.reset_index(inplace=True)","02414052":"import warnings\nwarnings.filterwarnings(\"ignore\")\nrank = np.tril(concat_sub.iloc[:,1:].corr().values,-1)\nm = (rank>0).sum()\nm_gmean, s = 0, 0\nfor n in range(min(rank.shape[0],m)):\n    mx = np.unravel_index(rank.argmin(), rank.shape)\n    w = (m-n)\/(m+n\/10)\n    #print(w)\n    m_gmean += w*(np.log(concat_sub.iloc[:,mx[0]+1])+np.log(concat_sub.iloc[:,mx[1]+1]))\/2\n    s += w\n    rank[mx] = 1\nm_gmean = np.exp(m_gmean\/s).clip(0.0,1.0)","779f60b4":"predict_list = []\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9350-pseudo-rohit.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9351-pseudo-rohit.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9373-pseudo-vova.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9376-pseudo-rohit.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9379-pseudo-rohit.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9432-pseudo-vova.csv')[LABELS].values)\npredict_list.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9474-pseudo-rohit.csv')[LABELS].values)\n\n\npredict_list_2 = []\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9477-pseudo-ashish.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9491-pseudo-rohit.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-94981-pseudo-ashish.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-94982-pseudo-ashish.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9508-pseudo-rohit.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9513-pseudo-ashish.csv')[LABELS].values)\npredict_list_2.append(pd.read_csv('..\/input\/pseudolabelmodels\/submission-9547-pseudo-rohit.csv')[LABELS].values)","ed4f4e2b":"import warnings\nwarnings.filterwarnings(\"ignore\")\nprint(\"Rank averaging on \", len(predict_list), \" files\")\npredictions = np.zeros_like(predict_list[0])\nfor predict in predict_list:\n    for i in range(1):\n        predictions[:, i] = np.add(predictions[:, i], rankdata(predict[:, i])\/predictions.shape[0])  \n\npredictions = predictions \/len(predict_list)","dac17085":"import warnings\nwarnings.filterwarnings(\"ignore\")\nprint(\"Rank averaging on \", len(predict_list_2), \" files\")\npredictions_2 = np.zeros_like(predict_list_2[0])\nfor predict_2 in predict_list_2:\n    for i in range(1):\n        predictions_2[:, i] = np.add(predictions_2[:, i], rankdata(predict_2[:, i])\/predictions_2.shape[0])  \n\npredictions_2 = predictions_2 \/len(predict_list_2)","4fc730c8":"submission_1 = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\nsubmission_1[LABELS] = predictions\n\nsubmission_2 = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\nsubmission_2[LABELS] = predictions_2\n\nsubmission = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\nsubmission[LABELS] = submission_2[LABELS]*.55 + submission_1[LABELS]*.45\n\n\nsubmission.to_csv('submission.csv', index=False)","4ac101f4":"![](https:\/\/pbs.twimg.com\/profile_images\/1023997768577179648\/WeOL7-oq_400x400.jpg)\nAs the leading healthcare organization for informatics in medical imaging, the Society for Imaging Informatics in Medicine (SIIM)'s mission is to advance medical imaging informatics through education, research, and innovation in a multi-disciplinary community. SIIM is joined by the International Skin Imaging Collaboration (ISIC), an international effort to improve melanoma diagnosis. The ISIC Archive contains the largest publicly available collection of quality-controlled dermoscopic images of skin lesions.\n\nIn this competition, you\u2019ll identify melanoma in images of skin lesions. In particular, you\u2019ll use images within the same patient and determine which are likely to represent a melanoma. Using patient-level contextual information may help the development of image analysis tools, which could better support clinical dermatologists.","e610cab0":"In this kernel, I used top 14 models, our team built - using Pseudo Labelling approach.","b65c041a":"Thanks to my team for their constant efforts made to this competition, that paid off with a silver medal.\n\n1. Rohit Agarwal (https:\/\/www.kaggle.com\/rohitagarwal)\n2. Vladmir (https:\/\/www.kaggle.com\/vladimirsydor)\n3. Ashish Gupta (https:\/\/www.kaggle.com\/roydatascience)\n4. Mukharbek Organokov (https:\/\/www.kaggle.com\/muhakabartay)"}}