{"cell_type":{"fe81928a":"code","b7b54a1d":"code","58ac84f6":"code","d23b1e3a":"code","752f170e":"code","8ed2e1c6":"code","c124c1f7":"code","3079d6a9":"code","4ce69c8a":"code","900a9b51":"code","21528d2a":"code","28ebfe1b":"code","3f4795db":"code","30d22c0d":"code","e531bd72":"code","4ab8c9b8":"code","602e9e11":"code","c79c58d4":"code","3cb464dc":"code","ad905350":"code","4fef6a24":"code","95d5e29d":"code","dd09e4de":"code","91e754cd":"code","f1ba6e49":"code","5387e186":"code","be5a8444":"code","076030d9":"code","0d6f4bcd":"code","17fbbc08":"code","781908aa":"code","ea8d3087":"code","fd0c0af7":"code","49d10b5a":"code","d5f0bc81":"code","0835fe9d":"code","30fac992":"code","65e21b50":"code","1cf5ba30":"code","9cfc7a06":"code","5d50d01a":"code","a479eb5f":"code","aa6cad05":"code","a7b78470":"code","35a0b9be":"code","6ba4bb90":"code","31a3a3a8":"code","8e589801":"code","c41ff537":"code","54646995":"code","8acb3eac":"code","59333f69":"code","264d3f73":"code","e4fd3d72":"code","35905760":"code","5dcc3aee":"code","5ec9a5c7":"code","6e1dcc84":"code","f97e9380":"code","72c2851e":"code","dbc8f09e":"code","62fd0921":"code","0deca93d":"code","7ccbbed3":"code","81d7ef27":"code","5f440888":"code","8332ddbd":"code","36e8ac3d":"code","ac463729":"markdown","a949859a":"markdown","b5b1d37b":"markdown","afe28abe":"markdown","ff94cd33":"markdown","d6e06436":"markdown","0001f7ca":"markdown","b1feee22":"markdown","774e1762":"markdown","dc8d4b7b":"markdown","4d257cc0":"markdown","2ff51de6":"markdown","24cbf994":"markdown","0284f891":"markdown","3faa65fc":"markdown","fc1296f5":"markdown","04f56ec1":"markdown","195d30b7":"markdown","872f57ba":"markdown","dedeeef3":"markdown","d3d0d6b8":"markdown","cb516fbb":"markdown","c0a4333e":"markdown","b71e316c":"markdown"},"source":{"fe81928a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7b54a1d":"df = pd.read_csv(\"\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv\")","58ac84f6":"df.shape","d23b1e3a":"df.head()","752f170e":"df.isnull().sum()","8ed2e1c6":"df.info()","c124c1f7":"df.columns","3079d6a9":"df.area_type.unique()","4ce69c8a":"df.area_type.value_counts()","900a9b51":"df.availability.unique()","21528d2a":"df1 = df.copy()","28ebfe1b":"df1.availability = df1.availability.apply(lambda x: x if x in ['Ready To Move','Immediate Possession']\n                                       else 'In Future')","3f4795db":"df1.availability.unique()","30d22c0d":"df1.availability.value_counts()","e531bd72":"df1[\"size\"].unique()","4ab8c9b8":"df[\"size\"].value_counts()","602e9e11":"df1[df1[\"size\"].isnull()]","c79c58d4":"df1[\"size\"].fillna(\"0\", inplace=True)","3cb464dc":"temp = df1[\"size\"].str.split(\" \", expand=True)\ndf1[\"Room\"] = temp[0].copy()\ndf1[\"Room_Type\"] = temp[1].copy()\n\ndf1.head()","ad905350":"len(df1.society.unique())","4fef6a24":"df2 = df1.copy()","95d5e29d":"df2.drop(\"society\", axis=1, inplace=True)","dd09e4de":"len(df2.location.unique())","91e754cd":"location_stat = df2.groupby(\"location\")[\"location\"].count().sort_values(ascending=False)\nlocation_stat[location_stat.values<10]","f1ba6e49":"location_stat_less_than_10 = location_stat[location_stat.values<10]","5387e186":"location_stat_less_than_10.index","be5a8444":"df2.location = df2.location.apply(lambda x: 'Rare' if x in location_stat_less_than_10.index else x)","076030d9":"df2.head()","0d6f4bcd":"df2.info()","17fbbc08":"def is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","781908aa":"df2[~df2[\"total_sqft\"].apply(is_float)].head(10)","ea8d3087":"def convert_sqft_to_num(x):\n    tokens = x.split(\"-\")\n    if len(tokens)==2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None","fd0c0af7":"convert_sqft_to_num('2166')","49d10b5a":"convert_sqft_to_num('2100 - 2850')","d5f0bc81":"convert_sqft_to_num('34.46Sq. Meter')","0835fe9d":"df3 = df2.copy()","30fac992":"df3[\"total_sqft\"] = df3[\"total_sqft\"].apply(convert_sqft_to_num)\ndf3.head()","65e21b50":"df3.loc[30]","1cf5ba30":"df3.head()","9cfc7a06":"df3.info()","5d50d01a":"df4 = df3.copy()","a479eb5f":"df4[df4[\"Room_Type\"].isnull()]","aa6cad05":"df4[\"Room_Type\"].fillna(\"NA\", inplace=True)","a7b78470":"df4.drop(\"size\", axis=1, inplace=True)","35a0b9be":"df5 = df4.copy()\ndf5.head()","6ba4bb90":"import matplotlib.pyplot as plt\nimport seaborn as sns","31a3a3a8":"sns.countplot(df5[\"area_type\"])\nplt.show()","8e589801":"temp = df5.groupby(\"area_type\")[\"price\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","c41ff537":"sns.countplot(df5[\"availability\"])\nplt.show()","54646995":"temp = df5.groupby(\"availability\")[\"price\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","8acb3eac":"plt.hist(df5[\"total_sqft\"], bins=50)\nplt.show()","59333f69":"sns.boxplot(df5[\"total_sqft\"])\nplt.show()","264d3f73":"sns.scatterplot(x=\"total_sqft\", y=\"price\", data=df5)\nplt.show()","e4fd3d72":"sns.scatterplot(x=\"bath\", y=\"price\", data=df5)\nplt.show()","35905760":"sns.boxplot(df5[\"bath\"])\nplt.show()","5dcc3aee":"plt.figure(figsize=(18,7))\nsns.countplot(df5[\"bath\"])\nplt.show()","5ec9a5c7":"sns.scatterplot(x=\"balcony\", y=\"price\", data=df5)\nplt.show()","6e1dcc84":"sns.countplot(df5[\"balcony\"])\nplt.show()","f97e9380":"temp = df5.groupby(\"balcony\")[\"price\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","72c2851e":"sns.countplot(df5[\"Room\"])\nplt.show()","dbc8f09e":"plt.figure(figsize=(18,7))\ntemp = df5.groupby(\"Room\")[\"price\"].median()\ntemp.index = temp.index.astype(\"float\")\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","62fd0921":"sns.countplot(df5[\"Room_Type\"])\nplt.show()","0deca93d":"temp = df5.groupby(\"Room_Type\")[\"price\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","7ccbbed3":"df6 = df5.copy()\ndf6.head()","81d7ef27":"df6[\"price_per_sqft\"] = df6[\"price\"]\/df6[\"total_sqft\"]","5f440888":"#\"area_type\",\"availability\",\"bath\",\"balcony\",\"Room\"\ntemp = df6.groupby(\"area_type\")[\"price_per_sqft\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","8332ddbd":"temp = df6.groupby(\"availability\")[\"price_per_sqft\"].median()\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","36e8ac3d":"plt.figure(figsize=(18,7))\ntemp = df6.groupby(\"Room\")[\"price_per_sqft\"].median()\ntemp.index = temp.index.astype(\"float\")\nsns.barplot(x=temp.index, y=temp.values)\nplt.show()","ac463729":"* **area_type** has 4 standard values","a949859a":"* **bath** column doesn't show any significant direct impact on the price","b5b1d37b":"* Majority of the records are with 2-4 rooms","afe28abe":"* The feature **total_sqft** is right skewed.\n* Most of the properties have areas less than 5000 sq ft. There are some exceptions though which is clearly indicated by the long tail of the histogram","ff94cd33":"* As expected, the price of the property increases with the total area. There are some outliers visible above 30000 sq ft","d6e06436":"* The majority of the properties are of Super built-up Area type","0001f7ca":"* The number of Bedroom types is lower than BHK yet has a higher average price when compared with BHK.\n* We might want to check more about the entries with Bedroom.","b1feee22":"* Primarily the average price increase as the number of rooms increase.\n* Ther are some variations noticed when the number of rooms increase more than 10","774e1762":"* The price per sq ft show a linear relation with the number of rooms, however as seen with the price as well, there are irregularities observed when the number of rooms go beyond 10.","dc8d4b7b":"* Most of the properties are Ready to Move.\n* There are few properties will be available in the near future.\n* There are very few properties which are available for immediate possession as well.","4d257cc0":"* We saw earlier that the average price for Built-up Area, Carpet Area and Super built-up Area were almost the same, however the price per square feet seems to have some difference in them","2ff51de6":"* Similar to **society**, we do have so many unique value in **location** as well. However, unlike **society**, we know that location is an important feature to decide on the price of a real-state property.\n\n* Let's try to explore more, how can we keep the maximum information from this column","24cbf994":"**total_sqft** has an object data type and we also saw above that for some Plot Area property, it seems like a range value in this column","0284f891":"* Most of the properties have bathrooms less than 8","3faa65fc":"* We can drop **size** column as we have already created 2 features out of it keeping all the information from it","fc1296f5":"* The immediate possession properties have lower average price, which suggests that these properties might be quite old and hence may not be attracting much buyers.\n* The other categories denote an recently developed properties and hence have higher average prices.","04f56ec1":"* There are so unique values in the column **society**. Looking at them they don't seem to provide any meaningful information either. Let's drop the column from the dataset for simplicity.","195d30b7":"* There are outlier in the **bath** columns. Most importantly, notice the 2 extreme values more than 25","872f57ba":"# Exploratory Data Analysis\n\n* Now that we are done with data cleaning part.\n* Primarily we'll check for 2 parts - 1. How are the values distributed for each independent feature and 2. How does the target variable **price** change with the independent feature","dedeeef3":"* The average price for Plot Area type properties is almost double compared to the other categories","d3d0d6b8":"* The values with dates should most probably be future dates. Let's update them as 'In Future'","cb516fbb":"* Looking at columns like **availability** and **size**, we might have to perform some data cleaning in order to explore the data properly.","c0a4333e":"* The average price of properties with 1 balcony is lower than properties where there are no balconies.\n* Based on this, we might say that the 1 balcony properties are low in demand i.e., the prices for properties are higher if there is no balcony or has more than 1 balcony.","b71e316c":"* The records which have **size** as null are the Plot Area type properties which might not have any construction as of now. Let's impute a value as 0 as there is no BHK value for it."}}