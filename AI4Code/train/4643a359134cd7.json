{"cell_type":{"8a9383d8":"code","937e2ea8":"code","eebdbfb0":"code","b705b2c8":"code","9dfadbb7":"code","e4460625":"code","0e93ee4f":"code","4e619a50":"code","69cd210d":"code","7e8f3988":"code","6ff54504":"code","3d1de138":"code","a924d81d":"code","371ae74c":"code","73a16ddd":"code","95a8a9ad":"code","be62f066":"code","0f8fef1d":"code","4881f0f8":"code","3a4da13b":"code","555bfd4a":"code","52304db2":"code","69f10d2e":"code","2915b059":"code","bb30eb42":"code","a767e91e":"code","7fbdc45a":"code","2ad6d634":"code","ccc933f9":"code","d94dfd08":"code","dca5e354":"markdown","6feb9628":"markdown","d3e4a1b3":"markdown","e8d7e77f":"markdown","e0ed950e":"markdown","a4fd0347":"markdown","ea449c4c":"markdown","769b3437":"markdown","30883ab7":"markdown","68202b76":"markdown","8154b4dd":"markdown","fcb6d869":"markdown","93cdcddc":"markdown","6b93e438":"markdown","261894d6":"markdown","c0e5faa9":"markdown","65c19e69":"markdown","edc33ec4":"markdown","e4cc041e":"markdown","942576d5":"markdown","cab899fc":"markdown","2a5bcaef":"markdown","77223d7f":"markdown","4dfad63d":"markdown","a906b3df":"markdown","ab6fbc9a":"markdown","5b804ff4":"markdown","0e86b5f9":"markdown","adb08072":"markdown","e1f6012f":"markdown","25c4055e":"markdown","841af9d1":"markdown"},"source":{"8a9383d8":"!pip install pycaret","937e2ea8":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pycaret.regression import *\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nimport warnings\nwarnings.filterwarnings(\"ignore\")","eebdbfb0":"df_train = pd.read_csv(\"..\/input\/av-jobathon-sep2021\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/av-jobathon-sep2021\/test.csv\")","b705b2c8":"df_train.head()","9dfadbb7":"df_train.columns","e4460625":"for i in df_train.columns:\n    print(i)\n    print(df_train[i].value_counts())\n    print('\\n\\n')","0e93ee4f":"df_train.dtypes","4e619a50":"sns.pairplot(df_train, hue = \"Holiday\")","69cd210d":"sns.violinplot(x ='Store_Type', y ='Sales', data = df_train, hue ='Holiday')","7e8f3988":"sns.violinplot(x ='Location_Type', y ='Sales', data = df_train, hue ='Holiday', split = True)","6ff54504":"sns.violinplot(x ='Region_Code', y ='Sales', data = df_train, hue ='Holiday', split = True)","3d1de138":"df_train.isnull().sum()","a924d81d":"test_ids = df_test[\"ID\"]\ndf_train.drop([\"ID\"], axis = 1, inplace = True)\ndf_test.drop(\"ID\", axis = 1, inplace = True)","371ae74c":"df_train[[\"Year\", \"Month\", \"Day\"]] = df_train[\"Date\"].str.split(\"-\", expand = True)\ndf_train.drop([\"Date\"], axis = 1, inplace = True)\n\ndf_test[[\"Year\", \"Month\", \"Day\"]] = df_test[\"Date\"].str.split(\"-\", expand = True)\ndf_test.drop(\"Date\", axis = 1, inplace = True)\n\ndf_train[[\"Year\", \"Month\", \"Day\"]] = df_train[[\"Year\", \"Month\", \"Day\"]].astype('int64')\ndf_test[[\"Year\", \"Month\", \"Day\"]] = df_test[[\"Year\", \"Month\", \"Day\"]].astype('int64')","73a16ddd":"sns.boxplot(df_train[\"#Order\"])","95a8a9ad":"Q1 = np.percentile(df_train[\"#Order\"], 25,\n                   interpolation = 'midpoint')\n \nQ3 = np.percentile(df_train[\"#Order\"], 75,\n                   interpolation = 'midpoint')\nIQR = Q3 - Q1\n\ndf_train[\"#Order\"] = df_train[\"#Order\"].apply(lambda x : Q1-1.5*IQR if x < (Q1-1.5*IQR) else (Q3+1.5*IQR if x>(Q3+1.5*IQR) else x))","be62f066":"sns.boxplot(df_train[\"#Order\"])","0f8fef1d":"m = df_train[\"#Order\"].mean()\ns = df_train[\"#Order\"].std()\ndf_train[\"#Order\"] = df_train[\"#Order\"].apply(lambda x: (x - m)\/s)\n\nscaler = MinMaxScaler(feature_range = (0,1))\ndf_train[\"Sales\"] = scaler.fit_transform(df_train[\"Sales\"].values.reshape(-1, 1))","4881f0f8":"cols_to_be_encoded = [\"Store_Type\", \"Location_Type\", \"Region_Code\", \"Discount\"]\n\ndf_train = pd.get_dummies(df_train, columns = cols_to_be_encoded)\ndf_test = pd.get_dummies(df_test, columns = cols_to_be_encoded)","3a4da13b":"df_train.dtypes","555bfd4a":"corr = df_train.corr()\n\n# plot the heatmap\nsns.heatmap(corr, \n            xticklabels=corr.columns,\n            yticklabels=corr.columns, \n            cmap=\"viridis\")","52304db2":"X = df_train.drop(\"Sales\", axis = 1)\nY = df_train[\"Sales\"]","69f10d2e":"exp_reg = setup(X, target = '#Order')\n# compare_models()","2915b059":"xgboost = create_model('xgboost')\ny_pred = predict_model(xgboost, data = df_test)\ndf_test[\"#Order\"] = y_pred[\"Label\"]","bb30eb42":"exp_reg = setup(df_train, target = 'Sales')\n# compare_models()","a767e91e":"xgboost = create_model('xgboost')\ny_pred = predict_model(xgboost, data = df_test)\ny_pred[\"Label\"] = scaler.inverse_transform(y_pred[\"Label\"].values.reshape(-1,1))\nsubmission = pd.DataFrame({'ID':test_ids.values,'Sales':y_pred[\"Label\"]})\nsubmission.to_csv('submission_xgboost.csv', index = False)","7fbdc45a":"rf = create_model('rf')\ny_pred = predict_model(rf, data = df_test)\ny_pred[\"Label\"] = scaler.inverse_transform(y_pred[\"Label\"].values.reshape(-1,1))\nsubmission = pd.DataFrame({'ID':test_ids.values,'Sales':y_pred[\"Label\"]})\nsubmission.to_csv('submission_rf.csv', index = False)","2ad6d634":"lightgbm = create_model('lightgbm')\ny_pred = predict_model(lightgbm, data = df_test)\ny_pred[\"Label\"] = scaler.inverse_transform(y_pred[\"Label\"].values.reshape(-1,1))\nsubmission = pd.DataFrame({'ID':test_ids.values,'Sales':y_pred[\"Label\"]})\nsubmission.to_csv('submission_lightgbm.csv', index = False)","ccc933f9":"et = create_model('et')\ny_pred = predict_model(et, data = df_test)\ny_pred[\"Label\"] = scaler.inverse_transform(y_pred[\"Label\"].values.reshape(-1,1))\nsubmission = pd.DataFrame({'ID':test_ids.values,'Sales':y_pred[\"Label\"]})\nsubmission.to_csv('submission_et.csv', index = False)","d94dfd08":"gbr = create_model('gbr')\ny_pred = predict_model(gbr, data = df_test)\ny_pred[\"Label\"] = scaler.inverse_transform(y_pred[\"Label\"].values.reshape(-1,1))\nsubmission = pd.DataFrame({'ID':test_ids.values,'Sales':y_pred[\"Label\"]})\nsubmission.to_csv('submission_gbr.csv', index = False)","dca5e354":"Finding relationship between variables using pairplot","6feb9628":"XG boost has the highest R^2 value for Order as the target variable","d3e4a1b3":"Displaying the class type of the attributes","e8d7e77f":"<div>\n<div style=\"background-image:url('https:\/\/wallpaperaccess.com\/full\/123112.jpg');background-size: center;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;\">\n<h1 style = \"color:#dda520;padding-top:0.4em\">THANKS FOR READING<\/h1>\n<p style=\"font-size:1.3em;color:#fff\">IF YOU FIND IT USEFUL. CONSIDER UPVOTING<\/p>\n<\/div>","e0ed950e":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">8 | Data Modelling<\/h4>\n    <\/strong>\n<\/div>","a4fd0347":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">7 | Splitting the independent and dependent attributes<\/h4>\n    <\/strong>\n<\/div>","ea449c4c":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">5 | Data Preprocessing<\/h4>\n    <\/strong>\n<\/div>","769b3437":"Sales bases on location type","30883ab7":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">4 | Checking for NaN values<\/h4>\n    <\/strong>\n<\/div>","68202b76":"Splitting date into day, month and year","8154b4dd":"Checking whether all the categorical attributes are successfully removed","fcb6d869":"Sales bases on region","93cdcddc":"Predicting the Sales values using XGBoost Regressor","6b93e438":"Outliers successfully removed :)<br>\nStandardizing the Order attribute and normalizing the Sales attribute","261894d6":"<div style=\"background:#3c5998;color:#fff;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">1 | Importing the Required Packages<\/h4>\n    <\/strong>\n<\/div>","c0e5faa9":"Fitting the train data into pycaret using Sales as Target variable","65c19e69":"<div>\n<div style=\"background:#3c5998;color:#fff;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h1 style = \"color:#fff\">WOMART SALES PREDICTION<\/h1>\n    <\/strong>\n<\/div>\n<div style = \"margin-top:1em\">\n    <img src = \"https:\/\/www.dealsinsight.com\/wp-content\/uploads\/2019\/11\/sales-manager.jpg\"\/>\n<\/div>\n\n<p>Sales data for 18 months from 365 stores of WOMart is available along with information on \n<\/p>\n<ul>\n<li>Product ID<\/li>\n<li>Store ID<\/li>\n<li>Store Type,<\/li> \n<li>Location Type for each store, <\/li>\n<li>Region Code for every store, <\/li>\n<li>Discount provided by the store on every day,<\/li> \n<li>Whether the day is holiday or not,<\/li>\n<li>Number of Orders everyday and<\/li>\n<li>Sales<\/li>\n<\/ul>\n\n<strong>Your task is to predict the store sales for each store in the test set for the next two months.<\/strong>\n<\/div>","edc33ec4":"box plot to detect outliers in order attribute","e4cc041e":"Removing the outliers","942576d5":"Removing the ID columns as it only contains unique values","cab899fc":"One Hot Encoding the categorical columns","2a5bcaef":"Sales bases on store type","77223d7f":"Predicting the Sales values using ExtraTrees Regressor","4dfad63d":"Predicting the Sales values using LightGBM Regressor","a906b3df":"<img src = \"https:\/\/c.tenor.com\/NkOnqShc4NcAAAAM\/house-cleaning-cleaning-house.gif\" \/>\n<p style = \"font-size:1.3em;margin-top:1em\">Data cleaning successfully over \ud83e\udd73<\/p>","ab6fbc9a":"Predicting the Sales values using Gradient Boost Regressor","5b804ff4":"Since Order attribute is not there in the test date we are predicting it using train data.\n<\/br>Fitting the X dataset into pycaret using Order as Target variable","0e86b5f9":"Predicting the Sales values using Random Forest Regressor","adb08072":"Displaying the column names","e1f6012f":"<div style=\"background:#3c5998;color:#fff;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">2 | Reading the data and displaying them<\/h4>\n    <\/strong>\n<\/div>","25c4055e":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">6 | Correlation plot<\/h4>\n    <\/strong>\n<\/div>","841af9d1":"<div style=\"background:#3c5998;color:white;padding:1.3em 2em 1.5em 2em;border-radius: 5px;font-weight:bold\">\n    <strong>\n        <h4 style = \"color:#fff\">3 | Understanding the data<\/h4>\n    <\/strong>\n<\/div>"}}