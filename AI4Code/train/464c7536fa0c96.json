{"cell_type":{"1fa4bb39":"code","e9b513bc":"code","2638048a":"code","ed8ba169":"code","c97c0771":"code","50d8e02d":"code","3b4f89f4":"code","7e8b7677":"code","2fab1ae6":"code","c1dce639":"code","acaeeac8":"code","5f525419":"code","3525bef1":"code","d63a55f6":"code","68ea2035":"code","bbfab4c5":"code","fc5ca4a5":"code","0795c7c0":"code","87b18b17":"code","3c655206":"code","9c8566bd":"code","aca431e6":"code","69f681e9":"code","2c7e4cb8":"code","a208df71":"code","c62138ef":"code","700dc553":"code","4a4c712b":"code","3ea89ca5":"code","31647c4f":"code","a7e9cf7e":"code","d915e186":"code","a8a4d315":"code","ad73f546":"code","cc0810d8":"code","a2312cb3":"code","fdc19bd5":"code","5033e8ba":"code","0c8e5e3b":"code","4c65e7e5":"code","163b589e":"code","25516a84":"code","2c8c0931":"code","69f85440":"code","515645ba":"code","13a37fba":"code","4f0191c8":"code","1c984de7":"code","0b36392f":"code","4ac4c7ba":"code","3948a6fe":"code","4f2ad2ed":"code","58ae9f4f":"code","6cba10eb":"code","abdd8c3d":"code","414c4132":"code","d9a53b93":"code","c713a97e":"code","475695ae":"code","2e7c52d8":"code","91f6c39e":"code","fcd0fc12":"code","edb3684c":"code","a966cafb":"code","51570135":"code","4e083db4":"code","97980868":"code","5741400f":"code","aeb38ebb":"code","0830bd3d":"code","9616a674":"code","51fb2c76":"code","b7f8ef87":"code","00b8a701":"code","ceab0f8f":"code","64c1d45f":"code","83c98130":"code","6f4eaf2a":"code","0cbe6dbd":"code","24fe000d":"code","23a94d2b":"code","5b77351f":"code","2e2bfe5c":"code","16cc1511":"code","59680130":"code","b288813a":"code","c565ff6c":"code","9453f383":"code","a25ef4d5":"code","724f4d19":"markdown","ac3a7c9b":"markdown","eb820caf":"markdown","73b7b5fb":"markdown","6411cbc7":"markdown","6a3c72a4":"markdown","0f544ded":"markdown","32dcd4bd":"markdown","1a5f9b58":"markdown","e1f05ac9":"markdown","35350bab":"markdown","1cb755b0":"markdown","6edcf4d7":"markdown","2dd89381":"markdown","04a65226":"markdown","7d3acd7b":"markdown","d6a082e8":"markdown","c96e3fac":"markdown","4a4cbd68":"markdown"},"source":{"1fa4bb39":"import datetime\nprint(\"Notebook was last executed on:\", datetime.date.today().strftime(\"%Y-%b-%d\"))","e9b513bc":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', 50)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom babel.numbers import format_currency\nfrom wordcloud import WordCloud\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,f1_score,confusion_matrix","2638048a":"! ls -l \/kaggle\/input\/bigg-boss-india-hindi-telugu-tamil-kannada\/Bigg_Boss_India.csv\nbigg_boss = pd.read_csv('\/kaggle\/input\/bigg-boss-india-hindi-telugu-tamil-kannada\/Bigg_Boss_India.csv', encoding = \"ISO-8859-1\")\n\nnRow, nCol = bigg_boss.shape\nprint(f'\\nThere are {nRow} rows and {nCol} columns in the dataset')","ed8ba169":"bigg_boss.head(5)","c97c0771":"bigg_boss.tail(10).T","50d8e02d":"bigg_boss.sample(10)","3b4f89f4":"bigg_boss.info()","7e8b7677":"bigg_boss.describe().T.round(2)","2fab1ae6":"bigg_boss['Season Start Date'] = pd.to_datetime(bigg_boss['Season Start Date'])\nbigg_boss['Season End Date'] = pd.to_datetime(bigg_boss['Season End Date'])\nbigg_boss['Entry Date'] = pd.to_datetime(bigg_boss['Entry Date'])\nbigg_boss['Elimination Date'] = pd.to_datetime(bigg_boss['Elimination Date'])","c1dce639":"bigg_boss['Finalist'] = bigg_boss['Finalist'].astype(pd.Int32Dtype())\nbigg_boss['Elimination Week Number'] = bigg_boss['Elimination Week Number'].astype(pd.Int32Dtype())\nbigg_boss['Number of Evictions Faced'] = bigg_boss['Number of Evictions Faced'].astype(pd.Int32Dtype())\nbigg_boss['Number of re-entries'] = bigg_boss['Number of re-entries'].astype(pd.Int32Dtype())\nbigg_boss['Number of times elected as Captain'] = bigg_boss['Number of times elected as Captain'].astype(pd.Int32Dtype())\nbigg_boss['Social Media Popularity'] = bigg_boss['Social Media Popularity'].astype(pd.Int32Dtype())\n\nbigg_boss['Prize Money (INR)'] = bigg_boss['Prize Money (INR)'].str.replace(',','')\nbigg_boss['Prize Money (INR)'] = pd.to_numeric(bigg_boss['Prize Money (INR)'])\n\nbigg_boss.info()","acaeeac8":"# Unique values in each column\nfor col in bigg_boss.columns:\n    print(\"Number of unique values in\", col,\"-\", bigg_boss[col].nunique())","5f525419":"# Number of seasons in all Indian languages\nprint(\"Total\",bigg_boss.groupby('Language')['Season Number'].nunique().sum(),\"seasons broadcasted\")\nprint(bigg_boss['Winner'].sum().astype(int)+1,\"seasons completed\")\nprint(bigg_boss.loc[bigg_boss['Winner'].isnull(), :].groupby('Language')['Season Number'].nunique().sum(),\"season(s) running\")","3525bef1":"# Number of seasons in each Indian language\nprint(bigg_boss.groupby('Language')['Season Number'].nunique().nlargest(10))","d63a55f6":"# Total number of Bigg Boss housemates\nfig = plt.figure(figsize=(10,4))\nax = sns.countplot(x='Language', data=bigg_boss, order=bigg_boss['Language'].value_counts().index)\nax.set_title('Bigg Boss Series - Indian Language')\nfor t in ax.patches:\n    if (np.isnan(float(t.get_height()))):\n        ax.annotate(0, (t.get_x(), 0))\n    else:\n        ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))","68ea2035":"# Number of normal entries and wild card entries\nprint(bigg_boss['Wild Card'].value_counts(), \"\\n\")\nprint(round(bigg_boss['Wild Card'].value_counts(normalize=True)*100).astype(str).str.replace('.0', '%'), \"\\n\")\nsns.countplot(x='Wild Card', data=bigg_boss, palette=\"ch:.45\")","bbfab4c5":"# Common people has many professions, so clubbing them into one category\nbigg_boss['Profession'] = bigg_boss['Profession'].fillna('UNKNOWN')\nbigg_boss.loc[bigg_boss['Profession'].str.contains('Commoner'),'Profession']='Commoner'","fc5ca4a5":"# Participant's Profession\nprint(bigg_boss['Profession'].value_counts())\nfig = plt.figure(figsize=(20,6))\nsns.countplot(x='Profession', data=bigg_boss, order=bigg_boss['Profession'].value_counts().index)\nplt.xticks(rotation=90)","0795c7c0":"# Broadcaster\nfig = plt.figure(figsize=(20,5))\nax = sns.countplot(x='Broadcasted By', data=bigg_boss, palette='RdBu', order=bigg_boss['Broadcasted By'].value_counts().index)\nax.set_title('Bigg Boss Series - Indian Broadcaster & Total Number of Housemates')\nfor t in ax.patches:\n    if (np.isnan(float(t.get_height()))):\n        ax.annotate(0, (t.get_x(), 0))\n    else:\n        ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))","87b18b17":"fig = plt.figure(figsize=(15,5))\nax = sns.countplot(bigg_boss['Broadcasted By'].str.split().str.get(0), data=bigg_boss, palette='Set3', order=bigg_boss['Broadcasted By'].str.split().str.get(0).value_counts().index)\nax.set_title('BiggBoss Series - Media House')\nfor t in ax.patches:\n    if (np.isnan(float(t.get_height()))):\n        ax.annotate(0, (t.get_x(), 0))\n    else:\n        ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))","3c655206":"# Bigg Boss main hosts and number of seasons they hosted\nbigg_boss.groupby('Host Name')['Season Number'].nunique().nlargest(25)","9c8566bd":"# Temporary or Guest host who hosted the week-end episodes\nbigg_boss.groupby('Guest Host Name')['Season Number'].nunique().nlargest(10)","aca431e6":"# Housemate's Gender\nprint(bigg_boss['Gender'].value_counts(), \"\\n\")\n\n# In percentage\nprint(round(bigg_boss['Gender'].value_counts(normalize=True)*100).astype(str).str.replace('.0', '%'))\n\nsns.countplot(data = bigg_boss, x = 'Gender')","69f681e9":"# Maximum TRP of Bigg Boss India seasons (Big Brother in India)\nprint(\"Maximum TRP\",bigg_boss['Average TRP'].max(), \"\\n\")\nprint(bigg_boss.loc[bigg_boss['Average TRP']==bigg_boss['Average TRP'].max()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))","2c7e4cb8":"# Smallest season of Indian Bigg Boss seasons\nprint(\"Smallest season\",bigg_boss['Season Length'].min(), \"days \\n\")\nprint(bigg_boss.loc[bigg_boss['Season Length']==bigg_boss['Season Length'].min()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))","a208df71":"# Longest season of Bigg Boss Indian seasons\nprint(\"Longest season\",bigg_boss['Season Length'].max(), \"days \\n\")\nprint(bigg_boss.loc[bigg_boss['Season Length']==bigg_boss['Season Length'].max()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))","c62138ef":"print(\"Maximum number of contestants in one season:\",bigg_boss['Number of Housemates'].max(), \"\\n\")\nprint(bigg_boss.loc[bigg_boss['Number of Housemates']==bigg_boss['Number of Housemates'].max()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))","700dc553":"print(\"Maximum number of evictions faced in one season:\",bigg_boss['Number of Evictions Faced'].max(), \"\\n\")\nprint(\"\\nTop 3 contestants who faced maximum number of evictions\\n\")\nprint(bigg_boss.loc[bigg_boss['Number of Evictions Faced']>=bigg_boss['Number of Evictions Faced'].max()-3][[\"Language\",\"Season Number\",\"Name\",\"Number of Evictions Faced\"]].head(3).sort_values(\"Number of Evictions Faced\",ascending=False).to_string(index=False))","4a4c712b":"bigg_boss['Season Length in weeks'] = round(bigg_boss['Season Length']\/7,0).astype(pd.Int32Dtype())\nbigg_boss['Evictions Faced Percentage'] = round(bigg_boss['Number of Evictions Faced']\/bigg_boss['Season Length in weeks']*100,0).astype(pd.Int32Dtype())\nprint(\"Maximum percentage of evictions faced in one season:\",bigg_boss['Evictions Faced Percentage'].max(), \"%\\n\")\nprint(\"\\nTop 3 contestants who faced maximum percentage of evictions (they were in nominations almost every week)\\n\")\nprint(bigg_boss.loc[bigg_boss['Evictions Faced Percentage']>=bigg_boss['Evictions Faced Percentage'].max()-5][[\"Language\",\"Season Number\",\"Name\",\"Number of Evictions Faced\",\"Season Length in weeks\",\"Evictions Faced Percentage\"]].head(3).sort_values(\"Evictions Faced Percentage\",ascending=False).to_string(index=False))","3ea89ca5":"print(\"Maximum number of re-entries:\",bigg_boss['Number of re-entries'].max(), \"\\n\")\nprint(bigg_boss.loc[bigg_boss['Number of re-entries']>=bigg_boss['Number of re-entries'].max()-1][[\"Language\",\"Season Number\",\"Name\",\"Number of re-entries\"]].head(5).sort_values(\"Number of re-entries\",ascending=False).to_string(index=False))","31647c4f":"print(\"Maximum number of times elected as captain:\",bigg_boss['Number of times elected as Captain'].max(), \"\\n\")\nprint(bigg_boss.loc[bigg_boss['Number of times elected as Captain']>=bigg_boss['Number of times elected as Captain'].max()-1][[\"Language\",\"Season Number\",\"Name\",\"Number of times elected as Captain\"]].head(6).sort_values(\"Number of times elected as Captain\",ascending=False).to_string(index=False))","a7e9cf7e":"# Many contestants entered via wild card, but 20 people managed to go to Finale\nprint(bigg_boss.loc[(bigg_boss['Wild Card']=='Yes') & (bigg_boss['Finalist']==1), 'Finalist'].value_counts())\nbigg_boss.loc[(bigg_boss['Wild Card']=='Yes') & (bigg_boss['Finalist']==1), :]","d915e186":"# Number of Wild card entries went to Finale, as per Language\nbigg_boss.loc[(bigg_boss['Wild Card']=='Yes') & (bigg_boss['Finalist']==1), 'Language'].value_counts()","a8a4d315":"print(\"Total Bigg Boss season winners\",bigg_boss['Winner'].sum().astype(int), \"(out of\",bigg_boss['Finalist'].sum(),\"finalists)\")\n# For Malayalam Season 2 winner was not declared","ad73f546":"# All BB Winners\nbigg_boss.loc[bigg_boss.Winner==1]","cc0810d8":"# Sum of prize money won by all BB Season winners\/participants, in India\nprint(format_currency(bigg_boss['Prize Money (INR)'].sum(), 'INR', locale='en_IN').replace(\".00\", \"\"))\n\n# 21 crores and 41 lakh rupees","a2312cb3":"# Profession of BB Season Winners\nbigg_boss.loc[bigg_boss.Winner==1,'Profession'].value_counts()","fdc19bd5":"# Gender of Season title Winners\nprint(bigg_boss.loc[bigg_boss.Winner==1,'Gender'].value_counts(),'\\n')\n\n# In percentage\nprint(round(bigg_boss.loc[bigg_boss.Winner==1,'Gender'].value_counts(normalize=True)*100).astype(str).str.replace('.0', '%'))\n\nsns.countplot(data = bigg_boss.loc[bigg_boss.Winner==1], x = 'Gender')","5033e8ba":"# Entry type of the Season Winners\nbigg_boss.loc[bigg_boss.Winner==1,'Wild Card'].value_counts()","0c8e5e3b":"bigg_boss.loc[bigg_boss.Winner==1,'Season Length'].value_counts().sort_index()\n\n# Length of the season - Number of Winners","4c65e7e5":"bigg_boss.loc[bigg_boss.Winner==1,'Number of Housemates'].value_counts().sort_index()\n\n# Number of Housemates in house - Number of Winners","163b589e":"# Number of eliminations or evictions faced by the Bigg Boss competition winners\nbigg_boss.loc[bigg_boss.Winner==1,'Number of Evictions Faced'].value_counts().sort_index()\n\n# Number of eliminations faced - Number of Winners","25516a84":"# No re-entered contestant won Bigg Boss title\nbigg_boss.loc[bigg_boss.Winner==1,'Number of re-entries'].value_counts()","2c8c0931":"# Bigg Boss title winners number of times elected as captain\nbigg_boss.loc[bigg_boss.Winner==1,'Number of times elected as Captain'].value_counts().sort_index()\n\n# Number of times elected as Captain - Number of winners","69f85440":"lang='Hindi'\n\n# All Bigg Boss Hindi Participants\nbigg_boss.loc[(bigg_boss['Language']==lang)]","515645ba":"# Bigg Boss Hindi Winners\nbigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Winner']==1), :]","13a37fba":"# Hindi Bigg Boss all seasons finalists\nbigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Finalist']==1), :]","4f0191c8":"# Number of finalists gender wise, in each BB Hindi season\nbigg_boss[(bigg_boss['Language']==lang) & (bigg_boss['Finalist']==1)].groupby('Gender')['Season Number'].value_counts().sort_index()","1c984de7":"# Bigg Boss Hindi current season participants\nbigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Season Number']==15), :]","0b36392f":"# Bigg Boss Hindi Housemate's Gender\nprint(bigg_boss.loc[(bigg_boss['Language']==lang), 'Gender'].value_counts(), \"\\n\")","4ac4c7ba":"print(\"\\nTop 2 Hindi contestants who faced maximum number of evictions\\n\")\ntmax=bigg_boss.loc[(bigg_boss['Language']==lang),'Number of Evictions Faced'].max()\nprint(bigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Number of Evictions Faced']>=tmax-4)][[\"Season Number\",\"Name\",\"Number of Evictions Faced\"]].head(6).sort_values(\"Number of Evictions Faced\",ascending=False).to_string(index=False))","3948a6fe":"print(\"\\nTop 3 Hindi contestants who faced maximum percentage of evictions (they were in nominations almost every week)\\n\")\ntpmax=bigg_boss.loc[(bigg_boss['Language']==lang),'Evictions Faced Percentage'].max()\nprint(bigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Evictions Faced Percentage']>=tpmax-10)][[\"Season Number\",\"Name\",\"Number of Evictions Faced\",\"Season Length in weeks\",\"Evictions Faced Percentage\"]].head(6).sort_values(\"Evictions Faced Percentage\",ascending=False).to_string(index=False))","4f2ad2ed":"# Handling NULL values\nbigg_boss.isnull().sum()","58ae9f4f":"# Removing records where Name field is empty\nbigg_boss = bigg_boss.loc[bigg_boss.Name.notnull()]\nbigg_boss.reset_index(drop=True,inplace=True)","6cba10eb":"# Contestant might have faced at least one eviction, so filling NaN with 'Number of Evictions Faced' with 1\nbigg_boss['Number of Evictions Faced'] = bigg_boss['Number of Evictions Faced'].fillna(1)\n\n# Number of re-entries are very less, so filling NULLs in 'Number of re-entries' with 0\nbigg_boss['Number of re-entries'] = bigg_boss['Number of re-entries'].fillna(0)\n\n# Filling blank values in 'Average TRP' column with average\nbigg_boss['Average TRP'] = bigg_boss['Average TRP'].fillna(bigg_boss['Average TRP'].mean())\n\n# Filling NULLs in 'Number of times elected as Captain' with 0\nbigg_boss['Number of times elected as Captain'] = bigg_boss['Number of times elected as Captain'].fillna(0)","abdd8c3d":"bigg_boss['Season Starting Year'] = bigg_boss['Season Start Date'].dt.year.astype(pd.Int32Dtype())\nbigg_boss['Season Ending Year'] = bigg_boss['Season End Date'].dt.year.astype(pd.Int32Dtype())\nbigg_boss['Season Starting Quarter'] = bigg_boss['Season Start Date'].dt.quarter.astype(pd.Int32Dtype())\nbigg_boss['Season Ending Quarter'] = bigg_boss['Season End Date'].dt.quarter.astype(pd.Int32Dtype())\nbigg_boss.info()","414c4132":"bigg_boss.head()","d9a53b93":"bigg_boss.tail()","c713a97e":"# Updating last week-end elimination\/entries manually\n# bigg_boss.iloc[270,23] = 0","475695ae":"train = bigg_boss.loc[(bigg_boss['Winner'].notnull()), :]\ntrain.sample(10)","2e7c52d8":"test = bigg_boss.loc[(bigg_boss['Language']==lang) & (bigg_boss['Winner'].isnull()), :]\ntest\n\n# Participants who are still in current Bigg Boss Hindi season","91f6c39e":"BB_Hindi_participants = test[['Name']]\nBB_Hindi_participants.reset_index(drop=True, inplace=True)\nBB_Hindi_participants","fcd0fc12":"train.drop([\"Name\",\"Entry Date\",\"Elimination Date\",\"Season Start Date\",\"Season End Date\",], axis=1, inplace=True)\ntest.drop([\"Name\",\"Entry Date\",\"Elimination Date\",\"Season Start Date\",\"Season End Date\",\"Winner\"], axis=1, inplace=True)","edb3684c":"train.head()","a966cafb":"test.head()","51570135":"# Spread of target variable\nprint(train['Winner'].value_counts(normalize=True)*100)","4e083db4":"# One Hot Encoding\n\ntarget = train.pop('Winner')\ndata = pd.concat([train, test])\ndummies = pd.get_dummies(data, columns=data.columns, drop_first=True, sparse=True)\ntrain2 = dummies.iloc[:train.shape[0], :]\ntest = dummies.iloc[train.shape[0]:, :]","97980868":"print(train2.shape)\nprint(test.shape)","5741400f":"train2.isnull().sum().sort_values(ascending=False)","aeb38ebb":"train2.drop([\"Profession_Doctor\"], axis=1, inplace=True)\ntest.drop([\"Profession_Doctor\"], axis=1, inplace=True)","0830bd3d":"train2.head()","9616a674":"target.values","51fb2c76":"x_train, x_val, y_train, y_val = train_test_split(train2, target, test_size=0.3, random_state=2021)\nprint(x_train.shape, x_val.shape)","b7f8ef87":"x_train.isnull().sum().sort_values(ascending=False)","00b8a701":"def plot_confusion_matrix():\n    cm = confusion_matrix(y_val, y_predicted_val).T\n    cm = cm.astype('float')\/cm.sum(axis=0)\n    ax = sns.heatmap(cm, annot=True, cmap='Blues');\n    ax.set_xlabel('True Label',size=12)\n    ax.set_ylabel('Predicted Label',size=12)","ceab0f8f":"# Logistic Regression\nfor c in [0.01, 1, 10, 100, 1000]:\n    lr = LogisticRegression(random_state=2021, C=c).fit(x_train, y_train)\n    print (\"F1 score for C=%s: %s\" % (c, f1_score(y_val, lr.predict(x_val), average='weighted')*100))","64c1d45f":"logi = LogisticRegression(random_state=2021, C=100).fit(x_train, y_train)\nlogi","83c98130":"predicted_val_logi = logi.predict_proba(x_val)[:, 1]\ny_predicted_val = (predicted_val_logi > 0.3).astype(\"int\").ravel()\nprint('F1 Score -',f1_score(y_val, y_predicted_val, average='weighted')*100)\nprint('Accuracy Score -',accuracy_score(y_val, y_predicted_val)*100)","6f4eaf2a":"# Confusion Matrix\nplot_confusion_matrix()\n\n# TP 0.99 TN 0.89","0cbe6dbd":"predicted_val_logi = logi.predict_proba(test)[:, 1]\nwinner_lg = pd.concat([BB_Hindi_participants, pd.DataFrame(predicted_val_logi, columns=['Predicted_Winner'])],axis=1)\nwinner_lg.sort_values('Predicted_Winner', ascending=False)","24fe000d":"# Predicted Winner for Bigg Boss Hindi Season 15, as per Logistic Regression\nwinner_lg[winner_lg['Predicted_Winner'] == np.amax(winner_lg.Predicted_Winner)]","23a94d2b":"# Random Forest\nrf = RandomForestClassifier(n_estimators=3000, random_state=2021).fit(x_train, y_train)\nrf","5b77351f":"predicted_val_rf = rf.predict_proba(x_val)[:, 1]\ny_predicted_val = (predicted_val_rf > 0.3).astype(\"int\").ravel()\nprint('F1 Score -',f1_score(y_val, y_predicted_val, average='weighted')*100)\nprint('Accuracy Score -',accuracy_score(y_val, y_predicted_val)*100)\n\n# n_estimators=200 accuracy 98.22\n# n_estimators=500 accuracy 100","2e2bfe5c":"# Confusion Matrix\nplot_confusion_matrix()\n\n# TP 1 TN 1","16cc1511":"predicted_val_rf = rf.predict_proba(test)[:,1]\nwinner_rf = pd.concat([BB_Hindi_participants, pd.DataFrame(predicted_val_rf, columns=['Predicted_Winner'])],axis=1)\nwinner_rf.sort_values('Predicted_Winner', ascending=False)","59680130":"# Predicted Winner for Bigg Boss Hindi Season 15, as per Random Forest\nwinner_rf.iloc[np.argwhere(winner_rf.Predicted_Winner == np.amax(winner_rf.Predicted_Winner)).flatten().tolist()]","b288813a":"text = \" BiggBoss \".join(cat for cat in bigg_boss['Language'])\nwordcloud = WordCloud(width = 2000, height = 1500, background_color='black', colormap='Set3', collocations=False, random_state=2021).generate(text)\nwordcloud.to_file(\"world_cloud_hindi.png\")","c565ff6c":"# Correlation matrix (Heatmap style)\ncorrmat = bigg_boss.corr()\nf, ax = plt.subplots(figsize=(17, 11))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(corrmat, vmax=1.0, linewidths=0.1, square=True, cmap=\"RdBu\", linecolor='white', annot=True);","9453f383":"# Crosschecking Actor\/Actress Gender\nbigg_boss[bigg_boss['Profession'].str.contains('Act')].groupby('Gender')['Profession'].value_counts().unstack()\n#bigg_boss.loc[(bigg_boss['Profession']=='Actress') & (bigg_boss['Gender']=='Male')]","a25ef4d5":"print(\"numpy version: {}\". format(np.__version__))\nprint(\"pandas version: {}\". format(pd.__version__))\n\nimport matplotlib\nprint(\"matplotlib version: {}\". format(matplotlib. __version__))\nprint(\"seaborn version: {}\". format(sns.__version__))\n\nimport sklearn\nprint(\"sklearn version: {}\". format(sklearn.__version__))\n\n# !pip install numpy --upgrade\n# !pip install pandas --upgrade\n# !pip install matplotlib --upgrade\n# !pip install seaborn --upgrade\n# !pip install sklearn --upgrade\n\n# Older versions\n# numpy version: 1.16.4\n# pandas version: 0.25.2\n# matplotlib version: 3.0.3\n# seaborn version: 0.9.0\n# sklearn version: 0.21.3","724f4d19":"### Check and import dataset","ac3a7c9b":"## No wild card entry housemate won the Bigg Boss competition.","eb820caf":"## Machine Learning (ML) models to predict Indian BiggBoss (Big Brother) season Winners\n\n## Kannada Bigg Boss Season8\n## https:\/\/www.kaggle.com\/thirumani\/predicting-bigg-boss-kannada-season-8-winner\n\n## Telugu Bigg Boss Season5\n## https:\/\/www.kaggle.com\/thirumani\/predicting-bigg-boss-telugu-season-5-winner\n\n## Tamil Bigg Boss Season5\n## https:\/\/www.kaggle.com\/thirumani\/predicting-bigg-boss-tamil-season-5-winner\n\n## Malayalam Bigg Boss Season3\n## https:\/\/www.kaggle.com\/thirumani\/predicting-bigg-boss-malayalam-season-3-winner\n\n## Marathi Bigg Boss Season3\n## https:\/\/www.kaggle.com\/thirumani\/predicting-bigg-boss-marathi-season-3-winner","73b7b5fb":"## Machine Learning Modelling","6411cbc7":"## About Winners only","6a3c72a4":"## Predicted Winner for Bigg Boss Hindi Season 15, as per Random Forest","0f544ded":"## Exploratory Data Analysis (EDA)","32dcd4bd":"### Only 6 Transgenders (LGBT) participated in all Indian languages","1a5f9b58":"## BB Hindi Seasons","e1f05ac9":"## Preparing Data for ML modelling","35350bab":"## Predicting Hindi Bigg Boss (\u092c\u093f\u0917 \u092c\u0949\u0938 \u0939\u093f\u0902\u0926\u0940) Season 15 Winner\n\n## Dataset https:\/\/www.kaggle.com\/thirumani\/bigg-boss-india-hindi-telugu-tamil-kannada","1cb755b0":"## In all Bigg Boss competitions, in languages and in all seasons, Female contestants are more","6edcf4d7":"## Bigg Boss Hindi has many seasons compared to other Indian languages. So, the number of housemates are more in Hindi.","2dd89381":"## Predicted Winner for Bigg Boss Hindi Season 15, as per Logistic Regression","04a65226":"<img src=\".\/world_cloud_hindi.png\">","7d3acd7b":"## Salman Khan hosted most number of seasons (in Bigg Boss Hindi), Sudeep is next on the list","d6a082e8":"### Importing Required Python Libraries","c96e3fac":"## In Bigg Boss India seasons, most of the housemates entered in first day\/week","4a4cbd68":"## Number of film actresses entered into the Bigg Boss houses, are more when compared to other professions"}}