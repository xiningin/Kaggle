{"cell_type":{"a04ee517":"code","1dad8f6d":"code","bffb9320":"code","6e31bcbd":"code","4985f6c0":"code","20f06d69":"code","1c73d53b":"code","0c0ee19d":"code","7beb6581":"code","0759d05e":"code","3f4be846":"code","75d9c271":"code","0ae926e5":"code","4929cb71":"code","38937563":"markdown"},"source":{"a04ee517":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1dad8f6d":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.columns","bffb9320":"# \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ud328\ud0a4\uc9c0\nimport matplotlib \nimport matplotlib.pyplot as plt  \nmatplotlib.rc('font',family='AppleGothic')\nplt.rcParams['axes.unicode_minus'] = False","6e31bcbd":"# \uac00\uc1241 : \ud2f0\ucf13 \ub4f1\uae09\ubcc4\ub85c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4  \ndf = train.groupby(['Pclass']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx = plot_data.index \ny = plot_data['ratio']\nax.bar(x,y)\nax.grid(axis='y',alpha=0.3)\nplt.show()","4985f6c0":"# \uac00\uc1242 : \uc131\ubcc4\uc5d0 \ub530\ub77c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['Sex']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx = plot_data.index \ny = plot_data['ratio']\nax.bar(x,y)\nax.grid(axis='y',alpha=0.3)\nplt.show()","20f06d69":"# \uac00\uc1243 : \ub098\uc774\uc5d0 \ub530\ub77c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \n# \uba3c\uc800 \ub098\uc774\ub97c \ud558\ub098\uc758 \ubc94\uc8fc\ub85c \uadf8\ub8f9\ud551\nfor i in train.index:\n    age = train.loc[i,'Age']\n    if age < 20:\n        train.loc[i,'AgeGroup'] = '0~19'\n    elif (age >= 20) & (age < 40):\n        train.loc[i,'AgeGroup'] = '20~39'\n    elif (age >= 40) & (age < 80):\n        train.loc[i,'AgeGroup'] = '40~79'\n    elif age >= 80:\n        train.loc[i,'AgeGroup'] = '80~'\n    else:\n        continue\n\ndf = train.groupby(['AgeGroup']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx = plot_data.index \ny = plot_data['ratio']\nax.bar(x,y)\nax.grid(axis='y',alpha=0.3)\nplt.show()","1c73d53b":"# \uac00\uc1244 : \ud2f0\ucf13 \uac00\uaca9\uc5d0 \ub530\ub77c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \n# \uba3c\uc800 \ud2f0\ucf13 \uac00\uaca9\uc744 \ud558\ub098\uc758 \ubc94\uc8fc\ub85c \uadf8\ub8f9\ud551\nfor i in train.index:\n    fare = train.loc[i,'Fare']\n    if fare < 100:\n        train.loc[i,'FareGroup'] = '0~99'\n    elif (fare >= 100) & (fare < 200):\n        train.loc[i,'FareGroup'] = '100~199'\n    elif (fare >= 200) & (fare < 300):\n        train.loc[i,'FareGroup'] = '200~299'\n    elif (fare >= 300) & (fare < 400):\n        train.loc[i,'FareGroup'] = '300~399'\n    elif fare >= 400:\n        train.loc[i,'FareGroup'] = '400~'\n    else:\n        continue\n\ndf = train.groupby(['FareGroup']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx = plot_data.index \ny = plot_data['ratio']\nax.bar(x,y)\nax.grid(axis='y',alpha=0.3)\nplt.show()","0c0ee19d":"# \uac00\uc1245 : \uc2b9\uc120 \ud56d\uad6c\uc5d0 \ub530\ub77c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['Embarked']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx = plot_data.index \ny = plot_data['ratio']\nax.bar(x,y)\nax.grid(axis='y',alpha=0.3)\nplt.show()","7beb6581":"# \uac00\uc1246 : \ud2f0\ucf13 \ub4f1\uae09\uacfc \uc131\ubcc4\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['Sex','Pclass']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nplot_data\nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx_lbl = plot_data.index \nx = np.arange(len(x_lbl))\ny = plot_data['ratio']\nax.bar(x,y)\nax.set_xticks(x)\nax.set_xticklabels(str(x1) for x1 in x_lbl)\nax.grid(axis='y',alpha=0.3)\nplt.show()","0759d05e":"# \uac00\uc1247 : \uc131\ubcc4\uacfc \ub098\uc774\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['Sex','AgeGroup']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nplot_data\nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx_lbl = plot_data.index \nx = np.arange(len(x_lbl))\ny = plot_data['ratio']\nax.barh(x,y)\nax.set_yticks(x)\nax.set_yticklabels(str(x1) for x1 in x_lbl)\nax.grid(axis='y',alpha=0.3)\nplt.show()","3f4be846":"# \uac00\uc1248 : \uc2b9\uc120\ud56d\uad6c\uc640 \ud2f0\ucf13\ub4f1\uae09\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['Embarked','Pclass']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nplot_data\nfig = plt.figure(facecolor='white',figsize=(10,4)) \nax = fig.add_subplot() \nx_lbl = plot_data.index \nx = np.arange(len(x_lbl))\ny = plot_data['ratio']\nax.barh(x,y)\nax.set_yticks(x)\nax.set_yticklabels(str(x1) for x1 in x_lbl)\nax.grid(axis='y',alpha=0.3)\nplt.show()","75d9c271":"# \uac00\uc1249 : \ub3d9\ud589\uc778 \uc218\uc5d0 \ub530\ub77c\uc11c \uc0dd\uc874\uc728 \ucc28\uc774\uac00 \uc788\ub2e4 \ndf = train.groupby(['SibSp','Parch']).agg({'Survived':[np.sum,'count']})['Survived']\ndf['ratio'] = round(df['sum']\/df['count']*100,1)\nplot_data = df.copy() \nplot_data\nfig = plt.figure(facecolor='white',figsize=(10,8)) \nax = fig.add_subplot() \nx_lbl = plot_data.index \nx = np.arange(len(x_lbl))\ny = plot_data['ratio']\nax.barh(x,y)\nax.set_yticks(x)\nax.set_yticklabels(str(x1) for x1 in x_lbl)\nax.grid(axis='y',alpha=0.3)\nplt.show()","0ae926e5":"print('\uc815\uc81c \uc804 \uacb0\uce21\uac12')\nprint(train.isna().sum())\nidx = ~train['Age'].isna()\ndf = train.loc[idx,:].copy() \ndf2 = df.groupby(['Embarked','Pclass','Sex']).agg({'Age':np.mean})\n\nidx = train['Age'].isna() \nfor i in train[idx].index:\n    e = train.loc[i,'Embarked']\n    p = train.loc[i,'Pclass']\n    s = train.loc[i,'Sex']\n    train.loc[i,'Age'] = df2.loc[(e,p,s),'Age']\n    \nfor i in train.index:\n    age = train.loc[i,'Age']\n    if age < 20:\n        train.loc[i,'AgeGroup'] = '0~19'\n    elif (age >= 20) & (age < 40):\n        train.loc[i,'AgeGroup'] = '20~39'\n    elif (age >= 40) & (age < 80):\n        train.loc[i,'AgeGroup'] = '40~79'\n    elif age >= 80:\n        train.loc[i,'AgeGroup'] = '80~'\n    else:\n        continue\n\nprint()\nprint('\uc815\uc81c \ud6c4 \uacb0\uce21\uac12')\nprint(train.isna().sum())","4929cb71":"idx = train['Embarked'].isna()\ntrain.loc[idx,:]","38937563":"\uacb0\uce21\uac12 \ucc98\ub9ac "}}