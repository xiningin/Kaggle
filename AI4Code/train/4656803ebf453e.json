{"cell_type":{"27e463bd":"code","a8cbe282":"code","e938c711":"code","aaec35b9":"code","a241b5e9":"code","90378945":"code","2742878f":"code","e295885e":"code","c46c4263":"code","84615469":"code","81cef7f0":"code","344d6fcf":"code","6fbf106a":"code","06c91823":"code","fcc1a705":"code","5664db41":"code","44cb5860":"code","286e67f0":"code","8cbdaf91":"code","ff5ff963":"code","1e127b3b":"code","461127d1":"code","9939d363":"code","4e2ca50c":"code","9e21dcaf":"code","8b16c0c8":"code","eb4b5e73":"code","e6dabc8e":"code","42b6ff10":"code","8a2a98f2":"code","68f91478":"code","3f02754b":"code","500d6505":"code","de2e6942":"code","9f0951df":"code","32808438":"code","d4998eae":"code","882ba558":"code","b5f971ef":"code","ed006cc6":"code","0893f2ec":"code","86534605":"code","a8916c2b":"code","b3bbd464":"code","4835416e":"code","f3b95283":"code","aa4fe6cd":"code","1fec3007":"code","178b5b0f":"code","9a797faf":"code","f0a88f80":"code","27511220":"code","45cbac09":"code","23d3d441":"code","36558cca":"code","085ee5e7":"code","ef15e7bf":"code","de78d8d8":"markdown","fc26bb89":"markdown","98c810d1":"markdown","f7b05836":"markdown","fb4b3d9b":"markdown","bb01009b":"markdown","a905c7aa":"markdown","4546ce49":"markdown","99fdb6c2":"markdown","e5a7f9a6":"markdown","eaf2ed6e":"markdown","13d6cc90":"markdown","ac6b09ec":"markdown"},"source":{"27e463bd":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import norm\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","a8cbe282":"df_train_orig = pd.read_csv('..\/input\/train.csv')","e938c711":"df_train_orig['SalePrice'].describe()","aaec35b9":"sns.distplot(df_train_orig['SalePrice'], fit=norm);","a241b5e9":"fig = stats.probplot(df_train_orig['SalePrice'], plot=plt)","90378945":"print(\"Skewness: %f\" % df_train_orig['SalePrice'].skew())\nprint(\"Kurtosis: %f\" % df_train_orig['SalePrice'].kurt())","2742878f":"# \u4e0b\u9762\u9019\u884c\u53ea\u662f\u5728\u8abf\u6574\u5716\u7247\u5927\u5c0f\nf, ax = plt.subplots(figsize=(12, 9))\n\n# \u756b heatmap\nsns.heatmap(df_train_orig.corr(), vmax=.8, square=True);\n# \u76f8\u4f3c\u7684\u6307\u4ee4 plt.matshow(df_train.corr())","e295885e":"df_train_orig.corr().nlargest(20, 'SalePrice')['SalePrice']","c46c4263":"df_train = pd.concat([df_train_orig['SalePrice'], \\\n                      df_train_orig['OverallQual'], \\\n                      df_train_orig['GrLivArea'], \\\n                      df_train_orig['GarageCars'], \\\n                      df_train_orig['TotalBsmtSF'], \\\n                      df_train_orig['MasVnrArea'], \\\n                      df_train_orig['Fireplaces']], axis=1).copy()","84615469":"df_train.isnull().sum()","81cef7f0":"# \u6211\u5011\u524d\u9762\u5df2\u7d93\u756b\u904e\u9019\u5f35\u5716\u4e86\uff0c\u770b\u8d77\u4f86\u53ef\u4ee5\u53d6\u500b log\nsns.distplot(df_train['SalePrice'], fit=norm);","344d6fcf":"sns.distplot(np.log(df_train['SalePrice']), fit=norm);","6fbf106a":"df_train['log_SalePrice'] = np.log(df_train['SalePrice'])","06c91823":"sns.distplot(df_train['GrLivArea'], fit=norm);","fcc1a705":"sns.distplot(np.log(df_train['GrLivArea']), fit=norm);","5664db41":"df_train['log_GrLivArea'] = np.log(df_train['GrLivArea'])","44cb5860":"sns.distplot(df_train['TotalBsmtSF'], fit=norm);","286e67f0":"totalbsmtzero_idx = df_train[df_train['TotalBsmtSF'] == 0].index.tolist()\nprint(\"\u5171\u6709 %d \u7d44\u70ba 0 \uff0c\u6240\u4f54\u6bd4\u4f8b %.2f \" % (len(totalbsmtzero_idx), len(totalbsmtzero_idx) \/ df_train['TotalBsmtSF'].count() * 100))\n# \u6c92\u6709\u5730\u4e0b\u5ba4\u6216\u6c92\u6709\u5730\u4e0b\u5ba4\u9762\u7a4d\u8cc7\u6599 (TotalBsmtSF == 0) \u6240\u4f54\u6bd4\u7387\u7d04\u70ba 2.5 %","8cbdaf91":"# \u53bb\u6389 0 \u505a log transformation\ntmp_totalbsmtsf = df_train['TotalBsmtSF'].copy()\nsns.distplot(np.log(tmp_totalbsmtsf.drop(totalbsmtzero_idx)), fit=norm);","ff5ff963":"# \u5982\u679c\u7528 binning \u7684\u8a71\ntmp2_totalbsmtsf = df_train['TotalBsmtSF'].copy()\ntmp2_mean = df_train['TotalBsmtSF'].mean()\ntmp2_std = df_train['TotalBsmtSF'].std()\nbins = [tmp2_totalbsmtsf.min()-1, tmp2_mean - 2*tmp2_std, tmp2_mean - tmp2_std, tmp2_mean, tmp2_mean + tmp2_std, tmp2_mean + 2*tmp2_std, tmp2_totalbsmtsf.max()+1]\nlabels = [1,2,3,4,5,6]\ntmp2_totalbsmtsf_cut = pd.cut(tmp2_totalbsmtsf, bins=bins, labels=labels)\nsns.distplot(tmp2_totalbsmtsf_cut, fit=norm);","1e127b3b":"# \u6c7a\u5b9a\u76f4\u63a5\u53bb\u6389\u70ba 0 \u7684 row\uff0c\u505a log transformation\ndf_train.count()","461127d1":"df_train = df_train.drop(totalbsmtzero_idx)\ndf_train.count()","9939d363":"df_train['log_TotalBsmtSF'] = np.log(df_train['TotalBsmtSF'])","4e2ca50c":"# \u524d\u9762\u5df2\u7d93\u77e5\u9053\u6709 null \u503c\u4e86\nmasvnrnull_idx = df_train[df_train['MasVnrArea'].isnull()].index.tolist()\nmasvnrnull_idx","9e21dcaf":"# \u5148\u770b\u4e00\u4e0b\u5716\u9577\u600e\u6a23\uff0c\u518d\u6c7a\u5b9a\u600e\u9ebc\u586b null \u503c\ntmp_masvnrarea = df_train['MasVnrArea'].copy()\nsns.distplot(tmp_masvnrarea.drop(masvnrnull_idx), fit=norm);","8b16c0c8":"masvnrarea_ratio = df_train[df_train['MasVnrArea'] == 0]['MasVnrArea'].count() \/ df_train['MasVnrArea'].count() * 100\nprint(\"\u6709\u77f3\u9020\u7269\/\u5168\u90e8 = %.2f \" % masvnrarea_ratio)","eb4b5e73":"# \u6c7a\u5b9a\u76f4\u63a5\u5206\u6210\u6709\u77f3\u9020\u7269\u8207\u6c92\u6709\u7684\u5169\u7d44\uff0c\u5148\u628a null \u586b 0\ndf_train['MasVnrArea'].loc[masvnrnull_idx] = 0\ndf_train['has_MasVnsArea'] = (df_train['MasVnrArea'] > 0).astype(float)\ndf_train[['MasVnrArea', 'has_MasVnsArea']].head()","e6dabc8e":"#\u5148\u770b\u4e00\u4e0b\u76ee\u524d\u8655\u7406\u7684\u72c0\u6cc1\ndf_train.columns","42b6ff10":"dummy_fields = ['OverallQual', 'GarageCars', 'Fireplaces', 'has_MasVnsArea']\nriders = df_train.copy()\nfor field in dummy_fields:\n    dummies = pd.get_dummies( riders.loc[:, field], prefix=field)\n    riders = pd.concat([riders, dummies], axis = 1)","8a2a98f2":"riders['GarageCars_5'] = 0\nriders['Fireplaces_4'] = 0","68f91478":"drop_fields = ['OverallQual', 'GarageCars', 'Fireplaces', 'has_MasVnsArea', 'GrLivArea', 'TotalBsmtSF', 'MasVnrArea']\ndf_data = riders.drop(drop_fields, axis = 1)\ndf_data.shape","3f02754b":"df_data.head()","500d6505":"train_x = df_data.iloc[:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26]].values\ntrain_y = df_data.iloc[:,[1]].values","de2e6942":"from sklearn.linear_model import LinearRegression","9f0951df":"lm = LinearRegression()\nlm.fit(train_x, train_y)","32808438":"print(lm.intercept_)","d4998eae":"print(lm.coef_)","882ba558":"train_yy = lm.predict(train_x)","b5f971ef":"from sklearn.metrics import mean_squared_error\nmean_squared_error(train_yy, train_y)","ed006cc6":"sns.distplot(train_y - train_yy)","0893f2ec":"sns.distplot(df_data.iloc[:,[0]].values - np.exp(train_yy))","86534605":"np.exp(train_yy)","a8916c2b":"np.exp(train_y)","b3bbd464":"df_test_orig = pd.read_csv('..\/input\/test.csv')\ndf_test_orig.head()","4835416e":"\ndf_test = df_test_orig[['Id', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'MasVnrArea', 'Fireplaces']].copy()","f3b95283":"df_test.head()","aa4fe6cd":"df_test.isnull().sum()","1fec3007":"nullgaragecars_idx = df_test[df_test['GarageCars'].isnull()].index.tolist()\ndf_test['GarageCars'].loc[nullgaragecars_idx] = 2","178b5b0f":"nulltotalbsmtsf_test_idx = df_test[df_test['TotalBsmtSF'].isnull()].index.tolist()\ndf_test['TotalBsmtSF'].loc[nulltotalbsmtsf_test_idx] = df_test['TotalBsmtSF'].mean()","9a797faf":"nullmasvnrarea_test_idx = df_test[df_test['MasVnrArea'].isnull()].index.tolist()\ndf_test['MasVnrArea'].loc[nullmasvnrarea_test_idx] = 0","f0a88f80":"df_test.isnull().sum()","27511220":"df_test['log_GrLivArea'] = np.log(df_test['GrLivArea'])\ndf_test['log_TotalBsmtSF'] = np.log(df_test['TotalBsmtSF'])\ndf_test['has_MasVnsArea'] = (df_test['MasVnrArea'] > 0).astype(float)\n\ndummy_fields = ['OverallQual', 'GarageCars', 'Fireplaces', 'has_MasVnsArea']\nriders_test = df_test.copy()\nfor field in dummy_fields:\n    dummies = pd.get_dummies( riders_test.loc[:, field], prefix=field)\n    riders_test = pd.concat([riders_test, dummies], axis = 1)\n\ndrop_fields = ['OverallQual', 'GarageCars', 'Fireplaces', 'has_MasVnsArea', 'GrLivArea', 'TotalBsmtSF', 'MasVnrArea']\ndf_data_test = riders_test.drop(drop_fields, axis = 1)\ndf_data_test.shape","45cbac09":"df_data_test.head()","23d3d441":"test_x = df_data_test.iloc[:,[1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25]].values","36558cca":"test_yy = lm.predict(test_x)","085ee5e7":"res = pd.concat([df_data_test['Id'], pd.DataFrame(np.exp(test_yy))], axis=1)\nres.columns = ['Id', 'SalePrice']\nres.head()","ef15e7bf":"res.to_csv('summission.csv', encoding='utf-8', index = False)","de78d8d8":"## \u5206\u6790 MasVnrArea","fc26bb89":"## feature \u9078\u64c7\n- OveralQual: Overall material and finish quality (1-10 \u8a55\u5206\uff0c10\u6700\u597d)\n- GrLivArea: Above grade (ground) living area square feet (\u5730\u4e0a\u751f\u6d3b\u7a7a\u9593 in \u5e73\u65b9\u544e)\n- GarageCars: Size of garage in car capacity (\u8eca\u5eab\u53ef\u5bb9\u7d0d\u8eca\u8f1b\u6578 0-4)\n- TotalBsmtSF: Total square feet of basement area (\u5730\u4e0b\u5ba4\u7684\u9762\u7a4d in \u5e73\u65b9\u544e)\n- MasVnrArea: Masonry veneer area in square feet (\u77f3\u9020\u5efa\u7269\u9762\u7a4d in \u5e73\u65b9\u544e)\n- Fireplaces: Number of fireplaces (\u58c1\u7210\u6578\u91cf 0-3)\n","98c810d1":"## ToalBsmtSF \u5206\u6790","f7b05836":"## test set","fb4b3d9b":"- describe \u8cc7\u6599\u6b04\u4f4d\n- get the stat from target","bb01009b":"## SalePrice","a905c7aa":"- \u6709 0 \uff0c\u7121\u6cd5\u76f4\u63a5\u8f49 log","4546ce49":"## data cleaning completed, try a easy model first","99fdb6c2":"## \u6aa2\u8996 feature \u5011","e5a7f9a6":"## GrLivArea","eaf2ed6e":"## null \u503c\u8655\u7406\n- GarageCars\uff0c\u586b 2\n- TotalBsmtSF \u586b mean\n- MasVnrArea \u586b 0","13d6cc90":"## dummy fileds \u555e\u8b8a\u6578\u5011","ac6b09ec":"## \u69cb\u9020 data"}}