{"cell_type":{"1882ea39":"code","698e2480":"code","ebbff265":"code","77219058":"code","17ba6138":"code","5f4da479":"code","5ce365a2":"code","bad9de29":"code","0e188cbc":"code","0f429d0e":"code","86f59d3e":"code","ca1a1eb5":"code","3e1c9e7c":"code","7443d843":"code","2c58b1a6":"code","559012e9":"code","f9a8c98f":"code","af463e4b":"code","d828fc66":"code","7ae8313b":"code","e9907ac6":"code","da83e722":"code","4649a11e":"code","9991b8a9":"code","d54d79de":"code","a03491b4":"code","97fec724":"code","49698070":"code","0ff28e0d":"code","6a2532ca":"code","c1b72eb0":"code","ec6a4535":"code","0c96b054":"code","05a3c9d0":"code","098072ec":"code","953177ca":"code","afe39f7d":"code","f1c490f3":"code","81a35da6":"code","8fd0520e":"code","264fbe4c":"code","d11e1b64":"code","711d28a7":"code","2e458d4a":"code","fb344bdc":"markdown","1be2ec71":"markdown","7eff587f":"markdown","d9f4a265":"markdown","0ab8d46c":"markdown","5f78823b":"markdown","852931f9":"markdown","75e66eda":"markdown","af9499d0":"markdown","60a07694":"markdown","3e9e6f59":"markdown","e33b6e5e":"markdown","daae28b8":"markdown","0d8322dc":"markdown"},"source":{"1882ea39":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","698e2480":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","ebbff265":"msno.matrix(train, figsize =(6,3))\nmsno.matrix(test, figsize = (6,3))","77219058":"g = sns.FacetGrid(data = train)\ng = g.map(sns.histplot, 'Age')","17ba6138":"sns.histplot(data = test.Age)","5f4da479":"median_train_male = train.loc[train['Sex'] == 'male']['Age'].median()\nmedian_train_female = train.loc[train['Sex'] == 'female']['Age'].median()\nmedian_test_male = test.loc[test['Sex'] == 'male']['Age'].median()\nmedian_test_female = test.loc[test['Sex'] == 'female']['Age'].median()\nprint(f'The median age for men in the train set is {median_train_male}\\nThe median age for women in the train set is {median_train_female}\\nThe median age for men in the test set is {median_test_male}\\nThe median age for women in the test set is {median_test_female}')","5ce365a2":"train['Age1'] = np.where((train['Sex']=='male') & (train['Age'].isnull() == True),29, train['Age'])\ntrain['Age1'] = np.where((train['Sex']=='female') & (train['Age'].isnull() == True),27, train['Age1'])\ntrain = train.drop(columns = 'Age')","bad9de29":"test['Age1'] = np.where(test['Age'].isnull() == True,27, test['Age'])\ntest = test.drop(columns = 'Age')","0e188cbc":"train = train.join(train['Sex'].str.get_dummies())","0f429d0e":"train.drop(columns = 'Sex', inplace = True)","86f59d3e":"train.drop(columns = 'female', inplace = True)","ca1a1eb5":"test = test.join(test['Sex'].str.get_dummies())","3e1c9e7c":"test.drop(columns =['Sex', 'female'], inplace = True)","7443d843":"test['Fare'] = test.Fare.fillna(value = test.Fare.mean())","2c58b1a6":"train.columns","559012e9":"features = ['Pclass', 'SibSp', 'Parch', 'Fare', 'Age1', 'male']","f9a8c98f":"X = train[features]\nY = train['Survived']","af463e4b":"SEED = 1000","d828fc66":"train_X, val_X, train_Y, val_Y = train_test_split(X,Y,test_size = 0.25, random_state = SEED)","7ae8313b":"RFC = RandomForestClassifier(random_state = SEED, n_estimators = 150, max_leaf_nodes = 12, max_depth = 4)","e9907ac6":"RFC.fit(train_X, train_Y)","da83e722":"train_pred = RFC.predict(val_X)","4649a11e":"print(metrics.f1_score(val_Y, train_pred))","9991b8a9":"RFC.score(val_X,val_Y)","d54d79de":"cnf_mtx = metrics.confusion_matrix(val_Y, train_pred)","a03491b4":"cnf_mtx","97fec724":"RFC1 = RandomForestClassifier(random_state = SEED)","49698070":"parameters = {'n_estimators':[100,120,150,200], 'max_leaf_nodes':[2,3,4,5,8,10,12,15],\n             'max_depth':[2,4,6,8,10,12,14,15]}","0ff28e0d":"from sklearn.model_selection import GridSearchCV","6a2532ca":"gs_RFC1 = GridSearchCV(RFC1, parameters,scoring = 'f1', cv = 10)","c1b72eb0":"gs_RFC1.fit(X, Y)","ec6a4535":"gs_RFC1.best_params_","0c96b054":"results = pd.DataFrame(gs_RFC1.cv_results_)","05a3c9d0":"results.columns","098072ec":"results_main = results[['rank_test_score','params', 'mean_test_score']]","953177ca":"results_main.sort_values(by = 'rank_test_score')","afe39f7d":"test.columns","f1c490f3":"test_df = test[features]","81a35da6":"RFC = RandomForestClassifier(random_state = SEED, max_depth = 4, max_leaf_nodes = 12, n_estimators = 200 )","8fd0520e":"RFC.fit(X,Y)","264fbe4c":"test_pred = RFC.predict(test_df)","d11e1b64":"ids = test['PassengerId']","711d28a7":"output = pd.DataFrame({'PassengerId': ids, 'Survived':test_pred})","2e458d4a":"output.to_csv('submission.csv',index = False)","fb344bdc":"And now to fit the model I will consider the whole train dataset","1be2ec71":"# GridSearchCV to search best parameters within a given group","7eff587f":"Defining a SEED to always get the same data to train and validate the model","d9f4a265":"I will drop train['female']as well, because it will pollute the model. Genderly speaking if you are not a male, you should be a female.","0ab8d46c":"Let's use the median values to fulfill null data on the Age column ","5f78823b":"# Defining the features","852931f9":"For the train set","75e66eda":"# Instantiating the estimator RandomForestClassifier","af9499d0":"Age seens to be a very importat columns at first. Cabin number not so much. Let's treat them","60a07694":"Instantiating the model once again with all the optimized parameters","3e9e6f59":"Sklearn do not understant categorical data such as strings. So let's change it into binary","e33b6e5e":"Here we fit using the whole train dataset","daae28b8":"# Let's now predict using the test dataset","0d8322dc":"# Spliting data for fitting the model"}}