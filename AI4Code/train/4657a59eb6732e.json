{"cell_type":{"79371ae4":"code","84398d5b":"code","caa6b145":"code","3e2018c9":"code","2d100296":"code","7d3ebeeb":"code","ebdcfdf8":"code","1e09882b":"code","559ca683":"code","381332d0":"code","12f65cc1":"code","ed2b852c":"code","82356b12":"code","f2d8f6ee":"code","64e20928":"code","36f9f809":"code","d76f969f":"code","99b70c40":"code","76253bf0":"code","707b3c8b":"code","ac2907a8":"code","87b50d70":"code","4edc7cac":"code","bd2734ea":"code","997432e6":"code","9c32aef0":"code","f9481438":"code","86fb952f":"code","481a037f":"code","1a78c864":"code","db1076e0":"code","7bce713f":"code","a18044b4":"code","e32c8a2f":"code","3308997f":"code","0079719b":"code","14967809":"code","3e4dc531":"code","367e2804":"code","14d789a7":"code","c1cb19fd":"code","0d955147":"code","50c72247":"code","076b1cce":"code","5fe7f512":"code","fda50676":"code","9fc89428":"markdown","3d676e15":"markdown","2842ef88":"markdown","2f0db686":"markdown","2ce53138":"markdown","92676f88":"markdown","b0bd394f":"markdown","b13a9d3c":"markdown"},"source":{"79371ae4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import OneHotEncoder\n\nimport warnings\nwarnings.filterwarnings('ignore')","84398d5b":"train = pd.read_csv(\"..\/input\/predicting-molecular-properties-datamerging\/train.csv\")\ntest = pd.read_csv(\"..\/input\/predicting-molecular-properties-datamerging\/test.csv\")\nstructures = pd.read_csv(\"..\/input\/champs-scalar-coupling\/structures.csv\")","caa6b145":"train.drop(['X', 'Y', 'Z', 'potential_energy','XX_atom_0', 'YX_atom_0', 'ZX_atom_0', 'XY_atom_0', 'YY_atom_0',\n       'ZY_atom_0', 'XZ_atom_0', 'YZ_atom_0', 'ZZ_atom_0',\n       'mulliken_charge_atom_0','XX_atom_1', 'YX_atom_1', 'ZX_atom_1',\n       'XY_atom_1', 'YY_atom_1', 'ZY_atom_1', 'XZ_atom_1', 'YZ_atom_1',\n       'ZZ_atom_1', 'mulliken_charge_atom_1'], axis=1, inplace=True)","3e2018c9":"train.head(10)","2d100296":"test.head(10)","7d3ebeeb":"structures.head(10)","ebdcfdf8":"total_atoms_per_molecule = structures[['molecule_name']]\ntotal_atoms_per_molecule['atoms_in_molecule'] = 1\ntotal_atoms_per_molecule = total_atoms_per_molecule.groupby('molecule_name').sum()\ntotal_atoms_per_molecule.head(10)","1e09882b":"element_wise_atoms_per_molecule = structures[['molecule_name', 'atom']]\nelement_wise_atoms_per_molecule['count'] = 1\nelement_wise_atoms_per_molecule = element_wise_atoms_per_molecule.groupby(['molecule_name', 'atom']).sum()\n\natom_table = pd.pivot_table(element_wise_atoms_per_molecule, values='count', index=['molecule_name'],\n                      columns=['atom']).fillna(0)\natom_table.head(10)","559ca683":"def get_cout_by_type(data):\n    type_wise_bonds_per_molecule = data[['molecule_name', 'type']]\n    type_wise_bonds_per_molecule['count'] = 1\n    type_wise_bonds_per_molecule = type_wise_bonds_per_molecule.groupby(['molecule_name', 'type']).sum()   \n    type_table = pd.pivot_table(type_wise_bonds_per_molecule, values='count', index=['molecule_name'],\n                                columns=['type']).fillna(0)\n    return type_table","381332d0":"def calculate_distance(data):\n    data['x_dist'] = abs(data['x_atom_0'] - data['x_atom_1'])\n    data['y_dist'] = abs(data['y_atom_0'] - data['y_atom_1'])\n    data['z_dist'] = abs(data['z_atom_0'] - data['z_atom_1'])\n    data['2_atom_dist'] = np.sqrt(data['x_dist']**2 + data['y_dist']**2 + data['z_dist']**2)","12f65cc1":"calculate_distance(train)\ncalculate_distance(test)","ed2b852c":"def calculate_mean_dist_mol_type(data):\n    mean_dist_molecule_type = data[['molecule_name', 'type', '2_atom_dist']]\n    mean_dist_molecule_type = mean_dist_molecule_type.groupby(['molecule_name', 'type']).mean()\n    mean_dist_molecule_type.columns = ['mean_dist_for_mol_type']\n#     print(mean_dist_molecule.head(20))\n    return mean_dist_molecule_type","82356b12":"def calculate_mean_dist_mol(data):\n    mean_dist_molecule = data[['molecule_name', '2_atom_dist']]\n    mean_dist_molecule = mean_dist_molecule.groupby(['molecule_name']).mean()\n    mean_dist_molecule.columns = ['mean_dist_for_mol']\n#     print(mean_dist_molecule.head(20))\n    return mean_dist_molecule","f2d8f6ee":"def calculate_mean_dist_type(data):\n    mean_dist_type = data[['type', '2_atom_dist']]\n    mean_dist_type = mean_dist_type.groupby(['type']).mean()\n    mean_dist_type.columns = ['mean_dist_for_type']\n#     print(mean_dist_type.head(20))\n    return mean_dist_type","64e20928":"def calculate_max_dist_mol_type(data):\n    max_dist_molecule_type = data[['molecule_name', 'type', '2_atom_dist']]\n    max_dist_molecule_type = max_dist_molecule_type.groupby(['molecule_name', 'type']).max()\n    max_dist_molecule_type.columns = ['max_dist_for_mol_type']\n#     print(max_dist_molecule.head(20))\n    return max_dist_molecule_type","36f9f809":"def calculate_max_dist_mol(data):\n    max_dist_molecule = data[['molecule_name', '2_atom_dist']]\n    max_dist_molecule = max_dist_molecule.groupby(['molecule_name']).max()\n    max_dist_molecule.columns = ['max_dist_for_mol']\n#     print(max_dist_molecule.head(20))\n    return max_dist_molecule","d76f969f":"def calculate_max_dist_type(data):\n    max_dist_type = data[['type', '2_atom_dist']]\n    max_dist_type = max_dist_type.groupby(['type']).max()\n    max_dist_type.columns = ['max_dist_for_type']\n#     print(max_dist_type.head(20))\n    return max_dist_type","99b70c40":"def calculate_min_dist_mol_type(data):\n    min_dist_molecule_type = data[['molecule_name', 'type', '2_atom_dist']]\n    min_dist_molecule_type = min_dist_molecule_type.groupby(['molecule_name', 'type']).min()\n    min_dist_molecule_type.columns = ['min_dist_for_mol_type']\n#     print(min_dist_molecule.head(20))\n    return min_dist_molecule_type","76253bf0":"def calculate_min_dist_mol(data):\n    min_dist_molecule = data[['molecule_name', '2_atom_dist']]\n    min_dist_molecule = min_dist_molecule.groupby(['molecule_name']).min()\n    min_dist_molecule.columns = ['min_dist_for_mol']\n#     print(min_dist_molecule.head(20))\n    return min_dist_molecule","707b3c8b":"def calculate_min_dist_type(data):\n    min_dist_type = data[['type', '2_atom_dist']]\n    min_dist_type = min_dist_type.groupby(['type']).min()\n    min_dist_type.columns = ['min_dist_for_type']\n#     print(min_dist_type.head(20))\n    return min_dist_type","ac2907a8":"train = train.merge(total_atoms_per_molecule, on='molecule_name')\ntrain = train.merge(atom_table, on='molecule_name')\ntrain = train.merge(get_cout_by_type(train), on='molecule_name')\n\ntrain = train.merge(calculate_mean_dist_mol(train), on='molecule_name')\ntrain = train.merge(calculate_max_dist_mol(train), on='molecule_name')\ntrain = train.merge(calculate_min_dist_mol(train), on='molecule_name')\n\ntrain = train.merge(calculate_mean_dist_type(train), on='type', how='left')\ntrain = train.merge(calculate_max_dist_type(train), on='type', how='left')\ntrain = train.merge(calculate_min_dist_type(train), on='type', how='left')\n\ntrain = train.merge(calculate_mean_dist_mol_type(train), on=['molecule_name', 'type'])\ntrain = train.merge(calculate_max_dist_mol_type(train), on=['molecule_name', 'type'])\ntrain = train.merge(calculate_min_dist_mol_type(train), on=['molecule_name', 'type'])\n\ntest = test.merge(total_atoms_per_molecule, on='molecule_name')\ntest = test.merge(atom_table, on='molecule_name')\ntest = test.merge(get_cout_by_type(test), on='molecule_name')\n\ntest = test.merge(calculate_mean_dist_mol(test), on='molecule_name')\ntest = test.merge(calculate_max_dist_mol(test), on='molecule_name')\ntest = test.merge(calculate_min_dist_mol(test), on='molecule_name')\n\ntest = test.merge(calculate_mean_dist_type(test), on='type', how='left')\ntest = test.merge(calculate_max_dist_type(test), on='type', how='left')\ntest = test.merge(calculate_min_dist_type(test), on='type', how='left')\n\ntest = test.merge(calculate_mean_dist_mol_type(test), on=['molecule_name', 'type'])\ntest = test.merge(calculate_max_dist_mol_type(test), on=['molecule_name', 'type'])\ntest = test.merge(calculate_min_dist_mol_type(test), on=['molecule_name', 'type'])","87b50d70":"train","4edc7cac":"def add_features(data):\n    data['dist-mean_dist_mol'] = data['2_atom_dist'] - data['mean_dist_for_mol']\n    data['dist-min_dist_mol'] = data['2_atom_dist'] - data['min_dist_for_mol']\n    data['max_dist_mol-dist'] = data['max_dist_for_mol'] - data['2_atom_dist']\n    \n    data['dist-mean_dist_type'] = data['2_atom_dist'] - data['mean_dist_for_type']\n    data['dist-min_dist_type'] = data['2_atom_dist'] - data['min_dist_for_type']\n    data['max_dist_type-dist'] = data['max_dist_for_type'] - data['2_atom_dist']\n    \n    data['dist-mean_dist_mol_type'] = data['2_atom_dist'] - data['mean_dist_for_mol_type']\n    data['dist-min_dist_mol_type'] = data['2_atom_dist'] - data['min_dist_for_mol_type']\n    data['max_dist_mol-dist_type'] = data['max_dist_for_mol_type'] - data['2_atom_dist']","bd2734ea":"add_features(train)\nadd_features(test)","997432e6":"types = train[['molecule_name', 'type']]\ntypes = types.groupby('type').count().sort_values('molecule_name', ascending=False)\n\nplt.figure(figsize=(10,8))\nsns.barplot(types.index, types['molecule_name'])\nplt.title('Coupling type wise number of pairs')\nplt.ylabel('Number of pairs')\nplt.show()","9c32aef0":"# coupling = train[['type', 'scalar_coupling_constant']]\n# plt.figure(figsize=(20,12))\n# sns.violinplot(x='type', y='scalar_coupling_constant', data=coupling)\n# plt.ylabel('scalar_coupling_constant')\n# plt.title('Distribution of scalar coupling constant')\n# plt.show()","f9481438":"# plt.figure(figsize=(20,12))\n# sns.relplot(x='2_atom_dist', y='scalar_coupling_constant', hue='type', data=train)\n# plt.xlabel('Distance between 2 atoms')\n# plt.ylabel('scalar coupling constant')\n# plt.show()","86fb952f":"# avg_dist = train[['type', '2_atom_dist', 'scalar_coupling_constant']]\n# avg_dist['count'] = 1\n# avg_dist = avg_dist.groupby('type').agg({'2_atom_dist': np.mean,\n#                                        'scalar_coupling_constant': np.mean,\n#                                        'count':np.sum})\n# sns.relplot(x='2_atom_dist', y='scalar_coupling_constant', hue=avg_dist.index, \n#             size='count', sizes=(50,1000), data=avg_dist)\n# plt.xlabel('Avg. distance between 2 atoms')\n# plt.ylabel('Avg. scalar coupling constant')\n# plt.show()","481a037f":"train.columns","1a78c864":"columns = ['type',\n           '2_atom_dist', 'dist-mean_dist_mol',\n       'dist-min_dist_mol', 'max_dist_mol-dist', 'dist-mean_dist_type',\n       'dist-min_dist_type', 'max_dist_type-dist',\n           'fc', 'sd', 'pso', 'dso',\n           'scalar_coupling_constant']\n\ndf_1 = train[columns]","db1076e0":"def draw_heatmap(df):\n    corr_mx = df.corr()\n    plt.figure(figsize=(12,8))\n    sns.heatmap(corr_mx, annot=True, vmin=-1, vmax=1, center=0)\n    plt.show()","7bce713f":"df = df_1[df_1['type'] == '1JHC']\ndraw_heatmap(df)","a18044b4":"df = df_1[df_1['type'] == '1JHN']\ndraw_heatmap(df)","e32c8a2f":"df = df_1[df_1['type'] == '2JHC']\ndraw_heatmap(df)","3308997f":"df = df_1[df_1['type'] == '2JHN']\ndraw_heatmap(df)","0079719b":"df = df_1[df_1['type'] == '2JHH']\ndraw_heatmap(df)","14967809":"df = df_1[df_1['type'] == '3JHC']\ndraw_heatmap(df)","3e4dc531":"df = df_1[df_1['type'] == '3JHN']\ndraw_heatmap(df)","367e2804":"df = df_1[df_1['type'] == '3JHH']\ndraw_heatmap(df)","14d789a7":"def to_onehot_type(data):\n    encoder = OneHotEncoder(sparse=False)\n    onehot_type = encoder.fit_transform(data['type'].values.reshape(len(data),1))\n    df_onehot = pd.DataFrame(onehot_type, columns=['type_'+t for t in encoder.categories_[0]])\n    data = pd.concat([data, df_onehot], axis=1)\n    return data","c1cb19fd":"train = to_onehot_type(train)\ntest = to_onehot_type(test)","0d955147":"train = train[['id', 'type',\n               'type_1JHC', 'type_1JHN', 'type_2JHC', 'type_2JHH', \n               'type_2JHN', 'type_3JHC', 'type_3JHH', 'type_3JHN', \n               'atoms_in_molecule', \n               'C', 'F', 'H', 'N', 'O', \n               '1JHC', '1JHN', '2JHC', '2JHH', '2JHN', '3JHC', '3JHH', '3JHN',\n               '2_atom_dist', \n               'mean_dist_for_mol', 'max_dist_for_mol', 'min_dist_for_mol', \n               'mean_dist_for_type', 'max_dist_for_type', 'min_dist_for_type', \n               'dist-mean_dist_mol', 'dist-min_dist_mol', 'max_dist_mol-dist', \n               'dist-mean_dist_type', 'dist-min_dist_type', 'max_dist_type-dist',\n               'mean_dist_for_mol_type', 'max_dist_for_mol_type', 'min_dist_for_mol_type',\n               'dist-mean_dist_mol_type', 'dist-min_dist_mol_type', 'max_dist_mol-dist_type',\n               'fc', 'sd', 'pso', 'dso', \n               'scalar_coupling_constant']]","50c72247":"test = test[['id', 'type',\n             'type_1JHC', 'type_1JHN', 'type_2JHC', 'type_2JHH', \n             'type_2JHN', 'type_3JHC', 'type_3JHH', 'type_3JHN', \n             'atoms_in_molecule', \n             'C', 'F', 'H', 'N', 'O', \n             '1JHC', '1JHN', '2JHC', '2JHH', '2JHN', '3JHC', '3JHH', '3JHN',\n             '2_atom_dist', \n             'mean_dist_for_mol', 'max_dist_for_mol', 'min_dist_for_mol', \n             'mean_dist_for_type', 'max_dist_for_type', 'min_dist_for_type', \n             'dist-mean_dist_mol', 'dist-min_dist_mol', 'max_dist_mol-dist', \n             'dist-mean_dist_type', 'dist-min_dist_type', 'max_dist_type-dist',\n             'mean_dist_for_mol_type', 'max_dist_for_mol_type', 'min_dist_for_mol_type',\n             'dist-mean_dist_mol_type', 'dist-min_dist_mol_type', 'max_dist_mol-dist_type']]","076b1cce":"train.head(10)","5fe7f512":"test.head(10)","fda50676":"train.to_csv('train.csv', index=False)\ntest.to_csv('test.csv', index=False)","9fc89428":"Loading train and test data","3d676e15":"Average distance vs average scalar coupling constant. Here size of the marker shows the number of pairs for that coupling type.","2842ef88":"Calculating distance between 2 atoms","2f0db686":"Calculating element wise atoms in each molecule.","2ce53138":"Droping columns which can not be used for this prediction since those data is not available for test dataset.","92676f88":"Scatter plot of Distance between 2 atoms vs scalar coupling constant.","b0bd394f":"Calculating total atoms in each molecule.","b13a9d3c":"Calculating coupling type wise number of pairs in each molecule."}}