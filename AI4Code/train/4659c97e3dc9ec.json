{"cell_type":{"8106c003":"code","9e40c2ed":"code","c7090c39":"code","5fd5ddff":"markdown","0b0bd426":"markdown"},"source":{"8106c003":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nfrom lightgbm import LGBMClassifier\nimport pandas_profiling as pdp\nimport seaborn as sns","9e40c2ed":"# \u4e00\u89a7\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\ndf_train = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/test.csv')\ndf_action = pd.read_csv('..\/input\/data-science-spring-osaka-2021\/actions.csv')","c7090c39":"df_list = df_train[df_train.action_seq=='jab-jab-straight'].file_path.values\n\nfor l in df_list:\n    df = pd.read_csv('..\/input\/data-science-spring-osaka-2021'+l)\n\n    # file_path\n    print('file_path',l)\n\n    # \u898b\u3084\u3059\u3044\u3088\u3046\u306bMinMaxScaler\u306b\u304b\u3051\u3066\u304a\u304d\u307e\u3059\n    scaler = MinMaxScaler()\n    df.iloc[:] = scaler.fit_transform(df)\n\n    f_0 = 'ELBOW_L'\n    f_1 = 'ELBOW_R'\n\n    #\u305d\u306e\u307e\u307e\u63cf\u753b\n    plt.figure(figsize=[15,3])\n    plt.plot(df.Time, df[f_0], c='r', label=f_0)\n    plt.plot(df.Time, df[f_1], c='b', label=f_1)\n    plt.xlabel('Time')\n    plt.legend()\n    plt.show()\n    # \u5de6\u8098\u306b\u5bfe\u3059\u308b\u53f3\u8098\u306e\u6b6a\u306e\u6bd4\u7387\u3092\u63cf\u753b(0\u9664\u7b97\u304c\u751f\u3058\u306a\u3044\u69d8\u306b+1)(\u79fb\u52d5\u5e73\u5747\u7248)\n    window = 10\n    plt.figure(figsize=[15,3])\n    plt.plot(df.Time, ((df[f_1]+1)\/(df[f_0]+1)).rolling(window,center=True).mean(), c='r', label=f_1+'\/'+f_0)\n    plt.xlabel('Time')\n    plt.legend()\n    plt.show()","5fd5ddff":"# \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","0b0bd426":"jab-jab-straight\u306e\u78ba\u8a8d\n\n\u8155\u306e\u51fa\u3057\u65b9\u306f\u5de6\u3001\u5de6\u3001\u53f3\n\n\u30b9\u30c8\u30ec\u30fc\u30c8\u3092\u6253\u3064\u524d\u306e\u30b8\u30e3\u30d6\u304c\u3001\u4ed6\u306e\u30b8\u30e3\u30d6\u21d2\u30b8\u30e3\u30d6\u21d2\uff0a\uff0a\u3068\u6bd4\u3079\u3066\u5f37\u3044\u30b8\u30e3\u30d6\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u3002\n\njab-jab-bodyupper\u3068\u304b\u306a\u308a\u9177\u4f3c\n\u8098\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3067\u533a\u5225\u304c\u5fc5\u8981\u305d\u3046"}}