{"cell_type":{"0e57c5e2":"code","2e6de263":"code","2b54377b":"code","2f21b087":"code","469c693f":"code","eb6fd1ef":"code","328c1288":"code","7583b36a":"code","4991294a":"code","cee9a6da":"code","19d548e6":"code","f6b654cf":"code","8d4f9832":"code","5c0109e1":"code","ee970782":"code","8b30ddf0":"code","acef582a":"code","8eed30ed":"code","c74de8b5":"code","b433705e":"markdown","f7a9f2f2":"markdown","e31c440d":"markdown","223bcc3e":"markdown","b5ce5683":"markdown","77171eac":"markdown","6b416778":"markdown"},"source":{"0e57c5e2":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import rcParams\nimport os\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score\nfrom sklearn.preprocessing import StandardScaler\nimport tensorflow as tf\n","2e6de263":"df = pd.read_csv('bike-rental-train.csv')\ndt = pd.read_csv('bike-rental-test.csv')\ndt.head()","2b54377b":"continuous = ['temp', 'atemp', 'hum', 'windspeed']\n#continuous = ['cnt','temp', 'atemp', 'hum', 'windspeed', 'season', 'mnth', 'hr', 'holiday', 'weekday', 'workingday', 'weathersit', 'year']\nscaler = StandardScaler()\nfor var in continuous:\n  df[var] = df[var].astype('float64')\n  dt[var] = dt[var].astype('float64')\n  df[var] = scaler.fit_transform(df[var].values.reshape(-1, 1))\n  dt[var] = scaler.fit_transform(dt[var].values.reshape(-1, 1))\n\ndt.head()","2f21b087":"x_df = df.drop(['instant', 'dteday','casual', 'registered', 'cnt'], axis=1)\nx_df","469c693f":"y_df = df['cnt']\ny_df","eb6fd1ef":"#x_train, x_test, y_train, y_test = train_test_split(x_df, y_df, test_size=0.2, random_state=1)\nx_train = x_df\ny_train = y_df\nx_train","328c1288":"season = tf.feature_column.categorical_column_with_vocabulary_list(\"season\", range(1,5))\nyear = tf.feature_column.categorical_column_with_vocabulary_list(\"year\", [2011,2012])\nmnth = tf.feature_column.categorical_column_with_vocabulary_list(\"mnth\", range(1,13))\nholiday = tf.feature_column.categorical_column_with_vocabulary_list(\"holiday\", [0,1])\nweekday = tf.feature_column.categorical_column_with_vocabulary_list(\"weekday\", range(0,7))\nworkingday = tf.feature_column.categorical_column_with_vocabulary_list(\"workingday\", [0,1])\nhr = tf.feature_column.categorical_column_with_vocabulary_list(\"hr\", range(0,24))\nweathersit = tf.feature_column.categorical_column_with_vocabulary_list(\"weathersit\", range(1,5))\n\ntemp = tf.feature_column.numeric_column(\"temp\")\natemp = tf.feature_column.numeric_column(\"atemp\")\nhum = tf.feature_column.numeric_column(\"hum\")\nwindspeed = tf.feature_column.numeric_column(\"windspeed\")\n\nfeat_cols = [season, year, mnth, holiday, weekday, workingday, hr, weathersit, temp, atemp, hum, windspeed]\n\ninput_func = tf.compat.v1.estimator.inputs.pandas_input_fn(x=x_train, y=y_train, batch_size=100, num_epochs=None, shuffle=True)\n\nmodel = tf.estimator.LinearRegressor(    \n        feature_columns=feat_cols,   \n        model_dir=\"train4\")\t","7583b36a":"model.train(input_fn=input_func, max_steps=1000000)","4991294a":"pred_test_func = tf.compat.v1.estimator.inputs.pandas_input_fn(x=dt, batch_size=100, shuffle=False)","cee9a6da":"predictions = pd.DataFrame(model.predict(input_fn=pred_test_func))","19d548e6":"predictions","f6b654cf":"dt_with_predictions = dt.merge(predictions, how='outer',left_index=True, right_index=True)\ndt_with_predictions","8d4f9832":"dt_predictions = dt_with_predictions[['instant', 'predictions']]\ndt_predictions","5c0109e1":"dt_predictions['cnt'] = dt_predictions['predictions'].apply(lambda x : int(round(x[0])))\ndt_predictions = dt_predictions.drop(['predictions'], axis=1)\ndt_predictions","ee970782":"def make_non_negative(x):\n  if x<0:\n   return 0\n  else:\n   return x","8b30ddf0":"dt_predictions['cnt'] = dt_predictions['cnt'].apply(lambda x : make_non_negative(x))\ndt_predictions\n","acef582a":"from google.colab import drive\ndrive.mount('drive')\n","8eed30ed":"dt_predictions.to_csv('bike-pred.csv')\n","c74de8b5":"cp bike-pred.csv \"drive\/My Drive\"","b433705e":"# Import libraries","f7a9f2f2":"# Read files","e31c440d":"# Prepare train and test data","223bcc3e":" # Transform predictions","b5ce5683":"# Save predictions","77171eac":"# Create and Train Model","6b416778":" # Make prediction"}}