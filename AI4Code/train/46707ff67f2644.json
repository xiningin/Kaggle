{"cell_type":{"1a7c5534":"code","ba249a66":"code","b7ada223":"code","91e95ba9":"code","60599871":"code","6b6c4f87":"code","27ebfb9d":"code","5327d495":"code","e235454d":"code","0a454b7c":"code","97e56e58":"code","c00b8b3a":"code","670ac685":"code","c518c832":"code","5ac506b1":"code","a4a6a09c":"code","1842721e":"code","2a3108f7":"code","0e5ed68e":"code","c1f56c9c":"code","730ab714":"code","e27e03f0":"code","ad09e49e":"markdown","a4e74358":"markdown","8d3073d6":"markdown","2ea43a1f":"markdown","2b6a8be2":"markdown","99f6881d":"markdown","ca4d3c44":"markdown"},"source":{"1a7c5534":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba249a66":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('darkgrid')","b7ada223":"df = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","91e95ba9":"df.shape","60599871":"df.describe()","6b6c4f87":"df[\"mean score\"] = ((df[\"math score\"] + df[\"reading score\"] + df[\"writing score\"]) \/ 3).round()\ndf.head()","27ebfb9d":"df['gender'].value_counts()","5327d495":"from sklearn.preprocessing import LabelEncoder\nlc = LabelEncoder()\ndf['gender'] = lc.fit_transform(df['gender'])\ndf['race\/ethnicity'] = lc.fit_transform(df['race\/ethnicity'])\ndf['parental level of education'] = lc.fit_transform(df['parental level of education'])\ndf['lunch'] = lc.fit_transform(df['lunch'])\ndf['test preparation course'] = lc.fit_transform(df['test preparation course'])\ndf.head()","e235454d":"sns.countplot(df['gender'], hue = df['race\/ethnicity'])","0a454b7c":"df['test preparation course'].value_counts()","97e56e58":"labels = ['None', 'Completed']\ncolors = ['red', 'green']\nplt.pie(df['test preparation course'].value_counts() , labels = labels, colors = colors)","c00b8b3a":"plt.figure(figsize = (12,6))\nsns.barplot(x = 'test preparation course', y = 'mean score', data = df)\nplt.show()","670ac685":"sns.barplot(x = df['lunch'], y = df['mean score'], palette = 'inferno')","c518c832":"sns.barplot(x = 'parental level of education', y = 'mean score', data = df)","5ac506b1":"plt.figure(figsize = (12,6))\nsns.pairplot(df)\nplt.show()","a4a6a09c":"plt.figure(figsize = (12,6))\nsns.heatmap(df.corr())\nplt.show()","1842721e":"df = df.drop(['math score', 'writing score', 'reading score'],axis = 1)\ndf.head()","2a3108f7":"from sklearn.model_selection import train_test_split\ny = df['mean score']\nx = df.drop(['mean score'], axis  = 1)\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 0)","0e5ed68e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix","c1f56c9c":"model = LogisticRegression(solver='liblinear', random_state=0)","730ab714":"model.fit(x_train, y_train)","e27e03f0":"predictions = model.predict(x_test)\ndifference = abs(predictions - y_test)\ndifference.mean()","ad09e49e":"# Analyzing parental level of education","a4e74358":"# Analysizing Race and Gender","8d3073d6":"# Analyzing Lunch","2ea43a1f":"# Analyzing Test Prep Course","2b6a8be2":"# Label Encoding","99f6881d":"# Data Preprocessing","ca4d3c44":"# Building the Model"}}