{"cell_type":{"590cdb09":"code","c782aef2":"code","b8e0e720":"code","4f296d16":"code","55d89a2f":"code","201e7d98":"code","a3146b63":"code","f7743251":"code","bb4ba65e":"code","9589a49c":"code","433dd19a":"code","13efdbf8":"code","d0b695be":"code","c01a91a6":"code","417f32e3":"code","f2581114":"code","aa27d388":"code","a2733af5":"code","15690807":"code","0635757c":"code","589f672f":"code","ddc5bf1c":"code","db88c54f":"code","614980b8":"code","4cda3af4":"code","2e4419b3":"code","aac355ec":"code","b20c69e6":"code","f53a95f2":"code","d4a5ad73":"code","7452b03a":"code","9d259005":"code","8bda1783":"markdown","6327ee76":"markdown","4b2eb595":"markdown","855d4b80":"markdown","e4c251fb":"markdown","4e4b8950":"markdown","839e3c70":"markdown","14cd91f9":"markdown","616c5a21":"markdown","9fd2520f":"markdown","a0a0b4cd":"markdown","93667c2a":"markdown","adf337e3":"markdown","c625d73c":"markdown","04ab7d31":"markdown","a918e3ed":"markdown"},"source":{"590cdb09":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport sklearn\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LogisticRegressionCV\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom tqdm import tqdm as tqdm","c782aef2":"treino = pd.read_csv('..\/input\/adult-pmr3508\/train_data.csv', na_values = '?')\nteste = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\", na_values = \"?\")","b8e0e720":"#visualizando a base\ntreino","4f296d16":"#pegando o tamanho\ntreino.shape","55d89a2f":"#analisando as variaveis\ntreino.describe()","201e7d98":"#relationship e renda\ntreino.groupby(['relationship', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","a3146b63":"#sex e renda\ntreino.groupby(['sex', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","f7743251":"#race e renda\ntreino.groupby(['race', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","bb4ba65e":"#age e renda\ntreino.groupby(['age', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","9589a49c":"#education e renda\ntreino.groupby(['education', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","433dd19a":"treino.groupby(['occupation', 'income']).size().unstack().plot(kind = 'bar', stacked = True)","13efdbf8":"#vendo a distribui\u00e7\u00e3o dos paises\ntreino['native.country'].value_counts()","d0b695be":"treinolimp= treino.dropna()\ntreinolimp = treinolimp.drop_duplicates(keep='first')","c01a91a6":"treinolimp.shape","417f32e3":"treinolimp.describe()","f2581114":"testelimp = teste.dropna()\ntestelimp = testelimp.drop_duplicates(keep='first')","aa27d388":"testelimp.shape","a2733af5":"testelimp.describe()","15690807":"#categorizando os dados\nnumericos = ['age', 'education.num', 'capital.gain', 'capital.loss']\ncategoricos = ['sex', 'race', 'occupation', 'relationship', 'marital.status']\nparametros = numericos + categoricos","0635757c":"treino_numerico = treino.fillna('?')\ntreino_numerico = pd.concat((treino_numerico[numericos], treino_numerico[categoricos].apply(preprocessing.LabelEncoder().fit_transform)), axis = 1)","589f672f":"X_treino = treino_numerico[parametros]\ny_treino = treino['income']","ddc5bf1c":"teste_numerico = teste.fillna('?')\nteste_numerico = pd.concat((teste_numerico[numericos], teste_numerico[categoricos].apply(preprocessing.LabelEncoder().fit_transform)), axis = 1)","db88c54f":"X_teste = teste_numerico[parametros]","614980b8":"med_scores = []\n\nbest_depth = 0.0\nbest_score = 0\n\nfor depth in tqdm(range(5,20)):\n    clf = RandomForestClassifier(max_depth=depth, random_state= 22, criterion='entropy', n_jobs= 2)\n    scores = cross_val_score(clf, X_treino, y_treino, cv= 5, scoring='accuracy')\n    med_scores.append(scores.mean())\n    if (best_score < scores.mean()):\n        best_score = scores.mean()\n        best_depth = depth\n\nprint(f\"Melhor Depth = {best_depth}, Pontua\u00e7\u00e3o = {best_score}\")","4cda3af4":"reg_log = LogisticRegressionCV(cv= 7, max_iter=1000)\n\nscores = cross_val_score(reg_log, X_treino, y_treino, cv=7, scoring='accuracy')\nprint(f\"Pontua\u00e7\u00e3o = {scores.mean()}\")","2e4419b3":"svc = SVC(random_state= 22, probability=True)","aac355ec":"score = cross_val_score(svc, X_treino, y_treino, cv = 3, scoring=\"accuracy\")\nprint(\"Acur\u00e1cia com Cross Validation:\", score.mean())","b20c69e6":"best_depth = 0.0\nbest_score = 0\n\nmed_scores = []\n\nfor depth in tqdm(range(2,8)):\n    clf = GradientBoostingClassifier(random_state=0, max_depth=depth, learning_rate = 0.1)\n    scores = cross_val_score(clf, X_treino, y_treino, cv=5, scoring='accuracy')\n    med_scores.append(scores.mean())\n    if (best_score < scores.mean()):\n        best_score = scores.mean()\n        best_depth = depth\n\nprint(f\"Melhor Depth = {best_depth}, Pontua\u00e7\u00e3o = {best_score}\")","f53a95f2":"clf = GradientBoostingClassifier(random_state= 22, max_depth=6, learning_rate = 0.1)\nclf.fit(X_treino, y_treino)\n\npredi\u00e7\u00f5es = clf.predict(X_teste)\n\nsubmiss\u00e3o = pd.DataFrame({'income':predi\u00e7\u00f5es})","d4a5ad73":"submiss\u00e3o","7452b03a":"submiss\u00e3o['income'].value_counts()","9d259005":"submiss\u00e3o.to_csv(\"submission.csv\", index=True, index_label='Id')","8bda1783":"### 4.2 Parte de Teste","6327ee76":"## 4. Prepara\u00e7\u00e3o da Base","4b2eb595":"### Submiss\u00e3o","855d4b80":"## 5. Aplicando nos novos classificadores","e4c251fb":"## 1. Prepara\u00e7\u00e3o do Ambiente","4e4b8950":"# _Compara\u00e7\u00e3o dos Classificadores_","839e3c70":"###  Random Forest","14cd91f9":"### Visualizando","616c5a21":"## 2. An\u00e1lise dos Dados: Base de Treino","9fd2520f":"###  Regress\u00e3o Log\u00edstica","a0a0b4cd":"## 3. Limpeza das Bases de Dados","93667c2a":"### Gradient Boosting","adf337e3":"> ## Analise de variaveis com a renda\n","c625d73c":"### 4.1 Parte de Treino","04ab7d31":"###  Support Vector Classifier","a918e3ed":"## 6. Predi\u00e7\u00f5es\nComo o gradient boosting foi o melhor, iremos utiliza-lo para a submiss\u00e3o"}}