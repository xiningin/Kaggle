{"cell_type":{"c89d2473":"code","65a37435":"code","e43093c3":"code","68b0abd1":"code","d271e09c":"code","d2acbacc":"code","d54c4ff8":"code","d32a4cc4":"code","a821f0d4":"code","32714f40":"code","3d016783":"code","16ea0e93":"code","8c534e42":"code","1345592d":"code","7a4fab4c":"code","69f2f1a5":"code","e331b59c":"code","981ecf06":"code","a6367695":"code","36cc60d8":"code","6a58f94f":"code","0112e7c1":"code","51af6610":"code","047ff321":"code","fd59409b":"code","b0782938":"code","5c4ed862":"code","81016376":"markdown","7d341fbe":"markdown","cce7484e":"markdown","4f7e8e1f":"markdown","c4667d70":"markdown","0bf26d75":"markdown","d786dd2c":"markdown","5f3a225b":"markdown","eeed825c":"markdown","e6ab3adf":"markdown","bb4f4e86":"markdown","df3e1408":"markdown","0b0ba0be":"markdown","6b42a1b1":"markdown","4cae841e":"markdown","a058055f":"markdown","a1d0c0f6":"markdown","a5f7ea57":"markdown","54ed86bc":"markdown","542347b5":"markdown","4adc8d56":"markdown","abed7855":"markdown","aa61993b":"markdown","86cbca3e":"markdown","8059aea6":"markdown","d74cec0a":"markdown","3d0d720a":"markdown","7e9caaa4":"markdown"},"source":{"c89d2473":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_colwidth', -1)","65a37435":"data = pd.read_csv('\/kaggle\/input\/airline-passenger-traffic\/airline-passenger-traffic(1).csv', header = None)\ndata.columns = ['Month','Passengers']\ndata['Month'] = pd.to_datetime(data['Month'], format='%Y-%m')\ndata = data.set_index('Month')\ndata.head(12)","e43093c3":"data.plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Airline passenger traffic')\nplt.show(block=False)","68b0abd1":"data = data.assign(Passengers_Linear_Interpolation=data.Passengers.interpolate(method='linear'))\ndata[['Passengers_Linear_Interpolation']].plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Airline passenger traffic: Linear interpolation')\nplt.show(block=False)","d271e09c":"data['Passengers'] = data['Passengers_Linear_Interpolation']\ndata.drop(columns=['Passengers_Linear_Interpolation'],inplace=True)","d2acbacc":"import seaborn as sns\nfig = plt.subplots(figsize=(20, 5))\nax = sns.boxplot(x=data['Passengers'],whis=1.5)","d54c4ff8":"fig = data.Passengers.hist(figsize = (20,5))","d32a4cc4":"from pylab import rcParams\nimport statsmodels.api as sm\nrcParams['figure.figsize'] = 20, 10\ndecomposition = sm.tsa.seasonal_decompose(data.Passengers, model='additive') # additive seasonal index\nfig = decomposition.plot()\nplt.show()","a821f0d4":"decomposition = sm.tsa.seasonal_decompose(data.Passengers, model='multiplicative') # multiplicative seasonal index\nfig = decomposition.plot()\nplt.show()","32714f40":"train_len = 120\ntrain = data[0:train_len] # first 120 months as training set\ntest = data[train_len:] # last 24 months as out-of-time test set","3d016783":"data['Passengers'].plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Airline passenger traffic')\nplt.show(block=False)","16ea0e93":"from statsmodels.tsa.stattools import adfuller\nadf_test = adfuller(data['Passengers'])\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","8c534e42":"from statsmodels.tsa.stattools import kpss\nkpss_test = kpss(data['Passengers'])\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","1345592d":"from scipy.stats import boxcox\ndata_boxcox = pd.Series(boxcox(data['Passengers'], lmbda=0), index = data.index)\n\ndata['Passengers'].plot(figsize=(20, 5))\nplt.grid()\nplt.plot(data_boxcox, label='After Box Cox tranformation')\nplt.legend(loc='best')\nplt.title('After Box Cox transform')\nplt.show()","7a4fab4c":"data_boxcox_diff = pd.Series(data_boxcox - data_boxcox.shift(), data.index)\nplt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(data_boxcox_diff, label='After Box Cox tranformation and differencing')\nplt.legend(loc='best')\nplt.title('After Box Cox transform and differencing')\nplt.show()","69f2f1a5":"data_boxcox_diff.dropna(inplace=True)","e331b59c":"data_boxcox_diff.tail()","981ecf06":"adf_test = adfuller(data_boxcox_diff)\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","a6367695":"kpss_test = kpss(data_boxcox_diff)\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","36cc60d8":"from statsmodels.graphics.tsaplots import plot_acf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_acf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","6a58f94f":"from statsmodels.graphics.tsaplots import plot_pacf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_pacf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","0112e7c1":"train_data_boxcox = data_boxcox[:train_len]\ntest_data_boxcox = data_boxcox[train_len:]\ntrain_data_boxcox_diff = data_boxcox_diff[:train_len-1]\ntest_data_boxcox_diff = data_boxcox_diff[train_len-1:]","51af6610":"train_data_boxcox_diff[:5]","047ff321":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(train_data_boxcox_diff, order=(1, 0, 0)) \nmodel_fit = model.fit()\nprint(model_fit.params)","fd59409b":"y_hat_ar = data_boxcox_diff.copy()\ny_hat_ar['ar_forecast_boxcox_diff'] = model_fit.predict(data_boxcox_diff.index.min(), data_boxcox_diff.index.max())\ny_hat_ar['ar_forecast_boxcox'] = y_hat_ar['ar_forecast_boxcox_diff'].cumsum()\ny_hat_ar['ar_forecast_boxcox'] = y_hat_ar['ar_forecast_boxcox'].add(data_boxcox[0])\ny_hat_ar['ar_forecast'] = np.exp(y_hat_ar['ar_forecast_boxcox'])","b0782938":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Passengers'], label='Train')\nplt.plot(test['Passengers'], label='Test')\nplt.plot(y_hat_ar['ar_forecast'][test.index.min():], label='Auto regression forecast')\nplt.legend(loc='best')\nplt.title('Auto Regression Method')\nplt.show()","5c4ed862":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Passengers'], y_hat_ar['ar_forecast'][test.index.min():])).round(2)\nmape = np.round(np.mean(np.abs(test['Passengers']-y_hat_ar['ar_forecast'][test.index.min():])\/test['Passengers'])*100,2)\n\nresults = pd.DataFrame({'Method':['Autoregressive (AR) method'], 'RMSE': [rmse],'MAPE': [mape] })\nresults = results[['Method', 'RMSE', 'MAPE']]\nresults","81016376":"### Calculate RMSE and MAPE","7d341fbe":"### Plot train, test and forecast","cce7484e":"## Time series Decomposition","4f7e8e1f":"# Time series analysis","c4667d70":"### Histogram plot","0bf26d75":"## Outlier detection","d786dd2c":"# Initial setup","5f3a225b":"# Auto Regressive methods","eeed825c":"### Recover original time series","e6ab3adf":"### Additive seasonal decomposition","bb4f4e86":"### Box Cox transformation to make variance constant","df3e1408":"## Partial autocorrelation function (PACF)","0b0ba0be":"## Missing value treatment","6b42a1b1":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","4cae841e":"## Stationarity vs non-stationary time series","a058055f":"### Augmented Dickey-Fuller (ADF) test","a1d0c0f6":"### Box plot and interquartile range","a5f7ea57":"### Differencing to remove trend","54ed86bc":"## Auto regression method (AR)","542347b5":"## Import time series data: Airline passenger traffic","4adc8d56":"### Multiplicative seasonal decomposition","abed7855":"## Plot time series data","aa61993b":"### Augmented Dickey-Fuller (ADF) test","86cbca3e":"# Build and evaluate time series forecast","8059aea6":"## Import required packages","d74cec0a":"## Autocorrelation function (ACF)","3d0d720a":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","7e9caaa4":"## Split time series data into training and test set"}}