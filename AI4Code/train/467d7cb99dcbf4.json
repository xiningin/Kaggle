{"cell_type":{"d6d8754a":"code","c10deb47":"code","89c17cb1":"code","6d1cdae0":"code","176e0b9c":"code","7f08bfa9":"code","372b2988":"code","3f1a283a":"code","ee583a03":"markdown","47aea202":"markdown","62eaef59":"markdown","009192db":"markdown","0bae21ba":"markdown"},"source":{"d6d8754a":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\ndf = pd.read_csv('..\/input\/las-vegas-strip-trip-advisor-reviews\/LasVegasTripAdvisorReviews-Dataset.csv', on_bad_lines = 'skip', delimiter = ';')","c10deb47":"df.head(5)","89c17cb1":"df_tmp1 = df.loc[:,[\"Hotel name\",\"Traveler type\",\"Period of stay\"]]\ndf_tmp1_graph = df_tmp1.groupby([\"Hotel name\",\"Traveler type\"]).count().unstack(level=1).fillna(0.0)\ndf_tmp1_graph = df_tmp1_graph[\"Period of stay\"].sort_values([\"Business\",\"Couples\",\"Friends\",\"Families\",\"Solo\"],ascending=True)","6d1cdae0":"fig, ax = plt.subplots(figsize=(10,10), facecolor='white', dpi= 80)\nax.bar(np.array(df[\"Traveler type\"].value_counts().index),np.array(df[\"Traveler type\"].value_counts().to_list(),\"int\"), align='center')\nfor i, val in enumerate(np.array(df[\"Traveler type\"].value_counts().to_list(),\"int\")):\n    plt.text(i, val, int(val), horizontalalignment='center', verticalalignment='bottom', fontdict={'fontweight':500, 'size':12})\nax.set_ylabel('Count')\nax.set_title('Which traveller type gave more review?',fontdict={'size':22})\nplt.show()","176e0b9c":"fig, ax = plt.subplots(figsize=(10,10), facecolor='white', dpi= 80)\n\nax.barh(np.array(df_tmp1_graph.index.to_list(),\"object\"), np.array(df_tmp1_graph.sort_values([\"Couples\"],ascending=False)[\"Couples\"].to_list(),\"int\"), align='center')\n# ax.set_yticks(np.array(df_tmp1_graph.index.to_list(),\"object\"), labels=people)\nax.invert_yaxis()  # labels read top-to-bottom\nfor i in ax.patches:\n    plt.text(i.get_width()+0.2, i.get_y()+0.5,\n             str(round((i.get_width()), 2)),\n             fontsize = 10, fontweight ='bold',\n             color ='grey')\n    \nax.set_xlabel('Count')\nax.set_title('Which Hotels Couples prefered?',fontdict={'size':22})\n\nplt.show()","7f08bfa9":"import datetime\ndf_tmp2 = df.loc[:,[\"Hotel stars\",\"Traveler type\",\"Period of stay\"]]\ndf_tmp2[\"Period of stay start\"] = df_tmp2[\"Period of stay\"].apply(lambda month_name : month_name.split(\"-\")[0])\ndf_tmp2[\"Period of stay end\"] = df_tmp2[\"Period of stay\"].apply(lambda month_name : month_name.split(\"-\")[1])\ndf_tmp2[\"Period of stay start encoded\"] = df_tmp2[\"Period of stay start\"].apply(lambda month_name : datetime.datetime.strptime(month_name, \"%b\").month)\ndf_tmp2[\"Period of stay end encoded\"] = df_tmp2[\"Period of stay end\"].apply(lambda month_name : datetime.datetime.strptime(month_name, \"%b\").month)\ndf_tmp2.head()\n","372b2988":"from matplotlib.lines import Line2D  \nfrom sklearn.preprocessing import LabelEncoder\n\n\nfig, ax = plt.subplots(figsize=(10,10), facecolor='white',dpi= 100)\nx = df_tmp2[\"Period of stay start encoded\"] #start\ny = df_tmp2[\"Period of stay end encoded\"] #end\nname_x = df_tmp2[\"Period of stay start\"]\nname_y = df_tmp2[\"Period of stay end\"]\nfor i,j,nx,ny in zip(x,y,name_x,name_y):\n    ax.add_line(Line2D([1,3],[i,j],linewidth=0.5,color='green')) #(10,)(30,)\n    ax.scatter(y=[i], x=[1], s=12, color='green', alpha=0.7)\n    ax.scatter(y=[j], x=[3], s=12, color='green', alpha=0.7)\n    ax.text(1-0.05, i,nx, horizontalalignment='right', verticalalignment='center', fontdict={'size':18,'weight':50})\n    ax.text(3+0.05, j,ny, horizontalalignment='left', verticalalignment='center', fontdict={'size':18,'weight':50})\n    \nax.text(1-0.05, 14, 'Start', horizontalalignment='right', verticalalignment='center',color='grey', fontdict={'size':20, 'weight':100})\nax.text(3+0.05, 14, 'End', horizontalalignment='left', verticalalignment='center',color='grey', fontdict={'size':20, 'weight':100})\nax.vlines(x=1, ymin=0, ymax=15, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\nax.vlines(x=3, ymin=0, ymax=15, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\nax.set_xticks([1,3])\nax.set_xticklabels([\"Start\", \"End\"])\nplt.yticks([])\nax.set_xlim(0, 4)\n\n\nax.set_ylim(0, 15)\nax.set_title('Period of stay?',fontdict={'size':22})\nplt.gca().spines[\"top\"].set_alpha(.0)\nplt.gca().spines[\"bottom\"].set_alpha(.0)\nplt.gca().spines[\"right\"].set_alpha(.0)\nplt.gca().spines[\"left\"].set_alpha(.0)\nplt.show()","3f1a283a":"df_tmp3 = df.loc[:,[\"Hotel stars\",\"Nr. rooms\",\"Hotel name\",\"Free internet\",\"Casino\",\"Spa\",\"Tennis court\",\"Gym\",\"Pool\"]].drop_duplicates().sort_values([\"Hotel stars\",\"Nr. rooms\",\"Hotel name\",\"Free internet\",\"Casino\",\"Spa\",\"Tennis court\",\"Gym\",\"Pool\"]).reset_index(drop=True)\ndf_tmp3[\"Hotel stars\"] = df_tmp3[\"Hotel stars\"].str.replace(\",\",\".\")\ndf_tmp3.head()\nfig, ax = plt.subplots(figsize=(20,5), facecolor='white',dpi= 80)\ntable = ax.table( \n    cellText = np.array(df_tmp3.loc[:,[\"Hotel stars\",\"Nr. rooms\",\"Hotel name\",\"Free internet\",\"Casino\",\"Spa\",\"Tennis court\",\"Gym\",\"Pool\"]]),    \n    colLabels = [\"Hotel stars\",\"Nr. rooms\",\"Hotel name\",\"Free internet\",\"Casino\",\"Spa\",\"Tennis court\",\"Gym\",\"Pool\"],  \n    colColours =[\"palegreen\"] * 9, \n    cellLoc ='center',  \n    loc ='center')\n\nfor i in range(df_tmp3[\"Free internet\"].shape[0]):\n    if float(df_tmp3[\"Hotel stars\"][i]) < 4.0:\n        table._cells[(i+1, 0)].set_facecolor(\"#ffff99\")\n        table._cells[(i+1, 1)].set_facecolor(\"#ffff99\")\n        table._cells[(i+1, 2)].set_facecolor(\"#ffff99\")\n    if float(df_tmp3[\"Hotel stars\"][i]) >= 5.0:\n        table._cells[(i+1, 0)].set_facecolor(\"#ffff99\")\n        table._cells[(i+1, 1)].set_facecolor(\"#ffff99\")\n        table._cells[(i+1, 2)].set_facecolor(\"#ffff99\")\n        \n    if df_tmp3[\"Free internet\"][i]==\"NO\":\n        table._cells[(i+1, 3)].set_facecolor(\"#ffff99\")\n    if df_tmp3[\"Casino\"][i]==\"NO\":\n        table._cells[(i+1, 4)].set_facecolor(\"#ffff99\")\n    if df_tmp3[\"Spa\"][i]==\"NO\":\n        table._cells[(i+1, 5)].set_facecolor(\"#ffff99\")\n    if df_tmp3[\"Tennis court\"][i]==\"NO\":\n        table._cells[(i+1, 6)].set_facecolor(\"#ffff99\")\n    if df_tmp3[\"Gym\"][i]==\"NO\":\n        table._cells[(i+1, 7)].set_facecolor(\"#ffff99\")\n    if df_tmp3[\"Pool\"][i]==\"NO\":\n        table._cells[(i+1, 8)].set_facecolor(\"#ffff99\")\n    \ntable.set_fontsize(10)\ntable.auto_set_column_width(col=[2])\n# table.scale(2, 2)\ntable.auto_set_font_size(False)\nax.set_axis_off()\nax.set_title('About the Hotel',fontdict={'size':22})\n\nplt.show()","ee583a03":"## About the Hotel","47aea202":"## **Which Hotels Couples prefered?**","62eaef59":"## **Which traveller type gave more review?**","009192db":"## Period of stay?","0bae21ba":"# Las Vegas Strip\nThis dataset includes quantitative and categorical features from online reviews from 21 hotels located in Las Vegas Strip, extracted from TripAdvisor (http:\/\/www.tripadvisor.com).\n\n![Las Vegas](https:\/\/dynamic-media-cdn.tripadvisor.com\/media\/photo-o\/15\/73\/e5\/81\/paris-las-vegas-hotel.jpg?w=900&h=-1&s=1)\n\n\n### Using the dataset we need to answer couple of questions.\n1. Which traveller type gave more review?\n2. Which Hotels Couples prefered?\n3. Period of Stay?\n4. About the Hotel"}}