{"cell_type":{"888a96bb":"code","b5d9dbb9":"code","08bf800e":"code","a69cb023":"code","2eb8d534":"code","b2e581ec":"code","fd1386c5":"code","17783f19":"code","b33acf65":"code","2a4174b4":"code","ca2a0cee":"code","a61b11b8":"code","60590f38":"code","c54cea96":"code","4dcc3124":"code","89218bbf":"code","b9380d57":"code","84dd4e38":"code","d18bdd6b":"code","1a2dad53":"code","f9c40eb2":"code","0c41d88c":"code","9d2f506f":"code","38812dad":"code","86a7aee9":"code","fd18b0e1":"code","1ef9409e":"markdown","83ec52a3":"markdown","2df724fa":"markdown","62359a5f":"markdown","44f82d3f":"markdown","7797ceb9":"markdown","df29bf57":"markdown","b67fd339":"markdown","333e3573":"markdown","aa7be62a":"markdown","4cd27eb7":"markdown","0da9a895":"markdown","b15408a9":"markdown","a9cdb43b":"markdown","5ca9a966":"markdown","ffe2741d":"markdown","135040e6":"markdown","3263e852":"markdown","dedb487c":"markdown","d618cbc0":"markdown","2628d271":"markdown","380c58c4":"markdown","21efb7e7":"markdown","fd2717fd":"markdown"},"source":{"888a96bb":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.filterwarnings( 'ignore' )\n\nsns.set(style='darkgrid')\nplt.rcParams[\"figure.figsize\"] = (15,6)","b5d9dbb9":"def get_label(g):\n  for p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x()+p.get_width()\/2.,\n            height\/2,\n            '{}'.format(round(height)),\n            ha=\"center\", color='white')","08bf800e":"df_2019 = pd.read_csv(\"..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv\")\ndf_2020 = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")\ndf_2021 = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")","a69cb023":"# Select just the column that i will use\ndf_19 = df_2019[['Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5']]\ndf_20 = df_2020[['Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5']]\ndf_21 = df_2021[['Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5']]\n\n# rename columns\n\ncols = {'Time from Start to Finish (seconds)':'Time_start_to_finish', 'Q1':'age', 'Q2':'gender', 'Q3':'country_reside', \n        'Q4':'formal_education', 'Q5':'title_job', 'Q6':'years_writing_code', }\ndf_19.rename(columns=cols, inplace=True)\n\ncols = {'Time from Start to Finish (seconds)':'Time_start_to_finish', 'Q1':'age', 'Q2':'gender', 'Q3':'country_reside', \n        'Q4':'formal_education', 'Q5':'title_job', 'Q6':'years_writing_code', }\ndf_20.rename(columns=cols, inplace=True)\n\ncols = {'Time from Start to Finish (seconds)':'Time_start_to_finish', 'Q1':'age', 'Q2':'gender', 'Q3':'country_reside', \n        'Q4':'formal_education', 'Q5':'title_job', 'Q6':'years_writing_code', }\ndf_21.rename(columns=cols, inplace=True)\n\ndf_19.drop(0, axis=0, inplace=True)\ndf_20.drop(0, axis=0, inplace=True)\ndf_21.drop(0, axis=0, inplace=True)\n\n# creare a new column to indentify what year the daset belongs\ndf_19['year'] = '2019'\ndf_20['year'] = '2020'\ndf_21['year'] = '2021'\n\naux = pd.concat([df_19, df_20], ignore_index=True)\ndf_all = pd.concat([aux, df_21], ignore_index=True)\n\n#Change the extense name\ndf_all['country_reside'] = df_all['country_reside'].str.replace('Iran, Islamic Republic of...', 'Iran')\ndf_all['country_reside'] = df_all['country_reside'].str.replace('United Kingdom of Great Britain and Northern Ireland', 'United Kingdom')\ndf_all['country_reside'] = df_all['country_reside'].replace('Hong Kong (S.A.R.)', 'Hong Kong')\n\n# replace the gender\n\ndf_all['gender'] = df_all['gender'].str.replace('Female', 'Woman')\ndf_all['gender'] = df_all['gender'].str.replace('Male','Man')\n\n# Creare a new column continent \nmap_continent = {'India':'Asia', 'Indonesia':'Asia', 'Pakistan':'Asia', 'Mexico':'North America', 'Russia':'Asia', 'Turkey':'Asia',\n                'Australia':'Australia', 'Nigeria':'Africa', 'Greece':'Europe', 'Belgium':'Europe', 'Japan':'Asia', 'Egypt':'Africa',\n                'Singapore':'Asia', 'Brazil':'South America', 'Poland':'Europe', 'China':'Asia','Iran':'Asia', 'United States of America':'North America',\n                'Italy':'Europe', 'Viet Nam':'Asia', 'Israel':'Asia', 'Peru':'South America', 'South Africa':'Africa', 'Other':'Other','Spain':'Europe', 'Bangladesh':'Asia',\n                'United Kingdom':'Europe', 'France':'Europe','Switzerland':'Europe', 'Algeria':'Africa', 'Tunisia':'Africa', 'Argentina':'South America', 'Sweden':'Europe',\n                'Colombia':'South America','I do not wish to disclose my location':'I do not wish to disclose my location', 'Canada':'North America','Chile':'South America', \n                'Netherlands':'Europe', 'Ukraine':'Europe', 'Saudi Arabia':'Asia', 'Romania':'Europe','Morocco':'Africa', 'Austria':'Europe', 'Taiwan':'Asia', 'Kenya':'Africa', 'Belarus':'Europe', \n                'Ireland':'Europe','Portugal':'Europe', 'Hong Kong':'Asia', 'Denmark':'Europe', 'Germany':'Europe','South Korea':'Asia', 'Philippines':'Asia', 'Sri Lanka':'Asia', \n                'United Arab Emirates':'Asia','Uganda':'Africa', 'Ghana':'Africa', 'Malaysia':'Asia', 'Thailand':'Asia', 'Nepal':'Asia', 'Kazakhstan':'Asia','Ethiopia':'Africa', 'Iraq':'Asia', \n                'Ecuador':'South America', 'Norway':'Europe', 'Czech Republic':'Europe', 'Kenya':'Africa', 'Republic of Korea':'Asia', 'New Zealand':'Oceanian', 'Hungary':'Europe'}\n\ndf_all['continent'] = df_all['country_reside'].map(map_continent)\n\n\n# change types and trasnforming time ( seconds ) to minutes\ndf_all['year'] = df_all['year'].astype(int)\ndf_all['Time_start_to_finish'] = df_all['Time_start_to_finish'].astype(int)\ndf_all['Time_start_to_finish'] = df_all['Time_start_to_finish'].apply(lambda x: round(x \/ 60, ndigits=2))\n","2eb8d534":"df_all.sample()","b2e581ec":"print(f'minimum time to complete the survey: {df_all[\"Time_start_to_finish\"].min()} minutes')\nprint(f'maximum time to complete the survey: {df_all[\"Time_start_to_finish\"].max()} minutes')","fd1386c5":"df_year = df_all.groupby(['year'], as_index=False)['age'].count().rename( columns = {\"age\":'total'})\ndf_year = pd.DataFrame(df_year)","17783f19":"g = sns.barplot(x='year', y='total', data = df_year, palette='Set1')\nplt.title('NUMBER OF SURVEY PARTICIPANTS PER YEAR')\nget_label(g)","b33acf65":"df_age = df_all.groupby(['age', 'year'], as_index=False)['gender'].count().rename( columns = {\"gender\":'total'})\ndf_age = pd.DataFrame(df_age)","2a4174b4":"g = sns.barplot(x='age', y='total', hue='year', data = df_age, palette='Set2')\nplt.title('AGE OF PARTICIPANTS PER YEAR');","ca2a0cee":"mask = (df_all['gender'] != 'Prefer not to say')\ndf_gender =  df_all.loc[mask].groupby(['gender', 'year'], as_index=False)['age'].count().rename( columns = {'age':'total'})","a61b11b8":"order = ['Man', 'Woman', 'Nonbinary', 'Prefer to self-describe']\ng = sns.barplot(x='gender', y='total', hue='year', data = df_gender, order=order, palette='Set2')\nplt.title('GENDER OF PARTICIPANTS PER YEAR');","60590f38":"title_job =  df_all.groupby(['title_job', 'year'], as_index=False)['age'].count().rename( columns = {'age':'total'})","c54cea96":"g = sns.barplot(x='title_job', y='total', hue='year', data = title_job, palette='Set2')\nplt.title('TITLE JOB OF PARTICIPANTS PER YEAR');\nplt.xticks(rotation=90);","4dcc3124":"# This code was inspired by this notebook: https:\/\/www.kaggle.com\/ruchi798\/kaggle-ml-ds-survey-analysis\ndef get_count(question_num, parts, data):\n    questions = []\n    questions = ['Q'+ str(question_num) +'_Part_'+ str(j) for j in range(1, parts)]\n    questions.append('Q'+ str(question_num) + '_OTHER')\n    \n    categories = []\n    values = []\n    for i in questions:\n        category = data[i].value_counts().index[0]\n        val = data[i].value_counts()[0]\n        \n        categories.append(category)\n        values.append(val)\n       \n    combined_df = pd.DataFrame()\n    combined_df['Category'] = categories\n    combined_df['Value'] = values\n    \n    combined_df = combined_df.sort_values(['Value'],ascending=False)\n    \n    return combined_df","89218bbf":"df1 = get_count(7, 12, df_2020)\ndf2 = get_count(7, 12, df_2021)\ndf1['year'] = 2020\ndf2['year'] = 2021\ndf_programing = pd.concat([df1, df2], ignore_index=True)","b9380d57":"plt.figure(figsize=(15, 7))\nsns.barplot(x='Category', y='Value', hue='year', data=df_programing, palette='Set2');\nplt.title('PROGRAMMING LANGUAGE 2020 AND 2021', size=18)","84dd4e38":"integrated_development_2020 = get_count(9, 11, df_2020)\nintegrated_development_2021 = get_count(9, 12, df_2021)\n\nintegrated_development_2020['year'] = 2020\nintegrated_development_2021['year'] = 2021\ndf_ide = pd.concat([integrated_development_2020, integrated_development_2021], ignore_index=True)\ndf_ide['Category'] = df_ide['Category'].apply(lambda x: x.strip(' '))\n\nmap = {'Jupyter (JupyterLab, Jupyter Notebooks, etc)':'Jupyter Notebook',\n       'Visual Studio Code (VSCode)':'VSCode','PyCharm':'PyCharm','RStudio':'RStudio',\n       'Spyder':'Spyder', 'Notepad++':'Notepad++','Sublime Text':'Sublime Text',\n       'Visual Studio':'Visual Studio','MATLAB':'MATLAB', 'Vim \/ Emacs':'Vim \/ Emacs',\n       'Other':'Other', 'Jupyter Notebook':'Jupyter Notebook'}\n\ndf_ide['Category'] = df_ide['Category'].map(map)","d18bdd6b":"sns.barplot(y='Category', x='Value', hue='year', data=df_ide, palette='Set2');\nplt.title('INTEGRATED DEVELOPMENT ENVIRONMENT 2020 and 2021', size=18);","1a2dad53":"def get_count_2(question_num, parts, data):\n    questions = []\n    questions = ['Q'+ str(question_num) +'_B_Part_'+ str(j) for j in range(1, parts)]\n    questions.append('Q'+ str(question_num) + '_B_OTHER')\n    \n    categories = []\n    values = []\n    for i in questions:\n        category = data[i].value_counts().index[0]\n        val = data[i].value_counts()[0]\n        \n        categories.append(category)\n        values.append(val)\n       \n    combined_df = pd.DataFrame()\n    combined_df['Category'] = categories\n    combined_df['Value'] = values\n    \n    combined_df = combined_df.sort_values(['Value'],ascending=False)\n    \n    return combined_df","f9c40eb2":"df_Q35_2020 = get_count_2(35, 10, df_2020)\ndf_Q38_2021 = get_count_2(38, 11, df_2021)\n\ndf_Q35_2020['year'] = 2020\ndf_Q38_2021['year'] = 2021\ndf_become_falimiar = pd.concat([df_Q35_2020, df_Q38_2021], ignore_index=True)\ndf_become_falimiar['Category'] = df_become_falimiar['Category'].apply(lambda x: x.strip(' '))","0c41d88c":"sns.barplot(y='Category', x='Value', hue='year', data=df_become_falimiar, palette='Set2');\nplt.title('MANAGED MACHINE LEARNING PRODUCTS THE PARTICIPANTS WISH TO BECOME FAMILIAR');","9d2f506f":"mask_country = (df_all['country_reside'] != 'Other')\ndf_country = df_all.loc[mask_country].groupby(['country_reside', 'year'], as_index=False)['gender'].count().rename( columns = {\"gender\":'total'})\ndf_country = pd.DataFrame(df_country)\ndf_country_10 = df_country.nlargest(30, 'total')","38812dad":"plt.figure(figsize=(15, 7))\ng = sns.barplot(x='country_reside', y='total', hue='year', data = df_country_10, palette='magma')\nplt.title('COUNTRY OF PARTICIPANTS PER YEAR');\nplt.xticks(rotation=90);","86a7aee9":"mask = (df_all['continent'] != 'Other') & (df_all['continent'] != 'I do not wish to disclose my location')\ndf1_contnent = df_all.loc[mask].groupby(['continent', 'year'], as_index=False)['age'].count().rename( columns = {'age':'total'})","fd18b0e1":"order = ['Asia', 'North America', 'Europe', 'Africa', 'South America', 'Oceanian']\ng = sns.barplot(y='continent', x='total', hue='year', data = df1_contnent, order=order, palette='magma')\nplt.title('CONTINENT OF PARTICIPANTS PER YEAR');","1ef9409e":"## **3.2.2. GENDER**","83ec52a3":"# **3.2. ANALAYSIS ABOUT PARTICIPANTS OF SURVEY**","2df724fa":"## **3.2.1 AGE**","62359a5f":"# **0.0. IMPORTS**","44f82d3f":"**India is the top country of participants, ranking first in the 2019, 2020 and 2021 surveys.**","7797ceb9":"# **3.1. ANALYSIS ABOUT SURVEY**","df29bf57":"# **3.3. GEOGRAPGIC ANALYSIS**","b67fd339":"## **3.2.5 INTEGRATED DEVELOPMENT ENVIRONMENT 2020 and 2021**","333e3573":"**Asian continent loves Kaggle - Mainly in India**","aa7be62a":"## **3.2.6 MANAGED MACHINE LEARNING PRODUCTS THE PARTICIPANTS WISH TO BECOME FAMILIAR**","4cd27eb7":"**Students are the biggest participants in Kaggle's research and it has been growing every year.**","0da9a895":"## **3.2.4. PROGRAMMING LANGUAGE**","b15408a9":"# **1.0. READING DATA**","a9cdb43b":"# **2.0. DATA PREPRECESSING**","5ca9a966":"## **3.1.2. NUMBER OF SURVEY PARTICIPANTS PER YEAR**","ffe2741d":"# **3.0. EXPLORATORY DATA ANALYSIS (EDA)**","135040e6":"## **3.2.3. TITLE JOB**","3263e852":"## **3.3.1. COUNTRY**","dedb487c":"## **0.1. HELPER FUNCTION**","d618cbc0":"## **3.3.2. CONTINENT**","2628d271":"**The number of male and female participants also increased in 2021, compared to 2020 and 2021. There is still a large difference between women and men, according to the Kaggle survey.**","380c58c4":"**In 2020 and 2021, TensorBoard is the Managed Magine Learning products that participants most want to learn.**\n\n**In 2021, two new technologies appeared that participants have been aiming for in the last 2 years: MLFlow and ClearML.**","21efb7e7":"**In 2021 there was an increase in research participants in all age groups compared to 2020 and 2019**","fd2717fd":"## **3.1.1. TIME TO FILL THE SURVEY**"}}