{"cell_type":{"76d2e2c7":"code","122ec737":"code","c76e9dbe":"code","38e757d5":"code","a9827457":"code","48082213":"code","7ffd0672":"code","5a598aae":"code","8e73ec04":"code","cf28affe":"code","74653997":"code","7b0e83f5":"code","b5026a01":"code","33808729":"code","020c328a":"code","0459644d":"code","3347e93d":"code","9f3e34f2":"code","893aa92a":"code","6a2906ad":"code","8d5530a0":"code","3420848d":"code","4b37e26f":"code","abd4e149":"code","d108da6f":"code","63a75bd6":"code","218087e6":"code","74c8c478":"code","ce3df2c0":"code","5bd117f4":"code","6aa418e7":"code","b4dc8af1":"code","3ec917e8":"code","e0c136c0":"code","7d2c17dd":"code","ba828945":"code","2027e6b2":"code","42d79a14":"code","e54c2772":"code","a309206c":"code","961aa5a3":"code","80e178d4":"code","ca5b1f37":"code","57f7d9d1":"code","b356f684":"code","89ef269a":"code","ee3d24e4":"code","feb50ef4":"code","a94a75e8":"code","28e92979":"code","0d2df938":"markdown","b7c5f29e":"markdown","25852d5a":"markdown","b6acef72":"markdown","6a3c5dc9":"markdown","b60f3fcf":"markdown","50024710":"markdown","6b67b2fd":"markdown","347e4f60":"markdown","daa0cf44":"markdown","836bcad2":"markdown","939c95fb":"markdown","a0c88866":"markdown","3e7b34e0":"markdown","952e7d26":"markdown","b1547d07":"markdown","1329be59":"markdown","09a27e94":"markdown","05a895aa":"markdown","eaac8bb0":"markdown","ef36448b":"markdown","3e62c302":"markdown","bbfb7a42":"markdown"},"source":{"76d2e2c7":"import pandas as pd\nimport numpy as np","122ec737":"df = pd.read_csv('..\/input\/titanic\/train.csv')","c76e9dbe":"test = pd.read_csv('..\/input\/titanic\/test.csv')","38e757d5":"df.head()","a9827457":"## Find out how many Nan values are there","48082213":"df.isnull().head() ## Helps us to find out whether it is true or not\n","7ffd0672":"### This is very difficult to see here as how many values are true or false.\n## Let's use some visualisation concept.\n\nimport seaborn as sns\nsns.heatmap(df.isnull() , yticklabels = False , cbar = False , cmap = 'viridis');","5a598aae":"## This also shows me that which column has more number of Nan values.\n\n## Most of the cabin values are missing.And roughly 30-40% of age is missing.","8e73ec04":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', data = df);\n## We are making a count plot, and based on survived column we are making count plot.\n## 0 is not survived.\n## 1 is survived.","cf28affe":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue = 'Sex', data = df , palette = 'RdBu_r');","74653997":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue = 'Pclass', data = df , palette = 'rainbow');\n\n## Pclass - Passenger class , as this has the medium income group people , as they have paid less so they would have been given \n## less preference by the on duty staff.","7b0e83f5":"import warnings \nwarnings.filterwarnings('ignore')","b5026a01":"## Let's check what was the distribution for the age of people actually present in the titanic.\n\nsns.distplot(df['Age'].dropna() , kde = False ,  bins = 40);\n\n## As we already know that age has Nan values so we will drop that. For that we are using df['Age'].dropna()","33808729":"df['Age'].hist(bins = 30 );","020c328a":"## Similar way let's check for the number of siblings and spouse.\nsns.countplot(x = 'SibSp', data=df);","0459644d":"## Let's check what was the average fare of ticket that people bought. \n\ndf['Fare'].hist(color = 'green' , bins = 40 , figsize = (8,4));","3347e93d":"import matplotlib.pyplot as plt\nplt.figure(figsize = (12,7))\nsns.boxplot(x= 'Pclass', y='Age', data=df , palette = 'winter');","9f3e34f2":"## let's define a function\n\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass == 1 :\n            return 37\n            \n        elif Pclass == 2 :\n            return 29\n        else:\n            return 24\n        \n    else:\n        return Age","893aa92a":"df[\"Age\"] = df[['Age','Pclass']].apply(impute_age , axis = 1)\n\n## for each and every record in age and Pclas it will be applied.","6a2906ad":"## let's see the heat map that we saw earlier.\n\nimport seaborn as sns\nsns.heatmap(df.isnull() , yticklabels = False , cbar = False , cmap = 'viridis');","8d5530a0":"## But here we can see...\ndf.isnull().sum()","3420848d":"df.shape","4b37e26f":"## lets drop the Cabin column\n\ndf.drop('Cabin' , axis = 1, inplace = True)","abd4e149":"## let's visualize the heatmap.\nimport seaborn as sns\nsns.heatmap(df.isnull() , yticklabels = False , cbar = False , cmap = 'viridis');","d108da6f":"## Now it is fine so much but still emabarked has some null values. As we can easily see\ndf.dropna(axis = 0, inplace = True)","63a75bd6":"import seaborn as sns\nsns.heatmap(df.isnull() , yticklabels = False , cbar = False , cmap = 'viridis');","218087e6":"df.info()","74c8c478":"## So in my embarked column I had few \npd.get_dummies(df['Embarked'], drop_first = True).head()\n\n## here we need to drop the first column other wise it will be redundant.","ce3df2c0":"df.head()","5bd117f4":"sex = pd.get_dummies(df['Sex'], drop_first = True)\nembark = pd.get_dummies(df['Embarked'], drop_first = True)","6aa418e7":"sex.head()\n## As for sex we can say that the person is male or female just with the help of one column only.\n## So, to reduce redundancy we are using drop_first as True.","b4dc8af1":"embark.head()","3ec917e8":"## So, as i have created dummies so let's drop the repeated columns and the other columns that are not necessary for me.\n\ndf.drop(['Sex', 'Embarked', 'Name', 'Ticket'], axis=1 , inplace=True)","e0c136c0":"df.head()","7d2c17dd":"df1 = pd.concat([df,sex,embark], axis=1)\ndf1.head()","ba828945":"df1.tail()","2027e6b2":"print(df1.shape)\ndf1.isnull().sum()","42d79a14":"## Now my data is ready.\n## do a train test split and make logistic model.","e54c2772":"from sklearn.model_selection import train_test_split\nX = df1.drop('Survived', axis=1)\ny = df1['Survived']\nX_train , X_test , y_train , y_test , = train_test_split(X,y,  test_size = 0.30,\n                                                        random_state = 123)","a309206c":"X.head(1)","961aa5a3":"X_train.head(1)","80e178d4":"X_test.head(1)","ca5b1f37":"y.head(1)","57f7d9d1":"y_train.head(1)","b356f684":"y_test.head(1)","89ef269a":"X_train.head()","ee3d24e4":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(X_train , y_train)","feb50ef4":"predictions = model.predict(X_test)","a94a75e8":"from sklearn.metrics import confusion_matrix , accuracy_score\naccuracy = accuracy_score(y_test, predictions)\naccuracy","28e92979":"C_Matrix = confusion_matrix(y_test, predictions)\nC_Matrix","0d2df938":"- SibSp - sibling spouse - count of spouse and siblings\n- Parch - parent child - count of parents and children\n- We need to predict whether a passenger has survived or not.","b7c5f29e":"- Most of the people had no sibling or spouse.\n- least had 5 (siblings + spouse)\n- Most of the people were travelling alone.","25852d5a":"-  So, out of 891 values, for cabin there are 687 Nan values.\n-  We can easily drop this.","b6acef72":"- As I have Sex and Embarked object so we can convert them into dummies. (One hot Encoding).","6a3c5dc9":"## Train Test Split","b60f3fcf":"So, on the basis of sex(male or female let's check how many survived and how many not survived)...","50024710":"- Pclass has 1 (rich) , 2 (medium), 3 (poor)\n- Hero of titanic was in which class (3)","6b67b2fd":"## Training and Predicting","347e4f60":"Importing Necessary Libraries...","daa0cf44":"#### We can see here that which age of people were present and which passenger class they were.\n#### 3 passenger class.\n#### we found the avg value of each class is 37 or 38, 29, 24.","836bcad2":"## Missing Data","939c95fb":"## Converting Categorical Data","a0c88866":"#### So, elderly people were less, youngsters were more , less of old prople.","3e7b34e0":"\n- This heat map is done to see that whatever condition we are putting(in this case df.isnull() , if it is true then it will be displayed in come other color.)\n\n- y ticklabels is false so i can't see the row numbers(index) , as my x tick labels is not false so i can see all the columns)\n\n- cbar cmap(all the values are shown as yellow color) are just styling technique.","952e7d26":"- Among not survived most of the men died , less women died.\n- female survived more.","b1547d07":"- True = has null value.\n- False = not has the null value","1329be59":"#### So, earlier the age column was having null values. But now those are filled.","09a27e94":"#### Now, Data is clean","05a895aa":"### Most of the pclass 3 i.e. poor died the most.","eaac8bb0":"Importing Datasets...","ef36448b":"We want to fill the missing values and not drop them. One way is to fill with the mean age of passengers.\nLet's see few insights.","3e62c302":"## Data Cleaning","bbfb7a42":"#### But the problem with the cabin is that there are many null values.\n#### So, we need to apply feature engineering."}}