{"cell_type":{"27e87f7b":"code","fa2826cf":"code","58937fa9":"code","7438e8d9":"code","107e3523":"markdown","53f37759":"markdown","cef08194":"markdown","6bae7c63":"markdown"},"source":{"27e87f7b":"# Install cord19q project\n!pip install git+https:\/\/github.com\/neuml\/cord19q","fa2826cf":"import sqlite3\nimport pandas as pd\n\n# Connect to articles database\ndb = sqlite3.connect(\"..\/input\/cord-19-analysis-with-sentence-embeddings\/cord19q\/articles.sqlite\")\n\n# Export last 200 records by published date to CSV\nrecent = pd.read_sql_query(\"SELECT title, published as Date, reference as URL, tags FROM articles order by published desc LIMIT 200\", db)\nrecent.to_csv(\"cord-19_recent_200_date.csv\", index=False)\n\n# Export last 200 records by published date to CSV\nrecent = pd.read_sql_query(\"SELECT title, published as Date, reference as URL, tags FROM articles where published <= '2020-03-31' order by published desc LIMIT 200\", db)\nrecent.to_csv(\"cord-19_recent_200_2020March.csv\", index=False)\n\n# Export last 200 records by id to CSV\nrecent = pd.read_sql_query(\"select title, published as Date, reference as URL, tags FROM articles a where id in \" +\n                           \"(select distinct(article) from sections order by id desc LIMIT 200) order by (select max(id) from sections where article=a.id) desc\", db)\nrecent.to_csv(\"cord-19_recent_200_id.csv\", index=False)\n\n","58937fa9":"import os\nimport shutil\n\nimport pandas as pd\n\nfrom cord19q.models import Models\nfrom cord19q.query import Query\n\nif not os.path.exists(\"\/tmp\/cord19-300d.magnitude\"):\n    # Copy vectors locally for predictable performance\n    shutil.copy(\"..\/input\/cord19-fasttext-vectors\/cord19-300d.magnitude\", \"\/tmp\")\n\nembeddings, db = Models.load(\"..\/input\/cord-19-analysis-with-sentence-embeddings\/cord19q\")\ncur = db.cursor()\n\n# Query embeddings index\nrows = [(score, text) for uid, score, article, text in Query.search(embeddings, cur, \"hypertension\", 50)]\n\n# Convert to dataframe and export\ndf = pd.DataFrame(rows, columns=[\"Score\", \"Text\"])\ndf.to_csv(\"cord-19-top50-hypertension.csv\", index=False)\n\nModels.close(db)\n","7438e8d9":"import csv\nimport shutil\nimport sqlite3\n\nimport pandas as pd\n\ndb = sqlite3.connect(\"..\/input\/cord-19-analysis-with-sentence-embeddings\/cord19q\/articles.sqlite\")\ncur = db.cursor()\n\n# Output rows\nrows = []\n\n# Read training data, convert to features\nwith open(\"..\/input\/cord19-study-design\/design.csv\", mode=\"r\") as csvfile:\n    for row in csv.DictReader(csvfile):\n        uid = row[\"id\"]\n        label = row[\"label\"]\n\n        cur.execute(\"select id, title, published, reference from articles a where id=?\", [uid])\n        row = cur.fetchone()\n        if row:\n            rows.append((label,) + row)\n\ndf = pd.DataFrame(rows, columns=[\"Label\", \"Id\", \"Title\", \"Date\", \"URL\"])\ndf.to_csv(\"cord-19-design.csv\", index=False)\n\n# Copy attribute.csv file over\nshutil.copy(\"..\/input\/cord19-study-design\/attribute.csv\", \"cord-19-attribute.csv\")","107e3523":"# CORD-19 Data Validation Files\n\nThis notebook exports a series of files to help validate the results of the [CORD-19 Analysis with Sentence Embeddings](https:\/\/www.kaggle.com\/davidmezzetti\/cord-19-analysis-with-sentence-embeddings) notebook against manual PubMed queries.","53f37759":"# Sample query for hypertension\nExport the 50 sentences matched for a sample query on \"hypertension\"","cef08194":"# Show study design training data\nLookup additional fields for the study design data to help with analysis.","6bae7c63":"# Export last 200 records\nExport by date, date up to 3\/31\/2020 and last 200 ids per the metadata csv file"}}