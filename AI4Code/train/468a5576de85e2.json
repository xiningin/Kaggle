{"cell_type":{"094eac95":"code","52803b14":"code","9a5cab1c":"code","0170d7ce":"code","d754fc94":"code","1172749e":"code","6a1aeafe":"markdown","8fd80ef9":"markdown","e80ef7bf":"markdown","aa2e1cb8":"markdown","7291da0c":"markdown","dfa8fb7e":"markdown","b4ec9f7c":"markdown","c6d78d18":"markdown"},"source":{"094eac95":"# https:\/\/www.reddit.com\/r\/wallstreetbets\/comments\/le0bf9\/the_more_you_average_down_the_easier_it_becomes\/?utm_source=share&utm_medium=web2x&context=3\n\nimport matplotlib.ticker as mtick\nfrom matplotlib.ticker import AutoMinorLocator, LinearLocator, FormatStrFormatter\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib import cm\n\nplt.rcParams['figure.figsize'] = [30, 30]\npd.options.display.float_format = '{:.1%}'.format","52803b14":"def get_gain_loss_req_2_brk_even(gain_loss: float, new_share_percentage_current_shares: float = 0.0,\n                                 mask_div0: bool = True, inf_mask=np.inf) -> float:\n    \"\"\"Calculates the percentage gain\/loss required to reach break even on an investment\/gamble\n\n    :param gain_loss: (float)\n                        percentage gain\/loss of current holdings\n    :param new_share_percentage_current_shares: (float)\n                        new shares purchased at current price expressed as a percentage\n                        of the existing stake\n    :param mask_div0: (bool) defaults: True (Applies a mask to the divisor in the event it == 0)\n    :param inf_mask: (float) defaults: np.inf\n\n    :return: (float)\n                        the percentage gain or loss required to reach brake even from current price\n                        after purchasing new shares at current price\n    \"\"\"\n    try:\n        return (-gain_loss) \/ ((1.0 + gain_loss) * (1.0 + new_share_percentage_current_shares))\n    except ZeroDivisionError as zde:\n        if mask_div0:\n            return inf_mask\n        raise zde","9a5cab1c":"loss = -0.99\nnew_share_percentage_current_shares = 10\nreq_gain = get_gain_loss_req_2_brk_even(loss,new_share_percentage_current_shares)\nout = f\"A postion currently sitting at a {int(loss*100)}% loss will require {int(req_gain*100)}% return to reach brake even after increasing the amount of shares by {int(new_share_percentage_current_shares*100)}% at current market price\"\nout","0170d7ce":"gain_loss_ls = np.arange(-1.0, 1.0, 0.01)\nbuy_sell_list = np.arange(0.0, 10.1, 0.01)\ndata = np.array(\n    [\n        np.array([get_gain_loss_req_2_brk_even(gl,nspcs) for gl in gain_loss_ls]) for nspcs in buy_sell_list\n    ]\n)\ndf = pd.DataFrame(data, index=buy_sell_list,columns=['{:.0%}'.format(p) for p in gain_loss_ls])\ndf","d754fc94":"ax  = df.plot.line()\n\nax.set_xlim((0,10.0) )\nax.set_ylim((-1,100) )\nax.set_xscale('symlog')\nax.set_yscale('symlog')\nax.set_xticks([0,0.15,0.5, 1,5, 10,])\nax.set_yticks([-1,-0.5, -0.15,0,0.15,0.5,1,5,10,100])\nax.xaxis.set_major_formatter(mtick.PercentFormatter(1))\nax.yaxis.set_major_formatter((mtick.PercentFormatter(1)))\n\nr = 1.0\ng = 0.0\nlines = ax.get_lines()\nfor line, gl in list(zip(lines,gain_loss_ls)):\n    if gl >= 0:\n        line.set_color((0.0, g, 0.0))\n        g += (1\/(len(gain_loss_ls[gain_loss_ls >= 0])))\n    elif gl < 0:\n        line.set_color((r, 0.0, 0.0))\n        r -= (1\/(len(gain_loss_ls[gain_loss_ls < 0])))\nax.legend(title='Current Gain\/Loss', bbox_to_anchor=(1.05, 1), loc='upper left')\nminor_locator = AutoMinorLocator(5)\nax.xaxis.set_minor_locator(minor_locator)\nax.yaxis.set_minor_locator(minor_locator)\nax.grid(True, which=\"major\", ls=\"-\")\nax.grid(True, which=\"minor\", ls=(0, (1, 10)))\na = ax.get_xgridlines()\nb = a[0]\nb.set_color('black')\nb.set_linewidth(3)\nax.set_xlabel(\"Percent Bought\/Sold Of Orignal Stake\",color='black')\nax.set_ylabel(\"Percent Return Of New Stake Requred to Reach Break Even\",color='black')\nax.tick_params(colors='black')\n","1172749e":"X, Y  = np.meshgrid(gain_loss_ls, buy_sell_list)\nZ = data\n\nfig = plt.figure()\nax3d = plt.axes(projection='3d')\nsurf = ax3d.plot_surface(X, Y, Z,linewidth=0,cmap=cm.RdYlGn_r,vmin = -1, vmax = 1)\n\nax3d.set_xlim((-1,1) )\nax3d.set_zlim((0, 100))\nax3d.set_ylim(0,10)\n# ax3d.invert_yaxis()\n# ax3d.set_yscale('symlog')\n# ax3d.set_zscale('symlog')\nax3d.set_yticks([0,1,2,3,4, 5, 10])\n\nax3d.xaxis.set_major_formatter(mtick.PercentFormatter(1))\nax3d.yaxis.set_major_formatter((mtick.PercentFormatter(1)))\nax3d.zaxis.set_major_formatter((mtick.PercentFormatter(1)))\n\nax3d.set_xlabel('Current Gain\/Loss',labelpad=10)\nax3d.set_ylabel('Percent Bought\/Sold Of Current Stake',labelpad=10)\nax3d.set_zlabel('Percent Return Of New Stake Requred to Reach Break Even', labelpad=10)\nax3d.view_init(15, -60)\nax3d.tick_params(colors='black')\ncbar = fig.colorbar(surf, shrink=0.5, aspect=5,)\ncbar.ax.set_yticklabels(['{:.0%}'.format(x) for x in np.arange(-1, 1.25, 0.25)], fontsize=16, weight='bold',color='black')\ncbar.set_label(label=\"Percent Return Of New Stake Requred to Reach Break Even\",weight='bold',color='black')","6a1aeafe":"Now for the 3D plot! log scale has some bugs I can't figure out a way around right now. So I used a surface color map locked to a range of -100% to 100%.","8fd80ef9":"Next we run a little test of our function.","e80ef7bf":"The first thing we will do is import a bunch of junk from pandas, numpy and matplotlib. Then set some global options for the notebook.","aa2e1cb8":"![https:\/\/www.reddit.com\/r\/wallstreetbets\/comments\/le0bf9\/the_more_you_average_down_the_easier_it_becomes\/](https:\/\/i.redd.it\/d7jln4rwovf61.png)","7291da0c":"Now that we have some data to plot, we'll start with a 2d one similer to the one from my reddit post that was made in excel.","dfa8fb7e":"Great! Our function worked. Now we buld our data set with it.","b4ec9f7c":"Next we define our function. See inline docstrings for more information.","c6d78d18":"I was board one night and decided to make [a little shitpost](https:\/\/www.reddit.com\/r\/wallstreetbets\/comments\/le0bf9\/the_more_you_average_down_the_easier_it_becomes\/) for reddit's r\/wallstreetbets. I thought the graph looked cool and decided to use python to make a 3d mapping of this relationship."}}