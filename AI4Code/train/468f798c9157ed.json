{"cell_type":{"8f70b012":"code","dfe4fc69":"code","d8ae96db":"code","51c77129":"code","08cb938a":"code","e3f31e9e":"code","bfd6e95f":"code","1b89ab64":"code","c64de32a":"code","d34caed6":"code","31f83bee":"code","d38e5b8a":"code","b764e93f":"code","5c66cec8":"code","3f5e93ba":"markdown","427146f3":"markdown","0ed813d7":"markdown","82d51179":"markdown","954f2842":"markdown","14ccfebf":"markdown","03d66010":"markdown","e5b20c03":"markdown","8611c075":"markdown","0dcd87cb":"markdown"},"source":{"8f70b012":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","dfe4fc69":"test_df = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/test.csv\",parse_dates=['date'])\ntest_df.head()","d8ae96db":"train_df = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/train.csv\",parse_dates=['date'])\ntrain_df.head()","51c77129":"plot_df = train_df.set_index('date')\nplot_df[['country', 'store', 'product', 'num_sold']].pivot(\n    columns=['country', 'store', 'product'], values='num_sold').plot(figsize=(18,6));","08cb938a":"submission = pd.read_csv(\n    '\/kaggle\/input\/tabular-playground-series-jan-2022\/sample_submission.csv',\n    index_col='row_id')","e3f31e9e":"train_df.info()","bfd6e95f":"train_df.describe()","1b89ab64":"sns.set()\nfig = plt.figure(figsize=(12,6))\ng = sns.barplot(x='country', y='num_sold', data=train_df, ci=None)\ng.bar_label(g.containers[0],fmt=\"%.0f\", padding=2)\nplt.title(\"Items sold in Each Country\",size=15)\nplt.show()","c64de32a":"train_df['product'].unique()","d34caed6":"fig = plt.figure(figsize=(12,6))\ng = sns.barplot(x='product', y='num_sold', data=train_df, ci=None)\ng.bar_label(g.containers[0],fmt=\"%.0f\", padding=2)\nplt.title(\"Individual Item Sales\", size=15)\nplt.show()\n","31f83bee":"fig = plt.figure(figsize=(12,6))\ng = sns.barplot(x='store', y='num_sold', data=train_df, ci=None)\ng.bar_label(g.containers[0],fmt=\"%.0f\", padding=2)\nplt.title(\"Individual Store Sales\", size=15)\nplt.show()","d38e5b8a":"y = train_df.pop('num_sold')\n\ntrain_df['year'] = train_df['date'].dt.year\ntrain_df['month'] = train_df['date'].dt.month\ntrain_df['day'] = train_df['date'].dt.day\ntrain_df['dayofweek'] = train_df['date'].dt.dayofweek\n\ntest_df['year'] = test_df['date'].dt.year\ntest_df['month'] = test_df['date'].dt.month\ntest_df['day'] = test_df['date'].dt.day\ntest_df['dayofweek'] = test_df['date'].dt.dayofweek\n\ntrain_df = train_df.drop('date', axis='columns')\ntest_df = test_df.drop('date', axis='columns')","b764e93f":"country_map = {'Finland': 0, 'Sweden': 1, 'Norway': 2}\nstore_map = {'KaggleMart': 0, 'KaggleRama': 1}\nproduct_map = {'Kaggle Mug': 0, 'Kaggle Hat': 1, 'Kaggle Sticker': 2}\n\ntrain_df['country'] = train_df['country'].map(country_map)\ntrain_df['store'] = train_df['store'].map(store_map)\ntrain_df['product'] = train_df['product'].map(product_map)\n\ntest_df['country'] = test_df['country'].map(country_map)\ntest_df['store'] = test_df['store'].map(store_map)\ntest_df['product'] = test_df['product'].map(product_map)","5c66cec8":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(n_estimators=500, n_jobs=-1)\nmodel.fit(train_df, y)\nbenchmark = submission.copy()\nbenchmark['num_sold'] = model.predict(test_df)\n\nbenchmark.to_csv('rf_submission.csv')","3f5e93ba":"The Kaggle Hat has been the most sold item followed by the mug.","427146f3":"Let's take a look at the products available.","0ed813d7":"Now let's look at how each of these products did.","82d51179":"KaggleRama seems to be making more sales than the other.","954f2842":"Let's take a look at how many items sold in each country.","14ccfebf":"## Let's do some EDA.","03d66010":"Let's take a look at sales of the stores","e5b20c03":"Seems like Norway had the most sales followed by sweden(ouh!!)","8611c075":"On avg the no of items sold is 388. ","0dcd87cb":"## Taking a look at the data"}}