{"cell_type":{"fbdab233":"code","5d27a704":"code","4d2aec39":"code","a5e95298":"code","eb250fa8":"code","8cbb1883":"code","9378c335":"code","5988d5cb":"code","24f7ac21":"code","91ba9333":"code","f20126c6":"markdown","d321fbd9":"markdown","ba3b5c82":"markdown","1af5cef8":"markdown"},"source":{"fbdab233":"# import all necessary libraries\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\n","5d27a704":"# import the data\ndata = pd.read_csv('\/kaggle\/input\/forbes-billionaires-of-2021\/Billionaire.csv')\n\n# show first five rows\ndata.head()\n","4d2aec39":"# explore the shape of the dataset\nprint('The Billionaire-Dataset has %s rows and %s coloumns.' %(data.shape[0], data.shape[1]))\n","a5e95298":"# check for missing values \nmissing_values = data.isnull().sum().sum()\nprint('The dataset has %s missing values!' %(missing_values))","eb250fa8":"# safe all column-names in one variable  \ncols = data.columns\n\n# count missing values for every column\nfor col in cols: \n    col_missing_values = data[col].isnull().sum()\n    print(f'The column {col} has {col_missing_values} missing values!')","8cbb1883":"# now lets preprocess the data to make it easier to work with it\n\n# Delte substrings in the 'NetWorth'-Column \ndata['NetWorth'] = data['NetWorth'].str.strip('$')\ndata['NetWorth'] = data['NetWorth'].str.strip('B')\n\n# change the datatype to numeric \ndata['NetWorth'] = pd.to_numeric(data['NetWorth'])\n","9378c335":"df_con = data.head(10)\nfig = px.bar(df_con, x='NetWorth', y='Name',\n             hover_data=['Name'], color='NetWorth',\n             height=500, width=1000, orientation='h', title='Jeff Bezos is still the richest man on Earth!')\nfig.show()","5988d5cb":"df_age = pd.DataFrame({'Count':data.groupby('Age').size()})\ndf_age = df_age.reset_index()\nfig = px.bar(df_age, x='Age', y='Count',height=500, width=1000, title='Billionaires grouped by age')\nfig.show()","24f7ac21":"df = pd.DataFrame({'SpalteA': [1,2,2], 'SpalteB':[4,5,6]})\n\n\ntop10 = data['NetWorth'].head(275).sum()\nrest = data['NetWorth'].sum() - top10\n\n\n\ndf_con = pd.DataFrame({'Group': ['Top10', 'Rest'], 'NetWorth':[top10, rest]})\ndf_con = df_con.reset_index()\ndf_con\n\nfig = px.pie(df_con, values='NetWorth', names='Group', color_discrete_sequence=px.colors.sequential.RdBu, title='Distribution of Billions')\n#fig.update_traces(title_position='bottom right', selector=dict(type='pie')) \nfig.update_layout(margin=dict(t=50, b=50, l=10, r=700))\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","91ba9333":"df_ind2 = data.groupby('Industry').NetWorth.sum()\ndf_ind2 = df_ind2.reset_index()\ndf_ind2 = df_ind2.sort_values(by='NetWorth')\n\nfig = px.bar(df_ind2, x='Industry', y='NetWorth', title='Billions combined per Industry')\nfig.show()","f20126c6":"### Results related to the Industry","d321fbd9":"Let us now take a closer look at the ages of the given billionaires!","ba3b5c82":"## Dive into the dataset","1af5cef8":"All missing values are in the Age-Column. For that reason, I decided not to do anything with the missing values. \nwe can easily work with all the other columns for visualization without any loss of information.  "}}