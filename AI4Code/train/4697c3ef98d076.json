{"cell_type":{"ba8fd703":"code","69a8080a":"code","68e265c7":"code","4d63200d":"code","d82675c3":"code","cc522027":"code","d3173309":"code","13f139d1":"code","7869fa7b":"code","34b0adc6":"code","196f57c9":"code","6a3e9060":"code","59dc4ae0":"code","0b52236b":"code","a210ff13":"code","7b044672":"code","2129acb1":"code","b87b2b53":"code","56c9888b":"code","bd5f5c91":"code","a0c68983":"code","0d4860ab":"code","6c0a39ee":"code","9b17678e":"code","38e4af14":"code","b5274563":"code","17ae6483":"code","191a13d6":"code","9708c730":"code","03e518d7":"code","2cb5b130":"markdown","de3ba272":"markdown","f73bdcfe":"markdown","3ce9694c":"markdown","25fa9aaf":"markdown","4171aa4b":"markdown"},"source":{"ba8fd703":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","69a8080a":"data = pd.read_csv('..\/input\/coronavirus-2019ncov\/covid-19-all.csv')\ndata.head()","68e265c7":"data.tail()","4d63200d":"data.info()","d82675c3":"#data.drop(['Longitude', 'Latitude'], axis=1, inplace=True)\ndata.dropna(subset=['Confirmed', 'Recovered', 'Deaths', 'Longitude', 'Latitude'], inplace=True)\n","cc522027":"data.info()","d3173309":"countries = data['Country\/Region'].unique().tolist()\n","13f139d1":"def mercator(data, lon=\"Longitude\", lat=\"Latitude\"):\n    \"\"\"Converts decimal longitude\/latitude to Web Mercator format\"\"\"\n    k = 6378137\n    data[\"x\"] = data[lon] * (k * np.pi\/180.0)\n    data[\"y\"] = np.log(np.tan((90 + data[lat]) * np.pi\/360.0)) * k\n    return data\n\n","7869fa7b":"data = mercator(data)\ndata.head()","34b0adc6":"from bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show\nfrom bokeh.models import WMTSTileSource\n","196f57c9":"output_notebook()","6a3e9060":"\n\n\n\nurl = 'http:\/\/c.tile.openstreetmap.org\/{Z}\/{X}\/{Y}.png'\np = figure(tools='pan, wheel_zoom', x_axis_type=\"mercator\", y_axis_type=\"mercator\")\n\np.add_tile(WMTSTileSource(url=url))\np.circle(x=data['x'], y=data['y'], fill_color='orange', size=5)\nshow(p)","59dc4ae0":"len(countries)","0b52236b":"union_europe = ['Austria', 'Italy', 'Belgium', 'Latvia', 'Bulgaria', 'Lithuania', 'Croatia', 'Luxembourg',\n                'Cyprus', 'Malta', 'Czechia', 'Netherlands', 'Denmark', 'Poland', 'Estonia', 'Portugal',\n                'Finland', 'Romania', 'France', 'Slovakia', 'Germany', 'Slovenia', 'Greece', 'Spain',\n                'Hungary', 'Sweden', 'Ireland', 'UK']","a210ff13":"non_EU = ['Albania', 'Belarus', 'Bosnia', 'Herzegovina', 'Kosovo', 'Macedonia', 'Moldova',\n          'Norway', 'Russia', 'Serbia', 'Switzerland', 'Ukraine', 'Turkey']","7b044672":"data_EU = data[data['Country\/Region'].isin(union_europe)]\ndata_non_EU = data[data['Country\/Region'].isin(non_EU)]","2129acb1":"aisa_countries = ['Afghanistan', 'Armenia', 'Azerbaijan', 'Bahrain', 'Bangladesh' 'Bhutan',\n                  'Brunei', 'Cambodia', 'Mainland China', 'Cyprus', 'Georgia','Hong Kong',\n                  'India' 'Indonesia',\n                  'Iran', 'Iraq', 'Japan', 'Jordan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan'\n                  , 'Laos', 'Lebanon', 'Malaysia', 'Maldives', 'Mongolia', 'Myanmar',\n                  'Nepal', 'North Korea', 'Oman', 'Pakistan', 'Palestine', 'Philippines',\n                  'Qatar', 'Saudi Arabia', 'Singapore', 'South Korea', 'Sri Lanka','Syria',\n                  'Taiwan', 'Tajikistan', 'Thailand', 'Timor-Leste', 'Turkmenistan',\n                  'United Arab Emirates', 'Uzbekistan', 'Vietnam', 'Yemen']","b87b2b53":"data_aisa = data[data['Country\/Region'].isin(aisa_countries)]","56c9888b":"africa_countries = ['Liberia', 'Tanzania', 'Eritrea','Ethiopia', 'Cameroon', 'Ghana','South Africa', 'Kenya', 'Rwanda','Nigeria', 'Gabon', 'Tunisia','Senegal', 'Algeria', 'Ivory Coast','Uganda', 'Morocco', 'Zimbabwe','Egypt']","bd5f5c91":"data_africa = data[data['Country\/Region'].isin(africa_countries)]","a0c68983":"america_countries = ['Antigua and Barbuda', 'Bahamas', 'Barbados', 'Belize', 'Canada', 'Costa Rica', 'Cuba', 'Dominica', 'Dominican Republic',\n                   'El Salvador', 'Grenada', 'Guatemala', 'Haiti', 'Honduras', 'Jamaica', 'Mexico',\n                   'Nicaragua', 'Panama', 'Saint Kitts and Nevis', 'Saint Lucia', 'Saint Vincent and the Grenadines', 'Trinidad and Tobago', 'US']","0d4860ab":"data_america = data[data['Country\/Region'].isin(america_countries)]","6c0a39ee":"data_australia = data[(data['Country\/Region']=='New Zealand')|(data['Country\/Region']=='Australia')]","9b17678e":"data[data['Country\/Region']=='Others'].shape","38e4af14":"total_confirmed = [data_africa['Confirmed'].max(), data_aisa['Confirmed'].max(), data_EU['Confirmed'].max(), data_non_EU['Confirmed'].max(), data_america['Confirmed'].max(), data_australia['Confirmed'].max()]\ntotal_deaths = [data_africa['Deaths'].max(), data_aisa['Deaths'].max(), data_EU['Deaths'].max(), data_non_EU['Deaths'].max(), data_america['Deaths'].max(), data_australia['Deaths'].max()]","b5274563":"areas = ['Africa', 'Aisa', 'EU', 'NON-EU', 'America', 'Australia']\ndf_continents = pd.DataFrame({'Confirmed':total_confirmed, 'Deaths':total_deaths}, index=areas)","17ae6483":"df_continents","191a13d6":"sns.set()\nplt.figure(figsize=(12, 6), dpi=300)\nposition = np.arange(len(areas))\nwidth = 0.4\nplt.bar(position - (width\/2), (df_continents['Confirmed']\/df_continents['Confirmed'].sum())*100, width=width, label='Confirmed')\nplt.bar(position + (width\/2), (df_continents['Deaths']\/df_continents['Deaths'].sum())*100, width=width, label='Deaths')\nplt.xticks(position, rotation=10)\nplt.yticks(np.arange(0, 101, 10))\nax = plt.gca()\nax.set_xticklabels(areas)\nax.set_yticklabels(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%']);\nax.set_yticks(np.arange(0, 100, 5), minor=True)\nax.yaxis.grid(which='major')\nax.yaxis.grid(which='minor', linestyle='--')\nplt.title('Confirmed vs Deaths in different continents')\nplt.legend();\n","9708c730":"plt.figure(figsize=(10, 6))\n\nplt.plot('Date', 'Confirmed', data=data_aisa, label='Aisa')\nplt.plot('Date', 'Confirmed', data=data_EU, label='EU')\nplt.plot('Date', 'Confirmed', data=data_non_EU, label='Non-EU')\nplt.plot('Date', 'Confirmed', data=data_america, label='America')\nplt.plot('Date', 'Confirmed', data=data_australia, label='Australia')\nplt.xticks(np.arange(0, 60, 2), rotation=70)\nplt.legend()\nplt.title('Confirmed cases in different continents')","03e518d7":"plt.figure(figsize=(10, 6))\nplt.plot('Date', 'Deaths', data=data_aisa, label='Aisa')\nplt.plot('Date', 'Deaths', data=data_EU, label='EU')\nplt.plot('Date', 'Deaths', data=data_non_EU, label='Non-EU')\nplt.plot('Date', 'Deaths', data=data_america, label='America')\nplt.plot('Date', 'Deaths', data=data_australia, label='Australia')\nplt.xticks(np.arange(0, 60, 2), rotation=70)\nplt.yticks(np.arange(0, 3001, 500))\nplt.legend()\nplt.title('Deaths in different continents')","2cb5b130":"In the following we are creating a world map to show the most infected areas.","de3ba272":"Let's deal with missing data.","f73bdcfe":"We are going to cluster our data based on continents.","3ce9694c":"### Abstract:\n\nBy the end of 2019, some cases of pneumonia of unknown etiology was detected in Wuhan city. Just a week after the new year, the World Health Organization reported that it was about a novel Coronavirus (2019-CoV). However, the virus takes an even larger area of spread that goes beyond China's borders due to air travels. Just by the end of January 2020, some doctors identified coronavirus transmission jut by contacting an asymptomatic infected patient in <a id='https:\/\/www.nejm.org\/doi\/10.1056\/NEJMc2001468'>Germany<\/a>. However, by the end of February, COVID-19 takes an exponential speed that covers about 170 countries with more than 250.000 cases and about 11.000 reported deaths. It is important to indicate that Europe has became the new epicentre of the virus.\n\nIn this kernel, we will investigate every relevant information about 2019-CoV in order to come out with a good understanding of its transmission speed.\n\n> Note that under lack of any effective treatment, isolation is considered the only way to at least outbreaks COVID-19 spread.","25fa9aaf":"It seems that death rate has decreased exponentially in aisa by the second week of this month, while EU have exponential increase.","4171aa4b":"### Let's check deaths and confirmed cases in each continent.\n\nIn the following analysis we will separate union european countries and those which are non as we believe free movement in union europe countries supports the development speed of Covid-16."}}