{"cell_type":{"e91fb51f":"code","b03802c9":"code","74075c8a":"code","7faa5c79":"code","d8b5aa5a":"code","faa3d235":"code","af11cbb7":"code","9c9ca1e5":"code","a235dd99":"code","549a595d":"code","449949ed":"code","a0651a15":"code","5dfdd333":"code","f55d2b0f":"code","4af53c7e":"code","9e01468a":"code","5bfcc12a":"code","7367efd9":"code","f03f5956":"code","4f717bea":"code","f02627aa":"code","ac59217d":"code","34a68b0d":"code","bfd6ea84":"code","bab37f8c":"code","d4961dd5":"code","016c10c9":"code","ef6561b4":"code","b0164712":"code","bc705c4f":"code","7fdae123":"code","b67f32c0":"code","48bc9725":"code","db3abead":"code","abe9090b":"code","0abc8523":"code","72340ccf":"code","98d4068c":"code","122a62f1":"code","2a3231f6":"code","b489f127":"code","831bdbb8":"code","cabea16c":"code","2c6e6ac3":"code","ecccbbdc":"code","cac289e3":"code","7ea5d67a":"code","21ca6823":"code","6c7b96b6":"code","f5ea9dc0":"code","a5b3f5b5":"code","dc46b103":"code","804ace17":"code","8d826dc5":"code","96b6e9ef":"markdown","ca8b9cf0":"markdown"},"source":{"e91fb51f":"import pandas as pd","b03802c9":"df=pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","74075c8a":"df","7faa5c79":"df.isnull().sum().sort_values(ascending=False).head(20)","d8b5aa5a":"df.isnull().sum().sort_values(ascending=False)","faa3d235":"ColumnsWithMistakes=[\"Alley\",\"BsmtQual\",\"BsmtCond\",\"BsmtExposure\",\"BsmtFinType1\",\"BsmtFinType2\",\"FireplaceQu\",\n                    \"GarageType\",\"GarageFinish\",\"GarageQual\",\"GarageCond\",\"PoolQC\",\"Fence\",\"MiscFeature\"]","af11cbb7":"df[ColumnsWithMistakes]=df[ColumnsWithMistakes].fillna(\"Not Available\")","9c9ca1e5":"df.isnull().sum().sort_values(ascending=False).head(20)","a235dd99":"df.shape","549a595d":"df[\"LotFrontage\"]","449949ed":"import seaborn as sns","a0651a15":"sns.boxplot(df[\"LotFrontage\"])","5dfdd333":"df[\"LotFrontage\"].fillna(df[\"LotFrontage\"].median(),inplace=True)","f55d2b0f":"df.isnull().sum().sort_values(ascending=False).head(20)","4af53c7e":"df[\"GarageYrBlt\"]","9e01468a":"df[\"GarageYrBlt\"].fillna(df[\"GarageYrBlt\"].mode()[0],inplace=True)","5bfcc12a":"df.isnull().sum().sort_values(ascending=False).head(20)","7367efd9":"df[\"MasVnrType\"]","f03f5956":"df=df[df[\"MasVnrType\"].notna()]","4f717bea":"df.shape","f02627aa":"df.isnull().sum().sort_values(ascending=False).head(20)","ac59217d":"df=df[df[\"Electrical\"].notna()]\n","34a68b0d":"df.shape","bfd6ea84":"df.isnull().sum().sort_values(ascending=False).head(20)","bab37f8c":"y=df[\"SalePrice\"]","d4961dd5":"X=df.drop(\"SalePrice\",axis=\"columns\")","016c10c9":"X","ef6561b4":"X=X.drop(\"Id\",axis=\"columns\")","b0164712":"X","bc705c4f":"X","7fdae123":"X.dtypes","b67f32c0":"X.dtypes==\"object\"","48bc9725":"NonNumericColumns=X.columns[X.dtypes==\"object\"]","db3abead":"NonNumericColumns","abe9090b":"X=pd.get_dummies(X,columns=NonNumericColumns,drop_first=True)","0abc8523":"X.shape","72340ccf":"type(X)","98d4068c":"from sklearn.model_selection import train_test_split","122a62f1":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=4)","2a3231f6":"X.describe()","b489f127":"from sklearn.preprocessing import MinMaxScaler","831bdbb8":"scaler=MinMaxScaler()","cabea16c":"X_train=scaler.fit_transform(X_train)","2c6e6ac3":"X_test=scaler.transform(X_test)","ecccbbdc":"from sklearn.model_selection import GridSearchCV","cac289e3":"from sklearn.linear_model import Lasso\n","7ea5d67a":"lasso=Lasso()","21ca6823":"model=GridSearchCV(lasso,param_grid={\"alpha\":[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,2,5,10,20,50,100,200,500,1000]},cv=3,\n                   return_train_score=True)","6c7b96b6":"model.fit(X_train,y_train)","f5ea9dc0":"pd.DataFrame(model.cv_results_)[[\"param_alpha\",\"mean_test_score\",\"mean_train_score\"]].sort_values(by=\"mean_test_score\",ascending=False)","a5b3f5b5":"from sklearn.linear_model import Lasso","dc46b103":"model=Lasso(alpha=200)","804ace17":"model.fit(X_train,y_train)","8d826dc5":"model.score(X_test,y_test)","96b6e9ef":"1. Subset the column of interest\n2. Convert the value to boolean using a condition\n3. surround with dataframeReference[..code uptil step 2..]","ca8b9cf0":"Mean- Numeric, Continuous, very few outliers\nMedian- Numeric, continuous, has many outliers\nMode- Numeric\/ Non-Numeric, Categorical"}}