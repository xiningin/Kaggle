{"cell_type":{"0599c224":"code","85f90112":"code","e2d3da08":"code","e199636e":"code","082d2ba7":"code","facb3aa6":"code","086724ea":"code","4566bd90":"code","5c9f62c9":"code","b7bea65c":"code","646105f5":"code","18ef6624":"code","8104cdc4":"code","cf07722c":"code","af34acc6":"markdown"},"source":{"0599c224":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","85f90112":"ad_df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict.csv')","e2d3da08":"import seaborn as sns\nimport matplotlib.pyplot as plt","e199636e":"ad_df.describe()","082d2ba7":"ad_df.drop(labels='Serial No.', axis=1, inplace=True)","facb3aa6":"sns.heatmap(ad_df.corr(), annot=True)","086724ea":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","4566bd90":"X = ad_df.iloc[:, :-1]\ny = ad_df.iloc[:, -1]\nfrom sklearn.utils import shuffle\nX, y = shuffle(X, y)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","5c9f62c9":"ss = StandardScaler()\nX_train, X_test = ss.fit_transform(X_train), ss.transform(X_test)\npd.DataFrame(X_test) # getting a glimpse","b7bea65c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score","646105f5":"m = LinearRegression()\nm.fit(X_train, y_train)\ny_pred = m.predict(X_test)","18ef6624":"r2_score(y_test, y_pred)","8104cdc4":"pd.DataFrame(index=X.columns.values, data=m.coef_, columns = ['coeficcient'])","cf07722c":"plt.figure(figsize=(10,15))\nplt.bar(X.columns.values, m.coef_)","af34acc6":"We notice that there's a high correlation between CGPA and Chance of Admit. I'm going to go ahead and create a linear regression model - seems quite straightforward. "}}