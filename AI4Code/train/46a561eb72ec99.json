{"cell_type":{"90b16638":"code","c5f55d75":"code","fa668412":"code","cf10b098":"code","429bf9f2":"code","03baee60":"code","e5a6e94e":"code","c76375d8":"code","ce253bc2":"code","36e56963":"code","8b9f6f3b":"code","1cbcb4aa":"code","a92ba1f1":"code","1ce7670c":"code","2f974f9b":"code","0a69a718":"code","bdf83fbb":"code","f8d227d2":"markdown","bc1e2e2e":"markdown","1e95fa21":"markdown","f644dc47":"markdown","a1556645":"markdown","b769247b":"markdown","3110f60f":"markdown","0087509f":"markdown","55c15d45":"markdown","5e72cb32":"markdown","1aead547":"markdown","49c3e576":"markdown","8a26cc2e":"markdown","dbb8406c":"markdown","8a9f5f72":"markdown","09fc4c90":"markdown"},"source":{"90b16638":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c5f55d75":"train_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/test.csv\")\nsub_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/sample_submission.csv\")","fa668412":"train_df.head()","cf10b098":"train_df.count()","429bf9f2":"test_df.count()","03baee60":"from nltk.corpus import stopwords\nimport nltk\nimport re\nimport string\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing","e5a6e94e":"def change_text(text):\n    \n    text = re.sub(r\"n\\'t\", \" not\", text)\n    text = re.sub(r\"\\'re\", \" are\", text)\n    text = re.sub(r\"\\'s\", \" is\", text)\n    text = re.sub(r\"\\'d\", \" would\", text)\n    text = re.sub(r\"\\'ll\", \" will\", text)\n    text = re.sub(r\"\\'t\", \" not\", text)\n    text = re.sub(r\"\\'ve\", \" have\", text)\n    text = re.sub(r\"\\'m\", \" am\", text)\n    \n    # specific\n    text = re.sub(r\"won\\'t\", \"will not\", text)\n    text = re.sub(r\"can\\'t\", \"can not\", text)\n    return text\n\ntrain_df['text'] = train_df['text'].apply(lambda x : change_text(x))\ntest_df['text'] = test_df['text'].apply(lambda x : change_text(x))\n\ntrain_df['text'].head()","c76375d8":"def clean_preprocessor(text):\n    \n    text = text.lower()\n    text = re.sub('\\[.*?\\]', '', text)\n    text = re.sub(\"\\\\W\",\" \",text) # remove special chars\n    text = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    text = re.sub('<.*?>+', '', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    return text\n\ntrain_df['text'] = train_df['text'].apply(lambda x : clean_preprocessor(x))\ntest_df['text'] = test_df['text'].apply(lambda x : clean_preprocessor(x))\n\ntrain_df['text'].head()","ce253bc2":"def remove_emoji(text): # stop emoji\n    emoji_pattern = re.compile(\"[\"\n                           u\"\\U0001F600-\\U0001F64F\"  # emoticons\n                           u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n                           u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n                           u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           u\"\\U00002702-\\U000027B0\"\n                           u\"\\U000024C2-\\U0001F251\"\n                           \"]+\", flags=re.UNICODE)\n    return emoji_pattern.sub(r'', text)\ntrain_df['text'] = train_df['text'].apply(lambda x : remove_emoji(x))\ntest_df['text'] = test_df['text'].apply(lambda x : remove_emoji(x))","36e56963":"train_df.head()","8b9f6f3b":"test_df.head()","1cbcb4aa":"from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression","a92ba1f1":"stopwords = stopwords.words('english')\n\ncount_vectorizer = CountVectorizer(token_pattern=r'\\w{1,}', ngram_range=(1, 2), stop_words = stopwords)\n\ntrain_vector = count_vectorizer.fit_transform(train_df['text'])\ntest_vector = count_vectorizer.transform(test_df['text'])","1ce7670c":"clf = LogisticRegression(C=0.9,max_iter=1000,penalty='l2')\n\n#Check accuracy score from K-Fold cross validation\nscores = model_selection.cross_val_score(clf, train_vector, train_df[\"target\"], cv=7, scoring=\"f1\")\nprint(scores)","2f974f9b":"clf.fit(train_vector, train_df[\"target\"])","0a69a718":"sub_df[\"target\"] = clf.predict(test_vector)\nsub_df.to_csv(\"sample_submission.csv\", index=False)","bdf83fbb":"sub_df.head()","f8d227d2":"### **\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e43\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21** \n>    \n\u0e19\u0e32\u0e07\u0e2a\u0e32\u0e27\u0e23\u0e27\u0e34\u0e2a\u0e23\u0e32 \u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07\u0e2d\u0e31\u0e01\u0e29\u0e23 610965612\n>    \n\u0e19\u0e32\u0e22\u0e18\u0e19\u0e32\u0e01\u0e23 \u0e1a\u0e38\u0e23\u0e32\u0e04\u0e23 6109656253\n>    \n\u0e19\u0e32\u0e07\u0e2a\u0e32\u0e27\u0e42\u0e0a\u0e15\u0e34\u0e01\u0e32 \u0e01\u0e32\u0e23\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07 6109656295","bc1e2e2e":"### **1.DATA EXPOLARATION**\n    \n **\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e41\u0e23\u0e01**: \n>     \n\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e2a\u0e33\u0e23\u0e27\u0e08\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data)\u0e41\u0e25\u0e30\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e14\u0e39\u0e27\u0e48\u0e32 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data)\u0e17\u0e35\u0e48\u0e40\u0e2d\u0e32\u0e21\u0e32\u0e21\u0e35\u0e2d\u0e30\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07 \u0e1e\u0e2d\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e49\u0e27\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e17\u0e33\u0e2b\u0e23\u0e37\u0e2d\u0e2b\u0e32\u0e2d\u0e30\u0e44\u0e23\u0e44\u0e14\u0e49\u0e1a\u0e49\u0e32\u0e07  ","1e95fa21":"### **2.DATA CLEANING**\n\n**\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e44\u0e1b**:\n> \u0e01\u0e32\u0e23\u0e17\u0e33\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e30\u0e2d\u0e32\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data cleaning) \u0e42\u0e14\u0e22\u0e25\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data) \u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e2d\u0e01\u0e44\u0e1b \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e14\u0e36\u0e07\u0e44\u0e1f\u0e25\u0e4c\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e02\u0e49\u0e32\u0e43\u0e19\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e49\u0e27 \u0e08\u0e36\u0e07\u0e17\u0e33\u0e01\u0e32\u0e23 cleaning \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 module \u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49","f644dc47":"### **Reference**\n* > sahib singh ,\"NLP Starter for Beginners\", https:\/\/www.kaggle.com\/sahib12\/nlp-starter-for-beginners\n* > Parul Pandey,\"Getting started with NLP - A general Intro\" ,https:\/\/www.kaggle.com\/parulpandey\/getting-started-with-nlp-a-general-intro\n* > Parul Pandey,\"Getting started with NLP-Feature Vectors\" ,https:\/\/www.kaggle.com\/parulpandey\/getting-started-with-nlp-feature-vectors ","a1556645":"**Import Library** :\n> \u0e19\u0e33\u0e40\u0e02\u0e49\u0e32 Librany \u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e42\u0e14\u0e22\u0e17\u0e33\u0e01\u0e32\u0e23 Import module \u0e43\u0e0a\u0e49 pandas \u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e19\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e15\u0e32\u0e23\u0e32\u0e07 \u0e41\u0e25\u0e30 numpy \u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e19\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e04\u0e48\u0e32\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e23\u0e27\u0e21\u0e16\u0e36\u0e07\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e04\u0e33\u0e19\u0e27\u0e13\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e41\u0e25\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e47\u0e04 Dataset \u0e27\u0e48\u0e32\u0e21\u0e35\u0e44\u0e1f\u0e25\u0e4c\u0e2d\u0e30\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 module os \u0e14\u0e31\u0e07\u0e42\u0e04\u0e49\u0e14\u0e02\u0e49\u0e32\u0e07\u0e25\u0e48\u0e32\u0e07","b769247b":" ## **DSI 206 Multimedia Representation Management**","3110f60f":"**Check Data** \n> \u0e40\u0e1b\u0e47\u0e19\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data) \u0e17\u0e31\u0e49\u0e07 2 Dataset (train,test) \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23 Cleaning Data \u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 pd.head","0087509f":"### **5.Submission Data**\n**\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22**\n> \u0e40\u0e21\u0e37\u0e48\u0e2d fit \u0e40\u0e02\u0e49\u0e32\u0e01\u0e31\u0e1a train_vector \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33\u0e01\u0e32\u0e23 predict \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data) \u0e01\u0e31\u0e1a test_vector \u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e25\u0e07\u0e43\u0e19\u0e15\u0e32\u0e23\u0e32\u0e07 sub_df \u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e21\u0e4c target \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e2d\u0e31\u0e1e\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e02\u0e49\u0e32\u0e44\u0e1f\u0e25\u0e4c sample_submission.csv \u0e17\u0e33\u0e01\u0e32\u0e23 submit \u0e1c\u0e25\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e43\u0e19 kaggle \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e17\u0e33\u0e19\u0e32\u0e22 (\u0e43\u0e0a\u0e48=1 ,\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 =0) ","55c15d45":"> \u0e19\u0e33\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c fit \u0e40\u0e02\u0e49\u0e32\u0e01\u0e31\u0e1a train_vector \u0e41\u0e25\u0e30 column target \u0e02\u0e2d\u0e07 train","5e72cb32":"> \u0e15\u0e31\u0e14\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01 Dataset \u0e42\u0e14\u0e22\u0e15\u0e31\u0e14\u0e2a\u0e31\u0e0d\u0e25\u0e31\u0e01\u0e29\u0e13\u0e4c\u0e41\u0e1b\u0e25\u0e01\u0e46 \u0e40\u0e0a\u0e48\u0e19 (.*?\\) \u0e41\u0e25\u0e30\u0e19\u0e33 code \u0e17\u0e35\u0e48\u0e21\u0e32\u0e14\u0e31\u0e07\u0e01\u0e25\u0e48\u0e32\u0e27\u0e21\u0e32\u0e43\u0e0a\u0e49\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49 Function clean_preprocessor ","1aead547":"### **3.ANALYZING**\n\n**\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e44\u0e1b**\n> \u0e17\u0e33\u0e01\u0e32\u0e23 Import CountVectorizer,TfidVectorizer \u0e42\u0e14\u0e22\u0e08\u0e36\u0e07\u0e40\u0e25\u0e37\u0e2d\u0e01 CountVectorizer \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e07\u0e48\u0e32\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33 Feature extraction \u0e42\u0e14\u0e22\u0e41\u0e1b\u0e25\u0e07\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e41\u0e25\u0e49\u0e27\u0e43\u0e2a\u0e48\u0e25\u0e07\u0e43\u0e19 vector \u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e19\u0e31\u0e1a\u0e02\u0e2d\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e2d\u0e22\u0e39\u0e48\u0e1a\u0e19\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2a\u0e48\u0e25\u0e07\u0e44\u0e1b\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e40\u0e27\u0e01\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e08\u0e30\u0e41\u0e22\u0e01\u0e15\u0e32\u0e21\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e02\u0e2d\u0e07\u0e04\u0e33 \u0e0b\u0e36\u0e48\u0e07\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e19\u0e35\u0e49\u0e22\u0e31\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e2a\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e33\u0e17\u0e35\u0e48\u0e19\u0e31\u0e1a\u0e44\u0e14\u0e49\u0e25\u0e07\u0e44\u0e1b\u0e43\u0e19\u0e40\u0e27\u0e01\u0e40\u0e15\u0e2d\u0e23\u0e4c\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07 \u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e16\u0e48\u0e27\u0e07\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e42\u0e14\u0e22\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e33\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e1a\u0e19\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e43\u0e2a\u0e48\u0e25\u0e07\u0e44\u0e1b\u0e43\u0e19\u0e40\u0e27\u0e01\u0e40\u0e15\u0e2d\u0e23\u0e4c\n\n> * token_pattern : \u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07 token \u0e17\u0e35\u0e48\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\n> * ngram_range : \u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e33\u0e17\u0e35\u0e48\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19 n \u0e04\u0e33 \u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e2d\u0e07\u0e0a\u0e38\u0e14\u0e04\u0e33\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e19\n> * stop_words : \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e43\u0e19\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e04\u0e33\u0e17\u0e35\u0e48\u0e1e\u0e1a\u0e1a\u0e48\u0e2d\u0e22\u0e43\u0e19\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e41\u0e15\u0e48\u0e44\u0e21\u0e48\u0e2a\u0e37\u0e48\u0e2d\u0e16\u0e36\u0e07\u0e2d\u0e30\u0e44\u0e23 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 stopwords \u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a list \u0e02\u0e2d\u0e07\u0e04\u0e33\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29\u0e17\u0e35\u0e48\u0e1e\u0e1a\u0e1a\u0e48\u0e2d\u0e22","49c3e576":" **Reading Dataset** :\n> \u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25(Data) \u0e41\u0e25\u0e30\u0e40\u0e23\u0e35\u0e22\u0e01\u0e14\u0e39\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e31\u0e49\u0e07\u0e04\u0e2d\u0e21\u0e25\u0e31\u0e21\u0e19\u0e4c Train \u0e41\u0e25\u0e30 Test data","8a26cc2e":"### **4.Logistic Regression**\n\n**\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e44\u0e1b**\n> \u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c Logistic Regression \u0e21\u0e32\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e2b\u0e15\u0e38\u0e1c\u0e25\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e43\u0e0a\u0e49 Logistic Regression \u0e19\u0e31\u0e48\u0e19\u0e01\u0e47\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32\u0e04\u0e48\u0e32\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e15\u0e32\u0e21 (Target) \u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e1a\u0e1a\u0e17\u0e27\u0e34 (Binary) \u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e47\u0e04\u0e37\u0e2d\u0e21\u0e35\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 2 \u0e04\u0e48\u0e32 \u0e0b\u0e36\u0e48\u0e07\u0e01\u0e47\u0e04\u0e37\u0e2d\u0e04\u0e48\u0e32 0 \u0e41\u0e25\u0e30 1 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e43\u0e0a\u0e49 Logistic Regression \u0e41\u0e25\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e02\u0e2d\u0e07\u0e42\u0e21\u0e40\u0e14\u0e25\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 cross_val_score \u0e04\u0e37\u0e2d \u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2d\u0e2d\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 StratifiedKFold \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\n\n> \u0e40\u0e25\u0e37\u0e2d\u0e01\u0e43\u0e0a\u0e49 Logistic Regression \u0e43\u0e19\u0e01\u0e32\u0e23 predict probability \u0e42\u0e14\u0e22\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32 parameter C \u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a 0.9 \u0e41\u0e25\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e43\u0e19\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 clf \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e08\u0e36\u0e07\u0e04\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e32\u0e04\u0e48\u0e32 error \u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e23\u0e2d\u0e1a\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e19","dbb8406c":"* **\u0e2a\u0e23\u0e49\u0e32\u0e07 Function** :\n> \u0e17\u0e33\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Function change_text \u0e41\u0e25\u0e30\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e30\u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e33\u0e1a\u0e32\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e22\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e33\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e40\u0e15\u0e47\u0e21 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 Regular Expression(re.sub() \u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e04\u0e33) \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07 Function \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33\u0e01\u0e32\u0e23 apply \u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 train \u0e41\u0e25\u0e30 test \u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a Dataset \u0e19\u0e31\u0e49\u0e19 \u0e43\u0e0a\u0e49 lambda \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33 Function","8a9f5f72":"**\u0e43\u0e0a\u0e49 pd.count() \u0e43\u0e19\u0e01\u0e32\u0e23\u0e14\u0e39\u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 Attribute \u0e40\u0e0a\u0e48\u0e19**:\n\n1.  train.csv \u0e21\u0e35 Instances (\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e08\u0e32\u0e01 Twitter) \u0e08\u0e33\u0e19\u0e27\u0e19 7,613 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e30\u0e21\u0e35 Attribute \u0e14\u0e31\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\n\n> *    id : \u0e40\u0e25\u0e02\u0e25\u0e33\u0e14\u0e31\u0e1a id \u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49 \n> *    keyword : \u0e04\u0e33\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e19\u0e32\u0e22\u0e17\u0e35\u0e48\u0e40\u0e08\u0e2d\u0e08\u0e32\u0e01 Tweet\n> *    location : \u0e1e\u0e34\u0e01\u0e31\u0e14\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\n> *    text : \u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e17\u0e35\u0e48\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e17\u0e33\u0e01\u0e32\u0e23\u0e42\u0e1e\u0e2a\u0e15\u0e4c\n> *    target : \u0e1c\u0e25\u0e01\u0e32\u0e23\u0e17\u0e33\u0e19\u0e32\u0e22\u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e20\u0e31\u0e22\u0e1e\u0e34\u0e1a\u0e31\u0e15\u0e34\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 (0 : \u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19, 1 : \u0e40\u0e1b\u0e47\u0e19)\n\n2. test.csv \u0e0b\u0e36\u0e48\u0e07\u0e21\u0e35 Instances (\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e08\u0e32\u0e01 Twitter) \u0e08\u0e33\u0e19\u0e27\u0e19 3,263 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e30\u0e21\u0e35 Attribute \u0e14\u0e31\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\n\n> * id : \u0e40\u0e25\u0e02\u0e25\u0e33\u0e14\u0e31\u0e1a id \u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\n>* keyword : \u0e04\u0e33\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e19\u0e32\u0e22\n>* location : \u0e1e\u0e34\u0e01\u0e31\u0e14\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\n>* text : \u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e17\u0e35\u0e48\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e17\u0e33\u0e01\u0e32\u0e23\u0e42\u0e1e\u0e2a\u0e15\u0e4c\n","09fc4c90":"* **\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e17\u0e33\u0e01\u0e32\u0e23\u0e25\u0e1a Emojis ( Remove Emojis )** :\n> \u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e41\u0e17\u0e19 emoji \u0e40\u0e1b\u0e47\u0e19\u0e23\u0e2b\u0e31\u0e2a\u0e43\u0e19\u0e17\u0e38\u0e01\u0e46\u0e2b\u0e21\u0e27\u0e14\u0e2b\u0e21\u0e39\u0e48 \u0e41\u0e25\u0e30\u0e25\u0e1a\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 library re \u0e42\u0e14\u0e22\u0e19\u0e33 emojis \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32\u0e21\u0e31\u0e19\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19 \u0e0b\u0e36\u0e48\u0e07\u0e43\u0e0a\u0e49 re.compile() \u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21 pattern \u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a emoji \u0e41\u0e25\u0e30 flags \u0e40\u0e01\u0e47\u0e1a\u0e40\u0e02\u0e49\u0e32\u0e43\u0e19\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 emoji_pattern \u0e42\u0e14\u0e22\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e37\u0e48\u0e2d Fumction: remove_emoji \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30 return \u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e17\u0e35\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14 emojis \u0e41\u0e25\u0e30 flags \u0e2d\u0e2d\u0e01"}}