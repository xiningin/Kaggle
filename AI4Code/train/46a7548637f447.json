{"cell_type":{"383abe23":"code","10e8c553":"code","505d36f7":"code","910cdd84":"code","c3a3eb77":"code","edaa289b":"code","5dce2d26":"code","63357219":"code","0c123ae2":"code","93a2ea08":"code","8d49b198":"code","684d4f92":"code","89bbb182":"code","77228386":"code","f1473cc3":"markdown","0c96a203":"markdown","fb7a2cca":"markdown","afe9795b":"markdown","3eba2fe0":"markdown","54c19fcc":"markdown","a6e09d47":"markdown","ef224deb":"markdown","846bb763":"markdown","5441d5f9":"markdown","91ffdbc8":"markdown","6df0048b":"markdown","d2ddeb5b":"markdown","fc6614da":"markdown","bc286952":"markdown","71511e85":"markdown","849ed401":"markdown","d5242cd5":"markdown","bebe711f":"markdown"},"source":{"383abe23":"!pip install icrawler","10e8c553":"# basic libraris\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# icrawler \nfrom icrawler.builtin import GoogleImageCrawler   \n\n# fastai\nfrom fastai import *\nfrom fastai.vision import *\nfrom fastai.imports import *\nfrom fastai.vision.all import *\n\n# widgets\nimport ipywidgets as widgets\n\n# ignore warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","505d36f7":"!mkdir yoda\n!mkdir luke\n!mkdir wookie","910cdd84":"google_crawler = GoogleImageCrawler()\ngoogle_crawler.crawl(keyword='baby yoda', max_num=50)","c3a3eb77":"google_crawler = GoogleImageCrawler()\ngoogle_crawler.crawl(keyword='luke skywalker', max_num=50)","edaa289b":"google_crawler = GoogleImageCrawler()\ngoogle_crawler.crawl(keyword='wookie', max_num=50)","5dce2d26":"path = Path('\/kaggle\/working\/yoda')\ndls = ImageDataLoaders.from_folder(path, valid_pct=0.5, batch_size=10, item_tfms=Resize(224))\ndls.valid.show_batch(max_n=4, nrows=1)","63357219":"# DataBlock is a FastAI API to fully customize very stage of the creating of the DataLoader\ncharacters = DataBlock(\n    blocks=(ImageBlock, CategoryBlock), \n    get_items=get_image_files, \n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(256))\n\n# Creating the dataloader\npath = Path('\/kaggle\/working')\ndls = characters.dataloaders(path)\n\n# checking the images\ndls.valid.show_batch(max_n=18, nrows=3)","0c123ae2":"# instantiating the learner for training using resnet18 and running it for 4 epochs\nlearn = cnn_learner(dls, resnet18, metrics=error_rate)\nlearn.fine_tune(4)","93a2ea08":"uploader = widgets.FileUpload()\nuploader","8d49b198":"def helper():\n    img = PILImage.create(uploader.data[0])\n    img.show()\n    pred,pred_idx,probs = learn.predict(img)\n    lbl_pred = widgets.Label()\n    lbl_pred.value = f'Prediction: {pred}; Probability: {probs[pred_idx]:.04f}'\n    print(lbl_pred)","684d4f92":"helper()","89bbb182":"helper()","77228386":"helper()","f1473cc3":"#### 3.3 Move images <a id=6><\/a>\n*Run the following in console one line at a time*\n<div class=\"alert alert-danger\">\n  cd ..\n<\/div>\n\nNow I'll be moving the images from `\/images` folders to their respective labels and deleting the `\/images` folder.\n*Run the following in console one line at a time*\n<div class=\"alert alert-danger\">\nmv -v yoda\/images\/* yoda<br>\nmv -v luke\/images\/* luke<br>\nmv -v wookie\/images\/* wookie<br>\nrmdir yoda\/images<br>\nrmdir luke\/images<br>\nrmdir wookie\/images<br>\n<\/div>\n\nOnce done, you may check run `pwd` in console to check your current working directory. It must show `\/kaggle\/working`.","0c96a203":"### 5. Model Building <a id=10><\/a>\n\n[back to top](#100)","fb7a2cca":"#### 3.2 Scrape images <a id=5><\/a>\nThe way `icrawler` works is that it creates a folder named `\/images` from wherever the command is run. So right now we are in the `\/kaggle\/working` directory. Now I'll be going to each directory one at a time and run the crawler to download the images in the `\/images` folder. So the structure of the folders will be something like\n- `\/kaggle\/working\/yoda\/images`\n- `\/kaggle\/working\/luke\/images`\n- `\/kaggle\/working\/wookie\/images`\n\nAfter the download, I'll be moving the images from the images folder of each respective label to the label folder itself - so for example from `\/kaggle\/working\/yoda\/images` to `\/kaggle\/working\/yoda` and I'll be deleting all the empty images folder.\n\nIf you would like to reproduce the exact same thing, run the command in console first followed by the command in the notebook and so on in the provided order which is as follows.","afe9795b":"Table of Contents:\n1. [Downloads](#1)\n2. [Packages](#2)\n3. [Pre-model building](#3)\n    - 3.1 [Create folder](#4)\n    - 3.2 [Scrape images](#5)\n    - 3.3 [Move images](#6)\n4. [Data Loaders](#7)\n    - 4.1 [For a single label](#8)\n    - 4.2 [For the model building](#9)\n5. [Model Building](#10)\n    - 5.1 [Training](#11)\n    - 5.2 [Prediction](#12)","3eba2fe0":"### 2. Packages <a id=2><\/a>\n[back to top](#100)","54c19fcc":"### 3. Pre-model building <a id=3><\/a>\n[back to top](#100)","a6e09d47":"*Run the following in console one line at a time*\n<div class=\"alert alert-danger\">\n  cd ..<br>\n  cd wookie\n<\/div>\n\n*After above command, run the following cell*","ef224deb":"Check out my other notebooks here:\n1. https:\/\/www.kaggle.com\/namanmanchanda\/cat-vs-dog-classifier-10-lines-of-code-fast-ai\n2. https:\/\/www.kaggle.com\/namanmanchanda\/titanic-eda\n3. https:\/\/www.kaggle.com\/namanmanchanda\/pima-indian-diabetes-eda-and-prediction","846bb763":"#### 5.2 Prediction <a id=12><\/a>","5441d5f9":"#### 5.1 Training <a id=11><\/a>","91ffdbc8":"#### 4.2 For the model building <a id=9><\/a>","6df0048b":"### 1. Downloads <a id=1><\/a>\n[back to top](#100)\n\nI'm using a python package named `icrawler` for scraping the images.","d2ddeb5b":"#### 4.1 For a single label <a id=8><\/a>","fc6614da":"*Run the following in console one line at a time*\n<div class=\"alert alert-danger\">\n  cd ..<br>\n  cd luke\n<\/div>\n\n*After above command, run the following cell*","bc286952":"<h1><center>Star Wars Classifier<\/center><\/h1> <a id=100><\/a>\n\n\n\n<div class=\"alert alert-warning\">\n<div>\n    <span style=\"color:black\">\nThis notebook consists of building a Star Wars classifier from scratch. The notebook doesn't use any predefined dataset. So, I'll be downloading the dataset on the go by scraping the images from internet. For the sake of keeping it simple, I'll be making a 3 class classifier mainly of Yoda, Luke and Wookie. The model development will be done using fastai. If you like the notebook, consider giving an upvote. \u2705\n    <\/span>\n<\/div>\n<br>\n<center>\n<img src = \"https:\/\/media.giphy.com\/media\/2wGXK84nfEtR1JHe1H\/giphy.gif\" \/>\n<\/center>\n    \n<\/div>","71511e85":"<div class=\"alert alert-warning\">\n<div>\n    <span style=\"color:black\">\n        <center><strong>If you liked the notebook, please drop a upvote. Thank you.\u2705<\/strong><\/center>\n    <\/span>\n<\/div>\n<br>\n<center>\n<img src = \"https:\/\/media4.giphy.com\/media\/dnIsXwv78BC4U\/giphy.gif?cid=ecf05e475908b0cewar0tc5m5saw46hi38rw59v9gcsr2cfw&rid=giphy.gif&ct=g\" \/>\n<\/center>\n    \n<\/div>","849ed401":"#### 3.1 Create folder <a id=4><\/a>\n\nI'm creating three folders in `\/kaggle\/working` to download their respective image in each folder.","d5242cd5":"### 4. Data Loaders <a id=7><\/a>\n\n[back to top](#100)","bebe711f":"*Run the following in console*\n<div class=\"alert alert-danger\">\n  cd yoda\n<\/div>\n\n*After above command, run the following cell*"}}