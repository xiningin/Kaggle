{"cell_type":{"492d80f3":"code","9b982586":"code","206b2232":"code","89cc1346":"code","34dc5617":"code","b36bfcd9":"code","05e79cdf":"code","05f4147e":"code","d77cc65e":"code","be5915f9":"code","0433142f":"code","8e5dc94c":"code","a305c5eb":"code","3e6c17ca":"code","5a4e5e84":"code","37515fea":"code","024acf7b":"code","bfac7b46":"code","a3d4caf3":"code","a0aae137":"code","c22d255d":"code","8716390a":"code","43e579fc":"code","ce1b97ac":"code","7fe43266":"markdown","dd7efc3a":"markdown","3a415352":"markdown","46e44091":"markdown","1d834a37":"markdown","6472c215":"markdown","7a0a5fb8":"markdown","e2df3b27":"markdown","dcff02fa":"markdown","302b897d":"markdown","e3663f58":"markdown","3f74804f":"markdown","3581ae93":"markdown","1a6e1f63":"markdown"},"source":{"492d80f3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # for data visualization purposes\nimport seaborn as sns # for statistical data visualization\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split","9b982586":"df = pd.read_csv('..\/input\/diabetes-pima-india\/diabetes.csv')\ndf.head()","206b2232":"# let's chekc the general info about the dataset.\ndf.info()","89cc1346":"df.isnull().sum()\n","34dc5617":"df.describe()","b36bfcd9":"plt.figure(figsize=(14,10))\nsns.heatmap(df.corr(),annot=True)\nplt.show()","05e79cdf":"sns.pairplot(df,hue='Outcome')","05f4147e":"columns = df.columns\nfor col in columns:\n     print(col, 'contains', len(df[col].unique()),'lables.')","d77cc65e":"x = df.drop(['Outcome'],axis=1)\ny = df['Outcome']\nx.head()","be5915f9":"y.head()","0433142f":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=0)\nx_train.shape,x_test.shape","8e5dc94c":"col = x_train.columns\ncol","a305c5eb":"from sklearn.preprocessing import RobustScaler\nscaler = RobustScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.fit_transform(x_test)","3e6c17ca":"x_train = pd.DataFrame(x_train, columns=[col])\nx_test = pd.DataFrame(x_test,columns=[col])","5a4e5e84":"x_train.head()","37515fea":"x_test.head()","024acf7b":"len(x_train)","bfac7b46":"len(x_test)","a3d4caf3":"from sklearn.naive_bayes import GaussianNB\n\ngnb = GaussianNB()\n\ngnb.fit(x_train,y_train)","a0aae137":"y_pred = gnb.predict(x_test)\ny_pred","c22d255d":"from sklearn.metrics import accuracy_score\nprint('Model accuracy score: {0:0.4f}'. format(accuracy_score(y_test, y_pred)))","8716390a":"y_pred_train = gnb.predict(x_train)\ny_pred_train","43e579fc":"print(\"Training-set accuracy score: {0:0.4f}\".format(accuracy_score(y_train,y_pred_train)))","ce1b97ac":"# print the scores on training and test set\n\nprint('Training set score: {:.4f}'.format(gnb.score(x_train, y_train)))\n\nprint('Test set score: {:.4f}'.format(gnb.score(x_test, y_test)))","7fe43266":"these dataset we will be using to rain our module. 537\n\n","dd7efc3a":"# Predict the results","3a415352":"we will be using 231 record to test our model.","46e44091":"**Data**\n\nWe will use the Pima indian diabetes dataset.  The datasets nine columns: Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age and Outcome. The first eight are features and the last one ( Outcome) is the label. Outcome has two types of labels 0 (Non-Diabetic) and 1 (Diabetic).","1d834a37":"we can see that we have all numeric data. and we don't have any null values.\n\n","6472c215":"**Splitting data into separate training and test set\n**","7a0a5fb8":"Declare feature vector and target variable","e2df3b27":"# Evaluating Model\n# ","dcff02fa":"**Feature Scaling**","302b897d":"checking the corelation between the attributes.","e3663f58":"Compare the train-set and test-set accuracy","3f74804f":"**We now have X_train dataset ready to be fed into the Gaussian Naive Bayes classifier.**","3581ae93":"**Exploratory data analysis\n **","1a6e1f63":"**Number of labels: cardinality**"}}