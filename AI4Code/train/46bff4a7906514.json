{"cell_type":{"f9af3ecc":"code","afd3cf19":"code","3606c166":"code","f0cace05":"code","d52a0003":"code","950889c3":"code","e806ae96":"code","2705556d":"code","1e92d45c":"code","c5264469":"code","e9f17b7a":"code","46b9e8d9":"code","a12afba2":"code","73ad2ed8":"code","49dccaea":"code","7743add5":"code","08e1cf35":"code","cb28d640":"markdown","703812ff":"markdown","30d8ef13":"markdown","0f014daf":"markdown","c4530399":"markdown","c7c11b4a":"markdown","d5b23181":"markdown","1de4adb4":"markdown","9d7f6795":"markdown","c93e1776":"markdown","c53ec437":"markdown"},"source":{"f9af3ecc":"! apt-get update && apt-get install -y openjdk-8-jdk\n! pip install --upgrade konlpy \"tweepy<4\" scikit-learn\n! bash <(curl -s https:\/\/raw.githubusercontent.com\/konlpy\/konlpy\/master\/scripts\/mecab.sh)","afd3cf19":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.set()","3606c166":"df = pd.read_csv('\/kaggle\/input\/jbnu-bigdata-text\/train.csv', encoding='utf-8')\ndf","f0cace05":"# \ud559\uc2b5 \ub370\uc774\ud130 \ub808\uc774\ube14 \ubd84\ud3ec\nsns.countplot(data=df, y=\"Label\")  ","d52a0003":"# \ud559\uc2b5 \ub370\uc774\ud130\uc5d0\uc11c \ubb38\uc7a5 \uae38\uc774 \ubd84\ud3ec\nsents = df['Sent1'].values.tolist() + df['Sent2'].values.tolist()\ncounter = [len(sent) for sent in sents]\nsns.histplot(counter)","950889c3":"from konlpy.tag import Mecab\n\nmecab = Mecab()\n\nmorphs_tokenizer = mecab.morphs\nprint(morphs_tokenizer('\uc57c\uad6c \uaddc\uce59\uc744 \uc798 \ubaa8\ub974\uac70\ub098 \uc57c\uad6c\uc7a5\uc5d0 \ucc98\uc74c \uc628 \uc0ac\ub78c\uc774\ub77c\uba74 \uc6b0\uc120 \uc120\uc218\ub4e4\uc774 \uacbd\uae30\ud558\ub294 \ubaa8\uc2b5\uc744 \uc8fc\uc758\uae4a\uac8c \uc0b4\ud3b4 \ubcf8\ub2e4.'))","e806ae96":"from sklearn.feature_extraction.text import CountVectorizer\n\n# vocabulary = {\"[SEP]\": 0}\n# vectorizer = CountVectorizer(tokenizer=morphs_tokenizer, vocabulary=vocabulary)\n\nvectorizer = CountVectorizer(tokenizer=morphs_tokenizer, max_features=50000)  # 50,000\uac1c vocab\uc744 \uc0ac\uc6a9\nvectorizer.fit(sents)","2705556d":"vectorizer.vocabulary_","1e92d45c":"from sklearn.model_selection import train_test_split\n\ntrain, valid = train_test_split(df, test_size=0.1, random_state=42)","c5264469":"X_train = vectorizer.transform(train['Sent1'].values + ' '+ train['Sent2'].values)\ny_train = train['Label'].values.tolist()","e9f17b7a":"X_valid = vectorizer.transform(valid['Sent1'].values + ' '+ valid['Sent2'].values)\ny_valid = valid['Label'].values.tolist()","46b9e8d9":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)","a12afba2":"from sklearn.metrics import classification_report\n\ny_pred = model.predict(X_valid)\n\nprint(classification_report(y_valid, y_pred))","73ad2ed8":"test_df = pd.read_csv('\/kaggle\/input\/jbnu-bigdata-text\/test.csv', encoding='utf-8')","49dccaea":"X_test = vectorizer.transform(test_df['Sent1'].values + ' '+ test_df['Sent2'].values)","7743add5":"test_df['Label'] = model.predict(X_test)\ntest_df","08e1cf35":"test_df.to_csv('\/kaggle\/working\/submission.csv', index=False, columns=['Id', 'Label'])","cb28d640":"#### \uad6c\ucd95\ud55c vocab \ucd9c\ub825 (\uc77c\ubd80\ubd84)","703812ff":"### \ud55c\uad6d\uc5b4 \ud615\ud0dc\uc18c \ubd84\uc11d\uae30 \uc0ac\uc6a9\n- \uc544\ub798 \ucf54\ub4dc\ub294 Mecab\uc744 \uc774\uc6a9\ud558\uc5ec \ud615\ud0dc\uc18c \ubd84\uc11d\uc744 \uc218\ud589\ud558\ub294 \ucf54\ub4dc\uc785\ub2c8\ub2e4.\n- KoNLPy API\uc5d0 \ub300\ud574\uc11c\ub294 [\ub9c1\ud06c](https:\/\/konlpy-ko.readthedocs.io\/ko\/v0.4.3\/api\/konlpy.tag\/#mecab-class)\ub97c \ucc38\uace0\ud574\uc8fc\uc138\uc694.\n- Mecab \uc678 \ub2e4\ub978 \ud615\ud0dc\uc18c \ubd84\uc11d\uae30\ub4e4\ub3c4 \uc788\uc73c\ub2c8 \ud3b8\ud55c \uac83\uc744 \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.","30d8ef13":"### \ucd5c\uc885\uc801\uc73c\ub85c \uad6c\ucd95\ud55c \ubd84\ub958 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3c9\uac00 \ub370\uc774\ud130\uc5d0 \ub300\ud574 \uc608\uce21\uc744 \uc218\ud589\n- \ud559\uc2b5\ub41c \ubd84\ub958 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec test.csv\uc758 label\uc744 \uc608\uce21","0f014daf":"### \uc8fc\uc5b4\uc9c4 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ud559\uc2b5 \/ \uac80\uc99d \ub370\uc774\ud130 \uc14b\uc73c\ub85c \ubd84\ub9ac","c4530399":"### \ud559\uc2b5\uc744 \uc704\ud574 ","c7c11b4a":"### \ud559\uc2b5 \ub370\uc774\ud130 Visualization (Simple!)","d5b23181":"### \uad6c\ucd95\ud55c \ubd84\ub958 \ubaa8\ub378\ub85c valid \uc14b\uc5d0 \ub300\ud574 \ud3c9\uac00\n- classification_reprot\ub97c \ud65c\uc601\ud558\uc5ec \ud3c9\uac00","1de4adb4":"### Logistic regression\uc744 \uc0ac\uc6a9\ud55c \ubd84\ub958 \ubaa8\ub378 \uad6c\ucd95\n- \uc785\ub825\ub41c \ub450 \ubb38\uc7a5\uc744 \ub354\ud574 \uc608\uce21\ud558\ub294 \ubb38\uc81c\ub85c \ubcc0\ud658\ud558\uc5ec \ud574\uacb0\n- sent1 + \\[SEP\\] + sent2\ub97c \uc785\ub825\uc73c\ub85c feature\ub85c \ubf51\uc740 \ud6c4 label\uc744 \uc608\uce21\ud568\n- SVM, Decision Tree, CNN, RNN, BERT\ub4f1\uc744 \uc790\uc720\ub86d\uac8c \uad6c\ud604\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ud558\uae30 \ubc14\ub78c","9d7f6795":"### Pandas \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud55c \ud559\uc2b5 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","c93e1776":"### Scikit learn\uc744 \ud65c\uc6a9\ud55c Vocabulary \uad6c\ucd95\n- CountVectorizer\ub97c \ud65c\uc6a9\ud558\uc5ec \ube48\ub3c4\uc218 \uc0c1\uc704 50,000\uac1c vocab\uc744 \uad6c\ucd95\n- min_df, max_df \ub4f1 \ub2e4\uc591\ud55c \ud30c\ub77c\ubbf8\ud130\ub4e4\uc774 \uc788\uc73c\ub2c8 API\ub97c \ucc38\uace0\ud558\uc5ec \uad6c\ud604\ud558\uae30 \ubc14\ub78d\ub2c8\ub2e4.","c53ec437":"### \ud55c\uad6d\uc5b4 \ubb38\uc7a5\uc744 \ubd84\uc11d\ud558\uae30 \uc704\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac \uc124\uce58 (KoNLPy & Mecab)\n\n"}}