{"cell_type":{"7358d761":"code","0b41eddf":"code","ebbc7261":"markdown"},"source":{"7358d761":"# Install cord19q project\n!pip install git+https:\/\/github.com\/neuml\/cord19q","0b41eddf":"import csv\nimport os\nimport shutil\n\nimport pandas as pd\n\nfrom cord19q.models import Models\nfrom cord19q.query import Query\n\n# Workaround for mdv terminal width issue\nos.environ[\"COLUMNS\"] = \"80\"\n\ndef uids():\n    # Entry date mapping sha id to date\n    uids = {}\n    \n    # Load in memory date lookup\n    with open(\"..\/input\/cord-19-article-entry-dates\/entry-dates.csv\", mode=\"r\") as csvfile:\n        for row in csv.DictReader(csvfile):\n            uids[row[\"sha\"]] = row[\"cord_uid\"]\n\n    return uids\n\n# Copy vectors locally for predictable performance\nshutil.copy(\"..\/input\/cord19-fasttext-vectors\/cord19-300d.magnitude\", \"\/tmp\")\n\n# Load sha - cord id mapping\nidmap = uids()\n\nsubmission = []\ntopn = 50\n\n# Load model\nembeddings, db = Models.load(\"..\/input\/trec-covid-search-index\/cord19q\")\ncur = db.cursor()\n\nwith open(\"..\/input\/trec-covid-information-retrieval\/topics-rnd3.csv\", mode=\"r\") as csvfile:\n    for topic in csv.DictReader(csvfile):\n        # Run the search\n        results = Query.search(embeddings, cur, topic[\"query\"], topn)\n        \n        # Get results grouped by document\n        documents = Query.documents(results, topn)   \n\n        for uid in documents:\n            # uid is third element, lookup cord_uid from shas:\n            submission.append((topic[\"topic-id\"], idmap[uid]))\n            \ndf = pd.DataFrame(submission, columns=[\"topic-id\", \"cord-id\"])\ndf.to_csv(\"submission.csv\", index=False)","ebbc7261":"# TREC-COVID Submission\n\nThis notebook builds a submission file using the search index build in the [TREC-COVID Search Index](https:\/\/www.kaggle.com\/davidmezzetti\/trec-covid-search-index) notebook.\n\nFor each topic, a query is run against the search index and the Top N search results are saved. Upon completion, a file with the search results per topic are written to an output file named submission.csv"}}