{"cell_type":{"91298e66":"code","96502862":"code","1234a2fd":"code","b4d1cc0a":"code","9232bc4f":"code","e2c21ebb":"code","c5bf675a":"code","47e9f14b":"code","793321dc":"code","9f4f0565":"markdown","71aa965a":"markdown","5523cb20":"markdown","7d35152e":"markdown","9ec0e91b":"markdown","1c5a166a":"markdown","91446297":"markdown"},"source":{"91298e66":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Prediction problem.\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import train_test_split","96502862":"data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","1234a2fd":"data\n\n# We will try predicting the DEATH_EVENT.","b4d1cc0a":"y = data['DEATH_EVENT']\nx = data.drop('DEATH_EVENT', axis=1)","9232bc4f":"scale = MinMaxScaler()\nx = pd.DataFrame(scale.fit_transform(x))\nx","e2c21ebb":"x_train, x_test, y_train, y_test = train_test_split(x,y, train_size=0.7)","c5bf675a":"model_1 = LogisticRegression()\nmodel_1.fit(x_train, y_train)\ny_pred = model_1.predict(x_test)\n\n# To find F-score\nlog_acc = model_1.score(x_test, y_test)\nlog_f1 = f1_score(y_test, y_pred)","47e9f14b":"model_2 = SVC()\nmodel_2.fit(x_train, y_train)\ny_pred = model_2.predict(x_test)\n\nsvm_acc = model_2.score(x_test, y_test)\nsvm_f1 = f1_score(y_test, y_pred)","793321dc":"print(f'Logistic Regression:\\nAccuracy: {log_acc}\\nF1 Score: {log_f1}\\n')\nprint(f'Support Vector Machine:\\nAccuracy: {svm_acc}\\nF1 Score: {svm_f1}\\n')","9f4f0565":"# Target Feature\n","71aa965a":"# Logistic regression","5523cb20":"# Training The Model","7d35152e":"# Support Vector Machine","9ec0e91b":"# scaling the features into unit values","1c5a166a":"# The Prediction","91446297":"# Data\n"}}