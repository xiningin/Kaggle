{"cell_type":{"ddb5b3c8":"code","b8760c5e":"code","86fb9504":"code","17b99ff5":"code","61552085":"code","970b8cdb":"code","8e1578d5":"code","f4a018e5":"code","b5cfdfa4":"code","814d9065":"code","a7f72f8e":"code","5149a24b":"code","656e241b":"code","3d8a6f73":"code","aca6c0dd":"code","ef486a82":"code","dce70a11":"code","ddb269a6":"markdown","5df15802":"markdown","bef2c27a":"markdown","5f3bf3df":"markdown","dc7c45cf":"markdown","569a867b":"markdown","ad1fcf37":"markdown","3944669d":"markdown","f1769932":"markdown","4183f1ec":"markdown","9c7db14b":"markdown","3c3c5e0b":"markdown","3e87f809":"markdown","85005d5e":"markdown","3af6fbce":"markdown","8efebd72":"markdown","588abf52":"markdown","e015933a":"markdown","7662fdf8":"markdown","15e7bafd":"markdown","5a7825f6":"markdown","5c45785c":"markdown","44557ac6":"markdown","8df07394":"markdown","8d43509a":"markdown","ad4f95a8":"markdown","a6f9d4c3":"markdown","cae90d26":"markdown"},"source":{"ddb5b3c8":"#Import Standard Libraries and Packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style='darkgrid')\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n#from plotly.offline import iplot, init_notebook_mode\n#init_notebook_mode()\n\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\")","b8760c5e":"#Read dataset\naviation1 = pd.read_csv(\"..\/input\/aviation-accident-database-synopses\/AviationData.csv\", encoding='ISO-8859-1')","86fb9504":"#View the dataset\naviation1.head()","17b99ff5":"#Drop irrelevant columns\ncolumns = ['Event.Id', 'Investigation.Type','Accident.Number', 'Airport.Code', 'Airport.Name', \n           'Registration.Number', 'Air.Carrier', 'Schedule', 'FAR.Description']\naviation2 = aviation1.drop(columns, axis=1)\naviation2.head()","61552085":"aviation2['City'] = aviation2['Location'].str.split(',').str[0]\naviation2['State'] = aviation2['Location'].str.split(',').str[1]\naviation2['InjurySeverityType'] = aviation2['Injury.Severity'].str.split('(').str[0]","970b8cdb":"aviation3 = aviation2.drop(['Location','Injury.Severity'],axis=1)\nnumeric_columns = aviation3.select_dtypes(include=['float64']).columns\naviation3[numeric_columns] = aviation3[numeric_columns].fillna(0)\naviation = aviation3.fillna(\"UNKNOWN\")\naviation.head()","8e1578d5":"# Count of Accidents as per Countries\naccidents = aviation['Country'].groupby(aviation['Country']).count()\naccidents","f4a018e5":"# Plot Country\nfig = plt.figure(figsize=(20,15))\naccidents_Count = accidents[aviation['Country'].groupby(aviation['Country']).count() > 200]\naccidents_Count_df = pd.DataFrame({'Country':accidents_Count.index,'Count':accidents_Count.values})\nplt.bar(accidents_Count_df['Country'], height = accidents_Count_df['Count'], color='red')\nplt.xticks(rotation=90)\nplt.xlabel(\"Country\", size=15)\nplt.ylabel(\"Count of Accidents\", size=15)\ny=accidents_Count_df['Count']\nfor i,v in enumerate(y):\n    plt.text(x=i, y=v, s=str(v), horizontalalignment='center', size=15)\nplt.title(\"Distribution of Accidents wrt Countries\", size=20)\nplt.show()","b5cfdfa4":"aviation_State = pd.DataFrame(aviation['Total.Fatal.Injuries']+aviation['Total.Serious.Injuries']+aviation['Total.Minor.Injuries'])\naviation_State = aviation_State.rename(columns={0:\"Injuries\/Fatalities\"})\naviation_merged = pd.concat([aviation,aviation_State], axis=1)\naviation_merged.head()","814d9065":"aviation_merged['text'] = aviation_merged['Country'] + '<br>Injuries\/Fatalities ' + (aviation_merged['Injuries\/Fatalities'].astype(str))\ncolors = [\"darkblue\",\"yellow\",\"seagreen\",\"purple\",\"cyan\",\"orange\"]\nlimits = [(0,50),(50,100),(100,150),(150,175),(175,200),(350,400)]\n#scale = 10\naccidentState = []\n\nfig = go.Figure()\n\nfor i in range(len(limits)):\n    lim = limits[i]\n    Injuries_Count = aviation_merged[((aviation_merged['Injuries\/Fatalities'] > lim[0]) & (aviation_merged['Injuries\/Fatalities'] <lim[1]))]\n    fig.add_trace(go.Scattergeo(\n        locationmode = 'country names',\n        lon = Injuries_Count['Longitude'],\n        lat = Injuries_Count['Latitude'],\n        opacity = 0.8,\n        text = Injuries_Count['text'],\n        marker = dict(\n            size = Injuries_Count['Injuries\/Fatalities'],\n            color = colors[i],\n            line_color='rgb(40,40,40)',\n            line_width=0.5,\n            sizemode = 'area'\n        ),\n        name = '{0} - {1}'.format(lim[0],lim[1])))\n    accidentState.append(Injuries_Count)\n\nfig.update_layout(\n        title_text = 'Distribution of Injuries\/Fatalities in the World<br>(Click legend to toggle traces)',\n        showlegend = True,\n        geo = dict(\n            scope = 'world',\n            landcolor = 'rgb(217, 217, 217)',\n        )\n    )\nfig.show()","a7f72f8e":"plt.figure(figsize=(20,15))\naviation_US = aviation[aviation['Country'] == 'United States']\nsns.countplot(x='State', data=aviation_US, order = aviation_US['State'].value_counts().index)\nplt.xticks(rotation=90)\nplt.xlabel(\"States\", size=15)\nplt.ylabel(\"Count of Accidents\", size=15)\nplt.title(\"Distribution of Accidents in the United States\", size=20)\ny=aviation_US['State'].value_counts()\nfor i, v in enumerate(y):\n    plt.text(i,v,str(v), horizontalalignment='center', verticalalignment='bottom', fontsize=12, rotation=90)\nplt.show()","5149a24b":"# Evaluate the Notorious Companies\n\nplt.figure(figsize=(20,15))\naviation['Make'].str.upper().value_counts().sort_values(ascending=False)[:10].plot(kind='bar', color='Green')\nplt.xticks(rotation=90)\nplt.xlabel(\"Make\", size=15)\nplt.ylabel(\"Count of Accidents\", size=15)\nplt.title(\"Top 10 Notorious Companies in the United States\", size=20)\ny=aviation['Make'].str.upper().value_counts().sort_values(ascending=False)[:10]\nfor i, v in enumerate(y):\n    plt.text(i, v, str(v), fontsize=15, style='oblique', horizontalalignment='center')\nplt.show()\n","656e241b":"# Load the example flights dataset and convert to long-form\ndata1 = aviation_merged[aviation_merged['Make'].str.upper().isin([\"CESSNA\",\"PIPER\",\"BEECH\",\"BELL\"])]\ndata2 = data1.replace('Cessna','CESSNA')\ndata3 = data2.replace('Bell','BELL')\ndata4 = data3.replace('Beech','BEECH')\ndata = data4.replace('Piper','PIPER')\ntable1 = pd.pivot_table(data, index=['Model'], columns=['Make'], values='Event.Date', aggfunc=np.count_nonzero, fill_value=0)\ntable2 = table1[(table1.values > 300)]\n\n# Draw a heatmap with the numeric values in each cell\nfig, ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(table2, annot=True, fmt=\"d\", linewidths=.1, ax=ax, linecolor='white', cmap='YlGnBu')\nplt.xlabel(\"Make\", size=15)\nplt.ylabel(\"Model\", size=15)\nplt.title(\"Analysis of Notorious Models of Top 4 Companies involved in accidents\", size=20)\nfig.show()","3d8a6f73":"aviation_merged['Year'] = pd.DatetimeIndex(aviation_merged['Event.Date']).year\naviation_merged['Month'] = pd.DatetimeIndex(aviation_merged['Event.Date']).month_name()\naviation_merged.head()","aca6c0dd":"fig = px.scatter(aviation_merged[(aviation_merged['Injuries\/Fatalities'] > 10) & (aviation_merged['Country'] == 'United States')],\n                 x=\"Year\", y=\"Injuries\/Fatalities\", animation_frame=\"Year\", animation_group=\"State\",\n                 size=\"Injuries\/Fatalities\", color=\"Aircraft.Damage\", hover_name=\"State\",\n                 size_max=100, range_x=[1980,2020], range_y=[0,400],\n                 category_orders ={'Year':[1962,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,\n                                           1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,\n                                           2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,\n                                           2020]})\nfig.show()","ef486a82":"plt.figure(figsize=(20,15))\nsplot = sns.countplot(data=aviation_merged, x=\"Broad.Phase.of.Flight\", hue='Weather.Condition', edgecolor=(0,0,0), linewidth=1, palette='Reds')\nplt.xticks(rotation=90)\nplt.xlabel(\"Broad Phase of Flight\", size=15)\nplt.ylabel(\"Number of Occurrences\", size=15)\nplt.title(\"What was the Phase of Flight when Accident took place?\", size=20)\nfor p in splot.patches:\n    splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., \n    p.get_height()), ha = 'center', va = 'bottom', xytext = (0, 10), textcoords = 'offset points', rotation=90, size=11.5)\nplt.show()","dce70a11":"cplot = sns.catplot(x=\"Engine.Type\", col=\"InjurySeverityType\", kind=\"count\", col_wrap=2,\n            data=aviation_merged[aviation_merged['InjurySeverityType'].isin(['Fatal','Non-Fatal'])], height=4,\n                 legend_out=True, size=8, palette=\"Set3\", edgecolor=(0,0,0))\ncplot.set_xticklabels(rotation=90)\ncplot.fig.suptitle(\"What was the Engine Type of Fatal or Non-Fatal accidents?\", size=20)\ncplot.fig.subplots_adjust(top=.9)\ncplot.set_titles(\"Injury Severity Type is {col_name}\")\ncplot.set(ylim=[0,65000])\nfor ax in cplot.axes.ravel():\n    for p in ax.patches:\n        ax.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2, \n        p.get_height()), ha = 'center', va = 'bottom', xytext = (0, 10), textcoords = 'offset points', rotation=90, size=12)\nplt.show()","ddb269a6":"### **<a id=\"Plot4\">Plot 4: Top 10 Companies which are involved in accidents<\/a>**","5df15802":"#### *As depicted from the plot, there are 7 countries namely Australia, Bahamas, Brazil, Canada, Mexico, United Kingdom and the United States which have count of accidents more than 200. Also, most of the accidents have occurred in the US only with staggering 78,849 count.*","bef2c27a":"### **<a id=\"Plot5\">Plot 5: Analysis of Notorious Models of Top 4 Companies involved in accidents<\/a>**","5f3bf3df":"#### *Column Location contains information about City and State. We'll split this column into two columns. Further, column Injury.Severity contains information about the count of fatalities. We have separate column for that information. So, we'll keep only relevant information in InjurySeverityType field.*","dc7c45cf":"### 3. **<a id=\"Cleanup\">Data Cleanup<\/a>**\n#### **In this notebook, we'll be retaining only the relevant columns for our EDA**","569a867b":"### In this notebook, we are performing exploratory data analysis on Aviations Accidents Dataset.","ad1fcf37":"#### **Count the number of Accidents as per Countries**","3944669d":"#### *As shown in the heatmap, CESSNA is the most notorious company. Its model '152' is involved in 2331 accidents. Models '172' and '172N' are involved in 1579 and 1141 accidents, respectively.*","f1769932":"#### *This plot illustrates that most of the accidents took place when aircraft was either Landing or Taking off. 19,814 accidents took place when the airplace was Landing and the weather conditions were clear for flight. About 15,385 accidents took place during take off with clear weather conditions.*","4183f1ec":"1. [Import Standard Libraries](#Import)  \n2. [Load the dataset into a dataframe](#Data)  \n3. [Data Cleanup](#Cleanup)  \n4. [Exploratory Data Analysis](#EDA)  \n[Plot 1: Distribution of Accidents in different Countries (Count of Accidents > 200)](#Plot1)  \n[Plot 2: Distribution of Injuries or Fatalities in the World](#Plot2)  \n[Plot 3: Distribution of Accidents in the US](#Plot3)  \n[Plot 4: Top 10 companies which are involved in accidents](#Plot4)  \n[Plot 5: Analysis of Notorious Models of Top 4 Companies involved in accidents](#Plot5)  \n[Plot 6: Time Series of Injuries\/Fatalities wrt Aircraft.Damage](#Plot6)  \n[Plot 7: What was the Phase of Flight and Weather Conditions when accident took place?](#Plot7)  \n[Plot 8: What was the Engine Type of Fatal or Non-Fatal accidents?](#Plot8)  \n5. [Observations](#ob)  \n6. [References](#ref)  ","9c7db14b":"### 1. **<a id=\"Import\">Import Standard Libraries<\/a>**","3c3c5e0b":"#### *On diving deep into the distribution of accidents in the different states of US, we have discovered that 'CA' has the highest number of accidents, i.e., 8589 which is followed by 'TX' with 5602 accidents.*","3e87f809":"### **<a id=\"Plot7\">Plot 7: What was the Phase of Flight and Weather Conditions when accident took place?<\/a>**","85005d5e":"#### *Post analysis of above two plots, it can said that most of the Fatal or Non-Fatal accident occurred for Engine Type 'Reciprocating'. For Fatal, count is 13,068 whereas for Non-Fatal, count is around 54,310.*","3af6fbce":"#### *This plot is the animated representation of Injuries or Fatalities with respect to Damages to the aircraft.*","8efebd72":"### **<a id=\"Plot1\">Plot 1: Distribution of Accidents in different Countries (Count of Accidents > 200)<\/a>**","588abf52":"## **<a id=\"ref\">6. References<\/a>**\n- https:\/\/seaborn.pydata.org\/introduction.html\n- https:\/\/plotly.com\/python\/\n- https:\/\/matplotlib.org\/api\/pyplot_api.html\n- https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.html","e015933a":"### 2. **<a id=\"Data\">Load the dataset into a dataframe<\/a>**","7662fdf8":"### From the above analysis, we have discovered that:  \n- Most of the aviation accidents have taken place in the *United States*.  \n- In the United States, California *CA* is leading in the count of aviation accidents.  \n- *CESSNA* and *PIPER* are two topmost notorious companies which manufactured aircrafts that are involved in accidents as per this dataset.  \n- Models *152*, *172*, and *172N* built by *CESSNA* are most involved in disastrous air accidents.  \n- Most of the aviation incidents have taken place during *Takeoff* and *Landing*. Most of the times, weather conditions were favorable for flight. \n- Engine Type of both Fatal and Non-Fatal accidents was *Reciprocating* for most of the accidents. ","15e7bafd":"### **<a id=\"Plot8\">Plot 8: What was the Engine Type of Fatal or Non-Fatal accidents?<\/a>**","5a7825f6":"### **<a id=\"Plot6\">Plot 6: Time Series of Injuries\/Fatalities wrt Aircraft.Damage<\/a>**","5c45785c":"#### *In this plot, we are analysing the top 10 notorious companies which are involved in most of the accidents. 'Cessna' has 26,073 accidents in the bucket whereas 'Piper' and ' Beech' have 14,230 and 5148 accidents, respectively.*","44557ac6":"### **<a id=\"Plot3\">Plot 3: Distribution of Accidents in the US<\/a>**","8df07394":"### 4. **<a id=\"EDA\">Exploratory Data Analysis<\/a>**","8d43509a":"#### *This plot depicts the distribution of Injuries or Fatalities due to aviation accidents in different countries of the world.*","ad4f95a8":"# **Aviation Accidents Exploratory Data Analysis**","a6f9d4c3":"## **<a id=\"ob\">5. Observations<\/a>**","cae90d26":"### **<a id=\"Plot2\">Plot 2: Distribution of Injuries or Fatalities in the World<\/a>**"}}