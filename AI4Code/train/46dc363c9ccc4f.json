{"cell_type":{"c9a51417":"code","89058adc":"code","2f701228":"code","cdb91c07":"code","ad111133":"code","271e3595":"code","d8a94bf9":"code","e5796920":"code","4189ee53":"code","dc221969":"code","ae1b4599":"code","e9e33fc1":"code","96da9c7b":"code","a017fcbb":"code","4181ba49":"code","aae4c84b":"code","a8d40142":"code","8028faf6":"code","ab183e73":"code","1fd7811f":"code","6fb432a5":"code","bbcb96b8":"code","a454a361":"code","0145f6a7":"code","0eb48283":"code","a352da0d":"code","48ecc388":"code","1faf3236":"code","51a0a556":"code","ed44eb59":"code","7a7a4140":"code","cb365351":"code","f2cbebdb":"code","27e3b1a3":"code","68d9bb4d":"code","e3d6921d":"code","3d4e3b3e":"code","a839f93c":"code","324ed477":"markdown","9a283ece":"markdown","23a978d2":"markdown","e8c4ccc9":"markdown","f6df1675":"markdown","211e37b3":"markdown","83066bd0":"markdown","55ff810c":"markdown","7403e6b1":"markdown","ad012ff1":"markdown","1861c86a":"markdown","670a7219":"markdown","864ee5e4":"markdown","7a6c4089":"markdown","de49b69a":"markdown","84f681b0":"markdown","c64a1a6f":"markdown","585f506d":"markdown","4c9ba77e":"markdown","b849ee4b":"markdown"},"source":{"c9a51417":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_columns', None) ","89058adc":"#Loading the dataset\ndf = pd.read_csv('..\/input\/imdb-5000-movie-dataset\/movie_metadata.csv')\ndf.sample(5)","2f701228":"df.columns,df.shape","cdb91c07":"plt.figure(figsize=(8,6))\nsns.heatmap(df.isnull(),cmap='Blues',cbar=False,yticklabels=False)","ad111133":"# Movie with the lowest Imdb rating is Documentary `Justin Bieber: Never Say Never`\ndf_low_imdb=df[df['imdb_score']==1.6]\ndf_low_imdb","271e3595":"# Movie with the highest Imdb rating is Comedy `Towering Inferno`\ndf_max_imdb=df[df['imdb_score']==9.5]\ndf_max_imdb","d8a94bf9":"df.hist(bins=30,figsize=(15,15),color='g')","e5796920":"df['genres_num'] = df.genres.apply(lambda x: len(x.split('|')))","4189ee53":"df.head(2)","dc221969":"df['genres_num'].max()","ae1b4599":"df[df['genres_num']==8]","e9e33fc1":"df['Type_of_genres'] = df.genres.apply(lambda x: x.replace('|',','))\ndf.head(2)","96da9c7b":"df['genres_first'] = df.genres.apply(lambda x: x.split('|')[0] if '|' in x else x)","a017fcbb":"df.head()","4181ba49":"plt.figure(figsize=(14,10))\nsns.boxplot(x='imdb_score',y='genres_first',data=df)","aae4c84b":"correlations = df.corr()\nf,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(correlations, annot=True, cmap=\"YlGnBu\", linewidths=.5)","a8d40142":"df_for_ML = df[['num_critic_for_reviews','duration','director_facebook_likes','num_voted_users','num_user_for_reviews']]","8028faf6":"pd.pivot_table(df,index='genres_first', values='imdb_score').sort_values('imdb_score', ascending = False)\n# There seems some outliers here. As we saw clearly above in our boxplot that Documentary are highest rated on an average. ","ab183e73":"df.title_year.value_counts(dropna=True).sort_index().plot(kind='barh',figsize=(20,20),color='g')","1fd7811f":"df.genres_first.value_counts(dropna=True).sort_index().plot(kind='barh',figsize=(10,10),color='g')","6fb432a5":"df.country.value_counts(dropna=True).sort_index().plot(kind='barh',figsize=(20,20),color='g')","bbcb96b8":"df_for_ML.head(2)","a454a361":"for i in df_for_ML.columns:\n    axis = df.groupby('imdb_score')[[i]].mean().plot(figsize=(10,5),marker='o',color='g')","0145f6a7":"df_for_ML[\"num_critic_for_reviews\"] = df_for_ML[\"num_critic_for_reviews\"].fillna(df[\"num_critic_for_reviews\"].mean())\ndf_for_ML[\"duration\"] = df_for_ML[\"duration\"].fillna(df[\"duration\"].mean())\ndf_for_ML[\"director_facebook_likes\"] = df_for_ML[\"director_facebook_likes\"].fillna(df[\"director_facebook_likes\"].mean())\ndf_for_ML[\"num_user_for_reviews\"] = df_for_ML[\"num_user_for_reviews\"].fillna(df[\"num_user_for_reviews\"].mean())\ndf_for_ML[\"num_voted_users\"] = df_for_ML[\"num_voted_users\"].fillna(df[\"num_voted_users\"].mean())","0eb48283":"sns.heatmap(df_for_ML.isnull(),cmap='Blues',cbar=False,yticklabels=False)","a352da0d":"df_for_ML.info()","48ecc388":"from sklearn.model_selection import train_test_split\nX = df_for_ML\ny = df['imdb_score']\nX.shape,y.shape","1faf3236":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","51a0a556":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\nlm = LinearRegression()\nlm.fit(X_train,y_train)","ed44eb59":"prec_lm=lm.predict(X_test)","7a7a4140":"from sklearn.metrics import mean_squared_error, mean_absolute_error\nprint('The mean squared error using Linear regression is: ',mean_squared_error(y_test,prec_lm))\nprint('The mean absolute error using Linear regression is: ',mean_absolute_error(y_test,prec_lm))","cb365351":"### Using the Xgboost model for predicting the the imdb score.","f2cbebdb":"from xgboost import XGBClassifier\nXgb = XGBClassifier()\nXgb.fit(X_train,y_train)","27e3b1a3":"prec_Xgb=Xgb.predict(X_test)","68d9bb4d":"print('The mean squared error using the Xgboost model is: ',mean_squared_error(y_test,prec_Xgb))\nprint('The mean absolute error using the Xgboost model is: ',mean_absolute_error(y_test,prec_Xgb))","e3d6921d":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()\nrf.fit(X_train,y_train)","3d4e3b3e":"prec_rf=rf.predict(X_test)","a839f93c":"print('The mean squared error using Random Forest model is: ',mean_squared_error(y_test,prec_rf))\nprint('The mean absolute error using Random Forest model is: ',mean_absolute_error(y_test,prec_rf))","324ed477":"### Plotting graphs of all the feautres I selected for my ML model against the imdb score","9a283ece":"### Finding which numerical features have the most influence on Imdb score. \n#### selecting the top 5 features for my predictive model. ","23a978d2":"### Maikng a pivot table to find the average imdb score for different movie genre.","e8c4ccc9":"### filling up all the missing values with the mean of all the values in that particular feature","f6df1675":"### Number of movies as per different genre type.","211e37b3":"### Analysing which movie genre has the best imdb score.\n#### From the graph it's clear that Documentaries are rated highest on Imdb whereas Thriller are least rated","83066bd0":"### Splitting the data for training and testing.","55ff810c":"### The top 5 features that I am selecting for building my predictive model are following: ","7403e6b1":"### Using the linear regression model for predicting the the imdb score.","ad012ff1":"### Importing all the libraries needed","1861c86a":"### Checking for Null values in the dataset","670a7219":"### Creating a new column in the dataframe which shows the number of different genres a movie has. ","864ee5e4":"### Number of movies released every year. ","7a6c4089":"### Using the Random Forest model for predicting the the imdb score.","de49b69a":"### Conclusions:\n\n#### The random forest model has perforemed the best with MSE of '0.935' and MAE of '0.711'\n#### The documentries are on a average highest rated on IMDB.\n#### Number of users that vote for a particular movie influence the Imdb score the most.","84f681b0":"### Creating a new column in the dataframe which replaces '|' in genres column to ',' ","c64a1a6f":"## Analysing the IMDB 5000 Movie Dataset & predicting the imdb score. \n#### In this notebook I have worked on this given dataset and perform the following tasks:\n##### 1. Analysed which movie genre has the highest average IMDB score. \n##### 2. Analysed some other features of the dataset and using the correlations found out the top 5 numerical features that influence the Imdb score.\n##### 3. Used 3 different machine learning algorithms to predict the imdb score based on these 5 numerical features. ","585f506d":"### Creating a histogram of all the features in dataframe. ","4c9ba77e":"### Number of movies as per countries. ","b849ee4b":"### Creating a new column in the dataframe which shows only the first genre type of a movie. This will help to sort the movies on  single genre type."}}