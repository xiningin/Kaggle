{"cell_type":{"405536e8":"code","420b4cf3":"code","c50e02bf":"code","def2c572":"code","4dfa449d":"code","ffe111cf":"code","36aff4fe":"code","ae8dfe1c":"code","2270c8bc":"code","86ef4831":"code","b44c19c5":"code","caa7a284":"code","a6c28434":"code","083d975a":"code","927aae0d":"code","1bd81990":"code","b8ff68fd":"code","5ec52080":"markdown","2b0b516c":"markdown","0411ba04":"markdown","f2110db5":"markdown","e66aca06":"markdown","1358048b":"markdown","3a23c4c8":"markdown","3b607880":"markdown","53efb60b":"markdown","d4f80345":"markdown","faf181e8":"markdown","35bc04c9":"markdown","d7adf25d":"markdown","be54e7aa":"markdown","e3c73ef6":"markdown","1b8f6053":"markdown","fdb3a678":"markdown","a68f5ce2":"markdown","e907e1c5":"markdown","e52249a2":"markdown","3cd10184":"markdown","fd0ab245":"markdown","5a70bce8":"markdown"},"source":{"405536e8":"!pip install toloka-kit==0.1.7\n\nimport datetime\nimport logging\nimport sys\nimport time\n\nimport toloka.client as toloka\nimport toloka.client.project.template_builder as tb\n\nlogging.basicConfig(\n    format='[%(levelname)s] %(name)s: %(message)s',\n    level=logging.INFO,\n    stream=sys.stdout,\n)","420b4cf3":"toloka_client = toloka.TolokaClient(input(\"Enter your token:\"), 'PRODUCTION')  # Or switch to 'SANDBOX'\nprint(toloka_client.get_requester())","c50e02bf":"new_project = toloka.project.Project(\n    assignments_issuing_type=toloka.project.Project.AssignmentsIssuingType.AUTOMATED,\n    public_name='Take a photo of your pet',\n    public_description='If you have a cat or a dog, take a picture of it. If you don\\'t have any such animals, take a random photo.',\n)","def2c572":"# Radio buttons to choose the label type\nradio_group_field = tb.fields.RadioGroupFieldV1(\n    data=tb.data.OutputData(path='label'),\n    label='What is in your photograph?',\n    validation=tb.conditions.RequiredConditionV1(),\n    options=[\n        tb.fields.GroupFieldOption(label='Cat', value='cat'),\n        tb.fields.GroupFieldOption(label='Dog', value='dog'),\n        tb.fields.GroupFieldOption(label='Not a cat nor a dog', value='none'),\n    ]\n)\n\n# Buttons for loading an image or taking a photo\nimage_loader = tb.fields.MediaFileFieldV1(\n    label='Upload a photo of your cat or dog. Read the instructions carefully.',\n    data=tb.data.OutputData(path='image'),\n    validation=tb.conditions.RequiredConditionV1(),\n    accept=tb.fields.MediaFileFieldV1.Accept(photo=True, gallery=True),\n    multiple=False,\n)\n\n# How performers will see the task\nproject_interface = toloka.project.view_spec.TemplateBuilderViewSpec(\n    config=tb.TemplateBuilder(\n        view=tb.view.ListViewV1(items=[image_loader, radio_group_field])\n    ),\n    settings={\n        'showSubmit': True,\n        'showFinish': True,\n        'showTimer': True,\n        'showReward': True,\n        'showTitle': True,\n        'showRoute': True,\n        'showComplain': True,\n        'showMessage': True,\n        'showSubmitExit': True,\n        'showFullscreen': True,\n        'showInstructions': True,\n    },\n)\n","4dfa449d":"input_specification = {'label': toloka.project.field_spec.StringSpec(required=False, hidden=True)}\noutput_specification = {\n    'image': toloka.project.field_spec.FileSpec(),\n    'label': toloka.project.field_spec.StringSpec(allowed_values=['cat', 'dog', 'none'])\n}\n\nnew_project.task_spec = toloka.project.task_spec.TaskSpec(\n        input_spec=input_specification,\n        output_spec=output_specification,\n        view_spec=project_interface,\n)","ffe111cf":"new_project.public_instructions = \"\"\"Take a picture of your pet if it is a cat or a dog and select the appropriate label type.<br><br>\nIf you don't have a cat or a dog, take a photo of anything and select a \"Not a cat nor a dog\" label. There should be exactly one animal in the photo, clearly visible, not cropped. The animal can be photographed from any side and in any position. You can take a picture of a pet in your arms.<br><br>\nIt should be clearly visible what animal is depicted (e.g. do not photograph your pet's back in the dark).\n\"\"\"","36aff4fe":"new_project = toloka_client.create_project(new_project)","ae8dfe1c":"# Create a skill\nskill_name = 'Pet photo'\npet_skill = next(toloka_client.get_skills(name=skill_name), None)\nif pet_skill:\n    print('Skill already exists')\nelse:\n    print('Creating new skill')\n    pet_skill = toloka_client.create_skill(\n        name=skill_name,\n        hidden=True,\n        public_requester_description={'EN': 'The performer took a photo of their pet.'},\n    )","2270c8bc":"# Create a pool\nnew_pool = toloka.pool.Pool(\n    project_id=new_project.id,\n    private_name='Pool 1',\n    may_contain_adult_content=False,\n    will_expire=datetime.datetime.utcnow() + datetime.timedelta(days=365),\n    reward_per_assignment=0.05,\n    auto_accept_solutions=True,\n    assignment_max_duration_seconds=60*10,\n    defaults=toloka.pool.Pool.Defaults(default_overlap_for_new_task_suites=1),\n    filter=(\n        (toloka.filter.Languages.in_('EN')) &\n        (toloka.filter.Skill(pet_skill.id) == None) &\n        (toloka.filter.ClientType == toloka.filter.ClientType.ClientType.TOLOKA_APP)\n    ),\n)","86ef4831":"# Automatically updating skills\nnew_pool.quality_control.add_action(\n    collector=toloka.collectors.AnswerCount(),\n    # If the performer completed at least one task,\n    conditions=[toloka.conditions.AssignmentsAcceptedCount > 0],\n    # It doesn't add to the skill, it sets the new skill to 1\n    action=toloka.actions.SetSkill(skill_id=pet_skill.id, skill_value=1),\n)","b44c19c5":"new_pool = toloka_client.create_pool(new_pool)","caa7a284":"image_count = 5  # How many images you will receive.\nnew_tasks_suite = toloka.task_suite.TaskSuite(\n    pool_id=new_pool.id,\n    tasks=[toloka.task.Task(input_values={'label': 'Cats vs Dogs'})],\n    overlap=image_count,\n)\n\n# Add task suites to the pool\ntoloka_client.create_task_suite(new_tasks_suite)\n\n# Open the pool\nnew_pool = toloka_client.open_pool(new_pool.id)\npool_id = new_pool.id","a6c28434":"# pool_id = 22791482","083d975a":"def wait_pool_for_close(pool_id, minutes_to_wait=1):\n    sleep_time = 60 * minutes_to_wait\n    pool = toloka_client.get_pool(pool_id)\n    while not pool.is_closed():\n        op = toloka_client.get_analytics([toloka.analytics_request.CompletionPercentagePoolAnalytics(subject_id=pool.id)])\n        op = toloka_client.wait_operation(op)\n        percentage = op.details['value'][0]['result']['value']\n        print(\n            f'   {datetime.datetime.now().strftime(\"%H:%M:%S\")}\\t'\n            f'Pool {pool.id} - {percentage}%'\n        )\n        time.sleep(sleep_time)\n        pool = toloka_client.get_pool(pool.id)\n    print('Pool was closed.')\n\nwait_pool_for_close(pool_id)","927aae0d":"results_list = []\n\nfor assignment in toloka_client.get_assignments(pool_id=pool_id, status=toloka.assignment.Assignment.ACCEPTED):\n    for solution in assignment.solutions:\n        results_list.append(solution.output_values)\nprint(len(results_list))","1bd81990":"!pip install ipyplot\nfrom PIL import Image, ImageDraw\nimport ipyplot\n\nresults_iter = iter(results_list)","b8ff68fd":"res = next(results_iter, None)\nif res is not None:\n    with open('tmp_image_file', 'w+b') as out_f:\n        toloka_client.download_attachment(res['image'], out_f)\n        image = Image.open(out_f).convert(\"RGBA\")\n        print(f\"label: '{res['label']}'\")\n        ipyplot.plot_images(\n            [image],\n            max_images=1,\n            img_width=600,\n        )\nelse:\n    print('No more results')","5ec52080":"# How to collect images for a dataset\n\nThe goal for this project is to collect images of dogs and cats for a dataset. This dataset will consist of images of dogs, cats, and empty images.\n\nPerformers will be asked to take a photo of their pet and specify the type of animal.\n\nThe real project like that should be subdivided into subprojects of validation and markup to make sure each photo is correct and contains the object it says it does. This example is simplified and doesn't contain subdivision.","2b0b516c":"Write short and simple instructions.","0411ba04":"Run the cell below multiple times to see different responses.","f2110db5":"### Pool creation","e66aca06":"Create a task pool and set its quality control rules.\n\nThis project will only allow one answer. It can be implemented through a skill:\n\n1. A performer gets the skill after sending a response.\n2. The performers with the skill are not allowed to perform the task.","1358048b":"\u0421reate toloka-client instance. All api calls will go through it. More about OAuth token in our [Learn the basics example](https:\/\/github.com\/Toloka\/toloka-kit\/tree\/main\/examples\/0.getting_started\/0.learn_the_basics) [![Open In Colab](https:\/\/colab.research.google.com\/assets\/colab-badge.svg)](https:\/\/colab.research.google.com\/github\/Toloka\/toloka-kit\/blob\/main\/examples\/0.getting_started\/0.learn_the_basics\/learn_the_basics.ipynb)","3a23c4c8":"Create a project via API request.","3b607880":"Access to tasks is granted for:\n\n1. Toloka Mobile users.\n\n   _Why: A phone is a convenient tool to make photos. A phone also makes it harder to cheat by uploading a random file._\n\n2. English-speaking performers.\n\n   _Why: The task instruction is written in English._","53efb60b":"Download the results.\n\nNote: You should download files' ids, not the files themselves. The files will only be needed right before reviewing.","d4f80345":"Set up the Submitted responses quality control rule. When a persons submit 1 or more tasks, they are assigned the skill created above.","faf181e8":"---\n---\n## Starting a project\n\nNote: Go to the next section to get results for the **already launched project**.","35bc04c9":"---\n---\n## Showing results\n\nConfigure data display.","d7adf25d":"Configure the task interface.\n\nClick [here](https:\/\/yandex.com\/support\/toloka-tb\/index.html) to learn more about Template Builder, an environment for task interface configuration.","be54e7aa":"### Wait for the responses\n\nWait for all the tasks in the pool to be completed.","e3c73ef6":"Create a pool.","1b8f6053":"Set data specification. And set task interface to project.","fdb3a678":"### Create a new project\n\nPrepare the task interface.\n\nThe task interface should:\n- Contain the description of the task.\n- Permit uploading images.\n- Allow to select the type of object depicted in the image.","a68f5ce2":"Prepare the environment and import everything you'll need.","e907e1c5":"### If your work with the notepad was interrupted\n\nIn case you were launching tasks, but then reloaded the notepad:\n\n1. Enter the pool id below and uncomment the cell.\n2. Run all the code cells.\n\nIf you are executing the notepad right now, **skip the next cell**.","e52249a2":"Open the project for preview.\n\nMobile devices will display the task like that:\n\n<table  align=\"center\">\n  <tr><td>\n    <img src=\"https:\/\/github.com\/Toloka\/toloka-kit\/blob\/main\/examples\/1.computer_vision\/image_collection\/img\/performer_interface.png?raw=true\"\n         alt=\"How performers will see your task on mobile\"  height=\"600\">\n  <\/td><\/tr>\n  <tr><td align=\"center\">\n    <b>Figure 1.<\/b> How performers will see your task on mobile\n  <\/td><\/tr>\n<\/table>\n\nNote: In preview mode you won't be able to upload an image and look at the result. This restriction is related to the preview features and doesn't affect performers.","3cd10184":"## Summary\n\nThis project consists of the minimum number of settings that will allow you to collect marked up images for your dataset.\n\nIn real projects you should configure:\n- Non-automatic acceptance to have the time to review the images.\n- Linked project for validation and object's type markup.","fd0ab245":"### Add a task and run the project\nAdd one task.\n\nAdjust the amount of images you want to get by changing the overlap.","5a70bce8":"## Getting responses\n\nWait for performers to complete the tasks, then download the results."}}