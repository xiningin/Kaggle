{"cell_type":{"1ad88482":"code","33dd26f3":"code","0ae3a705":"code","ddfd6e18":"code","5413f493":"code","e88ccf21":"code","96df8e09":"code","48d36058":"code","fcd297b8":"code","f2af3f62":"code","90ffeb54":"code","a8c5b6db":"code","dbc98f81":"code","f2288a31":"code","cfe3ceae":"code","cb402709":"code","fa42cd97":"markdown","cb34e723":"markdown","d1628154":"markdown","906e061b":"markdown","bf9010db":"markdown","2d0ae601":"markdown","9afb6504":"markdown","c1fe5f62":"markdown"},"source":{"1ad88482":"'''import my libraries '''\nimport numpy as np\nimport pandas as pd     \nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import confusion_matrix\nfrom matplotlib import pyplot as plt\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier","33dd26f3":"'''load my data for processing and analysis'''\ndata = pd.read_csv(\"..\/input\/sonar-data\/sonar data.csv\",header=None)\ndata.head() ","0ae3a705":"encoder = LabelEncoder()\ndata[60] = encoder.fit_transform(data[60])\ndata.head()","ddfd6e18":"data.info()  # so we don't have missing values","5413f493":"data.describe()","e88ccf21":"data[60].value_counts()","96df8e09":"conv = data.corr()\nconv","48d36058":"f, ax = plt.subplots(figsize=(12, 10)) \ncmap = sns.diverging_palette(230, 20, as_cmap=True) \nsns.heatmap(conv, annot=None ,cmap=cmap)","fcd297b8":"conv.hist(sharex=False, sharey=False, xlabelsize=1, ylabelsize=1, figsize=(12,12))\nplt.show()","f2af3f62":"df = pd.DataFrame(data)\nc = df.corr().abs()\ns = c.unstack()\ny_corr = s[60]\ndel y_corr[60]\ny_corr\nprint(max(y_corr))","90ffeb54":"data.plot(kind='density', subplots=True, layout=(8,8), sharex=False, legend=False, fontsize=1, figsize=(12,12))\nplt.show()","a8c5b6db":"''' split the data'''\nX = data.drop(60 ,1)\ny = data[60]\nX_train,X_test,y_train,y_test = train_test_split(X ,y ,test_size = 0.1, random_state=1)","dbc98f81":"'''QDA_model'''\nmodel_QDA = QuadraticDiscriminantAnalysis(0.0001)\nmodel_QDA.fit(X_train, y_train)\n        \ny_train_pred = model_QDA.predict(X_train)\ntrain_accurcy = accuracy_score(y_train_pred,y_train)\nprint(train_accurcy)\n   \ny_test_pred = model_QDA.predict(X_test)\ntest_accurcy = accuracy_score(y_test_pred,y_test)\nprint(test_accurcy)\n                                   \ncon = confusion_matrix(y_test,y_test_pred)\nhmap = sns.heatmap(con,annot=True,fmt=\"d\")\nprint(hmap)\n","f2288a31":"'''Logistic_Regression_model'''\nlogistic_model = LogisticRegression(penalty='l2',solver='lbfgs',C=1.0,random_state=1)\nlogistic_model.fit(X_train, y_train)\n        \ny_train_pred = logistic_model.predict(X_train)\ntrain_accurcy = accuracy_score(y_train_pred,y_train)\nprint(train_accurcy)\n\ny_test_pred = logistic_model.predict(X_test)\ntest_accurcy = accuracy_score(y_test_pred,y_test)\nprint(test_accurcy)\n    \ncon = confusion_matrix(y_test,y_test_pred)\nhmap =sns.heatmap(con,annot=True,fmt=\"d\")\nprint(hmap)","cfe3ceae":"''''SVC_model'''\nSVC_model = SVC()\nSVC_model.fit(X_train, y_train)\n\ny_train_pred = SVC_model.predict(X_train)\ntrain_accurcy = accuracy_score(y_train_pred,y_train)\nprint(train_accurcy)\n    \ny_test_pred = SVC_model.predict(X_test)\ntest_accurcy = accuracy_score(y_test_pred,y_test)\nprint(test_accurcy)\n        \ncon = confusion_matrix(y_test,y_test_pred)\nhmap =sns.heatmap(con,annot=True,fmt=\"d\")\nprint(hmap)","cb402709":"'''Random_Forest_model'''\nforest_model = RandomForestClassifier(n_estimators = 50,max_depth=5)\nforest_model.fit(X_train, y_train)\n\ny_train_pred = forest_model.predict(X_train)\ntrain_accurcy = accuracy_score(y_train_pred,y_train)\nprint(train_accurcy)\n\ny_test_pred = forest_model.predict(X_test)\ntest_accurcy = accuracy_score(y_test_pred,y_test)\nprint(test_accurcy)\n    \ncon = confusion_matrix(y_test,y_test_pred)\nhmap =sns.heatmap(con,annot=True,fmt=\"d\")\nprint(hmap)","fa42cd97":"*locking for missing values to clean*","cb34e723":"**Find out Best Machine Learning Algorithm**","d1628154":"*then correlation coefficients between variables*","906e061b":"*correlation coefficients density graph*","bf9010db":"*We have catigorical data on y*","2d0ae601":"*getting max correlation coefficients*","9afb6504":"*split data to tain and test*","c1fe5f62":"*correlation matrix graph is showing correlation coefficients*"}}