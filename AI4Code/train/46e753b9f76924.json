{"cell_type":{"8dd31e72":"code","f7a831b2":"code","cb26f2bb":"code","b5223ea2":"code","bb1f93f6":"code","9acfbc99":"code","fff1066a":"code","54a92fbb":"code","ad24867a":"code","a4abee14":"code","dc34206b":"code","d6bcd6f1":"code","82d8430c":"code","48aae17c":"code","c65808c1":"code","b0995e86":"code","94f0af76":"code","467e4b27":"code","cfffef88":"code","6ff2d7a1":"code","0f2261f5":"code","12141286":"code","68d3b07c":"code","3deae88d":"code","a14ac55f":"code","de6738ae":"code","7c1b2ab7":"code","35017b27":"code","a9b07dde":"markdown","f5b7d168":"markdown"},"source":{"8dd31e72":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json\n\n# Input data files are available in the \"..\/input\/\" directory.\n#####################################################################################\n#thanks for your work vasuji https:\/\/www.kaggle.com\/vasuji\/i-covid19-nlp-data-parsing\n#####################################################################################\nimport os\n\ndatafiles = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        ifile = os.path.join(dirname, filename)\n        if ifile.split(\".\")[-1] == \"json\":\n            datafiles.append(ifile)","f7a831b2":"with open(datafiles[0], 'r')as f1:\n    sample = json.load(f1)","cb26f2bb":"for key,value in sample.items():\n    print(key)","b5223ea2":"print(sample['metadata'].keys())\nprint('abstract: ',sample['abstract'][0].keys())\nprint('body_text: ',sample['body_text'][0].keys())\nprint('bib_entries: ',sample['bib_entries'].keys())\nprint('ref_entries: ', sample['ref_entries'].keys())\nprint('back_matter: ',sample['back_matter'][0].keys())","bb1f93f6":"id2title = []\nfor file in datafiles:\n    with open(file,'r')as f:\n        doc = json.load(f)\n    id = doc['paper_id'] \n    title = doc['metadata']['title']\n    id2title.append({id:title})","9acfbc99":"id2title[0:5]","fff1066a":"id2abstract = []\nfor file in datafiles:\n    with open(file,'r')as f:\n        doc = json.load(f)\n    id = doc['paper_id'] \n    abstract = ''\n    for item in doc['abstract']:\n        abstract = abstract + item['text']\n        \n    id2abstract.append({id:abstract})","54a92fbb":"id2bodytext = []\nfor file in datafiles:\n    with open(file,'r')as f:\n        doc = json.load(f)\n    id = doc['paper_id'] \n    bodytext = ''\n    for item in doc['body_text']:\n        bodytext = bodytext + item['text']\n        \n    id2bodytext.append({id:bodytext})","ad24867a":"id2abstract[0]","a4abee14":"id2bodytext[0]","dc34206b":"!pip install https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-scispacy\/releases\/v0.2.4\/en_ner_bionlp13cg_md-0.2.4.tar.gz\n!pip install scispacy","d6bcd6f1":"import scispacy\nimport en_ner_bionlp13cg_md\n#A spaCy NER model trained on the BIONLP13CG corpus","82d8430c":"from spacy import displacy\nfrom scispacy.abbreviation import AbbreviationDetector\nfrom scispacy.umls_linking import UmlsEntityLinker","48aae17c":"nlp = en_ner_bionlp13cg_md.load()","c65808c1":"text = id2abstract[0].get(list(id2abstract[0].keys())[0])\n","b0995e86":"doc = nlp(text)\nd_i=displacy.render(doc,jupyter=True,style='ent')\n","94f0af76":"displacy.render(next(doc.sents), style='dep', jupyter=True)\n","467e4b27":"for x in doc.ents:\n    print(x.text,x.label_)","cfffef88":"text1 = id2bodytext[0].get(list(id2bodytext[0].keys())[0])\n","6ff2d7a1":"doc1 = nlp(text1)\nd_i=displacy.render(doc1,jupyter=True,style='ent')\n","0f2261f5":"for x in doc1.ents:\n    print(x.text,x.label_)","12141286":"chemicals = []\nfor i in range (len(id2abstract)):\n    pid = list(id2abstract[i].keys())[0]\n    text = id2abstract[i].get(pid)\n    doc = nlp(text)\n    for en in doc.ents:\n        if en.label_== 'SIMPLE_CHEMICAL':\n            chemicals.append(en)\n","68d3b07c":"chemicals[0:100]","3deae88d":"type(chemicals[0])","a14ac55f":"chem = list(map(str, chemicals)) # => [1,2,3]","de6738ae":"from collections import Counter\nc = Counter(chem) #stuck near getting the frequency of chemicals","7c1b2ab7":"common_chem = c.most_common(10)\ncommon_chem","35017b27":"import matplotlib.pyplot as plt\ncommon_chem = dict(common_chem)\n\n\nplt.bar(range(len(common_chem)), list(common_chem.values()),align='center')\nplt.xticks(range(len(common_chem)), list(common_chem.keys()))\nplt.show()","a9b07dde":"> **We can also visualise dependency parses**","f5b7d168":"scispaCy is a Python package containing spaCy models for processing biomedical, scientific or clinical text."}}