{"cell_type":{"41826a3c":"code","393cfcc7":"code","252bc8c0":"code","abcfe002":"code","2d2423cf":"code","35634dd2":"code","aa49ca85":"code","5bdbc765":"code","d886c572":"code","9562bad1":"code","633dc706":"code","38c60b33":"code","eb91a12f":"code","9697ef29":"code","d01584a6":"markdown","9d30fe82":"markdown","f63f8fb6":"markdown","13619f3b":"markdown","543b0c6d":"markdown","919516fa":"markdown","40fe03d5":"markdown","cc3b5e32":"markdown"},"source":{"41826a3c":"from fastai.vision.all import *","393cfcc7":"import sys\nsys.path.append('..\/input\/timm-pytorch-image-models\/pytorch-image-models-master\/')\nimport timm","252bc8c0":"Path('\/root\/.cache\/torch\/hub\/checkpoints\/').mkdir(exist_ok=True, parents=True)\n!cp '..\/input\/timm-swim\/swin_base_patch4_window7_224_22kto1k.pth' '\/root\/.cache\/torch\/hub\/checkpoints\/swin_base_patch4_window7_224_22kto1k.pth'","abcfe002":"!cp '..\/input\/timmefficientnet\/tf_efficientnet_b0_ns-c0e6a31c.pth' '\/root\/.cache\/torch\/hub\/checkpoints\/\/tf_efficientnet_b0_aa-827b6e33.pth'","2d2423cf":"path = Path('\/kaggle\/input\/petfinder-pawpularity-score\/')\npath.ls()","35634dd2":"df = pd.read_csv(path\/'train.csv')\ndf.head(5)","aa49ca85":"def get_x(r): return path\/'train'\/(r['Id']+'.jpg')\ndef get_y(r): return r['Pawpularity'] \ndb = DataBlock(blocks=(ImageBlock, RegressionBlock), \n               item_tfms=RandomResizedCrop(224, min_scale=0.35), \n               batch_tfms=Normalize,\n               get_x=get_x, get_y=get_y,\n               splitter=TrainTestSplitter(test_size=0.2, random_state=42))","5bdbc765":"dls = db.dataloaders(df)\ndls.show_batch(nrows=2, ncols=3)","d886c572":"from timm import create_model \n","9562bad1":"model = create_model('tf_efficientnet_b0', \n                     pretrained=True, \n                     num_classes=dls.c)","633dc706":"learn = Learner(dls, model,metrics=rmse)\nlearn.model.cuda()\nx, y = dls.train.one_batch()\nactivs = learn.model(x)\nactivs.shape","38c60b33":"res = learn.lr_find(stop_div=False)\nmin_grad_lr, steep_grad_lr = res.lr_min, res.lr_steep","eb91a12f":"learn.fine_tune(6, base_lr=min_grad_lr)\nlearn.export('efficientnet_b0.pkl')","9697ef29":"df_t = pd.read_csv(path\/'test.csv')\nfnames = [path\/'test'\/(x+'.jpg') for x in df_t['Id']]\npred, _ = learn.get_preds(dl=learn.dls.test_dl(fnames, bs=128))\nsub = pd.read_csv(path\/'sample_submission.csv')\nsub['Pawpularity'] = pred.flatten().tolist()\nsub.to_csv('submission.csv', index=False)\nsub","d01584a6":"# Fastai with Efficientnet-Timm ( Training + Inference )\n","9d30fe82":"Now we know good learning rate then let's train the model!  \n","f63f8fb6":"Now we have `DataBlock` that works.  \nLet's get dataloaders from `DataBlock`, then check what their batch have.","13619f3b":"Defining model is done!  \n\nBefore starting training, let's find better learning rate.","543b0c6d":"Dataloaders are done!  \n\n---\n## Training\nNow let's define a model and check if the model can process data to the output.\n\n<!-- maybe setting y_range to -1 ~ +1 does work?? -->","919516fa":"### Defining `DataBlock`\nAs mentioned before, we don't need to define neither datasets nor dataloaders.  \nAll you need to do is just selecting class and function for DataBlock parameters from fastai reference.\n\n- **blocks**  \nAt this competition, we predict numerical value called \"Pawpularity\" from image.  \nThat means you should select `ImageBlock` and `RegressionBlock` for `blocks`  \n- **get_x**  \nImage path is provided in `Id` column of train.csv.  \nYou can give image path to the `DataBlock` by defining function that takes a row from dataframe and returns filepath. \n- **get_y**  \nLabel is provided in `Pawpularity` column of train.csv.  \nYou can give label to the `DataBlock` by defining function like we did for `get_x` parameter.\n- **item_tfms**, **batch_tfms**  \ntfms means transform, you can specify some transform you want to apply.\n- **splitter**  \nHere you can specify how to split train data and valid data.  \n<!-- You can also specify it by giving each indices as tuple. -->","40fe03d5":"### Loading metadata\nThis is baseline so we only care about `Id` column which guild us to the filepath of the input images.","cc3b5e32":"---\n## Inference\nPrediction looks not good for now, but we submit it anyway.  \nTo do that, we give filepath to `learn.dls.test_dl` and let the learner predicts."}}