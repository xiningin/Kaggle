{"cell_type":{"45a362f7":"code","74d2d337":"code","2db7d827":"code","3c1d74c9":"code","0533ef6b":"code","96616a33":"code","2a504048":"code","7bd22357":"code","4540dab4":"code","606f4f63":"code","74d1761f":"code","16e84f5f":"code","2e37724d":"code","e7695850":"code","2b3bb635":"code","0477f9ce":"code","3c0bd9ef":"code","79a21429":"code","db6fc0c6":"code","894e13a0":"code","9ebebd30":"code","912cd592":"code","7e329ce4":"code","008d5aec":"code","5b976526":"code","e1b2f35c":"code","6d0fb7f2":"code","21492aed":"code","2052e5bb":"code","cbef8199":"code","8f01ab1c":"code","5df3ce0f":"code","5ca713c3":"code","48390600":"code","92ba898e":"markdown"},"source":{"45a362f7":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Import Impotant Libraries<\/h1><\/marquee>","74d2d337":"# Importing Libraries\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport pydotplus\nfrom IPython.display import Image\n\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom sklearn.model_selection import train_test_split\nimport sklearn.metrics as sm\nfrom sklearn.datasets import load_iris\n","2db7d827":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Loading the Dataset<\/h1><\/marquee>","3c1d74c9":"iris = load_iris()\ndir(iris)\n","0533ef6b":"iris['target']","96616a33":"iris['target_names']","2a504048":"# Forming the iris dataframe\ndf = pd.DataFrame(iris.data, columns= iris.feature_names)\ndf","7bd22357":"%%html\n<marquee style='width : 80%; br:1sec;'><h1 style='color:green ;'>Exploratory data analysis<br>\nHere we will add the target cols in the df<\/h1><\/marquee>","4540dab4":"# Here I have made a new columns for species\ndf['species']=iris['target']\ndf['species'] = df['species'].apply(lambda x: iris['target_names'][x])\ndf.head(150)","606f4f63":"df.corr()","74d1761f":"df.describe()","16e84f5f":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Comparision Bw the feature<\/h1><\/marquee>","2e37724d":"from warnings import filterwarnings\nfilterwarnings('ignore')\nplt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.scatterplot(df['sepal length (cm)'],df['sepal width (cm)'])\nplt.subplot(2,2,2)\nsns.scatterplot(df['sepal length (cm)'],df['petal length (cm)'])\nplt.subplot(2,2,3)\nsns.scatterplot(df['petal length (cm)'],df['petal width (cm)'])\nplt.subplot(2,2,4)\nsns.scatterplot(df['petal width (cm)'],df['sepal width (cm)'])","e7695850":"sns.pairplot(df)","2b3bb635":"# Scatter plot of data based on Sepal Length and Width features\nsns.FacetGrid(df,hue='species').map(plt.scatter,'sepal length (cm)','sepal width (cm)').add_legend()\nplt.show()\n\n# Scatter plot of data based on Petal Length and Width features\nsns.FacetGrid(df,hue='species').map(plt.scatter,'petal length (cm)','petal width (cm)').add_legend()\nplt.show()","0477f9ce":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Define X & Y<\/h1><\/marquee>","3c0bd9ef":"X = df.drop('species',axis=1)\nY = iris.target","79a21429":"X.head()","db6fc0c6":"Y","894e13a0":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Splitting the data<\/h1><\/marquee>","9ebebd30":"# Splitting the data with the help of train test split\nfrom sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest = train_test_split(X, Y,test_size=0.25,random_state=20)","912cd592":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Decision Tree Model Training<\/h1><\/marquee>","7e329ce4":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\nmodel = dt.fit(xtrain,ytrain)","008d5aec":"pred = model.predict(xtest)\npred","5b976526":"xtest","e1b2f35c":"df = pd.DataFrame({'Actual_value': ytest, 'Predicted_value': pred}) \ndf","6d0fb7f2":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Visualizing the Trained Model<\/h1><\/marquee>","21492aed":"\n!pip install graphviz\n!pip install dtreeviz","2052e5bb":"from dtreeviz.trees import dtreeviz # remember to load the package\n# Importing libraries in Python\nimport sklearn.datasets as datasets\nfrom sklearn import tree\n\niris=datasets.load_iris()\ndot_data = tree.export_graphviz(dt, out_file=None, \n                                feature_names=['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm'],  \n                                class_names=['setosa','versicolor','virginica'],\n                                filled=True)\nimport graphviz\n# Draw graph\ngraph = graphviz.Source(dot_data, format=\"png\") \ngraph","cbef8199":"\na=model.predict([[float(input('Sepal Length: ')), float(input('Sepal Width: ')), float(input('Petal Length: ')), float(input('Petal Width: '))]])\nif a==[0]:\n  print('setosa')\nelif a==[1]:\n  print('versicolor')\nelse:\n  print('verginica')","8f01ab1c":"3.model.predict([[float(input('Petal Length: ')), float(input('Petal Width: ')), float(input('Sepal Length: ')), float(input('Sepal Width: '))]])\n","5df3ce0f":"%%html\n<marquee style='width : 80%;'><h1 style='color:green ;'>Calculating the Model accuracy<\/h1><\/marquee>","5ca713c3":"# Model Accuracy\nprint(\"Accuracy:\",sm.accuracy_score(ytest, pred))","48390600":"model.score(xtest,pred)","92ba898e":"# **Data Science and Business Analytics Intern** \n# **At Sparks Foundation**\n# **Vipul Shukla**\n# **Task 6**\n# **Prediction using Decision Tree Algorithm**\n  \u25cf **Create the Decision Tree classifier and visualize it graphically.**\n  \n  \u25cf **The purpose is if we feed any new data to this classifier, it would be able to predict the right class accordingly**"}}