{"cell_type":{"bb60efde":"code","751c9adf":"code","0c411d06":"code","4e4ca5a1":"code","b2bb7cc9":"code","9c77670e":"code","c552b25e":"code","5e245d27":"code","55a20d69":"code","a1c8d633":"code","5abfe01f":"code","a6c819fc":"code","7d5ac2d2":"code","7b35d6c5":"code","0f9c348a":"code","a6e86e9a":"code","962e3b3c":"code","dbdd161d":"code","1b9d8bce":"code","850861fd":"code","c5db3f8a":"code","760d40b8":"code","f79d8b37":"code","a98338cb":"code","dccbd074":"code","84413f49":"code","3114bd22":"code","994b915e":"code","d99652ca":"code","b4ca93e7":"code","5b754b1a":"code","4c1c3cf1":"code","e497ef97":"code","47d456de":"code","a7495379":"code","bb101de9":"code","8f3e9d7a":"code","c2f86efb":"code","f205ea18":"code","4b4b7186":"code","3f6ff59b":"code","8dccffe5":"code","395cf26f":"code","9b7d7ea7":"code","5fdda6cd":"code","5f03314f":"code","c098eefb":"code","ba1d772d":"code","0ec6d2d9":"code","98caf6db":"markdown"},"source":{"bb60efde":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Check for the VIF values of the feature variables. \nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","751c9adf":"from sklearn.metrics import mean_squared_error,r2_score","0c411d06":"from sklearn.linear_model import LinearRegression","4e4ca5a1":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import train_test_split","b2bb7cc9":"df=pd.read_csv('..\/input\/usa-housingcsv\/USA_Housing.csv')\ndf.head()","9c77670e":"df.describe()","c552b25e":"df.info()\n# No missing values found","5e245d27":"df.shape","55a20d69":"# Need to look for outliers","a1c8d633":"sns.pairplot(df)","5abfe01f":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True)","a6c819fc":"# Price is correlated with all the independant variables as per the pair plot","7d5ac2d2":"plt.figure(figsize=(16,8))\nplt.subplot(2,3,1)\nsns.boxplot(df['Avg. Area Income'])\nplt.subplot(2,3,2)\nsns.boxplot(df['Avg. Area Number of Rooms'])\nplt.subplot(2,3,3)\nsns.boxplot(df['Avg. Area Number of Bedrooms'])\nplt.subplot(2,3,4)\nsns.boxplot(df['Avg. Area House Age'])\nplt.subplot(2,3,5)\nsns.boxplot(df['Area Population'])","7b35d6c5":"#There are outliers in a number of variables, need outlier treatment","0f9c348a":"sns.displot(df['Price'],bins=20)","a6e86e9a":"df.drop('Address',axis=1, inplace=True)","962e3b3c":"X_train,X_test=train_test_split(df,train_size=.7,test_size=.3,random_state=101)","dbdd161d":"cols=list(X_train.columns)\ncols","1b9d8bce":"# Apply scaling\n\nscaler=MinMaxScaler()\nX_train[cols]=scaler.fit_transform(X_train[cols])","850861fd":"X_train","c5db3f8a":"X_train","760d40b8":"y_train=X_train.pop('Price')","f79d8b37":"y_train","a98338cb":"# Using scikit learn regression model\n\nlm=LinearRegression()","dccbd074":"lm.fit(X_train,y_train)","84413f49":"lm.intercept_","3114bd22":"lm.coef_","994b915e":"# Using stasmodel regression\n\nX_train_sm=sm.add_constant(X_train)\nX_train_sm","d99652ca":"sm_lr=sm.OLS(y_train,X_train_sm).fit()\n\nsm_lr.params\n\nprint(sm_lr.summary())","b4ca93e7":"# Same y intercept and coefficient obtained with both the regression models","5b754b1a":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","4c1c3cf1":"#Lets drop the varaible with the highest VIF and P-value\n\nX_train=X_train.drop('Avg. Area Number of Bedrooms',axis=1)\n","e497ef97":"X_train","47d456de":"X_train_sm=sm.add_constant(X_train)\nsm_lr=sm.OLS(y_train,X_train_sm).fit()\n\nsm_lr.params\n\nprint(sm_lr.summary())","a7495379":"# P-values indicate that the varaibles are quite significant","bb101de9":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","8f3e9d7a":"cols","c2f86efb":"X_test[cols]=scaler.transform(X_test[cols])\nX_test","f205ea18":"y_test=X_test.pop('Price')","4b4b7186":"X_test=X_test.drop('Avg. Area Number of Bedrooms',axis=1)","3f6ff59b":"X_test","8dccffe5":"X_train","395cf26f":"X_test_lm=sm.add_constant(X_test)","9b7d7ea7":"y_pred=sm_lr.predict(X_test_lm)","5fdda6cd":"# Plot the residuals\nresiduals=y_pred-y_test\nsns.scatterplot(y_test,y_pred,s=100)\n#Error terms got a constant variance","5f03314f":"sns.distplot(residuals)","c098eefb":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score","ba1d772d":"#Returns the mean squared error; we'll take a square root\nnp.sqrt(mean_squared_error(y_test, y_pred))","0ec6d2d9":"r_squared = r2_score(y_test,y_pred)\nr_squared","98caf6db":"# US Housing Data - Multiple Linear Regression"}}