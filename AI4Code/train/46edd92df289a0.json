{"cell_type":{"d3bf3128":"code","efe06530":"code","9443c410":"code","a8b88c02":"code","0745a688":"code","8c36efbe":"code","0e1b5684":"code","7fa0d9d5":"code","760f36fb":"code","7dd96d4f":"code","a00fd7c8":"code","6bc9a23e":"markdown"},"source":{"d3bf3128":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib\nfrom matplotlib import cm\nimport geopandas as gpd\nimport plotly.express as px\nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)    \nimport folium as flm\nfrom folium import plugins\nimport ipywidgets\nimport geopy\nimport geoplot as gplt\nimport geoplot.crs as gcrs\nimport plotly.graph_objects as go\n\nfrom IPython.display import HTML,display\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","efe06530":"df1 = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\n\n# Delete a single column from the DataFrame\ndf1 = df1.drop(labels=\"Sno\", axis=1)\n\n# delete a range of rows which are all null\ndf1 = df1.drop(labels=range(15086, 15114), axis=0)\n","9443c410":"df1 = df1.replace(\"-\",np.nan)","a8b88c02":"df1_1 = df1[['State\/UnionTerritory','Cured','Deaths','Confirmed']]","0745a688":"fp = r'..\/input\/india-states\/Igismap\/Indian_States.shp'\nmap_df = gpd.read_file(fp)\n","8c36efbe":"merged = map_df.set_index('st_nm').join(df1_1.set_index('State\/UnionTerritory'))\n","0e1b5684":"gplt.choropleth(\n    merged, hue='Confirmed', projection=gcrs.AlbersEqualArea(),\n    edgecolor='black', linewidth=1,\n    cmap='Reds', legend=True\n)","7fa0d9d5":"df3 = pd.read_csv('..\/input\/covid19-in-india\/covid_vaccine_statewise.csv' )\ndf3 = df3.drop(labels = 4588, axis =0)\ndf3 = df3.replace(\"-\",np.nan)\ndf3_1 = df3.drop(labels=[\"AEFI\", \"45-60 years (Age)\", \"60+ years (Age)\"], axis=1)\ndata = df3_1.loc[df3_1['Updated On'] == '18\/05\/2021']\ndf3_3 = data.groupby(['State'])['Male(Individuals Vaccinated)','Female(Individuals Vaccinated)','Transgender(Individuals Vaccinated)','Total Individuals Vaccinated'].sum().reset_index()\ndisplay(df3_3.iloc[13])\n","760f36fb":"y = np.array([76142110, 68107465, 20625])\nmylabels = [\"Male Vaccination\", \"Female Vaccination\", \"Transgender Vaccination\"]\nmyexplode = [0.2, 0, 0]\nfig1, ax1 = plt.subplots(figsize=(15,10))\nax1.pie(y, labels = mylabels,  explode = myexplode, autopct='%1.1f%%')\nax1.legend(title = \"Genderwise Vaccination:\")\nplt.show() ","7dd96d4f":"df3_4 = data.groupby(['State'])['Total Covaxin Administered','Total CoviShield Administered','Total Doses Administered'].sum().reset_index()\ndisplay(df3_4.iloc[13])","a00fd7c8":"df3_4 = df3_4.drop(labels=13, axis=0) # dropping the row with India as a state\ndf3_4","6bc9a23e":"This is a Covid 19 notebook, my first attempt."}}