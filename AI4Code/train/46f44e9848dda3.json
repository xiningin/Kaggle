{"cell_type":{"560947df":"code","2fc65a83":"code","bd1b5bf0":"code","784af0d8":"code","524f9874":"code","7f723470":"code","a6340cdc":"markdown","039f9494":"markdown"},"source":{"560947df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2fc65a83":"%%writefile random_hungry.py\n\nfrom kaggle_environments.envs.hungry_geese.hungry_geese import Observation, Configuration, Action, row_col\nimport random\ndirs = [\"NORTH\",\"SOUTH\",\"EAST\",\"WEST\"]\n\ndef agent(obs,config):\n    observation = Observation(obs)\n    configuration = Configuration(config)\n    player_index = observation.index\n    player_goose = observation.geese[player_index]\n    player_head = player_goose[0]\n    player_row, player_column = row_col(player_head,configuration.columns)\n    \n    foods = observation.food\n    for food in foods:\n        \n        food_row, food_column = row_col(food, configuration.columns)\n        \n        if food_row == player_row+1:\n            return Action.SOUTH.name\n        if food_row + 1 == player_row:\n            return Action.NORTH.name\n        if food_column == player_column + 1:\n            return Action.EAST.name\n        if food_column + 1 == player_column:\n            return Action.WEST.name\n    \n    return random.choice(dirs)","bd1b5bf0":"from kaggle_environments import *","784af0d8":"env = make(\"hungry_geese\", configuration={\"columns\": 11, \"rows\": 7, \"hunger_rate\": 40, \"min_food\": 2 }, debug=True)","524f9874":"\noutput = env.run(['random_hungry.py', 'random_hungry.py'])","7f723470":"env.render(mode=\"ipython\", width=800, height=600)","a6340cdc":"Before we get into more complicated models, let's go with one simple model:\n* If there's food adjacent, go to it\n* Otherwise, choose randomly from available directions","039f9494":"# Agent Comparison"}}