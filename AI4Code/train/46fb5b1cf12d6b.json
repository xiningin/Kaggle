{"cell_type":{"9399f1fb":"code","bca78563":"code","beb8735f":"code","978ab8a7":"code","e5565e8d":"code","f56be33e":"code","2bdcdeeb":"code","d11f548b":"code","b5e0af46":"code","7f43fb1b":"code","e9838cd2":"code","cbeb49ec":"code","8c980019":"code","274d392c":"markdown","4927eeb3":"markdown","5d697957":"markdown","33a19759":"markdown"},"source":{"9399f1fb":"import numpy as np # linear algebra\nfrom scipy.stats.stats import pearsonr\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm import tqdm_notebook as tqdm\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nsns.set()\nimport os\nimport re","bca78563":"def load_dir_csv(directory, csv_files=None):\n    if csv_files is None:\n        csv_files = sorted( [ f for f in os.listdir(directory) if f.endswith(\".csv\") ])    \n    csv_vars  = [ filename[:-4] for filename in csv_files ]\n    gdict = globals()\n    for filename, var in zip( csv_files, csv_vars ):\n        print(f\"{var:32s} = pd.read_csv({directory}\/{filename})\")\n        gdict[var] = pd.read_csv( f\"{directory}\/{filename}\" )\n        print(f\"{'nb of cols ':32s} = \" + str(len(gdict[var])))\n        display(gdict[var].head())\n\nload_dir_csv(\"..\/input\/\", \n             [\"train.csv\", \"structures.csv\", \"mulliken_charges.csv\"])\n","beb8735f":"!conda install -y -c openbabel openbabel \nimport openbabel as ob","978ab8a7":"obConversion = ob.OBConversion()\nobConversion.SetInFormat(\"xyz\")\n\nstructdir='..\/input\/structures\/'\nmols=[]\nmols_files=os.listdir(structdir)\nmols_index=dict(map(reversed,enumerate(mols_files)))\nfor f in mols_index.keys():\n    mol = ob.OBMol()\n    obConversion.ReadFile(mol, structdir+f) \n    mols.append(mol)","e5565e8d":"obConversion.SetOutFormat(\"smiles\")","f56be33e":"smiles = []\nmolecule_names = []","2bdcdeeb":"%%time\nfor mol_ in mols:\n    smiles.append(re.split(r'\\t+', obConversion.WriteString(mol_))[0])\n    molecule_names.append(re.split(r'\\t+', obConversion.WriteString(mol_))[1])","d11f548b":"molecule_name_clean = []","b5e0af46":"for molecule_name in molecule_names: \n    molecule_name_clean.append(re.findall(r\"[\\w']+\", molecule_name)[-2])","7f43fb1b":"df_smiles = pd.DataFrame({'molecule_name': molecule_name_clean, 'smiles': smiles})","e9838cd2":"df_smiles.head()","cbeb49ec":"df_smiles.shape","8c980019":"len(structures['molecule_name'].unique())","274d392c":"## convert to smiles","4927eeb3":"Load CSV data","5d697957":"# Load Data","33a19759":"# Install OpenBabel\n\nThe installation method was  demonstrated in: [Molecule with OpenBabel](https:\/\/www.kaggle.com\/jmtest\/molecule-with-openbabel)"}}