{"cell_type":{"50bc6c04":"code","ed3f3bcb":"code","32a6c8d8":"code","5019d5eb":"code","6d07196e":"code","3309e587":"code","fbfd648e":"code","9d0afbce":"code","c9361605":"code","0b89267f":"code","4b94a0be":"code","a959946e":"code","abeec677":"code","19dfc7e7":"code","8b2ff7ef":"code","c86bae63":"code","22a8169c":"code","c7d90208":"code","610238b9":"code","511a3c01":"code","1e84e0af":"code","debc6be9":"code","74ff337a":"code","6987c9a9":"code","0369d21a":"code","f88552ae":"code","72fdf16b":"code","d03c1244":"code","abc81caa":"code","9f5ed59f":"code","c995f2ae":"code","99740833":"code","3c6aba0c":"code","64a5d5af":"code","ead80478":"markdown","c766d2aa":"markdown","311fef80":"markdown","ea69ea0f":"markdown","55900a7b":"markdown","09d1d09d":"markdown","da989fdf":"markdown"},"source":{"50bc6c04":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ed3f3bcb":"data = pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv',encoding='ISO-8859-1')","32a6c8d8":"print(data.info())","5019d5eb":"data.columns","6d07196e":"data.head()","3309e587":"\ndata.shape","fbfd648e":"print(data.country_txt.value_counts(dropna=False))\n","9d0afbce":"print(data.alternative.value_counts(dropna=False)) #approxdate,resolution,location,alternative,alternative_txt,attacktype2,attacktype2_txt,attacktype3,attacktype3_txt\n#weapsubtype4, weapsubtype4_txt,nkillus,nkillter,propextent\n#summary is an explanation of that event..","c9361605":"data1 = data['approxdate']\n\ndata1.dropna(inplace=True)\ndata1.head()\nlen(data1)\nassert data1.notnull().all()","0b89267f":"print(data.attacktype1_txt.value_counts(dropna=False))","4b94a0be":"data.info()","a959946e":"data1 = data.head()\ndata2 = data.tail()\n\nconc_data_row = pd.concat([data1,data2],axis=0,ignore_index=True)\nprint(data1.shape,data2.shape,conc_data_row.shape)","abeec677":"data3 = data['country_txt'].head()\ndata4 = data['region_txt'].head()\n\nconc_data_col = pd.concat([data3,data4],axis=1,ignore_index=True)\nprint(data3,data4,conc_data_col)","19dfc7e7":"data.corr()","8b2ff7ef":"import seaborn as sns\nimport matplotlib.pyplot as plt","c86bae63":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n","22a8169c":"data.describe()","c7d90208":"print(data.country_txt.unique())\nprint(data.attacktype1_txt.unique())","610238b9":"turkey = data[data.country_txt==\"Turkey\"]\nturkeyAssassination = turkey[turkey.attacktype1_txt==\"Assassination\"]\nargentina = data[data.country_txt==\"Argentina\"]\nmexico = data[data.country_txt==\"Mexico\"]\nusa = data[data.country_txt==\"United States\"]\nrussia = data[data.country_txt==\"Russia\"]\n","511a3c01":"\ndatatargtype1 =turkey.loc[:,[\"targtype1\",\"specificity\",\"latitude\",\"longitude\"]]\ndatatargtype1.plot()","1e84e0af":"datatargtype1.plot(subplots = True)\nplt.show()","debc6be9":"#scatter plot\ndatatargtype1.plot(kind=\"scatter\",x=\"latitude\",y=\"longitude\")\nplt.show()","74ff337a":"istanbul = turkey[turkey.city==\"Istanbul\"]\nankara = turkey[turkey.city==\"Ankara\"]\nizmir = turkey[turkey.city==\"Izmir\"]","6987c9a9":"istanbul.plot(kind=\"scatter\",x=\"latitude\",y=\"longitude\",color=\"red\")\nizmir.plot(kind=\"scatter\",x=\"latitude\",y=\"longitude\",color=\"blue\")\nankara.plot(kind=\"scatter\",x=\"latitude\",y=\"longitude\",color=\"green\")\nplt.show()","0369d21a":"fig , axes = plt.subplots(nrows=2,ncols=1)\nistanbul.plot(kind=\"hist\",y=\"longitude\",bins=50,range=(0,250),normed=True,ax=axes[0])\nistanbul.plot(kind=\"hist\",y=\"longitude\",bins=50,range=(0,250),normed=True,ax=axes[1],cumulative=True)\nplt.savefig('graph1.png')\nplt","f88552ae":"print(turkey.city.unique())","72fdf16b":"plt.plot(data.eventid,data.country_txt,color=\"red\",label=\"Country based event\")\nplt.show()\n\n","d03c1244":"turkey.boxplot(column='iyear',by = 'attacktype1')\nistanbul.boxplot(column='iyear',by = 'attacktype1_txt')\nplt.show()","abc81caa":"turkey.plot(\"iyear\",\"targsubtype1\")\nrussia.plot(\"iyear\",\"targsubtype1\")\nplt.show()","9f5ed59f":"two_cloumns = data.loc[:,[\"iyear\",\"attacktype1_txt\"]]\ntwo_cloumns.columns","c995f2ae":"plt.plot(two_cloumns.iyear,two_cloumns.attacktype1_txt,color=\"blue\",label=\"yearly event\")\nplt.legend()\nplt.show()","99740833":"melt_fonksiyonu = data.loc[:,[\"country_txt\",\"attacktype1_txt\",\"attacktype1\"]]\nmelt_fonksiyonu.shape","3c6aba0c":"print(data.attacktype1_txt.unique())","64a5d5af":"melted =pd.melt(frame = melt_fonksiyonu,id_vars='country_txt',value_vars=['Assassination','Bombing\/Explosion'])\nmelted","ead80478":"Below, you can find horizontal concatenating.","c766d2aa":"We can create new dataset to add to dataset each other. Below, you can find vertical concatenating of two datasets.","311fef80":"Let's look at data.info..","ea69ea0f":"Let's check correlation columns","55900a7b":"Firstly, we have to import that data :","09d1d09d":"There are one hundred thirty five columns..","da989fdf":"Most criminal countries: "}}