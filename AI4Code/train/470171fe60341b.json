{"cell_type":{"b1fb74f2":"code","ae92ab00":"code","5521b5eb":"code","82c704f3":"code","f044c23e":"code","412ed7b5":"code","1a930c41":"code","6d0d3860":"code","76e18d81":"code","e49bd560":"code","fb68f92b":"code","942c8da0":"code","9978582e":"code","57c7528f":"code","7a94fbb2":"code","7b15a57e":"code","e144844d":"code","fcfaa52a":"code","6744ec0b":"code","1cfcb1f2":"markdown"},"source":{"b1fb74f2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport os\n\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n\nfrom tensorflow.keras.applications import DenseNet121\nfrom sklearn.preprocessing import LabelBinarizer\nfrom tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Dropout,MaxPooling2D , Conv2D,Flatten\nfrom tensorflow.keras.models import Sequential\n\nfrom sklearn.metrics import roc_curve, auc, roc_auc_score\nfrom sklearn.metrics import classification_report\n\n\nfrom IPython.display import clear_output\nimport warnings\nwarnings.filterwarnings('ignore')","ae92ab00":"train_dir = \"..\/input\/ucf-crime-dataset\/Train\"\ntest_dir = \"..\/input\/ucf-crime-dataset\/Test\"\n\nSEED = 12\nIMG_HEIGHT = 64\nIMG_WIDTH = 64\nBATCH_SIZE = 64\nEPOCHS = 1\nLR =  0.00003","5521b5eb":"crime_types=os.listdir(train_dir)\nn=len(crime_types)\nprint(\"Number of crime categories : \",n)","82c704f3":"crimes={}\ntrain=test=0\nfor clss in crime_types:\n    num=len(os.listdir(os.path.join(train_dir,clss)))\n    train+=num\n    test+=len(os.listdir(os.path.join(test_dir,clss)))\n    \n    crimes[clss]=num","f044c23e":"plt.figure(figsize=(15, 10))\nplt.pie(x=np.array([train,test]), autopct=\"%.1f%%\", explode=[0.1, 0.1], labels=[\"Training Data\", \"Test Data\"], pctdistance=0.5)\nplt.title(\"Share of train and test images \", fontsize=14);","412ed7b5":"plt.figure(figsize=(15,5))\nplt.bar(list(crimes.keys()), list(crimes.values()), width=0.4,align=\"center\" )\nplt.xticks(rotation=90)\n\nplt.xlabel(\"Types of Reported Crimes\")\nplt.ylabel(\"Number of Reported Crimes\")\nplt.show()","1a930c41":"plt.figure(figsize=(15,10))\nplt.pie(x=np.array(list(crimes.values())), autopct=\"%.1f%%\", explode=[0.1]*n,labels=list(crimes.keys()), pctdistance=0.5)\nplt.title(\"Share of train and test images \", fontsize=14);","6d0d3860":"IMG_WIDTH=64\nIMG_HEIGHT=64\n\nIMG_SHAPE=(IMG_HEIGHT,IMG_WIDTH)\nseed=69\n\nINPUT_SHAPE=(IMG_HEIGHT,IMG_WIDTH,3)","76e18d81":"train_set=image_dataset_from_directory(\n    train_dir,\n    label_mode=\"categorical\",\n    batch_size=BATCH_SIZE,\n    image_size=IMG_SHAPE,\n    shuffle=True,\n    seed=seed,\n    validation_split=0.2,\n    subset=\"training\",\n)\n\nval_set=image_dataset_from_directory(\n    train_dir,\n    label_mode=\"categorical\",\n    batch_size=BATCH_SIZE,\n    image_size=IMG_SHAPE,\n    shuffle=True,\n    seed=seed,\n    validation_split=0.2,\n    subset=\"validation\",\n)\n\ntest_set=image_dataset_from_directory(\n    test_dir,\n    label_mode=\"categorical\",\n    class_names=None,\n    batch_size=BATCH_SIZE,\n    image_size=IMG_SHAPE,\n    shuffle=False,\n    seed=seed,\n)","e49bd560":"def transfer_learning():\n    base_model=DenseNet121(include_top=False,input_shape=INPUT_SHAPE,weights=\"imagenet\")\n    \n    thr=149\n    for layers in base_model.layers[:thr]:\n        layers.trainable=False\n    \n    for layers in base_model.layers[thr:]:\n        layers.trainable=True\n    \n    return base_model","fb68f92b":"def create_model():\n    model=Sequential()\n    \n    base_model=transfer_learning()\n    model.add(base_model)\n    \n    model.add(GlobalAveragePooling2D())\n    \n    model.add(Dense(256, activation=\"relu\"))\n    model.add(Dropout(0.2))\n    \n    model.add(Dense(512, activation=\"relu\"))\n    model.add(Dropout(0.2))\n    \n    model.add(Dense(1024, activation=\"relu\"))\n    \n    model.add(Dense(n,activation=\"softmax\",name=\"classification\"))\n    \n    model.summary()\n    \n    return model\n    ","942c8da0":"model=create_model()\n\nmodel.compile(optimizer=\"adam\", \n                loss='categorical_crossentropy',\n                metrics = [tf.keras.metrics.AUC()])","9978582e":"history = model.fit(x = train_set,validation_data=val_set,epochs = EPOCHS)","57c7528f":"y_true =  np.array([])\n\nfor x, y in test_set:\n  y_true = np.concatenate([y_true, np.argmax(y.numpy(), axis=-1)])","7a94fbb2":"y_pred=model.predict(test_set)","7b15a57e":"y_pred","e144844d":"y_true","fcfaa52a":"def multiclass_roc_auc_score(y_test, y_pred, average=\"macro\"):\n    lb = LabelBinarizer()\n    lb.fit(y_test)\n    y_test = lb.transform(y_test)\n    for (idx, c_label) in enumerate(crime_types):\n        fpr, tpr, thresholds = roc_curve(y_test[:,idx].astype(int), y_pred[:,idx])\n        c_ax.plot(fpr, tpr,lw=2, label = '%s (AUC:%0.2f)'  % (c_label, auc(fpr, tpr)))\n    c_ax.plot(fpr, fpr, 'black',linestyle='dashed', lw=4, label = 'Random Guessing')\n    return roc_auc_score(y_test, y_pred, average=average)","6744ec0b":"fig, c_ax = plt.subplots(1,1, figsize = (15,8))\n\n\nprint('ROC AUC score:', multiclass_roc_auc_score(y_true , y_pred  , average = \"micro\"))\nplt.xlabel('FALSE POSITIVE RATE', fontsize=18)\nplt.ylabel('TRUE POSITIVE RATE', fontsize=16)\nplt.legend(fontsize = 11.5)\nplt.show()","1cfcb1f2":"Crimes have been catogarized in 14 different types."}}