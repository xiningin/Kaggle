{"cell_type":{"e8819602":"code","01af6ec6":"code","2c65e533":"code","8580e5e0":"code","1dd939c9":"code","cd58829e":"code","3ecd94e0":"code","686fee0b":"code","318d6bda":"code","0bbbc10b":"code","2c296b26":"code","a37df564":"code","0c0a8397":"code","8fa8e230":"code","72ab6ce2":"code","7c2e44b8":"code","a6010875":"code","3428f2ea":"code","6d83e59b":"code","f553e709":"code","11b86b35":"code","1942cd72":"markdown","4b6a0267":"markdown","dfd6b900":"markdown","8266fb5b":"markdown","89e473bb":"markdown","092a5013":"markdown","25253128":"markdown","8c3291b1":"markdown","424c404a":"markdown","8c35e155":"markdown","16fa3fdd":"markdown","d460a9d4":"markdown","8b1d0560":"markdown","ab0dacde":"markdown","833225a5":"markdown","2027b222":"markdown","04fafcde":"markdown"},"source":{"e8819602":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01af6ec6":"import sys\nprint('Python: {}'.format(sys.version))","2c65e533":"import scipy\nprint('scipy: {}'.format(scipy.__version__))","8580e5e0":"import numpy\nprint('numpy: {}'.format(numpy.__version__))","1dd939c9":"import matplotlib\nprint('matplotlib: {}'.format(matplotlib.__version__))","cd58829e":"import pandas\nprint('pandas: {}'.format(pandas.__version__))","3ecd94e0":"import sklearn\nprint('sklearn: {}'.format(sklearn.__version__))","686fee0b":"from pandas import read_csv\nfrom pandas.plotting import scatter_matrix\nfrom matplotlib import pyplot\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC","318d6bda":"dataset = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","0bbbc10b":"print(dataset.shape)","2c296b26":"(dataset.head(10))","a37df564":"(dataset.describe())","0c0a8397":"(dataset.groupby('diabetes').size())","8fa8e230":"dataset.plot(kind='box', subplots=True, layout=(2,7), sharex=True, sharey=True)\npyplot.show()","72ab6ce2":"dataset.hist(column=['age','smoking','sex'], sharex=True, sharey=True)\npyplot.show()","7c2e44b8":"features = ['age','sex','time']\nscatter_matrix(dataset[features])\npyplot.show()","a6010875":"array = dataset.values\nX = array[:,0:4]\ny = array[:,4]\nX_train, X_validation, Y_train, Y_validation = train_test_split(X, y, test_size=0.20, random_state=1)","3428f2ea":"# Spot Check Algorithms\nmodels = []\nmodels.append(('LR', LogisticRegression(solver='liblinear', multi_class='ovr')))\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC(gamma='auto')))\n# evaluate each model in turn\nresults = []\nnames = []\nfor name, model in models:\n\tkfold = StratifiedKFold(n_splits=10, random_state=1, shuffle=True)\n\tcv_results = cross_val_score(model, X_train, Y_train, cv=kfold, scoring='accuracy')\n\tresults.append(cv_results)\n\tnames.append(name)\n\tprint('%s: %f (%f)' % (name, cv_results.mean(), cv_results.std()))","6d83e59b":"# Compare Algorithms\npyplot.boxplot(results, labels=names)\npyplot.title('Algorithm Comparison')\npyplot.show()","f553e709":"model = SVC(gamma='auto')\nmodel.fit(X_train, Y_train)\npredictions = model.predict(X_validation)","11b86b35":"# Evaluate predictions\nprint(accuracy_score(Y_validation, predictions))\nprint(confusion_matrix(Y_validation, predictions))\nprint(classification_report(Y_validation, predictions))","1942cd72":"# Scatter plot matrix","4b6a0267":"# pandas","dfd6b900":"# Histograms","8266fb5b":"# matplotlib","89e473bb":"# Dimensions of Dataset\n\n# shape","092a5013":"# Data Visualization\n\n# box and whisker plots","25253128":"# Create a Validation Dataset\n\n# Split-out validation dataset","8c3291b1":"# numpy","424c404a":"# descriptions","8c35e155":"\n# Load dataset","16fa3fdd":"# head","d460a9d4":"# scipy","8b1d0560":"# class distribution","ab0dacde":"# Make predictions on validation dataset","833225a5":"# scikit-learn","2027b222":"# Load libraries","04fafcde":"\n\n# Check the versions of libraries\n \n# Python version"}}