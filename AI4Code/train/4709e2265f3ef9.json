{"cell_type":{"c6a18388":"code","49c794d2":"code","a2e4a0a2":"code","67ef23fb":"markdown"},"source":{"c6a18388":"def ispalindrome(s:str) -> bool:\n    return s == s[::-1]\ndef allpalindromes(s:str) -> list:\n    result = []\n    \n    while len(s) != 0:\n        if ispalindrome(s):\n            result.append(s)\n            s = ''\n            return result\n        else:\n            i = -1\n            while not ispalindrome(s[:i]):\n                 i -= 1\n            result.append(s[:i])\n            s = s[i:]          \n    ","49c794d2":"s = 'racecarannakayak'\n","a2e4a0a2":"allpalindromes(s), allpalindromes('abc')","67ef23fb":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Google.\n\nGiven a string, split it into as few strings as possible such that each string is a palindrome.\n\nFor example, given the input string racecarannakayak, return [\"racecar\", \"anna\", \"kayak\"].\n\nGiven the input string abc, return [\"a\", \"b\", \"c\"]."}}