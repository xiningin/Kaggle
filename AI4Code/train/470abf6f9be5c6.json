{"cell_type":{"72b8d3c1":"code","0de4856c":"code","92e1cc8b":"code","de709305":"code","ec560bac":"code","718f12b4":"code","88d2b01d":"code","728efe01":"code","54d7b8df":"code","75ad555b":"code","d577bf8d":"code","def380f6":"code","f33aabc7":"code","efbb9a21":"code","7d4f912b":"code","cd2eff9a":"code","adcdeb01":"code","d36d7c3d":"code","2a59905c":"code","03a1f9f8":"code","61b7b30f":"code","509970fb":"code","a28da690":"code","00fa7131":"code","c3a56537":"code","28646258":"code","f1bdcf4f":"code","07beffdc":"code","b1c12682":"code","f7fa5083":"code","794ca6a7":"code","63ec6052":"code","d1eec72f":"code","8b352a65":"code","676f01b2":"code","9e192890":"code","614c4d01":"code","c2d6905e":"code","ba94a09b":"code","027ea190":"code","4707eefe":"code","795223c5":"code","d644e311":"code","2ebdcd7f":"code","d2a111d7":"code","3ea3048c":"code","9fdf1340":"code","0f902a2b":"code","120f54c3":"code","a3e44d12":"code","801406b5":"code","c894b164":"code","31084134":"code","e9c64e82":"code","5dbbea9c":"code","778dc09e":"code","fb2791d8":"code","36a46c61":"code","14f69fb9":"code","f15dda95":"code","dda59661":"code","a7279605":"code","7f1e3785":"code","81bd582e":"code","d529f43f":"code","dcb86663":"code","7faba810":"code","89dd4d2e":"code","9acc7e67":"code","8a2acc38":"code","ec3f4bf0":"code","cc0f8f7f":"code","3d8cad8e":"code","15a29141":"code","f2cb1b9e":"code","c1aabba6":"code","c360fa0f":"code","fdb13ef0":"code","06166b6a":"code","4c44c012":"code","3f16aa6f":"code","cc780bfb":"code","5b08bbaa":"code","8d750bf9":"markdown","dc67923f":"markdown","f8ddf61d":"markdown","c10ef2eb":"markdown","f9e65176":"markdown","9f9dbb07":"markdown","980211bf":"markdown","8e33bfad":"markdown"},"source":{"72b8d3c1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0de4856c":"# Importing the data\n\ndf = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","92e1cc8b":"# Checking the data out \ndf.head()","de709305":"df.columns","ec560bac":"df.Q4.value_counts(normalize=True)*100","718f12b4":"df.Q5.value_counts(normalize=True)*100","88d2b01d":"df.Q3.value_counts(normalize=True)*100","728efe01":"dfi = df[df['Q3'] == 'India']\ndfu = df[df['Q3'] == 'United States of America']\n\ndfi.groupby(['Q5'])['Q5'].count().sort_values(ascending=False).plot(kind='bar')\nplt.title('India');","54d7b8df":"dfu.groupby(['Q5'])['Q5'].count().sort_values(ascending=False).plot(kind='bar')\nplt.title('USA');","75ad555b":"# df['Time from Start to Finish (seconds)'] = df['Time from Start to Finish (seconds)'].astype('int')\n# df.groupby(['Q5'])['Time from Start to Finish (seconds)'].mean().sort_values(ascending=False).plot(kind='bar')","d577bf8d":"# Using different age groups to do the analysis \ndf['Q1'].value_counts()","def380f6":"df1821 = df[df['Q1'] == '18-21']\ndf1821.groupby(['Q4'])['Q4'].count().sort_values(ascending = False).plot(kind = 'bar')","f33aabc7":"df1821.groupby(['Q5'])['Q5'].count().sort_values(ascending = False).plot(kind = 'bar')","efbb9a21":"df1821.groupby(['Q6'])['Q6'].count().sort_values(ascending = False).plot(kind = 'bar')","7d4f912b":"q7_columns = [df1821.Q7_Part_1,df1821.Q7_Part_2,df1821.Q7_Part_3,df1821.Q7_Part_4,\n             df1821.Q7_Part_5,df1821.Q7_Part_6,df1821.Q7_Part_7,df1821.Q7_Part_8,\n             df1821.Q7_Part_9, df1821.Q7_Part_10, df1821.Q7_Part_11, df1821.Q7_Part_12,\n             df1821.Q7_OTHER]\nQ7_data = pd.concat(q7_columns)","cd2eff9a":"plt.figure(figsize=(20,10))\nQ7_count = Q7_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q7_count.index, y=Q7_count.iloc[:,0], data=Q7_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","adcdeb01":"df1821.groupby(['Q8'])['Q8'].count().sort_values(ascending = False).plot(kind = 'bar')","d36d7c3d":"# Checking what kind of IDE this age group likes to use\n\nq9_columns = [df1821.Q9_Part_1,df1821.Q9_Part_2,df1821.Q9_Part_3,df1821.Q9_Part_4,\n             df1821.Q9_Part_5,df1821.Q9_Part_6,df1821.Q9_Part_7,df1821.Q9_Part_8,\n             df1821.Q9_Part_9, df1821.Q9_Part_10, df1821.Q9_Part_11,\n             df1821.Q9_OTHER]\nQ9_data = pd.concat(q9_columns)\n","2a59905c":"plt.figure(figsize=(20,10))\nQ9_count = Q9_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q9_count.index, y=Q9_count.iloc[:,0], data=Q9_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","03a1f9f8":"# Checking what kind of IDE this age group likes to use\n\nQ10_columns = [df1821.Q10_Part_1,df1821.Q10_Part_2,df1821.Q10_Part_3,df1821.Q10_Part_4,\n             df1821.Q10_Part_5,df1821.Q10_Part_6,df1821.Q10_Part_7,df1821.Q10_Part_8,\n             df1821.Q10_Part_9, df1821.Q10_Part_10, df1821.Q10_Part_11,\n             df1821.Q10_OTHER]\nQ10_data = pd.concat(Q10_columns)\n","61b7b30f":"plt.figure(figsize=(20,10))\nQ10_count = Q10_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q10_count.index, y=Q10_count.iloc[:,0], data=Q10_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n","509970fb":"df1821.groupby(['Q11'])['Q11'].count().sort_values(ascending = False).plot(kind = 'bar')","a28da690":"# Checking what kind of IDE this age group likes to use\n\nQ12_columns = [df1821.Q12_Part_1,df1821.Q12_Part_2,df1821.Q12_Part_3,\n             df1821.Q12_OTHER]\nQ12_data = pd.concat(Q12_columns)\n","00fa7131":"plt.figure(figsize=(10,10))\nQ12_count = Q12_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q12_count.index, y=Q12_count.iloc[:,0], data=Q12_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n","c3a56537":"ax = df1821.groupby(['Q13'])['Q13'].count().sort_values(ascending = False).plot(kind = 'bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","28646258":"# Checking what kind of IDE this age group likes to use\n\nQ14_columns = [df1821.Q14_Part_1,df1821.Q14_Part_2,df1821.Q14_Part_3,df1821.Q14_Part_4,\n             df1821.Q14_Part_5,df1821.Q14_Part_6,df1821.Q14_Part_7,df1821.Q14_Part_8,\n             df1821.Q14_Part_9, df1821.Q14_Part_10, df1821.Q14_Part_11,\n             df1821.Q14_OTHER]\nQ14_data = pd.concat(Q14_columns)\n","f1bdcf4f":"plt.figure(figsize=(20,10))\nQ14_count = Q14_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q14_count.index, y=Q14_count.iloc[:,0], data=Q14_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n","07beffdc":"ax = df1821.groupby(['Q15'])['Q15'].count().sort_values(ascending = False).plot(kind = 'bar',title = 'For how many years have you used machine learning methods?')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","b1c12682":"Q16_columns = [df1821.Q16_Part_1,df1821.Q16_Part_2,df1821.Q16_Part_3,df1821.Q16_Part_4,\n             df1821.Q16_Part_5,df1821.Q16_Part_6,df1821.Q16_Part_7,df1821.Q16_Part_8,\n             df1821.Q16_Part_9, df1821.Q16_Part_10, df1821.Q16_Part_11,\n             df1821.Q16_OTHER]\nQ16_data = pd.concat(Q16_columns)\n\n","f7fa5083":"plt.figure(figsize=(20,10))\nQ16_count = Q16_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q16_count.index, y=Q16_count.iloc[:,0], data=Q16_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n","794ca6a7":"Q17_columns = [df1821.Q17_Part_1,df1821.Q17_Part_2,df1821.Q17_Part_3,df1821.Q17_Part_4,\n             df1821.Q17_Part_5,df1821.Q17_Part_6,df1821.Q17_Part_7,df1821.Q17_Part_8,\n             df1821.Q17_Part_9, df1821.Q17_Part_10, df1821.Q17_Part_11,\n             df1821.Q17_OTHER]\nQ17_data = pd.concat(Q17_columns)\n","63ec6052":"plt.figure(figsize=(20,10))\nQ17_count = Q17_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q17_count.index, y=Q17_count.iloc[:,0], data=Q17_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\nplt.xticks(rotation=45, ha='right');","d1eec72f":"Q18_columns = [df1821.Q18_Part_1,df1821.Q18_Part_2,df1821.Q18_Part_3,df1821.Q18_Part_4,\n             df1821.Q18_Part_5,df1821.Q18_Part_6\n             ,df1821.Q18_OTHER]\nQ18_data = pd.concat(Q18_columns)\n\n","8b352a65":"plt.figure(figsize=(10,10))\nQ18_count = Q18_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q18_count.index, y=Q18_count.iloc[:,0], data=Q18_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\nplt.xticks(rotation=45, ha='right')","676f01b2":"Q19_columns = [df1821.Q19_Part_1,df1821.Q19_Part_2,df1821.Q19_Part_3,df1821.Q19_Part_4,\n             df1821.Q19_Part_5,df1821.Q19_OTHER]\nQ19_data = pd.concat(Q19_columns)\n","9e192890":"plt.figure(figsize=(10,10))\nQ19_count = Q19_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q19_count.index, y=Q19_count.iloc[:,0], data=Q19_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\nplt.xticks(rotation=45, ha='right')","614c4d01":"ax = df1821.groupby(['Q20'])['Q20'].count().sort_values(ascending = False).plot(kind = 'bar',title = 'For how many years have you used machine learning methods?')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","c2d6905e":"ax = df1821.groupby(['Q21'])['Q21'].count().sort_values(ascending = False).plot(kind = 'bar',title = 'For how many years have you used machine learning methods?')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","ba94a09b":"ax = df1821.groupby(['Q22'])['Q22'].count().sort_values(ascending = False).plot(kind = 'bar',title = '')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","027ea190":"Q23_columns = [df1821.Q23_Part_1,df1821.Q23_Part_2,df1821.Q23_Part_3,df1821.Q23_Part_4,\n             df1821.Q23_Part_5,df1821.Q23_Part_6,df1821.Q23_Part_7,\n             df1821.Q23_OTHER]\nQ23_data = pd.concat(Q23_columns)\n\n","4707eefe":"plt.figure(figsize=(20,10))\nQ23_count = Q23_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q23_count.index, y=Q23_count.iloc[:,0], data=Q23_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","795223c5":"ax = df1821.groupby(['Q24'])['Q24'].count().sort_values(ascending = False).plot(kind = 'bar',title = '')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","d644e311":"ax = df1821.groupby(['Q25'])['Q25'].count().sort_values(ascending = False).plot(kind = 'bar',title = '')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","2ebdcd7f":"Q26_A_columns = [df1821.Q26_A_Part_1,df1821.Q26_A_Part_2,df1821.Q26_A_Part_3,df1821.Q26_A_Part_4,\n             df1821.Q26_A_Part_5,df1821.Q26_A_Part_6,df1821.Q26_A_Part_7,df1821.Q26_A_Part_8,\n             df1821.Q26_A_Part_9, df1821.Q26_A_Part_10, df1821.Q26_A_Part_11,\n             df1821.Q26_A_OTHER]\nQ26_A_data = pd.concat(Q26_A_columns)\n","d2a111d7":"plt.figure(figsize=(20,10))\nQ26_A_count = Q26_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q26_A_count.index, y=Q26_A_count.iloc[:,0], data=Q26_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","3ea3048c":"Q27_A_columns = [df1821.Q27_A_Part_1,df1821.Q27_A_Part_2,df1821.Q27_A_Part_3,df1821.Q27_A_Part_4,\n             df1821.Q27_A_Part_5,df1821.Q27_A_Part_6,df1821.Q27_A_Part_7,df1821.Q27_A_Part_8,\n             df1821.Q27_A_Part_9, df1821.Q27_A_Part_10, df1821.Q27_A_Part_11,\n             df1821.Q27_A_OTHER]\nQ27_A_data = pd.concat(Q27_A_columns)\n","9fdf1340":"plt.figure(figsize=(20,10))\nQ27_A_count = Q27_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q27_A_count.index, y=Q27_A_count.iloc[:,0], data=Q27_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","0f902a2b":"Q28_A_columns = [df1821.Q28_A_Part_1,df1821.Q28_A_Part_2,df1821.Q28_A_Part_3,df1821.Q28_A_Part_4,\n             df1821.Q28_A_Part_5,df1821.Q28_A_Part_6,df1821.Q28_A_Part_7,df1821.Q28_A_Part_8,\n             df1821.Q28_A_Part_9, df1821.Q28_A_Part_10,\n             df1821.Q28_A_OTHER]\nQ28_A_data = pd.concat(Q28_A_columns)\n","120f54c3":"plt.figure(figsize=(20,10))\nQ28_A_count = Q28_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q28_A_count.index, y=Q28_A_count.iloc[:,0], data=Q28_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right')\n;","a3e44d12":"Q29_A_columns = [df1821.Q29_A_Part_1,df1821.Q29_A_Part_2,df1821.Q29_A_Part_3,df1821.Q29_A_Part_4,\n             df1821.Q29_A_Part_5,df1821.Q29_A_Part_6,df1821.Q29_A_Part_7,df1821.Q29_A_Part_8,\n             df1821.Q29_A_Part_9, df1821.Q29_A_Part_10, df1821.Q29_A_Part_11,\n             df1821.Q29_A_OTHER]\nQ29_A_data = pd.concat(Q29_A_columns)\n","801406b5":"plt.figure(figsize=(20,10))\nQ29_A_count = Q29_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q29_A_count.index, y=Q29_A_count.iloc[:,0], data=Q29_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right')\n;","c894b164":"ax = df1821.groupby(['Q30'])['Q30'].count().sort_values(ascending = False).plot(kind = 'bar',title = '')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","31084134":"Q31_A_columns = [df1821.Q31_A_Part_1,df1821.Q31_A_Part_2,df1821.Q31_A_Part_3,df1821.Q31_A_Part_4,\n             df1821.Q31_A_Part_5,df1821.Q31_A_Part_6,df1821.Q31_A_Part_7,df1821.Q31_A_Part_8,\n             df1821.Q31_A_Part_9, df1821.Q31_A_Part_10, df1821.Q31_A_Part_11,\n             df1821.Q31_A_OTHER]\nQ31_A_data = pd.concat(Q31_A_columns)\n","e9c64e82":"plt.figure(figsize=(20,10))\nQ31_A_count = Q31_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q31_A_count.index, y=Q31_A_count.iloc[:,0], data=Q31_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right')\n","5dbbea9c":"ax = df1821.groupby(['Q32'])['Q32'].count().sort_values(ascending = False).plot(kind = 'bar',title = '')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","778dc09e":"Q33_A_columns = [df1821.Q33_A_Part_1,df1821.Q33_A_Part_2,df1821.Q33_A_Part_3,df1821.Q33_A_Part_4,\n             df1821.Q33_A_Part_5,df1821.Q33_A_Part_6,df1821.Q33_A_Part_7,\n             df1821.Q33_A_OTHER]\nQ33_A_data = pd.concat(Q33_A_columns)\n","fb2791d8":"plt.figure(figsize=(20,10))\nQ33_A_count = Q33_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q33_A_count.index, y=Q33_A_count.iloc[:,0], data=Q33_A_count)\n\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","36a46c61":"Q34_A_columns = [df1821.Q34_A_Part_1,df1821.Q34_A_Part_2,df1821.Q34_A_Part_3,df1821.Q34_A_Part_4,\n             df1821.Q34_A_Part_5,df1821.Q34_A_Part_6,df1821.Q34_A_Part_7,df1821.Q34_A_Part_8,\n             df1821.Q34_A_Part_9, df1821.Q34_A_Part_10, df1821.Q34_A_Part_11,\n             df1821.Q34_A_OTHER]\nQ34_A_data = pd.concat(Q34_A_columns)\n","14f69fb9":"plt.figure(figsize=(20,10))\nQ34_A_count = Q34_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q34_A_count.index, y=Q34_A_count.iloc[:,0], data=Q34_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","f15dda95":"Q35_A_columns = [df1821.Q35_A_Part_1,df1821.Q35_A_Part_2,df1821.Q35_A_Part_3,df1821.Q35_A_Part_4,\n             df1821.Q35_A_Part_5,df1821.Q35_A_Part_6,df1821.Q35_A_Part_7,df1821.Q35_A_Part_8,\n             df1821.Q35_A_Part_9, df1821.Q35_A_Part_10,\n             df1821.Q35_A_OTHER]\nQ35_A_data = pd.concat(Q35_A_columns)\n\n","dda59661":"plt.figure(figsize=(20,10))\nQ35_A_count = Q35_A_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q35_A_count.index, y=Q35_A_count.iloc[:,0], data=Q35_A_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')\n\n\nplt.xticks(rotation=45, ha='right');\n","a7279605":"df1821.groupby(['Q21'])['Q21'].count().sort_values(ascending = False)[0]","7f1e3785":"#ax = plt.bar(x=Q17_count.index, height=Q17_count.iloc[:,0], data=Q17_count)\nprint(Q17_count.max()[0])","81bd582e":"\nlist =['Q2','Q3','Q4','Q5','Q6','Q8','Q11','Q15','Q20','Q21','Q22','Q24','Q25','Q30','Q32']\nmax_output = []\ndict ={}\nfor x in list:\n  max_output.append(df.groupby([str(x)])[str(x)].count().sort_values(ascending = False)[0])\n  dict[str(x)] = df.groupby([str(x)])[str(x)].count().sort_values(ascending = False)[0]\n\n\n","d529f43f":"print(dict)","dcb86663":"df.columns","7faba810":"# Removing the unwanted column\ndf = df.loc[df['Q4'] != 'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?']","89dd4d2e":"plt.figure(figsize=(20,10))\nax = df.groupby(['Q4','Q2'])['Q2'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')","9acc7e67":"df.describe()","8a2acc38":"df.isna().sum().sort_values(ascending=False)","ec3f4bf0":"plt.figure(figsize=(20,10))\ndf_india = df[df['Q3']== 'India']\nax = df_india.groupby(['Q1'])['Q1'].count().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","cc0f8f7f":"plt.figure(figsize=(20,10))\n\nax = df.groupby(['Q1'])['Q1'].count().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","3d8cad8e":"# Here I want o seperate the genders \n%matplotlib inline\nplt.figure(figsize=(20,10))\ndf_india['Man'] = df_india['Q2']\nax = df_india.groupby(['Q1','Q2'])['Q2'].count().unstack('Q2').plot(kind='bar',stacked=True)\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","15a29141":"# Here I want o seperate the genders \n%matplotlib inline\nplt.figure(figsize=(20,15))\ndf_india['Man'] = df_india['Q2']\nax = df.groupby(['Q1','Q2'])['Q2'].count().unstack('Q2').plot(kind='bar',stacked=True)\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center');","f2cb1b9e":"dfis = df_india[df_india['Q5'] =='Student']\ndfns = df_india[df_india['Q5'] !='Student']\nprint(dfis.shape)\ndfis.isna().sum()\ndfis = dfis.dropna(axis=1,how='all')\ndfis = dfis[dfis.isnull().sum(axis=1) > 0]\ndfis.isna().sum()","c1aabba6":"dfis.head()","c360fa0f":"q7_columns = [df_india.Q7_Part_1,df_india.Q7_Part_2,df_india.Q7_Part_3,df_india.Q7_Part_4,\n             df_india.Q7_Part_5,df_india.Q7_Part_6,df_india.Q7_Part_7,df_india.Q7_Part_8,\n             df_india.Q7_Part_9, df_india.Q7_Part_10, df_india.Q7_Part_11, df_india.Q7_Part_12,\n             df_india.Q7_OTHER]\nQ7_data = pd.concat(q7_columns)\n","fdb13ef0":"# Here what I would like to check is which age group , job group etc. prefers which language \/IDE ...\n\nq7_column = ['Q7_Part_1','Q7_Part_2']\n\nlist = []\n\nfor q7_columns in q7_column:\n  a = (df_india.groupby(['Q1',q7_columns])[q7_columns].count())\n  list.append(a)\n\nprint(list)","06166b6a":"plt.figure(figsize=(20,10))\nQ7_count = Q7_data.value_counts().sort_values(ascending=False).to_frame()\nax = sns.barplot(x=Q7_count.index, y=Q7_count.iloc[:,0], data=Q7_count)\n#ax = df_india.groupby(['Q6'])['Q6'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","4c44c012":"plt.figure(figsize=(20,10))\nax = df_india.groupby(['Q1','Q4'])['Q4'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","3f16aa6f":"plt.figure(figsize=(25,10))\ndf_india.groupby(['Q1','Q5'])['Q5'].count().sort_values(ascending=False)\n# for p in ax.patches:\n#     width = p.get_width()\n#     height = p.get_height()\n#     x, y = p.get_xy() \n#     ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n#     #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","cc780bfb":"plt.figure(figsize=(20,10))\ndf_world = df[df['Q3']!= 'India']\nax = df_world.groupby(['Q1'])['Q1'].count().sort_values().plot(kind='bar')\nfor p in ax.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    ax.annotate(f'{height}', (x + width\/2, y + height*1.02), ha='center')\n    #ax.annotate(f'{height:.0%}', (x + width\/2, y + height*1.02), ha='center')","5b08bbaa":"# Let us check this out age range wise \n\ndf1821 = df[df['Q1']=='18-21']","8d750bf9":"students from age 18-21 , which means Bachelor students and 22-24 ,meaning students pursuing Masters constitute a major portion of Kaggle users in India","dc67923f":"India with almost 30% constitutes the majority of the participants of the survey","f8ddf61d":"# Getting results of maximum values for the one answer questions","c10ef2eb":"India and USA occupy the top 2 spots for most number of users.","f9e65176":"So mostly there is people with masters degree ","9f9dbb07":"Students and Data Scientists constitute the top 2 spots for the users","980211bf":"So let us figure out why there are more young users and what are their occupations and habits","8e33bfad":"India, which constitutes the major part of the survey has more young users between 18 to 24  "}}