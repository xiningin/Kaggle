{"cell_type":{"f87040f5":"code","007b1767":"code","bb3d8b08":"code","5f5148a9":"code","45934cce":"code","3704778a":"code","aa27db2a":"code","128256d2":"code","e59c2e0a":"code","0b6d5ecc":"code","2acdbb1c":"code","0b2e321f":"code","56478b30":"code","8742f006":"code","277b35f8":"markdown","167256f1":"markdown","cad6be6e":"markdown","d4fefabf":"markdown","bf62bd87":"markdown","d3ec1137":"markdown","e16e99e0":"markdown","c6bbca32":"markdown","c0aef449":"markdown","8c4865ea":"markdown","fe67921c":"markdown"},"source":{"f87040f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nplt.style.use(\"seaborn-whitegrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","007b1767":"data = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\ndata.head()","bb3d8b08":"data.tail()","5f5148a9":"data.describe()","45934cce":"data.info()","3704778a":"data.columns","aa27db2a":"data.pelvic_incidence.value_counts()","128256d2":"data[\"class\"].value_counts()","e59c2e0a":"plt.scatter(data.pelvic_radius,data.sacral_slope)\nplt.xlabel(\"Pelvic Yaricap\")\nplt.ylabel(\"Pelvic Egim\")\nplt.show()\n\nfrom sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\n\nx=data.pelvic_radius.values.reshape(-1,1)\ny=data.sacral_slope.values.reshape(-1,1)\nlinear_reg.fit(x,y)\n\nb0=linear_reg.predict([[0]])\nprint(\"b0: \",b0)\nb0_ = linear_reg.intercept_\nprint(\"b0_: \",b0_) \nb1 = linear_reg.coef_\nprint(\"b1: \",b1)  \n\n#y_head = linear_reg.predict(array).reshape(-1,1)\n#plt.plot(array, y_head,color = \"red\")","0b6d5ecc":"from sklearn.linear_model import LinearRegression\n\nx = data.iloc[:,[0,2]].values\ny = data.pelvic_radius.values.reshape(-1,1)\n\nmultiple_linear_regression = LinearRegression()\nmultiple_linear_regression.fit(x,y)\n\nprint(\"b0 : \", multiple_linear_regression.intercept_)\nprint(\"b1,b2 : \", multiple_linear_regression.coef_)\n\nmultiple_linear_regression.predict(np.array([[10,40],[5,40]]))","2acdbb1c":"y = data.degree_spondylolisthesis.values.reshape(-1,1)\nx = data.pelvic_incidence.values.reshape(-1,1)\n\nplt.scatter(x,y)\nplt.ylabel(\"degree_spondylolisthesis\")\nplt.xlabel(\"pelvic_incidence\")\nplt.show()\n\n# linear regression =  y = b0 + b1*x\n# multiple linear regression   y = b0 + b1*x1 + b2*x2\n\n#linear regression\n\nfrom sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x,y)\n\ny_head = lr.predict(x)\nplt.plot(x,y_head,color=\"red\")\nplt.show()\n\nprint(\"10 Milyon t\u0131bbi kayd\u0131n tahlili: \", lr.predict([[10000]]))\n\n# polynomial regression =  y = b0 + b1*x +b2*x^2 + b3*x^3 + ... + bn*x^n\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial_regression = PolynomialFeatures(degree = 2)\n\nx_polynomial = polynomial_regression.fit_transform(x)\n\n#fit\nlinear_regression2 = LinearRegression()\nlinear_regression2.fit(x_polynomial,y)\n\ny_head2 = linear_regression2.predict(x_polynomial)\n\nplt.plot(x,y_head2,color= \"green\",label = \"poly\")\nplt.legend()\nplt.show()","0b2e321f":"x = data.iloc[:,0].values.reshape(-1,1)\ny = data.iloc[:,1].values.reshape(-1,1)\n\n#decision tree regression\nfrom sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()   # random sate = 0\ntree_reg.fit(x,y)\n\ntree_reg.predict([[5.5]])\nx_ = np.arange(min(x),max(x),0.01).reshape(-1,1)\ny_head = tree_reg.predict(x_)\n\n#visualize\nplt.scatter(x,y,color=\"red\")\nplt.plot(x_,y_head,color = \"green\")\nplt.xlabel(\"Pelvic Incidence\")\nplt.ylabel(\"Pelvic Egim\")\nplt.show()","56478b30":"data1 = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\n\nx = data1.iloc[:,0].values.reshape(-1,1)\ny = data1.iloc[:,1].values.reshape(-1,1)\n\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 10, random_state = 100)\nrf.fit(x,y)\n\nprint(\"Yaricap de\u011ferinin Insidance orani: \",rf.predict([[5.6]]))\n\nx_ = np.arange(min(x),max(x),0.09).reshape(-1,1)\ny_head = rf.predict(x_)\n\n# visualize\nplt.scatter(x,y,color=\"red\")\nplt.plot(x_,y_head,color=\"green\")\nplt.xlabel(\"Pelvic Incidence\")\nplt.ylabel(\"Pelvic Orani\")\nplt.show()","8742f006":"plt.scatter(data.pelvic_radius,data.sacral_slope)\nplt.xlabel(\"Pelvic Yaricap\")\nplt.ylabel(\"Pelvic Egim\")\nplt.show()\n#linear regression\n\n# sklearn library\nfrom sklearn.linear_model import LinearRegression\n# linear regression model\nlinear_reg = LinearRegression()\n\ny = data.degree_spondylolisthesis.values.reshape(-1,1)\nx = data.pelvic_incidence.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\ny_head = linear_reg.predict(x)  # maas\nplt.plot(x, y_head,color = \"red\")\n\nfrom sklearn.metrics import r2_score\nprint(\"r_square score: \", r2_score(y,y_head))","277b35f8":"<a id=\"2\"><\/a><br>\n# 2.Linear Regression","167256f1":"<a id=\"7\"><\/a><br>\n# 7.Evaluation Regression Models","cad6be6e":"# i will publish it soon. :)","d4fefabf":"<a id=\"1\"><\/a><br>\n# 1.Loading Data and Explanation of Features and INFO","bf62bd87":"<a id=\"2\"><\/a><br>\n# 3.Multiple Linear Regression","d3ec1137":"<a id=\"6\"><\/a><br>\n# 6.Random Forest Regression","e16e99e0":"<a id=\"5\"><\/a><br>\n# 5.Decision Tree Regression","c6bbca32":"# **Please check**","c0aef449":"<a id=\"4\"><\/a><br>\n# 4.Polynomial Linear Regression","8c4865ea":"# INTRODUCTION\nOrtopedik Hastalar\u0131n Regresyon \u00d6zellikleri ile ilgili Regression y\u00f6ntemiyle kar\u015f\u0131la\u015ft\u0131rmalar ve analizler yap\u0131lacakt\u0131r.\n\n<br>Content:\n1. [Loading Data and Explanation of Features and INFO](#1)\n1. [Linear Regression](#2)\n1. [Multiple Linear Regression](#3)\n1. [Polynomial Linear Regression](#4)\n1. [Decision Tree Regression](#5)\n1. [Random Forest Regression](#6)\n1. [Evaluation Regression Models](#7)\n1. [Logistic Regression Classification](#8)\n\n","fe67921c":"<a id=\"8\"><\/a><br>\n# 8.Logistic Regression Classification"}}