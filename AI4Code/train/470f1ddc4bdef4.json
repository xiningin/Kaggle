{"cell_type":{"6492aa95":"code","bfc5d61f":"code","2cc2b781":"code","ff48912e":"code","f80e5070":"code","d5b17b2f":"markdown","aa4ebd96":"markdown","bcd4fdd7":"markdown","ddc80ea1":"markdown"},"source":{"6492aa95":"!pip install ipyplot -qq\n\nimport pandas as pd\nimport ipyplot\nfrom PIL import Image\n\ntrain = pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')","bfc5d61f":"train.Pawpularity.hist()","2cc2b781":"not_popular = train.Id[train.Pawpularity < 10].values.tolist()\npopular = train.Id[train.Pawpularity > 90].values.tolist()\nnot_popular = [Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + x +'.jpg') for x in not_popular[:12]]\npopular = [Image.open('..\/input\/petfinder-pawpularity-score\/train\/' + x +'.jpg') for x in popular[:12]]","ff48912e":"ipyplot.plot_images(not_popular, max_images=12, img_width=300)","f80e5070":"ipyplot.plot_images(popular, max_images=12, img_width=300)","d5b17b2f":"## Range of scores\n\nLooks like Pawpularity is a score between 0 and 100, with a peak around 30. Let's visualize both the least popular (<10) and most popular (>90) images.","aa4ebd96":"## Popular\n\nThese all look like cute little pups \ud83d\ude0a\ud83d\ude0a\ud83d\ude0a","bcd4fdd7":"# Petfinder Pawpularity EDA\n\nLooks like this is going to be a *pawpular* competition :) We already have a bunch of great baseline kernels, so I'd like to focus instead on just looking at the data.","ddc80ea1":"## Not Very Popular\n\nThey kind of look sad, don't they? \ud83d\ude22\ud83d\ude22\ud83d\ude22"}}