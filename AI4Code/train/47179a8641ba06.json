{"cell_type":{"976713e0":"code","7912891a":"code","7309e4be":"code","7718b50d":"markdown"},"source":{"976713e0":"import numpy as np\nimport pandas as pd\n!pip install iterative-stratification","7912891a":"#get data\nnfold = 5\nseed = 12\n\ntrain_df = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/train.csv')\ntrain_df['id'] = train_df['image_id'].apply(lambda x: int(x.split('_')[1]))\n\nX, y = train_df[['id', 'grapheme_root', 'vowel_diacritic', 'consonant_diacritic']]\\\n.values[:,0], train_df.values[:,1:]\n\ntrain_df['fold'] = np.nan\n\n#split data\nfrom iterstrat.ml_stratifiers import MultilabelStratifiedKFold\nmskf = MultilabelStratifiedKFold(n_splits=nfold, random_state=seed)\nfor i, (_, test_index) in enumerate(mskf.split(X, y)):\n    train_df.iloc[test_index, -1] = i\n    \ntrain_df['fold'] = train_df['fold'].astype('int')","7309e4be":"#output\ntrain_df.to_csv('train_with_fold.csv', index = False)","7718b50d":"### In this competition, we have three targets for each sample, thus I think using iterative stratifications (https:\/\/github.com\/trent-b\/iterative-stratification) is helpful according to previous competition:\nimet top 1 solution https:\/\/www.kaggle.com\/c\/imet-2019-fgvc6\/discussion\/94687"}}