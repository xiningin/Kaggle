{"cell_type":{"44849f96":"code","8a6844aa":"code","e441000c":"code","05c2b6a8":"code","edba46ab":"markdown","c185a014":"markdown","80253de5":"markdown"},"source":{"44849f96":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom sklearn.decomposition import PCA\nfrom sklearn import preprocessing\nfrom sklearn import ensemble\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\nfrom os import chdir\n\n# File Import\nx = pd.read_csv('..\/input\/MiningProcess_Flotation_Plant_Database.csv', decimal=\",\").drop_duplicates()","8a6844aa":"# Values grouped by %Silica Concentrate and averaged\nx_grpby = x.groupby(['% Silica Concentrate']).mean()\n\n# Extraction of %Silica Concentrate values\ny = list(x_grpby.index.values)\n\n# Suppression of %Iron Concentrate column as it is highly correlated to %Silica Concentrate (0.8)\nx_grpby.drop(labels=\"% Iron Concentrate\", axis=1, inplace=True)\n\n# Feature Scaling\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = pd.DataFrame(min_max_scaler.fit_transform(x_grpby), columns=x_grpby.columns)","e441000c":"# Dimensions reduction with Principal Components Analysis\npca = PCA(n_components=10)\npca.fit(x_scaled)\nx_pca = pca.fit_transform(x_scaled)\n\n# Creation of the different datasets for training and testing\nx_train, x_test, y_train, y_test = train_test_split(x_pca, y, test_size=0.8, random_state=59)\n\n# Optimal parameters defined on a separate script by iterations\nparams = {\n    'n_estimators': 80,\n    'max_depth': 12,\n    'learning_rate': 0.1,\n    'criterion': 'mse'\n    }\n\n# GBR implementation\ngbr = ensemble.GradientBoostingRegressor(**params)\ngbr.fit(x_train,y_train)\n\n# GBR performance on test data\nprint (\"R-squared (Test dataset):\", gbr.score(x_test, y_test))\nerror = mean_squared_error(y_test, gbr.predict(x_test))\nprint (\"MSE (Test dataset):\",error)","05c2b6a8":"# GBR performance \nfig = plt.figure(figsize=(20, 10))\nax = fig.add_subplot(111)\nax.set(title=\"Gradient Boosting Regressor\", xlabel=\"Y values (actual)\", ylabel=\"Y values (predicted)\")\nax.scatter(y_test, gbr.predict(x_test))\nax.plot([0,max(y_test)], [0,max(gbr.predict(x_test))], color='r')\nfig.show()","edba46ab":"![](http:\/\/)","c185a014":"Dimensions reduction is always a good way to detect underlying variances within an industrial process","80253de5":"I believe there might be an issue in the way this problem is set.\n\nThe frequency of the features must be aligned with the output (% Silica Concentrate). There is no point about running the algorithm on each record because we know that none of them actually predicts the average % Silica Concentrate. It is only the combination of all parameters over a period of time which gives with the averaged % Silica Concentrate.\n\nTherefore, I am grouping and averaging all records by % Silica Concentrate. It might be considered as a shortcut but, from an industrial standpoint, I believe that makes sense."}}