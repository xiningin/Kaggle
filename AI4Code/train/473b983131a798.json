{"cell_type":{"19e7d371":"code","5778d1a4":"code","ad2d0c22":"code","9dcf372b":"code","f158a628":"code","93b12a51":"code","dddf5c87":"code","94271d37":"code","22357503":"code","482a5a88":"code","88698bef":"code","e45d7824":"code","321c3aef":"code","1489b599":"code","2eddbf6c":"markdown","c7947e6b":"markdown","eaab21db":"markdown","24081706":"markdown","b8e592ef":"markdown"},"source":{"19e7d371":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n","5778d1a4":"df = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')","ad2d0c22":"df.head()","9dcf372b":"df.info()","f158a628":"df.drop(['id','Unnamed: 32'],axis = 1,inplace = True)","93b12a51":"sns.barplot(x = df['diagnosis'].unique(),y = df['diagnosis'].value_counts())","dddf5c87":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ndf['diagnosis'] = encoder.fit_transform(df['diagnosis'])\n","94271d37":"plt.figure(figsize = (12,12))\nsns.heatmap(df.corr(),annot = True, cmap = 'coolwarm')","22357503":"new_df=df[df.corr()[df.corr()['diagnosis']>0.6].columns]","482a5a88":"new_df.info()","88698bef":"from sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()\n\nnew_df.astype(float)\ny = new_df['diagnosis']\ndf = new_df.drop('diagnosis',axis = 1)\ndf2 = df.copy()\n\nX_train,X_test,y_train,y_test = train_test_split(df,y,test_size = 0.3,random_state = 42)\nmodel.fit(X_train,y_train)\npred_t = model.predict(X_train)\ntrain_score = accuracy_score(y_train,pred_t)\npred = model.predict(X_test)\nval_score = accuracy_score(y_test,pred)\nprint('train accuracy is {}'.format(train_score))\nprint('val accuracy is {}'.format(val_score))","e45d7824":"score = cross_val_score(model,df2,y,scoring='accuracy',cv = 8)\nprint(score)","321c3aef":"print(confusion_matrix(y_test,pred))","1489b599":"from xgboost import XGBClassifier\n\nmodel = XGBClassifier(n_estimator = 20)\nmodel.fit(X_train,y_train)\npred = model.predict(X_test)\nprint(confusion_matrix(y_test,pred))","2eddbf6c":"* Above results seems quite good but as we know by boosting techniques our accuracy generally increases lets try:)","c7947e6b":"# Approach \n* generally a person approach problem in their own specific way according to his previous experiences, So to be good at it   you should make your hands dirty with datasets,\n\n* what I have done firstly tried to look over data from relativey high top view.\n\n* Then Done feature selection and seen whether dataset was balanced or imbalanced. Generally it happened that medical         datasets are imbalanced.\n\n* Then selected a model and saw for some important things like whether missing values present, features are on same scale     or not, etc.\n\n* Now only two things remaining first fit data on model and evaluate model.\n\n* Its good to see confusion matrix since it gives a wider picture of the performance of model and you will find it intuitional.\n\n* Just see one time and post your notebook which would be (should be) better than this it will help you in posting things     in community.\n\n* \"upvote karo tabhi to bhai ki notebook chalegi\":p","eaab21db":"* Distribution looks quite good ie. its a balanced dataset","24081706":"By seeing to confusion matrix we can be more sure that how our model is working and on what side our model should dominate its prediction","b8e592ef":"# Our main training procedure \n* Machine learning is very easy just try and develop a kind of pattern in your mind about approaching tabular problems"}}