{"cell_type":{"9b9891c8":"code","2792e3b1":"code","d5a1c8fa":"code","2041a2fe":"code","3207dcbb":"code","1acf7e7c":"code","84c7270f":"code","1f926f7a":"code","72320d51":"code","c638cc86":"code","24f73a71":"code","083fe2de":"code","19e01f3f":"code","f8254ccf":"code","8231bbc3":"code","6a346c84":"code","dc75785c":"code","ce54349b":"code","405d72d7":"code","c5f6e76d":"code","3f0b2c4d":"code","6984e63a":"code","1221cd83":"code","9228e2c5":"code","071363fe":"code","a9cc2373":"code","df734178":"code","5f7d29aa":"code","3c096e61":"code","1e4eaaa5":"code","4737a5f2":"code","81b6f3d9":"code","5b832f4e":"code","66cfa325":"code","fb1f5f14":"code","8eaa8512":"code","dab0b40f":"code","218cad4d":"code","0fb5ed86":"code","f61c874b":"code","aabfd957":"code","b383a93c":"code","fcbc343a":"code","d651d06d":"code","9a6669f3":"markdown","7bcb05ec":"markdown","e2d5d626":"markdown","636a9a0a":"markdown","f145793b":"markdown","20863a37":"markdown","1e9ec5d9":"markdown","81aaea31":"markdown","a16515cf":"markdown","eee146f9":"markdown","0381e6e3":"markdown","bb25ba42":"markdown","97ebce63":"markdown","2f068b28":"markdown","f3c35ff7":"markdown","f26f1552":"markdown","b93065e5":"markdown","18ea5fd4":"markdown","d11f43ce":"markdown"},"source":{"9b9891c8":"import pandas as pd\nimport numpy as np\nimport plotnine \nfrom plotnine import *\nimport os, sys, gc\nfrom tqdm.notebook import tqdm","2792e3b1":"# \uacbd\ub85c\uc758 \uacbd\uc6b0 \uac01\uc790\uc758 \ud658\uacbd\uc5d0 \ub9de\uac8c \uc124\uc815\ud574\uc8fc\uba74 \ub429\ub2c8\ub2e4. \npath = '..\/input\/t-academy-recommendation2\/books\/'","d5a1c8fa":"books = pd.read_csv(path + \"books.csv\")\nbook_tags = pd.read_csv(path + \"book_tags.csv\")\nratings = pd.read_csv(path + \"ratings.csv\")\ntags = pd.read_csv(path + \"tags.csv\")\nto_read = pd.read_csv(path + \"to_read.csv\")","2041a2fe":"books.head()","3207dcbb":"books.columns","1acf7e7c":"books['small_image_url'].values[0]","84c7270f":"# \ud544\uc694\ud55c \ubcc0\uc218\ub4e4\ub9cc \uc0ac\uc6a9 \nbooks = books[['book_id', 'authors', 'title', 'ratings_count', 'average_rating', 'language_code']].reset_index(drop=True)","1f926f7a":"agg = books.groupby('authors')['authors'].agg({'count'})\n(ggplot(data = agg)\n  + geom_histogram(aes(x='count'), binwidth = 1, fill = '#49beb7')\n  + labs(title = \"Number of the Author's Book\",\n         x = 'Book Count',\n         y = 'Author Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","72320d51":"print(\"\ucc45\uc758 \uc22b\uc790:\", books['book_id'].nunique())\nprint(\"\uc800\uc790\uc758 \uc22b\uc790:\", books['authors'].nunique(), \"\\n\")\nprint(pd.DataFrame(agg['count'].describe()).T)","c638cc86":"(ggplot(data = books)\n  + geom_histogram(aes(x='average_rating'), binwidth = 0.1, fill = '#49beb7')\n  + labs(title = \"Average Rating of the Books\",\n         x = 'Average Rating',\n         y = 'Book Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","24f73a71":"books[books['average_rating'] <= 3].shape[0]","083fe2de":"books.sort_values(by='average_rating', ascending=False).head()","19e01f3f":"(ggplot(data = books)\n  + geom_histogram(aes(x='ratings_count'), binwidth = 10000, fill = '#49beb7')\n  + labs(title = \"Ratings Count of the Books\",\n         x = 'Ratings Count',\n         y = 'Book Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","f8254ccf":"pd.DataFrame(books['ratings_count'].describe()).T","8231bbc3":"(ggplot(data = books[books['ratings_count'] < 1000000])\n  + geom_histogram(aes(x='ratings_count'), binwidth = 10000, fill = '#49beb7')\n  + labs(title = \"Ratings Count of the Books\",\n         x = 'Ratings Count',\n         y = 'Book Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","6a346c84":"books.sort_values(by='ratings_count', ascending=False).head()","dc75785c":"agg = pd.DataFrame(books['language_code'].value_counts()).reset_index()\nagg.columns = ['language_code', 'count']","ce54349b":"(ggplot(data = books)\n  + geom_bar(aes(x='language_code'), fill = '#49beb7')\n  + labs(title = \"Ratings Count of the Books\",\n         x = 'Ratings Count',\n         y = 'Book Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black', rotation=60),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","405d72d7":"books['language_code'].unique()","c5f6e76d":"books.isnull().sum()","3f0b2c4d":"len(set(ratings['book_id'].unique()).difference(set(books['book_id'].unique())))","6984e63a":"book_tags.head()","1221cd83":"tags.head()","9228e2c5":"book_tags = pd.merge(tags, book_tags, how='left', on='tag_id')\nagg = book_tags.groupby(['tag_name'])['count'].agg({'sum'}).reset_index()\nagg = agg.sort_values(by='sum', ascending=False).reset_index(drop=True)\nagg.head()","071363fe":"(ggplot(data = agg.loc[0:20])\n  + geom_bar(aes(x='tag_name', y='sum'), fill = '#49beb7', stat = \"identity\")\n  + labs(title = \"Top 20: Tag Count\",\n         x = 'Tag',\n         y = 'Tag Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black', rotation=60),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","a9cc2373":"pd.DataFrame(agg['sum'].describe()).T","df734178":"agg = ratings.groupby(['user_id'])['book_id'].agg({'count'}).reset_index()\n(ggplot(data = agg)\n  + geom_histogram(aes(x='count'), binwidth = 5, fill = '#49beb7')\n  + labs(title = 'Average Number of the Read Count',\n         x = 'Read Count',\n         y = 'User Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","5f7d29aa":"pd.DataFrame(agg['count'].describe()).T","3c096e61":"agg = ratings.groupby(['book_id'])['book_id'].agg({'count'}).reset_index()\n(ggplot(data=agg)\n    + geom_histogram(aes(x='count', y='stat(count)'), fill = '#49beb7', binwidth=5)\n    + theme_minimal()\n    + ggtitle(\"Average Readed Count\")\n    + labs(x=\"Readed Count\", y=\"binwidth\") \n    + theme(\n         axis_text_x = element_text(angle=60, color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(8,4))    \n)","1e4eaaa5":"pd.DataFrame(agg['count'].describe()).T","4737a5f2":"agg.head()","81b6f3d9":"books[books['book_id'].isin([1, 2, 3, 4, 5, 6, 7, 8])].head()","5b832f4e":"ratings['user_id'].unique()","66cfa325":"ratings[(ratings['user_id'] == 314) & (ratings['book_id'].isin([1,2,3,4,5,6,7,8]))]","fb1f5f14":"# ratings\ub97c 8\uac1c \uc804\ubd80 \ub2e4 \uad6c\ub9e4\ud55c \uc0ac\ub78c \nagg = ratings[ratings['book_id'].isin([1,2,3,4,5,6,7,8])].groupby(['user_id'])['book_id'].agg({'nunique'})\nagg = agg.reset_index()\nagg = agg.groupby(['nunique'])['user_id'].agg({'count'}).reset_index()\n\n(ggplot(data = agg)\n  + geom_bar(aes(x='nunique', y='count'), fill = '#49beb7', stat = \"identity\")\n  + labs(title = \"Harry Poter's Reading Count\",\n         x = 'Series Count',\n         y = 'Reaing Person Count')\n  + theme_light() \n    + theme(\n         axis_text_x = element_text(color='black'),\n         axis_text_y = element_text(color='black'),\n         axis_line=element_line(color=\"black\"),\n         axis_ticks=element_line(color = \"grey\"),\n         figure_size=(10,6))    \n)","8eaa8512":"agg['ratio'] = agg['count'] \/ agg['count'].sum()\nagg[['nunique', 'ratio']].T","dab0b40f":"to_read.head()","218cad4d":"to_read['user_id'].nunique()","0fb5ed86":"agg = ratings.groupby(['user_id'])['book_id'].agg({'unique'}).reset_index()\nagg.head()","f61c874b":"agg['train'] = agg['unique'].apply(lambda x: np.random.choice(x, len(x)\/\/2))\nagg.head()","aabfd957":"test = []\nfor i in tqdm(range(0, agg.shape[0])):\n    test_rec = list(set(agg.loc[i, 'unique']).difference(set(agg.loc[i, 'train'])))\n    test.append(test_rec)\nagg['test'] = test","b383a93c":"# train dataset \ntrain_map = agg[['user_id', 'train']]\n\n# unnest tags\ntrain_map_unnest = np.dstack(\n    (\n        np.repeat(train_map.user_id.values, list(map(len, train_map.train))), \n        np.concatenate(train_map.train.values)\n    )\n)\n\ntrain_map_unnest = pd.DataFrame(data = train_map_unnest[0], columns = train_map.columns)\ntrain_map_unnest.head()","fcbc343a":"# test dataset \ntest_map = agg[['user_id', 'test']]\n\n# unnest tags\ntest_map_unnest = np.dstack(\n    (\n        np.repeat(test_map.user_id.values, list(map(len, test_map.test))), \n        np.concatenate(test_map.test.values)\n    )\n)\n\ntest_map_unnest = pd.DataFrame(data = test_map_unnest[0], columns = test_map.columns)\ntest_map_unnest.head()","d651d06d":"train_map_unnest.columns = ['user_id', 'book_id']\ntest_map_unnest.columns = ['user_id', 'book_id']\ntrain_map_unnest.to_csv(\"train.csv\", index=False)\ntest_map_unnest.to_csv(\"test.csv\", index=False)","9a6669f3":"- \uc774\ubbf8 \uc77d\uc740 \uc815\ubcf4\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc77d\uc744 \ucc45\ub4e4\uc5d0 \ub300\ud55c \uc815\ubcf4\ub3c4 \uacb0\ud569\ud574\uc11c \ucd94\ucc9c\uc774 \uac00\ub2a5 ","7bcb05ec":"- Twilight (Twilight, #1)\uc740 ratings_count\ub294 \ub192\uc9c0\ub9cc, average_rating\uc740 \ub0ae\uc740 \ud3b8 ","e2d5d626":"## to read \uc815\ubcf4","636a9a0a":"<img src=\"https:\/\/github.com\/choco9966\/Recommendation-Tutorial\/blob\/master\/05.%20%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%20%EC%8B%A4%EC%8A%B5%ED%95%98%EA%B8%B0\/figure\/figure02.png?raw=true\" width=\"256\" height=\"256\" alt=\"\uadf8\ub9bc \uc124\uba85\" \/>","f145793b":"- \ud3c9\uade0 \ud55c \uc0ac\ub78c\uc774 \uc77d\ub294 \ucc45\uc758 \uc218\ub294 18\uad8c \n- \ucd5c\uc18c 2\uad8c\uc529\uc740 \uad6c\ub9e4\ud574\uc11c \uc77d\uc74c \n- \ucd5c\ub300 \ub9ce\uc774 \uc77d\uc740 \uc0ac\ub78c\uc740 200\uad8c\uc758 \ucc45\uc744 \uad6c\ub9e4\ud568 ","20863a37":"## \ud559\uc2b5\uc14b\uacfc \uac80\uc99d\uc14b \uc0dd\uc131","1e9ec5d9":"- 3\uc810\uc774\ud558\uc758 \ud3c9\uc810\uc774 \ub0ae\uc740 \ucc45\ub4e4\uc740 \uc720\uc0ac\ub3c4\uac00 \ub192\ub354\ub77c\ub3c4 \ucd94\ucc9c\uc744 \uc548\ud558\ub294\uac8c \uc88b\uc744 \uc218 \uc788\uc74c\n- \ud3c9\uc810\uc774 \ub192\uc740 \ucc45\ub4e4\uc740 \uc6b0\uc120\uc801\uc73c\ub85c \ucd94\ucc9c\ud574\uc8fc\ub294\uac8c \uc88b\uc74c \n    \ud558\uc9c0\ub9cc, \ud3c9\uc810\uc774 \ub192\ub354\ub77c\ub3c4 \uc0ac\ub78c\ub4e4\uc774 \ub9ce\uc774 \ubcf4\uc9c0\uc54a\uc740 \ucc45\uc77c \uc218\ub3c4 \uc788\uc74c ","81aaea31":"- books.csv : \ucc45\uc758 \uba54\ud0c0\uc815\ubcf4 \n- book_tags.csv : \ucc45-\ud14c\uadf8\uc758 \ub9e4\ud551\uc815\ubcf4 \n- ratings.csv : \uc0ac\uc6a9\uc790\uac00 \ucc45\uc5d0 \ub300\ud574 \uc810\uc218\ub97c \uc900 \ud3c9\uc810\uc815\ubcf4 \n- tags.csv : \ud14c\uadf8\uc758 \uc815\ubcf4 \n- to_read.csv : \uc0ac\uc6a9\uc790\uac00 \uc77d\uc73c\ub824\uace0 \uae30\ub85d\ud574\ub454 \ucc45 (\uc7a5\ubc14\uad6c\ub2c8) ","a16515cf":"- \uc2e4\uc81c \ud3c9\uc810\uc744 \ubd80\uc5ec\ud588\uc9c0\ub9cc, \uba54\ud0c0\uc815\ubcf4\uc5d0 \uc788\ub294 \ucc45\uc740 812\uac74\ubc16\uc5d0 \uc548\ub428 \n- Contents \uae30\ubc18\uc758 \ucd94\ucc9c\uc2dc\uc2a4\ud15c\uc740 \uc131\ub2a5\uc774 \uc548\uc88b\uc744 \uac83\uc73c\ub85c \uc608\uc0c1","eee146f9":"- \ucc45\uc758 \uacbd\uc6b0 \ucd5c\uc18c 8\uba85\uc740 \uc77d\uace0, \ub9ce\uc774 \uc77d\ud78c \ucc45\uc758 \uacbd\uc6b0 100\uba85\uc740 \uc77d\uc5c8\uc2b5\ub2c8\ub2e4. \n- \ud3b8\ucc28\ub294 \ud06c\uc9c0\ub9cc, \ud3c9\uc810\uc774 \ubd80\uc5ec\ub41c \ucc45\ub4e4\uc758 \ub300\ubd80\ubd84\uc774 100\uba85\uc529\uc740 \uc77d\uc740 \ucc45\ub4e4\ub9cc \ubf51\ud78c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n- \uc774\uac8c \ucc45\ub4e4\uc758 \ud2b9\uc9d5\uc774\ub77c\uae30\ubcf4\ub2e4\ub294 10k\ub9cc\ud07c\uc758 \ucc45\uc744 \uc120\uc815\ud558\ub824\uace0 \uc784\uc758\ub85c \uc0d8\ud50c\ub9c1\ud574\uc11c \ubc1c\uc0dd\ud55c \ubb38\uc81c\ub85c \ubcf4\uc785\ub2c8\ub2e4 (\u315c\u315c)","0381e6e3":"## \uc815\ub9ac\n- \uc804\uccb4 \ucc45\uc744 \uad6c\ub9e4\ud55c \uc0ac\uc6a9\uc790\ub294 53424\uba85\uc774\uace0 \ucc45\uc758 \uac1c\uc218\ub294 10000\uac1c \n- \uadf8 \uc911 48871\uba85\uc774 \uc7a5\ubc14\uad6c\ub2c8\uc5d0 \ucc45\uc744 \ub2f4\uc544\ub450\uc5c8\uc2b5\ub2c8\ub2e4. \n- \ud3c9\uade0\uc801\uc73c\ub85c \uc791\uac00\ub2f9 \ucc45\uc774 2\uad8c \uc774\uc0c1\uc740 \ub429\ub2c8\ub2e4. ","bb25ba42":"- \uad6d\uc801\uc5d0 \ub9de\ub294 \ucc45\uc744 \ucd94\ucc9c\ud574\uc8fc\ub294\uac8c \ud544\uc694 ","97ebce63":"## book\uc758 tag \uc815\ubcf4 \ud655\uc778\n- book_tags : book_id\uc5d0 \ub9e4\ud551\ub41c tag_id\uc758 \uc815\ubcf4 \n- tags : tag_id\uc640 tag_name\uc5d0 \ub300\ud55c \ub9e4\ud551\uc815\ubcf4 ","2f068b28":"- \ud0dc\uadf8\uc815\ubcf4\ub97c \ud1b5\ud574\uc11c \ub0b4\uac00 \ubcf4\ub294 \ud0dc\uadf8\uc758 \uae00\uc744 \ucd94\ucc9c\ud574\uc8fc\ub294 \uac83\ub3c4 \uc911\uc694 (\uc131\ud5a5\ud30c\uc545) \n- tag\uac00 \uc720\uc0ac\ud55c \ucc45\ub4e4\ub85c\ub3c4 \ucd94\ucc9c\uc774 \uac00\ub2a5","f3c35ff7":"# 1. Goodbooks-10k \n- Link : https:\/\/www.kaggle.com\/zygmunt\/goodbooks-10k","f26f1552":"- \ucc45\uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \ud45c\uc9c0\uc758 \uc601\ud5a5\uc744 \ub9ce\uc774 \ubc1b\uc544\uc11c, \ud574\ub2f9 \uc774\ubbf8\uc9c0\uc758 \ud45c\uc9c0\uc5d0\uc11c \ud2b9\uc9d5\uc744 \ucd94\ucd9c\ud574\uc11c CNN \uac19\uc740 \ubaa8\ub378\ub85c \uc720\uc0ac\ud55c \ucc45\uc744 \ucc3e\ub294 Contents Based Recommendation\ub3c4 \uac00\ub2a5","b93065e5":"## ratings \ud3c9\uc810\uc815\ubcf4 \ud655\uc778\n- \uc804\uccb4 \ucc45\uacfc \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uae30\uc220 \ud1b5\uacc4 ","18ea5fd4":"- \ud574\ub9ac\ud3ec\ud130\uc640 \uac19\uc774 \uc2dc\ub9ac\uc988\uc131\uc758 \uae00\ub4e4\uc740 \uac19\uc774 \uc77d\ub294 \uacbd\ud5a5\uc774 \uc788\uc74c ","d11f43ce":"## books\uc758 \uba54\ud0c0\uc815\ubcf4 \ud655\uc778 "}}