{"cell_type":{"0cd46707":"code","906119ef":"code","3716a662":"code","fd306660":"code","e949c132":"code","fbe91369":"code","98226a2d":"code","df79cac0":"code","04b5796f":"code","b742855b":"code","48261432":"code","ea6bd0c9":"code","cb36c3fd":"code","5890ac07":"code","cb4decff":"code","08cf852b":"code","d8b27613":"code","69e7344b":"markdown","5e617562":"markdown","13406a55":"markdown","621b043e":"markdown","6b3dc123":"markdown","6623d006":"markdown"},"source":{"0cd46707":"#Importing Necessary Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","906119ef":"#Importing dataset\ncol = [ 'Class Name','Left weight','Left distance','Right weight','Right distance']\ndf = pd.read_csv('..\/input\/balancescale\/balance-scale.data',names=col,sep=',')","3716a662":"df.head()","fd306660":"df.info()","e949c132":"df","fbe91369":"df.tail()","98226a2d":"df.info()","df79cac0":"sns.countplot(df['Class Name'])","04b5796f":"sns.countplot(df['Left weight'],hue=df['Class Name'])","b742855b":"from sklearn.model_selection import train_test_split\nX = df.drop('Class Name',axis=1)\ny = df[['Class Name']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state=42)","48261432":"from sklearn.tree import DecisionTreeClassifier\nclf_model = DecisionTreeClassifier(criterion=\"gini\", random_state=42,max_depth=3, min_samples_leaf=5)   \nclf_model.fit(X_train,y_train)","ea6bd0c9":"y_predict = clf_model.predict(X_test)","cb36c3fd":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\naccuracy_score(y_test,y_predict)","5890ac07":"target = list(df['Class Name'].unique())\nfeature_names = list(X.columns)","cb4decff":"from sklearn import tree\nimport graphviz\ndot_data = tree.export_graphviz(clf_model,\n                                out_file=None, \n                      feature_names=feature_names,  \n                      class_names=target,  \n                      filled=True, rounded=True,  \n                      special_characters=True)  \ngraph = graphviz.Source(dot_data)  \ngraph","08cf852b":"from sklearn.tree import export_text\nr = export_text(clf_model, feature_names=feature_names)\nprint(r)","d8b27613":"graph.save('graph1.jpg')","69e7344b":"# ***Exploratory Data Analysis***","5e617562":"# ***Test Accuracy***","13406a55":"# ***Training the Decision Tree Classifier***","621b043e":"# ***Importing***","6b3dc123":"# ***Plotting Decision Tree***","6623d006":"# ***Reading Dataset***"}}