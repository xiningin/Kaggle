{"cell_type":{"faf5cb5e":"code","6e6cad40":"code","3d844a19":"code","2c4e2e18":"code","a73e3deb":"code","895259d8":"code","7771c769":"code","d55643ec":"markdown","e56b44da":"markdown","6b3a9e06":"markdown","d7fb3c97":"markdown"},"source":{"faf5cb5e":"import pandas as pd\nimport matplotlib.pyplot as plt","6e6cad40":"df = pd.read_csv(\"..\/input\/salary-dataset\/salary_dataset.csv\")","3d844a19":"df.head()","2c4e2e18":"df.groupby([\"dept\", \"jobTitle\"])[\"basePay\"].describe()","a73e3deb":"summary_df = df.groupby([\"dept\", \"jobTitle\"])[\"basePay\"].describe().round(0)\n","895259d8":"df.boxplot(column=[\"basePay\"], by=[\"jobTitle\"], rot=90, grid=False)\nplt.title(f\"Base Pay by Job Title\")\nplt.suptitle('') # Removes the autogenerated label\nplt.xlabel('') # Sets the x axis label\nplt.ylabel('Base Pay') # Sets the y axis label\nplt.ylim(bottom=0, top=180000) # Sets the y axis lower and upper bounds\nplt.show()","7771c769":"# Get the name of all of the departments\n# We need this to feed through the iterator below\ndepartment_names = df['dept'].unique().tolist()\n    \nfor department in department_names:\n    # Generates smaller dataframe with just the data for a single department\n    subset_df = df[df['dept'] == department]\n    # Generates the box plot for each department\n    boxplot = subset_df.boxplot(column=\"basePay\", by=[\"jobTitle\"], rot=90)\n    plt.title(f\"Base Pay by Job Title in {department}\")\n    plt.suptitle('')\n    plt.xlabel('')\n    plt.ylabel('Base Pay')\n    plt.ylim(0, 180000)\n\nplt.show()","d55643ec":"The code below generates an overall Pay vs JobTitle boxplot. ","e56b44da":"To generate by department, you can do this by:\n- Generating a smaller dataframe of each department\n- Generating a plot for each smaller dataframe","6b3a9e06":"We didn't assign this table to a variable, therefore it is not saved anywhere. I do this below to the `summary_df` variable. ","d7fb3c97":"Your analysis grouped by `dept` first and then `jobTitle` to generate a range of different values. We can do this pretty concisely in pandas using the `describe` method. "}}