{"cell_type":{"a3d2d575":"code","8750bf39":"code","71c59c33":"code","22db6096":"code","5883ba31":"code","a215ef12":"code","f27f5c84":"code","86fb6f23":"code","aed7a7c7":"code","c8af98d1":"code","2638adad":"code","78c6ef22":"code","7fdac3fb":"code","1feef80f":"code","d16296cb":"code","ce2c3465":"code","ea4ecd13":"markdown","d844ad4d":"markdown","b72cdacb":"markdown","58e7c69f":"markdown","4f24a997":"markdown","543cf1a3":"markdown","6c62c632":"markdown","2dacf3d2":"markdown","dc8b59cd":"markdown","55e210cd":"markdown","8ac0a930":"markdown","595a3967":"markdown","c9097b99":"markdown","f58a7d4c":"markdown"},"source":{"a3d2d575":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport numpy as np\nimport pandas as pd\nimport time\nimport glob\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import imshow\nimport os\nimport cv2\nimport shutil\nfrom sklearn.metrics import confusion_matrix, classification_report","8750bf39":"tumor_dir='..\/input\/brain-mri-images-for-brain-tumor-detection\/yes'\nhealthy_dir='..\/input\/brain-mri-images-for-brain-tumor-detection\/no'\ndirlist=[tumor_dir, healthy_dir]\nclasses=['Brain Tumor', 'Healthy']\nfilepaths=[]\nlabels=[]\nfor d,c in zip(dirlist, classes):\n    flist=os.listdir(d)\n    for f in flist:\n        fpath=os.path.join (d,f)\n        filepaths.append(fpath)\n        labels.append(c)\nprint ('filepaths: ', len(filepaths), '   labels: ', len(labels))","71c59c33":"Fseries=pd.Series(filepaths, name='file_paths')\nLseries=pd.Series(labels, name='labels')\ndf=pd.concat([Fseries,Lseries], axis=1)\ndf=pd.DataFrame(np.array(df).reshape(253,2), columns = ['file_paths', 'labels'])\nprint(df['labels'].value_counts())","22db6096":"plt.figure(figsize=(14,10))\nfor i in range(10):\n    random = np.random.randint(1,len(df))\n    plt.subplot(2,5,i+1)\n    plt.imshow(cv2.imread(df.loc[random,\"file_paths\"]))\n    plt.title(df.loc[random, \"labels\"], size = 10, color = \"black\") \n    plt.xticks([])\n    plt.yticks([])\n    \nplt.show()","5883ba31":"train_df, test_df = train_test_split(df, train_size=0.95, random_state=0)\ntrain_df, valid_df = train_test_split(train_df, train_size=0.9, random_state=0)","a215ef12":"print(train_df.labels.value_counts())\nprint(valid_df.labels.value_counts())\nprint(test_df.labels.value_counts())","f27f5c84":"target_size=(299,299)\nbatch_size=64","86fb6f23":"train_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.inception_resnet_v2.preprocess_input, zoom_range=0.1, horizontal_flip=True, width_shift_range=0.05, height_shift_range=0.05)\ntest_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.inception_resnet_v2.preprocess_input)\ntrain_gen = train_datagen.flow_from_dataframe(train_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', class_mode='binary')\nvalid_gen = test_datagen.flow_from_dataframe(valid_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', class_mode='binary')\ntest_gen = test_datagen.flow_from_dataframe(test_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', class_mode='binary')","aed7a7c7":"base_model = tf.keras.applications.InceptionResNetV2(include_top=False, input_shape=(299,299,3), weights=None)","c8af98d1":"model = tf.keras.Sequential([\n    base_model, tf.keras.layers.GlobalAveragePooling2D(), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.BatchNormalization(), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(1, activation='sigmoid')\n])\nmodel.load_weights('..\/input\/brain-tumor-99-accuracy\/classify_model.h5')","2638adad":"lr=0.0001\nmodel.compile(loss='binary_crossentropy', optimizer=Adam(lr=lr), metrics=['accuracy'])","78c6ef22":"patience = 1\nstop_patience = 3\nfactor = 0.5\n\ncallbacks = [\n    tf.keras.callbacks.ModelCheckpoint(\"classify_model.h5\", save_best_only=True, verbose = 0),\n    tf.keras.callbacks.EarlyStopping(patience=stop_patience, monitor='val_loss', verbose=1),\n    tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=factor, patience=patience, verbose=1)\n]","7fdac3fb":"epochs = 30\nhistory = model.fit(train_gen, validation_data=valid_gen, epochs=epochs, callbacks=callbacks, verbose=1)","1feef80f":"best_model = model","d16296cb":"best_model.load_weights('.\/classify_model.h5')","ce2c3465":"best_model.evaluate(test_gen)","ea4ecd13":"# **Model Training**","d844ad4d":"# **Visualize MRI Images**","b72cdacb":"Dataset is inbalanced. ","58e7c69f":"# **InceptionResNetV2 Model**","4f24a997":"Disclaimer: I did not solely train this model on this data. I also trained this model on this larger [brain tumor dataset ](http:\/\/www.kaggle.com\/preetviradiya\/brian-tumor-dataset) first, then further trained the same model on this dataset. Relevant notebook is [here](http:\/\/www.kaggle.com\/vexxingbanana\/brain-tumor-99-accuracy\/notebook). ","543cf1a3":"# **Create Dataframe from Images**","6c62c632":"Compile Model with Loss and Metrics","2dacf3d2":"# **Creating Same Model Architecture and Loading Weights**","dc8b59cd":"Looks like we can do horizontal flips, zooming, width and height shifting with ImageDataGenerator. ","55e210cd":"# **Image Data Generator**","8ac0a930":"# **Import Libraries**","595a3967":"# **Train, Valid, Test Dataframe Splits**","c9097b99":"# **Callbacks**","f58a7d4c":"# **Model Predictions**"}}