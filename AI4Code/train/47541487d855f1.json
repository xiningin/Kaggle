{"cell_type":{"8db6d934":"code","8389108c":"code","e677dfe4":"code","a68afcfb":"code","00f07b7e":"code","d03a159f":"code","a8a8e299":"code","3a191310":"code","eee3309e":"code","e9d48c86":"code","1abfd745":"code","f8bae825":"code","89c4ea9a":"code","50260009":"code","c8951898":"code","4f92b1db":"code","d7fea24c":"code","4b1d43a0":"code","8a929a01":"code","1b243a81":"code","aa2e913e":"code","e9c2dcda":"code","187f35d6":"code","a24a5983":"code","19eb72ba":"markdown","e4df0704":"markdown","c81054b5":"markdown","2002d29a":"markdown","7eaec260":"markdown","50a22893":"markdown","bf79821d":"markdown","c69787bc":"markdown","36945850":"markdown","1ad2154e":"markdown","bd6401b3":"markdown","1f7f6e38":"markdown","5b368291":"markdown","a7aa49b3":"markdown","e6db3af6":"markdown","af35dc58":"markdown","98524ff8":"markdown","e031186c":"markdown","f48bfe65":"markdown"},"source":{"8db6d934":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras \nimport matplotlib.pyplot as plt\nimport os\nimport glob as gb \nimport cv2\nimport seaborn as sns\nsns.set(style=\"whitegrid\")","8389108c":"train=\"..\/input\/intel-image-classification\/seg_train\/\"\ntest=\"..\/input\/intel-image-classification\/seg_test\/\"\npred=\"..\/input\/intel-image-classification\/seg_pred\/\"","e677dfe4":"for folder in os.listdir(train+\"seg_train\"):\n    files=gb.glob(pathname=str(train+\"seg_train\/\/\"+folder +\"\/*.jpg\"))\n    print(f\" {len(files)} images are founnd in '{folder}' folder \/ training data.\")","a68afcfb":"for folder in os.listdir(test+\"seg_test\"):\n    files= gb.glob(pathname= str(test + \"seg_test\/\/\"+folder+ \"\/*.jpg\"))\n    print(f\" {len(files)} images are found in '{folder}' folder \/ testing data.\")","00f07b7e":"files= gb.glob(pathname=str(pred + \"seg_pred\/*.jpg\"))\nprint(f\"{len(files)} are found in predict data.\")","d03a159f":"train_imag_size=[]\nfor folder in os.listdir(train+\"seg_train\"):\n    files=gb.glob(pathname=str(train + \"seg_train\/\/\"+folder +\"\/*.jpg\"))\n    for file in files:\n        image=plt.imread(file)\n        train_imag_size.append(image.shape)\npd.Series(train_imag_size).value_counts()        ","a8a8e299":"test_image_size=[]\nfor folder in os.listdir(test+\"seg_test\"):\n    files = gb.glob(pathname=str(test + \"seg_test\/\/\"+ folder +\"\/*.jpg\"))\n    for image in files : \n        test_image=plt.imread(image)\n        test_image_size.append(test_image.shape)\npd.Series(test_image_size).value_counts()\n        ","3a191310":"pred_image_size=[]\nfiles=gb.glob (pathname=str(pred+\"seg_pred\/*.jpg\"))\nfor pred_image in files:\n    pred_images=plt.imread(pred_image)\n    pred_image_size.append(pred_images.shape)\npd.Series(pred_image_size).value_counts()\n","eee3309e":"image_resize=100","e9d48c86":"code={\"buildings\":0,\"forest\":1,\"glacier\":2,\"mountain\":3,\"sea\":4,\"street\":5}\ndef place(n):\n    for item in code:\n        if n == code[item]:\n            return item","1abfd745":"xtrain=[]\nytrain=[]\nfor folder in os.listdir(train+\"seg_train\"):\n    files = gb.glob(pathname=str(train+\"seg_train\/\/\"+ folder +\"\/*.jpg\"))\n    for file in files: \n        train_image=plt.imread(file)\n        image_size=cv2.resize(train_image,(image_resize,image_resize))\n        xtrain.append(list(image_size))\n        ytrain.append(code[folder])\n   \nprint(len(xtrain),len(ytrain))\n\n        ","f8bae825":"xtest=[]\nytest=[]\nfor folder in os.listdir(test+\"seg_test\"):\n    files = gb.glob(pathname=str(test+\"seg_test\/\/\"+ folder +\"\/*.jpg\"))\n    for file in files: \n        test_image=plt.imread(file)\n        image_size=cv2.resize(test_image,(image_resize,image_resize))\n        xtest.append(list(image_size))\n        ytest.append(code[folder])\n   \nprint(len(xtest),len(ytest))\n","89c4ea9a":"X_pred = []\nfiles = gb.glob(pathname= str(pred + 'seg_pred\/*.jpg'))\nfor file in files: \n    pred_image = cv2.imread(file)\n    new_pred_image = cv2.resize(pred_image, (image_resize,image_resize))\n    X_pred.append(list(new_pred_image)) \nprint(len(X_pred))    ","50260009":"plt.figure(figsize=(20,20))\nfor n, i in enumerate ((np.random.randint(0,len(xtrain),36))):\n    plt.subplot(6,6,n+1)\n    plt.imshow(xtrain[i])\n    plt.title(place(ytrain[i]))\n    plt.axis(\"off\")","c8951898":"plt.figure(figsize=(20,20))\nfor n, i in enumerate (np.random.randint(0,len(xtest),36)):\n    plt.subplot(6,6,n+1)\n    plt.imshow(xtest[i])\n    plt.axis(\"off\")\n    plt.title(place(ytest[i]))","4f92b1db":"plt.figure(figsize=(20,20))\nfor n,i in enumerate(np.random.randint(0,len(X_pred),36)):\n    plt.subplot(6,6,n+1)\n    plt.imshow(X_pred[i])\n    plt.axis(\"off\")","d7fea24c":"xtrain=np.array(xtrain)\nytrain=np.array(ytrain)\nxtest=np.array(xtest)\nytest=np.array(ytest)\nxpred=np.array(X_pred)\n\nprint(\"The shape of xtrain\",xtrain.shape)\nprint(\"The shape of ytrain \",ytrain.shape)\nprint(\"The shape of xtest \",xtest.shape)\nprint(\"The shape of ytest \",ytest.shape)\nprint(\"The shape of xpred\",xpred.shape)\n","4b1d43a0":"# Build the model:\nmodel=keras.models.Sequential([\n        keras.layers.Conv2D(256,kernel_size=(5,5),activation=\"relu\",input_shape=(image_resize,image_resize,3)),\n        keras.layers.Conv2D(124,kernel_size=(5,5),activation=\"relu\"),\n        keras.layers.MaxPool2D(pool_size=(4,4),strides=(2,2)),\n        keras.layers.Conv2D(64,(3,3),activation=\"relu\"),\n        keras.layers.Conv2D(32,(3,3),activation=\"relu\"),\n        keras.layers.MaxPool2D(2,2),\n        keras.layers.Flatten(),\n        keras.layers.Dense(512,activation=\"relu\"),\n        keras.layers.Dense(256,activation=\"relu\"),\n        keras.layers.Dense(64,activation=\"relu\"),\n        keras.layers.Dropout(rate=0.5) ,\n        keras.layers.Dense(6,activation=\"softmax\"),\n\n        ])","8a929a01":"model.compile(optimizer=\"adam\",loss=\"sparse_categorical_crossentropy\",metrics=[\"accuracy\"])\nprint(model.summary())","1b243a81":"Ckechpoint=keras.callbacks.ModelCheckpoints(\"my_model.h5\")\nearlystopping=keras.callbacks.EarlyStopping(patience=10,restore_best_weights=True)","aa2e913e":"model.fit(xtrain,ytrain,epochs=30,batch_size=200,verbose=1,callbacks=[Ckechpoint,earlystopping])","e9c2dcda":"model_loss,model_accuracy=model.evaluate(xtest,ytest)\nprint(model_loss,model_accuracy","187f35d6":"ypred=model.predict(xpred)\nprint(ypred.shape)","a24a5983":"plt.figure(figsize=(20,20))\nfor n, i in enumerate (np.random.randint(0,len(xpred),36)):\n    plt.subplot(6,6,n+1)\n    plt.imshow(xpred[i])\n    plt.axis(\"off\")\n    plt.title(place(np.argmax(ypred[i])))\n    ","19eb72ba":"## Import the dataset:","e4df0704":"### Plot a sample of predict images:","c81054b5":"### Testing data:","2002d29a":"## Resize the images:","7eaec260":"### Callback feature:","50a22893":"## Check the images size:","bf79821d":"### Test Images:","c69787bc":"## Import all needed libraries:","36945850":"### Design a model:","1ad2154e":"### plot a sample of train images:","bd6401b3":"### Train images:","1f7f6e38":"### Pred images:","5b368291":"### Training data:","a7aa49b3":"### change the size of test images:","e6db3af6":"### Plot a sample of test images:","af35dc58":"## Open the folders:","98524ff8":"### Prediction data:","e031186c":"### Change the size of Predict images:","f48bfe65":"### Check the new size:"}}