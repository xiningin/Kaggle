{"cell_type":{"91758320":"code","d94646e6":"code","d624885a":"code","29ce7c78":"code","8c99ac1e":"code","83886781":"code","68c71685":"code","cae18def":"code","b14b704d":"code","a6544173":"code","f269eff7":"code","f9af750e":"code","e2a8e83f":"code","fca0077b":"code","826b4ec7":"code","3d1b5644":"code","76712cc6":"code","9f2c4fbb":"code","a6ff5f04":"code","9b725c6f":"code","11c8ad83":"code","5f798789":"code","a65f65bb":"code","cbf5cfe8":"code","792b2841":"code","49e0c237":"code","bb565bbd":"code","530699ef":"code","7329b341":"code","08f7c5e3":"code","89df0e78":"code","3958af28":"code","d5833070":"code","84b7dba1":"code","c5e8cc38":"code","c32543e8":"code","685a8cfa":"code","8103eae5":"code","13d14b32":"code","e64a9cd4":"code","ab98d1be":"code","df779a81":"code","a649f634":"code","8d7a8c00":"code","b846cfbb":"code","3149ca22":"code","39e780a4":"code","a75cf289":"code","ec4367b0":"code","6178d97e":"code","a3dfa3af":"code","acf63499":"code","e4410c7f":"code","ef340d49":"code","59ba1ad9":"code","380f973b":"code","57b20eaa":"code","e99528ed":"code","15b92f1d":"code","8c111d56":"code","70247422":"code","68e61a55":"code","eae71fcf":"code","61e53063":"code","75d07b56":"code","fe5c8a96":"code","498c4f9c":"code","e228ebac":"code","dd0bf318":"code","0a45ff04":"code","ffc49e6c":"code","64f1d351":"code","ef15a333":"code","9c29fefc":"code","0dc203d1":"code","3eb53b42":"code","d7c18b15":"code","5580ca23":"markdown","e538e363":"markdown","11a97518":"markdown","efd807a5":"markdown","6956d317":"markdown","bdf44d55":"markdown","e6b9ecab":"markdown","efe45618":"markdown","143134f1":"markdown","ca9f957e":"markdown","8f9e9545":"markdown","74ba8d8e":"markdown","de2fe910":"markdown","30ba8d7a":"markdown","d99cd537":"markdown","a57470ad":"markdown","fcbf1681":"markdown","99c4b0bd":"markdown","6ce0d293":"markdown","e9deb38e":"markdown","eb0f2c8b":"markdown","9a1b565c":"markdown","d74c0af4":"markdown","8b38811f":"markdown","271f151f":"markdown"},"source":{"91758320":"import json # For dealing with GeoJSON file\nimport folium # For manipulating the openstreet map\nimport requests # For handling http requests\nimport pandas as pd # For Data Analysis\n\nimport matplotlib.pyplot as plt # For Visualization\nimport matplotlib.animation as animation\nimport seaborn as sns # For Visualization\nimport plotly as ply # For Visualization\n\nfrom shapely.geometry import Polygon # For Geom Merging\nfrom shapely.ops import cascaded_union\nimport shapely\n\nplt.style.use(\"fivethirtyeight\")","d94646e6":"geojson_file = open('..\/input\/covid-19-india-district-wise\/indian_states_geom.json',)\ngeojson_india = json.load(geojson_file)\n","d624885a":"#print(geojson_india[\"features\"])","29ce7c78":"# Find the Length of GeoJson Features\nlen(geojson_india[\"features\"])\n","8c99ac1e":"geojson_india[\"features\"][1]\n# Here we can see, its having a properties, and inside properties its having Name of the state","83886781":"# Printing the States\nfor itr in range(len(geojson_india[\"features\"])):\n    print(itr, geojson_india[\"features\"][itr][\"properties\"][\"NAME_1\"])","68c71685":"state_list = []\nfor itr in range(len(geojson_india[\"features\"])):\n    state_name = geojson_india[\"features\"][itr][\"properties\"][\"NAME_1\"]\n    state_list.append(state_name)","cae18def":"print(state_list)","b14b704d":"point_geom_in_tn = [10.919617760254697,78.233642578125]\nmap = folium.Map(\n    location=point_geom_in_tn,\n    zoom_start=7)\nmap","a6544173":"# We will be passing the geojson_india data to geo_data Parameter of Choropleth\nchoropleth = folium.Choropleth(\n    geo_data=geojson_india,\n    key_on='feature.properties.NAME_2',\n    fill_color='YlGn',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    highlight=True,\n    line_color='black'\n).add_to(map)\n\nmap","f269eff7":"vaccine_df = pd.read_csv(\"..\/input\/covid-19-india-district-wise\/vaccine_doses_statewise_v2.csv\")","f9af750e":"vaccine_df.head()","e2a8e83f":"vaccine_df.tail(200)","fca0077b":"vaccine_df.columns = [x.lower().replace(\" \",\"_\") for x in vaccine_df.columns]","826b4ec7":"vaccine_df","3d1b5644":"vaccine_df.info()","76712cc6":"vaccine_df.vaccinated_as_of = pd.to_datetime(vaccine_df.vaccinated_as_of)","9f2c4fbb":"vaccine_df.info()","a6ff5f04":"vaccine_df.drop_duplicates(subset=['state','vaccinated_as_of'], keep=\"last\", inplace=True)","9b725c6f":"vaccine_df.isnull().sum()","11c8ad83":"vaccine_df.dropna(subset=['first_dose_administered', 'second_dose_administered', 'total_doses_administered'], inplace=True)","5f798789":"vaccine_df.isnull().sum()","a65f65bb":"# Creating a new columns called month and year\nvaccine_df[\"month\"] = vaccine_df.vaccinated_as_of.dt.month_name()\nvaccine_df[\"day\"] = vaccine_df.vaccinated_as_of.dt.day_name()\nvaccine_df[\"date_of_month\"] = vaccine_df.vaccinated_as_of.dt.day\nvaccine_df[\"year\"] = vaccine_df.vaccinated_as_of.dt.year","cbf5cfe8":"vaccine_df.head()","792b2841":"_state_name = 'Tamil Nadu'","49e0c237":"vaccine_df[vaccine_df.state == _state_name]","bb565bbd":"tn_df = vaccine_df[vaccine_df.state == _state_name].copy()","530699ef":"tn_df.head(100)","7329b341":"filtered_df = tn_df.sort_values(by=[\"vaccinated_as_of\"]).groupby([\"month\"]).tail(1)","08f7c5e3":"from datetime import datetime\nmonth_end = filtered_df[filtered_df.vaccinated_as_of<=datetime.today()]","89df0e78":"month_end","3958af28":"plt.figure(figsize=(12,5))\nsns.lineplot(x=\"month\", y=\"first_dose_administered\", data=month_end, legend=True)\nsns.lineplot(x=\"month\", y=\"second_dose_administered\", data=month_end, legend=True)\nsns.lineplot(x=\"month\", y=\"total_doses_administered\", data=month_end, legend=True)\nplt.legend([\"First Dose\", \"Second Dose\", \"Total Dose\"])\nplt.show()","d5833070":"plt.figure(figsize=(12,5))\nsns.barplot(x=\"month\", y=\"first_dose_administered\", data=month_end)\nsns.barplot(x=\"month\", y=\"second_dose_administered\", data=month_end)\nsns.barplot(x=\"month\", y=\"total_doses_administered\", data=month_end)\nplt.show()","84b7dba1":"# Since the data is a cumulative for each day (i.e the data is being added upon wrt previous day)\ndef populate_by_each_day(data):\n    prev = None\n    result = []\n    for index, val in enumerate(data):\n        if index == 0:\n            result.append(val)\n        else:\n            result.append(val-prev)\n        prev = val\n    return result","c5e8cc38":"tn_df.first_dose_administered = populate_by_each_day(tn_df.first_dose_administered)\ntn_df.second_dose_administered = populate_by_each_day(tn_df.second_dose_administered)","c32543e8":"tn_df.head()","685a8cfa":"filtered_df = tn_df.sort_values(by=[\"vaccinated_as_of\"]).groupby([\"day\"]).first_dose_administered.sum()","8103eae5":"# Sorting by WeekDays\nfiltered_df = filtered_df.reindex([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"])","13d14b32":"plt.figure(figsize=(12,5))\nsns.barplot(x=filtered_df.index, y=filtered_df.values)\nplt.xlabel(\"Day\")\nplt.ylabel(\"Vaccination Counts\")\nplt.title(f\"Vaccination Count On Each Day {_state_name}\")\nplt.show()","e64a9cd4":"filtered_df = tn_df.sort_values(by=[\"vaccinated_as_of\"]).groupby([\"month\"]).first_dose_administered.sum()\nfiltered_df_sd = tn_df.sort_values(by=[\"vaccinated_as_of\"]).groupby([\"month\"]).second_dose_administered.sum()","ab98d1be":"filtered_df","df779a81":"import calendar\n_month_names = []\nfor month_idx in range(1, 13):\n    _month_names.append(calendar.month_name[month_idx])","a649f634":"# Sorting by Month Names\nfiltered_df = filtered_df.reindex(_month_names)\nfiltered_df_sd = filtered_df_sd.reindex(_month_names)","8d7a8c00":"filtered_df","b846cfbb":"fig = plt.figure(figsize=(12,5))\nax = fig.add_subplot(111)\nax.bar(x=filtered_df.index, height=filtered_df.values)\nax.bar(x=filtered_df_sd.index, height=filtered_df_sd.values)\nplt.xlabel(\"Month\")\nplt.ylabel(\"Vaccination Counts\")\nplt.title(f\"Vaccination Count On Each Day {_state_name}\")\nplt.legend([\"First Dose\", \"Second Dose\"])\nplt.xticks(rotation=45)\nplt.show()","3149ca22":"# Seeing all the Statelist in the covid data frame\nvaccine_df.head()","39e780a4":"vaccine_df.dropna(subset=[\"first_dose_administered\",\"second_dose_administered\", \n                          \"total_doses_administered\"],\n                 inplace=True)","a75cf289":"vaccine_df.head()","ec4367b0":"# States Available\nvaccine_df.state.unique()","6178d97e":"vaccine_df.sort_values(by=['state','vaccinated_as_of'], inplace=True)","a3dfa3af":"vaccine_df.head()","acf63499":"# Taking the Latest Value of each state\nfiltered_df = vaccine_df[vaccine_df.vaccinated_as_of <= datetime.today()].groupby(\"state\").tail(1)","e4410c7f":"filtered_df.head()\n","ef340d49":"df_state_list = filtered_df.state.tolist()","59ba1ad9":"# At the beginning we filtered the state list available in geojson geometry, \n# now we can compare both of them","380f973b":"print(state_list)\n","57b20eaa":"print(df_state_list)","e99528ed":"# Printing the States from Geojson\nfor itr in range(len(geojson_india[\"features\"])):\n    print(itr, geojson_india[\"features\"][itr][\"properties\"][\"NAME_1\"])","15b92f1d":"# Geom of Dadra and Nagar Haveli\ngeom1 = Polygon(geojson_india[\"features\"][7]['geometry']['coordinates'][0])\ngeom1","8c111d56":"# Daman and Diu - Its having 4 Geoms\ngeom2 = Polygon(geojson_india[\"features\"][8]['geometry']['coordinates'][0][0])\ngeom2","70247422":"geom3 = Polygon(geojson_india[\"features\"][8]['geometry']['coordinates'][1][0])\ngeom3","68e61a55":"geom4 = Polygon(geojson_india[\"features\"][8]['geometry']['coordinates'][2][0])\ngeom4","eae71fcf":"geom5 = Polygon(geojson_india[\"features\"][8]['geometry']['coordinates'][3][0])\ngeom5","61e53063":"union_geom = cascaded_union([geom1, geom2, geom3, geom4, geom5])","75d07b56":"shapely.geometry.mapping(union_geom)[\"coordinates\"]","fe5c8a96":"geojson_india[\"features\"][8][\"geometry\"][\"coordinates\"] = shapely.geometry.mapping(union_geom)[\"coordinates\"]","498c4f9c":"geojson_india[\"features\"][8][\"properties\"][\"NAME_1\"] = \"Dadra and Nagar Haveli and Daman and Diu\"","e228ebac":"del geojson_india[\"features\"][7]","dd0bf318":"# Printing the States from Geojson\nfor itr in range(len(geojson_india[\"features\"])):\n    print(itr, geojson_india[\"features\"][itr][\"properties\"][\"NAME_1\"])","0a45ff04":"state_mapping = {\n    \"Andaman and Nicobar Islands\":\"Andaman and Nicobar\",\n    \"Odisha\":\"Orissa\",\n    \"Uttarakhand\":\"Uttaranchal\"\n}\nfiltered_df.state.replace(state_mapping, inplace=True)","ffc49e6c":"filtered_df.state","64f1d351":"# Dropping Miscellaneous and Total from DF\nfiltered_df.drop(10752, inplace=True)\nfiltered_df.drop(10753, inplace=True)\n","ef15a333":"map_object = folium.Map(\n    location=point_geom_in_tn,\n    zoom_start=7\n)\n\nchoropleth = folium.Choropleth(\n    geo_data=geojson_india,\n    key_on='feature.properties.NAME_1',\n    data=filtered_df, \n    columns=['state', 'first_dose_administered'], \n    fill_color='YlGn',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    highlight=True\n).add_to(map_object)\n\nmap_object","9c29fefc":"filtered_df","0dc203d1":"state = filtered_df[[\"state\"]].values.tolist()\ntotal_doses = filtered_df[[\"total_doses_administered\"]].values.tolist()\nstate_dose = {}\nfor key, value in zip(state, total_doses):\n    state_dose[key[0]] = value[0]","3eb53b42":"for itr in range(len(geojson_india[\"features\"])):\n    _data = geojson_india[\"features\"][itr][\"properties\"]\n    _state_name = geojson_india[\"features\"][itr][\"properties\"][\"NAME_1\"]\n    _data[\"content\"] = f\"{_state_name} \\n {state_dose.get(_state_name)}\"\n","d7c18b15":"map = folium.Map(\n    location=point_geom_in_tn,\n    zoom_start=7\n)\n\nchoropleth = folium.Choropleth(\n    geo_data=geojson_india,\n    key_on='feature.properties.NAME_1',\n    data=filtered_df, \n    columns=['state', 'total_doses_administered'], \n    fill_color='OrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    highlight=True,\n    legend_name=\"Covid Dosage\"\n).add_to(map)\n\nchoropleth.geojson.add_child(\n    folium.features.GeoJsonTooltip(['content'], labels=False,\n                                   style=('background-color: grey; color: white;'))\n)\n\nmap","5580ca23":"# 3. Generation of Map","e538e363":"## Structure of GeoJson : \n\nGeojson follows the JSON formatting. For more information, please checkout https:\/\/geojson.io\n\nPlease find the below Example for reference, \n\n\n<pre>\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [102.0, 0.5]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\"\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": [\n          [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\n        ]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\",\n        \"prop1\": 0.0\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n            [100.0, 1.0], [100.0, 0.0]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\",\n        \"prop1\": { \"this\": \"that\" }\n      }\n    }\n  ]\n}\n<\/pre>","11a97518":"## 1. Vaccination Count at the End of each month","efd807a5":"# 5. Loading Daily Vaccination data","6956d317":"Since there are some mismatches in the naming of states we can correct the details in the dataframe (Since manipulating values in df easy compared to geojson)","bdf44d55":"# 4. Simple Choropleth\n","e6b9ecab":"# 1. Loading Libraries","efe45618":"GeoJSON is an open standard format designed for representing simple geographical features, along with their non-spatial attributes. It is based on the JSON format.\n\nThe features include points (therefore addresses and locations), line strings (therefore streets, highways and boundaries), polygons (countries, provinces, tracts of land), and multi-part collections of these types. GeoJSON features need not represent entities of the physical world only; mobile routing and navigation apps, for example, might describe their service coverage using GeoJSON.\n\nPlease find the GeoJson data for India [here]()","143134f1":"Create a state list that are having the polygon geometry.","ca9f957e":"## Exploring GeoJson","8f9e9545":"#### From the above we can see that more vaccinations for the Tamil Nadu is happened in Thursday","74ba8d8e":"# 2. Based on Day","de2fe910":"#### Now we can map the remaining names same as the GeoJson","30ba8d7a":"# 3. Based on Months","d99cd537":"# 6. Visualization of a State ","a57470ad":"# 2. Loading GeoJson Data","fcbf1681":"India began administration of COVID-19 vaccines on 16 January 2021. As of 27 October 2021, India has administered over 1.04 billion doses overall, including first and second doses of the currently-approved vaccines. In India, nearly half the eligible population has got at least one shot, and 19 per cent received both nine months after the vaccine rollout.\n\nIndia initially approved the Oxford\u2013AstraZeneca vaccine (manufactured under license by Serum Institute of India under the trade name Covishield) and Covaxin (a vaccine developed locally by Bharat Biotech). They have since been joined by the Sputnik V (manufactured under license by Dr. Reddy's Laboratories, with additional production from Serum Institute of India being started in September), Moderna vaccines, Johnson & Johnson vaccine and ZyCoV-D (a vaccine locally developed by Zydus Cadila) and other vaccine candidates undergoing local clinical trials.\n\n\nIn this notebook we can try to find out answers for some questions, \n1. Which State is leading in Vaccination ?\n2. On Which day there is more vaccination is taken place ?\n3. Month wise comparison. \n4. Choropleth Map plotting","99c4b0bd":"# COVID-19 vaccination in India","6ce0d293":"<b>Upvote<\/b> if you liked it !","e9deb38e":"From the above map, we can see that highest no of dosages is been implemented on Uttarpradesh. ","eb0f2c8b":"- ####  From the above plot its evident that, more of vaccinations were given in the month of august and september. (That is the time after second wave of corona).\n\n- #### Also, Second dosage of vaccine is less compared to the First Dose.","9a1b565c":"At Index 7 and 8 were the Dadra and Nagar Haveli, Daman and Diu","d74c0af4":"There is one problem, 'Dadra and Nagar Haveli and Daman and Diu' is been considered a single state in the vaccination details, but in the geojson its considered as two different items.  'Dadra and Nagar Haveli', 'Daman and Diu'\n\n\nSo we can try to combine them both in geojson. (If we are doing it in Dataframe, we need to know the exact seperation of the details for both areas. Instead, we can merge the \ngeometry)\n\n","8b38811f":"# 7. Visualization of India","271f151f":"We can consider a particular state and we can visulize the data. Here we can consider \"Tamil Nadu\""}}