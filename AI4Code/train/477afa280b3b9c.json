{"cell_type":{"414f64e7":"code","2e758b03":"code","9aa6f550":"code","dd2017ba":"code","469a9e82":"code","9d6a8be8":"code","da68520b":"code","557faf55":"code","7057e996":"code","00bf3e2e":"code","1507f080":"code","3870796e":"markdown","a702bb09":"markdown","f26ab2bc":"markdown"},"source":{"414f64e7":"from sklearn.cluster import KMeans\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_wine\nfrom sklearn.metrics import adjusted_rand_score\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","2e758b03":"data = load_wine()","9aa6f550":"x_wine = data.data\ny_wine = data.target","dd2017ba":"x_df = pd.DataFrame(x_wine, columns=data.feature_names)\ny_df = pd.DataFrame(y_wine, columns=['target'])","469a9e82":"x_df.info()","9d6a8be8":"y_df.info()","da68520b":"x_train, x_test, y_train, y_test = train_test_split(x_df, y_df, test_size=0.2)","557faf55":"model_errors = []\nfor i in range(1, 10):\n    model = KMeans(n_clusters=i)\n    model.fit(x_train)\n    model_errors.append(model.inertia_)\nplt.plot(range(1, 10), model_errors)","7057e996":"model = KMeans(n_clusters=3).fit(x_train)","00bf3e2e":"# Accuracy with all dataset\nadjusted_rand_score(y_wine, model.predict(x_wine))","1507f080":"# Accuracy with test data\nadjusted_rand_score(y_test.to_numpy().reshape(-1,), model.predict(x_test))","3870796e":"**Training**","a702bb09":"**Data cleaning and exploration**","f26ab2bc":"**Accuracy**"}}