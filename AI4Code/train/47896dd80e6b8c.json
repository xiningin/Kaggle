{"cell_type":{"598c60d0":"code","97f01582":"code","62daec59":"code","6e40ee37":"code","888687ae":"code","f289f667":"code","27c748fc":"code","ce391873":"code","1b223f95":"code","cd563e5d":"code","de122e81":"code","9a18e8b8":"code","48a129aa":"code","3f51d711":"code","0667c8b9":"code","bebab587":"markdown","2216b9a3":"markdown","0f1727f0":"markdown","be2a2d15":"markdown","62c5e656":"markdown","20522c50":"markdown","8d8e6b11":"markdown","dbeeb1d5":"markdown","fc37a490":"markdown","5ccaeb43":"markdown","13451b46":"markdown","a60f6bee":"markdown","5d99e58d":"markdown","272c1de3":"markdown"},"source":{"598c60d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","97f01582":"Pokedex = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\nPokedex[\"Type 2\"].fillna(\"-\", inplace = True)\nPokedex","62daec59":"\nBoxPlotPkdex = pd.melt(Pokedex, id_vars = [\n    \"#\", \n    \"Name\", \n    \"Type 1\", \n    \"Type 2\", \n    \"Generation\"\n    ], value_vars = [\n    #\"Total\",\n    \"HP\", \"Attack\", \"Defense\", \"Sp. Atk\",\n    \"Sp. Def\", \"Speed\"    \n])\nplt.figure(figsize=(12,5))\nax = sns.boxplot(x=\"variable\", y=\"value\", data=BoxPlotPkdex)\nplt.title(\"Skills Boxplot\")\nplt.xlabel(\"Skills\")\nplt.ylabel(\"Value\");\n\n","6e40ee37":"sns.pairplot(Pokedex[['Total', 'HP', 'Attack', 'Defense','Sp. Atk', 'Sp. Def', 'Speed']]);","888687ae":"# Features correlation\nSkills = [ 'HP', 'Attack', 'Defense','Sp. Atk', 'Sp. Def', 'Speed']\nsns.heatmap(Pokedex[Skills].corr(),cmap=\"YlGnBu\", annot=True);\nplt.title(\"Feature Correlation Map\");","f289f667":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_samples, silhouette_score\n#import matplotlib.cm as cm\nfrom sklearn.preprocessing import StandardScaler\nscale = StandardScaler()\nStdScale = scale.fit_transform(Pokedex[Skills])\n\nn_max_clusters = 15\n# Elbow Method\nscore = []\nfor cluster in range(1,n_max_clusters):\n    kmeans_f = KMeans(n_clusters = cluster, init=\"k-means++\", random_state=10)\n    kmeans_f.fit(StdScale)\n    score.append(kmeans_f.inertia_)","27c748fc":"# plotting elbow graphics\n\nplt.plot(range(1,n_max_clusters), score)\nplt.scatter(range(1,n_max_clusters), score)\n\nplt.title('The Elbow Chart')\nplt.xlabel('number of clusters')\nplt.ylabel('Inertia')\n\nn = 5\nplt.annotate(f\"Number of clusters = {n}\", xy=(n, score[n]), xytext=(n-3, score[n]*0.8), arrowprops=dict(arrowstyle=\"->\"))\n\n\nplt.show()","ce391873":"# Running the model with number of clusters determined by Elbow MEthod\nkmeans = KMeans(n_clusters = n, init=\"k-means++\", random_state=10)\nkmeans.fit(StdScale)\nPokedex[\"Clusters\"] = kmeans.labels_\n\nCentroids = pd.DataFrame(scale.inverse_transform(kmeans.cluster_centers_))\nCentroids.columns = Skills\nCentroids[\"Clusters\"] = [0,1,2,3,4]","1b223f95":"sns.pairplot(Pokedex[['Total', 'HP', 'Attack', 'Defense','Sp. Atk', 'Sp. Def', 'Speed', \"Clusters\"]], hue = \"Clusters\");","cd563e5d":"\nBoxPlotPkdex = pd.melt(Pokedex, id_vars = [\n    \"#\", \n    \"Name\", \n    \"Type 1\", \n    \"Type 2\", \n    \"Generation\",\n    \"Clusters\"\n    ], value_vars = [\n    #\"Total\",\n    \"HP\", \"Attack\", \"Defense\", \"Sp. Atk\",\n    \"Sp. Def\", \"Speed\"    \n])\nplt.figure(figsize=(12,5))\nax = sns.boxplot(x=\"variable\", y=\"value\", hue = \"Clusters\", data=BoxPlotPkdex)\nplt.title(\"Skills Boxplot\")\nplt.xlabel(\"Skills\")\nplt.ylabel(\"Value\");\n\n","de122e81":"GroupedPokedex = Pokedex.groupby([\"Clusters\"])\n","9a18e8b8":"Centroids.astype(int)","48a129aa":"Pokedex.groupby([\"Clusters\"]).agg({\n    'HP': 'median', \n    'Attack': 'median', \n    'Defense': 'median', \n    'Sp. Atk': 'median', \n    'Sp. Def': 'median', \n    'Speed': 'median'})","3f51d711":"GroupedPokedex.get_group(4).sort_values(\"HP\")\n#.sample(5)#\n# EX: Caterpie, Porygon and Magikarp\n#EX: AegislashBlade Forme, Kyogre Primal and MewtwoMega Mewtwo Y\n# EX: Accelgor, Ninjask and Crobat\n# EX: Shuckle, Regirock and Steelix","0667c8b9":"Pokedex.to_csv(\"PokedexCluster.csv\", index=False)","bebab587":"# The Elbow Method\n\nThe Elbow method will help us to determine the ideal number of clusters for the KMeans model by minimizing Inertia.\n\nKMeans calculates the distance between the sample points and the center point of the cluster they belong to, the best scenario is the one where distances of the center points are the smallest possible (take care with overfitting).\n\nIn practice, the  [K-means algorithm ](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html) is one of the fastest clustering algorithms available, so we can run it in a for loop with a range of the number of clusters and check the KMeans attribute named Inertia.\n\n    inertia_ : float\n        Sum of squared distances of samples to their closest cluster center.\n\n","2216b9a3":"Plotting the Mean and the Median of the Clusters Skills in a Radar Chart may show us their main characteristics.\n\nNote: You can use .clusters_center attribute to get the means for each skill used in KMeans Method\n\n    cluster_centers_ : ndarray of shape (n_clusters, n_features)\n        Coordinates of cluster centers. If the algorithm stops before fully converging (see tol and max_iter), these will not be consistent with labels_.\n\nFor radar charts, I do recommend [Flourish](https:\/\/flourish.studio\/).\nIt provides us many chart samples that you can use and save you a lot of work time coding to plot in Python.\n\n<iframe src='https:\/\/flo.uri.sh\/visualisation\/5070209\/embed' title='Interactive or visual content' frameborder='0' scrolling='no' style='width:100%;height:300px;'><\/iframe><div style='width:100%!;margin-top:4px!important;text-align:right!important;'><a class='flourish-credit' href='https:\/\/public.flourish.studio\/visualisation\/5070209\/?utm_source=embed&utm_campaign=visualisation\/5070209' target='_top' style='text-decoration:none!important'><img alt='Made with Flourish' src='https:\/\/public.flourish.studio\/resources\/made_with_flourish.svg' style='width:105px!important;height:16px!important;border:none!important;margin:0!important;'> <\/a><\/div>\n\n\nThe Medians are quite similar to the Means\n\n<iframe src='https:\/\/flo.uri.sh\/visualisation\/5070399\/embed' title='Interactive or visual content' frameborder='0' scrolling='no' style='width:100%;height:300px;'><\/iframe><div style='width:100%!;margin-top:4px!important;text-align:right!important;'><a class='flourish-credit' href='https:\/\/public.flourish.studio\/visualisation\/5070399\/?utm_source=embed&utm_campaign=visualisation\/5070399' target='_top' style='text-decoration:none!important'><img alt='Made with Flourish' src='https:\/\/public.flourish.studio\/resources\/made_with_flourish.svg' style='width:105px!important;height:16px!important;border:none!important;margin:0!important;'> <\/a><\/div>","0f1727f0":"The Heat Map below shows us how features are correlated.","be2a2d15":"# KMeans\n\n**KMeans is easy to understand and very practical to use, it is very useful to give you quick insights about the data you are studying. It is very useful for a variety of applications such as market segmentation, document clustering, image segmentation and image compression, etc.**\n\nThe video below, StatQuest show us how KMeans Method works :)\n\n<iframe width=\"598\" height=\"338\" src=\"https:\/\/www.youtube.com\/embed\/4b5d3muPQmA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>\n\nIn KMeans, we need to set the number of clusters (K = number of clusters) and sometimes you lack knowledge of the problem or it is hard to identify the best K by taking a look at the descriptive and exploratory analysis. \n\nEven if you could be able to set an initial number of cluster based on your problem's knowledge, it's good advice to check the elbow method or silhouette analysis to confirm how many clusters would fit better in your KMeans Method.","62c5e656":"Before clustering, let's take a look on Pokemons Skills.\n\nBoxplot give us the basic stats of each feature.","20522c50":"# Exploring the Clusters KMeans found\nLet's take a look at the particulars of Clusters we found using the KMeans Method.\n\nFirst, we have here pairplot now with Clusters KMeans has found.","8d8e6b11":"# Feature selection\nAs described in dataset infos, Total: the sum of all stats that come after this, a general guide to how strong a pokemon is. So it will not be used as a feature in this model.\nThe features used are the Skills below:\n* Attack: the base modifier for normal attacks (eg. Scratch, Punch)\n* Defense: the base damage resistance against normal attacks\n* SP Atk: special attack, the base modifier for special attacks (e.g. fire blast, bubble beam)\n* SP Def: the base damage resistance against special attacks\n* Speed: determines which pokemon attacks first each round\n","dbeeb1d5":"# POKMeans\n\nHello there!!! \n\nIn simple words, the Clustering aim is to segregate groups with similar traits and assign them into clusters. It may help you defining actions for a group of elements instead of dealing one by one, and elements could be customers, tasks, students, projects, products ... and Pokemons!\n\nSo in this notebook, I am going to apply KMeans on Pokemon Stats, could we get good clusters based on Pokemons Skills?\n\n![Pokemon.png](attachment:Pokemon.png)","fc37a490":"\n\nComplete viz of pokemon and clusters\n\n<iframe src='https:\/\/flo.uri.sh\/visualisation\/5094527\/embed' title='Interactive or visual content' frameborder='0' scrolling='no' style='width:100%;height:600px;'><\/iframe><div style='width:100%!;margin-top:4px!important;text-align:right!important;'><a class='flourish-credit' href='https:\/\/public.flourish.studio\/visualisation\/5094527\/?utm_source=embed&utm_campaign=visualisation\/5094527' target='_top' style='text-decoration:none!important'><img alt='Made with Flourish' src='https:\/\/public.flourish.studio\/resources\/made_with_flourish.svg' style='width:105px!important;height:16px!important;border:none!important;margin:0!important;'> <\/a><\/div>","5ccaeb43":"In the pair plot above, we can already see that Cluster 1 (orange dots) are the strongest group of Pokemons with a high number of points in almost all skills. On the other hand, Cluster 0 (blue dots) are the weakest group.\n\nThe groups in between are mixed and seem to have some particularity in each skill, it is hard to determine their characteristics by taking a look at pairplot","13451b46":"In Pairplor we can check how features are related to each other.","a60f6bee":"# POKMeans Clusters - Flourish Viz","5d99e58d":"KMeans helped me to identify some clusters and their main features based on Pokemon's skills stats, but Pokemons could be Customers, Workers, Students, Salesperson or Products and Skills could be Revenue, Performance, Grades, Sales, Number of clicks...\n\nSo, could you identify where to apply KMeans in your business problems?\n\nAll feedbacks are welcome :)","272c1de3":"Radar plot, Boxplot, and Pairplot give us the main features of each Cluster given by the KMeans model.\n\n## Cluster 0 = Weakest Pokemons Cluster\n> The weakest Pokemons, low values for all the Skills\n\n> EX: Caterpie, Porygon and Magikarp\n\n![cluster_1-min.png](attachment:cluster_1-min.png)\n\n## Cluster 1 = The Overpowering Squad\n> The strongest Pokemons have high values for all skills\n\n> Speed, Attack and Special Attack are the top 3 skills\n\n> EX: AegislashBlade Forme, Kyogre Primal and Mewtwo Mega Mewtwo Y\n\n![cluster_2-min.png](attachment:cluster_2-min.png)\n\nClusters 2, 3, and 4 are in the middle between Cluster 0 and 1.\n\n## Cluster 2 = Speedy Squad\n> Cluster of the fastest Pokemons\n\n> Speed, Attack and Special Attack are the Top 3 Skills\n\n> EX: Accelgor, Ninjask and Crobat\n\n![cluster_3-min.png](attachment:cluster_3-min.png)\n\n## Cluster 3 = The Defensive Squad\n> The highest Skills are Defense and Special Defense\n\n> Defensive, Special Defense and Attack are the Top 3 Skills \n\n> EX: Shuckle, Regirock and Steelix\n\n![cluster_4-min.png](attachment:cluster_4-min.png)\n\n## Cluster 4 = High HP and Slow Speed Cluster\n\n> They have High HP and Slow Speed\n\n> HP, Attack and Special Defense are the top 3 skills\n\n> EX: Blissey, Chansey and Wobbuffet\n\n![cluster_5-min.png](attachment:cluster_5-min.png)"}}