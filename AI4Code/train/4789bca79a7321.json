{"cell_type":{"ddb0d8a0":"code","3592a7f8":"code","2acecd43":"code","1cc07019":"code","d25c8bde":"code","6b7b46a6":"code","c661ff94":"code","0a749757":"code","048ec8e4":"code","ded59d23":"code","92cfd088":"markdown","e9737f01":"markdown","5d8b0fe3":"markdown","e07f06d8":"markdown","234fa4f4":"markdown","19c79665":"markdown","f4bed8e9":"markdown","1b205ffb":"markdown","0309e4e2":"markdown"},"source":{"ddb0d8a0":"# Packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","3592a7f8":"athletes = pd.read_csv('..\/input\/forbes-high-paid-athletes-19902021\/forbesathletesv2.csv')\ncpi = pd.read_csv('..\/input\/consumer-price-index-cpi-united-states\/USACPIALLMINMEI.csv')","2acecd43":"athletes.head()","1cc07019":"year_2021 = athletes[athletes.Year == 2021]\nyear_2021.head()","d25c8bde":"year_2020 = athletes[athletes.Year == 2020]\nyear_2020.head()","6b7b46a6":"# https:\/\/medium.com\/analytics-vidhya\/adjusting-for-inflation-when-analysing-historical-data-with-python-9d69a8dcbc27\n# http:\/\/www.uvm.edu\/~awoolf\/classes\/spring2005\/ec11\/calculating_inflation.html\ndef inflate(amount, base_year, current_year):\n    cpi_current = cpi[cpi.DATE.str.contains(str(current_year))].USACPIALLMINMEI.iloc[0]\n    cpi_base = cpi[cpi.DATE.str.contains(str(base_year))].USACPIALLMINMEI.iloc[0]\n    return (amount * cpi_current) \/ cpi_base\n\ndef inflate_column(data, year):\n    earnings = []\n    copy = data.copy()\n    for index, row in copy.iterrows():\n        earnings.append(inflate(row.Earnings, row.Year, year))\n    copy.insert(len(copy.columns), year, earnings, False)\n    return copy","c661ff94":"# Let's try Michael Jordan\nmichael_jordan = athletes[athletes.Name == 'Michael Jordan']\nmichael_jordan_2017 = inflate_column(michael_jordan, 2017)\n\n# Earnings are listed as millions, hence multiply it with a million.\nprint('${:,.2f}'.format(michael_jordan_2017[2017].sum() * 1000000))","0a749757":"def all_time(athletes, year):\n    data = athletes.copy()\n    # Since this table should contain all time earnings of an\n    # athlete up to a certain year (amount of the earnings \n    # should also be adjusted according to the year), years\n    # above can be eliminated.\n    data = data.drop(data[data.Year > year].index)\n    \n    all_time = {}\n    # Accumulate the earnings\n    for index, row in data.iterrows():\n        if row.Name in all_time:\n            all_time[row.Name] += inflate(row.Earnings, row.Year, year)\n        else:\n            all_time[row.Name] = inflate(row.Earnings, row.Year, year)\n\n    all_time_data = pd.DataFrame(all_time.items(), columns=['Name', 'Earnings Million $'])\n    # Sort according to earnings\n    all_time_data = all_time_data.sort_values(by=['Earnings Million $'], ascending=False).reset_index(drop=True)\n    all_time_data['Rank'] = all_time_data.index + 1\n    return all_time_data.set_index('Rank')","048ec8e4":"# Try to get the same list for 2017\nall_time_2017 = all_time(athletes, 2017)\n\n# Show the first 10, so that it can easily be compared with the `All-time list (2017)`\nall_time_2017.iloc[0:10]","ded59d23":"# Use CPI data for 2021\nall_time_2021 = all_time(athletes, 2021)\n\n# Show the most recent data which we can calculate.\nall_time_2021.iloc[0:10]","92cfd088":"## 2021 List","e9737f01":"# Investigate the data\n\nLets check out what we have.","5d8b0fe3":"# All-time list (2017)","e07f06d8":"It appears data we have is matching with the one used in [here](https:\/\/en.wikipedia.org\/wiki\/Forbes'_list_of_the_world's_highest-paid_athletes).\n\nSo, try to calculate the data in [All-time list (2017)](https:\/\/en.wikipedia.org\/wiki\/Forbes'_list_of_the_world's_highest-paid_athletes)[\u207d\u00b9\u207e](https:\/\/www.forbes.com\/sites\/kurtbadenhausen\/2017\/12\/13\/the-25-highest-paid-athletes-of-all-time\/?sh=2d7cfe824b64). Since, the table is in 2017 dollars, we also need to consider that.\n\n| Rank | Name                 | Sport       | Nation         | Earnings Million $ |\n| ---  | ---                  | ---         | ---            | ---                |\n| 1    | Michael Jordan       | Basketball  | United States  | 1,850              |\n| 2    | Tiger Woods          | Golf        | United States  | 1,700              |\n| 3    | Arnold Palmer        | Golf        | United States  | 1,400              |\n| 4    | Jack Nicklaus        | Golf        | United States  | 1,200              |\n| 5    | Michael Schumacher   | Auto racing | Germany        | 1,000              |\n| 6    | Phil Mickelson       | Golf        | United States  | 815                |\n| 7    | Kobe Bryant          | Basketball  | United States  | 800                |\n| 7    | David Beckham        | Soccer      | United Kingdom | 800                |\n| 9    | Floyd Mayweather Jr. | Boxing      | United States  | 785                |\n| 10   | Shaquille O'Neal     | Basketball  | United States  | 735                |","234fa4f4":"Check out earnings of Michael Jordan. Make an easy comparison with data in [wikipedia](https:\/\/en.wikipedia.org\/wiki\/Forbes'_list_of_the_world's_highest-paid_athletes).","19c79665":"# Read Data\n\nForbes High Paid Athletes 1990-2021, https:\/\/www.kaggle.com\/darinhawley\/forbes-high-paid-athletes-19902021\n\nConsumer Price Index (CPI) United States, https:\/\/www.kaggle.com\/sfktrkl\/consumer-price-index-cpi-united-states","f4bed8e9":"# All-time list (2021)","1b205ffb":"## 2020 List","0309e4e2":"Looks a little bit less than the value in the table. I am not sure what is missing but lets just continue.\n> Please comment if you have any idea :)."}}