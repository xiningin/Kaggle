{"cell_type":{"5684fca1":"code","cec687c5":"code","e64d04d5":"code","07998732":"code","69cb0e69":"code","a9c42006":"code","4d38307a":"code","aeaa7058":"code","28b3a9fc":"markdown"},"source":{"5684fca1":"import numpy as np\nimport pandas as pd\nimport os\nimport tensorflow as tf\n\n\nCassava_dir = \"..\/input\/cassava-leaf-disease-classification\/\"","cec687c5":"from tensorflow import keras\nmodel = keras.models.load_model('..\/input\/cassava-baseline-weights\/best_weights.h5')","e64d04d5":"sub = pd.DataFrame(columns=['image_id','label'])","07998732":"def predict_on_batch(test_list, wpath=Cassava_dir, target_size=(380,380)):\n    input_batch=[]\n    for IMAGE_ID in test_list:\n        image = tf.keras.preprocessing.image.load_img(os.path.join(wpath, \"test_images\",IMAGE_ID), \n                                                      grayscale=False, \n                                                      color_mode=\"rgb\", \n                                                      target_size=target_size, \n                                                      interpolation=\"nearest\")\n        input_arr = keras.preprocessing.image.img_to_array(image)\n        input_batch.append(input_arr)\n    return np.array(input_batch)","69cb0e69":"import math\n\nTEST_DIR = '..\/input\/cassava-leaf-disease-classification\/test_images\/'\ntest_images = os.listdir(TEST_DIR)\n\nN = len(test_images)\nif N == 1:\n    BATCH_SIZE = 1\nelse:\n    BATCH_SIZE = 16","a9c42006":"for batch_index in range(math.ceil(N\/BATCH_SIZE)):\n    if batch_index*BATCH_SIZE+BATCH_SIZE < N:\n        test_X = predict_on_batch(test_images[batch_index*BATCH_SIZE:batch_index*BATCH_SIZE+BATCH_SIZE])\n        predictions = model.predict(test_X).argmax(axis = 1)\n        sub_batch = pd.DataFrame({'image_id':test_images[batch_index*BATCH_SIZE:batch_index*BATCH_SIZE+BATCH_SIZE],\n                    'label':list(predictions)})\n    else:\n        test_X = predict_on_batch(test_images[batch_index*BATCH_SIZE:])\n        predictions = model.predict(test_X).argmax(axis = 1)\n        sub_batch = pd.DataFrame({'image_id':test_images[batch_index*BATCH_SIZE:],\n                    'label':list(predictions)})\n        \n    sub = sub.append(sub_batch, ignore_index=True)","4d38307a":"sub['label'] = sub['label'].astype('int64')\nsub","aeaa7058":"sub.to_csv('submission.csv', index = False)","28b3a9fc":"This is the second of two parts time-saving quickstart baseline. Submission accuracy is 0.88 in public dataset. In this notebook, there are three points which may benefit you. \n* The nearest interpolation of load_img method is consistent with [part I training](https:\/\/www.kaggle.com\/electro\/keras-baseline-0-88-quickstart-i-training-saving).\n* A for loop to predict a batch instead of one image input at a time.\n* Generation of submission file by appending batch predictions."}}