{"cell_type":{"a7683b08":"code","8952738f":"code","15e06ec9":"code","e53e8857":"code","1e8aa01e":"code","6a230cab":"code","fd3c7d5f":"code","df5316aa":"code","282d0185":"code","164f0b57":"code","cfb57f5c":"code","afa1be93":"code","3cc6badd":"code","653f8562":"code","3948135b":"markdown","468a7a5a":"markdown","865df224":"markdown","373ef69c":"markdown","4cf957fa":"markdown","064c8f44":"markdown"},"source":{"a7683b08":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os","8952738f":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndataset=pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndataset.head(5)","15e06ec9":"data=dataset[[\"age\",\"bmi\",\"charges\"]]","e53e8857":"data[\"bmi\"]=data[\"bmi\"].astype(int)\ndata[\"charges\"]=data[\"charges\"].astype(int)","1e8aa01e":"data.dtypes","6a230cab":"x=data.iloc[:,:-1].values\ny=data.iloc[:,-1].values","fd3c7d5f":"from sklearn.model_selection import train_test_split\nx_train, x_test,y_train,y_test = train_test_split(x,y, test_size=0.20, random_state=0)","df5316aa":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nx_train=sc.fit_transform(x_train)\nx_test=sc.transform(x_test)","282d0185":"from sklearn.neighbors import KNeighborsClassifier\nclassifier=KNeighborsClassifier(n_neighbors=5, metric=\"minkowski\", p=2)\n\nclassifier.fit(x_train, y_train)","164f0b57":"classifier.predict(sc.transform([[28,33]]))","cfb57f5c":"y_pred=classifier.predict(x_test)","afa1be93":"np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1)","3cc6badd":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm = confusion_matrix(y_test, y_pred)\ncm","653f8562":"accuracy_score(y_test,y_pred)","3948135b":"## Predicting the Test set results","468a7a5a":"## Feature Scaling","865df224":"## Splitting the dataset into the Training set and Test set","373ef69c":"## Training the K-NN model on the Training set","4cf957fa":"## Predicting a new result","064c8f44":"## Making the Confusion Matrix\n"}}