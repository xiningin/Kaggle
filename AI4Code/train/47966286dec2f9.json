{"cell_type":{"d50b4cea":"code","524e5291":"code","a515fd70":"code","ec552e02":"code","851e1f92":"code","034d17c7":"code","44d8b7f9":"code","a15c556f":"code","b93d49b3":"code","1dd01ad8":"code","59289db7":"code","6114e7f6":"markdown"},"source":{"d50b4cea":"!pip install nltk\n!pip install urllib3\n!pip install beautifulsoup4\n!pip install regex\n!pip install html5lib","524e5291":"import nltk\nimport urllib\nimport bs4 as bs\nimport re\nimport requests\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')\n\nnltk.download('punkt')\n\nnltk.download('averaged_perceptron_tagger')","a515fd70":"#Getting the data from wikipedia\nimport requests \nfrom bs4 import BeautifulSoup \n  \nURL = \"https:\/\/en.wikipedia.org\/wiki\/Thor\"\nr = requests.get(URL) \n  \nsoup = BeautifulSoup(r.content, 'html5lib') # If this line causes an error, run 'pip install html5lib' or install html5lib \nprint(soup.prettify())","ec552e02":"#Feteching the data\n\ntext = \"\"\n\nfor paragraph in soup.findAll('p'):\n  text += paragraph.text\n","851e1f92":"text","034d17c7":"#preprocessing the text data\n\nimport string\n\ntext = text.lower()\ntext = \"\".join([char for char in text if char not in string.punctuation])\nprint(text)\n","44d8b7f9":"#Removing numbers\ntext = re.sub(r'\\d+', '', text)\n\nprint(text)","a15c556f":"#Removing white spaces\n\ntext = text.strip()\n\nprint(text)","b93d49b3":"text = re.sub(r'\\[[0-9]*\\]', '', text)\n\nprint(text)","1dd01ad8":"sentences = nltk.sent_tokenize(text)\n\nsentences","59289db7":"#Building triple extractor which takes the sentence \n\nfrom nltk.tokenize import word_tokenize, sent_tokenize \nstop_words = set(stopwords.words('english')) \n\n# sent_tokenize is one of instances of \n# PunktSentenceTokenizer from the nltk.tokenize.punkt module \n\n\nfor i in sentences: \n\n    # Word tokenizers is used to find the words \n    # and punctuation in a string \n    wordsList = nltk.word_tokenize(i) \n\n    # removing stop words from wordList \n    wordsList = [w for w in wordsList if not w in stop_words] \n\n    # Using a Tagger. Which is part-of-speech \n    # tagger or POS-tagger. \n    tagged = nltk.pos_tag(wordsList) \n\n    print(tagged) \n","6114e7f6":"Installing the required packages"}}