{"cell_type":{"7e1786fb":"code","db251faf":"code","a3245463":"code","abc61ad0":"code","6e8fdd2d":"code","1a435f60":"code","fe54b9b0":"code","99bc70d9":"code","cb8dc0d1":"code","4de66e21":"code","27ab71aa":"code","624026d7":"code","b5045d21":"code","ad9b127c":"code","04400e19":"code","9ded45a3":"code","f5f24116":"code","3ed20b10":"code","326cde35":"code","2eb9993b":"code","d1e93bae":"code","57a64106":"code","f3fd9340":"code","667b37aa":"code","3ad069f9":"code","c870a060":"code","a6d3514e":"code","239966b1":"code","1b267c01":"code","b85ba16e":"code","14fab039":"code","6b53cb0a":"code","43ed31e1":"code","7a777e1c":"code","e7388492":"code","634fc576":"code","0c099046":"code","6131fff4":"code","547b226e":"code","46eab0a5":"code","7ce165e3":"code","e490b976":"code","0a17a854":"code","1cc6295b":"code","c0e4a417":"code","63956a0b":"code","4a6f945f":"code","03103a99":"code","31975470":"code","175ffea8":"markdown","9b8a854d":"markdown","0de5ba28":"markdown","1c98e934":"markdown","74aa6b56":"markdown","eabcdb24":"markdown","d0be717e":"markdown","432b20b0":"markdown","db15364e":"markdown","c8714b82":"markdown","5fec3ea9":"markdown","186eebf8":"markdown","089b109e":"markdown","7f03f701":"markdown","c67d9cbb":"markdown","4c4ab9d9":"markdown","113750eb":"markdown","91955d5f":"markdown","59e5fe8d":"markdown","21b1ef25":"markdown","4dbe0661":"markdown","7b4aced4":"markdown","4de48ccd":"markdown","cd5f6808":"markdown","d619a80f":"markdown","bde8bab2":"markdown","868fd716":"markdown"},"source":{"7e1786fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db251faf":"bottle = pd.read_csv('..\/input\/calcofi\/bottle.csv')","a3245463":"bottle.head()","abc61ad0":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n%matplotlib inline\n\npd.pandas.set_option('display.max_columns',None)\npd.pandas.set_option('display.max_rows', None)","6e8fdd2d":"bottle.head()","1a435f60":"nul = bottle.isnull().sum() \/ len(bottle)\nnul = nul[nul>0]\nnul = nul.sort_values(ascending = False)\nnul","fe54b9b0":"col = nul.tail(31).index.values\ncol","99bc70d9":"bottle.shape","cb8dc0d1":"bottle = bottle[col]\nbottle.shape","4de66e21":"categorical = [feature for feature in bottle.columns if bottle[feature].nunique() < 15]","27ab71aa":"categorical","624026d7":"for value in categorical:\n    print(value)\n    print(bottle.groupby(value)['T_degC'].count())\n    print('--------')","b5045d21":"bottle.drop(['T_degC', 'STheta', 'R_POTEMP', 'R_SALINITY', 'R_PO4', 'PO4q','SiO3qu','NO2q','Chlqua','Chlqua','Phaqua','MeanAq','DarkAq','C14A1q','C14A2q'], axis = 1, inplace = True)","ad9b127c":"bottle.shape","04400e19":"nul = bottle.isnull().sum() \/ len(bottle)\nnul = nul[nul>0]\nnul = nul.sort_values(ascending = False)\nnulcol = nul.index.values\nfor value in nulcol:\n    bottle[nulcol] = bottle[nulcol].fillna(bottle[nulcol].mean())","9ded45a3":"nul = bottle.isnull().sum() \/ len(bottle)\nnul = nul[nul>0]\nnul = nul.sort_values(ascending = False)\nnul","f5f24116":"corr = bottle.corr()\ntop = corr.index[abs(corr['R_TEMP'] > 0.4)]\ntop_corr = bottle[top].corr()\nplt.figure(figsize = (12,6))\nsns.heatmap(top_corr, annot = True)","3ed20b10":"# Consider all variables\ncorr = bottle.corr()\nplt.figure(figsize = (20,10))\nsns.heatmap(corr, annot = True)","326cde35":"pos = corr.index[abs(corr['R_TEMP'] > 0)]\nneg = corr.index[abs(corr['R_TEMP'] < 0)]","2eb9993b":"pos","d1e93bae":"neg","57a64106":"positive = bottle[pos]\npositive.drop('NH3q', axis = 1, inplace = True)\npositive.head()","f3fd9340":"# All columns where relation with temperature(DV) Is negative in nature\nnegative = bottle[neg]\nnegative.drop(['S_prec', 'T_prec'], axis = 1, inplace = True)\nnegative.drop('P_qual', axis = 1, inplace = True)\nnegative.drop('NO3q', axis = 1, inplace = True)\nnegative.head()","667b37aa":"negative['R_TEMP'] = bottle['R_TEMP']","3ad069f9":"negative.head()","c870a060":"negative.shape, positive.shape","a6d3514e":"sns.distplot(positive['R_TEMP'])","239966b1":"stats.probplot(positive['R_TEMP'], plot = plt)","1b267c01":"stats.probplot(np.log1p(positive['R_TEMP']), plot = plt)","b85ba16e":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()","14fab039":"x = positive.drop('R_TEMP', axis = 1)\ny = positive[['R_TEMP']]\nx_new = x.copy()\ny_new = y.copy()","6b53cb0a":"x_new1 = scaler.fit_transform(x_new)\nx_new1 = pd.DataFrame(x_new1, columns = x.columns)","43ed31e1":"x_new1.describe()","7a777e1c":"x_new1.head()","e7388492":"# Similarly for dependent variable\n\nscale2 = MinMaxScaler()\ny_new = scale2.fit_transform(y)\ny_new","634fc576":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(x_new1, y_new, test_size = 0.2, random_state = 1)","0c099046":"X_train.shape, X_test.shape","6131fff4":"# We will measure Mean Absolute Vaue Error, to find error of Model\nfrom sklearn.metrics import mean_absolute_error as mae","547b226e":"from xgboost import XGBRegressor\n\nmy_model = XGBRegressor()\nmy_model.fit(X_train, y_train, verbose=False)","46eab0a5":"predictions = my_model.predict(X_test)\n\nprint(\"Mean Absolute Error : \" + str(mae(predictions, y_test)))","7ce165e3":"negative.head()","e490b976":"x1 = negative.drop('R_TEMP', axis = 1)\ny1 = negative[['R_TEMP']]\nx_new1 = x1.copy()\ny_new1 = y1.copy()","0a17a854":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()","1cc6295b":"x_new11 = scaler.fit_transform(x_new1)\nx_new11 = pd.DataFrame(x_new11, columns = x_new1.columns)\nx_new11.head()","c0e4a417":"scale3 = MinMaxScaler()\ny_new11 = scale3.fit_transform(y_new1)\ny_new11","63956a0b":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(x_new11, y_new11, test_size = 0.2, random_state = 1)","4a6f945f":"X_train.shape, X_test.shape","03103a99":"my_model = XGBRegressor()\n\nmy_model.fit(X_train, y_train, verbose=False)","31975470":"predictions = my_model.predict(X_test)\n\nprint(\"Mean Absolute Error : \" + str(mae(predictions, y_test)))","175ffea8":"Considering original values, as Log of values seems way off, because of Outliers","9b8a854d":"# Whoa!! It seems Dependency of Negatively Correlated Variables o Putput variable Is very high.\n","0de5ba28":"# Positive correlated data Analysis","1c98e934":"DDropping loosely related columns","74aa6b56":"# Missing Values Imputation with Mean, as all are Numeric in nature","eabcdb24":"Thanks for your TIme.!!!","d0be717e":"Now we dont have any missing values in Data, Hurray !!!","432b20b0":"Repeat Same Steps","db15364e":"Adding output variable in Negative dataframe","c8714b82":"# Data Bifurcation based on Positive & Negative Values of Correlation","5fec3ea9":"# Feature Selection by Correlation Plot","186eebf8":"Read Null Value in terms of % in every columns","089b109e":"## This is not bad performance, i was looking for Hyerparameter Tuning, But Now I will stick to basic Model.","7f03f701":"There are many categorical variables, where One values has presence more than 99%, hence all these columns wont play any role in deciding Output.\n\nBetter to get reed of them","c67d9cbb":"## I will come up with a model on Pytorch, to solve same Regression!!\n\n","4c4ab9d9":"Lets find categorical variables in data","113750eb":"Identify columns which have negative correlation and Positive correlation. And separate out columns name","91955d5f":"## If you find this Notebook and Code useful Kindly consider Upvoting and feel free to post any querry.\nKeep Enjoying and keep learning. Thanks!!!","59e5fe8d":"# Import Required Library & Read Data","21b1ef25":"# Feature Scaling","4dbe0661":"Train test Split","7b4aced4":"# Analysis with Negatively Correlated data","4de48ccd":"# Missing Value Treatment","cd5f6808":"There are columns with More than 50% Missing values, better to get reed of them\n\n\nConsidering only columns where missing values is less than 50%","d619a80f":"From 74, we are now left with 31 Columns","bde8bab2":"It is always best practice to scale out DV and IV variable separately","868fd716":"# Output value Analysis"}}