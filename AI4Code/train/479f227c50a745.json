{"cell_type":{"610a4966":"code","53cd07ce":"code","d6a39c6a":"code","3269ae98":"code","c1eb03e3":"code","e1347541":"code","2db5d1e2":"code","76bb4451":"code","779d186f":"code","84c7c4f5":"code","8571762e":"code","a61e58bf":"markdown","69e2d3c0":"markdown","a0123ee8":"markdown","919edce2":"markdown","e0cc079f":"markdown","ffb7ad5d":"markdown","453ca8d2":"markdown","22f49947":"markdown","4068cbb6":"markdown","21cddf08":"markdown","1b40308e":"markdown","168e03dc":"markdown","a9d4a5a1":"markdown","25a68c79":"markdown","83af2fe9":"markdown","fe4c0383":"markdown"},"source":{"610a4966":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport lightgbm as lgb\nfrom sklearn.metrics import *\nfrom sklearn.model_selection import *","53cd07ce":"# Config\nSEED = 2021","d6a39c6a":"train = pd.read_csv('..\/input\/pesta-unj-challenge\/train.csv')\ntest = pd.read_csv('..\/input\/pesta-unj-challenge\/test.csv')\ntrain.head()","3269ae98":"plt.figure(figsize=(5, 7))\nsns.countplot(x=\"Target\", data=train)\nplt.show()","c1eb03e3":"for x in train.columns:\n    if x != 'Target':\n        print(x, sum(train[x] == 0))","e1347541":"train.drop(['JumlahKehamilan', 'KetebalanKulit', 'Insulin'], axis=1, inplace=True)\ntest.drop(['JumlahKehamilan', 'KetebalanKulit', 'Insulin'], axis=1, inplace=True)","2db5d1e2":"var = ['Glukosa', 'TekananDarah', 'IMT']\nfor x in var:\n    temp_data = train[train[x] != 0]\n    sns.histplot(data=temp_data, x=x, kde=True)\n    plt.show()\n    print(\"mean   :\", temp_data[x].mean())\n    print(\"median :\",temp_data[x].median())\n    print(\"modus  :\", temp_data[x].mode().tolist())","76bb4451":"var = ['Glukosa', 'TekananDarah', 'IMT']\nval = [121.70163934426229, 72.14551607445009, 32.4489256198347]\nfor i, x in enumerate(var):\n    train[x] = train[x].apply(lambda y: y if y != 0 else val[i])\n    test[x] = test[x].apply(lambda y: y if y != 0 else val[i])","779d186f":"X, y = train.drop(['Target'], axis = 1), train['Target'].values\nscores = []\npreds = np.zeros((len(test), 2))\n\nfold = StratifiedKFold(n_splits = 10, shuffle=True, random_state=SEED)\nfor train_idx, test_idx in fold.split(X, y):\n    # LGBM Model\n    lgbm = lgb.LGBMClassifier(random_state=SEED)\n    # Fit Model\n    lgbm.fit(X.iloc[train_idx, :],  y[train_idx], \n            eval_set=(X.iloc[test_idx, :],y[test_idx]),\n            eval_metric = 'logloss',\n            early_stopping_rounds = 1000, verbose=0)\n    # Evaluate\n    y_pred = lgbm.predict(X.iloc[test_idx, :])\n    score = accuracy_score(y[test_idx], y_pred)\n    preds += lgbm.predict_proba(test.drop(['index'], axis=1))\n    scores.append(score)\nscores = np.array(scores)\npreds = preds \/ 10\n\nfor i, score in enumerate(scores):\n    print(f'Fold {i + 1} score : {score}')\nprint()\nprint('Mean CV :', scores.mean())\nprint('STD CV :', scores.std())","84c7c4f5":"sub = test[['index']].copy()\nsub['Target'] = np.argmax(preds, axis=1)\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 7))\nsns.countplot(x=\"Target\", data=sub, ax=ax1)\nax1.set_title(\"Countplot `test` Target\")\nsns.histplot(preds[:, 1], kde=True, ax=ax2, stat=\"density\")\nax2.set_title(\"Probability `1` Target distribution\")\nplt.show()","8571762e":"sub.to_csv('submission.csv', index=False)\nsub.head()","a61e58bf":"Dapat dilihat dari plot diatas bahwa hasil prediksi didominasi oleh kelas `0`. Hal ini dikarenakan distribusi probabilitas untuk kelas `1` lebih menjorok pada nilai dibawah `0.5` yang merupakan threshold untuk menentukan kelas.","69e2d3c0":"### Menghandle Data yang Bernilai `0`\n\nMengutip petunjuk dari panitia\n\n> *Hint*: Jika kolom data berisi 0, maka data tersebut tidak valid dan perlu dilakukan penanganan terlebih dahulu\n\nMaka akan dilakukan penanganan terhadap data yang memiliki nilai `0`","a0123ee8":"## Load Dataset\n\nLoad dataset ke memmory","919edce2":"Dari 10 split didapatkan rata - rata akurasi sebesar `0.7702802749867794`","e0cc079f":"Mengecek Distribusi Variable yang Memiliki Nilai 0","ffb7ad5d":"Terdapat *imbalance* pada data. Sehingga untuk splitting data disarankan untuk menggunakan metode `stratify` agar proporsi label setiap kelas pada data yang dibagi sama.","453ca8d2":"## Preprocess\n\nPreprocess data\n\n![Bad Data](https:\/\/miro.medium.com\/max\/826\/0*Cir0TzUEkHMbb8QB)","22f49947":"Dapat dilihat dari hasil di atas bahwa data berdistribusi cukup menyerupai lonceng dan tidak terdapat pencilan yang berarti data yang benilai `0` cukup aman untuk diganti dengan rata - rata setiap variable.","4068cbb6":"## Modelling\n\nAkan digunakan`LGBM` sebagai model utama. Apa itu `LGBM` ?\n\n> LightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient.\n\nLebih lengkapnya [di sini](https:\/\/lightgbm.readthedocs.io\/en\/latest\/)\n\nAdapun skema dari pemodelan yang digunakan adalah dengan menggunakan `StratifiedKFold` sebanyak 10 split lalu pada setiap split akan dibangkitkan model untuk dilatih dan di validasi dengan data `train` selanjutnya model tersebut akan digunakan untuk memprediksi data `test` dengan hasil prediksi adalah probabilitas. Setiap prediksi tersebut akan di total lalu dibagi dengan 10 baru ditentukan kelasnya dengan menggunakan `argmax` untuk mengambil probabilitas terbesar.","21cddf08":"**Set config**","1b40308e":"## Loading Library\n\nLoad library terlebih dahulu\n\n![biasalah](https:\/\/media.tenor.com\/images\/4d8307e40eeadc8e5e4282bbc445cd3b\/tenor.gif)","168e03dc":"**Menghapus variable**\n\nMenghapus variable yang memiliki jumlah nilai `0` yang cukup banyak.\n\nDari hasil diatas maka variable `JumlahKehamilan`, `KetebalanKulit`, dan `Insulin`","a9d4a5a1":"### 1. Check `Target` Distribution\n\nMengecek distribusi variable `Target`.","25a68c79":"**Mengganti Nilai `0` Dengan Rata - Rata**","83af2fe9":"## Membuat Submission dan Mengecek Prediksi\n\nMembuat Submission","fe4c0383":"# Pesta 2021 \n\nNyobain *chalangge* `pesta` menggunakan LGBM\n\n![Gasss](https:\/\/www.batok.co\/wp-content\/uploads\/2016\/11\/elpiji_3kg_671_2.jpg)"}}