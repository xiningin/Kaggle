{"cell_type":{"1a3f7744":"code","63b200c4":"code","c8204c0c":"code","e981b725":"code","18c6856b":"code","42ff63d5":"markdown","d8752904":"markdown","8a26d76d":"markdown"},"source":{"1a3f7744":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63b200c4":"import pandas as pd\n\ntrain_df = pd.read_csv('..\/input\/conways-reverse-game-of-life-2020\/train.csv')\ntest_df = pd.read_csv(\"..\/input\/conways-reverse-game-of-life-2020\/test.csv\")","c8204c0c":"import matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport numpy as np","e981b725":"def sampling(xs):\n  for x in xs:\n    #extraction pixel values for start and stop images\n    start_x = train_df.loc[x, train_df.columns.str.startswith('start')]\n    stop_x = train_df.loc[x, train_df.columns.str.startswith('stop')]\n    #reshap array en matrice 25x25\n    start_x = np.asarray(start_x).reshape(25, 25)\n    stop_x = np.asarray(stop_x).reshape(25, 25)\n    \n    #calculation\n    Invariant=start_x+stop_x\n    Invariant[(Invariant<2) & (Invariant>0)]=0\n    #print(Invariant)\n    change=start_x-stop_x\n    #print(change)\n    variation=Invariant+change\n\n    #iteration number extract\n    delta=train_df.loc[x,'delta']\n    \n    #Display\n    colors = ['red','white','blue','black']\n    cmap = mpl.colors.ListedColormap(colors)\n\n    fig, ax = plt.subplots(1, 3, figsize=(15, 5), dpi=300)\n    ax[0] = plt.subplot2grid((1,3), (0,0), colspan=1)\n    ax[1] = plt.subplot2grid((1,3), (0,1), colspan=1)\n    ax[2] = plt.subplot2grid((1,3), (0,2), colspan=1)\n    \n    clipped01=ax[0].imshow(2*(start_x),cmap=cmap,vmin=-1,vmax=2,interpolation='none')\n    ax[0].set_title(\"Start Board {0}\".format(x))\n\n    clipped00=ax[1].imshow(2*(stop_x),cmap=cmap,vmin=-1,vmax=2,interpolation='none')\n    ax[1].set_title(\"Board after {0} time(s) step\".format(delta))\n       \n    clipped02=ax[2].imshow(variation,cmap=cmap,vmin=-1,vmax=2,interpolation='none')\n    ax[2].set_title(\"variation\")\n    plt.colorbar(clipped02,ax=ax[2])\n    plt.show()\n    \n    print (\"RED:Add, BLUE:Remove, BLACK: No change\")\n","18c6856b":"sampling([1])","42ff63d5":"This code is based on https:\/\/www.kaggle.com\/li325040229\/the-game-of-life-display-of-cell-changes","d8752904":"## Load dataset","8a26d76d":"## Display"}}