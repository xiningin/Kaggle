{"cell_type":{"d8eefe64":"code","611d9a6f":"code","d77985a2":"code","4f036cd6":"code","fb8d2f11":"code","a140b7c4":"code","7cd23e70":"code","39bfc779":"code","56652a17":"code","b4e8d09b":"code","ef18e7b2":"code","cfdc8c70":"code","ce852b7b":"code","d8af8e15":"code","39914e07":"code","06e8f35a":"code","8c54015e":"code","49b67a39":"code","37672f58":"code","ca6e9c58":"code","01a965f6":"code","7ecd81b0":"code","fdf084ab":"code","62900759":"code","09239fe2":"code","23b9a75d":"code","7cf045e3":"code","63956d0e":"code","69cdb8f6":"code","ca53a04e":"code","dbeb8683":"code","bc837521":"code","680a4c9d":"markdown","83ec0691":"markdown","1b68c7de":"markdown","b26c449d":"markdown","d5869544":"markdown","4ea636ae":"markdown","b75ecbf0":"markdown","60477cd8":"markdown"},"source":{"d8eefe64":"# import necessary libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import silhouette_score\n%matplotlib inline","611d9a6f":"# read dataset\niris = pd.read_csv('..\/input\/iris\/Iris.csv', index_col=0)\niris.head()","d77985a2":"# rows and columns\niris.shape","4f036cd6":"# 4 numerical and 1 categorical variable\niris.info()","fb8d2f11":"iris.describe()","a140b7c4":"# check unique values in Species variable\niris.select_dtypes('object').nunique()","7cd23e70":"# different categories in Species variable\niris.Species.value_counts()","39bfc779":"# no null values\niris.isnull().sum()","56652a17":"#Countplot of Species\nplt.figure(figsize=[15,7])\nsns.countplot(data=iris, x='Species')\nplt.title('Countplot of Species', fontsize=15)\nplt.show()","b4e8d09b":"#Distributions and Scatterplot of numerical variables\nplt.figure(figsize=[20,10])\nplt.subplot(2,2,1)\nsns.boxplot(data=iris, x=\"SepalLengthCm\", y=\"Species\")\nplt.subplot(2,2,2)\nsns.boxplot(data=iris, x=\"SepalWidthCm\", y=\"Species\")\nplt.subplot(2,2,3)\nsns.boxplot(data=iris, x=\"PetalLengthCm\", y=\"Species\")\nplt.subplot(2,2,4)\nsns.boxplot(data=iris, x=\"PetalWidthCm\", y=\"Species\")\nplt.suptitle('Boxplots to see distributions of numerical variables for different species', fontsize=15)\nplt.show()","ef18e7b2":"#Distributions and Scatterplot of numerical variables\nsns.pairplot(iris, corner=True)\nplt.suptitle('Distributions and Scatterplot of numerical variables', fontsize=15)\nplt.show()","cfdc8c70":"#Correlation heatmap of numerical variables\nplt.figure(figsize=[15,7])\nsns.heatmap(iris.corr(), annot=True, linewidths=5, cmap='YlGnBu')\nplt.title('Correlation heatmap of numerical variables', fontsize=15)\nplt.show()","ce852b7b":"# import KMeans library\nfrom sklearn.cluster import KMeans","d8af8e15":"# list for elbow curve and silhouette scores iterations \nrange_cluster = [2, 3, 4, 5, 6, 7, 8]","39914e07":"# using loop for n_clusters in range_cluster to plot elbow curve and check silhouette scores, to find ideal number of clusters\nssd_u = []\n\nfor num in range_cluster:\n    kmeans_u = KMeans(n_clusters=num, max_iter=50)\n    kmeans_u.fit(iris[['PetalLengthCm']])\n    ssd_u.append(kmeans_u.inertia_)\n    \n    sil_avg_u = silhouette_score(iris[['PetalLengthCm']], kmeans_u.labels_)\n    \n    print('The silhouette score for {0} clusters is {1}'.format(num, sil_avg_u))\n\nprint('\\n\\n')\nplt.figure(figsize=(10,7))\nplt.plot(ssd_u)\nplt.title('Elbow Curve', fontsize=15)\nplt.show()","06e8f35a":"# final model with 3 clusters as seen in elbow curve and silhouette score\n\nkmeans_u = KMeans(n_clusters=3)\ny_pred = kmeans_u.fit_predict(iris[['PetalLengthCm']])\ny_pred","8c54015e":"# cluster centers array\nkmeans_u.cluster_centers_","49b67a39":"# create dataframe and add cluster variable\nkmeans_udf = iris.copy()\nkmeans_udf['Cluster'] = y_pred\nkmeans_udf.head()","37672f58":"# Visualizing cluster distribution for Petal Length\nplt.figure(figsize=[15,7])\nsns.stripplot(data=kmeans_udf, x='PetalLengthCm', y='Cluster')\nplt.title('Visualizing cluster distribution for Petal Length', fontsize=15)\nplt.show()","ca6e9c58":"# Rescaling with MinMax Normalization\nnum_vars = iris.select_dtypes('float64')\n\nscaler = MinMaxScaler()\niris_scaled = scaler.fit_transform(num_vars)\niris_scaled.shape","01a965f6":"# Converting scaled array to dataframe\niris_scaled = pd.DataFrame(iris_scaled)\niris_scaled.columns = [num_vars.columns]\niris_scaled.head()","7ecd81b0":"ssd_b = []\n\nfor i in range_cluster:\n    kmeans_b = KMeans(n_clusters=i, max_iter=50)\n    kmeans_b.fit(iris_scaled[['SepalLengthCm','SepalWidthCm']])\n    \n    ssd_b.append(kmeans_b.inertia_)\n    \n    sil_avg = silhouette_score(iris_scaled,kmeans_b.labels_)\n    print('Silhouette Scores:')\n    print(f'For {i} clusters, the silhouette score is {sil_avg}')\n\nprint('\\n\\n')\nplt.figure(figsize=(10,7))\nplt.plot(ssd_b)\nplt.title('Elbow Curve', fontsize=15)\nplt.show()","fdf084ab":"kmeans_b = KMeans(n_clusters=3)\ny_pred = kmeans_b.fit_predict(iris_scaled[['SepalLengthCm','SepalWidthCm']])\ny_pred","62900759":"kmeans_bdf = iris[['SepalLengthCm','SepalWidthCm']].copy()\nkmeans_bdf['Cluster'] = y_pred\nkmeans_bdf.head()","09239fe2":"# Cluster Scatterplot with size for visual differentiation purpose\nplt.figure(figsize=(15,7))\nsns.scatterplot(data = kmeans_bdf, x='SepalLengthCm', y='SepalWidthCm', hue='Cluster', size='Cluster', palette='Set2')\nplt.title('Cluster Scatterplot', fontsize=15)\nplt.show()","23b9a75d":"kmeans_b.cluster_centers_","7cf045e3":"ssd = []\n\nfor num in range_cluster:\n    kmeans = KMeans(n_clusters=num, max_iter=50)\n    kmeans.fit(iris_scaled)\n    \n    ssd.append(kmeans.inertia_)\n    \n    cluster_labels = kmeans.labels_\n    silhouette_avg = silhouette_score(iris_scaled, cluster_labels)\n    print('Silhouette Scores:')\n    print(f'For n_clusters = {num}, the silhouette score is {silhouette_avg}')\n\nprint('\\n\\n')\nplt.figure(figsize=(10,7))\nplt.plot(ssd)\nplt.title('Elbow Curve', fontsize=15)\nplt.show()","63956d0e":"# final model with 3 clusters\n\nkmeans = KMeans(n_clusters=3)\ny_pred = kmeans.fit_predict(iris_scaled)\ny_pred","69cdb8f6":"kmeans.cluster_centers_","ca53a04e":"kmeans_mdf = iris.copy()\nkmeans_mdf['Cluster'] = y_pred\nkmeans_mdf.head()","dbeb8683":"# creating boxplots using loops to check distribution of clusters. Using len -2 to remove and cluster and species categorical variables.\nfor i in range(len(kmeans_mdf.columns)-2):\n    plt.figure(figsize=[7,4])\n    sns.boxplot(x='Cluster', y=kmeans_mdf.columns[i], data=kmeans_mdf)\n    plt.title(kmeans_mdf.columns[i])\n    plt.show()","bc837521":"# Cluster Pairplot For Multiple Variables\nsns.pairplot(kmeans_mdf, hue='Cluster', corner=True, palette='Set2')\nplt.suptitle('Cluster Pairplot For Multiple Variables', fontsize=15)\nplt.show()","680a4c9d":"# Model Building Univariate KMeans Clustering","83ec0691":"# Reading And Understanding Data","1b68c7de":"# Model Building Multivariate KMeans Clustering","b26c449d":"# Feature Scaling","d5869544":"# Exploratory Data Analysis","4ea636ae":"# Conclusion","b75ecbf0":"# Model Building Bivariate KMeans Clustering","60477cd8":"Among the variables used for all 3 types of KMeans clustering, 3 clusters appear to be the ideal number."}}