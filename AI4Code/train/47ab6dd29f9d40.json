{"cell_type":{"115e1136":"code","b78b1da9":"code","7c5a0839":"code","c4f45dc5":"code","9b980588":"code","4a4fa658":"code","4d21d483":"code","edd14623":"code","1c30e39c":"code","28d57e2f":"markdown","debfcd7e":"markdown","667da0f1":"markdown","9877a941":"markdown","1c37b04b":"markdown","44aaa710":"markdown","0c8f52cd":"markdown"},"source":{"115e1136":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b78b1da9":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","7c5a0839":"df = pd.read_csv(\"\/kaggle\/input\/tvmarketing-dataset\/tvmarketing.csv\")\nprint(f\"Data Shape: {df.shape}\")","c4f45dc5":"# Checking dataset columns\nprint(df.columns)\n\n#Selecting Corresponding Features\nX = df['TV'].values\ny = df['Sales'].values\n\nX = X.reshape(-1,1)\ny = y.reshape(-1,1)","9b980588":"# X_feature - TV\n# y_output - Sales\nx_train, x_test, y_train, y_test = train_test_split(X,y,train_size=0.8,test_size=0.2,random_state=100)\nprint(f\"X_train shape {x_train.shape}\")\nprint(f\"y_train shape {y_train.shape}\")\nprint(f\"X_test shap {x_test.shape}\")\nprint(f\"y_test shape {y_test.shape}\")","4a4fa658":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.scatter(x_train,y_train,color='red')\nplt.xlabel('TV')\nplt.ylabel('Sale')\nplt.title('Training data')\nplt.show()","4d21d483":"lm = LinearRegression()\nlm.fit(x_train,y_train)\ny_predict = lm.predict(x_test)\nprint(f\"Train accuracy {round(lm.score(x_train,y_train)*100,2)} %\")\nprint(f\"Test accuracy {round(lm.score(x_test,y_test)*100,2)} %\")","edd14623":"plt.scatter(x_train,y_train,color='red')\nplt.plot(x_test,y_predict)\nplt.xlabel(\"Years of Experience\")\nplt.ylabel(\"Salary in $\")\nplt.title(\"Trained model plot\")\nplt.plot","1c30e39c":"yoe = np.array([15,1.5,7.3,9.65])\nyoe = yoe.reshape(-1,1)\nyoe_sales = lm.predict(yoe)\nfor df in yoe_sales:\n    print(f\"$ {df}\")","28d57e2f":"# **Building Linear Regression Model using Sklearn**","debfcd7e":"# **Predicting with custom data**","667da0f1":"# **Load Data**","9877a941":"# **Exploring data by ploting**","1c37b04b":"# **Selecting Desired Features**","44aaa710":"# **Divide data into train and test test**\nThe most common train and test split size is 80% data for train set and 20 % data for test set","0c8f52cd":"# **Plotting the Linear Model**"}}