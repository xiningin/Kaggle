{"cell_type":{"610508b6":"code","223ea62f":"code","5798e75d":"code","8b7dc7bf":"code","241cdf98":"code","03e5c6ac":"code","d30d6170":"code","3883dce0":"code","a5403bbf":"code","239872f5":"code","0f178906":"code","af511a14":"code","b71e609f":"code","50067696":"code","c190c9e9":"code","7f604b8f":"code","a23474a0":"code","29ba3b95":"code","d90b0bf8":"markdown","9649e6df":"markdown","6bbc47a1":"markdown","3280e3fa":"markdown","dd4d503a":"markdown"},"source":{"610508b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","223ea62f":"#importing the libraries\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","5798e75d":"data = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\ndata.head()","8b7dc7bf":"data.info()","241cdf98":"data['Reviews'] = data['Reviews'].apply(lambda x: int(float(x[:-1])*(10**6)) if x[-1]=='M' else int(float(x)))","03e5c6ac":"data.loc[10472,'Installs']='0'\ndata[data['Installs']=='Free']","d30d6170":"data['Installs'].value_counts()","3883dce0":"data['Installs'] = data['Installs'].apply(lambda x: int((''.join(x.split(','))).strip('+')))","a5403bbf":"data.drop(10472,axis = 0,inplace = True)","239872f5":"data.tail()","0f178906":"data_cat = pd.DataFrame(data['Category'].value_counts())","af511a14":"fig = plt.figure(figsize = (15,8))\nfig = sns.barplot(data_cat['Category'],data_cat.index)\nplt.title('Number of Apps in each Category',size = 30)\nplt.show()","b71e609f":"data_cat_wrt_reviews = data[['Category','Rating']].groupby('Category').mean().sort_values('Rating',ascending = False)","50067696":"data_cat_wrt_reviews.head(3)","c190c9e9":"fig = plt.figure(figsize = (15,8))\nfig = plt.barh(data_cat_wrt_reviews.index,data_cat_wrt_reviews['Rating'])\nplt.title('Category vs Mean Ratings',size = 30)\nplt.xlabel('Ratings',size = 15)\nplt.xticks(np.linspace(0,5,6))\nplt.show()","7f604b8f":"data_cat_wrt_downloads = data[['Category','Installs']].groupby('Category').sum().sort_values('Installs',ascending = False)","a23474a0":"data_cat_wrt_downloads.head(3)","29ba3b95":"fig = plt.figure(figsize = (15,8))\nfig = plt.barh(data_cat_wrt_downloads.index,data_cat_wrt_downloads['Installs'])\nplt.title('Category vs Total Downloads',size = 30)\nplt.xlabel('# of Downloads',size = 15)\nplt.show()","d90b0bf8":"*Let's get our data loaded*","9649e6df":"*Let's get to the analysis part*","6bbc47a1":"* While talking about the developers the most popular category is **Family** followed by Games\n* Wrt the graph is kinda equal for all categories but still **Events** got the upper hand\n* Taking about the number of downloads the clear leader is **Games** with Communication not lagging behind much","3280e3fa":"## Most popular category","dd4d503a":"*Clearly looks like some of the columns are wrongly objectified, like Reviews, Size, Installs etc.*"}}