{"cell_type":{"6ea6d40a":"code","7ffcdcc2":"code","159a8564":"code","b7a6b502":"code","a2ab1ccd":"code","8f5bcbc7":"code","17a08ec8":"code","f3fc710f":"code","ba068f10":"code","40dfea7f":"code","be5409c5":"code","d25bdbb7":"code","021bdbf0":"code","1c532f04":"code","875dd709":"code","efa7cec2":"code","90a8a613":"markdown","43d4742c":"markdown"},"source":{"6ea6d40a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ffcdcc2":"pip install lazypredict","159a8564":"import pandas as pd\nimport lazypredict\nfrom lazypredict.Supervised import LazyClassifier\nfrom sklearn.model_selection import train_test_split\n","b7a6b502":"#Load Data\ndata=pd.read_csv('..\/input\/diabetes-data-set\/diabetes.csv')\ndata.head(5)","a2ab1ccd":"#Preprocessing\/Splitting data\nX=data.drop(['Outcome'], axis=1)\ny=data['Outcome']\n\nX_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.2, random_state=10)","8f5bcbc7":"#Modelling\nclf=LazyClassifier(verbose=0,ignore_warnings=True,custom_metric=None)\ntrain, test=clf.fit(X_train, X_test, y_train, y_test)\n\n#Show Comparison data train\ntrain","17a08ec8":"#Show Comparison of test data\ntest","f3fc710f":"#Impot Viz Library\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ba068f10":"#Horizontal Version\nplt.figure(figsize=(10,5))\nax=sns.barplot(x=test.index, y='Accuracy', data=test)\n_=plt.xticks(rotation=90)","40dfea7f":"#Vertical Version\nplt.figure(figsize=(5,10))\nax=sns.barplot(y=test.index, x='Accuracy', data=test)\n_=plt.xticks(rotation=90)","be5409c5":"import pandas as pd\ndata2=pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\", warn_bad_lines=True, error_bad_lines=False)\ndata2.head()","d25bdbb7":"data2.columns","021bdbf0":"#Preprocessing\/Splitting data\nX=data2[['bedrooms','bathrooms','sqft_living','sqft_lot','floors','sqft_above','sqft_basement','sqft_living15','sqft_lot15']]\ny=data2['price']\n\n\n\nX_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.2, random_state=10)","1c532f04":"from lazypredict.Supervised import LazyRegressor","875dd709":"#Modelling\nreg=LazyRegressor(verbose=0,ignore_warnings=True,custom_metric=None)\ntrain, test=reg.fit(X_train, X_test, y_train, y_test)\n\n#Show Comparison data train\ntrain","efa7cec2":"test","90a8a613":"#2. Regression","43d4742c":"#1. Classification"}}