{"cell_type":{"696c7df2":"code","74e5eaa7":"code","127c28a6":"code","4b3f9731":"code","c39e64b6":"code","05df1b34":"code","64964abe":"code","41e6bf83":"code","77c9b138":"code","2de0395c":"code","be23081f":"code","8ae7d68b":"code","af6bb0ac":"code","c8887234":"code","5e4e8d23":"code","02f4b451":"code","121c935a":"code","54193d1d":"markdown","177f74f2":"markdown","34cec0e1":"markdown","b18be96e":"markdown","411f758d":"markdown","0b680e9a":"markdown","8bedcc71":"markdown","4ca2b513":"markdown","b72bc4dd":"markdown","988f9605":"markdown"},"source":{"696c7df2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74e5eaa7":"import matplotlib.pyplot as plt\nimport seaborn as sns","127c28a6":"!pip install openpyxl # to load excel file","4b3f9731":"gender = pd.read_excel(\"\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx\")\nteams = pd.read_excel(\"\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx\")\nathletes = pd.read_excel(\"\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx\")\ncoaches = pd.read_excel(\"\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx\")\nmedals = pd.read_excel(\"\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx\")","c39e64b6":"gender.head()","05df1b34":"teams.head()","64964abe":"athletes.head()","41e6bf83":"coaches","77c9b138":"medals.head()","2de0395c":"athletes_cts = athletes.groupby(\"NOC\")[\"NOC\"].count()\n\nathletes_cts = athletes_cts.sort_values()\n\nax = athletes_cts.plot.barh(figsize=(10,45),grid=True)\n\nax.tick_params(labeltop=True)","be23081f":"coaches_cts = coaches.groupby(\"NOC\")[\"NOC\"].count()\ncoaches_cts = coaches_cts.sort_values()\nax = coaches_cts.plot.barh(figsize=(10,15),grid=True)\nax.tick_params(labeltop=True)","8ae7d68b":"gender = gender.sort_values(\"Total\")\n\nax=gender.plot.barh(x=\"Discipline\",y=[\"Female\",\"Male\"],figsize=(15,10),stacked=True,grid=True)\n\nax.tick_params(labeltop=True)","af6bb0ac":"left = athletes_cts.to_frame()\nright = coaches_cts.to_frame()\n\ndf1 = left.join(right,lsuffix=\"_athletes\",rsuffix=\"_coaches\")\ndf1[\"AchletesPerCoach\"] = df1.NOC_athletes \/ df1.NOC_coaches\n\ndf1 = df1.sort_values(\"AchletesPerCoach\")\ndf1 = df1.dropna()\ndf1.head()","c8887234":"ax = df1.plot.barh(y=\"AchletesPerCoach\",use_index=True,figsize=(15,15),grid=True)\nax.tick_params(labeltop=True)\n\nprint(\"Median of atheletes per coach: {}\".format(df1[\"AchletesPerCoach\"].median()))","5e4e8d23":"medals_rename = medals.rename(columns={\"Team\/NOC\":\"NOC\"})\nmedals_rename = medals_rename.set_index(\"NOC\")\n\nleft_2 = medals_rename\nright_2 = athletes_cts\n\ndf2 = left_2.join(right_2,lsuffix=\"_med\",rsuffix=\"_ath\")\ndf2 = df2.rename(columns={\"NOC\":\"Athletes\"})\n\ndf2[\"MedalPerAthletes\"] = df2.Total \/ df2.Athletes\ndf2","02f4b451":"df2 = df2.sort_values(\"MedalPerAthletes\")\n\nax = df2.plot.barh(y=\"MedalPerAthletes\",use_index=True,figsize=(15,30),grid=True)\nax.tick_params(labeltop=True)\n\nprint(\"Median of MedalPerAthletes: {}\".format(df2[\"MedalPerAthletes\"].median()))","121c935a":"import matplotlib.pyplot as plt\n\ndf2 = df2.sort_values(\"Athletes\",ascending=False)\n\nfig,ax1 = plt.subplots(figsize=(20,10))\n\nax1.bar(df2.index,df2[\"Athletes\"])\nax1.set_ylabel(\"Athletes\",fontsize=18)\n\nax2 = ax1.twinx()\nax2.plot(df2.index,df2[\"MedalPerAthletes\"],color=\"r\")\n\nsecax = ax2.secondary_yaxis('right')\nsecax.set_ylabel('MedalPerAthletes',fontsize=18)\n\nax1.tick_params(labelrotation=90)\n\nplt.show()","54193d1d":"## \"Medal Aquisition Efficiency\" : How many medals per athletes in each country? ","177f74f2":"## How many atheltes per coach ? ","34cec0e1":"## Preparation","b18be96e":"## Introduction\n The purpose of this notebook is to help you learn the basic data analysis techniques required for machine learning. I started by getting an overview of the data, and then created meaningful graphs by merging and extracting data frames. The content is elementary and suitable for beginning students. Please refer to it.","411f758d":"### Let's visualize \"MedalPerAthlets\" !","0b680e9a":"## Number of coaches in each country","8bedcc71":"## Overview","4ca2b513":"## Numbers of athletes in each discipline","b72bc4dd":"### Let's visualize it !","988f9605":"## Number of athletes in each country\n - Using useful code \"groupby\" \n - then, another useful code pandas \"plot\""}}