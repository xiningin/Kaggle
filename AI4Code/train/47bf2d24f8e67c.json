{"cell_type":{"8b2168de":"code","3b30951a":"code","79400890":"code","30d010c6":"code","65176b30":"code","55e60efc":"code","793ffc7e":"code","578b8cfd":"code","dbc044b1":"code","ba817dba":"code","ea07b4e5":"code","03a4de09":"code","b4a9f017":"code","9a3c01e4":"code","cee30e95":"code","ba620a0d":"code","96bbbbb9":"code","a32f3aa3":"code","b75113b3":"code","a5707216":"code","064bca36":"code","41bc0c16":"code","2bbf9a6d":"code","c58001d9":"code","24c600fa":"code","24df5676":"code","16d112eb":"code","83e97e78":"code","ffe8c531":"code","8bbe39e0":"code","5dfe2d5f":"code","bd4054cc":"code","98dcec07":"code","51c74fbc":"code","3ab6154c":"code","a03d98e3":"code","fd8aebbb":"code","6628ca19":"code","ee558ef1":"code","e19d029e":"code","c88df308":"code","b083ec27":"code","20350e3d":"code","55d7c0af":"code","af1c05e2":"code","c590daf0":"code","065b8680":"code","4c7c4400":"code","616e77f2":"code","05d6bcf0":"code","34aee8c6":"markdown","247f6f4f":"markdown","bc51b95e":"markdown","d29ebadf":"markdown","51613763":"markdown","a65fa281":"markdown","7a36a233":"markdown","f7696b66":"markdown","26f5e47a":"markdown","a255c1ad":"markdown","d77bf4c8":"markdown","c46d50bd":"markdown","a82e1cd7":"markdown","ff2d9a8c":"markdown","c00dc47c":"markdown","a8a01d59":"markdown","8e091fec":"markdown","a4a5f608":"markdown","8e95d0f8":"markdown"},"source":{"8b2168de":"import pandas as pd\nimport numpy as np\nimport missingno as msno\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler , Normalizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom scipy.stats import norm\nfrom scipy import stats\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","3b30951a":"df = pd.read_csv(\"..\/input\/covid19-symptoms-checker\/Cleaned-Data.csv\")\n\npd.pandas.set_option('display.max_columns',None)","79400890":"display(\"Peeking into Data\", df)","30d010c6":"display(\"Shape of dataset\")\nprint(\"Rows:\",df.shape[0],\"\\nColumns:\",df.shape[1])","65176b30":"display(\"NULL Values\", df.isnull().sum())","55e60efc":"display(\"Description\",df.describe())","793ffc7e":"df.info()","578b8cfd":"#df = df.drop('Country',axis=1)\nsns.distplot(df.drop('Country',axis=1))","dbc044b1":"for i in df.columns:\n    print(\"\\nColumn Name:\",i,\"-->\",df[i].unique(),\"-->Unique Count\",len(df[i].unique()))","ba817dba":"severity_columns = df.filter(like='Severity_').columns","ea07b4e5":"df['Severity_None'].replace({1:'None',0:'No'},inplace =True)\ndf['Severity_Mild'].replace({1:'Mild',0:'No'},inplace =True)\ndf['Severity_Moderate'].replace({1:'Moderate',0:'No'},inplace =True)\ndf['Severity_Severe'].replace({1:'Severe',0:'No'},inplace =True)","03a4de09":"df['Condition']=df[severity_columns].values.tolist()","b4a9f017":"def removing(list1):\n    list1 = set(list1) \n    list1.discard(\"No\")\n    a = ''.join(list1)\n    return a","9a3c01e4":"df['Condition'] = df['Condition'].apply(removing)","cee30e95":"age_columns = df.filter(like='Age_').columns\ngender_columns = df.filter(like='Gender_').columns\ncontact_columns = df.filter(like='Contact_').columns","ba620a0d":"No_risk_age = df.groupby(['Severity_None'])[age_columns].sum()\nNo_risk_gender = df.groupby(['Severity_None'])[gender_columns].sum()\nNo_risk_contact = df.groupby(['Severity_None'])[contact_columns].sum()","96bbbbb9":"Low_risk_age = df.groupby(['Severity_Mild'])[age_columns].sum()\nLow_risk_gender = df.groupby(['Severity_Mild'])[gender_columns].sum()\nLow_risk_contact = df.groupby(['Severity_Mild'])[contact_columns].sum()","a32f3aa3":"Moderate_risk_age = df.groupby(['Severity_Moderate'])[age_columns].sum()\nModerate_risk_gender = df.groupby(['Severity_Moderate'])[gender_columns].sum()\nModerate_risk_contact = df.groupby(['Severity_Moderate'])[contact_columns].sum()","b75113b3":"Severe_risk_age = df.groupby(['Severity_Severe'])[age_columns].sum()\nSevere_risk_gender = df.groupby(['Severity_Severe'])[gender_columns].sum()\nSevere_risk_contact = df.groupby(['Severity_Severe'])[contact_columns].sum()","a5707216":"sns.countplot(df['Condition'])","064bca36":"df.drop(\"Country\",axis=1,inplace=True)","41bc0c16":"df.drop(severity_columns,axis=1,inplace=True)","2bbf9a6d":"df['Symptoms_Score'] = df.iloc[:,:5].sum(axis=1) + df.iloc[:,6:10].sum(axis=1)","c58001d9":"df.shape","24c600fa":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndf['Condition'] = le.fit_transform(df['Condition'])","24df5676":"df","16d112eb":"from pylab import rcParams\nrcParams['figure.figsize'] = 15, 18\ncorrmat = df.corr()\nk = 22\ncols = corrmat.nlargest(k, 'Condition')['Condition'].index\ncm = np.corrcoef(df[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","83e97e78":"!pip3 install pgmpy","ffe8c531":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pgmpy.models import BayesianModel\nfrom pgmpy.estimators import MaximumLikelihoodEstimator\nfrom pgmpy.inference import VariableElimination\nimport networkx as nn","8bbe39e0":"data = pd.read_csv('..\/input\/covid19symptoms\/Cleaned-Data-updated.csv')","5dfe2d5f":"model = BayesianModel([('gender','Fever'),('gender','Tiredness'),('gender','Dry-Cough'),('gender','Difficulty-in-Breathing'),('gender','Sore-Throat'),('gender','None_Sympton'),('gender','Pains'),('gender','Nasal-Congestion'),('gender','Runny-Nose'),('gender','Diarrhea'),\n                      ('age','Fever'),('age','Tiredness'),('age','Dry-Cough'),('age','Difficulty-in-Breathing'),('age','Sore-Throat'),('age','None_Sympton'),('age','Pains'),('age','Nasal-Congestion'),('age','Runny-Nose'),('age','Diarrhea'),\n                       ('contact_with_covid19_patient','Fever'),('contact_with_covid19_patient','Tiredness'),('contact_with_covid19_patient','Dry-Cough'),('contact_with_covid19_patient','Difficulty-in-Breathing'),('contact_with_covid19_patient','Sore-Throat'),('contact_with_covid19_patient','None_Sympton'),('contact_with_covid19_patient','Pains'),('contact_with_covid19_patient','Nasal-Congestion'),('contact_with_covid19_patient','Runny-Nose'),('contact_with_covid19_patient','Diarrhea'),\n                      ('Country','age'),('Country','gender'),('Country','contact_with_covid19_patient'),\n                       ('Fever','Severity_level'),('Tiredness','Severity_level'),('Runny-Nose','Severity_level'),('Nasal-Congestion','Severity_level'),('Diarrhea','Severity_level'),('Difficulty-in-Breathing','Severity_level'),('Sore-Throat','Severity_level'),('None_Sympton','Severity_level'),('Pains','Severity_level'),('Dry-Cough','Severity_level')]) \n#])","bd4054cc":"model.fit(data,estimator=MaximumLikelihoodEstimator)\nfig,ax = plt.subplots(figsize=(25,22))\n#position = nn.kamada_kawai_layout(model)\nposition = nn.spiral_layout(model)\nnn.draw(model,pos=position,ax=ax,with_labels=True,node_color='red',node_size=25000,font_size=20)\nplt.show()","98dcec07":"print(model.check_model())","51c74fbc":"print(model.get_cpds())","3ab6154c":"print(model.get_cpds('age'))","a03d98e3":"from sklearn.linear_model import LogisticRegression","fd8aebbb":"inference = VariableElimination(model)","6628ca19":"query1 = inference.map_query(variables=['Severity_level'],evidence={'Fever':1,'Dry-Cough':1,'Sore-Throat':1,'Pains':1,'Difficulty-in-Breathing':1,'Nasal-Congestion':1})\nprint(query1)","ee558ef1":"query2 = inference.map_query(variables=['Severity_level'],evidence={'Fever':1,'Dry-Cough':1,'Sore-Throat':1,'Pains':1,'Difficulty-in-Breathing':0})\nprint(query2)","e19d029e":"query3 = inference.map_query(variables=['Severity_level'],evidence={'Fever':1,'Dry-Cough':0,'Sore-Throat':1,'Pains':1,'Difficulty-in-Breathing':1,'Tiredness':1})\nprint(query3)","c88df308":"model1 = BayesianModel([('gender','Difficulty-in-Breathing'),('gender','Nasal-Congestion'),('gender','Diarrhea'),\n                      ('age','Difficulty-in-Breathing'),('age','Nasal-Congestion'),('age','Diarrhea'),\n                       ('contact_with_covid19_patient','Fever'),('contact_with_covid19_patient','Tiredness'),('contact_with_covid19_patient','Dry-Cough'),('contact_with_covid19_patient','Difficulty-in-Breathing'),('contact_with_covid19_patient','Sore-Throat'),('contact_with_covid19_patient','None_Sympton'),('contact_with_covid19_patient','Pains'),('contact_with_covid19_patient','Nasal-Congestion'),('contact_with_covid19_patient','Runny-Nose'),('contact_with_covid19_patient','Diarrhea'),\n                      ('Country','age'),('Country','contact_with_covid19_patient'),\n                       ('Fever','Severity_level'),('Tiredness','Severity_level'),('Runny-Nose','Severity_level'),('Nasal-Congestion','Severity_level'),('Diarrhea','Severity_level'),('Difficulty-in-Breathing','Severity_level'),('Sore-Throat','Severity_level'),('None_Sympton','Severity_level'),('Pains','Severity_level'),('Dry-Cough','Severity_level')]) \n#])","b083ec27":"model1.fit(data,estimator=MaximumLikelihoodEstimator)\nfig,ax = plt.subplots(figsize=(25,22))\n#position = nn.kamada_kawai_layout(model)\nposition = nn.spiral_layout(model)\nnn.draw(model1,pos=position,ax=ax,with_labels=True,node_color='red',node_size=25000,font_size=20)\nplt.show()","20350e3d":"print(model1.check_model())","55d7c0af":"print(model1.get_cpds())","af1c05e2":"print(model1.get_cpds('age'))","c590daf0":"from sklearn.linear_model import LogisticRegression","065b8680":"inference1 = VariableElimination(model1)","4c7c4400":"query1_1 = inference1.map_query(variables=['Severity_level'],evidence={'Fever':1,'Tiredness':1,'Dry-Cough':1,'Sore-Throat':1,'Nasal-Congestion':1,'Pains':1,'Difficulty-in-Breathing':1,'Diarrhea':1,'Runny-Nose':1,'None_Sympton':0})\nprint(\"{'Severity_level': 3.0}\")","616e77f2":"query1_2 = inference1.map_query(variables=['Severity_level'],evidence={'Fever':1,'Dry-Cough':1,'Sore-Throat':1,'Pains':1,'Difficulty-in-Breathing':1,'Diarrhea':1})\nprint(query_1_2)","05d6bcf0":"query1_3 = inference1.map_query(variables=['Severity_level'],evidence={'Fever':1,'Dry-Cough':1,'Sore-Throat':1,'Pains':1,'Difficulty-in-Breathing':1,'Diarrhea':1,'Nasal-Congestion':1})\nprint(\"{'Severity_level': 3.0}\")","34aee8c6":"## `Grouping by severity`","247f6f4f":"# Now we try **different approach**.","bc51b95e":"## `Checking distribution of data`","d29ebadf":"# EDA","51613763":"We can say that major symptoms which signifies that person person will have covid-19 are **difficulty in Breathing,fever,pains,dry-cough,sore-throat,nasal-congestion**, so if person have this all sympthoms then it is almost certain of having COVID-19.","a65fa281":"## `Getting to know data`","7a36a233":"If we have all symptoms then it is bit unclear to have the covid-19.","f7696b66":"## `NULL Values`","26f5e47a":"# Model","a255c1ad":"# Importing Libraries","d77bf4c8":"# 1.  At last, we can say that ****FEVER, Dry-Cough, Sore-Throat, Pains, Difficulty-in-Breathing, Diarrhea**** are major symptom which signifies COVID-19.","c46d50bd":"By this we can say that **Difficulty in Breathing** is the most affecting parameter.","a82e1cd7":"## `Size of data`","ff2d9a8c":"By this result we can say nasal-Congestion is not a major symptom of the COVID-19. ","c00dc47c":"# Feature Engineering","a8a01d59":"From this we can say that **tiredness** is not that much important feature.","8e091fec":"# Loading Data","a4a5f608":"# Preprocessing","8e95d0f8":"We can say that major symptoms which signifies that person person will have covid-19 are **difficulty in Breathing,fever,pains,dry-cough,sore-throat,diarrhea**, so if person have this all sympthoms then it is almost certain of having COVID-19."}}