{"cell_type":{"c568d73d":"code","ffa555c1":"code","7356d43e":"code","a4563e0a":"code","7628c37e":"code","6afb7e14":"code","f8bfe385":"code","b280bfd1":"code","0b9666e3":"code","137f103a":"code","54122775":"code","ca98f9f6":"code","44b1eb28":"code","1951c086":"code","8ea88150":"code","f4894e63":"code","1569ba34":"code","d5a81ab6":"code","67bc7e1f":"code","dbc0ad64":"code","d90ced04":"code","2a5bf61d":"code","6a288d6d":"code","1416bd8a":"code","c04ebf5c":"code","6bd18517":"code","1666424d":"markdown","88654057":"markdown","509112af":"markdown","92f5e129":"markdown","fbf87367":"markdown","060951ef":"markdown","e1743672":"markdown","b944d6b7":"markdown"},"source":{"c568d73d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ffa555c1":"!pip install openpyxl\n!pip install xlrd\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","7356d43e":"athletes = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\ngender = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nmedals = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","a4563e0a":"athletes.head()","7628c37e":"athletes.isnull().any()","6afb7e14":"athletes.duplicated().any()","f8bfe385":"for x in athletes.columns:\n    print(x,':', athletes[x].duplicated().any())","b280bfd1":"athletes['NOC'].nunique()","0b9666e3":"athletes_country = athletes.groupby('NOC').count().reset_index()\nathletes_country","137f103a":"top_10 = athletes_country.sort_values('Name',ascending=False).head(10)\ntop_10","54122775":"fig, ax1 = plt.subplots(figsize=(30, 15))\nsns.barplot(x=\"NOC\", y=\"Name\", data=athletes_country)\nplt.xticks(rotation=90)\nax1.set_xlabel('Country', rotation=0)\nax1.set_ylabel('Count', rotation=90)\nplt.show()","ca98f9f6":"sns.histplot(x=\"NOC\", y=\"Name\", data=top_10)\nplt.xticks(rotation=90)\nplt.xlabel('Country')\nplt.ylabel('Count')","44b1eb28":"gender.isnull().any()   #check for any missing value","1951c086":"for i in gender.columns:      #check for duplicates value\n    print(x,':', gender.duplicated().any())","8ea88150":"gender.head()","f4894e63":"#Which discipline has most number of male participants\n\nplt.figure(figsize=(10, 15))\nsns.barplot(x=\"Male\", y=\"Discipline\", data=gender)\nplt.title('Maximum number of Male Athletes in different Events', fontsize = 15)","1569ba34":"#Which discipline has maximum number of female participants\nplt.figure(figsize=(10, 15))\nsns.histplot(x='Female', y='Discipline', data=gender)\nplt.title('Maximum number of Male Athletes in different Events', fontsize = 15)\n","d5a81ab6":"#Which descipline has most number of participants\nplt.figure(figsize=(10, 15))\nsns.barplot(x='Total', y='Discipline', data=gender)\nplt.title('Maximum number of Athletes in different Events', fontsize = 15)","67bc7e1f":"#total number of male participants\n\ntotal_male = gender['Male'].sum()\ntotal_male","dbc0ad64":"#total number of female particpants\n\ntotal_female = gender['Female'].sum()\ntotal_female","d90ced04":"medals.head()","2a5bf61d":"#TOP 10 team based on gold medal\n\ngold_10 = medals.nlargest(10,'Gold')[['Team\/NOC','Gold']]\ngold_10","6a288d6d":"sns.barplot(x='Team\/NOC',y='Gold',data=gold_10)\nplt.xticks(rotation=90)\nplt.title('top 10 countries based on Gold medal')","1416bd8a":"#comparing rank and total rank of 30 countries\n\ncountry_30 = medals.head(30)[['Team\/NOC','Rank','Rank by Total']]\ncountry_30","c04ebf5c":"tidy = country_30.melt(id_vars='Team\/NOC')\ntidy","6bd18517":"fig, ax1 = plt.subplots(figsize=(20, 15))\nsns.lineplot(x='Team\/NOC', y='value', hue='variable', data=tidy, ax=ax1)\nplt.xticks(rotation=90)\nplt.title('Comparing rank and total rank of 30 countries')\nsns.despine(fig)","1666424d":"**VIEW ATHLETE DATASET**","88654057":"**CHECK IF THERE IS ANY MISSING VALUES**","509112af":"**Explore medals dataset**","92f5e129":"**TOP 10 COUNTRIES BY ATHLETES NUMBER**","fbf87367":"**Now explore gender dataset**","060951ef":"**CHECK FOR DUPLICATES**","e1743672":"**NUMBER OF ATHLETES BY COUNTRY**","b944d6b7":"**TOP 10 COUNTRY BAR PLOT**"}}