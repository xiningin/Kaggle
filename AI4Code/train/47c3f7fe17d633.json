{"cell_type":{"ea75fa1d":"code","c331658f":"code","b5808795":"code","89487509":"code","560a664e":"code","1c6eafab":"code","eaba6026":"code","0a394799":"code","2567edc4":"code","c21ef581":"code","50b3b9a4":"code","57f4ae12":"code","960414d2":"code","bcbc4454":"code","2cb9f516":"code","c2946933":"code","9c405df2":"code","ed3bdab6":"code","cf348716":"code","d948d53b":"code","8dcac56c":"code","ea95477c":"code","c02805b1":"code","3086cf17":"code","e4ba10b7":"code","22ff310f":"code","f6f5a37d":"code","3fc0c9e9":"code","362d82dd":"code","836480db":"code","7f021eeb":"code","6c633fd2":"code","0fb827fa":"code","55a3f16b":"code","bfc02a05":"code","544a2a54":"code","3aca0729":"code","d274eece":"code","7339786d":"code","bfd25100":"code","3a62d5ff":"code","7a4ff8bb":"code","2639f2aa":"code","7a86f49e":"code","73bb9d95":"code","8da88015":"code","63f00e7c":"code","a253c4be":"code","b54a2bca":"code","22e2e627":"code","cd2fb584":"code","977a6264":"code","da93d66a":"code","e5e9c252":"code","094d9596":"code","a57300ac":"code","fe5f1459":"code","4223b8f0":"code","70f8d858":"code","8dfe00fd":"code","bb6da1d8":"code","fc66b909":"code","81872578":"code","e3de1a74":"code","2e2080a1":"code","dfeb9ed0":"code","50e924e0":"code","bda9744e":"code","307d0284":"code","606d2649":"code","6dbebbf3":"code","24929c53":"code","c0164c34":"code","93e69ce9":"code","22cf7272":"code","50d0ef54":"code","1a1aa3c6":"code","87bf3f8c":"code","dd70ca86":"markdown","4aeffb18":"markdown","234c1f66":"markdown","8189c8a3":"markdown","cecee983":"markdown","2b6911d9":"markdown","45a3433c":"markdown","c678a077":"markdown","92f73143":"markdown","2d8c8dff":"markdown","48f13fc7":"markdown","0e3fab0b":"markdown","1e56ba80":"markdown","0073ad78":"markdown","e22f0a29":"markdown","8c766101":"markdown","c8965403":"markdown","59b9cc9c":"markdown"},"source":{"ea75fa1d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n\nimport os\nprint(os.listdir(\"..\/input\"))","c331658f":"data = pd.read_csv(\"..\/input\/googleplaystore.csv\",encoding='ISO-8859-1')\ndata","b5808795":"data.info()","89487509":"data['PointOnATenPointScale'] = data['Rating'] + data['Rating']\ndata","560a664e":"data.head(10)","1c6eafab":"data.tail(10)","eaba6026":"data.columns","0a394799":"data.shape","2567edc4":"#EXPLORATORY DATA ANALYSIS\nprint(data[\"Category\"].value_counts(dropna = False))","c21ef581":"data.describe()","50b3b9a4":"data.boxplot(column = \"Rating\", by = \"Content Rating\",figsize = (15,15))","57f4ae12":"#TIDY DATA\ndataNew = data.head()\ndataNew","960414d2":"meltedData = pd.melt(frame = dataNew,id_vars = \"App\", value_vars = [\"Size\",\"Installs\"])\nmeltedData","bcbc4454":"#PIVOTING DATA\nmeltedData.pivot(index = \"App\", columns = \"variable\", values = \"value\")","2cb9f516":"#CONCATENATING DATA\ndata1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1,data2],axis = 0, ignore_index = True)\nconc_data_row","c2946933":"data1 = data[\"Current Ver\"].head()\ndata2 = data[\"Android Ver\"].head()\nconc_data_columns = pd.concat([data1,data2],axis = 1, ignore_index = True)\nconc_data_columns","9c405df2":"#DATA TYPES\ndata.dtypes","ed3bdab6":"data[\"App\"] = data[\"App\"].astype(\"category\")\ndata[\"Category\"] = data[\"Category\"].astype(\"category\")\ndata[\"PointOnATenPointScale\"] = data[\"PointOnATenPointScale\"].astype(\"float\")\ndata.dtypes","cf348716":"#MISSING DATA AND TESTING WITH ASSERT\ndata.info()","d948d53b":"data[\"Rating\"].value_counts(dropna = False)","8dcac56c":"data1 = data\ndata1[\"Rating\"].dropna(inplace = True)","ea95477c":"assert data[\"Rating\"].notnull().all()","c02805b1":"data[\"Rating\"].fillna(\"empty\",inplace = True)","3086cf17":"assert data[\"Rating\"].notnull().all()\ndata.info()","e4ba10b7":"data[\"Rating\"].value_counts(dropna = False)","22ff310f":"Country = [\"Turkey\",\"Germany\"]\nPopulation = [\"32\",\"34\"]\nlistLabel =[\"Country\",\"Population\"]\nlistCol = [Country,Population]\nzippedData = list(zip(listLabel,listCol))\ndata_dict = dict(zippedData)\ndf = pd.DataFrame(data_dict)\ndf","f6f5a37d":"df[\"Capital\"] = [\"Ankara\",\"Berlin\"]\ndf","3fc0c9e9":"df[\"Islands\"] = 0\ndf","362d82dd":"data1 = data.loc[:,[\"Rating\",\"PointOnATenPointScale\"]]\ndata1.plot()","836480db":"data1.plot(subplots = True)\nplt.show()","7f021eeb":"data1.plot(kind = \"scatter\",x = \"PointOnATenPointScale\",y = \"Rating\")\nplt.show()","6c633fd2":"data1.plot(kind = \"hist\",y = \"PointOnATenPointScale\",bins = 50,range = (0,10),normed = True)","0fb827fa":"fig, axes = plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind = \"hist\",y = \"PointOnATenPointScale\",bins = 50,range= (0,10),normed = True,ax = axes[0])\ndata1.plot(kind = \"hist\",y = \"PointOnATenPointScale\",bins = 50,range= (0,10),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","55a3f16b":"data.describe()","bfc02a05":"time_list = [\"2018-03-08\",\"2018-04-12\"]\nprint(type(time_list[1]))","544a2a54":"datetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))","3aca0729":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2 = data.head()\ndate_list = [\"2018-01-10\",\"2018-02-10\",\"2018-03-10\",\"2018-03-15\",\"2018-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"Date\"] = datetime_object\n\ndata2 = data2.set_index(\"Date\")\ndata2 ","d274eece":"print(data2.loc[\"2018-03-16\"])","7339786d":"print(data2.loc[\"2018-03-10\":\"2018-03-16\"])","bfd25100":"data2.resample(\"A\").mean()","3a62d5ff":"data2.resample(\"M\").mean()","7a4ff8bb":"data2.resample(\"M\").first().interpolate(\"linear\")","2639f2aa":"data2.resample(\"M\").mean().interpolate(\"linear\")","7a86f49e":"data = pd.read_csv(\"..\/input\/googleplaystore.csv\",encoding='ISO-8859-1')\n#data = data.set_index(\"#\")\n#data.index = data[\"#\"]\ndata.head()","73bb9d95":"data[\"App\"][1]","8da88015":"data.App[1]","63f00e7c":"data.loc[1,[\"App\"]]","a253c4be":"data[[\"App\",\"Reviews\"]]","b54a2bca":"print(type(data[\"App\"]))     \nprint(type(data[[\"App\"]]))","22e2e627":"data.loc[1:10,\"App\":\"Price\"]","cd2fb584":"data.loc[10:1:-1,\"App\":\"Price\"]","977a6264":"data.loc[1:10,\"Rating\":] ","da93d66a":"boolean = data.Rating > 3.9\ndata[boolean]","e5e9c252":"first_filter = data.Rating > 3.9\nsecond_filter = data.Type != \"Free\"\ndata[first_filter & second_filter]","094d9596":"data.App[data.Genres == \"Business\"]","a57300ac":"data['PointOnATenPointScale'] = data['Rating'] + data['Rating']\ndef div(n):\n    return n\/5\ndata.PointOnATenPointScale.apply(div)","fe5f1459":"data.Rating.apply(lambda n : n*3)","4223b8f0":"data[\"RatingAverage\"] = (data.Rating + data.PointOnATenPointScale)\/2\ndata.head()","70f8d858":"print(data.index.name)\ndata.index.name = \"IndexName\"\ndata.head()","8dfe00fd":"data.head()","bb6da1d8":"data3 = data.copy()\ndata3.index = range(100,10941 ,1)\ndata3.head()","fc66b909":"data1 = pd.read_csv(\"..\/input\/googleplaystore.csv\",encoding='ISO-8859-1')\ndata1.head(100)","81872578":"data1 = data.set_index([\"Category\",\"App\"]) \ndata1.head(100)","e3de1a74":"data1.loc[\"BEAUTY\",\"Hush - Beauty for Everyone\"]","2e2080a1":"dic = {\"car\":[\"A\",\"A\",\"B\",\"B\"],\"price\":[40.000,45.000,50.000,60.000],\"receiver\":[\"F\",\"M\",\"M\",\"F\"],\"model\":[\"2010\",\"2011\",\"2012\",\"2013\"]}\ndf = pd.DataFrame(dic)\ndf","dfeb9ed0":"df.pivot(index=\"car\",columns = \"receiver\",values=\"model\")","50e924e0":"df1 = df.set_index([\"car\",\"receiver\"])\ndf1","bda9744e":"df1.unstack(level=0)","307d0284":"df1.unstack(level=1)","606d2649":"df2 = df1.swaplevel(0,1)\ndf2","6dbebbf3":"df","24929c53":"pd.melt(df,id_vars=\"car\",value_vars=[\"receiver\",\"price\"])","c0164c34":"df","93e69ce9":"df.groupby(\"car\").mean()","22cf7272":"df.groupby(\"car\").price.max() ","50d0ef54":"df.groupby(\"car\")[[\"price\",\"model\"]].min() ","1a1aa3c6":"df.info()","87bf3f8c":"# If we use groupby, we can convert it categorical data. \n# Because categorical data uses less memory, speed up operations like groupby\ndf[\"car\"] = df[\"car\"].astype(\"category\")\ndf[\"model\"] = df[\"model\"].astype(\"category\")\ndf.info()","dd70ca86":"**2. PANDAS FOUNDATION**","4aeffb18":"***MELTING DATA FRAMES***","234c1f66":"***PIVOTING DATA FRAMES***","8189c8a3":"***INDEXING PANDAS TIME SERIES***","cecee983":"**1. CLEANING DATA**","2b6911d9":"Cleaning Data\n\nPandas Foundation \n\nManipulating Data Frames with Pandas","45a3433c":"***HIERARCHICAL INDEXING***","c678a077":"***TRANSFORMING DATA***","92f73143":"### ****3. MANIPULATING DATA FRAMES WITH PANDAS****","2d8c8dff":"***RESAMPLING PANDAS TIME SERIES***","48f13fc7":"***VISUAL EXPLORATORY DATA ANALYSIS***","0e3fab0b":"***SLICING DATA FRAME***\n\nDifference between selecting columns\n\nSeries and data frames\n\nSlicing and indexing series\n\nReverse slicing\n\nFrom something to end","1e56ba80":"***CATEGORICALS AND GROUPBY***","0073ad78":"Resampling: statistical method over different time intervals\n    \n   Needs string to specify frequency like \"M\" = month or \"A\" = year\n\nDownsampling: reduce date time rows to slower frequency like from daily to weekly\n    \nUpsampling: increase date time rows to faster frequency like from daily to hourly\n\nInterpolate: Interpolate values according to different methods like \u2018linear\u2019, \u2018time\u2019 or index\u2019","e22f0a29":"***FILTERING DATA FRAMES***","8c766101":"***STATISTICAL EXPLORATORY DATA ANALYSIS***\n\ncount: number of entries\n\nmean: average of entries\n\nstd: standart deviation\n\nmin: minimum entry\n\n25%: first quantile\n\n50%: median or second quantile\n\n75%: third quantile\n\nmax: maximum entry","c8965403":"***INDEX OBJECTS AND LABELED DATA***","59b9cc9c":"***STACKING and UNSTACKING DATAFRAME***"}}