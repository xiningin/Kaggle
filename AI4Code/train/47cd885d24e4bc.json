{"cell_type":{"342433de":"code","1a9200dc":"code","18bd7f51":"code","a7f17129":"code","2ea9a63e":"code","b21150c1":"code","27e203d7":"code","e39b8a06":"code","23a2a62e":"code","8ff59a70":"code","d9643c04":"code","07743598":"code","5ec752a3":"code","5f19ff92":"code","e4fca578":"code","694fc0e5":"code","f8b6accb":"code","4d7f0af0":"code","b32ffc2c":"code","65a6b702":"code","616c81c7":"code","51aab588":"code","1e21e8ee":"code","ced76d35":"code","573e574a":"code","68e43505":"code","a99e2216":"code","d82efa8c":"code","f104c0f9":"code","1d51dce2":"code","eb2de568":"code","629ba06f":"code","b40553fb":"code","4016192c":"code","7288ef67":"code","2b39a4c6":"markdown","a03607f3":"markdown","67e8cc60":"markdown","bc0fd6ed":"markdown","29cb71c1":"markdown","955b41f3":"markdown","1c5361b1":"markdown"},"source":{"342433de":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ntrain = pd.read_csv(\"\/kaggle\/input\/lish-moa\/train_features.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/lish-moa\/test_features.csv\")\ntarget = pd.read_csv(\"\/kaggle\/input\/lish-moa\/train_targets_scored.csv\")\ntarget_nonscored = pd.read_csv(\"\/kaggle\/input\/lish-moa\/train_targets_nonscored.csv\")\nsub = pd.read_csv(\"\/kaggle\/input\/lish-moa\/sample_submission.csv\")","1a9200dc":"print(train.shape)\ntrain.head()","18bd7f51":"train.info()","a7f17129":"sub = train.select_dtypes(\"object\")\ncol = train.columns.tolist()\nprint(sub.columns)\nfor c in sub.columns:\n    col.remove(c)\ndf = train[col]\ndf.shape","2ea9a63e":"print(sub['cp_type'].value_counts())\nsub['cp_type'].value_counts().plot(kind=\"bar\")","b21150c1":"print(sub['cp_dose'].value_counts())\nsub['cp_dose'].value_counts().plot(kind=\"bar\")","27e203d7":"df.filter(regex=\"^g-\").describe()","e39b8a06":"df.filter(regex=\"^c-\").describe()","23a2a62e":"set(df.columns)-set(df.filter(regex=\"^g-\").columns.tolist() + df.filter(regex=\"^c-\").columns.tolist())","8ff59a70":"print(df['cp_time'].value_counts())\ndf['cp_time'].value_counts().plot(kind=\"bar\")","d9643c04":"is_null = train.isnull().sum()\nis_null[is_null!=0]","07743598":"g=sns.PairGrid(data=train,x_vars=[\"cp_time\",\"cp_type\",\"cp_dose\"],y_vars=[\"g-770\",\"g-1\",\"c-7\",\"c-95\"])\ng.map(sns.boxenplot)","5ec752a3":"data = pd.concat([train,target],axis=1)\nprint(data.shape)\ndata.head()","5f19ff92":"target.shape","e4fca578":"data[\"count\"] = data.iloc[:,-207:].sum(axis=1)","694fc0e5":"sns.catplot(data=data,x=\"cp_type\",y=\"count\",kind=\"boxen\")","f8b6accb":"data.iloc[:,-207:][data[\"cp_type\"]==\"ctl_vehicle\"].head()","4d7f0af0":"sns.catplot(data=data,x=\"cp_time\",y=\"count\",kind=\"boxen\")","b32ffc2c":"sns.catplot(data=data,x=\"cp_dose\",y=\"count\",kind=\"boxen\")","65a6b702":"print(data[\"count\"].value_counts())\ndata[\"count\"].value_counts().plot(kind=\"barh\")","616c81c7":"so = data.filter(regex=\"^g-\").corr().unstack().sort_values(kind=\"quicksort\")\nsns.heatmap(data[so[so!=1].sort_values(ascending =False)[:10].reset_index(level=[0]).index].corr(),annot = True)","51aab588":"sns.pairplot(data[[\"g-770\",\"g-1\",\"cp_dose\"]],hue=\"cp_dose\")","1e21e8ee":"sns.lineplot(data=data[[\"g-770\",\"g-1\"]])","ced76d35":"data.filter(regex=\"^g-\").mean().hist()","573e574a":"sns.boxplot(data.filter(regex=\"^g-\").mean())","68e43505":"gini_mean = data.filter(regex=\"^g-\")\ngini_mean[gini_mean<-0.5 ].index","a99e2216":"gini_row_mean = data.filter(regex=\"^g-\").mean(axis=1)\nmean = gini_row_mean.mean()\noutlayer_index = gini_row_mean[(gini_row_mean>3*mean) | (gini_row_mean <-3*mean)].index\noutlayer_index","d82efa8c":"data[\"cp_type\"][outlayer_index].value_counts().plot(kind=\"barh\")","f104c0f9":"so = data.filter(regex=\"^c-\").corr().unstack().sort_values(kind=\"quicksort\")\nsns.heatmap(data[so[so!=1].sort_values(ascending =False)[:10].reset_index(level=[0]).index].corr(),annot = True)","1d51dce2":"sns.pairplot(data[[\"c-7\",\"c-95\",\"cp_dose\"]],hue=\"cp_dose\")","eb2de568":"sns.lineplot(data=data[[\"c-7\",\"c-95\"]])","629ba06f":"data.filter(regex=\"^c-\").mean().hist()","b40553fb":"sns.boxplot(data.filter(regex=\"^c-\").mean())","4016192c":"gini_row_mean = data.filter(regex=\"^c-\").mean(axis=1)\nmean = gini_row_mean.mean()\noutlayer_index = gini_row_mean[(gini_row_mean>3*mean) | (gini_row_mean <-3*mean)].index\noutlayer_index","7288ef67":"data[\"cp_type\"][outlayer_index].value_counts().plot(kind=\"barh\")","2b39a4c6":"# looks like gene expression is more for dose D2","a03607f3":"# cp_type giving clear indication for moa drug target","67e8cc60":"# gene expression columns has min -10 and max 10 , mean around 0 and standard deviation aroung 1\n# cell viability colums has min -10 and max -4 , mean -0.5 around and standard deviation around 2\n\n# https:\/\/www.kaggle.com\/kunduruanil\/moa-problemstatement-with-domain-knowledge","bc0fd6ed":"# cell viability columns evalvation","29cb71c1":"# out layers Anlaysis of gene expression columns","955b41f3":"# gene expression columns evalvation ","1c5361b1":"# Domain Knowlage\n\n## https:\/\/www.kaggle.com\/kunduruanil\/moa-problemstatement-with-domain-knowledge\n\n# understanding of Evalvation metrix\n\n## https:\/\/www.kaggle.com\/kunduruanil\/logloss-multilabel"}}