{"cell_type":{"de37791e":"code","3ff4f6a5":"code","032d0713":"code","d163a2c0":"code","dff1f832":"code","3cb06311":"code","6fc06328":"code","1e4b5325":"code","57c0b534":"code","81c8c9d8":"code","e6a27c63":"code","067d1746":"code","1462550f":"code","9193c0e3":"code","bc5c41b5":"code","74f3e499":"code","8c14d713":"code","eefca37e":"code","1df30f95":"code","fa1dc62a":"code","6a7c297c":"code","65a7302d":"markdown","844260bc":"markdown","2af00583":"markdown","ac80916e":"markdown","956cd78b":"markdown","196b7c1e":"markdown","299d71b9":"markdown","2b2f49b1":"markdown","2ae83655":"markdown","26ce6f91":"markdown","cb58ef8e":"markdown","ddec113e":"markdown","b595e823":"markdown","028ab976":"markdown","b91e95b4":"markdown","e49a28eb":"markdown","e6e12210":"markdown","261d81de":"markdown","73694fc9":"markdown","b30a5105":"markdown"},"source":{"de37791e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ff4f6a5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as mn\nimport warnings\nwarnings.filterwarnings('ignore')","032d0713":"df = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","d163a2c0":"df.shape","dff1f832":"df.duplicated().sum()","3cb06311":"df.describe()","6fc06328":"mn.matrix(df)","1e4b5325":"df.info()","57c0b534":"books_count = df['Name'].value_counts().reset_index().head(10).rename(columns={'index':'Name', 'Name':'Count'})\n\nfig, ax = plt.subplots()\nax.barh(books_count['Name'], books_count['Count'])\nax.set_yticks(books_count['Name'])\nax.set_yticklabels(books_count['Name'])\nax.invert_yaxis()\nplt.grid(True)\nax.set_xlabel('Count')\nax.set_ylabel('Name')\nax.set_title('Books count')\nplt.show()","81c8c9d8":"author_count = df['Author'].value_counts().reset_index().head(10).rename(columns={'index':'Author', 'Author':'Count'})\n\nfig, ax = plt.subplots()\nax.barh(author_count['Author'], author_count['Count'])\nax.set_yticks(author_count['Author'])\nax.set_yticklabels(author_count['Author'])\nax.invert_yaxis()\nplt.grid(True)\nax.set_xlabel('Count')\nax.set_ylabel('Author')\nax.set_title('Authors count')\nplt.show()","e6a27c63":"fig = plt.figure(figsize = (10, 10))\nsns.distplot(df['User Rating'])\nplt.axvline(df['User Rating'].mean(), color = 'red')\nplt.grid(True)\nplt.title('Distribution of User rating')\nplt.show()","067d1746":"fig = plt.figure(figsize = (10, 10))\n\nsns.distplot(df.loc[df['Genre']=='Fiction']['User Rating'], label = 'Fiction')\nplt.axvline(df.loc[df['Genre']== 'Fiction']['User Rating'].mean(), color = 'blue')\n\nsns.distplot(df.loc[df['Genre']=='Non Fiction']['User Rating'], label = 'Non Fiction')\nplt.axvline(df.loc[df['Genre']== 'Non Fiction']['User Rating'].mean(), color = 'orange')\nplt.grid(True)\nplt.title('Distribution of user rating by genre')\nplt.legend()\nplt.show()","1462550f":"fig = plt.figure(figsize = (10, 10))\nsns.distplot(df['Reviews'])\nplt.axvline(df['Reviews'].mean())\nplt.grid(True)\nplt.title('Reviews ditribution')\nplt.show()","9193c0e3":"fig = plt.figure(figsize = (10, 10))\n\nsns.distplot(df.loc[df['Genre']=='Fiction']['Reviews'], label = 'Fiction')\nplt.axvline(df.loc[df['Genre']== 'Fiction']['Reviews'].mean(), color = 'blue')\n\nsns.distplot(df.loc[df['Genre']=='Non Fiction']['Reviews'], label = 'Non Fiction')\nplt.axvline(df.loc[df['Genre']== 'Non Fiction']['Reviews'].mean(), color = 'orange')\nplt.grid(True)\nplt.title('Distribution of price by genre')\nplt.legend()\nplt.show()","bc5c41b5":"fig = plt.figure(figsize = (10, 10))\nsns.distplot(df['Price'])\nplt.axvline(df['Price'].mean())\nplt.grid(True)\nplt.title('Distribution of price')\nplt.show()","74f3e499":"fig = plt.figure(figsize = (10, 10))\n\nsns.distplot(df.loc[df['Genre']=='Fiction']['Price'], label = 'Fiction')\nplt.axvline(df.loc[df['Genre']== 'Fiction']['Price'].mean(), color = 'blue')\n\nsns.distplot(df.loc[df['Genre']=='Non Fiction']['Price'], label = 'Non Fiction')\nplt.axvline(df.loc[df['Genre']== 'Non Fiction']['Price'].mean(), color = 'orange')\nplt.grid(True)\nplt.title('Distribution of price by genre')\nplt.legend()\nplt.show()","8c14d713":"fig = plt.figure(figsize = (10, 10))\nsns.countplot(x = df['Year'], hue = 'Genre', data = df)\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.grid(True)\nplt.title('Books released each year by genre')\nplt.show()","eefca37e":"plt.figure(figsize = (20,10))\nsns.countplot(y = 'Genre', data = df)\nplt.grid(True)\nplt.title('Genre count')\nplt.show()","1df30f95":"top10_books_user_rating = df.groupby('Name')['User Rating'].mean().reset_index().head(10).sort_values(by = 'User Rating', ascending = False)\n\nfig, ax = plt.subplots()\nax.barh(top10_books_user_rating['Name'], top10_books_user_rating['User Rating'])\nax.set_yticks(top10_books_user_rating['Name'])\nax.set_yticklabels(top10_books_user_rating['Name'])\nax.invert_yaxis()\nplt.grid(True)\nax.set_xlabel('User Rating')\nax.set_ylabel('Book')\nax.set_title('User ratings of different books')\nplt.show()","fa1dc62a":"top10_book_reviews = df.groupby('Name')['Reviews'].mean().reset_index().head(10).sort_values(by = 'Reviews', ascending = False)\n\nfig, ax = plt.subplots()\nax.barh(top10_book_reviews['Name'], top10_book_reviews['Reviews'])\nax.set_yticks(top10_book_reviews['Name'])\nax.set_yticklabels(top10_book_reviews['Name'])\nax.invert_yaxis()\nax.set_xlabel('Reviews')\nplt.grid(True)\nax.set_ylabel('Book')\nax.set_title('Reviews of different books')\nplt.show()","6a7c297c":"top_expensive_books = df.groupby('Name')['Price'].mean().reset_index().head(10).sort_values(by = 'Price', ascending = False)\n\nfig, ax = plt.subplots()\nax.barh(top_expensive_books['Name'], top_expensive_books['Price'])\nax.set_yticks(top_expensive_books['Name'])\nax.set_yticklabels(top_expensive_books['Name'])\nax.invert_yaxis()\nplt.grid(True)\nax.set_xlabel('Price')\nax.set_ylabel('Book')\nax.set_title('Most expensive books')\nplt.show()","65a7302d":"We can see genre fiction has higher user rating than non fiction","844260bc":"# Books\n","2af00583":"# Which books has highest reviews","ac80916e":"How many books were printed during each year by genre","956cd78b":"User rating distribution","196b7c1e":"Price distribution","299d71b9":"# User rating","2b2f49b1":"Top 10 mentioned books","2ae83655":"# Price","26ce6f91":"# Most expensive books","cb58ef8e":"# Reviews","ddec113e":"# Exploritary data analysis","b595e823":"Reviews distribution","028ab976":"# Year","b91e95b4":"# Most popular books by user rating","e49a28eb":"Price distribution by genre","e6e12210":"Reviews distribuition by genre","261d81de":"We can see that fiction reviews are more distributed","73694fc9":"User rating distrbution by genre","b30a5105":"# Genre"}}