{"cell_type":{"1279c16b":"code","b4bbf003":"code","33bed98b":"code","6c2cf687":"code","1e031b2b":"code","6b2ef350":"code","27d18eef":"code","d378f864":"code","8a09f0de":"code","9c2821b9":"code","51c7a039":"code","0116cd28":"code","fadcba41":"code","db99f86e":"code","cd35e0ee":"code","75020200":"code","87100802":"code","95b833c3":"code","b12c9cef":"code","5c27c300":"code","1bb062d1":"code","e6d24461":"markdown","dec41441":"markdown","6096fc9e":"markdown","7c77f0d3":"markdown","22c06f20":"markdown","38d6e5d4":"markdown","d2cef4c8":"markdown","669a8389":"markdown","081fcd53":"markdown","20719785":"markdown","76bbbfc9":"markdown","f342922e":"markdown","5f9c398c":"markdown"},"source":{"1279c16b":"!pip install torchtext","b4bbf003":"!pip install fastai==2.2.5","33bed98b":"import os\nimport pandas as pd\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6c2cf687":"# conjunto de teste\ndf_test = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\n\n# conjunto de treino\ndf_train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ndf_train = df_train.astype({'label': 'category'})","1e031b2b":"df_train.sample(3)","6b2ef350":"import matplotlib.pyplot as plt\n\nexample = df_train.drop(labels=['label'], axis=1).iloc[9]\nexample = example.values.reshape(-1,28,28)\nplt.imshow(example[0,:,:], cmap=\"gray\")","27d18eef":"from fastai.tabular.all import *","d378f864":"# Transformations\ndls = TabularDataLoaders.from_df(df_train, y_names='label', seed=26, valid_pct=0.2)","8a09f0de":"learn = tabular_learner(dls, layers=[100, 200, 200, 100], metrics=accuracy)","9c2821b9":"learn.fit(3)","51c7a039":"learn.recorder.plot_loss()","0116cd28":"_, clas, probs = learn.predict(df_test.iloc[0])","fadcba41":"print(f'Classe {clas}, probabilidade {probs[clas]}')","db99f86e":"learn.dls.vocab","cd35e0ee":"# conjunto de teste\ndl = learn.dls.test_dl(df_test)","75020200":"# pega as probabilidades\nprobs, _ = learn.get_preds(dl=dl)","87100802":"# pega aquela classe de maior probabilidade\ny_pred = torch.argmax(probs,dim=1)\ny_pred = y_pred.numpy()\ndisplay(y_pred)","95b833c3":"# Aumenta o index por 1, para se adequar ao arquivo de submiss\u00e3o\ndf_test.index += 1","b12c9cef":"submission = {'ImageId':df_test.index, 'Label':y_pred}\ndf_submission = pd.DataFrame(submission)","5c27c300":"df_submission.sample(5)","1bb062d1":"# gerando arquivo de submiss\u00e3o\ndf_submission.to_csv('submission.csv', index=False)","e6d24461":"Leitura dos conjuntos de dados, e adaptando as categorias `label` para `str`.","dec41441":"# Deep Learning - Reconhecimento de D\u00edgitos\n\nEste notebook realiza uma classifica\u00e7\u00e3o de imagens utilizando Redes Neurais Profundas (Deep Learning), sob os dados da competi\u00e7\u00e3o [Digit Recognizer](https:\/\/www.kaggle.com\/c\/digit-recognizer), tamb\u00e9m conhecido como MNIST. Esta competi\u00e7\u00e3o tem como prop\u00f3sito identificar qual o n\u00famero desenhado numa imagem. Sendo assim, nesta competi\u00e7\u00e3o vamos praticar conceitos de Vis\u00e3o Computacional (Computer Vision) para classificar as imagens corretamente.\n\n> Conte\u00fado voltado para n\u00edvel intermedi\u00e1rio de Aprendizado de M\u00e1quina e Ci\u00eancia de Dados!\n\n<a id=\"top\"><\/a>\n\n## Conte\u00fado\n\n> **Nota.** Alguns c\u00f3digos foram ocultados para dar destaque aos conte\u00fados mais importantes.\n\nO notebook est\u00e1 organizado como segue:\n\n- [Classifica\u00e7\u00e3o](#clas) - Deep Learning\n- [Predi\u00e7\u00e3o](#pred) - Gera\u00e7\u00e3o do arquivo de submiss\u00e3o.","6096fc9e":"Gera o arquivo de submiss\u00e3o.","7c77f0d3":"Verificando o `loss` do conjunto de treinamento e valida\u00e7\u00e3o.","22c06f20":"Predizendo todo o conjunto de teste.","38d6e5d4":"<a id=\"pred\"><\/a>\n    \n# Predi\u00e7\u00e3o\n\nVamos predizer as classes do conjunto de teste, e criar um arquivo de submiss\u00e3o.\n\n[Voltar para o Topo](#top)","d2cef4c8":"Todas as classes","669a8389":"# Visualiza\u00e7\u00e3o dos Dados","081fcd53":"## Arquitetura\n\nCriamos uma Rede Neural com 4 camadas escondidas, sendo elas `[100, 200, 200, 100]`.","20719785":"<a id=\"clas\"><\/a>\n\n# Classifica\u00e7\u00e3o\n\nConstru\u00e7\u00e3o da arquitetura de Deep Learning, e treinamento do modelo.\n\n[Voltar para o Topo](#top)","76bbbfc9":"## Conjunto de Treinamento e Valida\u00e7\u00e3o\n\nSepara o conjunto de treinamento em treinamento e valida\u00e7\u00e3o (20% do conjunto).","f342922e":"Treinamento, ou seja, o aprendizado.","5f9c398c":"\nTestando a predi\u00e7\u00e3o para um elemento."}}