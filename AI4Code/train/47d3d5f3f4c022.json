{"cell_type":{"a1e728c9":"code","5bf92c71":"code","a602aa46":"code","50b45dfe":"code","f54a8b39":"code","bc91753a":"code","d620eafc":"code","5c2f02d8":"code","6a4ef3aa":"code","5ce1e25b":"code","438a24ef":"code","ea724252":"code","87b4a33e":"code","ef8ed5cc":"code","31b28e13":"code","4a0e878a":"code","6fc727d2":"code","bcfc073f":"code","69c57566":"code","e461672e":"code","71d58688":"code","91e60d45":"code","cb96ec62":"code","3ee67a03":"code","0192a87b":"code","27cc522b":"markdown","ba240f81":"markdown","d06554df":"markdown","eb8f256b":"markdown","42cd54ee":"markdown","52252894":"markdown","0589d0c8":"markdown","3c28b219":"markdown","1468244e":"markdown","36bc9504":"markdown"},"source":{"a1e728c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objects as go \nimport plotly.express as px \nimport seaborn as sns\nimport scipy.stats as stats\nfrom math import sqrt\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5bf92c71":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ntest  = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')","a602aa46":"train.head()","50b45dfe":"!pip install bokeh","f54a8b39":"!pip install holoviews","bc91753a":"import holoviews as hv\nfrom holoviews import opts, dim\nhv.extension('bokeh')","d620eafc":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\nresist_cnt = np.round(train['R'].value_counts(normalize=True) * 100)\nhv.Bars(resist_cnt).opts(title=\"Respiratory System Resistance\", color=\"green\", xlabel=\"R\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True))","5c2f02d8":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\ncompli_cnt = np.round(train['C'].value_counts(normalize=True) * 100)\nhv.Bars(compli_cnt).opts(title=\"Respiratory System Compliance\", color=\"yellow\", xlabel=\"C\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True))","6a4ef3aa":" #Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\ncount = hv.Bars(train.groupby(['C','R'])['u_out'].count()).opts(ylabel=\"Count\", title='Compliance\/Resistance Count')\nmean = hv.Bars(train.groupby(['C','R']).agg({'u_out': ['mean']})['u_out']).opts(ylabel=\"Count\", title='Compliance\/Resistance Mean')\n(count + mean).opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","5ce1e25b":"#Code by Kohei-mu https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-accident-causal-analysis\/notebook\n\nout_cnt = np.round(train['u_out'].value_counts(normalize=True) * 100)\nhv.Bars(out_cnt).opts(title=\"Air Out\", color=\"blue\", xlabel=\"U_out\", ylabel=\"Percentage\", yformatter='%d%%')\\\n                .opts(opts.Bars(width=500, height=300,tools=['hover'],show_grid=True))","438a24ef":" #Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\ncount = hv.Bars(train.groupby(['R','u_out'])['pressure'].count()).opts(ylabel=\"Count\", title='Resistance\/Air out Count')\nmean = hv.Bars(train.groupby(['R','u_out']).agg({'pressure': ['mean']})['pressure']).opts(ylabel=\"Count\", title='Resistance\/Air out Mean')\n(count + mean).opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","ea724252":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\nresist_maxmin = train.groupby(['R','pressure']).agg({'u_out': ['min', 'max']})\n(hv.Bars(resist_maxmin['u_out']['max']).opts(ylabel=\"Count\", title='Resistance\/Pressure Max') \\\n+ hv.Bars(resist_maxmin['u_out']['min']).opts(ylabel=\"Count\", title='Resistance\/Pressure Min'))\\\n    .opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","87b4a33e":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\ncompli_maxmin = train.groupby(['C','u_out']).agg({'pressure': ['min', 'max']})\n(hv.Bars(compli_maxmin['pressure']['max']).opts(ylabel=\"Count\", title='Compliance\/Pressure Max') \\\n+ hv.Bars(compli_maxmin['pressure']['min']).opts(ylabel=\"Count\", title='Compliance\/Pressure Min'))\\\n    .opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","ef8ed5cc":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n#Density is the distribution density. Not a feature. Hence, don't change it.\n\nhv.Distribution(train['R']).opts(opts.Distribution(title=\"Resistance Distribution\", xlabel=\"Respiratory System Resistance\", ylabel=\"Density\", width=700, height=300,tools=['hover'],show_grid=True))","31b28e13":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n#Density is the distribution density. Not a feature. Hence, don't change it.\n\nhv.Distribution(train['C']).opts(opts.Distribution(title=\"Compliance Distribution\", xlabel=\"Respiratory System Compliance\", ylabel=\"Density\", color=\"red\", width=700, height=300,tools=['hover'],show_grid=True))","4a0e878a":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\n((hv.Distribution(train.loc[train['R']==50,'u_out'], label='5') * hv.Distribution(train.loc[train['R']==5,'u_out'], label='5')).opts(title=\"Respiratory System Resistance\", legend_position='bottom') + \\\n(hv.Distribution(train.loc[train['R']==50,'u_out'], label='20') * hv.Distribution(train.loc[train['C']==20,'u_out'], label='20') \\\n     * hv.Distribution(train.loc[train['C']==10,'u_out'], label='10')).opts(title=\"Respiratory System Compliance\", legend_position='bottom')) \\\n     .opts(opts.Distribution(xlabel=\"Respiratory System Resistance and Compliance \", ylabel=\"Density\", width=380, height=300,tools=['hover'],show_grid=True))","6fc727d2":"#Code By Kohei-Mu  https:\/\/www.kaggle.com\/koheimuramatsu\/women-s-shoes-eda\n\nresi_cnt = train['R'].value_counts() > 100\ncol = hv.Bars(train['R'].value_counts()[resi_cnt][::-1]).opts(title=\"Resistance Count over 100\", color=\"purple\", xlabel=\"Respiratory System Resistance\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':10}))\npr = hv.Distribution(train['C']).opts(title=\"Compliance Distribution\", color=\"purple\", xlabel=\"Respiraty System Compliance\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","bcfc073f":"import seaborn as sbn\n\ncorrelation=train.corr()\nplt.figure(figsize=(10,10))\nsbn.heatmap(correlation,annot=True,cmap=plt.cm.summer);","69c57566":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom graphviz import Source\n\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split\n\n\nfrom scipy.stats import skew\nplt.style.use('ggplot')","e461672e":"#Code by Tejashvi14 https:\/\/www.kaggle.com\/tejashvi14\/casualty-analysis\/notebook\n\n#After that snippet the float(Year) and the other objects become integers.\n\ntrain[\"time_step\"]=train[\"time_step\"].apply(int)\ntrain[\"u_in\"]=train[\"u_in\"].apply(int)\ntrain[\"pressure\"]=train[\"pressure\"].apply(int)","71d58688":"x = train.drop(['id', 'pressure'], axis=1)\nx.fillna(999999, inplace=True)\ny = train['pressure']","91e60d45":"dt = DecisionTreeClassifier(max_depth=3)","cb96ec62":"dt.fit(x, y)","3ee67a03":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='green')\nplt.show()","0192a87b":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","27cc522b":"#The second control input is a binary variable representing whether the exploratory valve is open (1) or closed (0) to let air out.","ba240f81":"#I had to install Bokeh and Holoviews separated so that I could work with those packages. Now, I need some ventilation, after finding out that a code that I ran less than one month ago didn't work.","d06554df":"![](https:\/\/www.ahrq.gov\/sites\/default\/files\/wysiwyg\/professionals\/quality-patient-safety\/hais\/tools\/mvp\/modules\/vae\/ptsoffventilator\/ptsoffventilator-slide6.jpg)ahrq.gov","eb8f256b":"The Intraclass Correlation Coefficients (ICC) for the measurements of respiratory system static compliance, interexaminer (A = A1 x B and C = B x A2) and intraexaminer (B = A1 x A2), with n = 66. ICC - intraclass correlation coefficient;  Cst rs - Static Compliance of the Respiratory System\n\nhttps:\/\/www.scielo.br\/j\/rbti\/a\/cxtS76H9LgDxd3dR7hXhrDv\/?lang=en&format=pdf","42cd54ee":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: black;\"><b style=\"color:#03e8fc;\">Positive-Pressure Ventilation<\/b><\/h1><\/center>\n\n\"Positive-pressure ventilation means that airway pressure is applied at the patient's airway through an endotracheal or tracheostomy tube. The positive nature of the pressure causes the gas to flow into the lungs until the ventilator breath is terminated. As the airway pressure drops to zero, elastic recoil of the chest accomplishes passive exhalation by pushing the tidal volume out.\"\n\n\"It was observed a decrease in mortality rate from 80% to 25%, led to the adaptation of the positive-pressure machines used in the operating room for use in the ICU.\"\n\nhttps:\/\/emedicine.medscape.com\/article\/304068-overview","52252894":"![](https:\/\/media.springernature.com\/lw685\/springer-static\/image\/art%3A10.1186%2F1749-8090-5-39\/MediaObjects\/13019_2010_Article_272_Fig2_HTML.jpg)cardiothoracicsurgery.biomedcentral.com\n\nhttps:\/\/cardiothoracicsurgery.biomedcentral.com\/articles\/10.1186\/1749-8090-5-39\n\n\n\"Mechanical ventilation and the total artificial heart: optimal ventilator trigger to avoid post-operative autocycling - a case series and literature review\"\n\nAuthors: Allen B Shoham, Bhavesh Patel, Francisco A Arabia & Michael J Murray \nJournal of Cardiothoracic Surgery volume 5, Article number: 39 (2010)\n\n\n\"Many patients with end-stage cardiomyopathy are now being implanted with Total Artificial Hearts (TAHs). The authors have observed individual cases of post-operative mechanical ventilator autocycling with a flow trigger, and subsequent loss of autocycling after switching to a pressure trigger. Their data suggest that mechanical ventilator autocycling may be resolved or prevented by the use of a pressure trigger rather than a flow trigger setting in patients with TAHs who require mechanical ventilation.\"\n\n\"In summary, autocycling of the mechanical ventilator occurred in 50% of patients who had received TAHs (Total Artificial Hearts) with the use of a flow trigger ventilator setting.\" \n\n\"Mechanical ventilator PEEP (Positive end-expiratory Pressure) maintenance maintains pressure at the expense of altered flow, ultimately leading to autocycling in the case of a flow trigger. Given the frequency of autocycling in the ICU, this information may be applicable to other patients who are mechanically ventilated.\"\n\n\"Because ADVANCED VENTILATOR SOFTWARE has significantly diminished differences in inspiratory work of breathing, physicians may consider using a pressure trigger as an initial ventilator mode, or switching to this mode in patients suspected of, or at high risk for autocycling.\"\n\nhttps:\/\/cardiothoracicsurgery.biomedcentral.com\/articles\/10.1186\/1749-8090-5-39","0589d0c8":"#Acknowledgements: Kohei-Mu  https:\/\/www.kaggle.com\/koheimuramatsu\/women-s-shoes-eda","3c28b219":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">Stages of Mechanical Ventilation<\/span><\/h1><br>\n\n\"There are four stages of mechanical ventilation. There is the trigger phase, the inspiratory phase, the cycling phase, and the expiratory phase. The trigger phase is the initiation of an inhalation which is triggered by an effort from the patient or by set parameters by the mechanical ventilator.\"\n\nhttps:\/\/www.ncbi.nlm.nih.gov\/books\/NBK539742\/","1468244e":"<h1><span class=\"label label-default\" style=\"background-color:black;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#03e8fc; padding:10px\">Machine Ventilation is still Crude<\/span><\/h1><br>\n\n\"In just 50 short years we have gone from relatively crude, totally mechanical devices that could provide only machine-triggered volume ventilation to highly evolved microprocessor-controlled systems capable of any form of ventilatory support imaginable.\" Robert Kacmarek wrote in (2011): \u201cThe mechanical ventilator: past, present, and future.\u201d\nhttps:\/\/www.rochester.edu\/newscenter\/brief-history-of-ventilators-424312\/\n\nTherefore, let's see how our Kaggle community can improve Mechanical Ventilation with algorithms.","36bc9504":"\"Respiratory system compliance and resistance in the critically ill\" \n\nChapter:Respiratory system COMPLIANCE and RESISTANCE in the critically ill.\n\nAuthors: Ricardo Luiz Cordioli and Laurent Brochard - DOI:10.1093\/med\/9780199600830.003.0074\n\n\u25c6 \"Correct understanding of the relationship between pressure, volume, and flow is a basic requirement for correctly setting a ventilator.\"\n\n\u25c6 \"The lungs and chest wall both participate to global respiratory mechanics. In some situations, such as obesity or ARDS, the chest wall could explain a large part of the low compliance of the respiratory system.\"\n\n\u25c6 \"RESISTANCE (R) represents the ratio between the pressure dissipated by the friction of gas and the mean gas flow.\"\n\n\u25c6 \"COMPLIANCE (C) denotes the capacity of the pulmonary system to expand and is calculated as ratio between volume and pressure.\"\n\n\u25c6 \"Intrinsic positive end expiratory pressure (PEEP) can be present with short expiratory time, high respiratory rate, or expiratory flow limitation in airway obstructive disease.\"\n\nhttps:\/\/oxfordmedicine.com\/view\/10.1093\/med\/9780199600830.001.0001\/med-9780199600830-chapter-74"}}