{"cell_type":{"4f95049c":"code","86e3e42b":"code","772f0699":"code","35361ab7":"code","edba3008":"code","29b71415":"code","32d4488b":"code","a75bf042":"code","542ce164":"markdown","02a7b250":"markdown"},"source":{"4f95049c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom matplotlib import dates\n\nimport matplotlib\nimport statsmodels.tsa.api as tsa\n\n%matplotlib inline\n\nmatplotlib.style.use(\"Solarize_Light2\")\n\nfrom pylab import rcParams\nimport statsmodels.api as sm\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86e3e42b":"df = pd.read_csv(\"\/kaggle\/input\/location-of-34-chinese-cities\/china.csv\", encoding='ISO-8859-2')\ndf.head()","772f0699":"df.isnull().sum()","35361ab7":"#Code by Taikutsu https:\/\/www.kaggle.com\/ravels1991\/simple-eda\/comments\n\ng = sns.lmplot(x=\"longtitude\", y=\"latitude\", data=df,\n           fit_reg=False, scatter_kws={\"s\": 30}, hue='city', height=10)\nplt.title('Chinese Cities Location')\nplt.show()","edba3008":"fig_px = px.scatter_mapbox(df, lat=\"latitude\", lon=\"longtitude\",\n                           hover_name=\"city\",\n                           zoom=11, height=300)\nfig_px.update_layout(mapbox_style=\"open-street-map\",\n                     margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n\nfig_px.show()","29b71415":"fig_px.update_traces(marker={\"size\": [10 for x in df]})","32d4488b":"lhasa = df[(df['city']=='Lasa')].reset_index(drop=True)\nlhasa.head()","a75bf042":"#Code by Mashrimp https:\/\/www.kaggle.com\/katomash\/a-car-is-moving-or-not-accuracy-94\/notebook\n\nfig = px.scatter_mapbox(lhasa,\n                    # Here, plotly gets, (x,y) coordinates\n                    lat=\"latitude\",\n                    lon=\"longtitude\",\n                    text='city',\n\n                    #Here, plotly detects color of series\n                    color=\"city\",\n                    labels=\"city\",\n\n                    zoom=14.5,\n                    center={\"lat\":29.97, \"lon\":91.11},\n                    height=600,\n                    width=800)\nfig.update_layout(mapbox_style='stamen-terrain')\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0})\nfig.update_layout(title_text=\"Lasa City Location\")\nfig.show()","542ce164":"That's all for now.","02a7b250":"#Lhasa City"}}