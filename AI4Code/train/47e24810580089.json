{"cell_type":{"0045e816":"code","daead208":"code","37a94ff5":"code","44fe7590":"code","4e49ed74":"code","fcf80f99":"code","cc9a212a":"code","3d884ba5":"code","a0ea546d":"code","f553b41c":"code","cb751db6":"code","d8a0d2d2":"code","c31f33e0":"code","a2a6b932":"code","56d305b8":"code","28501944":"code","d96e7eed":"code","ac6ead84":"code","d49e7bf7":"code","a1a16258":"code","c627ee0a":"code","bcf99d27":"code","92ffe115":"code","d4ff7526":"code","886fe17f":"code","d9327832":"code","283884eb":"code","9f3c4823":"markdown","fd5bdeeb":"markdown","7719f130":"markdown","4171314b":"markdown","fb84f4ac":"markdown","9da00f05":"markdown","9aa13a7c":"markdown","74879db0":"markdown","3d66c35f":"markdown","78eaffa6":"markdown","d558c7c4":"markdown","c9e3f222":"markdown","7c910699":"markdown","625b7d29":"markdown","128c1443":"markdown","13f6a434":"markdown","d4132327":"markdown","1b07ed46":"markdown","f9bd4369":"markdown","4e08e469":"markdown","089e28ad":"markdown"},"source":{"0045e816":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","daead208":"# Importing libs\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.dates as mdates\nimport matplotlib.pyplot as plt\nfrom textwrap import wrap\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport plotly as py\nimport plotly.graph_objs as go\nimport os\npy.offline.init_notebook_mode(connected = True)\n#print(os.listdir(\"..\/input\"))\nimport datetime as dt\n","37a94ff5":"!pip install pywaffle","44fe7590":"# Data sets\ndata = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\nuk_uptake = pd.read_csv('\/kaggle\/input\/supplementary-data\/data_2021-Mar-28.csv')\neurope_pop = pd.read_csv('\/kaggle\/input\/supplementary-data\/europe_pop.csv')\n# features\nuk_uptake[\"date\"] = pd.to_datetime(uk_uptake[\"date\"], format = '%Y-%m-%d')\nuk_uptake = uk_uptake.replace([np.inf, -np.inf], np.nan)\nuk_uptake = uk_uptake.fillna(0)\nshare_daily = uk_uptake.groupby('date')['cumVaccinationFirstDoseUptakeByPublishDatePercentage','cumVaccinationSecondDoseUptakeByPublishDatePercentage'].sum()\nshare_daily.columns = ['First Dose Population %','Second Dose Population %']\n\n","4e49ed74":"# Color selection: UK govt. cols\n# https:\/\/design-system.service.gov.uk\/styles\/colour\/","fcf80f99":"uk = '#1d70b8'\ndark_uk = '#003078'\nothers = 'lightgray'\nbackground_color = \"#fafafa\"\n\nimport matplotlib.pyplot as plt\nfrom pywaffle import Waffle\n\n\n\nfig = plt.figure(figsize=(5, 5),dpi=150,facecolor=background_color,\n    FigureClass=Waffle,\n    rows=10,colors=[dark_uk,uk,others],\n    columns=10,vertical=True,\n    values={'Second Dose %': 25,'First Dose %': (65-25), 'Awaiting': 35})\n    #characters='\u2b24',\n    #font_size=24)\n\nfig.text(0.035,1.09,'UK Vaccination uptake',fontfamily='arial',fontsize=20,fontweight='bold')\nfig.text(0.035,1.01,'Nearly 65% of the UK adult population\\nhas received the first dose of the vaccine.',color='gray',fontfamily='arial',fontsize=10)\n\nimport matplotlib.patches as mpatches\nimport matplotlib.pyplot as plt\n\nfirst_patch = mpatches.Patch(color=uk, label='First dose %')\nsecond_patch = mpatches.Patch(color=dark_uk, label='Second dose %')\n\nplt.legend(handles=[first_patch,second_patch],bbox_to_anchor=(0.5,-0.12),loc='lower center',ncol=2,\n          facecolor=background_color, framealpha=0)\n\n#fig.gca().set_facecolor('#EEEEEE')\n#fig.set_facecolor('#EEEEEE')\n\n\n\nplt.show()","cc9a212a":"\nyears = mdates.YearLocator()\nmonths = mdates.MonthLocator()\nyears_fmt = mdates.DateFormatter('%b %Y')\n\nfig = plt.figure(figsize=(10, 4), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \n# format the ticks\nax0.xaxis.set_major_locator(months)\nax0.xaxis.set_major_formatter(years_fmt)\n\n\n# list to use for plotting \nuk = '#1d70b8'\nothers = 'lightgray'\n\nsns.barplot(ax=ax0,x=share_daily.index,  y=\"First Dose Population %\", data=share_daily, color=uk)\n\nsns.barplot(ax=ax0,x=share_daily.index, y=\"Second Dose Population %\", data=share_daily, color=dark_uk)\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.set_ylim([0,Yend])\nax0.text(Xstart,Yend+(Yend*0.15), 'The UK focused on administering first doses',fontfamily='Arial', fontsize=15, ha='left', va='bottom', weight='bold')\nax0.text(Xstart,Yend+(Yend*0.13), 'In the UK, there are 12 weeks between doses rather than 4.\\nThe second doses have recently began, and the focus will shift', color='gray', fontsize=10, ha='left', va='top')\n\nax0.axhline(y = 0, color = 'black', linewidth = 3, alpha = .7)\nax0.axvline(x = Xstart, color = 'black', linewidth = 3, alpha = .7)\n\n\nax0.set_xlabel(\"Date\",fontsize=8,loc='left', fontfamily='arial')\nax0.set_ylabel(\"Population Vaccinated (%)\",loc='top', fontfamily='arial',fontsize=8)\n\nax0.tick_params(labelsize=10)\n\nax0.tick_params(axis = \"both\", which = \"both\", bottom=False,labelbottom=False)\n\n\nax0.grid(False)\nplt.show()\n","3d884ba5":"pop_europe = europe_pop.iloc[1:]\n\npop_europe.columns = ['id','country','Population','Yearly Change','Net Change','Density (p\/km sq)','Land Area (km sq)','Migrants (Net)','Fertility Rate','Median Age','Urban Population %','World Share %']\n\npop_europe.drop('id',inplace=True,axis=1)\n\n\n# Convert Date column to date type and fill Missing Value\n\ndata[\"date\"] = pd.to_datetime(data[\"date\"], format = '%Y-%m-%d')\ndata = data.replace([np.inf, -np.inf], np.nan)\ndata = data.fillna(0)\n\n# if needed\n\ncountry_vaccine = data.groupby([\"country\", \"iso_code\", \"vaccines\"])['total_vaccinations', \n                                                                       'total_vaccinations_per_hundred',\n                                                                      'daily_vaccinations',\n                                                                      'daily_vaccinations_per_million',\n                                                                      'people_vaccinated',\n                                                                      'people_vaccinated_per_hundred',\n                                                                       'people_fully_vaccinated', 'people_fully_vaccinated_per_hundred'\n                                                                      ].max().reset_index()\n\ndaily_vaccination = data.groupby('date')['daily_vaccinations'].sum()\ndaily_vaccination = daily_vaccination \/ 1000000\n\nuk = data[data['country'] == 'United Kingdom']\nuk_vac = uk.groupby('date')['daily_vaccinations'].sum()\n\nger = data[data['country'] == 'Germany']\nger_vac = ger.groupby('date')['daily_vaccinations'].sum()\n\nuk_daily_vaccination = uk_vac \/ 1000000\nger_daily_vaccination = ger_vac \/ 1000000\n\n\nukv = data[data['country'] == 'United Kingdom'].groupby('date')['daily_vaccinations'].sum()\/1000000\n\n\nfocus = ['United Kingdom','Germany','France','Italy','Spain','Netherlands','Switzerland','Poland','Sweden','Russia','Portugal']\n\n# daily\n\nuk_daily = data[data['country'] == 'United Kingdom'].groupby('date')['daily_vaccinations'].sum()\/1000\nger_daily = data[data['country'] == 'Germany'].groupby('date')['daily_vaccinations'].sum()\/1000\nfra_daily = data[data['country'] == 'France'].groupby('date')['daily_vaccinations'].sum()\/1000\nita_daily = data[data['country'] == 'Italy'].groupby('date')['daily_vaccinations'].sum()\/1000\nspa_daily = data[data['country'] == 'Spain'].groupby('date')['daily_vaccinations'].sum()\/1000\nneth_daily = data[data['country'] == 'Netherlands'].groupby('date')['daily_vaccinations'].sum()\/1000\nswit_daily = data[data['country'] == 'Switzerland'].groupby('date')['daily_vaccinations'].sum()\/1000\npol_daily = data[data['country'] == 'Poland'].groupby('date')['daily_vaccinations'].sum()\/1000\nswe_daily = data[data['country'] == 'Sweden'].groupby('date')['daily_vaccinations'].sum()\/1000\nrus_daily = data[data['country'] == 'Russia'].groupby('date')['daily_vaccinations'].sum()\/1000\npor_daily = data[data['country'] == 'Portugal'].groupby('date')['daily_vaccinations'].sum()\/1000","a0ea546d":"\nyears = mdates.YearLocator()\nmonths = mdates.MonthLocator()\nyears_fmt = mdates.DateFormatter('%b %Y')\n\nfig = plt.figure(figsize=(10, 4), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \n# format the ticks\nax0.xaxis.set_major_locator(months)\nax0.xaxis.set_major_formatter(years_fmt)\n\n\n# list to use for plotting \nuk = '#1d70b8'\nothers = 'lightgray'\ndaily = [uk_daily,ger_daily,fra_daily,ita_daily,spa_daily]\n#uk\nsns.lineplot(ax=ax0,data=daily[0], x=daily[0].index, y=daily[0],color=uk)\n#ger\nsns.lineplot(ax=ax0,data=daily[1], x=daily[1].index, y=daily[1],color=others)\n#fra\nsns.lineplot(ax=ax0,data=daily[2], x=daily[2].index, y=daily[2],color=others)\n#ita\nsns.lineplot(ax=ax0,data=daily[3], x=daily[3].index, y=daily[3],color=others)\n#spa\nsns.lineplot(ax=ax0,data=daily[4], x=daily[4].index, y=daily[4],color=others)\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0.set_ylim([0,Yend])\nax0.set_xlim([Xstart,Xend])\nax0.text(Xstart+7,Yend+(Yend*0.11), 'How do the biggest economies in Europe compare?', color='black',fontfamily='Arial', fontsize=15, ha='left', va='bottom', weight='bold')\nax0.text(Xstart+7,Yend+(Yend*0.095), 'The United Kingdom is leading the pack by a huge margin in daily vaccinations\\nbut Germany have started to gather pace', color='gray', fontsize=10, ha='left', va='top')\n    \nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\nax0.set_xlim(Xstart+7, Xend)\n    \nax0.set_ylabel(\"Daily Vaccinations (000s)\",loc='top', fontfamily='arial',fontsize=8)\nax0.grid(which='major', axis='x', zorder=0, color='#EEEEEE')\nax0.grid(which='major', axis='y', zorder=0, color='#EEEEEE')\nax0.tick_params(labelsize=10)\nax0.fill_between(daily[0].index, daily[0], color=uk, zorder=2, alpha=0.1)\n\nax0.text(Xend-5,uk_daily[-1],'United Kingdom',color =uk,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,ger_daily[-1],'Germany',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,fra_daily[-1]+15,'France',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,ita_daily[-1],'Italy',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,spa_daily[-1],'Spain',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\n\nax0.plot(Xend-6.5,uk_daily[-1], 'ko', markersize=10, fillstyle='full',color=uk, markeredgewidth=1.5)\nax0.plot(Xend-6.5,ger_daily[-1], 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,fra_daily[-1], 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,ita_daily[-1], 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,spa_daily[-1], 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\n\n\nax0.set_xlabel(\" \",fontsize=8,loc='left', fontfamily='arial')\n\nax0.axhline(y = 0, color = 'black', linewidth = 3, alpha = .7)\nax0.axvline(x = Xstart+7, color = 'black', linewidth = 3, alpha = .7)\n\n\nplt.show()","f553b41c":"years = mdates.YearLocator()\nmonths = mdates.MonthLocator()\nyears_fmt = mdates.DateFormatter('%b %Y')\n\nfig = plt.figure(figsize=(10, 4), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \n# format the ticks\nax0.xaxis.set_major_locator(months)\nax0.xaxis.set_major_formatter(years_fmt)\n\n\n# list to use for plotting \nuk = '#1d70b8'\nothers = 'lightgray'\ndaily = [uk_daily,ger_daily,fra_daily,ita_daily,spa_daily]\n#uk\nsns.lineplot(ax=ax0,data=daily[0], x=daily[0].index, y=daily[0].cumsum(),color=uk)\n#ger\nsns.lineplot(ax=ax0,data=daily[1], x=daily[1].index, y=daily[1].cumsum(),color=others)\n#fra\nsns.lineplot(ax=ax0,data=daily[2], x=daily[2].index, y=daily[2].cumsum(),color=others)\n#ita\nsns.lineplot(ax=ax0,data=daily[3], x=daily[3].index, y=daily[3].cumsum(),color=others)\n#spa\nsns.lineplot(ax=ax0,data=daily[4], x=daily[4].index, y=daily[4].cumsum(),color=others)\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\nax0.set_xlim(Xstart, Xend)\nax0.set_ylim([0,Yend])\nax0.text(Xstart,Yend+(Yend*0.1), 'How do the biggest economies in Europe compare?', color='black',fontfamily='Arial', fontsize=15, ha='left', va='bottom', weight='bold')\nax0.text(Xstart,Yend+(Yend*0.075), 'The cumulative lead is even more noticaeble', color='gray', fontsize=10, ha='left', va='top')\n    \n\nax0.set_ylabel(\"Cumulative Vaccination (millions)\",loc='top', fontfamily='arial',fontsize=8)\nax0.grid(which='major', axis='x', zorder=0, color='#EEEEEE')\nax0.grid(which='major', axis='y', zorder=0, color='#EEEEEE')\nax0.tick_params(labelsize=10)\nax0.fill_between(daily[0].index, daily[0].cumsum(), color=uk, zorder=2, alpha=0.1)\n\nax0.axhline(y = 0, color = 'black', linewidth = 3, alpha = .7)\nax0.axvline(x = Xstart, color = 'black', linewidth = 3, alpha = .7)\n\nax0.set_yticklabels(labels = ['0 ', '10', '20', '30', '40'])\n\n# Add colored labels\nax0.text(Xend-5,uk_daily.cumsum().max(),'United Kingdom',color =uk,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,ger_daily.cumsum().max(),'Germany',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,fra_daily.cumsum().max()+500,'France',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,ita_daily.cumsum().max(),'Italy',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\nax0.text(Xend-5,spa_daily.cumsum().max(),'Spain',color =others,fontfamily='arial',fontweight='bold',fontsize=8, rotation=0)\n\n\n# circle at end of line\nax0.plot(Xend-6.5,uk_daily.cumsum().max(), 'ko', markersize=10, fillstyle='full',color=uk, markeredgewidth=1.5)\nax0.plot(Xend-6.5,ger_daily.cumsum().max(), 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,fra_daily.cumsum().max(), 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,ita_daily.cumsum().max(), 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\nax0.plot(Xend-6.5,spa_daily.cumsum().max(), 'ko', markersize=10, fillstyle='full',color=others, markeredgewidth=1.5)\n\nax0.set_xlabel(\" \",fontsize=8,loc='left', fontfamily='arial')\n\n\nplt.show()","cb751db6":"provs = data['vaccines'].value_counts()[:5]\n\n\nfig = plt.figure(figsize=(10, 4),dpi=150, facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax0.spines[s].set_visible(False)\n\nax0.tick_params(axis = \"both\", which = \"both\", left=False, bottom=False,labelbottom=False)\n\nax0.text(0, -1, 'Leading Vaccine combinations across the globe', color='black', fontsize=20, ha='left', va='bottom', weight='bold')\nax0.text(0, -0.93, 'Moderna, Oxford\/AstraZeneca and Pfizer\/BioNTech combination is the most popular', \n         color='gray', fontsize=12, ha='left', va='top')\n\ncolor_map = [others for _ in range(5)]\ncolor_map[0] = uk # color highlight\n\nsns.barplot(ax=ax0, y=provs.index, x=provs,palette=color_map, zorder=2, orient='h')\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.grid(False)\nax0.tick_params(labelsize=5)\n\nlabels = [ '\\n'.join(wrap(l, 20)) for l in provs.index ]\nax0.set_yticklabels([])\n\nfor i in range(0,5):\n    ax0.annotate(list(labels)[i], \n                   xy=(provs[i]-20, i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\n# diff color text\nfor i in range(0,1):\n    ax0.annotate(list(labels)[i], \n                   xy=(provs[i]-20, i),\n                    va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=8, color='white',rotation=0)\n\n                 \n\n\nplt.show()","d8a0d2d2":"!pip install squarify","c31f33e0":"#libraries\nimport matplotlib.pyplot as plt\nimport squarify # pip install squarify (algorithm for treemap)\n\ntemp = data['vaccines'].value_counts().reset_index()\n \n# Change color\n# create a color palette, mapped to these values\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", [others,uk,dark_uk])\nmini=min(temp['vaccines'])\nmaxi=max(temp['vaccines'])\nnorm = matplotlib.colors.Normalize(vmin=mini, vmax=maxi)\ncolors = [cmap(norm(value)) for value in temp['vaccines']]\n\n\n\nfig = plt.figure(figsize=(10, 4),dpi=150, facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\n\n\n\n\nlabels = [ '\\n'.join(wrap(l, 20)) for l in temp['index'] ]\n\nsquarify.plot(sizes=temp['vaccines'], label=labels[:7], color=colors,ec='white',alpha=.8,ax=ax0)\n\nax0.text(0, 115, 'Leading Vaccine combinations across the globe', color='black', fontsize=20, ha='left', va='bottom', weight='bold')\nax0.text(0, 113.8, 'There are many combinations that countries have opted for, this seems sensible given the\\nrisk associated with relying on just one manufacturer.', \n         color='gray', fontsize=12, ha='left', va='top')\n\nplt.axis('off')\nplt.show()","a2a6b932":"# Inspired by the Financial Times: https:\/\/www.ft.com\/content\/8b48a853-5b14-4378-91d4-17026fa15472\n\nfig = plt.figure(figsize=(15, 12), dpi=150,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\n\ns = 75\nx1=1\ny = []\nfs=12\nfor num in range(-34,0):\n    y.append(num)\n    \nsns.scatterplot(x1+0.05,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.07,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.09,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+.025,y[0]-2.5,'100m',fontsize=fs)\nax0.arrow(x1+0.07, y[0]-4, 0, -2, head_width=0.02, head_length=1, color=others,linewidth=2)\n\ny = []\nfor num in range(-10,0):\n    y.append(num)\n\nsns.scatterplot(x1+0.25,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.27,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.29,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+0.225,y[0]-2.5,' 30m',fontsize=fs)\n\nax0.arrow(x1+0.27, y[0]-4.5, 0, -27, head_width=0.02, head_length=1, color=others,linewidth=2)\ny = []\nfor num in range(-34,0):\n    y.append(num)\n    \nsns.scatterplot(x1+0.45,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.47,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.49,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+0.425,y[0]-2.5,'100m',fontsize=fs)\nax0.arrow(x1+0.47, y[0]-4.5, 0, -7, head_width=0.02, head_length=1, color=uk,linewidth=2)\n\n\ny = []\nfor num in range(-7,0):\n    y.append(num)\n    \nsns.scatterplot(x1+0.65,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.67,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.69,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+0.625,y[0]-2.5,' 17m',fontsize=fs)\nax0.arrow(x1+0.67, y[0]-4.5, 0, -34, head_width=0.02, head_length=1, color=uk,linewidth=2)\n\n\n\ny = []\nfor num in range(-13,0):\n    y.append(num)\n    \nsns.scatterplot(x1+0.85,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.87,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+0.89,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+0.825,y[0]-2.5,' 40m',fontsize=fs)\nax0.arrow(x1+0.87, y[0]-4.5, 0, -28, head_width=0.02, head_length=1, color=uk,linewidth=2)\n\n\n\ny = []\nfor num in range(-15,0):\n    y.append(num)\n    \nsns.scatterplot(x1+1.05,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.07,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.09,y,ax=ax0,color=uk,s=s)\nax0.text(x1+1.025,y[0]-2.5,' 50m',fontsize=fs)\nax0.arrow(x1+1.07, y[0]-4.5, 0, -22, head_width=0.02, head_length=1, color=others,linewidth=2)\n\n\n\ny = []\nfor num in range(-20,0):\n    y.append(num)\n    \nsns.scatterplot(x1+1.25,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.27,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.29,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+1.225,y[0]-2.5,'  60m',fontsize=fs)\nax0.arrow(x1+1.27, y[0]-4.5, 0, -17, head_width=0.02, head_length=1, color=others,linewidth=2)\n\n\ny = []\nfor num in range(-20,0):\n    y.append(num)\n    \nsns.scatterplot(x1+1.45,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.47,y,ax=ax0,color=uk,s=s)\nsns.scatterplot(x1+1.49,y,ax=ax0,color=uk,s=s)\n\nax0.text(x1+1.425,y[0]-2.5,' 60m',fontsize=fs)\nax0.arrow(x1+1.47, y[0]-4.5, 0, -12, head_width=0.02, head_length=1, color=others,linewidth=2)\n\n\n\n# manuf\nfs=12\nax0.text(x1+0.07,1.5,'Valneva',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.27,1.5,'Janssen',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.47,1,'Oxford\/\\nAstraZeneca',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.67,1.5,'Moderna',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.87,1,'BioNTech\/\\nPfizer',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+1.07,1.5,'CureVac',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+1.27,1.5,'Novavax',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+1.47,1.5,'GSK',rotation=0,fontsize=fs,ha='center')\n\n\n## All\n\nax0.set_xlim(1,3)\nax0.set_xticks(range(1,3))\nax0.set_yticklabels([])\n# Hide grid lines\nax0.grid(False)\nax0.tick_params(axis = \"both\", which = \"both\", left=False, labelbottom=False)\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax0.spines[s].set_visible(False)\n    \n\nax0.text(1,7,'UK doses secured by manufacturer\\n& vaccine progress',fontsize=30,fontweight='bold')\nax0.text(1,5,'The UK has secured millions of doses from multiple manufacturers - reducing risk and ensuring demand is met.',color='gray',fontsize=12)\n\n#ax0.axhline(y = -48, color = 'black', linestyle='--',linewidth = 1.3, alpha = .7)\n\nax0.text(x1+0.07,-51,'Phase\\n2 Trials',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.27,-51,'Phase\\n3 Trials',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+0.47,-51,'Approved\\n& Deployed',rotation=0,fontsize=fs,ha='center',color=uk)\nax0.text(x1+0.67,-50.5,'Approved',rotation=0,fontsize=fs,ha='center',color=uk)\nax0.text(x1+0.87,-51,'Approved\\n& Deployed',rotation=0,fontsize=fs,ha='center',color=uk)\nax0.text(x1+1.07,-51,'Phase\\n3 Trials',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+1.27,-51,'Phase\\n3 Trials',rotation=0,fontsize=fs,ha='center')\nax0.text(x1+1.47,-51,'Phase\\n2 Trials',rotation=0,fontsize=fs,ha='center')\n\nax0.text(x1+1.78,-50.5,'Status',rotation=0,fontsize=15,fontweight='bold',ha='center')\nax0.text(x1+1.78,1.5,'Manufacturer',rotation=0,fontsize=15,fontweight='bold',ha='center')\nax0.text(x1+1.78,-23.75,'Doses\\nSecured',rotation=0,fontsize=15,fontweight='bold',ha='center',color=uk)\nax0.text(x1+1.78,-25.75,'Progress',rotation=0,fontsize=15,fontweight='bold',ha='center',color=others)\n\nax0.tick_params(axis = \"both\", which = \"both\", left=False, bottom=False,labelbottom=False)\n\nimport matplotlib.lines as lines\nl1 = lines.Line2D([0.1, 0.9], [0.14, 0.14], transform=fig.transFigure, figure=fig,color = 'black', linestyle='--',linewidth = 1.3, alpha = .7)\nfig.lines.extend([l1])\n\nl2 = lines.Line2D([0.1, 0.9], [0.864, 0.864], transform=fig.transFigure, figure=fig,color = 'black', linestyle='--',linewidth = 1.3, alpha = .7)\nfig.lines.extend([l2])\n\nplt.show()","56d305b8":"from matplotlib.patches import FancyBboxPatch\n\ndf_vac = pd.DataFrame(columns=['group'],data=[0.8,7.1,2.3,4.4,2.9,7.3,1.8,2.4,2.8,21])\n\nfig = plt.figure(figsize=(12, 3), dpi=175,facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\n\n\nax0.set_facecolor(background_color)\n\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax0.spines[s].set_visible(False)\n    \ndf_vac.T.plot.barh(stacked=True, width=1, ec=background_color,color=[uk,uk,uk,uk,uk,uk,uk,uk,uk,others],legend=False,ax=ax0)\n\n\n\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax0.spines[s].set_visible(False)\nax0.tick_params(axis=u'both', which=u'both',length=0)\nax0.set_xticklabels([])\nax0.set_yticklabels([])\n\nax0.text(0,1.15,'The UK highlighted 9 priority groups for vaccination',fontsize=15,fontweight='bold')\nax0.text(0,0.88,'These groups account for 31m people, with the remainder of the population\\nhaving to delay their vaccinations.',color='gray',fontsize=10)\n\nfs=8\nax0.text(32.5,-0.4,'Rest of Adult Population',rotation=0,fontsize=12)\nax0.text(0,0.7,'Priority groups',rotation=0,fontsize=12,color=uk)\nax0.text(0,0.57,'Care workers & residents, 80+, 75-79, 70-74, 65-69, At risk under 65, 60-64, 55-59, 50-54',rotation=0,fontsize=8,color=uk)\n\n\n\nimport matplotlib.lines as lines\nl1 = lines.Line2D([0.568, 0.568], [0, 0.76], transform=fig.transFigure, figure=fig,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nax0.text(32.7,-0.84,'Target is to offer all of the\\nadult population a first vaccine\\nby July 2021',color='gray',rotation=0,fontsize=8)\n\nax0.text(30.7,-0.85,'The vulnerable groups will all have had\\na first vaccination by mid-April 2020\\nwith second jabs being around 12 weeks later',color='gray',ha='right',rotation=0,fontsize=8)\n\n\n# annotations\n\nfor p in ax0.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax0.text(x+width-width+0.5, \n            y+height-0.08, \n            '{:.0f}'.format(width), \n            horizontalalignment='center', \n            verticalalignment='center')\n    ax0.text(x+width-width+0.5, \n            y+height-0.3, \n            'million'.format(width), \n            horizontalalignment='center', \n            verticalalignment='center',rotation=90)\n\nplt.show()","28501944":"total_vac = data.groupby('country')['daily_vaccinations'].sum().reset_index()\ntotal_vac[total_vac['country'] == 'United Kingdom']\n\npop_vac = pd.merge(europe_pop, total_vac, on='country')\npop_vac[\"Population\"] = pop_vac[\"Population\"].str.replace(',','')\npop_vac[\"Land Area\"] = pop_vac[\"Land Area\"].str.replace(',','')\npop_vac[\"Population\"] = pop_vac[\"Population\"].astype(int)\npop_vac['% Pop. Vaccinated'] = pop_vac['daily_vaccinations']\/pop_vac['Population']","d96e7eed":"pop_vac['Urban'] = pop_vac['Urban'].str.replace('%','')\npop_vac['Urban'] = pop_vac['Urban'].str.replace('N.A.','70')\npop_vac['Urban'] = pop_vac['Urban'].str.replace(' ','70')\n\npop_vac['Urban'] = pop_vac['Urban'].astype(float)\n\n\n\nfocus_data = pop_vac[(pop_vac['country'] == 'United Kingdom') |(pop_vac['country'] == 'Germany')|(pop_vac['country'] == 'France')\n       |(pop_vac['country'] == 'Spain')|(pop_vac['country'] == 'Italy')|(pop_vac['country'] == 'Russia')|(pop_vac['country'] == 'Portugal')]","ac6ead84":"\n\npop_vac['% Pop. Vaccinated'] = pop_vac[pop_vac['% Pop. Vaccinated'] != 1.708319729304562]\n\noxford_only = country_vaccine[country_vaccine['vaccines'] == 'Oxford\/AstraZeneca']\n","d49e7bf7":"cst_vac = pd.DataFrame(columns=['Cost Per Dose'],\n                      data = [4,10,20,30,37])\n\nManufacturers ='Oxford\/AstraZeneca','Johnson & Johnson','Pfizer\/BioNTech','Sinovac','Moderna'\n\ncst_vac['Provider'] = Manufacturers\n\n\n\nfig = plt.figure(figsize=(10, 4),dpi=150, facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax0 = fig.add_subplot(gs[0, 0])\nax0.set_facecolor(background_color)\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax0.spines[s].set_visible(False)\n\nax0.tick_params(axis = \"both\", which = \"both\", left=False, bottom=False,labelbottom=False)\n\nax0.text(0, -1, 'How much does a dose of each vaccine cost?', color='black', fontsize=15, ha='left', va='bottom', weight='bold')\nax0.text(0, -0.93, 'Oxford\/AstraZeneca is the only vaccine produces & sold at cost, with no profit being taken.', \n         color='gray', fontsize=12, ha='left', va='top')\n\ncolor_map = [others for _ in range(5)]\ncolor_map[0] = uk # color highlight\nsns.barplot(ax=ax0, y=cst_vac['Provider'], x=cst_vac['Cost Per Dose']*1.1,color=background_color, zorder=2, orient='h')\n\nsns.barplot(ax=ax0, y=cst_vac['Provider'], x=cst_vac['Cost Per Dose'],palette=color_map, zorder=2, orient='h')\n\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.grid(False)\nax0.tick_params(labelsize=5)\n\nlabels = [ '\\n'.join(wrap(l, 40)) for l in cst_vac['Provider'] ]\nax0.set_yticklabels([])\n\nfor i in range(1,5):\n    ax0.annotate(cst_vac['Provider'][i], \n                   xy=(cst_vac['Cost Per Dose'][i]-0.1, i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\n\n    ax0.annotate(f\"${cst_vac['Cost Per Dose'][i]}\", \n                   xy=(cst_vac['Cost Per Dose'][i]+3, i), \n                   va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=15, color=others,rotation=0)\n# diff color text\nfor i in range(0,1):\n    ax0.annotate('$4', \n                   xy=(cst_vac['Cost Per Dose'][i]+2, i),\n                    va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=15, color=uk,rotation=0)\n    ax0.annotate('Oxford\/\\nAstraZeneca', \n                   xy=(cst_vac['Cost Per Dose'][i]-0.1, i),\n                    va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\n    \nfor i in range(4,5):\n    ax0.annotate('$37', \n                   xy=(cst_vac['Cost Per Dose'][i]+3, i),\n                    va = 'center', ha='right',fontweight='light', fontfamily='serif',fontsize=15, color='#9b1b30',rotation=0)        \n\n\nplt.show()","a1a16258":"world_country_pop_median = pop_vac['Population'].median()\n\ncst_vac['Cost for mean Country Population'] = cst_vac['Cost Per Dose']*world_country_pop_median\n\n","c627ee0a":"!pip install circlify","bcf99d27":"# import the circlify library\nimport circlify\n\n# compute circle positions:\ncircles = circlify.circlify(\n    cst_vac['Cost for mean Country Population'].tolist(), \n    show_enclosure=False, \n    target_enclosure=circlify.Circle(x=0, y=0, r=1)\n)","92ffe115":"\nfig = plt.figure(figsize=(7, 7),dpi=150, facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax = fig.add_subplot(gs[0, 0])\nax.set_facecolor(background_color)\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax.spines[s].set_visible(False)\n\nax.set_facecolor(background_color)\n\n# Title\nax.text(-1,1.3,'How much does it cost to purchase\\nenough doses for a country?',fontsize=15,fontweight='bold')\nax.text(-1,1.15,'The median country population is 5.5 million people - that is used here.\\nVariation in cost is staggering - and this does not include logistical or manufacturing costs.',color='gray',fontsize=10)\n\n# Remove axes\nax.axis('off')\n\n# Find axis boundaries\nlim = max(\n    max(\n        abs(circle.x) + circle.r,\n        abs(circle.y) + circle.r,\n    )\n    for circle in circles\n)\nplt.xlim(-lim, lim)\nplt.ylim(-lim, lim)\n\n# list of labels\nlabels = cst_vac['Provider']\ncosts = cst_vac['Cost for mean Country Population']\n# print circles\nfor circle, label in zip(circles, labels):\n    if label == 'Oxford\/AstraZeneca':\n        x, y, r = circle\n        ax.add_patch(plt.Circle((x, y), r, alpha=0.9, linewidth=1, facecolor=uk, edgecolor=\"black\"))\n        plt.annotate('Oxford\/\\nAstraZeneca', (x,y+0.05) ,va='center', ha='center',color='white', fontsize=8)\n        \n    else:\n        x, y, r = circle\n        ax.add_patch(plt.Circle((x, y), r, alpha=0.5, linewidth=0.3, facecolor=others, edgecolor=\"black\"))\n        plt.annotate(label, (x,y+0.05) ,va='center', ha='center', fontsize=8, alpha=0.5)\n    \nfor circle, costs in zip(circles, costs):\n        x, y, r = circle\n        plt.annotate(f\"${format(round(costs), ',')}\", (x,y-0.03) ,va='center', ha='center', fontsize=8) #bbox=dict(facecolor='white', edgecolor='black', boxstyle='round', pad=.5))\n        \n   \n","d4ff7526":"fig = plt.figure(figsize=(4, 7),dpi=125, facecolor=background_color)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0, hspace=0)\nax = fig.add_subplot(gs[0, 0])\nax.set_facecolor(background_color)\nfor s in [\"right\", \"top\",\"bottom\",\"left\"]:\n    ax.spines[s].set_visible(False)\n\nax.set_facecolor(background_color)\n\n\nx = range(3)\nlabels = ['Oxford\/AstraZeneca','Moderna','Pfizer\/BioNTech']\nnegative_data = [4,0,0]\npositive_data = [0,-20,-70]\n\n\nax.bar(x, negative_data, width=1, color=uk)\nax.bar(x, positive_data, width=1,ec='white', color=others)\n\nax.set_xticklabels([])\nax.tick_params(axis = \"both\", which = \"both\", left=False, bottom=False,labelbottom=False)\n\nax.annotate('Oxford\/\\nAstraZeneca', xy=(x[0], 7), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\nax.annotate(labels[1], xy=(x[1], -23), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\nax.annotate(labels[2], xy=(x[2], -73), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=8, color='black',rotation=0)\n\nax.annotate('4 \u00b0C', xy=(x[0], 2), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=10, color='white',rotation=0)\nax.annotate('-20 \u00b0C', xy=(x[1], -18), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=10, color='black',rotation=0)\nax.annotate('-70 \u00b0C', xy=(x[2], -68), va = 'center', ha='center',fontweight='light', fontfamily='serif',fontsize=10, color='black',rotation=0)\n\nax.text(-1,24,'What about vaccine storage?',fontsize=15,fontweight='bold')\nax.text(-1,15,'Required storage temperature of each vaccine\\nvaries significantly, and can be an important\\nfactor for countries around the world',color='gray',fontsize=10)\n\n\nplt.show()","886fe17f":"import geopandas\nimport matplotlib.colors\nimport pycountry \n\n#data prep\ndata['ox_ast'] = data['vaccines'].str.contains('Oxford\/AstraZeneca') \ndata['ox_ast'] = data['ox_ast'].apply(lambda x: 1 if x == True else 0)\n\nox_coverage = data\n\n\n#source: https:\/\/melaniesoek0120.medium.com\/data-visualization-how-to-plot-a-map-with-geopandas-in-python-73b10dcd4b4b\n\ndef alpha3code(column):\n    CODE=[]\n    for country in column:\n        try:\n            code=pycountry.countries.get(name=country).alpha_3\n           # .alpha_3 means 3-letter country code \n           # .alpha_2 means 2-letter country code\n            CODE.append(code)\n        except:\n            CODE.append('None')\n    return CODE\n# create a column for code \nox_coverage['CODE']=alpha3code(ox_coverage['country'])\n\n\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\n# rename the columns so that we can merge with our data\nworld.columns=['pop_est', 'continent', 'name', 'CODE', 'gdp_md_est', 'geometry']\n# then merge with our data \nmerge=pd.merge(world,ox_coverage,on='CODE')\n\n\n","d9327832":"# Custom colour map\ncmap = matplotlib.colors.LinearSegmentedColormap.from_list(\"\", [others,uk])\n\nax = world.plot(figsize=(20,15), linewidth=0.25, edgecolor=background_color, color=others)\nax.axis('off')\nax.set_facecolor(background_color)\nmerge.plot(column='ox_ast',figsize=(20, 15),\nlegend=False,cmap=cmap,ax=ax)\n\n\nax.text(-175,110,'Which other countries use Oxford\/AstraZeneca?',fontsize=35,fontweight='bold')\nax.text(-175,102,'A lot of countries worldwide are benefitting from the cost-price reproduction.',color='gray',fontsize=15)\n\nplt.show()","283884eb":"# Very useful plot - not used here in the end\n\n#https:\/\/datadependence.com\/2016\/06\/creating-map-visualisations-in-python\/\n#https:\/\/boundingbox.klokantech.com\/\n# hihglihgt your country, add go to DublinCore\n##westlimit=-9.6; southlimit=49.4; eastlimit=2.9; northlimit=59.3\n\n#import matplotlib.pyplot as plt\n#import matplotlib.cm\n\n#from mpl_toolkits.basemap import Basemap\n#from matplotlib.patches import Polygon\n#from matplotlib.collections import PatchCollection\n#from matplotlib.colors import Normalize\n\n\n#fig = plt.figure(figsize=(7, 7),dpi=150, facecolor='#f6f5f5')\n#gs = fig.add_gridspec(1, 1)\n#gs.update(wspace=0, hspace=0)\n#ax = fig.add_subplot(gs[0, 0])\n#ax.set_facecolor(background_color)\n\n\n#westlimit=-9.6; southlimit=49.4; eastlimit=2.9; northlimit=59.3\n\n#m = Basemap(resolution='c', # c, l, i, h, f or None\n#            projection='merc',\n#            lat_0=59.3, lon_0=-9.6,\n#            llcrnrlon=-9.3, llcrnrlat= 49.5, urcrnrlon=2.9, urcrnrlat=59.2)#\n#            #west lim     #south lim         #east lim      #northlim\n#m.drawmapboundary(fill_color=background_color)\n#m.fillcontinents(color=uk,lake_color=background_color)\n#m.drawcoastlines()\n\n\n\n#plt.show()","9f3c4823":"# Check out more of my work:\n\n\n\nStroke Prediction - using SHAP, LIME explainer, and ELI5, along with more data visualization\n\n* https:\/\/www.kaggle.com\/joshuaswords\/predicting-a-stroke-shap-lime-explainer-eli5\n\n\nWho will leave our company? Predictions and data visualization\n\n* https:\/\/www.kaggle.com\/joshuaswords\/awesome-hr-data-visualization-prediction\n\n\nCustomer clustering \/ segmentation - How to explain this to stakeholders. Along with data visualization\n\n* https:\/\/www.kaggle.com\/joshuaswords\/data-visualization-clustering-mall-data\n\n\n\nFor a browse:\n\n* https:\/\/www.kaggle.com\/joshuaswords\/code","fd5bdeeb":"These manufactuers were early-movers in the market, so perhaps this will change as more and more vaccines get approved and the choice of available providers widens.\n\nLet's broaden our view...","7719f130":"# So vaccine supplies have been arranged through multiple manufacturers, but who is being given the doses?\n\nThe vaccination process is a logistical and administrative challenge. \n\nThe UK has refined the population down to 9 priority groups, followed by the rest of the adult population, shown below:\n* 1\tResidents in a care home for older adults and staff working in care homes for older adults\n* 2\tAll those 80 years of age and over and frontline health and social care workers\n* 3\tAll those 75 years of age and over\n* 4\tAll those 70 years of age and over and clinically extremely vulnerable individuals (not including pregnant women and those under 16 years of age)\n* 5\tAll those 65 years of age and over\n* 6\tAdults aged 16 to 65 years in an at-risk group \n* 7\tAll those 60 years of age and over\n* 8\tAll those 55 years of age and over\n* 9\tAll those 50 years of age and over\n* 10\tRest of the population ","4171314b":"# Comparison with Europe\n\nFollowing Brexit, the UK was able to act independently of the European Union, and in this case, it has proven an invaluable advantage.\n\nIn this notebook, I will provide an overview of the UK's vaccination programme as it stands today, and I will compare to to some of the other largest economies in Europe.","fb84f4ac":"# Thank you for reading [last update 14\/04\/2021]\n\n# Note that I will continue to add to this project as new ideas come to me!\n\n# If you enjoyed, pleased consider upvoting","9da00f05":"# Manufacturers & Administration\n\nI will also create visuals that show the source of the UKs vaccones, and then how the doses are administered to priority groups.","9aa13a7c":"We can also view the cumulative totals","74879db0":"# Where else is using Oxford\/AstraZeneca?\n\nWe know that the Oxford\/AstraZeneca jab is the cheapest ans easiest to store, so where else is it being used?","3d66c35f":"Cost is one thing, but what about storing & transporting the vaccines?","78eaffa6":"The vaccination programme in the United Kingdom is one of the leading in the world today.\n\nIt is also a world leader in helping others to increase their vaccinations. The Oxford\/AstraZeneca vaccine was funded by the UK govt. and is the only COVID-19 vaccine that is sold at cost - no profit is made.\n","d558c7c4":"# The UK's vaccines","c9e3f222":"# Where is solely Oxford\/AstraZeneca used?\n\nAs I said at the beginning of this project, the UK govt. is ensuring that the Oxford\/AstraZeneca jab is provided at **cost**\n\nSo where else is this vaccine being used? And just how much of a difference in cost does this provide?","7c910699":"# Progress\n\n\nIt is widely reported that the UK has one of the most successful vaccination programme sin the world at this point, but what does that mean?\n\nFirst, I will examine the progress within the UK, then I will compare the absolute numbers to the UK's friends over in europe - namely France, Germany, and others. ","625b7d29":"The price per dose of Oxford\/AstraZeneca is wildy cheaper that many of its competitors, especially Moderna & Sinovac.\n\nWhat does this translate to though? Let's get the median country population and apply these figures in a 'rough and ready' type calculation ","128c1443":"# The United Kingdom's vaccination programme\n\n**Note: I will continue to update this project with new ideas as they come to me!**","13f6a434":"# How does this compare to the progress on the continent?\n\nFollowing Brexit, the UK has been able to act independently of the EU. Is there a performance gap between the two entities?","d4132327":"# Leading vaccine providers","1b07ed46":"So we know that most countries have opted for a combination of vaccine providers. This makes sense, as relying on just one manufacturer is a high-risk strategy.\n\nWhat about the UK specifically? What providers have they opted for? Are there more vaccines  coming soon?","f9bd4369":"So vaccination numbers are increasing around the world which is fantastic to see.\n\nBut who is providing the vaccinations? Let's investigate...","4e08e469":"# Conclusions\n\nCurrently, the UK is performing well with respect to its vaccination programme. It is by far the most successful in Europe.\n\nIt has secured several vaccines across multiple providers to reduce risk. \n\nAdditionally, the UK govt. heavily funded the Oxford\/AstraZenexa vaccine, and as a result, ensured that it could be provided at cost to the world. \n\n\nUltimately we are all in this together, and I hope that we will emerge from this nightmarish episode with our lives intact.\n","089e28ad":"The majority of the UKs adult population has now received a first dose of a vaccination. \n\nSecond doses have recently started, so it will be interesting to see if the rate of vaccination slows down.\n"}}