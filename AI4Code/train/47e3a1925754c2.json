{"cell_type":{"9410c3a6":"code","5e991293":"code","e391d2a4":"code","85d07476":"code","79c33863":"code","9007c7d4":"code","0e08d7c9":"code","c40119fe":"code","2e84a4df":"code","12941df4":"code","280e7716":"code","01a152b2":"code","67d33aac":"code","b10b59b2":"markdown","1bb1f07f":"markdown","5252c1d6":"markdown"},"source":{"9410c3a6":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5e991293":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nimport numpy as np\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as pyo\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport folium\nimport warnings\nwarnings.filterwarnings('ignore')","e391d2a4":"pyo.init_notebook_mode(connected= True)\ncf.go_offline()","85d07476":"df = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv')\ndf.head()","79c33863":"df.describe()","9007c7d4":"df.drop(['Sno', 'Time', 'ConfirmedIndianNational', 'ConfirmedForeignNational'], axis= 1, inplace= True)\ndf.rename(columns= {'State\/UnionTerritory': 'State'}, inplace= True)\ndf.head()","0e08d7c9":"df['Active'] = df['Confirmed'] - (df['Cured'] + df['Deaths'])\ndf.head()","c40119fe":"df_state = df[df['Date'] == '12\/05\/20']\ndf_state = df_state.groupby('State')[['Cured', 'Deaths', 'Confirmed', 'Active']].sum()\ndf_state.style.bar(color= '#de1c1c')","2e84a4df":"df_state.reset_index(inplace= True)","12941df4":"fig= df_state.iplot(kind= 'scatter', x= 'State', y= ['Deaths', 'Cured', 'Confirmed', 'Active'],\n               mode= 'lines+markers',\n               title= 'State-Wise COVID-19 Analysis',\n               xTitle= 'States\/Union Territories',\n               yTitle= 'No. of Cases'\n              )","280e7716":"fig= go.Figure()\nfig.add_trace(go.Bar(x= df_state['State'], y= ((df_state['Cured']\/df_state['Confirmed'])*100), name= 'Recovery Rate'))\nfig.update_layout(title= 'State-Wise Recovery Rates', xaxis_title= 'States', yaxis_title= 'Recovery Rate (Cured Cases \/ Confirmed Cases)')\nfig.show()","01a152b2":"def get_cured_state_details(x, state):\n    x['Date'] = pd.to_datetime(x['Date'], dayfirst= True)\n    x = x[x['State'] == state].drop('State', axis= 1)\n    return x\ndef plot_cured_state(df, state, fig):\n    df = get_cured_state_details(df, state)\n    fig.add_trace(go.Scatter(x= df['Date'], y= df['Confirmed'], name= 'Confirmed', mode= 'lines+markers'))\n    fig.add_trace(go.Scatter(x= df['Date'], y= df['Deaths'], name= 'Deaths', mode= 'lines+markers'))\n    fig.add_trace(go.Scatter(x= df['Date'], y= df['Cured'], name= 'Cured', mode= 'lines+markers'))\n    fig.update_layout(title= 'Cases in '+state, xaxis_title= 'Dates', yaxis_title= 'No. of Cases')","67d33aac":"for state in df_state['State'].unique():\n    fig= go.Figure()\n    plot_cured_state(df, state, fig)\n    fig.show()","b10b59b2":"# <U>COVID-19 DATA ANALYSIS AND VISUALIZATIONS<\/U>","1bb1f07f":"## <u>State-Wise Analysis<\/u>","5252c1d6":"This notebook will be updated soon."}}