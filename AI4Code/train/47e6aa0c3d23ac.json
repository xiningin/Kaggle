{"cell_type":{"d4bdcf10":"code","c67b9620":"code","81116b4e":"code","a855b604":"code","9952c4d5":"code","ccdff514":"code","483f105f":"code","6209a245":"code","8c8b4c6d":"code","ab8d7211":"code","cacf1e88":"code","06ceb092":"code","0caa601a":"code","7103c7e6":"code","b7be49c1":"code","a84c0df5":"code","62d55b8b":"code","e11d6393":"code","e43cbe1d":"code","474095d1":"code","72490c2b":"code","c1e088a2":"code","78b04fc6":"code","846416bb":"code","157a55b2":"code","5c9c6ab6":"code","ea497e4f":"code","4c2668d6":"code","f90a47b7":"code","cca6f081":"code","06f381d5":"code","5fabdb84":"code","f8477d98":"code","418c43f1":"code","8ac57569":"markdown","8a2bab2c":"markdown","dea7874c":"markdown","ff56ebd2":"markdown","947a5d96":"markdown","58621ddb":"markdown","af9c0b2a":"markdown","767e5c0a":"markdown","3c5326e8":"markdown","a593c6ff":"markdown","3684da64":"markdown","b92ddefe":"markdown","2bb574cb":"markdown","cef8a45f":"markdown","7ef93409":"markdown","88277627":"markdown","bffcc669":"markdown","fbeedd81":"markdown","f747b6c6":"markdown","b4d6fe01":"markdown","3f8090ea":"markdown"},"source":{"d4bdcf10":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression","c67b9620":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","81116b4e":"display(train.head(10))\ndisplay(test.head(10))","a855b604":"pd.set_option('display.max_rows', None)\n\nprint('Train')\ndisplay(train.nunique())\n\nprint('\\nTest')\ndisplay(test.nunique())","9952c4d5":"print('Train')\ndisplay(train.isnull().sum())\n\nprint('Test')\ndisplay(test.isnull().sum())","ccdff514":"print('Train')\ndtypes = train.dtypes\ndisplay(dtypes)\n\nprint('Test')\ndtypes = test.dtypes\ndisplay(dtypes)","483f105f":"print(train.shape)\nprint(test.shape)","6209a245":"train.describe().T","8c8b4c6d":"train['LotFrontage']=train['LotFrontage'].fillna(train['LotFrontage'].mean())\ntrain['BsmtCond']=train['BsmtCond'].fillna(train['BsmtCond'].mode()[0])\ntrain['BsmtQual']=train['BsmtQual'].fillna(train['BsmtQual'].mode()[0])\ntrain['FireplaceQu']=train['FireplaceQu'].fillna(train['FireplaceQu'].mode()[0])\ntrain['GarageType']=train['GarageType'].fillna(train['GarageType'].mode()[0])\ntrain['GarageFinish']=train['GarageFinish'].fillna(train['GarageFinish'].mode()[0])\ntrain['GarageQual']=train['GarageQual'].fillna(train['GarageQual'].mode()[0])\ntrain['GarageCond']=train['GarageCond'].fillna(train['GarageCond'].mode()[0])\ntrain['MasVnrType']=train['MasVnrType'].fillna(train['MasVnrType'].mode()[0])\ntrain['MasVnrArea']=train['MasVnrArea'].fillna(train['MasVnrArea'].mode()[0])\ntrain['BsmtExposure']=train['BsmtExposure'].fillna(train['BsmtExposure'].mode()[0])\ntrain['BsmtFinType2']=train['BsmtFinType2'].fillna(train['BsmtFinType2'].mode()[0])","ab8d7211":"train.drop(['Id','PoolQC','GarageYrBlt'],axis=1,inplace=True)","cacf1e88":"train.Alley=train.Alley.map({'NA':0,'Grvl':1,'Pave':2})\ntrain.Fence=train.Fence.map({'MnPrv':1,'MnWw':2,'GdWo':3,'GdPrv':4,'NA':0})\ntrain.MiscFeature=train.MiscFeature.map({'Shed':1,'Gar2':2,'Othr':3,'NA':0})","06ceb092":"train.Alley.fillna(train.Alley.mean(),inplace=True)\ntrain.Fence.fillna(train.Fence.mean(),inplace=True)\ntrain.MiscFeature.fillna(train.MiscFeature.mean(),inplace=True)","0caa601a":"train.dropna(inplace=True)","7103c7e6":"test['LotFrontage']=test['LotFrontage'].fillna(test['LotFrontage'].mean())\ntest['MSZoning']=test['MSZoning'].fillna(test['MSZoning'].mode()[0])\ntest['BsmtCond']=test['BsmtCond'].fillna(test['BsmtCond'].mode()[0])\ntest['BsmtQual']=test['BsmtQual'].fillna(test['BsmtQual'].mode()[0])\ntest['FireplaceQu']=test['FireplaceQu'].fillna(test['FireplaceQu'].mode()[0])\ntest['GarageType']=test['GarageType'].fillna(test['GarageType'].mode()[0])\ntest['MasVnrType']=test['MasVnrType'].fillna(test['MasVnrType'].mode()[0])\ntest['MasVnrArea']=test['MasVnrArea'].fillna(test['MasVnrArea'].mode()[0])\ntest['GarageFinish']=test['GarageFinish'].fillna(test['GarageFinish'].mode()[0])\ntest['GarageQual']=test['GarageQual'].fillna(test['GarageQual'].mode()[0])\ntest['GarageCond']=test['GarageCond'].fillna(test['GarageCond'].mode()[0])\ntest['BsmtExposure']=test['BsmtExposure'].fillna(test['BsmtExposure'].mode()[0])\ntest['BsmtFinType2']=test['BsmtFinType2'].fillna(test['BsmtFinType2'].mode()[0])\ntest['Utilities']=test['Utilities'].fillna(test['Utilities'].mode()[0])\ntest['Exterior1st']=test['Exterior1st'].fillna(test['Exterior1st'].mode()[0])\ntest['Exterior2nd']=test['Exterior2nd'].fillna(test['Exterior2nd'].mode()[0])\ntest['BsmtFinType1']=test['BsmtFinType1'].fillna(test['BsmtFinType1'].mode()[0])\ntest['BsmtFinSF1']=test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mode()[0])\ntest['BsmtFinSF2']=test['BsmtFinSF2'].fillna(test['BsmtFinSF2'].mode()[0])\ntest['BsmtUnfSF']=test['BsmtUnfSF'].fillna(test['BsmtUnfSF'].mode()[0])\ntest['TotalBsmtSF']=test['TotalBsmtSF'].fillna(test['TotalBsmtSF'].mode()[0])\ntest['BsmtFullBath']=test['BsmtFullBath'].fillna(test['BsmtFullBath'].mode()[0])\ntest['BsmtHalfBath']=test['BsmtHalfBath'].fillna(test['BsmtHalfBath'].mode()[0])\ntest['KitchenQual']=test['KitchenQual'].fillna(test['KitchenQual'].mode()[0])\ntest['Functional']=test['Functional'].fillna(test['Functional'].mode()[0])\ntest['GarageCars']=test['GarageCars'].fillna(test['GarageCars'].mode()[0])\ntest['GarageArea']=test['GarageArea'].fillna(test['GarageArea'].mode()[0])\ntest['SaleType']=test['SaleType'].fillna(test['SaleType'].mode()[0])\ntest['MasVnrArea']=test['MasVnrArea'].fillna(test['MasVnrArea'].mode()[0])","b7be49c1":"test.drop(['Id','GarageYrBlt','PoolQC'],axis=1,inplace=True)","a84c0df5":"test.Alley=test.Alley.map({'NA':0,'Grvl':1,'Pave':2})\ntest.Fence=test.Fence.map({'MnPrv':1,'MnWw':2,'GdWo':3,'GdPrv':4,'NA':0})\ntest.MiscFeature=test.MiscFeature.map({'Shed':1,'Gar2':2,'Othr':3,'NA':0})","62d55b8b":"test.Alley.fillna(test.Alley.mean(),inplace=True)\ntest.Fence.fillna(test.Fence.mean(),inplace=True)\ntest.MiscFeature.fillna(test.MiscFeature.mean(),inplace=True)","e11d6393":"print('Train')\ndisplay(train.isnull().sum())\n\nprint('\\n\\nTest')\ndisplay(test.isnull().sum())","e43cbe1d":"plt.figure(figsize=(12,10))\nsns.heatmap(train.corr(),cmap=\"jet\",annot=False,linewidths=1,robust=True)","474095d1":"train_final = pd.DataFrame()","72490c2b":"def correlation(dataset, threshold):\n    col_corr = set() # Set of all the names of deleted columns\n    corr_matrix = dataset.corr()\n    for i in range(len(corr_matrix.columns)):\n          if (corr_matrix.iloc[i, -1] >= threshold) and (corr_matrix.columns[-1] not in col_corr):\n              colname = corr_matrix.columns[i] # getting the name of column\n              col_corr.add(colname)\n              if colname in dataset.columns:\n                  train_final[colname] = dataset[colname] # deleting the column from the dataset\n    display(train_final.head(10))","c1e088a2":"correlation(train, 0.5)","78b04fc6":"sns.pairplot(train_final, x_vars= ['SalePrice'], y_vars=['OverallQual', 'YearBuilt', 'YearRemodAdd', 'TotalBsmtSF', '1stFlrSF', 'GrLivArea', 'FullBath', 'TotRmsAbvGrd', 'GarageCars', 'GarageArea'], height=7, aspect=0.7, kind='reg')","846416bb":"X = train_final.iloc[:, :-1].values\ny = train_final.iloc[:, -1].values","157a55b2":"sc = StandardScaler()\nX = sc.fit_transform(X)","5c9c6ab6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)","ea497e4f":"regr_model = LinearRegression()\nregr_model.fit(X_train, y_train)","4c2668d6":"y_pred = regr_model.predict(X_test)","f90a47b7":"np.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))","cca6f081":"rmsd = (np.sqrt(np.square(y_pred - y_test))).mean(axis=0)\nprint('Root mean square deviation:', rmsd)","06f381d5":"poly_reg = PolynomialFeatures(degree = 2)\nX_poly = poly_reg.fit_transform(X_train)\n\npoly_reg_model = LinearRegression()\npoly_reg_model.fit(X_poly, y_train)","5fabdb84":"X_test_poly = poly_reg.fit_transform(X_test)\n\ny_pred_poly = poly_reg_model.predict(X_test_poly)","f8477d98":"print(np.concatenate((y_pred_poly.reshape(len(y_pred_poly), 1), y_test.reshape(len(y_test), 1)), 1))","418c43f1":"rmsd = (np.sqrt(np.square(y_pred_poly - y_test))).mean(axis=0)\nprint('Root mean square deviation:', rmsd)","8ac57569":"## Data prediction\n\nAnd the price is...","8a2bab2c":"#### Describe","dea7874c":"## Data processing\n\nCleaning the house...","ff56ebd2":"#### Unique values","947a5d96":"Top 5 varaiables most correlated to SalePrice: \n1. OverallQual\n2. GrLiveArea\n3. GarageCars\n4. GarageArea\n5. 1stFlrSF","58621ddb":"## Data visualization\n\nPainting houses...","af9c0b2a":"#### Shape","767e5c0a":"#### Drop the not correlated continuous varaiables","3c5326e8":"#### Nans... Test","a593c6ff":"We got more accuracy with polynomial regressor model.","3684da64":"#### Split and standarize","b92ddefe":"# Houses...","2bb574cb":"#### NaN Values","cef8a45f":"<a href=\"https:\/\/colab.research.google.com\/github\/GZabalaG\/AIMaster\/blob\/main\/Datasets_Analysis\/house_price_prediction.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","7ef93409":"#### Predictions & Accuracy","88277627":"#### Training...","bffcc669":"#### Predictions & Accuracy","fbeedd81":"## Data exploration:\n\nWhat's going on in this house?","f747b6c6":"#### Nans... Train:","b4d6fe01":"#### Types","3f8090ea":"#### Training... (Poly)"}}