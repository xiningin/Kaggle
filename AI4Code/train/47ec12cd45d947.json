{"cell_type":{"31281015":"code","92cb2e5b":"code","ba29a741":"code","e04e7ec3":"code","6ba12454":"code","33153de7":"code","26716d10":"code","dd7c7574":"code","49207fb4":"code","9e0cfffc":"code","0ad88573":"code","2ecd4d91":"code","bf52db83":"code","8bb85f80":"code","9af8d7a1":"code","d0d204b8":"code","ca42c829":"code","741ef6dd":"code","d1af8543":"code","2a0dcd6e":"code","639d7870":"code","194b392a":"code","8de9dda8":"code","269ae006":"code","009e023e":"code","d7baade8":"code","6f39593b":"code","2de3fbe1":"code","4018ffcb":"markdown","c31ef136":"markdown","2f413875":"markdown","d88cac87":"markdown","7ad3d873":"markdown","7f2425eb":"markdown","f84de03b":"markdown","acc14c13":"markdown","9525ca12":"markdown","17053fe4":"markdown","e386ec9e":"markdown","c4bf8d94":"markdown","20ae17f4":"markdown","04ccd279":"markdown","2558d0cd":"markdown","c2c17ce4":"markdown","48780a1c":"markdown","58fe6dbe":"markdown","6be3e9af":"markdown"},"source":{"31281015":"! pip install dexplot","92cb2e5b":"# Importing the necessary libraries\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px \nimport plotly.graph_objs as go\nfrom plotly.offline import iplot","ba29a741":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e04e7ec3":"df = pd.read_csv('\/kaggle\/input\/us-police-shootings\/shootings.csv')\ndf.head()","6ba12454":"df.shape","33153de7":"df.info()","26716d10":"df.isnull().sum()","dd7c7574":"labels = df['state'].value_counts()[:10].index\nvalues = df['state'].value_counts()[:10].values\n\ncolors = df['state']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","49207fb4":"import dexplot as dxp","9e0cfffc":"dxp.count(val='state', data=df, figsize=(15,3), normalize=True)","0ad88573":"dxp.count(val='state', data=df, figsize=(15,3), split='gender', normalize=True)","2ecd4d91":"labels = df['manner_of_death'].value_counts()[:].index\nvalues = df['manner_of_death'].value_counts()[:].values\n\ncolors = df['manner_of_death']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","bf52db83":"dxp.count(val='manner_of_death', data=df, figsize=(8,5), split='gender', normalize=True)","8bb85f80":"dxp.count(val='age', data=df, figsize=(20,5), normalize=True)","9af8d7a1":"df['above40'] = ['above40'if i >=40 else 'below40'for i in df.age]\n\ndf['generation']=\"-\"\nfor i in df.age.index:\n    if df['age'][i] >=0 and df['age'][i]<40:\n        df['generation'][i]='30s'\n    elif df['age'][i] >=40 and df['age'][i]<50:\n        df['generation'][i]='40s'\n    elif df['age'][i] >=50 and df['age'][i]<60:\n        df['generation'][i]='50s'\n    else:\n        df['generation'][i]='60+'","d0d204b8":"sns.countplot(x=df.above40,  palette=\"Set2\")\nplt.ylabel('Number of People', fontsize=10)\nplt.title('Age of People', color='red', fontsize=15)","ca42c829":"labels = df['race'].value_counts()[:].index\nvalues = df['race'].value_counts()[:].values\n\ncolors = df['race']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","741ef6dd":"dxp.count(val='race', data=df, figsize=(8,5), split='gender', normalize=True)","d1af8543":"labels = df['signs_of_mental_illness'].value_counts()[:].index\nvalues = df['signs_of_mental_illness'].value_counts()[:].values\n\ncolors = df['signs_of_mental_illness']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","2a0dcd6e":"labels = df['threat_level'].value_counts()[:].index\nvalues = df['threat_level'].value_counts()[:].values\n\ncolors = df['threat_level']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","639d7870":"labels = df['flee'].value_counts()[:].index\nvalues = df['flee'].value_counts()[:].values\n\ncolors = df['flee']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","194b392a":"# Mental Illness and Fleeing\n\ndxp.count(val='flee', data=df, figsize=(8,5), split='signs_of_mental_illness', normalize=True)","8de9dda8":"dxp.count(val='flee', data=df, figsize=(8,5), split='threat_level', normalize=True)","269ae006":"labels = df['body_camera'].value_counts()[:].index\nvalues = df['body_camera'].value_counts()[:].values\n\ncolors = df['body_camera']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","009e023e":"labels = df['arms_category'].value_counts()[:].index\nvalues = df['arms_category'].value_counts()[:].values\n\ncolors = df['arms_category']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo=\"label+percent\",\n                             insidetextorientation=\"radial\", marker=dict(colors=colors))])\nfig.show()    \n","d7baade8":"dxp.count(val='arms_category', data=df, figsize=(8,5), split='flee', normalize=True)","6f39593b":"dxp.count(val='arms_category', data=df, figsize=(8,5), split='threat_level', normalize=True)","2de3fbe1":"dxp.count(val='arms_category', data=df, figsize=(8,5), split='gender', normalize=True)","4018ffcb":"Most of the person were having gun with them","c31ef136":"Seeing the states havin most number of encounter","2f413875":"Its from the above plot clear that if a person was having a gun then there was more threat of attack compare to if he\/she having sharp objects","d88cac87":"Reading the Data","7ad3d873":"Lets see how many of them were male and female ","7f2425eb":"one out of every second casualities turn out to be of White and one out of every four turns out out to be of Black","f84de03b":"Lets analysize the age of the victims","acc14c13":"From the above data one can  infer that male are more prone to shootings than  the female by US Police","9525ca12":"Lets visualize which race has been more prone to the shooting by US Police","17053fe4":"Most of the person who were shot were not fleeing only 16.8% have used car to flee","e386ec9e":"Lets visualize the above one in terms of gender too\n","c4bf8d94":"One can get the infer that most of the people who were shot were mentally sound and good","20ae17f4":"Youngers are more prone to the shootings particularly the people in the age group of 25-40 and they even accounts for more than half of the shooting casualities casued by the US Police","04ccd279":"We can see that California, Texax and Florida has the most number of shootings happening out of the top 10 shooting prone states\n","2558d0cd":"If you found this insightful please upvote it\nFeel Free to comment for suggestions and any queries\nI would love to hear back from you","c2c17ce4":"Its clear from the above plot that most of the threatening arms are with male","48780a1c":"Its good that there is no null values all are filled","58fe6dbe":"Almost every person was shot very few were tasered too.","6be3e9af":"# Data Analysis & Visualization"}}