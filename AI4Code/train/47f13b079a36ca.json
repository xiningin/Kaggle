{"cell_type":{"aca7d71b":"code","d5e98bf0":"code","21a46bd3":"code","ed350458":"code","54d730aa":"code","da0d6fd3":"code","cf426491":"code","9b2e9009":"code","55d0ea9f":"code","4fcb9cae":"code","6aa94cc1":"code","8b08f753":"code","e5e95840":"code","04442d10":"code","34988a98":"code","cb8ab3c1":"code","a00c007e":"code","57885df0":"code","6d9fb636":"code","94844c81":"code","86f0da40":"code","5c5da181":"code","f4d697ac":"code","a61238ed":"code","fdd86c18":"code","1aa5c470":"code","799ca2c7":"code","ae467d25":"code","43f6992c":"code","b7ffda5b":"code","77a7c1a8":"code","890037c9":"code","59114699":"code","b9140ab8":"code","cf730a5a":"code","c67fa3a7":"code","cbf68dcf":"code","0c5abb3a":"code","d41fd93e":"code","c98b7158":"code","ba9659db":"code","a7e239c9":"code","bec3091a":"markdown","b3026113":"markdown","b1db72d4":"markdown","06795135":"markdown"},"source":{"aca7d71b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d5e98bf0":"#importing liberaries\nimport numpy as np \nimport pandas as pd\nimport plotly.express as px \nfrom pandas_profiling import ProfileReport\nimport matplotlib.pyplot as plt","21a46bd3":"df = pd.read_csv(\"..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\", sep=\",\", encoding=\"utf_8\")\ndf.rename({'\u00ef\u00bb\u00bfOrder Number': 'Order Number',\"Order Date & Time\":\"Order Date\",\"City\":\"City (Billing)\"}, axis=1, inplace=True)\ndf['Order Date'] = pd.to_datetime(df['Order Date'])\ndf.head()","ed350458":"df.info()","54d730aa":"df.describe()","da0d6fd3":"df.info()","cf426491":"df.isnull().sum()","9b2e9009":"df['Order Date'] = pd.to_datetime(df['Order Date'])","55d0ea9f":"df.info()","4fcb9cae":"df['Date'] = pd.to_datetime(df['Order Date']).dt.date\ndf['Day'] = df['Order Date'].dt.day\ndf['Month'] = df['Order Date'].dt.month\ndf['Quarter'] = df['Order Date'].dt.quarter\ndf['Week'] = df['Order Date'].dt.week\ndf['Year'] = df['Order Date'].dt.year\ndf['Hour'] = df['Order Date'].dt.hour\ndf['Day_name'] = df['Order Date'].dt.day_name()\ndf['Weekday'] = pd.to_datetime(df['Order Date']).apply(lambda x: x.weekday())\n# is_holiday flag\ndf['Holiday'] = df.Day_name.apply(lambda x : \"Week End\" if x == \"Sunday\" or x == \"Saturday\" else \"Week Day\")\ndf.head()","6aa94cc1":"import seaborn as sns\nsns.set_context(\"poster\")","8b08f753":"plt.figure(figsize=(10, 10))\nplt.title('Year Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Year\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","e5e95840":"df['Order Status'] = df['Order Status'].replace({'Canceled':'Cancelled\/Returned','Cancelled':'Cancelled\/Returned','Returned':'Cancelled\/Returned'})\nplt.figure(figsize=(10, 10))\nplt.title('Order Status Wise')\nsplot = sns.countplot(x=df[\"Order Status\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","04442d10":"plt.figure(figsize=(15, 10))\nplt.title('Year Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Year\"],hue=\"Order Status\", palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","34988a98":"plt.figure(figsize=(20, 10))\nplt.title('Month Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Month\"], palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","cb8ab3c1":"plt.figure(figsize=(20, 10))\nplt.title('Month Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Month\"],hue=\"Order Status\",palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","a00c007e":"plt.figure(figsize=(20, 10))\nplt.title('Day Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Day\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","57885df0":"plt.figure(figsize=(20, 10))\nplt.title('Day Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Day\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","6d9fb636":"plt.figure(figsize=(20, 10))\nplt.title('Quarter Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Quarter\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","94844c81":"plt.figure(figsize=(20, 10))\nplt.title('Quarter Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Quarter\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","86f0da40":"plt.figure(figsize=(20, 10))\nplt.title('Week Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Week\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=90)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","5c5da181":"plt.figure(figsize=(20, 10))\nplt.title('Week Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Week\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=90)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","f4d697ac":"plt.figure(figsize=(20, 10))\nplt.title('Week Day Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Day_name\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","a61238ed":"plt.figure(figsize=(20, 10))\nplt.title('Week Day Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Day_name\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","fdd86c18":"plt.figure(figsize=(10, 10))\nplt.title('Holiday VS Weekday Orders')\nsplot = sns.countplot(x=df[\"Holiday\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","1aa5c470":"plt.figure(figsize=(10, 10))\nplt.title('Holiday VS Weekday Orders')\nsplot = sns.countplot(x=df[\"Holiday\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","799ca2c7":"plt.figure(figsize=(20, 10))\nplt.title('Hour Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Hour\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=30)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","ae467d25":"plt.figure(figsize=(20, 10))\nplt.title('Hour Wise Number of Orders')\nsplot = sns.countplot(x=df[\"Hour\"],palette=\"Greens_d\",data=df, hue=\"Order Status\")\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=30)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","43f6992c":"import pandas as pd\n\nif isinstance(df, (pd.DatetimeIndex, pd.MultiIndex)):\n    df = df.to_frame(index=False)\n\ndf = df.reset_index().drop('index', axis=1, errors='ignore')\ndf.columns = [str(c) for c in df.columns]  # update columns to strings in case they are numbers\n\nchart_data = pd.concat([\n    df['Date'],\n    df['Order Number'],\n], axis=1)\nchart_data = chart_data.sort_values(['Date'])\nchart_data = chart_data.groupby(['Date'])[['Order Number']].count()\nchart_data = chart_data.dropna()\nchart_data.index = pd.to_datetime(chart_data.index)\nchart_data.head()\nchart_data.plot(title =\"Date Wise Number of Orders\", figsize=(30, 10), legend=True, fontsize=12)","b7ffda5b":"plt.figure(figsize=(30, 10))\nplt.title(\"Top 30 Cities by Order\")\nsplot = sns.countplot(x='City (Billing)', palette=\"Greens_d\",data=df,order=df['City (Billing)'].value_counts().iloc[:30].index)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=90)\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","77a7c1a8":"plt.figure(figsize=(30, 10))\nplt.title(\"Top 10 Cities by Order\")\nsplot = sns.countplot(x='City (Billing)', hue=\"Order Status\", palette=\"Greens_d\",data=df,order=df['City (Billing)'].value_counts().iloc[:10].index)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\n\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","890037c9":"df['Payment Method'] = df['Payment Method'].replace({'Cash on Delivery (COD)':'Cash on delivery'})\nplt.figure(figsize=(12, 10))\nplt.title('Payment Method Wise')\nsplot = sns.countplot(x=df[\"Payment Method\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","59114699":"df['Payment Method'] = df['Payment Method'].replace({'Cash on Delivery (COD)':'Cash on delivery'})\nplt.figure(figsize=(12, 10))\nplt.title('Payment Method Wise')\nsplot = sns.countplot(x=df[\"Payment Method\"], hue=\"Order Status\",palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","b9140ab8":"plt.figure(figsize=(30, 10))\nplt.title('Total items Wise')\nsplot = sns.countplot(x=df[\"Total items\"],palette=\"Greens_d\",data=df)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=90)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","cf730a5a":"plt.figure(figsize=(30, 10))\nplt.title('Total items Wise')\nsplot = sns.countplot(x=df[\"Total items\"], hue=\"Order Status\",palette=\"Greens_d\",data=df, order=df[\"Total items\"].value_counts().iloc[:10].index)\nfor p in splot.patches:\n        splot.annotate(format(p.get_height()), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', rotation=0)\nsplot.set_xticklabels(splot.get_xticklabels(), rotation=90, ha=\"right\")\nplt.tight_layout()\nplt.show()","c67fa3a7":"New=df['Book Name'].str.split(\"\/\", n = 200, expand = True)\nNew","cbf68dcf":"New.info()","0c5abb3a":"New.columns","d41fd93e":"for i in range (1,193):\n    df[f'Book_{i}']=New[i]\ndf.head()","c98b7158":"!pip install -U dtale\n!pip install --upgrade dtale\n!pip install dtale\n!pip install flask-ngrok","ba9659db":"import pandas as pd\nimport dtale \nimport dtale.app as dtale_app\ndtale_app.USE_NGROK = True\nd = dtale.show(df)\n#d.main_url()","a7e239c9":"dtale.instances()","bec3091a":"#profile = ProfileReport(df, title=\"Pandas Profiling Report\")","b3026113":"dtale.instances()","b1db72d4":"#profile.to_widgets()","06795135":"import pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale_app.USE_NGROK = True\n\nd = dtale.show(df)\nd.main_url()"}}