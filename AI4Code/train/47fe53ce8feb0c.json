{"cell_type":{"b055afc3":"code","49e36bda":"code","7b8b8b48":"code","53217f2b":"code","5a537637":"code","8c756252":"code","509a68f3":"code","a3a6214f":"code","44b73569":"code","a05ab7a1":"code","4ef82c5a":"code","1feb0df1":"code","ff6f31b1":"code","de9f8a6a":"code","400a97f1":"code","8b55105a":"code","86c29a06":"code","b7a3451b":"code","6791888e":"code","6154e6a2":"code","1abad9ee":"code","6e8cdf73":"code","4a19ef12":"code","83adf147":"code","3d56ff33":"code","94742cfd":"code","18df157a":"code","820ef1b0":"code","db12c106":"code","3550ac11":"code","22353111":"code","3cb0ede8":"code","92288d6b":"code","313fe23f":"code","c441b816":"code","157d645c":"code","92e5bc9b":"code","c1c7aeee":"code","1eb47b52":"code","02870146":"code","06caddcb":"code","aaed3c33":"code","3e3d843c":"code","326a367c":"code","b62ff50d":"code","1a01a31b":"code","6f4fe295":"code","1a31ec76":"code","c2b24028":"code","bea5af87":"code","28013a4f":"code","747e7e1d":"code","67fa80bf":"code","d92a7297":"code","484d7c47":"code","3f4c2784":"code","5b63af1c":"code","3cf87506":"code","5b6e4c9b":"code","5797f82c":"code","966cc619":"code","497dc17e":"code","20d43b1f":"code","66407215":"code","fbd88b6e":"code","a7362a4b":"code","779a7b07":"code","de97e859":"code","58cb2cfc":"code","52c4f42e":"code","5dca9135":"code","fcaa7d7e":"code","100e7ff3":"code","610066c1":"code","111ee072":"code","880c67f1":"code","dc81b3a4":"code","0257258d":"code","6420d4b4":"code","9167b6e4":"code","473282f4":"code","59b9ac6c":"code","231b94b9":"code","3e8a9bf7":"code","d0ce5d9a":"code","6c238ca5":"code","e5bba2c0":"code","ab7088f6":"code","75f4fc0f":"code","3987ee93":"code","ed06008e":"code","b66e4c33":"code","56227186":"code","d2c8c491":"code","2e0e0ea2":"code","b1f004a5":"code","38f255d0":"code","b3684a15":"code","3001097f":"code","703ecf01":"code","cc220ef9":"code","6667a958":"code","2f9a8f32":"code","e39a29be":"code","2338b639":"markdown","ec96b387":"markdown","0c3f4ae6":"markdown","cbc1f60e":"markdown","5a309e32":"markdown","ec7e1613":"markdown"},"source":{"b055afc3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","49e36bda":"import warnings\nwarnings.filterwarnings('ignore')","7b8b8b48":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","53217f2b":"df1 = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\",index_col=0)\ndf2 = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\",index_col=0)","5a537637":"df1.head()","8c756252":"df2.head()","509a68f3":"df1.info()","a3a6214f":"df2.info()","44b73569":"df1.describe().T","a05ab7a1":"df2.describe().T","4ef82c5a":"cat1 = df1.select_dtypes(include=np.object)\nprint(\"Categorical variables in training set: \",cat1.shape[1])\nnum1 = df1.select_dtypes(include=(np.int64,np.float64))\nprint(\"Numerical variables in training set: \",num1.shape[1])","1feb0df1":"cat2 = df2.select_dtypes(include=np.object)\nprint(\"Categorical variables in testing set: \",cat2.shape[1])\nnum2 = df2.select_dtypes(include=(np.int64,np.float64))\nprint(\"Numerical variables in testing set: \",num2.shape[1])","ff6f31b1":"df1.columns","de9f8a6a":"df2.columns","400a97f1":"df1.isnull().sum()","8b55105a":"df2.isnull().sum()","86c29a06":"def plot_bar(var):\n    plt.figure(figsize=(12,8))\n    plt.subplot(2,2,1)\n    plt.title(r\"Plot for train data of the feature {}\".format(var))\n    sns.countplot(df1[var])\n    plt.subplot(2,2,2)\n    plt.title(r\"plot for test data of the feature {}\".format(var))\n    sns.countplot(df2[var])\n    plt.show()\n    \ncategory = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7', 'cat8', 'cat9']\nfor i in category:\n    plot_bar(i)","b7a3451b":"def replace_outliers(df1, field_name):\n    Q1 = np.percentile(df1[field_name],25,interpolation='midpoint')\n    Q3 = np.percentile(df1[field_name],75,interpolation='midpoint')\n    IQR = Q3-Q1\n    maxi = Q3+1.5*IQR\n    mini = Q1-1.5*IQR\n    df1[field_name]=df1[field_name].mask(df1[field_name]>maxi,maxi)\n    df1[field_name]=df1[field_name].mask(df1[field_name]<mini,mini)","6791888e":"plt.title(\"Boxplot before removing outlier in cont0\")\nsns.boxplot(df1[\"cont0\"])\nplt.show()\nreplace_outliers(df1,'cont0')\nplt.title(\"Boxplot after removing outlier in cont0\")\nsns.boxplot(df1['cont0'])\nplt.show()","6154e6a2":"plt.title(\"Boxplot before removing outlier in cont0\")\nsns.boxplot(df2[\"cont0\"])\nplt.show()\nreplace_outliers(df1,'cont0')\nplt.title(\"Boxplot after removing outlier in cont0\")\nsns.boxplot(df2['cont0'])\nplt.show()","1abad9ee":"sns.distplot(df1['cont0'],hist=False)","6e8cdf73":"plt.title(\"Boxplot removing outlier in cont1\")\nsns.boxplot(df1[\"cont1\"])\nplt.show()","4a19ef12":"sns.distplot(df1['cont1'],hist=False)","83adf147":"plt.title(\"Boxplot removing outlier in cont2\")\nsns.boxplot(df1[\"cont2\"])\nplt.show()","3d56ff33":"sns.distplot(df1['cont2'],hist=False)","94742cfd":"plt.title(\"Boxplot removing outlier in cont3\")\nsns.boxplot(df1[\"cont3\"])\nplt.show()","18df157a":"sns.distplot(df1['cont3'],hist=False)","820ef1b0":"plt.title(\"Boxplot removing outlier in cont4\")\nsns.boxplot(df1[\"cont4\"])\nplt.show()","db12c106":"sns.distplot(df1['cont4'],hist=False)","3550ac11":"plt.title(\"Boxplot removing outlier in cont5\")\nsns.boxplot(df1[\"cont5\"])\nplt.show()","22353111":"sns.distplot(df1['cont5'],hist=False)","3cb0ede8":"plt.title(\"Boxplot before removing outlier in cont6\")\nsns.boxplot(df1[\"cont6\"])\nplt.show()\nreplace_outliers(df1,'cont6')\nplt.title(\"Boxplot after removing outlier in cont6\")\nsns.boxplot(df1['cont6'])\nplt.show()","92288d6b":"plt.title(\"Boxplot before removing outlier in cont6\")\nsns.boxplot(df2[\"cont6\"])\nplt.show()\nreplace_outliers(df2,'cont6')\nplt.title(\"Boxplot after removing outlier in cont6\")\nsns.boxplot(df2['cont6'])\nplt.show()","313fe23f":"sns.distplot(df1['cont6'],hist=False)","c441b816":"plt.title(\"Boxplot removing outlier in cont7\")\nsns.boxplot(df1[\"cont7\"])\nplt.show()","157d645c":"sns.distplot(df1['cont7'],hist=False)","92e5bc9b":"plt.title(\"Boxplot before removing outlier in cont8\")\nsns.boxplot(df1[\"cont8\"])\nplt.show()\nreplace_outliers(df1,'cont8')\nplt.title(\"Boxplot after removing outlier in cont8\")\nsns.boxplot(df1['cont8'])\nplt.show()","c1c7aeee":"plt.title(\"Boxplot before removing outlier in cont8\")\nsns.boxplot(df2[\"cont8\"])\nplt.show()\nreplace_outliers(df2,'cont8')\nplt.title(\"Boxplot after removing outlier in cont8\")\nsns.boxplot(df2['cont8'])\nplt.show()","1eb47b52":"sns.distplot(df1['cont8'],hist=False)","02870146":"plt.title(\"Boxplot removing outlier in cont9\")\nsns.boxplot(df1[\"cont9\"])\nplt.show()","06caddcb":"sns.distplot(df1['cont9'],hist=False)","aaed3c33":"plt.title(\"Boxplot removing outlier in cont10\")\nsns.boxplot(df1[\"cont10\"])\nplt.show()","3e3d843c":"sns.distplot(df1['cont10'],hist=False)","326a367c":"plt.title(\"Boxplot removing outlier in cont11\")\nsns.boxplot(df1[\"cont11\"])\nplt.show()","b62ff50d":"sns.distplot(df1['cont11'],hist=False)","1a01a31b":"plt.title(\"Boxplot removing outlier in cont12\")\nsns.boxplot(df1[\"cont12\"])\nplt.show()","6f4fe295":"sns.distplot(df1['cont12'],hist=False)","1a31ec76":"plt.title(\"Boxplot removing outlier in cont13\")\nsns.boxplot(df1[\"cont13\"])\nplt.show()","c2b24028":"sns.distplot(df1['cont13'],hist=False)","bea5af87":"plt.title(\"Boxplot before removing outlier in target\")\nsns.boxplot(df1[\"target\"])\nplt.show()\nreplace_outliers(df1,'target')\nplt.title(\"Boxplot after removing outlier in target\")\nsns.boxplot(df1['target'])\nplt.show()","28013a4f":"gp0 = df1.groupby('cat0')['target'].mean()\nprint(gp0)\nsns.violinplot(df1['cat0'],df1['target'])","747e7e1d":"gp1 = df1.groupby('cat1')['target'].mean()\nprint(gp1)\nsns.violinplot(df1['cat1'],df1['target'])","67fa80bf":"gp2 = df1.groupby('cat2')['target'].mean()\nprint(gp2)\nsns.violinplot(df1['cat2'],df1['target'])","d92a7297":"gp3 = df1.groupby('cat3')['target'].mean()\nprint(gp3)\nsns.violinplot(df1['cat3'],df1['target'])","484d7c47":"gp4 = df1.groupby('cat4')['target'].mean()\nprint(gp4)\nsns.violinplot(df1['cat4'],df1['target'])","3f4c2784":"gp5 = df1.groupby('cat5')['target'].mean()\nprint(gp5)\nsns.violinplot(df1['cat5'],df1['target'])","5b63af1c":"gp6 = df1.groupby('cat6')['target'].mean()\nprint(gp6)\nsns.violinplot(df1['cat6'],df1['target'])","3cf87506":"gp7 = df1.groupby('cat7')['target'].mean()\nprint(gp7)\nsns.violinplot(df1['cat7'],df1['target'])","5b6e4c9b":"gp8 = df1.groupby('cat8')['target'].mean()\nprint(gp8)\nsns.violinplot(df1['cat8'],df1['target'])","5797f82c":"gp9 = df1.groupby('cat9')['target'].mean()\nprint(gp9)\nplt.figure(figsize=(8,5))\nsns.violinplot(df1['cat9'],df1['target'])","966cc619":"plt.figure(figsize=(8,5))\nsns.pairplot(data=df1,x_vars=['cont0','cont1','cont2','cont3','cont4','cont5','cont6'],y_vars='target')","497dc17e":"plt.figure(figsize=(8,5))\nsns.pairplot(data=df1,x_vars=['cont7','cont8','cont9','cont10','cont11','cont12','cont13'],y_vars='target')","20d43b1f":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","66407215":"df1 = df1.drop(['cat3','cat4','cat6','cat7'],axis=1)\ndf2 = df2.drop(['cat3','cat4','cat6','cat7'],axis=1)","fbd88b6e":"df1['cat0'] = le.fit_transform(df1['cat0'])\ndf1['cat1'] = le.fit_transform(df1['cat1'])\ndf1['cat2'] = le.fit_transform(df1['cat2'])\ndf2['cat0'] = le.fit_transform(df2['cat0'])\ndf2['cat1'] = le.fit_transform(df2['cat1'])\ndf2['cat2'] = le.fit_transform(df2['cat2'])","a7362a4b":"df1.columns","779a7b07":"df2.columns","de97e859":"top_2_tr = [x for x in df1.cat5.value_counts().sort_values(ascending=False).head(2).index]\ntop_2_ts = [x for x in df2.cat5.value_counts().sort_values(ascending=False).head(2).index]","58cb2cfc":"top_3_1_tr = [x for x in df1.cat8.value_counts().sort_values(ascending=False).head(3).index]\ntop_3_1_ts = [x for x in df2.cat8.value_counts().sort_values(ascending=False).head(3).index]","52c4f42e":"top_3_2_tr = [x for x in df1.cat9.value_counts().sort_values(ascending=False).head(3).index]\ntop_3_2_ts = [x for x in df2.cat9.value_counts().sort_values(ascending=False).head(3).index]","5dca9135":"for i in top_2_tr:\n    df1['cat5'+'_'+i]=np.where(df1['cat5']==i,1,0)","fcaa7d7e":"for i in top_2_ts:\n    df2['cat5'+'_'+i]=np.where(df2['cat5']==i,1,0)","100e7ff3":"for i in top_3_1_tr:\n    df1['cat8'+'_'+i]=np.where(df1['cat8']==i,1,0)","610066c1":"for i in top_3_1_ts:\n    df2['cat8'+'_'+i]=np.where(df2['cat8']==i,1,0)","111ee072":"for i in top_3_2_tr:\n    df1['cat9'+'_'+i]=np.where(df1['cat9']==i,1,0)","880c67f1":"for i in top_3_2_ts:\n    df2['cat9'+'_'+i]=np.where(df2['cat9']==i,1,0)","dc81b3a4":"df1.head()","0257258d":"df2.head()","6420d4b4":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()","9167b6e4":"num_feature = ['cont0', 'cont1', 'cont2', 'cont3', 'cont4', 'cont5', 'cont6', 'cont7', 'cont8', 'cont9',\n               'cont10', 'cont11', 'cont12', 'cont13']\nfor i in num_feature:\n    df1[i] = sc.fit_transform(df1[[i]])\n    df2[i] = sc.fit_transform(df2[[i]])","473282f4":"df1 = df1.drop(['cont12','cat5','cat8','cat9'],axis=1)\ndf2 = df2.drop(['cont12','cat5','cat8','cat9'],axis=1)","59b9ac6c":"plt.figure(figsize=(30,20))\ndf_lt = df1.corr(method = \"pearson\")\ndf_lt1 = df_lt.where(np.tril(np.ones(df_lt.shape)).astype(np.bool))\nsns.heatmap(df_lt1,annot=True,cmap=\"coolwarm\")","231b94b9":"df1.columns","3e8a9bf7":"X = df1.drop('target',axis=1)\ny = df1['target']","d0ce5d9a":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state=42)","6c238ca5":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()","e5bba2c0":"from sklearn.feature_selection import RFE\nrfe = RFE(lr,10)\nrfe = rfe.fit(X_train,y_train)","ab7088f6":"temp_df1 = pd.DataFrame({'Columns':X_train.columns,'Included':rfe.support_,'Ranking':rfe.ranking_})\ntemp_df1","75f4fc0f":"lr_old = LinearRegression()\nlr_old.fit(X_train,y_train)","3987ee93":"x_pred1 = lr_old.predict(X_train)\ny_pred1 = lr_old.predict(X_test)","ed06008e":"temp_df_old = pd.DataFrame({'Actual':y_test,'Predicted':y_pred1})\ntemp_df_old","b66e4c33":"from sklearn import metrics\nprint(\"Mean absolute error on training set: \",metrics.mean_absolute_error(y_train,x_pred1))\nprint(\"Mean absolute error on testing set: \",metrics.mean_absolute_error(y_test,y_pred1))\nprint(\"Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred1))\nprint(\"Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred1))\nprint(\"Root Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred1,squared=False))\nprint(\"Root Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred1,squared=False))","56227186":"imp_col = X_train.columns[rfe.support_]\nimp_col","d2c8c491":"X_train_new = X_train[imp_col]\nX_train_new.head()","2e0e0ea2":"lr_new = LinearRegression()\nlr_new.fit(X_train_new,y_train)","b1f004a5":"X_test_new = X_test[imp_col]\nx_pred2 = lr_new.predict(X_train_new)\ny_pred2 = lr_new.predict(X_test_new)","38f255d0":"temp_df_new = pd.DataFrame({'Actual':y_test,'Predicted':y_pred2})\ntemp_df_new","b3684a15":"print(\"Mean absolute error on training set: \",metrics.mean_absolute_error(y_train,x_pred2))\nprint(\"Mean absolute error on testing set: \",metrics.mean_absolute_error(y_test,y_pred2))\nprint(\"Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred2))\nprint(\"Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred2))\nprint(\"Root Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred2,squared=False))\nprint(\"Root Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred2,squared=False))","3001097f":"from xgboost import XGBRegressor","703ecf01":"xgb = XGBRegressor(random_state=1,n_jobs=4,n_estimators=5000,\n                  learning_rate=0.01,subsample=0.9,\n                  max_depth=5,colsample_bytree=0.5,reg_alpha=0.5,eval_metric='rmse')\nxgb.fit(X_train,y_train)","cc220ef9":"x_pred5 = xgb.predict(X_train)\ny_pred5 = xgb.predict(X_test)","6667a958":"print(\"Mean absolute error on training set: \",metrics.mean_absolute_error(y_train,x_pred5))\nprint(\"Mean absolute error on testing set: \",metrics.mean_absolute_error(y_test,y_pred5))\nprint(\"Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred5))\nprint(\"Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred5))\nprint(\"Root Mean squared error on training set: \",metrics.mean_squared_error(y_train,x_pred5,squared=False))\nprint(\"Root Mean squared error on testing set: \",metrics.mean_squared_error(y_test,y_pred5,squared=False))","2f9a8f32":"X_test_org = df2.copy()\npredictions = xgb.predict(X_test_org)\noutput = pd.DataFrame({'Id':df2.index,'target':predictions})\noutput.to_csv('submission.csv',index=False)","e39a29be":"pd.DataFrame(predictions).shape","2338b639":"# Submission","ec96b387":"# EDA","0c3f4ae6":"# Model building","cbc1f60e":"# Bivariate analysis","5a309e32":"# Feature engineering","ec7e1613":"# Boosting"}}