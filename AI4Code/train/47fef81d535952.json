{"cell_type":{"d08c3f37":"code","c1c55ec9":"code","3d043639":"code","421712cf":"code","466720f6":"code","487922c5":"code","846b70e3":"code","17621b78":"code","a35b17f6":"code","f268adc4":"code","3425bd0e":"code","e5ad6bcc":"code","cda74577":"code","1b9c9d1f":"code","15d4c76b":"code","e2565284":"code","a7f95d93":"code","d1a08f9a":"code","9d9ba4dd":"code","c703c778":"code","f5a02764":"code","27ddee55":"code","478f3e1a":"code","6426c91a":"code","3b5b19d3":"code","af0dab68":"markdown","b9c10ce2":"markdown","6600e221":"markdown","b0003532":"markdown","c43dc605":"markdown","50e019e2":"markdown","e5ebf74a":"markdown","eaceaf23":"markdown","2cb18422":"markdown","42262d5f":"markdown","a68068b3":"markdown","a79ee969":"markdown","99b6013f":"markdown","18b464c7":"markdown","4afa259e":"markdown","e2e24046":"markdown","4d369794":"markdown"},"source":{"d08c3f37":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c1c55ec9":"import matplotlib.pyplot as plt\nimport seaborn as sns","3d043639":"df=pd.read_csv('\/kaggle\/input\/living-wage-top-100-cities\/livingwage (2).csv')","421712cf":"df.head()","466720f6":"df.info()","487922c5":"df['pop_grow']=(df['population_2020']-df['population_2010'])\/df['population_2010']*100","846b70e3":"from geopy.geocoders import Nominatim","17621b78":"geolocator = Nominatim(user_agent=\"myGeolocator\")\nlist=['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix',\n       'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose',\n       'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'Indianapolis',\n       'Charlotte', 'San Francisco', 'Seattle', 'Denver', 'Washington',\n       'Nashville', 'Oklahoma City', 'El Paso', 'Boston', 'Portland',\n       'Las Vegas', 'Detroit', 'Memphis', 'Louisville', 'Baltimore',\n       'Milwaukee', 'Albuquerque', 'Tucson', 'Fresno', 'Sacramento',\n       'Kansas City', 'Mesa', 'Atlanta', 'Omaha', 'Colorado Springs',\n       'Raleigh', 'Long Beach', 'Virginia Beach', 'Miami', 'Oakland',\n       'Minneapolis', 'Tulsa', 'Bakersfield', 'Wichita', 'Arlington',\n       'Aurora', 'Tampa', 'New Orleans', 'Cleveland', 'Honolulu',\n       'Anaheim', 'Lexington', 'Stockton', 'Corpus Christi', 'Henderson',\n       'Riverside', 'Newark', 'Saint Paul', 'Santa Ana', 'Cincinnati',\n       'Irvine', 'Orlando', 'Pittsburgh', 'St. Louis', 'Greensboro',\n       'Jersey City', 'Anchorage', 'Lincoln', 'Plano', 'Durham',\n       'Buffalo', 'Chandler', 'Chula Vista', 'Toledo', 'Madison',\n       'Gilbert', 'Reno', 'Fort Wayne', 'North Las Vegas',\n       'St. Petersburg', 'Lubbock', 'Irving', 'Laredo', 'Winston\u2013Salem',\n       'Chesapeake', 'Glendale', 'Garland', 'Scottsdale', 'Norfolk',\n       'Boise', 'Fremont', 'Spokane', 'Santa Clarita', 'Baton Rouge',\n       'Richmond']\nfor i in list:\n    def func(i):\n        return geolocator.geocode(i).latitude","a35b17f6":"df['latitude']=df['city'].apply(func)","f268adc4":"for i in list:\n    def func2(i):\n        return geolocator.geocode(i).longitude","3425bd0e":"df['longitude']=df['city'].apply(func2)","e5ad6bcc":"df.head()","cda74577":"plt.figure(figsize = (15,8))\nsns.heatmap(df.corr(),annot=True, fmt=\"1.1f\")","1b9c9d1f":"import matplotlib.pyplot as plt\nimport plotly_express as px\nfig = px.scatter_mapbox(df,lat='latitude',lon='longitude',hover_name='city',hover_data=['population_2020'],color='population_2020',\n    size=\"population_2020\",size_max=50,opacity=0.4,\n    # \u4f5c\u56f3\u306e\u8a2d\u5b9a\n    center={'lat':41.26, 'lon':-96.7},\n    zoom=4,\n    height=800,\n    width=1400)\nfig.update_layout(mapbox_style='open-street-map')\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0})\nfig.update_layout(title_text=\"Population of each cities\")\nfig.show()","15d4c76b":"fig = px.scatter_mapbox(df,lat='latitude',lon='longitude',hover_name='city',hover_data=['two_adults_both_working_two_kids_living_wage'],color='two_adults_both_working_two_kids_living_wage',\n    size=\"two_adults_both_working_two_kids_living_wage\",size_max=30,opacity=0.4,\n    # \u4f5c\u56f3\u306e\u8a2d\u5b9a\n    center={'lat':41.26, 'lon':-96.7},\n    zoom=4,\n    height=800,\n    width=1600)\nfig.update_layout(mapbox_style='open-street-map')\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0})\nfig.update_layout(title_text=\"Living Wage of each cities\")\nfig.show()","e2565284":"plt.figure(figsize=(20, 12))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df['city'],y=df['density'],hue=df['population_2020'],size=df['two_adults_both_working_two_kids_living_wage'],data=df,sizes=(50,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","a7f95d93":"plt.figure(figsize=(20, 12))\nplt.legend(fontsize=10)\nplt.tick_params(labelsize=10)\nax=sns.scatterplot(x=df['city'],y=df['pop_grow'],hue=df['population_2020'],size=df['two_adults_both_working_two_kids_living_wage'],data=df,sizes=(50,500))\nplt.xticks(rotation=90)\nax.legend(loc='upper left',bbox_to_anchor=(1,1))","d1a08f9a":"df1=df.drop(['city','state'],axis=1)","9d9ba4dd":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nsc = StandardScaler()\ncl_sc=sc.fit_transform(df1)\nkmeans = KMeans(n_clusters=4, random_state=0)\nclusters = kmeans.fit(cl_sc)","c703c778":"df1[\"clustering\"] = clusters.labels_\ndf1.head()","f5a02764":"df1['city']=df.city","27ddee55":"df1.groupby('clustering').mean()","478f3e1a":"pre = cl_sc\npca = PCA(n_components=2) \npca.fit(pre)\npca_pre = pca.transform(pre)\npca_data = pd.DataFrame(pca_pre)","6426c91a":"for i in df1[\"clustering\"].unique():\n    tmp = pca_data.loc[df1[\"clustering\"] == i]\n    plt.scatter(tmp[0], tmp[1], label=i)\nplt.legend()","3b5b19d3":"fig = px.scatter_mapbox(df1,lat='latitude',lon='longitude',hover_name='city',hover_data=['clustering'],color='clustering',\n    size=\"two_adults_both_working_two_kids_living_wage\",size_max=30,opacity=0,\n    # \u4f5c\u56f3\u306e\u8a2d\u5b9a\n    center={'lat':41.26, 'lon':-96.7},\n    zoom=4,\n    height=800,\n    width=1600)\nfig.update_layout(mapbox_style='open-street-map')\nfig.update_layout(margin={\"r\": 0, \"t\": 0, \"l\": 0, \"b\": 0})\nfig.update_layout(title_text=\"Living Wage of each cities\")\nfig.show()","af0dab68":"# 4. Clustering","b9c10ce2":"# 2) Getting data of Latitude and Longitude of each cities","6600e221":"# 4) Population Density by Cities","b0003532":"# * First, I thought that 'Population' would have strong positive correlation with 'Living Wage'.\n# * But actually, 'Density' has much stonger positive correlation with 'Living Wage' than 'Population'.\n# * It seems that there are no large gap in family typs about correlation between 'Density' and 'Living Wage'","c43dc605":"# 1. Data Outline","50e019e2":"<h1 style=\"font-size:50px;color:#6166B3;text-align:left\"><strong>BEST<\/strong> <strong style=\"color:black\">PLACES TO LIVE IN THE USA<\/strong><\/h1>","e5ebf74a":"# 2. Features Engineering","eaceaf23":"# 5) Population Growth by Cities","2cb18422":"# 3. Visualization","42262d5f":"# 1) Cluatering","a68068b3":"# 2) PCA","a79ee969":"# 3) Living Wage of Familiy\ntwo_adults_both_working_two_kids","99b6013f":"# 1) Add the population growth","18b464c7":"# Find the city you like to live by moving the cursor !","4afa259e":"# 1) Correlation","e2e24046":"# 2) Population in 2020","4d369794":"# * Cluster 0: High populatuon and density, and most expensive to live, least population grow\n# * Cluster 1: Low density and least expensive to live\n# * Cluster 2: Middle density and less enpensive to live\n# * Cluster 3: Middle density and more expensive to live, most population grow "}}