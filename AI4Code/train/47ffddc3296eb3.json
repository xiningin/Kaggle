{"cell_type":{"4a5cfd5e":"code","0180ba70":"code","3fc58fc6":"code","3c2ee1de":"code","1731dfcc":"code","eddb6352":"code","ae9f9408":"code","7be1a685":"code","85270d23":"code","862a541a":"code","32fec96c":"code","97863783":"code","ede07ab3":"code","802dd2c2":"code","28b9d115":"markdown","02aeff39":"markdown","58c1712e":"markdown"},"source":{"4a5cfd5e":"%matplotlib inline\nimport pandas as pd\nfrom statsmodels.tsa.ar_model import AR\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom tqdm import tqdm\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\n\ndef root_mean_squared_error(t,p):\n    return np.sqrt(mean_squared_error(t,p))","0180ba70":"train_raw = pd.read_csv(\"..\/input\/train.csv\", parse_dates=[\"Date\"])\ntrain_raw.set_index(\"Date\", inplace=True)\ntest = pd.read_csv(\"..\/input\/test.csv\", parse_dates=[\"Date\"])\ntest.set_index(\"Date\", inplace=True)\nsample_submission = pd.read_csv(\"..\/input\/sampleSubmission.csv\")\nimport datetime","3fc58fc6":"n_hexagons = 319","3c2ee1de":"train_raw.shape","1731dfcc":"train_raw.head()","eddb6352":"test.shape","ae9f9408":"train_raw.index.min(), train_raw.index.max()","7be1a685":"test.index.min(), test.index.max()","85270d23":"pd.Series(train_raw.sum(axis=0).values).hist(bins=50)","862a541a":"train_raw[\"hex_299\"].plot()","32fec96c":"train_raw.iloc[:,1:].sum(axis=0).plot()","97863783":"#function to convert a dataframe with predictions to submission format\ndef predictions_to_submission(predictions):\n    records = []\n    for hex_id in tqdm(range(0, n_hexagons)):\n        hex_id = \"hex_%03d\" % hex_id\n        for i,dt in enumerate(predictions.index):\n            records.append((str(dt) + \"_\" + hex_id, predictions[hex_id][i]))\n    submission = pd.DataFrame.from_records(records, columns=sample_submission.columns)\n    return submission","ede07ab3":"split_date = datetime.datetime(2018,10,31)\ntrain = train_raw[train_raw.index < split_date]\nval_true = train_raw[train_raw.index >= split_date]\nval_pred = val_true.copy()\nval_pred.iloc[:,:] = 0\n\nfor hex_id in tqdm(range(n_hexagons)):\n    hex_id = \"hex_%03d\" % hex_id\n    data = train[hex_id].values\n    val_pred[hex_id] = data.mean()\n    \nprint(\"RMSE\", root_mean_squared_error(val_true, val_pred))\n\n# prepare final test\nfor hex_id in tqdm(range(n_hexagons)):\n    hex_id = \"hex_%03d\" % hex_id\n    data = train_raw[hex_id].values\n    test[hex_id] = data.mean()\n\nsubmission = predictions_to_submission(test)\nsubmission.to_csv(\"submission_means.csv\", index=False)","802dd2c2":"split_date = datetime.datetime(2018,10,31)\ntrain = train_raw[train_raw.index < split_date]\nval_true = train_raw[train_raw.index >= split_date]\nval_pred = val_true.copy()\nval_pred.iloc[:,:] = 0\n\nfor hex_id in tqdm(range(n_hexagons)):\n    hex_id = \"hex_%03d\" % hex_id\n    data = train[hex_id].values\n    model = AR(data, )\n    model_fit = model.fit()\n    yhat = model_fit.predict(len(data), len(data)+93-1)\n    val_pred[hex_id] = yhat\n    \nprint(\"RMSE\", root_mean_squared_error(val_true, val_pred))\n\nfor hex_id in tqdm(range(0, n_hexagons)):\n    hex_id = \"hex_%03d\" % hex_id\n    data = train_raw[hex_id].values\n    model = AR(data)\n    model_fit = model.fit()\n    yhat = model_fit.predict(len(data), len(data)+94-1)\n    test[hex_id] = yhat\n\nsubmission = predictions_to_submission(test)\nsubmission.to_csv(\"submission_autoreg.csv\", index=False)","28b9d115":"# validate autoregression (lb: 0.56008)","02aeff39":"Distribution of incidents per hexagon","58c1712e":"# validate means - predict the number of incidents as a mean of train (lb: 0.56044)"}}