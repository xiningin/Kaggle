{"cell_type":{"76f328cf":"code","af708a70":"code","4ca9fb21":"code","e907182d":"code","f715e1c3":"code","019ad7bc":"code","8999dd12":"code","ce7fc4ef":"code","33b91a88":"markdown","858627b1":"markdown","37086426":"markdown","40f45dc1":"markdown","ce6568a1":"markdown","37b334fe":"markdown"},"source":{"76f328cf":"import numpy as np\nimport pandas as pd ","af708a70":"a = np.array([-2.72, -1.15, 0, 1.57, 2.30, 3.01])","4ca9fb21":"np.around(a)","e907182d":"np.rint(a)","f715e1c3":"np.fix(a)","019ad7bc":"np.ceil(a)","8999dd12":"np.floor(a)","ce7fc4ef":"np.trunc(a)","33b91a88":"# numpy floor (1.57 -> 1) (-2.72 -> -3)\nthe largest integer less than or equal to each element","858627b1":" # numpy round\n Evenly round to the given number of decimals","37086426":"# numpy rint ( -2.72 -> -3)\nround elements to \n### the nearest integer\n","40f45dc1":"# numpy ceil (-2.72-> -2) (2.3->3)\nthe smallest integer greater than or equal to each element ","ce6568a1":"# numpy trunc (1.57 ->1) (-2.72 -> -2)\nReturn the truncated value of the input, element-wise","37b334fe":"# fix (-2.72 -> -2)\nRound to \n### nearest integer \n### towards zero"}}