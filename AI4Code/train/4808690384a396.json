{"cell_type":{"5053076b":"code","84ea0ee5":"code","2484fcc6":"code","b1aced16":"code","1a8d4726":"code","32307069":"code","37d76003":"code","31705e65":"code","a93692e6":"code","14a63d42":"code","60d76399":"code","da67f459":"code","80503233":"markdown","d56a43cb":"markdown"},"source":{"5053076b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt# make imgs\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","84ea0ee5":"excel_name = \"..\/input\/data-for-phone-which-play-the-game\/phone-data.xlsx\"\n# !pip install openpyxl \n# \u4e0a\u9762\u90a3\u4e00\u884c\u662f\u4e3a\u4e86\u4e3a\u4e86\u76f4\u63a5\u8bfb\u53d6 excel\uff0c\u611f\u89c9\u5e76\u4e0d\u597d\u7528\uff0c\u6545\u6ce8\u91ca\n# data = pd.read_excel(excel_name,sheet_name=[\"install-info\"],)\n# pd.read_excel() \u592a\u96be\u7528\u4e86 \uff0c \u8bfb\u53d6\u4e4b\u540e\u662fdict\u683c\u5f0f\uff0c\u800c\u4e14dict\u7684key\u662f\u5b50\u8868\u540d\uff0cdict\u7684value\u662f\u8868\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u65e0\u8bed\u5b50\u54ce~QAQ\n\nfile_install_info = \"..\/input\/data-for-phone-which-play-the-game\/install_info.csv\"\nfile_register_info = \"..\/input\/data-for-phone-which-play-the-game\/register_info.csv\"\n\ninstall_data = pd.read_csv(file_install_info)\nregister_data = pd.read_csv(file_register_info)\nprint(install_data)","2484fcc6":"phone_brands = install_data[[\"\u673a\u578b\",\"\u7528\u6237\u552f\u4e00ID\"]]\nphone_brands = phone_brands.rename(columns={'\u673a\u578b':'MODEL','\u7528\u6237\u552f\u4e00ID':'User ID'})\nphone_brands[\"BRANDS\"] = phone_brands[\"MODEL\"].str.split(\"-\",expand=True)[0].str.upper() # \u611f\u89c9\u8fd8\u662f\u7edf\u4e00\u5927\u5199\u597d\u770b\u4e00\u70b9\nphone_brands","b1aced16":"ans = phone_brands.groupby( [ \"BRANDS\"] ).size().to_frame(name = 'COUNT').reset_index()\nans","1a8d4726":"ans.sort_values(by=\"COUNT\",ascending=False,inplace=True)\nans","32307069":"ans.describe()","37d76003":"num=0\nfor count in ans['COUNT']:\n    if count == 1:\n        num = num +1\nnum","31705e65":"num=0\nfor count in ans['COUNT']:\n    if count <= 10:\n        num = num +1\nnum","a93692e6":"ans[(ans[\"COUNT\"]>30)]","14a63d42":"import matplotlib.pyplot as plt\n# plt.figure(dpi=200,figsize=(2,1))\nplt.plot(ans[\"BRANDS\"],ans[\"COUNT\"],color='r',marker='o',linestyle='dashed')\n\nplt.axis([0,10,10,3000])\nplt.annotate('Most Popular Phone \\n used to play the game',xy=(0,2600),xytext=(3,2500),\n             fontsize=16,\n             # arrowprops=dict(facecolor='black',shrink=0.1)\n             arrowprops=dict(arrowstyle='<-')\n            )\nplt.xticks(fontsize=8)\n# plt.legend()\nplt.savefig('line-chart')\nplt.show()","60d76399":"# assign the data\nsamsung = phone_brands.BRANDS.value_counts()['SAMSUNG']\noppo    = phone_brands.BRANDS.value_counts()['OPPO']\nhuawei  = phone_brands.BRANDS.value_counts()['HUAWEI']\nxiaomi  = phone_brands.BRANDS.value_counts()['XIAOMI']\nasus    = phone_brands.BRANDS.value_counts()['ASUS']\nhtc     = phone_brands.BRANDS.value_counts()['HTC']\nsony    = phone_brands.BRANDS.value_counts()['SONY']\nvivo    = phone_brands.BRANDS.value_counts()['VIVO']\nlge     = phone_brands.BRANDS.value_counts()['LGE']\n\nnames = ['SAMSUNG', 'OPPO', 'HUAWEI', 'XIAOMI', 'ASUS', 'HTC', 'SONY', 'VIVO', 'LGE']\nsize  = [samsung, oppo, huawei, xiaomi, asus, htc, sony, vivo, lge]\n\n#explode = (0.2, 0, 0)\n\n# create a pie chart\nplt.pie(x=size, \n        labels=names, \n        # colors=['red', 'darkorange', 'silver',], \n        colors=['#74d2e7','#48a9c5','#0085ad','#8db9ca','#4298b5', '#005670', '#00205b', '#008eaa'],\n        autopct='%1.2f%%', \n        pctdistance=0.6, \n        textprops=dict(fontweight='bold'),\n        wedgeprops={'linewidth':7, 'edgecolor':'white'})\n\n# create circle for the center of the plot to make the pie look like a donut\nmy_circle = plt.Circle((0,0), 0.6, color='white')\n\n# plot the donut chart\nfig = plt.gcf()\nfig.set_size_inches(8,8)\nfig.gca().add_artist(my_circle)\nplt.title('\\nTop 8 (COUNT >= 100) Phone Brands', fontsize=14, fontweight='bold')\nplt.savefig('Pie-chart')\nplt.show()\n# plt.savefig('Pie-chart')","da67f459":"# plt.rcParams['font.sans-serif'] = ['SimHei']\nproduct_type=[\"SWE08UF\",\"SWE18UF\",\"SWE25F\",\"SWE40UF\",\"SWE60E\",\"SWE70E\",\"SWE80E9\",\"SWE100E\",\"SWE150E\",\"SWE155E\",\"SWE205E\",\"SWE215E\",\"SWE365E-3\",\"SWE385E\",\"SWE470E\",\"SWE500E\",\"SWE580E\",\"SWE900E\"]\nsales_num=[int(abs(i)*100) for i in np.random.randn(len(product_type))]\nsn=pd.DataFrame({\"\u4ea7\u54c1\u7c7b\u578b\":product_type,\"\u9500\u91cf\":sales_num}).sort_values(\"\u9500\u91cf\",ascending=False)\nN=len(product_type)\ntheta=np.linspace(0+(100\/180)*np.pi,2*np.pi+(100\/180)*np.pi,N,endpoint=False)\nwidth=2*np.pi\/N\ncolors=plt.cm.viridis([i for i in np.random.random(N)])\nplt.figure(figsize=(15,15))\nplt.subplot(111,projection=\"polar\")\nbars=plt.bar(theta,sn[\"\u9500\u91cf\"],width=width,bottom=30,color=colors)\nfor r,s,t,bar in zip(theta,sn[\"\u9500\u91cf\"],sn[\"\u4ea7\u54c1\u7c7b\u578b\"],bars):\n    plt.text(r,s+45,t+\"\\n\"+str(s)+' ',ha=\"center\",va=\"baseline\",fontsize=14) \nplt.axis(\"off\")\n# plt.savefig(\".jpg\")","80503233":"\u5728\u5168\u90e8117\u4e2a\u54c1\u724c\u4e2d\uff0c\u5176\u5b89\u88c5\u7684\u6570\u91cf\u591a\u6570\uff0891\u4e2a\uff09\u662f\u5c11\u4e8e10\u4e2a\u7684\uff0c\u6211\u4eec\u6682\u4e14\u51b3\u5b9a\u4e0d\u89c4\u8303\u5730\u628a\u4ed6\u4eec\u5f52\u4e3a`Others` <br \/>\n\u5373,\u4e0b\u9762\u6211\u4eec\u5c06\u5c06`BRANDS <= 10` \u5f52\u4e3a `Others`","d56a43cb":"**To Do List:**\n- [ ] **\u5357\u4e01\u683c\u5c14\u73ab\u7470\u56fe**\n- [x] **\u6298\u7ebf\u56fe**\n- [x] **\u997c\u72b6\u56fe**\n\nhttps:\/\/www.kaggle.com\/alafun\/for-the-homework-of-hyl\n"}}