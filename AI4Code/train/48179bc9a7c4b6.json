{"cell_type":{"5ca7dfcf":"code","73548010":"code","f1905957":"code","c995f608":"code","bbe7f89c":"code","9471b26b":"code","77052f4d":"code","ce254ff6":"code","f329556e":"code","319f6edc":"code","eddcc66a":"code","4e0c4033":"code","1071dbfa":"code","e01a0f75":"code","69602e10":"code","8f6da72a":"code","f0c2b5a3":"code","71344422":"code","283c7d89":"code","fe0215eb":"code","1c90b21e":"code","1b0f235f":"code","0e38e84b":"code","1f3f59a3":"code","feb0dd75":"code","288e28f5":"code","d38c0e87":"code","2a8248ce":"code","ef61473e":"code","d852b98f":"code","1b6e5fff":"code","e9fc30f7":"code","7195018f":"code","8e96ce14":"code","79b0f392":"code","bb557800":"markdown","b8190d6a":"markdown","3fe9a268":"markdown","04c348ac":"markdown","ee763853":"markdown","d260278b":"markdown","fa767392":"markdown","6d8b014a":"markdown","aed0956d":"markdown","584ce50e":"markdown","df3a8793":"markdown","b8f6ce12":"markdown","5310b388":"markdown","ae39fe17":"markdown","4572cc29":"markdown","2bb3e69a":"markdown","a80657e9":"markdown","4e504c93":"markdown","9af3e6e7":"markdown","ac299aff":"markdown","43c74f36":"markdown","41acd683":"markdown","74f0eabd":"markdown"},"source":{"5ca7dfcf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n%matplotlib inline\nfrom matplotlib import pyplot as plt\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\nimport plotly.express as px\nfrom PIL import Image\nimport plotly.graph_objs as go \nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","73548010":"!pip install openpyxl\n","f1905957":"#Preparing the Data","c995f608":"athlete = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx',engine='openpyxl')","bbe7f89c":"athlete.head()","9471b26b":"athlete.dtypes","77052f4d":"coach = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx',engine='openpyxl')\ncoach.head()","ce254ff6":"coach.dtypes","f329556e":"gender_entries = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx',engine='openpyxl')\ngender_entries.head()","319f6edc":"gender_entries.dtypes","eddcc66a":"medal = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx',engine='openpyxl')\nmedal.head()","4e0c4033":"medal.dtypes","1071dbfa":"team = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx',engine='openpyxl')\nteam.head()","e01a0f75":"team.dtypes","69602e10":"#Wordcloud showcasing the discipline with Max particpants\ntext = \" \".join(discipline for discipline in athlete['Discipline'])\n# Create stopword list:\n#stopwords = set(STOPWORDS)\n#stopwords.update([\"\"])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(collocations=False,width=1500, height=1000,background_color='Black').generate(text)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","8f6da72a":"#Creating a new Dataframe having total participant count from each country\nathlete_count = pd.DataFrame(athlete['NOC'].value_counts().sort_values(ascending=False))\nathlete_count.rename(columns = {'NOC':'Count'},inplace=True)\nathlete_count.index.rename('NOC',inplace=True)\nathlete_count.reset_index(inplace=True)\nathlete_count.head()","f0c2b5a3":"athlete_count.head()","71344422":"#Bar plot showcasing total number of participants for each country\nfig = px.bar(athlete_count,x='Count',y='NOC',color='NOC',height=4000,width=1000)\nfig.update_layout(showlegend=False)\nfig.show()","283c7d89":"#Renaming ROC as Russia so that it reflects on Choropleth\nathlete_count['NOC'].replace('ROC','Russia',inplace=True)","fe0215eb":"data = dict(\n        type = 'choropleth',\n        colorscale = 'portland',\n        locations = athlete_count['NOC'],\n        locationmode = 'country names', \n        z = athlete_count['Count'],\n        text = athlete_count['NOC'],\n        colorbar = {'title' : 'No. of athletes from each country'},\n      ) \nlayout = dict(\n    title = '2020 Tokyo Athlete Distribution',\n    geo = dict(\n        showframe = False,\n        projection = {'type':'mercator'}\n    )\n)\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","1c90b21e":"#Distribution of medals across countries\nfig = px.bar(medal,x='Team\/NOC',y=['Bronze','Silver','Gold'],color_discrete_sequence=['#CD7F32','silver','gold'],hover_name='Rank',height=900,width=2000)\nfig.update_layout(yaxis= {'categoryorder':'array', 'categoryarray':['Gold','Silver','Bronze']},xaxis = {'categoryorder':'total descending'})\nfig.show()","1b0f235f":"#Renaming ROC as Russia so that it reflects on Choropleth\nmedal['Team\/NOC'].replace('ROC','Russia',inplace=True)","0e38e84b":"data = dict(\n        type = 'choropleth',\n        colorscale = 'pinkyl',\n        locations = medal['Team\/NOC'],\n        locationmode = 'country names', \n        z = medal['Total'],\n        text = medal['Team\/NOC'],\n        colorbar = {'title' : 'Country-wise Medal Distribution'},\n      ) \nlayout = dict(\n    title = '2020 Tokyo',\n    geo = dict(\n        showframe = False,\n        projection = {'type':'stereographic'}\n    )\n)\nchoromap3 = go.Figure(data = [data],layout = layout)\niplot(choromap3)","1f3f59a3":"#Gender-wise distribution of participants across countries\nfig = px.bar(gender_entries,x='Discipline',y=['Male','Female'],color_discrete_sequence=['Blue','Pink'],barmode='group',hover_name='Total',height=900,width=2000)\nfig.update_yaxes(title_text='No. of Participants')\nfig.show()","feb0dd75":"#Number of participants as % of their gender\nfig = px.pie(gender_entries, values=[gender_entries['Female'].sum(),gender_entries['Male'].sum()], names=['Female','Male'],\n            color=['Female','Male'],color_discrete_map={'Male':'blue','Female':'pink'})\nfig.show()","288e28f5":"#Creating a new Dataframe having total coach count from each country\ncoach_count = pd.DataFrame(coach['NOC'].value_counts().sort_values(ascending=False))\ncoach_count.rename(columns = {'NOC':'Count'},inplace=True)\ncoach_count.index.rename('NOC',inplace=True)\ncoach_count.reset_index(inplace=True)\ncoach_count.head()","d38c0e87":"#Renaming ROC as Russia so that it reflects on Choropleth\ncoach_count['NOC'].replace('ROC','Russia',inplace=True)","2a8248ce":"data = dict(\n        type = 'choropleth',\n        colorscale = 'earth',\n        locations = coach_count['NOC'],\n        locationmode = 'country names', \n        z = coach_count['Count'],\n        text = coach_count['NOC'],\n        colorbar = {'title' : 'No. of coaches from each country'},\n      ) \nlayout = dict(\n    title = '2020 Tokyo Coach Count',\n    geo = dict(\n        showframe = False,\n        projection = {'type':'mercator'}\n    )\n)\nchoromap2 = go.Figure(data = [data],layout = layout)\niplot(choromap2)","ef61473e":"\ntext2 = \" \".join(discipline for discipline in coach['Discipline'])\n# Create stopword list:\nstopwords = set(STOPWORDS)\nstopwords.update([\"Sevens\"])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(collocations=False,stopwords=stopwords,width=1500, height=1000,background_color='White').generate(text2)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","d852b98f":"#Bar plot showcasing total number of count for each country\nfig = px.bar(coach_count,x='NOC',y='Count',color='Count',hover_name='Count',height=900,width=2000)\nfig.update_yaxes(title_text='No. of Coaches from each Country')\nfig.show()","1b6e5fff":"#Creating a new Dataframe having total coach count from each country\ncoach_disp = pd.DataFrame(coach['Discipline'].value_counts().sort_values(ascending=False))\ncoach_disp.rename(columns = {'Discipline':'Count'},inplace=True)\ncoach_disp.index.rename('Discipline',inplace=True)\ncoach_disp.reset_index(inplace=True)\ncoach_disp.head()","e9fc30f7":"#Bar plot showcasing total number of count for each discipline\nfig = px.bar(coach_disp,x='Count',y='Discipline',color='Discipline',hover_name='Count',height=1000,width=1000)\nfig.update_yaxes(title_text='No. of Coaches from each Discipline')\nfig.update_layout(showlegend=False)\nfig.show()","7195018f":"#Just for fun created a wordcloud with the coachs' names :)#\ntext3 = \" \".join(name for name in coach['Name'])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(collocations=False,width=1500, height=1000,background_color='Purple').generate(text3)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","8e96ce14":"#Just for fun created a wordcloud with the athletes' names :)#\ntext4 = \" \".join(name for name in athlete['Name'])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(collocations=False,width=1500, height=1000,background_color='Blue').generate(text4)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","79b0f392":"#Just for fun created a wordcloud with the athletes' names :)#\nathlete['NOC'].replace('ROC','Russia',inplace=True)\ntext5 = \" \".join(name for name in athlete['NOC'])\n# Create stopword list:\nstopwords2 = set(STOPWORDS)\nstopwords2.update([\"People\",\"Republic\",\"United\",\"States\"])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(collocations=False,stopwords = stopwords2,width=1500, height=1000,background_color='Green').generate(text5)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","bb557800":"**CHOROPLETH SHOWING THE NUMBER OF ATHLETES FROM EACH COUNTRY**","b8190d6a":"Inference: Seems like Jose,Manuel and David were the most common names among the coaches.","3fe9a268":"**PERCENTAGE OF PARTICIPANTS ACROSS GENDERS**","04c348ac":"**GENDER-WISE DISTRIBUTION OF PARTICPANTS ACROSS DISCIPLINES**","ee763853":"**BAR PLOT SHOWING THE NUMBER OF COACHES FROM EACH COUNTRY**","d260278b":"**BAR PLOT SHOWCASING THE TOTAL NUMBER PARTICIPANTS FOR EACH COUNTRY**","fa767392":"Inference: Basketball had the most number of coaches followed by Artistic Swimming.","6d8b014a":"Inference:USA won the most number of medals followed by China and Russia.","aed0956d":"**CHOROPLETH SHOWING MEDAL DISTRIBUTION**","584ce50e":"Inference: Athletics had the most number of particpants,i.e.,1072 men and 967 women. Most sports like Cycling BMX Racing,Archery,Basketball,and Artistic Gymnastics etc. had the same participation across genders.While Diving,Cycling BMX Freestyle had more women participants. However, Artistic Swimming and Rhythmic Gymnastics were women-only sports.","df3a8793":"**CREATING A NEW DF HAVING TOTAL PARTICIPANT COUNT FROM EACH COUNTRY**","b8f6ce12":"**COUNTRY-WISE MEDALS DISTRIBUTION**","5310b388":"Inference: Hosts Japan had the most number of coaches(35) followed by Spain and USA at 28 each.","ae39fe17":"Inference: Maria,Anna and Daniel were the most common names among the participants.","4572cc29":"**Please do leave an upvote if you like it. :)**","2bb3e69a":"**WORD CLOUD FOR COACHS' DISCIPLINES**","a80657e9":"**CHOROPLETH FOR NO. OF COACHES ACROSS COUNTRIES**","4e504c93":"**ANALYSIS ON ATHLETE DATA**","9af3e6e7":"**WORDCLOUDS WITH NAMES OF COACHES AND ATHLETES :)**","ac299aff":"Inference from above plot, USA had the most number of athletes(615) participating,followed by Japan,Australia and China.","43c74f36":"**WORDCLOUD SHOWCASING THE DISCIPLINE IN ORDER OF PARTICIPANT COUNT**","41acd683":"Inference: Although most sports had equal participation and some were exclusively for women, there were more male(5884) participants compared to women(5432).","74f0eabd":"**CREATING A NEW DF HAVING TOTAL PARTICIPANT COUNT FROM EACH COUNTRY**"}}