{"cell_type":{"0d6736cc":"code","e0a34989":"code","67971637":"code","173d6e66":"code","867c3996":"code","a6f17023":"code","333d7f12":"code","dcfd87e3":"code","103d1e9e":"code","60786e5e":"code","e2184f3a":"code","df86a724":"code","22b9239c":"code","dc119053":"code","17334765":"code","8fa93104":"code","8e061876":"code","3fadeb67":"markdown","0ae34cb2":"markdown","62f9d7e8":"markdown","3f753056":"markdown","40c85325":"markdown","dcc643b0":"markdown"},"source":{"0d6736cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0a34989":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers,models,Sequential\nimport PIL\nimport matplotlib.pyplot as plt\nimport numpy as np","67971637":"fashion_mnist=keras.datasets.fashion_mnist\n(train_image,train_label),(test_image,test_label)=fashion_mnist.load_data()","173d6e66":"print(len(train_image))\nprint(len(test_image))","867c3996":"plt.imshow(train_image[0])\nplt.show()","a6f17023":"plt.imshow(test_image[1])","333d7f12":"train_image=train_image\/255\ntest_image=test_image\/255","dcfd87e3":"train_image.shape","103d1e9e":"train_image = tf.expand_dims(train_image,axis=-1)\ntest_image = tf.expand_dims(test_image, axis=-1)","60786e5e":"print(train_image.shape)","e2184f3a":"model=Sequential([\n    #First is the conv2D layer\n    layers.Conv2D(filters=64,activation='relu',kernel_size=(3,3)),\n    layers.MaxPooling2D(2,2),\n    layers.Conv2D(filters=128,activation='relu',kernel_size=(3,3)),\n    layers.MaxPooling2D(2,2),\n    layers.Conv2D(filters=256,activation='relu',kernel_size=(3,3)),\n    layers.MaxPooling2D(2,2),\n    \n    layers.Flatten(),\n    layers.Dropout(0.2),\n    layers.Dense(512,activation='relu'),\n    layers.Dense(10,activation='softmax')\n])","df86a724":"model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n\n)","22b9239c":"model.fit(train_image,train_label,epochs=10)","dc119053":"model.evaluate(test_image,test_label)","17334765":"y_predict=model.predict(test_image)\ny_predict[0]","8fa93104":"np.argmax(y_predict[0])","8e061876":"plt.imshow(test_image[0])","3fadeb67":"# Important Libraries","0ae34cb2":"# Image Classification model of Fashion items,\n#  10 fashion items \n![image.png](attachment:5377e448-39ba-413c-9af8-1b03fd15f004.png)","62f9d7e8":"# Importing Dataset from tensorflow","3f753056":"#  Implementing Convolutional Neutral Network","40c85325":"# This is predicting the ankle boot","dcc643b0":"This is the image of Boot"}}