{"cell_type":{"775cd140":"code","493d7764":"code","fafb83ac":"code","bef25ff6":"code","844a915f":"code","11175cfc":"code","275f21d3":"code","28e34bab":"code","ade302d6":"code","17f30770":"code","d7c435bd":"code","72c0e61e":"code","850ca4af":"code","8f3aa5b6":"code","1d952aa1":"code","598e3317":"code","756cfe41":"code","f8112b84":"code","b5a9c62e":"code","8306225a":"markdown","3442ad55":"markdown","b4e9f313":"markdown","ed4d09b1":"markdown","c71dc79c":"markdown","ce36d2b8":"markdown","57308d61":"markdown","e9bdeba0":"markdown","281902ee":"markdown","831df1db":"markdown"},"source":{"775cd140":"import numpy as np\nimport pandas as pd","493d7764":"train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\n\ntrain.head()","fafb83ac":"train.shape","bef25ff6":"test = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\n\ntest.head()","844a915f":"test.shape","11175cfc":"from sklearn.model_selection import train_test_split\n\ny = train.label\n\nx = train.drop(\"label\", axis=1)\nx = np.array(x, dtype=np.float32)\/255\nx = x.reshape(-1,28,28,1)\n\nx_train, x_valid, y_train, y_valid = train_test_split(x,y, random_state=1, test_size=0.2)","275f21d3":"import matplotlib.pyplot as plt\n\nplt.imshow(x[4], cmap='gray')\nplt.show()","28e34bab":"import tensorflow as tf\n\ndef build_model():\n    model = tf.keras.Sequential([\n    \n        tf.keras.layers.Conv2D(filters=24, kernel_size=3, activation='relu'),\n        tf.keras.layers.MaxPool2D(pool_size=2),\n\n        tf.keras.layers.Conv2D(filters=36, kernel_size=3, activation='relu'),\n        tf.keras.layers.MaxPool2D(pool_size=2),\n\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(128, activation='relu'),\n        tf.keras.layers.Dense(10, activation='softmax')\n    ])\n    \n    model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3), loss='sparse_categorical_crossentropy',\n              metrics=[\"accuracy\"])\n    \n    return model","ade302d6":"model = build_model()\nmodel.build(input_shape=x_train.shape)\nmodel.summary()","17f30770":"batch_size = 32\nepochs = 10\n\nmodel.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)","d7c435bd":"valid_loss, valid_acc = model.evaluate(x_valid, y_valid)\nprint(\"Validation accuracy: %.4f\" %valid_acc)","72c0e61e":"model_full = build_model()\nmodel_full.fit(x, y, batch_size=batch_size, epochs=epochs)","850ca4af":"x_test = np.array(test, dtype=np.float32)\/255\nx_test = x_test.reshape(-1,28,28,1)","8f3aa5b6":"preds = model.predict(x_test)\npreds","1d952aa1":"preds.shape","598e3317":"preds = (np.argmax(preds, axis=1))","756cfe41":"example = pd.read_csv(\"..\/input\/digit-recognizer\/sample_submission.csv\")\nexample.head()","f8112b84":"submission = pd.DataFrame({\n    \"ImageId\":test.index+1,\n    \"Label\":preds\n})\n\nsubmission.head()","b5a9c62e":"submission.to_csv(\"submission.csv\", index=False)","8306225a":"# Importing Data","3442ad55":"# Splitting Training Dataset","b4e9f313":"As we can see, the model isn't overfitting. So we will train again with full data.","ed4d09b1":"We will split the training dataset to make sure if the model is not overfitting.","c71dc79c":"# Introduction","ce36d2b8":"Thank you for reading my notebook! Please let me know how can I improve my work, and if you liked it, check my other notebooks as well!","57308d61":"Hello there! This is a beginner's notebook on Neural Networks, to implement what I applied in this amazing course from MIT http:\/\/introtodeeplearning.com\/, which I highly recommend to check out. Our goal is to recognize digits from images, to do so we will use Convolutional Neural Networks, which are powerful tools for Computer Vision problems. So, let's start! Please comment how can I improve my work in the comments if you can :)","e9bdeba0":"# Submission","281902ee":"# Building the CNN","831df1db":"# Predicting"}}