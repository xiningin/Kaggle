{"cell_type":{"b793a973":"code","70632fc0":"code","24aad800":"code","e5d29a08":"code","f4ea94c4":"code","01eec329":"code","08b05b8e":"code","051abd74":"code","253b0c14":"code","85692c29":"code","30f744fa":"code","249b7923":"code","a0eea2c4":"code","0b2ba060":"code","8d540311":"code","2fb4f000":"code","14a0e15a":"markdown","1324bbff":"markdown"},"source":{"b793a973":"import numpy as np\nimport pandas as pd","70632fc0":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import OrdinalEncoder","24aad800":"df = pd.read_csv('..\/input\/covid-toy-dataset\/covid_toy.csv')","e5d29a08":"df.head()","f4ea94c4":"df.isnull().sum()","01eec329":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(df.drop(columns=['has_covid']),df['has_covid'],\n                                                test_size=0.2)","08b05b8e":"X_train","051abd74":"# adding simple imputer to fever col\nsi = SimpleImputer()\nX_train_fever = si.fit_transform(X_train[['fever']])\n\n# also the test data\nX_test_fever = si.fit_transform(X_test[['fever']])\n                                 \nX_train_fever.shape","253b0c14":"# Ordinalencoding -> cough\noe = OrdinalEncoder(categories=[['Mild','Strong']])\nX_train_cough = oe.fit_transform(X_train[['cough']])\n\n# also the test data\nX_test_cough = oe.fit_transform(X_test[['cough']])\n\nX_train_cough.shape","85692c29":"# OneHotEncoding -> gender,city\nohe = OneHotEncoder(drop='first',sparse=False)\nX_train_gender_city = ohe.fit_transform(X_train[['gender','city']])\n\n# also the test data\nX_test_gender_city = ohe.fit_transform(X_test[['gender','city']])\n\nX_train_gender_city.shape","30f744fa":"# Extracting Age\nX_train_age = X_train.drop(columns=['gender','fever','cough','city']).values\n\n# also the test data\nX_test_age = X_test.drop(columns=['gender','fever','cough','city']).values\n\nX_train_age.shape","249b7923":"X_train_transformed = np.concatenate((X_train_age,X_train_fever,X_train_gender_city,X_train_cough),axis=1)\n# also the test data\nX_test_transformed = np.concatenate((X_test_age,X_test_fever,X_test_gender_city,X_test_cough),axis=1)\n\nX_train_transformed.shape","a0eea2c4":"from sklearn.compose import ColumnTransformer","0b2ba060":"transformer = ColumnTransformer(transformers=[\n    ('tnf1',SimpleImputer(),['fever']),\n    ('tnf2',OrdinalEncoder(categories=[['Mild','Strong']]),['cough']),\n    ('tnf3',OneHotEncoder(sparse=False,drop='first'),['gender','city'])\n],remainder='passthrough')","8d540311":"transformer.fit_transform(X_train).shape","2fb4f000":"transformer.transform(X_test).shape","14a0e15a":"## Mentos Zindagi","1324bbff":"## 1. Aam Zindagi"}}