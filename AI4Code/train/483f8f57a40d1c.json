{"cell_type":{"d430f2a7":"code","b3218fda":"code","207e83fd":"code","51888a03":"code","fbdfb951":"code","5592b6cc":"code","058b00b0":"code","381723b9":"code","337a2ef5":"code","f4a4b2bf":"code","8d54e46b":"code","ce26f33d":"code","9a46de79":"code","e4e4714f":"code","4cd30594":"code","cf56730c":"code","f4d7b8dd":"code","51b7f682":"code","01f6b910":"code","4aa88dc2":"code","301ab89a":"code","ef78682d":"code","28692d6c":"code","fc213b87":"code","19e07374":"code","28e3cdfb":"code","fd26fa6b":"code","9244887c":"code","5fa7f4c3":"code","32c5585b":"code","f18f4ef8":"code","eab70744":"code","15a2f518":"code","c6770286":"code","3b2440aa":"code","d56fb7a3":"code","ffb5a559":"code","eb3c637f":"code","9744c983":"markdown","4fc4db0d":"markdown","1677f583":"markdown","aec3ec3f":"markdown","c8b979f6":"markdown","05eef08b":"markdown"},"source":{"d430f2a7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b3218fda":"# read the data\nadvertising = pd.read_csv(\"..\/input\/advertising.csv\")\nadvertising.head()","207e83fd":"advertising.shape","51888a03":"advertising.info()","fbdfb951":"advertising.describe()","5592b6cc":"# visualise the data\nsns.regplot( x='TV', y='Sales',data=advertising)","058b00b0":"sns.regplot( x='Radio', y='Sales',data=advertising)","381723b9":"sns.regplot( x='Newspaper', y='Sales',data=advertising)","337a2ef5":"sns.pairplot( data=advertising, x_vars=['Newspaper','TV','Radio'],y_vars=['Sales'])","f4a4b2bf":"advertising.corr()","8d54e46b":"sns.heatmap(advertising.corr(), annot=True)","ce26f33d":"import statsmodels\nimport statsmodels.api as sm\nimport sklearn \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.linear_model import LinearRegression","9a46de79":"# create x and y\nX = advertising['TV']\ny = advertising['Sales']","e4e4714f":"# train and test split\nX_train ,X_test, y_train, y_test = train_test_split(X, y, train_size=0.70, random_state=100)","4cd30594":"X_train","cf56730c":"# training the model \nX_train_sm = sm.add_constant(X_train)\nX_train_sm.head()","f4d7b8dd":"# y = c + m1. X1\n# y = c.const + m1.TV","51b7f682":"# fitting the model\nlr = sm.OLS(y_train, X_train_sm)#ols: ordinary least square\nlr_model = lr.fit()\nlr_model.params","01f6b910":"# Sales = 6.94 + 0.05.TV\nlr_model.summary()","4aa88dc2":"#1. coef and p-value is very low\n#2. R-squared is 81.6$, very high which is good \n#3. F-statistic is low => the fit is not by chance ","301ab89a":"y_train_pred = lr_model.predict(X_train_sm)","ef78682d":"plt.scatter(X_train, y_train)\nplt.plot(X_train, 6.948 + 0.054*X_train,'r')\nplt.show()","28692d6c":"# error = f(y_train, y_train_pred)","fc213b87":"res = y_train-y_train_pred","19e07374":"# plot the residual\nplt.figure()\nsns.distplot(res)\nplt.title(\"Residual Plot\")","28e3cdfb":"# look for patterns in residual(we should not be able to identify)\nplt.scatter(X_train, res)\nplt.show()","fd26fa6b":"# predictions on the test set (y_test_pred)\n#evaluate the model, r-squared on the test","9244887c":"# add a constant\nX_test_sm = sm.add_constant(X_test)\n# pred on test\ny_test_pred = lr_model.predict(X_test_sm)","5fa7f4c3":"#evaluate the model, r-squared on the test\n# r-squared \nr2 = r2_score(y_true = y_test, y_pred =y_test_pred)\nr2","32c5585b":"# r2 on train\nr2_score(y_true = y_train, y_pred = y_train_pred)","f18f4ef8":"# mean squared error \nmean_squared_error( y_true = y_test, y_pred= y_test_pred)","eab70744":"plt.scatter(X_test, y_test)\nplt.plot(X_test , y_test_pred ,'r')\nplt.show()","15a2f518":"# train test split\nX_train ,X_test, y_train, y_test = train_test_split(X, y, train_size=0.70, random_state=100)","c6770286":"#reshape to (40,1)\nX_train_lm=X_train.values.reshape(-1,1)\nX_test_lm=X_test.values.reshape(-1,1)\n#(140, )\n#(140,1)","3b2440aa":"# steps in sklearn model building\n\n# 1. Create an object of linear regression\nlm = LinearRegression()\n# 2. Fit the model \nlm.fit(X_train_lm,y_train)","d56fb7a3":"# 3. see the params, make predicitions(train,test)\nprint(lm.coef_)\nprint(lm.intercept_)","ffb5a559":"#make predictions\ny_train_pred = lm.predict(X_train_lm)\ny_test_pred = lm.predict(X_test_lm)","eb3c637f":"# 4.evaluate (r2,etc.)\nprint(r2_score(y_true=y_train, y_pred=y_train_pred))\nprint(r2_score(y_true=y_test, y_pred=y_test_pred))","9744c983":"###Step 2: Performing Simple Linear Regression\n**Equation of linear regression\n**y=c+m1x1+m2x2+...+mnxny=c+m1x1+m2x2+...+mnxn \nyy  is the response\ncc  is the intercept\nm1m1  is the coefficient for the first feature\nmnmn  is the coefficient for the nth feature\nIn our case:\n\ny=c+m1\u00d7TVy=c+m1\u00d7TV \nThe  mm  values are called the model coefficients or model parameters.\n\n\n\n\n\n\nGeneric Steps in model building using statsmodels\nWe first assign the feature variable, TV, in this case, to the variable X and the response variable, Sales, to the variable y.","4fc4db0d":"### Step 4: Predictions and Evaluation on the Test Set","1677f583":"### Steps:\ncreate x and y\ncreate train and test sets (70-30,80-20)\nTrain your model on the training set\nEvaluate the model (training set)","aec3ec3f":"# Simple Linear Regression\nStpes\n1. Reading and understanding the Data\n2. Training the model\n3. Residual analysis\n4. Predictng and evaluating ","c8b979f6":"### Step 3: Residual Analysis","05eef08b":"### Linear Regression using sklearn"}}