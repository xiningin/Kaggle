{"cell_type":{"29e07e01":"code","ef1c9ebc":"code","13f9e933":"code","7c4216e3":"code","8baff601":"markdown"},"source":{"29e07e01":"import numpy as np \nimport json \nimport cv2\nimport os\nfrom matplotlib import pyplot as plt\n%matplotlib inline","ef1c9ebc":"DATA_DIR = '..\/input\/car-plates-ocr\/data\/'\nNUM_SAMPLES = 5\n\ntrain_marks = json.load(open(os.path.join(DATA_DIR, 'train.json')))\nsample_marks = np.random.choice(train_marks, size=NUM_SAMPLES)","13f9e933":"def order_points(pts):\n    \n    rect = np.zeros((4, 2), dtype = \"float32\")\n    \n    s = pts.sum(axis = 1)\n    rect[0] = pts[np.argmin(s)]\n    rect[2] = pts[np.argmax(s)]\n    \n    diff = np.diff(pts, axis = 1)\n    rect[1] = pts[np.argmin(diff)]\n    rect[3] = pts[np.argmax(diff)]\n    \n    return rect\n\n\ndef four_point_transform(image, pts):\n    \n    rect = order_points(pts)\n    \n    tl, tr, br, bl = pts\n    \n    width_1 = np.sqrt(((br[0] - bl[0]) ** 2) + ((br[1] - bl[1]) ** 2))\n    width_2 = np.sqrt(((tr[0] - tl[0]) ** 2) + ((tr[1] - tl[1]) ** 2))\n    max_width = max(int(width_1), int(width_2))\n    \n    height_1 = np.sqrt(((tr[0] - br[0]) ** 2) + ((tr[1] - br[1]) ** 2))\n    height_2 = np.sqrt(((tl[0] - bl[0]) ** 2) + ((tl[1] - bl[1]) ** 2))\n    max_height = max(int(height_1), int(height_2))\n    \n    dst = np.array([\n        [0, 0],\n        [max_width, 0],\n        [max_width, max_height],\n        [0, max_height]], dtype = \"float32\")\n    \n    M = cv2.getPerspectiveTransform(rect, dst)\n    warped = cv2.warpPerspective(image, M, (max_width, max_height))\n    return warped","7c4216e3":"plt.figure(figsize=(25, 16))\nfor i, mark in enumerate(sample_marks):\n    box = np.array(mark['nums'][0]['box'])\n    image = cv2.imread(os.path.join(DATA_DIR, mark['file']))\n    image = image[..., ::-1]\n    \n    \n    plt.subplot(2, NUM_SAMPLES, i + 1)\n    plt.imshow(image)\n    plt.subplot(2, NUM_SAMPLES, i + NUM_SAMPLES + 1)\n    plt.imshow(four_point_transform(image, box))\n\nplt.tight_layout()\nplt.show()","8baff601":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0435\u0435 \u0441 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u043e\u0432 *getPerspectiveTransform* \u0438 *warpPerspective* \u0432 *\u0441v2*\n\nsrc: https:\/\/www.pyimagesearch.com\/2014\/08\/25\/4-point-opencv-getperspective-transform-example\/"}}