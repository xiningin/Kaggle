{"cell_type":{"f9b742f8":"code","0c27bc64":"code","a8a79433":"code","6a69b296":"code","1f66d34e":"code","e6210a0d":"code","fa37fac7":"code","f58659e6":"code","39ec8088":"code","ec640c56":"code","15dbd24d":"code","a62706a1":"code","59882d88":"code","82281acf":"code","ecde2abd":"code","23600966":"code","69a02032":"code","c105b203":"code","b9bb04ce":"code","d6c581c9":"code","6738e774":"code","1b553e26":"code","55b699d9":"code","d01b392e":"code","6f844767":"code","b9c4ea4e":"code","2a4a5812":"code","22266ab8":"code","816d0628":"code","bcc3cceb":"code","3680fa31":"code","bd645f1b":"code","86316283":"code","0eea67bc":"code","d33342e3":"code","88ecea16":"markdown","ee03e81f":"markdown","d899999c":"markdown","b5e53df0":"markdown","33cc69b0":"markdown","2e3f8a4a":"markdown"},"source":{"f9b742f8":"#Import Libraries\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c27bc64":"import pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\"))","a8a79433":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n","6a69b296":"train.head(5)","1f66d34e":"train.columns","e6210a0d":"train.info()","fa37fac7":"train['SalePrice'].describe()","f58659e6":"sns.distplot(train['SalePrice']);","39ec8088":"var = 'GrLivArea'\ndata = pd.concat([train['SalePrice'], train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","ec640c56":"var = 'TotalBsmtSF'\ndata = pd.concat([train['SalePrice'], train[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","15dbd24d":"train_x=train.iloc[:,:-1].values\n","a62706a1":"train_y=train.iloc[:,-1].values\n","59882d88":"train.iloc[:,-1].values","82281acf":"count=train.nunique()\n#print(count)\nli=[x for x,y in enumerate(count) if y<3]\nprint(li)\npd.set_option('display.max_rows',None)\n#print(train[train.columns[li]])\ntrain[train.columns[5]].value_counts()\n","ecde2abd":"#pd.set_option('display.max_rows',None)\ntrain.head()","23600966":"train.shape","69a02032":"#Na \nna = train.isna().sum()\/len(train)","c105b203":"na[na>.50]","b9bb04ce":"train = train.drop(columns=['PoolQC','Alley','Fence','MiscFeature'])\ntest = test.drop(columns=['PoolQC','Alley','Fence','MiscFeature'])","d6c581c9":"train.info()","6738e774":"object_ = train.select_dtypes(include='object').columns","1b553e26":"object_","55b699d9":"for i in object_:\n    \n    train[i] = train[i].astype(pd.StringDtype())\n    test[i]= test[i].astype(pd.StringDtype())\n    test[i] = test[i].fillna('nan_data')\n    train[i] = train[i].fillna('nan_data')\ntrain.dtypes\n","d01b392e":"from sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()\nfor i in object_:\n    train[i]= label_encoder.fit_transform(train[i])\n    test[i]= label_encoder.fit_transform(test[i])\n    ","6f844767":"from xgboost import XGBRegressor\nmodel = XGBRegressor()","b9c4ea4e":"X = train.drop(columns=['SalePrice'])\ny = train['SalePrice']","2a4a5812":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=70)\nmodel.fit(X_train,y_train)\nmodel.score(X_train,y_train)","22266ab8":"model.score(X_test,y_test)","816d0628":"y_pred = model.predict(X_test)","bcc3cceb":"from sklearn.metrics import mean_squared_log_error\nnp.sqrt(mean_squared_log_error(y_test, y_pred))","3680fa31":"model.fit(X,y,verbose=False)\nmodel.score(X,y)","bd645f1b":"print(model.score(X_train,y_train))","86316283":"len(y_pred)","0eea67bc":"ypred = model.predict(test)","d33342e3":"Final = pd.DataFrame({'id':test['Id'],'SalePrice':ypred})\nFinal.to_csv('submission.csv',index=False)","88ecea16":"### Taking Object Data types and converting in string Type","ee03e81f":"## Feature engineering","d899999c":"## Data Preprocessing","b5e53df0":"### Data is Positively skewed","33cc69b0":"### Removing the columns having single value in the whole column","2e3f8a4a":"## Import Train and Test Data"}}