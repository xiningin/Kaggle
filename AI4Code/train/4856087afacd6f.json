{"cell_type":{"725a327f":"code","d22c403a":"code","7fab3037":"code","8755c20f":"code","cf3715d7":"code","5be839ea":"code","41e4c48a":"code","9cbd4572":"code","c2d734ca":"code","6d0a987f":"code","582c768e":"code","c9e17479":"code","43186923":"markdown","3f4cff25":"markdown"},"source":{"725a327f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d22c403a":"# Imports\nfrom mlxtend.preprocessing import minmax_scaling\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score , mean_squared_error\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7fab3037":"# Read data\ndataframe = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv' , engine = 'c')\ndataframe","8755c20f":"# Scale the column 'age'\ndataframe['scaled_age'] = minmax_scaling( dataframe , columns = 'age' )\ndataframe","cf3715d7":"# Split Train and Test\nfeatures = dataframe.iloc[ : , :-2]\ntarget = dataframe.iloc[ : , -2]\nx_train, x_test, y_train, y_test = train_test_split(features , target , test_size=0.2, random_state=0)","5be839ea":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","41e4c48a":"knn_model = KNeighborsClassifier(n_neighbors=2)\nknn_model.fit(x_train , y_train)\ny_pred = knn_model.predict(x_test)","9cbd4572":"# Accuracy\naccuracy_score(y_test, y_pred)","c2d734ca":"# MSE\nmean_squared_error(y_test, y_pred)","6d0a987f":"# Logistic Regression Model\nlog_regr_model = LogisticRegression(random_state=0)\nlog_regr_model.fit(x_train , y_train)\ny_pred = log_regr_model.predict(x_test)","582c768e":"# Accuracy\naccuracy_score(y_test, y_pred)","c9e17479":"# MSE\nmean_squared_error(y_test, y_pred)","43186923":"### K-nearest neighbour model","3f4cff25":"### Logistic regression model"}}