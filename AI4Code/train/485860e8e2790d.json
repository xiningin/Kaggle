{"cell_type":{"53e6f513":"code","60d67120":"code","6aedde33":"code","b0e2b4fe":"code","e211e425":"code","056bc539":"code","8ce7463f":"code","e164d4ff":"code","6267f63a":"code","0cb274c1":"code","6c7e06fa":"code","d033ca4a":"code","552f9aad":"code","82970647":"code","326a3d34":"code","7255cce2":"code","90aba76c":"code","d666238f":"code","1659534c":"code","99e1e2fc":"code","4e31562c":"code","4640822d":"code","f81540ac":"code","69d2c22e":"code","28fe3158":"markdown","849eaa31":"markdown","43d7196b":"markdown","91627e27":"markdown","0eb9a326":"markdown","e87f943e":"markdown","0fe04c77":"markdown","50927728":"markdown","7ec19a98":"markdown","c60bdbab":"markdown","c405db9e":"markdown","c5233dd4":"markdown","3f02d4a1":"markdown","81f04cbc":"markdown","b7a2ac25":"markdown","94bee958":"markdown","1bb055f0":"markdown","d14cd040":"markdown","397c3227":"markdown","014a5592":"markdown","6e403b97":"markdown"},"source":{"53e6f513":"# Import the necessary libraries\n\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport pycountry\npy.init_notebook_mode(connected=True)\n\n# Graphics in retina format \n%config InlineBackend.figure_format = 'retina' \n\n# Increase the default plot size and set the color scheme\nplt.rcParams['figure.figsize'] = 8, 5\n\n# Disable warnings in Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')","60d67120":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6aedde33":"df = pd.read_csv('\/kaggle\/input\/100-mostfollowed-twitter-accounts-as-of-dec2019\/Most_followed_Twitter_acounts_2019.csv')\ndf.head()","b0e2b4fe":"df.info()","e211e425":"df['Followers'] = df['Followers'].str.replace(',', '')\ndf['Following'] = df['Following'].str.replace(',', '')\ndf['Tweets'] = df['Tweets'].str.replace(',', '')\n\ndf[['Followers','Following','Tweets']] = df[['Followers','Following','Tweets']].astype(int)","056bc539":"# Convert all the names in the same case\ndf['Name'] = df['Name'].str.title()\ndf.Name.iloc[:3]","8ce7463f":"x1 = df['Followers']\/1000000\nx1 = x1.round(2)\n\ntrace = go.Bar(x = df['Followers'][:15],\n               y = df['Name'][:15],\n               orientation='h',\n               marker = dict(color='#00acee',line=dict(color='black')),\n               text=x1,\n               textposition='auto',\n               hovertemplate = \"<br>Followers: %{x}\")\n\nlayout = go.Layout(\n                   title='Most followed accounts on Twitter worldwide as of December,2019',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Number of Followers in Millions'),\n                   yaxis=dict(autorange=\"reversed\"),\n                   showlegend=False)\n\nfig = go.Figure(data = [trace], layout = layout)\n\nfig.update_layout(width=700,height=500)\nfig.show()","e164d4ff":"df_following = df.sort_values('Following',ascending=False)\nfollowing = (df_following['Following']\/1000).round(2)\n\ntrace = go.Bar(x = df_following['Following'][:15],\n               y = df_following['Name'][:15],\n               orientation='h',\n               marker = dict(color='#00acee',line=dict(color='black',width=0)),\n               text=following,\n               textposition='auto',\n               hovertemplate = \"<br>Following: %{x}\")\n\nlayout = go.Layout(\n                   #title='People who follow the most',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Number of people following in thousands'),\n                   yaxis=dict(autorange=\"reversed\"),\n                   showlegend=False)\n\nfig = go.Figure(data = [trace], layout = layout)\n\nfig.update_layout(width=700,height=500)\nfig.show()","6267f63a":"df_following = df.sort_values('Following',ascending=False)\nx = df_following['Following'][-15:]\ntrace = go.Bar(x = df_following['Following'][-15:],\n               y = df_following['Name'][-15:],\n               orientation='h',\n               marker = dict(color='#00acee',line=dict(color='black',width=0)),\n               text=x,\n               textposition='auto',\n               hovertemplate = \"<br>Following: %{x}\")\n\nlayout = go.Layout(\n                   #title='People who follow the least',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Number of people following in thousands'),\n                   yaxis=dict(autorange=\"reversed\"),\n                   showlegend=False)\n\nfig = go.Figure(data = [trace], layout = layout)\n\nfig.update_layout(width=700,height=500)\nfig.show()","0cb274c1":"counts = df['Nationality\/headquarters'].value_counts()\nlabels = counts.index\nvalues = counts.values\n\npie = go.Pie(labels=labels, values=values,pull=[0.05, 0], marker=dict(line=dict(color='#000000', width=1)))\nlayout = go.Layout(title='Region wise Distribution')\n\nfig = go.Figure(data=[pie], layout=layout)\npy.iplot(fig)","6c7e06fa":"df['Industry'].replace({'music':'Music',\n                       'news':'News',\n                       'sports':'Sports'},inplace=True)\n\n\n\n\ncounts = df['Industry'].value_counts()\ny= counts.values\ntrace = go.Bar(x= counts.index,\n               y= counts.values,\n               marker={'color': y,'colorscale':'Picnic'})\n\nlayout = go.Layout(\n                   #title='Most followed accounts on Twitter worldwide as of December,2019',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Industry'),\n                   yaxis=dict(title='Count'),\n                   showlegend=False)\n\nfig = go.Figure(data = [trace], layout = layout)\n\nfig.update_layout(width=700,height=500)\nfig.show()","d033ca4a":"df_tweets = df.sort_values('Tweets',ascending=False)\ntweets = df_tweets['Tweets'][0:10]\n\ntrace = go.Bar(x = df_tweets['Tweets'][:10],\n               y = df_tweets['Name'][:10],\n               orientation='h',\n               marker = dict(color='#00acee',line=dict(color='black',width=0)),\n               text=tweets,\n               textposition='auto',\n               hovertemplate = \"<br>Tweets: %{x}\")\n\nlayout = go.Layout(\n                   #title='Most active',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Number of tweets'),\n                   yaxis=dict(autorange=\"reversed\"),\n                   showlegend=False)\n\nfig = go.Figure(data = [trace], layout = layout)\n\nfig.update_layout(width=700,height=500)\nfig.show()","552f9aad":"# A generalised barplot and Treemap function\ndef barplot(data):\n\n    x1 = data['Followers']\/1000000\n    x1 = x1.round(2)\n\n    trace = go.Bar(x = data['Followers'][:15],\n               y = data['Name'][:15],\n               orientation='h',\n               marker = dict(color='#00acee',line=dict(color='black',width=0)),\n               text=x1,\n               textposition='auto',\n               hovertemplate = \"<br>Followers: %{x}\")\n\n    layout = go.Layout(\n                   #title='Most followed Political accounts on Twitter worldwide as of December,2019',\n                   width=800, \n                   height=500, \n                   xaxis= dict(title='Number of Followers in Millions'),\n                   yaxis=dict(autorange=\"reversed\"),\n                   showlegend=False)\n\n    fig = go.Figure(data = [trace], layout = layout)\n\n    fig.update_layout(width=700,height=500)\n    fig.show()","82970647":"def treemap(data,title):\n    import squarify \n    fig = plt.gcf()\n    ax = fig.add_subplot()\n    fig.set_size_inches(16, 4.5)\n    squarify.plot(sizes=data['Activity'].value_counts().values, label=data['Activity'].value_counts().index, \n              alpha=0.5,\n              text_kwargs={'fontsize':10,'weight':'bold'},\n              color=[\"red\",\"green\",\"blue\", \"grey\",\"orange\",\"pink\",\"blue\",\"cyan\"])\n    plt.axis('off')\n    plt.title(title,fontsize=20)\n    plt.show()","326a3d34":"music = df[df['Industry'] == 'Music']\nmusic['Activity'].replace({'singer-songwriter':'Singer and Songwriter',\n                            'Singer and songwriter':'Singer and Songwriter'},inplace=True)\n\n\nbarplot(music)\ntreemap(music,'Various Categories in Music')","7255cce2":"band = df[df['Activity'] == 'Band']\nbarplot(band)","90aba76c":"politics = df[df['Industry'] == 'Politics']\n\nbarplot(politics)","d666238f":"sport = df[df['Industry'] == 'Sports']\nbarplot(sport)","1659534c":"sport['Activity'].replace({'Football league':'Football League'},inplace=True)\ntreemap(sport,'Various Categories in Sports')\n","99e1e2fc":"films= df[df['Industry'] == 'Films\/Entertainment']\nfilms['Activity'].replace({'Actor ':'Actor'},inplace=True)\nbarplot(films)\ntreemap(films,'Various Categories in Films\/Entertainment')","4e31562c":"tech = df[df['Industry'] =='Technology ']\nbarplot(tech)\n","4640822d":"USA=df[df['Nationality\/headquarters']=='U.S.A']\nbarplot(USA)","f81540ac":"India=df[df['Nationality\/headquarters']=='India']\nbarplot(India)","69d2c22e":"UK=df[df['Nationality\/headquarters']=='U.K']\nbarplot(UK)","28fe3158":"## 10. Most Popular in U.S.A\n","849eaa31":"## 7. Most followed Sportspersons\/Sports Club","43d7196b":"#        Analysis of the 100 most followed personalities on Twitter in 2019\nLast updated on 26th Dec,2019\n\n![](https:\/\/cdn-images-1.medium.com\/max\/1200\/1*rrNJ_a566_xi5zsMJlCNtA.png)\n\n*Created with Python's [stylecloud](https:\/\/github.com\/minimaxir\/stylecloud) library*\n\nTwitter, founded in 2006 is an online social networking and microblogging service that allows users to post text-based status updates and messages of up to 280 characters in length. These messages are known as tweets. As of the second quarter of 2019, Twitter had 139 million monetizable daily active users (mDAU) worldwide[[source](https:\/\/www.statista.com\/statistics\/273172\/twitter-accounts-with-the-most-followers-worldwide\/)]","91627e27":"### Reading the dataset","0eb9a326":"## 6. Most followed Politicians\/Offcial Political accounts","e87f943e":"### 1.1 Out of these, who follow the most people as of December 2019","0fe04c77":"## 8. Most followed Films\/Entertainment industry personalities","50927728":"## 2. Countries of most popular Twitter personalities","7ec19a98":"## 12. Most Popular in U.K","c60bdbab":"# Exploratory Data Analysis\n\n## 1. Most followed personalities in 2019\n\n","c405db9e":"Since the numerical column have been assigned a string datatype, let's first convert them to `int`.Also, it is a good idea to get rid of the punctuations.","c5233dd4":"### 1.2 Out of these, who follow the least number of people as of December 2019","3f02d4a1":"## 5. Most followed Musicians","81f04cbc":"## 4. People who tweeted the most(out of the Top 100 most followed)\n","b7a2ac25":"## Dataset Preparation","94bee958":"## 11. Most Popular in India","1bb055f0":"### 5.1 Most popular Bands","d14cd040":"## 3. Industries of most popular Twitter personalities","397c3227":"Let's have a quick recap of our findings from the above analysis.\n\n# People who ruled Twitter in 2019 : A Quick Recap\n\n* ## Most followed people Globally\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*CeKkWNZc6ImdD5rXwsJPgg.png)\n\n\n* ## Most followed in USA\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*CeKkWNZc6ImdD5rXwsJPgg.png)\n\n\n* ## Most followed in India\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*u0m8NUQiipG2PQMnqXiajA.png)\n\n\n* ## Most followed in U.K\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*bVoJ4q0WnN2X0_5AkdQfxg.png)\n\n\n* ## Most followed Politicians\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*s_MNZxKaZ5X7qAPJYNASvA.png)\n\n\n* ## Most followed Sports Clubs\/Associations\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*Vz90pW2ofw1DpFRWtffO0A.png)\n\n\n* ## Most followed Musicians\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*Kz7bbY2I9SgGX-J8JqA3lQ.png)\n\n* ## Most followed Bands\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*UUowA9X2fZRchXR7iR04eQ.png)\n\n* ## Most followed People in Entertainment Industry\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*20Qez05xEDw0BRC2ztoQBA.png)\n\n* ## Most followed Sport Stars\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*RuynKvS1bnvL7eutkgtELw.png)\n\n\n\n","014a5592":"Also, let's convert all the names in the same case. This is for the sake of uniformity","6e403b97":"## 9. Most followed Technology companies"}}