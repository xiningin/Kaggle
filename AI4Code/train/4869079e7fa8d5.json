{"cell_type":{"5a1e4369":"code","bed14169":"code","3b633804":"code","3e290cc3":"code","a8b0fa5d":"code","f6b05132":"code","ae46b459":"code","e054ac0a":"code","f331449a":"code","8a3affca":"code","3d6cebb7":"code","d49d2bd0":"code","ca3221fe":"code","16634332":"code","c4484d9f":"code","dff1afcd":"code","78414869":"code","00ab4f19":"code","9d4ca50d":"code","cc7d9245":"markdown","86e42e72":"markdown","d229c0e6":"markdown","5334f8e6":"markdown","16859eb0":"markdown","a26b9392":"markdown","62f63914":"markdown","8f27fe44":"markdown","7d6ae22d":"markdown","5421a77c":"markdown"},"source":{"5a1e4369":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\n%matplotlib inline","bed14169":"# Read the files into data frames\ntrain_df = pd.read_csv(\"\/kaggle\/\/input\/\/tabular-playground-series-may-2021\/\/train.csv\")\ntest_df = pd.read_csv(\"\/\/kaggle\/input\/tabular-playground-series-may-2021\/test.csv\")","3b633804":"train_df.head()","3e290cc3":"test_df.head()","a8b0fa5d":"train_df.info()","f6b05132":"train_df['target'].value_counts()","ae46b459":"fig = plt.figure(figsize=(15,5))\ntrain_df['target'].value_counts(normalize=True).plot(kind='bar')\nplt.xlabel(\"Class_NO\") \nplt.ylabel(\"Count\") \nplt.title(\"target Column Distribution\") \nplt.show()\n","e054ac0a":"train_df.duplicated().sum()","f331449a":"\ncorr = train_df.corr()\ncorr.style.background_gradient(cmap='coolwarm').set_precision(2)","8a3affca":"train_df.describe()","3d6cebb7":"from sklearn.model_selection import train_test_split\n# Remove id, target columns \nX = train_df.drop([\"id\", \"target\"], axis = 'columns', inplace = False).values\ny = train_df['target'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.30, random_state=85)\n#Making testdf data as an array of values\ntest_submit = test_df.drop(\"id\", axis=1).values","d49d2bd0":"from xgboost import XGBClassifier\nmodel = XGBClassifier(random_state=1, use_label_encoder=True, n_estimators = 90, learning_rate = 0.1)\nmodel.fit(X_train, y_train)","ca3221fe":"### Predicting the x_test data","16634332":"y_pred = model.predict(X_test)","c4484d9f":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred)*100)","dff1afcd":"y_result= model.predict_proba(test_submit)\nprint(y_result)","78414869":"# Sample submission file structure \nsample_df = pd.read_csv(\"\/\/kaggle\/input\/tabular-playground-series-may-2021\/sample_submission.csv\")\nsample_df.head()","00ab4f19":"submission_result = pd.DataFrame(y_result,columns=['Class_1','Class_2','Class_3','Class_4'])\nsubmission_result['id'] = sample_df['id']\nsubmission_result.head()","9d4ca50d":"submission_result.to_csv(\"sample_submission.csv\",index=False)","cc7d9245":"### Giving test_df data for prediction from the model created","86e42e72":"### XG Boot Classifier Model","d229c0e6":"### Exploratory\/ Data Cleaning Steps before ML","5334f8e6":"### Statistics of the features and dataframe","16859eb0":"### Accuracy of the model ","a26b9392":"### Splitting the traindf into train and test with sklearn\u00b6","62f63914":"## Tabular Playground Data - Classification ","8f27fe44":"### Polt to see how the target column is distributed ","7d6ae22d":"## Any corelation between features - Corr plot","5421a77c":"### Data Details and Notes \n- How many Rows and columns -- 50 Columns and 100000 Rows\n- How many classes - 4 Classes\n- Any Missing Values - No Missing Values\n- Any Duplicated Rows ?? - No Duplicated Rows\n- Any Duplicate Columns ?? - No Duplicated columns\n- Any irreleavent data ??\n- Do we require to normalize the data ?? \n- Any outliers\n- How the data is distributed witin classes - Class2 is at approx 60%, class1 at 10%\n- Are there any low variance columns that can be elimited ? \n- Are there any highly correlating columns, which can be removed in the Model building  -- NO correlation between features\n- What kind of classification can be used here ??. -- XGBoost"}}