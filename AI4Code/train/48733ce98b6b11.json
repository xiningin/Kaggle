{"cell_type":{"df9d7aad":"code","2440d51b":"code","29972d21":"code","6be0a13c":"code","c34e073c":"code","7689b1f7":"code","d4e29d19":"code","1936c0a7":"code","029f060c":"code","ab4e2473":"code","293f88e2":"code","3f2f2cbd":"code","d8b51675":"code","5acce849":"code","c9ab78d6":"code","c68bd4ee":"code","d41fae4f":"code","8296a377":"code","be61df8a":"code","6537a825":"code","34746a6d":"code","ff976cba":"code","d8f53a54":"code","fe6216bb":"code","3b14080d":"code","0d1ef8c3":"code","6c587146":"code","5d54335a":"code","7d4f40e7":"code","f45a197a":"code","e146cf47":"code","dc08f509":"code","545c42a9":"code","74740895":"code","531d0881":"code","dc20a4cb":"code","532b5619":"code","47614f3d":"code","bde49000":"code","d1a01aeb":"code","f0061f21":"code","051aff72":"code","b80d92d5":"code","6b704fc0":"code","3e02a6df":"code","4762c74f":"code","587869c4":"code","02aa0bf1":"code","a93552a5":"code","fed8d72c":"code","0e734355":"code","1bf68a6e":"code","cddcff91":"code","6f463a96":"code","7532634e":"code","ecaa0eb8":"code","9a729bf5":"code","b4584c36":"code","71a3260c":"code","1e2de5e4":"code","e6fe9f92":"code","d47db85b":"code","08e693fb":"code","5910b74e":"code","738e20c4":"code","b7485fdb":"code","b4efbb78":"code","fec9d938":"markdown","1215b4fd":"markdown","53411c53":"markdown","dd79b460":"markdown","f55153dc":"markdown","cfb68736":"markdown","7222eb50":"markdown","d8d1d0a9":"markdown","f9910077":"markdown","1c084cb4":"markdown","bb2b3b14":"markdown","28de26a8":"markdown","5bb2cc82":"markdown","9134cdbb":"markdown","ffbf9c9d":"markdown","e270ec73":"markdown","0a85e10d":"markdown","18d3a6bf":"markdown","575d61ad":"markdown","52933f69":"markdown","75f4a45d":"markdown","5ffe265a":"markdown","61fb9564":"markdown","c0e3cd3b":"markdown","fbd4a70c":"markdown","1285d3ae":"markdown","26c578ee":"markdown","2862ded0":"markdown","1e9fbd20":"markdown","f5f90e60":"markdown","ca751713":"markdown","4f259933":"markdown","7fbd036d":"markdown","dd38e7cd":"markdown","aec2a95b":"markdown","f124aa77":"markdown","47348c34":"markdown","57a2bc76":"markdown","f702dfa2":"markdown","8ca89df2":"markdown","1ceb16db":"markdown","2bff2661":"markdown","f022131d":"markdown","4e0ef787":"markdown","4759eb04":"markdown","8332569c":"markdown","cdbccd71":"markdown","001288fd":"markdown","de8c8d89":"markdown","b3328e27":"markdown"},"source":{"df9d7aad":"import numpy as np \nimport pandas as pd \nimport os\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.rcParams.update({'font.size': 14})\nimport nltk\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud\nfrom sklearn.preprocessing import OneHotEncoder\nimport string\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","2440d51b":"reviews = pd.read_csv('..\/input\/amazon-alexa-reviews\/amazon_alexa.tsv', sep = '\\t')\nreviews.head()","29972d21":"reviews.shape","6be0a13c":"reviews.info()","c34e073c":"reviews['feedback'].unique()","7689b1f7":"print(\"We have a total of {} reviews\".format(reviews.shape[0]))\nprint(\"Feedback = 1 means a positive review and Feedback=0 means a negative review\")","d4e29d19":"reviews.describe()","1936c0a7":"reviews['feedback'].unique()","029f060c":"positive = reviews[reviews['feedback'] == 1]\np = len(positive)\nnegative = reviews[reviews['feedback'] == 0]\nn = len(negative)\nprint('The number of positive reviews is {} and negative reviews is {}'.format(p,n))\n\nrat1 = len(reviews[reviews['rating']==1])\nrat2 = len(reviews[reviews['rating']==2])\nrat3 = len(reviews[reviews['rating']==3])\nrat4 = len(reviews[reviews['rating']==4])\nrat5 = len(reviews[reviews['rating']==5])\nprint('{} ratings = 1'.format(rat1))\nprint('{} ratings = 2'.format(rat2))\nprint('{} ratings = 3'.format(rat3))\nprint('{} ratings = 4'.format(rat4))\nprint('{} ratings = 5'.format(rat5))","ab4e2473":"negative.describe()","293f88e2":"positive.describe()","3f2f2cbd":"fig_dims= (14,5)\nfig, ax = plt.subplots(1,2, figsize=fig_dims)\nsns.countplot(reviews['feedback'], palette='Set1', ax=ax[0])\nsns.countplot(reviews['rating'], palette='rocket', ax=ax[1])\nfig.show()\n","d8b51675":"reviews['length'] = reviews['verified_reviews'].apply(len)\nreviews.head()","5acce849":"sns.set_palette(\"seismic\") \nsns.set_style(\"whitegrid\") \nreviews['length'].plot(bins = 60, kind = 'hist', figsize=(12,8))\nplt.xlabel(\"Length of the Review\", fontsize=14)\nplt.ylabel(\"Frequency\", fontsize=14)\nplt.title(\"Frequency for the lengths of reviews\")","c9ab78d6":"reviews.length.describe()","c68bd4ee":"reviews[reviews[\"feedback\"]==1].describe()","d41fae4f":"reviews[reviews[\"feedback\"]==0].describe()","8296a377":"#Shortest review:\nreviews[reviews ['length']==1]['verified_reviews'].iloc[0]","be61df8a":"#Longest review:\nreviews[reviews ['length']==2851]['verified_reviews'].iloc[0]","6537a825":"reviews.variation.unique()","34746a6d":"reviews_grouped = df_vent.groupby('variation').sum().reset_index().sort_values('rating', ascending=False)\nreviews_grouped.head()","ff976cba":"plt.figure(figsize = (30,16))\nsns.set_style(\"whitegrid\") \n#reviews_df = reviews.sort_values(['rating'])\nsns.barplot(y = 'variation', x = 'rating', data = reviews, orient ='h', palette = 'seismic', ci=None)\nplt.xlabel(\"Rating\", fontsize=18)\nplt.ylabel(\"Variation\", fontsize=18);\n","d8f53a54":"sentences = reviews['verified_reviews'].tolist()\nlen(sentences)","fe6216bb":"sentences_str = ' '.join(sentences)\nsentences_str","3b14080d":"len(sentences_str)","0d1ef8c3":"plt.figure(figsize=(16,14))\nplt.grid(b=None)\nplt.imshow(WordCloud().generate(sentences_str));","6c587146":"positive_list = positive['verified_reviews'].tolist()\npositive_str = ' '.join(positive_list)\nlen(positive_str)","5d54335a":"plt.figure(figsize=(20,20))\nplt.grid(b=None)\nplt.imshow(WordCloud().generate(positive_str));","7d4f40e7":"negative_list = negative['verified_reviews'].tolist()\nnegative_str = ' '.join(negative_list)\nlen(negative_str)","f45a197a":"plt.figure(figsize=(20,20))\nplt.grid(b=None)\nplt.imshow(WordCloud().generate(negative_str));","e146cf47":"reviews.head()","dc08f509":"reviews = reviews.drop(['date', 'rating', 'length'], axis = 1)\nreviews.head()","545c42a9":"reviews['variation'].unique()","74740895":"X_cat = reviews[['variation']]\nonehotencoder = OneHotEncoder()\nX_cat = onehotencoder.fit_transform(X_cat).toarray()","531d0881":" X_cat.shape","dc20a4cb":"#Confirming that X_cat is a numpy array\ntype(X_cat)","532b5619":"X_cat = pd.DataFrame(X_cat)\nX_cat.head()","47614f3d":"reviews.drop(['variation'], axis = 1, inplace = True)\nreviews.head()","bde49000":"reviews = pd.concat([reviews, X_cat], axis = 1)\nreviews","d1a01aeb":"string.punctuation","f0061f21":"test = 'Sometimes while playing a game, you can answer'\ntest_punc_removed = [char for char in test if char not in string.punctuation]\nprint(test_punc_removed)","051aff72":"#Downloading stopwords \nnltk.download('stopwords')","b80d92d5":"print(stopwords.words('english'))","6b704fc0":"def cleaning(message):\n  text = [char for char in message if char not in string.punctuation]\n  text = ''.join(text)\n  text = [word for word in text.split() if word.lower() not in stopwords.words('english')]\n  return text","3e02a6df":"reviews_clean = reviews['verified_reviews'].apply(cleaning)","4762c74f":"print(reviews_clean[100])","587869c4":"print(reviews['verified_reviews'][100])","02aa0bf1":"reviews_clean","a93552a5":"vectorizer = CountVectorizer(analyzer=cleaning)","fed8d72c":"reviews_countvectorizer = vectorizer.fit_transform(reviews['verified_reviews'])","0e734355":"print(vectorizer.get_feature_names())","1bf68a6e":"len(vectorizer.get_feature_names())","cddcff91":"reviews_countvectorizer.shape","6f463a96":"reviews","7532634e":"reviews.drop(['verified_reviews'], axis = 1, inplace=True)","ecaa0eb8":"reviews","9a729bf5":"reviews2 = pd.DataFrame(reviews_countvectorizer.toarray())\nreviews2","b4584c36":"X = reviews2\nX","71a3260c":"y = reviews['feedback']\ny","1e2de5e4":"plt.figure(figsize=(16,14))\nplt.grid(b=None)\nplt.imshow(WordCloud().generate(sentences_str));","e6fe9f92":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","d47db85b":"X_train.shape, X_test.shape","08e693fb":"logistic = LogisticRegression()\nlogistic.fit(X_train, y_train)","5910b74e":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score","738e20c4":"y_pred = logistic.predict(X_test)","b7485fdb":"accuracy_score(y_test, y_pred)","b4efbb78":"print(classification_report(y_test, y_pred))","fec9d938":"There are 55573 characters in the negative reviews list. ","1215b4fd":"Getting to know the dataset and the data characteristics:","53411c53":"There are too many unecessary words we need to clear from the wordclouds, such as 'one', 'use', 'dot'...","dd79b460":"A graphical visualization for the information above: ","f55153dc":"## 2 - Loading the File and simple EDA","cfb68736":"So we have an object with 419105 characters. For now on the work will focus on cleaning this data to keep only the elements necessary for the sentiment analysis of the reviews.","7222eb50":"Which are the stop words in English?","d8d1d0a9":"There are 363531 characters in the positive reviews list. ","f9910077":"Visualizing the unique words extracted by the vectorizer:","1c084cb4":"Let's visualize the shortest and the longest reviews:","bb2b3b14":"Now that we transformed the variation data from cathegorical to numerical, this column can be deleted from the original dataframe:","28de26a8":"### Transforming categorical values into numerical\nMany machine learning algorithms cannot work with categorical data directly, so it is a common practice to transform categorical data into numerical to prepare the model for training. \n\nOne hot encoder is a way of creating categories when a simple 0 for negative and 1 for positive is not possible or easy to implement. ","5bb2cc82":"Starting to prepare the data to create the wordcloud","9134cdbb":"We can confirm that the stopwords and punctuation were removed. ","ffbf9c9d":"Separating the positive and negative reviews into different dataframes:","e270ec73":"Processing the database on the vectorizer:","0a85e10d":"The analysis will focus on the content of the reviews, so, from now on some information are not necessary: length, date and rating. ","18d3a6bf":"### Wordcloud only for the negative reviews:","575d61ad":"Now joining all reviews into one object , each review separated by a space.","52933f69":"### Cleaning the data","75f4a45d":"Checking if the cleaning process went well by printing a random register in the data:","5ffe265a":"Plotting the frequency distribution of the length of the reviews:","61fb9564":"#### How many characters each review has?\nThe more the characters more words we will have for our sentiment analysis. Longer reviews are, in general, more accurate as the customer explains in detail the rating he is giving. It is therefore important to check how long the reviews are in our dataset. ","c0e3cd3b":"### NLTK to remove stopwords\nNLTK stands for Natural Language Toolkit, which contain many tools to build NLP processes. ","fbd4a70c":"The product variations does not seem to influence the ratings, as none of the categories fall below rating 4. ","1285d3ae":"Transforming the text information into a vector with count vectorizer:","26c578ee":"The reviews are not about the exact same product. There are some variations and these variations are described in the 'variation' column of the dataframe. The plot below shows ","2862ded0":"Creating a dataframe with the data from the vectorizer:","1e9fbd20":"By having a quick look on the wordcloud we can see that words coming from positive reviews are more prevalent. To visualize most common words for each type of review, let's separate the wordcloud for positive reviews and negative reviews. ","f5f90e60":"Visualizing the unique cathegories for the 'variation' column:","ca751713":" Checking the statistics about the data:","4f259933":"Below the strings which are classified as punctuation. They will be removed from the data as they are unecessary for the analysis. ","7fbd036d":"We can conclude from the information above that: \n- Most of the reviews have around 300 characters \n- The shortest review has 1 character and the longest review has 2851 characters\n- On average, reviews are 132 characters long. \n- The length of the review differs, on average, if the review is positive or negative. Positive reviews are, on average, 124 characters long and negative reviews are, on average, 215 characters long. \n- A quick superficial conclusion from that is that people who are unhappy with the product tend to write more on the review. \n","dd38e7cd":"The model is having difficulty in identifying the negative reviews - we can see that from the recall result for class 0: only 35% of the registers are correctly estimated. \nWe must remember that we are dealing with a very unbalanced dataset - most of the reviews are positive reviews. ]\n\nFurther analysis is necessary to improve the analysis and adapt the model to deal with unbalanced data. Some options are listed below:\n- ","aec2a95b":"The initial analysis shows us that: \n- Ratings go from 1 to 5\n- Ratings from 3 to 5 are classified as positive reviews and from 1 to 2 as negative reviews\n- We can see from this evaluation that Amazon Alexa has very good reviews in general, being classified as positive 91,8% (2893 reviews).\n- There is a prevalence of ratings equal to 5 in the reviews. \n- The feedback is classified as 1 for good reviews and 0 for bad reviews.","f124aa77":"### Tokenizing\n\nTokenization means breaking down text content into its parts:\n- Words\n- Terms\n- Symbols\nOr other types of textual elements. \n\nThis process of breaking down the content into smaller parts makes it easy the process of cleaning the data. ","47348c34":"## 5- Training and Evaluating the Model with Logistic Regression","57a2bc76":"Now we can delete the verified reviews column from the original dataframe because it was already processed:","f702dfa2":"## 3- Analysing the text from the reviews","8ca89df2":"Checking the feedback classification:","1ceb16db":"### Removing punctuation ","2bff2661":"We can see that the comma after the word 'game'  was removed. It is shown by a blank space ' '. ","f022131d":"X_cat must be transformed into a pandas dataframe so that it can be joined with the other information:","4e0ef787":"### Wordcloud for the positive reviews:","4759eb04":"# Amazon's Alexa Product Reviews with NLP - A detailed guide\n\nNLP, or natural language processing is a field concerned with the ability to understand, analyze, manipulate and potentially generate human language. \n\nIn the following lines, it will be presented the analysis of Amazon Alexa product reviews using natural language processing techniques. \n\nExamples of the application of NLP in real life are:\n- Auto completing on a google search, for example\n- Auto correcting, when our phones instantly correct what we type \n- Spam filters in our e-mails\n\n\n\n## 1 - Importing the Libraries","8332569c":"Joining the original dataframe with the transformed data:","cdbccd71":"### Applying the functions described to clean the data","001288fd":"## 4- Transforming the data and cleaning","de8c8d89":"Let's see again the statistics for the positive and negative reviews, now with the information of length:","b3328e27":"Just testing with a sentence taken from the reviews:"}}