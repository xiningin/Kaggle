{"cell_type":{"f2abd983":"code","a0d0fa77":"code","749a80bf":"code","4190676a":"code","d7c19d34":"code","2060249f":"code","e3aa5f61":"code","96f7371f":"code","88f2fd6c":"code","16decea7":"markdown","6729dd04":"markdown","8c09f159":"markdown","cadf7bd7":"markdown","fee92e04":"markdown","d4d2017a":"markdown","b1ca8dad":"markdown","47af33ab":"markdown","a5cacff7":"markdown","5e9f4ead":"markdown","c6af9e1e":"markdown","434241cf":"markdown","77e746ef":"markdown","1daa0855":"markdown","deae0b9b":"markdown","696d78e0":"markdown","39662d0a":"markdown"},"source":{"f2abd983":"!pip install -q quick-ml","a0d0fa77":"import tensorflow as tf\nimport quick_ml","749a80bf":"from quick_ml.tfrecords_maker import create_split_tfrecords_data","4190676a":"!wget https:\/\/download.microsoft.com\/download\/3\/E\/1\/3E1C3F21-ECDB-4869-8368-6DEBA77B919F\/kagglecatsanddogs_3367a.zip -O catsdogs.zip\n!unzip -q catsdogs.zip\n!rm catsdogs.zip","d7c19d34":"data_dir = '\/kaggle\/working\/PetImages'\noutfile1name = 'train.tfrecords'\noutput1folder = 'train'\noutfile2name = 'val.tfrecords'\noutput2folder = 'val'\nsplit_size_ratio = 0.8\n\ncreate_split_tfrecords_data(data_dir, outfile1name,output1folder,  outfile2name,output2folder,  split_size_ratio,num_parts1 = 10, num_parts2 = 5,  IMAGE_SIZE = (192,192))","2060249f":"from quick_ml.visualize_and_check_data import check_batch_and_labels","e3aa5f61":"dictionary_labeled = \"{'image' : tf.io.FixedLenFeature([], tf.string),'label' : tf.io.FixedLenFeature([], tf.int64)}\"\nIMAGE_SIZE = \"192,192\"\n\nfrom quick_ml.begin_tpu import get_labeled_tfrecord_format\n\nget_labeled_tfrecord_format(dictionary_labeled, IMAGE_SIZE)","96f7371f":"check_batch_and_labels('\/kaggle\/working\/train\/train_part_3.tfrecords', 9, 3, 3, grid_size=(15, 15))","88f2fd6c":"check_batch_and_labels('\/kaggle\/working\/val\/val_part_3.tfrecords', 9, 3, 3, grid_size=(15, 15))","16decea7":"With the right set of parameters needed by **create_split_tfrecords_data**, you can begin generating your TFRecords Dataset. <br> \n##### To know more about the parameters, please check [here](https:\/\/antoreepjana.wixsite.com\/quick-ml\/making-custom-datasets-tfrecords) at Labeled Data Part B.","6729dd04":"### Imports","8c09f159":"##### Great! We have generated our TFRecords Dataset. <br>\nAfter generating the TFRecords Dataset, we might want to visualize and check the TFRecords Dataset. quick_ml provides an easy solution to quickly check & visualize the TFRecords Dataset created using quick_ml","cadf7bd7":"Get the necessary utility function to perform the labeled dataset creation in splits. <br>\ncreate_split_tfrecords_data() supports this utility. Learn more [here](https:\/\/antoreepjana.wixsite.com\/quick-ml\/making-custom-datasets-tfrecords) at Labeled Data Part B.","fee92e04":"Install the latest version of quick_ml","d4d2017a":"As usual, to read & access TFRecords Dataset (labeled or unlabeled) in quick_ml, the Data Format needs to be defined first. <br>\nThe Dataset definition\/format is provided either in the Dataset's description or in the output cell (if the dataset is just created). <br>\nIn our case, the latter is applicable. If you scroll up, the output of create_split_tfrecords_data() mentions the dictionary_labeled_format. <br>\n#### Run the cell below to define the Labeled TFRecords Data Format.","b1ca8dad":"Visualize the **val_part_3.tfrecords**, **9** units, in a grid of **3**x**3**, figure size of **(15,15)**","47af33ab":"**check_batch_and_labels()** is used to visualize the TFRecords Dataset created using quick_ml. Learn more [here](https:\/\/antoreepjana.wixsite.com\/quick-ml\/visualize-check-data)","a5cacff7":"Make the necessary imports. <br>\nPlease maintain the order of the imports. Tensorflow followed by quick_ml. <br>\nAfter a suceessful import, you'll receive an output stating successful import of Tensorflow & the version of Tensorflow imported.","5e9f4ead":"## Official Website -> [quick-ml](http:\/\/antoreepjana.wixsite.com\/quick-ml)","c6af9e1e":"## Summary -> <br>\nIn this notebook, we'll learn how to create Labeled TFRecords Dataset in multiple parts. This is a standard industry practice where the Dataset is regenerated in TFRecords in multiple parts rather than a single file. <br>\nMulti-parts TFRecords Dataset is easier to manage as size per file gets reduced. <br>\n<br>\n**Note:-** For making of TFRecords Dataset, you don't need TPUs. This processing happens in the CPU.","434241cf":"### Visualize the created tfrecords dataset","77e746ef":"### Installation","1daa0855":"We'll be using Cats & Dogs dataset and transforming it to TFRecords dataset in multi-parts.","deae0b9b":"Visualize the **train_part_3.tfrecords**, **9** units, in a grid of **3**x**3**, figure size of **(15,15)**","696d78e0":"### Gather the Dataset","39662d0a":"### Create the TFRecords Dataset"}}