{"cell_type":{"0156acc0":"code","5617f229":"code","38c3492f":"code","a1461662":"code","1f1040c3":"code","e5c73240":"code","b4c71df5":"code","676282d5":"markdown","05e249ec":"markdown"},"source":{"0156acc0":"import os, warnings\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\n\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport tensorflow_hub as hub\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\nfrom keras.preprocessing import image\nimport keras\nimport glob\n\n# Reproducability\ndef set_seed(seed=31415):\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    os.environ['TF_DETERMINISTIC_OPS'] = '1'\nset_seed()","5617f229":"dir_name='..\/input\/the-oxfordiiit-pet-dataset\/images\/*'\n#not sure what's going on with directory names in Kaggle, but needed the asterik to get it to work with glob\n\npets_files = glob.glob(dir_name) \npets_df = pd.DataFrame(pets_files)\npets_df.columns =['full_path']\npets_df['file_name'] = pets_df['full_path'].str.split('images\/').str[1]\n\n# labels in this dataset are in the file name\npets_df['label'] = pets_df['file_name'].str.rsplit('_',1).str[0]\npets_df.tail()","38c3492f":"%%time\ndatagen = image.ImageDataGenerator(rescale=1\/255., validation_split=0.2)\ntrain_generator = datagen.flow_from_dataframe(dataframe=pets_df, \n                                              directory= '..\/input\/the-oxfordiiit-pet-dataset\/images\/images',\n                                              #again not sure what's up with directories, took awhile to figure out I needed that ending \/images\n                                             x_col='file_name',\n                                             y_col='label',\n                                             target_size=(224,224),\n                                             class_mode='categorical',\n                                             batch_size=100,\n                                             subset='training'\n                                             )\n\nvalidation_generator = datagen.flow_from_dataframe(dataframe=pets_df,\n                                                   directory= '..\/input\/the-oxfordiiit-pet-dataset\/images\/images',\n                                                   x_col='file_name',                                                   \n                                             y_col='label',\n                                             target_size=(224,224),\n                                             class_mode='categorical',\n                                             batch_size=10,\n                                             subset='validation',\n                                             seed=7)\n","a1461662":"mobilenet_v2 =\"https:\/\/tfhub.dev\/google\/tf2-preview\/mobilenet_v2\/classification\/4\"\ninception_v3 = \"https:\/\/tfhub.dev\/google\/imagenet\/inception_v3\/classification\/5\"\nresnset50 = 'https:\/\/tfhub.dev\/google\/imagenet\/resnet_v2_50\/classification\/5'\nclassifier_model = resnset50","1f1040c3":"pretrained_base = hub.KerasLayer(classifier_model, trainable = False) #input_shape=IMAGE_SHAPE+(3,))\nmodel = keras.Sequential([\n    pretrained_base,\n    keras.layers.Flatten(),\n    keras.layers.Dense(6, activation='relu'),\n    keras.layers.Dense(1, activation='sigmoid'), \n])","e5c73240":"lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(\n    initial_learning_rate=1e-2,\n    decay_steps=10000,\n    decay_rate=0.9)\noptimizer = tf.keras.optimizers.SGD(learning_rate=lr_schedule)\n#optimizer = tf.keras.optimizers.Adam(epsilon=0.01)\nmodel.compile(\n    optimizer=optimizer,\n    loss = 'categorical_crossentropy',\n    metrics=['accuracy'],\n)\n#model.save()","b4c71df5":"history = model.fit(\n    train_generator,\n    validation_data= validation_generator,\n    epochs=3,\n)","676282d5":"# Pretrained base in Keras\nI made this notebook after I went through the [computer vision tutorial](https:\/\/www.kaggle.com\/learn\/computer-vision) and I wanted to apply what I'd learned. I chose the Oxford Pets data set. It's a bit different from the class in that the labels are in the file names, rather than in a directory, so I used the flow_from_dataframe method. I also wanted to get some experience using tensorflow_hub.\n\nAnyway, hope this helps someone","05e249ec":"## **Training and scores**\nThe scores of model didn't move whatsoever after even the first epoch. Models with Inception v3 base seems to be an order of magnituded better than everything else... although 58% isn't great, models from 3 years ago using fast.ai and pytorch were getting around 85%\n\n**Mobile net v2 score:**\n185\/185 [==============================] - 38s 207ms\/step - loss: 0.0000e+00 - accuracy: 0.0517 - val_loss: 0.0000e+00 - val_accuracy: 0.0507\n\n**Inception v3 score**\n185\/185 [==============================] - 40s 217ms\/step - loss: 0.0000e+00 - accuracy: 0.5786 - val_loss: 0.0000e+00 - val_accuracy: 0.5804\n\n**Resnet 50**\n185\/185 [==============================] - 40s 214ms\/step - loss: 0.0000e+00 - accuracy: 0.0451 - val_loss: 0.0000e+00 - val_accuracy: 0.0533\n"}}