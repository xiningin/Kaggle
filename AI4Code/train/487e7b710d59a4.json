{"cell_type":{"22e6f2b2":"code","73b77cd5":"code","13ef2256":"code","5171786d":"code","8b477b08":"code","8cbf5657":"code","7073591a":"code","8b03fbdd":"code","4f70f2e2":"code","e0e41b72":"code","b83465b4":"code","e7dc9bcc":"markdown","7de12e8f":"markdown","6508489e":"markdown","28710fa6":"markdown","a17f36fd":"markdown"},"source":{"22e6f2b2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nimport seaborn as sns","73b77cd5":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","13ef2256":"print('Shapes:')\nprint(train.shape)\nprint(test.shape)\n\nprint('\\nIDs \u00fanicos:')\nprint(train.ID.nunique())\nprint(test.ID.nunique())\n\nprint('\\nColunas com nulos:')\nprint((train.isnull().sum()!=0).sum())","5171786d":"train.TARGET.value_counts()","8b477b08":"# Features de vari\u00e2ncia nula\nto_drop = train.columns[train.std()==0]\ntrain.drop(to_drop, axis=1, inplace=True)\ntest.drop(to_drop, axis=1, inplace=True)\n\nprint('dropped: ' + str(len(to_drop)))\nprint(train.shape)\nprint(test.shape)","8cbf5657":"# colunas duplicadas\nto_drop = []\nn_cols = len(train.drop(['TARGET'],axis=1).columns)\nfor i in range(n_cols):\n    v1 = train.iloc[i].values\n    for j in range(i+1,n_cols):\n        v2 = train.iloc[j].values\n        if np.all(v1 == v2):\n            to_drop.append(train.columns[j])\n\ntrain.drop(to_drop, axis=1, inplace=True)\ntest.drop(to_drop, axis=1, inplace=True)\n\nprint('dropped: ' + str(len(to_drop)))\nprint(train.shape)\nprint(test.shape)","7073591a":"plt.figure(figsize=(11,9))\nsns.heatmap(train.corr(),cmap=\"YlGnBu\");","8b03fbdd":"X = train.drop(['TARGET','ID'],axis=1)\ny = train['TARGET']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y)\n\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)\n\nX = train.drop(['TARGET','ID'],axis=1)\ny = train.TARGET\nX_train, X_test, y_train, y_test = train_test_split(X,y)","4f70f2e2":"clf = xgb.XGBClassifier(max_depth = 5, n_estimators=1000, learning_rate=0.2, nthread=3, subsample=1.0,\n                        colsample_bytree=0.5, min_child_weight=3, reg_alpha=0.03, eed=1301)\n\nclf.fit(X_train, y_train, early_stopping_rounds=50, eval_metric=\"auc\", eval_set=[(X_train, y_train), (X_test, y_test)])","e0e41b72":"submission = test[['ID']]\nsubmission['TARGET'] = clf.predict_proba(test.drop(['ID'],axis=1), ntree_limit=clf.best_iteration)[:,1]","b83465b4":"submission.to_csv('submission.csv', index=False)\nsubmission.head()","e7dc9bcc":"# Classifica\u00e7\u00e3o","7de12e8f":"## Features","6508489e":"## Datasets","28710fa6":"## Submition","a17f36fd":"## Input"}}