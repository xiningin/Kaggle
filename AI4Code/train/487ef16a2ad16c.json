{"cell_type":{"33fddc69":"code","e5305256":"code","f04a800c":"code","858ad253":"code","c38a41ad":"code","19347433":"code","2cc7a275":"code","8ba38c10":"code","6130e9e4":"code","387a47fd":"code","da528b02":"code","33123f6f":"code","4a536cf0":"code","328ed409":"code","22e7c92b":"code","c6df1ee4":"code","072ad584":"code","35dc5449":"code","753e3e71":"code","77ceade3":"code","485836c5":"code","fa474fe2":"code","db7759bd":"markdown","d32ff7d4":"markdown","de6e7442":"markdown","f48b6082":"markdown","e3017669":"markdown","be57314a":"markdown","159af932":"markdown","8d7fedb9":"markdown","81b56078":"markdown","d2b2c909":"markdown","4ea38a7a":"markdown","cd394199":"markdown","52ac629a":"markdown"},"source":{"33fddc69":"import math\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import DecisionTreeClassifier, plot_tree","e5305256":"def gini(samples):\n    samples_sum = sum(samples)\n    score = 0\n    probas = []\n    for i in samples:\n        proba = i\/samples_sum\n        probas.append(proba)\n    for proba in probas:\n        score+=proba*(1-proba)\n    return score","f04a800c":"def entropy(samples):\n    samples_sum = sum(samples)\n    score = 0\n    probas = []\n    for i in samples:\n        proba = i\/samples_sum\n        probas.append(proba)\n    for proba in probas:\n        if proba>0:\n            score+=(proba*math.log(proba))\n    return -score","858ad253":"samples = [100,80,60]\ngini(samples) , entropy(samples)","c38a41ad":"data = pd.read_csv('..\/input\/titanic\/train.csv')\ndata.head()","19347433":"data=data[['Survived','Pclass','Sex']]\nsex_mapping = {'female':0,\n              'male':1}\ndata['Sex'] = data['Sex'].map(sex_mapping)","2cc7a275":"data.head()","8ba38c10":"c1 = data[data['Pclass']<=1.5]\nprint(c1.shape)\nprint(c1['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Pclass<=1.5 is \",(gini([80,136])))","6130e9e4":"c1 = data[data['Pclass']>1.5]\nprint(c1.shape)\nprint(c1['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Pclass>1.5 is \",(gini([206,469])))","387a47fd":"c2 = data[data['Pclass']<=2.5]\nprint(c2.shape)\nprint(c2['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Pclass<=2.5 is \",(gini([177,223])))","da528b02":"c2 = data[data['Pclass']>2.5]\nprint(c2.shape)\nprint(c2['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Pclass>2.5 is \",(gini([372,119])))","33123f6f":"c3 = data[data['Sex']<=.5]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex<=.5 is \",(gini([81,233])))","4a536cf0":"c3 = data[data['Sex']>.5]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex>.5 is \",(gini([468,109])))","328ed409":"def wa(true_gini_num,false_gini_num,true_num_samples,false_num_samples):\n    return (true_gini_num*true_num_samples + false_gini_num*false_num_samples)\/(true_num_samples+false_num_samples)\n\nprint(\"FINAL Condition 1 GI\",wa(0.466,0.424,216,675))\nprint(\"FINAL Condition 2 GI\",wa(0.49,0.367,400,491))\nprint(\"FINAL Condition 3 GI\",wa(0.382,0.306,314,577))\n","22e7c92b":"c3 = data[(data['Sex']<=.5) & (data['Pclass']<=1.5)]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex<=.5 and Pclass<=1.5 is \",(gini([3,91])))","c6df1ee4":"c3 = data[(data['Sex']<=.5) & (data['Pclass']>1.5)]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex<=.5 and Pclass>1.5 is \",(gini([78,142])))","072ad584":"# calculating the Weighted Average\nwa(0.06,0.45,94,220)","35dc5449":"c3 = data[(data['Sex']<=.5) & (data['Pclass']<=2.5)]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex<=.5 and Pclass<=2.5 is \",(gini([9,161])))","753e3e71":"c3 = data[(data['Sex']<=.5) & (data['Pclass']>2.5)]\nprint(c3.shape)\nprint(c3['Survived'].value_counts())\nprint('*'*60)\n# Calculate Gini Impurity:\nprint(\"Gini Impurity for Sex<=.5 and Pclass>2.5 is \",(gini([72,72])))","77ceade3":"wa(0.1,0.5,170,144)","485836c5":"features = ['Sex','Pclass']\nmodel = DecisionTreeClassifier()\nmodel.fit(data[features],data['Survived'])","fa474fe2":"plt.figure(figsize = (20,15))\nplot_tree(model, feature_names=features)\nplt.show()","db7759bd":"## Choosing the Optimal ROOT Node\n\nWe took 3 conditions to consider our ROOT NODE:\n- pclass <= 1.5\n- pclass <= 2.5\n- Sex <= 0.5\n\n**Condition 1 Gini Impurities:**\n- True : 0.466\n- False : 0.424\n\n**Condition 2 Gini Impurities:**\n- True : 0.49\n- False : 0.367\n\n**Condition 3 Gini Impurities:**\n- True : 0.382\n- False : 0.306\n","d32ff7d4":"## Conclusion\nSince the Weighted Average of Pclass <2.5 is lesser than Pclass <1.5, we choose our next node as Pclass<=2.5","de6e7442":"## Lets create the other Nodes for the Tree keeping SEX as Root Node.\n - Left hand Side Nodes where Sex<=0.5","f48b6082":"### Condition 1:\n- Pclass<=1.5\n","e3017669":"## On a dataset","be57314a":"## Entropy Calculation","159af932":"### Condition 3:\n- Sex<=0.5","8d7fedb9":"## We take the weighted averages of the Gini Impurity for final confirmation on Best GI.","81b56078":"## Lets create 3 conditions and check the GINI Impurity for all of them.\n\n- Pclass<=1.5\n- Pclass<=2.5\n- Sex<=0.5","d2b2c909":"### **Conclusion:**\n\n#### *We can clearly see that the Condition 3 gives us the least Gini Impurity and hence we shall consider Sex as our Root Node.*\n","4ea38a7a":"## Right hand Side nodes when Pclass <=2.5","cd394199":"### Condition 2:\n- Pclass<=2.5","52ac629a":"## Gini Impurity Calculation"}}