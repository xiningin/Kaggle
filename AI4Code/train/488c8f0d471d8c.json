{"cell_type":{"69de4eaa":"code","3c9a1882":"code","130eb522":"code","9f66a5a0":"code","904bd01e":"code","459d1683":"code","865c430d":"code","8c16eb36":"code","3f9aba17":"code","80a6f381":"code","237e4031":"code","dae6595f":"code","5f57e23d":"code","001f39b2":"code","d282f630":"code","2a13b272":"code","a5ad7d27":"code","9ce48b7c":"code","af2d727a":"code","ae026877":"code","d13a9f57":"code","3e3fc397":"code","57c12f84":"code","891e53b5":"code","26812fa7":"code","1d9338c7":"code","cb8d2a0c":"code","d975ccef":"code","9f637862":"code","9cfe71e8":"code","ddd07e3e":"code","5dfd95fe":"code","95848fe0":"code","22bd02bb":"code","5b07b4c7":"code","5d8d6455":"code","43592496":"code","cc4aac22":"code","2633e4b6":"markdown","14f093a1":"markdown","d4db1ea6":"markdown","0ba93959":"markdown","99ae7503":"markdown","4a128436":"markdown","b75ff832":"markdown","9f2dbff4":"markdown","6b38f059":"markdown","f64b068b":"markdown","1491f85a":"markdown","709cf6ec":"markdown","162e17d1":"markdown","08eb28f2":"markdown","51db2bc2":"markdown"},"source":{"69de4eaa":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3c9a1882":"data = pd.read_csv('\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndata.head()","130eb522":"data.tail()","9f66a5a0":"data.shape","904bd01e":"data.size","459d1683":"data.ndim","865c430d":"data.describe()","8c16eb36":"data.info()","3f9aba17":"data.isnull().sum()","80a6f381":"data['bmi'] = data['bmi'].fillna(data['bmi'].mean())","237e4031":"data.isnull().sum()","dae6595f":"data.head(2)","5f57e23d":"cat_cols = ['gender','ever_married','work_type','Residence_type','smoking_status']","001f39b2":"from sklearn.preprocessing import LabelEncoder\n\ndef func_labelencoder(list1,features):\n    encode = LabelEncoder()\n    features[list1] = encode.fit_transform(features[list1].astype(str))\n\nfor i in cat_cols:\n    func_labelencoder(i,data)","d282f630":"data.head()","2a13b272":"data.info()","a5ad7d27":"data.drop('id',axis=1,inplace=True)","9ce48b7c":"data.shape","af2d727a":"data.columns","ae026877":"fig,axis = plt.subplots(1,figsize=(16,8))\nplt.boxplot(data)\nplt.xticks(np.arange(1,12),['gender', 'age', 'hypertension', 'heart_disease', 'ever_married','work_type', 'Residence_type', 'avg_glucose_level', 'bmi','smoking_status', 'stroke'])\nplt.show()","d13a9f57":"fig,axes = plt.subplots(2,2,figsize=(16,10))\nsns.boxplot(data['avg_glucose_level'],ax=axes[0,0]).set_title('avg_glucose_level Box Plot Before',fontsize=18)\nsns.kdeplot(data['avg_glucose_level'],ax=axes[0,1]).set_title('avg_glucose_level Distribution Plot Before',fontsize=18)\n\nsns.boxplot(data['bmi'],ax=axes[1,0]).set_title('bmi Box Plot Before',fontsize=18)\nsns.kdeplot(data['bmi'],ax=axes[1,1]).set_title('bmi Distribution Plot Before',fontsize=18)\nplt.show()","3e3fc397":"sns.pairplot(data)","57c12f84":"sns.heatmap(data.corr())","891e53b5":"data.head()","26812fa7":"data.tail()","1d9338c7":"X = data.drop('stroke',axis=1)\ny = data['stroke']","cb8d2a0c":"X.head()","d975ccef":"from sklearn.model_selection import train_test_split\nXtrain,Xtest,ytrain,ytest = train_test_split(X,y,test_size=0.2,random_state=42)","9f637862":"Xtrain.shape,ytrain.shape,Xtest.shape,ytest.shape","9cfe71e8":"from sklearn.preprocessing import StandardScaler\nstd=StandardScaler()\n\nXtrain_std=std.fit_transform(Xtrain)\nXtest_std=std.transform(Xtest)","ddd07e3e":"from sklearn.tree import DecisionTreeClassifier\ndt=DecisionTreeClassifier()\ndt.fit(Xtrain_std,ytrain)\n\nDecisionTreeClassifier()\ndt.feature_importances_","5dfd95fe":"Y_pred=dt.predict(Xtest_std)\n\nfrom sklearn.metrics import accuracy_score\n\nac_dt=accuracy_score(ytest,Y_pred)\nac_dt","95848fe0":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier()\nrf.fit(Xtrain_std,ytrain)\n\nY_pred=rf.predict(Xtest_std)\nac_rf=accuracy_score(ytest,Y_pred)\nac_rf","22bd02bb":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(Xtrain_std,ytrain)\n\nY_pred_lr=lr.predict(Xtest_std)\n\nac_lr=accuracy_score(ytest,Y_pred_lr)\nac_lr","5b07b4c7":"lr.predict([[1,67.0,0,1,1,2,1,228.69,36.600000,1]])","5d8d6455":"import pickle\nimport os\n\nscaler_path=os.path.join('.\/','lr.pkl')\nwith open(scaler_path,'wb') as scaler_file:\n    pickle.dump(std,scaler_file)","43592496":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier()\nknn.fit(Xtrain_std,ytrain)\n\nY_pred=knn.predict(Xtest_std)\nac_knn=accuracy_score(ytest,Y_pred)\nac_knn","cc4aac22":"dic={'Models':['Decision Tree','Random Forest Classifier','Logistic Regression','K-nearest Neighbours'],'Accuracy':[ac_dt,ac_rf,ac_lr,ac_knn]}\nacc=pd.DataFrame(dic)\nacc","2633e4b6":"\n# Normalize\n\n","14f093a1":"## 4. K-nearest Neighbours","d4db1ea6":"## Checking For Outliers","0ba93959":"## 3.Logistic Regression","99ae7503":"# 3.Missing Values","4a128436":"### Thanks for your time, if you enjoyed reading this notebook an upvote would be appreciated : )","b75ff832":"# Overview\n#### According to the World Health Organization (WHO) stroke is the 2nd leading cause of death globally, responsible for approximately 11% of total deaths.\n#### This dataset is used to predict whether a patient is likely to get stroke based on the input parameters like gender, age, various diseases, and smoking status. Each row in the data provides relavant information about the patient.\n\n#### Attribute Information\n1) id: unique identifier\n\n2) gender: \"Male\", \"Female\" or \"Other\"\n\n3) age: age of the patient\n\n4) hypertension: 0 if the patient doesn't have hypertension, 1 if the patient has hypertension\n\n5) heart_disease: 0 if the patient doesn't have any heart diseases, 1 if the patient has a heart disease\n\n6) ever_married: \"No\" or \"Yes\"\n\n7) work_type: \"children\", \"Govt_jov\", \"Never_worked\", \"Private\" or \"Self-employed\"\n\n8) Residence_type: \"Rural\" or \"Urban\"\n\n9) avg_glucose_level: average glucose level in blood\n\n10) bmi: body mass index\n\n11) smoking_status: \"formerly smoked\", \"never smoked\", \"smokes\" or \"Unknown\"*\n\n12) stroke: 1 if the patient had a stroke or 0 if not\n","9f2dbff4":"## 1. Decision Tree Classifier","6b38f059":"# 2. Basic insights of data","f64b068b":"## Spliting into X,y","1491f85a":"# 5. Modeling\n","709cf6ec":"## Label Encoding The data","162e17d1":"## 2. Random Forest Classifier","08eb28f2":"# 1. Import libraries and read files","51db2bc2":"# 4. Data Visualization"}}