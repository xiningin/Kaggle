{"cell_type":{"a15bf122":"code","85a48c58":"code","ff5e6a88":"code","66932fb3":"code","3d7a52b9":"code","b5646eb8":"code","d5929fe0":"code","844b9e05":"code","bdf02722":"code","fc0cc815":"code","8afa4310":"code","d698786f":"code","abe35b9f":"code","cc3888ee":"code","8d9efb70":"code","a3891800":"code","50b8a106":"code","69ad4d65":"code","d0a27952":"code","facc81c7":"code","d72ee4ba":"code","5dd9b248":"code","0cd5843d":"markdown","7d1c6463":"markdown","6ae3801e":"markdown","3f991ebe":"markdown","6ff805a7":"markdown"},"source":{"a15bf122":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nimport datetime as dt\nimport os\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","85a48c58":"df_dji = pd.read_csv(os.path.join(dirname, 'djia.csv'))\ndf_comp = pd.read_csv(os.path.join(dirname, 'stock_prices.csv'))","ff5e6a88":"df_comp.head()","66932fb3":"df_dji.head()","3d7a52b9":"df_dji.info()\nprint('-'*50)\ndf_comp.info()","b5646eb8":"df_comp['Date'] = pd.to_datetime(df_comp['Date'], dayfirst=True)\ndf_dji['Date'] = pd.to_datetime(df_dji['Date'], dayfirst=True)\ndf_comp = df_comp[df_comp.Date > dt.datetime(2019,3,19)].reset_index(drop=True)\ndf_dji = df_dji[df_dji.Date > dt.datetime(2019,3,19)].reset_index(drop=True)","d5929fe0":"df_dji","844b9e05":"df_comp","bdf02722":"from pandas.plotting import register_matplotlib_converters\n\n\nregister_matplotlib_converters()\nfig, axes = plt.subplots(nrows=4, ncols=1, figsize=(15,30))\nfig.suptitle('Stock price dynamics', y=0.9, fontsize=24)\ncomp = np.random.choice(df_comp.columns[1:], 4, replace=False).tolist()\nfor i, ax in enumerate(axes):\n    ax.plot(df_comp.loc[:, 'Date'].values, df_comp.loc[:, comp[i]].values)\n    ax.set_title(comp[i], loc='left', fontsize=18)\n    ax.grid(linestyle = '-.')\n    ax.set_xlim(df_comp.loc[:, 'Date'].values[0], df_comp.loc[:, 'Date'].values[-1])\n# plt.subplots_adjust(hspace=0.4)\nplt.show()","fc0cc815":"plt.figure(figsize=(15,5))\nplt.plot(df_dji.loc[:,'Date'].values, df_dji.loc[:,'DJIA'].values)\nplt.xlim(df_dji.loc[:,'Date'].values[0], df_dji.loc[:,'Date'].values[-1])\nplt.title('DJIA dynamics', fontsize=20)\nplt.grid(linestyle = '-.')\nplt.show()","8afa4310":"cols = ['Apple', 'IBM', 'Intel', 'Cisco', 'Microsoft', 'Visa',\n        'Boeing', 'Chevron', 'ExxonMobile', 'Travelers', 'Home Depot', \n        'Johnson&Johnson', 'Coca-Cola', 'McDonalds', 'Procter&Gamble', 'Walmart']\n# cols = np.random.choice(df_comp.columns[1:], 15, replace=False).tolist()\ncm = np.corrcoef(df_comp.loc[:, cols].values.T)\nplt.figure(figsize=(20,12))\nsns.set(font_scale=1.6)\nhm = sns.heatmap(cm,\n                 annot=True,\n                 fmt='.2f',\n                 cmap='BuGn',\n                 annot_kws={'size': 18},\n                 yticklabels=cols,\n                 xticklabels=cols)\nplt.show()","d698786f":"sc = StandardScaler()\nX = df_comp.iloc[:,1:].values\ny = df_dji.iloc[:,1].values\nX_std = sc.fit_transform(X)\ny_std = sc.fit_transform(y.reshape(-1, 1))\ny_std.shape","abe35b9f":"all_comp = df_comp.columns[1:].values\nval = np.vstack((df_dji.iloc[:,1].values, X_std.T))\nprint('Stock prices - DJIA correlation')\nprint('-'*30)\ncorr_coef = {}\nfor i in range(30):\n    print('%i)  %.3f  %s'  % (i+1, np.corrcoef(val)[0,1:][i], all_comp[i]))\n    corr_coef[all_comp[i]] = np.corrcoef(val)[0,1:][i]","cc3888ee":"sort_val = sorted(corr_coef.items(), key=lambda kv: kv[1])\nall_comp_sorted = [sort_val[i][0] for i in range(len(sort_val))]\ncorr_coef_sorted = [sort_val[i][1] for i in range(len(sort_val))]","8d9efb70":"plt.figure(figsize=(20,25))\nrects = plt.barh(all_comp_sorted, corr_coef_sorted)\nplt.xlim(0,1.2)\n\nfor i, rect in enumerate(rects):\n    plt.text(rect.get_width(), rect.get_y() + 0.2, round(corr_coef_sorted[i], 2))\nplt.show()\nsns.reset_orig()","a3891800":"plt.figure(figsize=(15,5))\nplt.plot(df_dji.loc[:,'Date'].values, X_std[:,6], label='Cisco')\nplt.plot(df_dji.loc[:,'Date'].values, X_std[:,10], label='Goldman Sachs', c='g')\nplt.plot(df_dji.loc[:,'Date'].values, y_std, label='DJIA', c='r')\nplt.xlim(df_dji.loc[:,'Date'].values[0], df_dji.loc[:,'Date'].values[-1])\nplt.title('Max and min correlation', fontsize=20)\nplt.legend(fontsize=12)\nplt.grid(linestyle = '-.')\nplt.show()","50b8a106":"df_comp_2020 = df_comp[df_comp.Date > dt.datetime(2020,1,1)].reset_index(drop=True)\ndf_dji_2020 = df_dji[df_dji.Date > dt.datetime(2020,1,1)].reset_index(drop=True)\ndf_comp_2020.describe()","69ad4d65":"df_comp_2020.head()","d0a27952":"sc = StandardScaler()\nX = df_comp_2020.iloc[:,1:].values\ny = df_dji_2020.iloc[:,1].values\nX_std = sc.fit_transform(X)\ny_std = sc.fit_transform(y.reshape(-1, 1))\nval = np.vstack((df_dji_2020.iloc[:,1].values, X_std.T))\nprint('Stock prices - DJIA correlation (Feb - Mar 2020)')\nprint('-'*40)\ncorr_coef = {}\nfor i in range(30):\n    print('%i) %.3f  %s'  % (i+1, np.corrcoef(val)[0,1:][i], all_comp[i]))\n    corr_coef[all_comp[i]] = np.corrcoef(val)[0,1:][i]","facc81c7":"sort_val = sorted(corr_coef.items(), key=lambda kv: kv[1])\nall_comp_sorted = [sort_val[i][0] for i in range(len(sort_val))]\ncorr_coef_sorted = [sort_val[i][1] for i in range(len(sort_val))]\n\nplt.figure(figsize=(10,15))\nrects = plt.barh(all_comp_sorted, corr_coef_sorted)\nplt.xlim(0,1.2)\n\nfor i, rect in enumerate(rects):\n    plt.text(rect.get_width(), rect.get_y() + 0.2, round(corr_coef_sorted[i], 2))\nplt.show()\nsns.reset_orig()","d72ee4ba":"plt.figure(figsize=(12,8))\ndates = pd.to_datetime(df_dji_2020.loc[:,'Date'].values).strftime('%Y-%m-%d')\nticks = [dates[i] for i in range(0,54,10)]\nplt.plot(dates, X_std[:,23], label='United Technologies')\nplt.plot(dates, X_std[:,7], label='Coca-cola')\nplt.plot(dates, y_std, label='DJIA', c='r', linewidth=5)\nplt.xlim(ticks[0], ticks[-1])\nplt.ylim((-4,3))\nplt.xticks(ticks)\nplt.title('Correlations', fontsize=20)\nplt.legend(fontsize=12)\nplt.grid(linestyle = '-.')\nplt.show()","5dd9b248":"plt.figure(figsize=(12,8))\nplt.plot(dates, X_std[:,28], label='Walmart')\nplt.plot(dates, X_std[:,27], label='Walgreens Boots Alliance')\nplt.plot(dates, y_std, label='DJIA', c='r', linewidth=5)\nplt.xlim(ticks[0], ticks[-1])\nplt.ylim((-4,3))\nplt.xticks(ticks)\nplt.title('Correlations', fontsize=20)\nplt.legend(fontsize=12)\nplt.grid(linestyle = '-.')\nplt.show()","0cd5843d":"### For example, output 4 randomly selected companies graphs, and then construct a graph of the DJIA index.","7d1c6463":"### The heatmap shows quite expected high correlation pairs of companies in the same industry such as Microsoft - Apple, ExxonMobile - Chevron, Walmart - Procter&Gamble.","6ae3801e":"### It is interesting to see how the stock prices of companies correlate with each other (take, for example, 15 companies out of 30).","3f991ebe":"### It is even more interesting to look at each company stock prices correlation with DJIA index.","6ff805a7":"### We will use data for the last year."}}