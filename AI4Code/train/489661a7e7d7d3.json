{"cell_type":{"db05cf4b":"code","134238e5":"code","9a7838fc":"code","88812da9":"code","9cb47d18":"code","a39e76ab":"code","eec2c155":"code","e1549471":"code","f745165b":"code","73b9e2ec":"code","1eed7b8f":"code","aab9d1f9":"code","554f3167":"code","3dc0aa49":"code","ec735a5d":"code","47c95d02":"code","98364424":"code","09c6e0c6":"code","8ae679e0":"code","f8e3af9d":"code","440afee3":"code","236cdd0e":"code","fd09fd09":"code","de5a84e2":"code","92d80781":"code","2cdfc5c5":"code","ebfd9b11":"code","e77d2c7c":"code","f63725ef":"code","6ca92765":"markdown","8de5a037":"markdown","65708928":"markdown","5497a477":"markdown","c6d5b949":"markdown","5bcf2ad5":"markdown","67b8b26e":"markdown","ad765d24":"markdown","6ba5fbcc":"markdown","b6d890e7":"markdown","b89129c3":"markdown","27b13e57":"markdown"},"source":{"db05cf4b":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","134238e5":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport plotly.graph_objs as go\nimport seaborn as sns\nfrom plotly.offline import iplot","9a7838fc":"# Lecture des donn\u00e9es d'apprentissage et de test\ndf1 = pd.read_csv(\"..\/input\/student-alcohol-consumption\/student-por.csv\")\ndf2 = pd.read_csv(\"..\/input\/student-alcohol-consumption\/student-mat.csv\")","88812da9":"df1.head()","9cb47d18":"df1.count()","a39e76ab":"hommes = (df1.sex==\"M\")\nfemmes = (df1.sex==\"F\")","eec2c155":"df1[hommes].head()  ","e1549471":"fig = sns.FacetGrid(df1, hue=\"romantic\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"G3\", shade=True)\nfig.add_legend()","f745165b":"fig = sns.FacetGrid(df1, hue=\"Walc\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"traveltime\", shade=True)\nfig.add_legend()","73b9e2ec":"fig = sns.FacetGrid(df1, hue=\"Walc\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"absences\", shade=True)\nfig.add_legend()","1eed7b8f":"df1[df1[\"school\"] == 'GP']['reason'].value_counts().plot(kind='bar')","aab9d1f9":"labels = df1[\"Fjob\"].unique().tolist()\namount = df1[\"Fjob\"].value_counts().tolist()\n\ncolors = [\"orange\", \"green\", \"yellow\", \"white\",'cyan']\n\ntrace = go.Pie(labels=labels, values=amount,\n               hoverinfo='label+percent', textinfo='value', \n               textfont=dict(size=20),\n               marker=dict(colors=colors, \n                           line=dict(color='#000000', width=2)))\n\ndt = [trace]\nlayout = go.Layout(title=\"Mother's job\")\n\nfig = go.Figure(data=dt, layout=layout)\niplot(fig, filename = 'pi_chart')","554f3167":"# creating a dict file  \ngender = {'M': 1,'F': 2} \nyesno = {'yes': 1, 'no' : 0}\nschooltoint = {'GP': 1, 'MS' : 2}\naddresstoint = {'U' : 1, 'R' : 2}\nfamsizetoint = {'GT3' : 1, 'LE3' : 2}\nPstatustoint = {'T' : 1, 'A' : 2}\n  \n# traversing through dataframe \n# Gender column and writing \n# values where key matches \ndf1.sex = [gender[item] for item in df1.sex] \ndf1.schoolsup = [yesno[item] for item in df1.schoolsup] \ndf1.famsup = [yesno[item] for item in df1.famsup] \ndf1.paid = [yesno[item] for item in df1.paid] \ndf1.activities = [yesno[item] for item in df1.activities] \ndf1.nursery = [yesno[item] for item in df1.nursery] \ndf1.higher = [yesno[item] for item in df1.higher] \ndf1.internet = [yesno[item] for item in df1.internet] \ndf1.romantic = [yesno[item] for item in df1.romantic]\ndf1.school = [schooltoint[item] for item in df1.school]\ndf1.address = [addresstoint[item] for item in df1.address]\ndf1.famsize = [famsizetoint[item] for item in df1.famsize]\ndf1.Pstatus = [Pstatustoint[item] for item in df1.Pstatus]\ndf1 = df1.drop(['Mjob','Fjob','reason','guardian','Dalc'], axis=1)\n\n\ndf1.head() ","3dc0aa49":"df2.sex = [gender[item] for item in df2.sex] \ndf2.schoolsup = [yesno[item] for item in df2.schoolsup] \ndf2.famsup = [yesno[item] for item in df2.famsup] \ndf2.paid = [yesno[item] for item in df2.paid] \ndf2.activities = [yesno[item] for item in df2.activities] \ndf2.nursery = [yesno[item] for item in df2.nursery] \ndf2.higher = [yesno[item] for item in df2.higher] \ndf2.internet = [yesno[item] for item in df2.internet] \ndf2.romantic = [yesno[item] for item in df2.romantic]\ndf2.school = [schooltoint[item] for item in df2.school]\ndf2.address = [addresstoint[item] for item in df2.address]\ndf2.famsize = [famsizetoint[item] for item in df2.famsize]\ndf2.Pstatus = [Pstatustoint[item] for item in df2.Pstatus]\ndf2 = df2.drop(['Mjob','Fjob','reason','guardian','Dalc'], axis=1)\n\n\ndf2.head() ","ec735a5d":"data_train = df1       # 80% des donn\u00e9es avec frac=0.8\ndata_test = df2","47c95d02":"X_train = data_train.drop(['Walc'], axis=1)\ny_train = data_train['Walc']\nX_test = data_test.drop(['Walc'], axis=1)\ny_test = data_test['Walc']","98364424":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","09c6e0c6":"from sklearn.metrics import accuracy_score\nrf_score = accuracy_score(y_test, y_rf)\nprint(rf_score)","8ae679e0":"pd.crosstab(y_test, y_rf, rownames=['Reel'], colnames=['Prediction'], margins=True)","f8e3af9d":"importances = rf.feature_importances_\nindices = np.argsort(importances)","440afee3":"plt.figure(figsize=(12,8))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), df1.columns[indices])\nplt.title('Importance des caracteristiques')","236cdd0e":"df2 = df2.drop(['traveltime'], axis=1)\ndf1 = df1.drop(['traveltime'], axis=1)","fd09fd09":"data_train = df1      \ndata_test = df2","de5a84e2":"X_train = data_train.drop(['sex'], axis=1)\ny_train = data_train['sex']\nX_test = data_test.drop(['sex'], axis=1)\ny_test = data_test['sex']","92d80781":"rf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","2cdfc5c5":"rf_score = accuracy_score(y_test, y_rf)\nprint(rf_score)","ebfd9b11":"pd.crosstab(y_test, y_rf, rownames=['Reel'], colnames=['Prediction'], margins=True)","e77d2c7c":"importances = rf.feature_importances_\nindices = np.argsort(importances)","f63725ef":"plt.figure(figsize=(12,8))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), df1.columns[indices])\nplt.title('Importance des caracteristiques')","6ca92765":"On peut voir sur ce graphique que la consommation d'alcool joue un petit role dans le nombre d'abscence des eleves ( je pense notamment \u00e0 la courbe verte s'applatissant moins rapidement que les autres)","8de5a037":"Je pensais dans un premier temps que le temps de trajet avait un impact sur la fr\u00e9quence de consommation d'alcool mais non. Je pensais qu'il aurait \u00e9tait plus difficile pour les personnes habitant loins de pouvoir boire et reprendre la route par la suite.","65708928":"Je supprime des donn\u00e9es de la table cette info car non pertinante pour la recherche qui va suivre","5497a477":"On peut voir que l'algorithme arrive mieux a pr\u00e9dire les personnes buvant souvant mais est moins bon pour pr\u00e9dire les personnes ne buvant pas beaucoup.\nIl a donc plus tendances a dire que les perosnnes boivent alors que non (Fauxpositif)","c6d5b949":"le score final de 0.81 n'est pas vraiment tr\u00e8s bon, cela est d\u00fb au manque de donn\u00e9es des tables","5bcf2ad5":"En reposant sur les donn\u00e9es de la table l'algorithme est capable de pr\u00e9dire a 90 son sexe, il est surement imparfait encore une fois d\u00fb au manque de don\u00e9es.","67b8b26e":"Il est necessaire pour trait\u00e9 les donn\u00e9es dans un randomForest de les format\u00e9 en entier","ad765d24":"On peut voir que le fait d'\u00eatre en couple \u00e0 un l\u00e9ger impact sur le r\u00e9sultat final des \u00e9l\u00e8ves, les \u00e9l\u00e8ves en couples ont des r\u00e9ultat un peu moins bons que les autres.\n","6ba5fbcc":"On peut remarquer que beaucoup d'etudiants des ces \u00e9coles ont pour p\u00e8re un professeur.","b6d890e7":"On peut voir que l'ensemble des donn\u00e9es sont remplies pour chacun des \u00e9tudients","b89129c3":"On peut retrouver ici les caract\u00e8ristiques majeurs qui diff\u00e9rencies les hommes des femmes selon l'algorithme et ses donn\u00e9es en entr\u00e9e.\nOn peut voir que la caract\u00e9ristiques principal qui les diff\u00e9rencis sont la fr\u00e9quence de sortie, suivie par le nombre d'absence.\nDans un premier temps j'avais laiss\u00e9 le temps de trajet dans le tableau de donn\u00e9es, \u00e9tant une donn\u00e9e apparaissant comme crit\u00e8re principal je l'ai supprim\u00e9 car elle n'avait pas vraiment de sens.","27b13e57":"On peut remarquer que G1 est deuxi\u00e8me suivi de pres par G2 on peut en conclure que les personnes ayant r\u00e9ussi leur premi\u00e8re p\u00e9riode ou deuxi\u00e8me p\u00e9riode de cour ont plus tendance a vouloir sortir (surement car ils se disent qu'il ont bien travaill\u00e9s et qu'il n'ont pas de difficult\u00e9 particuli\u00e8re). A l'inverse les personnes n'ayant pas vraiment r\u00e9ussi les premi\u00e8res p\u00e9riode boivent moins, surement dans le but de consacrer plus de temps au travail.\nEn toute logique les personnes qui sortent le plus sont celles qui boivent le plus.\nOn peut aussi \u00e9tonament retrouver que le facteur de la sant\u00e9 de l'\u00e9tudiant a un impact important sur sa fr\u00e9quence de consommation d'alcool."}}