{"cell_type":{"c3aef622":"code","a2d15e2b":"code","caf9e250":"code","914ef83e":"code","edba52b9":"code","f6fe0e8a":"code","36e38d7b":"code","239d4d5b":"code","d7b404a0":"code","362e0226":"code","ba371620":"code","4db2d499":"code","0e57b031":"code","bc2855c3":"code","32e9777b":"code","8b37975b":"code","75b5e7bc":"code","d9f6cbfd":"code","56eb4413":"code","7937db5f":"code","13e7cba7":"code","79a88bdc":"code","948bfb02":"code","99d67d73":"code","b5e80b2b":"code","0d57b394":"code","f86c5a58":"code","3084f355":"code","b49c6f00":"code","a882777a":"code","a131c1f5":"markdown","f9bd5d6e":"markdown","274fa981":"markdown","75c82a27":"markdown","d7703c96":"markdown","d7c0afa1":"markdown","f59cac01":"markdown","10a74b1b":"markdown","a511fb3c":"markdown","3528cd2e":"markdown","b4a514a7":"markdown","1379db05":"markdown"},"source":{"c3aef622":"# importing the required modules\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a2d15e2b":"# loading the data\njan_df = pd.read_csv('..\/input\/bikeshare-data\/202101-divvy-tripdata\/202101-divvy-tripdata.csv')\nfeb_df = pd.read_csv('..\/input\/bikeshare-data\/202102-divvy-tripdata\/202102-divvy-tripdata.csv')\nmar_df = pd.read_csv('..\/input\/bikeshare-data\/202103-divvy-tripdata\/202103-divvy-tripdata.csv')\napr_df = pd.read_csv('..\/input\/bikeshare-data\/202104-divvy-tripdata\/202104-divvy-tripdata.csv')\nmay_df = pd.read_csv('..\/input\/bikeshare-data\/202105-divvy-tripdata\/202105-divvy-tripdata.csv')\njun_df = pd.read_csv('..\/input\/bikeshare-data\/202106-divvy-tripdata\/202106-divvy-tripdata.csv')\njul_df = pd.read_csv('..\/input\/bikeshare-data\/202107-divvy-tripdata\/202107-divvy-tripdata.csv')\naug_df = pd.read_csv('..\/input\/bikeshare-data\/202108-divvy-tripdata\/202108-divvy-tripdata.csv')\nsep_df = pd.read_csv('..\/input\/bikeshare-data\/202109-divvy-tripdata\/202109-divvy-tripdata.csv')\noct_df = pd.read_csv('..\/input\/bikeshare-data\/202110-divvy-tripdata\/202110-divvy-tripdata.csv')\nnov_df = pd.read_csv('..\/input\/bikeshare-data\/202111-divvy-tripdata\/202111-divvy-tripdata.csv')\ndec_df = pd.read_csv('..\/input\/bikeshare-data\/202112-divvy-tripdata\/202112-divvy-tripdata.csv')","caf9e250":"# lets have a look at one of the datasets\njan_df.head(10)","914ef83e":"jan_df.info()","edba52b9":"jan_df.columns","f6fe0e8a":"# check to make sure the column names are consistent across all dataframes\nprint(feb_df.columns)\nprint(mar_df.columns)\nprint(apr_df.columns)\nprint(may_df.columns)\nprint(jun_df.columns)\nprint(jul_df.columns)\nprint(aug_df.columns)\nprint(sep_df.columns)\nprint(oct_df.columns)\nprint(nov_df.columns)\nprint(dec_df.columns)","36e38d7b":"jan_df.nunique(axis = 0)","239d4d5b":"# concatenate all the dataframes into a single dataframe\ntrips_df = pd.concat([jan_df, feb_df, mar_df, apr_df, may_df, jun_df, jul_df, aug_df, sep_df, oct_df,\n                     nov_df, dec_df])\ntrips_df","d7b404a0":"trips_df.shape","362e0226":"trips_df.info()","ba371620":"trips_df['started_at'] = pd.to_datetime(trips_df['started_at'])","4db2d499":"trips_df['ended_at'] = pd.to_datetime(trips_df['ended_at'])","0e57b031":"len(pd.unique(trips_df.ride_id))","bc2855c3":"pd.unique(trips_df.rideable_type)","32e9777b":"trips_df.sample(20)","8b37975b":"# check for records where ended_at is before started_at\ntrips_df[(trips_df['ended_at'] - trips_df['started_at']).view(int) < 0]","75b5e7bc":"# keeping only the records where started_at is before ended_at\ntrips_df_clean = trips_df[(trips_df['ended_at'] - trips_df['started_at']).view(int) > 0]","d9f6cbfd":"trips_df_clean","56eb4413":"# let's add day, month column to the dataframe\ntrips_df_clean['weekday'] = pd.DatetimeIndex(trips_df_clean['started_at']).weekday\ntrips_df_clean['month'] = pd.DatetimeIndex(trips_df_clean['started_at']).month","7937db5f":"trips_df_clean","13e7cba7":"# check if there is any missing value in member_casual column\ntrips_df_clean['member_casual'].isnull().sum()","79a88bdc":"trips_df_clean.shape","948bfb02":"user_count = trips_df_clean.groupby('member_casual').size().reset_index(name='counts')\nuser_count","99d67d73":"user_by_weekday = trips_df_clean.groupby('weekday').size().reset_index(name='counts')\nuser_by_weekday","b5e80b2b":"user_by_month = trips_df_clean.groupby('month').size().reset_index(name='counts')\nuser_by_month","0d57b394":"weekday_users = user_by_weekday = trips_df_clean.groupby(['weekday', 'member_casual']).size().reset_index(name='counts')\nweekday_users","f86c5a58":"# changing the graph background\nsns.set_style('darkgrid')","3084f355":"plt.figure(figsize = (10,6))\nsns.barplot(data=weekday_users, x='weekday', y='counts', hue='member_casual')\nplt.title('Number of users by weekdays')\nplt.xlabel('Weekdays')\nplt.ylabel('No. of users');","b49c6f00":"monthly_users = trips_df_clean.groupby(['month', 'member_casual']).size().reset_index(name='counts')\nmonthly_users","a882777a":"plt.figure(figsize = (12,8))\nsns.barplot(data=monthly_users, x='month', y='counts', hue='member_casual')\nplt.title('Number of users by month')\nplt.xlabel('Months')\nplt.ylabel('No. of users');","a131c1f5":"Now, the *started_at* and *ended_at* columns need to be converted to the type ***datetime***","f9bd5d6e":"In the above dataframe result, as usual, 1 corresponds to **January** and 12 corresponds to **December**. Looking closely, we can see that winter months **January(1),February(2) and December(12)** have the lowest number of trips, which might be, because Chicago gets really chilling cold during winter, whereas, during summer months **July(7), August(8)**, people go out the most on bikes.","274fa981":"In the above result, 0 denotes **Monday** and 6 denotes **Sunday**. Now, if we observe, we see that the number of trips spikes up during weekends. **Saturday** has the highest number of trips and **Monday** has the lowest, which makes sense as people tend to go out during weekends as they get their time off from regular work schedule.\n\nNext, we aggregate by month and see what we can find.","75c82a27":"Let's go through each of the columns","d7703c96":"We see that out of **5594410** users, **3065746** are annual members and **2528664** are casual users.\n\nNow, let's further aggregate our data by weekdays and see what they tell.","d7c0afa1":"## Case Study on bike-share data\nHere, I will perform analysis on the bike share data during the year 2021, to gather insights on how the members and casual users are using the service.","f59cac01":"Looking at the above graph, we can infer that the drop in the number of users during winters is because of the drop in the number of casual users. It is evident that the number of annual members using bike services also drop, but a huge part of it is due to the drop in casual users. In **February**, the number of casual users almost drops to none compared to other months.\nSummer months record the most number of trips for both types of users, with the highest in **July**.","10a74b1b":"## Descriptive Analysis\nNow, let's do some descriptive analysis with the clean data that we have. Here, we are considering records with missing values in *start_station_name, start_station_id, end_station_name, end_station_id, start_lat, start_lng, end_lat, end_lng* as valid trips.\n\nLet's find out the total number of members and casual users in our data.","a511fb3c":"## Visualizations\nNow, let's plot some graphs and further see what it may tell us.\n\nFirst, let's create a smaller dataframe grouped by ***member_casual*** and ***weekday*** and then we will plot our first graph using this dataframe.","3528cd2e":"There seems to be 3 types of bikes provided by the service, namely ***electric_bike, classic_bike, docked_bike***.","b4a514a7":"Earlier, we found out that the number of people using the bike services on weekends was much higher than the rest of the weekdays. After observing the above graph, we can infer that it was due to the increase in casual users during weekends. Number of annual members using bike services is almost constant throughout the week.","1379db05":"The ***ride_id*** column seems to be fine, with every value being unique, which should be the case."}}