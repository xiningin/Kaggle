{"cell_type":{"1959940b":"code","4cad3d50":"code","1e8460a7":"code","b2cb1c32":"code","f49b0d01":"code","973dce23":"code","cc7663aa":"code","282f390a":"code","39c460bd":"code","d75948e0":"code","052c3aee":"code","ae294edf":"markdown","3ab22f4b":"markdown","639b85bb":"markdown","6c556e21":"markdown","8c582be7":"markdown"},"source":{"1959940b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nfrom statsmodels.tsa.vector_ar.var_model import VAR\nfrom sklearn.metrics import mean_squared_error\n\nimport seaborn as sns\nimport missingno as msno\nimport statsmodels.api as sm\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn import linear_model as lm\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import cross_val_score \nfrom datetime import datetime, timedelta\nimport os\n","4cad3d50":"features_train=pd.read_csv('..\/input\/DengAI_Predicting_Disease_Spread_-_Training_Data_Features.csv')\nlabels_train=pd.read_csv('..\/input\/DengAI_Predicting_Disease_Spread_-_Training_Data_Labels.csv')\ndf_train=pd.merge(features_train, labels_train, on=[\"city\",\"year\",\"weekofyear\"])\ndf_test=pd.read_csv('..\/input\/DengAI_Predicting_Disease_Spread_-_Test_Data_Features.csv')\ndf_test['total_cases'] = 0\ndf = pd.concat([df_train,df_test])\ndf.head()","1e8460a7":"feature_names = df.columns[4:]\nprint(feature_names)","b2cb1c32":"df = df.fillna(method='ffill')","f49b0d01":"features_train.city.value_counts()","973dce23":"sj_count = 936\niq_count = 520","cc7663aa":"data = df[df.city=='sj'][feature_names].reset_index(drop=True)\nfor i in range(sj_count,len(data)-1):\n    model = VAR(endog=data[:i])\n    model_fit = model.fit()\n\n    # make prediction on validation\n    prediction = model_fit.forecast(model_fit.y, steps=1)\n    cases = prediction[0,-1]\n    data.at[i+1,'total_cases'] = cases\ntest_sj_preds = data[sj_count:]['total_cases'].clip_lower(0)","282f390a":"data = df[df.city=='iq'][feature_names].reset_index(drop=True)\nfor i in range(iq_count,len(data)-1):\n    model = VAR(endog=data[:i])\n    model_fit = model.fit()\n\n    # make prediction on validation\n    prediction = model_fit.forecast(model_fit.y, steps=1)\n    cases = prediction[0,-1]\n    data.at[i+1,'total_cases'] = cases\ntest_iq_preds = data[iq_count:]['total_cases'].clip_lower(0)","39c460bd":"df_test.loc[df_test.city=='sj','total_cases'] = test_sj_preds.values\ndf_test.loc[df_test.city=='iq','total_cases'] = test_iq_preds.values","d75948e0":"Submission_Deng_AI = df_test[['city','year','weekofyear', 'total_cases']]\nSubmission_Deng_AI.to_csv(\"Submission_Deng_AI.csv\", index=False)","052c3aee":"figure(figsize=(20,10))\nplt.plot( 'week_start_date', 'total_cases', data=df_train[df_train.city=='sj'],  \n         color='blue', label='sj')\nplt.plot( 'week_start_date', 'total_cases', data=df_train[df_train.city=='iq'], color='olive', label='iq')\nplt.plot( 'week_start_date', 'total_cases', data=df_test[df_test.city=='sj'],  color='red', linestyle='dashed', \n         label=\"predictet sj\")\nplt.plot( 'week_start_date', 'total_cases', data=df_test[df_test.city=='iq'],  color='green',  linestyle='dashed', \n         label=\"predictet iq\")\nplt.legend()\n","ae294edf":"#### Counts the number of occourences for each city.\nWill threat each city as separated problem","3ab22f4b":"#### Fill null data copying previous data in series","639b85bb":"### Plotting the results","6c556e21":"### Train two models using VAR (time series multi variable)\nfor every predicted values, retrain the model and predict next value to test set.","8c582be7":"### Import data\nImport train and test data. Join train data and labels. Make a full data set (df) with train and test"}}