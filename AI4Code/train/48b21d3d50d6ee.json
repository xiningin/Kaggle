{"cell_type":{"544fd677":"code","d77d9878":"code","73401d28":"code","307aa8f2":"code","636ff69f":"code","88541c65":"code","6987f08a":"code","81330656":"code","803173bf":"code","6623b822":"code","98d84317":"code","10780151":"code","59c25f43":"code","f8fcc36a":"code","8e5293eb":"code","1cd2211f":"code","70ec4cee":"code","caaf5d03":"code","4b5ac135":"code","d84fc13c":"code","b6576421":"code","72b97ed7":"code","13a7d6bc":"code","8e4bf982":"code","4f49188f":"markdown","1408a4a5":"markdown","0160af09":"markdown","6c477b08":"markdown","42de49e7":"markdown","49362b1a":"markdown","aee2b6cc":"markdown","c0e7d83d":"markdown","1c0e3ada":"markdown","512f5bf6":"markdown","1d4bbfb2":"markdown","823689ce":"markdown","5626d481":"markdown","42e7eaaa":"markdown","ee49839b":"markdown","37d042e5":"markdown","a0fe8e18":"markdown","0bea8a4e":"markdown","3eea0263":"markdown"},"source":{"544fd677":"import numpy as np \nimport pandas as pd \n\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.graph_objects as go\n\nimport cufflinks as cf\ncf.go_offline()\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        pass\n        #print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nfrom IPython.display import display, Image\n\n\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\n\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\nfrom shapely.geometry import Point,Polygon\n\nimport math","d77d9878":"display(Image(filename='\/kaggle\/input\/modern-slvery-final\/modern_slavery_final\/trafficking_breaksdown.png'))","73401d28":"display(Image(filename=\"\/kaggle\/input\/modern-slvery-final\/modern_slavery_final\/Modern_Slavery.png\"))","307aa8f2":"labour_region = pd.read_csv(\"\/kaggle\/input\/world-labour-datasets\/world_labour_dataset\/Number and prevalence of persons in modern slavery by region.csv\")\nlabour_region_reserve = labour_region['Region(all_no_in_thousands)']\nlabour_region = labour_region[labour_region.select_dtypes(include=['number']).columns] *1000\nlabour_region['Region(all_no_in_thousands)'] = labour_region_reserve\nlabour_regions = labour_region[labour_region['Region(all_no_in_thousands)'] != 'World']\nlabour_region_world = labour_region[labour_region['Region(all_no_in_thousands)'] == 'World']\n\n\nfrom plotly.subplots import make_subplots\n\nlabels = labour_regions['Region(all_no_in_thousands)'].tolist()\n\nvalues1 = labour_regions['Modern Slavery'].tolist()\nvalues2 = labour_regions['Forced Marriage'].tolist()\nvalues3 = labour_regions['Total Forced Labor'].tolist()\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=3, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=labels, values=values1, name=\"Modern Slavery\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=values2, name=\"Forced Marriage\"),\n              1, 2)\nfig.add_trace(go.Pie(labels=labels, values=values3, name=\"Total Forced Labor\"),\n              1, 3)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    autosize=True,\n    width=1500,\n    title_text=\"Number and prevalence of persons in slavery by region\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Modern Slavery', x=0.11, y=0.5, font_size=13, showarrow=False),\n                 dict(text='Forced Marriage', x=0.5, y=0.5, font_size=13, showarrow=False),\n                dict(text='Total Forced Labor', x=0.9, y=0.5, font_size=13, showarrow=False)])\nfig.show()","636ff69f":"laour_sex_age = pd.read_csv('\/kaggle\/input\/world-labour-datasets\/world_labour_dataset\/Number and prevalence of persons in modern slavery by sex.csv')\nlabour_sex_reserve = laour_sex_age['Category_Sex_Age(ALL_NO_THOUSAND']\nlaour_sex_age = laour_sex_age[laour_sex_age.select_dtypes(include=['number']).columns] *1000\nlaour_sex_age['Category_Sex_Age'] = labour_sex_reserve\n\n\nlaour_sex_age_world = laour_sex_age[laour_sex_age['Category_Sex_Age'] == 'World']\nlaour_sex_age_world.iplot(x='Category_Sex_Age', y = ['Forced labour exploitation','Forced sexual  exploitation of adults and commercial sexual exploitation of children','State-imposed forced labour ', 'Total  forcedlabour', 'Forcedmarriage','Modernslavery'], xTitle='World',yTitle='No of peoples',kind='bar',title='Number and prevalence of persons in modern slavery in World',sort='ascending')","88541c65":"laour_sex_age_world_transpose = (laour_sex_age_world.T).reset_index()\nlaour_sex_age_world_transpose = laour_sex_age_world_transpose.rename(columns={'index':'Act',0:'Values'})\nlaour_sex_age_world_transpose = laour_sex_age_world_transpose[laour_sex_age_world_transpose['Act'] != 'Category_Sex_Age']\nlaour_sex_age_world_transpose = laour_sex_age_world_transpose.sort_values('Values')\n\nlabels = laour_sex_age_world_transpose['Act'].tolist()\nvalues = laour_sex_age_world_transpose['Values'].tolist()\n\n\nlayout = go.Layout(\n    autosize=True,\n    width=1000,\n    title = 'Different Types of Slavery',\n    xaxis= go.layout.XAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n\n    yaxis= go.layout.YAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n)\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, hole=0.3)])\nfig.update(layout=layout)\nfig.show()","6987f08a":"laour_sex_age_noworld = laour_sex_age[laour_sex_age['Category_Sex_Age'] != 'World']\n\nlaour_sex_age_noworld_transpose = laour_sex_age_noworld.T\n\nlaour_sex_age_noworld_transpose = (laour_sex_age_noworld_transpose).reset_index()\nlaour_sex_age_noworld_transpose = laour_sex_age_noworld_transpose.rename(columns={'index':'Act',1:'Male',2:'Female',3:'Adults',4:'Children'})\nlaour_sex_age_noworld_transpose = laour_sex_age_noworld_transpose[laour_sex_age_noworld_transpose['Act'] != 'Category_Sex_Age']\n\nlaour_sex_age_noworld_transpose.iplot(x='Act', y=['Male', 'Female'], kind='bar',xTitle='Different Acts of Slavery',yTitle='No of peoples',title='Number and prevalence of persons in modern slavery in World')","81330656":"sex = ['Male','Female']\nage = ['Adults', 'Children']\n\nlaour_sex_age_noworld['Total'] = laour_sex_age_noworld.loc[:,laour_sex_age_noworld.columns != 'Category_Sex_Age'].sum(axis=1)\n\nlaour_sex_age_noworld_gender = laour_sex_age_noworld\nlaour_sex_age_noworld_age = laour_sex_age_noworld\n\nfor val in age:\n    laour_sex_age_noworld_gender = laour_sex_age_noworld_gender[laour_sex_age_noworld_gender['Category_Sex_Age'] != val]\n\nfor val in sex:\n    laour_sex_age_noworld_age = laour_sex_age_noworld_age[laour_sex_age_noworld_age['Category_Sex_Age'] != val]\n  \n\nlabels = laour_sex_age_noworld_gender['Category_Sex_Age'].tolist()\nvalues = laour_sex_age_noworld_gender['Total'].tolist()\n\n\nlayout = go.Layout(\n    autosize=True,\n    title = 'Number and Prevalence of persons in Forced Labor by Gender',\n    xaxis= go.layout.XAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n\n    yaxis= go.layout.YAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n)\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, hole=0.3)])\nfig.update(layout=layout)\nfig.show()","803173bf":"laour_sex_age_noworld_transpose.iplot(x='Act', y=['Adults', 'Children'], kind='bar',xTitle='Different Acts of Slavery',yTitle='No of peoples',title='Number and prevalence of persons in modern slavery in World')","6623b822":"labels = laour_sex_age_noworld_age['Category_Sex_Age'].tolist()\nvalues = laour_sex_age_noworld_age['Total'].tolist()\n\n\nlayout = go.Layout(\n    autosize=True,\n    title = 'Number and Prevalence of persons in Forced Labor by Age',\n    xaxis= go.layout.XAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n\n    yaxis= go.layout.YAxis(linecolor = 'black',\n                          linewidth = 1,\n                          mirror = True),\n)\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, hole=0.3)])\nfig.update(layout=layout)\nfig.show()","98d84317":"global_data = pd.read_csv(\"\/kaggle\/input\/modern-slvery-final\/modern_slavery_final\/GIS_2018_report.csv\")","10780151":"global_data_fisher = global_data\n\nglobal_data_fisher['value_per_fisher (US$)'] = global_data['value_per_fisher (US$)'].astype(str)\n\nglobal_data_fisher = global_data_fisher.dropna()\nglobal_data_fisher = global_data_fisher[global_data_fisher['value_per_fisher (US$)'] !='nan']\n\nglobal_data_fisher['value_per_fisher (US$)'] = global_data_fisher['value_per_fisher (US$)'].apply(lambda x: x.replace(',',''))\nglobal_data_fisher['value_per_fisher (US$)'] = global_data_fisher['value_per_fisher (US$)'].astype(int)\n\nglobal_data_fisher = global_data_fisher.sort_values('value_per_fisher (US$)', ascending=True)\n\ntrace1 = [go.Choropleth(\n               colorscale = 'Picnic',\n               locationmode = 'country names',\n               locations = global_data_fisher['GSI Country'],\n               text = global_data_fisher['GSI Country'], \n               z = global_data_fisher['value_per_fisher (US$)'],\n               )]\n\nlayout = dict(title = 'Value per fisher (US$)',\n                  geo = dict(\n                      showframe = True,\n                      showocean = True,\n                      showlakes = True,\n                      showcoastlines = True,\n                      projection = dict(\n                          type = 'hammer'\n        )))\n\n\nprojections = [ \"equirectangular\", \"mercator\", \"orthographic\", \"natural earth\",\"kavrayskiy7\", \n               \"miller\", \"robinson\", \"eckert4\", \"azimuthal equal area\",\"azimuthal equidistant\", \n               \"conic equal area\", \"conic conformal\", \"conic equidistant\", \"gnomonic\", \"stereographic\", \n               \"mollweide\", \"hammer\", \"transverse mercator\", \"albers usa\", \"winkel tripel\" ]\n\nbuttons = [dict(args = ['geo.projection.type', y],\n           label = y, method = 'relayout') for y in projections]\nannot = list([ dict( x=0.1, y=0.8, text='Projection', yanchor='bottom', \n                    xref='paper', xanchor='right', showarrow=False )])\n\n\n# Update Layout Object\n\nlayout[ 'updatemenus' ] = list([ dict( x=0.1, y=0.8, buttons=buttons, yanchor='top' )])\nlayout[ 'annotations' ] = annot\n\n\nfig = go.Figure(data = trace1, layout = layout)\niplot(fig)","59c25f43":"global_data_fisher_top20 = global_data_fisher[-20:]\nglobal_data_fisher_worst20 = global_data_fisher[:20]\n\nglobal_data_fisher_top20.iplot(x='GSI Country', y=['value_per_fisher (US$)'], kind='bar', title='Top 20 Country where Fisher Earn Highest Money',xTitle='Countries', yTitle = 'Money (US$)')","f8fcc36a":"global_data_fisher_worst20.iplot(x='GSI Country', y=['value_per_fisher (US$)'], kind='bar', title='Top 20 Country where Fisher Earn Least Money',xTitle='Countries', yTitle = 'Money (US$)')","8e5293eb":"trace1 = [go.Choropleth(\n               colorscale = 'Picnic',\n               locationmode = 'country names',\n               locations = global_data_fisher['GSI Country'],\n               text = global_data_fisher['GSI Country'], \n               z = global_data_fisher['gsi_vuln'],\n               )]\n\nlayout = dict(title = 'GSI Vulnerability',\n                  geo = dict(\n                      showframe = True,\n                      showocean = True,\n                      showlakes = True,\n                      showcoastlines = True,\n                      projection = dict(\n                          type = 'hammer'\n        )))\n\n\nprojections = [ \"equirectangular\", \"mercator\", \"orthographic\", \"natural earth\",\"kavrayskiy7\", \n               \"miller\", \"robinson\", \"eckert4\", \"azimuthal equal area\",\"azimuthal equidistant\", \n               \"conic equal area\", \"conic conformal\", \"conic equidistant\", \"gnomonic\", \"stereographic\", \n               \"mollweide\", \"hammer\", \"transverse mercator\", \"albers usa\", \"winkel tripel\" ]\n\nbuttons = [dict(args = ['geo.projection.type', y],\n           label = y, method = 'relayout') for y in projections]\nannot = list([ dict( x=0.1, y=0.8, text='Projection', yanchor='bottom', \n                    xref='paper', xanchor='right', showarrow=False )])\n\n\n# Update Layout Object\n\nlayout[ 'updatemenus' ] = list([ dict( x=0.1, y=0.8, buttons=buttons, yanchor='top' )])\nlayout[ 'annotations' ] = annot\n\n\nfig = go.Figure(data = trace1, layout = layout)\niplot(fig)","1cd2211f":"global_data = global_data.sort_values('gsi_vuln', ascending=False)\nglobal_data_top20 = global_data[:20]\nglobal_data_top20.iplot(x='GSI Country', y=['gsi_vuln'], kind='bar', title='Top 20 Having Worst Global Slavery Index Vulnerability',xTitle='Countries', yTitle = 'GSI Vunerable Score')","70ec4cee":"global_data_least20 = global_data[-20:]\nglobal_data_least20.iplot(x='GSI Country', y=['gsi_vuln'], kind='bar', title='Top 20 Having Least Global Slavery Index Vulnerability',xTitle='Countries', yTitle = 'GSI Vunerable Score')","caaf5d03":"nepal_crime_month = pd.read_csv('\/kaggle\/input\/cid-nepal-2076-final\/CID_CSV_final\/Number of trafficking cases registered in Nepal Police by Nepali months, FY 2018_19.csv')\n\nnepal_crime_month = nepal_crime_month.fillna(nepal_crime_month.mean())\nnepal_crime_month['Trafficking Cases']  = nepal_crime_month['Trafficking Cases'].astype(int)\n\nnepal_crime_month.iplot(x='Months', y=['Trafficking Cases'], kind='scatter',xTitle='Months',yTitle='Trafficking Cases',title='Number of trafficking cases registered in Nepal Police by Nepali months, FY 2018_19')","4b5ac135":"import plotly.express as px \n\n#nepal_crime_month\nfig = px.box(nepal_crime_month, y='Trafficking Cases', title='Trafficking Case (2076 BS)')\nfig.show()","d84fc13c":"trafficking_case_state = pd.read_csv('\/kaggle\/input\/cid-nepal-2076-final\/CID_CSV_final\/Number of Trafficking cases in Nepal by state.csv')\n\ntrafficking_case_state_total = trafficking_case_state[trafficking_case_state['State'] == 'Total']\ntrafficking_case_state_nototal = trafficking_case_state[trafficking_case_state['State'] != 'Total']\n\ntrafficking_case_state_nototal.iplot(x='State', y=['No of Cases(2074\/75)', 'No of Cases(75\/76)'], kind='bar',xTitle='Province',yTitle='Trafficking Cases',title='Number of Trafficking cases in Nepal by state')","b6576421":"trafficking_case_state_total.iplot(x='State', y=['No of Cases(2074\/75)', 'No of Cases(75\/76)'], kind='bar',xTitle='Nepal',yTitle='Trafficking Cases',title='Number of Trafficking cases in Nepal')","72b97ed7":"trafficking_distribution = pd.read_csv('\/kaggle\/input\/cid-nepal-2076-final\/CID_CSV_final\/Distribution of number of trafficking cases by modus operandi of trafficking, Nepal.csv')\ntrafficking_distribution_nototal = trafficking_distribution[trafficking_distribution['Modus Operandi'] != 'Total']\n\nfrom plotly.subplots import make_subplots\nlabels = trafficking_distribution_nototal['Modus Operandi'].tolist()\n\nvalues1 = trafficking_distribution_nototal['FY2016\/17 No'].tolist()\nvalues2 = trafficking_distribution_nototal['FY 2017\/18 No'].tolist()\nvalues3 = trafficking_distribution_nototal['FY 2018\/19 No'].tolist()\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=3, specs=[[{'type':'domain'}, {'type':'domain'},{'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=labels, values=values1, name=\"Nepal(2016\/17)\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=values2, name=\"Nepal(2017\/18)\"),\n              1, 2)\nfig.add_trace(go.Pie(labels=labels, values=values3, name=\"Nepal(2018\/19)\"),\n              1, 3)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(    \n    autosize=True,\n    width=1500,\n    title_text=\"Distribution of number of trafficking cases by modus operandi of trafficking Nepal(2016-2018)\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='2016\/17', x=0.12, y=0.5, font_size=20, showarrow=False),\n                 dict(text='2017\/18', x=0.5, y=0.5, font_size=20, showarrow=False),\n                dict(text='2018\/19', x=0.88, y=0.5, font_size=20, showarrow=False)])\nfig.show()","13a7d6bc":"trafficking_distribution_nototal.iplot(x='Modus Operandi', y=['FY2016\/17 No', 'FY 2017\/18 No','FY 2018\/19 No'], kind='bar',xTitle='Modus Operandi',yTitle='Years',title='Distribution of number of trafficking cases by modus operandi of trafficking, Nepal')","8e4bf982":"nepal_district_cases = pd.read_csv('\/kaggle\/input\/cid-nepal-2076-final\/CID_CSV_final\/Number of trafficking cases registered by districts_(2018-19).csv')\nnepal_district_cases_map = nepal_district_cases.reindex(nepal_district_cases['Number of Cases'])\n\n#Preproceesing Data for Choropleth maps\ndistricts_full = gpd.read_file('\/kaggle\/input\/nepal-data-location\/NPL_adm3.shx')\ndistricts_full_geometry = districts_full[['NAME_3', 'geometry']]\n\n\nnepal_district_cases_map['Districts'] = nepal_district_cases_map['Districts'].replace({\"W.Nawalparasi\": \"Nawalparasi\",\"E.Nawalparasi\": \"Nawalparasi\", \"RukumPurba\":\"Rukum\" ,\"RukumPaschim\":\"Rukum\"})\n\nplot_dict = nepal_district_cases_map.Districts.value_counts()\n\n\n\ndistricts_full_geometry_dict = dict()\nfor key,value in zip(districts_full_geometry['NAME_3'],districts_full_geometry['geometry']):\n    districts_full_geometry_dict[key] = value\n\n\ndef return_coordinates(x):\n    return districts_full_geometry_dict[x]\n\nnepal_district_cases_map['geometry'] = nepal_district_cases_map['Districts'].apply(lambda x: return_coordinates(x))\n\n\n\ngeometry = nepal_district_cases_map['geometry']\ndf = nepal_district_cases_map.drop(['Longitude', 'Latitude','Number of Cases'], axis=1)\ncrs = {'init': 'epsg:4326'}\nnepal_district_cases_map_gdf = GeoDataFrame(nepal_district_cases_map, crs=crs, geometry=geometry)\n\n\n\n\nnepal_districtonly_cases_map = nepal_district_cases_map_gdf[['Districts','geometry']].set_index('Districts')\n\n# Create the map\nm_3 = folium.Map(location=[28.3949,84.1240], tiles='cartodbpositron', zoom_start=7)\n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in nepal_district_cases_map.iterrows():\n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker([row['Latitude'], row['Longitude']]))\nm_3.add_child(mc)\n\n# Display the map\nm_3","4f49188f":"# Modern slavery and the race to fish\n\n**Marine fisheries are in crisis, requiring twice the fishing effort of the 1950s to catch the same quantity of fish, and with many fleets operating beyond economic or ecological sustainability. A possible consequence of diminishing returns in this race to fish is serious labour abuses, including modern slavery, which exploit vulnerable workers to reduce costs. Here, we use the Global Slavery Index (GSI), a national-level indicator, as a proxy for modern slavery and labour abuses in fisheries. GSI estimates and fisheries governance are correlated at the national level among the major fishing countries. Furthermore, countries having documented labour abuses at sea share key features, including higher levels of subsidised distant-water fishing and poor catch reporting. **","1408a4a5":"* Most people are affected by Modern Slavery\n* State-imposed forced labour has the least affect\n    * Reasons:\n    1. Allmost no women are engage in State-imposed forced labour\n    1. Women are more affected by Slavery\n        ","0160af09":"* Modern Slavery has most affected\n* Womens are more affected by the slavery \n* Mens are more affected in state-imposed forced Slavery \n* Female are more affected by Forced sexual  exploitation of adults and commercial sexual exploitation of children than Male","6c477b08":"# Visualizing Trafficking in Nepal By Map","42de49e7":"**Trafficking Cases decreases in 2075\/76 BS compared to 2074\/2075 BS**","49362b1a":"* Demark fishers earn the most money\n* Many countries with highest paid fishers are European\n* Haiti, lebanon fishers earn the least money","aee2b6cc":"* State 5 has the highest trafficking in 2074\/75 BS\n* State 1 has the highest trafficking in 2075\/76 BS\n* State 4(Gandaki) and State 6(Karnali) has the least trafficking in both years\n* Compared to 2074\/75 BS, 2075\/76 BS has less trafficking except State 6(karnali) and State 7\n* State 6(Karnali) trafficking cases increases while remains same for State 7","c0e7d83d":"* In 2016\/2017 AD Tour\/travel used to be main cause of Trafficking\n* Compared to 2017\/2018 AD Lure\/Deception has decreased but it remains the main cause of trafficking\n* All causes of trafficking has lowered in 2018\/2019 AD \n* There is huge increase in  trafficking in 2017\/18 AD compared to 2016\/2017 AD","1c0e3ada":"* Maximum number of trafficking happened in a month is 50\n* Minimum number of trafficking happened in a month is 10","512f5bf6":"* By seeing the charts it is clear that the problem of Slavery is most in Asia and Africa\n* Arab states has the least Slavery.","1d4bbfb2":"* Modern Slavery has most affected\n* Adults are more affected by Slavery","823689ce":"* Many European and some Asian countries have less GSI Vunerability\n* Many African and some Asian(mostly western Asia) countries have high GSI Vunerability ","5626d481":"* Most Trafficking happens in Jestha\n* Least Trafficking happens in Kartik","42e7eaaa":"# Measuring Vulnerability\n\n*The Global Slavery Index Vulnerability Model is built on statistical testing and processes to identify the factors that explain or predict the prevalence of modern slavery. The 2018 Vulnerability Model provides a risk score for 167 countries based on an analysis of data covering 23 risk variables across five major dimensions.*","ee49839b":"# World Labour Data","37d042e5":"# Human Trafficking\n\n***Trafficking in persons is a serious crime and a grave violation of human rights. Every year, thousands of men, women and children fall into the hands of traffickers, in their own countries and abroad. Almost every country in the world is affected by trafficking, whether as a country of origin, transit or destination for victims. ***\n\n\n\n*The definition of trafficking consists of three core elements:*\n\n1. The **action** of trafficking which means the recruitment, transportation, transfer, harboring or receipt of persons\n\n2. The **means** of trafficking which includes threat of or use of force, deception, coercion, abuse of power or position of vulnerability\n\n3. The **purpose** of trafficking which is always exploitation. In the words of the Trafficking Protocol, article 3 \"exploitation shall include, at a minimum, the exploitation of the prostitution of others or other forms of sexual exploitation, forced labor or services, slavery or practices similar to slavery, servitude or the removal of organs\n","a0fe8e18":"**Asar Data was not present, So taking the mean value**","0bea8a4e":"# Nepal Trafficking Data Analysis","3eea0263":"# Facts\n\n* At any given time in 2016, an estimated 40.3 million people are in modern slavery, including 24.9 million in forced labour and 15.4 million in forced marriage.\n\n* It means there are 5.4 victims of modern slavery for every 1,000 people in the world.\n \n* 1 in 4 victims of modern slavery are children.\n \n* Out of the 24.9 million people trapped in forced labour, 16 million people are exploited in the private sector such as domestic work, construction or agriculture; 4.8 million persons in forced sexual exploitation, and 4 million persons in forced labour imposed by state authorities.\n     \n* Women and girls are disproportionately affected by forced labour, accounting for 99% of victims in the commercial sex industry, and 58% in other sectors\n"}}