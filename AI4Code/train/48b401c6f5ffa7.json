{"cell_type":{"1c33c12b":"code","7703f8c0":"code","0d77fa0b":"code","b054ba3d":"code","cd80057b":"code","deae8d52":"code","d19838f8":"code","75b7c679":"code","7cb3dff5":"code","d8c10703":"code","71932d31":"code","8264a284":"code","ad60f68b":"code","6cf254e1":"code","6fd25123":"code","e7e2228b":"code","4c831ce2":"code","3f2421d6":"code","f0c9420d":"code","d146c5ae":"code","d6538754":"code","6f76e1e4":"code","3cbcf006":"code","31f16e58":"code","93d26a56":"code","a18a1034":"code","774de198":"code","05fe72ce":"code","f3938bf6":"markdown","f815b5ce":"markdown","3be37beb":"markdown","9823fe0d":"markdown","d43fe27b":"markdown","843c547e":"markdown","01a43868":"markdown","9ee1a3e7":"markdown","fb925a42":"markdown","c16e5b42":"markdown","5ee698ab":"markdown","135da5be":"markdown"},"source":{"1c33c12b":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7703f8c0":"import numpy\nimport pandas\nimport matplotlib\nimport seaborn\nimport collections\nimport warnings","0d77fa0b":"matplotlib.pyplot.style.use(\"seaborn-whitegrid\")\nwarnings.filterwarnings(\"ignore\")","b054ba3d":"trainDataFrame = pandas.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntestDataFrame = pandas.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\ntestPassengerId = testDataFrame.PassengerId","cd80057b":"trainDataFrame.columns","deae8d52":"trainDataFrame.head()","d19838f8":"trainDataFrame.describe()","75b7c679":"trainDataFrame.info()","7cb3dff5":"def BarPlot(var):\n    \"\"\"\n    input: variable (example: \"Sex\")\n    \n    output: bar plot & value count\n    \"\"\"\n    \n    variable = trainDataFrame[var]\n    \n    # Count number of categorical variable (value\/sample)\n    variableValue = variable.value_counts()\n    \n    #visulize\n    matplotlib.pyplot.figure(figsize=(9, 3))\n    matplotlib.pyplot.bar(variableValue.index, variableValue)\n    matplotlib.pyplot.xticks(variableValue.index, variableValue.index.values)\n    matplotlib.pyplot.ylabel(\"Frequency\")\n    matplotlib.pyplot.title(var)\n    matplotlib.pyplot.show()\n    print(\"{0}: \\n {1}\".format(var, variableValue))","d8c10703":"categories1 = [\"Survived\", \"Sex\", \"Pclass\", \"Embarked\", \"SibSp\", \"Parch\"]\n\nfor category in categories1:\n    BarPlot(category)","71932d31":"categories2 = [\"Cabin\", \"Name\", \"Ticket\"]\n\nfor category in categories2:\n    print(\"{0}\\n\".format(trainDataFrame[category].value_counts()))","8264a284":"def PlotHistogram(var):\n    matplotlib.pyplot.figure(figsize = (9, 3))\n    matplotlib.pyplot.hist(trainDataFrame[var], bins = 50)\n    matplotlib.pyplot.xlabel(variable)\n    matplotlib.pyplot.ylabel(\"Frequency\")\n    matplotlib.pyplot.title(\"\\\"{0}\\\" Distribution With Histogram\".format(var))\n    matplotlib.pyplot.show()","ad60f68b":"numericVariables = [\"Fare\", \"Age\", \"PassengerId\"]\n\nfor variable in numericVariables:\n    PlotHistogram(variable)","6cf254e1":"# Pclass - Survived\n\ntrainDataFrame[[\"Pclass\", \"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","6fd25123":"# Sex - Survived\n\ntrainDataFrame[[\"Sex\", \"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","e7e2228b":"# SibSp - Survived\n\ntrainDataFrame[[\"SibSp\", \"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","4c831ce2":"# Parch - Survived\n\ntrainDataFrame[[\"Parch\", \"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by = \"Survived\", ascending = False)","3f2421d6":"def DetectOutliers(dataFrame,features):\n    outlierIndices = []\n    \n    for c in features:\n        #1st quartile\n        q1 = numpy.percentile(dataFrame[c],25)\n        \n        #3dt quartile\n        q3 = numpy.percentile(dataFrame[c],75)\n        \n        #IQR\n        iqr = q3-q1\n        \n        #Outlier Step\n        outlierStep = iqr * 1.5\n        \n        #Detect Outlier and Their Indeces\n        outlierListColumn = dataFrame[(dataFrame[c] < q1 - outlierStep) | (dataFrame[c] > q3 + outlierStep)].index\n        \n        #Store Indeces\n        outlierIndices.extend(outlierListColumn)\n        \n    outlierIndices = collections.Counter(outlierIndices)\n    multipleOutliers = list(i for i, v in outlierIndices.items() if v > 2)\n    \n    return multipleOutliers","f0c9420d":"trainDataFrame.loc[DetectOutliers(trainDataFrame,[\"Age\", \"SibSp\", \"Parch\", \"Fare\"])]","d146c5ae":"# Drop Otuliers\n\ntrainDataFrame = trainDataFrame.drop(DetectOutliers(trainDataFrame,[\"Age\", \"SibSp\", \"Parch\", \"Fare\"]),axis = 0).reset_index(drop = True)","d6538754":"trainDataFrameLength = len(trainDataFrame)\ntrainDataFrame = pandas.concat([trainDataFrame, testDataFrame], axis = 0).reset_index(drop = True)\n\ntrainDataFrame.head()","6f76e1e4":"trainDataFrame.columns[trainDataFrame.isnull().any()]","3cbcf006":"trainDataFrame.isnull().sum()","31f16e58":"trainDataFrame[trainDataFrame.Embarked.isnull()]","93d26a56":"trainDataFrame.boxplot(\n    column=\"Fare\", \n    by=\"Embarked\"\n)","a18a1034":"trainDataFrame.Embarked = trainDataFrame.Embarked.fillna(\"C\")","774de198":"trainDataFrame[trainDataFrame.Fare.isnull()]","05fe72ce":"trainDataFrame.Fare = trainDataFrame.Fare.fillna(trainDataFrame[trainDataFrame.Pclass == 3].Fare.mean())","f3938bf6":"# **Introduction**\n\nThe sinking of Titanic is one of the most notorious shipwredcks in the history. In 1912, during her voyage, the titanic sank after colliding with an iceberg, killint 1502 people out of 2224 passengersand crew.\n    \n<font color=\"turquoise\">\nContent:\n    \n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](8#)\n    *[Find Missing Value](9#)\n    *[Fill Missing Value](10#)","f815b5ce":"<a id=\"7\"><\/a>\n<\/br>\n# OutlineDetection","3be37beb":"<a id=\"5\"><\/a>\n<\/br>\n## Numerical Variable","9823fe0d":"<a id=\"10\"><\/a>\n<\/br>\n# Fill Missing Value\n   * Embarked has 2 missing values\n   * Fare has only 1 missing value","d43fe27b":"<a id=\"4\"><\/a>\n<\/br>\n## Categorical Variable:","843c547e":"<a id=\"8\"><\/a>\n<\/br>\n# Missing Value\n   * Find Missing Value\n   * Fill Missing Value","01a43868":"<a id=\"2\"><\/a>\n<\/br>\n# VariableDescription\n\n1. PassengerId: Unique id number to each passenger.\n1. Survived: Passenger survive(1) or died(0).\n1. Pclass: Passenger class.\n1. Name: Name of passenger\n1. Sex:  Gender of passenger\n1. Age: Age of passenger\n1. SibSp: Number of siblings\/spouses\n1. Parch: Number of parents\/children\n1. Ticket: Ticket number\n1. Fare: Amount of money spent on ticket\n1. Cabin: Cabin category\n1. Embarked: Port where passenger embarked (C=Cherbourg, Q=Queenstown, S=Southhampton)","9ee1a3e7":"<a id=\"6\"><\/a>\n<\/br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","fb925a42":"<a id=\"9\"><\/a>\n<\/br>\n# Find Missing Value","c16e5b42":"<a id=\"3\"><\/a>\n<\/br>\n# Univariate Variable Analysis\n* Categorical Variable Analysis: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n* Numerical Variable Analysis: Fare, Age and PassengerId","5ee698ab":"<a id=\"1\"><\/a>\n<\/br>\n# Load and Check Data","135da5be":"* float64(2): Fare, Age\n* int64(5): Pclass, Sibsp, Parch, Survived, PassengerId\n* object(5): Name, Sex, Ticket, Cabin, Embarked"}}