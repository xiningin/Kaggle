{"cell_type":{"345bbac0":"code","66e60185":"code","4b896fb7":"code","ed63aa18":"code","62191650":"code","f93cc8ad":"code","70f59a75":"code","3892b889":"code","05cbfcce":"code","ebf783d0":"code","87beb089":"code","95d01ece":"code","1c4594a2":"code","59a97fc4":"code","a0c83157":"code","abe472d6":"code","57c439ec":"code","1b1e5bd7":"markdown","bdf02e62":"markdown","f738d017":"markdown","82f61637":"markdown"},"source":{"345bbac0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66e60185":"!pip install datascience","4b896fb7":"from datascience import *\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd","ed63aa18":"masks = Table.read_table('..\/input\/state-political-party-vs-maskvaccination-data\/masks.csv')\nvaccine_acceptance = Table.read_table('..\/input\/state-political-party-vs-maskvaccination-data\/vaccine_acceptance.csv')\nmasks","62191650":"vaccine_acceptance #this table also has the State's Political party which will be our target variable later on","f93cc8ad":"masks = masks.with_column('%_wearing_masks', masks.column(1)).drop(1)\nvaccine_acceptance = vaccine_acceptance.with_column('%_fine_with_vaccine', vaccine_acceptance.column(1)).drop(1)\nmasks","70f59a75":"vaccine_acceptance","3892b889":"#reordering column in vaccine_acceptance table\n\nvaccine_acceptance = vaccine_acceptance.with_column(\"Political_Party\", vaccine_acceptance.column(1)).drop(1)\nvaccine_acceptance","05cbfcce":"#combining the tables\n\ncompiled_table = masks.with_columns(\n    '%_fine_with_vaccine', vaccine_acceptance.column(1),\n    'Political_Party', vaccine_acceptance.column(2)\n)\n\ncompiled_table","ebf783d0":"compiled_table_democrat = compiled_table.where('Political_Party', 'D')\ncompiled_table_republican = compiled_table.where('Political_Party', 'R')\ncompiled_table_democrat","87beb089":"x = compiled_table_democrat.column(1)\ny = compiled_table_democrat.column(2)\nplt.scatter(x, y, color = 'blue', label = \"Democratic State\")\n\nx = compiled_table_republican.column(1)\ny = compiled_table_republican.column(2)\nplt.scatter(x, y, color = 'red', label = \"Republican State\")\nplt.xlabel('% of population wearing Masks')\nplt.ylabel('% of population comfortable with vaccine')\n\nplt.legend()\nplt.show()","95d01ece":"# Now we just need to import and use scikit learn to create a model that predicis if states are republican or demographic based on mask and vaccine data","1c4594a2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix","59a97fc4":"df = compiled_table.to_df()\nfeatures = ['%_wearing_masks', '%_fine_with_vaccine']\nX = df[features]\ny = df['Political_Party']","a0c83157":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30)","abe472d6":"logreg = LogisticRegression()\nlogreg.fit(X_train,y_train)\ny_pred=logreg.predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","57c439ec":"cnf_matrix = metrics.confusion_matrix(y_test, y_pred)\ncnf_matrix","1b1e5bd7":"# Machine Learning Portion","bdf02e62":"# Cleaning the Data and Making the Tables","f738d017":"## Renaming the columns in the Table","82f61637":"# Graphing our Table Data"}}