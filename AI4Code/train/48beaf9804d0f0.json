{"cell_type":{"105eb38f":"code","6edf56d1":"code","d81a2b08":"code","a5cfd0a6":"code","ad6126a9":"code","7f5e4674":"code","b838dddc":"code","0c2f8467":"code","1172381f":"code","fdf7aa3a":"code","2eaf8fce":"code","445efa60":"code","8a81c1e1":"code","05c354d8":"code","f5ebbda2":"markdown","5139a143":"markdown","ea9d8cfb":"markdown","0862114d":"markdown","264377b1":"markdown","8a69fa48":"markdown","4d22e525":"markdown"},"source":{"105eb38f":"import numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt","6edf56d1":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d81a2b08":"dt_1 = pd.read_csv('\/kaggle\/input\/boston-housing-dataset\/train.csv')\nprint(\"Print first 5 subjects\")\nprint(dt_1.head())\nprint(\"\")\nprint(\"Basic descriptive statistics for all features\")\nprint(dt_1.describe())\nprint(\"\")\nprint(\"Feaure attributes\")\nprint(dt_1.info())","a5cfd0a6":"print(plt.hist(dt_1['AGE']))","ad6126a9":"corr = dt_1.corr()\n#print(corr)","7f5e4674":"corr.style.background_gradient(cmap='coolwarm')","b838dddc":"abs_corr = np.abs(corr['MEDV'])\nprint(abs_corr.sort_values(ascending=False).head(7))","0c2f8467":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\n#define model\nLlm = linear_model.Lasso(alpha = 0.1)","1172381f":"y = dt_1['MEDV']\nX = dt_1.iloc[:, 0:13]\n\n#Spllit the 406 data into 80% training, 20% testing\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, train_size=0.8)","fdf7aa3a":"Llm.fit(train_X, train_y)\nprdt = Llm.predict(val_X)","2eaf8fce":"#check the coefficient\n#print(Llm.coef_)\nX_corr = abs_corr.iloc[0:13]\ncoeff = pd.DataFrame(Llm.coef_)\n#pd.concat([X_corr, coeff], axis=1)\nprint(coeff)","445efa60":"#apply mean absolute error and mean squared error to evaluate performance\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nprint(\"Mean absolute error:\")\nprint(mean_absolute_error(prdt, val_y))\nprint(\"Mean squared error:\")\nprint(mean_squared_error(prdt, val_y))","8a81c1e1":"from sklearn.linear_model import LassoCV\n#define model\nLcvlm = LassoCV(cv=5, random_state=0)\nCVreg = Lcvlm.fit(X, y)\nprdt_cv = Lcvlm.predict(val_X)\n\nprint(\"Lasso CV Mean absolute error:\")\nprint(mean_absolute_error(prdt_cv, val_y))\nprint(\"Lasso CV Mean squared error:\")\nprint(mean_squared_error(prdt_cv, val_y))","05c354d8":"exam_test = pd.read_csv('\/kaggle\/input\/boston-housing-dataset\/test.csv')\n#print(exam_test.iloc[:, 1:])\nresult_Lcv = Lcvlm.predict(exam_test.iloc[:, 1:])\n#print(result_Lcv)\n\nresult_Lcv_submit = pd.DataFrame({\"ID\": exam_test['ID'], \"MEDV\":result_Lcv})\nprint(result_Lcv_submit.head())\n\npd.DataFrame(result_Lcv_submit).to_csv(\"submit_SJ.csv\", index=False)","f5ebbda2":"# Data science explorer - project 001 Boston Housing","5139a143":"#### Generate the result for competition w\/ cross-validation Lasso","ea9d8cfb":"#### From the sklearn cheat sheet, try LASSO first","0862114d":"#### Since it's a relatively small dataset, try cross-validation Lasso","264377b1":"#### There is no variable with missing value. No need to do the imputation.","8a69fa48":"#### present the distribution of variables","4d22e525":"\n#### Brief explanation of each variable. Let's make guessing before look into the correlation plot. \n1. CRIM - per capita crime rate by town **Negative**\n2. ZN - proportion of residential land zoned for lots over 25,000 sq.ft. **Positive**\n3. INDUS - proportion of non-retail business acres per town. **Negative**\n4. CHAS - Charles River dummy variable (1 if tract bounds river; 0 otherwise) **Positive?**\n5. NOX - nitric oxides concentration (parts per 10 million) **Negative?**\n6. RM - average number of rooms per dwelling **Positive**\n7. AGE - proportion of owner-occupied units built prior to 1940 **Negative?**\n8. DIS - weighted distances to five Boston employment centres **Negative (wrong)**\n9. RAD - index of accessibility to radial highways **Positive (wrong)**\n10. TAX - full-value property-tax rate per (dollar) 10,000 **Positive (wrong)**\n11. PTRATIO - pupil-teacher ratio by town **Positive (wrong) => high ratio means less teacher in the area**\n12. B - 1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town **Negative (wrong)**\n13. LSTAT - % lower status of the population **Negative**\n14. MEDV - Median value of owner-occupied homes in (dollar) 1000's"}}