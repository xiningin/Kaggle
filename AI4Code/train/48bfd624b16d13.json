{"cell_type":{"f7f047b1":"code","1cf3e36c":"code","f57fd078":"code","49b84b87":"code","663ce7f3":"code","1b1b1d8c":"code","aa2b4a83":"code","1d962842":"code","72ed5fa0":"markdown","0bfe36d7":"markdown","9c824304":"markdown"},"source":{"f7f047b1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.feature_selection import mutual_info_regression as mir\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.cluster import KMeans\nfrom sklearn import preprocessing\nfrom sklearn.metrics import log_loss\nfrom collections import Counter\nimport seaborn as sns\nimport lightgbm as lgbm\nfrom sklearn import metrics\nfrom sklearn import model_selection\nfrom tqdm import tqdm\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","1cf3e36c":"test_features        = pd.read_csv('\/kaggle\/input\/lish-moa\/test_features.csv')\ntrain_features       = pd.read_csv('\/kaggle\/input\/lish-moa\/train_features.csv')\ntrain_targets_scored = pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_scored.csv')\nsample_submission    = pd.read_csv('\/kaggle\/input\/lish-moa\/sample_submission.csv')\n\ng_feat  = [col for col in train_features if 'g-' in col] \nc_feat  = [col for col in train_features if 'c-' in col]\ncp_feat = [col for col in train_features if 'cp_' in col]\ntargets = [col for col in sample_submission.columns[1:]]","f57fd078":"# feat    = ['g-128',\n#  'g-231',\n#  'g-600',\n#  'g-201',\n#  'g-385',\n#  'g-300',\n#  'g-207',\n#  'g-357',\n#  'c-68',\n#  'g-168',\n#  'g-392',\n#  'g-180',\n#  'g-22',\n#  'g-269',\n#  'g-91',\n#  'g-522',\n#  'g-312',\n#  'g-84',\n#  'g-708',\n#  'g-701',\n#  'g-562',\n#  'g-75',\n#  'g-628',\n#  'g-166',\n#  'g-122',\n#  'g-47',\n#  'g-68',\n#  'g-208',\n#  'g-157',\n#  'c-14',\n#  'c-98',\n#  'g-206',\n#  'g-636',\n#  'g-100',\n#  'g-34',\n#  'g-175',\n#  'c-65',\n#  'g-202',\n#  'g-512',\n#  'g-689'] ","49b84b87":"feature_pick = pd.read_csv('..\/input\/notebookf054760cbd\/feature_pick.csv')","663ce7f3":"feat_d = {}\nfor id_, gr in feature_pick.groupby('targets'):\n    feat_d[id_] = [x for x in gr['index'] if 'cp_' not in x]","1b1b1d8c":"top_50 = train_targets_scored[targets].sum(axis=0).sort_values(ascending=False).index[:50]","aa2b4a83":"merge_df  =  pd.concat([train_features, train_targets_scored], axis=1)\nmerge_df  =  merge_df[merge_df['cp_type']!='ctl_vehicle']","1d962842":"for target in top_50:\n    feat = feat_d[target]\n    \n    df0  = merge_df[feat+[target]]\n    df0  = df0.melt(id_vars=[target], var_name='feat', value_name='value').astype({'value': 'float32'})\n\n    plt.figure(figsize=(30, 8))\n    sns.boxplot(data=df0, x='feat', y='value', hue=target)\n    plt.show()","72ed5fa0":"## Some 'random' pick feature","0bfe36d7":"### Top 30-important feature for each target","9c824304":"## Plot top-50 target"}}