{"cell_type":{"a19d7cec":"code","5a9209fb":"code","e70fc8a3":"code","0a3e7ea9":"code","8362c124":"code","5e0eaa29":"code","e64a4c74":"code","fbe9c7e7":"code","36fa990a":"code","8f3cdf0d":"code","6b917a11":"code","c8caa508":"code","e914669b":"code","84b8874f":"code","b0f9b0fb":"code","eef95358":"code","02a10042":"code","b8603180":"code","e6089cf3":"code","a7b7ca9a":"code","50c21eeb":"code","5305ee17":"code","484febe3":"markdown","ce2d6377":"markdown","206e6303":"markdown","c6f73059":"markdown","27c2906b":"markdown","84c3ba22":"markdown"},"source":{"a19d7cec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a9209fb":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","e70fc8a3":"train.head(5)","0a3e7ea9":"train.sample(6)","8362c124":"train.shape","5e0eaa29":"train.columns","e64a4c74":"train.isnull().sum()","fbe9c7e7":"train.describe()","36fa990a":"train.info()","8f3cdf0d":"train.corr()['Survived']","6b917a11":"# import data visulization module\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c8caa508":"train['Survived']","e914669b":"train['Survived'].isnull().sum()","84b8874f":"train['Survived'].unique()","b0f9b0fb":"train['Survived'].value_counts().plot(kind='bar')","eef95358":"sns.countplot(train['Survived'])","02a10042":"train['Survived'].value_counts().plot(kind='pie', autopct='%.2f')\nplt.show()","b8603180":"train['Pclass']","e6089cf3":"train['Pclass'].unique()","a7b7ca9a":"train['Pclass'].isnull().sum()","50c21eeb":"sns.countplot(train['Pclass'])\nplt.show()","5305ee17":"train['Pclass'].value_counts().plot(kind='pie',autopct=('%.2f'))","484febe3":"**Read dataset**","ce2d6377":"**Working On Pclass Columns**","206e6303":"# Working on Categorical Data","c6f73059":"# 1: EDA OF Univariate Analysis","27c2906b":"# Looking  Data ","84c3ba22":"**Working On Survived Columns**"}}