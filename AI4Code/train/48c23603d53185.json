{"cell_type":{"5c26506b":"code","4d16e2ed":"code","d798314c":"code","22d84873":"code","3609b2a4":"code","a273e16b":"code","49df8a49":"code","f41d73fa":"code","81cc5f37":"code","0a422719":"code","1337678d":"code","460dff3b":"code","537dbd1a":"code","176444ed":"code","f7ed2c85":"code","7a057379":"code","9478b294":"code","1c764209":"code","7ebc3707":"code","33f01978":"code","d1ea38e7":"code","36ca8563":"code","41d1e1d7":"code","edb6b704":"code","7a707f63":"code","1725a7f7":"code","bc759053":"code","4ff1a82f":"code","284a13ac":"code","60929380":"code","afb33a00":"markdown"},"source":{"5c26506b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d16e2ed":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d798314c":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')","22d84873":"df.head()","3609b2a4":"df.columns","a273e16b":"df.info()","49df8a49":"df.isnull().sum()","f41d73fa":"x= df.Rating.mean()\ndf.Rating.fillna(x,inplace= True)\n","81cc5f37":"df.isnull().sum()","0a422719":"df.Rating.max()\ndf[df.Rating>5]\n","1337678d":"df.drop([10472],inplace= True)","460dff3b":"df.Rating.max()","537dbd1a":"\ndf[\"Installs\"]= df.Installs.apply(lambda x: str(x).replace(\"+\",\"\"))\ndf[\"Installs\"]= df.Installs.apply(lambda x: str(x).replace(\",\",\"\"))\ndf[\"Installs\"]= df.Installs.apply(lambda x: float(x))\n\ndf.Installs.dtype\n","176444ed":"df.Installs","f7ed2c85":"df.Price.unique()\ndf[\"Price\"]= df.Price.apply(lambda x:str(x).replace(\"$\",\"\"))\ndf[\"Price\"]= df.Price.apply(lambda x: float(x))\n\ndf.Price.dtype\n","7a057379":"df.Reviews.unique()\ndf[\"Reviews\"]= df.Price.apply(lambda x: int(x))","9478b294":"#Most installed apps\nsns.set_style(\"whitegrid\")\nx= df.groupby(\"App\").Installs.sum().sort_values(ascending= False).head(10)\nsns.barplot(x.values,x.index)","1c764209":"#Top paid apps\nx= df[df[\"Type\"]==\"Paid\"]\ny= x.groupby(\"App\").Installs.sum().sort_values(ascending= False).head(10)\nsns.barplot(y.values,y.index)","7ebc3707":"#Highest paid apps\nx= df.groupby(\"App\").Price.sum().sort_values(ascending= False).head(10)\nax= sns.barplot(x.values,x.index)\nax.set_xlabel(\"Price\")","33f01978":"x= df.Type.value_counts()\nlabel= [\"Paid\",\"free\"]\nplt.pie(x,labels= label,autopct= \"%1.1f%%\")\nplt.show()","d1ea38e7":"sns.lmplot(x=\"Rating\",y=\"Installs\",data= df)","36ca8563":"df.Category.unique()\nx= df.Category.value_counts()\nlabels= list(x.index)\nplt.figure(figsize= (10,10))\nplt.pie(x,labels= labels,autopct= \"%1.1f%%\")\nplt.show()","41d1e1d7":"plt.figure(figsize= (20,10))\nax= sns.countplot(x= \"Genres\",data= df)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.show","edb6b704":"#Top rated categories\ndf.groupby(\"Category\").Rating.mean().sort_values(ascending= False)","7a707f63":"#Top rated Genres\ndf.groupby(\"Genres\").Rating.mean().sort_values(ascending= False).head(10)","1725a7f7":"#least rated categories\ndf.groupby(\"Category\").Rating.mean().sort_values(ascending= False).tail(10)","bc759053":"#least rated Genres\ndf.groupby(\"Genres\").Rating.mean().sort_values(ascending= False).tail(10)","4ff1a82f":"plt.figure(figsize= (10,10))\nax= sns.boxplot(x= \"Content Rating\",y= \"Rating\",data= df)\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\nplt.show()","284a13ac":"plt.figure(figsize= (10,10))\nax= sns.violinplot(x= \"Type\",y= \"Rating\",data= df)\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\nplt.show()","60929380":"#categories with most installs\ndf.groupby(\"Category\").Installs.sum().sort_values(ascending=False).head(10)","afb33a00":"cleaning data"}}