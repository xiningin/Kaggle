{"cell_type":{"aba4b2dd":"code","a043da03":"code","15444e14":"code","8f0c356e":"code","6b817627":"code","bd3f7799":"code","f95f0797":"code","27b4640e":"code","9f7473c1":"code","796d7405":"code","dc70d65e":"code","3320e527":"markdown","3c7ff2e2":"markdown","37bf4b66":"markdown","6ebe98c4":"markdown","6489a0d8":"markdown","063ae8b2":"markdown","c57d590a":"markdown","121b17b0":"markdown","4db2be33":"markdown","725c16b8":"markdown","cfcc2803":"markdown","1ca66112":"markdown","44226fae":"markdown","6f2db7cd":"markdown","1e455137":"markdown"},"source":{"aba4b2dd":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a043da03":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Skip Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.filterwarnings(action = 'ignore', category = DeprecationWarning)\nwarnings.filterwarnings(action = 'ignore', category = FutureWarning)","15444e14":"df = pd.read_csv(\"\/kaggle\/input\/classictenis\/tenis.csv\")\ndf.head()","8f0c356e":"df.isna().sum()","6b817627":"df.describe(include = 'all')","bd3f7799":"num_cols = [\"temperature\", \"humidity\"]\ncat_cols = [\"outlook\", \"windy\",\"play\"]\n","f95f0797":"# Numerical features\ndf[num_cols] = df[num_cols].astype(\"int\")\n\n# Categorical Features\ndf[cat_cols] = df[cat_cols].astype(\"category\")","27b4640e":"for col in cat_cols:\n    print(col,\"--->>>\",df[col].unique())","9f7473c1":"fig = plt.figure(figsize=(20,20))\n\nfor i in range(0,len(cat_cols)):\n    ax = fig.add_subplot(len(cat_cols), 2, i+1)\n    g = sns.countplot(df[cat_cols[i]])\n    ","796d7405":"plt.figure(figsize = (12,5))\nplt.subplot(1,2,1)\nsns.countplot(df[\"outlook\"], hue = df[\"play\"])\nplt.subplot(1,2,2)\nsns.countplot(df[\"windy\"], hue = df[\"play\"])","dc70d65e":"fig = plt.figure(figsize=(20,20))\n\nfor i in range(0,len(num_cols)):\n    ax = fig.add_subplot(len(cat_cols), 2, i+1)\n    g = sns.distplot(df[num_cols[i]])\n    plt.grid()","3320e527":"It's a good news that this dataset has no NaN values. So let's continue further\n___","3c7ff2e2":"Alright! \n\nIt's time for some visualiztion. We would plot few graphs to understand the data.\n___","37bf4b66":"### Observations:\n1. **outlook**, **windy** and **play** are the *categorical features*\n2. **temperature* and **humidity** are the *numerical features*\n3. There are 3 unique categories in the feature **outlook**\n4. There are 2 unique categories in the features **windy** and **play**\n\nLet's see what are the unique values in each features","6ebe98c4":"### As a precautionary step, it is always recommended to convert the features into appropriate datatypes","6489a0d8":"As per our hypothesis, these are the following observations:\n1. The game is always played when the **outlook** is overcast\n2. A lot of time the game is played either on **sunny** days or **rainy** days. The obsevations may seem unconventional, but that is what the data says.\n3. As per our hypothesis, the games are played when there is **NO WIND**. Hence, we *fail to reject* our hypothesis.","063ae8b2":"\nI believe that **.describe()** is quite underrated. Although, it is one of the main functions in Python which enables us to see the distribution of the data.\n\n*This dataset is very small; but for larger datasets, **.describe()** is really helpul*","c57d590a":"1. Importing the Libraries\n\nLet's start by importing the required libraries for this particular notebook, mainly for:\n   - Reading dataframe\n   - Visualization","121b17b0":"### Observations:\n1. For maximum days, the **outlook** was rainy and sunny. It is a mixed situation. We shall get more clarity further.\n2. The good part is that for a lot of days, there weather was **NOT WINDY**. This also is a favourble condition to play the game\n3. And as it is seen, the games were **played** maximum times\n\nLet's dig deep into **outlook** and **windy** if we reject, or fail to reject, out intial hypothesis.","4db2be33":"### Observation:\n1. Both our numerical variables **temperature** and **humidity** are normally distributed. This becomes a good thing when we build our models.\n___\n","725c16b8":"Importing the dataframe","cfcc2803":"Here comes the end to the notebook!\n\nIf there are any questions\/comments, please do post them in the comments section below.","1ca66112":"# <center>Classic Tennis<\/center>\n___\n\n\n### <i>Introduction<\/i>\n\nHey, Kagglers!\nI have made this basic EDA notebook. This dataset is small. However, it would be interesting to see what insights can be drawn!\n\nSo let's start!","44226fae":"## Visualization\n\nLet us start with the *categorical features* first","6f2db7cd":"Let us check if there exists any *NaN* values","1e455137":"___\nNow let's visualize the *numerical features*"}}