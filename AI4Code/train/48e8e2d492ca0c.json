{"cell_type":{"a509336b":"code","33bce575":"code","53c74e5e":"code","fa35d1e8":"code","888481e3":"code","1d0d45c4":"code","fcabfb83":"code","9e1519e7":"code","050ba069":"code","2e02357e":"code","06d80884":"code","43270181":"code","5b2a6a5a":"code","0a5440f1":"code","f10081e1":"code","3874cf68":"code","6d057b5a":"code","42375d50":"code","4b18d43c":"code","c5311d01":"code","f6c09d08":"markdown","72cada34":"markdown","ed172a1f":"markdown","0a1cddf5":"markdown","32f141f5":"markdown","2ecc9085":"markdown"},"source":{"a509336b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","33bce575":"titanictrain = pd.read_csv(\"..\/input\/train.csv\")","53c74e5e":"titanictrain.head()","fa35d1e8":"sex = pd.get_dummies(titanictrain['Sex'],drop_first=True)\nembark = pd.get_dummies(titanictrain['Embarked'],drop_first=True)","888481e3":"titanictrain.drop(['Sex','Embarked'],axis=1,inplace=True)\ntrain = pd.concat([titanictrain,sex,embark],axis=1)","1d0d45c4":"train.head()","fcabfb83":"import re\n\ndef splitter(cols):\n    return re.split('\\, |\\. ',cols)[1]\n\n\ntrain['Name'] = train['Name'].apply(splitter)","9e1519e7":"train.head()","050ba069":"def age_imputation(cols):\n    \n    Age=cols[0]\n    Name=cols[1]\n    \n    if pd.isnull(Age):\n        if Name == 'Mr':\n            return 32\n        elif Name == 'Mrs':\n            return 36\n        elif Name == 'Miss':\n            return 22\n        elif Name == 'Master':\n            return 5\n        elif Name == 'Dr':\n            return 42\n    else:\n        return Age","2e02357e":"train['Age'] = train[['Age','Name']].apply(age_imputation,axis=1)","06d80884":"from sklearn.ensemble import RandomForestClassifier","43270181":"from sklearn.model_selection import train_test_split","5b2a6a5a":"train.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)","0a5440f1":"X = train.drop('Survived',axis=1)\ny = train['Survived']","f10081e1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)","3874cf68":"rfc = RandomForestClassifier(n_estimators=200)","6d057b5a":"rfc.fit(X_train,y_train)","42375d50":"rfc_pred = rfc.predict(X_test)","4b18d43c":"from sklearn.metrics import classification_report, confusion_matrix","c5311d01":"print(classification_report(rfc_pred,y_test))","f6c09d08":"Import relevant libraries","72cada34":"So we get a precision 82% abd a recall of 81%, which is not bad for a first attempt.\nWe'll come back with more feature engineering.","ed172a1f":"First, we turn categorical variables to numerical and add them to our dataframe","0a1cddf5":"We drop the Cabin column for now since it's missing too much data.","32f141f5":"We'll use a random forest classifier for this first attempt","2ecc9085":"We define a funtion to grab only the title from the name column.\nWe do this so we can impute age based on title, since different titles were used for children and adults (e.g. the honorific \"Master\" was used for young boys."}}