{"cell_type":{"ce04f7cf":"code","44782c44":"code","d7b80e35":"code","37c3947a":"code","cdea20f9":"code","ba9f6b3c":"markdown","2a355bf8":"markdown"},"source":{"ce04f7cf":"import pandas as pd\nimport numpy as np\n\ndata = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndef label(label):\n        if label == 'Iris-setosa': \n            return \"1\"\n        if label == 'Iris-versicolor': \n            return \"2\"\n        if label == 'Iris-virginica': \n            return \"3\"\n        if label == \"1\": \n            return 'Iris-setosa'\n        if label == \"2\": \n            return 'Iris-versicolor'\n        if label == \"3\": \n            return 'Iris-virginica'\n        \ny = np.array(data.drop(\"Species\", axis=1)).reshape(150, 5)\nX = np.array(list(map(lambda x: label(x), data[\"Species\"])))","44782c44":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\n\ndef knn(data, target):\n    (training_data, test_data, training_labels, test_labels) = train_test_split(\n        data, target, test_size=0.2, random_state=100)\n    \n    n = 3\n    classifier = KNeighborsClassifier(n_neighbors=n)\n    classifier.fit(training_data, training_labels)\n    score = classifier.score(test_data, test_labels)\n    for k in range(1, 40):\n        classifier = KNeighborsClassifier(n_neighbors=k)\n        classifier.fit(training_data, training_labels)\n        result = classifier.score(test_data, test_labels)\n        if score < result:\n            score = result\n            n = k\n    \n    classifier = KNeighborsClassifier(n_neighbors=n)\n    classifier.fit(training_data, training_labels)\n    score = classifier.score(test_data, test_labels)\n    return (classifier, score, n)","d7b80e35":"knn, score, n = knn(y, X)\n\n# Row to Sample\nrow = y[38]\ntarget = np.array(row)\nresult = knn.predict(target.reshape(1, -1))[0]","37c3947a":"import matplotlib.pyplot as plt\n\ncolors = np.array(list(map(lambda x: int(x) * 0.250, X)))\nplt.scatter(data[\"PetalLengthCm\"] \/ data[\"PetalWidthCm\"], data[\"SepalLengthCm\"] \/ data[\"SepalWidthCm\"], c=colors)\nplt.xlabel('Sepal Width vs. Sepal Length')\nplt.ylabel('Petal Width vs. Petal Length')\nplt.title(\"K-Nearest Neightbors Plot\")\nplt.draw()","cdea20f9":"percent = int(score * 100)\nprint(\"Neightbors:\", n, \" Accuracy:\", percent, \"% \", label(result))","ba9f6b3c":"## Virginia State Petal Classification","2a355bf8":"### K-Nearest Neighbors "}}