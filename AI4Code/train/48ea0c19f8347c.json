{"cell_type":{"088d3f72":"code","0179c1a4":"code","0bdbf5a2":"code","3e2fb369":"code","865ea3d8":"code","09023061":"code","42aee26a":"code","af431fd3":"code","e79cd451":"code","9bda2b95":"code","0c040450":"code","9cb501bb":"code","bf8d997d":"code","6e5f5976":"code","b21a73fb":"code","6f0db191":"code","75938f96":"code","30c803bf":"code","c69df397":"code","d66e0f33":"code","b3c1bfe8":"code","b2cad360":"code","d90145e3":"code","72a8537d":"code","cc4d2e8c":"code","f5e307dd":"code","96139662":"code","c90cbbd2":"code","5440d1fc":"code","ae768e64":"code","17527ef2":"code","55fc89a3":"code","47dff4c0":"code","b4583cec":"code","060d2724":"code","5bec8b80":"code","7f00f43c":"code","199aac30":"code","13f7f18d":"code","ac009cce":"code","813fa8a8":"code","832328e5":"code","e3cac8e7":"code","d71abae1":"code","cd8c2a8b":"code","ead53aa4":"code","228fd845":"code","e3a5e45f":"code","4287e893":"code","1c3b6650":"code","374a9c43":"code","3e7150f5":"code","6fe6f7a6":"markdown","5ca7ca34":"markdown","3f1aa467":"markdown","87b39e7b":"markdown","317bd08d":"markdown","cd4eb80e":"markdown","a2b2c3c2":"markdown","34691b9d":"markdown","4cca285a":"markdown"},"source":{"088d3f72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0179c1a4":"\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","0bdbf5a2":"data = pd.read_csv('..\/input\/gtd\/globalterrorismdb_0718dist.csv',encoding = \"ISO-8859-1\")","3e2fb369":"data.head()","865ea3d8":"data.tail(10)","09023061":"data.describe()","42aee26a":"data.shape","af431fd3":"data.size","e79cd451":"data.info()","9bda2b95":"data.isnull().sum()","0c040450":"# removing rows with >50% null values\ncols = data.columns\ncols","9cb501bb":"# using thres to drop >50% nulls\n\nthresh = len(data) * .5\ndata.dropna(thresh = thresh, axis = 1, inplace = True)","bf8d997d":"data.shape # decreased data a lot","6e5f5976":"data.isnull().sum()\/len(data) *100","b21a73fb":"# dropping duplicates\ndata.drop_duplicates() # this removes duplicates that are row based","6f0db191":"data.dtypes","75938f96":"int_cols=data.select_dtypes(include=np.number).columns.tolist()","30c803bf":"# Filling data with respective medians and modes\nfor i in int_cols:\n  data[i] = data[i].fillna(data[i].median())","c69df397":"data.isnull().sum()","d66e0f33":"string_cols=data.select_dtypes(include=object).columns.tolist()\nstring_cols","b3c1bfe8":"for i in string_cols:\n  print(data[i].describe())   # checking whether I can input mode to this data\n  print('--------------------')","b2cad360":"for i in ['provstate','city','target1','natlty1_txt']:\n  data[i]=data[i].fillna(data[i].mode()[0])  # cause its string","d90145e3":"data.columns","72a8537d":"data.head()","cc4d2e8c":"data=data[['iyear', 'imonth', 'iday', 'extended', 'country',\n       'country_txt', 'region', 'region_txt', 'provstate', 'city', 'latitude',\n       'longitude', 'specificity', 'vicinity', 'summary', 'crit1', 'crit2',\n       'crit3', 'doubtterr', 'multiple', 'success', 'suicide', 'attacktype1',\n       'attacktype1_txt', 'targtype1', 'targtype1_txt', 'targsubtype1',\n       'targsubtype1_txt', 'corp1', 'target1', 'natlty1', 'natlty1_txt',\n       'gname', 'guncertain1', 'individual', 'nperps', 'nperpcap', 'claimed',\n       'weaptype1', 'weaptype1_txt', 'weapsubtype1', 'nkill', 'nkillus', 'nkillter', 'nwound', 'nwoundus',\n       'nwoundte', 'property', 'ishostkid','dbsource']] # taking required columns for my analysis","f5e307dd":"plt.figure(figsize=(20,6))\nsns.countplot(data['iyear']).set_title('Year wise attacks')\nplt.xticks(rotation=60)","96139662":"plt.figure(figsize=(10,6))\nsns.countplot(data['imonth']).set_title('Month wise attacks')","c90cbbd2":"data[data['imonth']==0]","5440d1fc":"data.drop(data[data['imonth']==0].index,axis=0,inplace=True)","ae768e64":"data[data['imonth']==0] # Now cleaned, Yay!!","17527ef2":"plt.figure(figsize=(12,5))\nsns.countplot(data['iday'])","55fc89a3":"data[data['iday']==0]","47dff4c0":"data.drop(data[data['iday']==0].index,axis=0,inplace=True) # dropping ","b4583cec":"plt.figure(figsize=(12,5))\nsns.countplot(data['iday'])","060d2724":"country_wise=data['country_txt'].value_counts().reset_index()\ncountry_wise.rename(columns={\"index\":'Country Name','country_txt':'Count'},inplace=True)\ncountry_wise","5bec8b80":"sns.set_theme(style=\"whitegrid\")\n\n# Initialize the matplotlib figure\nf, ax = plt.subplots(figsize=(8,6))\n# sns.set_color_codes(\"muted\")\nsns.color_palette(\"pastel\") # Set2 , (\"husl\", 9), (\"flare\", as_cmap=True)\"pastel\"\nsns.barplot(x=\"Count\", y=\"Country Name\", data=country_wise[:10])\nplt.title('Top 10 Most Affected Countries')\n# plt.xlabel(' ')\n# plt.ylabel('')\nsns.despine()\nplt.show()","7f00f43c":"region_wise=data['region_txt'].value_counts().reset_index()\nregion_wise.rename(columns={\"index\":'Region Name','region_txt':'Count'},inplace=True)\nregion_wise","199aac30":"ax = sns.barplot(x=\"Count\", y=\"Region Name\", data=region_wise,\n                 palette=\"Blues_d\").set_title('Region wise attacks')","13f7f18d":"city_wise=data['city'].value_counts().reset_index()\ncity_wise.rename(columns={\"index\":'City Name','city':'Count'},inplace=True)\ncity_wise","ac009cce":"ax = sns.barplot(x=\"Count\", y=\"City Name\", data=city_wise[:10],\n                 palette=\"Reds_d\").set_title('Top 10 Attacked cities')","813fa8a8":"attack_type=data['attacktype1_txt'].value_counts().reset_index()\nattack_type.rename(columns={\"index\":'Attack type','attacktype1_txt':'Count'},inplace=True)\nattack_type","832328e5":"ax = sns.barplot(x=\"Count\", y=\"Attack type\", data=attack_type,\n                 palette=\"Purples_d\").set_title('Most used attack type')","e3cac8e7":"target_type=data['targtype1_txt'].value_counts().reset_index()\ntarget_type.rename(columns={\"index\":'Target type','targtype1_txt':'Count'},inplace=True)\ntarget_type","d71abae1":"ax = sns.barplot(x=\"Count\", y=\"Target type\", data=target_type,\n                 palette=\"Greens_d\").set_title('Target types')","cd8c2a8b":"target1_type=data['target1'].value_counts().reset_index()\ntarget1_type.rename(columns={\"index\":'Target type','target1':'Count'},inplace=True)\ntarget1_type","ead53aa4":"ax = sns.barplot(x=\"Count\", y=\"Target type\", data=target1_type[:10],\n                 palette=\"Purples_d\").set_title('Top Vulnerable groups by attacks')","228fd845":"nationality_type=data['natlty1_txt'].value_counts().reset_index()\nnationality_type.rename(columns={\"index\":'Target Nationality','natlty1_txt':'Count'},inplace=True)\nnationality_type","e3a5e45f":"ax = sns.barplot(x=\"Count\", y=\"Target Nationality\", data=nationality_type[:10],\n                 palette=\"afmhot\").set_title('Top 10 nationals targeted in these attacks')","4287e893":"gang_name=data['gname'].value_counts().reset_index()\ngang_name.rename(columns={\"index\":'Gang','gname':'Count'},inplace=True)\ngang_name","1c3b6650":"ax = sns.barplot(x=\"Count\", y=\"Gang\", data=gang_name[:10],\n                 palette=\"Blues_r\").set_title('Top 10 Terrorist groups')","374a9c43":"weapon_name=data['weaptype1_txt'].value_counts().reset_index()\nweapon_name.rename(columns={\"index\":'Weapons','weaptype1_txt':'Count'},inplace=True)\nweapon_name","3e7150f5":"ax = sns.barplot(x=\"Count\", y=\"Weapons\", data=weapon_name,\n                 palette=\"cividis\").set_title('Most loved weapons \ud83d\ude02')","6fe6f7a6":"# Data Cleaning","5ca7ca34":"- More number of attacks in 2014","3f1aa467":"Month can't be zeros, dropping those zeros","87b39e7b":"Zero days \ud83d\udc46\ud83c\udffc, What!!!","317bd08d":"- Not registered in database and Baghdad are top affected by attacks","cd4eb80e":"No duplicates... For now","a2b2c3c2":"# Univariate Analysis","34691b9d":"- Middle East & North Africe are most Affected regions","4cca285a":"- Iran nationals are most targetted"}}