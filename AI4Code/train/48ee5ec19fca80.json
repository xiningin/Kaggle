{"cell_type":{"ca80d7ba":"code","db705cab":"code","9382600e":"code","caff5ffa":"code","42aedd28":"code","9b940af5":"code","2394f3be":"code","19803643":"code","753b2057":"code","3be90d4f":"code","8fb2b88e":"markdown"},"source":{"ca80d7ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db705cab":"import matplotlib.pyplot as plt, seaborn as sns\nfrom scipy.cluster.hierarchy import linkage, dendrogram, cut_tree","9382600e":"df = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf.head()","caff5ffa":"# A copy of the dataframe is created\nnew = df.copy()\n# Gender column in encoded\nnew.Gender = new.Gender.map(lambda x: 1 if x=='Male' else 0)\nnew.head()","42aedd28":"# CustomerID column is dropped\nnew = new.drop('CustomerID', axis=1)\nnew.info()","9b940af5":"# Columns are renamed\nnew = new.rename(columns = {'Annual Income (k$)':'annualIncome', 'Spending Score (1-100)':'spendingScore'})\nnew.head()","2394f3be":"# Dendrogram\nlinks = linkage(new, method='complete')\ndendrogram(links)\nplt.show()","19803643":"df['cluster'] = cut_tree(Z=links, n_clusters=3)\ndf.head()","753b2057":"# Boxplots created for cluster classification\nfor i in df.columns[2:-1]:\n    sns.boxplot(x=df.cluster,y=df[i])\n    plt.show()","3be90d4f":"n=0.2\nbar1= np.arange(2)\nbar2=[i+n for i in bar1]\nbar3=[i+n for i in bar2]\n\nplt.figure(figsize=(20,8))\nplt.bar(bar1,100*df[df.cluster==0].Gender.value_counts().sort_index()\/df[df.cluster==0].Gender.value_counts().sum(), width=n, label='cluster 0')\nplt.bar(bar2,100*df[df.cluster==1].Gender.value_counts().sort_index()\/df[df.cluster==1].Gender.value_counts().sum(), width=n, label='cluster 1')\nplt.bar(bar3,100*df[df.cluster==2].Gender.value_counts().sort_index()\/df[df.cluster==2].Gender.value_counts().sum(), width=n, label='cluster 2')\n\nplt.xticks(bar2, ['Female','Male'])\nplt.xlabel('Gender', fontsize=12)\nplt.ylabel('Percentage Count', fontsize=12)\nplt.title('Gender count in each cluster', fontsize=14)\nplt.grid(color='#95a5a6', linestyle='--', linewidth=2, axis='y', alpha=0.7)\nplt.legend()\nplt.show()","8fb2b88e":"## From the above plots it is clear that cluster 2 spends least in spite of having high annual income. Moreover, there are more males in cluster 2 than females unlike other clusters in which females are more."}}