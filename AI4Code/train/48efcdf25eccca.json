{"cell_type":{"47234451":"code","8e879935":"code","99139192":"code","1c0e2437":"code","ec0706a4":"code","a15c0417":"code","43c56b75":"code","5c934107":"code","229bc7bf":"code","d2ad6f59":"code","63ca6978":"code","9ddc760c":"code","a33d21be":"code","2fadb3bf":"code","3a204fe2":"code","f2595344":"code","75110198":"code","08abd725":"code","8a3b8552":"code","ee0e97c4":"markdown","6d7544a2":"markdown","5f7e75bc":"markdown","a9a12e32":"markdown","151f4b9e":"markdown","7d8ef426":"markdown","dfbce68c":"markdown","abf99f55":"markdown","1d7f7ff2":"markdown","1bce0f6b":"markdown","23c22fe8":"markdown","381dd5a6":"markdown","2aa328ab":"markdown","69794711":"markdown","f2ad962a":"markdown","2e6b63d5":"markdown","ab565303":"markdown"},"source":{"47234451":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8e879935":"import pandas as pd\n\ndata = pd.read_csv('..\/input\/train.csv',index_col=False)\ndata.head(5)","99139192":"print('\u5171\u6709\u6570\u636e: %d \u6761'%len(data.index))\nprint('\u7279\u5f81\u603b\u6570\u4e3a: %d \u4e2a'%(len(data.columns)-2))","1c0e2437":"from collections import Counter\n\nCounter(data['target'])","ec0706a4":"print('\u8d1f\u7c7b\u548c\u6b63\u7c7b\u7684\u6bd4\u4f8b: {}'.format(float(179902)\/20098))","a15c0417":"isnull = data.isnull().any()\nisnull.values","43c56b75":"labels = data['target'].values\ndata = data.drop(['target','ID_code'],axis=1)\ndata.loc[:10]\nlen(labels),len(data)","5c934107":"from sklearn import preprocessing\n\nscaler = preprocessing.StandardScaler().fit(data)\nscaler # \u7f29\u653e\u5668\uff0c\u4fbf\u4e8e\u5bf9test.csv\u4e2d\u7684\u6570\u636e\u505a\u540c\u6837\u7684\u6807\u51c6\u5316\u53d8\u6362","229bc7bf":"data = scaler.transform(data)\ndata[:10]","d2ad6f59":"from imblearn.over_sampling import RandomOverSampler\nfrom collections import Counter\n\nsampler = RandomOverSampler(random_state=0) # \u9ed8\u8ba4\u91cd\u590d\u91c7\u6837\nX_resampled,Y_resampled = sampler.fit_sample(data,labels)\nprint(X_resampled.shape,Y_resampled.shape)\nCounter(Y_resampled)","63ca6978":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,Y_train,Y_test = train_test_split(X_resampled,Y_resampled,test_size=0.2)\nlen(Y_train),len(Y_test)","9ddc760c":"from sklearn.linear_model import LinearRegression","a33d21be":"model = LinearRegression()\nmodel.fit(X_train,Y_train)","2fadb3bf":"from sklearn.metrics import roc_auc_score\n\nresult = model.predict(X_test)\nroc_score = roc_auc_score(Y_test,result)\nprint('\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684ROC: %.3f'%roc_score)","3a204fe2":"import pandas as pd\n\ntest_data = pd.read_csv('..\/input\/test.csv',index_col=0)\ntest_data[:10]","f2595344":"test_code = test_data.index\ntest_code","75110198":"test_data = scaler.transform(test_data)\ntest_data[:10]","08abd725":"result = model.predict(test_data)","8a3b8552":"sub = pd.DataFrame(data={'ID_code':test_code,'target':result})\nsub.to_csv('sample_submission.csv',index=False)","ee0e97c4":"# \u9009\u62e9\u7b97\u6cd5:LinearRegression","6d7544a2":"## \u4fdd\u5b58\u5ba2\u6237\u7f16\u7801\u7d22\u5f15","5f7e75bc":"## \u63d0\u4ea4\u7ed3\u679c","a9a12e32":"## \u6807\u51c6\u5316:\u7f29\u653e\u6bd4\u4f8b\u8981\u4e0e\u8bad\u7ec3\u6570\u636e\u96c6\u76f8\u540c","151f4b9e":"# \u6570\u636e\u6982\u89c8","7d8ef426":"## \u5c06\u7c7b\u522b\u548c\u7279\u5f81\u5206\u79bb","dfbce68c":"## \u67e5\u770b\u662f\u5426\u6709\u7f3a\u5931\u503c","abf99f55":"# \u9884\u6d4b","1d7f7ff2":"# \u6807\u51c6\u5316: \u5bf9\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316","1bce0f6b":"## \u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u7ed3\u679c","23c22fe8":"## \u6570\u636e\u603b\u91cf\u548c\u7279\u5f81\u6570\u91cf","381dd5a6":"## \u8bad\u7ec3\u5206\u7c7b\u5668","2aa328ab":"# \u4e0d\u5e73\u8861\u6570\u636e\u5904\u7406: \u5bf9\u6b63\u7c7b\u8fc7\u91c7\u6837","69794711":"## \u9884\u6d4b\u7ed3\u679c","f2ad962a":"\u8d1f\u7c7b\u7684\u6570\u91cf\u662f\u6b63\u7c7b\u76849\u500d\uff0c\u4e5f\u5c31\u662f\u6b63\u7c7b\u5360\u603b\u91cf\u7684\u53ea\u670910%\u5de6\u53f3","2e6b63d5":"# \u5206\u5272\u6570\u636e\u96c6:\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6","ab565303":"## \u6b63\u8d1f\u7c7b\u522b\u6bd4\u4f8b"}}