{"cell_type":{"1fffd92e":"code","5247e17c":"code","1699481c":"code","10131b52":"code","3fa1a502":"code","e99803bf":"code","0796b3fd":"code","8e17ba0e":"markdown","27205c41":"markdown","587a0cd4":"markdown","38c6b244":"markdown","78b4a73f":"markdown","99c47cea":"markdown","7f7e0824":"markdown","ec74ba60":"markdown","a15a1f93":"markdown","8735b464":"markdown"},"source":{"1fffd92e":"import numpy as np \nimport pandas as pd \n\nfrom tensorflow.keras.applications import ResNet50\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, GlobalAveragePooling2D\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n","5247e17c":"num_classes = 17\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\ndata_directory = \"..\/input\/recaptcha\/Recaptcha Dataset\"\n\ncaptchaCracker = Sequential()\ncaptchaCracker.add(ResNet50(include_top=False,pooling='avg',weights=resnet_weights_path))\ncaptchaCracker.add(Dense(num_classes,activation='softmax'))\ncaptchaCracker.layers[0].trainable = False\ncaptchaCracker.compile(optimizer='sgd', \n                     loss='categorical_crossentropy', \n                     metrics=['accuracy'])","1699481c":"image_size = 224\n\nvalidation_data_generator = ImageDataGenerator(preprocessing_function=preprocess_input,\n                                validation_split=0.2)\n\ninput_data_generator = ImageDataGenerator(preprocessing_function=preprocess_input,\n                                horizontal_flip=True,\n                                width_shift_range = 0.2,\n                                height_shift_range = 0.2,\n                                validation_split=0.2)\n","10131b52":"train_generator = input_data_generator.flow_from_directory(\n                                        directory= data_directory,\n                                        target_size=(image_size, image_size),\n                                        batch_size= 10,\n                                        class_mode='categorical',\n                                        subset = 'training')\n                                               \n\nvalidation_generator = validation_data_generator.flow_from_directory(\n                                        directory= data_directory,\n                                        target_size=(image_size, image_size),\n                                        batch_size= 10,\n                                        class_mode='categorical',\n                                        subset = 'validation')","3fa1a502":"fit_stats = captchaCracker.fit_generator(train_generator,\n                                       steps_per_epoch= 4,\n                                       epochs = 3,\n                                       validation_data = validation_generator,\n                                       validation_steps= 1)","e99803bf":"train_generator = input_data_generator.flow_from_directory(\n                                        directory= data_directory,\n                                        target_size=(image_size, image_size),\n                                        batch_size= 130,\n                                        class_mode='categorical',\n                                        subset = 'training')\n                                               \n\nvalidation_generator = validation_data_generator.flow_from_directory(\n                                        directory= data_directory,\n                                        target_size=(image_size, image_size),\n                                        batch_size= 130,\n                                        class_mode='categorical',\n                                        subset = 'validation')","0796b3fd":"fit_stats = captchaCracker.fit_generator(train_generator,\n                                       steps_per_epoch= 5,\n                                       epochs = 5,\n                                       validation_data = validation_generator,\n                                       validation_steps= 1)","8e17ba0e":"# Introduction\nIn this notebook, I am using a Tensorflow computer vision neural network to decide what is within a ReCaptcha picture.\n\n\n### What is ReCaptcha\nReCaptcha is a system that aims to prevent bots and DDoS attacks from accessing websites by showing a series of pictures with a certain object hidden in them, usually only partly shown or distorted. Humans can prove that they aren't bots by selecting the pictures with the object in them, as each picture can easily be identified by a human, but bots cannot identify the object and thus are unable to access the webpage.\n\n\n### Expectations\nI do not expect a particularly high accuracy, as ReCaptcha aims to throw bots just like this off by showing pictures that are difficult for a computer to recognise. \n\n","27205c41":"# Preparing data\n\n### Splitting my data\nSince my data is not split, I had to split my data into training and validation manually, using validation_split to put aside 20% of my data for validation.\n\n### Augmentation\nI decided to augment the input data for my model. Data augmentation is a way that we can prepare the neural network to deal with more than what the data gives it, by manipulating the data to be flipped, colour swapped or shifted the neural network learns to deal with more than just the photos in the dataset. Augmentation also works to negate overfitting, as the data is much more different than the validation. \n\nAugmentation is especially important for ReCaptcha because the objects are often not in focus or shifted\/tilted to throw computers off. \n\nIn the code below, I am generating augmented data for the training, and nonaugmented for validation, so that I can test against realistic images, with a 20% validation split.","587a0cd4":"# Transfer Learning\nTransfer learning is a deep learning method that uses a pre trained model, that has already been taught to do its job, and applies that learning to a new set of data. I will be using ResNet50 for transfer learning, which removes the head and replaces it with our own, effectively \"transferring\" the same model and training but using it for a different set of data, with a different set of inputs and outputs, while still retaining the knowledge of the previous neural network. \n\nIn the cell below, we will be defining our neural network's model that we will be using to solve the recaptchas.","38c6b244":"# Tuning\nI tuned a small amount of hyperparameters in order to maximise my result. The most notable parameters I tuned were:\n\n*  epochs (originally 3, now 5)\n*  steps_per_epoch (originally 4, now 5)\n*  batch_size (originally 10, now 130)\n\nI found that these higher values took a lot longer to run, but achieved more accurate results, which is in my opinion a worthy tradeoff. \n\nThe cell below builds the new generators for the neural network!","78b4a73f":"# Evaluation\nBelow, we are fitting the final version of the training generator against the validation in order to find statistics correlating to the accuracy of our neural network.\n\nThe cell below will show the accuracy of the new training and validation generators!","99c47cea":"# Generating models\nIn the cell below, I am building my training and validation models from the data generated in the code above. These two generators will be used in the evaluation to test the accuracy of the model. \n","7f7e0824":"**That's really high accuracy!**\nBut, maybe suspiciously so. \n\nWhile steps were taken to work around overfitting, there is still a possibility that the model is much better at recognising some objects as compared to others. Since there are nearly 200 thousand car pictures, but only 725 boats, the model was trained with many more car pictures than boats. This may mean that the model may be able to pick some objects up very easily, and test well in theory, but in practice on a real ReCaptcha page may preform poorly.\n\n\nAll in all though, I am happy with the accuracy of the neural network, as it performed much better than i assumed it would.\n\n","ec74ba60":"#### Let's have a look at the accuracy of our predicitions when comparing our training data to our validation in the cell below!","a15a1f93":"# Conclusion\nMy neural network was very good at recognising ReCaptcha images, which was entirely unexpected and entirely contrary to my expectations, given that the nature of the dataset is made to be difficult for computers to process. The accuracy of my neural network is most likely due to the incredibly large dataset, as the dataset has over 200 thousand images. \n\nIn a practical sense, as a solution to bypass DDoS or bot protection, this neural network is not viable, as it takes far too long and far too much processing power to run. \n\nIf i were to redo this neural network, i would most likely tune the values for my data augmentation to better prepare my neural network for edge cases or hard to recognise data. I would also like more epochs, but the large dataset and bad processing power does not make it efficient to do so.","8735b464":"# Necessary imports\nThese are libraries that are needed to enable our code to run, please run it before you run the other cells :)"}}