{"cell_type":{"7c580f88":"code","9494d8a8":"code","3300ba18":"code","9b71e99b":"code","7fe0c62e":"code","bf5be1c7":"code","b675875c":"code","a0136e05":"code","b16e64da":"code","94635b4b":"code","75b66673":"code","dcd5a81d":"code","5e5c2282":"code","b3676cff":"code","856872ad":"code","0f07fd68":"code","2d62f6a0":"code","640e90bd":"code","1b3c70b1":"code","3c1c33b0":"code","67f78a89":"code","199bf2fe":"code","480d9c65":"code","0ac05012":"code","f194b0be":"code","9ccf6c7b":"code","2946dc5f":"code","32092d1e":"code","2540466d":"code","49d25fc8":"code","67e3559d":"code","670e23aa":"code","7fec9284":"code","e309797c":"code","a4864139":"code","c5f29a8c":"code","df5c7572":"code","5189bfc9":"code","62195e07":"code","f7624d04":"code","29d99140":"code","480100dc":"code","c1ec79cf":"code","80b038d3":"code","ca3ff46d":"code","9d5c9436":"code","6f4b08a9":"code","424335a6":"code","a12f56d0":"code","7cdb00e1":"code","0d07ac0a":"code","490bd597":"code","8b3f2b94":"code","4bea6b7f":"code","8d34923e":"code","654f58b2":"code","2969158a":"code","a7cf15cc":"code","281efcf2":"code","26190ab1":"code","6c5b14a7":"code","f74b849e":"code","2fb98c58":"code","1f576856":"code","c8cc65bf":"code","ddc47d73":"code","4c6d843f":"code","008d79b6":"code","a861de9d":"code","9af8e3fb":"code","1e642652":"code","88bc7037":"code","e0825f2f":"code","783de6cd":"code","d923f490":"code","26e09424":"code","88f36bb3":"code","5ce3a559":"code","b104d9ee":"code","f29c9b1b":"code","819d92dc":"code","57a19bc1":"code","af3d2328":"code","e54e2c93":"code","9a0035bb":"code","6f27597a":"code","9fac44b9":"code","f5fcc125":"code","7bea3e1a":"code","9cb3bf58":"code","c86e92be":"code","3efba9ec":"code","9cd98f6d":"code","3e7af947":"code","37bbbd1c":"code","c427ce91":"code","0a81c839":"code","c721fe74":"code","640bf19d":"markdown","46db102f":"markdown","351e301e":"markdown","3753547e":"markdown","b72f07d7":"markdown","498ed75a":"markdown","9d5c76d9":"markdown","364a8716":"markdown","4815bc95":"markdown"},"source":{"7c580f88":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns #grafikle\u015ftirme i\u00e7in ","9494d8a8":"data=pd.read_csv(\"\/kaggle\/input\/adult-income-dataset\/adult.csv\")\ndf=data.copy() #ana veriyi her ihtimale kar\u015f\u0131 kopyalayal\u0131m.\ndf.head(10) # ilk 10 veriye bakal\u0131m.","3300ba18":"print(\"Sat\u0131r Say\u0131s\u0131 : {}\\nS\u00fctun Say\u0131s\u0131 : {}\".format(df.shape[0],df.shape[1]))","9b71e99b":"numeric_describe=df.describe().T \nnumeric_describe  ","7fe0c62e":"object_describe=df.describe(include=[\"object\"]).T #n\u00fcmerik de\u011fi\u015fkenler i\u00e7in yapt\u0131\u011f\u0131m\u0131z\u0131, kategorik de\u011fi\u015fkenler i\u00e7in de yapal\u0131m.\nobject_describe","bf5be1c7":"object_columns=df.select_dtypes(include=[\"object\"]).columns # kategorik verilerin \u00f6zellik adlar\u0131n\u0131 bir de\u011fi\u015fkene atayal\u0131m.\nfor i in range(len(object_columns)):\n    print(\"----- {}-----\".format(object_columns[i]))\n    print(df[object_columns[i]].value_counts()) #her bir \u00f6zellik i\u00e7in ayr\u0131 ayr\u0131 kategori say\u0131lar\u0131na bakal\u0131m.","b675875c":"df.isnull().sum() #Ka\u00e7ar tane eksik veri oldu\u011funu g\u00f6zlemleyelim.","a0136e05":"df=df.replace(\"?\",np.nan) #Soru i\u015faretiyle belirtilen yerleri nan de\u011ferlere \u00e7evirelim.","b16e64da":"df.isnull().sum() #Tekrar eksik veri say\u0131s\u0131n\u0131 g\u00f6zlemleyelim.","94635b4b":"import missingno as msno #eksik verileri g\u00f6rselle\u015ftirmek i\u00e7in missingno'yu import edelim.\nmsno.matrix(df) #eksik verileri g\u00f6rselle\u015ftirelim.","75b66673":"sns.pairplot(df) #Verilerin genel da\u011f\u0131l\u0131m\u0131na bakal\u0131m.","dcd5a81d":"df.dtypes # veri tiplerine bakal\u0131m.","5e5c2282":"df[\"education\"].value_counts() ","b3676cff":"df[\"educational-num\"].value_counts()","856872ad":"df.drop(\"education\",axis=1,inplace=True) # education s\u00fctununu silelim.","0f07fd68":"df.head()","2d62f6a0":"from pandas.api.types import CategoricalDtype  #ordinale \u00e7evirmek i\u00e7in categoricaldtype import edelim\ndf[\"educational-num\"]=df[\"educational-num\"].astype(CategoricalDtype(ordered=True)) #ordinal hale \u00e7evirelim.\ndf[\"educational-num\"].head()","640e90bd":"df[\"educational-num\"].value_counts()","1b3c70b1":"df.dtypes","3c1c33b0":"df.head()","67f78a89":"df.corr() #korelasyonlara bakal\u0131m","199bf2fe":"corr=df.corr()\nsns.heatmap(corr,annot=True) #korelasyonlar i\u00e7in \u0131s\u0131 haritas\u0131 olu\u015ftural\u0131m.","480d9c65":"sns.countplot(df[\"income\"]) #hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131na bakal\u0131m.","0ac05012":"df.skew() #\u00e7arp\u0131kl\u0131k","f194b0be":"df.kurtosis() #bas\u0131kl\u0131k","9ccf6c7b":"#Ayk\u0131r\u0131 verileri incelemek i\u00e7in boxplot g\u00f6rselleri olu\u015ftural\u0131m.\nplt.figure(figsize=(30,15))\n\nplt.subplot(321)\nsns.boxplot(df[\"age\"])\nplt.xticks(rotation=90) # yaz\u0131y\u0131 dikey hale getirdik\n\nplt.subplot(322)\nsns.boxplot(df[\"capital-loss\"])\nplt.xticks(rotation=90)\n\nplt.subplot(323)\nsns.boxplot(df[\"capital-gain\"])\nplt.xticks(rotation=90)\n\nplt.subplot(324)\nsns.boxplot(df[\"fnlwgt\"])\nplt.xticks(rotation=90)\n\nplt.subplot(325)\nsns.boxplot(df[\"hours-per-week\"])\nplt.xticks(rotation=90)\n\nplt.subplots_adjust(hspace=0.5) #grafikler aras\u0131 bo\u015flu\u011fu ayarlad\u0131k\nplt.show()","2946dc5f":"df_loss_sifirsiz=df.loc[df[\"capital-loss\"]!=0,:] #capital-loss'taki 0 olmayan de\u011ferleri bir de\u011fi\u015fkene atayal\u0131m.\ndf_loss_sifirsiz.head()","32092d1e":"df_gain_sifirsiz=df.loc[df[\"capital-gain\"]!=0,:] #capital-gain'deki 0 olmayan de\u011ferleri bir de\u011fi\u015fkene atayal\u0131m.\ndf_gain_sifirsiz.head()","2540466d":"#capital-gain ve capital-loss i\u00e7in 0's\u0131z de\u011ferleri boxplot ile g\u00f6rselle\u015ftirelim.\nplt.figure(figsize=(22,7))\n\nplt.subplot(121)\nsns.boxplot(df_gain_sifirsiz[\"capital-gain\"])\nplt.xticks(rotation=90) # yaz\u0131y\u0131 dikey hale getirdik\n\nplt.subplot(122)\nsns.boxplot(df_loss_sifirsiz[\"capital-loss\"])\nplt.xticks(rotation=90)","49d25fc8":"numeric_columns=list(df.select_dtypes(include=[\"int64\"]).columns) #numerik veri i\u00e7eren s\u00fctun isimlerini bir de\u011fi\u015fkene atayal\u0131m.\nnumeric_columns","67e3559d":"alt_sinirlar=[]\nust_sinirlar=[]\nIQR_degerleri=[]\n\nfor i in range(len(numeric_columns)):\n    \n    Q1=df[numeric_columns[i]].quantile(0.25) #1.\u00c7EYREK\n    Q3=df[numeric_columns[i]].quantile(0.75) #3.\u00c7EYREK\n    IQR=Q3-Q1 #bu aral\u0131\u011f\u0131 1.5 ile \u00e7arp\u0131p alt s\u0131n\u0131r ile \u00fcst s\u0131n\u0131rdan \u00e7\u0131kar\n    IQR_degerleri.append(IQR)\n    alt_sinir=Q1-(1.5*IQR) # alt e\u015fik de\u011fer\n    alt_sinirlar.append(alt_sinir)\n    ust_sinir=Q3+1.5*IQR #\u00fcst e\u015fik de\u011fer\n    ust_sinirlar.append(ust_sinir)","670e23aa":"IQR_table=pd.DataFrame({\"numeric_columns\":numeric_columns,\"alt_sinirlar\":alt_sinirlar,\n                        \"ust_sinirlar\":ust_sinirlar,\"IQR_degerleri\":IQR_degerleri})\nIQR_table #capital-gain ve capital-loss'un 0 dahil hali","7fec9284":"Q1_loss=df[df[\"capital-loss\"]!=0][\"capital-loss\"].quantile(0.25)\nQ3_loss=df[df[\"capital-loss\"]!=0][\"capital-loss\"].quantile(0.75)\nIQR_loss=Q3_loss-Q1_loss\nalt_sinir_loss=Q1_loss-(1.5*IQR_loss)\nust_sinir_loss=Q3_loss+(1.5*IQR_loss)\n\nprint(\"Capital-Loss Alt S\u0131n\u0131r :\",alt_sinir_loss)\nprint(\"Capital-Loss \u00dcst S\u0131n\u0131r :\",ust_sinir_loss)","e309797c":"Q1_gain=df[df[\"capital-gain\"]!=0][\"capital-gain\"].quantile(0.25)\nQ3_gain=df[df[\"capital-gain\"]!=0][\"capital-gain\"].quantile(0.75)\nIQR_gain=Q3_gain-Q1_gain\nalt_sinir_gain=Q1_gain-(1.5*IQR_gain)\nust_sinir_gain=Q3_gain+(1.5*IQR_gain)\n\nprint(\"Capital-Gain i\u00e7in Alt S\u0131n\u0131r :\",alt_sinir_gain)\nprint(\"Capital-Gain i\u00e7in \u00dcst S\u0131n\u0131r :\",ust_sinir_gain)","a4864139":"df_loss_sifirsiz[(df_loss_sifirsiz[\"capital-loss\"]<alt_sinir_loss )|( df_loss_sifirsiz[\"capital-loss\"]>ust_sinir_loss)][\"capital-loss\"].shape","c5f29a8c":"df_gain_sifirsiz[(df_gain_sifirsiz[\"capital-gain\"]<alt_sinir_gain )|( df_gain_sifirsiz[\"capital-gain\"]>ust_sinir_gain)][\"capital-gain\"].shape","df5c7572":"df_gain_sifirsiz[\"capital-gain\"].mode()[0] ","5189bfc9":"df_loss_sifirsiz[\"capital-loss\"].mode()[0]","62195e07":"df[((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]<alt_sinir_gain )) | ((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]>ust_sinir_gain ))].head()","f7624d04":"aykiri_gain=((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]<alt_sinir_gain )) | ((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]>ust_sinir_gain ))","29d99140":"aykiri_loss=((df[\"capital-loss\"]!=0 )& (df[\"capital-loss\"]<alt_sinir_loss)) | ((df[\"capital-loss\"]!=0 )& (df[\"capital-loss\"]>ust_sinir_loss ))","480100dc":"df.loc[aykiri_gain,\"capital-gain\"]=df_gain_sifirsiz[\"capital-gain\"].mode()[0]","c1ec79cf":"df.loc[aykiri_loss,\"capital-loss\"]=df_loss_sifirsiz[\"capital-loss\"].mode()[0]","80b038d3":"print(\"Ya\u015f i\u00e7in Ayk\u0131r\u0131 G\u00f6zlem Say\u0131s\u0131: {}\".format(df[(df[\"age\"]<(alt_sinirlar[0]))|(df[\"age\"]>(ust_sinirlar[0]))].shape[0]))","ca3ff46d":"print(\"hours-per-week Ayk\u0131r\u0131 G\u00f6zlem Say\u0131s\u0131 :{}\".format(df[(df[\"hours-per-week\"]<(alt_sinirlar[4]))|(df[\"hours-per-week\"]>(ust_sinirlar[4]))].shape[0]))","9d5c9436":"df.drop(df[df[\"age\"]>ust_sinirlar[0]].index,inplace=True) # ya\u015f s\u00fctunundaki ayk\u0131r\u0131 de\u011ferlerden kurtulal\u0131m.","6f4b08a9":"df.head()","424335a6":"print(\"Final Weight Ayk\u0131r\u0131 G\u00f6zlem Say\u0131s\u0131 :{}\".format(df[(df[\"fnlwgt\"]<(alt_sinirlar[1]))|(df[\"fnlwgt\"]>(ust_sinirlar[1]))].shape[0]))","a12f56d0":"df.drop(df[df[\"fnlwgt\"]>900000].index,inplace=True) #boxplota bakarak final weight i\u00e7in ayk\u0131r\u0131 de\u011ferlerden kurtulal\u0131m","7cdb00e1":"numeric_describe","0d07ac0a":"numeric_describe_2=df.describe().T","490bd597":"df.isnull().sum() #Eksik g\u00f6zlem say\u0131lar\u0131na tekrar bakal\u0131m.","8b3f2b94":"msno.matrix(df)","4bea6b7f":"df[\"occupation\"].value_counts().plot.barh(color=\"red\")","8d34923e":"df[\"workclass\"].value_counts().plot.barh(color=\"orange\")","654f58b2":"df[\"native-country\"].value_counts()","2969158a":"\nfor i in [\"occupation\",\"workclass\",\"native-country\"]:\n    df[i].fillna(df[i].mode()[0],inplace=True)\n","a7cf15cc":"df.isnull().sum().sum() #Toplam eksik g\u00f6zlem say\u0131s\u0131n\u0131 kontrol edelim.","281efcf2":"df[\"occupation\"].value_counts()","26190ab1":"df[\"workclass\"].value_counts()","6c5b14a7":"numeric_describe_2","f74b849e":"df.describe().T","2fb98c58":"df.head()\ndf_new=df.copy()","1f576856":"df_new=pd.get_dummies(df_new,columns=[\"gender\",\"income\"],drop_first=True)  #erkek olan 1,kad\u0131n olan 0 ; 0 olan 50k'dan k\u00fc\u00e7\u00fck,1 olan b\u00fcy\u00fck","c8cc65bf":"df_new.head()","ddc47d73":"df_new.rename({\"gender_Male\":\"gender\",\"income_>50K\":\"income\"},axis=1,inplace=True)\n","4c6d843f":"df_new=pd.get_dummies(df_new,columns=[\"workclass\",\"marital-status\",\"occupation\",\"relationship\",\"race\",\"native-country\"])","008d79b6":"df_new.head()","a861de9d":"print(\"Yeni s\u00fctun say\u0131s\u0131 :\",df_new.shape[1])","9af8e3fb":"df_new.columns #S\u00fctun adlar\u0131na bakal\u0131m.\n","1e642652":"df_new.shape","88bc7037":"X=df_new.drop(columns=[\"income\"],axis=1)\nX[\"educational-num\"]=X[\"educational-num\"].astype(\"int\") #Daha \u00f6nce ordinale \u00e7evirdik ama modelde sorun yaratt\u0131\u011f\u0131 i\u00e7in type'\u0131n\u0131 int olarak tekrar de\u011fi\u015ftirelim.","e0825f2f":"y=df_new[\"income\"]","783de6cd":"\nfrom sklearn.model_selection import train_test_split #modeli ay\u0131rmak i\u00e7in train_test_split import edelim.\n","d923f490":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.33, \n                                                    random_state=42) ","26e09424":"print(\"X_train sat\u0131r say\u0131s\u0131 :\",X_train.shape[0])","88f36bb3":"print(\"X_test sat\u0131r say\u0131s\u0131 :\",X_test.shape[0])","5ce3a559":"print(\"y_train sat\u0131r say\u0131s\u0131 :\",y_train.shape[0])","b104d9ee":"print(\"y_test sat\u0131r say\u0131s\u0131 :\",y_test.shape[0])","f29c9b1b":"\n#num=df_new.select_dtypes(include=[\"int64\"]).columns\n#from sklearn.preprocessing import MinMaxScaler\n#mms=MinMaxScaler()\n#numeric_X_train=pd.DataFrame(mms.fit_transform(X_train[num]),columns=num,index=X_train.index)\n#X_train_new=pd.concat([numeric_X_train,X_train.iloc[:,6:]],axis=1)\n#X_train_new=pd.concat([X_train_new,X_train[\"educational-num\"]],axis=1)\n\n\n#numeric_X_test=pd.DataFrame(mms.fit_transform(X_test[num]),columns=num,index=X_test.index)\n#X_test_new=pd.concat([numeric_X_test,X_test.iloc[:,6:]],axis=1)\n#X_test_new=pd.concat([X_test_new,X_test[\"educational-num\"]],axis=1)\n\n\n#MinMax Scaler denendi ve sonucu de\u011fi\u015ftirmedi\u011fi i\u00e7in yorum sat\u0131r\u0131 olarak b\u0131rak\u0131ld\u0131.","819d92dc":"\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report # ba\u015far\u0131 metriklerini g\u00f6rmek i\u00e7in.\nfrom sklearn.metrics import roc_auc_score,roc_curve,f1_score #ba\u015far\u0131 metriklerini g\u00f6rmek i\u00e7in\nfrom sklearn.metrics import accuracy_score #do\u011fruluk oran\u0131n\u0131 g\u00f6rmek i\u00e7in\nfrom xgboost import XGBClassifier","57a19bc1":"\nxgb=XGBClassifier(seed=42,max_depth=7)\nxgb_model=xgb.fit(X_train,y_train)\ny_pred=xgb_model.predict(X_test)\nprint(\"XGBoost i\u00e7in Accuracy Score :\",accuracy_score(y_test,y_pred))\nprint(\"XGBoost i\u00e7in E\u011fitim Ba\u015far\u0131s\u0131:\",xgb_model.score(X_train,y_train))\nprint(\"XGBoost i\u00e7in f1 score:\",f1_score(y_test,y_pred))\n\nxgb_train_score=xgb_model.score(X_train,y_train)\nxgb_accuracy_score=accuracy_score(y_test,y_pred)\nxgb_f1_score=f1_score(y_test,y_pred)","af3d2328":"xgb_model #modelin yap\u0131s\u0131na bakal\u0131m.","e54e2c93":"confusion_matrix(y_test,y_pred)","9a0035bb":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = \"Oranges\");\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n\n","6f27597a":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, xgb.predict_proba(X_test)[:,1])#roc de\u011ferini \u00e7izmek i\u00e7in 1 olma olas\u0131l\u0131kla-\nplt.plot([0, 1], [0, 1], 'k--')                                                     #r\u0131n\u0131 kulland\u0131k.\nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Oran\u0131')\nplt.ylabel('True Positive Oran\u0131')\nplt.title('ROC E\u011eR\u0130S\u0130')\nplt.show()\n","9fac44b9":"from sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\nhgb=HistGradientBoostingClassifier(random_state=42,)\nhgb_model=hgb.fit(X_train,y_train)\ny_pred=hgb_model.predict(X_test)\nprint(\"Histogram Based Boosting i\u00e7in Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"Histogram Based Boosting i\u00e7in E\u011fitim Ba\u015far\u0131s\u0131:\",hgb_model.score(X_train,y_train))\nprint(\"Histogram Based Boosting i\u00e7in f1 score:\",f1_score(y_test,y_pred))\n\nhgb_train_score=hgb_model.score(X_train,y_train)\nhgb_accuracy_score=accuracy_score(y_test,y_pred)\nhgb_f1_score=f1_score(y_test,y_pred)\n","f5fcc125":"hgb_model","7bea3e1a":"confusion_matrix(y_test,y_pred)","9cb3bf58":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'YlGnBu');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n\n","c86e92be":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, hgb.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Oran\u0131')\nplt.ylabel('True Positive Oran\u0131')\nplt.title('ROC E\u011eR\u0130S\u0130')\nplt.show()","3efba9ec":"from lightgbm import LGBMClassifier,plot_importance\nlgbm=LGBMClassifier(random_state=42)\nlgbm_model=lgbm.fit(X_train,y_train)\ny_pred=lgbm_model.predict(X_test)\n\nprint(\"LightGBM i\u00e7in Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"LightGBM i\u00e7in E\u011fitim Ba\u015far\u0131s\u0131:\",lgbm_model.score(X_train,y_train))\nprint(\"LightGBM i\u00e7in f1 score:\",f1_score(y_test,y_pred))\n\nlgbm_train_score=lgbm_model.score(X_train,y_train)\nlgbm_accuracy_score=accuracy_score(y_test,y_pred)\nlgbm_f1_score=f1_score(y_test,y_pred)\n","9cd98f6d":"lgbm_model","3e7af947":"confusion_matrix(y_test,y_pred)","37bbbd1c":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'YlGnBu');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n","c427ce91":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, lgbm.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Oran\u0131')\nplt.ylabel('True Positive Oran\u0131')\nplt.title('ROC E\u011eR\u0130S\u0130')\nplt.show()","0a81c839":"## SONU\u00c7LARIN KAR\u015eILA\u015eTIRILMASI","c721fe74":"sonuc_tablo=pd.DataFrame({\n    \"Algoritma\":[\"XGBoost\",\"HGB\",\"LightGBM\"],\n    \"Accuracy\":[xgb_accuracy_score,hgb_accuracy_score,lgbm_accuracy_score],\n    \"E\u011fitim_Ba\u015far\u0131s\u0131\":[xgb_train_score,hgb_train_score,lgbm_train_score],\n    \"f1_score\":[xgb_f1_score,hgb_f1_score,lgbm_f1_score]})\n\nsonuc_tablo.sort_values(ascending=False,by=\"Accuracy\")","640bf19d":"# VER\u0130 \u00d6N \u0130\u015eLEME","46db102f":"## KATEGOR\u0130K VER\u0130 D\u00d6N\u00dc\u015e\u00dcMLER\u0130","351e301e":"## XGBOOST MODEL\u0130","3753547e":"## AYKIRI VER\u0130LER\u0130N \u0130\u015eLENMES\u0130","b72f07d7":"## EKS\u0130K VER\u0130LEN \u0130\u015eLENMES\u0130","498ed75a":"## MODEL\u0130N E\u011e\u0130T\u0130M VE TEST OLARAK AYRILMASI","9d5c76d9":"## HISTOGRAM BASED BOOSTING MODEL\u0130","364a8716":"## LIGHTGBM MODEL\u0130","4815bc95":"XGBoost'un e\u011fitim s\u00fcresi performans\u0131n\u0131 artt\u0131rmaya y\u00f6nelik geli\u015ftirilen ba\u015fka bir gradient boosting algoritmas\u0131 \u00e7e\u015fididir.Daha iyi fit edebilmek i\u00e7in split'lere odaklan\u0131yor.Daha geni\u015f kapsaml\u0131 bir ilk arama yap\u0131yor.Bu sebeple s\u0131n\u0131fland\u0131rma i\u00e7in iyi sonu\u00e7lar \u00fcretebiliyor.Bu sebeple bu algoritma kullan\u0131lm\u0131\u015ft\u0131r."}}