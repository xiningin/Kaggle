{"cell_type":{"07acdd97":"code","401c59d0":"code","06c0b934":"code","4dd05b59":"code","5097c813":"code","2b804760":"code","c796874c":"code","4cd65966":"code","844a9e5a":"code","a50dba60":"code","94b4f092":"code","00d147c8":"code","5c5a14ed":"code","c9b1e967":"code","fadf98d6":"code","961c32b7":"code","fa0faede":"code","aea8f692":"code","bc8f5c6e":"code","4ed24f61":"code","ad4bd178":"code","e22d4be4":"code","6b63705c":"code","1bbc78f9":"code","56bb964b":"code","4aec6f0e":"code","f99a3e24":"code","0b00f63b":"code","3fd0b052":"code","1120f968":"code","a45c2a2a":"code","4c0071df":"code","0f3382bb":"code","acb3c861":"code","56b6cc86":"code","1e313d49":"code","1cce9719":"code","b8283946":"code","2afdd6cb":"code","da4636ee":"code","b0e62e5d":"code","177e8bd8":"markdown","560bfe24":"markdown","0fc5c16f":"markdown","b453a34f":"markdown","45998d9c":"markdown","538db60e":"markdown","64d5b67f":"markdown","90ea44f2":"markdown","6eab291f":"markdown","3d4fb040":"markdown","0c931a96":"markdown","52b110fd":"markdown","5ee71c7f":"markdown","2fb3bef7":"markdown","203ea92a":"markdown","bd34e3e6":"markdown","26489461":"markdown","0e9a2417":"markdown","218941d6":"markdown","3b24e9f9":"markdown","305a45e7":"markdown","d0d60135":"markdown","b68dca6f":"markdown","ded4290a":"markdown","8892c115":"markdown","e34ec521":"markdown","96fd6fc3":"markdown","e9ed9490":"markdown","be43e470":"markdown","81353524":"markdown","6f42b8b4":"markdown"},"source":{"07acdd97":"#basic libraries and visualization\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#statmodels\nimport statsmodels.api as sm\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n#sklearn-dataprocessing\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.feature_selection import f_regression\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PolynomialFeatures, StandardScaler, OneHotEncoder\nfrom sklearn.metrics import r2_score, mean_squared_error\n#sklearn-models\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","401c59d0":"import warnings\nwarnings.filterwarnings('ignore')","06c0b934":"sns.set_theme(style='darkgrid', palette='Accent')\npd.options.display.float_format = '{:,.2f}'.format","4dd05b59":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5097c813":"startups = pd.read_csv(\"\/kaggle\/input\/50-startups\/Data - 50_Startups_regression.csv\")\nstartups.head()","2b804760":"startups.shape","c796874c":"startups.info()","4cd65966":"startups.isnull().sum()","844a9e5a":"startups.duplicated().any()","a50dba60":"startups.describe()","94b4f092":"startups.columns.values","00d147c8":"sns.boxplot(data=startups)","5c5a14ed":"# We can see that in the Profit column we have an outlier. Since we have a small dataset, this could be a problem\n# in predicting the profit, hence, we are going to remove this outlier.\nQ3, Q1 = np.percentile(startups[\"Profit\"], [75 ,25])\nIQR = Q3 - Q1\nstartups = startups[~(startups.Profit< (Q1 - 1.5*IQR))]","c9b1e967":"sns.pairplot(startups[['R&D Spend', 'Administration', 'Marketing Spend', 'Profit']], kind=\"reg\", diag_kind=\"kde\")\nplt.show()","fadf98d6":"sns.distplot(startups[\"Profit\"], bins=30)\nplt.show()","961c32b7":"sns.jointplot(x=startups[\"Profit\"], y=startups[\"R&D Spend\"], kind=\"reg\")\nplt.show()","fa0faede":"g=sns.FacetGrid(data=startups, col=\"State\", height=5, aspect=0.7)\ng.map_dataframe(sns.barplot, palette=\"Accent\")\ng.set_xticklabels(rotation=45)\nplt.show()\n","aea8f692":"startups_prepared = startups.copy()","bc8f5c6e":"numerical = startups_prepared.drop(columns=[\"State\", \"Profit\"])\nvif = pd.DataFrame()\nvif[\"Features\"] = numerical.columns\nvif[\"VIF\"] = [variance_inflation_factor(numerical.values, i) for i in range(numerical.shape[1])]\nvif[\"VIF\"] = round(vif[\"VIF\"], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","4ed24f61":"startups_prepared = pd.get_dummies(startups_prepared, drop_first=True)\nstartups_prepared.rename(columns={\"R&D Spend\":\"R&D\", \"Marketing Spend\":\"Marketing\", \n                         \"State_Florida\":\"Florida\", \"State_New York\":\"New York\"}, inplace=True)","ad4bd178":"startups_prepared.head()","e22d4be4":"X = startups_prepared.drop(columns=\"Profit\")\ny = startups_prepared.Profit","6b63705c":"data = f_regression(X[[\"R&D\", \"Administration\", \"Marketing\"]], y)\nf_df = pd.DataFrame(data, index=[[\"F_statistic\", \"p_value\"]], columns=X[[\"R&D\", \"Administration\", \"Marketing\"]].columns).T\nf_df","1bbc78f9":"X = X.drop(columns=\"Administration\")","56bb964b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=6)","4aec6f0e":"#Checking if the split has approximately equal distributions of values\nprint(f\"Train Florida: {X_train['Florida'].mean()}\")\nprint(f\"Test Florida: {X_test['Florida'].mean()}\")\nprint(f\"Train Marketing: {X_train['Marketing'].mean()}\")\nprint(f\"Test Marketing: {X_test['Marketing'].mean()}\")","f99a3e24":"#scaling inputs\nsc_x = StandardScaler()\nX_train = sc_x.fit_transform(X_train)\nX_test = sc_x.transform(X_test)\n#scaling target variable\nsc_y = StandardScaler()\ny_train = sc_y.fit_transform(y_train.values.reshape(-1, 1))\ny_test = sc_y.transform(y_test.values.reshape(-1, 1))","0b00f63b":"y_train = y_train.reshape(32)\ny_test = y_test.reshape(17)","3fd0b052":"Rsqr_test = []\norder = range(1,4)\nfor n in order:\n    pr = PolynomialFeatures(degree=n)\n    X_train_poly = pr.fit_transform(X_train)\n    X_test_poly = pr.fit_transform(X_test)\n    lr = LinearRegression()\n    lr.fit(X_train_poly, y_train)\n    Rsqr_test.append(lr.score(X_test_poly, y_test))\nRsqr_test","1120f968":"plt.plot(Rsqr_test)\nplt.show()","a45c2a2a":"svr = SVR()\nsvr.fit(X_train, y_train)\nsvr.score(X_test, y_test)","4c0071df":"dt = DecisionTreeRegressor()\ndt.fit(X_train, y_train)\ndt.score(X_test, y_test)","0f3382bb":"rf = RandomForestRegressor()\nrf.fit(X_train, y_train)\nrf.score(X_test, y_test)","acb3c861":"lr = LinearRegression()\nlr.fit(X_train, y_train)\nr2_score = lr.score(X_test, y_test)","56b6cc86":"# Adjusted R-square of the model\nn = X_test.shape[0]\np = X_test.shape[1]\n\nadjusted_r2 = 1-(1-r2_score)*(n-1)\/(n-p-1)\nadjusted_r2","1e313d49":"y_test_hat = lr.predict(X_test)","1cce9719":"plt.scatter(x=y_test, y=y_test_hat, alpha=0.8)\nplt.plot(y_test, y_test, color='darkgreen')\nplt.show()","b8283946":"residuals = y_test - y_test_hat","2afdd6cb":"plt.scatter(y=residuals, x=y_test_hat, alpha=0.8)\nplt.show()","da4636ee":"lr.coef_","b0e62e5d":"lr.intercept_","177e8bd8":"# 4. Model Selection and Evaluation","560bfe24":"## Random Forest regression","0fc5c16f":"## Visualising Categorical Variables","b453a34f":"### R&D Spend vs. Profit Correlation","45998d9c":"**Insights:**\n\n1. We can see normal distributions of numerical variables. \n\n2. R&D Spend and Marketing Spend are in linear relation with target variable.","538db60e":"<img src=https:\/\/a-static.projektn.sk\/2020\/11\/Startup.jpg>","64d5b67f":"## Checking for multicollinearity","90ea44f2":"**Insights:**\n1. VIF scores are higher for R&D and Marketing Spend.\n2. Since Administration is not so correlated with Profit as other variables, we will consider dropping this variable, which will drive VIF factor down.\n","6eab291f":"# Startup Profit Prediction","3d4fb040":"# 1. Reading and Understanding the Data","0c931a96":"#### The best performing model is Multiple Linear Regression.","52b110fd":"### Profit Distribution","5ee71c7f":"## Scaling the Features","2fb3bef7":"# 5. Residuals analysis","203ea92a":"## Visualising Numerical Variables","bd34e3e6":"# 2. EDA","26489461":"Note: Since we scaled the data for modeling, if we want to predict profits, we have to perform inverse_transform() on the predicted values.","0e9a2417":"## Our preferred model now has an equation that looks like this:\n\n## $$ PROFIT = -3.77 + 0.96 * R&D Spend + 0.01 * Marketing Spend + (-0.01) * Florida + (-0.06) * NewYork $$","218941d6":"## Decision Tree regression","3b24e9f9":"**Insights:**\n1. R&D and Marketing has nearly 0 p-value what implies statistical significance.\n2. On the other hand Administration seems to have no effect in predicting the Profit, as we previously seen from correlation as well.\n3. We are going to drop Administration column as it has no statistical significance in our model.","305a45e7":"The errors should not follow any pattern and equally distributed.","d0d60135":"#  3. Data Preparation","b68dca6f":"## Defining input and target variables","ded4290a":"## Checking for outliers","8892c115":"## Multiple Linear regression","e34ec521":"**Insights:**\n1. Profits and Marketing Spend are higher at Florida than other states.\n2. R&D Spend and Administration are same for all of the states.","96fd6fc3":"## Support Vector regression","e9ed9490":"## Feature selection","be43e470":"## Creating dummy variables","81353524":"## Splitting the Data into Training and Testing Sets","6f42b8b4":"**About the dataset:**\n\nThis dataset has data collected from New York, California and Florida about 50 business Startups. \nThe variables used in the dataset are Profit, R&D spending(research and development), Administration Spending, and Marketing Spending.\n"}}