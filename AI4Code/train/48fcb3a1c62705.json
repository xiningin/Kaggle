{"cell_type":{"eee9ac29":"code","9b5d70b6":"code","5496ea5e":"code","be8a5000":"code","b7a8189d":"code","0abc7ab4":"code","81c2d068":"code","8f24647c":"code","76d5df43":"code","5fe4e7dd":"code","4d442322":"code","3e43054e":"code","ee9dbee9":"code","39642b32":"code","be7315ab":"code","fda640a0":"code","5d36d5e1":"code","d1b44120":"code","3c80bd0c":"code","8690db8a":"code","7f5ed878":"code","60c8f0cf":"code","669edc44":"code","1b508780":"code","2a7d4465":"code","50bfd76f":"markdown","1aafb473":"markdown","26cf5119":"markdown","70ef0d74":"markdown","d54da728":"markdown","42714e9f":"markdown","086c369a":"markdown"},"source":{"eee9ac29":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9b5d70b6":"import matplotlib.pyplot as plt \nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n%matplotlib inline","5496ea5e":"df = pd.read_csv('..\/input\/advertising-dataset\/advertising.csv')","be8a5000":"df.describe()","b7a8189d":"df.shape","0abc7ab4":"df.head(5)","81c2d068":"df.info()","8f24647c":"sns.distplot(df['Sales'])","76d5df43":"sns.pairplot(df , diag_kind='kde')","5fe4e7dd":"df.corr()","4d442322":"plt.figure(figsize=(8,8), dpi=100)\nsns.heatmap(df.corr(), cmap=\"OrRd\",annot=True, lw=2 )","3e43054e":"X = df.drop('Sales', axis=1)\ny=df['Sales']","ee9dbee9":"from sklearn.model_selection import train_test_split","39642b32":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","be7315ab":"from sklearn.linear_model import LinearRegression","fda640a0":"model= LinearRegression()","5d36d5e1":"model.fit(X_train, y_train)","d1b44120":"pd.DataFrame(model.coef_ , X.columns , columns=['Coefiecent'])","3c80bd0c":"y_pred=model.predict(X_test)","8690db8a":"from sklearn import metrics","7f5ed878":"MAE= metrics.mean_absolute_error(y_test , y_pred)\nMSE= metrics.mean_squared_error(y_test , y_pred)\nRMSE= np.sqrt(MSE)\npd.DataFrame([MAE , MSE , RMSE] , index=['MAE', 'MSE' , 'RMSE'], columns=['Metrics'])","60c8f0cf":"df['Sales'].mean()","669edc44":"test_residuals=y_test - y_pred\nsns.scatterplot(x=y_test , y=y_pred)\nplt.xlabel('y_test')\nplt.ylabel('y_pred')","1b508780":"sns.scatterplot(x=y_test , y=test_residuals)\nplt.axhline(y=0, color='r' , ls='--')","2a7d4465":"sns.distplot(test_residuals , bins=25 , kde=True)","50bfd76f":"## Read the data","1aafb473":"**Coeficent Matrix**","26cf5119":"## Residuals","70ef0d74":"## EDA ","d54da728":"## Split dataset to train and test ","42714e9f":"**Determine the feature and target variables**\n\n\nX --> Feature\n\n\ny --> target ","086c369a":"## Data overview "}}