{"cell_type":{"06b06255":"code","7335563b":"code","49c72eab":"code","173345ea":"code","38996108":"code","56a869a5":"code","e781c287":"code","475bedf8":"code","de6aadfd":"code","3d510c5b":"code","6f801bd5":"code","3792bbaf":"markdown","65a06b00":"markdown"},"source":{"06b06255":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7335563b":"# KNN Algoritmas\u0131 Tutorial\n#* import dataset\n#* datasetimi tan\u0131m\u0131\n#* dataset g\u00f6rselle\u015ftirme\n#* knn algoritmas\u0131 ne demek a\u00e7\u0131kla\n#* knn with sklearn\n#* \u00f6dev\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n# %%\ndata = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\n\n","49c72eab":"target_name = 'class'\ndata[target_name]\ndata","173345ea":"data.rename(columns={\"pelvic_tilt numeric\": \"pelvic_tilt\", \"class\": \"siniflandir\"}, inplace = True)\ndata.columns","38996108":"data.info()","56a869a5":"N = data[data.siniflandir == \"Normal\"]\nA = data[data.siniflandir == \"Abnormal\"]\n# scatter plot\nplt.scatter(N.pelvic_incidence,N.lumbar_lordosis_angle,color=\"red\",label=\"Normal\",alpha= 0.3)\nplt.scatter(A.pelvic_incidence,A.lumbar_lordosis_angle,color=\"green\",label=\"Anormal\",alpha= 0.3)\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"pelvic_tilt\")\nplt.legend()\nplt.show()\n","e781c287":"data.siniflandir = [1 if each == \"Normal\" else 0 for each in data.siniflandir]\ny = data.siniflandir.values\nx_data = data.drop([\"siniflandir\"],axis=1)","475bedf8":"# normalization \nx = (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data))\nx","de6aadfd":"# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.3,random_state=1)\n","3d510c5b":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3) # n_neighbors = k\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)\nprint(\" {} nn score: {} \".format(3,knn.score(x_test,y_test)))","6f801bd5":"# %%\n# find best k value\nscore_list = []\nfor each in range(1,15):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \nplt.plot(range(1,15),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()\n","3792bbaf":"If you don't rename columns (class and \"pelvic_tilt numeric\"). you have problems next steps, so I advice change name these columns.","65a06b00":"conclusion\n\nfind best k values (you can see k=13 for our sample)\n\neasy model sklearn\n\nthanks datai :)"}}