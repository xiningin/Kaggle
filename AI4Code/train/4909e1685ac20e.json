{"cell_type":{"308d2eb9":"code","ff32a4cb":"code","49ceb153":"code","baf8e455":"code","a65d8f76":"code","15410747":"markdown","4fb65c95":"markdown","41d4f1bd":"markdown"},"source":{"308d2eb9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff32a4cb":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head()","49ceb153":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","baf8e455":"train.info()","a65d8f76":"from sklearn.ensemble import RandomForestClassifier\ny= train.Survived\nfeatures= ['Pclass', 'Sex', 'SibSp', 'Parch']\nX= pd.get_dummies(train[features])\nX_test= pd.get_dummies(test[features])\n\nmodel = RandomForestClassifier(n_estimators=100 ,max_depth=6, random_state=1)\nmodel.fit(X,y)\npredictions= model.predict(X_test)\n\n\noutput= pd.DataFrame({\"PassengerId\": test.PassengerId, \"Survived\": predictions})\noutput.to_csv('my_submission.csv', index= False)\nprint(\"done\")","15410747":"## reading the training and testing data into data frames ","4fb65c95":"## checking for the data types of the data and the missing values ","41d4f1bd":"## making a sample model for prediction "}}