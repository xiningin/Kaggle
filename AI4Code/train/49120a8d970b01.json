{"cell_type":{"b7a837be":"code","9f37beeb":"code","6c8e2f0a":"code","0b82f092":"code","cc52e7ce":"code","b3102594":"code","14ee9f3e":"code","88a8d967":"code","823c44e1":"code","46d5f73b":"code","e8f4a1a3":"code","522e0ee3":"code","7f9f33f2":"code","6c9dec17":"code","57e0b338":"code","cbf34841":"code","7f627bbb":"code","f267498a":"code","f7fc7207":"code","775af454":"code","a38bba9b":"code","dca6d8a7":"code","b0a3259f":"code","669fb1d1":"code","8610ac42":"code","d8d39f0e":"code","2dbafc52":"markdown","a1cf8dff":"markdown","9a8a16ee":"markdown","9bfb69f6":"markdown","92bccca4":"markdown","c1006232":"markdown","93483aec":"markdown","07fe8767":"markdown","4b986c24":"markdown","5bb37d92":"markdown","713cf223":"markdown","c0747404":"markdown","b7ac1290":"markdown","d312cdc5":"markdown","094fe858":"markdown","e61340be":"markdown","fd13c15f":"markdown","5fe2469b":"markdown","31a43af7":"markdown","3e935968":"markdown","513af7db":"markdown","2669b8fb":"markdown","3b8e08e5":"markdown","1b9db7ae":"markdown","482b7ea9":"markdown","f57995cd":"markdown","a6126ed3":"markdown","dad812a7":"markdown","eca5a5e8":"markdown","01af4016":"markdown","ef4b0df4":"markdown","4553f5f6":"markdown","580dc01f":"markdown","eebc8e1a":"markdown","dc35d188":"markdown","e8e262bc":"markdown","3d9d61f4":"markdown","edef00c1":"markdown","f6eeabcc":"markdown","2325356f":"markdown"},"source":{"b7a837be":"import matplotlib.pyplot as pl\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport math","9f37beeb":"tracking2018 = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2018.csv')\ntracking2019  = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2019.csv')\ntracking2020 = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2020.csv')\nplays = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv')","6c8e2f0a":"punt_return = plays[(plays['specialTeamsResult'] == 'Return') & (plays['specialTeamsPlayType'] == 'Punt')]","0b82f092":"punt_return = punt_return[['gameId', 'playId', 'returnerId',\n       'kickLength', 'kickReturnYardage', 'playResult', 'penaltyYards']]","cc52e7ce":"((punt_return.isna().sum())\/punt_return.shape[0]).sort_values()","b3102594":"punt_return = punt_return[(~punt_return.returnerId.isna())]","14ee9f3e":"punt_return['penaltyYards'] = punt_return['penaltyYards'].fillna(0)\n1 - sum(punt_return['kickReturnYardage'] == punt_return['kickLength'] - punt_return['playResult'] + punt_return['penaltyYards']) \/ punt_return.shape[0]","88a8d967":"punt_return = punt_return[~punt_return.kickReturnYardage.isna()]","823c44e1":"punt_return[punt_return['returnerId'].str.contains(';')]","46d5f73b":"punt_return = punt_return[~punt_return['returnerId'].str.contains(';')]","e8f4a1a3":"punt_return['returnerId'] = punt_return['returnerId'].astype(float)","522e0ee3":"playIds = punt_return['playId'].unique()\ngameIds = punt_return['gameId'].unique()\ntracking2018 = tracking2018[(tracking2018.playId.isin(playIds)) & (tracking2018.gameId.isin(gameIds))]\ntracking2019 = tracking2019[(tracking2019.playId.isin(playIds)) & (tracking2019.gameId.isin(gameIds))]\ntracking2020 = tracking2020[(tracking2020.playId.isin(playIds)) & (tracking2020.gameId.isin(gameIds))]","7f9f33f2":"tracking = tracking2018.append(tracking2019).append(tracking2020)\ntracking = tracking[['s', 'a', 'nflId', 'gameId','playId', 'frameId', 'event']]\n((tracking.isna().sum())\/tracking.shape[0]).sort_values()","6c9dec17":"for index, row in punt_return.iterrows():\n    playId = int(row['playId'])\n    gameId = int(row['gameId'])\n    df_check = tracking[(tracking['playId'] == playId) & (tracking['gameId'] == gameId)] ##The tracking data of the given play\n    df_check_frames = df_check[df_check['nflId'] == int(row['returnerId'])] ##The tracking data of the given play of the punt returner\n    if int(row['returnerId']) not in list(df_check['nflId']): ##Checking whether the returner is even found in the tracking data set for the given play\n        punt_return.loc[index, 'missingFrames'] = 1\n    elif df_check_frames.shape[0] != (df_check_frames.iloc[-1]['frameId'] - df_check_frames.iloc[0]['frameId']) - 1: ##Checking if the punt returner is missing in some frames\n        punt_return.loc[index, 'missingFrames'] = (df_check_frames.shape[0] - (df_check_frames.iloc[-1]['frameId'] - df_check_frames.iloc[0]['frameId']) - 1) \/ df_check_frames.shape[0]\n    else:\n        punt_return.loc[index, 'missingFrames'] = 0","57e0b338":"print(sum(punt_return.missingFrames == 0), 'fully captured punt returns or in percent:', sum(punt_return.missingFrames == 0) \/ punt_return.shape[0], '%')","cbf34841":"tracking = tracking[tracking['nflId'].isin(list(punt_return['returnerId'].unique()))]","7f627bbb":"df = punt_return.drop(['missingFrames','playResult','penaltyYards'], axis = 1)","f267498a":"for index, row in df.iterrows():\n    playId = int(row['playId'])\n    gameId = int(row['gameId'])\n    nflId = int(row['returnerId'])\n    punt_returner_frames = tracking[(tracking['playId'] == playId) & (tracking['gameId'] == gameId) & (tracking['nflId'] == nflId)]\n    list_of_events = punt_returner_frames.event.unique()\n    if 'punt_received' not in list_of_events:\n        ## If there is no clear beginning to the punt return, we skip\n        continue\n    elif not ('tackle' in list_of_events or 'out_of_bounds' in list_of_events or 'touchdown' in list_of_events):\n        ## If there is no clear ending to the punt return, we skip\n        continue\n    else:\n        ## First we extract the index when the punt was received\n        index_punt_received = punt_returner_frames.event[(punt_returner_frames.event == 'punt_received')].index.tolist()[0]\n        \n        ## Second we extract the index when the punt return ended (tackled, out of bounds, touchdown)\n        conditions = (punt_returner_frames.event == 'tackle') | (punt_returner_frames.event == 'out_of_bounds') | (punt_returner_frames.event == 'touchdown')\n        index_tackle = punt_returner_frames.event[conditions].index.tolist()[0]\n        \n        punt_returner_frames = punt_returner_frames.loc[index_punt_received:index_tackle + 1, :]\n        df.loc[index, 'topAcceleration'] = punt_returner_frames['a'].max()\n        df.loc[index, 'topSpeed'] = punt_returner_frames['s'].max()\n        df.loc[index, 'meanSpeed'] = punt_returner_frames['s'].mean()","f7fc7207":"df.info()","775af454":"df = df[~df['topSpeed'].isna()]","a38bba9b":"corr = df[['kickLength', 'kickReturnYardage',\n        'topAcceleration', 'topSpeed', 'meanSpeed']].corr()\ncorr_2 = corr.iloc[[1,0], 1:6]\nf, ax = pl.subplots(figsize=(12, 9))\nsns.set(font_scale = 1.25)\nsns.heatmap(corr_2, cbar = True, annot = True, fmt = '.2f', vmax=1, annot_kws={'size': 10}, square=True);","dca6d8a7":"df.kickLength.describe()","b0a3259f":"df_short = df[df['kickLength'] <= 45]\ndf_medium = df[(df['kickLength'] > 45) & (df['kickLength'] < 55)]\ndf_long = df[df['kickLength'] >= 55]","669fb1d1":"corr_short = df_short[['kickLength', 'kickReturnYardage',\n        'topAcceleration', 'topSpeed', 'meanSpeed']].corr()\ncorr_short = corr_short.iloc[[1,0], 1:6]\ncorr_medium = df_medium[['kickLength', 'kickReturnYardage',\n        'topAcceleration', 'topSpeed', 'meanSpeed']].corr()\ncorr_medium = corr_medium.iloc[[1,0], 1:6]\ncorr_long = df_long[['kickLength', 'kickReturnYardage',\n        'topAcceleration', 'topSpeed', 'meanSpeed']].corr()\ncorr_long = corr_long.iloc[[1,0], 1:6]\nfig = pl.figure(figsize=(20, 9))\nsns.set(font_scale = 1.25)\nax1 = fig.add_subplot(3,3,1)\nax1.set_title('Short kicks')\nax2 = fig.add_subplot(3,3,2)\nax2.set_title('Medium kicks')\nax3 = fig.add_subplot(3,3,3)\nax3.set_title('Long kicks')\nsns.heatmap(corr_short, cbar = False, ax = ax1, annot = True, fmt = '.2f', vmax=1, annot_kws={'size': 10});\nsns.heatmap(corr_medium, cbar = False, ax = ax2, annot = True, fmt = '.2f', vmax=1, annot_kws={'size': 10}, yticklabels = False);\nsns.heatmap(corr_long, cbar = False, ax = ax3, annot = True, fmt = '.2f', vmax=1, annot_kws={'size': 10}, yticklabels = False);","8610ac42":"sns.scatterplot(data=df, y=\"kickReturnYardage\", x=\"topSpeed\")","d8d39f0e":"sns.scatterplot(data=df, y=\"kickReturnYardage\", x=\"meanSpeed\")","2dbafc52":"Next, we calculate the average and top speed\/acceleration\n\nIt is important here that we only consider the frames between punt_received and tackled.\n\nThe following code is hard to read. Essentially what happened is that all cases where there was no clear beginning and ending of the punt return were excluded.","a1cf8dff":"# Preface","9a8a16ee":"Similarly for the *meanSpeed*.","9bfb69f6":"This means that the causation must go both ways, as a higher speed definitely helps for a further punt return.","92bccca4":"Based on our research, we conclude that the top and average speed achieved by a punt returner is correlating more with the kick return yardage than the top acceleration. Especially for punts beyond 55 meters.\n\nThis does not mean that speed is more important in a punt returner than acceleration. This merely means that when the kick return yardage is far, then, on average, the top and mean speed was high. \n\nA smaller correlation is true for acceleration in short and medium kick, but not for long kick punt return.","c1006232":"We see immediately that 0.04% of the *retournerId*'s and 0.35% of *kickReturnYardage* are missing. The missing *retournerId*'s are a very small portion and cannot easily be reconstructed, hence we will exclude these.\n\nAlso most of the *penaltyYards* are missing, but we do not really care at this point.","93483aec":"To make this research more sound, we should have also considered hangTime of the punt, as kicks of similar lengths, but differing hang times are very much different scenarios.\n\nThis variable could be established as the frames between the events 'punt_kicked' and ' punt_received'.","07fe8767":"Secondly we will exclude all columns we will not need and have a look at whether all the entries we care about are there.","4b986c24":"### Causation","5bb37d92":"Finally we are ready to answer our initial question:\n\nWhat is more important for a punt returner, speed or acceleration?\n\nWe will discuss this by looking at the respective correlations with:\n* **kickReturnYardage**\n* **kickLength**","713cf223":"First we extract all the punt returns from the **plays** data set.","c0747404":"At first sight, it seems that speed is way more important for a punt returner than acceleration based on the correlation to *kickReturnYardage*.\n\nOn the other hand, we must also consider the fact that *kickReturnYardage* correlates with *kickLength*, and consequentely skews the heatmap.\n\nThis makes sense as a further kick would give the punt returner more time to accelerate and get speed.\n\nTo solve this problem, we will group the kick lengths into kick length ranges.","b7ac1290":"### Comparing punt returners","d312cdc5":"To be able to make a more clear statement about what makes a great punt returner, we have to compare the punt returners and not the punt returns.\n\nThe problem with that approach would have been though that there are not many punt returners that have a significant amount of punt returns, increasing the variance of our research.","094fe858":"# Adding speed and acceleration to the data set","e61340be":"## Punt_return data set","fd13c15f":"Next, we will examine the **tracking** data set and the columns needed for our research, but first we combine them.","5fe2469b":"### Missing variable hangTime","31a43af7":"In this code we want to have at look at whether speed or acceleration correlates more with a far punt return. \n\nWe do this by using the **plays** dataset and all its data, where *specialTeamsPlayType* is Punt and *specialTeamsResult* is Return, which means the ball was punted and returned.\n\nFurther we will use the **tracking** datasets to add the average and top speed and acceleration of the Punt Returners in these plays.\n\nThis will be done by matching the *retournerId* of **plays** to the corresponding data of **tracking**.","3e935968":"Finally, there are three punt returns (above) with two people returning the ball (a backward pass must have happened). We exclude these as speed and acceleration have a lesser\/different meaning in such a play.","513af7db":"1. What makes a great punt returner? \n2. What is more important in a good kick? kickLength or hangTime?","2669b8fb":"# Difficulties with this approach","3b8e08e5":"## Tracking Data set","1b9db7ae":"# Data Preparation","482b7ea9":"# Conclusion","f57995cd":"As one can see only a few rows did not make it as they didn't have a clear beginning and ending of the punt return.\n\nLet's exclude these.","a6126ed3":"One big problem is to figure whether the *kickReturnYardage* is high, because e.g the *topSpeed* is high, or *topSpeed* is high, because *kickReturnYardage* is high. So the question of causation is not answered at this point\n\nIf we look at the scatterplot, we see that clearly the touchdowns drive the *topSpeed* up a lot.","dad812a7":"This does now paint a very clear picture as we were able to reduce the correlation between *kickLength* and *kickReturnYardage*.\n\nIt still holds true that speed correlates more with *kickReturnYardage* than acceleration in all kick length ranges. Especially for long kicks\n\nAnother interesting observation is the correlation of *kickLength* with speed and acceleration for the long kicks. This makes sense, since the defence is less on top of the punt returner the further the kick goes, giving him the change to accelerate and gain speed.","eca5a5e8":"Here we see that in 4.3% of the rows the *nflId* is missing, which is very concerning.\n\nIn the next chapter we will be adding the average and top speeds and acceleration of the punt retourner. As all of these stats would be influenced by missing data in the given play, we seriously need to consider to delete all punt returns with missing data or find a way to reconstruct it.\n\nIt is important to realize at this point that all players on the field are tracked for a given play, but we actually only care about the punt returner.\n\nMeaning, we should check how many frames (as the **tracking** data set is collection of frames) of the punt returner are missing per play.","01af4016":"First, we drop the *missingFrames*, *playResult* and *penaltyYards* columns.","ef4b0df4":"Based on the 25% and 75% of *kickLength*, we group it into the following intervals:\n* **Short**: 0 - 45 meters\n* **Medium**: 45 - 55 meters\n* **Long**: 55+ meters","4553f5f6":"The missing values in *kickReturnYardage* might be reconstructed as \n\n*kickReturnYardage* = *kickLength* - *playResult* + *penaltyYards*, (1)\n\nwhere *penaltyYards* is often missing. It is very much possible though that *penaltyYards* is missing whenever there was no penalty or equivalently penaltyYards = 0.\n\nLet's check this hypothesis:","580dc01f":"# Interesting open questions","eebc8e1a":"# Goal","dc35d188":"This is amazing news as there seem to be no obviously missing frames (at the end and at the beginning is still possible).\n\nNext, we simplify the huge **tracking** data set one more time by only keeping the rows, containing a *nflId* of a punt returner.","e8e262bc":"Unfortunately this is not the case, as in 1.6% of the rows the formula in (1) does not add up, making it not reliable enough.\n\nAs a consequence we will also remove the rows with missing *kickReturnYardage*.","3d9d61f4":"And we make sure *returnerId* is a float as *nflId* in our **tracking** data set will also be a float.","edef00c1":"The NFL has given out several data sets about the plays made by Special Teams.\n\nMore concretely we will use four of those data sets, containing the following columns:\n\n**plays** \n* *gameId*: Game identifier, unique (numeric)\n* *playId*: Play identifier, not unique across games (numeric)\n* *specialTeamsPlayType*: Formation of play: Extra Point, Field Goal, Kickoff or Punt (text)\n* *specialTeamsResult*: Special Teams outcome of play dependent on play type: Blocked Kick Attempt, Blocked Punt, Downed, Fair Catch, Kick Attempt Good, Kick Attempt No Good, Kickoff Team Recovery, Muffed, Non-Special Teams Result, Out of Bounds, Return or Touchback (text)\n* *returnerId*: nflId(s) of returner(s) on play if there was a special teams return. Multiple returners on a play are separated by a ; (text)\n* *penaltyYards*: yards gained by possessionTeam by penalty (numeric)\n* *kickLength*: Kick length in air of kickoff, field goal or punt (numeric)\n* *kickReturnYardage*: Yards gained by return team if there was a return on a kickoff or punt (numeric)\n* *playResult*: Net yards gained by the kicking team, including penalty yardage (numeric)\n\n**tracking2018, 2019 and 2020**\n* *gameId*: Game identifier, unique (numeric)\n* *playId*: Play identifier, not unique across games (numeric)\n* *frameId*: Frame identifier for each play, starting at 1 (numeric)\n* *nflId*: Player identification number, unique across players (numeric)\n* *s*: Speed in yards\/second (numeric)\n* *a*: Speed in yards\/second^2 (numeric)\n* *event*: Tagged play details, including moment of ball snap, pass release, pass catch, tackle, etc (text)","f6eeabcc":"# Finding answers","2325356f":"Now we will check whether the correlations differ based on these newly formed ranges."}}