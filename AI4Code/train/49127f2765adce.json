{"cell_type":{"5e635596":"code","d1ac3807":"code","8fecc7c0":"code","5135f510":"code","24ed193f":"code","e5bab747":"markdown","952e4dd3":"markdown"},"source":{"5e635596":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom plotly import __version__\nimport cufflinks as cf\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1ac3807":"df=pd.read_csv('\/kaggle\/input\/jobs-on-naukricom\/home\/sdf\/marketing_sample_for_naukri_com-jobs__20190701_20190830__30k_data.csv')","8fecc7c0":"df.head()\ndf.info\ndf.count()\ndf[\"Uniq Id\"].nunique()\ndf.dtypes\n\ndf = df[df['Role'].str.len() <= 50]\ndf = df[df['Job Title'].str.len() <= 50]\ndf = df[df['Job Salary'].str.len() <= 50]\ndf = df[df['Job Experience Required'].str.len() <= 50]\ndf = df[df['Key Skills'].str.len() <= 100]\ndf = df[df['Role Category'].str.len() <= 50]\ndf = df[df['Location'].str.len() <= 50]\ndf = df[df['Functional Area'].str.len() <= 100]\ndf = df[df['Industry'].str.len() <= 100]\n\n","5135f510":"df=df.where(df.apply(lambda x: x.map(x.value_counts()))>=10, \"other\")\ndf['Job Title'].value_counts(),\ndf['Job Salary'].value_counts()\ndf['Job Experience Required'].value_counts(),\ndf['Key Skills'].value_counts()\ndf['Role Category'].value_counts(),\ndf['Location'].value_counts()\ndf['Functional Area'].value_counts(),\ndf['Industry'].value_counts()\ndf['Role'].value_counts()","24ed193f":"#df.groupby('Job Title').nunique().plot(kind='bar')\n#plt.show()\n\ndf['Job Title'].value_counts().plot(kind='bar')\nplt.show()","e5bab747":"# Cleaning the Naukri Job Data\nI tried to get some insight out of this data set before that I realize the data is a bit messy and need some basic cleaning.\n","952e4dd3":"I would like to see how our data set looks like and do a bit of cleaning before doing any analysis:\n* see the first 5 rows\n* how many rows data set has \n* how manu unique id it has\n* name of the columns \n* check the value of each column and clean each column if needed\n"}}