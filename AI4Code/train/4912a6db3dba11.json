{"cell_type":{"dd5b972c":"code","9ddc9481":"code","f4ecfff8":"code","1158f30e":"code","b5d6002b":"code","ac7b3169":"code","cfb2ad5e":"code","70c86678":"code","946d180d":"code","4c7a8a5a":"code","58ec4432":"code","7e39743d":"code","186687bd":"code","b6c98bea":"code","2ddf45d9":"code","2f35ee3c":"code","2ec94123":"code","ece1225f":"code","6eb5a1af":"code","4e7093c5":"code","e40390a0":"code","5b046538":"code","d3ecc07a":"markdown","547a4a06":"markdown","ec5159ed":"markdown","1c373373":"markdown","9d862e6f":"markdown","f1eb92d1":"markdown","064a69ab":"markdown","7e54ad1f":"markdown","72c67a90":"markdown","a5088e7c":"markdown","8b96f136":"markdown","91cf7dbf":"markdown","e1740978":"markdown","7b1079a1":"markdown","162f25da":"markdown","3efc7738":"markdown","5c9c5eb5":"markdown","954f9db9":"markdown","1680bfaf":"markdown"},"source":{"dd5b972c":"import pandas as pd \r\nimport matplotlib as plt\r\nimport numpy as np\r\nimport seaborn as sns\r\nfrom matplotlib import pyplot as plt\r\nfrom sklearn import preprocessing\r\nfrom sklearn.preprocessing import LabelEncoder\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn import metrics\r\nfrom sklearn.model_selection import cross_val_score","9ddc9481":"base_adult_treino = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\",\r\n        sep=r'\\s*,\\s*',\r\n        engine='python',\r\n        na_values=\"?\")\r\n\r\nbase_adult_treino[\"income\"].value_counts()","f4ecfff8":"base_adult_treino[\"income\"].value_counts().plot(kind=\"bar\")","1158f30e":"print(base_adult_treino.isnull().sum())","b5d6002b":"#criando labelEncoder para converter strings em n\u00fameros\r\nbase_adult_treino = base_adult_treino.apply(lambda col: LabelEncoder().fit_transform(col.astype(str)), axis=0, result_type='expand')\r\nbase_adult_treino[\"sex\"].value_counts().plot(kind=\"bar\")","ac7b3169":"moda_workclass = base_adult_treino[\"workclass\"].value_counts()\r\nbase_adult_treino[\"workclass\"].fillna(moda_workclass, inplace=True)\r\nbase_adult_treino[\"workclass\"].value_counts().plot(kind=\"bar\")","cfb2ad5e":"base_adult_treino[\"marital.status\"].value_counts().plot(kind=\"bar\")","70c86678":"moda_occupation = base_adult_treino[\"occupation\"].value_counts()\r\nbase_adult_treino[\"occupation\"].fillna(moda_occupation, inplace=True)\r\nbase_adult_treino[\"occupation\"].value_counts().plot(kind=\"bar\")\r\n","946d180d":"base_adult_treino[\"relationship\"].value_counts().plot(kind=\"bar\")","4c7a8a5a":"base_adult_treino[\"race\"].value_counts().plot(kind=\"bar\")","58ec4432":"moda_nc = base_adult_treino[\"native.country\"].value_counts()\r\nbase_adult_treino[\"native.country\"].fillna(moda_nc, inplace=True)\r\nbase_adult_treino[\"native.country\"].value_counts().plot(kind=\"bar\")","7e39743d":"sns.heatmap(base_adult_treino.corr()[\"income\"].to_frame(), annot=True)","186687bd":"x_treino = base_adult_treino.drop(columns=['Id', 'fnlwgt', 'education','workclass',\t'marital.status', 'race', 'native.country', 'income', 'relationship', 'occupation'])\r\nx_treino","b6c98bea":"y_treino = base_adult_treino[\"income\"]\r\ny_treino","2ddf45d9":"knn = KNeighborsClassifier(n_neighbors=5)\r\n#treinando o modelo \r\nknn.fit(x_treino, y_treino)\r\n#prevendo a resposta\r\ny_previsto = knn.predict(x_treino)\r\nprint(\"Acuracia:\",metrics.accuracy_score(y_treino, y_previsto))","2f35ee3c":"scores = cross_val_score(knn, x_treino, y_treino, cv=7)\r\nscores.mean()","2ec94123":"i = 1\r\nmedia_scores = []\r\nwhile i < 40: \r\n    knn = KNeighborsClassifier(n_neighbors=i)\r\n    scores = cross_val_score(knn, x_treino, y_treino, cv=7)\r\n    media_scores.append(scores.mean())\r\n    i = i + 1\r\nprint(media_scores)\r\nmaximo = max(media_scores) \r\nprint(\"Valor de maior acuracia:\")\r\nprint(maximo)\r\nprint(\"Valor de k para a maxima acuracia\")\r\nmax_k = media_scores.index(maximo)\r\nprint(max_k + 1)","ece1225f":"j = 1\r\nscores_lista = []\r\nwhile j < 40: \r\n    knn = KNeighborsClassifier(n_neighbors=j)\r\n    knn.fit(x_treino, y_treino)\r\n    #prevendo a resposta\r\n    y_previsto = knn.predict(x_treino)\r\n    score = metrics.accuracy_score(y_treino, y_previsto)\r\n    scores_lista.append(score.mean())\r\n    j = j + 1\r\nprint(scores_lista)\r\nmaximo_s = max(scores_lista) \r\nprint(\"Valor de maior acuracia:\")\r\nprint(maximo_s)\r\nprint(\"Valor de k\")\r\nvalor_k = scores_lista.index(maximo_s)\r\nprint(valor_k + 1)","6eb5a1af":"base_adult_teste = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\",\r\n        sep=r'\\s*,\\s*',\r\n        engine='python',\r\n        na_values=\"?\")\r\nbase_adult_teste = base_adult_teste.apply(lambda col: LabelEncoder().fit_transform(col.astype(str)), axis=0, result_type='expand')","4e7093c5":"x_teste = base_adult_teste.drop(columns=['Id', 'fnlwgt', 'education','workclass','occupation','marital.status', 'race', 'native.country', 'relationship'])","e40390a0":"knn_final = KNeighborsClassifier(n_neighbors=1)\r\nknn_final.fit(x_treino, y_treino)\r\n#prevendo a resposta\r\ny_previsto_final = knn_final.predict(x_teste)","5b046538":"final_knn = pd.DataFrame({\"Id\" : range(len(y_previsto_final)), \"income\": y_previsto_final})\r\nfinal_knn[\"income\"] = final_knn[\"income\"].replace([0,1],['<=50K','>50K'])\r\nfinal_knn.to_csv('submission.csv', index=False)","d3ecc07a":"Primeiro, verificando os dados faltantes","547a4a06":"Fazendo o mesmo com a base de testes que a base de treino, por\u00e9m nesse caso, transformando apenas as colunas \"sex\" e occupation j\u00e1 que as outras n\u00e3o ser\u00e3o utilizadas","ec5159ed":"Montando o .csv","1c373373":"Analisando os gr\u00e1ficos plotados, podemos retirar as colunas: race, marital.status, native country, fnlwgt, id, relationship, workclass, education (pois ficaremos com education.num), occupation","9d862e6f":"Utilizando o melhor valor de k encontrado, neste caso 1, preparar o classificador para teste","f1eb92d1":"Podemos perceber que sem a valida\u00e7\u00e3o cruzada o valor de acur\u00e1cia foi um pouco melhor e com k = 5, testando para outros valores de k, mas sem a valida\u00e7\u00e3o cruzada","064a69ab":"Testando com diferentes valores de k","7e54ad1f":"Decidindo quais vari\u00e1veis usar e transformando para n\u00fameros as que forem necess\u00e1rias al\u00e9m de preencher os na pela moda","72c67a90":"Gerando o modelo KNN, com n = 5, sem valida\u00e7\u00e3o cruzada","a5088e7c":"1 - Male\r\n0 - Female","8b96f136":"Analisando as correla\u00e7\u00f5es","91cf7dbf":"Montando o knn","e1740978":"Separando o x de teste","7b1079a1":"Valida\u00e7\u00e3o cruzada","162f25da":"Prediction task is to determine whether a person makes over 50K a year.","3efc7738":"Importando a base de treino e verificando a coluna que ser\u00e1 analisada com o KNN ","5c9c5eb5":"Separando os x_treino e y_treino","954f9db9":"Prepara\u00e7\u00e3o dos dados ","1680bfaf":"Importando bibliotecas"}}