{"cell_type":{"ee53b075":"code","3371c54c":"code","06e6c8e2":"code","d45357a1":"code","f37b57e9":"code","4ca09ecb":"code","bb9cd520":"code","aa782463":"code","6e4d12b3":"code","2a8b6fcb":"code","2f919d3f":"code","fe770bf8":"code","0d1a4114":"code","14aea255":"code","91b57bcb":"code","75937543":"code","3feb72a1":"code","05875e7a":"code","ca358b7c":"code","d46dba30":"code","d7137394":"code","a474031f":"code","d06f06f6":"code","a2acdf77":"code","0349813b":"code","208771b5":"markdown","e5afe97a":"markdown","31bc57c3":"markdown","5fafb955":"markdown","83b8699a":"markdown","88d87707":"markdown","1fc1a72f":"markdown"},"source":{"ee53b075":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder","3371c54c":"#dataseti okutma\ndf = pd.read_csv(\"..\/input\/usarrests\/USArrests.csv\", index_col=0)\ndf.head()","06e6c8e2":"#eksik g\u00f6zlemlere bakma\ndf.isnull().sum()","d45357a1":"#betimsel istatistikler\ndf.describe().T","f37b57e9":"#scale\nsc = MinMaxScaler((0, 1))\ndf = sc.fit_transform(df)","4ca09ecb":"df[0:5]","bb9cd520":"#k\u00fcmeleme\nkmeans = KMeans(n_clusters=4)\nk_fit = kmeans.fit(df)","aa782463":"#ka\u00e7 k\u00fcme var\nk_fit.n_clusters","6e4d12b3":"k_fit.cluster_centers_","2a8b6fcb":"k_fit.labels_","2f919d3f":"#toplam hata\nk_fit.inertia_","fe770bf8":"df[0:5]","0d1a4114":"k_means = KMeans(n_clusters=2).fit(df)\nkumeler = k_means.labels_\ntype(df)\ndf = pd.DataFrame(df)\n\nplt.scatter(df.iloc[:, 0],\n            df.iloc[:, 1],\n            c=kumeler,\n            s=50,\n            cmap=\"viridis\")\nplt.show()","14aea255":"# marking of centers\nmerkezler = k_means.cluster_centers_\n\nplt.scatter(df.iloc[:, 0],\n            df.iloc[:, 1],\n            c=kumeler,\n            s=50,\n            cmap=\"viridis\")\n\nplt.scatter(merkezler[:, 0],\n            merkezler[:, 1],\n            c=\"red\",\n            s=200,\n            alpha=0.8)\nplt.show()","91b57bcb":"#Determination of the Optimal Number of Clusters\nkmeans = KMeans()\nssd = []\nK = range(1, 30)\n\nfor k in K:\n    kmeans = KMeans(n_clusters=k).fit(df)\n    ssd.append(kmeans.inertia_)\n\nplt.plot(K, ssd, \"bx-\")\nplt.xlabel(\"Farkl\u0131 K De\u011ferlerine Kar\u015f\u0131l\u0131k Uzakl\u0131k Art\u0131k Toplamlar\u0131\")\nplt.title(\"Optimum K\u00fcme say\u0131s\u0131 i\u00e7in Elbow Y\u00f6ntemi\")\nplt.show()\n","75937543":"# A more practical way:\nkmeans = KMeans()\nelbow = KElbowVisualizer(kmeans, k=(2, 20))\nelbow.fit(df)\nelbow.show()","3feb72a1":"elbow.elbow_value_","05875e7a":"kmeans = KMeans(n_clusters=elbow.elbow_value_).fit(df)\nkumeler = kmeans.labels_","ca358b7c":"df = pd.read_csv(\"..\/input\/usarrests\/USArrests.csv\", index_col=0)","d46dba30":"pd.DataFrame({\"Eyaletler\": df.index, \"Kumeler\": kumeler})","d7137394":"df[\"cluster_no\"] = kumeler\n\ndf[\"cluster_no\"] = df[\"cluster_no\"] + 1\n\ndf.head()","a474031f":"df.groupby(\"cluster_no\").agg({\"cluster_no\": \"count\"})","d06f06f6":"df.groupby(\"cluster_no\").agg(np.mean)","a2acdf77":"df[df[\"cluster_no\"] == 5]","0349813b":"df[df[\"cluster_no\"] == 6]","208771b5":"<h1><center><span style=\"font-family:Georgia;color:#E8DCCC;font-weight:bold;background:#97A37B\"> \ud83c\udf08Visualization of Clusters","e5afe97a":"<h1><center><span style=\"font-family:Georgia;color:#E8DCCC;font-weight:bold;background:#97A37B\"> \ud83d\udcdaImporting Libraries","31bc57c3":"**Ad\u0131m 1: K\u00fcme say\u0131s\u0131 belirlenir.**\n\n**Ad\u0131m 2: Rastgele k merkez se\u00e7ilir.**\n\n**Ad\u0131m 3: Her g\u00f6zlem i\u00e7in k merkezlere uzakl\u0131klar hesaplan\u0131r.**\n\n**Ad\u0131m 4: Her g\u00f6zlem en yak\u0131n oldu\u011fu merkeze yani k\u00fcmeye atan\u0131r.**\n\n**Ad\u0131m 5: Atama i\u015flemlerinden sonra olu\u015fan k\u00fcmeler i\u00e7in tekrar merkez hesaplamalar\u0131 yap\u0131l\u0131r.**\n\n**Ad\u0131m 6: Bu i\u015flem belirlenen bir iterasyon adedince tekrar edilir ve k\u00fcme i\u00e7i hata karaler toplamlar\u0131n\u0131n toplam\u0131n\u0131n (total within-cluster variation) mininum oldu\u011fu durumdaki g\u00f6zlemlerin k\u00fcmelenme yap\u0131s\u0131 nihai k\u00fcemelenme olarak se\u00e7ilir.**","5fafb955":"<h1><center><span style=\"font-family:Georgia;color:#E8DCCC;font-weight:bold;background:#97A37B\"> \ud83d\udd0dExploratory Data Analysis","83b8699a":"<h1><center><span style=\"font-family:Georgia;color:#E8DCCC;font-weight:bold;background:#97A37B\"> \ud83c\udfc1 Creation of Final Clusters","88d87707":"![mystery-man-760.jpg](attachment:10986bbd-96f4-4e1a-9768-51228706c187.jpg)","1fc1a72f":"<div style=\"display:fill;\n            border-radius: false;\n            border-style: solid;\n            border-color:#000000;\n            border-style: false;\n            border-width: 2px;\n            color:#CF673A;\n            font-size:15px;\n            font-family: Georgia;\n            background-color:#E8DCCC;\n            text-align:center;\n            letter-spacing:0.1px;\n            padding: 0.1em;\">\n\n**<h2>THANK YOU FOR TAKING THE TIME**"}}