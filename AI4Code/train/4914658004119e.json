{"cell_type":{"18c1ece3":"code","833a872d":"code","5f2de071":"code","618190ce":"code","a13d2cf6":"code","9726b75d":"code","5e16ce5d":"code","cbdb8b3a":"code","4aba7957":"code","3ed1ef88":"code","48a75e44":"code","52079ffc":"code","0e560be0":"code","4a5da085":"code","767e31da":"code","63c4a154":"code","5d99e892":"code","8a2fbfda":"code","88c70dec":"code","66d37a84":"code","fa898357":"markdown","d4f13acc":"markdown","a5b07f27":"markdown"},"source":{"18c1ece3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n","833a872d":"%matplotlib inline","5f2de071":"df = pd.read_csv(\"\/kaggle\/input\/air-pollution-dataset-2020\/combined.csv\")","618190ce":"df = df[df['id'] == 'site_1422']","a13d2cf6":"def lookup(s):\n    dates = {date:pd.to_datetime(date) for date in s.unique()}\n    return s.map(dates)","9726b75d":"df['datetime'] = lookup(df['datetime'])","5e16ce5d":"df.set_index('datetime', inplace=True)","cbdb8b3a":"df.head()","4aba7957":"df.info(memory_usage=True)","3ed1ef88":"df.describe()","48a75e44":"df.drop('live', axis=1, inplace=True) #dropping unwanted column","52079ffc":"df = df.resample('H').interpolate()","0e560be0":"df['PM10'].fillna(500,inplace=True)","4a5da085":"df.shape","767e31da":"fig = plt.figure(figsize=[20,10])\naxes = fig.subplots()\naxes.scatter(df.index, df['PM2.5'], label = 'PM2.5')\naxes.scatter(df.index, df['PM10'], label = 'PM10')\naxes.scatter(df.index, df['NO2'], label = 'NO2')\naxes.scatter(df.index, df['SO2'], label = 'S02')\naxes.scatter(df.index, df['NH3'], label = 'NH3')\naxes.scatter(df.index, df['CO'], label = 'CO')\naxes.scatter(df.index, df['OZONE'], label = 'OZONE')\naxes.axvline(x=datetime.datetime(2020,3,25), color='r', label = 'Phase 1')\naxes.axvline(x= datetime.datetime(2020,4,15), color='g', label = 'Phase 2')\naxes.axvline(x= datetime.datetime(2020,5,4), color='b', label = 'Phase 3')\naxes.axvline(x= datetime.datetime(2020,5,18), color='c', label = 'Phase 4')\naxes.text(s = 'Before Lockdown', x = datetime.datetime(2020,2,1), y = 540, fontdict={'fontsize':18})\naxes.text(s = 'After Lockdown', x = datetime.datetime(2020,4,20), y = 540, fontdict={'fontsize':18})\naxes.text(s = 'Phase 1', x = datetime.datetime(2020,4,3), y = 420, fontdict={'fontsize':18, 'rotation':90})\naxes.text(s = 'Phase 2', x = datetime.datetime(2020,4,25), y = 420, fontdict={'fontsize':18, 'rotation':90})\naxes.text(s = 'Phase 3', x = datetime.datetime(2020,5,10), y = 420, fontdict={'fontsize':18, 'rotation':90})\naxes.text(s = 'Phase 4', x = datetime.datetime(2020,5,19), y = 420, fontdict={'fontsize':18, 'rotation':90})\naxes.set_xlabel('Date', fontsize=18)\naxes.set_ylabel('Pollutant value', fontsize=18)\naxes.legend(bbox_to_anchor=(1,1), fontsize=12)","63c4a154":"df['lockdown'] = 'before_lockdown'\ndf.loc['2020-03-25':, 'lockdown'] = 'after_lockdown'","5d99e892":"beforeLockdown = df.loc[df['lockdown'] == 'before_lockdown', ['PM2.5','PM10', 'NO2', 'NH3', 'SO2', 'CO', 'OZONE']].mean().reset_index()\nbeforeLockdown['lockdown'] = 'before'\nbeforeLockdown.rename({'index' : 'pollutant', 0 :'value' }, axis=1, inplace=True)\nbeforeLockdown","8a2fbfda":"afterLockdown = df.loc[df['lockdown'] == 'after_lockdown', ['PM2.5','PM10', 'NO2', 'NH3', 'SO2', 'CO', 'OZONE']].mean().reset_index()\nafterLockdown['lockdown'] = 'after'\nafterLockdown.rename({'index' : 'pollutant', 0 :'value' }, axis=1, inplace=True)\nafterLockdown","88c70dec":"lockdownDf = pd.concat([beforeLockdown, afterLockdown], ignore_index=True)\nlockdownDf","66d37a84":"fig = plt.figure(figsize=[10,8])\nax = fig.subplots()\nsns.barplot(x='pollutant', y='value',  hue='lockdown', data=lockdownDf, ax=ax)\nax.set_xlabel('Pollutant', fontsize=16)\nax.set_ylabel('Pollutant value', fontsize=16)\nplt.show()","fa898357":"### Pollution before lockdown and after lockdown","d4f13acc":"lockdown in india started at 25 March 2020\n\nPhase 1: 25-March-2020\n\nPhase 2: 15-April-2020\n\nPhase 3: 04-May-2020\n\nPhase 4: 18-May-2020\n","a5b07f27":"#### This dataset was recored every 1 hour till 19th may but it may miss some days so interpolating it."}}