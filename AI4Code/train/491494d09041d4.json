{"cell_type":{"ee7df0e5":"code","8a684155":"code","8841a981":"code","d437a454":"code","b0b29873":"code","2a3d74fb":"code","caee7e99":"code","f2928cc6":"code","e457bb92":"code","8eb6fdb8":"code","ef5fc6dc":"code","3e26a966":"code","c9be6617":"code","10f98b58":"code","3f41488b":"code","8ea29011":"code","72af2c4c":"markdown","cc16e6dc":"markdown","1b6670db":"markdown","eb996d5e":"markdown","9616efcc":"markdown","b92a4a08":"markdown","a7a6b623":"markdown"},"source":{"ee7df0e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a684155":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import chi2_contingency\n\n# \uc804\ucc98\ub9ac\nfrom sklearn.preprocessing import MinMaxScaler\n\n# \uad50\ucc28\uac80\uc99d\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\n\n# \ubaa8\ub378\nfrom xgboost import XGBClassifier, plot_importance\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n# \ud3c9\uac00\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_auc_score","8841a981":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\nX_test = pd.read_csv(\"..\/input\/hr-data-predict-change-jobscompetition-form\/X_test.csv\", index_col=0)\ny_test = pd.read_csv(\"..\/input\/hr-data-predict-change-jobscompetition-form\/test_label\/y_test.csv\", index_col=0).astype(\"int\")\nX_train = pd.read_csv(\"..\/input\/hr-data-predict-change-jobscompetition-form\/X_train.csv\", index_col=0)\ny_train = pd.read_csv(\"..\/input\/hr-data-predict-change-jobscompetition-form\/y_train.csv\", index_col=0).astype(\"int\")\nprint(\"\ub370\uc774\ud130 \ud615\ud0dc\",X_train.shape, y_train.shape, X_test.shape, y_test.shape)\nX_test.iloc[3110:3115]","d437a454":"# \ub370\uc774\ud130 \ud1b5\uacc4 \ud655\uc778\npd.concat([X_train.describe(),X_test.describe()], axis=1)","b0b29873":"# \uacb0\uce21\uac12 \ud655\uc778\npd.concat([X_train.isna().sum().to_frame(\"na_train\"),X_test.isna().sum().to_frame(\"na_test\")], axis=1)","2a3d74fb":"# \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \ud655\uc778\nfor col in X_train.select_dtypes(\"object\").columns :\n    print(f\"{col}: {X_train[col].unique()}\")","caee7e99":"# 4\ubd84\uc704\uc218\ub97c \uc774\uc6a9\ud55c \uc774\uc0c1\uac12 \ud655\uc778\nfor col in X_train.select_dtypes(exclude=\"object\").columns :\n    Q1 = X_train[col].quantile(.25)\n    Q3 = X_train[col].quantile(.75)\n    IQR = Q3-Q1\n    print(col, len(X_train[(X_train[col]<Q1-IQR*1.5) | (X_train[col]>Q3+IQR*1.5)][col]))\n\nfor col in X_test.select_dtypes(exclude=\"object\").columns :\n    Q1 = X_test[col].quantile(.25)\n    Q3 = X_test[col].quantile(.75)\n    IQR = Q3-Q1\n    print(col, len(X_test[(X_test[col]<Q1-IQR*1.5) | (X_test[col]>Q3+IQR*1.5)][col]))","f2928cc6":"# \ubc15\uc2a4\ud50c\ub86f\uc744 \uc774\uc6a9\ud55c \uc774\uc0c1\uac12 \ud655\uc778\nplt.figure(figsize=(10,5), facecolor=\"#eee\")\nfor i, col in enumerate([\"city_development_index\", \"training_hours\"]):\n    plt.subplot(1, 4, i+1)\n    plt.boxplot(X_train[col])\n    plt.title(col)\n    plt.subplot(1, 4, i+3)\n    plt.boxplot(X_test[col])\n    plt.title(col)\nplt.show()","e457bb92":"# \ub370\uc774\ud130 \uc815\uc81c 1: \uacb0\uce21\uac12\uc774 \uc5c6\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc815\uc218\ub85c \uc778\ucf54\ub529 \ubc0f \uc774\uc0c1\uac12 \ucc98\ub9ac\nfor df in [X_train, X_test]:\n    \n    # city\n    df.city = df.city.str.replace(\"city_\",\"\").astype(\"int\")\n    \n    # relevent_experience\n    df.relevent_experience.replace({\"No relevent experience\":0, \"Has relevent experience\":1}, inplace=True)\n    \n    # gender\n    df.gender.fillna(\"Other\", inplace=True)\n    df.gender.replace({\"Female\":0, \"Male\":1, \"Other\":2}, inplace=True)\n    \n    # company_size, company_type\n    df.company_size.fillna(0, inplace=True)\n    df.company_type.fillna(0, inplace=True)\n    df.company_size.replace({\"<10\":1, \"10\/49\":2, \"100-500\":3, \"1000-4999\":4, \"50-99\":5, \"500-999\":6, \"5000-9999\":7, \"10000+\":8}, inplace=True)\n    df.company_type.replace({\"Public Sector\":1, \"Pvt Ltd\":2, \"NGO\":3, \"Funded Startup\":4, \"Early Stage Startup\":5, \"Other\":6}, inplace=True)\n    \n    # major_discipline\n    df.major_discipline = df.major_discipline.replace({\"No Major\":0, \"STEM\":1, \"Humanities\":2, \"Business Degree\":3, \"Arts\":4, \"Other\":5}).fillna(0).astype(\"int\")\n    \n    # \uc774\uc0c1\uac12 \ucc98\ub9ac\n    df.training_hours = np.round(np.sqrt(df.training_hours),2)","8eb6fdb8":"# cramers_V \uacc4\uc0b0 \ud568\uc218\ndef cramers_V(col1, col2) :\n    crosstab = np.array(pd.crosstab(col1, col2, rownames=None, colnames=None)) # \ube48\ub3c4\ud45c \uc791\uc131\n    chi2 = chi2_contingency(crosstab)[0] # \uce74\uc774\uc81c\uacf1\uac12 \uacc4\uc0b0\n    n = np.sum(crosstab) # \ucd1d \uc0ac\ub840 \uc218.\n    q = min(crosstab.shape)-1 # \ud589, \uc5f4 \ud56d\ubaa9 \uac2f\uc218 \uc911\uc5d0 \uc801\uc740 \uc22b\uc790 - 1\n    return np.round(np.sqrt(chi2\/(n*q)),2)","ef5fc6dc":"# Cramer's V \ud45c \uc791\uc131\narr = []\nfor col1 in X_train:\n    col = []\n    for col2 in X_train :\n        cramers = cramers_V(X_train[col1], X_train[col2])\n        col.append(cramers)\n    arr.append(col)\ncramers_results = pd.DataFrame(arr, columns = X_train.columns, index = X_train.columns)\ncramers_results","3e26a966":"# \ub370\uc774\ud130 \uc815\uc81c2: \uacb0\uce21\uac12 \ucc98\ub9ac\ndef fillmode(df, col, arr):\n    df[col].update(df.groupby(arr)[col].apply(lambda g: g.fillna(g.mode()[0])))\n\nfor df in [X_train, X_test]:\n    # experience: relevent_experience,last_new_job \uadf8\ub8f9\ud654\ud558\uc5ec \ucd5c\ube48\uac12\uc73c\ub85c\n    fillmode(df,\"experience\",[\"relevent_experience\", \"enrolled_university\", \"last_new_job\"])\n    fillmode(df,\"experience\",[\"relevent_experience\", \"enrolled_university\"])\n    fillmode(df,\"experience\",[\"relevent_experience\", \"last_new_job\"])\n    fillmode(df,\"experience\",[\"relevent_experience\"])\n    \n    # enrolled_university, last_new_job: relevent_experience, experience \uadf8\ub8f9\ud654\ud558\uc5ec \ucd5c\ube48\uac12\uc73c\ub85c\n    fillmode(df,\"enrolled_university\",[\"relevent_experience\", \"experience\"])\n    fillmode(df,\"last_new_job\",[\"relevent_experience\", \"experience\"])\n    fillmode(df,\"enrolled_university\",[\"relevent_experience\"])\n#     fillmode(df,last_new_job,[\"relevent_experience\"])\n\n    # education_level: major_discipline, relevent_experience \uadf8\ub8f9\ud654\ud558\uc5ec \ucd5c\ube48\uac12\uc73c\ub85c\n    fillmode(df,\"education_level\",[\"major_discipline\", \"relevent_experience\"])\n#     fillmode(df,\"education_level\",[\"major_discipline\"])\n\nprint(\"\uacb0\uce21\uac12 \ud655\uc778\")\npd.concat([X_train.isna().sum().to_frame(\"na Train\"), X_test.isna().sum().to_frame(\"na Test\")], axis=1)","c9be6617":"# \ub370\uc774\ud130 \uc815\uc81c 3: \ub098\uba38\uc9c0 \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc815\uc218\ud615 \uc778\ucf54\ub529\nfor df in [X_train, X_test]:\n    # experience\n    df.experience = df.experience.replace({\">20\":21, \"<1\":0}).astype(\"int\")\n    \n    # enrolled_university\n    df.enrolled_university.replace({\"no_enrollment\":0, \"Part time course\":1, \"Full time course\":2}, inplace=True)\n    \n    # education_level\n    df.education_level.replace({\"Primary School\":0, \"High School\":1, \"Graduate\":2, \"Masters\":3, \"Phd\":4}, inplace=True)\n    \n    #last_new_job\n    df.last_new_job = df.last_new_job.replace({\"never\":0, \">4\":5}).astype(\"int\")","10f98b58":"params={\n    \"max_depth\": [3,4,5],\n    \"min_child_weight\": [1.5,2,3],\n    \"colsample_bytree\": [0.6,0.8,1],\n    \"reg_lambda\": [1,2],\n    \"reg_alpha\" : [0,3]\n}\nxgb = XGBClassifier(max_depth=3, min_child_weight=1.5, colsample_bytree=0.6, reg_lambda=2, reg_alpha=3, eval_metric='logloss', use_label_encoder=False)\ngb = GradientBoostingClassifier(max_depth=3,)\ngb_scores = cross_val_score(gb, X_train, y_train[\"target\"], scoring=\"roc_auc\")\nxgb_scores = cross_val_score(xgb, X_train, y_train[\"target\"], scoring=\"roc_auc\")\nprint(f\"GB \ud6c8\ub828\ub370\uc774\ud130 5-fold \uad50\ucc28\uac80\uc99d AUC \ud3c9\uade0 = {np.mean(gb_scores):.3f}\")\nprint(f\"XGB \ud6c8\ub828\ub370\uc774\ud130 5-fold \uad50\ucc28\uac80\uc99d AUC \ud3c9\uade0 = {np.mean(xgb_scores):.3f}\")","3f41488b":"# \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc608\uce21 \ubc0f \ub9ac\ud3ec\ud2b8\nxgb.fit(X_train, y_train[\"target\"])\ntest_pred = xgb.predict(X_test)\ntest_pred_proba = xgb.predict_proba(X_test)\nprint(\"\ud63c\ub3d9\ud589\ub82c\")\nprint(confusion_matrix(y_test,test_pred))\nprint(classification_report(y_test,test_pred))\nprint(f\"\ud14c\uc2a4\ud2b8\ub370\uc774\ud130 AUC = {roc_auc_score(y_test,test_pred_proba[:,1]):.3f}\")\nplot_importance(xgb)\nplt.show()","8ea29011":"# \uacb0\uacfc \ub0b4\ubcf4\ub0b4\uae30\nresult = pd.DataFrame(test_pred_proba[:,1], index=y_test.index, columns=[\"target_proba\"])\nresult.to_csv(\"result.csv\")","72af2c4c":"\uac1c\uc778\uc801\uc778 \uc18c\uac10\n\n1. XGBClassifier\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ubc94\uc8fc\ubcc0\uc218 \uc774\ub984\uc744 \ubc14\uafd4\uc8fc\ub294 \uac83\uc744 \ub4a4\ub2a6\uac8c \uc54c\uc558\uc74c.\n2. \uacb0\uce21\uac12\uc774 \ub108\ubb34 \ub9ce\uc544\uc11c \uace0\uc0dd\uc2a4\ub7ec\uc6e0\ub2e4. \uc804\ucc98\ub9ac\uc5d0\uc11c \uac00\uc7a5 \uae34 \uc2dc\uac04 \uc18c\uc694.\n3. GB\uc640 XGB\uc758 \uc131\ub2a5\uc774 \ube44\uc2b7\ud558\uba74\uc11c\ub3c4 XGB\uac00 \uc57d\uac04 \ub354 \uc88b\uc740 \ub4ef.\n","cc16e6dc":"# \ub370\uc774\ud130 \uc815\uc81c \ub2e8\uacc4\n\n### \uacb0\uce21\uac12\n\n1. gender: \ub0a8, \uc5ec, \uae30\ud0c0\ub85c \uad6c\uc131\ub3fc \uc788\uc74c. \uacb0\uce21\uac12\uc744 \uae30\ud0c0\ub85c \ub300\uccb4.(\ud639\uc740 \ub0a8\ub140\ub85c \uacb0\uce21\uac12\uc744 \uad70\uc9d1\ubd84\ub958)\n2. company_size, company_type: 0\uc73c\ub85c \ub300\uccb4.\n3. \uacb0\uce21\uac12\uc774 \uc801\uc740 experience, enrolled_university, last_new_job, education_level \uc21c\uc73c\ub85c Cramer's V\uac12\uc774 \ub192\uc740 \uac12\uc744 \uae30\uc900. \uac01 \ubc94\uc8fc\uc758 \ucd5c\ube48\uac12\uc73c\ub85c \ub300\uccb4.\n4. major_discipline: No Major\ub85c \ub300\uccb4\n\n$$ \\text{Cramer's }V = \\sqrt{\\frac{\\chi ^2} { n ( q -1 ) }}$$\n\n### \uc774\uc0c1\uac12\n\n1. city_development_index: \ud06c\uac8c \ubc97\uc5b4\ub098\ub294 \uc774\uc0c1\uac12\uc774 \uc5c6\uc73c\ubbc0\ub85c \uadf8\ub300\ub85c \ub460.\n2. training_hours: \uc774\uc0c1\uac12\uc774 \uc758\ubbf8\uac00 \uc788\uc5b4\ubcf4\uc784. \ub8e8\ud2b8\uc2a4\ucf00\uc77c\ub85c \ubcc0\uacbd\ud558\uac70\ub098 fence \uac12\uc73c\ub85c \ub300\uccb4.\n\n### \ubc94\uc8fc \uc778\ucf54\ub529: \uc758\uc0ac\uacb0\uc815\ub098\ubb34\uc774\ubbc0\ub85c \uc815\uc218\ud615\uc73c\ub85c \uc778\ucf54\ub529\n\n1. city: city_ \uc81c\uac70 \ud6c4 \uc815\uc218\ub85c \ubcc0\uacbd\n2. gender: {Female:0, Male:1, Other:2}\n3. relevent_experience: {No relevent experience:0, Has relevent experience:1}\n4. enrolled_university: {no_enrollment:0, Part time course:1, Full time course:2}\n5. education_level: {Primary School:0, High School:1, Graduate:2, Masters:3, Phd:4}\n5. major_discipline: {No Major:0, STEM:1, Humanities:2, Business Degree:3 Arts:4, Other:5}\n6. experience: {>20:21, <1:0}\n6. company_size: {None:0, <10:1 10\/49:2, 100-500:3, 1000-4999:4, 50-99:5, 500-999:6, 5000-9999:7, 10000+:8}\n7. company_type: {None:0, Public Sector:1, Pvt Ltd:2, NGO:3, Funded Startup:4, Early Stage Startup:5, Other:6}\n8. last_new_job: {never:0, >4:5}","1b6670db":"# **Result**","eb996d5e":"# **XGBoost\ub97c \uc774\uc6a9\ud55c \ubd84\ub958**","9616efcc":"# **Libraries**","b92a4a08":"# **Modeling**","a7a6b623":"# **Preprocessing & EDA**"}}