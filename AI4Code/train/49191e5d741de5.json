{"cell_type":{"73063bb0":"code","119f1f51":"code","5a717565":"code","ceb3422d":"code","456173b9":"code","83a759af":"code","1c6983a6":"code","06f7fbb6":"code","58b37ce9":"code","b11fdd05":"code","2bf09806":"code","815f89cd":"code","69e1f4a9":"code","66ef39b2":"markdown","1a37ed09":"markdown","29d835d2":"markdown","e6c0bd48":"markdown","6950ca21":"markdown","737c7b0d":"markdown","a4c43dcc":"markdown","16258619":"markdown","2ce7d9b8":"markdown","cf5b8483":"markdown","de487378":"markdown","91ae8c56":"markdown","50d23d76":"markdown","c029480c":"markdown","851652fb":"markdown","09bb60bc":"markdown"},"source":{"73063bb0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndf = pd.read_csv('\/kaggle\/input\/weight-height\/weight-height.csv')\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","119f1f51":"df.shape","5a717565":"df.isnull().values.any()","ceb3422d":"Gen_Female = df[df['Gender'] == 'Female']\nGen_Female.shape","456173b9":"Gen_male = df[df['Gender'] == 'Male']\nGen_male.shape","83a759af":"df.groupby('Gender').mean()","1c6983a6":"df['Gender'].replace('Male',0,inplace = True)\ndf['Gender'].replace('Female',1,inplace = True)\ndf.head(),df.tail()","06f7fbb6":"Req_Col = df[['Gender','Height']]\nReq_Col.head()","58b37ce9":"X = Req_Col\ny = df.Weight\nX.head(), y.head()","b11fdd05":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.14, random_state=1)","2bf09806":"from sklearn import linear_model\nmodel = linear_model.LinearRegression()\nmodel.fit(X_train, y_train)","815f89cd":"model.predict(X_test)","69e1f4a9":"model.score(X_test,y_test)","66ef39b2":"Here we're giving 14 percentage of our data to test and 86 to train","1a37ed09":"# Shape of the dataset:","29d835d2":"Here you can see the modified dataframe","e6c0bd48":"# Is there any missing value?","6950ca21":"# Fitting the model","737c7b0d":"**We've 91 percent accuracy**\n","a4c43dcc":"How many dataset on females are given?","16258619":"# Splitting dataset into training set and test set.","2ce7d9b8":"Assigning X and y","cf5b8483":"How many dataset on males are given?","de487378":"Now,we'll choose our required attributes from dataset to work with.","91ae8c56":"Now,we're assigning x and y","50d23d76":"# Checking accuracy","c029480c":"# converting all categorical values to numerical values.","851652fb":"# Choosing Required attributes","09bb60bc":"# Mean value\n"}}