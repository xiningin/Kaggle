{"cell_type":{"e782caeb":"code","09a5e0e4":"code","2bb71d64":"code","4caf7cfb":"code","1a81fd8a":"code","65b90893":"code","b47fe9a3":"code","68dfc023":"code","c5010de0":"code","3844fcfd":"code","47360b15":"code","8d7a5c78":"code","b426a430":"code","d883eaad":"code","17262c82":"code","52550d12":"code","2a3cb127":"code","e13ae5d1":"code","ae10b409":"markdown","0da04dab":"markdown","fe952aaa":"markdown","ab7d5734":"markdown"},"source":{"e782caeb":"import numpy as np \nimport pandas as pd \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","09a5e0e4":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","2bb71d64":"train_data.isnull().sum().sort_values(ascending = False)","4caf7cfb":"train_data = train_data[['Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]","1a81fd8a":"train_data['Age'].fillna(train_data['Age'].mean(),inplace=True)\ntrain_data.head()","65b90893":"train_data.dropna(inplace=True)","b47fe9a3":"train_data.isnull().sum().sort_values(ascending = False)","68dfc023":"train_data.loc[(train_data['Sex'] == 'male'), 'Sex']=\"0\"\ntrain_data.loc[(train_data['Sex'] == 'female'), 'Sex']=\"1\"","c5010de0":"train_data.head()","3844fcfd":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","47360b15":"test_data = test_data[['PassengerId','Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]","8d7a5c78":"test_data.loc[(test_data['Sex'] == 'male'), 'Sex']=\"0\"\ntest_data.loc[(test_data['Sex'] == 'female'), 'Sex']=\"1\"","b426a430":"test_data.isnull().sum()","d883eaad":"test_data = test_data.fillna(test_data.mean())","17262c82":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])","52550d12":"model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)","2a3cb127":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","e13ae5d1":"output.head()","ae10b409":"## 1. Data EDA\n### 1.1 EDA","0da04dab":"## 0.Train data\n### 0.1. read train data","fe952aaa":"### 0.2. checking null\n- Age 177, Cabin 687, Emabrked 2","ab7d5734":"## My First Steps on Machine Learning"}}