{"cell_type":{"a1bc76ed":"code","5a1ea7fc":"code","2f45b812":"code","8b09b062":"code","09d43a9e":"code","299dc628":"code","347d66ad":"code","40f7a8ca":"code","78a2ddbf":"code","e3625ed0":"code","8acae9ed":"code","13af312a":"code","1a55ef11":"code","0b39e974":"code","49578612":"code","8d837c55":"code","c2d10d1a":"code","b95a93ff":"code","a3a3273b":"code","524c355f":"code","e741a2ef":"code","eb6c00a2":"code","d3940210":"code","c54dc3ee":"code","ae65cb16":"markdown","4a79e16a":"markdown","b0a21349":"markdown","3df3c4a2":"markdown","0ed4d50c":"markdown","8036a83a":"markdown","2a665718":"markdown","66e61c1d":"markdown"},"source":{"a1bc76ed":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-darkgrid')","5a1ea7fc":"path = '..\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2020-12-31.csv'\nbtc = pd.read_csv(path)\nprint(btc.shape)\nbtc.head()","2f45b812":"# Converting the Timestamp column from string to datetime\nbtc['Timestamp'] = [datetime.fromtimestamp(x) for x in btc['Timestamp']]\nbtc = btc.set_index('Timestamp')","8b09b062":"btc_daily = btc.resample(\"24H\").mean() #daily resampling\nprint(btc_daily.shape)\nbtc_daily.head()","09d43a9e":"btc_daily['Close'].plot(figsize=(15,8))","299dc628":"from statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import kpss\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf","347d66ad":"def fill_missing(df):\n    ### function to impute missing values using interpolation ###\n    df['Open'] = df['Open'].interpolate()\n    df['Close'] = df['Close'].interpolate()\n    df['Weighted_Price'] = df['Weighted_Price'].interpolate()\n    df['Volume_(BTC)'] = df['Volume_(BTC)'].interpolate()\n    df['Volume_(Currency)'] = df['Volume_(Currency)'].interpolate()\n    df['High'] = df['High'].interpolate()\n    df['Low'] = df['Low'].interpolate()\n    print(df.head())\n    print(df.isnull().sum())\n    \nfill_missing(btc_daily)","40f7a8ca":"\nplt.figure(figsize=(15,12))\nseries = btc_daily.Weighted_Price\nresult = seasonal_decompose(series, model='additive',period=1)\nresult.plot()","78a2ddbf":"daily_data_fb = btc_daily[['Close','Volume_(BTC)']]\ndaily_data_fb.head()","e3625ed0":"test_length = 365\nsplit_date = \"2020-01-01\"\n#train_fb = daily_data_fb[:split_date]\n#test_fb = daily_data_fb[split_date:]\n\nprint(\"train data percentage : %0.0f%%\" %((train_fb.shape[0] \/ daily_data_fb.shape[0]) * 100))\nprint(\"test data percentage : %0.0f%%\" %((test_fb.shape[0] \/ daily_data_fb.shape[0]) * 100))","8acae9ed":"#!pip install auto-ts","13af312a":"from auto_ts import auto_timeseries","1a55ef11":"model = auto_timeseries(score_type='rmse',\n                time_interval='D', forecast_period=30,\n                non_seasonal_pdq=None, seasonality=False, seasonal_period=12,\n                model_type=['best'],\n                verbose=2)","0b39e974":"train_fb = train_fb.reset_index()\ntrain_fb.head()","49578612":"test_fb = test_fb.reset_index()\ntest_fb","8d837c55":"ts_column = 'Timestamp'\ntarget = 'Close'\nsep = ','","c2d10d1a":"model.fit(\n    traindata=train_fb,\n    ts_column=ts_column,\n    target=target,\n    cv=5,\n    sep=',')","b95a93ff":"model.get_leaderboard()","a3a3273b":"model.plot_cv_scores()","524c355f":"model.get_cv_scores()","e741a2ef":"# Using Best Model\nfuture_predictions = model.predict(\n    testdata=test_fb\n)  \nfuture_predictions","eb6c00a2":"test_fb.head()","d3940210":"import copy\nsubm = test_fb[[target]]\nprint(subm.shape)\nsubm.head()","c54dc3ee":"subm['predictions'] = future_predictions['yhat'].values\nsubm[[target,'predictions']].plot(figsize=(15,8))","ae65cb16":"### Evaluate Results","4a79e16a":"![](https:\/\/github.com\/AutoViML\/Auto_TS\/raw\/master\/logo.png)\n\n[Auto_TS: Auto_TimeSeries](https:\/\/github.com\/AutoViML\/Auto_TS)","b0a21349":"#### Time resampling","3df3c4a2":"#### Time Series Decomposition & Statistical Tests","0ed4d50c":"#### Forecast Results","8036a83a":"Read data","2a665718":"# This is a modified simple tutorial using auto_ts - many thanks to Caesar for creating this notebook. Please upvote him!!\n https:\/\/www.kaggle.com\/caesarlupum\/bitcoin-price-prediction-auto-ts","66e61c1d":"## Glimpse Data"}}