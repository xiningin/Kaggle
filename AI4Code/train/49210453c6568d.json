{"cell_type":{"a8bee1f4":"code","d359dd90":"code","4b5372d7":"code","ae81d326":"code","e8e96347":"code","dcead6d0":"code","a04163a0":"code","cf1c4db2":"code","d32b2764":"code","6b05983d":"markdown"},"source":{"a8bee1f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n# Imports\n\n# pandas\nimport pandas as pd\nfrom pandas import Series,DataFrame\nfrom xgboost import XGBClassifier\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d359dd90":"train_data = pd.read_csv(\"..\/input\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/test.csv\")","4b5372d7":"train_data = train_data.drop(['ID_code'],axis=1)\ntrain_data.columns","ae81d326":"# define training and testing sets\n\nY_train = train_data[\"target\"]\nX_train = train_data.drop(\"target\",axis=1)\n\nX_test  = test_data.drop(\"ID_code\",axis=1).copy()","e8e96347":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X_train,Y_train,test_size=0.3, random_state=0)","dcead6d0":"xgb = XGBClassifier()\nxgb.fit(x_train, y_train)","a04163a0":"xgb_score = xgb.score(x_test, y_test)\n\nprint(xgb_score)","cf1c4db2":"y_pred = xgb.predict(X_test)","d32b2764":"submission = pd.DataFrame({\n        \"ID_code\": test_data[\"ID_code\"],\n        \"target\": y_pred\n    })\nsubmission.to_csv('submission_logistic.csv', index=False)","6b05983d":"# Logistic Regression\n\nlogreg = LogisticRegression()\n\nlogreg.fit(X_train, Y_train)\n\nY_pred = logreg.predict(X_test)\n\nlogreg.score(X_train, Y_train)"}}