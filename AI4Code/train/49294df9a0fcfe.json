{"cell_type":{"9897fc61":"code","5361aeec":"code","b861e52d":"code","5b232892":"code","bcfc1e89":"code","451567a1":"code","4c624a74":"code","a2c35fcf":"code","ea0a1790":"code","9c62a433":"code","77aa0f97":"code","cb35338e":"code","4f29addd":"markdown","92682879":"markdown","ea55cfde":"markdown","564a12bb":"markdown","1dcc79a9":"markdown","da408bd0":"markdown","7956f17f":"markdown","131e1a9e":"markdown","dca1ac36":"markdown","916e999a":"markdown"},"source":{"9897fc61":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5361aeec":"train_data=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain_data.head()\n#print(train_data.shape)","b861e52d":"test_data=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n#print(train_data.shape,test_data.shape)\ntest_data.head()","5b232892":"women=train_data.loc[train_data.Sex=='female']['Survived']\nsum(women)\/len(women)","bcfc1e89":"men=train_data.loc[train_data.Sex=='male']['Survived']\nsum(men)\/len(men)\n","451567a1":"from sklearn.ensemble import RandomForestClassifier\n\n\n","4c624a74":"y=train_data[\"Survived\"]\nfeatures=[\"Pclass\",\"Sex\",\"SibSp\",\"Parch\"]\n","a2c35fcf":"X=pd.get_dummies(train_data[features])\nX_test=pd.get_dummies(test_data[features])\nprint(X.head())\nprint(X_test.head())\n","ea0a1790":"model=RandomForestClassifier(n_estimators=100,criterion='gini',max_depth=10,random_state=1,max_features='sqrt',n_jobs=-1,verbose=1)\nmodel.fit(X,y)","9c62a433":"predict=model.predict(X_test)\npredict.shape\n#X_test.shape","77aa0f97":"output=pd.DataFrame({'PassengerId':test_data.PassengerId,'Survived':predict})\noutput","cb35338e":"output.to_csv('mysubmission.csv',index=False)\nprint(\"Your submission was successfully saved!\")","4f29addd":"## Read csv file using pandas library\n### Disply first few lines using head()\nfor Train data","92682879":"## Read csv file using pandas library\n### Disply first few lines using head()\nfor Test data","ea55cfde":"# **Getting started with Titanic**\n### import libraries\n#### Set os paths for retrieval of data\n","564a12bb":"## Select features for Model","1dcc79a9":"# Find percentage for survival of women","da408bd0":"# Modelling with RandomForestClassifier\n## And then fit with X,y","7956f17f":"# Find percentage for survival of men","131e1a9e":"# Get dummies for classification\n1. Dummies adds multiple columns for existing columns \n2. Number of dummies for a column depends on number of unique values in that column\n3. If values in column 'a' is 1,2,3 then dummies are a_1,a_2,a_3\n4. It's mainly usefull for catogorization\n\n## Rule: Columns must be of type int","dca1ac36":" ## Import RandomForestClassifier from sklearn Library","916e999a":"# Save data to csv file for submission"}}