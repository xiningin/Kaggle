{"cell_type":{"4b8cf5a8":"code","64cf5d5c":"code","63434aed":"code","219028dd":"code","ec206972":"code","e813bfa1":"markdown","0c2d7ab4":"markdown","67ed4c47":"markdown","ab6ee63b":"markdown","371f7c2f":"markdown","29f39762":"markdown","ddb96c9e":"markdown"},"source":{"4b8cf5a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64cf5d5c":"df=pd.read_csv(\"..\/input\/default-of-credit-card-clients-dataset\/UCI_Credit_Card.csv\")\ndf\ndf.columns","63434aed":"from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib import style\nfrom matplotlib import pyplot as plt\n\nbills= ['BILL_AMT1', 'BILL_AMT2','BILL_AMT3', 'BILL_AMT4', 'BILL_AMT5', 'BILL_AMT6']\ni=0\n\nfor col in bills:\n    plt.figure()\n    colors=['#DCE22A','#4214FB','#D11ED4','#EEA1D8','#15BF1A','#027074']\n    m=df[col].hist(color=colors[i],bins=10)\n    plt.title(col)\n    plt.xlabel(\"Bill Amount\")\n    plt.ylabel(\"Frequency\")\n    i+=1","219028dd":"bills= ['BILL_AMT1', 'BILL_AMT2','BILL_AMT3', 'BILL_AMT4', 'BILL_AMT5', 'BILL_AMT6']\ni=0\n\nmean_list=[]\nstd_list=[]\nmax_list=[]\nmin_list=[]\n\n    \nfor col in bills:\n    print(col,\":\")\n    m=df[col].mean()\n    print(\"mean: \",m)\n    s=df[col].std()\n    print(\"std: \",s)\n    mi=df[col].min()\n    print(\"min: \",mi)\n    ma=df[col].max()\n    print(\"max: \",ma)\n    print(\"count of non n\/a: \", df[col].count(),\"\\n\")#check for 30000\n    \n    #append\n    mean_list.append(m)\n    std_list.append(s)\n    min_list.append(mi)\n    max_list.append(ma)\n    \n#plot the stats\nimport numpy as np\nfrom matplotlib.pylab import plt #load plot library\n# indicate the output of plotting function is printed to the notebook\n%matplotlib inline \n    \nx = ['APR','MAY','JUN','JUL','AUG','SEP']\ny_1 = mean_list\ny_2 = std_list\ny_3 = max_list\ny_4 = min_list\nplt.figure(figsize=(8, 8))\nplt.plot(x, y_1,color=\"#FBF527\",label='mean')#yellow\nplt.plot(x, y_2,color=\"#EEA1D8\",label='std')#pink\nplt.plot(x, y_3,color=\"#15BF1A\",label='max')#green\nplt.plot(x, y_4,color=\"#027074\",label='min')#blue\nplt.legend()\nplt.show()\n\n","ec206972":"from matplotlib import pyplot as plt\n#list for monthes to display\nbills= ['BILL_AMT1', 'BILL_AMT2','BILL_AMT3', 'BILL_AMT4', 'BILL_AMT5', 'BILL_AMT6']\nmean_list=[]\nj=0#counter\n\nimport os\nos.system(\"\")\n\nfor col in bills:\n    #get stats\n    d=df[col].mean()\n    mean_list.append(d)\n        \n        \nplt.figure()\nplt.plot(['APR','MAY','JUN','JUL','AUG','SEP'], mean_list) \nplt.title(\"BILL AMT avgs\")\nplt.xlabel(\"Month\")\nplt.ylabel(\"Avg\")\nplt.show()","e813bfa1":"CONCLUSION: the mean of the bill amts decreased a small amount -> stayed in same range\n* confirms the above graph","0c2d7ab4":"CONCLUSION: all stats on bill amts stay in range except for the MAX between MAY and JULY","67ed4c47":"found in discussion: https:\/\/www.kaggle.com\/uciml\/default-of-credit-card-clients-dataset\/discussion\/34608\n\n* It is generally possible for a credit card customer to overpay their bill and temporarily carry a negative balance. E.g., say my bill this month is $100 but I pay $250. Assuming I have no other recent purchases, my balance will be -$150.","ab6ee63b":"get exact stats: ","371f7c2f":"note: when bill is negative that means the person paid more than what was needed -> causing bill amt to go negative","29f39762":"CONCLUSION: we see a common bill_amt behavior with a portion of the bills being in negative ","ddb96c9e":"sources: \n\n* https:\/\/www.kaggle.com\/andyxie\/matplotlib-plot-multiple-lines\n\n* https:\/\/www.kaggle.com\/sanikamal\/data-visualization-using-matplotlib"}}