{"cell_type":{"4f922f71":"code","7b061671":"code","5938b80e":"code","6400d794":"code","7ad2cad8":"code","6a6617cb":"code","4283f0fe":"code","ab9a3ac6":"code","db97aa90":"code","2313e991":"code","246926f6":"code","1922629b":"code","dc5ceb97":"code","81870c88":"code","35f05ae3":"code","1d0a2a38":"code","a520de5c":"code","41db52ac":"code","11152a4e":"code","86a2180a":"code","0490f422":"code","9155aebf":"code","1fa51ce1":"code","c6a028be":"code","a014653c":"code","1142a70b":"code","0bed5b52":"code","69198457":"code","584ced6c":"code","d2879011":"code","fd9b25bf":"code","67003086":"code","adbf351c":"code","52a9ac50":"code","ca85ad0c":"code","bb331c69":"code","0525691b":"code","97d335aa":"code","837cd4c1":"code","7645cef8":"code","a9b410ea":"code","77408dc3":"code","13a33d66":"code","cf2cb552":"code","d825fb1d":"code","a3e97d4a":"code","15a74a5d":"code","21e7cf83":"markdown","50acac17":"markdown","f204e941":"markdown","f1584778":"markdown","7197bd6b":"markdown","f48176c5":"markdown","c9bec579":"markdown","adf2e4c4":"markdown","4800d6e7":"markdown","cf044dc5":"markdown","ff530507":"markdown","ceb7ec78":"markdown","7f3743a7":"markdown","231da004":"markdown","e6cf5d3d":"markdown"},"source":{"4f922f71":"## define configuration\nPATH_TRAIN = '..\/input\/tabular-playground-series-nov-2021\/train.csv'\nPATH_TEST = '..\/input\/tabular-playground-series-nov-2021\/test.csv'\n\nPATH_AUTOGLUON_SUBMISSION = 'submission_autogluon.csv'\nPATH_EVALML_SUBMISSION = 'submission_evalml.csv'\nPATH_FLAML_SUBMISSION = 'submission_flaml.csv'\nPATH_H2OAML_SUBMISSION = 'submission_h2oaml.csv'\nPATH_LAML_SUBMISSION = 'submission_laml.csv'\nPATH_TPOT_SUBMISSION = 'submission_tpot.csv'\n\nMAX_MODEL_RUNTIME_MINS = 10\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","7b061671":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\ntrain = dt.fread(PATH_TRAIN)[:100000, :]\ntest = dt.fread(PATH_TEST)\n\ntarget = train['target'].to_numpy().ravel()\ntest_ids = test['id']\n\ndel train[:, ['id', 'target']]\ntest = test[:, train.names]","5938b80e":"## install packages\n!python3 -m pip install -q \"mxnet<2.0.0\"\n!python3 -m pip install -q autogluon\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","6400d794":"## import packages\nfrom autogluon.tabular import TabularPredictor","7ad2cad8":"## run model\ntrain['target'] = dt.Frame(target)\n\nmodel_autogluon = TabularPredictor(label='target')\nmodel_autogluon.fit(train_data=train.to_pandas(), excluded_model_types=['KNN'], time_limit=MAX_MODEL_RUNTIME_SECS)\n\ndel train['target']","6a6617cb":"## check leaderboard\nmodel_autogluon.leaderboard()","4283f0fe":"## generate predictions\npreds_autogluon = model_autogluon.predict_proba(test.to_pandas())[True]","ab9a3ac6":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_autogluon))\nsubmission.head()","db97aa90":"## save submission\nsubmission.to_csv(PATH_AUTOGLUON_SUBMISSION)","2313e991":"## clear memory\nshutil.rmtree('AutogluonModels')\ndel model_autogluon\n\ngc.collect()","246926f6":"## install packages\n!python3 -m pip install -q evalml==0.28.0","1922629b":"## import packages\nfrom evalml.automl import AutoMLSearch","dc5ceb97":"## run model\nmodel_evalml = AutoMLSearch(X_train=train.to_pandas(), y_train=target, problem_type='binary', max_time=MAX_MODEL_RUNTIME_SECS)\nmodel_evalml.search()","81870c88":"## check leaderboard\nmodel_evalml.rankings","35f05ae3":"## generate predictions\npreds_evalml = model_evalml.best_pipeline.predict_proba(test.to_pandas())[True]","1d0a2a38":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_evalml))\nsubmission.head()","a520de5c":"## save submission\nsubmission.to_csv(PATH_EVALML_SUBMISSION)","41db52ac":"## clear memory\nos.remove('evalml_debug.log')\ndel model_evalml\n\ngc.collect()","11152a4e":"## install packages\n!python3 -m pip install -q flaml\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","86a2180a":"## import packages\nfrom flaml import AutoML","0490f422":"## run model\nmodel_flaml = AutoML()\nmodel_flaml.fit(X_train=train.to_pandas(), y_train=target, metric='roc_auc', time_budget=MAX_MODEL_RUNTIME_SECS)","9155aebf":"## generate predictions\npreds_flaml = model_flaml.predict_proba(test.to_pandas())[:, 1]","1fa51ce1":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_flaml)\nsubmission.head()","c6a028be":"## save submission\nsubmission.to_csv(PATH_FLAML_SUBMISSION)","a014653c":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\nos.remove('flaml.log')\ndel model_flaml\n\ngc.collect()","1142a70b":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","0bed5b52":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target).asfactor()","69198457":"## run model\nfeatures = [x for x in h2o_train.columns if x != 'target']\n\nmodel_h2o = H2OAutoML(stopping_metric='AUC', max_runtime_secs=MAX_MODEL_RUNTIME_SECS)\nmodel_h2o.train(x=features, y='target', training_frame=h2o_train)","584ced6c":"## check leaderboard\nmodel_h2o.leaderboard","d2879011":"## generate predictions\npreds_h2o = model_h2o.leader.predict(h2o_test).as_data_frame()['True']","fd9b25bf":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_h2o))\nsubmission.head()","67003086":"## save submission\nsubmission.to_csv(PATH_H2OAML_SUBMISSION)","adbf351c":"## clear memory\nh2o.cluster().shutdown()\ndel model_h2o\n\ngc.collect()","52a9ac50":"## install packages\n!python3 -m pip install -q lightautoml\n!python3 -m pip install -q -U torch\n!python3 -m pip install -q -U torchvision","ca85ad0c":"## import packages\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML\nfrom lightautoml.tasks import Task","bb331c69":"## run model\ntrain['target'] = dt.Frame(target)\n\nmodel_laml = TabularAutoML(task = Task('binary'), timeout = MAX_MODEL_RUNTIME_SECS)\nmodel_laml.fit_predict(train_data=train.to_pandas(), roles={'target': 'target'})\n\ndel train['target']","0525691b":"## generate predictions\npreds_laml = model_laml.predict(test.to_pandas()).data.ravel()","97d335aa":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_laml)\nsubmission.head()","837cd4c1":"## save submission\nsubmission.to_csv(PATH_LAML_SUBMISSION)","7645cef8":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\ndel model_laml\n\ngc.collect()","a9b410ea":"## import packages\nfrom tpot import TPOTClassifier","77408dc3":"## run model\nmodel_tpot = TPOTClassifier(scoring='roc_auc', max_time_mins=MAX_MODEL_RUNTIME_MINS)\nmodel_tpot.fit(features=train.to_pandas(), target=target)","13a33d66":"## check pipeline\nprint(model_tpot.fitted_pipeline_)","cf2cb552":"## generate predictions\npreds_tpot = model_tpot.predict_proba(test.to_pandas())[:, 1]","d825fb1d":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_tpot)\nsubmission.head()","a3e97d4a":"## save submission\nsubmission.to_csv(PATH_TPOT_SUBMISSION)","15a74a5d":"## clear memory\ndel model_tpot\n\ngc.collect()","21e7cf83":"Read more in [Documentation of FLAML](https:\/\/microsoft.github.io\/FLAML)","50acac17":"**Auto**mated **M**achine **L**earning (**AutoML**) has become widely adopted for building, experimenting and productionizing various types of machine learning models across business use-cases.\n\nThere are different open source solutions available and this notebook explores a simple baseline solution for some of them on the [Kaggle TPS (November 2021) competition](https:\/\/www.kaggle.com\/c\/tabular-playground-series-nov-2021).\n\n* [AutoGluon](#AutoGluon)\n* [EvalML](#EvalML)\n* [FLAML](#FLAML)\n* [H2O AutoML](#H2O-AutoML)\n* [LightAutoML](#LightAutoML)\n* [TPOT](#TPOT)","f204e941":"## LightAutoML\n<img src='https:\/\/github.com\/sberbank-ai-lab\/LightAutoML\/blob\/master\/imgs\/LightAutoML_logo_small.png?raw=true' width='150px'>\n\n[LightAutoML](https:\/\/github.com\/sberbank-ai-lab\/LightAutoML) is a framework for automatic classification and regression model creation open sourced by [Sberbank](https:\/\/www.sberbank.com) AI Lab.","f1584778":"## Similar Tutorials\nSimilar tutorials on other Kaggle TPS competitions are published here:\n\n* [AutoML Tutorial: TPS (January 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-january-2021)\n* [AutoML Tutorial: TPS (February 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-february-2021)\n* [AutoML Tutorial: TPS (March 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-march-2021)\n* [AutoML Tutorial: TPS (April 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-april-2021)\n* [AutoML Tutorial: TPS (May 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-may-2021)\n* [AutoML Tutorial: TPS (June 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-june-2021)\n* [AutoML Tutorial: TPS (July 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-july-2021)\n* [AutoML Tutorial: TPS (August 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-august-2021)\n* [AutoML Tutorial: TPS (September 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-september-2021)\n* [AutoML Tutorial: TPS (October 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-october-2021)","7197bd6b":"## AutoGluon\n<img src='https:\/\/user-images.githubusercontent.com\/16392542\/77208906-224aa500-6aba-11ea-96bd-e81806074030.png' width='250px'>\n\n[AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html) is an automl library open sourced by [Amazon](http:\/\/amazon.com\/aws)","f48176c5":"<div align='center'>\n    <h1>AutoML Tutorial<\/h1>\n    <img src='https:\/\/github.com\/vopani\/fortyone\/blob\/main\/images\/automl_banner_530_x_455.png?raw=true'>\n<\/div>","c9bec579":"Read more in [Documentation of LightAutoML](https:\/\/lightautoml.readthedocs.io\/en\/latest\/index.html)","adf2e4c4":"## TPOT\n<img src='https:\/\/raw.githubusercontent.com\/EpistasisLab\/tpot\/master\/images\/tpot-logo.jpg' width='150px'>\n\n[TPOT](http:\/\/epistasislab.github.io\/tpot) is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming","4800d6e7":"Read more in [Documentation of EvalML](https:\/\/evalml.alteryx.com)","cf044dc5":"Read more in [Documentation of TPOT](http:\/\/epistasislab.github.io\/tpot)","ff530507":"## FLAML\n<img src='https:\/\/github.com\/microsoft\/FLAML\/raw\/main\/docs\/images\/FLAML.png' width='150px'>\n\n[FLAML](https:\/\/microsoft.github.io\/FLAML) is a fast and light automl library open sourced by [Microsoft](https:\/\/opensource.microsoft.com)","ceb7ec78":"Read more in [Documentation of AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html)","7f3743a7":"## EvalML\n<img src='https:\/\/evalml.alteryx.com\/en\/stable\/_images\/evalml_horizontal.svg' width='250px'>\n\n[EvalML](https:\/\/evalml.alteryx.com\/en\/stable) is an automl library open sourced by [Alteryx](http:\/\/www.alteryx.com)","231da004":"## H2O AutoML\n<img src='https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/_images\/h2o-automl-logo.jpg' width='150px'>\n\n[H2O AutoML](https:\/\/www.h2o.ai\/products\/h2o-automl) is an automated machine learning library open sourced by [H2O.ai](https:\/\/h2o.ai)","e6cf5d3d":"Read more in [Documentation of H2O AutoML](https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html)"}}