{"cell_type":{"12a36845":"code","9f0cea8a":"code","d683fef8":"code","1609538d":"code","33ac17a4":"code","f9e7aa15":"code","89e0fb93":"code","38fe9261":"code","fdca7de3":"code","bc49da64":"code","8746cd4a":"code","940127f0":"code","d2b16b1b":"code","83caf94e":"code","90fb10c5":"code","77156fce":"code","5819d77a":"code","87137bf1":"code","e8477de6":"code","bcfc0c89":"code","6c3dc392":"code","98452684":"code","5e95097d":"code","4cce07b1":"code","dc819221":"code","250b0fb4":"code","6f5399b5":"code","2f3929f9":"code","7b774828":"code","ca16dc4e":"code","4e19a188":"code","90fd3d7a":"code","4316f6a9":"code","642c208f":"code","eb5b40fa":"code","4df14fe0":"code","b5fabef9":"code","53298468":"code","dfb5a0ae":"code","be08fc8a":"code","25899532":"code","b88aa8b6":"code","c806c968":"code","6ff5345f":"code","38d82157":"code","9b0f793f":"code","bbc4e22e":"code","d376f5eb":"code","e9d59a53":"code","d67698ae":"code","3c54af78":"code","74a2724f":"code","62130542":"code","4673425b":"code","f6899ca2":"code","de8308ee":"code","f273fa09":"code","a6f0244c":"markdown","7920f03f":"markdown"},"source":{"12a36845":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f0cea8a":"# This is for reading csv file and getting top 10 data from this file.\n\ndf=pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf.head()","d683fef8":"# We can get information about this dataset. \n# From this results we know that there are 7787 entries in this file and many of them are object (string), one is int variable.\n\ndf.info()","1609538d":"df.columns","33ac17a4":"# number of lines and columns\ndf.shape","f9e7aa15":"# datas with empty rating variables\n\nx=df['rating'].isnull()\ndf[x]","89e0fb93":"#datas with empty rating variables and release year more than 2015\n\ndf[(df['rating'].isnull()) & (df['release_year']>2015)]","38fe9261":"#movies and Tv Show bars\n\npt = sns.countplot(x='type', data = df)","fdca7de3":"#unique release years\n\ndf['release_year'].unique()","bc49da64":"#TV Show's release years\n\nTv = df[df.type == 'TV Show']\nTv['release_year'].unique()","8746cd4a":"#movies and Tv Show bars with counts\n\nsns.set(style='darkgrid')\nfig=plt.gcf()\nfig.set_size_inches(8.5,8.5)\na=pd.DataFrame(df['type'].value_counts())\na['name']=a.index\nplt.xticks(rotation=90, fontsize=14)\nplt.yticks(fontsize=12)\nplt.bar(a['name'],a['type'], color=['#FD511F','#FFFF48'],alpha=0.5)\ncount=0\nfor i in a['type']:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black')\n    count+=1\nplt.title('Distribution of TV Series & Movies',fontsize=20)\nplt.xlabel('Type',fontsize=16)\nplt.ylabel('Count',fontsize=16)\nplt.show()\n","940127f0":"#Turkish movies and TV Shows\n\nturkey=df[df.country=='Turkey']\nturkey.head()","d2b16b1b":"#After 2012,Turkish movies and TV Shows\n\nturkey_recent=turkey[turkey.release_year >= 2010]\ng=sns.catplot(data=turkey_recent, kind='count',x='release_year', hue='type',ci='sd',palette='dark',alpha=.6, height=6)\nax=plt.gca()\n\n#y lim max value to be set\ny_max=turkey_recent['type'].value_counts().max()\nax.set_ylim([0,12])\nplt.show()","83caf94e":"temp = list()\nclean_data = df.dropna()\nclean_data.reset_index(inplace=True)\nfor ind, element in clean_data.iterrows():\n    type_show = element['type']\n    country=element['country']\n    for director in str(element['director']).split(','):\n        temp.append([type_show, director,country])\ndirector_data = pd.DataFrame(temp, columns= ['type', 'director','country'])\ndirector_turkish_data=director_data[director_data.country=='Turkey']\ndirector_turkish_data\n","90fb10c5":"director_turkish_data_count = director_turkish_data.value_counts().to_frame()\ndirector_turkish_data_count.reset_index(level=[0,1], inplace=True)\nfamous_turkish_director = director_turkish_data_count.rename(columns={0:'count'})\nfamous_turkish_director = pd.concat([famous_turkish_director[famous_turkish_director['type'] == 'Movie'], famous_turkish_director[famous_turkish_director['type'] == 'TV Show']])\nfamous_turkish_director.reset_index(inplace=True)\nfamous_turkish_director","77156fce":"for unique_type in famous_turkish_director['type'].unique():\n    bar, ax = plt.subplots(figsize=(10,10))\n    sns.barplot(x = 'director', y = 'count', data = famous_turkish_director[famous_turkish_director['type'] == unique_type].iloc[:5])\n    plt.xlabel('Director in {}'.format(str(unique_type)))\n    plt.ylabel('Frequency')\n    plt.title('Famous Director in {}'.format(str(unique_type)), size=20)\n","5819d77a":"print(df.country.value_counts(dropna=False))","87137bf1":"#bir sutundaki verilere ait bilgileri verir\/\ndf.release_year.describe()","e8477de6":"#dagilim grafigini verir\/\ndf.boxplot(column='release_year')\nplt.show()","bcfc0c89":"df_new=df.head()\ndf_new","6c3dc392":"df.dtypes","98452684":"#veri grubunu yanyana birlestirmek icin kullaniliyor\/\ndata1=df[\"type\"].head()\ndata2=df[\"rating\"].head()\nconcatt=pd.concat([data1,data2],axis=1)\nconcatt","5e95097d":"#veri grubunu altalta birlestirmek icin kullaniliyor\/\ndata1=df.head()\ndata2=df.tail()\nconcattt=pd.concat([data1,data2],axis=0,ignore_index=True)\nconcattt","4cce07b1":"#herhangi bir datanin typeini degistirmek icin kullaniliyor\/\ndf[\"type\"]=df[\"type\"].astype('category')\ndf[\"release_year\"]=df[\"release_year\"].astype('float')\ndf.dtypes","dc819221":"df.info()","250b0fb4":"#directordaki herbir datanin verilerini getirir\/dropna ile nan olanlari da gosterir\/\ndf[\"director\"].value_counts(dropna=False)","6f5399b5":"#directordaki nan olan verileri at\/\ndata1=df\ndata1[\"director\"].dropna(inplace=True)","2f3929f9":"#yukaridaki ifadeyi test etmek icin kullanilir\/hicbirsey dondurmuyorsa dogru anlamina gelir\/\nassert  1==1","7b774828":"df[\"director\"].fillna('empty',inplace=True)","ca16dc4e":"assert df[\"director\"].notnull().all()","4e19a188":"#1.sutun type mi? Dogru oldugu icin hata dondurmuyor\/\n#assert df.columns[1]==\"type\"\n#release yearin typi float mi? Dogru oldugu icin hata donmuyor\/\nassert df.release_year.dtypes==np.float","90fd3d7a":"data1=df.loc[:,[\"release_year\"]]\ndata1.plot()\nplt.show()","4316f6a9":"data1.plot(kind=\"scatter\",x=\"release_year\",y=\"release_year\")\nplt.show()","642c208f":"time_list=[\"1988-05-24\",\"1986-06-30\"]\nprint(type(time_list[1])) #Olusturulan listedeki verilerin str typinda oldugunu gorduk\/\n\ndatetime_object=pd.to_datetime(time_list)\nprint(type(datetime_object)) #Yukaridaki kod ile datetimeindex typina donusturuldu\/","eb5b40fa":"import warnings\nwarnings.filterwarnings(\"ignore\") #hata donduren mesaj icin\/\n\ndata2=df.head()\ndate_list=[\"1988-05-24\",\"1986-06-30\",\"2018-09-09\",\"2018-04-22\",\"2016-02-12\"]\ndatetime_object=pd.to_datetime(date_list) #listedeki veriler datetime'a donusturuldu\/\ndata2[\"date\"]=datetime_object #data2'ye date alani eklendi ve datetime objesindeki veriler bu alanda tanimlandi\/\ndata2=data2.set_index(\"date\") #data2'deki index alani yukaridaki date olarak set edildi\/\ndata2","4df14fe0":"print(data2.loc[\"1988-05-24\"])\nprint(data2.loc[\"1988-05-24\":\"1985-06-30\"])","b5fabef9":"data2.resample(\"A\").mean()","53298468":"df=df.set_index(\"show_id\")\ndf.head()","dfb5a0ae":"df[\"director\"][1]\n#df.director[1]","be08fc8a":"df[[\"type\",\"country\"]]","25899532":"boolean=df.release_year>2020\ndf[boolean]","b88aa8b6":"df.country[df.release_year>2020]","c806c968":"#verileri ikiye bolup yazdiriyor\/\ndef div(n):\n    return n\/2\ndf.release_year.apply(div)","6ff5345f":"df.release_year.apply(lambda n:n\/2)","38d82157":"#Toplam hesaplanip ayri bir sutun acilabilir\/\n#data[\"total_power\"] = data.Attack + data.Defense\n#data.head()","9b0f793f":"print(df.index.name)\n\ndf.index.name=\"index_name\"\ndf.head()","bbc4e22e":"data1=df.set_index([\"type\",\"country\"])\ndata1.head()","d376f5eb":"dic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"F\",\"M\"],\"response\":[10,45,5,9],\"age\":[15,4,72,65]}\ndf1 = pd.DataFrame(dic)\ndf1","e9d59a53":"df1.pivot(index=\"treatment\",columns=\"gender\",values=\"response\")","d67698ae":"df2=df1.set_index([\"treatment\",\"gender\"])\ndf2","3c54af78":"df3=df2.swaplevel(0,1)\ndf3","74a2724f":"pd.melt(df1,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","62130542":"df1","4673425b":"df1.groupby(\"treatment\").mean()","f6899ca2":"df1.groupby(\"treatment\").age.mean()","de8308ee":"df1.groupby(\"treatment\")[[\"age\",\"response\"]].mean()","f273fa09":"df1.info()","a6f0244c":"# **Indexing Pandas Time Series**\n\n* parse_dates(boolean) -> Transform date to (yyyy-mm-dd hh-mm-ss) format.","7920f03f":"# **Manipulating Data Frames with Pandas**"}}