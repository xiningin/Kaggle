{"cell_type":{"65bb4ea8":"code","b6bfa096":"code","18498683":"code","f1b8a4fb":"code","592ec4d0":"code","ead71f58":"code","548f9a7d":"code","ad429227":"code","dd7f3cc4":"code","065c0b71":"code","09bf92e7":"code","91800f1b":"code","b12cfd27":"code","0fa5af0a":"code","ecba2e0b":"code","4eeb3909":"code","1ca1b327":"code","1ee0f116":"code","d978c56e":"code","52200de8":"code","d6f5f588":"code","c29e0490":"code","ee213302":"code","6dc1eece":"code","343696d7":"code","5fed8695":"code","b41638f9":"code","09a852a3":"code","ff4c1862":"code","a790cf3a":"code","403e339c":"code","2244a3bd":"code","63a1f859":"code","64943543":"code","acd3eb84":"code","4d994db6":"code","3a7061c4":"code","61452c94":"code","3526a181":"code","94375098":"code","41b5d417":"code","5fe43d88":"code","6be7b6c8":"code","dc2ff9e6":"code","b7501109":"code","7053787f":"code","91eff14c":"code","ee2f8be2":"code","3a107e14":"code","3e13d067":"code","408c11f9":"code","cb3decad":"code","c9dc7519":"code","ed956df6":"code","3cdfa020":"code","09fce125":"code","f5fd2513":"code","ca5bf98f":"code","a2e0ea14":"code","2bd48d47":"code","a6dde460":"code","59aab1b9":"code","6a9da81c":"code","5e349d84":"code","2bd4b796":"code","821306e2":"code","92b25bc4":"code","01cecf8e":"code","1c48f4d8":"code","6780f493":"code","b4d18750":"markdown","7b8f2073":"markdown","bab53e25":"markdown","1e10360c":"markdown","6d5f8463":"markdown","02a2d23b":"markdown","37a9a541":"markdown","453e9c0c":"markdown","9c1fb734":"markdown","a03a3b16":"markdown","8e427759":"markdown","13d9e53f":"markdown","118d77a3":"markdown","ab885fed":"markdown","2a1656ed":"markdown","7a24d5f9":"markdown","14306496":"markdown","f2083564":"markdown","dfe98393":"markdown","ea5f9ebd":"markdown","9d2ce37b":"markdown","86f1fd16":"markdown","7b042b9c":"markdown","2a45ecaf":"markdown","cc8dd302":"markdown","20767eb9":"markdown","11d2704c":"markdown","24c73974":"markdown","2416d759":"markdown","d6602cd6":"markdown","4dd913d6":"markdown","a994dd55":"markdown","8b0cf7a3":"markdown","da4cdb1d":"markdown","a1aaaef5":"markdown"},"source":{"65bb4ea8":"# Regular EDA and plotting libraries\nimport numpy as np # np is short for numpy\nimport pandas as pd # pandas is so commonly used, it's shortened to pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns # seaborn gets shortened to sns\n\n# We want our plots to appear in the notebook\n%matplotlib inline \n\n## Models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n## Model evaluators\nfrom sklearn.model_selection import train_test_split, cross_val_score, learning_curve\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import precision_score, recall_score, f1_score\nfrom sklearn.metrics import plot_roc_curve","b6bfa096":"df = pd.read_csv(\"..\/input\/body-performance-data\/bodyPerformance.csv\") # import file","18498683":"df.head()","f1b8a4fb":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\ndisplay(HTML(df.head(10).to_html()))","592ec4d0":"df.columns","ead71f58":"df.shape","548f9a7d":"df.info()","ad429227":"df.describe()","dd7f3cc4":"df.corr()","065c0b71":"df.gender.value_counts()","09bf92e7":"df[\"class\"].value_counts()","91800f1b":"df[\"class\"].value_counts(normalize=True)","b12cfd27":"pd.crosstab(df[\"class\"], df.gender)","0fa5af0a":"df_corr_matrix = df.corr()\nfig, ax = plt.subplots(figsize=(10, 10))\nax = sns.heatmap(df_corr_matrix,\n                annot = True,\n                cmap=\"Blues\")","ecba2e0b":"sns.scatterplot(x='weight_kg',y='height_cm',data=df,hue='class',palette='coolwarm')\nplt.xlim(20,140)\nplt.ylim(125,200)\nplt.show()","4eeb3909":"sns.scatterplot(x='gripForce',y='height_cm',data=df,hue='class',palette='coolwarm')\nplt.xlim(0,70)\nplt.ylim(125,200)\nplt.show()","1ca1b327":"sns.scatterplot(x='broad jump_cm',y='height_cm',data=df,hue='class',palette='coolwarm')\nplt.xlim(50,300)\nplt.ylim(125,200)\nplt.show()","1ee0f116":"sns.scatterplot(x='sit-ups counts',y='height_cm',data=df,hue='class',palette='coolwarm')\nplt.xlim(0,80)\nplt.ylim(125,200)\nplt.show()","d978c56e":"sns.scatterplot(x='gripForce',y='weight_kg',data=df,hue='class',palette='coolwarm')\nplt.xlim(0,70)\nplt.ylim(20,140)\nplt.show()","52200de8":"import seaborn as sns\nsns.set_theme(style=\"ticks\")","d6f5f588":"#sns.pairplot(df, hue=\"class\")","c29e0490":"pd.crosstab(df[\"class\"], df.gender).plot(kind=\"bar\", \n                                    figsize=(10,6), \n                                    color=[\"blue\", \"lightblue\"]);\nplt.title(\"R\u00e9partition des sexes selon les classes\")\nplt.xlabel(\"A = Best, B = Well, C = Passable , D = Worst \")\nplt.ylabel(\"Amount\")\nplt.legend([\"Female\", \"Male\"])\n","ee213302":"fig, axes = plt.subplots(1,4, figsize=(20,6))\nvar = ['gripForce', 'sit and bend forward_cm', 'sit-ups counts', 'broad jump_cm']\nfor var, axis in zip(var, axes):\n    sns.boxplot(x='gender', y=var, data=df, palette='coolwarm',ax=axis, hue='class')\naxes[1].set_ylim(-30, 50);","6dc1eece":"df.replace(\"M\", 0 , inplace = True)\ndf.replace(\"F\", 1 , inplace = True)","343696d7":"df.replace(\"A\", 1 , inplace = True)\ndf.replace(\"B\", 2 , inplace = True)\ndf.replace(\"C\", 3 , inplace = True)\ndf.replace(\"D\", 4 , inplace = True)","5fed8695":"df","b41638f9":"X = df.drop(\"class\" , axis = 1).values\ny = df['class'].values","09a852a3":"X","ff4c1862":"y","a790cf3a":"from sklearn.model_selection import train_test_split","403e339c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=1)","2244a3bd":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","63a1f859":"from sklearn.preprocessing import StandardScaler\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","64943543":"from tensorflow.keras.models import Sequential, load_model\n\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\n\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\n\nfrom tensorflow.keras.utils import to_categorical","acd3eb84":"class_names = ['A', 'B', 'C', 'D']","4d994db6":"from sklearn.linear_model import LogisticRegression","3a7061c4":"lr = LogisticRegression()\nlr.fit(X_train,y_train)","61452c94":"lr_score_train = lr.score(X_train,y_train)","3526a181":"lr_score_train","94375098":"lr_score_test = lr.score(X_test,y_test)","41b5d417":"lr_score_test","5fe43d88":"from sklearn.neighbors import KNeighborsClassifier","6be7b6c8":"knn = KNeighborsClassifier()","dc2ff9e6":"knn.fit(X_train, y_train)","b7501109":"knn_score_train = knn.score(X_train,y_train)","7053787f":"knn_score_train","91eff14c":"knn_score_test = knn.score(X_test,y_test)","ee2f8be2":"knn_score_test","3a107e14":"from sklearn.ensemble import RandomForestClassifier","3e13d067":"randomforest = RandomForestClassifier()","408c11f9":"randomforest.fit(X_train,y_train)","cb3decad":"randomforest_score_train = randomforest.score(X_train,y_train)","c9dc7519":"randomforest_score_train","ed956df6":"randomforest_score_test = randomforest.score(X_test,y_test)","3cdfa020":"randomforest_score_test","09fce125":"y_predict_lr = lr.fit(X_train, y_train).predict(X_test) ","f5fd2513":"print(classification_report(y_test, y_predict_lr, target_names = class_names))","ca5bf98f":"y_predict_knn = knn.fit(X_train, y_train).predict(X_test)","a2e0ea14":"print(classification_report(y_test, y_predict_knn, target_names = class_names))","2bd48d47":"y_predict_rf = randomforest.fit(X_train, y_train).predict(X_test)","a6dde460":"print(classification_report(y_test, y_predict_rf, target_names = class_names))","59aab1b9":"lr_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_lr))\nlr_cm","6a9da81c":"lr_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_lr))\nsns.heatmap(lr_cm, annot=True,cmap=\"mako_r\")","5e349d84":"knn_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_knn))\nknn_cm","2bd4b796":"knn_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_knn))\nsns.heatmap(knn_cm, annot=True,cmap=\"mako_r\")","821306e2":"randomforest_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_rf))\nrandomforest_cm","92b25bc4":"randomforest_cm = pd.DataFrame(confusion_matrix(y_test, y_predict_rf))\nsns.heatmap(randomforest_cm, annot=True,cmap=\"mako_r\")","01cecf8e":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy Score Lr: \",accuracy_score(y_test,y_predict_lr))\nprint(\"Accuracy Score Knn: \",accuracy_score(y_test,y_predict_knn))\nprint(\"Accuracy Score Rf: \",accuracy_score(y_test,y_predict_rf))\n","1c48f4d8":"predictors_group = ('Logistic Regression','Random Forest','KNN')\nx_pos = np.arange(len(predictors_group))\naccuracies = [lr_score_train, randomforest_score_train, knn_score_train]\n    \nplt.bar(x_pos, accuracies, align='center', color='blue')\nplt.xticks(x_pos, predictors_group, rotation='vertical')\nplt.ylabel('Accuracy (%)')\nplt.title(' Accuracies')\nplt.show()","6780f493":"predictors_group = ('Logistic Regression','Random Forest','KNN')\nx_pos = np.arange(len(predictors_group))\naccuracies = [lr_score_test, randomforest_score_test, knn_score_test]\n    \nplt.bar(x_pos, accuracies, align='center', color='blue')\nplt.xticks(x_pos, predictors_group, rotation='vertical')\nplt.ylabel('Accuracy (%)',)\nplt.title(' Accuracies')\nplt.show()","b4d18750":"Pour l'algorithme RandomForest, on a donc:\n- 579 individus ayant \u00e9t\u00e9 class\u00e9s comme appartenant \u00e0 la classe A, ce qui est bien. \n- Pour les individus de la classe B, 402 ont bien \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\n- Pour les individus de la classe C, 433 ont bien \u00e9t\u00e9 identifi\u00e9s.\n- Pour les individus de la classe D, 548 ont bien \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\nLe nombre de True Positive (TP) est donc de 1962.","7b8f2073":"D\u2019une mani\u00e8re g\u00e9n\u00e9rale, on retrouve toujours les bonnes pr\u00e9dictions sur la diagonale.\n\nOn a donc ici :\n- 492 individus ayant \u00e9t\u00e9 class\u00e9s comme appartenant \u00e0 la classe A, ce qui est assez faible. \n- Pour les individus de la classe B, 283 ont bien \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\n- Pour les individus de la classe C, 322 ont bien \u00e9t\u00e9 identifi\u00e9s.\n- Pour les individus de la classe D, 526 ont bien \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\nLe nombre de True Positive (TP) est donc de 1623.","bab53e25":"# KNN Model","1e10360c":"# Pr\u00e9parer les donn\u00e9es","6d5f8463":"- Les individus avec une grande taille sont plus perfomants en broadjump and gripforce.\n- Les individus de la classe A semblent avoir une tailler plus grande que la moyenne, au moment o\u00f9 les individus de la classe D ont une petite taille.\n","02a2d23b":"Les individus qui ont une masse  de graisse \u00e9lev\u00e9e dans leur corps (bodyfat), ils ont tendance \u00e0 ne pas trop bouger (sit-ups counts), et sont classifi\u00e9s dans la classe D.","37a9a541":"# Importation des donn\u00e9es","453e9c0c":"# Random Forest Model","9c1fb734":"**On n'a pas des donn\u00e9es manquantes.**","a03a3b16":"- D'apr\u00e8s le plot, nous pouvons dir que les individus de la classe D sont plus gros que les autres individus et ont un score de gripForce \u00e9lev\u00e9.","8e427759":"Dans notre cas, le probl\u00e8me que nous allons explorer est la classification de nos donn\u00e9es selon 4 classes ('A','B','C','D'), nous allons utiliser des algorithmes de classification.\nEn effet, nous allons utiliser un certain nombre de caract\u00e9ristiques (\u00e9l\u00e9ments d'information) diff\u00e9rentes du corps pour pr\u00e9dire dans quelle classe est classifi\u00e9e.\n","13d9e53f":"## Indicateurs M\u00e9triques ","118d77a3":" Visualiser notre dataset apr\u00e8s modification","ab885fed":"Dans notre dataset, on a : \n  - 3348 dans la classe A (Best body peformance)\n  - 3347 dans la classe B\n  - 3349 dans la classe C \n  - 3349 dans la classe D. \n  \n  \n  Comme ces valeurs sont presque \u00e9gales, on peut consid\u00e9rer que notre cible \"Classe\" est \u00e9quilibr\u00e9e. ","2a1656ed":"# D\u00e9finir le probl\u00e8me ","7a24d5f9":"D'apr\u00e8s la matrice de coor\u00e9lation, nous pouvons dire qu'il existe une corr\u00e9lation entre les variables, comme gender et bodyfat, height et bodyfat, height\/weight et gender.\n\n- Age et sit-ups counts sont n\u00e9gativement correl\u00e9s, ce qui veut dire que les individus jeunes s'assoient plus que les individus ag\u00e9s. \n- Il y a une correlation positive de 0.73 entre height et weight, et une correlation n\u00e9gative (-0.52) entre height et bodyfat, ce qui signifie que les individus avec une grande taille ont moins de graisse que les individus avec une petite taille. \n- Il y a une corr\u00e9lation n\u00e9gative entre bodyfat et autres variables (broad jump, sit-ups counts, et grip force), ce qui signifie que les individus avec moins de graisse ont tendance \u00e0 faire plus de broad jump, sit-ups and grip force.\n- Diastolic et systolic ont une corr\u00e9lation positive de 0.68.\n- les interessantes corr\u00e9lations sont ceux entre systolic et diastolic blood pressures, sit-up counts and broad jump. Quand les individus vieillissent ou grossissent, les sit-up counts et broad jump diminuent. Cette hypoth\u00e8se apparait chez les femmes plus que les hommes. \n- Et comme surprise, nous n'avons aucune corr\u00e9lation entre bodyfat et blood pressure.","14306496":"On visualise la distribution des deux sexes hommes et femmes selon les classes","f2083564":"# Exploration des donn\u00e9es","dfe98393":"# Visualisation des donn\u00e9es ","ea5f9ebd":"On retrouve toujours les bonnes pr\u00e9dictions sur la diagonale.\n\nOn a donc ici :\n- 552 individus ayant \u00e9t\u00e9 class\u00e9s comme appartenant \u00e0 la classe A, ce qui est bien. \n- Pour les individus de la classe B, 280 ont \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\n- Pour les individus de la classe C, 332 ont bien \u00e9t\u00e9 identifi\u00e9s.\n- Pour les individus de la classe D, 443 ont bien \u00e9t\u00e9 identifi\u00e9s comme appartenant \u00e0 cette classe.\nLe nombre de True Positive (TP) est donc de 1607.","9d2ce37b":"Accuracy permet de nous r\u00e9pondre \u00e0 la question : de toutes les classes positives et n\u00e9gatives, combien parmi elles ont \u00e9t\u00e9 pr\u00e9dites correctement ?","86f1fd16":"# Mod\u00e9lisation","7b042b9c":"# Pr\u00e9senter Dataset\n","2a45ecaf":"Le plot nous permet de bien visualiser le score des diff\u00e9rents algorithmes utilis\u00e9s. D'apr\u00e8s ces r\u00e9sultats, nous voyons que le Randomforest a le meilleur score soit pour les train_score ou test_score, ainsi que le Logictic R\u00e9gression est le plus faible pour les deux.","cc8dd302":"# Logistic Regression Model","20767eb9":"## Accuracy","11d2704c":"Les donn\u00e9es que nous allons explorer proviennent de la \" Korea Sports Promotion Foundation \" et montrent le niveau de performance du corps en tenant compte de l'\u00e2ge, du sexe, du poids,  de la taille et d'autres facteurs susceptibles d'influencer sur les performances corporelles.\n\nDans notre dataset, nous avons plus que 13000 observations des individus ag\u00e9s entre 20 ans et 64 ans.\n\nLes colonnes de notre dataset sont : \n  - age : 20 ~64\n  - gender : F,M\n  - height_cm : (If you want to convert to feet, divide by 30.48)\n  - weight_kg\n  - body fat_%\n  - diastolic : diastolic blood pressure (min)\n  - systolic : systolic blood pressure (min)\n  - gripForce\n  - sit and bend forward_cm\n  - sit-ups counts\n  - broad jump_cm\n  - class : A,B,C,D ( A: best) \/ stratified\n\n\nDans ce projet,nous allons explorer, analyser les diff\u00e9rents caract\u00e9ristiques qui peuvent avoir un impact sur la performance du coprs humain,apr\u00e8s nous allons essayer quelques algorithmes d'apprentissage, pour les \u00e9valuer et interpr\u00e9ter les r\u00e9sultats \u00e0 la fin. ","24c73974":"Dans notre dataset, on a  : \n   - 8467 hommes \n   - 4926 femmes.","2416d759":"Pr\u00e9cision permet de nous r\u00e9pondre \u00e0 la question : sur tous les enregistrements positifs pr\u00e9dits, combien sont r\u00e9ellement positifs ?\n\nRecall  r\u00e9pond \u00e0 la question : sur tous les enregistrements positifs, combien ont \u00e9t\u00e9 correctement pr\u00e9dits ?\n\nEn camparant les algorithmes utilis\u00e9s, nous pouvons dire que l'algorithme Randomforest, repr\u00e9sente les meilleurs valeurs des diff\u00e9rents param\u00e8tres m\u00e9triques, puisque les valeurs d\u00e9passent les 0.50 et sont proches.\n\nLe score F1 permet d'\u00e9valuer la performance des algorithmes, donc nous pouvons conclure d'apr\u00e8s les r\u00e9sultats que RandomForest est le plus performant.","d6602cd6":"- Les femmes sont plus souples que les hommes, mais eux sont plus forts (gripforce).","4dd913d6":"## Matrices de confusion","a994dd55":"On a besoin de convertir \"Gender\" et \"Class\" en num\u00e9rique.","8b0cf7a3":"---> D'apr\u00e8s la matrice de confusion, nous pouvons dire que l'algorithme RandomForest a bien identifi\u00e9 le plus grand nombre de TP de notre exemple.","da4cdb1d":"# Evaluation, Comparaison","a1aaaef5":"Une grande partie des individus avec un poids > 60KG sont class\u00e9s dans classe D, et ceux avec une grande taille et un poids <80 KG font partis surtout de la classe A. "}}