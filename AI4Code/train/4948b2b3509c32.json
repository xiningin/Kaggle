{"cell_type":{"0835f4b2":"code","50903626":"code","7a590b0f":"code","151fd195":"code","689a2358":"code","318a9b0d":"code","c3f5851f":"code","c25c434d":"code","a59f0467":"code","8fe9a677":"code","9c175e8a":"code","43fb68d4":"code","ae2c3f68":"code","00d12f19":"code","ab2cc484":"code","90b7e7ca":"code","fc83ed04":"code","723ea5d4":"code","a6a3d643":"code","c33ec103":"code","5427d9b4":"code","83b20141":"code","51731f3b":"code","f85d50d4":"code","e927214d":"code","d925d66e":"code","7f94d455":"code","16983eda":"code","2b01a0b8":"code","6cdb1818":"code","8645084c":"markdown","70a680e7":"markdown","f52b66b0":"markdown","daa36c67":"markdown","445ebd5a":"markdown","18883f1f":"markdown","08a72e2c":"markdown","b263ad51":"markdown","a29902dc":"markdown","fcf83258":"markdown"},"source":{"0835f4b2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom glob import glob\nimport os\n\n# From tensorflow\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense , Dropout , Flatten , Conv2D , MaxPooling2D\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\n\n# Import Sklearn\nfrom sklearn.preprocessing import StandardScaler \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import classification_report","50903626":"files=glob('..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset\/*\/*\/*')","7a590b0f":"len(files)","151fd195":"files[:3]","689a2358":"File_Path = pd.Series(files).astype(str)","318a9b0d":"Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],files))\nLabels = pd.Series(Labels)","c3f5851f":"Labels[:2]","c25c434d":"df = pd.concat([File_Path,Labels],axis=1)\ndf.columns = ['image', 'label']","a59f0467":"df","8fe9a677":"df = df[df[\"label\"].apply(lambda x: x[-2:] != \"GT\")].reset_index(drop=True)\ndf","9c175e8a":"df.label.value_counts()","43fb68d4":"fig=plt.figure(figsize=(15,8))\nsns.countplot(df['label'])","ae2c3f68":"x_train, x_test = train_test_split(df, test_size=0.2,random_state=30)\nx_train, x_val = train_test_split(x_train, test_size=0.2, random_state=30)\nprint(x_test.shape)\nprint(x_train.shape)\nprint(x_val.shape)","00d12f19":"img_gen = ImageDataGenerator(rescale = 1.\/255)","ab2cc484":"train = img_gen.flow_from_dataframe(dataframe=x_train, \n                                                 x_col='image', y_col='label', \n                                                 target_size=(200,200), color_mode='rgb', \n                                                 class_mode='categorical', shuffle=False)\n\ntest = img_gen.flow_from_dataframe(dataframe=x_test, \n                                                x_col='image', y_col='label', \n                                                target_size=(200,200), color_mode='rgb', \n                                                class_mode='categorical', shuffle=False)\nval = img_gen.flow_from_dataframe(dataframe=x_val,\n                                               x_col='image', y_col='label', \n                                               target_size=(200,200), color_mode='rgb', \n                                               class_mode='categorical',shuffle=False)","90b7e7ca":"input_shape=(200,200,3)\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=input_shape),\n    tf.keras.layers.MaxPool2D(pool_size = (2,2)),\n    tf.keras.layers.Conv2D(16, (3,3), activation='relu'),\n    tf.keras.layers.MaxPool2D(pool_size = (2,2)),\n    tf.keras.layers.Conv2D(16, (3,3), activation='relu'),\n    tf.keras.layers.MaxPool2D(pool_size = (2,2)),\n    tf.keras.layers.Conv2D(16, (3,3), activation='relu'),\n    tf.keras.layers.MaxPool2D(pool_size = (2,2)),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(512, activation='relu'),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(9, activation='softmax')\n])\n\nmodel.summary()","fc83ed04":"model.compile(optimizer='adam', \n              loss=\"categorical_crossentropy\", \n              metrics=['accuracy']) ","723ea5d4":"history = model.fit(train, validation_data=val, epochs=15)","a6a3d643":"accuracy = history.history['accuracy']\nval_accuracy  = history.history['val_accuracy']\n\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nplt.figure(figsize=(15,10))\n\nplt.subplot(2, 2, 1)\nplt.plot(accuracy, label = \"Training accuracy\")\nplt.plot(val_accuracy, label=\"Validation accuracy\")\nplt.legend()\nplt.title(\"Training vs validation accuracy\")\n\n\nplt.subplot(2,2,2)\nplt.plot(loss, label = \"Training loss\")\nplt.plot(val_loss, label=\"Validation loss\")\nplt.legend()\nplt.title(\"Training vs validation loss\")\n\nplt.show()","c33ec103":"pred = model.predict(test)\npred = np.argmax(pred,axis = 1) ","5427d9b4":"from sklearn.metrics import classification_report, confusion_matrix","83b20141":"from sklearn.metrics import accuracy_score\naccuracy_score(test.labels,pred)","51731f3b":"confusion_mtx = confusion_matrix(test.labels,pred) \nplt.figure(figsize=(10,8))\nsns.heatmap(confusion_mtx,annot=True,annot_kws={\"size\": 10} , cmap=\"YlGnBu\")\nplt.xlabel('Predicted')\nplt.ylabel('Actual')\nplt.plot()","f85d50d4":"print(classification_report(test.labels,pred))","e927214d":"from tensorflow.keras.preprocessing import image\ndef predict_it(image_location):\n  test_image=image.load_img(image_location, target_size = (200,200))\n  plt.imshow(test_image)\n  test_image=image.img_to_array(test_image)\n  test_image=test_image\/255\n  test_image = np.expand_dims(test_image, axis = 0)\n  preds=np.argmax(model.predict(test_image))\n  print(f'The fish is {list(test.class_indices.keys())[preds]}')\npredict_it('..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset\/Black Sea Sprat\/Black Sea Sprat\/00001.png')","d925d66e":"predict_it('..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset\/Gilt-Head Bream\/Gilt-Head Bream\/00001.png')","7f94d455":"from urllib.request import urlopen\nfrom PIL import Image","16983eda":"def predict_url(url):\n  img = Image.open(urlopen(url))\n  plt.imshow(img)\n  test_image=image.img_to_array(img)\n  test_image=tf.image.resize(test_image, (200, 200))\n  \n  test_image=test_image\/255\n  test_image = np.expand_dims(test_image, axis = 0)\n  preds=np.argmax(model.predict(test_image))\n  print(f'The fish is {list(test.class_indices.keys())[preds]}')","2b01a0b8":"predict_url('http:\/\/www.clovegarden.com\/ingred\/img\/sf_seabrm03g.jpg')","6cdb1818":"predict_url('https:\/\/img3.exportersindia.com\/product_images\/bc-full\/dir_14\/401539\/trout-fish-1538328.jpg')","8645084c":"## Test with online images","70a680e7":"Train test split","f52b66b0":"# Model creation","daa36c67":"# Loading data","445ebd5a":"# Training model","18883f1f":"# Generating data","08a72e2c":"# Prediction","b263ad51":"Removing GT images","a29902dc":"## Test with database images","fcf83258":"# Importing libraries"}}