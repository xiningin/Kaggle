{"cell_type":{"6422fa8c":"code","6a65aabc":"code","618485d3":"code","4df5004c":"code","9587c794":"code","0d5c5699":"code","91c12709":"code","10cd3dd3":"code","67aae445":"code","6bce89d9":"code","685fc1fe":"code","f5d2d335":"code","aba441eb":"code","0ccc03ef":"code","50b1b74c":"code","0c2e9050":"code","8f7c7631":"code","0d1eee45":"code","7c8c8b3f":"code","4ad155c1":"code","1260f1d8":"code","eb043a18":"code","6e4607c1":"code","60a57d09":"code","aa60f849":"code","ce12de23":"code","1001327f":"code","fab0b578":"code","7b020b30":"code","e6ee4e8b":"code","e913fa5f":"code","257eb29e":"markdown","a120e41b":"markdown","3c09004c":"markdown","60fd4738":"markdown","1929a64f":"markdown","eb1398c7":"markdown","b549b844":"markdown","d5c2ec02":"markdown","b9330fb4":"markdown","07a5f3c2":"markdown","5104bb84":"markdown","150e6cfd":"markdown","386a48be":"markdown","c4784a7d":"markdown","8a4066c8":"markdown","3be06169":"markdown","81fe42ca":"markdown","b56cd614":"markdown","87c0cdd4":"markdown","833b4126":"markdown","8c0e78a4":"markdown","412d23bd":"markdown","b332aeb4":"markdown","605d9381":"markdown","f1f09e51":"markdown","ae1236a8":"markdown","032fff56":"markdown","868b19c8":"markdown","dbb723b6":"markdown","c7f98c84":"markdown","716443e3":"markdown","3fe3bd80":"markdown","80026df7":"markdown","99c85dab":"markdown","8f5f8396":"markdown","473742ba":"markdown","aad22844":"markdown","aeb09ec0":"markdown","5e77104b":"markdown","597f03b4":"markdown","8925affa":"markdown","06c65350":"markdown","0b698b88":"markdown","d35bee7d":"markdown","d43f5b7f":"markdown","416d91b0":"markdown","d36ac63f":"markdown","38acaa85":"markdown","2b63443b":"markdown","4bfbe950":"markdown","adb9b3fa":"markdown","be230c0b":"markdown","4dbd89dd":"markdown","b8b9d898":"markdown","8d7051d1":"markdown","7dc45374":"markdown","298daeaa":"markdown","cb6f6093":"markdown","9416614f":"markdown","bb9c7cd4":"markdown","666db695":"markdown","a953ef21":"markdown","723d83b1":"markdown","3ef3780c":"markdown","d659f6e3":"markdown","7077fd06":"markdown"},"source":{"6422fa8c":"import numpy as np\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf","6a65aabc":"x = tf.Variable(3.0)\n\nwith tf.GradientTape() as tape:\n    y = x**2","618485d3":"# dy = 2x * dx\ndy_dx = tape.gradient(y, x)\ndy_dx.numpy()","4df5004c":"w = tf.Variable(tf.random.normal((3, 2)), name='w')\nb = tf.Variable(tf.zeros(2, dtype=tf.float32), name='b')\nx = [[1., 2., 3.]]\n\nwith tf.GradientTape(persistent=True) as tape:\n    y = x @ w + b\n    loss = tf.reduce_mean(y**2)","9587c794":"[dl_dw, dl_db] = tape.gradient(loss, [w, b])","0d5c5699":"print(w.shape)\nprint(dl_dw.shape)","91c12709":"my_vars = {\n    'w': w,\n    'b': b\n}\n\ngrad = tape.gradient(loss, my_vars)\ngrad['b']","10cd3dd3":"layer = tf.keras.layers.Dense(2, activation='relu')\nx = tf.constant([[1., 2., 3.]])\n\nwith tf.GradientTape() as tape:\n    # \uc815\uc0c1\ud30c\n    y = layer(x)\n    loss = tf.reduce_mean(y**2)\n\n# \ubaa8\ub4e0 \ud559\uc2b5 \uac00\ub2a5\ud55c \ubcc0\uc218\uc5d0 \ub300\ud574\uc11c \uae30\uc6b8\uae30\ub97c \uad6c\ud569\ub2c8\ub2e4\ngrad = tape.gradient(loss, layer.trainable_variables)","67aae445":"for var, g in zip(layer.trainable_variables, grad):\n    print(f'{var.name}, shape: {g.shape}')","6bce89d9":"# \ud559\uc2b5 \uac00\ub2a5\ud55c \ubcc0\uc218\nx0 = tf.Variable(3.0, name='x0')\n# \ud559\uc2b5 \ubd88\uac00\ub2a5\nx1 = tf.Variable(3.0, name='x1', trainable=False)\n# \ubcc0\uc218\uac00 \uc544\ub2d8: \ubcc0\uc218 + \ud150\uc11c\ub294 \ud150\uc11c\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\nx2 = tf.Variable(2.0, name='x2') + 1.0\n# \ubcc0\uc218\uac00 \uc544\ub2d8\nx3 = tf.constant(3.0, name='x3')\n\nwith tf.GradientTape() as tape:\n    y = (x0**2) + (x1**2) + (x2**2)\n\ngrad = tape.gradient(y, [x0, x1, x2, x3])\n\nfor g in grad:\n    print(g)","685fc1fe":"[var.name for var in tape.watched_variables()]","f5d2d335":"x = tf.constant(3.0)\nwith tf.GradientTape() as tape:\n    tape.watch(x)\n    y = x**2\n\n# dy = 2x * dx\ndy_dx = tape.gradient(y, x)\nprint(dy_dx.numpy())","aba441eb":"x0 = tf.Variable(0.0)\nx1 = tf.Variable(10.0)\n\nwith tf.GradientTape(watch_accessed_variables=False) as tape:\n    tape.watch(x1)\n    y0 = tf.math.sin(x0)\n    y1 = tf.nn.softplus(x1)\n    y = y0 + y1\n    ys = tf.reduce_sum(y)","0ccc03ef":"# dys\/dx1 = exp(x1) \/ (1 + exp(x1)) = sigmoid(x1)\ngrad = tape.gradient(y1, {'x0': x0, 'x1': x1})\n\nprint('dy\/dx0:', grad['x0'])\nprint('dy\/dx1:', grad['x1'].numpy())","50b1b74c":"x = tf.constant(3.0)\n\nwith tf.GradientTape() as tape:\n    tape.watch(x)\n    y = x * x\n    z = y * y\n\n# \uc911\uac04\uac12 y\uc5d0 \ub300\ud55c z\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 \ud14c\uc774\ud504\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n# dz_dy = 2 * y, where y = x ** 2\nprint(tape.gradient(z, y).numpy())","0c2e9050":"x = tf.constant([1, 3.0])\nwith tf.GradientTape(persistent=True) as tape:\n    tape.watch(x)\n    y = x * x\n    z = y * y\n\nprint(tape.gradient(z, x).numpy()) # 108.0 (x = 3\uc5d0\uc11c 4 * x**3)\nprint(tape.gradient(y, x).numpy()) # 6.0 (2 * x)","8f7c7631":"del tape # \ud14c\uc774\ud504\uc758 \ucc38\uc870\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4","0d1eee45":"x = tf.Variable(2.0)\nwith tf.GradientTape(persistent=True) as tape:\n    y0 = x**2\n    y1 = 1 \/ x\n\nprint(tape.gradient(y0, x).numpy())\nprint(tape.gradient(y1, x).numpy())","7c8c8b3f":"x = tf.Variable(2.0)\nwith tf.GradientTape() as tape:\n    y0 = x**2\n    y1 = 1 \/ x\n\nprint(tape.gradient({'y0': y0, 'y1': y1}, x).numpy())","4ad155c1":"x = tf.Variable(2.)\n\nwith tf.GradientTape() as tape:\n    y = x * [3., 4.]\n\nprint(tape.gradient(y, x).numpy())","1260f1d8":"x = tf.linspace(-10.0, 10.0, 200+1)\n\nwith tf.GradientTape() as tape:\n    tape.watch(x)\n    y = tf.nn.sigmoid(x)\n\ndy_dx = tape.gradient(y, x)","eb043a18":"plt.plot(x, y, label='y')\nplt.plot(x, dy_dx, label='dy\/dx')\nplt.legend()\n_ = plt.xlabel('x')","6e4607c1":"x = tf.constant(1.0)\n\nv0 = tf.Variable(2.0)\nv1 = tf.Variable(2.0)\n\nwith tf.GradientTape(persistent=True) as tape:\n    tape.watch(x)\n    if x > 0.0:\n        result = v0\n    else:\n        result = v1**2\n\ndv0, dv1 = tape.gradient(result, [v0, v1])\n\nprint(dv0)\nprint(dv1)","60a57d09":"dx = tape.gradient(result, x)\n\nprint(dx)","aa60f849":"x = tf.Variable(2.)\ny = tf.Variable(3.)\n\nwith tf.GradientTape() as tape:\n    z = y * y\nprint(tape.gradient(z, x))","ce12de23":"x = tf.Variable(2.0)\n\nfor epoch in range(2):\n    with tf.GradientTape() as tape:\n        y = x+1\n    \n    print(type(x).__name__, \":\", tape.gradient(y, x))\n    x = x + 1 # `x.assign_add(1)`\uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4","1001327f":"x = tf.Variable([[1.0, 2.0],\n                [3.0, 4.0]], dtype=tf.float32)\n\nwith tf.GradientTape() as tape:\n    x2 = x**2\n    \n    # \uc774 \ub2e8\uacc4\ub294 NumPy\ub85c \uacc4\uc0b0\ub429\ub2c8\ub2e4\n    y = np.mean(x2, axis=0)\n    \n    # \ub300\ubd80\ubd84\uc758 \uc5f0\uc0b0\ucc98\ub7fc, reduce_mean\uc740 `tf.conver_to_tensor`\ub97c \uc0ac\uc6a9\ud574\n    # NumPy \ubc30\uc5f4\uc744 \uc0c1\uc218 \ud150\uc11c\ub85c \ubcc0\ud658\ud560 \uac83\uc785\ub2c8\ub2e4\n    y = tf.reduce_mean(y, axis=0)\n\nprint(tape.gradient(y, x))","fab0b578":"# x0 \ubcc0\uc218\ub294 `int` dtype\uc744 \uac00\uc9d1\ub2c8\ub2e4.\nx = tf.Variable([[2, 2],\n                [2, 2]])\n\nwith tf.GradientTape() as tape:\n    # x1\uc73c\ub85c \uac00\ub294 \uacbd\ub85c\ub294 `int` dtype\uc73c\ub85c \uc778\ud574 \ub9c9\ud799\ub2c8\ub2e4.\n    y = tf.cast(x, tf.float32)\n    y = tf.reduce_sum(x)\n\nprint(tape.gradient(y, x))","7b020b30":"x0 = tf.Variable(3.0)\nx1 = tf.Variable(0.0)\n\nwith tf.GradientTape() as tape:\n    # x1 = x1 + x0\ub85c \uac31\uc2e0\ud569\ub2c8\ub2e4.\n    x1.assign_add(x0)\n    # \ud14c\uc774\ud504\ub294 x1\uc73c\ub85c \ubd80\ud130 \uae30\ub85d\uc744 \uc2dc\uc791\ud569\ub2c8\ub2e4\n    y = x1**2 # y = (x1 + x0) ** 2\n\n# \uc774\uac83\uc740 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\nprint(tape.gradient(y, x0)) # dy\/dx0 = 2*(x1 + x0)","e6ee4e8b":"image = tf.Variable([[[0.5, 0.0, 0.0]]])\ndelta = tf.Variable(0.1)\n\nwith tf.GradientTape() as tape:\n    new_image = tf.image.adjust_contrast(image, delta)\n\ntry:\n    print(tape.gradient(new_image, [image, delta]))\n    assert False # \uc2e4\ud589\ub418\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.\nexcept LookupError as e:\n    print(f'{type(e).__name__}: {e}')","e913fa5f":"x = tf.Variable([2., 2.])\ny = tf.Variable(3.)\n\nwith tf.GradientTape() as tape:\n    z = y**2\nprint(tape.gradient(z, x, unconnected_gradients=tf.UnconnectedGradients.ZERO))","257eb29e":"## \uae30\uc6b8\uae30 None \uac00\uc838\uc624\uae30","a120e41b":"\ud14c\uc774\ud504\ub294 \uacc4\uc0b0\uc774 TensorFlow\ub97c \ubc97\uc5b4\ub09c \uacbd\uc6b0 \uae30\uc6b8\uae30 \uacbd\ub85c\ub97c \uae30\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4:","3c09004c":"## \uc81c\uc5b4 \ud750\ub984","60fd4738":"\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294, TensorFlow\uc5d0\uc11c \ud2b9\ud788 [\uc989\uc2dc \uc2e4\ud589](https:\/\/www.tensorflow.org\/guide\/eager)\uc5d0\uc11c \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\ub294 \ubc29\ubc95\uc744 \ucc3e\uc544\ubcfc \uac83\uc785\ub2c8\ub2e4.","1929a64f":"\ub9cc\uc57d \uc774 \uc5f0\uc0b0\uc744 \ud1b5\ud574\uc11c \ubbf8\ubd84\uc744 \ud574\uc57c \ud55c\ub2e4\uba74, \uae30\uc6b8\uae30\ub97c \uad6c\ud604\ud558\uace0 ([tf.RegisterGradient](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/RegisterGradient)\ub97c \uc0ac\uc6a9\ud574) \ub4f1\ub85d\ud558\uac70\ub098, \ub2e4\ub978 \uc5f0\uc0b0\uc744 \uc0ac\uc6a9\ud574 \ud568\uc218\ub97c \ub2e4\uc2dc \uad6c\ud604\ud574\uc57c \ud560 \uac83\uc785\ub2c8\ub2e4.","eb1398c7":"\uae30\uc6b8\uae30\ub294 \uadfc\ubcf8\uc801\uc73c\ub85c \uc2a4\uce7c\ub77c \uc704\uc5d0\uc11c\uc758 \uc5f0\uc0b0\uc785\ub2c8\ub2e4.","b549b844":"[tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)\uc740 \uc0ac\uc6a9\uc790\uac00 \uc5b4\ub5a4 \uac83\uc774 \ubc14\ub77c\ubd10\uc9c0\uace0 \ub9d0\uc9c0 \uc81c\uc5b4\ud560 \uc218 \uc788\ub3c4\ub85d \ud6c5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","d5c2ec02":"[tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc740 \uadf8\uac83\uc758 \uac12\uc73c\ub85c \ub0b4\ubd80 \uc0c1\ud0dc\ub97c \uac00\uc9d1\ub2c8\ub2e4. \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \ub54c\uc5d0\ub294 \uc0c1\ud0dc\uac00 \uc77d\ud600\uc9d1\ub2c8\ub2e4. \ubcc0\uc218\uc5d0 \ub300\ud574 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\ub294 \uac83\uc740 \uc77c\ubc18\uc801\uc774\uc9c0\ub9cc, \ubcc0\uc218\uc758 \uc0c1\ud0dc\ub294 \uae30\uc6b8\uae30 \uacc4\uc0b0\uc744 \uadf8 \uc774\uc804\uc5d0 \uacc4\uc0b0\ub418\uc5c8\ub358 \uac83\uc73c\ub85c\ubd80\ud130 \ub9c9\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4:","b9330fb4":"## \uc790\ub3d9 \ubbf8\ubd84\uacfc \uae30\uc6b8\uae30","07a5f3c2":"`tf.Variables`\ub97c [tf.Module](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Module)\uc774\ub098 \uadf8 \uc0c1\uc18d\ub41c \ud074\ub798\uc2a4 ([layers.Layer](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/layers\/Layer), [keras.Model](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/Model))\ub85c \ubb36\ub294 \uac83\uc740 [\uac80\uc0ac\uc810](https:\/\/www.tensorflow.org\/guide\/checkpoint)\uc744 \ub9cc\ub4e4\uac70\ub098 [\ub0b4\ubcf4\ub0b4\uae30](https:\/\/www.tensorflow.org\/guide\/saved_model)\ub97c \ud558\uae30 \uc704\ud574 \ub9ce\uc774 \uc4f0\uc785\ub2c8\ub2e4.","5104bb84":"\uae30\ubcf8\uc801\uc778 \ud589\ub3d9\uc740 \ud559\uc2b5 \uac00\ub2a5\ud55c [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc5d0 \uc811\uadfc\ud55c \ud6c4\uc758 \ubaa8\ub4e0 \uc5f0\uc0b0\uc744 \uae30\ub85d\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8 \uc774\uc720\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:\n* \ud14c\uc774\ud504\ub294 \uc5ed\uc804\ud30c\uc5d0\uc11c\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 \uc815\uc0c1\ud30c\uc5d0\uc11c \uc5b4\ub5a4 \uc5f0\uc0b0\uc744 \uae30\ub85d\ud574\uc57c \ud558\ub294\uc9c0 \uc54c\uc544\uc57c \ud569\ub2c8\ub2e4.\n* \ud14c\uc774\ud504\ub294 \uc911\uac04\uc758 \uacb0\uacfc\uac12\uc758 \ucc38\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, \ubd88\ud544\uc694\ud55c \uc5f0\uc0b0\ub4e4\uc744 \uae30\ub85d\ud558\uace0 \uc2f6\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n* \ub300\ubd80\ubd84\uc758 \ud754\ud55c \uacbd\uc6b0\ub294 \ubaa8\ub378\uc758 \ud559\uc2b5 \uac00\ub2a5\ud55c \ubcc0\uc218\ub4e4 \ubaa8\ub450\uc5d0 \ub300\ud574\uc11c \uc190\uc2e4\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4.\n\n\uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uc758 \uc608\uc2dc\ub294 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \"\ubc14\ub77c\ubd10\uc9c0\uc9c0\" \uc54a\uace0 [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc774 \ud559\uc2b5 \ubd88\uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\ub294\ub370 \uc2e4\ud328\ud558\uac8c \ub429\ub2c8\ub2e4:","150e6cfd":"\ub9cc\uc57d \uac01 \ud56d\ubaa9\uc5d0 \ub300\ud574 \ubd84\ub9ac\ub41c \uae30\uc6b8\uae30\uac00 \ud544\uc694\ud558\ub2e4\uba74, [Jacobians](https:\/\/www.tensorflow.org\/guide\/advanced_autodiff#jacobians)\ub97c \ucc38\uace0\ud558\uc138\uc694.","386a48be":"\ud55c\ubc88 \uc5f0\uc0b0\uc744 \uae30\ub85d\ud558\uba74, \uc77c\ubd80 \uc6d0\ucc9c(\uc8fc\ub85c \ubaa8\ub378\uc758 \ubcc0\uc218\ub4e4)\uacfc \uc5f0\uad00\ub41c \uc77c\ubd80 \ubaa9\ud45c(\uc8fc\ub85c \uc190\uc2e4)\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 [GradientTape.gradient(target, sources)](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape#gradient)\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4:","c4784a7d":"[tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)\uc744 \uc0ac\uc6a9\ud558\ub294 \uc911\uac04\uc5d0 \uc788\ub294 \uc911\uac04 \ucd9c\ub825\uac12\uc5d0 \ub300\ud574\uc11c\ub3c4 \uae30\uc6b8\uae30\ub97c \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8a4066c8":"\uc77c\ubd80 \uacbd\uc6b0\uc5d0\uc11c, \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uae30\uc6b8\uae30\uc5d0 \ub300\ud574 `None` \ub300\uc2e0 0\uc744 \ubc1b\ub294 \uac83\uc774 \ud3b8\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. `unconnected_gradients` \uc778\uc790\ub97c \uc0ac\uc6a9\ud574 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uae30\uc6b8\uae30\ub97c \uac00\uc9c8 \ub54c \uc5b4\ub5a4 \uac83\uc744 \ubc18\ud658\ud560 \uc9c0 \uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","3be06169":"[tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\ub294 \ubcc0\uacbd \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4. \ud150\uc11c\uac00 \ud55c\ubc88 \uc0dd\uc131\ub418\uba74 \ubc14\uafc0 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uac12\uc744 \uac00\uc9c0\uc9c0\ub9cc, \uc0c1\ud0dc\ub294 \uac00\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc9c0\uae08\uae4c\uc9c0 \ub2e4\ub918\ub358 \ubaa8\ub4e0 \uc5f0\uc0b0\ub4e4 \ub610\ud55c \uc0c1\ud0dc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4: [tf.matmul](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/linalg\/matmul)\uc758 \ucd9c\ub825\uc740 \uc624\uc9c1 \uc785\ub825\uc5d0 \uc885\uc18d\ub429\ub2c8\ub2e4.","81fe42ca":"### 2. TensorFlow \ubc16\uc5d0\uc11c \uacc4\uc0b0\uc744 \ud55c \uacbd\uc6b0","b56cd614":"\uc774\ub807\uac8c \ud568\uc73c\ub85c\uc368 \uc190\uc2e4\uc758 \ubb36\uc74c\uc758 \ud569\uc758 \uae30\uc6b8\uae30\ub098, \uc6d0\uc18c \ubcc4 \uc190\uc2e4 \uacc4\uc0b0\uc758 \ud569\uc758 \uae30\uc6b8\uae30\ub97c \uac00\uc838\uc624\uae30 \uac04\ub2e8\ud574\uc9d1\ub2c8\ub2e4.","87c0cdd4":"\ub9cc\uc57d \ub4f1\ub85d\ub41c \uae30\uc6b8\uae30\uac00 \uc5c6\ub294 \uc2e4\uc218 \uc5f0\uc0b0\uc5d0\uc11c \uae30\uc6b8\uae30\ub97c \uad6c\ud558\ub824\uace0 \uc2dc\ub3c4\ud55c\ub2e4\uba74, \ud14c\uc774\ud2b8\ub294 \uc870\uc6a9\ud788 `None`\uc744 \ubc18\ud658\ud558\ub294 \ub300\uc2e0 \uc624\ub958\ub97c \ub0bc \uac83\uc785\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc744 \ud1b5\ud574 \ubb34\uc5b8\uac00 \uc798\ubabb\ub418\uc5c8\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","833b4126":"\ubc18\ub300\ub85c, `tf.Variable` \ubaa8\ub450\ub97c \ubc14\ub77c\ubcf4\ub294 \uae30\ubcf8 \ud589\ub3d9\uc744 \ube44\ud65c\uc131\ud654\ud558\uace0 \uc2f6\ub2e4\uba74, \uae30\uc6b8\uae30 \ud14c\uc774\ud504\ub97c \uc0dd\uc131\ud560 \ub54c\uc5d0 `watch_accessed_variables=False`\ub97c \uc124\uc815\ud558\uc138\uc694. \uc544\ub798\uc758 \uacc4\uc0b0\uc740 \ub450 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \uadf8 \uc911 \ud558\ub098\uc758 \uae30\uc6b8\uae30\ub9cc \uc5f0\uacb0\ud569\ub2c8\ub2e4:","8c0e78a4":"\uc544\ubb34\ub3c4 \ubb38\uc790\uc5f4\uc774 \ubbf8\ubd84 \uac00\ub2a5\ud560 \uac70\ub77c\uace0 \uae30\ub300\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc, `dtype`\uc744 \ud2b9\uc815\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 `int` \uc0c1\uc218\ub098 \ubcc0\uc218\ub97c \uc6b0\uc5f0\ud788 \uc0dd\uc131\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4.","412d23bd":"\uae30\uc6b8\uae30 \ud14c\uc774\ud504\uac00 \uc5f0\uc0b0\ub4e4\uc744 \uc2e4\ud589\uc2dc\ud0a4\uba74\uc11c \uae30\ub85d\ud558\uae30 \ub54c\ubb38\uc5d0, Python \uc81c\uc5b4 \ud750\ub984\uc740 \uc790\uc5f0\uc2a4\ub7fd\uac8c \ub2e4\ub904\uc9d1\ub2c8\ub2e4(\uc608\ub97c \ub4e4\uc5b4, `if`\uc640 `while` \uad6c\ubb38).","b332aeb4":"\uc774\ub807\uac8c\ub3c4 \uacc4\uc0b0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubc88\uc5d0\ub294 \ubcc0\uc218\uc758 \uc0ac\uc804\uc744 \ub118\uaca8\uc90d\ub2c8\ub2e4:","605d9381":"## \uc124\uc815","f1f09e51":"\uc81c\uc5b4 \uad6c\ubb38 \uc790\uccb4\ub294 \ubbf8\ubd84 \ubd88\uac00\ub2a5\ud558\ub2e4\ub294 \uac78 \uae30\uc5b5\ud558\uc138\uc694, \uadf8\ub798\uc11c \uc774\uac83\ub4e4\uc740 \uae30\uc6b8\uae30 \uae30\ubc18\uc758 \ucd5c\uc801\ud654\uc5d0\ub294 \ubcf4\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","ae1236a8":"\uba87\uac1c\uc758 [tf.Operation](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Operation)\uc740 **\ubbf8\ubd84 \ubd88\uac00\ub2a5\ud558\ub2e4\uace0 \ub4f1\ub85d**\ub418\uc5b4 \uc788\uace0 `None`\uc744 \ubc18\ud658\ud560 \uac83\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uac83\ub4e4\uc740 **\ub4f1\ub85d\ub41c \uae30\uc6b8\uae30\uac00 \uc5c6\uc2b5\ub2c8\ub2e4**.","032fff56":"\uac04\ub2e8\ud55c \uc608\uc81c\uc785\ub2c8\ub2e4:","868b19c8":"\uc608\ub97c \ub4e4\uc5b4, [tf.image.adjust_contrast](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/image\/adjust_contrast) \ud568\uc218\ub294 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud560 \uc218\ub294 \uc788\uc9c0\ub9cc \uad6c\ud604\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 [raw_ops.AdjustContrastv2](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/AdjustContrastv2)\ub97c \uac10\uc309\ub2c8\ub2e4:","dbb723b6":"[GradientTape.watch](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape#watch)\uac00 `x0`\uc5d0 \ub300\ud574\uc11c\ub294 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0, \uc774\uac83\uc5d0 \ub300\ud574 \uacc4\uc0b0\ub41c \uae30\uc6b8\uae30\ub294 \uc5c6\uc2b5\ub2c8\ub2e4:","c7f98c84":"## \uae30\uc6b8\uae30 \uacc4\uc0b0","716443e3":"\uadf8\ub798\uc11c, \ub9cc\uc57d \uc5ec\ub7ec \uac1c\uc758 \ubaa9\ud45c\uc5d0 \ub300\ud574\uc11c \uae30\uc6b8\uae30\ub97c \uc694\uccad\ud55c\ub2e4\uba74, \uac01 \uc6d0\ucc9c\uc5d0 \ub300\ud55c \uacb0\uacfc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:\n* \ubaa9\ud45c\ub4e4\uc758 \ud569\uc758 \uae30\uc6b8\uae30, \ub610\ub294 \uc11c\ub85c \uac19\uac8c\n* \uac01 \ubaa9\ud45c\uc758 \uae30\uc6b8\uae30\uc758 \ud569","3fe3bd80":"[\uc790\ub3d9 \ubbf8\ubd84](https:\/\/en.wikipedia.org\/wiki\/Automatic_differentiation)\uc740 \uc2e0\uacbd\ub9dd \ud559\uc2b5\uc744 \uc704\ud55c [\uc5ed\uc804\ud30c](https:\/\/en.wikipedia.org\/wiki\/Backpropagation)\uc640 \uac19\uc740 \uae30\uacc4 \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998\uc744 \uad6c\ud604\ud558\ub294\ub370\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4.","80026df7":"## \uc2a4\uce7c\ub77c\uac00 \uc544\ub2cc \uac83\ub4e4\uc758 \uae30\uc6b8\uae30","99c85dab":"\ubaa9\ud45c\uac00 \uc6d0\ucc9c\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uae30\uc6b8\uae30\ub85c None \uac12\uc744 \uac00\uc838\uc624\uac8c \ub420 \uac81\ub2c8\ub2e4.","8f5f8396":"## \uae30\uc6b8\uae30 \ud14c\uc774\ud504","473742ba":"\ube44\uc2b7\ud558\uac8c, \ubaa9\ud45c(\ub4e4)\uac00 \uc2a4\uce7c\ub77c\uac00 \uc544\ub2c8\ub77c\uba74 \ud569\uc758 \uae30\uc6b8\uae30\uac00 \uacc4\uc0b0\ub429\ub2c8\ub2e4:","aad22844":"\uac01 \uc6d0\ucc9c\uc5d0 \ub300\ud55c \uae30\uc6b8\uae30\ub294 \uc6d0\ucc9c\uc758 \ubaa8\uc591\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4:","aeb09ec0":"\uc815\uc218\uc640 \ubb38\uc790\uc5f4\uc740 \ubbf8\ubd84 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uacc4\uc0b0 \uacbd\ub85c\uac00 \uc774\ub7f0 \ub370\uc774\ud130 \uc790\ub8cc\ud615\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uae30\uc6b8\uae30\ub294 \uc5c6\uc744 \uac83\uc785\ub2c8\ub2e4.","5e77104b":"## \uc911\uac04 \uacb0\uacfc\uac12","597f03b4":"[tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\uc5d0 \ub300\ud574 \uae30\uc6b8\uae30\ub97c \uae30\ub85d\ud558\uace0 \uc2f6\ub2e4\uba74, [GradientTape.watch(x)](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape#watch)\ub97c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4:    ","8925affa":"## \ud14c\uc774\ud504\uac00 \ubb34\uc5c7\uc744 \ubc14\ub77c\ubcfc\uc9c0 \uc81c\uc5b4\ud558\uae30","06c65350":"\ube44\uc2b7\ud558\uac8c, [tf.data.Dataset](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/data\/Dataset) \ubc18\ubcf5\uc790\uc640 [tf.queue](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/queue)\ub294 \uc0c1\ud0dc \uc800\uc7a5 \uac00\ub2a5\ud558\uace0, \uc774\uac83\uc744 \uc9c0\ub098\ub294 \ubaa8\ub4e0 \ud150\uc11c\ub4e4 \uc704\uc758 \uae30\uc6b8\uae30\ub97c \ubaa8\ub450 \uba48\ucd9c \uac83\uc785\ub2c8\ub2e4.","0b698b88":"TensorFlow\ub294 \uc790\ub3d9 \ubbf8\ubd84\uc744 \uc704\ud574 [tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape) API\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4; \uc774\uac83\uc73c\ub85c \uc8fc\ub85c [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\ub85c \uc8fc\uc5b4\uc9c0\ub294 \uba87\uac1c\uc758 \uc785\ub825\uc5d0 \ub300\ud558\uc5ec \uacc4\uc0b0\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4. TensorFlow\ub294 [tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)\uc758 \ubb38\ub9e5 \uc548\uc5d0\uc11c \uc2e4\ud589\ub41c \uc5f0\uad00\ub41c \uc5f0\uc0b0\ub4e4\uc744 \"\ud14c\uc774\ud504\"\uc5d0 \"\uae30\ub85d\"\ud569\ub2c8\ub2e4. TensorFlow\ub294 \uadf8 \ub2e4\uc74c\uc5d0 [\ud6c4\uc9c4 \ubc29\uc2dd \ubbf8\ubd84](https:\/\/en.wikipedia.org\/wiki\/Automatic_differentiation)\uc744 \uc0ac\uc6a9\ud574 \"\uae30\ub85d\"\ub41c \uacc4\uc0b0\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 \uc774 \ud14c\uc774\ud504\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","d35bee7d":"[tf.raw_ops](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops)\ub294 \uc5b4\ub5a4 \ub0ae\uc740 \ub2e8\uacc4\uc758 \uc5f0\uc0b0\ub4e4\uc774 \ub4f1\ub85d\ub41c \uae30\uc6b8\uae30\uac00 \uc788\ub294\uc9c0 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","d43f5b7f":"* \uae30\uc6b8\uae30 \ud14c\uc774\ud504 \ubb38\ub9e5 \uc548\uc5d0\uc11c \uc5f0\uc0b0\uc744 \ud558\ub294 \uac83\uc5d0 \uc5f0\uad00\ub41c \uc57d\uac04\uc758 \ubd80\ub2f4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc989\uc2dc \uc2e4\ud589\uc5d0 \ub300\ud574\uc11c\ub294 \ub208\uc5d0 \ub744\uae30 \ud798\ub4e0 \ube44\uc6a9\uc774\uc9c0\ub9cc, \ud14c\uc774\ud504 \ubb38\ub9e5\uc740 \uc624\uc9c1 \ud544\uc694\ud55c \uacf3 \ubd80\uadfc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4.\n* \uae30\uc6b8\uae30 \ud14c\uc774\ud504\ub294 \uc5ed\uc804\ud30c \ub3d9\uc548 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc785\ub825\uacfc \ucd9c\ub825\uc744 \ud3ec\ud568\ud55c \uc911\uac04 \uacb0\uacfc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uba54\ubaa8\ub9ac\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\n  \ud6a8\uc728\uc131\uc744 \uc704\ud574\uc11c, \uba87 \uac1c\uc758 \uc5f0\uc0b0\ub4e4(`ReLu` \ub4f1)\uc740 \uc911\uac04 \uacb0\uacfc\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \ud544\uc694\uac00 \uc5c6\uace0, \uc774\uac83\ub4e4\uc740 \uc815\uc0c1\ud30c \ub3d9\uc548\uc5d0 \uc798\ub77c\ub0b4\uc9d1\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ud14c\uc774\ud504\uc5d0\uc11c `persistent=True`\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74, \uc5b4\ub5a4 \uac83\ub3c4 \ubb34\uc2dc\ub418\uc9c0 \uc54a\uc744 \uac83\uc774\uace0 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\uc758 \ucd5c\uace0\uc810\uc740 \ub354 \ub192\uc544\uc9c8 \uac83\uc785\ub2c8\ub2e4.","416d91b0":"## \uc131\ub2a5\uc5d0 \ub300\ud55c \ucc38\uace0","d36ac63f":"\ub450 \ubcc0\uc218 \ubaa8\ub450\uc5d0 \ub300\ud558\uc5ec `y`\uc758 \uae30\uc6b8\uae30\ub97c \uac00\uc838\uc624\uae30 \uc704\ud574\uc11c\ub294, `gradient` \uba54\uc18c\ub4dc\uc5d0 \ub450\uac1c \ubaa8\ub450 \uc6d0\ucc9c\uc73c\ub85c\uc11c \ub118\uaca8\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\uc774\ud504\ub294 \uc6d0\ucc9c\uc774 \uc5b4\ub5bb\uac8c \ub118\uaca8\uc9c0\ub294\uc9c0\uc5d0 \uc720\uc5f0\ud558\uace0 \uc5b4\ub5a4 \uc911\ucca9\ub41c \ubc30\uc5f4\uacfc \uc0ac\uc804\ub3c4 \uc218\uc6a9\ud558\uace0 \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \uad6c\uc870\ud654\ub41c \uae30\uc6b8\uae30\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4 ([tf.nest](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/nest)\ub97c \ubcf4\uc138\uc694).","38acaa85":"\uc77c\ubd80 \uacbd\uc6b0\uc5d0\ub294 Jacobian\uc744 \uc0dd\ub7b5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6d0\uc18c \ubcc4 \uacc4\uc0b0\uc5d0\uc11c, \uac01 \uc6d0\uc18c\ub294 \ub3c5\ub9bd\uc801\uc774\uae30 \ub54c\ubb38\uc5d0, \ud569\uc758 \uae30\uc6b8\uae30\ub294 \uac01 \uc6d0\uc18c\uc758 \uc785\ub825 \uc6d0\uc18c\uc5d0 \ub300\ud574\uc11c \uac01 \uc6d0\uc18c\uc758 \ubbf8\ubd84\uac12\uc744 \uc90d\ub2c8\ub2e4:","2b63443b":"\uae30\ubcf8\uc801\uc73c\ub85c, `GradientTape`\uc5d0 \uc7a1\ud78c \uc790\uc6d0\ub4e4\uc740 [GradientTape.gradient](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape#gradient) \uba54\uc18c\ub4dc\uac00 \ud638\ucd9c\ub41c \uc9c1\ud6c4\uc5d0 \ud574\uc81c\ub429\ub2c8\ub2e4. \uac19\uc740 \uacc4\uc0b0 \uc704\uc5d0\uc11c \uc5ec\ub7ec \uac1c\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uace0 \uc2f6\ub2e4\uba74, `persistent=True`\uc640 \ud568\uaed8 \uae30\uc6b8\uae30 \ud14c\uc774\ud504\ub97c \uc0dd\uc131\ud558\uc138\uc694. \uc790\uc6d0\ub4e4\uc740 \ud14c\uc774\ud504 \uac1d\uccb4\uac00 \ud68c\uc218\ub41c \uc774\ud6c4\uc5d0 \ud574\uc81c\ub418\uae30 \ub54c\ubb38\uc5d0 `gradient` \uba54\uc18c\ub4dc\ub97c \uc5ec\ub7ec\ubc88 \ud638\ucd9c\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4:","4bfbe950":"\uc8fc\ub85c \ub098\uc624\ub294 \uc624\ub958 \uc911 \ud558\ub098\ub294 \ubd80\uc8fc\uc758\ud558\uac8c [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc744 \uac31\uc2e0\ud558\uae30 \uc704\ud574 [Variable.assign](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable#assign)\uc744 \uc4f0\ub294 \ub300\uc2e0 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\ub85c \uad50\uccb4\ud558\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc544\ub798\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4:","adb9b3fa":"## \ubaa8\ub378\uc5d0 \ub530\ub978 \uae30\uc6b8\uae30","be230c0b":"\uc0c1\ud0dc\ub294 \uae30\uc6b8\uae30\ub97c \uba48\ucda5\ub2c8\ub2e4. \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\ub294 \uac1d\uccb4\ub85c\ubd80\ud130 \uc77d\uc744 \ub54c, \ud14c\uc774\ud504\ub294 \uc624\uc9c1 \ud604\uc7ac\uc758 \uc0c1\ud0dc\ub97c \uad00\ucc30\ud560 \uc218 \uc788\uace0, \uadf8 \uc0c1\ud0dc\uac00 \ub418\uae30\uae4c\uc9c0\uc758 \uae30\ub85d\uc740 \ubcfc \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","4dbd89dd":"### 4. \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\ub294 \uac1d\uccb4\ub97c \ud1b5\ud574 \uae30\uc6b8\uae30\ub97c \uad6c\ud558\ub294 \uacbd\uc6b0","b8b9d898":"\uc790\ub3d9\uc73c\ub85c \ubbf8\ubd84\ud558\uae30 \uc704\ud574\uc11c, TensorFlow\ub294 \uc815\ubc29\ud5a5 \uacc4\uc0b0\uc744 \ud558\ub294 \ub3d9\uc548 \uc5b4\ub5a4 \uc5f0\uc0b0\uc774 \uc5b4\ub5a4 \uc21c\uc11c\ub85c \uc77c\uc5b4\ub0ac\ub294\uc9c0 \uae30\uc5b5\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub9ac\uace0, \uc5ed\ubc29\ud5a5 \uacc4\uc0b0 \ub3d9\uc548, TensorFlow\ub294 \uc5f0\uc0b0\uc758 \ubaa9\ub85d\uc744 \uc5ed\ubc29\ud5a5\uc73c\ub85c \ud6a1\ub2e8\ud558\uba74\uc11c \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.","8d7051d1":"\ub300\ubd80\ubd84\uc758 \uacbd\uc6b0\uc5d0, \ubaa8\ub378\uc758 \ud559\uc2b5 \uac00\ub2a5\ud55c \ubcc0\uc218\uc5d0 \ub300\ud574 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uace0 \uc2f6\uc744 \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 [tf.Module](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Module)\uc758 \uc0c1\uc18d\ub41c \ud074\ub798\uc2a4\ub294 \ubcc0\uc218\ub4e4\uc744 [Module.trainable_variables](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Module#trainable_variables) \uc18d\uc131\uc5d0 \ubaa8\ub450 \ub2f4\uc544\ub450\uae30 \ub54c\ubb38\uc5d0, \uba87\uc904\uc758 \ucf54\ub4dc\ub85c \uc774\uac83\ub4e4\uc758 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","7dc45374":"[\"\ud14c\uc774\ud504\uac00 \ubb34\uc5c7\uc744 \ubc14\ub77c\ubcfc\uc9c0 \uc81c\uc5b4\ud558\uae30\"](https:\/\/www.tensorflow.org\/guide\/autodiff#watches) \uc808\uc5d0\uc11c \ud14c\uc774\ud504\uac00 [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc740 \uc790\ub3d9\uc73c\ub85c \ubc14\ub77c\ubcf4\uc9c0\ub9cc [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\ub294 \uadf8\ub807\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \ubd24\uc2b5\ub2c8\ub2e4.","298daeaa":"### 3. \uc815\uc218\ub098 \ubb38\uc790\uc5f4\uc744 \ud1b5\ud574 \uae30\uc6b8\uae30\ub97c \uad6c\ud558\ub294 \uacbd\uc6b0","cb6f6093":"\uc704\uc758 \uc608\uc81c\ub294 \uc2a4\uce7c\ub77c\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, [tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)\ub294 \uc5b4\ub5a4 \ud150\uc11c\uc5d0\uc11c\ub3c4 \uc27d\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4:","9416614f":"## None \ub300\uc2e0 0","bb9c7cd4":"## \ub4f1\ub85d\ub41c \uae30\uc6b8\uae30\uac00 \uc5c6\ub294 \uc5f0\uc0b0","666db695":"# \uae30\uc6b8\uae30\uc640 \uc790\ub3d9 \ubbf8\ubd84\uc5d0 \ub300\ud55c \uc18c\uac1c","a953ef21":"\uc5ec\uae30\uc11c `z`\ub294 \uba85\ubc31\ud558\uac8c `x`\ub791 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc9c0\ub9cc, \uae30\uc6b8\uae30\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc744 \uba87\uac00\uc9c0 \uba85\ubc31\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4.","723d83b1":"### 1. \ubcc0\uc218\ub97c \ud150\uc11c\ub85c \uad50\uccb4\ud55c \uacbd\uc6b0","3ef3780c":"\uc704\uc758 \uc608\uc81c\uc5d0\uc11c\ub294 `x`\uc758 \uac12\uc5d0 \ub530\ub77c, \ud14c\uc774\ud504\uac00 `result = v0`\ub098 `result = v1**2` \uc911\uc5d0 \ud558\ub098\ub97c \uae30\ub85d\ud569\ub2c8\ub2e4. `x`\uc5d0 \ub300\ud55c \uae30\uc6b8\uae30\ub294 \ud56d\uc0c1 `None`\uc785\ub2c8\ub2e4.","d659f6e3":"\uc5ec\uae30, `if`\uc758 \uac01 \uac00\uc9c0 \uc704\uc5d0 \ub2e4\ub978 \ubcc0\uc218\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uae30\uc6b8\uae30\ub294 \uc624\uc9c1 \uc0ac\uc6a9\ub41c \ubcc0\uc218\uc5d0\ub9cc \uc5f0\uacb0\ub429\ub2c8\ub2e4:","7077fd06":"[GradientTape.watched_variables](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape#watched_variables) \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud14c\uc774\ud504\uc5d0 \ubcf4\uc5ec\uc9c0\ub294 \ubcc0\uc218\ub4e4\uc744 \ub098\uc5f4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"}}