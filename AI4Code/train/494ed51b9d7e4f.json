{"cell_type":{"cd9ea1bf":"code","4f8f5658":"code","cced93a0":"code","c42d1500":"code","929aafef":"code","47bd6ab4":"code","7b91ea9d":"code","202ba5ba":"code","917058e5":"code","5ba12ab1":"code","0905f349":"code","304a6c44":"code","859d7696":"code","968a9822":"code","21e92508":"code","42b2ac22":"code","cbbac487":"code","511ab684":"code","73cfe447":"code","b5cce1f7":"code","ed042603":"markdown","6185d6b8":"markdown","1eb21112":"markdown","508a54a9":"markdown"},"source":{"cd9ea1bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4f8f5658":"from sklearn.compose import ColumnTransformer\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.pipeline import Pipeline","cced93a0":"df_train = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")","c42d1500":"df_test = pd.read_csv('..\/input\/home-data-for-ml-course\/test.csv')","929aafef":"y = df_train['SalePrice']","47bd6ab4":"df_train.drop(['SalePrice','Id'],axis=1,inplace=True)","7b91ea9d":"test_index = df_test['Id']\ndf_test.drop('Id',axis=1,inplace=True)","202ba5ba":"numerical_cols= df_train.select_dtypes(exclude='object').columns","917058e5":"catagorical_cols = df_train.select_dtypes(include='object').columns","5ba12ab1":"numerical_transfer = SimpleImputer(strategy='constant')","0905f349":"catagorical_transfer = Pipeline(steps=\n                                [\n                                    ('imputer',SimpleImputer(strategy='most_frequent')),\n                                    ('onehot',OneHotEncoder(handle_unknown='ignore'))\n                                ])","304a6c44":"preprocessor = ColumnTransformer(transformers=\n                                 [\n                                     ('num',numerical_transfer,numerical_cols),\n                                     ('cat',catagorical_transfer,catagorical_cols)\n                                 ])","859d7696":"from sklearn.ensemble import RandomForestRegressor","968a9822":"model = RandomForestRegressor(n_estimators=100,random_state=0)","21e92508":"my_pipeline =Pipeline(steps = \n                     [\n                         ('preprocessor',preprocessor),\n                         ('model',model)\n                     ])","42b2ac22":"my_pipeline.fit(df_train,y)","cbbac487":"pred = my_pipeline.predict(df_test)","511ab684":"output = pd.DataFrame({'Id':test_index,\n                      'SalePrice':pred})","73cfe447":"output.to_csv('using_pipeline_1.csv',index=False)","b5cce1f7":"pd.read_csv('using_pipeline_1.csv')","ed042603":"### Data","6185d6b8":"### Define the model","1eb21112":"### Define Preprocessing steps","508a54a9":"### Submission"}}