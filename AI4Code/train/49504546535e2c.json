{"cell_type":{"aa131eb8":"code","9773dd53":"code","f329054d":"code","b40ca582":"code","168318ea":"code","1cfe43e5":"code","3ba5d688":"code","31a4286f":"code","4aecfb4b":"code","f5d1e57d":"code","d10793ed":"code","6aa60577":"code","fc2c237a":"code","b502cf0f":"code","43735030":"code","2647ffb2":"code","f1820963":"code","6e4d5447":"code","31b3e50a":"code","763f657c":"code","de4d93f2":"code","91e499da":"code","36120cb3":"code","26dc5c52":"code","dbbf03d7":"code","25d9e84e":"code","d64f3b74":"code","5b557e32":"code","a2a74fc7":"code","1f12efb2":"code","b4a11670":"code","4b77afa6":"code","be8ca07a":"code","863cf473":"code","937327a4":"code","58c45e0f":"code","09cbdbed":"code","e96dd2fc":"code","f9cc18ce":"code","71836e7b":"code","783a2517":"code","256bcb18":"code","7dc95b42":"code","cb1825f4":"code","6795d4fa":"code","d0395acb":"code","3e4e43e3":"code","5cbc889b":"code","c4e5c874":"code","07d4219b":"code","800050d6":"code","6daad75a":"code","38849e14":"code","daee538f":"code","3a11a338":"code","14bebe8a":"code","bc282a29":"code","87953595":"code","2e666825":"code","2c2e20ff":"code","1eb2f0ed":"markdown","9663ddf9":"markdown"},"source":{"aa131eb8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9773dd53":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer","f329054d":"df = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')","b40ca582":"df.head()","168318ea":"df.sex.replace('female', 0, inplace = True)\ndf.sex.replace('male', 1, inplace = True)","1cfe43e5":"df.smoker.replace('no', 0, inplace = True)\ndf.smoker.replace('yes', 1, inplace = True)","3ba5d688":"df.region.value_counts()","31a4286f":"df.head()","4aecfb4b":"df.isna().sum()","f5d1e57d":"sns.catplot(x = 'sex', y = 'charges', data = df, kind = 'box')\n# The men have a larger range of charges even though the median for both sexes is around the same. \n#I confirmed in the cell below that it wasn't because more men went to the hospital\n# it could be that the range of issues they're dealing with incurred a more varied amount of charges than women.","d10793ed":"df.sex.value_counts()","6aa60577":"sns.catplot(x = 'smoker', y = 'charges', data = df, kind = 'box')","fc2c237a":"sns.scatterplot(df.bmi, df.charges, data = df)\n# No clear trend, but there are 2 clusters that emerge: the bigger lower bottom and the upper one","b502cf0f":"sns.scatterplot(df.bmi, df.charges, data = df, hue = 'smoker')\n# There is a definite trend where the smokers are highlighted.","43735030":"sns.catplot('children', 'charges', data = df, kind = 'box')","2647ffb2":"sns.scatterplot(df.age, df.charges, data = df)\n# Generally, the charges are rising with age","f1820963":"sns.scatterplot(df.age, df.charges, data = df, hue = 'smoker')","6e4d5447":"sns.scatterplot(df.age, df.charges, data = df, hue ='bmi')\n#Generally, the higher bmi's have higher charges within the same age range","31b3e50a":"df.head()","763f657c":"sns.scatterplot(df.age, df.charges, data = df, hue ='sex')\n# I can't tell too much of a  pattern here, where there are children involved.","de4d93f2":"sns.scatterplot(df.age, df.charges, data = df, hue ='children')\n# I can't tell too much of a  pattern here, where there are children involved.","91e499da":"sns.scatterplot(df.age, df.charges, data = df, hue ='region')\n#There's no pattern where it comes to region, either","36120cb3":"sns.catplot('region', 'charges', data = df, kind = 'box')\n# Region doesn't seem to be playing a role","26dc5c52":"df.corr()","dbbf03d7":"sns.heatmap(df.corr())\n#There's a stong correlation between smokers and the charges\n# Age with the charges , and then bmi with the charges, as well\n","25d9e84e":"# Because children, sex and region do not appear to have a correlation, I'll drop them.\n#df.drop(['sex', 'region'], axis = 1, inplace = True)","d64f3b74":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import StackingRegressor\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import cross_validate","5b557e32":"x = df.iloc[:, :-1]","a2a74fc7":"x.head()","1f12efb2":"x.drop(['children','sex','region'], axis = 1, inplace = True)","b4a11670":"y = df.iloc[:, -1:]","4b77afa6":"y.head()","be8ca07a":"x","863cf473":"#enc = OneHotEncoder()","937327a4":"#columntransform = ColumnTransformer([('encoder', enc, [3])],remainder = 'passthrough')","58c45e0f":"#x = columntransform.fit_transform(x)","09cbdbed":"#x","e96dd2fc":"#x = pd.DataFrame(x)","f9cc18ce":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, random_state = 1, test_size = 0.2)","71836e7b":"lr = LinearRegression()\ndr = DecisionTreeRegressor(random_state = 1)\ngr = GradientBoostingRegressor(learning_rate = 0.1)\npr = PolynomialFeatures(degree = 2)\nmm = MinMaxScaler()\nsvrl = SVR(kernel = 'linear')\nsvrr = SVR(kernel = 'rbf')\nsvrp = SVR(kernel = 'poly')\n","783a2517":"pipelr = Pipeline([('scaler', mm), ('linear', lr)])\npipedr = Pipeline([('scaler', mm), ('decision', dr)])\npipegr = Pipeline([('scaler', mm), ('gradient boosting', gr)])\npipepr = Pipeline([('scaler', mm), ('polinomial', pr)])\npipesvrl = Pipeline([('scaler', mm), ('linear', svrl)])\npipesvrp = Pipeline([('scaler', mm),('poly', svrp)])\npipesvrr = Pipeline([('scaler', mm),('rbf', svrr)])","256bcb18":"pipelr.fit(xtrain, ytrain)\npipelr.score(xtrain, ytrain)\npipelr.score(xtest, ytest)","7dc95b42":"cv = cross_validate(pipelr,x, y,  cv= 10)\ncv['test_score']","cb1825f4":"pipedr.fit(xtrain, ytrain)\npipedr.score(xtrain, ytrain)\npipedr.score(xtest, ytest)","6795d4fa":"pipegr.fit(xtrain, ytrain)\npipegr.score(xtrain, ytrain)\npipegr.score(xtest, ytest)","d0395acb":"cv = cross_validate(pipegr,x, y,  cv= 10)\ncv['test_score'] ","3e4e43e3":"pipesvrl.fit(xtrain, ytrain)\npipesvrl.score(xtrain, ytrain)\npipesvrl.score(xtest, ytest)","5cbc889b":"pipesvrr.fit(xtrain, ytrain)\npipesvrr.score(xtrain, ytrain)\npipesvrr.score(xtest, ytest)","c4e5c874":"pipesvrp.fit(xtrain, ytrain)\npipesvrp.score(xtrain, ytrain)\npipesvrp.score(xtest, ytest)","07d4219b":" \n#x = pipepr.fit_transform(x)\n#xtrain_poly, xtest_poly, ytrain,ytest = train_test_split(x, y, random_state = 0, test_size = 0.2)\n#pipelr.fit(xtrain_poly, ytrain)\n#pipelr.score(xtrain_poly, ytrain)\n#pipelr.score(xtest_poly, ytrain)","800050d6":"x_quad = pipepr.fit_transform(x)\nxtrainr, xtestr, ytrainr, ytestr = train_test_split(x_quad,y, random_state = 0, test_size = 0.2)\n\nplr = LinearRegression().fit(xtrainr,ytrainr)\n\nY_train_pred = plr.predict(xtrainr)\nY_test_pred = plr.predict(xtestr)\n\nprint(plr.score(xtestr, ytestr))","6daad75a":"cv = cross_validate(plr,x_quad, y,  cv= 10)\ncv['test_score']","38849e14":"estimators = [('gr', gr),('plr', plr)]","daee538f":"sr = StackingRegressor(estimators=estimators)","3a11a338":"sr.fit(xtrain, ytrain)\nsr.score(xtrain, ytrain)\nsr.score(xtest, ytest)","14bebe8a":"cv = cross_validate(sr,x, y,  cv= 10)\ncv['test_score']","bc282a29":"x.bmi\ny \n","87953595":"sns.distplot(y)","2e666825":"m, b = np.polyfit(x.bmi, y, 1)","2c2e20ff":"plt.plot(x, y, 'o')\nplt.plot(x, m*x + b)","1eb2f0ed":"**Conclusion: Sex and Region are not playing a role in determining charges!**","9663ddf9":"## Insurance Forecast for Medical Cost Personal Datasets using Linear Regression\n \n### Can you accurately predict insurance costs?"}}