{"cell_type":{"ffff3612":"code","b311886c":"code","84e4d41e":"code","5f658084":"code","850da82f":"code","bb2350f2":"code","b2b7b297":"code","bde134b8":"code","3b1c4326":"code","cf38fcd1":"code","e8d777a3":"code","6f469a50":"code","795b975f":"code","0938bb7e":"code","b58c64c0":"code","aab6033b":"code","2c1dc609":"code","142bedb1":"code","2d15a999":"code","bd03b3b0":"code","5ab02477":"code","2530ac8d":"code","f130a6ef":"code","2bf79106":"code","37cc10a4":"code","3ca80093":"code","fae515f3":"code","dcffeb97":"code","8c6865e2":"code","92fd99c0":"code","a829e6f6":"code","03923057":"code","f53c5879":"code","e3a1b318":"code","2b21603c":"code","475cee05":"code","bdafdca2":"code","6e5bc688":"code","44955faa":"code","7e46ffff":"code","3ee4363b":"code","9986b863":"code","3fcedce8":"code","36ab8f08":"markdown","05bae36f":"markdown","ef36e29e":"markdown","18b76eed":"markdown","35521f79":"markdown","668ab338":"markdown","5ecb9244":"markdown","ffa8ae43":"markdown","003ee051":"markdown","1d71d32c":"markdown","443368de":"markdown","dd685a3a":"markdown","9e1375de":"markdown","4100acba":"markdown","242f35ea":"markdown","c36d3cc6":"markdown","05eb45f2":"markdown","c57a17a7":"markdown","7cbfac90":"markdown","d814658d":"markdown","0eaf7235":"markdown","247864f4":"markdown","b5cb1688":"markdown","696b0dfc":"markdown","a8430282":"markdown","c45b0c58":"markdown","2f693f44":"markdown","e77bc8b1":"markdown","bae84142":"markdown","77bc8dc6":"markdown","af335471":"markdown","0c63934f":"markdown","2157a289":"markdown","a5b87e17":"markdown","4f4e1db3":"markdown","945fd940":"markdown","3746009d":"markdown","fb128aff":"markdown","15a1b5ca":"markdown","679fa040":"markdown","e3e9b265":"markdown","8e314a25":"markdown","81f81d20":"markdown","f75e58a0":"markdown","3c5b8cab":"markdown","b2238250":"markdown","5cb62b7f":"markdown","8d8db434":"markdown","09e5adab":"markdown","7585c420":"markdown","c6857a48":"markdown","e7c8f33c":"markdown","46614279":"markdown","61604be1":"markdown","bd4a78b6":"markdown","c0c0f087":"markdown","8b40afac":"markdown","bfa4845d":"markdown","ceaf8223":"markdown","e7070233":"markdown","244d41e1":"markdown","3ae9b6c2":"markdown","825eb7e0":"markdown","be63f2d0":"markdown","c29c7591":"markdown","678f0eb5":"markdown","1ca458f1":"markdown","c141fc34":"markdown","d752bf8b":"markdown","84f45570":"markdown","5b9761ef":"markdown","e2dce0f1":"markdown","b10d30c4":"markdown","40e4fed0":"markdown"},"source":{"ffff3612":"lst_senhas = ['123', \n              'abc', \n              'abcde123', \n              'abc123', \n              '123456', \n              'senha', \n              'senha123', \n              's3nh@', \n              's3nh@!@#$', \n              '@Dg$adqFr& 56>!']","b311886c":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","84e4d41e":"df = pd.DataFrame(lst_senhas)\n\n# Mostra somente as primeiras entradas do DataFrame\n# A primeira coluna de numeros refere-se ao indice de cada linha (senha)\n# O zero acima da coluna indica que a coluna n\u00e3o possui nome\ndf.head() ","5f658084":"df.columns = ['senhas'] # Nomeia a coluna como senhas\ndf","850da82f":"df['senhas']","bb2350f2":"type(df)","b2b7b297":"type(df['senhas'])","bde134b8":"# Para cada senha, calcule o tamanho da string\n# Lembre-se, a primeira coluna de nums refere-se ao indice\n# O tipo resultante dessa opera\u00e7\u00e3o tb \u00e9 pandas.Series\ndf['senhas'].str.len()","3b1c4326":"# Acrescenta a coluna tam ao DataFrame com os dados de pandas.Series\ndf['tam'] = df['senhas'].str.len()\ndf","cf38fcd1":"df.sort_values(by = ['tam'], ascending = False)","e8d777a3":"df['n_dig'] = df['senhas'].str.count(r\"[0-9]\")\ndf","6f469a50":"df['tem_dig'] = df['senhas'].str.match(r\".*[0-9].*\")\ndf","795b975f":"df['n_letras'] = df['senhas'].str.count(r\"[a-zA-Z]\")\ndf","0938bb7e":"df['tem_letras'] = df['senhas'].str.match(r\".*[a-zA-Z].*\")\ndf","b58c64c0":"df['n_cesp'] = df['senhas'].str.count(r\"[_!@#$%\u02c6&*() +={}\\[\\]`|'\\\\\\\"\/?.>,<~-]\")\ndf","aab6033b":"df['tem_cesp'] = df['senhas'].str.match(r\".*[_!@#$%\u02c6&*() +={}\\[\\]`|'\\\\\\\"\/?.>,<~-].*\")\ndf","2c1dc609":"df.tam.mean()","142bedb1":"df.n_dig.mean()","2d15a999":"df.tem_dig.mean()","bd03b3b0":"df.n_letras.mean()","5ab02477":"df.tem_letras.mean()","2530ac8d":"df.n_cesp.mean()","f130a6ef":"df.tem_cesp.mean()","2bf79106":"df.tam.describe()","37cc10a4":"# Calcula a m\u00e9dia de n de d\u00edgitos para cada grupo de tamanho\ndf.groupby('tam').n_dig.mean()","3ca80093":"# Calcula a frequencia de cada grupo no dataset\n# len(df) => retorna o tamanho do dataset\ndf.groupby('tam').n_dig.count().divide(len(df))","fae515f3":"ndig_ser = df.groupby('tam').n_dig.count().divide(len(df))\nndig_ser.plot(kind=\"bar\", figsize=(5,3))\nplt.show()","dcffeb97":"# Insere uma coluna no dataset de digitos por caractere\ndf['dpc'] = df.n_dig \/ df.tam\n\n# letras por caractere\ndf['lpc'] = df.n_letras \/ df.tam\n\n# caractere especial por caractere\ndf['cepc'] = df.n_cesp \/ df.tam\ndf","8c6865e2":"df.groupby('tam').dpc.mean()","92fd99c0":"# O comando a seguir esta repetido para facilitar a visualiza\u00e7\u00e3o\nndig_ser = df.groupby('tam').dpc.mean()\n# Calcula as frequ\u00eancias \nnletras_ser = df.groupby('tam').lpc.mean()\nncesp_ser = df.groupby('tam').cepc.mean()\n\nndf = pd.DataFrame({'dpc': ndig_ser,\n                    'lpc': nletras_ser,\n                    'cepc': ncesp_ser\n                    })\nndf.plot.bar(width=0.8)\nplt.show()","a829e6f6":"df.plot(kind=\"scatter\", x=\"n_letras\", y=\"n_dig\", color=\"red\")\nplt.show()","03923057":"# Obt\u00e9m as senhas do arquivo pwd.txt\nrdf = pd.read_csv('https:\/\/www.kaggle.com\/taranvee\/2151220-passwords.txt', sep='\\t')\nrdf.head()","f53c5879":"len(rdf)","e3a1b318":"# Renomeia a coluna\nrdf.columns = ['senhas']\n\n# Cria uma coluna com tamanho da senha\nrdf['tam'] = rdf['senhas'].str.len()\n\n# Cria uma coluna com a quantidade de digitos\nrdf['n_dig'] = rdf['senhas'].str.count(r\"[0-9]\")\n\n# Cria uma coluna indicando se h\u00e1 d\u00edgitos\nrdf['tem_dig'] = rdf['senhas'].str.match(r\".*[0-9].*\")\n\n# Cria uma coluna com a qtde de letras\nrdf['n_letras'] = rdf['senhas'].str.count(r\"[a-zA-Z]\")\n\n# Cria uma coluna indicando se h\u00e1 letras\nrdf['tem_letras'] = rdf['senhas'].str.match(r\".*[a-zA-Z].*\")\n\n# Cria uma coluna com a qtde de caracteres especiais\nrdf['n_cesp'] = rdf['senhas'].str.count(r\"[_!@#$%\u02c6&*() +={}\\[\\]`|'\\\\\\\"\/?.>,<~-]\")\n\n# Cria uma coluna indicando se h\u00e1 caracteres especiais\nrdf['tem_cesp'] = rdf['senhas'].str.match(r\".*[_!@#$%\u02c6&*() +={}\\[\\]`|'\\\\\\\"\/?.>,<~-].*\")\n\n# Insere uma coluna no dataset de digitos por caractere\nrdf['dpc'] = rdf.n_dig \/ rdf.tam\n\n# letras por caractere\nrdf['lpc'] = rdf.n_letras \/ rdf.tam\n\n# caractere especial por caractere\nrdf['cepc'] = rdf.n_cesp \/ rdf.tam\n\nrdf.head()","2b21603c":"rdf.tam.mean()","475cee05":"rdf.n_dig.mean()","bdafdca2":"rdf.tem_dig.mean()","6e5bc688":"rdf.tem_letras.mean()","44955faa":"rdf.n_cesp.mean()","7e46ffff":"rdf.tem_cesp.mean()","3ee4363b":"rndig_ser = rdf.groupby('tam').n_dig.count().divide(len(df))\nrndig_ser.plot(kind=\"bar\", figsize=(15,3))\nplt.show()","9986b863":"# O comando a seguir esta repetido para facilitar a visualiza\u00e7\u00e3o\nrndig_ser = rdf.groupby('tam').dpc.mean()\n# Calcula as frequ\u00eancias \nrnletras_ser = rdf.groupby('tam').lpc.mean()\nrncesp_ser = rdf.groupby('tam').cepc.mean()\n\nrndf = pd.DataFrame({'dpc': rndig_ser,\n                    'lpc': rnletras_ser,\n                    'cepc': rncesp_ser\n                    })\nrndf.plot.bar(figsize=(15,5))\nplt.show()","3fcedce8":"rdf.plot(kind=\"scatter\", x=\"n_letras\", y=\"n_dig\", color=\"red\")\nplt.show()","36ab8f08":"Percentual de senhas com caracteres especiais.","05bae36f":"Mostra as frequ\u00eancias que cada grupo aparece no dataset.","ef36e29e":"**[03]** Evolua **SEU** projeto de raspagem de dados desenvolvido na semana 8 com as t\u00e9cnicas e recursos apresentadas neste caderno.","18b76eed":"### Visualiza\u00e7\u00e3o no Pandas","35521f79":"Como as senhas de usu\u00e1rios em geral diferem com rela\u00e7\u00e3o ao tamanho, \u00e0 quantidade de letras, n\u00fameros e caracteres especiais?","668ab338":"Come\u00e7amos criando um padr\u00e3o que conte a quantidade de letras nas senhas. Vamos utilizar o padr\u00e3o a seguir.","5ecb9244":"Vamos entender o resultado graficamente. O padr\u00e3o `r\"[0-9]\"` \u00e9 testado em cada caractere da senha. Todos os testes que retornam positivo aumentam o contador, que \u00e9 retornado ao final do processo.","ffa8ae43":"**[01]** Descreva com suas palavras o que \u00e9 o Pandas.","003ee051":"Vamos calcular a propor\u00e7\u00e3o de d\u00edgitos, letras e caracteres especiais em cada senha. Um jeito de fazer isto, \u00e9 adicionando-se novas colunas ao dataset.","1d71d32c":"#### Acrescentando o tamanho da senha como coluna no `DataFrame`","443368de":"#### Gr\u00e1fico de barras com m\u00faltiplas colunas","dd685a3a":"Mostra as frequ\u00eancias que cada grupo aparece no dataset.","9e1375de":"Quantidade m\u00e9dia de caracteres especiais nas senhas.","4100acba":"Quantidade m\u00e9dia de letras nas senhas.","242f35ea":"Para desenvolver este projeto, vamos utilizar o Pandas. Come\u00e7o explicando como instalar o software. Em seguida, vamos construir um dataset de exemplo e aplicar alguma estat\u00edstica descritiva neste dataset. Finalmente, aplicamos o m\u00e9todo estudado no dataset exemplo em um dataset real para fundamentar nossas conclus\u00f5es.","c36d3cc6":"## Quest\u00e3o Dirigida","05eb45f2":"O padr\u00e3o `r\".*[0-9].*\"` testa se existe algum d\u00edgito na senha e \u00e9 composto de tr\u00eas partes. A primeira e terceira partes s\u00e3o iguais, formadas por `.*`. \n\nO ponto (`.`) \u00e9 um s\u00edmbolo coringa e indica qualquer caractere. \u00c9 limitado a um \u00fanico caractere. Por exemplo, o padr\u00e3o `r\".[0-9].\"` retorna `True` para `a9$`, mas `False` para `9a$` porque a express\u00e3o regular diz que deve haver exatamente um caractere antes e depois do d\u00edgito.\n\nA estrela (`*`) indica que pode haver zero ou mais do s\u00edmbolo que a precede. Como a estrela aparece depois do ponto (`.`), que significa qualquer caractere, temos que o resultado final da express\u00e3o regular \u00e9 que pode haver zero ou mais caracteres antes ou depois de um d\u00edgito para que a express\u00e3o seja verdadeira.\n\nA figura a seguir ilustra a explica\u00e7\u00e3o.\n\n![str match](series-str-match.png \"str match\")","c57a17a7":"Em seguida, criamos os `DataFrame` no Pandas.","7cbfac90":"Para acrescentar colunas ao `DataFrame`, vamos trabalhar com as `Series`, que tamb\u00e9m pertencem ao Pandas. Uma `Series` \u00e9 um vetor (lista) unidimensional capaz de armazenar dados de qualquer tipo (float, int, string, objetos Python etc). Voc\u00ea pode encontrar mais informa\u00e7\u00f5es neste [link](https:\/\/www.geeksforgeeks.org\/python-pandas-series\/).","d814658d":"Percentual de senhas com caracteres especiais.","0eaf7235":"Tamanho m\u00e9dio das senhas.","247864f4":"No nosso caso:","b5cb1688":"### Constru\u00e7\u00e3o do dataset toy ","696b0dfc":"#### Gr\u00e1fico de Dispers\u00e3o","a8430282":"### Estat\u00edstica descritiva do dataset *toy*","c45b0c58":"# CDIA20 | Visualiza\u00e7\u00e3o de Dados com Programa\u00e7\u00e3o","2f693f44":"Vamos repetir esse processo e acrescentar colunas referentes aos caracteres do alfabeto.","e77bc8b1":"Quantidade m\u00e9dia de d\u00edgitos nas senhas.","bae84142":"Para adicionar uma coluna, basta atribuir uma `Series` ao `DataFrame` com um novo nome.","77bc8dc6":"Quantidade m\u00e9dia de d\u00edgitos nas senhas.","af335471":"Quantidade m\u00e9dia de letras nas senhas.","0c63934f":"**[02]** O que significa dizer que um software \u00e9 livre? Existem alguma diferen\u00e7a para software aberto?","2157a289":"## Conclus\u00e3o","a5b87e17":"---","4f4e1db3":"```bash\n$ pip install pandas\n```","945fd940":"Num `DataFrame` grande, pode ser interessante orden\u00e1-lo. A ordena\u00e7\u00e3o \u00e9 feita da seguinte forma:","3746009d":"Tamanho m\u00e9dio das senhas.","fb128aff":"Quantidade m\u00e9dia de caracteres especiais nas senhas.","15a1b5ca":"A quantidade de senhas do dataset real.","679fa040":"Note que o `DataFrame` \u00e9 composto somente da coluna que cont\u00e9m as senhas. Cada senha, possui diferentes caracter\u00edsticas. Al\u00e9m de serem de diferentes tamanhos, as senhas s\u00e3o compostas por d\u00edgitos, caracteres alfab\u00e9ticos, caracteres especiais como `&`, `#` e `@` ou uma combina\u00e7\u00e3o. \n\nNeste projeto, vamos focar nestas caracter\u00edsticas, mas existem in\u00fameras outras que poderiam ser analisadas. Alguns exemplos incluem a proximidade de um caractere a outro no teclado, algumas senhas s\u00e3o pronunci\u00e1veis, outras representam lugares, nomes de pessoas, palavr\u00f5es etc. \n\nAssim, precisamos estender o `DataFrame` com as caracter\u00edsticas de nosso interesse.","e3e9b265":"Come\u00e7amos criando uma lista pequena de senhas, para estabelecer um m\u00e9todo de an\u00e1lise das senhas.","8e314a25":"O estudo sobre a frequ\u00eancia de caracteres em geral nos permite ter uma no\u00e7\u00e3o das probabilidades envolvidas. Por exemplo, pode ser que d\u00edgitos sejam muito mais prov\u00e1veis que letras ou que caracteres especiais. Nesta se\u00e7\u00e3o, apresentamos como vamos reconhecer os d\u00edgitos nas senhas do `DataFrame`.\n\nVamos utilizar [express\u00f5es regulares](https:\/\/pt.wikipedia.org\/wiki\/Express%C3%A3o_regular) nos m\u00e9todos (fun\u00e7\u00f5es) de `Series.str`. O m\u00e9todo (fun\u00e7\u00e3o) `str.count(<express\u00e3o regular>)` conta as quantidades resultantes do padr\u00e3o especificado na express\u00e3o regular.    ","81f81d20":"Pela an\u00e1lise dos dados, podemos concluir que na m\u00e9dia os usu\u00e1rios tendem a escolher senhas de aproxidamente $8$ caracteres. Senhas com menos que $4$ e mais que $5$ caracteres s\u00e3o raras. Al\u00e9m disso, os usu\u00e1rios tem uma prefer\u00eancia ligeiramente maior por letras ($\\approx76$%) que por d\u00edgitos ($\\approx72$%) ou por caracteres especiais ($\\approx3$%). Uma explica\u00e7\u00e3o poss\u00edvel para esta prefer\u00eancia pode ser que o conjunto de letras \u00e9 maior que o de n\u00fameros e caracteres especiais ou ainda que os usu\u00e1rios est\u00e3o mais acostumados com os s\u00edmbolos do alfabeto. Finalmente, a prefer\u00eancia por letras ocorre independentemente do tamanho da senha.","f75e58a0":"![str count](series-str-count.png \"str count\")","3c5b8cab":"Percentual de senhas com letras.","b2238250":"### Instala\u00e7\u00e3o do Pandas","5cb62b7f":"#### Agrupamento de valores do dataset toy","8d8db434":"## Exerc\u00edcios","09e5adab":"##### Ordenando o `DataFrame` pelo n\u00famero de caracteres","7585c420":"Algumas an\u00e1lises requerem o agrupamento de alguns dados. Por exemplo, podemos querer saber as diferen\u00e7as de sal\u00e1rio para funcion\u00e1rios de empresas diferentes. Neste caso, seria interessante agrupar todos os funcion\u00e1rios por empresa e calcular a m\u00e9dia em cada grupo.\n\nO `DataFrame` oferece o m\u00e9todo `groupby(<nome da coluna>)` para realizar o agrupamento. O exemplo a seguir agrupa por tamanho (`tam`) e em seguida calcula a m\u00e9dia de n\u00famero de d\u00edgitos para cada grupo de tamanho de senha.","c6857a48":"---","e7c8f33c":"#### Visualiza\u00e7\u00f5es gr\u00e1fica do dataset real","46614279":"An\u00e1lise da propor\u00e7\u00e3o de caracteres no dataset real.","61604be1":"#### Acrescentando dados sobre os caracteres especiais ao `DataFrame`","bd4a78b6":"#### Adicionando dados sobre os d\u00edgitos da senha ao `DataFrame`","c0c0f087":"Para realizar a contagem dos caracteres especiais, basta que se especifique cada um deles dentro dos colchetes. Um detalhe: alguns caracteres especiais s\u00e3o utilizados para a estrutura da pr\u00f3pria express\u00e3o regular. Por exemplo, como diferenciamos os colchetes que formam a express\u00e3o regular dos colchetes que representam os caracteres especiais nas senhas? \n\nLinguagens de programa\u00e7\u00e3o utilizam normalmente um [caractere de escape](https:\/\/pt.wikipedia.org\/wiki\/Caractere_de_escape). No caso do Python, o caractere de escape \u00e9 a barra invertida (`\\`). O caractere de escape indica que o pr\u00f3ximo s\u00edmbolo da sequ\u00eancia deve ser interpretado literalmente e n\u00e3o como parte da linguagem. ","8b40afac":"#### Gr\u00e1fico de Barras","bfa4845d":"As `Series` permitem o uso de uma s\u00e9rie de m\u00e9todos (fun\u00e7\u00f5es). Esta \u00e9 a [p\u00e1gina](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.Series.html) de documenta\u00e7\u00e3o sobre as `Series`.\n\nPor exemplo, o m\u00e9todo `str.len()` calcula o tamanho da string.","ceaf8223":"Vamos acrescentar uma coluna (`tem_dig`) que indica se a senha cont\u00e9m algum d\u00edgito ou n\u00e3o.","e7070233":"As `Series` t\u00eam o m\u00e9todo `describe()`, espec\u00edfico para descrever o `DataFrame` em termos de estat\u00edstica descritiva.","244d41e1":"![esquema series](.\/cdia20-s11-imgs\/dataSER-1.png \"esquema series\")","3ae9b6c2":"## Semana 11 | Programa\u00e7\u00e3o","825eb7e0":"### Estat\u00edstica descritiva do dataset real","be63f2d0":"Essas m\u00e9dias n\u00e3o significam muito para compara\u00e7\u00f5es em termos estat\u00edsticos porque, entre outras coisas, os grupos possuem diferentes tamanhos. Por exemplo, o grupo com senha de 15 caracteres \u00e9 formado por uma \u00fanica senha.\n\nUma ideia \u00e9 contabilizar a frequ\u00eancia de cada grupo. O m\u00e9todo `count()` realiza a contagem em cada grupo ao passo que o m\u00e9todo `divide()` ir\u00e1 dividir o resultado da contagem pelo tamanho do `DataFrame`.","c29c7591":"A seguir, acrescentamos uma coluna que indica se a senha possui alguma letra.","678f0eb5":"[Pandas](https:\/\/pt.wikipedia.org\/wiki\/Pandas_(software) \u00e9 um framework em Python para manipula\u00e7\u00e3o e an\u00e1lise de dados. O framework oferece v\u00e1rias estruturas e opera\u00e7\u00f5es para manipular tabelas num\u00e9ricas e s\u00e9ries temporais. \u00c9 [software livre](https:\/\/pt.wikipedia.org\/wiki\/Software_livre).","1ca458f1":"---","c141fc34":"Percentual de senhas com d\u00edgitos.","d752bf8b":"### Constru\u00e7\u00e3o do dataset real","84f45570":"Embora os resultados pare\u00e7am similares, observe que os tipos dos objetos s\u00e3o diferentes.","5b9761ef":"Sess\u00e3o para importa\u00e7\u00e3o das biliotecas.","e2dce0f1":"#### Adicionando dados sobre caracteres do alfabeto ao `DataFrame`","b10d30c4":"Percentual de senhas com d\u00edgitos.","40e4fed0":"## Desenvolvimento do Projeto"}}