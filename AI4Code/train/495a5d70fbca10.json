{"cell_type":{"a259c516":"code","d0d5e78a":"code","ab685dfc":"code","4d8c8a87":"code","f7b4c04f":"code","4d16919d":"code","a0f13889":"code","7c34139c":"markdown","3f95a39b":"markdown","229ef8eb":"markdown","b8eb0183":"markdown","8290d601":"markdown","18fbd8cb":"markdown","e433baae":"markdown","5c10c9ee":"markdown","0bd45877":"markdown","8b79910f":"markdown","64c6a616":"markdown"},"source":{"a259c516":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d0d5e78a":"import pandas as pd\n\n# Read data into weatherData variable\nweatherData = pd.read_csv(\"..\/input\/weatherhistory\/weatherHistory.csv\") \n\n# Display the first few rows of our Data\nweatherData.head()","ab685dfc":"weatherData.describe() # Gives basic statistics about our data","4d8c8a87":"# Import preprocessing functions\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\n\n\n# Define Model's features\nweatherFeatures = [\"Temperature (C)\",\"Apparent Temperature (C)\",\"Wind Speed (km\/h)\", \n                   \"Wind Bearing (degrees)\",\"Visibility (km)\",\"Pressure (millibars)\"]\n\nX = weatherData[weatherFeatures]\ny = weatherData.Humidity\n\n# Scale data to fit standard normal distribution for accurate application of linear regression with regularization\nX_scaled  = preprocessing.scale(X) \n\n# Polynomial Features enable us to capture non-linear relationships\n# Currently set to 1 - CHANGE TO 7 after reading evaluation section below\npoly = PolynomialFeatures(1) \n\nX_final = poly.fit_transform(X_scaled)\n\n\n# Split data into training and test data\nX_train, X_test, y_train, y_test = train_test_split(X_final, y, test_size=0.10, random_state=42) ","f7b4c04f":"from sklearn import linear_model\n\n# Implement Ridge Regress - Linear regression + l2 regularization\n# Regularization parameter set to 0.5\nregr = linear_model.Ridge(alpha = 0.5) \n\n\n# Fit Model to Data\nregr.fit(X_train, y_train)\n\n# Produce a set of predicted Humidity values from our test data\ny_pred = regr.predict(X_test)","4d16919d":"from sklearn.metrics import mean_squared_error, r2_score\n\n# Display Model Intercept\nprint(\"Intercept: \", regr.intercept_)\n\n# Display Model coefficients\nprint('Coefficients: \\n', len(regr.coef_ ))\n\n\nprint('Mean squared error: %.3f' % mean_squared_error(y_test,  y_pred))\n\n\n# r2_score (Coefficient of determination) is a great evaluation metric - read more below\nprint('Coefficient of determination: %.3f' % r2_score(y_test, y_pred))","a0f13889":"# Record a new set of weather observations, ensure oder of entry matches order of weatherFeatures defined above\nweatherObs = [[32, 31.4, 44, 344, 13, 1020.33]]\n\n# Apply the same preprocessing steps\nweatherObs_scaled = preprocessing.scale(weatherObs) \nweatherObs_final = poly.fit_transform(weatherObs_scaled)\n\n# Use our model to make a prediction for Humidity\ny_pred = regr.predict(weatherObs_final)\ny_pred","7c34139c":"# Importing and Exploring our Data","3f95a39b":"# Objective","229ef8eb":"# Preprocessing the Data","b8eb0183":"# Making Predictions","8290d601":"[Coeffecient of Determination](http:\/\/https:\/\/stattrek.com\/statistics\/dictionary.aspx?definition=coefficient_of_determination#:~:text=The%20coefficient%20of%20determination%20is,between%20x%20and%20y%20scores.) [r2_score]","18fbd8cb":"![image.png](attachment:image.png)","e433baae":"Constuct a **linear regression model** (including polynomial features and regularization) that is able to make reasonable predictions for Humidity in Sveged, Hungary","5c10c9ee":"Note: Cloud cover has a max and min of 0, consists of just 0 entires, therefore should **not** be used in our Model","0bd45877":"# Evaluating and Improving our Model\n","8b79910f":"* We discover that as we add more Polynomial Features our r2_score increases\n* **7 Polynomial features** yields the highest r2_score\n* Increasing the number of polynomial features beyond 7, results in our model **beginning to overfit our data** and produces a lower r2_score","64c6a616":"# Building our Model"}}