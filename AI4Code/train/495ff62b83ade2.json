{"cell_type":{"dd3a130d":"code","cc118d26":"code","57866551":"code","8613ab61":"code","7eed612f":"code","a27b5bbd":"code","a24005de":"code","996a80dd":"code","1e8bfe55":"code","0e54e9cc":"code","95c1151f":"code","5ef90366":"code","145c1848":"code","b3b1a37f":"code","28de3bb1":"code","19e9e762":"code","2b0781f6":"code","3d315921":"code","ad999444":"code","34a68ba1":"code","3ce3a0d2":"code","04cbda5f":"code","46831c68":"code","9d31cb2a":"markdown","a26b8310":"markdown","d5c6dd8b":"markdown","a56905c4":"markdown","d6704045":"markdown","c767412b":"markdown","6b6a02a3":"markdown","3257c7af":"markdown","6b3f7cab":"markdown","8d72df10":"markdown","6b19939a":"markdown","20f5fa6a":"markdown","18c0f1e5":"markdown","68042895":"markdown","e7aa2a48":"markdown","0c7539f0":"markdown","061c025b":"markdown","c1039c6c":"markdown","41abba0e":"markdown","c3c7d423":"markdown","d6cf0122":"markdown","b8fa125f":"markdown","3a2eecf0":"markdown"},"source":{"dd3a130d":"import pandas as pd\nfrom sklearn import preprocessing\nfrom matplotlib import pyplot as plt\nfrom sklearn import covariance\nimport seaborn as sns\nimport numpy as np\nfrom numpy import linalg as LA\nfrom sklearn.decomposition import PCA","cc118d26":"Input_Data = pd.read_csv(\"..\/input\/wine-customer-segmentation\/Wine.csv\")","57866551":"Input_Data.describe()","8613ab61":"Input_Data.head()","7eed612f":"DataColumnNames = Input_Data.columns\nInput_Data_List_Temp = []\nfor DataColumnName in DataColumnNames:\n    Input_Data_List_Temp.append(preprocessing.normalize([Input_Data[DataColumnName].to_list()],norm='max')[0])\nInput_Data_List = np.transpose(Input_Data_List_Temp)","a27b5bbd":"plt.figure(figsize=(10,10))\nsns.set(font_scale=1.5)\nhm = sns.heatmap(pd.DataFrame(Input_Data_List).corr(),annot=True,annot_kws={\"size\":8},xticklabels=DataColumnNames, yticklabels=DataColumnNames)\nplt.title('Covariance matrix showing correlation coefficients')\nplt.tight_layout()\nplt.show()","a24005de":"Flavanoids = Input_Data['Flavanoids'].to_list()\nTotal_Phenols = Input_Data['Total_Phenols'].to_list()\nFlavanoids_Normalized = preprocessing.normalize([Flavanoids],norm='max')[0]\nTotal_Phenols_Normalized = preprocessing.normalize([Total_Phenols],norm='max')[0]\nFlavanoidsMean = np.array(Flavanoids_Normalized).mean()\nTotal_PhenolsMean = np.array(Total_Phenols_Normalized).mean()","996a80dd":"plt.scatter(Flavanoids_Normalized,Total_Phenols_Normalized,marker='x')","1e8bfe55":"SelectedFeaturesTransposed = []\nSelectedFeaturesTransposed.append(Flavanoids_Normalized)\nSelectedFeaturesTransposed.append(Total_Phenols_Normalized)\nSelectedFeatures = np.transpose(SelectedFeaturesTransposed)","0e54e9cc":"FlavanoidsSubtracted = np.add(SelectedFeaturesTransposed[0],-FlavanoidsMean)\nTotal_PhenolsSubtracted = np.add(SelectedFeaturesTransposed[1],-Total_PhenolsMean)","95c1151f":"plt.scatter(FlavanoidsSubtracted,Total_PhenolsSubtracted,marker='x')","5ef90366":"SelectedFeaturesSubtracted = np.array([FlavanoidsSubtracted,Total_PhenolsSubtracted])","145c1848":"S = SelectedFeaturesSubtracted.dot(SelectedFeaturesSubtracted.T) \/ 178","b3b1a37f":"S","28de3bb1":"EigenValue,EigenVector = LA.eig(S)\nprint(EigenVector)\nprint(EigenValue)","19e9e762":"PC1 = EigenVector.T[0].dot(SelectedFeaturesTransposed)\nprint(np.var(PC1))","2b0781f6":"PC2 = EigenVector.T[1].dot(SelectedFeaturesTransposed)\nprint(np.var(PC2))","3d315921":"plt.scatter(FlavanoidsSubtracted,Total_PhenolsSubtracted,marker='x')\nplt.quiver([0, 0], [0, 0], EigenVector[0], EigenVector[1], scale=3, color=['r','g'], label=['PC1','PC2'])\nplt.text(0.2,0.3,'PC1')\nplt.text(-0.2,0.3,'PC2')","ad999444":"plt.scatter(PC1,PC2,marker='x')\nplt.title(\"PCA Plot\")\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")","34a68ba1":"# Provide the number of principal components required - 2 for plotting points on a plane\npca = PCA(n_components=2)","3ce3a0d2":"pca.fit(SelectedFeatures)\n# print the Principal component vectors - Eigen vectors\nprint(pca.components_)\n# Print the covariance matrix\nprint(pca.get_covariance())","04cbda5f":"PC1 = pca.components_[0].dot(SelectedFeaturesTransposed)\nprint(np.var(PC1))\nPC2 = pca.components_[1].dot(SelectedFeaturesTransposed)\nprint(np.var(PC2))","46831c68":"plt.scatter(PC1,PC2,marker='x')\nplt.title(\"PCA Plot\")\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")","9d31cb2a":"# Compute the covariance matrix","a26b8310":"# Append both normalized features to form a single matrix","d5c6dd8b":"# The plot below shows that the means of the features shifted to origin","a56905c4":"# Plot the correlation matrix of the normalized data","d6704045":"# Plot the PCA - We get same plot as above","c767412b":"# SciKit provides PCA class. This is how to compute PCA with SciKit","6b6a02a3":"# Fit the data and get the principal components","3257c7af":"# Plot the data point on the principal components PC1 and PC2","6b3f7cab":"# Find the Eigen value and Eigen vector of the covariance matrix","8d72df10":"# Compute projections of datapoints on PC1 and print the variance of projections","6b19939a":"# Compute the projection of data points on the principal components","20f5fa6a":"# Do a basic analysis of data","18c0f1e5":"# Plot the two selected features in a plane. We can easily observe that they are positively related","68042895":"# Normalize all the features","e7aa2a48":"# Let us take two features alone from this dataset which shows highest correlation (Flavanoids and Total_Phenols) - 0.86 correlation","0c7539f0":"# Load the required libraries including seaborn and PCA","061c025b":"# Plot Principal components in the actual feature space","c1039c6c":"# Compute projections of datapoints on PC1 and print the variance of projections","41abba0e":"### The first Eigen vector corresponds to the highest Eigen value hence it becomes PC1","c3c7d423":"# Get the data from Wine.csv file in the input folder","d6cf0122":"# Combine the shifted features to a single matrix","b8fa125f":"## We do this to make the computation of correlation matrix easier","3a2eecf0":"# Create a matrix by subtracting the means of features from each data point. By doing this we bring the means of the features to the origin. And all data points shift towards the origin"}}