{"cell_type":{"d2d1601f":"code","a82defa4":"code","11177056":"code","63868d5a":"code","3e7cff9d":"code","e942bcea":"code","4d17a1c4":"code","4283b5ce":"code","baabce53":"code","14a96b92":"code","e49c55d4":"code","7c6d9633":"code","5baac461":"code","15b6ea34":"code","01f3b8b9":"code","8d9b077b":"code","c27a5d17":"code","8ae7d4b2":"code","a94d1193":"code","02c52cea":"code","7a5c176b":"code","24240026":"code","ed395054":"code","826c36e6":"code","8539756c":"code","8966a32d":"code","cc2cc028":"code","3c05e70c":"code","6ae82955":"code","19ed8b46":"code","78822111":"code","bd004d0d":"code","32f1ef85":"code","a765f27e":"code","5a574847":"code","08ca1910":"markdown","2951c4ba":"markdown","cdb8c246":"markdown","8d4a341a":"markdown","bc5223f4":"markdown"},"source":{"d2d1601f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a82defa4":"import matplotlib.pyplot as plt\nimport seaborn as sns","11177056":"#read data\ndf = pd.read_csv(\"..\/input\/sp-500-companies-with-financial-information\/financials.csv\")","63868d5a":"df","3e7cff9d":"#drop non-numerical data\ndf = df.drop(columns = \"SEC Filings\")\ndf","e942bcea":"df.info()","4d17a1c4":"#find columns that have NULL values\ndf.isnull().sum()","4283b5ce":"#drop NA rows\ndf = df.dropna()","baabce53":"df.isnull().sum()","14a96b92":"df.describe(include = \"all\")","e49c55d4":"#find company volumn for each Sector\nsectorcount = df.groupby([\"Sector\"]).size().reset_index(name = \"number of companies\")","7c6d9633":"sectorcount","5baac461":"sectorcount.sort_values(by = \"number of companies\", ascending = False)","15b6ea34":"sectors = np.array(sectorcount[\"Sector\"])","01f3b8b9":"sectors","8d9b077b":"slices = np.array(sectorcount[\"number of companies\"])","c27a5d17":"slices","8ae7d4b2":"plt.pie(slices, labels = sectors)\nplt.title(\"Companies Count per Sector\")","a94d1193":"#find TOP 1 PE value in each Sector\nPEdf = df.groupby([\"Sector\"]).apply(lambda x: x.sort_values(by = \"Price\/Earnings\", ascending = False). head(1))","02c52cea":"sns.barplot(x = \"Sector\", y = \"Price\/Earnings\", data = PEdf)\nplt.title(\"Top One P\/E Company in Each Sector\")","7a5c176b":"PEdf","24240026":"#Compare Dividend Yield and PE value\nsns.lmplot(x = \"Dividend Yield\", y = \"Price\/Earnings\", data = PEdf )","ed395054":"#Find Top 1 PS value company in each Sector\nPSdf = df.groupby([\"Sector\"]).apply(lambda x: x.sort_values(by = \"Price\/Sales\", ascending = False). head(1))","826c36e6":"PSdf","8539756c":"sns.barplot(x = \"Sector\", y = \"Price\/Sales\", data = PSdf)\nplt.title(\"Top One P\/S Company in Each Sector\")","8966a32d":"# Dividend Yield vs PS value\nsns.lmplot(x = \"Dividend Yield\", y = \"Price\/Sales\", data = PSdf )","cc2cc028":"sns.kdeplot(PSdf[\"Earnings\/Share\"], PSdf[\"Market Cap\"])","3c05e70c":"corr = df.corr()","6ae82955":"sns.heatmap(corr)","19ed8b46":"#get Top 5 Sector\ntop5 = sectorcount.sort_values(by = \"number of companies\", ascending = False).head(5)","78822111":"top5","bd004d0d":"top5data = df[(df[\"Sector\"] == \"Consumer Discretionary\")|(df[\"Sector\"] == \"Information Technology\")|(df[\"Sector\"] == \"Financials\")|(df[\"Sector\"] == \"Industrials\")\n             |(df[\"Sector\"] == \"Health Care\")]","32f1ef85":"top5data","a765f27e":"#Compare PE spread in Top 5 Sector \nsns.catplot(x = \"Price\/Earnings\", y = \"Sector\", data = top5data)","5a574847":"#Compare PS spread in Top 5 Sector \nsns.catplot(x = \"Price\/Sales\", y = \"Sector\", data = top5data)","08ca1910":"Category plot","2951c4ba":"Bar Chart","cdb8c246":"Pie Chart","8d4a341a":"Correlation Heatmap","bc5223f4":"Scatter plot"}}