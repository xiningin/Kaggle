{"cell_type":{"9dfd43bf":"code","7b203877":"code","ee821212":"code","de0ee75a":"code","af6917dc":"code","4e928dd7":"code","1803fa84":"code","2b4f09b7":"code","84ea8afd":"code","3ed83017":"code","652c5f8e":"code","c5490df1":"code","ff0396fc":"code","adb16695":"code","169153ba":"code","239e50fc":"code","5bfe7fca":"code","99df9efd":"code","c1b5aeda":"code","7085dea8":"code","569d5740":"code","90abb272":"code","7a9fa65c":"code","83805fc7":"code","9d1958bf":"code","1ee7347f":"code","bb60c1f3":"markdown","0b76297e":"markdown","db1297cd":"markdown","7e346a6f":"markdown","a743f980":"markdown","e5734c16":"markdown","e5f55883":"markdown","b0ffcb8b":"markdown","e66835ec":"markdown","c26bd788":"markdown","bc6e59a3":"markdown","cfd1d201":"markdown","44e5f9c1":"markdown","f76bfdc6":"markdown","f0b609ac":"markdown","fbea2564":"markdown","0fba64a5":"markdown","3bb3035e":"markdown","a4ec0f80":"markdown"},"source":{"9dfd43bf":"import os\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn import svm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import accuracy_score\nfrom pandas.plotting import scatter_matrix","7b203877":"df1=pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","ee821212":"df1.head()","de0ee75a":"df1.describe()","af6917dc":"df1.info()","4e928dd7":"df1.isnull().values.any()","1803fa84":"plt.bar(df1['quality'],df1['alcohol'],color='pink')\nplt.title('Barh plot')\nplt.xlabel ('quality')\nplt.ylabel ('alcohol')\nplt.legend()\nplt.show()","2b4f09b7":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndf1.hist(bins=10, figsize=(20,20))\nplt.show()","84ea8afd":"corr_matrix=df1.corr()\nfigure,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(corr_matrix, annot=True,linewidth=0.5,ax=ax)","3ed83017":"f,ax=plt.subplots(1,1,figsize=(25,6))\nax = sns.scatterplot(x=\"volatile acidity\", y=\"quality\",color = \"red\",data=df1)\nax = sns.scatterplot(x=\"citric acid\", y=\"quality\",color = \"green\",data=df1)\nax = sns.scatterplot(x=\"chlorides\", y=\"quality\",color = \"blue\",data=df1)","652c5f8e":"f,ax=plt.subplots(1,1,figsize=(25,6))\nsns.kdeplot(df1.loc[(df1['quality']==4), 'alcohol'], color='b', shade=True, Label='4')\nsns.kdeplot(df1.loc[(df1['quality']==5), 'alcohol'], color='g', shade=True, Label='5')\nsns.kdeplot(df1.loc[(df1['quality']==6), 'alcohol'], color='r', shade=True, Label='6')\nsns.kdeplot(df1.loc[(df1['quality']==7), 'alcohol'], color='y', shade=True, Label='7')\nplt.xlabel('Alcohol') \nplt.ylabel('Probability Density') ","c5490df1":"sns.pairplot (df1)","ff0396fc":"f,ax=plt.subplots(1,3,figsize=(25,6))\nbox1=sns.boxplot(data=df1['fixed acidity'],ax=ax[0], palette=\"muted\",sym='k.')\nax[0].set_xlabel('fixed acidity')\nbox1=sns.boxplot(data=df1['volatile acidity'],ax=ax[1], palette=\"muted\",sym='k.')\nax[1].set_xlabel('volatile acidity')\nbox1=sns.boxplot(data=df1['citric acid'],ax=ax[2], palette=\"muted\",sym='k.')\nax[2].set_xlabel('citric acid')\nplt.show ()","adb16695":"f,ax=plt.subplots(1,3,figsize=(25,4))\nbox1=sns.boxplot(data=df1['residual sugar'],ax=ax[0], palette=\"muted\",sym='k.')\nax[0].set_xlabel('residual sugar')\nbox1=sns.boxplot(data=df1['chlorides'],ax=ax[1], palette=\"muted\",sym='k.')\nax[1].set_xlabel('chlorides')\nbox1=sns.boxplot(data=df1['free sulfur dioxide'],ax=ax[2], palette=\"muted\",sym='k.')\nax[2].set_xlabel('free sulfur dioxide')\nplt.show ()","169153ba":"f,ax=plt.subplots(1,3,figsize=(25,4))\nbox1=sns.boxplot(data=df1['total sulfur dioxide'],ax=ax[0], palette=\"muted\",sym='k.')\nax[0].set_xlabel('total sulfur dioxide')\nbox1=sns.boxplot(data=df1['density'],ax=ax[1], palette=\"muted\",sym='k.')\nax[1].set_xlabel('density')\nbox1=sns.boxplot(data=df1['pH'],ax=ax[2], palette=\"muted\",sym='k.')\nax[2].set_xlabel('pH')\nplt.show ()","239e50fc":"f,ax=plt.subplots(1,3,figsize=(25,4))\nbox1=sns.boxplot(data=df1['sulphates'],ax=ax[0], palette=\"muted\",sym='k.')\nax[0].set_xlabel('sulphates')\nbox1=sns.boxplot(data=df1['alcohol'],ax=ax[1], palette=\"muted\",sym='k.')\nax[1].set_xlabel('alcohol')\nbox1=sns.boxplot(data=df1['quality'],ax=ax[2], palette=\"muted\",sym='k.')\nax[2].set_xlabel('quality')\nplt.show ()","5bfe7fca":"f,ax=plt.subplots(2,2,figsize=(25,15))\nsns.violinplot(x=\"quality\", y=\"fixed acidity\",ax=ax[0][0],data=df1, palette=\"muted\")\nsns.violinplot(x=\"quality\", y=\"volatile acidity\",data=df1,ax=ax[0][1], palette=\"muted\")\nsns.violinplot(x=\"quality\", y=\"citric acid\",ax=ax[1][0],data=df1, palette=\"muted\")\nsns.violinplot(x=\"quality\", y=\"residual sugar\",ax=ax[1][1],data=df1, palette=\"muted\")","99df9efd":"quality = df1[\"quality\"].values\ncategory = []\nfor num in quality:\n    if num < 5.5:\n        category.append(\"Low\")\n    else:\n        category.append(\"High\")","c1b5aeda":"[(i, category.count(i)) for i in set(category)]\nplt.figure(figsize=(10, 6))\nsns.countplot(category, palette=\"muted\")","7085dea8":"features=df1.columns\nfeatures=features.drop(['quality'])\nx=df1 [features]\ny=df1 ['quality']\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=3)","569d5740":"seed=7\nmodels = []\nmodels.append(('RF',RandomForestClassifier()))\nmodels.append(('SVM',SVC()))\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('NB',GaussianNB()))\n# Evaluating each models in turn\nresults = []\nnames = []\nfor name, model in models:\n    kfold = model_selection.KFold(n_splits=10,random_state=seed)\n    cv_results = cross_val_score(model, x_train, y_train, cv=kfold, scoring='accuracy')\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" %(name, cv_results.mean(), cv_results.std())\n    print(msg)","90abb272":"logistic = LogisticRegression()\nlogistic.fit(x_train,y_train)\ny_pred=logistic.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy1=logistic.score(x_test,y_test)\nprint (accuracy1*100,'%')","7a9fa65c":"classifier=SVC()\nclassifier.fit(x_train,y_train)\nsvm_predict=classifier.predict(x_test)\nprint(classification_report(y_test,svm_predict))\naccuracy2=classifier.score(x_test,y_test)\nprint(accuracy2*100,'%')","83805fc7":"ran_class=RandomForestClassifier()\nran_class.fit(x_train,y_train)\nran_predict=ran_class.predict(x_test)\nprint(classification_report(y_test,ran_predict))\naccuracy3=ran_class.score(x_test,y_test)\nprint(accuracy3*100,'%')","9d1958bf":"nvclass=GaussianNB()\nnvclass.fit(x_train,y_train)\ny_pr=nvclass.predict(x_test)\nprint(classification_report(y_test,y_pr))\naccuracy4=nvclass.score(x_test,y_test)\nprint(accuracy4*100,'%')","1ee7347f":"model1 = DecisionTreeClassifier(random_state=1)\nmodel1.fit(x_train, y_train)\ny_pred1 = model1.predict(x_test)\nprint(classification_report(y_test, y_pred1))\naccuracy5=model1.score(x_test,y_test)\nprint(accuracy5*100,'%')","bb60c1f3":"**Countplot**","0b76297e":"**3.Random Forest Classifier**","db1297cd":"**2.SVM**","7e346a6f":"**1.Logistic Regression**","a743f980":"# Red wine","e5734c16":"# Importing important libraries ","e5f55883":"**Boxplot**","b0ffcb8b":"**KDE Plot**","e66835ec":"**4.Naive Bayes**","c26bd788":"**Barplot**","bc6e59a3":"**Histogram**","cfd1d201":"# Stratified K-Fold Cross Validation\nIn some cases, there may be a large imbalance in the response variables. For example, in dataset concerning price of houses, there might be large number of houses having high price. Or in case of classification, there might be several times more negative samples than positive samples. For such problems, a slight variation in the K Fold cross validation technique is made, such that each fold contains approximately the same percentage of samples of each target class as the complete set, or in case of prediction problems, the mean response value is approximately equal in all the folds. This variation is also known as Stratified K Fold.","44e5f9c1":"**Violinplot**","f76bfdc6":"**Train Test split**","f0b609ac":"**Heatmap**","fbea2564":"**Decision tree classifier**","0fba64a5":"****","3bb3035e":"**Scatterplot**","a4ec0f80":"**Pairplot**"}}