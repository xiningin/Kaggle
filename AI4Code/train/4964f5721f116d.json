{"cell_type":{"24d67e5d":"code","122623b0":"code","4c94c98f":"code","f4e70570":"code","6fa088b6":"code","210ed7f4":"code","9fba981c":"code","cd0e41e1":"code","6cf17fb2":"code","f93d50a2":"code","0d662fc4":"code","cc1eb7a6":"code","0cd975dd":"code","63c0d718":"code","f68d45cc":"code","c0591f72":"code","d2185f8f":"code","d3f59a84":"code","52c2726c":"code","178d5185":"code","fc7ec1ff":"code","b1c18db8":"code","c61bb0c5":"markdown","0225681c":"markdown","b5ff41c4":"markdown","fdbfc082":"markdown","3753ebbc":"markdown","2047b9b5":"markdown","ad047e2e":"markdown","e0add897":"markdown","245941e6":"markdown","a13c8887":"markdown"},"source":{"24d67e5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","122623b0":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import ScalarFormatter\nimport sklearn\n%matplotlib inline\nsns.set()","4c94c98f":"df = pd.read_csv('..\/input\/who-suicide-statistics\/who_suicide_statistics.csv')\ndf","f4e70570":"df.rename(columns = {'suicides_no': 'suicides'}, inplace = True)\ndf","6fa088b6":"df.info()","210ed7f4":"df.describe()","9fba981c":"df.head()","cd0e41e1":"df = df.dropna()","6cf17fb2":"df['country'].nunique()","f93d50a2":"df['suicides'].sum()","0d662fc4":"TotalsbyYear = df.groupby('year')['suicides'].agg(np.sum)\n\nfig, ax = plt.subplots()\nax.plot(TotalsbyYear)\nax.set_xlabel('Year')\nax.set_ylabel('Number of Suicides')\nax.set_title('Total Suicide Count 1979 - 2015')\nplt.tight_layout()","cc1eb7a6":"year_x_gender = df.pivot_table(index = 'year', columns = 'sex', values = 'suicides', aggfunc = np.sum)\nyear_x_gender.head()","0cd975dd":"year_x_gender.plot(title = 'Suicides by Gender from 1979 - 2015',\n                  ylabel = 'Suicides',\n                  xlabel = 'Year')\nplt.show()","63c0d718":"age_x_gender = df.pivot_table(index = 'age', columns = 'sex', values = 'suicides', aggfunc = np.sum)\nage_x_gender","f68d45cc":"labels = age_x_gender.index\nx = np.arange(len(labels))\nwidth = 0.35 # width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, age_x_gender['female'], width, label = 'Female')\nrects2 = ax.bar(x + width\/2, age_x_gender['male'], width, label = 'Male')\nax.set_title(\"Total Suicides by Age Group and Gender\")\nax.set_xticks(x)\nax.set_xticklabels(labels, rotation = '40')\nax.legend()\n\nfig.tight_layout()\nplt.show()","c0591f72":"year_x_age = df.pivot_table(index = 'year', columns = 'age', values = 'suicides', aggfunc = np.sum)\nyear_x_age.head()","d2185f8f":"year_x_age.describe()","d3f59a84":"year_x_age.plot(title = 'Total Suicides by Age Group',\n               xlabel = 'Year',\n               ylabel = 'Total Suicides')\nplt.legend(bbox_to_anchor=(1.025, 1), loc='upper left', borderaxespad=0.)\nplt.show()","52c2726c":"CountryTotals = df.groupby('country').sum()['suicides'].sort_values(ascending = False)\nHigh = CountryTotals.head(10)\n\nplt.bar(High.index, High)\nplt.xticks(rotation = 'vertical')\nplt.title(\"Top 10 Countries with Highest Suicides\")\nplt.xlabel('Countries')\nplt.show()","178d5185":"df.head()\ncountryPivot = df.pivot_table(columns = 'year', index = 'country', values = 'suicides')\ncountryPivot['TotalSuicides'] = countryPivot.sum(axis=1)\ntop10byYear = countryPivot.sort_values(by = 'TotalSuicides', ascending = False).head(10)\ntop10byYear.drop(columns = 'TotalSuicides', inplace = True)\ntoGraph = top10byYear.stack().unstack(0)\ntoGraph.sort_index(inplace = True)","fc7ec1ff":"fig, ax = plt.subplots()\nax.plot(toGraph)\nax.set_title(\"Top 10 Countries: Suicide Count from 1979 - 2015\")\nax.set_xlabel(\"Year\")\nax.set_ylabel(\"Suicides\")\nplt.tight_layout()","b1c18db8":"suicideRates = df.groupby(['country','year'])[['suicides','population']].sum()\nsuicideRates['suicidepercentage'] = suicideRates['suicides'] \/ suicideRates['population'] * 100\npercentage = suicideRates[['suicidepercentage']].unstack(0)\npercentagefilled = percentage.fillna(percentage.mean()) ##filled missing values on average\nTop10 = percentagefilled.stack().unstack(0)\nTop10\nTop10['avgPerc'] = Top10.mean(axis=1)\nTop10WASR = Top10.sort_values(by = 'avgPerc', ascending = False).head(10)\nTop10WASR['avgPerc'].plot.bar(title = 'Top 10 Countries by Weighted Average Suicide Rate',\n                             xlabel = 'Country',\n                             ylabel = 'Average suicide rate from 1979 - 2015')","c61bb0c5":"#### Suicides by Gender across Age Groups","0225681c":"#### Top 10 Countries: Suicide count over time","b5ff41c4":"#### Top 10 Countries: Weighted Average Suicide Rates","fdbfc082":"#### Total Suicides: Top 10 Countries","3753ebbc":"#### Suicides per Year across Genders","2047b9b5":"### Exploratory Data Analysis","ad047e2e":"#### Suicides per Year","e0add897":"### Data Cleaning","245941e6":"#### Total Suicides by Year across Age Groups","a13c8887":"### Observing the Data"}}