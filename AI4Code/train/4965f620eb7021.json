{"cell_type":{"7b20f91d":"code","2efefa5a":"code","7e95c64b":"code","1ec90a39":"code","2885442d":"code","1b4fb661":"markdown","56a34f1b":"markdown","19104f2d":"markdown","47e91fea":"markdown","7017c8d4":"markdown"},"source":{"7b20f91d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2efefa5a":"data = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\n\ndata[\"class\"] = [0 if each == \"Abnormal\" else 1 for each in data[\"class\"]]\ny = data[\"class\"].values.reshape(-1,1)\nx_data = data.drop([\"class\"],axis=1)","7e95c64b":"x = (x_data - np.min(x_data)) \/ (np.max(x_data) - np.min(x_data))","1ec90a39":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y , test_size=0.3,random_state=1)","2885442d":"from sklearn.neighbors import KNeighborsClassifier\n\n\n#%%\nscore_list = []\nfor each in range(1,25):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\nplt.plot(range(1,25),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","1b4fb661":"### Reading and manipulating Dataset\n* Normals are == 1 , Abnormals are = 0","56a34f1b":"### Test Train Split","19104f2d":"### Normalization of features","47e91fea":"### kNN process and finding best \"k\" value and visualization","7017c8d4":"## As shown in the figure the best \"k\" value is 22 because the highest accuracy(0,82) is there."}}