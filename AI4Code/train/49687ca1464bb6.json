{"cell_type":{"0a406164":"code","2c513ef1":"code","bc17e6ca":"code","fffbc96f":"code","86f3b55d":"code","745ec195":"code","eb87b95d":"code","0186a54e":"code","c6a954ff":"code","ce4dc2f1":"code","a3f9389f":"code","74785d49":"code","b1b3d2d5":"code","4486c40a":"code","52d3f811":"code","9f92b5a1":"code","cfba4f43":"code","fe01067b":"code","e4bda103":"code","3befcf58":"code","eb7078fe":"code","d866c271":"code","1789f055":"code","5efb12ac":"code","12906eb7":"code","e370adf0":"code","9eab62e8":"code","bb516441":"code","1194c721":"code","4c6dcc54":"code","68d358d0":"code","93441369":"code","68c16606":"code","e4464201":"code","5b03cec2":"code","15ab800b":"code","9be9ed1a":"code","9fd09562":"code","42eb3e8b":"code","96e398c9":"code","a350cbdb":"code","07afb9c2":"code","e1fc0acb":"code","070b7089":"code","3b46f796":"code","55036ec5":"code","c439692d":"code","a3a89ff3":"code","d850e53d":"code","73758df2":"code","887ba675":"code","aa7648a1":"code","1c95e577":"code","2b27791a":"code","0492075d":"code","e55f0b12":"code","413adfa4":"code","affb95ea":"code","369e8e56":"code","e2afa196":"code","8fd7aa18":"code","e244ad26":"code","24f80c0b":"code","3d854f53":"code","d2077377":"code","088cd2de":"code","4b04582f":"code","fca9dd7d":"code","5690bcd4":"code","9bcaaf6a":"code","a180a562":"code","103df679":"code","3b568e5a":"code","ee73aa38":"code","c5dc750e":"code","1b846205":"code","e279627c":"code","30cc9fc3":"code","2e76a7e2":"code","0a56fe62":"code","a8f79480":"code","799b33ba":"code","ed4cb3e8":"code","c496531f":"code","c58bb2a2":"markdown","0c3e6dbe":"markdown","295ea97b":"markdown"},"source":{"0a406164":"import pandas as pd","2c513ef1":"import numpy as np","bc17e6ca":"from sklearn.model_selection import train_test_split","fffbc96f":"dataset = pd.read_csv('\/kaggle\/input\/real-time-advertisers-auction\/Dataset.csv')","86f3b55d":"dataset.head()","745ec195":"def weird_division(n, d):\n    return n \/ d if d else 0\n\ndataset['CPM'] = dataset.apply(lambda x: weird_division(((x['total_revenue']*100)),x['measurable_impressions'])*1000 , axis=1)","eb87b95d":"train_data = dataset[(pd.to_datetime(dataset.date) < pd.to_datetime('2019-06-22'))]","0186a54e":"train_data.head()","c6a954ff":"test_data = dataset[(pd.to_datetime(dataset.date) >= pd.to_datetime('2019-06-22'))]","ce4dc2f1":"test_data.head()","a3f9389f":"test_data = test_data[test_data['CPM'] >= 0]","74785d49":"test_data = test_data[test_data['CPM'] < test_data['CPM'].quantile(0.95)]","b1b3d2d5":"train_data.shape","4486c40a":"test_data.shape","52d3f811":"dataset.shape","9f92b5a1":"train_X = train_data.loc[:, train_data.columns != 'CPM']","cfba4f43":"train_y = train_data.loc[:, train_data.columns == 'CPM']","fe01067b":"test_X = test_data.loc[:, test_data.columns != 'CPM']","e4bda103":"test_y = test_data.loc[:, test_data.columns == 'CPM']","3befcf58":"train_X = train_X.drop('date', axis=1)","eb7078fe":"train_X = train_X.drop('total_revenue', axis=1)","d866c271":"test_X = test_X.drop('date', axis=1)","1789f055":"test_X = test_X.drop('total_revenue', axis=1)","5efb12ac":"X_train_true, X_valid, y_train_true, y_valid = train_test_split(train_X, train_y, test_size=0.1, random_state=42)","12906eb7":"#Base solution without feature engineering","e370adf0":"from catboost import CatBoostRegressor","9eab62e8":"from catboost.utils import eval_metric","bb516441":"params = {'iterations' : 1000,\n          'random_seed' : 7,\n          'depth'  : 10,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 200\n}","1194c721":"model = CatBoostRegressor(**params)","4c6dcc54":"model.fit(X_train_true, y_train_true,\n          eval_set=(X_valid, y_valid),\n          use_best_model=True,\n          plot=True\n         )","68d358d0":"predictions = model.predict(test_X)","93441369":"rmse = eval_metric(test_y['CPM'], predictions, 'RMSE')","68c16606":"rmse","e4464201":"from sklearn.metrics import mean_squared_error","5b03cec2":"mse = mean_squared_error(test_y['CPM'], predictions)","15ab800b":"mse","9be9ed1a":"##","9fd09562":"train_X.head()","42eb3e8b":"train_X.info()","96e398c9":"train_X.describe()","a350cbdb":"categorical_features = ['site_id',\n                        'ad_type_id',\n                        'ad_unit_id', \n                        'geo_id',\n                        'device_category_id',\n                        'os_id',\n                        'integration_type_id',\n                        'advertiser_id',\n                        'line_item_type_id'\n                       ]","07afb9c2":"numeric_features = ['total_impressions',\n                     'viewable_impressions',\n                     'measurable_impressions'\n                    ]","e1fc0acb":"params = {'iterations' : 100,\n          'random_seed' : 7,\n          'depth'  : 10,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 200\n}","070b7089":"model_2 = CatBoostRegressor(**params)","3b46f796":"model_2.fit(X_train_true, y_train_true,\n            eval_set=(X_valid, y_valid),\n            use_best_model=True,\n            plot=True, \n            cat_features=list(range(X_train_true[categorical_features].shape[1]))\n         )","55036ec5":"predictions = model_2.predict(test_X)","c439692d":"mse = mean_squared_error(test_y['CPM'], predictions)\nmse","a3a89ff3":"train_X.head()","d850e53d":"X = train_X[categorical_features]","73758df2":"X.head(5)","887ba675":"y = train_y","aa7648a1":"x_train, x_valid, y_train, y_valid = train_test_split(X, y, test_size=0.1, random_state=42)","1c95e577":"params = {'iterations' : 100,\n          'random_seed' : 7,\n          'depth'  : 10,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 200\n}","2b27791a":"model_3 = CatBoostRegressor(**params)","0492075d":"model_3.fit(x_train, y_train,\n            eval_set=(x_valid, y_valid),\n            use_best_model=True,\n            plot=True, \n            cat_features=list(range(x_train[categorical_features].shape[1]))\n         )","e55f0b12":"predictions = model_3.predict(test_X[categorical_features])\nmse = mean_squared_error(test_y['CPM'], predictions)\nmse","413adfa4":"df = pd.read_csv('\/kaggle\/input\/real-time-advertisers-auction\/Dataset.csv')","affb95ea":"def weird_division(n, d):\n    return n \/ d if d else 0\n\ndf['CPM'] = df.apply(lambda x: weird_division(((x['total_revenue']*100)), x['measurable_impressions'])*1000 , axis=1)","369e8e56":"df = df[df['CPM'] >= 0]","e2afa196":"df = df.drop('total_impressions', axis=1)","8fd7aa18":"df = df.drop('total_revenue', axis=1)","e244ad26":"df = df.drop('viewable_impressions', axis=1)","24f80c0b":"df = df.drop('measurable_impressions', axis=1)","3d854f53":"df = df.drop('revenue_share_percent', axis=1)","d2077377":"df.head()","088cd2de":"df_train = df[(pd.to_datetime(df.date) < pd.to_datetime('2019-06-22'))]","4b04582f":"df_test  = df[(pd.to_datetime(df.date) >= pd.to_datetime('2019-06-22'))]","fca9dd7d":"train = df_train[df_train['CPM'] <= np.quantile(df_train['CPM'], 0.95)]","5690bcd4":"test = df_test[df_test['CPM'] <= np.quantile(df_test['CPM'], 0.95)]","9bcaaf6a":"X_train = train.drop(columns=['date', 'CPM'])\ny_train = train['CPM']","a180a562":"X_test = test.drop(columns=['date', 'CPM'])\ny_test = test['CPM']","103df679":"x_train, x_valid, y_train, y_valid = train_test_split(X_train, y_train, test_size=0.1, random_state=42)","3b568e5a":"params_4 = {'iterations' : 100,\n          'random_seed' : 7,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 200\n}","ee73aa38":"model_4 = CatBoostRegressor(**params_4)","c5dc750e":"model_4.fit(x_train, y_train,\n          eval_set=(x_valid, y_valid),\n          cat_features=X_train.columns,\n          use_best_model=True,\n          plot=True\n         )","1b846205":"predictions = model_4.predict(X_test)\nmse = mean_squared_error(y_test, predictions)\n\nmse","e279627c":"params_5 = {'iterations' : 200,\n          'random_seed' : 7,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 200,\n            'depth' : 15\n}","30cc9fc3":"model_5 = CatBoostRegressor(**params_5)","2e76a7e2":"model_5.fit(x_train, y_train,\n          eval_set=(x_valid, y_valid),\n          cat_features=X_train.columns,\n          use_best_model=True,\n          plot=True\n         )","0a56fe62":"predictions = model_5.predict(X_test)\nmse = mean_squared_error(y_test, predictions)\n\nmse","a8f79480":"params_6 = {'iterations' : 100,\n          'random_seed' : 7,\n          'loss_function' :'RMSE', ## in catbost mse not implemented\n          'verbose' : 20,\n        }","799b33ba":"model_6 = CatBoostRegressor(**params_6)","ed4cb3e8":"model_6.fit(x_train, y_train,\n          eval_set=(x_valid, y_valid),\n          cat_features=X_train.columns,\n          use_best_model=True,\n          plot=True\n         )","c496531f":"predictions = model_6.predict(X_test)\nmse = mean_squared_error(y_test, predictions)\n\nmse","c58bb2a2":"## exp_3","0c3e6dbe":"## exp_4","295ea97b":"## exp_2"}}