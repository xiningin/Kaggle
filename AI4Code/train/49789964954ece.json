{"cell_type":{"d9720651":"code","626b1abd":"code","444c5de4":"code","24feb50c":"code","0a3d0860":"code","bf283812":"code","75595b6d":"code","53704e60":"code","05708dda":"code","1e2be89d":"code","5e28e1bb":"code","050e3f3b":"code","28c0a674":"code","1dc22d0b":"code","ae121e8a":"code","d070cd43":"code","a3e2a1b9":"code","4a6f6ca6":"code","8c2267ad":"code","e7ad3c84":"code","a2aba02f":"code","9c27f23b":"code","5410d9e7":"code","13e2fc5f":"code","cfc6489e":"code","584e53ce":"code","fe94f7e5":"code","bb966eb7":"code","210acddc":"code","49b8f297":"code","6dd26b4c":"code","dca9bc98":"code","4700ede7":"code","b97235aa":"code","0945e9cb":"code","a29c1e08":"code","9b578dec":"code","7a75d3aa":"code","65d2414e":"code","7f1633da":"code","3dd4fa0d":"code","13f3f7d5":"code","7a79804a":"code","ddcfa187":"code","2c7560b4":"code","de146634":"code","526171ab":"code","bfce6a67":"code","dcbcd2d4":"code","a5575f1b":"code","91359060":"code","7915e676":"code","f4f9392b":"code","a851a1d9":"code","c398bcd2":"code","032e1709":"code","a6bb94ac":"code","1ebad2ef":"code","99b3a452":"code","1328bc45":"code","f7a956f5":"code","bda1785a":"code","f7f5bb38":"code","c98b0768":"code","3055adef":"code","7111baf6":"code","95db46fa":"code","5581a391":"code","11d425ba":"code","86e9aeda":"code","1abdb5c4":"code","5ef86b20":"code","7c5e977f":"code","ffa539f6":"code","1ab2f33b":"code","a04b7684":"code","76284c69":"code","0795a762":"code","31c08850":"code","a7c79fed":"code","a5ba77c1":"code","e9b916b5":"code","c7d30d62":"code","5e0cde01":"code","3c3c40ed":"code","373785bb":"code","b2b7cdb3":"code","eb0d7353":"code","3d699298":"code","727e8a41":"code","e0621f0d":"code","ad8c741c":"code","a4d7f8aa":"markdown","59927199":"markdown","2e2e26db":"markdown","06f407e8":"markdown","d10239ec":"markdown","6f7ae80d":"markdown","610766b4":"markdown"},"source":{"d9720651":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","626b1abd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","444c5de4":"##reading data\ndata=pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","24feb50c":"data.head()","0a3d0860":"data.info()","bf283812":"##data shape\ndata.shape","75595b6d":"##null value percentage check\nround(100*(data.isnull().sum()\/data.shape[0]),2)","53704e60":"data.describe()","05708dda":"##checking target count\ndata['DEATH_EVENT'].value_counts()","1e2be89d":"sns.countplot(data['DEATH_EVENT'])\nplt.show()","5e28e1bb":"data.columns","050e3f3b":"plt.figure(figsize=(15,10))\nsns.heatmap(data.corr(),annot=True)","28c0a674":"sns.boxplot(data['DEATH_EVENT'],data['age'])\nplt.show()","1dc22d0b":"sns.boxplot(data['DEATH_EVENT'],data['serum_creatinine'])\nplt.show()","ae121e8a":"sns.distplot(data['serum_creatinine'])","d070cd43":"sns.boxplot(data['serum_creatinine'])","a3e2a1b9":"data['serum_creatinine'].describe()","4a6f6ca6":"sns.distplot(np.log(data['serum_creatinine']))","8c2267ad":"data['serum_creatinine']=np.log(data['serum_creatinine'])","e7ad3c84":"data.shape","a2aba02f":"sns.boxplot(data['DEATH_EVENT'],data['serum_creatinine'],hue=data['sex'])","9c27f23b":"sns.boxplot(data['DEATH_EVENT'],data['serum_creatinine'],hue=data['smoking'])","5410d9e7":"sns.pairplot(data)","13e2fc5f":"sns.scatterplot(data['creatinine_phosphokinase'],data['platelets'])","cfc6489e":"##X,y split\nX=data.drop('DEATH_EVENT',axis=1)","584e53ce":"X.shape","fe94f7e5":"y=data['DEATH_EVENT']","bb966eb7":"from sklearn.model_selection import train_test_split","210acddc":"X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.8,random_state=42,shuffle=True)","49b8f297":"X_train.shape,X_test.shape,y_train.shape,y_test.shape","6dd26b4c":"y_train.value_counts() , y_test.value_counts()","dca9bc98":"!pip install imblearn","4700ede7":"from imblearn.over_sampling import SMOTE\nsmk=SMOTE(random_state=42)\nX_train_res,y_train_res=smk.fit_resample(X_train,y_train)","b97235aa":"y_train.value_counts()","0945e9cb":"y_train_res.value_counts()","a29c1e08":"##scaling\nfrom sklearn.preprocessing import StandardScaler","9b578dec":"scaler=StandardScaler()","7a75d3aa":"X_train=scaler.fit_transform(X_train_res)","65d2414e":"X_test=scaler.transform(X_test)","7f1633da":"X_train.shape,X_test.shape,y_train_res.shape","3dd4fa0d":"from sklearn.linear_model import LogisticRegression","13f3f7d5":"log1=LogisticRegression()","7a79804a":"log1.fit(X_train,y_train_res)","ddcfa187":"y_test_pred=log1.predict(X_test)","2c7560b4":"from sklearn import metrics","de146634":"metrics.accuracy_score(y_test,y_test_pred)","526171ab":"metrics.confusion_matrix(y_test,y_test_pred)","bfce6a67":"metrics.roc_auc_score(y_test,y_test_pred)","dcbcd2d4":"from sklearn.metrics import classification_report","a5575f1b":"print(classification_report(y_test_pred,y_test))","91359060":"from sklearn.tree import DecisionTreeClassifier","7915e676":"dtc=DecisionTreeClassifier(max_depth=5,min_samples_leaf=25)","f4f9392b":"dtc.fit(X_train,y_train_res)","a851a1d9":"y_test_pred=dtc.predict(X_test)","c398bcd2":"metrics.accuracy_score(y_test_pred,y_test)","032e1709":"metrics.confusion_matrix(y_test_pred,y_test)","a6bb94ac":"print(classification_report(y_test_pred,y_test))","1ebad2ef":"metrics.roc_auc_score(y_test_pred,y_test)","99b3a452":"## Hyper parameter tuning\nfrom sklearn.model_selection import GridSearchCV","1328bc45":"dt=DecisionTreeClassifier(random_state=42)","f7a956f5":"params={'max_depth': [3,5,7,9,12],'min_samples_leaf': [10,25,30,60,90],'criterion': [\"gini\", \"entropy\"]}","bda1785a":"cv_model=GridSearchCV(estimator=dt,param_grid=params,cv=5,n_jobs=-1,verbose=1,scoring='accuracy')","f7f5bb38":"%%time\ncv_model.fit(X_train,y_train_res)","c98b0768":"cv_model.best_estimator_","3055adef":"cv_model.best_params_","7111baf6":"dtc2=DecisionTreeClassifier(criterion='entropy', max_depth=3, min_samples_leaf=25,\n                       random_state=42)","95db46fa":"dtc2.fit(X_train,y_train_res)","5581a391":"y_test_pred=dtc2.predict(X_test)","11d425ba":"metrics.accuracy_score(y_test,y_test_pred)","86e9aeda":"metrics.confusion_matrix(y_test,y_test_pred)","1abdb5c4":"metrics.roc_auc_score(y_test,y_test_pred)","5ef86b20":"from sklearn.ensemble import RandomForestClassifier","7c5e977f":"rfc=RandomForestClassifier(n_estimators=200,max_depth=3,min_samples_leaf=25)","ffa539f6":"rfc.fit(X_train,y_train_res)","1ab2f33b":"y_test_pred=rfc.predict(X_test)","a04b7684":"metrics.accuracy_score(y_test_pred,y_test)","76284c69":"rf=RandomForestClassifier(random_state=42)","0795a762":"params={'max_depth':[3,6,9,10],'min_samples_leaf':[10,15,20,30],'max_features':[2,3,4,6,8,12],'n_estimators':[10,50,100,200,300]}","31c08850":"grid_search=GridSearchCV(estimator=rf,param_grid=params,cv=4,n_jobs=-1,verbose=1,scoring='accuracy')","a7c79fed":"%%time\ngrid_search.fit(X_train,y_train_res)","a5ba77c1":"grid_search.best_score_","e9b916b5":"grid_search.best_params_","c7d30d62":"grid_search.best_estimator_","5e0cde01":"score=pd.DataFrame(grid_search.cv_results_)","3c3c40ed":"score","373785bb":"rfc2=RandomForestClassifier(max_depth=6, max_features=3, min_samples_leaf=15,\n                       random_state=42,n_estimators=100)","b2b7cdb3":"rfc2.fit(X_train,y_train_res)","eb0d7353":"y_test_pred=rfc2.predict(X_test)","3d699298":"metrics.accuracy_score(y_test_pred,y_test)","727e8a41":"metrics.confusion_matrix(y_test_pred,y_test)","e0621f0d":"metrics.roc_auc_score(y_test_pred,y_test)","ad8c741c":"rfc2.predict([[75,0,582,0,20,1,265800,1.9,130,1,0,3]])","a4d7f8aa":"## Logistic Regression","59927199":"### so we have a class imbalance problem here\n### let's do some visualization also to better understand the data","2e2e26db":"## Hyperparameter Tuning","06f407e8":"## Hyperparameter Tuning","d10239ec":"## RandomForestClassifier","6f7ae80d":"## DecisionTree","610766b4":"## lets handle class imbalance"}}