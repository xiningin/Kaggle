{"cell_type":{"39d20496":"code","59633e69":"code","a9072d0b":"code","fe73bf35":"code","b8a8d6d0":"code","1b39513a":"code","0e1551ec":"code","38df6f5b":"code","e1a098df":"code","3efc1522":"code","8ac1c15b":"markdown","2bf9b3c9":"markdown","a13360ab":"markdown","b5e0377c":"markdown"},"source":{"39d20496":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', dtype = object)","59633e69":"questions  = df.iloc[:1,:]\nanswers = df.iloc[1:, :]\n# px.scatter(response, x = 'Time from Start to Finish (seconds)')\nresponse = answers.copy() \nresponse['Time from Start to Finish (seconds)'] = (response['Time from Start to Finish (seconds)'].astype(int)\/3600).round(2)\nresponse = response.rename(columns={'Q1': 'age', 'Q2': 'gender', \n                                  'Time from Start to Finish (seconds)' : 'time_hours',\n                                  'Q3': 'country', 'Q4': 'education',\n                                 'Q5': 'role', 'Q6': 'code_exp'})","a9072d0b":"# response['time_minutes']\nresponse_time = response.copy()\nresponse_time['time_category'] = pd.cut(response['time_hours'],3, labels = ['low', 'medium', 'high'])","fe73bf35":"# Maximum time in hours for time_category : low\nresponse_time.loc[response_time['time_category'] == 'low'].sort_values(by = 'time_hours',ascending = False).head(1)","b8a8d6d0":"# Maximum time in hours for time_category : medium\nresponse_time.loc[response_time['time_category'] == 'medium'].sort_values(by = 'time_hours',ascending = False).head(1)","1b39513a":"# Maximum time in hours for time_category : high\nresponse_time.loc[response_time['time_category'] == 'high'].sort_values(by = 'time_hours',ascending = False).head(1)","0e1551ec":"# Number of responses for each time_category : low\nresponse_time['time_category'].value_counts()","38df6f5b":"px.box(response_time,\n       x = 'age',\n       y = 'time_hours',\n       color = 'time_category',\n       template=\"ggplot2\",\n       color_discrete_sequence= px.colors.qualitative.Safe)","e1a098df":"px.box(response_time,x = 'role',\n       y = 'time_hours',\n       color = 'time_category',\n       template=\"ggplot2\",\n       color_discrete_sequence= px.colors.qualitative.Safe)","3efc1522":"fig = make_subplots(\n    rows=2, cols=2,\n    row_heights=[0.5,0.5],\n    column_widths=[0.5,0.5],\n    shared_yaxes = True,\n    vertical_spacing=0.1)\n\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'high'].age,\n    y=response_time.loc[response_time['time_category'] == 'high'].time_hours,\n    name=\"high time: age group\"),row=1, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'medium'].age,\n    y=response_time.loc[response_time['time_category'] == 'medium'].time_hours,\n    name=\"medium time: age group\"),row=1, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'low'].age,\n    y=response_time.loc[response_time['time_category'] == 'low'].time_hours,\n    name=\"low time: age group\"),row=1, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'high'].role,\n    y=response_time.loc[response_time['time_category'] == 'high'].time_hours,\n    name=\"high time: roles\"),row=2, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'medium'].role,\n    y=response_time.loc[response_time['time_category'] == 'medium'].time_hours,\n    name=\"medium time: roles\"),row=2, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'low'].role,\n    y=response_time.loc[response_time['time_category'] == 'low'].time_hours,\n    name=\"low time: roles\"),row=2, col=1)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'high'].gender,\n    y=response_time.loc[response_time['time_category'] == 'high'].time_hours,\n    name=\"high time: gender\"),row=1, col=2)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'medium'].gender,\n    y=response_time.loc[response_time['time_category'] == 'medium'].time_hours,\n    name=\"medium time: gender\"),row=1, col=2)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'low'].gender,\n    y=response_time.loc[response_time['time_category'] == 'low'].time_hours,\n    name=\"high time: gender\"),row=1, col=2)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'high'].education,\n    y=response_time.loc[response_time['time_category'] == 'high'].time_hours,\n    name=\"high time: education\"),row=2, col=2)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'medium'].education,\n    y=response_time.loc[response_time['time_category'] == 'medium'].time_hours,\n    name=\"medium time: education\"),row=2, col=2)\nfig.add_trace(go.Box(\n    x=response_time.loc[response_time['time_category'] == 'low'].education,\n    y=response_time.loc[response_time['time_category'] == 'low'].time_hours,\n    name=\"low time: education\"),row=2, col=2)\n\n# Set theme, margin, and annotation in layout\nfig.update_layout(\n    template=\"ggplot2\",\n    height = 800,\n    margin=dict(r=5, t=25, b=40, l=5))\nfig.update_xaxes(showticklabels=True) # hide all the xticks\nfig.update_yaxes(range=[0, 900])\nfig.show()","8ac1c15b":"## Time taken by various demographics to complete the survey","2bf9b3c9":"## Time taken to complete the survey by different age groups:","a13360ab":"* __Time from Start to Finish (seconds)__ column has varied distribution with some very large values.\n* Converting total time taken into hours for aggregation as `time_hours`\n* Creating a __time_category__ column by binning the data based on `time_hours` column into low, medium and high time taken categories. ","b5e0377c":"## Time taken to complete the survey by different roles"}}