{"cell_type":{"c19666a1":"code","a84b2bd6":"code","18b4aa38":"code","d749666b":"code","44de9333":"code","5d5e7373":"code","8b972971":"code","f3be915c":"code","251bbec2":"code","10269b59":"code","0b1dff51":"code","702e388d":"code","b2b77099":"code","33232286":"code","8bb65308":"code","177ccde0":"code","e7f7dcc1":"code","3d42f42d":"code","95430d32":"code","2dada3c6":"code","d375a993":"code","ddd67d9c":"code","5f0d0e62":"code","45e8591f":"code","0f187311":"code","90d982b9":"code","fb9de461":"code","ba19531a":"code","982eb566":"code","ef4a2435":"code","1bdc5ecb":"code","b0ddbd20":"code","2c9c29fd":"code","e4a45d6a":"code","6676f96a":"code","57f2dddc":"code","6c0f654a":"code","7f57259e":"code","d9f17491":"code","563909c0":"code","25e65b31":"code","ea1c9bd1":"code","b16d6581":"code","4f7ecdee":"code","af6d9006":"code","94a668aa":"code","6b89648a":"code","08ae71c9":"code","596d3cc8":"code","856c4db3":"code","07bf21cd":"code","7cda0263":"code","af426076":"code","6f316fe9":"code","1ae397a5":"code","562a325b":"code","79d7efa5":"code","8b74b3f6":"code","a8d6d079":"code","24d24f18":"code","0887193d":"markdown"},"source":{"c19666a1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline ","a84b2bd6":"train=pd.read_csv(r'\/kaggle\/input\/titanic\/train.csv')","18b4aa38":"test=pd.read_csv(r'\/kaggle\/input\/titanic\/test.csv')","d749666b":"train.tail()","44de9333":"test.head()","5d5e7373":"len(train)","8b972971":"len(test)","f3be915c":"train.drop(['Cabin','Name','Ticket'],inplace=True,axis=1)","251bbec2":"test.drop(['Cabin','Name','Ticket'],inplace=True,axis=1)","10269b59":"train.head(3)","0b1dff51":"test.head(3)","702e388d":"train['Embarked']=pd.get_dummies(train['Embarked'],drop_first=True)","b2b77099":"test['Embarked']=pd.get_dummies(test['Embarked'],drop_first=True)","33232286":"#train.drop(['Embarked'],inplace=True,axis=1)","8bb65308":"#test.drop(['Embarked'],inplace=True,axis=1)","177ccde0":"train.head(3)","e7f7dcc1":"test.head(4)","3d42f42d":"train['Sex']=pd.get_dummies(train['Sex'],drop_first=True)","95430d32":"train.head(3)","2dada3c6":"train.head()","d375a993":"test['Sex']=pd.get_dummies(test['Sex'],drop_first=True)","ddd67d9c":"test.head(3)","5f0d0e62":"sns.heatmap(train.isnull())","45e8591f":"sns.heatmap(test.isnull())","0f187311":"train[train['Age'].isnull()==True]","90d982b9":"sns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","fb9de461":"def impute(col):\n    Age=col[0]\n    Pclass=col[1]\n    \n    if pd.isnull(Age)==True:\n        \n        if Pclass==1:\n            return 37\n        \n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n        \n    else:\n        return Age","ba19531a":"train['Age']=train[['Age','Pclass']].apply(impute,axis=1)","982eb566":"sns.heatmap(train.isnull())","ef4a2435":"sns.boxplot(x='Pclass',y='Age',data=test,palette='winter')","1bdc5ecb":"def impute2(col):\n    Age=col[0]\n    Pclass=col[1]\n    \n    if pd.isnull(Age)==True:\n        \n        if Pclass==1:\n            return 42\n        \n        elif Pclass==2:\n            return 26\n        else:\n            return 25\n        \n    else:\n        return Age","b0ddbd20":"test['Age']=test[['Age','Pclass']].apply(impute2,axis=1)","2c9c29fd":"sns.heatmap(test.isnull())","e4a45d6a":"len(test)","6676f96a":"test['Fare'].plot(kind='kde')","57f2dddc":"test['Fare'].mean()","6c0f654a":"test['Fare']=test['Fare'].fillna(35.62)","7f57259e":"sns.heatmap(test.isnull())","d9f17491":"len(test)","563909c0":"X_train=train.drop('Survived',axis=1)\nX_train","25e65b31":"Y_train=train['Survived']\nY_train","ea1c9bd1":"X_test=test","b16d6581":"from sklearn.ensemble import RandomForestClassifier","4f7ecdee":"clf=RandomForestClassifier(n_estimators=300)","af6d9006":"clf.fit(X_train,Y_train)","94a668aa":"prediction=clf.predict(X_test)","6b89648a":"#from sklearn.tree import DecisionTreeRegressor","08ae71c9":"#clf=DecisionTreeRegressor(max_depth=4)\n#clf=clf.fit(X_train,Y_train)","596d3cc8":"#prediction=clf.predict(X_test)","856c4db3":"#from sklearn.linear_model import LogisticRegression ","07bf21cd":"#logmodel=LogisticRegression(solver='lbfgs',max_iter=500)\n","7cda0263":"#logmodel.fit(X_train,Y_train)","af426076":"#predictions=logmodel.predict(X_test)","6f316fe9":"pred=pd.DataFrame(data=prediction,columns=['Survived'])\npred","1ae397a5":"#def num(a):\n #   if a >= 0.655:\n  #      return 1\n   # else:\n    #    return 0","562a325b":"#pred=pred['Survived'].apply(num)\n#print(pred)","79d7efa5":"ps_id=test['PassengerId']","8b74b3f6":"final_df=pd.concat([ps_id,pred],axis=1)\nfinal_df","a8d6d079":"final_df['Survived'].unique()","24d24f18":"final_df.to_csv('resultX122.csv', index=True,encoding='utf-8')","0887193d":"**The End**"}}