{"cell_type":{"1a2b08ae":"code","051241ac":"code","a82139f0":"markdown","e82ce743":"markdown","5191fc75":"markdown","cfe91b0e":"markdown","00f590de":"markdown","27b9ccbc":"markdown"},"source":{"1a2b08ae":"from tensorflow.python.keras.applications import ResNet50\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, GlobalAveragePooling2D\n\nnum_classes = 2\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg', weights=resnet_weights_path))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\n# Say not to train first layer (ResNet) model. It is already trained\nmy_new_model.layers[0].trainable = False\n\nmy_new_model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","051241ac":"from tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\n\ndata_generator_with_aug = ImageDataGenerator(preprocessing_function=preprocess_input,\n                                   horizontal_flip=True,\n                                   width_shift_range = 0.2,\n                                   height_shift_range = 0.2)\n\ntrain_generator = data_generator_with_aug.flow_from_directory(\n        '..\/input\/urban-and-rural-photos\/rural_and_urban_photos\/train',\n        target_size=(image_size, image_size),\n        batch_size=24,\n        class_mode='categorical')\n\ndata_generator_no_aug = ImageDataGenerator(preprocessing_function=preprocess_input)\nvalidation_generator = data_generator_no_aug.flow_from_directory(\n        '..\/input\/urban-and-rural-photos\/rural_and_urban_photos\/val',\n        target_size=(image_size, image_size),\n        class_mode='categorical')\n\nmy_new_model.fit_generator(\n        train_generator,\n        steps_per_epoch=3,\n        epochs=2,\n        validation_data=validation_generator,\n        validation_steps=1)","a82139f0":"---\n**[Deep Learning Course Home Page](https:\/\/www.kaggle.com\/learn\/deep-learning)**\n\n","e82ce743":"### Fitting a Model With Data Augmentation","5191fc75":"**[Deep Learning Course Home Page](https:\/\/www.kaggle.com\/learn\/deep-learning)**\n\n---\n","cfe91b0e":"# Exercise\nMove on to **[apply data augmentation](https:\/\/www.kaggle.com\/kernels\/fork\/536195)** yourself.","00f590de":"# Sample Code\n\nWe have some model set-up code which you've seen before.  It's not our focus for the moment, so it is hidden (but optionally visible by clicking the \"code\" button below.)","27b9ccbc":"# Intro\n\nAt the end of this lesson, you will be able to use data augmentation. This trick that makes it seem like you have far more data than you actually have, resulting in even better models..\n\n"}}