{"cell_type":{"e46ed6c1":"code","77299eb3":"code","5573cc90":"code","06add3fb":"code","c8bba9bb":"code","37a97123":"code","77e4494e":"code","ddbc1a08":"code","fc8833d9":"code","332defac":"code","92080663":"code","77c83c15":"code","2cb71817":"code","f547a3fb":"code","6cbc02f5":"code","0033d31d":"code","8005df72":"code","e03408e6":"code","fa54fc78":"code","28c7da14":"code","097cd53d":"code","2610c48b":"code","37bd05b8":"code","f2356686":"code","b6c0e1ec":"code","5623b24c":"code","c27d55d2":"code","24fa63a9":"code","6a141561":"code","f3f86676":"code","bcf8a273":"code","ee480d45":"code","0fe44e69":"code","2a6e5b92":"code","c1428629":"code","c3fdbd52":"code","01c8a8ce":"code","ffd3e557":"code","b48a77aa":"code","1c3799f1":"code","87b4eee0":"code","7c747e1b":"code","e44d6e7d":"markdown","8abeed87":"markdown","8ca384f1":"markdown","53991005":"markdown","b029cd1e":"markdown","6883a266":"markdown","e0612824":"markdown","c5ab87fe":"markdown","c02f050b":"markdown","e42b8115":"markdown","f6f16708":"markdown","38ff2582":"markdown","f5dc3d99":"markdown","8a1b5073":"markdown","e0676839":"markdown","94a1abbf":"markdown","ee920b26":"markdown","cd494f71":"markdown","7d1575e1":"markdown","4f03decb":"markdown","2c672832":"markdown","1fe36ed8":"markdown","cfbe16cc":"markdown","a8e4ef64":"markdown","c49d98f2":"markdown"},"source":{"e46ed6c1":"import numpy as np","77299eb3":"guardarAca = np.array([1,2,3,4])","5573cc90":"guardarAca","06add3fb":"type(guardarAca)","c8bba9bb":"guardarAca + guardarAca","37a97123":"guardarAca \/ guardarAca","77e4494e":"guardarAca + 100","ddbc1a08":"np.sqrt(guardarAca)","fc8833d9":"np.sin(guardarAca)","332defac":"guardarAca[0]","92080663":"guardarAca[2]","77c83c15":"guardarAca[4]","2cb71817":"guardarAca[1:-1]","f547a3fb":"guardarAca.mean()","6cbc02f5":"guardarAca.max()","0033d31d":"guardarAca.sum()","8005df72":"guardarAca.size","e03408e6":"data = np.round( np.random.randn(3,5) * 100 )","fa54fc78":"data","28c7da14":"data*2","097cd53d":"data.shape","2610c48b":"data = np.array([85, 14, 95, 23, 44, 26, 75])","37bd05b8":"np.sum(data)","f2356686":"np.square(np.sin(data)) + np.square(np.cos(data))","b6c0e1ec":"np.ones(3)","5623b24c":"np.full([2,5], fill_value=10)","c27d55d2":"data = np.array([85, 14, 95, 23, 44, 26, 75])","24fa63a9":"data.min()","6a141561":"data.argmin()","f3f86676":"data.ptp() == (data.max() - data.min())","bcf8a273":"data.mean()","ee480d45":"arr2d = np.array([[1, 2, 3],\n                  [4, 5, 6],\n                  [7, 8, 9]])\n\n","0fe44e69":"arr2d","2a6e5b92":"arr2d[:1]","c1428629":"arr2d[:2, :]","c3fdbd52":"arr2d[1, :2]","01c8a8ce":"arr2d[:2, 1:] = 0\narr2d","ffd3e557":"arr2d","b48a77aa":"arr2d < 2","1c3799f1":"arr2d[arr2d < 2]","87b4eee0":"arr2d > 0","7c747e1b":"arr2d[arr2d > 0]","e44d6e7d":"-----","8abeed87":"Tama\u00f1o de 'data'","8ca384f1":"Los elementos de una ndarray se pueden acceder mediante su indice\n\n* Todos los indices empiezan en 0\n* Se usan numeros enteros\n* El indice maximo equivale a la cantidad de (elementos - 1)\n* Se accede al elemento con [*indice*]\n* Si el indice es negativo, se cuenta desde el final","53991005":"## Funciones de agregacion\n\nLas funciones de agregacion me transforman el array de datos a un solo valor.\n\nAlgunas posibles son:\n* El valor maximo del array:  *guardarAca.max()*\n* El valor minimo del array:  *guardarAca.min()*\n* El valor promedio del array:  *guardarAca.mean()*\n* La suma del array:  *guardarAca.sum()*\n\nEstas no llevan () porque son parametros y no metodos (funciones)\n* La longitud del array: *guardarAca.size*  \n* O cuantos elementos tiene por dimension: *guardarAca.shape*","b029cd1e":"### Funciones para crear ndarrays","6883a266":"1) Importar libreria Numpy con el nombre \"np\" (Forma usual de llamarla)","e0612824":"Lo mismo para division o multiplicacion","c5ab87fe":"## Indexado\n\nEl indexado en los ndarray funciona igual que el indexado de listas","c02f050b":"## Dimensiones\n\nLos arrays de numpy pueden ser unidimensionales (1D), bidimensionales (2D) o cuantas dimensiones quieran.\n\nLa utilidad de 2D en adelante para Data Science es limitada. Cuando la libreria pandas lee datos los guarda de manera tabular, donde cada columna es un array 1D de numpy.","e42b8115":"O inclusive sumarle (tambien multiplicar, dividir o restar) un numero solo. En este caso, a cada elemento se le suma ese valor ","f6f16708":"### Filtros booleanos","38ff2582":"Le asigno a la variable *guardarAca* el array de numpy conformado por la lista [1, 2, 3, 4]","f5dc3d99":"### Arreglos en NumPy","8a1b5073":"### Slicing","e0676839":"Hay muchas formas de crear arreglos en Numpy, puede explorarlas todas en este [enlace](https:\/\/docs.scipy.org\/doc\/numpy-1.13.0\/reference\/routines.array-creation.html). Las m\u00e1s comunes son:\n\n| Funci\u00f3n | Descripci\u00f3n |\n|:--------|:------------|\n| `empty` | Arreglo vacio |\n| `zeros` | Arreglo de ceros |\n| `ones`  | Arreglo de unos |\n| `full`  | Se especifica un valor para llenar todo el arreglo con \u00e9l |\n| `identity` | Unos en la diagonal y cero en el resto |\n| `array` | Constructor gen\u00e9rico |\n| `fromfunction` | Seg\u00fan una funci\u00f3n dada que retorna un valor para cada punto de la coordenada |\n| `loadtxt` | Carga los datos de un archivo |","94a1abbf":"A un array de numpy le puedo sumar otro. La suma es elemento a elemento.","ee920b26":"Pedir 5to elemento (*guardarAca[4]*) devuelve un error similar al de las listas","cd494f71":"Lista completa de funciones universales en este [enlace](https:\/\/docs.scipy.org\/doc\/numpy-1.13.0\/reference\/ufuncs.html#math-operations)","7d1575e1":"Tambien puedo dar rangos (mezclando positivos y negativos):","4f03decb":"# Librer\u00eda Numpy","2c672832":"Si quiero el 3er elemento","1fe36ed8":"## Extras:\n\nLes paso un poco mas de informacion sobre Numpy.  \n\nLo que sigue **no** es una lista exahustiva sobre funcionalidades de Numpy. Para mas info ver **[este tutorial](https:\/\/www.numpy.org\/devdocs\/user\/quickstart.html)** mas completo.","cfbe16cc":"### Funciones de agregaci\u00f3n\nSuelen expresarse como m\u00e9todos del objeto array. En general, tienen como consecuencia disminuir las dimensiones del arreglo y son muy utilizados en matem\u00e1ticas y f\u00edsica. <br>\nLa siguiente tabla muestra los m\u00e1s utilizados, puede encontrar la documentaci\u00f3n [aqu\u00ed](https:\/\/docs.scipy.org\/doc\/numpy-1.13.0\/reference\/arrays.ndarray.html#calculation).\n\n| Operaci\u00f3n | Descripci\u00f3n |\n|:----------|:------------|\n| `a.sum()`    | Retorna la suma del arreglo en el eje dado |\n| `a.min()`    | Retorna el valor m\u00ednimo de un eje |\n| `a.mean()`   | Retorna la media aritm\u00e9tica en un eje dado |\n| `a.var()`    | Retorna la varianza en un eje dado|\n| `a.std()`    | Retorna la desviaci\u00f3n est\u00e1ndar en un eje dado |\n| `a.prod()`   | Retorna el producto en un eje dado |\n| `a.argmin()` | Retorna el \u00edndice donde ocurren los valores m\u00ednimos de cada eje |\n| `a.ptp()`    | Valor pico a pico en un eje |\n| `a.conj()`   | Retorna el conjugado complejo de todos los elementos |\n| `a.round()`  | Retorna el valor redondeado de cada elemento |\n| `a.trace()`  | Retorna la suma de las diagonales del arreglo |\n| `a.argmax()` | Retorna el \u00edndice donde ocurren los valores m\u00e1ximos de cada eje |\n| `a.cumsum()` | Retorna la suma acumulativa en un eje dado |\n| `a.cumprod()`| Retorna el producto acumulativo en un eje dado |","a8e4ef64":"Tambien se pueden aplicar funciones matematicas a cada elemento del array.  \n\nPor ejemplo: \n* la raiz cuadrada *libreriaNumpy.sqrt()*\n* el seno: *libreriaNumpy.sin()*","c49d98f2":"### Funciones universales"}}