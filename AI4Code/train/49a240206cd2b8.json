{"cell_type":{"115b6e4e":"code","a3276a0f":"code","1d6484ad":"code","3a49ab2c":"code","6597288f":"code","5d3f34af":"code","0898c299":"code","218d7932":"code","5aa7cf64":"code","79e9659c":"code","28cdac03":"code","d79aa48c":"code","fac9eb63":"code","e5b7deb7":"code","3c02cd68":"code","5e163afc":"code","4e95e29f":"code","6fdcb5e2":"code","411b405a":"code","69a429e0":"code","2655e94c":"code","da4ccb96":"code","afd94aa7":"code","925ea014":"code","a61d9ffa":"code","a3d9f82a":"code","b7e72dfd":"code","197f23c7":"code","596e4d09":"code","dc2dfedd":"code","f2314b7c":"code","a21c67e1":"code","3d0f0e6a":"code","2bdd1306":"code","33d3acce":"code","4de485ba":"markdown","8b5253bc":"markdown","e468686e":"markdown","02142485":"markdown","b9cea917":"markdown","bcccc4be":"markdown","b9379493":"markdown","2bdfe0b3":"markdown","dc600424":"markdown","ad1da286":"markdown","5a065906":"markdown","76335d42":"markdown","d2707291":"markdown","b229a839":"markdown","c8f2aa4a":"markdown","4bdb59bb":"markdown","f51b5711":"markdown","d96ba2ff":"markdown","5b4628e1":"markdown","8313210c":"markdown","58f9f7ef":"markdown"},"source":{"115b6e4e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport os\nimport seaborn as sns\nprint(os.listdir(\"..\/input\"))","a3276a0f":"# loading olympic data\ndata = pd.read_csv('..\/input\/athlete_events.csv')","1d6484ad":"# information about dataset\ndata.info()","3a49ab2c":"data.head(10)","6597288f":"data[\"Medal\"].value_counts(dropna = False)","5d3f34af":"data[\"Sport\"].value_counts(dropna = False)","0898c299":"# filter data for medals. We need data with medals\nfilter = ((data.Medal == 'Gold') | (data.Medal == 'Bronze') | (data.Medal == 'Silver'))\nmedal_data = data[filter]","218d7932":"#Total Medal Counts by Countries\ncountries = list(medal_data['NOC'].unique())\nmedal_counts = []\nfor i in countries:\n    x = medal_data[medal_data['NOC'] == i]\n    medalCount = len(x)\n    medal_counts.append(medalCount)\n\nnewData = pd.DataFrame({'countries': countries,'medal_counts':medal_counts})\nnew_index = (newData['medal_counts'].sort_values(ascending=False)).index.values\nsorted_data = newData.reindex(new_index)\n#sorted_data = sorted_data[sorted_data[\"medal_counts\"] > 100]\n\nplt.figure(figsize = (30,10))\nsns.barplot(x = sorted_data['countries'], y = sorted_data['medal_counts'])\nplt.xticks(rotation = 90)\nplt.xlabel('Countries')\nplt.ylabel('Total Medal Count')\nplt.title('Medal Counts by Countries')\nplt.show()","5aa7cf64":"# copy data for ages\nageData = data\nageData[\"Age\"].dropna(inplace = True)\nageData[\"Age\"].fillna(0 ,inplace = True)","79e9659c":"# check null entries\nageData['Age'].notnull().all()","28cdac03":"# getting sport types\nsportTypes = list(ageData['Sport'].unique())\navarageAges = []\nfor i in sportTypes:\n    x = ageData[ageData['Sport'] == i]\n    x[\"Age\"].dropna(inplace = True)\n    x[\"Age\"].fillna(0 ,inplace = True)\n    avarageAge = sum(x.Age)\/len(x)\n    avarageAges.append(avarageAge)\n\nsportAvarageAgeData = pd.DataFrame({'Sport' : sportTypes, 'AvarageAge' : avarageAges})\nnewSportAvarageAgeDataIndex = (sportAvarageAgeData['AvarageAge'].sort_values(ascending = False)).index.values\nsportAvarageAgeDataSorted = sportAvarageAgeData.reindex(newSportAvarageAgeDataIndex)\n\nplt.figure(figsize = (20,10))\nsns.barplot(x = sportAvarageAgeDataSorted['Sport'], y = sportAvarageAgeDataSorted['AvarageAge'])\nplt.xticks(rotation = 90)\nplt.xlabel('Sport')\nplt.ylabel('AvarageAge')\nplt.title('AvarageAge by Sports')\nplt.show()","d79aa48c":"#Genders by Games\ngames = list(medal_data['Games'].unique())\ngames.sort()\nmales = []\nfemales = []\nfor i in games:\n    m = medal_data[medal_data['Games'] == i]\n    male = len(m[m.Sex == 'M'])\n    males.append(male)\n    female = len(m[m.Sex == 'F'])\n    females.append(female)\n\n# visualization\nf,ax = plt.subplots(figsize = (10,15))\nsns.barplot(x=males,y=games,color='black',alpha = 0.6,label='Male')\nsns.barplot(x=females,y=games,color='yellow',alpha = 0.5,label='Female')\nax.legend(loc='lower right',frameon = True)\nax.set(xlabel='Sex', ylabel='Games',title = \"Genders by Games\")\nplt.show()","fac9eb63":"# point plot\n# Number of male\/female athletes by years - Summer Games\nsummerData = data[data[\"Season\"] == 'Summer']\nyears = list(summerData['Year'].unique())\nfemaleAthletes = []\nmaleAthletes = []\n\nfor i in years:\n    x = summerData[summerData['Year'] == i]\n    femaleCount = len(x[x['Sex'] == 'F'])\n    femaleAthletes.append(femaleCount)\n    maleCount = len(x[x['Sex'] == 'M'])    \n    maleAthletes.append(maleCount)\n    \nathletesByYearsData = pd.DataFrame({'Year' : years, 'Male' : maleAthletes, 'Female' : femaleAthletes})\nathletesByYearsDataIndex = (athletesByYearsData['Year'].sort_values(ascending = False)).index.values\nathletesByYearsDataSorted = athletesByYearsData.reindex(athletesByYearsDataIndex)\n\nf,ax1 = plt.subplots(figsize = (20,10))\nsns.pointplot(x = 'Year', y = 'Male', data = athletesByYearsDataSorted, color = 'blue', alpha = 0.8)\nsns.pointplot(x = 'Year', y = 'Female', data = athletesByYearsDataSorted, color = 'red', alpha = 0.8)\nplt.text(2, 8000, 'Male', color = 'blue',fontsize = 17, style = 'italic')\nplt.text(2, 8500, 'Female', color = 'red',fontsize = 18, style = 'italic')\nplt.xlabel('Years', fontsize = 15, color = 'blue')\nplt.ylabel('Count', fontsize = 15, color = 'blue')\nplt.title('Number of male\/female athletes by years - Summer Games', fontsize = 20, color = 'blue')\nplt.grid()","e5b7deb7":"athletesByYearsDataSorted.head()","3c02cd68":"# joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\nsns.jointplot(athletesByYearsDataSorted.Year, athletesByYearsDataSorted.Female, kind = \"kde\", size = 7)\nplt.savefig('graph.png')\nplt.show()","5e163afc":"# jointplot kind = scatter\nsns.jointplot(athletesByYearsDataSorted.Year, athletesByYearsDataSorted.Female, kind = \"scatter\", size = 8, ratio = 3)\nplt.show()","4e95e29f":"data.Medal.value_counts()","6fdcb5e2":"# pie chart\ndata2012 = data[data['Year'] == 2012]\ndata2012.Medal.value_counts()\nlabels = data2012.Medal.value_counts().index\ncolors = ['red', 'gold', 'silver']\nexplode = [0, 0, 0]\nsizes = data2012.Medal.value_counts().values\n\nplt.figure(figsize = (7, 7))\nplt.pie(sizes, explode = explode, labels = labels, colors = colors , autopct='%1.1f%%')\nplt.title('Medals according to 2012', color = 'blue', fontsize = 15)\nplt.show()","411b405a":"# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x = \"Year\", y = \"Female\", data = athletesByYearsDataSorted)\nplt.show()","69a429e0":"sportAvarageAgeDataSorted.head()","2655e94c":"# kdeplot\nsns.kdeplot(athletesByYearsDataSorted.Year, athletesByYearsDataSorted.Female, shade = True, cut = 3)\nplt.show()","da4ccb96":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\nathletesByYearsDataSorted['Male'] = athletesByYearsDataSorted['Male']\/max(athletesByYearsDataSorted['Male'])\nathletesByYearsDataSorted['Female'] = athletesByYearsDataSorted['Female']\/max(athletesByYearsDataSorted['Female'])\nathletesByYearsDataSortedWithourYear = athletesByYearsDataSorted.drop('Year', 1)\n\npal = sns.cubehelix_palette(2, rot = - .5, dark = .3)\nsns.violinplot(data = athletesByYearsDataSortedWithourYear, palette = pal, inner = \"points\")\nplt.show()","afd94aa7":"# heatmap\ndata.corr()","925ea014":"f,ax = plt.subplots(figsize = (10, 10))\nsns.heatmap(data.corr(), annot = True, linewidths = 0.5, linecolor = \"red\", fmt = '.1f', ax = ax)\nplt.show()\n#Height and Weight have positive correlation","a61d9ffa":"# Plot the orbital period with horizontal boxes\nplt.figure(figsize = (10, 10))\nsns.boxplot(x = \"Sex\", y = \"Year\", hue = \"Medal\", data = data, palette = \"PRGn\")\nplt.show()","a3d9f82a":"# swarm plot\ndata2016 = data[data.Year == 2016]\nplt.figure(figsize = (10, 10))\nsns.swarmplot(x = \"Sex\", y = \"Age\", hue = \"Medal\", data = data2016)\nplt.show()","b7e72dfd":"# pair plot\nsns.pairplot(athletesByYearsDataSorted)\nplt.show()","197f23c7":"# count plot\nsns.countplot(data.Sex)\nplt.title(\"Sex\", color = 'blue', fontsize=15)","596e4d09":"sorted_data.head()","dc2dfedd":"# Top 10 sports\nsports = data.Sport.value_counts()\nplt.figure(figsize = (17, 7))\nsns.barplot(x = sports[:10].index, y = sports[:10].values)\nplt.ylabel('Number of Sport')\nplt.xlabel('Sport Types')\nplt.title('Top Sports', color = 'blue', fontsize=15)","f2314b7c":"above40 = ['above40' if i >= 40 else 'below40' for i in data.Age]\ndf = pd.DataFrame({'age' : above40})\nsns.countplot(x = df.age)\nplt.ylabel('Number of athletes')\nplt.title('Age of athlethes', color = 'blue', fontsize = 15)","a21c67e1":"# select teams with gold medals\ndataBasketballWithMedals = data[(data[\"Sport\"] == \"Basketball\") & (data[\"Medal\"] == \"Gold\")]","3d0f0e6a":"dataBasketballWithMedals.Team.value_counts()","2bdd1306":"plt.figure(figsize = (10, 7))\nsns.countplot(x = dataBasketballWithMedals.Team)\nplt.ylabel('Number of gold medals')\nplt.title('Top Basketball Teams', color = 'blue', fontsize = 15)","33d3acce":"# Top 5 Events\nevents = data[\"Event\"].value_counts()\nplt.figure(figsize = (20, 7))\nsns.barplot(x = events[:5].index, y = events[:5].values)\nplt.ylabel('Number of event')\nplt.xlabel('Events')\nplt.title('Top Events', color = 'blue', fontsize = 15)\nplt.show()","4de485ba":"<a id=\"9\"><\/a> \n **Female athletes density  during years - Kde Plot**","8b5253bc":"<a id=\"20\"><\/a> \n**Top Basketball Teams**","e468686e":"# **Olympic Games Data Exploration**\n\nExamples of Seaborn visualization library usage based on olympic games data. We'll use seaborn library for all graphs. This is a self-training for data science and visualization tools. Thank you in advance for your review and comments.\n\n## Index of contents\n\n* [Loading and checking data](#19)\n* [Total Medal Counts by Countries - Bar Plot](#1)\n* [Avarage Ages According to Sports - Bar Plot](#2)\n* [Genders by Games - Bar Plot Multiple](#3)\n* [Number of male\/female athletes by years  (Summer Games) - Point Plot](#4)\n* [Female athletes density during years - Joint Plot (kind = kde)](#5)\n* [Female athletes density during years - Joint Plot (kind = scatter)](#6)\n* [Medal percentages of 2012 games - Pie Chart](#7)\n* [Female athletes  during years - Lm Plot](#8)\n* [Female athletes density  during years - Kde Plot](#9)\n* [Male - Female athletes distribution  during years - Violin Plot](#10)\n* [Correlation of data - HeatMap](#11)\n* [Distribution of genders by years - Box Plot](#12)\n* [Distribution of ages by genders - Swarm Plot](#13)\n* [Distribution of genders by years - Pair Plot](#14)\n* [Gender counts of whole olympic games - Count Plot](#15)\n* [Top 10 sports of all time - Bar Plot](#16)\n* [Number of athletes who are over 40 years old - Count Plot](#17)\n* [Top Basketball Teams](#20)\n* [Top 5 Events - Bar Plot](#18)","02142485":"<a id=\"11\"><\/a> \n **Correlation of data - HeatMap**","b9cea917":"<a id=\"4\"><\/a> \n**Number of male\/female athletes by years  (Summer Games) - Point Plot**","bcccc4be":"<a id=\"8\"><\/a> \n **Female athletes  during years - Lm Plot**","b9379493":"<a id=\"10\"><\/a> \n **Male - Female athletes distribution  during years - Violin Plot**","2bdfe0b3":"<a id=\"15\"><\/a> \n **Gender counts of whole olympic games - Count Plot**","dc600424":"1. <a id=\"6\"><\/a> \n**Female athletes density during years - Joint Plot (kind = scatter)**","ad1da286":"<a id=\"18\"><\/a> \n **Top 5 Events - Bar Plot**","5a065906":"<a id=\"1\"><\/a> \n**Total Medal Counts by Countries - Bar Plot**","76335d42":"<a id=\"5\"><\/a> \n**Female athletes density during years - Joint Plot (kind = kde)**","d2707291":"<a id=\"2\"><\/a> \n**Avarage Ages According to Sports - Bar Plot**","b229a839":"<a id=\"19\"><\/a> \n**Data Preparation**","c8f2aa4a":"<a id=\"13\"><\/a> \n **Distribution of ages by genders - Swarm Plot**","4bdb59bb":"<a id=\"16\"><\/a> \n **Top 10 sports of all time - Bar Plot**","f51b5711":"<a id=\"3\"><\/a> \n**Genders by Games - Bar Plot Multiple**","d96ba2ff":"<a id=\"7\"><\/a> \n**Medal percentages of 2012 games - Pie Chart**","5b4628e1":"<a id=\"17\"><\/a> \n **Number of athletes who are over 40 years old - Count Plot**","8313210c":"<a id=\"14\"><\/a> \n **Distribution of genders by years - Pair Plot**","58f9f7ef":"<a id=\"12\"><\/a> \n **Distribution of genders by years - Box Plot**"}}