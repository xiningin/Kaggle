{"cell_type":{"561927a4":"code","3e307ab7":"code","fe9f1b00":"code","b724d680":"code","fde2c1ff":"code","4b2c3f43":"code","7f4b3dbe":"code","300f32de":"code","867316b5":"code","f6893c1b":"code","1ac38638":"code","c2a818b7":"code","a561eadb":"code","c9d5adcb":"code","deb6ea8e":"code","f954e7cf":"code","43f931ab":"code","0d2dfe64":"code","12ef9a79":"code","92e0f9fc":"code","b74cd9eb":"code","d1bc2bf1":"code","fe337499":"code","47871200":"code","ee0e2241":"code","b951b342":"code","1429ba42":"code","68a53d70":"code","0c6fb198":"code","6ef35d23":"code","6bd45d5b":"code","2770d9d9":"code","d5ed7935":"markdown","c034ed0d":"markdown","7d54d5ee":"markdown"},"source":{"561927a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e307ab7":"df=pd.read_csv('..\/input\/comparison-of-north-american-ski-resorts\/north_american_ski_resort_data.csv')","fe9f1b00":"df.head()","b724d680":"df1=pd.read_csv('..\/input\/comparison-of-north-american-ski-resorts\/north_american_ski_resort_data.csv',usecols=['Resort','City','State'])","fde2c1ff":"df1.describe()","4b2c3f43":"for i in df1.columns[0:]:\n    print(len(df[i].unique()))","7f4b3dbe":"df1.State.value_counts()","300f32de":"df1.State.value_counts().sort_values(ascending=False).head(10)","867316b5":"df1.State.value_counts().sort_values(ascending=False).head(10).index","f6893c1b":"lst_10=df1.State.value_counts().sort_values(ascending=False).head(10).index\nlst_10=list(lst_10)","1ac38638":"lst_10","c2a818b7":"for categories in lst_10:\n    df1[categories]=np.where(df1['State']==categories,1,0)","a561eadb":"lst_10.append('State')","c9d5adcb":"df1[lst_10]","deb6ea8e":"df.head()","f954e7cf":"df2=df[[\"Peak elevation (ft)\",\"Base elevation (ft)\",\"Vertical drop (ft)\",\"Skiable acreage\",\"Total trails\",\"Avg annual snowfall (in)\",\"Lift ticket (USD)\"]]","43f931ab":"df2.head()","0d2dfe64":"df2[\"Verify\"]=df2[\"Peak elevation (ft)\"]-df2[\"Base elevation (ft)\"]\ndf2","12ef9a79":"df3=df[[\"Resort\",\"City\"]]","92e0f9fc":"df3.head()","b74cd9eb":"for feature in df3.columns[1:]:\n    print(feature,\":\",len(df3[feature].unique()),'labels')","d1bc2bf1":"city_map=df3['City'].value_counts().to_dict()","fe337499":"city_map","47871200":"df3['Citys']=df3['City'].map(city_map)","ee0e2241":"df3.is_copy=False","b951b342":"df3.head()","1429ba42":"df2.head()","68a53d70":"df.head(10)","0c6fb198":"df.groupby([\"State\"])['Avg annual snowfall (in)'].mean().sort_values(ascending=False)","6ef35d23":"ordinal_labels=df.groupby([\"State\"])['Avg annual snowfall (in)'].mean().sort_values(ascending=False).index\nordinal_labels","6bd45d5b":"ordinal_labels2={k:i for i,k in enumerate(ordinal_labels,0)}\nordinal_labels2","2770d9d9":"df['State_mean_avg_snowfall_rank']=df['State'].map(ordinal_labels2)\ndf.head()","d5ed7935":"## Ranking the States by avg annual snowfall","c034ed0d":"## Top 10 Unique labels","7d54d5ee":"## Verifying the Vertical Drop"}}