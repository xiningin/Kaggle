{"cell_type":{"84883faf":"code","fc6aecd1":"code","4b288e7b":"code","0b7ce800":"code","fec6a3fe":"code","fe95fad1":"code","11cb2013":"code","e022caf5":"code","21ce72b6":"code","d740870c":"code","c2922dfb":"code","b7af550b":"code","37406abb":"code","4ac19df1":"markdown","d4501fac":"markdown","25bd3071":"markdown","4b173ee3":"markdown","e427bbce":"markdown","f3d76cd2":"markdown","16521ec4":"markdown","44819ce2":"markdown","5bf51df0":"markdown","525288cc":"markdown","2fcc3ff5":"markdown"},"source":{"84883faf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport seaborn as sns\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","fc6aecd1":"boston = load_boston()\nprint(boston.DESCR)","4b288e7b":"# \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5909\u63db\ndf = pd.DataFrame(boston.data, columns=boston.feature_names)\ndf['PRICE'] = boston.target\n\n# \u5909\u6570\u9593\u306e\u76f8\u95a2\u4fc2\u6570\u3092\u898b\u308b\ncorr = df.corr()\ncorr.style \\\n    .background_gradient(cmap='coolwarm') \\\n    .set_precision(2)","0b7ce800":"index = np.where(np.abs(corr['PRICE'][:-1]) > 0.5)[0]\ncorr['PRICE'][index]","fec6a3fe":"df = df[['RM', 'PTRATIO', 'LSTAT', 'PRICE']]","fe95fad1":"# \u5bfe\u6563\u5e03\u56f3\nsns.pairplot(df.sample(50, replace=False), diag_kind='kde', kind=\"reg\")","11cb2013":"# \u30c7\u30fc\u30bf\u306e\u4f5c\u6210\nX = df.drop('PRICE', axis=1)\ny = df['PRICE']\n\n# \u30c6\u30fc\u30bf\u5206\u5272\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, random_state=2019)","e022caf5":"# ref: https:\/\/qiita.com\/ground0state\/items\/38123b70c152253befe4\n\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n\n# \u8aac\u660e\u5909\u6570\u3068\u76ee\u7684\u5909\u6570\u3092\u4e00\u3064\u306e\u884c\u5217\u306b\u3059\u308b\u5fc5\u8981\u3042\u308a\ndata = pd.concat([X_train, y_train], axis=1)\n\n# \u7dda\u5f62\u4e88\u6e2c\u5b50\u3092\u5b9a\u7fa9\nformula = \"PRICE ~  1 + RM + PTRATIO + LSTAT\"\n\n# \u30ea\u30f3\u30af\u95a2\u6570\u3092\u9078\u629e\nlink = sm.genmod.families.links.log\n\n# \u8aa4\u5dee\u69cb\u9020\u3092\u9078\u629e\nfamily = sm.families.Poisson(link=link)\n\nmodel = smf.glm(formula=formula, data=data, family=family )\nresult = model.fit() \nprint(result.summary())\n\n# AIC \u306e\u8a08\u7b97 (fit() \u6642\u306b\u8a08\u7b97\u6e08\u307f)\nprint('AIC:', result.aic)\n\n# MSE \u306e\u8a08\u7b97\nX_test['Intercept'] = 1\ny_pred = X_test[result.params.index].dot(result.params)\nprint('MSE:', mean_squared_error(y_test, y_pred))","21ce72b6":"result.tvalues","d740870c":"from statsmodels.graphics.api import abline_plot\n\n# estimation\nyhat = result.mu\n\nfig, ax = plt.subplots()\nax.scatter(yhat, y_train)\nline_fit = sm.OLS(y_train, sm.add_constant(yhat, prepend=True)).fit()\nabline_plot(model_results=line_fit, ax=ax, color='red')\nax.set_title('Model Fit Plot')\nax.set_ylabel('Observed values')\nax.set_xlabel('Fitted values');","c2922dfb":"fig, ax = plt.subplots()\nax.scatter(yhat, result.resid_pearson)\nax.hlines(0, 0, 50)\nax.set_xlim(0, 50)\nax.set_title('Residual Dependence Plot')\nax.set_ylabel('Pearson Residuals')\nax.set_xlabel('Fitted values');","b7af550b":"from statsmodels import graphics\ngraphics.gofplots.qqplot(result.resid_deviance, line='r')","37406abb":"formula = \"PRICE ~  1 + RM + PTRATIO + LSTAT\"\nlink = sm.genmod.families.links.identity\nfamily = sm.families.Gaussian(link=link)\n\nmodel = smf.glm(formula=formula, data=data, family=family)\nresult = model.fit() \n\nprint(result.summary())\nprint('AIC:', result.aic)\n\ny_pred = X_test[result.params.index].dot(result.params)\nprint('MSE:', mean_squared_error(y_test, y_pred))","4ac19df1":"### 2.2 \u30e2\u30c7\u30eb\u5176\u306e\u5f10\n\n\u6b21\u306b\u3001\u30ea\u30f3\u30af\u95a2\u6570\u306b\u6052\u7b49\u95a2\u6570\u3001\u8aa4\u5dee\u306e\u6563\u308a\u65b9\u306b\u6b63\u898f\u5206\u5e03\u3092\u4eee\u5b9a\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n(\u3053\u306e\u30e2\u30c7\u30eb\u306f\u3001\u901a\u5e38\u306e\u91cd\u56de\u5e30\u30e2\u30c7\u30eb\u3068\u5168\u304f\u4e00\u7dd2)","d4501fac":"## 2. GLM \u306b\u3088\u308b\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0","25bd3071":"\u30e2\u30c7\u30eb\u3092\u6bd4\u8f03\u3059\u308b\u3068\u6b21\u306e\u8868\u306e\u901a\u308a\u3002\n\n|   | \u30e2\u30c7\u30eb 1 | \u30e2\u30c7\u30eb 2 |\n|:---:|:---:|:---:|\n| link  | `log` | `identity` |\n| model | `Possion` | `Gaussian` |\n| AIC | 2348.26 | 2482.42 |\n| MSE | 405.40 | 29.46 |\n\n<br>\nAIC \u306f\u3001\u5bfe\u6570\u5c24\u5ea6\u306b\u30e2\u30c7\u30eb\u81ea\u7531\u5ea6\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u8ab2\u3057\u305f\u30e2\u30c7\u30eb\u6bd4\u8f03\u306e\u70ba\u306e\u6307\u6a19\u3067\u3001\u3053\u308c\u304c\u5c0f\u3055\u3044\u307b\u3046\u304c\u826f\u3044\u3068\u3055\u308c\u308b\u3002\nAIC \u306b\u5f93\u3048\u3070\u30e2\u30c7\u30eb 1 \u306e\u307b\u3046\u304c\u826f\u3044\u3068\u5224\u65ad\u3055\u308c\u308b\u304c\u3001\u5b9f\u969b\u306f\u3001\u30c6\u30b9\u30c8 \u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b MSE (\u4e8c\u4e57\u8aa4\u5dee\u5e73\u5747) \u3092\u5c0f\u3055\u304f\u3057\u3066\u3044\u308b\u306e\u306f\u30e2\u30c7\u30eb 2 \u306e\u307b\u3046\u3067\u3042\u308b\u3002\n\u3053\u308c\u306f\u3001AIC \u304c\u4eee\u5b9a\u3059\u308b\u300c\u771f\u306e\u5206\u5e03\u3092\u30e2\u30c7\u30eb\u304c\u5341\u5206\u306b\u8868\u73fe\u3067\u304d\u308b\u300d\u3068\u3044\u3046\u6761\u4ef6\u3092\u4e21\u8005\u306e\u30e2\u30c7\u30eb\u304c (\u304a\u305d\u3089\u304f) \u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u767a\u751f\u3059\u308b\u77db\u76fe\u3067\u3042\u308a\u3001\u81ea\u5206\u304c\u30e2\u30c7\u30eb\u9078\u629e\u8005\u3067\u3042\u308c\u3070\u30e2\u30c7\u30eb 2 \u3092\u63a1\u7528\u3059\u308b\u3060\u308d\u3046\u3002","4b173ee3":"# statsmodels \u3092\u5229\u7528\u3057\u305f GLM\n\n\u53c2\u8003\u6587\u732e\n\n- https:\/\/www.statsmodels.org\/dev\/examples\/index.html#generalized-linear-models\n- https:\/\/devdocs.io\/statsmodels\/examples\/notebooks\/generated\/glm","e427bbce":"### 2.1 \u30e2\u30c7\u30eb\u305d\u306e\u58f1\n\n\u624b\u59cb\u3081\u306b\u3001\u30ea\u30f3\u30af\u95a2\u6570\u306b `log` \u3092\u3001\u8aa4\u5dee\u306e\u5206\u5e03\u306b\u30dd\u30a2\u30bd\u30f3\u5206\u5e03 $\\text{Poi}(y|\\mu,\\sigma)$ \u3092\u4eee\u5b9a\u3059\u308b GLM \u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n$$\n\\log(\\mu) = w_0 + w_1 x_{RM} + w_2 x_{PTRATIO} + w_3 x_{LSTAT}\n$$","f3d76cd2":"### \u63a8\u5b9a\u306b\u5bfe\u3059\u308b\u691c\u8a3c\n\nsummary \u4e0a\u90e8\u306b\u306f\u3001\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u306e\u30b5\u30de\u30ea\u304c\u8868\u793a\u3055\u308c\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n- \u30ea\u30f3\u30af\u95a2\u6570\u304c `log` \u3067 `Possion` \u3092\u5206\u5e03\u306b\u6307\u5b9a\u3057\u305f GLM \u3067\u63a8\u5b9a\u3057\u305f\u3002\n- \u63a8\u5b9a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306f\u3001IRLS (\u53cd\u5fa9\u518d\u91cd\u307f\u4ed8\u304d\u6700\u5c0f\u4e8c\u4e57\u6cd5; iterative reweighted leaast squares) \u3092\u7528\u3044\u305f\u3002\n- IRLS \u306f 4 \u56de\u306e\u53cd\u5fa9\u3067\u89e3\u306b\u53ce\u675f\u3057\u305f\u3002\n\nsummary \u4e0b\u90e8\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u63a8\u5b9a\u5024\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n- `coef` \u304c\u6700\u5c24\u63a8\u5b9a\u5024\n- `std err` \u306f\u6a19\u6e96\u8aa4\u5dee\u3067\u3042\u308a\u3001`coef` \u306e\u3070\u3089\u3064\u304d\u3092\u8868\u3057\u3066\u3044\u308b\n- `z` \u306f `coef \/ std err` \u3067\u8a08\u7b97\u3055\u308c\u308b z \u5024\u3067\u3042\u308a\u30010 \u3067\u306a\u3044\u307b\u3069\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u9000\u5316\u3057\u3066\u3044\u306a\u3044 (\u91cd\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b) \u3053\u3068\u3092\u8868\u3059\u3002\n- `P>|z|` \u306f `z` \u3088\u308a\u6975\u7aef\u306a\u5024\u304c\u3067\u308b\u78ba\u7387 (\u6b63\u898f\u5206\u5e03\u306e\u4e21\u5074\u78ba\u7387?)\n- `[0.025 0.975]` \u306f\u63a8\u5b9a\u5024\u306e\u4fe1\u983c\u533a\u9593\n\n`result.tvalues` \u304b\u3089 t \u5024\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002","16521ec4":"https:\/\/datumstudio.jp\/blog\/sas-r-and-python-linear-model \u304b\u3089\u7279\u5fb4\u91cf\u306e\u8aac\u660e\u3092\u5f15\u7528\u3059\u308b\u3002\n\n- `RM`: 1\u6238\u3042\u305f\u308a\u306e\u5e73\u5747\u90e8\u5c4b\u6570\n- `PTRATIO`: \u6559\u5e2b\u3042\u305f\u308a\u306e\u751f\u5f92\u306e\u6570\n- `LSTAT`: \u4f4e\u6240\u5f97\u8005\u306e\u5272\u5408","44819ce2":"\u63a8\u5b9a\u5024\u306b\u5bfe\u3059\u308b\u6b8b\u5dee\u306f `result.resid_pearson` \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002","5bf51df0":"\u30e2\u30c7\u30eb\u306b\u3088\u308b `X_train` \u306b\u5bfe\u3059\u308b\u63a8\u5b9a\u5024\u306f\u3001`result.mu` \u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002\nx \u8ef8\u306b\u63a8\u5b9a\u5024\u3092\u3001y \u8ef8\u306b\u771f\u306e\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u6563\u5e03\u56f3\u3092\u51fa\u3059\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002","525288cc":"## 1. \u30c7\u30fc\u30bf\u3092\u4fef\u77b0\u3059\u308b\n\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\u5229\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3001sklearn \u306b\u4ed8\u968f\u3057\u3066\u3044\u308b\u30dc\u30b9\u30c8\u30f3\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002","2fcc3ff5":"\u76f8\u95a2\u4fc2\u6570\u306e\u9ad8\u3044 (i.e. \u76f8\u95a2\u4fc2\u6570\u306e\u7d76\u5bfe\u5024\u304c 0.5 \u3092\u8d85\u3048\u308b) \u7279\u5fb4\u91cf\u3060\u3051\u3092\u62bd\u51fa\u3059\u308b\u3002"}}