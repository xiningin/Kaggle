{"cell_type":{"22afaf95":"code","57f02b07":"code","87cc29e5":"code","274957c0":"code","ee7db424":"code","b59f7196":"code","f4db60b3":"code","644e33d4":"code","c2185fc1":"code","0ad71596":"code","e19732e0":"code","bad0be77":"code","5751a1a2":"code","bc139a32":"code","15736eb8":"code","e18fb6b0":"code","736f5ee8":"code","9437d8b7":"code","1794c430":"code","c0d3c85f":"code","29638b9b":"code","34043b77":"code","b64effb6":"code","fad140ce":"code","d2a44d36":"code","6d78d9d1":"code","b7fe61b8":"code","fc2de360":"code","b7496232":"code","1792237d":"code","bf442e2a":"code","d8ae49c5":"code","fbf5bece":"code","598840ae":"code","e1f4bcab":"code","4e795c4d":"code","d1a36ae2":"code","c750b652":"code","a088a064":"code","77c75684":"code","e2fdfcbf":"code","3a2efd1b":"code","e9862902":"code","1b026072":"code","6a716eaa":"code","6651781b":"code","8c9c0aa5":"code","545f95c5":"code","2103d02e":"code","d25f4b24":"code","1cf1b31e":"code","ad6e9adf":"code","5287bb5b":"code","49fb3e29":"code","2f0834c3":"code","5a0b0c08":"code","9b3900a0":"code","eb7c8dbd":"code","dd4ae6cc":"code","31e1eb4c":"code","39eec9e8":"code","d30938e7":"code","7b36444d":"code","5e68fbf5":"code","21df13e4":"code","976cf9cc":"markdown","a9c2138f":"markdown","4721ffb7":"markdown","765fd466":"markdown","3f05d9fd":"markdown","15027a2b":"markdown","916c8f9f":"markdown","c513a2a9":"markdown","14747cd8":"markdown","70397adf":"markdown","e5905b0b":"markdown","51edc9d3":"markdown","c5ab0816":"markdown","5c1d6102":"markdown","1e2a0aee":"markdown","c2db2391":"markdown","24cace7f":"markdown","5b6c488a":"markdown","c29abd1d":"markdown","956c3f49":"markdown","c034c7a5":"markdown","4ed2a8ab":"markdown","611574e7":"markdown","61f4ebfc":"markdown","711b4d0a":"markdown","47337bdd":"markdown","d0a3a602":"markdown","88f03980":"markdown","cd449169":"markdown","f28b4e4b":"markdown","7dc624d8":"markdown"},"source":{"22afaf95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n!pip install chart_studio\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = True)\n\nfrom wordcloud import WordCloud\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","57f02b07":"timeage = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeAge.csv\")\nregion = pd.read_csv(\"..\/input\/coronavirusdataset\/Region.csv\")\ntime = pd.read_csv(\"..\/input\/coronavirusdataset\/Time.csv\")\nweather = pd.read_csv(\"..\/input\/coronavirusdataset\/Weather.csv\")\nsearchtrend = pd.read_csv(\"..\/input\/coronavirusdataset\/SearchTrend.csv\")\ntimeprovince = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeProvince.csv\")\ntimegender = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeGender.csv\")\npatientinfo = pd.read_csv(\"..\/input\/coronavirusdataset\/PatientInfo.csv\")\n#patientroute = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/PatientRoute.csv\")\ncase = pd.read_csv(\"..\/input\/coronavirusdataset\/Case.csv\")\n","87cc29e5":"case.head()","274957c0":"searchtrend.head()","ee7db424":"timeage.head()","b59f7196":"time.head()","f4db60b3":"timegender.head()","644e33d4":"patientinfo.head()","c2185fc1":"time.head()","0ad71596":"time.isnull().any()","e19732e0":"time.info()","bad0be77":"#barplot\nplt.subplots(figsize = (20,17))\ndate_list = [i for i in time.date]\nsns.barplot(x=time.test, y=date_list,color ='b',label=\"Number of test\",alpha=0.7)\nsns.barplot(x=time.negative, y=date_list,color ='lime',label = \"Number of negative results\",alpha=0.7)\nsns.barplot(x=time.confirmed, y=date_list,color='red',label = \"Number of confirmed cases\",alpha=1)\nplt.xlabel(\"VALUES\",fontsize = 16)\nplt.legend(prop={'size': 15})\nplt.show()\n","5751a1a2":"time.head()","bc139a32":"confirmednorm = time.confirmed\/max(time.confirmed)\ndeceasednorm = time.deceased\/max(time.deceased)\nreleasednorm = time.released\/max(time.released)  # SIMPLE LINEARIZATION\n\ndata3 = pd.DataFrame({'confirmed': confirmednorm,'deceased' : deceasednorm,'released':releasednorm})\n\n\nf,ax = plt.subplots(figsize = (27,17))\n\nax.plot_date(x=time.date,y= \"deceased\",data=data3,color =\"red\",label=\"Deceased People\",linestyle = '-')\n#ax.plot_date(x=time.date,y= \"confirmed\",data=data3,color =\"mediumorchid\",label=\"Confirmed cases\",linestyle = '-')\nax.plot_date(x=time.date,y= \"released\",data=data3,color =\"dodgerblue\",label=\"Released People\",linestyle = '-')\nplt.xticks(rotation = 90)\nplt.xlabel(\"DATE\")\nplt.ylabel(\"VALUES\")\nplt.title(\"DECEASED AND CONFIRMED BY DATE (NORMALIZED)\")\nplt.xlabel(\"DATES\",fontsize = 16)\nplt.legend(prop={'size': 20})\nplt.grid()\nplt.show()","15736eb8":"timeage.head()","e18fb6b0":"timeage.info()","736f5ee8":"f,ax = plt.subplots(figsize = (14,14))\nax = sns.barplot(x=\"age\",y=\"deceased\",data=timeage,palette=\"Blues_d\")\nplt.xlabel(\"AGE\",fontsize = 20)\nplt.xticks(fontsize = 17)\nplt.show()","9437d8b7":"#The age's in the timeage dataframe has 's' in the and, so we have to remove them to make them float\ntimeage.age = [i.rsplit('s',1)[0] if 's' in i else i for i in timeage.age]\ntimeage.age.value_counts()","1794c430":"patientinfo.head()","c0d3c85f":"patientinfo.state.value_counts()","29638b9b":"patientinfo.info()","34043b77":"#Finding null rows with respect to age column\npatientinfo[patientinfo.age.isnull()]","b64effb6":"#Dropping the null values in the age column\npatientinfo.dropna(subset=['age'],inplace=True)\npatientinfo.age.isnull().any() # False = There are no null entries in the age column","fad140ce":"#The age's in the patientinfo dataframe has 's' in the end, so we have to remove them to make them integer\npatientinfo.age = [i.rsplit('s',1)[0] if 's' in i else i for i in patientinfo.age]","d2a44d36":"patientinfo.age.value_counts()","6d78d9d1":"patientinfo.age = patientinfo.age.astype(int) #making entries integer\nf,ax = plt.subplots(figsize = (23,15))\nax = sns.boxplot(x='sex',y=\"age\",hue=\"state\",data=patientinfo)\nplt.legend(prop={'size' : 20})\nplt.xlabel(\"GENDER\",fontsize = 20)\nplt.ylabel(\"AGE\",fontsize = 20)","b7fe61b8":"f,ax = plt.subplots(figsize = (10,15))\nax = sns.swarmplot(x=\"sex\",y=\"age\",hue=\"state\",data=patientinfo)\nplt.xlabel(\"GENDER\",fontsize = 20)\nplt.ylabel(\"AGE\",fontsize = 20)\nplt.xticks(fontsize = 20)\nplt.yticks(fontsize = 20)\nplt.show()","fc2de360":"timeage.head()","b7496232":"timeage.age = timeage.age.astype(float)\nimport scipy.stats as stats\n\nj = sns.jointplot(x=\"age\",y='deceased',data=timeage,kind=\"kde\",size = 10)\nj.annotate(stats.pearsonr)\nplt.xticks(fontsize = 20)\nplt.yticks(fontsize = 30)\nplt.show()","1792237d":"j = sns.jointplot(x=\"age\",y='deceased',data=timeage,size = 10,color=\"r\")\nplt.xticks(fontsize = 20)\nplt.yticks(fontsize = 30)\nj.annotate(stats.pearsonr)\nplt.show()","bf442e2a":"sns.lmplot(x=\"age\",y='deceased',data=timeage,size = 10)\nplt.xticks(fontsize = 20)\nplt.yticks(fontsize = 20)\nplt.xlabel(\"AGE\",fontsize = 20)\nplt.ylabel(\"DECEASED\",fontsize = 20)\nplt.show()","d8ae49c5":"plt.subplots(figsize = (14,10))\nsns.kdeplot(timeage.age,timeage.deceased,shade = True)\nplt.xticks(fontsize = 20)\nplt.yticks(fontsize = 20)\nplt.xlabel(\"AGE\",fontsize = 20)\nplt.ylabel(\"DECEASED\",fontsize = 20)","fbf5bece":"time.head()","598840ae":"#data4 = pd.concat([(time.released\/max(time.released)),(time.deceased\/max(time.deceased))],axis=1)\nconfirmed_ratio = (time.confirmed\/time.test)\nnegative_ratio = (time.negative\/time.test)\ndata4 = pd.DataFrame({'Confirmed_Ratio': confirmed_ratio, 'Negative_Ratio':negative_ratio})\n#data4 = pd.concat([confirmed_ratio, negative_ratio],axis=1)\ndata4.head()","e1f4bcab":"plt.subplots(figsize = (15,15))\nmypalet = sns.color_palette(\"Set1\", n_colors=2, desat=0.7)\nsns.violinplot(data = data4, inner='point',palette = mypalet,linewidth=0.7)\nplt.title(\"Confirmed and Negative Ratio to ALL TESTS\")\nplt.xticks(fontsize = 15)\nplt.yticks(fontsize = 15)\n\nplt.show()","4e795c4d":"data5 = pd.concat([time.deceased, time.confirmed],axis=1)\ndata5.head()","d1a36ae2":"f,ax = plt.subplots(figsize = (7,7))\nax = sns.heatmap(data5.corr(),annot = True,lw= 0.6, fmt='0.2f')","c750b652":"sns.pairplot(data5,size=3)\nplt.show()","a088a064":"timegender.head()","77c75684":"timegender.sex.dropna(inplace = True)\nlabels = [\"Confirmed\",\"Deceased\"] #or easily kill.race.value_counts().index\ncolors =  ['dodgerblue','gold']\nexplode = (0,0.8)\nsizes = [np.mean(timegender.confirmed),np.mean(timegender.deceased)]\n\nplt.figure(figsize = (10,10))\nplt.pie(sizes, explode=explode,  labels=labels, colors=colors, autopct='%1.1f%%',shadow = True,startangle=18,wedgeprops={\"edgecolor\":\"k\",'linewidth': 1.5, 'antialiased': True},pctdistance = 0.7,textprops={'fontsize': 16})\nplt.title('Deceased and Confirmed Ratio With Respect to All Tests',color = 'darkred',fontsize = 17)\nplt.legend(prop={'size': 17})\nplt.show()\n","e2fdfcbf":"time.head()","3a2efd1b":"time15 = time.iloc[15:]\n\n#Create Figure\nfig = go.Figure()\n\n#Add Traces\nfig.add_trace(go.Scatter(x=time15.date, y=time15.released, name='Negative', text=time15.released))\nfig.add_trace(go.Scatter(x=time15.date, y=time15.deceased, name='Deceased', text=time15.deceased))\n\n#Update Layout\nfig.update_layout(title='Released and Deceased Logarithmic',font_size=14, yaxis_type=\"log\")\n\nfig.show()","e9862902":"searchtrend.tail()","1b026072":"#Create Figures\nfig = go.Figure()\n\n#Add Traces\nfig.add_trace(go.Scatter(x=searchtrend.date, y=searchtrend.cold, mode='markers',text=searchtrend.cold, name=\"Cold\"))\nfig.add_trace(go.Scatter(x=searchtrend.date, y=searchtrend.flu, mode='markers',text=searchtrend.flu, name=\"Flue\"))\nfig.add_trace(go.Scatter(x=searchtrend.date, y=searchtrend.pneumonia, mode='markers',text=searchtrend.pneumonia, name=\"Pneumonia\"))\nfig.add_trace(go.Scatter(x=searchtrend.date, y=searchtrend.coronavirus, mode='markers', text=searchtrend.coronavirus, name=\"Coronovirus\"))\n\n#Update Layout\nfig.update_layout(title='Search Trends',font_size=13,font_color='black', yaxis_type=\"log\")\n\n#Update Traces\nfig.update_traces(marker_size = 3.5,opacity=0.8)\n\nfig.show()","6a716eaa":"timegender.head()","6651781b":"a = timegender.groupby('sex')['confirmed','deceased'].sum()\na","8c9c0aa5":"gender = ['Female', 'Male']\n\nfig = go.Figure(data = [     go.Bar(x=a.index,y=a.confirmed,name=\"Confirmed\")    ,      go.Bar(x=a.index, y=a.deceased,name=\"Deceased\")]    )\n\nfig.update_layout(barmode='group', yaxis_type=\"log\")\n\nfig.update_traces(marker_line_width=1,marker_line_color='black')\n\nfig.show()\n","545f95c5":"timeage.age = timeage.age.astype(int)\ntimeage.head()","2103d02e":"death_by_age = timeage.groupby('age')['deceased'].sum()\ndeath_by_age","d25f4b24":"#Create labels\nlabels = [str(each) +'s Years Old' for each in death_by_age.index]\n\n#Create Figure\nfig = go.Figure()\n\n#Add traces\nfig.add_trace(go.Pie(values= death_by_age, labels = labels, name=\"Deaths by Age\",hoverinfo='label+percent+name'))\n\n#Customize layout\nfig.update_layout(title='Death Ratio by Age',font_size=15)\n\nfig.show()\n              \n","1cf1b31e":"time.head()","ad6e9adf":"\n\nfig= go.Figure()\n\nfig.add_trace(go.Scatter(x=time.date, y=time.test, mode='markers', marker={'color' : time.confirmed, 'size':time.deceased, 'showscale':True,'colorbar':{'title':\"Confirmed\"} }, text='Size\u2191 \u2192 Deceased\u2191',textposition='bottom center' ) )\n\n\nfig.update_layout(title='Coronovirus',font_size=14,font_color='black',xaxis_title='Time',yaxis_title='Number of Tests')\n\nfig.show()","5287bb5b":"patientinfo.head()","49fb3e29":"#Create Figure\nfig = go.Figure()\n\n#Add Trace\nfig.add_trace(go.Histogram(x=patientinfo.infection_case,opacity=0.8))\n\n#Update Layout\nfig.update_layout(title=\"Which kind of transmission infected how many people ?\",font_size=14,xaxis_title=\"How?\",yaxis_title=\"Value\")\n\nfig.show()","2f0834c3":"patientinfo2 = patientinfo.dropna(subset=[\"infection_case\"])\npatientinfo2[patientinfo2.infection_case.isnull()]\n\nplt.subplots(figsize=(10,10))\n\nwordcloud = WordCloud(background_color='white', width=512, height=384).generate(\" \".join(patientinfo2.infection_case))\n\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","5a0b0c08":"#Dropping the null values in the age column\npatientinfo.dropna(subset=['age'],inplace=True)\npatientinfo.age.isnull().any() # False = There are no null entries in the age column","9b3900a0":"patientinfo.head()","eb7c8dbd":"\nfig = go.Figure()\n\n\nfig.add_trace(go.Box(x=patientinfo.state,y=patientinfo.age, name=\"Deceased By Age\"))\n\nfig.update_layout(title=\"Status by Age\",boxmode='group')\n\n\nfig.show()","dd4ae6cc":"time.head()","31e1eb4c":"import plotly.figure_factory as ff\n\nmydata = time.loc[:,[\"test\",'negative','confirmed']]\nmydata[\"index\"] = np.arange(1,len(mydata)+1)\n\nfig = ff.create_scatterplotmatrix(mydata, index='index', diag='box',colormap='Blues',colormap_type='cat',height=700, width=700)\n\niplot(fig)","39eec9e8":"time.head()","d30938e7":"fig = go.Figure()\n\n\nfig.add_trace(go.Scatter3d(x=time.date, y=time.test, z=time.confirmed, mode='markers', marker_size = 6, marker_color=time.deceased, marker_colorscale = \"Sunsetdark\"))\n\nfig.update_layout(scene=dict(xaxis_title='x:Date', yaxis_title=\"y:Number of Tests\", zaxis_title=\"z:Number of Confirmed Cases\"),font_size=8.5)\n\nfig.show()","7b36444d":"from plotly.subplots import make_subplots\n\nfig = make_subplots(rows=2 , cols = 2)\n\nfig.add_trace(go.Scatter(x=time.date, y=time.test, mode='lines', name=\"Tests\"),row=1,col=1)\nfig.add_trace(go.Scatter(x=time.date, y=time.confirmed, mode='markers', name=\"Confirmed\"),row=1,col=2)\nfig.add_trace(go.Scatter(x=time.date, y=time.negative, mode='lines', name=\"Negative\"),row=2,col=1)\nfig.add_trace(go.Scatter(x=time.date, y=time.deceased, mode='markers', name=\"Deceased\"),row=2,col=2)\n\n\n\nfig.show()\n\n\n","5e68fbf5":"case.head()","21df13e4":"\nfig = go.Figure(data=go.Scattergeo(\n    lon =case.longitude,\n    lat = case.latitude,\n    text = case.city,\n    mode = 'markers',\n    marker= dict(\n        size=8,\n        line = dict(width=1,color = \"white\"),\n        opacity=.8,\n        color = 'red'\n    )\n))\n\nfig.update_layout(title=\"Patients Locations\",hovermode='closest')               \nfig.show()","976cf9cc":"<a id = '24'><\/a><br>\n# Confirmed vs Deceased by Gender in Logarithmic Scale","a9c2138f":"<a id = '20'><\/a><br>\n# SEABORN","4721ffb7":"<a id = '4'><\/a><br>\n## Deceased People by Age","765fd466":"# ----------------------------------------------","3f05d9fd":"# ----------------------------------------------","15027a2b":"<a id = '26'><\/a><br>\n# Coronavirus Tests, Confirmed Cases and Deceased People on Bubble Chart","916c8f9f":"## ----------","c513a2a9":"# Content's Shortcut\n\n<font color = 'blue'>\nContent:\n# [SEABORN](#20)\n1. [Load and Check Data](#1)\n2. [NUMBER OF TESTS,NEGATIVES AND CONFIRMED WITH BAR PLOT](#2)\n3. [How Deceased and Released People Increase By Day](#3)\n4. [Deceased People by Age](#4)\n5. [People's Status by Their Age and Gender](#5)\n6. [Deceased People and Age Distribution](#6)\n7. [Negative and Positive Result's Ratio in the All Tests and Their Frequency by Violin Plotting](#7)\n8. [Deceased and Confirmed Ratio in All Tests Visualized by Pie Chart](#8)\n\n# [PLOTLY](#21)\n\n9. [Released and Deceased People in Logarithmic Scale](#22)\n10. [Search Trends](#23)\n11. [Confirmed vs Deceased by Gender in Logarithmic Scale](#24)\n12. [Death Ratio by Age](#25)\n13. [Coronavirus Tests, Confirmed Cases and Deceased People on Bubble Chart](#26)\n14. [Which kind of transmission infected how many people ?](#27)\n15. [People's Status by Age](#28)\n16. [Corralations Between Date, Tests, Negative Results, Confirmed Cases and Deceased People](#29)\n17. [Patient's Locations](#30)","14747cd8":"Again the both graphs shows that elder people are more likely to die.","70397adf":"## -----------","e5905b0b":"<a id = '6'><\/a><br>\n## Deceased People and Age Distribution","51edc9d3":"## BAR PLOTS","c5ab0816":"> <a id = '7'><\/a><br>\n## Negative and Positive Result's Ratio in the All Tests and Their Frequency by Violin Plotting","5c1d6102":"<a id = '22'><\/a><br>\n## Released and Deceased People in Logarithmic Scale ","1e2a0aee":"<a id = '1'><\/a><br>\n## Load and Check Data","c2db2391":"<a id = '28'><\/a><br>\n# People's Status by Age","24cace7f":"<a id = '29'><\/a><br>\n# Corralations Between Date, Tests, Negative Results, Confirmed Cases and Deceased People","5b6c488a":"## -------------","c29abd1d":"<a id = '2'><\/a><br>\n## NUMBER OF TESTS,NEGATIVES AND CONFIRMED WITH BAR PLOT","956c3f49":"### Detection of null's","c034c7a5":"<a id = '30'><\/a><br>\n# Patient's Locations","4ed2a8ab":"<a id = '5'><\/a><br>\n## People's Status by Their Age and Gender","611574e7":"Dead people because of coronovirus are more likely to be old. Like over 50,60s.","61f4ebfc":"It's shown that older people have more likely to gone.","711b4d0a":"<a id = '8'><\/a><br>\n## Deceased and Confirmed Ratio in All Tests Visualized by Pie Chart","47337bdd":"<a id = '25'><\/a><br>\n# Death Ratio by Age","d0a3a602":"## -----------","88f03980":"<a id = '3'><\/a><br>\n## How Deceased and Released People Increase By Day","cd449169":"<a id = '27'><\/a><br>\n# Which kind of transmission infected how many people ?","f28b4e4b":"<a id = '21'><\/a><br>\n# PLOTLY","7dc624d8":"<a id = '23'><\/a><br>\n# Search Trends"}}