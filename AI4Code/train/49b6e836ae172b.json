{"cell_type":{"b526ad4f":"code","2496e9f7":"code","e107e92c":"code","29ac9c3d":"code","bb1bdb79":"code","fc4033e4":"code","70b03559":"code","47a15833":"code","5cce4cf1":"markdown","0c824d3c":"markdown","98ca7f93":"markdown","aeb188ba":"markdown","1a3cfad5":"markdown","0d2c6532":"markdown","6d24d363":"markdown","d26098e6":"markdown","ceafe27e":"markdown","96f695c3":"markdown"},"source":{"b526ad4f":"from math import sqrt\n\n# calculate the Euclidean distance between two vectors\ndef euclidean_distance(x, y):\n    dist = 0.0\n    for i in range(len(x)):\n        dist += (x[i] - y[i])**2\n    return sqrt(dist)\n\neuclidean_distance([1,2,3],[4,5,6])","2496e9f7":"# calculate the Euclidean distance between two vectors\ndef manhattan_distance(x, y):\n    dist = 0.0\n    for i in range(len(x)):\n        dist += abs(x[i] - y[i])\n    return dist\n\nmanhattan_distance([1,2,3],[4,5,6])","e107e92c":"def minkowski_distance(x, y, p=1):\n    dist = 0.0\n    for i in range(len(x)):\n        dist += abs((x[i] - y[i])**p)\n    return dist** (1\/p)","29ac9c3d":"# When p=1 it is Manhattan distance\n\nminkowski_distance([1,2,3],[4,5,6])","bb1bdb79":"# When p=2 it is Euclidean distance\n\nminkowski_distance([1,2,3],[4,5,6], p=2)","fc4033e4":"# for p=3\n\nminkowski_distance([1,2,3],[4,5,6], p=3)","70b03559":"def hamming_distance(array_1, array_2):\n    \n    if len(array_1) != len(array_2):\n        message = 'Both the arrays should have equal lengths'\n        return message\n    else:\n        common_character_count = 0\n        for i in range(len(array_1)):\n            if array_1[i] != array_2[i]:\n                common_character_count += 1\n            else:\n                continue\n        return common_character_count\n    \nhamming_distance('shweta', 'sharma')","47a15833":"hamming_distance([1,0,0], [1,1,1])","5cce4cf1":"### CODE SNIPPET","0c824d3c":"### CODE SNIPPET","98ca7f93":"******************************************************\n## MINKOWSKI DISTANCE\n\nMinkowski Distance is the generalized form of Euclidean and Manhattan Distance. \n\nIts formula is\n\n![image.png](attachment:image.png)","aeb188ba":"## EUCLIDEAN DISTANCE\n\nThis is the most widely used distance metric which represents the shortest distance between two points. \n\nIts formula is\n\n![image.png](attachment:image.png)\n\nwhere n is the number of dimensions and p(i) and q(i) are the values in ith dimension","1a3cfad5":"## INTRODUCTION\nMost of the machine learning algorithms uses some kind of distance metric in order to find similarity between two vectors or say datapoints. **K Nearest Neighbour** (supervised) and **K-means clustering** (unsupervised) both uses distance metrics to assign a class to a new data.\n\n*********************************************************************************\n\n### 4 TYPES OF DISTANCE METRICS \n\nThere are basically 4 metrics that are widely used in Machine Learning\n\n* EUCLIDEAN \n* MANHATTAN \n* MINKOWSKI \n* HAMMING ","0d2c6532":"### CODE SNIPPET","6d24d363":"**************************************\n\n## HAMMING DISTANCE\n\nHamming distance measures the similarity between two strings or arrays of same length. The hamming distance between two strings is equal to the number of characters where they differ.\n\nFor Example,\n\nWe have two strings 'SHWETA' and 'SHARMA'. \n\nThey differ in exactly three positions \n\n>  SH **WET** A   ----- SH **ARM** A \n\nSo there hamming distance is 3","d26098e6":"********************************************************\n\n## MANHATTAN DISTANCE\n\n\nIt is the sum of absolute differences between points across all the dimensions. \n\nIts formula is\n\n![image.png](attachment:image.png)\n\nwhere n is the number of dimensions and p(i) and q(i) are the values in ith dimension","ceafe27e":"## CONCLUSION\n\n******************************************\n\n> Euclidean , manhattan and minkowski are used for numerical variables\n\n> Hamming distance is used for categorical variables","96f695c3":"### CODE SNIPPET"}}