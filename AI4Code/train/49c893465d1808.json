{"cell_type":{"1d7b02ff":"code","23b4e25c":"code","e2610ce3":"code","19e522e4":"code","84172a75":"code","67e974bc":"code","4befa397":"code","50024d3f":"code","df6d8362":"code","14e9e9bc":"code","0d2ba177":"code","f74c122f":"code","e50f63ff":"code","eacf790c":"code","09390973":"code","fe822403":"code","b3b4c6eb":"code","2e204695":"markdown"},"source":{"1d7b02ff":"!pip install umap-learn","23b4e25c":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler","e2610ce3":"#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))","19e522e4":"df_test = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard.csv')\n","84172a75":"df_test.head(2)","67e974bc":"df = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard\/test_hard\/0000.csv')","4befa397":"df.tail(2)","50024d3f":"scaler = MinMaxScaler()\ndf.iloc[:] = scaler.fit_transform(df)","df6d8362":"df.tail(2)","14e9e9bc":"DataFrame(df.mean()).T","0d2ba177":"def add_mean_as_feature(df):\n    df_temp = DataFrame()\n    for path in df.file_path:\n        df_sensor = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard\/'+path)\n        df_sensor = DataFrame(df_sensor.mean()).T\n        df_temp = pd.concat([df_temp, df_sensor])\n    df_temp.columns = [col+'_mean' for col in df_temp.columns]\n    df_temp.index = df.index\n    df = pd.concat([df, df_temp], axis=1)\n    return df","f74c122f":"df_test = add_mean_as_feature(df_test)","e50f63ff":"X_test = df_test\nX_test.drop(['file_path'],axis=1,inplace=True)","eacf790c":"X_test.tail(2)","09390973":"from sklearn.preprocessing import StandardScaler\nimport umap","fe822403":"reducer = umap.UMAP(random_state=71)\n\ny_test = reducer.fit_transform(X_test)\n","b3b4c6eb":"plt.scatter(y_test[:, 0], y_test[:, 1])","2e204695":"Hard mode \u306e Test data \u306b\u3064\u3044\u3066\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u7279\u5fb4\u91cf\u306f\u3001\u5e73\u5747\u5024(mean) \u3060\u3051\u3067\u3059\u3002\n\u4eca\u56de\u3001\u53ef\u8996\u5316\u30c4\u30fc\u30eb\u306b\u306f\u3001UMAP \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u8fd1\u3044\u3082\u306e\u304c\u3088\u308a\u8fd1\u304f\u306b\u96c6\u307e\u3063\u305f\u3088\u3046\u306b\u898b\u3046\u3051\u3089\u308c\u307e\u3059\u3002\uff16\u3064\u307e\u3067\u306f\u3001\u72ec\u7acb\u3057\u305f\u96c6\u307e\u308a\u3068\u3057\u3066\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u5927\u304d\u3055\u304b\u3089\u63a8\u5bdf\u3059\u308b\u3068\u3001\u53f3\u4e0b\u304c\uff12\u3064\u5206\u306e\u96c6\u307e\u308a\u306e\u69d8\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u73fe\u6642\u70b9\u3067\u306f\u8a73\u7d30\u306f\u4e0d\u660e\u3067\u3059\u3002"}}