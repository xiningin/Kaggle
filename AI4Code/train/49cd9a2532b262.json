{"cell_type":{"126be72b":"code","0bea4615":"code","f149db34":"code","a4168e53":"code","b7f91043":"code","775522c0":"code","71b929c7":"code","605bbca2":"code","c90724d9":"code","ff3d49f0":"code","65c6877f":"code","ec9a2eb1":"code","240b01c5":"code","f6304b47":"code","0d5cb8dc":"code","3bdd22f7":"code","97b83982":"code","de86d63c":"code","8775de1c":"code","896c6b56":"code","11811c58":"code","1b94d175":"code","bab41f8b":"code","973b60ae":"code","d37ea647":"code","37afa471":"code","18812783":"code","2eaa8b1f":"code","13d4dec2":"code","55ab3a6a":"code","e7b57b28":"code","61293ca3":"code","6c764633":"code","c50c0f7e":"code","3d029384":"code","47b9b627":"code","0192a4a7":"code","a5456e30":"markdown","13bfe48e":"markdown","ead4dd10":"markdown","571ac69f":"markdown","92c15725":"markdown","661944f2":"markdown","2274a616":"markdown","47cd3f1d":"markdown","9644043a":"markdown","ec830d2f":"markdown","b92fba1e":"markdown","580ad70e":"markdown","940ac24f":"markdown","44993fb1":"markdown","53c6a2b9":"markdown","65791ae6":"markdown","e498a75b":"markdown","5e552e72":"markdown","f75098e2":"markdown","7046e1fa":"markdown","ebd07e7b":"markdown","5c769c43":"markdown","7c6c43cc":"markdown","50b68aa6":"markdown","b2df29f9":"markdown","2f607e2e":"markdown","8dd82342":"markdown","de54d0fb":"markdown","f492f947":"markdown","3687e231":"markdown","6ffbeea3":"markdown","f837f45c":"markdown","ef8c6e1c":"markdown","37bc8e9f":"markdown","bcd2bc4b":"markdown","a47d7690":"markdown","8f6c8cee":"markdown","6277d656":"markdown","92c6aeb2":"markdown","3e6cd95c":"markdown","ff27cbe2":"markdown","bd0ec17c":"markdown","86d59fa1":"markdown","cdaccfe2":"markdown","d2172736":"markdown","833ee1b8":"markdown","b35517ee":"markdown","8a23ac6a":"markdown","bb6038d8":"markdown","7825011a":"markdown","d9c19b28":"markdown","f06b997e":"markdown","3ecd7e71":"markdown","1f44213f":"markdown","e3597f9c":"markdown","930f4859":"markdown","f924ce3a":"markdown","95c03831":"markdown","8b819490":"markdown","2dd79414":"markdown","0e93016c":"markdown","fc041784":"markdown","c97679ca":"markdown","b9383320":"markdown","23e331f2":"markdown","32a2c7e9":"markdown","e4f78aeb":"markdown","6829df9a":"markdown","f5c36c60":"markdown"},"source":{"126be72b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.tools as tls\nfrom plotly.offline import init_notebook_mode\nimport plotly.graph_objs as go\nimport palettable\ninit_notebook_mode(connected=True)  \nplt.style.use('ggplot')\nfrom geopy.geocoders import Nominatim\nimport plotly_express as px\nimport folium\nfrom folium.plugins import FastMarkerCluster\nfrom folium.plugins import HeatMap\nimport geopandas as gpd\nimport plotly.figure_factory as ff\nfrom nltk import word_tokenize\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nfrom gensim.models import word2vec\nimport nltk\nfrom collections import Counter\nfrom wordcloud import WordCloud\nfrom PIL import Image\nimport urllib.request\nimport random\nfrom palettable.colorbrewer.sequential import Greens_9, Greys_9, Oranges_9, PuRd_9\n","0bea4615":"df = pd.read_csv(\"..\/input\/nyc-jobs.csv\")","f149db34":"df.head()\n","a4168e53":"df.info()","b7f91043":"def pie_plot(labels, values, colors, title):\n    fig = {\n      \"data\": [\n        {\n          \"values\": values,\n          \"labels\": labels,\n          \"domain\": {\"x\": [0, .48]},\n          \"name\": \"Job Type\",\n          \"sort\": False,\n          \"marker\": {'colors': colors},\n          \"textinfo\":\"percent+label\",\n          \"textfont\": {'color': '#FFFFFF', 'size': 10},\n          \"hole\": .6,\n          \"type\": \"pie\"\n        } ],\n        \"layout\": {\n            \"title\":title,\n            \"annotations\": [\n                {\n                    \"font\": {\n                        \"size\": 25,\n\n                    },\n                    \"showarrow\": False,\n                    \"text\": \"\"\n\n                }\n            ]\n        }\n    }\n    return fig\n","775522c0":"df['Full-Time\/Part-Time indicator'].fillna(\"Unknown\", inplace=True)\nvalue_counts = df['Full-Time\/Part-Time indicator'].value_counts()\nlabels = value_counts.index.tolist()\npy.iplot(pie_plot(labels, value_counts, ['#1B9E77', '#D95F02', '#7570B3'], \"Job Types\"))","71b929c7":"df['Salary Frequency'].fillna(\"Unknown\", inplace=True)\nvalue_counts = df['Salary Frequency'].value_counts()\nlabels = value_counts.index.tolist()\npy.iplot(pie_plot(labels, value_counts, ['#7F3C8D', '#11A579', '#3969AC'], \"Salary Options\"))\n\n\n\n\n\n","605bbca2":"value_counts = df['Posting Type'].value_counts()\nlabels = value_counts.index.tolist()\npy.iplot(pie_plot(labels, value_counts, ['#3969AC', '#E73F74'], \"Posting Type\"))\n\n\n\n\n\n","c90724d9":"\nhigh_sal_range = (df.groupby('Civil Service Title')['Salary Range To'].mean().nlargest(10)).reset_index()\n\nfig = px.bar(high_sal_range, y=\"Civil Service Title\", x=\"Salary Range To\", orientation='h', title = \"Highest High Salary Range\",color=  \"Salary Range To\", color_continuous_scale= px.colors.qualitative.G10).update_yaxes(categoryorder=\"total ascending\")\nfig.show()\n","ff3d49f0":"high_sal_range = (df.groupby('Civil Service Title')['Salary Range From'].mean().nlargest(10)).reset_index()\n\nfig = px.bar(high_sal_range, y=\"Civil Service Title\", x=\"Salary Range From\", orientation='h', title = \"Highest (Low) Salary Ranges\",color=  \"Salary Range From\", color_continuous_scale= px.colors.qualitative.T10).update_yaxes(categoryorder=\"total ascending\")\n\nfig.show()\n","65c6877f":"max_positions = (df.groupby('Civil Service Title')['# Of Positions'].mean().nlargest(10)).reset_index()\n\nfig = px.bar(max_positions, y=\"Civil Service Title\", x=\"# Of Positions\", orientation='h', title = \"Max Number of Positions\",color=  \"# Of Positions\", color_continuous_scale= px.colors.qualitative.Prism).update_yaxes(categoryorder=\"total ascending\")\n\nfig.show()\n","ec9a2eb1":"top_work_unitdf = df['Division\/Work Unit'].value_counts().rename_axis('Work Unit').reset_index(name='counts')[:10]\n\nfig = px.bar(top_work_unitdf, y=\"Work Unit\", x='counts', orientation='h', title = \"Popular Work Units\",color=  \"counts\", color_continuous_scale=px.colors.qualitative.D3).update_yaxes(categoryorder=\"total ascending\")\n\nfig.show()\n","240b01c5":"hourly = df[df['Salary Frequency']=='Hourly'][['Salary Range To']]\nfig = ff.create_distplot([hourly['Salary Range To']], ['Salary Range To'], bin_size = 10)\nfig.show()","f6304b47":"job_categorydf = df['Job Category'].value_counts(sort=True, ascending=False)[:10].rename_axis('Job Category').reset_index(name='Counts')\njob_categorydf = job_categorydf.sort_values('Counts')","0d5cb8dc":"trace = go.Scatter(y = job_categorydf['Job Category'],x = job_categorydf['Counts'],mode='markers',\n                   marker=dict(size= job_categorydf['Counts'].values\/2,\n                               color = job_categorydf['Counts'].values,\n                               colorscale='Viridis',\n                               showscale=True,\n                               colorbar = dict(title = 'Opening Counts')),\n                   text = job_categorydf['Counts'].values)\n\ndata = [(trace)]\n\nlayout= go.Layout(autosize= False, width = 1000, height = 750,\n                  title= 'Top 10 Job Openings Count',\n                  hovermode= 'closest',\n                  xaxis=dict(showgrid=False,zeroline=False,\n                             showline=False),\n                  yaxis=dict(title= 'Job Openings Count',ticklen= 2,\n                             gridwidth= 5,showgrid=False,\n                             zeroline=True,showline=False),\n                  showlegend= False)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","3bdd22f7":"dict_loc = {'253 Broadway New York Ny': (40.7134096, -74.0075231),\n '42 Broadway, N.Y.': (40.705974, -74.01261459999999),\n '1 Murray Hulbert Ave, Staten I': (40.63786959999999, -74.0736872),\n '1 Centre St., N.Y.': (40.7134096, -74.0075231),\n '15 Metrotech': (40.705974, -74.01261459999999),\n '31-00 47 Ave, 3 FL, LIC NY': (40.63786959999999, -74.0736872),\n '350 Jay St, Brooklyn  Ny': (40.7128306, -74.00371489999999),\n 'Lead Hazard - Office of Dir': (40.694028, -73.9839499),\n 'Design-Architecture': (40.74209, -73.93551579999999),\n '105 St & 5 Ave': (40.6935265, -73.9876482),\n '20 Nyc Highway 30A Downsville,': (40.7134096, -74.0075231),\n 'CP Sustainability Programs': (40.705974, -74.01261459999999),\n 'Marlboro': (40.63786959999999, -74.0736872),\n '420 East 26Th St Ny Ny': (40.7128306, -74.00371489999999),\n 'R E DEV FOR New Construction': (40.694028, -73.9839499),\n '198 E 161st Street': (40.74209, -73.93551579999999),\n 'Law Dept-Civil Litigation': (40.6935265, -73.9876482),\n '600 W 168Th St., N.Y.': (40.7134096, -74.0075231),\n 'Resident Engagement': (40.705974, -74.01261459999999),\n '1270 Victory Blvd, Staten Isl': (40.63786959999999, -74.0736872),\n 'Operations-EVP': (40.7128306, -74.00371489999999),\n '335 Adams Street, Brooklyn Ny': (40.694028, -73.9839499),\n '100 Gold Street': (40.74209, -73.93551579999999),\n 'OCSE Central Court Svcs': (40.6935265, -73.9876482),\n '88-20 Pitkin Ave., Ozone Park': (40.7134096, -74.0075231),\n 'Prevention & Intervention-DIR': (40.705974, -74.01261459999999),\n 'Brooklyn Storage Management': (40.63786959999999, -74.0736872),\n 'LHD-Budget, Personnel & Stats': (40.7128306, -74.00371489999999),\n '1 Metro Tech, Brooklyn Ny': (40.694028, -73.9839499),\n '130 Stuyvesant Place, S.I.': (40.74209, -73.93551579999999),\n 'LHD-OFFICE OF THE EVP': (40.6935265, -73.9876482),\n '42-09 28th Street': (40.7128, -74.0060),\n 'Design-Engineering': (43.0625186, -88.40262659999999),\n '1826 Arthur Ave., Bronx': (40.7936207, -73.9516092),\n 'Office of the Vice-President': (42.0564209, -75.0115939),\n '470 Vanderbilt Ave': (40.7128, -74.0060),\n '22 Reade St, Ny': (40.3380949, -74.26872910000002),\n 'DMP-Contract & Analysis Unit': (40.7383829, -73.9761524),\n '1932 Arthur Ave, Bronx': (39.77327469999999, -86.1398544),\n 'East 91St St & East River, N Y': (40.82585600000001, -73.921089),\n '75 Park Place New York Ny': (40.7128, -74.0060),\n 'Red Hook East': (40.8410669, -73.940253),\n 'Real Estate Development-SVP': (40.7128, -74.0060),\n '40 Rector Street New York Ny': (40.6150542, -74.10562469999999),\n 'Randalls Island 5-Boro Shops': (40.7128, -74.0060),\n '160 West 100Th Street Ny': (40.6934634, -73.9882453),\n '10 Richmond Terrace, S.I. N.Y.': (40.7103379, -74.0033029),\n 'Hazen St-Trans. Div., E. Elm,': (40.7128, -74.0060),\n '215 W. 125Th St., N.Y.': (40.6737517, -73.8480622),\n 'Hughes Apartments': (40.7128, -74.0060),\n '18-39 42Nd St, Long Island Cit': (40.6809543, -73.9650276),\n '1 Fordham Plaza, Bronx': (40.7128, -74.0060),\n '33 Beaver St, New York Ny': (40.6931259, -73.9866365),\n '12 W 14Th St., N.Y.': (40.6428301, -74.0770605),\n '105 East 106 Street, New York,': (40.7128, -74.0060),\n '164-21 110 Ave. Jamaica Queens': (40.7493572, -73.9390619),\n 'Office Of The Inspector Genera': (37.41836139999999, -95.68028989999999),\n 'Tech Serv-Elevator Div (Hrly)': (40.8441212, -73.89414049999999),\n 'Louis Armstrong': (38.8975669, -77.0383),\n '80 Maiden Lane': (40.6830766, -73.9680195),\n 'Codes\/Standards': (40.7142973, -74.0043792),\n 'Brooklyn Floating Staff': (40.7128, -74.0060),\n '316 East 88 Street, New York N': (40.8457866, -73.89285439999999),\n '44 Beaver St., N.Y.': (40.7814746, -73.95035539999999),\n '1775 Grand Concourse Bronx N.Y': (40.7144626, -74.0109797),\n '96-05 Horace Harding Expway': (40.6755798, -74.0048104),\n 'Environmental Health & Safety': (32.8100274, -96.806286),\n '24 West 61 Street': (40.708606, -74.0147714),\n 'Budget-Office Of Director': (40.7992515, -73.9230296),\n '5 Dubois Ave., Staten Island': (40.7959294, -73.9681724),\n 'Ravenswood': (40.6424311, -74.0761249),\n 'Lower E. Side Consolidation': (40.7128, -74.0060),\n '120 Broadway, New York, NY': (40.8096896, -73.94888639999999),\n '1201 Metropolitan Ave, Bklyn': (34.0257905, -118.4010249),\n '51-02 59th Street': (40.778042, -73.8966049),\n 'Health Initiatives': (40.8605938, -73.8902626),\n '5503 Route 9W marlboro': (40.7050972, -74.01207099999999),\n 'Capital Projects-EVP': (40.73613340000001, -73.9944189),\n '58-50 57 Road, Maspeth, N.Y.': (40.792935, -73.94716799999999),\n 'Office Of The General Manager': (40.6940612, -73.787419),\n 'CP Cap Plan-Financial Planning': (38.8996816, -77.03252739999999),\n '88-26 Pitkin Avenue': (29.9622873, -90.1808181),\n '215 Bay St, Staten Island Ny': (40.7545794, -73.861519),\n '465 Columbus Ave. Valhalla, Ny': (40.7071228, -74.00777149999999),\n 'EVP-Compliance': (38.6098124, -121.5080607),\n '17 Bristol Street Brooklyn Ny': (40.6781784, -73.9441579),\n 'Manhattan Planning Unit': (40.7783133, -73.9495293),\n '280 Broadway, 7th Floor, N.Y.': (40.704911, -74.0108723),\n '356 Flushing Ave, Brooklyn': (40.8464748, -73.91035459999999),\n '100 Church St., N.Y.': (40.7348796, -73.86348939999999),\n 'Morrisania Air Rights': (35.7856856, -78.68273669999999),\n '30-30 Thomson Ave L I City Qns': (40.7697706, -73.982895),\n '420 East 38Th St.': (39.7680942, -86.1626787),\n '280 Broadway, 6th Floor, N.Y.': (40.63215700000001, -74.127624),\n '492 First Avenue, New York, Ny': (41.9688072, -87.6791713),\n 'Construction, Safety & Quality': (40.7128, -74.0060),\n 'Office of the Director': (40.7084773, -74.01059839999999),\n '345 East 59th Street': (40.7144428, -73.9287523),\n 'Randalls Island, N.Y.': (40.7361482, -73.9057223),\n '151 East 151st St, Bronx, NY': (29.290794, -94.82650579999999),\n 'Law-EVP': (41.5768723, -73.9916574),\n 'Office Of Public Information': (40.7128, -74.0060),\n '52-35 58Th St., Woodside, Ny': (40.7223117, -73.9099849),\n '4 World Trade Center': (42.1949775, -71.1998496),\n '137 Centre St., N.Y.': (35.1004385, -106.5710205),\n '11 Park Place, New York, Ny': (40.673379, -73.84703999999999),\n 'Queens-SI Floating Staff': (40.6369029, -74.07581499999999),\n 'Law Dept - Corporate Affairs': (41.1071626, -73.7815093),\n '2405 Amsterdam Ave., N.Y.': (40.7128, -74.0060),\n '34-02 Queens Boulevard Long Is': (40.6708076, -73.9128186),\n 'Pelham Parkway Houses': (40.7082038, -74.01051350000002),\n '71 Smith Avenue, Kingston, Ny': (40.714299, -74.0058154),\n '165 Cadman Plaza East': (40.6979686, -73.96055009999999),\n '30-48 Linden Place': (40.7132993, -74.0101098),\n '55 East 115Th Street, N.Y.': (40.8245054, -73.9170288),\n '31 Chambers St., N.Y.': (40.7441315, -73.9360615),\n 'Capital Projects-VP': (39.8252298, -86.150325),\n 'Office Of The Chair': (40.714299, -74.0058154),\n '255 Greenwich Street': (40.7400973, -73.9755923),\n '17 Battery Place': (40.7128, -74.0060),\n '60 Bay St. S.I. Ny': (38.9327, -77.20556859999999),\n 'R E DEV FOR Preservation': (40.7600927, -73.96309409999999),\n 'East New York, Brooklyn Ny': (40.7932271, -73.92128579999999),\n '16 Court Street': (40.8192567, -73.92388079999999),\n '28-11 Queens Plaza No., L.I.C.': (40.7128, -74.0060),\n '132 W 125Th St., N.Y.': (33.7493562, -84.39120439999999),\n '329 Greenpoint Ave., Brooklyn': (40.734384, -73.9094432),\n 'Flushing Meadow Pk Olmsted Ctr': (40.71028889999999, -74.01229010000002),\n 'Boro Hall Richmond, Staten Isl': (40.71720080000001, -74.0008917),\n '1274 Bedford Ave., Brooklyn': (40.7130634, -74.0082771),\n '4 Metrotech, Brooklyn Ny Ny': (40.7282239, -73.7948516),\n '1 Court Square, Queens': (34.0567061, -118.246127),\n '130-30 28th Ave': (40.847041, -73.9313437),\n 'Manhattan Floating Staff': (40.7441363, -73.930965),\n '1010 East 178th Street': (40.8619444, -73.86),\n '158 E 115Th St., N.Y.': (41.9299757, -73.9992371),\n '9 Bond Street': (40.6990819, -73.9893388),\n '330 Jay Street': (40.7696172, -73.83315329999999),\n 'Visual Assessment\/Remediation': (40.7992309, -73.94475349999999),\n '150 William Street, New York N': (40.7136304, -74.00444949999999),\n '455 First Ave., N.Y.': (40.7128, -74.0060),\n 'Field Operations Office of DIR': (36.1761772, -95.90546669999999),\n '248 Duffield St, Brooklyn': (40.7143284, -74.01091439999999),\n '120-55 Queens Blvd, Queens Ny': (40.7051592, -74.01598539999999),\n '9 Metrotech Center, Brooklyn N': (40.6404885, -74.0760463),\n '150-14 Jamaica Ave': (40.8183027, -73.95577449999999),\n 'Tech Svcs-CSS': (40.6590529, -73.8759245),\n '280 Broadway, 5th Floor, N.Y.': (40.6936215, -73.99085989999999),\n '10 Walker Rd, Valhalla NY10595': (40.7502888, -73.9380487),\n '375 Pearl Street': (40.8082615, -73.9472409),\n '2551 Bainbridge Ave., Bronx': (40.7316928, -73.9462305),\n '210 Joralemon St., Brooklyn': (40.7515114, -73.8491477),\n 'Surfside Gardens': (40.6424095, -74.0760356),\n '250 Church St., N.Y.': (40.67993939999999, -73.9535243),\n '1075 Ralph Avenue Bklyn, N.Y.': (40.6922183, -73.9839956),\n '24-55 Bklyn Qns Expy Woodside': (40.7472946, -73.94433049999999),\n '248 E 161St Street, Bronx': (40.7718656, -73.8391331),\n '65-10 Douglaston Pkwy., Queens': (40.7830603, -73.9712488),\n 'REES - Zone Coordination': (40.8410336, -73.88008409999999),\n '520 1St Ave., N.Y.': (40.7975917, -73.9419063),\n '78-88 Park Drive East QueensNY': (40.7257993, -73.9786235),\n '110 William St. N Y': (40.6947467, -73.98760010000001),\n '855 Remsen., Brooklyn': (40.7128, -74.0060),\n 'Dept of Mixed Finance': (40.7096402, -74.0057361),\n '182 Joline Ave, Staten Isl': (40.7394052, -73.9776358),\n 'NYC - All Boroughs': (32.4844361, -93.7724282),\n '295 Flatbush Ext Brooklyn': (40.69088410000001, -73.9846159),\n 'Law-Housing Litigation': (40.7137004, -73.8281571),\n '59-17 Junction Blvd Corona Ny': (40.6943147, -73.9842832),\n '1 Bx Rvr Pkwy & Garage': (40.7041696, -73.8056742),\n '2 Metro Tech': (40.7128, -74.0060),\n '66 John Street, New York, Ny': (40.714299, -74.0058154),\n '1218 Prospect Place Bklyn, N.Y': (41.0790113, -73.8141354),\n '109 E 16Th St., N.Y.': (40.7109599, -74.0014202),\n '66-26 Metropolitan Ave., Queen': (40.86277080000001, -73.8931143),\n '421 East 26th Street NY NY': (40.6923814, -73.99083619999999),\n '1 Police Plaza, N.Y.': (40.57436300000001, -73.99794709999999),\n '75-20 Astoria Blvd': (40.7179316, -74.0059174),\n '149-40 134 Street, Queens Ny': (40.6492631, -73.9200707),\n '24 Ontario Ave., Staten Island': (40.75633699999999, -73.9066129),\n '100 Central Park Ave N Yonkers': (40.8255371, -73.9187548),\n '890 Garrison Avenue': (40.7524397, -73.7413491),\n '90-27 Sutphin Blvd, Queens Ny': (40.68219, -73.96821),\n '161 William St  New York N Y': (40.7412595, -73.9746112),\n '11 Metrotech Center': (40.718124, -73.825285),\n 'Real Estate Development-VP': (40.7087931, -74.0068363),\n '59 Maiden Lane': (40.646947, -73.912397),\n '7870 State Rd 42 Grahamsville,': (40.7128, -74.0060),\n '900 Sheridan Ave., Bronx': (40.5080805, -74.2357454),\n '235 E 20Th St., N.Y.': (40.72764300000001, -73.937443),\n '5 Manhattan West': (40.691787, -73.9820294),\n '55 Water St Ny Ny': (38.906653, -77.043036),\n 'Jefferson Houses': (40.7348102, -73.8644434),\n 'Arsenal 830 Fifth Ave, New Yor': (41.0659999, -73.7735373),\n 'Office for Exec Proj Manager': (40.693364, -73.9857147),\n '1 Centre Street Ny, Ny': (40.7088657, -74.0078458),\n '1601 Ave. S, Brooklyn': (40.6733051, -73.9358673),\n 'Analysis & Reporting': (40.735627, -73.988013),\n '16 Little Hollow Road': (40.7105133, -73.89170589999999),\n 'Wards Island, N.Y.': (40.7383514, -73.97570259999999),\n 'Heating Mgt-Operations': (40.7121101, -74.0018864),\n '22 Cortlandt Street': (40.7645473, -73.89321269999999),\n '55 West 125 St, New York, Ny': (40.665278, -73.80603099999999),\n '2389 Route 28A, Shokan, Ny': (40.614849, -74.105334),\n '125 Worth Street, Nyc': (40.910008, -73.8768959),\n '2 Lafayette St., N.Y.': (40.8171143, -73.89077979999999),\n 'Hazen St-Sod-Supp.Svcs., E.Elm': (40.7024295, -73.8079068),\n 'Edenwald': (40.710219, -74.00619),\n '3701 Jerome Ave, Bx NY 10467': (40.6951244, -73.9847252),\n 'OFC OF PUBLIC\/PRIVATE PARTNERS': (33.5103069, -112.0271809),\n '1 Bay St., S.I.,Ny': (40.7087357, -74.0081164),\n 'CP Cap Plan-Technical Planning': (41.8478701, -74.547935),\n 'Mold ASMT & Remediation-DIR': (40.8267469, -73.92069459999999),\n 'Compliance & Training': (40.736597, -73.9831951),\n '83 Maiden Lane, New York Ny': (40.7530688, -73.9994561),\n 'EVP-NextGen Ops': (40.7033226, -74.0088962),\n 'Rikers Island': (40.7958142, -73.93974349999999),\n  '275-285 Bergen St, Brooklyn Ny' :(40.683570,-73.982130),\n'48-34 35Th St., Queens':(40.774860,-73.908900),\n'Tech Svcs-Central Office Staff': (40.7033226, -74.0088962),\n'430 East 30 Street, New York N':(44.848660,-74.291740),\n'Morris Houses':(42.548680, -75.247720),\n'345 Adams St., Brooklyn':(40.692720,-73.988450),\n'PIM-Office of Director':(41.194650,-74.185140),\n'Monroe-Clason Point':(43.233110,-77.927690),\n'111 Livingston St., Bklyn., N.':(40.410160,-73.989800),\n'Cypress Hills': (40.619270,-73.956960),\n'Melrose': (42.845260,-73.618480),\n'101-07 Farragut Road, Brooklyn': (40.644300,-73.907570),\n'Roosevelt':(40.766600,-73.945220),\n'City Hall':(40.708390,-73.834100),\n'1200 Waters Place, Bronx Ny':(40.852945,-73.836788),\n'151-20 Jamaica Avenue':(40.702222,-73.803333),\n'18-22 Jackson St. New York N Y':(40.716055,-73.950047),\n'263 Tompkins Ave., Brooklyn':(40.688992,-73.944925),\n'400 8Th Ave., N.Y.':(40.749330, -73.995070),\n'516 Bergen St., Brooklyn':(40.680216,-73.973402),\n'88-11 165 Street Jamaica':(40.708042, -73.796363),\n'Brooklyn Navy Yard, Brooklyn':(40.698351,-73.972434),\n'Prospect Pk 95 Ppw &5Th St':(40.658025,-73.974456),\n'Default':(40.710219, -74.00619),\n\n           \n           }","97b83982":"df['coordinates'] = df['Work Location'].apply(lambda x: dict_loc[x] )\ndf['lat'] = df['coordinates'].apply(lambda x: float(x[0]) if x != 0 else 0)\ndf['lon'] = df['coordinates'].apply(lambda x: float(x[1]) if x != 0 else 0)\n\n#Creating two columns for latitude and longitude( so value can be easily converted to float)","de86d63c":"# This is used to set the marker type (The red icons on the map). It changes it from the default Home-Blue based one, which would have lost this map it's oomph.\ncallback = ('function (row) {'\n                    'icon = L.AwesomeMarkers.icon(({icon: \"map-marker\", markerColor: \"red\"}));'\n                'marker = L.marker(new L.LatLng(row[0], row[1]));'\n                'marker.setIcon(icon);'\n                'return marker};')","8775de1c":"coordinates = list(zip(list(df['lat']), list(df['lon'])))\nmap1 = folium.Map(location=[40.7128, -74.0060], zoom_start=12.03, icon = 'cloud')\nFastMarkerCluster(data=coordinates, callback = callback).add_to(map1)\nmap1","896c6b56":"mapbox_access_token = \"pk.eyJ1Ijoic3JhbGxpIiwiYSI6ImNqeWx4NzMzMTBkN2ozZXBoaTZrd2RhaWQifQ.237WfJXIXNdEQfA6veC3MQ\"","11811c58":"coordinates = pd.DataFrame(df[['Work Location','coordinates']])","1b94d175":"def generateBaseMap(default_location=[40.7128, -74.0060], default_zoom_start=12):\n    base_map = folium.Map(location=default_location, control_scale=True, zoom_start=default_zoom_start)\n    return base_map","bab41f8b":"basemap = generateBaseMap()","973b60ae":"def produce_openings(name):\n    data_openings=pd.DataFrame(df[df[\"Business Title\"]==name]['Work Location'].value_counts().reset_index())\n    data_openings.columns=['Work Location','Counts']\n    \n    data_openings=data_openings.merge(coordinates,on=\"Work Location\",how=\"left\").dropna()\n    data_openings['lat'] , data_openings['lon'] =zip(*data_openings['coordinates'].values)\n    data_openings.drop_duplicates(keep = 'first', inplace = True)\n    data_openings = data_openings.reset_index()\n    return data_openings[['Work Location','Counts','lat','lon']]\n\ndef produce_trace(data_openings,name):\n        data_openings['text']=data_openings['Work Location']+'<br>'+data_openings['Counts'].astype(str)\n        trace =  go.Scattermapbox(\n           \n                lat=data_openings['lat'],\n                lon=data_openings['lon'],\n                mode='markers',\n                marker=go.scattermapbox.Marker(\n                    size=data_openings['Counts']*7\n                ),\n                text=data_openings['text'],name=name\n            )\n        \n        return trace\n\ndef produce_data(col, name):\n    data=pd.DataFrame(df[df[col]==name]['Work Location'].value_counts().reset_index())\n    data.columns=['Work Location','Counts']\n    data=data.merge(coordinates,on=\"Work Location\",how=\"left\").dropna()\n    data['lat'] , data['lon'] =zip(*data['coordinates'].values)\n    data.drop_duplicates(keep = 'first', inplace = True)\n    data = data.reset_index()\n    return data[['Work Location','Counts','lat','lon']]","d37ea647":"Engineering_heatmap=produce_data('Job Category','Engineering, Architecture, & Planning')\nHeatMap(Engineering_heatmap[['lat','lon','Counts']].values.tolist(),zoom=20,radius=15).add_to(basemap)\nbasemap","37afa471":"engineer=df[df['Job Category']=='Engineering, Architecture, & Planning'][['Business Title','coordinates']]\nengineerdf = engineer['Business Title'].value_counts(sort=True, ascending=False)[:10].rename_axis('Business Title').reset_index(name='Counts')\nengineerdf\n","18812783":"\ndata=[] \nfor row in engineerdf['Business Title']:\n    data_openings=produce_openings(row) \n    trace_0=produce_trace(data_openings,row)\n    data.append(trace_0)\n\n\n\nlayout = go.Layout(title=\"Top 10 Engineer Placement Openings\",\n    autosize=True,\n    hovermode='closest',\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,style=\"streets\",\n        center=dict(\n            lat=40.7128,\n            lon=-74.0060\n        ),\n        pitch=0,\n        zoom=10\n    ),\n)\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='Montreal Mapbox')","2eaa8b1f":"Tech_heatmap=produce_data('Job Category','Technology, Data & Innovation')\nHeatMap(Tech_heatmap[['lat','lon','Counts']].values.tolist(),zoom=20,radius=15).add_to(basemap)\nbasemap","13d4dec2":"technical=df[df['Job Category']=='Technology, Data & Innovation'][['Business Title','coordinates']]\ntechincaldf = technical['Business Title'].value_counts(sort=True, ascending=False)[:10].rename_axis('Business Title').reset_index(name='Counts')\ntechincaldf\n","55ab3a6a":"\ndata=[] \nfor row in techincaldf['Business Title']:\n    data_openings=produce_openings(row) \n    trace_0=produce_trace(data_openings,row)\n    data.append(trace_0)\n\n\n\nlayout = go.Layout(title=\"Top 10 Techincal Job Openings\",\n    autosize=True,\n    hovermode='closest',\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,style=\"streets\",\n        center=dict(\n            lat=40.7128,\n            lon=-74.0060\n        ),\n        pitch=0,\n        zoom=10\n    ),\n)\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='Montreal Mapbox')","e7b57b28":"Qual_mask = np.array(Image.open(urllib.request.urlopen('https:\/\/i.imgur.com\/XnFmbtf.png')))\nskill_mask = np.array(Image.open(urllib.request.urlopen('https:\/\/i.imgur.com\/V3R3KZS.png')))\nresidency_mask = np.array(Image.open(urllib.request.urlopen('https:\/\/i.imgur.com\/eodMnCZ.png')))\njob_mask = np.array(Image.open(urllib.request.urlopen('https:\/\/i.imgur.com\/JVuN0kA.png')))\n","61293ca3":"df['Min_req']=df['Minimum Qual Requirements'].apply(lambda x : x.split(',') if type(x)==str else [''])\ndf['Job_desc'] = df['Job Description'].apply(lambda x : x.split(',') if type(x)==str else [''])\ndf['res_req']=df['Residency Requirement'].apply(lambda x : x.split(',') if type(x)==str else [''])\ndf['Pref_skill'] = df['Preferred Skills'].apply(lambda x : x.split(',') if type(x)==str else [''])","6c764633":"def grey_color_func(word, font_size, position, orientation, random_state=None, **kwargs):\n    return tuple(Greys_9.colors[random.randint(2,8)])\n\n\ndef green_color_func(word, font_size, position, orientation, random_state=None, **kwargs):\n    return tuple(Greens_9.colors[random.randint(2,8)])\n\ndef orange_color_func(word, font_size, position, orientation, random_state=None, **kwargs):\n    return tuple(Oranges_9.colors[random.randint(2,8)])\n\ndef PuRd_color_func(word, font_size, position, orientation, random_state=None, **kwargs):\n    return tuple(PuRd_9.colors[random.randint(2,8)])\n\ndef produce_wordcloud(dataframe, title, mask, color):\n    \n  \n    plt.figure(figsize=(10, 10))\n    corpus=dataframe.values.tolist()\n    corpus=','.join(x  for list_words in corpus for x in list_words)\n    wordcloud = WordCloud(max_font_size=None, background_color='white', collocations=False, height=1500,\n                 mask = mask).generate(corpus)\n    wordcloud.recolor(color_func=color)\n    plt.axis(\"off\")\n    plt.title(title)    \n    return plt.imshow(wordcloud)\n    \n","c50c0f7e":"produce_wordcloud(df['Job_desc'], \"Job Description\", job_mask, orange_color_func)","3d029384":"produce_wordcloud(df['Min_req'], \"Minimum Qualification Required\", Qual_mask, grey_color_func)","47b9b627":"produce_wordcloud(df['res_req'], \"Residency Requirement\", residency_mask, PuRd_color_func)","0192a4a7":"produce_wordcloud(df['Pref_skill'], \"Preferred Skills\", skill_mask, green_color_func)","a5456e30":"## Getting Basic Information <a id=\"2\"><\/a> <br>","13bfe48e":"Ah. We can infer that Deputy Commisioner has the highest beginning salary range. Infact, through all the number of opening posts, it seems that this job has the same salary throughout. Talk about being consistent! ","ead4dd10":"With this, we seem to embark upon which position has the most number of openings for the whole dataset.","571ac69f":"### Posting Type <a id=\"7\"><\/a> <br>","92c15725":"### Where are the technology jobs located?<a id=\"20\"><\/a> <br>","661944f2":"## Pie\/Donut Plots:<a id=\"4\"><\/a> <br>","2274a616":"# What's in this kernel?","47cd3f1d":"We can infer that most of the openings are located at 30-30 Thomson Ave L, situated near long island, Manhattan. This is one of the most popular locations for most of the jobs, as it can be seen. \n\n- For more selective information, the markers for each of the openings can be turned off by clicking on them in the legends.\n","9644043a":"### Salary Frequency <a id=\"6\"><\/a> <br>","ec830d2f":"This graph shows that most of the openings for the jobs seem to be on an annual term, with a slight minority in the field of hourly jobs. \nThe spectrum for daily jobs seem to be really tiny, only 32 jobs for that field. Now, that's extremely less!","b92fba1e":"This seems to be a broader question which we all seem to ask, so let's begin with this. \nFor the given plot, hovering on the particular part would reveal more information. ","580ad70e":"From the wordcloud, we can notice that Experience, Microsoft Office, Enginering and analytical skills, along with projects are probably the most important factors a candidate must have for a good impact at the opening. ","940ac24f":"## Word Clouds <a id=\"22\"><\/a> <br>","44993fb1":"### Where are the engineering jobs located? <a id=\"18\"><\/a> <br>","53c6a2b9":"### Top 10 Technology jobs by density. <a id=\"21\"><\/a> <br>","65791ae6":"Many of us have been bogged down while in search of a job, hopelessly roaming around on bulk-email websites and linkedin to form connections, all in the vain hope of landing a job. \nWell, let this be an attempt to streamline that process, with an indepth analysis about the jobs available in New York City, the city which never seems to sleep. \n\nThe basic idea behind analysing this dataset is to gather indepth information hidden in the data and form some tactical analysis. A few interactive maps have also been plotted to gain an intuitive understanding behind some tactical analysis. \n\nWe all crave for a fabulous job, to reach for our dreams. \nLet's hustle together, shall we?\n\nThe questions this kernel hopes to answer (for now):\n - Which field holds the highest salaries?\n - Which area has the most number of job openings?\n - Which field has the highest amount of openings?\n - Are the openings open for everyone in the city? \n","e498a75b":"With this, we can gather that the **Executive Management** posts are the posts which seem to open the most, from time to time. \nIt somehow seems to prove that the skill is less in number yet more in demand.","5e552e72":"From the given plot, we infer that a slight majority  of the openings are of internal type, i.e, only the employees of the current working company can see those postings and act upon it. In a way, this can be beneficial for the company, as they know that the employees applying for them already show the traits to belong to that company, and would be aware of the technology stack which is being used in the company. \n\nAlas, this also means that the set of jobs for the unemployed got a lot less, so the competition just became a rat-race of a different kind.","f75098e2":"We can see that Assistant Civil Engineer is the most in demand, followed by Engineer in Charge.\nInfact, amongst all of these, various levels of Civil Engineers seems to be the most in demand!\n\nI'll now find out the locations on where the openings for each of these top 10 fields are.","7046e1fa":"### Where are the Job Openings Most prevelant? <a id=\"17\"><\/a> <br>\n","ebd07e7b":"![](https:\/\/cdn.dribbble.com\/users\/67912\/screenshots\/6095208\/were-hiring_dribbble_2x.png)","5c769c43":"> #### If you liked the kernel, please upvote. \n","7c6c43cc":"With this graph, we realise that Engineering, Architecture and Planning has the highest number of openings, at 510, trailed by technology and data at 323 openings. \nThis just seems to highlight how technical skills seem to be in extremely high demand.","50b68aa6":"### Full Time Or Part Time?<a id=\"5\"><\/a> <br>\n","b2df29f9":"Usually there are two kinds of postings:\n- **Internal**: This kind of posting signifies that the job opening is visible to the employees for the current company only. Preferable if an employee is scouring for a promotion or planning a change from the current situation.\n- **External**: This kind of posting signifies that the job opening is available for the entire city and it's occupants, making the spectrum of employees a lot wider","2f607e2e":"Oh. It seems that **Senior General Deputy Manager**, in general, has the highest avergae salary range, ranging upto $230,000 per year!\nNow that's an impressive amount. \n\nMost of the openigns in the top ten highest salary seem to be from executive fields, or higher posts. These are the fields which rake in most of the money, on average, paving way for the high salaries people seem to hear about!","8dd82342":"## Maps <a id=\"16\"><\/a> <br>","de54d0fb":"### Highest Low Salary Ranges<a id=\"10\"><\/a> <br>","f492f947":"Again, we can notice that nost of the jobs for engineering seem to be based near the Brooklyn Bridge and Manhattan Bridge. \nYet, this only gives the broad idea of the field. \nLet's find the locations for the top 10 openings, by number!","3687e231":"From the given graph, we can observe that most of the openings for the jobs seem to happen near city hall and court street, which in turn are extremely near the popular Brooklyn Bridge and Manhattan Bridge. A lot of the jobs are clustered around these two bridges, marking it as a rather popular spot. \n\nAnother high clustering of jobs seem to be near the HLC Tunnel, making the concept of jobs being situated the river a lot more plausible!\n\n","6ffbeea3":"- **Job ID**: The Unique Job ID for each opening\n- **Posting Type**: The opening type, whether internal or external, for the job.\n- **# of Positions**: The number of positions available for a certain opening\n- **Business Title**: The position the candidate would hold.\n- **Civil Service Title**: The Broad Title the position would be classified under\n- **Title Code No**: The Code for a particular title\n- **Level**: The authority the certain opening would bring with it\n- **Job Category**: Broad Classification of where all the jobs would fall in\n- **Full-time\/Part-Time**: Time frame of a job.\n- **Salary Range From**: The beginning salary cap for that particular opening\n- **Salary Range To**: The highest cap for that particular job opening.\n- **Salary Frequency**: The payment factor for the job, hourly or annual\n- **Work Location**: The location of the workplace\n- **Division\/Work Unit**: Broad working units for all the jobs \n- **Job Description**: A brief idea of what the job will contain\n- **Minimum Qual Requirements**: The minimum qualifications a candidate must possess for the job\n- **Preferred Skills**: Optimal skills which the posting is looking for\n- **Additional Information**: Any additional information provided with the job opening\n- **Hours\/Shift**: The timings for the job\n- **Work Location 1**: Additional information for the work location\n- **Recruitment Contact**: Empty field, supposed to contain numbers\n- **Residency Requirement**: Whether the employee must be a resident of NYC.\n- **Posting date**: When the opening was announced.\n- **Post Until**: The closing date.\n- **Posting Updated**: The time when the posting was updated for the opening.\n- **Process Date**: When the posting process was completed\n\nPhew! That was a lot of columns, well then, let's get to exploring them! ","f837f45c":"## Bar Plots <a id=\"8\"><\/a> <br>","ef8c6e1c":"### Top 10 engineering jobs by density. <a id=\"19\"><\/a> <br>","37bc8e9f":"### Highest High Salary Range <a id=\"9\"><\/a> <br>","bcd2bc4b":"> ### Note: All the graphs are interactive:\n> - Hover on the plots for more information\n> - Zoom in-and-out of the maps for detailed analysis ","a47d7690":"# Exploratory Data Analysis<a id=\"3\"><\/a> <br>\n","8f6c8cee":"Having seen all the job locations plotted, it brings the question to mind whether we can sift through the job openings by our own choice?\nLet's begin with that. \n\nPlotting the heatmap for all the engineering, architecture and planning jobs","6277d656":"With this, we seem to delve in the highest-least salary. Although it sounds like an oxymoron, it would give us an insight on which post holds the most promise for an applicant, for if the base if already high, it would be a lot more appealing than the roof-shattering salaries which are up and about in the world today.","92c6aeb2":"What is the majority salary frequency which all the jobs seem to offer? \nThis plot seems to answer that question in brevity. ","3e6cd95c":"### Prefferred Skills <a id=\"26\"><\/a> <br>","ff27cbe2":"## Loading Libraries<a id=\"1\"><\/a> <br>","bd0ec17c":"#### Columns Description:","86d59fa1":"It can be seen that around a year's experience and a college degree seem to be the most important factors, projects equivalent of the given experience seem to be a valid assumption too. Administrative posts are higher in opening than Engineering, for now.","cdaccfe2":"Nealry all job openings seem to have a range of salary they would offer, providing a spectrum from the least to the maximum. Let's try to decipher them by comparing them with Civil Service Titles\n","d2172736":"## Scatter Plot <a id=\"14\"><\/a> <br>","833ee1b8":"### Job Description <a id=\"23\"><\/a> <br>","b35517ee":"Again, it can be noticed that most of the jobs are situated around those two bridges. *(It has started to sound suspicious to my own self, requires more indepth analysis, it seems)*","8a23ac6a":"**If you like my work, Please consider upvoting! **","bb6038d8":"For the given locations, the latitude and longitude was collected with the following code snippet. \nBased on the API key being private, I'm plaing the code here in a snippet for y'all to pickup!\n\n*This part is for the GeoCodes (Latitude and Longitudes) to be extracted from the Location given. \n\n    from pygeocoder import Geocoder\n    def cod(i):\n        business_geocoder = Geocoder(api_key='Your Secret API Key :)')\n        results = business_geocoder.geocode(i)\n        return results[0].coordinates\n\n*Storing the location co-ordinates in the list, and then assigning them to the values of work_location in the dataframe, storing them in a dict*\n*Having noticed that the values repeat, a set was taken for all the unique values to lessen the burden on api calls*\n    \n    locations = list(df['Work Location'])\n    locations = list(set(locations))\n    \n    location_co_ordinates = [] \n    for i in locations:\n\n        try:\n            data = cod(i)\n            location_co_ordinates.append(data)\n        except:\n            location_co_ordinates.append(0)\n\n    dict_loc = {}\n    for i in range(len(locations)):\n        dict_loc[locations[i]] = location_co_ordinates[i]\n ","7825011a":"### Max number of open positions<a id=\"11\"><\/a> <br>","d9c19b28":"Loading the dataset and gathering a glimpse:","f06b997e":"This segment hopes to give a deeper insight to what Minimum Qualifications should a candidate have at the very least?","3ecd7e71":"Work Units or Divisions is the category in which most of the jobs fall under, ","1f44213f":"What do the jobs generally require in general, when scouting for potential employees? What should current applicants look out for improving in their resume? \nThis field hopes to answer that query in general. \nThe frequency of word shows the size, and as the colors are in sequential order, the more weight they possess, the darker the word would be in the wordcloud (Which have been reshaped, because refgular wordclouds of python are just not comparable to the ones from R, call it my pet peeve!)","e3597f9c":"### Residency Requirement <a id=\"25\"><\/a> <br>","930f4859":"> ## They say that the sun will always rise.","f924ce3a":"We can infer from this map that Computer Specialist are needed at 30-30 avenue, where as the systems manager are direly needed in Brooklyn. \n","95c03831":"According to the given wordcloud, it can be seen that the data is not that conclusive, yet, we can also see that usually, residency is required in the city, and sometimes, in a particular area too. That could be a bit cumbersome, yet, seems logical for the company to look within the city.","8b819490":"### Which Work Units are the most popular? <a id=\"12\"><\/a> <br>","2dd79414":"With this distribution plot, we infer that the around 20 dollars seems to be the most popular number for the salary based per hour.\nAnd the max salary per hour seems to be around 78.5 dollars, making that a rather high pay for a job!\n","0e93016c":"### Top 10 Job Openings via Category <a id=\"15\"><\/a> <br>","fc041784":"1. [Loading required libraries](#1)\n2. [Gathering Basic Information for the dataset](#2)\n3. [Exploratory Data Analysis](#3)\n    1. [Pie Plots](#4)\n        1. [Full Time or Part time?](#5)\n        2. [Salary Frequency](#6)\n        3. [Posting Type](#7)\n    2. [Bar Plots](#8)\n        1. [Highest High Salary Range](#9)\n        2. [Highest Low Salary Range](#10)\n        3. [Most Open Positions](#11)\n        4. [Popular Work Units](#12)\n        5. [Distplot of Hourly Salary](#13)\n    3. [Scatter Plots](#14)\n        1. [Top 10 Job Openings by Category](#15)\n    4. [Maps](#16)\n        1. [Where are the job openings located?](#17)\n        2. [Where are the engineering jobs located?](#18)\n            1. [Top 10 Engineering Jobs by density](#19)\n        3. [Where are the Technology Jobs located?](#20)\n            1. [Top 10 Technology Jobs by denisity](#21)\n    5. [WordClouds](#22)\n        1. [Job Description](#23)\n        2. [Minimum Qualification](#24)\n        3. [Residency Requirement](#25)\n        4. [Preferred Skills](#26)\n            ","c97679ca":"From the given plot, it can be observed, that the company is specifically looking for Full-Time employees mostly, with a minority of openings for Part time. \nThere do seem to be some Unknown openings, broken data - it seems. \n\n","b9383320":"We realise that a City Seasonal Aide and Sewage Treatment worker have the most number of openings, with the seasonal aide thrashing the other jobs _easily_ with the most number of jobs open!","23e331f2":"### Distplot of Hourly Salary. <a id=\"13\"><\/a> <br>","32a2c7e9":"With this, we can infer that for a job description, a lot of it involves something along a New Branch or new position opening on a project. Many of the openings also fall under City, as Staff, Bureau or Service. Health and Management also hold rather detailed emphasis, probably emphasising the benefits an employee might recieve. ","e4f78aeb":"We can see that Computer Software Specialist seems to be the most in demand, followed by a systems manager. ","6829df9a":"### Minimum Qualifications Required <a id=\"24\"><\/a> <br>","f5c36c60":"> ### To be conitnued"}}