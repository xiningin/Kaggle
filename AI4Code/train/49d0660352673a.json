{"cell_type":{"2b7ea746":"code","fa93ea5f":"code","7149ece4":"code","bfa69492":"code","f68882a4":"code","ae2ff691":"code","f629d746":"code","2ea9296d":"code","506a5d04":"code","e515220f":"code","2da210f7":"code","42373441":"code","257dd655":"code","4ccb7ad5":"code","50a31afa":"code","f898b8f7":"code","cf941c62":"code","5096c4b4":"code","5b62b700":"code","ff613124":"code","dc693ddf":"code","2103cc68":"code","fe7a532a":"code","c6a13e05":"code","daa62491":"code","fe325d0b":"code","55ae22b2":"code","b14ee5a6":"code","189f4c8f":"code","22144217":"code","f80b096c":"code","b91ff6f8":"code","b14e28ae":"code","1ea51b7f":"code","34dc585c":"code","907760a2":"code","25a03c8f":"code","b794a1c8":"code","cb8896bf":"code","1bab9da3":"code","f05812ba":"code","c3496f91":"code","e8dd10d1":"code","d8789369":"code","fee9eb0d":"code","a92ef8c4":"code","ab5d0383":"code","f32b2585":"code","604bcc9c":"code","94c76835":"code","7588f6b0":"code","6278b745":"code","124a85c7":"code","1f459fc3":"code","82ba555a":"code","4f51164a":"code","4b9d419e":"code","4e67dd6c":"code","85f81dad":"code","d83d8bed":"code","d6389954":"code","3674d978":"code","5e7283a3":"code","4c1dcd25":"code","4854b2e7":"code","277bf75e":"code","d70478bb":"code","370b00bd":"code","bce7c892":"code","d8184a95":"code","2c5964bb":"code","68511fa4":"code","72a2d8d6":"code","dd630a3d":"code","e0ba367a":"code","f6820a77":"code","9114bbd1":"code","fb768247":"code","39018545":"markdown","af5174dd":"markdown","6256314c":"markdown","dd83772c":"markdown","4a4aa04a":"markdown","03fe8cf9":"markdown","fa286a0c":"markdown","b929de81":"markdown","f288cae4":"markdown","bdfcbe09":"markdown","9783c020":"markdown","a4ccd4cf":"markdown","6ff9c86d":"markdown","c1e7286e":"markdown","1f4324da":"markdown","2673baad":"markdown","c534748a":"markdown","1654f86b":"markdown","1ac03a76":"markdown","ec003315":"markdown","21feb188":"markdown","d67e8eb9":"markdown","1193a4ad":"markdown","9de71213":"markdown","e5a6cd6e":"markdown","c92d2703":"markdown","448a7597":"markdown","51118287":"markdown","8d8dd6ec":"markdown","8dbd5ebf":"markdown","119aa9a0":"markdown","9223a21b":"markdown","b25ecfe2":"markdown","d33a20ab":"markdown","248709f4":"markdown","57fe2109":"markdown","89f9fbf9":"markdown","cd95f426":"markdown","36cc9136":"markdown","0327174d":"markdown","f5a84aeb":"markdown","5f98ac3a":"markdown","c3aee0ad":"markdown","3f49ce18":"markdown","def2bf9f":"markdown","18fea52b":"markdown","7706cb6f":"markdown","a27a994a":"markdown","481eab35":"markdown","d9d45923":"markdown","cf0b289f":"markdown"},"source":{"2b7ea746":"# Importing the required libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n","fa93ea5f":"#Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#set display-related options \npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 80)","7149ece4":"#load the dataset \ncountry_df = pd.read_csv('..\/input\/country\/Country-data (1).csv')\ncountry_df.head()","bfa69492":"#check the shape of dataframe\ncountry_df.shape","f68882a4":"#inspect the dataframe\ncountry_df.info()","ae2ff691":"#validate null values if present in any columns \ncountry_df.isnull().sum()","f629d746":"# Duplicate check\n\ncountry_df.loc[country_df.duplicated()]","2ea9296d":"#Child mortality rate\nplt.figure(figsize=(15,5))\n\n#plot child mortality rate distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['child_mort'])\nplt.title(\"Child mortality rate distribution\")\n\n\n#plot Top 10 countries with highest child mortality rate\nplt.subplot(1,2,2)\ndf_child_mort=country_df[['country','child_mort']].sort_values('child_mort', ascending = False).head(10)\nsns.barplot(x='country',y='child_mort',data=df_child_mort)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 Countries with highest child mortality rate \")\nplt.show()","506a5d04":"#Exports per capita\nplt.figure(figsize=(15,5))\n\n#plot Exports per capita distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['exports'])\nplt.title(\"Exports per capita distribution\")\n\n\n#plot Top 10 countries with lowest Exports per capita\nplt.subplot(1,2,2)\ndf_exports=country_df[['country','exports']].sort_values('exports', ascending = True).head(10)\nsns.barplot(x='country',y='exports',data=df_exports)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with lowest Exports per capita\")\nplt.show()","e515220f":"#Total health spending per capita\nplt.figure(figsize=(15,5))\n\n#plot health spending per capita distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['health'])\nplt.title(\"Total health spending per capita\")\n\n\n#plot Top 10 countries with lowest health spending per capita\nplt.subplot(1,2,2)\ndf_health=country_df[['country','health']].sort_values('health', ascending = True).head(10)\nsns.barplot(x='country',y='health',data=df_health)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with lowest health spending per capita\")\nplt.show()","2da210f7":"#Imports per capita\nplt.figure(figsize=(15,5))\n\n#plot Imports per capita distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['imports'])\nplt.title(\"Imports per capita distribution\")\n\n\n#plot Top 10 countries with lowest Imports per capita\nplt.subplot(1,2,2)\ndf_imports=country_df[['country','imports']].sort_values('imports', ascending = True).head(10)\nsns.barplot(x='country',y='imports',data=df_imports)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with lowest imports per capita\")\nplt.show()","42373441":"#Net income per person\nplt.figure(figsize=(15,5))\n\n#plot Net income per person distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['income'])\nplt.title(\"Net income per person distribution\")\n\n\n#plot Top 10 countries with lowest Net income per person\nplt.subplot(1,2,2)\ndf_income=country_df[['country','income']].sort_values('income', ascending = True).head(10)\nsns.barplot(x='country',y='income',data=df_income)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with lowest Net income per person\")\nplt.show()","257dd655":"#Inflation\nplt.figure(figsize=(15,5))\n\n#plot Inflation distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['inflation'])\nplt.title(\"Inflation distribution\")\n\n\n#plot Top 10 countries with high inflation\nplt.subplot(1,2,2)\ndf_inflation=country_df[['country','inflation']].sort_values('inflation', ascending = False).head(10)\nsns.barplot(x='country',y='inflation',data=df_inflation)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with high inflation\")\nplt.show()","4ccb7ad5":"#Life expectency\nplt.figure(figsize=(15,5))\n\n#plot Life expectency distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['life_expec'])\nplt.title(\"Life expectency distribution\")\n\n\n#plot Top 10 countries with low life expentency\nplt.subplot(1,2,2)\ndf_life_expec=country_df[['country','life_expec']].sort_values('life_expec', ascending = True).head(10)\nsns.barplot(x='country',y='life_expec',data=df_life_expec)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with low life expectency\")\nplt.show()","50a31afa":"#Fertility rate\nplt.figure(figsize=(15,5))\n\n#plot Fertility rate distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['total_fer'])\nplt.title(\"Fertility rate distribution\")\n\n\n#plot Top 10 countries with high Fertility rate\nplt.subplot(1,2,2)\ndf_total_fer=country_df[['country','total_fer']].sort_values('total_fer', ascending = False).head(10)\nsns.barplot(x='country',y='total_fer',data=df_total_fer)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with high Fertility rate\")\nplt.show()","f898b8f7":"#GDP per capita\nplt.figure(figsize=(15,5))\n\n#plot GDP per capita distribution\nplt.subplot(1,2,1)\nsns.distplot(country_df['gdpp'])\nplt.title(\"GDP per capita distribution\")\n\n\n#plot Top 10 countries with low GDP per capita\nplt.subplot(1,2,2)\ndf_gdpp=country_df[['country','gdpp']].sort_values('gdpp', ascending = True).head(10)\nsns.barplot(x='country',y='gdpp',data=df_gdpp)\nplt.xticks(rotation=90)\nplt.title(\"Top 10 countries with low GDP per capita\")\nplt.show()","cf941c62":"#check correlation between variables\nplt.figure(figsize = (12,6))\nmask = np.zeros_like(country_df.corr(),dtype=np.bool)\nmask[np.triu_indices_from(mask)]=True\nsns.heatmap(country_df.corr(), mask=mask,annot = True, cmap=\"YlGnBu\")\nplt.show()","5096c4b4":"#pairplot of all numeric columns\nsns.pairplot(country_df)\nplt.show()","5b62b700":"#check statistical details of dataframe\ncountry_df.describe()","ff613124":"# checking for outliers using box-plots\n\nplt.figure(figsize=(20,20), dpi=100)\n\nplt.subplot(4,3,1)\nsns.boxplot(x = 'child_mort', data = country_df)\n\nplt.subplot(4,3,2)\nsns.boxplot(x = 'exports', data = country_df)\n\nplt.subplot(4,3,3)\nsns.boxplot(x = 'health', data = country_df)\n\nplt.subplot(4,3,4)\nsns.boxplot(x = 'imports', data = country_df)\n\nplt.subplot(4,3,5)\nsns.boxplot(x = 'income', data = country_df)\n\nplt.subplot(4,3,6)\nsns.boxplot(x = 'inflation', data = country_df)\n\nplt.subplot(4,3,7)\nsns.boxplot(x = 'life_expec', data = country_df)\n\nplt.subplot(4,3,8)\nsns.boxplot(x = 'total_fer', data = country_df)\n\nplt.subplot(4,3,9)\nsns.boxplot(x = 'gdpp', data = country_df)\n\nplt.show()","dc693ddf":"# instantiate\nscaler = StandardScaler()\n\n# Create a list of the variables that you need to scale\nvarlist = ['child_mort', 'exports', 'health', 'imports', 'income', 'inflation', 'life_expec', 'total_fer', 'gdpp']\n\n# Scale these variables using 'fit_transform'\ncountry_df_scaled= scaler.fit_transform(country_df[varlist])\ncountry_df_scaled.shape","2103cc68":"country_df_scaled = pd.DataFrame(country_df_scaled)\ncountry_df_scaled.columns = ['child_mort', 'exports', 'health', 'imports', 'income', 'inflation', 'life_expec', 'total_fer', 'gdpp']\ncountry_df_scaled.head()","fe7a532a":"from sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H\n","c6a13e05":"#Use the Hopkins Statistic function by passing the above scaled dataframe as a paramter\nhopkins(country_df_scaled)","daa62491":"#single linkage\nplt.figure(figsize=(18, 8))\nplt.title('Hierarchical Clustering Dendrogram using simple linkage')\nplt.xlabel('index')\nplt.ylabel('distance')\nmergings_single = linkage(country_df_scaled, method=\"single\", metric='euclidean')\ndendrogram(mergings_single)\nplt.show()","fe325d0b":"#complete linkage\nplt.figure(figsize=(18, 8))\nplt.title('Hierarchical Clustering Dendrogram using complete linkage')\nplt.xlabel('index')\nplt.ylabel('distance')\nmergings_complete = linkage(country_df_scaled, method=\"complete\", metric='euclidean')\ndendrogram(mergings_complete)\nplt.show()\n","55ae22b2":"#Using 3 clusters\ncluster_labels_3 = cut_tree(mergings_complete, n_clusters=3).reshape(-1, )\ncluster_labels_3","b14ee5a6":"#create a copy of dataframe country_df\ncountry_df_h = country_df.copy()","189f4c8f":"#add cluster labels to dataframe country_df_h\ncountry_df_h['cluster_labels'] = cluster_labels_3\ncountry_df_h.head()","22144217":"#checking distribution of clusters\n\ncountry_df_h.cluster_labels.value_counts()","f80b096c":"# Box plot to visualize different clusters\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_labels', y='child_mort', data=country_df_h, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_labels', y='income', data=country_df_h, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_labels', y='gdpp', data=country_df_h, palette=\"bright\")\n\n\nplt.show()","b91ff6f8":"# Scatter plot to visualize different clusters\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_labels',\n                data=country_df_h, legend='full',  palette=[\"red\",\"orange\",\"blue\"], s=100, alpha=.5)\n\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_labels',\n                data=country_df_h, legend='full', palette=[\"red\",\"orange\",\"blue\"],s=100, alpha=.5)\n\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_labels',\n                data=country_df_h, legend='full',  palette=[\"red\",\"orange\",\"blue\"], s=100, alpha=.5)\n\nplt.show()","b14e28ae":"#check the countries in cluster 2\n\ncountry_df_h[country_df_h['cluster_labels'] == 2]","1ea51b7f":"#check the countries in cluster 0\n\ncountry_df_h[country_df_h['cluster_labels'] == 0]","34dc585c":"#Using  4 clusters\ncluster_labels_4 = cut_tree(mergings_complete, n_clusters=4).reshape(-1, )\ncluster_labels_4","907760a2":"country_df_h['cluster_labels_new'] = cluster_labels_4\ncountry_df_h.head()","25a03c8f":"#checking distribution of clusters\n\ncountry_df_h.cluster_labels_new.value_counts()","b794a1c8":"# Box plot to visualize different clusters\n\nplt.figure(figsize=(20, 5))\n\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_labels_new', y='child_mort', data=country_df_h, palette=\"bright\")\n\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_labels_new', y='income', data=country_df_h, palette=\"bright\")\n\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_labels_new', y='gdpp', data=country_df_h, palette=\"bright\")\n\n\nplt.show()","cb8896bf":"# Scatter plot to visualize different clusters\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_labels_new',\n                data=country_df_h, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100)\n\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_labels_new',\n                data=country_df_h, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100)\n\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_labels_new',\n                data=country_df_h, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100)\n\nplt.show()","1bab9da3":"#check the countries in cluster 2\n\ncountry_df_h[country_df_h['cluster_labels_new'] == 2]","f05812ba":"#check the countries in cluster 3\n\ncountry_df_h[country_df_h['cluster_labels_new'] == 3]","c3496f91":"clusters_child_mort = pd.DataFrame(country_df_h.groupby([\"cluster_labels\"]).child_mort.mean())\nclusters_income  = pd.DataFrame(country_df_h.groupby([\"cluster_labels\"]).income.mean())\nclusters_gdpp  = pd.DataFrame(country_df_h.groupby([\"cluster_labels\"]).gdpp.mean())","e8dd10d1":"df = pd.concat([pd.Series(list(range(0,3))), clusters_child_mort,clusters_income,clusters_gdpp], axis=1)\ndf.columns = [\"ClusterID\", \"child_mort_mean\", \"income_mean\", \"gdpp_mean\"]\ndf","d8789369":"#Analyse all the 3 clusters using barplot\nplt.figure(figsize=(18, 5))\n\nplt.subplot(1, 3, 1)\nsns.barplot(x=df.ClusterID, y=df.child_mort_mean)\n\nplt.subplot(1, 3, 2)\nsns.barplot(x=df.ClusterID, y=df.income_mean)\n\nplt.subplot(1, 3, 3)\nsns.barplot(x=df.ClusterID, y=df.gdpp_mean)\n\nplt.tight_layout()","fee9eb0d":"#list of countries under cluster 0 \ncountry_df_h[country_df_h['cluster_labels'] == 0]","a92ef8c4":"\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_df_scaled)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each clusters\nplt.plot(ssd, marker = 'o')\nplt.title('Elbow Method', fontsize = 16)\nplt.xlabel('Number of clusters',fontsize=12)\nplt.ylabel('Sum of Squared distance',fontsize=12)\nplt.vlines(x=3, ymax=ssd[-1], ymin=ssd[0], colors=\"r\", linestyles=\"-\")\nplt.hlines(y=ssd[2], xmax=9, xmin=1, colors=\"r\", linestyles=\"--\")","ab5d0383":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_df_scaled)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(country_df_scaled, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))\n    \n    ","f32b2585":"# K Means with with k=3\nkmeans_3 = KMeans(n_clusters=3, max_iter=50)\nkmeans_3.fit(country_df_scaled)","604bcc9c":"kmeans_3.labels_","94c76835":"#create a copy of dataframe country_df\ncountry_df_k = country_df.copy()","7588f6b0":"# assign the label\ncountry_df_k['cluster_labels'] = kmeans_3.labels_\ncountry_df_k.head()","6278b745":"#checking distribution of clusters\n\ncountry_df_k.cluster_labels.value_counts()","124a85c7":"# Box plot to visualize different clusters\n\nplt.figure(figsize=(20, 5))\n\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_labels', y='child_mort', data=country_df_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_labels', y='income', data=country_df_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_labels', y='gdpp', data=country_df_k, palette=\"bright\")\n\n\nplt.show()","1f459fc3":"# Scatter plot to visualize different clusters\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_labels',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\"], s=100, alpha=.5)\n\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_labels',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\"], s=100, alpha=.5)\n\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_labels',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\"], s=100, alpha=.5)\n\nplt.show()","82ba555a":"# K Means with with k=4\nkmeans_4 = KMeans(n_clusters=4, max_iter=50)\nkmeans_4.fit(country_df_scaled)","4f51164a":"kmeans_4.labels_","4b9d419e":"# assign the label\ncountry_df_k['cluster_labels_new'] = kmeans_4.labels_\ncountry_df_k.head()","4e67dd6c":"#checking distribution of clusters\n\ncountry_df_k.cluster_labels_new.value_counts()","85f81dad":"# Box plot to visualize different clusters\n\nplt.figure(figsize=(20, 5))\n\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_labels_new', y='child_mort', data=country_df_k, palette=\"bright\")\n\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_labels_new', y='income', data=country_df_k, palette=\"bright\")\n\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_labels_new', y='gdpp', data=country_df_k, palette=\"bright\")\n\n\nplt.show()","d83d8bed":"# Scatter plot to visualize different clusters\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_labels_new',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100,alpha=.5)\n\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_labels_new',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100,alpha=.5)\n\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_labels_new',\n                data=country_df_k, legend='full', palette=[\"red\",\"orange\",\"blue\",\"black\"], s=100,alpha=.5)\n\nplt.show()","d6389954":"Kclusters_child_mort = pd.DataFrame(country_df_k.groupby([\"cluster_labels\"]).child_mort.mean())\nKclusters_income  = pd.DataFrame(country_df_k.groupby([\"cluster_labels\"]).income.mean())\nKclusters_gdpp  = pd.DataFrame(country_df_k.groupby([\"cluster_labels\"]).gdpp.mean())","3674d978":"df_Kmeans = pd.concat([pd.Series(list(range(0,3))), Kclusters_child_mort,Kclusters_income,Kclusters_gdpp], axis=1)\ndf_Kmeans.columns = [\"ClusterID\", \"child_mort_mean\", \"income_mean\", \"gdpp_mean\"]\ndf_Kmeans","5e7283a3":"#Analyse all the 3 clusters using barplot\nplt.figure(figsize=(18, 5))\n\nplt.subplot(1, 3, 1)\nsns.barplot(x=df_Kmeans.ClusterID, y=df_Kmeans.child_mort_mean)\n\nplt.subplot(1, 3, 2)\nsns.barplot(x=df_Kmeans.ClusterID, y=df_Kmeans.income_mean)\n\nplt.subplot(1, 3, 3)\nsns.barplot(x=df_Kmeans.ClusterID, y=df_Kmeans.gdpp_mean)\n\nplt.tight_layout()","4c1dcd25":"#list of countries under cluster 0\ncountry_df_k[country_df_k['cluster_labels'] == 2]","4854b2e7":"Hierarchical_UnderDeveloped_countries = country_df_h[country_df_h['cluster_labels'] == 0]\nHierarchical_UnderDeveloped_countries","277bf75e":"Hierarchical_UnderDeveloped_countries.shape","d70478bb":"KMeans_UnderDeveloped_countries = country_df_k[country_df_k['cluster_labels'] == 2]\nKMeans_UnderDeveloped_countries","370b00bd":"KMeans_UnderDeveloped_countries.shape","bce7c892":"UnderDeveloped_countries =KMeans_UnderDeveloped_countries ","d8184a95":"UnderDeveloped_countries=UnderDeveloped_countries[['country', 'child_mort', 'income','gdpp']]\nUnderDeveloped_countries","2c5964bb":"UnderDeveloped_countries.describe()","68511fa4":"UnderDeveloped_countries = UnderDeveloped_countries[UnderDeveloped_countries['gdpp'] <= 897]\nUnderDeveloped_countries=UnderDeveloped_countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])\nUnderDeveloped_countries","72a2d8d6":"UnderDeveloped_countries = UnderDeveloped_countries[UnderDeveloped_countries['income'] <= 1870]\nUnderDeveloped_countries=UnderDeveloped_countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])\nUnderDeveloped_countries","dd630a3d":"UnderDeveloped_countries = UnderDeveloped_countries[UnderDeveloped_countries['child_mort'] >90.2]\nUnderDeveloped_countries=UnderDeveloped_countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])\nUnderDeveloped_countries","e0ba367a":"# top 12 underdeveloped countries\n\ntop_12=UnderDeveloped_countries.head(12)\ntop_12","f6820a77":"top_12","9114bbd1":"#Univariate Analysis of top 12 underdeveloped countries\nplt.figure(figsize=(21, 18))\nvariables = ['gdpp','income','child_mort']\nfor i in enumerate(variables):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(top_12[i[1]])\n    plt.xticks(rotation=20)","fb768247":"#Bivariate Analysis of top 12 underdeveloped countries\nplt.figure(figsize=(18, 10))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=top_12, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=top_12, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=top_12, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.show()\n","39018545":" - ### <u> HIERARCHICAL CLUSTERING\n    \n","af5174dd":"### Inference - \n\n - #### As seen from above plots , cluster 0 has highest child mortalility rate .\n\n - #### Also income and gdpp is least in cluster 0.Income and gdpp are measures of development. Higher the per capita income and gdpp better is the country's development.\n\n - #### Hence countries in cluster 0 are under-developed countries can be considered for financial aid.\n\n - #### Countries in cluster 1 are developing countries and countries in cluster 2 are developed countries with low child mortaliity rate followed by high income and gdp.","6256314c":"### Inference - \n\n - #### As seen from above plots , cluster 2 has highest child mortalility rate .\n\n - #### Also income and gdpp is least in cluster 2.Income and gdpp are measures of development. Higher the per capita income and gdpp better is the country's development.\n\n - #### Hence countries in cluster 2 are under-developed countries that can be considered for financial aid.\n\n - #### Countries in cluster 1 are developing countries and countries in cluster 0 are developed countries with low child mortaliity rate followed by high income and gdp.","dd83772c":"### Inference - \n\n - #### As seen from above , k=3 gives balanced clusters\n\n - #### Hence we will consider number of clusters = 3","4a4aa04a":"### Inference - \n\n - #### As seen from Elbow Curve & silhouette analysis,  3 or 4 clusters are optimal number of clusters to be used.\n    \n - ####  We will try both k=3 and k=4 in K-Means clustering and analyse the results.\n","03fe8cf9":"### Inference - \n\n#### 1. Health spending per capita distribution is left-skewed.\n\n#### 2. Top 10 countries with lowest health spending per capita -\n\n#### Qatar , Myanmar, Pakistan , Congo, Rep.Turkmenistan,Indonesia,Kuwait,Eritrea,Oman,Brunei","fa286a0c":"### Inference - \n\n - #### As seen from above descriptive statistics , we will consider median values for child_mort ,income, gdpp to filter out countries with higher income,gdp and lower mortality rate.\n \n - #### Since our data is skewed (i.e.the frequency distribution for our data is skewed), we are choosing median over mean.\n\n - #### We will filter countries based on gdpp then income followed by child_mort .","b929de81":"### Inference -\n\n - #### Since the single linkage dendrogram is not structured properly and do not have proper tree-like structure, we will try to create dendrogram using complete linkage.","f288cae4":"# 5. Final Model ","bdfcbe09":" - ### <u> Hopkins Statistics\n    \nThe Hopkins statistic is a statistic which gives a value which indicates the cluster tendency .\nIt is used to check if the data is feasible for clustering or not .\nHopkins test examines whether data points differ significantly from uniformly distributed data in the multidimensional space.\n\nIf the value is between {0.01, ...,0.3}, the data is regularly spaced.\n\nIf the value is around 0.5, it is random.\n\nIf the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.","9783c020":"- ### <u> Imports of goods and services per capita\n","a4ccd4cf":"#### finding the optimal number of clusters using Silhouette Analysis\n\n$$\\text{silhouette score}=\\frac{p-q}{max(p,q)}$$\n\n$p$ is the mean distance to the points in the nearest cluster that the data point is not a part of\n\n$q$ is the mean intra-cluster distance to all the points in its own cluster.\n\n* The value of the silhouette score range lies between -1 to 1. \n\n* A score closer to 1 indicates that the data point is very similar to other data points in the cluster, \n\n* A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","6ff9c86d":" - ### <u> GDP per capita","c1e7286e":"# 4. Model Building ","1f4324da":"### Inference - \n\n#### 1. GDP per capita distribution is left-skewed.\n\n#### 2. Top 10 countries with low GDP per capita -\n\n#### Burundi,Liberia,Congo, Dem. Rep.,Niger,Sierra Leone,Madagascar,Mozambique,Central African Republic,Malawi,Eritrea","2673baad":"### Inference -\n\n - #### Outliers are present in all the variables but there are very few outliers (<= 5) for all variables except for income and gdpp .\n \n - #### We have limited number of countries (167) and Outlier treatment would change the ranking of few countries which might prevent few underdeveloped countries from getting financial aid.\n \n - #### But if we dont apply outlier treatment then it can impact the centroid of the cluster .However we can still validate different models with different K values.\n \n - #### Hence Lets proceed without any outlier treatment ","c534748a":" - ### <u> Net Income per person","1654f86b":"# 2. Univariate Analysis and Bi-variate Analysis -\n","1ac03a76":" - ### <u> K-means CLUSTERING\n    \n  ","ec003315":" - ### <u> Scaling the data\n\n      We will use Standardisation method for scaling the data.","21feb188":"### Inference - \n\n - #### As seen from n_clusters=3 and n_clusters=4 , number of clusters should be 3 since when n_clusters=4 ,only Nigeria seems to be in single cluster.\n\n - #### As seen from EDA results , nigeria was among TOP 10 countries with high child mortality rate , high inflation,high fertility rate and lowest imports per capita.So it can be good candidate for financial aid.\n\n - #### Also n_clusters=3 gives better clusters Hence we will consider number of clusters = 3","d67e8eb9":" SINGLE LINKAGE :\n \nIn single linkage hierarchical clustering, the distance between two clusters is defined as the shortest distance between two points in each cluster.","1193a4ad":" - ### <u> Life expectency","9de71213":"### Inference - \n\n#### 1. Child mortalility rate distribution is left-skewed.\n\n#### 2. Top 10 countries with highest child mortality rate -\n\n####     Haiti, Sierra Leone, Chad ,Central African Republic,Mali,Nigeria,Niger,Angola,Burkina Faso,Congo, Dem. Rep.","e5a6cd6e":"### Inference - \n\n#### 1. Fertility rate distribution is left-skewed.\n\n#### 2. Top 10 countries with high Fertility rate -\n\n#### Niger,Chad,Mali,Congo, Dem. Rep.,Burundi,Timor-Leste,Angola,Uganda,Burkina Faso,Nigeria","c92d2703":" - ### <u> Analyse the clusters from HIERARCHICAL CLUSTERING","448a7597":" - ### <u> Inflation","51118287":"### Inference -\n\n - #### Since the above value is between 0.7 -0.99 which indicates high tendency to cluster.","8d8dd6ec":" - ### <u> Fertility rate","8dbd5ebf":"### Inference - \n\n#### 1. Life expectency distribution is right-skewed.\n\n#### 2. Top 10 countries with  low life expectency -\n\n#### Haiti,Lesotho,Central African Republic,Zambia,Malawi,South Africa,Mozambique,Sierra Leone,Guinea-Bissau,Afghanistan","119aa9a0":"### Inference - \n\n#### 1. Net income per person distribution is left-skewed.\n\n#### 2. Top 10 countries with lowest Net income per person-\n\n#### Congo, Dem. Rep ,Liberia,Burundi,Niger,Central African Republic,Mozambique,Malawi,Guinea,Togo,Sierra Leone","9223a21b":"## Recommendations - \n\n#### 1.CEO must definately focus on below 4 countries as they fall under top 10 countries with low income,gdpp and high child mortality rate-\n - #### Sierra Leone\n - #### Central African Republic\n - #### Congo Dem. Rep\n - #### Niger\n\n#### 2.Higher fertility rate leads to higher child mortality rate and lower life_expectency.\n#### Hence NGO should make use of this financial aid and organize family planning awareness program in countries with higher fertility rate.They should educate them about impact of fertility rate on country's development .low fertility increases the number of people of working age per capita and hence beneficial to the economy\n\n#### 3.Since this is a financial aid , so CEO must give priority to gdpp followed by income and then child mortality rate.They should focus more on countries with low income and low gdp .As countries with high mortality rate but higher income and higher gdp would not benefit much from financial aid compared to countries with low income and low gdp.\n#### This Financial aid can be used by under developed countries to improve healthcare facilities,hygiene and sanitation and adequate food.\n\n\n#### 4. NGO should focus on improving gdp and income of under-developed countries .GDP per capita increases the life expectancy at birth through increasing economic growth and development in a country and thus leads to the prolongation of longevity and decrease in child mortality .\n","b25ecfe2":"### Inference - \n\n#### 1. Exports per capita distribution is left-skewed.\n\n#### 2. Top 10 countries with lowest Exports per capita-\n\n#### Myanmar,Timor-Leste,Eritrea,Burundi,Nepal,Afghanistan,Brazil,Central African Republic,Rwanda,Tonga","d33a20ab":"# 3. Data Preparation","248709f4":" - ### <u> Correlation between variables","57fe2109":"### Inference - \n\n#### 1. Inflation distribution is left-skewed.\n\n#### 2. Top 10 countries with high inflation -\n\n#### Nigeria,Venezuela,Mongolia,Timor-Leste, Equatorial Guinea, Yemen, Sri Lanka, Angola, Argentina,Congo, Dem. Rep.","89f9fbf9":"### Inference - \n\n- #### Hierarchical clustering approach identified 55 Under-developed countries.\n \n- #### K-Means clustering approach identified 47 Under-developed countries.\n\n- #### In Hierarchical clustering , around 65% of the data points are segmented into single cluster that is cluster 1 followed by 33% in cluster 0 and 2% in cluster 2.\n\n- #### while in K-Means clustering , we got more balanced clusters compared to hierarchical clustering .Around 50% of the data points are segmented into single cluster that is cluster 1 followed by 28% in cluster 2 and 22% in cluster 0.\n \n- #### So we will consider the 'K-Means with 3 Clusters' as our FINAL MODEL\n","cd95f426":"# 1. Read and understand the data","36cc9136":"# Problem Statement\n\nHELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n \n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. ","0327174d":"COMPLETE LINKAGE :\n\nIn complete linkage hierarchical clustering, the distance between two clusters is defined as the longest distance between two points in each cluster","f5a84aeb":"### Analysis - \n\n#### As seen from above heatmap and pairplot, there is high correlation between following variables:\n1. income and gdpp\n\n2. life_expec and gdpp\n\n3. imports and exports\n\n4. life_expec and gdpp\n\n5. life_expec and total_fer\n\n6. life_expec and child_mort","5f98ac3a":" - ### <u> Outlier Analysis","c3aee0ad":" - ### <u> Exports of goods and services per capita\n","3f49ce18":"### Inference -\n\n - #### Since complete Linkage gives better clusters and the above dendrogram has a clear tree structure in order to identify the 'cut',So we will use Complete linkage .","def2bf9f":"#### finding the optimal number of clusters using elbow-curve\/SSD","18fea52b":" - ### <u> Analyse the clusters from K-MEANS CLUSTERING","7706cb6f":"### Based on our Clustering Analysis, we have identified below top 12 countries who are in dire need of the Financial Aid -","a27a994a":"### Inference - \n\n#### 1. Imports per capita distribution is left-skewed.\n\n#### 2. Top 10 countries with lowest Imports per capita-\n\n#### Myanmar,Brazil,Japan,United States,Argentina,Sudan,Nigeria,Venezuela,Colombia,Gabon.","481eab35":" - ### <u> Child Mortality rate","d9d45923":" - ### <u> Total health spending per capita\n","cf0b289f":"### Inference - \n\n#### 1. As seen from above , there are no null values in any columns since non-null count for all columns is 167 .\n\n#### 2. Also none of the coumns have incorrect datatype . Hence no conversion required."}}