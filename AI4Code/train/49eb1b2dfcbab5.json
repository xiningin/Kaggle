{"cell_type":{"d8ff459c":"code","f09b6d65":"code","f987a62a":"code","fbc2be31":"code","68215e3f":"code","1a31f2ae":"code","f2db7bf6":"code","19bdc48c":"code","c8dc373c":"code","56a4e31a":"code","65163563":"code","71336970":"code","a9030372":"code","90d5d39d":"code","e8c5ec9c":"code","3aec98e3":"code","40c22b51":"code","cb7f127f":"code","6c3701f1":"code","8ada657b":"code","f8359f7d":"code","db7443af":"code","a1d6b91f":"markdown","e49b53f8":"markdown","92b100c5":"markdown","15543705":"markdown","7e3a6f17":"markdown","e52adf8f":"markdown","69575779":"markdown","e6293473":"markdown","a504304d":"markdown","6c33ff6a":"markdown","2fbc667f":"markdown","aa999d27":"markdown","6c6ffaa4":"markdown","da2664c1":"markdown","ba5cb328":"markdown","c0ace29e":"markdown","b5e5bfb7":"markdown"},"source":{"d8ff459c":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#Load Iris.csv into a pandas dataFrame.\nhaberman = pd.read_csv(\"..\/input\/haberman.csv\",header=None)","f09b6d65":"# (Q) how many data-points and features?\nprint (haberman.shape)","f987a62a":"#(Q) What are the column names in our dataset?\nprint (haberman.columns)","fbc2be31":"#above there is No Specific Name for columns are Given,so we need to Specify columns Name first for Better Understanding.\n#(Q) How many data points for each class are present? \n#(or) How many Survival_Status for each species are present?\nhaberman.columns=['Age','Op_Year','axil_nodes','Surv_status']\nhaberman[\"Surv_status\"].value_counts()\n# balanced-dataset vs imbalanced datasets\n#Haberman is a Imbalanced dataset as the number of data points for class value 1 is Much greater than 2.","68215e3f":"#2-D scatter plot:\n#ALWAYS understand the axis: labels and scale.\n\nhaberman.plot(kind='scatter', x='Age', y='Op_Year') ;\nplt.show()\n\n#cannot make much sense out it. \n#What if we color the points by thier class-label\/flower-type.","1a31f2ae":"# 2-D Scatter plot with color-coding for each Survival type\/class.\n# Here 'sns' corresponds to seaborn. \nsns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman, hue=\"Surv_status\", height=6) \\\n   .map(plt.scatter, \"Age\", \"Op_Year\") \\\n   .add_legend();\nplt.show();\n# Very difficult to Seperate red Point and Green Point by Using Simple Line. \n# Can we draw multiple 2-D scatter plots for each combination of features?\n# How many cobinations exist? 3C2 = 3.","f2db7bf6":"# pairwise scatter plot: Pair-Plot\n# Dis-advantages: \n##Can be used when number of features are high.\n##Cannot visualize higher dimensional patterns in 3-D and 4-D. \n#Only possible to view 2D patterns.\ndef partition(x):\n    if x==1:\n        return 'Survived'\n    else:\n        return \"Not Survived\"\n#here we have taken 1 as Survived and 2 as Not Survived.     \nhaberman['Surv_status']=haberman['Surv_status'].map(partition)           \nplt.close();\nsns.set_style(\"whitegrid\");\nsns.pairplot(haberman,hue='Surv_status',height=4);\nplt.show()\n# NOTE: the diagnol elements are PDFs for each feature. PDFs are expalined below.","19bdc48c":"# What about 1-D scatter plot using just one feature?\n#1-D scatter plot of Age.\nimport numpy as np\nhaberman_Supervised = haberman.loc[haberman[\"Surv_status\"] == \"Survived\"];\nhaberman_NSupervised= haberman.loc[haberman[\"Surv_status\"] == \"Not Survived\"];\n\nplt.plot(haberman_Supervised[\"Age\"], np.zeros_like(haberman_Supervised[\"Age\"]), 'o')\nplt.plot(haberman_NSupervised[\"Age\"], np.zeros_like(haberman_NSupervised['Age']), 'o')\nplt.show()\n#Disadvantages of 1-D scatter plot: Very hard to make sense as points \n#are overlapping a lot.\n#Are there better ways of visualizing 1-D scatter plots?\nhaberman.columns","c8dc373c":"sns.FacetGrid(haberman, hue=\"Surv_status\", size=5) \\\n   .map(sns.distplot, \"Age\") \\\n   .add_legend();\nplt.show();\n\n","56a4e31a":"sns.FacetGrid(haberman, hue=\"Surv_status\", size=5) \\\n   .map(sns.distplot, \"Op_Year\") \\\n   .add_legend();\nplt.show();","65163563":"sns.FacetGrid(haberman, hue=\"Surv_status\", size=5) \\\n   .map(sns.distplot, \"axil_nodes\") \\\n   .add_legend();\nplt.show();","71336970":"#we have not much sense of heaving dist of plot as shown above.\n#we cannot create appropriate model by using single variate analysis of Distribution plot.","a9030372":"# Histograms and Probability Density Functions (PDF) using KDE\n# How to compute PDFs using counts\/frequencies of data points in each window.\n# How window width effects the PDF plot.\n\n\n# Interpreting a PDF:\n## why is it called a density plot?\n## Why is it called a probability plot?\n# Do some of these plots look like a bell-curve you studied in under-grad?\n# Gaussian\/Normal distribution.\n# What is \"normal\" about normal distribution?\n# e.g: Hieghts of male students in a class.\n# One of the most frequent distributions in nature.\n","90d5d39d":"\n# Need for Cumulative Distribution Function (CDF)\n# How to construct a CDF?\n# How to read a CDF?\n\n#Plot CDF of Age\n\ncounts, bin_edges = np.histogram(haberman_Supervised['Age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges);\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\n\n\ncounts, bin_edges = np.histogram(haberman_Supervised['Age'], bins=20, \n                                 density = True)\npdf = counts\/(sum(counts))\nplt.plot(bin_edges[1:],pdf);\n\nplt.show();\n","e8c5ec9c":"# Need for Cumulative Distribution Function (CDF)\n# How to construct a CDF?\n# How to read a CDF?\n\n#Plot CDF of Age\n\ncounts, bin_edges = np.histogram(haberman_Supervised['Age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\n\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\n\nplt.show();","3aec98e3":"# Plots of CDF of Age for various types of Varies Classes.\n\ncounts, bin_edges = np.histogram(haberman_Supervised['Age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\n# virginica\ncounts, bin_edges = np.histogram(haberman_NSupervised['Age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\nplt.show();","40c22b51":"#Mean, Variance, Std-deviation,  \nprint(\"Means:\")\nprint(np.mean(haberman_Supervised[\"Age\"]))\n#Mean with an outlier.\nprint(np.mean(np.append(haberman_Supervised[\"Age\"],1000)));\nprint(np.mean(haberman_NSupervised[\"Age\"]))\n\nprint(\"\\nStd-dev:\");\nprint(np.std(haberman_Supervised[\"Age\"]))\nprint(np.std(haberman_NSupervised[\"Age\"]))\n","cb7f127f":"#Median, Quantiles, Percentiles, IQR.\nprint(\"\\nMedians:\")\nprint(np.median(haberman_Supervised[\"Age\"]))\n#Median with an outlier\nprint(np.median(np.append(haberman_Supervised['Age'],5000)));\nprint(np.median(haberman_NSupervised[\"Age\"]))\n\n\nprint(\"\\nQuantiles:\")\nprint(np.percentile(haberman_Supervised[\"Age\"],np.arange(0, 100, 25)))\nprint(np.percentile(haberman_NSupervised[\"Age\"], np.arange(0, 100, 25)))\n\nprint(\"\\n90th Percentiles:\")\nprint(np.percentile(haberman_Supervised[\"Age\"],90))\nprint(np.percentile(haberman_NSupervised[\"Age\"],90))\n\nfrom statsmodels import robust\nprint (\"\\nMedian Absolute Deviation\")\nprint(robust.mad(haberman_Supervised[\"Age\"]))\nprint(robust.mad(haberman_Supervised[\"Age\"]))\n","6c3701f1":"\n#Box-plot with whiskers: another method of visualizing the  1-D scatter plot more intuitivey.\n# The Concept of median, percentile, quantile.\n# How to draw the box in the box-plot?\n# How to draw whiskers: [no standard way] Could use min and max or use other complex statistical techniques.\n# IQR like idea.\n\n#NOTE: IN the plot below, a technique call inter-quartile range is used in plotting the whiskers. \n#Whiskers in the plot below donot correposnd to the min and max values.\n\n#Box-plot can be visualized as a PDF on the side-ways.\n\nsns.boxplot(x='Surv_status',y='Age', data=haberman)\nplt.show()","8ada657b":"# A violin plot combines the benefits of the previous two plots \n#and simplifies them\n\n# Denser regions of the data are fatter, and sparser ones thinner \n#in a violin plot\n\nsns.violinplot(x=\"Surv_status\", y=\"Age\", data=haberman, size=8)\nplt.show()","f8359f7d":"\n\n#Def: Univariate, Bivariate and Multivariate analysis.\n","db7443af":"#2D Density plot, contors-plot\nsns.jointplot(x=\"Age\", y=\"axil_nodes\", data=haberman, kind=\"kde\");\nplt.show();\n","a1d6b91f":"# Multivariate probability density, contour plot.\n","e49b53f8":"# 2-D Scatter Plot","92b100c5":"# Median, Percentile, Quantile, IQR, MAD","15543705":"\n# Univariate, bivariate and multivariate analysis.","7e3a6f17":"* What is EDA?\n* Data-point\/vector\/Observation\n* Data-set.\n* Feature\/Variable\/Input-variable\/Dependent-varibale\n* Label\/Indepdendent-variable\/Output-varible\/Class\/Class-label\/Response label\n* Vector: 2-D, 3-D, 4-D,.... n-D\n\nQ. What is a 1-D vector: Scalar\n\n","e52adf8f":" Dataset: Haberman Dataset: https:\/\/archive.ics.uci.edu\/ml\/datasets\/Haberman's+Survival\n* A simple dataset to learn the basics.\n*  Objective: Classify a new Query Data as belonging to one of the 2 class given the 2 features.\n* Importance of domain knowledge.","69575779":"#**Haberman dataset**","e6293473":"## 3D Scatter plot","a504304d":"# Violin plots","6c33ff6a":"# Histogram, PDF, CDF","2fbc667f":"# Pair-plot","aa999d27":"# Mean, Variance and Std-dev","6c6ffaa4":"**Observation(s):**\n1. Using Age and Op_Year features, we cannot distinguish class_1(Green) from class_2(Red).\n2. Seperating class_1(Green) from class_2(Red) is much harder as they have considerable overlap.","da2664c1":"# Basic Terminology","ba5cb328":"# Plotting for Exploratory data analysis (EDA)","c0ace29e":"**Observations**\n1. No two feature can seperate Blue color and Red color point.\n2. we cannot prepare our model simple using IF else condition.","b5e5bfb7":"# Box plot and Whiskers"}}