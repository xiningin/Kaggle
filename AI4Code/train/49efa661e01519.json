{"cell_type":{"353fc238":"code","b897ee13":"code","c8d38152":"code","657257b8":"code","738720bd":"code","33ad35a7":"code","450fe256":"code","05b33105":"code","ab836b3e":"code","f87990ae":"code","1e2cf9e2":"code","3d79958a":"code","2196fe08":"code","638bd985":"code","9b75e2ca":"code","9a2421a8":"code","4e428498":"code","4318aeda":"code","59becb44":"code","ab7bcbe3":"code","b025e722":"code","5e991cbd":"code","84324899":"code","1e0e15c7":"code","b2e14911":"code","4dab02c5":"code","17fae6bc":"code","09c13c39":"code","2ca7bf57":"code","465ed0ce":"code","d833db83":"code","31850849":"code","871cb688":"code","18b2b0b9":"code","107aaeaf":"code","b76abf30":"code","81b0925a":"code","41ff9e79":"code","1e1e8a36":"code","943c6da0":"code","cbf2b639":"code","8a80deac":"code","56a25a33":"code","2d236217":"code","e3004083":"code","13bb575e":"code","8cb97f9c":"code","c70dfb73":"code","8ef86b4b":"code","460d701d":"code","e302f4da":"code","3be84735":"code","7edd162e":"code","6a120bb8":"code","d78f5724":"code","4b19c2d0":"code","9ed601a0":"code","4f91fd0e":"code","4cf9c1e5":"code","5b3ad4eb":"code","73cd929b":"code","0216cbdc":"code","946029e7":"code","72e76fb5":"code","7b5a6c11":"code","7de5122e":"code","d38054d7":"code","d63d510a":"code","a536912e":"code","71d9a2ba":"code","dc054bde":"code","cae80a8f":"code","2840f763":"code","1e633feb":"code","a4c42037":"code","b04f44b2":"code","a49537d7":"code","af728ab3":"code","1160327e":"code","0b4445b0":"code","61c1395b":"code","75ffee5e":"code","5bd4cf1b":"code","c27b3aff":"code","35842107":"code","aca993dc":"code","e77540a2":"code","73b9cbff":"code","916bd1e3":"code","54024df3":"code","f1b8ec93":"code","9daf5c52":"markdown","67ef1319":"markdown","d090a594":"markdown","843ffe14":"markdown","f954e18c":"markdown","f485b846":"markdown","8fa50675":"markdown","26a03fd9":"markdown","f0cd4563":"markdown","67a23643":"markdown","0285afec":"markdown"},"source":{"353fc238":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","b897ee13":"df=pd.read_csv(\"..\/input\/health-insurance-cross-sell-prediction\/train.csv\")","c8d38152":"df","657257b8":"df['Vehicle_Damage'] = df['Vehicle_Damage'].map({'Yes': 1, 'No':0})\ndf['Gender'] = df['Gender'].map({'Male': 1, 'Female': 0})\ndf['Vehicle_Age'] = df[\"Vehicle_Age\"].map({'> 2 Years': 2, '1-2 Year': 1,\"< 1 Year\":0})","738720bd":"df","33ad35a7":"df.info()","450fe256":"plt.subplots(figsize=(15,15))\nsns.heatmap(df.corr(),annot=True)","05b33105":"plt.hist(df.Age,histtype=\"bar\",bins=[20,31,41,51,61,80])","ab836b3e":"sns.distplot(df.Age)","f87990ae":"sns.catplot(y=\"Age\",x=\"Vehicle_Age\",kind=\"box\",hue=\"Previously_Insured\",data=df)","1e2cf9e2":"fig_dims = (80,50)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.countplot(x=\"Region_Code\",hue=\"Gender\",data=df)","3d79958a":"plt.figure(figsize=(100,30))\nsns.countplot(x=\"Policy_Sales_Channel\",data=df)","2196fe08":"fig_dims = (80,10)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.countplot(x=\"Age\",hue=\"Gender\",data=df)","638bd985":"sns.catplot(y=\"id\",x=\"Vehicle_Age\",kind=\"bar\",col=\"Gender\",data=df)\n#0 female","9b75e2ca":"df.describe(include=\"all\")","9a2421a8":"sns.catplot(y=\"Age\",x=\"Vehicle_Age\",col=\"Driving_License\",kind=\"box\",data=df)","4e428498":"A=df.groupby(['Gender','Response'])['id'].count().to_frame().rename(columns={'id':'count'}).reset_index()","4318aeda":"g = sns.catplot(x=\"Gender\", y=\"count\",col=\"Response\",\n                data=A, kind=\"bar\",\n                height=4, aspect=.7);","59becb44":"B=df.groupby([\"Gender\",\"Vehicle_Age\"])","ab7bcbe3":"T=B[\"id\"].count()\nT=T.to_frame().rename(columns={\"id\":\"counts\"}).reset_index()","b025e722":"Gen_VAge_count=sns.catplot(x=\"Gender\",y=\"counts\",col=\"Vehicle_Age\",data=T,kind=\"bar\",height=4, aspect=.7)","5e991cbd":"sns.catplot(x=\"Gender\",y=\"counts\",col=\"Vehicle_Age\",data=T,kind=\"bar\")\n#that is why we need the groupby method.","84324899":"print(df[\"Age\"].value_counts())\ndf.head(5)","1e0e15c7":"Group_Age=df.groupby([\"Age\",\"Vehicle_Damage\"])","b2e14911":"Group_Age_co=Group_Age[\"id\"].count().to_frame()\nGroup_Age_co=Group_Age_co.rename(columns={\"id\":\"count\"}).reset_index()\nGroup_Age_co","4dab02c5":"Young=Group_Age_co.loc[Group_Age_co[\"Age\"]<35]","17fae6bc":"sns.catplot(x=\"Age\",y=\"count\",col=\"Vehicle_Damage\",kind=\"bar\",data=Young)","09c13c39":"Damage=Young.loc[Young[\"Vehicle_Damage\"]==1]\nx=Damage[\"count\"].sum()\nNo_Damage=Young.loc[Young[\"Vehicle_Damage\"]==0]\ny=No_Damage[\"count\"].sum()\nprint(x,y)","2ca7bf57":"plt.pie([x,y],labels=[\"Damaged\",\"Not_Damaged\"],shadow=True,autopct=\"%.2f\")\nplt.title(\"young people having Damaged and not damaged car\")\nplt.show","465ed0ce":"Group_Age_DL=df.groupby([\"Age\",\"Driving_License\"])[\"id\"].count()\nGroup_Age_DL.to_frame","d833db83":"GADL=Group_Age_DL.reset_index()","31850849":"GADL=GADL.rename(columns={\"id\":\"count\"})","871cb688":"GADL","18b2b0b9":"Young_DL=GADL.loc[GADL[\"Age\"]<35]\nsns.catplot(x=\"Age\",y=\"count\",col=\"Driving_License\",data=Young_DL,kind=\"bar\")\nx_1=Young_DL.loc[Young_DL[\"Driving_License\"]==0][\"count\"].sum()\ny_1=Young_DL.loc[Young_DL[\"Driving_License\"]==1][\"count\"].sum()\nprint(x_1,y_1)","107aaeaf":"df.head(5)","b76abf30":"Gen_PI=df.groupby([\"Gender\",\"Previously_Insured\"])[\"id\"].count().to_frame().rename(columns={\"id\":\"counts\"}).reset_index()\nGen_PI.info()\nGen_PI","81b0925a":"F_NI=Gen_PI.loc[(Gen_PI[\"Gender\"]==0)&(Gen_PI[\"Previously_Insured\"]==0)][\"counts\"].sum()\nF_I=Gen_PI.loc[(Gen_PI[\"Gender\"]==0)&(Gen_PI[\"Previously_Insured\"]==1)][\"counts\"].sum()\nM_NI=Gen_PI.loc[(Gen_PI[\"Gender\"]==1)&(Gen_PI[\"Previously_Insured\"]==0)][\"counts\"].sum()\nM_I=Gen_PI.loc[(Gen_PI[\"Gender\"]==1)&(Gen_PI[\"Previously_Insured\"]==1)][\"counts\"].sum()","41ff9e79":"sns.catplot(x=\"Gender\",y=\"counts\",col=\"Previously_Insured\",kind=\"bar\",data=Gen_PI)","1e1e8a36":"df[\"Annual_Premium\"].value_counts()","943c6da0":"sns.relplot(x=\"Annual_Premium\",y=\"id\",size=\"Vehicle_Damage\",col=\"Vehicle_Age\",data=df,kind=\"scatter\")","cbf2b639":"df.Vintage.unique()\nlen(df.Vintage.unique())","8a80deac":"G1=df.groupby([\"Response\",\"Vintage\"])\n\nG1=G1.id.count().to_frame().rename(columns={\"id\":\"count\"}).reset_index()\nG1","56a25a33":"G1_0R=G1.loc[G1[\"Response\"]==0]\nlen(G1_0R.Vintage.unique())","2d236217":"sns.relplot(x=\"Vintage\",y=\"count\",data=G1_0R)","e3004083":"G1_1R=G1.loc[G1[\"Response\"]==1]\nlen(G1_1R.Vintage.unique())","13bb575e":"sns.relplot(x=\"Vintage\",y=\"count\",data=G1_1R)","8cb97f9c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","c70dfb73":"X=df.drop(\"Response\",axis=1)\ny=df[\"Response\"]","8ef86b4b":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=42)","460d701d":"y_train","e302f4da":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=42)","3be84735":"X_train.head()","7edd162e":"from imblearn.combine import SMOTEENN\nsmk = SMOTEENN()\nX_res,y_res=smk.fit_resample(X_train,y_train)\nX_res.shape,y_res.shape","6a120bb8":"model=LogisticRegression()\nmodel.fit(X_res,y_res)","d78f5724":"y_pred=model.predict(X_test)","4b19c2d0":"from sklearn import metrics\nprint(metrics.classification_report(y_test, y_pred))","9ed601a0":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,y_pred)","4f91fd0e":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)","4cf9c1e5":"y_predict=model.predict_proba(X_test)","5b3ad4eb":"y_predict","73cd929b":"from sklearn import metrics\ncm=metrics.confusion_matrix(y_test, y_pred, labels=[1, 0])\n\ndf_cm = pd.DataFrame(cm, index = [i for i in [\"1\",\"0\"]],\n                  columns = [i for i in [\"Predict 1\",\"Predict 0\"]])\nplt.figure(figsize = (7,5))\nsns.heatmap(df_cm, annot=True,fmt='g')","0216cbdc":"from sklearn.metrics import roc_auc_score\nroc_auc_score(y_test,y_predict[:,1])","946029e7":"fpr,tpr,threshold=metrics.roc_curve(y_test,y_predict[:,1])\nplt.plot(fpr,tpr)\nplt.xlim([0.0,1.0])\nplt.ylim([0.0,1.0])\nplt.title(\"ROC curve for Logisticclassifier\")\nplt.xlabel(\"FPR(1-specificity)\")\nplt.ylabel(\"TPR(Senstivity)\")\nplt.grid(True)","72e76fb5":"from sklearn.ensemble import RandomForestClassifier\nrfcl=RandomForestClassifier(n_estimators=15,random_state=42,max_features=11)\nrfcl=rfcl.fit(X_res,y_res)","7b5a6c11":"y_rf=rfcl.predict(X_test)","7de5122e":"print(rfcl.score(X_test,y_test))","d38054d7":"y_rf=rfcl.predict(X_test)","d63d510a":"from sklearn import metrics\nprint(metrics.classification_report(y_test, y_rf))","a536912e":"cm=metrics.confusion_matrix(y_test,y_rf,labels=[0,1])\ndf_cm=pd.DataFrame(cm,index=[i for i in [\"No\",\"Yes\"]],\n                  columns=[i for i in [\"No\",\"Yes\"]])\nplt.figure(figsize=(7,5))\nsns.heatmap(df_cm,annot=True,fmt=\"g\")","71d9a2ba":"y_ptpr=rfcl.predict_proba(X_test)[:,1]\ny_ptpr","dc054bde":"from sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc\n\nplt.style.use(\"ggplot\")\n\n# Compute fpr, tpr, thresholds and roc auc\nfpr, tpr, thresholds = roc_curve(y_test, y_ptpr)\nroc_auc = auc(fpr, tpr)\n\n# Plot ROC curve\nplt.plot(fpr, tpr, label='ROC curve (area = %0.2f)' % roc_auc)\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\nplt.xlabel('False Positive Rate or (1 - Specifity)')\nplt.ylabel('True Positive Rate or (Sensitivity)')\nplt.title('Receiver Operating Characteristic')\nplt.legend(loc=\"lower right\")\nplt.grid(True)","cae80a8f":"import pickle","2840f763":"saved_model=pickle.dumps(rfcl)","1e633feb":"for_test_set=pickle.loads(saved_model)","a4c42037":"for_test_set.predict(X_test)","b04f44b2":"df2=pd.read_csv(\"..\/input\/health-insurance-cross-sell-prediction\/test.csv\")","a49537d7":"df2['Vehicle_Damage'] = df2['Vehicle_Damage'].map({'Yes': 1, 'No':0})\ndf2['Gender'] = df2['Gender'].map({'Male': 1, 'Female': 0})\ndf2['Vehicle_Age'] = df2[\"Vehicle_Age\"].map({'> 2 Years': 2, '1-2 Year': 1,\"< 1 Year\":0})","af728ab3":"df2","1160327e":"X_2test=df2","0b4445b0":"X_2test","61c1395b":"y_predtest=for_test_set.predict(X_2test)","75ffee5e":"y_predprobtest=for_test_set.predict_proba(X_2test)","5bd4cf1b":"y_predtest","c27b3aff":"import numpy as np\nnp.unique(y_predtest, axis=0)","35842107":"submission = pd.DataFrame({'id':df2['id']\n                           ,'Response':y_predtest})\n\n#Visualize the first 5 rows\nsubmission.tail(5)","aca993dc":"filename = 'submission.csv'\nsubmission.to_csv(filename,index=False)\nprint('Saved file: ' + filename)","e77540a2":"Sub=pd.read_csv(\"submission.csv\")\nSub","73b9cbff":"Sub.info()","916bd1e3":"Sub[\"Response\"].value_counts()","54024df3":"df.info()","f1b8ec93":"df[\"Response\"].value_counts()","9daf5c52":"### Logistic Regression","67ef1319":"# Data Visualization","d090a594":"From this it is clear that male and female have almost same in each type of car..one can conclude that the male feamle follow almost same patter to buy car.","843ffe14":"Highest sales from channel 152","f954e18c":"# Saving submission","f485b846":"# Using saved model on test","8fa50675":"Maximum in Region 28,8,46,41,15,11(descending)\nminimum in 51 and 52\n\nYes..we need to check what is going on their sales department","26a03fd9":"### Random Forest","f0cd4563":"# Saving Models","67a23643":"in young age group feamles are the car owners and as the age increase males are owner of the car","0285afec":"Pretty Amazing, you can see younger people buy their car earlier but get the license later"}}