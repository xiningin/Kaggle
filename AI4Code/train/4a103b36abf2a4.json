{"cell_type":{"c84c4c10":"code","ed978e9a":"code","3310384e":"code","d6927850":"code","3279adcb":"code","4611c808":"code","aaa12614":"code","2fe9dbf6":"code","ddcabec3":"code","6fcf5bc9":"code","3751f2cd":"code","d3501304":"code","a005aec8":"code","df55959e":"code","c5d23fa5":"code","a8f2141b":"code","8923d984":"code","07259aab":"code","2bf9755f":"code","c0de4426":"code","6d0755c5":"code","de6bfd2d":"code","995ebece":"code","c7060dc5":"code","2829cc73":"code","ff68cfd1":"code","a390a517":"code","6e0fab05":"code","acb727ee":"code","ef7b3ff5":"code","ea421895":"code","da6a2fb0":"code","39fd5e3c":"code","05844231":"code","63c9e7bb":"code","6f96cbf7":"code","5f3c0a0a":"code","ecadb93d":"code","f172ae6e":"code","bbc32dcb":"code","320574f2":"code","f274c34a":"code","045518f3":"code","8740fc22":"code","ce7fa606":"code","e7537df9":"code","c3c88959":"code","210d8ffa":"code","1c7c2840":"code","6ad6785c":"code","f63b4f12":"code","30ff04f6":"code","4d93da16":"code","4a47bf7a":"code","134126e5":"code","9e93b51d":"code","c11df8c6":"code","739a4b6b":"code","49904262":"code","18175bcf":"code","5be4a6ae":"code","4c440da7":"code","708f1ee4":"code","e2a7bbcd":"code","72fdacb0":"markdown","a5d28d12":"markdown","d3f8993a":"markdown","ceb5e15a":"markdown","182a5761":"markdown","785b04b2":"markdown","cf54207e":"markdown","b8e5b8f5":"markdown","526a8764":"markdown","1cd88e94":"markdown","d0933c20":"markdown","f8ce8c57":"markdown","00e8f2db":"markdown","680dc4ab":"markdown","3c1258cf":"markdown","03ff5b62":"markdown","2a3fcd55":"markdown","76be60de":"markdown","e5a1936c":"markdown","0b02acd4":"markdown","105264b8":"markdown","01439083":"markdown","66b396f7":"markdown","9df7606f":"markdown","a51cc52b":"markdown","e4843b33":"markdown","1c717ca4":"markdown","f940cbd5":"markdown","40cb75cf":"markdown","ea1e4762":"markdown","44afad25":"markdown","719cc976":"markdown","70b635a4":"markdown","2431e758":"markdown","379183a6":"markdown","1c831d03":"markdown","25b520a3":"markdown","4f78c2fa":"markdown","73f26d3e":"markdown","c1e1c0e7":"markdown","b4209469":"markdown","2e987aa1":"markdown","02f530f7":"markdown","7da54572":"markdown","473a87a6":"markdown","23230de0":"markdown","2576e43d":"markdown","4cb8ec2b":"markdown","5f73457b":"markdown","bad1999b":"markdown","56286a51":"markdown"},"source":{"c84c4c10":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport plotly.express as px\nfrom datetime import date, timedelta\nfrom sklearn.cluster import KMeans\nfrom fbprophet import Prophet\nfrom fbprophet.plot import plot_plotly, add_changepoints_to_plot\nimport plotly.offline as py\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nimport statsmodels.api as sm\nfrom keras.models import Sequential\nfrom keras.layers import LSTM,Dense\nfrom keras.layers import Dropout\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.preprocessing.sequence import TimeseriesGenerator\n","ed978e9a":"path = '\/kaggle\/input\/coronavirusdataset\/'\npatient_data_path = path + 'patient.csv'\nroute_data_path = path + 'route.csv'\ntime_data_path = path + 'time.csv'\n\ndf_patient = pd.read_csv(patient_data_path)\ndf_route = pd.read_csv(route_data_path)\ndf_time = pd.read_csv(time_data_path)","3310384e":"df_patient.head()","d6927850":"df_patient.isna().sum()\n","3279adcb":"df_patient['birth_year'] = df_patient.birth_year.fillna(0.0).astype(int)\ndf_patient['birth_year'] = df_patient['birth_year'].map(lambda val: val if val > 0 else np.nan)","4611c808":"df_patient.confirmed_date = pd.to_datetime(df_patient.confirmed_date)\ndaily_count = df_patient.groupby(df_patient.confirmed_date).patient_id.count()\naccumulated_count = daily_count.cumsum()\n\n\n","aaa12614":"df_patient['age'] = 2020 - df_patient['birth_year'] ","2fe9dbf6":"import math\ndef group_age(age):\n    if age >= 0: # not NaN\n        if age % 10 != 0:\n            lower = int(math.floor(age \/ 10.0)) * 10\n            upper = int(math.ceil(age \/ 10.0)) * 10 - 1\n            return f\"{lower}-{upper}\"\n        else:\n            lower = int(age)\n            upper = int(age + 9) \n            return f\"{lower}-{upper}\"\n    return \"Unknown\"\n\n\ndf_patient[\"age_range\"] = df_patient[\"age\"].apply(group_age)","ddcabec3":"df_patient.head()","6fcf5bc9":"patient=df_patient","3751f2cd":"date_cols = [\"confirmed_date\", \"released_date\", \"deceased_date\"]\nfor col in date_cols:\n    patient[col] = pd.to_datetime(patient[col])","d3501304":"patient[\"time_to_release_since_confirmed\"] = patient[\"released_date\"] - patient[\"confirmed_date\"]\n\npatient[\"time_to_death_since_confirmed\"] = patient[\"deceased_date\"] - patient[\"confirmed_date\"]\npatient[\"duration_since_confirmed\"] = patient[[\"time_to_release_since_confirmed\", \"time_to_death_since_confirmed\"]].min(axis=1)\npatient[\"duration_days\"] = patient[\"duration_since_confirmed\"].dt.days\nage_ranges = sorted(set([ar for ar in patient[\"age_range\"] if ar != \"Unknown\"]))\npatient[\"state_by_gender\"] = patient[\"state\"] + \"_\" + patient[\"sex\"]\n","a005aec8":"accumulated_count.plot()\nplt.title('Accumulated Confirmed Count');","df55959e":"infected_patient = patient.shape[0]\nrp = patient.loc[patient[\"state\"] == \"released\"].shape[0]\ndp = patient.loc[patient[\"state\"] == \"deceased\"].shape[0]\nip = patient.loc[patient[\"state\"]== \"isolated\"].shape[0]\nrp=rp\/patient.shape[0]\ndp=dp\/patient.shape[0]\nip=ip\/patient.shape[0]\nprint(\"The percentage of recovery is \"+ str(rp*100) )\nprint(\"The percentage of deceased is \"+ str(dp*100) )\nprint(\"The percentage of isolated is \"+ str(ip*100) )\n","c5d23fa5":"states = pd.DataFrame(patient[\"state\"].value_counts())\nstates[\"status\"] = states.index\nstates.rename(columns={\"state\": \"count\"}, inplace=True)\n\nfig = px.pie(states,\n             values=\"count\",\n             names=\"status\",\n             title=\"Current state of patients\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"value+percent+label\")\nfig.show()","a8f2141b":"released = df_patient[df_patient.state == 'released']\nreleased.head()","8923d984":"isolated_state = df_patient[df_patient.state == 'isolated']\nisolated_state.head()","07259aab":"dead = df_patient[df_patient.state == 'deceased']\ndead.head()","2bf9755f":"plt.figure(figsize=(10,6))\nsns.set_style(\"darkgrid\")\nplt.title(\"Age distribution of the released\")\nsns.kdeplot(data=released['age'], shade=True)","c0de4426":"plt.figure(figsize=(10,6))\nsns.set_style(\"darkgrid\")\nplt.title(\"Age distribution of the isolated\")\nsns.kdeplot(data=isolated_state['age'], shade=True)","6d0755c5":"plt.figure(figsize=(10,6))\nsns.set_style(\"darkgrid\")\nplt.title(\"Age distribution of the deceased\")\nsns.kdeplot(data=dead['age'], shade=True)","de6bfd2d":"male_dead = dead[dead.sex=='male']\nfemale_dead = dead[dead.sex=='female']","995ebece":"plt.figure(figsize=(10,6))\nsns.set_style(\"darkgrid\")\nplt.title(\"Age distribution of the deceased by gender\")\nsns.kdeplot(data=female_dead['age'], label=\"Women\", shade=True)\nsns.kdeplot(data=male_dead['age'],label=\"Male\" ,shade=True)\n\n","c7060dc5":"plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.distplot(a=male_dead['age'], label=\"Men\", kde=False)\nsns.distplot(a=female_dead['age'], label=\"Women\", kde=False)\nplt.title(\"Age distribution of the deceased by sex\")\nplt.legend()","2829cc73":"sns.kdeplot(data=dead['age'],label='deceased', shade=True)\nsns.kdeplot(data=released['age'],label='released', shade=True)\nsns.kdeplot(data=isolated_state['age'],label='released', shade=True)","ff68cfd1":"plt.figure(figsize=(15, 5))\nplt.title('Sex')\ndead.sex.value_counts().plot.bar();","a390a517":"plt.figure(figsize=(15,5))\nplt.title('Infection reason')\ndf_patient.infection_reason.value_counts().plot.bar();","6e0fab05":"sns.set(rc={'figure.figsize':(5,5)})\nsns.countplot(x=df_patient['state'].loc[\n    (df_patient['infection_reason']=='contact with patient')\n])","acb727ee":"sns.set(rc={'figure.figsize':(5,5)})\nsns.countplot(x=df_patient['state'].loc[(df_patient['sex']==\"male\")])","ef7b3ff5":"sns.set(rc={'figure.figsize':(5,5)})\nsns.countplot(x=df_patient['state'].loc[(df_patient['sex']==\"female\")])","ea421895":"age_gender_hue_order =[\"isolated_female\", \"released_female\", \"deceased_female\",\n                       \"isolated_male\", \"released_male\", \"deceased_male\"]\ncustom_palette = sns.color_palette(\"Reds\")[3:6] + sns.color_palette(\"Blues\")[2:5]\n\nplt.figure(figsize=(12, 8))\nsns.countplot(x = \"age_range\",\n              hue=\"state_by_gender\",\n              order=age_ranges,\n              hue_order=age_gender_hue_order,\n              palette=custom_palette,\n              data=patient)\nplt.title(\"State by gender and age\", fontsize=16)\nplt.xlabel(\"Age range\", fontsize=16)\nplt.ylabel(\"Count\", fontsize=16)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.legend(loc=\"upper right\")\nplt.show()","da6a2fb0":"sns.set_style(\"whitegrid\")\nsns.FacetGrid(df_patient, hue = 'state', size = 10)\\\n.map(plt.scatter, 'age', 'region')\\\n.add_legend()\nplt.title('Region by age and state')\nplt.show()","39fd5e3c":"df_route.head()","05844231":"df_route.isna().sum()","63c9e7bb":"clus=df_route.loc[:,['id','latitude','longitude']]\nclus.head(10)","6f96cbf7":"K_clusters = range(1,8)\nkmeans = [KMeans(n_clusters=i) for i in K_clusters]\nY_axis = df_route[['latitude']]\nX_axis = df_route[['longitude']]\nscore = [kmeans[i].fit(Y_axis).score(Y_axis) for i in range(len(kmeans))]\nplt.plot(K_clusters, score)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Score')\nplt.show()\n\n","5f3c0a0a":"kmeans = KMeans(n_clusters = 4, init ='k-means++')\nkmeans.fit(clus[clus.columns[1:3]])\nclus['cluster_label'] = kmeans.fit_predict(clus[clus.columns[1:3]])\ncenters = kmeans.cluster_centers_\nlabels = kmeans.predict(clus[clus.columns[1:3]])","ecadb93d":"clus.plot.scatter(x = 'latitude', y = 'longitude', c=labels, s=50, cmap='viridis')\nplt.scatter(centers[:, 0], centers[:, 1], c='black', s=100, alpha=0.5)","f172ae6e":"\n import folium\nsouthkorea_map = folium.Map(location=[36.55,126.983333 ], zoom_start=7,tiles='Stamen Toner')\n\nfor lat, lon,city in zip(df_route['latitude'], df_route['longitude'],df_route['city']):\n    folium.CircleMarker([lat, lon],\n                        radius=5,\n                        color='red',\n                      popup =('City: ' + str(city) + '<br>'),\n                        fill_color='red',\n                        fill_opacity=0.7 ).add_to(southkorea_map)\nsouthkorea_map","bbc32dcb":"df_route","320574f2":"plt.figure(figsize=(15,5))\nplt.title('Number patients in city')\ndf_route.city.value_counts().plot.bar();","f274c34a":"plt.figure(figsize=(15,5))\nplt.title('Number patients in province')\ndf_route.province.value_counts().plot.bar();","045518f3":"plt.figure(figsize=(15,5))\nplt.title('Visit')\ndf_route.visit.value_counts().plot.bar();\n","8740fc22":"plt.figure(figsize=(12, 8))\nsns.boxplot(x=\"state\",\n            y=\"duration_days\",\n            order=[\"released\", \"deceased\"],\n            data=patient)\nplt.title(\"Time from confirmation to release or death\", fontsize=16)\nplt.xlabel(\"State\", fontsize=16)\nplt.ylabel(\"Days\", fontsize=16)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.show()","ce7fa606":"order_duration_sex = [\"female\", \"male\"]\nplt.figure(figsize=(12, 8))\nsns.boxplot(x=\"sex\",\n            y=\"duration_days\",\n            order=order_duration_sex,\n            hue=\"state\",            \n            hue_order=[\"released\", \"deceased\"],\n            data=patient)\nplt.title(\"Time from confirmation to release or death by gender\",\n          fontsize=16)\nplt.xlabel(\"Gender\", fontsize=16)\nplt.ylabel(\"Days\", fontsize=16)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.show()","e7537df9":"order_duration_age = sorted(patient[\"age_range\"].unique())[:-1]\nplt.figure(figsize=(12, 8))\nsns.boxplot(x=\"age_range\",\n            y=\"duration_days\",\n            order=order_duration_age,\n            hue=\"state\",\n            hue_order=[\"released\", \"deceased\"],\n            data=patient)\nplt.title(\"Time from confirmation to release or death\", fontsize=16)\nplt.xlabel(\"Age Range\", fontsize=16)\nplt.ylabel(\"Days\", fontsize=16)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.show()","c3c88959":"data = daily_count.resample('D').first().fillna(0).cumsum()\ndata = data[20:]\nx = np.arange(len(data)).reshape(-1, 1)\ny = data.values","210d8ffa":"from sklearn.neural_network import MLPRegressor\nmodel = MLPRegressor(hidden_layer_sizes=[32, 32, 10], max_iter=50000, alpha=0.0005, random_state=26)\n_=model.fit(x, y)","1c7c2840":"test = np.arange(len(data)+7).reshape(-1, 1)\npred = model.predict(test)\nprediction = pred.round().astype(int)\nweek = [data.index[0] + timedelta(days=i) for i in range(len(prediction))]\ndt_idx = pd.DatetimeIndex(week)\npredicted_count = pd.Series(prediction, dt_idx)","6ad6785c":"accumulated_count.plot()\npredicted_count.plot()\nplt.title('Prediction of Accumulated Confirmed Count')\nplt.legend(['current confirmd count', 'predicted confirmed count'])\nplt.show()","f63b4f12":"prophet= pd.DataFrame(data)\nprophet\npr_data = prophet.reset_index()\npr_data.columns = ['ds','y']\npr_data.head()","30ff04f6":"m=Prophet()\nm.fit(pr_data)\nfuture=m.make_future_dataframe(periods=365)\nforecast=m.predict(future)\nforecast","4d93da16":"figure = plot_plotly(m, forecast)\npy.iplot(figure) \n\nfigure = m.plot(forecast,xlabel='Date',ylabel='Confirmed Count')\n","4a47bf7a":"figure=m.plot_components(forecast)\n","134126e5":"confirm_cs = pd.DataFrame(data).cumsum()\narima_data = confirm_cs.reset_index()\narima_data.columns = ['confirmed_date','count']\narima_data.head()","9e93b51d":"model = ARIMA(arima_data['count'].values, order=(1, 2, 1))\nfit_model = model.fit(trend='c', full_output=True, disp=True)\nfit_model.summary()\n","c11df8c6":"fit_model.plot_predict()\nplt.title('Forecast vs Actual')\npd.DataFrame(fit_model.resid).plot()\n","739a4b6b":"forcast = fit_model.forecast(steps=5)\npred_y = forcast[0].tolist()\npd.DataFrame(pred_y)","49904262":"dataset = pd.DataFrame(data)\ndataset.columns = ['Confirmed']\ndataset.head()","18175bcf":"data = np.array(dataset).reshape(-1, 1)\ntrain_data = dataset[:len(dataset)-5]\ntest_data = dataset[len(dataset)-5:]","5be4a6ae":"scaler = MinMaxScaler()\nscaler.fit(train_data)\nscaled_train_data = scaler.transform(train_data)\nscaled_test_data = scaler.transform(test_data)\nn_input =5\nn_features =1\n                             \ngenerator = TimeseriesGenerator(scaled_train_data,scaled_train_data, length=n_input, batch_size=1)\n\nlstm_model = Sequential()\nlstm_model.add(LSTM(units = 50, return_sequences = True, input_shape = (n_input, n_features)))\nlstm_model.add(Dropout(0.2))\nlstm_model.add(LSTM(units = 50, return_sequences = True))\nlstm_model.add(Dropout(0.2))\nlstm_model.add(LSTM(units = 50))\nlstm_model.add(Dropout(0.2))\nlstm_model.add(Dense(units = 1))\nlstm_model.compile(optimizer = 'adam', loss = 'mean_squared_error')\nlstm_model.fit(generator, epochs = 30)","4c440da7":"losses_lstm = lstm_model.history.history['loss']\nplt.figure(figsize = (30,4))\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.xticks(np.arange(0,100,1))\nplt.plot(range(len(losses_lstm)), losses_lstm)","708f1ee4":"lstm_predictions_scaled = []\n\nbatch = scaled_train_data[-n_input:]\ncurrent_batch = batch.reshape((1, n_input, n_features))\n\nfor i in range(len(test_data)):   \n    lstm_pred = lstm_model.predict(current_batch)[0]\n    lstm_predictions_scaled.append(lstm_pred) \n    current_batch = np.append(current_batch[:,1:,:],[[lstm_pred]],axis=1)","e2a7bbcd":"prediction = pd.DataFrame(scaler.inverse_transform(lstm_predictions_scaled))\nprediction.head()","72fdacb0":"**Time from confirmation to release or death**","a5d28d12":"**Looking into patient data**","d3f8993a":"**Patient in city**","ceb5e15a":"**Death by gender**","182a5761":"**Graphical representation of clusters**","785b04b2":"**Prophet**","cf54207e":"**Prediction**","b8e5b8f5":"                                            **Current Scenario**\nThe accumulated confirmation count in South korea is increasing exponentially after 22nd of feb. Till the date 15th of feb 2020 it was negligible. There are many reason for infection but most cases have similar reasons that they have visited to wuhan. South Korea has raised its coronavirus alert to the \"highest level\" as confirmed case numbers keep rising.South Korea has seen the largest number of confirmed cases after China. More than 4,800 people have confirmed the infection of coronavirus.  As the data set says the western part of the country is more affected. Daegu and Gyeongsangbukdo region of South Korea are highly infected by the coronavirus","526a8764":"**Time from confirmation to release or death by gender**","1cd88e94":"**Checking if is there any null value**","d0933c20":"**People who released**","f8ce8c57":"**Age distribution of the released**","00e8f2db":"**State of patient(male and female) vs age **","680dc4ab":"**Autoregressive integrated moving average(Arima)**","3c1258cf":"**State of Patient**","03ff5b62":"**Regression Model**","2a3fcd55":"**Age distribution of death**","76be60de":"**State of female patient**","e5a1936c":"**Reason for the infection**","0b02acd4":"**Checking for number of cluster**","105264b8":"**Region by age and state**","01439083":"**Libraries**","66b396f7":"On the world map it can clearly be seen that the western side of the country is more affected. The number of cases from Daegu and Gyeongbuk accounts for almost 88 percent of the total infections. This is closely linked to a religious group called Shincheonji Church of Jesus\ue001 based in Daegu, where a collective infection has occurred and is spreading throughout the country.\ue001  \ue001About 60 percent of all infections in South Korea were related to Shincheonji. There have also been several deaths from a hospital linked to this religious group. The government of South Korea announced that it will test all over 200 thousand members of the group for the coronavirus. Over 70 countries are restricting entry from South korea. South Korea has the most cases after China.  South Korea reported the first case on 19th of feb.The cases increased multifold on 21 February, the majority of them being reported in the city of Daegu. The increase was due to community spread, traced to a church in Shincheonji, alarming the Korean health authorities. Singapore too is facing a similar surge in community spread of the novel coronavirus. Seoul city mayor Park Won-soon demanded to prosecute some of the key leaders of the Shincheonji Church for hiding the identities of the suspects during contact tracing investigation.The alert level was further raised to Orange (Level 3) on 28 January. Furthermore, 29 national designated hospitals were announced to isolate the confirmed and suspected cases","9df7606f":"**Comparison of released and deceased by age**","a51cc52b":"**Looking route data**","e4843b33":"**Preprocessing**","1c717ca4":"**People who are in isolated state**","f940cbd5":"**Making data ready for prediction**","40cb75cf":"**Reading Data**","ea1e4762":"**Age distribution of isolated person**","44afad25":"**We will verify our clusters by putting values in world map by making use of folium library**","719cc976":"**Patients in Provience\/State**","70b635a4":"The first case of coronavirus in the country on January 20. At the moment, 31 patients were discharged from hospitals after making a full recovery from the virus and 22 deaths are reported. In total, over 105 thousand people have been tested until now. ","2431e758":"There are many effective reasons for the coronavirus infection. There is no specific antiviral treatment recommended for COVID-19. People with COVID-19 should receive supportive care to help relieve symptoms. For severe cases, treatment should include care to support vital organ functions.People who think they may have been exposed to COVID-19 should contact their healthcare provider immediately.  According to the dataset the major reason for the infection is being in contact with patients. There are so many different reasons for the cause of infection which are visits to countries and regions like daegu, wuhan, thailand, china, vietnam, italy.","379183a6":"**Prevention**  \n   To avoid the critical situation people are suggested to do following things  \n*     Avoid contact with people who are sick. \n*     Avoid touching your eyes, nose, and mouth. \n*     Stay home when you are sick. \n*     Cover your cough or sneeze with a tissue, then throw the tissue in the trash. \n*    Clean and disinfect frequently touched objects and surfaces using a regular household  \n*    Wash your hands often with soap and water, especially after going to the bathroom; before eating; and after blowing     your nose, coughing, or sneezing. If soap and water are not readily available, use an alcohol-based hand sanitizer.","1c831d03":"**State of male patient**","25b520a3":"As in this graph, after 4 score go to constant value, so we will go with 4 clusters","4f78c2fa":"                                         ** Age distribution of deceased **\n Here, the graph shows the age distribution of the deceased by gender. We can clearly see older people are more likely to be infected, especially older people with underlying lung disease and having problems in their respiration. The age group of 60 to 70 yr are more infected than the rest of the population. As  Dr. Steven Gambert, professor of medicine and director of geriatrics at the University of Maryland School of Medicine says \u201c Older people have  higher risk of underlying health conditions, older people are already under physical stress, and their immune systems, even if not significantly compromised, simply do not have the same \u201cability to fight viruses and bacteria\u201d","73f26d3e":"**Age distribution of death by gender**","c1e1c0e7":"1.  **id** the ID of the patient (n-th confirmed patient)\n2.  **sex** the sex of the patient\n3.  **birth_year** the birth year of the patient\n4.  **country** the country of the patient\n5.  **region** the region of the patient\n6.  **group** the collective infection\n7.  **infection_reason** the reason of infection\n8.  **infection_order** the order of infection\n9.  **infected_by** the ID of who has infected the patient\n10. **contact_number** the number of contacts with people\n11. **confirmed_date** the date of confirmation\n12. **released_date** the date of discharge\n13. **deceased_date** the date of decease\n14. **state** isolated \/ released \/ deceased","b4209469":"As the suspects of coronavirus are kept under observation. After the observation it has been found that the people who are released or who have great chances of recovery had sustained  10-20 days in hospitals. On the other hand the people who are deceased were found dead in 0-4 days.The deadly Coronavirus which has spread to more than 70 countries, is wreaking havoc globally, killing over 3,000 people and infecting almost 90,000 people since first detected in China in December last year. While Australia and the US reported their first deaths yesterday,","2e987aa1":"**Patient who died**","02f530f7":"**Places where people get affected**","7da54572":"**Current State of Patient**","473a87a6":"                                        **Gender distribution of deceased **\nThe graph shows the age distribution of deceased gender where men are more likely to die from coronavirus  than women. \ue001New research  has found that men, particularly middle-aged and older men, are having a harder time fighting off the virus than women. Chinese researchers found that while the infection rate among men and women is the same, the death rate among men is 2.8% compared with 1.7% for women. As there are a few reasons men are more likely to die from the new coronavirus. Women have a heightened immune response. During \ue001Middle East respiratory syndrome coronavirus\ue001 32% of men died of the infection compared with 25.8% of women. ","23230de0":"**LSTM**","2576e43d":"**Affected place in world map**","4cb8ec2b":"**Forecasting future Values**","5f73457b":"**Time from confirmation to release or death**","bad1999b":"**Graphical Representation of Prediction**","56286a51":"**Graphical representatoin of current confirmed and predicted confirmed**"}}