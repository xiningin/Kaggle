{"cell_type":{"e80d279b":"code","3bf3b7d3":"code","e3c0091d":"code","2c918c18":"code","9b8f3736":"code","5f15877d":"code","1a7228d6":"code","7e0bdac8":"code","796bf164":"code","3307e373":"code","cac3b652":"code","0f93a8e7":"code","fd4cc2ea":"code","4182a7f8":"code","1cfd261d":"code","448b9a08":"code","3180b933":"code","f171ff25":"code","2be5a2ac":"code","ae153e01":"code","9f4f84cf":"code","7deb99c2":"code","ee2c32c2":"code","e4a4f957":"code","3f9c2e7d":"code","62d6dc61":"code","2a5c072e":"code","5d32d73f":"code","910c2ca2":"code","f5675f9b":"code","c364a4cc":"code","5351e6bd":"code","0b5bf29f":"code","477a5139":"code","754af220":"code","06498ff0":"code","9c7fdfae":"code","6c25a9b3":"code","b282f927":"code","c3a70c1d":"code","e044bef4":"code","af348002":"code","efcb94c9":"code","c972b627":"code","2b732487":"code","1639e392":"code","ddb49b0a":"code","5d6af6a3":"code","231d289a":"code","3cf8676c":"code","2d87d9f9":"code","3d5d1613":"code","5c8f13e2":"code","ee85e03c":"code","7781bcde":"code","794edf8a":"code","e8fb1cac":"code","9fce51ca":"code","8c714f23":"code","3481c374":"code","754f798d":"code","f80ae540":"code","d27c20e7":"code","0e88faee":"code","a484ee96":"code","82024e3b":"code","117e8b76":"code","8fb03aee":"code","048b8b26":"code","61ee838f":"code","79e6b5b1":"code","83df52fb":"code","87fa47ec":"code","ad28c03a":"code","4e06c6b0":"code","fa8f8062":"code","948af22a":"code","f6cc2861":"code","dc2602c8":"code","abb8d0fd":"code","617dd29f":"code","93c470f6":"code","e621bd0a":"code","7860a613":"code","15628322":"code","568341de":"code","2b2b3d4d":"code","7710e8d2":"code","8de369ec":"code","ffeb4e29":"code","f39f0f02":"code","75d4c95e":"code","8e979d4a":"code","9b952067":"code","b04e2677":"code","e8bf81e1":"code","76045bec":"code","d1e63e35":"code","9e798580":"code","cc4b5ef2":"code","329f1d15":"code","b05445e5":"code","d68ea6cb":"code","4b5b67e4":"code","573d1dbc":"code","820e9b65":"code","a94be77c":"code","3b59dced":"code","374ba367":"code","b90796a6":"code","b667b40b":"code","0763a3b3":"code","d3ac8b69":"code","c91f5bfe":"code","9a841e2e":"code","f1ad5a23":"code","1e310c85":"code","936a84d1":"code","6f99cd8c":"code","8069b9b0":"code","4d45cb7f":"code","467d8d54":"code","7b0b0261":"code","764765f2":"code","4f617a1e":"code","cb5fd941":"code","88077a8f":"markdown","02a0d8f2":"markdown","47b953a6":"markdown","004823b4":"markdown","6e1496d9":"markdown","eef81999":"markdown","2bf387c1":"markdown","613242c7":"markdown","9855cd60":"markdown","0a03a336":"markdown","ca40cd4d":"markdown","fb53a71a":"markdown","88bf79b1":"markdown","8736de14":"markdown","a6ddbc58":"markdown","57c2d952":"markdown","2510c753":"markdown","b56b6ac2":"markdown","3a7bfa90":"markdown","c885b4ac":"markdown","f0c6f0ac":"markdown","c7b57391":"markdown","d672dce3":"markdown","1f6f07b6":"markdown","c7fb8bc4":"markdown","a0df357f":"markdown","a0483bba":"markdown","85ef9bf6":"markdown","d013b6f1":"markdown","913f300a":"markdown","2d5b124d":"markdown","2580069e":"markdown","1ab68369":"markdown","b6531ec1":"markdown","b904d9b4":"markdown","578f7503":"markdown","0bd1938e":"markdown","1f119d15":"markdown","73f5a62f":"markdown","c292f841":"markdown","da7691c9":"markdown"},"source":{"e80d279b":"! pip install dataprep by","3bf3b7d3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nimport missingno as msno\nimport statsmodels.stats.api as sms\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom scipy.stats import levene\nfrom scipy.stats import shapiro\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier\nimport xgboost as xgb\nfrom xgboost import XGBRegressor, XGBClassifier\nfrom lightgbm import LGBMRegressor, LGBMClassifier\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn import tree\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.manifold import Isomap,TSNE\nfrom sklearn.feature_selection import mutual_info_classif\nfrom tqdm.notebook import tqdm\nfrom scipy.stats import ttest_ind\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as pyo\nimport scipy.stats as stats\nimport pymc3 as pm\nfrom dataprep.eda import *\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_diff\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda import plot_missing\nimport plotly.figure_factory as ff\nfrom collections import Counter\nimport pandas_profiling as pp\nfrom mpl_toolkits.basemap import Basemap\nimport datetime as dt\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfilterwarnings(\"ignore\", category=DeprecationWarning) \nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","e3c0091d":"Meteorite_CSV = pd.read_csv(\"..\/input\/meteorite-landings\/meteorite-landings.csv\")\n\nData = Meteorite_CSV.copy()\n\nNumeric_Data = Data.select_dtypes(include=[\"float32\",\"float64\",\"int32\",\"int64\"])","2c918c18":"Data","9b8f3736":"print(\"INFO:\\n\")\nprint(Data.info())","5f15877d":"print(\"DESCRIBE:\\n\")\nprint(Numeric_Data.describe().T)","1a7228d6":"print(\"CORRELATION:\\n\")\nprint(Numeric_Data.corr())","7e0bdac8":"print(\"COVARIANCE:\\n\")\nprint(Numeric_Data.cov())","796bf164":"print(\"COLUMNS:\\n\")\nprint(Data.columns)","3307e373":"print(\"SHAPE: \",Data.shape)\nprint(\"SIZE: \",Data.size)","cac3b652":"print(\"NaN:\\n\")\nprint(Data.isnull().sum())","0f93a8e7":"print(\"NaN BOOL:\\n\")\nprint(Data.isna())","fd4cc2ea":"print(\"DUPLICATED\\n\")\nprint(Data.duplicated().sum())","4182a7f8":"print(\"NAME TYPE\\n\")\nprint(Data[\"nametype\"].value_counts())","1cfd261d":"print(\"YEAR\\n\")\nprint(Data[\"year\"].value_counts())","448b9a08":"print(Data[\"year\"].sort_values(ascending=False))","3180b933":"Data.sort_values(by=[\"year\"],inplace=True)\n\nData = Data.reset_index(drop=True)","f171ff25":"Data.drop(\"id\",axis=1,inplace=True) # we don't need ID feature for this overview","2be5a2ac":"Data","ae153e01":"print(\"CLASS\\n\")\nprint(Data[\"recclass\"].value_counts())","9f4f84cf":"Data.recclass.replace(to_replace=['Acapulcoite', 'Acapulcoite\/Lodranite', 'Acapulcoite\/lodranite',\n           'Lodranite','Lodranite-an','Winonaite','Achondrite-prim'],value='PA',inplace=True)\n\nData.recclass.replace(to_replace=['Angrite', 'Aubrite','Aubrite-an','Ureilite', 'Ureilite-an','Ureilite-pmict',\n           'Brachinite','Diogenite', 'Diogenite-an', 'Diogenite-olivine', 'Diogenite-pm',\n           'Eucrite', 'Eucrite-Mg rich', 'Eucrite-an', 'Eucrite-br','Eucrite-cm',\n           'Eucrite-mmict', 'Eucrite-pmict', 'Eucrite-unbr','Howardite'],value='AA',inplace=True)\n\nData.recclass.replace(to_replace=['Lunar', 'Lunar (anorth)', 'Lunar (bas. breccia)',\n           'Lunar (bas\/anor)', 'Lunar (bas\/gab brec)', 'Lunar (basalt)',\n           'Lunar (feldsp. breccia)', 'Lunar (gabbro)', 'Lunar (norite)'],value='L',inplace=True)\n\nData.recclass.replace(to_replace=['Martian', 'Martian (OPX)','Martian (chassignite)', 'Martian (nakhlite)',\n           'Martian (shergottite)','Martian (basaltic breccia)'],value='M',inplace=True)\n\nData.recclass.replace(to_replace=['C','C2','C4','C4\/5','C6','C1-ung', 'C1\/2-ung','C2-ung',\n           'C3-ung', 'C3\/4-ung','C4-ung','C5\/6-ung',\n           'CB', 'CBa', 'CBb', 'CH\/CBb', 'CH3', 'CH3 ', 'CI1', 'CK', 'CK3',\n           'CK3-an', 'CK3.8', 'CK3\/4', 'CK4', 'CK4-an', 'CK4\/5', 'CK5',\n           'CK5\/6', 'CK6', 'CM', 'CM-an', 'CM1', 'CM1\/2', 'CM2', 'CM2-an',\n           'CO3', 'CO3 ', 'CO3.0', 'CO3.1', 'CO3.2', 'CO3.3', 'CO3.4', 'CO3.5',\n           'CO3.6', 'CO3.7', 'CO3.8', 'CR', 'CR-an', 'CR1', 'CR2', 'CR2-an',\n           'CV2', 'CV3', 'CV3-an','CR7'],value='CC',inplace=True)\n\nData.recclass.replace(to_replace=['OC', 'OC3','H', 'H(5?)', 'H(?)4', 'H(L)3', 'H(L)3-an', 'H-an','H-imp melt',\n           'H-melt rock', 'H-metal', 'H\/L3', 'H\/L3-4', 'H\/L3.5',\n           'H\/L3.6', 'H\/L3.7', 'H\/L3.9', 'H\/L4', 'H\/L4-5', 'H\/L4\/5', 'H\/L5',\n           'H\/L6', 'H\/L6-melt rock', 'H\/L~4', 'H3', 'H3 ', 'H3-4', 'H3-5',\n           'H3-6', 'H3-an', 'H3.0', 'H3.0-3.4', 'H3.1', 'H3.10', 'H3.2',\n           'H3.2-3.7', 'H3.2-6', 'H3.2-an', 'H3.3', 'H3.4', 'H3.4-5',\n           'H3.4\/3.5', 'H3.5', 'H3.5-4', 'H3.6', 'H3.6-6', 'H3.7', 'H3.7-5',\n           'H3.7-6', 'H3.7\/3.8', 'H3.8', 'H3.8-4', 'H3.8-5', 'H3.8-6',\n           'H3.8-an', 'H3.8\/3.9', 'H3.8\/4', 'H3.9', 'H3.9-5', 'H3.9-6',\n           'H3.9\/4', 'H3\/4', 'H4', 'H4 ', 'H4(?)', 'H4-5', 'H4-6', 'H4-an',\n           'H4\/5', 'H4\/6', 'H5', 'H5 ', 'H5-6', 'H5-7', 'H5-an',\n           'H5-melt breccia', 'H5\/6', 'H6', 'H6 ', 'H6-melt breccia', 'H6\/7',\n           'H7', 'H?','H~4', 'H~4\/5', 'H~5', 'H~6','L', 'L(?)3',\n           'L(H)3', 'L(LL)3', 'L(LL)3.05', 'L(LL)3.5-3.7', 'L(LL)5', 'L(LL)6',\n           'L(LL)~4', 'L-imp melt', 'L-melt breccia', 'L-melt rock', 'L-metal',\n           'L\/LL', 'L\/LL(?)3', 'L\/LL-melt rock', 'L\/LL3', 'L\/LL3-5', 'L\/LL3-6',\n           'L\/LL3.10', 'L\/LL3.2', 'L\/LL3.4', 'L\/LL3.5', 'L\/LL3.6\/3.7', 'L\/LL4',\n           'L\/LL4-6', 'L\/LL4\/5', 'L\/LL5', 'L\/LL5-6', 'L\/LL5\/6', 'L\/LL6',\n           'L\/LL6-an', 'L\/LL~4', 'L\/LL~5', 'L\/LL~6', 'L3', 'L3-4', 'L3-5',\n           'L3-6', 'L3-7', 'L3.0', 'L3.0-3.7', 'L3.0-3.9', 'L3.05', 'L3.1',\n           'L3.10', 'L3.2', 'L3.2-3.5', 'L3.2-3.6', 'L3.3', 'L3.3-3.5',\n           'L3.3-3.6', 'L3.3-3.7', 'L3.4', 'L3.4-3.7', 'L3.5', 'L3.5-3.7',\n           'L3.5-3.8', 'L3.5-3.9', 'L3.5-5', 'L3.6', 'L3.6-4', 'L3.7',\n           'L3.7-3.9', 'L3.7-4', 'L3.7-6', 'L3.7\/3.8', 'L3.8', 'L3.8-5',\n           'L3.8-6', 'L3.8-an', 'L3.9', 'L3.9-5', 'L3.9-6', 'L3.9\/4', 'L3\/4',\n           'L4', 'L4 ', 'L4-5', 'L4-6', 'L4-an', 'L4-melt rock', 'L4\/5', 'L5',\n           'L5 ', 'L5-6', 'L5-7', 'L5\/6', 'L6', 'L6 ', 'L6-melt breccia',\n           'L6-melt rock', 'L6\/7', 'L7', 'LL', 'LL(L)3', 'LL-melt rock', 'LL3',\n           'LL3-4', 'LL3-5', 'LL3-6', 'LL3.0', 'LL3.00', 'LL3.1', 'LL3.1-3.5',\n           'LL3.10', 'LL3.15', 'LL3.2', 'LL3.3', 'LL3.4', 'LL3.5', 'LL3.6',\n           'LL3.7', 'LL3.7-6', 'LL3.8', 'LL3.8-6', 'LL3.9', 'LL3.9\/4', 'LL3\/4',\n           'LL4', 'LL4-5', 'LL4-6', 'LL4\/5', 'LL4\/6', 'LL5', 'LL5-6', 'LL5-7',\n           'LL5\/6', 'LL6', 'LL6 ', 'LL6(?)', 'LL6\/7', 'LL7', 'LL7(?)',\n           'LL<3.5', 'LL~3', 'LL~4', 'LL~4\/5', 'LL~5', 'LL~6',\n           'L~3', 'L~4', 'L~5', 'L~6','Relict H','Relict OC','LL-melt breccia','H-melt breccia',\n                                 'L5-melt breccia','LL-imp melt','H3.05','LL6-melt breccia',\n                                 'LL3.05','H4-melt breccia','LL3.8-4','L3.00','L~4-6','LL6-an',\n                                 'L4-melt breccia','LL(L)3.1','L3-melt breccia','H3.15'],value='OC',inplace=True)\n\nData.recclass.replace(to_replace=['EH','EH-imp melt', 'EH3', 'EH3\/4-an', 'EH4', 'EH4\/5', 'EH5', 'EH6',\n           'EH6-an', 'EH7', 'EH7-an', 'EL3', 'EL3\/4', 'EL4', 'EL4\/5', 'EL5',\n           'EL6', 'EL6 ', 'EL6\/7', 'EL7','E','E3','E4', 'E5','E6','EL-melt rock'],value='EC',inplace=True)\n\nData.recclass.replace(to_replace=['K', 'K3','R', 'R3', 'R3-4', 'R3-5', 'R3-6', 'R3.4', 'R3.5-6',\n           'R3.6', 'R3.7', 'R3.8', 'R3.8-5', 'R3.8-6', 'R3.9', 'R3\/4', 'R4',\n           'R4\/5', 'R5', 'R6','R3.5-4'],value='AOC',inplace=True)\n\nData.recclass.replace(to_replace=['Pallasite', 'Pallasite, PES','Pallasite, PMG',\n           'Pallasite, PMG-an', 'Pallasite, ungrouped',\n           'Pallasite?'],value='P',inplace=True)\n\nData.recclass.replace(to_replace=['Mesosiderite', 'Mesosiderite-A','Mesosiderite-A1',\n           'Mesosiderite-A2', 'Mesosiderite-A3','Mesosiderite-A3\/4',\n           'Mesosiderite-A4', 'Mesosiderite-B','Mesosiderite-B1',\n           'Mesosiderite-B2', 'Mesosiderite-B4','Mesosiderite-C',\n           'Mesosiderite-C2', 'Mesosiderite-an','Mesosiderite?'],value='MG',inplace=True)\n\nData.recclass.replace(to_replace=['Iron, IC', 'Iron, IC-an', 'Iron, IIAB', 'Iron, IIAB-an',\n           'Iron, IIC', 'Iron, IID', 'Iron, IID-an','Iron, IIF', 'Iron, IIG',\n           'Iron, IIIAB', 'Iron, IIIAB-an', 'Iron, IIIAB?', 'Iron, IIIE',\n           'Iron, IIIE-an', 'Iron, IIIF', 'Iron, IVA', 'Iron, IVA-an',\n           'Iron, IVB'],value='MIM',inplace=True)\n\nData.recclass.replace(to_replace=['Iron, IAB complex', 'Iron, IAB-MG','Iron, IAB-an', 'Iron, IAB-sHH',\n           'Iron, IAB-sHL', 'Iron, IAB-sLH','Iron, IAB-sLL', 'Iron, IAB-sLM',\n           'Iron, IAB-ung', 'Iron, IAB?','Iron, IIE',\n           'Iron, IIE-an', 'Iron, IIE?'],value='NMIM',inplace=True)\n\nData.recclass.replace(to_replace=['Iron','Iron?','Relict iron','Chondrite-fusion crust',\n           'Fusion crust','Impact melt breccia',\n           'Enst achon-ung','Iron, ungrouped','Stone-uncl', 'Stone-ung',\n           'Unknown','Achondrite-ung','Chondrite-ung',\n           'Enst achon','E-an',  'E3-an',  'E5-an','Howardite-an','C3.0-ung','Iron, IAB-sHL-an'],value='UN',inplace=True)\n\n","7deb99c2":"print(\"CLASS\\n\")\nprint(Data[\"recclass\"].value_counts())","ee2c32c2":"Data[\"mass\"] = Data[\"mass\"] \/ 1000\n\n# 1000 GR - 1 KG \n# OF COURSE YOU KNOW!","e4a4f957":"print(Data[\"mass\"])","3f9c2e7d":"print(Data[\"year\"].max())","62d6dc61":"print(Data.where(Data[\"year\"] > 2021).value_counts().all())","2a5c072e":"print(Data.where(Data[\"year\"] > 2021).value_counts().sum())","5d32d73f":"print(Data.where(Data[\"year\"] > 2021).value_counts())","910c2ca2":"print(Data.where(Data[\"year\"] > 2021))","f5675f9b":"Data.drop([45426,45427],inplace=True) # rows","c364a4cc":"print(Data.where(Data[\"year\"] > 2021).value_counts().sum())","5351e6bd":"print(Data[\"year\"].max())\n\n# NOW IT'S OKAY","0b5bf29f":"plt.style.use(\"dark_background\")","477a5139":"msno.matrix(Data,figsize=(15,5))\nplt.show()","754af220":"msno.bar(Data,figsize=(15,5))\nplt.show()","06498ff0":"msno.dendrogram(Data,figsize=(15,5))\nplt.show()","9c7fdfae":"msno.heatmap(Data,figsize=(15,5))\nplt.show()","6c25a9b3":"figure = plt.figure(figsize=(15,5))\nplt.title(\"NaN COUNT\")\nNan_Checking = Data.isna().sum().sort_values(ascending=False).to_frame()\nsns.heatmap(Nan_Checking,fmt=\"d\",cmap=\"viridis\")\nplt.show()","b282f927":"Data[\"mass\"].fillna(Data.groupby([\"recclass\"])[\"mass\"].transform(\"mean\"),inplace=True)","c3a70c1d":"print(Data[\"mass\"].isnull().sum())","e044bef4":"Prot_Data = Data.copy() # for corr,cov,encoding and checking main lat-lon","af348002":"Data[\"reclat\"].fillna(-54.572062,inplace=True) # any","efcb94c9":"Data[\"reclong\"].fillna(11.675271,inplace=True) # any","c972b627":"Data.dropna(inplace=True)\n\n# We can apply it to the rest","2b732487":"print(Data.isnull().sum())","1639e392":"msno.matrix(Data,figsize=(15,5))\nplt.show()\n\n# WE ARE OKAY NOW","ddb49b0a":"Categorical_Data = Data.copy()","5d6af6a3":"Categorical_Data[\"year\"]","231d289a":"Categorical_Data[\"year\"] = pd.Categorical(Categorical_Data[\"year\"])\nCategorical_Data[\"recclass\"] = pd.Categorical(Categorical_Data[\"recclass\"])\nCategorical_Data[\"nametype\"] = pd.Categorical(Categorical_Data[\"nametype\"])\nCategorical_Data[\"fall\"] = pd.Categorical(Categorical_Data[\"fall\"])\nCategorical_Data[\"name\"] = pd.Categorical(Categorical_Data[\"name\"])","3cf8676c":"print(Categorical_Data.info())","2d87d9f9":"Encoded_Data = Prot_Data.copy()","3d5d1613":"Enc_Func = LabelEncoder()","5c8f13e2":"print(Encoded_Data[\"recclass\"].value_counts())\nprint(\"---\"*10)\nprint(Encoded_Data[\"nametype\"].value_counts())\nprint(\"---\"*10)\nprint(Encoded_Data[\"fall\"].value_counts())","ee85e03c":"Encoded_Data[\"recclass\"] = Enc_Func.fit_transform(Encoded_Data[\"recclass\"])\nEncoded_Data[\"nametype\"] = Enc_Func.fit_transform(Encoded_Data[\"nametype\"])\nEncoded_Data[\"fall\"] = Enc_Func.fit_transform(Encoded_Data[\"fall\"])","7781bcde":"print(Encoded_Data[\"recclass\"].value_counts())\nprint(\"---\"*10)\nprint(Encoded_Data[\"nametype\"].value_counts())\nprint(\"---\"*10)\nprint(Encoded_Data[\"fall\"].value_counts())","794edf8a":"print(Encoded_Data.columns)","e8fb1cac":"Encoded_Data.drop(\"GeoLocation\",axis=1,inplace=True)","9fce51ca":"Encoded_Data","8c714f23":"Corr_Pearson = Encoded_Data.corr(method=\"pearson\")\nCorr_Spearman = Encoded_Data.corr(method=\"spearman\")","3481c374":"figure = plt.figure(figsize=(16,7))\nplt.title(\"PEARSON\")\nsns.heatmap(Corr_Pearson,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"jet\")\nplt.show()","754f798d":"figure = plt.figure(figsize=(16,7))\nplt.title(\"SPEARMAN\")\nsns.heatmap(Corr_Spearman,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"jet\")\nplt.show()","f80ae540":"Cov_Result = Encoded_Data.cov()","d27c20e7":"figure = plt.figure(figsize=(16,7))\nplt.title(\"COVARIANCE\")\nsns.heatmap(Cov_Result,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"jet\")\nplt.show()","0e88faee":"Data","a484ee96":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"recclass\",\"fall\"])[\"mass\"].mean())","82024e3b":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"recclass\",\"nametype\"])[\"mass\"].mean())","117e8b76":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"fall\",\"nametype\"])[\"mass\"].mean())","8fb03aee":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"year\",\"recclass\"])[\"mass\"].mean())","048b8b26":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"year\",\"nametype\"])[\"mass\"].mean())","61ee838f":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"year\",\"fall\"])[\"mass\"].mean())","79e6b5b1":"print(\"LATITUDE MEAN:\\n\")\nprint(Prot_Data.groupby([\"year\"])[\"reclat\"].mean()) # remember Why Prot_Data is for","83df52fb":"figure = plt.figure(figsize=(15,5))\nplt.title(\"LAT - YEAR\")\nplt.plot(Prot_Data.groupby([\"year\"])[\"reclat\"].mean()) # remember Why Prot_Data is for","87fa47ec":"print(\"LONGITUDE MEAN:\\n\")\nprint(Prot_Data.groupby([\"year\"])[\"reclong\"].mean()) # remember Why Prot_Data is for","ad28c03a":"figure = plt.figure(figsize=(15,5))\nplt.title(\"LON - YEAR\")\nplt.plot(Prot_Data.groupby([\"year\"])[\"reclong\"].mean()) # remember Why Prot_Data is for","4e06c6b0":"LAT_Year = Prot_Data.groupby([\"year\"])[\"reclat\"].mean()\nLON_Year = Prot_Data.groupby([\"year\"])[\"reclong\"].mean()","fa8f8062":"print(type(LAT_Year))\nprint(type(LON_Year))","948af22a":"Lat_Lon_Data = pd.concat([LAT_Year,LON_Year],axis=1)\nLat_Lon_Data[\"year\"] = Lat_Lon_Data.index\nLat_Lon_Data.index.name = None\nLat_Lon_Data = Lat_Lon_Data.reset_index()\nLat_Lon_Data = Lat_Lon_Data.drop(\"index\",axis=1)\n# WE WILL USE IT FOR LATER","f6cc2861":"print(Lat_Lon_Data.head(-1))","dc2602c8":"print(Lat_Lon_Data.isnull().sum())","abb8d0fd":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"recclass\"])[\"mass\"].mean())","617dd29f":"figure = plt.figure(figsize=(15,5))\nplt.title(\"MASS - RECCLASS\")\nplt.plot(Data.groupby([\"recclass\"])[\"mass\"].mean())","93c470f6":"print(\"MASS MEAN:\\n\")\nprint(Data.groupby([\"fall\"])[\"mass\"].mean())","e621bd0a":"figure = plt.figure(figsize=(15,5))\nplt.title(\"MASS - FALL\")\nplt.plot(Data.groupby([\"fall\"])[\"mass\"].mean())","7860a613":"figure,axis = plt.subplots(1,3,figsize=(18,5))\n\naxis[0].set_title(\"FALL-MASS\")\naxis[0].plot(Data.groupby([\"fall\"])[\"mass\"].mean())\n\naxis[1].set_title(\"CLASS-MASS\")\naxis[1].plot(Data.groupby([\"recclass\"])[\"mass\"].mean())\n\naxis[2].set_title(\"YEAR-MASS\")\naxis[2].plot(Data.groupby([\"year\"])[\"mass\"].mean())\n\nplt.tight_layout()\nplt.show()","15628322":"figure,axis = plt.subplots(1,3,figsize=(18,5))\n\naxis[0].set_title(\"MASS\")\naxis[0].hist(Data[\"mass\"])\n\naxis[1].set_title(\"CLASS\")\naxis[1].hist(Data[\"recclass\"])\n\naxis[2].set_title(\"YEAR\")\naxis[2].hist(Data[\"year\"])\n\nplt.tight_layout()\nplt.show()","568341de":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"year\"],y=Data[\"mass\"],hue=Data[\"fall\"])\nplt.title(\"YEAR-MASS \/ FALL\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","2b2b3d4d":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"year\"],y=Data[\"mass\"],hue=Data[\"recclass\"])\nplt.title(\"YEAR-MASS \/ CLASS\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","7710e8d2":"figure = plt.figure(figsize=(12,8))\n    \nsns.lineplot(x=Data[\"year\"],y=Data[\"mass\"],hue=Data[\"fall\"])\nplt.title(\"YEAR-MASS \/ FALL\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","8de369ec":"figure = plt.figure(figsize=(12,8))\n    \nsns.lineplot(x=Data[\"year\"],y=Data[\"mass\"],hue=Data[\"recclass\"])\nplt.title(\"YEAR-MASS \/ CLASS\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","ffeb4e29":"figure = plt.figure(figsize=(12,8))\n    \nsns.barplot(x=Data[\"year\"],y=Data[\"fall\"])\nplt.title(\"YEAR-FALL\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","f39f0f02":"figure = plt.figure(figsize=(12,8))\n    \nsns.barplot(x=Data[\"year\"],y=Data[\"recclass\"])\nplt.title(\"YEAR-CLASS\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","75d4c95e":"figure = plt.figure(figsize=(12,8))\n\nData.year.hist(bins=np.arange(1900,2014,1))\nplt.title(\"YEARS\")","8e979d4a":"figure = plt.figure(figsize=(12,8))\n\nData.mass.hist(bins=np.arange(0.05,27,1))\nplt.title(\"MASS\")","9b952067":"figure = plt.figure(figsize=(12,8))\n\nData.nametype.hist()\nplt.title(\"TYPE\")","b04e2677":"Fall_Type_Found = Data[Data[\"fall\"] == \"Found\"]\nFall_Type_Fell = Data[Data[\"fall\"] == \"Fell\"]","e8bf81e1":"Fall_Type_Found = Fall_Type_Found.reset_index(drop=True)\nFall_Type_Fell = Fall_Type_Fell.reset_index(drop=True)","76045bec":"print(Fall_Type_Found.head(-1))","d1e63e35":"print(Fall_Type_Fell.head(-1))","9e798580":"figure = plt.figure(figsize=(12,8))\n\nFall_Type_Found.year.hist(bins=np.arange(1900,2014,1))\nplt.title(\"YEARS\")","cc4b5ef2":"figure = plt.figure(figsize=(12,8))\n\nFall_Type_Fell.year.hist(bins=np.arange(1900,2014,1))\nplt.title(\"YEARS\")","329f1d15":"plot_diff([Fall_Type_Found,Fall_Type_Fell])","b05445e5":"plot(Data)","d68ea6cb":"plot(Data, \"mass\")","4b5b67e4":"plot(Data, \"year\")","573d1dbc":"plot_correlation(Encoded_Data)","820e9b65":"pp.ProfileReport(Data)","a94be77c":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Data[\"reclong\"],Data[\"reclat\"])\nMap_Plot.scatter(lon,lat,marker=\"*\",alpha=0.20,color=\"r\",edgecolor=\"None\")\nplt.title(\"METEORITE IMPACT\")","3b59dced":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\n\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Data[\"reclong\"],Data[\"reclat\"])\nMap_Plot.scatter(lon,lat,marker=\"*\",alpha=0.20,color=\"r\",edgecolor=\"None\")\nplt.title(\"METEORITE IMPACT\")","374ba367":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(width=12000000,height=9000000,projection='lcc',resolution='c',lat_1=45.,lat_2=55,lat_0=50,lon_0=-107.)\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\n\nlon,lat = Data[\"reclong\"][0],Data[\"reclat\"][0]\n\nxpt,ypt = Map_Plot(lon,lat)\nlonpt, latpt = Map_Plot(xpt,ypt,inverse=True)\n\nMap_Plot.plot(xpt,ypt,'ro')\nplt.title(\"SINGLE EXAMPLE METEORITE IMPACT\")\nplt.show()","b90796a6":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=10,llcrnrlon=-20,urcrnrlat=50,urcrnrlon=40,resolution='c')\nMap_Plot.etopo()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(Data.reclong,Data.reclat,edgecolor='none',color='r',alpha=0.6)\n\nplt.title(\"MEDITERRANEAN-AFRICA METEORITE IMPACT\", fontsize=15)","b667b40b":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=5,llcrnrlon=-10,urcrnrlat=30,urcrnrlon=70,resolution='c')\nMap_Plot.etopo()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(Data.reclong,Data.reclat,edgecolor='none',color='r',alpha=0.6)\n\nplt.title(\"METEORITE IMPACT\", fontsize=15)","0763a3b3":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=50,llcrnrlon=-40,urcrnrlat=70,urcrnrlon=10,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(Data.reclong,Data.reclat,edgecolor='none',color='r',alpha=0.6)\n\nplt.title(\"METEORITE IMPACT\", fontsize=15)","d3ac8b69":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon_FE,lat_FE = Map_Plot(Fall_Type_Fell[\"reclong\"],Fall_Type_Fell[\"reclat\"])\nlon_FO,lat_FO = Map_Plot(Fall_Type_Found[\"reclong\"],Fall_Type_Found[\"reclat\"])\nMap_Plot.scatter(lon_FE,lat_FE,marker=\"*\",alpha=0.20,color=\"r\",edgecolor=\"None\")\nMap_Plot.scatter(lon_FO,lat_FO,marker=\"*\",alpha=0.20,color=\"k\",edgecolor=\"None\")\nplt.title(\"TYPE\")","c91f5bfe":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Lat_Lon_Data[\"reclong\"],Lat_Lon_Data[\"reclat\"])\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nplt.title(\"METEORITE IMPACT\")","9a841e2e":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Lat_Lon_Data[\"reclong\"],Lat_Lon_Data[\"reclat\"])\nMap_Plot.plot(lon,lat,color=\"r\")\nplt.title(\"METEORITE IMPACT\")","f1ad5a23":"Eartquakes_CSV = pd.read_csv(\"..\/input\/earthquake-database\/database.csv\")","1e310c85":"print(Eartquakes_CSV.columns)","936a84d1":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Eartquakes_CSV[\"Longitude\"],Eartquakes_CSV[\"Latitude\"])\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nplt.title(\"EARTHQUAKES\")","6f99cd8c":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Eartquakes_CSV[\"Longitude\"],Eartquakes_CSV[\"Latitude\"])\nlon_M,lat_M = Map_Plot(Data[\"reclong\"],Data[\"reclat\"])\nMap_Plot.scatter(lon_M,lat_M,marker=\"*\",alpha=0.20,color=\"r\",edgecolor=\"None\")\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nplt.title(\"EARTHQUAKES\")","8069b9b0":"UFO_Csv = pd.read_csv(\"..\/input\/ufo-sightings-around-the-world\/ufo_sighting_data.csv\",low_memory=False)","4d45cb7f":"print(UFO_Csv.columns)","467d8d54":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(UFO_Csv[\"longitude\"],UFO_Csv[\"latitude\"])\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nplt.title(\"UFO SIGHTING\")","7b0b0261":"Wonder_CSV = pd.read_csv(\"..\/input\/wonders-of-world\/wonders_of_world.csv\")","764765f2":"print(Wonder_CSV.columns)","4f617a1e":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Wonder_CSV[\"Longitude\"],Wonder_CSV[\"Latitude\"])\nMap_Plot.scatter(lon,lat,marker=\"o\",color=\"k\",edgecolor=\"None\")\nplt.title(\"PROMINENT PLACES\")","cb5fd941":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Wonder_CSV[\"Longitude\"],Wonder_CSV[\"Latitude\"])\nlon_M,lat_M = Map_Plot(Data[\"reclong\"],Data[\"reclat\"])\nMap_Plot.scatter(lon_M,lat_M,marker=\"*\",alpha=0.20,color=\"r\",edgecolor=\"None\")\nMap_Plot.scatter(lon,lat,marker=\"o\",color=\"k\",edgecolor=\"None\")\nplt.title(\"PROMINENT PLACES\")","88077a8f":"#### GENERAL ANALYSIS","02a0d8f2":"##### SO INTERESTING! LET'S CHECK LAT AND LON MEAN FOR YEAR 2012\n* LAT: 1.790740\n* LON: -4.184776\n* THAT IS : \noff the coast of Ivory Coast\nWOW!\n* CHECK THIS for YOURS: https:\/\/www.maps.ie\/coordinates.html","47b953a6":"* GENERAL CHECK","004823b4":"##### It took the Latitude and Longitude values simultaneously as NaN. This indicates that there is harmony between them. For this reason, we cannot delete rows with NaN.","6e1496d9":"#### ANOTHER CHECKING","eef81999":"# PACKAGES AND LIBRARIES","2bf387c1":"#### CHECK THAT POPULATION DENSITY\n\n![](https:\/\/d3j021pzfm19r2.cloudfront.net\/wp-content\/uploads\/2014\/12\/world-population-density-map.jpg)","613242c7":"* LET'S SAVE THIS DATA BEFORE FILLING THE LAT AND LONG VALUES OURSELVES","9855cd60":"#### AS ENCODED - ADDITIONAL","0a03a336":"#### ARRANGEMENT CSV","ca40cd4d":"##### WE NEED TO CONVERT THIS RESULT AS ANOTHER CSV","fb53a71a":"#### AS CATEGORICAL - ADDITIONAL","88bf79b1":"* **CC**: Carbonaceous Chondrite\n* **OC**: Ordinary Chondrite\n* **M**: Martian\n* **AA**: Asteroidal Achondrites\n* **PA**: Primitive Achondrites\n* **L**: Lunar\n* **EC**: Enstatite Chondrite\n* **AOC**: Other Chondrite Groups(not in one of the major classes)\n* **P**: Pallasites\n* **MG**: Mesosiderite Group\n* **MIM**: Magmatic Iron Meteorite Groups\n* **NMIM**: Non-magmatic or Primitive Iron Meteorite Groups\n* **UN**: Not Enough Information (Ungrouped or Unknown)\n\n\nCHECK:\n\nhttps:\/\/en.wikipedia.org\/wiki\/Meteorite_classification","8736de14":"#### MAP","a6ddbc58":"#### SPECIAL SPLITTING","57c2d952":"# DATA PROCESS & EXPLORATORY DATA ANALYSIS (EDA)","2510c753":"* MEAN FOR YEARS","b56b6ac2":"##### LET'S CONTINUE TO CHECK GROUPBY MEAN","3a7bfa90":"##### HMMM? But it could also be about civilizations.","c885b4ac":"#### CORRELATION WITH ENCODED DATA","f0c6f0ac":"#### GROUPBY MEANING","c7b57391":"#### Locations of some prominent places on Earth? LET'S CHECK!","d672dce3":"#### COVARIANCE WITH ENCODED DATA","1f6f07b6":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSE8B3-dtSdbcGCskxy9oF2kAMkP99zwXOQKA&usqp=CAU)","c7fb8bc4":"##### WEIGHTS ARE WRITTEN IN GRAMS, CONVERT TO KG","a0df357f":"##### NO! WE ONLY SEE TECTONIC PLATES!","a0483bba":"##### CLASSIFY THE TYPES FOR A CLEANER IMAGE AND REVIEW","85ef9bf6":"#### NaN CHECKING","d013b6f1":"#### DON'T FORGET\n* Homo sapiens, the first modern humans, evolved from their early hominid predecessors between 200,000 and 300,000 years ago. They developed a capacity for language about 50,000 years ago.\n* The first modern humans began moving outside of Africa starting about 70,000-100,000 years ago.","913f300a":"# HISTORY\n\nThe Meteoritical Society collects data on meteorites that have fallen to Earth from outer space. This dataset includes the location, mass, composition, and fall year for over 45,000 meteorites that have struck our planet.\n\n#### Notes on missing or incorrect data points:\n\nA few entries here contain date information that was incorrectly parsed into the NASA database. As a spot check: any date that is before 860 CE or after 2016 are incorrect; these should actually be BCE years. There may be other errors and we are looking for a way to identify them.\nA few entries have latitude and longitude of 0N\/0E (off the western coast of Africa, where it would be quite difficult to recover meteorites). Many of these were actually discovered in Antarctica, but exact coordinates were not given. 0N\/0E locations should probably be treated as NA.\n\n\n#### The Data\nNote that a few column names start with \"rec\" (e.g., recclass, reclat, reclon). These are the recommended values of these variables, according to The Meteoritical Society. In some cases, there were historical reclassification of a meteorite, or small changes in the data on where it was recovered; this dataset gives the currently recommended values.\n\n#### The dataset contains the following variables:\n\n* name: the name of the meteorite (typically a location, often modified with a number, year, composition, etc)\n* id: a unique identifier for the meteorite\n* nametype: one of:\n-- valid: a typical meteorite\n-- relict: a meteorite that has been highly degraded by weather on Earth\n* recclass: the class of the meteorite; one of a large number of classes based on physical, chemical, and other characteristics (see the Wikipedia article on meteorite classification for a primer)\n* mass: the mass of the meteorite, in grams\n* fall: whether the meteorite was seen falling, or was discovered after its impact; one of:\n-- Fell: the meteorite's fall was observed\n-- Found: the meteorite's fall was not observed\n* year: the year the meteorite fell, or the year it was found (depending on the value of fell)\n* reclat: the latitude of the meteorite's landing\n* reclong: the longitude of the meteorite's landing\n* GeoLocation: a parentheses-enclose, comma-separated tuple that combines reclat and reclong\n\n#### What can we do with this data?\nHere are a couple of thoughts on questions to ask and ways to look at this data:\n\nHow does the geographical distribution of observed falls differ from that of found meteorites?\n-- this would be great overlaid on a cartogram or alongside a high-resolution population density map\nare there any geographical differences or differences over time in the class of meteorites that have fallen to Earth?","2d5b124d":"#### MAYBE UFO SIGHTING?","2580069e":"* REMEMBER THAT DATA WE CREATED! IT IS IMPORTANT!","1ab68369":"#### LET'S CHECK EARTHQUAKES! WHO KNOWS,WE MAY FIND A CONNECTION BETWEEN","b6531ec1":"#### NaN FILLING","b904d9b4":"#### CHECK THAT BIODIVERSITY MAP\n\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/d\/d9\/Biodiversity_Hotspots_Map.jpg)","578f7503":"##### IT WILL BE MOST IN AMERICA OF COURSE! HOLLYWOOD!\n##### NO WAY!","0bd1938e":"#### IT IS ALMOST SIMILAR RIGHT? \n### WOW!","1f119d15":"##### REMEMBER:\nIt took the Latitude and Longitude values simultaneously as NaN. This indicates that there is harmony between them. For this reason, we cannot delete rows with NaN.\n\n\n* I CHOOSE A RANDOM POINT IN THE PACIFIC OCEAN WITHOUT DETECTING DATA AND LET'S ADJUST ALL UNKNOWN COORDINATES ACCORDING TO THERE.\n* USE IT FOR YOURS: https:\/\/www.latlong.net","73f5a62f":"##### YEAR 2501? HOW CAN IT BE?\n##### LET'S DROP VALUES BIGGER THAN 2021","c292f841":"## END OF THE PROJECT! THANK YOU!","da7691c9":"#### READING CSV"}}