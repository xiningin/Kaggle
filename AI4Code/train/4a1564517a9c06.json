{"cell_type":{"4b96eead":"code","7419ac98":"code","a73eb95f":"code","efc05339":"code","d0ef993d":"code","7a6187df":"code","b79c671f":"code","9ea78244":"code","45e28de3":"code","37e0ff29":"code","5c4bd45b":"code","2807d783":"code","dc325771":"code","58509d50":"code","925b2c69":"code","c5537548":"code","c0175138":"code","34e99059":"code","634bf4ae":"code","71c1333e":"code","21ce9964":"code","054b1f46":"code","aa3a7dd3":"markdown","322f7e57":"markdown","6f4cf1bf":"markdown","0b82745f":"markdown","e59d9148":"markdown","d93ce3da":"markdown","3e7e048f":"markdown","2e201df7":"markdown"},"source":{"4b96eead":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7419ac98":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\ndf=pd.read_csv('..\/input\/flipkart-products\/flipkart_com-ecommerce_sample.csv')","a73eb95f":"df.head()","efc05339":"plt.figure(figsize=(15,8))\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)\nplt.show()","d0ef993d":"df.duplicated().value_counts()","7a6187df":"df['crawl_timestamp']=pd.to_datetime(df['crawl_timestamp'])","b79c671f":"df['crawl_year']=df['crawl_timestamp'].apply(lambda x :x.year)\ndf['crawl_month']=df['crawl_timestamp'].apply(lambda x :x.month)","9ea78244":"print(df.product_category_tree[1])","45e28de3":"df.product_category_tree[6].split('>>')[0][2:].strip('[]\"').strip()","37e0ff29":"df['MainCategory'] = df['product_category_tree'].apply(lambda x: x.split('>>')[0][2:].strip('[]\"').strip())","5c4bd45b":"df['MainCategory'].head()","2807d783":"plt.figure(figsize=(10,10))\nprint(df.groupby('crawl_month')['crawl_month'].count())\ndf.groupby('crawl_month')['crawl_month'].count().plot(kind='bar')\nplt.title('Sales count by Month')\nplt.xlabel('Month')\nplt.ylabel('Count')\nplt.show()\n","dc325771":"plt.figure(figsize=(5,5))\ndf.groupby('crawl_year')['crawl_year'].count().plot(kind='bar')\nplt.title('Sales by Year')\nplt.xlabel('Year')\nplt.ylabel('Count')","58509d50":"plt.figure(figsize=(12,8))\ndf.groupby('MainCategory')['MainCategory'].count().sort_values(ascending=False)[:15]\ndf['MainCategory'].value_counts()[:15].sort_values(ascending=True).plot(kind='barh')\n","925b2c69":"df['retail_price'].max()","c5537548":"df[df['retail_price']==571230.0]","c0175138":"df['discount_%']=round(((df['retail_price']-df['discounted_price'])\/df['retail_price'])*100,1)","34e99059":"main_cat_disc=pd.DataFrame(df.groupby('MainCategory').agg({'discount_%':[(np.mean)],\n                                                          'MainCategory':['count']}))","634bf4ae":"main_cat_disc.head()\nmain_cat_disc.columns=['_'.join(col) for col in main_cat_disc.columns]","71c1333e":"MainCategoryDiscount = main_cat_disc.sort_values(by=['MainCategory_count'],ascending=False)[:20]","21ce9964":"MainCategoryDiscount","054b1f46":"plt.figure(figsize=(12,8))\nMainCategoryDiscount['discount_%_mean'].sort_values(ascending=True)[:20].plot(kind='barh')","aa3a7dd3":"# Sales","322f7e57":"# Discount on Category","6f4cf1bf":" A wrist Watch-Most expensive on pkart","0b82745f":"# Conclusions\n\n1. Data is well segregated ,with no duplicates, some missing data\n2. Most of the dates in any data is not in proper datetime format\n3. Discount_% for categories is made to get a clear understanding on discount by category basis\n   ~ Automotive>Mobiles>Bags,wallets & Belts>clothing in term of discount","e59d9148":"# Importing","d93ce3da":"Brand column has lot of missing values","3e7e048f":"# Missing Data","2e201df7":"# Data Preparing"}}