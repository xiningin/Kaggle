{"cell_type":{"4ef36ff1":"code","95da81b5":"code","1e1cb07b":"code","e767d8ed":"code","07349596":"code","7048c058":"code","eb645b20":"code","58a8b845":"markdown","9614c37e":"markdown","fcb432eb":"markdown","9669d736":"markdown","99c5fd70":"markdown","68a6b1cd":"markdown","f09eba59":"markdown","0006ea3f":"markdown","15c9090c":"markdown","531afdc1":"markdown","5853bf85":"markdown","034a3af3":"markdown","a790fa94":"markdown","8c8a7f45":"markdown","ccbdd7b2":"markdown"},"source":{"4ef36ff1":"#import list of colors\nimport matplotlib\ncolors=[]\nfor cname, hex in matplotlib.colors.cnames.items():\n    colors.append(cname)\ncolors=colors#shows better colors for plots\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\npokemon = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")","95da81b5":"pokemon.info()","1e1cb07b":"pokemon.head()","e767d8ed":"#struggled to make 2,4 plotting layout - will come back\nboxplot_var=pokemon.columns[4:12]\nsns.set_style(\"dark\")\nfor variable in range(len(boxplot_var)):\n    sns.set_palette([colors[variable]])\n    # creating a figure composed of two matplotlib.Axes objects (ax_box and ax_hist)\n    fig, (ax_hist, ax_box) = plt.subplots(2,sharex=True, gridspec_kw={\"height_ratios\": (.85, .15)})\n    #creating axis intance for color application to boxes\n    sns.histplot(pokemon.loc[:,boxplot_var[variable]],ax=ax_hist)\n    sns.boxplot(x=pokemon.loc[:,boxplot_var[variable]],notch=True,ax=ax_box)\n    ax_hist.set_xlabel(\"\")","07349596":"plt.figure(figsize=(8,6))\ncorr=pokemon.iloc[:,4:12].corr().round(3) #correlation matrix\nupper_half=np.triu(corr)#takes upper triangle of matrix\nsns.heatmap(corr,annot=True,mask=upper_half)\nsns.set(font_scale=1.25)\nsns.set_style(\"darkgrid\")","7048c058":"#separating by pokemon type\npoke_type=pokemon[\"Type 1\"].unique()\ndType={}\n#storing into dictionary\n\nplt.bar(poke_type,[len(pokemon[pokemon[\"Type 1\"]==i]) for i in poke_type],color=colors)\nplt.title(\"Type 1\")\nplt.xticks(rotation=90)\n\nplt.figure(figsize=(8,6))\nplt.show()\nplt.bar(poke_type,[len(pokemon[pokemon[\"Type 2\"]==i]) for i in poke_type],color=colors)\nplt.title(\"Type 2\")\nplt.xticks(rotation=90)\nplt.figure(figsize=(8,6))\nplt.show","eb645b20":"#importing needed libraries\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\n#gathering features\nfeatures=[\"Total\",\"HP\",\"Attack\",\"Defense\",\"Sp. Atk\",\"Sp. Def\",\"Speed\"]\nX = pokemon[features]\ny = pokemon[\"Type 2\"]\n\n#creating training and testing data\ntrain_X,test_X,train_y,test_y = train_test_split(X,y)\n\n#defining model\ntype_model = RandomForestClassifier()\n#fit model\ntype_model.fit(train_X.fillna(\"None\"),train_y.fillna(\"None\"))\n#generated predictions\npred_y=type_model.predict(test_X)\n#create confusion matrix\nconfusion_matrix= pd.crosstab(test_y,pred_y,rownames=[\"Actual\"],colnames=[\"Predicted\"])\nsns.heatmap(confusion_matrix,annot=True)\nplt.show()","58a8b845":"<p style=\"font-family: calibri, serif; font-size:20pt;\">\nThe data as described by Myles O'Neill is:\n<\/p>\n<ul style=\"font-family: calibri, serif; font-size:17pt;\">\n    <li> #: ID for each pokemon <\/li>\n    <li> Name: Name of each pokemon <\/li>\n    <li> Type 1: Each pokemon has a type, this determines weakness\/resistance to attacks <\/li>\n    <li> Type 2: Some pokemon are dual type and have 2 <\/li>\n    <li> Total: sum of all stats that come after this, a general guide to how strong a pokemon is <\/li>\n    <li> HP: hit points, or health, defines how much damage a pokemon can withstand before fainting <\/li>\n    <li> Attack: the base modifier for normal attacks (eg. Scratch, Punch) <\/li>\n    <li> Defense: the base damage resistance against normal attacks <\/li>\n    <li> SP Atk: special attack, the base modifier for special attacks (e.g. fire blast, bubble beam) <\/li>\n    <li> SP Def: the base damage resistance against special attacks <\/li>\n    <li> Speed: determines which pokemon attacks first each round <\/li>\n<\/ul>\n\n<p style=\"font-family: calibri, serif; font-size:20pt;\">\nThe data for this table has been acquired from several different sites, including:\n<\/p>\n\n<p style=\"font-family: calibri, serif; font-size:15pt;\">\n<ul style=\"font-family: calibri, serif; font-size:17pt;\">\n   <li> pokemon.com <\/li>\n    <li> pokemondb <\/li>\n    <li> bulbapedia <\/li>\n<\/ul>","9614c37e":"<p style=\"font-family:calibri;font-size:15pt\">\n    After doing some EDA on the data, it came to me that creating a model on making a prediction on what type 2 a pokemon has based on all of it's stats and it's type 1. I will attempt to do this with randomforest.\n<\/p>","fcb432eb":"<p style=\"font-family:calibri;font-size:25pt\">\n    Evaluation\n<\/p>","9669d736":"<p style=\"font-family: calibri, serif; font-size:15pt;\">\nI am a fan of pokemon and I played it throughout high school. I was literally late to the game because I played pokemon black back in 9th grade (2016), despite the game coming out 6 years prior. I spent a lot of time playing this game and loved everything from the missions to the wonderful design of the games graphical appearance. I went on to play pokemon sun and finished it but I got caught up in other extracurriculars and did not play a game after that. Years later I come across this awesome dataset with pokemon stats across all the games.\n    I don't have a particular goal to acomplish with this data other than to create a machine learning model. The fun part is figuring out what I am going to make a model for. My hope is that through completing EDA process I could get an understanding of the data which would further guide me towards what I could make a model for. I intend to make a through analysis and model that could help other pokemon fans understand more about pokemon in ways they couldn't think of before. \n    <\/p>","99c5fd70":"<p style=\"font-family: calibri, serif; font-size:15pt;\">\nLooking at the variables above, it would be best to create boxplots for those which would show insights on the dataset about pokemon performance. This would mean disregarding the int variable: # . Creating a boxplot for this variable would not contribute to analysis. The # stands as a unique identifier.\n<\/p>","68a6b1cd":"<p style=\"font-family: calibri; font-size: 15pt\">\n    Here we see that across all of the generations water, normal and grass are the most common pokemon type as primary type but for secondary the most common are flying, ground and poison respectively.\n          <\/p>","f09eba59":"<p style=\"font-family: calibri, serif; font-size:15pt;\">\nThere will be no need to remove na's. There are more than half nulls in the type 2 column because not every pokemon has two element types but they all have at least one.<\/p>","0006ea3f":"<p style=\"font-family: calibri; font-size:25pt\">    \nPokemon Type Count plot\n<\/p>","15c9090c":"<p style=\"font-family: calibri, serif; font-size:15pt;\">\nThis correlation plot doesn't show much other than the fact that the total is properly defined. Total is a summary of all stats and here it has a positive correlation with all the variables. A deeper dive needs to be made inorder to make a proper analysis. ","531afdc1":"<p style=\"font-family: calibri, serif; font-size:25pt;\">\nCorrelation of Data <\/p>","5853bf85":"<p style=\"font-family:calibri;font-size:25pt\">\n    Modeling\n<\/p>","034a3af3":"<p style=\"font-family: calibri, serif; font-size:15pt;\">\nGetting an overview of the quantive variables with a distribution, all of them are skewed to the left to some degree. So much so that it does not need to be transformed but it is notable. Sp. Attack, Sp.Defense, Attack and defense have a similar mean. This is a correlation that could possibly be used to answer a related hypothesis. Further analysis on correlation must be done.\n<\/p>","a790fa94":"The model doesn't do the best job at categorizing the pokemon based on their stats. This is because the problem is that any pokemon of any type can have the same stats of another pokemon of another type. This means that the stats are not a reliable way of categorizing a pokemon which is why the classification model failed. \n\nI struggled to come up with an idea for a model with this dataset. I do plan to come back to this and make a model much better but I feel this project was a good way to warm up before getting into a bigger more complex project. I would greatly appreciate any feedback and comment on anything!","8c8a7f45":"<p style=\"font-family: calibri, serif; font-size:32pt;\">\nExploratory Data Analysis - Pokemon\n<\/p>","ccbdd7b2":"<p style=\"font-family: calibri, serif; font-size:25pt;\">\nDistribution of data<\/p>"}}