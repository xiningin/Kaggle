{"cell_type":{"342e2264":"code","2a691624":"code","813e3281":"code","729fe55c":"code","289cecd2":"code","d83008fa":"code","710642e8":"code","81174bbe":"code","4dd59c79":"code","7beaeb59":"code","55e915f4":"code","15e879d0":"code","2de06050":"code","6b8d0917":"code","8a3e90b3":"markdown","28cf2613":"markdown","8fbb5241":"markdown"},"source":{"342e2264":"#load the modules.\nimport numpy as np \nimport pandas as pd \nimport folium\nfrom folium.plugins import HeatMap\n\nfrom arcgis import *","2a691624":"df_with_addresses = pd.read_csv('..\/input\/ds_analitycs_short.csv')\n#We observe the struct the dataset\ndf_with_addresses.info()","813e3281":"#We checked the format of the addresses.\ndf_with_addresses['address'].head()","729fe55c":"#We make a count of the fields for see how is distributed the records\ndf_with_addresses['address'].value_counts()[:15]","289cecd2":"# We eliminate the records which contains the string 'Unknown'\ndf_with_addresses = df_with_addresses.loc[-(df_with_addresses['address'] \\\n                                            .str.contains('Unknown')),]\n#convert value_counts() to list.\naddress = df_with_addresses['address'].value_counts().index.tolist()","d83008fa":"# Print the qty of address grouped.\nprint(\"Qty of address grouped: {} \".format(len(address)))","710642e8":"#Init GIS\ngis = GIS()","81174bbe":"# We save the data in a dictionary. This is not strictly necessary. We could have saved the data in an array and then pass them \n#to Folium and it would work fine\n\n#espa\u00f1ol\n#Guardaremos los datos en un diccionario, esto no es estrictamente necesario podr\u00edamos haberlo guardado\n#en un array y luego  pasabamos directamente al HeatMap y obtendriamos el mismo resultado. \n# Pero puede llegarnos a servir mantenerlo por algun motivo en particular.\ndic_geocoordinates = {}\nfor i in address:\n    georesult = geocode(i)[0]\n    lng = georesult['attributes']['DisplayX'] \n    lat = georesult['attributes']['DisplayY']\n    dic_geocoordinates[i] = dict(lng=lng, lat=lat)","4dd59c79":"georesult = geocode(address[0])[0]\n# We control that the dictornary is complete\nprint(\"Qty of Address: {}\".format(len(dic_geocoordinates)))","7beaeb59":"#Controlamos el formato.\ndic_geocoordinates['S\u00e3o Paulo, Sao Paulo, Brazil']","55e915f4":"#Now, we store the latitude and longitude in each record in the data set as appropriate.\ndf_with_addresses['lat'] = df_with_addresses['address'] \\\n                           .apply(lambda x: dic_geocoordinates[x]['lat'])\ndf_with_addresses['lng'] = df_with_addresses['address'] \\\n                           .apply(lambda x: dic_geocoordinates[x]['lng'])","15e879d0":"#We control the  Dataset's format\ndf_with_addresses.head()","2de06050":"# We filter of the dataset the fields that we need\narray_address = df_with_addresses.filter(items=['lat','lng'])\n#We Control the quantity of the records\nlen(array_address)","6b8d0917":"#We start the Folium module and assign the values for X and Y in Brazil. And the zoom_start: 4.\nmapHeat = folium.Map(location=[-13.7784,-55.9286], zoom_start=4)\n#We pass the values and radius determines the intensity of each point that appears\nmapHeat.add_child(folium.plugins.HeatMap(array_address.values, radius=10))\n#Show the Map.\nmapHeat","8a3e90b3":"<center>\nFOLIUM\n<\/center>\n\n\n![](https:\/\/python-visualization.github.io\/folium\/_images\/folium_logo.jpg)\n<center>\n   &\n<\/center>\n\n<center>\narcGIS\n<\/center>\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRWX1-zA3o2cTEjBy3Vie5fQitZUMKz89Wpd3_SY4nQ6uEX4-408A)\n\n**Welcome to my first Notebook in Kaggle**\n\nIn this notebook I work with arcGIS and Folium. I have a DataSet with the next format: \"City, Region, Country\" (format the plataform the Google Analitycs. With the data get the latitude and longitude then i make a heatmap with Folium.\n\n**Bienvenido a mi primer Notebook en Kaggle**\n\nEl presente notebook muestra como utilizar arcgis, y tambien como utilizar Folium para representar los datos obtenidos.\na patir de simplemnte datos como ciudad region y pais.\n armamos una cadena y obtenemos las coordenadas para pasarlo  posteriormente a Folium y ver un mapa de calor.\n Es interesante ya que son los tipos de datos que nos dan los Analitycs de Google.\n \n \n \n* Author: Manuel Barros\n* Date: 2018-09-25\n* dev.manuel.barros@gmail.com","28cf2613":"## **Example Struct of the result of geocode():**\n\n---\n\n{**'address'**: <pre>'S\u00e3o Paulo',<\/pre>\n**'location'**:<pre> {'x': -46.654679999999985, 'y': -23.562869999999975},'score': 100,<\/pre>\n**'attributes'**:\n                <pre> {'Loc_name': 'World','Status': 'T','Score': 100,'Match_addr': 'S\u00e3o Paulo','LongLabel': 'S\u00e3o Paulo, BRA',\n               'ShortLabel': 'S\u00e3o Paulo', 'Addr_type': 'Locality','Type': 'City','PlaceName': 'S\u00e3o Paulo', \n               'Place_addr': 'S\u00e3o Paulo','Phone': '', 'URL': '', 'Rank': 2, 'AddBldg': '', 'AddNum': '',\n               'AddNumFrom': '', 'AddNumTo': '', 'AddRange': '', 'Side': '', 'StPreDir': '',  'StPreType': '', \n               'StName': '', 'StType': '', 'StDir': '', 'BldgType': '', 'BldgName': '', 'LevelType': '', 'LevelName': '',\n               'UnitType': '', 'UnitName': '', 'SubAddr': '', 'StAddr': '', 'Block': '' , 'Sector': '', 'Nbrhd': '', \n               'District': '', 'City': 'S\u00e3o Paulo', 'MetroArea': '', 'Subregion': '', 'Region': 'S\u00e3o Paulo', 'RegionAbbr': '',\n               'Territory': 'Sudeste', 'Zone': '', 'Postal': '', 'PostalExt': '', 'Country': 'BRA', 'LangCode': 'POR',\n               'Distance': 0, 'X': -46.654679999999985, 'Y': -23.562869999999975,'DisplayX': -46.654679999999985,\n               'DisplayY': -23.562869999999975, 'Xmin': -46.93267999999998, 'Xmax': -46.376679999999986,\n                'Ymin': -23.840869999999974, 'Ymax': -23.284869999999977, 'ExInfo': ''},\n                <\/pre>\n **'extent'**: <pre> {'xmin': -46.93267999999998, 'ymin': -23.840869999999974, 'xmax': -46.376679999999986, 'ymax': -23.284869999999977}}<\/pre>","8fbb5241":"\n### Init the dataset.\n---\nWe start the loading the dataset. in this case the dataset is short, We only use 30,000 records because the goal is to show how arcgis works.\n\n\n### Iniciamos el dataset.\n---\nComenzamos con la carga del DataSet, en este caso es un dataset corto, que tiene simplemnte 30.000 registros para que no\nocupe demasiado tiempo y poder visualizar el ejemplo sin que se haga muy pesado.\n(Los comentarios se realizaran en un precario ingles si amerita una explicaci\u00f3n se har\u00e1 en espa\u00f1ol).\n\n"}}