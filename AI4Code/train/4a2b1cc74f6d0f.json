{"cell_type":{"3e98d3a8":"code","11d42a00":"code","d0831b36":"code","e2661320":"code","53a892a9":"code","de81f421":"code","01d72051":"code","d3225b4e":"code","efa0c91c":"markdown","3f5e06e6":"markdown","e60fb6ef":"markdown","d45741d3":"markdown","f1385b0c":"markdown","2546f722":"markdown","159b960c":"markdown","dee77938":"markdown"},"source":{"3e98d3a8":"# Say hey.\nprint('hello punchcut \ud83d\udc4b\ud83c\udffd')","11d42a00":"# Split the bill. \nparty_size = 8\ntotal_charges = 200\nindividual_balance = total_charges \/ party_size\nprint('You owe ${:,.2f}'.format(individual_balance))","d0831b36":"# Proclaim the greatest rappers of all time.\nfor i in range(5):\n    print('{}. Dylan'.format(i + 1))","e2661320":"import numpy as np\n\nvector_a = np.array([5, 5])\nvector_b = np.array([5, -5])\n\n# These two vectors form a 90\u00b0 angle. Dot product should be 0.\nprint('dot product =', np.dot(vector_a, vector_b))","53a892a9":"import pandas as pd\n\n# Convert a COVID case CSV file to a DataFrame.\ncovid19_cases_df = pd.read_csv('..\/input\/..\/input\/coronavirus-covid19-data-in-the-united-states\/us-states.csv')\ncovid19_cases_df","de81f421":"top_states_df = covid19_cases_df.drop(['date', 'fips'], axis=1)\ntop_states_df = covid19_cases_df.groupby('state').max().sort_values(by=['cases'], ascending=False).reset_index()\ntop_states_df.head(5)","01d72051":"state = 'California'\nstate_cases_df = covid19_cases_df[covid19_cases_df['state'] == state]\nstate_cases_df.tail()","d3225b4e":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.figure(figsize=(20, 5))\nplt.plot(state_cases_df['date'], state_cases_df['cases'])\nplt.plot(state_cases_df['date'], state_cases_df['deaths'])\nplt.xticks(state_cases_df['date'][::5], rotation=45, ha='right')\nplt.ylabel('Cases & Deaths in Thousands')\nplt.legend(['Cases', 'Deaths'])\nplt.title('Cumulative Cases & Deaths in ' + state)\nplt.show()","efa0c91c":"# scikit-learn: machine learning library for Python\n\nWe use scikit-learn to fit models to our data. The models help us predict, classify, and make other decisions based on the data. \n\nIt's too complex to get into here. That's what [this other notebook](https:\/\/www.kaggle.com\/epassi\/median-housing-value-c-1990-california) is about.","3f5e06e6":"# Python: programming language for general computing","e60fb6ef":"# Matplotlib: data visualization library for Python\n\nLet's draw the case curve for a specific state. We'll start by using **pandas** to create a state-specific DataFrame.","d45741d3":"# NumPy: a linear algebra library for Python","f1385b0c":"# Notebooks: like spreadsheets for data science experiments\n\n- One place for your narrative, code, and visualizations.\n- **Markdown** (simplified HTML) for narrative\n- **Python**, R, and a bunch of other languages for computation and analysis\n\nSeveral Notebook options:\n- Jupyter Notebook (very popular)\n- Kaggle (cloud-based Jupyter)\n- Google Colab (collaborative notebook)\n- Observable (uses JavaScript\/d3 instead of Python\/matplotlib)\n- SageMaker (cloud-based Jupyter by Amazon)","2546f722":"Now let's use **matplotlib** to graph the DataFrame.","159b960c":"# pandas: data structure and stats library for Python\n\nPandas turns Excel, CSV, JSON and other formats into a DataFrame.\nA DataFrame is a spreadsheet we can analyze and change with code.","dee77938":"Let's see which states have the highest cumulative case count."}}