{"cell_type":{"1e1a0627":"code","79a063f4":"code","8db66b32":"code","8a982847":"code","3aff163f":"code","32c80b82":"code","ef4df167":"code","7d8da9e7":"code","33efa829":"code","56432a1c":"code","f0e6286a":"code","27cdb822":"code","9337ffe2":"code","b67b244c":"markdown","55152cc5":"markdown","9136436f":"markdown"},"source":{"1e1a0627":"import pandas as pd\nimport numpy as np\n\nfrom sklearn import ensemble\nfrom sklearn import metrics\nfrom sklearn import model_selection\nfrom sklearn import preprocessing\nfrom sklearn import decomposition\nfrom sklearn import pipeline","79a063f4":"df = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\nX  = df.drop('price_range', axis = 1).values\ny  = df['price_range'].values","8db66b32":"scl = preprocessing.StandardScaler()\npca = decomposition.PCA()","8a982847":"#n_jobs=-1 so that it can use all the cores of the system\nrf = ensemble.RandomForestClassifier(n_jobs=-1)","3aff163f":"classifier = pipeline.Pipeline([(\"scaling\", scl),(\"pca\", pca),(\"rf\", rf)])","32c80b82":"param_grid = {\n    \"pca__n_components\": np.arange(5, 10),\n    \"rf__n_estimators\": np.arange(100, 1500, 100), #100 to 1500 with 100 step_size\n    \"rf__max_depth\": np.arange(1, 20),\n    \"rf__criterion\": [\"gini\", \"entropy\"],\n}","ef4df167":"model = model_selection.RandomizedSearchCV(\n    estimator = classifier,\n    param_distributions = param_grid,\n    n_iter = 5,\n    scoring = \"accuracy\",\n    verbose = 10,  #max_value\n    n_jobs = 1,\n    cv = 5,   \n    #stratified fold is recomended\n    # if we dont specify cv = 5 but it is still going to use cv = 5\n    # if we have categoris as target or its binalry then is it going to use stratified k-fold     \n)","7d8da9e7":"model.fit(X,y)","33efa829":"print(model.best_score_)\nprint(model.best_estimator_.get_params())","56432a1c":"param_grid = {\n    \"pca__n_components\": [5, 10],\n    \"rf__n_estimators\": [100, 200, 300, 400],\n    \"rf__max_depth\": [1, 3, 5, 7],\n    \"rf__criterion\": [\"gini\", \"entropy\"]\n}","f0e6286a":"model = model_selection.GridSearchCV(\n    estimator = classifier,\n    param_grid = param_grid,\n    scoring = \"accuracy\",\n    verbose = 10,  #max_value\n    n_jobs = 1,\n    \n    #stratified fold is recomended\n    # if we dont specify cv = 5 but it is still going to use cv = 5\n    # if we have categoris as target or its binalry then is it going to use stratified k-fold \n    cv = 5   \n)","27cdb822":"model.fit(X,y)","9337ffe2":"print(model.best_score_)\nprint(model.best_estimator_.get_params())","b67b244c":"# RandomizedSearchCV","55152cc5":"# GridSearchCV","9136436f":"# Grid\/RandomSearchCV with Pipelines"}}