{"cell_type":{"d017c449":"code","387b76b2":"code","7cade515":"code","d4868895":"code","e0e1f627":"code","c59d3f12":"code","ae395170":"code","984be035":"code","f0554340":"code","be745275":"code","dcc37484":"code","40011cf3":"code","0698033f":"code","8be58256":"code","97e72d0e":"code","5ce35110":"markdown","615c28c9":"markdown","82f9b561":"markdown","7cd09171":"markdown","19f460aa":"markdown","ac475376":"markdown","f4c62877":"markdown","7d974691":"markdown","77dce81b":"markdown","a125fbdb":"markdown","7c34b7d7":"markdown","e2137afb":"markdown","0fda155a":"markdown","35d71281":"markdown"},"source":{"d017c449":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nimport warnings\n#warnings.filterwarnings('ignore')","387b76b2":"#Carregar dataset\n#path = \"data.csv\"\npath = \"..\/input\/data.csv\"\ndf = pd.read_csv(path)","7cade515":"holidays = [\n'2014-01-01','2014-12-25',\n'2014-11-11','2014-07-04',\n'2014-01-20','2014-02-17',\n'2014-03-02','2014-05-26',\n'2014-09-01','2014-10-13',\n'2014-11-27','2015-01-01',\n'2015-12-25','2015-11-11',\n'2015-07-04','2015-01-19',\n'2015-02-16','2015-03-02',\n'2015-05-25','2015-09-07',\n'2015-10-12','2015-11-26',\n'2016-01-01','2016-12-25',\n'2016-11-11','2016-07-04',\n'2016-01-18','2016-02-15',\n'2016-03-04','2016-05-30',\n'2016-09-05','2016-10-10',\n'2016-11-24','2017-01-01',\n'2017-12-25','2017-11-11',\n'2017-07-04','2017-01-16',\n'2017-02-20','2017-03-06',\n'2017-05-29','2017-09-04',\n'2017-10-09','2017-11-23'\n]\n\ndf_holidays = pd.DataFrame(holidays)\ndf_holidays['date'] = pd.to_datetime(df_holidays[0]).dt.date\ndf_holidays['holiday'] = 1\ndf_holidays = df_holidays.drop([0], axis=1)","d4868895":"#Corringindo campo day com 0\ndf.day =  df.starttime.astype(str).str.slice(8,10).astype(int)","e0e1f627":"#Starttime e Stoptime para data\ndf.starttime = pd.to_datetime(df.starttime)\ndf.stoptime  = pd.to_datetime(df.stoptime)\ndf['date']   = df.starttime.dt.date\n\n#Defini\u00e7\u00e3o fim de semana\ndf['weekend'] = np.where(df.starttime.dt.weekday > 4 , 1, 0)\n\n#Inicializando novas features\ndf['season'] = ''\n\n#Defini\u00e7\u00e3o esta\u00e7\u00f5es Hemisf\u00e9rio NORTE\nfor x in range(df.year.min().astype(int)-1, df.year.max().astype(int)+1):\n    #Primavera: 21-03 at\u00e9 20-06\n    df.loc[(df.starttime >= str(x)+'-03-21 00:00:00') & (df.starttime <= str(x)+'-06-20 23:59:59'),  'season'] = 'primavera'\n    #Ver\u00e3o:     21-06 at\u00e9 20-09\n    df.loc[(df.starttime >= str(x)+'-06-21 00:00:00') & (df.starttime <= str(x)+'-09-20 23:59:59'),  'season'] = 'ver\u00e3o'\n    #Outono:    21-09 at\u00e9 20-12\n    df.loc[(df.starttime >= str(x)+'-09-21 00:00:00') & (df.starttime <= str(x)+'-12-20 23:59:59'),  'season'] = 'outono'\n    #Inverno:   21-12 at\u00e9 20-03\n    df.loc[(df.starttime >= str(x)+'-12-21 00:00:00') & (df.starttime <= str(x+1)+'-03-20 23:59:59'),'season'] = 'inverno'","c59d3f12":"df_holidays.head()\ndf_join = df.set_index('date').join(df_holidays.set_index('date'))\ndf_join['isholiday']  = np.where(df_join.holiday==1, 1, 0)\ndf_join['regularday'] = np.where(df_join.isholiday+df_join.weekend == 0, 1, 0)","ae395170":"#clear DF\ndf.iloc[0:0]\ndel df","984be035":"#Features Dispon\u00edveis\nprint(list(df_join))\n\n#Data frame agregado\ndfagg = df_join\ndf_map = df_join\n\n#Coluna agrega\u00e7\u00e3o viagens(trip_count)\ndfagg['trip_count'] = 1\n\n#Lista de features\ncol = ['date', 'year', 'month','day', 'hour','usertype', 'gender', 'events', 'weekend','isholiday', 'regularday', 'season']\n\n#Agrega\u00e7\u00e3o\ndfagg =  dfagg.groupby(col).aggregate({  'temperature'     : 'mean',\n                                         'tripduration'    : 'mean',\n                                         'trip_count'      : 'sum',\n                                         'dpcapacity_start': 'mean',\n                                         'dpcapacity_end'  : 'mean'\n                                        }).reset_index()\n\ndf_map =  df_map.groupby(['latitude_start','longitude_start']).aggregate({\n                                         'trip_count'      : 'sum',\n                                         'tripduration'    : 'mean'}).reset_index()","f0554340":"#clear DF_JOIN\ndf_join.iloc[0:0]\ndel df_join","be745275":"dfagg.head(5)\ndfagg_day = dfagg\nconditions = [(dfagg_day['weekend'] == 1) ,\n              (dfagg_day['isholiday'] == 1),\n              (dfagg_day['regularday'] == 1)]\n\nchoices = ['WEEKEND', 'HOLIDAY',  'REGULAR']\ndfagg_day['DayType'] = np.select(conditions, choices)\ndfagg_day['CounDays'] = 1\n\n\n\n\n#media final de semana ####\ndfagg_hour_week = dfagg_day[dfagg_day.DayType=='WEEKEND']\ndfagg_hour_week =  dfagg_hour_week.groupby(['date', 'hour']).aggregate({                                           \n                                         'trip_count'      : 'sum'                                                                                  \n                                        }).reset_index()\ndfagg_hour_week =  dfagg_hour_week.groupby(['hour']).aggregate({                                           \n                                         'trip_count'      : 'mean'                                                                                  \n                                        }).reset_index()\n\n#media dia de semana ####\ndfagg_hour_reg = dfagg_day[dfagg_day.DayType=='REGULAR']\ndfagg_hour_reg = dfagg_hour_reg.groupby(['date', 'hour']).aggregate({                                           \n                                         'trip_count'      : 'sum'                                                                                  \n                                        }).reset_index()\ndfagg_hour_reg = dfagg_hour_reg.groupby(['hour']).aggregate({                                           \n                                         'trip_count'      : 'mean'                                                                                  \n                                        }).reset_index()\n\n#media feriado ####\ndfagg_hour_hol = dfagg_day[dfagg_day.DayType=='HOLIDAY']\ndfagg_hour_hol = dfagg_hour_hol.groupby(['date', 'hour']).aggregate({                                           \n                                         'trip_count'      : 'sum'                                                                                  \n                                        }).reset_index()\ndfagg_hour_hol = dfagg_hour_hol.groupby(['hour']).aggregate({                                           \n                                         'trip_count'      : 'mean'                                                                                  \n                                        }).reset_index()","dcc37484":"#plot average travel chart\nplt.rcParams[\"figure.figsize\"] = (15,9)\n\n\n\nplt.plot(dfagg_hour_week.hour, dfagg_hour_week.trip_count, label=\"Weekend\")\nplt.plot(dfagg_hour_reg.hour, dfagg_hour_reg.trip_count, label=\"Week\")\nplt.plot(dfagg_hour_hol.hour,dfagg_hour_hol.trip_count, label=\"Holiday\")\n\n# Add legend\nplt.legend(loc='upper right')\nplt.title(\"Average Travel by Type of Day (2014-2017)\", fontsize=16, fontweight='bold')\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Average Travel per day\")\nplt.show()","40011cf3":"#copy dataframe\ndfagg_clima = dfagg\n#Agrega\u00e7\u00e3o\ndfagg_clima =  dfagg_clima.groupby(['season', 'hour']).aggregate({                                          \n                                         'tripduration'    : 'mean',\n                                         'trip_count'      : 'sum'\n                                        }).reset_index()","0698033f":"#Clear dfagg_clima \ndel dfagg","8be58256":"dfagg_clima_verao = dfagg_clima[dfagg_clima.season=='ver\u00e3o']\ndfagg_clima_prima = dfagg_clima[dfagg_clima.season=='primavera']\ndfagg_clima_out   = dfagg_clima[dfagg_clima.season=='outono']\ndfagg_clima_inver = dfagg_clima[dfagg_clima.season=='inverno']\n\nplt.rcParams[\"figure.figsize\"] = (15,9)\n\nplt.plot(dfagg_clima_verao.hour, dfagg_clima_verao.trip_count, label=\"Summer\")\nplt.plot(dfagg_clima_prima.hour, dfagg_clima_prima.trip_count, label=\"Spring\")\nplt.plot(dfagg_clima_out.hour,dfagg_clima_out.trip_count, label=\"Autumn\")\nplt.plot(dfagg_clima_inver.hour,dfagg_clima_inver.trip_count, label=\"Winter\")\n\n# Add legend\nplt.legend(loc='upper right')\nplt.title(\"Travel by season (de 2014 at\u00e9 2017)\", fontsize=16, fontweight='bold')\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Travels\")\nplt.show()","97e72d0e":"dfagg_clima_verao = dfagg_clima[dfagg_clima.season=='ver\u00e3o']\ndfagg_clima_inver = dfagg_clima[dfagg_clima.season=='inverno']\ndfagg_clima_prima = dfagg_clima[dfagg_clima.season=='primavera']\ndfagg_clima_out   = dfagg_clima[dfagg_clima.season=='outono']\n\nplt.rcParams[\"figure.figsize\"] = (15,9)\n\nplt.plot(dfagg_clima_verao.hour, dfagg_clima_verao.tripduration, label=\"Summer\")\nplt.plot(dfagg_clima_inver.hour,dfagg_clima_inver.tripduration, label=\"Winter\")\nplt.plot(dfagg_clima_prima.hour, dfagg_clima_prima.tripduration, label=\"Spring\")\nplt.plot(dfagg_clima_out.hour,dfagg_clima_out.tripduration, label=\"Autumn\")\n\n# Add legend\nplt.legend(loc='upper right')\nplt.title(\"Average Travel (de 2014 at\u00e9 2017)\", fontsize=16, fontweight='bold')\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Average\")\nplt.show()","5ce35110":"### Chigaco holidays, federal and locals from 2014 to 2017","615c28c9":"****### Adjusts","82f9b561":"For weekdays we can notice 2 peaks that can represent return \/ return of work. Weekend leisure time can represent working hours while on holidays there is a trend similar to the days of the week.","7cd09171":"**### Data aggregation","19f460aa":"### Loading dataset","ac475376":"New Year\u2019s Day January 1,\nChristmas Day December 25,\nVeteran\u2019s Day November 11,\nIndependence Day July 4,\nMartin Luther King Jr Day Third Monday in January,\nPresident\u2019s Day Third Monday in February,\nPulaski Day First Monday in March (observed mostly by city offices),\nMemorial Day Last Monday in May,\nLabor Day First Monday in September,\nColumbus Day Second Monday in October and\nThanksgiving Day Fourth Thursday in November","f4c62877":"* ### Join - dataset and hollydays","7d974691":"In the duration of travel there does not seem to be a pattern in the behavior, especially in the morning and in the winter where there is a sharp reduction during the dawn.","77dce81b":"**### Libraries","a125fbdb":"# Chicago Divvy Bicycle Sharing Data\n\n#### Link Kaggle\nhttps:\/\/www.kaggle.com\/yingwurenjian\/chicago-divvy-bicycle-sharing-data\n\n#### Descri\u00e7\u00e3o das features:\n<br><b>trip_idID<\/b> attached to each trip taken\n<br><b>year<\/b>\n<br><b>month<\/b>\n<br><b>week<\/b> week No.\n<br><b>day<\/b> \n<br><b>hour<\/b> \n<br><b>usertype<\/b> \"Customer\" is a rider who purchased a 24-Hour Pass; \"Subscriber\" is a rider who purchased an Annual Membership\n<br><b>gender<\/b>\n<br><b>starttimeday<\/b> and time trip started, in CST\n<br><b>stoptimeday<\/b> and time trip ended, in CST\n<br><b>tripdurationtime<\/b> of trip in minutes\n<br><b>temperature<\/b>\n<br><b>events<\/b>\n<br><b>from_station_idID<\/b> of station where trip originated\n<br><b>from_station_namename<\/b> of station where trip terminated\n<br><b>latitude_startstation<\/b> latitude\n<br><b>longitude_startstation<\/b> longitude\n<br><b>dpcapacity_startnumber<\/b> of total docks at each station\n<br><b>to_station_id<\/b>\n<br><b>to_station_name<\/b>\n<br><b>latitude_end<\/b>\n<br><b>longitude_end<\/b>\n<br><b>dpcapacity_endnumber<\/b> of total docks at each station","7c34b7d7":"<h1> Analyze the differences between weeks, weekends and holidays.<\/h1>","e2137afb":"Podemos observar que a demanda entre as esta\u00e7\u00f5es do ano Outono e Primavera se mantem estaveis enquanto a demanda tem aumento e redu\u00e7\u00e3o significativos para o ver\u00e3o e o inverno.\nA tend\u00eancia de utiliza\u00e7\u00e3o parece manter o mesmo ritmo entre as esta\u00e7\u00f5es do ano tendo os mesmos picos e redu\u00e7\u00f5es no decorrer do dia.","0fda155a":"****### New Features","35d71281":"<h1>To quantify the impact of the climate on the use of bicycles.<\/h1>"}}