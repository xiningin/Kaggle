{"cell_type":{"91881856":"code","b3af9d93":"code","00b5cf59":"code","dad09346":"code","e80c5865":"code","831c1441":"code","5fa02843":"code","5f9e0848":"code","5f7b6db3":"code","0cd31004":"code","f6dc628a":"code","8cc0ace1":"code","32782d14":"code","942ca75e":"code","66557e29":"code","c510120f":"code","8a8dfa99":"code","908cfce1":"code","11e0cf64":"code","2b94f629":"code","51de59fb":"code","c8bbaa54":"code","71afdfcb":"code","0f21c490":"code","84671f44":"code","3410476b":"code","a5ff64ee":"code","69cbb560":"code","6465ae48":"code","41d51640":"code","d3272ed5":"code","99d5631d":"code","82279e16":"code","1ee3278a":"code","fe006e50":"code","e27edee2":"code","e92e7490":"code","33d9e8e2":"code","5768a89c":"code","10ea1ae0":"code","6222221f":"code","a8a6038c":"code","1a151fc0":"code","274d81f7":"code","77f61dcb":"code","f473353a":"code","c950d77f":"code","1fb3fc5b":"code","fc234be3":"code","2a165155":"code","1f6c3378":"code","5a64be4d":"code","218257cd":"markdown","2d4cfaa1":"markdown","e2e97d1b":"markdown","07eaca97":"markdown","4d89edb5":"markdown","bd826136":"markdown","2267cf4b":"markdown","5599b2c5":"markdown","8848684f":"markdown","3ec7c581":"markdown","5fc6da7e":"markdown","ad98507c":"markdown","38b6ad64":"markdown","4ed2ea4f":"markdown","e0f8fa57":"markdown","be882be6":"markdown","a43071ac":"markdown","e3226d44":"markdown","1c1a9fd2":"markdown","9bf57590":"markdown","ba8b932f":"markdown","216a6bec":"markdown","d26b5664":"markdown","ea663cd5":"markdown","25682180":"markdown","4725e7d0":"markdown","afffab70":"markdown","71bafe86":"markdown","6aa61276":"markdown","a48dd9ec":"markdown","d585d21c":"markdown","1958d640":"markdown","5f59e640":"markdown","cd4af953":"markdown","d0599f15":"markdown"},"source":{"91881856":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport cufflinks as cf\nfrom scipy import stats\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()","b3af9d93":"df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf.head(n=5)","00b5cf59":"df.shape","dad09346":"df.describe()","e80c5865":"df.info()","831c1441":"df.isnull().sum()","5fa02843":"df.duplicated().sum()","5f9e0848":"duplicate = df[df.duplicated()]\nduplicate","5f7b6db3":"df1 = df.drop_duplicates()","0cd31004":"df1.duplicated().sum()","f6dc628a":"fig = px.histogram(df1, x ='sex',color='sex' , barmode = 'group')\nfig.show()","8cc0ace1":"fig = px.histogram(df1, x ='output',color='sex' , barmode = 'group')\nfig.show()","32782d14":"px.histogram(df1,x='age',color='output',pattern_shape='sex')","942ca75e":"px.histogram(df1, x ='exng',color='output' , barmode = 'relative')","66557e29":"px.histogram(df1,x='cp',color='output',barmode='group')","c510120f":"px.histogram(df1,x='chol',color='output')","8a8dfa99":"px.histogram(df1,x='thalachh',color='output')","908cfce1":"px.histogram(df1,x='thall',color='output')","11e0cf64":"px.histogram(df1,x='trtbps',color='output')","2b94f629":"px.scatter(df,x='age',y='chol',color='cp',size='cp',hover_data=['trtbps','thall','thalachh','output'])","51de59fb":"px.box(df1,points='all',color='output')","c8bbaa54":"px.violin(df1,x='chol',box=True,points='all',color='sex')","71afdfcb":"px.violin(df1,x='thalachh',box=True,points='all',color='sex')","0f21c490":"px.imshow(df1.corr())","84671f44":"zscore = np.abs(stats.zscore(df1))\nprint(zscore)","3410476b":"threshold = 4\nprint(np.where(zscore > 4))","a5ff64ee":"df_clean=df1\ndf_clean = df_clean[(zscore<4).all(axis=1)]","69cbb560":"df1.shape,df_clean.shape","6465ae48":"px.violin(df_clean,x='chol',box=True,points='all',color='sex')","41d51640":"px.violin(df_clean,x='thalachh',box=True,points='all',color='sex')","d3272ed5":"df2 = df_clean.drop(['output','slp'],axis=True)\ndata_target = df_clean['output']","99d5631d":"data_dummies=df2[['sex','cp','fbs','restecg','exng','caa','thall']]\ndata_dummies= pd.get_dummies(data_dummies,columns=['sex','cp','fbs','restecg','exng','caa','thall'])","82279e16":"data = df2.drop(['sex','cp','fbs','restecg','exng','caa','thall'],axis=True)","1ee3278a":"data=data.merge(data_dummies,left_index=True, right_index=True,how='left')\ndata.head()","fe006e50":"data.shape","e27edee2":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(data,data_target,test_size=0.3,random_state=42)","e92e7490":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\nx_train=scaler.fit_transform(x_train)\nx_test=scaler.transform(x_test)","33d9e8e2":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score,confusion_matrix","5768a89c":"log_reg = LogisticRegression()\nlog_reg.fit(x_train,y_train)\n\nlog_acc=accuracy_score(y_test,log_reg.predict(x_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(y_train,log_reg.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,log_reg.predict(x_test))*100))","10ea1ae0":"d_tree = DecisionTreeClassifier()\nd_tree.fit(x_train,y_train)\n\nd_acc=accuracy_score(y_test,d_tree.predict(x_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(y_train,d_tree.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,d_tree.predict(x_test))*100))","6222221f":"r_for = RandomForestClassifier()\nr_for.fit(x_train,y_train)\n\nr_acc=accuracy_score(y_test,r_for.predict(x_test))\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(y_train,r_for.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,r_for.predict(x_test))*100))","a8a6038c":"k_nei = KNeighborsClassifier()\nk_nei.fit(x_train,y_train)\n\nk_acc = accuracy_score(y_test,k_nei.predict(x_test))\n\nprint(\"Train set Accuracy:\"+str(accuracy_score(y_train,k_nei.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,k_nei.predict(x_test))*100))","1a151fc0":"s_vec = SVC()\ns_vec.fit(x_train,y_train)\n\ns_acc = accuracy_score(y_test,s_vec.predict(x_test))\n\nprint(\"Train set Accuracy:\"+str(accuracy_score(y_train,s_vec.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,s_vec.predict(x_test))*100))","274d81f7":"g_clf = GaussianNB()\ng_clf.fit(x_train,y_train)\n\ng_acc = accuracy_score(y_test,s_vec.predict(x_test))\n\nprint(\"Train set Accuracy:\"+str(accuracy_score(y_train,g_clf.predict(x_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(y_test,g_clf.predict(x_test))*100))","77f61dcb":"from sklearn.model_selection import  GridSearchCV\nparams = {'max_depth': [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34],\n'min_samples_split': [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\n'min_samples_leaf': [1,2,3,4,5,6,7,8,9,10,11,12,13,14]}\nclf = DecisionTreeClassifier()\ngcv = GridSearchCV(estimator=clf,param_grid=params)\ngcv.fit(x_train,y_train)","f473353a":"modelD = gcv.best_estimator_\nmodelD.fit(x_train,y_train)\ny_train_pred = modelD.predict(x_train)\ny_test_pred = modelD.predict(x_test)\np_acc = accuracy_score(y_test,modelD.predict(x_test))\nprint(f'Train score {accuracy_score(y_train_pred,y_train)*100}')\nprint(f'Test score {accuracy_score(y_test_pred,y_test)*100}')","c950d77f":"from sklearn.ensemble import VotingClassifier\nmodel1 = LogisticRegression(random_state=1)\nmodel2 = RandomForestClassifier(random_state=1)\nmodel3 = SVC(random_state=1)\nmodel = VotingClassifier(estimators=[('lr', model1), ('rf', model2),('sc',model3)], voting='hard')\nmodel.fit(x_train,y_train)\nmodel.score(x_test,y_test)\nm_acc = accuracy_score(y_test,model.predict(x_test))","1fb3fc5b":"score = model.score(x_test,y_test)\ntrain_scored = model.score(x_train,y_train)\ny_predict=model.predict(x_test)\nm_acc = accuracy_score(y_test,model.predict(x_test))\nprint(\"DecisionTreeClassifier Test Score:\",train_scored)\nprint(\"DecisionTreeClassifier Test Score:\",score)","fc234be3":"models = pd.DataFrame({\n    'Model': ['Logistic','KNN', 'SVC',  'Decision Tree Classifier',\n             'Random Forest Classifier',  'Gaussian','Voting Classifier','Prepruning'],\n    'Score': [ log_acc,k_acc, s_acc, d_acc, r_acc, g_acc,m_acc,p_acc]\n})\n\nmodels.sort_values(by = 'Score', ascending = False)","2a165155":"px.bar(models,x='Model',y='Score',color='Model')","1f6c3378":"y_predict=model.predict(x_test)\nconf_mat = confusion_matrix(y_predict,y_test)","5a64be4d":"from mlxtend.plotting import plot_confusion_matrix\n \nfig, ax = plot_confusion_matrix(conf_mat=conf_mat, figsize=(6, 6), cmap=plt.cm.Greens)","218257cd":"**Support vector classifier**","2d4cfaa1":"**Outliers removal**","e2e97d1b":"* chol have outliers better visualize with vilon plot","07eaca97":"**Data Dictionary**\n\n* The Dataset has 303 rows and 14 columns. Column descriptions are as below:\n\n\n* **Age** : Age of the patient\n* **Sex** : Sex of the patient (1:male, 0:female)\n* **exang**: exercise induced angina (1 = yes; 0 = no) means is there chest pain after exercise?\n* **ca**: number of major vessels (0-3)\n* **cp** : Chest Pain type chest pain type\n\n    Value 1: typical angina\n    \n    Value 2: atypical angina\n    \n    Value 3: non-anginal pain\n    \n    Value 4: asymptomatic\n* **trtbps** : resting blood pressure (in mm Hg)\n* **chol** : cholestoral in mg\/dl fetched via BMI sensor\n* **fbs** : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* **oldpeak** - ST depression induced by exercise relative to rest\n* **rest_ecg** : resting electrocardiographic results\n\n    Value 0: normal\n    \n    Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    \n    Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n    \n* **slp**: slope - the slope of the peak exercise ST segment (2 = upsloping; 1 = flat; 0 = downsloping)\n* **thalach** : maximum heart rate achieved\n* **thal** :2 = normal; 1 = fixed defect; 3 = reversable defect\n* **target** : 0= less chance of heart attack 1= more chance of heart attack","4d89edb5":"* Thall with 3 type have high chances","bd826136":"**KNeighborsClassifier**","2267cf4b":"* Thalachh with 160-164 and 170-174 have high chances","5599b2c5":"# <center> <div class=\"alert alert-block alert-info\">  <span style=\"color:crimson;\">  Exploratory Data Analysis  <\/center>","8848684f":"* Perfect outliers are removed","3ec7c581":"# <center> <div class=\"alert alert-block alert-info\">  <span style=\"color:crimson;\"> Heart Attack Prediction  <\/center>","5fc6da7e":"**Descriptive Statistics**","ad98507c":"* Even if chest pain after exercise have less chances of heart attack","38b6ad64":"**Missing values**","4ed2ea4f":"# <center> <div class=\"alert alert-block alert-info\">  <span style=\"color:crimson;\"> Data Preprocessing <\/center>","e0f8fa57":"* Mostly 58-59 age people in data\n* People with age between (52-53) are more in number with most chance of heart attack\n* According to the second point at that age males have high chances","be882be6":"* After dulicates removed from data, total 96 females and 206 males","a43071ac":"# Data Visualization","e3226d44":"**Pre Pruning**\n\nTry prepruning to increase test accuracy and to avoid overfitting","1c1a9fd2":"**LogisticRegression**","9bf57590":"![Hear Attack](http:\/\/www.enloe.org\/media\/Image\/heart-attack.jpg)","ba8b932f":"**Import Libraries**","216a6bec":"# Ensemble Best Models\n**Voting Classifier**\n","d26b5664":"**RandomForestClassifier**","ea663cd5":"* Males have less chance of heart attack\n* Females have high chance of attack","25682180":"# Data Cleaning","4725e7d0":"**obsevations**\n\n* Average age is 54 and maximum is 77,mostly old people and no childern in this data\n* minimum blood pressure 94 and maximum 200\n* maximum heart rate is 202 and minimum is 71\n* minimum cholestoral level is 126 and maximum 564","afffab70":"# <center> <div class=\"alert alert-block alert-info\">  <span style=\"color:crimson;\"> Done <\/center>","71bafe86":"# <center> <div class=\"alert alert-block alert-info\">  <span style=\"color:crimson;\"> Models <\/center>","6aa61276":"* cp and thalachh have little correlation with output\n* so many negative correlations","a48dd9ec":"**GaussianNB**","d585d21c":"**DecisionTreeClassifier**","1958d640":"* Chest pain type typical angina have less chances of heart attack\n* Chest pain type non-anginal pain have high chances","5f59e640":"**Repeated values**","cd4af953":"* It's not sufficent","d0599f15":"**<center> Any Suggestions are accepted <\/center>**"}}