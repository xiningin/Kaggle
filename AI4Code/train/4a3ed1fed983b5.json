{"cell_type":{"371c656f":"code","cf4439f6":"code","ab0373a1":"code","8f3a050c":"code","01389683":"code","d0cf9bcc":"code","b9f0884a":"code","2a3a7bcc":"code","a5e9e01c":"code","8dfe5460":"code","a34659e0":"code","f694dd64":"code","d5fc6f7e":"code","6784a09e":"code","316a8bfd":"code","19b9c009":"code","6c730b2c":"code","43871d39":"code","ead1e58f":"code","cc7c3017":"code","dbfa5e89":"code","2d463238":"code","aa0b5d60":"code","6458bfb5":"code","d0715405":"code","3762acc8":"code","88f3b7b4":"code","72e14ad2":"markdown","be7c4ee5":"markdown","92c96c45":"markdown","0e5591b2":"markdown","7d390e2e":"markdown","f833aa6c":"markdown","ab88bc4a":"markdown","209dd7c8":"markdown","d19c6821":"markdown","c1ce03bd":"markdown","024a60a0":"markdown","270afc3a":"markdown","8ffe8c8e":"markdown"},"source":{"371c656f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cf4439f6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport PIL.Image as Image, PIL.ImageDraw as ImageDraw, PIL.ImageFont as ImageFont\nimport plotly.graph_objects as go\nfrom scipy.stats import norm","ab0373a1":"HEIGHT = 137\nWIDTH = 236","8f3a050c":"def load_as_npa(file):\n    df = pd.read_parquet(file)\n    return df.iloc[:, 1:].values.reshape(-1 , HEIGHT , WIDTH)","01389683":"def image_from_char(char):\n    image = Image.new('RGB', (WIDTH, HEIGHT))\n    draw = ImageDraw.Draw(image)\n    myfont = ImageFont.truetype('\/kaggle\/input\/bengalifont\/HindSiliguri.ttf', 120)\n    w, h = draw.textsize(char, font=myfont)\n    draw.text(((WIDTH - w) \/ 2,(HEIGHT - h) \/ 2), char, font=myfont)\n\n    return image","d0cf9bcc":"%%time\nimages0 = load_as_npa('\/kaggle\/input\/bengaliai-cv19\/train_image_data_0.parquet')","b9f0884a":"fig , ax = plt.subplots(5,5,figsize = (15,10))\nax = ax.flatten()\n\nfor i in range(25):\n    ax[i].imshow(images0[i], cmap='Greys')\n","2a3a7bcc":"df_train = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/train.csv')\ndf_train.head()","a5e9e01c":"df_train.shape","8dfe5460":"df_classmap = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/class_map.csv')\ndf_classmap.head()","a34659e0":"df_classmap.shape","f694dd64":"print(\"Unique grapheme roots:\" ,df_train['grapheme_root'].nunique())","d5fc6f7e":"sns.set(rc={'figure.figsize':(10,10)})","6784a09e":"sns.distplot(df_train['grapheme_root'] ,fit=norm , kde=False)","316a8bfd":"sns.distplot(df_train['grapheme_root'] ,kde=False)","19b9c009":"sns.kdeplot(df_train['grapheme_root'] , shade=True)","6c730b2c":"print(\"Unique vowel diacritcs : \",df_train['vowel_diacritic'].nunique())","43871d39":"sns.distplot(df_train['vowel_diacritic'] , kde=False )","ead1e58f":"sns.kdeplot(df_train['vowel_diacritic'] , shade=True)","cc7c3017":"x = df_train['vowel_diacritic'].value_counts().sort_values().index\nvowels = df_classmap[(df_classmap['component_type'] == 'vowel_diacritic') & (df_classmap['label'].isin(x))]['component']","dbfa5e89":"fig, ax = plt.subplots(3, 5, figsize=(15, 10))\nax = ax.flatten()\n\nfor i in range(15):\n    if i < len(vowels):\n        ax[i].imshow(image_from_char(vowels.values[i]), cmap='Greys' )\n        ax[i].grid(None)\n        ","2d463238":"print(\"Unique consonant diacritcs : \",df_train['consonant_diacritic'].nunique())","aa0b5d60":"sns.distplot(df_train['consonant_diacritic'] , kde=False )","6458bfb5":"sns.kdeplot(df_train['consonant_diacritic'] , shade=True )","d0715405":"y = df_train['consonant_diacritic'].value_counts().sort_values().index\nconsonants = df_classmap[(df_classmap['component_type'] == 'consonant_diacritic') & (df_classmap['label'].isin(y))]['component']","3762acc8":"fig, ax = plt.subplots(2, 5, figsize=(16, 10))\nax = ax.flatten()\n\n\nfor i in range(15):\n    if i < len(consonants):\n        ax[i].imshow(image_from_char(consonants.values[i]), cmap='Greys' )\n        ax[i].grid(None)","88f3b7b4":"df_submission = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/sample_submission.csv')\ndf_submission['target'] = 0\ndf_submission.to_csv(\"submission.csv\", index=False)","72e14ad2":"1. Grapheme Roots-","be7c4ee5":"Histogram with frequencies :","92c96c45":"Histogram with maximum likelihood gaussian distribution fit :","0e5591b2":"Take a look at the vowel diacritics -","7d390e2e":"2. Vowel Diacritics :","f833aa6c":"KDE function :","ab88bc4a":"Histogram with frequencies  -","209dd7c8":"Histogram with frequencies :","d19c6821":"3. Consonant Diacritics ","c1ce03bd":"Thanks to Peter for a great notebook on EDA  - Check it out here:\n\nhttps:\/\/www.kaggle.com\/pestipeti\/bengali-quick-eda","024a60a0":"KDE function :","270afc3a":"KDE function -","8ffe8c8e":"Take a look at the consonant diacritics :"}}