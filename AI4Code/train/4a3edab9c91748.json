{"cell_type":{"755a41f0":"code","1cb9f532":"code","f470464f":"code","d52068a7":"code","9983a4f0":"code","9ba5a894":"code","7df91e23":"code","74746491":"code","0682b4b3":"code","bcc6f48b":"code","74680570":"code","ed1a8a8b":"code","5984e875":"code","8c3f2bc4":"code","e8a8708a":"code","2cb19916":"code","471c28b9":"code","4840e2a0":"code","25e43053":"code","00a19644":"code","bb8ed804":"code","28cb9377":"code","eb59a3b9":"code","b93a214c":"code","51301421":"code","675adb2f":"code","7478cec5":"code","d075a143":"code","1ebf761d":"code","4abeb9d6":"code","03cf68d3":"code","49ccc651":"code","2da7bcdb":"code","29db9cd1":"code","f8e94ab4":"code","7d6de3b8":"code","33b5a07f":"code","2ea98de9":"code","c275566c":"markdown","b00bfde5":"markdown","411b453c":"markdown","9f10ee89":"markdown","0b6b5dae":"markdown","bd1fdc70":"markdown","5e81e747":"markdown","9a05eb07":"markdown","32b01fa7":"markdown","4fa21bae":"markdown"},"source":{"755a41f0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\nsns.set()\npd.set_option(\"max_columns\", None)","1cb9f532":"dataset = pd.read_csv('..\/input\/california-housing-prices-data-extra-features\/California_Houses.csv')","f470464f":"dataset.head()","d52068a7":"dataset.isna().sum()","9983a4f0":"dataset.describe(include = 'all')","9ba5a894":"dataset.plot(kind = \"scatter\", x = 'Median_Income', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Median Income\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Median Income vs. Median House Value\", size = 20)\nplt.show()","7df91e23":"dataset.plot(kind = \"scatter\", x = 'Median_Age', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Median Age\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Median Age vs. Median House Value\", size = 20)\nplt.show()\nplt.show()","74746491":"dataset.plot(kind = \"scatter\", x = 'Tot_Rooms', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Total Rooms\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Total Rooms vs. Median House Value\", size = 20)\nplt.show()","0682b4b3":"dataset.plot(kind = \"scatter\", x = 'Tot_Bedrooms', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Total Bedrooms\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Total Bedrooms vs. Median House Value\", size = 20)\nplt.show()","bcc6f48b":"dataset.plot(kind = \"scatter\", x = 'Population', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Population\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Population vs. Median House Value\", size = 20)\nplt.show()","74680570":"dataset.plot(kind = \"scatter\", x = 'Households', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Households\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Households vs. Median House Value\", size = 20)\nplt.show()","ed1a8a8b":"dataset.plot(kind = \"scatter\", x = 'Distance_to_coast', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Distance to Coast\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Distance to Coast vs. Median House Value\", size = 20)\nplt.show()","5984e875":"dataset.plot(kind = \"scatter\", x = 'Distance_to_LA', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Distance to LA\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Distance to LA vs. Median House Value\", size = 20)\nplt.show()","8c3f2bc4":"dataset.plot(kind = \"scatter\", x = 'Distance_to_SanDiego', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Distance to San Diego\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Distance to San Diego vs. Median House Value\", size = 20)\nplt.show()","e8a8708a":"dataset.plot(kind = \"scatter\", x = 'Distance_to_SanJose', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Distance to San Jose\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Distance to San Jose vs. Median House Value\", size = 20)\nplt.show()","2cb19916":"dataset.plot(kind = \"scatter\", x = 'Distance_to_SanFrancisco', y = 'Median_House_Value', figsize = (10, 8))\nplt.xlabel(\"Distance to San Francisco\", size = 15)\nplt.ylabel(\"Median House Value\", size = 15)\nplt.title(\"Distance to San Francisco vs. Median House Value\", size = 20)\nplt.show()","471c28b9":"X = dataset.iloc[:,1:]\nX.head()","4840e2a0":"y = dataset.iloc[:, 0]\ny.head()","25e43053":"# Split the data into train and test sets \n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","00a19644":"# Perfrom feature scaling\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train.iloc[:, :] = sc.fit_transform(X_train.iloc[:, :])\nX_test.iloc[:, :] = sc.transform(X_test.iloc[:, :])","bb8ed804":"X_train.head()","28cb9377":"y_train = y_train.to_numpy()\ny_test = y_test.to_numpy()","eb59a3b9":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","b93a214c":"y_pred = regressor.predict(X_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","51301421":"from sklearn.metrics import r2_score \n\nr2_score(y_test, y_pred)","675adb2f":"from sklearn.svm import SVR\nregressor = SVR(kernel = 'rbf')\nregressor.fit(X_train, y_train)","7478cec5":"y_pred = regressor.predict(X_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","d075a143":"r2_score(y_test, y_pred)","1ebf761d":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10)\nregressor.fit(X_train, y_train)","4abeb9d6":"y_pred = regressor.predict(X_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","03cf68d3":"r2_score(y_test, y_pred)","49ccc651":"import tensorflow as tf\n\nann = tf.keras.models.Sequential()\n\nann.add(tf.keras.layers.Dense(units=12, activation='relu'))\n\nann.add(tf.keras.layers.Dense(units=12, activation='relu'))\n\nann.add(tf.keras.layers.Dense(units=1))\n\nann.compile(optimizer = 'adam', loss = 'mean_squared_error')","2da7bcdb":"ann.fit(np.asarray(X_train).astype(np.float32), y_train, batch_size = 32, epochs = 100)","29db9cd1":"y_pred_ann = ann.predict(X_test)\nprint(np.concatenate((y_pred_ann.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","f8e94ab4":"r2_score(y_test, y_pred_ann)","7d6de3b8":"from xgboost import XGBRegressor\n\nregressor = XGBRegressor()\nregressor.fit(X_train, y_train)","33b5a07f":"y_pred_xgboost = regressor.predict(X_test)","2ea98de9":"r2_score(y_test, y_pred_xgboost)","c275566c":"### Support Vector Regression","b00bfde5":"### Artificial Neural Networks","411b453c":"## Start with some EDA ","9f10ee89":"### Multiple Linear Regression","0b6b5dae":"### Doing the data preprocessing","bd1fdc70":"## Build the Models","5e81e747":"### Test some Modles ","9a05eb07":"### XGBoost","32b01fa7":"### Random Forest","4fa21bae":"#### It looks like the best model is XGBoost with and r^2 of 0.83, followed closely by the random forest which has an r^2 of 0.80 and an MAPE of 0.177"}}