{"cell_type":{"80319998":"code","a6384f80":"code","c2dd5218":"code","8dd666e1":"code","b2a34370":"code","efca6a57":"code","61be90e5":"code","23f29491":"code","a7b74180":"markdown","d9d6b86b":"markdown","6601418c":"markdown","8da59aae":"markdown","393ed5e9":"markdown"},"source":{"80319998":"! pip install numerizer","a6384f80":"from numerizer import numerize\n\nprint('seven million two thousand four', numerize('seven million two thousand four'))\nprint('twenty twenty', numerize('twenty twenty'))\nprint('two and three quarter', numerize('two and three quarter'))\nprint('one billion', numerize('one billion'))","c2dd5218":"! pip install faker","8dd666e1":"from faker import Faker\n\nfake = Faker()\n\nprint('fake name:', fake.name())\nprint('fake first_name_female:', fake.first_name_female())\nprint('fake user_name:', fake.user_name())\nprint('fake password:', fake.password())\nprint('fake month:', fake.month())","b2a34370":"! pip install emot","efca6a57":"import emot\n\ntext = ';) :-) OMG :('\nans = emot.emoticons(text)\n\nprint(ans)\nprint()\nprint('value', ans['value'])\nprint('location', ans['location'])\nprint('mean', ans['mean'])\nprint('flag', ans['flag'])","61be90e5":"! pip install pendulum","23f29491":"import pendulum\n\nnow_in_paris = pendulum.now('Europe\/Paris')\nprint('Now in Paris', now_in_paris)\nprint('UTC', now_in_paris.in_timezone('UTC'))\n\nprint('Tomorrow', pendulum.now().add(days=1))\n\nlast_week = pendulum.now().subtract(weeks=1)\nprint('Last Week', last_week)\n\npast = pendulum.now().subtract(minutes=2)\nprint('Past', past)\nprint('Diff for humans', past.diff_for_humans())\n\ndiff = past - last_week\nprint('Delta hours', diff.hours)\nprint('Delta words', diff.in_words(locale='en'))","a7b74180":"# Pendulum\n* Native datetime instances are enough for basic cases, but when you face more complex use-cases they often show limitations and are not so intuitive to work with. Pendulum provides a cleaner and more easy to use API while still relying on the standard library. It's still datetime, but better.","d9d6b86b":"## Emot\n* Empot is a python library to extract the emojis and emoticsons from a text(string). All the emojis and emoticons are taken from reliable source i.e. Wikipedia.org.","6601418c":"# Useful libraries for python","8da59aae":"## Faker\n* Faker is a python package that generates fake data for you.","393ed5e9":"## Numerizer\n* A python module to to convert natural language numerics into ints and folats."}}