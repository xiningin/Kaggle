{"cell_type":{"5ba2b36a":"code","83e0f8e3":"code","7958d8de":"code","584852be":"code","9186ac5a":"code","f2e54226":"code","76672b04":"code","aa5f8a48":"code","a28b3109":"code","1551a662":"code","db36c7cb":"code","03471d44":"code","b599dfae":"code","992e4cfb":"code","828500b0":"code","f06a14b9":"code","188f48fa":"code","5e0e7a06":"code","116b9972":"code","24a5a1e3":"code","d63b1fcb":"code","ab8bae5d":"code","1ef11625":"code","d479987c":"code","08397b07":"code","f6ff8d86":"code","9773afcc":"code","8ad86469":"code","36cfc043":"code","3b50fa14":"code","b013ef86":"code","cd41af67":"code","0d49b692":"code","f07c7cd3":"code","ae535910":"code","78ef9611":"markdown","ce24b376":"markdown","80378aba":"markdown","6f7a88e7":"markdown","e34cfb47":"markdown","bfd1345a":"markdown","7fa07eb0":"markdown","30e9ee7e":"markdown","bb28ed63":"markdown"},"source":{"5ba2b36a":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","83e0f8e3":"train = pd.read_csv(\"..\/input\/cat-in-the-dat-ii\/train.csv\")\nprint(train.shape)","7958d8de":"train.head(5)","584852be":"train.dtypes","9186ac5a":"train.describe()","f2e54226":"print(train.isnull().sum())","76672b04":"#The distribution of \"target\"\nplt.figure(figsize = (5, 5))\nax = sns.countplot(x=\"target\", data=train, palette=\"Set2\")\nax.set_title('Target Distribution', weight = 'bold',fontsize = 15)\nplt.xlabel('Target', fontsize = 12)\nplt.ylabel('Count', fontsize = 12)","aa5f8a48":"fig, ax = plt.subplots(3,2,figsize = (15,20))\nfor i in range(5): \n    sns.countplot(f'bin_{i}', data= train,ax = ax[i\/\/2][i%2])\n    ax[i\/\/2][i%2].set_ylim([0, 550000])\nfig.suptitle(\"Binary Feature Distribution\", fontsize=20, weight = 'bold')\nplt.show()","a28b3109":"fig, ax = plt.subplots(3,2, figsize=(15, 20))\nfor i in range(5): \n    sns.countplot(f'nom_{i}', data= train, ax=ax[i\/\/2][i%2],\n                 order=train[f'nom_{i}'].value_counts().index)\n    ax[i\/\/2][i%2].set_ylim([0, 350000])\nfig.suptitle(\"Nominal Feature Distribution\", fontsize = 20, weight = 'bold')\nplt.show()","1551a662":"fig, ax = plt.subplots(3,2, figsize=(15, 20))\nfor i in range(5): \n    sns.countplot(f'ord_{i}', data= train, ax=ax[i\/\/2][i%2],\n                 order=train[f'ord_{i}'].value_counts().index)\n    ax[i\/\/2][i%2].set_ylim([0, 250000])\nfig.suptitle(\"Ordinal Feature Distribution\", fontsize = 20, weight = 'bold')\nplt.show()","db36c7cb":"fig, ax = plt.subplots(2,1, figsize=(24, 16))\n\nsns.countplot('day', hue='target', data= train, ax=ax[0], palette=\"Set2\")\nax[0].set_ylim([0, 100000])\n\nsns.countplot('month', hue='target', data= train, ax=ax[1], palette=\"Set3\")\nax[1].set_ylim([0, 70000])\n\nfig.suptitle(\"Time Distribution\", fontsize=20, weight = 'bold')\nplt.show()","03471d44":"train.groupby('bin_3').count()","b599dfae":"train.groupby('bin_4').count()","992e4cfb":"train['bin_3']=np.where(train['bin_3'] =='F', '0', train['bin_3'])\ntrain['bin_3']=np.where(train['bin_3'] =='T', '1', train['bin_3'])\n\ntrain['bin_4']=np.where(train['bin_4'] =='N', '0', train['bin_4'])\ntrain['bin_4']=np.where(train['bin_4'] =='Y', '1', train['bin_4'])\n\nbin = train[['id','bin_0','bin_1','bin_2','bin_3','bin_4','target']]\nbin[\"bin_3\"]= bin[\"bin_3\"].astype(float) \nbin[\"bin_4\"]= bin[\"bin_4\"].astype(float) \nbin.head(5)","828500b0":"bin = bin.interpolate()\nprint(bin.isnull().sum())\n\ncorrelation_b = bin.corr()\nplt.figure(figsize = (10, 10))\nsns.set(font_scale = 1.5)\nsns.heatmap(correlation_b, annot = True, annot_kws = {'size': 10}, cmap = 'Blues')","f06a14b9":"train.groupby('nom_0').count()","188f48fa":"train['nom_0']=np.where(train['nom_0'] =='Blue', '1', train['nom_0'])\ntrain['nom_0']=np.where(train['nom_0'] =='Green', '2', train['nom_0'])\ntrain['nom_0']=np.where(train['nom_0'] =='Red', '3', train['nom_0'])","5e0e7a06":"train.groupby('nom_1').count()","116b9972":"train['nom_1']=np.where(train['nom_1'] =='Circle', '1', train['nom_1'])\ntrain['nom_1']=np.where(train['nom_1'] =='Polygon', '2', train['nom_1'])\ntrain['nom_1']=np.where(train['nom_1'] =='Square', '3', train['nom_1'])\ntrain['nom_1']=np.where(train['nom_1'] =='Star', '4', train['nom_1'])\ntrain['nom_1']=np.where(train['nom_1'] =='Trapezoid', '5', train['nom_1'])\ntrain['nom_1']=np.where(train['nom_1'] =='Triangle', '6', train['nom_1'])","24a5a1e3":"train.groupby('nom_2').count()","d63b1fcb":"train['nom_2']=np.where(train['nom_2'] =='Axolotl', '1', train['nom_2'])\ntrain['nom_2']=np.where(train['nom_2'] =='Cat', '2', train['nom_2'])\ntrain['nom_2']=np.where(train['nom_2'] =='Dog', '3', train['nom_2'])\ntrain['nom_2']=np.where(train['nom_2'] =='Hamster', '4', train['nom_2'])\ntrain['nom_2']=np.where(train['nom_2'] =='Lion', '5', train['nom_2'])\ntrain['nom_2']=np.where(train['nom_2'] =='Snake', '6', train['nom_2'])","ab8bae5d":"train.groupby('nom_3').count()","1ef11625":"train['nom_3']=np.where(train['nom_3'] =='Canada', '1', train['nom_3'])\ntrain['nom_3']=np.where(train['nom_3'] =='China', '2', train['nom_3'])\ntrain['nom_3']=np.where(train['nom_3'] =='Costa Rica', '3', train['nom_3'])\ntrain['nom_3']=np.where(train['nom_3'] =='Finland', '4', train['nom_3'])\ntrain['nom_3']=np.where(train['nom_3'] =='India', '5', train['nom_3'])\ntrain['nom_3']=np.where(train['nom_3'] =='Russia', '6', train['nom_3'])","d479987c":"train.groupby('nom_4').count()","08397b07":"train['nom_4']=np.where(train['nom_4'] =='Bassoon', '1', train['nom_4'])\ntrain['nom_4']=np.where(train['nom_4'] =='Oboe', '2', train['nom_4'])\ntrain['nom_4']=np.where(train['nom_4'] =='Piano', '3', train['nom_4'])\ntrain['nom_4']=np.where(train['nom_4'] =='Theremin', '4', train['nom_4'])","f6ff8d86":"nom = train[['id','nom_0','nom_1','nom_2','nom_3','nom_4','target']]\nnom[\"nom_0\"]= nom[\"nom_0\"].astype(float) \nnom[\"nom_1\"]= nom[\"nom_1\"].astype(float) \nnom[\"nom_2\"]= nom[\"nom_2\"].astype(float) \nnom[\"nom_3\"]= nom[\"nom_3\"].astype(float) \nnom[\"nom_4\"]= nom[\"nom_4\"].astype(float)\nnom.head(5)","9773afcc":"nom = nom.interpolate()\nprint(nom.isnull().sum())","8ad86469":"correlation_n = nom.corr()\nplt.figure(figsize = (10, 10))\nsns.set(font_scale = 1.5)\nsns.heatmap(correlation_n, annot = True, annot_kws = {'size': 10}, cmap = 'Reds')","36cfc043":"train.groupby('ord_2').count()","3b50fa14":"train['ord_2']=np.where(train['ord_2'] =='Boiling Hot', '1', train['ord_2'])\ntrain['ord_2']=np.where(train['ord_2'] =='Cold', '2', train['ord_2'])\ntrain['ord_2']=np.where(train['ord_2'] =='Freezing', '3', train['ord_2'])\ntrain['ord_2']=np.where(train['ord_2'] =='Hot', '4', train['ord_2'])\ntrain['ord_2']=np.where(train['ord_2'] =='Lava Hot', '5', train['ord_2'])\ntrain['ord_2']=np.where(train['ord_2'] =='Warm', '6', train['ord_2'])","b013ef86":"train.groupby('ord_3').count()","cd41af67":"train['ord_3']=np.where(train['ord_3'] =='a', '1', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='b', '2', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='c', '3', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='d', '4', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='e', '5', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='f', '6', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='g', '7', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='h', '8', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='i', '9', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='j', '10', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='k', '11', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='l', '12', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='m', '13', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='n', '14', train['ord_3'])\ntrain['ord_3']=np.where(train['ord_3'] =='o', '15', train['ord_3'])","0d49b692":"ord = train[['id','ord_0','ord_2','ord_3','month','day','target']]\nord[\"ord_0\"]= ord[\"ord_0\"].astype(float) \nord[\"ord_2\"]= ord[\"ord_2\"].astype(float) \nord[\"ord_3\"]= ord[\"ord_3\"].astype(float)\nord.head(5)","f07c7cd3":"ord = ord.interpolate()\nprint(ord.isnull().sum())","ae535910":"correlation_o = ord.corr()\nplt.figure(figsize = (10, 10))\nsns.set(font_scale = 1.5)\nsns.heatmap(correlation_o, annot = True, annot_kws = {'size': 10}, cmap = 'Greens')","78ef9611":"* Nominal features (nom_)","ce24b376":"* Binary Features (bin_)","80378aba":"**Overview the dataset**","6f7a88e7":"* Find correlation","e34cfb47":"The data contains binary features (bin_), nominal features (nom_), ordinal features (ord_) as well as (potentially cyclical) day (of the week) and month features. The string ordinal features ord_{3-5} are lexically ordered according to string.ascii_letters.","bfd1345a":"* Day and Month","7fa07eb0":"* Ordinal features (ord_) ","30e9ee7e":"**Distribution of each variable**","bb28ed63":"**This notebook is going to EDA and create data visualization.**"}}