{"cell_type":{"f1ae7350":"code","8b5050b1":"code","a48d83ca":"code","93adf5fa":"code","85d34e20":"code","ab95dd2b":"code","0e59bff7":"code","b8f304c6":"code","21c840ff":"code","80614a31":"code","59645af4":"code","0282b2ff":"code","df0a66be":"code","c3cf86d1":"code","871f3748":"code","4481a53f":"code","876d5088":"code","1910855c":"code","a3ff1a29":"code","4fb5a26d":"code","68632c6a":"code","a66f982b":"code","62a3d636":"code","b7d1b78d":"code","fb930417":"code","d92c5ef9":"code","a47df3b4":"code","6de04c6a":"code","5161cd72":"code","8d758fc4":"code","333afec7":"code","d7e2b850":"code","16dbce22":"code","0e477e14":"code","cb57dd15":"markdown","3ecce438":"markdown","723dc303":"markdown","fa43b9bd":"markdown","c3bb9402":"markdown","966b9b94":"markdown","bf5d2bc0":"markdown"},"source":{"f1ae7350":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b5050b1":"columns  = pd.read_csv(\"\/kaggle\/input\/young-people-survey\/columns.csv\")\n\nresponses = pd.read_csv(\"\/kaggle\/input\/young-people-survey\/responses.csv\")","a48d83ca":"responses.head()","93adf5fa":"music_datas = responses.loc[:,\"Music\":\"Opera\"]\n\nmovie_datas = responses.loc[:,\"Movies\":\"Action\"]\n\nhobbie_and_interests_datas = responses.loc[:,\"History\":\"Pets\"]\n\nphobia_datas = responses.loc[:,\"Flying\":\"Fear of public speaking\"]\n\nhealth_habit_datas = responses.loc[:,\"Smoking\":\"Healthy eating\"]\n\npersonal_opinion_datas = responses.loc[:,\"Daily events\":\"Branded clothing\"]\n\nspending_habit_datas = responses.loc[:,\"Entertainment spending\":\"Spending on healthy eating\"]\n\ndemographic_datas = responses.loc[:,\"Age\":]","85d34e20":"# music ratings\nsns.countplot(responses.Music)\n\n","ab95dd2b":"sns.countplot(responses.Gender)","0e59bff7":"\nresponses.Music.fillna(5.0, inplace=True)","b8f304c6":"sns.jointplot(data = responses , x = \"Gender\", y = \"Music\")","21c840ff":"label = responses.Music[responses.Gender == \"female\"].value_counts().index\nsize  = responses.Music[responses.Gender == \"female\"].value_counts().values\ncolor = [\"orange\",\"blue\",\"gray\",\"pink\",\"yellow\"]\nexplode  = [0,0,0,0,0]\n\nplt.figure(figsize = (10,10))\nplt.pie(size, explode=explode, labels=label, colors=color, autopct='%1.1f%%')\nplt.title('Rating Percentage by Female',color = 'blue',fontsize = 15)","80614a31":"label = responses.Music[responses.Gender == \"male\"].value_counts().index\nsize  = responses.Music[responses.Gender == \"male\"].value_counts().values\ncolor = [\"orange\",\"blue\",\"gray\",\"pink\",\"yellow\"]\nexplode  = [0,0,0,0,0]\n\nplt.figure(figsize = (10,10))\nplt.pie(size, explode=explode, labels=label, colors=color, autopct='%1.1f%%')\nplt.title('Rating Percentage by Male',color = 'blue',fontsize = 15)","59645af4":"phobia_datas.reset_index(drop=True, inplace=True)\ndemographic_datas.reset_index(drop=True, inplace=True)\ndata = pd.concat([phobia_datas, demographic_datas], axis = 1)\n","0282b2ff":"data.isnull().sum()","df0a66be":"# dealing nan values\n# gender is not important\nphobia_list = list(phobia_datas.columns.values)\n\nfor i in phobia_list:\n    data[i].fillna(0.0,inplace = True)","c3cf86d1":"data.isnull().sum()","871f3748":"#  phoiba ratings by genders\n\n\n#phobia list \n\nphobia_list = list(phobia_datas.columns.values)\n\nphobia_ratio = []\n\nfor each in phobia_list:\n    x  = data[each][data.Gender == \"female\"]\n    ratio1 = sum(x)\/len(x)\n    limited_float = round(ratio1, 2)\n    phobia_ratio.append(limited_float)\n\ndic1  = {\"phobies\": phobia_list, \"average scores by females\": phobia_ratio}\nfemale_phobia_rate  =pd.DataFrame(dic1)\nfemale_phobia_rate.head()","4481a53f":"phobia_ratio2 = []\n\nfor each in phobia_list:\n    y  = data[each][data.Gender == \"male\"]\n    ratio2 = sum(y)\/len(y)\n    limited_float2 = round(ratio2, 2)\n    phobia_ratio2.append(limited_float2)\ndic2  = {\"phobies\": phobia_list, \"average scores by males\": phobia_ratio2}\nmale_phobia_rate  =pd.DataFrame(dic2)\nmale_phobia_rate.head()","876d5088":"f,ax1 = plt.subplots(figsize = (20,15))\nsns.pointplot(x = \"phobies\", y = \"average scores by females\", data = female_phobia_rate, color = \"orange\", alpha = 0.6, label= \"female\")\nsns.pointplot(x = \"phobies\", y = \"average scores by males\", data = male_phobia_rate, color = \"blue\", alpha = 0.6, label = \"male\")\nax1.legend(loc = \"upper right\", frameon = True )\nax1.set(xlabel = \"phobies\", ylabel = \"average scores \", title = \"average phobie scores given gender\")\nplt.show()","1910855c":"# distinction between rates","a3ff1a29":"\ncounter = 0 \ndistinction = []\nfor each in phobia_ratio:\n    \n    val  = each - phobia_ratio2[counter]\n    limited_float3 = round(val,2)\n    counter = counter + 1\n    distinction.append(limited_float3)","4fb5a26d":"\ndis_dic  = {\"phobies\":phobia_list, \"distinction\": distinction }\ndis_data = pd.DataFrame(dis_dic)\ndis_data.head()","68632c6a":"### barplot\nplt.figure(figsize = (20,8))\nax = sns.barplot(data = dis_data, x = \"phobies\", y=\"distinction\", alpha = 0.6)\n\nax.set_title(\"Phobie Rating Gap Between Genders\")\nax.text(7,1,\"Bigger = Female's phobie score is bigger than Male's\")\nplt.show()\n\n","a66f982b":"\"\"\"\n- needed data's:\n    hobbie_and_interests_datas\n    demographic_datas   \n    \n- dealing null values (just handle interests)\n\"\"\"","62a3d636":"hobbie_and_interests_datas.columns","b7d1b78d":"hobbie_and_interests_datas.isnull().sum()","fb930417":"# dealing null values\nhobbie_and_interests_datas = hobbie_and_interests_datas.fillna(0.0)\nhobbie_and_interests_datas.isnull().sum()\n","d92c5ef9":"hob_dem = pd.concat([hobbie_and_interests_datas,demographic_datas[\"Left - right handed\"]],axis= 1)","a47df3b4":"hob_dem.head()","6de04c6a":"hob_dem[\"Left - right handed\"].value_counts()","5161cd72":"\ninterests = list(hobbie_and_interests_datas.columns)\n","8d758fc4":"right = []\nleft = []\nfor each in interests:\n    a = hob_dem[each][hob_dem[\"Left - right handed\"] == \"right handed\"]\n    b = hob_dem[each][hob_dem[\"Left - right handed\"] == \"left handed\"]\n    \n    right_ratio = sum(a)\/len(a)\n    left_ratio = sum(b)\/len(b)\n    right_ratio = round(right_ratio,2)\n    left_ratio = round(left_ratio,2)\n    right.append(right_ratio)\n    left.append(left_ratio)\n    \n","333afec7":"hand_dic = {\"hobbie\": interests, \"right handed\": right, \"left handed\": left}\ndata_hand = pd.DataFrame(hand_dic)","d7e2b850":"f, ax  = plt.subplots(figsize = (25,10))\nsns.pointplot(data = data_hand , x = \"hobbie\", y = \"right handed\", color = \"orange\", alpha = 0.6, label = \"right handed\")\nsns.pointplot(data = data_hand , x = \"hobbie\", y = \"left handed\", color = \"green\", alpha = 0.6, label = \"left handed\")\nax.set(xlabel =\"hobbies\", ylabel= \"used hand\", title = \"\u0130nterests By Given Used Hands\")\nplt.xticks(rotation = 90)\nplt.text(0.3,4.5,\"* Right Handed\", color = \"orange\", alpha = 0.6,fontsize = 20)\nplt.text(0.3,4.3,\"* Left Handed\", color = \"green\", alpha = 0.6,fontsize = 20)\nplt.show()","16dbce22":"counter2 = 0\nlistt = []\nfor each in right:\n    var1  = each - left[counter2]\n    counter2 += 1\n    var1 = round(var1,2)\n    listt.append(var1)\n\ndicc =  {\"hobbies\":interests, \"distinction\": listt}\ndata_dicc = pd.DataFrame(dicc)\ndata_dicc.head()\n\n","0e477e14":"plt.figure(figsize = (19,15))\nsns.barplot(data = data_dicc , x = \"hobbies\", y = \"distinction\")\nplt.xticks(rotation = 90 )\nplt.text(0.5,0.3,\"Right Handed\", color = \"red\", alpha = 0.4, fontsize = 15)\nplt.text(0.5,-0.35,\"Left Handed\",color = \"red\", alpha = 0.4, fontsize = 15)\nplt.title(\"The Gap Between The Areas of Interest Selected According to The Hand Used \")\nplt.show()","cb57dd15":"<a id = \"1\"> <\/a>\n## Music preferences according to Gender ","3ecce438":"<a id = \"0\"> <\/a>\n## Read Datas","723dc303":"## First Look at Data","fa43b9bd":"<a id = \"3\"> <\/a>\n## Hypothesis testing: Do the left handed people have different interests than right handed?","c3bb9402":"<a id = \"2\"> <\/a>\n## Hypothesis testing: Do women fear certain phenomena significantly more than men? ","966b9b94":"# Introduction\n\nThis survey contains young people's thoughts about:\n1. Music preferences (19 items)\n1. Movie preferences (12 items)\n1. Hobbies & interests (32 items)\n1. Phobias (10 items)\n1. Health habits (3 items)\n1. Personality traits, views on life, & opinions (57 items)\n1. Spending habits (7 items)\n1. Demographics (10 items)\n\nThey all ranked by 0-5 \n\n\u0130nformation was taken from a particular area.\n\n1.[Read datas and explore](#0)\n\n2.[Music preferences according to Gender](#1)\n\n3.[Hypothesis testing: Do women fear certain phenomena significantly more than men](#2)\n\n4.[Hypothesis testing: Do the left handed people have different interests than right handed?](#3)\n\n","bf5d2bc0":"## Do people enjoy listening to music ?"}}