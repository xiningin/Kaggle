{"cell_type":{"810880d4":"code","143d698d":"code","d7d7f1da":"code","b398dd99":"code","e88904cf":"code","49e7aa41":"code","522983fe":"code","59d735eb":"code","15c006e2":"code","edc86d7c":"code","5eb0f685":"code","256a5b8e":"code","e683b5da":"code","c2771197":"markdown","6f2fd6e5":"markdown","3f1972da":"markdown"},"source":{"810880d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","143d698d":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","d7d7f1da":"print(\"Training data shape = {}\".format(train_data.shape))\nprint(\"Test data shape = {}\".format(test_data.shape))\ntrain_data.head()","b398dd99":"train_data = train_data.drop(columns=['Name','Cabin'])\ntrain_data['family_member'] = train_data['SibSp'] + train_data['Parch']\ntrain_data = train_data.drop(columns=['SibSp', 'Parch'])","e88904cf":"test_data = test_data.drop(columns=['Name','Cabin'])\ntest_data['family_member'] = test_data['SibSp'] + test_data['Parch']\ntest_data = test_data.drop(columns=['SibSp', 'Parch'])","49e7aa41":"train_data.fillna(0,inplace=True)\ntest_data.fillna(0,inplace=True)","522983fe":"X = train_data.drop(columns=['Survived'])\nY = train_data['Survived']\n\ncate_features_index = np.where(X.dtypes != float)[0]","59d735eb":"from catboost import CatBoostClassifier, cv, Pool\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score","15c006e2":"xtrain,xtest,ytrain,ytest = train_test_split(X,Y,train_size=0.90,random_state=42)\nclf =CatBoostClassifier(eval_metric='Accuracy',use_best_model=True,random_seed=42,learning_rate=0.05)","edc86d7c":"clf.fit(xtrain,ytrain,cat_features=cate_features_index,eval_set=(xtest,ytest), early_stopping_rounds=50,verbose=0)","5eb0f685":"test_id = test_data.PassengerId\ntest_data.isnull().sum()","256a5b8e":"prediction = clf.predict(test_data)","e683b5da":"df_sub = pd.DataFrame()\ndf_sub['PassengerId'] = test_id\ndf_sub['Survived'] = prediction.astype(np.int)\n\ndf_sub.to_csv('gender_submission.csv', index=False)","c2771197":"# Saving Output","6f2fd6e5":"# Modelling With CatBoost","3f1972da":"# Feature Engineering"}}