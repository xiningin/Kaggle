{"cell_type":{"32c468cf":"code","b423c7a6":"code","726094b5":"code","d33263c8":"code","50b9d6f4":"code","cf3b5aef":"code","b1748137":"code","e2fdc59b":"code","6e37df62":"code","b5523be2":"code","243cc33b":"code","ce52f724":"code","fc2db850":"code","d672c4c9":"code","9dab8e4a":"code","6849bf64":"code","868a23fd":"code","94782b3f":"code","8058214a":"code","7f8d74eb":"code","9ded0b77":"code","a3200e61":"markdown","7d0b6deb":"markdown"},"source":{"32c468cf":"import pandas as pd","b423c7a6":"df=pd.read_csv(\"\/kaggle\/input\/daily-temperature-of-major-cities\/city_temperature.csv\")","726094b5":"import altair as alt\nimport altair_render_script\n","d33263c8":"df=df[df.AvgTemperature>-99.0]","50b9d6f4":"df_year=df.groupby([\"Year\",\"Country\",\"Region\"]).mean().reset_index()\nlist_countries=df_year[\"Country\"].unique()\nprint(len(list_countries))","cf3b5aef":"\n\ndf_year","b1748137":"df_months=df.groupby([\"Country\",\"Month\",\"Year\"]).mean().reset_index()","e2fdc59b":"alt.data_transformers.disable_max_rows()","6e37df62":"# A dropdown filter\nsome_countries=df_year.Country.unique()\ncountry_dropdown = alt.binding_select(options=some_countries)\ncountry_select = alt.selection_single(fields=['Country'], bind=country_dropdown, name=\"Country\",\n                                      init={\"Country\":\"India\"})\nyear_dropdown = alt.binding_select(options=df_year.Year.unique())\nyear_select = alt.selection_single(fields=['Year'], bind=year_dropdown, name=\"Year\",\n                                      init={\"Year\":2000})\nbase=alt.Chart(df_year).mark_line(point=True).encode(\nalt.X(\"Year:N\"),\nalt.Y(\"AvgTemperature\",scale=alt.Scale(zero=False)),\n    tooltip=[\"AvgTemperature\",\"Country\",\"Year\"]\n)\nnbase=alt.Chart(df_months).mark_line(point=True).encode(\nalt.X(\"Month:N\",axis=alt.Axis(tickCount=12)),\n    alt.Y(\"AvgTemperature\",scale=alt.Scale(zero=False)),\n    \n    tooltip=[\"AvgTemperature\",\"Country\",\"Month\"]\n)\nfilter_countries = alt.hconcat(base.add_selection(\n   country_select\n).transform_filter(\n   country_select\n).properties(title=\"Dropdown Filtering\"),nbase.transform_filter(country_select).add_selection(\nyear_select\n).transform_filter(year_select))\n\n\n\nfilter_countries","b5523be2":"\n#some_countries=[\"India\",\"Australia\",\"Canada\",\"China\",\"Japan\",\"South Africa\",\"Bangladesh\",\"Brazil\",\"North Korea\"]\nbase=alt.hconcat()\nmain=alt.vconcat()\nfor i in range(125):\n    if i%25==0 and i!=0:\n        main=alt.vconcat(main,base)\n        base=alt.hconcat()\n        \n    else:\n        \n        temp=alt.Chart(df_year[df_year.Country==some_countries[i]]).mark_line(  ).encode(\n        alt.X(\"Year:N\",),\n        alt.Y(\"AvgTemperature\",scale=alt.Scale(zero=False))).properties(title=some_countries[i])\n        base=alt.hconcat(base,temp)\nmain\n","243cc33b":"df_total=df_year.groupby([\"Year\"]).mean().reset_index()\ndf_total\nalt.Chart(df_total).mark_line().encode(alt.X(\"Year\"),\n                                       alt.Y(\"AvgTemperature\",scale=alt.Scale(zero=False))).properties(title=\"The Avg Temperature of all Regions Over the years\")","ce52f724":"df=df.sort_values([\"Year\",\"Country\",\"City\",\"Month\",\"Day\"])","fc2db850":"df=df.drop([\"Region\"],axis=1)","d672c4c9":"import numpy as np\nTempList=df.AvgTemperature.values\nprint(TempList)\nnewList=np.array([64.2])\nnewList=np.append(newList,TempList)\nprint(newList)\nnewList=newList[:len(TempList)]\nnewList","9dab8e4a":"df[\"yTemperature\"]=newList","6849bf64":"df=df.drop([\"State\"],axis=1)\n","868a23fd":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\nXcity=le.fit_transform(df[\"City\"])\nXcountry=le.fit_transform(df[\"Country\"])\n","94782b3f":"df[\"Country\"]=Xcountry\ndf[\"City\"]=Xcity\n","8058214a":"X_test=df[df.Year==2020]\ny_test=X_test.pop(\"AvgTemperature\")\nX_train=df[df.Year!=2020]\ny_train=X_train.pop(\"AvgTemperature\")\n#y=df.pop(\"AvgTemperature\")\n\n\n","7f8d74eb":"from xgboost import XGBRegressor\nmodel = XGBRegressor(n_estimators = 20 , random_state = 0 , max_depth = 3)\nmodel.fit(X_train,y_train)\nprint(model.score(X_train,y_train))","9ded0b77":"print(model.score(X_test,y_test))","a3200e61":"Here I add another column for called yTemperature, basically I am taking the previous day temperature and for the first entry taking it's own temperature","7d0b6deb":"<h1> Welcome to my weather EDA FORECAST<\/h1>"}}