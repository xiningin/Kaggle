{"cell_type":{"640a2ba7":"code","feafdc93":"code","4aef4ae4":"code","f3b0900d":"code","4bf75a8f":"code","49edf4ec":"code","4b4af714":"code","22c2a1e4":"code","40699677":"code","da7e24a0":"code","1cb3afe3":"code","4b01c1a7":"code","388a7f3e":"code","51f3da9c":"code","f0a018a0":"code","b82714e2":"markdown","7aa44b4b":"markdown","7f085490":"markdown","266c5b20":"markdown","2ce5b34d":"markdown","52f83c35":"markdown","26f2f960":"markdown","2b878b69":"markdown","1b68fcc9":"markdown","7218f0dc":"markdown"},"source":{"640a2ba7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","feafdc93":"#import necessary modules\n\nimport json\nimport datetime\nimport ast\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#importing dataset (csv file)\ndata = pd.read_csv('..\/input\/the-movies-dataset\/movies_metadata.csv')","4aef4ae4":"data.columns","f3b0900d":"data.info()","4bf75a8f":"#Converting to float and replacing '0' wit NaN\ndata['popularity'] = pd.to_numeric(data['popularity'], errors='coerce')\ndata['popularity'] = data['popularity'].replace(0, np.nan)\n\ndata['budget'] = pd.to_numeric(data['budget'], errors='coerce')\ndata['budget'] = data['budget'].replace(0, np.nan)\n\ndata['revenue'] = data['revenue'].replace(0, np.nan)\n\n#Extracting Only year in release_date to make it simpler\ndata['year'] = pd.to_datetime(data['release_date'], errors='coerce').apply(lambda x: str(x).split('-')[0] if x != np.nan else np.nan)\n\ndata['runtime'] = data['runtime'].astype('float')\ndata['vote_average'] = data['vote_average'].astype('float')\ndata['vote_count'] = data['vote_count'].astype('float')","49edf4ec":"data[data['budget'].notnull()][['title', 'budget', 'revenue', 'year']].sort_values('budget', ascending=False).head(10)","4b4af714":"data[data['revenue'].notnull()][['title', 'budget', 'revenue', 'year']].sort_values('revenue', ascending=False).head(10)\n","22c2a1e4":"year_rev = (data[data['revenue'].notnull()][['year','revenue']].groupby('year').mean())\nyear_rev.plot(figsize=(18,8))","40699677":"data.year.value_counts().sort_index().plot(figsize=(18,8))","da7e24a0":"data[data['vote_count'].notnull()][['title','revenue', 'year','vote_count']].sort_values('vote_count', ascending=False).head(10)","1cb3afe3":"data[data['vote_count'] > 3000][['title','revenue', 'year','vote_average']].sort_values('vote_average', ascending=False).head(10)","4b01c1a7":"data[data['popularity'].notnull()][['title','popularity']].sort_values('popularity',ascending=False).head(10)","388a7f3e":"sns.distplot(data[(data['runtime'] < 300) & (data['runtime'] > 0)]['runtime'])","51f3da9c":"data[data['adult'] == 'True'][['title','year','vote_average']]","f0a018a0":"all_year = data.groupby('year')['title'].count()\nall_year.plot(figsize=(18,5))","b82714e2":"Identifying the important columns and cleaning the data\n\n","7aa44b4b":"**get the Most popular movies of all time**","7f085490":"**Top 10 Movies with Most vote counts and Max vote average.**","266c5b20":"**Extract all movies which has been rated Adult**","2ce5b34d":"**The trend of movie runtime**","52f83c35":"Top 10 Movies with Maximum Revenue","26f2f960":"analyse the Revenue","2b878b69":"Budget and Revenue:","1b68fcc9":"**Understanding the Data**","7218f0dc":"**number of movie released year by year with a plot.**"}}