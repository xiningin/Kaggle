{"cell_type":{"4e63335f":"code","b09dc891":"code","576a9416":"code","5c0ba02e":"code","03342434":"code","a2cf9bc8":"code","04fff1e3":"code","1e60880d":"code","d3a251e6":"code","6214692c":"code","727d0a9e":"code","d076bd53":"markdown","6b3e17a0":"markdown","55cfe979":"markdown","0da83ef6":"markdown","bcf21daf":"markdown","0437835a":"markdown","93eb6f99":"markdown","e158dc96":"markdown","a54c3204":"markdown"},"source":{"4e63335f":"pip install -U lightautoml","b09dc891":"import os\nimport time\nimport re\n\n#Necessary library\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport torch\n\n#AUTOML\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML,TabularUtilizedAutoML\nfrom lightautoml.dataset.roles import DatetimeRole\nfrom lightautoml.tasks import Task","576a9416":"N_THREADS = 4  #threads\nRANDOM_STATE=256 # fixed random state\nTIMEOUT = 8*3600 #Time\n\nnp.random.seed(RANDOM_STATE)\ntorch.set_num_threads(N_THREADS)","5c0ba02e":"%%time\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/train.csv\")\ntrain.sample(3)","03342434":"test = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/test.csv\")\nsample=pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/sample_submission.csv\")\nsample.sample(2)","a2cf9bc8":"%%time\ndef roc(ytrue,ypred,**kwargs):\n    return roc_auc_score(ytrue,ypred,**kwargs)\ntask = Task('reg')","04fff1e3":"%%time\n\nroles = {\n    'target':'target',\n    'drop':['id'],\n}","1e60880d":"automl = TabularUtilizedAutoML(task = task,\n                              timeout=TIMEOUT,\n                              cpu_limit=N_THREADS,\n                              reader_params = {'n_jobs':N_THREADS},\n                              general_params = {'use_algos':[['linear_l2','lgb','lgb_tuned']]},\n                              tuning_params = {'max_tuning_time':25*60},\n                              lgb_params= {'default_params':{'num_trees':100000,'learning_rate':0.005,'early_stopping_rounds':1000},'freeze_defaults':True})\n\npred = automl.fit_predict(train,roles=roles)\nprint('pred:\\n{}\\nShape = {}'.format(pred[:10],pred.shape))\n","d3a251e6":"%%time\ntest_pred = automl.predict(test,n_jobs=N_THREADS)\nprint('prediction for test data:\\n{}\\nShape={}'.format(test_pred[:10],test_pred.shape))\n","6214692c":"sample['target'] = test_pred.data[:, 0]\nsample.to_csv('submission_lightAML.csv',index=False)","727d0a9e":"sample.head()","d076bd53":"## Reference:\n1. [https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-tabulardata-love](http:\/\/) (**Full credit goes to this link**)\n2. [https:\/\/github.com\/sberbank-ai-lab\/LightAutoML](http:\/\/)","6b3e17a0":"## features","55cfe979":"# **Predict test data**","0da83ef6":"# Train LightAutoML model on full data","bcf21daf":"## Thankyou Guys \ud83d\udd25 \ud83d\udd25 \ud83d\udd25 ","0437835a":"# Data Load","93eb6f99":"# Parameters and fix torch no of threads and numpy seeds","e158dc96":"# Create Metrics function","a54c3204":"# LightAutoML"}}