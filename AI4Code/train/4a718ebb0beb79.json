{"cell_type":{"a26bec07":"code","28e686f6":"code","8b54bc6c":"code","103978a0":"code","75e64ca2":"code","193db8fd":"markdown","9aa134c9":"markdown","9842546a":"markdown","95a112b9":"markdown","350e6107":"markdown","8474bd2a":"markdown"},"source":{"a26bec07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # create basic python plots\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28e686f6":"draft = pd.read_csv('..\/input\/d\/st4035s12942\/top-youtube-playlists-for-data-science2021\/top youtube playists for data science.csv',\n                   thousands=',')   \n\ndraft[['views', 'no. of videos']] = draft[['views', 'no. of videos']].astype(int)\ndraft.head(6) ","8b54bc6c":"draft.dtypes","103978a0":"# Reorder it following the values:\ndf = draft.sort_values(by=['views'])\n\nmy_range=range(1,len(draft.index)+1)\n\n# The horizontal plot is made using the hline() function\nplt.rcParams.update({'font.size': 18})\nfig, ax = plt.subplots(figsize = (15, 15))\nax.hlines(y=my_range, xmin=0, xmax=df['views'], alpha=0.6)\nax.scatter(df['views'], my_range, alpha=1)\nax.ticklabel_format(useOffset=False, style='plain')\n \n# Add title and axis names\nplt.yticks(my_range, df['Playlist name'])\nplt.title(\"Populariy of YouTube Data Science Tutorials\", loc='left', fontsize = 24)\nplt.xlabel('views', fontsize = 20)\nplt.ylabel('Playlist name', fontsize = 20)\n\n# show the graph\nplt.show()","75e64ca2":"import seaborn as sns\n\ndf = draft.sort_values(by=['views'], ascending=False)\n\n# use the scatterplot function to build the bubble map\nplt.rcParams.update({'font.size': 18})\nfig, ax = plt.subplots(figsize = (15, 15))\nax.ticklabel_format(useOffset=False, style='plain')\n\nsns.scatterplot(data=df, x=\"views\", y=\"Playlist name\", size=\"no. of videos\", legend=True, sizes=(100, 2000))\nax.legend(loc='upper left', frameon=False)\n\n# Add title and axis names\nplt.title(\"Populariy of YouTube Data Science Tutorials vs. no. of videos in a playlist\", loc='left', fontsize = 24)\nplt.xlabel('views', fontsize = 20)\nplt.ylabel('Playlist name', fontsize = 20)\n\n# show the graph\nplt.show()","193db8fd":"![image.png](attachment:41ac93ae-9015-4698-8ea8-ef29a5e8864d.png)","9aa134c9":"According to the data obtained from YouTube search results and filters, main interest goes to python language and related essential packages for data science. Other Data science playlists which does not focus on python has lower number of views. Therefore, we can assume python is the most influential language for Data Science.\n\nEven though we can identify this current trend towards python language, learning base theories and concept of Statistics and mathematics is really important if you are trying to parse a career path in data science.","9842546a":"**Populariy of YouTube Data Science Tutorials**","95a112b9":"**Populariy of YouTube Data Science Tutorials vs. no. of videos in a playlist**","350e6107":"The tutorials that have highest popularity, contains a lower number of videos compared to less popular tutorials. Having a large number of videos in a single playlist might discourage viewers from following till the end of the tutorial. Therefore, it is better if YouTube content providers can think of giving multiple sets of video tutorials instead of giving a single tutorial with a large set of videos. In this way the learner can easily focus on the area they are interested in rather than follow boring lengthy lists of videos","8474bd2a":"The data set that has used for this visualization was collected from YouTube search results.\n\n* Used keyword: **data science**\n* Filters: **View count**\n\nThe purpose of this visualization is to encourage self learning on DATA SCIENCE"}}