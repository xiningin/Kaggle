{"cell_type":{"bceae5e8":"code","359bfba8":"code","99fa3277":"code","d9dc361a":"code","7d9702a8":"code","dfadbbd1":"code","9e882377":"code","2d583743":"code","39da33b2":"code","7ae92b58":"code","8a43fac1":"code","61a53cdf":"code","8d2e67ac":"code","5f7f3d62":"code","3bbc93d1":"code","4b93ce89":"code","a35587e5":"code","9183541e":"code","6dbf48ef":"code","fe5583e6":"code","e4f94ac6":"code","f1344c82":"code","6162fea1":"code","02b15d15":"code","518fb758":"code","04d3d5c2":"code","0180c07c":"code","568146ef":"code","86e7207d":"code","80ece36f":"code","a871f153":"markdown","756f19b3":"markdown","bf90f415":"markdown","c832d200":"markdown","4e2dee17":"markdown","0f01ac73":"markdown","12c47b11":"markdown","748751c2":"markdown","278a6ee2":"markdown","d032dc6c":"markdown","0b10e382":"markdown","a18547d4":"markdown"},"source":{"bceae5e8":"import numpy as np \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import AdaBoostClassifier\nimport math\nimport pandas as pd \nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\nimport sklearn.metrics as metrics\n%matplotlib inline\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","359bfba8":"df_train = pd.read_csv(\"\/kaggle\/input\/GiveMeSomeCredit\/cs-training.csv\",index_col=0)\ndf_test = pd.read_csv(\"\/kaggle\/input\/GiveMeSomeCredit\/cs-test.csv\",index_col=0)\ndf_train.head()","99fa3277":"#\u6807\u7b7e1\u6bd4\u4f8b\ndf_train['SeriousDlqin2yrs'].mean()","d9dc361a":"#\u6807\u7b7e1\u603b\u6570\ndf_train['SeriousDlqin2yrs'].sum()","7d9702a8":"import xgboost as xgb","dfadbbd1":"X_train, X_test, y_train, y_test = train_test_split(df_train.drop(['SeriousDlqin2yrs'],axis=1), df_train['SeriousDlqin2yrs'], test_size=0.2, random_state=42)","9e882377":"def plot_AUC(model,X_test,y_test):\n    probs = model.predict_proba(X_test)\n    preds = probs[:,1]\n    fpr, tpr, threshold = metrics.roc_curve(y_test, preds)\n    roc_auc = metrics.auc(fpr, tpr)\n\n    plt.title('Receiver Operating Characteristic')\n    plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n    plt.legend(loc = 'lower right')\n    plt.plot([0, 1], [0, 1],'r--')\n    plt.xlim([0, 1])\n    plt.ylim([0, 1])\n    plt.ylabel('True Positive Rate')\n    plt.xlabel('False Positive Rate')\n    plt.show()","2d583743":"\nmodel1 = AdaBoostClassifier(random_state=42)\nmodel1.fit(X_train.fillna(0),y_train)","39da33b2":"# calculate the fpr and tpr for all thresholds of the classification\nplot_AUC(model1,X_test.fillna(0),y_test)","7ae92b58":"disp = plot_confusion_matrix(model1, X_test.fillna(0), y_test,\n                                 display_labels=[0,1],\n                                 cmap=plt.cm.Blues,\n                                 values_format='' \n                                 )\ndisp.ax_.set_title('confusion matrix')","8a43fac1":"\nfrom imblearn.over_sampling import SMOTE \nsm = SMOTE(random_state=42)\nX_train_balanced, y_train_balanced = sm.fit_resample(X_train.fillna(0), y_train)\nprint('bad rate is: ',y_train_balanced.mean())","61a53cdf":"model2 =AdaBoostClassifier(random_state=42)\nmodel2.fit(X_train_balanced,y_train_balanced)","8d2e67ac":"plot_AUC(model2,X_test.fillna(0),y_test)","5f7f3d62":"#\u6df7\u6dc6\u77e9\u9635\ny_pred = model2.predict(X_test.fillna(0))\nmetrics.confusion_matrix(y_test,y_pred)","3bbc93d1":"from imblearn.ensemble import EasyEnsembleClassifier","4b93ce89":"model3 = EasyEnsembleClassifier(n_estimators=20, random_state=42, base_estimator=AdaBoostClassifier(random_state=42))\nmodel3.fit(X_train.fillna(0),y_train)","a35587e5":"plot_AUC(model3,X_test.fillna(0),y_test)","9183541e":"disp = plot_confusion_matrix(model3, X_test.fillna(0), y_test,\n                                 display_labels=[0,1],\n                                 values_format='',\n                                 cmap=plt.cm.Blues\n                                 )\ndisp.ax_.set_title('confusion matrix')","6dbf48ef":"# \u6a21\u62df\u6781\u5ea6\u4e0d\u5e73\u8861\u60c5\u51b5\uff0c\u7ea60.35%\u7684\u6837\u672c\u4e3a1\uff0c\u5176\u4f59\u4e3a0","fe5583e6":"total_1 = int(df_train['SeriousDlqin2yrs'].sum()*0.05)\ndf_train_extreme = pd.concat([df_train[df_train['SeriousDlqin2yrs']==1].sample(total_1,random_state=42),\n                              df_train[df_train['SeriousDlqin2yrs']==0]])","e4f94ac6":"X_train_ex, X_test_ex, y_train_ex, y_test_ex = train_test_split(\n                                                    df_train_extreme.drop(['SeriousDlqin2yrs'],axis=1), \n                                                    df_train_extreme['SeriousDlqin2yrs'], test_size=0.2, \n                                                    random_state=42)","f1344c82":"#\u6570\u636e\u5206\u5e03\u4e0a\u63a5\u8fd1\nprint(y_train_ex.mean(),y_test_ex.mean())","6162fea1":"model_a = AdaBoostClassifier(random_state=42)\nmodel_a.fit(X_train_ex.fillna(0),y_train_ex)","02b15d15":"plot_AUC(model_a,X_test_ex.fillna(0),y_test_ex)","518fb758":"disp = plot_confusion_matrix(model_a, X_test_ex.fillna(0), y_test_ex,\n                                 display_labels=[0,1],\n                                 cmap=plt.cm.Blues\n                                 )\ndisp.ax_.set_title('confusion matrix')","04d3d5c2":"y_pred = model_a.predict(X_test_ex.fillna(0))\nmetrics.confusion_matrix(y_test_ex,y_pred)","0180c07c":"model_b = EasyEnsembleClassifier(n_estimators=20, random_state=42, \n                                 base_estimator=AdaBoostClassifier(random_state=42))\nmodel_b.fit(X_train_ex.fillna(0),y_train_ex)","568146ef":"plot_AUC(model_b,X_test_ex.fillna(0),y_test_ex)","86e7207d":"disp = plot_confusion_matrix(model_b, X_test_ex.fillna(0), y_test_ex,\n                                 display_labels=[0,1],\n                                 cmap=plt.cm.Blues\n                                 )\ndisp.ax_.set_title('confusion matrix')","80ece36f":"y_pred = model_b.predict(X_test_ex.fillna(0))\nmetrics.confusion_matrix(y_test_ex,y_pred)","a871f153":"## \u5bfc\u5165\u6570\u636e<a class=\"anchor\" id=\"2\"><\/a>","756f19b3":" #### model 1: use default parameter","bf90f415":"> \n## \u5bfc\u5165\u5305<a class=\"anchor\" id=\"1\"><\/a>","c832d200":"\u56e0\u4e3a\u6bd4\u8d5b\u662f\u7528AUC\u4f5c\u4e3a\u6807\u51c6\uff0c\u6240\u4ee5\u6211\u4e5f\u770b\u770b\u6211\u7684\u6a21\u578bAUC\u591a\u5c11,\u8fd9\u91cc\u5199\u4e2a\u51fd\u6570\u7b49\u4e0b\u7528","4e2dee17":"## EDA <a class=\"anchor\" id=\"3\"><\/a>\n\n\u8be6\u89c1 https:\/\/www.kaggle.com\/orange90\/credit-scorecard-example","0f01ac73":"### \u5efa\u6a21 <a class=\"anchor\" id=\"6\"><\/a>","12c47b11":"#### model 3: easy ensemble","748751c2":"\u755930%\u4f5c\u4e3a\u6a21\u578b\u7684\u9a8c\u8bc1\u96c6","278a6ee2":"## \u4e00\u3001\u539f\u6570\u636e\u6807\u7b7e1\u6bd4\u4f8b","d032dc6c":"Reference:\nhttp:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.309.1465&rep=rep1&type=pdf","0b10e382":"1. ## \u6a21\u62df\u4e00\u4e2a\u6807\u7b7e\u6781\u5ea6\u4e0d\u5e73\u8861\u60c5\u51b5","a18547d4":"####  model 2: use smote"}}