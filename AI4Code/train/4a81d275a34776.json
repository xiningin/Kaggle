{"cell_type":{"ef2adcb0":"code","35a2cf7b":"code","f8eba905":"code","68fbf77a":"code","9929d9a5":"code","b90ee90c":"code","bc57c2ba":"code","38222926":"code","34d789dd":"code","a7bdbcb0":"code","7e24b141":"code","bb40310f":"code","04b636ad":"code","25224e09":"code","ac9de6c1":"code","d3d49950":"code","3aa30c4b":"code","0183bfc1":"markdown","57ef4c26":"markdown","f2b9219d":"markdown","f495b150":"markdown","853cb323":"markdown","b2241708":"markdown","f606e3c4":"markdown","6db5058d":"markdown","75d877f7":"markdown","a5b78d5a":"markdown","1d40c96f":"markdown","07669dc2":"markdown","09e3e4f6":"markdown","c32ef0e9":"markdown","27d857cf":"markdown"},"source":{"ef2adcb0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","35a2cf7b":"df = pd.read_csv(\"\/kaggle\/input\/diabetes\/diabetes.csv\")","f8eba905":"df.head()","68fbf77a":"df.info()","9929d9a5":"df.describe()","b90ee90c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df.drop(columns=[\"Outcome\"]), df[\"Outcome\"], test_size=0.3, random_state=42)","bc57c2ba":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX_train_norm = pd.DataFrame(scaler.fit_transform(X_train))","38222926":"X_train_norm","34d789dd":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\n\nneural_network = Sequential()\nneural_network.add(Dense(units=16,activation='relu', input_shape = X_train_norm.iloc[0].shape))\nneural_network.add(Dense(units=10,activation='relu'))\nneural_network.add(Dense(units=2,activation='softmax'))\n\nneural_network.compile(optimizer='adam', loss='binary_crossentropy',metrics=['accuracy'])","a7bdbcb0":"from tensorflow.keras.utils import plot_model\nplot_model(neural_network, show_shapes=True, show_layer_names=True)","7e24b141":"from sklearn.preprocessing import OneHotEncoder\nencoder = OneHotEncoder()\ny_train_encoded = encoder.fit_transform(y_train.values.reshape(-1, 1)).todense()\ny_train_encoded","bb40310f":"neural_network.fit(X_train_norm, y_train_encoded, epochs=100, batch_size=10)","04b636ad":"X_test_norm = pd.DataFrame(scaler.transform(X_test))\npredict = neural_network.predict(X_test_norm)","25224e09":"predict[:5]","ac9de6c1":"y_pred = [np.argmax(x) for x in predict]","d3d49950":"y_pred[:5]","3aa30c4b":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)","0183bfc1":"Let's train the neural network","57ef4c26":"This is how the network architecture should be like","f2b9219d":"And normalize the TRAIN dataset","f495b150":"### Using machine learning to create a model to diagnosis diabetes\n","853cb323":"All columns are numeric, so we'll need only to normalize the values","b2241708":"Then we'll need to separate the dataset between train dataset and test dataset","f606e3c4":"The array y_train need to be encoded with the values that represents the diagnosis\n\nThe index position representing the class will be set with 1.\n\n[1, 0] - Class 0: negative diagnostic\n\n[0, 1] - Class 1: positive diagnostic","6db5058d":"Now, we can test the accurracy achieved using the test dataset","75d877f7":"### Load dataset","a5b78d5a":"Measuring the accuracy score","1d40c96f":"#### The dataset has 9 columns, the Outcome is the target column","07669dc2":"First, we need to check if the dataset has some Nan values and fill it with the data according with the column.\n\nWe can see below that there isn't columns with Nan Values","09e3e4f6":"#### This means that the neural network classifies the cases with 81% of accuracy \ud83d\ude03","c32ef0e9":"y_pred will be contain the classes predict","27d857cf":"#### The dataset is ready to be use*d* in a training process. Let's try to create a neural network using the lib Keras.\nThe warning messages can be ignored"}}