{"cell_type":{"37c089fd":"code","030d741a":"code","ad495b70":"code","11cc1df7":"code","ef55351a":"code","d7dc3fd0":"code","cfa8a5df":"code","c140a0da":"code","6ff1c8ee":"code","2a698e10":"code","30e5b6d0":"code","3a071a8d":"code","8991e9a0":"code","bf175d32":"code","e36571c2":"code","d28ae984":"code","0b5498f5":"code","5c5ed6cc":"code","87a929a5":"code","db11ea00":"code","9b831c0c":"code","976a9671":"code","4d4a3d2c":"code","440ea8b3":"code","7ae6fe6b":"code","94fee523":"markdown","d6039cf2":"markdown","e8d67030":"markdown","c8cf8480":"markdown","a72c8060":"markdown","1760159c":"markdown","9fcec78d":"markdown","4127106f":"markdown","e1db0588":"markdown","0a5ca2b1":"markdown","79ea2ad8":"markdown","ee3a3687":"markdown","06235e67":"markdown","db5dfcbf":"markdown","acc6f496":"markdown","3b2d19d5":"markdown","9d011434":"markdown","9811efad":"markdown"},"source":{"37c089fd":"#For Go charts\n!pip install chart_studio","030d741a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n\nimport geopandas as gpd # not used?\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport folium\nfrom folium import Choropleth\nfrom folium.plugins import HeatMap\n\n#plotly graphing\n# plotly\nimport chart_studio.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","ad495b70":"# two fields were mixed type and should have been numeric.  To reduce warnings these fields were initially imported as strings.\ndf = pd.read_csv('\/kaggle\/input\/ufo-sightings-around-the-world\/ufo_sighting_data.csv', dtype={\"length_of_encounter_seconds\": \"string\", \"latitude\": \"string\"})\nprint('World UFO sightings \\n')\nprint(df.columns.values)\ndf.head()","11cc1df7":"df[\"latitude\"] = pd.to_numeric(df[\"latitude\"], errors=\"coerce\")\ndf[\"length_of_encounter_seconds\"] = pd.to_numeric(df[\"length_of_encounter_seconds\"], errors=\"coerce\")\ndf.dropna(axis=0,inplace=True)\npd.options.display.float_format = '{:20,.2f}'.format\ndf.describe()","ef55351a":"# Fix dates\ndf[['date','time']] = df['Date_time'].str.split(expand=True)\ndf['datetime'] = (pd.to_datetime(df.pop('date'), format='%m\/%d\/%Y') + \n                  pd.to_timedelta(df.pop('time') + ':00'))\ndf['year'] = pd.DatetimeIndex(df['datetime']).year\n","d7dc3fd0":"sns.catplot(y=\"UFO_shape\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df.sort_values(\"UFO_shape\"))","cfa8a5df":"df['UFO_shape'] = np.where((df.UFO_shape == 'circle'),'disk',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'oval'),'disk',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'round'),'disk',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'cigar'),'cylinder',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'cone'),'cylinder',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'crescent'),'cylinder',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'sphere'),'ball',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'fireball'),'ball',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'teardrop'),'egg',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'rectangle'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'chevron'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'triangle'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'diamond'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'cross'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'delta'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'hexagon'),'geometric',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'pyramid'),'geometric',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'changed'),'changing',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'formation'),'changing',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'unknown'),'other',df.UFO_shape)\n\ndf['UFO_shape'] = np.where((df.UFO_shape == 'flash'),'light',df.UFO_shape)\ndf['UFO_shape'] = np.where((df.UFO_shape == 'flare'),'light',df.UFO_shape)\ndf_full = df","c140a0da":"sns.catplot(y=\"UFO_shape\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df.sort_values(\"UFO_shape\"))","6ff1c8ee":"df_anomaly = df[df[\"length_of_encounter_seconds\"] > 4000]\ndf_anomaly.count()","2a698e10":"df_anomaly.head()","30e5b6d0":"df = df[df[\"length_of_encounter_seconds\"] <= 4000]\ndf.describe()","3a071a8d":"hist = df[\"length_of_encounter_seconds\"].hist(bins=20)","8991e9a0":"sns.catplot(y=\"UFO_shape\", kind=\"count\", \n            palette=\"pastel\", edgecolor=\".6\",\n            data=df.sort_values(\"UFO_shape\"))","bf175d32":"sns.catplot(y=\"UFO_shape\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=df_anomaly.sort_values(\"UFO_shape\"))","e36571c2":"# UFO sightings per year \n\"\"\"From https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states\"\"\"\ndf_full = df_full.sort_values(['year'])\nufo_peryear = np.asarray(df_full[df_full.year > 0].groupby('year').year.count())\n# UFO sightings in 2014 estimated, data published in June 2014\nufo_peryear[-1] = ufo_peryear[-1] * 3\n\nufo_years = np.asarray(df_full[df_full.year > 0].year.unique())\n\ntrace = [go.Scatter(\n         x = ufo_years,\n         y = ufo_peryear,\n         mode = 'lines',\n         line = dict(\n             color = 'rgb(0, 163, 81)',\n             width = 3)\n         )]\n\nlayout = go.Layout(\n         title = 'UFO Reports by Year in United States (1910-2014)',\n         xaxis = dict(\n             rangeslider = dict(thickness = 0.05),\n             showline = True,\n             showgrid = False\n         ),\n         yaxis = dict(\n             range = [0, 7000],\n             showline = True,\n             showgrid = False)\n         )\n\nfigure = dict(data = trace, layout = layout)\niplot(figure)","d28ae984":"# US specific from - https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states\nus_states = np.asarray(['AK', 'AL', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA',\n                        'HI', 'IA', 'ID', 'IL', 'IN', 'KS', 'KY', 'LA', 'MA', 'MD', 'ME',\n                        'MI', 'MN', 'MO', 'MS', 'MT', 'NC', 'ND', 'NE', 'NH', 'NJ', 'NM',\n                        'NV', 'NY', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX',\n                        'UT', 'VA', 'VT', 'WA', 'WI', 'WV', 'WY'])\n\n# UFO sightings in United States only \ndf_full['state\/province'] = df_full['state\/province'].str.upper() \nufo_data = df_full[df_full['state\/province'].isin(us_states)].sort_values('year')\nufo_data = ufo_data[(ufo_data.latitude > 15) & (ufo_data.longitude < -65)]\nufo_data = ufo_data[(ufo_data.latitude > 50) & (ufo_data.longitude > -125) == False]\nufo_data = ufo_data[ufo_data['city'].str.contains('\\(Canada\\)|\\(Mexico\\)') == False]\nufo_data = ufo_data.rename(columns={'state\/province':'state'})","0b5498f5":"# UFO sightings per state https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states\nufo_perstate = np.asarray(ufo_data.groupby('state').state.count())\n\nufo_scale = [[0, 'rgb(229, 249, 239)'], [1, 'rgb(0, 163, 81)']]\n\ndata = [dict(\n        type = 'choropleth',\n        autocolorscale = False,\n        colorscale = ufo_scale,\n        showscale = False,\n        locations = us_states,\n        locationmode = 'USA-states',\n        z = ufo_perstate,\n        marker = dict(\n            line = dict(\n                color = 'rgb(255, 255, 255)',\n                width = 2)\n            )\n        )]\n\nlayout = dict(\n         title = 'UFO Reports by State in United States (1910-2014)',\n         geo = dict(\n             scope = 'usa',\n             projection = dict(type = 'albers usa'),\n             countrycolor = 'rgb(255, 255, 255)',\n             showlakes = True,\n             lakecolor = 'rgb(255, 255, 255)')\n        )\n\nfigure = dict(data = data, layout = layout)\niplot(figure)","5c5ed6cc":"#  - https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states\n# state population estimates for July 2015 from US Census Bureau\nstate_population = np.asarray([738432, 4858979, 2978204, 6828065, 39144818, 5456574,\n                               3590886, 672228, 945934, 20271272, 10214860, 1431603,\n                               3123899, 1654930, 12859995, 6619680, 2911641, 4425092,\n                               4670724, 6794422, 6006401, 1329328, 9922576, 5489594,\n                               6083672, 2992333, 1032949, 10042802, 756927, 1896190,\n                               1330608, 8958013, 2085109, 2890845, 19795791, 11613423,\n                               3911338, 4028977, 12802503, 1056298, 4896146, 858469,\n                               6600299, 27469114, 2995919, 8382993, 626042, 7170351,\n                               5771337, 1844128, 586107])\n\n# UFO sightings per 100,000 people in state\nufo_percapita = np.round(ufo_perstate \/ state_population * 100000, 2)\n\ndata = [dict(\n        type = 'choropleth',\n        autocolorscale = False,\n        colorscale = ufo_scale,\n        showscale = False,\n        locations = us_states,\n        locationmode = 'USA-states',\n        z = ufo_percapita,\n        marker = dict(\n            line = dict(\n                color = 'rgb(255, 255, 255)',\n                width = 2)\n            )\n        )]\n\nlayout = dict(\n         title = 'UFO Reports per 100,000 People in United States (1910-2014)',\n         geo = dict(\n             scope = 'usa',\n             projection = dict(type = 'albers usa'),\n             countrycolor = 'rgb(255, 255, 255)',\n             showlakes = True,\n             lakecolor = 'rgb(255, 255, 255)')\n        )\n\nfigure = dict(data = data, layout = layout)\niplot(figure)","87a929a5":"bins=np.linspace(min(df['length_of_encounter_seconds']),max(df['length_of_encounter_seconds']),5)\ndf['marker_color'] = pd.cut(df['length_of_encounter_seconds'], bins,  labels=['yellow', 'orange', 'red', 'black'])","db11ea00":"def embed_map(m, file_name):\n    from IPython.display import IFrame\n    m.save(file_name)\n    return IFrame(file_name, width='100%', height='500px')","9b831c0c":"# Create map with release incidents and monitoring stations\nm_1 = folium.Map(location=[40,-97.941111], zoom_start=4)\nHeatMap(data=df[['latitude', 'longitude']], radius=10).add_to(m_1)\n\n\n# Show the map\nm_1","976a9671":"# Long sighting - Anomalies\nm_2 = folium.Map(location=[40,-97.941111], zoom_start=4)\nHeatMap(data=df_anomaly[['latitude', 'longitude']], radius=10).add_to(m_2)\n\n\n# Show the map\nm_2","4d4a3d2c":"# Long sighting - light\ndf_light = df[df['UFO_shape'] == 'light']\nm_3 = folium.Map(location=[40,-97.941111], zoom_start=4)\nHeatMap(data=df_light[['latitude', 'longitude']], radius=10).add_to(m_3)\n\n\n# Show the map\nm_3","440ea8b3":"# Long sighting - disk\ndf_disk = df[df['UFO_shape'] == 'disk']\nm_4 = folium.Map(location=[40,-97.941111], zoom_start=4)\nHeatMap(data=df_disk[['latitude', 'longitude']], radius=10).add_to(m_4)\n\n\n# Show the map\nm_4","7ae6fe6b":"# Long sighting - geometric\ndf_geometric = df[df['UFO_shape'] == 'geometric']\nm_5 = folium.Map(location=[40,-97.941111], zoom_start=4)\nHeatMap(data=df_geometric[['latitude', 'longitude']], radius=10).add_to(m_5)\n\n\n# Show the map\nm_5","94fee523":"The table below shows some of the descriptions of the anomolously long sightings.","d6039cf2":"## Is there a difference between long and short sightings?\nThe spread of the shapes betweent the long sighting and the rest of the data is very similar with the light being the most common description.","e8d67030":"The dataset contains the reported UFO sighting across the world.\nEach record contains the time of the sighting, the state, country, the duration of the event and a description.  The records are also categorised by the shape of the object sighted.  The sighting have also been categorised by shape.\n\n### Data cleanup\nThe latatude and sighting durations were converted to numeric values as there were instances where the values were not numeric. ","c8cf8480":"The earlier numerical analysis shows that the majoritiy of sighting are less that 600 seconds.  To see a usable distribution we need to cut the tail off the duration, through a little but of trial and error a 4000 second threshold has been given to classifify 2529 of 65,000 sighting.","a72c8060":"## Heatmaps of the sightings - Long durations","1760159c":"## Heatmaps of the sightings\nNote you can zoom out to see other parts of the world","9fcec78d":"We probably can group some of these descriptions together to simply the categories","4127106f":"## Sightings over the years\nI struggled on this graph..  my tip to my future self, put the sighting in order.\n\nI borrowed a from Abigail Larion's notebook \n[UFO Reports in United States](https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states)\n\nThere's another [great notebook by Jonathan Bouchet](https:\/\/www.kaggle.com\/jonathanbouchet\/e-t-phone-home-but-mostly-after-8-00pm) that points out the where shows such as X-Files start airing to the world..  Of course this might have be that the show is the result of lots of sightings..  or just possibly that the sightings are the result of the shows?","e1db0588":"## Heatmaps of the sightings - Describes as light","0a5ca2b1":"## Sightings by population\nA little bit more from Abigail Larion's notebook \n[UFO Reports in United States](https:\/\/www.kaggle.com\/abigaillarion\/ufo-reports-in-united-states) showing the number of sighting by state in the US and by population.","79ea2ad8":"## Shapes in the sky\nWhat were the shapes recorded?  There is a variety of descriptions of the shapes.  The shapes are most frequently described as lights, circles or triangles.","ee3a3687":"## Durations of the sighting in seconds","06235e67":"## Heatmaps of the sightings - described as a disc","db5dfcbf":"## Looking at the World UFO sightings\nI was keen to look at a data set that had","acc6f496":"An intial analysis of the numerica data shows some of the sightings to be very long indeed.  The longest being 3 years.  We can see the duration has a very large spread and 75% of the durations are less than 600 seconds.\n\n## Dates of the sightings\nTo start the date analysis we need to make the date values as date objects.  We also need to correct a few values eg. the time 24:00 we will take as 00:00","3b2d19d5":"Loading the dataset","9d011434":"The lights are the most common description followed by disk and balls","9811efad":"## Heatmaps of the sightings - described as a geometic object"}}