{"cell_type":{"41fbde11":"code","c38602cb":"code","d7e1f068":"code","35678358":"code","d2af88b4":"code","56ac8ae8":"code","15a0e298":"code","bb34a524":"code","e67b813a":"code","e0908eac":"code","e33aa095":"code","12876251":"code","4f41a6e4":"code","db0c2ad5":"code","babdb7b2":"code","11f3547b":"code","00517043":"code","10067d05":"code","439c1e86":"code","5b84f2f3":"code","03f069d1":"code","f620c4d9":"code","a603f42c":"code","571684e3":"code","0c6a4891":"code","79e6c600":"code","f1d270a6":"code","a5920c6e":"code","ba336325":"code","bb2e6fa3":"code","c0abe296":"code","3b0297af":"code","3fc73f6e":"code","f7ef6912":"code","83ff9516":"code","aae3747a":"code","fb640be6":"code","ed410d43":"code","af7ef05b":"markdown","8273959f":"markdown","7ad36d61":"markdown","90051631":"markdown","96b3b46b":"markdown","65fb5aa5":"markdown","85124acd":"markdown","8ce35788":"markdown","f1b6f11a":"markdown","6dc28f6a":"markdown","d30f146e":"markdown","b74628f1":"markdown","4c68563b":"markdown","f2f88f94":"markdown","e8cc7414":"markdown","1b42821b":"markdown","6e59b6c3":"markdown","07d82b73":"markdown","89a8ecad":"markdown","e26017e3":"markdown","20bb3dde":"markdown","49682c8f":"markdown","cbae17fb":"markdown"},"source":{"41fbde11":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Step1: Necessery imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport scipy as scipy\nimport seaborn as sns\nimport folium\nimport math\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nfrom folium import Marker, Circle, Choropleth\nfrom folium.plugins import MarkerCluster\nfrom pandas import DataFrame\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n#Step2: Loading the data \n#Change the csv file for another brand\n#Added Data types for memory optimization and faster loading\ndata = pd.read_csv('\/kaggle\/input\/property-prices-in-netherlands-june-2021\/Property Prices in Netherlands June 2021.csv')\n            \nprint(data.info()) ","c38602cb":"#Step3:Describing the data\ndata.describe()","d7e1f068":"#Add Geocoding\n!pip install geopy==1.22.0\nimport math\nimport pandas as pd\nimport geopandas as gpd\nimport numpy as np\nimport folium\nfrom folium import Marker\nfrom folium.plugins import MarkerCluster\nfrom geopandas.tools import geocode\nresult = geocode(\"The Great Pyramid of Giza\", provider=\"nominatim\")\nresult","35678358":"point = result.geometry.iloc[0]\nprint(\"Latitude:\", point.y)\nprint(\"Longitude:\", point.x)","d2af88b4":"def my_geocoder(row):\n    try:\n        point = geocode(row, provider='nominatim').geometry.iloc[0]\n        return pd.Series({'Latitude': point.y, 'Longitude': point.x, 'geometry': point})\n    except:\n        return None\n\ndata[['Latitude', 'Longitude', 'geometry']] = data.apply(lambda x: my_geocoder(x['City']), axis=1)\n\nprint(\"{}% of addresses were geocoded!\".format(\n    (1 - sum(np.isnan(data[\"Latitude\"])) \/ len(data)) * 100))\n\n# Drop data that were not successfully geocoded\ndata = data.loc[~np.isnan(data[\"Latitude\"])]\ndata = gpd.GeoDataFrame(data, geometry=data.geometry)\ndata.crs = {'init': 'epsg:4326'}\ndata.head()","56ac8ae8":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n# Display the map\nv_map","15a0e298":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('stamentoner').add_to(v_map)\n\n# Display the map\nv_map","bb34a524":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('stamenwatercolor').add_to(v_map)\n\n# Display the map\nv_map","e67b813a":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('openstreetmap').add_to(v_map)\n\n# Display the map\nv_map","e0908eac":"# Create the map\nv_map_heat = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n\n# Add a heatmap to the base map\n\nfolium.plugins.HeatMap(data=data[['Latitude', 'Longitude']], radius=13).add_to(v_map_heat)\n\n\n# Display the map\nv_map_heat","e33aa095":"# Create a Bubble base map\nm_bubble_focus = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val <= 4:\n        return 'blue'\n    if val >= 4 and val<= 11:\n        return 'yellow'\n    else:\n        return 'red'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['Latitude'], data.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['Rank'])).add_to(m_bubble_focus)\n\n# Display the map\nm_bubble_focus","12876251":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val <= 3:\n        return 'blue'\n    if val >= 3 and val<= 6:\n        return 'yellow'\n    if val >= 6 and val<= 9:\n        return 'orange'\n    if val >= 12 and val<= 15:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['Latitude'], data.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['Rank'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","4f41a6e4":"# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip= str(row['MortgageAsAPercentageOfIncome'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","db0c2ad5":"data.sort_values(by='Rank', ascending=True).head(10)","babdb7b2":"\n# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip= str(row['GrossRentalYieldCityCentre'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","11f3547b":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val >= 9:\n        return 'blue'\n    if val <= 8 and val>= 7:\n        return 'yellow'\n    if val <= 6 and val>= 5:\n        return 'orange'\n    if val <= 4 and val>= 3:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['Latitude'], data.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['GrossRentalYieldCityCentre'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","00517043":"data.sort_values(by='GrossRentalYieldCityCentre', ascending=False).head(10)","10067d05":"# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        mc.add_child(Marker(location=[row['Latitude'], row['Longitude']],\n                            tooltip= str(row['GrossRentalYieldOutsideofCentre'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","439c1e86":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val >= 9:\n        return 'blue'\n    if val <= 8 and val>= 7:\n        return 'yellow'\n    if val <= 6 and val>= 5:\n        return 'orange'\n    if val <= 4 and val>= 3:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['Latitude'], data.iloc[i]['Longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['GrossRentalYieldOutsideofCentre'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","5b84f2f3":"data.sort_values(by='GrossRentalYieldOutsideofCentre', ascending=False).head(10)","03f069d1":"#controls the numer of rows to be read in the dataframe\nstart, end = 0, 529","f620c4d9":"\n\nfig = go.Figure(data=go.Scatter3d(\n    x=data['GrossRentalYieldCityCentre'][start:end],\n    y=data['GrossRentalYieldOutsideofCentre'][start:end],\n    z=data['PriceToRentRatioCityCentre'][start:end],\n    text=data['City'][start:end],\n    mode='markers',\n    marker=dict(\n        sizemode='diameter',\n        sizeref=2,\n        size=data['MortgageAsAPercentageOfIncome'][start:end],\n        color = data['MortgageAsAPercentageOfIncome'][start:end],\n        colorscale = 'Viridis',\n        colorbar_title = 'MortgageAsAPercentageOfIncome<br>',\n        line_color='rgb(140, 140, 170)'\n    )\n))\n\n\n\n\n\n\n\n\nfig.update_layout(height=800, width=800,\n                  title='3-D Graph - X-GrossRentalYieldCityCentre,Y-GrossRentalYieldOutsideofCentre,Z-PriceToRentRatioCityCentre,Size-MortgageAsAPercentageOfIncome,Color-MortgageAsAPercentageOfIncome')\n\n\n\n\n\n\nfig.show()","a603f42c":"#Finding correlations\n\ncorr = data.corr()\n\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncorr = corr.mask(mask)\nfig = ff.create_annotated_heatmap(\n    z=corr.to_numpy().round(2),\n    x=list(corr.index.values),\n    y=list(corr.columns.values),       \n    xgap=3, ygap=3,\n    zmin=-1, zmax=1,\ncolorscale='icefire',\n    colorbar_thickness=30,\n    colorbar_ticklen=3,\n)\nfig.update_layout(title_text='Correlation Matrix (impact relationship with numbers)',\n                  title_x=0.5,\n                  titlefont={'size': 20},\n                  width=800, height=800,\n                  xaxis_showgrid=False,\n                  xaxis={'side': 'bottom'},\n                  yaxis_showgrid=False,\n                  yaxis_autorange='reversed',                   \n                  paper_bgcolor=None,\n                  template=\"simple_white\"\n                  )\nfig.show()","571684e3":"sns.pairplot(data,palette='bright')\n%time","0c6a4891":"sns.set(style=\"ticks\", color_codes=True)\ng = sns.pairplot(data, kind=\"reg\", plot_kws={'line_kws':{'color':'red'}})\nplt.show()\n%time","79e6c600":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","f1d270a6":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldOutsideofCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","a5920c6e":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"PriceToRentRatioCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","ba336325":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"PriceToRentRatioOutsideOfCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","bb2e6fa3":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"AffordabilityIndex\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","c0abe296":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"Longitude\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","3b0297af":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldOutsideofCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","3fc73f6e":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"Latitude\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","f7ef6912":"import pandas_profiling\nreport = pandas_profiling.ProfileReport(data)\nfrom IPython.display import display\ndisplay(report)","83ff9516":"pip install quickda","aae3747a":"# Importing libraries\nfrom quickda.explore_data import *\nfrom quickda.clean_data import *\nfrom quickda.explore_numeric import *\nfrom quickda.explore_categoric import *\nfrom quickda.explore_numeric_categoric import *\nfrom quickda.explore_time_series import *","fb640be6":"eda_num(data)","ed410d43":"eda_num(data, method=\"correlation\")","af7ef05b":"# Heatmap by Rank Map\n* Shows the distribution of entries by Continent,Country coloring them\n","8273959f":"# Position by Rank - Detailed Color Bubble Map \n* Blue color shows the Top  - Where you should to be focused and the top 20%\n* Yellow - Shows the Top  - Where you should be focused and the top 20-40%\n* Orange - Shows the Top  - This is the average and the top 40-60%\n* Red - Shows the Top  - Where you should avoid and the bottom 20-40%\n* Black - Shows the Top  - Where you should avoid and the bottom 20%","7ad36d61":"# 3-D Graph","90051631":"# Best cities to invest in City Centre - Gross rental yield as % Map\n* Where buy-to-let property earns the most\n* Buy it to rent it\n* Shows the Gross rental yield as % on Map tooltip. \n* The higher number is the better one","96b3b46b":"# Position by Rank - Focused Color Bubble Map \n* Blue color shows the top 25%\n* Yellow color shows average 50%\n* Red color shows the bottom 25%","65fb5aa5":"# Top 10 cities to Live and Mortgage ","85124acd":"# Maps","8ce35788":"# POSITION BY RANK - OPENSTREETMAP","f1b6f11a":"# Top 10 cities to invest in City Centre - Gross rental yield as % :","6dc28f6a":"# Describing the data","d30f146e":"# Quickda Analysis","b74628f1":"# Pairplots and Linear Predictions","4c68563b":"# Pandas Profiling","f2f88f94":"# Finding Influences - Correlation Matrix (impact relationship with numbers)","e8cc7414":"# Position by Rank Map\n* Shows the number of entries by Continent,Country e.t.c.\n* Shows the Rank on the tooltip\n* Rank is influenced by the affordability for the working class, because it takes to account how much property can you buy on average wage ","1b42821b":"# POSITION BY RANK - Stamenwatercolor","6e59b6c3":"# Mortgage as % of average income Map\n* Shows the number of entries by Continent,Country e.t.c.\n* Shows the  % of average income as mortgage on tooltip - the smaller % is the better\n\n","07d82b73":"# POSITION BY RANK - Stamentoner ","89a8ecad":"# Best cities to invest in Outside of City Centre - Gross rental yield as % Map\n* Where buy-to-let property earns the most\n* Shows the Gross rental yield as % on Map tooltip. \n* The higher number is the better one","e26017e3":"# Top 10 cities to invest in Outside of City Centre - Gross rental yield as % :","20bb3dde":"# Real Estate 3-D Top Netherland Cities \n* The application helps people find the best real estate deals in the World.\n* The application helps people make informed decisions.\n* The application visualizes data on maps.\n* Examines the average and makes predictions on various factors.\n* Examines factors like affordability, price to income e.t.c.\n* Draws Maps and Heatmaps.\n* Creates 3-D Visualizations.\n* Shows the Top 10.\n* Shows the correlation between factors with heatmaps.\n* Make Predictions\n* Is optimized to work with large datasets.","49682c8f":"***'3-D Graph - X-GrossRentalYieldCityCentre,Y-GrossRentalYieldOutsideofCentre,Z-PriceToRentRatioCityCentre,Size-MortgageAsAPercentageOfIncome,Color-MortgageAsAPercentageOfIncome*****","cbae17fb":"# Best cities to invest in City Centre - Gross rental yield as % Map\n* Blue color shows the Top  Where you should to be focused and the top 10%\n* Yellow - Shows the Top - Where you should be focused and the top 10% to 20%\n* Orange - Shows the Top average and the top 20% to 40%\n* Red - Shows  the Average and the bottom 20%\n* Black - Shows the bottom aveage and the bottom 10%"}}