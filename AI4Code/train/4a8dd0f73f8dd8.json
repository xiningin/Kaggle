{"cell_type":{"68e8e8f3":"code","9c364b21":"code","0c43891d":"code","1e0eed42":"code","30ac6409":"code","1dc6074a":"code","6567da41":"code","2b7f861c":"code","62151e66":"code","f1531d8d":"code","8da9d57a":"code","8d6397a8":"code","de664b5d":"code","9b51af90":"code","739a21d9":"code","3ffdb01a":"code","d27cdb65":"code","02f66b59":"code","3df37b53":"code","9c1ff9bd":"code","3c2badd0":"code","e7510a6d":"markdown","6572e96e":"markdown","5e2a8680":"markdown","6991c282":"markdown","4497ead8":"markdown","d754e753":"markdown","f6dd5b63":"markdown"},"source":{"68e8e8f3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport math\n\nfrom sklearn import tree\nfrom sklearn import svm\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9c364b21":"test_set = pd.read_csv(\"\/kaggle\/input\/Test.csv\")\ntrain_set = pd.read_csv(\"\/kaggle\/input\/Train.csv\")","0c43891d":"print(train_set.head())","1e0eed42":"train_set['date_time'] = pd.to_datetime(train_set.date_time)","30ac6409":"train_set['year'] = train_set.date_time.dt.year\ntrain_set['month'] = train_set.date_time.dt.month\ntrain_set['day'] = train_set.date_time.dt.day\ntrain_set['hour'] = train_set.date_time.dt.hour","1dc6074a":"train_copy = train_set.drop(['date_time'], axis=1)\nprint(train_copy.head())","6567da41":"train_onehot = train_copy.copy()","2b7f861c":"train_onehot = pd.get_dummies(train_onehot, columns=['is_holiday', 'weather_type', 'weather_description'], \n                              prefix=['is_holiday', 'weather_type', 'weather_desc'])","62151e66":"train_onehot = train_onehot.astype(float)\ntrain_onehot.head()","f1531d8d":"test_set['date_time'] = pd.to_datetime(test_set.date_time)","8da9d57a":"test_set['year'] = test_set.date_time.dt.year\ntest_set['month'] = test_set.date_time.dt.month\ntest_set['day'] = test_set.date_time.dt.day\ntest_set['hour'] = test_set.date_time.dt.hour","8d6397a8":"test_copy = test_set.drop(['date_time'], axis=1)","de664b5d":"test_onehot = test_copy.copy()\ntest_onehot = pd.get_dummies(test_onehot, columns=['is_holiday', 'weather_type', 'weather_description'], \n                              prefix=['is_holiday', 'weather_type', 'weather_desc'])","9b51af90":"print(len(train_onehot.columns))\nprint(len(train_onehot))","739a21d9":"print(len(test_onehot.columns))\nprint(len(test_onehot))","3ffdb01a":"# find the features that are not in test data set\nfor x in train_onehot.columns:\n    if x not in test_onehot.columns and x != 'traffic_volume':\n        print(x)\n        test_onehot[x] = train_onehot[x]","d27cdb65":"test_onehot = test_onehot.astype(float)","02f66b59":"y_train = train_onehot['traffic_volume']\nx_train = train_onehot.drop(['traffic_volume'], axis=1)","3df37b53":"dec_tree_reg = tree.DecisionTreeRegressor()\ndec_tree_reg.fit(x_train, y_train)","9c1ff9bd":"preds = dec_tree_reg.predict(test_onehot)\nprint(len(preds))\nprint(preds)\npreds = preds.astype(int)\nprint(preds)","3c2badd0":"submission = pd.DataFrame(columns = ['date_time', 'traffic_volume']) \nprint(submission.head())\nsubmission.date_time = test_set.date_time\nsubmission.traffic_volume = preds\nprint(len(submission))\nprint(submission.head())\nsubmission.to_csv('dtreereg_final_prediction_submission.csv', index=False)","e7510a6d":"**Prepare Train Data**","6572e96e":"**Load Data**","5e2a8680":"**Preparing the Test data**","6991c282":"**Training**","4497ead8":"**Train and Test data**","d754e753":"**Decision Tree Regressor**","f6dd5b63":"**One-hot-encoding**"}}