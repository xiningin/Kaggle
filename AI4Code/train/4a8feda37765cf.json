{"cell_type":{"176738d4":"code","e9a01ab9":"code","651e3068":"code","8b367ab0":"code","2420b822":"code","9836191a":"code","44bf4b90":"code","21b3932b":"code","ee9ae043":"code","dfc9449e":"code","9155b340":"code","e8697536":"code","77824ef7":"code","c3272e7f":"code","cfc9ae2b":"code","b906961c":"code","a01bf11a":"code","030d29af":"code","a27b8b64":"code","179cf51c":"code","e2370fdc":"code","087e30dd":"markdown","ff1d7ef4":"markdown","8212e363":"markdown","c14374ae":"markdown","9eb764ea":"markdown","64ad862d":"markdown","a696c8cf":"markdown","316ac227":"markdown","3345579b":"markdown","9c08d8d5":"markdown"},"source":{"176738d4":"import pandas as pd\nimport numpy as np","e9a01ab9":"df = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\ndf.head()","651e3068":"df.describe(include = 'all')","8b367ab0":"df.info()","2420b822":"df.isnull().sum()","9836191a":"df_withDum = pd.get_dummies(df, drop_first=True)\ndf_withDum.head()","44bf4b90":"x_train = df_withDum.drop('HeartDisease', axis=1)\ny_train = df_withDum['HeartDisease']\nx_train.head()","21b3932b":"y_train.head()","ee9ae043":"from sklearn.model_selection import train_test_split","dfc9449e":"X_train, x_test, Y_train, y_test = train_test_split(x_train, y_train, test_size=0.2)","9155b340":"import statsmodels.api as sm\n\nfrom scipy import stats\nstats.chisqprob = lambda chisq, df: stats.chi2.sf(chisq, df)","e8697536":"x = sm.add_constant(X_train)\nmodel = sm.Logit(Y_train, x)\nresult = model.fit()\n\nresult.summary()","77824ef7":"x_new = x.drop(x[['MaxHR', 'RestingBP', 'RestingECG_Normal', 'Age', 'RestingECG_ST', 'ST_Slope_Up']], axis=1)","c3272e7f":"model = sm.Logit(Y_train, x_new)\nresult = model.fit()\n\nresult.summary()","cfc9ae2b":"from sklearn.linear_model import LogisticRegression","b906961c":"logmodel = LogisticRegression(max_iter=1000)","a01bf11a":"logmodel.fit(x_new, Y_train)","030d29af":"x_new_test = x_test.drop(x_test[['MaxHR', 'RestingBP', 'RestingECG_Normal', 'Age', 'RestingECG_ST', 'ST_Slope_Up']], axis=1)\nx_new_test.head()\nx_new_test = sm.add_constant(x_new_test)","a27b8b64":"predictions = logmodel.predict(x_new_test)","179cf51c":"from sklearn.metrics import classification_report,confusion_matrix","e2370fdc":"print(classification_report(y_test,predictions))","087e30dd":"### Splitting Data","ff1d7ef4":"#### Checking for Null Values","8212e363":"### Choosing Features","c14374ae":"### Importing Dataset","9eb764ea":"Eliminating features with P > 0.005.","64ad862d":"### Building the model","a696c8cf":"### Creating Training data","316ac227":"### Testing the data","3345579b":"### Data Preprocessing","9c08d8d5":"### Checking Results"}}