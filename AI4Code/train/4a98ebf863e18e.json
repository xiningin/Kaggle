{"cell_type":{"2180781a":"code","fe7ce003":"code","936e0bde":"code","44c1891e":"code","8f6af47d":"code","4b271c17":"markdown"},"source":{"2180781a":"import os\nimport librosa\nimport librosa.display\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport json\nimport gzip\nimport binascii\n\nimport IPython.display as ipd\nfrom scipy.io import wavfile","fe7ce003":"!wget http:\/\/download.tensorflow.org\/data\/speech_commands_v0.01.tar.gz\n!gunzip speech_commands_v0.01.tar.gz","936e0bde":"def is_gz_file(filepath):\n    with open(filepath, 'rb') as test_f:\n        return binascii.hexlify(test_f.read(2)) == b'1f8b'\n    \nrootDir = '.'\nfor dirName, subdirList, fileList in os.walk(rootDir):\n    for fname in fileList:\n        filepath = os.path.join(dirName,fname)\n        if is_gz_file(filepath):\n            f = gzip.open(filepath, 'google-speech-commands')\n            json_content = json.loads(f.read())\n            print(json_content)","44c1891e":"x, sr = librosa.load('0a7c2a8d_nohash_0.wav', sr=None) #a sample that was seperately imported, it works\nplt.plot(x);\nplt.title('Signal');\nplt.xlabel('Time (samples)');\nplt.ylabel('Amplitude');\nplt.show()","8f6af47d":"X = librosa.stft(x) #calculate with FFT\nXdb = librosa.amplitude_to_db(abs(X))  \nplt.figure(figsize=(14, 5)) #size of the display\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='hz') #Sets the axes and their titles\nplt.colorbar()","4b271c17":"R"}}