{"cell_type":{"b6452cdd":"code","6c1b4d14":"code","e4718955":"code","10f0d97b":"code","cb8dbf2f":"code","9721f800":"code","6eb0aecd":"code","ba98398c":"code","ac1ad547":"code","960c9368":"code","667ed7f8":"code","21aab86f":"code","2a0e892e":"code","4d411a4e":"code","0df2f285":"code","967b970b":"code","396267ac":"code","a5fddcda":"code","c4588458":"code","c0ee617f":"code","a34f31bf":"code","337f33af":"code","bb203fde":"code","411f0ffe":"code","f81f16dc":"code","dc72852a":"code","6b6e19a6":"code","27019b6c":"code","2571529d":"code","49aaec68":"code","8bfd44a0":"code","700ba10a":"code","c5a11ec8":"code","36ad158f":"code","a3b2e196":"code","ff76ff46":"code","d5fd5618":"code","bdbbb451":"code","8453b665":"code","885f9cc6":"code","dd77be0e":"code","4d0d6b4b":"code","42ebdfe4":"code","8705a7b5":"code","20ca155a":"code","3244cc45":"code","48906584":"code","c5550085":"code","f65c1793":"code","7792560b":"code","c992a542":"code","0595527a":"code","114778bc":"code","26e57b57":"code","8a1ade65":"code","250c85e1":"code","84a9bc5a":"code","c6bcba27":"code","c070eb40":"code","3eb89884":"code","87d5a0be":"code","388f47e6":"code","88c05df9":"code","ffae5cdd":"code","f97f4e4e":"code","e0f0f77d":"code","2a9d5cb0":"code","4e379066":"code","cf7f5261":"code","8c70b8ca":"code","3ae07eb0":"code","89f7a717":"code","9ea8368f":"code","bce52fa4":"code","c6e63a04":"code","e9013b88":"code","dea5ce2a":"code","b8a0003e":"code","244d26ef":"code","17456110":"code","b06e3fa9":"code","779d2c36":"code","e0d19b7f":"code","102416da":"code","92cf902f":"code","789bfa68":"code","54bbbd57":"code","cbc94755":"code","f7086325":"code","ab8b454f":"markdown","ba926d2b":"markdown","3e03a7c6":"markdown","aa689b69":"markdown","f04c79a2":"markdown","afc27880":"markdown","482773ae":"markdown","f054c172":"markdown","ab02eb39":"markdown","7fe23c06":"markdown","3af4b911":"markdown","9b829c97":"markdown","0e31e0f7":"markdown","42c67b8c":"markdown","6c3758d9":"markdown","a45f66ba":"markdown","8308e1b8":"markdown","b563ff91":"markdown"},"source":{"b6452cdd":"import pandas as pd\nimport cv2\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport matplotlib.cm as mtpltcm\nfrom mpl_toolkits.mplot3d import Axes3D\nimport random\nimport folium\nfrom folium.plugins import HeatMap, HeatMapWithTime\nfrom folium import plugins\nfrom netCDF4 import Dataset\nimport cartopy.crs as ccrs\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nimport skimage\nfrom IPython.display import HTML\nimport matplotlib.animation as animation\nimport PIL\nfrom scipy import signal\nfrom scipy.fft import fftshift\nfrom mpl_toolkits.mplot3d import art3d\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nimport plotly.express as px\nimport plotly.offline as po\nimport plotly.graph_objs as pg\n\n\nfrom warnings import filterwarnings\n\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)\nfilterwarnings(\"ignore\", category=RuntimeWarning)","6c1b4d14":"PATH_2018 = \"..\/input\/main-surface-forces-climate-change-nasa\/MAIN_SURFACE_FORCE\/OCT_1_2018\/inst1_2d_lfo_Nx-202110040929output.24143.webform.nc4\"\nPATH_2019 = \"..\/input\/main-surface-forces-climate-change-nasa\/MAIN_SURFACE_FORCE\/OCT_1_2019\/inst1_2d_lfo_Nx-202110040944output.30662.webform.nc4\"\nPATH_2020 = \"..\/input\/main-surface-forces-climate-change-nasa\/MAIN_SURFACE_FORCE\/OCT_1_2020\/inst1_2d_lfo_Nx-202110040959output.4810.webform.nc4\"\nPATH_2021 = \"..\/input\/main-surface-forces-climate-change-nasa\/MAIN_SURFACE_FORCE\/OCT_1_2021\/inst1_2d_lfo_Nx-202110041013output.12466.webform.nc4\"","e4718955":"READING_2018 = Dataset(PATH_2018)\nREADING_2019 = Dataset(PATH_2019)\nREADING_2020 = Dataset(PATH_2020)\nREADING_2021 = Dataset(PATH_2021)","10f0d97b":"READING_LIST = [READING_2018,READING_2019,READING_2020,READING_2021]\nYEAR_NAME_LIST = [\"2018\",\"2019\",\"2020\",\"2021\"]","cb8dbf2f":"for x_read,x_year in zip(READING_LIST,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(x_year)\n    print(\"---\"*5)\n    print(x_read)\n    print(\"----\"*10)\n    print(\"\\n\")","9721f800":"for x_read,x_year in zip(READING_LIST,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(x_year)\n    print(\"---\"*5)\n    print(x_read.variables.keys())\n    print(\"----\"*10)\n    print(\"\\n\")","6eb0aecd":"SIMPLE_KEYS_LIST = ['time', 'longitude', 'latitude']","ba98398c":"for x_keys in SIMPLE_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].shape)\n    print(\"----\"*10)\n    print(\"\\n\")","ac1ad547":"GENERAL_KEYS_LIST = ['hlml', 'tlml', 'ps', 'speedlml', 'qlml']","960c9368":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].long_name)\n    print(\"----\"*10)\n    print(\"\\n\")","667ed7f8":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].dimensions)\n    print(\"----\"*10)\n    print(\"\\n\")","21aab86f":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].level_description)\n    print(\"----\"*10)\n    print(\"\\n\")","2a0e892e":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].dtype)\n    print(\"----\"*10)\n    print(\"\\n\")","4d411a4e":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys].shape)\n    print(\"----\"*10)\n    print(\"\\n\")","0df2f285":"for x_keys in GENERAL_KEYS_LIST:\n    print(\"\\n\")\n    print(x_keys)\n    print(\"---\"*5)\n    print(READING_2018.variables[x_keys])\n    print(\"----\"*10)\n    print(\"\\n\")","967b970b":"LONG_2018 = READING_2018.variables[\"longitude\"][:]\nLAT_2018 = READING_2018.variables[\"latitude\"][:]\nTIME_2018 = READING_2018.variables[\"time\"][:]\n\nhlml_2018 = READING_2018.variables[\"hlml\"][0,:,:]\ntlml_2018 = READING_2018.variables[\"tlml\"][0,:,:]\nps_2018 = READING_2018.variables[\"ps\"][0,:,:]\nspeedlml_2018 = READING_2018.variables[\"speedlml\"][0,:,:]\nqlml_2018 = READING_2018.variables[\"qlml\"][0,:,:]","396267ac":"VALUES_2018_LIST = [LONG_2018,LAT_2018,hlml_2018,tlml_2018,ps_2018,speedlml_2018,qlml_2018]","a5fddcda":"LONG_2019 = READING_2019.variables[\"longitude\"][:]\nLAT_2019 = READING_2019.variables[\"latitude\"][:]\n\nhlml_2019 = READING_2019.variables[\"hlml\"][0,:,:]\ntlml_2019 = READING_2019.variables[\"tlml\"][0,:,:]\nps_2019 = READING_2019.variables[\"ps\"][0,:,:]\nspeedlml_2019 = READING_2019.variables[\"speedlml\"][0,:,:]\nqlml_2019 = READING_2019.variables[\"qlml\"][0,:,:]","c4588458":"VALUES_2019_LIST = [LONG_2019,LAT_2019,hlml_2019,tlml_2019,ps_2019,speedlml_2019,qlml_2019]","c0ee617f":"LONG_2020 = READING_2020.variables[\"longitude\"][:]\nLAT_2020 = READING_2020.variables[\"latitude\"][:]\n\nhlml_2020 = READING_2020.variables[\"hlml\"][0,:,:]\ntlml_2020 = READING_2020.variables[\"tlml\"][0,:,:]\nps_2020 = READING_2020.variables[\"ps\"][0,:,:]\nspeedlml_2020 = READING_2020.variables[\"speedlml\"][0,:,:]\nqlml_2020 = READING_2020.variables[\"qlml\"][0,:,:]","a34f31bf":"VALUES_2020_LIST = [LONG_2020,LAT_2020,hlml_2020,tlml_2020,ps_2020,speedlml_2020,qlml_2020]","337f33af":"LONG_2021 = READING_2021.variables[\"longitude\"][:]\nLAT_2021 = READING_2021.variables[\"latitude\"][:]\n\nhlml_2021 = READING_2021.variables[\"hlml\"][0,:,:]\ntlml_2021 = READING_2021.variables[\"tlml\"][0,:,:]\nps_2021 = READING_2021.variables[\"ps\"][0,:,:]\nspeedlml_2021 = READING_2021.variables[\"speedlml\"][0,:,:]\nqlml_2021 = READING_2021.variables[\"qlml\"][0,:,:]","bb203fde":"VALUES_2021_LIST = [LONG_2021,LAT_2021,hlml_2021,tlml_2021,ps_2021,speedlml_2021,qlml_2021]","411f0ffe":"SPECIFIC_VALUES_2018 = VALUES_2018_LIST[2:]\nSPECIFIC_VALUES_2019 = VALUES_2019_LIST[2:]\nSPECIFIC_VALUES_2020 = VALUES_2020_LIST[2:]\nSPECIFIC_VALUES_2021 = VALUES_2021_LIST[2:]","f81f16dc":"plt.style.use(\"dark_background\")","dc72852a":"GENERAL_KEYS_LIST = ['hlml', 'tlml', 'ps', 'speedlml', 'qlml']","6b6e19a6":"for x_climate_params,x_params_name in zip(SPECIFIC_VALUES_2018,GENERAL_KEYS_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, x_climate_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[x_params_name].long_name + \" \" + \"2018\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","27019b6c":"VALUES_2021_LIST = [LONG_2021,LAT_2021,hlml_2021,tlml_2021,ps_2021,speedlml_2021,qlml_2021]","2571529d":"for x_climate_params,x_params_name in zip(SPECIFIC_VALUES_2019,GENERAL_KEYS_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2019, LAT_2019, x_climate_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[x_params_name].long_name + \" \" + \"2019\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","49aaec68":"for x_climate_params,x_params_name in zip(SPECIFIC_VALUES_2020,GENERAL_KEYS_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2020, LAT_2020, x_climate_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[x_params_name].long_name + \" \" + \"2020\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","8bfd44a0":"for x_climate_params,x_params_name in zip(SPECIFIC_VALUES_2021,GENERAL_KEYS_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, x_climate_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[x_params_name].long_name + \" \" + \"2021\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","700ba10a":"figure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2021, LAT_2021, hlml_2021, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2021.variables[\"hlml\"].long_name + \" \" + \"2021\",fontsize=20)\nplt.tight_layout()\nplt.show()\n\n#\n\n\nfigure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2018, LAT_2018, hlml_2018, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2018.variables[\"hlml\"].long_name + \" \" + \"2018\",fontsize=20)\nplt.tight_layout()\nplt.show()","c5a11ec8":"figure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2021, LAT_2021, tlml_2021, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2021.variables[\"tlml\"].long_name + \" \" + \"2021\",fontsize=20)\nplt.tight_layout()\nplt.show()\n\n#\n\n\nfigure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2018, LAT_2018, tlml_2018, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2018.variables[\"tlml\"].long_name + \" \" + \"2018\",fontsize=20)\nplt.tight_layout()\nplt.show()","36ad158f":"figure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2021, LAT_2021, ps_2021, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2021.variables[\"ps\"].long_name + \" \" + \"2021\",fontsize=20)\nplt.tight_layout()\nplt.show()\n\n#\n\n\nfigure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2018, LAT_2018, ps_2018, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2018.variables[\"ps\"].long_name + \" \" + \"2018\",fontsize=20)\nplt.tight_layout()\nplt.show()","a3b2e196":"figure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2021, LAT_2021, speedlml_2021, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2021.variables[\"speedlml\"].long_name + \" \" + \"2021\",fontsize=20)\nplt.tight_layout()\nplt.show()\n\n#\n\n\nfigure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2018, LAT_2018, speedlml_2018, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2018.variables[\"speedlml\"].long_name + \" \" + \"2018\",fontsize=20)\nplt.tight_layout()\nplt.show()","ff76ff46":"figure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2021, LAT_2021, qlml_2021, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2021.variables[\"qlml\"].long_name + \" \" + \"2021\",fontsize=20)\nplt.tight_layout()\nplt.show()\n\n#\n\n\nfigure = plt.figure(figsize=(15,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\nplt.contourf(LONG_2018, LAT_2018, qlml_2018, transform=ccrs.PlateCarree(),cmap=\"seismic\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\ncolor_bar_func.ax.tick_params(labelsize=10)\n\nplt.title(READING_2018.variables[\"qlml\"].long_name + \" \" + \"2018\",fontsize=20)\nplt.tight_layout()\nplt.show()","d5fd5618":"LONG_ALL = [LONG_2018,LONG_2019,LONG_2020,LONG_2021]\nLAT_ALL = [LAT_2018,LAT_2019,LAT_2020,LAT_2021]\nHLML_ALL = [hlml_2018,hlml_2019,hlml_2020,hlml_2021]\nTLML_ALL = [tlml_2018,tlml_2019,tlml_2020,tlml_2021]\nPS_ALL = [ps_2018,ps_2019,ps_2020,ps_2021]\nSPEEDLML_ALL = [speedlml_2018,speedlml_2019,speedlml_2020,speedlml_2021]\nQLML_ALL = [qlml_2018,qlml_2019,qlml_2020,qlml_2021]","bdbbb451":"for x_lon,x_lat,x_params,x_year in zip(LONG_ALL,LAT_ALL,HLML_ALL,YEAR_NAME_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(x_lon, x_lat, x_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"hlml\"].long_name + \" \" + f\"{x_year}\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","8453b665":"for x_lon,x_lat,x_params,x_year in zip(LONG_ALL,LAT_ALL,TLML_ALL,YEAR_NAME_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(x_lon, x_lat, x_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"tlml\"].long_name + \" \" + f\"{x_year}\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","885f9cc6":"for x_lon,x_lat,x_params,x_year in zip(LONG_ALL,LAT_ALL,PS_ALL,YEAR_NAME_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(x_lon, x_lat, x_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"ps\"].long_name + \" \" + f\"{x_year}\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","dd77be0e":"for x_lon,x_lat,x_params,x_year in zip(LONG_ALL,LAT_ALL,SPEEDLML_ALL,YEAR_NAME_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(x_lon, x_lat, x_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"speedlml\"].long_name + \" \" + f\"{x_year}\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","4d0d6b4b":"for x_lon,x_lat,x_params,x_year in zip(LONG_ALL,LAT_ALL,QLML_ALL,YEAR_NAME_LIST):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(x_lon, x_lat, x_params, transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"qlml\"].long_name + \" \" + f\"{x_year}\",fontsize=20)\n    plt.tight_layout()\n    plt.show()","42ebdfe4":"plt.figure(figsize=(22,7))\nplt.plot(hlml_2018[0,:].flatten(),color=\"white\",label=\"2018\")\nplt.plot(hlml_2019[0,:].flatten(),color=\"green\",label=\"2019\")\nplt.plot(hlml_2020[0,:].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(hlml_2021[0,:].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"hlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","8705a7b5":"plt.figure(figsize=(22,7))\nplt.plot(hlml_2018[:,0].flatten(),color=\"white\",label=\"2018\")\nplt.plot(hlml_2019[:,0].flatten(),color=\"green\",label=\"2019\")\nplt.plot(hlml_2020[:,0].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(hlml_2021[:,0].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"hlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","20ca155a":"plt.figure(figsize=(22,7))\nplt.plot(tlml_2018[0,:].flatten(),color=\"white\",label=\"2018\")\nplt.plot(tlml_2019[0,:].flatten(),color=\"green\",label=\"2019\")\nplt.plot(tlml_2020[0,:].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(tlml_2021[0,:].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"tlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","3244cc45":"plt.figure(figsize=(22,7))\nplt.plot(tlml_2018[:,0].flatten(),color=\"white\",label=\"2018\")\nplt.plot(tlml_2019[:,0].flatten(),color=\"green\",label=\"2019\")\nplt.plot(tlml_2020[:,0].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(tlml_2021[:,0].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"tlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","48906584":"plt.figure(figsize=(22,7))\nplt.plot(ps_2018[0,:].flatten(),color=\"white\",label=\"2018\")\nplt.plot(ps_2019[0,:].flatten(),color=\"green\",label=\"2019\")\nplt.plot(ps_2020[0,:].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(ps_2021[0,:].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"ps\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","c5550085":"plt.figure(figsize=(22,7))\nplt.plot(ps_2018[:,0].flatten(),color=\"white\",label=\"2018\")\nplt.plot(ps_2019[:,0].flatten(),color=\"green\",label=\"2019\")\nplt.plot(ps_2020[:,0].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(ps_2021[:,0].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"ps\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","f65c1793":"plt.figure(figsize=(22,7))\nplt.plot(speedlml_2018[0,:].flatten(),color=\"white\",label=\"2018\")\nplt.plot(speedlml_2019[0,:].flatten(),color=\"green\",label=\"2019\")\nplt.plot(speedlml_2020[0,:].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(speedlml_2021[0,:].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"speedlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","7792560b":"plt.figure(figsize=(22,7))\nplt.plot(speedlml_2018[:,0].flatten(),color=\"white\",label=\"2018\")\nplt.plot(speedlml_2019[:,0].flatten(),color=\"green\",label=\"2019\")\nplt.plot(speedlml_2020[:,0].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(speedlml_2021[:,0].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"speedlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","c992a542":"plt.figure(figsize=(22,7))\nplt.plot(qlml_2018[0,:].flatten(),color=\"white\",label=\"2018\")\nplt.plot(qlml_2019[0,:].flatten(),color=\"green\",label=\"2019\")\nplt.plot(qlml_2020[0,:].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(qlml_2021[0,:].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"qlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","0595527a":"plt.figure(figsize=(22,7))\nplt.plot(qlml_2018[:,0].flatten(),color=\"white\",label=\"2018\")\nplt.plot(qlml_2019[:,0].flatten(),color=\"green\",label=\"2019\")\nplt.plot(qlml_2020[:,0].flatten(),color=\"blue\",label=\"2020\")\nplt.plot(qlml_2021[:,0].flatten(),color=\"red\",label=\"2021\")\n\nplt.title(READING_2018.variables[\"qlml\"].long_name,fontsize=25)\nplt.legend(fontsize=19)\nplt.tight_layout()\nplt.show()","114778bc":"def displaying_climate_params(source):\n    \n    figure = plt.figure(figsize=(16,11))\n\n    Image_List = []\n    plt.style.use(\"dark_background\")\n    for indexing in source:\n        \n        Read_IMG = plt.imshow(indexing, animated=True,cmap=\"hot\")\n        plt.axis('off')\n        Image_List.append([Read_IMG])\n\n    Animation_Func = animation.ArtistAnimation(figure, Image_List, interval=210, repeat_delay=10200)\n    \n    plt.close()\n    \n    return Animation_Func","26e57b57":"HLML_2018_LIST= []\n\nfor x_time in range(len(READING_2018.variables[\"hlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, READING_2018.variables[\"hlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"hlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"HLML_2018_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"HLML_2018_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    HLML_2018_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","8a1ade65":"HLML_2021_LIST= []\n\nfor x_time in range(len(READING_2021.variables[\"hlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, READING_2021.variables[\"hlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2021.variables[\"hlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"HLML_2021_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"HLML_2021_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    HLML_2021_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","250c85e1":"TLML_2018_LIST= []\n\nfor x_time in range(len(READING_2018.variables[\"tlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, READING_2018.variables[\"tlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"tlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"TLML_2018_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"TLML_2018_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    TLML_2018_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","84a9bc5a":"TLML_2021_LIST= []\n\nfor x_time in range(len(READING_2021.variables[\"tlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, READING_2021.variables[\"tlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2021.variables[\"tlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"TLML_2021_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"TLML_2021_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    TLML_2021_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","c6bcba27":"PS_2021_LIST= []\n\nfor x_time in range(len(READING_2021.variables[\"ps\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, READING_2021.variables[\"ps\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2021.variables[\"ps\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"PS_2021_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"PS_2021_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    PS_2021_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","c070eb40":"PS_2018_LIST= []\n\nfor x_time in range(len(READING_2018.variables[\"ps\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, READING_2018.variables[\"ps\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"ps\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"PS_2018_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"PS_2018_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    PS_2018_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","3eb89884":"QLML_2018_LIST= []\n\nfor x_time in range(len(READING_2018.variables[\"qlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, READING_2018.variables[\"qlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"qlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"QLML_2018_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"QLML_2018_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    QLML_2018_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","87d5a0be":"QLML_2021_LIST= []\n\nfor x_time in range(len(READING_2021.variables[\"qlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, READING_2021.variables[\"qlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2021.variables[\"qlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"QLML_2021_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"QLML_2021_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    QLML_2021_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","388f47e6":"SPEED_2018_LIST= []\n\nfor x_time in range(len(READING_2018.variables[\"speedlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2018, LAT_2018, READING_2018.variables[\"speedlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2018.variables[\"speedlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"SPEED_2018_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"SPEED_2018_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    SPEED_2018_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","88c05df9":"SPEED_2021_LIST= []\n\nfor x_time in range(len(READING_2021.variables[\"speedlml\"][:,0,0])):\n\n\n    figure = plt.figure(figsize=(15,10))\n\n    axis_func = plt.axes(projection=ccrs.Robinson())\n    axis_func.set_global()\n    axis_func.coastlines(resolution=\"110m\",linewidth=1)\n    axis_func.gridlines(linestyle='--',color='yellow',linewidth=2)\n\n    plt.contourf(LONG_2021, LAT_2021, READING_2021.variables[\"speedlml\"][x_time,:,:], transform=ccrs.PlateCarree(),cmap=\"seismic\")\n    color_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\",aspect=14, shrink=0.8, extend=\"max\")\n    color_bar_func.ax.tick_params(labelsize=10)\n\n    plt.title(READING_2021.variables[\"speedlml\"].long_name + \" \" + f\"{x_time}\",fontsize=20)\n    plt.savefig(f\"SPEED_2021_RESULT_{x_time}.jpg\")\n    NEW_READING_IMG = cv2.cvtColor(cv2.imread(f\"SPEED_2021_RESULT_{x_time}.jpg\"),cv2.COLOR_BGR2RGB)\n    SPEED_2021_LIST.append(NEW_READING_IMG)\n    plt.tight_layout()\n    plt.show()","ffae5cdd":"HTML(displaying_climate_params(HLML_2018_LIST).to_html5_video())","f97f4e4e":"HTML(displaying_climate_params(HLML_2021_LIST).to_html5_video())","e0f0f77d":"HTML(displaying_climate_params(TLML_2018_LIST).to_html5_video())","2a9d5cb0":"HTML(displaying_climate_params(TLML_2021_LIST).to_html5_video())","4e379066":"HTML(displaying_climate_params(PS_2018_LIST).to_html5_video())","cf7f5261":"HTML(displaying_climate_params(PS_2021_LIST).to_html5_video())","8c70b8ca":"HTML(displaying_climate_params(QLML_2018_LIST).to_html5_video())","3ae07eb0":"HTML(displaying_climate_params(QLML_2021_LIST).to_html5_video())","89f7a717":"HTML(displaying_climate_params(SPEED_2018_LIST).to_html5_video())","9ea8368f":"HTML(displaying_climate_params(SPEED_2021_LIST).to_html5_video())","bce52fa4":"LONG_ALL = [LONG_2018,LONG_2019,LONG_2020,LONG_2021]\nLAT_ALL = [LAT_2018,LAT_2019,LAT_2020,LAT_2021]\nHLML_ALL = [hlml_2018,hlml_2019,hlml_2020,hlml_2021]\nTLML_ALL = [tlml_2018,tlml_2019,tlml_2020,tlml_2021]\nPS_ALL = [ps_2018,ps_2019,ps_2020,ps_2021]\nSPEEDLML_ALL = [speedlml_2018,speedlml_2019,speedlml_2020,speedlml_2021]\nQLML_ALL = [qlml_2018,qlml_2019,qlml_2020,qlml_2021]","c6e63a04":"for x_keys,x_year in zip(HLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(f\"{x_year} \/ HLML - MAX\")\n    print(\"---\"*5)\n    print(x_keys.max())\n    print(\"----\"*10)\n    print(\"\\n\")","e9013b88":"for x_keys,x_year in zip(HLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"hlml\"].long_name)\n    print(f\"{x_year} \/ HLML - MEAN\")\n    print(\"---\"*5)\n    print(x_keys.mean())\n    print(\"----\"*10)\n    print(\"\\n\")","dea5ce2a":"for x_keys,x_year in zip(HLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"hlml\"].long_name)\n    print(f\"{x_year} \/ HLML - MIN\")\n    print(\"---\"*5)\n    print(x_keys.min())\n    print(\"----\"*10)\n    print(\"\\n\")","b8a0003e":"for x_keys,x_year in zip(TLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(f\"{x_year} \/ TLML - MAX\")\n    print(\"---\"*5)\n    print(x_keys.max())\n    print(\"----\"*10)\n    print(\"\\n\")","244d26ef":"for x_keys,x_year in zip(TLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"tlml\"].long_name)\n    print(f\"{x_year} \/ TLML - MEAN\")\n    print(\"---\"*5)\n    print(x_keys.mean())\n    print(\"----\"*10)\n    print(\"\\n\")","17456110":"for x_keys,x_year in zip(TLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"tlml\"].long_name)\n    print(f\"{x_year} \/ TLML - MIN\")\n    print(\"---\"*5)\n    print(x_keys.min())\n    print(\"----\"*10)\n    print(\"\\n\")","b06e3fa9":"for x_keys,x_year in zip(PS_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(f\"{x_year} \/ PS - MAX\")\n    print(\"---\"*5)\n    print(x_keys.max())\n    print(\"----\"*10)\n    print(\"\\n\")","779d2c36":"for x_keys,x_year in zip(PS_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"ps\"].long_name)\n    print(f\"{x_year} \/ PS - MEAN\")\n    print(\"---\"*5)\n    print(x_keys.mean())\n    print(\"----\"*10)\n    print(\"\\n\")","e0d19b7f":"for x_keys,x_year in zip(PS_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"ps\"].long_name)\n    print(f\"{x_year} \/ PS - MIN\")\n    print(\"---\"*5)\n    print(x_keys.min())\n    print(\"----\"*10)\n    print(\"\\n\")","102416da":"for x_keys,x_year in zip(SPEEDLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(f\"{x_year} \/ SPEEDLML - MAX\")\n    print(\"---\"*5)\n    print(x_keys.max())\n    print(\"----\"*10)\n    print(\"\\n\")","92cf902f":"for x_keys,x_year in zip(SPEEDLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"speedlml\"].long_name)\n    print(f\"{x_year} \/ SPEEDLML - MEAN\")\n    print(\"---\"*5)\n    print(x_keys.mean())\n    print(\"----\"*10)\n    print(\"\\n\")","789bfa68":"for x_keys,x_year in zip(SPEEDLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"speedlml\"].long_name)\n    print(f\"{x_year} \/ SPEEDLML - MIN\")\n    print(\"---\"*5)\n    print(x_keys.min())\n    print(\"----\"*10)\n    print(\"\\n\")","54bbbd57":"for x_keys,x_year in zip(QLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(f\"{x_year} \/ QLML - MAX\")\n    print(\"---\"*5)\n    print(x_keys.max())\n    print(\"----\"*10)\n    print(\"\\n\")","cbc94755":"for x_keys,x_year in zip(QLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"qlml\"].long_name)\n    print(f\"{x_year} \/ QLML - MEAN\")\n    print(\"---\"*5)\n    print(x_keys.mean())\n    print(\"----\"*10)\n    print(\"\\n\")","f7086325":"for x_keys,x_year in zip(QLML_ALL,YEAR_NAME_LIST):\n    print(\"\\n\")\n    print(READING_2018.variables[\"qlml\"].long_name)\n    print(f\"{x_year} \/ QLML - MIN\")\n    print(\"---\"*5)\n    print(\"%.14f\" % x_keys.min())\n    print(\"----\"*10)\n    print(\"\\n\")","ab8b454f":"# READING AND INFORMATIONS","ba926d2b":"# PACKAGES AND LIBRARIES","3e03a7c6":"### READING","aa689b69":"### 2021 GENERAL","f04c79a2":"### 2019 GENERAL","afc27880":"# ANALYSIS","482773ae":"# HISTORY\n\n#### MAIN SURFACE FORCES \/ CLIMATE CHANGE \/ NASA\n\n##### 2018-2019-2020-2021 OCTOBER 1 DATA \/ TIME SERIES\n\n**This data has 4 parameters about main surface forces**\n\n* Temperature\n* Pressure\n* Height\n* Humidity\n\n\n* **The planetary boundary layer (PBL) height is a fundamental parameter characterizing the vertical extent of atmospheric mixing near the surface. It is critical for understanding the PBL process and low cloud evolution and its feedback on the climate system, which remains a key uncertainty in climate modeling. The PBL height is generally defined as the altitude of a transition layer where air temperature or humidity gradient are significant within the lowest 1-5 kilometers above the surface.**\n\n* **Numerous thermodynamic parameters, including temperature, humidity (specific\/relative humidity) and their derivatives (e.g., potential\/virtual potential temperature etc.) have been widely used to define the PBL height. Advances in satellite remote sensing technique allow novel ways to detect the PBL heights from space. Many new parameters are proposed for PBL height detection including GPS radio occultation (RO) measurements (e.g., refractivity, bending angle and dry-temperature) and CALIPSO lidar backscattering measurements (e.g., cloud-top-height).**","f054c172":"### 2020 GENERAL","ab02eb39":"### PATH","7fe23c06":"### COMPARING","3af4b911":"#### 2019","9b829c97":"### GETTING INFORMATIONS","0e31e0f7":"### GETTING DATA","42c67b8c":"### 2018 GENERAL","6c3758d9":"#### 2021","a45f66ba":"# NUMERIC","8308e1b8":"#### 2020","b563ff91":"#### 2018"}}