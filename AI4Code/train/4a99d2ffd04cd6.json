{"cell_type":{"19bb0372":"code","782c7b9e":"code","5b019082":"code","067348b8":"code","531994ce":"markdown"},"source":{"19bb0372":"import torch\n\n\n# Intialize values to X,Y\n\n\nx = torch.tensor(1.0)\ny = torch.tensor(2.0)","782c7b9e":"\n# This is the parameter we want to optimize -> requires_grad=True\nw = torch.tensor(1.0, requires_grad=True)\n\n# forward pass to compute loss\ny_predicted = w * x\nloss = (y_predicted - y)**2\nprint(loss)\n","5b019082":"\n\n# backward pass to compute gradient dLoss\/dw\nloss.backward()\nprint(w.grad)","067348b8":"\n\n# update weights\n# next forward and backward pass...\n\n# continue optimizing:\n# update weights, this operation should not be part of the computational graph\nwith torch.no_grad():\n    w -= 0.01 * w.grad\n# don't forget to zero the gradients\nw.grad.zero_()\n\n# next forward and backward pass...","531994ce":"Credits: Python Engineer\n\nDon't hesitate to watch YouTube video. It has clear explanation\n\nhttps:\/\/youtu.be\/3Kb0QS6z7WA\n\nIf you like my notebook Please upvote\n\nI will going to create more notebooks on pytorch"}}