{"cell_type":{"8ab511a5":"code","0ac3b252":"code","e485dda3":"code","51367028":"code","a98d087a":"code","560bbf8f":"code","b550faea":"code","91a67570":"code","60375543":"code","d37bd327":"code","48a29ac3":"code","80a22142":"code","2f081cbf":"code","13d198ba":"code","67c05a51":"markdown","5324f81e":"markdown"},"source":{"8ab511a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ac3b252":"data=pd.read_csv('..\/input\/pubg-finish-placement-prediction\/train_V2.csv')\ndatas=pd.read_csv('..\/input\/pubg-finish-placement-prediction\/test_V2.csv')\ndat=datas.Id\ndata.head()\ndat","e485dda3":"data.isnull().sum()","51367028":"datas.isnull().sum()","a98d087a":"\ndata.fillna(method='ffill',axis=0,inplace=True)","560bbf8f":"data.isnull().sum().sum()","b550faea":"data.drop(['Id','matchId','groupId'],axis=1,inplace=True)\ndatas.drop(['Id','matchId','groupId'],axis=1,inplace=True)\ndata= pd.get_dummies(data, columns=[\"matchType\"])\ndatas= pd.get_dummies(datas,columns=['matchType'])\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(40,40))\ncor = data.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show()","91a67570":"cor_target = abs(cor[\"winPlacePerc\"])\nrelevant_features = cor_target[cor_target>0.5]\nrelevant_features","60375543":"print(data[[\"boosts\",\"walkDistance\"]].corr())\nprint(datas[['killPlace','weaponsAcquired']].corr())\nprint(data[[\"boosts\",\"weaponsAcquired\"]].corr())","d37bd327":"X_train=data.loc[:,['killPlace']]\nY_train=data.iloc[:,-1]\nX_test=datas.loc[:,['killPlace']]","48a29ac3":"from sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(X_train,Y_train)\nregressor.predict(X_test)\n","80a22142":"import xgboost as xgb\nmodel = xgb.XGBRegressor()\nmodel.fit(X_train,Y_train)\nmodel.predict(X_test)","2f081cbf":"X_train=data.loc[:,['killPlace','weaponsAcquired']]\nY_train=data.iloc[:,-1]\nX_test=datas.loc[:,['killPlace','weaponsAcquired']]\nimport xgboost as xgb\nmodel = xgb.XGBRegressor()\nmodel.fit(X_train,Y_train)\nresult=model.predict(X_test)","13d198ba":"final = pd.DataFrame({'Id': dat,\n                       'winPlacePerc':result })\nfinal.to_csv('submission.csv', index=False)","67c05a51":"**Linear regressor**","5324f81e":"**XGB regressor**"}}