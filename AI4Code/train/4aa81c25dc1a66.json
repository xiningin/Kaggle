{"cell_type":{"a21cccca":"code","ca32dc28":"code","15113f2d":"code","eab8a89a":"code","f85ce446":"code","ddf6978d":"code","b6fc878d":"code","732e49ae":"code","2910bc03":"code","363ba10a":"code","1090528e":"code","56f9bfd9":"code","012207a0":"code","438e8581":"code","ba77bfda":"code","731e051a":"code","c3b0ebcf":"code","b2cf6b24":"code","06f3c6c1":"code","23653f98":"markdown","a2445b75":"markdown"},"source":{"a21cccca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\nimport seaborn as sns\nsns.set(color_codes=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.\nsal_all = pd.read_table('..\/input\/Salaries.csv', sep=r',', skipinitialspace=True)\nsal_all.head()\nsal_all.shape\nsal_all.head()\n","ca32dc28":"sal_info = sal_all[sal_all.TotalPay>1000]\nfor col in ['BasePay','OvertimePay','OtherPay', 'Benefits']:\n    sal_info[col] = pd.to_numeric(sal_info[col], errors='coerce')\n\nsal_info=sal_info[sal_info.BasePay.notnull()]\nsal_info=sal_info[sal_info.TotalPay.notnull()]\nsal_info=sal_info[sal_info.TotalPayBenefits.notnull()]\nsal_info.loc[:,'EmployeeName'] = sal_info.loc[:,'EmployeeName'].str.upper().str.replace('  ',' ')\n#sal_info.loc[:,'EmployeeName'] = sal_info.loc[:,'EmployeeName']\nsal_info.loc[:,'JobTitle'] = sal_info.loc[:,'JobTitle'].str.upper().str.replace('  ',' ')\nsal_info = sal_info[sal_info.EmployeeName != 'NOT PROVIDED']\n","15113f2d":"s1 = sal_info.groupby(['Year','EmployeeName']).TotalPayBenefits.mean().unstack('Year').fillna(0)\ns1.head()","eab8a89a":"\ns1 = sal_info.groupby(['Year','EmployeeName']).TotalPay.mean().unstack('Year').fillna(0)\ns1.head()","f85ce446":"s3 = sal_info.groupby(['Year','JobTitle']).TotalPay.mean().unstack('Year').fillna(0)\ns3.head()","ddf6978d":"s3.loc[:,2011].sort_values(ascending=False).head(10)","b6fc878d":"s3.loc[:,2014].sort_values(ascending=False).head(10)","732e49ae":"sal_info=sal_info.replace({'CHIEF OF DEPARTMENT, (FIRE DEPARTMENT)' : 'CHIEF, FIRE DEPARTMENT'})\nsal_info=sal_info.replace({'ASSISTANT MEDICAL EXAMINER' : 'ASST MED EXAMINER'})\nsal_info=sal_info.replace({'DEPUTY CHIEF III (POLICE DEPARTMENT)' : 'DEPUTY CHIEF 3'})\nsal_info=sal_info.replace({'DEPARTMENT HEAD V' : 'DEPT HEAD V'})\nsal_info=sal_info.replace({'DEPUTY CHIEF OF DEPARTMENT,(FIRE DEPARTMENT)' : 'ASSISTANT DEPUTY CHIEF 2'})\nsal_info=sal_info.replace({'DEPUTY DIRECTOR I - MUNICIPAL TRANSPORTATION AGE' : 'DEPUTY DIR I, MTA'})\nsal_info=sal_info.replace({'DEPUTY DIRECTOR V' : 'DEP DIR V'})\nsal_info=sal_info.replace({'LIEUTENANT, BUREAU OF FIRE PREVENTION AND PUBLIC S' : 'LIEUT,FIRE PREV'})\nsal_info=sal_info.replace({'CONFIDENTIAL CHIEF ATTORNEY II (CIVIL & CRIMINAL)' : 'CFDNTAL CHF ATTY 2,(CVL&CRMNL)'})\nsal_info=sal_info.replace({'CAPTAIN III (POLICE DEPARTMENT)' : 'CAPTAIN 3'})\nsal_info=sal_info.replace({'DEPUTY DIRECTOR II - MUNICIPAL TRANSPORTATION AG' : 'DEPUTY DIR II, MTA'})\nsal_info=sal_info.replace({'BATTALION CHIEF, (FIRE DEPARTMENT)' : 'BATTALION CHIEF, FIRE SUPPRESS'})\nsal_info=sal_info.replace({'DEPARTMENT HEAD IV' : 'DEPT HEAD IV'})\nsal_info=sal_info.replace({'COMMANDER III, (POLICE DEPARTMENT)' : 'CAPTAIN 3'})\nsal_info=sal_info.replace({'ADMINISTRATOR, SFGH MEDICAL CENTER' : 'ADM, SFGH MEDICAL CENTER'})\nsal_info=sal_info.replace({'GENERAL MANAGER-METROPOLITAN TRANSIT AUTHORITY' : 'GEN MGR, PUBLIC TRNSP DEPT'})\nsal_info=sal_info.replace({'ASSISTANT DEPUTY CHIEF II' : 'ASSISTANT DEPUTY CHIEF 2'})\nsal_info=sal_info.replace({'DEPUTY DIRECTOR OF INVESTMENTS' : 'DEP DIR FOR INVESTMENTS, RET'})\nsal_info=sal_info.replace({'BATTLION CHIEF, FIRE SUPPRESSI' : 'BATTALION CHIEF, FIRE SUPPRESS'})\nsal_info=sal_info.replace({'BATTLION CHIEF, FIRE SUPPRESS' : 'BATTALION CHIEF, FIRE SUPPRESS'})\nsal_info=sal_info.replace({'ASSISTANT CHIEF OF DEPARTMENT, (FIRE DEPARTMENT)' : 'ASST CHF OF DEPT (FIRE DEPT)'})","2910bc03":"s3 = sal_info.groupby(['Year','JobTitle']).TotalPay.mean().unstack('Year').fillna(0)\ns3.head()","363ba10a":"s3.loc[:,2011].sort_values(ascending=False).head(20)\n\n","1090528e":"s3.loc[:,2014].sort_values(ascending=False).head(20)","56f9bfd9":"s3.sort_values(by=[(2011)], ascending=False).head(10).plot(kind='barh')\nplt.title('Top 10 Pay - Job Titles')","012207a0":"s3.sort_values(by=[(2014)], ascending=False).head(10).plot(kind='barh')\nplt.title('Top 10 Pay - Job Titles')","438e8581":"sal_info.groupby('Year')['BasePay','TotalPay','TotalPayBenefits'].mean().plot(kind='bar')\nplt.title('Distribution of Average Pay across all SF City Employess')","ba77bfda":"sal_info.groupby('Year')['BasePay','OtherPay','Benefits'].mean().plot(kind='bar',stacked=True)","731e051a":"top_ten_positions = sal_info.JobTitle.value_counts().sort_values(ascending=False).head(10).index\nsal_info[sal_info.JobTitle.isin(top_ten_positions)].groupby(['Year','JobTitle'])['TotalPay'].mean().unstack('Year')","c3b0ebcf":"# Seems like PATIENT CARE ASSISTANT, PUBLIC SVC AIDE-PUBLIC WORKS and POLICE OFFICER 3 had different title names in 2011\n","b2cf6b24":"top_ten_positions = sal_info.JobTitle.value_counts().sort_values(ascending=False).head(10).index\nsal_info[sal_info.JobTitle.isin(top_ten_positions)].groupby(['Year','JobTitle'])['TotalPay'].mean().unstack('Year')\nsal_info[sal_info.JobTitle.isin(top_ten_positions)].groupby(['Year','JobTitle'])['TotalPay'].mean().unstack('Year').plot(kind='barh')\nplt.title('Total pay for top 10 SF City positions')","06f3c6c1":"s4 = sal_info.groupby(['Year','JobTitle']).TotalPay.mean().unstack('Year').fillna(0)\nsns.kdeplot(s4.loc[s4.loc[:,2011]>100,2011], shade=True, cut=0)\nsns.kdeplot(s4.loc[s4.loc[:,2012]>100,2012], shade=True, cut=0)\nsns.kdeplot(s4.loc[s4.loc[:,2013]>100,2013], shade=True, cut=0)\nsns.kdeplot(s4.loc[s4.loc[:,2014]>100,2014], shade=True, cut=0)\nplt.title('Total Pay distribution over years')\n","23653f98":"**Cleaning the data**\n 1. Using rows with totalpay > 1000\n 2. BasePay is not numerictype. Changing type to numeric\n 3. Using rows with BasePay, TotalPay and TotalPayBenefits not null\n 4. Normalizing name and job titles to be upper case\n 5. Discarding rows with Name set to 'NOT PROVIDED'\n 6. Some names have extra whitespaces, hence getting rid of them\n","a2445b75":"** Notice a change in the JobTitle names from 2011 and other years. Since the names were either a subset or a partial match across years, decided to use manually update them for the top 20 paid titles**"}}