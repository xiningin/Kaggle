{"cell_type":{"21a6a52e":"code","ac410b8d":"code","2bfba5a4":"code","59ee9ce7":"code","24c2cb83":"code","707f641b":"code","2dbd4602":"code","1825bb6e":"markdown","efeeb428":"markdown","2e5a3385":"markdown","75f0fedb":"markdown","0ccdf933":"markdown"},"source":{"21a6a52e":"import pandas as pd\nfrom datetime import datetime as dt\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport functools ","ac410b8d":"#reading dataset \ndf = pd.read_csv(r'..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n#dataset settings\n#fixing date formats \n#print(df.iloc[7691])\ndates = df['ObservationDate']\nformatedDates = []\n\ndf = df.sort_values(by='ObservationDate')\ncountries = ['US','France','Mainland China']\nfor i in countries:\n    dftemp = pd.DataFrame(columns=['ObservationDate', 'Province\/State', 'Country\/Region', 'Last Update','Confirmed', 'Deaths', 'Recovered'])\n    dates = df.loc[(df['Country\/Region'] == i)]['ObservationDate'].unique()\n    for j in range(len(dates)):\n       confirmed = functools.reduce(lambda x,y: x+y,df.loc[(df['Country\/Region'] == i) & ((df['ObservationDate'] == dates[j]))]['Confirmed'].tolist())\n       deaths = functools.reduce(lambda x,y: x+y,df.loc[(df['Country\/Region'] == i) & ((df['ObservationDate'] == dates[j]))]['Deaths'].tolist())\n       recovered = functools.reduce(lambda x,y: x+y,df.loc[(df['Country\/Region'] == i) & ((df['ObservationDate'] == dates[j]))]['Recovered'].tolist()) \n       dftemp = dftemp.append({'ObservationDate': dates[j], 'Province\/State': np.nan, 'Country\/Region':i, 'Last Update': np.nan,'Confirmed': confirmed, 'Deaths':deaths, 'Recovered': recovered}, ignore_index=True)\n    df = df.append(dftemp,ignore_index=True)\n    indexNames = df.loc[(df['Country\/Region'] == i) & (df['Province\/State'].notnull())].index\n    df.drop(indexNames , inplace=True)\ndf = df.sort_values(by='ObservationDate')","2bfba5a4":"#basic info of the data\nprint('Basic Info of Data\\n\\n')\nprint(df.describe())\nprint('\\n\\nPeriod: ' + df.iloc[0]['ObservationDate'] + ' - ' + df.iloc[-1]['ObservationDate'] )","59ee9ce7":"#finding the countires with the most cases \ndfascC = df.sort_values(by ='Confirmed',ascending=False)\nallcountries = list(dfascC['Country\/Region'].unique())\nallcases = [dfascC.loc[dfascC['Country\/Region'] == i]['Confirmed'].iloc[0] for i in allcountries]\nalldeaths = [dfascC.loc[dfascC['Country\/Region'] == i]['Deaths'].iloc[0] for i in allcountries]\nallrecovered = [dfascC.loc[dfascC['Country\/Region'] == i]['Recovered'].iloc[0] for i in allcountries]\n#plotting the first,second and third five countries\nf, ax = plt.subplots(3,1,figsize=(20,30))\ntitles = ['', 'Second', 'Third']\nfor j in range(0,3):\n    pContries = allcountries[0 + j * 4: 4*(j+1)]\n    \n    #cases\n    pCases = allcases[0 + j * 4: 4*(j+1)]\n    ax[j].bar(np.arange(0,4), pCases, width = 0.2, label = 'Cases')\n    for i in range(0,4):\n        ax[j].text(-0.1+i,pCases[i]*1.01,int(pCases[i]),fontsize=15)\n\n    #recovered\n    pRecovered = allrecovered[0 + j * 4: 4*(j+1)]\n    ax[j].bar(np.arange(0,4) + 0.2,pRecovered, width = 0.2, color='green', label = 'Recovered')\n    for i in range(0,4):\n        ax[j].text(-0.1+i+0.2,pRecovered[i]*1.01,str(float(\"{0:.2f}\".format(pRecovered[i]\/pCases[i]*100)))+'%',fontsize=15)\n    \n    #deaths\n    pDeaths = alldeaths[0 + j * 4: 4*(j+1)]\n    ax[j].bar(np.arange(0,4) + 0.4, pDeaths, width = 0.2, color='red', label = 'Deaths')\n    for i in range(0,4):\n        ax[j].text(-0.1+i+0.44,pDeaths[i]*1.01,str(float(\"{0:.2f}\".format(pDeaths[i]\/pCases[i]*100)))+'%',fontsize=15)\n    \n    #plot settings\n    ax[j].set_xticks(np.arange(0,4)+0.2)\n    ax[j].set_xticklabels(pContries)\n    ax[j].legend(fontsize = 18)\n    ax[j].set_title(titles[j] + ' Top 5 countries in CONVID-19 cases',fontsize=20)\n    ax[j].set_xlabel('Countries',fontsize=15)\n    ax[j].set_ylabel('Confirmed Number',fontsize=15)\n    ax[j].tick_params(axis='both', labelsize=15)\n    ax[j].set_ylim([0,allcases[(0 + j * 4)]*1.2])\n    z = ax[j].plot()","24c2cb83":"#world-wide stats\ntotalcases = sum(allcases)\ntotalRecovered = sum(allrecovered)\ntotalDeaths = sum(alldeaths)\ntotal = [totalcases,totalRecovered,totalDeaths]\nlabels = ['Cases','Recovered','Deaths']\n#pie \nf, ax = plt.subplots(1,1,figsize=(8,8))\nax.pie(total,labels = labels,colors=['blue','green','red'],radius=1,startangle=100,autopct='%.2f%%',textprops={'fontsize': 14})\n#settings\nax.set_title('Wordwide Reference')\nx=0","707f641b":"#china time-line\nchinadf = df.loc[df['Country\/Region'] == 'Mainland China']\nnochinadf = df.loc[df['Country\/Region'] != 'Mainland China']\ndtset = [chinadf,nochinadf]\nf, ax = plt.subplots(1,2,figsize=(20,8))\nfor j in range(0,2):\n    #Confirmed cases\n    dates = [dt.strptime(i, '%m\/%d\/%Y') for i in dtset[j]['ObservationDate'].tolist()]\n    confirmed = dtset[j]['Confirmed'].tolist()\n    #normalize the data \n    minv = confirmed[0]\n    for i in range(1,len(confirmed)):\n        if(confirmed[i] < minv):\n            confirmed[i] = -1\n            dates[i] = -1\n        else:\n            minv = confirmed[i]\n    #delete the 'wrong' values\n    confirmed = list(filter(lambda x: x != -1,confirmed))\n    datesC = list(filter(lambda x: x != -1,dates))\n    #Deaths\n    dates = [dt.strptime(i, '%m\/%d\/%Y') for i in dtset[j]['ObservationDate'].tolist()]\n    deaths = dtset[j]['Deaths'].tolist()\n    #normalize the data \n    minv = deaths[0]\n    for i in range(1,len(deaths)):\n        if(deaths[i] < minv):\n            deaths[i] = -1\n            dates[i] = -1\n        else:\n            minv = deaths[i]\n    #delete the 'wrong' values\n    deaths = list(filter(lambda x: x != -1,deaths))\n    datesD = list(filter(lambda x: x != -1,dates))\n\n    #Recovered\n    dates = [dt.strptime(i, '%m\/%d\/%Y') for i in dtset[j]['ObservationDate'].tolist()]\n    recovered = dtset[j]['Recovered'].tolist()\n    #normalize the data \n    minv = deaths[0]\n    for i in range(1,len(recovered)):\n        if(recovered[i] < minv):\n            recovered[i] = -1\n            dates[i] = -1\n        else:\n            minv = recovered[i]\n    #delete the 'wrong' values\n    recovered = list(filter(lambda x: x != -1,recovered))\n    datesR = list(filter(lambda x: x != -1,dates))\n\n\n    #plotting \n    ax[j].plot(datesC, confirmed, color='b', label = 'Confirmed Cases')\n    ax[j].plot(datesR, recovered,color='g', label = 'Recovered')\n    ax[j].plot(datesD, deaths, color='r', label = 'Deaths')\n    ax[j].legend(fontsize=15)\n    ax[j].set_xlabel('Time', fontsize=12)\n    ax[j].set_ylabel('Value', fontsize=12)\n    ax[j].xaxis.set_major_locator(ticker.MaxNLocator(6))\n    ax[j].tick_params(axis='both', labelsize=15)\n\nax[0].set_title('China', fontsize=20)\nax[1].set_title('Out of China', fontsize=20)\nax[0].set_ylim([0,confirmed[-1]+10000])\nax[1].set_ylim([0,confirmed[-1]+10000])\nx = 0","2dbd4602":"#some specific countries...***(i included Greece because is my country)***\n#adding US total in the dataframe\ncountries = ['US','Italy', 'Spain', 'Germany', 'France', 'Iran']\n#total\nfor j in countries:\n    dfcountry = df.loc[df['Country\/Region'] == j]\n    dates = dfcountry['ObservationDate']\n    totalconfirmed = dfcountry['Confirmed'].tolist()\n    totaldeaths = dfcountry['Deaths'].tolist()\n    totalrecovered = dfcountry['Recovered'].tolist()\n    dailyconfirmed = [totalconfirmed[0]]\n    dailydeaths = [totalconfirmed[0]]\n    dailyrecovered = [totalrecovered[0]]\n    \n    #daily\n    for i in range(1,len(dfcountry)):\n       dailyconfirmed.append(totalconfirmed[i] - totalconfirmed[i-1])\n       dailydeaths.append(totaldeaths[i] - totaldeaths[i-1])\n       dailyrecovered.append(totalrecovered[i] - totalrecovered[i-1])\n\n    #plotting\n    #total\n    f, ax = plt.subplots(1,2,figsize=(20,8))\n    ax[0].plot(dates,totalconfirmed,color = 'b',label='Confirmed')\n    ax[0].plot(dates,totalrecovered,color = 'g',label='Recovered')\n    ax[0].plot(dates,totaldeaths,color = 'r',label='Deaths')\n\n    #daily\n    ax[1].plot(dates,dailyconfirmed,color = 'b',label='Confirmed')\n    ax[1].plot(dates,dailyrecovered,color = 'g',label='Recovered')\n    ax[1].plot(dates,dailydeaths,color = 'r',label='Deaths')\n\n    ax[0].set_title(str(j) + ' total cases timeline',fontsize=20)\n    ax[1].set_title(str(j) + ' daily cases',fontsize=20)\n    ax[0].legend(fontsize=15)\n    ax[1].legend(fontsize=15)\n    ax[0].xaxis.set_major_locator(ticker.MaxNLocator(7))\n    ax[1].xaxis.set_major_locator(ticker.MaxNLocator(7))\n    ax[0].tick_params(labelsize=12)\n    ax[1].tick_params(labelsize=12)\n","1825bb6e":"<h1 style=\"text-decoration: underline;\">Coronavirus disease (COVID-19)<\/h1>","efeeb428":"<h2>Plotting<\/h2>\n\nWe will attemp a first approach of coronavirus outbreak plotting the dataset from kaggle\n<a>https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset<\/a>.","2e5a3385":"<h2>Corona Medical Overview<\/h2>\n\nCoronavirus: a type of common virus that infects humans, typically leading to an upper respiratory infection. Seven different types of human coronavirus have been identified. Most people will be infected with at least one type of coronavirus in their lifetime. The viruses are spread through the air by coughing and sneezing, close personal contact, touching an object or surface contaminated with the virus and rarely, by fecal contamination. The illness caused by most coronaviruses usually lasts a short time and is characterized by runny nose, sore throat, feeling unwell, cough, and fever. \n\nsource: https:\/\/www.medicinenet.com\/script\/main\/art.asp?articlekey=22789","75f0fedb":"<h2>Covid-19 Overview<\/h2>\n\nCDC is responding to a pandemic of respiratory disease spreading from person-to-person caused by a novel (new) coronavirus. The disease has been named \u201ccoronavirus disease 2019\u201d (abbreviated \u201cCOVID-19\u201d). This situation poses a serious public health risk. The federal government is working closely with state, local, tribal, and territorial partners, as well as public health partners, to respond to this situation. COVID-19 can cause mild to severe illness; most severe illness occurs in older adults.\n\nsource:https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/cases-updates\/summary.html","0ccdf933":"<h2>How COVID-19  Spreads<\/h2>\n\nThe virus is thought to spread mainly from person-to-person.\nBetween people who are in close contact with one another (within about 6 feet).\nThrough respiratory droplets produced when an infected person coughs or sneezes.\nThese droplets can land in the mouths or noses of people who are nearby or possibly be inhaled into the lungs.\n\n<h2>Can someone spread the virus without being sick?<\/h2>\n\nPeople are thought to be most contagious when they are most symptomatic (the sickest).\nSome spread might be possible before people show symptoms; there have been reports of this occurring with this new coronavirus, but this is not thought to be the main way the virus spreads.\n\nsource: https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/prepare\/transmission.html"}}