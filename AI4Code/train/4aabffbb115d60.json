{"cell_type":{"b6d9d710":"code","beef67e7":"code","02d70752":"code","3e9787ec":"code","9c5aab42":"code","adb27f14":"code","4b862a01":"code","187b821e":"code","dc9c7fb1":"code","82d056c3":"code","e3cb6e72":"code","f391ae49":"code","6a21c8af":"markdown"},"source":{"b6d9d710":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","beef67e7":"geo = pd.read_csv(\"..\/input\/ibge-censo-cep-coordenadas-renda-per-capita\/cep_coordinates_per_capita_income.csv\")\ngeo.head()","02d70752":"geo = geo[~geo[\"POSTCODE\"].str.contains(\"S\")]","3e9787ec":"geo['geolocation_zip_code_prefix_1_digits'] = geo['POSTCODE'].str[0:1]\ngeo['geolocation_zip_code_prefix_2_digits'] = geo['POSTCODE'].str[0:2]\ngeo['geolocation_zip_code_prefix_3_digits'] = geo['POSTCODE'].str[0:3]\ngeo['geolocation_zip_code_prefix_4_digits'] = geo['POSTCODE'].str[0:4]\ngeo['geolocation_zip_code_prefix'] = geo['POSTCODE'].str[0:5]","9c5aab42":"# transforming the prefixes to int for plotting purposes\ngeo['geolocation_zip_code_prefix'] = geo['geolocation_zip_code_prefix'].astype(int)\ngeo['geolocation_zip_code_prefix_1_digits'] = geo['geolocation_zip_code_prefix_1_digits'].astype(int)\ngeo['geolocation_zip_code_prefix_2_digits'] = geo['geolocation_zip_code_prefix_2_digits'].astype(int)\ngeo['geolocation_zip_code_prefix_3_digits'] = geo['geolocation_zip_code_prefix_3_digits'].astype(int)\ngeo['geolocation_zip_code_prefix_4_digits'] = geo['geolocation_zip_code_prefix_4_digits'].astype(int)","adb27f14":"from datashader.utils import lnglat_to_meters as webm\nx, y = webm(geo.LON, geo.LAT)\ngeo['x'] = pd.Series(x)\ngeo['y'] = pd.Series(y)","4b862a01":"# plot wtih holoviews + datashader - bokeh with map background\nimport holoviews as hv\nimport geoviews as gv\nimport datashader as ds\nfrom colorcet import fire, rainbow, bgy, bjy, bkr, kb, kr\nfrom datashader.colors import colormap_select, Greys9\nfrom holoviews.streams import RangeXY\nfrom holoviews.operation.datashader import datashade, dynspread, rasterize\nfrom bokeh.io import push_notebook, show, output_notebook\noutput_notebook()\nhv.extension('bokeh')\n\n%opts Overlay [width=800 height=600 toolbar='above' xaxis=None yaxis=None]\n%opts QuadMesh [tools=['hover'] colorbar=True] (alpha=0 hover_alpha=0.2)\n\nT = 0.05\nPX = 1\n\ndef plot_map(data, label, agg_data, agg_name, cmap):\n    url=\"http:\/\/server.arcgisonline.com\/ArcGIS\/rest\/services\/Canvas\/World_Dark_Gray_Base\/MapServer\/tile\/{Z}\/{Y}\/{X}.png\"\n    geomap = gv.WMTS(url)\n    points = hv.Points(gv.Dataset(data, kdims=['x', 'y'], vdims=[agg_name]))\n    agg = datashade(points, element_type=gv.Image, aggregator=agg_data, cmap=cmap)\n    zip_codes = dynspread(agg, threshold=T, max_px=PX)\n    hover = hv.util.Dynamic(rasterize(points, aggregator=agg_data, width=50, height=25, streams=[RangeXY]), operation=hv.QuadMesh)\n    hover = hover.options(cmap=cmap)\n    img = geomap * zip_codes * hover\n    img = img.relabel(label)\n    return img","187b821e":"agg_name = 'geolocation_zip_code_prefix'","dc9c7fb1":"plot_map(geo, 'Zip Codes in Brazil', ds.mean(agg_name), agg_name, cmap=rainbow)","82d056c3":"agg_name = 'renda_per_capita'\nplot_map(geo, 'Renda Per Capita (R$)', ds.max(agg_name), agg_name, cmap=rainbow)","e3cb6e72":"# S\u00e3o Paulo CEPs: 01001 to 19990\nsp_geo = geo[(geo[\"geolocation_zip_code_prefix\"] >= 1000) & (geo[\"geolocation_zip_code_prefix\"] < 20000)]","f391ae49":"agg_name = 'renda_per_capita'\nplot_map(sp_geo, 'Renda Per Capita (R$)', ds.sum(agg_name), agg_name, cmap=rainbow)","6a21c8af":"# Geospatial Analysis\n\nSource from most of the geo plotting code: https:\/\/www.kaggle.com\/andresionek\/geospatial-analysis-of-brazilian-e-commerce"}}