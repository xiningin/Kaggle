{"cell_type":{"34f486b8":"code","408774a7":"code","e01c47f7":"code","0ffcd460":"code","b57d8c7e":"code","b074a66b":"code","f660cc15":"code","d99c4fbe":"code","eed99aba":"code","7113801a":"code","d032e87d":"code","8eba4bf4":"code","727bb465":"code","dc686f2e":"code","e144843f":"code","9ae6a3b7":"code","21f25cc1":"code","388884a9":"code","6738cff7":"code","ced1736c":"code","81de0992":"code","867f538d":"code","b993451c":"code","f33dac6d":"code","aa11b4d4":"code","3576637f":"code","5b8b2483":"markdown","d3af642b":"markdown","740513f3":"markdown","d8e91ce6":"markdown","d6cc5058":"markdown","f1e475cc":"markdown","ec283a85":"markdown","0689cc62":"markdown","e59c7bfe":"markdown"},"source":{"34f486b8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics","408774a7":"# Loading the csv data to a Pandas Dataframe\ngold_data = pd.read_csv('..\/input\/gold-price-data\/gld_price_data.csv')","e01c47f7":"gold_data.head()","0ffcd460":"gold_data.tail()","b57d8c7e":"gold_data.shape","b074a66b":"gold_data.info()","f660cc15":"gold_data.isnull().sum()\n","d99c4fbe":"gold_data.describe()","eed99aba":"gold_data.describe().T","7113801a":"correlation = gold_data.corr()","d032e87d":"# Construction a heatmap to undestand the correlation\nplt.figure(figsize= (8,8))\nsns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Reds')","8eba4bf4":"# correlation values of Gold\nprint(correlation['GLD'])","727bb465":"#checking the distribution of the Gold Price\nsns.distplot(gold_data['GLD'], color='green')","dc686f2e":"X = gold_data.drop(['Date', 'GLD'], axis=1)\nY = gold_data['GLD']","e144843f":"print(X)","9ae6a3b7":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size= 0.2, random_state=2)","21f25cc1":"regressor = RandomForestRegressor(n_estimators=100)","388884a9":"regressor","6738cff7":"regressor.fit(X_train, Y_train)","ced1736c":"# prediction on Test Data\ntest_data_prediction = regressor.predict(X_test)","81de0992":"print(test_data_prediction)\n","867f538d":"# R Squared error\nerror_score = metrics.r2_score(Y_test, test_data_prediction)\nprint('R squared error : ', error_score)","b993451c":"Y_test = list(Y_test)","f33dac6d":"plt.plot(Y_test, color='blue', label='Actual Value')\n#plt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","aa11b4d4":"#plt.plot(Y_test, color='blue', label='Actual Value')\nplt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","3576637f":"plt.plot(Y_test, color='blue', label='Actual Value')\nplt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","5b8b2483":"# **Data Collection & Processing**","d3af642b":"# **Model Evalutation**","740513f3":"# **Import the Python Libraries**","d8e91ce6":"# Corretation\n1. Positive Correlation\n2. Negative Correlation","d6cc5058":"# **Model Training: Random Forest Regressor**","f1e475cc":"# **Spliting the Features and Target**","ec283a85":"# Training the model","0689cc62":"# **Spliting into Training data and Test Data**","e59c7bfe":"# **Compare the Actual Values and Predicted Values in a Plot**"}}