{"cell_type":{"ad6afcab":"code","1aff4672":"code","1e7ab8f0":"code","0253a94d":"code","593f92ae":"code","25f6a546":"code","c8a7d26b":"code","87738de0":"code","279a9c8f":"code","32c9a7ab":"code","40248ab3":"markdown","1f9df231":"markdown","0487ee9e":"markdown","575da21b":"markdown","0bef3343":"markdown","7c303f9a":"markdown","9172d5ff":"markdown","f1a3ea1c":"markdown","e0bcbb6c":"markdown","6d1d15d4":"markdown","f42d4dbd":"markdown","d7346d01":"markdown","d0b06a12":"markdown","7d972203":"markdown"},"source":{"ad6afcab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1aff4672":"df = pd.read_csv(r\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")\nQuestion = df[0:1]\ndf = df[1:]\n\ndf = df.replace({\"Iran, Islamic Republic of...\": \"Iran\", \"United Arab Emirates\":\"UAE\",\"United States of America\":\"USA\"})\n\ndf = df.rename(columns={\"Time from Start to Finish (seconds)\":\"Time\",\n                   \"Q1\":\"Age\",\"Q2\":\"Gender\",\"Q2_OTHER_TEXT\":\"Gender_Text\",\"Q3\":\"Country\",\n                   \"Q4\":\"Education\",\"Q5\":\"Job Title\" , \"Q6\":\"Coding experience\"})\n\ndf_MiddleEast = df[df.Country.isin([\"Iran\",\"Saudi Arabia\",\"Israel\",\"Germany\",\n                                    \"Egypt\",\"UAE\",\"USA\",\"Turkey\"])]\n\n\n\n\ndf_MiddleEast_Full = df_MiddleEast.copy()\ndf_MiddleEast = df_MiddleEast.iloc[:,0:7]\ndf_MiddleEast[\"Count\"] = 1","1e7ab8f0":"df_MiddleEast_Count = df_MiddleEast.groupby(\"Country\").sum()\ndf_MiddleEast_Count = df_MiddleEast_Count.sort_values(\"Count\")\n\nfig = px.bar(df_MiddleEast_Count,x=df_MiddleEast_Count.index, y=\"Count\")\n\nfig.update_layout(\n    title='Count of kagglers')","0253a94d":"df_MiddleEast_Gender = df_MiddleEast.groupby([\"Country\" , \"Gender\"], as_index=False).sum()\n\nfor i in df_MiddleEast_Gender.Country.unique():\n    pi = df_MiddleEast_Gender[df_MiddleEast_Gender.Country == i]\n    me = pi.Count.sum()\n    pi.Count = pi.Count\/me\n    \n    df_MiddleEast_Gender.drop(pi.index, axis=0, inplace=True)\n    df_MiddleEast_Gender = pd.concat([df_MiddleEast_Gender,pi])\n    \n    \ndf_MiddleEast_Gender_Womans = df_MiddleEast_Gender[df_MiddleEast_Gender.Gender == \"Woman\"].sort_values(by=\"Count\")    \ndf_MiddleEast_Gender_Womans = df_MiddleEast_Gender_Womans.rename(columns={\"Count\":\"Percentage of women in total\"})\nfig = px.bar(df_MiddleEast_Gender_Womans,x=\"Country\",y=\"Percentage of women in total\")\n\n\nfig.update_layout(\n    title='Percentage of women in total in each country')\n\nfig.show()","593f92ae":"df_MiddleEast_Age = df_MiddleEast.groupby([\"Country\" , \"Age\"], as_index=False).sum()\n\nfor i in df_MiddleEast_Age.Country.unique():\n    pi = df_MiddleEast_Age[df_MiddleEast_Age.Country == i]\n    me = pi.Count.sum()\n    pi.Count = pi.Count\/me\n    \n    df_MiddleEast_Age.drop(pi.index, axis=0, inplace=True)\n    df_MiddleEast_Age = pd.concat([df_MiddleEast_Age,pi])\n    \nHighlight = {\"Germany\":\"#D59E00\",\"USA\":\"darkred\" , \"Egypt\":\"#73731D\",\"Turky\":\"FF3333\",\n             \"UAE\":\"#9800D5\" , \"Iran\":\"#FF1313\",\n             \"Saudi Arabia\":\"#46D200\",\"Israel\":\"#33DDFF\", \"Turkey\":\"#006A8C\"}\n\n\nfig = go.Figure()\n\nfor i in df_MiddleEast_Age.Country.unique():\n    color = Highlight.get(i, 'grey')\n    data = df_MiddleEast_Age[df_MiddleEast_Age.Country == i]\n    name = data.Country.iloc[-1]\n    fig.add_trace(go.Scatter(x = data.Age , y=data.Count, opacity=1 if color==\"#D59E00\" or color==\"darkred\" else 0.4,name = name,\n                             line=dict(color = color, width=4 if color==\"#D59E00\" or color==\"darkred\" else 1))) \n    \n    \n\nfig.update_layout(plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=0.2, gridcolor='#EEE1FA')\nfig.update_yaxes(showgrid=True, gridwidth=0.2, gridcolor='#EEE1FA')\nfig.update_layout(\n    title='Age?')\nfig.show()","25f6a546":"exp = ['I have never written code', '< 1 years' , '1-2 years', '3-5 years' ,'5-10 years','10-20 years', '20+ years']\ncat_dtype = pd.api.types.CategoricalDtype(categories=exp, ordered=True)\ndf_MiddleEast[\"Coding experience\"]  = df_MiddleEast[\"Coding experience\"].astype(cat_dtype)\n\ndf_MiddleEast_Coding = df_MiddleEast.groupby([\"Country\" , \"Coding experience\"], as_index=False).sum()\n\nfor i in df_MiddleEast_Coding.Country.unique():\n    pi = df_MiddleEast_Coding[df_MiddleEast_Coding.Country == i]\n    me = pi.Count.sum()\n    pi.Count = pi.Count\/me\n    \n    df_MiddleEast_Coding.drop(pi.index, axis=0, inplace=True)\n    df_MiddleEast_Coding = pd.concat([df_MiddleEast_Coding,pi])\n\n\nfig = go.Figure()\n\nfor i in df_MiddleEast_Coding.Country.unique():\n    color = Highlight.get(i, 'grey')\n    data = df_MiddleEast_Coding[df_MiddleEast_Coding.Country == i]\n    name = data.Country.iloc[-1]\n    fig.add_trace(go.Scatter(x = data[\"Coding experience\"] , y=data.Count, opacity=1 if color==\"#D59E00\" or color==\"darkred\" else 0.4,\n                             name = name,\n                             line=dict(color = color, width=4 if color==\"#D59E00\" or color==\"darkred\" else 1))) \n    \n    \n\nfig.update_layout(plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=0.2, gridcolor='#EEE1FA')\nfig.update_yaxes(showgrid=True, gridwidth=0.2, gridcolor='#EEE1FA')\n\nfig.update_layout(title='Coding experience?')\n\nfig.show()","c8a7d26b":"df_MiddleEast1 = df_MiddleEast.copy()\ndf_MiddleEast1 = df_MiddleEast1.dropna()\n\ndf_MiddleEast1 = df_MiddleEast1[(df_MiddleEast1[\"Job Title\"]!= \"Other\") & (df_MiddleEast1[\"Job Title\"]!= \"Currently not employed\")]\ndf_MiddleEast1[\"Job Title\"][(df_MiddleEast1[\"Job Title\"] == \"Product\/Project Manager\") | (df_MiddleEast1[\"Job Title\"] == \"Business Analyst\")] = \"Product\/Project Manager or BA\"\ndf_MiddleEast1[\"Job Title\"][(df_MiddleEast1[\"Job Title\"] == \"Research Scientist\") | (df_MiddleEast1[\"Job Title\"] == \"Statistician\")] = \"Statistician or Research Scientist\"\ndf_MiddleEast1[\"Job Title\"][(df_MiddleEast1[\"Job Title\"] == \"DBA\/Database Engineer\") | (df_MiddleEast1[\"Job Title\"] == \"Data Engineer\")] = \"Data Engineer or DBA\"\n\ndf_MiddleEast_JobTitle = df_MiddleEast1.groupby([\"Country\" , \"Job Title\"], as_index=False).sum()\n\n\nfigure = go.Figure()\n\n# i=0\n# j=[False,True,False,False,False,False,True]\n\nfor country in df_MiddleEast_JobTitle.Country.unique():\n    \n    color = Highlight.get(country)\n#    highlight = True\n#     i+=1\n    \n    plot_data = df_MiddleEast_JobTitle[df_MiddleEast_JobTitle.Country == country]\n    axis = plot_data[\"Job Title\"].tolist()\n    axis.append(axis[0])\n    plot_data = plot_data.Count.tolist()\n    plot_data = (np.array(plot_data) \/ sum(plot_data) * 100).tolist()\n    plot_data.append(plot_data[0])  \n    \n    figure.add_trace(go.Scatterpolar(r=plot_data, theta=axis,mode='lines',line_color=color,showlegend=True,name=country,\n            hovertemplate='%{r:0.0f}%',\n            opacity=0.8 if color==\"#D59E00\" or color==\"darkred\" else 0.3,\n            line_shape='spline',line_smoothing=0.6,\n            line_width=2 if color==\"#D59E00\" or color==\"darkred\" else .7))\n    \n    \n    \nfigure.update_layout(polar_bgcolor='white',  polar_radialaxis_visible=True,  polar_radialaxis_showticklabels=True,\n    polar_radialaxis_tickfont_color='darkgrey',  polar_angularaxis_color='grey',\n    polar_angularaxis_showline=False, polar_radialaxis_showline=False, \n    polar_radialaxis_layer='below traces',polar_radialaxis_gridcolor='#F2F2F2',\n    polar_radialaxis_range=(0,37), polar_radialaxis_tickvals=[20, 30], \n    polar_radialaxis_ticktext=['20%', '30%'],polar_radialaxis_tickmode='array',title='Job Title?'\n)\n\nfigure.show()","87738de0":"df_MiddleEast2 = df_MiddleEast.copy()\ndf_MiddleEast2 = df_MiddleEast2.dropna()\n\ndf_MiddleEast2 = df_MiddleEast2[(df_MiddleEast2[\"Education\"]!= 'I prefer not to answer')]\ndf_MiddleEast2[\"Education\"][(df_MiddleEast2[\"Education\"].isin(['Professional degree',\n                                                               'Some college\/university study without earning a bachelor\u2019s degree',\n                                                               'No formal education past high school']))] = \"Other\"\n\n\ndf_MiddleEast_education = df_MiddleEast2.groupby([\"Country\" , \"Education\"], as_index=False).sum()\n\nexp = [ 'Other' , 'Bachelor\u2019s degree', 'Master\u2019s degree', 'Doctoral degree']\ncat_dtype = pd.api.types.CategoricalDtype(categories=exp, ordered=True)\ndf_MiddleEast_education[\"Education\"]  = df_MiddleEast_education[\"Education\"].astype(cat_dtype)\ndf_MiddleEast_education = df_MiddleEast_education.sort_values(\"Education\")\n\n\nfigure = go.Figure()\n\n# i=0\n# j=[False,True,False,False,False,False,True]\n\nfor country in df_MiddleEast_education.Country.unique():\n    \n    color = Highlight.get(country)\n#    highlight = True\n#     i+=1\n    \n    plot_data = df_MiddleEast_education[df_MiddleEast_education.Country == country]\n    axis = plot_data[\"Education\"].tolist()\n    axis.append(axis[0])\n    plot_data = plot_data.Count.tolist()\n    plot_data = (np.array(plot_data) \/ sum(plot_data) * 100).tolist()\n    plot_data.append(plot_data[0])  \n    \n    figure.add_trace(go.Scatterpolar(r=plot_data, theta=axis,mode='lines',line_color=color,showlegend=True,name=country,\n            hovertemplate='%{r:0.0f}%',\n            opacity=0.8 if color==\"#D59E00\" or color==\"darkred\" else 0.3,\n            line_shape='spline',line_smoothing=0.6,\n            line_width=2 if color==\"#D59E00\" or color==\"darkred\" else .7))\n    \n    \n    \nfigure.update_layout(polar_bgcolor='white',  polar_radialaxis_visible=True,  polar_radialaxis_showticklabels=True,\n    polar_radialaxis_tickfont_color='darkgrey',  polar_angularaxis_color='grey',\n    polar_angularaxis_showline=False, polar_radialaxis_showline=False, \n    polar_radialaxis_layer='below traces',polar_radialaxis_gridcolor='#F2F2F2',\n    polar_radialaxis_range=(0,60), polar_radialaxis_tickvals=[20, 40], \n    polar_radialaxis_ticktext=['20%', '40%'],polar_radialaxis_tickmode='array',title='level of formal education?'\n)\n\nfigure.show()","279a9c8f":"Language = df_MiddleEast_Full.iloc[:,7:18]\ncolname ={}\nfor i in Language.columns:\n    colname[i] = Language[i].dropna().unique()[0]\n    \nLanguage = Language.rename(columns = colname)\nLanguage[~Language.iloc[:,:].isna()] = 1\nLanguage = Language.join(df[\"Country\"] , lsuffix='_caller', rsuffix='_other')\n\nLanguage_group = Language.groupby(\"Country\").sum()\n\n\n\n#Language_group = Language_group.rename(index=dict_ind)\n#res = Language_group.div(Language_group.sum(axis=1), axis=0)\n# Language_group = res.reset_index()\n# Language_group.rename(columns={\"level_0\":\"Country\"})\n\nres = Language_group.div(Language_group.sum(axis=1), axis=0)\n\n\nfig = go.Figure(data=go.Heatmap(\n        z=res.values,\n        x=res.columns,\n        y=res.index,\n        colorscale=[\"black\",\"darkred\", \"yellow\", \"green\"]))\n\nfig.update_layout(\n    title='which programming languages?')\n\nfig.show()\n","32c9a7ab":"Courses = df_MiddleEast_Full.iloc[:,231:242]\n\ncolname2 ={}\nfor i in Courses.columns:\n    colname2[i] = Courses[i].dropna().unique()[0]\n    \nCourses = Courses.rename(columns = colname2)\nCourses[~Courses.iloc[:,:].isna()] = 1\nCourses = Courses.join(df[\"Country\"] , lsuffix='_caller', rsuffix='_other')\n\nCourses_group = Courses.groupby(\"Country\").sum()\n\n\n\n#Language_group = Language_group.rename(index=dict_ind)\n#res = Language_group.div(Language_group.sum(axis=1), axis=0)\n# Language_group = res.reset_index()\n# Language_group.rename(columns={\"level_0\":\"Country\"})\n\nRes = Courses_group.div(Courses_group.sum(axis=1), axis=0)\n\n\nfig = go.Figure(data=go.Heatmap(\n        z=Res.values,\n        x=Res.columns,\n        y=Res.index,\n        colorscale=[\"black\",\"darkred\", \"yellow\", \"green\"]))\n\nfig.update_layout( autosize=False,\n    width=950,\n    height=600,\n    title='On which platforms?')\nfig.show()\n","40248ab3":"**Well, that was my first analize about this poll**\n\nIt was clear from this analize that Middle Eastern countries had **very good growth in some areas**.                                                 Certainly the people of these countries (and not necessarily governments) have realized that the **world will need a new oil called data** in the coming years, but there are still challenges such as **insufficient programming experience**, **lack of updates in some areas** and **a lack of expertise**.There are countries.\n\n**Hope for the progress of the whole world and peace!**\n\n\n**Update 1: Turkey added (I apologize to my Turkish friends who were not present in the analysis of the first version)**","1f9df231":"# Have the countries of the Middle East been able to progress with the global trend of data science?\n\nHi, I'm Sina, I'm a Data Science Researcher living in the Middle East right now.  \n\n**I tried to have a short analysis, because I think a short story is better read than a long one.**\n\nMy main goal in producing this notebook was to answer a question:\n**Have the countries of the Middle East been able to progress with the global trend of data science?**\n\nIn my opinion, the two main factors preventing these countries from growing in line with\ndeveloped countries are the **lack of economic security and the existence of a lot of oil** in this region.\n\nThe lack of economic security and the existence of oil-dependent economies in these countries have prevented new jobs and sciences from growing.\n\nIn this notebook I try to check that:\n**What is the status of data professionals as part of the advancement of new technologies in these countries?**\n\n**So let's go!**","0487ee9e":"**The address of the notebooks that I read, I got ideas from them to make this notebook(You must also read it)**:                                               \n[How to Create Award Winning Data Visualizations](https:\/\/www.kaggle.com\/andresionek\/how-to-create-award-winning-data-visualizations)                                           \n[\u269c\ufe0f The Hitchhiker's Guide to the Kaggle](https:\/\/www.kaggle.com\/subinium\/the-hitchhiker-s-guide-to-the-kaggle)","575da21b":"**In this chart it is quite clear that the abundance of expertise is much better distributed in developed countries.**\n\nThis imbalance in the abundance of specialties can be a negative factor for the advancement of data science in developing countries!\n\n**In this plot, you can also make changes to get a better view. \nAgain, I made a gif that I shared with you below.**","0bef3343":"**Pay attention to the right side of the chart!**\n\nI feel significant information is shown!                                                                                \ndeveloper with high experience are less in developing countries than in developed countries (except for Israel, which we know is different from other countries in the region!)","7c303f9a":"<img src=\"https:\/\/media.giphy.com\/media\/KI8yUQt1cL2A0BLMTi\/giphy.gif\">\n","9172d5ff":"There is no definitive analysis in this plot,                                            but I feel that Germany and the United States have gone through a **more continuous process** than other countries.\n\nThis chart might seem a bit crowded! You can make the plot more secluded with the method shown in the GIF below.   \n**(I made the GIF myself, I hope it is useful)**","f1a3ea1c":"**Oops! It's amazing!**                                                                                 \n**Iran has the highest percentage of women compared to other genders in this field!**                                                       \nI really did not expect the countries of the Middle East to do even better than the developed countries in this area!","e0bcbb6c":"<img src=\"https:\/\/media.giphy.com\/media\/L5FlRwGKEi4iNWQkrr\/giphy.gif\">\n","6d1d15d4":"**As expected**, we probably all guessed that there were more kagglers in developed countries than in any other country","f42d4dbd":"> In this analysis, I will compare the **United States and Germany as developed countries** with the countries under study so that we can better understand the situation in the Middle East.","d7346d01":"**Yeah! It could have been predicted!**\n\nC and C++ is more alive in developing countries and in opposite Bash is more alive in developed countries!","d0b06a12":"As you can see in the chart above, all countries (Except for Egypt and to some extent Turkey) are shown similarly.\n\nbut In Egypt, most people with a bachelor's degree are interested in the field of data.","7d972203":"**Udacity and Udemy seem to be popular in the Middle East!**                      \nin Turkey udemy is most popular platform!"}}