{"cell_type":{"a2271af2":"code","1a366d51":"code","ca865edc":"code","0cd9b33a":"code","87ccaeb3":"code","e2a54773":"code","20a0d74a":"code","9235a642":"code","516b2ad4":"code","cbb817e5":"code","74fd02e3":"code","89310a56":"code","7aadfba6":"code","7b726690":"code","26823a70":"code","ca81ba1e":"code","89924dc8":"code","cf867ca9":"code","9ba52b64":"code","1ba0e305":"code","1a28ae5f":"code","47441d18":"code","3b7b3402":"code","cf056b52":"code","87fa8345":"code","11b17ffb":"code","576a35d1":"code","3da93b4b":"code","31c540d7":"code","452e2d8b":"code","3c17ce30":"code","cea5ecc0":"code","0ae94cf8":"code","5f64d857":"code","4f51bb20":"code","862574d3":"code","f774ad43":"code","0abb2a17":"code","b0371f8c":"code","b437579d":"code","2c86b004":"code","0505088f":"code","e1f033cb":"code","ad862ee9":"code","a8603cec":"code","8b3622c7":"markdown","bcd2cb0e":"markdown","864e6c2e":"markdown","3144975f":"markdown","e0e96b26":"markdown","27b49709":"markdown","a1fcaafa":"markdown"},"source":{"a2271af2":"# importing the required libraries\nimport pandas as pd\nimport numpy as np\n%matplotlib inline\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","1a366d51":"import tensorflow as tf\nfrom tensorflow import keras","ca865edc":"keras.__version__","0cd9b33a":"tf.__version__","87ccaeb3":"# Loading the data\nfashion_mnist = keras.datasets.fashion_mnist\n(x_train_full,y_train_full),(x_test,y_test) = fashion_mnist.load_data()","e2a54773":"print(\"x_train = \",x_train_full.shape,\"y_train = \",y_train_full.shape,\"x_test = \",x_test.shape,\"y_test = \",y_test.shape)","20a0d74a":"plt.imshow(x_train_full[30])","9235a642":"y_train_full[30]","516b2ad4":"class_names = [\"T-shirt\/Top\",\"Trouser\",\"Pullover\",\"Dress\",\"Coat\",\n              \"Sandal\",\"Shirt\",\"Sneaker\",\"Bag\",\"Ankle boot\"]","cbb817e5":"class_names[y_train_full[30]]","74fd02e3":"x_train_full[1]","89310a56":"x_train_n = x_train_full\/255.\nx_test_n = x_test\/255.","7aadfba6":"x_valid,x_train = x_train_n[:5000],x_train_n[5000:]\ny_valid,y_train = y_train_full[:5000],y_train_full[5000:]\nx_test = x_test_n","7b726690":"y_valid","26823a70":"x_valid[0]","ca81ba1e":"np.random.seed(42) #random seed is used to replicate the same result everytime\ntf.random.set_seed(42)","89924dc8":"model = keras.models.Sequential() # USING SEQUENTIAL API\nmodel.add(keras.layers.Flatten(input_shape=[28,28])) # input layer, converting 2D to 28*28 pixel using flatten\nmodel.add(keras.layers.Dense(300,activation=\"relu\")) # 1st hidden layer, 300=no. of neurons, relu=activation function\nmodel.add(keras.layers.Dense(100,activation=\"relu\")) # 2nd hidden layer\nmodel.add(keras.layers.Dense(10,activation=\"softmax\")) # output layer, categories=10\n#relu = 0 for all negative numbers or relu = output for the positive numbers","cf867ca9":"model.summary() \n# param\n# dense = 784*300+300 = 235500\n# dense_1 = 300*100+100 = 30100\n# dense_2 = 100*10+10 = 1010\n# none  = no limit on input data","9ba52b64":"import pydot\nkeras.utils.plot_model(model)","1ba0e305":"weights, biases = model.layers[1].get_weights()","1a28ae5f":"weights","47441d18":"weights.shape","3b7b3402":"biases","cf056b52":"biases.shape","87fa8345":"model.compile(loss=\"sparse_categorical_crossentropy\",optimizer=\"sgd\",metrics=[\"accuracy\"])\n# scc = for categorical data\n# sgd = stocashtic gradient descent\n# for binary labels = binary_cross_entropy","11b17ffb":"model_history = model.fit(x_train,y_train,epochs=30,validation_data=(x_valid,y_valid))\n# by default epochs = 1","576a35d1":"model_history.params","3da93b4b":"model_history.history","31c540d7":"import pandas as pd\npd.DataFrame(model_history.history).plot(figsize = (8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","452e2d8b":"#evaluating performance and predicting","3c17ce30":"model.evaluate(x_test,y_test)\n# first = loss(0,3604) , second value = accuracy(0.8873)","cea5ecc0":"x_new = x_test[:] # considering first three samples from test dataset","0ae94cf8":"y_proba = model.predict(x_new) # probability to each class\ny_proba.round(2) ","5f64d857":"y_pred = model.predict_classes(x_new)\ny_pred\n# as category starts from 0 to 9\n# for first record category = 9 which can be confirmed by above probabilities\n# category of second sample = 2\n# category of third sample = 1","4f51bb20":"pred_names = np.array(class_names)[y_pred]\npred_names","862574d3":"print(plt.imshow(x_test[20]))\nprint(plt.imshow(x_test[20]),pred_names[20])","f774ad43":"print(plt.imshow(x_test[2000]))","0abb2a17":"print(plt.imshow(x_test[525]))","b0371f8c":"model.save(\"saved_ann1.h5\")","b437579d":"%pwd #present working directory","2c86b004":"del model","0505088f":"keras.backend.clear_session()","e1f033cb":"model = keras.models.load_model(\"saved_ann1.h5\")","ad862ee9":"model.summary()","a8603cec":"y_pred = model.predict(x_new)\nprint(y_pred)","8b3622c7":"# if went to see the structure of neural network(using pydot)","bcd2cb0e":"#### SPLIT THE DATA INTO TRAIN \/ VALIDATION\/TEST DATASETS\n###### Training data = used for training the model\n###### Validation data = used for tuning the hyperparameters and evaluate the model\n###### Test data = used to test the model after the model has gone through initial vetting by the validation set","864e6c2e":"#### DATA NORMALIZATION","3144975f":"##### CREATE THE MODEL ARCHITECTURE\n###### 1. SEQUENTIONAL MODEL API(SIMPLE AND STRAIGHT FORWARD)\n###### 2. FUNCTIONAL API(COMPLEX NN)","e0e96b26":"## IMAGE CLASSIFIER","27b49709":"# SAVING WORKING DIRECTORY","a1fcaafa":"learning processes \n"}}