{"cell_type":{"a3ef8403":"code","cef1fbec":"code","584f368f":"code","5fe16321":"code","d027ee75":"code","67148562":"code","ee04f03a":"code","6d170c4b":"code","01a8e45c":"markdown","36043143":"markdown","17c71d80":"markdown","61394ede":"markdown","954a51fa":"markdown","91e69acc":"markdown","4b803e4a":"markdown"},"source":{"a3ef8403":"import numpy as np \nimport pandas as pd \nimport time\nfrom catboost import CatBoostClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nimport collections\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score, accuracy_score, classification_report\nfrom collections import Counter\nfrom sklearn.model_selection import KFold, StratifiedKFold\npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\ntrain=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv')\ntest=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/test.csv')","cef1fbec":"y=train.pop('Cover_Type')\nid_=train.pop('Id')\nid_test=test.pop('Id')","584f368f":"\nclassifiers = {\n    'XGBClassifier':XGBClassifier(),\n    \"KNearest\": KNeighborsClassifier(),\n    \"Support Vector Classifier\": SVC(),\n    \"DecisionTreeClassifier\": DecisionTreeClassifier(),\n    #'CatBoostClassifier':CatBoostClassifier() #the best\n\n    \n\n}","5fe16321":"# 5000 a sample (you can change)\nfrom sklearn.model_selection import train_test_split\n\n# This is explicitly used for undersampling.\nX_train, X_test, y_train, y_test = train_test_split(train[:5000], y[:5000], test_size=0.2, random_state=42)","d027ee75":"X_train = X_train.values\nX_test = X_test.values\ny_train = y_train.values\ny_test = y_test.values","67148562":"from sklearn.model_selection import cross_val_score\n\n\nfor key, classifier in classifiers.items():\n    classifier.fit(X_train, y_train)\n    training_score = cross_val_score(classifier, X_train, y_train, cv=5)\n","ee04f03a":"\nXGBClassifier=XGBClassifier()\na_score = cross_val_score(XGBClassifier, X_train, y_train, cv=5)\n\nKNeighborsClassifier=KNeighborsClassifier()\nb_score = cross_val_score(KNeighborsClassifier, X_train, y_train, cv=5)\n\nSVC=SVC()\nc_score = cross_val_score(SVC, X_train, y_train, cv=5)\n\nDecisionTreeClassifier=DecisionTreeClassifier()\nd_score = cross_val_score(DecisionTreeClassifier, X_train, y_train, cv=5)\n\n","6d170c4b":"print('XGBClassifier Cross Validation Score', round(a_score.mean() * 100, 2).astype(str) + '%')\n\nprint('KNeighborsClassifier Cross Validation Score', round(b_score.mean() * 100, 2).astype(str) + '%')\n\nprint('Support Vector Classifier Cross Validation Score', round(c_score.mean() * 100, 2).astype(str) + '%')\n\nprint('DecisionTreeClassifier Cross Validation Score', round(d_score.mean() * 100, 2).astype(str) + '%')\n","01a8e45c":"<a id=\"6.\"><\/a>\n## 6. View results\n\n","36043143":"<a id=\"4.\"><\/a>\n## 4. train_test_split\n","17c71d80":"<a id=\"5.\"><\/a>\n## 5. training\n\n","61394ede":"<a id=\"3.\"><\/a>\n## 3. Model setting\n\n","954a51fa":"* [1. import libraries and read data](#1.)\n* [2. drop target and id column](#2.)\n* [3. Model setting](#3.)\n* [4. train_test_split](#4.)\n* [5. training](#5.)\n* [6. View results](#6.)\n","91e69acc":"<a id=\"1.\"><\/a>\n## 1. import libraries and read data","4b803e4a":"<a id=\"2.\"><\/a>\n## 2. drop target and id column\n"}}