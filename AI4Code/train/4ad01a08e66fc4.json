{"cell_type":{"0e4bf589":"code","0b9a1507":"code","2b9702e3":"code","9ad12d0c":"code","f1448e6c":"code","ce707460":"code","16047366":"code","c0452862":"code","09acff23":"code","a7cebfaf":"code","bbbb647e":"code","f2e042e3":"code","1cad62e6":"code","1860dc22":"code","fbe90489":"code","dbca7740":"code","e8e3ebef":"markdown","88e2956f":"markdown","0b4b294f":"markdown","876e4869":"markdown","f62d8bec":"markdown","47760cfd":"markdown","afd772be":"markdown","cd1647ca":"markdown","96246ad6":"markdown","97077ae4":"markdown","4a17985e":"markdown","796151d1":"markdown","bd47acf3":"markdown"},"source":{"0e4bf589":"import numpy as np\nimport pandas as pd\nimport os\npath = '\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/'\nfrom fbprophet import Prophet\nimport plotly.graph_objects as go","0b9a1507":"# Covid 19 and Price data\ncovid_df = pd.read_csv(path+\"COVID-19_and_Price_dataset.csv\")\ncovid_df['Date'] = pd.to_datetime(covid_df['Date']) # convert Date column into Datetime type\n# see first 5 and last 5 rows \nsliced_df = covid_df.head(5) # first 5 rows\nsliced_df = sliced_df.append(covid_df.tail(5)) # last 5 rows\nprint(\"We have covid-19 data captured from {} to {}\".format(str(sliced_df.Date[0]).split()[0],str(sliced_df.Date.iloc[-1]).split()[0]))\nsliced_df.style.set_properties(**{'background-color': 'white',                                                   \n                                    'color': 'red',                       \n                                    'border-color': 'black'})","2b9702e3":"# Crude oil data\noil_df = pd.read_csv(path+\"Crude_oil_trend.csv\")\noil_df['Date'] = pd.to_datetime(oil_df['Date'])\n# first 5 and last 5 rows\nsliced_df = oil_df.head(5)\nsliced_df = sliced_df.append(oil_df.tail(5))\nprint(\"We have 75 day moving average Crude oil price data from {} to {}\".format(str(sliced_df.Date[0]).split()[0],str(sliced_df.Date.iloc[-1]).split()[0]))\nsliced_df.style.set_properties(**{'background-color': 'black',                                                   \n                                    'color': 'lawngreen',                       \n                                    'border-color': 'red'})","9ad12d0c":"del sliced_df # its a good practice to delete useless objects # save memory \n\ncols = ['SaudiArabia','UnitedArabEmirates','UnitedStates','Russia','Italy','China'] \ncols = ['Date'] + [i+'_new_cases' for i in cols]\n\ncovid_df_sliced = covid_df[cols]\n\n# We will use the 75 day moving average crude oil price\ndf = pd.merge(covid_df_sliced, oil_df, on='Date')\n\ncor_df = df.corr()\n\ncor_df.style.background_gradient(cmap='magma_r')","f1448e6c":"# > 0.80 Correlation \ncols_ = ['Date'] + [i for i in covid_df.columns if i.endswith('new_cases')]\ndf_new_cases = covid_df[cols_]\ndf_ = pd.merge(df_new_cases, oil_df, on='Date')\ncor_df_ = df_.corr()\ni = abs(cor_df_['Price']) > 0.80\ncor_df_ = cor_df_.loc[i, i]\ncor_df_.style.background_gradient(cmap='magma_r')","ce707460":"del cor_df,cor_df_ # save memory even if its of less size\n# removing china and Italy\ndf.drop(['Italy_new_cases','China_new_cases'],axis = 1, inplace = True)\n# set date as index\ndf.set_index('Date',inplace = True)\n# train\ntrain = df[:'2020-06-05']\n# test\ntest = df['2020-06-06':]\n\nprint(\"Train Test Split Done!\")\n\ntrain.tail()","16047366":"test.head()","c0452862":"train_df = pd.DataFrame()\ntrain_df['ds'] = train.index\ntrain_df['y'] = train.Price.values\ntrain_df['saudi'] = train.SaudiArabia_new_cases.values\ntrain_df['uae'] = train.UnitedArabEmirates_new_cases.values\ntrain_df['us'] = train.UnitedStates_new_cases.values\ntrain_df['russia'] = train.Russia_new_cases.values\ntrain_df.tail()","09acff23":"test_df = pd.DataFrame()\ntest_df['ds'] = test.index\ntest_df['y'] = test.Price.values\ntest_df['saudi'] = test.SaudiArabia_new_cases.values\ntest_df['uae'] = test.UnitedArabEmirates_new_cases.values\ntest_df['us'] = test.UnitedStates_new_cases.values\ntest_df['russia'] = test.Russia_new_cases.values\ntest_df.tail()","a7cebfaf":"model = Prophet()\nmodel.add_regressor('saudi')\nmodel.add_regressor('uae')\nmodel.add_regressor('us')\nmodel.add_regressor('russia')\nmodel.fit(train_df)","bbbb647e":"y_pred = model.predict(test_df.drop(columns='y'))\ny_pred","f2e042e3":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=y_pred['ds'], y=y_pred['yhat'],\n                    mode='lines',\n                    name='Predicted Oil Prices'))\nfig.add_trace(go.Scatter(x=test.index, y=test['Price'],\n                    mode='lines',\n                    name='Actual Oil Prices'))\n\n# Edit the layout\nfig.update_layout(title='Actual vs Predicted Price: Test data',\n                   xaxis_title='Date',\n                   yaxis_title='Price')\nfig.show()","1cad62e6":"from sklearn.metrics import mean_squared_error\nprint(\"Test RMSE: \",np.sqrt(mean_squared_error(test['Price'],y_pred['yhat'])))","1860dc22":"# Load Sample Submission\nsubmission_file = pd.read_csv('..\/input\/ntt-data-global-ai-challenge-06-2020\/sampleSubmission0710_updated.csv')\ntest_index = np.where(submission_file.Date == '2020-07-07')[0][0]\ntest_file = submission_file[test_index:].reset_index(drop = True)\ntest_file['Date'] = pd.to_datetime(test_file['Date'])\n","fbe90489":"\n# Prophet time series\nfrom fbprophet import Prophet\nd={'ds':df.index,'y':df['Price']}\ndf_pred=pd.DataFrame(data=d)\nmodel = Prophet(daily_seasonality=False)\nmodel.fit(df_pred)\n\nimport matplotlib.pyplot as plt\nfuture = model.make_future_dataframe(periods=len(test_file))\nforecast = model.predict(future)\n\n\n# Submission file\ntest_file['Price'] = forecast['yhat'][-len(test_file):].reset_index(drop = True)\npretest_file = df['2020-04-29':'2020-07-07']['Price'].reset_index()\ntest_price = pd.concat([pretest_file,test_file],ignore_index = True)\ntest_price['Date'] = pd.to_datetime(test_price['Date'])\nsubmission_file['Date'] = pd.to_datetime(submission_file['Date'])\nsubmission_file = submission_file.drop('Price',axis=1)\nsubmission = pd.merge(submission_file, test_price, on='Date', how = 'left')\n\n# July 3 is missing - replace with avg\na = submission[submission['Date'] == '2020-07-02']['Price'].reset_index(drop=True)[0]\nb = submission[submission['Date'] == '2020-07-06']['Price'].reset_index(drop=True)[0]\nsubmission = submission.fillna((a+b)\/2)\n","dbca7740":"submission.to_csv('submission.csv', index=False)","e8e3ebef":"We have seen how to make a simple multi-variate forecasting model and also to make a submission through kernel. The next step is to improve the model. If you can analyse and find significant features then you can add those and reduce the root mean_squared_error. \n\n\n*Please feel free to reach out for suggestions and queries.*\n\n\n**All the best! Stay SAFE!**","88e2956f":"For the purpose of forecasting future oil prices we shall not consider the prices from 1986. For efficiency we will limit the data from 2019-12-31 (Date from which Covid-19 info is available). Also for keeping the kernel simple we have not included the NTL image analysis. ","0b4b294f":"## Load Libraries","876e4869":"# Multi-Variate Time Series Model\n\nThere can be many features i.e, internel features like covid-19 new cases, deaths and externel influences like other stock prices that can impact oil price. However, for simplicity we shall only consider few features.","f62d8bec":"## Train Test split\n\nIn order to evaluate the performance of our model, let's split the available data into train (build the model) and test(evaluate the trained model).","47760cfd":"# Submission","afd772be":"# Columns for Multi-variate model\n\nWe will check the correlation of features before we build any machine learning model.\n\nLets try to combine covid 19 new cases and oil price.\n\nAccording to the article in investopedia, \n\n* As of 2019, OPEC controlled roughly 75% of the world's total crude oil reserves and produced 42% of the world's total crude oil output.\n* However, the U.S. was the world's largest oil-producing country in 2019 with more than 12 million barrels per day.\n* Although OPEC still has the ability to drive prices, the U.S. has limited the cartel's pricing power by ramping up production whenever OPEC cuts its output. \n\nAs of April 2020, OPEC countries included the following 13 nations:\n\n1. Algeria\n2. Angola\n3. Congo\n4. Equatorial Guinea\n5. Gabon\n6. Iran\n7. Iraq\n8. Kuwait\n9. Libya\n10. Nigeria\n11. Saudi Arabia\n12. United Arab Emirates\n13. Venezuela\n\n[source](https:\/\/www.investopedia.com\/articles\/investing\/081315\/opec-vs-us-who-controls-oil-prices.asp)\n\nFor now, we will try to keep our focus only on few OPEC countries along with UK, US, Russia, Italy and China, just to keep the number of features limited for the kernel. This doesn't mean that only these counties contribute to oil price. \n","cd1647ca":"**Note: In the case of actual submission, we need to forecast the independent features (columns other than the 'Price') first.**\n\nIn this case, we need to forecast SaudiArabia_new_cases, UnitedArabEmirates_new_cases, UnitedStates_new_cases and Russia_new_cases from July 16 to August 21, 2020 one by one using any univariate forecasting method and then predict the prices using the forecasted features.","96246ad6":"## Load Data\n\n### Covid 19 and Price data","97077ae4":"We can see that new covid-19 cases in SaudiArabia, UAE, US, Russia have high negative impact on 75 day moving average price whereas Italy have very little correlation. China has a positive impact on price (which is interesting).\n\nHowever, if we consider the Original Price taken from EIA website then the correlation will be very different to the above. \n\nApart from the above counties there are many other other that have high correlation with 75 day average price. \n\nWe will show the method to find out with a correlation threshold and accordingly you can choose the countries which you find useful for the oil price forecasting.","4a17985e":"# Introduction\n\n**\u201cIt\u2019s not the winning, but the participation, not the triumph, but the struggle!\u201d** \u2015 Anonymous\n\nThe competition has given us the opportunity to learn and handle multiple types of data(Image, Time Series data and Tabular data).\n\nIn this kernel, we will see how to handle the given datasets and apply multi-variate time series forecasting to predict the oil price.\n\n![Image of Covid 19](https:\/\/news.cgtn.com\/news\/30596a4e33457a4e79417a4d30676a4e7a4d444f31457a6333566d54\/img\/d7715803c2aa413d88fd5d4a66c3f10e\/d7715803c2aa413d88fd5d4a66c3f10e.jpg)","796151d1":"# Authors\n**This notebook is a collaborated work of [Aravind](https:\/\/www.linkedin.com\/in\/imaravindr\/) and [Shebin](https:\/\/www.linkedin.com\/in\/shebin-xp\/).**\n\n\n*Amongst other great kernels in this competition, the notebook is kept simple yet efficient as our objective is to help people who are new to Data Science and support them to make their submissions.* **Come let us all participate!**\n\nEarlier, we have shared a kernel exploring the very first sets of the competition data. It includes poweful animated visuals and simple model for beginners to start. Check it out [Story Telling - Animated EDA + Beginner's Model](https:\/\/www.kaggle.com\/imarvind\/story-telling-animated-eda-beginner-s-model) \n","bd47acf3":"### Crude oil data"}}