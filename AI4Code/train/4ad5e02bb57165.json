{"cell_type":{"cedf4059":"code","614453bd":"code","fa81d069":"code","85d6706e":"code","3cf0a73c":"code","26ccd7b6":"code","2d9e003c":"code","8010fae3":"code","353c6c64":"code","f9ac2373":"code","a2ccccbf":"code","ac241eab":"code","dcd632f5":"code","fcb47a69":"code","f0c9cc61":"code","aa41b46c":"code","845510e9":"code","0cb11199":"code","412e4b55":"code","c8e4a628":"code","13234fe0":"code","aa3aa4f6":"code","f3950fd7":"code","faa7ab3f":"code","0763935b":"code","ee884982":"code","ea84d795":"code","dd9514f3":"code","9e6d9762":"code","04ef0863":"code","bc859a0a":"code","9c623a53":"code","425fe6a6":"code","e409e89d":"code","522400eb":"code","2c30fe53":"code","c6f54d7d":"code","6fe0f0ae":"code","6ab2d09b":"code","a6bc3665":"code","7e38dd51":"code","9c4adc3b":"code","63b8a4bb":"code","f1a02de7":"code","75f4dbfd":"code","30c92736":"code","dcce64e4":"code","3f2e8ba3":"code","b5063e6c":"code","94fd0612":"code","03c77e63":"code","a978aa6e":"code","ec2f1de5":"code","fb83827d":"code","35dcbde7":"code","7ef76139":"code","d86651da":"code","0ac0781b":"markdown","9a54f392":"markdown","1e9832bf":"markdown","a9dbf928":"markdown","6af608f5":"markdown","ac03e0aa":"markdown","d6458f3c":"markdown","d1742603":"markdown","98f4fb04":"markdown","41ba8fb2":"markdown"},"source":{"cedf4059":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","614453bd":"data = pd.read_csv('\/kaggle\/input\/ds4g-environmental-insights-explorer\/eie_data\/gppd\/gppd_120_pr.csv')","fa81d069":"data.columns","85d6706e":"data = data.drop(['system:index','country','wepp_id','url','.geo','country_long','geolocation_source','name','gppd_idnr'],axis = 1)","3cf0a73c":"data.tail()","26ccd7b6":"data['total_generation'] = data['generation_gwh_2013'] + data['generation_gwh_2014'] + data['generation_gwh_2015'] + data['generation_gwh_2016'] + data['generation_gwh_2017'] ","2d9e003c":"data = data.drop(['generation_gwh_2013','generation_gwh_2014','generation_gwh_2015','generation_gwh_2016','generation_gwh_2017'],axis = 1)","8010fae3":"data","353c6c64":"import seaborn as sns","f9ac2373":"ax = sns.barplot(x=\"primary_fuel\", y=\"estimated_generation_gwh\", data=data)","a2ccccbf":"ax = sns.barplot(x=\"estimated_generation_gwh\", y=\"source\", data=data)","ac241eab":"ax = sns.scatterplot(x=\"commissioning_year\", y=\"estimated_generation_gwh\", data=data)","dcd632f5":"ax = sns.scatterplot(x=\"capacity_mw\", y=\"estimated_generation_gwh\", data=data)","fcb47a69":"the_mean = data.groupby('primary_fuel').mean()","f0c9cc61":"from sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plot","aa41b46c":"X = the_mean['capacity_mw']\ny = the_mean['estimated_generation_gwh']","845510e9":"reg = LinearRegression()\nreg = reg.fit(X.values.reshape(-1,1),y)\npredictions = reg.predict(X.values.reshape(-1,1))","0cb11199":"plot.scatter(X, y, color = 'red')\nplot.plot(X, predictions, color = 'blue')\nplot.title('RelationShip between Capasity and expected gwh')\nplot.xlabel('Capasity')\nplot.ylabel('Expected gwh')\nplot.show()","412e4b55":"from sklearn.metrics import r2_score\nr2_score(y,predictions)","c8e4a628":"the_mean = the_mean.sort_values('capacity_mw')","13234fe0":"the_mean['weights'] = list(the_mean['estimated_generation_gwh'] \/ the_mean['capacity_mw'])","aa3aa4f6":"the_mean['weights'] = the_mean['weights'] \/ the_mean['weights'].sum() * 1000","f3950fd7":"the_mean['the_adjusted_ratio'] = the_mean['weights'] * the_mean['capacity_mw']","faa7ab3f":"the_mean","0763935b":"X = the_mean['the_adjusted_ratio']\ny = the_mean['estimated_generation_gwh']","ee884982":"reg = LinearRegression()\nreg = reg.fit(X.values.reshape(-1,1),y)\npredictions = reg.predict(X.values.reshape(-1,1))","ea84d795":"plot.scatter(X, y, color = 'red')\nplot.plot(X, predictions, color = 'blue')\nplot.title('RelationShip between Capasity and expected gwh')\nplot.xlabel('Capasity')\nplot.ylabel('Expected gwh')\nplot.show()","dd9514f3":"from sklearn.metrics import r2_score\nr2_score(y,predictions)","9e6d9762":"dictionary_of_coefficients = dict(zip(the_mean.index, the_mean['the_adjusted_ratio']))","04ef0863":"dictionary_of_coefficients","bc859a0a":"data","9c623a53":"for index,row in data.iterrows():\n    for name in data.primary_fuel.unique():\n        if row['primary_fuel'] == name:\n            data.loc[index,'predicted_gwh'] = (dictionary_of_coefficients[name] * row['capacity_mw'])\n            \nfrom sklearn.metrics import mean_squared_error\nmean_squared_error(data['estimated_generation_gwh'], data['predicted_gwh'])","425fe6a6":"ax = sns.scatterplot(x=\"estimated_generation_gwh\", y=\"predicted_gwh\", data=data)","e409e89d":"from sklearn.metrics import r2_score\nr2_score(data['estimated_generation_gwh'], data['predicted_gwh'])","522400eb":"dictionary_of_coefficients","2c30fe53":"data","c6f54d7d":"the_mean = data.groupby('primary_fuel').mean()","6fe0f0ae":"the_mean['new_ratios'] = the_mean['predicted_gwh'] \/ the_mean['estimated_generation_gwh']","6ab2d09b":"the_mean","a6bc3665":"dictionary_of_coefficients","7e38dd51":"for name in the_mean.index:\n    dictionary_of_coefficients[name] =  dictionary_of_coefficients[name] \/ the_mean.loc[name,'new_ratios']","9c4adc3b":"dictionary_of_coefficients","63b8a4bb":"for index,row in data.iterrows():\n    for name in data.primary_fuel.unique():\n        if row['primary_fuel'] == name:\n            data.loc[index,'predicted_gwh'] = (dictionary_of_coefficients[name] * row['capacity_mw'])\n            \nfrom sklearn.metrics import mean_squared_error\nmean_squared_error(data['estimated_generation_gwh'], data['predicted_gwh'])","f1a02de7":"from sklearn.metrics import r2_score\nr2_score(data['estimated_generation_gwh'], data['predicted_gwh'])","75f4dbfd":"data","30c92736":"import pandas as pd\nglobal_power_plant_database = pd.read_csv(\"..\/input\/global-power-plant-database\/global_power_plant_database.csv\")","dcce64e4":"emmission_annual = pd.read_excel('\/kaggle\/input\/emission-annual\/emission_annual.xls')","3f2e8ba3":"emmission_mean = emmission_annual.groupby('Energy Source').mean()","b5063e6c":"data = pd.concat([global_power_plant_database[['capacity_mw','fuel1']],data])","94fd0612":"for name in dictionary_of_coefficients:\n    data.loc[data['fuel1'] == name,'predicted_gwh'] = (dictionary_of_coefficients[name] * data.loc[data['fuel1'] == name,'capacity_mw'])\n    ","03c77e63":"dictionary_of_coefficients","a978aa6e":"average_co2_emissions = {'Coal':909,'Hydro':4,'Solar':105,'Wind':13,'Gas':465,'Oil':821}","ec2f1de5":"for name in dictionary_of_coefficients:\n    data.loc[data['fuel1'] == name,'co2_emissions'] = (average_co2_emissions[name] * data.loc[data['fuel1'] == name,'predicted_gwh']) * 1000000","fb83827d":"data.head(30)","35dcbde7":"data['co2_emissions'].plot(figsize = (15,10))","7ef76139":"data.sort_values('co2_emissions')['co2_emissions'].plot(use_index=False,figsize=(15,10))","d86651da":"data['co2_emissions'].sum() \/ 1000000","0ac0781b":"In the end with testing data, we optimize the coefficients and the final coefficients for fuel source","9a54f392":"# Global Power Plants Annual Consumption","1e9832bf":"I regulate the coefficients for fuel with repetative methodolgy. After that the error and r_square is very significant. Thus, we can totally predict the real expected gwh from capasity and type of fuel. Here, I create a methodology to extract information from two features. This methodology can be used for another related features and machine learning stages could be improved\n\nexp_gwh = coefficient_of_fuel * capasity","a9dbf928":"Now we have all the predicted annual gwh for all power plants. We can transfor these to the emissions.","6af608f5":"https:\/\/blueskymodel.org\/kilowatt-hour we can use this data for calculations of average co2 emission as gram","ac03e0aa":"# Total Esmitated Co2 Emission In the World","d6458f3c":"We have coefficents for every type of energy power plant. We will use them for calculating every expected gwh as the formula:\n\nexp_gwh = coefficient_of_fuel * capasity","d1742603":"1683217333372.0256 ton co2 emmission is calculated in the world per year","98f4fb04":"Capasity and commissioning year is not related with estimated generation gwh","41ba8fb2":"Now we have all ht plants for capacity and have the coefficients for their fuel type. "}}