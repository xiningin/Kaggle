{"cell_type":{"58a4d8df":"code","653f5055":"code","69d2c0e2":"code","70117a38":"code","f6517e5a":"code","9e53c457":"code","d94b44ce":"code","b3a6e23b":"code","ee0b5acb":"code","89ad4f18":"code","4f74fcfc":"code","d3a47544":"code","2601298f":"code","15ebe070":"code","30e35f64":"code","697a9238":"code","0fcac8ef":"code","7480dabe":"code","6585f2ed":"code","da404abc":"code","58c52411":"code","153d6bc1":"code","3839075f":"code","dbaf4946":"code","0282ff9b":"code","2871036f":"code","40e10436":"code","e25a9a55":"code","79c7fe2b":"code","da7b8d36":"code","944a83e4":"code","6a1d7940":"code","a517fe2e":"code","e91f894f":"code","7d4790e5":"code","d346f9d3":"code","84ff5095":"code","45de1c62":"code","565eca66":"code","4027ce55":"code","f9ae52a8":"code","62955827":"code","da2043e0":"code","b9316996":"code","5457e3c9":"code","4fec7edc":"code","78b8235d":"code","823a2f93":"code","f1c0b54a":"code","be5479a9":"code","2c8495e9":"code","a2013026":"code","0a7b0442":"code","2f1a68d1":"code","067eb226":"code","09c84972":"code","101d00e7":"code","035e8a09":"code","7d8fb020":"code","2cffd95f":"code","7465e118":"code","d7bed5db":"code","127e107d":"code","d069ae25":"code","ff082622":"code","f06d3224":"code","20393711":"code","08fa61c6":"markdown","f4a0a34b":"markdown","2a69381c":"markdown","c10e8ac4":"markdown","e53bb813":"markdown","10b35510":"markdown","05dd0c54":"markdown","dd108694":"markdown","3ecd21ed":"markdown","caea8861":"markdown","dacc5296":"markdown","44162bb3":"markdown","399e5c92":"markdown","88ad40cb":"markdown"},"source":{"58a4d8df":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib.inline\nimport seaborn as sns\nfrom matplotlib.pylab import rcparams\nrcparams['figure.figsize']=10,10\nfrom datetime import datetime","653f5055":"holiday=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/holidays_events.csv',parse_dates=['date'])\noil=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/oil.csv',parse_dates=['date'])\nstore=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/stores.csv')\ntransaction=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/transactions.csv',parse_dates=['date'])\ntrain=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/train.csv',parse_dates=['date'])\n","69d2c0e2":"oil['dcoilwtico'][0]=0\ntrain=pd.merge(train,oil,how='left',on='date')\ntrain=train.fillna(method=\"bfill\")\ntrain","70117a38":"holiday=holiday[['date','type','transferred']]\ntrain=pd.merge(train,holiday,how='left',on='date')\ntrain","f6517e5a":"train=pd.merge(train,store[['store_nbr','city','state','cluster']],how='left',on='store_nbr')","9e53c457":"train.notna().all()","d94b44ce":"train['year']=pd.DatetimeIndex(train['date']).year\ntrain['month']=pd.DatetimeIndex(train['date']).month\ntrain['week']=pd.DatetimeIndex(train['date']).dayofweek","b3a6e23b":"train","ee0b5acb":"oilPrice_effect = train[['date','dcoilwtico','sales']]\noilPrice_effect=oilPrice_effect.groupby('date').mean() \nplt.figure(figsize=(15,8))\nplt.plot(oilPrice_effect['dcoilwtico'])\nplt.plot(oilPrice_effect['sales'])\nplt.legend(['dcoilwtico','sales'])","89ad4f18":"oilPrice_effect[['dcoilwtico','sales']].corr()","4f74fcfc":"oilPrice_effect = train[['year','dcoilwtico','sales']]","d3a47544":"oilPrice_effect=oilPrice_effect.groupby('year').mean() \noilPrice_effect","2601298f":"plt.figure(figsize=(15,8))\nplt.plot(oilPrice_effect['dcoilwtico'])\nplt.plot(oilPrice_effect['sales'])\nplt.legend(['dcoilwtico','sales'])","15ebe070":"oilPrice_effect = train[['month','dcoilwtico','sales']]\noilPrice_effect=oilPrice_effect.groupby('month').mean() \nplt.figure(figsize=(15,8))\nplt.plot(oilPrice_effect['dcoilwtico'])\nplt.plot(oilPrice_effect['sales'])\nplt.legend(['dcoilwtico','sales'])","30e35f64":"oilPrice_effect = train[['week','dcoilwtico','sales']]\noilPrice_effect=oilPrice_effect.groupby('week').mean() \nplt.figure(figsize=(15,8))\nplt.plot(oilPrice_effect['dcoilwtico'])\nplt.plot(oilPrice_effect['sales'])\nplt.legend(['dcoilwtico','sales'])","697a9238":"table1=pd.pivot_table(train[['year','family','sales']],index=['year','family'],aggfunc={'sales':np.mean})\ntable1","0fcac8ef":"dates=table1.index.get_level_values(0).unique()\nfor period in dates:\n    split=table1.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","7480dabe":"for period in dates:\n    split=table1.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"line\",figsize=(15,8))","6585f2ed":"dates=table1.index.get_level_values(0).unique()\nfor period in dates:\n    split=table1.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","da404abc":"table2=pd.pivot_table(train[['month','family','sales']],index=['month','family'],aggfunc={'sales':np.mean})\ntable2","58c52411":"month=table2.index.get_level_values(0).unique()\nfor period in month:\n    split=table2.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","153d6bc1":"for period in month:\n    split=table2.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"line\",figsize=(15,8))","3839075f":"for period in month:\n    split=table2.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","dbaf4946":"table3=pd.pivot_table(train[['month','family','sales']],index=['month','family'],aggfunc={'sales':np.mean})\nweek=table3.index.get_level_values(0).unique()\nfor period in week:\n    split=table3.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","0282ff9b":"for period in week:\n    split=table3.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"line\",figsize=(15,8))","2871036f":"for period in week:\n    split=table3.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","40e10436":"train.columns","e25a9a55":"store_analysis = train[['year','month','week','store_nbr','family','sales']]\nproduct_list=['BEVERAGES','BREAD\/BAKERY','CLEANING', 'DAIRY', 'DELI', 'EGGS','FROZEN FOODS', 'GROCERY I','HOME CARE','LIQUOR,WINE,BEER','MEATS', 'PERSONAL CARE', 'POULTRY', 'PREPARED FOODS', 'PRODUCE']\nstore_analysis=store_analysis.loc[store_analysis['family'].isin(product_list)]","79c7fe2b":"store_analysis1=pd.pivot_table(store_analysis,index=['year', 'store_nbr'],aggfunc={'sales':np.mean})","da7b8d36":"S_year=store_analysis1.index.get_level_values(0).unique()\nfor period in S_year:\n    split=store_analysis1.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","944a83e4":"for period in S_year:\n    split=store_analysis1.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","6a1d7940":"store_analysis2=pd.pivot_table(store_analysis,index=['month', 'store_nbr'],aggfunc={'sales':np.mean})\nS_month=store_analysis2.index.get_level_values(0).unique()\nfor period in S_month:\n    split=store_analysis2.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","a517fe2e":"for period in S_month:\n    split=store_analysis2.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","e91f894f":"store_analysis3=pd.pivot_table(store_analysis,index=['week', 'store_nbr'],aggfunc={'sales':np.mean})\nS_week=store_analysis3.index.get_level_values(0).unique()\nfor period in S_week:\n    split=store_analysis3.xs(period)\n    sale=split[\"sales\"]\n    plt.subplots()\n    sale.plot(kind=\"bar\").legend()","7d4790e5":"for period in S_week:\n    split=store_analysis3.xs(period)\n    sale=split[\"sales\"]\n    sale.plot(kind=\"bar\",figsize=(15,8))","d346f9d3":"onpromotion_analysis = train[['year','month','week','family', 'sales', 'onpromotion']]\nonpromotion_analysis.head(2)","84ff5095":"onpromotion_analysis[['onpromotion','sales']].corr()","45de1c62":"product_list=['BEVERAGES','BREAD\/BAKERY','CLEANING', 'DAIRY', 'DELI', 'EGGS','FROZEN FOODS', 'GROCERY I','HOME CARE','LIQUOR,WINE,BEER','MEATS', 'PERSONAL CARE', 'POULTRY', 'PREPARED FOODS', 'PRODUCE']\nonpromotion_analysis=onpromotion_analysis.loc[onpromotion_analysis['family'].isin(product_list)]","565eca66":"onpromotion_analysis1=pd.pivot_table(onpromotion_analysis,index=['year', 'family'],aggfunc={'sales':np.mean,'onpromotion':np.mean})","4027ce55":"P_year=onpromotion_analysis1.index.get_level_values(0).unique()","f9ae52a8":"for period in P_year:\n    split=onpromotion_analysis1.xs(period)\n    sale=split[\"sales\"]\n    promotion=split[\"onpromotion\"]\n    sale.plot(kind=\"bar\",figsize=(20,8))\n    promotion.plot(kind=\"line\",figsize=(20,8))","62955827":"onpromotion_analysis2=pd.pivot_table(onpromotion_analysis,index=['month', 'family'],aggfunc={'sales':np.mean,'onpromotion':np.mean})\nP_month=onpromotion_analysis2.index.get_level_values(0).unique()\nfor period in P_month:\n    split=onpromotion_analysis2.xs(period)\n    sale=split[\"sales\"]\n    promotion=split[\"onpromotion\"]\n    sale.plot(kind=\"bar\",figsize=(20,8))\n    promotion.plot(kind=\"line\",figsize=(20,8))","da2043e0":"onpromotion_analysis3=pd.pivot_table(onpromotion_analysis,index=['week', 'family'],aggfunc={'sales':np.mean,'onpromotion':np.mean})\nP_week=onpromotion_analysis3.index.get_level_values(0).unique()\nfor period in P_week:\n    split=onpromotion_analysis3.xs(period)\n    sale=split[\"sales\"]\n    promotion=split[\"onpromotion\"]\n    sale.plot(kind=\"bar\",figsize=(20,8))\n    promotion.plot(kind=\"line\",figsize=(20,8))","b9316996":"holidaytype_analysis=train[['sales','type']]\nholidaytype_analysis=holidaytype_analysis.fillna(value='no_holiday')\nholidaytype_analysis1=holidaytype_analysis.groupby('type',as_index=False).mean()\nholidaytype_analysis1","5457e3c9":"fig1, ax1 = plt.subplots(figsize=(10,8))\nax1.pie(holidaytype_analysis1['sales'], labels=holidaytype_analysis1['type'],shadow=True)\nplt.show()","4fec7edc":"holidaytype_analysis=train[['sales','type','transferred']]\nholidaytype_analysis['type']=holidaytype_analysis['type'].fillna(value='no_holiday')\nholidaytype_analysis['transferred']=holidaytype_analysis['transferred'].fillna(value=False)\nholidaytype_analysis=holidaytype_analysis[holidaytype_analysis['type']=='Holiday']\nholidaytype_analysis=holidaytype_analysis[['sales','transferred']]\nholidaytype_analysis=holidaytype_analysis.groupby('transferred').mean()","78b8235d":"holidaytype_analysis.plot(kind='bar',figsize=(8,4))","823a2f93":"Data=train[['date','family','onpromotion']]\nData","f1c0b54a":"Data=pd.pivot_table(Data,index=['date', 'family'],aggfunc={'onpromotion':np.mean})\nData","be5479a9":"Data=Data.unstack(level=1)\nData","2c8495e9":"data=Data\noil['dcoilwtico'][0]=0\ndata=pd.merge(data,oil,how='left',on='date')\ndata=data.fillna(method=\"bfill\")\ndata=data.drop('date',axis=1)\ndata","a2013026":"target=train[['date','family','sales']]\ntarget=pd.pivot_table(target,index=['date', 'family'],aggfunc={'sales':np.mean})\ntemp=target.unstack(level=1)\ntemp=pd.merge(temp,oil,how='left',on='date')\ntarget=temp.drop(['date','dcoilwtico'],axis=1)\ntarget","0a7b0442":"test=pd.read_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/test.csv',parse_dates=['date'])\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(data,target,test_size=0.6)\n\nfrom sklearn.tree import DecisionTreeRegressor\nlm = DecisionTreeRegressor()\n\n#from sklearn.ensemble import RandomForestClassifier\n#lm = RandomForestClassifier(n_estimators=100)\n\nlm.fit(x_train,y_train)\ny_predict=lm.predict(x_test)","2f1a68d1":"test\n","067eb226":"from sklearn import metrics\n#np.sqrt(metrics.mean_squared_error(y_test,y_predict))\nmetrics.mean_squared_log_error(y_test,y_predict)","09c84972":"y_predict","101d00e7":"test=test[['id','date','family','onpromotion']]\ntest=pd.pivot_table(test,index=['date', 'family'],aggfunc={'onpromotion':np.mean})\ntemp=test.unstack(level=1)\n\n\noil['dcoilwtico'][0]=0\ntemp=pd.merge(temp,oil,how='left',on='date')\ntemp=temp.fillna(method=\"bfill\")\ntest=temp.drop(['date'],axis=1)\ntest","035e8a09":"test.notna().all()","7d8fb020":"output_test= lm.predict(test)","2cffd95f":"pd.DataFrame(output_test)","7465e118":"output_test = pd.DataFrame(output_test,columns=['AUTOMOTIVE', 'BABY CARE', 'BEAUTY', 'BEVERAGES', 'BOOKS',\n       'BREAD\/BAKERY', 'CELEBRATION', 'CLEANING', 'DAIRY', 'DELI', 'EGGS',\n       'FROZEN FOODS', 'GROCERY I', 'GROCERY II', 'HARDWARE',\n       'HOME AND KITCHEN I', 'HOME AND KITCHEN II', 'HOME APPLIANCES',\n       'HOME CARE', 'LADIESWEAR', 'LAWN AND GARDEN', 'LINGERIE',\n       'LIQUOR,WINE,BEER', 'MAGAZINES', 'MEATS', 'PERSONAL CARE',\n       'PET SUPPLIES', 'PLAYERS AND ELECTRONICS', 'POULTRY',\n       'PREPARED FOODS', 'PRODUCE', 'SCHOOL AND OFFICE SUPPLIES',\n       'SEAFOOD'],index=test_date)","d7bed5db":"output_test","127e107d":"output_test=output_test.transpose().stack()","d069ae25":"output_test=pd.DataFrame(output_test,columns=['sales'])","ff082622":"output_test","f06d3224":"output_test.to_csv('\/Users\/rishabhgupta\/Desktop\/untitled folder\/sales.csv')","20393711":"528*54","08fa61c6":"Observation: It is observed that holiday and other event donot hamper the sales of store. Also no effect has been observed on sales in which holiday has been transferred. Hence parameters of holiday can be ignored","f4a0a34b":"A4: Analysis of onpromotion of individual family w.r.t sales","2a69381c":"A5: Study the effect of presence of holiday on sales","c10e8ac4":"sales vs dcoilwtico (oil price)","e53bb813":"A3: Analysis of store w.r.t. sales while considering above selected families of product","10b35510":"# Merging the data into a single table","05dd0c54":"# Supervised machine learning approach to solve the prediction model","dd108694":"Observation: After exploring the family of product data w.r.t sale in terms of year, month and weeks, it is observed that 18 product families produces almost '0' sales from total 33 families. The usage of such data may hamper the accuracy of model.\n\nHence the observation extracted the 15 families which are mentioned below:\n\n'BEVERAGES','BREAD\/BAKERY,'CLEANING', 'DAIRY', 'DELI', 'EGGS','FROZEN FOODS', 'GROCERY I','HOME CARE','LIQUOR,WINE,BEER','MEATS', 'PERSONAL CARE', 'POULTRY', 'PREPARED FOODS', 'PRODUCE'","3ecd21ed":"# Extracting important features to train the prediction model","caea8861":"Observation: The abrupt change in price of oil and sale is observed at the end of each year, specifically between the 10-12 month. Moreover, price of oil and sale are negative correlated and hence 'dcoilwtico' is observed to be an important parameter for modelling.\n\n\nSales vs family of product analysis to know which product provides maximum business","dacc5296":"Observation: Almost every stores seems to have stationary sales with reference to year, months and week. Hence all the stores will be considered for further analysis","44162bb3":"Observation: Onpromotion parameter is highly correlated with sales also this can be observed with above graphs w.r.t. year, month and week.","399e5c92":"Features to be considered: 'date', 'year','month', 'week', 'sales', 'dcoilwtico', 'family', 'onpromotion'","88ad40cb":"# Analysis of each column w.r.t sales"}}