{"cell_type":{"cc29f853":"code","5841437c":"code","cac77405":"code","e5a6bd77":"code","ae92d47c":"code","aea64bcc":"code","f675f1b5":"code","32e266f0":"code","d3cc8a22":"code","08baf2df":"code","986addff":"code","315c5338":"code","ee871bfe":"code","9705b3ea":"code","d8158c77":"code","2ca6b6ad":"code","a10b497b":"code","2edd00df":"code","5058cbe4":"code","bcc268fa":"code","9720f636":"code","e9e93209":"code","8b69c6f0":"code","cdea5336":"code","9b590d9a":"markdown","e8847dd7":"markdown","521c6e8f":"markdown","4b7ee2ac":"markdown","d839dadf":"markdown","f0cbab70":"markdown"},"source":{"cc29f853":"import pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import r2_score, accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split","5841437c":"!ls ..\/input\/red-wine-quality-cortez-et-al-2009","cac77405":"data = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndata = pd.DataFrame(data)","e5a6bd77":"data","ae92d47c":"data.isnull().sum()","aea64bcc":"data.head()","f675f1b5":"data.tail()","32e266f0":"data.shape","d3cc8a22":"data.describe()","08baf2df":"data.info()","986addff":"data['quality'].value_counts()","315c5338":"cor=data.corr()\ncor","ee871bfe":"plt.subplots(figsize=(12,6))\nsns.heatmap(cor, annot=True)","9705b3ea":"sns.pairplot(data=data)","d8158c77":"cor['quality'].sort_values(ascending=False)","2ca6b6ad":"y=data.iloc[:,-1]\ny","a10b497b":"#Taking only positive values from correlation  \nx=['alcohol','sulphates','citric acid','fixed acidity','residual sugar']\nx=data[x]\nx","2edd00df":"col = ['alcohol','sulphates','citric acid','fixed acidity','residual sugar']","5058cbe4":"from sklearn.preprocessing import StandardScaler\nsc= StandardScaler()\nx = sc.fit_transform(x)\nx = pd.DataFrame(data=x, columns=col)\nx","bcc268fa":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.20, random_state=0)","9720f636":"cla=KNeighborsClassifier(n_neighbors=6)\ncla.fit(xtrain, ytrain)\nytrain_predict=cla.predict(xtrain)\naccuracy_score(ytrain, ytrain_predict)","e9e93209":"ytest_predict=cla.predict(xtest)\naccuracy_score(ytest, ytest_predict)","8b69c6f0":"import xgboost as xgb\nmodel = xgb.XGBClassifier(random_state=1)\nmodel.fit(xtrain, ytrain)\ny_pred = model.predict(xtest)\nprint(accuracy_score(ytest, y_pred))","cdea5336":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(random_state=0)\nmodel.fit(xtrain, ytrain)\npre = model.predict(xtest)\nprint(accuracy_score(ytest, pre))","9b590d9a":"# Uploading Dataset","e8847dd7":"# Importing Libraries","521c6e8f":"# Data Visualization","4b7ee2ac":"# Data Preprocessing","d839dadf":"# Splitting in Training and Testing Data","f0cbab70":"# Applying Model and Making Predictions"}}