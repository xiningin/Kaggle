{"cell_type":{"5080a46b":"code","91411165":"code","63edc613":"code","fb5c2d02":"markdown"},"source":{"5080a46b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","91411165":"import pandas as pd\nfrom datetime import datetime\n\ndata = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\n\ndata = data[['App', 'Last Updated']]\n#removing broken row -> 1.0.19\ndata.drop([10472], inplace = True)\n#converting to timestamp\ndata['Last Updated'] = pd.to_datetime(data['Last Updated'], format= '%B %d, %Y')","63edc613":"\ncurr_date = data['Last Updated'].max()\n\n#returns the oldest date\noldest_date = data['Last Updated'].min()\n\n#assuming there might be more than 1 row\nprint(data[data['Last Updated'] == oldest_date])\n","fb5c2d02":"We are looking for app that hasn't been updated for ***longest time***. We can get the most recent app date and compare to oldest date\nIf dates are matching than all apps are updated.\n\noutof task:\nWhile there is chance that all apps might be outdated, in this case we can use dataset creation time stamp as current date."}}