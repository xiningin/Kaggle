{"cell_type":{"efd6e0fb":"code","ec750812":"code","e40ac6a6":"code","694d6966":"code","48467a21":"code","1361d8a0":"code","f38bf68f":"code","0b9a7c28":"code","607ebce9":"code","4b3521fa":"code","119f47c6":"code","8baee48f":"code","c4f35fca":"code","3b67fb07":"code","fd9650a5":"code","6e7c6977":"code","280616f2":"code","cdf08578":"code","15195ee1":"code","caf18339":"code","3e4ec61c":"code","edd18c9b":"code","2dc78db5":"code","f9f9cca5":"code","72bc944b":"code","4f278d5a":"code","354b9224":"code","ecaa17f3":"code","15621be8":"code","39ebf801":"markdown","0759ac99":"markdown","3878777f":"markdown","20bff53a":"markdown","57c5f0a3":"markdown","bc08f723":"markdown","2ec560cb":"markdown","9ce99775":"markdown","687ded5f":"markdown","1d897b35":"markdown","561069fc":"markdown","b638b62a":"markdown","9b7c8e62":"markdown","a48af079":"markdown","d4616f47":"markdown","36f95dc6":"markdown","df16125b":"markdown","25b5dd7c":"markdown","764494f7":"markdown","6a26b41b":"markdown","484c2d16":"markdown"},"source":{"efd6e0fb":"#Genel komutlar\n\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom pandas import read_csv\n#RMSE ile tahmin hatalar\u0131m\u0131 belirlemek i\u00e7in sqrt \u00e7a\u011f\u0131rd\u0131m.(evaluate forecast)\nfrom math import sqrt\nfrom sklearn.metrics import mean_squared_error\n#Verisetini ay\u0131klamak i\u00e7in \u00e7a\u011f\u0131rd\u0131m\nfrom numpy import split\nfrom numpy import array\n\n\n\npath = \"..\/input\/solar-radiation-dataset\/2017_2019.csv\"\ndf = pd.read_csv(path)\n\n\nprint(df)","ec750812":"df.info()","e40ac6a6":"df.tail(5)","694d6966":"df=df.drop(['Unnamed: 18'], axis = 1) ","48467a21":"cols = [\"Year\",\"Month\",\"Day\",\"Hour\",\"Minute\"]\ndf[\"date_time\"] = df[cols].apply(lambda row: \"-\".join(row.values.astype(str)), axis=1)\n","1361d8a0":"df['date_time'] = pd.to_datetime(df['date_time'], format='%Y-%m-%d-%H-%M')","f38bf68f":"df=df.drop([\"Year\",\"Month\",\"Day\",\"Hour\",\"Minute\",\"Clearsky DHI\",\"Clearsky DNI\",\"Clearsky GHI\",\"DHI\" ,\"DNI\" ],axis = 1)","0b9a7c28":"#df.reset_index() # S\u0131f\u0131rlamak i\u00e7n\n#df.assign(State=df.index.get_level_values('State'))#\u0130ndexi column yapmak i\u00e7in\ndf=df.set_index('date_time') #Columnu index yapmak i\u00e7in","607ebce9":"df.index.max()","4b3521fa":"import matplotlib.pyplot as plt\n\nlarge = 22; med = 16; small = 12\nparams = {'axes.titlesize': large,\n          'legend.fontsize': med,\n          'figure.figsize': (16, 10),\n          'axes.labelsize': med,\n          'axes.titlesize': med,\n          'xtick.labelsize': med,\n          'ytick.labelsize': med,\n          'figure.titlesize': large}\nplt.rcParams.update(params)\nplt.style.use('seaborn-whitegrid')","119f47c6":"plt.plot(df[\"Solar Zenith Angle\"])","8baee48f":"plt.plot(df[\"GHI\"])","c4f35fca":"df['GHI'][\"2017-01-01\":\"2017-01-15\"].plot(figsize=(16,4))","3b67fb07":"df[\"Temperature\"].plot(figsize=(16,5))\ndf.rolling(window=60).mean()[\"Temperature\"].plot();","fd9650a5":"from matplotlib import dates","6e7c6977":"!pip install --quiet optuna","280616f2":"import numpy as np \nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport re\nimport optuna \nimport xgboost as xgb\n\nfrom sklearn.metrics import r2_score  \n","cdf08578":"y = df[\"GHI\"].copy()\nX = df.drop(\"GHI\",axis=1).copy()","15195ee1":"scaler = StandardScaler()\n\nX=scaler.fit_transform(X)","caf18339":"pd.DataFrame(X)","3e4ec61c":"X_train,X_test,y_train,y_test = train_test_split(X,y, train_size=0.8,random_state=100)\nX_train,X_val,y_train,y_val = train_test_split(X_train,y_train, train_size=0.8,random_state=200)","edd18c9b":"print(X_train.shape[0])\nprint(X_val.shape[0])\nprint(X_test.shape[0])","2dc78db5":"dtrain =xgb.DMatrix(X_train,label=y_train)\ndval =xgb.DMatrix(X_val,label=y_val)\ndtest =xgb.DMatrix(X_test,label=y_test)","f9f9cca5":"def get_model_rmse(params):\n  model =xgb.train(params,dtrain,num_boost_round=100,evals=[(dval,\"eval\")],early_stopping_rounds=10,verbose_eval=0)\n  results = model.eval(dval)\n  rmse = np.float(re.search(r'[\\d.]+$', results).group(0))\n  return rmse\n\n","72bc944b":"def objective(trial):\n  learning_rate=trial.suggest_loguniform(\"learning_rate\",0.001,1) #k\u00fc\u00e7\u00fck de\u011ferlerde rastgele arama yapmas\u0131 i\u00e7in loguniformla yaz\u0131lm\u0131\u015ft\u0131r.\n  max_depth=trial.suggest_int(\"max_depth\",6,10)\n  l1_reg=trial.suggest_loguniform(\"l1_reg\",0.000001,0.01)\n  l2_reg=trial.suggest_loguniform(\"l2_reg\",0.000001,0.01)\n\n  params = {\"learning_rate\":learning_rate,\"max_depth\":max_depth,\"l1_reg\":l1_reg,\"l2_reg\":l2_reg}\n  return get_model_rmse(params)","4f278d5a":"hiperparametre_arama=optuna.create_study()\nhiperparametre_arama.optimize(objective,n_trials=100,show_progress_bar=True)","354b9224":"best_params = hiperparametre_arama.best_params\nbest_params","ecaa17f3":"model=xgb.train(best_params,dtrain,num_boost_round=10000,evals=[(dval,\"eval\")],early_stopping_rounds=15)","15621be8":"y_true=np.array(y_test,dtype=np.float)\ny_pred=np.array(model.predict(dtest),dtype=np.float)","39ebf801":"Kullanaca\u011f\u0131m\u0131z XGB algoritmas\u0131 i\u00e7in Dmatrix fonksiyonuyla optimize hale getirelim.","0759ac99":"Date -Time Ayarlama ","3878777f":"Train Test Split\nVerisetini ayr\u0131man\u0131n en iyi yolu test train ve validation olarak 3 sete \nay\u0131rmakt\u0131r.\n*   Train setinde model e\u011fitilir .\n*   Validation sette modeller kar\u015f\u0131la\u015ft\u0131r\u0131labilir.\n*   Test sette de sonucumuz bulunur.\n\n\n\n\u00d6nce 70\/30 olarak ay\u0131ral\u0131m , veriseti b\u00fcy\u00fcd\u00fck\u00e7e  train seti b\u00fcy\u00fcterek de\u011fi\u015firiz.","20bff53a":"1.Output de\u011feri olarak GHI se\u00e7iliyor. Global Hourly Irradiance ,Direct ve Diffuse Radiance \u0131n toplan\u0131mda olu\u015fturulan radyasyon de\u011feridir.","57c5f0a3":"Haftal\u0131k\/Ayl\u0131k\/ Y\u0131ll\u0131k Kesitler","bc08f723":"# Modelin \u00d6\u011frenmesi Ve Optimizasyon ","2ec560cb":"S\u00fctun bilgisi almak \u00fczere info komutu kullan\u0131l\u0131r, eksik ve bo\u015f s\u00fctunlar d\u00fczenlenir.\nVeriseti i\u015flenecek hale getirilir.","9ce99775":"Di\u011ferlerini silme","687ded5f":"##Hiperparametre Optimizasyonu","1d897b35":"XGB nin kulland\u0131\u011f\u0131 parametreleri optimize etmek i\u00e7in birfonsiyon yazaca\u011f\u0131z . \n\u00d6\u011frenme h\u0131z\u0131 , derinli\u011fi ve reg\u00fclarizasyonlar XGB nin optimize edilmesi gereken parametreleridir.\n","561069fc":"Kullan\u0131lacak algoritmalarda en iyi parametreleri bulmak i\u00e7in optuma mod\u00fcl\u00fc y\u00fcklendi","b638b62a":"Deneme","9b7c8e62":"Ayr\u0131lan Setlerin b\u00fcy\u00fckl\u00fckleri ","a48af079":"2.\u00d6l\u00e7eklendirme ile t\u00fcm de\u011ferlerin birbirleriyle etkile\u015fimini dengelemi\u015f oluruz.","d4616f47":"Ayl\u0131k Ortalama de\u011ferler","36f95dc6":"#VeriSetini Haz\u0131rlamak\n\n\n\n\n\n\n\n\n\n\n\n1.  Input ve Output de\u011ferlerini belirlemek\n2.  Train \/ Test setini  ay\u0131rmak\n1.  Verisetini \u00d6l\u00e7eklendirmek\n2.   \n\n\n \n\n\n\n","df16125b":"\n\n*   Ay ,y\u0131l ve saat de\u011ferleri i\u015flenebilecek formatta.Bu haz\u0131rlama i\u015flemini kolayla\u015ft\u0131racakt\u0131r.\n*  Verisetinde tek yap\u0131lmas\u0131 gereken De\u011fersiz s\u00fctunu \u00e7\u0131karmak olacakt\u0131r.\n\n\n\n","25b5dd7c":"## Data Extraction and Prerocessing\n","764494f7":"Zaman\u0131 \u0130ndex haline getirmek","6a26b41b":"Visualisation","484c2d16":"# Model E\u011fitimi"}}