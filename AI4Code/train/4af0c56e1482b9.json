{"cell_type":{"848631c8":"code","c3043617":"code","5bdd66cf":"code","64680f30":"code","ecc57e5d":"code","cc71a690":"code","bb961e07":"code","d33a868d":"code","2ccec189":"code","652fd019":"code","e8a6310c":"code","9f7155be":"code","6ad0f3f0":"code","3708ff08":"code","0ba452e0":"code","9eedbdb7":"code","72a54d02":"code","960e5bec":"code","d3111208":"code","4f46a885":"code","5ddf7ab2":"code","ec64a451":"code","082edb62":"code","93c9415d":"code","c086109a":"code","8531e16e":"code","49353262":"code","d6a41bc5":"code","94c03a02":"code","97a13c42":"code","aaf5277f":"code","abee5c38":"code","8a5ce2e4":"code","10e4b95c":"code","e3991c19":"code","5b0c6d47":"code","99f66333":"markdown","614317e4":"markdown","d7267a47":"markdown","7ce51547":"markdown","11873c26":"markdown","6f41e74b":"markdown","24bf78de":"markdown","40567cba":"markdown","4e28f1cd":"markdown","f3747f08":"markdown","134bf4ce":"markdown","475e37d3":"markdown","ad87b148":"markdown","1a5db1ee":"markdown","aca5ff71":"markdown","2b7f78c4":"markdown","0a82836a":"markdown"},"source":{"848631c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns # data visualization\nimport matplotlib.pyplot as plt # data visualization\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3043617":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n#train_data.head()\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nprint(train_data.columns.values)\n","5bdd66cf":"kat_df = train_data.select_dtypes(include = \"object\")\nkat_df.info()","64680f30":"df.cut = train_data.Pclass.astype(CategoricalDtype(ordered = True))","ecc57e5d":"sns.distplot(train_data.Fare, bins = 10, kde = True);","cc71a690":"\ntrain_data[\"Embarked\"].value_counts().plot.barh();","bb961e07":"train_data[\"Cabin\"].value_counts().plot.bar();","d33a868d":"sns.scatterplot(x = \"Sex\", y = \"Survived\",hue=\"Pclass\",data = train_data);\n\n","2ccec189":"train_data.isnull().all()\ntrain_data.isnull().values.any()","652fd019":"train_data.head(10)","e8a6310c":"train_data.tail(10)","9f7155be":"train_data.info()","6ad0f3f0":"# converting data type of variables Cabin and Embarked from objects to categorical\ntrain_data.Cabin = pd.Categorical(train_data.Cabin)\ntrain_data.Embarked= pd.Categorical(train_data.Embarked)\n# showing the data information \ntrain_data.info() \n\n","3708ff08":"train_data.describe()","0ba452e0":"train_data.describe().T","9eedbdb7":"train_data[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n#train_data[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","72a54d02":"train_data[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","960e5bec":"train_data[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)","d3111208":"train_data[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)","4f46a885":"train_data[[\"Embarked\", \"Survived\"]].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","5ddf7ab2":"#mean of the Fare values for different Pclasses\nprint(train_data[['Pclass', 'Fare']].groupby(['Pclass'],as_index=False).mean().sort_values(by='Fare', ascending=False))","ec64a451":"# Relationship between Fare and PClass\nplt.scatter(train_data['Fare'],train_data['Pclass'])\n\n# Display the plot with plt.show()\nplt.show()","082edb62":"#sns.distplot(df['SL'],bins=50)\n#sns.distplot(train_data,bins=50)\n\nsns.distplot(train_data['Age'],hist=False)","93c9415d":"#grid = sns.FacetGrid(train_data, col=\"Survived\", margin_titles=True)\n#grid.map(sns.histplot, \"\")\n#g = sns.FacetGrid(train_data, col=\"Survived\")\n#g.map_dataframe(sns.histplot, x=\"Age\")\n#g.set_axis_labels(\"Age\", \"Count\")\n\n#g = sns.FacetGrid(train_data, col=\"Survived\")\n#g.map_dataframe(sns., x=\"Age\")\n\n#sns.distplot(train_data, x=\"Age\", col=\"Survived\") \n\ngrid = sns.FacetGrid(train_data,col=\"Survived\", margin_titles=True)\ngrid.map(plt.hist, \"Age\", bins=np.linspace(0, 5, 15));\n\n","c086109a":"grid = sns.FacetGrid(train_data,col=\"Survived\", margin_titles=True)\ngrid.map(plt.hist, \"Age\", bins=np.linspace(5, 10, 15));\n","8531e16e":"grid = sns.FacetGrid(train_data,col=\"Survived\", margin_titles=True)\ngrid.map(plt.hist, \"Age\", bins=np.linspace(10, 40, 15));\n","49353262":"grid = sns.FacetGrid(train_data,col=\"Survived\", margin_titles=True)\ngrid.map(plt.hist, \"Age\", bins=np.linspace(50, 80, 15));\n","d6a41bc5":"grid = sns.FacetGrid(train_data,col=\"Survived\", margin_titles=True)\ngrid.map(plt.hist, \"Embarked\");","94c03a02":"train_data[[\"Embarked\", \"Survived\"]].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","97a13c42":"train_data[[\"Embarked\", \"Survived\"]].groupby(['Embarked'], as_index=False).count().sort_values(by='Survived', ascending=False)","aaf5277f":"ax = sns.swarmplot(x=\"Survived\", y=\"Embarked\",data=train_data) ","abee5c38":"'''import seaborn as sns\ng = sns.FacetGrid(train_data, row='Embarked', col='Pclass')\ng.map(plt.scatter, \"Embarked\", \"Survived\")\ng.add_legend()'''","8a5ce2e4":"'''import matplotlib.pyplot as plt\nimport pandas as pd\n\n# a scatter plot comparing Age and Survival Relation\ntrain_data.plot(kind='box',x='Pclass',y='Age',color='red')\nplt.show()'''\n","10e4b95c":"g = sns.FacetGrid(train_data, col=\"Survived\", hue=\"Pclass\")\ng.map_dataframe(sns.scatterplot, x=\"Embarked\", y=\"Pclass\")\ng.set_axis_labels(\"Embarked\", \"\")\ng.add_legend()","e3991c19":"#sns.pairplot(train_data[['Age', 'Survived', 'Pclass']])\n","5b0c6d47":"ax = sns.swarmplot(x=\"Survived\", y=\"Age\",data=train_data)","99f66333":"Pclass is positively correlated with Fare as expected.","614317e4":"One Sibling or Spouse has the highest chance of survival.Afterwards Sibsp is negatively correlated with Survival.","d7267a47":"All Classes have 0-100 Price Range. After 100 it is just for the first Class. The question is if people at first class with Ticket Price <100 has also a high survival rate.If no then maybe a new feature could be created which isa combination of ticket price and Pclass. The same could be maybe analyzed for Class 2 and 3.","7ce51547":"Up to Age 5 (Except 2) there is higher Survival chance.","11873c26":"AS suspected from the table above there are high rate of young people . (20-40)","6f41e74b":"\nExcept Age 8O lower Survived chance. The question s how to use age as a feature? Dividing it maybe","24bf78de":"Female have higher survival rate. Sex can be used as a feature.","40567cba":"converting to category is not necessary but sometimes with some functions object creates problem ( recognize it as string ) so I  therefore  it is better to change the data type of categorical variables from object to Category. (According to info from the tutorials )","4e28f1cd":"Between age  (10-40) lower Survival Chance","f3747f08":"Except Age 7 lower survival chance","134bf4ce":"Mean and median of Age Variable are close.It seems that the distribution is symmetrical.\n\nMean is 29 for Age and Medien is 28.Probably young people has the highest ratio. Mean and medien of SibSp and Parch are different. So it seems like the distribution is not symmetrical. It also seems I like many people are either alone or has another person. (Child,sibling,spouse,parent)","475e37d3":"confusion at embarked","ad87b148":"Similar trend with Sibsp ","1a5db1ee":"It seems like Pclass has a negative correlation with survival rate.PClass can be used as a feature.","aca5ff71":"For variable Age 177 missing Value\nFor variable Cabin 687 missing Value \nFor variable Embarked 2 missing Value ","2b7f78c4":"Similar with the pattern above. Maybe considering age as a categorical feature. For example Age 0-5 Categorie 1, Age 10-40 Categorie 2, Age 40-80 Categorie 3. Survival Rate 1> 3> 2","0a82836a":"Sibsp :Siblings or Spouse Number\nParch : Number of Children, Parent\nFare: Ticket Fee\nEmbarked : Embarked Part (c= Cherborg(France), Q = Queenstown (Ireland) , S=Southampton(UK), Southampton (UK))"}}