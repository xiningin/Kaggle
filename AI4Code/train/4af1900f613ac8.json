{"cell_type":{"72635f7b":"code","7051310d":"code","f9ca0bcd":"code","1042ce6e":"code","237ce7e0":"code","87ad26d3":"code","2f0cc466":"code","6e4fb204":"code","dd3485d1":"code","fd4d6421":"code","3d3cad53":"code","649c43e8":"code","35b41f16":"code","39705cb4":"markdown","3dac6dab":"markdown"},"source":{"72635f7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7051310d":"import numpy as np\n%matplotlib inline\nimport matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\nimport tensorflow as tf","f9ca0bcd":"plt.figure(figsize=(12, 5))\nsp = plt.subplot(2, 5, 1)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/clean\/30.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 2)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/clean\/24.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 3)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/clean\/32.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 4)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/clean\/21.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 5)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/clean\/89.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 6)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/messy\/2.png\")\nplt.imshow(img)\nsp = plt.subplot(2, 5, 7)\nsp.axis('Off')\nimg = mpimg.imread(\"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/messy\/89.png\")\nplt.imshow(img)\n","1042ce6e":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n#train and test directories\ntrain_dir = \"\/kaggle\/input\/messy-vs-clean-room\/images\/train\/\"\nvalidation_dir = \"\/kaggle\/input\/messy-vs-clean-room\/images\/val\/\"\n\n\n# All images will be rescaled by 1.\/255.\ntrain_datagen = ImageDataGenerator( rescale = 1.0\/255. )\ntest_datagen  = ImageDataGenerator( rescale = 1.0\/255. )","237ce7e0":"# --------------------\n# Flow training images in batches of 20 using train_datagen generator & test_datagen\n# --------------------\ntrain_generator = train_datagen.flow_from_directory(train_dir, batch_size=20, class_mode='binary', target_size=(150,150))\n\nvalidation_generator = test_datagen.flow_from_directory(validation_dir, batch_size=20, class_mode= 'binary',target_size = (150, 150))","87ad26d3":"from tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D,Flatten,Dropout\n\nmodel = tf.keras.models.Sequential([\n    #input shape is the desired size of the image 150x150 with 3 bytes color\n    Conv2D(16, (3,3), activation='relu',input_shape=(150,150,3)),\n    MaxPooling2D(pool_size=(2, 2)),\n    Conv2D(32, (3,3), activation='relu'),\n    MaxPooling2D(pool_size=(2, 2)),\n    Conv2D(64, (3,3), activation='relu'), \n    MaxPooling2D(2,2),\n    Flatten(),\n    Dense(512, activation='relu'), \n    Dropout(rate=0.2),\n    Dense(200, activation='relu'),\n    Dropout(0.1),\n    Dense(1, activation='sigmoid')  \n    #output : clean(0or1) , messy (1or0)\n])","2f0cc466":"model.summary()","6e4fb204":"from tensorflow import keras\nkeras.utils.plot_model(model)","dd3485d1":"from tensorflow.keras.optimizers import RMSprop\nfrom tensorflow.keras.callbacks import EarlyStopping\nmonitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, patience=5, \n                        verbose=1, mode='auto',restore_best_weights=True)\nmodel.compile(optimizer='adam',\n              loss='binary_crossentropy',\n              metrics = ['acc'])","fd4d6421":"history = model.fit(train_generator,\n                              validation_data=validation_generator,\n                              steps_per_epoch=100,epochs=5,\n                              validation_steps=50,\n                              verbose=2, callbacks=[monitor])","3d3cad53":"# test path: \/kaggle\/input\/messy-vs-clean-room\/images\/images\/test\/\ntest2_datagen = ImageDataGenerator( rescale = 1.0\/255. )\ntest_dir = '\/kaggle\/input\/messy-vs-clean-room\/images\/images\/val\/'\ntest_generator =  test2_datagen.flow_from_directory(test_dir,\n                                                    batch_size=6,\n                                                    class_mode  = None,\n                                                    target_size = (150, 150),\n                                                    shuffle=False)","649c43e8":"y_prob = model.predict_generator(test_generator,callbacks=[monitor])\ny_prob\ny_pred = [\"R\" if probs > 0.5 else \"O\" for probs in y_prob]\ny_pred","35b41f16":"for dirname, _, filenames in os.walk('\/kaggle\/input\/messy-vs-clean-room\/images\/images\/val\/'):\n    images=[]\n    for filename in filenames:\n        img_path = os.path.join(dirname, filename)\n        #print(img_path)\n        images.append(mpimg.imread(img_path))\n        \n\nplt.figure(figsize=(20,10))\ncolumns = 5\nfor i, image in enumerate(images):\n    plt.subplot(len(images) \/ columns + 1, columns, i + 1)\n    plt.imshow(image)\n        ","39705cb4":"Summary of the model.**","3dac6dab":"Building the model. \n"}}