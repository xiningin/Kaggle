{"cell_type":{"faaf2ecc":"code","5d83056b":"code","b8c2c3ac":"code","a90d914f":"code","bb5f5f06":"code","21c16644":"code","d0f0fc96":"code","caa58c96":"code","1d3aa046":"code","67e387cb":"code","96de3fc8":"code","a34cb11d":"code","95975644":"code","8f3b0327":"code","5d2bfa1f":"code","092a310f":"code","0edd0c1c":"code","6ca175e8":"code","fe8a06ad":"code","d28bd2cc":"code","67e805ba":"markdown"},"source":{"faaf2ecc":"import numpy as np \nimport pandas as pd \nimport seaborn as sb\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nsb.set(style=\"whitegrid\")\n\nimport warnings\nwarnings.filterwarnings('ignore')","5d83056b":"training = pd.read_csv('..\/input\/train.csv')\ntesting = pd.read_csv('..\/input\/test.csv')","b8c2c3ac":"training.head()","a90d914f":"training.describe()","bb5f5f06":"def null_table(training, testing):\n    print(\"Training Data Frame\")\n    print(pd.isnull(training).sum()) \n    print(\" \")\n    print(\"Testing Data Frame\")\n    print(pd.isnull(testing).sum())\n\nnull_table(training, testing)","21c16644":"training.drop(labels = ['Cabin', 'Ticket'], axis = 1, inplace = True)\ntesting.drop(labels = ['Cabin', 'Ticket'], axis = 1, inplace = True)\n\nnull_table(training, testing)","d0f0fc96":"copy = training.copy()\ncopy.dropna(inplace = True)\nsb.distplot(copy[\"Age\"])","caa58c96":"#the median will be an acceptable value to place in the NaN cells\ntraining['Age'].fillna(training['Age'].median(), inplace = True)\ntesting[\"Age\"].fillna(testing[\"Age\"].median(), inplace = True) \ntraining[\"Embarked\"].fillna(\"S\", inplace = True)\ntesting[\"Fare\"].fillna(testing[\"Fare\"].median(), inplace = True)\n\nnull_table(training, testing)","1d3aa046":"training.loc[training[\"Sex\"] == \"male\", \"Sex\"] = 0\ntraining.loc[training[\"Sex\"] == \"female\", \"Sex\"] = 1\n\ntraining.loc[training[\"Embarked\"] == \"S\", \"Embarked\"] = 0\ntraining.loc[training[\"Embarked\"] == \"C\", \"Embarked\"] = 1\ntraining.loc[training[\"Embarked\"] == \"Q\", \"Embarked\"] = 2\n\ntesting.loc[testing[\"Sex\"] == \"male\", \"Sex\"] = 0\ntesting.loc[testing[\"Sex\"] == \"female\", \"Sex\"] = 1\n\ntesting.loc[testing[\"Embarked\"] == \"S\", \"Embarked\"] = 0\ntesting.loc[testing[\"Embarked\"] == \"C\", \"Embarked\"] = 1\ntesting.loc[testing[\"Embarked\"] == \"Q\", \"Embarked\"] = 2","67e387cb":"training.sample(5)","96de3fc8":"training[\"FamSize\"] = training[\"SibSp\"] + training[\"Parch\"] + 1\ntesting[\"FamSize\"] = testing[\"SibSp\"] + testing[\"Parch\"] + 1\n\ntraining[\"IsAlone\"] = training.FamSize.apply(lambda x: 1 if x == 1 else 0)\ntesting[\"IsAlone\"] = testing.FamSize.apply(lambda x: 1 if x == 1 else 0)","a34cb11d":"training.sample(5)\n","95975644":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import make_scorer, accuracy_score\nfrom sklearn.model_selection import GridSearchCV","8f3b0327":"features = [\"Pclass\", \"Sex\", \"Age\", \"Embarked\", \"Fare\", \"FamSize\", \"IsAlone\"]\nX_train = training[features] #define training features set\ny_train = training[\"Survived\"] #define training label set\nX_test = testing[features] #define testing features set\n#we don't have y_test, that is what we're trying to predict with our model","5d2bfa1f":"from sklearn.model_selection import train_test_split #to create validation data set\n\nX_training, X_valid, y_training, y_valid = train_test_split(X_train, y_train, test_size=0.2,\n                                                            random_state=0)\n#X_valid and y_valid are the validation sets\n","092a310f":"rf_clf = RandomForestClassifier()\nrf_clf.fit(X_training, y_training)\npred_rf = rf_clf.predict(X_valid)\nacc_rf = accuracy_score(y_valid, pred_rf)\n\nprint(acc_rf)","0edd0c1c":"submission_predictions = rf_clf.predict(X_test)","6ca175e8":"submission = pd.DataFrame({\n        \"PassengerId\": testing[\"PassengerId\"],\n        \"Survived\": submission_predictions\n    })\n\nsubmission.to_csv(\"titanic.csv\", index=False)\nprint(submission.shape)","fe8a06ad":"submission","d28bd2cc":"submission.to_csv('C:\\Users\\Ashavd\\Downloads')","67e805ba":"**submission\n******"}}