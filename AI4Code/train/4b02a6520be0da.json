{"cell_type":{"05e4c5d2":"code","dc3e97e5":"code","e6f856f5":"code","e5951b56":"code","48861823":"code","e8326d61":"code","ca5b6f1e":"code","034bbf0a":"code","13654225":"code","7201b65b":"code","de2f8e34":"code","95eb1397":"code","a1ed0810":"code","098611d6":"code","b6abc42e":"code","3dceffb8":"code","85c0ff3a":"code","15d3db83":"code","b83baed4":"code","9074088d":"code","b0edb9bd":"code","30ae3ced":"code","8589dac0":"code","a334b070":"code","eb608599":"code","6956f815":"markdown","eb039965":"markdown","25412270":"markdown","0f57e895":"markdown","405e1654":"markdown","1c943f5f":"markdown","44044f68":"markdown"},"source":{"05e4c5d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# To take care of warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the pd.readinput directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dc3e97e5":"data = pd.read_csv(\"..\/input\/data.csv\", encoding = \"ISO-8859-1\")\ndata.head()","e6f856f5":"state_replace_dict = {\n    'state' : {\n        r'Uttaranchal': 'Uttarakhand',\n    }\n}","e5951b56":"data.replace(state_replace_dict,regex=True, inplace=True)\ndata['state'].unique()","48861823":"# To check null values we can use heatmap\nsns.heatmap(data.isnull(),yticklabels=False,cbar=False, cmap='viridis')","e8326d61":"data['type'].unique()","ca5b6f1e":"data.info()","034bbf0a":"# As stn_code and agency are having so many null values and sampling date is also not that \n# useful as we are having date field. And, as pm2_5 is one of the most important field in this dataset but it is having \n# so many null values, so has to remove it.\n# So, we can remove these columns.\ndata.drop(['stn_code','agency','sampling_date','pm2_5','location_monitoring_station'], inplace = True, axis=1)\ndata.head()","13654225":"# Now we will work on missing values, i.e NaN values.\nfrom sklearn.impute import SimpleImputer\n\n# For so2 and no2 we are taking median of all values by state.\ndata['so2'] = data.groupby('state')['so2'].transform(lambda x: x.fillna(x.median()))\ndata['no2'] = data.groupby('state')['no2'].transform(lambda x: x.fillna(x.median()))","7201b65b":"# For rspm and spm we are taking mean of all values.\nimputer = SimpleImputer(missing_values = np.nan, strategy = 'mean')\nimputer = imputer.fit(data.iloc[:,5:7].values)\n#imputer = imputer.fit(X[['Age', 'Salary']])\ndata.iloc[:,5:7] = imputer.transform(data.iloc[:,5:7].values)\ndata.info()","de2f8e34":"# Now for 'type'\n# 'type' is having very few missing values so we can fill the nan values\n# with most common occuring,i.e, Residential, Rural and other Areas.\n\ndata['type'] = data['type'].fillna('Residential, Rural and other Areas')\ndata.info()","95eb1397":"data.head()","a1ed0810":"# Adding new column for year.\ndata['date'] = pd.to_datetime(data['date'])\ndata['year'] = data['date'].dt.year\ndata.head()","098611d6":"import matplotlib.pyplot as plt\n#import plotly.express as px\nplt.rcParams['figure.figsize'] = (10, 5)\n\n# SO2 Trend in India by year\nsns.lineplot(x='year', y='so2', data=data).set_title(\"SO2 Trend in India by year\")\n","b6abc42e":"# NO2 Trend in India by year\nsns.lineplot(x='year', y='no2', data=data).set_title(\"NO2 Trend in India by year\")","3dceffb8":"# RSPM Trend in India by year\nsns.lineplot(x='year', y='rspm', data=data).set_title(\"RSPM Trend in India by year\")","85c0ff3a":"# SPM Trend in India by year\nsns.lineplot(x='year', y='spm', data=data).set_title(\"SPM Trend in India by year\")","15d3db83":"pollutant_statewise = data.groupby('state').mean()[['so2', 'no2', 'rspm', 'spm']]\npollutant_statewise.head()\n","b83baed4":"# For NO2\nNO2_statewise = pollutant_statewise.sort_values(by = 'no2', ascending=False)\nNO2_statewise_Top10 = NO2_statewise['no2'].head(10)\nNO2_statewise_Bottom10 = NO2_statewise['no2'].tail(10)\nNO2_statewise_Top10.plot.bar(color='m')\nplt.show()\nNO2_statewise_Bottom10.plot.bar(color='b')\nplt.show()","9074088d":"# For SO2\nNO2_statewise = pollutant_statewise.sort_values(by = 'so2', ascending=False)\nNO2_statewise_Top10 = NO2_statewise['so2'].head(10)\nNO2_statewise_Bottom10 = NO2_statewise['so2'].tail(10)\nNO2_statewise_Top10.plot.bar(color='m')\nplt.show()\nNO2_statewise_Bottom10.plot.bar(color='b')\nplt.show()","b0edb9bd":"# For RSPM\nNO2_statewise = pollutant_statewise.sort_values(by = 'rspm', ascending=False)\nNO2_statewise_Top10 = NO2_statewise['rspm'].head(10)\nNO2_statewise_Bottom10 = NO2_statewise['rspm'].tail(10)\nNO2_statewise_Top10.plot.bar(color='m')\nplt.show()\nNO2_statewise_Bottom10.plot.bar(color='b')\nplt.show()","30ae3ced":"# For SPM\nNO2_statewise = pollutant_statewise.sort_values(by = 'spm', ascending=False)\nNO2_statewise_Top10 = NO2_statewise['spm'].head(10)\nNO2_statewise_Bottom10 = NO2_statewise['spm'].tail(10)\nNO2_statewise_Top10.plot.bar(color='m')\nplt.show()\nNO2_statewise_Bottom10.plot.bar(color='m')\nplt.show()","8589dac0":"fig, axes = plt.subplots(nrows=2, ncols=2,figsize=(30,14))\nax = sns.barplot(\"so2\", y=\"type\",\n                 data=data,\n                 ax=axes[0,0]\n                )\nax = sns.barplot(\"no2\", y=\"type\",\n                 data=data,\n                 ax=axes[0,1]\n                )\nax = sns.barplot(\"rspm\", y=\"type\",\n                 data=data,\n                 ax=axes[1,0]\n                )\nax = sns.barplot(\"spm\", y=\"type\",\n                 data=data,\n                 ax=axes[1,1]\n                )","a334b070":"# For SO2\nf, ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.pivot_table('so2', index='state', columns=['year'],aggfunc='median',margins=True),\n           annot=True,cmap=\"YlGnBu\").set_title('SO2 for Year and State')","eb608599":"# For NO2\nf, ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.pivot_table('no2', index='state', columns=['year'],aggfunc='median',margins=True),\n           annot=True,cmap=\"YlGnBu\").set_title('NO2 for Year and State')","6956f815":"From above analysis we can observe year by year increase in pollution for each state.\nDelhi having large numbers for NO2 but very low for SO2, which tells us that main reason for pollution in our capital is road traffic and fossil fuels combustion.","eb039965":"We can observe considerable sudden increase in the concentration of RSPM and NO2 from year 2003 to 2004.\nBut we can observe slight decrease in the concentration of all the pollutants from 2 years.","25412270":"**Analysis on the basis of year and state**","0f57e895":"From the statewise analysis we can observe that industrialization and huge amount of vehicles are giving a greater threat to our environment.\nAll the big and developed states which are having industrialization at it's boom are surrounded by these deadly pollutants, like our capital( or should I say pollution capital) Delhi, West Bengal, Haryana, Uttra Pradesh.\nOn the other side, parts of North,North-East, and some states of south are having really less amount of pollutants as these states are still very close to nature.","405e1654":"**Year wise Analysis of Pollutants**","1c943f5f":"**Statewise Analysis of Pollutant**","44044f68":"**Areawise Analysis of Pollutant**"}}