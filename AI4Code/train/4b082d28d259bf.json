{"cell_type":{"3d6877f6":"code","5cb22a40":"code","e3d87843":"code","6bf294ad":"code","023ae82d":"code","122a9f12":"code","26a0884b":"code","39cf4f5a":"code","07a20e5c":"code","365c0057":"code","e952a076":"code","5b471988":"code","9e6db473":"code","75ee10ea":"code","b84cfc73":"code","e07e29e4":"code","7871ec53":"code","0c3d03a6":"code","38e796b0":"code","34d6553c":"code","45c11eb0":"code","42bfa274":"code","b7a335ed":"code","cb566095":"markdown"},"source":{"3d6877f6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nfrom collections import Counter\n%matplotlib inline\nsns.set_style('whitegrid')\nplt.style.use('fivethirtyeight')","5cb22a40":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndf.head()","e3d87843":"df.info()","6bf294ad":"df.describe()","023ae82d":"df.shape","122a9f12":"df.isnull().sum()","26a0884b":"msno.heatmap(df)","39cf4f5a":"df.drop(['director', 'date_added', 'description'], axis=1, inplace=True)","07a20e5c":"df[df['rating'].isna()]","365c0057":"missing_nan = {\n     67: 'TV-PG',\n    2359: 'TV-14',\n    3660: 'TV-MA',\n    3736: 'TV-MA',\n    3737: 'NR',\n    3738: 'TV-MA',\n    4323: 'TV-MA'\n}\n\nfor id, rate in missing_nan.items():\n    df.iloc[id, 6] = rate\n\ndf['rating'].isna().sum()","e952a076":"df = df[df['cast'].notna()]\ndf['cast'].isna().sum()","5b471988":"Counter(df['country']).most_common(1)","9e6db473":"df['country'] = df['country'].fillna('United States')\ndf['country'].isna().sum()","75ee10ea":"df['main_country'] = df['country'].apply(lambda x: x.split(',')[0])\ndf.drop('country',axis=1, inplace=True)","b84cfc73":"df.head()","e07e29e4":"df.isnull().sum()","7871ec53":"count = df.groupby(['main_country']).count()\nmost_country = count['type'].to_frame().reset_index().sort_values(by='type', ascending=False)[:10]","0c3d03a6":"plt.figure(figsize=(15,15))\nsns.barplot(x='main_country', y='type', data=most_country)\nplt.ylabel('TV and Movies')\nplt.xlabel('Country')\nplt.show()","38e796b0":"# Extract most 10 genre from netflix\ntop_genre = [(lambda x: x)(x.strip()) for x in ','.join(df['listed_in']).split(',')]\ntop_list = list(Counter(top_genre).most_common(9))\ntotal_genre = len(top_genre)\nlabels = [(lambda x:x)(x[0]) for x in top_list]\nlabels.append('Others')\nsizes = [(lambda x:x)(x[1]) for x in top_list]\nsizes.append(total_genre - sum(sizes))","34d6553c":"# Visualizing using matplotlib\nplt.figure(figsize=(12,15))\nplt.title('Percentage of Genre', fontsize=15)\nplt.pie(sizes, labels=labels, autopct = '%1.1f%%', shadow=True)\nplt.show()","45c11eb0":"plt.figure(figsize=(12,8))\nplt.title('TV & Movie in ench decade', fontsize= 18)\nsns.set_context(\"poster\", font_scale=0.8)\nsns.histplot(df['release_year'], bins=8, kde=True)\nplt.show()","42bfa274":"# Movies vs Tv shows\n\ndf_tv = df[df['type'] == 'TV Show'].groupby('release_year').count()\ndf_movies = df[df['type'] == 'Movie'].groupby('release_year').count()","b7a335ed":"# Visualizing using matplotlib\nplt.figure(figsize=(12,8))\nsns.set_context('poster', font_scale=0.8)\nsns.lineplot(data = df_tv['show_id'], sizes=10)\nsns.lineplot(data = df_movies['show_id'])\nplt.ylabel('Count')\nplt.xlabel('Relese Year')\nplt.legend(['TV', 'Movie'], fontsize='large')\nplt.title('TV and Movies')\nplt.show()","cb566095":"## Clean Data"}}