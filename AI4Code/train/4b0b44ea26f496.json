{"cell_type":{"9252ae37":"code","910b2394":"code","7baeab43":"code","cd472f29":"code","3a0a2ca6":"code","15219f81":"code","6a813e92":"code","3bee44c9":"code","230d12e3":"code","9bbc8125":"code","4e526644":"code","b79fa7a9":"code","9de03d60":"code","342c3dea":"code","996d6865":"code","42a6205e":"code","57f49115":"code","36d8d266":"code","3e8110fb":"code","9e2dcabf":"code","4d7405e6":"code","cae3bcfa":"code","4f018c92":"code","4f09308a":"code","493c8155":"code","b41628c7":"code","05d37b92":"code","2ec99952":"code","0391c929":"code","fef609b8":"code","f10ca061":"code","bced8ad4":"markdown"},"source":{"9252ae37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","910b2394":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","7baeab43":"data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","cd472f29":"data.head()","3a0a2ca6":"data.columns","15219f81":"data.shape","6a813e92":"missing = data.isnull().sum()\nmissing = missing[missing>0]\nmissing.sort_values(inplace=True)\nplt.figure(figsize=(15,8))\nmissing.plot.bar()","3bee44c9":"sns.set(rc={'figure.figsize': (12,8)})\nsns.distplot(data['SalePrice'], kde=False, bins=20)","230d12e3":"data['SalePrice'].describe()","9bbc8125":"numeric_features = data.select_dtypes(include=[np.number])\nnumeric_features.columns","4e526644":"categorical_features = data.select_dtypes(include=[np.object])\ncategorical_features.columns","b79fa7a9":"correlation = numeric_features.corr()\nprint(correlation['SalePrice'].sort_values(ascending=False), '\\n')","9de03d60":"f, ax = plt.subplots(figsize=(14, 12))\nplt.title('Correlation of Numeric Features with Sale Price', y=1, size=16)\nsns.heatmap(correlation, square=True, vmax=0.8)","342c3dea":"k=11\ncols = correlation.nlargest(k, 'SalePrice')['SalePrice'].index\nprint(cols)\ncm = np.corrcoef(data[cols].values.T)\nf, ax = plt.subplots(figsize = (14,12))\nsns.heatmap(cm, vmax=.8,linewidths=0.01 ,square = True, annot=True, cmap = 'viridis',linecolor=\"white\", xticklabels=cols.values, annot_kws = {'size':12}, yticklabels = cols.values)\n","996d6865":"sns.scatterplot(x='GarageCars', y='SalePrice', data=data)","42a6205e":"sns.regplot(x='GarageCars', y='GarageArea', data=data, scatter=True, fit_reg = True)","57f49115":"fig, ((ax1,ax2), (ax3, ax4), (ax5,ax6)) = plt.subplots(nrows=3, ncols=2, figsize=(14,10))\nfig.tight_layout(pad=5.0)\nsns.regplot(x='OverallQual', y='SalePrice', data=data, scatter=True, fit_reg=True, ax=ax1)\nsns.regplot(x='GrLivArea', y='SalePrice', data=data, scatter=True, fit_reg=True, ax=ax2)\nsns.regplot(x='GarageArea', y='SalePrice', data=data, scatter=True, fit_reg = True, ax=ax3)\nsns.regplot(x='FullBath', y='SalePrice', data=data, scatter=True, fit_reg=True, ax=ax4)      \nsns.regplot(x='YearBuilt', y='SalePrice', data=data, scatter=True, fit_reg =True, ax=ax5)\nsns.regplot(x='WoodDeckSF', y='SalePrice', data=data, scatter=True, fit_reg = True, ax=ax6)\n      ","36d8d266":"sns.boxplot(x=data['SalePrice'])","3e8110fb":"f,ax = plt.subplots(figsize = (16, 10))\nfig = sns.boxplot(x='SaleType', y='SalePrice', data=data)\nfig.axis(ymin=0, ymax=800000)\nxt = plt.xticks(rotation=45)","9e2dcabf":"f, ax = plt.subplots(figsize = (12,8))\nfig=sns.boxplot(x='OverallQual', y='SalePrice', data=data)\nfig.axis(ymin=0, ymax=800000)","4d7405e6":"data['SalePrice'].describe()","cae3bcfa":"sns.boxplot(x=data['SalePrice'])","4f018c92":"data.shape","4f09308a":"first_quartile = data['SalePrice'].quantile(.25)\nthird_quartile = data['SalePrice'].quantile(.75)\nIQR = third_quartile - first_quartile\n","493c8155":"new_boundary = third_quartile + 3*IQR","b41628c7":"data.drop(data[data['SalePrice']>new_boundary].index, axis=0, inplace=True)","05d37b92":"data.shape","2ec99952":"cols_to_remove = ['BsmtFinSF1','LotFrontage','WoodDeckSF','2ndFlrSF','OpenPorchSF','HalfBath','LotArea','BsmtFullBath','BsmtUnfSF','BedroomAbvGr','ScreenPorch',\n                  'PoolArea','MoSold','3SsnPorch','BsmtFinSF2','BsmtHalfBath', 'MiscVal', 'Id','LowQualFinSF','YrSold', 'OverallCond','MSSubClass','EnclosedPorch',\n                  'KitchenAbvGr','FireplaceQu','Fence','Alley','PoolQC','GarageCars','1stFlrSF','GrLivArea','FullBath','MiscFeature'\n]","0391c929":"data.drop(cols_to_remove, axis=1, inplace=True)\n","fef609b8":"data.shape","f10ca061":"data.columns\n","bced8ad4":"**Remove Bad Features From Data**\n1. GarageArea <-> GarageCars\n2. TotalBsmtSF <-> 1stFlrSF\n3. TotalRmsAbvGrd <-> GrLivArea\n4. GrLivArea <-> FullBath\n\n**Features with missing values more than 20%**\n5. FireplaceQu 690\/1460 = 47%\n6. Fence 1179\/1460 == 80%\n7. Alley 1369 > 90%\n8. PoolQc 1453 > 90%\n\n**Features with Poor Correlation with the Target Feature(SalePrice) are also included in the columns to be removed**\n"}}