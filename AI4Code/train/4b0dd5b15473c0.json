{"cell_type":{"96393035":"code","513b8862":"code","7796201c":"code","01005561":"code","34c3d616":"code","62bad533":"code","a3a52481":"code","cf11e89b":"code","48e639d4":"code","a68cf689":"code","9e62c729":"code","741e0cc0":"code","958dca5b":"code","9473f9a0":"code","26f13ed6":"code","bf663372":"code","93be6ea0":"code","2c3bbc86":"code","455eb850":"code","ee617e87":"markdown","4d4f0670":"markdown","3d853c27":"markdown","5089b11c":"markdown","61bf3040":"markdown","f9fe49e8":"markdown","5dc17ed3":"markdown","aecffaa4":"markdown","81a60ade":"markdown"},"source":{"96393035":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport xgboost\nimport math\nfrom __future__ import division\nfrom scipy.stats import pearsonr\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_validate\nfrom sklearn import tree\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import explained_variance_score","513b8862":"# Read the data into a data frame\ndata = pd.read_csv('..\/input\/kc_house_data.csv')","7796201c":"# Check the number of data points in the data set\nprint(len(data))\n# Check the number of features in the data set\nprint(len(data.columns))\n# Check the data types\nprint(data.dtypes.unique())","01005561":"data.select_dtypes(include=['O']).columns.tolist()","34c3d616":"# Check any number of columns with NaN\nprint(data.isnull().any().sum(), ' \/ ', len(data.columns))\n# Check any number of data points with NaN\nprint(data.isnull().any(axis=1).sum(), ' \/ ', len(data))","62bad533":"features = data.iloc[:,3:].columns.tolist()\ntarget = data.iloc[:,2].name","a3a52481":"correlations = {}\nfor f in features:\n    data_temp = data[[f,target]]\n    x1 = data_temp[f].values\n    x2 = data_temp[target].values\n    key = f + ' vs ' + target\n    correlations[key] = pearsonr(x1,x2)[0]","cf11e89b":"data_correlations = pd.DataFrame(correlations, index=['Value']).T\ndata_correlations.loc[data_correlations['Value'].abs().sort_values(ascending=False).index]","48e639d4":"y = data.loc[:,['sqft_living','grade',target]].sort_values(target, ascending=True).values\nx = np.arange(y.shape[0])","a68cf689":"%matplotlib inline\nplt.subplot(3,1,1)\nplt.plot(x,y[:,0])\nplt.title('Sqft and Grade vs Price')\nplt.ylabel('Sqft')\n\nplt.subplot(3,1,2)\nplt.plot(x,y[:,1])\nplt.ylabel('Grade')\n\nplt.subplot(3,1,3)\nplt.plot(x,y[:,2],'r')\nplt.ylabel(\"Price\")\n\nplt.show()","9e62c729":"# Train a simple linear regression model\nregr = linear_model.LinearRegression()\nnew_data = data[['sqft_living','grade', 'sqft_above', 'sqft_living15','bathrooms','view','sqft_basement','lat','waterfront','yr_built','bedrooms']]","741e0cc0":"X = new_data.values\ny = data.price.values","958dca5b":"X_train, X_test, y_train, y_test = train_test_split(X, y ,test_size=0.2)","9473f9a0":"regr.fit(X_train, y_train)\nprint(regr.predict(X_test))","26f13ed6":"regr.score(X_test,y_test)","bf663372":"# Calculate the Root Mean Squared Error\nprint(\"RMSE: %.2f\"\n      % math.sqrt(np.mean((regr.predict(X_test) - y_test) ** 2)))","93be6ea0":"# Let's try XGboost algorithm to see if we can get better results\nxgb = xgboost.XGBRegressor(n_estimators=100, learning_rate=0.08, gamma=0, subsample=0.75,\n                           colsample_bytree=1, max_depth=7)","2c3bbc86":"traindf, testdf = train_test_split(X_train, test_size = 0.3)\nxgb.fit(X_train,y_train)","455eb850":"predictions = xgb.predict(X_test)\nprint(explained_variance_score(predictions,y_test))","ee617e87":"- Since there are Python objects in the data set, we may have some categorical features. Let's check them. ","4d4f0670":"- We only have the date column which is a timestamp that we will ignore.","3d853c27":"- Prediction score is about 70 which is not really optimal","5089b11c":"# 3. Predicting House Sales Prices","61bf3040":"# 1. Exploratory Data Analysis","f9fe49e8":"- The data set is pretty much structured and doesn't have any NaN values. So we can jump into finding correlations between the features and the target variable","5dc17ed3":"# 2. Correlations between features and target","aecffaa4":"- We can see that the top 5 features are the most correlated features with the target \"price\"\n- Let's plot the best 2 regressors jointly","81a60ade":"- Our accuracy is changing between 79%-84%. I think it is close to an optimal solution."}}