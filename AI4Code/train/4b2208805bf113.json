{"cell_type":{"605205c9":"code","070f9c90":"code","8f9004a7":"code","96b9f150":"code","4bf88185":"code","bf173608":"code","e4d1f69b":"code","c9399227":"code","57de3d0e":"code","031fea0c":"code","962af390":"code","60b87ceb":"code","a6debadc":"code","56209428":"code","a67e50e5":"code","e41ffccf":"code","33af8bcf":"code","e053fe02":"code","e188035a":"code","5f6cf562":"code","5ccbea08":"code","b7b84e73":"markdown","920321db":"markdown","b781b290":"markdown","a9b46cff":"markdown"},"source":{"605205c9":"import pandas as pd\nimport numpy as np","070f9c90":"df = pd.read_csv('..\/input\/train.csv')","8f9004a7":"not_round = ['toxicity_annotator_count', 'identity_annotator_count', 'created_date',\n                 'publication_id', 'parent_id', 'article_id', 'rating', 'funny',\n                 'wow', 'sad', 'likes', 'disagree', 'rating', 'comment_text', 'target',\n                'severe_toxicity', 'obscene', 'threat', 'insult', 'identity_attack', 'sexual_explicit',\n                'id', 'number_of_records']\nround_cols = list(set(df.columns) - set(not_round))","96b9f150":"df_round = df\nfor i in round_cols:\n    df_round[i] = df_round[i].round(1)","4bf88185":"df_round['is_gender'] = False\ndf_round['is_race'] = False\ndf_round['is_religion'] = False\ndf_round['is_sexual_orientation'] = False\ndf_round['is_disability'] = False","bf173608":"df_round.loc[((df['female'].notnull()) & (df['female'] > 0)) |\n((df['male'].notnull()) & (df['male'] > 0)) |\n((df['other_gender'].notnull()) & (df['other_gender'] > 0)), 'is_gender'] = True","e4d1f69b":"df_round.loc[((df_round['asian'].notnull()) & (df_round['asian'] > 0)) |\n((df_round['black'].notnull()) & (df_round['black'] > 0)) |\n((df_round['other_race_or_ethnicity'].notnull()) & (df_round['other_race_or_ethnicity'] > 0)) |\n((df_round['white'].notnull()) & (df_round['white'] > 0)) |\n((df_round['latino'].notnull()) & (df_round['latino'] > 0)), 'is_race'] = True","c9399227":"df_round.loc[((df_round['atheist'].notnull()) & (df_round['atheist'] > 0)) |\n((df_round['buddhist'].notnull()) & (df_round['buddhist'] > 0)) |\n((df_round['christian'].notnull()) & (df_round['christian'] > 0)) |\n((df_round['hindu'].notnull()) & (df_round['hindu'] > 0)) |\n((df_round['jewish'].notnull()) & (df_round['jewish'] > 0)) |\n((df_round['muslim'].notnull()) & (df_round['muslim'] > 0)) |\n((df_round['other_religion'].notnull()) & (df_round['other_religion'] > 0)), 'is_religion'] = True","57de3d0e":"df_round.loc[((df_round['bisexual'].notnull()) & (df_round['bisexual'] > 0)) |\n((df_round['heterosexual'].notnull()) & (df_round['heterosexual'] > 0)) |\n((df_round['homosexual_gay_or_lesbian'].notnull()) & (df_round['homosexual_gay_or_lesbian'] > 0)) |\n((df_round['other_sexual_orientation'].notnull()) & (df_round['other_sexual_orientation'] > 0)) |\n((df_round['transgender'].notnull()) & (df_round['transgender'] > 0)), 'is_sexual_orientation'] = True","031fea0c":"df_round.loc[((df_round['intellectual_or_learning_disability'].notnull()) & (df_round['intellectual_or_learning_disability'] > 0)) |\n((df_round['other_disability'].notnull()) & (df_round['other_disability'] > 0)) |\n((df_round['physical_disability'].notnull()) & (df_round['physical_disability'] > 0)) |\n((df_round['psychiatric_or_mental_illness'].notnull()) & (df_round['psychiatric_or_mental_illness'] > 0)), 'is_disability'] = True","962af390":"### Contains any of the protected, evaluated against variables: \ndf_round[\"any_protected\"] = 0\ndf_round.loc[(df_round['is_gender']==True)|\n((df_round['homosexual_gay_or_lesbian'].notnull()) & (df_round['homosexual_gay_or_lesbian'] > 0)) |\n                        ((df_round['christian'].notnull()) & (df_round['christian'] > 0)) |\n                        ((df_round['jewish'].notnull()) & (df_round['jewish'] > 0)) |\n((df_round['muslim'].notnull()) & (df_round['muslim'] > 0)) | \n                        ((df_round['black'].notnull()) & (df_round['black'] > 0)) |\n((df_round['white'].notnull()) & (df_round['white'] > 0)) | \n  ((df_round['psychiatric_or_mental_illness'].notnull()) & (df_round['psychiatric_or_mental_illness'] > 0)),\"any_protected\"] = 1\n                        \n#     * male\n#     * female\n#     * homosexual_gay_or_lesbian\n#     * christian\n#     * jewish\n#     * muslim\n#     * black\n#     * white\n#     * psychiatric_or_mental_illness","60b87ceb":"print(df_round.shape)","a6debadc":"df_round.columns","56209428":"DROP_COLS = ['id','created_date',\n       'publication_id', 'parent_id', 'article_id',\n            \"identity_annotator_count\", 'toxicity_annotator_count','rating', 'funny', 'wow']","a67e50e5":"df_round.drop(DROP_COLS,axis=1,inplace=True)","e41ffccf":"df_round[\"label\"] = (df_round[\"target\"]>=0.5).astype(int)","33af8bcf":"df_round.shape","e053fe02":"## Keeping rows which are not  duplicates by comment text leaves 1,780,823 rows = 20K rows . (This is without even lowercasing or similar to check for near duplciates)\n#print(df_round.drop_duplicates(subset=[\"comment_text\"]).shape[0])\n\ndf_round.drop_duplicates(subset=[\"comment_text\",\"target\"],inplace=True)\nprint(df_round.shape[0])","e188035a":"print(\"some minor eda:\")\nprint(\"mean label (target V threshhold) {:.4f}\".format(df_round[\"label\"].mean()))\nprint(\"mean target  (no threshhold) {:.4f}\".format(df_round[\"target\"].mean()))\nprint(\"mean target given existence of one of the common protected variables (crosstab):\")\ndf.groupby(\"any_protected\")[\"target\"].mean()","5f6cf562":"df_round.head()","5ccbea08":"df_round.to_csv('jigsaw_train_new_categories_v1.csv.gz', encoding='utf-8', index=False, sep='\\t',compression=\"gzip\")","b7b84e73":"### Round categories\n\nLet's round some features so it will be easier to make a distribution chart.\n\n**Features to be rounded**: 'latino', 'psychiatric_or_mental_illness', 'other_sexual_orientation', 'physical_disability', 'other_race_or_ethnicity', 'intellectual_or_learning_disability', 'jewish', 'male', 'asian', 'buddhist', 'other_disability', 'female', 'christian', 'atheist', 'hindu', 'other_religion', 'bisexual', 'transgender', 'muslim', 'homosexual_gay_or_lesbian', 'black', 'other_gender', 'white', 'heterosexual'.","920321db":"### Result","b781b290":"#### Create categories\n\nCreate categories based in the type of feature that was rounded.\n\n* *Gender*: female, male, other_gender;\n* *Race*: asian, black, other_race_or_ethnicity, white, latino;\n* *Religion*: atheist, buddhist, christian, hindu, jewish, muslim, other_religion;\n* *Sexual orientation*: bisexual, heterosexual, homosexual_gay_or_lesbian, other_sexual_orientation, transgender;\n* *Disability*: intellectual_or_learning_disability, other_disability, physical_disability, psychiatric_or_mental_illness.\n\nEach feature must be different than None and greater than 0 to fit in a category.","a9b46cff":"### Introduction\n\nThis notebook creates a dataset that can be used to train a model or just facilitate the creation of an EDA. Here some features are rounded and new categories are added.\n\n\n* The variables with more than 500 occurences that will actullay be checked against are:\n    * male\n    * female\n    * homosexual_gay_or_lesbian\n    * christian\n    * jewish\n    * muslim\n    * black\n    * white\n    * psychiatric_or_mental_illness"}}