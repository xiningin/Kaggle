{"cell_type":{"639b61f1":"code","5f14a6f1":"code","844f320d":"code","b7c08f9b":"code","9121b5f5":"code","c684ace3":"code","05d7478c":"code","69f8907b":"code","6718a0f2":"code","43e1507f":"code","2d82c967":"code","9c951447":"code","b13b984e":"code","fbfb3137":"code","02aae28b":"code","a4fdc398":"code","cfb5e0a8":"code","c15fe38e":"code","bbc7027f":"code","990aaa73":"code","1e754daf":"code","51ca0815":"code","099c05ed":"code","1e513d4e":"code","df0f48e6":"code","59e6da1b":"code","01c3fa79":"markdown","ee121122":"markdown","f9a5e6e5":"markdown","0a45edce":"markdown","ec9c0d6d":"markdown","502ecccc":"markdown","acfa9c44":"markdown","9f6edcbb":"markdown","d55ea560":"markdown","90c75229":"markdown","3ad974f4":"markdown","fe0d8926":"markdown","1e2a1ab9":"markdown","fa123188":"markdown","a6928aba":"markdown","24ff1859":"markdown","30306a5e":"markdown","a06ce91f":"markdown","0fd10284":"markdown","5e1e0dcc":"markdown","31d19819":"markdown","70ee8bcb":"markdown","4d2c227d":"markdown","9bc45a6a":"markdown","266cd3b9":"markdown","a56a5e7d":"markdown","d77fa2d0":"markdown","c5774f81":"markdown","dccd1c48":"markdown","13327cef":"markdown","93bc1040":"markdown","746ebd98":"markdown","18e14f21":"markdown","30c8945e":"markdown","c843bdfe":"markdown","6b598265":"markdown"},"source":{"639b61f1":"import plotly.express as px","5f14a6f1":"df = px.data.iris()\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color=\"species\")\nfig.show()","844f320d":"df = px.data.iris()\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color=\"species\", marginal_y=\"violin\",\n           marginal_x=\"box\", trendline=\"ols\", template=\"simple_white\")\nfig.show()","b7c08f9b":"df = px.data.iris()\ndf[\"e\"] = df[\"sepal_width\"]\/100\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color=\"species\", error_x=\"e\", error_y=\"e\")\nfig.show()","9121b5f5":"df = px.data.tips()\nfig = px.bar(df, x=\"sex\", y=\"total_bill\", color=\"smoker\", barmode=\"group\")\nfig.show()","c684ace3":"df = px.data.tips()\nfig = px.bar(df, x=\"sex\", y=\"total_bill\", color=\"smoker\", barmode=\"group\", facet_row=\"time\", facet_col=\"day\",\n       category_orders={\"day\": [\"Thur\", \"Fri\", \"Sat\", \"Sun\"], \"time\": [\"Lunch\", \"Dinner\"]})\nfig.show()","05d7478c":"df = px.data.iris()\nfig = px.scatter_matrix(df, dimensions=[\"sepal_width\", \"sepal_length\", \"petal_width\", \"petal_length\"], color=\"species\")\nfig.show()","69f8907b":"df = px.data.iris()\nfig = px.parallel_coordinates(df, color=\"species_id\", labels={\"species_id\": \"Species\",\n                  \"sepal_width\": \"Sepal Width\", \"sepal_length\": \"Sepal Length\",\n                  \"petal_width\": \"Petal Width\", \"petal_length\": \"Petal Length\", },\n                    color_continuous_scale=px.colors.diverging.Tealrose, color_continuous_midpoint=2)\nfig.show()","6718a0f2":"df = px.data.tips()\nfig = px.parallel_categories(df, color=\"size\", color_continuous_scale=px.colors.sequential.Inferno)\nfig.show()","43e1507f":"df = px.data.gapminder()\nfig = px.scatter(df.query(\"year==2007\"), x=\"gdpPercap\", y=\"lifeExp\", size=\"pop\", color=\"continent\",\n           hover_name=\"country\", log_x=True, size_max=60)\nfig.show()","2d82c967":"df = px.data.gapminder()\nfig = px.scatter(df, x=\"gdpPercap\", y=\"lifeExp\", animation_frame=\"year\", animation_group=\"country\",\n           size=\"pop\", color=\"continent\", hover_name=\"country\", facet_col=\"continent\",\n           log_x=True, size_max=45, range_x=[100,100000], range_y=[25,90])\nfig.show()","9c951447":"df = px.data.gapminder()\nfig = px.line(df, x=\"year\", y=\"lifeExp\", color=\"continent\", line_group=\"country\", hover_name=\"country\",\n        line_shape=\"spline\", render_mode=\"svg\")\nfig.show()","b13b984e":"df = px.data.gapminder()\nfig = px.area(df, x=\"year\", y=\"pop\", color=\"continent\", line_group=\"country\")\nfig.show()","fbfb3137":"df = px.data.gapminder().query(\"year == 2007\").query(\"continent == 'Europe'\")\ndf.loc[df['pop'] < 2.e6, 'country'] = 'Other countries' # Represent only large countries\nfig = px.pie(df, values='pop', names='country', title='Population of European continent')\nfig.show()","02aae28b":"df = px.data.gapminder().query(\"year == 2007\")\nfig = px.sunburst(df, path=['continent', 'country'], values='pop',\n                  color='lifeExp', hover_data=['iso_alpha'])\nfig.show()","a4fdc398":"import numpy as np\ndf = px.data.gapminder().query(\"year == 2007\")\nfig = px.treemap(df, path=[px.Constant('world'), 'continent', 'country'], values='pop',\n                  color='lifeExp', hover_data=['iso_alpha'])\nfig.show()","cfb5e0a8":"df = px.data.tips()\nfig = px.histogram(df, x=\"total_bill\", y=\"tip\", color=\"sex\", marginal=\"rug\", hover_data=df.columns)\nfig.show()","c15fe38e":"df = px.data.tips()\nfig = px.violin(df, y=\"tip\", x=\"smoker\", color=\"sex\", box=True, points=\"all\", hover_data=df.columns)\nfig.show()","bbc7027f":"df = px.data.iris()\nfig = px.density_heatmap(df, x=\"sepal_width\", y=\"sepal_length\", marginal_x=\"rug\", marginal_y=\"histogram\")\nfig.show()","990aaa73":"df = px.data.iris()\nfig = px.density_contour(df, x=\"sepal_width\", y=\"sepal_length\", color=\"species\", marginal_x=\"rug\", marginal_y=\"histogram\")\nfig.show()","1e754daf":"df = px.data.carshare()\nfig = px.scatter_mapbox(df, lat=\"centroid_lat\", lon=\"centroid_lon\", color=\"peak_hour\", size=\"car_hours\",\n                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=10,\n                  mapbox_style=\"carto-positron\")\nfig.show()","51ca0815":"df = px.data.election()\ngeojson = px.data.election_geojson()\n\nfig = px.choropleth_mapbox(df, geojson=geojson, color=\"Bergeron\",\n                           locations=\"district\", featureidkey=\"properties.district\",\n                           center={\"lat\": 45.5517, \"lon\": -73.7073},\n                           mapbox_style=\"carto-positron\", zoom=9)\nfig.show()","099c05ed":"df = px.data.gapminder()\nfig = px.scatter_geo(df, locations=\"iso_alpha\", color=\"continent\", hover_name=\"country\", size=\"pop\",\n               animation_frame=\"year\", projection=\"natural earth\")\nfig.show()","1e513d4e":"df = px.data.wind()\nfig = px.scatter_polar(df, r=\"frequency\", theta=\"direction\", color=\"strength\", symbol=\"strength\",\n            color_discrete_sequence=px.colors.sequential.Plasma_r)\nfig.show()","df0f48e6":"df = px.data.wind()\nfig = px.line_polar(df, r=\"frequency\", theta=\"direction\", color=\"strength\", line_close=True,\n            color_discrete_sequence=px.colors.sequential.Plasma_r)\nfig.show()","59e6da1b":"df = px.data.wind()\nfig = px.bar_polar(df, r=\"frequency\", theta=\"direction\", color=\"strength\", template=\"plotly_dark\",\n            color_discrete_sequence= px.colors.sequential.Plasma_r)\nfig.show()","01c3fa79":"# What is Plotly Express?","ee121122":"## Scatterplot matrices","f9a5e6e5":"##  Line chart","0a45edce":"# Conclusion","ec9c0d6d":"## Sunburst chart","502ecccc":"![](https:\/\/thumbs.gfycat.com\/JampackedFrailFlyinglemur-size_restricted.gif)","acfa9c44":"## Geographical Scatter Plot","9f6edcbb":"##  Bar charts","d55ea560":"##  Facet plots","90c75229":"##  Trendlines","3ad974f4":"## Hover label with Animation","fe0d8926":"## Scatter Plots\n\n","1e2a1ab9":"## Choropleth mapbox","fa123188":"## Area chart","a6928aba":"- The entire visualization can be created with one line of code (kind of)\n\n![](https:\/\/miro.medium.com\/max\/625\/1*dj2Vzlax6tUazwzZtFmL8g.png)\n\n- It\u2019s interactive\n\n![](https:\/\/miro.medium.com\/max\/750\/1*CFhsbRxAWRey8q_nZtANoQ.gif)\n\n- We can isolate certain information\n\n![](https:\/\/miro.medium.com\/max\/750\/1*rBF0HdbreEjEijntEtCMCg.gif)\n\n- We can animate change","24ff1859":"Creating effective data visualizations is a very important part of data science from the beginning to the end of the data science process. Using visualizations during your exploratory data analysis is a great way to get a good idea of what your data is about. Creating visualizations at the end of your project is a great way to communicate your findings in an easy-to-understand way. There are so many different tools for data visualization in Python, from cult favorites like Matplotlib and Seaborn, to the newly-released Plotly Express","30306a5e":"##  Violin plot","a06ce91f":"If you\u2019ve ever used Plotly, or even just looked at code written to use Plotly, you know that it\u2019s definitely not the simplest library to use for visualizations. That\u2019s where Plotly Express comes in. Plotly Express is a high-level wrapper for Plotly, which essentially means it does a lot of the things that you can do it Plotly with a much simpler syntax. It is pretty easy to use, and doesn\u2019t require connecting your file to Plotly or specifying that you want to work with Plotly offline. After Plotly Express is installed, a simple (import plotly_express as px) is all you need to start creating simple, interactive visualizations with Python.","0fd10284":"## Density contour","5e1e0dcc":"## Error bars","31d19819":"## Pie chart","70ee8bcb":"## Histogram","4d2c227d":"## If you found it helpful, do upvote please ","9bc45a6a":"## Continuous color scale","266cd3b9":"Plotly Express is really cool. I would 100% recommend using it for exploratory data analysis. The interactivity of the plots allows you to do a much more thorough investigation of your data with ease. Being able to mouse over a point and get all of the information associated with it allows you to draw better conclusions than if you just had to look at a graph and guess what the points were. However, it probably won\u2019t be able to do everything you want it to as well as you would like.\n\nI would recommend using Plotly Express in addition to Matplotlib and Seaborn in order to create the best array of visualizations possible.","a56a5e7d":"##  Parallel coordinates","d77fa2d0":"## Polar bar chart","c5774f81":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/3\/37\/Plotly-logo-01-square.png)","dccd1c48":"# Getting Started with Plots","13327cef":"# Several Advantages to using Plotly Express","93bc1040":"## Radar chart","746ebd98":"##  Polar plot","18e14f21":"## Scatter mapbox","30c8945e":"## Treemap","c843bdfe":"## Density heatmap","6b598265":"##  Hover label"}}