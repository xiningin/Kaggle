{"cell_type":{"3c2d4178":"code","2ec17298":"code","5fe64e73":"code","8727b77c":"code","18600e98":"code","88ba9b02":"code","68e19639":"code","114b8401":"code","88f00f5c":"code","6968409e":"code","9236344b":"code","be503f7d":"code","3a65b13b":"code","073b9bcc":"code","c12c6e1f":"code","a5b2552a":"code","87fc0f7b":"code","003580d5":"code","0d991b92":"code","d30f461f":"code","b38e228c":"code","0b41801a":"code","13b21ade":"code","9e864247":"markdown","61c69449":"markdown","3228549a":"markdown","ecf1859d":"markdown","7bb3c4b8":"markdown","029a7abe":"markdown","a5e5d90d":"markdown","ac2546db":"markdown","d349c57a":"markdown","2d4d8ca4":"markdown","cccb6e7c":"markdown","aed76d16":"markdown"},"source":{"3c2d4178":"import warnings\nwarnings.simplefilter(action='ignore', \n                      category=FutureWarning)      # suppress warnings\nimport numpy as np                                 # linear algebra\nimport pandas as pd                                # data analysis\nimport matplotlib.pyplot as plt                    # visualization\nimport seaborn as sns                              # visualization\nimport scipy.stats as scipystats                   # statistics  \nimport statsmodels.formula.api as smf              # statistics\nfrom statsmodels.api import add_constant           # statistics\nfrom sklearn.feature_selection import SelectKBest  # feature selection\nfrom sklearn.feature_selection import f_regression # feature selection\n\npd.set_option('display.float_format', lambda x: '%.1f' % x) # format decimals\nsns.set(font_scale=1.5) # increse font size for seaborn charts\n%matplotlib inline\n\nMEDICAL_DATA = pd.read_csv('..\/input\/insurance.csv')","2ec17298":"OLDER = MEDICAL_DATA.loc[MEDICAL_DATA['age'] > 0].reset_index(drop=True)\nprint (\"Rows: \",OLDER.shape[0],\"   Variables: \", OLDER.shape[1])","5fe64e73":"OLDER.head()","8727b77c":"#Get categorical variables\ns = (OLDER.dtypes == 'object')\nobject_cols = list(s[s].index)\n\nprint(\"Categorical variables:\")\nprint(object_cols)","18600e98":"#one-hot encoding id best because region because is a nominal, and not an ordinal, variable.\n#from sklearn.preprocessing import OneHotEncoder\n#OH_encoder = OneHotEncoder()\n#OH_cols = pd.DataFrame(OH_encoder.fit_transform(OLDER[object_cols]))\n#OH_cols.index = OLDER.index\n#num_OLDER = OLDER.drop(object_cols, axis=1)\n#OH_OLDER = pd.concat([num_OLDER, OH_cols], axis=1)\n\n\n#Label Encoding\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\nfor col in object_cols:\n    OLDER[col] = label_encoder.fit_transform(OLDER[col])","88ba9b02":"#Summary of correlation\nOLDER.corr()['charges'].sort_values()","68e19639":"plt.figure(figsize=(15,5))\nplt.hist(OLDER['charges']); # distribution of charges\nplt.title('Distribution of charges');","114b8401":"#Checking if there are any NANs\nOLDER.isnull().sum()","88f00f5c":"#Take out non-numeric Variables [NOT NECESSARY]\n#OLDER = OLDER.select_dtypes(include=[np.number]) # drop non-numeric fields\n#print (\"Rows: \",OLDER.shape[0],\"   Variables: \", OLDER.shape[1])","6968409e":"X = add_constant(OLDER[['charges']])\nY = OLDER['age']\nregr = smf.OLS(Y,X).fit()\nregr.summary()","9236344b":"sns_plot = sns.lmplot(x='charges', y='age',data=OLDER,size = 10)\nplt.title('Relationship between charges and age');","be503f7d":"#Testing Homoskedacity\nplt.figure(figsize=(10,10))\nplt.scatter(regr.predict(), regr.resid)\nplt.title('Residuals versus Predicted charges');","3a65b13b":"#Find outliers\nOLDER  = pd.concat([OLDER, pd.Series(regr.resid, name = 'resid')], axis = 1)\nOLDER  = OLDER.sort_values(ascending=False,by=['resid'])\nOLDER.loc[OLDER['resid'] > 10]","073b9bcc":"Teenagers = OLDER.loc[OLDER['age'] <= 18] \nplt.figure(figsize=(15,5))\nplt.hist(Teenagers['charges']); # distribution of charges\nplt.title('Distribution of Teenagers charges');\n\n ","c12c6e1f":"#Middle Aged\nMiddle_Aged = OLDER.loc[OLDER['age'] > 40]\n\nplt.figure(figsize=(15,5))\nplt.hist(Middle_Aged['charges']); # distribution of charges\nplt.title('Distribution of People over 40');\n\n","a5b2552a":"#Elderly\nElderly = OLDER.loc[OLDER['age'] > 60]\n\nplt.figure(figsize=(15,5))\nplt.hist(Elderly['charges']); # distribution of charges\nplt.title('Distribution of Elderly charges');\n","87fc0f7b":"fig, ax = plt.subplots(figsize=(12,12)) \nsns.heatmap(OLDER.corr(), linewidths=0.1,cbar=True, annot=True, square=True, fmt='.1f')\nplt.title('Correlation between Variables');","003580d5":"#REGRESSION 1 AGAIN\nX = add_constant(OLDER[['age']])\nY = OLDER['charges']\nregr = smf.OLS(Y,X).fit()\nregr.summary()","0d991b92":"#Regression 2 - AGE AND BMI\nX = add_constant(OLDER[['age','bmi']])\nY = OLDER['charges']\nregr = smf.OLS(Y,X).fit()\nregr.summary()","d30f461f":"#TESTING LINEARITY\nsns_plot = sns.lmplot(x='age', y='charges',data=OLDER,size = 10)\nplt.title('Relationship age and charges');","b38e228c":"plt.figure(figsize=(10,10))\nplt.scatter(regr.predict(), regr.resid)\nplt.title('Residuals versus Predicted Charges');","0b41801a":"#Regression 3: \nX = add_constant(OLDER[['age','bmi', 'smoker', 'region', 'children']])\nY = OLDER['charges']\nregr = smf.OLS(Y,X).fit()\nregr.summary()","13b21ade":"#Testing Homoskedacity\nplt.figure(figsize=(10,10))\nplt.scatter(regr.predict(), regr.resid)\nplt.title('Residuals versus Predicted charges for Regression 3');","9e864247":"REGRESSION","61c69449":"It's clear that the largest residual is for people around a cut-off of 64 to 65 years. This means that there must be a reason why people of this age group are uniquely likely to not fit with the regression. To analyse this furter I will create new variables to group ages into cohorts.","3228549a":"**PREPROCESSING**\n\n1.1 LOADING DATA","ecf1859d":"This is even less correlated.","7bb3c4b8":"This is a farily poor fit. The R Squared is quite high and the F-statistic is low.","029a7abe":"There seems to be a large proportion of people who are paying under $15000 dollars on insurance, but also clusters around 27500-30000 and 47500-50000.","a5e5d90d":"It's clear that there is a 'long tail' of people who have health insurance under $10000.","ac2546db":"The charges distribution of elderly people and teenagers look remarkably similar.","d349c57a":"1.2 READING DATA","2d4d8ca4":"First let's look specifically at Teenagers, and work out if teenagers follow the same pattern as others.","cccb6e7c":"We can see that these charges are even more concentrated below $5000.","aed76d16":"The spread of data points is fairly consistent over the different charges. Still, let's check if there are any outliers that are particularly skewing the trend."}}