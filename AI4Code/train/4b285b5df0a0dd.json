{"cell_type":{"f8d28439":"code","64ea551d":"code","7c5475eb":"code","4421b3f6":"code","33509d58":"code","f114c40b":"code","f5368e6a":"code","ee459fb2":"code","1f32159e":"code","d980924d":"code","9d4b0817":"code","094440c5":"code","72a78d58":"code","5936bce9":"code","6e861c74":"code","ddc4f6b1":"code","2f065d62":"code","69f033a4":"code","e23ef8e3":"code","48604de2":"code","68173384":"code","b13f5491":"code","3df56d16":"code","177254bc":"code","a42c3ee7":"code","6668a1bc":"code","a786fb97":"code","ec8d5f1e":"code","7f5f5c1d":"code","f28fb9b0":"code","c2f0a514":"code","a0afef0f":"code","7f1ba4ac":"code","ee298277":"code","6c008aa7":"code","5a537d0a":"code","39785a4f":"code","69dab18c":"code","c28a74e9":"code","9df6b808":"code","12683e84":"code","9648ab98":"code","14008dd1":"code","43b8b7aa":"markdown","589fdb9f":"markdown","96d2b705":"markdown","82312dfe":"markdown","f3b1734b":"markdown","b3acfea5":"markdown","7e62a78f":"markdown","a070f7c8":"markdown","b2511b9a":"markdown","b72539c4":"markdown","de5cce18":"markdown","2c56d5e7":"markdown","c3cb578f":"markdown","003df9a4":"markdown","18596874":"markdown","a251f8d4":"markdown","03a92065":"markdown","07dbfd60":"markdown","fbd8ab64":"markdown","19e28f2d":"markdown","74b7f947":"markdown","4d5d313d":"markdown","513df22c":"markdown","0953b8c5":"markdown","66addf35":"markdown","268ebb1f":"markdown","9d7863b6":"markdown","cf833ed4":"markdown","af2b1549":"markdown","144040bd":"markdown","57e5f3bb":"markdown","1dfa4fa7":"markdown"},"source":{"f8d28439":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime, time\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n","64ea551d":"df = pd.read_csv(\"..\/input\/uberdrives\/My Uber Drives - 2016.csv\", encoding=\"latin1\")\ndf.head()","7c5475eb":"#removing * from columns\ndf.columns = df.columns.str.replace(\"*\",\"\")\ndf.head(1)","4421b3f6":"df.info()","33509d58":"print(f\"There are {df.shape[0]} rows and {df.shape[1]} columns in the dataset\")","f114c40b":"df.describe()","f5368e6a":"df.isnull().sum()","ee459fb2":"# Visualizing the missing data\nplt.figure(figsize=(10,5))\nsns.heatmap(df.isnull(),cmap=\"magma\",yticklabels=False,cbar = False)\nplt.show()","1f32159e":"import missingno as msno\n\nmsno.bar(df)\nplt.show()","d980924d":"df_copy = df.copy()","9d4b0817":"null_columns = df_copy.columns[df.isnull().any()]\ndf_copy[null_columns].isnull().sum()","094440c5":"df_copy.drop(index = 1155, axis = 0, inplace = True)\n","72a78d58":"df_copy.isnull().sum()","5936bce9":"#percentage of null value present in purpose column\nint((df_copy['PURPOSE'].isnull().sum()\/len(df_copy))*100)","6e861c74":"# filling the values in purpose with forward fill\ndf_copy['PURPOSE'].fillna(method = 'ffill',inplace = True)","ddc4f6b1":"df_copy.isna().sum()","2f065d62":"df_copy['START_DATE'] = pd.to_datetime(df_copy['START_DATE'], errors='coerce')\ndf_copy['END_DATE'] = pd.to_datetime(df_copy['END_DATE'], errors='coerce')\ndf_copy.info()","69f033a4":"category = pd.crosstab(index = df_copy['CATEGORY'],columns = 'Count of travels as per category')\ncategory.plot(kind = 'bar',color = 'r',alpha = 0.7)\nplt.legend()\nplt.tight_layout()\ncategory","e23ef8e3":"start_point = df_copy.START.value_counts()\nstart_point_value=start_point[start_point>10]\npie=plt.pie(start_point_value,labels = start_point_value.index, shadow = True, startangle = 190)\nplt.tight_layout()\nplt.title(\"Start location\")\nplt.show()","48604de2":"start_point = df_copy.START.value_counts()\nstart_point_value_low=start_point[start_point <= 10]","68173384":"Stop_point = df_copy.STOP.value_counts()\nStop_point[Stop_point > 10]","b13f5491":"Stop_point = df_copy.STOP.value_counts()\nStop_point[Stop_point <= 10]","3df56d16":"Miles = df_copy.MILES.value_counts()\nprint(Miles[Miles > 10])\n\nMiles[Miles > 10].plot(kind = 'bar')\nplt.tight_layout()\nplt.title(\"Miles travelled\")\nplt.show()\n","177254bc":"Miles = pd.crosstab(index = df_copy['MILES']>10, columns = 'Count of Miles')\nMiles.plot(kind = 'bar', color = 'r',alpha = 0.7)\nplt.legend()\nMiles","a42c3ee7":"miles  = df_copy.MILES.value_counts()\nmiles_high = len(miles[miles > 10])\nmiles_low = len(miles[miles < 10])\npie_values = np.array([miles_high, miles_low])\nplt.pie(pie_values,labels=['miles higher than 10','miles lower than 10'], shadow=True, startangle = 155)\nplt.title(\"Miles travelled\")\nax = plt.gca()\nplt.legend(bbox_to_anchor=(1, 1), bbox_transform=ax.transAxes)\nplt.tight_layout()\nplt.show()","6668a1bc":"plt.figure(figsize=(15,6))\nsns.countplot(df_copy['PURPOSE'],order =df_copy['PURPOSE'].value_counts().index, palette='viridis')\nplt.show()","a786fb97":"# calculating minutes of trip\ndf_copy['MINUTES']=df_copy.END_DATE - df_copy.START_DATE\ndf_copy['MINUTES'] = df_copy['MINUTES'].dt.total_seconds()\/60\ndf_copy.head()","ec8d5f1e":"pd.DataFrame({\n    'MEAN': df_copy.groupby(['PURPOSE'])['MILES'].mean().round(1),\n    'MIN' : df_copy.groupby(['PURPOSE'])['MILES'].min(),\n    'MAX' : df_copy.groupby(['PURPOSE'])['MILES'].max()}).reset_index()\n","7f5f5c1d":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data = df_copy,x = df_copy.PURPOSE, y = df_copy.MILES)\nplt.xticks(rotation = 90)\nplt.subplot(1,2,2)\nsns.boxplot(data = df_copy,x = df_copy.PURPOSE, y = df_copy.MINUTES )\nplt.xticks(rotation = 90)\nplt.show()","f28fb9b0":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data = df_copy, x = df_copy.PURPOSE, y = df_copy.MILES,showfliers = False)\nplt.xticks(rotation = 90)\nplt.subplot(1,2,2)\nsns.boxplot(data = df_copy, x = df_copy.PURPOSE, y = df_copy.MINUTES, showfliers = False)\nplt.xticks(rotation=90)\nplt.show()\n","c2f0a514":"plt.figure(figsize=(8,5))\ndef round(x):\n  if x['START'] == x['STOP']:\n    return 'YES'\n  else:\n    return 'NO'  \n\ndf_copy['ROUND_TRIP'] = df_copy.apply(round, axis = 1)\nsns.countplot(df_copy['ROUND_TRIP'],order = df_copy['ROUND_TRIP'].value_counts().index, palette = 'rocket_r')\nplt.show()","a0afef0f":"df_copy['MONTH'] = pd.DatetimeIndex(df_copy['START_DATE']).month","7f1ba4ac":"dic = {1:'Jan', 2: 'Feb', 3: 'Mar', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'Aug', 9: 'Sep',\n      10: 'Oct', 11: 'Nov', 12: 'Dec' }\n\ndf_copy['MONTH'] = df_copy['MONTH'].map(dic)","ee298277":"df_copy","6c008aa7":"plt.figure(figsize=(12,7))\nsns.countplot(df_copy['MONTH'], order = df_copy['MONTH'].value_counts().index, palette=\"deep\")\nplt.axhline(df_copy['MONTH'].value_counts().mean(),linestyle='--', color = 'darkred', label='Mean Trips across Months')\nplt.legend()\nplt.show()","5a537d0a":"plt.figure(figsize=(12,7))\nsns.countplot(df_copy['ROUND_TRIP'],hue = df_copy['MONTH'])\nplt.legend(bbox_to_anchor=(1.05, 0.95),loc=2)\nplt.show()","39785a4f":"plt.figure(figsize = (16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data = df_copy,x = df_copy.PURPOSE,y = df_copy.MILES, showfliers = False)\nplt.xticks(rotation = 90)\nplt.subplot(1,2,2)\nsns.boxplot(data = df_copy, x = df_copy.PURPOSE, y = df_copy.MILES, showfliers = False)\nplt.xticks(rotation = 90)\nplt.show()","69dab18c":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.lineplot(data = df_copy, x =df_copy.MINUTES, y = df_copy.MILES)\nplt.grid(True, linestyle = '--')\n\nplt.subplot(1,2,2)\nsns.scatterplot(data = df_copy,x = df_copy.MINUTES, y = df_copy.MILES)\nplt.grid(True, linestyle = '--')\nplt.show()","c28a74e9":"plt.figure(figsize=(16,5))\nplt.subplot(1,2,1)\nn, bins, patches = plt.hist(df_copy.MINUTES)\nplt.xticks(bins.round())\nplt.grid(True, linestyle=\"dotted\")\nplt.title(\"Count of Cab ride MINUTES\")\n\nplt.subplot(1,2,2)\nn, bins, patches = plt.hist(df_copy.MILES)\nplt.xticks(bins.round())\nplt.grid(True, linestyle=\"dotted\")\nplt.title(\"COunt of Cab ride Miles\")\n\nplt.show()","9df6b808":"plt.figure(figsize=(9,5))\nsns.countplot(data = df_copy,x = \"PURPOSE\", hue=\"CATEGORY\",dodge=False)\nplt.xticks(rotation=45)\nplt.show()","12683e84":"plt.figure(figsize=(15,4))\npd.Series(df['START']).value_counts()[:25].plot(kind=\"bar\")\nplt.title(\"Cab Rides START Location frequency\")\nplt.xticks(rotation = 45);","9648ab98":"plt.figure(figsize=(15,4))\npd.Series(df['STOP']).value_counts()[:25].plot(kind = \"bar\")\nplt.title(\"Cab Rides STOP Location frequency\")\nplt.xticks(rotation = 45);","14008dd1":"g = sns.factorplot(x=\"PURPOSE\", y=\"MILES\", hue=\"CATEGORY\", data=df,\n                   size=15, kind=\"bar\", palette=\"muted\")\ng.fig.suptitle('Miles was earned per category and purpose', fontsize= 25)\ng.fig.set_size_inches(15, 5)\ng.set_xlabels('PURPOSE', fontsize= 20)\ng.set_ylabels('MILES', fontsize= 20)\nplt.show()","43b8b7aa":"> From the above plots, we can understand that mostly miles travelled are lower than 10 miles","589fdb9f":"we see that our conventional logic, that distance is proportional to time, is challenged as some cab rides took more time for less distance.","96d2b705":"### handling missing data","82312dfe":"### Which are the places having highest stop point","f3b1734b":"### How does the PURPOSE of Cab ride vary with time and distance?","b3acfea5":"### Frequency of Cab Rides STOP","7e62a78f":"### Purpose of most cabs","a070f7c8":"> Seeing the highest starting and stoping point, we can see that that cary, Morrisville and Whitebridge are famous destination\n","b2511b9a":"### Distribution of Cab rides based on Category","b72539c4":"> The places where Cary , Unknown Loccation, Morrisville , Whitebridge and next to Islamabad are highest stop points. Highest stop points are not same as Highest end points , there is a bit difference","de5cce18":"Grouping Purpose by Miles to see if we can get any pattern.","2c56d5e7":"## Dataset","c3cb578f":"> these are the lowest stopping point","003df9a4":"# Uber Analysis","18596874":"\n\n1.   Most of the cab rides are within a distance of 31 miles taking about 34 minutes.\n2.   Business Cab rides are not only more in volume, but also in distance travelled.\n3. Main uses of cab rides are Meal\/Entertainment, Customer visit, Meeting, Errand\/Supplies.\n4. Cab traffic is mostly concentrated in 5 cities or localities.\n5. Ac seasonal pattern of cab ride volume exists, which is highest on December.\n\n\n\n","a251f8d4":"Checking for round about trips","03a92065":"> Above are start point with lowest number of starts","07dbfd60":"### Which are the places having lowest start point","fbd8ab64":"The above plot makes clear distinction on the Purpose of Business rides and Personal rides. This may give insight to cab aggregators to decide which sector to introduce new cabs in.","19e28f2d":"### Relation between duration and purpose of cab ride","74b7f947":"### **CONCLUSION**","4d5d313d":"## Exploratory Data Analysis","513df22c":"> According to above pie chart, Start location are more in cary, Morrisville and Whitebridge, While there are some unknown locations which are grouped together.","0953b8c5":"Box plot without outliears","66addf35":"### Which are the places are having LOWEST STOP point","268ebb1f":"### Where do customers most frequently take cabs?","9d7863b6":"> cabs were mostly used for meetings and entertainment","cf833ed4":"Frequency of trip each month","af2b1549":"### Miles most travelled","144040bd":"### BOX plot of MILES and MINUTES split by PURPOSE ","57e5f3bb":"The dataset contains Start Date, End Date, Start Location, End Location, Miles Driven and Purpose of drive (Business, Personal, Meals, Errands, Meetings, Customer Support etc.) \n\nGeography: USA, Sri Lanka and Pakistan\n\nTime period: January - December 2016\n\nUnit of analysis: Drives\n\nTotal Drives: 1,155\n\nTotal Miles: 12,204","1dfa4fa7":"### Is the distance proportional to the duration?"}}