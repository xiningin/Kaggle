{"cell_type":{"d51c0a2e":"code","22245b4a":"code","db9b32cc":"code","e32b29d8":"code","88ba37fc":"code","ddcb3282":"code","5f4a9cc0":"code","0650c786":"code","8a2b528b":"code","b550ae7b":"code","252fba2c":"code","6fe75bec":"code","3caaf88e":"code","9d7dddb6":"code","eca7521d":"code","c369fe3e":"code","4a6e6ba2":"code","31097b6d":"code","35378444":"code","f9d019ff":"code","8e40f639":"code","0c7205a2":"code","479770bf":"code","5a77ac62":"code","0282dd47":"code","8bfe942f":"code","5ed6ab34":"code","81d7557f":"code","8def71bb":"code","5d9730ed":"code","2ad57d7e":"code","02e659cc":"code","87f0451c":"code","17d52582":"markdown","8b9e28e9":"markdown","a72f15cd":"markdown","269efb84":"markdown","0cb6f91e":"markdown","7ce08a27":"markdown","b62434ee":"markdown","da45b116":"markdown","516a68d6":"markdown","03be3588":"markdown","38480d0f":"markdown","9cb1b12a":"markdown","e251d693":"markdown","df92f473":"markdown","476e3aca":"markdown","20bf228b":"markdown","982c4b8a":"markdown","96083c70":"markdown","75aec9bf":"markdown","d7376f8a":"markdown","ccbc5e5c":"markdown","44fdf5c1":"markdown","c505e39c":"markdown","763f3e1f":"markdown","0c9aff84":"markdown","1438a1b9":"markdown","be076b14":"markdown","1528e6a2":"markdown","a8601590":"markdown","77d0dff1":"markdown","d06a741c":"markdown","c7a9dbcb":"markdown","da6f97a2":"markdown","0911ef1c":"markdown"},"source":{"d51c0a2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","22245b4a":"data=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')\ndata.head()","db9b32cc":"data['target'].value_counts()","e32b29d8":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.countplot(data['target'])","88ba37fc":"data['target'].value_counts().head(10).plot.pie(autopct='%1.1f%%')","ddcb3282":"data['location'].value_counts()[:10].plot(kind='bar')","5f4a9cc0":"data['keyword'].value_counts()[:10].plot(kind='bar')","0650c786":"data[data['target']==1]['location'].value_counts()[:10].plot(kind='bar')","8a2b528b":"def wl(text):\n    return len(text.split(\" \"))\ndata['word_length']=data['text'].apply(wl)","b550ae7b":"data['word_length'].hist()","252fba2c":"sns.kdeplot(data[data['target']==1]['word_length'],color='g')\nsns.kdeplot(data[data['target']==0]['word_length'],color='r')\nplt.legend(['disaster','real'])","6fe75bec":"sns.barplot(x='target',y='word_length',data=data)","3caaf88e":"data['char_length']=data['text'].apply(len)\ndata['char_length'].hist()\n","9d7dddb6":"sns.kdeplot(data[data['target']==1]['char_length'],color='g')\nsns.kdeplot(data[data['target']==0]['char_length'],color='r')\nplt.legend(['disaster','real'])","eca7521d":"sns.barplot(x='target',y='char_length',data=data)","c369fe3e":"sns.scatterplot(x='char_length',y='word_length',data=data)","4a6e6ba2":"from scipy import stats\nimport statsmodels.api as sm \nstats.probplot(data['char_length'], plot=plt)","31097b6d":"stats.probplot(data['word_length'], plot=plt)","35378444":"data['unique_word_count'] =data['text'].apply(lambda x: len(set(str(x).split())))","f9d019ff":"data['unique_word_count'].hist()","8e40f639":"sns.kdeplot(data[data['target']==1]['unique_word_count'],color='g')\nsns.kdeplot(data[data['target']==0]['unique_word_count'],color='r')\nplt.legend(['disaster','real'])","0c7205a2":"sns.scatterplot(x='unique_word_count',y='word_length',data=data)","479770bf":"sns.scatterplot(x='char_length',y='unique_word_count',data=data)","5a77ac62":"import nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords","0282dd47":" all_stopwords = stopwords.words('english')\ndata['stop_words']=data['text'].apply(lambda x: len([words for words in str(x).lower().split() if words in all_stopwords]))","8bfe942f":"data['stop_words'].hist()","5ed6ab34":"sns.barplot(x='target',y='stop_words',data=data)","81d7557f":"sns.kdeplot(data[data['target']==1]['stop_words'],color='g')\nsns.kdeplot(data[data['target']==0]['stop_words'],color='r')\nplt.legend(['disaster','real'])","8def71bb":"features=['word_length','char_length','unique_word_count']\nfor i in features:\n    sns.scatterplot(x=i,y='stop_words',data=data)\n    plt.show()","5d9730ed":"corr=data.corr()\nsns.heatmap(corr,annot=True)","2ad57d7e":"data['text']","02e659cc":"from nltk.util import ngrams\ndef get_bigram(text):\n    big=''\n    token = nltk.word_tokenize(text)\n    big=(list(ngrams(token, 2)))\n    return str(big)    \ndata['bigram']=data['text'].apply(get_bigram)       ","87f0451c":"data['bigram']","17d52582":"Here also we  are doing the same way as above,first creating a feature called char_length and plotting the distribution using histogram-as shown below many tweets are having char count more than 100.","8b9e28e9":"# Unique words in tweets","a72f15cd":"Below is th simple code to get bigrams from text.","269efb84":"# Location and keyword feature","0cb6f91e":"Now using scatterplot to check if there is any relation b\/w char count and word count,as shown below there is positive relation that means if char count increases the word count increases.","7ce08a27":"From below histogram,we can say that we can say that,stop words count for most of the tweets is less than 8.","b62434ee":"Now using plobability plot to see if there are normally distributed or not.As shown below word_length is some what normally distributes where as char_length is not. ","da45b116":"Plotting countplot to see the categories count visually.","516a68d6":"First checking top 10 location from where the tweets are coming.","03be3588":"Now plotting the top 10 locations where disaster tweets are coming,as shown below USA tops the list.","38480d0f":"Now plotting the word_length,as shown below most of the words in a sentence are between 8 and 22.","9cb1b12a":"Now using the bar plots to check word count in tweets,as shown below disaster tweets has more word count.","e251d693":"Now creating feature called stop_words which consist of len of stop words in each tweet.","df92f473":"Now using scatterplot to check if there is any relation b\/w unique word count and word count,as shown below there is almost positive relation that means if unique word count increases the word count increases.","476e3aca":"Now we can clearly see the correlation b\/w the features using below heatmap.","20bf228b":"Now plotting kdeplots,to see the distribution of word_length with respect to disaster and real tweets.As shown below,word_length of both real and disaster tweets lies between 5 and 28,and some of the disaster word count is more than 40.","982c4b8a":"# Text feature","96083c70":"# Target feature","75aec9bf":"As shown above unique_word_count and word_length has 0.97 correlation.\n               unique_word_count and char_length has 0.85 correlation.\n               char_length and word_length has 0.83 correlation.\n               word_length and stop words has 0.75 correlation.","d7376f8a":"From below bar plot we can say stop words count is less in disaster tweets than real ones.","ccbc5e5c":"Now using scatterplot to check if there is any relation b\/w char count and  unique word count,as shown below there is positive relation that means if char count increases the unique word count increases.","44fdf5c1":"First writing a function to find length of the words in the text and applying it to text feature.","c505e39c":"Now using scatterplot to check if there is any relation b\/w stop words and remaing three created feature,as shown below there is some positive relation b\/w stop words and (word_length,unique_word_count)","763f3e1f":"# In this notebook,i am explaining some basic visualisations on text data.If you are a beginner to NLP,please watch below notebook where i explained some concepts in NLP.","0c9aff84":"# Character count","1438a1b9":"Here also we are creating a feature called unique_word_count,and plotting it using histogram,as shown below most unique word count lies b\/w 8 and 22.","be076b14":"Now plotting top 10 keywords,as shown below fatalities is top keyword","1528e6a2":"# Simple code to get bigrams","a8601590":"Importing nesessary libraries","77d0dff1":"# Please upvote if you like,any suggestions and mistakes put it in comments,Thank you.","d06a741c":"# Stop words count","c7a9dbcb":"We can also use pie chart to percentage of both categories.","da6f97a2":"https:\/\/www.kaggle.com\/sainathkrothapalli\/beginners-approach-to-nlp-problems","0911ef1c":"# Word count"}}