{"cell_type":{"6b6382e6":"code","dc9be95a":"code","b06253d1":"code","7cd59aad":"code","bfc54b7b":"code","d26b7c7c":"code","8ba809df":"code","7916c524":"code","beb22480":"markdown","3026ca01":"markdown","c8e35c51":"markdown","5fe5e637":"markdown","96b4c775":"markdown","0051772e":"markdown","9135a023":"markdown","e689791d":"markdown"},"source":{"6b6382e6":"import numpy as np\nimport pandas as pd","dc9be95a":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')\nsub = pd.read_csv('..\/input\/ventilator-pressure-prediction\/sample_submission.csv')","b06253d1":"nn_breath_id = np.loadtxt('..\/input\/ventilator-pressure-find-nn-u-in-same-r-c\/nn.txt').astype(int)","7cd59aad":"BREATH_LENGTH = 80\nnum_train_breaths = len(train) \/\/ BREATH_LENGTH\nnum_test_breaths  = len(test)  \/\/ BREATH_LENGTH","bfc54b7b":"starts = {}\nfor idx in range(num_train_breaths):\n    starts[train['breath_id'][idx*BREATH_LENGTH]] = idx*BREATH_LENGTH","d26b7c7c":"USE_NN = 3 #How many NN to average over\n\nfor idx in range(num_test_breaths):\n    \n    p = np.zeros(BREATH_LENGTH)\n    \n    for j in range(USE_NN):\n        train_start = starts[nn_breath_id[idx][j]]\n        p += train['pressure'][train_start:train_start + BREATH_LENGTH].values \/ USE_NN\n        \n    sub['pressure'][BREATH_LENGTH*idx:BREATH_LENGTH*(idx+1)] = p","8ba809df":"sub","7916c524":"sub.to_csv('final_submission.csv', index=False)","beb22480":"# Introduction","3026ca01":"# Load data sets, sample submission and nearest neighbors for each test breath","c8e35c51":"# Number of data points per breath, number of breaths in test and train data","5fe5e637":"# Import libraries","96b4c775":"# Check and save","0051772e":"# Dictionary that converts train breath id to position of the first element in the array (trick to speed up)","9135a023":"In this notebook that scores 0.650, we to each breath in the test file assign the average of pressures from several breaths in the train file that\n1. have the same R and C values as the given test breath\n2. have the most similar u_in as measured by chi squared value\n\nWe load the nearest neighbor breath_id precomputed in [this notebook](https:\/\/www.kaggle.com\/motloch\/ventilator-pressure-find-nn-u-in-same-r-c).\n\nWe build on the [exploratory analysis](https:\/\/www.kaggle.com\/motloch\/ventilator-pressure-train-data-exploration) we did earlier.\n\nVersion 4: Average several nearest neighbors","e689791d":"# For each test breath, average pressure from the train breaths with the same R\/C and closest u_in"}}