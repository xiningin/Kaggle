{"cell_type":{"aeaba966":"code","92ec37c3":"code","7896e928":"code","def8ad25":"code","35647e0a":"code","4ff0d957":"code","57855bde":"code","ca194345":"code","31700617":"code","4f96f65b":"code","eee3ea19":"code","9907e297":"code","006445b5":"code","5e5f71a9":"code","1908a411":"code","0830c48b":"code","d4272730":"code","6004c095":"code","ce534ab3":"code","4fba27db":"code","d8b229c4":"code","1681e5fe":"code","079f03c1":"code","9a25b53b":"markdown","8e910db8":"markdown"},"source":{"aeaba966":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import OneHotEncoder\nfrom xgboost import XGBRegressor\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np \nimport os\n\n\nprint(os.listdir(\"..\/input\"))","92ec37c3":"data = pd.read_csv(\"..\/input\/renfe.csv\")\ndata = data.dropna()","7896e928":"data.head(5)","def8ad25":"data.columns","35647e0a":"data = data.drop(\"Unnamed: 0\", axis=1)","4ff0d957":"labels = data[\"price\"]","57855bde":"sns.distplot(labels)\nplt.show()","ca194345":"labels = labels.values.reshape(-1, 1)","31700617":"labels.shape","4f96f65b":"data = data.drop(\"price\", axis=1)","eee3ea19":"col = ['insert_date', 'start_date', 'end_date']\n\nfor i in col:\n    date = pd.to_datetime(data[i])\n    data[i + ':hour'] = date.dt.hour\n    data[i + ':minute'] = date.dt.minute\n    data[i + ':second'] = date.dt.second\n    data[i + ':weekday'] = date.dt.weekday_name\n    data[i + ':day'] = date.dt.day\n    data[i + ':month'] = date.dt.month\n    data[i + ':year'] = date.dt.year","9907e297":"data = data.drop(col, axis=1)","006445b5":"data.shape","5e5f71a9":"data = data.values","1908a411":"encoder = OneHotEncoder()\ndata = encoder.fit_transform(data)","0830c48b":"data.shape","d4272730":"x_train, x_test, y_train, y_test = train_test_split(data, labels, test_size=0.1)","6004c095":"xgbr = XGBRegressor(colsample_bytree=0.4,\n            gamma=0,\n            learning_rate=0.07,\n            max_depth=3,\n            min_child_weight=1.5,\n            n_estimators=1500,                                                                 \n            reg_alpha=0.75,\n            reg_lambda=0.45,\n            subsample=0.6,\n            seed=64)","ce534ab3":"xgbr.fit(x_train, y_train)","4fba27db":"reg = LinearRegression()\n\nreg.fit(x_train, y_train)","d8b229c4":"pred = xgbr.predict(x_test)\nreg_pred = reg.predict(x_test)\n\ny = y_test.reshape(y_test.shape[0], )\n\ndata_ = {'price': y,\n         'XGB_predict': pred,\n         'LinearRegression_predict': reg_pred.reshape(y.shape[0], )}\n\ntest = pd.DataFrame(data=data_)","1681e5fe":"test.head(10)","079f03c1":"print(\"XGBRegressor score: \", xgbr.score(x_test, y_test))\nprint(\"Linear Regression score: \", reg.score(x_test, y_test))","9a25b53b":"**Linear Regression**","8e910db8":"**XGB Regressor**"}}