{"cell_type":{"6d33838d":"code","32056b27":"code","1c79ccc9":"code","7e18f3df":"code","c205ae5d":"code","3762b411":"code","54665f5d":"code","9450c485":"code","df3384da":"code","9941f6d1":"code","7bc78576":"code","e767dbad":"code","10bd86c2":"code","6194d628":"code","af333491":"code","fbcda86f":"code","f2a45c25":"code","c758ac9e":"code","4545ddff":"code","11d3fffb":"code","c87ea3ed":"code","c8225ba2":"code","d18b0cad":"code","98bbd125":"code","1d978583":"code","61d10353":"code","20cd38e3":"code","6c654eca":"code","b7bb553b":"code","d908cfb6":"code","94f3da80":"code","b8dbdae8":"markdown","88720847":"markdown","5aca8eee":"markdown","41b5ee16":"markdown","29ad7e85":"markdown","02d10768":"markdown","8ee275a4":"markdown","f844f9c4":"markdown","a0f93c34":"markdown","49a9ccf7":"markdown","953c503d":"markdown","c4738966":"markdown","649144be":"markdown","4c28edc0":"markdown","969db265":"markdown","9277918c":"markdown","54817e25":"markdown","0b7f5d25":"markdown","67ab5634":"markdown","ea6c1cb4":"markdown","2d296c87":"markdown","915b793f":"markdown","7da04a1a":"markdown","a48a2fde":"markdown"},"source":{"6d33838d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32056b27":"df = pd.read_csv('..\/input\/air-passengers\/AirPassengers.csv')","1c79ccc9":"df.head()","7e18f3df":"df.shape","c205ae5d":"df.isna().sum()","3762b411":"df.info()","54665f5d":"from datetime import datetime","9450c485":"df['Month']=pd.to_datetime(df['Month'],infer_datetime_format=True)\n","df3384da":"df.info()","9941f6d1":"index = df.set_index('Month',inplace=False)","7bc78576":"index.head()","e767dbad":"index.plot()","10bd86c2":"index.rename(columns={'#Passengers':'Passengers'},inplace=True)","6194d628":"simple_ma = index['Passengers'].rolling(window=12).mean()\nsimple_std = index['Passengers'].rolling(window=12).std()","af333491":"plt.title('Data vs Mean vs Std')\nplt.plot(index,color='yellow')\nplt.plot(simple_ma, color='blue')\nplt.plot(simple_std,color='red')","fbcda86f":"from statsmodels.tsa.stattools import adfuller","f2a45c25":"df_test = adfuller(index['Passengers'],autolag='AIC')\ndf_test","c758ac9e":"from statsmodels.tsa.stattools import kpss","4545ddff":"kpss_test = kpss(index['Passengers'],'ct')\nkpss_test","11d3fffb":"index_log = np.log(index)\nma_log = index_log.rolling(window=11).mean()\nstd_log = index_log.rolling(window=12).std()","c87ea3ed":"plt.title(\"Logarithmic Values vs MA vs Std\")\nplt.plot(index_log)\nplt.plot(ma_log)\nplt.plot(std_log)","c8225ba2":"index_new = index_log - ma_log\nindex_new.dropna(inplace=True)","d18b0cad":"ma_new = index_new.rolling(window=11).mean()\nstd_new = index_new.rolling(window=12).std()","98bbd125":"plt.title(\"New Index Values vs MA vs Std\")\nplt.plot(index_new)\nplt.plot(ma_new)\nplt.plot(std_new)","1d978583":"df_test_new = adfuller(index_new['Passengers'],autolag='AIC')\ndf_test_new","61d10353":"from statsmodels.tsa.arima_model import ARIMA","20cd38e3":"model = ARIMA(index_log , order = (2,1,2))\nresults_ARIMA = model.fit(disp=-1)","6c654eca":"predictions = pd.Series(results_ARIMA.fittedvalues, copy=True)\npredictions.head()","b7bb553b":"model2 = ARIMA(index_log , order = (2,1,0))\nresults_ARIMA2 = model2.fit(disp=-1)\nmodel3 = ARIMA(index_log , order = (0,1,2))\nresults_ARIMA3 = model3.fit(disp=-1)","d908cfb6":"predictions2 = pd.Series(results_ARIMA2.fittedvalues, copy=True)\npredictions2.head()","94f3da80":"predictions3 = pd.Series(results_ARIMA3.fittedvalues, copy=True)\npredictions3.head()","b8dbdae8":"Converting date string to datetime data type","88720847":"Link for part 2 https:\/\/www.kaggle.com\/harshsinha1234\/time-series-arima-model-simplified","5aca8eee":" I will take you through time series data its basically a collection of data points over a time interval.","41b5ee16":"# TIME SERIES FORECASTING","29ad7e85":"Conducting the ADCF ie Augmented Dickey Fuller Test. Having the Null Hypothesis to be Time Series is Non Stationary","02d10768":"Setting the index as date so that we can access and traverse values easily, do a substring search and brownie points to the fact that it can help us to visualise easily.","8ee275a4":"Still y'all have a doubt whether Data is stationary or not? Don't worry. Just for your validation, I will conduct another test! That being the KPSS Test","f844f9c4":"Visualising the Passengers","a0f93c34":"As you can see, I have changed the data type now","49a9ccf7":"# ARIMA MODEL CREATION","953c503d":"Output shows the follwoing : Test Statistic 0.16 p-value 0.03 #Lags Used 14 followed by Critical Values at various percentages.\n\nFor Data to not be stationary p value should be < 0.05 and Null Hypothesis should be rejected. Therefore, KPSS test also concludes that data is NOT Stationary\n\n","c4738966":"Trend in the dataset can evidently be seen","649144be":"HURRAY!! No missing values is just the best thing which happened to me today","4c28edc0":"# Checking if the data is stationary","969db265":"After concluding the results from ADFC TEST, p-value has reduced from 0.99 to 0.019 AND critical values at 1%,5%,10% confidence intervals are pretty close to the Test Statistic. Thus,we can say that our given series is stationary.","9277918c":"Loading and Reading the Dataset","54817e25":"***Hey so first things first, Thankyou for opening my kernel. Disclaimer : I am still learning but I have tried to jot down whatever I have understood in this kernel. Ps - Tag along till the end, you'll surely enjoy my commentary if not the code AND please upvote if you like this!!!***","0b7f5d25":"# Transforming Data to Achieve Stationarity","67ab5634":"Typing \"#Passengers\" seems really annoying so I'll just rename it, Hehe.","ea6c1cb4":"The dataset is time series having columns Months and No. of Passengers. Now we will play with the basic pandas function to know more about the dataset.","2d296c87":"So basically you can adopt any of these ways\n-> plot the rooling mean or rolling std to check if the change in mean is constant or not \n-> ADCF Test\n-> KPSS Test\n\nFor a better explanation and your clarity, I will skim you through each of them..","915b793f":"Output shows the follwoing : Test Statistic 0.81 p-value 0.99 #Lags Used 13 No. of Observation Used 130 followed by Critical Values at various percentages.\n\n**For Data to be stationary p value should be < 0.05 and critical values should be close to Test Statistics. Therefore, ADCF test concludes that data is NOT Stationary**","7da04a1a":"This seems to be sligtly better than the precious case. So hand on there guys. We're getting close","a48a2fde":"Steps : \n1. Loading and Indexing the Dataset\n2. Checking if the data is stationary or not ( It should have constant Mean - Variance - Std)\n3. Converting data into stationary \n4. Creating the ARIMA model"}}