{"cell_type":{"bd6b3158":"code","3cc0b6a1":"code","f7536843":"code","e78a0a7b":"code","dfd81fa7":"code","ce5691d2":"code","c7bc37ad":"code","2d00bc05":"code","c8143bbb":"code","600c38f3":"code","c3bdd3bb":"code","8fe3491b":"code","acce5e43":"code","74733d89":"code","dc68463d":"code","6066646a":"code","e3f3da0e":"code","610c4406":"code","eba007b8":"code","ca24aa1f":"code","9f61204e":"code","85243bcb":"code","23e47e36":"code","2bfcd1b3":"code","de0dbe70":"markdown"},"source":{"bd6b3158":"import pandas as pd\nimport numpy as np","3cc0b6a1":"# read data\ndata_path = '..\/input\/lish-moa\/'\ntest = pd.read_csv(data_path + 'test_features.csv')\ntrain = pd.read_csv(data_path + 'train_features.csv')\ndrugs = pd.read_csv(data_path + \"train_drug.csv\")\ntargets_nonscored = pd.read_csv(data_path + \"train_targets_nonscored.csv\")\ntargets_scored = pd.read_csv(data_path + \"train_targets_scored.csv\")","f7536843":"drugs.head()","e78a0a7b":"drugs.shape, train.shape","dfd81fa7":"drugs.drug_id.value_counts()","ce5691d2":"train_df = train.merge(targets_scored,on=\"sig_id\").merge(targets_nonscored,on=\"sig_id\").merge(drugs,on=\"sig_id\")\ntargets_scored_cols = list(targets_scored.columns[1:])\ntargets_nonscored_cols = list(targets_nonscored.columns[1:])\nfeatures_cols = train.columns[1:]\nassert len(features_cols)+len(targets_scored_cols) + len(targets_nonscored_cols) + 1 == train_df.shape[1]-1\ntrain_df.head(2)","c7bc37ad":"train_df.shape","2d00bc05":"drug_num_s = train_df[\"drug_id\"].value_counts()\ndrug_num_s","c8143bbb":"# top 9 are popular\ndrug_num_s.iloc[:10]","600c38f3":"drug_num_s.describe()","c3bdd3bb":"most_populars = list(drug_num_s.index[:9])\nleast_populars = list(drug_num_s[drug_num_s==1].index)\nlen(most_populars), len(least_populars)","8fe3491b":"train_df[\"target_num\"] = train_df[targets_scored_cols].sum(axis=1)\ntrain_df[\"target_num\"].describe()","acce5e43":"train_df[\"target_nonscored_num\"] = train_df[targets_nonscored_cols].sum(axis=1)\ntrain_df[\"target_nonscored_num\"].describe()","74733d89":"train_df.query(\"drug_id in @most_populars\")[\"target_num\"].describe()","dc68463d":"train_df.query(\"drug_id in @least_populars\")[\"target_num\"].describe()","6066646a":"train_df[\"cp_type\"] = train_df[\"cp_type\"].map({\"ctl_vehicle\": 0, \"trt_cp\": 1})\ntrain_df[\"cp_time\"] = train_df[\"cp_time\"].map({24:0, 48:1, 72:2})\ntrain_df[\"cp_dose\"] = train_df[\"cp_dose\"].map({\"D1\":0, \"D2\":1})","e3f3da0e":"for popular_drug in most_populars:\n    drug_target_num = train_df.query(\"drug_id == @popular_drug\")[\"target_num\"]\n    drug_cp_type = train_df.query(\"drug_id == @popular_drug\")[\"cp_type\"]\n    drug_cp_time = train_df.query(\"drug_id == @popular_drug\")[\"cp_time\"]\n    drug_cp_dose = train_df.query(\"drug_id == @popular_drug\")[\"cp_dose\"]\n    print(\"drug_id: {}, count: {}, mean MoA num: {:.2f} \\t Mean cp_type: {:.3f} , Num cp_time 24: {}, 48: {}, 72: {}, mean cp_dose: {:.3f},\".format(popular_drug, \n                                                                                                                                            drug_target_num.count(), \n                                                                                                                                            drug_target_num.mean(),\n                                                                                                                                            drug_cp_type.mean(),\n                                                                                                                                            (drug_cp_time==0).sum(),\n                                                                                                                                            (drug_cp_time==1).sum(),\n                                                                                                                                            (drug_cp_time==2).sum(),\n                                                                                                                                            drug_cp_dose.mean())\n         )","610c4406":"drug_cp_type_proportion = train_df.groupby([\"drug_id\"])[\"cp_type\"].mean() \ndrug_with_two_cp_type = (drug_cp_type_proportion != 1) & (drug_cp_type_proportion != 0)","eba007b8":"# Each drugs are only used in the same cp_type group, all the ctl_vehicle is from 'cacb2b860'\ndrug_with_two_cp_type.sum()","ca24aa1f":"drug_target_num_mean = train_df.groupby([\"drug_id\"])[\"target_num\"].mean() \ndrug_target_nonscored_num_mean = train_df.groupby([\"drug_id\"])[\"target_nonscored_num\"].mean() \n\ndrug_with_different_target_num_mean = (drug_target_num_mean != drug_target_num_mean.astype(int))\ndrug_with_different_target_nonscored_num_mean = (drug_target_nonscored_num_mean != drug_target_nonscored_num_mean.astype(int))","9f61204e":"# Each drug have the same number of MoA individually regardless of different cp_time and cp_dose\ndrug_with_different_target_num_mean.sum(), drug_with_different_target_nonscored_num_mean.sum()","85243bcb":"# check whether or not the target is the same or not\ndrug_targets_df = train_df[[\"drug_id\"]+targets_scored_cols].copy()\ndrug_targets_df.head(2)","23e47e36":"# pick the MoA parts\ndrug_targets_hits_df = drug_targets_df.apply(axis=1, func = lambda s: set(list(s[s==1].index))).to_frame(name = \"targets\")\ndrug_targets_hits_df[\"drug_id\"] = drug_targets_df[\"drug_id\"]\ndrug_targets_hits_df.head()","2bfcd1b3":"# Take the union of targets for each drug\ndrug_targets_hits_s = drug_targets_hits_df.groupby(\"drug_id\")[\"targets\"].apply(func=lambda s: set.union(*s))\ndrug_targets_hits_same = drug_targets_hits_s.apply(len) == train_df.groupby(\"drug_id\")[\"target_num\"].mean()\n# Each drug have the same MoA individually regardless of different cp_time and cp_dose\ndrug_targets_hits_s[~drug_targets_hits_same]","de0dbe70":"# Drugs"}}