{"cell_type":{"af4d8bc8":"code","1248f6fa":"code","e9fb1d0f":"code","661f0a5f":"code","eb8337e8":"code","98ad8e50":"code","716e15a7":"code","e086d8d6":"code","e4d0f227":"code","31aee7df":"code","c843aac3":"code","675e55ab":"code","548f24a5":"code","e2e0f4d8":"code","0fb906db":"code","05fd320e":"code","abb6e565":"code","2f32c961":"code","196344a2":"code","9f1d8559":"code","628bf08b":"code","e9056602":"code","1c8833c1":"code","46b95fea":"code","62ede9ec":"code","b6ccd8c0":"code","9db86785":"code","9a30d71d":"code","13821141":"code","166dd3bf":"code","7f9ad0ac":"code","f677e0d5":"code","f8b35bc2":"code","a8d16fc2":"code","44639446":"code","712ebe26":"code","b1e9baaa":"code","3bc1496d":"code","5585bc27":"code","573c2c94":"code","02d22049":"code","7081da5b":"code","2338cd29":"code","8339032e":"code","57d5e542":"code","12c71062":"code","c7a0ddd8":"code","5a45059f":"code","2fd4ab3a":"code","1652f155":"code","7c5dbcaf":"markdown","ddfbfbbb":"markdown","ab0e1236":"markdown","44b9a22d":"markdown","10c81405":"markdown","29eca6e5":"markdown","c98b4f7c":"markdown","c48f8d95":"markdown","b851b7d9":"markdown","e51a8720":"markdown","733b4f9a":"markdown","efab684e":"markdown","9e2785bf":"markdown"},"source":{"af4d8bc8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1248f6fa":"df= pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","e9fb1d0f":"df.head()","661f0a5f":"df.info()","eb8337e8":"df.shape","98ad8e50":"df.drop('No',axis=1,inplace=True)","716e15a7":"sns.pairplot(df)\nplt.show()","e086d8d6":"sns.histplot(data=df,x='Y house price of unit area',kde=True)\nplt.show()","e4d0f227":"sns.heatmap(df.corr(),annot=True,cmap='Blues')\nplt.show()","31aee7df":"X= df.drop('Y house price of unit area', axis=1)\ny=df['Y house price of unit area']","c843aac3":"from sklearn.preprocessing import PolynomialFeatures","675e55ab":"polynomial_converter= PolynomialFeatures(degree=3, include_bias=False)","548f24a5":"poly_features= polynomial_converter.fit_transform(X)","e2e0f4d8":"poly_features.shape","0fb906db":"from sklearn.model_selection import train_test_split","05fd320e":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","abb6e565":"from sklearn.preprocessing import StandardScaler","2f32c961":"scaler= StandardScaler()","196344a2":"scaler.fit(X_train)","9f1d8559":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","628bf08b":"#Train the Model\nfrom sklearn.linear_model import Ridge","e9056602":"ridge_model= Ridge(alpha=10)","1c8833c1":"ridge_model.fit(X_train, y_train)","46b95fea":"#predict Test Data\ny_pred= ridge_model.predict(X_test)","62ede9ec":"#Evaluating the Model\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nMAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)","b6ccd8c0":"pd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","9db86785":"#Train the Model\nfrom sklearn.linear_model import RidgeCV","9a30d71d":"ridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')","13821141":"ridge_cv_model.fit(X_train, y_train)","166dd3bf":"ridge_cv_model.alpha_","7f9ad0ac":"#Predicting Test Data\ny_pred_ridge= ridge_cv_model.predict(X_test)","f677e0d5":"MAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)","f8b35bc2":"pd.DataFrame([MAE_ridge, MSE_ridge, RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['Ridge Metrics'])","a8d16fc2":"ridge_cv_model.coef_","44639446":"from sklearn.linear_model import LassoCV","712ebe26":"lasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)","b1e9baaa":"lasso_cv_model.fit(X_train, y_train)","3bc1496d":"lasso_cv_model.alpha_","5585bc27":"y_pred_lasso= lasso_cv_model.predict(X_test)","573c2c94":"MAE_Lasso= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso= np.sqrt(MSE_Lasso)","02d22049":"pd.DataFrame([MAE_Lasso, MSE_Lasso, RMSE_Lasso], index=['MAE', 'MSE', 'RMSE'], columns=['Lasso Metrics'])","7081da5b":"lasso_cv_model.coef_","2338cd29":"from sklearn.linear_model import ElasticNetCV","8339032e":"elastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=100000)","57d5e542":"elastic_model.fit(X_train, y_train)","12c71062":"elastic_model.l1_ratio_","c7a0ddd8":"y_pred_elastic=elastic_model.predict(X_test)","5a45059f":"MAE_Elastic= mean_absolute_error(y_test, y_pred_elastic)\nMSE_Elastic= mean_squared_error(y_test, y_pred_elastic)\nRMSE_Elastic= np.sqrt(MSE_Elastic)","2fd4ab3a":"pd.DataFrame([MAE_Elastic, MSE_Elastic, RMSE_Elastic], index=['MAE', 'MSE', 'RMSE'], columns=['Elastic Metrics'])","1652f155":"elastic_model.coef_","7c5dbcaf":"# Determine the Features & Target Variable (Lable)","ddfbfbbb":"### 1- Ridge Regression","ab0e1236":"# Split the Data to Train & Test","44b9a22d":"### 3- Elastic Net","10c81405":"# Import Necessary Libraries","29eca6e5":"# Import the Data","c98b4f7c":"# Data Overview","c48f8d95":"# Preprocessing ","b851b7d9":"# Ridge Regression ","e51a8720":"### 2- Lasso Regression","733b4f9a":"# Regularization","efab684e":"# EDA","9e2785bf":"# Scaling the Features"}}