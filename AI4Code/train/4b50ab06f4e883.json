{"cell_type":{"c1b08fd5":"code","2b935fa0":"code","b265cac1":"code","c291886f":"code","653fedb6":"code","6388b744":"code","53631e3d":"code","80d8d260":"code","76da5e9c":"code","e43c5f8f":"code","7402195e":"code","48a144cb":"code","cf92875d":"code","8981f00e":"code","6f9419f6":"code","dd883020":"code","b9d0b50f":"code","50af98cc":"code","c9426cee":"code","0b614ffd":"code","8cda8f66":"code","c5dbfbcb":"code","c5ebd271":"code","036abe48":"code","61776e08":"code","bc56e033":"code","ad4a35fb":"code","23088597":"code","afd7844b":"code","8f5d0931":"code","c00414b0":"markdown","2da122d8":"markdown","b06a2349":"markdown","4154b5fd":"markdown","4e357d1d":"markdown","e8f421c2":"markdown","06a5859a":"markdown","b2c9e585":"markdown"},"source":{"c1b08fd5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import train_test_split","2b935fa0":"data= pd.read_csv('..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv')","b265cac1":"data.head()","c291886f":"print (\"Rows     : \" ,data.shape[0])\nprint (\"Columns  : \" ,data.shape[1])\nprint (\"\\nFeatures : \\n\" ,data.columns.tolist())\nprint (\"\\nMissing values :  \", data.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",data.nunique())","653fedb6":"#dropout customerID becouse it is not usefull for Churn\ndata=data.drop(['customerID'],axis=1)\ndata.head()","6388b744":"# Checking the data types of all the columns\ndata.info()","53631e3d":"import seaborn as sns\nsns.set(style=\"ticks\", color_codes=True)\ndf=data\nfig, axes = plt.subplots(nrows = 3,ncols = 5,figsize = (25,15))\nsns.countplot(x = \"gender\", data = df, ax=axes[0][0])\nsns.countplot(x = \"Partner\", data = df, ax=axes[0][1])\nsns.countplot(x = \"Dependents\", data = df, ax=axes[0][2])\nsns.countplot(x = \"PhoneService\", data = df, ax=axes[0][3])\nsns.countplot(x = \"MultipleLines\", data = df, ax=axes[0][4])\nsns.countplot(x = \"InternetService\", data = df, ax=axes[1][0])\nsns.countplot(x = \"OnlineSecurity\", data = df, ax=axes[1][1])\nsns.countplot(x = \"OnlineBackup\", data = df, ax=axes[1][2])\nsns.countplot(x = \"DeviceProtection\", data = df, ax=axes[1][3])\nsns.countplot(x = \"TechSupport\", data = df, ax=axes[1][4])\nsns.countplot(x = \"StreamingTV\", data = df, ax=axes[2][0])\nsns.countplot(x = \"StreamingMovies\", data = df, ax=axes[2][1])\nsns.countplot(x = \"Contract\", data = df, ax=axes[2][2])\nsns.countplot(x = \"PaperlessBilling\", data = df, ax=axes[2][3])\nax = sns.countplot(x = \"PaymentMethod\", data = df, ax=axes[2][4])\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nplt.show(fig)","80d8d260":"# Converting Total Charges to a numerical data type\ndata['TotalCharges'] = pd.to_numeric(data.TotalCharges, errors='coerce')\ndata.isnull().sum()","76da5e9c":"data = data.dropna()\ndata.isnull().sum()","e43c5f8f":"fig, (ax1, ax2, ax3) = plt.subplots(3)\nsns.kdeplot(data[\"tenure\"], shade=True, color=\"b\",ax = ax1)\nsns.kdeplot(data[\"MonthlyCharges\"], shade=True, color=\"r\", ax = ax2)\nsns.kdeplot(data[\"TotalCharges\"], shade=True, color=\"g\", ax = ax3)\nfig.tight_layout()\nplt.show(fig)","7402195e":"data.info()","48a144cb":"data=pd.get_dummies(data,drop_first=True)\ndata.head()","cf92875d":"data.info()","8981f00e":"X = data.drop(['Churn_Yes'],axis=1)\nY = data['Churn_Yes']\nprint(X.shape,'\\n',Y.shape)","6f9419f6":"X = X.astype('float32')\nY = Y.astype('float32')","dd883020":"from sklearn.model_selection import train_test_split\nX_train , X_test , Y_train , Y_test = train_test_split(X ,Y , test_size =.10 ,random_state = 0)","b9d0b50f":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train=sc.fit_transform(X_train)\nX_test=sc.transform(X_test)","50af98cc":"from sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier(random_state=0)\ndtc.fit(X_train,Y_train)","c9426cee":"y_pred = dtc.predict(X_test)\n# Print the prediction accuracy\nprint (metrics.accuracy_score(Y_test, y_pred))\nprint(classification_report(Y_test, y_pred))","0b614ffd":"from sklearn.ensemble import RandomForestClassifier\nrfc =RandomForestClassifier()\nrfc.fit(X_train,Y_train)","8cda8f66":"y_pred = rfc.predict(X_test)\n# Print the prediction accuracy\nprint (metrics.accuracy_score(Y_test, y_pred))\nprint(classification_report(Y_test, y_pred))","c5dbfbcb":"# Fitting Logistic Regression to the Training set\nfrom sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, Y_train)","c5ebd271":"y_pred = classifier.predict(X_test)\nprint (metrics.accuracy_score(Y_test, y_pred))\nprint(classification_report(Y_test, y_pred))","036abe48":"from keras.utils.np_utils import to_categorical\nY_train = to_categorical(Y_train)\nY_test = to_categorical(Y_test)","61776e08":"Nx=X_train.shape[1:][0]\nNy=Y_train.shape[1:][0]\nprint(Nx,Ny)","bc56e033":"from tensorflow.keras.layers import Input, Dense\nfrom keras.models import Sequential\n\ninput_layer = Input(shape = X_train.shape[1:])\nhidden_layer = Dense(10, activation = 'relu',)(input_layer)\nhidden_layer = Dense(10, activation = 'relu',)(hidden_layer)\noutput_layer = Dense(2, activation = 'sigmoid')(hidden_layer)","ad4a35fb":"from tensorflow.keras.models import Model\nfrom tensorflow.keras import optimizers\nmodel = Model(inputs=[input_layer], outputs=[output_layer])\nmodel.compile(optimizer=optimizers.Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\nmodel.summary()","23088597":"history = model.fit(X_train, Y_train, epochs=50)","afd7844b":"from sklearn.metrics import confusion_matrix\nloss, accuracy = model.evaluate(X_test, Y_test,verbose=0)  # Evaluate the model\nprint('Accuracy :%0.3f'%accuracy)","8f5d0931":"history.history.keys()\nimport matplotlib.pyplot as plt\nplt.plot(range(len(history.history['acc'])), history.history['acc'],c='blue')\nplt.plot(range(len(history.history['loss'])), history.history['loss'],c='red')\nplt.show()","c00414b0":"##Data Manipulation","2da122d8":"##Implement Machine Learning Models","b06a2349":"##Understanding the data","4154b5fd":"# INSAID Hiring Exercise","4e357d1d":"### Importing the data","e8f421c2":"## Important: Kindly go through the instructions mentioned below.\n\n- The Sheet is structured in **4 steps**:\n    1. Understanding data and manipulation\n    2. Data visualization\n    3. Implementing Machine Learning models(Note: It should be more than 1 algorithm)\n    4. Model Evaluation and concluding with the best of the model.\n    \n    \n    \n\n- Try to break the codes in the **simplest form** and use number of code block with **proper comments** to them\n- We are providing **h** different dataset to choose from(Note: You need to select any one of the dataset from this sample sheet only)\n- The **interview calls** will be made solely based on how good you apply the **concepts**.\n- Good Luck! Happy Coding!","06a5859a":"#Using Keras","b2c9e585":"##With LogisticRegression and Deep NN  I was able to increase the accuracy to upto 82%"}}