{"cell_type":{"15a791f5":"code","58d68b62":"code","e9abddc9":"code","6bc7a0bb":"code","67c39fac":"code","ce8a2b91":"code","975408e7":"code","2254d74c":"code","126ff052":"code","cd8536df":"code","7ddb5a00":"code","669a3382":"code","89b1e6a1":"code","594b293b":"code","ae37b37a":"code","9d5d4424":"code","6df5f337":"code","fdcf9d79":"code","df7ecdf1":"markdown","cbf618ca":"markdown","be3211ed":"markdown","0dea83b5":"markdown","90009414":"markdown","726cd9f7":"markdown","9820857e":"markdown","dd24566a":"markdown","6c4e35e7":"markdown","fbfcc4cc":"markdown","c20bc4dc":"markdown","d0deb0a7":"markdown","186a18ef":"markdown","c94124fc":"markdown","cc3a66e7":"markdown","670baafe":"markdown","a383c24b":"markdown","f4006c73":"markdown","fa08a9ab":"markdown"},"source":{"15a791f5":"import pandas as pd\nimport numpy as np\nimport cv2\nimport keras.models as M\nimport keras.layers as L\nimport os\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nfrom IPython.display import clear_output\nimport keras","58d68b62":"image=Image.open('..\/input\/dogs-cats-images\/dataset\/training_set\/dogs\/dog.2.jpg')\nimage=image.convert('L')\nimage=np.array(image)\nplt.imshow(image)","e9abddc9":"a,b,x=plt.hist(image.flatten())\n","6bc7a0bb":"def get_threshold(image) :\n    a,b,x=plt.hist(image.flatten())\n    arg=np.argmax(a)\n    threshold=[b[arg],b[arg+1]]\n    plt.clf()\n    return threshold\ndef make_mask(path,color='blue',print_plot=False):\n    image=Image.open(path)\n    image=image.resize((150,150))\n    image=image.convert('L')\n    image=np.array(image)\n    threshold=get_threshold(image)\n    if color=='blue' :\n        n=[0,0,255]\n    masked_image=[]\n    for i in image.flatten() :\n        if i >= threshold[0] and i<=threshold[1] :\n            masked_image.append(255)\n        else:\n            masked_image.append(0)\n    masked_image=np.array(masked_image)\n    masked_image=masked_image.reshape(image.shape)\n    if print_plot==True :\n        plt.imshow(masked_image)\n    return masked_image\n        \n    ","67c39fac":"arr=make_mask('..\/input\/dogs-cats-images\/dataset\/training_set\/dogs\/dog.1001.jpg',print_plot=True)","ce8a2b91":"# Adding the paths\ndog_path='..\/input\/dogs-cats-images\/dataset\/training_set\/dogs'\ncats_path='..\/input\/dogs-cats-images\/dataset\/training_set\/cats'","975408e7":"# Making the data\nX=[]\ny=[]\ncount=0\nfor i in os.listdir(dog_path)[:1000]:\n    print(count*100\/1000)\n    clear_output(wait=True)\n    count+=1\n    X.append(make_mask(dog_path+'\/'+i))\n\ny=[1]*1000","2254d74c":"# Making mask image data for cats\nx2=[]\ny2=[]\ncount=0\nfor i in os.listdir(cats_path)[:1000]:\n    print(count*100\/1000)\n    clear_output(wait=True)\n    count+=1\n    x2.append(make_mask(cats_path+'\/'+i))\ny2=[0]*1000","126ff052":"# Getting all the data together\nX.extend(x2)\ny.extend(y2)\nX=np.array(X)\ny=np.array(y)\nX2=X\/255","cd8536df":"X_train, X_test, y_train, y_test = train_test_split( X2, y, test_size=0.15, random_state=42 )","7ddb5a00":"model=M.Sequential()\nmodel.add(L.Reshape((150,150,1)))\nmodel.add(L.Conv2D(kernel_size=(3,3),filters=32,input_shape=(150,150),activation='relu'))\nmodel.add(L.MaxPool2D(pool_size=(2,2)))\nmodel.add(L.Conv2D(kernel_size=(3,3),filters=64,activation='relu'))\nmodel.add(L.MaxPool2D(pool_size=(2,2)))\nmodel.add(L.Flatten())\nmodel.add(L.Dense(1000,activation='tanh'))\nmodel.add(L.Dense(100,'relu'))\nmodel.add(L.Dense(2,activation='softmax'))","669a3382":"model.summary()","89b1e6a1":"model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])","594b293b":"model.fit(X_train,y_train,epochs=20,validation_data=(X_test,y_test))","ae37b37a":"keras.models.save_model(model,'mask_model.h5')","9d5d4424":"def make_predictions(path) :\n    l=['Cats','Dogs']\n    print('The masked image is :')\n    arr=make_mask(path,print_plot=True)\n    arr=np.array(arr)\n    arr=arr.reshape(1,150,150)\n    clas=np.argmax(model.predict(arr),axis=-1)\n    print(l[clas[0]])\n    ","6df5f337":"\nmake_predictions('..\/input\/dogs-cats-images\/dataset\/test_set\/dogs\/dog.4005.jpg')","fdcf9d79":"make_predictions('..\/input\/dogs-cats-images\/dataset\/test_set\/cats\/cat.4008.jpg')","df7ecdf1":"# Compiling the model","cbf618ca":"# Saving the model","be3211ed":"![](https:\/\/automaticaddison.com\/wp-content\/uploads\/2019\/11\/fruits-table-1200x241.jpg)","0dea83b5":"# Doing Train Test Split","90009414":"# Let's Make a Function to get the threshold and make masked images","726cd9f7":"# I can't understand the second image at all but our model predicted it right :)","9820857e":"# Making the model","dd24566a":"# Masking And Trying CNN On It","6c4e35e7":"# Doing some predictions","fbfcc4cc":"In this file i tried something new for me . I have created masks for the dogs and cats images using threshold and then trained the model on it and done some predictions . ","c20bc4dc":"# Training The model","d0deb0a7":"# Thank you :)","186a18ef":"# Making Masked Data (Only 1000 for each class since it takes some time)","c94124fc":"### Threshold looks like it lies between 135-160","cc3a66e7":"# Making a function to do some predicitons for us","670baafe":"# Having a look at the histogram to get the threshold of the image ","a383c24b":"# Importing the packages","f4006c73":"# Having a look at the data","fa08a9ab":"# Having a look at the data"}}