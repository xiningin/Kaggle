{"cell_type":{"28ab7ccc":"code","4d933906":"code","a704285d":"code","cf966136":"code","50c1045a":"code","a5a85ac0":"code","a9b32cb4":"code","7fd8dbb0":"code","895c7afa":"code","37a2faad":"code","804d1526":"code","10c79c0b":"code","32136d0a":"code","45b9215a":"code","647f58b2":"code","d31dcd91":"code","4cd58d5c":"code","be294350":"code","224ff001":"code","4baf81a1":"code","58003322":"code","12dcd782":"code","41913010":"code","58f20eb4":"code","c5fd6eb4":"markdown","3a209820":"markdown","658368e8":"markdown","fbc313c0":"markdown","be92e3b9":"markdown","38ac88cd":"markdown","e7145cf2":"markdown","4012cbef":"markdown"},"source":{"28ab7ccc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d933906":"df = pd.read_csv('\/kaggle\/input\/salaries-by-college-major\/salaries_by_college_major.csv')","a704285d":"df.head()","cf966136":"df.shape","50c1045a":"df.columns","a5a85ac0":"df.isna()","a9b32cb4":"df.tail()","7fd8dbb0":"clean_df = df.dropna()\nclean_df.tail()","895c7afa":"clean_df['Starting Median Salary'].max()","37a2faad":"clean_df['Starting Median Salary'].idxmax()","804d1526":"clean_df['Starting Median Salary'][43]","10c79c0b":"clean_df['Undergraduate Major'].loc[43]","32136d0a":"clean_df['Undergraduate Major'][43]","45b9215a":"clean_df.loc[43]","647f58b2":"print(clean_df['Mid-Career Median Salary'].max())\nprint(f\"Index for the max mid career salary: {clean_df['Mid-Career Median Salary'].idxmax()}\")\nclean_df['Undergraduate Major'][8]","d31dcd91":"print(clean_df['Starting Median Salary'].min())\nclean_df['Undergraduate Major'].loc[clean_df['Starting Median Salary'].idxmin()]","4cd58d5c":"clean_df.loc[clean_df['Mid-Career Median Salary'].idxmin()]","be294350":"# clean_df['Mid-Career 90th Percentile Salary'] - clean_df['Mid-Career 10th Percentile Salary']\n# clean_df['Mid-Career 90th Percentile Salary'].subtract(clean_df['Mid-Career 10th Percentile Salary'])\nspread_col = clean_df['Mid-Career 90th Percentile Salary'] - clean_df['Mid-Career 10th Percentile Salary']\nclean_df.insert(1, 'Spread', spread_col)\nclean_df.head()","224ff001":"low_risk = clean_df.sort_values('Spread')\nlow_risk[['Undergraduate Major', 'Spread']].head()","4baf81a1":"highest_potential = clean_df.sort_values('Mid-Career 90th Percentile Salary', ascending=False)\nhighest_potential[['Undergraduate Major', 'Mid-Career 90th Percentile Salary']].head()","58003322":"highest_spread = clean_df.sort_values('Spread', ascending=False)\nhighest_spread[['Undergraduate Major', 'Spread']].head()","12dcd782":"highest_spread = clean_df.sort_values('Mid-Career Median Salary', ascending=False)\nhighest_spread[['Undergraduate Major', 'Mid-Career Median Salary']].head()","41913010":"clean_df.groupby('Group').count()","58f20eb4":"pd.options.display.float_format = '{:,.2f}'.format\nclean_df.groupby('Group').mean()","c5fd6eb4":"## Upload the Data and Read the .csv File","3a209820":"# Grouping and Pivoting Data with Pandas","658368e8":"# Data Exploration and Data Cleaning","fbc313c0":"# Salaries by College Major\n\nThis is the first exercise I ever did on the topic of Data Analysis.\nNo visualisations yet - see later exercises.\nI got the data set and the exercise from Angela Yu on her brilliant 100 Days of Python course on udemy.com","be92e3b9":"# Sorting Values & Adding Columns: Majors with the Most Potential vs Lowest Risk","38ac88cd":"# Degrees with the Highest Potential","e7145cf2":"# Accessing Columns and Individual Cells","4012cbef":"# Highest and Lowest Earning Degrees"}}