{"cell_type":{"675c2917":"code","53ccdbc7":"code","46999cf3":"code","2392e086":"code","d11942f0":"code","f366bc9d":"code","eb3b0e18":"code","32dd4012":"code","038298b4":"code","a8393018":"code","42677c60":"code","761a09ba":"code","8d9f84aa":"code","9087d05c":"code","85952917":"code","3251aa97":"code","74ba14a0":"code","2b9f0a5a":"code","1508a59f":"code","ba491393":"code","3acda948":"code","8592b3c1":"markdown","5e614088":"markdown","9a99e077":"markdown","84f50fc2":"markdown","8d3be537":"markdown","c16892d2":"markdown","313a3b10":"markdown","3efc676b":"markdown","b54b1cbd":"markdown"},"source":{"675c2917":"#!git clone https:\/\/github.com\/automl\/Auto-PyTorch.git","53ccdbc7":"#cd Auto-PyTorch","46999cf3":"#!cat requirements.txt | xargs -n 1 -L 1 pip install\n","2392e086":"#!python setup.py install","d11942f0":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom keras.utils import np_utils\nfrom keras.callbacks import ReduceLROnPlateau\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n%matplotlib inline","f366bc9d":"from autoPyTorch import AutoNetClassification\n\n# data and metric imports\nimport sklearn.model_selection\nimport sklearn.datasets\nimport sklearn.metrics","eb3b0e18":"#cd ..","32dd4012":"train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")","038298b4":"Y_train = train[\"label\"]\nX_train = train.drop(labels = [\"label\"],axis = 1) ","a8393018":"X_train.isnull().any().describe()","42677c60":"test.isnull().any().describe()","761a09ba":"X_train = X_train\/255.0\ntest = test\/255.0\n\nX_train = X_train.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)","8d9f84aa":"# plotting the first five training images\nfig = plt.figure(figsize=(20,20))\nfor i in range(5):\n    ax = fig.add_subplot(1, 5, i+1, xticks=[], yticks=[])\n    ax.imshow(X_train[i].reshape(28,28), cmap='gray')\n    ax.set_title(str(Y_train[i]))","9087d05c":"Y_train = np_utils.to_categorical(Y_train, num_classes=10)\n\n# print the first five encoded training labels\nprint('One-hot Encoded labels:')\nprint(Y_train[:10])","85952917":"X, y = sklearn.datasets.load_digits(return_X_y=True)\nX_train, X_test, y_train, y_test = \\\n        sklearn.model_selection.train_test_split(X, y, random_state=69)","3251aa97":"autoPyTorch = AutoNetClassification(\"tiny_cs\",  # config preset\n                                    log_level='info',\n                                    max_runtime=300,\n                                    min_budget=30,\n                                    max_budget=90)","74ba14a0":"autoPyTorch.fit(X_train, y_train, validation_split=0.3)","2b9f0a5a":"Y_test = autoPyTorch.predict(X_test)","1508a59f":"Y_test_true = autoPyTorch.predict(test)","ba491393":"submission = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsubmission['Label'] = Y_test\nsubmission.to_csv('submission.csv',index=False)","3acda948":"submission_true = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsubmission_true['Label'] = Y_test_true\nsubmission_true.to_csv('submission_true.csv',index=False)","8592b3c1":"## Examining the Training Data","5e614088":"# Auto-PyTorch Implementation\n\n- For more documentation see: https:\/\/github.com\/automl\/Auto-PyTorch and https:\/\/www.automl.org\/automl\/autopytorch\/\n- Please upvote this kerel if you found it helpful! :)","9a99e077":"### Check for Null or Missing Values","84f50fc2":"## Loading The Data","8d3be537":"### Splitting the Data (For built-in)","c16892d2":"# Auto-PyTorch Model","313a3b10":"## Applying One-hot Encoding to Labels","3efc676b":"## Import Required Libraries","b54b1cbd":"### Normalization, Reshaping, Label Encoding"}}