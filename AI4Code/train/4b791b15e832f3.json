{"cell_type":{"a4a5e696":"code","03eba40e":"code","0f2b8a11":"code","6b139c77":"code","f087cc82":"code","dee8505b":"code","6b7a5462":"code","d7ce2668":"code","d632644c":"code","e2fd4871":"code","4ef1f284":"code","f5ee31a9":"code","b6c0ab42":"code","9c580746":"code","81a08694":"code","827f0226":"code","893f1655":"code","be0c40df":"code","aed593a3":"code","50ab7018":"code","013f739e":"code","97f6c841":"code","c17bc8a6":"code","bada4a61":"code","1f890539":"code","e6c793ba":"code","e68553b9":"code","a46258b8":"code","d391f42d":"code","2096e4e1":"code","56361816":"code","c837f940":"code","b84ebbfe":"code","d22bc4ea":"code","8ad51ee3":"code","3db30cae":"code","d7aa6e32":"code","4ca9a2c2":"code","7cb74e2b":"code","0b4208b8":"code","be03bffd":"code","91c0ac9c":"code","aa38095c":"code","1b47c8bd":"code","7bd2703e":"code","19af0357":"code","f9752657":"code","64b9e734":"code","ea618302":"code","60c03c71":"code","3606c963":"code","0ee8ab5e":"code","3ce44926":"code","9b702dbb":"code","0dfe3f98":"code","2399b987":"code","6a541997":"code","280f498c":"markdown","fd60ca2d":"markdown","13e1d858":"markdown","f5c5787d":"markdown","41a60f5f":"markdown","c3bf6984":"markdown","32cc5f26":"markdown","c3468616":"markdown","f82e2b59":"markdown","5e379d84":"markdown","b1807d70":"markdown","35e07fb7":"markdown","7086c4d9":"markdown","f861fd44":"markdown","2e669ec5":"markdown","e980fec6":"markdown","41cc84f7":"markdown","75d9dd2b":"markdown","72fa5e5d":"markdown","fa20e9e2":"markdown","a7d08f7a":"markdown","bfdac28c":"markdown","1fcdab37":"markdown","0498f5ae":"markdown","f6791397":"markdown","3ec0b9fd":"markdown","15ff61d8":"markdown","0bf5fee5":"markdown","406ac13e":"markdown","39a6724a":"markdown","5066fe1a":"markdown"},"source":{"a4a5e696":"import pandas as pd \nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt \nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score, fbeta_score, classification_report\nimport joblib # Saving model for deployment \n\n# Showing Plots inside notebook\n%matplotlib inline  \nsns.set(rc={'figure.figsize': [7, 7]}, font_scale=1.2) # Standard figure size for all ","03eba40e":"# Reading Csv \ndf = pd.read_csv(\"..\/input\/loan-data\/train.csv\")\ndf.sample(15)","0f2b8a11":"# Find some relations \nsns.pairplot(df);","6b139c77":"# showing Statistics \ndf.describe()","f087cc82":"df.info()","dee8505b":"df.Married.value_counts()","6b7a5462":"df.Dependents.value_counts()","d7ce2668":"df.Loan_Amount_Term.value_counts()","d632644c":"df['Loan_Amount_Term'].mean()","e2fd4871":"df.Credit_History.value_counts()","4ef1f284":"# Correlation matrix \ndf.corr()","f5ee31a9":"sns.countplot(x='Gender' , data=df ,palette='mako');\nplt.title(\"the counts of Gender\", {'weight' : 'bold','size': 22}); ","b6c0ab42":"sns.countplot(x='Married' , data=df,palette='mako')\nplt.title(\"the counts of Social status\", {'weight' : 'bold','size': 22});","9c580746":"sns.countplot(x='Dependents' , data=df,palette='mako')\nplt.title(\"the counts of Dependents\", {'weight' : 'bold','size': 22});","81a08694":"sns.countplot(x='Education' , data=df,palette='mako')\nplt.title(\"the counts of Education\", {'weight' : 'bold','size': 22});","827f0226":"sns.countplot(x='Property_Area' , data=df,palette='mako')\nplt.title(\"the counts of Property Area\", {'weight' : 'bold','size': 22});","893f1655":"sns.countplot(x='Self_Employed' , data=df,palette='mako')\nplt.title(\"the counts of work status\", {'weight' : 'bold','size': 22});","be0c40df":"sns.countplot(x='Credit_History' , data=df,palette='mako')\nplt.title(\"the counts of Credit_History\", {'weight' : 'bold','size': 22});","aed593a3":"income = df[df['ApplicantIncome'] < 8000].ApplicantIncome # To Handle Outliers \nsns.histplot(x=income , data=df)\nplt.title(\"Applicant Income Distripution\", {'weight' : 'bold','size': 22});","50ab7018":"income = df[df['LoanAmount'] < 400].LoanAmount # To Handle Outliers \nsns.histplot(x=income , data=df)\nplt.title(\"Loan Amout Distripution\", {'weight' : 'bold','size': 22});","013f739e":"sns.catplot(x=\"Gender\", y=\"LoanAmount\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum ,palette='viridis');\nplt.title(\"Relationship Between Loan Amout & Gender\", {'weight' : 'bold','size': 16});","97f6c841":"sns.catplot(x=\"Married\", y=\"LoanAmount\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum,palette='viridis');\nplt.title(\"Relationship Between Loan Amout & Social status\", {'weight' : 'bold','size': 16});","c17bc8a6":"sns.catplot(x=\"Self_Employed\", y=\"ApplicantIncome\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum,palette='viridis');\nplt.title(\"Relationship Between Applicant Income & work status\", {'weight' : 'bold','size': 16});","bada4a61":"sns.catplot(x=\"Property_Area\", y=\"ApplicantIncome\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum,palette='viridis');\nplt.title(\"Relationship Between Applicant Income & Area\", {'weight' : 'bold','size': 16});","1f890539":"sns.catplot(x=\"Gender\", y=\"Loan_Amount_Term\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum,palette='viridis');\nplt.title(\"Relationship Between Loan Term & Gender\", {'weight' : 'bold','size': 16});","e6c793ba":"sns.catplot(x=\"Credit_History\", y=\"LoanAmount\", data=df, height=6, aspect=1.3, kind=\"bar\",  estimator=np.sum,palette='viridis');\nplt.title(\"Relationship Between Loan Amount & Credit History\", {'weight' : 'bold','size': 16});","e68553b9":"columns = ['Gender','Married','Dependents','Self_Employed','Credit_History']\nfor i in columns : \n    mode = df[i].mode().values[0] \n    df[i] = df[i].replace({ np.nan : mode })","a46258b8":"# Dependents column\nmean = df['Loan_Amount_Term'].mean()\ndf['Loan_Amount_Term'] = df['Loan_Amount_Term'].replace({ np.nan : mean })","d391f42d":"df.drop(list(df.query('LoanAmount == \"NaN\" ').index) , inplace=True)","2096e4e1":"df['Credit_History'] = df['Credit_History'].astype(\"string\")","56361816":"df = df.convert_dtypes()","c837f940":"df[\"Loan_Amount_Term\"] = df[\"Loan_Amount_Term\"]\/12","b84ebbfe":"df = pd.get_dummies(df,columns=['Gender','Married','Dependents','Education','Self_Employed','Credit_History','Property_Area','Loan_Status'],drop_first=True)","d22bc4ea":"df.isnull().sum()","8ad51ee3":"df.info()","3db30cae":"df = df.dropna()","d7aa6e32":"df.isnull().sum()","4ca9a2c2":"def plot_feature_importance(importance,names,model_type):\n\n    #Create arrays from feature importance and feature names\n    feature_importance = np.array(importance)\n    feature_names = np.array(names)\n\n    #Create a DataFrame using a Dictionary\n    data={'feature_names':feature_names,'feature_importance':feature_importance}\n    fi_df = pd.DataFrame(data)\n\n    #Sort the DataFrame in order decreasing feature importance\n    fi_df.sort_values(by=['feature_importance'], ascending=False,inplace=True)\n\n    #Define size of bar plot\n    plt.figure(figsize=(10,8))\n    #Plot Searborn bar chart\n    sns.barplot(x=fi_df['feature_importance'], y=fi_df['feature_names'])\n    #Add chart labels\n    plt.title(model_type + ' FEATURE IMPORTANCE')\n    plt.xlabel('FEATURE IMPORTANCE')\n    plt.ylabel('FEATURE NAMES')","7cb74e2b":"X = df.iloc[:,1:15]\nY = df['Loan_Status_Y']\nrand_f = RandomForestClassifier().fit(X, Y)\n\nplot_feature_importance(rand_f.feature_importances_, X.columns, 'RANDOM FOREST')","0b4208b8":"x = df[['Credit_History_1.0','ApplicantIncome','CoapplicantIncome','LoanAmount','Loan_Amount_Term','Gender_Male']]\ny = df['Loan_Status_Y']","be03bffd":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=90)","91c0ac9c":"scaler = StandardScaler()\nscaler.fit(x_train)","aa38095c":"x_train = scaler.transform(x_train)\nx_test = scaler.transform(x_test)","1b47c8bd":"model =  RandomForestClassifier(n_estimators=60)","7bd2703e":"model.fit(x_train, y_train)","19af0357":"y_pred = model.predict(x_test)","f9752657":"print(f'Training Accuracy: {(model.score(x_train, y_train))*100}%')","64b9e734":"print(f'Testing Accuracy: {round((accuracy_score(y_test, y_pred))*100)}%')","ea618302":"print(f'Testing Confusion Matrix: \\n{confusion_matrix(y_test, y_pred)}')","60c03c71":"print(f'Testing Recall: {recall_score(y_test, y_pred)}')    ","3606c963":"print(f'Testing Precesion: {precision_score(y_test, y_pred)}')","0ee8ab5e":"print(f'Testing F-1: {f1_score(y_test, y_pred)}')","3ce44926":"print(f'Testing F-Beta: {fbeta_score(y_test, y_pred, beta=0.5)}')","9b702dbb":"# Saving model \njoblib.dump(model, 'model.h5')","0dfe3f98":"# Saving Scalar \njoblib.dump(scaler, 'scaler.h5')","2399b987":"# Storing variables\n# custom_data = []\n# for inp in x.columns:\n#     print(f'{inp}: ')\n#     val = float(input())\n#     custom_data.append(val)\n\n# data = []\n# for v in custom_data:\n#     data.append(float(v))","6a541997":"# Predict \n#model.predict(scaler.transform([data]))","280f498c":"<a id=\"5.2\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.2. Edit Types<\/b><\/font>","fd60ca2d":"- The number of male applicants for loan is more than three times the number of females.\n- Most of the loan applicants are independent people and not self-employed.\n- The number of non-graduate applicants is small compared to graduates.\n- Most of the applicants' income range from 2000 - 5000 Dollars.\n- The most requested loans range from 100 - 160 thousand Dollars.","13e1d858":"<a id=\"5.6\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.6. Feature Scaling<\/b><\/font>","f5c5787d":"> Description ","41a60f5f":"<a id=\"5.1\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.1. Cleansing - Missing values<\/b><\/font>","c3bf6984":"<a id=\"5.3\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.3. Encoding Data<\/b><\/font>","32cc5f26":"<a id=\"4.3\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>4.3. Conclusions<\/b><\/font>","c3468616":"> Important Distriputions Conclusions","f82e2b59":"<a id=\"4.1\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>4.1. Data Distripution<\/b><\/font>","5e379d84":"<h1 style='text-align:center;'>Loan Prediction - Will your loan application be accepted?<\/h1>","b1807d70":"<a id=\"7\"><\/a>\n<font color=\"#089371\" size=+2.5><b>7. Deployment<\/b><\/font>","35e07fb7":"<a id=\"5.4\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.4. Feature Selection<\/b><\/font>","7086c4d9":"<a id=\"1\"><\/a>\n<font color=\"#089371\" size=+2.5><b>1. Import Modules<\/b><\/font>","f861fd44":"<a id=\"4\"><\/a>\n<font color=\"#089371\" size=+2.5><b>5. Exploratory Data Analysis (EDA)<\/b><\/font>","2e669ec5":"> Important Relationships Conclusions","e980fec6":"<a id=\"6.1\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>6.1.Model Training<\/b><\/font>","41cc84f7":"<a id=\"6.2\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>6.2. Model Evaluation<\/b><\/font>\n","75d9dd2b":"- Dream Housing Finance company deals in all kinds of home loans. They have presence across all urban, semi urban and rural areas. Customer first applies for home loan and after that company validates the customer eligibility for loan.\n","72fa5e5d":"<a id=\"3\"><\/a>\n<font color=\"#089371\" size=+2.5><b>3. Assessing Data<\/b><\/font>","fa20e9e2":"<a id=\"0\"><\/a>\n<font color=\"#089371\" size=+2.5><b>0. Introduction<\/b><\/font>","a7d08f7a":"<a id=\"4.2\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>4.2. Finding Relationships<\/b><\/font>","bfdac28c":"<a id=\"6\"><\/a>\n<font color=\"#089371\" size=+2.5><b>6. Modeling<\/b><\/font>","1fcdab37":"<a id=\"5.5\"><\/a>\n<font color=\"#08B4E4\" size=+1.5><b>5.5. Split data to Train and Test Sets<\/b><\/font>","0498f5ae":"> What is our target ? \n - Company wants to automate the loan eligibility process (real time) based on customer detail provided while filling online application form.These details are Gender, Marital Status, Education, Number of Dependents, Income, Loan Amount, Credit History and others. To automate this process, they have provided a dataset to identify the customers segments that are eligible for loan amount so that they can specifically target these customers. ","f6791397":"<a id=\"2\"><\/a>\n<font color=\"#089371\" size=+2.5><b>2. Data Load<\/b><\/font>","3ec0b9fd":"![personal-loan.jpg](attachment:personal-loan.jpg)","15ff61d8":"<h1 style='text-align:center;'>Mission Succeeded<\/h1>","0bf5fee5":"- Males request loans of high value, unlike females, not exceeding 20 thousand dollars\n- Those with a credit history can apply for high-value loans\n- Married people ask for high value loans more than unmarried people","406ac13e":"> Top 5 features : \n- Credit history \n- Applicant income\n- Co-Applicant income\n- Loan amount \n- Loan amount_term ","39a6724a":"<h1><font style='color:#D52C19;' size=+2.5>T<\/font><font style='color:#FA6F14;' size=+2.5>a<\/font><font style='color:#08B4E4;' size=+2.5>b<\/font><font style='color:#73D8A6;' size=+2.5>l<\/font><font style='color:#FBBF44;' size=+2.5>e<\/font><font style='color:#D861BB;' size=+2.5> o<\/font><font style='color:#089371;' size=+2.5>f<\/font><font style='color:#0F33A3;' size=+2.5> C<\/font><font style='color:#D52C19;' size=+2.5>o<\/font><font style='color:#FA6F14;' size=+2.5>n<\/font><font style='color:#08B4E4;' size=+2.5>t<\/font><font style='color:#73D8A6;' size=+2.5>e<\/font><font style='color:#FBBF44;' size=+2.5>n<\/font><font style='color:#D861BB;' size=+2.5>t<\/font><font style='color:#089371;' size=+2.5>s<\/font><\/h1>\n    \n* [0. Introduction](#0)   \n* [1. Import Modules](#1)\n* [2. Data Load](#2)\n* [3. Assessing Data](#3)\n* [4. Exploratory Data Analysis (EDA)](#4)\n    * [4.1 Data Distripution](#4.1)\n    * [4.2 Finding Relationships](#4.2)\n    * [4.3 Conclusions](#4.3)\n* [5. Data Preprocessing](#5)\n    * [5.1 Cleansing - Missing values](#5.1)\n    * [5.2 Edit Types](#5.2)\n    * [5.3 Encoding Data](#5.3)\n    * [5.4 Feature Selection](#5.4)\n    * [5.5 Split data to Train and Test Sets](#5.5)\n    * [5.6 Feature Scaling](#5.6)\n* [6. Modeling](#6)\n    * [6.1 Model Training ](#6.1)\n    * [6.2 Model Evaluation ](#6.2)\n* [7. Deployment](#7)\n","5066fe1a":"<a id=\"5\"><\/a>\n<font color=\"#089371\" size=+2.5><b>5. Data Preprocessing<\/b><\/font>"}}