{"cell_type":{"87904b8f":"code","374abe65":"code","1d7f6beb":"code","8b616471":"code","86d64e96":"code","c99c3f11":"code","4f49ec96":"code","540e4a1a":"code","49cee440":"code","25caedeb":"code","547372ba":"code","655e039a":"code","2a4d1347":"code","dd090714":"code","550c5f56":"code","a48d0031":"code","578e11b3":"code","b0a2f3de":"code","debad2bc":"code","1e254ec1":"code","665dbec0":"code","9f9a3f44":"code","bfd88973":"code","4e20a315":"code","9b4807f2":"code","efe54f50":"code","d4d1e06c":"code","8acd173d":"code","c92057b0":"code","728df5b7":"code","1ee17938":"code","3e1d4862":"code","039f8b5d":"code","2cfffcbf":"code","fe01ffd9":"code","c92a501d":"markdown","d4c7bc27":"markdown"},"source":{"87904b8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","374abe65":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","1d7f6beb":"data = pd.read_csv(\"..\/input\/ipldataset\/matches.csv\")\ndata.head()","8b616471":"Data = pd.read_csv(\"..\/input\/ipldataset\/deliveries.csv\")\n\nData.head()","86d64e96":"season_data=data[['id','season','winner']]\n\ncomplete_data=Data.merge(season_data,how='inner',left_on='match_id',right_on='id')","c99c3f11":"data.columns.values","4f49ec96":"data = data.drop(columns=[\"umpire3\"],axis=1)\n\ndata.head()","540e4a1a":"wins_per_season = data.groupby(\"season\")[\"winner\"].value_counts()\nwins_per_season","49cee440":"plt.figure(figsize = (18,10))\nsns.countplot('season',data=data,palette=\"winter\")\nplt.title(\"Number of Matches played in each IPL season\",fontsize=20)\nplt.xlabel(\"season\",fontsize=15)\nplt.ylabel('Matches',fontsize=15)\nplt.show()","25caedeb":"plt.figure(figsize = (18,10))\nsns.countplot(x='winner',data=data, palette='cool')\nplt.title(\"Numbers of matches won by team \",fontsize=20)\nplt.xticks(rotation=50)\nplt.xlabel(\"Teams\",fontsize=15)\nplt.ylabel(\"No of wins\",fontsize=15)\nplt.show()","547372ba":"data['win_by']=np.where(data['win_by_runs']>0,'Bat first','Bowl first')","655e039a":"Win=data.win_by.value_counts()\nlabels=np.array(Win.index)\nsizes = Win.values\ncolors = ['#FFBF00', '#FA8072']\nplt.figure(figsize = (10,8))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\nplt.title('Match Result')\nplt.axis('equal')\nplt.show()","2a4d1347":"plt.figure(figsize = (18,10))\nsns.countplot('season',hue='win_by',data=data,palette='hsv')\nplt.title(\"Numbers of matches won by batting and bowling first \",fontsize=20)\nplt.xlabel(\"Season\",fontsize=15)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","dd090714":"# we will plot pie chart on Toss decision\nToss=data.toss_decision.value_counts()\nlabels=np.array(Toss.index)\nsizes = Toss.values\ncolors = ['#FFBF00', '#FA8072']\nplt.figure(figsize = (10,8))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\nplt.title('Toss result')\nplt.axis('equal')\nplt.show()","550c5f56":"# we will plot graph on Numbers of matches won by Toss result\nplt.figure(figsize = (18,10))\nsns.countplot('season',hue='toss_decision',data=data,palette='afmhot')\nplt.title(\"Numbers of matches won by Toss result \",fontsize=20)\nplt.xlabel(\"Season\",fontsize=15)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","a48d0031":"# we will print winner season wise\nfinal_matches=data.drop_duplicates(subset=['season'], keep='last')\n\nfinal_matches[['season','winner']].reset_index(drop=True).sort_values('season')","578e11b3":"# we will plot pie chart on Winning percentage in final\nmatch = final_matches.win_by.value_counts()\nlabels=np.array(Toss.index)\nsizes = match.values\ncolors = ['gold', 'purple']\nplt.figure(figsize = (10,8))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\nplt.title('Match Result')\nplt.axis('equal')\nplt.show()","b0a2f3de":"Toss=final_matches.toss_decision.value_counts()\nlabels=np.array(Toss.index)\nsizes = Toss.values\ncolors = ['#FFBF00', '#FA8072']\nplt.figure(figsize = (10,8))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\nplt.title('Toss Result')\nplt.axis('equal')\nplt.show()","debad2bc":"# we will print name of top player in IPL\nplt.figure(figsize = (18,10))\ntop_players = data.player_of_match.value_counts()[:10]\nfig, ax = plt.subplots()\nax.set_ylim([0,20])\nax.set_ylabel(\"Count\")\nax.set_title(\"Top player of the match Winners\")\ntop_players.plot.bar()\nsns.barplot(x = top_players.index, y = top_players, orient='v', palette=\"hsv\");\nplt.show()","1e254ec1":"# We will print IPL Finals venues and winners along with the number of wins.\nfinal_matches.groupby(['city','winner']).size()","665dbec0":"# we will print number of season won by teams\nfinal_matches[\"winner\"].value_counts()","9f9a3f44":"# we will print toss winner, toss decision, winner in final matches.\nfinal_matches[['toss_winner','toss_decision','winner']].reset_index(drop=True)","bfd88973":"# we will print man of the match\nfinal_matches[['winner','player_of_match']].reset_index(drop=True)","4e20a315":"len(final_matches[final_matches['toss_winner']==final_matches['winner']]['winner'])","9b4807f2":"# we will print numbers of fours hit by team\nfour_data=complete_data[complete_data['batsman_runs']==4]\nfour_data.groupby('batting_team')['batsman_runs'].agg([('runs by fours','sum'),('fours','count')])","efe54f50":"# we will plot graph on four hit by players\nbatsman_four=four_data.groupby('batsman')['batsman_runs'].agg([('four','count')]).reset_index().sort_values('four',ascending=0)\nax=batsman_four.iloc[:10,:].plot('batsman','four',kind='bar',color='black')\nplt.title(\"Numbers of fours hit by playes \",fontsize=20)\nplt.xticks(rotation=50)\nplt.xlabel(\"Player name\",fontsize=15)\nplt.ylabel(\"No of fours\",fontsize=15)\nplt.show()","d4d1e06c":"# we will plot graph on no of four hit in each season\nax=four_data.groupby('season')['batsman_runs'].agg([('four','count')]).reset_index().plot('season','four',kind='bar',color = 'red')\nplt.title(\"Numbers of fours hit in each season \",fontsize=20)\nplt.xticks(rotation=50)\nplt.xlabel(\"season\",fontsize=15)\nplt.ylabel(\"No of fours\",fontsize=15)\nplt.show()","8acd173d":"# we will print no of sixes hit by team\nsix_data=complete_data[complete_data['batsman_runs']==6]\nsix_data.groupby('batting_team')['batsman_runs'].agg([('runs by six','sum'),('sixes','count')])","c92057b0":"# we will plot graph of six hit by players\nbatsman_six=six_data.groupby('batsman')['batsman_runs'].agg([('six','count')]).reset_index().sort_values('six',ascending=0)\nax=batsman_six.iloc[:10,:].plot('batsman','six',kind='bar',color='green')\nplt.title(\"Numbers of six hit by playes \",fontsize=20)\nplt.xticks(rotation=50)\nplt.xlabel(\"Player name\",fontsize=15)\nplt.ylabel(\"No of six\",fontsize=15)\nplt.show()","728df5b7":"# we will plot graph on no of six hit in each season\nax=six_data.groupby('season')['batsman_runs'].agg([('six','count')]).reset_index().plot('season','six',kind='bar',color = 'blue')\nplt.title(\"Numbers of fours hit in each season \",fontsize=20)\nplt.xticks(rotation=50)\nplt.xlabel(\"season\",fontsize=15)\nplt.ylabel(\"No of fours\",fontsize=15)\nplt.show()","1ee17938":"# We will print the top 10 leading run scorer in IPL\nbatsman_score=Data.groupby('batsman')['batsman_runs'].agg(['sum']).reset_index().sort_values('sum',ascending=False).reset_index(drop=True)\nbatsman_score=batsman_score.rename(columns={'sum':'batsman_runs'})\nprint(\"*** Top 10 Leading Run Scorer in IPL ***\")\nbatsman_score.iloc[:10,:]","3e1d4862":"# we will print no of matches played by batsman\nNo_Matches_player= Data[[\"match_id\",\"player_dismissed\"]]\nNo_Matches_player =No_Matches_player .groupby(\"player_dismissed\")[\"match_id\"].count().reset_index().sort_values(by=\"match_id\",ascending=False).reset_index(drop=True)\nNo_Matches_player.columns=[\"batsman\",\"No_of Matches\"]\nNo_Matches_player .head(5)","039f8b5d":"# Dismissals in IPL\nplt.figure(figsize=(18,10))\nax=sns.countplot(Data.dismissal_kind)\nplt.title(\"Dismissals in IPL\",fontsize=20)\nplt.xlabel(\"Dismissals kind\",fontsize=15)\nplt.ylabel(\"count\",fontsize=15)\nplt.xticks(rotation=90)\nplt.show()","2cfffcbf":"wicket_data=Data.dropna(subset=['dismissal_kind'])\nwicket_data=wicket_data[~wicket_data['dismissal_kind'].isin(['run out','retired hurt','obstructing the field'])]","fe01ffd9":"# we will print ipl most wicket taking bowlers\nwicket_data.groupby('bowler')['dismissal_kind'].agg(['count']).reset_index().sort_values('count',ascending=False).reset_index(drop=True).iloc[:10,:]","c92a501d":"# Problem Statement\nPerform 'Exploratory data analysis' on dataset 'Indian Premier League'\nAs sports analysts,find out the most successful team,players and factors contributing win or loss of team. Suggest teams or players a company should endorse for its products. ","d4c7bc27":"# Result and Conclusion :\n* The highest number of match played in IPL season was 2013,2014,2015.\n\n* The highest number of match won by Mumbai Indians i.e 4 match out of 12 matches.\n \n* Teams which Bowl first has higher chances of winning then the team which bat first.\n \n* After winning toss more teams decide to do fielding first.\n \n* In finals teams which decide to do fielding first win the matches more then the team which bat first.\n \n* In finals most teams after winning toss decide to do fielding first.\n \n* Top player of match winning are CH gayle, AB de villers.\n \n* It is interesting that out of 12 IPL finals,9 times the team that won the toss was also the winner of IPL.\n \n* The highest number of four hit by player is Shikar Dhawan.\n \n* The highest number of six hit by player is CH gayle.\n \n* Top leading run scorer in IPL are Virat kholi, SK Raina, RG Sharma.\n \n* The highest number of matches played by player name are SK Raina, RG Sharma.\n \n* Dismissals in IPL was most by Catch out .\n\n* The IPL most wicket taken blower is SL Malinga."}}