{"cell_type":{"a359d916":"code","db0dde76":"code","f3aea20c":"code","4a822ef2":"code","69345824":"code","217fd31d":"code","d34c3e8c":"code","ca51a32a":"code","04cefc2f":"code","67a26ea2":"code","ba0be88f":"code","fe903636":"code","d55f3c93":"code","8563f154":"code","c8fab971":"code","573081b8":"code","2aff4490":"code","0348df25":"code","48aa7efb":"code","30017c74":"code","b6191450":"code","0ffe312a":"code","69fa0f44":"code","76987954":"markdown","337aa09d":"markdown","bed0d6d1":"markdown","c992bffb":"markdown","8f108b6f":"markdown","7cc3ef19":"markdown","d3f49be6":"markdown","f1e2e07e":"markdown","f71de4f2":"markdown","112747dd":"markdown","14018b10":"markdown","e4104d8b":"markdown"},"source":{"a359d916":"import numpy as np\nimport bq_helper\nfrom bq_helper import BigQueryHelper\n# https:\/\/www.kaggle.com\/sohier\/introduction-to-the-bq-helper-package\nusfs = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"usfs_fia\")","db0dde76":"bq_assistant = BigQueryHelper(\"bigquery-public-data\", \"usfs_fia\")\nbq_assistant.list_tables()","f3aea20c":"bq_assistant.table_schema(\"plot_tree\")","4a822ef2":"queryt = \"\"\"\nSELECT\n    DISTINCT measurement_year,\n    COUNT(DISTINCT species_common_name) AS ctree\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 53\n    OR plot_state_code = 06\n    OR plot_state_code = 41\n    AND measurement_year in \n        (SELECT\n            DISTINCT measurement_year\n        FROM\n            `bigquery-public-data.usfs_fia.plot_tree`\n        WHERE\n            plot_state_code = 53)\n     AND measurement_year in \n        (SELECT\n            DISTINCT measurement_year\n        FROM\n            `bigquery-public-data.usfs_fia.plot_tree`\n        WHERE\n            plot_state_code = 06)\n     AND measurement_year in \n        (SELECT\n            DISTINCT measurement_year\n        FROM\n            `bigquery-public-data.usfs_fia.plot_tree`\n        WHERE\n            plot_state_code = 41)\n\nGROUP BY\n    measurement_year\nORDER BY\n    measurement_year\n;\n        \"\"\"\nresponset = usfs.query_to_pandas_safe(queryt, max_gb_scanned=10)\nresponsett = responset.drop([0,1,2,3,4,5])\n","69345824":"# different trees in Washington\nqueryw = \"\"\"\nSELECT\n    DISTINCT measurement_year,\n    COUNT(DISTINCT species_common_name) AS w\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 53\nGROUP BY\n    measurement_year\nORDER BY\n    measurement_year\n;\n        \"\"\"\nresponsew = usfs.query_to_pandas_safe(queryw, max_gb_scanned=10)\nresponsew = responsew.drop([0,1])","217fd31d":"# different trees in California\nqueryc = \"\"\"\nSELECT\n    DISTINCT measurement_year,\n    COUNT(DISTINCT species_common_name) AS c\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 06\nGROUP BY\n    measurement_year\nORDER BY\n    measurement_year\n;\n        \"\"\"\nresponsec = usfs.query_to_pandas_safe(queryc, max_gb_scanned=10)\nresponsec = responsec.drop([0,1,2,3])","d34c3e8c":"# different trees in California\nqueryo = \"\"\"\nSELECT\n    DISTINCT measurement_year,\n    COUNT(DISTINCT species_common_name) AS o\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 41\nGROUP BY\n    measurement_year\nORDER BY\n    measurement_year\n;\n        \"\"\"\nresponseo = usfs.query_to_pandas_safe(queryo, max_gb_scanned=10)\nresponseo = responseo.drop([0,1,2,3,4])","ca51a32a":"import numpy as np\nimport matplotlib.pyplot as plt\nx = responsett[['measurement_year']]\ny = responsett[['ctree']]\nyw = responsew[['w']]\nyc = responsec[['c']]\nyo = responseo[['o']]\nplt.plot(x,y,label=\"West Coast\",color=\"gold\",linewidth=2)\nplt.plot(x,yw,label=\"Washington\",color=\"navy\",linewidth=2)\nplt.plot(x,yc,label=\"California\",color=\"firebrick\",linewidth=2)\nplt.plot(x,yo,label=\"Oregan\",color=\"olive\",linewidth=2)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Variability\")\nplt.legend()","04cefc2f":"query1 = \"\"\"\nSELECT\n    species_common_name,\n    species_group_code,\n    total_height,\n    measurement_year,\n    current_diameter,\n    latitude,\n    longitude,\n    plot_state_code,\n    plot_county_code\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 53\n    OR plot_state_code = 06\n    OR plot_state_code = 41\n    AND total_height > 0\n;\n        \"\"\"\nresponse1 = usfs.query_to_pandas_safe(query1, max_gb_scanned=10)","67a26ea2":"westtree1 = response1.dropna(axis=0,how='any')","ba0be88f":"#From 1991 - 2017, average tree height on U.S. west coast based on diferent species\n#Group together height and diameter measurements for each species taken each year\ntreeh = westtree1.groupby(['species_common_name', 'measurement_year']).agg({'current_diameter': 'mean'})\n\n# Remove tree types that have at least 14 measurements, and transpose so subplots groups species and not year\nheighttree = treeh.unstack().dropna(axis='index', thresh=14)\n\n# Rename columns to remove total_height label\nheighttree.columns = heighttree.columns.map(lambda t: t[1])\nh= heighttree.transpose().plot.bar(subplots=True, layout=(40,2), figsize=(20, 100))","fe903636":"from bokeh.models import ColumnDataSource\nfrom bokeh.models import FactorRange\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show\nfrom bokeh.transform import factor_cmap\nimport matplotlib\nimport matplotlib.pyplot as plt\noutput_notebook()\nwesttree_info = westtree1[[\"species_common_name\",\"plot_state_code\",\"measurement_year\",\"total_height\"]]\nwesttree_info[\"plot_state_code\"][westtree_info[\"plot_state_code\"]==6]=\"California\"\nwesttree_info[\"plot_state_code\"][westtree_info[\"plot_state_code\"]==41]=\"Oregon\"\nwesttree_info[\"plot_state_code\"][westtree_info[\"plot_state_code\"]==53]=\"Washington\"\ntree = westtree_info.groupby(['species_common_name',\"plot_state_code\",'measurement_year']).mean()\ntree = tree.reset_index()\ntree_type = []\nfor i in np.unique(tree[\"species_common_name\"]):\n    tree_type.append(i)\nprint(tree_type)\ndef showTreeSpe(typeOfTree):\n    state = [\"California\",\"Oregon\",\"Washington\"]\n    year = []\n    newyear = \"\"\n    for i in np.unique(tree[\"measurement_year\"][tree[\"species_common_name\"]==typeOfTree]):\n        newyear = str(i)\n        year.append(newyear)\n\n    data = {\"year\":year}\n    height = []\n    for i in state:\n        height = []\n        for j in year:\n            k = tree[(tree[\"species_common_name\"]==typeOfTree)&(tree[\"plot_state_code\"]==i)&(tree[\"measurement_year\"]==int(j))&(tree[\"total_height\"]>0)].index\n            height.append(tree[\"total_height\"][k])\n        data[i] = height\n    x = [(y, s) for y in year for s in state]\n    counts = sum(zip(data[\"California\"],data[\"Oregon\"],data[\"Washington\"]),())\n    # print(counts)\n    source = ColumnDataSource(data=dict(x=x, counts=counts))\n    p = figure(x_range=FactorRange(*x), plot_height=250,plot_width = 2500,title=typeOfTree)\n    p.vbar(x='x', top='counts', width=0.9, source=source, line_color=\"white\",\n           fill_color=factor_cmap('x', palette=['firebrick', 'olive', 'navy'], factors=state, start=1, end=2))\n    p.y_range.start = 0\n    p.x_range.range_padding = 0.1\n    p.xaxis.major_label_orientation = 1\n    p.xgrid.grid_line_color = None\n    x1 = [(y,\"California\")for y in year]\n    counts1 = sum(zip(data[\"California\"]),())\n    x2 = [(y,\"Oregon\")for y in year]\n    counts2 = sum(zip(data[\"Oregon\"]),())\n    x3 = [(y,\"Washington\")for y in year]\n    counts3 = sum(zip(data[\"Washington\"]),())\n    p.line(x=x1, y=counts1, color=\"firebrick\", line_width=1,legend=\"California\")\n    p.circle(x=x1, y=counts1, line_color=\"firebrick\", fill_color=\"white\", size=4)\n    p.line(x=x2, y=counts2, color=\"olive\", line_width=1,legend=\"Oregon\")\n    p.circle(x=x2, y=counts2, line_color=\"olive\", fill_color=\"white\", size=4)\n    p.line(x=x3, y=counts3, color=\"navy\", line_width=1,legend =\"Washington\")\n    p.circle(x=x3, y=counts3, line_color=\"navy\", fill_color=\"white\", size=4)\n    return p\n\nfrom bokeh.layouts import column\nlay = []\nfor i in tree_type:\n    p = showTreeSpe(typeOfTree = i)\n    lay.append(p)\n# p1 = showTreeSpe(typeOfTree = \"Pacific dogwood\")\n# p2 = showTreeSpe(typeOfTree = \"California live oak\")\nlayout = column(lay)\nshow(layout)\n","d55f3c93":"from bokeh.io import show\nfrom bokeh.models import ColumnDataSource, GMapOptions,HoverTool\nfrom bokeh.plotting import gmap\nfrom bokeh.plotting import output_notebook\nfrom bokeh.layouts import column\nfrom bokeh.models import ColumnDataSource\noutput_notebook()\n\nmap_options = GMapOptions(lat=35.636, lng=-120.986, map_type=\"terrain\", zoom=6)\n\n\nfor year in range(2001,2007):\n    p = gmap(\"AIzaSyABt-rVE5FZtf1e5scSw8SzxFCWYft_ViM\", map_options, title=str(year))\n    source1 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"Pacific dogwood\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source2 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"California live oak\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source3 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"Douglas-fir\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source4 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"Alaska yellow-cedar\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source5 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"Coulter pine\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source6 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"Oregon white oak\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    source7 = ColumnDataSource(data=westtree1[(westtree1[\"species_common_name\"]==\"willow spp.\") & (westtree1[\"measurement_year\"]==year)].to_dict(orient= 'list'))\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"brown\", fill_alpha=0.5, hover_line_color=\"orange\", hover_fill_color=\"orange\",source=source1,legend=\"Pacific dogwood\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"blue\", fill_alpha=0.5,hover_line_color=\"orange\", hover_fill_color=\"orange\", source=source2,legend=\"California live oak\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"#00FF00\", fill_alpha=0.5, hover_line_color=\"orange\", hover_fill_color=\"orange\",source=source3,legend=\"Douglas-fir\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"#FFFF00\", fill_alpha=0.5,hover_line_color=\"orange\", hover_fill_color=\"orange\", source=source4,legend=\"Alaska yellow-cedar\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"#CCEEFF\", fill_alpha=0.5, hover_line_color=\"orange\", hover_fill_color=\"orange\",source=source5,legend=\"Coulter pine\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"#FFE4E1\", fill_alpha=0.5,hover_line_color=\"orange\", hover_fill_color=\"orange\", source=source6,legend=\"Oregon white oak\")\n    p.circle(x=\"longitude\", y=\"latitude\", size=\"current_diameter\",line_color=\"black\", fill_color=\"#CD1076\", fill_alpha=0.5, hover_line_color=\"orange\", hover_fill_color=\"orange\",source=source7,legend=\"willow spp.\")\n    p.add_tools(HoverTool(tooltips=[(\"current_diameter\", \"@current_diameter\"), (\"total_height\", \"@total_height\"),(\"plot_county_code\",\"@plot_county_code\")]))\n    p.legend.location = \"top_right\"\n    p.legend.click_policy=\"hide\"\n\n    show(p)\n","8563f154":"import seaborn as sns\nimport matplotlib.pyplot as plt \n\n# visualize the relationship between the features and the response using scatterplots\n\nsns.pairplot(westtree1, x_vars=['measurement_year','current_diameter','species_group_code','plot_state_code'], y_vars='total_height', height=7, aspect=0.8,kind='reg')\nplt.show()","c8fab971":"new_examDf = westtree1[['current_diameter','species_group_code','plot_state_code','total_height']]\nprint(new_examDf.corr())","573081b8":"X = westtree1[['current_diameter']]\ny = westtree1[['total_height']]\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X,y)\nprint(model.coef_)\nprint(model.intercept_)","2aff4490":"from sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt \n\nX_train,X_test, y_train, y_test = train_test_split(X, y, random_state=1)\ny_train_pred = model.predict(X_train)\nplt.plot(X_train, y_train_pred, color='blue', linewidth=2, label=\"best line\")\nplt.scatter(X_train, y_train, color=\"darkgreen\", label=\"train data\")\nplt.scatter(X_test, y_test, color=\"red\", label=\"test data\")\nplt.legend(loc=2)\nplt.xlabel(\"diameter\")\nplt.ylabel(\"tree height\")\nplt.show()\n\n","0348df25":"query2 = \"\"\"\nSELECT\n    plot_state_code,\n    plot_inventory_year,\n    species_common_name,\n    uncompacted_live_crown_ratio,\n    total_height,\n    mortality_year,\n    crown_light_exposure_code,\n    crown_position_code,\n    current_diameter\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 53\n    OR plot_state_code = 06\n    OR plot_state_code = 41\n;\n        \"\"\"\nresponse2 = usfs.query_to_pandas_safe(query2, max_gb_scanned=10)\nresponse2.head(10)","48aa7efb":"westtree2 = response2.dropna(axis=0,how='any')\nwesttree2.head(10)","30017c74":"query3 = \"\"\"\nSELECT\n    plot_state_code,\n    plot_inventory_year,\n    measurement_year,\n    species_common_name,\n    species_group_code,\n    total_height,\n    mortality_year,\n    current_diameter\nFROM\n    `bigquery-public-data.usfs_fia.plot_tree`\nWHERE\n    plot_state_code = 53\n;\n        \"\"\"\nresponse3 = usfs.query_to_pandas_safe(query3, max_gb_scanned=10)\nresponse3.head(10)","b6191450":"westtree3 = response3.dropna(axis=0,how='any')","0ffe312a":"import seaborn as sns\nimport matplotlib.pyplot as plt \n\n# visualize the relationship between the features and the response using scatterplots\n\nsns.pairplot(westtree3, x_vars=['total_height','current_diameter','species_group_code'], y_vars='mortality_year', size=7, aspect=0.8,kind='reg')\nplt.show()","69fa0f44":"new_examDf1 = westtree3[['total_height','current_diameter','species_group_code','mortality_year']]\nprint(new_examDf1.corr())","76987954":"**Second,  we are going to show trees' height in each type of tree in each year of each state from 1991-2017**","337aa09d":"We can see that after we eliminate NaN value, there is nothing left in the dataset\nMeaning the data has been severe damaged and missing\nThus, we can only use diameter and height in the data set\nAnd this leads to our concern that our prediction of mortality year might be compromised.\nTherefore, we need to rethink what feature we select for our prediction.","bed0d6d1":"****West Coast Forest Analysis****","c992bffb":"Since there are a lot of NAs in the dataframe, we need to do some simple cleaning starting with delete those rows who has NA in any of the columns","8f108b6f":"**As we know, one important measurement of evaluating a tree's growth is their height and diameter.**\n\n**First we are going to display tree situation based on diameter by measurment year and species name from 1991 to 2017.**","7cc3ef19":"**Seeing from diameter and height and trees' type above, we are wondering what is the relationship between height and diameter, tree types and year. Let's find out!**","d3f49be6":"Since there are a lot of area in the U.S. has forest and westcoast of the United States of America has large moutains, we are going to focus most on forest situation on westcoast. Mostly on three sepcific states, Washingtown, California and Oregon whose state code based on FIPS are 53, 06, 41.\n","f1e2e07e":"**Map of Different Trees' Development in Years grown on U.S. west coast**","f71de4f2":"**Finally, here comes the prediction of tree mortality year **","112747dd":"**Here are some basic information about trees variaty in those three states from 2001 to 2017.**","14018b10":"We can see from the correlation table that none of those are very related to mortality year.\nThus,there is no need to do prediction with those features","e4104d8b":"We are going to use table 'plot_tree' because this is the table that contains information on both plot and trees"}}